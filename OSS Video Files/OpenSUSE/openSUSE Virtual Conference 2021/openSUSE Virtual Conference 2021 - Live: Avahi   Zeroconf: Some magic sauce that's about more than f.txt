Title: openSUSE Virtual Conference 2021 - Live: Avahi   Zeroconf: Some magic sauce that's about more than f
Publication date: 2021-06-20
Playlist: openSUSE Virtual Conference 2021
Description: 
	https://media.ccc.de/v/3507-live-avahi-zeroconf-some-magic-sauce-that-s-about-more-than-files-and-printers

Hand editing config files for local deployment? Say hi to Avahi.

**Avahi: free configuration for your network service.** 
_(Live demo included)

If you've wondered how your Desktop Linux machine "discovers" items on your network, such as printers and file shares, this session will explain Avahi: the network service advertises resources across a LAN. 

The open source version of Apple's Bonjour/Zeroconf,  is a very flexible way to enable discovery of services.

We'll discuss how we used it in our deployment tooling , and we will demonstrate how to craft a configuration to discover custom resources for consumption by client software - enabling a true zero touch service installation.

Basic networking and python knowledge advantageous, but not essential.



**Avahi: free configuration for your network service.** 
_(Live demo included)

If you've wondered how your Desktop Linux machine "discovers" items on your network, such as printers and file shares, this session will explain Avahi: the network service advertises resources across a LAN. 

The open source version of Apple's Bonjour/Zeroconf,  is a very flexible way to enable discovery of services.

We'll discuss how we used it in our deployment tooling , and we will demonstrate how to craft a configuration to discover custom resources for consumption by client software - enabling a true zero touch service installation.

Basic networking and python knowledge advantageous, but not essential.



Patrick Fitzgerald
Captions: 
	00:00:01,580 --> 00:00:05,850
[Music]

00:00:13,120 --> 00:00:17,279
good afternoon evening or

00:00:14,639 --> 00:00:18,560
morning for everyone i'm patrick

00:00:17,279 --> 00:00:21,760
fitzgerald

00:00:18,560 --> 00:00:24,800
and my my little presentation

00:00:21,760 --> 00:00:28,720
in the tiny little bit of code is

00:00:24,800 --> 00:00:32,239
all about a about zero configuration

00:00:28,720 --> 00:00:36,640
um of whatever you want not just

00:00:32,239 --> 00:00:39,360
files and printers um

00:00:36,640 --> 00:00:42,480
so yeah what the hell is uh zero

00:00:39,360 --> 00:00:42,480
configuration what's

00:00:42,719 --> 00:00:49,440
dns what's avahi what's um multicast dns

00:00:46,719 --> 00:00:50,640
um and to get to that we're going to

00:00:49,440 --> 00:00:53,520
have to go

00:00:50,640 --> 00:00:54,719
through a couple of steps so if you know

00:00:53,520 --> 00:00:56,399
a lot about networking

00:00:54,719 --> 00:00:58,559
you're going to get bored if you don't

00:00:56,399 --> 00:01:02,160
know anything um hopefully it'll

00:00:58,559 --> 00:01:03,600
be helpful um and what in our use case

00:01:02,160 --> 00:01:05,760
of uh

00:01:03,600 --> 00:01:07,760
of why we needed it what we wanted to do

00:01:05,760 --> 00:01:09,119
with it and how it's actually working

00:01:07,760 --> 00:01:12,000
very well

00:01:09,119 --> 00:01:13,200
um there are some limitations and

00:01:12,000 --> 00:01:14,479
there's a bit of code we're going to go

00:01:13,200 --> 00:01:16,720
through

00:01:14,479 --> 00:01:17,840
and we're going to do a very small demo

00:01:16,720 --> 00:01:20,960
because

00:01:17,840 --> 00:01:23,680
um well that's what i promised um but

00:01:20,960 --> 00:01:24,560
actually having done it it's not this

00:01:23,680 --> 00:01:28,960
it's it's

00:01:24,560 --> 00:01:30,880
underwhelming because it just works so

00:01:28,960 --> 00:01:32,240
this is uh this is me i'm patrick

00:01:30,880 --> 00:01:35,439
fischoency of

00:01:32,240 --> 00:01:38,560
required magic uh we specialize in

00:01:35,439 --> 00:01:42,159
large-scale linux deployments

00:01:38,560 --> 00:01:43,840
been a programmer since forever um

00:01:42,159 --> 00:01:45,680
spent about eight years working in film

00:01:43,840 --> 00:01:46,479
and television before it all went

00:01:45,680 --> 00:01:49,520
digital

00:01:46,479 --> 00:01:51,360
um and a friend of mine once

00:01:49,520 --> 00:01:52,880
described me as being creative in all

00:01:51,360 --> 00:01:55,119
directions but i'm not sure if

00:01:52,880 --> 00:01:56,799
he was insulting me or complimenting me

00:01:55,119 --> 00:01:59,439
i'm not sure about that

00:01:56,799 --> 00:02:02,159
um some of the things i've done uh in

00:01:59,439 --> 00:02:04,320
2010 we built uh

00:02:02,159 --> 00:02:05,840
with a colleague we built an open source

00:02:04,320 --> 00:02:09,679
cloud based on

00:02:05,840 --> 00:02:11,520
on suse linux and it's still running in

00:02:09,679 --> 00:02:12,959
data centers in both zurich and london

00:02:11,520 --> 00:02:16,560
and it's got some

00:02:12,959 --> 00:02:20,000
large financial uh institutions using

00:02:16,560 --> 00:02:21,920
a third-party software package that

00:02:20,000 --> 00:02:23,040
were basically the people we're hosting

00:02:21,920 --> 00:02:26,480
for

00:02:23,040 --> 00:02:30,560
um and i'm also a

00:02:26,480 --> 00:02:33,040
refugee uh because of brexit um because

00:02:30,560 --> 00:02:34,239
about about six months ago i realized it

00:02:33,040 --> 00:02:37,519
was all turning

00:02:34,239 --> 00:02:40,879
uh quite sour and the relationship

00:02:37,519 --> 00:02:44,000
from britain to the rest of the world is

00:02:40,879 --> 00:02:47,680
troubling to say the least

00:02:44,000 --> 00:02:51,040
um so i've moved to germany um and uh

00:02:47,680 --> 00:02:54,720
enjoying it very much and

00:02:51,040 --> 00:02:58,239
i'm a survivor of many things not

00:02:54,720 --> 00:03:01,280
including a cardiac arrest that happened

00:02:58,239 --> 00:03:05,120
around this time two years ago

00:03:01,280 --> 00:03:08,510
but that's something for a drink later

00:03:05,120 --> 00:03:10,400
so bonjour as apple like to say

00:03:08,510 --> 00:03:12,959
[Music]

00:03:10,400 --> 00:03:14,800
it's it was actually i think it was

00:03:12,959 --> 00:03:18,480
originally designed by apple

00:03:14,800 --> 00:03:20,400
um and when you connect your laptop

00:03:18,480 --> 00:03:21,840
you can see a printer and you can also

00:03:20,400 --> 00:03:24,560
see other devices

00:03:21,840 --> 00:03:25,840
that are on the on the on your same

00:03:24,560 --> 00:03:27,360
network and you're saying network

00:03:25,840 --> 00:03:29,680
segment

00:03:27,360 --> 00:03:32,879
um if you've got a mac which i don't

00:03:29,680 --> 00:03:32,879
that i understand that

00:03:33,680 --> 00:03:36,720
you you turn it on and if you've got a

00:03:36,080 --> 00:03:38,959
time

00:03:36,720 --> 00:03:40,640
time machine backup it finds it

00:03:38,959 --> 00:03:44,400
automatically and how does it

00:03:40,640 --> 00:03:48,319
how does your computer know where your

00:03:44,400 --> 00:03:48,319
another device is on the network

00:03:48,560 --> 00:03:52,879
um and of course you plug in a linux or

00:03:51,440 --> 00:03:56,080
window or mac system and you can see

00:03:52,879 --> 00:03:58,799
other hosts on the on the same network

00:03:56,080 --> 00:03:59,680
what's that how does that little piece

00:03:58,799 --> 00:04:02,799
of magic

00:03:59,680 --> 00:04:07,040
work because it's not necessarily

00:04:02,799 --> 00:04:08,560
an obvious thing for it to to to be done

00:04:07,040 --> 00:04:10,080
and if you're you know why do you care

00:04:08,560 --> 00:04:11,840
well if you're not a developer

00:04:10,080 --> 00:04:13,200
or a product designer you've probably

00:04:11,840 --> 00:04:14,879
got no interest in this so you should

00:04:13,200 --> 00:04:18,320
head to the bar anyway

00:04:14,879 --> 00:04:18,880
um but it's it's just a bit of

00:04:18,320 --> 00:04:21,840
interesting

00:04:18,880 --> 00:04:23,280
uh work that we we had to do because

00:04:21,840 --> 00:04:26,160
we're doing a large-scale

00:04:23,280 --> 00:04:27,199
implementation of some of of linux

00:04:26,160 --> 00:04:30,400
across

00:04:27,199 --> 00:04:30,400
thousands of desktops

00:04:30,560 --> 00:04:32,800
so

00:04:33,759 --> 00:04:37,680
the way this works is is two

00:04:36,720 --> 00:04:41,199
technologies

00:04:37,680 --> 00:04:45,600
one is called multicast dns or mdns

00:04:41,199 --> 00:04:47,919
and the dns service discovery or dns sd

00:04:45,600 --> 00:04:49,759
that's been implemented in all the major

00:04:47,919 --> 00:04:54,479
desktop platforms for

00:04:49,759 --> 00:04:57,840
some time way back in 2002 with the mac

00:04:54,479 --> 00:05:01,120
and windows is kind of taking its time

00:04:57,840 --> 00:05:01,840
and gradually implementing it i can't

00:05:01,120 --> 00:05:04,639
imagine

00:05:01,840 --> 00:05:04,960
why it's taking so long for windows to

00:05:04,639 --> 00:05:08,160
get

00:05:04,960 --> 00:05:09,680
everything working it's very simple

00:05:08,160 --> 00:05:11,680
protocol

00:05:09,680 --> 00:05:14,320
they probably had their own ideas as to

00:05:11,680 --> 00:05:17,520
what to do and how to do it

00:05:14,320 --> 00:05:17,520
like microsoft tend to do

00:05:18,160 --> 00:05:21,919
but it the the protocol itself is very

00:05:20,560 --> 00:05:25,600
simple

00:05:21,919 --> 00:05:29,039
and it works similar things have been

00:05:25,600 --> 00:05:31,600
developed to do similar things in

00:05:29,039 --> 00:05:33,280
in different environments for example

00:05:31,600 --> 00:05:36,320
your computer will also

00:05:33,280 --> 00:05:39,680
uh depending on on how you've how you've

00:05:36,320 --> 00:05:41,919
got it all set up may discover your tv

00:05:39,680 --> 00:05:43,199
um your tv might discover your storage

00:05:41,919 --> 00:05:46,240
device

00:05:43,199 --> 00:05:49,520
um and not offer to to connect to it

00:05:46,240 --> 00:05:51,520
um or to your music players

00:05:49,520 --> 00:05:53,120
um and that's you know this is they're

00:05:51,520 --> 00:05:54,400
all different implementations of the

00:05:53,120 --> 00:05:56,960
same thing

00:05:54,400 --> 00:05:57,840
which is i've got something to offer you

00:05:56,960 --> 00:06:00,080
i've got a

00:05:57,840 --> 00:06:03,440
service i need to offer you how can how

00:06:00,080 --> 00:06:03,440
can i tell you about it

00:06:04,840 --> 00:06:11,120
so so

00:06:07,680 --> 00:06:14,960
this is just a bit of a bit of a detail

00:06:11,120 --> 00:06:19,199
um and a simple trip down network lane

00:06:14,960 --> 00:06:22,240
um so a local area network is defined as

00:06:19,199 --> 00:06:23,600
a was technically defined as a broadcast

00:06:22,240 --> 00:06:26,319
domain

00:06:23,600 --> 00:06:26,960
but that's defined by a bunch of

00:06:26,319 --> 00:06:30,639
computers

00:06:26,960 --> 00:06:34,400
networked together with a router

00:06:30,639 --> 00:06:37,520
at one end and everything that has to go

00:06:34,400 --> 00:06:37,919
off the network goes through that router

00:06:37,520 --> 00:06:39,759
or

00:06:37,919 --> 00:06:42,319
multiple routers in an enterprise

00:06:39,759 --> 00:06:42,319
situation

00:06:44,479 --> 00:06:51,360
atlan and i know this because i was

00:06:47,600 --> 00:06:55,360
programming network code 20 years ago

00:06:51,360 --> 00:06:57,360
in assembler um it's different sorts of

00:06:55,360 --> 00:06:59,440
packets are sent across at local area

00:06:57,360 --> 00:07:03,120
network and i'm simplifying here

00:06:59,440 --> 00:07:05,680
because there's a

00:07:03,120 --> 00:07:08,080
this is all based on tcpip there are

00:07:05,680 --> 00:07:08,080
similar

00:07:08,160 --> 00:07:10,560
similar

00:07:11,199 --> 00:07:16,240
architecture that exists at layer 2 but

00:07:14,720 --> 00:07:18,639
the layout the network layer that we're

00:07:16,240 --> 00:07:21,759
interested in is tcprp

00:07:18,639 --> 00:07:22,479
um so it does does broadcast and the

00:07:21,759 --> 00:07:26,319
broadcast

00:07:22,479 --> 00:07:30,240
is essentially sending a packet

00:07:26,319 --> 00:07:33,440
to every machine on the network

00:07:30,240 --> 00:07:35,280
now that

00:07:33,440 --> 00:07:36,800
if you're in a switched environment or

00:07:35,280 --> 00:07:37,360
or in a hub environment if you're in a

00:07:36,800 --> 00:07:39,440
hub

00:07:37,360 --> 00:07:41,120
you're connected to a hub not a network

00:07:39,440 --> 00:07:41,440
switch which most people have switches

00:07:41,120 --> 00:07:44,080
now

00:07:41,440 --> 00:07:45,840
in fact 99 of i think networking

00:07:44,080 --> 00:07:49,120
installations are switched

00:07:45,840 --> 00:07:51,199
um but if you're a hub

00:07:49,120 --> 00:07:53,440
i send you a packet as a broadcast and

00:07:51,199 --> 00:07:55,320
every machine on the network gets that

00:07:53,440 --> 00:07:56,879
broadcast

00:07:55,320 --> 00:08:00,319
[Music]

00:07:56,879 --> 00:08:01,490
similarly um it works the same way on

00:08:00,319 --> 00:08:03,440
the switch

00:08:01,490 --> 00:08:06,720
[Music]

00:08:03,440 --> 00:08:10,160
but the broadcast is is something that

00:08:06,720 --> 00:08:13,199
the machine and the network card is told

00:08:10,160 --> 00:08:15,199
to to listen to and listen for

00:08:13,199 --> 00:08:17,039
because it's something important and it

00:08:15,199 --> 00:08:19,280
might be something

00:08:17,039 --> 00:08:20,879
similar simple like um yeah i want to

00:08:19,280 --> 00:08:22,560
get you know i

00:08:20,879 --> 00:08:23,759
in fact i can't tell you the the

00:08:22,560 --> 00:08:24,800
circumstances where they use

00:08:23,759 --> 00:08:26,160
broadcasting but

00:08:24,800 --> 00:08:27,759
it's something like when you join a

00:08:26,160 --> 00:08:29,599
computer when you start a computer up in

00:08:27,759 --> 00:08:32,640
my center broadcast

00:08:29,599 --> 00:08:34,399
uh to get pixie information or something

00:08:32,640 --> 00:08:37,839
like that

00:08:34,399 --> 00:08:41,279
multicasting is similar to

00:08:37,839 --> 00:08:45,760
to a broadcast um

00:08:41,279 --> 00:08:47,279
and it's it's sent to a certain address

00:08:45,760 --> 00:08:48,959
but that certain address is then

00:08:47,279 --> 00:08:51,440
distributed across all the

00:08:48,959 --> 00:08:52,800
connected hosts that are turned on now

00:08:51,440 --> 00:08:54,480
the reason why there are two different

00:08:52,800 --> 00:08:57,680
types of that

00:08:54,480 --> 00:09:00,720
is because a broadcast is almost

00:08:57,680 --> 00:09:02,240
always a non-routable so your broadcast

00:09:00,720 --> 00:09:04,560
will get to the router

00:09:02,240 --> 00:09:07,040
or router i'm strenuous i can say it

00:09:04,560 --> 00:09:07,040
either way

00:09:07,519 --> 00:09:13,519
and it stops at the ritter

00:09:10,800 --> 00:09:14,959
um because there's a there's a slide

00:09:13,519 --> 00:09:17,860
coming up

00:09:14,959 --> 00:09:19,200
right yeah there we go chaos um

00:09:17,860 --> 00:09:23,040
[Music]

00:09:19,200 --> 00:09:25,120
but um yeah it's it's uh

00:09:23,040 --> 00:09:27,120
typically it's non-routable because you

00:09:25,120 --> 00:09:30,240
don't want those kind of broadcasts

00:09:27,120 --> 00:09:31,600
uh to escape to other networks

00:09:30,240 --> 00:09:35,040
multicasting is

00:09:31,600 --> 00:09:37,839
is also similar is pretty well typically

00:09:35,040 --> 00:09:39,440
non-routable as well and a unicast is

00:09:37,839 --> 00:09:41,760
when you send one

00:09:39,440 --> 00:09:44,959
a packet from my machine to your machine

00:09:41,760 --> 00:09:47,760
and no one else knows about it

00:09:44,959 --> 00:09:48,560
so but in all cases there has to be a

00:09:47,760 --> 00:09:51,680
service

00:09:48,560 --> 00:09:54,959
a network service or or a um

00:09:51,680 --> 00:09:57,839
an application sitting

00:09:54,959 --> 00:09:59,519
on the on this on the system uh that is

00:09:57,839 --> 00:10:00,399
receiving the information receiving the

00:09:59,519 --> 00:10:03,600
packet

00:10:00,399 --> 00:10:04,800
otherwise it is accepted by the by the

00:10:03,600 --> 00:10:08,800
network

00:10:04,800 --> 00:10:11,360
card and rejected at some point

00:10:08,800 --> 00:10:11,839
um so yeah broadcast packet is sent to

00:10:11,360 --> 00:10:14,640
all

00:10:11,839 --> 00:10:15,279
in all addresses um and the thing is

00:10:14,640 --> 00:10:18,800
about that

00:10:15,279 --> 00:10:20,480
it consumes cpu so even if there's

00:10:18,800 --> 00:10:21,920
nothing running on that machine that

00:10:20,480 --> 00:10:25,120
accepts that packet

00:10:21,920 --> 00:10:27,440
the networking interface card

00:10:25,120 --> 00:10:28,720
has to accept that packet and then

00:10:27,440 --> 00:10:31,040
pushes it up

00:10:28,720 --> 00:10:32,959
from the hardware into the software

00:10:31,040 --> 00:10:34,480
through firmware into the software that

00:10:32,959 --> 00:10:36,800
the operating system is

00:10:34,480 --> 00:10:37,760
and the operating system says i've got

00:10:36,800 --> 00:10:39,519
nothing to do

00:10:37,760 --> 00:10:41,760
with this packet i don't know what it is

00:10:39,519 --> 00:10:44,560
or it says oh yeah i've got something

00:10:41,760 --> 00:10:44,560
that will accept that

00:10:45,040 --> 00:10:49,360
so broadcast is quite well back in the

00:10:48,320 --> 00:10:52,720
day when i was doing it

00:10:49,360 --> 00:10:54,800
you could have a um you know

00:10:52,720 --> 00:10:56,480
if everyone's broadcasting it would

00:10:54,800 --> 00:11:00,000
physically slow down the system

00:10:56,480 --> 00:11:04,000
it also a lot of uh a lot of

00:11:00,000 --> 00:11:07,440
network protocols require a

00:11:04,000 --> 00:11:09,200
then a broadcast to be ext

00:11:07,440 --> 00:11:11,279
to be answered by another broadcast and

00:11:09,200 --> 00:11:15,360
if you get into that kind of situation

00:11:11,279 --> 00:11:18,399
it ends it ends up in in packet hell

00:11:15,360 --> 00:11:22,000
um so

00:11:18,399 --> 00:11:25,279
the same thing happens with multicast um

00:11:22,000 --> 00:11:27,040
and again it goes up to the

00:11:25,279 --> 00:11:28,560
top the network stack to discover if

00:11:27,040 --> 00:11:31,760
something's working

00:11:28,560 --> 00:11:33,839
um now routable or readable uh

00:11:31,760 --> 00:11:35,519
broadcasts i mean what happens

00:11:33,839 --> 00:11:37,040
why would you stop that the router and

00:11:35,519 --> 00:11:39,200
why would you stop a multicast

00:11:37,040 --> 00:11:41,040
packet at the root because perhaps there

00:11:39,200 --> 00:11:42,399
are things you know you could send to

00:11:41,040 --> 00:11:43,920
everyone and you don't have to send it

00:11:42,399 --> 00:11:47,519
you don't have to get a list

00:11:43,920 --> 00:11:50,959
of everyone you send it once

00:11:47,519 --> 00:11:52,560
um and if you

00:11:50,959 --> 00:11:55,200
you've been paying attention to what

00:11:52,560 --> 00:11:58,399
i've been saying then you'll end up with

00:11:55,200 --> 00:12:01,519
absolute chaos because if

00:11:58,399 --> 00:12:02,399
network rooters and and your bridges to

00:12:01,519 --> 00:12:04,880
your

00:12:02,399 --> 00:12:06,560
connected to your broadband networks

00:12:04,880 --> 00:12:07,760
could see every other computer on the

00:12:06,560 --> 00:12:11,440
internet

00:12:07,760 --> 00:12:13,279
you know no one will get anything done

00:12:11,440 --> 00:12:14,079
literally it is like everyone's yelling

00:12:13,279 --> 00:12:16,800
at you

00:12:14,079 --> 00:12:18,399
broadcasting information at you um and

00:12:16,800 --> 00:12:18,959
you're trying to listen that's the worst

00:12:18,399 --> 00:12:22,079
thing is

00:12:18,959 --> 00:12:25,680
every machine every node on the network

00:12:22,079 --> 00:12:26,480
has to listen to what everyone else has

00:12:25,680 --> 00:12:29,839
got to say

00:12:26,480 --> 00:12:30,560
and pretty soon um you know you can't

00:12:29,839 --> 00:12:33,440
actually

00:12:30,560 --> 00:12:34,880
communicate with anything um you can go

00:12:33,440 --> 00:12:37,200
to the broadcast storm

00:12:34,880 --> 00:12:39,839
page on on wikipedia it's a well-known

00:12:37,200 --> 00:12:39,839
thing

00:12:40,480 --> 00:12:43,519
and of course so there are multiple

00:12:42,399 --> 00:12:48,040
standards um

00:12:43,519 --> 00:12:51,440
it's just a a bit of a comic there from

00:12:48,040 --> 00:12:53,120
xkcd um it's

00:12:51,440 --> 00:12:54,800
yeah as i said before there are multiple

00:12:53,120 --> 00:12:57,680
standards for multiple

00:12:54,800 --> 00:12:59,440
industries that have all had their own

00:12:57,680 --> 00:13:01,920
ideas as to

00:12:59,440 --> 00:13:02,880
what is you know they've got something

00:13:01,920 --> 00:13:06,720
they want to plug on

00:13:02,880 --> 00:13:08,959
plug into a home network how do we

00:13:06,720 --> 00:13:10,399
make that you know a lot of it is

00:13:08,959 --> 00:13:13,519
probably proprietary

00:13:10,399 --> 00:13:16,639
and and not open source and

00:13:13,519 --> 00:13:21,200
um and gradually they're coming

00:13:16,639 --> 00:13:24,160
they're coming down into a a uh

00:13:21,200 --> 00:13:27,040
and a common standard which is actually

00:13:24,160 --> 00:13:34,639
called zero conf

00:13:27,040 --> 00:13:38,800
let's get some water

00:13:34,639 --> 00:13:42,480
so what so with how do we get to

00:13:38,800 --> 00:13:44,560
this um how we've got a linux

00:13:42,480 --> 00:13:46,560
deployment tool called snoopier because

00:13:44,560 --> 00:13:50,560
we can't think of anything better for it

00:13:46,560 --> 00:13:51,920
to call it um and one of the use cases

00:13:50,560 --> 00:13:53,600
was

00:13:51,920 --> 00:13:55,040
rather than just doing a deployment of

00:13:53,600 --> 00:13:58,000
linux onto

00:13:55,040 --> 00:13:59,199
a thousand or ten thousand um

00:13:58,000 --> 00:14:01,839
workstations

00:13:59,199 --> 00:14:04,399
if we're doing that then we could inject

00:14:01,839 --> 00:14:08,079
a monitoring tool

00:14:04,399 --> 00:14:10,880
and return information

00:14:08,079 --> 00:14:12,240
about all sorts of things back to a

00:14:10,880 --> 00:14:14,399
centralized node

00:14:12,240 --> 00:14:16,079
so it could be managed better we could

00:14:14,399 --> 00:14:18,000
get disk based

00:14:16,079 --> 00:14:19,839
warnings all these kind of things that

00:14:18,000 --> 00:14:22,880
every other management

00:14:19,839 --> 00:14:26,160
tool has but this is

00:14:22,880 --> 00:14:27,930
usually for edge devices and and

00:14:26,160 --> 00:14:29,199
workstation devices

00:14:27,930 --> 00:14:32,399
[Music]

00:14:29,199 --> 00:14:34,000
and you know we we we saw some other

00:14:32,399 --> 00:14:35,839
some very interesting ways that we could

00:14:34,000 --> 00:14:38,320
use

00:14:35,839 --> 00:14:39,760
a an agent in on the machine so we we

00:14:38,320 --> 00:14:44,480
started writing one

00:14:39,760 --> 00:14:48,399
um but one of the things is um

00:14:44,480 --> 00:14:50,959
how does so on every network that uh

00:14:48,399 --> 00:14:52,959
that we install onto you have to have a

00:14:50,959 --> 00:14:54,880
and it could be a virtual machine or

00:14:52,959 --> 00:14:58,160
just a server node or a sync

00:14:54,880 --> 00:14:59,680
node that then talks to the cloud

00:14:58,160 --> 00:15:01,920
service that we offer

00:14:59,680 --> 00:15:03,760
um or if you're doing it locally at the

00:15:01,920 --> 00:15:07,120
local service

00:15:03,760 --> 00:15:10,160
um instead of making everything

00:15:07,120 --> 00:15:14,160
uh hand editing

00:15:10,160 --> 00:15:16,399
the the uh the location of the server's

00:15:14,160 --> 00:15:17,760
ip address or the sync service ip

00:15:16,399 --> 00:15:19,839
address

00:15:17,760 --> 00:15:21,199
um we just figured there's got to be a

00:15:19,839 --> 00:15:24,480
better way um

00:15:21,199 --> 00:15:27,519
because in a corporate environment an

00:15:24,480 --> 00:15:30,480
enterprise environment we wanted to be

00:15:27,519 --> 00:15:30,800
we wanted to slip in the software and

00:15:30,480 --> 00:15:32,880
the

00:15:30,800 --> 00:15:33,920
the ability to to do what we're trying

00:15:32,880 --> 00:15:35,680
to do

00:15:33,920 --> 00:15:38,000
under not under the radar but it might

00:15:35,680 --> 00:15:39,040
as well be you know the harder it is for

00:15:38,000 --> 00:15:41,600
someone to

00:15:39,040 --> 00:15:43,279
to deploy deploy a tool you know in an

00:15:41,600 --> 00:15:47,279
enterprise environment

00:15:43,279 --> 00:15:49,440
the less likely it is to be accepted um

00:15:47,279 --> 00:15:50,480
and that was that was one of the things

00:15:49,440 --> 00:15:52,320
was driving the

00:15:50,480 --> 00:15:53,759
development is how do we make everything

00:15:52,320 --> 00:15:55,759
as easy as possible

00:15:53,759 --> 00:15:56,959
so instead of doing a deployment and

00:15:55,759 --> 00:16:01,440
then running you know

00:15:56,959 --> 00:16:04,720
a another tool that will then write

00:16:01,440 --> 00:16:08,800
its own configuration file that points

00:16:04,720 --> 00:16:09,600
the the um the node management software

00:16:08,800 --> 00:16:11,680
to

00:16:09,600 --> 00:16:14,000
to the appropriate ip address we just

00:16:11,680 --> 00:16:17,199
thought maybe we should look at

00:16:14,000 --> 00:16:18,800
xeroconf um and

00:16:17,199 --> 00:16:21,040
where everything we've written is in

00:16:18,800 --> 00:16:24,079
python um and

00:16:21,040 --> 00:16:26,160
we did some we came across an uh

00:16:24,079 --> 00:16:27,440
i think there are multiple libraries um

00:16:26,160 --> 00:16:30,639
there's one called xeroconf

00:16:27,440 --> 00:16:34,720
um and it's super

00:16:30,639 --> 00:16:34,720
simple to to use

00:16:35,600 --> 00:16:42,000
so what is

00:16:38,800 --> 00:16:45,360
like multicast dns and

00:16:42,000 --> 00:16:48,560
dns service discovery so

00:16:45,360 --> 00:16:50,240
multicast uses a multicast packet or

00:16:48,560 --> 00:16:54,560
several packets

00:16:50,240 --> 00:16:57,759
to query host names on the same subnet

00:16:54,560 --> 00:16:59,759
usually that is provided by a dns

00:16:57,759 --> 00:17:03,120
service

00:16:59,759 --> 00:17:04,079
and thinking bearing in mind the whole

00:17:03,120 --> 00:17:07,919
thing that i just said

00:17:04,079 --> 00:17:11,120
before about enterprise and

00:17:07,919 --> 00:17:14,000
trying not to change anything um or as

00:17:11,120 --> 00:17:16,959
little as possible if you're in a

00:17:14,000 --> 00:17:18,079
i mean with one of the major customers

00:17:16,959 --> 00:17:21,760
is a

00:17:18,079 --> 00:17:24,079
is a bank um and

00:17:21,760 --> 00:17:25,679
they had i mean whenever we're talking

00:17:24,079 --> 00:17:27,280
to them we had to get

00:17:25,679 --> 00:17:28,799
three different representative

00:17:27,280 --> 00:17:29,600
representatives from three different

00:17:28,799 --> 00:17:33,039
departments

00:17:29,600 --> 00:17:36,000
so it was the hardware people it was the

00:17:33,039 --> 00:17:37,280
the uh the authentication and active

00:17:36,000 --> 00:17:41,120
directory people

00:17:37,280 --> 00:17:45,520
and the client uh the client manager

00:17:41,120 --> 00:17:47,919
and if we needed to um

00:17:45,520 --> 00:17:49,280
the networking people as well who are

00:17:47,919 --> 00:17:51,280
generally in charge of

00:17:49,280 --> 00:17:52,320
dns although if you're an active

00:17:51,280 --> 00:17:53,919
directory

00:17:52,320 --> 00:17:56,080
but you're making changes to active

00:17:53,919 --> 00:17:59,520
directory making changes to dns

00:17:56,080 --> 00:18:01,440
if everyone if it was

00:17:59,520 --> 00:18:02,799
not everyone wants to do it in fact

00:18:01,440 --> 00:18:03,440
everyone wants to do as little as

00:18:02,799 --> 00:18:08,400
possible

00:18:03,440 --> 00:18:11,600
to be honest so we had to find a way

00:18:08,400 --> 00:18:14,000
to provide to get the hostname

00:18:11,600 --> 00:18:15,200
of every machine that is running our

00:18:14,000 --> 00:18:18,080
software

00:18:15,200 --> 00:18:19,520
or at least the other way around to find

00:18:18,080 --> 00:18:22,880
to find the host

00:18:19,520 --> 00:18:24,400
that every machine needed to talk to

00:18:22,880 --> 00:18:26,000
they don't need to talk to each other

00:18:24,400 --> 00:18:28,720
they just need to talk to our

00:18:26,000 --> 00:18:30,000
service that's sitting on their network

00:18:28,720 --> 00:18:33,280
um

00:18:30,000 --> 00:18:35,120
so we ask the question

00:18:33,280 --> 00:18:36,720
and the network tells us and then we ask

00:18:35,120 --> 00:18:39,440
the question

00:18:36,720 --> 00:18:41,360
service you know what the server dns sd

00:18:39,440 --> 00:18:42,080
does which is it basically says are you

00:18:41,360 --> 00:18:47,280
running this

00:18:42,080 --> 00:18:47,280
service and can i use that service

00:18:48,320 --> 00:18:51,440
and what port are you running at and

00:18:49,679 --> 00:18:56,559
what's your ip address

00:18:51,440 --> 00:18:59,760
now dns sd works with regular dns and

00:18:56,559 --> 00:19:02,640
multicast theaters um in

00:18:59,760 --> 00:19:03,840
in all these scenarios uh you'll have a

00:19:02,640 --> 00:19:07,039
dns server

00:19:03,840 --> 00:19:08,880
but for example if you've got 8.8.8.8 as

00:19:07,039 --> 00:19:10,400
your dns server there is no way that

00:19:08,880 --> 00:19:13,760
you're going to be able to convince

00:19:10,400 --> 00:19:16,960
google to to tell your local

00:19:13,760 --> 00:19:18,640
network where where your

00:19:16,960 --> 00:19:20,240
where your sniffy sync server is for

00:19:18,640 --> 00:19:24,240
example

00:19:20,240 --> 00:19:25,120
so we put a text file or can be built

00:19:24,240 --> 00:19:28,400
into the code

00:19:25,120 --> 00:19:31,520
um at the server end we can say

00:19:28,400 --> 00:19:33,520
we're doing this this kind of

00:19:31,520 --> 00:19:35,200
we're offering this service at this ip

00:19:33,520 --> 00:19:38,000
address um

00:19:35,200 --> 00:19:38,400
come and find it dns works the same way

00:19:38,000 --> 00:19:40,400
with

00:19:38,400 --> 00:19:41,840
if you know anything about dns there's

00:19:40,400 --> 00:19:45,600
such things as

00:19:41,840 --> 00:19:48,320
srv and text records um

00:19:45,600 --> 00:19:50,400
and they're they're things you send you

00:19:48,320 --> 00:19:53,760
you apply to your dns server

00:19:50,400 --> 00:19:57,520
and say this is the

00:19:53,760 --> 00:19:59,760
uh you know the location of

00:19:57,520 --> 00:20:00,559
an active directory server for example

00:19:59,760 --> 00:20:03,919
or

00:20:00,559 --> 00:20:05,600
um or a configuration information which

00:20:03,919 --> 00:20:08,400
is stored in the text that text

00:20:05,600 --> 00:20:09,440
txt record and that's um one of the

00:20:08,400 --> 00:20:11,520
things that you

00:20:09,440 --> 00:20:12,880
you come across if you're doing what's

00:20:11,520 --> 00:20:15,919
called the

00:20:12,880 --> 00:20:19,600
the um the certificate

00:20:15,919 --> 00:20:22,480
um cert bot configurations for

00:20:19,600 --> 00:20:23,760
um let's encrypt um if you're doing a

00:20:22,480 --> 00:20:25,720
[Music]

00:20:23,760 --> 00:20:29,679
a domain-wide um

00:20:25,720 --> 00:20:31,760
[Music]

00:20:29,679 --> 00:20:33,280
building a certificate for a domain-wide

00:20:31,760 --> 00:20:37,039
thing so like star dot

00:20:33,280 --> 00:20:41,120
requirement um you have to put

00:20:37,039 --> 00:20:43,360
some text into your dns record so they

00:20:41,120 --> 00:20:44,880
can look at and go oh okay so that's the

00:20:43,360 --> 00:20:47,600
key that i need to

00:20:44,880 --> 00:20:48,159
to build to do the to build the

00:20:47,600 --> 00:20:51,679
subscript

00:20:48,159 --> 00:20:55,039
the certificate um so then

00:20:51,679 --> 00:20:56,559
as i said the the micro dns or the

00:20:55,039 --> 00:20:59,700
macros are the uh

00:20:56,559 --> 00:21:00,960
the multicast dns program

00:20:59,700 --> 00:21:04,080
[Music]

00:21:00,960 --> 00:21:05,200
asks the network who the host is um and

00:21:04,080 --> 00:21:07,200
then

00:21:05,200 --> 00:21:08,240
it has this conversation about what what

00:21:07,200 --> 00:21:11,760
it's got and

00:21:08,240 --> 00:21:11,760
how how do i connect to it

00:21:12,880 --> 00:21:17,520
so we're rapidly a lot faster than i

00:21:15,200 --> 00:21:21,440
expected

00:21:17,520 --> 00:21:26,000
getting to the code um

00:21:21,440 --> 00:21:27,330
so how simple is the code i mean it's

00:21:26,000 --> 00:21:29,280
the server is

00:21:27,330 --> 00:21:33,039
[Music]

00:21:29,280 --> 00:21:36,559
yeah i mean that's that's all you do

00:21:33,039 --> 00:21:39,120
in a python program to say

00:21:36,559 --> 00:21:40,320
this is what i'm offering um we can go

00:21:39,120 --> 00:21:41,120
through it i'm not sure if you can see

00:21:40,320 --> 00:21:43,600
the pointer

00:21:41,120 --> 00:21:44,240
i probably can't and i can't see any

00:21:43,600 --> 00:21:47,840
comments

00:21:44,240 --> 00:21:47,840
um because my screen's too small

00:21:49,360 --> 00:21:54,159
but you import the zero conf service

00:21:52,670 --> 00:21:58,240
[Music]

00:21:54,159 --> 00:22:01,520
and you create an instance of it

00:21:58,240 --> 00:22:04,000
and then you say this is what

00:22:01,520 --> 00:22:04,960
um you know there's a we've got a

00:22:04,000 --> 00:22:07,919
settings file

00:22:04,960 --> 00:22:09,039
which basically says this is the site ui

00:22:07,919 --> 00:22:12,000
uuid

00:22:09,039 --> 00:22:14,080
um which is sending now it's settings

00:22:12,000 --> 00:22:18,159
file

00:22:14,080 --> 00:22:21,360
and a label which is a broker host

00:22:18,159 --> 00:22:25,120
and the service info is magic

00:22:21,360 --> 00:22:28,400
sync and there what follows that bit

00:22:25,120 --> 00:22:32,720
is specifically is specific to

00:22:28,400 --> 00:22:32,720
you know every single um

00:22:33,840 --> 00:22:38,400
mdns entry or zero conf entry has

00:22:37,360 --> 00:22:41,039
something like that

00:22:38,400 --> 00:22:42,000
and that says that this is a tcp it's an

00:22:41,039 --> 00:22:44,170
exchange

00:22:42,000 --> 00:22:45,679
a transactional

00:22:44,170 --> 00:22:49,280
[Music]

00:22:45,679 --> 00:22:52,799
message or packet sending um

00:22:49,280 --> 00:22:56,400
and the identifier and the other

00:22:52,799 --> 00:22:58,240
thing here is the dot local um dot local

00:22:56,400 --> 00:22:58,880
is one of the key things of that because

00:22:58,240 --> 00:23:01,200
it's a

00:22:58,880 --> 00:23:02,320
it's dot local is actually for your

00:23:01,200 --> 00:23:05,200
local

00:23:02,320 --> 00:23:05,760
area um your local area network and your

00:23:05,200 --> 00:23:08,720
home

00:23:05,760 --> 00:23:10,880
or any other thing so people must make

00:23:08,720 --> 00:23:14,240
mistakes when they think that

00:23:10,880 --> 00:23:17,679
defining it in in their dns settings in

00:23:14,240 --> 00:23:19,520
in an enterprise environment um

00:23:17,679 --> 00:23:22,240
is helpful and it actually isn't

00:23:19,520 --> 00:23:25,679
shouldn't do that

00:23:22,240 --> 00:23:28,559
so um so so we look up um

00:23:25,679 --> 00:23:29,360
some of the details now what our client

00:23:28,559 --> 00:23:30,799
software

00:23:29,360 --> 00:23:32,799
that client software and the server

00:23:30,799 --> 00:23:37,840
software is trying to send information

00:23:32,799 --> 00:23:37,840
backwards and forwards using um

00:23:38,240 --> 00:23:41,919
let's just uh let's see what

00:23:42,400 --> 00:23:47,360
i've just had a mental block about the

00:23:45,200 --> 00:23:50,640
um

00:23:47,360 --> 00:23:53,840
mqtt that's it um so mqtt

00:23:50,640 --> 00:23:56,880
is a is a very lightweight message

00:23:53,840 --> 00:24:00,159
passing system message queuing system

00:23:56,880 --> 00:24:01,440
and that's how we we we send messages

00:24:00,159 --> 00:24:05,360
backwards and forwards

00:24:01,440 --> 00:24:07,540
um from the client to the to the server

00:24:05,360 --> 00:24:08,640
and backwards and forwards from that um

00:24:07,540 --> 00:24:11,760
[Music]

00:24:08,640 --> 00:24:13,600
and that's the port number one one

00:24:11,760 --> 00:24:15,440
eight eight three that's the default

00:24:13,600 --> 00:24:19,919
port we could change that um

00:24:15,440 --> 00:24:19,919
in the settings if we wanted to um

00:24:20,080 --> 00:24:23,919
and the description is multi is

00:24:22,279 --> 00:24:27,360
magicsync.local

00:24:23,919 --> 00:24:28,480
so then we we have these two functions

00:24:27,360 --> 00:24:30,400
the defined

00:24:28,480 --> 00:24:32,799
uh at the beginning of the program

00:24:30,400 --> 00:24:37,760
linking loop in the server

00:24:32,799 --> 00:24:40,640
um one is uh init zero um

00:24:37,760 --> 00:24:42,880
and that's basically in it initiating

00:24:40,640 --> 00:24:46,400
the um

00:24:42,880 --> 00:24:46,400
the the

00:24:47,520 --> 00:24:51,120
service um so i registered and if

00:24:50,320 --> 00:24:55,039
there's a problem

00:24:51,120 --> 00:24:58,400
of course you you lock that um

00:24:55,039 --> 00:24:59,120
and then at the end of uh the program

00:24:58,400 --> 00:25:00,640
loop when you're

00:24:59,120 --> 00:25:02,880
when you're closing everything down then

00:25:00,640 --> 00:25:06,159
obviously you you'd be nice and

00:25:02,880 --> 00:25:06,640
unregistered the service from from the

00:25:06,159 --> 00:25:09,360
uh

00:25:06,640 --> 00:25:09,360
from the system

00:25:12,640 --> 00:25:16,320
so that i'm not sure if anyone can see

00:25:14,480 --> 00:25:20,080
that if there's zoom in if possible

00:25:16,320 --> 00:25:20,080
um i think i can zoom in

00:25:21,039 --> 00:25:28,080
um but there are two pages to this code

00:25:25,200 --> 00:25:28,799
um and it's a lot of it is actually just

00:25:28,080 --> 00:25:32,480
comments

00:25:28,799 --> 00:25:36,159
um and it's basically

00:25:32,480 --> 00:25:38,320
super simple get a list of devices get a

00:25:36,159 --> 00:25:39,600
remove the service start the service

00:25:38,320 --> 00:25:41,760
count the number of

00:25:39,600 --> 00:25:44,320
servers that are offering the service

00:25:41,760 --> 00:25:48,480
because it might not be just one

00:25:44,320 --> 00:25:51,039
um and then you add the service to

00:25:48,480 --> 00:25:52,080
to the uh you return what the service

00:25:51,039 --> 00:25:54,799
details are

00:25:52,080 --> 00:25:55,760
having been asked and this magic

00:25:54,799 --> 00:25:59,679
listener

00:25:55,760 --> 00:26:02,000
class is how this is the the

00:25:59,679 --> 00:26:04,400
as complex as a guest to start the

00:26:02,000 --> 00:26:04,400
service

00:26:04,880 --> 00:26:08,840
um and then this is where we where we

00:26:07,679 --> 00:26:12,080
call that magic

00:26:08,840 --> 00:26:14,559
listener class and we say

00:26:12,080 --> 00:26:16,240
uh you know maximum number of servers is

00:26:14,559 --> 00:26:17,600
five and it's a five second part of the

00:26:16,240 --> 00:26:20,480
timeout

00:26:17,600 --> 00:26:21,760
um and it just basically says start

00:26:20,480 --> 00:26:23,520
listener

00:26:21,760 --> 00:26:25,120
and then come back if there's if there's

00:26:23,520 --> 00:26:25,919
nothing it'll come back if there is

00:26:25,120 --> 00:26:28,960
something

00:26:25,919 --> 00:26:28,960
that's returned

00:26:29,840 --> 00:26:33,279
and that's that's as complex as it seems

00:26:32,720 --> 00:26:36,960
to get

00:26:33,279 --> 00:26:38,559
um and then this is a

00:26:36,960 --> 00:26:40,320
there's a mixture of stuff here that you

00:26:38,559 --> 00:26:43,600
probably you may have

00:26:40,320 --> 00:26:45,840
seen um and it

00:26:43,600 --> 00:26:48,320
so the client the client makes a request

00:26:45,840 --> 00:26:51,200
and it comes back as a json packet

00:26:48,320 --> 00:26:54,080
just saying this is the location for the

00:26:51,200 --> 00:26:57,360
service that you need to contact

00:26:54,080 --> 00:26:58,480
this is the port that you need to talk

00:26:57,360 --> 00:27:00,559
to

00:26:58,480 --> 00:27:02,080
um weight and priority if they're

00:27:00,559 --> 00:27:02,559
different are different services that i

00:27:02,080 --> 00:27:04,159
haven't

00:27:02,559 --> 00:27:05,840
actually got to the bottom of those yet

00:27:04,159 --> 00:27:08,080
because i've got this is working

00:27:05,840 --> 00:27:11,760
perfectly when we first did it so

00:27:08,080 --> 00:27:14,799
there's no point to go any further um

00:27:11,760 --> 00:27:18,559
and uh the site the

00:27:14,799 --> 00:27:22,080
the x 35 bcu is actually the host name

00:27:18,559 --> 00:27:23,279
and the broker host is the is the it ip

00:27:22,080 --> 00:27:24,960
address

00:27:23,279 --> 00:27:27,440
so it talks it finds that all that

00:27:24,960 --> 00:27:31,039
information just from starting up

00:27:27,440 --> 00:27:34,159
with no configuration whatsoever

00:27:31,039 --> 00:27:36,480
and it sets things that you would

00:27:34,159 --> 00:27:39,600
normally have to put into a text file

00:27:36,480 --> 00:27:42,320
um and then our code then writes the

00:27:39,600 --> 00:27:44,159
configuration configuration file um so

00:27:42,320 --> 00:27:44,799
it doesn't necessarily have to refer to

00:27:44,159 --> 00:27:49,600
it again

00:27:44,799 --> 00:27:53,520
uh by doing the service the

00:27:49,600 --> 00:27:57,919
zero conf stuff but it does anyway um

00:27:53,520 --> 00:27:59,600
and um we could change this means also

00:27:57,919 --> 00:28:00,640
that we can change the location of the

00:27:59,600 --> 00:28:03,679
server

00:28:00,640 --> 00:28:05,200
um we could change the port number um we

00:28:03,679 --> 00:28:07,679
could put in multiple

00:28:05,200 --> 00:28:09,600
servers or multiple uh on multiple ip

00:28:07,679 --> 00:28:12,640
addresses or multiple ports

00:28:09,600 --> 00:28:14,840
it's all just you put this kind of

00:28:12,640 --> 00:28:16,880
these couple of pages into your python

00:28:14,840 --> 00:28:18,480
code

00:28:16,880 --> 00:28:20,720
[Music]

00:28:18,480 --> 00:28:22,080
and you'll end up and you've got this

00:28:20,720 --> 00:28:24,559
similar service sitting

00:28:22,080 --> 00:28:25,360
on the server side you'll then be able

00:28:24,559 --> 00:28:27,679
to

00:28:25,360 --> 00:28:29,679
do everything zero configuration like

00:28:27,679 --> 00:28:33,600
this and you'll get the information back

00:28:29,679 --> 00:28:34,720
it's it's i love it

00:28:33,600 --> 00:28:37,760
um and that's actually the end of the

00:28:34,720 --> 00:28:42,480
presentation but it's not because

00:28:37,760 --> 00:28:45,679
in theory if i go over here

00:28:42,480 --> 00:28:50,399
i can give you a very brief

00:28:45,679 --> 00:28:53,760
demonstration of this and uh well

00:28:50,399 --> 00:28:53,760
let's make that larger

00:28:56,840 --> 00:28:59,840
so

00:29:00,480 --> 00:29:08,480
we've got the this is the server

00:29:03,679 --> 00:29:08,480
and this side is the client

00:29:10,720 --> 00:29:14,320
um and unfortunately

00:29:14,640 --> 00:29:18,559
due to a um out of all out of all things

00:29:17,279 --> 00:29:20,960
to happen

00:29:18,559 --> 00:29:21,919
a uh a networking error or a network

00:29:20,960 --> 00:29:25,360
problem that i've got

00:29:21,919 --> 00:29:28,159
at home um i'm have to

00:29:25,360 --> 00:29:28,640
connect to a client site don't tell them

00:29:28,159 --> 00:29:31,919
um

00:29:28,640 --> 00:29:33,600
to do this to demonstrate this um this

00:29:31,919 --> 00:29:35,039
particular version of sniffy sync

00:29:33,600 --> 00:29:38,320
doesn't have

00:29:35,039 --> 00:29:38,320
any um

00:29:42,399 --> 00:29:45,600
there's no logging so it's almost

00:29:44,640 --> 00:29:47,440
pointless not

00:29:45,600 --> 00:29:48,799
you know showing you because the log

00:29:47,440 --> 00:29:55,840
doesn't come come up

00:29:48,799 --> 00:29:55,840
um i can go there

00:29:56,640 --> 00:30:08,960
so you won't actually see anything

00:29:58,240 --> 00:30:10,640
change at the server side

00:30:08,960 --> 00:30:12,159
um there'll probably be some ferreros

00:30:10,640 --> 00:30:14,880
that pop up but they're they're

00:30:12,159 --> 00:30:16,320
irrelevant um there's nothing really but

00:30:14,880 --> 00:30:17,200
what you're seeing there are things that

00:30:16,320 --> 00:30:20,799
have been sent

00:30:17,200 --> 00:30:25,039
from different uh

00:30:20,799 --> 00:30:28,240
oh there's an error um but

00:30:25,039 --> 00:30:31,440
this is a client there actually is

00:30:28,240 --> 00:30:32,640
it's this is the sync server subscribing

00:30:31,440 --> 00:30:35,360
to

00:30:32,640 --> 00:30:36,000
the mqtt server which is running on the

00:30:35,360 --> 00:30:39,360
same machine

00:30:36,000 --> 00:30:40,559
so it's not not very dramatic not very

00:30:39,360 --> 00:30:43,760
interesting

00:30:40,559 --> 00:30:48,159
um but here on the client side

00:30:43,760 --> 00:30:48,159
it's kind of where it gets it gets cool

00:30:49,360 --> 00:30:52,720
so we'll restart that and then

00:30:50,720 --> 00:30:56,320
immediately

00:30:52,720 --> 00:31:00,640
call the log and you'll see there

00:30:56,320 --> 00:31:02,720
it's checking for

00:31:00,640 --> 00:31:04,240
zero conf services and has found them

00:31:02,720 --> 00:31:07,519
it's found one because there's one

00:31:04,240 --> 00:31:09,600
and it's there at that and it

00:31:07,519 --> 00:31:11,440
writes the and it's already sending this

00:31:09,600 --> 00:31:13,039
information to the server

00:31:11,440 --> 00:31:15,039
as i said there's no i don't think

00:31:13,039 --> 00:31:15,360
there's any indication that's receiving

00:31:15,039 --> 00:31:18,480
that

00:31:15,360 --> 00:31:20,640
maybe um published stats i think is one

00:31:18,480 --> 00:31:24,320
of the things that goes up upstream

00:31:20,640 --> 00:31:27,039
um but it sent all that information

00:31:24,320 --> 00:31:27,360
immediately you know upon subscription

00:31:27,039 --> 00:31:30,720
to

00:31:27,360 --> 00:31:33,120
the service and it does this on a

00:31:30,720 --> 00:31:33,760
regular basis which is on our system

00:31:33,120 --> 00:31:37,120
this

00:31:33,760 --> 00:31:39,840
is uh his hand and uh it's a

00:31:37,120 --> 00:31:41,760
it's configurable so you can do it um

00:31:39,840 --> 00:31:43,440
and you'll also see that they're running

00:31:41,760 --> 00:31:45,840
an old version of leap so we'll have to

00:31:43,440 --> 00:31:49,200
fix that

00:31:45,840 --> 00:31:52,720
and yeah

00:31:49,200 --> 00:31:57,039
so that's kind of it in terms of

00:31:52,720 --> 00:31:57,039
the way it all works um

00:31:58,840 --> 00:32:01,840
and

00:32:02,640 --> 00:32:05,699
[Music]

00:32:05,919 --> 00:32:09,919
so yeah that's that's kind of it

00:32:12,000 --> 00:32:15,840
so i'm just going back to the

00:32:17,760 --> 00:32:22,080
so i think that's kind of that's the

00:32:19,600 --> 00:32:25,840
that's the presentation um

00:32:22,080 --> 00:32:29,390
and i can uh answer some questions

00:32:25,840 --> 00:32:30,640
at the uh in the in the chat room

00:32:29,390 --> 00:32:42,480
[Music]

00:32:30,640 --> 00:32:42,480

YouTube URL: https://www.youtube.com/watch?v=Nw2jdC36wnA


