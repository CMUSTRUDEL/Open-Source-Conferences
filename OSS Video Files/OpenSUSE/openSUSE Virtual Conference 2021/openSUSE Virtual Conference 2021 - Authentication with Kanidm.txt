Title: openSUSE Virtual Conference 2021 - Authentication with Kanidm
Publication date: 2021-06-19
Playlist: openSUSE Virtual Conference 2021
Description: 
	https://media.ccc.de/v/3451-authentication-with-kanidm

IDM above the Sea

Authentication and Identity Management are at the core of our systems security. Everyday we all authenticate to many systems, from out phones and laptops, to websites, servers and much more.

Kanidm is a new opensource IDM system that is developing rapidly, and promises many new features previously only found in cloud and identity as a service platforms. This includes webauthn, claims, ssh management, and much more. In this talk we'll demonstrate many of the features of this platform, how it's begun to integrate with opensuse, how it was made possible, and what the future holds for this growing project. 

Authentication and Identity Management are at the core of our systems security. Everyday we all authenticate to many systems, from out phones and laptops, to websites, servers and much more.

Kanidm is a new opensource IDM system that is developing rapidly, and promises many new features previously only found in cloud and identity as a service platforms. This includes webauthn, claims, ssh management, and much more. In this talk we'll demonstrate many of the features of this platform, how it's begun to integrate with opensuse, how it was made possible, and what the future holds for this growing project. 

William Brown
Captions: 
	00:00:01,580 --> 00:00:05,850
[Music]

00:00:07,839 --> 00:00:11,200
hi

00:00:08,720 --> 00:00:12,240
welcome to my session uh here at open

00:00:11,200 --> 00:00:14,719
source

00:00:12,240 --> 00:00:15,679
conference which is on authentication

00:00:14,719 --> 00:00:18,720
with kanye dm

00:00:15,679 --> 00:00:21,520
or identity management above the sea

00:00:18,720 --> 00:00:22,880
who am i my name is william brown i'm a

00:00:21,520 --> 00:00:26,000
senior software engineer

00:00:22,880 --> 00:00:28,000
at souza labs in my day job at souza

00:00:26,000 --> 00:00:29,599
i work on 389 directory server which is

00:00:28,000 --> 00:00:31,599
one of the major ldap servers used in

00:00:29,599 --> 00:00:33,280
open source today

00:00:31,599 --> 00:00:34,880
i'm based in queensland australia which

00:00:33,280 --> 00:00:35,840
means it's pretty likely that i haven't

00:00:34,880 --> 00:00:38,399
met most of you

00:00:35,840 --> 00:00:39,760
or interacted with a lot of you this is

00:00:38,399 --> 00:00:41,120
generally because i am asleep at the

00:00:39,760 --> 00:00:42,239
times when you're active and awake

00:00:41,120 --> 00:00:43,360
because i live on the other side of the

00:00:42,239 --> 00:00:45,520
planet

00:00:43,360 --> 00:00:47,360
so my preferred time zone as a result is

00:00:45,520 --> 00:00:48,960
utc plus 10. so if you want to get in

00:00:47,360 --> 00:00:49,840
contact with me and have any questions

00:00:48,960 --> 00:00:52,079
about this

00:00:49,840 --> 00:00:52,960
presentation please send me an email at

00:00:52,079 --> 00:00:57,680
w brown

00:00:52,960 --> 00:00:59,359
souza.de now all of us would probably be

00:00:57,680 --> 00:01:00,879
pretty familiar with a screen that looks

00:00:59,359 --> 00:01:03,280
something like this

00:01:00,879 --> 00:01:04,159
where when we access one of our laptops

00:01:03,280 --> 00:01:06,159
or computers

00:01:04,159 --> 00:01:07,680
we're asked to provide a username and

00:01:06,159 --> 00:01:10,159
password to identify

00:01:07,680 --> 00:01:12,400
ourselves and this isn't just something

00:01:10,159 --> 00:01:14,479
which we do in our personal devices

00:01:12,400 --> 00:01:15,680
this kind of idea of authenticating and

00:01:14,479 --> 00:01:18,720
interacting with things

00:01:15,680 --> 00:01:19,680
really spans the world around us for

00:01:18,720 --> 00:01:22,799
example

00:01:19,680 --> 00:01:25,759
universities large businesses banks

00:01:22,799 --> 00:01:26,000
bookstores even financial transactions

00:01:25,759 --> 00:01:29,200
all

00:01:26,000 --> 00:01:31,040
require some kind of authentication for

00:01:29,200 --> 00:01:32,799
us to interact with and use those

00:01:31,040 --> 00:01:34,400
systems

00:01:32,799 --> 00:01:36,560
authentication has been a really

00:01:34,400 --> 00:01:37,680
critical part of computer security for a

00:01:36,560 --> 00:01:42,159
long time

00:01:37,680 --> 00:01:44,479
and it originated in 1961

00:01:42,159 --> 00:01:46,000
with mit's compatible time sharing

00:01:44,479 --> 00:01:48,640
system

00:01:46,000 --> 00:01:49,920
see this idea of authenticating to a

00:01:48,640 --> 00:01:52,720
computer system

00:01:49,920 --> 00:01:54,159
really started around the idea of how do

00:01:52,720 --> 00:01:57,200
we manage who has access

00:01:54,159 --> 00:01:57,200
to what resources

00:01:57,439 --> 00:02:01,759
the um system in pitch in question uh

00:02:00,320 --> 00:02:04,320
which is pictured

00:02:01,759 --> 00:02:05,119
it uh had a finite amount of computing

00:02:04,320 --> 00:02:06,960
resource

00:02:05,119 --> 00:02:09,039
and so as a result people were asked to

00:02:06,960 --> 00:02:12,319
log in and that login

00:02:09,039 --> 00:02:14,800
would grant a set of limits or resources

00:02:12,319 --> 00:02:17,120
as to how much cpu time and memory that

00:02:14,800 --> 00:02:19,200
individual could use

00:02:17,120 --> 00:02:21,040
this idea of authenticating to gain

00:02:19,200 --> 00:02:22,480
access to a set of resources

00:02:21,040 --> 00:02:25,280
is really still why we have

00:02:22,480 --> 00:02:27,120
authentication to computer systems today

00:02:25,280 --> 00:02:29,760
and those resources can really value in

00:02:27,120 --> 00:02:32,319
what can really vary in what they are

00:02:29,760 --> 00:02:33,200
for example when you authenticate to

00:02:32,319 --> 00:02:35,120
your phone

00:02:33,200 --> 00:02:36,720
you're accessing a resource which is to

00:02:35,120 --> 00:02:38,080
do with generally private content and

00:02:36,720 --> 00:02:40,319
private information such as your

00:02:38,080 --> 00:02:42,239
messages and phone calls

00:02:40,319 --> 00:02:43,440
when you access your laptop it could be

00:02:42,239 --> 00:02:45,440
that you're accessing

00:02:43,440 --> 00:02:47,280
private documents or you don't want

00:02:45,440 --> 00:02:49,040
somebody else to be using your compute

00:02:47,280 --> 00:02:51,280
resource or your gpu resource because

00:02:49,040 --> 00:02:53,360
that's for you to play games on

00:02:51,280 --> 00:02:54,800
or even when you're a business we need

00:02:53,360 --> 00:02:55,599
to authenticate to systems within a

00:02:54,800 --> 00:02:57,200
workplace

00:02:55,599 --> 00:02:59,360
because we may have access to things

00:02:57,200 --> 00:03:00,319
like customer data or security sensitive

00:02:59,360 --> 00:03:02,480
materials

00:03:00,319 --> 00:03:03,360
and we need to limit who is able to

00:03:02,480 --> 00:03:05,599
access what

00:03:03,360 --> 00:03:06,560
as well as identifying who has accessed

00:03:05,599 --> 00:03:08,879
what

00:03:06,560 --> 00:03:10,319
but authentication really is the

00:03:08,879 --> 00:03:12,800
fundamental thing

00:03:10,319 --> 00:03:14,159
that underpins all of our system

00:03:12,800 --> 00:03:16,400
security

00:03:14,159 --> 00:03:18,000
when humans are interacting with that

00:03:16,400 --> 00:03:20,000
system and so that we can

00:03:18,000 --> 00:03:22,400
look at who is doing what and what are

00:03:20,000 --> 00:03:25,519
people allowed to do

00:03:22,400 --> 00:03:26,080
within open source we've had two major

00:03:25,519 --> 00:03:30,080
ways

00:03:26,080 --> 00:03:33,120
of identifying ourselves to systems

00:03:30,080 --> 00:03:34,080
the first major one is ldap ldap is a

00:03:33,120 --> 00:03:36,560
binary protocol

00:03:34,080 --> 00:03:39,519
very similar to sql or http and it

00:03:36,560 --> 00:03:42,480
allows accessing a directory database

00:03:39,519 --> 00:03:43,680
which is very similar to a phone book

00:03:42,480 --> 00:03:46,319
this phone book

00:03:43,680 --> 00:03:47,120
or directory contains a set of users and

00:03:46,319 --> 00:03:49,360
groups

00:03:47,120 --> 00:03:51,280
and this allows computers that are

00:03:49,360 --> 00:03:53,680
connected to read that ldap server to

00:03:51,280 --> 00:03:55,760
identify what users and groups may exist

00:03:53,680 --> 00:03:57,760
and then of course that user and group

00:03:55,760 --> 00:04:00,000
information can be used to determine

00:03:57,760 --> 00:04:03,360
what access or resources that individual

00:04:00,000 --> 00:04:05,040
has the ability to use

00:04:03,360 --> 00:04:06,640
as a side effect of the way that ldap

00:04:05,040 --> 00:04:07,920
works it is also possible to check

00:04:06,640 --> 00:04:09,840
user's passwords

00:04:07,920 --> 00:04:12,159
through the which is associated to their

00:04:09,840 --> 00:04:12,159
account

00:04:12,640 --> 00:04:17,759
ldap was created in 1997 as a successor

00:04:15,840 --> 00:04:21,199
to the directory access protocol

00:04:17,759 --> 00:04:23,600
which is part of the x 500 standards

00:04:21,199 --> 00:04:25,520
x 500 are a series of standards created

00:04:23,600 --> 00:04:27,600
by the international telecom union

00:04:25,520 --> 00:04:28,639
and covers a lot of things like x x509

00:04:27,600 --> 00:04:31,120
certificates

00:04:28,639 --> 00:04:33,040
in fact x509 certificates were intended

00:04:31,120 --> 00:04:37,120
to be the authentication mechanism

00:04:33,040 --> 00:04:37,120
for authenticating to a directory

00:04:37,600 --> 00:04:41,120
the data in one of these directories is

00:04:39,280 --> 00:04:43,040
not structured the same way

00:04:41,120 --> 00:04:45,520
as a table like in sql but it's much

00:04:43,040 --> 00:04:47,840
closer to json

00:04:45,520 --> 00:04:49,520
these objects or entries contain a lot

00:04:47,840 --> 00:04:51,280
of key value pairs

00:04:49,520 --> 00:04:54,720
and the content of what key value pairs

00:04:51,280 --> 00:04:56,960
can exist is defined by a schema

00:04:54,720 --> 00:04:58,320
in addition these entries can be nested

00:04:56,960 --> 00:05:00,160
and structured into a tree

00:04:58,320 --> 00:05:01,600
allowing hierarchical organizations

00:05:00,160 --> 00:05:04,000
searching capabilities

00:05:01,600 --> 00:05:04,960
which is really um allows a lot of rich

00:05:04,000 --> 00:05:09,600
kind of

00:05:04,960 --> 00:05:09,600
querying and structural elements to ldap

00:05:09,680 --> 00:05:13,680
the other major authentication protocol

00:05:11,440 --> 00:05:15,759
that we've used heavily in open source

00:05:13,680 --> 00:05:17,039
is kerberos and it was invented in the

00:05:15,759 --> 00:05:19,039
1980s

00:05:17,039 --> 00:05:22,720
its current iteration of the protocol

00:05:19,039 --> 00:05:24,320
version 5 was created in 1993.

00:05:22,720 --> 00:05:26,160
see this is actually a bit pretty

00:05:24,320 --> 00:05:29,039
important because ssl and tls

00:05:26,160 --> 00:05:30,880
weren't created until 1995. and back in

00:05:29,039 --> 00:05:32,800
the 90s and early 2000s

00:05:30,880 --> 00:05:34,320
cryptographic operations were expensive

00:05:32,800 --> 00:05:36,840
on cpus anyway

00:05:34,320 --> 00:05:38,000
so tls for all connections wasn't always

00:05:36,840 --> 00:05:39,759
feasible

00:05:38,000 --> 00:05:41,280
this led to kerbos being developed as a

00:05:39,759 --> 00:05:43,360
way to authenticate

00:05:41,280 --> 00:05:45,199
over an insecure network where traffic

00:05:43,360 --> 00:05:45,919
was actively being intercepted and

00:05:45,199 --> 00:05:47,600
viewed

00:05:45,919 --> 00:05:49,600
so kerberos is a system that allows

00:05:47,600 --> 00:05:52,000
authentication without ever transmitting

00:05:49,600 --> 00:05:54,240
the password over the network

00:05:52,000 --> 00:05:55,840
it was later made possible for kobros to

00:05:54,240 --> 00:05:58,080
install network encryption layers

00:05:55,840 --> 00:05:59,840
very similar to what tls does today

00:05:58,080 --> 00:06:01,680
where effectively kobros becomes your

00:05:59,840 --> 00:06:05,039
route of trust rather than a certificate

00:06:01,680 --> 00:06:05,039
authority like we have today

00:06:05,680 --> 00:06:10,160
these protocols are used widely in open

00:06:07,919 --> 00:06:12,319
source but the four major

00:06:10,160 --> 00:06:14,240
identity management systems that really

00:06:12,319 --> 00:06:15,600
take these protocols and build systems

00:06:14,240 --> 00:06:18,960
up and around them

00:06:15,600 --> 00:06:21,680
are open ldap free ipa samba and 389

00:06:18,960 --> 00:06:23,600
directory server

00:06:21,680 --> 00:06:25,919
it's very likely that if you have an

00:06:23,600 --> 00:06:28,000
open source identity management system

00:06:25,919 --> 00:06:30,240
it probably has one of these four

00:06:28,000 --> 00:06:32,000
components in some way shape or form

00:06:30,240 --> 00:06:34,240
now there certainly are others but these

00:06:32,000 --> 00:06:37,039
are probably the big four so

00:06:34,240 --> 00:06:38,560
openldap is the original and kind of de

00:06:37,039 --> 00:06:40,639
facto ldap standard

00:06:38,560 --> 00:06:42,240
it's actually derived from the original

00:06:40,639 --> 00:06:44,800
code

00:06:42,240 --> 00:06:46,319
where ldap was originally invented from

00:06:44,800 --> 00:06:49,520
389 directory server

00:06:46,319 --> 00:06:51,840
is a another ldap server which is

00:06:49,520 --> 00:06:54,240
developed and has a different lineage in

00:06:51,840 --> 00:06:56,960
history and is now developed actively by

00:06:54,240 --> 00:06:59,360
suser and other companies

00:06:56,960 --> 00:07:01,520
free ipa is an open source identity

00:06:59,360 --> 00:07:02,000
management project which combines 309

00:07:01,520 --> 00:07:04,400
directory

00:07:02,000 --> 00:07:05,520
server mit cobros and a number of other

00:07:04,400 --> 00:07:08,400
parts to make

00:07:05,520 --> 00:07:09,440
a full you know out of box identity

00:07:08,400 --> 00:07:12,720
management stack

00:07:09,440 --> 00:07:14,800
that people can deploy and use and samba

00:07:12,720 --> 00:07:17,840
4 is a really interesting one

00:07:14,800 --> 00:07:19,360
this is a combination of heimdal

00:07:17,840 --> 00:07:22,400
kerberos

00:07:19,360 --> 00:07:24,080
and a customized ldap server which is

00:07:22,400 --> 00:07:26,160
actually a re-implementation of

00:07:24,080 --> 00:07:26,880
microsoft's active directory so it's a

00:07:26,160 --> 00:07:28,639
clean room

00:07:26,880 --> 00:07:30,479
open source implementation of the

00:07:28,639 --> 00:07:33,840
protocols that are

00:07:30,479 --> 00:07:33,840
microsoft active directory

00:07:34,319 --> 00:07:38,479
and all of these and the others uh

00:07:36,720 --> 00:07:39,919
technologies within open source have

00:07:38,479 --> 00:07:40,479
actually worked really well for a long

00:07:39,919 --> 00:07:41,919
time

00:07:40,479 --> 00:07:44,400
and there's a lot of reasons why they

00:07:41,919 --> 00:07:45,919
have they have great performance and

00:07:44,400 --> 00:07:48,960
availability

00:07:45,919 --> 00:07:50,720
these systems tend to have active active

00:07:48,960 --> 00:07:52,080
eventually consistent replication and

00:07:50,720 --> 00:07:54,400
that means you can have

00:07:52,080 --> 00:07:55,199
very wide geographic distribution of

00:07:54,400 --> 00:07:57,360
your servers

00:07:55,199 --> 00:07:59,840
which gives you a lot of access and

00:07:57,360 --> 00:08:02,160
uptime and reliability

00:07:59,840 --> 00:08:04,319
they're all extensible you can extend

00:08:02,160 --> 00:08:04,800
the database schema for your business's

00:08:04,319 --> 00:08:06,800
needs

00:08:04,800 --> 00:08:09,120
you can add extra attributes and you can

00:08:06,800 --> 00:08:12,960
really build a very flexible system

00:08:09,120 --> 00:08:15,680
which is correct or representative of

00:08:12,960 --> 00:08:16,879
your use case and they're widely

00:08:15,680 --> 00:08:18,720
compatible

00:08:16,879 --> 00:08:20,560
you know it's very rare to find a piece

00:08:18,720 --> 00:08:22,879
of software that does not have an ldap

00:08:20,560 --> 00:08:25,520
authentication plugin available for it

00:08:22,879 --> 00:08:27,039
and so as a result because of this it's

00:08:25,520 --> 00:08:28,879
very common for a business to go well it

00:08:27,039 --> 00:08:30,000
has to have ldap as support

00:08:28,879 --> 00:08:30,960
because else all of our other

00:08:30,000 --> 00:08:32,640
applications won't be able to

00:08:30,960 --> 00:08:34,159
authenticate

00:08:32,640 --> 00:08:36,240
and it's because of these things that

00:08:34,159 --> 00:08:39,039
have worked really well this idea

00:08:36,240 --> 00:08:40,159
exists that authentication is considered

00:08:39,039 --> 00:08:43,360
solved or

00:08:40,159 --> 00:08:46,720
boring because you know all of these

00:08:43,360 --> 00:08:46,720
things have just worked

00:08:47,839 --> 00:08:54,399
so here is the timeline of how these

00:08:50,240 --> 00:08:58,880
projects were developed and introduced

00:08:54,399 --> 00:08:59,760
openldap from 1997 389 in 2005 free ipa

00:08:58,880 --> 00:09:03,120
in 2008

00:08:59,760 --> 00:09:05,279
and some before in 2012. now the world

00:09:03,120 --> 00:09:06,640
is not just comprised of open source

00:09:05,279 --> 00:09:08,320
there have been a lot of other things

00:09:06,640 --> 00:09:10,240
that have changed within identity

00:09:08,320 --> 00:09:12,720
management

00:09:10,240 --> 00:09:14,480
in parallel we've seen a lot of other

00:09:12,720 --> 00:09:15,440
things especially in proprietary

00:09:14,480 --> 00:09:17,360
technologies

00:09:15,440 --> 00:09:19,200
developing in identity management and

00:09:17,360 --> 00:09:21,920
authentication systems

00:09:19,200 --> 00:09:22,240
we see the rise of open id and owath we

00:09:21,920 --> 00:09:23,519
see

00:09:22,240 --> 00:09:26,080
identity as a service through things

00:09:23,519 --> 00:09:27,440
like g suite octa ortho and azure active

00:09:26,080 --> 00:09:29,040
directory sync

00:09:27,440 --> 00:09:30,240
and we start to see the rise of

00:09:29,040 --> 00:09:31,920
hardware-backed cryptographic

00:09:30,240 --> 00:09:32,560
authenticators with things like windows

00:09:31,920 --> 00:09:36,640
hello

00:09:32,560 --> 00:09:37,920
apple's touch id and web authen

00:09:36,640 --> 00:09:39,519
now what's really interesting about

00:09:37,920 --> 00:09:40,959
these is that a lot of these things are

00:09:39,519 --> 00:09:43,200
very clean slate

00:09:40,959 --> 00:09:45,200
you know oauth and open id are single

00:09:43,200 --> 00:09:48,880
sign-on mechanisms but they don't take

00:09:45,200 --> 00:09:50,399
anything from kobras for example

00:09:48,880 --> 00:09:51,920
most of these identities or service

00:09:50,399 --> 00:09:53,360
platforms are all clean

00:09:51,920 --> 00:09:55,360
slate and they might have ldap

00:09:53,360 --> 00:09:57,279
compatibility gateways in some cases

00:09:55,360 --> 00:09:58,800
but most of them do not they're all web

00:09:57,279 --> 00:10:01,760
first

00:09:58,800 --> 00:10:03,519
and all of these are gaining a lot of

00:10:01,760 --> 00:10:04,800
popularity due to their ease of use

00:10:03,519 --> 00:10:06,560
their integrations

00:10:04,800 --> 00:10:08,640
and what they're doing to advance the

00:10:06,560 --> 00:10:10,079
state of identity management

00:10:08,640 --> 00:10:13,519
and this is really interesting because

00:10:10,079 --> 00:10:16,720
the ldap and kerberos focus technologies

00:10:13,519 --> 00:10:18,880
that exist within open source the latest

00:10:16,720 --> 00:10:22,240
standards supported by any of them was

00:10:18,880 --> 00:10:25,279
totp which was introduced in 2011.

00:10:22,240 --> 00:10:27,040
the trtp standard

00:10:25,279 --> 00:10:28,560
is only supported in free rpa and

00:10:27,040 --> 00:10:30,720
openldap and

00:10:28,560 --> 00:10:32,000
you know this is the latest state of the

00:10:30,720 --> 00:10:33,680
art that open source

00:10:32,000 --> 00:10:35,200
has when it comes to identity management

00:10:33,680 --> 00:10:37,279
and authentication

00:10:35,200 --> 00:10:40,079
and it really just feels like you know

00:10:37,279 --> 00:10:41,920
this ldap and kerberos focus is in a way

00:10:40,079 --> 00:10:44,720
preventing us from catching up to these

00:10:41,920 --> 00:10:47,440
more http focused

00:10:44,720 --> 00:10:50,160
designs that we're seeing in proprietary

00:10:47,440 --> 00:10:50,160
technologies

00:10:51,120 --> 00:10:54,640
and that's the thing is that ldap and

00:10:52,959 --> 00:10:56,240
kobras as technologies

00:10:54,640 --> 00:10:59,120
while they've served us really well they

00:10:56,240 --> 00:11:02,959
do also hold us back in a lot of ways

00:10:59,120 --> 00:11:02,959
for example their password only

00:11:04,160 --> 00:11:08,560
you know and attacks on passwords have

00:11:05,839 --> 00:11:10,240
become really really good these days

00:11:08,560 --> 00:11:12,240
you know many people within information

00:11:10,240 --> 00:11:12,880
security and there are some excellent

00:11:12,240 --> 00:11:14,720
blogs

00:11:12,880 --> 00:11:17,200
from the microsoft security response

00:11:14,720 --> 00:11:18,399
center talking about password securities

00:11:17,200 --> 00:11:21,440
exist today

00:11:18,399 --> 00:11:23,200
and you know they discuss um

00:11:21,440 --> 00:11:24,320
that look the complexity of your

00:11:23,200 --> 00:11:25,839
password the number of special

00:11:24,320 --> 00:11:26,560
characters length all of this it doesn't

00:11:25,839 --> 00:11:28,640
matter

00:11:26,560 --> 00:11:30,320
because the most modern attacks that

00:11:28,640 --> 00:11:32,560
exist today against accounts

00:11:30,320 --> 00:11:33,519
are able to get the exact content of the

00:11:32,560 --> 00:11:35,519
password

00:11:33,519 --> 00:11:37,200
and this means that a lot of the

00:11:35,519 --> 00:11:40,640
historical rules we've had about how to

00:11:37,200 --> 00:11:42,000
secure passwords are now irrelevant

00:11:40,640 --> 00:11:43,839
a lot of these identity management

00:11:42,000 --> 00:11:44,320
stacks that we have are primarily

00:11:43,839 --> 00:11:47,519
written in

00:11:44,320 --> 00:11:50,079
c and unfortunately this opens us up to

00:11:47,519 --> 00:11:53,440
a lot of cves and memory safety issues

00:11:50,079 --> 00:11:54,240
both google and microsoft have publicly

00:11:53,440 --> 00:11:57,360
disclosed that

00:11:54,240 --> 00:12:00,079
70 of their security issues come

00:11:57,360 --> 00:12:01,519
just from memory safety issues which

00:12:00,079 --> 00:12:04,639
exist primarily in c

00:12:01,519 --> 00:12:06,399
and c plus code bases

00:12:04,639 --> 00:12:08,079
because these code bases are written in

00:12:06,399 --> 00:12:09,760
c and the developers of these identity

00:12:08,079 --> 00:12:12,000
management stacks knows

00:12:09,760 --> 00:12:12,800
of these risks they tend to be very

00:12:12,000 --> 00:12:15,680
conservative

00:12:12,800 --> 00:12:16,959
and slow to improve and adapt because

00:12:15,680 --> 00:12:17,519
that's the only way that you can

00:12:16,959 --> 00:12:19,360
actually

00:12:17,519 --> 00:12:21,519
then take more care to make sure that

00:12:19,360 --> 00:12:23,120
we're not introducing these new issues

00:12:21,519 --> 00:12:24,720
and because they're slower to improve

00:12:23,120 --> 00:12:26,000
and adapt they're slower to keep up and

00:12:24,720 --> 00:12:28,240
make these developments

00:12:26,000 --> 00:12:30,880
and adds extra barriers and complexities

00:12:28,240 --> 00:12:33,120
to improvement

00:12:30,880 --> 00:12:34,320
the standards that exist around ldap and

00:12:33,120 --> 00:12:36,639
kerberos also

00:12:34,320 --> 00:12:37,519
tend not to be very active ldap

00:12:36,639 --> 00:12:40,320
especially

00:12:37,519 --> 00:12:41,200
has not had a working um ietf group in a

00:12:40,320 --> 00:12:42,800
long time

00:12:41,200 --> 00:12:44,639
and the last attempt to revive it that

00:12:42,800 --> 00:12:46,959
i'm aware of in 2017

00:12:44,639 --> 00:12:48,639
has failed um and i think that was the

00:12:46,959 --> 00:12:50,480
second or third attempt to revive it so

00:12:48,639 --> 00:12:50,880
it's very unlikely that we're going to

00:12:50,480 --> 00:12:53,600
see

00:12:50,880 --> 00:12:55,600
any kind of developments or improvements

00:12:53,600 --> 00:12:57,120
in ldap as a protocol to reflect the

00:12:55,600 --> 00:12:58,880
changes that are required

00:12:57,120 --> 00:13:00,560
for modern identity management and where

00:12:58,880 --> 00:13:02,240
we're going

00:13:00,560 --> 00:13:04,800
and of course these things are all

00:13:02,240 --> 00:13:07,920
complicated to administer

00:13:04,800 --> 00:13:08,240
no one ever says hey ldap is fun to set

00:13:07,920 --> 00:13:11,040
up

00:13:08,240 --> 00:13:11,600
kerberos is fun to debug these things

00:13:11,040 --> 00:13:13,120
ten

00:13:11,600 --> 00:13:14,639
when you bring them up with people

00:13:13,120 --> 00:13:16,639
people tend to say oh

00:13:14,639 --> 00:13:18,480
you know ldap and crowbros they're so

00:13:16,639 --> 00:13:20,639
bad to use and i try and avoid them and

00:13:18,480 --> 00:13:22,480
they're so complicated you know

00:13:20,639 --> 00:13:23,760
if these technologies are complicated to

00:13:22,480 --> 00:13:25,760
administer and use

00:13:23,760 --> 00:13:27,600
we're not going to be successful in

00:13:25,760 --> 00:13:29,040
getting people to want to integrate with

00:13:27,600 --> 00:13:30,800
our authentication systems

00:13:29,040 --> 00:13:32,959
and to want to improve that developer

00:13:30,800 --> 00:13:36,320
experience and

00:13:32,959 --> 00:13:39,120
those integrations so for me

00:13:36,320 --> 00:13:41,120
i'm you know very passionate about

00:13:39,120 --> 00:13:44,000
authentication identity management

00:13:41,120 --> 00:13:44,720
and and i'm you know being part of this

00:13:44,000 --> 00:13:46,160
team

00:13:44,720 --> 00:13:48,480
and the history that i have with open

00:13:46,160 --> 00:13:49,519
source idm you know i felt like i was in

00:13:48,480 --> 00:13:51,120
this trap

00:13:49,519 --> 00:13:52,720
where you know i was in this difficult

00:13:51,120 --> 00:13:54,560
situation where i was always having to

00:13:52,720 --> 00:13:56,240
say no to people when people said hey

00:13:54,560 --> 00:13:57,600
can we have this multi-factor

00:13:56,240 --> 00:13:59,360
authentication it's like well no we

00:13:57,600 --> 00:14:00,079
can't because we're bound by what ldap

00:13:59,360 --> 00:14:03,360
can do

00:14:00,079 --> 00:14:05,199
oh can we add this um web gateway well

00:14:03,360 --> 00:14:06,959
no because it's extraordinarily

00:14:05,199 --> 00:14:09,920
difficult to try and add

00:14:06,959 --> 00:14:11,839
web components into a c code base

00:14:09,920 --> 00:14:12,399
without adding huge numbers of security

00:14:11,839 --> 00:14:15,199
risks

00:14:12,399 --> 00:14:17,360
you know i felt like i was always having

00:14:15,199 --> 00:14:19,120
to say no

00:14:17,360 --> 00:14:20,639
and so you know i started to ask this

00:14:19,120 --> 00:14:22,560
question which was why couldn't we have

00:14:20,639 --> 00:14:24,480
an open source idm which is as good as

00:14:22,560 --> 00:14:25,920
azure active directory or octa

00:14:24,480 --> 00:14:27,600
but you can run it yourself like free

00:14:25,920 --> 00:14:29,600
rpr sound before

00:14:27,600 --> 00:14:31,440
they're really focused on this http

00:14:29,600 --> 00:14:33,440
first

00:14:31,440 --> 00:14:35,440
you know kind of technologies but also

00:14:33,440 --> 00:14:36,880
did not throw away the kind of existing

00:14:35,440 --> 00:14:38,720
infrastructure integrations

00:14:36,880 --> 00:14:40,560
that we value and care about in open

00:14:38,720 --> 00:14:43,279
source technologies

00:14:40,560 --> 00:14:44,959
and really got away from this old app

00:14:43,279 --> 00:14:46,880
and cobra centric mindset

00:14:44,959 --> 00:14:48,959
that was holding us back and trapping us

00:14:46,880 --> 00:14:53,199
within these legacy ideas

00:14:48,959 --> 00:14:53,680
um uh that that really prevented us from

00:14:53,199 --> 00:14:57,600
being

00:14:53,680 --> 00:14:59,120
able to progress so in september 2018 i

00:14:57,600 --> 00:15:01,680
started a new project

00:14:59,120 --> 00:15:03,360
and that project is currently dm county

00:15:01,680 --> 00:15:04,560
dm is an identity management system

00:15:03,360 --> 00:15:07,199
written in rust

00:15:04,560 --> 00:15:09,279
and it is aiming to be the open source

00:15:07,199 --> 00:15:11,360
identity management stack

00:15:09,279 --> 00:15:12,560
of the future and i really wanted to

00:15:11,360 --> 00:15:15,360
create something

00:15:12,560 --> 00:15:17,199
which learnt lessons from past the set

00:15:15,360 --> 00:15:20,240
successes and mistakes of both

00:15:17,199 --> 00:15:21,600
open source and proprietary technologies

00:15:20,240 --> 00:15:23,600
something that was focused on being an

00:15:21,600 --> 00:15:24,560
identity management platform first and

00:15:23,600 --> 00:15:26,480
foremost

00:15:24,560 --> 00:15:28,480
and you know really captured a lot of

00:15:26,480 --> 00:15:30,800
these more modern ideas

00:15:28,480 --> 00:15:33,600
um than than the other systems that we

00:15:30,800 --> 00:15:33,600
currently have today

00:15:34,079 --> 00:15:39,920
so some of these key things are you know

00:15:37,519 --> 00:15:40,880
that it has to be http first it has to

00:15:39,920 --> 00:15:42,720
have web apis

00:15:40,880 --> 00:15:44,560
we need to be looking at things like o

00:15:42,720 --> 00:15:47,839
auth and open idc

00:15:44,560 --> 00:15:49,519
open id connect sorry you know devices

00:15:47,839 --> 00:15:52,320
are being part of your identity rather

00:15:49,519 --> 00:15:54,480
than being censored around the password

00:15:52,320 --> 00:15:55,920
how do we make sure that people can move

00:15:54,480 --> 00:15:57,040
around and go offline and be

00:15:55,920 --> 00:16:00,639
disconnected

00:15:57,040 --> 00:16:03,279
um especially with a very remote first

00:16:00,639 --> 00:16:04,959
and remote work focused world that we

00:16:03,279 --> 00:16:08,000
now live in uh

00:16:04,959 --> 00:16:09,920
due to the current situation so

00:16:08,000 --> 00:16:11,440
there's a lot of things that you know as

00:16:09,920 --> 00:16:13,600
a project we can already do and have

00:16:11,440 --> 00:16:15,839
been doing

00:16:13,600 --> 00:16:17,199
so you know from our open source

00:16:15,839 --> 00:16:19,040
perspective and our

00:16:17,199 --> 00:16:20,800
you know linux perspective our most

00:16:19,040 --> 00:16:23,199
important things is can i authenticate

00:16:20,800 --> 00:16:25,920
my servers to it and the answer is yes

00:16:23,199 --> 00:16:26,959
so today we already have working pam and

00:16:25,920 --> 00:16:28,720
ns-switch modules

00:16:26,959 --> 00:16:30,320
which are all part of open source

00:16:28,720 --> 00:16:32,720
already

00:16:30,320 --> 00:16:34,839
and you are able to set up the unix

00:16:32,720 --> 00:16:36,000
resolver to authenticate to a county dm

00:16:34,839 --> 00:16:38,240
server

00:16:36,000 --> 00:16:39,519
now this resolver is actually inspired

00:16:38,240 --> 00:16:41,279
by triple sd

00:16:39,519 --> 00:16:43,519
and it allows things like offline

00:16:41,279 --> 00:16:45,600
authentication and offline caching of

00:16:43,519 --> 00:16:47,040
user and group information so that you

00:16:45,600 --> 00:16:49,920
can actually pick up your laptop

00:16:47,040 --> 00:16:51,440
go out to a coffee shop and come back or

00:16:49,920 --> 00:16:52,880
you know have an internet disconnection

00:16:51,440 --> 00:16:56,480
and it will keep working

00:16:52,880 --> 00:16:58,079
so um we've already been inspired by and

00:16:56,480 --> 00:16:59,839
learnt a lot of things like you know

00:16:58,079 --> 00:17:01,440
we've learned from some of the mistakes

00:16:59,839 --> 00:17:03,279
and some of the good parts of triple sd

00:17:01,440 --> 00:17:05,600
in how we've designed this resolver to

00:17:03,279 --> 00:17:07,520
work

00:17:05,600 --> 00:17:09,679
we already have ssh key management as

00:17:07,520 --> 00:17:11,600
well so you can upload your ssh keys

00:17:09,679 --> 00:17:12,959
into khan edm and then these are

00:17:11,600 --> 00:17:15,600
distributed through that same

00:17:12,959 --> 00:17:17,360
unix resolver so that you can ssh into

00:17:15,600 --> 00:17:18,240
machines and again this enables all the

00:17:17,360 --> 00:17:20,319
same

00:17:18,240 --> 00:17:21,600
things where if um systems are

00:17:20,319 --> 00:17:25,360
disconnected or offline

00:17:21,600 --> 00:17:26,640
your ssh keys can still be validated

00:17:25,360 --> 00:17:29,600
one of the really cool things that we

00:17:26,640 --> 00:17:31,840
have planned is sshca management

00:17:29,600 --> 00:17:33,200
which is where cuny dm can act as an

00:17:31,840 --> 00:17:36,080
sshca route

00:17:33,200 --> 00:17:37,600
and then sign short-term ephemeral keys

00:17:36,080 --> 00:17:40,160
that can then be used

00:17:37,600 --> 00:17:41,760
by a single individual and this is def

00:17:40,160 --> 00:17:42,559
this is a feature that's really today

00:17:41,760 --> 00:17:46,480
only seen

00:17:42,559 --> 00:17:48,160
in cloud identity and access managers

00:17:46,480 --> 00:17:50,880
and i think that this is something that

00:17:48,160 --> 00:17:54,000
we are really wanting to pursue

00:17:50,880 --> 00:17:55,520
if you want to know more about sshcas i

00:17:54,000 --> 00:17:58,320
highly encourage you to watch jeremy

00:17:55,520 --> 00:18:00,960
stott's linux conf australia 2020 talk

00:17:58,320 --> 00:18:03,919
xero trust ssh it's an amazing talk

00:18:00,960 --> 00:18:05,280
really well presented and very fun

00:18:03,919 --> 00:18:07,200
we've already had a couple of really

00:18:05,280 --> 00:18:08,320
cool successes with this ssh key

00:18:07,200 --> 00:18:12,160
management though

00:18:08,320 --> 00:18:13,760
where one of our users in the community

00:18:12,160 --> 00:18:15,600
they had locked themselves out of their

00:18:13,760 --> 00:18:16,160
server because of a mistake that that

00:18:15,600 --> 00:18:19,280
when they

00:18:16,160 --> 00:18:20,240
um ran an ansible playbook however they

00:18:19,280 --> 00:18:23,360
realized

00:18:20,240 --> 00:18:24,880
that they had the ability to put ssh

00:18:23,360 --> 00:18:25,600
keys into cuny and so they were then

00:18:24,880 --> 00:18:28,480
able to

00:18:25,600 --> 00:18:30,000
create an extra account upload ssh keys

00:18:28,480 --> 00:18:31,919
into and then log into that machine and

00:18:30,000 --> 00:18:34,400
then recover their system

00:18:31,919 --> 00:18:36,080
and so this was actually really cool uh

00:18:34,400 --> 00:18:38,799
to hear that they were able to

00:18:36,080 --> 00:18:42,080
you know use this and rely on it when

00:18:38,799 --> 00:18:43,919
they needed it

00:18:42,080 --> 00:18:46,559
we've also done a lot in terms of you

00:18:43,919 --> 00:18:49,600
know early foundational

00:18:46,559 --> 00:18:50,960
um design knowing that

00:18:49,600 --> 00:18:52,880
you know the goal of an identity

00:18:50,960 --> 00:18:55,360
management system is to scale to

00:18:52,880 --> 00:18:58,080
thousands of users

00:18:55,360 --> 00:18:59,679
so the entire system is set up to be

00:18:58,080 --> 00:19:02,000
concurrent from day one

00:18:59,679 --> 00:19:02,799
so we've we use all concurrent data

00:19:02,000 --> 00:19:04,640
structures

00:19:02,799 --> 00:19:06,160
and we even invented a new transactional

00:19:04,640 --> 00:19:09,520
caching system which allows

00:19:06,160 --> 00:19:12,720
multi-view concurrent um

00:19:09,520 --> 00:19:16,640
data in your cache to exist and this

00:19:12,720 --> 00:19:19,120
fully transactional design is really

00:19:16,640 --> 00:19:21,280
good because it means that all the data

00:19:19,120 --> 00:19:23,919
in the system is always consistent

00:19:21,280 --> 00:19:25,280
and this was inspired by zfs which has

00:19:23,919 --> 00:19:27,679
the copy on write

00:19:25,280 --> 00:19:28,640
file system which really prioritizes

00:19:27,679 --> 00:19:32,080
data safety

00:19:28,640 --> 00:19:35,120
but also concurrency and parallelism

00:19:32,080 --> 00:19:37,520
for extreme levels of performance

00:19:35,120 --> 00:19:39,039
because of this we've already measured

00:19:37,520 --> 00:19:42,240
that cunning dm is close to the

00:19:39,039 --> 00:19:44,080
performance of 389 directory server

00:19:42,240 --> 00:19:46,559
on a four core machine with eight

00:19:44,080 --> 00:19:48,240
gigabytes of ram on nvme disk

00:19:46,559 --> 00:19:50,320
we've already measured cunning dam as

00:19:48,240 --> 00:19:50,960
being able to do 32 000 searches per

00:19:50,320 --> 00:19:55,280
second

00:19:50,960 --> 00:19:58,000
and 3 000 authentications per second

00:19:55,280 --> 00:19:59,840
we also have we're also the first of the

00:19:58,000 --> 00:20:01,840
open source identity management projects

00:19:59,840 --> 00:20:03,760
to include a query optimizer

00:20:01,840 --> 00:20:05,679
and we've i've been working with someone

00:20:03,760 --> 00:20:08,000
who specializes in statistics

00:20:05,679 --> 00:20:09,360
to ask them about some ways that we can

00:20:08,000 --> 00:20:12,159
model our indexes

00:20:09,360 --> 00:20:14,080
and use statistical analysis to actually

00:20:12,159 --> 00:20:16,640
indicate to our query optimizer

00:20:14,080 --> 00:20:18,400
how the query optimizer should work and

00:20:16,640 --> 00:20:20,400
make better queries so that can

00:20:18,400 --> 00:20:23,039
use the indexes in the system more

00:20:20,400 --> 00:20:23,039
effectively

00:20:24,320 --> 00:20:28,159
from day one we planned that devices

00:20:26,400 --> 00:20:29,520
were part of your authentication

00:20:28,159 --> 00:20:32,240
and they're not something you separate

00:20:29,520 --> 00:20:34,240
from you know you might log into your

00:20:32,240 --> 00:20:35,520
laptop and then your laptop has ssh keys

00:20:34,240 --> 00:20:36,400
that continue to authenticate you on

00:20:35,520 --> 00:20:38,559
your behalf

00:20:36,400 --> 00:20:40,400
the device is representing you in the

00:20:38,559 --> 00:20:43,440
future authentication

00:20:40,400 --> 00:20:44,880
so in the future this will only improve

00:20:43,440 --> 00:20:47,840
with things like web authent

00:20:44,880 --> 00:20:48,960
and so from that reason multi-factor

00:20:47,840 --> 00:20:51,120
authentication

00:20:48,960 --> 00:20:53,120
uh was planned from day one and this is

00:20:51,120 --> 00:20:55,919
the reason why as a project we also

00:20:53,120 --> 00:20:57,679
wrote the library for web authent

00:20:55,919 --> 00:20:59,200
today it already supports apple's touch

00:20:57,679 --> 00:21:02,640
id windows hello

00:20:59,200 --> 00:21:04,720
ub keys nitro keys and many more

00:21:02,640 --> 00:21:05,760
it's also possible you know in the

00:21:04,720 --> 00:21:08,159
future that

00:21:05,760 --> 00:21:09,679
you may use these devices as your sole

00:21:08,159 --> 00:21:12,480
source of authentication as a

00:21:09,679 --> 00:21:13,200
so as a cryptographic authentication

00:21:12,480 --> 00:21:15,039
only

00:21:13,200 --> 00:21:16,400
where you may have the fingerprint

00:21:15,039 --> 00:21:17,520
reader and the fingerprint is stored in

00:21:16,400 --> 00:21:19,039
the secure enclave

00:21:17,520 --> 00:21:20,559
you authenticate to your enclave and

00:21:19,039 --> 00:21:22,640
then that does a

00:21:20,559 --> 00:21:24,559
elliptic curve cryptographic operation

00:21:22,640 --> 00:21:26,640
to sign some data and then release that

00:21:24,559 --> 00:21:28,640
and this gives a really strong level of

00:21:26,640 --> 00:21:31,360
multi-factor authentication without ever

00:21:28,640 --> 00:21:32,960
having to transmit a password

00:21:31,360 --> 00:21:35,600
we also do some other really interesting

00:21:32,960 --> 00:21:39,280
stuff in the way that we have approached

00:21:35,600 --> 00:21:41,120
this device's password concept where

00:21:39,280 --> 00:21:43,200
traditionally with something like ldap

00:21:41,120 --> 00:21:44,960
or samba

00:21:43,200 --> 00:21:46,720
if you wanted to have radius for your

00:21:44,960 --> 00:21:50,159
wi-fi for network authentication

00:21:46,720 --> 00:21:50,960
or for your vpns generally your primary

00:21:50,159 --> 00:21:54,159
password

00:21:50,960 --> 00:21:55,520
is also the password used by radius

00:21:54,159 --> 00:21:57,840
and this creates some really interesting

00:21:55,520 --> 00:21:58,559
problems so one of the common ones in an

00:21:57,840 --> 00:22:01,840
enterprise

00:21:58,559 --> 00:22:04,640
is that if you change your password

00:22:01,840 --> 00:22:06,240
um and you forget to update say your

00:22:04,640 --> 00:22:08,240
wi-fi password of your account on your

00:22:06,240 --> 00:22:09,760
phone and that's back somewhere else

00:22:08,240 --> 00:22:11,039
that phone will keep trying to log in

00:22:09,760 --> 00:22:12,960
and then eventually cause your account

00:22:11,039 --> 00:22:14,400
to be soft locked out of the network

00:22:12,960 --> 00:22:16,080
and then you have to phone up support

00:22:14,400 --> 00:22:17,280
stuff and get into help but then they

00:22:16,080 --> 00:22:18,640
have to tell you which device you've got

00:22:17,280 --> 00:22:19,760
to go fix and you've got to do that and

00:22:18,640 --> 00:22:20,240
then they've got to unlock your account

00:22:19,760 --> 00:22:22,880
and it's a

00:22:20,240 --> 00:22:24,480
it's a right pain and i've experienced

00:22:22,880 --> 00:22:26,240
this firsthand when i was a system

00:22:24,480 --> 00:22:29,840
administrator at university

00:22:26,240 --> 00:22:31,280
where this really made it very painful

00:22:29,840 --> 00:22:32,159
for users to change their password and

00:22:31,280 --> 00:22:33,360
so sometimes

00:22:32,159 --> 00:22:35,200
even if they knew their password had

00:22:33,360 --> 00:22:37,120
been compromised they didn't want to

00:22:35,200 --> 00:22:38,559
change it because it was such a hassle

00:22:37,120 --> 00:22:40,640
so what we're doing cunning is we don't

00:22:38,559 --> 00:22:41,919
want this to be the case

00:22:40,640 --> 00:22:43,679
your radius password is actually

00:22:41,919 --> 00:22:45,039
separate it's stored in your account

00:22:43,679 --> 00:22:47,280
and it's separate from all of your other

00:22:45,039 --> 00:22:48,960
device credentials the idea is that on

00:22:47,280 --> 00:22:50,720
your device you should be able to scan a

00:22:48,960 --> 00:22:52,720
unique code for those devices

00:22:50,720 --> 00:22:53,840
and roll them into the network and that

00:22:52,720 --> 00:22:56,000
password is

00:22:53,840 --> 00:22:56,960
only your token for accessing that

00:22:56,000 --> 00:22:59,520
network no

00:22:56,960 --> 00:23:01,120
other resources on that system so if

00:22:59,520 --> 00:23:02,720
your radius password is compromised it

00:23:01,120 --> 00:23:04,240
doesn't compromise your account

00:23:02,720 --> 00:23:05,840
and by the same token if you have to

00:23:04,240 --> 00:23:07,440
change your account password you're not

00:23:05,840 --> 00:23:08,000
going to break your device's access to

00:23:07,440 --> 00:23:10,640
the network

00:23:08,000 --> 00:23:12,320
because your device password is still

00:23:10,640 --> 00:23:13,919
consistent

00:23:12,320 --> 00:23:16,480
this also then leads us to some really

00:23:13,919 --> 00:23:18,240
cool ideas about how we can use qr codes

00:23:16,480 --> 00:23:20,000
to automatically enroll devices onto

00:23:18,240 --> 00:23:21,919
wi-fi

00:23:20,000 --> 00:23:23,120
and you know how we can actually enroll

00:23:21,919 --> 00:23:25,440
devices

00:23:23,120 --> 00:23:27,200
um which have built-in inseparable

00:23:25,440 --> 00:23:28,640
authenticators like touch id

00:23:27,200 --> 00:23:30,000
so you can actually say hey i want to

00:23:28,640 --> 00:23:31,120
enroll a new device and then have a

00:23:30,000 --> 00:23:32,720
trusted workflow

00:23:31,120 --> 00:23:34,320
to enroll that and authenticate that

00:23:32,720 --> 00:23:35,840
device onto your account

00:23:34,320 --> 00:23:37,600
as that part of that device

00:23:35,840 --> 00:23:39,840
authentication policy that i was talking

00:23:37,600 --> 00:23:39,840
about

00:23:41,279 --> 00:23:44,960
but as we mentioned we already have

00:23:43,039 --> 00:23:47,520
webworth in and you know one of the

00:23:44,960 --> 00:23:50,240
things that we've recently done

00:23:47,520 --> 00:23:50,799
over january was we actually started to

00:23:50,240 --> 00:23:54,080
develop

00:23:50,799 --> 00:23:56,320
a demo demonstration ui and and

00:23:54,080 --> 00:23:57,840
um workflow of web both and working and

00:23:56,320 --> 00:24:01,360
you can actually have an account

00:23:57,840 --> 00:24:02,960
that solely uses web authenticate

00:24:01,360 --> 00:24:04,640
and as you can see here we've just done

00:24:02,960 --> 00:24:06,240
a web or thin authentication and it

00:24:04,640 --> 00:24:07,919
works

00:24:06,240 --> 00:24:10,159
and i think we are the only open source

00:24:07,919 --> 00:24:12,080
identity management project

00:24:10,159 --> 00:24:13,919
that already actually supports web

00:24:12,080 --> 00:24:16,240
authenti in this way

00:24:13,919 --> 00:24:17,120
and this area this space will continue

00:24:16,240 --> 00:24:20,559
to improve

00:24:17,120 --> 00:24:23,039
as we do more work on

00:24:20,559 --> 00:24:26,080
improving our web user interfaces and

00:24:23,039 --> 00:24:26,080
those integrations

00:24:26,400 --> 00:24:29,919
of course we still also have the

00:24:28,640 --> 00:24:33,120
classics

00:24:29,919 --> 00:24:35,120
things like totp for

00:24:33,120 --> 00:24:36,640
cases where you may not have those

00:24:35,120 --> 00:24:38,159
devices that support platform

00:24:36,640 --> 00:24:40,480
authenticators or ub keys

00:24:38,159 --> 00:24:41,919
and so we still have ways to do mfa with

00:24:40,480 --> 00:24:44,159
trtp and of course

00:24:41,919 --> 00:24:46,240
we have all the normal things that you

00:24:44,159 --> 00:24:49,440
would expect like your qr codes and

00:24:46,240 --> 00:24:50,880
and things like that of course almost

00:24:49,440 --> 00:24:52,480
everything you're seeing here can all be

00:24:50,880 --> 00:24:54,080
set up on the command line and used on

00:24:52,480 --> 00:24:55,679
the command line you can use your web

00:24:54,080 --> 00:24:57,360
authen tokens on the cli

00:24:55,679 --> 00:24:59,200
the same way that you can use them in

00:24:57,360 --> 00:25:00,960
the browser in fact you can use

00:24:59,200 --> 00:25:03,120
if you can you enroll on the cli and

00:25:00,960 --> 00:25:05,919
it'll work in the browser and vice versa

00:25:03,120 --> 00:25:08,400
um we have a web authen compliant cli

00:25:05,919 --> 00:25:08,400
library

00:25:09,120 --> 00:25:12,240
something else that we have is we

00:25:10,559 --> 00:25:13,039
actually have an ldap gateway built into

00:25:12,240 --> 00:25:16,240
cunni

00:25:13,039 --> 00:25:18,080
and this you know as much as we don't

00:25:16,240 --> 00:25:18,720
want to be ldap and be bound by those

00:25:18,080 --> 00:25:20,880
ideas

00:25:18,720 --> 00:25:22,480
ldap is still important as the linga

00:25:20,880 --> 00:25:26,640
franca of authentication

00:25:22,480 --> 00:25:29,760
we still need to be able to expose data

00:25:26,640 --> 00:25:31,039
over ldap in a way that um

00:25:29,760 --> 00:25:33,440
applications are going to be able to

00:25:31,039 --> 00:25:34,000
effectively consume and authenticate

00:25:33,440 --> 00:25:36,880
with

00:25:34,000 --> 00:25:38,400
and this really helps to bridge an um

00:25:36,880 --> 00:25:40,480
you know legacy compatibility with

00:25:38,400 --> 00:25:42,400
applications that may not have

00:25:40,480 --> 00:25:43,600
newer protocols or different ways of

00:25:42,400 --> 00:25:47,679
managing accounts

00:25:43,600 --> 00:25:49,679
so for example you may have a

00:25:47,679 --> 00:25:50,720
like next cloud instance and it uses

00:25:49,679 --> 00:25:52,240
ldap to

00:25:50,720 --> 00:25:54,000
populate the user accounts but it might

00:25:52,240 --> 00:25:57,840
use owath to actually do the

00:25:54,000 --> 00:25:57,840
authentication for example

00:25:59,840 --> 00:26:04,400
one of my really important goals though

00:26:02,960 --> 00:26:06,799
and something that i addressed

00:26:04,400 --> 00:26:08,799
early on was that you know ldap and

00:26:06,799 --> 00:26:11,360
cobros are considered difficult

00:26:08,799 --> 00:26:15,120
to administer and this is something that

00:26:11,360 --> 00:26:15,120
i really wanted to address in cunning

00:26:15,279 --> 00:26:18,799
i wanted something that was easy to

00:26:16,640 --> 00:26:21,120
start with easy to administer

00:26:18,799 --> 00:26:23,279
very clear and direct and communicated

00:26:21,120 --> 00:26:25,840
well but still allowed

00:26:23,279 --> 00:26:25,840
rich and

00:26:26,400 --> 00:26:32,720
advanced interactions

00:26:29,760 --> 00:26:33,840
so here we see a configuration file for

00:26:32,720 --> 00:26:36,159
for a cunning server

00:26:33,840 --> 00:26:37,600
we have the bind address for https the

00:26:36,159 --> 00:26:38,240
ldap bind address for the ldap

00:26:37,600 --> 00:26:41,279
compatibility

00:26:38,240 --> 00:26:43,200
gateway where our database path is what

00:26:41,279 --> 00:26:44,720
our tls certificates are with a chain

00:26:43,200 --> 00:26:46,960
file and a key

00:26:44,720 --> 00:26:48,400
and these are done as chain and a key

00:26:46,960 --> 00:26:50,960
because this is the exact format you get

00:26:48,400 --> 00:26:53,039
straight back from let's encrypt

00:26:50,960 --> 00:26:54,880
what log level and what our directory

00:26:53,039 --> 00:26:57,679
server what our origin is what domain

00:26:54,880 --> 00:27:00,159
name will be accessed at

00:26:57,679 --> 00:27:02,000
and from this file we've we can see that

00:27:00,159 --> 00:27:03,600
we have these files laid out

00:27:02,000 --> 00:27:05,120
in a data volume for docker at the

00:27:03,600 --> 00:27:06,960
moment um

00:27:05,120 --> 00:27:08,960
and so we have our server.com which is

00:27:06,960 --> 00:27:11,520
config and we have those tls files

00:27:08,960 --> 00:27:12,880
that we just mentioned so the very first

00:27:11,520 --> 00:27:15,520
thing that we're going to do

00:27:12,880 --> 00:27:18,320
in order to set up our new instance is

00:27:15,520 --> 00:27:19,279
we're going to run an account recovery

00:27:18,320 --> 00:27:21,120
so we're going to recover the

00:27:19,279 --> 00:27:22,880
administrator account and you can see

00:27:21,120 --> 00:27:25,760
that on the right hand side with the the

00:27:22,880 --> 00:27:27,679
carney dm recover account command here

00:27:25,760 --> 00:27:30,720
when you run this account recovery this

00:27:27,679 --> 00:27:32,640
is actually going to

00:27:30,720 --> 00:27:34,000
do a first run and setup of your

00:27:32,640 --> 00:27:36,080
database and you can now see that

00:27:34,000 --> 00:27:38,159
cunydm.db exists

00:27:36,080 --> 00:27:39,520
it always will migrate and create the

00:27:38,159 --> 00:27:41,120
database on first run

00:27:39,520 --> 00:27:43,760
you don't need to do any other special

00:27:41,120 --> 00:27:46,960
setup steps and that's it we're now

00:27:43,760 --> 00:27:49,760
running a cuny dm instance and have

00:27:46,960 --> 00:27:50,640
our first admin account recovered and we

00:27:49,760 --> 00:27:53,120
can then go

00:27:50,640 --> 00:27:54,559
and do stuff from there and there's no

00:27:53,120 --> 00:27:57,279
default passwords none of that

00:27:54,559 --> 00:27:59,840
so you have to set something secure and

00:27:57,279 --> 00:28:01,679
good from the start

00:27:59,840 --> 00:28:03,360
and it's really easy for clients to

00:28:01,679 --> 00:28:05,600
authenticate and work with connie as

00:28:03,360 --> 00:28:06,960
well

00:28:05,600 --> 00:28:09,600
for example if we look at the client

00:28:06,960 --> 00:28:11,120
configuration it just has the url

00:28:09,600 --> 00:28:12,960
our certificate verification where our

00:28:11,120 --> 00:28:14,480
ca path is

00:28:12,960 --> 00:28:16,399
because certificates are our route of

00:28:14,480 --> 00:28:18,240
trust here now note in this example i

00:28:16,399 --> 00:28:20,399
have to use verify hostnames false

00:28:18,240 --> 00:28:22,000
because of the way that i've set up the

00:28:20,399 --> 00:28:23,440
certificate for this demo

00:28:22,000 --> 00:28:25,919
in a production instance you should not

00:28:23,440 --> 00:28:25,919
do this

00:28:26,480 --> 00:28:32,720
and so because of this

00:28:30,320 --> 00:28:34,159
like simplicity like it's really easy to

00:28:32,720 --> 00:28:34,720
get started and you can see that you

00:28:34,159 --> 00:28:36,320
know

00:28:34,720 --> 00:28:38,320
we have our cli tool that we can

00:28:36,320 --> 00:28:40,080
immediately start to use

00:28:38,320 --> 00:28:42,399
and it has like functions for managing

00:28:40,080 --> 00:28:44,080
accounts groups the recycle bin

00:28:42,399 --> 00:28:45,600
so if you delete something you can bring

00:28:44,080 --> 00:28:48,640
it back

00:28:45,600 --> 00:28:49,840
things like that so we can now log in to

00:28:48,640 --> 00:28:52,000
the anonymous account

00:28:49,840 --> 00:28:55,200
which has the same kind of principles as

00:28:52,000 --> 00:28:55,200
the ldap anonymous account

00:28:55,520 --> 00:28:58,559
and from there we can actually begin to

00:28:57,520 --> 00:29:00,480
start looking at

00:28:58,559 --> 00:29:02,159
some of the content that exists within

00:29:00,480 --> 00:29:03,520
our directory so we can list

00:29:02,159 --> 00:29:05,840
the default accounts and we can see that

00:29:03,520 --> 00:29:07,840
we have the idm admin an admin account

00:29:05,840 --> 00:29:09,120
and an anonymous account and the reason

00:29:07,840 --> 00:29:11,520
why anonymous

00:29:09,120 --> 00:29:12,880
is its own account is because this way

00:29:11,520 --> 00:29:13,360
you can manage it like every other

00:29:12,880 --> 00:29:14,799
account

00:29:13,360 --> 00:29:16,559
you can lock it you can expire its

00:29:14,799 --> 00:29:17,760
credentials you can give it valid type

00:29:16,559 --> 00:29:18,960
you can give it time windows of when

00:29:17,760 --> 00:29:20,399
it's allowed to be used

00:29:18,960 --> 00:29:21,600
you can add it or remove it from

00:29:20,399 --> 00:29:22,399
different permission groups so that it

00:29:21,600 --> 00:29:23,840
can have

00:29:22,399 --> 00:29:25,600
permissions managed the same way as

00:29:23,840 --> 00:29:27,120
anyone else

00:29:25,600 --> 00:29:28,480
and of course you can just create more

00:29:27,120 --> 00:29:29,679
accounts you can create groups you can

00:29:28,480 --> 00:29:31,679
add members of them

00:29:29,679 --> 00:29:33,120
all of that kind of thing you know all

00:29:31,679 --> 00:29:35,039
of your very standard

00:29:33,120 --> 00:29:38,240
core elements of what you'd want from an

00:29:35,039 --> 00:29:38,240
identity management stack

00:29:39,200 --> 00:29:43,919
and i'm really excited about this you

00:29:42,320 --> 00:29:45,279
know and i think that icam is super

00:29:43,919 --> 00:29:48,399
exciting and i'm so

00:29:45,279 --> 00:29:50,799
keen for where kanye dm has been going

00:29:48,399 --> 00:29:53,360
and what we've already achieved so far

00:29:50,799 --> 00:29:54,399
um it underpins so much of our life

00:29:53,360 --> 00:29:56,399
every day

00:29:54,399 --> 00:29:57,760
and you know there are so many things

00:29:56,399 --> 00:30:00,480
that we should be able to do with it and

00:29:57,760 --> 00:30:02,559
we should all be able to have access to

00:30:00,480 --> 00:30:04,720
right now the cunning damn project has

00:30:02,559 --> 00:30:06,640
really been growing quite a bit

00:30:04,720 --> 00:30:08,000
we now contain seven different sub

00:30:06,640 --> 00:30:10,480
projects we've had so many

00:30:08,000 --> 00:30:12,480
contributors we've had more than 350

00:30:10,480 --> 00:30:13,440
commits since 2019 when it was first

00:30:12,480 --> 00:30:15,360
open sourced

00:30:13,440 --> 00:30:17,279
and there have been so many non-code

00:30:15,360 --> 00:30:19,919
contributions such as people raising

00:30:17,279 --> 00:30:21,840
issues discussing things in our chat

00:30:19,919 --> 00:30:23,200
advising people giving people help

00:30:21,840 --> 00:30:24,159
things like that which have been super

00:30:23,200 --> 00:30:26,559
valuable

00:30:24,159 --> 00:30:28,399
you know we have an extensive set of

00:30:26,559 --> 00:30:29,360
documentation in a book which makes it

00:30:28,399 --> 00:30:32,559
really easy

00:30:29,360 --> 00:30:34,080
for people to get started we have

00:30:32,559 --> 00:30:36,000
you know a few people who have really

00:30:34,080 --> 00:30:37,840
helped with continuous integration

00:30:36,000 --> 00:30:40,559
and test development we have a couple of

00:30:37,840 --> 00:30:42,880
people who've helped with

00:30:40,559 --> 00:30:44,559
you know teaching about statistics we

00:30:42,880 --> 00:30:46,080
now have two google summer of code

00:30:44,559 --> 00:30:47,679
students who have both begun

00:30:46,080 --> 00:30:49,039
to work on the project and they're both

00:30:47,679 --> 00:30:50,559
looking at some really interesting

00:30:49,039 --> 00:30:53,120
components one is

00:30:50,559 --> 00:30:54,240
how we can do account recovery and with

00:30:53,120 --> 00:30:55,679
multi-factor accounts

00:30:54,240 --> 00:30:58,000
and the other one has started to tackle

00:30:55,679 --> 00:31:00,480
how we can do and improve our logging

00:30:58,000 --> 00:31:01,840
for machine readable outputs for things

00:31:00,480 --> 00:31:05,120
like splunk or

00:31:01,840 --> 00:31:06,880
elk stacks we've also had

00:31:05,120 --> 00:31:08,559
people from the sources security team

00:31:06,880 --> 00:31:10,080
who have already reviewed

00:31:08,559 --> 00:31:11,679
some of the more security critical parts

00:31:10,080 --> 00:31:12,799
of the code such as the cryptographic

00:31:11,679 --> 00:31:15,440
operations

00:31:12,799 --> 00:31:17,120
and the pam and ens switch libraries and

00:31:15,440 --> 00:31:18,080
some of those things like managing home

00:31:17,120 --> 00:31:20,640
directories

00:31:18,080 --> 00:31:21,279
and you know they turned up a few minor

00:31:20,640 --> 00:31:22,960
issues but

00:31:21,279 --> 00:31:24,640
you know they they were very satisfied

00:31:22,960 --> 00:31:26,240
with the quality of code

00:31:24,640 --> 00:31:27,679
um we've had a few people you know

00:31:26,240 --> 00:31:28,559
really helping out with the web authent

00:31:27,679 --> 00:31:30,399
components

00:31:28,559 --> 00:31:32,000
you know there's been so much that has

00:31:30,399 --> 00:31:34,320
happened within this space

00:31:32,000 --> 00:31:35,279
and it's really exciting for me because

00:31:34,320 --> 00:31:38,000
idm really

00:31:35,279 --> 00:31:39,600
spans so many different areas and it

00:31:38,000 --> 00:31:42,080
really has something of interest for

00:31:39,600 --> 00:31:43,919
many different types of people

00:31:42,080 --> 00:31:46,559
what's coming up for us is at the moment

00:31:43,919 --> 00:31:48,240
we're currently working on oauth

00:31:46,559 --> 00:31:49,760
so we're going to work on developing

00:31:48,240 --> 00:31:51,039
oauth integration so you can have

00:31:49,760 --> 00:31:52,960
different applications there

00:31:51,039 --> 00:31:55,600
and once we have oauth integration then

00:31:52,960 --> 00:31:56,559
we can start looking at oidc or open id

00:31:55,600 --> 00:31:58,399
connect

00:31:56,559 --> 00:32:00,000
which builds on top of oauth to be able

00:31:58,399 --> 00:32:02,320
to transmit identity information and

00:32:00,000 --> 00:32:04,880
this is a

00:32:02,320 --> 00:32:07,039
very widely supported modern web single

00:32:04,880 --> 00:32:09,679
sign-on protocol

00:32:07,039 --> 00:32:10,799
and hopefully once that's all done in

00:32:09,679 --> 00:32:12,080
the next few months

00:32:10,799 --> 00:32:14,000
then we're going to start looking at

00:32:12,080 --> 00:32:16,799
replication and we're planning

00:32:14,000 --> 00:32:19,840
to do eventually consistent replication

00:32:16,799 --> 00:32:21,120
very similar to 389

00:32:19,840 --> 00:32:23,120
so i hope you found this really

00:32:21,120 --> 00:32:24,880
interesting and i

00:32:23,120 --> 00:32:27,679
would really love to hear from you about

00:32:24,880 --> 00:32:30,559
your ideas comments or even try it out

00:32:27,679 --> 00:32:32,640
uh cuny dm is already inside open soos

00:32:30,559 --> 00:32:34,080
uh in tumbleweed you can already install

00:32:32,640 --> 00:32:36,720
it today and

00:32:34,080 --> 00:32:38,000
we release every every quarter we just

00:32:36,720 --> 00:32:40,159
say you know on the first

00:32:38,000 --> 00:32:42,000
of every couple of months we we do a

00:32:40,159 --> 00:32:43,840
release the next release will be coming

00:32:42,000 --> 00:32:45,679
up on the 1st of july

00:32:43,840 --> 00:32:47,200
and it will go straight into tumbleweed

00:32:45,679 --> 00:32:50,320
and you know we'll continue to

00:32:47,200 --> 00:32:51,679
improve and upgrade that

00:32:50,320 --> 00:32:53,760
that technology and that identity

00:32:51,679 --> 00:32:57,200
management and what we can do

00:32:53,760 --> 00:32:58,559
inside of susa linux so thank you so

00:32:57,200 --> 00:33:02,320
much for your time and attention

00:32:58,559 --> 00:33:02,320
and i hope you enjoy the rest of the

00:33:06,279 --> 00:33:09,279

YouTube URL: https://www.youtube.com/watch?v=8IaxnSAggkI


