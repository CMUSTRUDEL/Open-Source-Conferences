Title: openSUSE Virtual Conference 2021 - Live: Getting your changes to SUSE Linux Enteprirse and Leap
Publication date: 2021-06-19
Playlist: openSUSE Virtual Conference 2021
Description: 
	https://media.ccc.de/v/3482-live-getting-your-changes-to-suse-linux-enteprirse-and-leap



What needs to happen to get your change into SUSE Linux Enterprise 15 and related openSUSE Leap.

What needs to happen to get your change into SUSE Linux Enterprise 15 and related openSUSE Leap.

Lubos Kocman
Captions: 
	00:00:01,580 --> 00:00:05,850
[Music]

00:00:06,640 --> 00:00:10,240
okay

00:00:07,200 --> 00:00:12,880
starting now hello guys uh

00:00:10,240 --> 00:00:14,960
welcome to my talk uh it's about getting

00:00:12,880 --> 00:00:19,279
changes into open to sleep

00:00:14,960 --> 00:00:21,600
you which we can

00:00:19,279 --> 00:00:22,560
and uh let me tell you something about

00:00:21,600 --> 00:00:24,640
myself

00:00:22,560 --> 00:00:26,080
i am lubash kutzman i work as a release

00:00:24,640 --> 00:00:31,439
manager for

00:00:26,080 --> 00:00:34,559
opensuse leap let me maybe screenshare

00:00:31,439 --> 00:00:36,239
and i basically started linux

00:00:34,559 --> 00:00:38,160
since people were talking about it with

00:00:36,239 --> 00:00:39,760
mandrake linux 9.1 it was attached to

00:00:38,160 --> 00:00:41,520
one of the magazines that i was reading

00:00:39,760 --> 00:00:44,320
otherwise i used to be released engineer

00:00:41,520 --> 00:00:44,960
for else six and seven in the past and i

00:00:44,320 --> 00:00:46,480
was also

00:00:44,960 --> 00:00:48,239
shortly involved in the beginnings of

00:00:46,480 --> 00:00:50,239
federal modularity

00:00:48,239 --> 00:00:51,360
and i was involved in the czech open

00:00:50,239 --> 00:00:52,960
source user group

00:00:51,360 --> 00:00:54,879
back then when i was kind of into

00:00:52,960 --> 00:00:57,920
solaris

00:00:54,879 --> 00:01:00,000
so let's check the agenda for today um

00:00:57,920 --> 00:01:02,480
you may have noticed but leap 15 3

00:01:00,000 --> 00:01:04,559
is relatively complex like there is a

00:01:02,480 --> 00:01:05,439
lot of projects that kind of may be and

00:01:04,559 --> 00:01:08,159
bleep

00:01:05,439 --> 00:01:09,280
and the goal here is to basically guide

00:01:08,159 --> 00:01:11,200
you for these projects tell you what

00:01:09,280 --> 00:01:13,520
they are used for how to contribute to

00:01:11,200 --> 00:01:15,040
them so we are on the same page

00:01:13,520 --> 00:01:16,479
and by the way most of the information

00:01:15,040 --> 00:01:18,159
that i'll be talking about can be found

00:01:16,479 --> 00:01:20,880
on the open source packaging for leap

00:01:18,159 --> 00:01:21,280
wiki page so if something's incorrect

00:01:20,880 --> 00:01:23,119
there

00:01:21,280 --> 00:01:24,960
you know or if you feel like literally

00:01:23,119 --> 00:01:25,759
explained also feel free to contribute

00:01:24,960 --> 00:01:29,920
to the page

00:01:25,759 --> 00:01:32,479
any help is appreciated so

00:01:29,920 --> 00:01:33,280
uh let's talk about how this would build

00:01:32,479 --> 00:01:36,320
nowadays

00:01:33,280 --> 00:01:38,799
so um the line on the on the top is

00:01:36,320 --> 00:01:41,439
tumbleweed or factory if you want to

00:01:38,799 --> 00:01:42,320
and uh for us the important part is the

00:01:41,439 --> 00:01:44,479
bottom right

00:01:42,320 --> 00:01:44,479
here

00:01:45,360 --> 00:01:50,799
so one of packages roughly is binary

00:01:48,240 --> 00:01:53,600
inherited from suse lee 15

00:01:50,799 --> 00:01:55,920
from australis pack service pack so just

00:01:53,600 --> 00:01:57,520
seeing 15 sp3 is kind of incorrect here

00:01:55,920 --> 00:02:01,360
because it's sp 0 sp

00:01:57,520 --> 00:02:04,560
0 update sp 1 spin i believe sp 2 sp sp3

00:02:01,360 --> 00:02:05,119
it makes the sleepo stream plus package

00:02:04,560 --> 00:02:07,360
hub that's

00:02:05,119 --> 00:02:08,479
roughly two threads and the last little

00:02:07,360 --> 00:02:11,360
dot on the bottom

00:02:08,479 --> 00:02:12,000
if you can see my cursor is the leap

00:02:11,360 --> 00:02:14,800
branding

00:02:12,000 --> 00:02:16,239
um you know tv tv files uh anything

00:02:14,800 --> 00:02:18,160
related to product builds

00:02:16,239 --> 00:02:19,440
or any or or packages that you would

00:02:18,160 --> 00:02:21,599
like to explicitly

00:02:19,440 --> 00:02:23,599
fork from sleep because we want to keep

00:02:21,599 --> 00:02:25,120
maybe different behavior

00:02:23,599 --> 00:02:26,800
there are a few and they are not here

00:02:25,120 --> 00:02:27,680
also in pakistan but let's talk about it

00:02:26,800 --> 00:02:30,879
a little bit later

00:02:27,680 --> 00:02:33,519
the general idea is that

00:02:30,879 --> 00:02:35,440
slee and package hub makes new leap and

00:02:33,519 --> 00:02:37,040
since we were building package up from

00:02:35,440 --> 00:02:37,680
leave 15 to you know we always copy the

00:02:37,040 --> 00:02:39,680
packages

00:02:37,680 --> 00:02:42,160
you're thinking that just continuing in

00:02:39,680 --> 00:02:44,319
this this way actually makes sense so

00:02:42,160 --> 00:02:46,160
that's why we are using that way we are

00:02:44,319 --> 00:02:47,599
looking for ways to simplify it

00:02:46,160 --> 00:02:49,680
and improve it make it a little bit

00:02:47,599 --> 00:02:51,280
faster because there is um you know

00:02:49,680 --> 00:02:52,480
it's not ideal the way how we built

00:02:51,280 --> 00:02:53,760
right now and we want to make it a

00:02:52,480 --> 00:02:57,680
little bit better

00:02:53,760 --> 00:02:58,400
in 154 so um the extra structure i've

00:02:57,680 --> 00:02:59,680
mentioned the

00:02:58,400 --> 00:03:01,680
three projects so you can see them on

00:02:59,680 --> 00:03:04,480
the top opensuse elite153

00:03:01,680 --> 00:03:05,280
roughly 166 packages what's different

00:03:04,480 --> 00:03:06,879
from as

00:03:05,280 --> 00:03:08,560
from the 15 to is that we are actually

00:03:06,879 --> 00:03:10,879
now building all of the arches with the

00:03:08,560 --> 00:03:13,840
exception of arm v7

00:03:10,879 --> 00:03:15,519
uh in there so we have s390 there newly

00:03:13,840 --> 00:03:15,920
then there is the non-free project which

00:03:15,519 --> 00:03:18,239
has

00:03:15,920 --> 00:03:20,000
the non-free pass that would be discord

00:03:18,239 --> 00:03:20,560
steam and others it's roughly 30

00:03:20,000 --> 00:03:22,720
packages

00:03:20,560 --> 00:03:23,840
or exactly 30 packages sorry then the

00:03:22,720 --> 00:03:25,760
back for it that's

00:03:23,840 --> 00:03:27,120
almost 10 000 packages this is basically

00:03:25,760 --> 00:03:28,879
the place where most of the leap

00:03:27,120 --> 00:03:30,400
development happens so if you actually

00:03:28,879 --> 00:03:31,760
submit submission

00:03:30,400 --> 00:03:32,879
and you know to leap it will be

00:03:31,760 --> 00:03:34,239
redirected i will talk about the

00:03:32,879 --> 00:03:36,720
redirection later

00:03:34,239 --> 00:03:38,640
then it will most likely end up here in

00:03:36,720 --> 00:03:40,000
between you know as long as it's a leap

00:03:38,640 --> 00:03:41,200
exclusive package if it's sleep package

00:03:40,000 --> 00:03:43,200
it will end up instead

00:03:41,200 --> 00:03:45,440
then we get to sleep so i'm actually

00:03:43,200 --> 00:03:46,239
using switzerly 15 sp star because the

00:03:45,440 --> 00:03:49,440
very covers

00:03:46,239 --> 00:03:51,680
sp0 sp00 update uh sorry 15

00:03:49,440 --> 00:03:52,640
update 1515 update because we don't use

00:03:51,680 --> 00:03:55,280
sp0 in the

00:03:52,640 --> 00:03:56,159
in the project name sp1 sp1 update and

00:03:55,280 --> 00:03:58,080
so on and that's

00:03:56,159 --> 00:03:59,360
roughly 5000 packages if you duplicate

00:03:58,080 --> 00:04:02,720
the individual

00:03:59,360 --> 00:04:03,120
updates to individual streams so and

00:04:02,720 --> 00:04:04,640
then

00:04:03,120 --> 00:04:06,159
what's interesting and maybe you are not

00:04:04,640 --> 00:04:07,840
aware of that is that we have now open

00:04:06,159 --> 00:04:11,599
to the step

00:04:07,840 --> 00:04:13,760
which uh is actually used for foreign uh

00:04:11,599 --> 00:04:15,439
sorry suse linux enterprise because

00:04:13,760 --> 00:04:17,680
since we inherit binaries

00:04:15,439 --> 00:04:19,120
from slee and sleep doesn't have arm b7

00:04:17,680 --> 00:04:21,600
we have to find a way how to

00:04:19,120 --> 00:04:22,400
you know enable arm with seven builds so

00:04:21,600 --> 00:04:24,240
the way how

00:04:22,400 --> 00:04:26,560
we approach it is by rebuilding each

00:04:24,240 --> 00:04:28,080
layer of sleeve and actually adding rv7

00:04:26,560 --> 00:04:30,880
support there

00:04:28,080 --> 00:04:32,560
and so in the end it's replicated about

00:04:30,880 --> 00:04:33,840
5000 packages but when i was checking

00:04:32,560 --> 00:04:35,280
the actual number including all updates

00:04:33,840 --> 00:04:38,160
was more like 17 000

00:04:35,280 --> 00:04:38,880
in each individual service pack so it's

00:04:38,160 --> 00:04:41,280
quite large

00:04:38,880 --> 00:04:43,040
and then the last project is under the

00:04:41,280 --> 00:04:44,240
open source step name space and it's the

00:04:43,040 --> 00:04:45,680
front runner where we actually

00:04:44,240 --> 00:04:48,000
build everything in a single layer not

00:04:45,680 --> 00:04:50,160
in individual service packs

00:04:48,000 --> 00:04:52,240
and uh this is where we are actually

00:04:50,160 --> 00:04:55,040
trying to develop the army seven and um

00:04:52,240 --> 00:04:57,840
you know we have also option to

00:04:55,040 --> 00:04:59,600
we call it in development versions or or

00:04:57,840 --> 00:05:00,960
some suggested fixes for sp

00:04:59,600 --> 00:05:02,560
for next time respect so there is a

00:05:00,960 --> 00:05:04,240
little bit of flexibility where we can

00:05:02,560 --> 00:05:05,680
take some changes ahead

00:05:04,240 --> 00:05:07,039
because you know this bootstrap and

00:05:05,680 --> 00:05:08,880
ribbon takes quite a lot of time and

00:05:07,039 --> 00:05:10,160
this this simplification really makes it

00:05:08,880 --> 00:05:11,840
shorter

00:05:10,160 --> 00:05:14,000
and then we would you know if it's

00:05:11,840 --> 00:05:15,280
really like if the change is considered

00:05:14,000 --> 00:05:16,639
that it may be dangerous at this point

00:05:15,280 --> 00:05:19,120
we need more testing

00:05:16,639 --> 00:05:20,400
um or it's not yet ready or the

00:05:19,120 --> 00:05:21,039
currently development service pack is

00:05:20,400 --> 00:05:22,800
maybe in

00:05:21,039 --> 00:05:24,639
in rc and we cannot take the change in

00:05:22,800 --> 00:05:24,960
there you know we can actually use this

00:05:24,639 --> 00:05:27,440
uh

00:05:24,960 --> 00:05:28,080
feature to enable the builds and maybe

00:05:27,440 --> 00:05:29,600
we will use it

00:05:28,080 --> 00:05:31,120
and use it for risk five enablement in

00:05:29,600 --> 00:05:33,520
the future because um

00:05:31,120 --> 00:05:34,800
we are in the point where you know this

00:05:33,520 --> 00:05:36,800
is already working

00:05:34,800 --> 00:05:38,720
so this is roughly the structure i'm

00:05:36,800 --> 00:05:39,280
skipping images continuous i know about

00:05:38,720 --> 00:05:40,800
it but

00:05:39,280 --> 00:05:42,000
let's talk about package submissions and

00:05:40,800 --> 00:05:43,199
this is probably where you would

00:05:42,000 --> 00:05:45,360
contribute

00:05:43,199 --> 00:05:46,639
uh if you would try to contribute to rb7

00:05:45,360 --> 00:05:48,240
development it would be one of the two

00:05:46,639 --> 00:05:50,800
projects on the bottom most likely the

00:05:48,240 --> 00:05:50,800
front runner

00:05:51,440 --> 00:05:54,960
so details about the projects opens with

00:05:54,000 --> 00:05:57,280
elite 153

00:05:54,960 --> 00:05:58,720
i mentioned that there is only a few 160

00:05:57,280 --> 00:06:01,039
packages or so

00:05:58,720 --> 00:06:01,759
and it's the top level project uh which

00:06:01,039 --> 00:06:03,680
contains

00:06:01,759 --> 00:06:04,800
mostly the product configuration and

00:06:03,680 --> 00:06:06,960
branding and some

00:06:04,800 --> 00:06:08,479
work packages from slee we are using it

00:06:06,960 --> 00:06:10,160
for building dvds um

00:06:08,479 --> 00:06:11,600
so it's sort of like umbrella project

00:06:10,160 --> 00:06:13,520
which takes all

00:06:11,600 --> 00:06:15,600
you know artifacts from from sleeve from

00:06:13,520 --> 00:06:18,639
back parts and then you know

00:06:15,600 --> 00:06:20,080
makes and makes deliverables and

00:06:18,639 --> 00:06:21,919
there is one interesting part about it

00:06:20,080 --> 00:06:22,880
project and it has the submit request

00:06:21,919 --> 00:06:25,360
mirroring

00:06:22,880 --> 00:06:26,639
so if you are contributing to existing

00:06:25,360 --> 00:06:28,240
package not the new one

00:06:26,639 --> 00:06:30,000
and you submit something against

00:06:28,240 --> 00:06:33,039
opensuse leap just like in the example

00:06:30,000 --> 00:06:36,000
osc sr opens to the 153g in your package

00:06:33,039 --> 00:06:37,440
um it will actually detect where is the

00:06:36,000 --> 00:06:38,000
package coming from the origin of the

00:06:37,440 --> 00:06:40,240
package

00:06:38,000 --> 00:06:41,440
and the submission will be redirected

00:06:40,240 --> 00:06:42,560
there so you don't

00:06:41,440 --> 00:06:44,479
have to think about where it is but

00:06:42,560 --> 00:06:44,800
there are certain cases where if you if

00:06:44,479 --> 00:06:46,000
you

00:06:44,800 --> 00:06:48,639
if you are rebuilding the package we

00:06:46,000 --> 00:06:50,080
have it for you you want to you know

00:06:48,639 --> 00:06:51,759
you want to send the submit request to

00:06:50,080 --> 00:06:54,960
the true origin which could be sli

00:06:51,759 --> 00:06:58,319
in case that we've worked it

00:06:54,960 --> 00:07:01,440
so now let's look at the largest one

00:06:58,319 --> 00:07:02,160
which is back parts basically the new

00:07:01,440 --> 00:07:05,520
leap

00:07:02,160 --> 00:07:07,039
um so the nice part compared to 15 2 is

00:07:05,520 --> 00:07:08,479
now that we built package hot

00:07:07,039 --> 00:07:10,960
packages this is the module on sleeve

00:07:08,479 --> 00:07:12,880
side the publishable part firstly

00:07:10,960 --> 00:07:15,039
and for leap we build it in one project

00:07:12,880 --> 00:07:18,080
not twice like we used to before

00:07:15,039 --> 00:07:19,520
and uh we were considering like whether

00:07:18,080 --> 00:07:20,160
we should actually have these two layers

00:07:19,520 --> 00:07:23,360
or not and

00:07:20,160 --> 00:07:26,000
even now it's a question in 15 4 because

00:07:23,360 --> 00:07:28,080
the additional layer of having being

00:07:26,000 --> 00:07:29,440
able to maybe put some extra branding on

00:07:28,080 --> 00:07:31,440
top of the back parts

00:07:29,440 --> 00:07:32,479
and therefore have two different build

00:07:31,440 --> 00:07:34,319
configurations

00:07:32,479 --> 00:07:35,759
like for package up and leap gives us a

00:07:34,319 --> 00:07:37,840
little bit of flexibility

00:07:35,759 --> 00:07:39,759
there are some downsides as well like a

00:07:37,840 --> 00:07:43,280
little bit increased complexity

00:07:39,759 --> 00:07:47,039
and um as i've recently heard also

00:07:43,280 --> 00:07:50,160
um the scheduler priority is different

00:07:47,039 --> 00:07:51,680
if you finish like ftp 3 build you know

00:07:50,160 --> 00:07:52,479
in foreign project versus the same

00:07:51,680 --> 00:07:56,879
project

00:07:52,479 --> 00:07:59,039
it's also a little bit of delay and

00:07:56,879 --> 00:08:00,639
how to contribute to this new leap uh so

00:07:59,039 --> 00:08:03,199
basically i told you if it's a

00:08:00,639 --> 00:08:05,440
existing package you just contribute to

00:08:03,199 --> 00:08:06,800
opensuse elite153ga

00:08:05,440 --> 00:08:08,560
and if it's a new one you have to be

00:08:06,800 --> 00:08:10,479
really explicit but you you know you can

00:08:08,560 --> 00:08:12,720
use backwards to make sure

00:08:10,479 --> 00:08:14,000
like in any case but um you know i

00:08:12,720 --> 00:08:15,680
really like the redirection so i'm

00:08:14,000 --> 00:08:17,199
always advising to use it because

00:08:15,680 --> 00:08:19,520
it's a sleep package you know like it

00:08:17,199 --> 00:08:21,680
will do the c submission for you

00:08:19,520 --> 00:08:23,759
and uh you know for new packages please

00:08:21,680 --> 00:08:25,280
use the actual uh destination if

00:08:23,759 --> 00:08:26,879
for whatever reason you need to add new

00:08:25,280 --> 00:08:28,560
package to sleeve for example because we

00:08:26,879 --> 00:08:30,319
are updating some software there which

00:08:28,560 --> 00:08:33,120
then has a new dependency

00:08:30,319 --> 00:08:34,399
specifiesly um i will show you on the

00:08:33,120 --> 00:08:36,399
next slide how to do that

00:08:34,399 --> 00:08:38,640
if you are really putting something new

00:08:36,399 --> 00:08:40,159
to leap then you really want back parts

00:08:38,640 --> 00:08:43,200
if you are adding some branding

00:08:40,159 --> 00:08:45,200
then maybe top level lead project

00:08:43,200 --> 00:08:46,800
and uh right now the behavior is that if

00:08:45,200 --> 00:08:49,680
you would submit to 15 4

00:08:46,800 --> 00:08:51,120
ga li 15 for ga which doesn't existed in

00:08:49,680 --> 00:08:52,800
obs but if it would

00:08:51,120 --> 00:08:54,640
it would actually land in the top level

00:08:52,800 --> 00:08:56,160
project which i feel like is incorrect

00:08:54,640 --> 00:08:57,600
so we may actually set default to

00:08:56,160 --> 00:09:00,720
backboards because this will be the case

00:08:57,600 --> 00:09:00,720
for most of the packages

00:09:01,200 --> 00:09:06,160
so let's have a look at the sustain star

00:09:04,399 --> 00:09:07,600
as i mentioned it's it's basically

00:09:06,160 --> 00:09:08,880
layered structure

00:09:07,600 --> 00:09:11,040
you don't see all these service packs

00:09:08,880 --> 00:09:11,920
here only because this is the predefined

00:09:11,040 --> 00:09:14,560
graphics from the

00:09:11,920 --> 00:09:16,320
from the slides so um it only fitted

00:09:14,560 --> 00:09:18,160
these four

00:09:16,320 --> 00:09:19,360
but right everything was once released

00:09:18,160 --> 00:09:21,200
this was a sleeve 15g

00:09:19,360 --> 00:09:23,440
and then you know like if there was an

00:09:21,200 --> 00:09:24,720
update to it um the package actually got

00:09:23,440 --> 00:09:27,600
updated for this this is

00:09:24,720 --> 00:09:29,360
a c15 update so then you know it was 3

00:09:27,600 --> 00:09:32,480
15 ga plus updates

00:09:29,360 --> 00:09:34,000
then 315 sp1 maybe very basic gnome or

00:09:32,480 --> 00:09:35,440
something then you know the package got

00:09:34,000 --> 00:09:37,200
worked in that project

00:09:35,440 --> 00:09:38,720
so you can see how it's glued together

00:09:37,200 --> 00:09:41,040
through the inheritance

00:09:38,720 --> 00:09:42,959
and um there are some nice things about

00:09:41,040 --> 00:09:44,959
it because we actually are supporting

00:09:42,959 --> 00:09:48,000
code streams in parallel right like the

00:09:44,959 --> 00:09:50,880
sp1 ltss and i believe ended recently

00:09:48,000 --> 00:09:52,959
and therefore we are trying to minimize

00:09:50,880 --> 00:09:54,399
the amount of um

00:09:52,959 --> 00:09:56,959
code streams that are supported by our

00:09:54,399 --> 00:09:59,360
maintenance team just nice idea

00:09:56,959 --> 00:10:00,800
and uh but that makes it a little bit

00:09:59,360 --> 00:10:02,079
tricky when you are trying to contribute

00:10:00,800 --> 00:10:03,440
to sleep because you kind of need to

00:10:02,079 --> 00:10:04,079
understand where we want to place it or

00:10:03,440 --> 00:10:07,120
you have to ask

00:10:04,079 --> 00:10:10,399
somebody you know to kind of help you

00:10:07,120 --> 00:10:11,600
where should we put the package usually

00:10:10,399 --> 00:10:13,440
i think this is on the next slide

00:10:11,600 --> 00:10:16,880
actually

00:10:13,440 --> 00:10:17,680
usually if you are thinking where to

00:10:16,880 --> 00:10:20,079
place it the

00:10:17,680 --> 00:10:22,480
answer is if it's rebased to currently

00:10:20,079 --> 00:10:25,200
develop service packs of sb4

00:10:22,480 --> 00:10:27,519
nowadays if it's a library that we try

00:10:25,200 --> 00:10:29,120
to maintain across all code streams then

00:10:27,519 --> 00:10:30,959
the answer is the latest supported

00:10:29,120 --> 00:10:34,160
service bank

00:10:30,959 --> 00:10:35,440
so uh how to submit there again if it's

00:10:34,160 --> 00:10:36,959
uh

00:10:35,440 --> 00:10:38,560
if the package is not forked in leave

00:10:36,959 --> 00:10:38,959
which will be in the most cases for

00:10:38,560 --> 00:10:40,720
sleep

00:10:38,959 --> 00:10:42,480
uh for sleep packages we're gonna try to

00:10:40,720 --> 00:10:44,560
use the binaries from slee

00:10:42,480 --> 00:10:46,399
in as many cases as we can you would

00:10:44,560 --> 00:10:47,200
just do a submit request against sleep

00:10:46,399 --> 00:10:48,560
00:10:47,200 --> 00:10:51,279
and then just name of the package for

00:10:48,560 --> 00:10:53,200
example bash but she's coming from slee

00:10:51,279 --> 00:10:55,839
and this will actually redirect these

00:10:53,200 --> 00:10:58,160
submit requests to suse sleeve 15 sp for

00:10:55,839 --> 00:10:59,360
sp3 update nowadays because the latest

00:10:58,160 --> 00:11:02,720
batch was released in

00:10:59,360 --> 00:11:04,800
sp3 ga and uh

00:11:02,720 --> 00:11:06,720
then the triggers review for suicide

00:11:04,800 --> 00:11:08,800
reviewers and somebody has to manually

00:11:06,720 --> 00:11:09,760
run osc jump review which is a plug-in

00:11:08,800 --> 00:11:12,000
to osc

00:11:09,760 --> 00:11:13,200
that release team has and it will

00:11:12,000 --> 00:11:14,240
actually show the currently open

00:11:13,200 --> 00:11:16,160
requests

00:11:14,240 --> 00:11:17,839
and if it looks good if it has issue

00:11:16,160 --> 00:11:19,040
reference i will go about details like

00:11:17,839 --> 00:11:19,519
what you need to have in that submit

00:11:19,040 --> 00:11:21,760
request

00:11:19,519 --> 00:11:24,000
to sleep then it will trigger the mirror

00:11:21,760 --> 00:11:27,040
so the submission will be cloned on the

00:11:24,000 --> 00:11:28,800
on the internal instance and then

00:11:27,040 --> 00:11:30,320
we have something of statuses and

00:11:28,800 --> 00:11:32,480
comments in place

00:11:30,320 --> 00:11:34,000
that will basically make sure that uh

00:11:32,480 --> 00:11:35,839
you know the

00:11:34,000 --> 00:11:37,360
package you know if if it passes the

00:11:35,839 --> 00:11:39,200
workflow you should know about it on the

00:11:37,360 --> 00:11:40,640
obs side there may be some bugs at the

00:11:39,200 --> 00:11:43,680
moment but uh

00:11:40,640 --> 00:11:44,959
this is the idea and then it's basically

00:11:43,680 --> 00:11:46,640
like any other submission which is

00:11:44,959 --> 00:11:47,600
created by suse engineering it will be

00:11:46,640 --> 00:11:49,839
triggered under the

00:11:47,600 --> 00:11:53,600
name of person who run the inter uh the

00:11:49,839 --> 00:11:53,600
review so in most cases it will be me

00:11:54,560 --> 00:11:59,440
but yeah so

00:11:57,760 --> 00:12:01,600
about the jump review how it looks like

00:11:59,440 --> 00:12:03,040
so this is the example output for

00:12:01,600 --> 00:12:06,320
example for patch

00:12:03,040 --> 00:12:08,160
um it's basically telling me about the

00:12:06,320 --> 00:12:09,279
change and then i'm just looking if it

00:12:08,160 --> 00:12:10,720
has the

00:12:09,279 --> 00:12:12,720
issue reference which we really have to

00:12:10,720 --> 00:12:15,040
have for every single sleep maintenance

00:12:12,720 --> 00:12:16,560
request you need to have a bug reference

00:12:15,040 --> 00:12:18,079
if you are doing version update you will

00:12:16,560 --> 00:12:20,720
have to have some features that are

00:12:18,079 --> 00:12:22,240
referenced but then if if it has all of

00:12:20,720 --> 00:12:22,720
this then we can accept it and it just

00:12:22,240 --> 00:12:25,120
creates

00:12:22,720 --> 00:12:26,079
a new sr you know with new id but in

00:12:25,120 --> 00:12:28,160
different obvious

00:12:26,079 --> 00:12:31,600
um obvious instances the internal one

00:12:28,160 --> 00:12:31,600
which we refer to as ibs

00:12:32,079 --> 00:12:35,519
right now this is fully manual just to

00:12:33,920 --> 00:12:36,959
make clear so if i don't run it for two

00:12:35,519 --> 00:12:37,920
days you have to wait for it maybe we

00:12:36,959 --> 00:12:40,560
should figure out some

00:12:37,920 --> 00:12:41,920
nice way how you know this is uh this

00:12:40,560 --> 00:12:45,920
doesn't depend on whether or

00:12:41,920 --> 00:12:47,839
not it's vacation or not um

00:12:45,920 --> 00:12:49,360
but we can talk about it uh on the

00:12:47,839 --> 00:12:51,519
listing meetings

00:12:49,360 --> 00:12:52,399
so a closer look at justice lee uh

00:12:51,519 --> 00:12:53,680
what's important

00:12:52,399 --> 00:12:55,600
when you are doing submission to sleep

00:12:53,680 --> 00:12:57,120
right that's the deadlines and we try to

00:12:55,600 --> 00:12:57,440
actually have the same deadlines in leap

00:12:57,120 --> 00:12:59,760
so

00:12:57,440 --> 00:13:00,480
our alpha should be really related to

00:12:59,760 --> 00:13:01,680
their alpha

00:13:00,480 --> 00:13:04,480
especially with deadlines it should be

00:13:01,680 --> 00:13:07,360
exactly the same so it feels natural to

00:13:04,480 --> 00:13:08,720
contribute to it because uh

00:13:07,360 --> 00:13:10,480
sleep may be a little bit more strict

00:13:08,720 --> 00:13:12,560
about like when the new features should

00:13:10,480 --> 00:13:14,720
come in leap it's generally

00:13:12,560 --> 00:13:16,639
um after beta you should already delete

00:13:14,720 --> 00:13:17,200
packages so deletions should be before

00:13:16,639 --> 00:13:19,279
but

00:13:17,200 --> 00:13:20,959
we if it's communicated properly take

00:13:19,279 --> 00:13:22,959
changes up until rc and then it should

00:13:20,959 --> 00:13:25,120
be really just bug fixes to stabilize it

00:13:22,959 --> 00:13:27,040
as much as we can honestly it's a little

00:13:25,120 --> 00:13:28,160
bit more strict and we have to respect

00:13:27,040 --> 00:13:29,680
that

00:13:28,160 --> 00:13:31,360
it was always the case it's not that

00:13:29,680 --> 00:13:35,200
this is something new

00:13:31,360 --> 00:13:36,639
and if it's a maintenance request or a

00:13:35,200 --> 00:13:38,160
late feature request something that you

00:13:36,639 --> 00:13:40,399
would open around beta time

00:13:38,160 --> 00:13:41,680
or even later which is happening all the

00:13:40,399 --> 00:13:44,320
time

00:13:41,680 --> 00:13:45,920
there is something called eco and it may

00:13:44,320 --> 00:13:47,199
sound scary we have it on wiki so you

00:13:45,920 --> 00:13:48,399
can actually look for it but what it

00:13:47,199 --> 00:13:50,000
exactly means but it's basically

00:13:48,399 --> 00:13:51,440
engineering change order which requires

00:13:50,000 --> 00:13:53,279
some additional approvals

00:13:51,440 --> 00:13:54,800
to you it remains hidden because even if

00:13:53,279 --> 00:13:57,040
you have access to jira

00:13:54,800 --> 00:13:58,079
and i will show how it looks like later

00:13:57,040 --> 00:13:59,760
you basically see

00:13:58,079 --> 00:14:01,360
just a feature and then you know in

00:13:59,760 --> 00:14:03,440
behind there is one extra

00:14:01,360 --> 00:14:05,279
job which is blocking your general which

00:14:03,440 --> 00:14:06,800
requires which has sub tasks for each

00:14:05,279 --> 00:14:07,600
review and right now i believe it's for

00:14:06,800 --> 00:14:10,160
reviewers

00:14:07,600 --> 00:14:11,760
something like security team um a level

00:14:10,160 --> 00:14:14,800
3 support and so on

00:14:11,760 --> 00:14:16,480
who are saying whether change looks okay

00:14:14,800 --> 00:14:18,079
there are weekly review meetings when

00:14:16,480 --> 00:14:19,519
they're actually going over all open

00:14:18,079 --> 00:14:21,040
dcos

00:14:19,519 --> 00:14:23,120
and once the approval is done then we

00:14:21,040 --> 00:14:24,959
can proceed proceed it will be handed

00:14:23,120 --> 00:14:28,399
over to maintenance team

00:14:24,959 --> 00:14:29,360
and so on and so on uh again as i

00:14:28,399 --> 00:14:31,120
mentioned all

00:14:29,360 --> 00:14:32,880
requests to sleep have to reference some

00:14:31,120 --> 00:14:35,440
issue um either jira

00:14:32,880 --> 00:14:36,560
that would be jsc hash and then the jira

00:14:35,440 --> 00:14:38,160
id if you have

00:14:36,560 --> 00:14:40,000
if you did request the open source uh

00:14:38,160 --> 00:14:41,680
sorry jirasu the com access is open to

00:14:40,000 --> 00:14:44,320
the contributor you may look there

00:14:41,680 --> 00:14:46,320
if not we have meetings on monday and

00:14:44,320 --> 00:14:47,920
now also wiki page for planning for our

00:14:46,320 --> 00:14:49,920
four features for sp4 where we are

00:14:47,920 --> 00:14:51,120
referencing these features

00:14:49,920 --> 00:14:53,040
and this is something that you should

00:14:51,120 --> 00:14:55,040
reference in the sr or the back you know

00:14:53,040 --> 00:14:56,959
for most bug fixes to maintenance

00:14:55,040 --> 00:14:58,639
uh maintenance updates you just need to

00:14:56,959 --> 00:15:01,920
reference debug zilla

00:14:58,639 --> 00:15:01,920
and it should be pretty fine

00:15:02,240 --> 00:15:05,519
and uh again like if we will be

00:15:04,160 --> 00:15:06,079
rejecting this submit request we are

00:15:05,519 --> 00:15:07,600
doing it

00:15:06,079 --> 00:15:09,680
with good intention because we want to

00:15:07,600 --> 00:15:11,440
shorten the feedback loop otherwise we

00:15:09,680 --> 00:15:13,760
would mirror it it would get rejected it

00:15:11,440 --> 00:15:15,839
would just take a few more days

00:15:13,760 --> 00:15:17,760
right now you know we really need to do

00:15:15,839 --> 00:15:19,839
the filter so we don't waste anyone's

00:15:17,760 --> 00:15:22,160
time

00:15:19,839 --> 00:15:23,120
so how does how do this jira looks like

00:15:22,160 --> 00:15:24,959
um

00:15:23,120 --> 00:15:26,480
especially for lead 53 so if it's

00:15:24,959 --> 00:15:30,560
another bug fix or

00:15:26,480 --> 00:15:32,639
cv fix in general but the version update

00:15:30,560 --> 00:15:34,320
we we need to have some sort of feature

00:15:32,639 --> 00:15:36,240
and

00:15:34,320 --> 00:15:38,560
we have an open source project within

00:15:36,240 --> 00:15:40,720
jira where we are tracking all of them

00:15:38,560 --> 00:15:42,240
we know that this is not ideal because

00:15:40,720 --> 00:15:43,839
requesting you know account

00:15:42,240 --> 00:15:45,600
takes some time it's it's not that you

00:15:43,839 --> 00:15:46,800
can just log in and go there we really

00:15:45,600 --> 00:15:48,639
have to you know make change

00:15:46,800 --> 00:15:51,360
on suses ldap and so on needs to be

00:15:48,639 --> 00:15:52,560
approved it takes a few days

00:15:51,360 --> 00:15:54,560
and we are actually considering some

00:15:52,560 --> 00:15:55,440
public interface right now neil gompe

00:15:54,560 --> 00:15:58,480
actually created

00:15:55,440 --> 00:16:00,160
um the project leave slash features

00:15:58,480 --> 00:16:01,759
on the pegger instance we are

00:16:00,160 --> 00:16:03,120
considering if it could be the front end

00:16:01,759 --> 00:16:04,399
where we would have all the features and

00:16:03,120 --> 00:16:06,000
we would have to figure out some sort of

00:16:04,399 --> 00:16:07,519
thing probably manually in the beginning

00:16:06,000 --> 00:16:09,600
but it would be probably more convenient

00:16:07,519 --> 00:16:10,959
you could use your open scissor login

00:16:09,600 --> 00:16:12,560
just go there create it and then we

00:16:10,959 --> 00:16:13,279
would review them probably on our

00:16:12,560 --> 00:16:15,279
mondays

00:16:13,279 --> 00:16:17,600
mondays meetings which i'm referencing

00:16:15,279 --> 00:16:19,120
here we have it also on wiki page if you

00:16:17,600 --> 00:16:21,519
check the comment is the

00:16:19,120 --> 00:16:23,040
feature a change request wiki and what

00:16:21,519 --> 00:16:23,440
we are doing is that we are collecting

00:16:23,040 --> 00:16:25,519
uh

00:16:23,440 --> 00:16:27,120
these features that are necessary to you

00:16:25,519 --> 00:16:29,600
know for these uh

00:16:27,120 --> 00:16:31,199
version updates in sli um we are always

00:16:29,600 --> 00:16:32,160
monitoring if there is some progress or

00:16:31,199 --> 00:16:34,079
what's the block run

00:16:32,160 --> 00:16:36,399
talk about them talk about what's new

00:16:34,079 --> 00:16:36,720
and just making sure that um you know we

00:16:36,399 --> 00:16:38,639
are

00:16:36,720 --> 00:16:39,920
we are tracking everything that needs to

00:16:38,639 --> 00:16:42,000
be done to unblock

00:16:39,920 --> 00:16:43,360
progress on on leave the community part

00:16:42,000 --> 00:16:45,680
this is the area

00:16:43,360 --> 00:16:47,040
most feature requests are hey i need to

00:16:45,680 --> 00:16:48,800
update my package

00:16:47,040 --> 00:16:51,519
and you know like we need to update this

00:16:48,800 --> 00:16:53,920
version in this version of librarianslee

00:16:51,519 --> 00:16:55,600
and this would be basically the case so

00:16:53,920 --> 00:16:57,199
if you ever feel blocked on something

00:16:55,600 --> 00:16:58,720
don't don't say well i will wait until

00:16:57,199 --> 00:16:59,759
sli updates it like we can really

00:16:58,720 --> 00:17:01,759
request the change

00:16:59,759 --> 00:17:04,240
there is good use case for it i need it

00:17:01,759 --> 00:17:06,240
to update my software so you know or we

00:17:04,240 --> 00:17:07,520
can fix this back for example then this

00:17:06,240 --> 00:17:09,919
is exactly

00:17:07,520 --> 00:17:11,439
what is it used for the attendees of

00:17:09,919 --> 00:17:13,839
these meetings are usually me

00:17:11,439 --> 00:17:15,280
neil sometimes guardian joins i know

00:17:13,839 --> 00:17:16,319
sarah was there a few times as well so

00:17:15,280 --> 00:17:18,079
feel free to join

00:17:16,319 --> 00:17:20,000
i'm also concerned maybe in the future

00:17:18,079 --> 00:17:21,439
to run it on slash bar rather than slash

00:17:20,000 --> 00:17:23,120
feature requests because we have more

00:17:21,439 --> 00:17:24,400
attendance there and it feels more

00:17:23,120 --> 00:17:26,799
natural to talk to these people just

00:17:24,400 --> 00:17:28,160
switch to this for half an hour

00:17:26,799 --> 00:17:30,000
go for it people can tell you their

00:17:28,160 --> 00:17:32,000
opinions or or maybe we can create some

00:17:30,000 --> 00:17:34,160
more requests if necessary

00:17:32,000 --> 00:17:35,039
and i really want to be open about these

00:17:34,160 --> 00:17:36,720
and

00:17:35,039 --> 00:17:38,480
in the end it has to be tracked for jira

00:17:36,720 --> 00:17:39,360
but maybe we can use different front-end

00:17:38,480 --> 00:17:41,280
so it doesn't

00:17:39,360 --> 00:17:44,160
you know you don't have to really worry

00:17:41,280 --> 00:17:44,160
about the accounts

00:17:44,960 --> 00:17:49,200
so uh we were talking about these

00:17:46,880 --> 00:17:51,120
origins sleep backboards uh we've also

00:17:49,200 --> 00:17:54,240
mentioned frontrunner step

00:17:51,120 --> 00:17:55,520
uh you know sleep how do i check that so

00:17:54,240 --> 00:17:57,200
i have also some

00:17:55,520 --> 00:18:00,080
exam examples here which are a little

00:17:57,200 --> 00:18:02,799
bit tricky like the llvm

00:18:00,080 --> 00:18:03,280
so you can use we don't have origin

00:18:02,799 --> 00:18:06,400
manager

00:18:03,280 --> 00:18:07,760
in 53 so you can use osc meta or um the

00:18:06,400 --> 00:18:09,840
web browser i will show it

00:18:07,760 --> 00:18:11,520
two slides after and you would you

00:18:09,840 --> 00:18:13,200
always see meta package opensuse only

00:18:11,520 --> 00:18:14,640
153 llvm you know that there is submit

00:18:13,200 --> 00:18:16,559
request redirection so if you want to

00:18:14,640 --> 00:18:18,320
have it easy just submit to leap

00:18:16,559 --> 00:18:19,760
but you know if you really want to

00:18:18,320 --> 00:18:21,280
double check whether the package is not

00:18:19,760 --> 00:18:24,240
really a sleep package you i recommend

00:18:21,280 --> 00:18:26,960
to use osc meta

00:18:24,240 --> 00:18:28,960
so there you would do llvm and you can

00:18:26,960 --> 00:18:30,720
grab it by project or just you know it's

00:18:28,960 --> 00:18:32,320
it's the second line or first line

00:18:30,720 --> 00:18:34,799
and you see that this package is coming

00:18:32,320 --> 00:18:36,240
from open source backboards 315 sp3 so

00:18:34,799 --> 00:18:38,559
it seems like

00:18:36,240 --> 00:18:39,440
it's a community package so it's a leap

00:18:38,559 --> 00:18:40,960
package

00:18:39,440 --> 00:18:42,640
but in the end this is one of the

00:18:40,960 --> 00:18:43,120
packages that we had to fork because of

00:18:42,640 --> 00:18:44,960
different

00:18:43,120 --> 00:18:47,120
you know expectations on seaside and

00:18:44,960 --> 00:18:49,760
leap sites lee has lvm7

00:18:47,120 --> 00:18:50,960
win url vm and this is the meta package

00:18:49,760 --> 00:18:52,160
you know just saying which one is the

00:18:50,960 --> 00:18:55,280
default

00:18:52,160 --> 00:18:56,080
and otherwise these same versions of our

00:18:55,280 --> 00:18:58,160
vm are available

00:18:56,080 --> 00:19:00,240
across um both distributions but we have

00:18:58,160 --> 00:19:02,720
different defaults let's go this way

00:19:00,240 --> 00:19:03,440
and now the question is okay so i see

00:19:02,720 --> 00:19:05,520
it's in sli

00:19:03,440 --> 00:19:07,039
as well it's in backwards so where do i

00:19:05,520 --> 00:19:09,440
submit the submit requests and

00:19:07,039 --> 00:19:11,679
that's that's the tricky part i guess um

00:19:09,440 --> 00:19:14,240
on the new model

00:19:11,679 --> 00:19:15,360
so uh that really depends on some

00:19:14,240 --> 00:19:17,200
aspects um

00:19:15,360 --> 00:19:19,760
you can double check really quickly like

00:19:17,200 --> 00:19:21,760
um and you know use common sense

00:19:19,760 --> 00:19:23,280
is it the identical sources and if it's

00:19:21,760 --> 00:19:24,559
identical sources then you probably know

00:19:23,280 --> 00:19:26,799
that we forked it because we need to

00:19:24,559 --> 00:19:28,559
rebuild it maybe we are utilizing these

00:19:26,799 --> 00:19:30,720
open susan macro

00:19:28,559 --> 00:19:33,360
and we have something you know some

00:19:30,720 --> 00:19:35,600
different behavior on leap

00:19:33,360 --> 00:19:36,559
and if they are different then you know

00:19:35,600 --> 00:19:37,840
that we have

00:19:36,559 --> 00:19:39,520
an agreement to have completely

00:19:37,840 --> 00:19:41,200
different source source code like an

00:19:39,520 --> 00:19:43,200
llvms case

00:19:41,200 --> 00:19:44,880
and uh if it's completely different then

00:19:43,200 --> 00:19:45,120
most likely the answer is that you want

00:19:44,880 --> 00:19:47,360
to

00:19:45,120 --> 00:19:49,520
um you know contribute to sli uh to leap

00:19:47,360 --> 00:19:51,440
sorry because we have different sources

00:19:49,520 --> 00:19:53,440
so we will work on these

00:19:51,440 --> 00:19:54,799
if it's identical then sleeve is the

00:19:53,440 --> 00:19:57,760
answer because we

00:19:54,799 --> 00:19:59,440
we have to be in sync and in most cases

00:19:57,760 --> 00:20:01,039
um we are doing forks for example

00:19:59,440 --> 00:20:01,919
because we have some extra multiple

00:20:01,039 --> 00:20:04,080
flavors

00:20:01,919 --> 00:20:05,600
which we would like to have in lip and

00:20:04,080 --> 00:20:06,960
in package but they are not supported in

00:20:05,600 --> 00:20:09,280
the sleeve side

00:20:06,960 --> 00:20:10,799
so usually this lea is the answer and

00:20:09,280 --> 00:20:12,240
then we would you know copy the source

00:20:10,799 --> 00:20:13,120
code as soon as it's done and rebuild

00:20:12,240 --> 00:20:16,640
the package so

00:20:13,120 --> 00:20:20,000
we can ship the additional flavors

00:20:16,640 --> 00:20:22,799
um and then if it's in slee

00:20:20,000 --> 00:20:25,280
and you see that for example the package

00:20:22,799 --> 00:20:26,240
just like here is coming from c15 sp1 ga

00:20:25,280 --> 00:20:29,440
which is uh

00:20:26,240 --> 00:20:31,520
eol already then that's tricky then i

00:20:29,440 --> 00:20:33,120
really recommend to sync up with sync up

00:20:31,520 --> 00:20:34,720
with us but on the other hand if you

00:20:33,120 --> 00:20:35,840
file a submit request to whatever even

00:20:34,720 --> 00:20:38,080
beats d15

00:20:35,840 --> 00:20:39,039
sp1 ga we will go for that review and we

00:20:38,080 --> 00:20:40,640
will see oh

00:20:39,039 --> 00:20:43,039
you probably need to send it to

00:20:40,640 --> 00:20:44,480
something newer so in general the answer

00:20:43,039 --> 00:20:46,240
is the latest support is

00:20:44,480 --> 00:20:47,919
separated service pack or if you are

00:20:46,240 --> 00:20:49,840
doing rebase the currently developed

00:20:47,919 --> 00:20:52,080
service pack like sp4 in this case for

00:20:49,840 --> 00:20:53,919
example

00:20:52,080 --> 00:20:55,840
so it's a little bit tricky and i know

00:20:53,919 --> 00:20:57,520
that it worked for guidance but we are

00:20:55,840 --> 00:21:00,960
here to help you

00:20:57,520 --> 00:21:02,159
and again as mentioned we are reviewing

00:21:00,960 --> 00:21:03,200
every single submission so if we

00:21:02,159 --> 00:21:04,799
something suspicious

00:21:03,200 --> 00:21:06,400
we will just let you know then we have

00:21:04,799 --> 00:21:09,679
to redo it differently or help you to

00:21:06,400 --> 00:21:09,679
achieve what you need to achieve

00:21:11,200 --> 00:21:15,200
another case um branding packages i've

00:21:13,440 --> 00:21:17,039
mentioned that are in leap so

00:21:15,200 --> 00:21:19,840
this is very simple example again you

00:21:17,039 --> 00:21:21,919
would do oscsr to leave 153

00:21:19,840 --> 00:21:23,360
just like in many in the other cases the

00:21:21,919 --> 00:21:24,720
only exception is really when we further

00:21:23,360 --> 00:21:26,880
package there you have to

00:21:24,720 --> 00:21:28,640
think about where do i want to you know

00:21:26,880 --> 00:21:31,600
update a code

00:21:28,640 --> 00:21:33,039
so here just uh request to leave 153 a

00:21:31,600 --> 00:21:34,880
maintenance request so maintenance

00:21:33,039 --> 00:21:36,400
requests are currently tricky so for

00:21:34,880 --> 00:21:40,320
previous uh code streams

00:21:36,400 --> 00:21:42,480
you can just do sr against let's say c15

00:21:40,320 --> 00:21:44,720
i don't know sp2 update and it will work

00:21:42,480 --> 00:21:45,919
but for sleeve 15 sp3 updated currently

00:21:44,720 --> 00:21:47,280
doesn't work we have a bug and

00:21:45,919 --> 00:21:50,159
i'm discussing it without to build how

00:21:47,280 --> 00:21:50,720
to get it fixed because uh if you do mr

00:21:50,159 --> 00:21:52,080
it

00:21:50,720 --> 00:21:54,080
triggers the opensuse maintenance

00:21:52,080 --> 00:21:57,120
request and it doesn't get too sleek so

00:21:54,080 --> 00:21:58,720
we have to improve this but uh

00:21:57,120 --> 00:22:01,280
stay tuned like it should be fixed with

00:21:58,720 --> 00:22:02,720
the next few days and uh the maintenance

00:22:01,280 --> 00:22:04,240
work for documentation including the

00:22:02,720 --> 00:22:07,360
sleeve one will be documented on the

00:22:04,240 --> 00:22:07,360
maintenance process

00:22:09,120 --> 00:22:12,640
wiki another way to check origin i've

00:22:11,200 --> 00:22:13,760
mentioned that you can do it also

00:22:12,640 --> 00:22:16,559
through web browser

00:22:13,760 --> 00:22:17,120
so if you go to leave 153 project you

00:22:16,559 --> 00:22:19,360
can check

00:22:17,120 --> 00:22:21,039
the inherited wall for packages that we

00:22:19,360 --> 00:22:23,280
are introducing in 153

00:22:21,039 --> 00:22:24,559
it would be or the branding packages it

00:22:23,280 --> 00:22:26,240
would be the packages but you want to

00:22:24,559 --> 00:22:27,440
see the inherited ones because i told

00:22:26,240 --> 00:22:28,559
you most of the leap is coming from

00:22:27,440 --> 00:22:30,000
backboards

00:22:28,559 --> 00:22:31,760
and here you just look for package and

00:22:30,000 --> 00:22:33,280
you see oh it's coming from slee or it's

00:22:31,760 --> 00:22:34,960
coming from backwards and

00:22:33,280 --> 00:22:36,480
which you know service back of sleep

00:22:34,960 --> 00:22:38,559
this is the very first one the

00:22:36,480 --> 00:22:41,200
zeroed service pack is just we are not

00:22:38,559 --> 00:22:44,799
using sp0 in the name

00:22:41,200 --> 00:22:44,799
so this is actually a convenient way

00:22:45,280 --> 00:22:48,960
um one thing that i would like to say

00:22:47,600 --> 00:22:50,480
before the discussion because next step

00:22:48,960 --> 00:22:53,360
is just discussion you know like

00:22:50,480 --> 00:22:54,000
listening to your pain points and

00:22:53,360 --> 00:22:56,000
basically

00:22:54,000 --> 00:22:57,840
i'm looking for some suggestions how to

00:22:56,000 --> 00:22:59,280
make this little bit more user-friendly

00:22:57,840 --> 00:23:00,400
contributor friendly maybe it's the best

00:22:59,280 --> 00:23:02,960
word here

00:23:00,400 --> 00:23:04,240
and i would like to ask you to join barm

00:23:02,960 --> 00:23:05,520
you know every single time when you have

00:23:04,240 --> 00:23:06,159
a moment or when you want to discuss

00:23:05,520 --> 00:23:08,400
some of the

00:23:06,159 --> 00:23:10,080
um issues or hindrance or whatever you

00:23:08,400 --> 00:23:12,880
have with contributing

00:23:10,080 --> 00:23:13,200
there's always someone and you know this

00:23:12,880 --> 00:23:15,440
is

00:23:13,200 --> 00:23:16,799
taken from how fast 3am and you can see

00:23:15,440 --> 00:23:18,400
uh you know

00:23:16,799 --> 00:23:19,760
cest time and you can see that people

00:23:18,400 --> 00:23:22,799
are there everybody's happy it's just

00:23:19,760 --> 00:23:26,400
because we are from all around the globe

00:23:22,799 --> 00:23:26,400
and now let's move to discussion

00:23:26,960 --> 00:23:30,480
because otherwise this is the end of the

00:23:28,480 --> 00:23:37,840
presentation let me

00:23:30,480 --> 00:23:37,840
switch then

00:23:42,640 --> 00:23:44,960
and

00:23:47,440 --> 00:23:51,840
the newest room

00:24:21,279 --> 00:24:24,400
hey guys can you hear me

00:24:29,039 --> 00:24:33,120
we can hear you perfect perfect any

00:24:31,039 --> 00:24:34,880
questions like i know it's overwhelming

00:24:33,120 --> 00:24:36,640
because there is a lot of information so

00:24:34,880 --> 00:24:38,880
sorry for that but unfortunately this is

00:24:36,640 --> 00:24:41,279
how the new layout looks like

00:24:38,880 --> 00:24:42,720
um and if somebody has some questions or

00:24:41,279 --> 00:24:45,120
something is still unclear

00:24:42,720 --> 00:24:46,559
just ask you know this is why the

00:24:45,120 --> 00:24:47,760
discussion is more important than the

00:24:46,559 --> 00:24:49,840
actual slides because

00:24:47,760 --> 00:24:53,039
we want to fix your problem and not just

00:24:49,840 --> 00:24:53,039
you know talk about how it looks like

00:24:55,120 --> 00:24:57,520
no one

00:24:58,640 --> 00:25:02,960
yeah neil can talk about it a little bit

00:25:00,720 --> 00:25:02,960
right

00:25:04,240 --> 00:25:09,039
so neil let let me let me give context

00:25:08,000 --> 00:25:10,480
to people so neil

00:25:09,039 --> 00:25:12,000
as mentioned is one of the people who

00:25:10,480 --> 00:25:14,720
actually attend the meeting like

00:25:12,000 --> 00:25:16,720
regularly he's there every time and

00:25:14,720 --> 00:25:17,919
you know he has he has the experience

00:25:16,720 --> 00:25:19,600
with late features not yet

00:25:17,919 --> 00:25:21,760
early features because i think that we

00:25:19,600 --> 00:25:24,240
started relatively late also v15

00:25:21,760 --> 00:25:25,840
3 had a really short development phase

00:25:24,240 --> 00:25:27,520
because we could only start with sleepy

00:25:25,840 --> 00:25:29,760
tattoo because of the

00:25:27,520 --> 00:25:31,440
nda so this release we will have much

00:25:29,760 --> 00:25:34,240
more time actually to work on some early

00:25:31,440 --> 00:25:34,240
features as well

00:25:35,039 --> 00:25:43,200

YouTube URL: https://www.youtube.com/watch?v=-0j8ZN0_518


