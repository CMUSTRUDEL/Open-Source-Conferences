Title: openSUSE Virtual Conference 2021 - The path to sweeter image builds with KIWI
Publication date: 2021-06-19
Playlist: openSUSE Virtual Conference 2021
Description: 
	https://media.ccc.de/v/3553-the-path-to-sweeter-image-builds-with-kiwi

How Datto uses KIWI to simplify building appliance images

One of the more heavily underrated openSUSE projects is the [KIWI image builder](http://osinside.github.io/kiwi). In the last few years, [Datto](https://datto.com) has started using KIWI to replace the patchwork of custom image build tools to provide a consistent toolchain for producing various appliance images.

This talk introduces the KIWI appliance image builder, outlines some of Datto's use-cases for KIWI, and how Datto uses KIWI to support those use-cases. This also includes a brief demo of building an image with KIWI.

One of the more heavily underrated openSUSE projects is the [KIWI image builder](http://osinside.github.io/kiwi). In the last few years, [Datto](https://datto.com) has started using KIWI to replace the patchwork of custom image build tools to provide a consistent toolchain for producing various appliance images.

This talk introduces the KIWI appliance image builder, outlines some of Datto's use-cases for KIWI, and how Datto uses KIWI to support those use-cases. This also includes a brief demo of building an image with KIWI.

Neal Gompa
Captions: 
	00:00:01,580 --> 00:00:05,850
[Music]

00:00:11,840 --> 00:00:14,960
hello everyone my name is neil gampa and

00:00:13,759 --> 00:00:16,080
i'm here to talk to you about sweeter

00:00:14,960 --> 00:00:19,279
image builds with kiwi

00:00:16,080 --> 00:00:21,520
now data's using kiwi so

00:00:19,279 --> 00:00:23,279
first talk a little bit about me uh i

00:00:21,520 --> 00:00:24,000
call myself a professional technologist

00:00:23,279 --> 00:00:26,160
i've been

00:00:24,000 --> 00:00:27,199
i've been in technology since i could

00:00:26,160 --> 00:00:29,519
remember

00:00:27,199 --> 00:00:30,800
and i've been involved in linux for

00:00:29,519 --> 00:00:32,719
nearly 15 years

00:00:30,800 --> 00:00:35,120
and as a contributor and developer in

00:00:32,719 --> 00:00:36,559
fedora magia opensuse and openmandriva

00:00:35,120 --> 00:00:39,840
linux distributions

00:00:36,559 --> 00:00:42,399
of note also contributor to the rpm dnf

00:00:39,840 --> 00:00:45,280
and various related software management

00:00:42,399 --> 00:00:46,320
systems management and uh image building

00:00:45,280 --> 00:00:48,160
tools

00:00:46,320 --> 00:00:49,520
of course that includes kiwi the tool

00:00:48,160 --> 00:00:51,199
we're talking about today

00:00:49,520 --> 00:00:53,680
and i'm a senior devops engineer at

00:00:51,199 --> 00:00:56,399
datto so a little bit about datto we

00:00:53,680 --> 00:00:57,600
were founded in 2007 we've got 22 global

00:00:56,399 --> 00:01:01,120
locations

00:00:57,600 --> 00:01:03,440
over 1600 employees worldwide

00:01:01,120 --> 00:01:05,360
uh 17 000 managed service provider

00:01:03,440 --> 00:01:06,240
partners and we operate entirely in the

00:01:05,360 --> 00:01:08,880
channel

00:01:06,240 --> 00:01:10,479
meaning that all of our products are not

00:01:08,880 --> 00:01:13,680
directly sold to you

00:01:10,479 --> 00:01:14,479
we sell to companies that take our

00:01:13,680 --> 00:01:16,799
services

00:01:14,479 --> 00:01:17,520
and optimize them for their clients

00:01:16,799 --> 00:01:20,560
needs

00:01:17,520 --> 00:01:24,159
and they sell them uh to

00:01:20,560 --> 00:01:26,720
you we have

00:01:24,159 --> 00:01:27,439
local offices in nine countries that

00:01:26,720 --> 00:01:30,960
help

00:01:27,439 --> 00:01:32,400
uh service providers and serve over one

00:01:30,960 --> 00:01:34,159
million

00:01:32,400 --> 00:01:35,439
small to medium businesses around the

00:01:34,159 --> 00:01:37,280
world

00:01:35,439 --> 00:01:40,159
or small to medium enterprises you know

00:01:37,280 --> 00:01:42,799
you may have heard that term instead

00:01:40,159 --> 00:01:43,759
we offer a wide variety of products and

00:01:42,799 --> 00:01:46,960
solutions to

00:01:43,759 --> 00:01:47,680
support our msp partners with to enable

00:01:46,960 --> 00:01:50,880
their business

00:01:47,680 --> 00:01:54,320
to support their business their clients

00:01:50,880 --> 00:01:56,479
and that ranges from uh

00:01:54,320 --> 00:01:57,840
disaster recovery backups business

00:01:56,479 --> 00:01:59,840
continuity stuff with our unified

00:01:57,840 --> 00:02:01,759
continuity products with

00:01:59,840 --> 00:02:04,079
uh being able to do managed networking

00:02:01,759 --> 00:02:07,280
solutions with data networking

00:02:04,079 --> 00:02:08,959
uh professional services automation and

00:02:07,280 --> 00:02:09,759
remote monitoring and management with

00:02:08,959 --> 00:02:13,120
our rmm

00:02:09,759 --> 00:02:15,120
and psa products as well as

00:02:13,120 --> 00:02:17,520
inventory and quoting and revenue

00:02:15,120 --> 00:02:20,560
management with our commerce solutions

00:02:17,520 --> 00:02:22,400
um so taking all that and going back to

00:02:20,560 --> 00:02:27,200
building images at datto

00:02:22,400 --> 00:02:30,000
so for building images at datto

00:02:27,200 --> 00:02:31,200
we got a little bit of a problem we can

00:02:30,000 --> 00:02:32,959
build images for days

00:02:31,200 --> 00:02:34,840
practically everyone did image building

00:02:32,959 --> 00:02:36,959
differently with a different set of

00:02:34,840 --> 00:02:39,200
issues caused by these methods

00:02:36,959 --> 00:02:40,560
so some tools we're using is packer

00:02:39,200 --> 00:02:43,440
debian's live build

00:02:40,560 --> 00:02:44,319
for isos custom shell scripts for making

00:02:43,440 --> 00:02:46,319
disk images and

00:02:44,319 --> 00:02:47,360
and custom base images and all kinds of

00:02:46,319 --> 00:02:49,760
weird little things

00:02:47,360 --> 00:02:51,519
and we use vert builder for making

00:02:49,760 --> 00:02:53,440
various

00:02:51,519 --> 00:02:54,879
custom virtual machine disk images that

00:02:53,440 --> 00:02:55,840
don't really fit into clouds and are

00:02:54,879 --> 00:02:58,640
used for

00:02:55,840 --> 00:03:00,080
very specialty use cases the problem

00:02:58,640 --> 00:03:02,000
with this is that we wind up having

00:03:00,080 --> 00:03:05,040
problems that are just

00:03:02,000 --> 00:03:06,080
odd and this example is great of packer

00:03:05,040 --> 00:03:09,360
just

00:03:06,080 --> 00:03:10,959
not creating images that are same

00:03:09,360 --> 00:03:13,120
because the actual mechanism in which it

00:03:10,959 --> 00:03:16,400
produces the image

00:03:13,120 --> 00:03:18,000
is not sane it goes by

00:03:16,400 --> 00:03:19,599
pausing the virtual machine and taking a

00:03:18,000 --> 00:03:21,760
snapshot and exporting it

00:03:19,599 --> 00:03:23,280
well this kind of was a problem when

00:03:21,760 --> 00:03:24,000
you're using puppet to configure the

00:03:23,280 --> 00:03:25,680
environment

00:03:24,000 --> 00:03:27,040
and that includes like setting the

00:03:25,680 --> 00:03:28,879
machines up for getting

00:03:27,040 --> 00:03:31,360
unattended updates and things like that

00:03:28,879 --> 00:03:32,239
and the apt daily service in particular

00:03:31,360 --> 00:03:34,480
just

00:03:32,239 --> 00:03:35,440
was always always started and running

00:03:34,480 --> 00:03:37,440
just as we were

00:03:35,440 --> 00:03:39,120
pausing the machine and that left apt

00:03:37,440 --> 00:03:40,239
and d package in a broken state when you

00:03:39,120 --> 00:03:42,480
tried to boot up

00:03:40,239 --> 00:03:44,840
the machine in a new instance so we had

00:03:42,480 --> 00:03:46,000
to do all kinds of things to work around

00:03:44,840 --> 00:03:47,840
that

00:03:46,000 --> 00:03:49,519
uh you know another example is that when

00:03:47,840 --> 00:03:53,360
the spectrum meltdown fixes

00:03:49,519 --> 00:03:54,879
landed you know a couple years back um

00:03:53,360 --> 00:03:57,360
live build didn't really cope with that

00:03:54,879 --> 00:04:00,319
very well initially and

00:03:57,360 --> 00:04:01,439
we had to do funny things to kind of

00:04:00,319 --> 00:04:04,239
make that work

00:04:01,439 --> 00:04:05,200
and that also uncovered another random

00:04:04,239 --> 00:04:07,280
thing where

00:04:05,200 --> 00:04:09,200
suddenly xz compression didn't work

00:04:07,280 --> 00:04:12,879
anymore so we had to switch to gzip

00:04:09,200 --> 00:04:14,319
we don't know yeah and this kind of

00:04:12,879 --> 00:04:15,680
led to a core problem that we've

00:04:14,319 --> 00:04:17,759
discovered is that some of these tools

00:04:15,680 --> 00:04:19,840
have seemingly hysterical behaviors

00:04:17,759 --> 00:04:21,440
but something that's also been kind of

00:04:19,840 --> 00:04:23,120
increasingly common among these tools is

00:04:21,440 --> 00:04:25,680
that they're poorly maintained

00:04:23,120 --> 00:04:26,240
and that the the actual capabilities of

00:04:25,680 --> 00:04:30,320
them are

00:04:26,240 --> 00:04:32,320
incomplete and these tools don't

00:04:30,320 --> 00:04:34,240
have you know what i would like to call

00:04:32,320 --> 00:04:35,680
a method to their madness reasoning how

00:04:34,240 --> 00:04:36,960
they work was too hard

00:04:35,680 --> 00:04:38,880
and that made using them difficult

00:04:36,960 --> 00:04:40,800
because when something went

00:04:38,880 --> 00:04:43,520
weird in an image build process or in

00:04:40,800 --> 00:04:45,440
the image produced by the build

00:04:43,520 --> 00:04:46,960
it was difficult to walk back and figure

00:04:45,440 --> 00:04:48,000
out like what happened and what went

00:04:46,960 --> 00:04:51,919
wrong

00:04:48,000 --> 00:04:52,479
and that really eats a bunch of time

00:04:51,919 --> 00:04:55,199
that

00:04:52,479 --> 00:04:56,080
could be better spent doing more

00:04:55,199 --> 00:04:58,240
valuable things

00:04:56,080 --> 00:05:00,080
like iterating on it to you know build

00:04:58,240 --> 00:05:03,360
more capabilities layered systems

00:05:00,080 --> 00:05:05,919
solutions and things like that

00:05:03,360 --> 00:05:07,600
so i started looking at kiwi as a

00:05:05,919 --> 00:05:11,039
solution

00:05:07,600 --> 00:05:13,680
to solve this problem because kiwi was

00:05:11,039 --> 00:05:15,759
straightforward and idiomatic it has xml

00:05:13,680 --> 00:05:17,120
yaml or json based descriptions

00:05:15,759 --> 00:05:19,360
with some simple script hooks that you

00:05:17,120 --> 00:05:21,199
can use for other flexibility

00:05:19,360 --> 00:05:22,720
and speaking of flexibility it can build

00:05:21,199 --> 00:05:24,560
almost any type of image and if it

00:05:22,720 --> 00:05:27,840
doesn't know what type of image it is

00:05:24,560 --> 00:05:30,160
you can use the python api for kiwi to

00:05:27,840 --> 00:05:32,000
construct custom types of images

00:05:30,160 --> 00:05:33,840
so you can build upon the framework and

00:05:32,000 --> 00:05:36,560
the tooling inside of kiwi

00:05:33,840 --> 00:05:38,240
to construct anything you want and it's

00:05:36,560 --> 00:05:40,639
free in open source software under the

00:05:38,240 --> 00:05:42,240
new general public license version 3

00:05:40,639 --> 00:05:43,840
and it's actively developed and

00:05:42,240 --> 00:05:47,120
maintained and the developers are

00:05:43,840 --> 00:05:48,720
friendly and helpful and that was huge

00:05:47,120 --> 00:05:50,320
to me because

00:05:48,720 --> 00:05:52,479
it didn't actually work right out of the

00:05:50,320 --> 00:05:54,560
box so datto produces

00:05:52,479 --> 00:05:56,000
a lot of ubuntu-based images and that

00:05:54,560 --> 00:05:57,360
means we have to work with the

00:05:56,000 --> 00:05:59,039
you know making images with the

00:05:57,360 --> 00:06:00,080
bootstrap and apt and

00:05:59,039 --> 00:06:03,360
you know there were a couple of issues

00:06:00,080 --> 00:06:05,199
that i discovered along the way and

00:06:03,360 --> 00:06:06,560
so i went and fixed them like when i

00:06:05,199 --> 00:06:08,639
went and sent pull requests they were

00:06:06,560 --> 00:06:11,280
very quick to respond with feedback

00:06:08,639 --> 00:06:12,160
and they worked with me on on making

00:06:11,280 --> 00:06:14,400
sure that it was

00:06:12,160 --> 00:06:15,840
right and then we got it in and made

00:06:14,400 --> 00:06:17,520
releases and they're very good about

00:06:15,840 --> 00:06:19,280
releasing fixes as they're

00:06:17,520 --> 00:06:21,039
as they're being merged in so that that

00:06:19,280 --> 00:06:23,600
was great and when we

00:06:21,039 --> 00:06:25,759
started evolving into like handling some

00:06:23,600 --> 00:06:29,440
uh centos based images

00:06:25,759 --> 00:06:31,120
that also was uh

00:06:29,440 --> 00:06:34,479
somewhat incomplete and so i added

00:06:31,120 --> 00:06:36,639
support for features that we needed that

00:06:34,479 --> 00:06:38,319
just weren't wired up yet uh perhaps

00:06:36,639 --> 00:06:39,759
they didn't know or whatever but like

00:06:38,319 --> 00:06:42,240
i figured it out and added the

00:06:39,759 --> 00:06:44,080
functionality and this particular

00:06:42,240 --> 00:06:46,400
change was interesting and cool because

00:06:44,080 --> 00:06:49,280
i didn't really know how to work with

00:06:46,400 --> 00:06:50,000
you know the extensive test suite that

00:06:49,280 --> 00:06:53,039
they have

00:06:50,000 --> 00:06:55,440
for kiwi and they were really quick and

00:06:53,039 --> 00:06:59,039
responsive and friendly and helpful

00:06:55,440 --> 00:07:01,039
all these things for helping me make the

00:06:59,039 --> 00:07:02,479
the unit tests to make sure that the

00:07:01,039 --> 00:07:04,319
behavior worked because

00:07:02,479 --> 00:07:06,240
and they were very patient with me

00:07:04,319 --> 00:07:08,880
trying to figure out the test suite and

00:07:06,240 --> 00:07:10,080
gave me hints and such and that made the

00:07:08,880 --> 00:07:12,080
huge difference i was able to be

00:07:10,080 --> 00:07:13,919
successful and very quickly iterate

00:07:12,080 --> 00:07:17,199
on this and get this into a state that

00:07:13,919 --> 00:07:19,280
it could be merged and it was

00:07:17,199 --> 00:07:21,120
and so i want to show you a little bit

00:07:19,280 --> 00:07:24,479
about kiwi with

00:07:21,120 --> 00:07:25,360
you know a sample that i from one of the

00:07:24,479 --> 00:07:29,199
descriptions

00:07:25,360 --> 00:07:32,720
that i've been working with so um

00:07:29,199 --> 00:07:34,800
we have here a

00:07:32,720 --> 00:07:36,319
container appliance based on centos

00:07:34,800 --> 00:07:39,520
stream nine

00:07:36,319 --> 00:07:41,680
and this is working off of test composes

00:07:39,520 --> 00:07:42,880
that are being released right now centos

00:07:41,680 --> 00:07:45,840
stream nine

00:07:42,880 --> 00:07:46,319
uh stuff became available last month and

00:07:45,840 --> 00:07:49,680
so

00:07:46,319 --> 00:07:52,000
i started working with it so this

00:07:49,680 --> 00:07:54,000
container appliance

00:07:52,000 --> 00:07:55,919
is configured using the dnf package

00:07:54,000 --> 00:07:57,280
manager you can see here

00:07:55,919 --> 00:07:59,280
it's english only because that's the

00:07:57,280 --> 00:08:02,240
only locale i care about time zone is

00:07:59,280 --> 00:08:05,759
utc because screw daylight savings time

00:08:02,240 --> 00:08:07,440
uh we have locale filtering and

00:08:05,759 --> 00:08:08,960
turned on so that means that if there's

00:08:07,440 --> 00:08:10,240
any other locale data

00:08:08,960 --> 00:08:11,840
or any other locales that are being

00:08:10,240 --> 00:08:15,280
installed because of packages they'll

00:08:11,840 --> 00:08:15,280
get filtered out by rpm

00:08:15,599 --> 00:08:19,599
but i also have check signatures

00:08:17,120 --> 00:08:21,599
disabled because

00:08:19,599 --> 00:08:23,360
right now this content is not signed and

00:08:21,599 --> 00:08:24,960
so you can't really

00:08:23,360 --> 00:08:27,599
do anything about that so i just turned

00:08:24,960 --> 00:08:29,280
it off um this other flag which is neat

00:08:27,599 --> 00:08:30,960
is the exclude dock so i wanted to make

00:08:29,280 --> 00:08:32,640
the image super small so i don't need to

00:08:30,960 --> 00:08:36,000
include documentation stuff

00:08:32,640 --> 00:08:36,399
since rpm has flags for that we just set

00:08:36,000 --> 00:08:38,000
it

00:08:36,399 --> 00:08:39,680
and so all the documentation was just

00:08:38,000 --> 00:08:40,320
stripped out because it just wasn't

00:08:39,680 --> 00:08:43,360
installed

00:08:40,320 --> 00:08:47,440
and we have a small set of packages here

00:08:43,360 --> 00:08:50,080
just file system the branding packages

00:08:47,440 --> 00:08:50,880
and some the package manager and some

00:08:50,080 --> 00:08:53,120
utilities

00:08:50,880 --> 00:08:54,240
that's about it and this is just a

00:08:53,120 --> 00:08:56,240
simple

00:08:54,240 --> 00:08:58,160
tbz type image which basically means

00:08:56,240 --> 00:09:01,760
it's just a a tarball

00:08:58,160 --> 00:09:05,360
um with files in it uh and

00:09:01,760 --> 00:09:08,640
we also should say the

00:09:05,360 --> 00:09:10,160
this is the uh the shell hook

00:09:08,640 --> 00:09:12,880
that is used you could actually replace

00:09:10,160 --> 00:09:16,480
this with um calling ansible

00:09:12,880 --> 00:09:19,680
or or running some kind of

00:09:16,480 --> 00:09:22,800
um other tool

00:09:19,680 --> 00:09:24,800
uh another language or whatnot because

00:09:22,800 --> 00:09:27,519
this can be anything as long as it is

00:09:24,800 --> 00:09:29,040
called config.sh it will execute it

00:09:27,519 --> 00:09:31,120
and so you can have this do anything

00:09:29,040 --> 00:09:32,000
you'd like um this one's just super

00:09:31,120 --> 00:09:33,920
simple

00:09:32,000 --> 00:09:35,680
about setting it up to be multi-user

00:09:33,920 --> 00:09:38,560
with the root user populated and setting

00:09:35,680 --> 00:09:40,640
the hostname as localhost here

00:09:38,560 --> 00:09:42,480
and then cleaning out any extra unwanted

00:09:40,640 --> 00:09:43,040
locales that may have not been correctly

00:09:42,480 --> 00:09:46,080
marked

00:09:43,040 --> 00:09:49,200
as locale data by rpm

00:09:46,080 --> 00:09:51,839
and so let's just go ahead and build it

00:09:49,200 --> 00:09:51,839
right so

00:09:52,399 --> 00:09:55,760
you can see it's running this through

00:09:54,959 --> 00:09:59,200
and

00:09:55,760 --> 00:10:01,040
we want to see the log here

00:09:59,200 --> 00:10:03,360
and you can see this is setting up the

00:10:01,040 --> 00:10:06,880
image there and it's all

00:10:03,360 --> 00:10:08,399
going through kiwi here you see that

00:10:06,880 --> 00:10:10,880
it was setting up the repos then it

00:10:08,399 --> 00:10:13,200
bootstrapped and installed the packages

00:10:10,880 --> 00:10:15,600
after the package installation was done

00:10:13,200 --> 00:10:18,800
it ran the scripts

00:10:15,600 --> 00:10:19,839
the script helpers and is creating the

00:10:18,800 --> 00:10:22,240
tarball right now

00:10:19,839 --> 00:10:24,160
so you can see it's doing that it's an

00:10:22,240 --> 00:10:27,680
xz compressed tarball

00:10:24,160 --> 00:10:29,360
um with multiple threads so it's like

00:10:27,680 --> 00:10:33,839
using all the cores on the computer to

00:10:29,360 --> 00:10:33,839
actually produce the tarball

00:10:34,720 --> 00:10:41,040
and after that it will

00:10:38,800 --> 00:10:42,800
uh and while it's creating that i've

00:10:41,040 --> 00:10:45,519
already pre-created this before so

00:10:42,800 --> 00:10:47,200
we're gonna go ahead and boot it up in

00:10:45,519 --> 00:10:52,320
and spawn so we'll just

00:10:47,200 --> 00:10:54,959
start that up and now you see that

00:10:52,320 --> 00:10:56,800
it's got the it starts up like it would

00:10:54,959 --> 00:10:58,560
a regular computer so this container was

00:10:56,800 --> 00:11:01,760
particularly configured

00:10:58,560 --> 00:11:03,680
to behave like you know how you would

00:11:01,760 --> 00:11:05,040
start up a vm so it starts up system d

00:11:03,680 --> 00:11:07,519
and then starts login d

00:11:05,040 --> 00:11:09,040
and so i can do root my super secure

00:11:07,519 --> 00:11:11,920
passwords

00:11:09,040 --> 00:11:12,959
uh and go in here there's nothing in

00:11:11,920 --> 00:11:15,920
here but i can

00:11:12,959 --> 00:11:16,640
cd to this and i see that uh and then in

00:11:15,920 --> 00:11:18,320
etsy

00:11:16,640 --> 00:11:20,160
you can see there's all these files so

00:11:18,320 --> 00:11:23,360
let's cat os release

00:11:20,160 --> 00:11:26,800
and you see it's centos stream nine uh

00:11:23,360 --> 00:11:30,880
with all the stuff in here you know uh

00:11:26,800 --> 00:11:34,720
and then cd dnf there's

00:11:30,880 --> 00:11:34,720
all the directories you'd expect here

00:11:34,800 --> 00:11:39,600
but uh maybe i wanted it you know i

00:11:38,079 --> 00:11:41,040
wanted to have an editor to edit a file

00:11:39,600 --> 00:11:43,120
it's like oh you know what let's let's

00:11:41,040 --> 00:11:46,320
edit uh dnf

00:11:43,120 --> 00:11:47,200
dnf.conf and oh that's not there well

00:11:46,320 --> 00:11:50,800
then

00:11:47,200 --> 00:11:53,839
what do i do so we will

00:11:50,800 --> 00:11:54,880
go back and do that so like just saying

00:11:53,839 --> 00:11:57,920
here

00:11:54,880 --> 00:11:59,519
uh but before we go back and do that

00:11:57,920 --> 00:12:01,279
let's take a look at what it actually

00:11:59,519 --> 00:12:02,880
produced so

00:12:01,279 --> 00:12:04,560
i showed you what it looks like and

00:12:02,880 --> 00:12:08,839
let's let's take a look at

00:12:04,560 --> 00:12:10,320
what it actually uh what it actually

00:12:08,839 --> 00:12:14,160
produced

00:12:10,320 --> 00:12:16,800
temp output container

00:12:14,160 --> 00:12:18,720
so the changes file is really just a

00:12:16,800 --> 00:12:20,880
concatenation of change logs for all the

00:12:18,720 --> 00:12:22,839
different packages that were included so

00:12:20,880 --> 00:12:24,079
gcc you can see in here and you see open

00:12:22,839 --> 00:12:27,440
ssl

00:12:24,079 --> 00:12:30,560
python all kinds of stuff in here

00:12:27,440 --> 00:12:32,240
and then if you look at packages

00:12:30,560 --> 00:12:35,200
this one's actually just a list of all

00:12:32,240 --> 00:12:39,279
the packages and this has the name

00:12:35,200 --> 00:12:41,839
group the um name the version release

00:12:39,279 --> 00:12:43,200
architecture and the license data and

00:12:41,839 --> 00:12:43,600
this is useful if you want to see

00:12:43,200 --> 00:12:45,040
whether

00:12:43,600 --> 00:12:48,320
things have changed between build to

00:12:45,040 --> 00:12:50,000
build and also to see

00:12:48,320 --> 00:12:51,680
what licenses are included in the whole

00:12:50,000 --> 00:12:54,800
thing

00:12:51,680 --> 00:12:55,600
and then the verified one is for

00:12:54,800 --> 00:12:57,360
checking

00:12:55,600 --> 00:12:59,200
the file system structure to see how

00:12:57,360 --> 00:13:00,560
much of it differs from what the rpm

00:12:59,200 --> 00:13:02,079
database knows

00:13:00,560 --> 00:13:03,839
and so you can see that yeah there are

00:13:02,079 --> 00:13:06,800
some files that were deleted because i

00:13:03,839 --> 00:13:08,560
purged extra locale data and you can see

00:13:06,800 --> 00:13:10,320
that there's you know some modifications

00:13:08,560 --> 00:13:14,480
of some config files and stuff

00:13:10,320 --> 00:13:17,200
and that's fine so

00:13:14,480 --> 00:13:17,839
uh but we want to have a text editor in

00:13:17,200 --> 00:13:21,279
there

00:13:17,839 --> 00:13:25,600
so let's add that uh

00:13:21,279 --> 00:13:28,959
so txc build uh

00:13:25,600 --> 00:13:28,959
config xml

00:13:30,320 --> 00:13:35,839
and we're just gonna go ahead and add

00:13:35,920 --> 00:13:39,360
another package so we'll add nano

00:13:38,240 --> 00:13:43,360
because nano is the

00:13:39,360 --> 00:13:46,639
best text editor ever and

00:13:43,360 --> 00:13:50,079
we're going to go ahead and create this

00:13:46,639 --> 00:13:50,399
to build again we're going to call it

00:13:50,079 --> 00:13:53,120
temp

00:13:50,399 --> 00:13:53,760
output 2 for this directory we're going

00:13:53,120 --> 00:13:56,399
to

00:13:53,760 --> 00:13:56,399
run it again

00:13:57,120 --> 00:14:00,839
and so this sets it up again and it goes

00:13:59,360 --> 00:14:03,600
through this process

00:14:00,839 --> 00:14:05,120
and and if we want to take a look

00:14:03,600 --> 00:14:06,880
at what this looks like we'll take a

00:14:05,120 --> 00:14:08,639
look at the log here it's already at the

00:14:06,880 --> 00:14:13,680
point of

00:14:08,639 --> 00:14:13,680
of creating the image again

00:14:14,959 --> 00:14:21,040
and once that's actually done

00:14:19,040 --> 00:14:22,160
we will have something to show off but

00:14:21,040 --> 00:14:25,360
meanwhile while that

00:14:22,160 --> 00:14:28,720
is happening we should

00:14:25,360 --> 00:14:33,839
go ahead and clean up

00:14:28,720 --> 00:14:33,839
ah or not actually i have we can

00:14:34,079 --> 00:14:36,880
well we do need to be root here because

00:14:35,440 --> 00:14:37,680
otherwise we can't actually write the

00:14:36,880 --> 00:14:42,839
tarble

00:14:37,680 --> 00:14:46,560
but um probably want to be in

00:14:42,839 --> 00:14:49,040
about ram disk

00:14:46,560 --> 00:14:49,040
vc

00:14:49,839 --> 00:14:53,279
temp output two and so we're ready for

00:14:52,320 --> 00:14:57,120
that

00:14:53,279 --> 00:14:59,199
and it's actually uh it's done

00:14:57,120 --> 00:15:00,320
so the that part is created and we're

00:14:59,199 --> 00:15:03,760
going to go ahead

00:15:00,320 --> 00:15:07,199
and tar xvf

00:15:03,760 --> 00:15:10,839
container c bar lib

00:15:07,199 --> 00:15:14,240
machines el9 appliance

00:15:10,839 --> 00:15:16,720
2. uh

00:15:14,240 --> 00:15:18,399
all right let's make the directory fire

00:15:16,720 --> 00:15:23,519
lib machines

00:15:18,399 --> 00:15:23,519
el 9 appliance 2.

00:15:24,000 --> 00:15:28,639
and so that extracts all the files for

00:15:27,120 --> 00:15:29,360
that because this is just a regular

00:15:28,639 --> 00:15:32,959
tarball

00:15:29,360 --> 00:15:36,639
so it only has those particular things

00:15:32,959 --> 00:15:38,079
so now uh we will

00:15:36,639 --> 00:15:41,279
boot up the second appliance that we

00:15:38,079 --> 00:15:43,839
just created so

00:15:41,279 --> 00:15:46,320
this is just like the first one except

00:15:43,839 --> 00:15:51,040
now it has nano installed

00:15:46,320 --> 00:15:54,560
and now uh if i go to etsy

00:15:51,040 --> 00:15:57,759
and go to dnf and i go to dnf.com

00:15:54,560 --> 00:15:59,279
i have the nano text editor now let's

00:15:57,759 --> 00:16:01,759
let's check and see like what this

00:15:59,279 --> 00:16:03,920
differences actually look like

00:16:01,759 --> 00:16:05,440
right so we've made the temp output and

00:16:03,920 --> 00:16:08,480
temp output two directories

00:16:05,440 --> 00:16:12,639
and so let's take a look

00:16:08,480 --> 00:16:16,720
at uh

00:16:12,639 --> 00:16:16,720
diff of temp output

00:16:18,240 --> 00:16:23,839
if you uh

00:16:24,639 --> 00:16:32,480
of container el9

00:16:28,000 --> 00:16:32,480
packages to temp output

00:16:32,720 --> 00:16:39,279
two of container el9 packages

00:16:37,120 --> 00:16:40,160
and you can see we added just one

00:16:39,279 --> 00:16:42,320
package

00:16:40,160 --> 00:16:43,839
nano now let's see what that looks like

00:16:42,320 --> 00:16:44,639
for change logs this is actually going

00:16:43,839 --> 00:16:46,560
to

00:16:44,639 --> 00:16:48,320
be pretty bad because change logs are

00:16:46,560 --> 00:16:50,079
kind of huge but

00:16:48,320 --> 00:16:52,720
it'll kind of illustrate the point i was

00:16:50,079 --> 00:16:52,720
trying to make

00:16:53,040 --> 00:16:56,320
so you see there's a whole new change

00:16:54,880 --> 00:16:59,600
log that was added that is

00:16:56,320 --> 00:17:01,199
literally just for nano uh

00:16:59,600 --> 00:17:02,800
there was also some other sorting things

00:17:01,199 --> 00:17:04,640
and that's that's kind of the reason why

00:17:02,800 --> 00:17:06,319
i didn't want to show that

00:17:04,640 --> 00:17:07,839
really think about that too hard but

00:17:06,319 --> 00:17:10,640
let's take a look at verified let's see

00:17:07,839 --> 00:17:14,240
if there's any other differences

00:17:10,640 --> 00:17:16,799
uh i expect that we might not have any

00:17:14,240 --> 00:17:17,520
see no differences so from a file system

00:17:16,799 --> 00:17:20,799
structure

00:17:17,520 --> 00:17:22,559
they look there was no extra

00:17:20,799 --> 00:17:23,760
modification so you can be relatively

00:17:22,559 --> 00:17:26,400
assured

00:17:23,760 --> 00:17:28,480
that the only actual change was adding

00:17:26,400 --> 00:17:30,480
nano to it

00:17:28,480 --> 00:17:31,919
and so that's that's super cool and

00:17:30,480 --> 00:17:33,919
super helpful if you're doing continuous

00:17:31,919 --> 00:17:38,880
integration and continuous development

00:17:33,919 --> 00:17:38,880
of these sorts of things so yeah

00:17:40,160 --> 00:17:44,559
so images with kiwi are sweet as a

00:17:42,720 --> 00:17:46,000
well-documented well-maintained project

00:17:44,559 --> 00:17:48,000
it goes way beyond everything

00:17:46,000 --> 00:17:49,520
else like it's extremely simple to get

00:17:48,000 --> 00:17:50,880
started and the community is friendly

00:17:49,520 --> 00:17:51,520
and helpful for developing advanced

00:17:50,880 --> 00:17:53,120
setups

00:17:51,520 --> 00:17:54,960
and the wide range of platform support

00:17:53,120 --> 00:17:55,760
is unmatched by anything else i've seen

00:17:54,960 --> 00:17:57,600
so far

00:17:55,760 --> 00:18:00,080
and it has a great mechanism for

00:17:57,600 --> 00:18:02,799
supporting reproducibly built images

00:18:00,080 --> 00:18:05,360
and the way and it lets you easily track

00:18:02,799 --> 00:18:07,360
how the artifacts are changing this is

00:18:05,360 --> 00:18:08,720
really really well done stuff and with

00:18:07,360 --> 00:18:10,480
friendly developers in a friendly

00:18:08,720 --> 00:18:14,720
community

00:18:10,480 --> 00:18:17,039
you really can't go wrong

00:18:14,720 --> 00:18:18,240
so here's some references uh you know

00:18:17,039 --> 00:18:20,080
for the kiwi website

00:18:18,240 --> 00:18:21,520
the kiwi github projects they've got

00:18:20,080 --> 00:18:23,039
some sample descriptions

00:18:21,520 --> 00:18:24,960
uh that you can use to kind of take a

00:18:23,039 --> 00:18:26,640
look at how to use it for various

00:18:24,960 --> 00:18:28,640
you know distros and platforms and image

00:18:26,640 --> 00:18:29,200
types and then i've got my own demos

00:18:28,640 --> 00:18:31,760
that i

00:18:29,200 --> 00:18:32,960
put up on on datto's github there's the

00:18:31,760 --> 00:18:34,559
link there

00:18:32,960 --> 00:18:36,400
slides will be available after the talk

00:18:34,559 --> 00:18:39,280
anyway uh

00:18:36,400 --> 00:18:41,440
and yeah thank you for coming to my talk

00:18:39,280 --> 00:18:43,840
and uh

00:18:41,440 --> 00:18:43,840

YouTube URL: https://www.youtube.com/watch?v=KcK2D9JC0IE


