Title: Ulrich Pogson: Improve Code through Automation
Publication date: 2019-05-08
Playlist: WordCamp Belfast 2018
Description: 
	Doing manual code reviews is boring. People keep on making the same mistakes.
Ulrich will be showing how you can improve your code by using automated tools and what the positive effects of it are.
We will be looking at a few different examples how automation has improved the code quality in a team, and also in open source projects.

WPTV link: https://wordpress.tv/2019/04/17/ulrich-pogson-improve-code-through-automation/
Captions: 
	00:00:06,210 --> 00:00:14,499
so we're talking about improving

00:00:09,059 --> 00:00:16,720
coordination so you might remember a

00:00:14,499 --> 00:00:19,570
nice idea when I was in school that when

00:00:16,720 --> 00:00:22,330
I write essays I used to get my parents

00:00:19,570 --> 00:00:24,009
to weep to it again so that they would

00:00:22,330 --> 00:00:26,289
find any type of the mistakes that I had

00:00:24,009 --> 00:00:29,650
to improve it before I submitted it so I

00:00:26,289 --> 00:00:32,230
get a better mark and I find that spit

00:00:29,650 --> 00:00:33,100
of a similar thing that we have with

00:00:32,230 --> 00:00:36,309
code reviews

00:00:33,100 --> 00:00:39,129
we also one else have a little code and

00:00:36,309 --> 00:00:42,789
give us feedback to let us know how

00:00:39,129 --> 00:00:45,219
we've done so as the game start it

00:00:42,789 --> 00:00:49,140
allows you to put your hands up so how

00:00:45,219 --> 00:00:52,899
many of you have had your code beautiful

00:00:49,140 --> 00:00:53,620
so I hop here and so I expect nothing

00:00:52,899 --> 00:00:55,719
happened

00:00:53,620 --> 00:00:59,949
that's one else before they code before

00:00:55,719 --> 00:01:02,199
it gives you feedback what about on the

00:00:59,949 --> 00:01:05,350
other side how many of you have

00:01:02,199 --> 00:01:08,670
reviewing flow before look at someone

00:01:05,350 --> 00:01:08,670
else's code and give them feedback

00:01:11,610 --> 00:01:17,619
suppose tweets on code reviews on

00:01:14,950 --> 00:01:20,470
Twitter and it goes along lines oh

00:01:17,619 --> 00:01:23,409
there's 10 lines of code and the person

00:01:20,470 --> 00:01:23,950
finds 10 issues with their 500 lines of

00:01:23,409 --> 00:01:27,900
code

00:01:23,950 --> 00:01:31,240
it was fine and this is Cobra news view

00:01:27,900 --> 00:01:33,490
another one is with four requests so

00:01:31,240 --> 00:01:36,520
three files have been changed and then

00:01:33,490 --> 00:01:38,590
25 points of the conversation but when

00:01:36,520 --> 00:01:42,610
40 files have changed there looks good

00:01:38,590 --> 00:01:46,420
to me and her harness showed me that the

00:01:42,610 --> 00:01:51,040
pony sometime the poet's the pony met

00:01:46,420 --> 00:01:52,869
the really large changes is difficult we

00:01:51,040 --> 00:01:56,829
as humans find it difficult to process

00:01:52,869 --> 00:01:59,020
large amounts of content and find issues

00:01:56,829 --> 00:02:01,930
there and then give feedback when is a

00:01:59,020 --> 00:02:04,750
lot smaller smaller chunks it is easier

00:02:01,930 --> 00:02:07,869
for us to process I find that I've done

00:02:04,750 --> 00:02:10,480
code reviews for themes on workers at

00:02:07,869 --> 00:02:13,060
work and one of the theme is massive I

00:02:10,480 --> 00:02:14,720
have to break it up into chunks and

00:02:13,060 --> 00:02:16,850
review it to work maybe

00:02:14,720 --> 00:02:22,400
three sections so that I get all of the

00:02:16,850 --> 00:02:25,970
issues doing it all in one go you may

00:02:22,400 --> 00:02:29,420
say the solution is to have smaller pull

00:02:25,970 --> 00:02:31,820
requests but I think it's only a partial

00:02:29,420 --> 00:02:35,630
solution because it's not always

00:02:31,820 --> 00:02:37,340
possible to have really small full

00:02:35,630 --> 00:02:40,220
redress sometimes you have to make

00:02:37,340 --> 00:02:45,440
bigger changes and that just takes time

00:02:40,220 --> 00:02:47,959
to review so let's have a look at what

00:02:45,440 --> 00:02:52,190
things are looked at in there in a code

00:02:47,959 --> 00:02:54,650
review so one thing is the code style -

00:02:52,190 --> 00:02:57,290
how is it code written so we've got two

00:02:54,650 --> 00:02:59,630
examples here so the first one is in

00:02:57,290 --> 00:03:02,810
WordPress that uses the worthless coding

00:02:59,630 --> 00:03:04,730
standard you have you can see the

00:03:02,810 --> 00:03:06,620
difference with another one which is

00:03:04,730 --> 00:03:09,610
like pulling the PS off coding standard

00:03:06,620 --> 00:03:12,050
that was the opening bracket of the talk

00:03:09,610 --> 00:03:16,580
in the WordPress it's on the same line

00:03:12,050 --> 00:03:19,790
and here it's on the underneath or you

00:03:16,580 --> 00:03:22,340
can see also with the spacing so or when

00:03:19,790 --> 00:03:25,519
you have an opening bracket it presented

00:03:22,340 --> 00:03:29,239
here you don't have a space will win you

00:03:25,519 --> 00:03:31,370
on WordPress be honest base so these are

00:03:29,239 --> 00:03:34,340
different ways of having different

00:03:31,370 --> 00:03:37,400
coding standards an important thing here

00:03:34,340 --> 00:03:40,430
is just how consistent coding standards

00:03:37,400 --> 00:03:42,640
that you follow one way and not mix and

00:03:40,430 --> 00:03:42,640
match

00:03:44,080 --> 00:03:54,049
another thing best practices so we got

00:03:50,690 --> 00:03:56,720
any Dom here on the first one is that we

00:03:54,049 --> 00:04:00,110
have a lots of great example where you

00:03:56,720 --> 00:04:02,330
have nested conditionals and this means

00:04:00,110 --> 00:04:05,030
it can be sometimes difficult to

00:04:02,330 --> 00:04:07,850
understand what's happening when you're

00:04:05,030 --> 00:04:11,840
reading through the code where when you

00:04:07,850 --> 00:04:15,400
return early you can read the code more

00:04:11,840 --> 00:04:19,910
easier and see that if page is false

00:04:15,400 --> 00:04:22,340
then you need to return or if is about

00:04:19,910 --> 00:04:25,220
page it's also not true then you should

00:04:22,340 --> 00:04:27,949
return false otherwise at the end then

00:04:25,220 --> 00:04:30,389
you can return true

00:04:27,949 --> 00:04:33,210
this is just an example some best

00:04:30,389 --> 00:04:35,539
practices there are others that you may

00:04:33,210 --> 00:04:37,800
want to follow some PHP or JavaScript

00:04:35,539 --> 00:04:42,090
but these are things that are not are

00:04:37,800 --> 00:04:44,940
looked at in a code review another thing

00:04:42,090 --> 00:04:48,090
is called a compatibility so how does

00:04:44,940 --> 00:04:51,389
your code work with other libraries that

00:04:48,090 --> 00:04:52,860
you've included or depending on wonder

00:04:51,389 --> 00:04:53,909
how many of you have seen an issue like

00:04:52,860 --> 00:04:56,099
that when you've been writing your

00:04:53,909 --> 00:04:58,710
clothes suddenly have a fatal error

00:04:56,099 --> 00:05:01,259
you've written some code and your code

00:04:58,710 --> 00:05:05,430
is not compatible in this example up

00:05:01,259 --> 00:05:08,310
here you have the person has not prefix

00:05:05,430 --> 00:05:10,860
the function and is there the same

00:05:08,310 --> 00:05:12,599
functional enough plug-in in two

00:05:10,860 --> 00:05:15,300
different plugins and that is what's

00:05:12,599 --> 00:05:17,159
causing an issue and so there's also

00:05:15,300 --> 00:05:19,349
things like with WordPress that you may

00:05:17,159 --> 00:05:21,539
want to check your code that is

00:05:19,349 --> 00:05:26,460
compatible with different versions that

00:05:21,539 --> 00:05:31,259
you support another thing is

00:05:26,460 --> 00:05:33,810
documentation you may say that the code

00:05:31,259 --> 00:05:36,360
should be self documenting that's clear

00:05:33,810 --> 00:05:39,300
when you read the code what it is doing

00:05:36,360 --> 00:05:42,090
but you may want to add a reason why

00:05:39,300 --> 00:05:44,569
you're adding this code of what this

00:05:42,090 --> 00:05:47,969
code is doing there may be an exception

00:05:44,569 --> 00:05:50,699
to a rule that you are climbing out here

00:05:47,969 --> 00:05:52,979
idea in the future when you come back

00:05:50,699 --> 00:05:55,349
you may not remember that anymore

00:05:52,979 --> 00:05:57,990
I've had that with me well we weren't

00:05:55,349 --> 00:06:00,840
gonna project humans later had to go

00:05:57,990 --> 00:06:03,719
back and make some changes and it told

00:06:00,840 --> 00:06:06,120
me that bit longer understanding how the

00:06:03,719 --> 00:06:09,300
whole project working because I have

00:06:06,120 --> 00:06:12,029
forgotten to add documentation from

00:06:09,300 --> 00:06:18,740
where the data's coming from how it's

00:06:12,029 --> 00:06:22,050
being processed and another one is

00:06:18,740 --> 00:06:25,229
called quality it's similar to best

00:06:22,050 --> 00:06:28,110
practices but is thinking ahead you know

00:06:25,229 --> 00:06:29,279
how will my code work in the future when

00:06:28,110 --> 00:06:34,020
I want to extend it

00:06:29,279 --> 00:06:36,870
adapt it and extend it and just thinking

00:06:34,020 --> 00:06:39,630
of it in the future of how your your

00:06:36,870 --> 00:06:41,450
technical debt will be broken down and

00:06:39,630 --> 00:06:43,830
improved

00:06:41,450 --> 00:06:46,860
you may wonder now what's the

00:06:43,830 --> 00:06:51,150
alternative to properties I think most

00:06:46,860 --> 00:06:53,850
of you can guess these robots robots can

00:06:51,150 --> 00:06:57,240
help you God today we've got

00:06:53,850 --> 00:07:02,340
self-driving cars and so in your code

00:06:57,240 --> 00:07:05,730
you can also include automation you may

00:07:02,340 --> 00:07:08,880
wonder what the benefits are of heavy an

00:07:05,730 --> 00:07:12,000
automated system one is the scalability

00:07:08,880 --> 00:07:16,230
you know we humans on working eight

00:07:12,000 --> 00:07:19,320
hours and hours a day we get tired you

00:07:16,230 --> 00:07:23,610
know be not as productive anymore we are

00:07:19,320 --> 00:07:27,090
not of the quality that we produce after

00:07:23,610 --> 00:07:29,520
those many hours of working reduces but

00:07:27,090 --> 00:07:32,340
that's not the case with robots or with

00:07:29,520 --> 00:07:34,950
automated systems they provide the same

00:07:32,340 --> 00:07:38,130
result regardless of how many hours is

00:07:34,950 --> 00:07:41,910
been running or working or how much code

00:07:38,130 --> 00:07:45,210
you give it to process another one is

00:07:41,910 --> 00:07:47,460
consistency like we were looking at the

00:07:45,210 --> 00:07:51,270
coding standards before to the space

00:07:47,460 --> 00:07:53,100
after an opening bracket this is a small

00:07:51,270 --> 00:07:56,460
change and can be sometimes difficult

00:07:53,100 --> 00:07:58,380
for us to pick up or every place where

00:07:56,460 --> 00:08:01,370
the space might be missing has been

00:07:58,380 --> 00:08:04,350
forgotten but an automated system will

00:08:01,370 --> 00:08:08,479
consistently find each of the places

00:08:04,350 --> 00:08:08,479
where there's a coding standard issue

00:08:08,510 --> 00:08:15,540
another one which you might find a bit

00:08:11,010 --> 00:08:17,040
strange is tomorrow so I'm not sure how

00:08:15,540 --> 00:08:19,800
many of you enjoy getting negative

00:08:17,040 --> 00:08:22,590
feedback you know telling you that

00:08:19,800 --> 00:08:24,870
you've done something wrong and it might

00:08:22,590 --> 00:08:26,760
be difficult to get that from one of

00:08:24,870 --> 00:08:28,919
your colleagues that tells you hey

00:08:26,760 --> 00:08:32,010
you've done something wrong this could

00:08:28,919 --> 00:08:34,440
be improved and but you don't take this

00:08:32,010 --> 00:08:37,080
personally based on my automated system

00:08:34,440 --> 00:08:38,640
if a robot tells you pay you to make

00:08:37,080 --> 00:08:41,550
this improvement here or you can make

00:08:38,640 --> 00:08:43,500
this change here it's a way of

00:08:41,550 --> 00:08:47,430
communicating and sometimes it's

00:08:43,500 --> 00:08:49,920
difficult to communicate improvement to

00:08:47,430 --> 00:08:53,290
your colleagues and without a community

00:08:49,920 --> 00:08:55,420
across to negative but salute

00:08:53,290 --> 00:08:57,759
that sometimes is also to praise them

00:08:55,420 --> 00:09:02,860
for good cause when you do your code

00:08:57,759 --> 00:09:05,740
reviews now automated systems are not

00:09:02,860 --> 00:09:08,320
without challenges now the problem with

00:09:05,740 --> 00:09:10,540
the nose made system is that it's only

00:09:08,320 --> 00:09:13,240
positive code it does not really

00:09:10,540 --> 00:09:15,370
understand it as a person you can read a

00:09:13,240 --> 00:09:17,709
coach you can read the comments and then

00:09:15,370 --> 00:09:19,750
understand why they might have done

00:09:17,709 --> 00:09:23,649
something differently then the standard

00:09:19,750 --> 00:09:27,000
way of your how you defined it in your

00:09:23,649 --> 00:09:29,949
coding standards or your best practices

00:09:27,000 --> 00:09:33,759
and what is also leads to someone's

00:09:29,949 --> 00:09:37,120
false positives to code sniffer or the

00:09:33,759 --> 00:09:40,089
automated system is only looking at that

00:09:37,120 --> 00:09:43,300
specific piece of code and on cannot see

00:09:40,089 --> 00:09:45,670
how it fits in globally in your whole

00:09:43,300 --> 00:09:49,899
process and sometimes that can give you

00:09:45,670 --> 00:09:51,940
false positives an example is like when

00:09:49,899 --> 00:09:55,720
you're checking for scaping you might

00:09:51,940 --> 00:09:58,899
get your variable out but the automated

00:09:55,720 --> 00:10:00,910
system may not be able to see that this

00:09:58,899 --> 00:10:02,920
variable has just been defined a few

00:10:00,910 --> 00:10:05,079
miles further up and it's just a simple

00:10:02,920 --> 00:10:10,870
string and there's no security issue

00:10:05,079 --> 00:10:15,690
requiring me to be escaped to the music

00:10:10,870 --> 00:10:19,089
to look at WordPress itself to work has

00:10:15,690 --> 00:10:20,130
languages that we use mainly so we got

00:10:19,089 --> 00:10:25,600
JavaScript

00:10:20,130 --> 00:10:27,850
we've got CSS can we've got PHP so we're

00:10:25,600 --> 00:10:31,810
looking at the different tools that you

00:10:27,850 --> 00:10:34,440
can use to automatically you know look

00:10:31,810 --> 00:10:41,040
at the code and give you feedback on it

00:10:34,440 --> 00:10:41,040
the first one is called stylings on

00:10:41,819 --> 00:10:47,920
analyzing these are codes for the style

00:10:45,130 --> 00:10:52,810
of CSS and then this has been running

00:10:47,920 --> 00:10:55,839
the command line to see next our CSS 907

00:10:52,810 --> 00:11:00,189
an issue where they expect numeric value

00:10:55,839 --> 00:11:03,120
for form weight is incorrect it expects

00:11:00,189 --> 00:11:05,790
a value

00:11:03,120 --> 00:11:08,790
a piece of text so in this case you

00:11:05,790 --> 00:11:11,850
might be involved instead of 700 or

00:11:08,790 --> 00:11:13,889
something and is similar with other

00:11:11,850 --> 00:11:17,399
lines and so you can go back into your

00:11:13,889 --> 00:11:19,139
code for example and install of TSS to

00:11:17,399 --> 00:11:22,440
go and have a look at it and make the

00:11:19,139 --> 00:11:27,029
corrections and then run the command

00:11:22,440 --> 00:11:29,880
again in terminal but stop it

00:11:27,029 --> 00:11:32,880
sit Stolley it does not only just one on

00:11:29,880 --> 00:11:36,740
CSS beacon violence at fault too

00:11:32,880 --> 00:11:40,470
and so you can define the flag syntax

00:11:36,740 --> 00:11:44,670
CSS and then here also worthless has its

00:11:40,470 --> 00:11:51,060
own configuration in use that courses or

00:11:44,670 --> 00:11:54,000
analyzes the CSS files the less and less

00:11:51,060 --> 00:11:56,279
people use less but there's also a flag

00:11:54,000 --> 00:12:03,199
for when you want or you know analyze

00:11:56,279 --> 00:12:05,940
less pause to so to be able to know what

00:12:03,199 --> 00:12:08,699
configurations use you can define them

00:12:05,940 --> 00:12:12,329
in your package drop JSON so you define

00:12:08,699 --> 00:12:15,569
the dependency of silent and then we got

00:12:12,329 --> 00:12:17,579
from the dependency styling on the

00:12:15,569 --> 00:12:20,180
WordPress that is managed by the

00:12:17,579 --> 00:12:23,190
WordPress supporting Sanders team and

00:12:20,180 --> 00:12:26,310
then at the bottom you can define the

00:12:23,190 --> 00:12:29,610
configuration style in itself and define

00:12:26,310 --> 00:12:31,519
which wolf it you want to use and in

00:12:29,610 --> 00:12:37,069
this case you've got styling from fake

00:12:31,519 --> 00:12:40,560
WordPress so the next one is JavaScript

00:12:37,069 --> 00:12:43,889
so the JavaScript you can use instant

00:12:40,560 --> 00:12:46,260
and here for another example have been

00:12:43,889 --> 00:12:51,329
able to come online gives you the result

00:12:46,260 --> 00:12:53,610
and was this specific farm he is lint is

00:12:51,329 --> 00:12:55,740
also used by Gutenberg so if you've been

00:12:53,610 --> 00:12:58,500
contributing back there working in

00:12:55,740 --> 00:13:02,850
JavaScript you'll see how it's being

00:12:58,500 --> 00:13:06,389
used there and similarly with styling

00:13:02,850 --> 00:13:09,750
you have you can use package or JSON to

00:13:06,389 --> 00:13:12,300
define your dependencies on modules or

00:13:09,750 --> 00:13:16,130
the nodes and also the configuration

00:13:12,300 --> 00:13:22,940
files we have to extend WordPress

00:13:16,130 --> 00:13:26,510
use the WordPress will send for PHP and

00:13:22,940 --> 00:13:30,590
there's PVCs and the C S stands for

00:13:26,510 --> 00:13:31,630
coding standards and so here right in

00:13:30,590 --> 00:13:35,060
the command line

00:13:31,630 --> 00:13:39,830
PHP CS on this specific file and I've

00:13:35,060 --> 00:13:42,500
gotten back number of errors and we can

00:13:39,830 --> 00:13:44,870
see here at the bottom it says that some

00:13:42,500 --> 00:13:47,090
of them one of them can be faced

00:13:44,870 --> 00:13:49,130
automatically and that is where you have

00:13:47,090 --> 00:13:50,620
two eggs between the brackets it's

00:13:49,130 --> 00:13:53,450
marked as the one that can be

00:13:50,620 --> 00:13:56,950
automatically based and we will be

00:13:53,450 --> 00:13:56,950
looking at that very later

00:13:57,640 --> 00:14:14,030
for PHP cs3 for PCs we don't use the

00:14:12,140 --> 00:14:18,970
package of JSON to define the

00:14:14,030 --> 00:14:21,620
configuration but PHP CS or XML file

00:14:18,970 --> 00:14:27,470
here I've created a custom rule set for

00:14:21,620 --> 00:14:31,000
myself and which is youth here are not

00:14:27,470 --> 00:14:33,740
defined extra properties so like the

00:14:31,000 --> 00:14:36,110
texture main very important year for the

00:14:33,740 --> 00:14:38,710
theme underscores we define the text

00:14:36,110 --> 00:14:41,530
domain that is to be used as underscores

00:14:38,710 --> 00:14:43,520
you can also define the minimum

00:14:41,530 --> 00:14:46,790
WordPress version that you want to

00:14:43,520 --> 00:14:48,920
support so here is defined for 4000 and

00:14:46,790 --> 00:14:52,310
so if you're using any deprecated

00:14:48,920 --> 00:14:54,350
functions that before 4.0 you'll get to

00:14:52,310 --> 00:14:57,500
notice and then you can fix those and

00:14:54,350 --> 00:15:00,110
remove them as you don't support version

00:14:57,500 --> 00:15:02,450
or within 4.0 this can be useful for

00:15:00,110 --> 00:15:05,000
plugins when you're updating them and

00:15:02,450 --> 00:15:08,510
check that they're not using deprecated

00:15:05,000 --> 00:15:10,690
functions at the bottom also there's a

00:15:08,510 --> 00:15:13,550
lot you to add support for PHP

00:15:10,690 --> 00:15:15,770
compatibility so if you want to check

00:15:13,550 --> 00:15:18,770
that your plugins are comebacks always

00:15:15,770 --> 00:15:21,770
latest version of PHP which is 7.2 now

00:15:18,770 --> 00:15:23,510
you can also add that and then it runs

00:15:21,770 --> 00:15:27,200
through your code and gives your

00:15:23,510 --> 00:15:29,060
feedback but the problem is there

00:15:27,200 --> 00:15:32,870
it's that if you are checking if a

00:15:29,060 --> 00:15:34,930
function exists that is before a 7.2 or

00:15:32,870 --> 00:15:37,130
something you might get a false positive

00:15:34,930 --> 00:15:39,290
for you to just look through the code

00:15:37,130 --> 00:15:50,870
and realize that it's all positive and

00:15:39,290 --> 00:15:52,910
then continue so as I mention before as

00:15:50,870 --> 00:15:57,290
I mentioned before that is possible to

00:15:52,910 --> 00:16:00,380
auto fix some of these issues here I put

00:15:57,290 --> 00:16:03,829
three months so the first one styling

00:16:00,380 --> 00:16:07,880
you can use the pitch black all the

00:16:03,829 --> 00:16:09,769
mines dialect in T and these are just

00:16:07,880 --> 00:16:13,490
two different ways I think they're

00:16:09,769 --> 00:16:16,010
moving one method to another and so each

00:16:13,490 --> 00:16:17,839
of them do face a few different things

00:16:16,010 --> 00:16:21,440
and so it's best to run both commands

00:16:17,839 --> 00:16:26,899
when you work in your code for yes Linda

00:16:21,440 --> 00:16:31,070
possible flag PVCs we bought two options

00:16:26,899 --> 00:16:34,070
the first is you get a disc report and

00:16:31,070 --> 00:16:36,440
that shows all the changes you can

00:16:34,070 --> 00:16:40,490
verify them before you commit them and

00:16:36,440 --> 00:16:44,480
another one is just one the fit changes

00:16:40,490 --> 00:16:47,510
with PHP seen yet what you need to think

00:16:44,480 --> 00:16:49,910
here is that you should have some type

00:16:47,510 --> 00:16:53,149
of salt control on your code

00:16:49,910 --> 00:16:56,570
I have get or SVM so that you can see

00:16:53,149 --> 00:16:59,630
the changes before and after you run

00:16:56,570 --> 00:17:02,300
these spaces because they are not always

00:16:59,630 --> 00:17:05,390
perfect and they might not make this as

00:17:02,300 --> 00:17:07,910
you want them and so before you commit

00:17:05,390 --> 00:17:10,189
the changes or you push them out just

00:17:07,910 --> 00:17:14,199
verify go through them to check that

00:17:10,189 --> 00:17:14,199
anything is as in order

00:17:20,020 --> 00:17:26,630
so you may wonder how what use these

00:17:23,450 --> 00:17:28,850
things in our workshop so I'm having a

00:17:26,630 --> 00:17:31,850
few examples I mean one that we've seen

00:17:28,850 --> 00:17:33,860
before is just using the come online do

00:17:31,850 --> 00:17:37,670
you enter your phone there and you run

00:17:33,860 --> 00:17:46,670
it on maximum file or those files in a

00:17:37,670 --> 00:17:51,340
specific folder to one another Methodist

00:17:46,670 --> 00:17:51,340
youth editor so do a little demo here

00:18:15,360 --> 00:18:35,820
so we consider to go there Tokyo and

00:18:33,340 --> 00:18:39,430
perhaps you're prepping something and

00:18:35,820 --> 00:18:43,240
you know considered something is simply

00:18:39,430 --> 00:18:43,840
forgotten that you know you wasn't it

00:18:43,240 --> 00:18:46,480
lovely

00:18:43,840 --> 00:18:48,940
and then there's an error here you can

00:18:46,480 --> 00:18:51,070
see the months fall down I'm not sure

00:18:48,940 --> 00:18:54,730
where it is and won't click on the line

00:18:51,070 --> 00:18:57,640
and get bounced up here again to see

00:18:54,730 --> 00:19:00,880
that I've got to encode that it's not

00:18:57,640 --> 00:19:03,970
right I can add it again and save it and

00:19:00,880 --> 00:19:05,350
the issue disappears but that's the same

00:19:03,970 --> 00:19:08,830
oscillation is skipped

00:19:05,350 --> 00:19:11,650
Planet X domain while you're doing it

00:19:08,830 --> 00:19:14,020
buddy and leaves forgotten whether

00:19:11,650 --> 00:19:16,420
you've gone on and then before you admit

00:19:14,020 --> 00:19:18,790
it you may want to have a look at it and

00:19:16,420 --> 00:19:21,280
realize oh to go in something and you

00:19:18,790 --> 00:19:23,950
get also and notice here that it's

00:19:21,280 --> 00:19:28,630
affected underscores we've got nothing

00:19:23,950 --> 00:19:30,670
but that also working you've got the

00:19:28,630 --> 00:19:32,230
simple another texture meant you've

00:19:30,670 --> 00:19:35,470
copied some codes from another plugin

00:19:32,230 --> 00:19:38,680
you basically we've forgotten to change

00:19:35,470 --> 00:19:41,320
the text array and this PHP CS will give

00:19:38,680 --> 00:19:43,510
you a notification to your editor that

00:19:41,320 --> 00:19:47,260
you haven't got the right one and then

00:19:43,510 --> 00:19:54,990
you can go back and add it but this is a

00:19:47,260 --> 00:19:54,990
quick example how you can use PHP CS

00:20:12,940 --> 00:20:16,880
but this works in any editor can be

00:20:15,260 --> 00:20:20,320
supplying it doesn't need to be out the

00:20:16,880 --> 00:20:20,320
max and what's just an example here

00:20:25,299 --> 00:20:31,850
another workplace is github so you

00:20:28,940 --> 00:20:33,980
create a pull request and then you can

00:20:31,850 --> 00:20:36,640
set up a system on Travis that

00:20:33,980 --> 00:20:39,260
automatically runs is limiting bodies

00:20:36,640 --> 00:20:41,149
automated systems to go through your

00:20:39,260 --> 00:20:44,539
code or the code that has been permitted

00:20:41,149 --> 00:20:47,059
and check 20 issues and then return

00:20:44,539 --> 00:20:48,500
those so in the first example here you

00:20:47,059 --> 00:20:50,330
can see like this check

00:20:48,500 --> 00:20:53,630
Travis checkers build because there

00:20:50,330 --> 00:20:58,970
might be some issues but in the second

00:20:53,630 --> 00:21:02,990
one is passed and here you can see that

00:20:58,970 --> 00:21:06,980
I have set up different versions of PHP

00:21:02,990 --> 00:21:11,299
to run for only on one of them am I

00:21:06,980 --> 00:21:14,570
gonna run the PSP CS and that means that

00:21:11,299 --> 00:21:16,279
it's a lot quicker because this is

00:21:14,570 --> 00:21:18,830
automated systems than sometimes take

00:21:16,279 --> 00:21:21,110
time and just by running in on my

00:21:18,830 --> 00:21:25,370
environment one built you can increase

00:21:21,110 --> 00:21:28,610
as time reduce the time it takes to own

00:21:25,370 --> 00:21:30,559
these automated systems there's also a

00:21:28,610 --> 00:21:33,230
new relief when I shared slides

00:21:30,559 --> 00:21:35,840
afterwards to the documentation of the

00:21:33,230 --> 00:21:38,270
workers coding standards how you can set

00:21:35,840 --> 00:21:43,580
it up using in it CH tools was proper

00:21:38,270 --> 00:21:46,250
examples here is a small example of the

00:21:43,580 --> 00:21:49,100
Alex Boniello file that you can use to

00:21:46,250 --> 00:21:51,289
set up and you can see there in the

00:21:49,100 --> 00:21:53,659
beginning you've got the sniff sniff

00:21:51,289 --> 00:21:57,320
variables to find this one then they

00:21:53,659 --> 00:21:59,149
should run otherwise not and these I

00:21:57,320 --> 00:22:01,850
mean the first part is just installing

00:21:59,149 --> 00:22:08,120
all of these different tools and the

00:22:01,850 --> 00:22:11,799
second part is running them there are a

00:22:08,120 --> 00:22:15,289
few different projects that we worked on

00:22:11,799 --> 00:22:16,429
Juliet's in talk last year back the the

00:22:15,289 --> 00:22:18,710
biggest work risk

00:22:16,429 --> 00:22:20,990
whatever which was committed last year

00:22:18,710 --> 00:22:25,909
to work with starch network in Europe

00:22:20,990 --> 00:22:28,879
and was mentioned last year and this

00:22:25,909 --> 00:22:31,249
patch was just to bring workers core up

00:22:28,879 --> 00:22:34,070
to the latest pudding standards so that

00:22:31,249 --> 00:22:38,149
it followed those also the patch only

00:22:34,070 --> 00:22:40,279
included automated fixes and now people

00:22:38,149 --> 00:22:43,340
are still working on adding manual fixes

00:22:40,279 --> 00:22:45,649
where needed and two workers caught so

00:22:43,340 --> 00:22:49,999
that workers caught also follows its own

00:22:45,649 --> 00:22:52,700
coding standards the automatic theme

00:22:49,999 --> 00:22:56,860
under schools is also looking at how we

00:22:52,700 --> 00:22:59,570
can include CSS CSS and sass linting and

00:22:56,860 --> 00:23:01,549
also then J's linting so that when

00:22:59,570 --> 00:23:04,690
there's future changes that those are

00:23:01,549 --> 00:23:08,299
automatically check for before committed

00:23:04,690 --> 00:23:11,149
jr. wasn't given a number of talks one

00:23:08,299 --> 00:23:15,139
please VCS how do you make it work for

00:23:11,149 --> 00:23:16,789
you instead of you working for VCS just

00:23:15,139 --> 00:23:19,669
what the most big that you want to

00:23:16,789 --> 00:23:23,539
happen they're really it'll give you a

00:23:19,669 --> 00:23:28,549
better idea of how you can really use

00:23:23,539 --> 00:23:32,029
PHP PHP cs2 advantage definitely is also

00:23:28,549 --> 00:23:34,580
part of the workers Corrie Sanders team

00:23:32,029 --> 00:23:37,730
been working on some guttenberg on how

00:23:34,580 --> 00:23:41,389
to get like is bent and Darlene's to

00:23:37,730 --> 00:23:47,899
latest using the latest versions of

00:23:41,389 --> 00:23:48,499
workers coding standards so what we come

00:23:47,899 --> 00:23:51,409
in today

00:23:48,499 --> 00:23:54,230
we cover the how it is to do a manual

00:23:51,409 --> 00:23:57,740
over here and then what elements of

00:23:54,230 --> 00:23:58,490
those the pros and cons of an automated

00:23:57,740 --> 00:24:02,289
system

00:23:58,490 --> 00:24:05,720
what Rudy's news was the essence

00:24:02,289 --> 00:24:09,820
JavaScript CSS in PHP and how you can

00:24:05,720 --> 00:24:12,710
integrate those tools in your workflow

00:24:09,820 --> 00:24:14,210
so what are your next steps can you tell

00:24:12,710 --> 00:24:16,490
when you leave this room or when you go

00:24:14,210 --> 00:24:18,679
back to work on Monday so you can

00:24:16,490 --> 00:24:21,049
install one of these tools locally to

00:24:18,679 --> 00:24:23,779
try them out you can set up the tool

00:24:21,049 --> 00:24:25,580
into your editor to that wiring program

00:24:23,779 --> 00:24:28,129
while you're writing your code for

00:24:25,580 --> 00:24:28,800
getting instant notifications of what

00:24:28,129 --> 00:24:32,370
you

00:24:28,800 --> 00:24:34,620
and then you can add a configuration so

00:24:32,370 --> 00:24:37,110
you might not want to follow all the

00:24:34,620 --> 00:24:40,290
wordpress coding standards or all of the

00:24:37,110 --> 00:24:43,260
things that work as for city to do you

00:24:40,290 --> 00:24:46,170
can change in adapt them as you wish

00:24:43,260 --> 00:24:47,910
because some of the notifications that

00:24:46,170 --> 00:24:52,920
you'll get might not be compatible

00:24:47,910 --> 00:24:55,290
whether you're using namespaces or using

00:24:52,920 --> 00:24:57,900
blank PSR without reloading and things

00:24:55,290 --> 00:25:00,380
like that you might want to adjust it

00:24:57,900 --> 00:25:03,240
according to or best for your project

00:25:00,380 --> 00:25:05,010
and then you can run the tool like in

00:25:03,240 --> 00:25:07,140
the command line and you get a whole

00:25:05,010 --> 00:25:08,460
report of all the different pages all

00:25:07,140 --> 00:25:10,560
the different files that you have in

00:25:08,460 --> 00:25:13,800
your project instead of going to them

00:25:10,560 --> 00:25:16,770
safely you editor and then analyze and

00:25:13,800 --> 00:25:18,960
fix those issues that you have and then

00:25:16,770 --> 00:25:21,210
hopefully in the future when you work on

00:25:18,960 --> 00:25:26,190
further projects you always include

00:25:21,210 --> 00:25:28,040
these automated tools that's for me

00:25:26,190 --> 00:25:31,730
today thank you

00:25:28,040 --> 00:25:31,730

YouTube URL: https://www.youtube.com/watch?v=arbvb6yoaVQ


