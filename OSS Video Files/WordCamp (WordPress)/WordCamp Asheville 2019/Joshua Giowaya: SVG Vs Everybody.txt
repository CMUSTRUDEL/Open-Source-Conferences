Title: Joshua Giowaya: SVG Vs Everybody
Publication date: 2019-09-06
Playlist: WordCamp Asheville 2019
Description: 
	SVG may have been overlooked in the past due to poor browser support, however, SVG1.1 is now fully supported in all evergreen browsers. SVG is crisp on any screen, responsive by nature and is seriously cool, with nifty features like grouping, stoke and fill, and filters. Oh and the ability to easily animate, Who doesn’t love a good SVG animation?
Even if you’ve never used SVG before, come learn how to get started with this amazing element. We’ll see what all those features actually do, we’ll look at how all that code in an SVG file draws a shape and best practices for formatting your SVG code.
Takeaways:
In this talk, we will discuss the why, when, and how of using SVG’s (Scalable Vector Graphics) in your project. At code42, we decided to exclusively use SVG’s for iconography and logos across all our production websites. I will share what we learned throughout this process, the use cases, edge cases, best cases, and worst cases. Also, we will take an in-depth look at the anatomy of an SVG. Finally, we will compare capabilities SVG vs .png, CSS, JavaScript. You will leave this talk excited and prepared to implement SVG’s in your next project.

WPTV link: https://wordpress.tv/2019/08/06/joshua-giowaya-svg-vs-everybody/
Captions: 
	00:00:05,839 --> 00:00:10,440
good afternoon everyone my name is

00:00:08,010 --> 00:00:12,210
Joshua Joao I'm a senior front-end

00:00:10,440 --> 00:00:15,240
engineer at a company based out of

00:00:12,210 --> 00:00:17,460
Minneapolis called code 42 we developed

00:00:15,240 --> 00:00:19,109
a software called CrashPlan I've been

00:00:17,460 --> 00:00:21,900
working there now for about two and a

00:00:19,109 --> 00:00:24,300
half years I started my career about 12

00:00:21,900 --> 00:00:26,010
years ago as an ActionScript developer

00:00:24,300 --> 00:00:27,960
so if you guys remember the days of

00:00:26,010 --> 00:00:29,189
Flash then you know what I'm talking

00:00:27,960 --> 00:00:31,970
about if you don't you're probably

00:00:29,189 --> 00:00:31,970
better off for it

00:00:32,910 --> 00:00:38,460
so this talk today is SVG versus

00:00:35,820 --> 00:00:40,290
everybody and the reason that title did

00:00:38,460 --> 00:00:42,059
that is because I think there's a lot of

00:00:40,290 --> 00:00:43,920
misconceptions around when we should be

00:00:42,059 --> 00:00:46,530
using SVG s and how we can be using SVG

00:00:43,920 --> 00:00:48,899
s so I just kind of want to pin it

00:00:46,530 --> 00:00:52,079
against the other HTML elements and

00:00:48,899 --> 00:00:54,059
methods to get raster images in our

00:00:52,079 --> 00:00:55,949
browser and we can kind of take a look

00:00:54,059 --> 00:01:01,260
at the benefits of you an SVG over those

00:00:55,949 --> 00:01:04,080
other methods so we'll talk a little bit

00:01:01,260 --> 00:01:07,500
about the SVG a benefit about the SVG

00:01:04,080 --> 00:01:10,080
how I actually got introduced SVG's was

00:01:07,500 --> 00:01:12,390
at work a co-worker of mine said we need

00:01:10,080 --> 00:01:13,890
to use SVG s for this project and I was

00:01:12,390 --> 00:01:15,810
totally against it because of how

00:01:13,890 --> 00:01:17,310
complicated I thought they were but he

00:01:15,810 --> 00:01:19,259
said no they're really simple let me

00:01:17,310 --> 00:01:22,140
show you and ever since then I've been

00:01:19,259 --> 00:01:25,320
an SVG fanboy so he he turned me on to

00:01:22,140 --> 00:01:28,220
that I'm gonna show you guys how to

00:01:25,320 --> 00:01:30,630
convert a PNG - SVG using illustrator

00:01:28,220 --> 00:01:33,530
we're gonna look at the anatomy of an

00:01:30,630 --> 00:01:35,159
SVG what's actually in those SVG files

00:01:33,530 --> 00:01:38,729
and then we'll look at a couple

00:01:35,159 --> 00:01:40,350
real-world use cases so jumping right in

00:01:38,729 --> 00:01:43,350
a brief history it's been around for

00:01:40,350 --> 00:01:47,250
about 15 years now it was first

00:01:43,350 --> 00:01:51,240
introduced in 1999 and the first release

00:01:47,250 --> 00:01:53,939
candidate was in 2000 and here's the

00:01:51,240 --> 00:01:56,430
kicker all current browsers currently

00:01:53,939 --> 00:01:59,750
support SVG so there's no reason why you

00:01:56,430 --> 00:01:59,750
shouldn't be or couldn't be using it

00:02:04,520 --> 00:02:11,490
so why would we want to use SVG over a

00:02:07,830 --> 00:02:13,550
raster image like a PNG or JPEG I think

00:02:11,490 --> 00:02:17,010
one of the biggest reasons is control

00:02:13,550 --> 00:02:19,140
once you put that image in the browser

00:02:17,010 --> 00:02:21,900
you no longer have control of it I mean

00:02:19,140 --> 00:02:25,080
you can make it responsive kind of but

00:02:21,900 --> 00:02:27,060
you can't really move elements around

00:02:25,080 --> 00:02:29,370
inside the image you're kind of stuck

00:02:27,060 --> 00:02:33,270
with that image moving forward so you

00:02:29,370 --> 00:02:34,590
can add styles inline in an SVG or you

00:02:33,270 --> 00:02:37,770
can control them from your style sheet

00:02:34,590 --> 00:02:40,530
which is really powerful you could group

00:02:37,770 --> 00:02:44,430
elements inside the SVG which is also

00:02:40,530 --> 00:02:47,790
really powerful way better accessibility

00:02:44,430 --> 00:02:49,920
I have the ability to add accessibility

00:02:47,790 --> 00:02:52,410
to individual elements or group of

00:02:49,920 --> 00:02:57,900
elements inside my SVG so that's really

00:02:52,410 --> 00:03:00,750
really great performance so let's just

00:02:57,900 --> 00:03:03,120
take the use case of social share icons

00:03:00,750 --> 00:03:05,520
or social icons right if we have five of

00:03:03,120 --> 00:03:06,989
them and we use the PNG method we have

00:03:05,520 --> 00:03:09,870
to go and get five images from our

00:03:06,989 --> 00:03:12,090
server not ideal we can use another

00:03:09,870 --> 00:03:15,360
method which is we can load up a sprite

00:03:12,090 --> 00:03:18,390
and then tell via CSS where in that

00:03:15,360 --> 00:03:20,940
sprite that icon actually lives but

00:03:18,390 --> 00:03:26,489
that's still one request if you use

00:03:20,940 --> 00:03:28,830
inline SVG's zero requests reusable

00:03:26,489 --> 00:03:31,320
there's a really nifty feature an SVG

00:03:28,830 --> 00:03:33,870
code use meaning if I already have an

00:03:31,320 --> 00:03:36,300
SVG element on the page I can just

00:03:33,870 --> 00:03:39,030
reference it inside of another SVG and

00:03:36,300 --> 00:03:41,700
get it for free it actually doesn't load

00:03:39,030 --> 00:03:43,680
any more code and what it actually does

00:03:41,700 --> 00:03:49,080
is creates that element within the

00:03:43,680 --> 00:03:52,890
shadow Dom it's totally responsive it's

00:03:49,080 --> 00:03:54,570
not this cover contained situation where

00:03:52,890 --> 00:03:56,640
you kind of gotta decide if you're gonna

00:03:54,570 --> 00:03:58,500
go full width with it or you know

00:03:56,640 --> 00:04:00,120
condense it or stretch it out you can

00:03:58,500 --> 00:04:03,360
actually move elements around inside of

00:04:00,120 --> 00:04:05,400
it you can target individual elements

00:04:03,360 --> 00:04:08,100
inside the SVG or groups which is really

00:04:05,400 --> 00:04:09,630
powerful you can use media queries to

00:04:08,100 --> 00:04:13,710
target those individual elements or

00:04:09,630 --> 00:04:16,760
groups so this is kind of an example of

00:04:13,710 --> 00:04:20,519
that well I guess

00:04:16,760 --> 00:04:22,710
but so basically if you have a Walt

00:04:20,519 --> 00:04:25,860
Disney logo let's just say and you want

00:04:22,710 --> 00:04:29,460
to drill it down as the page gets

00:04:25,860 --> 00:04:30,990
smaller you can kind of target each one

00:04:29,460 --> 00:04:33,870
of these elements and I must show you

00:04:30,990 --> 00:04:35,370
what that looks like in Illustrator so

00:04:33,870 --> 00:04:38,220
this is kind of what that looks like an

00:04:35,370 --> 00:04:40,710
illustrator you can layer it and group

00:04:38,220 --> 00:04:43,740
it out and name it and when you save it

00:04:40,710 --> 00:04:46,260
out illustrator actually saves out the

00:04:43,740 --> 00:04:50,580
groups with your naming conventions from

00:04:46,260 --> 00:04:53,160
your illustrator file accessibility

00:04:50,580 --> 00:04:55,110
again we can we can target different

00:04:53,160 --> 00:04:58,200
elements or groups of elements inside a

00:04:55,110 --> 00:05:04,340
SVG and give screen readers information

00:04:58,200 --> 00:05:08,220
about those individual elements filters

00:05:04,340 --> 00:05:11,880
this is a really powerful feature in SVG

00:05:08,220 --> 00:05:19,230
it allows you to define inline filters

00:05:11,880 --> 00:05:21,390
for your SVG and it's reusable no need

00:05:19,230 --> 00:05:23,610
to do complex CSS when you're using

00:05:21,390 --> 00:05:26,070
these filters it automatically does

00:05:23,610 --> 00:05:28,380
things like blur for you so you don't

00:05:26,070 --> 00:05:33,870
have to write some convoluted CSS to

00:05:28,380 --> 00:05:35,880
achieve that animations this is for me

00:05:33,870 --> 00:05:37,380
it harkens back to my flash days right

00:05:35,880 --> 00:05:39,240
like when we lived in the world of flash

00:05:37,380 --> 00:05:41,820
we had all these things flying all

00:05:39,240 --> 00:05:42,930
around sometimes these super long intros

00:05:41,820 --> 00:05:46,380
that you didn't want to watch but they

00:05:42,930 --> 00:05:48,419
just gave them to you anyways but this

00:05:46,380 --> 00:05:53,400
gives you the power again to animate

00:05:48,419 --> 00:05:55,680
certain elements they have a built-in

00:05:53,400 --> 00:05:58,290
feature of animations and you can do

00:05:55,680 --> 00:06:00,210
things like within an SVG targeted

00:05:58,290 --> 00:06:04,680
element and move it to a different part

00:06:00,210 --> 00:06:07,080
of that viewport and again this is like

00:06:04,680 --> 00:06:09,000
I think one of the most powerful

00:06:07,080 --> 00:06:11,580
features I can target individual or

00:06:09,000 --> 00:06:13,650
groups of elements inside the SVG so

00:06:11,580 --> 00:06:15,510
it's not just making the entire image

00:06:13,650 --> 00:06:21,150
responsive it's making every element

00:06:15,510 --> 00:06:24,600
inside that SVG responsive using raster

00:06:21,150 --> 00:06:27,870
images like PNG s and JPEGs for things

00:06:24,600 --> 00:06:30,020
like customer logos I think we got to do

00:06:27,870 --> 00:06:32,189
away with that

00:06:30,020 --> 00:06:34,169
for so many reasons one it's not

00:06:32,189 --> 00:06:37,860
future-proof you know what Apple just

00:06:34,169 --> 00:06:40,520
came out with a 6k TV what is well you

00:06:37,860 --> 00:06:43,139
know what is your clients 200 by 200

00:06:40,520 --> 00:06:44,400
logo look like on that TV we don't even

00:06:43,139 --> 00:06:45,479
know right we don't and we don't know

00:06:44,400 --> 00:06:47,610
how many kids are gonna go up to they

00:06:45,479 --> 00:06:51,360
could go up to a hundred case so I mean

00:06:47,610 --> 00:06:53,759
let's imagine a situation where our name

00:06:51,360 --> 00:06:55,620
is Christine and we're newly single and

00:06:53,759 --> 00:06:58,800
we're getting on this data wrap thing

00:06:55,620 --> 00:06:59,969
called Twitter we're sorry tinder we're

00:06:58,800 --> 00:07:02,460
getting out there that thing called

00:06:59,969 --> 00:07:05,370
tinder now would we if we're Christine

00:07:02,460 --> 00:07:10,289
put up a blurry or pixelated image of

00:07:05,370 --> 00:07:11,550
ourselves in our dating profile I don't

00:07:10,289 --> 00:07:13,500
think we would I don't think we'd go

00:07:11,550 --> 00:07:15,900
with this right we wouldn't say this

00:07:13,500 --> 00:07:19,650
works for me and if you wouldn't put

00:07:15,900 --> 00:07:20,819
yourself or your image in this light you

00:07:19,650 --> 00:07:22,620
probably shouldn't do it for clients

00:07:20,819 --> 00:07:26,000
either because their logo is very dear

00:07:22,620 --> 00:07:28,620
to them their brand is very dear to them

00:07:26,000 --> 00:07:32,940
okay so how do we get from this

00:07:28,620 --> 00:07:36,330
pixelated PNG to this crisp be clear SVG

00:07:32,940 --> 00:07:41,430
and now I'm gonna do a live demo which I

00:07:36,330 --> 00:07:44,930
hope goes well we're gonna find out just

00:07:41,430 --> 00:07:44,930
give me one second to set it up here

00:07:44,960 --> 00:07:52,349
mm-hmm

00:07:46,759 --> 00:07:58,949
okay cool so I'm an illustrator and I

00:07:52,349 --> 00:08:01,610
have a wordpress logo.png okay I'm gonna

00:07:58,949 --> 00:08:04,889
load it up and here it is

00:08:01,610 --> 00:08:08,339
so actually illustrator makes this super

00:08:04,889 --> 00:08:10,080
easy for you right here at this top

00:08:08,339 --> 00:08:14,339
navigation bar you can do a thing called

00:08:10,080 --> 00:08:16,860
trace image trace image needs a little

00:08:14,339 --> 00:08:18,509
bit information from you as a user it

00:08:16,860 --> 00:08:20,909
just kind of wants to know how complex

00:08:18,509 --> 00:08:24,139
is this image before I convert it so

00:08:20,909 --> 00:08:26,310
this image is not very complex at all

00:08:24,139 --> 00:08:29,069
sometimes I'll just go with three colors

00:08:26,310 --> 00:08:30,629
even if it's one just cuz that means

00:08:29,069 --> 00:08:34,380
that they're gonna optimize it a little

00:08:30,629 --> 00:08:36,560
better so let's do that it's gonna do

00:08:34,380 --> 00:08:36,560
its thing

00:08:39,820 --> 00:08:48,110
okay now as soon as we click expand

00:08:44,080 --> 00:08:49,520
we're done we got it it's an SVG and

00:08:48,110 --> 00:08:50,570
they've already grouped it for us and

00:08:49,520 --> 00:08:52,670
they've already broke it down in the

00:08:50,570 --> 00:08:54,500
past for us and we can go in here and

00:08:52,670 --> 00:08:56,270
group them differently and name them

00:08:54,500 --> 00:08:57,680
differently if we want so when we save

00:08:56,270 --> 00:09:02,510
out the SVG we have the naming

00:08:57,680 --> 00:09:04,970
conventions we want so if the customer

00:09:02,510 --> 00:09:06,410
gives you a logo and it's not an SVG you

00:09:04,970 --> 00:09:08,649
can convert it in a matter of seconds

00:09:06,410 --> 00:09:11,029
right I mean that was super painless

00:09:08,649 --> 00:09:13,070
sometimes it gets a little more tricky

00:09:11,029 --> 00:09:15,589
when the logos are a little bit more

00:09:13,070 --> 00:09:17,750
complex or the images are a little

00:09:15,589 --> 00:09:20,270
smaller but you know add you kind of go

00:09:17,750 --> 00:09:24,850
along you'll learn different tricks and

00:09:20,270 --> 00:09:24,850
tactics to mitigate that yep

00:09:37,580 --> 00:09:44,970
yeah I think if there is okay so here it

00:09:40,769 --> 00:09:46,410
is right here I think you can so I don't

00:09:44,970 --> 00:09:47,459
this already has a transparent

00:09:46,410 --> 00:09:49,560
background I think I think it's just

00:09:47,459 --> 00:09:51,420
white because the artboard is white so

00:09:49,560 --> 00:09:52,890
it's already transparent but if yes if

00:09:51,420 --> 00:09:54,959
that were to happen and there was a

00:09:52,890 --> 00:09:57,170
white background on it you could just

00:09:54,959 --> 00:10:00,320
click into that layer and delete it

00:09:57,170 --> 00:10:00,320
that's fine

00:10:20,990 --> 00:10:25,400
so then we can just save this out here

00:10:25,760 --> 00:10:33,720
we can save it as an SVG and while we're

00:10:32,370 --> 00:10:37,110
done we can just take a look at the code

00:10:33,720 --> 00:10:38,880
right in here and you know illustrator

00:10:37,110 --> 00:10:41,190
does a really good job of grouping

00:10:38,880 --> 00:10:43,560
things and then automatically appending

00:10:41,190 --> 00:10:45,300
classes to two different paths and you

00:10:43,560 --> 00:10:47,850
see those classes represented up there

00:10:45,300 --> 00:10:49,430
in a style tag from familiar with HTML

00:10:47,850 --> 00:10:54,990
and CSS that should be something that

00:10:49,430 --> 00:10:57,089
you're pretty much used to is there any

00:10:54,990 --> 00:11:02,339
other questions about how to convert a

00:10:57,089 --> 00:11:15,210
PNG - SVG before we move on what's that

00:11:02,339 --> 00:11:17,070
I no no no with the photo no I mean I

00:11:15,210 --> 00:11:18,750
think you kind of got a delineate

00:11:17,070 --> 00:11:22,170
between is this a good candidate for an

00:11:18,750 --> 00:11:25,080
SVG or not to me most good candidates

00:11:22,170 --> 00:11:28,890
for an SVG are things like icons and

00:11:25,080 --> 00:11:32,339
logos images although you can do it and

00:11:28,890 --> 00:11:36,980
you can do it well most images they just

00:11:32,339 --> 00:11:36,980
don't work they're too complex yeah

00:11:53,100 --> 00:12:01,150
yeah what what do you mean optimizing

00:11:59,110 --> 00:12:19,300
for readability of code or optimizing

00:12:01,150 --> 00:12:20,740
for performance right yep yep yet yep

00:12:19,300 --> 00:12:28,510
there's a there's a plug-in I think it's

00:12:20,740 --> 00:12:30,970
called SVG go I think so okay sure yeah

00:12:28,510 --> 00:12:33,160
we use SVG go and we we just built that

00:12:30,970 --> 00:12:35,350
into our gulp tasks so that just happens

00:12:33,160 --> 00:12:38,590
for us automatically when we run our

00:12:35,350 --> 00:12:41,440
build another thing you can do is get

00:12:38,590 --> 00:12:43,240
rid of unneeded layers right you can

00:12:41,440 --> 00:12:45,370
kind of optimize it yourself in this

00:12:43,240 --> 00:12:47,560
interface if you like I like to go in

00:12:45,370 --> 00:12:50,490
and group layers based on the colors

00:12:47,560 --> 00:12:50,490
they may or may not be

00:13:07,110 --> 00:13:14,740
all right so now we know how to create

00:13:09,760 --> 00:13:16,420
an SVG how do we actually use it so

00:13:14,740 --> 00:13:18,040
there's three different types of SPG's

00:13:16,420 --> 00:13:20,800
or three different ways that you can

00:13:18,040 --> 00:13:23,680
basically use an SVG in your code to get

00:13:20,800 --> 00:13:26,140
it to display in a browser that's object

00:13:23,680 --> 00:13:28,990
mode object mode is kind of like an

00:13:26,140 --> 00:13:31,300
iframe or a video embed

00:13:28,990 --> 00:13:34,210
there's image mode image mode is just

00:13:31,300 --> 00:13:36,190
like any image tag or background image

00:13:34,210 --> 00:13:39,220
in your CSS where you would load an

00:13:36,190 --> 00:13:40,750
image in and then there's in line in

00:13:39,220 --> 00:13:42,550
line is going to give you the most

00:13:40,750 --> 00:13:44,350
flexibility and benefits and that's

00:13:42,550 --> 00:13:47,500
pretty much exclusively really what we

00:13:44,350 --> 00:13:50,710
use I code 42 so let's take a look at

00:13:47,500 --> 00:13:58,360
each one of those familiar with HTML I

00:13:50,710 --> 00:14:00,850
mean this is pretty basic and you can

00:13:58,360 --> 00:14:05,530
load it in the image tag or background

00:14:00,850 --> 00:14:07,840
in your styles and then this is just an

00:14:05,530 --> 00:14:10,390
SVG tag this is just a basic as wedi tag

00:14:07,840 --> 00:14:19,000
just like any other HTML element like

00:14:10,390 --> 00:14:21,490
div or yep just just right there in your

00:14:19,000 --> 00:14:23,830
HTML you can just define it and that's

00:14:21,490 --> 00:14:26,050
the easy part

00:14:23,830 --> 00:14:29,170
what are the advantages of using an

00:14:26,050 --> 00:14:31,900
inline SVG we've already covered a lot

00:14:29,170 --> 00:14:35,500
of them but one of the big advantages is

00:14:31,900 --> 00:14:39,100
it solves an age-old problem which is

00:14:35,500 --> 00:14:41,170
make the logo bigger right everyone

00:14:39,100 --> 00:14:42,940
wants you to make the logo bigger well

00:14:41,170 --> 00:14:46,020
in the past if I was gonna make the logo

00:14:42,940 --> 00:14:49,780
bigger I would have to open up Photoshop

00:14:46,020 --> 00:14:52,320
recrop my canvas recrop my image save it

00:14:49,780 --> 00:14:55,270
back out load it back up to the server

00:14:52,320 --> 00:14:59,470
well ODS bigger you owe me for one hour

00:14:55,270 --> 00:15:01,600
work sir just kidding now you could just

00:14:59,470 --> 00:15:04,300
apply CSS classes and make it bigger

00:15:01,600 --> 00:15:06,160
right there right then you could do it

00:15:04,300 --> 00:15:10,120
in the browser form or just using CSS

00:15:06,160 --> 00:15:11,260
you can make it bigger all right so

00:15:10,120 --> 00:15:12,970
we've already talked about some of these

00:15:11,260 --> 00:15:15,310
but let's go over it again what are the

00:15:12,970 --> 00:15:16,960
advantages all right we got crisp on any

00:15:15,310 --> 00:15:19,300
screen resolution they come out with a

00:15:16,960 --> 00:15:19,930
10k TV you're sure it's going to look

00:15:19,300 --> 00:15:22,390
good

00:15:19,930 --> 00:15:26,410
less HTTP requests - no HTTP requests

00:15:22,390 --> 00:15:29,680
which is just amazing easy to animate it

00:15:26,410 --> 00:15:37,390
is extremely easy to animate SVG's you

00:15:29,680 --> 00:15:39,250
can yes no but I am going to talk about

00:15:37,390 --> 00:15:46,450
how the different various ways you can

00:15:39,250 --> 00:15:57,459
animate SVG easy to make accessible well

00:15:46,450 --> 00:16:03,550
supported yep yep I'm gonna get into the

00:15:57,459 --> 00:16:06,910
house in a little bit controlled with

00:16:03,550 --> 00:16:10,720
styles now how many of you currently use

00:16:06,910 --> 00:16:13,029
SVG's cool how many of you guys

00:16:10,720 --> 00:16:14,440
currently use SVG is but I've never

00:16:13,029 --> 00:16:20,170
opened up SVG file and I'm actually

00:16:14,440 --> 00:16:22,480
looked at what the output is okay we got

00:16:20,170 --> 00:16:29,830
a couple cool well this is what the

00:16:22,480 --> 00:16:31,690
inside of an SVG file looks like I'm

00:16:29,830 --> 00:16:35,500
just kidding but it is it is kind of

00:16:31,690 --> 00:16:38,529
scary so this is typically what the

00:16:35,500 --> 00:16:46,330
inside of our SVG files at code 42 looks

00:16:38,529 --> 00:16:49,810
like so we define our Styles up top and

00:16:46,330 --> 00:16:51,459
we give it a class definition and then

00:16:49,810 --> 00:16:53,709
we just define our classes in our two

00:16:51,459 --> 00:16:55,810
paths can anyone by looking at this

00:16:53,709 --> 00:16:58,260
example code tell me what this is going

00:16:55,810 --> 00:16:58,260
to render

00:17:01,870 --> 00:17:08,630
you got it so that code renders this and

00:17:07,100 --> 00:17:10,819
the reason why we've kind of broken them

00:17:08,630 --> 00:17:13,579
up into two classes and to find them up

00:17:10,819 --> 00:17:15,439
there is one of the paths needs to be

00:17:13,579 --> 00:17:21,740
read and one of them needs to be almost

00:17:15,439 --> 00:17:25,130
black cool all right we know how to

00:17:21,740 --> 00:17:26,990
convert an SVG we know what an SVG looks

00:17:25,130 --> 00:17:29,270
like we know how to apply styles to an

00:17:26,990 --> 00:17:31,460
SVG but that doesn't really get us all

00:17:29,270 --> 00:17:32,930
the way there right we're all here for

00:17:31,460 --> 00:17:37,670
word camp we're all here for WordPress

00:17:32,930 --> 00:17:39,680
so how do we use SVG is and WordPress is

00:17:37,670 --> 00:17:42,770
anybody in the room currently using SVG

00:17:39,680 --> 00:17:52,480
s and their theme production how do you

00:17:42,770 --> 00:17:52,480
typically do it okay

00:17:57,470 --> 00:18:02,490
okay okay cool

00:17:59,429 --> 00:18:04,049
yep so that's typically typically the

00:18:02,490 --> 00:18:07,169
way people do it just in line right

00:18:04,049 --> 00:18:08,789
there in their template or or just

00:18:07,169 --> 00:18:13,289
upload it to the media gallery and then

00:18:08,789 --> 00:18:14,789
you can use image mode to pull it in we

00:18:13,289 --> 00:18:20,340
use this nifty feature called

00:18:14,789 --> 00:18:24,179
get file contents so we want our SVG to

00:18:20,340 --> 00:18:28,110
be inline but we want to tell our

00:18:24,179 --> 00:18:30,690
template which SVD to load when it gets

00:18:28,110 --> 00:18:32,070
the request from the server and the

00:18:30,690 --> 00:18:35,340
reason why we want to do that is we

00:18:32,070 --> 00:18:38,009
might have a template in which the SVG

00:18:35,340 --> 00:18:40,980
and the markup they're all the same but

00:18:38,009 --> 00:18:42,570
the difference is the SVG logo that we

00:18:40,980 --> 00:18:46,789
want to bring back so I'll give you an

00:18:42,570 --> 00:18:49,440
example I have a client that sells

00:18:46,789 --> 00:18:51,179
tradeshow booths and they have all these

00:18:49,440 --> 00:18:52,619
different product pages and all these

00:18:51,179 --> 00:18:54,509
different product templates are the same

00:18:52,619 --> 00:18:56,519
right there's a slideshow to the left

00:18:54,509 --> 00:18:59,490
information and then you know the

00:18:56,519 --> 00:19:01,710
product line logo and so I want to reuse

00:18:59,490 --> 00:19:04,590
that template but I need to grab a

00:19:01,710 --> 00:19:06,480
different logo for that template to

00:19:04,590 --> 00:19:10,220
represent their product lines so that's

00:19:06,480 --> 00:19:10,220
why we would do something like this

00:19:10,669 --> 00:19:17,700
there's also a plug-in that you can use

00:19:13,549 --> 00:19:21,090
SVG support I haven't used this plug-in

00:19:17,700 --> 00:19:23,600
but they do support inline SVG which i

00:19:21,090 --> 00:19:23,600
think is pretty cool

00:19:26,269 --> 00:19:33,210
okay code 42 case study so this is that

00:19:29,909 --> 00:19:35,249
moment in time where my coworker came to

00:19:33,210 --> 00:19:37,590
me and said we got to use SVG for this

00:19:35,249 --> 00:19:38,159
product we cannot use PNG so I'm like

00:19:37,590 --> 00:19:40,289
why

00:19:38,159 --> 00:19:44,429
well I can't we use it I know how to use

00:19:40,289 --> 00:19:46,820
PNG s is because we love our logos we

00:19:44,429 --> 00:19:50,190
love to show off our clients at code 42

00:19:46,820 --> 00:19:51,539
we have a lot of clients in fact our

00:19:50,190 --> 00:19:53,629
meeting rooms are named after our

00:19:51,539 --> 00:19:56,639
clients so we're really invested in

00:19:53,629 --> 00:19:58,499
client relationship come over clients

00:19:56,639 --> 00:20:04,980
are Boston University National

00:19:58,499 --> 00:20:07,140
Geographic ok Patagonia so the problem

00:20:04,980 --> 00:20:09,390
we need to give content editors the

00:20:07,140 --> 00:20:11,910
ability to add logos without any

00:20:09,390 --> 00:20:14,670
developer intervention right they don't

00:20:11,910 --> 00:20:16,170
they can't call on us every time they

00:20:14,670 --> 00:20:17,670
win a new client and they want to put it

00:20:16,170 --> 00:20:21,750
on the website or they want the ability

00:20:17,670 --> 00:20:23,400
to access that logo on the website we

00:20:21,750 --> 00:20:25,950
need to change colors programmatically

00:20:23,400 --> 00:20:27,780
based on different modules and themes we

00:20:25,950 --> 00:20:30,090
have so that was another really big

00:20:27,780 --> 00:20:32,430
issue and a big reason why we couldn't

00:20:30,090 --> 00:20:36,900
use raster images for this particular

00:20:32,430 --> 00:20:39,720
problem we have to make the solution

00:20:36,900 --> 00:20:44,120
reusable across multiple websites and we

00:20:39,720 --> 00:20:46,830
have about six of them we maintain okay

00:20:44,120 --> 00:20:51,840
the real problem we have Adobe as a

00:20:46,830 --> 00:20:55,260
client we have to represent that logo

00:20:51,840 --> 00:20:58,860
and four different colors we have to

00:20:55,260 --> 00:21:02,610
then do it in six different sizes for

00:20:58,860 --> 00:21:05,220
every code 42 customer so that right

00:21:02,610 --> 00:21:07,560
there to meet equals not gonna happen

00:21:05,220 --> 00:21:09,360
we're not gonna say about a thousand

00:21:07,560 --> 00:21:11,340
different PNG s to represent these

00:21:09,360 --> 00:21:14,060
various clients against these various

00:21:11,340 --> 00:21:18,960
modules at various times it's just not

00:21:14,060 --> 00:21:21,540
it's not going to work so what we did is

00:21:18,960 --> 00:21:27,330
we built a plug-in and that plug-in

00:21:21,540 --> 00:21:30,360
allows us to upload SVG's optimize them

00:21:27,330 --> 00:21:33,120
and make them available globally for

00:21:30,360 --> 00:21:36,470
consumption of our modules and I'm going

00:21:33,120 --> 00:21:36,470
to demo that for you right now

00:21:40,450 --> 00:21:43,450
okay

00:21:52,500 --> 00:22:01,500
okay so this is what our plugin looks

00:21:54,870 --> 00:22:08,640
like as you can see they need access to

00:22:01,500 --> 00:22:10,200
a lot of different logos and they need

00:22:08,640 --> 00:22:13,980
to be represented in all the different

00:22:10,200 --> 00:22:16,260
colors so we allow them to kind of look

00:22:13,980 --> 00:22:18,690
at the different themes and decide is

00:22:16,260 --> 00:22:21,890
this you know the way we want to portray

00:22:18,690 --> 00:22:28,200
our client on the website for this

00:22:21,890 --> 00:22:31,200
instance yeah so it's just a nifty

00:22:28,200 --> 00:22:32,760
little plugin works really well but I

00:22:31,200 --> 00:22:39,270
mean you can see how like Chris these

00:22:32,760 --> 00:22:50,010
logos are right they just look good let

00:22:39,270 --> 00:22:52,559
me see here it's not available to the

00:22:50,010 --> 00:22:54,510
public no if it was up to me but my

00:22:52,559 --> 00:22:57,090
druthers I would make a lot more of our

00:22:54,510 --> 00:23:05,340
stuff open source but you kind of know

00:22:57,090 --> 00:23:07,980
how that goes so okay cool

00:23:05,340 --> 00:23:10,980
so you're asking about how do we use

00:23:07,980 --> 00:23:14,010
this better accessibility how do we make

00:23:10,980 --> 00:23:17,580
these SVG is accessible and here we go

00:23:14,010 --> 00:23:20,370
right here we have an SVG element and we

00:23:17,580 --> 00:23:24,210
give it Aria label labeled by and we

00:23:20,370 --> 00:23:27,450
equal that to title and then we ID our

00:23:24,210 --> 00:23:30,870
title with the same attribute that we

00:23:27,450 --> 00:23:31,980
fed to the Aria and there you go then

00:23:30,870 --> 00:23:33,900
you can define what it is and

00:23:31,980 --> 00:23:36,299
screenreader is gonna get to that

00:23:33,900 --> 00:23:38,039
element and say oh I know what to read

00:23:36,299 --> 00:23:40,140
here it's what you told me to because

00:23:38,039 --> 00:23:43,169
you referenced it here in this Aria

00:23:40,140 --> 00:23:44,669
label so as you can see that that works

00:23:43,169 --> 00:23:46,770
a lot better than an alt tag right

00:23:44,669 --> 00:23:49,470
especially if I have an SVG like the

00:23:46,770 --> 00:23:51,900
Adobe one that's like the read Adobe a

00:23:49,470 --> 00:23:53,280
and then the word Adobe right I can

00:23:51,900 --> 00:23:57,690
separate those two things out and say

00:23:53,280 --> 00:24:00,900
the screen reader read Adobe a and spell

00:23:57,690 --> 00:24:03,750
out the word Adobe if I want

00:24:00,900 --> 00:24:05,700
so again I mean it's just pretty simple

00:24:03,750 --> 00:24:11,250
it's not very complex to use this

00:24:05,700 --> 00:24:13,559
element I'm sorry

00:24:11,250 --> 00:24:16,200
inherently it's gonna be hidden you mean

00:24:13,559 --> 00:24:23,510
is it gonna show is it gonna render in

00:24:16,200 --> 00:24:28,320
the browser no yeah

00:24:23,510 --> 00:24:31,410
animation effects so SVG has this

00:24:28,320 --> 00:24:34,290
built-in animation element that again

00:24:31,410 --> 00:24:36,720
you can just link using IDs and this

00:24:34,290 --> 00:24:41,630
animation element has things like move

00:24:36,720 --> 00:24:45,480
to start from so you can create an SVG

00:24:41,630 --> 00:24:47,250
element with an animation built into it

00:24:45,480 --> 00:24:51,780
loaded up to the browser and it's good

00:24:47,250 --> 00:24:56,820
to go no JavaScript no CSS so that's

00:24:51,780 --> 00:25:00,090
pretty powerful I prefer to use green

00:24:56,820 --> 00:25:02,520
sock but again how you would do that is

00:25:00,090 --> 00:25:07,200
just import green sock into your project

00:25:02,520 --> 00:25:08,640
and call it out the ID so you can do

00:25:07,200 --> 00:25:15,840
some pretty powerful stuff with green

00:25:08,640 --> 00:25:18,870
socks and tweens so this to me is like

00:25:15,840 --> 00:25:22,050
one of the coolest features of SVG this

00:25:18,870 --> 00:25:23,940
filter function right I've got an SVG

00:25:22,050 --> 00:25:26,070
and I want to do something different

00:25:23,940 --> 00:25:29,340
with it or maybe when I roll over it I

00:25:26,070 --> 00:25:32,790
want it to blur I want to roll off of it

00:25:29,340 --> 00:25:36,780
I want it to UM blur well I can define

00:25:32,790 --> 00:25:41,940
that right here using using this filter

00:25:36,780 --> 00:25:47,030
and again it's just simple I feed it an

00:25:41,940 --> 00:25:47,030
ID and it knows what to do yeah

00:25:47,480 --> 00:25:54,150
you can you can yep yeah it's really

00:25:52,860 --> 00:25:58,460
cool it's really powerful and I think

00:25:54,150 --> 00:26:02,940
there's 16 filters right now

00:25:58,460 --> 00:26:04,830
Sarah Sudan has a really really good

00:26:02,940 --> 00:26:07,770
article on different filters and how to

00:26:04,830 --> 00:26:10,530
use them on core drops so I would

00:26:07,770 --> 00:26:11,880
definitely check that out

00:26:10,530 --> 00:26:14,040
and this is pretty well supported as

00:26:11,880 --> 00:26:16,730
well so unless you have to do something

00:26:14,040 --> 00:26:16,730
in ie10

00:26:16,850 --> 00:26:24,300
well you think that's funny but what I

00:26:18,960 --> 00:26:27,660
would started it was IE 5.5 that was

00:26:24,300 --> 00:26:32,940
difficult like I said it's just a really

00:26:27,660 --> 00:26:38,880
powerful really cool feature and it can

00:26:32,940 --> 00:26:42,560
do things like this right so that's just

00:26:38,880 --> 00:26:54,630
a little bit of JavaScript mixed with a

00:26:42,560 --> 00:26:57,510
SVG filter SVG use this is super cool if

00:26:54,630 --> 00:27:01,410
I define a SVG somewhere I can reuse it

00:26:57,510 --> 00:27:03,510
elsewhere again without any more code or

00:27:01,410 --> 00:27:06,420
having the browser interpret any more

00:27:03,510 --> 00:27:07,890
code it's going to load this it's going

00:27:06,420 --> 00:27:12,270
to clone this element and load it in the

00:27:07,890 --> 00:27:14,460
shadow Dom so in this example we define

00:27:12,270 --> 00:27:22,130
one circle and then we reuse it twice

00:27:14,460 --> 00:27:25,670
but we gave it different styles so

00:27:22,130 --> 00:27:25,670
really powerful as well

00:27:26,390 --> 00:27:33,350
all right the anatomy of an SVG this is

00:27:30,290 --> 00:27:35,930
that scary part like all this element

00:27:33,350 --> 00:27:38,840
stuff on the top level it's pretty cool

00:27:35,930 --> 00:27:39,290
you know it's pretty I'm pretty used to

00:27:38,840 --> 00:27:40,970
it

00:27:39,290 --> 00:27:43,370
and you don't really got to get into the

00:27:40,970 --> 00:27:44,870
nitty-gritty about what's going on past

00:27:43,370 --> 00:27:46,880
defining your styles and putting ideas

00:27:44,870 --> 00:27:49,490
on path and group but we're just going

00:27:46,880 --> 00:27:50,720
to walk through it and you know it might

00:27:49,490 --> 00:27:53,900
get you out of a pinch when you hit a

00:27:50,720 --> 00:27:55,960
edge case at some point so we have built

00:27:53,900 --> 00:28:02,210
in elements those elements are rec

00:27:55,960 --> 00:28:04,640
circle polygons line this is what a

00:28:02,210 --> 00:28:07,790
wreck looks like so I have SVG element

00:28:04,640 --> 00:28:09,440
and I define a width and a height and it

00:28:07,790 --> 00:28:12,020
gives me a rectangle I can pass

00:28:09,440 --> 00:28:19,970
additional parameters are X and that's

00:28:12,020 --> 00:28:23,990
gonna curve the the rectangle we got

00:28:19,970 --> 00:28:27,860
circle similar you know we feed in a

00:28:23,990 --> 00:28:29,870
radius and x position in a Y position

00:28:27,860 --> 00:28:34,520
and it just draws a circle for us right

00:28:29,870 --> 00:28:39,170
there polygons this is powerful when you

00:28:34,520 --> 00:28:42,290
want to create an SVG element that

00:28:39,170 --> 00:28:44,300
basically starts where it stops so this

00:28:42,290 --> 00:28:46,820
is a good example of that

00:28:44,300 --> 00:28:53,330
you know Robert starts it's going to

00:28:46,820 --> 00:28:55,400
stop so it so this works well line this

00:28:53,330 --> 00:29:00,460
draws a line from a starting point to a

00:28:55,400 --> 00:29:00,460
finishing point then you can pass it

00:29:02,020 --> 00:29:05,360
yeah it's basically just a starting

00:29:04,070 --> 00:29:12,100
point to a finishing point that's what

00:29:05,360 --> 00:29:14,420
the x1 x2 is and the y1 y2 path this is

00:29:12,100 --> 00:29:17,180
what you're gonna see most often and

00:29:14,420 --> 00:29:19,370
when you do that illustrator conversion

00:29:17,180 --> 00:29:24,230
that I showed you they normally create

00:29:19,370 --> 00:29:26,210
pass whenever they can one thing I like

00:29:24,230 --> 00:29:29,270
to do with pass is group them based on

00:29:26,210 --> 00:29:34,130
color animation preferences but so you

00:29:29,270 --> 00:29:37,480
define a path and within the D you equal

00:29:34,130 --> 00:29:39,950
what that path is going to look like and

00:29:37,480 --> 00:29:42,740
the Z at the end closes

00:29:39,950 --> 00:29:44,510
path so you have to have the D equals

00:29:42,740 --> 00:29:48,190
then you have to fill it in with the

00:29:44,510 --> 00:29:48,190
parameters and then you have to close it

00:29:50,649 --> 00:30:00,169
so upper case is for absolute lower case

00:29:55,370 --> 00:30:02,240
is for relative mm is for move to atlas

00:30:00,169 --> 00:30:04,039
for line so you can define a bunch of

00:30:02,240 --> 00:30:07,250
lines in the path

00:30:04,039 --> 00:30:11,320
H is for horizontal V is for vertical

00:30:07,250 --> 00:30:11,320
and Z is to end the path

00:30:19,980 --> 00:30:24,690
so again you know because we have these

00:30:22,740 --> 00:30:26,490
paths because we have these groups we

00:30:24,690 --> 00:30:28,139
can actually make things responsive you

00:30:26,490 --> 00:30:32,159
know we can base on the users browser

00:30:28,139 --> 00:30:37,230
with condense remove elements from our

00:30:32,159 --> 00:30:39,799
SVG logo and this is what that looks

00:30:37,230 --> 00:30:43,559
like in code right so I've wrapped it in

00:30:39,799 --> 00:30:45,600
SVG called Disney logo I've named them

00:30:43,559 --> 00:30:49,830
appropriately so Magic Castle Walt

00:30:45,600 --> 00:30:51,929
Disney and then Dee and I group the

00:30:49,830 --> 00:30:53,460
things that I need multiple paths in if

00:30:51,929 --> 00:30:56,549
you don't need multiple paths that you

00:30:53,460 --> 00:30:58,620
can not group them I'd I like to group

00:30:56,549 --> 00:31:08,460
everything just so they're on the same

00:30:58,620 --> 00:31:10,169
hierarchy and this is an example of you

00:31:08,460 --> 00:31:14,370
know what you could do with media

00:31:10,169 --> 00:31:15,690
queries and responsive logo so I think

00:31:14,370 --> 00:31:18,000
this is a lot better than what we

00:31:15,690 --> 00:31:26,279
currently have which like I said is just

00:31:18,000 --> 00:31:28,220
stretch contain cover and this is how

00:31:26,279 --> 00:31:30,630
you do that with media queries I mean

00:31:28,220 --> 00:31:32,130
pretty basic stuff you guys have done

00:31:30,630 --> 00:31:34,139
media queries if you've done any type of

00:31:32,130 --> 00:31:35,580
responsive development and you just call

00:31:34,139 --> 00:31:43,260
it out the same way you would call out

00:31:35,580 --> 00:31:45,120
any CSS class in your markup okay what

00:31:43,260 --> 00:31:49,799
else is cool about past is you can add

00:31:45,120 --> 00:31:52,380
bezzie A's to them so we have C that's a

00:31:49,799 --> 00:31:54,330
cubic Bezier a self-reflecting cubic

00:31:52,380 --> 00:31:57,179
Bezier that's kind of if you wanted to

00:31:54,330 --> 00:31:59,610
make like a s shape right it's gonna

00:31:57,179 --> 00:32:03,350
give it's going to get where the line

00:31:59,610 --> 00:32:08,419
curves it's going to give a reflected

00:32:03,350 --> 00:32:08,419
similar but opposite curve to it

00:32:08,850 --> 00:32:17,700
quadratic Bezier a elliptical arch and

00:32:14,190 --> 00:32:20,250
this is a really fun cool tool it's

00:32:17,700 --> 00:32:21,990
basically you can go in here and play

00:32:20,250 --> 00:32:25,940
with these different things on a path

00:32:21,990 --> 00:32:30,350
and then it will tell you exactly what

00:32:25,940 --> 00:32:30,350
bezzie a code you need to achieve that

00:32:30,460 --> 00:32:34,200
which is really powerful and cool

00:32:49,490 --> 00:32:58,740
you box this is what you wrap your inner

00:32:55,020 --> 00:33:00,660
elements for your SVG in and you can

00:32:58,740 --> 00:33:02,340
define a width and height I tend to take

00:33:00,660 --> 00:33:04,250
out the width and height because most of

00:33:02,340 --> 00:33:07,140
time I want my SVG is to be responsive

00:33:04,250 --> 00:33:10,530
but view box is basically you can think

00:33:07,140 --> 00:33:12,750
of it is cropping the canvas in which

00:33:10,530 --> 00:33:14,070
your SVG is gonna live right so it's

00:33:12,750 --> 00:33:16,080
going to need to be the width and height

00:33:14,070 --> 00:33:24,000
that you want it to be to display all

00:33:16,080 --> 00:33:27,090
your elements preserve aspect ratio the

00:33:24,000 --> 00:33:29,160
default is going to be X mid Y mid that

00:33:27,090 --> 00:33:33,330
smack dab in the center of that view box

00:33:29,160 --> 00:33:36,810
that we just talked about these are the

00:33:33,330 --> 00:33:40,680
options X has mid mid made a max Y the

00:33:36,810 --> 00:33:43,440
same thing mid mid and Max meat slicer

00:33:40,680 --> 00:33:46,500
none you can think of that as cropping

00:33:43,440 --> 00:33:49,080
slice is gonna crop the SVG elements if

00:33:46,500 --> 00:33:52,670
they're larger than the viewport meat is

00:33:49,080 --> 00:33:56,310
going to confine them to the viewport

00:33:52,670 --> 00:34:01,280
this is kind of a image that represents

00:33:56,310 --> 00:34:01,280
that so

00:34:07,280 --> 00:34:11,470
and then this is an image that's going

00:34:08,899 --> 00:34:15,190
to represent the difference between

00:34:11,470 --> 00:34:15,190
slicing and not slicing

00:34:21,300 --> 00:34:33,780
this is a cool example of using

00:34:24,960 --> 00:34:36,990
responsive text so it just kind of keeps

00:34:33,780 --> 00:34:39,540
it keeps its weight on the page no

00:34:36,990 --> 00:34:49,500
matter how wide or narrow you have the

00:34:39,540 --> 00:34:51,620
page with this clicker doesn't want to

00:34:49,500 --> 00:34:51,620
work

00:34:55,490 --> 00:35:04,360
there's a list of resources well so Sara

00:35:00,650 --> 00:35:08,660
Dresner and the two Sara's they um

00:35:04,360 --> 00:35:12,730
they're kind of the Oracles of the SVG

00:35:08,660 --> 00:35:14,540
landscape they have a ton of stuff about

00:35:12,730 --> 00:35:16,820
animating SVG's

00:35:14,540 --> 00:35:21,530
filtering SVG's and they've kind of been

00:35:16,820 --> 00:35:23,270
singing SVG praise for years now so I

00:35:21,530 --> 00:35:31,250
would I would definitely suggest

00:35:23,270 --> 00:35:37,030
following them and I'm gonna open it up

00:35:31,250 --> 00:35:37,030
for questions yeah

00:35:47,180 --> 00:35:50,180
yep

00:36:02,300 --> 00:36:05,120
yeah I mean I think you would kind of

00:36:03,710 --> 00:36:06,920
treat it you'd kind of treat it just

00:36:05,120 --> 00:36:08,360
like you would any lay out like you know

00:36:06,920 --> 00:36:10,340
if you're gonna do mobile first if it's

00:36:08,360 --> 00:36:12,200
here then show them what that looks like

00:36:10,340 --> 00:36:14,240
in that width but in the actual

00:36:12,200 --> 00:36:16,310
illustrator you're gonna want to group

00:36:14,240 --> 00:36:18,110
those things and name them appropriately

00:36:16,310 --> 00:36:21,140
that way you and your developer can have

00:36:18,110 --> 00:36:23,600
a conversation and say hey on group Walt

00:36:21,140 --> 00:36:26,690
Disney or on group magic castle

00:36:23,600 --> 00:36:36,130
I want that to disappear on you know on

00:36:26,690 --> 00:36:36,130
iPads or something like that yep yep yep

00:36:39,550 --> 00:36:46,130
selectable and copy and paste able oh

00:36:42,640 --> 00:36:48,370
yeah yeah no I hear ya um you know I I

00:36:46,130 --> 00:36:52,040
don't know I'm assuming there's a way

00:36:48,370 --> 00:36:54,110
I'm thinking there's probably some type

00:36:52,040 --> 00:36:58,450
of element or trick you could do to get

00:36:54,110 --> 00:36:58,450
that to happen yeah yeah

00:37:22,880 --> 00:37:38,210
cool yeah yet so the SM IL animation was

00:37:35,700 --> 00:37:40,440
that animation tag that I showed earlier

00:37:38,210 --> 00:37:50,360
that I think that's adopted from that

00:37:40,440 --> 00:37:50,360
spec and I okay go ahead right

00:38:01,250 --> 00:38:07,640
you know I think you can get pretty far

00:38:03,980 --> 00:38:10,220
with that animate element and CSS but

00:38:07,640 --> 00:38:12,830
you know I mean sometimes just you know

00:38:10,220 --> 00:38:14,540
basic CSS and HTML won't get the job

00:38:12,830 --> 00:38:28,370
done do you have like a specific use

00:38:14,540 --> 00:38:31,600
case that you're thinking of okay so

00:38:28,370 --> 00:38:34,130
you're asking if if I have like a

00:38:31,600 --> 00:38:37,010
software and I want to create an SVG

00:38:34,130 --> 00:38:38,690
animation and I just want I just want to

00:38:37,010 --> 00:38:43,760
be able to do it in the software and

00:38:38,690 --> 00:38:45,200
then export it I think Adobe has a

00:38:43,760 --> 00:38:46,790
product that's pretty good for that I

00:38:45,200 --> 00:38:48,830
can't remember the name off the top of

00:38:46,790 --> 00:38:52,250
my head I'm more on the development side

00:38:48,830 --> 00:38:53,630
though so I I wouldn't I really wouldn't

00:38:52,250 --> 00:39:01,150
know is there any designers in the room

00:38:53,630 --> 00:39:01,150
that are we're okay

00:39:07,520 --> 00:39:12,770
okay cool

00:39:09,089 --> 00:39:12,770
thank you yeah

00:39:15,050 --> 00:39:24,250
yeah there is a free SVG animator I'm

00:39:18,530 --> 00:39:24,250
sorry yeah inkscape yep

00:39:24,550 --> 00:39:31,880
it's called Inkscape it's it's a free

00:39:28,400 --> 00:39:49,190
SVG editor I find it kind of hard to use

00:39:31,880 --> 00:39:51,020
but maybe that's just me yeah yeah so

00:39:49,190 --> 00:39:54,470
tip number one I'd say get a large

00:39:51,020 --> 00:39:57,740
transparent image and then kind of okay

00:39:54,470 --> 00:40:00,579
so when I actually I could show you guys

00:39:57,740 --> 00:40:08,210
that so there's more features of

00:40:00,579 --> 00:40:11,859
illustrator but in that trace feature

00:40:08,210 --> 00:40:11,859
you can do a custom trace

00:40:17,030 --> 00:40:20,030
whoa

00:40:29,549 --> 00:40:36,989
oh sorry computer died but in that in

00:40:35,429 --> 00:40:38,099
that trace there's if you go all the way

00:40:36,989 --> 00:40:41,459
down to the bottom of the drop-down

00:40:38,099 --> 00:40:43,439
there's a custom trace feature and then

00:40:41,459 --> 00:40:46,729
you can kind of play with the different

00:40:43,439 --> 00:40:46,729
nuances of it just to get a different

00:40:48,529 --> 00:41:03,449
right yep yep yep

00:41:01,739 --> 00:41:04,829
and that like I said that's that setting

00:41:03,449 --> 00:41:06,630
when you pick like two colors three

00:41:04,829 --> 00:41:08,399
colors sixteen colors or if you do a

00:41:06,630 --> 00:41:08,609
custom you just kind of got to play with

00:41:08,399 --> 00:41:11,989
it

00:41:08,609 --> 00:41:11,989
and start with a large image

00:41:35,049 --> 00:41:52,179
right right water oh yeah No

00:42:07,710 --> 00:42:15,270
um I prefer grouping I guess I don't

00:42:12,010 --> 00:42:15,270
know if there's a compelling reason oh

00:42:18,060 --> 00:42:22,510
yeah okay okay yeah so if I have

00:42:20,380 --> 00:42:24,190
multiple pass and I know that they're

00:42:22,510 --> 00:42:32,340
going to be the same color then yeah you

00:42:24,190 --> 00:42:32,340
should compound them yeah nope yep

00:42:43,390 --> 00:42:46,840
this is just like

00:42:48,169 --> 00:42:51,169
yes

00:42:51,520 --> 00:42:55,750
okay so you you have a okay so you have

00:42:53,980 --> 00:42:58,840
it you have a problem and where the

00:42:55,750 --> 00:43:01,000
editor wants to grab an SVG from a list

00:42:58,840 --> 00:43:13,030
of SVG's and then have an inline on the

00:43:01,000 --> 00:43:15,460
page yeah right yeah so you could well

00:43:13,030 --> 00:43:17,260
if you want it to be inline you could

00:43:15,460 --> 00:43:18,970
use that plug-in and they have an inline

00:43:17,260 --> 00:43:21,310
option and allow you to select from the

00:43:18,970 --> 00:43:23,890
media query what we did is we created a

00:43:21,310 --> 00:43:26,080
custom post type and that post type has

00:43:23,890 --> 00:43:28,300
a reference to the file that we're going

00:43:26,080 --> 00:43:30,970
to get the content from and then they

00:43:28,300 --> 00:43:33,250
pick which logo they want to use from a

00:43:30,970 --> 00:43:36,160
drop-down list and on the in the

00:43:33,250 --> 00:43:51,640
template we parse that so it knows what

00:43:36,160 --> 00:43:57,760
to grab one inline SVG if you do it

00:43:51,640 --> 00:44:03,370
right yeah right right you know and you

00:43:57,760 --> 00:44:04,930
get all that control one right I mean

00:44:03,370 --> 00:44:06,130
you don't even have to use a file if

00:44:04,930 --> 00:44:16,870
it's inline it's just it's just

00:44:06,130 --> 00:44:17,270
rendering HTML at that point so yep yeah

00:44:16,870 --> 00:44:25,330
thank you

00:44:17,270 --> 00:44:25,330

YouTube URL: https://www.youtube.com/watch?v=EZ-azc19iV0


