Title: Micah Wood: WordPress Quality Standards
Publication date: 2019-09-06
Playlist: WordCamp Asheville 2019
Description: 
	Clients want to work with quality WordPress developers. They want to know that they can get their project done on time, in budget, and that the solution is going to be effective.
Project management aside, writing quality code is the key to delivering on all three of these expectations. If you write poor code, it is going to be harder to read and understand. As a result, it will take longer (and cost the client more money) to add new features. A lack of consistent quality also results in more bugs and a decreased effectiveness of the solution you are creating.
WordPress has a set of coding standards that are designed to provide a consistent level of quality for those who are contributing code to WordPress. However, it just got a lot easier to apply those standards to your own projects. Whether you are creating a theme or writing a plugin, you can leverage an “automated code mentor” to help you provide consistent quality to your clients.
Come learn how you can leverage the WordPress Coding Standards and automation to help you become a quality developer that clients can trust.
Takeaways:
What coding standards are
Why you should care
A simple way to get started today

Presentation slides: https://docs.google.com/presentation/d/1ED0vXLIsPQp0XkJ6CaGaf2cD_9uQZV2entk1XGlo0Vk/edit#slide=id.pdf
WPTV link: https://wordpress.tv/2019/08/06/micah-wood-wordpress-quality-standards/
Captions: 
	00:00:05,270 --> 00:00:10,170
all right so I'm Micha I do have at the

00:00:08,460 --> 00:00:11,639
bottom here if you haven't already to

00:00:10,170 --> 00:00:13,710
notice the link to the slides if you

00:00:11,639 --> 00:00:18,029
want to take note of that real quick

00:00:13,710 --> 00:00:20,070
it's just link WP scholar comm /wc AVL

00:00:18,029 --> 00:00:24,269
which is the word camp Asheville hashtag

00:00:20,070 --> 00:00:27,210
- 2019 - standards so you can get at all

00:00:24,269 --> 00:00:28,859
the information here so who's familiar

00:00:27,210 --> 00:00:33,480
with WordPress coding standards in

00:00:28,859 --> 00:00:36,420
general okay so basically I'm just going

00:00:33,480 --> 00:00:38,399
to cover real quick what they are and

00:00:36,420 --> 00:00:39,899
essentially to kind of understand what

00:00:38,399 --> 00:00:42,750
coding standards are we're going to take

00:00:39,899 --> 00:00:45,510
a look first at coding conventions and

00:00:42,750 --> 00:00:47,039
really all a convention is is some

00:00:45,510 --> 00:00:49,559
general guidelines that we as developers

00:00:47,039 --> 00:00:51,390
have realized are probably good things

00:00:49,559 --> 00:00:54,180
to do they result in higher quality

00:00:51,390 --> 00:00:56,370
software and so everywhere you go

00:00:54,180 --> 00:00:59,219
everyone every individual is going to

00:00:56,370 --> 00:01:01,020
have some conventions that they use in

00:00:59,219 --> 00:01:03,329
their code or the way that they work

00:01:01,020 --> 00:01:05,760
with their code it's kind of a best

00:01:03,329 --> 00:01:07,170
practice right so so these are the

00:01:05,760 --> 00:01:09,720
conventions but not everybody

00:01:07,170 --> 00:01:10,950
necessarily agrees on these things right

00:01:09,720 --> 00:01:13,710
everybody has their own opinions and

00:01:10,950 --> 00:01:16,350
ways of doing things but coding

00:01:13,710 --> 00:01:17,939
standards are essentially conventions

00:01:16,350 --> 00:01:20,520
that have been formally adopted by a

00:01:17,939 --> 00:01:22,500
group or an organization right so when

00:01:20,520 --> 00:01:24,869
we say the WordPress coding standards

00:01:22,500 --> 00:01:28,049
all we're really referring to is the

00:01:24,869 --> 00:01:31,110
fact that WordPress the organization as

00:01:28,049 --> 00:01:33,840
a whole the community everyone involved

00:01:31,110 --> 00:01:36,420
in contributing to WordPress itself has

00:01:33,840 --> 00:01:38,009
decided on some standards and the ones

00:01:36,420 --> 00:01:39,119
that we've documented are the coding

00:01:38,009 --> 00:01:42,479
standards and things that we're going to

00:01:39,119 --> 00:01:43,829
follow so so that's all we're saying

00:01:42,479 --> 00:01:47,549
when we're talking about WordPress

00:01:43,829 --> 00:01:50,369
coding standards and of course as a

00:01:47,549 --> 00:01:52,979
plug-in author or a theme author you

00:01:50,369 --> 00:01:54,479
might not necessarily want to follow the

00:01:52,979 --> 00:01:57,000
WordPress coding standards to a tee

00:01:54,479 --> 00:01:59,610
because they're technically for

00:01:57,000 --> 00:02:01,439
WordPress core development so there

00:01:59,610 --> 00:02:03,560
could be some things where you may want

00:02:01,439 --> 00:02:06,210
to deviate a little bit here and there

00:02:03,560 --> 00:02:07,890
but as a general rule if you're working

00:02:06,210 --> 00:02:10,379
in the WordPress space the WordPress

00:02:07,890 --> 00:02:11,860
coding standards are a very good place

00:02:10,379 --> 00:02:14,680
to start they

00:02:11,860 --> 00:02:17,830
not meet your needs perfectly but the

00:02:14,680 --> 00:02:19,600
important thing to know is each team in

00:02:17,830 --> 00:02:21,670
each organization gets to decide that so

00:02:19,600 --> 00:02:24,340
if you work at an agency and you have

00:02:21,670 --> 00:02:27,520
your own version of standards that's

00:02:24,340 --> 00:02:29,170
perfectly fine it's not one size fits

00:02:27,520 --> 00:02:31,690
all right so you want to make sure that

00:02:29,170 --> 00:02:34,180
you adapt the coding standards that you

00:02:31,690 --> 00:02:38,680
use to how you are in your organization

00:02:34,180 --> 00:02:42,490
or team work and of course standards can

00:02:38,680 --> 00:02:45,130
change over time as a father of four

00:02:42,490 --> 00:02:47,050
children I really like this please

00:02:45,130 --> 00:02:52,030
excuse the mess we our standards have

00:02:47,050 --> 00:02:54,459
lowered with each child right so as your

00:02:52,030 --> 00:02:59,020
organization changes as your team

00:02:54,459 --> 00:03:00,700
changes maybe you get more different

00:02:59,020 --> 00:03:03,970
types of developers from different

00:03:00,700 --> 00:03:05,440
resources that can impact you know maybe

00:03:03,970 --> 00:03:07,600
how you formulate your standards and

00:03:05,440 --> 00:03:09,700
things so just important to know that

00:03:07,600 --> 00:03:11,320
it's not one-size-fits-all and you can

00:03:09,700 --> 00:03:14,200
change anything about them you can

00:03:11,320 --> 00:03:16,780
exclude rules things like that so why

00:03:14,200 --> 00:03:19,180
should we use them the ultimate reason

00:03:16,780 --> 00:03:22,620
is because it's going to make our code

00:03:19,180 --> 00:03:24,989
easier to maintain easier to debug and

00:03:22,620 --> 00:03:28,390
hopefully easier to add features as well

00:03:24,989 --> 00:03:30,010
and that's the general guideline as to

00:03:28,390 --> 00:03:33,340
why we would do this

00:03:30,010 --> 00:03:35,709
more specifically there's a lot of

00:03:33,340 --> 00:03:37,590
benefits right so one of those is that

00:03:35,709 --> 00:03:39,760
your code is going to be more consistent

00:03:37,590 --> 00:03:43,660
obviously if you have some sort of tool

00:03:39,760 --> 00:03:45,750
that's looking at your code and hey and

00:03:43,660 --> 00:03:51,040
there there are my four kids right there

00:03:45,750 --> 00:03:52,630
and my way so so the code is going to be

00:03:51,040 --> 00:03:54,040
more consistent so when you have

00:03:52,630 --> 00:03:57,489
something that's scanning your code for

00:03:54,040 --> 00:03:59,980
you and and saying you know there should

00:03:57,489 --> 00:04:02,739
be spacing here you should use tabs you

00:03:59,980 --> 00:04:04,209
should do this your codes going to

00:04:02,739 --> 00:04:06,820
naturally be more consistent in the way

00:04:04,209 --> 00:04:09,519
that it reads which is going to make it

00:04:06,820 --> 00:04:11,590
easier to read right so think of it as

00:04:09,519 --> 00:04:12,910
when you're reading a book if someone

00:04:11,590 --> 00:04:15,040
mushed all the paragraphs together and

00:04:12,910 --> 00:04:16,840
didn't indent them it's going to be a

00:04:15,040 --> 00:04:18,370
lot harder to read but we have basic

00:04:16,840 --> 00:04:20,530
guidelines for how people put books

00:04:18,370 --> 00:04:22,150
together we put spaces in between

00:04:20,530 --> 00:04:24,490
paragraphs and if you don't do that you

00:04:22,150 --> 00:04:25,160
indent the lines so you can tell where

00:04:24,490 --> 00:04:27,230
the next

00:04:25,160 --> 00:04:31,550
thought is occurring right so the same

00:04:27,230 --> 00:04:33,800
idea you if you can provide general

00:04:31,550 --> 00:04:35,900
structure to your code it'll be a lot

00:04:33,800 --> 00:04:37,970
easier to read one of the nice things

00:04:35,900 --> 00:04:40,730
about things like code editors is you

00:04:37,970 --> 00:04:43,520
can actually tell it to auto format your

00:04:40,730 --> 00:04:44,990
code based off of your standards which

00:04:43,520 --> 00:04:46,940
means that you can take something

00:04:44,990 --> 00:04:48,560
someone else wrote that is an absolute

00:04:46,940 --> 00:04:50,780
mess and if you are charged with

00:04:48,560 --> 00:04:52,250
maintaining it you can just reformat the

00:04:50,780 --> 00:04:55,490
whole thing in one go

00:04:52,250 --> 00:04:57,350
and then work on it from there so

00:04:55,490 --> 00:04:59,120
another thing is it's gonna make

00:04:57,350 --> 00:05:02,540
collaboration easier so obviously if

00:04:59,120 --> 00:05:04,040
you've you know are trying to get your

00:05:02,540 --> 00:05:06,350
code to a point where it's a little

00:05:04,040 --> 00:05:08,240
easier to understand it's going to make

00:05:06,350 --> 00:05:11,650
it easier for everyone to kind of pitch

00:05:08,240 --> 00:05:13,820
in especially if they know not just

00:05:11,650 --> 00:05:15,740
especially if they can know what the

00:05:13,820 --> 00:05:17,180
expectations are moving forward as to

00:05:15,740 --> 00:05:20,570
how the code should be written and how

00:05:17,180 --> 00:05:23,570
it should look and it's going to make

00:05:20,570 --> 00:05:26,920
your code more secure and the reason

00:05:23,570 --> 00:05:26,920

YouTube URL: https://www.youtube.com/watch?v=sRJ_ZI73PFg


