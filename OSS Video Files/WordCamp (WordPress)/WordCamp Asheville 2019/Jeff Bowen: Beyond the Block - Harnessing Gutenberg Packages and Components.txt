Title: Jeff Bowen: Beyond the Block - Harnessing Gutenberg Packages and Components
Publication date: 2019-09-06
Playlist: WordCamp Asheville 2019
Description: 
	Gutenberg is more than just the new block editing experience in WordPress. With it came an array of tools that will enrich your interfaces and make your life as a front-end developer simpler. Learn how to make use of what’s newly “in the box” to think outside the block.
Takeaways:
UI components & internationalization
state management & networking
front-end actions & filters

WPTV link: https://wordpress.tv/2019/08/07/jeff-bowen-beyond-the-block-harnessing-gutenberg-packages-and-components/
Captions: 
	00:00:05,569 --> 00:00:09,360
morning everybody my name is Jeff can

00:00:07,919 --> 00:00:11,160
everybody hear me okay in the back

00:00:09,360 --> 00:00:13,610
should I talk like that okay

00:00:11,160 --> 00:00:15,059
this one this one closer all right

00:00:13,610 --> 00:00:18,300
gotcha

00:00:15,059 --> 00:00:20,490
okay like I said my name is Jeff we're

00:00:18,300 --> 00:00:22,320
gonna be talking about Guttenberg blocks

00:00:20,490 --> 00:00:24,480
kind of what's underneath behind the

00:00:22,320 --> 00:00:26,310
scenes stuff that you don't usually see

00:00:24,480 --> 00:00:28,980
when you're dragging and dropping blocks

00:00:26,310 --> 00:00:31,080
and playing with a Guttenberg I work at

00:00:28,980 --> 00:00:34,290
automatics so I've been there for about

00:00:31,080 --> 00:00:36,600
eight years and I work on Calypso which

00:00:34,290 --> 00:00:38,340
is the front end of wordpress.com so I'm

00:00:36,600 --> 00:00:41,100
working in reacts most of the time with

00:00:38,340 --> 00:00:42,450
connections to the back end and so you

00:00:41,100 --> 00:00:44,160
know it's I've been learning Gutenberg

00:00:42,450 --> 00:00:47,100
just like the rest of you so thought I'd

00:00:44,160 --> 00:00:48,780
share some things that I learned and I

00:00:47,100 --> 00:00:50,460
feel free to stop me if you have

00:00:48,780 --> 00:00:51,809
questions especially when we get to the

00:00:50,460 --> 00:00:55,800
code stuff if there's anything you don't

00:00:51,809 --> 00:00:57,750
recognize just let me know so by now

00:00:55,800 --> 00:00:59,640
you've all seen the block editor you

00:00:57,750 --> 00:01:01,469
know you come into the the WordPress

00:00:59,640 --> 00:01:02,940
editor and you can put in a Twitter

00:01:01,469 --> 00:01:05,220
block you can put in any sort of block

00:01:02,940 --> 00:01:07,110
and you know it's what you see is what

00:01:05,220 --> 00:01:09,150
you get it drag it around and it's a

00:01:07,110 --> 00:01:11,490
nice little package it's a block it's

00:01:09,150 --> 00:01:13,229
some it's a piece of content and you

00:01:11,490 --> 00:01:15,090
know we're all pretty familiar with that

00:01:13,229 --> 00:01:17,070
by now it's it's only been there for I

00:01:15,090 --> 00:01:18,360
don't know a year how long's Gutenberg

00:01:17,070 --> 00:01:19,619
right now not very long but we're all

00:01:18,360 --> 00:01:21,180
pretty familiar with it by now and I'm

00:01:19,619 --> 00:01:22,920
sure we've all seen this thing pop up a

00:01:21,180 --> 00:01:26,520
bunch welcome to the wonderful world of

00:01:22,920 --> 00:01:29,430
blocks and there's the promise of

00:01:26,520 --> 00:01:33,210
Gutenberg bringing full sight

00:01:29,430 --> 00:01:34,950
customization the next round of the

00:01:33,210 --> 00:01:37,049
focus for WordPress is to bring all of

00:01:34,950 --> 00:01:40,229
these blocks together for basically

00:01:37,049 --> 00:01:41,369
revamping the customizer um but I'm

00:01:40,229 --> 00:01:43,740
going to talk a little bit about what's

00:01:41,369 --> 00:01:46,380
behind the scenes today so if you look

00:01:43,740 --> 00:01:47,700
at the Gutenberg repository there's a

00:01:46,380 --> 00:01:49,460
quote that's been there for a while that

00:01:47,700 --> 00:01:51,780
says Gutenberg is more than an editor

00:01:49,460 --> 00:01:54,270
while it's currently focused on building

00:01:51,780 --> 00:01:56,310
that block editor it doesn't end there

00:01:54,270 --> 00:01:57,600
so there's groundwork for a new model

00:01:56,310 --> 00:01:59,490
for WordPress core that will ultimately

00:01:57,600 --> 00:02:00,960
impact the entire publishing experience

00:01:59,490 --> 00:02:03,149
of the platform I don't usually like to

00:02:00,960 --> 00:02:05,670
read quotes in a talk but I feel like

00:02:03,149 --> 00:02:07,049
this is pretty important so Gutenberg

00:02:05,670 --> 00:02:09,209
it's it's more than just this block

00:02:07,049 --> 00:02:10,470
editor it's a modern web framework for

00:02:09,209 --> 00:02:13,530
WordPress and it's something that you

00:02:10,470 --> 00:02:14,099
can use in your sites and things that

00:02:13,530 --> 00:02:18,090
are beyond

00:02:14,099 --> 00:02:19,799
sites I invite you to install the

00:02:18,090 --> 00:02:21,749
Guttenberg plug-in if you haven't I know

00:02:19,799 --> 00:02:23,700
Gutenberg is installed with WordPress

00:02:21,749 --> 00:02:25,230
core as is but install the plug-in

00:02:23,700 --> 00:02:26,730
you'll get the latest and greatest and

00:02:25,230 --> 00:02:28,829
there's this cool demo if you haven't

00:02:26,730 --> 00:02:31,109
seen it so if you install the plug-in

00:02:28,829 --> 00:02:34,950
you've got in the sidebar menu gutenberg

00:02:31,109 --> 00:02:36,329
demo and you can just play with some of

00:02:34,950 --> 00:02:37,310
the stuff that you've seen kind of at

00:02:36,329 --> 00:02:39,810
the keynotes

00:02:37,310 --> 00:02:42,209
you can move stuff around see what the

00:02:39,810 --> 00:02:45,239
images do it gives you kind of a good

00:02:42,209 --> 00:02:46,889
overview of what's there and if you

00:02:45,239 --> 00:02:48,780
think about it there's a lot going on

00:02:46,889 --> 00:02:50,939
with this screen right here there's a

00:02:48,780 --> 00:02:54,599
lot that's behind the scenes for making

00:02:50,939 --> 00:02:57,419
this possible and it's kind of cool that

00:02:54,599 --> 00:03:01,829
instead of keeping it all in Gutenberg

00:02:57,419 --> 00:03:03,349
and not opening it up to all of you and

00:03:01,829 --> 00:03:05,969
all and everybody else in the world

00:03:03,349 --> 00:03:10,109
these things are being published as

00:03:05,969 --> 00:03:11,819
packages and you can use them as you see

00:03:10,109 --> 00:03:16,319
fit so let's talk a little bit about

00:03:11,819 --> 00:03:18,359
that what's this talk about what are

00:03:16,319 --> 00:03:20,489
Gutenberg packages what are some

00:03:18,359 --> 00:03:22,799
packages what do they do how can you use

00:03:20,489 --> 00:03:24,000
them in your own project what are some

00:03:22,799 --> 00:03:25,530
of the other tools that came with

00:03:24,000 --> 00:03:27,540
Gutenberg that are now on WordPress core

00:03:25,530 --> 00:03:29,099
and then how can you contribute to pack

00:03:27,540 --> 00:03:30,090
you package development how can you take

00:03:29,099 --> 00:03:31,500
something that you've learned or

00:03:30,090 --> 00:03:33,000
something that you see that maybe

00:03:31,500 --> 00:03:35,069
doesn't suit your needs or you think

00:03:33,000 --> 00:03:36,530
would be other people would find useful

00:03:35,069 --> 00:03:39,030
how can you give that back

00:03:36,530 --> 00:03:40,949
what's it not about it's not about how

00:03:39,030 --> 00:03:42,989
to create a Guttenberg block and it's

00:03:40,949 --> 00:03:45,329
not about how to build a site composed

00:03:42,989 --> 00:03:46,859
of blocks it's not about the voyages of

00:03:45,329 --> 00:03:49,430
the Starship Enterprise if you want to

00:03:46,859 --> 00:03:53,250
learn about how to create a block Julian

00:03:49,430 --> 00:03:54,540
had a pretty good workshop yesterday so

00:03:53,250 --> 00:04:01,439
I invite you to watch that video if you

00:03:54,540 --> 00:04:03,269
didn't see it it's not taped workshops

00:04:01,439 --> 00:04:04,530
aren't taped well see you the next time

00:04:03,269 --> 00:04:05,879
there's a workshop on how to build a

00:04:04,530 --> 00:04:08,609
block or go out and check out the

00:04:05,879 --> 00:04:11,009
handbook for building a block but this

00:04:08,609 --> 00:04:13,469
is kind of about how to to do things

00:04:11,009 --> 00:04:15,659
outside the box in your own project if

00:04:13,469 --> 00:04:17,159
you have an existing site or something

00:04:15,659 --> 00:04:20,099
that you want to use some of this end

00:04:17,159 --> 00:04:24,060
that's newly in WordPress so what's in

00:04:20,099 --> 00:04:26,219
the box now because of Gutenberg there

00:04:24,060 --> 00:04:27,930
are third-party libraries like react and

00:04:26,219 --> 00:04:29,970
lodash that weren't here I give a talk

00:04:27,930 --> 00:04:32,130
at work in Baskerville two years ago and

00:04:29,970 --> 00:04:34,530
I talked about how to you know sneak

00:04:32,130 --> 00:04:35,669
react into your WordPress project and we

00:04:34,530 --> 00:04:37,530
don't have to do that anymore it's in

00:04:35,669 --> 00:04:41,400
WordPress you can just use it

00:04:37,530 --> 00:04:42,780
lodash similarly and there is something

00:04:41,400 --> 00:04:45,000
called underscore that is in WordPress

00:04:42,780 --> 00:04:48,030
already but now you can use lo - it's

00:04:45,000 --> 00:04:49,530
the newer version and there's packages

00:04:48,030 --> 00:04:51,389
which is what we're really gonna talk

00:04:49,530 --> 00:04:54,210
about these wordpress packages or

00:04:51,389 --> 00:04:56,910
guttenberg packages how are they built

00:04:54,210 --> 00:04:59,460
how can you use them so what are

00:04:56,910 --> 00:05:01,470
Gutenberg packages it's modular code

00:04:59,460 --> 00:05:03,990
it's reusable it's it's a package just

00:05:01,470 --> 00:05:06,120
like any other package system you can

00:05:03,990 --> 00:05:08,190
take it and use it the source is in the

00:05:06,120 --> 00:05:10,770
Gutenberg codebase under the packages

00:05:08,190 --> 00:05:13,800
directory you might have heard the term

00:05:10,770 --> 00:05:15,690
mono repo and they've kind of taken this

00:05:13,800 --> 00:05:18,990
approach with Guttenberg to kind of have

00:05:15,690 --> 00:05:21,389
everything that they might use in this

00:05:18,990 --> 00:05:23,580
vein and this sort of framework and have

00:05:21,389 --> 00:05:25,440
it in the gutenberg repository and then

00:05:23,580 --> 00:05:27,090
package those up and then they can use

00:05:25,440 --> 00:05:29,580
them in other other places like

00:05:27,090 --> 00:05:32,280
WordPress core or like your own your own

00:05:29,580 --> 00:05:34,830
software they're managed by a tool

00:05:32,280 --> 00:05:36,240
called lerna and learning can get pretty

00:05:34,830 --> 00:05:38,190
complex but it's just a way of taking

00:05:36,240 --> 00:05:39,900
these things and spitting them out in a

00:05:38,190 --> 00:05:42,409
format that can go into NPM or other

00:05:39,900 --> 00:05:45,169
sort of package management systems and

00:05:42,409 --> 00:05:47,250
when there's a Guttenberg release

00:05:45,169 --> 00:05:49,830
everything gets built and then they get

00:05:47,250 --> 00:05:51,210
pushed to NPM if you're familiar with

00:05:49,830 --> 00:05:53,400
JavaScript development at all I'm sure

00:05:51,210 --> 00:05:56,010
you've used NPM to install a package and

00:05:53,400 --> 00:05:58,919
that's where these live then WordPress

00:05:56,010 --> 00:06:02,820
then includes these built copies of

00:05:58,919 --> 00:06:07,949
these packages inside the WP includes

00:06:02,820 --> 00:06:11,330
j/s disk directory and you can use them

00:06:07,949 --> 00:06:13,949
so what sort of packages are there

00:06:11,330 --> 00:06:15,300
there's all sorts of packages there's

00:06:13,949 --> 00:06:17,130
data fetching state management

00:06:15,300 --> 00:06:20,780
presentation view layer ports the

00:06:17,130 --> 00:06:23,099
backend PHP stuff that you'd expect in

00:06:20,780 --> 00:06:26,340
2019 to be in the front end there there

00:06:23,099 --> 00:06:29,510
- there's a lot of dev tools and etc etc

00:06:26,340 --> 00:06:31,039
if you look at NPM under the WordPress

00:06:29,510 --> 00:06:33,509
[Music]

00:06:31,039 --> 00:06:36,529
organization there's oodles and oodles

00:06:33,509 --> 00:06:39,810
of packages there for the using and

00:06:36,529 --> 00:06:41,490
indeed if you look at the source of

00:06:39,810 --> 00:06:44,039
WordPress this is

00:06:41,490 --> 00:06:46,770
package.json which talk a little bit

00:06:44,039 --> 00:06:50,009
about in a little bit you can see that

00:06:46,770 --> 00:06:51,599
all of those packages at WordPress blah

00:06:50,009 --> 00:06:54,599
blah blah they're all being imported

00:06:51,599 --> 00:06:56,370
into WordPress itself so the source

00:06:54,599 --> 00:06:58,860
lives in Guttenberg and WordPress

00:06:56,370 --> 00:07:03,240
imports them and you can do the same

00:06:58,860 --> 00:07:05,090
thing here's the block editor handbook

00:07:03,240 --> 00:07:09,349
for one of these packages

00:07:05,090 --> 00:07:11,880
it's called element and it's interesting

00:07:09,349 --> 00:07:13,919
to note that elements kind of an

00:07:11,880 --> 00:07:17,159
abstraction layer on top of a react

00:07:13,919 --> 00:07:19,409
element and you can read all about it

00:07:17,159 --> 00:07:21,509
there I just kind of wanted to show the

00:07:19,409 --> 00:07:26,280
handbook and what a package looks like

00:07:21,509 --> 00:07:27,900
there there are reasons if you read the

00:07:26,280 --> 00:07:31,289
page why they chose to create an

00:07:27,900 --> 00:07:32,610
abstraction layer on top of react but

00:07:31,289 --> 00:07:36,479
for the purposes of this talk you don't

00:07:32,610 --> 00:07:39,300
really need to know that the block

00:07:36,479 --> 00:07:40,979
library itself is an NPM you can install

00:07:39,300 --> 00:07:43,409
the block library and then registered

00:07:40,979 --> 00:07:46,620
the core blocks and basically an on

00:07:43,409 --> 00:07:49,669
WordPress context and there are software

00:07:46,620 --> 00:07:52,050
out there have used the Gutenberg editor

00:07:49,669 --> 00:07:58,259
that are not WordPress so I think that's

00:07:52,050 --> 00:08:02,070
pretty cool how can you get started

00:07:58,259 --> 00:08:04,050
using WordPress packages first I suggest

00:08:02,070 --> 00:08:05,849
that you install wordpress locally and

00:08:04,050 --> 00:08:08,940
it's you know it's kind of a matter of

00:08:05,849 --> 00:08:13,169
choice how you like to do that a lot of

00:08:08,940 --> 00:08:15,750
people like local by flywheel I actually

00:08:13,169 --> 00:08:19,099
use the jetpack docker an environment

00:08:15,750 --> 00:08:23,009
it's pretty handy for for my day-to-day

00:08:19,099 --> 00:08:25,500
bvv is short for varying vagrant

00:08:23,009 --> 00:08:30,509
vagrants I think and a lot of people use

00:08:25,500 --> 00:08:32,839
that guttenberg itself has a has a

00:08:30,509 --> 00:08:34,500
docker environment that you can spin up

00:08:32,839 --> 00:08:36,060
you don't have to have anything

00:08:34,500 --> 00:08:37,829
installed on your system except for

00:08:36,060 --> 00:08:39,390
docker and if you follow the

00:08:37,829 --> 00:08:41,370
instructions here it can help you get a

00:08:39,390 --> 00:08:44,159
local environment but like I said it's

00:08:41,370 --> 00:08:45,390
really kind of what you like to do what

00:08:44,159 --> 00:08:47,220
the kind of projects that you like to

00:08:45,390 --> 00:08:49,770
work on as to what your local

00:08:47,220 --> 00:08:51,329
environment might be it might be you

00:08:49,770 --> 00:08:54,050
actually install WordPress itself and

00:08:51,329 --> 00:08:55,790
that's you can do that if you want to

00:08:54,050 --> 00:08:58,610
something else that you're going to need

00:08:55,790 --> 00:09:03,020
is node is anybody not familiar with

00:08:58,610 --> 00:09:05,750
node it's it's a way to run JavaScript

00:09:03,020 --> 00:09:07,220
locally and run scripts and do all sorts

00:09:05,750 --> 00:09:09,529
of stuff it's kind of a Swiss Army knife

00:09:07,220 --> 00:09:10,880
and it's kind of one of the first things

00:09:09,529 --> 00:09:13,790
I do want to set up a new computer is

00:09:10,880 --> 00:09:16,010
get my node environment I use a piece of

00:09:13,790 --> 00:09:17,899
software called nvm to manage that

00:09:16,010 --> 00:09:19,880
because different things that I

00:09:17,899 --> 00:09:22,670
contribute to require different versions

00:09:19,880 --> 00:09:25,070
of node and again it that's something

00:09:22,670 --> 00:09:28,580
that people have different different

00:09:25,070 --> 00:09:30,649
opinions and different and different

00:09:28,580 --> 00:09:35,660
pieces of software to manage their node

00:09:30,649 --> 00:09:37,760
versions and then you can just use NPM

00:09:35,660 --> 00:09:39,709
NPM is a piece of software that comes

00:09:37,760 --> 00:09:42,200
with node typically that lets you

00:09:39,709 --> 00:09:43,640
install packages NPM used to be sort of

00:09:42,200 --> 00:09:45,950
for node package manager and you can

00:09:43,640 --> 00:09:49,670
think about it that way so like I said

00:09:45,950 --> 00:09:51,770
these scripts or these packages are in

00:09:49,670 --> 00:09:56,270
NPM you can just install them NPM

00:09:51,770 --> 00:09:58,700
install at WordPress scripts it's kind

00:09:56,270 --> 00:10:01,550
of the basis of the demos I'm going to

00:09:58,700 --> 00:10:08,630
be showing in a little bit that installs

00:10:01,550 --> 00:10:10,070
a tool to help you run these tasks to

00:10:08,630 --> 00:10:12,020
build your files and that sort of thing

00:10:10,070 --> 00:10:13,640
and it's pretty useful

00:10:12,020 --> 00:10:17,420
yes Len plug-in is another one that I

00:10:13,640 --> 00:10:20,870
wanted to call out because it helps you

00:10:17,420 --> 00:10:24,610
to to do things WordPress style way a

00:10:20,870 --> 00:10:28,399
lot easier if you have an es lint

00:10:24,610 --> 00:10:30,980
plug-in in your editor it can show you

00:10:28,399 --> 00:10:32,779
where things are not to the WordPress

00:10:30,980 --> 00:10:34,670
coding standards and you can even use

00:10:32,779 --> 00:10:36,350
tools to automatically make them to

00:10:34,670 --> 00:10:37,610
WordPress coding standards it just saves

00:10:36,350 --> 00:10:41,029
a lot of time I'll show that off in a

00:10:37,610 --> 00:10:43,250
little bit and NPM install WordPress dot

00:10:41,029 --> 00:10:46,910
dot dot all of those packages that's

00:10:43,250 --> 00:10:52,630
pretty much how you install them there

00:10:46,910 --> 00:10:52,630
any questions about anything so far cool

00:10:53,779 --> 00:10:58,070
this goes to the scripts that I was

00:10:56,060 --> 00:11:01,579
talking about at WordPress scripts if

00:10:58,070 --> 00:11:05,540
you go to might not be able to see that

00:11:01,579 --> 00:11:07,769
list if we can zoom in developer

00:11:05,540 --> 00:11:09,600
wordpress.org block editor packages

00:11:07,769 --> 00:11:12,689
it's scripts setup or you can just

00:11:09,600 --> 00:11:15,600
google for WordPress block editor

00:11:12,689 --> 00:11:21,179
handbook scripts or at WordPress slash

00:11:15,600 --> 00:11:22,980
scripts this shows you how to use some

00:11:21,179 --> 00:11:24,869
helpers to help you do things like build

00:11:22,980 --> 00:11:27,980
and and do some lenten the main one that

00:11:24,869 --> 00:11:30,899
we want to talk about is build and start

00:11:27,980 --> 00:11:33,749
there so I would suggest you at least

00:11:30,899 --> 00:11:36,269
have those two because after you have

00:11:33,749 --> 00:11:38,819
that in place in your package JSON file

00:11:36,269 --> 00:11:41,339
you can just run npm run start and it's

00:11:38,819 --> 00:11:47,100
pretty handy i'm it will keep rebuilding

00:11:41,339 --> 00:11:49,170
your files cool okay so i'm going to

00:11:47,100 --> 00:11:52,589
show off some code on how you can

00:11:49,170 --> 00:11:54,420
actually do this sort of thing please

00:11:52,589 --> 00:11:55,619
feel free to stop me if anything doesn't

00:11:54,420 --> 00:11:57,720
look familiar if you don't understand

00:11:55,619 --> 00:12:00,480
the syntax that sort of thing if you

00:11:57,720 --> 00:12:07,309
want to follow along you can go to the

00:12:00,480 --> 00:12:07,309
github repo jb LZ /wc AVL 2019

00:12:08,430 --> 00:12:11,580
[Music]

00:12:16,130 --> 00:12:29,240
and here's the repo that I just told the

00:12:21,319 --> 00:12:30,829
link to first of all we're gonna look at

00:12:29,240 --> 00:12:33,019
is just your basic entry point for your

00:12:30,829 --> 00:12:34,220
plugin and this can look like any plugin

00:12:33,019 --> 00:12:35,889
and WordPress this just had to be

00:12:34,220 --> 00:12:38,569
something in place for me to do a demo

00:12:35,889 --> 00:12:39,949
and what i'm doing here is for these

00:12:38,569 --> 00:12:45,350
demos i'm just looking for a particular

00:12:39,949 --> 00:12:56,420
post ID and then for the repo it was

00:12:45,350 --> 00:12:58,930
github.com / jb LZ w / WC AVL 2019 yes

00:12:56,420 --> 00:12:58,930
thank you

00:12:59,170 --> 00:13:10,940
cool

00:13:00,440 --> 00:13:12,410
and there's the repo cool so what I'm

00:13:10,940 --> 00:13:14,029
gonna do for the first demo is I'm gonna

00:13:12,410 --> 00:13:15,920
look for this particular post ID and run

00:13:14,029 --> 00:13:18,259
this demo one and if you look at demo

00:13:15,920 --> 00:13:20,720
one I'm in queueing some styles and

00:13:18,259 --> 00:13:23,029
scripts and running this function here

00:13:20,720 --> 00:13:27,529
for registering a bunch of these these

00:13:23,029 --> 00:13:30,170
packages scripts that exist in the WP

00:13:27,529 --> 00:13:32,810
includes j/s dis directory like I

00:13:30,170 --> 00:13:34,009
mentioned before and this is on the repo

00:13:32,810 --> 00:13:36,769
so don't feel like you need to copy any

00:13:34,009 --> 00:13:39,649
of it any of it down and then I'm just

00:13:36,769 --> 00:13:42,079
in queueing a JavaScript file just like

00:13:39,649 --> 00:13:44,870
you would probably be used to is anybody

00:13:42,079 --> 00:13:50,209
not familiar with WP NQ script and WP

00:13:44,870 --> 00:13:52,670
and Q style those are if you are it's

00:13:50,209 --> 00:13:55,399
just a way to take a script or a style

00:13:52,670 --> 00:13:56,600
which which is just a file and then send

00:13:55,399 --> 00:13:58,939
them to the browser at an appropriate

00:13:56,600 --> 00:14:00,529
time rather than just taking your

00:13:58,939 --> 00:14:03,290
JavaScript and writing it directly into

00:14:00,529 --> 00:14:07,750
PHP so this is a way to get a JavaScript

00:14:03,290 --> 00:14:10,279
file or a CSS file into the browser and

00:14:07,750 --> 00:14:13,850
it's noteworthy to to mention that this

00:14:10,279 --> 00:14:17,300
is not a built javascript file it's just

00:14:13,850 --> 00:14:19,639
plain I'll show it in a minute and it

00:14:17,300 --> 00:14:23,540
has some dependencies and if you look at

00:14:19,639 --> 00:14:26,870
the dependencies for it we're including

00:14:23,540 --> 00:14:28,490
something called WP polyfill and that is

00:14:26,870 --> 00:14:29,570
one of the packages that's available to

00:14:28,490 --> 00:14:31,400
you that

00:14:29,570 --> 00:14:34,580
that lets you have broader browser

00:14:31,400 --> 00:14:36,350
support it's not kind of a silver bullet

00:14:34,580 --> 00:14:37,760
but if someone is coming in with an old

00:14:36,350 --> 00:14:39,500
version of Internet Explorer or

00:14:37,760 --> 00:14:41,180
something like that it'll probably still

00:14:39,500 --> 00:14:43,940
work if you have this or another

00:14:41,180 --> 00:14:47,030
polyfill to bring it up to modern

00:14:43,940 --> 00:14:48,770
JavaScript standards there's a package

00:14:47,030 --> 00:14:51,890
called knucks which stands for a new

00:14:48,770 --> 00:14:54,050
user experience it's a way to focus

00:14:51,890 --> 00:14:54,910
attention and show guided tours and that

00:14:54,050 --> 00:14:59,000
sort of thing

00:14:54,910 --> 00:15:02,450
there's auto pee which is a port from

00:14:59,000 --> 00:15:05,300
the PHP side of WordPress that takes

00:15:02,450 --> 00:15:08,420
whenever it sees a block of text and has

00:15:05,300 --> 00:15:11,870
a new line in it it will add paragraph

00:15:08,420 --> 00:15:14,920
tags around it date there's a date

00:15:11,870 --> 00:15:17,060
script which is another port from PHP

00:15:14,920 --> 00:15:20,630
element is the element I showed you

00:15:17,060 --> 00:15:23,450
before which is the abstraction on top

00:15:20,630 --> 00:15:25,330
of react I 18n is short for

00:15:23,450 --> 00:15:27,800
internationalization

00:15:25,330 --> 00:15:29,720
it's a way to localize your UI for

00:15:27,800 --> 00:15:32,810
various audiences word count is

00:15:29,720 --> 00:15:34,520
self-explanatory and escape HTML is a

00:15:32,810 --> 00:15:36,560
way to prevent troublesome characters

00:15:34,520 --> 00:15:38,120
from getting into your browser and

00:15:36,560 --> 00:15:41,060
causing trouble with cross-site

00:15:38,120 --> 00:15:45,200
scripting and that sort of thing so now

00:15:41,060 --> 00:15:49,430
we can take a look at the javascript

00:15:45,200 --> 00:15:51,910
file that is loading and before I show

00:15:49,430 --> 00:15:54,910
off the demo let's take a look at that

00:15:51,910 --> 00:15:54,910
somewhere

00:16:01,810 --> 00:16:12,699
let's look at it in an editor that's a

00:16:04,480 --> 00:16:14,529
little nicer alright so this is just

00:16:12,699 --> 00:16:18,309
straight JavaScript it's not compiled

00:16:14,529 --> 00:16:22,139
and it's wrapped in a function that

00:16:18,309 --> 00:16:24,279
wraps around this global WP object and

00:16:22,139 --> 00:16:27,279
you're probably familiar if you've done

00:16:24,279 --> 00:16:30,879
any front-end JavaScript with WordPress

00:16:27,279 --> 00:16:32,800
this global WP object houses most things

00:16:30,879 --> 00:16:34,870
that are WordPress specific that you can

00:16:32,800 --> 00:16:37,360
use and then up at the top I'm

00:16:34,870 --> 00:16:40,059
destructuring out these scripts so we

00:16:37,360 --> 00:16:41,680
can just use them locally and those kind

00:16:40,059 --> 00:16:43,300
of really one-to-one with the packages

00:16:41,680 --> 00:16:45,279
that I showed you before Auto key date

00:16:43,300 --> 00:16:49,149
element escape HTML and I'll show them

00:16:45,279 --> 00:16:50,920
show you how we're gonna use them got a

00:16:49,149 --> 00:16:56,050
block of text that's maybe from an API

00:16:50,920 --> 00:17:00,220
and I'm looking for an element at a

00:16:56,050 --> 00:17:03,279
particular place and doing some stuff

00:17:00,220 --> 00:17:04,470
I'm doing a word count on it adding an

00:17:03,279 --> 00:17:07,299
event listener

00:17:04,470 --> 00:17:10,569
rapping in internationalization

00:17:07,299 --> 00:17:16,510
functions and the rest I'll come back to

00:17:10,569 --> 00:17:19,270
you after I do the demo first off the

00:17:16,510 --> 00:17:21,010
plugin is not activated so you can see

00:17:19,270 --> 00:17:24,370
it's just an empty page if we go and

00:17:21,010 --> 00:17:26,230
look at the editor for it

00:17:24,370 --> 00:17:29,140
there's nothing special going on it's

00:17:26,230 --> 00:17:30,549
just a regular page type post there's

00:17:29,140 --> 00:17:36,640
nothing in the content there's just a

00:17:30,549 --> 00:17:41,340
title and as you see there's nothing

00:17:36,640 --> 00:17:41,340
there but if I activate the plugin that

00:17:42,149 --> 00:17:46,030
javascript file is going to kick in its

00:17:44,260 --> 00:17:47,850
gonna look for that element there it's

00:17:46,030 --> 00:17:50,649
going to take that block of texts

00:17:47,850 --> 00:17:53,309
wrapping it in WP auto P to get the

00:17:50,649 --> 00:17:53,309
paragraph tags

00:17:56,500 --> 00:18:09,100
you can see it adds paragraphs around

00:17:58,930 --> 00:18:14,140
where there were spaces here and that is

00:18:09,100 --> 00:18:15,430
the the Knux tour I can't remember what

00:18:14,140 --> 00:18:18,300
you call this particular widget but it

00:18:15,430 --> 00:18:20,560
attaches this sort of element to another

00:18:18,300 --> 00:18:23,560
element on the page and I added a little

00:18:20,560 --> 00:18:26,560
a little delay so you can watch it's not

00:18:23,560 --> 00:18:29,200
there until you scroll down there it is

00:18:26,560 --> 00:18:35,950
and it's styled pretty horribly but at

00:18:29,200 --> 00:18:38,680
least it's styled right new user

00:18:35,950 --> 00:18:40,240
experience so it welcome to the

00:18:38,680 --> 00:18:41,860
wonderful world of blocks pop-up thing

00:18:40,240 --> 00:18:44,500
that I showed you at the beginning is I

00:18:41,860 --> 00:18:46,990
think it's part of that and the button

00:18:44,500 --> 00:18:51,270
handler works and it's doing a date

00:18:46,990 --> 00:18:51,270
format and if we look back at the code

00:19:01,320 --> 00:19:06,390
yeah there there are properties for that

00:19:03,670 --> 00:19:09,510
it's not implemented here but you can

00:19:06,390 --> 00:19:12,610
you can keep track of the state of that

00:19:09,510 --> 00:19:14,440
yeah that's really annoying but it will

00:19:12,610 --> 00:19:23,770
come back because I haven't implemented

00:19:14,440 --> 00:19:26,140
that part yeah and so a couple things to

00:19:23,770 --> 00:19:27,910
kind of point out is this is how you

00:19:26,140 --> 00:19:30,820
call the auto PE it's a little weird

00:19:27,910 --> 00:19:34,240
because you import it as auto PE and

00:19:30,820 --> 00:19:36,550
then you have to call Auto P auto PE and

00:19:34,240 --> 00:19:39,010
then same kind of the same thing with

00:19:36,550 --> 00:19:40,360
escape HTML escape HTML that's kind of a

00:19:39,010 --> 00:19:41,560
gotcha there that's lower case and

00:19:40,360 --> 00:19:43,390
that's upper case and they all have

00:19:41,560 --> 00:19:46,420
different functions and then that you

00:19:43,390 --> 00:19:48,460
can use but the escape HTML is making

00:19:46,420 --> 00:19:50,920
sure that sneaky scripts don't get into

00:19:48,460 --> 00:19:55,410
your stuff from an API or something like

00:19:50,920 --> 00:19:57,910
that this is your internationalization

00:19:55,410 --> 00:20:02,830
localization function to wrap a string

00:19:57,910 --> 00:20:04,390
for translation so if we had if we were

00:20:02,830 --> 00:20:07,030
trying to target multiple markets or

00:20:04,390 --> 00:20:09,430
something like that multiple locales we

00:20:07,030 --> 00:20:11,980
could have translations for engage the

00:20:09,430 --> 00:20:13,510
we're local to wherever we are on the

00:20:11,980 --> 00:20:16,480
backend and we could load those and it

00:20:13,510 --> 00:20:18,040
would show and all of that stuff let's

00:20:16,480 --> 00:20:21,480
see is it anything else nope I think

00:20:18,040 --> 00:20:25,390
that's pretty much it for demo one oh

00:20:21,480 --> 00:20:26,970
the word count so you can see it's

00:20:25,390 --> 00:20:30,040
counting it and then just saying

00:20:26,970 --> 00:20:32,020
appending to this string it has that

00:20:30,040 --> 00:20:36,010
number of words and if we look back at

00:20:32,020 --> 00:20:38,850
the page move this out of the way there

00:20:36,010 --> 00:20:41,670
are 215 words in that ridiculous

00:20:38,850 --> 00:20:47,200
start Rick Gibson and I found on the web

00:20:41,670 --> 00:20:49,000
hmm cool so that is kind of an example

00:20:47,200 --> 00:20:51,190
of something that I would probably only

00:20:49,000 --> 00:20:53,410
do kind of as a last resort if you have

00:20:51,190 --> 00:20:55,180
an existing script that you don't really

00:20:53,410 --> 00:20:56,530
want to convert to like a built

00:20:55,180 --> 00:20:57,760
JavaScript file if you don't have a

00:20:56,530 --> 00:21:01,240
built environment if you have other

00:20:57,760 --> 00:21:03,160
constraints you're loading from a CDN

00:21:01,240 --> 00:21:05,740
you can't affect you can then go in and

00:21:03,160 --> 00:21:10,480
and do this sort of thing without having

00:21:05,740 --> 00:21:11,980
this big build environment but the kind

00:21:10,480 --> 00:21:20,740
of the beauty of that at WordPress

00:21:11,980 --> 00:21:24,400
scripts thing that I showed you before

00:21:20,740 --> 00:21:25,690
with the build and the start is it gets

00:21:24,400 --> 00:21:27,100
you a lot of stuff for free that

00:21:25,690 --> 00:21:29,770
otherwise would have taken a lot of set

00:21:27,100 --> 00:21:34,320
up a web pack environment web pack is a

00:21:29,770 --> 00:21:34,320
way to build your JavaScript it gets

00:21:35,640 --> 00:21:41,830
everything this WP scripts binary can do

00:21:38,680 --> 00:21:49,320
for you so it's kind of cool I'll show

00:21:41,830 --> 00:21:49,320
you that and in your terminal

00:21:52,610 --> 00:22:05,429
you can just run yes thank you that

00:22:01,890 --> 00:22:08,400
better you can just run npm run start

00:22:05,429 --> 00:22:11,460
and you see it's going out it's looking

00:22:08,400 --> 00:22:13,169
for looking for some configurations i'm

00:22:11,460 --> 00:22:15,120
using the default web pad configuration

00:22:13,169 --> 00:22:18,659
i've not customized anything it's just

00:22:15,120 --> 00:22:20,330
what's built into WP scripts and it's

00:22:18,659 --> 00:22:22,679
looking for files in a particular place

00:22:20,330 --> 00:22:24,210
so as long as you put the files in a

00:22:22,679 --> 00:22:26,250
particular place for your javascript

00:22:24,210 --> 00:22:29,640
entry it kind of does everything else

00:22:26,250 --> 00:22:31,080
for you and you can go in and let's see

00:22:29,640 --> 00:22:38,280
i'll page down a little bit so you can

00:22:31,080 --> 00:22:43,620
see I'll go in and edit demo to which is

00:22:38,280 --> 00:22:46,760
just the hello world for using using

00:22:43,620 --> 00:22:49,200
this from a build script so said of one

00:22:46,760 --> 00:22:50,460
exclamation point we'll do three and if

00:22:49,200 --> 00:22:53,039
you look back here it's gonna pick up

00:22:50,460 --> 00:22:54,809
automatically that I've edited that file

00:22:53,039 --> 00:22:56,220
and build your whole app again just the

00:22:54,809 --> 00:22:58,309
parts that need to be built you see it

00:22:56,220 --> 00:23:01,380
only built that source demo to index

00:22:58,309 --> 00:23:02,760
it's pretty smart about knowing if

00:23:01,380 --> 00:23:05,340
something has a dependency on another

00:23:02,760 --> 00:23:09,390
module it needs to rebuild that so it's

00:23:05,340 --> 00:23:11,429
kind of cool so it helps with that

00:23:09,390 --> 00:23:13,679
feedback loop it kind of makes it more

00:23:11,429 --> 00:23:15,539
like you're just loading a JavaScript

00:23:13,679 --> 00:23:17,220
file and you're just editing that so you

00:23:15,539 --> 00:23:25,440
don't have to go out and run the

00:23:17,220 --> 00:23:31,610
compiled script again so the entry for

00:23:25,440 --> 00:23:37,650
our built demos is in see how my on time

00:23:31,610 --> 00:23:40,650
okay as in indexed is just inside source

00:23:37,650 --> 00:23:42,990
and it's nice to separate out your

00:23:40,650 --> 00:23:44,370
dependencies like this so if you look at

00:23:42,990 --> 00:23:46,110
the wordpress source and the gutenberg

00:23:44,370 --> 00:23:47,970
source i'm you're gonna have things like

00:23:46,110 --> 00:23:50,580
external dependencies which are not part

00:23:47,970 --> 00:23:53,190
of wordpress proper the things that

00:23:50,580 --> 00:23:55,890
we've imported internal dependencies

00:23:53,190 --> 00:23:58,470
these are particular to the demo that

00:23:55,890 --> 00:24:04,679
i'm giving today and if you look other

00:23:58,470 --> 00:24:05,490
places let's look at demo for you'll

00:24:04,679 --> 00:24:07,220
have wordpress

00:24:05,490 --> 00:24:09,059
tendencies which these are the packages

00:24:07,220 --> 00:24:14,040
these are things that you're importing

00:24:09,059 --> 00:24:15,720
from npm or scraping off the WP global

00:24:14,040 --> 00:24:18,660
or that sort of thing so it's nice to

00:24:15,720 --> 00:24:21,780
have those in place so you can kind of

00:24:18,660 --> 00:24:25,590
see what's going on let's just talk

00:24:21,780 --> 00:24:27,420
about demo two for now i'm just

00:24:25,590 --> 00:24:30,780
importing it from a directory that's

00:24:27,420 --> 00:24:32,490
relative to the current one and this is

00:24:30,780 --> 00:24:35,130
just a little bit of an illustration to

00:24:32,490 --> 00:24:36,630
show that you know your app can be

00:24:35,130 --> 00:24:39,059
dynamic and you can switch based on a

00:24:36,630 --> 00:24:43,800
number of things and i'm passing

00:24:39,059 --> 00:24:46,770
demo to from the PHP script for the

00:24:43,800 --> 00:24:48,540
built demo just letting it know this is

00:24:46,770 --> 00:24:52,050
demo number two for this particular page

00:24:48,540 --> 00:24:53,730
and if you look back here if it's demo

00:24:52,050 --> 00:24:56,550
number two it's gonna run render demo

00:24:53,730 --> 00:25:01,380
two if you're not familiar with this

00:24:56,550 --> 00:25:05,730
syntax here and this is called JSX it is

00:25:01,380 --> 00:25:07,260
a way to make writing JavaScript

00:25:05,730 --> 00:25:09,360
components and particularly react

00:25:07,260 --> 00:25:12,630
components a lot more like writing HTML

00:25:09,360 --> 00:25:20,510
it helps with composition you can do

00:25:12,630 --> 00:25:22,980
things like adding two equals R and

00:25:20,510 --> 00:25:26,580
that'll automatically get sent to this

00:25:22,980 --> 00:25:29,220
component as a prop or a property so it

00:25:26,580 --> 00:25:32,340
will know that whatever wants to display

00:25:29,220 --> 00:25:36,320
a demo two also wants Foos to be bar if

00:25:32,340 --> 00:25:36,320
that makes any sense it probably doesn't

00:25:36,500 --> 00:25:44,100
while I'm live editing to show you

00:25:38,970 --> 00:25:47,100
something cool I added a new line added

00:25:44,100 --> 00:25:48,900
some spaces and you're probably familiar

00:25:47,100 --> 00:25:51,390
with WordPress coding standards that

00:25:48,900 --> 00:25:52,910
that wouldn't fly so when I hit save

00:25:51,390 --> 00:25:55,710
watch what it does

00:25:52,910 --> 00:25:58,470
puts it right back and this is part of

00:25:55,710 --> 00:26:01,770
the es lint package that I showed before

00:25:58,470 --> 00:26:04,890
I've also got a piece of software in my

00:26:01,770 --> 00:26:06,900
editor called prettier which takes those

00:26:04,890 --> 00:26:08,760
es lint standards and then applies them

00:26:06,900 --> 00:26:10,980
on save and that's all customizable per

00:26:08,760 --> 00:26:12,960
your editor so I invite you to look at

00:26:10,980 --> 00:26:14,610
es lent it makes that sort of thing so

00:26:12,960 --> 00:26:17,540
much easier you can just paste stuff in

00:26:14,610 --> 00:26:21,320
do all sorts of stuff

00:26:17,540 --> 00:26:23,810
I can even do like oh I forgot that this

00:26:21,320 --> 00:26:25,160
doesn't need to have a demo to closing

00:26:23,810 --> 00:26:27,560
and it will get rid of that and just

00:26:25,160 --> 00:26:29,120
make it a self closing element and as

00:26:27,560 --> 00:26:34,700
you can see it looks a lot like HTML and

00:26:29,120 --> 00:26:36,080
it's meant to and all the time I'm doing

00:26:34,700 --> 00:26:40,070
this it's rebuilding my app in the

00:26:36,080 --> 00:26:42,050
background so let's look at the demo too

00:26:40,070 --> 00:26:47,930
on the front end just for the hello

00:26:42,050 --> 00:26:50,030
world and this was it with the the

00:26:47,930 --> 00:26:51,470
plug-in disabled and when I reload it's

00:26:50,030 --> 00:26:55,330
just gonna say hello world because

00:26:51,470 --> 00:26:57,920
that's all that we've told it to do here

00:26:55,330 --> 00:26:59,090
this is a react component it's a

00:26:57,920 --> 00:27:01,670
functional component that takes no

00:26:59,090 --> 00:27:07,640
properties and just spits out a div that

00:27:01,670 --> 00:27:09,580
says hello world that's pretty simple if

00:27:07,640 --> 00:27:12,470
anybody doesn't understand this syntax

00:27:09,580 --> 00:27:14,870
this is just a function short function

00:27:12,470 --> 00:27:16,580
syntax that takes this one takes no

00:27:14,870 --> 00:27:19,580
arguments but if it took arguments we

00:27:16,580 --> 00:27:23,690
could put arguments and either arguments

00:27:19,580 --> 00:27:30,470
or we could do structure them with arg1

00:27:23,690 --> 00:27:34,580
arg2 but this one doesn't use them so

00:27:30,470 --> 00:27:36,320
there's no sense and in the background

00:27:34,580 --> 00:27:41,110
you can see it's been building all of

00:27:36,320 --> 00:27:41,110
this stuff and if you take a look at

00:27:42,580 --> 00:27:54,770
what actually gets sent its build

00:27:45,170 --> 00:27:56,600
JavaScript let's take a look at demo

00:27:54,770 --> 00:28:01,510
three there's only one more after this

00:27:56,600 --> 00:28:01,510
so I have a couple minutes for questions

00:28:02,650 --> 00:28:10,820
same thing demo 3 is just switching on a

00:28:06,170 --> 00:28:15,950
particular page number post post ID for

00:28:10,820 --> 00:28:17,900
a page minimal dependencies low - like I

00:28:15,950 --> 00:28:20,510
mentioned before it's it's a functional

00:28:17,900 --> 00:28:22,370
programming kind of helper utility

00:28:20,510 --> 00:28:23,810
library that it's another Swiss Army

00:28:22,370 --> 00:28:25,250
knife it's really good if I invite you

00:28:23,810 --> 00:28:27,740
to take a look at the docs for low -

00:28:25,250 --> 00:28:31,130
it's really useful on the front end get

00:28:27,740 --> 00:28:31,490
is a way to get deep properties of an

00:28:31,130 --> 00:28:34,130
object

00:28:31,490 --> 00:28:37,910
without worrying about errors if you've

00:28:34,130 --> 00:28:39,410
ever tried to do like X dot y dot Z and

00:28:37,910 --> 00:28:40,640
you get a weird error this helps you get

00:28:39,410 --> 00:28:46,610
around that and you can specify a

00:28:40,640 --> 00:28:48,850
default value so in this demo we're

00:28:46,610 --> 00:28:54,400
gonna do some fetching so we're

00:28:48,850 --> 00:28:54,400
importing the API fetched package and

00:28:54,580 --> 00:28:59,559
you've already seen the escaped HTML

00:28:56,960 --> 00:29:03,050
we've already seen the

00:28:59,559 --> 00:29:04,790
internationalization functions I've got

00:29:03,050 --> 00:29:08,179
a post ID that I'm gonna try to fetch

00:29:04,790 --> 00:29:10,790
and here's the fetcher function to do it

00:29:08,179 --> 00:29:16,250
and all I'm doing is calling the REST

00:29:10,790 --> 00:29:18,830
API for pages and this post ID and after

00:29:16,250 --> 00:29:21,350
the rest ID our REST API comes back then

00:29:18,830 --> 00:29:25,010
I take the post do some massaging of it

00:29:21,350 --> 00:29:27,140
and use the get function from lodash to

00:29:25,010 --> 00:29:28,730
get deep into that post object that

00:29:27,140 --> 00:29:30,200
comes back from the REST API and get

00:29:28,730 --> 00:29:33,050
what I really want is this title

00:29:30,200 --> 00:29:38,480
rendered for a title and link for link

00:29:33,050 --> 00:29:39,860
and content rendered for content if you

00:29:38,480 --> 00:29:41,960
look at the shape of the REST API that's

00:29:39,860 --> 00:29:46,309
how it comes back and then I'm taking

00:29:41,960 --> 00:29:47,990
and looking for looking for particular

00:29:46,309 --> 00:29:50,030
elements and then just plopping the

00:29:47,990 --> 00:29:52,160
results and and this is not the best way

00:29:50,030 --> 00:29:53,690
to do it and that's what demo 4 is for

00:29:52,160 --> 00:29:56,990
her to show you the best way to do it or

00:29:53,690 --> 00:29:59,540
the better way to do it and there's a

00:29:56,990 --> 00:30:01,700
button and when I click it it's going to

00:29:59,540 --> 00:30:06,080
fetch the thing and it's gonna put the

00:30:01,700 --> 00:30:09,490
stuff in these so any of that unclear I

00:30:06,080 --> 00:30:09,490
kind of went pretty quickly through it

00:30:10,150 --> 00:30:13,150
sure

00:30:26,330 --> 00:30:55,920
right here yeah yep so okay right here

00:30:52,490 --> 00:31:01,050
this is just a string if it's probably

00:30:55,920 --> 00:31:03,090
hard to see on there but this is a newer

00:31:01,050 --> 00:31:08,540
kind of string in JavaScript that uses a

00:31:03,090 --> 00:31:08,540
back backtick instead of a single quote

00:31:16,340 --> 00:31:21,600
yeah so if you take a look at this self

00:31:19,080 --> 00:31:25,320
closing syntax if we take out that slash

00:31:21,600 --> 00:31:28,800
and we can put stuff in here and then

00:31:25,320 --> 00:31:31,980
close h3 it'll keep it but that's just

00:31:28,800 --> 00:31:34,710
it's a shorter way there's less code to

00:31:31,980 --> 00:31:36,180
store if there's no stuff in there it'll

00:31:34,710 --> 00:31:40,740
get rid of it and just do the self

00:31:36,180 --> 00:31:42,780
closing syntax I don't think that's

00:31:40,740 --> 00:31:45,030
valid HTML by the way to have an h3

00:31:42,780 --> 00:31:47,720
that's self closing I think it'll

00:31:45,030 --> 00:31:51,960
probably work but it's not really valid

00:31:47,720 --> 00:31:56,340
anyhow on to the demo let's see if this

00:31:51,960 --> 00:32:03,840
works clicking and it's getting this

00:31:56,340 --> 00:32:06,360
post over here there it's a regular post

00:32:03,840 --> 00:32:08,580
it's getting the title and the the

00:32:06,360 --> 00:32:10,140
content over the rest API and just

00:32:08,580 --> 00:32:14,310
popping and plopping it into this div

00:32:10,140 --> 00:32:19,890
that's there and if we go over here and

00:32:14,310 --> 00:32:26,900
change change that there's coffee in

00:32:19,890 --> 00:32:26,900
this nebula too hard to fix

00:32:30,370 --> 00:32:34,610
and we reload this actually we didn't

00:32:33,020 --> 00:32:36,200
even need to reload it just click it

00:32:34,610 --> 00:32:40,100
again it's gonna go out and get the new

00:32:36,200 --> 00:32:42,890
title and the link that's there and the

00:32:40,100 --> 00:32:45,920
same content and that's all happening

00:32:42,890 --> 00:32:47,780
over the REST API so any questions about

00:32:45,920 --> 00:32:49,790
that there's really no data flow or

00:32:47,780 --> 00:32:55,250
anything there the package part of it is

00:32:49,790 --> 00:32:58,280
the API fetch and internationalization

00:32:55,250 --> 00:32:59,870
around the button and escaping the HTML

00:32:58,280 --> 00:33:02,600
and escaping this attribute and link

00:32:59,870 --> 00:33:04,100
again this is not really how you do it I

00:33:02,600 --> 00:33:09,170
just wanted to show off some of those

00:33:04,100 --> 00:33:12,080
functions alright one more demo and it's

00:33:09,170 --> 00:33:17,390
kind of the same same sort of thing it's

00:33:12,080 --> 00:33:22,940
going to reach out to the if I can't

00:33:17,390 --> 00:33:33,560
type it's going to reach out to the REST

00:33:22,940 --> 00:33:35,780
API and get a post and instead of just

00:33:33,560 --> 00:33:38,600
kind of taking the response and plopping

00:33:35,780 --> 00:33:40,760
it in we're gonna do some things the

00:33:38,600 --> 00:33:46,190
data flow away if you're familiar with

00:33:40,760 --> 00:33:48,560
Redux package it's a way to take

00:33:46,190 --> 00:33:51,140
something as far as data flow and break

00:33:48,560 --> 00:33:53,290
it down into discrete actions that have

00:33:51,140 --> 00:33:55,610
a particular action type and then

00:33:53,290 --> 00:33:57,890
sometimes data attached to those actions

00:33:55,610 --> 00:34:00,230
and typically those actions are just a

00:33:57,890 --> 00:34:03,020
regular JavaScript object if you've

00:34:00,230 --> 00:34:05,420
heard of a programming model called it

00:34:03,020 --> 00:34:08,000
then sourcing it's kind of the same

00:34:05,420 --> 00:34:11,000
thing so you send an event which is an

00:34:08,000 --> 00:34:13,700
action something is listening to that

00:34:11,000 --> 00:34:15,890
action to when it comes in and saying am

00:34:13,700 --> 00:34:17,900
i interested in this action yes okay

00:34:15,890 --> 00:34:19,669
well then I need to update my data that

00:34:17,900 --> 00:34:19,880
I know about from the data that you sent

00:34:19,669 --> 00:34:22,419
me

00:34:19,880 --> 00:34:29,440
and I'll show you that part in a minute

00:34:22,419 --> 00:34:31,880
but this is kind of the meat of that and

00:34:29,440 --> 00:34:35,290
what it's really doing is loading this

00:34:31,880 --> 00:34:35,290
store file

00:34:36,669 --> 00:34:43,899
if anybody doesn't know about what I

00:34:38,169 --> 00:34:45,760
just did I just did it reflexively in

00:34:43,899 --> 00:34:46,990
Visual Studio code and a couple other

00:34:45,760 --> 00:34:47,319
editors you can hold down the command

00:34:46,990 --> 00:34:50,950
button

00:34:47,319 --> 00:34:54,099
oops and hover over things like the

00:34:50,950 --> 00:34:57,129
packages variables and go to them so I

00:34:54,099 --> 00:34:59,920
just held down command and clicked on

00:34:57,129 --> 00:35:01,299
store and helps me get to this other

00:34:59,920 --> 00:35:04,059
file that I'm talking about really quick

00:35:01,299 --> 00:35:05,410
quickly without having to find it so

00:35:04,059 --> 00:35:07,450
this one the only dependency were using

00:35:05,410 --> 00:35:10,599
is get from low - and then WordPress

00:35:07,450 --> 00:35:15,069
dependencies were combining reducers and

00:35:10,599 --> 00:35:17,410
registering store this is a data store

00:35:15,069 --> 00:35:20,049
and WordPress is kind of opinionated on

00:35:17,410 --> 00:35:22,269
how it's doing this I mean it's it goes

00:35:20,049 --> 00:35:25,480
into detail in the handbook that it's

00:35:22,269 --> 00:35:28,049
not just Redux there are some decisions

00:35:25,480 --> 00:35:32,500
that they've made for WordPress itself

00:35:28,049 --> 00:35:36,400
for how to make it appropriate and how

00:35:32,500 --> 00:35:37,660
to make it less likely to break and a

00:35:36,400 --> 00:35:41,319
little bit better of a developer

00:35:37,660 --> 00:35:43,049
experience than just raw redux so these

00:35:41,319 --> 00:35:45,880
are the actions I was talking about

00:35:43,049 --> 00:35:48,309
there's one called fetch post which

00:35:45,880 --> 00:35:50,710
tells this store that I'm fetching a

00:35:48,309 --> 00:35:53,859
post and tells it what the post ID is

00:35:50,710 --> 00:35:55,599
and so it can store that and if the post

00:35:53,859 --> 00:35:58,000
comes back as an error I can tell it oh

00:35:55,599 --> 00:36:01,420
that was an error so that the store

00:35:58,000 --> 00:36:03,670
knows that I got an error and if we get

00:36:01,420 --> 00:36:06,250
data back that is valid then I can say

00:36:03,670 --> 00:36:09,869
that I received it and send that post

00:36:06,250 --> 00:36:09,869
data through to the store

00:36:13,259 --> 00:36:18,509
these are reducer functions and you can

00:36:17,049 --> 00:36:21,009
think about a reducer function as

00:36:18,509 --> 00:36:24,220
something that takes an initial state

00:36:21,009 --> 00:36:26,230
whenever your application loads so for

00:36:24,220 --> 00:36:27,519
this one the error whenever your

00:36:26,230 --> 00:36:29,289
application loads that error is going to

00:36:27,519 --> 00:36:32,619
be null it's not going to have any value

00:36:29,289 --> 00:36:35,049
it's gonna be null and whenever one of

00:36:32,619 --> 00:36:37,539
those actions comes in it doesn't matter

00:36:35,049 --> 00:36:39,309
what kind of action it is if it sees any

00:36:37,539 --> 00:36:41,289
action it's gonna process this function

00:36:39,309 --> 00:36:43,450
so it's saying okay what type of action

00:36:41,289 --> 00:36:44,859
is it if it's one of these three then

00:36:43,450 --> 00:36:46,390
it's interested in that action that's

00:36:44,859 --> 00:36:47,859
gonna take some sort of action otherwise

00:36:46,390 --> 00:36:49,780
it's just going to return the original

00:36:47,859 --> 00:36:51,970
state

00:36:49,780 --> 00:36:56,230
and so I'm showing here how you can have

00:36:51,970 --> 00:36:58,510
kind of discrete nodes of data for your

00:36:56,230 --> 00:37:00,340
state and reducers so there's the error

00:36:58,510 --> 00:37:03,390
there's the fetching state whether or

00:37:00,340 --> 00:37:05,710
not you're fetching from the API and

00:37:03,390 --> 00:37:06,400
what the data actually are whenever you

00:37:05,710 --> 00:37:10,570
get them back

00:37:06,400 --> 00:37:12,940
and whenever we register the store we

00:37:10,570 --> 00:37:15,730
can combine the reducers into one so

00:37:12,940 --> 00:37:18,430
we're gonna be able to say okay error is

00:37:15,730 --> 00:37:19,990
that result from the air reducer

00:37:18,430 --> 00:37:20,770
fetching is the result from the fetching

00:37:19,990 --> 00:37:23,980
reducer

00:37:20,770 --> 00:37:26,680
likewise and then there's a concept

00:37:23,980 --> 00:37:29,830
called selectors which is a way to reach

00:37:26,680 --> 00:37:33,040
into that state and get that particular

00:37:29,830 --> 00:37:35,440
piece of state as a function and I'll

00:37:33,040 --> 00:37:40,900
show you how to use that on the react

00:37:35,440 --> 00:37:42,130
side on the element side so this is just

00:37:40,900 --> 00:37:43,450
getting here that's getting the fetching

00:37:42,130 --> 00:37:45,550
state and that's getting the post data

00:37:43,450 --> 00:37:46,840
and you could get as particular as you

00:37:45,550 --> 00:37:48,670
want it in here you could say oh I just

00:37:46,840 --> 00:37:53,800
want the ID you could add a selector

00:37:48,670 --> 00:37:59,800
just for that here it's kind of a lot to

00:37:53,800 --> 00:38:03,370
go through for a demo but let's look at

00:37:59,800 --> 00:38:04,870
the code and there are these helper

00:38:03,370 --> 00:38:10,900
functions in this package called

00:38:04,870 --> 00:38:13,540
WordPress data that's one of the medias

00:38:10,900 --> 00:38:15,550
parts of Guttenberg if you look at the

00:38:13,540 --> 00:38:21,190
source there's a lot going on here with

00:38:15,550 --> 00:38:25,210
what function composition with using

00:38:21,190 --> 00:38:27,370
these sorts of data flow pieces so it's

00:38:25,210 --> 00:38:34,360
a lot to learn there's a function

00:38:27,370 --> 00:38:37,020
composed to so when we return our react

00:38:34,360 --> 00:38:39,430
component because that's what we're

00:38:37,020 --> 00:38:43,450
returning here is a demo for a react

00:38:39,430 --> 00:38:47,110
component we are composing with select

00:38:43,450 --> 00:38:50,620
and with dispatch and then calling all

00:38:47,110 --> 00:38:52,900
of those on this react component and

00:38:50,620 --> 00:38:55,330
what with select does is it takes it's a

00:38:52,900 --> 00:38:57,700
function that takes select and then

00:38:55,330 --> 00:39:01,480
returns the value of those selectors in

00:38:57,700 --> 00:39:02,680
this object as properties for the

00:39:01,480 --> 00:39:04,870
wrapped object

00:39:02,680 --> 00:39:05,800
and it's kind of a lot to wrap your head

00:39:04,870 --> 00:39:10,030
around there's something called a

00:39:05,800 --> 00:39:13,690
higher-order component which is composed

00:39:10,030 --> 00:39:15,310
of lower order components and I'll show

00:39:13,690 --> 00:39:16,930
you how that works in a second but

00:39:15,310 --> 00:39:18,850
basically the contents going to be in

00:39:16,930 --> 00:39:20,950
your properties title link the error

00:39:18,850 --> 00:39:23,230
state and the is fetching state are

00:39:20,950 --> 00:39:25,780
going to be in your properties and with

00:39:23,230 --> 00:39:29,920
dispatch is how you piece into the

00:39:25,780 --> 00:39:31,870
actions so we're calling fetch post is

00:39:29,920 --> 00:39:34,090
going to dispatch that I fetch post

00:39:31,870 --> 00:39:37,960
action and then when we receive data

00:39:34,090 --> 00:39:38,920
we're gonna dispatch the receive post

00:39:37,960 --> 00:39:44,620
and if we get an error we're gonna

00:39:38,920 --> 00:39:46,240
dispatch receive post error and this is

00:39:44,620 --> 00:39:48,570
the actual react component that is

00:39:46,240 --> 00:39:51,190
wrapped with all of those things and

00:39:48,570 --> 00:39:56,380
there's a button and when it is clicked

00:39:51,190 --> 00:40:00,160
it's gonna do this fetch jambalaya's and

00:39:56,380 --> 00:40:02,560
guess what i'm gonna return which does

00:40:00,160 --> 00:40:06,150
those things and that gets piece to the

00:40:02,560 --> 00:40:08,080
properties of this react component and

00:40:06,150 --> 00:40:09,820
there's an error it's gonna tell you

00:40:08,080 --> 00:40:10,960
there's an error if there's not then

00:40:09,820 --> 00:40:14,680
it's going to tell you if it's fetching

00:40:10,960 --> 00:40:16,780
or not and if there's a title it's gonna

00:40:14,680 --> 00:40:18,910
print out the title if there's content

00:40:16,780 --> 00:40:23,560
it's going to dangerously set the

00:40:18,910 --> 00:40:26,200
innerhtml for the content so this is

00:40:23,560 --> 00:40:28,150
kind of important you have to be able to

00:40:26,200 --> 00:40:29,650
trust where you're getting your data if

00:40:28,150 --> 00:40:33,820
you're going to just pop things into

00:40:29,650 --> 00:40:35,860
react otherwise sanitize them run them

00:40:33,820 --> 00:40:38,170
through escape but if we ran this

00:40:35,860 --> 00:40:45,210
through escape it wouldn't work I'll

00:40:38,170 --> 00:40:45,210
show you why so that's demo three

00:40:48,660 --> 00:40:54,150
demo for did you see it for a second

00:40:50,790 --> 00:40:57,960
fetching fetching and when it comes back

00:40:54,150 --> 00:41:03,750
it gets that results and we got

00:40:57,960 --> 00:41:09,420
jambalaya is let's change it so it gets

00:41:03,750 --> 00:41:10,680
an error so it's rebuilding in the

00:41:09,420 --> 00:41:16,080
background I can just go ahead and

00:41:10,680 --> 00:41:22,340
reload that should not have worked

00:41:16,080 --> 00:41:22,340
is it still building and a live demo

00:41:26,960 --> 00:41:33,680
post IDE maybe I did it too quickly or

00:41:30,570 --> 00:41:33,680
maybe it's cached

00:41:43,770 --> 00:41:49,580
I will stop this and start it again see

00:41:47,130 --> 00:41:49,580
if that works

00:41:58,010 --> 00:42:02,869
so it got an error back and it's just

00:42:00,430 --> 00:42:04,520
json stringify in the error that we got

00:42:02,869 --> 00:42:05,810
back you could probably do something a

00:42:04,520 --> 00:42:10,490
little bit more elegant than that in

00:42:05,810 --> 00:42:23,750
your actual app see if it will live

00:42:10,490 --> 00:42:25,160
rebuild again yeah cool all right does

00:42:23,750 --> 00:42:26,900
anybody have any questions about this

00:42:25,160 --> 00:42:38,000
and I don't believe you if you say no

00:42:26,900 --> 00:42:41,960
because I do I have questions you don't

00:42:38,000 --> 00:42:44,240
have to get is deep into selectors and

00:42:41,960 --> 00:42:45,619
dispatchers but it's I think it's a

00:42:44,240 --> 00:42:47,600
concept that you're gonna see a lot more

00:42:45,619 --> 00:42:49,070
going forward I think that the developer

00:42:47,600 --> 00:42:51,590
experience is probably going to get

00:42:49,070 --> 00:42:53,359
better around it there are already some

00:42:51,590 --> 00:42:55,100
helpers that kind of help you do some of

00:42:53,359 --> 00:42:57,800
the stuff without piecing it together in

00:42:55,100 --> 00:42:59,060
your components but they use generator

00:42:57,800 --> 00:43:01,480
functions and I didn't want to bother

00:42:59,060 --> 00:43:01,480
with those

00:43:09,670 --> 00:43:16,970
back to demo three I wanted to show off

00:43:11,900 --> 00:43:22,160
that you could do other things other

00:43:16,970 --> 00:43:24,950
than just images of course you do demo

00:43:22,160 --> 00:43:30,920
videos this is just a embedded YouTube

00:43:24,950 --> 00:43:34,990
and a Gooden burg block and someone put

00:43:30,920 --> 00:43:34,990
this song over the discovery

00:43:36,410 --> 00:43:43,619
sorry alright I think that's pretty much

00:43:41,970 --> 00:43:45,240
it for the demo

00:43:43,619 --> 00:43:50,750
does anybody have any code questions

00:43:45,240 --> 00:43:50,750
before I talk about contributing

00:43:56,830 --> 00:44:01,750
cool so all of this is still pretty new

00:44:00,250 --> 00:44:04,420
I gave a talk like I said two years ago

00:44:01,750 --> 00:44:06,450
and none of this was in WordPress but

00:44:04,420 --> 00:44:09,610
now it is and it's still getting better

00:44:06,450 --> 00:44:10,900
and you can help make it better so if

00:44:09,610 --> 00:44:13,660
you see something that doesn't work

00:44:10,900 --> 00:44:14,830
quite right or if that developer

00:44:13,660 --> 00:44:15,670
experience doesn't work for you you

00:44:14,830 --> 00:44:19,810
think you can make it better

00:44:15,670 --> 00:44:22,660
please help make it better this is it's

00:44:19,810 --> 00:44:26,140
a very active project you can see it's a

00:44:22,660 --> 00:44:29,500
lot of Java scripts there's 3% PHP in

00:44:26,140 --> 00:44:32,260
Guttenberg so it's fresh and new

00:44:29,500 --> 00:44:34,180
it's exciting this is the past month

00:44:32,260 --> 00:44:36,760
there have been 226 merge pull request

00:44:34,180 --> 00:44:41,710
and if you take a look at the activity

00:44:36,760 --> 00:44:47,650
graph I think that is probably the lead

00:44:41,710 --> 00:44:48,640
up to the merge into core so if you see

00:44:47,650 --> 00:44:51,040
something say something

00:44:48,640 --> 00:44:52,900
there's if you go to WordPress slash

00:44:51,040 --> 00:44:54,820
Gutenberg on github you can go to new

00:44:52,900 --> 00:44:56,500
issue and there's these helpful

00:44:54,820 --> 00:44:59,770
templates to help you file a bug report

00:44:56,500 --> 00:45:07,690
or help request a feature request please

00:44:59,770 --> 00:45:10,680
do and that's it any questions if not

00:45:07,690 --> 00:45:10,680

YouTube URL: https://www.youtube.com/watch?v=SoNJcKoMtC0


