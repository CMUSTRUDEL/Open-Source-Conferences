Title: Michael Mizner: ACF and Twig for Gutenberg Custom Blocks
Publication date: 2019-09-06
Playlist: WordCamp Asheville 2019
Description: 
	An introduction to registering custom blocks (via PHP) using ACF and implementing clean templating via Timber
Takeaways:
We can still create custom WordPress sites without having to dig deeply into JavaScript
We can keep our templates clean with Twig
ACF is still awesome and can help keep custom site building overhead low

WPTV link: https://wordpress.tv/2019/08/07/michael-mizner-acf-and-twig-for-gutenberg-custom-blocks/
Captions: 
	00:00:06,020 --> 00:00:10,590
hi everybody

00:00:08,490 --> 00:00:13,080
this is the my name is Michel Meisner

00:00:10,590 --> 00:00:17,580
I'm the director of engineering at pixel

00:00:13,080 --> 00:00:21,420
we are a enterprise WordPress firm out

00:00:17,580 --> 00:00:24,960
of Knoxville and this is the third time

00:00:21,420 --> 00:00:28,019
that that I have conned the organizers

00:00:24,960 --> 00:00:30,029
in Nashville to let me speak here and

00:00:28,019 --> 00:00:32,880
I'm appreciative of it quite a bit

00:00:30,029 --> 00:00:42,770
okay everybody hear me okay yeah I'm

00:00:32,880 --> 00:00:45,210
gonna not do this okay so yes

00:00:42,770 --> 00:00:48,239
John's talk earlier today I think was

00:00:45,210 --> 00:00:53,610
really interesting and and and I before

00:00:48,239 --> 00:00:55,710
the actual technical parts of this are

00:00:53,610 --> 00:00:56,789
great but actually I think this is

00:00:55,710 --> 00:00:59,160
opportunity for us to maybe have a

00:00:56,789 --> 00:01:04,199
little bit of a conversation about what

00:00:59,160 --> 00:01:06,450
we're doing and maybe a way to utilize

00:01:04,199 --> 00:01:07,650
Gutenberg in a standardized kind of way

00:01:06,450 --> 00:01:14,580
or maybe use it at all

00:01:07,650 --> 00:01:16,200
so who has launched a site where lever

00:01:14,580 --> 00:01:18,180
like Gutenberg is actually being

00:01:16,200 --> 00:01:21,630
leveraged for maybe like layout building

00:01:18,180 --> 00:01:24,360
rather than flexible content from ACF or

00:01:21,630 --> 00:01:25,830
CMB to implementation or static page so

00:01:24,360 --> 00:01:27,659
just keep your hands up real quick who's

00:01:25,830 --> 00:01:28,979
actually launched a site where it's used

00:01:27,659 --> 00:01:34,050
in a meaningful way other than blog

00:01:28,979 --> 00:01:37,129
posts okay so three four is five

00:01:34,050 --> 00:01:37,129
[Music]

00:01:39,210 --> 00:01:47,290
how many how many people have disabled

00:01:45,430 --> 00:01:49,480
gonna murder classic editor installed

00:01:47,290 --> 00:01:54,610
all over the place still 90 plus percent

00:01:49,480 --> 00:02:00,420
of your properties right okay who has

00:01:54,610 --> 00:02:06,150
plans in the next year to to utilize

00:02:00,420 --> 00:02:11,470
Gutenberg as maybe a layout system okay

00:02:06,150 --> 00:02:16,090
so who's been planning on trying to use

00:02:11,470 --> 00:02:17,550
ACF to do that okay so this is

00:02:16,090 --> 00:02:22,959
interesting

00:02:17,550 --> 00:02:25,840
who's done it that way yet okay okay so

00:02:22,959 --> 00:02:27,570
this is maybe very timely to give some

00:02:25,840 --> 00:02:31,300
backstory to this

00:02:27,570 --> 00:02:32,560
Eliot from ACF who may think he's been

00:02:31,300 --> 00:02:34,630
working on it since I don't know

00:02:32,560 --> 00:02:37,180
probably the better way he spent a lot

00:02:34,630 --> 00:02:39,220
of time on it in 2018 it went into like

00:02:37,180 --> 00:02:43,000
a decent beta where people could really

00:02:39,220 --> 00:02:46,920
test it out and I would say October or

00:02:43,000 --> 00:02:49,000
so maybe a little earlier than that and

00:02:46,920 --> 00:02:50,590
I've really enjoyed it

00:02:49,000 --> 00:02:52,060
I really really enjoyed it this is what

00:02:50,590 --> 00:02:54,340
I was hoping for this has been this is

00:02:52,060 --> 00:02:56,260
the replacement for how we've been doing

00:02:54,340 --> 00:02:56,860
flexible content with ACF for a long

00:02:56,260 --> 00:03:01,630
time

00:02:56,860 --> 00:03:03,160
I think it's inherently more accessible

00:03:01,630 --> 00:03:05,620
content because the results of it all

00:03:03,160 --> 00:03:07,239
get stored inside a post content rather

00:03:05,620 --> 00:03:10,300
than trying to attach a whole bunch of

00:03:07,239 --> 00:03:11,650
post meta along with it right so even if

00:03:10,300 --> 00:03:15,340
you're taking even if you're doing like

00:03:11,650 --> 00:03:17,440
decoupled sites that pose every all the

00:03:15,340 --> 00:03:20,440
results of your custom thing that you

00:03:17,440 --> 00:03:22,120
had done instead of reiterating over

00:03:20,440 --> 00:03:24,940
that or trying to save the result of all

00:03:22,120 --> 00:03:26,830
that and kind of rebuilding Gutenberg

00:03:24,940 --> 00:03:28,510
it's it's just all there it's all a

00:03:26,830 --> 00:03:33,510
little bit more accessible up maybe some

00:03:28,510 --> 00:03:37,480
of that makes sense maybe doesn't so I

00:03:33,510 --> 00:03:40,030
had to me this is like sort of the cure

00:03:37,480 --> 00:03:44,410
to the Gutenberg problem for my

00:03:40,030 --> 00:03:49,750
microcosm of WordPress right for me

00:03:44,410 --> 00:03:52,660
WordPress involves client needs I've got

00:03:49,750 --> 00:03:55,140
to do that in a pretty custom way

00:03:52,660 --> 00:03:57,850
custom enough that I can't reliably

00:03:55,140 --> 00:04:00,760
utilize page builder systems most of the

00:03:57,850 --> 00:04:02,740
time really love beaver builder great

00:04:00,760 --> 00:04:04,990
APA they have a great developer API so

00:04:02,740 --> 00:04:07,690
when I actually have to do that I love

00:04:04,990 --> 00:04:10,270
them but even then generally speaking

00:04:07,690 --> 00:04:12,940
that's not a very pragmatic thing for us

00:04:10,270 --> 00:04:18,610
to do for our clientele so leaning on

00:04:12,940 --> 00:04:21,160
something like CMB to ACF gosh the meta

00:04:18,610 --> 00:04:22,270
box plugin the wordpress VIP requires

00:04:21,160 --> 00:04:25,870
that i can't remember the name of right

00:04:22,270 --> 00:04:32,170
now that stuff is that's what we have to

00:04:25,870 --> 00:04:35,050
rely on and Gutenberg was looking like

00:04:32,170 --> 00:04:37,390
we were gonna be doing a lot of react

00:04:35,050 --> 00:04:39,430
templating and a lot of state management

00:04:37,390 --> 00:04:44,740
in order to deal with it just didn't

00:04:39,430 --> 00:04:46,480
feel like per per block right or module

00:04:44,740 --> 00:04:49,660
or whatever you might call it within

00:04:46,480 --> 00:04:51,910
your own thing if you have that down to

00:04:49,660 --> 00:04:53,380
four hours of work to set one up at

00:04:51,910 --> 00:04:54,790
least for like the back end maybe a lot

00:04:53,380 --> 00:04:56,830
less than that in some ways you can set

00:04:54,790 --> 00:04:58,030
up in 20 minutes you you know the fields

00:04:56,830 --> 00:05:00,760
that you're gonna register and you just

00:04:58,030 --> 00:05:02,560
get through it and you've got like a

00:05:00,760 --> 00:05:07,360
flow but now if you're trying to change

00:05:02,560 --> 00:05:10,240
that over to custom building it with

00:05:07,360 --> 00:05:11,800
react and the slightly older version of

00:05:10,240 --> 00:05:14,470
react where we got their class system

00:05:11,800 --> 00:05:15,640
it's it's hard it gets kind of hard and

00:05:14,470 --> 00:05:19,060
I actually love it I mean I took it

00:05:15,640 --> 00:05:20,590
seriously in Philly watching Matt

00:05:19,060 --> 00:05:23,800
Wolowitz and learn JavaScript deeply I

00:05:20,590 --> 00:05:28,240
did but I understood I've understood

00:05:23,800 --> 00:05:30,300
that over time that it's for most

00:05:28,240 --> 00:05:34,410
businesses it's not a pragmatic choice

00:05:30,300 --> 00:05:38,470
to be dumping time into JSX templates

00:05:34,410 --> 00:05:39,940
and trying to manage state there and

00:05:38,470 --> 00:05:41,050
saving patterns and hit the rest of it

00:05:39,940 --> 00:05:43,270
that's there's just kind of a pain in

00:05:41,050 --> 00:05:45,940
the butt in comparison to a lot of the

00:05:43,270 --> 00:05:48,430
workflows that we have right now I hope

00:05:45,940 --> 00:05:51,310
that gets better with time and some

00:05:48,430 --> 00:05:54,280
maturity in the JavaScript community and

00:05:51,310 --> 00:05:55,810
but honestly it that it's probably where

00:05:54,280 --> 00:05:57,010
it needs to be in it that's a certain

00:05:55,810 --> 00:05:59,290
kind of approach where you're actually

00:05:57,010 --> 00:06:00,850
building a super custom block or

00:05:59,290 --> 00:06:03,310
something really intentional and

00:06:00,850 --> 00:06:05,260
meaningful for most of us doing and

00:06:03,310 --> 00:06:09,370
spinning up

00:06:05,260 --> 00:06:11,350
brochure ish sites right and even just

00:06:09,370 --> 00:06:13,480
high-level brochure sites that are

00:06:11,350 --> 00:06:15,640
custom and maintainable and something

00:06:13,480 --> 00:06:17,470
that should last five to ten years right

00:06:15,640 --> 00:06:21,850
and have kind of a release pattern with

00:06:17,470 --> 00:06:23,500
it or even just that existing is the

00:06:21,850 --> 00:06:24,970
front end and there's complex backends

00:06:23,500 --> 00:06:27,160
that you who knows what approach you're

00:06:24,970 --> 00:06:32,230
using this this to me felt like the the

00:06:27,160 --> 00:06:33,490
cure so what I was really glad to see is

00:06:32,230 --> 00:06:35,530
that there's a whole bunch of people

00:06:33,490 --> 00:06:39,220
planning to try to build a site with

00:06:35,530 --> 00:06:40,360
Gutenberg want to try to use ACF and and

00:06:39,220 --> 00:06:41,620
maybe here this is the first time you're

00:06:40,360 --> 00:06:44,350
getting exposed to it because like I

00:06:41,620 --> 00:06:46,710
said it went a bit too good beta in

00:06:44,350 --> 00:06:49,090
October but it wasn't until May 8th

00:06:46,710 --> 00:06:51,760
right I think it just may 8th barely a

00:06:49,090 --> 00:06:56,500
month ago not even though a month ago

00:06:51,760 --> 00:06:58,240
exactly that 5.8 was released to the

00:06:56,500 --> 00:07:01,150
public and I bet most of you have not

00:06:58,240 --> 00:07:07,380
really tried it out first thing to know

00:07:01,150 --> 00:07:09,940
about it is that you cannot you cannot

00:07:07,380 --> 00:07:11,110
you cannot just do this with the GUI if

00:07:09,940 --> 00:07:13,060
you think you're gonna get away with

00:07:11,110 --> 00:07:14,350
that that's that's not that's not really

00:07:13,060 --> 00:07:16,630
an option you're gonna have to register

00:07:14,350 --> 00:07:21,990
something in code you cannot just use a

00:07:16,630 --> 00:07:25,150
CFC GUI and as a preachy thing that just

00:07:21,990 --> 00:07:28,570
maybe don't do that and try to like use

00:07:25,150 --> 00:07:30,270
their API anyways and version it you can

00:07:28,570 --> 00:07:33,040
do that with JSON a little bit but I

00:07:30,270 --> 00:07:34,540
strongly recommend doing it in PHP I'll

00:07:33,040 --> 00:07:36,570
show you a little bit about my workflow

00:07:34,540 --> 00:07:40,630
and how I do it

00:07:36,570 --> 00:07:42,220
ok so what does it talk this is this is

00:07:40,630 --> 00:07:46,840
a fairly opinionated approach on

00:07:42,220 --> 00:07:49,270
utilizing a wordpress blog editor this

00:07:46,840 --> 00:07:54,940
is to create these blocks right and how

00:07:49,270 --> 00:07:58,300
to use ACF in order to have a pragmatic

00:07:54,940 --> 00:08:02,110
workflow if you've been using flexible

00:07:58,300 --> 00:08:04,570
content if you are concerned about the

00:08:02,110 --> 00:08:08,590
scope and hours that takes to build

00:08:04,570 --> 00:08:11,200
custom custom blocks if you are actually

00:08:08,590 --> 00:08:12,460
at a point your career or your business

00:08:11,200 --> 00:08:15,310
where you're sort of getting ready to

00:08:12,460 --> 00:08:17,900
move on from page builders and you need

00:08:15,310 --> 00:08:22,610
to go a little bit more bespoke not that

00:08:17,900 --> 00:08:24,170
like that word very much your radius

00:08:22,610 --> 00:08:28,010
starts leveraging Gutenberg in a

00:08:24,170 --> 00:08:32,120
meaningful way you're a heavy a CFC nb2

00:08:28,010 --> 00:08:34,670
user and then I kind of stuffed timber

00:08:32,120 --> 00:08:36,440
slash twig into this B for a few

00:08:34,670 --> 00:08:39,350
different reasons it's the way I like to

00:08:36,440 --> 00:08:41,480
work but I also think that it we code

00:08:39,350 --> 00:08:43,400
better when we use the right tool at the

00:08:41,480 --> 00:08:47,900
right time and I don't think PHP is a

00:08:43,400 --> 00:08:51,040
good tool for templating but I think

00:08:47,900 --> 00:08:54,830
it'll it'll fit in well enough

00:08:51,040 --> 00:08:57,950
registering blocks pretty easy they have

00:08:54,830 --> 00:09:00,290
a couple of options the documentation is

00:08:57,950 --> 00:09:03,380
up for the arguments that you can feed

00:09:00,290 --> 00:09:05,660
it this is an example of a really really

00:09:03,380 --> 00:09:13,160
minimal testimonial block that we're

00:09:05,660 --> 00:09:14,840
registering we have some unsurprising

00:09:13,160 --> 00:09:19,630
things happening here name title

00:09:14,840 --> 00:09:21,530
description category is is great because

00:09:19,630 --> 00:09:23,330
what you've probably noticed with

00:09:21,530 --> 00:09:25,070
Guttenberg is you have those different

00:09:23,330 --> 00:09:30,110
categorizations right you could use it

00:09:25,070 --> 00:09:33,020
that's how you designate that icon this

00:09:30,110 --> 00:09:35,990
will accept any of the - akan names and

00:09:33,020 --> 00:09:37,730
just give you that icon and then

00:09:35,990 --> 00:09:39,320
keywords what they actually start typing

00:09:37,730 --> 00:09:41,720
to try to find them this is where you

00:09:39,320 --> 00:09:46,070
can specify the keywords where they try

00:09:41,720 --> 00:09:47,240
to search for it there's a quick - con

00:09:46,070 --> 00:09:50,620
cheat sheet

00:09:47,240 --> 00:09:53,660
both you've probably seen the - con

00:09:50,620 --> 00:09:55,730
resources from the dot org site but

00:09:53,660 --> 00:09:59,780
there's also a really cool cheat sheet

00:09:55,730 --> 00:10:03,080
the slides are up on my Twitter profile

00:09:59,780 --> 00:10:06,470
Meisner Meisner ism you could also just

00:10:03,080 --> 00:10:07,700
check out the WCA VL hash tag and it's

00:10:06,470 --> 00:10:09,320
probably I don't know four or five

00:10:07,700 --> 00:10:12,290
tweets down right now cuz I post it just

00:10:09,320 --> 00:10:13,880
a little while ago but yeah any of those

00:10:12,290 --> 00:10:16,310
icons on there just for some quick

00:10:13,880 --> 00:10:20,750
choices when you're creating these

00:10:16,310 --> 00:10:22,250
things really helpful once you have it

00:10:20,750 --> 00:10:24,170
registered once you had registered it

00:10:22,250 --> 00:10:25,460
with code then you can actually add

00:10:24,170 --> 00:10:27,500
fields to it in the way that you've

00:10:25,460 --> 00:10:29,710
added fields to lots of things with ACF

00:10:27,500 --> 00:10:31,670
over the years

00:10:29,710 --> 00:10:34,580
so I'm going to bounce back and forth

00:10:31,670 --> 00:10:36,260
real quick if you are a GUI user of ACF

00:10:34,580 --> 00:10:37,760
right at that point after it's

00:10:36,260 --> 00:10:39,800
registered which please do that in a

00:10:37,760 --> 00:10:43,820
plugin that's where that's really where

00:10:39,800 --> 00:10:46,550
that belongs you'll now have this option

00:10:43,820 --> 00:10:47,780
of block and you will be able to see all

00:10:46,550 --> 00:10:51,010
the different blocks that are available

00:10:47,780 --> 00:10:53,810
to to try to register it too

00:10:51,010 --> 00:10:57,260
okay this is what it looks like in code

00:10:53,810 --> 00:10:59,960
recognize the new option that we have

00:10:57,260 --> 00:11:01,820
for a parameter block and then we're

00:10:59,960 --> 00:11:03,800
specifying which one we're using that

00:11:01,820 --> 00:11:04,940
this would be in this in this example

00:11:03,800 --> 00:11:09,830
that should be like a CF slash

00:11:04,940 --> 00:11:11,510
testimonial minor note for people that

00:11:09,830 --> 00:11:15,140
really like to mess with this stuff if

00:11:11,510 --> 00:11:19,520
you try to feed at least right now if

00:11:15,140 --> 00:11:21,950
you try to feed a CF a slug for your

00:11:19,520 --> 00:11:24,980
block name with underscores it will

00:11:21,950 --> 00:11:27,080
convert them to dashes it's a weird

00:11:24,980 --> 00:11:30,500
thing I feel like I need to post some

00:11:27,080 --> 00:11:38,210
issue or something but just if that that

00:11:30,500 --> 00:11:40,270
was that wasted a whole day okay so we

00:11:38,210 --> 00:11:42,470
have the basics down now on how to

00:11:40,270 --> 00:11:45,410
register I mean it's really simple guys

00:11:42,470 --> 00:11:48,140
you're just registering the name and

00:11:45,410 --> 00:11:50,270
some details right it pops up in the the

00:11:48,140 --> 00:11:52,010
way that you would think or again use

00:11:50,270 --> 00:11:55,820
location with an array of array of

00:11:52,010 --> 00:11:57,470
arrays to designate where your fields

00:11:55,820 --> 00:12:01,850
are gonna go right that's example just

00:11:57,470 --> 00:12:05,660
using it some title but now we can bring

00:12:01,850 --> 00:12:07,340
twig or timber and I wanna I want to

00:12:05,660 --> 00:12:10,340
show it that Kaname between render

00:12:07,340 --> 00:12:12,260
template I'm just pointing to a file

00:12:10,340 --> 00:12:14,570
like hey here's where the the stuff's

00:12:12,260 --> 00:12:17,270
gonna be and it's gonna it it would pass

00:12:14,570 --> 00:12:24,080
some variables that are available to us

00:12:17,270 --> 00:12:26,390
within that context but again there's a

00:12:24,080 --> 00:12:29,830
couple of things that people like to use

00:12:26,390 --> 00:12:35,270
I like twig I also am a big advocate of

00:12:29,830 --> 00:12:39,500
blade use a template in language to keep

00:12:35,270 --> 00:12:41,230
your HTML clean please PHP is not really

00:12:39,500 --> 00:12:44,740
well built for it

00:12:41,230 --> 00:12:46,600
it it muddies up the code in my opinion

00:12:44,740 --> 00:12:48,580
if you can get away with it you don't

00:12:46,600 --> 00:12:50,470
have to deal with standards the

00:12:48,580 --> 00:12:52,960
distillate that are forcing you to keep

00:12:50,470 --> 00:12:55,210
with just PHP I highly recommend

00:12:52,960 --> 00:12:59,440
implementing some kind of templating

00:12:55,210 --> 00:13:03,850
system so this is us integrating timber

00:12:59,440 --> 00:13:06,160
slash twig with with a CFS registration

00:13:03,850 --> 00:13:08,260
so instead of using render template like

00:13:06,160 --> 00:13:10,240
we see at the bottom there we're just

00:13:08,260 --> 00:13:11,830
using render callback now there's a

00:13:10,240 --> 00:13:13,840
couple different ways we could try to go

00:13:11,830 --> 00:13:15,400
about this we could have done that kind

00:13:13,840 --> 00:13:18,070
of logic in that template or we're

00:13:15,400 --> 00:13:19,600
sending them I'm just using a simple

00:13:18,070 --> 00:13:22,750
anonymous function inside of our

00:13:19,600 --> 00:13:25,180
callback to kind of set up a format of

00:13:22,750 --> 00:13:27,640
what what I would do most of the time if

00:13:25,180 --> 00:13:30,300
you've used timber before which is the

00:13:27,640 --> 00:13:33,640
integration but like a really great

00:13:30,300 --> 00:13:37,510
well-built integration between WordPress

00:13:33,640 --> 00:13:38,050
and twig does get context is super super

00:13:37,510 --> 00:13:40,300
powerful

00:13:38,050 --> 00:13:41,680
so that grabs a whole bunch of data that

00:13:40,300 --> 00:13:43,660
they predict that we would actually need

00:13:41,680 --> 00:13:46,630
it's very performant it caches really

00:13:43,660 --> 00:13:48,490
well now we're also adding information

00:13:46,630 --> 00:13:52,540
that gets passed in from that callback

00:13:48,490 --> 00:13:55,780
the block is preview right we're tagging

00:13:52,540 --> 00:13:57,550
that on and then we're even getting all

00:13:55,780 --> 00:13:58,450
the fields from ACF this stuff plays

00:13:57,550 --> 00:14:00,640
really well together

00:13:58,450 --> 00:14:04,330
and then we pass that entire variable

00:14:00,640 --> 00:14:07,180
context into where we're rendering our

00:14:04,330 --> 00:14:09,970
twig template and now we now we have

00:14:07,180 --> 00:14:13,210
like a system if we keep doing this this

00:14:09,970 --> 00:14:16,510
way you can set up a whole bunch of your

00:14:13,210 --> 00:14:23,020
custom blocks of sort over time right so

00:14:16,510 --> 00:14:24,520
if you have twenty five each site that

00:14:23,020 --> 00:14:25,270
you build for your clients most of the

00:14:24,520 --> 00:14:27,400
things that you're building are not

00:14:25,270 --> 00:14:29,590
unique right they're just not there

00:14:27,400 --> 00:14:31,720
they're using the same fields there's

00:14:29,590 --> 00:14:34,870
headings and descriptions and buttons

00:14:31,720 --> 00:14:36,310
and its call to action and you can you

00:14:34,870 --> 00:14:38,290
can pre-register and pre build these

00:14:36,310 --> 00:14:39,700
things over time and your the way that

00:14:38,290 --> 00:14:41,800
you like to do it with maybe whatever

00:14:39,700 --> 00:14:45,130
the accessibility standards that you

00:14:41,800 --> 00:14:47,650
want in there with the HTML html5 tags

00:14:45,130 --> 00:14:51,430
that you want so you can build that up

00:14:47,650 --> 00:14:53,200
over time and and have these set up but

00:14:51,430 --> 00:14:54,580
like what you've probably done with

00:14:53,200 --> 00:14:57,339
flexible content or

00:14:54,580 --> 00:15:00,940
most of us that do this work this way

00:14:57,339 --> 00:15:03,279
have that would do the same thing in

00:15:00,940 --> 00:15:04,839
fact depending on how those templates

00:15:03,279 --> 00:15:07,540
are set up for your flexible content

00:15:04,839 --> 00:15:09,370
it's not too hard to just use exactly

00:15:07,540 --> 00:15:12,310
what you have and make sure that the

00:15:09,370 --> 00:15:13,899
data is mapped the same way to that new

00:15:12,310 --> 00:15:15,579
typically you have to rebuild it right

00:15:13,899 --> 00:15:18,490
just now you can just switch over to

00:15:15,579 --> 00:15:27,399
Gutenberg okay

00:15:18,490 --> 00:15:28,480
I always anecdote get fields I always

00:15:27,399 --> 00:15:30,700
kind of freaked me out it and feel like

00:15:28,480 --> 00:15:34,510
that was very performant but the way it

00:15:30,700 --> 00:15:36,220
leverages the caching system within

00:15:34,510 --> 00:15:38,260
WordPress I think it's I think it's

00:15:36,220 --> 00:15:39,550
plenty fine so if that's anywhere in

00:15:38,260 --> 00:15:42,550
your brain like ooh I don't know about

00:15:39,550 --> 00:15:45,600
doing that actually it's decent it's

00:15:42,550 --> 00:15:45,600
fine it's just fine

00:15:46,500 --> 00:15:52,329
okay so trying to actually utilize twig

00:15:50,010 --> 00:15:55,000
this is this where I get to show off why

00:15:52,329 --> 00:15:57,820
why I think it's simpler and why I think

00:15:55,000 --> 00:16:00,279
it creates drier code literally have to

00:15:57,820 --> 00:16:03,070
type less I don't about you but I but I

00:16:00,279 --> 00:16:05,620
get realistic if I'm in HTML and I'm

00:16:03,070 --> 00:16:07,540
bouncing in and out of or I'm gonna PHP

00:16:05,620 --> 00:16:10,060
file and I'm bouncing in and out of HTML

00:16:07,540 --> 00:16:13,420
I really hate brackets and question

00:16:10,060 --> 00:16:15,880
marks in PHP and I mean it's it's just

00:16:13,420 --> 00:16:17,170
it's a little infuriating it's not a

00:16:15,880 --> 00:16:21,040
very good system and if you've ever used

00:16:17,170 --> 00:16:24,610
anything like blade or mustache or any

00:16:21,040 --> 00:16:27,550
template Ingush anything else

00:16:24,610 --> 00:16:30,700
it feels pretty darn nice right it's a

00:16:27,550 --> 00:16:33,610
lot easier to pass stuff around and too

00:16:30,700 --> 00:16:38,800
cute so this is an example of how I do

00:16:33,610 --> 00:16:42,940
like BEM structures where my selectors

00:16:38,800 --> 00:16:45,339
all over my my small component will kind

00:16:42,940 --> 00:16:47,500
of match up and this is this is one

00:16:45,339 --> 00:16:51,519
strategy of doing that to keep things

00:16:47,500 --> 00:16:54,250
really dry if I've got if I've got

00:16:51,519 --> 00:16:56,079
another developer who is really

00:16:54,250 --> 00:16:59,769
technically proficient but isn't very

00:16:56,079 --> 00:17:01,570
good at naming things and I and I go oh

00:16:59,769 --> 00:17:06,459
okay well I understand that you name

00:17:01,570 --> 00:17:07,569
that image left text right block can we

00:17:06,459 --> 00:17:08,140
just call that like a feature at or

00:17:07,569 --> 00:17:10,270
something some

00:17:08,140 --> 00:17:12,160
it's gonna feel a little bit more

00:17:10,270 --> 00:17:14,820
meaningful to and that's content-driven

00:17:12,160 --> 00:17:17,890
rather than being so literal

00:17:14,820 --> 00:17:20,260
that's this is a this kind of approach

00:17:17,890 --> 00:17:22,150
can help with quick renaming of things

00:17:20,260 --> 00:17:23,980
like that I'm in quick refactoring

00:17:22,150 --> 00:17:26,770
without making many changes are touching

00:17:23,980 --> 00:17:28,630
much code to do it here's a more complex

00:17:26,770 --> 00:17:30,820
example a more realistic sample I think

00:17:28,630 --> 00:17:38,350
this is like taken from a hero thing

00:17:30,820 --> 00:17:40,060
that I've set up so the security on it

00:17:38,350 --> 00:17:42,420
is pretty darn decent and there's some

00:17:40,060 --> 00:17:45,100
really good filters and features for it

00:17:42,420 --> 00:17:47,500
you'll see at the top I'm I'm kind of

00:17:45,100 --> 00:17:51,370
listing out classes and I'm

00:17:47,500 --> 00:17:55,890
interpolating block a line with width so

00:17:51,370 --> 00:17:58,630
that I can feed in the choices from

00:17:55,890 --> 00:18:00,010
basically every block or most most

00:17:58,630 --> 00:18:02,380
blocks that you have right you can kind

00:18:00,010 --> 00:18:05,170
of choose the width and how that's where

00:18:02,380 --> 00:18:06,700
we're feeding that in and and I've got

00:18:05,170 --> 00:18:10,090
CSS written right that aligns with

00:18:06,700 --> 00:18:13,300
modifications to it it'll join those

00:18:10,090 --> 00:18:15,670
together an array and then I can spit

00:18:13,300 --> 00:18:18,430
them out and sort of implode them with

00:18:15,670 --> 00:18:21,340
join and separate them with a space so I

00:18:18,430 --> 00:18:25,420
can really pretty easily feed classes in

00:18:21,340 --> 00:18:28,150
and then your your bar e is just a

00:18:25,420 --> 00:18:30,010
general escaper that's pretty good it's

00:18:28,150 --> 00:18:33,700
pretty good you can get a little bit

00:18:30,010 --> 00:18:35,530
more specific you can jump like a timber

00:18:33,700 --> 00:18:37,930
which implements twig for WordPress

00:18:35,530 --> 00:18:42,130
right it'll add a couple of extra

00:18:37,930 --> 00:18:44,080
abilities like escaping URL

00:18:42,130 --> 00:18:47,490
there's also internationalization

00:18:44,080 --> 00:18:51,250
features that are pretty pretty decent

00:18:47,490 --> 00:18:55,300
so maybe the last thing I would say

00:18:51,250 --> 00:18:58,870
about this is you can also really get

00:18:55,300 --> 00:19:00,280
into making your code modular buttons we

00:18:58,870 --> 00:19:01,570
we like to keep all the buttons

00:19:00,280 --> 00:19:06,250
approximately the same I don't like

00:19:01,570 --> 00:19:09,070
rewriting the button markup every single

00:19:06,250 --> 00:19:12,160
time that's kind of silly so I can just

00:19:09,070 --> 00:19:14,290
feed it and I can even scope it so they

00:19:12,160 --> 00:19:17,380
have literal language like include this

00:19:14,290 --> 00:19:21,500
path with this object and feeding things

00:19:17,380 --> 00:19:23,390
to it only and then all of a sudden I've

00:19:21,500 --> 00:19:25,970
really narrowed how much that component

00:19:23,390 --> 00:19:29,080
knows as it's being brought in so that

00:19:25,970 --> 00:19:32,210
feels very secure and very scoped to us

00:19:29,080 --> 00:19:34,130
and a note about it so one of the great

00:19:32,210 --> 00:19:37,510
things about this workflow is that you

00:19:34,130 --> 00:19:41,120
can create a really content centric

00:19:37,510 --> 00:19:46,820
version of the layout right if content

00:19:41,120 --> 00:19:50,090
is king yeah I know I said it and we're

00:19:46,820 --> 00:19:51,740
really trying to push users and our

00:19:50,090 --> 00:19:52,880
clients and everybody to think about

00:19:51,740 --> 00:19:55,550
what they're saying that should be

00:19:52,880 --> 00:19:56,570
meaningful it's not really about what it

00:19:55,550 --> 00:19:58,190
looks like it's about what trying to

00:19:56,570 --> 00:20:01,370
convey first and then everything comes

00:19:58,190 --> 00:20:04,060
on top of that I think you Tania's

00:20:01,370 --> 00:20:08,090
giving us a really great opportunity to

00:20:04,060 --> 00:20:09,920
I am I actually believe in it more than

00:20:08,090 --> 00:20:13,310
something like beaver builder in some

00:20:09,920 --> 00:20:16,540
ways because you are abstracting the

00:20:13,310 --> 00:20:19,730
thought of what is visual from what is

00:20:16,540 --> 00:20:21,590
communicated without aesthetics and I

00:20:19,730 --> 00:20:24,380
think that's good I think the the

00:20:21,590 --> 00:20:26,660
focusing on language is a really good

00:20:24,380 --> 00:20:32,000
opportunity and they're trying to create

00:20:26,660 --> 00:20:35,210
a seamless ish version of that so his

00:20:32,000 --> 00:20:38,540
preview is the way that we can limit or

00:20:35,210 --> 00:20:40,430
control how it looks otherwise you

00:20:38,540 --> 00:20:42,560
probably run into that a little bit or

00:20:40,430 --> 00:20:44,780
had experience with that if you've been

00:20:42,560 --> 00:20:50,150
trying to build these like custom custom

00:20:44,780 --> 00:20:52,400
and doing them in JSX so at this point I

00:20:50,150 --> 00:20:54,200
want to show you some of the code right

00:20:52,400 --> 00:21:01,700
I want to show you what some of this

00:20:54,200 --> 00:21:03,050
looks like I need to unmask this which

00:21:01,700 --> 00:21:09,520
side of the screen did it want to go to

00:21:03,050 --> 00:21:09,520
good okay and

00:21:14,180 --> 00:21:21,260
I'll just take this whole thing over all

00:21:19,110 --> 00:21:21,260
right

00:21:26,870 --> 00:21:31,640
this is gonna be difficult for me I'm

00:21:29,360 --> 00:21:32,990
not gonna actually turn how bad is this

00:21:31,640 --> 00:21:37,400
Camry oh you're gonna be mad at me if I

00:21:32,990 --> 00:21:39,470
actually turn around a little bit I feel

00:21:37,400 --> 00:21:40,570
like I should I feel like I should turn

00:21:39,470 --> 00:21:44,090
me on

00:21:40,570 --> 00:21:54,220
just place thank you for the reasonable

00:21:44,090 --> 00:21:56,330
suggestion there we go much better

00:21:54,220 --> 00:22:06,350
sometimes you just need someone to say

00:21:56,330 --> 00:22:08,240
the obvious thing okay so ACF has a

00:22:06,350 --> 00:22:10,400
pretty interesting like visual and

00:22:08,240 --> 00:22:19,010
editing mode that they that they turn on

00:22:10,400 --> 00:22:28,100
after this is maybe yeah oh I mean I

00:22:19,010 --> 00:22:33,020
could draw I really would defend it

00:22:28,100 --> 00:22:38,800
folks I think I I think Guttenberg at

00:22:33,020 --> 00:22:43,310
least in the context of giving us a more

00:22:38,800 --> 00:22:44,840
universal way like fine divvy beaver

00:22:43,310 --> 00:22:46,850
builder Elementor all these people

00:22:44,840 --> 00:22:48,650
building these things these are commonly

00:22:46,850 --> 00:22:51,680
these are common practices on how people

00:22:48,650 --> 00:22:52,940
are building WordPress sites well maybe

00:22:51,680 --> 00:22:55,790
they start putting their energy into the

00:22:52,940 --> 00:22:57,980
blocks right and they kind of sent you

00:22:55,790 --> 00:22:59,450
know rally around an API who knows what

00:22:57,980 --> 00:23:01,990
we'll see in the next five years but I

00:22:59,450 --> 00:23:07,310
hope that it becomes something like that

00:23:01,990 --> 00:23:10,070
and for us custom builders of things I

00:23:07,310 --> 00:23:13,000
think I think ACF and the way Elliott's

00:23:10,070 --> 00:23:15,980
implemented this is really really strong

00:23:13,000 --> 00:23:26,170
okay so yeah there's this little switch

00:23:15,980 --> 00:23:30,190
to editor view I am wanting to bring the

00:23:26,170 --> 00:23:33,970
Julian I need one more unhhhh stupid

00:23:30,190 --> 00:23:35,590
thing to happen and that is how do I

00:23:33,970 --> 00:23:40,230
turn off the sidebar on the right hand

00:23:35,590 --> 00:23:46,620
side I guess I just never do that

00:23:40,230 --> 00:23:49,810
good lord okay thank you whoa all right

00:23:46,620 --> 00:23:51,700
right so by default it's gonna be like

00:23:49,810 --> 00:23:53,140
this there's some sort of some presets

00:23:51,700 --> 00:23:54,940
with Gutenberg if you haven't already

00:23:53,140 --> 00:23:57,610
noticed or you can sort of change your

00:23:54,940 --> 00:24:00,520
style right of how you're interacting

00:23:57,610 --> 00:24:02,800
with it but this is if this is about

00:24:00,520 --> 00:24:05,200
what it'll be by default so I'm gonna

00:24:02,800 --> 00:24:07,660
swap this back over to like preview mode

00:24:05,200 --> 00:24:10,540
and instead of editing the content

00:24:07,660 --> 00:24:13,600
directly on the block eight he puts it

00:24:10,540 --> 00:24:16,540
over on the side here right and it gets

00:24:13,600 --> 00:24:18,640
a little scrunched I'm not super in love

00:24:16,540 --> 00:24:19,960
with this but it's reasonable and plus

00:24:18,640 --> 00:24:24,340
you can always switch back over to

00:24:19,960 --> 00:24:26,050
something like this view here so here's

00:24:24,340 --> 00:24:27,610
my heading here's my subheading also

00:24:26,050 --> 00:24:31,180
show you the component how I've got it

00:24:27,610 --> 00:24:34,030
registered when I'm using this I'm crude

00:24:31,180 --> 00:24:36,540
yeah yeah I might have to switch to the

00:24:34,030 --> 00:24:36,540
mic anyway

00:24:42,340 --> 00:24:50,630
when I'm using that's great well when

00:24:48,320 --> 00:24:52,190
I'm using these tools I like to try to

00:24:50,630 --> 00:24:54,710
build that out in a class that I'm

00:24:52,190 --> 00:24:56,270
extending right I've got I've got most

00:24:54,710 --> 00:24:58,870
of that already set up and I keep it

00:24:56,270 --> 00:25:02,480
really minimal so I have a register

00:24:58,870 --> 00:25:05,150
method where I feed it just a couple of

00:25:02,480 --> 00:25:07,820
things including like a custom way where

00:25:05,150 --> 00:25:09,500
I've got I'm sort of deciding whether or

00:25:07,820 --> 00:25:11,590
not there's on queues that go with this

00:25:09,500 --> 00:25:14,840
and I'm trying to heavily leveraged

00:25:11,590 --> 00:25:17,390
htv-2 and really break up this CSS and

00:25:14,840 --> 00:25:20,420
JavaScript for every single component

00:25:17,390 --> 00:25:23,150
into its own thing we're loading only as

00:25:20,420 --> 00:25:24,530
much code as we absolutely need but

00:25:23,150 --> 00:25:25,970
that's a little bit more of a custom

00:25:24,530 --> 00:25:27,860
build but that's what Gutenberg is

00:25:25,970 --> 00:25:29,840
trying to push you to do right and the

00:25:27,860 --> 00:25:31,940
way that that block system is trying to

00:25:29,840 --> 00:25:34,130
push you to do which is very good

00:25:31,940 --> 00:25:35,740
practice with HTTP to which we can all

00:25:34,130 --> 00:25:37,730
kind of reasonably assume at this point

00:25:35,740 --> 00:25:41,770
because if it's not there then there's

00:25:37,730 --> 00:25:46,520
bigger problems at play usually okay so

00:25:41,770 --> 00:25:52,130
yeah this is me registering a block this

00:25:46,520 --> 00:25:55,240
is imagine how long this takes me dot

00:25:52,130 --> 00:25:58,100
very right I've already got like

00:25:55,240 --> 00:26:00,290
predefined things of how what my fields

00:25:58,100 --> 00:26:01,970
are and how I like them in ACF like I've

00:26:00,290 --> 00:26:06,710
just got a little associative arrays set

00:26:01,970 --> 00:26:08,570
up ahead of time I've got a whole method

00:26:06,710 --> 00:26:11,450
system and like I'm hooking into the

00:26:08,570 --> 00:26:13,310
right things for that register method so

00:26:11,450 --> 00:26:17,480
that I just feed it exactly what it

00:26:13,310 --> 00:26:19,010
needs to know and no more and I'm sort

00:26:17,480 --> 00:26:21,110
of just registering my own little models

00:26:19,010 --> 00:26:23,210
right and then I have little pseudo

00:26:21,110 --> 00:26:24,620
controllers where I can filter the

00:26:23,210 --> 00:26:26,960
results before it gets to the template

00:26:24,620 --> 00:26:29,690
if I really want to most time I don't

00:26:26,960 --> 00:26:33,740
really need to and it's just hooked up

00:26:29,690 --> 00:26:39,860
with a pattern of views that I take into

00:26:33,740 --> 00:26:42,860
the theme and my hero for this my hero

00:26:39,860 --> 00:26:46,390
module or block for this is really

00:26:42,860 --> 00:26:46,390
simplistic you'll see similarly

00:26:47,110 --> 00:26:51,519
no good yeah this is this is how I this

00:26:50,019 --> 00:26:54,360
is how I kind of will divide my work

00:26:51,519 --> 00:26:56,350
right on the left-hand side here so

00:26:54,360 --> 00:26:57,789
there's my twig function this was

00:26:56,350 --> 00:27:07,080
actually passing into here collectors

00:26:57,789 --> 00:27:07,080
we're using here all over the place yeah

00:27:07,289 --> 00:27:16,179
and I keep the code that is associated

00:27:12,100 --> 00:27:21,010
with a particular component or section

00:27:16,179 --> 00:27:23,679
thing altogether and to me this is felt

00:27:21,010 --> 00:27:24,970
like a very very good workflow and I

00:27:23,679 --> 00:27:27,490
know that it for front-end performance

00:27:24,970 --> 00:27:29,169
it's pretty great

00:27:27,490 --> 00:27:30,299
it's actually leveraging the on cue

00:27:29,169 --> 00:27:34,320
system in a way that I think it

00:27:30,299 --> 00:27:34,320
WordPress one of us to please

00:27:49,210 --> 00:27:58,460
over here yeah okay so let's take the

00:27:54,920 --> 00:27:59,810
question was is roughly can you help

00:27:58,460 --> 00:28:01,010
connect the dots between the code that

00:27:59,810 --> 00:28:04,940
you're showing me and what that white

00:28:01,010 --> 00:28:10,400
screen is actually doing yes I can so

00:28:04,940 --> 00:28:13,670
let's take all right so if God's content

00:28:10,400 --> 00:28:17,270
in here custom here or whatever I'm just

00:28:13,670 --> 00:28:18,500
throwing in some text I'll swap back

00:28:17,270 --> 00:28:25,280
over it's hard to do this while holding

00:28:18,500 --> 00:28:27,230
a mic it doesn't feel right right okay

00:28:25,280 --> 00:28:30,830
and on the top right hand side I've got

00:28:27,230 --> 00:28:35,210
all this nonsense in here what is what

00:28:30,830 --> 00:28:38,630
this is my actual larger object with all

00:28:35,210 --> 00:28:43,810
my settings to make this exist this is

00:28:38,630 --> 00:28:43,810
coming from a CFS API to create a block

00:28:45,460 --> 00:28:53,240
so in actually using Gutenberg

00:28:49,400 --> 00:28:57,230
I am number one key tip filter like like

00:28:53,240 --> 00:29:00,290
whitelist blocks you should you should

00:28:57,230 --> 00:29:03,200
just nuke everything and then start

00:29:00,290 --> 00:29:05,990
allowing only things that you want so

00:29:03,200 --> 00:29:09,080
for me I don't have most of the

00:29:05,990 --> 00:29:12,170
out-of-the-box guttenberg blocks only

00:29:09,080 --> 00:29:14,210
have a few that I allow and I take them

00:29:12,170 --> 00:29:16,220
in only if I know that maybe my view

00:29:14,210 --> 00:29:18,620
actually has styling for them and I've

00:29:16,220 --> 00:29:20,390
actually built it out is what I'm gonna

00:29:18,620 --> 00:29:23,810
use them usually it's just the I give it

00:29:20,390 --> 00:29:26,600
just as much as I want okay so yeah I

00:29:23,810 --> 00:29:28,310
have all these layout elements I've got

00:29:26,600 --> 00:29:31,100
this hero custom one where he typed a

00:29:28,310 --> 00:29:32,540
bunch of garbage and I can keep

00:29:31,100 --> 00:29:34,730
selecting those and right and pull those

00:29:32,540 --> 00:29:37,250
in and this is that's kind of like

00:29:34,730 --> 00:29:39,730
choosing the modules that you have with

00:29:37,250 --> 00:29:44,300
flexible content if you use it that way

00:29:39,730 --> 00:29:46,010
so I think this is the path forward I

00:29:44,300 --> 00:29:48,500
don't see a huge advantage over a

00:29:46,010 --> 00:29:51,010
flexible content at at this point one

00:29:48,500 --> 00:29:51,010
and two

00:30:08,919 --> 00:30:23,510
you owe me open up the database look at

00:30:11,240 --> 00:30:24,679
it let's just look at it let's just all

00:30:23,510 --> 00:30:25,880
take a look at it right now I'm dumb

00:30:24,679 --> 00:30:30,169
game let's do it

00:30:25,880 --> 00:30:42,890
okay so what do we got we got post 38

00:30:30,169 --> 00:30:44,390
all right so let's get into 38 yeah just

00:30:42,890 --> 00:30:49,549
write down all the md5 hashes or

00:30:44,390 --> 00:30:56,929
something okay so it's the post content

00:30:49,549 --> 00:31:04,179
with one ID 38 and this is what we've

00:30:56,929 --> 00:31:14,980
got to work with so this yeah you're

00:31:04,179 --> 00:31:20,260
need more hands to do things yeah

00:31:14,980 --> 00:31:20,260
that'll be maybe kind of visible kind of

00:31:28,130 --> 00:31:39,620
right so I think there will be some some

00:31:35,510 --> 00:31:42,610
degree of complications there but it can

00:31:39,620 --> 00:31:44,929
also be set up pretty easily to - I

00:31:42,610 --> 00:31:51,289
don't know I I think I think that's a

00:31:44,929 --> 00:31:53,690
fair a fair concern the state it's still

00:31:51,289 --> 00:31:55,160
there's still stuff definitely saved to

00:31:53,690 --> 00:31:57,020
post meta we don't necessarily have to

00:31:55,160 --> 00:31:58,520
access it that way because you sort of

00:31:57,020 --> 00:32:02,169
have like a pre-rendered pre cached

00:31:58,520 --> 00:32:02,169
version of that right

00:32:10,670 --> 00:32:21,620
so I'll just just clicking pretty well

00:32:16,790 --> 00:32:23,260
that's lovely that's what you want to

00:32:21,620 --> 00:32:32,650
that's what you wanted

00:32:23,260 --> 00:32:36,140
okay so here's an example so right okay

00:32:32,650 --> 00:32:46,070
I'm not hitting updates all right

00:32:36,140 --> 00:32:49,640
nothing yeah so I think that's fair and

00:32:46,070 --> 00:32:50,810
I'd be curious on why like how much

00:32:49,640 --> 00:33:01,400
would perform is concerned

00:32:50,810 --> 00:33:07,270
can we actually quantify that to be now

00:33:01,400 --> 00:33:07,270
if this so what this is probably saving

00:33:14,590 --> 00:33:24,650
it very well could be the rendering

00:33:18,080 --> 00:33:30,920
mechanism there I could see that now so

00:33:24,650 --> 00:33:32,210
so well I we probably ought to dig into

00:33:30,920 --> 00:33:35,750
this sever from from this particular

00:33:32,210 --> 00:33:39,110
talk but breakout session for that but I

00:33:35,750 --> 00:33:42,680
think that even just even minor saves I

00:33:39,110 --> 00:33:44,590
know the kind of save and versus update

00:33:42,680 --> 00:33:47,120
I think is the interesting discussion

00:33:44,590 --> 00:33:50,560
anyways with breakout we'll break that

00:33:47,120 --> 00:33:50,560
out later John

00:33:59,399 --> 00:34:04,299
for me personally if I let me restate

00:34:03,159 --> 00:34:16,240
that question how am i handing

00:34:04,299 --> 00:34:18,970
portability of the blocks sure for me it

00:34:16,240 --> 00:34:23,260
is a minimum of two things I've got to

00:34:18,970 --> 00:34:26,169
bring over I treated in an MVC ish kind

00:34:23,260 --> 00:34:28,690
of way right I have a model I have to

00:34:26,169 --> 00:34:31,629
copy a model over and then I have that

00:34:28,690 --> 00:34:34,839
the view which is really sort of being

00:34:31,629 --> 00:34:36,790
handled almost in a react component kind

00:34:34,839 --> 00:34:39,669
of way where I've got my little chunk of

00:34:36,790 --> 00:34:41,139
pieces so I have to bring over those two

00:34:39,669 --> 00:34:45,790
things specifically

00:34:41,139 --> 00:34:48,399
so here's blocks right and I have or

00:34:45,790 --> 00:34:50,320
here let me go back to my plugin so this

00:34:48,399 --> 00:34:54,089
will be my core plug-in of the custom

00:34:50,320 --> 00:34:57,490
work that I'm doing and I've got a model

00:34:54,089 --> 00:35:00,250
for Hiro or whatever one of these I've

00:34:57,490 --> 00:35:02,890
got to bring one of those over and it's

00:35:00,250 --> 00:35:04,329
likely using the exact same or extending

00:35:02,890 --> 00:35:06,280
the exact same class of how I'm

00:35:04,329 --> 00:35:08,200
registering them so as long as that

00:35:06,280 --> 00:35:10,450
syntax is the same it matches my version

00:35:08,200 --> 00:35:14,770
numbers or something I'm good

00:35:10,450 --> 00:35:17,170
and then I copy over the files inside so

00:35:14,770 --> 00:35:18,910
I have a blocks inside of my I haven't

00:35:17,170 --> 00:35:22,810
views folder in my theme and here's

00:35:18,910 --> 00:35:25,930
blocks and I would copy over my you know

00:35:22,810 --> 00:35:27,190
directory that match that model that's

00:35:25,930 --> 00:35:31,329
it I just got a copy over those two

00:35:27,190 --> 00:35:35,609
things and I'm good so does anybody have

00:35:31,329 --> 00:35:35,609
more questions before I yeah please

00:35:51,690 --> 00:35:54,400
I don't know that I have an opinion on

00:35:53,460 --> 00:35:56,030
this

00:35:54,400 --> 00:36:03,410
[Music]

00:35:56,030 --> 00:36:11,490
yeah what is my opinion on on

00:36:03,410 --> 00:36:14,880
auto-generating sorry yes though I think

00:36:11,490 --> 00:36:21,240
that how twig handles their generation

00:36:14,880 --> 00:36:23,120
of PHP is secure I do now I've got the

00:36:21,240 --> 00:36:38,310
bigger problem of another third-party

00:36:23,120 --> 00:36:41,390
right what I cannot speak to is whether

00:36:38,310 --> 00:36:46,050
or not that should be a valid concern I

00:36:41,390 --> 00:36:49,680
don't think it is it could depend on the

00:36:46,050 --> 00:36:51,680
environment sure and I would need to see

00:36:49,680 --> 00:36:54,630
a specific use case in order to

00:36:51,680 --> 00:36:58,860
understand the kind of problems that we

00:36:54,630 --> 00:37:01,050
would run into but I I kind of

00:36:58,860 --> 00:37:02,910
understand what you're saying but I

00:37:01,050 --> 00:37:04,770
don't think that that's a real problem

00:37:02,910 --> 00:37:07,320
but I but it sounds like you actually

00:37:04,770 --> 00:37:09,360
think that it is and I would love to get

00:37:07,320 --> 00:37:12,470
beer and try to hear that out because I

00:37:09,360 --> 00:37:12,470
would like to know actually

00:37:27,650 --> 00:37:38,970
please get up here with me hold those

00:37:29,640 --> 00:37:41,280
down more questions okay okay so so you

00:37:38,970 --> 00:37:42,480
can see sort of my workflow maybe maybe

00:37:41,280 --> 00:37:44,520
the only other thing that I would tack

00:37:42,480 --> 00:37:46,860
on to this because you've gotten a very

00:37:44,520 --> 00:37:50,390
literal version of how I do this

00:37:46,860 --> 00:37:54,330
personally and I'm doing it right now is

00:37:50,390 --> 00:37:56,940
in order for if you're using any kind of

00:37:54,330 --> 00:37:59,460
like modern tooling for front-end assets

00:37:56,940 --> 00:38:02,580
that can get a little bit it gets a

00:37:59,460 --> 00:38:05,250
little bit of a pain in the butt I I

00:38:02,580 --> 00:38:09,510
have like kind of a complex modern gulp

00:38:05,250 --> 00:38:12,060
file thing where I am globbing all over

00:38:09,510 --> 00:38:14,790
the place and spitting out lots of files

00:38:12,060 --> 00:38:18,540
so if we look at my dist folder and we

00:38:14,790 --> 00:38:22,260
look at blocks and so here's you know

00:38:18,540 --> 00:38:24,000
here's hero and I've got you know my

00:38:22,260 --> 00:38:26,000
JavaScript version or my JavaScript my

00:38:24,000 --> 00:38:27,690
these are might look like minified

00:38:26,000 --> 00:38:29,940
production-ready versions of these

00:38:27,690 --> 00:38:31,710
things and it gets a little dicey

00:38:29,940 --> 00:38:33,450
because I've got a gulp flow with that

00:38:31,710 --> 00:38:35,400
that's actually leveraging webpack so

00:38:33,450 --> 00:38:36,900
that I can do imports and exports for my

00:38:35,400 --> 00:38:39,000
little snippets of JavaScript that are

00:38:36,900 --> 00:38:40,800
deep that are for those components it's

00:38:39,000 --> 00:38:44,580
kind of a pain in the butt to set up the

00:38:40,800 --> 00:38:48,600
tooling for it I am working with it and

00:38:44,580 --> 00:38:55,440
improving it piece by piece as I go to a

00:38:48,600 --> 00:39:11,430
public repo that we host it's just not

00:38:55,440 --> 00:39:13,380
not enough it's called outset and so I

00:39:11,430 --> 00:39:16,470
keep updating this right now it's on a

00:39:13,380 --> 00:39:18,930
version two is where I where I swapped

00:39:16,470 --> 00:39:22,170
from flexible content to real Guttenberg

00:39:18,930 --> 00:39:24,869
support so feel free to look at how I do

00:39:22,170 --> 00:39:27,869
it and steal from it as much as you want

00:39:24,869 --> 00:39:28,730
if any of its helpful at all or suggest

00:39:27,869 --> 00:39:49,490
to me how I could be do

00:39:28,730 --> 00:39:54,010
that better that questions one too like

00:39:49,490 --> 00:39:54,010
the render template like they're like

00:39:55,330 --> 00:40:13,930
the question is okay never sorry okay

00:40:10,120 --> 00:40:17,210
the question is how am i handling

00:40:13,930 --> 00:40:19,420
registering those assets in order so

00:40:17,210 --> 00:40:24,650
that they can be on feud conditionally

00:40:19,420 --> 00:40:26,810
so the ACF or Zoe this is what Gutenberg

00:40:24,650 --> 00:40:28,310
does anyways right or that the register

00:40:26,810 --> 00:40:33,280
and block functions like if this is how

00:40:28,310 --> 00:40:37,000
this works but they make it pretty easy

00:40:33,280 --> 00:40:44,630
Elliott made it pretty darn easy and

00:40:37,000 --> 00:40:49,850
inside I am in the wrong thing I'll show

00:40:44,630 --> 00:40:52,010
you how mandala yet so I'm doing a

00:40:49,850 --> 00:40:58,190
little bit of a silly thing where I

00:40:52,010 --> 00:41:02,300
wanted easy on queues and so I a a check

00:40:58,190 --> 00:41:05,810
for four options and if I feed it styles

00:41:02,300 --> 00:41:09,260
or script then it will on queue and

00:41:05,810 --> 00:41:12,890
associated or it will look for one it'll

00:41:09,260 --> 00:41:18,880
look for hero dot CSS over here ojs what

00:41:12,890 --> 00:41:18,880
have you the actual on queue happens

00:41:40,950 --> 00:41:50,010
I feel like I'm taking crazy pills here

00:41:42,830 --> 00:41:51,870
alright so view dis fell great great it

00:41:50,010 --> 00:41:54,390
generate those oh that's right took it

00:41:51,870 --> 00:41:56,340
into a separate thing alright so I am

00:41:54,390 --> 00:41:57,900
generating the paths based on the

00:41:56,340 --> 00:41:59,430
structure that that I've kind of

00:41:57,900 --> 00:42:01,710
predetermined to what that I want I know

00:41:59,430 --> 00:42:06,150
it's always gonna be disk blocks hero

00:42:01,710 --> 00:42:07,650
hero dot whatever right and and then I'm

00:42:06,150 --> 00:42:09,750
just using a traditional on cue system

00:42:07,650 --> 00:42:12,950
to do that I'll just register them all

00:42:09,750 --> 00:42:15,000
and then if those blocks are called then

00:42:12,950 --> 00:42:20,400
Gutenberg's already set up to pull those

00:42:15,000 --> 00:42:22,590
in does that make any sense okay it's

00:42:20,400 --> 00:42:24,150
it's similar to to traditional you don't

00:42:22,590 --> 00:42:25,800
the only thing that's different is you

00:42:24,150 --> 00:42:28,080
don't have to when you're when you're

00:42:25,800 --> 00:42:30,540
registering them with Guttenberg you

00:42:28,080 --> 00:42:33,990
don't have to actually call the on cue

00:42:30,540 --> 00:42:36,540
per time right if hopefully some of you

00:42:33,990 --> 00:42:40,200
are registering them and then using you

00:42:36,540 --> 00:42:41,310
know on cue script mid the slug of

00:42:40,200 --> 00:42:43,500
whatever it is that you've registered

00:42:41,310 --> 00:42:46,320
before that way that asset only loads in

00:42:43,500 --> 00:42:48,900
if that thing is being brought in rather

00:42:46,320 --> 00:42:50,730
than having to do that the blocks are

00:42:48,900 --> 00:43:00,060
set up to kind of think that way to

00:42:50,730 --> 00:43:03,900
begin with does that make sense yeah I'm

00:43:00,060 --> 00:43:06,990
not I'm not setting that up there that

00:43:03,900 --> 00:43:10,410
is actually I all I have to do is feed

00:43:06,990 --> 00:43:13,410
the path for the on cue script or on cue

00:43:10,410 --> 00:43:15,090
style together so that's this is where

00:43:13,410 --> 00:43:16,080
I'm doing that part I didn't explain

00:43:15,090 --> 00:43:21,030
this very well sorry

00:43:16,080 --> 00:43:28,200
so I'm feeding it the URL that I have

00:43:21,030 --> 00:43:30,810
kind of figured out above here and only

00:43:28,200 --> 00:43:34,050
if I have said essentially yes look for

00:43:30,810 --> 00:43:39,710
styles or guess look for script would it

00:43:34,050 --> 00:43:39,710
try to on cue that make sense okay too

00:43:47,930 --> 00:43:55,050
so I think I think the version of this

00:43:53,130 --> 00:43:58,079
where you could try to hit it with a GUI

00:43:55,050 --> 00:44:00,660
is you've got to grab one of the tools

00:43:58,079 --> 00:44:03,420
that can dynamically register blocks

00:44:00,660 --> 00:44:06,230
you'd have to grab that first because I

00:44:03,420 --> 00:44:10,500
don't think you can do that nice yeah I

00:44:06,230 --> 00:44:11,490
don't think so so I don't think he's

00:44:10,500 --> 00:44:13,050
gonna do that I don't think Elliot's

00:44:11,490 --> 00:44:16,619
gonna create anything that allows you to

00:44:13,050 --> 00:44:19,319
dynamically register blocks from the GUI

00:44:16,619 --> 00:44:22,140
but there are plugins that allow you to

00:44:19,319 --> 00:44:25,980
do that so if you did that then it would

00:44:22,140 --> 00:44:27,450
show up similar to how when you're

00:44:25,980 --> 00:44:28,920
choosing a different post typing and

00:44:27,450 --> 00:44:33,119
trying to associate those fields to them

00:44:28,920 --> 00:44:35,339
you'd be able to match those what you do

00:44:33,119 --> 00:44:37,380
from there and in getting that to show

00:44:35,339 --> 00:44:39,900
up it probably roughly match what you

00:44:37,380 --> 00:44:41,730
already do but I'm not I'm not sure

00:44:39,900 --> 00:44:44,640
exactly what that flow would look like

00:44:41,730 --> 00:44:48,420
without having some explicit control on

00:44:44,640 --> 00:44:51,020
the render callback part or the render

00:44:48,420 --> 00:44:51,020
template part

00:45:01,580 --> 00:45:11,430
yeah for me it's is I'll create a small

00:45:06,270 --> 00:45:12,960
one of these files and then I start and

00:45:11,430 --> 00:45:14,820
then I have an option like kind of an

00:45:12,960 --> 00:45:18,300
opt-in controller again it's really not

00:45:14,820 --> 00:45:21,780
a controller it's just a filter and then

00:45:18,300 --> 00:45:24,690
I have the view and I just I'm taking a

00:45:21,780 --> 00:45:26,160
direct correlation from my heading

00:45:24,690 --> 00:45:27,930
subheading image whatever whatever

00:45:26,160 --> 00:45:29,460
fields that I'd set up here are things

00:45:27,930 --> 00:45:31,410
that are gonna be available to me

00:45:29,460 --> 00:45:33,570
directly in the template that I that I

00:45:31,410 --> 00:45:55,800
use in this case I'm using twig but it

00:45:33,570 --> 00:45:57,870
doesn't have to be twig of course there

00:45:55,800 --> 00:46:00,270
is absolutely nothing preventing you

00:45:57,870 --> 00:46:03,720
from registering the fields with a GUI

00:46:00,270 --> 00:46:05,010
nothing I off the top of my head the

00:46:03,720 --> 00:46:09,780
only like I said the only thing I don't

00:46:05,010 --> 00:46:16,820
have solved is controlling the template

00:46:09,780 --> 00:46:19,350
at that point the block template yeah I

00:46:16,820 --> 00:46:20,670
think I think that you have to have a

00:46:19,350 --> 00:46:21,990
little bit of code in there or maybe

00:46:20,670 --> 00:46:25,200
somebody's going to create a plug-in or

00:46:21,990 --> 00:46:29,990
some some kind of assistive utility to

00:46:25,200 --> 00:46:29,990
make it easier to to control that but

00:46:31,520 --> 00:46:37,860
but mostly in at least in its current

00:46:34,410 --> 00:46:40,050
stage it has to some of these things in

00:46:37,860 --> 00:46:43,160
my opinion have to be registered a a

00:46:40,050 --> 00:46:43,160
little bit more manually

00:47:11,640 --> 00:47:20,860
I'm actively not contaminating as much

00:47:16,270 --> 00:47:22,750
as possible funny enough three years ago

00:47:20,860 --> 00:47:31,300
I gave a talk on concatenating your butt

00:47:22,750 --> 00:47:34,630
off and and the changes HTTP versus HTTP

00:47:31,300 --> 00:47:37,300
- it used to we used to have to write

00:47:34,630 --> 00:47:40,750
like walk across the room have a

00:47:37,300 --> 00:47:41,350
handshake get one image okay then come

00:47:40,750 --> 00:47:42,970
back

00:47:41,350 --> 00:47:46,000
handshake grab the other image right now

00:47:42,970 --> 00:47:48,430
just walk over once Oh 40 okay well okay

00:47:46,000 --> 00:47:49,450
I have all of them now and because we

00:47:48,430 --> 00:47:51,280
can do that we do the same thing with

00:47:49,450 --> 00:47:54,880
CSS JavaScript so on as long as they're

00:47:51,280 --> 00:48:00,550
the same domain therefore we can highly

00:47:54,880 --> 00:48:03,670
leveraged that that far more performant

00:48:00,550 --> 00:48:05,710
tool right like HTTP - becomes super

00:48:03,670 --> 00:48:07,420
super helpful for us to minimize the

00:48:05,710 --> 00:48:09,250
amount of code that we're delivering and

00:48:07,420 --> 00:48:12,820
making and at least attempting to make

00:48:09,250 --> 00:48:13,330
it so we only get exactly as much as we

00:48:12,820 --> 00:48:16,150
should have

00:48:13,330 --> 00:48:20,560
rather than here's the whole theme it's

00:48:16,150 --> 00:48:22,990
no no no here's the header/footer here's

00:48:20,560 --> 00:48:25,060
the modules that you see and then those

00:48:22,990 --> 00:48:27,190
can get cached and I've got them right

00:48:25,060 --> 00:48:29,580
and ultimately it's just less less code

00:48:27,190 --> 00:48:29,580
that you're delivering

00:48:52,869 --> 00:48:59,419
on the air for so the question was what

00:48:57,229 --> 00:49:03,219
our approach was specifically with a

00:48:59,419 --> 00:49:05,839
project that we did almost two years ago

00:49:03,219 --> 00:49:06,799
so different development team I wasn't

00:49:05,839 --> 00:49:12,109
in charge of the team at that time

00:49:06,799 --> 00:49:15,829
different practices and I think some

00:49:12,109 --> 00:49:18,259
were probably utilizing the GUI if I'm

00:49:15,829 --> 00:49:19,749
not mistaken which is fine there's

00:49:18,259 --> 00:49:22,159
nothing there's nothing wrong with it I

00:49:19,749 --> 00:49:24,979
personally I like to to really try to

00:49:22,159 --> 00:49:27,529
bring that out of the GUI and restrict

00:49:24,979 --> 00:49:28,999
that down and register them in a way

00:49:27,529 --> 00:49:31,639
that I know that can be highly versioned

00:49:28,999 --> 00:49:33,619
I don't like I don't like leaning on the

00:49:31,639 --> 00:49:37,999
database for anything that I don't have

00:49:33,619 --> 00:50:06,229
to lean on it for does that answer

00:49:37,999 --> 00:50:08,929
question I mean to me a tremendous

00:50:06,229 --> 00:50:10,819
amount of the security is really it's

00:50:08,929 --> 00:50:15,889
really on where you've got something

00:50:10,819 --> 00:50:17,959
hosted I really am they're certainly not

00:50:15,889 --> 00:50:20,659
paying me anything for it but managed

00:50:17,959 --> 00:50:25,069
hosting is is there for a reason

00:50:20,659 --> 00:50:27,489
yeah WP engine Pantheon flywheel these

00:50:25,069 --> 00:50:30,409
companies that are doing managed hosting

00:50:27,489 --> 00:50:32,989
are working really hard on catering to

00:50:30,409 --> 00:50:36,409
all the edge cases that WordPress

00:50:32,989 --> 00:50:38,329
installs specifically would run into and

00:50:36,409 --> 00:50:40,549
if you're if you're just throwing up

00:50:38,329 --> 00:50:42,949
WordPress things on some VPS and you

00:50:40,549 --> 00:50:43,340
don't know you're not really really good

00:50:42,949 --> 00:50:45,800
at what

00:50:43,340 --> 00:50:47,300
you're doing you're putting that side at

00:50:45,800 --> 00:50:49,760
risk in a meaningful way which is when

00:50:47,300 --> 00:50:52,640
problems like that actually come up but

00:50:49,760 --> 00:50:56,510
if you can keep things on safe hosts

00:50:52,640 --> 00:51:01,010
that have a degree of guarantees via a

00:50:56,510 --> 00:51:02,450
SLA and I think that's the best kind of

00:51:01,010 --> 00:51:04,520
coverage you can get from a DevOps

00:51:02,450 --> 00:51:06,110
security level everything else should be

00:51:04,520 --> 00:51:07,580
like basic stuff that we're going should

00:51:06,110 --> 00:51:13,090
be escaping output we should be doing

00:51:07,580 --> 00:51:13,090
like obvious things but does that help

00:51:25,180 --> 00:51:31,670
oh how many pre-configured blocks to it

00:51:27,890 --> 00:51:33,920
we usually I keep mine down to about 15

00:51:31,670 --> 00:51:36,200
or so and they have variations right

00:51:33,920 --> 00:51:38,420
like you've got a hero and there might

00:51:36,200 --> 00:51:40,520
be an option to make it a full-height

00:51:38,420 --> 00:51:42,290
hero or something right some basic stuff

00:51:40,520 --> 00:51:44,720
repeatable pattern stuff that we do all

00:51:42,290 --> 00:51:53,360
the time I mean kind of reasonably build

00:51:44,720 --> 00:51:54,980
those exactly exactly and that that can

00:51:53,360 --> 00:51:57,080
be the difference on being able to give

00:51:54,980 --> 00:52:00,230
the client what they need in three weeks

00:51:57,080 --> 00:52:03,850
rather than three months is having some

00:52:00,230 --> 00:52:03,850
of that work pre-built please

00:52:07,119 --> 00:52:13,970
the question was if I'm exclusively

00:52:10,280 --> 00:52:15,800
using custom predefined blocks or I

00:52:13,970 --> 00:52:23,150
actually just custom registering all my

00:52:15,800 --> 00:52:25,850
are only only customers in my only Mota

00:52:23,150 --> 00:52:28,820
am I only doing custom work for my

00:52:25,850 --> 00:52:31,280
blocks or only using them at all or I'm

00:52:28,820 --> 00:52:33,890
actually using some of the default guten

00:52:31,280 --> 00:52:35,990
book it's a mix it's a mixed bag when I

00:52:33,890 --> 00:52:37,369
mentioned earlier that that I did I

00:52:35,990 --> 00:52:39,650
think everybody should white list this

00:52:37,369 --> 00:52:41,990
is what I was talking about so I've got

00:52:39,650 --> 00:52:47,530
some little compatibility thing and here

00:52:41,990 --> 00:52:50,660
is big list of all those freaking blocks

00:52:47,530 --> 00:52:53,540
obviously you can see I only enable a

00:52:50,660 --> 00:52:58,580
handful and I support those in my base

00:52:53,540 --> 00:53:01,100
styles for the theme right and then

00:52:58,580 --> 00:53:03,260
occasionally like the new and upcoming

00:53:01,100 --> 00:53:08,869
group block which I'm super excited

00:53:03,260 --> 00:53:10,100
about I will mean to grab a package of

00:53:08,869 --> 00:53:11,990
something something new that's coming

00:53:10,100 --> 00:53:18,920
out and then I'll have to filter and

00:53:11,990 --> 00:53:21,170
enable that here right this is this this

00:53:18,920 --> 00:53:23,359
is part of thinking like the way John

00:53:21,170 --> 00:53:25,369
was asking us to earlier today where

00:53:23,359 --> 00:53:26,810
we're simplifying the admin UI if

00:53:25,369 --> 00:53:28,550
there's just a tremendous amount of

00:53:26,810 --> 00:53:32,119
blocks for people to sort through that's

00:53:28,550 --> 00:53:34,070
a bad user experience in my view and and

00:53:32,119 --> 00:53:37,850
honestly I think I think what we have

00:53:34,070 --> 00:53:38,690
out of the box it's a better user

00:53:37,850 --> 00:53:42,680
experience

00:53:38,690 --> 00:53:45,290
then tiny MCE and short codes but

00:53:42,680 --> 00:53:47,510
there's still room for improvement

00:53:45,290 --> 00:53:49,010
and if you're delivering a custom

00:53:47,510 --> 00:53:51,230
website for a client that's paying you

00:53:49,010 --> 00:53:52,730
good money and you've got at least a

00:53:51,230 --> 00:53:54,020
little bit of hours to work with you

00:53:52,730 --> 00:53:57,440
should maybe be thinking about doing

00:53:54,020 --> 00:53:59,080
that by default so hopefully that's

00:53:57,440 --> 00:54:02,440
helpful

00:53:59,080 --> 00:54:02,440
one two

00:54:27,660 --> 00:54:43,840
that makes sense it makes

00:54:39,330 --> 00:54:47,170
yeah I think I think we'll need to write

00:54:43,840 --> 00:54:50,040
an article on it for Russell so that I

00:54:47,170 --> 00:54:50,040
can prove it

00:54:53,550 --> 00:55:24,850
it could be yeah it's like hidden

00:55:21,760 --> 00:55:26,530
I know twig does by default I'm a little

00:55:24,850 --> 00:55:29,860
unclear on certain things that timber

00:55:26,530 --> 00:55:33,190
does if that makes sense so with the

00:55:29,860 --> 00:55:35,770
three minutes that I've got left what

00:55:33,190 --> 00:55:38,530
I'm proposing is that this is the way

00:55:35,770 --> 00:55:39,850
that we swap over right is that this is

00:55:38,530 --> 00:55:44,050
the way that we build those sites this

00:55:39,850 --> 00:55:45,550
year and and I think it can help Santa

00:55:44,050 --> 00:55:48,460
me don't me not necessarily my way where

00:55:45,550 --> 00:55:51,310
I'm tracking some crazy class and I got

00:55:48,460 --> 00:55:53,710
my weird on key system and stuff but but

00:55:51,310 --> 00:55:55,840
if if we if you're oh if you've been

00:55:53,710 --> 00:55:59,410
building sites with ACF for years like

00:55:55,840 --> 00:56:02,050
most of us this this ends up being a way

00:55:59,410 --> 00:56:05,680
that you're not blowing another 30 hours

00:56:02,050 --> 00:56:09,010
of a project on playing with react right

00:56:05,680 --> 00:56:12,070
and save that approach for the right

00:56:09,010 --> 00:56:14,170
time for the right budget and this gets

00:56:12,070 --> 00:56:16,060
you kind of back to business as usual

00:56:14,170 --> 00:56:19,030
when it comes to how we've been building

00:56:16,060 --> 00:56:22,120
wordpress sites with ACF and flexible

00:56:19,030 --> 00:56:23,860
content for some time now so from all

00:56:22,120 --> 00:56:25,810
the head nods it looks like a lot of you

00:56:23,860 --> 00:56:28,690
relate to me and how I'm thinking about

00:56:25,810 --> 00:56:33,970
this and please don't hesitate to reach

00:56:28,690 --> 00:56:37,930
out to me on Twitter for help or file an

00:56:33,970 --> 00:56:40,750
issue on that repo I would love to see

00:56:37,930 --> 00:56:44,430
us actually utilizing Gutenberg sooner

00:56:40,750 --> 00:56:52,520
rather than later thank you everybody

00:56:44,430 --> 00:56:52,520

YouTube URL: https://www.youtube.com/watch?v=IyYAg2Aetys


