Title: Gal Baras: How to Make Your Site Load 5 Times Faster in 10 Minutes (for FREE)
Publication date: 2019-10-27
Playlist: WordCamp Brisbane 2019
Description: 
	Page loading speed is critical these days for user experience, particularly on mobile phones, and therefore for SEO. Research shows that a 1-second difference in loading time can have a huge impact on site conversions.
Luckily, there are some awesome plugins that make speeding up your site light work. Using them, you can get 95% of the possible performance boost using only FREE plugins.
https://2019.brisbane.wordcamp.org/session/how-to-make-your-site-load-5-times-faster-in-10-minutes-for-free/

WPTV link: https://wordpress.tv/2019/10/18/gal-baras-how-to-make-your-site-load-5-times-faster-in-10-minutes-for-free/
Captions: 
	00:00:00,230 --> 00:00:03,360
[Applause]

00:00:04,400 --> 00:00:11,660
all right and first excuse the sexy

00:00:08,820 --> 00:00:17,460
voice it's not how I normally talk but

00:00:11,660 --> 00:00:19,350
you know stuff happens all right so how

00:00:17,460 --> 00:00:20,910
do you make your site five times faster

00:00:19,350 --> 00:00:23,189
in ten minutes but without changing

00:00:20,910 --> 00:00:27,269
anything else so it still works

00:00:23,189 --> 00:00:32,399
and it's a bold claim but I think you'll

00:00:27,269 --> 00:00:36,239
see that it's doable oh there we go

00:00:32,399 --> 00:00:38,489
all right so what we'll do is the cover

00:00:36,239 --> 00:00:42,059
why speed is important which is country

00:00:38,489 --> 00:00:44,309
folk battle state it anyway we'll talk

00:00:42,059 --> 00:00:46,289
about page loading how you actually look

00:00:44,309 --> 00:00:49,590
at it so that everything I say

00:00:46,289 --> 00:00:52,020
afterwards make sense and then we'll

00:00:49,590 --> 00:00:56,090
talk about how we save time by

00:00:52,020 --> 00:00:56,090
practically doing away with some stuff

00:00:56,129 --> 00:01:01,440
shrinking other stuff running things in

00:00:59,789 --> 00:01:04,739
parallel rather than one after the other

00:01:01,440 --> 00:01:09,979
and then whatever is left running it as

00:01:04,739 --> 00:01:12,600
fast as possible all right so

00:01:09,979 --> 00:01:16,110
essentially speed is a major part of

00:01:12,600 --> 00:01:18,869
user experience and that every time I

00:01:16,110 --> 00:01:20,540
hear user experience I think Google so

00:01:18,869 --> 00:01:23,430
Google is really big on user experience

00:01:20,540 --> 00:01:25,950
and speed is a big part of it and

00:01:23,430 --> 00:01:27,570
research shows that people simply go

00:01:25,950 --> 00:01:30,150
away if they have to wait for too long

00:01:27,570 --> 00:01:32,040
and the more people go away the less

00:01:30,150 --> 00:01:33,810
conversion you have the lower your

00:01:32,040 --> 00:01:36,900
conversion rate the thing is when people

00:01:33,810 --> 00:01:39,210
leave they typically go back to the

00:01:36,900 --> 00:01:41,490
search engine they go back to the search

00:01:39,210 --> 00:01:44,850
engine Google goes this wasn't a good

00:01:41,490 --> 00:01:46,649
site this was a bounce so it lowers the

00:01:44,850 --> 00:01:49,979
search ranking so you get even less

00:01:46,649 --> 00:01:52,290
traffic and you're stuck in in the

00:01:49,979 --> 00:01:57,270
boondocks you know page 97 or something

00:01:52,290 --> 00:01:59,610
and then you get even less conversion

00:01:57,270 --> 00:02:01,079
even fewer conversions so you got no

00:01:59,610 --> 00:02:08,729
business so essentially investing in

00:02:01,079 --> 00:02:10,349
speed is good for business now this may

00:02:08,729 --> 00:02:13,370
seem a little bit technical but really

00:02:10,349 --> 00:02:17,640
it isn't every time your browse

00:02:13,370 --> 00:02:21,750
wants to load a page it uses something

00:02:17,640 --> 00:02:24,480
called HTTP request and these are the

00:02:21,750 --> 00:02:27,390
different parts of HTTP request you can

00:02:24,480 --> 00:02:30,269
think about them as going to your

00:02:27,390 --> 00:02:31,680
neighbor and like your leave out in the

00:02:30,269 --> 00:02:33,660
country and you want to borrow a cup of

00:02:31,680 --> 00:02:35,819
sugar so you figure out where the

00:02:33,660 --> 00:02:38,580
neighbor is first right that's DNS I

00:02:35,819 --> 00:02:42,450
know you know where they are a TCP

00:02:38,580 --> 00:02:44,610
connect to drive over and to to them

00:02:42,450 --> 00:02:46,739
SSL connectors you knock on the door and

00:02:44,610 --> 00:02:49,799
you ask permission to come in and then

00:02:46,739 --> 00:02:51,510
HTTP requested is yet you say here's a

00:02:49,799 --> 00:02:54,569
cup can you please fill it up with sugar

00:02:51,510 --> 00:02:56,400
I'll repay you someday and then you wait

00:02:54,569 --> 00:02:59,310
because the person goes in and gets your

00:02:56,400 --> 00:03:01,790
sugar then comes out and then at the

00:02:59,310 --> 00:03:05,280
HTTP request since here is your sugar

00:03:01,790 --> 00:03:07,640
okay so you then display your sugar unto

00:03:05,280 --> 00:03:10,319
your tea or something

00:03:07,640 --> 00:03:12,959
all right so putting this in the

00:03:10,319 --> 00:03:16,019
perspective of an entire page load the

00:03:12,959 --> 00:03:18,150
page load requires multiple HTTP

00:03:16,019 --> 00:03:20,459
requests so the first thing you get

00:03:18,150 --> 00:03:21,829
obviously is the page itself but then

00:03:20,459 --> 00:03:25,859
you get style sheets and JavaScript

00:03:21,829 --> 00:03:29,609
files and the image is really important

00:03:25,859 --> 00:03:32,100
sometimes you get videos so you get a

00:03:29,609 --> 00:03:36,290
whole bunch of things that eventually

00:03:32,100 --> 00:03:38,459
the browser will render onto the page

00:03:36,290 --> 00:03:40,019
now if you look at it

00:03:38,459 --> 00:03:42,840
it really doesn't look like a waterfall

00:03:40,019 --> 00:03:45,000
does it it looks like a cascade so it's

00:03:42,840 --> 00:03:47,850
like a series of waterfalls what we what

00:03:45,000 --> 00:03:49,260
we want to do is we want to make it look

00:03:47,850 --> 00:03:51,329
like a waterfall so we want to bring

00:03:49,260 --> 00:03:53,549
everything as close to the beginning as

00:03:51,329 --> 00:04:00,000
possible and drop it straight down so

00:03:53,549 --> 00:04:02,549
click there's the page now you can see

00:04:00,000 --> 00:04:05,910
that there's a blue line in the diagram

00:04:02,549 --> 00:04:08,130
the blue line is the perceived end of

00:04:05,910 --> 00:04:10,650
page load so some JavaScript might run

00:04:08,130 --> 00:04:13,200
afterwards some some things might still

00:04:10,650 --> 00:04:14,700
happen afterwards but that's the point

00:04:13,200 --> 00:04:16,169
where the browser says to the user

00:04:14,700 --> 00:04:18,239
you're good to go

00:04:16,169 --> 00:04:20,729
you start scrolling you can start

00:04:18,239 --> 00:04:23,220
interacting with the page and so on what

00:04:20,729 --> 00:04:24,940
we want to do is we want to make sure

00:04:23,220 --> 00:04:26,950
that the perceived

00:04:24,940 --> 00:04:30,550
okay user experience again so the

00:04:26,950 --> 00:04:36,340
perceived end of page load is as close

00:04:30,550 --> 00:04:40,780
to the beginning as possible alright so

00:04:36,340 --> 00:04:42,430
let's start by eliminating so finding

00:04:40,780 --> 00:04:44,410
out where the page is is basically

00:04:42,430 --> 00:04:47,020
converting the domain name into an IP

00:04:44,410 --> 00:04:53,680
address and that's done using domain

00:04:47,020 --> 00:04:55,510
name services sorry and if we cache this

00:04:53,680 --> 00:04:58,980
then we don't have to do it more than

00:04:55,510 --> 00:05:01,300
once per per page load so everything

00:04:58,980 --> 00:05:02,950
like images they come from the same

00:05:01,300 --> 00:05:04,600
domain the stylesheet will come from the

00:05:02,950 --> 00:05:06,880
same domain but the browser already

00:05:04,600 --> 00:05:09,340
knows where it is it's already resolved

00:05:06,880 --> 00:05:11,710
it for the page request so it's already

00:05:09,340 --> 00:05:13,600
done it just hangs on to it if you're

00:05:11,710 --> 00:05:16,660
using a very common sight like phone

00:05:13,600 --> 00:05:17,950
store Google API dot-com it's very

00:05:16,660 --> 00:05:20,890
likely that your internet service

00:05:17,950 --> 00:05:22,960
provider has cached this and so you're

00:05:20,890 --> 00:05:26,410
sitting there and you're asking the

00:05:22,960 --> 00:05:27,970
server civil service provider DNS and so

00:05:26,410 --> 00:05:31,660
it knows it doesn't have to go all the

00:05:27,970 --> 00:05:33,670
way out to find the domain for the the

00:05:31,660 --> 00:05:35,290
zone for help for google and and tell

00:05:33,670 --> 00:05:38,200
you so it's it's a lot quicker there's

00:05:35,290 --> 00:05:41,040
many layers of this okay so that only

00:05:38,200 --> 00:05:44,020
happens once per domain per page node

00:05:41,040 --> 00:05:48,850
and then subsequent page loss it doesn't

00:05:44,020 --> 00:05:51,430
need to happen resource fetching we can

00:05:48,850 --> 00:05:54,330
eliminate by using using browser caching

00:05:51,430 --> 00:05:58,600
so when you're going to page number two

00:05:54,330 --> 00:06:02,530
style sheets the same javascript might

00:05:58,600 --> 00:06:03,970
be the same your background image for

00:06:02,530 --> 00:06:06,760
the page might be the same because it's

00:06:03,970 --> 00:06:08,650
part of your same your logo might be the

00:06:06,760 --> 00:06:14,110
same so the browser just keep hangs onto

00:06:08,650 --> 00:06:17,140
these it'll be it'll be faster image

00:06:14,110 --> 00:06:20,200
fetch and fetching essentially if you

00:06:17,140 --> 00:06:23,770
know what above the fold and below the

00:06:20,200 --> 00:06:27,310
fold means there's a visible area that

00:06:23,770 --> 00:06:29,680
opens up first up and why would you want

00:06:27,310 --> 00:06:32,500
to load all of the images if you're just

00:06:29,680 --> 00:06:34,750
seeing the ones of the fold so lazy

00:06:32,500 --> 00:06:37,760
loading just loads what you see if

00:06:34,750 --> 00:06:41,300
you're scrolling up you're about to see

00:06:37,760 --> 00:06:43,640
something else it creates a request to

00:06:41,300 --> 00:06:46,760
get that but by the time the blue line

00:06:43,640 --> 00:06:48,470
gets there although most of your images

00:06:46,760 --> 00:06:52,280
may not have loaded if you're on a long

00:06:48,470 --> 00:06:57,800
page it goes yeah and perception is that

00:06:52,280 --> 00:07:03,200
the page is loaded we can eliminate

00:06:57,800 --> 00:07:05,720
requests completely there is one way is

00:07:03,200 --> 00:07:07,700
to combine files so you every every

00:07:05,720 --> 00:07:09,470
plugin you have in WordPress or plugins

00:07:07,700 --> 00:07:11,630
have their own style sheets that have

00:07:09,470 --> 00:07:13,600
their own JavaScript your same might

00:07:11,630 --> 00:07:16,250
have different ones handling different

00:07:13,600 --> 00:07:17,990
different things because they they're

00:07:16,250 --> 00:07:20,540
made up of different components like

00:07:17,990 --> 00:07:22,910
libraries and so on so they all have

00:07:20,540 --> 00:07:25,460
different resources but you can put all

00:07:22,910 --> 00:07:27,650
the CSS into just one file and all the

00:07:25,460 --> 00:07:32,090
scripts into just one file and it works

00:07:27,650 --> 00:07:35,510
the same but a fewer requests the other

00:07:32,090 --> 00:07:39,440
thing you can do is called HTTP push so

00:07:35,510 --> 00:07:44,090
essentially when you're on HTTP you know

00:07:39,440 --> 00:07:49,130
I'll go into that a bit later and HTTP

00:07:44,090 --> 00:07:51,140
is a is a new protocol it's more

00:07:49,130 --> 00:07:53,120
advanced and it's got all these lovely

00:07:51,140 --> 00:07:56,120
features and one of them is age to

00:07:53,120 --> 00:07:58,550
people so this server gets a request and

00:07:56,120 --> 00:08:00,530
the request says get me this page

00:07:58,550 --> 00:08:02,990
because the browser doesn't know what it

00:08:00,530 --> 00:08:05,060
needs yet but the server looks at the

00:08:02,990 --> 00:08:07,670
page and says aw you're also going to

00:08:05,060 --> 00:08:10,460
need you know like these Amazon people

00:08:07,670 --> 00:08:12,530
have also bought so the server can say

00:08:10,460 --> 00:08:15,080
people who have downloaded this base

00:08:12,530 --> 00:08:16,940
have also gotten this start sheet would

00:08:15,080 --> 00:08:19,070
you like that too so it pushes it out

00:08:16,940 --> 00:08:22,340
even though there is no request for it

00:08:19,070 --> 00:08:25,580
yet so we eliminate the need for a

00:08:22,340 --> 00:08:28,670
request now something big with WordPress

00:08:25,580 --> 00:08:31,580
is WordPress is based totally on PHP so

00:08:28,670 --> 00:08:34,910
it dynamically creates pages by

00:08:31,580 --> 00:08:38,840
combining PHP programs with database

00:08:34,910 --> 00:08:40,790
content I put it all together compiles

00:08:38,840 --> 00:08:42,979
it runs it and generates the page and

00:08:40,790 --> 00:08:47,210
then serves it to throw the web server

00:08:42,979 --> 00:08:49,310
to the browser but if you if the pages

00:08:47,210 --> 00:08:51,140
don't change much if the content isn't

00:08:49,310 --> 00:08:53,450
very dynamic

00:08:51,140 --> 00:08:55,220
then you can just save that for later

00:08:53,450 --> 00:08:57,440
and then the next request that comes

00:08:55,220 --> 00:09:02,420
along just gets it the aesthetic

00:08:57,440 --> 00:09:05,630
pre-produced page the other thing is

00:09:02,420 --> 00:09:09,140
WordPress will run background jobs on

00:09:05,630 --> 00:09:11,120
page loads so people get to a wordpress

00:09:09,140 --> 00:09:13,730
page and it's time to run some

00:09:11,120 --> 00:09:17,710
background jobs so WordPress fires up WP

00:09:13,730 --> 00:09:20,810
cron and the user has to wait for it and

00:09:17,710 --> 00:09:22,700
so occasionally people have to wait more

00:09:20,810 --> 00:09:26,530
than they should to actually get the

00:09:22,700 --> 00:09:31,790
page so what you can do is you can use

00:09:26,530 --> 00:09:34,520
like a the cPanel cron that the the

00:09:31,790 --> 00:09:38,960
hosting system Chrome rather than the

00:09:34,520 --> 00:09:41,720
WordPress cron or actually run WP clone

00:09:38,960 --> 00:09:44,120
from an operating the operating system

00:09:41,720 --> 00:09:47,780
on a regular schedule rather than having

00:09:44,120 --> 00:09:56,420
people wait for it okay it's a bit of an

00:09:47,780 --> 00:09:58,730
advanced thing but doable all right just

00:09:56,420 --> 00:10:01,670
a thing to mention on page on page

00:09:58,730 --> 00:10:05,060
caching also most most caching plugins

00:10:01,670 --> 00:10:06,770
will generate the page when it's loaded

00:10:05,060 --> 00:10:09,680
for the first time so the first time

00:10:06,770 --> 00:10:12,800
anybody loads the page and it's not in

00:10:09,680 --> 00:10:14,840
the cache or it's expired they still

00:10:12,800 --> 00:10:19,130
have to wait for paid generation now

00:10:14,840 --> 00:10:21,830
what happens is when you turn on caching

00:10:19,130 --> 00:10:24,100
many people don't actually run WordPress

00:10:21,830 --> 00:10:27,610
because they're getting a static page

00:10:24,100 --> 00:10:31,460
okay so what you can do is you can

00:10:27,610 --> 00:10:34,430
schedule something called a preload so

00:10:31,460 --> 00:10:37,370
the caching plug-in again and it works

00:10:34,430 --> 00:10:41,750
with the system level Krone so on a

00:10:37,370 --> 00:10:43,730
regular interval WP chrome runs it tells

00:10:41,750 --> 00:10:46,430
the caching plug-in I want you to

00:10:43,730 --> 00:10:49,430
preload my cache and so nobody ever

00:10:46,430 --> 00:10:52,070
waits for paid well not ever but rarely

00:10:49,430 --> 00:10:54,020
do people have to actually wait for page

00:10:52,070 --> 00:10:57,080
generation and they never have to wait

00:10:54,020 --> 00:10:59,020
for WP cron to run okay so that's how it

00:10:57,080 --> 00:11:01,910
all works together

00:10:59,020 --> 00:11:03,690
okay so we've eliminated some things and

00:11:01,910 --> 00:11:10,100
now let's see how

00:11:03,690 --> 00:11:12,510
make some other things smaller so

00:11:10,100 --> 00:11:16,740
remember those files that we combined

00:11:12,510 --> 00:11:19,230
earlier now they're really big so what

00:11:16,740 --> 00:11:20,940
we can do next is we can shrink their

00:11:19,230 --> 00:11:24,170
size and we can do it in two different

00:11:20,940 --> 00:11:28,530
ways we can minify them which takes away

00:11:24,170 --> 00:11:31,380
spaces new lines comments is sometimes

00:11:28,530 --> 00:11:34,320
substitutes long variable names with

00:11:31,380 --> 00:11:38,220
short variable names it does a whole

00:11:34,320 --> 00:11:40,590
bunch of stuff but essentially it leaves

00:11:38,220 --> 00:11:44,070
the bare minimum that will still look

00:11:40,590 --> 00:11:46,620
the same on the browser the next thing

00:11:44,070 --> 00:11:49,260
we do is we turn on compression and

00:11:46,620 --> 00:11:52,070
that's that's the communication between

00:11:49,260 --> 00:11:55,590
your browser and the web server is then

00:11:52,070 --> 00:11:59,940
that the browser says I'm I'm ok with

00:11:55,590 --> 00:12:04,320
compressed files the web server crunches

00:11:59,940 --> 00:12:09,150
it compresses it to a lot less of the

00:12:04,320 --> 00:12:11,520
the size when it's a plain text and then

00:12:09,150 --> 00:12:14,070
sends it to the browser in a fraction of

00:12:11,520 --> 00:12:18,260
the time the browser opens it up and

00:12:14,070 --> 00:12:21,360
uses it in nothing lost in this process

00:12:18,260 --> 00:12:24,840
images WordPress is wonderful especially

00:12:21,360 --> 00:12:27,540
lately can't remember what version that

00:12:24,840 --> 00:12:33,210
when that came out 4.8 or 0.9 or

00:12:27,540 --> 00:12:35,370
something a in inside of WordPress you

00:12:33,210 --> 00:12:38,670
might be familiar with with some nail

00:12:35,370 --> 00:12:40,590
sizes when you embed an image you can

00:12:38,670 --> 00:12:42,840
choose what size to embed it in in there

00:12:40,590 --> 00:12:45,330
they have these names and in the media

00:12:42,840 --> 00:12:47,790
settings you can configure the actual

00:12:45,330 --> 00:12:51,270
sizes so essentially when you upload an

00:12:47,790 --> 00:12:54,839
image WordPress crunches it and produces

00:12:51,270 --> 00:12:56,970
smaller copies of it based on the

00:12:54,839 --> 00:13:00,720
definitions of your your theme your

00:12:56,970 --> 00:13:04,380
media settings and some plugins and so

00:13:00,720 --> 00:13:09,500
you get a choice now when you embed an

00:13:04,380 --> 00:13:11,720
image in your content WordPress also

00:13:09,500 --> 00:13:13,760
automatically generates

00:13:11,720 --> 00:13:17,630
complex command that tells the browser

00:13:13,760 --> 00:13:19,520
if all you have is 320 pixels don't

00:13:17,630 --> 00:13:23,180
bother with the 1000 pixel wide image

00:13:19,520 --> 00:13:27,260
just grab the one that's the next one up

00:13:23,180 --> 00:13:30,490
from 320 so its smallest possible that

00:13:27,260 --> 00:13:34,520
will still fill up this area WordPress

00:13:30,490 --> 00:13:38,690
refers to it as as responsive images so

00:13:34,520 --> 00:13:40,310
it generates smaller images and there's

00:13:38,690 --> 00:13:45,160
a whole set of them and then command

00:13:40,310 --> 00:13:47,480
that this HTML image tag has

00:13:45,160 --> 00:13:50,780
instructions for the browser's own on

00:13:47,480 --> 00:13:53,390
how to use them based but the the other

00:13:50,780 --> 00:13:56,180
thing you can do is high resolution

00:13:53,390 --> 00:13:58,310
images they look really nice and they're

00:13:56,180 --> 00:14:00,710
good for press you know for glossy

00:13:58,310 --> 00:14:02,930
magazines and and things like that but

00:14:00,710 --> 00:14:04,850
for the web you really don't need the

00:14:02,930 --> 00:14:07,760
high resolution and you definitely don't

00:14:04,850 --> 00:14:10,040
need the enormous size so what you can

00:14:07,760 --> 00:14:12,530
do first is shrink the size to the

00:14:10,040 --> 00:14:15,740
maximum size you'll ever need and then

00:14:12,530 --> 00:14:19,580
reduce the quality to the top quality

00:14:15,740 --> 00:14:22,700
that you would need on a on a computer

00:14:19,580 --> 00:14:25,940
display because anything else is just a

00:14:22,700 --> 00:14:30,050
waste and that makes the file size a lot

00:14:25,940 --> 00:14:33,050
smaller so the request will end a lot

00:14:30,050 --> 00:14:36,470
more quickly the other thing is some

00:14:33,050 --> 00:14:38,150
formats are more economical and web B is

00:14:36,470 --> 00:14:42,050
one of them this is actually a Google

00:14:38,150 --> 00:14:44,060
format and it will I'm thinking no I

00:14:42,050 --> 00:14:46,550
haven't proven it but I'm thinking you

00:14:44,060 --> 00:14:49,010
will get brownie points from Google for

00:14:46,550 --> 00:14:51,680
using web P because they believe in it

00:14:49,010 --> 00:14:54,860
do you have proved it okay

00:14:51,680 --> 00:14:57,050
there's at least one person who's thinks

00:14:54,860 --> 00:15:02,080
there's proof that it works so that

00:14:57,050 --> 00:15:04,210
makes two of us yeah I'm not alone all

00:15:02,080 --> 00:15:08,630
right

00:15:04,210 --> 00:15:11,780
HTTP again that wonderful concept

00:15:08,630 --> 00:15:14,030
it used to be Google Mod PageSpeed and

00:15:11,780 --> 00:15:17,900
it just got integrated into all these

00:15:14,030 --> 00:15:22,160
web servers in at some point and so

00:15:17,900 --> 00:15:24,850
basically in the old HTTP days the the

00:15:22,160 --> 00:15:27,879
headers will just plain text

00:15:24,850 --> 00:15:29,859
and now http/2 compresses them and so

00:15:27,879 --> 00:15:33,749
they take up less space and because

00:15:29,859 --> 00:15:41,739
every HTTP quest request has headers

00:15:33,749 --> 00:15:44,649
then that that saves alright yeah that's

00:15:41,739 --> 00:15:49,089
a bit of a complex slide but bear with

00:15:44,649 --> 00:15:51,160
me so in order to turn our cascade into

00:15:49,089 --> 00:15:54,669
a waterfall what we want to do is try

00:15:51,160 --> 00:16:00,129
and run as much as possible in parallel

00:15:54,669 --> 00:16:02,949
so the the top beats DNS prefetching

00:16:00,129 --> 00:16:06,970
preconnect are just things that you can

00:16:02,949 --> 00:16:09,819
put inside your your head section of the

00:16:06,970 --> 00:16:12,459
code and you put them way at the at the

00:16:09,819 --> 00:16:14,859
top and it tells the browser I'm gonna

00:16:12,459 --> 00:16:17,229
need this domain later so go ahead and

00:16:14,859 --> 00:16:21,910
new resolve it now so it will parallel

00:16:17,229 --> 00:16:24,009
eyes DNS requests if you have other

00:16:21,910 --> 00:16:26,199
domains so if you have Google phones for

00:16:24,009 --> 00:16:27,669
example that would be something that you

00:16:26,199 --> 00:16:30,399
want to use if you're using any

00:16:27,669 --> 00:16:32,289
wordpress.com services that would be

00:16:30,399 --> 00:16:35,769
another one but if you're using jetpack

00:16:32,289 --> 00:16:40,509
for example jetpack already puts in the

00:16:35,769 --> 00:16:42,699
prefetch for WP calm so that's good

00:16:40,509 --> 00:16:45,309
pre connect is the same remember the

00:16:42,699 --> 00:16:48,669
HTTP request has a connect stage so it

00:16:45,309 --> 00:16:51,309
will pre connect to the to the other

00:16:48,669 --> 00:16:53,079
domain that you've just told it to pre

00:16:51,309 --> 00:16:56,109
connect to and that saves a little bit

00:16:53,079 --> 00:16:58,359
of time it runs it in parallel how can

00:16:56,109 --> 00:17:01,779
you make requests in parallel in the old

00:16:58,359 --> 00:17:02,439
days you had to open so in a very old

00:17:01,779 --> 00:17:07,720
days

00:17:02,439 --> 00:17:10,720
you had to open their requests to the

00:17:07,720 --> 00:17:14,199
server so TCP connect send HTTP request

00:17:10,720 --> 00:17:18,339
get it back then do another connect and

00:17:14,199 --> 00:17:21,610
so on more modern web servers and

00:17:18,339 --> 00:17:23,169
browsers started defaulting to 10

00:17:21,610 --> 00:17:26,049
parallel connections so you could get

00:17:23,169 --> 00:17:30,629
things for a page by opening 10

00:17:26,049 --> 00:17:34,299
connections in parallel and but HTTP 2

00:17:30,629 --> 00:17:36,370
allows you within the one connect to

00:17:34,299 --> 00:17:37,720
send multiple HTTP requests so you don't

00:17:36,370 --> 00:17:42,940
have the overhead

00:17:37,720 --> 00:17:47,140
of doing the TCP connect every time so

00:17:42,940 --> 00:17:47,919
that that saves but also within that

00:17:47,140 --> 00:17:50,770
connection

00:17:47,919 --> 00:17:54,130
remember the HTTP request there was a

00:17:50,770 --> 00:17:58,990
chippy request then wait then HTTP

00:17:54,130 --> 00:18:02,100
response what HTTP do to does is it dig

00:17:58,990 --> 00:18:04,900
it runs them in parallel so you can have

00:18:02,100 --> 00:18:06,880
request request request request

00:18:04,900 --> 00:18:08,950
wait wait wait wait and then they might

00:18:06,880 --> 00:18:10,900
come this response and then this

00:18:08,950 --> 00:18:12,760
response and then this response so they

00:18:10,900 --> 00:18:13,840
don't have to come back in order but

00:18:12,760 --> 00:18:15,909
they come back through the same

00:18:13,840 --> 00:18:19,030
connection and you can run them in

00:18:15,909 --> 00:18:23,740
parallel so it's another layer of of

00:18:19,030 --> 00:18:28,500
saving the other thing is some scripts

00:18:23,740 --> 00:18:31,900
you don't really need to run before the

00:18:28,500 --> 00:18:35,220
before they above-the-fold renders so to

00:18:31,900 --> 00:18:40,270
render above the fold you don't need to

00:18:35,220 --> 00:18:44,740
to run everything and so what you can do

00:18:40,270 --> 00:18:48,340
is defer or make asynchronous some of

00:18:44,740 --> 00:18:51,039
your scripts ok so it basically says

00:18:48,340 --> 00:18:53,950
that it runs in parallel with rendering

00:18:51,039 --> 00:18:57,400
because it has no effect on it or it

00:18:53,950 --> 00:19:02,549
runs after rendering and then might have

00:18:57,400 --> 00:19:02,549
some effect but it'll be way down there

00:19:02,730 --> 00:19:10,390
if you've integrated things like I think

00:19:07,510 --> 00:19:15,250
Google tag manager and in some other

00:19:10,390 --> 00:19:17,880
things maybe TB testing software and and

00:19:15,250 --> 00:19:25,299
these sorts of things

00:19:17,880 --> 00:19:27,760
Thanks then please do it out of the box

00:19:25,299 --> 00:19:30,880
for you all right

00:19:27,760 --> 00:19:33,130
and so speeding things up there are

00:19:30,880 --> 00:19:34,840
there are DNS services that have

00:19:33,130 --> 00:19:37,240
presence all around the world so you

00:19:34,840 --> 00:19:39,340
don't you don't suffer latency and stuff

00:19:37,240 --> 00:19:41,049
like that that's that's really advanced

00:19:39,340 --> 00:19:44,350
in most cases you don't really need

00:19:41,049 --> 00:19:45,850
these but that generation is important

00:19:44,350 --> 00:19:47,860
sometimes you still have to generate

00:19:45,850 --> 00:19:50,640
pages and sometimes you still have to

00:19:47,860 --> 00:19:53,670
generate them when somebody is waiting

00:19:50,640 --> 00:19:57,240
so it's good to have good web hosting so

00:19:53,670 --> 00:19:58,710
good hardware with not much load and so

00:19:57,240 --> 00:20:00,570
you always have spare cycles when you

00:19:58,710 --> 00:20:05,460
need them burst capacity that sort of

00:20:00,570 --> 00:20:08,430
stuff latest versions that don't fail

00:20:05,460 --> 00:20:11,700
and do things more efficiently very

00:20:08,430 --> 00:20:15,290
importantly opcode caching so PHP has

00:20:11,700 --> 00:20:18,120
this optional module that not

00:20:15,290 --> 00:20:21,810
unfortunately not all hosting others

00:20:18,120 --> 00:20:29,090
turn on by default yes I am looking at

00:20:21,810 --> 00:20:29,090
you but so turn it on it's I've seen it

00:20:29,510 --> 00:20:36,150
speed up besides reach three times

00:20:32,220 --> 00:20:38,130
so basically PHP needs to be pre

00:20:36,150 --> 00:20:38,910
processed before it can be run needs to

00:20:38,130 --> 00:20:41,730
be compiled

00:20:38,910 --> 00:20:44,340
so what occurred caching does is it

00:20:41,730 --> 00:20:46,310
saves the pre compiled version and next

00:20:44,340 --> 00:20:48,590
time you don't have to compile it again

00:20:46,310 --> 00:20:51,630
so it uses up a little bit of memory

00:20:48,590 --> 00:20:54,090
yeah I'm not going to talk about object

00:20:51,630 --> 00:20:58,620
caching that's advanced and I don't have

00:20:54,090 --> 00:21:00,330
time okay so your first site recipe we

00:20:58,620 --> 00:21:03,060
pretty much have five minutes left so

00:21:00,330 --> 00:21:08,040
let's see how it's done so you will need

00:21:03,060 --> 00:21:13,680
good DNS in web hosting and three

00:21:08,040 --> 00:21:17,520
plugins and good PHP configuration so

00:21:13,680 --> 00:21:22,170
good hosting like I said fast DNS they

00:21:17,520 --> 00:21:24,360
might have multiple multiple name

00:21:22,170 --> 00:21:29,010
servers and stuff like that but anyway

00:21:24,360 --> 00:21:31,860
it needs to be reasonable they if they

00:21:29,010 --> 00:21:35,370
provide SSL for free and that's a good

00:21:31,860 --> 00:21:37,860
indication if they provide good good SSL

00:21:35,370 --> 00:21:39,720
certificates for free that's great

00:21:37,860 --> 00:21:42,900
because that enables you to run your

00:21:39,720 --> 00:21:46,140
site on HTTPS again points from Google

00:21:42,900 --> 00:21:48,600
because it prefers that but it enables

00:21:46,140 --> 00:21:51,630
you to run HTTP to so if you go back

00:21:48,600 --> 00:21:53,670
through the slides all these push and

00:21:51,630 --> 00:21:56,370
compressed headers and parallelizing and

00:21:53,670 --> 00:21:59,429
all that sort of stuff that's enabled by

00:21:56,370 --> 00:22:01,980
using HTTP too so people used to think

00:21:59,429 --> 00:22:04,019
that HTTP was slower because

00:22:01,980 --> 00:22:07,350
everything is encapsulated in encrypted

00:22:04,019 --> 00:22:09,899
but it's actually not true so HTTP -

00:22:07,350 --> 00:22:13,110
made made it so that running a secure

00:22:09,899 --> 00:22:16,799
site is actually faster than running a

00:22:13,110 --> 00:22:19,500
plain HTTP site if this is the first

00:22:16,799 --> 00:22:23,130
time you've heard this I'm hoping that

00:22:19,500 --> 00:22:25,889
convinced you to secure your site all

00:22:23,130 --> 00:22:29,039
right latest PHP MySQL and you know

00:22:25,889 --> 00:22:31,289
regular updates and because some some

00:22:29,039 --> 00:22:35,970
hosts are really cheap and they don't

00:22:31,289 --> 00:22:37,740
update so if that's yours just move low

00:22:35,970 --> 00:22:40,470
average server load especially if you're

00:22:37,740 --> 00:22:43,559
on shared hosting talk to your hosting

00:22:40,470 --> 00:22:45,269
provider it may cost you more really but

00:22:43,559 --> 00:22:47,880
it'll be worth it especially if you have

00:22:45,269 --> 00:22:50,519
a business website remember the the

00:22:47,880 --> 00:22:52,320
first the reason for speed the need for

00:22:50,519 --> 00:22:55,769
speed so if you get more conversions

00:22:52,320 --> 00:23:01,110
that will more than cover better hosting

00:22:55,769 --> 00:23:03,269
costs yeah make sure you get a usage

00:23:01,110 --> 00:23:07,260
spiked allowance so sometimes you get

00:23:03,269 --> 00:23:09,409
the odd like you run a campaign and as

00:23:07,260 --> 00:23:13,679
soon as it launches all these people

00:23:09,409 --> 00:23:16,919
hurry up and load your site hosting

00:23:13,679 --> 00:23:18,480
should should handle this content

00:23:16,919 --> 00:23:20,850
delivery network I'm not going to go too

00:23:18,480 --> 00:23:23,279
much into it because it makes things a

00:23:20,850 --> 00:23:25,409
bit more complicated as well as faster

00:23:23,279 --> 00:23:27,419
if your sites in Australia don't worry

00:23:25,409 --> 00:23:30,120
about it use Australian hosting in and

00:23:27,419 --> 00:23:33,000
that's fine if you're trying to target

00:23:30,120 --> 00:23:34,679
the world in Australia you lose

00:23:33,000 --> 00:23:38,039
something by using the likes of

00:23:34,679 --> 00:23:41,039
CloudFlare so just way way your options

00:23:38,039 --> 00:23:44,159
some hosting providers provide their own

00:23:41,039 --> 00:23:49,169
their own content delivery network and

00:23:44,159 --> 00:23:52,559
it might be points for them alright

00:23:49,169 --> 00:23:58,289
first plug-in is autop demise what at

00:23:52,559 --> 00:24:01,950
optimize does is it grabs your CSS and

00:23:58,289 --> 00:24:06,510
combines it into one file and then

00:24:01,950 --> 00:24:08,669
minify zit it grabs your scripts and I

00:24:06,510 --> 00:24:10,830
think it generates to everything that

00:24:08,669 --> 00:24:13,289
needs to be in the head and everything

00:24:10,830 --> 00:24:14,920
that needs to be deferred and shoved in

00:24:13,289 --> 00:24:17,800
the footer

00:24:14,920 --> 00:24:20,770
and so it combines them and minifides

00:24:17,800 --> 00:24:22,900
them and then it minifides your HTML

00:24:20,770 --> 00:24:25,210
page itself okay

00:24:22,900 --> 00:24:29,790
so a little bit of processing overhead

00:24:25,210 --> 00:24:33,310
and stuff but it uses its own cache so

00:24:29,790 --> 00:24:36,190
you've changed your theme and uploaded a

00:24:33,310 --> 00:24:38,710
new style sheet the next time around it

00:24:36,190 --> 00:24:42,580
notices it picks it up regenerates it or

00:24:38,710 --> 00:24:44,490
you do you know clear caching it redoes

00:24:42,580 --> 00:24:48,070
it the next on the next page load and

00:24:44,490 --> 00:24:51,640
and that's it so really hardly any

00:24:48,070 --> 00:24:54,430
downside it does have a few options like

00:24:51,640 --> 00:24:57,280
in lining things or aggregating inline

00:24:54,430 --> 00:24:59,080
code and things like that so not

00:24:57,280 --> 00:25:01,000
everything works for every site not

00:24:59,080 --> 00:25:04,330
everything is compatible with every

00:25:01,000 --> 00:25:06,850
plugin but you know worse worst case you

00:25:04,330 --> 00:25:09,340
don't do the absolute thing we're aiming

00:25:06,850 --> 00:25:15,340
for 95 percent and this will definitely

00:25:09,340 --> 00:25:18,850
get you 95 percent thanks WP fastest

00:25:15,340 --> 00:25:20,880
cache it also does minification it also

00:25:18,850 --> 00:25:24,640
does combination also does other things

00:25:20,880 --> 00:25:27,210
but I don't suggest that you do it not

00:25:24,640 --> 00:25:29,890
optimize I found is the best

00:25:27,210 --> 00:25:32,550
minification combination unification

00:25:29,890 --> 00:25:36,910
plug-in out there so I've stopped

00:25:32,550 --> 00:25:40,060
minifying with WP fastest cache I just

00:25:36,910 --> 00:25:43,180
use it for for caching browser caching

00:25:40,060 --> 00:25:45,460
is an interesting one because it it's

00:25:43,180 --> 00:25:49,420
actually a bunch of instructions that go

00:25:45,460 --> 00:25:53,890
into your htaccess file on the server so

00:25:49,420 --> 00:25:55,810
the server then tells the browser this

00:25:53,890 --> 00:26:00,580
file there for example this file that I

00:25:55,810 --> 00:26:03,250
have is is two months old so the browser

00:26:00,580 --> 00:26:08,620
says ok give me the give me the they

00:26:03,250 --> 00:26:11,800
just get me the latest one because the

00:26:08,620 --> 00:26:16,180
the expire is at two a month ok so you

00:26:11,800 --> 00:26:19,980
can set rules of how long to cache

00:26:16,180 --> 00:26:21,870
objects and and so on

00:26:19,980 --> 00:26:24,120
I don't want to get too much into it

00:26:21,870 --> 00:26:26,760
because the plug-in does everything for

00:26:24,120 --> 00:26:31,139
you out of the box what you have to do

00:26:26,760 --> 00:26:33,659
is save the settings yeah I have

00:26:31,139 --> 00:26:39,179
I've actually contributed to it pretty

00:26:33,659 --> 00:26:41,370
part of myself you can disable emojis so

00:26:39,179 --> 00:26:46,139
eliminate that component if you don't

00:26:41,370 --> 00:26:50,669
actually need to load it and again

00:26:46,139 --> 00:26:57,210
preload is a really good function that I

00:26:50,669 --> 00:26:59,580
use what else yeah that's that's

00:26:57,210 --> 00:27:02,250
basically it eliminates render blocking

00:26:59,580 --> 00:27:05,519
scripts one thing it does is it's got a

00:27:02,250 --> 00:27:09,779
setting for a Google Fonts whether you

00:27:05,519 --> 00:27:11,490
want to defer them or not but result if

00:27:09,779 --> 00:27:14,220
it doesn't happen quickly enough it what

00:27:11,490 --> 00:27:16,380
it can result in the page rendering with

00:27:14,220 --> 00:27:18,240
your default font and then switching to

00:27:16,380 --> 00:27:20,669
the Google font so if that happens to

00:27:18,240 --> 00:27:27,990
you just just turn off google's fast

00:27:20,669 --> 00:27:30,059
enough where are we okay alright I I

00:27:27,990 --> 00:27:32,720
love this plug-in I really love this

00:27:30,059 --> 00:27:35,700
plug-in I've interacted a lot with

00:27:32,720 --> 00:27:36,929
developer he's as a gorgeous guy is

00:27:35,700 --> 00:27:41,480
really helpful and he's really

00:27:36,929 --> 00:27:44,460
knowledgeable about image processing and

00:27:41,480 --> 00:27:49,019
so this this plugin does a lot of things

00:27:44,460 --> 00:27:52,409
you can set it up to crop and the the

00:27:49,019 --> 00:27:54,630
uploads home so you upload them in and

00:27:52,409 --> 00:27:58,139
then either by schedule or immediately

00:27:54,630 --> 00:28:00,990
it will limit it to the maximum size

00:27:58,139 --> 00:28:03,659
that you want to have on your site it

00:28:00,990 --> 00:28:06,600
will reduce the quality setting it will

00:28:03,659 --> 00:28:12,240
convert it to web P and then there are

00:28:06,600 --> 00:28:16,769
two methods it it has to lazy load

00:28:12,240 --> 00:28:19,350
images yeah that's that's what I I think

00:28:16,769 --> 00:28:21,899
I helped a little bit the lazy loading

00:28:19,350 --> 00:28:24,510
and it's magnificent the lazy loading is

00:28:21,899 --> 00:28:30,330
magnificent because usually the problem

00:28:24,510 --> 00:28:33,360
is that page the images by like the

00:28:30,330 --> 00:28:37,470
placeholders are not in the same

00:28:33,360 --> 00:28:40,279
proportion as the actual image and this

00:28:37,470 --> 00:28:43,139
plug-in loads a placeholder that size

00:28:40,279 --> 00:28:46,159
exactly like the image that you're going

00:28:43,139 --> 00:28:53,070
to load later except it's a few bytes

00:28:46,159 --> 00:28:57,330
boom so this is I think sorry oops I

00:28:53,070 --> 00:29:01,830
think it's by far the best image lazy

00:28:57,330 --> 00:29:06,360
loader out there now WP fastest cache

00:29:01,830 --> 00:29:09,149
does have a premium version which I use

00:29:06,360 --> 00:29:11,639
on some sites and it squeezes that

00:29:09,149 --> 00:29:16,529
little bit extra and then you don't need

00:29:11,639 --> 00:29:19,590
out optimized and aaww if you want to

00:29:16,529 --> 00:29:23,190
have extra compression it's got is like

00:29:19,590 --> 00:29:26,820
an online service and it's got yeah but

00:29:23,190 --> 00:29:29,909
really for the for the purpose of

00:29:26,820 --> 00:29:32,840
getting the most that you can within a

00:29:29,909 --> 00:29:37,230
really short amount of time and paying

00:29:32,840 --> 00:29:41,730
zippity-doo-dah what i've shown you is

00:29:37,230 --> 00:29:44,909
is all free just a point on PHP setup

00:29:41,730 --> 00:29:48,240
and if you going this is cPanel so if

00:29:44,909 --> 00:29:50,190
you go into the cPanel PHP settings you

00:29:48,240 --> 00:29:53,490
can change yourself

00:29:50,190 --> 00:29:55,710
you can you can pick the version I would

00:29:53,490 --> 00:29:58,620
encourage you to stay off the cutting

00:29:55,710 --> 00:30:03,720
edge because some of your components may

00:29:58,620 --> 00:30:05,610
not work with PHP tends to be stricter

00:30:03,720 --> 00:30:09,090
over time so it tends to not allow

00:30:05,610 --> 00:30:11,070
things that used to be in order to be

00:30:09,090 --> 00:30:17,159
more secure it's starting to be more

00:30:11,070 --> 00:30:20,850
restrictive so check always test on a on

00:30:17,159 --> 00:30:25,409
a test site first and see if anything

00:30:20,850 --> 00:30:27,750
breaks and you can see in red up code up

00:30:25,409 --> 00:30:30,389
cache and that's the thing that you need

00:30:27,750 --> 00:30:36,630
to absolutely turn on on every one of

00:30:30,389 --> 00:30:39,849
your sites that's it

00:30:36,630 --> 00:30:39,849
[Applause]

00:30:41,550 --> 00:30:46,240
Thank You gal are some great tips on how

00:30:43,840 --> 00:30:47,470
to make your website go go faster

00:30:46,240 --> 00:30:52,110
never got some time for some questions

00:30:47,470 --> 00:30:52,110
if anyone wants to ask girl something

00:30:57,210 --> 00:31:01,750
this is when speakers have heart

00:30:59,530 --> 00:31:06,910
palpitations you know am I gonna get

00:31:01,750 --> 00:31:09,850
questions just in regards to images do

00:31:06,910 --> 00:31:12,880
you have a recommended maximum size that

00:31:09,850 --> 00:31:15,940
for images in terms of dimensions yes

00:31:12,880 --> 00:31:19,630
yeah fastest more and more of an

00:31:15,940 --> 00:31:23,560
algorithm really of how to find out the

00:31:19,630 --> 00:31:25,060
the good image sizes and you can pretty

00:31:23,560 --> 00:31:27,970
much do it when you have a wireframe

00:31:25,060 --> 00:31:30,250
already in the design stage what you

00:31:27,970 --> 00:31:32,020
work out is your layout breaks and then

00:31:30,250 --> 00:31:34,600
you figure out which padding and margins

00:31:32,020 --> 00:31:37,120
and whatnot how much space you actually

00:31:34,600 --> 00:31:40,180
have in each one of your layout breaks

00:31:37,120 --> 00:31:42,910
for the image so if it's a full-size

00:31:40,180 --> 00:31:45,360
featured image or if it's floated left

00:31:42,910 --> 00:31:47,920
medium sized or something like that you

00:31:45,360 --> 00:31:51,070
you kind of know where they're gonna fit

00:31:47,920 --> 00:31:52,990
within the context of the site so even

00:31:51,070 --> 00:31:55,030
even with a wireframe you can already

00:31:52,990 --> 00:31:59,590
figure out how much space you're gonna

00:31:55,030 --> 00:32:01,650
have for your images and their your so

00:31:59,590 --> 00:32:04,870
for each one of these layers out breaks

00:32:01,650 --> 00:32:07,210
once you know the size you you configure

00:32:04,870 --> 00:32:09,760
you can figure that size and so you get

00:32:07,210 --> 00:32:13,300
you get three for free so you get your

00:32:09,760 --> 00:32:17,920
your large size your medium size in your

00:32:13,300 --> 00:32:22,270
thumbnail you know I I generally don't

00:32:17,920 --> 00:32:25,300
change thumbnail because it's used by

00:32:22,270 --> 00:32:27,130
various admin things and so you don't

00:32:25,300 --> 00:32:29,890
want to change it but medium and large I

00:32:27,130 --> 00:32:31,720
do I do mess around weights because

00:32:29,890 --> 00:32:34,590
they're already there and why would you

00:32:31,720 --> 00:32:39,210
have an extra one if you don't need it

00:32:34,590 --> 00:32:43,230
aawww image optimizer in the resize tab

00:32:39,210 --> 00:32:46,310
will show you what sizes you have active

00:32:43,230 --> 00:32:49,360
will allow you to deactivate

00:32:46,310 --> 00:32:52,910
of them will allow you to turn off

00:32:49,360 --> 00:32:54,740
optimization for some of them so it's

00:32:52,910 --> 00:32:56,390
really it's really crafted that way so

00:32:54,740 --> 00:32:58,160
if you use a parent theme that defines

00:32:56,390 --> 00:33:01,430
all these sizes but you really don't

00:32:58,160 --> 00:33:03,800
need them you just tweak and then you

00:33:01,430 --> 00:33:06,050
can use something like re regenerate

00:33:03,800 --> 00:33:09,320
thumbnails and regenerate them and then

00:33:06,050 --> 00:33:14,030
you can remove it and then subsequently

00:33:09,320 --> 00:33:16,580
because a ww-will will keep it going the

00:33:14,030 --> 00:33:18,740
the right way for you then but in in

00:33:16,580 --> 00:33:21,890
your theme in your child theme if you

00:33:18,740 --> 00:33:24,650
need an extra size which you know

00:33:21,890 --> 00:33:27,950
sometimes happens like if you do column

00:33:24,650 --> 00:33:32,510
work and things like that you might want

00:33:27,950 --> 00:33:35,390
a third like image for a column that's

00:33:32,510 --> 00:33:39,020
size third or something like that so you

00:33:35,390 --> 00:33:43,490
there's a wordpress command to define so

00:33:39,020 --> 00:33:47,300
i had had had media size add image size

00:33:43,490 --> 00:33:53,090
so you just defined an extra one that

00:33:47,300 --> 00:33:57,290
you need and it has to add it should

00:33:53,090 --> 00:33:59,270
match your CSS obviously one one thing

00:33:57,290 --> 00:34:04,130
about Retina displays are high quality

00:33:59,270 --> 00:34:07,280
displays that's overhyped don't worry

00:34:04,130 --> 00:34:10,070
about it yeah seriously because if if

00:34:07,280 --> 00:34:12,410
the browser worst case the browser is

00:34:10,070 --> 00:34:14,420
going to pick a bigger one to see you

00:34:12,410 --> 00:34:16,850
might you might worry about the biggest

00:34:14,420 --> 00:34:20,330
one really but otherwise the browser

00:34:16,850 --> 00:34:24,590
will just pick the next biggest one the

00:34:20,330 --> 00:34:27,740
big sorry it will pick the the one that

00:34:24,590 --> 00:34:30,980
with the display quality still fits in

00:34:27,740 --> 00:34:33,140
that area but is the smallest but the

00:34:30,980 --> 00:34:37,100
other thing is people don't notice

00:34:33,140 --> 00:34:39,050
people really like recognized over you

00:34:37,100 --> 00:34:41,660
know over doing it it's if people don't

00:34:39,050 --> 00:34:44,840
really notice in most cases and most of

00:34:41,660 --> 00:34:47,750
us use images to illuminate the content

00:34:44,840 --> 00:34:51,080
to make it colorful to illustrate a

00:34:47,750 --> 00:34:54,320
point you don't need high resolution for

00:34:51,080 --> 00:34:54,919
that yeah so just a question at the back

00:34:54,320 --> 00:34:56,539
here

00:34:54,919 --> 00:34:58,490
I've got a couple of questions actually

00:34:56,539 --> 00:35:00,950
first one I think I know the answer to

00:34:58,490 --> 00:35:02,839
already but the WP crone I assume that

00:35:00,950 --> 00:35:05,000
still runs even when you're using a

00:35:02,839 --> 00:35:08,809
patient page caching plug-in is that

00:35:05,000 --> 00:35:11,930
right well if you just install page

00:35:08,809 --> 00:35:14,390
caching plug-in by default if you don't

00:35:11,930 --> 00:35:17,000
change the chrome the way chrome runs on

00:35:14,390 --> 00:35:20,569
certain page loads of which you have

00:35:17,000 --> 00:35:23,589
fewer now it when it's time

00:35:20,569 --> 00:35:26,779
WP cron will be run and it will preload

00:35:23,589 --> 00:35:29,150
pages or whatever but what happens is

00:35:26,779 --> 00:35:32,150
it's it's gonna be regular especially if

00:35:29,150 --> 00:35:34,010
your site's not getting too much traffic

00:35:32,150 --> 00:35:35,329
and you may not be able to preload

00:35:34,010 --> 00:35:38,420
everything because you don't have it

00:35:35,329 --> 00:35:42,500
running enough times a day so what I've

00:35:38,420 --> 00:35:45,349
done is I've consulted my guru of

00:35:42,500 --> 00:35:48,380
WordPress Dione he said fifteen fifteen

00:35:45,349 --> 00:35:50,569
minute interval is fine and so I've got

00:35:48,380 --> 00:35:54,650
it within cpanel I've got a cron job

00:35:50,569 --> 00:35:59,630
that simply runs the WP ground and cron

00:35:54,650 --> 00:36:01,640
on a 15 minute interval and seems to be

00:35:59,630 --> 00:36:05,029
enough and it pre loves everything you

00:36:01,640 --> 00:36:09,380
can tweak WP fastest cache and tell it

00:36:05,029 --> 00:36:12,170
how many pages to preload per run so you

00:36:09,380 --> 00:36:15,250
can tweak it to your ya frequency yep

00:36:12,170 --> 00:36:18,200
just a second question with the DNS pre

00:36:15,250 --> 00:36:20,569
impregnates that sounds like something

00:36:18,200 --> 00:36:22,970
that should be automated in some plugins

00:36:20,569 --> 00:36:25,579
surely and like I said it's automated

00:36:22,970 --> 00:36:30,279
with jetpack okay they they do it for

00:36:25,579 --> 00:36:33,410
the anyway they use like a it's like a

00:36:30,279 --> 00:36:35,180
convict so you're thinking like

00:36:33,410 --> 00:36:36,890
generically like it should be able to

00:36:35,180 --> 00:36:38,180
look at the page and know what external

00:36:36,890 --> 00:36:39,920
scripts and so forth are being loaded

00:36:38,180 --> 00:36:41,609
and be able to just automatically put it

00:36:39,920 --> 00:36:44,069
into the header shortly

00:36:41,609 --> 00:36:46,259
we heard of that window look I just put

00:36:44,069 --> 00:36:49,049
it in the child theme so if I know I

00:36:46,259 --> 00:36:51,450
need Google Fonts I just prefetch the

00:36:49,049 --> 00:36:54,720
Google Fonts you know phones thud Google

00:36:51,450 --> 00:36:56,339
API calm anything else I just stick it

00:36:54,720 --> 00:36:57,599
in the header yeah it's a good idea for

00:36:56,339 --> 00:37:00,869
a plugin if someone hasn't made it yet

00:36:57,599 --> 00:37:03,779
ready hey so it's the last thing in the

00:37:00,869 --> 00:37:06,029
GT metrics report - yeah if I'm figuring

00:37:03,779 --> 00:37:07,759
out yeah but now everybody knows you

00:37:06,029 --> 00:37:09,869
have this idea so you have to hurry up

00:37:07,759 --> 00:37:15,239
gal we have a question up at the back

00:37:09,869 --> 00:37:17,999
another site here thank you this might

00:37:15,239 --> 00:37:19,650
be wishful thinking but do you foresee a

00:37:17,999 --> 00:37:22,489
time in the future where we won't need

00:37:19,650 --> 00:37:25,200
to do these sorts of optimizations for

00:37:22,489 --> 00:37:27,299
page load and things I feel like it'll

00:37:25,200 --> 00:37:29,609
just be Internet will be fast enough or

00:37:27,299 --> 00:37:36,440
we always have to worry about people

00:37:29,609 --> 00:37:39,059
with low at slower speeds okay

00:37:36,440 --> 00:37:42,960
first part is you know the expression

00:37:39,059 --> 00:37:44,460
the future is here I got this curve

00:37:42,960 --> 00:37:46,380
number how I found out about it but

00:37:44,460 --> 00:37:49,109
there's this service that runs like

00:37:46,380 --> 00:37:50,670
superfast WordPress that you you don't

00:37:49,109 --> 00:37:53,869
need to cache it just generates in

00:37:50,670 --> 00:37:56,970
something like 0.03 seconds or something

00:37:53,869 --> 00:38:01,380
renders the page like something super

00:37:56,970 --> 00:38:05,220
fast but it's it has a price to match so

00:38:01,380 --> 00:38:06,900
in essence this is a free solution so

00:38:05,220 --> 00:38:10,200
it's it's a poor-man's solution but it

00:38:06,900 --> 00:38:14,009
does 95 percent of the job and the

00:38:10,200 --> 00:38:18,049
problem with caching is how dynamic it

00:38:14,009 --> 00:38:22,680
doesn't work with very dynamic sites

00:38:18,049 --> 00:38:26,999
WordPress is shifting towards react

00:38:22,680 --> 00:38:30,140
based or Java store headless or ever you

00:38:26,999 --> 00:38:33,089
want to call it where you load the page

00:38:30,140 --> 00:38:36,539
framework just once and then it updates

00:38:33,089 --> 00:38:40,710
bits of it dynamic dynamically and you

00:38:36,539 --> 00:38:43,410
can cache these these beats but but

00:38:40,710 --> 00:38:45,690
grabbing them is a lot faster so maybe

00:38:43,410 --> 00:38:47,970
you don't need to because you don't need

00:38:45,690 --> 00:38:50,309
to grab the stylesheet ever again you

00:38:47,970 --> 00:38:51,989
just load it once and some of the

00:38:50,309 --> 00:38:54,299
scripts were like this the script

00:38:51,989 --> 00:38:54,940
framework is already there so so in

00:38:54,299 --> 00:38:58,480
essence the

00:38:54,940 --> 00:39:01,329
futures is already here but you have to

00:38:58,480 --> 00:39:03,099
find out whether it's suitable for your

00:39:01,329 --> 00:39:09,490
application and whether you can afford

00:39:03,099 --> 00:39:12,339
it thank you hi just up the back I spoke

00:39:09,490 --> 00:39:13,900
to you at the start look you may have

00:39:12,339 --> 00:39:16,030
already alluded to this when you were

00:39:13,900 --> 00:39:18,220
talking about Google Fonts but I've

00:39:16,030 --> 00:39:19,930
found the biggest ovations have been

00:39:18,220 --> 00:39:22,119
when you sort of reach out to other

00:39:19,930 --> 00:39:25,630
sites to pull things in so whether it's

00:39:22,119 --> 00:39:29,619
Facebook or other Google services

00:39:25,630 --> 00:39:32,560
ironically how can you improve the speed

00:39:29,619 --> 00:39:34,839
of those well one thing you can do is

00:39:32,560 --> 00:39:38,910
there is a plugin free plug-in in the

00:39:34,839 --> 00:39:42,060
WordPress repository that will copy down

00:39:38,910 --> 00:39:46,000
google fonts that you need and will

00:39:42,060 --> 00:39:47,650
serve them from your site locally so you

00:39:46,000 --> 00:39:51,540
can consider doing that and then you

00:39:47,650 --> 00:39:56,500
would not dependent dependent on anybody

00:39:51,540 --> 00:40:00,810
but I don't like look trying to control

00:39:56,500 --> 00:40:03,790
Google is like herding herding gays it's

00:40:00,810 --> 00:40:06,250
you can't it's it's its own company it's

00:40:03,790 --> 00:40:08,890
got its own servers the only thing you

00:40:06,250 --> 00:40:12,339
can do is trust them to be a lot better

00:40:08,890 --> 00:40:14,530
than us they because they are in most

00:40:12,339 --> 00:40:17,950
cases they're a lot better than us and

00:40:14,530 --> 00:40:21,310
they say and in the same with the same

00:40:17,950 --> 00:40:24,430
philosophy that I'm saying get 95% of it

00:40:21,310 --> 00:40:27,130
done for free and in five minutes it's

00:40:24,430 --> 00:40:28,930
the same thing here do you want to pay

00:40:27,130 --> 00:40:30,760
for phones and install them and update

00:40:28,930 --> 00:40:31,240
them and so on Google does that for you

00:40:30,760 --> 00:40:33,490
for free

00:40:31,240 --> 00:40:38,650
so you just plug it into your semen and

00:40:33,490 --> 00:40:44,079
use it and okay you know once in five

00:40:38,650 --> 00:40:46,780
years it's got a glitch okay it's fine

00:40:44,079 --> 00:40:49,770
you know we can handle it unless it's

00:40:46,780 --> 00:40:52,839
some mission-critical you know NASA

00:40:49,770 --> 00:40:57,220
WordPress site that has to communicate

00:40:52,839 --> 00:40:59,290
with the moon it's fine that is it we

00:40:57,220 --> 00:41:00,630
write of tanki please get a gal around

00:40:59,290 --> 00:41:02,690
for plaus

00:41:00,630 --> 00:41:02,690
you

00:41:03,690 --> 00:41:07,300

YouTube URL: https://www.youtube.com/watch?v=dTGpyPkuoMQ


