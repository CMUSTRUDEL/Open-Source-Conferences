Title: Ryan Kienstra: A Quickstart Guide to React Development
Publication date: 2019-10-27
Playlist: WordCamp Brisbane 2019
Description: 
	If you already know JavaScript, but don’t have much React experience, you’ll learn what you need get started. You’ll then be able to develop your own blocks and extend Gutenberg.
You’ll see the most important parts of ES6 and JSX to know. Also, you’ll learn the basics of how React works, see a basic build setup, and learn about ES6 modules.
https://2019.brisbane.wordcamp.org/session/a-quickstart-guide-to-react-development/

WPTV link: https://wordpress.tv/2019/10/22/ryan-kienstra-a-quickstart-guide-to-react-development/
Captions: 
	00:00:01,260 --> 00:00:10,410
[Music]

00:00:03,080 --> 00:00:12,889
thanks Joe you have to code a custom

00:00:10,410 --> 00:00:15,120
Gutenberg black for a client

00:00:12,889 --> 00:00:18,810
unfortunately you can't use the existing

00:00:15,120 --> 00:00:21,630
blacks it has to have custom markup

00:00:18,810 --> 00:00:23,390
around it and custom styling so you're

00:00:21,630 --> 00:00:26,220
going to be writing your own black

00:00:23,390 --> 00:00:29,400
sounds exciting there's only one problem

00:00:26,220 --> 00:00:31,830
you don't know much about react which is

00:00:29,400 --> 00:00:36,570
the place I was in an earlier part of

00:00:31,830 --> 00:00:38,969
this year should you learn a lot about

00:00:36,570 --> 00:00:41,640
it first you might take an online course

00:00:38,969 --> 00:00:45,030
you might try to learn a lot about the

00:00:41,640 --> 00:00:47,280
background of how react works redux try

00:00:45,030 --> 00:00:48,899
to learn a lot about Gutenberg check out

00:00:47,280 --> 00:00:51,930
several plugins then maybe you can get

00:00:48,899 --> 00:00:55,050
started eventually on your own black so

00:00:51,930 --> 00:00:57,120
if you're thinking about how much react

00:00:55,050 --> 00:01:00,480
you should learn before you get started

00:00:57,120 --> 00:01:03,570
developing I think you should learn as

00:01:00,480 --> 00:01:06,930
little as possible you'll learn what you

00:01:03,570 --> 00:01:08,580
need to do this as you go but we're

00:01:06,930 --> 00:01:12,409
going to talk about the basics that

00:01:08,580 --> 00:01:15,509
you'll need to code your first black and

00:01:12,409 --> 00:01:17,670
it'll be best practice it won't be

00:01:15,509 --> 00:01:19,680
sloppy code but we're going to get

00:01:17,670 --> 00:01:21,630
started right away instead of waiting

00:01:19,680 --> 00:01:23,820
until you know all the internals of this

00:01:21,630 --> 00:01:28,200
and you really confident with how react

00:01:23,820 --> 00:01:30,090
and Gutenberg work it's easy to get

00:01:28,200 --> 00:01:32,520
caught up in the details sometimes of

00:01:30,090 --> 00:01:35,250
really diving into everything sometimes

00:01:32,520 --> 00:01:38,549
I tend to procrastinate by doing a lot

00:01:35,250 --> 00:01:40,170
of research taking online courses but I

00:01:38,549 --> 00:01:40,680
think it's good to dive into it right

00:01:40,170 --> 00:01:44,430
away

00:01:40,680 --> 00:01:47,100
so let's do that we'll talk about some

00:01:44,430 --> 00:01:48,450
of the main concepts in this this is

00:01:47,100 --> 00:01:51,060
definitely not going to give you

00:01:48,450 --> 00:01:54,409
everything you need about it but it'll

00:01:51,060 --> 00:01:55,530
give you what you need to get started

00:01:54,409 --> 00:01:59,130
JSX

00:01:55,530 --> 00:02:01,950
is the main construct and react as you

00:01:59,130 --> 00:02:05,009
might be familiar with it's very similar

00:02:01,950 --> 00:02:10,759
to HTML you can think of it like HTML

00:02:05,009 --> 00:02:10,759
with some custom props and handlers

00:02:10,819 --> 00:02:17,000
as you can see it looks very similar you

00:02:13,430 --> 00:02:20,900
have the HTML on the top and it has

00:02:17,000 --> 00:02:23,599
properties in JSX as you can see in the

00:02:20,900 --> 00:02:25,790
bottom just like HTML that's one of the

00:02:23,599 --> 00:02:28,040
main differences there is that you can

00:02:25,790 --> 00:02:30,470
have dynamic properties properties they

00:02:28,040 --> 00:02:34,099
have Java scripts so the basic one is

00:02:30,470 --> 00:02:36,049
the class you have just a string of my

00:02:34,099 --> 00:02:39,889
class you'll see that it appears just

00:02:36,049 --> 00:02:42,980
like usual in HTML but you also have

00:02:39,889 --> 00:02:44,720
that property of on click and that's

00:02:42,980 --> 00:02:46,069
about you adding JavaScript inside of

00:02:44,720 --> 00:02:47,540
that it might look a little strange

00:02:46,069 --> 00:02:49,340
remember seeing that arrow function

00:02:47,540 --> 00:02:51,319
looked really weird to me when I first

00:02:49,340 --> 00:02:52,879
looked at something like this but we'll

00:02:51,319 --> 00:02:55,609
talk about some of this syntax

00:02:52,879 --> 00:02:57,200
and get you what you need to really get

00:02:55,609 --> 00:03:03,849
started with this with best practice

00:02:57,200 --> 00:03:06,829
code you'll often see JSS wrapped in

00:03:03,849 --> 00:03:08,659
parenthesis this really tripped me up

00:03:06,829 --> 00:03:11,780
the first time I saw it it's pretty

00:03:08,659 --> 00:03:15,500
confusing but all this is is returning

00:03:11,780 --> 00:03:17,180
the JSX and that's just because in

00:03:15,500 --> 00:03:18,889
JavaScript the way it works is if you

00:03:17,180 --> 00:03:21,139
return something but there's nothing on

00:03:18,889 --> 00:03:23,419
the line where you have a return it

00:03:21,139 --> 00:03:26,030
actually won't return anything so it's

00:03:23,419 --> 00:03:27,739
essentially a wrapper for this one

00:03:26,030 --> 00:03:29,629
exception that you might see for this is

00:03:27,739 --> 00:03:32,629
if you're just returning a single line

00:03:29,629 --> 00:03:36,349
of JSX if this works just to be returned

00:03:32,629 --> 00:03:38,060
open div close div and then semicolon

00:03:36,349 --> 00:03:40,639
it's a lot simpler you don't really need

00:03:38,060 --> 00:03:43,099
to wrap it in parenthesis but that's

00:03:40,639 --> 00:03:45,229
pretty similar sometimes you'll see this

00:03:43,099 --> 00:03:46,489
being wrapped in brackets also it looks

00:03:45,229 --> 00:03:49,840
a little confusing but you'll see it

00:03:46,489 --> 00:03:52,970
wrapped in open closing bracket and then

00:03:49,840 --> 00:03:55,489
open closing bracket with a slash and

00:03:52,970 --> 00:03:56,900
the very bottom but that's pretty much

00:03:55,489 --> 00:04:02,419
the same thing it's just a wrapper for

00:03:56,900 --> 00:04:06,409
all of it we looked at the props just

00:04:02,419 --> 00:04:07,849
like how HTML has props and the nice

00:04:06,409 --> 00:04:11,000
thing at is that these are available

00:04:07,849 --> 00:04:14,780
inside the rendering function so there

00:04:11,000 --> 00:04:17,209
are two parts of JSX you have the actual

00:04:14,780 --> 00:04:20,510
syntax of it like on the top and then

00:04:17,209 --> 00:04:22,820
all of these components just like HTML

00:04:20,510 --> 00:04:24,139
elements there we'll have a rendering

00:04:22,820 --> 00:04:27,090
function or

00:04:24,139 --> 00:04:29,520
class which is really a function also

00:04:27,090 --> 00:04:32,550
and then that becomes available inside

00:04:29,520 --> 00:04:35,340
the function we have that prop of on

00:04:32,550 --> 00:04:38,070
click and then we'll see that so that's

00:04:35,340 --> 00:04:41,639
the typical syntax you'll see for reiax

00:04:38,070 --> 00:04:46,650
functions you'll have a capital name

00:04:41,639 --> 00:04:48,090
it's usually capital and then camel case

00:04:46,650 --> 00:04:48,780
I think there's another word for that

00:04:48,090 --> 00:04:51,590
also

00:04:48,780 --> 00:04:54,780
but the props available in that and then

00:04:51,590 --> 00:04:56,910
props dot on click will be your on click

00:04:54,780 --> 00:04:58,680
handler and we'll take a look at a

00:04:56,910 --> 00:05:00,510
little bit of that syntax it might look

00:04:58,680 --> 00:05:07,919
a little bit strange the brackets around

00:05:00,510 --> 00:05:09,419
it also this is the function going over

00:05:07,919 --> 00:05:12,180
most of what we talked about before

00:05:09,419 --> 00:05:17,310
you'll have edit function and then it's

00:05:12,180 --> 00:05:19,260
actually returning the JSX inside it we

00:05:17,310 --> 00:05:20,760
have on click that's available this is a

00:05:19,260 --> 00:05:23,820
pretty basic example so it's just

00:05:20,760 --> 00:05:26,400
passing it straight to that but you'll

00:05:23,820 --> 00:05:29,370
notice that the return is wrapped in

00:05:26,400 --> 00:05:31,169
parentheses and it's a pretty basic

00:05:29,370 --> 00:05:33,150
example this might be something that you

00:05:31,169 --> 00:05:35,640
would use if you're registering or black

00:05:33,150 --> 00:05:37,710
this could be your edit function and

00:05:35,640 --> 00:05:40,890
this is what will appear in the

00:05:37,710 --> 00:05:46,710
Gutenberg editor as opposed to the front

00:05:40,890 --> 00:05:49,830
ends now this is another way of writing

00:05:46,710 --> 00:05:53,400
the exact same thing really you can as

00:05:49,830 --> 00:05:56,010
an alternative have a class and this is

00:05:53,400 --> 00:05:58,200
the Edit function you can see in that

00:05:56,010 --> 00:06:01,560
render method that's doing the same

00:05:58,200 --> 00:06:06,150
thing as basically the same as the

00:06:01,560 --> 00:06:07,860
return line right there you have the

00:06:06,150 --> 00:06:09,539
render method and then you just return

00:06:07,860 --> 00:06:12,630
that same JSX

00:06:09,539 --> 00:06:14,669
this is a pretty unique thing to es6 and

00:06:12,630 --> 00:06:16,950
it's actually not necessary to use

00:06:14,669 --> 00:06:18,600
classes like this unless you're using

00:06:16,950 --> 00:06:21,000
stage so for your first block you might

00:06:18,600 --> 00:06:24,750
not be using this but as you're looking

00:06:21,000 --> 00:06:28,200
at gutenberg wax you should be aware of

00:06:24,750 --> 00:06:30,660
what this works like and how this works

00:06:28,200 --> 00:06:32,580
you'll sometimes have more methods for

00:06:30,660 --> 00:06:35,669
example there's the render method here

00:06:32,580 --> 00:06:37,560
and you could have other ones for all

00:06:35,669 --> 00:06:39,810
the handlers but it's

00:06:37,560 --> 00:06:42,360
nice constructs it's sort of like a PHP

00:06:39,810 --> 00:06:45,600
class or a class in any other olp

00:06:42,360 --> 00:06:47,220
language but this is pretty useful the

00:06:45,600 --> 00:06:49,560
case where you'll definitely need to use

00:06:47,220 --> 00:06:52,650
a class like this is if you're using the

00:06:49,560 --> 00:06:54,419
state of the component and don't get too

00:06:52,650 --> 00:06:57,419
worried about what that means right now

00:06:54,419 --> 00:06:59,850
but one case where you might need to use

00:06:57,419 --> 00:07:04,860
state is if you're fetching from an API

00:06:59,850 --> 00:07:07,889
for example in a plugin we were fetching

00:07:04,860 --> 00:07:10,080
the users and making a request so we set

00:07:07,889 --> 00:07:12,180
the state when the request came back so

00:07:10,080 --> 00:07:15,120
we knew when to display something but a

00:07:12,180 --> 00:07:17,360
lot of times for pretty basic blocks you

00:07:15,120 --> 00:07:20,419
won't be needing to handle the state so

00:07:17,360 --> 00:07:23,729
just be aware that this class exists and

00:07:20,419 --> 00:07:26,370
those are some cases that you'll need it

00:07:23,729 --> 00:07:34,290
like if you're using state or if you're

00:07:26,370 --> 00:07:37,889
using API call us with that this is

00:07:34,290 --> 00:07:39,300
another strange part of es6 and it's

00:07:37,889 --> 00:07:42,210
much more common here to see arrow

00:07:39,300 --> 00:07:44,910
functions than the previous function

00:07:42,210 --> 00:07:49,440
syntax at the bottom you see something

00:07:44,910 --> 00:07:52,380
from es5 which is older more traditional

00:07:49,440 --> 00:07:54,690
at javascript and there are of course

00:07:52,380 --> 00:07:57,090
many ways to write function declarations

00:07:54,690 --> 00:07:59,640
but one of them is just a plain function

00:07:57,090 --> 00:08:04,080
myfunc and it's pretty rare to see that

00:07:59,640 --> 00:08:05,160
in Gutenberg type code there's nothing

00:08:04,080 --> 00:08:08,639
wrong with it actually

00:08:05,160 --> 00:08:11,570
other than this but typically we'll use

00:08:08,639 --> 00:08:14,880
es6 and plugins that extend Gutenberg or

00:08:11,570 --> 00:08:17,010
write custom blocks so they see at the

00:08:14,880 --> 00:08:20,160
top the main difference is the fat arrow

00:08:17,010 --> 00:08:22,289
and it was really confusing the for

00:08:20,160 --> 00:08:25,070
several times as I saw that how the fat

00:08:22,289 --> 00:08:28,139
arrow works but it's just shorthand and

00:08:25,070 --> 00:08:30,870
it's nice even see the parameter of

00:08:28,139 --> 00:08:32,909
slides it's not even necessary to wrap

00:08:30,870 --> 00:08:34,860
that in parentheses for it to work

00:08:32,909 --> 00:08:37,169
typically you'll see it wrapped in

00:08:34,860 --> 00:08:40,380
parentheses but it'll still evaluate the

00:08:37,169 --> 00:08:42,900
same if it's just a single paranthesis

00:08:40,380 --> 00:08:45,900
and the nice thing about arrow functions

00:08:42,900 --> 00:08:49,190
is that they make it much easier to use

00:08:45,900 --> 00:08:49,190
with event handlers

00:08:51,170 --> 00:08:55,290
similarly you can just have the single

00:08:53,399 --> 00:08:58,140
line return it's not too important to

00:08:55,290 --> 00:09:01,950
know this it can be confusing if you see

00:08:58,140 --> 00:09:03,330
this in a black but if you see in slides

00:09:01,950 --> 00:09:05,250
is the parameter it's pretty

00:09:03,330 --> 00:09:07,380
straightforward and then there actually

00:09:05,250 --> 00:09:10,440
there's no return statement so it's just

00:09:07,380 --> 00:09:12,570
returning slides intro first and you

00:09:10,440 --> 00:09:13,830
don't have to write return so it's a

00:09:12,570 --> 00:09:19,440
little bit easier if you have something

00:09:13,830 --> 00:09:23,610
to put that on one line also this is a

00:09:19,440 --> 00:09:26,399
nice change in es6 the more modern

00:09:23,610 --> 00:09:28,970
implementation of or specification of

00:09:26,399 --> 00:09:32,670
java scripts and that usually will use

00:09:28,970 --> 00:09:34,709
constant ver it was really used to

00:09:32,670 --> 00:09:36,720
writing this so this is a strange change

00:09:34,709 --> 00:09:40,529
to make but it's pretty rare to see

00:09:36,720 --> 00:09:43,740
their declarations in plugins extending

00:09:40,529 --> 00:09:46,380
guttenberg or writing custom blocks we

00:09:43,740 --> 00:09:48,240
typically use const unless you can't

00:09:46,380 --> 00:09:53,610
we'll talk about some cases where you

00:09:48,240 --> 00:09:57,089
can't but typically use that and the

00:09:53,610 --> 00:09:59,130
only case where you can't usually is if

00:09:57,089 --> 00:10:02,279
you need to reassign the value to

00:09:59,130 --> 00:10:06,510
something and in that case we'll use let

00:10:02,279 --> 00:10:11,000
at the bottom so here's an example of

00:10:06,510 --> 00:10:13,260
where you might need to use let and

00:10:11,000 --> 00:10:15,720
typically it'll be if you have to

00:10:13,260 --> 00:10:20,220
reassign something via a conditional or

00:10:15,720 --> 00:10:22,260
something like that in const syntax this

00:10:20,220 --> 00:10:25,470
won't allow that you'll get a browser

00:10:22,260 --> 00:10:28,020
error yeah console error and the browser

00:10:25,470 --> 00:10:30,510
from doing this but it's nice using cost

00:10:28,020 --> 00:10:37,529
it will enforce that you don't have

00:10:30,510 --> 00:10:39,589
unexpected changes to the values this is

00:10:37,529 --> 00:10:42,149
another strange thing that you'll see

00:10:39,589 --> 00:10:43,560
you don't absolutely have to do this but

00:10:42,149 --> 00:10:46,350
this will make your code a lot cleaner

00:10:43,560 --> 00:10:48,089
and more best practice remember looking

00:10:46,350 --> 00:10:50,310
back at code I wrote without using this

00:10:48,089 --> 00:10:52,770
and it looks pretty strange but it's

00:10:50,310 --> 00:10:56,100
another quirk of es6 and that's

00:10:52,770 --> 00:11:00,240
destructuring so at the top sort of

00:10:56,100 --> 00:11:05,290
traditional java scripts you just access

00:11:00,240 --> 00:11:08,260
objects values by props my prop props

00:11:05,290 --> 00:11:09,850
dot other prop but here's a shorthand

00:11:08,260 --> 00:11:12,579
alternative and it looks a little

00:11:09,850 --> 00:11:15,220
strange but in brackets you can just

00:11:12,579 --> 00:11:17,529
write the console user you wants

00:11:15,220 --> 00:11:25,180
assignment so we just pull out my prop

00:11:17,529 --> 00:11:27,100
and other prop from this here's an

00:11:25,180 --> 00:11:30,220
example of where it becomes more useful

00:11:27,100 --> 00:11:31,690
the previous one doesn't really make

00:11:30,220 --> 00:11:33,040
much of a difference although it's much

00:11:31,690 --> 00:11:36,130
more common to see the bottom example

00:11:33,040 --> 00:11:38,380
but as you're getting more perhaps that

00:11:36,130 --> 00:11:39,990
you're pulling out of that objects it

00:11:38,380 --> 00:11:44,980
makes a lot more sense to just do this

00:11:39,990 --> 00:11:47,829
it's a lot cleaner another benefit of

00:11:44,980 --> 00:11:49,899
this is that if it doesn't exist I

00:11:47,829 --> 00:11:54,490
believe it'll just be undefined so you

00:11:49,899 --> 00:11:57,070
won't be getting errors this is another

00:11:54,490 --> 00:12:00,070
quirk of es6 it's not absolutely

00:11:57,070 --> 00:12:01,600
necessary to use this most of the time

00:12:00,070 --> 00:12:04,420
you can get away without using it but

00:12:01,600 --> 00:12:07,360
it's good to be aware of more or less

00:12:04,420 --> 00:12:09,339
how this works and this is the spread

00:12:07,360 --> 00:12:14,050
air operator you can see the third line

00:12:09,339 --> 00:12:15,459
y dot dot my default and it's another

00:12:14,050 --> 00:12:18,550
pretty strange thing that took me a

00:12:15,459 --> 00:12:22,089
while to understand and essentially it

00:12:18,550 --> 00:12:24,970
takes the contents of an object or array

00:12:22,089 --> 00:12:27,760
and strips them from that and puts them

00:12:24,970 --> 00:12:30,399
in another context in this example on

00:12:27,760 --> 00:12:33,370
the third line with my default it's not

00:12:30,399 --> 00:12:34,899
copying the contents of it within an

00:12:33,370 --> 00:12:37,800
object it's not copying the actual

00:12:34,899 --> 00:12:40,510
object it's just copying the contents an

00:12:37,800 --> 00:12:43,089
common place where you might use this is

00:12:40,510 --> 00:12:45,640
with defaults if you have some defaults

00:12:43,089 --> 00:12:47,860
at the beginning but then you see in

00:12:45,640 --> 00:12:50,649
that example of the fourth line at the

00:12:47,860 --> 00:12:52,959
top you want to possibly override the

00:12:50,649 --> 00:12:54,819
defaults and it's a little bit complex

00:12:52,959 --> 00:12:56,529
it took me a while to understand how

00:12:54,819 --> 00:12:58,959
this works and it's not absolutely

00:12:56,529 --> 00:13:02,260
necessary to understand all this right

00:12:58,959 --> 00:13:04,240
away but you're gonna see this in the

00:13:02,260 --> 00:13:05,980
components that you're looking at and as

00:13:04,240 --> 00:13:09,209
you're looking at Gutenberg so it's good

00:13:05,980 --> 00:13:09,209
to be at least aware of this

00:13:10,270 --> 00:13:14,410
this is a really important thing when

00:13:12,070 --> 00:13:16,959
you're learning a new framework or a new

00:13:14,410 --> 00:13:19,390
language it's easy to waste a lot of

00:13:16,959 --> 00:13:21,220
time when something's going wrong but

00:13:19,390 --> 00:13:25,720
you don't really know what's happening

00:13:21,220 --> 00:13:29,170
so you might set a breakpoint let's say

00:13:25,720 --> 00:13:31,089
you put debugger in the code and it'll

00:13:29,170 --> 00:13:33,880
stop the execution in the browser and

00:13:31,089 --> 00:13:36,610
you can debug through the dev tools in

00:13:33,880 --> 00:13:38,190
the browser that's not bad but it's

00:13:36,610 --> 00:13:41,170
going to be a little bit harder because

00:13:38,190 --> 00:13:43,480
JSX has compiled so you'll see sort of a

00:13:41,170 --> 00:13:46,080
messy compiled version and it's going to

00:13:43,480 --> 00:13:48,940
be really hard to debug this it's

00:13:46,080 --> 00:13:51,010
something that I'll waste 30 minutes

00:13:48,940 --> 00:13:53,260
here an hour they're debugging but it

00:13:51,010 --> 00:13:55,750
really adds up I think it's worth taking

00:13:53,260 --> 00:13:59,230
the time at the beginning to get a setup

00:13:55,750 --> 00:14:01,899
like this and it'll make it a lot easier

00:13:59,230 --> 00:14:04,000
as you're developing for this to build a

00:14:01,899 --> 00:14:05,770
step through otherwise you're really

00:14:04,000 --> 00:14:08,260
flying blind I've spent a lot of time

00:14:05,770 --> 00:14:12,130
unfortunately flying blind not debugging

00:14:08,260 --> 00:14:13,600
in JavaScript or PHP before but it

00:14:12,130 --> 00:14:16,810
really helps to get something like this

00:14:13,600 --> 00:14:19,060
set up I've been using vs code for a

00:14:16,810 --> 00:14:22,029
JavaScript development which is really

00:14:19,060 --> 00:14:23,800
popular and used some other IDs but

00:14:22,029 --> 00:14:25,930
that's worked really well with setting

00:14:23,800 --> 00:14:28,810
up breakpoints it's going to take time

00:14:25,930 --> 00:14:31,630
it took me a day or two struggling with

00:14:28,810 --> 00:14:33,730
this to get it up and running but there

00:14:31,630 --> 00:14:36,399
are some good guides out there so that

00:14:33,730 --> 00:14:37,930
link is to one of my youtube videos but

00:14:36,399 --> 00:14:40,839
of course that's not the only resource

00:14:37,930 --> 00:14:42,910
you can search for this also but take

00:14:40,839 --> 00:14:45,880
the time to get a good debugging set up

00:14:42,910 --> 00:14:48,940
if you can see there's that breakpoint

00:14:45,880 --> 00:14:50,620
in the right of the image where it's

00:14:48,940 --> 00:14:53,140
actually stopped there you can step

00:14:50,620 --> 00:14:55,329
through and debug find all the values

00:14:53,140 --> 00:14:56,980
and scope and it's going to be much

00:14:55,329 --> 00:14:59,230
easier when you think it's actually

00:14:56,980 --> 00:15:01,630
setting an attribute but something's

00:14:59,230 --> 00:15:03,850
going wrong and you're kind of wondering

00:15:01,630 --> 00:15:06,160
what's happening so invest the time if

00:15:03,850 --> 00:15:08,050
you can upfront to get something like

00:15:06,160 --> 00:15:10,779
this going it's going to seem like a

00:15:08,050 --> 00:15:12,520
waste of time and burdensome as you're

00:15:10,779 --> 00:15:15,060
doing it but it's a really good

00:15:12,520 --> 00:15:15,060
investment

00:15:16,160 --> 00:15:21,089
let's take a look at an example black

00:15:18,660 --> 00:15:24,480
and apply what we've been talking about

00:15:21,089 --> 00:15:26,580
with this this would be a destination

00:15:24,480 --> 00:15:30,330
black will have the name of the

00:15:26,580 --> 00:15:32,070
destination and a photo of it you might

00:15:30,330 --> 00:15:33,980
think we could just use existing blacks

00:15:32,070 --> 00:15:37,589
for this but it needs to be wrapped in

00:15:33,980 --> 00:15:40,200
markup so it appears with the same

00:15:37,589 --> 00:15:42,390
styling every time client adds something

00:15:40,200 --> 00:15:50,670
like this it's not possible to simply

00:15:42,390 --> 00:15:53,790
write using existing Black's first we'll

00:15:50,670 --> 00:15:55,770
get a build setup running and luckily

00:15:53,790 --> 00:15:57,690
Gutenberg has a really nice setup that

00:15:55,770 --> 00:15:59,040
you can use with this already and I'd

00:15:57,690 --> 00:16:01,650
recommend using that you could even

00:15:59,040 --> 00:16:04,050
change some of the configurations with

00:16:01,650 --> 00:16:07,920
this you might be familiar with this

00:16:04,050 --> 00:16:11,040
already but JSX will not render in a

00:16:07,920 --> 00:16:16,140
browser by itself so if you take some of

00:16:11,040 --> 00:16:20,160
the examples that we were looking at for

00:16:16,140 --> 00:16:22,440
example this syntax if you copied that

00:16:20,160 --> 00:16:25,200
return statement that would not run in a

00:16:22,440 --> 00:16:28,380
browser it's actually a wrapper for

00:16:25,200 --> 00:16:30,330
functions creating the elements so what

00:16:28,380 --> 00:16:32,910
we need to do is have some way to build

00:16:30,330 --> 00:16:35,339
that WordPress like I mentioned has a

00:16:32,910 --> 00:16:37,500
really good setup for that and recommend

00:16:35,339 --> 00:16:39,540
using that at the bottom is a link to

00:16:37,500 --> 00:16:41,820
pull request that I created of course

00:16:39,540 --> 00:16:44,040
there are other resources than just that

00:16:41,820 --> 00:16:45,690
but that's an example of a very basic

00:16:44,040 --> 00:16:47,310
thing you can just take a look at the

00:16:45,690 --> 00:16:50,940
diff and you could apply that to your

00:16:47,310 --> 00:16:53,910
own plugin and it has a few links there

00:16:50,940 --> 00:16:55,950
to the documentation but that'll get you

00:16:53,910 --> 00:16:57,510
up and running and there are also

00:16:55,950 --> 00:16:59,910
several other things you can use from

00:16:57,510 --> 00:17:05,029
that you can use the es lint setting or

00:16:59,910 --> 00:17:05,029
a configuration from that same package

00:17:06,679 --> 00:17:11,819
next we're going to use existing

00:17:09,199 --> 00:17:14,309
components as much as possible just like

00:17:11,819 --> 00:17:16,730
any part of development will try to

00:17:14,309 --> 00:17:19,050
avoid rolling our own whenever possible

00:17:16,730 --> 00:17:20,790
Gutenberg has a lot of great components

00:17:19,050 --> 00:17:23,760
that you can use for this in this case

00:17:20,790 --> 00:17:25,530
we'll use the rich text component but

00:17:23,760 --> 00:17:28,110
you can find them just looking through

00:17:25,530 --> 00:17:28,740
the repo as you very well could be aware

00:17:28,110 --> 00:17:32,100
of

00:17:28,740 --> 00:17:33,960
and Gutenberg / packages / components

00:17:32,100 --> 00:17:35,520
you can look through all of them they're

00:17:33,960 --> 00:17:37,050
a lot of times I'll just look through

00:17:35,520 --> 00:17:39,179
existing black so if I have something

00:17:37,050 --> 00:17:40,920
that I need it's very common that you'll

00:17:39,179 --> 00:17:43,320
see something that already exists in a

00:17:40,920 --> 00:17:44,309
black maybe you need it in your black or

00:17:43,320 --> 00:17:46,380
you need something a little bit

00:17:44,309 --> 00:17:49,200
different but it's pretty rare you have

00:17:46,380 --> 00:17:52,410
to completely write your own component

00:17:49,200 --> 00:17:54,750
in some cases you can take inspiration

00:17:52,410 --> 00:17:58,890
from an existing component for example

00:17:54,750 --> 00:18:01,830
we had to do something using an input

00:17:58,890 --> 00:18:03,960
that searched for users and it didn't

00:18:01,830 --> 00:18:07,620
exactly exist as we needed it in

00:18:03,960 --> 00:18:11,670
Gutenberg but we modified the URL input

00:18:07,620 --> 00:18:13,470
component and essentially fork that but

00:18:11,670 --> 00:18:15,780
changed about half of it of course

00:18:13,470 --> 00:18:17,790
that's an extreme example forking but a

00:18:15,780 --> 00:18:20,040
lot of times it's best to look at the

00:18:17,790 --> 00:18:22,650
existing components you'll at the very

00:18:20,040 --> 00:18:25,320
least usually find inspiration for what

00:18:22,650 --> 00:18:27,720
you need from there and then you can see

00:18:25,320 --> 00:18:30,480
here we have destructuring we'll wrap

00:18:27,720 --> 00:18:34,290
that in the brackets so we'll have the

00:18:30,480 --> 00:18:36,390
rich tax component is coming from WP dot

00:18:34,290 --> 00:18:39,450
black editor you'll see some different

00:18:36,390 --> 00:18:44,130
syntax it's fine to do this like import

00:18:39,450 --> 00:18:47,790
rich texts from at WordPress / black

00:18:44,130 --> 00:18:49,740
editor that works just as well but you

00:18:47,790 --> 00:18:52,260
won't need to add quite as much to a

00:18:49,740 --> 00:18:54,150
package that JSON and you see at the

00:18:52,260 --> 00:18:56,640
bottom just like we talked about with

00:18:54,150 --> 00:18:58,830
destructuring you have that rich text

00:18:56,640 --> 00:19:01,010
constant that just gets assigned from

00:18:58,830 --> 00:19:01,010
that

00:19:03,390 --> 00:19:09,250
the next step is we'll begin the Edit

00:19:06,250 --> 00:19:12,130
function just like we looked at before

00:19:09,250 --> 00:19:14,770
and we'll actually use this as part of

00:19:12,130 --> 00:19:17,770
the function call to register of black

00:19:14,770 --> 00:19:19,330
so I won't go over all of the internals

00:19:17,770 --> 00:19:22,420
of how you're going to register the

00:19:19,330 --> 00:19:24,940
black but there's the function you could

00:19:22,420 --> 00:19:28,500
be aware of it register black type which

00:19:24,940 --> 00:19:31,390
will add your black and then one of the

00:19:28,500 --> 00:19:33,610
arguments that you can add to or that

00:19:31,390 --> 00:19:36,580
would be a property that you can add to

00:19:33,610 --> 00:19:38,170
the object is the Edit function so what

00:19:36,580 --> 00:19:40,750
we're going to do is construct that edit

00:19:38,170 --> 00:19:44,110
function and that is what's going to

00:19:40,750 --> 00:19:45,520
appear in the black editor and this is

00:19:44,110 --> 00:19:49,990
pretty similar just like what you saw

00:19:45,520 --> 00:19:52,600
before we'll have as an a parameter to

00:19:49,990 --> 00:19:55,630
that props just like any other component

00:19:52,600 --> 00:19:58,270
and react and from that we can get the

00:19:55,630 --> 00:20:01,090
attributes and the attributes are what

00:19:58,270 --> 00:20:08,010
are stored in the database in the actual

00:20:01,090 --> 00:20:10,510
post we also have attributes with

00:20:08,010 --> 00:20:12,160
properties for example we'll start

00:20:10,510 --> 00:20:15,400
properties for this we talked about we

00:20:12,160 --> 00:20:19,270
need the destination photo and the name

00:20:15,400 --> 00:20:22,600
so we'll store those in source for that

00:20:19,270 --> 00:20:24,280
photo and for the destination name you

00:20:22,600 --> 00:20:25,930
can see it's sort of double

00:20:24,280 --> 00:20:29,230
destructuring there we're first getting

00:20:25,930 --> 00:20:30,970
attributes and then separating that out

00:20:29,230 --> 00:20:33,280
there's a shorthand for that that you

00:20:30,970 --> 00:20:37,180
can use also but that'll do the trick

00:20:33,280 --> 00:20:38,740
for this example you also see that edit

00:20:37,180 --> 00:20:43,690
is capitalized here which is the

00:20:38,740 --> 00:20:46,540
convention for all these next we'll

00:20:43,690 --> 00:20:49,030
return the JSX from edit just like we

00:20:46,540 --> 00:20:50,920
looked at before this is the important

00:20:49,030 --> 00:20:53,740
part we're going to return that rich

00:20:50,920 --> 00:20:57,130
text component of course there's more

00:20:53,740 --> 00:20:59,170
work to do at the bottom but you'll see

00:20:57,130 --> 00:21:01,960
that handler just like we looked at

00:20:59,170 --> 00:21:04,750
before on change it's a pretty common

00:21:01,960 --> 00:21:06,220
convention when we have properties to

00:21:04,750 --> 00:21:08,350
have them camelcase

00:21:06,220 --> 00:21:10,240
like we looked at instead of seeing

00:21:08,350 --> 00:21:13,120
class you'll typically see class name

00:21:10,240 --> 00:21:15,580
instead of seeing clique or something

00:21:13,120 --> 00:21:18,010
like that you'll see on click with

00:21:15,580 --> 00:21:21,640
camelcase with the C beam capitalized

00:21:18,010 --> 00:21:24,010
and that's a handler for clicking on

00:21:21,640 --> 00:21:25,750
this in this case and it's a very very

00:21:24,010 --> 00:21:27,490
simplified version of this the real

00:21:25,750 --> 00:21:29,530
version would have more properties of

00:21:27,490 --> 00:21:31,960
course but we'll look at how that works

00:21:29,530 --> 00:21:33,250
so that's going to handle changing an

00:21:31,960 --> 00:21:36,550
attribute we're gonna save something

00:21:33,250 --> 00:21:39,250
here to the database we'll get the new

00:21:36,550 --> 00:21:40,780
value of course as the parameter here

00:21:39,250 --> 00:21:44,230
interest single you don't even have to

00:21:40,780 --> 00:21:47,830
wrap new value in the parentheses but

00:21:44,230 --> 00:21:50,230
it's typical to see that next will

00:21:47,830 --> 00:21:52,780
actually say that in the attributes we

00:21:50,230 --> 00:21:54,670
got the attributes above and then we'll

00:21:52,780 --> 00:21:56,350
just add that there's a new value it's a

00:21:54,670 --> 00:21:58,030
very simplified version you might want

00:21:56,350 --> 00:22:01,600
to do more logic in the real one and

00:21:58,030 --> 00:22:05,650
then we'll finally call set attributes

00:22:01,600 --> 00:22:10,090
and that's the one that saves the value

00:22:05,650 --> 00:22:12,430
to the database and that's another case

00:22:10,090 --> 00:22:13,780
of where having a good debugging setup

00:22:12,430 --> 00:22:15,850
from the beginning is gonna be really

00:22:13,780 --> 00:22:19,300
helpful for example let's say it's not

00:22:15,850 --> 00:22:22,000
saving if you don't have a debugging

00:22:19,300 --> 00:22:23,800
setup in your IDE like vs code or

00:22:22,000 --> 00:22:25,180
whatever you like to use it's gonna be a

00:22:23,800 --> 00:22:28,000
lot harder doing that in the browser

00:22:25,180 --> 00:22:31,570
I've spent way too much time stepping

00:22:28,000 --> 00:22:34,180
through breakpoints in the browser of

00:22:31,570 --> 00:22:40,000
course at the bottom of this we can add

00:22:34,180 --> 00:22:42,610
more components the next up here is

00:22:40,000 --> 00:22:45,250
we're going to move this to a separate

00:22:42,610 --> 00:22:48,100
file this isn't absolutely necessary but

00:22:45,250 --> 00:22:51,040
as your edit component is getting to

00:22:48,100 --> 00:22:53,770
80-100 lines a lot of times it's good to

00:22:51,040 --> 00:22:56,520
sort it out so it's better organized

00:22:53,770 --> 00:23:00,730
it's a little easier to understand and

00:22:56,520 --> 00:23:03,340
it'll use es6 modules here and you'll

00:23:00,730 --> 00:23:05,200
notice at the bottom we have an export

00:23:03,340 --> 00:23:06,970
in the statement typically you'll want

00:23:05,200 --> 00:23:10,360
to use default if you just have one

00:23:06,970 --> 00:23:13,830
thing to export here we're just going to

00:23:10,360 --> 00:23:13,830
export the Edit function

00:23:14,950 --> 00:23:19,149
and then back and that main file where

00:23:17,559 --> 00:23:21,309
we could call something like register

00:23:19,149 --> 00:23:24,549
black type we're actually registering it

00:23:21,309 --> 00:23:26,679
we're going to import that and because

00:23:24,549 --> 00:23:27,879
we use default we can just use a

00:23:26,679 --> 00:23:30,609
different name for it you can name it

00:23:27,879 --> 00:23:31,960
whatever you want here if we didn't use

00:23:30,609 --> 00:23:34,659
default it would have to be the name

00:23:31,960 --> 00:23:37,749
that was exported so import edit from

00:23:34,659 --> 00:23:39,249
edit pretty straightforward and then

00:23:37,749 --> 00:23:41,529
we'll register that and that's the

00:23:39,249 --> 00:23:43,269
syntax these are at typically the same

00:23:41,529 --> 00:23:45,789
level and the directory will have your

00:23:43,269 --> 00:23:47,499
index and your edit and that's the

00:23:45,789 --> 00:23:51,759
syntax to just get it from the same

00:23:47,499 --> 00:23:55,419
level just be dot slash and then edits

00:23:51,759 --> 00:23:57,429
and then that's the syntax to pass that

00:23:55,419 --> 00:23:59,070
to register black type you'll notice

00:23:57,429 --> 00:24:03,639
there that it doesn't even look like

00:23:59,070 --> 00:24:07,049
edit colon edit it actually evaluates it

00:24:03,639 --> 00:24:07,049
that way you don't have to write that

00:24:09,299 --> 00:24:14,019
also there are several things you don't

00:24:12,009 --> 00:24:15,759
need to know to get started it doesn't

00:24:14,019 --> 00:24:18,970
mean you shouldn't eventually learn

00:24:15,759 --> 00:24:21,489
these but don't worry about diving too

00:24:18,970 --> 00:24:24,659
deep into the details of some of these

00:24:21,489 --> 00:24:27,190
especially Redux things like WP data

00:24:24,659 --> 00:24:30,429
select you typically won't need at the

00:24:27,190 --> 00:24:31,989
beginning or dispatch and highroad or

00:24:30,429 --> 00:24:34,539
components usually won't be too

00:24:31,989 --> 00:24:36,820
necessary don't get too into something

00:24:34,539 --> 00:24:39,669
like with selects or compose right away

00:24:36,820 --> 00:24:44,200
unless you find limitation where you'll

00:24:39,669 --> 00:24:46,440
actually need these this will get you

00:24:44,200 --> 00:24:48,580
started with learning what you need in

00:24:46,440 --> 00:24:50,259
JavaScript you'll be writing best

00:24:48,580 --> 00:24:53,259
practice code not just something to get

00:24:50,259 --> 00:24:55,149
it out the door and ship dirty code to a

00:24:53,259 --> 00:24:56,499
client but you'll actually get started

00:24:55,149 --> 00:24:58,989
and you learn most of what you need

00:24:56,499 --> 00:25:00,759
along the way but if you've been

00:24:58,989 --> 00:25:02,980
thinking about extending Gutenberg

00:25:00,759 --> 00:25:05,559
writing your own block there's actually

00:25:02,980 --> 00:25:07,570
no need to wait to do that if you'd like

00:25:05,559 --> 00:25:09,940
to you don't need to know too much about

00:25:07,570 --> 00:25:11,830
the fundamentals of react or how

00:25:09,940 --> 00:25:14,710
everything works together a lot of the

00:25:11,830 --> 00:25:19,899
times it's better and just more fun to

00:25:14,710 --> 00:25:24,119
get started with it thank you

00:25:19,899 --> 00:25:24,119
and are there any questions about this

00:25:27,630 --> 00:25:31,870
all right so we've got some time for

00:25:30,580 --> 00:25:33,970
questions

00:25:31,870 --> 00:25:36,700
just a reminder if this is your first

00:25:33,970 --> 00:25:37,870
time asking a question that and we do

00:25:36,700 --> 00:25:39,610
ask you to wait until the microphone

00:25:37,870 --> 00:25:40,570
gets to you just so that we can make

00:25:39,610 --> 00:25:42,670
sure that gets picked up on the

00:25:40,570 --> 00:25:48,850
recording so we have anyone who would

00:25:42,670 --> 00:25:58,720
like to start off shy yes of the middle

00:25:48,850 --> 00:25:59,920
I love your bravery sir thanks for your

00:25:58,720 --> 00:26:02,950
talk Ryan that's very helpful

00:25:59,920 --> 00:26:05,020
you mentioned you'd like to waste time

00:26:02,950 --> 00:26:06,880
doing on wild online courses and

00:26:05,020 --> 00:26:10,240
tutorials before you start and obviously

00:26:06,880 --> 00:26:14,070
the join work on es6 what can you

00:26:10,240 --> 00:26:17,110
recommend for jumping into es6 and react

00:26:14,070 --> 00:26:18,250
West bosses are great online course I

00:26:17,110 --> 00:26:21,610
was just watching some more of that

00:26:18,250 --> 00:26:23,830
yesterday es6 for everyone is a great

00:26:21,610 --> 00:26:25,660
one that was really useful

00:26:23,830 --> 00:26:29,800
any of that Gordon's courses are really

00:26:25,660 --> 00:26:31,390
great for this but those are really

00:26:29,800 --> 00:26:33,310
useful and I don't mean to say that you

00:26:31,390 --> 00:26:36,460
shouldn't take these I've gotten a lot

00:26:33,310 --> 00:26:39,400
out of them and it really helps to to

00:26:36,460 --> 00:26:40,870
learn all of this actually some things I

00:26:39,400 --> 00:26:42,820
just couldn't do it all without those

00:26:40,870 --> 00:26:45,100
courses but yeah those are the some of

00:26:42,820 --> 00:26:47,020
the main ones I would start with like

00:26:45,100 --> 00:26:48,880
maybe you've worked on that already yeah

00:26:47,020 --> 00:26:53,950
six for everyone like our friend Mike

00:26:48,880 --> 00:26:55,900
I'm recommended to me and any of his

00:26:53,950 --> 00:26:58,570
that Gordon's courses advanced Gutenberg

00:26:55,900 --> 00:27:02,340
development or yeah any of his on

00:26:58,570 --> 00:27:02,340
Guttenberg Thanks

00:27:03,400 --> 00:27:08,220
do we have any more questions for Ryan

00:27:12,320 --> 00:27:18,620
it's almost lunchtime it is I think

00:27:14,810 --> 00:27:19,850
everyone crashing all right do you have

00:27:18,620 --> 00:27:25,280
anything else that you wanted to share

00:27:19,850 --> 00:27:32,830
today Ryan or no that's it round of

00:27:25,280 --> 00:27:32,830

YouTube URL: https://www.youtube.com/watch?v=aNyknOaWdVI


