Title: Phillip Johnson: WordPress, GatsbyJS and Splendour in the Grass
Publication date: 2019-10-27
Playlist: WordCamp Brisbane 2019
Description: 
	This talk will look at the benefits and challenges of using headless WordPress with ReactJS + GatsbyJS. We will dive into 3 areas of the site development, frontend development, backend development and the end user.
https://2019.brisbane.wordcamp.org/session/wordpress-gatsbyjs-and-splendour-in-the-grass/

WPTV link: https://wordpress.tv/2019/10/22/phillip-johnson-wordpress-gatsbyjs-and-splendour-in-the-grass/
Captions: 
	00:00:00,510 --> 00:00:03,730
[Applause]

00:00:04,370 --> 00:00:08,580
Thanks

00:00:06,180 --> 00:00:11,040
so yeah I'm Philip Johnson I work for

00:00:08,580 --> 00:00:14,519
bolster presented last year we talked

00:00:11,040 --> 00:00:16,680
about the setups that we use for our

00:00:14,519 --> 00:00:19,439
festival sites so bolstered primarily

00:00:16,680 --> 00:00:22,980
does music entertainment festivals tours

00:00:19,439 --> 00:00:25,080
all those sorts of things so this year

00:00:22,980 --> 00:00:29,820
I'm talking about WordPress gasps PJs

00:00:25,080 --> 00:00:32,550
and splendor in the grass now one of the

00:00:29,820 --> 00:00:35,100
conversations last year was from Leon

00:00:32,550 --> 00:00:36,600
Stafford and he presented about static

00:00:35,100 --> 00:00:38,700
websites and we're using WordPress for

00:00:36,600 --> 00:00:40,410
that really interesting discussion at

00:00:38,700 --> 00:00:42,149
the end of my talk someone said hey have

00:00:40,410 --> 00:00:44,760
you ever thought about using a static

00:00:42,149 --> 00:00:46,770
site generator for these these festival

00:00:44,760 --> 00:00:49,559
sites I said no no no it doesn't really

00:00:46,770 --> 00:00:50,789
work with our clientele because they

00:00:49,559 --> 00:00:52,770
like to be able to have updates too

00:00:50,789 --> 00:00:57,690
quickly and it's just it doesn't really

00:00:52,770 --> 00:01:00,899
work since then we've used gas pjs which

00:00:57,690 --> 00:01:02,370
is a static site generator and I'm going

00:01:00,899 --> 00:01:03,049
to tell you all about what we did with

00:01:02,370 --> 00:01:06,360
it

00:01:03,049 --> 00:01:07,830
so back in 2018 towards the end of the

00:01:06,360 --> 00:01:09,750
year secret sounds came to us and said

00:01:07,830 --> 00:01:10,830
hey do you guys want to go through and

00:01:09,750 --> 00:01:14,310
build the new splendour in the grass

00:01:10,830 --> 00:01:15,210
website now my boss came to me and said

00:01:14,310 --> 00:01:17,030
what do you think I'm like yeah I really

00:01:15,210 --> 00:01:21,119
want to do this this is gonna be awesome

00:01:17,030 --> 00:01:22,830
he said have you thought about this so

00:01:21,119 --> 00:01:25,920
yeah you know it will be fine

00:01:22,830 --> 00:01:27,330
it's like you've come to me and said

00:01:25,920 --> 00:01:29,460
that you're looking to move back to

00:01:27,330 --> 00:01:31,380
Brisbane this project will be taking

00:01:29,460 --> 00:01:33,799
place during that time period so you're

00:01:31,380 --> 00:01:37,200
gonna have to move across two states and

00:01:33,799 --> 00:01:41,549
lead this project fortunate my wife was

00:01:37,200 --> 00:01:45,060
a very understanding and after a lot of

00:01:41,549 --> 00:01:47,340
late nights you know we finally got this

00:01:45,060 --> 00:01:48,780
project done so we built sweat in the

00:01:47,340 --> 00:01:51,689
grass

00:01:48,780 --> 00:01:54,899
now it was it was a challenging site to

00:01:51,689 --> 00:01:56,909
build we'd been talking about using

00:01:54,899 --> 00:01:59,040
react with WordPress we've been talking

00:01:56,909 --> 00:02:00,990
about using headless WordPress for some

00:01:59,040 --> 00:02:02,399
time and we were just trying to find the

00:02:00,990 --> 00:02:03,840
right project to use it on and we

00:02:02,399 --> 00:02:06,540
thought this could be a great time to do

00:02:03,840 --> 00:02:08,220
this so I sat down we've got a head of

00:02:06,540 --> 00:02:10,619
product and we just kind of had a

00:02:08,220 --> 00:02:12,569
conversation about what we're use

00:02:10,619 --> 00:02:14,730
and we ended up with with gas PJs

00:02:12,569 --> 00:02:18,540
primarily because of that static site

00:02:14,730 --> 00:02:22,019
generator because when in the grass is

00:02:18,540 --> 00:02:24,450
is quite you know popular don't know if

00:02:22,019 --> 00:02:26,670
everyone knows what it is it's a rather

00:02:24,450 --> 00:02:29,010
large festival that happens in in bar

00:02:26,670 --> 00:02:30,360
and so we were like look let's go

00:02:29,010 --> 00:02:31,650
through here's a static site generator

00:02:30,360 --> 00:02:33,599
because everything will be there

00:02:31,650 --> 00:02:35,580
installed you know in s3 bar codes will

00:02:33,599 --> 00:02:40,340
clarify that we don't need to go through

00:02:35,580 --> 00:02:42,720
and worry about server load so like okay

00:02:40,340 --> 00:02:44,310
there's a lot of unknowns in this this

00:02:42,720 --> 00:02:46,410
is going to be really quite difficult so

00:02:44,310 --> 00:02:49,110
fortunately I was able to steal a couple

00:02:46,410 --> 00:02:50,640
of developers from from his team to help

00:02:49,110 --> 00:02:53,010
me out on the front-end development

00:02:50,640 --> 00:02:54,390
because I don't know much about react I

00:02:53,010 --> 00:02:57,780
certainly didn't know anything about

00:02:54,390 --> 00:02:59,760
Gatsby so I worked on API development

00:02:57,780 --> 00:03:01,769
they worked on the front-end development

00:02:59,760 --> 00:03:03,480
and we've got there in the end

00:03:01,769 --> 00:03:06,660
so this talk I'm going to primarily

00:03:03,480 --> 00:03:09,420
focus on some simplified things that I

00:03:06,660 --> 00:03:11,010
wish we knew when we started so I'll

00:03:09,420 --> 00:03:13,980
cover the API development and how we

00:03:11,010 --> 00:03:15,950
created headless WordPress I'll talk a

00:03:13,980 --> 00:03:18,120
little bit about the gasps PJs setup

00:03:15,950 --> 00:03:19,980
there's very much stuff that I would

00:03:18,120 --> 00:03:23,250
love to discuss but I don't have the

00:03:19,980 --> 00:03:25,440
time and also talk about how how a

00:03:23,250 --> 00:03:27,389
client reacted to it and some of the

00:03:25,440 --> 00:03:28,560
things that they they found it a little

00:03:27,389 --> 00:03:31,530
bit difficult and some of the things

00:03:28,560 --> 00:03:35,459
they really enjoyed with the setup so

00:03:31,530 --> 00:03:38,250
API development so does everyone know

00:03:35,459 --> 00:03:42,120
kind of what headless WordPress is like

00:03:38,250 --> 00:03:43,250
hands up if you don't know cool all

00:03:42,120 --> 00:03:46,880
right

00:03:43,250 --> 00:03:52,109
hands up if you know what Gatsby j/s is

00:03:46,880 --> 00:03:55,560
has anyone used gas be one or two

00:03:52,109 --> 00:03:58,680
cool all right so headless WordPress is

00:03:55,560 --> 00:04:02,190
essentially using WordPress as API only

00:03:58,680 --> 00:04:03,299
so there's no front-end thing it's all

00:04:02,190 --> 00:04:05,340
you're really doing is you've got a

00:04:03,299 --> 00:04:08,280
theme installed and you're pretty much

00:04:05,340 --> 00:04:09,930
just outputting data and that people can

00:04:08,280 --> 00:04:13,310
use so you've got a rest endpoint that

00:04:09,930 --> 00:04:15,959
people can access whatever you want

00:04:13,310 --> 00:04:18,150
we used ACS so Elliott's here

00:04:15,959 --> 00:04:20,959
thanks man it was a really good thing to

00:04:18,150 --> 00:04:22,260
be able to use we had looked at using

00:04:20,959 --> 00:04:24,000
Gutenberg

00:04:22,260 --> 00:04:25,980
now Gutenberg is

00:04:24,000 --> 00:04:27,570
if you've got that front-end theme and

00:04:25,980 --> 00:04:29,880
you're going through and you want to be

00:04:27,570 --> 00:04:31,740
able to see things as they are with

00:04:29,880 --> 00:04:33,420
headless WordPress the idea would be

00:04:31,740 --> 00:04:36,420
more so that you just want to be able to

00:04:33,420 --> 00:04:38,670
get the data the other challenge is like

00:04:36,420 --> 00:04:40,800
Gutenberg is designed so that you've got

00:04:38,670 --> 00:04:43,260
your Styles and also stuff built in with

00:04:40,800 --> 00:04:45,150
within your theme on WordPress but

00:04:43,260 --> 00:04:47,820
because we had a completely separate

00:04:45,150 --> 00:04:49,920
react app there was no styling coming

00:04:47,820 --> 00:04:52,500
through in WordPress so it didn't make

00:04:49,920 --> 00:04:54,390
sense to use Gutenberg so we used ACF

00:04:52,500 --> 00:04:56,430
and primarily the flexible content

00:04:54,390 --> 00:04:58,350
fields now one of the talks yesterday

00:04:56,430 --> 00:05:00,810
from Alex really covered this in a lot

00:04:58,350 --> 00:05:03,210
more detail I recommend going and

00:05:00,810 --> 00:05:04,650
checking some of that stuff out because

00:05:03,210 --> 00:05:07,130
it covers a little bit about why you

00:05:04,650 --> 00:05:09,930
would use flexible content fields for us

00:05:07,130 --> 00:05:12,660
we use them pretty heavily we also

00:05:09,930 --> 00:05:14,250
created global content blocks so you can

00:05:12,660 --> 00:05:15,990
kind of see here that you know we've got

00:05:14,250 --> 00:05:18,840
a list of every single block type that

00:05:15,990 --> 00:05:20,610
we're going to be using you could add it

00:05:18,840 --> 00:05:23,520
to the page you could enter your content

00:05:20,610 --> 00:05:27,030
in and then we had like these global

00:05:23,520 --> 00:05:29,100
content blocks so we used flexible

00:05:27,030 --> 00:05:32,040
content fields along with the clonefeed

00:05:29,100 --> 00:05:34,140
check inside that which meant that we

00:05:32,040 --> 00:05:36,600
could create these page templates which

00:05:34,140 --> 00:05:38,040
adopted the the standard layouts that we

00:05:36,600 --> 00:05:41,790
wanted it was like cool these are all

00:05:38,040 --> 00:05:43,050
the fields you want so we created fields

00:05:41,790 --> 00:05:45,840
specifically for those content blocks

00:05:43,050 --> 00:05:48,419
and then we clone them back into our

00:05:45,840 --> 00:05:51,570
flexible content that were then used

00:05:48,419 --> 00:05:52,979
within pages posts artists whatever it

00:05:51,570 --> 00:05:55,680
is that we wanted we just use the ones

00:05:52,979 --> 00:05:58,800
that we needed so by doing it like this

00:05:55,680 --> 00:06:01,680
we were able to you know give the

00:05:58,800 --> 00:06:03,690
flexibility to our client they could

00:06:01,680 --> 00:06:05,340
insert the data as they needed they

00:06:03,690 --> 00:06:09,600
could just do lots of stuff and still

00:06:05,340 --> 00:06:11,610
have a rest ape end point so that the

00:06:09,600 --> 00:06:13,229
the front-end could pull the data they

00:06:11,610 --> 00:06:15,240
could format it how they needed it

00:06:13,229 --> 00:06:16,860
wasn't tied to the back end so if we

00:06:15,240 --> 00:06:19,560
needed to change the Styles it was all

00:06:16,860 --> 00:06:22,140
done by a different team so that's why

00:06:19,560 --> 00:06:26,700
we used ACF over something like

00:06:22,140 --> 00:06:28,080
Gutenberg the next challenge was the API

00:06:26,700 --> 00:06:30,090
was to be consumed by three different

00:06:28,080 --> 00:06:33,479
areas the front-end obviously was the

00:06:30,090 --> 00:06:34,919
Gatsby j/s and then we were also needed

00:06:33,479 --> 00:06:37,590
to work with the app mobile app

00:06:34,919 --> 00:06:39,840
developers because it was well the class

00:06:37,590 --> 00:06:41,910
in the past had been entering content in

00:06:39,840 --> 00:06:44,700
for the app I'd be entering content in

00:06:41,910 --> 00:06:46,350
for the website and that it's just miss

00:06:44,700 --> 00:06:48,090
handles particularly in the festival

00:06:46,350 --> 00:06:49,500
space where things do change quite

00:06:48,090 --> 00:06:52,080
regularly

00:06:49,500 --> 00:06:53,820
this year chess wrapper pulled out so

00:06:52,080 --> 00:06:55,560
they had to update the content once and

00:06:53,820 --> 00:06:57,660
it updated in the app and it updated on

00:06:55,560 --> 00:07:02,070
our side and they didn't have to do that

00:06:57,660 --> 00:07:05,100
double handling and finally it also was

00:07:02,070 --> 00:07:09,840
consumed by the AR team so they had an

00:07:05,100 --> 00:07:12,060
AR component inside the mobile app which

00:07:09,840 --> 00:07:14,160
then you could use it to look around and

00:07:12,060 --> 00:07:15,480
it told you hey over here at this tent

00:07:14,160 --> 00:07:17,100
this is who's coming up next this is

00:07:15,480 --> 00:07:20,460
who's on now so they were consuming our

00:07:17,100 --> 00:07:23,550
API as well and that presented a couple

00:07:20,460 --> 00:07:27,390
of issues because word presses REST API

00:07:23,550 --> 00:07:28,650
is good if you know WordPress like

00:07:27,390 --> 00:07:31,410
there's a lot of sort of terminology

00:07:28,650 --> 00:07:33,150
it's in there you've got these you know

00:07:31,410 --> 00:07:37,410
cross-reference fields and lots of stuff

00:07:33,150 --> 00:07:39,450
that basically for WordPress so the

00:07:37,410 --> 00:07:41,280
mobile app had their own API at one

00:07:39,450 --> 00:07:42,810
stage and it was like cool this is how

00:07:41,280 --> 00:07:44,460
we set up our field so I had a good

00:07:42,810 --> 00:07:46,890
conversation with them so we decided

00:07:44,460 --> 00:07:50,220
that we would not use the default

00:07:46,890 --> 00:07:54,630
WordPress API and we rolled out our own

00:07:50,220 --> 00:07:56,820
using levels eloquent I don't know if

00:07:54,630 --> 00:07:59,460
anyone's use this but it's actually

00:07:56,820 --> 00:08:03,150
really good for API development it made

00:07:59,460 --> 00:08:04,230
things quite simple and easy and I'm

00:08:03,150 --> 00:08:05,370
gonna breeze through some of this

00:08:04,230 --> 00:08:08,790
because I think more people are gonna

00:08:05,370 --> 00:08:10,980
want to know about Gatsby but this is

00:08:08,790 --> 00:08:12,990
the area that I primarily worked on so

00:08:10,980 --> 00:08:14,960
I'm pretty passionate about it one of

00:08:12,990 --> 00:08:16,980
the things that we did was we registered

00:08:14,960 --> 00:08:19,020
endpoints for every single post type

00:08:16,980 --> 00:08:21,720
that we created so we had a base post

00:08:19,020 --> 00:08:24,780
type that had a register function in it

00:08:21,720 --> 00:08:27,630
so that anytime you registered a new

00:08:24,780 --> 00:08:29,670
post type it just ran through this and

00:08:27,630 --> 00:08:32,220
that callback method was all we really

00:08:29,670 --> 00:08:34,020
needed to do to have everything at that

00:08:32,220 --> 00:08:38,490
end point so I didn't matter whether or

00:08:34,020 --> 00:08:41,610
not it was searching you know array you

00:08:38,490 --> 00:08:43,170
know every single artist it would just

00:08:41,610 --> 00:08:44,430
handle it and I didn't need to change

00:08:43,170 --> 00:08:44,790
that function over and over and over

00:08:44,430 --> 00:08:49,200
again

00:08:44,790 --> 00:08:50,940
and that made things very easy so just

00:08:49,200 --> 00:08:53,940
to quickly touch on how

00:08:50,940 --> 00:08:56,670
two Iranian works inside your model

00:08:53,940 --> 00:08:59,010
you've got a to array function and this

00:08:56,670 --> 00:09:02,640
is all covered in eloquent documentation

00:08:59,010 --> 00:09:05,040
really well documented so I just went

00:09:02,640 --> 00:09:07,710
through and said cool for a standard

00:09:05,040 --> 00:09:09,900
post it's just needs a WordPress ID all

00:09:07,710 --> 00:09:13,350
that kind of information and it would

00:09:09,900 --> 00:09:15,120
just kind of spit it out and then if I

00:09:13,350 --> 00:09:18,750
needed to extend it I would just

00:09:15,120 --> 00:09:21,480
basically run this inside a different

00:09:18,750 --> 00:09:23,130
model and then output it put more

00:09:21,480 --> 00:09:25,440
information and it remove it as needed

00:09:23,130 --> 00:09:28,290
one of the really good things I like

00:09:25,440 --> 00:09:31,460
about Lara's eloquent is the collect

00:09:28,290 --> 00:09:37,530
function if you haven't used collect

00:09:31,460 --> 00:09:40,080
it's awesome it's really great I didn't

00:09:37,530 --> 00:09:41,160
want to be seen it's okay yeah the

00:09:40,080 --> 00:09:43,530
collects function is really good

00:09:41,160 --> 00:09:45,300
basically it takes an array or an object

00:09:43,530 --> 00:09:47,340
it turns into something that can be

00:09:45,300 --> 00:09:48,720
queried collapsed and can convert it to

00:09:47,340 --> 00:09:51,090
an array and you don't really need to do

00:09:48,720 --> 00:09:53,340
much so check it out if you're doing a

00:09:51,090 --> 00:09:55,650
lot of PHP you can install a composer

00:09:53,340 --> 00:09:59,280
package and just use collect by itself

00:09:55,650 --> 00:10:01,770
with any project that you've got just

00:09:59,280 --> 00:10:04,560
touching on the content blocks so all

00:10:01,770 --> 00:10:07,620
the flexible content fields I ran

00:10:04,560 --> 00:10:10,830
through a little function called get

00:10:07,620 --> 00:10:14,220
blocks and this is essentially all it

00:10:10,830 --> 00:10:18,390
was I got all the fields I plucked out

00:10:14,220 --> 00:10:20,370
the name I had a class was typically for

00:10:18,390 --> 00:10:21,900
a CF groups and that handled all that

00:10:20,370 --> 00:10:25,830
you know it was the formatting of the

00:10:21,900 --> 00:10:28,590
data by default if he created a new

00:10:25,830 --> 00:10:30,420
flexible content field that wasn't set

00:10:28,590 --> 00:10:32,250
up it would just give you a raw jump of

00:10:30,420 --> 00:10:34,470
the data or it would give you a

00:10:32,250 --> 00:10:37,160
formatted you know in I simply named

00:10:34,470 --> 00:10:41,339
area if you added that extra class so I

00:10:37,160 --> 00:10:42,450
was pretty happy with that a couple the

00:10:41,339 --> 00:10:46,470
other things that we had to do

00:10:42,450 --> 00:10:48,870
differently were permalinks so once

00:10:46,470 --> 00:10:51,839
again separate headless WordPress

00:10:48,870 --> 00:10:53,880
separate front-end URLs are completely

00:10:51,839 --> 00:10:56,790
different so I had to rework some of

00:10:53,880 --> 00:10:58,830
that sort of stuff so I had to change

00:10:56,790 --> 00:11:01,200
the home URL so it was instead of like

00:10:58,830 --> 00:11:03,280
the API endpoint it was using the

00:11:01,200 --> 00:11:07,190
front-end you are

00:11:03,280 --> 00:11:10,040
other things that for some of these post

00:11:07,190 --> 00:11:12,560
types like for example a fake use the

00:11:10,040 --> 00:11:15,260
URL structure was different so I know

00:11:12,560 --> 00:11:17,480
you can change it in like your permalink

00:11:15,260 --> 00:11:20,660
structure but it's not necessarily

00:11:17,480 --> 00:11:25,250
specific to that post type so I use this

00:11:20,660 --> 00:11:28,370
little filter and I would add that to my

00:11:25,250 --> 00:11:30,680
model for fa Q's I had to do it artists

00:11:28,370 --> 00:11:33,590
because you know artists for have a

00:11:30,680 --> 00:11:36,020
parent of the lineup page and they were

00:11:33,590 --> 00:11:37,850
all on that one area so I did a couple

00:11:36,020 --> 00:11:39,170
little things but permalinks is

00:11:37,850 --> 00:11:41,510
something that you're gonna want to take

00:11:39,170 --> 00:11:43,430
a look at if you're going to use a

00:11:41,510 --> 00:11:46,280
headless WordPress theme you're going to

00:11:43,430 --> 00:11:48,200
want to rethink how you do your slugs

00:11:46,280 --> 00:11:49,520
you know want to rethink how you do your

00:11:48,200 --> 00:11:52,760
permalinks you're gonna want to rethink

00:11:49,520 --> 00:11:54,410
how you show that sort of stuff so by

00:11:52,760 --> 00:11:57,170
using this function it just spat out

00:11:54,410 --> 00:11:59,150
that in the permalink then when it was

00:11:57,170 --> 00:12:01,970
you know we had algol your search on

00:11:59,150 --> 00:12:03,980
there so it pushed to that and then you

00:12:01,970 --> 00:12:06,380
didn't have to try and find a fancy way

00:12:03,980 --> 00:12:08,870
of doing it so those are some of the

00:12:06,380 --> 00:12:13,400
very basic things that that I did in the

00:12:08,870 --> 00:12:17,030
API there's a couple of things over back

00:12:13,400 --> 00:12:19,250
to as I move on just because there's a

00:12:17,030 --> 00:12:22,150
few little gotchas that you don't think

00:12:19,250 --> 00:12:25,310
about until after you start using gatsby

00:12:22,150 --> 00:12:27,020
sorry Gatsby has got this plugin it's

00:12:25,310 --> 00:12:28,940
essentially if you don't know react

00:12:27,020 --> 00:12:32,660
you're gonna have a very hard time with

00:12:28,940 --> 00:12:35,270
Gatsby it is a react based application

00:12:32,660 --> 00:12:36,620
so you need to know that off the top so

00:12:35,270 --> 00:12:41,240
I'm not going to dive into too much of

00:12:36,620 --> 00:12:43,460
that it's also based on graph QL which

00:12:41,240 --> 00:12:46,760
is one of the biggest scotches on this

00:12:43,460 --> 00:12:50,780
with WordPress so if you haven't used

00:12:46,760 --> 00:12:52,610
graph QL it's kind of a different way of

00:12:50,780 --> 00:12:54,650
querying your data so you've got your

00:12:52,610 --> 00:12:57,080
rest endpoints which is like cool I want

00:12:54,650 --> 00:12:59,720
to know this one thing and it returns it

00:12:57,080 --> 00:13:02,360
graph QL goes I want to know all these

00:12:59,720 --> 00:13:05,840
ten things and it just returns it now

00:13:02,360 --> 00:13:08,450
with gatsby source WordPress it converts

00:13:05,840 --> 00:13:11,680
your rest endpoints into that graph QL

00:13:08,450 --> 00:13:14,499
so you don't have to do it now

00:13:11,680 --> 00:13:16,809
at the time we got a lot of these kind

00:13:14,499 --> 00:13:19,930
of responses on the Gaspee documentation

00:13:16,809 --> 00:13:20,379
so we struggled because that's not

00:13:19,930 --> 00:13:22,029
helpful

00:13:20,379 --> 00:13:23,290
and I really like the was this doc

00:13:22,029 --> 00:13:23,619
helpful to you in the bottom right

00:13:23,290 --> 00:13:27,160
corner

00:13:23,619 --> 00:13:28,600
no it wasn't they have updated a lot of

00:13:27,160 --> 00:13:29,829
stuff so there's a few things that I was

00:13:28,600 --> 00:13:32,019
going to talk about but they've updated

00:13:29,829 --> 00:13:33,389
in their documentation now so I'm gonna

00:13:32,019 --> 00:13:37,889
skip over some of it

00:13:33,389 --> 00:13:40,869
so back to back to that graph QL setup

00:13:37,889 --> 00:13:43,029
it uses what they refer to as an

00:13:40,869 --> 00:13:44,709
inferred schema with WordPress so it

00:13:43,029 --> 00:13:47,829
takes everything that's at those rest

00:13:44,709 --> 00:13:49,629
endpoints and it goes cool so I'm

00:13:47,829 --> 00:13:53,439
assuming that this is the type of

00:13:49,629 --> 00:13:57,819
content that you always have so it scans

00:13:53,439 --> 00:14:00,009
through your WP Jason endpoint this easy

00:13:57,819 --> 00:14:01,959
familiar if anyone has looked at that it

00:14:00,009 --> 00:14:05,439
will find every single endpoint that

00:14:01,959 --> 00:14:07,779
you've got and it will go through and

00:14:05,439 --> 00:14:11,259
convert those now it's in your in your

00:14:07,779 --> 00:14:14,350
node setup it does have these included

00:14:11,259 --> 00:14:15,519
and excluded routes I couldn't figure

00:14:14,350 --> 00:14:18,730
out how to get the excluded routes

00:14:15,519 --> 00:14:22,269
working a huge time like spent on it

00:14:18,730 --> 00:14:25,629
couldn't figure it out which is a slight

00:14:22,269 --> 00:14:27,040
problem because if you're querying every

00:14:25,629 --> 00:14:28,839
single endpoint that you've got on a

00:14:27,040 --> 00:14:30,910
website if you've installed plugins like

00:14:28,839 --> 00:14:33,160
for example Yoast or wordfence that will

00:14:30,910 --> 00:14:35,050
got their own REST API you don't want

00:14:33,160 --> 00:14:37,149
that for your front-end but it's going

00:14:35,050 --> 00:14:40,059
to query them anyway and if you're

00:14:37,149 --> 00:14:42,100
building an app on the fly it's pulling

00:14:40,059 --> 00:14:43,540
a lot of data that's not necessary so I

00:14:42,100 --> 00:14:46,569
really want to try and find a better way

00:14:43,540 --> 00:14:49,990
of doing that excluded routes so

00:14:46,569 --> 00:14:51,999
inferred schema really good up until we

00:14:49,990 --> 00:14:56,499
started seeing this era during the build

00:14:51,999 --> 00:14:59,350
process we're like okay what's up with

00:14:56,499 --> 00:15:00,699
that you don't see these things

00:14:59,350 --> 00:15:02,889
necessarily when you're developing out

00:15:00,699 --> 00:15:04,870
because you fill in all your data you

00:15:02,889 --> 00:15:07,420
sit there and you go cool I know I'm

00:15:04,870 --> 00:15:10,059
gonna need a menu structure that's got

00:15:07,420 --> 00:15:11,350
you know a child it's like hey I've got

00:15:10,059 --> 00:15:12,459
a sub menu on the side that's what's in

00:15:11,350 --> 00:15:13,689
the design that's what I'm going to

00:15:12,459 --> 00:15:15,610
develop with that's how we're going to

00:15:13,689 --> 00:15:17,920
do the front-end we kept on seeing this

00:15:15,610 --> 00:15:20,379
with whole bunch of different out pieces

00:15:17,920 --> 00:15:23,439
of our data because we were using this

00:15:20,379 --> 00:15:25,620
inferred schema and this was a problem

00:15:23,439 --> 00:15:29,010
so I jumped into the frag

00:15:25,620 --> 00:15:30,779
so if you once again graph QL react

00:15:29,010 --> 00:15:34,140
you're going to know fragments you're

00:15:30,779 --> 00:15:35,730
gonna have to learn it it'll take some

00:15:34,140 --> 00:15:37,380
time so this is the fragment so a

00:15:35,730 --> 00:15:39,240
fragment was essentially cool we're

00:15:37,380 --> 00:15:40,830
expecting this information to come

00:15:39,240 --> 00:15:43,080
through this is all that we want so we

00:15:40,830 --> 00:15:45,960
just wanted for the menus title in a URL

00:15:43,080 --> 00:15:47,790
that was it and it has wordpress

00:15:45,960 --> 00:15:49,230
children and so cool you'll also have a

00:15:47,790 --> 00:15:51,510
wordpress child which is all you know

00:15:49,230 --> 00:15:54,000
you know your sub menus this is all we

00:15:51,510 --> 00:15:56,040
really want and it was airing out so i

00:15:54,000 --> 00:15:59,100
jumped into the rest endpoint and took a

00:15:56,040 --> 00:16:01,140
look at what was being returned so when

00:15:59,100 --> 00:16:02,339
we put it on to a QA site none of the

00:16:01,140 --> 00:16:06,080
data are being filled in no one had

00:16:02,339 --> 00:16:09,029
actually entered in this child menu item

00:16:06,080 --> 00:16:12,750
so this is kind of what they were

00:16:09,029 --> 00:16:15,210
getting back and this is what we were

00:16:12,750 --> 00:16:16,710
expecting to get back so the main

00:16:15,210 --> 00:16:19,140
difference is that WordPress children

00:16:16,710 --> 00:16:22,290
and this happens over and over and over

00:16:19,140 --> 00:16:25,260
again with with the set up because you

00:16:22,290 --> 00:16:29,520
can't always return everything in every

00:16:25,260 --> 00:16:31,380
possible option this is the biggest

00:16:29,520 --> 00:16:32,760
gotcha that we had this was the most

00:16:31,380 --> 00:16:35,040
painful thing that we went through

00:16:32,760 --> 00:16:38,220
because when we started there was no

00:16:35,040 --> 00:16:41,010
real good option so in the past we had

00:16:38,220 --> 00:16:43,279
solved this problem by creating dummy

00:16:41,010 --> 00:16:46,770
content that we just ignored when when

00:16:43,279 --> 00:16:48,660
building out the site so we would go in

00:16:46,770 --> 00:16:51,060
and fill in every single piece of item

00:16:48,660 --> 00:16:53,760
but I was very worried about giving that

00:16:51,060 --> 00:16:55,800
to a client because if they deleted the

00:16:53,760 --> 00:16:57,990
post that had all of that stuff in there

00:16:55,800 --> 00:16:59,700
then it was gonna throw those errors

00:16:57,990 --> 00:17:02,550
again over and over and over again and

00:16:59,700 --> 00:17:03,870
so I spent some time with the front-end

00:17:02,550 --> 00:17:05,579
developers and they're like look you've

00:17:03,870 --> 00:17:06,720
got to do something on your end to fix

00:17:05,579 --> 00:17:09,390
this I'm like but it's it's really

00:17:06,720 --> 00:17:11,459
complicated like you can't define a

00:17:09,390 --> 00:17:17,699
schema that gets returned like it that's

00:17:11,459 --> 00:17:19,920
not how it works and so yeah it it was

00:17:17,699 --> 00:17:21,809
it was like this honestly like this was

00:17:19,920 --> 00:17:24,050
this is like almost a breaking point for

00:17:21,809 --> 00:17:27,329
some of us fortunately one of the guys

00:17:24,050 --> 00:17:28,860
spent all night like he was contracted

00:17:27,329 --> 00:17:30,179
in like I've worked with him quite a lot

00:17:28,860 --> 00:17:32,940
and he spent all night looking through

00:17:30,179 --> 00:17:34,980
the documentation he was like look I

00:17:32,940 --> 00:17:38,040
found a solution this is almost he was

00:17:34,980 --> 00:17:39,150
responsible and a solution the newest

00:17:38,040 --> 00:17:43,200
version of Gatsby and

00:17:39,150 --> 00:17:44,760
you define your graph QL now this is the

00:17:43,200 --> 00:17:47,820
most important thing if you're going to

00:17:44,760 --> 00:17:51,630
use Gatsby and WordPress define your own

00:17:47,820 --> 00:17:55,740
schemas it will save you so much pain in

00:17:51,630 --> 00:17:58,200
the long run and this you honestly spend

00:17:55,740 --> 00:18:00,630
time and do it it's time-consuming to do

00:17:58,200 --> 00:18:02,700
this sort of stuff but this is how we

00:18:00,630 --> 00:18:04,650
went through and ended up defining it so

00:18:02,700 --> 00:18:08,250
they've got some documentation around

00:18:04,650 --> 00:18:10,410
how to do this now and so this is this

00:18:08,250 --> 00:18:12,660
just goes into your your your gasps we

00:18:10,410 --> 00:18:15,390
know it's set up that's like cool when

00:18:12,660 --> 00:18:18,210
you hit the wordpress api menus menus

00:18:15,390 --> 00:18:19,980
items look at this this is what we

00:18:18,210 --> 00:18:22,830
expect so if it doesn't return that in

00:18:19,980 --> 00:18:24,210
the rest api it's okay because you've

00:18:22,830 --> 00:18:26,100
already said hey we're expecting a

00:18:24,210 --> 00:18:28,410
string we're expecting items to be a

00:18:26,100 --> 00:18:29,970
menu item and this is what menu items

00:18:28,410 --> 00:18:31,710
look like and that's where we put

00:18:29,970 --> 00:18:34,170
WordPress children as soon as we put

00:18:31,710 --> 00:18:35,850
that in there everything was great it

00:18:34,170 --> 00:18:40,950
was solved we had no more issues with

00:18:35,850 --> 00:18:43,410
that obviously this was just for menu

00:18:40,950 --> 00:18:45,450
items you also then need to go to do it

00:18:43,410 --> 00:18:48,930
with every single post type you've got

00:18:45,450 --> 00:18:50,970
every single type of content block all

00:18:48,930 --> 00:18:55,740
those sorts of things so this is a quick

00:18:50,970 --> 00:18:58,230
example of how we handle paid is really

00:18:55,740 --> 00:19:00,480
cool feature that I found after we

00:18:58,230 --> 00:19:02,940
finished up with Splenda was this

00:19:00,480 --> 00:19:06,330
featured post at the bottom now what

00:19:02,940 --> 00:19:08,600
that is is the you take a look at

00:19:06,330 --> 00:19:10,860
content blocks above it and you see

00:19:08,600 --> 00:19:13,860
basically that's saying this is an array

00:19:10,860 --> 00:19:18,740
of this type being returned now

00:19:13,860 --> 00:19:21,450
underneath it is this is an array of IDs

00:19:18,740 --> 00:19:24,000
which should be linked back to your

00:19:21,450 --> 00:19:26,990
posts endpoint and this saves a whole

00:19:24,000 --> 00:19:29,340
lot of problems that you'll run into

00:19:26,990 --> 00:19:32,160
there's a gotcha in this as well because

00:19:29,340 --> 00:19:34,980
it also creates some problems but by

00:19:32,160 --> 00:19:37,410
doing this you could go through and have

00:19:34,980 --> 00:19:41,220
featured posts or artists return an

00:19:37,410 --> 00:19:43,740
array of IDs and then Gatsby and graph

00:19:41,220 --> 00:19:45,300
QL will just go cool let's look up that

00:19:43,740 --> 00:19:49,230
other endpoint match it by the WordPress

00:19:45,300 --> 00:19:50,910
ID which is defined at the top and it

00:19:49,230 --> 00:19:52,590
just goes cool let's link that in so in

00:19:50,910 --> 00:19:54,809
your fragment you can just reference

00:19:52,590 --> 00:19:58,020
how you would an artist or a featured

00:19:54,809 --> 00:20:01,740
post and it's done so this was super

00:19:58,020 --> 00:20:08,210
helpful it also makes you your headless

00:20:01,740 --> 00:20:08,210
API much faster to query really good

00:20:08,720 --> 00:20:14,580
next challenge we had a hybrid app so

00:20:13,110 --> 00:20:19,380
everything gets compiled down to static

00:20:14,580 --> 00:20:21,570
sites and then we had this option to be

00:20:19,380 --> 00:20:23,760
able to sign up to my splendor and that

00:20:21,570 --> 00:20:25,230
was just essentially at this stage all

00:20:23,760 --> 00:20:27,390
it is is that you can go on favorite

00:20:25,230 --> 00:20:29,850
artists and it'll go through on your

00:20:27,390 --> 00:20:31,559
your timetable page and give you hey

00:20:29,850 --> 00:20:32,730
this is when they're playing this is

00:20:31,559 --> 00:20:34,260
your timetable this is what you should

00:20:32,730 --> 00:20:37,440
go and check out these are all your

00:20:34,260 --> 00:20:40,830
clashes so when you're doing a static

00:20:37,440 --> 00:20:43,169
app you don't have the ability just to

00:20:40,830 --> 00:20:46,260
get dynamic data you can't find out what

00:20:43,169 --> 00:20:48,779
it use is doing gatsby has got a really

00:20:46,260 --> 00:20:52,350
good setup for for client pages and

00:20:48,779 --> 00:20:54,929
that's kind of designed for you log in

00:20:52,350 --> 00:20:57,510
and then these are protected pages which

00:20:54,929 --> 00:21:02,159
is good but it's not necessarily what we

00:20:57,510 --> 00:21:04,260
needed and I was like hey why don't just

00:21:02,159 --> 00:21:06,390
when we have that component on the page

00:21:04,260 --> 00:21:08,340
we just run a request to the database

00:21:06,390 --> 00:21:12,539
like you know hit the endpoint so that's

00:21:08,340 --> 00:21:15,570
what we did so we used Axios nice simple

00:21:12,539 --> 00:21:16,740
you know ajax lobby that just hits an

00:21:15,570 --> 00:21:19,440
endpoint returns it

00:21:16,740 --> 00:21:22,080
so we basically use that and that solved

00:21:19,440 --> 00:21:26,520
that problem really nice sort of simple

00:21:22,080 --> 00:21:28,409
solution we had a login service so when

00:21:26,520 --> 00:21:31,049
you logged in with Facebook or Instagram

00:21:28,409 --> 00:21:33,899
we had it hit that API it gives your

00:21:31,049 --> 00:21:37,230
token back and then you post it back to

00:21:33,899 --> 00:21:39,750
your login service on WordPress and then

00:21:37,230 --> 00:21:41,850
we got a JWT token back and then any

00:21:39,750 --> 00:21:44,700
other quest we've made to to WordPress

00:21:41,850 --> 00:21:46,740
because we were using WordPress users it

00:21:44,700 --> 00:21:48,539
just returns you know the favorite

00:21:46,740 --> 00:21:50,669
artists that you've got and then when

00:21:48,539 --> 00:21:51,840
you favorite an artist does it all over

00:21:50,669 --> 00:21:53,880
again just cool very cool

00:21:51,840 --> 00:21:56,460
got the JWT token we stood that in

00:21:53,880 --> 00:21:58,440
session which is back yeah let's hire it

00:21:56,460 --> 00:22:02,940
out that's that was just a nice little

00:21:58,440 --> 00:22:06,220
thing cool this is this is another

00:22:02,940 --> 00:22:08,289
problem this is not Gatsby this is react

00:22:06,220 --> 00:22:09,760
so if you're doing a lot of client work

00:22:08,289 --> 00:22:11,950
you might have clients that want to put

00:22:09,760 --> 00:22:15,100
ads on their website or they might want

00:22:11,950 --> 00:22:16,570
to put Google Foreman beds or one of our

00:22:15,100 --> 00:22:17,950
clients is like hey we've partnered up

00:22:16,570 --> 00:22:19,929
with booking.com they've got a little

00:22:17,950 --> 00:22:22,450
booking widget can you just drop this

00:22:19,929 --> 00:22:27,460
onto the site typically with WordPress

00:22:22,450 --> 00:22:28,840
piece of cake with react no not at all

00:22:27,460 --> 00:22:31,500
so I didn't I didn't put that thing I've

00:22:28,840 --> 00:22:33,700
got that later yeah it just doesn't work

00:22:31,500 --> 00:22:35,500
there's lots of little gotchas you've

00:22:33,700 --> 00:22:38,679
got in that there's no real good

00:22:35,500 --> 00:22:40,019
solution I'd recommend just looking up

00:22:38,679 --> 00:22:43,899
figuring it out

00:22:40,019 --> 00:22:45,850
so load testing biggest benefit of

00:22:43,899 --> 00:22:50,049
something like cats PJs is that it

00:22:45,850 --> 00:22:54,179
handles load well now this was our basic

00:22:50,049 --> 00:22:56,769
infrastructure we had everything

00:22:54,179 --> 00:22:58,029
WordPress application side was in that

00:22:56,769 --> 00:22:59,230
blue box

00:22:58,029 --> 00:23:02,350
we had deployments running through

00:22:59,230 --> 00:23:04,240
circle CI it uploads everything to an s3

00:23:02,350 --> 00:23:06,730
bucket and we had third font over the

00:23:04,240 --> 00:23:09,399
top so our load testing fleet would just

00:23:06,730 --> 00:23:12,580
hit you know the conference so I was

00:23:09,399 --> 00:23:15,039
reasonably okay with it obviously our

00:23:12,580 --> 00:23:17,919
boss not quite as familiar with how the

00:23:15,039 --> 00:23:21,190
stuff works was very worried so we had

00:23:17,919 --> 00:23:24,519
our DevOps go I had planned cool let's

00:23:21,190 --> 00:23:29,320
run lambda artillery and just test it

00:23:24,519 --> 00:23:31,149
had 9 million Landers when you're when

00:23:29,320 --> 00:23:35,679
you're typing in 9 million it's

00:23:31,149 --> 00:23:37,809
sometimes easy to add an extra zero so

00:23:35,679 --> 00:23:40,000
he fortunately he noticed halfway

00:23:37,809 --> 00:23:45,600
through but it's about half way so we

00:23:40,000 --> 00:23:49,000
went through and ran 90 million requests

00:23:45,600 --> 00:23:52,029
zero failures as they no problems

00:23:49,000 --> 00:23:53,980
whatsoever not an issue so on launch day

00:23:52,029 --> 00:23:56,440
I wasn't actually looking at how it uses

00:23:53,980 --> 00:23:59,590
we had on the site I was doing other

00:23:56,440 --> 00:24:01,659
stuff so client side they were really

00:23:59,590 --> 00:24:03,789
thrilled that you know we had set this

00:24:01,659 --> 00:24:06,639
out one for them they were obviously

00:24:03,789 --> 00:24:09,220
concerned about hackers sweating their

00:24:06,639 --> 00:24:12,100
ass obviously very popular people do try

00:24:09,220 --> 00:24:15,129
and get the line up so we had we had the

00:24:12,100 --> 00:24:16,480
API server all protected it also meant

00:24:15,129 --> 00:24:18,970
that our front-end because it was static

00:24:16,480 --> 00:24:19,210
there's nothing to hack you can't hack

00:24:18,970 --> 00:24:20,620
it

00:24:19,210 --> 00:24:22,179
that excite there's nothing that you can

00:24:20,620 --> 00:24:23,950
get out of it so we were fairly

00:24:22,179 --> 00:24:25,929
confident so that was one of the huge

00:24:23,950 --> 00:24:28,330
benefits that we had on that the server

00:24:25,929 --> 00:24:32,320
load is obviously a good thing as well

00:24:28,330 --> 00:24:34,779
one of the gotchas preview so going back

00:24:32,320 --> 00:24:36,669
to when I was talking about the the way

00:24:34,779 --> 00:24:40,149
that you could return artists and

00:24:36,669 --> 00:24:43,059
featured posts in an array originally we

00:24:40,149 --> 00:24:45,250
were just returning an extract of those

00:24:43,059 --> 00:24:50,740
posts so it just had like you know title

00:24:45,250 --> 00:24:52,210
image excerpt and a link which meant

00:24:50,740 --> 00:24:53,830
that when we hit the preview pages we

00:24:52,210 --> 00:24:57,370
created these previews pages once again

00:24:53,830 --> 00:24:59,049
with Axios hits an endpoint it returns

00:24:57,370 --> 00:25:03,250
all the data you need just for that one

00:24:59,049 --> 00:25:09,190
post previous worked well switched it to

00:25:03,250 --> 00:25:13,179
over to use the those array of IDs no

00:25:09,190 --> 00:25:16,330
you can't do that because those IDs are

00:25:13,179 --> 00:25:18,309
being referenced through graph QL those

00:25:16,330 --> 00:25:20,710
being matched up through graph QL so

00:25:18,309 --> 00:25:23,529
when you're using that it doesn't have

00:25:20,710 --> 00:25:27,070
anything to match it with so rests and

00:25:23,529 --> 00:25:28,440
graph QL don't play nicely together you

00:25:27,070 --> 00:25:30,700
can't do those conferences

00:25:28,440 --> 00:25:34,029
cross-references the only way we would

00:25:30,700 --> 00:25:38,169
be able to get around that would be to

00:25:34,029 --> 00:25:41,380
then say these are all the IDS run post

00:25:38,169 --> 00:25:43,840
requests to the REST API to get that

00:25:41,380 --> 00:25:46,000
data back fill it in see if there's any

00:25:43,840 --> 00:25:48,580
other it just keep on going it's it's it

00:25:46,000 --> 00:25:50,770
wasn't good so it doesn't work that's at

00:25:48,580 --> 00:25:52,059
this stage I really wish we had gone

00:25:50,770 --> 00:25:56,440
down the route of using something like

00:25:52,059 --> 00:25:59,230
WP graph QL because then it would have a

00:25:56,440 --> 00:26:00,850
graph QL on the server it would then

00:25:59,230 --> 00:26:02,559
mean you can instead of using axials we

00:26:00,850 --> 00:26:05,289
would use something like Apollo to query

00:26:02,559 --> 00:26:08,649
that graph QL database or the graph QL

00:26:05,289 --> 00:26:10,720
endpoints and what you would see on that

00:26:08,649 --> 00:26:14,799
API would be the same way that you would

00:26:10,720 --> 00:26:16,390
handle your graph QL in Gatsby we had

00:26:14,799 --> 00:26:18,370
talked about doing this at the beginning

00:26:16,390 --> 00:26:19,840
but I was already worried about the

00:26:18,370 --> 00:26:21,850
level of unknowns that we had and we

00:26:19,840 --> 00:26:25,720
built this stuff in about a three month

00:26:21,850 --> 00:26:27,039
period from from design API develop we'd

00:26:25,720 --> 00:26:30,279
never done something like this and we

00:26:27,039 --> 00:26:31,660
did in three months and I moved in the

00:26:30,279 --> 00:26:35,420
middle

00:26:31,660 --> 00:26:37,930
don't recommend it the next thing that

00:26:35,420 --> 00:26:40,340
they they struggled with was the deploy

00:26:37,930 --> 00:26:42,470
so deploy we had a nice little button

00:26:40,340 --> 00:26:44,510
that you said deploy hits a circle CI

00:26:42,470 --> 00:26:48,230
and it goes through and runs that build

00:26:44,510 --> 00:26:50,360
scripts now the reason why I said last

00:26:48,230 --> 00:26:52,700
year that we don't do static websites is

00:26:50,360 --> 00:26:55,640
because clients like to be able to have

00:26:52,700 --> 00:26:59,330
a quick update the deploy time for this

00:26:55,640 --> 00:27:01,880
purely because of the way that you have

00:26:59,330 --> 00:27:06,560
to convert the rest endpoints to graph

00:27:01,880 --> 00:27:08,600
QL takes over 10 minutes now that's

00:27:06,560 --> 00:27:13,040
that's incredibly stressful for a client

00:27:08,600 --> 00:27:15,050
when they need an update chance the

00:27:13,040 --> 00:27:17,300
rapper they didn't go through and and

00:27:15,050 --> 00:27:20,420
have some socials for him and he was not

00:27:17,300 --> 00:27:22,700
really happy about that or they were

00:27:20,420 --> 00:27:24,380
like oh we've got now an approved image

00:27:22,700 --> 00:27:26,480
for this artist because that stuff comes

00:27:24,380 --> 00:27:27,980
through the night before the day of and

00:27:26,480 --> 00:27:29,810
so they're constantly doing updates and

00:27:27,980 --> 00:27:33,710
they click deploy they have to wait 10

00:27:29,810 --> 00:27:35,420
minutes so that was the biggest downside

00:27:33,710 --> 00:27:37,130
for them as well so they couldn't

00:27:35,420 --> 00:27:39,740
preview the data if you were trying to

00:27:37,130 --> 00:27:41,450
build it it would then take 10-15

00:27:39,740 --> 00:27:42,800
minutes so those are the kind of two

00:27:41,450 --> 00:27:44,780
downsides that we're still trying to

00:27:42,800 --> 00:27:46,520
find a way around and I think a lot of

00:27:44,780 --> 00:27:51,620
that would come if we converted from

00:27:46,520 --> 00:27:53,300
REST API to using graph QL so those are

00:27:51,620 --> 00:27:55,370
the most of the little gotchas there's a

00:27:53,300 --> 00:27:59,120
lot of other stuff that I would want to

00:27:55,370 --> 00:28:00,830
flag but there's no time and the

00:27:59,120 --> 00:28:04,310
documentation is much better now so you

00:28:00,830 --> 00:28:07,280
can jump in and and and go back and and

00:28:04,310 --> 00:28:09,620
you know find all those little issues we

00:28:07,280 --> 00:28:13,310
had problems with images oh quick one

00:28:09,620 --> 00:28:16,550
static site when they get built with

00:28:13,310 --> 00:28:18,290
react you don't have a window so if

00:28:16,550 --> 00:28:19,910
you're using window you'll want to get

00:28:18,290 --> 00:28:22,490
the size of the window if you put that

00:28:19,910 --> 00:28:23,810
in your application the build will fail

00:28:22,490 --> 00:28:27,380
because it doesn't know what window is

00:28:23,810 --> 00:28:28,790
because there is no browser handy little

00:28:27,380 --> 00:28:31,100
tip make sure that when you're building

00:28:28,790 --> 00:28:32,990
it because also when you use local

00:28:31,100 --> 00:28:34,580
environment you're probably not building

00:28:32,990 --> 00:28:36,550
it you're actually just running it in

00:28:34,580 --> 00:28:39,770
the browser so you actually run a

00:28:36,550 --> 00:28:42,500
localhost and it just browsing yeah

00:28:39,770 --> 00:28:44,090
so what are we land take your time

00:28:42,500 --> 00:28:46,179
building this stuff in three months is

00:28:44,090 --> 00:28:49,220
intense

00:28:46,179 --> 00:28:51,350
plant it out think about how your

00:28:49,220 --> 00:28:55,549
clients going to use it this stuff is is

00:28:51,350 --> 00:28:57,020
really good for simple sites if you're

00:28:55,549 --> 00:28:59,900
gonna do something complex it's going to

00:28:57,020 --> 00:29:01,610
take longer to build define its game up

00:28:59,900 --> 00:29:03,350
honestly it doesn't matter what you do

00:29:01,610 --> 00:29:04,700
is define a schema make sure that you've

00:29:03,350 --> 00:29:06,049
got that in because that's going to save

00:29:04,700 --> 00:29:09,140
you headaches it's going to save you

00:29:06,049 --> 00:29:11,750
build times and so they expect a ssin of

00:29:09,140 --> 00:29:15,140
the client and say hey look these are

00:29:11,750 --> 00:29:16,640
the benefits these are the cons to have

00:29:15,140 --> 00:29:18,260
a conversation with them and find out if

00:29:16,640 --> 00:29:20,480
that's the solution to them for us

00:29:18,260 --> 00:29:22,870
because we had that ability of zero

00:29:20,480 --> 00:29:24,950
chance of it crashing we had that

00:29:22,870 --> 00:29:26,450
security element to it so we didn't have

00:29:24,950 --> 00:29:28,850
to worry about people hacking into the

00:29:26,450 --> 00:29:31,100
site because we had our servers

00:29:28,850 --> 00:29:33,710
protected we could you know IP lock it

00:29:31,100 --> 00:29:35,360
down we do any of this stuff but you

00:29:33,710 --> 00:29:37,340
guys had a expectation it's gonna take

00:29:35,360 --> 00:29:39,260
10 minutes or if you know you've got a

00:29:37,340 --> 00:29:41,270
small site it could take five minutes to

00:29:39,260 --> 00:29:42,559
update content if that's important to

00:29:41,270 --> 00:29:45,470
them then you might need to find another

00:29:42,559 --> 00:29:48,880
solution so there's a lot of the the

00:29:45,470 --> 00:29:51,860
learnings that we took away from this

00:29:48,880 --> 00:29:54,080
yeah look any questions I'm happy to try

00:29:51,860 --> 00:29:56,620
and answer them as I said I didn't work

00:29:54,080 --> 00:29:59,990
too much on the front end I did recently

00:29:56,620 --> 00:30:01,520
deploy this site using full falls and I

00:29:59,990 --> 00:30:02,929
had a lot more experience on the front

00:30:01,520 --> 00:30:08,169
end I learnt all these little coaches

00:30:02,929 --> 00:30:08,169
and it yeah hit me up with any questions

00:30:10,810 --> 00:30:14,500
[Applause]

00:30:12,060 --> 00:30:16,049
[Music]

00:30:14,500 --> 00:30:25,389
[Applause]

00:30:16,049 --> 00:30:28,450
yeah got one here chick one too so you

00:30:25,389 --> 00:30:30,580
said the favorite artists and then like

00:30:28,450 --> 00:30:34,059
getting the favorite artists back was an

00:30:30,580 --> 00:30:36,789
API call to WordPress so I'm quite

00:30:34,059 --> 00:30:37,960
curious about how that scaled and how

00:30:36,789 --> 00:30:40,029
you handle that because that sounds like

00:30:37,960 --> 00:30:42,429
it could have been quite intense in the

00:30:40,029 --> 00:30:44,320
lead up yeah look to be honest because

00:30:42,429 --> 00:30:45,970
we didn't roll that feature out until

00:30:44,320 --> 00:30:48,159
later and it was kind of more of a soft

00:30:45,970 --> 00:30:51,669
launch because we hadn't done it we

00:30:48,159 --> 00:30:53,379
weren't too worried so like we didn't

00:30:51,669 --> 00:30:54,820
get a huge number of signups because the

00:30:53,379 --> 00:30:59,019
way that we kind of just wanted to test

00:30:54,820 --> 00:31:01,450
the waters with this we would go through

00:30:59,019 --> 00:31:03,789
an end put wordpress on a load balancer

00:31:01,450 --> 00:31:04,869
with a and that and that would solve

00:31:03,789 --> 00:31:06,669
that problem because it wouldn't matter

00:31:04,869 --> 00:31:08,649
then and you to auto scale it so if we

00:31:06,669 --> 00:31:10,989
started getting a lot of those requests

00:31:08,649 --> 00:31:13,029
hits the load balancer you've got an RDS

00:31:10,989 --> 00:31:14,889
instance like yeah so that's how we

00:31:13,029 --> 00:31:18,489
would handle that and and and handle

00:31:14,889 --> 00:31:20,919
that at scale so I mean this

00:31:18,489 --> 00:31:23,409
my only concern was if they would hear

00:31:20,919 --> 00:31:24,850
it while that build was happening that

00:31:23,409 --> 00:31:27,460
would be where I'd be most concerned

00:31:24,850 --> 00:31:29,200
because that that is gonna be using but

00:31:27,460 --> 00:31:33,179
once again put it behind a load balance

00:31:29,200 --> 00:31:33,179
and you'll be fine cool thanks

00:31:36,250 --> 00:31:42,539
I'm getting my exercise now run Ricki

00:31:39,730 --> 00:31:46,059
run g'day my name's Pat thanks for that

00:31:42,539 --> 00:31:54,070
question is ballpark figure for building

00:31:46,059 --> 00:31:57,340
a site like this ballpark look I mean we

00:31:54,070 --> 00:31:59,230
did it at a loss like because because we

00:31:57,340 --> 00:32:01,450
did plan on reusing a lot of this sort

00:31:59,230 --> 00:32:03,190
of stuff so we built it with the

00:32:01,450 --> 00:32:07,240
intention that we would work further on

00:32:03,190 --> 00:32:08,679
it honestly it comes down to to the

00:32:07,240 --> 00:32:11,919
skill set there's a lot of learning

00:32:08,679 --> 00:32:13,690
involved there's a lot of stuff so to be

00:32:11,919 --> 00:32:16,809
honest I wouldn't consider doing this

00:32:13,690 --> 00:32:20,380
unless you've got a react team people

00:32:16,809 --> 00:32:22,570
that understand WordPress API and and a

00:32:20,380 --> 00:32:24,940
lot of time so it depends on what your

00:32:22,570 --> 00:32:27,669
charge but to be honest I wouldn't want

00:32:24,940 --> 00:32:32,650
to quote this app starting from scratch

00:32:27,669 --> 00:32:34,780
again at less than about 100k yeah it's

00:32:32,650 --> 00:32:36,309
expensive it is time-consuming but you

00:32:34,780 --> 00:32:38,080
do get a lot of good benefits out of it

00:32:36,309 --> 00:32:41,080
and once you've got through that

00:32:38,080 --> 00:32:42,700
learning process then it does make it

00:32:41,080 --> 00:32:44,470
quicker like for example we we spent

00:32:42,700 --> 00:32:47,919
three months building this site and we

00:32:44,470 --> 00:32:49,630
spent a lot of sleepless nights when it

00:32:47,919 --> 00:32:52,630
came time for me to do it again on falls

00:32:49,630 --> 00:32:55,330
we did it in in less than a month we

00:32:52,630 --> 00:32:58,330
even skin the front end of it in in you

00:32:55,330 --> 00:33:04,380
know two weeks so like you've made it

00:32:58,330 --> 00:33:08,080
much faster so then did you start with

00:33:04,380 --> 00:33:12,220
wire framing then how high-rez designs

00:33:08,080 --> 00:33:14,650
before you build or yeah so I mean

00:33:12,220 --> 00:33:16,299
fortunately because we do a lot of this

00:33:14,650 --> 00:33:18,000
sort of festival sites I already knew

00:33:16,299 --> 00:33:20,260
what type of content we were expecting

00:33:18,000 --> 00:33:21,940
so the designers were going off and

00:33:20,260 --> 00:33:24,159
doing wireframes what I was able to

00:33:21,940 --> 00:33:25,840
start work on the API because I knew hey

00:33:24,159 --> 00:33:27,730
this is the sort of content we're

00:33:25,840 --> 00:33:29,289
expecting and we had a lot of

00:33:27,730 --> 00:33:33,010
conversation so while they were still

00:33:29,289 --> 00:33:35,140
doing designs and and wire framing and

00:33:33,010 --> 00:33:37,120
and and the style application I could

00:33:35,140 --> 00:33:38,470
get started on the API and while I was

00:33:37,120 --> 00:33:41,710
starting on the API I could then also

00:33:38,470 --> 00:33:43,270
get our front-end team to start thinking

00:33:41,710 --> 00:33:46,630
about how they would set it up as well

00:33:43,270 --> 00:33:50,020
so we had we had three teams working in

00:33:46,630 --> 00:33:51,970
tandem there's a few little challenge

00:33:50,020 --> 00:33:54,130
example the front-end developers ended

00:33:51,970 --> 00:33:56,530
up using something like storybook to to

00:33:54,130 --> 00:33:58,330
build out the components which if you're

00:33:56,530 --> 00:34:00,160
going to use Gatsby definitely go down

00:33:58,330 --> 00:34:01,810
the route of storybook because you can

00:34:00,160 --> 00:34:04,360
just build out those components see them

00:34:01,810 --> 00:34:06,190
and then once your API is ready start

00:34:04,360 --> 00:34:09,220
bidding in the the stuff the other thing

00:34:06,190 --> 00:34:11,890
is when you're doing it locally build

00:34:09,220 --> 00:34:14,200
time also is about 10 minutes so when

00:34:11,890 --> 00:34:15,850
you go yarn start you're going to sit

00:34:14,200 --> 00:34:19,330
there and wait for it to pull the data

00:34:15,850 --> 00:34:23,020
and then you can start working on it and

00:34:19,330 --> 00:34:24,370
if you get that schema wrong you're

00:34:23,020 --> 00:34:25,870
going to be doing that every single time

00:34:24,370 --> 00:34:27,490
you get errors because you cannot start

00:34:25,870 --> 00:34:29,370
working on the data until after it's

00:34:27,490 --> 00:34:32,800
being built and if you change the data

00:34:29,370 --> 00:34:34,419
you have to rebuild so that's that's

00:34:32,800 --> 00:34:37,270
some of the other big gotchas that we

00:34:34,419 --> 00:34:40,240
had and it's like cool plan it get it

00:34:37,270 --> 00:34:45,690
down first and then and then yeah you'll

00:34:40,240 --> 00:34:45,690
be able go no problems anything else

00:34:49,080 --> 00:34:54,360
that looks like it then cool big round

00:34:51,929 --> 00:34:56,159
of applause for Phillip Phillips gonna

00:34:54,360 --> 00:34:59,510
be here with us so if you have questions

00:34:56,159 --> 00:34:59,510

YouTube URL: https://www.youtube.com/watch?v=iuMeX0uEa-Q


