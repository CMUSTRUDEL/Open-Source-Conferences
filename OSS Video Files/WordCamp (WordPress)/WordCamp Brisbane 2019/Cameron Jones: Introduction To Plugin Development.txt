Title: Cameron Jones: Introduction To Plugin Development
Publication date: 2019-10-27
Playlist: WordCamp Brisbane 2019
Description: 
	Have you ever wanted to build your own plugin? Or maybe youâ€™re just curious as to how plugins work? Weâ€™ll take a look at some popular plugins, learn the WordPress hook system, then walk through building your first custom WordPress plugin from scratch. 
https://2019.brisbane.wordcamp.org/session/introduction-to-plugin-development/

WPTV link: https://wordpress.tv/2019/10/22/cameron-jones-introduction-to-plugin-development/
Captions: 
	00:00:00,520 --> 00:00:03,740
[Applause]

00:00:04,790 --> 00:00:09,900
thanks for that introduction Paul

00:00:07,309 --> 00:00:11,849
totally overselling me there

00:00:09,900 --> 00:00:13,830
thank good see you all here there's

00:00:11,849 --> 00:00:16,400
quite a few more people than last time I

00:00:13,830 --> 00:00:19,680
spoke the word camp which is nice to see

00:00:16,400 --> 00:00:21,380
so today I'll be presenting an

00:00:19,680 --> 00:00:23,760
introduction to plug-in development and

00:00:21,380 --> 00:00:27,300
proving that anyone can make a plug-in

00:00:23,760 --> 00:00:30,539
so hands up anyone who has made a

00:00:27,300 --> 00:00:34,860
plug-in before cool so I'd say about

00:00:30,539 --> 00:00:37,320
half for you who has written code for

00:00:34,860 --> 00:00:39,090
WordPress before like added code to your

00:00:37,320 --> 00:00:41,760
functions dot PHP file or customize some

00:00:39,090 --> 00:00:43,520
CSS something like that yeah so say most

00:00:41,760 --> 00:00:45,480
of you cool

00:00:43,520 --> 00:00:47,610
see ya this is an introduction to

00:00:45,480 --> 00:00:49,050
plug-in development and this is what

00:00:47,610 --> 00:00:50,309
we're going to be building so we're

00:00:49,050 --> 00:00:52,410
going to make a really simple plug-in

00:00:50,309 --> 00:00:54,390
that's gonna customize the wordpress

00:00:52,410 --> 00:00:57,660
login screen and replace the wordpress

00:00:54,390 --> 00:00:59,789
branding with our own branding so is

00:00:57,660 --> 00:01:03,840
there anyone here who was intending to

00:00:59,789 --> 00:01:06,030
code along while I presented this anyone

00:01:03,840 --> 00:01:07,860
know cool if you are intending to code

00:01:06,030 --> 00:01:09,930
along because there's not much code it's

00:01:07,860 --> 00:01:12,180
simple um via just put your hand up or

00:01:09,930 --> 00:01:16,080
something if you want me to hold out so

00:01:12,180 --> 00:01:18,479
you can see all the code so me I'm

00:01:16,080 --> 00:01:20,729
freelance WordPress developer like Paul

00:01:18,479 --> 00:01:22,860
mentioned I live on the Gold Coast and

00:01:20,729 --> 00:01:26,400
founder of Mongoose marketplace which is

00:01:22,860 --> 00:01:29,100
a store for WordPress plugins so my

00:01:26,400 --> 00:01:31,350
mungus page plug-in is used on thirty

00:01:29,100 --> 00:01:33,540
thousand websites you spin known as the

00:01:31,350 --> 00:01:36,000
responsive Facebook page plug-in but

00:01:33,540 --> 00:01:38,090
then i repainted it and also facebook

00:01:36,000 --> 00:01:40,650
yelled at me so it's no longer all that

00:01:38,090 --> 00:01:43,380
you can find me online at cameron jones

00:01:40,650 --> 00:01:47,220
web on all the socials so yeah you see

00:01:43,380 --> 00:01:49,320
that handle it's me I made my first

00:01:47,220 --> 00:01:51,780
website back in 2006 when I was in

00:01:49,320 --> 00:01:56,880
primary school using Microsoft Publisher

00:01:51,780 --> 00:01:59,640
wouldn't recommend started programming

00:01:56,880 --> 00:02:02,040
in 2008 you might 18 flash games with

00:01:59,640 --> 00:02:06,479
flash ActionScript so that was the first

00:02:02,040 --> 00:02:08,910
time I started writing code then I went

00:02:06,479 --> 00:02:10,630
to uni and did some code and stuff and

00:02:08,910 --> 00:02:13,000
then found WordPress

00:02:10,630 --> 00:02:15,340
and quickly fell in love with it and

00:02:13,000 --> 00:02:19,120
soon after I released my first plugin on

00:02:15,340 --> 00:02:20,920
the wordpress.org repository and earlier

00:02:19,120 --> 00:02:25,450
this year I released my first premium

00:02:20,920 --> 00:02:27,130
plugin so yeah I like plugins and I've

00:02:25,450 --> 00:02:29,140
been writing them for some time I

00:02:27,130 --> 00:02:31,710
wouldn't say I'm the most qualified

00:02:29,140 --> 00:02:36,010
person to talk about them though but I

00:02:31,710 --> 00:02:37,990
mean I'll take the compliment so what

00:02:36,010 --> 00:02:41,290
I'm hoping that you all know already is

00:02:37,990 --> 00:02:43,980
what a plug-in is where plugins are

00:02:41,290 --> 00:02:46,660
installed and just a little bit of PHP

00:02:43,980 --> 00:02:57,880
so there's anyone like not familiar with

00:02:46,660 --> 00:02:59,620
those okay one person Google so first

00:02:57,880 --> 00:03:01,330
thing we need well there's only really

00:02:59,620 --> 00:03:02,800
two things that we need to build a

00:03:01,330 --> 00:03:08,920
plug-in local development environment

00:03:02,800 --> 00:03:10,600
and a text editor so first of all local

00:03:08,920 --> 00:03:12,550
development environments these are the

00:03:10,600 --> 00:03:15,070
two that I would recommend using local

00:03:12,550 --> 00:03:18,220
by flywheel which is a really easy to

00:03:15,070 --> 00:03:21,160
use GUI that you have to install and

00:03:18,220 --> 00:03:23,620
manage local WordPress sites or chassis

00:03:21,160 --> 00:03:26,200
which is a more command-line driven one

00:03:23,620 --> 00:03:28,960
which is really cool and I recommend

00:03:26,200 --> 00:03:32,650
that as well which is based off vagrant

00:03:28,960 --> 00:03:35,740
whereas local users docker there's also

00:03:32,650 --> 00:03:38,080
plenty of others like map and zamp and

00:03:35,740 --> 00:03:41,620
plenty of others out there but those are

00:03:38,080 --> 00:03:44,160
the two that I recommend the other thing

00:03:41,620 --> 00:03:47,920
that you'll need is a text editor so I

00:03:44,160 --> 00:03:50,980
use sublime it's quite lightweight and

00:03:47,920 --> 00:03:54,010
easy to customize to like suit how you

00:03:50,980 --> 00:03:56,560
work a couple of other options are like

00:03:54,010 --> 00:03:58,590
vs code phpstorm atom or even the

00:03:56,560 --> 00:04:01,510
default text editor on Mac or Windows

00:03:58,590 --> 00:04:05,830
will be fine

00:04:01,510 --> 00:04:07,480
and so that's all we need right now

00:04:05,830 --> 00:04:09,460
there's a couple things that we should

00:04:07,480 --> 00:04:11,710
understand about how WordPress works to

00:04:09,460 --> 00:04:14,070
like have it be worthwhile making your

00:04:11,710 --> 00:04:18,729
plugin so the WordPress hook system is

00:04:14,070 --> 00:04:22,540
what WordPress uses to run code at

00:04:18,729 --> 00:04:24,460
certain times and it's the way the hook

00:04:22,540 --> 00:04:25,840
system works is pretty much Bend

00:04:24,460 --> 00:04:29,800
reason why WordPress has become as

00:04:25,840 --> 00:04:32,199
popular as it has it means that

00:04:29,800 --> 00:04:34,720
WordPress is really flexible and easy to

00:04:32,199 --> 00:04:38,020
customize and so that's why there's so

00:04:34,720 --> 00:04:40,300
many different amazing plugins out there

00:04:38,020 --> 00:04:44,560
you know two types of hooks there's

00:04:40,300 --> 00:04:46,870
actions and there's filters so this is

00:04:44,560 --> 00:04:48,340
the syntax that you'll use for actions

00:04:46,870 --> 00:04:50,319
and filters it's exactly the same for

00:04:48,340 --> 00:04:52,539
each one just a different function so

00:04:50,319 --> 00:04:56,860
you've got the hook name so that's the

00:04:52,539 --> 00:04:58,090
name of the hook so when a certain thing

00:04:56,860 --> 00:05:01,000
happens that's what you'll use to

00:04:58,090 --> 00:05:03,340
reference it a callback so often a

00:05:01,000 --> 00:05:06,759
function it could be at an anonymous

00:05:03,340 --> 00:05:08,470
function or a class or namespaced

00:05:06,759 --> 00:05:10,470
function any of that sort of thing any

00:05:08,470 --> 00:05:13,389
sort of callback you can use their

00:05:10,470 --> 00:05:15,160
priority so this is what order that it

00:05:13,389 --> 00:05:17,759
runs in so the smaller the better and

00:05:15,160 --> 00:05:21,639
you can even use negative numbers a

00:05:17,759 --> 00:05:22,930
default for that is 10 and arguments

00:05:21,639 --> 00:05:26,440
which is parameters that get passed

00:05:22,930 --> 00:05:30,490
through to your callback and so in the

00:05:26,440 --> 00:05:32,949
examples you'll see how those work so an

00:05:30,490 --> 00:05:36,430
action is like an event so a certain

00:05:32,949 --> 00:05:39,190
thing happens and it runs an action and

00:05:36,430 --> 00:05:40,870
so you can hook in there and so when a

00:05:39,190 --> 00:05:45,039
certain event happens you can run your

00:05:40,870 --> 00:05:47,169
custom code so a filter on the other

00:05:45,039 --> 00:05:51,789
hand is like a sieve it changes a

00:05:47,169 --> 00:05:55,300
variable rather than runs an event so

00:05:51,789 --> 00:05:57,880
for example an action so there's the

00:05:55,300 --> 00:06:00,909
save post action so when you hit save on

00:05:57,880 --> 00:06:02,979
your post this code will run and for

00:06:00,909 --> 00:06:05,080
example this would create a tweet which

00:06:02,979 --> 00:06:07,090
would say I just saved a post on my

00:06:05,080 --> 00:06:09,969
website I don't recommend you do that

00:06:07,090 --> 00:06:11,590
because that will also run like every

00:06:09,969 --> 00:06:13,539
time it auto saves and stuff like that

00:06:11,590 --> 00:06:18,639
so yeah don't recommend but that's a

00:06:13,539 --> 00:06:22,240
simple example where as a filter you can

00:06:18,639 --> 00:06:25,030
see that it is replacing hello with Newt

00:06:22,240 --> 00:06:27,190
so if you have your default WordPress

00:06:25,030 --> 00:06:28,840
site that comes with the hello world

00:06:27,190 --> 00:06:31,060
post and so saying hello world or say

00:06:28,840 --> 00:06:33,389
newt world because you know we all like

00:06:31,060 --> 00:06:33,389
Pingu

00:06:34,189 --> 00:06:38,419
you can see there it is returning a

00:06:36,199 --> 00:06:40,520
variable so we've changed the title so

00:06:38,419 --> 00:06:41,900
that gets returned whereas the action

00:06:40,520 --> 00:06:47,270
didn't have that because we're doing

00:06:41,900 --> 00:06:51,650
code rather than changing a value so a

00:06:47,270 --> 00:06:53,270
protip you can add your own hooks for

00:06:51,650 --> 00:06:55,819
example WooCommerce is very good at this

00:06:53,270 --> 00:06:57,770
so if you want other developers to be

00:06:55,819 --> 00:06:59,780
able to extend your plugin and not just

00:06:57,770 --> 00:07:02,449
be extending WordPress you can add your

00:06:59,780 --> 00:07:04,789
own custom hooks and then other people

00:07:02,449 --> 00:07:06,560
can extend your plug-in and you could

00:07:04,789 --> 00:07:09,620
even create an ecosystem around your

00:07:06,560 --> 00:07:14,659
plug-in itself and you can learn more at

00:07:09,620 --> 00:07:17,840
that link so now if we understand the

00:07:14,659 --> 00:07:21,770
hook system we're right to get started

00:07:17,840 --> 00:07:23,750
on building your own plugin so the three

00:07:21,770 --> 00:07:25,520
steps to building our plugin set up the

00:07:23,750 --> 00:07:29,029
file structure add the plug-in file

00:07:25,520 --> 00:07:30,949
header and then write our code

00:07:29,029 --> 00:07:34,159
so the first step create a file

00:07:30,949 --> 00:07:36,020
structure so in your WP dash content

00:07:34,159 --> 00:07:38,000
flash plugins folder you're going to

00:07:36,020 --> 00:07:41,270
have to create a folder for your plug-in

00:07:38,000 --> 00:07:43,310
and inside that we're gonna need to

00:07:41,270 --> 00:07:45,440
create a PHP file which will be our main

00:07:43,310 --> 00:07:48,169
plug-in file where all our code will go

00:07:45,440 --> 00:07:50,810
a CSS file so we can change the styles

00:07:48,169 --> 00:07:53,750
and copy the logo image that we're going

00:07:50,810 --> 00:07:58,000
to use to replace the WordPress logo

00:07:53,750 --> 00:08:02,569
with so pro-tips

00:07:58,000 --> 00:08:04,550
have a custom name for your folder so

00:08:02,569 --> 00:08:07,400
like as customers plot possible because

00:08:04,550 --> 00:08:10,370
WordPress will try and look for that

00:08:07,400 --> 00:08:11,810
folder name on wordpress.org so if you

00:08:10,370 --> 00:08:13,639
call your something that already exists

00:08:11,810 --> 00:08:15,770
on wordpress.org WordPress will update

00:08:13,639 --> 00:08:18,020
it and overwrite yours which you

00:08:15,770 --> 00:08:20,870
probably don't want I made that mistake

00:08:18,020 --> 00:08:21,199
very early on and yeah learn from it the

00:08:20,870 --> 00:08:25,039
hard way

00:08:21,199 --> 00:08:27,379
because I lost all my code and it's a

00:08:25,039 --> 00:08:31,729
best practice to use the same name for

00:08:27,379 --> 00:08:33,769
the file as you have with the folder and

00:08:31,729 --> 00:08:36,709
so next up we're going to have to add

00:08:33,769 --> 00:08:39,829
the plug-in file header so if you've

00:08:36,709 --> 00:08:42,169
added those files and you look at your

00:08:39,829 --> 00:08:44,029
plugins page on your WordPress dashboard

00:08:42,169 --> 00:08:45,410
you're not gonna say anything because

00:08:44,029 --> 00:08:46,670
WordPress doesn't know that it's a

00:08:45,410 --> 00:08:48,830
plug-in yet

00:08:46,670 --> 00:08:50,960
so this is what you add to the main PHP

00:08:48,830 --> 00:08:52,910
file in your plugin and it has all the

00:08:50,960 --> 00:08:54,710
important information about your plug-in

00:08:52,910 --> 00:08:57,140
to make WordPress like understand that

00:08:54,710 --> 00:08:59,450
it is a plug-in so this one is an

00:08:57,140 --> 00:09:03,200
example of what the file header looks

00:08:59,450 --> 00:09:04,940
like so it's got the name the author the

00:09:03,200 --> 00:09:06,890
authors and plug-in URLs

00:09:04,940 --> 00:09:09,260
current version number description

00:09:06,890 --> 00:09:12,290
license and text domain and there's a

00:09:09,260 --> 00:09:14,960
couple others I think you can add so

00:09:12,290 --> 00:09:16,940
it's all pretty self-explanatory that

00:09:14,960 --> 00:09:18,560
those details there are what you'll see

00:09:16,940 --> 00:09:23,779
on the plugins screen when it gets to

00:09:18,560 --> 00:09:25,070
your plug-in in the list tip though if

00:09:23,779 --> 00:09:26,330
you want to distribute your plugin

00:09:25,070 --> 00:09:29,960
you're going to have to license it as

00:09:26,330 --> 00:09:33,440
GPL version 2 or later I don't like the

00:09:29,960 --> 00:09:38,020
GPL but that's yeah part of WordPress

00:09:33,440 --> 00:09:42,350
and yeah you don't have a choice

00:09:38,020 --> 00:09:44,450
unfortunately so next up when we're

00:09:42,350 --> 00:09:45,710
going to start writing some code so this

00:09:44,450 --> 00:09:50,150
is the first thing that you should do is

00:09:45,710 --> 00:09:52,490
prevent direct file access so all this

00:09:50,150 --> 00:09:55,190
does is it checks for a constant that

00:09:52,490 --> 00:09:58,940
WordPress defines so if someone types in

00:09:55,190 --> 00:10:02,180
the URL and you know goes you know your

00:09:58,940 --> 00:10:05,300
domain com slash WP content slash plug

00:10:02,180 --> 00:10:07,700
it in slash your plug-in and then a PHP

00:10:05,300 --> 00:10:14,510
file if you have this nothing will

00:10:07,700 --> 00:10:17,630
happen if you have some more some more

00:10:14,510 --> 00:10:19,610
complicated code that would say delete

00:10:17,630 --> 00:10:21,620
files on your website or delete posts or

00:10:19,610 --> 00:10:24,080
something and it runs when that files

00:10:21,620 --> 00:10:25,940
accessed you really don't want people

00:10:24,080 --> 00:10:28,430
just to be able to type in a URL and it

00:10:25,940 --> 00:10:30,380
start deleting stuff so if you add this

00:10:28,430 --> 00:10:32,030
it means that it can only be called if

00:10:30,380 --> 00:10:35,360
WordPress is being loaded and loading

00:10:32,030 --> 00:10:36,860
your plug-in properly and so next up we

00:10:35,360 --> 00:10:38,140
can actually start writing our code now

00:10:36,860 --> 00:10:41,990
that our plug-in is safe

00:10:38,140 --> 00:10:44,930
so you have a function here an

00:10:41,990 --> 00:10:47,540
introduction to plug-in development WCB

00:10:44,930 --> 00:10:48,980
any 19 stylesheet and so this is the

00:10:47,540 --> 00:10:52,820
same sort of code that you would used to

00:10:48,980 --> 00:10:54,920
in cure style for theme takes the same

00:10:52,820 --> 00:10:56,990
like uses the same function takes the

00:10:54,920 --> 00:10:59,379
same arguments that sort of thing we use

00:10:56,990 --> 00:11:02,439
the plugins URL function to

00:10:59,379 --> 00:11:04,329
reference style files within our own

00:11:02,439 --> 00:11:07,839
plugin folder so you can see here that

00:11:04,329 --> 00:11:10,209
we're looking for the Styles CSS file

00:11:07,839 --> 00:11:14,229
within the plugins URL and then the

00:11:10,209 --> 00:11:16,959
second parameter is the PHP constant

00:11:14,229 --> 00:11:18,609
file which is the current file and then

00:11:16,959 --> 00:11:21,009
we're using the login in queue scripts

00:11:18,609 --> 00:11:23,889
action and then referencing our function

00:11:21,009 --> 00:11:27,279
as the callback

00:11:23,889 --> 00:11:29,799
protip for making functions is make them

00:11:27,279 --> 00:11:33,069
as unique as possible because you're not

00:11:29,799 --> 00:11:34,869
the only plug-in out there so as we

00:11:33,069 --> 00:11:36,279
heard in Toni's talk there are some

00:11:34,869 --> 00:11:38,979
people who have 100 plugins on their

00:11:36,279 --> 00:11:41,019
site so if you have like simple name

00:11:38,979 --> 00:11:44,279
like save posts as your function name

00:11:41,019 --> 00:11:46,299
and someone else has that same name ok

00:11:44,279 --> 00:11:48,369
it's going to break because it's going

00:11:46,299 --> 00:11:51,309
to say this function already exists I

00:11:48,369 --> 00:11:53,109
don't know what to do so make your

00:11:51,309 --> 00:11:55,569
function names as unique as possible to

00:11:53,109 --> 00:11:59,409
prevent conflicts with other people's

00:11:55,569 --> 00:12:02,409
code so next up we're going to want to

00:11:59,409 --> 00:12:06,220
add some styles to the style sheet that

00:12:02,409 --> 00:12:08,919
we put in our folder so this is all that

00:12:06,220 --> 00:12:12,549
you'll need to replace the logo so you

00:12:08,919 --> 00:12:14,829
set the background image to our image

00:12:12,549 --> 00:12:17,049
that we've put in our photo and then

00:12:14,829 --> 00:12:19,720
I've got some other code which I think

00:12:17,049 --> 00:12:23,529
makes most images that you replace with

00:12:19,720 --> 00:12:27,220
look a little nicer and so that goes in

00:12:23,529 --> 00:12:30,489
your style dot CSS file within that

00:12:27,220 --> 00:12:32,919
folder and the URL of the background

00:12:30,489 --> 00:12:34,779
image is whatever the name of the images

00:12:32,919 --> 00:12:37,929
that you've put there to replace the

00:12:34,779 --> 00:12:40,959
WordPress logo with so now we would go

00:12:37,929 --> 00:12:43,769
back to our PHP file and so that

00:12:40,959 --> 00:12:46,899
WordPress logo will now be changed but

00:12:43,769 --> 00:12:48,489
when you click on that logo by default

00:12:46,899 --> 00:12:49,869
it'll go through to wordpress.org and

00:12:48,489 --> 00:12:51,239
that doesn't really make sense if my

00:12:49,869 --> 00:12:55,209
logos going through the wordpress.org

00:12:51,239 --> 00:12:57,189
yeah bit confusing so WordPress provides

00:12:55,209 --> 00:12:58,989
a filter this time last time we'll

00:12:57,189 --> 00:12:59,919
adding an action so this time we're

00:12:58,989 --> 00:13:01,689
adding a filter because we want to

00:12:59,919 --> 00:13:03,849
change a value rather than add something

00:13:01,689 --> 00:13:06,909
in and so you can see that we're

00:13:03,849 --> 00:13:09,429
replacing the variable that's getting

00:13:06,909 --> 00:13:11,470
passed in the login header URL and when

00:13:09,429 --> 00:13:13,259
we're making it my website instead of

00:13:11,470 --> 00:13:17,799
wordpress.org

00:13:13,259 --> 00:13:19,899
and WordPress also has some link text

00:13:17,799 --> 00:13:22,209
with that logo you probably can't see it

00:13:19,899 --> 00:13:24,429
but screen readers will see it and like

00:13:22,209 --> 00:13:27,519
by default I think it says powered by

00:13:24,429 --> 00:13:29,350
WordPress or something like that so now

00:13:27,519 --> 00:13:32,709
we're adding in some more relevant text

00:13:29,350 --> 00:13:34,899
saying visit mangas marketplace and so

00:13:32,709 --> 00:13:37,809
exactly the same as when we change the

00:13:34,899 --> 00:13:39,699
URL you set the text to be something

00:13:37,809 --> 00:13:44,920
different and return it and use a filter

00:13:39,699 --> 00:13:47,410
and that's what it should look like once

00:13:44,920 --> 00:13:49,420
you've added that code and see as you

00:13:47,410 --> 00:13:53,439
can see it's pretty simple you only need

00:13:49,420 --> 00:14:00,249
a few lines of code to get a working

00:13:53,439 --> 00:14:02,199
plugin up yeah and I'm sure some of you

00:14:00,249 --> 00:14:06,639
are wondering like can you release it on

00:14:02,199 --> 00:14:09,299
WordPress doc you could but you probably

00:14:06,639 --> 00:14:11,829
shouldn't because there's a lot more

00:14:09,299 --> 00:14:13,360
things that you should keep in mind if

00:14:11,829 --> 00:14:16,809
you want to distribute something on

00:14:13,360 --> 00:14:18,129
wordpress.org so a couple tips so your

00:14:16,809 --> 00:14:21,009
plugin should adhere to the plug-in

00:14:18,129 --> 00:14:23,079
guidelines so it pretty much can be

00:14:21,009 --> 00:14:25,119
summed up with don't do bad things don't

00:14:23,079 --> 00:14:26,860
spam people don't break people's sites

00:14:25,119 --> 00:14:28,119
that sort of thing but yeah there's some

00:14:26,860 --> 00:14:29,529
plugin guidelines that you'll need to

00:14:28,119 --> 00:14:31,269
adhere to

00:14:29,529 --> 00:14:34,869
you'll also need to learn how to use SVN

00:14:31,269 --> 00:14:38,649
which is a worse version of version

00:14:34,869 --> 00:14:42,069
control and get so I only ever use SVN

00:14:38,649 --> 00:14:44,410
for wordpress.org stuff so yeah it's not

00:14:42,069 --> 00:14:48,639
really use much anymore so you probably

00:14:44,410 --> 00:14:50,350
won't use it other than for this you

00:14:48,639 --> 00:14:53,319
should also adhere to the WordPress

00:14:50,350 --> 00:14:56,110
coding standards so WordPress has

00:14:53,319 --> 00:14:58,179
defined coding standards for like the

00:14:56,110 --> 00:15:00,369
different languages CSS PHP in

00:14:58,179 --> 00:15:03,100
JavaScript and all that sort of thing

00:15:00,369 --> 00:15:05,379
so that code is familiar if another

00:15:03,100 --> 00:15:07,480
developer wants to look into it this

00:15:05,379 --> 00:15:10,749
thing cute cludes stuff like naming

00:15:07,480 --> 00:15:14,709
conventions for your files and classes

00:15:10,749 --> 00:15:17,379
and functions and like spacing and that

00:15:14,709 --> 00:15:19,600
sort of thing you should also make sure

00:15:17,379 --> 00:15:21,429
your plug-in is able to be translated

00:15:19,600 --> 00:15:24,549
this is something that took me a while

00:15:21,429 --> 00:15:26,470
to get my head around so WordPress is in

00:15:24,549 --> 00:15:31,180
lots of different languages

00:15:26,470 --> 00:15:34,029
so if someone who's not speaking your

00:15:31,180 --> 00:15:35,529
native language uses your plug-in and

00:15:34,029 --> 00:15:37,720
your plugins isn't set up to be

00:15:35,529 --> 00:15:39,190
translated then they're going to have to

00:15:37,720 --> 00:15:41,110
learn a new language just to use your

00:15:39,190 --> 00:15:42,550
plug-in so it's always good to make sure

00:15:41,110 --> 00:15:45,640
your plugin is translatable if you want

00:15:42,550 --> 00:15:48,220
other people to use it you should if

00:15:45,640 --> 00:15:51,100
you're using forms you should use nonces

00:15:48,220 --> 00:15:55,149
and capability checks and escape and

00:15:51,100 --> 00:15:56,910
sanitize user inputs so making sure that

00:15:55,149 --> 00:16:00,279
your plug-in is doing things securely

00:15:56,910 --> 00:16:02,890
and not allowing it to be exploited and

00:16:00,279 --> 00:16:07,740
things like that you'll find more

00:16:02,890 --> 00:16:09,610
details on that link there so I have a

00:16:07,740 --> 00:16:11,410
wordpress plug-in development for

00:16:09,610 --> 00:16:13,600
beginners course which you can access at

00:16:11,410 --> 00:16:16,270
that link and you can take it for free

00:16:13,600 --> 00:16:17,800
it's similar to what I have just

00:16:16,270 --> 00:16:23,440
presented but it goes into a bit more

00:16:17,800 --> 00:16:26,649
depth about how plugins work and a

00:16:23,440 --> 00:16:28,779
couple more of the more involved topics

00:16:26,649 --> 00:16:30,130
like getting into coding standards and

00:16:28,779 --> 00:16:31,779
translating your plug-in and that sort

00:16:30,130 --> 00:16:33,459
of thing so if you're interested in

00:16:31,779 --> 00:16:37,300
taking that that's the link you can

00:16:33,459 --> 00:16:39,370
follow and for the demo code if you want

00:16:37,300 --> 00:16:42,190
to look at the demo code that I've put

00:16:39,370 --> 00:16:44,200
up you can find it at that link and you

00:16:42,190 --> 00:16:45,320
can also find the slides there too thank

00:16:44,200 --> 00:16:45,750
you

00:16:45,320 --> 00:16:51,470
[Applause]

00:16:45,750 --> 00:16:56,100
[Music]

00:16:51,470 --> 00:16:58,260
well I stand by my my first proposition

00:16:56,100 --> 00:17:02,010
that you are one of the best plug-in

00:16:58,260 --> 00:17:02,610
developers that I know so that was

00:17:02,010 --> 00:17:04,470
pretty cool

00:17:02,610 --> 00:17:07,850
really well-spoken who's gonna go home

00:17:04,470 --> 00:17:11,730
and make a plug in after tonight yeah

00:17:07,850 --> 00:17:17,220
cool all right well we've got some heaps

00:17:11,730 --> 00:17:19,980
of time so Josh so let's just let's just

00:17:17,220 --> 00:17:23,630
the air questions ask Amy ask away

00:17:19,980 --> 00:17:27,240
not literally thank you

00:17:23,630 --> 00:17:29,820
is it worth considering using namespaces

00:17:27,240 --> 00:17:32,010
in your plugins so you can don't have to

00:17:29,820 --> 00:17:33,630
worry about the function name collisions

00:17:32,010 --> 00:17:34,920
is that what does that bring a little

00:17:33,630 --> 00:17:36,930
bit of overhead into the whole thing

00:17:34,920 --> 00:17:38,070
what do you recommend like if you

00:17:36,930 --> 00:17:41,430
created a plugin do you think in an

00:17:38,070 --> 00:17:43,170
object-oriented approach and then not

00:17:41,430 --> 00:17:45,930
having to worry about function name such

00:17:43,170 --> 00:17:48,150
as unless you mentioned yeah I tend to

00:17:45,930 --> 00:17:50,340
use classes I haven't really used

00:17:48,150 --> 00:17:52,620
namespace as much but yeah definitely

00:17:50,340 --> 00:17:53,730
use classes and namespaces if you're

00:17:52,620 --> 00:17:57,830
familiar with them

00:17:53,730 --> 00:18:00,510
it's definitely helps with avoiding

00:17:57,830 --> 00:18:02,190
naming conflicts and means that you're

00:18:00,510 --> 00:18:05,010
writing less code in the end because

00:18:02,190 --> 00:18:06,330
yeah you can write your functions within

00:18:05,010 --> 00:18:07,980
your class or you know it space a lot

00:18:06,330 --> 00:18:14,690
shorter and that sort of thing so yeah

00:18:07,980 --> 00:18:17,550
definitely a good idea good job Cameron

00:18:14,690 --> 00:18:20,730
could you just expand a little bit about

00:18:17,550 --> 00:18:23,310
the localization so in the code that you

00:18:20,730 --> 00:18:26,370
presented you said that you know that

00:18:23,310 --> 00:18:28,710
you are replacing the mouse over powered

00:18:26,370 --> 00:18:32,900
by WordPress thing how would you do that

00:18:28,710 --> 00:18:32,900
how would you make that localize okay

00:18:35,990 --> 00:18:44,010
yep so where I have the login header

00:18:40,710 --> 00:18:46,440
text variable I'd want to wrap that in a

00:18:44,010 --> 00:18:49,200
function so it would be underscore

00:18:46,440 --> 00:18:50,430
underscore and then wrap that and that

00:18:49,200 --> 00:18:51,780
would be the first parameter and then

00:18:50,430 --> 00:18:56,540
the second parameter would be the text

00:18:51,780 --> 00:19:00,790
domain so if I go back to the

00:18:56,540 --> 00:19:03,590
plug-in head made a thing gone past it

00:19:00,790 --> 00:19:06,230
yeah the file header so you'll see that

00:19:03,590 --> 00:19:08,270
last one is the text domain so you

00:19:06,230 --> 00:19:12,020
declare that in the head of your plugin

00:19:08,270 --> 00:19:13,580
and so then you use the localization

00:19:12,020 --> 00:19:17,450
functions which usually start with an

00:19:13,580 --> 00:19:18,920
underscore and so you wrap the text with

00:19:17,450 --> 00:19:20,600
that and the first parameter will be the

00:19:18,920 --> 00:19:21,950
text you want translated and the second

00:19:20,600 --> 00:19:24,530
parameter will be that text domain

00:19:21,950 --> 00:19:26,990
that's declared there and then you'll

00:19:24,530 --> 00:19:29,929
need to run some sort of script to build

00:19:26,990 --> 00:19:33,580
Pio and mo files I've got a grunt script

00:19:29,929 --> 00:19:37,220
on github that does that and see it

00:19:33,580 --> 00:19:40,220
creates a Pio or mo file and then if you

00:19:37,220 --> 00:19:42,559
distribute an awkward press like manages

00:19:40,220 --> 00:19:44,059
the translations automatically but if

00:19:42,559 --> 00:19:45,650
you're distributing it elsewhere you'll

00:19:44,059 --> 00:19:49,190
have to add in another function that

00:19:45,650 --> 00:19:51,470
loads in those language files and so

00:19:49,190 --> 00:19:54,170
that like you can use a free editor like

00:19:51,470 --> 00:19:59,210
poeta is what i use to actually do the

00:19:54,170 --> 00:20:01,370
translations so yeah I might have to

00:19:59,210 --> 00:20:04,600
show you how it all works sometimes okay

00:20:01,370 --> 00:20:09,920
yeah it'll probably be on my next talk

00:20:04,600 --> 00:20:12,350
topic then and you just put those Pio

00:20:09,920 --> 00:20:14,030
files in like a subfolder uh no yeah the

00:20:12,350 --> 00:20:16,580
plugin yeah you don't have to put them

00:20:14,030 --> 00:20:18,080
in a subfolder if it's on.org

00:20:16,580 --> 00:20:20,690
you just have to wrap them in the write

00:20:18,080 --> 00:20:22,429
functions but yeah if you're having like

00:20:20,690 --> 00:20:23,990
a local theme or something like that

00:20:22,429 --> 00:20:26,150
yeah you put them in a sub folder that

00:20:23,990 --> 00:20:27,650
has all your languages in and then yeah

00:20:26,150 --> 00:20:29,090
you just call another function that

00:20:27,650 --> 00:20:31,130
tells WordPress where there's languages

00:20:29,090 --> 00:20:33,309
language files are cool thank you very

00:20:31,130 --> 00:20:33,309
much

00:20:36,849 --> 00:20:42,320
hey thanks for that Cameron a question

00:20:40,609 --> 00:20:44,239
for you at what point would you

00:20:42,320 --> 00:20:45,769
typically recommend that you create a

00:20:44,239 --> 00:20:50,169
plugin rather than adding something to a

00:20:45,769 --> 00:20:51,979
child theme that is a very good question

00:20:50,169 --> 00:20:55,369
something that I'm sure it's very

00:20:51,979 --> 00:20:57,649
subjective typically what you would say

00:20:55,369 --> 00:21:00,139
is anything that you want to reuse on

00:20:57,649 --> 00:21:05,539
multiple sites is better served in a

00:21:00,139 --> 00:21:07,249
plugin so let's just say you have some

00:21:05,539 --> 00:21:10,579
function that you put on every site that

00:21:07,249 --> 00:21:12,979
you build or manage or whatever and it's

00:21:10,579 --> 00:21:14,509
a lot easier to just have a plug-in and

00:21:12,979 --> 00:21:16,969
drop that into all your sites and

00:21:14,509 --> 00:21:18,469
activate it rather than copying pasting

00:21:16,969 --> 00:21:22,489
that code onto all your different

00:21:18,469 --> 00:21:25,669
function files so that would be my gauge

00:21:22,489 --> 00:21:28,249
as to whether it should be in a theme or

00:21:25,669 --> 00:21:31,519
a plug-in there are other guidelines

00:21:28,249 --> 00:21:33,499
like wordpress.org says that you should

00:21:31,519 --> 00:21:35,029
only register post types in a plug-in

00:21:33,499 --> 00:21:38,179
rather than a theme that sort of thing

00:21:35,029 --> 00:21:40,339
so there's some it's not like necessary

00:21:38,179 --> 00:21:42,619
but there are some recommended

00:21:40,339 --> 00:21:44,149
guidelines as well there so yeah if you

00:21:42,619 --> 00:21:45,979
want to reuse it on multiple sites make

00:21:44,149 --> 00:21:48,549
it a plug-in it's yeah easy to manage

00:21:45,979 --> 00:21:48,549
you might be new

00:21:53,059 --> 00:21:58,559
alright you are mentioned that if you

00:21:56,399 --> 00:22:01,529
have a plug-in with a particular name

00:21:58,559 --> 00:22:04,979
and then it that matches with the name

00:22:01,529 --> 00:22:08,909
that's in the WordPress repository it

00:22:04,979 --> 00:22:12,239
will get overwritten is that is that a

00:22:08,909 --> 00:22:13,889
problem way you have a plug-in that

00:22:12,239 --> 00:22:18,779
you're using for your own stuff and then

00:22:13,889 --> 00:22:20,219
one gets added in the future to to the

00:22:18,779 --> 00:22:21,989
WordPress repository and you're not

00:22:20,219 --> 00:22:24,960
aware of it and then it kind of gets

00:22:21,989 --> 00:22:32,700
overwritten is you do have ways around

00:22:24,960 --> 00:22:34,919
that yes that definitely can happen and

00:22:32,700 --> 00:22:36,989
that's why you should always try and

00:22:34,919 --> 00:22:38,929
make it as unique a folder name as

00:22:36,989 --> 00:22:41,519
possible

00:22:38,929 --> 00:22:43,169
yeah thankfully the one time that

00:22:41,519 --> 00:22:47,879
happened to me it was very early on so

00:22:43,169 --> 00:22:51,109
it didn't cost me much but yeah I don't

00:22:47,879 --> 00:22:53,940
really have anything in mind there are

00:22:51,109 --> 00:22:55,619
there's probably a way of doing it but

00:22:53,940 --> 00:22:57,769
not that I know of off the top of my

00:22:55,619 --> 00:22:57,769
head

00:23:03,220 --> 00:23:08,059
Thank You Cameron there was a pretty

00:23:05,330 --> 00:23:11,389
good talk this is more of a just a fun

00:23:08,059 --> 00:23:13,190
question and so what's a pain point or a

00:23:11,389 --> 00:23:15,649
plugin that you wish existed that

00:23:13,190 --> 00:23:17,239
somebody here could write for you or

00:23:15,649 --> 00:23:19,549
just yeah what are some other ideas that

00:23:17,239 --> 00:23:21,019
you might want to plant and see what

00:23:19,549 --> 00:23:24,259
plugins come back from people over the

00:23:21,019 --> 00:23:26,869
rest of the next few months that's a

00:23:24,259 --> 00:23:28,460
dangerous question because I could just

00:23:26,869 --> 00:23:33,369
keep all my ideas to myself and make

00:23:28,460 --> 00:23:36,940
more money yeah that is a good question

00:23:33,369 --> 00:23:41,119
if someone could make a plug-in that

00:23:36,940 --> 00:23:44,210
removed the post meta table and changed

00:23:41,119 --> 00:23:46,489
all the meta fields into columns in the

00:23:44,210 --> 00:23:48,139
post thing and split out posts types

00:23:46,489 --> 00:23:49,489
into their own individual tables that

00:23:48,139 --> 00:23:51,580
would be really nice because the

00:23:49,489 --> 00:23:54,679
WordPress database structure has always

00:23:51,580 --> 00:23:57,590
driven me insane so just good yeah you

00:23:54,679 --> 00:23:58,549
started with yeah so yeah I'm sure

00:23:57,590 --> 00:24:03,279
somebody can whip that up in the next

00:23:58,549 --> 00:24:03,279
five minutes yeah cool thank you

00:24:11,250 --> 00:24:20,850
had a camera do you have any debugging

00:24:15,240 --> 00:24:23,070
tips or go to tools good question

00:24:20,850 --> 00:24:26,640
I say query monitor is a pretty good

00:24:23,070 --> 00:24:29,460
place to start gives you like a list of

00:24:26,640 --> 00:24:33,390
every hook that runs on a page that

00:24:29,460 --> 00:24:34,980
loads so and it like tells you PHP

00:24:33,390 --> 00:24:37,080
errors and that sort of thing so that's

00:24:34,980 --> 00:24:38,880
usually a good place to start

00:24:37,080 --> 00:24:41,820
I know phpstorm has some pretty cool

00:24:38,880 --> 00:24:43,650
debugging tools but I don't really like

00:24:41,820 --> 00:24:45,450
phpstorm because it's really bloody but

00:24:43,650 --> 00:24:46,590
yeah query monitors probably a good

00:24:45,450 --> 00:24:48,419
place to start

00:24:46,590 --> 00:24:51,870
depends like what sort of thing you're

00:24:48,419 --> 00:24:54,000
looking for like you're looking for just

00:24:51,870 --> 00:24:56,820
whether your code works or not or unit

00:24:54,000 --> 00:25:02,549
tests or code standards or yes there

00:24:56,820 --> 00:25:05,700
anything in particular mainly just

00:25:02,549 --> 00:25:08,520
debugging for issues is the big one

00:25:05,700 --> 00:25:10,230
obviously okay yeah I'd say just start

00:25:08,520 --> 00:25:11,280
with query monitor that's probably a

00:25:10,230 --> 00:25:13,970
good place to start

00:25:11,280 --> 00:25:13,970
cool thank you

00:25:25,090 --> 00:25:31,309
what's the minimum due diligence in

00:25:28,730 --> 00:25:34,669
terms of ensuring quality before you

00:25:31,309 --> 00:25:38,379
release that's a really good question

00:25:34,669 --> 00:25:44,210
that difference from person to person

00:25:38,379 --> 00:25:44,989
but for me a good person for me it's

00:25:44,210 --> 00:25:46,580
just yeah

00:25:44,989 --> 00:25:49,460
following the WordPress coding standards

00:25:46,580 --> 00:25:51,919
and making sure that like your plug-in

00:25:49,460 --> 00:25:54,559
is secure and has the right you know

00:25:51,919 --> 00:25:56,239
capability checks and sanitization and

00:25:54,559 --> 00:25:58,100
that sort of thing

00:25:56,239 --> 00:26:00,679
it obviously differs from plug-in to

00:25:58,100 --> 00:26:02,539
plug-in like that sort of plug-in that I

00:26:00,679 --> 00:26:04,190
just walked through is not complicated

00:26:02,539 --> 00:26:07,309
at all doesn't take any user input or

00:26:04,190 --> 00:26:09,379
anything so it's pretty fine but yeah

00:26:07,309 --> 00:26:11,179
just follow the guidelines and standards

00:26:09,379 --> 00:26:13,759
and that sort of thing that WordPress

00:26:11,179 --> 00:26:20,720
declares is pretty much the best place

00:26:13,759 --> 00:26:22,340
to start thank you for your talk umm I'm

00:26:20,720 --> 00:26:25,669
coming from the other end so I'm a

00:26:22,340 --> 00:26:27,649
project manager more step and developer

00:26:25,669 --> 00:26:30,470
front-end developer but I do have a

00:26:27,649 --> 00:26:33,200
couple of guys in the team who do custom

00:26:30,470 --> 00:26:36,519
plug-ins for us my biggest concern I

00:26:33,200 --> 00:26:38,840
guess and I'm apologies early apologies

00:26:36,519 --> 00:26:42,559
but plug-in developers like all of us

00:26:38,840 --> 00:26:44,239
can be hit by bus so my biggest concern

00:26:42,559 --> 00:26:46,669
I guess is that when we have a custom

00:26:44,239 --> 00:26:49,519
plug-in built I don't want to trap our

00:26:46,669 --> 00:26:51,859
clients into relying on that plug-in

00:26:49,519 --> 00:26:52,369
developer for any updates to it in the

00:26:51,859 --> 00:26:57,470
future

00:26:52,369 --> 00:27:02,019
how how particular is the code to the

00:26:57,470 --> 00:27:05,470
plug-in developer themselves that's a

00:27:02,019 --> 00:27:05,470
good question

00:27:07,770 --> 00:27:13,260
yeah every plugin and plugin developer

00:27:11,400 --> 00:27:15,810
has their own style and that sort of

00:27:13,260 --> 00:27:17,730
thing but we do have coding standards

00:27:15,810 --> 00:27:20,400
that are recommended to be followed so

00:27:17,730 --> 00:27:22,200
it should be at least readable and

00:27:20,400 --> 00:27:24,870
familiar enough for someone to be able

00:27:22,200 --> 00:27:26,760
to jump in so that's why those sorts of

00:27:24,870 --> 00:27:28,080
things exist so that if you've got more

00:27:26,760 --> 00:27:29,550
than one person in a team or someone

00:27:28,080 --> 00:27:30,750
needs to take over that sort of thing it

00:27:29,550 --> 00:27:32,030
they can still understand the code

00:27:30,750 --> 00:27:34,170
because it should be you know I get it

00:27:32,030 --> 00:27:35,580
but that's mainly where I'm at and I

00:27:34,170 --> 00:27:37,290
understand that there might be some time

00:27:35,580 --> 00:27:39,960
in familiarizing yourself with the

00:27:37,290 --> 00:27:44,130
assess of that plug-in but as long as

00:27:39,960 --> 00:27:45,390
it's a um possibility most cases yeah

00:27:44,130 --> 00:27:47,130
there are some plugins that just

00:27:45,390 --> 00:27:48,290
absolutely rabbit holes in you you you

00:27:47,130 --> 00:27:51,060
want to figure out how they work forever

00:27:48,290 --> 00:27:52,710
but yeah if they if they're following

00:27:51,060 --> 00:27:54,840
standards and guidelines and that sort

00:27:52,710 --> 00:27:56,400
of thing that should be pretty right for

00:27:54,840 --> 00:28:00,570
someone to be able to jump in at least

00:27:56,400 --> 00:28:02,370
excellent good to know thank you there's

00:28:00,570 --> 00:28:05,220
been a few cases on with different

00:28:02,370 --> 00:28:07,380
open-source plug-in or tools that have

00:28:05,220 --> 00:28:10,980
open source plugins where the plug-in

00:28:07,380 --> 00:28:12,780
developer has you know a few thousand

00:28:10,980 --> 00:28:14,250
installs but then they sell up to

00:28:12,780 --> 00:28:16,680
someone else and then they rewrite the

00:28:14,250 --> 00:28:18,660
plug-in so it is now a hack or a

00:28:16,680 --> 00:28:22,530
backdoor or some of that can you talk to

00:28:18,660 --> 00:28:24,870
that at all or just your opinion on that

00:28:22,530 --> 00:28:27,060
or like how if you've seen anything at

00:28:24,870 --> 00:28:29,460
space yeah there's a bit of that in

00:28:27,060 --> 00:28:32,940
WordPress unfortunately I've had a few

00:28:29,460 --> 00:28:34,350
of those people approached me and they

00:28:32,940 --> 00:28:36,240
they couldn't offer me enough money to

00:28:34,350 --> 00:28:39,360
sort of because it's so obvious that

00:28:36,240 --> 00:28:42,420
they're scams but yeah it is unfortunate

00:28:39,360 --> 00:28:44,160
when that happens and so having plugins

00:28:42,420 --> 00:28:47,130
like wordfence or something like that

00:28:44,160 --> 00:28:49,170
running on your site is a good idea

00:28:47,130 --> 00:28:52,820
because they'll pick up on that sort of

00:28:49,170 --> 00:28:55,200
thing it's it's a tough one because

00:28:52,820 --> 00:28:58,470
wordpress.org like to update your

00:28:55,200 --> 00:28:59,610
plug-in like there's no sort of checks

00:28:58,470 --> 00:29:02,850
that it goes through like when you

00:28:59,610 --> 00:29:05,580
submit it they check it but once it's

00:29:02,850 --> 00:29:07,460
approved there's no further checks so

00:29:05,580 --> 00:29:10,800
that's how that sort of thing Zell to

00:29:07,460 --> 00:29:13,410
get out unfortunately like this there's

00:29:10,800 --> 00:29:15,120
not much you can do except like put

00:29:13,410 --> 00:29:18,540
security plugins on that it will

00:29:15,120 --> 00:29:21,930
hopefully catch that it's

00:29:18,540 --> 00:29:22,590
just unfortunate reality and open-source

00:29:21,930 --> 00:29:29,040
software

00:29:22,590 --> 00:29:30,600
unfortunately back on the standards and

00:29:29,040 --> 00:29:32,250
you're talking about before is there any

00:29:30,600 --> 00:29:34,170
automated tools or anything to help but

00:29:32,250 --> 00:29:36,210
here do those WordPress tenants like is

00:29:34,170 --> 00:29:38,100
there at PHP code sniff a rule said or

00:29:36,210 --> 00:29:43,020
anything that you have found helpful for

00:29:38,100 --> 00:29:47,400
what you do yeah so I've got I've got my

00:29:43,020 --> 00:29:48,780
text editor wall to check in the

00:29:47,400 --> 00:29:50,550
background while I'm coding and I'll

00:29:48,780 --> 00:29:55,760
flag online if it you know it doesn't

00:29:50,550 --> 00:29:57,570
meet the standards yeah also got some

00:29:55,760 --> 00:30:00,600
scripts that I've set up with like

00:29:57,570 --> 00:30:02,520
Travis and circle CI that'll run when I

00:30:00,600 --> 00:30:04,860
deploy when I push something up into the

00:30:02,520 --> 00:30:06,780
repo and it'll run and then you know

00:30:04,860 --> 00:30:08,550
return errors or that sort of thing

00:30:06,780 --> 00:30:12,080
so I do have some stuff on github earner

00:30:08,550 --> 00:30:12,080
I can send you a link if you want

00:30:16,850 --> 00:30:21,440
me again I just I just really like

00:30:20,330 --> 00:30:22,100
asking you questions because you're such

00:30:21,440 --> 00:30:26,740
great hair

00:30:22,100 --> 00:30:30,110
so thanks yeah so question you mentioned

00:30:26,740 --> 00:30:31,669
towards the start about plugins that

00:30:30,110 --> 00:30:35,179
have their own hooks and stuff that you

00:30:31,669 --> 00:30:37,490
can you can jump on to and I think you

00:30:35,179 --> 00:30:38,809
gave WooCommerce as an example of one

00:30:37,490 --> 00:30:40,789
that sort of built an entire marketplace

00:30:38,809 --> 00:30:42,409
around it is there anything unique that

00:30:40,789 --> 00:30:44,630
you need to know if you're looking at

00:30:42,409 --> 00:30:49,070
creating a plug-in that is based around

00:30:44,630 --> 00:30:51,139
another plug-in not really just a

00:30:49,070 --> 00:30:55,909
familiarity of how that plug-in works

00:30:51,139 --> 00:30:57,679
really a custom hooks are no different

00:30:55,909 --> 00:30:59,299
to normal WordPress hooks like it runs

00:30:57,679 --> 00:31:00,590
the same function and it takes the same

00:30:59,299 --> 00:31:03,110
arguments that sort of things

00:31:00,590 --> 00:31:05,139
so obviously what commerce is very

00:31:03,110 --> 00:31:08,059
different to how WordPress core work so

00:31:05,139 --> 00:31:09,860
you'd need some familiarity with how

00:31:08,059 --> 00:31:12,049
WooCommerce works and like what you're

00:31:09,860 --> 00:31:14,000
actually trying to achieve with that but

00:31:12,049 --> 00:31:17,529
yeah just some familiarity with how that

00:31:14,000 --> 00:31:17,529
plug-in works is all you'd really need

00:31:18,850 --> 00:31:25,610
yeah

00:31:20,090 --> 00:31:29,690
excuse me just a question regarding PHP

00:31:25,610 --> 00:31:35,320
versions and and plugins

00:31:29,690 --> 00:31:40,490
what's WordPress is policy as far as as

00:31:35,320 --> 00:31:45,940
plugins keeping up to date with with the

00:31:40,490 --> 00:31:52,159
count release PHP yeah so WordPress

00:31:45,940 --> 00:31:54,649
recommends version at least 57.0 I write

00:31:52,159 --> 00:31:57,769
my stuff to work with at least five

00:31:54,649 --> 00:32:01,009
point six or up the official stance is

00:31:57,769 --> 00:32:05,659
that it's recommended that you that you

00:32:01,009 --> 00:32:07,580
have 7.0 or more there's no sort of

00:32:05,659 --> 00:32:10,549
policy or anything enforced though so

00:32:07,580 --> 00:32:14,240
like if you want to write your plugin to

00:32:10,549 --> 00:32:15,919
only support PHP 7.3 and up then that's

00:32:14,240 --> 00:32:17,960
fine and if you want to support all the

00:32:15,919 --> 00:32:20,600
way back to pH before that's also fine

00:32:17,960 --> 00:32:25,809
it's yeah nothing's really enforced but

00:32:20,600 --> 00:32:25,809
it is recommended that it's from 7.0 up

00:32:29,080 --> 00:32:37,370
all right we got time for a couple more

00:32:32,630 --> 00:32:42,020
questions guys if you have any all we

00:32:37,370 --> 00:32:44,660
could just get through yeah just a so

00:32:42,020 --> 00:32:45,830
there's a lot of hooks and filters out

00:32:44,660 --> 00:32:46,850
there and obviously that's the kind of

00:32:45,830 --> 00:32:49,070
bread and butter of what you're gonna

00:32:46,850 --> 00:32:51,140
build and you mentioned obviously

00:32:49,070 --> 00:32:54,110
WooCommerce or other kind of platforms

00:32:51,140 --> 00:32:56,210
that provide those and so do you have

00:32:54,110 --> 00:32:58,940
any kind of go-to resources that you go

00:32:56,210 --> 00:33:01,430
to to find out what's available and to

00:32:58,940 --> 00:33:04,030
kind of work out how you're gonna go

00:33:01,430 --> 00:33:07,370
about solving your problem

00:33:04,030 --> 00:33:10,190
so that just comes from guessing

00:33:07,370 --> 00:33:13,160
honestly some of it's just guessing like

00:33:10,190 --> 00:33:14,660
WordPress like is pretty consistently

00:33:13,160 --> 00:33:16,400
named so you can guess that like when a

00:33:14,660 --> 00:33:20,120
post is saved it's the same post action

00:33:16,400 --> 00:33:22,460
if you use query monitor it'll output a

00:33:20,120 --> 00:33:25,250
log of every single hook that runs so

00:33:22,460 --> 00:33:27,590
you can go through and trace like you

00:33:25,250 --> 00:33:28,790
know this runs at this time so you know

00:33:27,590 --> 00:33:31,370
this would be a good hook to add things

00:33:28,790 --> 00:33:33,110
on a lot of the documentation has like

00:33:31,370 --> 00:33:36,410
recommended hooks to use for like

00:33:33,110 --> 00:33:39,170
certain things like use the wpg scripts

00:33:36,410 --> 00:33:43,250
to in queue your javascript in CSS for

00:33:39,170 --> 00:33:45,620
example yeah if you want to see a list

00:33:43,250 --> 00:33:48,200
of all the hooks you use I query monster

00:33:45,620 --> 00:33:51,710
or something like that yeah other than

00:33:48,200 --> 00:33:54,140
that just dig into the code that's what

00:33:51,710 --> 00:33:56,390
I find myself doing a lot is just yeah

00:33:54,140 --> 00:33:59,440
going through rabbit holes of other

00:33:56,390 --> 00:33:59,440
plugins code if I want to change

00:34:02,790 --> 00:34:12,940
all right I've got a question for you

00:34:05,980 --> 00:34:15,850
yeah do you get plug-in Envy it in what

00:34:12,940 --> 00:34:17,590
way well like when you so just see a

00:34:15,850 --> 00:34:19,450
plug-in that's being developed and you

00:34:17,590 --> 00:34:22,300
go oh that's really good

00:34:19,450 --> 00:34:24,280
I really wish I'd done that well you

00:34:22,300 --> 00:34:28,990
know like I love the code you look at it

00:34:24,280 --> 00:34:30,669
and go wow that's amazing yeah yeah yeah

00:34:28,990 --> 00:34:32,320
I kind of made an inferior version of

00:34:30,669 --> 00:34:35,020
Gutenberg a few years ago so yeah I'm

00:34:32,320 --> 00:34:37,030
shaking my fist set automatic yeah right

00:34:35,020 --> 00:34:39,340
okay cool

00:34:37,030 --> 00:34:42,820
all right well thank you yeah personal

00:34:39,340 --> 00:34:45,220
question all right guys well I might

00:34:42,820 --> 00:34:48,580
wrap up there the other session starts

00:34:45,220 --> 00:34:50,740
in 10 minutes so hmm

00:34:48,580 --> 00:34:52,980
so thank you thank you Cameron um yeah

00:34:50,740 --> 00:34:52,980
please

00:34:55,040 --> 00:35:00,460
[Music]

00:34:57,930 --> 00:35:00,460

YouTube URL: https://www.youtube.com/watch?v=Uil9ewupG7o


