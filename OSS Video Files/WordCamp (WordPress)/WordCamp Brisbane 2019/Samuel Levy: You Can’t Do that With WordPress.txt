Title: Samuel Levy: You Can’t Do that With WordPress
Publication date: 2019-10-27
Playlist: WordCamp Brisbane 2019
Description: 
	In the past 15 years the technology of the web has evolved, enabling exciting new techniques and tools for web developers. WordPress has evolved with it, but some of the newer and more exciting tools are still out of reach… or are they?
This is a developer focused talk about bringing newer technologies into WordPress development through the use (and abuse) of plugins and themes.
https://2019.brisbane.wordcamp.org/session/you-cant-do-that-with-wordpress/

WPTV link: https://wordpress.tv/2019/10/18/samuel-levy-you-cant-do-that-with-wordpress/
Captions: 
	00:00:00,180 --> 00:00:06,379
[Applause]

00:00:03,410 --> 00:00:11,070
and I'm already ruining everything hi

00:00:06,379 --> 00:00:14,219
I'm Sam this is a talk about the things

00:00:11,070 --> 00:00:17,550
you can and possibly shouldn't but you

00:00:14,219 --> 00:00:20,939
can do with WordPress WordPress

00:00:17,550 --> 00:00:24,300
obviously everyone here knows what it is

00:00:20,939 --> 00:00:26,070
hopefully if you don't then you got very

00:00:24,300 --> 00:00:29,490
lost and I'm apologize what you're about

00:00:26,070 --> 00:00:34,320
to go through Who am I I'm a web

00:00:29,490 --> 00:00:38,489
developer I'm a massive nerd I do stupid

00:00:34,320 --> 00:00:42,120
things for money I've been programming

00:00:38,489 --> 00:00:44,430
for a long time I've been freelancing

00:00:42,120 --> 00:00:47,879
for awhile I've been getting paid to

00:00:44,430 --> 00:00:52,140
program for a long while and I tend to

00:00:47,879 --> 00:00:55,649
do rather bizarre things on mice in my

00:00:52,140 --> 00:01:01,109
spare time so for example my personal

00:00:55,649 --> 00:01:03,480
blog is not WordPress it is a single

00:01:01,109 --> 00:01:06,780
file of PHP that I wrote in a weekend

00:01:03,480 --> 00:01:10,350
that contains all of the templates all

00:01:06,780 --> 00:01:12,540
of the functionality everything for a

00:01:10,350 --> 00:01:16,229
complete blogging system including

00:01:12,540 --> 00:01:20,400
comments posts pages in about 3,000

00:01:16,229 --> 00:01:24,150
lines of PHP it's polymorphic which

00:01:20,400 --> 00:01:26,100
means it has the installer it runs the

00:01:24,150 --> 00:01:30,240
install and then deletes the installer

00:01:26,100 --> 00:01:32,070
from the file it's a terrible idea but

00:01:30,240 --> 00:01:35,759
it's been running for seven years and

00:01:32,070 --> 00:01:37,890
hasn't gone down once in that time so it

00:01:35,759 --> 00:01:40,439
was a terrible idea but that's kind of

00:01:37,890 --> 00:01:46,020
what I mean by I'm I like to do weird

00:01:40,439 --> 00:01:49,070
things in my spare time so let's talk

00:01:46,020 --> 00:01:53,640
about WordPress what is WordPress

00:01:49,070 --> 00:01:57,689
WordPress is a blog a lot of people seem

00:01:53,640 --> 00:02:00,899
to forget this WordPress does so much a

00:01:57,689 --> 00:02:03,149
lot of people don't know this not too

00:02:00,899 --> 00:02:06,630
long ago I had a client come to me and

00:02:03,149 --> 00:02:08,830
sheepishly sheepishly ask is there a

00:02:06,630 --> 00:02:13,150
plug-in I could find

00:02:08,830 --> 00:02:15,790
to add a blog to my wordpress site and I

00:02:13,150 --> 00:02:17,950
had to sheepishly tell them no there

00:02:15,790 --> 00:02:23,260
isn't a plug-in for that because that's

00:02:17,950 --> 00:02:25,930
what WordPress does its WordPress is

00:02:23,260 --> 00:02:27,610
incredibly flexible so that's why some

00:02:25,930 --> 00:02:31,480
people don't know that it is actually a

00:02:27,610 --> 00:02:33,850
blogging engine there's a lot of things

00:02:31,480 --> 00:02:37,150
you can do with WordPress the structure

00:02:33,850 --> 00:02:38,770
of WordPress the hooks the filters all

00:02:37,150 --> 00:02:42,040
of this type of stuff that's built into

00:02:38,770 --> 00:02:47,709
WordPress means you can do a lot with it

00:02:42,040 --> 00:02:50,080
with obviously with a bit of skill and

00:02:47,709 --> 00:02:51,970
knowledge but also just using plugins

00:02:50,080 --> 00:02:54,790
from the plug-in directory and things

00:02:51,970 --> 00:02:57,190
you can get a lot achieved in a very

00:02:54,790 --> 00:03:02,770
short amount of time without too much

00:02:57,190 --> 00:03:07,480
knowledge of how websites work WordPress

00:03:02,770 --> 00:03:09,700
is a platform it's ascended past being

00:03:07,480 --> 00:03:12,550
just a blogging engine it is a platform

00:03:09,700 --> 00:03:17,370
there are ecosystems there ecosystems

00:03:12,550 --> 00:03:20,050
built for ecosystems the the fact that

00:03:17,370 --> 00:03:22,150
WooCommerce is a plugin for WordPress

00:03:20,050 --> 00:03:25,030
and then has its own complete plug-in

00:03:22,150 --> 00:03:28,600
ecosystem for WooCommerce specific

00:03:25,030 --> 00:03:31,360
WordPress plugins it's become a platform

00:03:28,600 --> 00:03:34,570
you find people who advertise themselves

00:03:31,360 --> 00:03:36,760
as WordPress developers they're not

00:03:34,570 --> 00:03:39,340
saying they're PHP developers they are

00:03:36,760 --> 00:03:41,320
WordPress developers it is the platform

00:03:39,340 --> 00:03:44,910
that they know it's the platform that

00:03:41,320 --> 00:03:48,850
they use and finally WordPress is

00:03:44,910 --> 00:03:52,720
incredibly legacy software it was

00:03:48,850 --> 00:03:56,500
written I think in 2003 was first

00:03:52,720 --> 00:03:59,860
version I was in high school then I was

00:03:56,500 --> 00:04:03,180
writing terrible code still but I was in

00:03:59,860 --> 00:04:05,709
high school and Matt Mullenweg was

00:04:03,180 --> 00:04:10,090
changing the world even if he didn't

00:04:05,709 --> 00:04:12,549
know it yet it's still in production

00:04:10,090 --> 00:04:15,910
everywhere it gets constant update

00:04:12,549 --> 00:04:19,030
updates it's clearly a great platform

00:04:15,910 --> 00:04:21,819
however there's a lot in WordPress which

00:04:19,030 --> 00:04:26,319
is still very legacy

00:04:21,819 --> 00:04:28,569
what that means is as a modern PHP

00:04:26,319 --> 00:04:30,759
developer there are a lot of things that

00:04:28,569 --> 00:04:33,690
I would normally do in a project which I

00:04:30,759 --> 00:04:37,660
can't really do easily in WordPress

00:04:33,690 --> 00:04:42,580
because it's based on design decisions

00:04:37,660 --> 00:04:45,610
that were made 15 16 years ago and were

00:04:42,580 --> 00:04:48,580
built around the concepts of what was

00:04:45,610 --> 00:04:51,009
possible in PHP at the time PHP as a

00:04:48,580 --> 00:04:54,690
language has evolved massively since

00:04:51,009 --> 00:04:57,520
that time but um WordPress is still I

00:04:54,690 --> 00:04:59,800
won't say it's capable of running PHP

00:04:57,520 --> 00:05:03,849
for anymore but you wouldn't know it

00:04:59,800 --> 00:05:09,910
from looking at some of the code so what

00:05:03,849 --> 00:05:10,990
can't you do with WordPress not much you

00:05:09,910 --> 00:05:14,560
can do a lot with it

00:05:10,990 --> 00:05:17,229
so just from the WordPress repository

00:05:14,560 --> 00:05:19,409
the the plugins store whatever you want

00:05:17,229 --> 00:05:22,060
to call it if you want to do e-commerce

00:05:19,409 --> 00:05:23,740
here's a bunch of plugins there's even

00:05:22,060 --> 00:05:26,800
more paid ones if you want to do

00:05:23,740 --> 00:05:27,970
eLearning here's some plugins social

00:05:26,800 --> 00:05:30,520
networking you can build your own

00:05:27,970 --> 00:05:33,759
special social network on a blog site

00:05:30,520 --> 00:05:36,070
you can have thousands of users coming

00:05:33,759 --> 00:05:41,530
in and using it as your kind of Facebook

00:05:36,070 --> 00:05:46,630
but it's WordPress custom development

00:05:41,530 --> 00:05:49,090
however can get a bit painful so some of

00:05:46,630 --> 00:05:53,400
you might recognize this picture of the

00:05:49,090 --> 00:05:56,349
double Clawd PHP hammer it is the

00:05:53,400 --> 00:05:58,509
greatest thing that came as as a result

00:05:56,349 --> 00:06:03,130
of a blog post about seven or eight

00:05:58,509 --> 00:06:07,509
years ago which was called PHP a fractal

00:06:03,130 --> 00:06:10,270
of bad design and in it someone listed

00:06:07,509 --> 00:06:11,979
every terrible thing with PHP why it's

00:06:10,270 --> 00:06:15,820
the worst language ever why it's

00:06:11,979 --> 00:06:16,900
completely unredeemable and yet it's

00:06:15,820 --> 00:06:19,300
still one of the most popular

00:06:16,900 --> 00:06:22,900
programming languages it's still running

00:06:19,300 --> 00:06:26,080
so much of the internet and he described

00:06:22,900 --> 00:06:30,909
PHP is everything is just a little bit

00:06:26,080 --> 00:06:32,110
wrong so the analogy was a hammer you go

00:06:30,909 --> 00:06:34,420
and pick up a hammer

00:06:32,110 --> 00:06:36,280
and it's got a claw on both sides you

00:06:34,420 --> 00:06:38,290
can still bash a nail in with the side

00:06:36,280 --> 00:06:40,660
of it so it's still functional as a

00:06:38,290 --> 00:06:44,500
hammer but it's a little bit wrong and

00:06:40,660 --> 00:06:46,840
that's the kind of ear of that PHP came

00:06:44,500 --> 00:06:49,140
from everything's just a little bit

00:06:46,840 --> 00:06:53,370
wrong it's not how you would approach

00:06:49,140 --> 00:06:57,220
modern programming or modern development

00:06:53,370 --> 00:06:59,500
so if we want to make WordPress a bit

00:06:57,220 --> 00:07:02,290
more developer friendly here are some of

00:06:59,500 --> 00:07:04,600
the things that we want we want things

00:07:02,290 --> 00:07:06,910
that use a template language

00:07:04,600 --> 00:07:09,010
so there's blade there's tweek there's

00:07:06,910 --> 00:07:11,920
even smarty which knowledge should ever

00:07:09,010 --> 00:07:15,280
touch but there are many PHP templating

00:07:11,920 --> 00:07:18,940
languages out there models for custom

00:07:15,280 --> 00:07:21,160
data types so a model encapsulate

00:07:18,940 --> 00:07:23,200
everything about a single piece of data

00:07:21,160 --> 00:07:25,960
you can pass it around you can make

00:07:23,200 --> 00:07:27,700
modifications and it's all kept in one

00:07:25,960 --> 00:07:32,020
single object that you can pass around

00:07:27,700 --> 00:07:34,810
and use controllers to find models and

00:07:32,020 --> 00:07:37,750
views so there's MVC architecture which

00:07:34,810 --> 00:07:39,820
is Model View controller the idea is the

00:07:37,750 --> 00:07:42,190
controller does all of the grunt work it

00:07:39,820 --> 00:07:44,530
finds it modifies your models and then

00:07:42,190 --> 00:07:48,490
it adds it off to a view which just does

00:07:44,530 --> 00:07:50,890
display and doesn't do anything else the

00:07:48,490 --> 00:07:54,250
ability to add tests to the code base it

00:07:50,890 --> 00:07:57,970
is possible to do but there's no great

00:07:54,250 --> 00:07:59,860
testing framework set up it's difficult

00:07:57,970 --> 00:08:03,670
to test WordPress themes and plugins

00:07:59,860 --> 00:08:09,910
properly because they're built around a

00:08:03,670 --> 00:08:13,570
very old style of procedural PHP and

00:08:09,910 --> 00:08:16,000
concise predictable routing can be

00:08:13,570 --> 00:08:18,280
difficult with WordPress themes it kind

00:08:16,000 --> 00:08:21,190
of does a lot of magic behind the scenes

00:08:18,280 --> 00:08:24,190
to find which template to run in which

00:08:21,190 --> 00:08:27,520
file to run and that there is a lot of

00:08:24,190 --> 00:08:29,890
magic that happens based on file names

00:08:27,520 --> 00:08:34,300
or things just expected to be in the

00:08:29,890 --> 00:08:36,040
right place so when we're talking about

00:08:34,300 --> 00:08:39,280
making WordPress more developer-friendly

00:08:36,040 --> 00:08:41,849
we're kind of talking about making it

00:08:39,280 --> 00:08:44,440
look a little bit more like a framework

00:08:41,849 --> 00:08:46,839
so the current

00:08:44,440 --> 00:08:47,800
two of the big popular ones are laravel

00:08:46,839 --> 00:08:49,720
and symphony

00:08:47,800 --> 00:08:51,850
they are everywhere you're probably

00:08:49,720 --> 00:08:57,959
already using parts of them in without

00:08:51,850 --> 00:09:00,519
realizing it Symphony in particular is a

00:08:57,959 --> 00:09:03,970
whole bunch of little components which

00:09:00,519 --> 00:09:06,089
come everywhere laravel itself uses a

00:09:03,970 --> 00:09:12,040
whole bunch of symphony anyway they're

00:09:06,089 --> 00:09:14,649
very more modern ways of building PHP so

00:09:12,040 --> 00:09:16,930
what already exists we have sage which

00:09:14,649 --> 00:09:21,360
brings in blade templates from laravel

00:09:16,930 --> 00:09:24,370
it's really great you can write nice

00:09:21,360 --> 00:09:27,759
it's a templating language that is nice

00:09:24,370 --> 00:09:33,850
concise it's not too scary it's really

00:09:27,759 --> 00:09:36,160
quick to run sage doesn't have all the

00:09:33,850 --> 00:09:38,050
rest of the MVC it does have controllers

00:09:36,160 --> 00:09:41,399
but really it's still just a nice

00:09:38,050 --> 00:09:43,689
wrapper around old theme development

00:09:41,399 --> 00:09:47,889
core cell is a really interesting

00:09:43,689 --> 00:09:50,560
project I came across so laravel uses an

00:09:47,889 --> 00:09:53,920
object relational mapper called eloquent

00:09:50,560 --> 00:09:57,060
and eloquent is a great little tool for

00:09:53,920 --> 00:10:01,360
accessing all of your database and

00:09:57,060 --> 00:10:03,880
course Sol provides all of the models to

00:10:01,360 --> 00:10:06,990
access a wordpress database from a

00:10:03,880 --> 00:10:09,100
laravel application which is excellent

00:10:06,990 --> 00:10:10,990
except we're not running a local

00:10:09,100 --> 00:10:14,230
application we're still working in

00:10:10,990 --> 00:10:16,720
WordPress and there's timber which is

00:10:14,230 --> 00:10:19,720
being talked about a few times it does a

00:10:16,720 --> 00:10:22,509
kind of does its own kind of MVC

00:10:19,720 --> 00:10:25,329
architecture it's got twig templating it

00:10:22,509 --> 00:10:29,620
has control as it provides some kind of

00:10:25,329 --> 00:10:33,130
models it's it's alright I'm not a fan

00:10:29,620 --> 00:10:35,680
of it but it's alright so let's get a

00:10:33,130 --> 00:10:39,399
framework into a theme I've gone with

00:10:35,680 --> 00:10:41,860
lumen lumen is laravel light it is a

00:10:39,399 --> 00:10:44,769
micro service framework it just doesn't

00:10:41,860 --> 00:10:47,470
have all of the big heavy parts like

00:10:44,769 --> 00:10:49,990
session management and things like that

00:10:47,470 --> 00:10:52,180
because WordPress is already doing that

00:10:49,990 --> 00:10:54,250
WordPress is already doing sessions it's

00:10:52,180 --> 00:10:56,650
already doing user authentication it's

00:10:54,250 --> 00:10:58,780
already doing all the

00:10:56,650 --> 00:11:01,120
that you would have to build out from a

00:10:58,780 --> 00:11:06,490
framework so lumen is a great place to

00:11:01,120 --> 00:11:08,170
start we have a few problems lumen runs

00:11:06,490 --> 00:11:11,380
runs from the public folder it is

00:11:08,170 --> 00:11:14,170
designed to be the entire application in

00:11:11,380 --> 00:11:16,090
and of itself and most of the code is

00:11:14,170 --> 00:11:19,330
meant to live outside of the web route

00:11:16,090 --> 00:11:23,790
so you have the public folder which

00:11:19,330 --> 00:11:26,230
contains one file which is index.php

00:11:23,790 --> 00:11:29,220
that's it

00:11:26,230 --> 00:11:31,210
and an htaccess file to tell people to

00:11:29,220 --> 00:11:35,200
tell the server to route all the

00:11:31,210 --> 00:11:36,790
requests through that one file lumen has

00:11:35,200 --> 00:11:39,550
its own router it has its own

00:11:36,790 --> 00:11:41,710
environment and as soon as it boots up

00:11:39,550 --> 00:11:43,750
it doesn't know that it's part of

00:11:41,710 --> 00:11:46,120
another application it tries to take

00:11:43,750 --> 00:11:50,980
over the entire request and go

00:11:46,120 --> 00:11:52,750
yes I'm running lumen what now a bit of

00:11:50,980 --> 00:11:55,950
a problem because WordPress is still

00:11:52,750 --> 00:11:58,900
trying to run the show here as well and

00:11:55,950 --> 00:12:02,380
WordPress is actually still trying to

00:11:58,900 --> 00:12:05,580
find files in the file system so the way

00:12:02,380 --> 00:12:09,220
WordPress things work is it looks for a

00:12:05,580 --> 00:12:12,850
file name based on the type of template

00:12:09,220 --> 00:12:14,110
that is trying to run or that the part

00:12:12,850 --> 00:12:16,630
of the template that it's trying to run

00:12:14,110 --> 00:12:20,940
and it's looking for all of these things

00:12:16,630 --> 00:12:25,270
which don't necessarily map well into

00:12:20,940 --> 00:12:28,300
lumen application so let's just have a

00:12:25,270 --> 00:12:30,090
talk about things a little bit themes

00:12:28,300 --> 00:12:33,010
can provide style and functionality

00:12:30,090 --> 00:12:34,630
they're kind of like special plug-in

00:12:33,010 --> 00:12:36,670
where you can only have one of them

00:12:34,630 --> 00:12:39,340
installed but ultimately it's all

00:12:36,670 --> 00:12:42,580
running PHP it can do kind of everything

00:12:39,340 --> 00:12:45,610
it's common for themes to define custom

00:12:42,580 --> 00:12:48,010
post types with custom styling so if you

00:12:45,610 --> 00:12:49,990
get a theme which is for real estate it

00:12:48,010 --> 00:12:52,630
will have a properties post type that it

00:12:49,990 --> 00:12:54,550
defines and it knows about that and it

00:12:52,630 --> 00:12:58,810
has all the custom styling and templates

00:12:54,550 --> 00:13:00,460
for that property post type

00:12:58,810 --> 00:13:03,250
if you don't define a template for a

00:13:00,460 --> 00:13:05,070
page it starts falling back to more and

00:13:03,250 --> 00:13:08,250
more general templates it

00:13:05,070 --> 00:13:10,380
has hierarchy which it goes down to try

00:13:08,250 --> 00:13:14,910
and find the most specific template that

00:13:10,380 --> 00:13:17,160
it can to build something the WordPress

00:13:14,910 --> 00:13:19,320
template hierarchy can kind of seem like

00:13:17,160 --> 00:13:21,360
voodoo because it's working based on

00:13:19,320 --> 00:13:23,069
where it assumes things should be and

00:13:21,360 --> 00:13:24,660
you can add new files and that will

00:13:23,069 --> 00:13:27,839
suddenly start working without you

00:13:24,660 --> 00:13:31,290
changing any other code it just kind of

00:13:27,839 --> 00:13:33,810
magically happens and it's not always

00:13:31,290 --> 00:13:37,079
clear which file is actually providing

00:13:33,810 --> 00:13:39,240
the template so your theme may provide a

00:13:37,079 --> 00:13:42,750
file but it might be falling back to

00:13:39,240 --> 00:13:44,519
something from WooCommerce or it could

00:13:42,750 --> 00:13:47,279
be your child theme is overriding

00:13:44,519 --> 00:13:49,170
template from your master theme there's

00:13:47,279 --> 00:13:52,529
a whole bunch of thing so it can be

00:13:49,170 --> 00:13:56,160
difficult to find out which actual file

00:13:52,529 --> 00:13:58,350
is providing a piece of template and the

00:13:56,160 --> 00:14:00,269
page you see is usually compiled out of

00:13:58,350 --> 00:14:05,339
a few different template templating

00:14:00,269 --> 00:14:07,579
parts so its first challenge is making

00:14:05,339 --> 00:14:12,360
the template hierarchy work with roots

00:14:07,579 --> 00:14:15,839
roots in laravel are effectively how it

00:14:12,360 --> 00:14:17,519
takes the URL and figures out which part

00:14:15,839 --> 00:14:20,730
of the code is going to run for that URL

00:14:17,519 --> 00:14:24,180
which controller it's going to run this

00:14:20,730 --> 00:14:28,620
is the template hierarchy this is how

00:14:24,180 --> 00:14:32,819
WordPress decides what is going to be

00:14:28,620 --> 00:14:36,360
run what what file is going to be used

00:14:32,819 --> 00:14:38,880
I don't know how readable it is but if

00:14:36,360 --> 00:14:41,060
we go across across from the left say

00:14:38,880 --> 00:14:44,010
you're looking at an author archive page

00:14:41,060 --> 00:14:45,690
first it goes okay I'm looking for an

00:14:44,010 --> 00:14:50,310
archive page I'm looking for an author

00:14:45,690 --> 00:14:54,540
archive does the author is there a file

00:14:50,310 --> 00:14:57,149
called authored - sang PHP if it finds

00:14:54,540 --> 00:15:01,079
it that uses that great if there's not

00:14:57,149 --> 00:15:04,350
my ID is one so is there author - one

00:15:01,079 --> 00:15:07,230
PHP if there is it uses it if not it

00:15:04,350 --> 00:15:09,779
falls back to or for PHP if that's not

00:15:07,230 --> 00:15:13,110
defined it's still an archive page so

00:15:09,779 --> 00:15:15,360
it'll fall back to archive dot PHP if

00:15:13,110 --> 00:15:17,010
that's not defined it falls back to

00:15:15,360 --> 00:15:19,500
index.php and

00:15:17,010 --> 00:15:21,330
everything falls back to index.php and

00:15:19,500 --> 00:15:23,700
some of you can probably guess where I'm

00:15:21,330 --> 00:15:28,710
going with this but if you're a bit like

00:15:23,700 --> 00:15:31,890
me and you see this kind of structure

00:15:28,710 --> 00:15:35,940
and go that's a bit messy you could do

00:15:31,890 --> 00:15:39,690
better the template structure kind of

00:15:35,940 --> 00:15:41,910
looks a lot like this you don't have to

00:15:39,690 --> 00:15:43,940
define all of those things you only have

00:15:41,910 --> 00:15:46,620
to define your index.php and

00:15:43,940 --> 00:15:50,010
conveniently you remember I said lumen

00:15:46,620 --> 00:15:53,700
only has one file and it's index.php so

00:15:50,010 --> 00:15:56,130
that makes it really really easy so we

00:15:53,700 --> 00:15:58,500
still have to define a functions PHP and

00:15:56,130 --> 00:16:00,780
a style dot CSS because WordPress

00:15:58,500 --> 00:16:06,240
expects them because it's magic

00:16:00,780 --> 00:16:08,790
but we can do all of our actual routing

00:16:06,240 --> 00:16:10,800
from the index.php so we can start using

00:16:08,790 --> 00:16:13,710
all of the bits and pieces that are in

00:16:10,800 --> 00:16:17,490
lumen instead of relying on everything

00:16:13,710 --> 00:16:21,270
being magic from WordPress so the

00:16:17,490 --> 00:16:25,050
request comes in to WordPress that boots

00:16:21,270 --> 00:16:27,630
up functions.php in our theme what we do

00:16:25,050 --> 00:16:30,420
there is we boot up lumen lumen

00:16:27,630 --> 00:16:34,020
registers all its routes and then

00:16:30,420 --> 00:16:36,000
WordPress continues on when it gets to

00:16:34,020 --> 00:16:38,700
the time when WordPress actually wants

00:16:36,000 --> 00:16:41,790
to render a page it goes and it looks

00:16:38,700 --> 00:16:45,120
for author named PHP you can't find it

00:16:41,790 --> 00:16:46,320
author ID can't find it worth of PHP

00:16:45,120 --> 00:16:49,080
can't find it

00:16:46,320 --> 00:16:52,890
archive.php still can't find it

00:16:49,080 --> 00:16:56,010
index.php or we've got that one so it

00:16:52,890 --> 00:17:00,690
roll it calls index.php includes it and

00:16:56,010 --> 00:17:02,640
that's when we dispatch the route and we

00:17:00,690 --> 00:17:05,430
have a route here which is author name

00:17:02,640 --> 00:17:08,579
so we can use that route we can call the

00:17:05,430 --> 00:17:10,770
controller author by name and we can

00:17:08,579 --> 00:17:14,490
give a response through that way so

00:17:10,770 --> 00:17:15,839
we've broken up the index from lumen

00:17:14,490 --> 00:17:17,430
into two parts there's the

00:17:15,839 --> 00:17:20,250
initialization of the framework and

00:17:17,430 --> 00:17:23,720
functions and then there's the actual

00:17:20,250 --> 00:17:26,659
dispatching of the request in

00:17:23,720 --> 00:17:28,809
in that and I'm sorry if this is really

00:17:26,659 --> 00:17:31,279
hard to read it's not particularly

00:17:28,809 --> 00:17:33,980
important that you read it but the first

00:17:31,279 --> 00:17:37,730
step we add a filter on to the template

00:17:33,980 --> 00:17:42,049
hierarchy and we get every single file

00:17:37,730 --> 00:17:43,879
that WordPress is trying to find so it's

00:17:42,049 --> 00:17:46,220
not finding them but it's still looking

00:17:43,879 --> 00:17:50,090
for each of those files in order so we

00:17:46,220 --> 00:17:52,690
collect them with a filter and then when

00:17:50,090 --> 00:17:57,590
we get to index we dispatch the route so

00:17:52,690 --> 00:18:00,259
we go through and we go and check all of

00:17:57,590 --> 00:18:01,820
those work files that WordPress was

00:18:00,259 --> 00:18:04,190
trying to find and say do we have a

00:18:01,820 --> 00:18:08,419
route that matches this one if we do we

00:18:04,190 --> 00:18:12,649
fire it off and the way we go so you get

00:18:08,419 --> 00:18:15,110
a wordpress URL which looks like the

00:18:12,649 --> 00:18:17,960
website slash author slash lower press

00:18:15,110 --> 00:18:20,090
that gets routed through to the author

00:18:17,960 --> 00:18:22,279
named route that gets passed to a

00:18:20,090 --> 00:18:24,559
controller and this controller is just

00:18:22,279 --> 00:18:27,230
dumping the request in dumping the name

00:18:24,559 --> 00:18:30,350
that we've got so we can see and we can

00:18:27,230 --> 00:18:32,990
see there as far as lumen is concerned

00:18:30,350 --> 00:18:36,049
we were asked for author - Lara press

00:18:32,990 --> 00:18:39,259
and we got the user named Lara press

00:18:36,049 --> 00:18:43,039
hurray we have templates working through

00:18:39,259 --> 00:18:49,090
routes so the next challenge is native

00:18:43,039 --> 00:18:49,090
database access yep

00:18:52,750 --> 00:19:02,270
all right is that any aim it better

00:18:59,390 --> 00:19:06,940
there the next problem is native

00:19:02,270 --> 00:19:06,940
database access I'll take that off too

00:19:08,620 --> 00:19:14,780
so we've got all the routing happening

00:19:12,559 --> 00:19:17,900
with blade templates and so far all

00:19:14,780 --> 00:19:20,660
we've done is effectively replicated

00:19:17,900 --> 00:19:25,610
sage in a more complex and terrifying

00:19:20,660 --> 00:19:28,580
way we still need to access the database

00:19:25,610 --> 00:19:31,429
we still need to pull out objects and we

00:19:28,580 --> 00:19:34,669
want to do that with models so let's

00:19:31,429 --> 00:19:37,730
just have a quick talk about posts there

00:19:34,669 --> 00:19:40,760
is one data type in WordPress and it is

00:19:37,730 --> 00:19:43,370
the post everything is a post you see a

00:19:40,760 --> 00:19:48,280
page know it's a post you see an image

00:19:43,370 --> 00:19:53,809
or a media object nope it's a post it is

00:19:48,280 --> 00:19:56,960
very flexible and also just it's it's

00:19:53,809 --> 00:19:59,919
mind boggling that um that this is how

00:19:56,960 --> 00:20:03,530
all of the data types in WordPress work

00:19:59,919 --> 00:20:06,470
so posts have very limited information

00:20:03,530 --> 00:20:08,570
about themselves and then everything

00:20:06,470 --> 00:20:11,330
else that special about a post is

00:20:08,570 --> 00:20:14,600
extended with post meta which is another

00:20:11,330 --> 00:20:17,210
table and it's all kind of a bit awkward

00:20:14,600 --> 00:20:20,000
you can register your own post types

00:20:17,210 --> 00:20:21,530
your own custom post types but because

00:20:20,000 --> 00:20:24,799
it's WordPress and everything's a little

00:20:21,530 --> 00:20:27,169
bit magic if you have a plug-in which

00:20:24,799 --> 00:20:28,820
registers a book post type and then you

00:20:27,169 --> 00:20:31,730
have something else which registers a

00:20:28,820 --> 00:20:36,410
book post type one of them will win and

00:20:31,730 --> 00:20:38,330
you don't know which one and post arts

00:20:36,410 --> 00:20:41,000
can be version so there's multiple there

00:20:38,330 --> 00:20:43,640
might be multiple copies of the data in

00:20:41,000 --> 00:20:46,549
a particular object and it can be

00:20:43,640 --> 00:20:49,610
difficult to use find know which posts

00:20:46,549 --> 00:20:54,820
or which objects actually exist and how

00:20:49,610 --> 00:20:54,820
you meant to access them so

00:20:55,470 --> 00:21:01,240
we have some other first hurdles to

00:20:58,270 --> 00:21:03,760
overcome lumen is configured through a

00:21:01,240 --> 00:21:06,179
dot n file and that's where you're meant

00:21:03,760 --> 00:21:10,960
to set the database configuration

00:21:06,179 --> 00:21:13,059
details call me crazy I don't think it

00:21:10,960 --> 00:21:16,360
fiend should have database configuration

00:21:13,059 --> 00:21:20,110
details stored in it

00:21:16,360 --> 00:21:22,690
the other problem is eloquent uses PDO

00:21:20,110 --> 00:21:25,539
which is PHP data objects it uses it

00:21:22,690 --> 00:21:28,480
because eloquent can talk to SQL Lite it

00:21:25,539 --> 00:21:29,590
can talk to MySQL can talk to Postgres

00:21:28,480 --> 00:21:32,320
it can talk to a whole bunch of

00:21:29,590 --> 00:21:35,350
different database languages WordPress

00:21:32,320 --> 00:21:38,559
uses MySQL I which can only talk to word

00:21:35,350 --> 00:21:41,470
for my scroll they are completely

00:21:38,559 --> 00:21:43,870
different libraries and while they both

00:21:41,470 --> 00:21:46,270
do the same thing fair api's aren't

00:21:43,870 --> 00:21:48,940
interchangeable I can't just grab the my

00:21:46,270 --> 00:21:51,070
scroll I object and hand it to eloquent

00:21:48,940 --> 00:21:55,500
and expect it to know what to do it

00:21:51,070 --> 00:21:58,240
doesn't work it's a bit of a problem

00:21:55,500 --> 00:22:02,679
custom post hearts as I said don't

00:21:58,240 --> 00:22:05,950
really fit neatly into models and models

00:22:02,679 --> 00:22:07,870
are designed to define how you create

00:22:05,950 --> 00:22:09,970
how you update how you access all the

00:22:07,870 --> 00:22:12,760
data and all the bits of meta

00:22:09,970 --> 00:22:15,909
information about the data it's it's a

00:22:12,760 --> 00:22:19,210
massive headache except we have core

00:22:15,909 --> 00:22:22,480
cell so the problem with core soul

00:22:19,210 --> 00:22:26,020
before was it was built for laravel and

00:22:22,480 --> 00:22:28,559
lumen and all of those tools it was

00:22:26,020 --> 00:22:31,539
built to be used outside of WordPress

00:22:28,559 --> 00:22:34,960
except we've just injected lumen into

00:22:31,539 --> 00:22:39,220
WordPress so we have access to this tool

00:22:34,960 --> 00:22:42,450
which gives us really nice native to

00:22:39,220 --> 00:22:47,110
lumen access to the WordPress database

00:22:42,450 --> 00:22:50,110
so we just use the configuration

00:22:47,110 --> 00:22:52,539
settings that are that come from the WP

00:22:50,110 --> 00:22:55,360
config and we shoved them into lumen and

00:22:52,539 --> 00:22:57,340
say hey here's how we defined our

00:22:55,360 --> 00:22:59,850
database we don't need our own dot end

00:22:57,340 --> 00:23:05,049
we've already got that all defined and

00:22:59,850 --> 00:23:07,149
we can grab a user by a V ID and then we

00:23:05,049 --> 00:23:08,559
have a nice interface within our

00:23:07,149 --> 00:23:11,419
templates where we're just

00:23:08,559 --> 00:23:15,980
calling properties of the calling

00:23:11,419 --> 00:23:19,850
properties of the model so we have we

00:23:15,980 --> 00:23:24,370
have models working and now we get to

00:23:19,850 --> 00:23:30,250
the last problem which is the loop I

00:23:24,370 --> 00:23:35,750
hate the loop it is the antithesis of

00:23:30,250 --> 00:23:39,789
good design in modern PHP this for

00:23:35,750 --> 00:23:43,100
anyone who's unaware is the loop it

00:23:39,789 --> 00:23:46,100
changes the global state using a global

00:23:43,100 --> 00:23:50,210
variable variable called WP quick query

00:23:46,100 --> 00:23:52,940
you call the post and it loads up the

00:23:50,210 --> 00:23:55,159
next post and then you have access to

00:23:52,940 --> 00:23:59,260
the data on of the post through

00:23:55,159 --> 00:24:02,539
functions like the title and the content

00:23:59,260 --> 00:24:05,090
the problem is if something else calls

00:24:02,539 --> 00:24:05,750
of the post again it moves it on and you

00:24:05,090 --> 00:24:10,880
don't know

00:24:05,750 --> 00:24:13,190
so models are a lot better because once

00:24:10,880 --> 00:24:14,779
you've got a model you're accessing all

00:24:13,190 --> 00:24:17,740
the data directly from the model and

00:24:14,779 --> 00:24:20,690
you're not worrying too much about

00:24:17,740 --> 00:24:24,860
whether the post is being called in some

00:24:20,690 --> 00:24:28,429
function somewhere which does happen so

00:24:24,860 --> 00:24:31,600
I had a quick look at how the other the

00:24:28,429 --> 00:24:36,830
other tools that exist deal with this

00:24:31,600 --> 00:24:40,549
yeah sage doesn't deal with the loop it

00:24:36,830 --> 00:24:44,929
just uses the loop as I said before sage

00:24:40,549 --> 00:24:48,230
is adding a nice layer of sugar on top

00:24:44,929 --> 00:24:50,320
of existing wordpress templates but it's

00:24:48,230 --> 00:24:54,110
not actually doing anything special

00:24:50,320 --> 00:24:57,200
timber grabs WP query it's still using

00:24:54,110 --> 00:24:59,330
the global WP query and it just wraps a

00:24:57,200 --> 00:25:01,789
nice bunch of sugar around it so it

00:24:59,330 --> 00:25:07,000
looks like a model even though it's not

00:25:01,789 --> 00:25:11,809
really yeah we can do better

00:25:07,000 --> 00:25:13,370
here's a terrible solution so WordPress

00:25:11,809 --> 00:25:15,850
has already figured out all the posts

00:25:13,370 --> 00:25:19,429
that need to be displayed on the page

00:25:15,850 --> 00:25:21,950
it's got them all sitting in WP query as

00:25:19,429 --> 00:25:24,470
a loop so I'm just going to

00:25:21,950 --> 00:25:26,389
the loop I'm just going to get use it to

00:25:24,470 --> 00:25:29,299
grab all the IDS and then I'm going to

00:25:26,389 --> 00:25:31,399
build my own collection of eloquent

00:25:29,299 --> 00:25:34,399
models that I can use across all my

00:25:31,399 --> 00:25:38,330
templates this is a terrible solution

00:25:34,399 --> 00:25:40,669
but it works so first we grab the list

00:25:38,330 --> 00:25:43,220
of post IDs from the loop small little

00:25:40,669 --> 00:25:45,710
piece of code we create a collection of

00:25:43,220 --> 00:25:48,620
course Old Post models we've post to

00:25:45,710 --> 00:25:51,409
find many with the IDS and then we hide

00:25:48,620 --> 00:25:54,769
it in a common class so I just shoved it

00:25:51,409 --> 00:25:56,389
into the controller class the base

00:25:54,769 --> 00:25:58,789
controller class for all of my

00:25:56,389 --> 00:26:02,210
controllers so every single controller

00:25:58,789 --> 00:26:04,159
now has access to collect posts and it

00:26:02,210 --> 00:26:06,710
will hand them back a collection of nice

00:26:04,159 --> 00:26:09,019
Cosell models of all the posts that was

00:26:06,710 --> 00:26:12,799
meant to display on this page could be 1

00:26:09,019 --> 00:26:14,720
could be 15 who knows so in the

00:26:12,799 --> 00:26:17,059
controller's we can just call this

00:26:14,720 --> 00:26:19,010
collect posts Hey look at that we've got

00:26:17,059 --> 00:26:21,830
a nice collection of posts in the

00:26:19,010 --> 00:26:23,750
templates we treat it like a collection

00:26:21,830 --> 00:26:27,220
of posts we can loop through it without

00:26:23,750 --> 00:26:30,200
for riches we can access all of the bits

00:26:27,220 --> 00:26:33,080
we don't have to worry about something

00:26:30,200 --> 00:26:36,950
calling something that will call the

00:26:33,080 --> 00:26:39,049
post again because we're not using the

00:26:36,950 --> 00:26:43,399
post functions here anymore we're using

00:26:39,049 --> 00:26:46,460
true proper models that we can pass

00:26:43,399 --> 00:26:48,799
around and pull bits and pieces out of

00:26:46,460 --> 00:26:52,399
and the really thing really nice thing

00:26:48,799 --> 00:26:54,740
about causal models is it takes all the

00:26:52,399 --> 00:26:56,720
WP matter and makes it available from

00:26:54,740 --> 00:26:58,519
the same model without running extra

00:26:56,720 --> 00:27:02,120
queries or extra functions it's all

00:26:58,519 --> 00:27:05,029
there so it looks ugly I haven't done

00:27:02,120 --> 00:27:08,269
any styling but here it is rendered or

00:27:05,029 --> 00:27:10,309
posted by Laura press we've got the

00:27:08,269 --> 00:27:13,669
author used a nice name that's the

00:27:10,309 --> 00:27:15,289
that's our author model and then we can

00:27:13,669 --> 00:27:20,179
look through all the posts and give them

00:27:15,289 --> 00:27:21,820
a title and spit out the content so what

00:27:20,179 --> 00:27:24,200
have we learned

00:27:21,820 --> 00:27:28,159
WordPress is incredibly flexible we can

00:27:24,200 --> 00:27:30,850
do a lot it's it's PHP and that's not

00:27:28,159 --> 00:27:33,679
everything that you need to know but

00:27:30,850 --> 00:27:35,190
WordPress itself as software has been

00:27:33,679 --> 00:27:37,920
written with

00:27:35,190 --> 00:27:39,900
the right amount of magic and hooks and

00:27:37,920 --> 00:27:44,730
loops and everything else to be

00:27:39,900 --> 00:27:46,440
incredibly flexible lumen is scarily

00:27:44,730 --> 00:27:48,270
well adapted to being a wordpress theme

00:27:46,440 --> 00:27:51,960
I thought this was going to take me

00:27:48,270 --> 00:27:54,300
weeks and it took me a weekend it kind

00:27:51,960 --> 00:27:56,370
of all just fell into place really

00:27:54,300 --> 00:27:59,790
easily and I'm a little bit scared of

00:27:56,370 --> 00:28:02,250
that just because something's legacy

00:27:59,790 --> 00:28:06,120
doesn't mean that you're trapped there

00:28:02,250 --> 00:28:08,820
anymore so that's what projects like

00:28:06,120 --> 00:28:11,760
sage and timber are trying to do they're

00:28:08,820 --> 00:28:15,090
trying to give you the modern PHP tools

00:28:11,760 --> 00:28:18,090
to work with WordPress and this is maybe

00:28:15,090 --> 00:28:19,650
taking it a bit far but it's what I was

00:28:18,090 --> 00:28:22,650
trying to attempt to do I was trying to

00:28:19,650 --> 00:28:25,620
give me myself everything that I like

00:28:22,650 --> 00:28:27,540
about a framework but still running in

00:28:25,620 --> 00:28:29,340
WordPress

00:28:27,540 --> 00:28:31,410
you probably shouldn't use this but

00:28:29,340 --> 00:28:33,000
that's one thing that I learned you

00:28:31,410 --> 00:28:35,340
really probably shouldn't use this in

00:28:33,000 --> 00:28:37,050
production this is a proof of concept

00:28:35,340 --> 00:28:39,240
it's a terrible one and I haven't

00:28:37,050 --> 00:28:44,160
explored all of the other nasty bits of

00:28:39,240 --> 00:28:48,330
like weird magic in WordPress no really

00:28:44,160 --> 00:28:52,290
don't use this in production unless you

00:28:48,330 --> 00:28:55,050
already are so one of the even more

00:28:52,290 --> 00:28:56,640
terrifying things that I found when I

00:28:55,050 --> 00:28:58,590
started researching this and I started

00:28:56,640 --> 00:29:02,750
going hey guys wouldn't it be funny if I

00:28:58,590 --> 00:29:05,100
chucked laravel in WordPress a

00:29:02,750 --> 00:29:12,000
surprising number of people went oh yeah

00:29:05,100 --> 00:29:14,100
we did that it's yeah it's it's done

00:29:12,000 --> 00:29:18,450
everywhere um if you want to see this

00:29:14,100 --> 00:29:21,060
code and play with it it's very messy

00:29:18,450 --> 00:29:22,740
I've literally done the amount of code

00:29:21,060 --> 00:29:26,010
that was needed for the presentation

00:29:22,740 --> 00:29:28,800
pushed it and left it so you have my few

00:29:26,010 --> 00:29:30,840
routes that I have there but yeah it's

00:29:28,800 --> 00:29:32,370
all it's open source it's all up on

00:29:30,840 --> 00:29:34,170
github if you want to play with it and

00:29:32,370 --> 00:29:36,720
see if you can make something actually

00:29:34,170 --> 00:29:38,640
useful out of it but you probably

00:29:36,720 --> 00:29:39,830
shouldn't sorry

00:29:38,640 --> 00:29:42,880
any questions

00:29:39,830 --> 00:29:42,880
[Music]

00:29:45,269 --> 00:29:51,730
all right we've got some questions

00:29:47,830 --> 00:29:54,220
already hey have we got a second runner

00:29:51,730 --> 00:29:59,130
over here yeah so good lady in the green

00:29:54,220 --> 00:30:02,230
shut up the back it's a race

00:29:59,130 --> 00:30:03,669
so does WordPress take note of which

00:30:02,230 --> 00:30:05,200
files that exists when it's looking for

00:30:03,669 --> 00:30:06,519
all the different template files over

00:30:05,200 --> 00:30:08,380
there or to just check them every single

00:30:06,519 --> 00:30:11,889
request I'm assuming that would be quite

00:30:08,380 --> 00:30:14,230
intensive well it checks every single

00:30:11,889 --> 00:30:17,590
request anyway so that filter them

00:30:14,230 --> 00:30:19,630
hooking into is it gets handed a list of

00:30:17,590 --> 00:30:21,850
templates that it could possibly be and

00:30:19,630 --> 00:30:24,580
then it quite literally goes through and

00:30:21,850 --> 00:30:27,309
does a file exists for each single one

00:30:24,580 --> 00:30:29,559
of those so it's not going to be

00:30:27,309 --> 00:30:34,120
particularly more intensive than any

00:30:29,559 --> 00:30:36,159
other template it's just it finds none

00:30:34,120 --> 00:30:37,840
of them except for index.php and we're

00:30:36,159 --> 00:30:44,019
collecting the list that it's looking

00:30:37,840 --> 00:30:45,850
for hi can you describe why it's

00:30:44,019 --> 00:30:47,919
terrible you said that a number of times

00:30:45,850 --> 00:30:51,220
and then people have done it have did

00:30:47,919 --> 00:30:52,990
they find it terrible the people I

00:30:51,220 --> 00:30:55,510
talked to who did it said their

00:30:52,990 --> 00:30:58,000
experience was terrible but I think they

00:30:55,510 --> 00:31:01,090
were perhaps approaching it from a

00:30:58,000 --> 00:31:02,860
different direction they I didn't ask

00:31:01,090 --> 00:31:04,720
too heavily about what they were doing

00:31:02,860 --> 00:31:06,760
because it was all done within companies

00:31:04,720 --> 00:31:09,070
I'm saying this particular

00:31:06,760 --> 00:31:10,840
implementation is terrible because it's

00:31:09,070 --> 00:31:14,980
a nasty hack that I built up in a

00:31:10,840 --> 00:31:16,600
weekend and like most things that I

00:31:14,980 --> 00:31:18,789
built up in a weekend it'll probably

00:31:16,600 --> 00:31:23,950
find its way into production soon and be

00:31:18,789 --> 00:31:26,320
there for years as I said my mo single

00:31:23,950 --> 00:31:29,620
file PHP blog is being running for seven

00:31:26,320 --> 00:31:32,289
years which was a nasty weekend had to

00:31:29,620 --> 00:31:37,059
be as obnoxious as possible and see if I

00:31:32,289 --> 00:31:39,940
can make it work yeah it's it's not

00:31:37,059 --> 00:31:41,980
terrible in and of itself it's just this

00:31:39,940 --> 00:31:44,620
particular implementation isn't great

00:31:41,980 --> 00:31:48,490
and you're also pulling a lot of extra

00:31:44,620 --> 00:31:51,639
stuff into WordPress for developer

00:31:48,490 --> 00:31:52,720
niceness but it I have no idea what

00:31:51,639 --> 00:31:56,550
effect it will have on

00:31:52,720 --> 00:31:56,550
it's in a real production system

00:31:58,560 --> 00:32:08,200
question do you have any examples yeah

00:32:06,400 --> 00:32:09,520
you have a question over here do my

00:32:08,200 --> 00:32:10,870
credit while we're waiting for my train

00:32:09,520 --> 00:32:12,730
to come down I have a question for you

00:32:10,870 --> 00:32:15,730
now do you have any examples we can look

00:32:12,730 --> 00:32:17,920
at of where someone has used a similar

00:32:15,730 --> 00:32:20,470
sort of solution or something else to

00:32:17,920 --> 00:32:22,750
combine it there's sage and timber of

00:32:20,470 --> 00:32:24,280
both doing kind of similar things so

00:32:22,750 --> 00:32:26,680
there's I know there are a lot of sites

00:32:24,280 --> 00:32:28,990
that are built on top of timber which is

00:32:26,680 --> 00:32:32,260
adding it does add controllers in it

00:32:28,990 --> 00:32:36,040
does add a kind of model in it adds it

00:32:32,260 --> 00:32:39,700
adds bits of an MVC architecture in in

00:32:36,040 --> 00:32:42,430
terms of examples for places using

00:32:39,700 --> 00:32:45,760
laravel in WordPress I couldn't tell you

00:32:42,430 --> 00:32:49,020
where they are simply because you

00:32:45,760 --> 00:32:51,610
probably never know it's it's all

00:32:49,020 --> 00:32:52,900
abstracted away behind and what you get

00:32:51,610 --> 00:32:56,560
out will probably still look like a

00:32:52,900 --> 00:32:59,380
wordpress site so I'm guessing that that

00:32:56,560 --> 00:33:05,290
all works in server-side PHP so it holds

00:32:59,380 --> 00:33:07,030
all those posts just in RAM when you're

00:33:05,290 --> 00:33:08,590
when you're building when you're

00:33:07,030 --> 00:33:10,630
building the collection it's pulling

00:33:08,590 --> 00:33:12,190
them all out from the database but on

00:33:10,630 --> 00:33:14,410
the client side on the service side

00:33:12,190 --> 00:33:15,970
server side okay yeah yes there so

00:33:14,410 --> 00:33:27,390
there's a recipient ram on the server

00:33:15,970 --> 00:33:30,760
yes yeah they say right yes you did it

00:33:27,390 --> 00:33:33,160
right so it's kind of like taking it

00:33:30,760 --> 00:33:37,330
back to WordPress yeah I think some of

00:33:33,160 --> 00:33:39,190
the drawbacks you raised like super

00:33:37,330 --> 00:33:40,300
important to talk about so thank you for

00:33:39,190 --> 00:33:42,490
bringing them up I took a photo just

00:33:40,300 --> 00:33:44,710
slide and if I find out your tweet I'm

00:33:42,490 --> 00:33:53,290
gonna be tweeting it at you about it so

00:33:44,710 --> 00:33:55,690
thankful it's okay so the question is if

00:33:53,290 --> 00:33:57,400
you were gonna bring this to core you

00:33:55,690 --> 00:33:59,500
know you're the captain of the ship you

00:33:57,400 --> 00:34:01,510
know you can make this happen

00:33:59,500 --> 00:34:06,190
you know so what's the first step that

00:34:01,510 --> 00:34:08,590
you would take to to like help WordPress

00:34:06,190 --> 00:34:11,380
PHP back-end that architecture we're

00:34:08,590 --> 00:34:12,820
talking about to start iterating towards

00:34:11,380 --> 00:34:14,380
and being able to have some of these

00:34:12,820 --> 00:34:17,710
things that you crave and that you need

00:34:14,380 --> 00:34:20,650
as a developer now that's a very

00:34:17,710 --> 00:34:23,350
difficult question because the problem

00:34:20,650 --> 00:34:27,040
that WordPress faces and I'm sure you're

00:34:23,350 --> 00:34:29,440
very well aware of this is WordPress has

00:34:27,040 --> 00:34:32,980
to support all of the stuff that's

00:34:29,440 --> 00:34:35,880
already out there we can't turn off the

00:34:32,980 --> 00:34:38,800
loop and provide a nice interface for

00:34:35,880 --> 00:34:43,330
pulling out posts as a collection

00:34:38,800 --> 00:34:45,520
because there's tens hundreds of

00:34:43,330 --> 00:34:47,620
thousands of themes and plugins that

00:34:45,520 --> 00:34:50,020
don't know how to use that and if we

00:34:47,620 --> 00:34:53,320
provide that which is what's happened

00:34:50,020 --> 00:34:56,190
with WP query it's a wrapper around what

00:34:53,320 --> 00:35:00,580
was clear clearly the older functions

00:34:56,190 --> 00:35:02,560
but if we provide that and then put

00:35:00,580 --> 00:35:05,260
backwards compatible compatibility

00:35:02,560 --> 00:35:06,430
layers like the loop in place no one's

00:35:05,260 --> 00:35:08,740
ever going to use the new stuff because

00:35:06,430 --> 00:35:12,820
they're just gonna use all the old stuff

00:35:08,740 --> 00:35:16,030
it's it's a problem which there's no

00:35:12,820 --> 00:35:19,240
easy solution to it but I will say it is

00:35:16,030 --> 00:35:22,180
possible if you look at Drupal the

00:35:19,240 --> 00:35:24,760
Drupal seven to eight conversion was

00:35:22,180 --> 00:35:29,200
switching from their own homespun

00:35:24,760 --> 00:35:33,120
framework to Drupal 8 is Symphony it is

00:35:29,200 --> 00:35:38,590
a symphony project now it is using a

00:35:33,120 --> 00:35:40,210
full-featured current PHP framework I'm

00:35:38,590 --> 00:35:42,820
not saying it's any better to develop in

00:35:40,210 --> 00:35:45,190
I haven't played with Drupal 8 but I'm

00:35:42,820 --> 00:35:48,100
saying it is possible but there has to

00:35:45,190 --> 00:35:50,710
be a lot of unhappy people and a lot of

00:35:48,100 --> 00:35:53,620
breaking changes sure yeah major version

00:35:50,710 --> 00:35:59,200
number is definitely relevantly thank

00:35:53,620 --> 00:36:01,030
you yeah so we've got the closing

00:35:59,200 --> 00:36:03,970
remarks in a couple minutes guys so

00:36:01,030 --> 00:36:06,400
we'll take one more question I think so

00:36:03,970 --> 00:36:09,030
who's got a burning question well one up

00:36:06,400 --> 00:36:09,030
the back here

00:36:09,740 --> 00:36:18,839
if the questions why would you do this

00:36:12,150 --> 00:36:20,849
it's I can't answer that is this

00:36:18,839 --> 00:36:23,640
essentially achieving what you would

00:36:20,849 --> 00:36:29,310
achieve by using WordPress as a headless

00:36:23,640 --> 00:36:32,310
CMS and a custom front-end so WordPress

00:36:29,310 --> 00:36:35,280
API baby plus custom fronted possibly

00:36:32,310 --> 00:36:37,170
because you could do it that way and

00:36:35,280 --> 00:36:39,720
I've seen plenty of people do do it that

00:36:37,170 --> 00:36:43,230
way where you're using WordPress as a

00:36:39,720 --> 00:36:46,740
data store in an API this is still

00:36:43,230 --> 00:36:48,270
providing you PHP code running on the

00:36:46,740 --> 00:36:52,320
server so you can build out an

00:36:48,270 --> 00:36:54,030
application and smart routing and a

00:36:52,320 --> 00:36:58,829
whole bunch of other bits and pieces so

00:36:54,030 --> 00:37:01,320
it's not exactly the same I'm not saying

00:36:58,829 --> 00:37:03,510
this is better or worse because I still

00:37:01,320 --> 00:37:05,460
I'm still firmly of the opinion that

00:37:03,510 --> 00:37:08,579
this probably isn't a great idea to do

00:37:05,460 --> 00:37:12,540
in production even if it does make it

00:37:08,579 --> 00:37:14,550
there but no it's not exactly the same

00:37:12,540 --> 00:37:17,640
thing as using WordPress API as a

00:37:14,550 --> 00:37:20,460
headless CMS if you were doing this for

00:37:17,640 --> 00:37:22,829
the purpose of easing custom development

00:37:20,460 --> 00:37:24,869
would you be better off just not having

00:37:22,829 --> 00:37:28,020
WordPress in the mix and just using

00:37:24,869 --> 00:37:29,760
laravel or something like it if that was

00:37:28,020 --> 00:37:31,710
your own though the reason why that

00:37:29,760 --> 00:37:36,240
doesn't happen and the reason why core

00:37:31,710 --> 00:37:38,510
sell exists is development is very much

00:37:36,240 --> 00:37:42,300
attached from user experience and

00:37:38,510 --> 00:37:44,970
WordPress still provides a lot of

00:37:42,300 --> 00:37:48,630
functionality out of the box and with

00:37:44,970 --> 00:37:51,660
plugins that you can't really just drop

00:37:48,630 --> 00:37:54,950
into a laravel application so we could

00:37:51,660 --> 00:37:58,079
use this and have a modern development

00:37:54,950 --> 00:38:00,240
environment for a WooCommerce site or

00:37:58,079 --> 00:38:02,160
for a buddypress site and you've got all

00:38:00,240 --> 00:38:04,579
that functionality already still built

00:38:02,160 --> 00:38:07,500
and running in WordPress but we're just

00:38:04,579 --> 00:38:11,640
using this as a layer to present it in a

00:38:07,500 --> 00:38:14,640
more clean modern way and more clean

00:38:11,640 --> 00:38:16,870
modern way to access and manipulate the

00:38:14,640 --> 00:38:19,949
data Thanks

00:38:16,870 --> 00:38:19,949
[Applause]

00:38:20,640 --> 00:38:22,700

YouTube URL: https://www.youtube.com/watch?v=YewkqAWYSYo


