Title: Pascal Birchler: WordPress Internationalization Workflows
Publication date: 2019-05-10
Playlist: WordCamp Johannesburg 2018
Description: 
	Soon after the release of WordPress 15 years ago, support for internationalization was added to the software. This meant that themes, plugins, and WordPress itself could be translated. This was a huge deal as WordPress is used all over the world, in countries where English is not the main language. WordPress was quickly translated into German, Japanese and many more languages.
Over the years, WordPress has steadily improved the way we have to work with internationalization. However, challenges still exist and there will always be new ones ahead. Projects like Gutenberg and ecosystems beyond WordPress.org force us to continuously iterate.
In this talk youâ€™ll learn how to make use of the latest and greatest technology to make your WordPress plugin or theme fully internationalized. Pascal is going to highlight how you can leverage the powers of WordPress, GlotPress, and WP-CLI to improve the translation workflow in your WordPress projects.

Presentation slides: https://drive.google.com/file/d/0BwoWea-VFLb8VU5nVkhrc05jMGhwem5PYlFBVTJRclRIdDRn/view?usp=sharing
WPTV link: https://wordpress.tv/2019/04/14/pascal-birchler-wordpress-internationalization-workflows-3/
Captions: 
	00:00:00,060 --> 00:00:05,250
so internationalization is one area I

00:00:03,929 --> 00:00:07,649
particularly like in software

00:00:05,250 --> 00:00:11,610
development and it's great to be here

00:00:07,649 --> 00:00:14,250
today talking about it so my name is

00:00:11,610 --> 00:00:17,210
Pascal I'm 24 I'm a software engineer

00:00:14,250 --> 00:00:19,619
I'm also a WordPress core committer and

00:00:17,210 --> 00:00:22,350
continue to like lots of other stuff in

00:00:19,619 --> 00:00:24,510
WordPress and I came all the way here

00:00:22,350 --> 00:00:27,510
from Switzerland to talk about WordPress

00:00:24,510 --> 00:00:29,880
but I also learned about the craft beer

00:00:27,510 --> 00:00:34,170
industry here in South Africa so I have

00:00:29,880 --> 00:00:35,870
to try that as well obviously this talk

00:00:34,170 --> 00:00:38,460
has to do something with

00:00:35,870 --> 00:00:40,800
internationalization over the years

00:00:38,460 --> 00:00:43,800
WordPress has steadily improved the way

00:00:40,800 --> 00:00:46,800
we deal with translations and overall it

00:00:43,800 --> 00:00:48,960
does a very good job job at it and but

00:00:46,800 --> 00:00:51,329
there are always and used things around

00:00:48,960 --> 00:00:56,760
the corner and ways to improve existing

00:00:51,329 --> 00:00:58,530
stuff and today we will look at we'll

00:00:56,760 --> 00:01:01,620
have a look at improving international

00:00:58,530 --> 00:01:04,710
workflows in particular and I tried to

00:01:01,620 --> 00:01:07,380
split this talk up in in three areas so

00:01:04,710 --> 00:01:09,900
first we're going to look at the bare

00:01:07,380 --> 00:01:13,380
basics of how internalization and

00:01:09,900 --> 00:01:15,360
localization and WordPress work just so

00:01:13,380 --> 00:01:17,060
you get a better sense at how all these

00:01:15,360 --> 00:01:19,020
parts interact with each other and

00:01:17,060 --> 00:01:20,790
second we'll look into how we can

00:01:19,020 --> 00:01:23,909
internationalize our own wordpress

00:01:20,790 --> 00:01:27,390
plugin or theme so it's like a simple

00:01:23,909 --> 00:01:29,369
example how this works and like what

00:01:27,390 --> 00:01:32,100
does it take to make project available

00:01:29,369 --> 00:01:34,470
in other languages and finally we will

00:01:32,100 --> 00:01:36,869
explore how we can use barriers and

00:01:34,470 --> 00:01:40,170
improve existing workflows when it comes

00:01:36,869 --> 00:01:43,439
to internalization in WordPress projects

00:01:40,170 --> 00:01:46,200
and this is especially interesting for

00:01:43,439 --> 00:01:48,240
like private plugins or private project

00:01:46,200 --> 00:01:52,820
for example premium plugins or premium

00:01:48,240 --> 00:01:52,820
themes it's a trap

00:01:52,890 --> 00:01:57,840
before we start I want to quickly

00:01:55,750 --> 00:02:00,160
explain the terminology a little bit

00:01:57,840 --> 00:02:03,130
like to terms you will heal them more

00:02:00,160 --> 00:02:05,380
here most often in this talk first one

00:02:03,130 --> 00:02:08,619
is internationalization super long word

00:02:05,380 --> 00:02:10,990
so we usually we refer to it as I 18 n

00:02:08,619 --> 00:02:13,120
where 18 is like the number of letters

00:02:10,990 --> 00:02:16,270
missing in the middle so this is

00:02:13,120 --> 00:02:19,810
basically the process of making your

00:02:16,270 --> 00:02:21,760
project translatable so this way your

00:02:19,810 --> 00:02:23,620
software can work in other languages and

00:02:21,760 --> 00:02:26,890
not just English like can be Spanish or

00:02:23,620 --> 00:02:30,370
Chinese or German but we don't say

00:02:26,890 --> 00:02:31,720
translation actually because it's not

00:02:30,370 --> 00:02:33,190
just about written words that we

00:02:31,720 --> 00:02:36,940
translate it's also about things like

00:02:33,190 --> 00:02:38,470
symbols and units state formats whether

00:02:36,940 --> 00:02:40,660
you drive on the left or right side of

00:02:38,470 --> 00:02:43,960
the road so this process is called

00:02:40,660 --> 00:02:46,780
localization because like you have to

00:02:43,960 --> 00:02:49,840
adapt to the local look and feel in

00:02:46,780 --> 00:02:55,360
other words it's like translation but it

00:02:49,840 --> 00:02:57,910
has like a cultural twist to it and also

00:02:55,360 --> 00:02:59,739
if you aren't dead experienced with

00:02:57,910 --> 00:03:01,750
these topics I encourage you to check

00:02:59,739 --> 00:03:03,910
out slides in the previous talk of mine

00:03:01,750 --> 00:03:07,600
it's called internationalization done

00:03:03,910 --> 00:03:11,410
right and it explains a lot like lots of

00:03:07,600 --> 00:03:14,760
common pitfalls and best practices when

00:03:11,410 --> 00:03:14,760
dealing with internationalization

00:03:15,660 --> 00:03:20,709
alright so with this settled I want to

00:03:18,940 --> 00:03:22,540
explore a bit of web presence history in

00:03:20,709 --> 00:03:24,820
this area Weber's has been

00:03:22,540 --> 00:03:28,690
internationalized for many years now

00:03:24,820 --> 00:03:31,690
over 50% of WordPress websites are non

00:03:28,690 --> 00:03:34,810
English or non American English so this

00:03:31,690 --> 00:03:38,380
is really big thing for the project and

00:03:34,810 --> 00:03:40,930
if you want to your work if you want

00:03:38,380 --> 00:03:43,030
your software to be usable around the

00:03:40,930 --> 00:03:45,580
globe it's important to take other

00:03:43,030 --> 00:03:48,489
languages into account just count like

00:03:45,580 --> 00:03:50,260
leave it English and like that's it so

00:03:48,489 --> 00:03:52,600
internationalization was crucial for

00:03:50,260 --> 00:03:55,209
WordPress as a project project and as a

00:03:52,600 --> 00:03:57,220
community because nowadays it's used all

00:03:55,209 --> 00:04:00,640
over the world in countries where

00:03:57,220 --> 00:04:02,260
English is not the main language so as

00:04:00,640 --> 00:04:05,710
soon as WordPress added support for that

00:04:02,260 --> 00:04:07,330
it was quickly translated into German

00:04:05,710 --> 00:04:09,280
and he's in many more languages I think

00:04:07,330 --> 00:04:11,980
the Japanese guys even translated like

00:04:09,280 --> 00:04:16,840
source code comments into Japanese like

00:04:11,980 --> 00:04:19,450
crazy one big accelerator for this

00:04:16,840 --> 00:04:21,610
global adoption was the translation

00:04:19,450 --> 00:04:24,730
platform that was made available at

00:04:21,610 --> 00:04:26,980
translated wordpress.org this platform

00:04:24,730 --> 00:04:29,200
allows thousands of people to fully

00:04:26,980 --> 00:04:31,480
localize their projects so it's not just

00:04:29,200 --> 00:04:33,370
for WordPress itself but also all the

00:04:31,480 --> 00:04:35,950
plugins and themes available and works

00:04:33,370 --> 00:04:38,770
at org and even the WordPress mobile

00:04:35,950 --> 00:04:43,180
apps there's like thousands of people

00:04:38,770 --> 00:04:45,130
every day translating projects there the

00:04:43,180 --> 00:04:48,190
site is built on an open-source

00:04:45,130 --> 00:04:49,960
WordPress plug-in called Glock press so

00:04:48,190 --> 00:04:52,080
glove press allows setting up multiple

00:04:49,960 --> 00:04:55,930
projects and translating them to almost

00:04:52,080 --> 00:04:57,940
180 different locales and a local is not

00:04:55,930 --> 00:05:00,550
just a language but is like also a

00:04:57,940 --> 00:05:02,860
language with variants for example in

00:05:00,550 --> 00:05:05,290
German we have like a formal German

00:05:02,860 --> 00:05:08,110
variant and the informal German like

00:05:05,290 --> 00:05:09,580
lots of different stuff so wordpress.org

00:05:08,110 --> 00:05:11,920
built quite a community around this

00:05:09,580 --> 00:05:13,570
translation platform but the good thing

00:05:11,920 --> 00:05:16,150
is because it's built on this

00:05:13,570 --> 00:05:20,190
open-source plug-in everyone can run

00:05:16,150 --> 00:05:24,070
their own translation platform actually

00:05:20,190 --> 00:05:26,860
if you know the free poedit translation

00:05:24,070 --> 00:05:29,110
editor so Claude press is basically like

00:05:26,860 --> 00:05:31,540
poedit just in a browser and with

00:05:29,110 --> 00:05:37,270
multiple people plus it's open source

00:05:31,540 --> 00:05:40,150
and free and everything so a direct

00:05:37,270 --> 00:05:43,920
benefit of this translation platform was

00:05:40,150 --> 00:05:43,920
the introduction of language packs

00:05:44,010 --> 00:05:48,880
language packs allow you and WordPress

00:05:47,530 --> 00:05:52,870
or org to ship translations

00:05:48,880 --> 00:05:55,510
independently of the software this means

00:05:52,870 --> 00:05:57,310
three things first you don't have to

00:05:55,510 --> 00:06:00,100
bundle the translations with your

00:05:57,310 --> 00:06:02,220
plug-in with your source code and when

00:06:00,100 --> 00:06:04,480
you install a plug-in WordPress

00:06:02,220 --> 00:06:07,000
automatically downloads the translations

00:06:04,480 --> 00:06:09,010
from wordpress.org and as soon as new

00:06:07,000 --> 00:06:11,290
translations are available it will

00:06:09,010 --> 00:06:13,240
automatically update these translations

00:06:11,290 --> 00:06:15,970
without you having to update the plugin

00:06:13,240 --> 00:06:17,680
so if there's like a spelling mistake in

00:06:15,970 --> 00:06:19,030
the translation you can just fix it on

00:06:17,680 --> 00:06:21,970
wordpress.org

00:06:19,030 --> 00:06:27,670
and you can update your website without

00:06:21,970 --> 00:06:29,800
touching the plugin all right now let's

00:06:27,670 --> 00:06:32,020
have a look at how all these things from

00:06:29,800 --> 00:06:34,780
the translation platform how they come

00:06:32,020 --> 00:06:39,880
together for the benefit of wordpress

00:06:34,780 --> 00:06:42,910
plugin developers we start by building a

00:06:39,880 --> 00:06:44,730
new plugin and for this example assume

00:06:42,910 --> 00:06:47,890
that we want to publish this plug-in on

00:06:44,730 --> 00:06:52,810
wordpress.org just like jetpack Yoast

00:06:47,890 --> 00:06:55,600
SEO on thousands of others the most

00:06:52,810 --> 00:06:59,380
basic WordPress plugin consists of a

00:06:55,600 --> 00:07:00,669
single PHP file and in this PHP file we

00:06:59,380 --> 00:07:03,190
can use all the internationalisation

00:07:00,669 --> 00:07:06,460
functionality WordPress provides to make

00:07:03,190 --> 00:07:08,490
our plug-in translatable and if we want

00:07:06,460 --> 00:07:11,650
to distribute a plug-in on website org

00:07:08,490 --> 00:07:14,380
we also have to add a readme file that

00:07:11,650 --> 00:07:17,560
explains how the plug-in works kind of

00:07:14,380 --> 00:07:20,500
makes sense so in the end the plugins

00:07:17,560 --> 00:07:22,780
folder structure looks like this we have

00:07:20,500 --> 00:07:25,270
our folder called my plugin which

00:07:22,780 --> 00:07:31,990
contains the main plugin file called my

00:07:25,270 --> 00:07:34,930
plugin dot PHP and a readme file and the

00:07:31,990 --> 00:07:39,070
most simple plugin file will look like

00:07:34,930 --> 00:07:40,960
this it has some metadata in it too you

00:07:39,070 --> 00:07:44,169
know the plug-in name the script and

00:07:40,960 --> 00:07:46,000
version the after and at the bottom for

00:07:44,169 --> 00:07:49,990
a sake of this example we had a single

00:07:46,000 --> 00:07:51,610
string that we want to translate so this

00:07:49,990 --> 00:07:54,550
is just one of the many functions we can

00:07:51,610 --> 00:07:56,680
use to translate our plugin so the first

00:07:54,550 --> 00:07:59,110
part of this function call is the text

00:07:56,680 --> 00:08:02,590
we want to translate and the second one

00:07:59,110 --> 00:08:04,900
is called the text domain so this is the

00:08:02,590 --> 00:08:06,970
plugins text domain which is also called

00:08:04,900 --> 00:08:09,669
my plugin and it's the same as the

00:08:06,970 --> 00:08:12,010
folder name from before so this is an

00:08:09,669 --> 00:08:16,960
important detail these two things have

00:08:12,010 --> 00:08:19,570
to match another thing is that in our

00:08:16,960 --> 00:08:22,810
readme file we define that our plugin

00:08:19,570 --> 00:08:24,460
requires at least WordPress 4.6 you

00:08:22,810 --> 00:08:26,500
don't have to worry about that much but

00:08:24,460 --> 00:08:28,810
this is the version where we added some

00:08:26,500 --> 00:08:31,089
major improvements to how things work in

00:08:28,810 --> 00:08:33,979
WordPress and how language packs are low

00:08:31,089 --> 00:08:37,010
plus I hope you're running for WordPress

00:08:33,979 --> 00:08:42,380
4.9 anyway like nothing older so this

00:08:37,010 --> 00:08:43,640
shouldn't be a problem now we have our

00:08:42,380 --> 00:08:47,630
plugin and we can submit it to

00:08:43,640 --> 00:08:49,910
wordpress.org our planet was called my

00:08:47,630 --> 00:08:51,890
plugin so as soon as it gets approved

00:08:49,910 --> 00:08:54,589
and we upload it it will be available

00:08:51,890 --> 00:08:56,810
under the same name as our folder name

00:08:54,589 --> 00:09:00,709
and text domain so in this case like

00:08:56,810 --> 00:09:06,170
wordpress.org slash plugins slash my -

00:09:00,709 --> 00:09:08,149
plugin and when we've done this we build

00:09:06,170 --> 00:09:08,660
our plugin we published it on website

00:09:08,149 --> 00:09:11,540
org

00:09:08,660 --> 00:09:13,399
it means it's now also available for

00:09:11,540 --> 00:09:16,310
translation under this translation

00:09:13,399 --> 00:09:17,510
platform at translated works org so we

00:09:16,310 --> 00:09:19,459
didn't have to do anything for it

00:09:17,510 --> 00:09:22,220
everything is created automatically and

00:09:19,459 --> 00:09:23,839
now users from all over the world can

00:09:22,220 --> 00:09:28,220
translate your plugin in their own

00:09:23,839 --> 00:09:31,010
language and so now as soon as you

00:09:28,220 --> 00:09:33,920
install the plugin via the wordpress

00:09:31,010 --> 00:09:36,230
admin panel you can install a plug-in

00:09:33,920 --> 00:09:41,510
and WordPress will automatically install

00:09:36,230 --> 00:09:42,980
the language for it the translation so

00:09:41,510 --> 00:09:46,970
there's really nothing else we have to

00:09:42,980 --> 00:09:49,279
do and you can easily verify this whole

00:09:46,970 --> 00:09:53,000
process by checking the wp-content

00:09:49,279 --> 00:09:54,709
folder of your wordpress site so when

00:09:53,000 --> 00:09:57,260
you install the plug-in and wordpress

00:09:54,709 --> 00:09:59,450
install the translations files you will

00:09:57,260 --> 00:10:01,490
see two new files in that folder with

00:09:59,450 --> 00:10:05,180
your text domain or your plug-in name

00:10:01,490 --> 00:10:07,400
and locale so in this case and install

00:10:05,180 --> 00:10:12,350
the German translation and it's inside

00:10:07,400 --> 00:10:15,079
WP content slash languages so there's

00:10:12,350 --> 00:10:16,670
only a few steps we really have to

00:10:15,079 --> 00:10:21,110
follow here first we develop a new

00:10:16,670 --> 00:10:23,060
plug-in with the available cat text

00:10:21,110 --> 00:10:25,220
function that WordPress provides we

00:10:23,060 --> 00:10:29,860
submit it to work visit org we translate

00:10:25,220 --> 00:10:29,860
it install the plug-in boom done

00:10:30,990 --> 00:10:36,430
things are a bit more complicated when

00:10:34,030 --> 00:10:38,290
you develop a private plugin or let's

00:10:36,430 --> 00:10:40,960
say a premium plug-in that you don't

00:10:38,290 --> 00:10:43,270
want to publish anywhere or at least not

00:10:40,960 --> 00:10:45,970
on wordpress.org so maybe it's a

00:10:43,270 --> 00:10:49,900
personal side a client or something you

00:10:45,970 --> 00:10:52,680
want to sell first steps are obviously

00:10:49,900 --> 00:10:55,930
identical we have to write a plug-in but

00:10:52,680 --> 00:10:59,170
after that you're kind of left on our

00:10:55,930 --> 00:11:02,260
own for a bit the most tricky part is

00:10:59,170 --> 00:11:04,660
called string extraction this is the

00:11:02,260 --> 00:11:06,190
part where we need to find all the texts

00:11:04,660 --> 00:11:08,710
in our plugin that they're actually

00:11:06,190 --> 00:11:12,180
translatable so that we can translate

00:11:08,710 --> 00:11:15,280
them later on so for example taking this

00:11:12,180 --> 00:11:17,890
may the data from before all the parts

00:11:15,280 --> 00:11:20,200
that are marked bold here are actually

00:11:17,890 --> 00:11:22,330
translatable in WordPress so that means

00:11:20,200 --> 00:11:24,670
we need to extract these strings so that

00:11:22,330 --> 00:11:26,590
we can use a translation platform like

00:11:24,670 --> 00:11:30,280
cloud press or another software to

00:11:26,590 --> 00:11:32,260
translate them there are lots of tools

00:11:30,280 --> 00:11:34,570
out there that help you with the string

00:11:32,260 --> 00:11:37,540
extraction the oldest one is make pot

00:11:34,570 --> 00:11:39,340
there's like grunt tools and as

00:11:37,540 --> 00:11:43,750
mentioned earlier there's also poedit

00:11:39,340 --> 00:11:46,650
but which is kind of integrating very

00:11:43,750 --> 00:11:49,600
well with wordpress and wordpress plugin

00:11:46,650 --> 00:11:50,680
so these are usually the tools you use

00:11:49,600 --> 00:11:54,160
to make this happen

00:11:50,680 --> 00:11:56,850
and when you run the string extraction

00:11:54,160 --> 00:12:00,640
you end up with a so-called p OT file

00:11:56,850 --> 00:12:02,860
and this p OT file contains all the

00:12:00,640 --> 00:12:04,990
strings that we can now translate it

00:12:02,860 --> 00:12:06,910
doesn't contain any translations and

00:12:04,990 --> 00:12:09,760
since we're not using the word or

00:12:06,910 --> 00:12:12,010
translation platform we have to save

00:12:09,760 --> 00:12:17,860
this file inside our plugin folder and

00:12:12,010 --> 00:12:20,500
not wp-content so since we have to use

00:12:17,860 --> 00:12:22,360
this pod file for the translation we

00:12:20,500 --> 00:12:24,040
need to some children can read these

00:12:22,360 --> 00:12:27,730
files and help us translate all the

00:12:24,040 --> 00:12:30,130
strings again this problem is going to

00:12:27,730 --> 00:12:33,580
be poetic again but there are also tools

00:12:30,130 --> 00:12:36,130
especially websites or as I mentioned

00:12:33,580 --> 00:12:39,510
before cloth press which you would have

00:12:36,130 --> 00:12:39,510
to install on your own server

00:12:39,580 --> 00:12:44,589
so without going too much into too much

00:12:41,860 --> 00:12:47,310
detail at the end we will end up using

00:12:44,589 --> 00:12:49,450
the same language as far as as before

00:12:47,310 --> 00:12:51,940
they're just now in the plugin folder

00:12:49,450 --> 00:12:54,850
plus we have this so-called PMT file

00:12:51,940 --> 00:12:56,860
which contains all the translatable

00:12:54,850 --> 00:12:59,680
strings so when you want to add a new

00:12:56,860 --> 00:13:02,350
translation you take this P ot file at

00:12:59,680 --> 00:13:06,850
the translations and save them as Bo and

00:13:02,350 --> 00:13:10,120
mo files now we just have to load these

00:13:06,850 --> 00:13:11,740
translations because they are not these

00:13:10,120 --> 00:13:12,130
files aren't any good when we don't use

00:13:11,740 --> 00:13:15,459
them

00:13:12,130 --> 00:13:17,890
so in our plugin we can use a function

00:13:15,459 --> 00:13:19,269
called low to plug-in text domain and it

00:13:17,890 --> 00:13:22,000
basically loads all the translations

00:13:19,269 --> 00:13:24,370
from our folder into memory and whenever

00:13:22,000 --> 00:13:26,560
WordPress finds a string from our plugin

00:13:24,370 --> 00:13:31,089
it can fetch the translation from this

00:13:26,560 --> 00:13:33,279
memory so in summary we have to do lots

00:13:31,089 --> 00:13:35,589
of manual steps when developing a

00:13:33,279 --> 00:13:37,870
private plugin not only do you have to

00:13:35,589 --> 00:13:39,459
do the string extraction ourselves we

00:13:37,870 --> 00:13:42,940
also don't benefit from the works that

00:13:39,459 --> 00:13:45,250
or translator community also we have to

00:13:42,940 --> 00:13:47,260
manually load translations in our plugin

00:13:45,250 --> 00:13:49,320
and we can't benefit from the more

00:13:47,260 --> 00:13:52,029
intelligent option that WordPress users

00:13:49,320 --> 00:13:53,440
for public plugins where it only loads

00:13:52,029 --> 00:14:00,760
translations when they are actually

00:13:53,440 --> 00:14:02,260
needed so if you compare the two options

00:14:00,760 --> 00:14:04,390
side by side we can see that WordPress

00:14:02,260 --> 00:14:07,510
is able to do lots of things for us like

00:14:04,390 --> 00:14:09,100
it takes on overall the have lived in

00:14:07,510 --> 00:14:11,950
traffic for us when we publish our

00:14:09,100 --> 00:14:14,110
plug-in on website org for private

00:14:11,950 --> 00:14:16,930
plugins the whole process is rather

00:14:14,110 --> 00:14:19,839
complicated we have to handle the string

00:14:16,930 --> 00:14:21,190
extraction translation parts and we

00:14:19,839 --> 00:14:24,640
don't have to worry about that on worst

00:14:21,190 --> 00:14:26,620
at org and in contrary even gives us

00:14:24,640 --> 00:14:28,949
access to a large community of

00:14:26,620 --> 00:14:32,290
translators that can localize our plugin

00:14:28,949 --> 00:14:34,990
and additionally we benefit from the so

00:14:32,290 --> 00:14:36,940
called just in time translation loading

00:14:34,990 --> 00:14:39,610
I just mentioned before so WordPress

00:14:36,940 --> 00:14:41,350
will only load the translations when

00:14:39,610 --> 00:14:44,190
needed and that doesn't happen for

00:14:41,350 --> 00:14:44,190
private plugins

00:14:44,480 --> 00:14:51,790
at some point I are weird our company

00:14:48,079 --> 00:14:54,459
thought that can't be it

00:14:51,790 --> 00:14:57,050
that's not what we want for our plugins

00:14:54,459 --> 00:14:58,220
having so many manual steps it's just

00:14:57,050 --> 00:15:00,019
not sustainable

00:14:58,220 --> 00:15:03,260
when you develop dozens of private

00:15:00,019 --> 00:15:05,209
plugins and themes for clients and in

00:15:03,260 --> 00:15:06,079
order to solve this problem we built a

00:15:05,209 --> 00:15:08,750
solution called

00:15:06,079 --> 00:15:10,699
try tutorial which is Italian for

00:15:08,750 --> 00:15:14,079
translator I don't know why we picked

00:15:10,699 --> 00:15:18,440
Italian it just sound good

00:15:14,079 --> 00:15:21,860
so essentially try to Tory is workers of

00:15:18,440 --> 00:15:24,139
org for everyone and it allows us to

00:15:21,860 --> 00:15:26,839
have to say benefits for private plugins

00:15:24,139 --> 00:15:29,120
as for public ones house it on Webster

00:15:26,839 --> 00:15:32,600
door so to be a bit more precise it's

00:15:29,120 --> 00:15:36,050
like translated wordpress.org but for

00:15:32,600 --> 00:15:39,050
own private projects so having this

00:15:36,050 --> 00:15:40,790
platform allows us in our client to

00:15:39,050 --> 00:15:43,370
translate all the plugins and themes

00:15:40,790 --> 00:15:46,579
using the same web interface as some

00:15:43,370 --> 00:15:48,470
workers at org of course it's built

00:15:46,579 --> 00:15:50,870
using Glock press because it's a

00:15:48,470 --> 00:15:53,060
wordpress plugin and and it's free and

00:15:50,870 --> 00:15:55,310
open-source and it's the same plug-in

00:15:53,060 --> 00:16:01,250
the powers to translate that word rest

00:15:55,310 --> 00:16:04,250
org what you see here is a super simple

00:16:01,250 --> 00:16:04,699
bare-bones glob press install looks very

00:16:04,250 --> 00:16:07,010
ugly

00:16:04,699 --> 00:16:10,070
I know unfortunately that's like the

00:16:07,010 --> 00:16:11,959
default styling in house it doesn't look

00:16:10,070 --> 00:16:14,870
as pretty as works at org but it gets

00:16:11,959 --> 00:16:17,089
the job done and all the credit or

00:16:14,870 --> 00:16:19,699
specific things I will talk about now

00:16:17,089 --> 00:16:21,920
they aren't visible here because all

00:16:19,699 --> 00:16:26,839
these things they happen like under the

00:16:21,920 --> 00:16:28,910
hood so using block press in our custom

00:16:26,839 --> 00:16:31,459
tutorial plugin we can easily translate

00:16:28,910 --> 00:16:34,250
our projects into any language we want

00:16:31,459 --> 00:16:37,399
and since it's powered by WordPress we

00:16:34,250 --> 00:16:39,440
can even create the user accounts so for

00:16:37,399 --> 00:16:43,870
example client a can only see the

00:16:39,440 --> 00:16:43,870
translations for project a and so on

00:16:44,529 --> 00:16:50,360
with traget or e we try to really make

00:16:48,110 --> 00:16:52,279
things similar as with wordpress.org and

00:16:50,360 --> 00:16:54,860
we try to automate things as much as

00:16:52,279 --> 00:16:58,310
possible and right now it works like

00:16:54,860 --> 00:17:02,329
this so let's say you've built a plug

00:16:58,310 --> 00:17:05,870
and the source code is hosted on github

00:17:02,329 --> 00:17:08,510
or gitlab or bitbucket just somewhere

00:17:05,870 --> 00:17:10,730
and whenever you push changes to that

00:17:08,510 --> 00:17:12,260
repository when you make a change your

00:17:10,730 --> 00:17:15,079
plugin

00:17:12,260 --> 00:17:17,929
github sends a notification to tread

00:17:15,079 --> 00:17:20,030
Ettore and try the Tauri then that's all

00:17:17,929 --> 00:17:23,030
the string extraction stuff and parse

00:17:20,030 --> 00:17:25,490
these strings into la presse and after

00:17:23,030 --> 00:17:30,280
that you can just go to the translation

00:17:25,490 --> 00:17:32,360
platform make all the translations and

00:17:30,280 --> 00:17:34,130
territory will automatically create

00:17:32,360 --> 00:17:37,250
these language packs that WordPress

00:17:34,130 --> 00:17:42,440
needs and users so all the now all you

00:17:37,250 --> 00:17:45,289
need is install a specific plugin on

00:17:42,440 --> 00:17:47,179
your WordPress site or like configure

00:17:45,289 --> 00:17:48,890
your plugin to basically tell WordPress

00:17:47,179 --> 00:17:51,799
hey

00:17:48,890 --> 00:17:54,169
for this particular plug-in don't look

00:17:51,799 --> 00:17:57,530
for translations on web site org we have

00:17:54,169 --> 00:17:59,840
our own platform here and it means your

00:17:57,530 --> 00:18:02,270
site's translations for this plugins are

00:17:59,840 --> 00:18:08,030
always up to date just like if it was

00:18:02,270 --> 00:18:11,149
and public plugin and for a string

00:18:08,030 --> 00:18:13,460
extraction part we had to come up with

00:18:11,149 --> 00:18:16,280
something new that is more reliable than

00:18:13,460 --> 00:18:17,780
what is being done and works at org we

00:18:16,280 --> 00:18:20,530
found all the existing solutions to be

00:18:17,780 --> 00:18:23,210
very buggy and plus we couldn't use

00:18:20,530 --> 00:18:26,120
poedit because poedit doesn't run on a

00:18:23,210 --> 00:18:28,820
server and doesn't work automatically so

00:18:26,120 --> 00:18:32,120
that's why we decided to build our own

00:18:28,820 --> 00:18:34,039
solution using WP CLI which is the

00:18:32,120 --> 00:18:38,570
official command line interface for

00:18:34,039 --> 00:18:40,549
WordPress so this WP CLI command makes

00:18:38,570 --> 00:18:42,860
it easier than ever to extract strings

00:18:40,549 --> 00:18:44,890
from WordPress projects all you have to

00:18:42,860 --> 00:18:47,419
do is point it to a directory and

00:18:44,890 --> 00:18:51,230
optionally define the target file name

00:18:47,419 --> 00:18:54,530
and maybe some other options and it

00:18:51,230 --> 00:18:56,179
figures out everything else so this is

00:18:54,530 --> 00:18:59,149
the command we use under hood and tread

00:18:56,179 --> 00:19:01,010
Ettore and of course since this come on

00:18:59,149 --> 00:19:04,220
it's not only useful for us but for

00:19:01,010 --> 00:19:07,370
everyone else we open sourced everything

00:19:04,220 --> 00:19:09,820
and it's available on github and it's

00:19:07,370 --> 00:19:13,029
actually like an officially bundled come

00:19:09,820 --> 00:19:16,330
with WP CLI so if you're using the

00:19:13,029 --> 00:19:20,129
latest version of WP CLI you get all the

00:19:16,330 --> 00:19:20,129
benefits from this command it just works

00:19:20,580 --> 00:19:26,919
so after trattoria runs WP CLI and

00:19:24,659 --> 00:19:29,289
imports the strings into plot press it

00:19:26,919 --> 00:19:32,379
can notify you on slack about the

00:19:29,289 --> 00:19:34,419
changes it made so this way you always

00:19:32,379 --> 00:19:41,109
know what the current status is and when

00:19:34,419 --> 00:19:42,909
language packs are built and so the code

00:19:41,109 --> 00:19:44,229
I mentioned earlier to tell WordPress to

00:19:42,909 --> 00:19:47,590
look for the translations from your

00:19:44,229 --> 00:19:49,389
platform as simple as that so we built a

00:19:47,590 --> 00:19:53,710
little helpful script helper script

00:19:49,389 --> 00:19:56,289
called predatory registry so to use it

00:19:53,710 --> 00:19:59,169
you just specify your plugins lock which

00:19:56,289 --> 00:20:01,659
is like my dash plug-in again and point

00:19:59,169 --> 00:20:06,970
it to the API of your translation

00:20:01,659 --> 00:20:10,239
platform we try to do like a simple

00:20:06,970 --> 00:20:12,039
visual presentation for this so all our

00:20:10,239 --> 00:20:13,840
client websites now download

00:20:12,039 --> 00:20:16,479
translations from either word present

00:20:13,840 --> 00:20:18,940
org or our own platform depending on

00:20:16,479 --> 00:20:22,570
whether it's something how was it on vs.

00:20:18,940 --> 00:20:24,820
org or developed in private and

00:20:22,570 --> 00:20:27,479
transitory allows us to collaborate

00:20:24,820 --> 00:20:29,859
under translations and update them

00:20:27,479 --> 00:20:34,090
without interrupting the development

00:20:29,859 --> 00:20:36,639
cycle of our plugins and themes compared

00:20:34,090 --> 00:20:39,700
side-by-side again with this new

00:20:36,639 --> 00:20:43,059
approach try to torii essentially does

00:20:39,700 --> 00:20:45,599
for the wordpress.org does we never have

00:20:43,059 --> 00:20:50,710
to do all the manual stuff ever again

00:20:45,599 --> 00:20:52,440
everything as automated as possible and

00:20:50,710 --> 00:20:56,649
if you want to learn more about this

00:20:52,440 --> 00:20:59,409
workflow I even brought up yeah quite a

00:20:56,649 --> 00:21:03,159
large blog post about that that goes a

00:20:59,409 --> 00:21:05,200
bit into more detail and I also like to

00:21:03,159 --> 00:21:07,629
point out that everything we built to

00:21:05,200 --> 00:21:10,450
make this happen is open source freely

00:21:07,629 --> 00:21:11,769
available and get up this way you can

00:21:10,450 --> 00:21:16,599
run your own translation platform

00:21:11,769 --> 00:21:19,929
powered by WordPress here are even the

00:21:16,599 --> 00:21:22,890
links to the repositories feel free to

00:21:19,929 --> 00:21:25,080
check them out ask questions for kit

00:21:22,890 --> 00:21:26,940
maybe open issues but please don't I

00:21:25,080 --> 00:21:27,990
don't want to work no just kidding

00:21:26,940 --> 00:21:30,809
there's plenty of documentation

00:21:27,990 --> 00:21:32,909
available about how to set everything up

00:21:30,809 --> 00:21:37,279
and there's also a new major release

00:21:32,909 --> 00:21:37,279
coming out soon with even more features

00:21:38,510 --> 00:21:43,919
what I have shown you so far is just the

00:21:41,820 --> 00:21:46,529
current state of the WordPress

00:21:43,919 --> 00:21:49,799
internalization universe and what we did

00:21:46,529 --> 00:21:51,210
to optimize the workflow there are still

00:21:49,799 --> 00:21:55,409
many things that we can and should

00:21:51,210 --> 00:21:57,960
change so for one we obviously want to

00:21:55,409 --> 00:22:00,539
make treasurer Tori better the plugin

00:21:57,960 --> 00:22:03,899
isn't yet fully finished but it already

00:22:00,539 --> 00:22:05,850
works for us very well in the next step

00:22:03,899 --> 00:22:09,779
is to make it easier for you to use as

00:22:05,850 --> 00:22:12,750
well whenever possible we try to

00:22:09,779 --> 00:22:15,240
contribute back to the community and so

00:22:12,750 --> 00:22:17,250
all the things we try to give back in

00:22:15,240 --> 00:22:20,220
some way so for example we're currently

00:22:17,250 --> 00:22:23,010
working on bringing the WP CLI command

00:22:20,220 --> 00:22:25,769
to Episode org so that the translation

00:22:23,010 --> 00:22:31,350
platform uses the same tool that we

00:22:25,769 --> 00:22:34,940
built also this wouldn't be a wordpress

00:22:31,350 --> 00:22:38,370
talk without any mention of Gutenberg

00:22:34,940 --> 00:22:40,019
especially now that is going to be

00:22:38,370 --> 00:22:42,840
released soon so Gutenberg is the new

00:22:40,019 --> 00:22:44,250
editor experience for WordPress and I

00:22:42,840 --> 00:22:48,600
think the release plan for end of

00:22:44,250 --> 00:22:50,909
November and one thing about this editor

00:22:48,600 --> 00:22:52,950
is that it's almost entirely written in

00:22:50,909 --> 00:22:56,399
JavaScript which creates new challenges

00:22:52,950 --> 00:22:58,200
when it comes to internalization because

00:22:56,399 --> 00:23:00,210
what I've shown you before it's just PHP

00:22:58,200 --> 00:23:04,200
code but with JavaScript like everything

00:23:00,210 --> 00:23:06,120
is a mess and so work is currently being

00:23:04,200 --> 00:23:07,830
done to make sure all the texts in

00:23:06,120 --> 00:23:10,409
Gutenberg can be properly translated

00:23:07,830 --> 00:23:13,380
because right now you can translate them

00:23:10,409 --> 00:23:15,419
on works at org so they're going to be

00:23:13,380 --> 00:23:18,360
lots of changes in WordPress 5.0 all

00:23:15,419 --> 00:23:20,419
they will affect anyone doing

00:23:18,360 --> 00:23:23,639
internalization and localization work

00:23:20,419 --> 00:23:26,149
for more modern WordPress projects using

00:23:23,639 --> 00:23:26,149
javascript

00:23:28,640 --> 00:23:33,300
so I know there was a lot of information

00:23:31,500 --> 00:23:35,390
process

00:23:33,300 --> 00:23:37,890
I hope you've got better of an overview

00:23:35,390 --> 00:23:41,640
though of how things work under the hood

00:23:37,890 --> 00:23:43,410
with WordPress and works at org I don't

00:23:41,640 --> 00:23:45,990
think we have any time for questions

00:23:43,410 --> 00:23:48,090
right now but feel free to ask any

00:23:45,990 --> 00:23:49,980
questions later on you can find me

00:23:48,090 --> 00:23:51,840
outside in the hallway or maybe

00:23:49,980 --> 00:23:55,560
downstairs where there's apparently beer

00:23:51,840 --> 00:23:57,930
right yeah also if you're coming to work

00:23:55,560 --> 00:24:00,510
and Capetown doing the workshop there

00:23:57,930 --> 00:24:01,950
about this topic where you can learn

00:24:00,510 --> 00:24:06,120
about this in a more like hands-on

00:24:01,950 --> 00:24:08,410
approach so for now I'm done with my

00:24:06,120 --> 00:24:15,229
presentation thank you very much

00:24:08,410 --> 00:24:15,229

YouTube URL: https://www.youtube.com/watch?v=oi5RqsQw2QQ


