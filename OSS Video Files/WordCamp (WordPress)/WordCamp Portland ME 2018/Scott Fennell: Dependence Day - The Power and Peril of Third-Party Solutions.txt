Title: Scott Fennell: Dependence Day - The Power and Peril of Third-Party Solutions
Publication date: 2019-04-13
Playlist: WordCamp Portland ME 2018
Description: 
	“Why don’t we just use this plugin?” That’s a question I started hearing a lot in the heady days of the 2000s, when open-source CMSes were becoming really popular. We asked it optimistically, full of hope about the myriad solutions only a download away. As the years passed, we gained trustworthy libraries and powerful communities, but the graveyard of crufty code and abandoned services grew deep. Many solutions were easy to install, but difficult to debug. Some providers were eager to sell, but loath to support.
Years later, we’re still asking that same question—only now we’re less optimistic and even more dependent, and I’m scared to engage with anyone smart enough to build something I can’t. The emerging challenge for today’s dev shop is knowing how to take control of third-party relationships—and when to avoid them. I’ll show you my approach, which is to ask a different set of questions entirely.

WPTV link: https://wordpress.tv/2019/02/02/scott-fennell-dependence-day-the-power-and-peril-of-third-party-solutions/
Captions: 
	00:00:04,220 --> 00:00:20,820
why don't we just use this plugin it's a

00:00:18,840 --> 00:00:24,840
fair question nothing wrong with asking

00:00:20,820 --> 00:00:28,259
it I've posed this question to my fellow

00:00:24,840 --> 00:00:31,890
developers I've posed it to my managers

00:00:28,259 --> 00:00:37,010
I've posed it to my clients they have

00:00:31,890 --> 00:00:40,130
posed it to me people I don't even know

00:00:37,010 --> 00:00:42,840
have posed it to one another in

00:00:40,130 --> 00:00:52,370
reference to plugins I have written and

00:00:42,840 --> 00:00:55,500
released out into the wild why aliens

00:00:52,370 --> 00:00:59,310
well because this talk is about third

00:00:55,500 --> 00:01:01,320
party dependencies code and services and

00:00:59,310 --> 00:01:03,780
people that are not part of our

00:01:01,320 --> 00:01:07,830
organization they're foreign to us

00:01:03,780 --> 00:01:12,120
they're alien to us they possess

00:01:07,830 --> 00:01:15,540
superior technology to us they have the

00:01:12,120 --> 00:01:24,330
ability to abduct us and hold us hostage

00:01:15,540 --> 00:01:26,700
to their powers why retro I first became

00:01:24,330 --> 00:01:30,890
fascinated with this aspect of

00:01:26,700 --> 00:01:34,650
development five years ago in a meeting

00:01:30,890 --> 00:01:40,350
in which I embarrassed myself which I

00:01:34,650 --> 00:01:44,729
will describe to you shortly five years

00:01:40,350 --> 00:01:47,390
ago 2013 that's kind of retro for

00:01:44,729 --> 00:01:47,390
development time

00:01:52,520 --> 00:02:00,270
allow me to define some terms third

00:01:56,100 --> 00:02:03,780
party you are third party if you are a

00:02:00,270 --> 00:02:07,380
person and I do not compensate you for

00:02:03,780 --> 00:02:09,780
the bulk of your workload you are third

00:02:07,380 --> 00:02:14,160
party if you're a company or a service

00:02:09,780 --> 00:02:18,930
and I don't own it or control it you are

00:02:14,160 --> 00:02:21,720
third party if you are code and the

00:02:18,930 --> 00:02:27,270
people on my team don't understand every

00:02:21,720 --> 00:02:29,610
line of it something has changed since I

00:02:27,270 --> 00:02:32,580
started writing about this in 2013 is

00:02:29,610 --> 00:02:36,180
that the third party landscape has

00:02:32,580 --> 00:02:40,160
gotten a lot larger github has grown

00:02:36,180 --> 00:02:42,959
from 7 million to 28 million users

00:02:40,160 --> 00:02:48,300
WordPress core has gained market share

00:02:42,959 --> 00:02:51,360
from 17% to 32% now it's a fair question

00:02:48,300 --> 00:02:51,959
to this audience is WordPress core third

00:02:51,360 --> 00:02:55,260
party

00:02:51,959 --> 00:02:58,320
I don't know necessarily know the answer

00:02:55,260 --> 00:03:01,820
to that but in as much as it replaced no

00:02:58,320 --> 00:03:07,140
CMS websites or home-baked CMS websites

00:03:01,820 --> 00:03:10,170
that's considered third party another

00:03:07,140 --> 00:03:12,510
thing that's changed since 2013 is we

00:03:10,170 --> 00:03:19,220
now have access to the perfect acronym

00:03:12,510 --> 00:03:19,220
to describe what this talk is about FOMO

00:03:19,280 --> 00:03:29,910
fear of missing out my clients my

00:03:24,810 --> 00:03:35,070
co-workers my competitors they're at

00:03:29,910 --> 00:03:39,570
happy hour they're done because they

00:03:35,070 --> 00:03:43,380
downloaded the solution and I'm still

00:03:39,570 --> 00:03:47,820
I'm still in the lab debugging my custom

00:03:43,380 --> 00:03:52,519
code the idea of selling original work

00:03:47,820 --> 00:03:52,519
seems oddly old-fashioned

00:03:55,640 --> 00:04:03,490
so what's actually the problem with

00:03:59,090 --> 00:04:07,940
third party tools what could go wrong

00:04:03,490 --> 00:04:10,550
well there's three outcomes you could

00:04:07,940 --> 00:04:13,160
download something and it just doesn't

00:04:10,550 --> 00:04:16,910
work it's broken or it's not what you

00:04:13,160 --> 00:04:19,579
thought it was or it's it's just not the

00:04:16,910 --> 00:04:21,739
right fit for whatever reason that's

00:04:19,579 --> 00:04:25,820
okay it took you five seconds five

00:04:21,739 --> 00:04:28,100
minutes and you move on you could

00:04:25,820 --> 00:04:30,260
download something and it seems really

00:04:28,100 --> 00:04:32,840
good it seems perfect and it seems to

00:04:30,260 --> 00:04:35,419
work and your client seems to like it

00:04:32,840 --> 00:04:37,160
and their customers seem to like it

00:04:35,419 --> 00:04:41,330
because they're paying the client and

00:04:37,160 --> 00:04:45,860
the clients paying you and you wake up

00:04:41,330 --> 00:04:52,010
one day and it still works that's also

00:04:45,860 --> 00:04:57,230
fine the problem scenario is what I call

00:04:52,010 --> 00:05:01,520
the wily coyote scenario a third party

00:04:57,230 --> 00:05:04,940
tool is a bit like a platformer it's

00:05:01,520 --> 00:05:07,520
something you can easily step up on and

00:05:04,940 --> 00:05:13,850
gain a higher vantage point or like why

00:05:07,520 --> 00:05:15,740
the coyote step out on and after you've

00:05:13,850 --> 00:05:18,200
made that progress after your clients

00:05:15,740 --> 00:05:21,350
been paying you your customers their

00:05:18,200 --> 00:05:23,530
customers have been paying them one day

00:05:21,350 --> 00:05:26,600
you wake up and the platform goes away

00:05:23,530 --> 00:05:29,000
I'm like why the coyote you're falling

00:05:26,600 --> 00:05:34,630
down your client wants to know why the

00:05:29,000 --> 00:05:37,490
money ohmmeter is stopped you don't know

00:05:34,630 --> 00:05:40,580
because it's not your code it's not your

00:05:37,490 --> 00:05:43,610
service it's not your people it helped

00:05:40,580 --> 00:05:45,919
you get here but it's not helping you

00:05:43,610 --> 00:05:51,950
now and you're not sure when it's going

00:05:45,919 --> 00:05:55,430
to something has changed since 2013 is

00:05:51,950 --> 00:05:59,080
that to my eye the wordpress.org plug-in

00:05:55,430 --> 00:06:02,710
repo is serving up more stable solutions

00:05:59,080 --> 00:06:05,840
than it was five years ago

00:06:02,710 --> 00:06:07,940
but our reliance on third-party tools

00:06:05,840 --> 00:06:12,950
has increased in the last five

00:06:07,940 --> 00:06:16,310
years so the net frequency of the wily

00:06:12,950 --> 00:06:21,620
coyote scenario is still high enough to

00:06:16,310 --> 00:06:26,540
make this worth talking about npm

00:06:21,620 --> 00:06:32,800
install anyone thank you whew chuckles

00:06:26,540 --> 00:06:36,880
there this talk is a tale of two plugins

00:06:32,800 --> 00:06:39,410
one plug-in will decide to do in-house

00:06:36,880 --> 00:06:47,380
the other plug-in will decide to do

00:06:39,410 --> 00:06:51,950
third-party no kidding there I was in

00:06:47,380 --> 00:06:55,940
2013 in a meeting we're reviewing

00:06:51,950 --> 00:07:00,350
tickets reviewing feature requests we

00:06:55,940 --> 00:07:03,170
get a request ticket a and I announced

00:07:00,350 --> 00:07:05,930
to the group we should do this ourselves

00:07:03,170 --> 00:07:08,810
we shouldn't pay other people to do our

00:07:05,930 --> 00:07:10,730
work for us we're developers we can do

00:07:08,810 --> 00:07:14,360
this there's no reason to bring in a

00:07:10,730 --> 00:07:17,090
third party dependency for this then

00:07:14,360 --> 00:07:20,090
people generally not in an agreement

00:07:17,090 --> 00:07:25,640
next ticket whatever I read the ticket

00:07:20,090 --> 00:07:28,220
and I quickly announced to the group why

00:07:25,640 --> 00:07:29,660
should we do things ourselves why should

00:07:28,220 --> 00:07:31,760
we reinvent the wheel and there's

00:07:29,660 --> 00:07:35,419
perfectly good third party services to

00:07:31,760 --> 00:07:39,440
do this for us and the woman in charge

00:07:35,419 --> 00:07:41,330
of our support team was fairly

00:07:39,440 --> 00:07:45,650
astonished at my lack of self-awareness

00:07:41,330 --> 00:07:47,720
and the speed with which I managed to

00:07:45,650 --> 00:07:52,070
completely contradict myself with no

00:07:47,720 --> 00:07:55,070
apparent thought behind doing so I was

00:07:52,070 --> 00:07:57,500
embarrassed she called me out and it's

00:07:55,070 --> 00:08:00,500
one thing to be embarrassed like with

00:07:57,500 --> 00:08:02,180
your friends or with your wife or

00:08:00,500 --> 00:08:09,260
something but being embarrassed at work

00:08:02,180 --> 00:08:13,310
sucks and I did what I do whenever I get

00:08:09,260 --> 00:08:16,520
embarrassed by something at work I wrote

00:08:13,310 --> 00:08:19,160
it down in a blog and I've been thinking

00:08:16,520 --> 00:08:21,650
about it more and I wrote an article

00:08:19,160 --> 00:08:24,710
about it and I've arrived

00:08:21,650 --> 00:08:29,210
at what you might call a decision-making

00:08:24,710 --> 00:08:31,880
framework in my defense and that meeting

00:08:29,210 --> 00:08:34,400
I think I was right I think that gut

00:08:31,880 --> 00:08:37,159
reaction to do plug in a ourselves and

00:08:34,400 --> 00:08:40,010
do plug in B through a third party was

00:08:37,159 --> 00:08:42,229
right the problem is that I lacked a

00:08:40,010 --> 00:08:44,180
formal way of expressing it to the group

00:08:42,229 --> 00:08:48,380
and that's what I'm gonna share with you

00:08:44,180 --> 00:08:51,610
today the real heart of this talk the

00:08:48,380 --> 00:08:54,650
real issue is that as professionals

00:08:51,610 --> 00:08:57,640
we're very serious about the technical

00:08:54,650 --> 00:09:00,920
details of the problems we solve but

00:08:57,640 --> 00:09:03,860
sometimes we forget to consider the most

00:09:00,920 --> 00:09:05,810
important question of all do we solve

00:09:03,860 --> 00:09:08,360
the problem ourselves or do we

00:09:05,810 --> 00:09:14,600
acknowledge that somebody else already

00:09:08,360 --> 00:09:18,740
has all right this is the slide where I

00:09:14,600 --> 00:09:21,350
announce to you that I am done talking

00:09:18,740 --> 00:09:23,450
about what I'm going to talk about and

00:09:21,350 --> 00:09:28,490
I'm ready to start actually talking

00:09:23,450 --> 00:09:30,290
about it there's five points we'll go

00:09:28,490 --> 00:09:33,790
through here and point one I'm going to

00:09:30,290 --> 00:09:38,720
tell you a hack around the simple

00:09:33,790 --> 00:09:40,820
practice of fielding a request in point

00:09:38,720 --> 00:09:43,060
two we're going to address the crux of

00:09:40,820 --> 00:09:46,330
the matter to Dever to download and

00:09:43,060 --> 00:09:50,450
point three we'll assume that we are

00:09:46,330 --> 00:09:54,290
downloading our solution which one do we

00:09:50,450 --> 00:09:59,060
download in point four will assume that

00:09:54,290 --> 00:10:00,800
we picked one what now in point five

00:09:59,060 --> 00:10:02,800
we'll take a couple steps back and

00:10:00,800 --> 00:10:06,040
assume that we're doing it ourselves

00:10:02,800 --> 00:10:06,040
what then

00:10:08,300 --> 00:10:12,530
all right I called this point one in the

00:10:10,460 --> 00:10:14,240
last slide but really you might call it

00:10:12,530 --> 00:10:18,350
point zero because it's so foundational

00:10:14,240 --> 00:10:20,720
I want to propose to you that you play a

00:10:18,350 --> 00:10:24,110
little language game when you feel the

00:10:20,720 --> 00:10:30,230
requests and ask yourself is this a

00:10:24,110 --> 00:10:33,080
request or is this a goal those words

00:10:30,230 --> 00:10:37,150
are kind of synonyms but if you take a

00:10:33,080 --> 00:10:38,990
minute you can discover some important

00:10:37,150 --> 00:10:47,930
nuances to the ticket that you're

00:10:38,990 --> 00:10:51,830
reviewing a request is I want my Search

00:10:47,930 --> 00:11:02,840
Widget to give me type-ahead suggestions

00:10:51,830 --> 00:11:04,940
like Google a goal is well actually I

00:11:02,840 --> 00:11:07,400
don't care about a lot of the things

00:11:04,940 --> 00:11:10,130
that Google does I don't care about the

00:11:07,400 --> 00:11:12,560
cloud-based indexing or the full-text

00:11:10,130 --> 00:11:15,020
searching or the language predicting I

00:11:12,560 --> 00:11:17,180
actually just really like the interface

00:11:15,020 --> 00:11:20,950
of being able to type in and have it

00:11:17,180 --> 00:11:20,950
seem like it knows what I'm doing a

00:11:21,820 --> 00:11:37,210
request is I want the recent posts from

00:11:29,890 --> 00:11:44,060
some arbitrary number of RSS feeds ok

00:11:37,210 --> 00:11:46,160
well the goal there is it's not simply

00:11:44,060 --> 00:11:48,050
that I want you to loop through each RSS

00:11:46,160 --> 00:11:50,960
feed and give me the recent posts from

00:11:48,050 --> 00:11:53,660
each feed it's a much harder problem I

00:11:50,960 --> 00:11:56,180
want you to be aware of all the posts in

00:11:53,660 --> 00:11:58,760
the history of those feeds and in

00:11:56,180 --> 00:12:00,890
aggregate give me the five most recent

00:11:58,760 --> 00:12:03,100
ones regardless of which URL they came

00:12:00,890 --> 00:12:03,100
from

00:12:04,310 --> 00:12:13,560
this exercise leads me in that meeting

00:12:10,769 --> 00:12:15,480
is what led me to the gut feeling that

00:12:13,560 --> 00:12:19,649
we should do the autosuggest search

00:12:15,480 --> 00:12:24,139
ourselves and we should do the RSS feed

00:12:19,649 --> 00:12:35,430
smusher feed aggregator as a third party

00:12:24,139 --> 00:12:38,190
solution so before delving into how to

00:12:35,430 --> 00:12:41,790
pick which third party provider or what

00:12:38,190 --> 00:12:43,709
to do once you've picked one I want to

00:12:41,790 --> 00:12:45,300
start with deciding whether or not we're

00:12:43,709 --> 00:12:45,720
gonna pick we're gonna use a third party

00:12:45,300 --> 00:12:49,290
at all

00:12:45,720 --> 00:12:52,130
I believe the fulcrum to this decision

00:12:49,290 --> 00:12:54,570
lies not within the ticket body

00:12:52,130 --> 00:12:56,579
certainly not within the marketing page

00:12:54,570 --> 00:12:59,220
for the third party solutions you're

00:12:56,579 --> 00:13:02,339
considering I think the decision is

00:12:59,220 --> 00:13:05,730
actually self reflection your own

00:13:02,339 --> 00:13:08,209
organization after all you don't know

00:13:05,730 --> 00:13:12,149
much about these third party providers

00:13:08,209 --> 00:13:16,139
but you can learn a lot about what you

00:13:12,149 --> 00:13:18,750
do know well yourself I'm gonna suggest

00:13:16,139 --> 00:13:22,040
that you stop and examine yourself your

00:13:18,750 --> 00:13:24,620
team your organization in three ways

00:13:22,040 --> 00:13:31,079
strengths versus weaknesses

00:13:24,620 --> 00:13:35,339
self-improvement and mission strengths

00:13:31,079 --> 00:13:39,269
vs. weaknesses so in the example of the

00:13:35,339 --> 00:13:41,399
autosuggest search I knew that we had

00:13:39,269 --> 00:13:44,430
good front-end developers we were

00:13:41,399 --> 00:13:48,079
accustomed to using jQuery UI this was

00:13:44,430 --> 00:13:51,540
2013 mind you we were accustomed to

00:13:48,079 --> 00:13:53,459
generally harassing WordPress into doing

00:13:51,540 --> 00:13:56,220
what we wanted it to do extending it

00:13:53,459 --> 00:13:58,440
filtering at adding actions we'd never

00:13:56,220 --> 00:14:01,829
done a type-ahead search before but we

00:13:58,440 --> 00:14:05,610
could think through it not so with the

00:14:01,829 --> 00:14:09,029
feed smusher this was a time when for

00:14:05,610 --> 00:14:11,220
our team devops was a weakness it

00:14:09,029 --> 00:14:13,920
actually felt like for whatever reason

00:14:11,220 --> 00:14:16,590
we just were not equipped to hire and

00:14:13,920 --> 00:14:18,720
retain talented DevOps professionals

00:14:16,590 --> 00:14:21,300
in particular anything having to do with

00:14:18,720 --> 00:14:30,000
cron felt like it would be tempting a

00:14:21,300 --> 00:14:31,410
weak underbelly had the feeling that as

00:14:30,000 --> 00:14:33,240
I was thinking about how to do the feed

00:14:31,410 --> 00:14:34,710
smusher I felt like that's what we'd

00:14:33,240 --> 00:14:36,900
have to do we'd have to set up a cron

00:14:34,710 --> 00:14:39,900
job and periodically pull all those

00:14:36,900 --> 00:14:44,040
different URLs of the feeds to see if

00:14:39,900 --> 00:14:45,870
new posts had come out it just seemed

00:14:44,040 --> 00:14:48,020
nebulous it seemed like it was not our

00:14:45,870 --> 00:14:51,360
strength

00:14:48,020 --> 00:14:52,410
score one for doing the type-ahead

00:14:51,360 --> 00:14:55,830
search in house

00:14:52,410 --> 00:15:02,450
score one for doing the feed smusher as

00:14:55,830 --> 00:15:08,570
a third-party plugin self-improvement

00:15:02,450 --> 00:15:10,920
have you ever quit your job or wanted to

00:15:08,570 --> 00:15:17,400
because you were not learning anything

00:15:10,920 --> 00:15:19,350
new there the tasks that present the

00:15:17,400 --> 00:15:22,890
best opportunities for self-improvement

00:15:19,350 --> 00:15:28,110
are the ones that are in the sweet spot

00:15:22,890 --> 00:15:30,720
of being challenging but attainable some

00:15:28,110 --> 00:15:34,080
reach researchers refer to this as being

00:15:30,720 --> 00:15:39,420
in the zone and they cite it as a factor

00:15:34,080 --> 00:15:43,200
in gaming addiction I've felt this

00:15:39,420 --> 00:15:44,990
myself on work projects and it's some of

00:15:43,200 --> 00:15:47,790
my favorite memories of work ever

00:15:44,990 --> 00:15:49,890
teams appreciate this there's an

00:15:47,790 --> 00:15:53,580
organizational cost and missing a chance

00:15:49,890 --> 00:15:55,830
to pay them to learn I could tell right

00:15:53,580 --> 00:15:59,280
away where the autosuggest search would

00:15:55,830 --> 00:16:01,709
fit it'd be a thrilling journey into the

00:15:59,280 --> 00:16:07,010
world of ideas piecing it together using

00:16:01,709 --> 00:16:10,500
jQuery UI to devour post titles as JSON

00:16:07,010 --> 00:16:13,860
on the other hand the feed smusher felt

00:16:10,500 --> 00:16:16,380
like not an opportunity to improve our

00:16:13,860 --> 00:16:19,440
team but an opportunity to frustrate our

00:16:16,380 --> 00:16:22,500
team felt like the success or failure of

00:16:19,440 --> 00:16:24,920
in particular cron tasks were mostly out

00:16:22,500 --> 00:16:24,920
of our control

00:16:26,190 --> 00:16:34,500
score another for an in-house type-ahead

00:16:29,830 --> 00:16:34,500
search and a third party feat smusher

00:16:35,220 --> 00:16:42,250
organizational mission if a new feature

00:16:39,580 --> 00:16:45,399
request aligns well with what our

00:16:42,250 --> 00:16:48,180
company is supposed to be for then we're

00:16:45,399 --> 00:16:50,709
probably gonna resell it many times

00:16:48,180 --> 00:16:53,260
we're gonna want our in-house dev team

00:16:50,709 --> 00:16:55,390
to iterate on it and prove it and we'll

00:16:53,260 --> 00:17:00,730
have the budget to do so because the

00:16:55,390 --> 00:17:03,490
majority of our clients want it for the

00:17:00,730 --> 00:17:06,339
type of head search we feel that similar

00:17:03,490 --> 00:17:08,860
requests many times and we felt like it

00:17:06,339 --> 00:17:11,740
would be time well spent on the other

00:17:08,860 --> 00:17:16,300
hand no one had asked us for a RSS

00:17:11,740 --> 00:17:19,150
smusher before well that score third for

00:17:16,300 --> 00:17:24,490
an in-house autosuggest search and a

00:17:19,150 --> 00:17:28,569
third party feed smusher evaluating the

00:17:24,490 --> 00:17:31,660
unknown will return later to the

00:17:28,569 --> 00:17:35,260
autosuggest search for now we're gonna

00:17:31,660 --> 00:17:38,100
talk about the feed smusher that's the

00:17:35,260 --> 00:17:43,780
one that we've decided to do third party

00:17:38,100 --> 00:17:45,340
the question is to which third party the

00:17:43,780 --> 00:17:47,380
frustrating thing about working with

00:17:45,340 --> 00:17:49,840
third parties is that by definition you

00:17:47,380 --> 00:17:51,309
make the most important decision which

00:17:49,840 --> 00:17:53,070
is whether or not to engage with them

00:17:51,309 --> 00:17:56,429
when you know the least about them

00:17:53,070 --> 00:17:58,690
because Eve not yet engaged with them

00:17:56,429 --> 00:18:04,530
there are some things we can determine

00:17:58,690 --> 00:18:09,990
from afar familiarity vitality

00:18:04,530 --> 00:18:09,990
extensibility branding and SLA

00:18:10,080 --> 00:18:18,840
familiarity I wonder if we can increase

00:18:16,660 --> 00:18:21,220
the number of third party dependencies

00:18:18,840 --> 00:18:25,030
without increasing the number of

00:18:21,220 --> 00:18:28,750
third-party relationships in other words

00:18:25,030 --> 00:18:30,880
is there a vendor that we already use

00:18:28,750 --> 00:18:32,890
for something who also has a solution

00:18:30,880 --> 00:18:36,730
for this request that should weigh

00:18:32,890 --> 00:18:39,650
heavily we may get volume pricing

00:18:36,730 --> 00:18:43,190
markup and style are likely to be

00:18:39,650 --> 00:18:45,380
consistent between solutions we want to

00:18:43,190 --> 00:18:58,960
avoid having a website that looks like

00:18:45,380 --> 00:19:05,570
it's made from spare parts oh I'm sorry

00:18:58,960 --> 00:19:10,600
I have a microphone on my neck okay do I

00:19:05,570 --> 00:19:10,600
have a microphone okay

00:19:11,320 --> 00:19:24,920
please join us in the front would you

00:19:13,460 --> 00:19:26,630
like to know okay I will speak louder we

00:19:24,920 --> 00:19:29,390
want to avoid having a website that

00:19:26,630 --> 00:19:31,940
looks like it's made of spare parts so

00:19:29,390 --> 00:19:34,130
we would trend toward engaging a third

00:19:31,940 --> 00:19:37,820
party that we already use for something

00:19:34,130 --> 00:19:40,520
else and the example of the feed smusher

00:19:37,820 --> 00:19:43,100
Google Reader was a good option because

00:19:40,520 --> 00:19:49,809
like probably everyone here we use

00:19:43,100 --> 00:19:56,360
Google for a dozen other things vitality

00:19:49,809 --> 00:19:59,660
will this service stick around get is

00:19:56,360 --> 00:20:03,800
really good for version control but you

00:19:59,660 --> 00:20:07,850
know what it's even better for figuring

00:20:03,800 --> 00:20:11,530
out if a project is still active you can

00:20:07,850 --> 00:20:14,929
see update frequency responsiveness

00:20:11,530 --> 00:20:19,960
responsiveness to issues and also get a

00:20:14,929 --> 00:20:19,960
sense of what kind of community is there

00:20:20,020 --> 00:20:24,350
this is true more sewing git

00:20:22,460 --> 00:20:27,620
repositories I feel than in the

00:20:24,350 --> 00:20:32,030
wordpress.org plug-in repo for whatever

00:20:27,620 --> 00:20:35,900
reason something I think it's changed

00:20:32,030 --> 00:20:37,910
since 2013 is git is more ubiquitous

00:20:35,900 --> 00:20:43,610
it's pretty hard to find a reputable

00:20:37,910 --> 00:20:45,590
service without a git presence this

00:20:43,610 --> 00:20:48,310
factor weighed against Google Reader an

00:20:45,590 --> 00:20:50,270
RSS example because obviously Google is

00:20:48,310 --> 00:20:53,030
generally not

00:20:50,270 --> 00:20:59,780
an open-source provider certainly not in

00:20:53,030 --> 00:21:04,040
2013 extensibility can this service

00:20:59,780 --> 00:21:06,830
adapt as our needs change not only do we

00:21:04,040 --> 00:21:11,179
evaluate the core service but we want to

00:21:06,830 --> 00:21:14,000
dig into its API if a service is

00:21:11,179 --> 00:21:19,760
extensible it's more likely to fit as

00:21:14,000 --> 00:21:24,350
our needs change allowing us to avoid

00:21:19,760 --> 00:21:27,350
the wily coyote scenario you know what

00:21:24,350 --> 00:21:31,280
else an API gives us it gives us a

00:21:27,350 --> 00:21:35,650
chance for our in-house developers to

00:21:31,280 --> 00:21:35,650
have a challenging but attainable task

00:21:36,160 --> 00:21:41,929
API integrations also give us the

00:21:38,929 --> 00:21:44,630
perfect comeback to the accusation of

00:21:41,929 --> 00:21:46,970
just being a middleman between the

00:21:44,630 --> 00:21:48,950
client and some other vendor we're

00:21:46,970 --> 00:21:52,460
providing a unique value add through our

00:21:48,950 --> 00:21:55,880
API integration so an example is

00:21:52,460 --> 00:21:57,650
MailChimp okay we have our clients send

00:21:55,880 --> 00:21:58,429
out their wordpress posts on MailChimp

00:21:57,650 --> 00:22:00,260
but guess what

00:21:58,429 --> 00:22:01,910
we'll give them a dashboard widget to

00:22:00,260 --> 00:22:07,340
show them their most popular email

00:22:01,910 --> 00:22:10,190
campaigns in the example of the feed

00:22:07,340 --> 00:22:12,350
smusher a good API feature we wanted was

00:22:10,190 --> 00:22:19,550
the ability to programmatically dump the

00:22:12,350 --> 00:22:22,370
feed cache Brandon do you care about

00:22:19,550 --> 00:22:25,730
white labeling white labeling is the

00:22:22,370 --> 00:22:28,420
practice of reselling a service with

00:22:25,730 --> 00:22:30,590
your branding or with no branding

00:22:28,420 --> 00:22:34,070
instead of branding from the original

00:22:30,590 --> 00:22:37,700
provider a good example of this was the

00:22:34,070 --> 00:22:40,490
early days of Typekit when you often

00:22:37,700 --> 00:22:42,200
ended up with a position fixed ribbon on

00:22:40,490 --> 00:22:44,030
the bottom right corner of your site

00:22:42,200 --> 00:22:48,530
letting everyone know you're using

00:22:44,030 --> 00:22:50,540
Typekit fonts being that we're using far

00:22:48,530 --> 00:22:51,760
more dependencies now than we were five

00:22:50,540 --> 00:22:54,230
years ago

00:22:51,760 --> 00:22:57,490
there's the potential for your website

00:22:54,230 --> 00:22:57,490
to look like a NASCAR

00:22:59,629 --> 00:23:05,039
in the case of the RSS musher this meant

00:23:02,809 --> 00:23:07,379
trending towards solutions that just

00:23:05,039 --> 00:23:09,809
gave us a feed just gave us a URL that

00:23:07,379 --> 00:23:11,669
we could pull posts from instead of for

00:23:09,809 --> 00:23:17,249
example an iframe that built the whole

00:23:11,669 --> 00:23:21,330
entire widget for us SLA s what are you

00:23:17,249 --> 00:23:22,649
getting besides uptime well for

00:23:21,330 --> 00:23:27,749
client-side products

00:23:22,649 --> 00:23:29,249
there's browser support if you have 10

00:23:27,749 --> 00:23:30,809
different widgets from 10 different

00:23:29,249 --> 00:23:32,639
providers what are the odds that they

00:23:30,809 --> 00:23:36,119
all support the same browsers that you

00:23:32,639 --> 00:23:38,969
do the same logic applies to

00:23:36,119 --> 00:23:40,080
accessibility what are the odds that

00:23:38,969 --> 00:23:43,919
they're abiding by the same

00:23:40,080 --> 00:23:48,089
accessibility standards as you perhaps

00:23:43,919 --> 00:23:50,820
most important of all is support if you

00:23:48,089 --> 00:23:53,609
pay your staff hardly anything by the

00:23:50,820 --> 00:23:56,190
hour it's very likely that priority

00:23:53,609 --> 00:23:57,779
support is one of the most economical

00:23:56,190 --> 00:24:02,369
investments you can purchase throughout

00:23:57,779 --> 00:24:04,589
your third-party relationship I think

00:24:02,369 --> 00:24:08,700
support has generally gotten worse since

00:24:04,589 --> 00:24:10,950
2013 we're now routinely haranguing

00:24:08,700 --> 00:24:12,450
third-party providers on Twitter because

00:24:10,950 --> 00:24:15,509
we're frustrated with the support that

00:24:12,450 --> 00:24:19,649
they provide and in the case of Google

00:24:15,509 --> 00:24:22,039
Reader goes without saying there is no

00:24:19,649 --> 00:24:22,039
support

00:24:26,200 --> 00:24:33,409
relationship maintenance so in the

00:24:30,110 --> 00:24:36,860
example of our RSS smusher we've decided

00:24:33,409 --> 00:24:41,049
what third party we're going to use in

00:24:36,860 --> 00:24:41,049
2013 we happen to choose Digg reader

00:24:41,350 --> 00:24:49,309
perhaps a weird right it was the only it

00:24:47,720 --> 00:24:51,230
was the only enterprise level service

00:24:49,309 --> 00:24:59,509
that wasn't actively advertising a

00:24:51,230 --> 00:25:01,070
shutdown notice yeah but you know if

00:24:59,509 --> 00:25:04,490
somebody else is gonna do the heavy

00:25:01,070 --> 00:25:08,539
lifting I owe it to myself and my

00:25:04,490 --> 00:25:12,279
clients to find as much of the remaining

00:25:08,539 --> 00:25:17,299
slack to pick up as I can

00:25:12,279 --> 00:25:20,330
piloting security documentation and

00:25:17,299 --> 00:25:22,669
in-house support are all valuable

00:25:20,330 --> 00:25:29,840
opportunities to nurture this new third

00:25:22,669 --> 00:25:32,419
party relationship piloting as exciting

00:25:29,840 --> 00:25:34,369
as this new relationship is I probably

00:25:32,419 --> 00:25:39,889
don't want to go installing it on a

00:25:34,369 --> 00:25:41,869
hundred domains on day one you can ask

00:25:39,889 --> 00:25:42,710
staff members who work on these sites

00:25:41,869 --> 00:25:46,249
every day

00:25:42,710 --> 00:25:50,299
give me a mixture of really common sites

00:25:46,249 --> 00:25:52,730
and real edge cases do we have foreign

00:25:50,299 --> 00:25:55,279
language sites do we have sites that

00:25:52,730 --> 00:25:57,379
scroll sideways do we have sites that

00:25:55,279 --> 00:26:02,169
are dark on light light on dark and

00:25:57,379 --> 00:26:04,159
what's just a common normal site for us

00:26:02,169 --> 00:26:05,840
piloting might also be around the

00:26:04,159 --> 00:26:08,210
relationships you have a specific

00:26:05,840 --> 00:26:10,039
clients some clients are going to be

00:26:08,210 --> 00:26:12,440
more tolerant or maybe even excited

00:26:10,039 --> 00:26:20,330
about being an experimental subject than

00:26:12,440 --> 00:26:24,019
others security have you ever found

00:26:20,330 --> 00:26:26,869
yourself emailing teammates to get the

00:26:24,019 --> 00:26:31,909
login credentials for a third party

00:26:26,869 --> 00:26:34,789
service some third party services such

00:26:31,909 --> 00:26:37,619
as MailChimp make it pretty easy for

00:26:34,789 --> 00:26:39,940
different team members to be

00:26:37,619 --> 00:26:43,269
delegate members of a larger team

00:26:39,940 --> 00:26:46,090
account other services like New Relic

00:26:43,269 --> 00:26:50,619
seem to assume that people are going to

00:26:46,090 --> 00:26:52,509
share a team login that's the case you

00:26:50,619 --> 00:26:54,879
have almost no choice but to use a

00:26:52,509 --> 00:27:04,269
password manager as a matter of policy

00:26:54,879 --> 00:27:08,470
like LastPass documentation have you

00:27:04,269 --> 00:27:10,809
ever sent out a group email trying to

00:27:08,470 --> 00:27:14,830
figure out what a third party was even

00:27:10,809 --> 00:27:16,539
for it might get to a point where the

00:27:14,830 --> 00:27:18,789
only thing you know about it is that

00:27:16,539 --> 00:27:25,269
it's on your credit card statement every

00:27:18,789 --> 00:27:27,279
month have a directory of third-party

00:27:25,269 --> 00:27:28,720
relationships it can be a binder it can

00:27:27,279 --> 00:27:31,690
be a trapper keeper it can be a

00:27:28,720 --> 00:27:35,200
wordpress blog the important thing is

00:27:31,690 --> 00:27:37,269
that everyone knows where it is it's not

00:27:35,200 --> 00:27:39,039
just about why do we use this service

00:27:37,269 --> 00:27:49,149
it's also about why do we use this

00:27:39,039 --> 00:27:51,279
membership tier subject matter expert we

00:27:49,149 --> 00:27:54,009
don't need every team member to be an

00:27:51,279 --> 00:27:58,690
expert on every third party service we

00:27:54,009 --> 00:28:02,590
use but we can tag individual team

00:27:58,690 --> 00:28:04,840
members to be the subject matter expert

00:28:02,590 --> 00:28:07,840
for a particular third party service

00:28:04,840 --> 00:28:10,450
until they're all covered this can be

00:28:07,840 --> 00:28:17,679
retained in personnel records this can

00:28:10,450 --> 00:28:20,019
be passed along when staff turns over or

00:28:17,679 --> 00:28:27,309
you can just pass it around periodically

00:28:20,019 --> 00:28:29,320
to prevent siloing we had decided that

00:28:27,309 --> 00:28:32,619
we were going to outsource the RSS feed

00:28:29,320 --> 00:28:34,840
smusher we've talked about that how we

00:28:32,619 --> 00:28:37,269
decided to do it how we decide which

00:28:34,840 --> 00:28:40,889
service and some good practices to

00:28:37,269 --> 00:28:43,200
follow after having chosen to do so

00:28:40,889 --> 00:28:45,519
change of subject

00:28:43,200 --> 00:28:48,820
we're going back to the autocomplete

00:28:45,519 --> 00:28:50,469
search now we decide to build that one

00:28:48,820 --> 00:28:56,299
in-house

00:28:50,469 --> 00:28:58,419
and what's the problem with that Mary

00:28:56,299 --> 00:29:02,899
Shelley taught us the problem with that

00:28:58,419 --> 00:29:08,149
in her classic book Frankenstein I've

00:29:02,899 --> 00:29:09,049
created a monster stop me if you've

00:29:08,149 --> 00:29:11,570
heard this before

00:29:09,049 --> 00:29:13,999
prideful developer assures the team they

00:29:11,570 --> 00:29:16,869
can do something themselves it's a

00:29:13,999 --> 00:29:19,960
complex project they make something nice

00:29:16,869 --> 00:29:24,529
and the company comes to rely on it

00:29:19,960 --> 00:29:26,029
time goes by it's doing fine there's an

00:29:24,529 --> 00:29:30,009
ongoing maintenance burden but it's

00:29:26,029 --> 00:29:35,960
worth it now for the Wiley coyote moment

00:29:30,009 --> 00:29:38,690
that developer leaves their old product

00:29:35,960 --> 00:29:41,509
needs maintenance but no one knows what

00:29:38,690 --> 00:29:45,009
to do and since its proprietary there's

00:29:41,509 --> 00:29:45,009
no community for it

00:29:46,479 --> 00:29:50,929
once you decide to build something

00:29:48,469 --> 00:29:54,139
in-house how can you prevent that work

00:29:50,929 --> 00:30:02,109
from devolving into a resented alien

00:29:54,139 --> 00:30:08,149
dependency consider pair programming as

00:30:02,109 --> 00:30:12,049
in two people one keyboard one typist

00:30:08,149 --> 00:30:13,909
one decision-maker I don't think anybody

00:30:12,049 --> 00:30:17,210
works like this all the time

00:30:13,909 --> 00:30:19,369
but it's an interesting exercise to try

00:30:17,210 --> 00:30:23,169
for an hour a week at the beginning of a

00:30:19,369 --> 00:30:23,169
large in-house project

00:30:26,590 --> 00:30:35,289
job switched Tuesday's if you use a

00:30:30,549 --> 00:30:37,690
ticketing system like JIRA let's say on

00:30:35,289 --> 00:30:41,049
Tuesday two people literally switch

00:30:37,690 --> 00:30:43,269
identity today Scott is gonna work on

00:30:41,049 --> 00:30:45,249
Angelo's ticket San Angelo is gonna work

00:30:43,269 --> 00:30:47,559
on Scott's tickets because they tend to

00:30:45,249 --> 00:30:48,340
get different tickets and in this

00:30:47,559 --> 00:30:50,799
fashion

00:30:48,340 --> 00:30:52,149
they'll be fairly productive and they

00:30:50,799 --> 00:30:54,450
can ask each other for help throughout

00:30:52,149 --> 00:30:54,450
the day

00:30:56,519 --> 00:31:05,169
hold code reviews if it's not readable

00:31:01,059 --> 00:31:09,299
it's not deployable this can feel

00:31:05,169 --> 00:31:11,950
intrusive at first but that fades and

00:31:09,299 --> 00:31:14,470
power managers to ask question about

00:31:11,950 --> 00:31:21,009
code two if they have any technical bent

00:31:14,470 --> 00:31:24,249
it's not just for developers sunlight is

00:31:21,009 --> 00:31:26,860
the best disinfectant you can bring

00:31:24,249 --> 00:31:30,610
moldy code into light with automated

00:31:26,860 --> 00:31:33,090
tools like PHP doc or Jas doc then loop

00:31:30,610 --> 00:31:38,769
through your code and output it as a

00:31:33,090 --> 00:31:42,789
readable document blog about it or speak

00:31:38,769 --> 00:31:44,139
about it in public one of the best

00:31:42,789 --> 00:31:45,759
things and the worst things about the

00:31:44,139 --> 00:31:48,009
WordPress community is that if you're

00:31:45,759 --> 00:31:50,769
doing something wrong and you talk about

00:31:48,009 --> 00:31:58,919
it you will probably get a lot of

00:31:50,769 --> 00:32:02,639
feedback about that beware the big

00:31:58,919 --> 00:32:04,869
what's big for your development team

00:32:02,639 --> 00:32:09,639
probably not the same thing that's big

00:32:04,869 --> 00:32:12,309
for Microsoft but you can get ammonite

00:32:09,639 --> 00:32:18,039
you can get a better idea if you create

00:32:12,309 --> 00:32:26,740
estimates using the Fibonacci sequence 1

00:32:18,039 --> 00:32:31,509
2 3 5 8 13 21 34 55 on my team we don't

00:32:26,740 --> 00:32:34,779
go above 55 this is also known as agile

00:32:31,509 --> 00:32:37,090
poker and it's the opposite of prices

00:32:34,779 --> 00:32:39,279
right when you estimate the time

00:32:37,090 --> 00:32:40,269
required for a project you're supposed

00:32:39,279 --> 00:32:43,089
to go to the

00:32:40,269 --> 00:32:45,359
next highest step and because the gap

00:32:43,089 --> 00:32:47,709
between steps gets progressively larger

00:32:45,359 --> 00:32:50,019
you're accounting for the fact that as

00:32:47,709 --> 00:32:53,309
projects get bigger they inherently

00:32:50,019 --> 00:32:55,989
become harder to estimate accurately

00:32:53,309 --> 00:32:58,809
this also gives us an objective way to

00:32:55,989 --> 00:33:01,659
record the estimated size for projects

00:32:58,809 --> 00:33:07,479
so you have a sense is this bigger than

00:33:01,659 --> 00:33:09,249
usual if it is that's possibly a sign

00:33:07,479 --> 00:33:12,820
that it's better to explore this feature

00:33:09,249 --> 00:33:14,799
by examining prior art try a third party

00:33:12,820 --> 00:33:23,669
and see how other people have solved

00:33:14,799 --> 00:33:28,809
this problem look before you leap and

00:33:23,669 --> 00:33:31,119
before you don't I don't know if your

00:33:28,809 --> 00:33:33,489
sense in this talk is that I'm biased

00:33:31,119 --> 00:33:35,739
toward doing things in-house or bias

00:33:33,489 --> 00:33:39,339
towards downloading them that hasn't

00:33:35,739 --> 00:33:42,070
been my intention my intention has just

00:33:39,339 --> 00:33:49,419
been to highlight the pros and cons to

00:33:42,070 --> 00:33:51,429
that decision in a vacuum but being that

00:33:49,419 --> 00:33:53,919
the landscape is trending toward more

00:33:51,429 --> 00:33:57,579
third-party tools greater reliance on

00:33:53,919 --> 00:34:02,349
them I do want to advocate for doing

00:33:57,579 --> 00:34:07,659
things yourselves I used to be in the

00:34:02,349 --> 00:34:13,899
military I was in Iraq for 15 months

00:34:07,659 --> 00:34:17,440
from 2006 to 2007 I had guys I was with

00:34:13,899 --> 00:34:21,940
for whom it was their fourth time on

00:34:17,440 --> 00:34:25,359
such a tour and I would ask them why are

00:34:21,940 --> 00:34:28,599
you still doing this why are you still

00:34:25,359 --> 00:34:30,779
on these patrols why are you still lying

00:34:28,599 --> 00:34:35,399
in ambush raiding houses

00:34:30,779 --> 00:34:39,760
disarming roadside bombs on a good day I

00:34:35,399 --> 00:34:40,240
found that decent soldiers did it for

00:34:39,760 --> 00:34:45,419
the money

00:34:40,240 --> 00:34:49,779
I found that bad soldiers did it because

00:34:45,419 --> 00:34:51,759
they couldn't do anything else but I

00:34:49,779 --> 00:34:53,240
found that the best soldiers did it

00:34:51,759 --> 00:34:56,960
because

00:34:53,240 --> 00:35:03,800
they loved doing that stuff for its own

00:34:56,960 --> 00:35:06,410
sake you probably don't have a lot of

00:35:03,800 --> 00:35:08,960
developers on your development team who

00:35:06,410 --> 00:35:14,270
wake up every day and say to themselves

00:35:08,960 --> 00:35:18,460
that they love downloading stuff they

00:35:14,270 --> 00:35:21,260
love going to war in the world of ideas

00:35:18,460 --> 00:35:23,359
if you want to have a beautiful team

00:35:21,260 --> 00:35:26,000
that wants to stay on board for tour

00:35:23,359 --> 00:35:29,960
after tour year after year ticket after

00:35:26,000 --> 00:35:37,670
ticket you kind of have to do things

00:35:29,960 --> 00:35:38,150
ourselves sometimes my name is Scott

00:35:37,670 --> 00:35:41,809
Fennell

00:35:38,150 --> 00:35:44,150
I am from Lex blog.com we help good

00:35:41,809 --> 00:35:47,450
lawyers find good work by helping them

00:35:44,150 --> 00:35:49,849
have good blogs my designer Brian Biddle

00:35:47,450 --> 00:35:51,440
made these slides you can find me off

00:35:49,849 --> 00:35:54,230
the coast of Portland on Peaks Island

00:35:51,440 --> 00:35:56,240
for the occasional beach day you can

00:35:54,230 --> 00:35:58,670
find me at Scott Fennell org for the

00:35:56,240 --> 00:36:01,040
occasional blog post and you can find me

00:35:58,670 --> 00:36:16,670
at top-tall comm for the occasional side

00:36:01,040 --> 00:36:19,299
project thank you we have a few minutes

00:36:16,670 --> 00:36:19,299
for questions

00:36:22,640 --> 00:36:25,299
please

00:36:50,250 --> 00:36:55,020
I want to share with you the most

00:36:53,220 --> 00:36:58,400
mind-blowing example of that you could

00:36:55,020 --> 00:37:02,640
ever imagine the website CSS tricks calm

00:36:58,400 --> 00:37:04,619
it got hacked really badly once and the

00:37:02,640 --> 00:37:06,300
reason it got hacked had nothing to do

00:37:04,619 --> 00:37:09,180
with the fact that it was CSS tricks

00:37:06,300 --> 00:37:11,940
calm per se but because it was the most

00:37:09,180 --> 00:37:16,440
traffic site or this it was the second

00:37:11,940 --> 00:37:18,900
most traffic site on media temple the

00:37:16,440 --> 00:37:23,030
first most traffic site the attacker

00:37:18,900 --> 00:37:29,700
recognized and said this is too much

00:37:23,030 --> 00:37:34,470
it was jQuery calm were the source files

00:37:29,700 --> 00:37:38,099
the CDN source for jQuery is hosted and

00:37:34,470 --> 00:37:40,320
the way he accessed CSS tricks calm it

00:37:38,099 --> 00:37:48,599
wasn't a vulnerability it was social

00:37:40,320 --> 00:37:51,530
engineering so to your question yeah

00:37:48,599 --> 00:37:51,530
that could be bad

00:37:54,620 --> 00:38:12,650
please yeah that's a good question

00:38:05,010 --> 00:38:12,650
I yeah so the question was yeah yeah

00:38:13,130 --> 00:38:18,810
yeah it's a really good question I'm

00:38:17,280 --> 00:38:20,760
gonna spin your question just a little

00:38:18,810 --> 00:38:24,200
bit because it's a little bit like

00:38:20,760 --> 00:38:27,510
asking what's more secure open-source or

00:38:24,200 --> 00:38:30,410
proprietary I think we're starting to

00:38:27,510 --> 00:38:33,980
see that if something is open-source and

00:38:30,410 --> 00:38:38,910
therefore it's more likely to be free

00:38:33,980 --> 00:38:42,570
that exposure to sunlight is more secure

00:38:38,910 --> 00:38:45,750
than proprietary software I've heard

00:38:42,570 --> 00:38:47,160
this is a pretty grandiose claim but you

00:38:45,750 --> 00:38:50,310
occasionally hear it said that WordPress

00:38:47,160 --> 00:38:52,200
core has never been hacked and I think

00:38:50,310 --> 00:38:55,500
that might technically still be true

00:38:52,200 --> 00:38:58,410
which is pretty remarkable and I think

00:38:55,500 --> 00:39:00,540
it's largely because it can be examined

00:38:58,410 --> 00:39:05,760
it can be reported on it can be

00:39:00,540 --> 00:39:07,410
strengthened so I don't know the answer

00:39:05,760 --> 00:39:10,260
to your question absolutely but I do

00:39:07,410 --> 00:39:12,720
know that just because something is free

00:39:10,260 --> 00:39:17,570
just because it's open-source definitely

00:39:12,720 --> 00:39:17,570
doesn't mean it's insecure please

00:39:30,810 --> 00:39:36,220
yeah

00:39:32,430 --> 00:39:38,200
so the example the classic example of a

00:39:36,220 --> 00:39:43,060
larger monolithic plugin would be

00:39:38,200 --> 00:39:44,770
probably sipping like jetpack and an

00:39:43,060 --> 00:39:46,660
example of piecing that you could just

00:39:44,770 --> 00:39:48,880
pick and choose whichever feature you

00:39:46,660 --> 00:39:53,500
want to build up to that sort of

00:39:48,880 --> 00:39:55,210
functionality man I I'm not prepared to

00:39:53,500 --> 00:40:01,210
give an answer on that absolutely I

00:39:55,210 --> 00:40:03,160
think it's a great question in terms of

00:40:01,210 --> 00:40:04,720
security I think you probably would be

00:40:03,160 --> 00:40:06,580
better off with the monolithic one

00:40:04,720 --> 00:40:07,990
that's just my gut sense I don't know I

00:40:06,580 --> 00:40:14,220
haven't looked at that aspect of things

00:40:07,990 --> 00:40:16,940
but I appreciate the question all right

00:40:14,220 --> 00:40:20,010
thank you

00:40:16,940 --> 00:40:20,010

YouTube URL: https://www.youtube.com/watch?v=2HRvTkjG7ZI


