Title: Face Your Fear: The Headless WordPress!
Publication date: 2019-09-05
Playlist: WordCamp Singapore 2019
Description: 
	A detailed run through how you can fully utilize WordPress as a headless CMS with a demo on how it all works.

WPTV link: https://wordpress.tv/2019/08/26/face-your-fear-the-headless-wordpress/
Captions: 
	00:00:01,010 --> 00:00:09,870
hello good afternoon afternoon okay okay

00:00:07,620 --> 00:00:14,059
so I think some of your sleep indigo

00:00:09,870 --> 00:00:16,619
says so of the time but yeah okay so I

00:00:14,059 --> 00:00:20,060
thank you for the good introduction so

00:00:16,619 --> 00:00:23,490
you can call me a yen so I'm from the

00:00:20,060 --> 00:00:25,380
WordPress group from Philippines so yeah

00:00:23,490 --> 00:00:28,349
we also been doing this some sort of

00:00:25,380 --> 00:00:30,210
World Cup so okay so much for that let's

00:00:28,349 --> 00:00:33,239
go to the topic so have you heard about

00:00:30,210 --> 00:00:36,630
the headless WordPress before who is

00:00:33,239 --> 00:00:38,090
here first time to hear this feature of

00:00:36,630 --> 00:00:40,980
WordPress

00:00:38,090 --> 00:00:44,489
okay thank you how about for those who

00:00:40,980 --> 00:00:46,440
have heard about this okay so later or

00:00:44,489 --> 00:00:50,100
maybe we can do some sort of a sharing

00:00:46,440 --> 00:00:52,140
so I will discover all the necessary

00:00:50,100 --> 00:00:56,449
points if you want to add more so feel

00:00:52,140 --> 00:00:59,960
free to reach your suggestions away so

00:00:56,449 --> 00:01:03,030
okay so that's my face

00:00:59,960 --> 00:01:07,080
okay so let's before we start so let's

00:01:03,030 --> 00:01:09,090
take a short cut this a look back or

00:01:07,080 --> 00:01:11,939
throw back on how witty WordPress is

00:01:09,090 --> 00:01:13,920
started so you know oh we all know that

00:01:11,939 --> 00:01:18,270
WordPress is started as a blogging

00:01:13,920 --> 00:01:21,320
platform so but that's way we long

00:01:18,270 --> 00:01:24,780
before then fast forward 15 years later

00:01:21,320 --> 00:01:27,270
WordPress is the number one CMS choice

00:01:24,780 --> 00:01:34,229
for developers and and developers so any

00:01:27,270 --> 00:01:39,240
hand for WordPress okay so uh so now I

00:01:34,229 --> 00:01:41,780
estimated roughly 30% of our top 10

00:01:39,240 --> 00:01:44,939
million websites run on WordPress so

00:01:41,780 --> 00:01:47,990
technically from being up blogging

00:01:44,939 --> 00:01:52,979
platform WordPress ads and both really

00:01:47,990 --> 00:01:55,170
mature relief that not really that it

00:01:52,979 --> 00:01:59,189
can do anything but somehow it can

00:01:55,170 --> 00:02:01,350
accommodate any request or functionality

00:01:59,189 --> 00:02:06,469
wanting to great on your website so

00:02:01,350 --> 00:02:06,469
let's move on to the next topic so

00:02:07,740 --> 00:02:16,240
okay so let's do the introduction for

00:02:10,990 --> 00:02:21,070
the API so who you have been using

00:02:16,240 --> 00:02:23,170
WordPress inspiron 4.4 okay so are you

00:02:21,070 --> 00:02:26,260
reading in the release notes or not or

00:02:23,170 --> 00:02:29,890
your justify update update then done all

00:02:26,260 --> 00:02:33,220
right so the API functionality on

00:02:29,890 --> 00:02:37,240
WordPress was released on version 4.4 us

00:02:33,220 --> 00:02:40,150
because they want to go to a direction

00:02:37,240 --> 00:02:44,110
that it's being a foodie pledge

00:02:40,150 --> 00:02:47,500
application framework so meaning it is

00:02:44,110 --> 00:02:49,930
not just a CMS or just a simple blogging

00:02:47,500 --> 00:02:52,630
platform they want it that it can now

00:02:49,930 --> 00:02:54,520
create applications so how would you

00:02:52,630 --> 00:02:56,470
create applications so first thing you

00:02:54,520 --> 00:02:58,120
need is you need to have API so that

00:02:56,470 --> 00:03:01,360
would supply the application so

00:02:58,120 --> 00:03:03,670
WordPress introduced REST API that

00:03:01,360 --> 00:03:05,590
enables the platform to interact with

00:03:03,670 --> 00:03:08,200
just about any sites or any web

00:03:05,590 --> 00:03:10,570
application meaning you can use

00:03:08,200 --> 00:03:13,060
WordPress as your back-end and then for

00:03:10,570 --> 00:03:15,040
your front-end you can use any you can

00:03:13,060 --> 00:03:16,810
freely use any framework that you want

00:03:15,040 --> 00:03:20,799
either if you want to use a JavaScript

00:03:16,810 --> 00:03:23,200
framework or just a basic HTML CSS with

00:03:20,799 --> 00:03:26,650
some integration of jQuery it's up to

00:03:23,200 --> 00:03:29,110
you so that's how powerful how the

00:03:26,650 --> 00:03:32,350
ambition WordPress to be with this API

00:03:29,110 --> 00:03:33,970
so how does that works

00:03:32,350 --> 00:03:36,220
so we all know that this is the basic

00:03:33,970 --> 00:03:39,100
setup of WordPress so you have the

00:03:36,220 --> 00:03:40,450
themes that would ask the front-end then

00:03:39,100 --> 00:03:42,280
you have the functions and the other

00:03:40,450 --> 00:03:44,470
built-in things there to be your

00:03:42,280 --> 00:03:47,980
back-end so example you want to display

00:03:44,470 --> 00:03:50,260
the post title of hello world so before

00:03:47,980 --> 00:03:53,290
interacting to database so we had a

00:03:50,260 --> 00:03:55,440
server and a PHP that would process the

00:03:53,290 --> 00:03:58,750
request then get it from database then

00:03:55,440 --> 00:04:02,549
displayed it on the webpage that you are

00:03:58,750 --> 00:04:05,220
working so but then ah okay next piece

00:04:02,549 --> 00:04:10,570
okay next next next

00:04:05,220 --> 00:04:12,640
okay okay so now comes the front-end

00:04:10,570 --> 00:04:16,690
framework so how does this happen

00:04:12,640 --> 00:04:19,190
our index so we have the hello world

00:04:16,690 --> 00:04:21,260
application okay so

00:04:19,190 --> 00:04:25,190
say that the hello world is being used

00:04:21,260 --> 00:04:27,740
you are using next any of those

00:04:25,190 --> 00:04:30,650
front-end frameworks so how this

00:04:27,740 --> 00:04:33,440
wordpress comes to the picture so next

00:04:30,650 --> 00:04:36,590
so WordPress would as I said your

00:04:33,440 --> 00:04:39,050
back-end it would get all the contents

00:04:36,590 --> 00:04:41,770
the crew do it would perform the croute

00:04:39,050 --> 00:04:45,110
operation create read update delete then

00:04:41,770 --> 00:04:49,460
it would get what you feed into that

00:04:45,110 --> 00:04:54,220
then next display it to the application

00:04:49,460 --> 00:04:56,960
so sounds simple right

00:04:54,220 --> 00:05:00,140
so simple right or it's too complicated

00:04:56,960 --> 00:05:03,860
to process so let's play this way that

00:05:00,140 --> 00:05:07,160
you are now separating a front-end the

00:05:03,860 --> 00:05:10,220
main web application from WordPress so

00:05:07,160 --> 00:05:14,180
basically you have now two working

00:05:10,220 --> 00:05:16,460
applications okay so next so let's now

00:05:14,180 --> 00:05:18,530
get into the main topic so there are two

00:05:16,460 --> 00:05:21,140
types of structure that you can use when

00:05:18,530 --> 00:05:24,440
building a headless WordPress so any

00:05:21,140 --> 00:05:26,960
idea what is the to structure that you

00:05:24,440 --> 00:05:30,290
can use based on the pictures so what

00:05:26,960 --> 00:05:38,890
you see on the first picture what you

00:05:30,290 --> 00:05:38,890
see so what is this costume portray

00:05:40,919 --> 00:05:47,799
so I so this is a we know Halloween so

00:05:46,929 --> 00:05:51,159
trick-or-treat

00:05:47,799 --> 00:05:54,699
so this is a headless go so the Percy

00:05:51,159 --> 00:05:58,589
structure is the word it's a headless

00:05:54,699 --> 00:05:58,589
WordPress how about the next structure

00:05:59,579 --> 00:06:05,049
what does the girl doing to the boy

00:06:01,809 --> 00:06:07,749
saying goodbye if he said goodbye they

00:06:05,049 --> 00:06:13,779
are breakup so they call it that's next

00:06:07,749 --> 00:06:15,279
structure we call it the code sounds

00:06:13,779 --> 00:06:18,459
fine here but that's how they call it

00:06:15,279 --> 00:06:20,019
because before I as I said the front end

00:06:18,459 --> 00:06:22,329
and Bob and it's coupled in the

00:06:20,019 --> 00:06:24,519
WordPress installation but since we're

00:06:22,329 --> 00:06:27,489
separating it so the term they use is

00:06:24,519 --> 00:06:30,369
the code so I don't know why they

00:06:27,489 --> 00:06:31,889
introduced that term so let's get into

00:06:30,369 --> 00:06:34,779
the definition next

00:06:31,889 --> 00:06:36,610
okay so Porter the code the back end

00:06:34,779 --> 00:06:38,349
where the content is created and the

00:06:36,610 --> 00:06:41,860
front end where the content is the plate

00:06:38,349 --> 00:06:43,719
is hosted separately so technically you

00:06:41,860 --> 00:06:46,509
have two applications so the first

00:06:43,719 --> 00:06:48,849
application is WordPress which serves as

00:06:46,509 --> 00:06:54,009
your back-end and the next the front-end

00:06:48,849 --> 00:06:56,559
is anything that you hello okay so

00:06:54,009 --> 00:06:58,479
anything that you specialize up your

00:06:56,559 --> 00:07:00,729
specialized at any front-end framework

00:06:58,479 --> 00:07:02,349
you are prepuce as long as WordPress is

00:07:00,729 --> 00:07:06,159
your back and you have no problem

00:07:02,349 --> 00:07:08,529
integrating this the nexus the thing of

00:07:06,159 --> 00:07:10,689
this one is you have still the benefit

00:07:08,529 --> 00:07:12,959
of content preview because you know

00:07:10,689 --> 00:07:16,809
WordPress they have this because this

00:07:12,959 --> 00:07:19,389
content a preview before you publish you

00:07:16,809 --> 00:07:22,689
can check the draft first then RC

00:07:19,389 --> 00:07:24,579
everything goes on how you want the

00:07:22,689 --> 00:07:27,699
layout to be before publishing so with

00:07:24,579 --> 00:07:30,699
this you can still hello you can still

00:07:27,699 --> 00:07:34,419
do that thing so but the thing is you're

00:07:30,699 --> 00:07:36,069
not getting the power of the live

00:07:34,419 --> 00:07:38,379
preview of WordPress instead you're

00:07:36,069 --> 00:07:42,659
utilizing the preview of your any

00:07:38,379 --> 00:07:46,119
application so abuse some for this

00:07:42,659 --> 00:07:47,979
JavaScript based frameworks for

00:07:46,119 --> 00:07:52,240
front-end so once you have changes it

00:07:47,979 --> 00:07:53,719
automatically reloads so still you can

00:07:52,240 --> 00:07:56,179
get the benefit of

00:07:53,719 --> 00:07:58,339
having your content viewed on how it

00:07:56,179 --> 00:08:01,580
would be displayed the Nexus implements

00:07:58,339 --> 00:08:04,789
are one is to one relationship so it's

00:08:01,580 --> 00:08:07,579
like a echo desire you have this up from

00:08:04,789 --> 00:08:10,879
an ting that would just serve for this

00:08:07,579 --> 00:08:13,699
specific front-end stuff that you want

00:08:10,879 --> 00:08:16,789
to do so it's not like you created a

00:08:13,699 --> 00:08:18,919
back and then you can use it anywhere

00:08:16,789 --> 00:08:20,749
you want so if you said the copepod

00:08:18,919 --> 00:08:23,360
approach it would follow it

00:08:20,749 --> 00:08:25,249
one is to one relationship what comes

00:08:23,360 --> 00:08:28,369
next now the next is structured which is

00:08:25,249 --> 00:08:31,009
at the headless so headless is a totally

00:08:28,369 --> 00:08:33,169
independent but and it's not like the

00:08:31,009 --> 00:08:35,810
decouple that somehow it's dependent on

00:08:33,169 --> 00:08:38,240
the front-end this one is that's a code

00:08:35,810 --> 00:08:40,909
the subset of the code so you're just

00:08:38,240 --> 00:08:44,300
isolating WordPress SEO mean back and

00:08:40,909 --> 00:08:47,959
then that back-end would implement a one

00:08:44,300 --> 00:08:50,810
is to many relationship so example you

00:08:47,959 --> 00:08:53,509
are maintaining couple of apps but just

00:08:50,810 --> 00:08:56,360
displaying the same data it's just in

00:08:53,509 --> 00:08:58,879
this up the layout is different from the

00:08:56,360 --> 00:09:01,069
other applications so if you implement

00:08:58,879 --> 00:09:03,350
this structure like just a headless one

00:09:01,069 --> 00:09:05,990
then you can just have your front-end

00:09:03,350 --> 00:09:09,589
developers that okay I get I give you

00:09:05,990 --> 00:09:12,529
this endpoints of API then up to you how

00:09:09,589 --> 00:09:14,629
you would layout it okay so they can

00:09:12,529 --> 00:09:17,540
create several apps up to them up to

00:09:14,629 --> 00:09:20,029
your front-end developer so any

00:09:17,540 --> 00:09:25,550
questions so far so are we clear with

00:09:20,029 --> 00:09:29,509
the structure okay so next is we gotta

00:09:25,550 --> 00:09:32,870
go now to the process console next up

00:09:29,509 --> 00:09:35,000
ursa process you can get is full speed

00:09:32,870 --> 00:09:37,970
ahead so you have a fully optimized

00:09:35,000 --> 00:09:40,430
application because I see in WordPress

00:09:37,970 --> 00:09:43,459
this is the first problem for beginner

00:09:40,430 --> 00:09:45,529
the optimization because the

00:09:43,459 --> 00:09:47,149
optimization of WordPress is CD hard for

00:09:45,529 --> 00:09:49,550
beginners because our beginners just

00:09:47,149 --> 00:09:52,519
tend to put plugin plugin plugin plugin

00:09:49,550 --> 00:09:55,670
so it begins the site heavy unlike if

00:09:52,519 --> 00:09:57,379
you saw had this approach your website

00:09:55,670 --> 00:09:59,930
will not be dependent on any external

00:09:57,379 --> 00:10:03,290
driver is all built-in in WordPress

00:09:59,930 --> 00:10:05,720
which is fully optimized you can get the

00:10:03,290 --> 00:10:06,890
information very fast okay the next is

00:10:05,720 --> 00:10:09,620
flexi

00:10:06,890 --> 00:10:12,470
so as I said we have to depend to

00:10:09,620 --> 00:10:14,900
applications back and forward president

00:10:12,470 --> 00:10:16,400
from back it forward press then the

00:10:14,900 --> 00:10:20,860
front end it's up to you what you want

00:10:16,400 --> 00:10:23,890
so you have no the flexibility to

00:10:20,860 --> 00:10:26,540
integrate it to different platforms

00:10:23,890 --> 00:10:28,430
regardless of how what would be the

00:10:26,540 --> 00:10:30,290
front end as long as it can support the

00:10:28,430 --> 00:10:33,080
response the JSON response from

00:10:30,290 --> 00:10:37,460
WordPress you can have the flexibility

00:10:33,080 --> 00:10:39,890
to seamlessly integrate it then if you

00:10:37,460 --> 00:10:43,250
have updates it would not be also too

00:10:39,890 --> 00:10:46,190
difficult to handle since the two are

00:10:43,250 --> 00:10:49,610
acting independently okay next is

00:10:46,190 --> 00:10:51,590
bulletproof so another issue security so

00:10:49,610 --> 00:10:53,960
we'll talk about that later so but

00:10:51,590 --> 00:10:57,200
technically you've been hiding your

00:10:53,960 --> 00:10:59,240
back-end from public access since it's a

00:10:57,200 --> 00:11:01,940
separate application so what we just see

00:10:59,240 --> 00:11:03,380
is the front-end application so the back

00:11:01,940 --> 00:11:06,110
and they don't know where you're getting

00:11:03,380 --> 00:11:07,670
the data so it would be somehow not

00:11:06,110 --> 00:11:12,260
really too hard but at least you would

00:11:07,670 --> 00:11:14,240
give your penetrators some challenge on

00:11:12,260 --> 00:11:16,670
finding where you are getting your data

00:11:14,240 --> 00:11:20,360
from application okay so if there are

00:11:16,670 --> 00:11:24,260
plus there would be cons so you can have

00:11:20,360 --> 00:11:26,930
all in one so next is a you need to be

00:11:24,260 --> 00:11:29,030
jacopo treats so why because as I

00:11:26,930 --> 00:11:30,710
mentioned and like on WordPress you're

00:11:29,030 --> 00:11:32,780
maintaining just one instance of

00:11:30,710 --> 00:11:35,780
application but now you're maintaining

00:11:32,780 --> 00:11:38,720
two so two different applications so you

00:11:35,780 --> 00:11:40,310
need to know how both of those is

00:11:38,720 --> 00:11:43,880
functioning if you would be the one who

00:11:40,310 --> 00:11:45,740
will develop and maintain it because if

00:11:43,880 --> 00:11:47,870
you don't because I believe if you're

00:11:45,740 --> 00:11:50,990
above and developer and you don't know

00:11:47,870 --> 00:11:54,620
how the front-end works it would not

00:11:50,990 --> 00:11:58,520
make sense for the API so applications

00:11:54,620 --> 00:12:00,620
that you're doing so because what would

00:11:58,520 --> 00:12:02,390
happen is example the project I say I

00:12:00,620 --> 00:12:04,160
need this I need this you would just do

00:12:02,390 --> 00:12:06,940
it just do it just do you need to

00:12:04,160 --> 00:12:11,750
understand why they need it because a

00:12:06,940 --> 00:12:14,390
good back-end developer it gets all the

00:12:11,750 --> 00:12:16,310
logic the front-end just consumes

00:12:14,390 --> 00:12:19,430
everything read the example I have this

00:12:16,310 --> 00:12:20,240
experience with my developers that we

00:12:19,430 --> 00:12:22,990
have this

00:12:20,240 --> 00:12:26,420
displaying the price so now the

00:12:22,990 --> 00:12:28,670
tendencies we person launch the

00:12:26,420 --> 00:12:31,429
application for Singapore clients so

00:12:28,670 --> 00:12:34,040
that the currency is seeing dollars

00:12:31,429 --> 00:12:37,069
right then we also have a business

00:12:34,040 --> 00:12:40,550
entity in Kuala Lumpur and you know the

00:12:37,069 --> 00:12:42,529
currency there is Malaysian Ringgit so

00:12:40,550 --> 00:12:45,709
now they don't put the logic on creating

00:12:42,529 --> 00:12:47,660
the currency in the butt and so they put

00:12:45,709 --> 00:12:50,360
it on front end when we deploy so it's

00:12:47,660 --> 00:12:54,050
reflecting sync dollars even we are

00:12:50,360 --> 00:12:56,809
selling an item in Malaysia so that

00:12:54,050 --> 00:12:59,959
that's why you need to go DISA you need

00:12:56,809 --> 00:13:02,779
to get to know both so at least somehow

00:12:59,959 --> 00:13:05,449
the basics so you know what you need to

00:13:02,779 --> 00:13:07,490
be included on your back-end on your

00:13:05,449 --> 00:13:10,009
WordPress how you would structure the

00:13:07,490 --> 00:13:11,899
response for the front end the next is

00:13:10,009 --> 00:13:15,769
as I mentioned being a job all trades

00:13:11,899 --> 00:13:18,290
there would be a learning curve so new

00:13:15,769 --> 00:13:21,170
technologies meaning new challenge so

00:13:18,290 --> 00:13:22,670
example that on you know when you want

00:13:21,170 --> 00:13:24,949
to integrate that on a different

00:13:22,670 --> 00:13:27,199
framework forefront and so as I

00:13:24,949 --> 00:13:29,929
mentioned you also not really need to

00:13:27,199 --> 00:13:32,119
master it but at least get the concept

00:13:29,929 --> 00:13:35,149
get the idea so you know how you would

00:13:32,119 --> 00:13:39,679
build your back-end the nexus you would

00:13:35,149 --> 00:13:41,449
be the utilizing wordpress so so you

00:13:39,679 --> 00:13:43,819
telling me i will be the utilizing

00:13:41,449 --> 00:13:46,910
wordpress so why would i still go with

00:13:43,819 --> 00:13:48,350
the headless thing so the only thing

00:13:46,910 --> 00:13:49,939
that's why i mentioned you with the

00:13:48,350 --> 00:13:53,149
utilized wordpress is you would be

00:13:49,939 --> 00:13:56,149
losing the power of the pacific editor

00:13:53,149 --> 00:13:58,309
and the light preview okay but if you if

00:13:56,149 --> 00:14:01,699
that is not the case on the application

00:13:58,309 --> 00:14:04,970
you're making then even it is a cons you

00:14:01,699 --> 00:14:09,110
can still proceed doing this structure

00:14:04,970 --> 00:14:13,339
okay so having said that so i prepared

00:14:09,110 --> 00:14:16,759
some short demonstration on how you can

00:14:13,339 --> 00:14:19,069
implement a wordpress a headless

00:14:16,759 --> 00:14:21,619
structure on your application so this is

00:14:19,069 --> 00:14:24,649
a actually i'm not trying to do live

00:14:21,619 --> 00:14:26,600
coding already meet the final output so

00:14:24,649 --> 00:14:28,850
we just run through each component the

00:14:26,600 --> 00:14:32,299
front end and the back end then we see

00:14:28,850 --> 00:14:33,340
how this would be beneficial or not to

00:14:32,299 --> 00:14:41,130
our application

00:14:33,340 --> 00:14:46,510
that you are doing okay so axis okay so

00:14:41,130 --> 00:14:48,790
and here familiar with the hero up hero

00:14:46,510 --> 00:14:51,220
up for angular so for angular beginners

00:14:48,790 --> 00:14:53,740
this is the first tutorial that you

00:14:51,220 --> 00:14:57,670
would be meeting so I created this

00:14:53,740 --> 00:15:05,560
simple application that would list out

00:14:57,670 --> 00:15:07,510
all the beta okay with this out a set up

00:15:05,560 --> 00:15:11,130
heroes together with the short

00:15:07,510 --> 00:15:14,860
description and their logo so basically

00:15:11,130 --> 00:15:16,660
the layout is made of angular where do

00:15:14,860 --> 00:15:22,000
we are getting the data we are getting

00:15:16,660 --> 00:15:25,180
the data problem here WordPress back-end

00:15:22,000 --> 00:15:29,710
so the first thing I did I do is I

00:15:25,180 --> 00:15:33,250
created a custom post type which is here

00:15:29,710 --> 00:15:37,080
oh so Dana from this post type our

00:15:33,250 --> 00:15:40,240
application our angular application is

00:15:37,080 --> 00:15:44,530
receiving and displaying the data as is

00:15:40,240 --> 00:15:54,470
so how that thus happens so let's make a

00:15:44,530 --> 00:15:57,950
quick review on the code so okay so oops

00:15:54,470 --> 00:15:57,950
okay ah wait

00:16:05,160 --> 00:16:18,480
okay so I created a plugin why I created

00:16:09,550 --> 00:16:18,480
a plug-in so because okay so

00:16:30,780 --> 00:16:36,370
okay by default this is the endpoint of

00:16:34,450 --> 00:16:39,300
WordPress all the data on your WordPress

00:16:36,370 --> 00:16:44,710
installation is here you just use your

00:16:39,300 --> 00:16:47,140
you just use your domain then slash WP -

00:16:44,710 --> 00:16:50,530
JSON so but do we need this bunch of

00:16:47,140 --> 00:16:52,240
data not right so if you give this to

00:16:50,530 --> 00:16:54,490
your front end developer that hey you

00:16:52,240 --> 00:16:57,040
want all the data all right come and

00:16:54,490 --> 00:16:57,970
filter it so it would not really make

00:16:57,040 --> 00:16:59,980
sense for them

00:16:57,970 --> 00:17:02,230
first rule of plant and developers you

00:16:59,980 --> 00:17:05,890
just give me give me what I need you

00:17:02,230 --> 00:17:08,470
don't give me this kind of a whole bunch

00:17:05,890 --> 00:17:14,829
of things so what we're gonna do is so

00:17:08,470 --> 00:17:17,170
first is we created a plugin so this

00:17:14,829 --> 00:17:19,240
plug-in would hold I created a master

00:17:17,170 --> 00:17:21,459
class with these heroes that would hold

00:17:19,240 --> 00:17:25,360
all the functions so first function is I

00:17:21,459 --> 00:17:26,650
registered a custom post type so if you

00:17:25,360 --> 00:17:29,350
would see it's just like a regular

00:17:26,650 --> 00:17:31,300
custom post type your regular custom

00:17:29,350 --> 00:17:36,310
post type code the only difference is

00:17:31,300 --> 00:17:39,640
this one show in res so meaning it would

00:17:36,310 --> 00:17:42,970
include this on your when you request

00:17:39,640 --> 00:17:45,640
for API in the WordPress so I puree move

00:17:42,970 --> 00:17:47,680
that then those bunch of data that you

00:17:45,640 --> 00:17:51,700
see earlier it will not include this

00:17:47,680 --> 00:17:53,980
post type okay so next one is I just

00:17:51,700 --> 00:17:56,710
created the awesome taxonomy just for

00:17:53,980 --> 00:17:59,830
presentation purposes the next is the

00:17:56,710 --> 00:18:07,230
custom endpoint so let's go back to this

00:17:59,830 --> 00:18:07,230
API okay so technically we have this

00:18:07,960 --> 00:18:15,139
I'm sorry we need to give the the

00:18:12,320 --> 00:18:17,529
front-end developers the exact data they

00:18:15,139 --> 00:18:21,859
want which is when we look at the app

00:18:17,529 --> 00:18:26,509
the name of the superhero the team the

00:18:21,859 --> 00:18:28,609
logo and short description so how do we

00:18:26,509 --> 00:18:31,549
do that on WordPress so we will be

00:18:28,609 --> 00:18:35,029
creating a custom function and put it on

00:18:31,549 --> 00:18:37,219
a hook so verse is this register rest

00:18:35,029 --> 00:18:40,099
out so meaning you would be creating

00:18:37,219 --> 00:18:41,629
your own routes for this one since we

00:18:40,099 --> 00:18:43,729
don't want to use WordPress the pot

00:18:41,629 --> 00:18:47,570
because it has a bunch of data we just

00:18:43,729 --> 00:18:49,159
need a specific portion of that so we

00:18:47,570 --> 00:18:54,139
use that hook then the first parameter

00:18:49,159 --> 00:18:58,460
you put in there is the URL that you

00:18:54,139 --> 00:19:00,589
would be needing the next is the method

00:18:58,460 --> 00:19:02,659
which is if it's a get or post so I

00:19:00,589 --> 00:19:04,519
think I don't need to elaborate what's

00:19:02,659 --> 00:19:06,019
the difference between get and a post so

00:19:04,519 --> 00:19:08,299
for this request you are

00:19:06,019 --> 00:19:10,879
we need to fetch the data so technically

00:19:08,299 --> 00:19:13,639
the method we will be using is yep and

00:19:10,879 --> 00:19:16,159
then exes why do we have a callback so

00:19:13,639 --> 00:19:19,549
the callback would give you the

00:19:16,159 --> 00:19:21,859
structure or peer response so if you see

00:19:19,549 --> 00:19:25,700
get all heroes so I created a separate

00:19:21,859 --> 00:19:31,099
function here for that one then if you

00:19:25,700 --> 00:19:34,960
would see I make a because I made a WP

00:19:31,099 --> 00:19:40,159
query function here to query all the

00:19:34,960 --> 00:19:44,899
post type with with the publish status

00:19:40,159 --> 00:19:47,509
and the permission is readable okay so

00:19:44,899 --> 00:19:50,960
this one is a sub explanatory thing so

00:19:47,509 --> 00:19:52,729
we created the JSON response here the

00:19:50,960 --> 00:19:56,779
first response will have the parameter

00:19:52,729 --> 00:19:59,659
of title which would and be fed with the

00:19:56,779 --> 00:20:02,869
get the title function which technically

00:19:59,659 --> 00:20:05,179
gets the post title the next thing is

00:20:02,869 --> 00:20:07,519
getting the post content so get post

00:20:05,179 --> 00:20:11,450
field post content so I put it on the

00:20:07,519 --> 00:20:14,779
description parameter the Nexus we need

00:20:11,450 --> 00:20:17,629
to get the image so I just use the

00:20:14,779 --> 00:20:20,029
WordPress featured image so we can we

00:20:17,629 --> 00:20:20,880
not introduce a new custom field since

00:20:20,029 --> 00:20:23,970
it's already built

00:20:20,880 --> 00:20:26,580
in there so I just get the URL from that

00:20:23,970 --> 00:20:29,610
then next is the tags which is which

00:20:26,580 --> 00:20:40,080
team this superhero came then this would

00:20:29,610 --> 00:20:47,010
be the sample response okay let's go

00:20:40,080 --> 00:20:51,090
back to the query okay so here you go

00:20:47,010 --> 00:20:53,760
okay so from a bunch of very very big

00:20:51,090 --> 00:20:56,130
data we were able to filter out it with

00:20:53,760 --> 00:21:00,890
what we really need so the title the

00:20:56,130 --> 00:21:04,380
description the thumbnail and the tags

00:21:00,890 --> 00:21:07,380
then now just an anger you just need to

00:21:04,380 --> 00:21:11,370
give this endpoint from the super heat

00:21:07,380 --> 00:21:13,400
up from the caduceus you need to give

00:21:11,370 --> 00:21:16,140
this endpoint to the front-end developer

00:21:13,400 --> 00:21:21,300
so when he started to code your

00:21:16,140 --> 00:21:23,810
application so we just need to integrate

00:21:21,300 --> 00:21:23,810
this

00:21:27,980 --> 00:21:33,570
okay so you see just just calls this

00:21:30,810 --> 00:21:37,050
function and then it Maps whatever

00:21:33,570 --> 00:21:38,160
output do we want it so we see the hero

00:21:37,050 --> 00:21:41,370
so if I change

00:21:38,160 --> 00:21:51,380
Superman's name let's say okay let's

00:21:41,370 --> 00:21:51,380
edit let's see x-men

00:21:53,550 --> 00:22:05,030
Oh what's happened Rita I'm not running

00:21:59,310 --> 00:22:09,920
my angular up sorry yeah okay let's come

00:22:05,030 --> 00:22:09,920
let's run our angular up Oh

00:22:14,199 --> 00:22:24,949
okay building building okay so you see

00:22:21,349 --> 00:22:27,709
prob Superman it became expand so that's

00:22:24,949 --> 00:22:30,649
how headless WordPress is being

00:22:27,709 --> 00:22:32,869
implemented you would be just utilizing

00:22:30,649 --> 00:22:35,119
your WordPress just for those back-end

00:22:32,869 --> 00:22:37,519
things like updating the basic root

00:22:35,119 --> 00:22:39,849
operation create read update delete then

00:22:37,519 --> 00:22:41,359
for display you work out a separate

00:22:39,849 --> 00:22:45,049
framework either

00:22:41,359 --> 00:22:51,919
angular or whatever thing you need so

00:22:45,049 --> 00:22:55,459
now having said that so all right let's

00:22:51,919 --> 00:22:58,819
go pursue the security so I just have

00:22:55,459 --> 00:23:00,559
here two points that you need to do this

00:22:58,819 --> 00:23:03,759
is just the basic so I think we have a

00:23:00,559 --> 00:23:07,009
separate top for security maybe you can

00:23:03,759 --> 00:23:09,529
cut you can channel your questions to

00:23:07,009 --> 00:23:11,569
the one who assigned to that so but

00:23:09,529 --> 00:23:13,699
these are just the basic that you need

00:23:11,569 --> 00:23:15,979
to know when integrating had this

00:23:13,699 --> 00:23:19,849
wordpress vs. de course are you familiar

00:23:15,979 --> 00:23:21,469
with course cross-origin error so this

00:23:19,849 --> 00:23:23,659
is happening when the request from

00:23:21,469 --> 00:23:26,359
astatine endpoint is coming from a

00:23:23,659 --> 00:23:28,669
different domain so it's a basic

00:23:26,359 --> 00:23:32,359
security observers that's implementing

00:23:28,669 --> 00:23:35,809
so but if you put this certain code on

00:23:32,359 --> 00:23:39,769
your on your application so it would

00:23:35,809 --> 00:23:42,079
allow accessing of your application to

00:23:39,769 --> 00:23:45,289
whatever domain your front-end

00:23:42,079 --> 00:23:47,869
application is hosted the next is this

00:23:45,289 --> 00:23:50,419
one this is the most important helping

00:23:47,869 --> 00:23:53,539
your api tokenized so the one i made i

00:23:50,419 --> 00:23:58,429
showed you last earlier was not tokenize

00:23:53,539 --> 00:24:00,259
so if that has a post method so if they

00:23:58,429 --> 00:24:03,889
know the end point they might abuse it

00:24:00,259 --> 00:24:05,239
and post redundant or unusual things to

00:24:03,889 --> 00:24:07,249
your application feeding your

00:24:05,239 --> 00:24:09,979
application with malicious information

00:24:07,249 --> 00:24:12,799
but if you have this tokenization that

00:24:09,979 --> 00:24:14,959
before processing the request it would

00:24:12,799 --> 00:24:17,779
match the token from the source to your

00:24:14,959 --> 00:24:20,269
WordPress site then if the token matches

00:24:17,779 --> 00:24:22,519
that's only the time that it would

00:24:20,269 --> 00:24:25,980
process the request if it's not matching

00:24:22,519 --> 00:24:30,960
then it would reject the request so

00:24:25,980 --> 00:24:33,890
to be specific that is GWT or the

00:24:30,960 --> 00:24:38,610
meaning I forgot who knows about GWT

00:24:33,890 --> 00:24:41,280
JSON web token yeah how about for him

00:24:38,610 --> 00:24:45,210
here embrace haha thanks for saving my

00:24:41,280 --> 00:24:48,059
ass anyway so ah so those are the two

00:24:45,210 --> 00:24:51,750
key points but that I just know basic so

00:24:48,059 --> 00:24:54,030
you need to ensure other stuffs basic

00:24:51,750 --> 00:24:57,120
stuffs on WordPress like hiding your WP

00:24:54,030 --> 00:25:01,980
admin should still be followed ok so

00:24:57,120 --> 00:25:04,110
next so having all that information on

00:25:01,980 --> 00:25:06,840
your hand now should you go to headless

00:25:04,110 --> 00:25:09,090
WordPress or not so here are the three

00:25:06,840 --> 00:25:12,090
things you need to consider purchase the

00:25:09,090 --> 00:25:15,299
costs so having maintaining two

00:25:12,090 --> 00:25:18,630
applications meaning you need to spend

00:25:15,299 --> 00:25:20,730
more because let's say purse on the

00:25:18,630 --> 00:25:22,650
developer if you are not good at

00:25:20,730 --> 00:25:25,290
front-end then you need to hire a

00:25:22,650 --> 00:25:27,210
front-end developer then if your server

00:25:25,290 --> 00:25:30,090
can't accommodate two applications you

00:25:27,210 --> 00:25:32,160
need to buy or create a new instance of

00:25:30,090 --> 00:25:34,169
server for your front-end application so

00:25:32,160 --> 00:25:37,679
those are the things that you need to

00:25:34,169 --> 00:25:40,020
consider in costing next would be the

00:25:37,679 --> 00:25:41,760
multi channel publishing so this is the

00:25:40,020 --> 00:25:46,650
one I'm mentioning earlier that if you

00:25:41,760 --> 00:25:50,250
want to publish your information or your

00:25:46,650 --> 00:25:52,260
API through multi channels so headless

00:25:50,250 --> 00:25:55,880
WordPress is the best approach for you

00:25:52,260 --> 00:25:59,429
the next would be the maintenance so

00:25:55,880 --> 00:26:01,200
basically if your site depends on daily

00:25:59,429 --> 00:26:03,660
maintenance performed by users

00:26:01,200 --> 00:26:05,910
unfamiliar with coding and coding basics

00:26:03,660 --> 00:26:08,130
you may prepare to stick with the

00:26:05,910 --> 00:26:12,120
original implementation of WordPress or

00:26:08,130 --> 00:26:14,190
better hire a developer to help you set

00:26:12,120 --> 00:26:17,280
everything up and prepare or prepare

00:26:14,190 --> 00:26:21,140
your hands to get dirty so it's up to

00:26:17,280 --> 00:26:25,470
you if you want to this is exciting a

00:26:21,140 --> 00:26:27,419
feature of WordPress so if up deep you

00:26:25,470 --> 00:26:30,750
want to explore it or not so but still

00:26:27,419 --> 00:26:34,500
it would depend on the needs of your

00:26:30,750 --> 00:26:38,730
clients so I think that wraps up my talk

00:26:34,500 --> 00:26:43,179
so selamat it's thank you in English so

00:26:38,730 --> 00:26:47,180
remember wordpress code code this poetry

00:26:43,179 --> 00:26:52,150
okay so thank you very much

00:26:47,180 --> 00:26:52,150
[Applause]

00:26:59,910 --> 00:27:01,910
Oh

00:27:07,720 --> 00:27:13,759
you awkwardly subplot sock so this

00:27:11,870 --> 00:27:15,769
application is I mean this

00:27:13,759 --> 00:27:19,129
implementation of WordPress is marked on

00:27:15,769 --> 00:27:22,129
the back end so poor SEO thing if you're

00:27:19,129 --> 00:27:24,440
asking about SEO things oh yeah when we

00:27:22,129 --> 00:27:27,860
try to do this on one of our

00:27:24,440 --> 00:27:29,840
applications so it's a main issue with I

00:27:27,860 --> 00:27:31,879
will not name the framework the

00:27:29,840 --> 00:27:34,519
front-end framework but it if you're

00:27:31,879 --> 00:27:36,049
using a JavaScript based framework so

00:27:34,519 --> 00:27:39,169
because we all know javascript is a

00:27:36,049 --> 00:27:41,240
client-side rendering and Google can

00:27:39,169 --> 00:27:44,450
crawl or read that so it would be a big

00:27:41,240 --> 00:27:47,029
issue with SEO you need to dig in some

00:27:44,450 --> 00:27:49,999
technical knowledge in order to overcome

00:27:47,029 --> 00:27:52,460
or implement a successful SEO campaign

00:27:49,999 --> 00:27:53,960
if you would be but would still depend

00:27:52,460 --> 00:27:55,940
on the front-end framework that you

00:27:53,960 --> 00:27:59,570
choose but for WordPress let's say if

00:27:55,940 --> 00:28:03,259
you install the basic plugins for SEO it

00:27:59,570 --> 00:28:05,659
would not be really essential since you

00:28:03,259 --> 00:28:08,029
will not be using WordPress as a

00:28:05,659 --> 00:28:10,759
front-end it would be merely isolated as

00:28:08,029 --> 00:28:13,070
a back-end so for SEO it would depend on

00:28:10,759 --> 00:28:15,580
the front-end application that you would

00:28:13,070 --> 00:28:15,580
be using

00:28:17,860 --> 00:28:31,600
and the question I'm Carl what the

00:28:27,269 --> 00:28:33,390
digitally nothing could be crying news

00:28:31,600 --> 00:28:37,299
we want it organized

00:28:33,390 --> 00:28:40,269
okay so pour the JWT plugin not to brag

00:28:37,299 --> 00:28:42,820
about but I'm not letting my developer

00:28:40,269 --> 00:28:46,149
use a plug-in for that one we are using

00:28:42,820 --> 00:28:49,149
our own tokenization just to be secured

00:28:46,149 --> 00:28:52,870
because it's not that I don't have trust

00:28:49,149 --> 00:28:56,559
using a security security plugins out

00:28:52,870 --> 00:29:01,960
online but let's say that if you are

00:28:56,559 --> 00:29:04,240
publishing any uh because this any for

00:29:01,960 --> 00:29:06,970
this any sensitive contents on your

00:29:04,240 --> 00:29:10,240
application so I might recommend that

00:29:06,970 --> 00:29:12,039
not going through usual plugin if you

00:29:10,240 --> 00:29:14,519
can create your own tokenization better

00:29:12,039 --> 00:29:17,529
it's just an easy ones just you need to

00:29:14,519 --> 00:29:20,860
Tony you can use WordPress salts for

00:29:17,529 --> 00:29:22,809
this one you can extend that one so you

00:29:20,860 --> 00:29:24,760
don't really need to add to do plugins

00:29:22,809 --> 00:29:27,039
as I mentioned if WordPress gives you

00:29:24,760 --> 00:29:32,980
this and you're doing development then

00:29:27,039 --> 00:29:36,580
you can go decide you can utilize it so

00:29:32,980 --> 00:29:39,279
at least it's like a wordpress is giving

00:29:36,580 --> 00:29:41,320
you this so why not utilize it so but if

00:29:39,279 --> 00:29:44,019
you can suggest any other trip you are

00:29:41,320 --> 00:29:45,970
using any other plugins or no issue

00:29:44,019 --> 00:29:49,809
about that as long as you find it secure

00:29:45,970 --> 00:29:52,059
then the thing is you're getting your

00:29:49,809 --> 00:29:54,370
connection with the API calls securely

00:29:52,059 --> 00:29:57,429
no problem with that but for me when it

00:29:54,370 --> 00:30:03,490
comes to security I am so so with using

00:29:57,429 --> 00:30:06,039
plugins okay I was just about to suggest

00:30:03,490 --> 00:30:09,210
no questions I got Ian just thought that

00:30:06,039 --> 00:30:09,210
you wanted to show

00:30:13,530 --> 00:30:21,460
please Lucy use for this making this us

00:30:16,780 --> 00:30:25,480
like actually uh

00:30:21,460 --> 00:30:30,040
I was using Prezi is like Prezi Prezi F

00:30:25,480 --> 00:30:33,010
a PR easy I so because I pine PowerPoint

00:30:30,040 --> 00:30:35,560
boring because based on my not reaiiy

00:30:33,010 --> 00:30:37,270
depends on how the speakers approach but

00:30:35,560 --> 00:30:39,400
that's what I observed when I'm

00:30:37,270 --> 00:30:42,010
presenting so I'm just using Microsoft

00:30:39,400 --> 00:30:44,170
they just sent two of it okay okay and I

00:30:42,010 --> 00:30:46,030
can press E you get DC looking

00:30:44,170 --> 00:30:48,520
everywhere sometime the slide goes up

00:30:46,030 --> 00:30:52,390
this so just use it just to get

00:30:48,520 --> 00:30:53,890
attention of the the the crowd so at

00:30:52,390 --> 00:30:56,950
least they are when you see when things

00:30:53,890 --> 00:31:01,620
are moving so your so use also get the

00:30:56,950 --> 00:31:01,620
attention of the people thank you

00:31:04,100 --> 00:31:10,230
we don't know when you deployed the

00:31:06,660 --> 00:31:14,630
request for Hitler's the front end of

00:31:10,230 --> 00:31:14,630
the course therefore better still there

00:31:14,990 --> 00:31:21,480
okay so per that one so basically uh

00:31:17,820 --> 00:31:23,580
because this uh we are not really

00:31:21,480 --> 00:31:25,650
killing the teams who are staying it as

00:31:23,580 --> 00:31:28,590
is but the server were deploying it is

00:31:25,650 --> 00:31:30,990
an isolated one so it's not available

00:31:28,590 --> 00:31:34,320
for public viewing so if they tried to

00:31:30,990 --> 00:31:37,140
build it what is that domain so they

00:31:34,320 --> 00:31:40,020
would be redirected to the front and

00:31:37,140 --> 00:31:41,760
we're doing the because we're doing that

00:31:40,020 --> 00:31:44,400
kind of mechanism so you can't really

00:31:41,760 --> 00:31:48,810
take away the protein part because it's

00:31:44,400 --> 00:31:52,190
part of the WordPress installation yeah

00:31:48,810 --> 00:31:54,240
you can see yeah so yeah that would be

00:31:52,190 --> 00:31:56,850
beneficial if he would also be using

00:31:54,240 --> 00:31:58,440
multi channel publishing example you

00:31:56,850 --> 00:32:01,560
have my website and you have a mobile

00:31:58,440 --> 00:32:03,810
application then because I have this one

00:32:01,560 --> 00:32:06,570
client before that yes oh well I'm

00:32:03,810 --> 00:32:09,810
developing his WordPress website then he

00:32:06,570 --> 00:32:12,510
hide the external mobile app developer

00:32:09,810 --> 00:32:15,600
so his goal is if I publish something on

00:32:12,510 --> 00:32:18,260
the website the mobile app should do it

00:32:15,600 --> 00:32:21,510
then now I don't know he has a very lazy

00:32:18,260 --> 00:32:23,880
mobile app developer told me a great API

00:32:21,510 --> 00:32:25,560
just consume it it's not that every time

00:32:23,880 --> 00:32:29,460
you place I was update so I find it

00:32:25,560 --> 00:32:31,950
sensible so but then lazy guy I'm doing

00:32:29,460 --> 00:32:35,010
outdoor work so but then ah seriously

00:32:31,950 --> 00:32:36,810
speaking yeah you can retain the you can

00:32:35,010 --> 00:32:38,340
retain the front-end for your website

00:32:36,810 --> 00:32:41,490
then if you want to publish on

00:32:38,340 --> 00:32:44,730
applications so that's the time you this

00:32:41,490 --> 00:32:46,770
headless set up would be working because

00:32:44,730 --> 00:32:49,890
you need to update on just one instance

00:32:46,770 --> 00:32:52,230
then everything website external mobile

00:32:49,890 --> 00:32:54,930
or whatever applications that needs that

00:32:52,230 --> 00:33:00,810
information to be updated would also get

00:32:54,930 --> 00:33:02,880
the information I'm not really sure on

00:33:00,810 --> 00:33:07,340
that one because I haven't tried it yet

00:33:02,880 --> 00:33:07,340
but maybe let's see

00:33:07,680 --> 00:33:19,260
I asked for accommodation and I like

00:33:12,590 --> 00:33:21,150
right yep Latino totally yeah yeah

00:33:19,260 --> 00:33:23,370
actually there is something like that

00:33:21,150 --> 00:33:28,530
but it's kinda too technical that's why

00:33:23,370 --> 00:33:31,380
I don't include its a built-in in

00:33:28,530 --> 00:33:33,450
WordPress are you are you familiar with

00:33:31,380 --> 00:33:35,250
transient inverted yeah you would

00:33:33,450 --> 00:33:37,380
utilize that functionality of WordPress

00:33:35,250 --> 00:33:39,720
because the main issue is if you're

00:33:37,380 --> 00:33:43,080
getting a big chunk of data so the

00:33:39,720 --> 00:33:46,800
response would be really not read too

00:33:43,080 --> 00:33:49,290
slow but kind of not acceptable to the

00:33:46,800 --> 00:33:50,850
standards so that comes now distractions

00:33:49,290 --> 00:33:55,550
and caching thing that WordPress has

00:33:50,850 --> 00:33:55,550
built in you can fully utilize that one

00:34:06,920 --> 00:34:10,929

YouTube URL: https://www.youtube.com/watch?v=m6y4KpftxUw


