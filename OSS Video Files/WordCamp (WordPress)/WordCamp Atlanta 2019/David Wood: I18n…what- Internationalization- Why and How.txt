Title: David Wood: I18nâ€¦what- Internationalization- Why and How
Publication date: 2019-09-08
Playlist: WordCamp Atlanta 2019
Description: 
	Internationalization (I18n) is important for plugins and themes as it helps your published plugin or theme reach international audiences. How do you internationalize your themes and plugins? Why is it important? Why should you care? Come find out these answers and how to get started internationalizing your themes and plugins. We will look at practical steps and real code to see how everything fits together.

WPTV link: https://wordpress.tv/2019/06/27/david-wood-i18nwhat-internationalization-why-and-how/
Captions: 
	00:00:00,470 --> 00:00:04,200
[Applause]

00:00:02,540 --> 00:00:06,720
okay

00:00:04,200 --> 00:00:09,150
yeah and anyone that wants a copy of the

00:00:06,720 --> 00:00:12,660
slides they should be on my blog post

00:00:09,150 --> 00:00:14,940
live on my website right now so you can

00:00:12,660 --> 00:00:15,509
go download them follow along look at

00:00:14,940 --> 00:00:17,820
them later

00:00:15,509 --> 00:00:19,560
I've also all the resources that have at

00:00:17,820 --> 00:00:23,810
the end of the presentation are also

00:00:19,560 --> 00:00:27,300
linked from my blog post and in the PDF

00:00:23,810 --> 00:00:29,279
so you can go get all the resources that

00:00:27,300 --> 00:00:32,130
I've used to learn most of what I know

00:00:29,279 --> 00:00:34,170
and other resources I found useful as I

00:00:32,130 --> 00:00:38,940
continue learning how to properly

00:00:34,170 --> 00:00:40,649
internationalize code so the biggest

00:00:38,940 --> 00:00:43,879
question that I think a lot of people

00:00:40,649 --> 00:00:46,500
run into is what is it

00:00:43,879 --> 00:00:49,079
so internationalization is the process

00:00:46,500 --> 00:00:51,480
of writing code so that it can be

00:00:49,079 --> 00:00:55,949
translated into other languages at a

00:00:51,480 --> 00:00:56,730
future time and so with that there's the

00:00:55,949 --> 00:01:00,710
important distinction between

00:00:56,730 --> 00:01:02,399
internationalization and localization so

00:01:00,710 --> 00:01:04,350
internalization is getting everything

00:01:02,399 --> 00:01:05,939
ready to translate localization is the

00:01:04,350 --> 00:01:08,549
process of actually translating your

00:01:05,939 --> 00:01:10,350
code the abbreviations used in the

00:01:08,549 --> 00:01:14,250
WordPress community internationalization

00:01:10,350 --> 00:01:17,939
is abbreviated I 18 in and localization

00:01:14,250 --> 00:01:20,040
is abbreviated L 10 in the numbers

00:01:17,939 --> 00:01:22,320
represent how many letters are between

00:01:20,040 --> 00:01:25,619
the first and last letter in the word so

00:01:22,320 --> 00:01:32,540
it's it's incredibly complicated how

00:01:25,619 --> 00:01:35,310
they came up with that so but then

00:01:32,540 --> 00:01:40,049
probably the biggest question is why

00:01:35,310 --> 00:01:44,970
should you care and yes I did not update

00:01:40,049 --> 00:01:46,590
my memes since three years ago so over

00:01:44,970 --> 00:01:49,280
48 percent of WordPress installations

00:01:46,590 --> 00:01:54,030
are in a language other than English

00:01:49,280 --> 00:01:57,240
with that said less than half are in

00:01:54,030 --> 00:02:00,810
American English so you have to figure

00:01:57,240 --> 00:02:04,380
in there's British English South Africa

00:02:00,810 --> 00:02:07,439
New Zealand Australia Canada all of

00:02:04,380 --> 00:02:10,260
those have some variation where there is

00:02:07,439 --> 00:02:14,290
some level of translation

00:02:10,260 --> 00:02:17,439
so with American English being the most

00:02:14,290 --> 00:02:19,629
popular at 47% does anyone have any idea

00:02:17,439 --> 00:02:25,360
what the second most popular language is

00:02:19,629 --> 00:02:27,129
in the WordPress community so actually

00:02:25,360 --> 00:02:30,250
you might be right with Spanish but I

00:02:27,129 --> 00:02:32,079
did not take the time to total up all of

00:02:30,250 --> 00:02:33,250
the different Spanish translation I like

00:02:32,079 --> 00:02:37,720
all the different variations in Spanish

00:02:33,250 --> 00:02:40,150
so it probably is Spanish but by single

00:02:37,720 --> 00:02:43,000
language language category it is

00:02:40,150 --> 00:02:46,090
Japanese which accounts for 5.9 percent

00:02:43,000 --> 00:02:48,609
of WordPress installs and all of that

00:02:46,090 --> 00:02:54,730
came from wordpress.org on their

00:02:48,609 --> 00:02:59,950
statistics page so how do i

00:02:54,730 --> 00:03:01,599
internationalize my code the first step

00:02:59,950 --> 00:03:05,349
is if you're writing a theme or a

00:03:01,599 --> 00:03:08,349
plug-in is in the plug-in or themes

00:03:05,349 --> 00:03:12,280
header you just add the text domain and

00:03:08,349 --> 00:03:14,889
the domain path lines and that kind of

00:03:12,280 --> 00:03:18,849
starts the process if you're especially

00:03:14,889 --> 00:03:20,199
if your code if you're if you were to

00:03:18,849 --> 00:03:22,569
plug in and you've released it on

00:03:20,199 --> 00:03:24,849
wordpress.org having the text domain

00:03:22,569 --> 00:03:26,709
defined is one of the most important

00:03:24,849 --> 00:03:29,859
steps it's not the only step but it's

00:03:26,709 --> 00:03:33,519
one of the important ones and in that

00:03:29,859 --> 00:03:35,949
particular case to your text domain

00:03:33,519 --> 00:03:40,120
should match the slug of your plug-in or

00:03:35,949 --> 00:03:41,799
theme so if your plug-in name is my

00:03:40,120 --> 00:03:44,319
awesome plug-in and you can view it on

00:03:41,799 --> 00:03:46,599
wordpress.org slash plugins slash my

00:03:44,319 --> 00:03:49,540
awesome plug-in my awesome plug-in would

00:03:46,599 --> 00:03:52,090
be your text domain if you do not do

00:03:49,540 --> 00:03:54,459
that on things released on wordpress.org

00:03:52,090 --> 00:03:57,430
it does make the automatic translation

00:03:54,459 --> 00:03:59,979
through translate wordpress.org a little

00:03:57,430 --> 00:04:02,949
bit more difficult to be done

00:03:59,979 --> 00:04:04,989
automatically behind the scenes and as a

00:04:02,949 --> 00:04:07,239
plugin developer or a theme developer

00:04:04,989 --> 00:04:09,370
you get that essentially for free the

00:04:07,239 --> 00:04:11,379
community can go translate into whatever

00:04:09,370 --> 00:04:14,139
language they have a desire for it to be

00:04:11,379 --> 00:04:16,389
in and it all happens behind the scenes

00:04:14,139 --> 00:04:18,459
and as long as your code set up right

00:04:16,389 --> 00:04:22,469
you don't have to touch it again to keep

00:04:18,459 --> 00:04:22,469
it all working and get it all translated

00:04:22,720 --> 00:04:28,540
the second important thing to do is to

00:04:25,240 --> 00:04:30,550
actually load your translations so it's

00:04:28,540 --> 00:04:33,580
a little it's a little different in both

00:04:30,550 --> 00:04:36,000
plugins and themes in plugins you'd use

00:04:33,580 --> 00:04:40,860
the load plug-in text domain function on

00:04:36,000 --> 00:04:43,780
the plugins loaded action hook excuse me

00:04:40,860 --> 00:04:47,980
and for themes you'd simply just use

00:04:43,780 --> 00:04:50,919
load theme text domain the arguments

00:04:47,980 --> 00:04:53,919
those take will vary based on exactly

00:04:50,919 --> 00:05:13,440
how your codes organized and what you're

00:04:53,919 --> 00:05:17,290
writing yes so that's a good question

00:05:13,440 --> 00:05:19,000
the code is not linking necessarily

00:05:17,290 --> 00:05:22,810
directly to files that have all the

00:05:19,000 --> 00:05:24,250
translations in the case of a plug-in

00:05:22,810 --> 00:05:27,460
that you release on wordpress.org you

00:05:24,250 --> 00:05:29,740
would actually only need to specify the

00:05:27,460 --> 00:05:32,410
first argument on the low load plug-in

00:05:29,740 --> 00:05:34,180
text domain function and that would

00:05:32,410 --> 00:05:36,250
allow it to automatically load any

00:05:34,180 --> 00:05:39,580
translations from translate that

00:05:36,250 --> 00:05:41,430
wordpress.org it would know from that

00:05:39,580 --> 00:05:44,440
but if you're ever packaging

00:05:41,430 --> 00:05:47,110
translations with your code then you

00:05:44,440 --> 00:05:49,360
would need to excuse me you need to

00:05:47,110 --> 00:05:52,300
specify the path where those translation

00:05:49,360 --> 00:05:54,190
files live so that they can be loaded

00:05:52,300 --> 00:05:56,110
I'll cover a little bit more of that

00:05:54,190 --> 00:05:57,940
towards the end of the talk just kind of

00:05:56,110 --> 00:06:01,120
what what it actually looks like to

00:05:57,940 --> 00:06:02,680
translate you know go from the code to

00:06:01,120 --> 00:06:09,669
actually translate it into another

00:06:02,680 --> 00:06:11,320
language so but this getting the load

00:06:09,669 --> 00:06:12,880
plug-in text domain or load theme text

00:06:11,320 --> 00:06:17,260
domain functions called

00:06:12,880 --> 00:06:20,160
and up and set up correctly that is what

00:06:17,260 --> 00:06:22,930
actually will load your translations and

00:06:20,160 --> 00:06:26,770
so without that it's really difficult to

00:06:22,930 --> 00:06:28,960
actually see any changes so we move on

00:06:26,770 --> 00:06:31,570
to the functions that you would use as a

00:06:28,960 --> 00:06:34,460
developer in your code to actually have

00:06:31,570 --> 00:06:37,130
everything be able to be translated

00:06:34,460 --> 00:06:40,220
so for basic string translation you'd

00:06:37,130 --> 00:06:42,770
use the double underscore function it's

00:06:40,220 --> 00:06:46,220
literally two underscores it also has a

00:06:42,770 --> 00:06:49,120
variation where you specify underscore E

00:06:46,220 --> 00:06:53,930
and it is equivalent to just echoing the

00:06:49,120 --> 00:06:55,520
double underscore function both of those

00:06:53,930 --> 00:06:57,950
functions have take two arguments the

00:06:55,520 --> 00:07:03,650
first is your text and the second is

00:06:57,950 --> 00:07:06,320
your text domain and also it's very

00:07:03,650 --> 00:07:08,960
useful for everybody involved if you

00:07:06,320 --> 00:07:12,470
avoid using HTML in your strings there

00:07:08,960 --> 00:07:16,760
are ways to use it's there's ways to use

00:07:12,470 --> 00:07:18,770
HTML in your strings but it's not

00:07:16,760 --> 00:07:21,650
terribly useful to have it always

00:07:18,770 --> 00:07:24,440
hard-coded into your string that then

00:07:21,650 --> 00:07:26,000
goes to a translator translators don't

00:07:24,440 --> 00:07:29,840
necessarily need the ability to

00:07:26,000 --> 00:07:35,830
manipulate your markup they should be

00:07:29,840 --> 00:07:38,300
translating texts not editing code so

00:07:35,830 --> 00:07:41,990
but then you should also help the

00:07:38,300 --> 00:07:43,960
translators so be wary of words that

00:07:41,990 --> 00:07:47,330
have more than one meaning in English

00:07:43,960 --> 00:07:49,840
and if you use them clarify what their

00:07:47,330 --> 00:07:54,560
use is a good example is the word post

00:07:49,840 --> 00:07:57,620
it could be a actual fence post

00:07:54,560 --> 00:08:00,110
it could be a blog post or you could be

00:07:57,620 --> 00:08:01,460
posting something to a website and the

00:08:00,110 --> 00:08:06,050
process of actually submitting to the

00:08:01,460 --> 00:08:09,470
information and so there is the

00:08:06,050 --> 00:08:12,560
underscore X function which takes a

00:08:09,470 --> 00:08:14,270
third argument so text domain gets moved

00:08:12,560 --> 00:08:19,100
to be the third argument in the second

00:08:14,270 --> 00:08:21,470
argument is the context and so you can

00:08:19,100 --> 00:08:25,850
specify it's a noun it's a verb you

00:08:21,470 --> 00:08:29,870
could specify that it's menu text you

00:08:25,850 --> 00:08:33,020
could specify that it is the single

00:08:29,870 --> 00:08:36,400
version of a post type name and all that

00:08:33,020 --> 00:08:39,650
does is help the translators know what

00:08:36,400 --> 00:08:43,960
the intent is in the word what it means

00:08:39,650 --> 00:08:47,320
and more importantly in the case here

00:08:43,960 --> 00:08:50,080
you have post it could be a noun or verb

00:08:47,320 --> 00:08:51,400
if it's differentiated the translators

00:08:50,080 --> 00:08:53,410
actually see that as two separate

00:08:51,400 --> 00:08:56,380
strings to translate even though the

00:08:53,410 --> 00:08:57,550
text is identical in English translators

00:08:56,380 --> 00:09:00,370
get to translate it two different ways

00:08:57,550 --> 00:09:05,160
so that when it's in their language and

00:09:00,370 --> 00:09:05,160
they're reading it it makes sense yes

00:09:06,540 --> 00:09:11,410
there is not really a glossary for

00:09:09,040 --> 00:09:12,550
watching pop into context it is my

00:09:11,410 --> 00:09:15,400
understanding this is just an open-ended

00:09:12,550 --> 00:09:21,330
opening string my example may not be the

00:09:15,400 --> 00:09:23,920
best to reflect that but yeah so it

00:09:21,330 --> 00:09:26,410
intent of it is to provide context and

00:09:23,920 --> 00:09:29,590
so as long as what you put in there

00:09:26,410 --> 00:09:32,130
provides that context then I don't think

00:09:29,590 --> 00:09:35,170
it really matters what you put in there

00:09:32,130 --> 00:09:36,790
and there is also a version of the

00:09:35,170 --> 00:09:42,940
underscore X function that will echo as

00:09:36,790 --> 00:09:44,830
well and then oh yeah the word post

00:09:42,940 --> 00:09:49,450
could be translated as article or submit

00:09:44,830 --> 00:09:51,760
depending on context but seriously how

00:09:49,450 --> 00:09:54,420
about the translators so other things

00:09:51,760 --> 00:09:57,490
that you do that are cool is if you do a

00:09:54,420 --> 00:10:00,460
comment right before the line that

00:09:57,490 --> 00:10:02,650
comment will actually appear in the

00:10:00,460 --> 00:10:05,950
files for the translators to see when

00:10:02,650 --> 00:10:08,620
they're translating so especially the

00:10:05,950 --> 00:10:12,670
second UK use case the text that was

00:10:08,620 --> 00:10:14,130
totally wicked not everyone especially

00:10:12,670 --> 00:10:17,080
English is not their first language

00:10:14,130 --> 00:10:19,360
would understand what wicked would mean

00:10:17,080 --> 00:10:22,750
in that use case they might think oh

00:10:19,360 --> 00:10:24,790
that was evil why was the evil but know

00:10:22,750 --> 00:10:28,450
that you know it was something cool was

00:10:24,790 --> 00:10:33,610
excellent is wonderful and yes I did

00:10:28,450 --> 00:10:35,440
steal that from The Incredibles so you

00:10:33,610 --> 00:10:39,810
know what your text means make sure your

00:10:35,440 --> 00:10:39,810
translators know what it means as well

00:10:40,380 --> 00:10:46,950
then you get into escaping and escaping

00:10:44,410 --> 00:10:49,930
actually applies to far more than just

00:10:46,950 --> 00:10:53,710
translated strings but you should never

00:10:49,930 --> 00:10:56,590
trust User Content if a user has entered

00:10:53,710 --> 00:10:58,810
in text onto a site some way shape or

00:10:56,590 --> 00:11:01,360
form it should be validated to make sure

00:10:58,810 --> 00:11:04,300
it's safe WordPress by default

00:11:01,360 --> 00:11:06,820
does this by running content through the

00:11:04,300 --> 00:11:08,080
dopey cases post function which will do

00:11:06,820 --> 00:11:10,060
things like make sure it doesn't have

00:11:08,080 --> 00:11:12,850
script tags in it make sure it doesn't

00:11:10,060 --> 00:11:15,010
have a frames things that could commonly

00:11:12,850 --> 00:11:16,840
be used potentially to carry out to

00:11:15,010 --> 00:11:19,660
cross-site scripting attacks or other

00:11:16,840 --> 00:11:24,490
attacks on a website by disallowing

00:11:19,660 --> 00:11:26,500
those for general editors you avoid a

00:11:24,490 --> 00:11:30,220
lot of security holes in your

00:11:26,500 --> 00:11:33,220
application so if your string should

00:11:30,220 --> 00:11:36,400
never have HTML in it you can use the

00:11:33,220 --> 00:11:39,730
escape HTML if it's ever going inside of

00:11:36,400 --> 00:11:42,550
an HTML attribute using escape attribute

00:11:39,730 --> 00:11:46,300
will ensure that it cannot break your

00:11:42,550 --> 00:11:50,470
markup by breaking the attribute so an

00:11:46,300 --> 00:11:53,080
example of that would be a link tag you

00:11:50,470 --> 00:11:55,420
could have the title you use the escape

00:11:53,080 --> 00:11:57,880
attribute underscore e it will still

00:11:55,420 --> 00:12:00,790
translate the click me text but it will

00:11:57,880 --> 00:12:04,090
ensure that that text does not break

00:12:00,790 --> 00:12:09,000
your HTML if somehow the translator

00:12:04,090 --> 00:12:12,810
accidentally put in a double quote in

00:12:09,000 --> 00:12:21,520
their text it's not going to end your

00:12:12,810 --> 00:12:23,770
link tag early and break your markup now

00:12:21,520 --> 00:12:25,990
we get to the fun part the things that

00:12:23,770 --> 00:12:29,620
people do wrong when internationalizing

00:12:25,990 --> 00:12:31,660
code so when WordPress goes through all

00:12:29,620 --> 00:12:33,670
of your code and goes through all of its

00:12:31,660 --> 00:12:36,220
translation functions when you're

00:12:33,670 --> 00:12:39,250
actually putting together files that can

00:12:36,220 --> 00:12:41,710
then be translated it does not execute

00:12:39,250 --> 00:12:43,450
the code the code is only executed when

00:12:41,710 --> 00:12:46,300
the website is actually loaded when it's

00:12:43,450 --> 00:12:48,310
running it does not execute when you're

00:12:46,300 --> 00:12:51,940
building a list of strings that need to

00:12:48,310 --> 00:12:54,010
be translated so if you do something

00:12:51,940 --> 00:12:57,160
like this where your text that needs to

00:12:54,010 --> 00:13:00,460
be translated is in a variable WordPress

00:12:57,160 --> 00:13:01,780
we'll look at that the editor the

00:13:00,460 --> 00:13:03,130
translator what they will see is they

00:13:01,780 --> 00:13:04,960
will actually just literally see dollar

00:13:03,130 --> 00:13:09,490
sign string as what needs to be

00:13:04,960 --> 00:13:11,700
translated and they'll have no context

00:13:09,490 --> 00:13:14,400
no idea what needs to be translated and

00:13:11,700 --> 00:13:16,440
likewise when it actually runs it's not

00:13:14,400 --> 00:13:20,160
to be dollar signs string that gets sent

00:13:16,440 --> 00:13:22,230
as the actual text so no translation

00:13:20,160 --> 00:13:26,370
will ever actually occur in that use

00:13:22,230 --> 00:13:29,280
case similarly if you have the text

00:13:26,370 --> 00:13:31,140
domain as a variable you're not going to

00:13:29,280 --> 00:13:37,380
have the correct text domain in your

00:13:31,140 --> 00:13:40,470
file so while that would work when it

00:13:37,380 --> 00:13:44,030
runs when you generate your pop file of

00:13:40,470 --> 00:13:47,730
all of your strings it will break for

00:13:44,030 --> 00:13:52,140
constants it's the same issue you have

00:13:47,730 --> 00:13:54,780
the possibly worst example using both a

00:13:52,140 --> 00:14:03,210
string or using a variable for both

00:13:54,780 --> 00:14:06,960
values similarly trying to use a PHP

00:14:03,210 --> 00:14:07,530
variable in a string does not work

00:14:06,960 --> 00:14:11,970
either

00:14:07,530 --> 00:14:15,330
because when the translator gets it they

00:14:11,970 --> 00:14:18,290
will see dollar sign name as the text to

00:14:15,330 --> 00:14:20,940
translate and they'll have no context

00:14:18,290 --> 00:14:25,860
also you do not want to break up a

00:14:20,940 --> 00:14:28,110
string that has a dynamic value in the

00:14:25,860 --> 00:14:29,490
middle of it because then in languages

00:14:28,110 --> 00:14:31,830
where the sentence structure is

00:14:29,490 --> 00:14:37,760
different your contents not going to

00:14:31,830 --> 00:14:40,410
make sense so instead we have printf or

00:14:37,760 --> 00:14:44,070
if you need to return it as a string you

00:14:40,410 --> 00:14:46,320
have s printf and so with this you're

00:14:44,070 --> 00:14:49,500
able to use the same comments that

00:14:46,320 --> 00:14:51,000
you've used before and with for

00:14:49,500 --> 00:14:52,710
translation comments and this is

00:14:51,000 --> 00:14:54,840
actually where it's probably most

00:14:52,710 --> 00:14:56,730
important to use those comments is

00:14:54,840 --> 00:15:00,510
because you can specify what the

00:14:56,730 --> 00:15:03,590
variable in your string is so you're

00:15:00,510 --> 00:15:06,720
able to use the printf placeholders so

00:15:03,590 --> 00:15:10,020
in this example I've got three different

00:15:06,720 --> 00:15:12,480
items and I actually have flipped two

00:15:10,020 --> 00:15:16,380
and three as an example of it doesn't

00:15:12,480 --> 00:15:17,550
matter which order they end up in one

00:15:16,380 --> 00:15:19,980
thing I would recommend is especially if

00:15:17,550 --> 00:15:21,270
you have more than one dynamic value

00:15:19,980 --> 00:15:23,970
that needs to be replaced in a single

00:15:21,270 --> 00:15:27,350
string that you use the percent one

00:15:23,970 --> 00:15:29,930
percent two percent three

00:15:27,350 --> 00:15:33,519
format instead of just using percent s

00:15:29,930 --> 00:15:37,160
or percent D for a string or a digit

00:15:33,519 --> 00:15:39,579
because that way if when it's translated

00:15:37,160 --> 00:15:42,050
they need to flip which order they're in

00:15:39,579 --> 00:15:44,329
the translators can do that and it will

00:15:42,050 --> 00:15:52,600
still make sense in the end and all the

00:15:44,329 --> 00:15:55,459
values go to the correct place and yeah

00:15:52,600 --> 00:15:57,860
so in this example that output hello

00:15:55,459 --> 00:16:02,120
George you'll be 21 on June 2nd

00:15:57,860 --> 00:16:03,440
2019 and then if you only have one

00:16:02,120 --> 00:16:05,660
variable as I said you can just use the

00:16:03,440 --> 00:16:10,040
percent s or percent D for Strings or

00:16:05,660 --> 00:16:12,440
numbers respectively so printf and s

00:16:10,040 --> 00:16:14,660
printf are very very handy functions in

00:16:12,440 --> 00:16:17,029
PHP if you don't know a whole lot about

00:16:14,660 --> 00:16:21,110
them I highly encourage you to go look

00:16:17,029 --> 00:16:25,100
them up on the php.net documentation

00:16:21,110 --> 00:16:27,500
site so then we get into numbers so you

00:16:25,100 --> 00:16:30,230
can have 0 books one book or two books

00:16:27,500 --> 00:16:33,170
in English at least you cannot have one

00:16:30,230 --> 00:16:37,279
books that doesn't make sense

00:16:33,170 --> 00:16:39,829
sounds wrong so able to once again use

00:16:37,279 --> 00:16:43,339
printf we're also able to use the

00:16:39,829 --> 00:16:45,170
underscore in function which will allow

00:16:43,339 --> 00:16:47,449
you to pass a singular version of the

00:16:45,170 --> 00:16:51,290
string a plural version of the string

00:16:47,449 --> 00:16:53,600
the actual number and then the text

00:16:51,290 --> 00:16:56,300
domain and then what it will actually do

00:16:53,600 --> 00:16:58,930
is it will pick either the singular or

00:16:56,300 --> 00:17:02,620
plural based on which numbers provided

00:16:58,930 --> 00:17:05,689
so you can get your proper pluralization

00:17:02,620 --> 00:17:08,540
and then also there is a number format I

00:17:05,689 --> 00:17:11,199
18 in function and word press that will

00:17:08,540 --> 00:17:15,429
allow you to format a number

00:17:11,199 --> 00:17:17,569
consistently for different locations I

00:17:15,429 --> 00:17:20,439
actually found a bug with that last

00:17:17,569 --> 00:17:23,750
night I have to dig into some more but

00:17:20,439 --> 00:17:25,490
if you put in the number 1000 in English

00:17:23,750 --> 00:17:27,709
we would have a comma as the thousand

00:17:25,490 --> 00:17:30,590
separator other locations in the world

00:17:27,709 --> 00:17:32,720
may use a period instead of a comma for

00:17:30,590 --> 00:17:33,919
their thousand separator so that

00:17:32,720 --> 00:17:37,070
functions supposed to take care of all

00:17:33,919 --> 00:17:41,030
that but as that often dig in and see

00:17:37,070 --> 00:17:46,640
how why it didn't work with Slovak

00:17:41,030 --> 00:17:48,320
so then we get into the newest portion

00:17:46,640 --> 00:17:50,240
of internationalization which is

00:17:48,320 --> 00:17:54,280
internalized internationalization in

00:17:50,240 --> 00:17:57,560
JavaScript this was just added back in

00:17:54,280 --> 00:18:01,250
the fall with the introduction of

00:17:57,560 --> 00:18:03,350
Gutenberg so now everything that you can

00:18:01,250 --> 00:18:05,090
do in PHP you can do in your JavaScript

00:18:03,350 --> 00:18:08,900
and you don't have to go through all of

00:18:05,090 --> 00:18:10,160
the more tedious localization procedures

00:18:08,900 --> 00:18:17,090
you would have had to have done in the

00:18:10,160 --> 00:18:18,530
past so just like in PHP you have a

00:18:17,090 --> 00:18:20,780
double underscore you have an underscore

00:18:18,530 --> 00:18:25,310
X underscore in and you have access to s

00:18:20,780 --> 00:18:30,260
printf these are all part of WordPress's

00:18:25,310 --> 00:18:33,920
18 in JavaScript package they're

00:18:30,260 --> 00:18:38,180
available as long as the script is

00:18:33,920 --> 00:18:39,920
loaded and in most cases if you are

00:18:38,180 --> 00:18:42,380
telling WordPress that you have a script

00:18:39,920 --> 00:18:45,290
that uses internationalization it will

00:18:42,380 --> 00:18:48,470
actually ensure that all the proper

00:18:45,290 --> 00:18:50,330
dependencies are loaded but I still

00:18:48,470 --> 00:18:54,590
recommend making sure have all the

00:18:50,330 --> 00:18:58,540
dependencies there so you can translate

00:18:54,590 --> 00:19:03,610
your text you can have your

00:18:58,540 --> 00:19:03,610
pluralization x' happen correctly and

00:19:04,210 --> 00:19:09,440
yeah be sure to add the WP dash i 18n

00:19:07,550 --> 00:19:15,170
script to the dependency list for your

00:19:09,440 --> 00:19:16,700
JavaScript files so then actually

00:19:15,170 --> 00:19:18,970
getting the JavaScript translations to

00:19:16,700 --> 00:19:22,730
have them load where they're available

00:19:18,970 --> 00:19:26,360
you use the WP set script translations

00:19:22,730 --> 00:19:29,990
which takes the script handle and your

00:19:26,360 --> 00:19:35,990
text domain and will load all the

00:19:29,990 --> 00:19:39,200
appropriate files so now we're going to

00:19:35,990 --> 00:19:42,020
briefly cover localization which is the

00:19:39,200 --> 00:19:44,690
process of actually translating code so

00:19:42,020 --> 00:19:47,210
there are two ways to localize the first

00:19:44,690 --> 00:19:50,780
is to use translate wordpress.org which

00:19:47,210 --> 00:19:53,120
at this time is only for wordpress.org

00:19:50,780 --> 00:19:54,899
themes and plugins and for WordPress

00:19:53,120 --> 00:19:59,489
core

00:19:54,899 --> 00:20:03,179
and then there's the hard way so the

00:19:59,489 --> 00:20:05,340
easy way is have your plug-in or theme

00:20:03,179 --> 00:20:08,340
approved in the wordpress.org repository

00:20:05,340 --> 00:20:09,719
and then you can ensure that the plug-in

00:20:08,340 --> 00:20:12,889
theme has the appropriate text domain

00:20:09,719 --> 00:20:16,469
line in the plug-in or theme header and

00:20:12,889 --> 00:20:18,919
that it matches the slug for your

00:20:16,469 --> 00:20:21,210
plug-in or theme on wordpress.org and

00:20:18,919 --> 00:20:22,349
then you need to make sure you're

00:20:21,210 --> 00:20:23,969
actually telling WordPress to load the

00:20:22,349 --> 00:20:26,879
language files for your text domain and

00:20:23,969 --> 00:20:28,950
as I mentioned earlier in the talk when

00:20:26,879 --> 00:20:33,019
you're dealing with things that are

00:20:28,950 --> 00:20:35,429
translated by on wordpress.org you can

00:20:33,019 --> 00:20:38,039
specify just the text domain if you're

00:20:35,429 --> 00:20:41,909
not including translations with your

00:20:38,039 --> 00:20:43,409
actual release and then you sit back and

00:20:41,909 --> 00:20:46,109
let other people translate your code for

00:20:43,409 --> 00:20:51,779
you which to me sounds amazing

00:20:46,109 --> 00:20:53,820
because saves time so and as a bonus

00:20:51,779 --> 00:20:56,399
your plug-in or theme rimi file can be

00:20:53,820 --> 00:20:57,809
translated which means when someone from

00:20:56,399 --> 00:21:00,570
another country is looking at

00:20:57,809 --> 00:21:03,149
wordpress.org in their language your

00:21:00,570 --> 00:21:08,359
plug-in description is in their language

00:21:03,149 --> 00:21:10,729
as well then there's the hard way so

00:21:08,359 --> 00:21:13,889
WordPress has a variety of

00:21:10,729 --> 00:21:16,739
internalization tools if you ever use WP

00:21:13,889 --> 00:21:21,599
CLI that has a lot of things that it can

00:21:16,739 --> 00:21:24,419
do they've added some i18n options to WP

00:21:21,599 --> 00:21:26,909
CLI so you can generate a pop file and

00:21:24,419 --> 00:21:29,580
then a translator can translate the pop

00:21:26,909 --> 00:21:32,429
file into a po file which would have all

00:21:29,580 --> 00:21:34,859
of the appropriate strings translated

00:21:32,429 --> 00:21:38,159
and then you can ensure the profile is

00:21:34,859 --> 00:21:40,169
named using the correct locale and then

00:21:38,159 --> 00:21:42,629
you can use a command line tool to

00:21:40,169 --> 00:21:46,200
generate a move file from the po file

00:21:42,629 --> 00:21:49,349
and then now you can also generate JSON

00:21:46,200 --> 00:21:50,999
files from the po files and then once

00:21:49,349 --> 00:21:53,969
that's all done the mo files and the

00:21:50,999 --> 00:21:58,049
JSON files can be loaded on your site

00:21:53,969 --> 00:22:01,290
and it's translated with so if that

00:21:58,049 --> 00:22:04,230
sounds confusing it's because it is

00:22:01,290 --> 00:22:07,400
there's just a lot of steps to that the

00:22:04,230 --> 00:22:10,200
resources section of the slides have

00:22:07,400 --> 00:22:12,330
good resources on where to actually find

00:22:10,200 --> 00:22:14,970
tools to do all that steps to do all of

00:22:12,330 --> 00:22:17,090
that it's a little more in-depth than

00:22:14,970 --> 00:22:20,300
have time to cover in this talk today

00:22:17,090 --> 00:22:27,140
but that is the overview of the process

00:22:20,300 --> 00:22:27,140
and then most importantly test it so I

00:22:28,460 --> 00:22:35,880
like that and while we're on the topic

00:22:33,480 --> 00:22:38,360
of translation the wordpress translation

00:22:35,880 --> 00:22:42,630
day is this upcoming Saturday May 11th

00:22:38,360 --> 00:22:45,660
it's 24 hours of translation so if you

00:22:42,630 --> 00:22:49,500
know more than one language you are more

00:22:45,660 --> 00:22:52,020
than welcome to go to WP translation day

00:22:49,500 --> 00:22:55,880
org and find more details on how you can

00:22:52,020 --> 00:22:55,880
get involved in help yes

00:23:08,890 --> 00:23:14,510
so I don't know that this is the exact

00:23:12,410 --> 00:23:15,800
same as contributor day but this my

00:23:14,510 --> 00:23:17,360
understanding is this is much more of

00:23:15,800 --> 00:23:19,310
like going to translate that

00:23:17,360 --> 00:23:21,260
wordpress.org and actually spending time

00:23:19,310 --> 00:23:26,330
translating strings from a language to

00:23:21,260 --> 00:23:29,000
another yeah yeah translating the actual

00:23:26,330 --> 00:23:32,570
text of things from English into other

00:23:29,000 --> 00:23:34,220
languages so yes yeah so my

00:23:32,570 --> 00:23:36,020
understanding is that is more what this

00:23:34,220 --> 00:23:38,630
is so if you know more than one language

00:23:36,020 --> 00:23:40,730
by all means go help ensure WordPress

00:23:38,630 --> 00:23:43,880
core your favorite plug-in your favorite

00:23:40,730 --> 00:23:46,400
theme are translated into whichever

00:23:43,880 --> 00:23:48,560
other language you know and in doing

00:23:46,400 --> 00:23:55,420
that the whole community has access to

00:23:48,560 --> 00:23:57,980
more things in their language and then

00:23:55,420 --> 00:24:01,610
there's lists of resources and

00:23:57,980 --> 00:24:07,400
references that I used the first handful

00:24:01,610 --> 00:24:10,040
at the top are ones the in WordPress on

00:24:07,400 --> 00:24:12,620
actually from wordpress.org in either

00:24:10,040 --> 00:24:16,280
plug-in theme or the Guttenberg Han Bert

00:24:12,620 --> 00:24:17,750
handbook so and as I said at the

00:24:16,280 --> 00:24:20,210
beginning these slides can all be

00:24:17,750 --> 00:24:25,250
downloaded from my website David Wood

00:24:20,210 --> 00:24:27,170
ninja and then you can just click on

00:24:25,250 --> 00:24:29,900
those links and go look at everything

00:24:27,170 --> 00:24:35,170
and not have to try to type from the

00:24:29,900 --> 00:24:35,170
slides so yes your question

00:24:42,720 --> 00:24:47,010
so far those are all just things that

00:24:45,450 --> 00:24:51,210
we're putting in our functions that page

00:24:47,010 --> 00:24:53,490
before general site know does that get

00:24:51,210 --> 00:24:56,760
translated or do we have to prepare

00:24:53,490 --> 00:24:59,220
certain strings for more my type of

00:24:56,760 --> 00:25:00,720
content like there's gonna be if there

00:24:59,220 --> 00:25:08,400
if you're running a site that does kind

00:25:00,720 --> 00:25:10,980
of generate new content okay so if I

00:25:08,400 --> 00:25:12,930
understand you're asking if all the

00:25:10,980 --> 00:25:14,520
stuff that I listed helps with

00:25:12,930 --> 00:25:15,810
translating actual content on the site

00:25:14,520 --> 00:25:20,310
or if it's just for things that are in

00:25:15,810 --> 00:25:22,140
your code that correct yeah so all of

00:25:20,310 --> 00:25:23,790
the functions I listed are all WordPress

00:25:22,140 --> 00:25:26,550
functions you'd use anywhere in your

00:25:23,790 --> 00:25:28,410
plug-in or theme where you have text

00:25:26,550 --> 00:25:30,330
that is part of it

00:25:28,410 --> 00:25:32,340
so if you think of a plug-in it has an

00:25:30,330 --> 00:25:35,250
admin interface in a lot of cases that

00:25:32,340 --> 00:25:38,220
help the user know how to interact with

00:25:35,250 --> 00:25:40,350
your plug-in change settings and so all

00:25:38,220 --> 00:25:43,680
of your text on those pages all the

00:25:40,350 --> 00:25:45,930
different setting names options those

00:25:43,680 --> 00:25:48,870
would all be run through one of those

00:25:45,930 --> 00:25:50,970
functions so that someone could

00:25:48,870 --> 00:25:52,530
translate your plug-in into another

00:25:50,970 --> 00:25:54,420
language and the admin interface would

00:25:52,530 --> 00:25:56,160
be updated to reflect that as far as

00:25:54,420 --> 00:25:59,700
translating actual content on a site

00:25:56,160 --> 00:26:01,050
like blog entry content if the site

00:25:59,700 --> 00:26:02,370
needs to be multilingual there are

00:26:01,050 --> 00:26:02,940
plugins out there that can help with

00:26:02,370 --> 00:26:05,760
that

00:26:02,940 --> 00:26:08,580
WP ml is one plug-in I know there's a

00:26:05,760 --> 00:26:11,240
handful of other ones out there as well

00:26:08,580 --> 00:26:14,340
I've had the most experience with wpml

00:26:11,240 --> 00:26:16,560
and it does have some caveats and some

00:26:14,340 --> 00:26:21,450
places where it doesn't always work the

00:26:16,560 --> 00:26:27,120
greatest but it is still a good option I

00:26:21,450 --> 00:26:29,040
don't think it's free but I do know

00:26:27,120 --> 00:26:31,020
there's some free ones out there but if

00:26:29,040 --> 00:26:34,170
you're just writing a site in another

00:26:31,020 --> 00:26:36,330
language then this would cover if you

00:26:34,170 --> 00:26:40,080
needed to use a plug-in as long as the

00:26:36,330 --> 00:26:43,730
plug-in is set up correctly most of what

00:26:40,080 --> 00:26:48,630
I've cover you won't even need to do but

00:26:43,730 --> 00:26:50,010
yeah if yeah if you build themes if you

00:26:48,630 --> 00:26:52,470
build themes if you build plugins

00:26:50,010 --> 00:26:54,060
these are steps that you should take to

00:26:52,470 --> 00:26:56,410
make sure that the community as a whole

00:26:54,060 --> 00:26:58,180
can help

00:26:56,410 --> 00:27:01,420
like your pull again or theme into their

00:26:58,180 --> 00:27:03,700
language I was talking with a guy just a

00:27:01,420 --> 00:27:05,860
few minutes before and he said he

00:27:03,700 --> 00:27:08,830
actually has a plug-in that he released

00:27:05,860 --> 00:27:11,320
and it had it was in the tens of

00:27:08,830 --> 00:27:12,940
thousands of downloads but then he got

00:27:11,320 --> 00:27:15,220
it set up where it could be translated

00:27:12,940 --> 00:27:18,070
and then someone translated it into

00:27:15,220 --> 00:27:22,690
Indian and now he's in the hundreds of

00:27:18,070 --> 00:27:25,750
thousands of downloads so just

00:27:22,690 --> 00:27:28,120
translating your plug-in having it

00:27:25,750 --> 00:27:32,410
available to be translated is a great

00:27:28,120 --> 00:27:34,240
way to open up your audience I mean

00:27:32,410 --> 00:27:36,790
there's a lot of people in the world

00:27:34,240 --> 00:27:39,340
that don't speak English as much and as

00:27:36,790 --> 00:27:40,900
great as English is as nice as is to

00:27:39,340 --> 00:27:42,460
know it when you're traveling because

00:27:40,900 --> 00:27:45,190
there are a lot of places that it's an

00:27:42,460 --> 00:27:46,660
important language to know the rest of

00:27:45,190 --> 00:27:50,320
the world does not solely operate on

00:27:46,660 --> 00:27:59,950
English so that's a good question

00:27:50,320 --> 00:28:03,700
anyone else have question yes yeah so if

00:27:59,950 --> 00:28:07,210
your plug-in er theme is on

00:28:03,700 --> 00:28:10,570
wordpress.org and to the description

00:28:07,210 --> 00:28:11,860
that lists out on the pages like on the

00:28:10,570 --> 00:28:13,540
plug-in page on WordPress the dory all

00:28:11,860 --> 00:28:18,520
of that content comes from the plugins

00:28:13,540 --> 00:28:20,620
readme file and so that rima file can be

00:28:18,520 --> 00:28:24,480
translated on translate wordpress.org

00:28:20,620 --> 00:28:29,580
and then it's translated on

00:28:24,480 --> 00:28:29,580
wordpress.org so

00:28:34,679 --> 00:28:41,799
the future might be able to apply to

00:28:36,999 --> 00:28:45,220
content using yeah there this was not

00:28:41,799 --> 00:28:50,039
necessarily intended to go with content

00:28:45,220 --> 00:28:53,529
as much as your code so for the

00:28:50,039 --> 00:28:56,710
translation of strings in Gutenberg you

00:28:53,529 --> 00:28:59,889
would use the I 18 in JavaScript package

00:28:56,710 --> 00:29:01,600
from WordPress and that would allow you

00:28:59,889 --> 00:29:03,460
to have the exact same functionality in

00:29:01,600 --> 00:29:07,809
JavaScript that you have in PHP when it

00:29:03,460 --> 00:29:10,480
comes to translation and I do actually

00:29:07,809 --> 00:29:12,519
have on my website as part of the blog

00:29:10,480 --> 00:29:15,070
post everything was talk I did actually

00:29:12,519 --> 00:29:18,129
yesterday publish a small plug in to

00:29:15,070 --> 00:29:21,580
github that just has an example of how

00:29:18,129 --> 00:29:42,039
to translate from English to another

00:29:21,580 --> 00:29:45,159
language David would ninja yes yes I

00:29:42,039 --> 00:29:46,809
would definitely say this is in a very

00:29:45,159 --> 00:29:49,990
strong recommendation for anyone that's

00:29:46,809 --> 00:29:52,480
writing code in WordPress even if you're

00:29:49,990 --> 00:29:54,450
writing custom code for a website that

00:29:52,480 --> 00:29:57,220
you don't think will ever be translated

00:29:54,450 --> 00:30:00,129
just last year we actually had a very

00:29:57,220 --> 00:30:03,519
large client come to company I work for

00:30:00,129 --> 00:30:04,720
and all they wanted was their website to

00:30:03,519 --> 00:30:05,470
be translated it was already in

00:30:04,720 --> 00:30:07,720
WordPress

00:30:05,470 --> 00:30:10,029
it was a multi-site set up they just

00:30:07,720 --> 00:30:12,009
wanted to be able to create a another

00:30:10,029 --> 00:30:14,139
site use the same theme as one of the

00:30:12,009 --> 00:30:16,769
other sites that we had and have all of

00:30:14,139 --> 00:30:20,019
their content be in a different language

00:30:16,769 --> 00:30:21,970
the problem was almost all of their code

00:30:20,019 --> 00:30:24,669
that was there because I also wanted the

00:30:21,970 --> 00:30:27,490
interface to be in that language as well

00:30:24,669 --> 00:30:29,259
for the admins but almost all of the

00:30:27,490 --> 00:30:30,820
custom code none of it was able to be

00:30:29,259 --> 00:30:33,190
translated without going and rewriting

00:30:30,820 --> 00:30:34,659
all of it because the previous developer

00:30:33,190 --> 00:30:38,679
did not use any of the

00:30:34,659 --> 00:30:41,200
internationalization functions so we

00:30:38,679 --> 00:30:42,970
ended up rebuilding their entire site in

00:30:41,200 --> 00:30:45,040
the process we moved them to Gutenberg

00:30:42,970 --> 00:30:48,400
and

00:30:45,040 --> 00:30:51,050
so far they've been happy they've got

00:30:48,400 --> 00:30:55,040
one site launched in French one in

00:30:51,050 --> 00:30:58,430
Korean and then two other versions that

00:30:55,040 --> 00:31:02,540
are in English UK and Canadian English

00:30:58,430 --> 00:31:05,090
and a potentially pending Japanese

00:31:02,540 --> 00:31:06,140
version but I think they're running into

00:31:05,090 --> 00:31:21,100
some issues with that right now

00:31:06,140 --> 00:31:22,970
so I don't think there's anything I

00:31:21,100 --> 00:31:26,240
don't think there's anything that really

00:31:22,970 --> 00:31:30,020
covers audio file translation in any of

00:31:26,240 --> 00:31:32,270
the wordpress items I think for that you

00:31:30,020 --> 00:31:35,080
would probably just need to have a

00:31:32,270 --> 00:31:40,910
second copy of it that's been translated

00:31:35,080 --> 00:31:44,890
I don't know if anyone else has any

00:31:40,910 --> 00:31:44,890
suggestions on translating audio

00:31:55,380 --> 00:32:00,590
reader read your site or

00:32:05,130 --> 00:32:12,500
so yeah any other questions

00:32:14,030 --> 00:32:17,030
cool

00:32:18,450 --> 00:32:23,599

YouTube URL: https://www.youtube.com/watch?v=MNluTwuiJ6A


