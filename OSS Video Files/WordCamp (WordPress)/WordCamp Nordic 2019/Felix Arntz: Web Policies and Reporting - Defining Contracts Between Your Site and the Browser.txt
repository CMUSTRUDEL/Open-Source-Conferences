Title: Felix Arntz: Web Policies and Reporting - Defining Contracts Between Your Site and the Browser
Publication date: 2019-09-08
Playlist: WordCamp Nordic 2019
Description: 
	A diverse environment like your WordPress site is inherently difficult to control. If you are a developer, you can make sure your own code meets quality standards and honors best practices, but it is usually not possible to do the same for plugins created by others. It becomes even more of a problem if you are required to rely on third-party code entirely, for example when you maintain a WordPress site, but don’t write extensions for it yourself.
Recently, new browser technologies have been introduced to help tackle such issues. Content Security Policies and Feature Policies allow you to define contracts between your site and the browser, efficiently enforcing your site to stick to certain best practices you define. You don’t want your site to ever serve images that are too large? You don’t want your site to ever give the user that pop-up for browser notifications? These new policies put you in control over how your site interacts with the user, relying on the browser as a middle man. If there is a violation of the policies you have defined, the browser can inform you via a new Reporting API standard, allowing you to spot the problem and act upon it. This session will provide an introduction to these new technologies, and then dive into how you can use them in WordPress.

Presentation slides: https://drive.google.com/open?id=1rgDvAeC-5Q8KjUXO281yO9niO6x3IPG5
WPTV link: https://wordpress.tv/2019/06/10/felix-arntz-web-policies-and-reporting-defining-contracts-between-your-site-and-the-browser/
Captions: 
	00:00:00,680 --> 00:00:06,960
so I'm Felix I'm a WordPress core

00:00:04,859 --> 00:00:10,349
committer and I'm a developer programs

00:00:06,960 --> 00:00:12,870
engineer at the content experience team

00:00:10,349 --> 00:00:14,130
at Google where we collaborate with

00:00:12,870 --> 00:00:17,369
content management systems like

00:00:14,130 --> 00:00:19,140
WordPress to improve user experience on

00:00:17,369 --> 00:00:23,160
the web and advance and advocate for

00:00:19,140 --> 00:00:25,199
modern web technologies we are also

00:00:23,160 --> 00:00:26,730
essentially the WordPress team at Google

00:00:25,199 --> 00:00:29,820
which you might have heard about before

00:00:26,730 --> 00:00:33,180
and in this session we will look at two

00:00:29,820 --> 00:00:35,219
rather new browser api's that grant you

00:00:33,180 --> 00:00:37,950
more control over how certain features

00:00:35,219 --> 00:00:43,469
act on your site to enforce solid user

00:00:37,950 --> 00:00:45,210
experience and best practices so the web

00:00:43,469 --> 00:00:46,920
has obviously been constantly evolving

00:00:45,210 --> 00:00:48,180
over all these years we've seen great

00:00:46,920 --> 00:00:51,149
features being introduced like

00:00:48,180 --> 00:00:53,399
responsive images Ajax requests ya know

00:00:51,149 --> 00:00:54,719
these two have been long around but

00:00:53,399 --> 00:00:56,160
imagine at some point there were really

00:00:54,719 --> 00:00:59,760
big features that were introduced

00:00:56,160 --> 00:01:01,620
we have location access you can now add

00:00:59,760 --> 00:01:02,219
your site's to home screen especially on

00:01:01,620 --> 00:01:04,350
your phones

00:01:02,219 --> 00:01:06,869
we have web payments which are a

00:01:04,350 --> 00:01:09,780
standardized way to process payments on

00:01:06,869 --> 00:01:11,400
the web and there are probably hundreds

00:01:09,780 --> 00:01:13,040
more of new fields of features that are

00:01:11,400 --> 00:01:16,470
constantly being introduced to the web

00:01:13,040 --> 00:01:18,780
and these features all of them are

00:01:16,470 --> 00:01:21,030
certainly great and powerful but when

00:01:18,780 --> 00:01:23,670
used incorrectly or when used over

00:01:21,030 --> 00:01:26,600
aggressively or when completely abused

00:01:23,670 --> 00:01:30,119
they can seriously harm user experience

00:01:26,600 --> 00:01:32,130
so well web features being used in a

00:01:30,119 --> 00:01:35,280
while you might have seen something like

00:01:32,130 --> 00:01:39,540
this maybe here there's a slow loading

00:01:35,280 --> 00:01:41,909
image coming up coming up there's oh you

00:01:39,540 --> 00:01:45,030
can add this to your home screen nice

00:01:41,909 --> 00:01:47,970
well it also wants your location access

00:01:45,030 --> 00:01:50,790
and it also wants to access your cameras

00:01:47,970 --> 00:01:54,659
because why not so I'm sure you've seen

00:01:50,790 --> 00:01:56,280
examples of these sites around I made

00:01:54,659 --> 00:02:01,439
this up it's not actually my web site

00:01:56,280 --> 00:02:03,659
it's not that bad so as you can see this

00:02:01,439 --> 00:02:04,860
can happen if you just randomly use all

00:02:03,659 --> 00:02:06,810
features that are available without

00:02:04,860 --> 00:02:09,090
actually see thinking about how they

00:02:06,810 --> 00:02:12,220
impact user experience and whether this

00:02:09,090 --> 00:02:14,680
would provide enough benefit to do that

00:02:12,220 --> 00:02:17,320
so we have all these cool new features

00:02:14,680 --> 00:02:19,930
but how do we use them responsively and

00:02:17,320 --> 00:02:21,460
this can especially become problem in

00:02:19,930 --> 00:02:24,550
WordPress where you deal with so much

00:02:21,460 --> 00:02:26,920
third-party code and think about it

00:02:24,550 --> 00:02:29,290
further you yourself you might be

00:02:26,920 --> 00:02:31,390
responsible citizen of the web you might

00:02:29,290 --> 00:02:33,130
know what you're doing but all the

00:02:31,390 --> 00:02:35,140
third-party code that you used might not

00:02:33,130 --> 00:02:36,940
it might have flaws it might misuse

00:02:35,140 --> 00:02:40,690
features in ways that you aren't even

00:02:36,940 --> 00:02:42,820
aware of and this is where a new API a

00:02:40,690 --> 00:02:45,850
new browser standard feature policy

00:02:42,820 --> 00:02:48,220
comes into place so this is a proposed

00:02:45,850 --> 00:02:52,750
web standard on you can see you can read

00:02:48,220 --> 00:02:54,820
more about it on w3c web site and this

00:02:52,750 --> 00:02:58,090
standard it grants you control of our

00:02:54,820 --> 00:02:59,950
certain features behave on your site so

00:02:58,090 --> 00:03:03,760
the ik you can so sorry that you can

00:02:59,950 --> 00:03:07,270
enforce solid standards throughout as an

00:03:03,760 --> 00:03:09,760
example imagine you installed a Google

00:03:07,270 --> 00:03:12,100
Maps plug-in on your website just to

00:03:09,760 --> 00:03:13,720
display map maybe but then the plug-in

00:03:12,100 --> 00:03:15,820
suddenly asks the user for their

00:03:13,720 --> 00:03:17,020
location which is something you didn't

00:03:15,820 --> 00:03:18,340
you weren't even aware of when

00:03:17,020 --> 00:03:21,160
installing the plug-in you just wanted

00:03:18,340 --> 00:03:24,190
to display a map so by default if that

00:03:21,160 --> 00:03:27,870
happens in the third-party code that pop

00:03:24,190 --> 00:03:30,250
up it would just show possibly possibly

00:03:27,870 --> 00:03:32,890
make the user experience worse because

00:03:30,250 --> 00:03:34,480
maybe the user doesn't get any anything

00:03:32,890 --> 00:03:38,950
real or out of it that's valuable to

00:03:34,480 --> 00:03:41,590
them so by default it shows up but with

00:03:38,950 --> 00:03:44,230
future policy you can send a response

00:03:41,590 --> 00:03:45,760
header like this which would completely

00:03:44,230 --> 00:03:48,190
disable the feature on the entire

00:03:45,760 --> 00:03:51,190
website ensuring that this cannot happen

00:03:48,190 --> 00:03:53,470
basically it would just say the location

00:03:51,190 --> 00:03:55,870
service failed which isn't maybe that

00:03:53,470 --> 00:03:58,510
great either but generally it would it's

00:03:55,870 --> 00:04:00,519
a good start to enforce best practices

00:03:58,510 --> 00:04:02,620
for this of course sometimes you would

00:04:00,519 --> 00:04:04,480
want to want this to actually show up so

00:04:02,620 --> 00:04:06,400
then don't use it but this is for

00:04:04,480 --> 00:04:09,940
controlling third-party code to do

00:04:06,400 --> 00:04:12,010
things in the way you want them to for

00:04:09,940 --> 00:04:15,130
every feature you can control basically

00:04:12,010 --> 00:04:17,530
how and where it is allowed for example

00:04:15,130 --> 00:04:19,390
if you specified any here instead of

00:04:17,530 --> 00:04:21,460
none which is the default it would be

00:04:19,390 --> 00:04:23,590
allowed everywhere you can define itself

00:04:21,460 --> 00:04:25,600
which is now it means it will only allow

00:04:23,590 --> 00:04:28,360
it on your own site but not on others

00:04:25,600 --> 00:04:31,690
sites for example in iframes from third

00:04:28,360 --> 00:04:33,520
parties or you use none which is just

00:04:31,690 --> 00:04:36,940
the super aggressive no don't use this

00:04:33,520 --> 00:04:39,760
ever and even you can specify specific

00:04:36,940 --> 00:04:41,730
origins like specific domains you want

00:04:39,760 --> 00:04:46,060
to allow this on or not

00:04:41,730 --> 00:04:46,780
another example is this we are nice

00:04:46,060 --> 00:04:49,690
image

00:04:46,780 --> 00:04:52,660
imagine you look at this image in a

00:04:49,690 --> 00:04:56,110
mobile phone but it's actually a sized

00:04:52,660 --> 00:04:59,350
for a large desktop you can over you can

00:04:56,110 --> 00:05:01,660
disallow using oversized images in this

00:04:59,350 --> 00:05:03,910
case this would show up so it wouldn't

00:05:01,660 --> 00:05:05,950
so the image wouldn't load and this is

00:05:03,910 --> 00:05:08,350
especially useful for development of

00:05:05,950 --> 00:05:09,760
course on a production site it would be

00:05:08,350 --> 00:05:11,800
still better to show this image than

00:05:09,760 --> 00:05:13,600
showing this but for development this

00:05:11,800 --> 00:05:16,240
will easily allow you to spot weaknesses

00:05:13,600 --> 00:05:19,270
where you accidentally maybe forgot to

00:05:16,240 --> 00:05:21,220
optimize an image feature policy can be

00:05:19,270 --> 00:05:22,750
used in production and development and

00:05:21,220 --> 00:05:24,430
it totally makes sense to apply

00:05:22,750 --> 00:05:28,000
different policies in the different

00:05:24,430 --> 00:05:30,070
environments and in production for

00:05:28,000 --> 00:05:31,840
example you probably don't wouldn't want

00:05:30,070 --> 00:05:35,080
to do this but in production you can

00:05:31,840 --> 00:05:38,740
also set up the policy for oversized

00:05:35,080 --> 00:05:40,630
images to be in report only mode so it

00:05:38,740 --> 00:05:44,650
would allow it to be notified about the

00:05:40,630 --> 00:05:48,100
about the violation of the policy but it

00:05:44,650 --> 00:05:50,200
will not actually just disable image so

00:05:48,100 --> 00:05:53,140
that leads us to the next big thing

00:05:50,200 --> 00:05:55,450
which is yes I said it's also possible

00:05:53,140 --> 00:05:59,290
to monitor violations of feature policy

00:05:55,450 --> 00:06:01,450
which I will get to in just a bit there

00:05:59,290 --> 00:06:03,940
are many many more features supported by

00:06:01,450 --> 00:06:05,740
the future policy specification you can

00:06:03,940 --> 00:06:07,900
control media so that it doesn't just

00:06:05,740 --> 00:06:10,960
autoplay when this user access your site

00:06:07,900 --> 00:06:12,940
you can enforce lazy loading across your

00:06:10,960 --> 00:06:14,440
entire website yes lazy loading is

00:06:12,940 --> 00:06:17,740
actually a standard that's coming a

00:06:14,440 --> 00:06:19,840
degree to the web at some point you can

00:06:17,740 --> 00:06:22,540
disable synchronous Ajax requests which

00:06:19,840 --> 00:06:24,760
we shouldn't be doing camera access

00:06:22,540 --> 00:06:26,770
fullscreen and many many more there

00:06:24,760 --> 00:06:30,730
currently eleven features supported and

00:06:26,770 --> 00:06:32,320
seventeen more come in so thinking about

00:06:30,730 --> 00:06:34,000
this further again feature policy is a

00:06:32,320 --> 00:06:35,290
very powerful ally especially in

00:06:34,000 --> 00:06:37,910
WordPress where you deal with so much

00:06:35,290 --> 00:06:40,790
third-party code

00:06:37,910 --> 00:06:43,820
so looking at browser support the API is

00:06:40,790 --> 00:06:45,230
quite new and it's also still in draft

00:06:43,820 --> 00:06:46,940
it's a proposed standard but it's

00:06:45,230 --> 00:06:49,100
already supported by a couple browsers

00:06:46,940 --> 00:06:51,610
as you can see here you can see the full

00:06:49,100 --> 00:06:55,610
stats on can I use com

00:06:51,610 --> 00:06:58,370
so as I mentioned before you can get you

00:06:55,610 --> 00:07:00,950
can get reports of feature policy

00:06:58,370 --> 00:07:02,870
violations and this takes us to another

00:07:00,950 --> 00:07:06,140
new bright web standard which is called

00:07:02,870 --> 00:07:10,100
the reporting API that standard allows

00:07:06,140 --> 00:07:12,290
you to receive reports about client-side

00:07:10,100 --> 00:07:14,180
errors or policy violations on your

00:07:12,290 --> 00:07:17,510
entire website and they will be

00:07:14,180 --> 00:07:19,670
automatically sent by the browser so

00:07:17,510 --> 00:07:21,620
several types of reports are reported

00:07:19,670 --> 00:07:26,090
here and feature policy violations are

00:07:21,620 --> 00:07:28,070
one of them as well this API relies on a

00:07:26,090 --> 00:07:30,290
new HTTP response header that you can

00:07:28,070 --> 00:07:32,420
send and we will look at what this looks

00:07:30,290 --> 00:07:36,470
like under the hood now so you can

00:07:32,420 --> 00:07:40,220
basically specify in this example you

00:07:36,470 --> 00:07:43,280
specify did you tell the browser to send

00:07:40,220 --> 00:07:46,070
the to send reports to this URL which

00:07:43,280 --> 00:07:48,290
should then that jet URL should host an

00:07:46,070 --> 00:07:49,760
endpoint of that follows the

00:07:48,290 --> 00:07:52,730
specification of the reporting API

00:07:49,760 --> 00:07:54,590
standard and then all reports are going

00:07:52,730 --> 00:07:56,540
to be sent there as you can see this is

00:07:54,590 --> 00:07:58,670
an object and it's actually possible to

00:07:56,540 --> 00:08:00,740
specify multiple different groups with

00:07:58,670 --> 00:08:03,530
different endpoints and then you can

00:08:00,740 --> 00:08:05,870
allow different report types for example

00:08:03,530 --> 00:08:08,300
future policy violations just one of the

00:08:05,870 --> 00:08:09,980
possible report types to be sent to

00:08:08,300 --> 00:08:12,470
different groups depending so you can

00:08:09,980 --> 00:08:14,300
really granularly go with it but this

00:08:12,470 --> 00:08:17,800
basic example will make sure that every

00:08:14,300 --> 00:08:20,000
everything is sent to this one endpoint

00:08:17,800 --> 00:08:21,500
so there are a couple reports i've

00:08:20,000 --> 00:08:24,410
supported here as well so we have

00:08:21,500 --> 00:08:26,300
content security policy you get crash

00:08:24,410 --> 00:08:27,890
and deprecation reports which basically

00:08:26,300 --> 00:08:30,440
allow you to be notified when doing

00:08:27,890 --> 00:08:31,880
something wrong in JavaScript or when

00:08:30,440 --> 00:08:33,610
something wrong happens you're not even

00:08:31,880 --> 00:08:35,810
involve is right now

00:08:33,610 --> 00:08:38,510
another super powerful feature is

00:08:35,810 --> 00:08:40,849
network error logging which it basically

00:08:38,510 --> 00:08:43,820
allows you to receive reports about

00:08:40,849 --> 00:08:46,010
network request failures so if your site

00:08:43,820 --> 00:08:47,480
is down for example so that is something

00:08:46,010 --> 00:08:49,550
you would previously needed to rely on

00:08:47,480 --> 00:08:51,830
an uptime service for but it's becoming

00:08:49,550 --> 00:08:54,890
possible with native web feature

00:08:51,830 --> 00:08:56,480
Anette native web api's well i talked

00:08:54,890 --> 00:08:58,310
about feature policy right and how this

00:08:56,480 --> 00:09:00,500
is actually not supported yet but it

00:08:58,310 --> 00:09:03,020
will be very soon so feature policy

00:09:00,500 --> 00:09:05,450
feature policy itself is reported is

00:09:03,020 --> 00:09:08,030
supported reporting API is supported but

00:09:05,450 --> 00:09:09,590
they don't work together just yet but

00:09:08,030 --> 00:09:12,800
that will be never be introduced very

00:09:09,590 --> 00:09:14,390
soon yeah looking at browser support

00:09:12,800 --> 00:09:17,090
here it's even more limited because the

00:09:14,390 --> 00:09:20,000
reporting API is even more bleeding edge

00:09:17,090 --> 00:09:23,540
so it's only supported in Chrome right

00:09:20,000 --> 00:09:25,940
now but given the given the distribution

00:09:23,540 --> 00:09:28,460
of browsers and how much they used this

00:09:25,940 --> 00:09:31,030
still means 60% of about a little more

00:09:28,460 --> 00:09:33,050
than 60% of browsers throughout are

00:09:31,030 --> 00:09:36,140
prepared for this and can use the

00:09:33,050 --> 00:09:37,580
reporting API standard actually this API

00:09:36,140 --> 00:09:39,980
is so bleeding edge that it doesn't even

00:09:37,580 --> 00:09:45,230
have stats on can I use come yet so I

00:09:39,980 --> 00:09:47,420
don't have a link here so yeah WordPress

00:09:45,230 --> 00:09:51,020
surely I wouldn't leave you here without

00:09:47,420 --> 00:09:53,480
looking WordPress specifically so but

00:09:51,020 --> 00:09:57,590
it's probably better because that if you

00:09:53,480 --> 00:09:59,930
do it because we we built we have built

00:09:57,590 --> 00:10:02,420
as part of our part of our goals to

00:09:59,930 --> 00:10:04,760
improve the user experience we have

00:10:02,420 --> 00:10:06,110
built plugins to introduce these new PAP

00:10:04,760 --> 00:10:08,510
eyes and bring them to the WordPress

00:10:06,110 --> 00:10:10,370
platform and the fragmentation of the

00:10:08,510 --> 00:10:12,350
WordPress ecosystem is provides a

00:10:10,370 --> 00:10:14,150
perfect scenario for using and applying

00:10:12,350 --> 00:10:17,030
future policy and using the reporting

00:10:14,150 --> 00:10:19,760
API with it so you can start using these

00:10:17,030 --> 00:10:21,380
new API today and you don't need to even

00:10:19,760 --> 00:10:22,790
need to be a coder for that you don't

00:10:21,380 --> 00:10:26,120
need to write code you can just manage

00:10:22,790 --> 00:10:28,610
all of this from your WP admin so this

00:10:26,120 --> 00:10:29,990
is the first one of them so the future

00:10:28,610 --> 00:10:32,630
policy plug-in it lets you control

00:10:29,990 --> 00:10:34,670
feature policy headers and it will take

00:10:32,630 --> 00:10:38,210
care of sending them in the front end

00:10:34,670 --> 00:10:40,280
and yeah that's basically all that this

00:10:38,210 --> 00:10:42,250
does for now and you can start using it

00:10:40,280 --> 00:10:45,980
it's now available in an early version

00:10:42,250 --> 00:10:47,960
0.1 and WordPress alert and that plug-in

00:10:45,980 --> 00:10:51,020
is complemented by the reporting API

00:10:47,960 --> 00:10:52,820
plug-in which you can also install they

00:10:51,020 --> 00:10:54,050
work without each other but they also

00:10:52,820 --> 00:10:57,110
integrate with each other if you have

00:10:54,050 --> 00:10:59,120
both of them so the reporting API it

00:10:57,110 --> 00:11:02,390
provides an endpoint with using the

00:10:59,120 --> 00:11:04,430
WordPress REST API an endpoint according

00:11:02,390 --> 00:11:05,720
to the reporting API standard and it

00:11:04,430 --> 00:11:07,970
also sends a header in the front

00:11:05,720 --> 00:11:10,430
and to make sure that all headers that

00:11:07,970 --> 00:11:12,350
that all reports are sent to this API

00:11:10,430 --> 00:11:14,420
endpoint and as you can see here you can

00:11:12,350 --> 00:11:17,269
browse they receive reports from your

00:11:14,420 --> 00:11:18,529
admin beckon yeah and as with the future

00:11:17,269 --> 00:11:20,089
policy plug-in this plugin is now

00:11:18,529 --> 00:11:25,550
available in an early version on

00:11:20,089 --> 00:11:27,230
wordpress.org so wrapping up in addition

00:11:25,550 --> 00:11:28,759
to all the other links so far here's

00:11:27,230 --> 00:11:32,360
some further resources to learn more

00:11:28,759 --> 00:11:34,610
about this new API for real deep dive I

00:11:32,360 --> 00:11:36,980
recommend looking at the actual w3c

00:11:34,610 --> 00:11:40,279
draft documents but those are very very

00:11:36,980 --> 00:11:41,930
detailed so the effort is especially the

00:11:40,279 --> 00:11:44,060
first three links here there are very

00:11:41,930 --> 00:11:45,800
great resources to get a quick

00:11:44,060 --> 00:11:47,509
understanding and an easy to understand

00:11:45,800 --> 00:11:51,019
way to learn about all these Paula's how

00:11:47,509 --> 00:11:53,560
this API is work and last but not least

00:11:51,019 --> 00:11:56,839
please make sure to use the plugins

00:11:53,560 --> 00:11:59,029
there as the api's are in an early state

00:11:56,839 --> 00:12:00,790
the plugins are in an early state but we

00:11:59,029 --> 00:12:03,139
wanted to get them out there early so

00:12:00,790 --> 00:12:05,329
we're because we're closing we're

00:12:03,139 --> 00:12:07,639
working closely together with the w3c

00:12:05,329 --> 00:12:09,769
team that have been drafting these

00:12:07,639 --> 00:12:12,459
specifications and we would like to get

00:12:09,769 --> 00:12:14,870
your feedback so and we can actually all

00:12:12,459 --> 00:12:16,220
influence how these specifications come

00:12:14,870 --> 00:12:19,160
out when they're actually made

00:12:16,220 --> 00:12:21,500
completely a standard so let's join

00:12:19,160 --> 00:12:23,779
forces to make it easier to compare to

00:12:21,500 --> 00:12:27,580
create compelling user experiences on

00:12:23,779 --> 00:12:28,630
the web and that's it thank you

00:12:27,580 --> 00:12:32,169
[Applause]

00:12:28,630 --> 00:12:32,169

YouTube URL: https://www.youtube.com/watch?v=QtlnZY_otiQ


