Title: #ACEU19: Christofer Dutz –  Episode IV - A New Hope: Industry 4.0 done our way
Publication date: 2019-10-31
Playlist: ApacheCon Europe 2019 – Berlin
Description: 
	More: https://aceu19.apachecon.com/session/episode-iv-new-hope-industry-40-done-our-way

It is a period of technological change. Rebel Industry 4.0 open-source software solutions, striking from hidden bases, have won their first victories against the evil proprietary Industrial Empire. During the battle, Rebel spies managed to implement industrial protocols to the Empire’s ultimate weapons, the industrial Programmable Logic Controllers, almost unprotected pieces of hardware with enough power to destroy an entire planet. Pursued by the Empire’s sinister agents, a representative of the project races to Berlin aboard his ICE, custodian of his plans to revolutionize the way we are building Industry 4.0 applications, that can free all companies and restore freedom to the industry …

Learn how the Apache PLC4X project has evolved and what we have planned for the future and especially how it can currently help close the gap between industrial hardware and modern software solutions to build the next generation of industrial IoT solutions, based entirely on open-source software.
Captions: 
	00:00:04,420 --> 00:00:10,389
thanks for coming and yeah well I'm

00:00:07,480 --> 00:00:13,330
gonna be talking about some serious IOT

00:00:10,389 --> 00:00:15,250
Wars and well from you can already see

00:00:13,330 --> 00:00:18,850
from the title and from the title of the

00:00:15,250 --> 00:00:21,910
whole talk I grew up with Luke Skywalker

00:00:18,850 --> 00:00:24,210
and his friends so please be prepared

00:00:21,910 --> 00:00:26,680
for some Star Wars references in this

00:00:24,210 --> 00:00:27,460
first of all Who am I well my name is

00:00:26,680 --> 00:00:29,590
Christopher Dodd

00:00:27,460 --> 00:00:32,680
I am a senior IT consultant for a

00:00:29,590 --> 00:00:35,230
company code centric and I'm a total

00:00:32,680 --> 00:00:38,470
open source and foodie s so all of my

00:00:35,230 --> 00:00:40,840
free time goes into several open source

00:00:38,470 --> 00:00:42,850
projects I think I lost count and how

00:00:40,840 --> 00:00:46,360
many projects I sort of contributed to I

00:00:42,850 --> 00:00:48,940
think it was sort of 3040 ish thing

00:00:46,360 --> 00:00:52,960
usually I'm sort of a drive-by committer

00:00:48,940 --> 00:00:55,440
sort of using things didn't work submit

00:00:52,960 --> 00:00:57,940
a patch but with Apache I sort of stuck

00:00:55,440 --> 00:00:59,950
I've sort of started with Apache flex

00:00:57,940 --> 00:01:01,690
but well it has grown to sort of I think

00:00:59,950 --> 00:01:06,640
it's I'm currently sort of committer of

00:01:01,690 --> 00:01:08,079
10 projects I think pmc of 5 or 6 was

00:01:06,640 --> 00:01:10,990
invited to become a member of the

00:01:08,079 --> 00:01:12,820
foundation and well now I've got another

00:01:10,990 --> 00:01:15,610
one of these really super important

00:01:12,820 --> 00:01:19,570
titles I got to add I have the honor of

00:01:15,610 --> 00:01:23,380
being the VP of Apache PLC 4x but to

00:01:19,570 --> 00:01:25,600
sort of build the bridge to why is an IT

00:01:23,380 --> 00:01:27,520
guy doing this hardware stuff well I'm

00:01:25,600 --> 00:01:29,950
also a son of an Electra engineer so I

00:01:27,520 --> 00:01:33,640
remember my father brought back this

00:01:29,950 --> 00:01:35,710
Commodore 64 when it was presented at

00:01:33,640 --> 00:01:37,390
the Hannover Messe yeah well and the

00:01:35,710 --> 00:01:41,320
computer that was I was playing with

00:01:37,390 --> 00:01:42,790
after that was a Siemens s5 so well he

00:01:41,320 --> 00:01:44,610
brought that back from home and I found

00:01:42,790 --> 00:01:48,820
it interesting and I always liked things

00:01:44,610 --> 00:01:53,049
real things not virtual things and some

00:01:48,820 --> 00:01:59,729
somebody else's computer so that's why I

00:01:53,049 --> 00:02:02,049
sort of had this thing with IOT yeah

00:01:59,729 --> 00:02:03,970
acrocentric usually we we have one day

00:02:02,049 --> 00:02:05,530
where we can work on open source well

00:02:03,970 --> 00:02:07,210
for the past few years I had the

00:02:05,530 --> 00:02:12,819
pleasure of sort of being able to work

00:02:07,210 --> 00:02:15,280
on this 100% of my time so what I was

00:02:12,819 --> 00:02:17,349
able to be doing this so well let's say

00:02:15,280 --> 00:02:18,280
industry 4.0 is everywhere it's sort of

00:02:17,349 --> 00:02:20,410
like the

00:02:18,280 --> 00:02:22,480
the buzzword everybody uses right now

00:02:20,410 --> 00:02:24,190
and while most people don't really have

00:02:22,480 --> 00:02:25,870
a really clear impression what it

00:02:24,190 --> 00:02:27,819
actually means sort of like the cloud

00:02:25,870 --> 00:02:29,980
ten years ago everybody want the cloud

00:02:27,819 --> 00:02:32,590
but didn't really know what do with it

00:02:29,980 --> 00:02:34,510
but if you sort of dig dig dig a little

00:02:32,590 --> 00:02:36,640
deeper what they all sort of what it

00:02:34,510 --> 00:02:39,610
comes down it's sort of IOT technology

00:02:36,640 --> 00:02:42,610
it's sort of cloud technology it's big

00:02:39,610 --> 00:02:44,410
data and machine learning and well they

00:02:42,610 --> 00:02:46,150
like to call it artificial intelligence

00:02:44,410 --> 00:02:52,180
I tend to sort of all call it something

00:02:46,150 --> 00:02:55,030
like smart algorithms on on Big Data so

00:02:52,180 --> 00:02:57,910
this is totally things so I I haven't

00:02:55,030 --> 00:03:00,430
been at a single company in the past two

00:02:57,910 --> 00:03:04,540
years where they didn't sort of have any

00:03:00,430 --> 00:03:06,819
sort of chief of industry 4.0 or chief

00:03:04,540 --> 00:03:08,709
digitization officer but usually they

00:03:06,819 --> 00:03:11,860
didn't quite even know what they were

00:03:08,709 --> 00:03:16,000
working on but everybody is sure the

00:03:11,860 --> 00:03:18,540
trend is going to be sort of going up so

00:03:16,000 --> 00:03:21,730
I intentionally didn't sort of put any

00:03:18,540 --> 00:03:25,870
source underneath because I had multiple

00:03:21,730 --> 00:03:27,760
sources I wanted to overlay them but I

00:03:25,870 --> 00:03:30,340
sort of everybody had different measures

00:03:27,760 --> 00:03:32,410
different bases on which these numbers

00:03:30,340 --> 00:03:34,690
were calculated so it was hard to sort

00:03:32,410 --> 00:03:38,290
of put them over each other but if you

00:03:34,690 --> 00:03:42,340
sort of just type I think that was just

00:03:38,290 --> 00:03:43,870
sort of IOT growth chart in Google well

00:03:42,340 --> 00:03:46,299
that's sort of what you get and you well

00:03:43,870 --> 00:03:48,010
it doesn't really matter at what scale

00:03:46,299 --> 00:03:54,630
you put it on it sort of always sort of

00:03:48,010 --> 00:03:57,220
an exponential growth chart but well

00:03:54,630 --> 00:04:00,280
even if they all want it it's still

00:03:57,220 --> 00:04:03,540
completely new to them usually there was

00:04:00,280 --> 00:04:06,459
sort of what we if we call what we do IT

00:04:03,540 --> 00:04:08,650
in the industry they usually call it o G

00:04:06,459 --> 00:04:10,780
sort of operational technology it sort

00:04:08,650 --> 00:04:12,970
of ache they keep through the wiring for

00:04:10,780 --> 00:04:14,910
the the production plants they do take

00:04:12,970 --> 00:04:17,560
care of the windows servers or the

00:04:14,910 --> 00:04:20,109
Windows PCs running all the stuff it's

00:04:17,560 --> 00:04:23,250
mainly windows-based and they have

00:04:20,109 --> 00:04:29,650
absolutely no now how about all of these

00:04:23,250 --> 00:04:31,690
IOT cloud big data tools so what they do

00:04:29,650 --> 00:04:32,080
is what they always did so whenever they

00:04:31,690 --> 00:04:34,030
had

00:04:32,080 --> 00:04:38,740
sort of they they whoa let's say they

00:04:34,030 --> 00:04:41,169
have one of these PLC's that's an s 7200

00:04:38,740 --> 00:04:42,789
so if the entry model and well let's say

00:04:41,169 --> 00:04:44,229
they had a lot of these and they were

00:04:42,789 --> 00:04:46,300
too slow so what they went to their

00:04:44,229 --> 00:04:48,789
vendor and said well they're too slow we

00:04:46,300 --> 00:04:50,949
need a faster one so they provided a

00:04:48,789 --> 00:04:53,379
faster one so it was always the case

00:04:50,949 --> 00:04:58,509
that well the customers needed something

00:04:53,379 --> 00:05:02,560
the supplier shipped it and that's what

00:04:58,509 --> 00:05:04,840
they tried here too but these topics are

00:05:02,560 --> 00:05:08,169
also completely new to the vendors I

00:05:04,840 --> 00:05:11,050
think most of the big plc companies they

00:05:08,169 --> 00:05:13,719
have absolutely no footprint in sort of

00:05:11,050 --> 00:05:16,270
big data machine learning cloud

00:05:13,719 --> 00:05:18,520
technology it they they were sort of

00:05:16,270 --> 00:05:22,180
soft the software part is pretty new to

00:05:18,520 --> 00:05:23,830
them so but they don't want to sort of

00:05:22,180 --> 00:05:25,900
admit that so what do they do well they

00:05:23,830 --> 00:05:28,029
start buying up all these companies so

00:05:25,900 --> 00:05:31,180
that was what was tweeted for the last

00:05:28,029 --> 00:05:35,650
two years or so all this well company X

00:05:31,180 --> 00:05:39,029
is buying a start-up Y for insane amount

00:05:35,650 --> 00:05:42,550
of millions of dollars just to sort of

00:05:39,029 --> 00:05:49,419
sort of buy in all this stuff they were

00:05:42,550 --> 00:05:52,270
missing also they're quite sort of very

00:05:49,419 --> 00:05:54,069
actively trying to acquire new skilled

00:05:52,270 --> 00:05:58,210
people without buying their companies

00:05:54,069 --> 00:06:01,289
but well right now I have to admit that

00:05:58,210 --> 00:06:04,599
tomates erv looks like they're sort of

00:06:01,289 --> 00:06:07,750
delivering but they're not delivering

00:06:04,599 --> 00:06:09,669
very well so they're sort of currently

00:06:07,750 --> 00:06:14,949
working hard on destroying their

00:06:09,669 --> 00:06:16,629
reputation and the other thing is well

00:06:14,949 --> 00:06:21,490
they are now sort of they bought all

00:06:16,629 --> 00:06:23,110
this cool IT tech stuff but the way

00:06:21,490 --> 00:06:24,879
they're sort of bringing it to market is

00:06:23,110 --> 00:06:27,099
still the same way they've been doing it

00:06:24,879 --> 00:06:29,589
for 20 years it's always closed source

00:06:27,099 --> 00:06:32,050
even if it might be built up out of 95

00:06:29,589 --> 00:06:34,360
percent open source they have very

00:06:32,050 --> 00:06:36,969
restrictive licenses sometimes they have

00:06:34,360 --> 00:06:39,339
clouds where you have to sign that all

00:06:36,969 --> 00:06:42,729
the data you send into the cloud becomes

00:06:39,339 --> 00:06:43,180
the property of the cloud vendor I mean

00:06:42,729 --> 00:06:45,639
come on

00:06:43,180 --> 00:06:47,949
if you're if you're sort of

00:06:45,639 --> 00:06:51,099
coca-cola and you're submitting your

00:06:47,949 --> 00:06:53,169
coca-cola formula into the cloud well I

00:06:51,099 --> 00:06:57,639
wouldn't trust them just selling that to

00:06:53,169 --> 00:07:01,120
Pepsi they have their insanely expensive

00:06:57,639 --> 00:07:04,150
so I remember in the 90s when I first

00:07:01,120 --> 00:07:06,729
heard how much a license for an Oracle

00:07:04,150 --> 00:07:09,969
instance was I thought who on earth

00:07:06,729 --> 00:07:12,759
would be willing to pay that but turns

00:07:09,969 --> 00:07:15,460
out if you go to the industry license

00:07:12,759 --> 00:07:19,060
costs are just out of this world sort of

00:07:15,460 --> 00:07:21,219
like bridges to get data out of a

00:07:19,060 --> 00:07:22,930
network well you're easily paying eight

00:07:21,219 --> 00:07:25,539
hundred thousand euros and license cost

00:07:22,930 --> 00:07:28,240
a year for one machine and that's sort

00:07:25,539 --> 00:07:30,939
of just that's just totally wrong and

00:07:28,240 --> 00:07:33,099
let last not least well usually if

00:07:30,939 --> 00:07:35,139
you've got the the software from vendor

00:07:33,099 --> 00:07:37,719
a well it will not talk to the devices

00:07:35,139 --> 00:07:41,110
of vendor B so your if you decided to go

00:07:37,719 --> 00:07:43,000
one road you're sort of either not a not

00:07:41,110 --> 00:07:45,039
able to talk to everything or you just

00:07:43,000 --> 00:07:49,659
sort of locked into that road and just

00:07:45,039 --> 00:07:51,610
can't switch so for me sort of industry

00:07:49,659 --> 00:07:55,240
software sort of comes down to this it's

00:07:51,610 --> 00:07:57,759
sort of the Deathstar it's it's insanely

00:07:55,240 --> 00:07:59,770
expensive I think the u.s. guys here you

00:07:57,759 --> 00:08:04,000
had this really cool petition where

00:07:59,770 --> 00:08:06,849
people demanded that a congress sort of

00:08:04,000 --> 00:08:08,500
discusses building a Death Star and I

00:08:06,849 --> 00:08:11,529
think the numbers they put in there they

00:08:08,500 --> 00:08:13,419
were really really great well I think we

00:08:11,529 --> 00:08:15,310
all agree a Death Star is highly

00:08:13,419 --> 00:08:18,279
proprietary well you can't do very much

00:08:15,310 --> 00:08:20,710
with it except blowing up planets it is

00:08:18,279 --> 00:08:23,860
pretty inflexible you know how long it

00:08:20,710 --> 00:08:26,289
takes to get around the moon and yeah

00:08:23,860 --> 00:08:28,389
well in the in the end it's also very

00:08:26,289 --> 00:08:31,060
insecure because well come on we all

00:08:28,389 --> 00:08:35,550
know a one-man spacecraft just blew it

00:08:31,060 --> 00:08:38,199
up and nothing not no time but well

00:08:35,550 --> 00:08:41,039
these topics are sort of all we've been

00:08:38,199 --> 00:08:44,680
doing for almost a decade

00:08:41,039 --> 00:08:47,440
modern IT Apache Apache has sort of all

00:08:44,680 --> 00:08:51,339
the software we need to build great

00:08:47,440 --> 00:08:53,110
industrial software the solutions we've

00:08:51,339 --> 00:08:55,300
got plenty of skilled people because

00:08:53,110 --> 00:08:58,000
they come on we built this stuff we know

00:08:55,300 --> 00:08:59,470
how to use it and all the illustration

00:08:58,000 --> 00:09:06,970
needs to do is sort of

00:08:59,470 --> 00:09:08,050
just ask us so sort of between Christmas

00:09:06,970 --> 00:09:10,030
and New Year's Eve

00:09:08,050 --> 00:09:12,970
there was this one tweet and I find it

00:09:10,030 --> 00:09:15,490
found it really really interesting it

00:09:12,970 --> 00:09:17,890
was by a company called Bain I have to

00:09:15,490 --> 00:09:19,510
admit living in Germany I haven't heard

00:09:17,890 --> 00:09:22,570
of them but I think in the u.s. they're

00:09:19,510 --> 00:09:25,630
sort of a big deal and they seem to have

00:09:22,570 --> 00:09:28,270
a lot of customers and so they had they

00:09:25,630 --> 00:09:30,820
asked customers sort of in the

00:09:28,270 --> 00:09:32,850
production industry about what they

00:09:30,820 --> 00:09:37,930
think are the most significant barriers

00:09:32,850 --> 00:09:40,540
in adopting sort of these industry 4.0

00:09:37,930 --> 00:09:43,000
solutions and we just look over here I

00:09:40,540 --> 00:09:47,560
think this might be a bit laggy with

00:09:43,000 --> 00:09:49,210
this yeah I'll just not do it at the top

00:09:47,560 --> 00:09:52,120
most you can see security well that's

00:09:49,210 --> 00:09:55,240
what they're feared about most well I

00:09:52,120 --> 00:09:59,500
agree and I Tod integration so they have

00:09:55,240 --> 00:10:04,390
these IT systems let's say Linux cloud

00:09:59,500 --> 00:10:07,240
systems AWS but their own systems are

00:10:04,390 --> 00:10:10,080
usually just plain old Windows systems

00:10:07,240 --> 00:10:13,600
so how do you integrate those systems

00:10:10,080 --> 00:10:16,780
sometimes unclear return on invest well

00:10:13,600 --> 00:10:19,510
the first year I was traveling around

00:10:16,780 --> 00:10:21,130
everybody was wanting to do industry 4.0

00:10:19,510 --> 00:10:23,740
and when I asked them what do you want

00:10:21,130 --> 00:10:26,080
to do well they said yeah well at first

00:10:23,740 --> 00:10:29,680
we're gonna start collecting all the

00:10:26,080 --> 00:10:31,960
data and we'll just pray that next year

00:10:29,680 --> 00:10:33,850
we'll have an idea what to do with it

00:10:31,960 --> 00:10:36,400
so it's it's it's very difficult to get

00:10:33,850 --> 00:10:38,100
funding for activities like that if you

00:10:36,400 --> 00:10:40,750
don't really know what you want to do

00:10:38,100 --> 00:10:42,880
then they have the problem of technical

00:10:40,750 --> 00:10:45,340
expertise well they would like to do

00:10:42,880 --> 00:10:47,110
cloud stuff but they don't have anyone

00:10:45,340 --> 00:10:50,500
who knows how to do it

00:10:47,110 --> 00:10:52,900
interoperability I said they have very

00:10:50,500 --> 00:10:55,960
proprietary systems they're just not

00:10:52,900 --> 00:10:59,170
made for talking to each other data

00:10:55,960 --> 00:11:03,220
portability there's a huge amount of

00:10:59,170 --> 00:11:06,160
different ways of expressing data so is

00:11:03,220 --> 00:11:08,170
this which which bit representation is

00:11:06,160 --> 00:11:11,380
this integer value or this floating

00:11:08,170 --> 00:11:13,390
point so it's sometimes not that easy to

00:11:11,380 --> 00:11:16,810
sort of just get data from

00:11:13,390 --> 00:11:20,320
system and to the other vendor risk yeah

00:11:16,810 --> 00:11:22,930
if you decide to go down vendor lock-in

00:11:20,320 --> 00:11:23,740
Road what happens if that vendor sort of

00:11:22,930 --> 00:11:26,410
just dies

00:11:23,740 --> 00:11:28,330
well guess if you'd go with simens the

00:11:26,410 --> 00:11:29,770
chance of them just stopping to

00:11:28,330 --> 00:11:32,170
disappear is probably gonna be pretty

00:11:29,770 --> 00:11:35,400
slim but if you decide to go with a

00:11:32,170 --> 00:11:38,530
smaller vendor what happens then

00:11:35,400 --> 00:11:41,170
transition risk well if the worst case

00:11:38,530 --> 00:11:45,940
happens above well how do you get your

00:11:41,170 --> 00:11:48,010
stuff over legal legal issues well that

00:11:45,940 --> 00:11:51,730
that's a huge thing because if you start

00:11:48,010 --> 00:11:55,540
reading these license agreements of the

00:11:51,730 --> 00:11:57,220
the industrial stuff it's really really

00:11:55,540 --> 00:11:59,590
difficult because they write all sorts

00:11:57,220 --> 00:12:02,620
of stuff in there some of that is sort

00:11:59,590 --> 00:12:05,080
of legally binding everywhere some of

00:12:02,620 --> 00:12:07,510
that is legally binding only will it say

00:12:05,080 --> 00:12:09,370
in the US some of that isn't legally

00:12:07,510 --> 00:12:11,740
binding at all so you always have to

00:12:09,370 --> 00:12:14,200
have some sort of lawyer just look on

00:12:11,740 --> 00:12:16,780
this and find out which of the rules

00:12:14,200 --> 00:12:19,000
apply and what do they mean for you for

00:12:16,780 --> 00:12:21,640
example one thing I really really like

00:12:19,000 --> 00:12:24,480
is whenever I start implementing a new

00:12:21,640 --> 00:12:27,910
protocol I usually contact the vendor

00:12:24,480 --> 00:12:30,010
and well sometimes they sent me Hardware

00:12:27,910 --> 00:12:33,150
for free and documentation and sometimes

00:12:30,010 --> 00:12:35,560
they threatened me to sue me to help

00:12:33,150 --> 00:12:37,060
usually they say yeah but everybody

00:12:35,560 --> 00:12:39,400
signed that you are not allowed to

00:12:37,060 --> 00:12:43,180
reverse-engineer these protocols well

00:12:39,400 --> 00:12:45,160
living in Europe being bound by European

00:12:43,180 --> 00:12:46,690
law well they can write everything they

00:12:45,160 --> 00:12:48,310
want enter the in their license

00:12:46,690 --> 00:12:50,950
agreement I usually tell them they

00:12:48,310 --> 00:12:52,930
should just cut that print pictures of

00:12:50,950 --> 00:12:54,580
cute kittens because it was sort of

00:12:52,930 --> 00:12:56,890
legally have the same impact but it

00:12:54,580 --> 00:13:00,900
would sort of look nicer so you really

00:12:56,890 --> 00:13:03,940
have to know your legal bases their

00:13:00,900 --> 00:13:05,320
network constraints yeah also a fun

00:13:03,940 --> 00:13:06,910
thing everybody just wants to collect

00:13:05,320 --> 00:13:08,830
all the data and pump it into the cloud

00:13:06,910 --> 00:13:11,950
but if you start doing the math a little

00:13:08,830 --> 00:13:14,380
a little while ago we sort of had a

00:13:11,950 --> 00:13:16,360
proof of concept for a car manufacturer

00:13:14,380 --> 00:13:18,010
and they wanted to sort of collect a

00:13:16,360 --> 00:13:19,690
certain amount of data in a certain

00:13:18,010 --> 00:13:22,480
interval and we did a little bit of math

00:13:19,690 --> 00:13:26,020
so yeah well we need to pump 15

00:13:22,480 --> 00:13:27,280
gigabytes of data per minute does your

00:13:26,020 --> 00:13:31,510
internet connection support that

00:13:27,280 --> 00:13:34,540
so oh well and last not least vendor

00:13:31,510 --> 00:13:36,880
locket so let me just concentrate on the

00:13:34,540 --> 00:13:40,120
barrier connectivity because that's what

00:13:36,880 --> 00:13:42,570
PLC fit Forex is about sort of sums up

00:13:40,120 --> 00:13:45,280
to those three bars

00:13:42,570 --> 00:13:48,270
most major vendors of industrial

00:13:45,280 --> 00:13:51,220
hardware sort of they define their own

00:13:48,270 --> 00:13:53,680
proprietary protocols and that this was

00:13:51,220 --> 00:13:56,500
sort of a result of these things sort of

00:13:53,680 --> 00:13:59,380
being built as standalone machines

00:13:56,500 --> 00:14:01,500
nobody thought of connecting them and

00:13:59,380 --> 00:14:05,170
they were doing their jobs really nicely

00:14:01,500 --> 00:14:07,150
so people started asking yeah one I want

00:14:05,170 --> 00:14:08,770
to integrate that into my country I want

00:14:07,150 --> 00:14:10,960
to build a control system I want to talk

00:14:08,770 --> 00:14:13,890
to these devices so the vendor has sort

00:14:10,960 --> 00:14:16,420
of invented the protocol to do that and

00:14:13,890 --> 00:14:18,820
now well now we're sort of at a

00:14:16,420 --> 00:14:21,490
situation where we want to connect all

00:14:18,820 --> 00:14:23,790
the things together and now everybody's

00:14:21,490 --> 00:14:26,080
just talking a different language

00:14:23,790 --> 00:14:28,420
they're usually completely uncomfortable

00:14:26,080 --> 00:14:33,430
with each other there are some standards

00:14:28,420 --> 00:14:37,120
for example this device can speak s7 Pro

00:14:33,430 --> 00:14:40,540
finet and mod Blas and let's say Modbus

00:14:37,120 --> 00:14:42,220
is sort of a standard sort of every PLC

00:14:40,540 --> 00:14:45,640
katalk but you can do very limited

00:14:42,220 --> 00:14:47,320
things with it and if you really want to

00:14:45,640 --> 00:14:52,990
good performance you have to speak s7

00:14:47,320 --> 00:14:55,360
with it so there are some standards but

00:14:52,990 --> 00:14:58,750
if you use them well you don't get very

00:14:55,360 --> 00:15:01,870
far there's no Universal way to

00:14:58,750 --> 00:15:04,570
communicate from the software side so

00:15:01,870 --> 00:15:06,820
there are some available drivers out

00:15:04,570 --> 00:15:10,000
there but they're usually GPL licensed

00:15:06,820 --> 00:15:13,000
and they were usually written in the end

00:15:10,000 --> 00:15:17,530
of the 90s by people learning Java by

00:15:13,000 --> 00:15:20,080
just porting C++ code making it sort of

00:15:17,530 --> 00:15:23,350
compiled able in Java so that a lot of

00:15:20,080 --> 00:15:26,470
these drivers have sort of this like in

00:15:23,350 --> 00:15:28,420
C you had with underscore separated

00:15:26,470 --> 00:15:32,950
method names method names starting with

00:15:28,420 --> 00:15:35,380
big letters and sort of yeah it's not

00:15:32,950 --> 00:15:38,050
fun looking into those there's a new

00:15:35,380 --> 00:15:39,760
protocol called OPC UA will new well

00:15:38,050 --> 00:15:41,270
they started planning that 10 years ago

00:15:39,760 --> 00:15:46,220
and let's say is sort of

00:15:41,270 --> 00:15:48,440
usable version has come out last year so

00:15:46,220 --> 00:15:53,600
summing it up this is the problem

00:15:48,440 --> 00:15:56,960
everybody knows Star Wars r2d2 usually

00:15:53,600 --> 00:16:00,650
just beeps and blinks and Luke wall

00:15:56,960 --> 00:16:03,490
doesn't really understand him so that's

00:16:00,650 --> 00:16:07,340
the situation we currently have I

00:16:03,490 --> 00:16:09,500
mentioned OPC UA I'm explicitly talking

00:16:07,340 --> 00:16:11,450
about this because it is currently being

00:16:09,500 --> 00:16:15,560
sold as sort of being the Silver Bullet

00:16:11,450 --> 00:16:17,300
to solve all these problems but so it's

00:16:15,560 --> 00:16:19,430
a standard of four inter machine

00:16:17,300 --> 00:16:24,470
communication it's sort of defined by a

00:16:19,430 --> 00:16:26,870
huge amount I think every company sort

00:16:24,470 --> 00:16:28,790
of building PLC's is sort of involved in

00:16:26,870 --> 00:16:31,850
this so it is if you go to the website

00:16:28,790 --> 00:16:34,130
it's sort of a the full screen just sort

00:16:31,850 --> 00:16:36,500
of like the Apache if you sum print all

00:16:34,130 --> 00:16:37,910
the Apache logos well double that and

00:16:36,500 --> 00:16:40,940
sort of that's the amount of companies

00:16:37,910 --> 00:16:44,840
involved there and you can imagine if

00:16:40,940 --> 00:16:46,820
you put two 400 companies together to

00:16:44,840 --> 00:16:48,490
discuss something they will probably

00:16:46,820 --> 00:16:50,720
take a while to release something

00:16:48,490 --> 00:16:55,730
they've been working on for about ten

00:16:50,720 --> 00:16:58,010
years and it sort of defines how to how

00:16:55,730 --> 00:17:00,650
data is transported from A to B but goes

00:16:58,010 --> 00:17:03,020
a little bit beyond that it also defines

00:17:00,650 --> 00:17:06,530
the semantics so you're not just pushing

00:17:03,020 --> 00:17:08,930
an analogue value as an integer over the

00:17:06,530 --> 00:17:11,630
wire you're also saying well this is an

00:17:08,930 --> 00:17:13,760
integer value in this encoding and it

00:17:11,630 --> 00:17:16,459
has a min and Max and it sort of is

00:17:13,760 --> 00:17:19,850
going to represent a pressure value so

00:17:16,459 --> 00:17:22,130
you get a little more context but

00:17:19,850 --> 00:17:26,780
currently it's absolutely not a solution

00:17:22,130 --> 00:17:29,150
for me let's say I said the the the

00:17:26,780 --> 00:17:33,020
standard was released in a really usable

00:17:29,150 --> 00:17:35,570
form sort of autumn last year and I

00:17:33,020 --> 00:17:39,710
think the numbers I recently saw was

00:17:35,570 --> 00:17:43,400
that every fourth POC being sold

00:17:39,710 --> 00:17:45,650
supports OPC UA you can imagine one of

00:17:43,400 --> 00:17:49,820
these machines sort of usually lives for

00:17:45,650 --> 00:17:53,570
15 to 25 years and we now have sort of a

00:17:49,820 --> 00:17:54,660
year where one quarter of the sold PLC

00:17:53,570 --> 00:17:56,310
is a suppor

00:17:54,660 --> 00:17:59,370
Oh PC way I think you could do the math

00:17:56,310 --> 00:18:02,970
you won't probably have anything sort of

00:17:59,370 --> 00:18:05,460
like 80% so I think we'll be talking two

00:18:02,970 --> 00:18:09,720
or three per set percent being able to

00:18:05,460 --> 00:18:13,280
talk that I think the protocol being

00:18:09,720 --> 00:18:16,230
able to do a lot is sort of pretty

00:18:13,280 --> 00:18:17,760
over-engineered for most use cases there

00:18:16,230 --> 00:18:20,130
are some use cases where it makes sense

00:18:17,760 --> 00:18:28,020
but I say I'd say for most use cases is

00:18:20,130 --> 00:18:30,510
over-engineered and sort of yeah this

00:18:28,020 --> 00:18:33,030
makes it sort of the performance being

00:18:30,510 --> 00:18:36,530
well let's call it less than I'll deal

00:18:33,030 --> 00:18:40,500
I rather say it's sort of catastrophic

00:18:36,530 --> 00:18:42,060
so for me currently it's sort of like

00:18:40,500 --> 00:18:43,770
trying to fly the Millennium Falcon

00:18:42,060 --> 00:18:47,310
while they are sort of a Star Destroyer

00:18:43,770 --> 00:18:49,260
attached to it I bet you know it's sort

00:18:47,310 --> 00:18:52,320
of that's how a PLC fields if you turn

00:18:49,260 --> 00:18:55,530
on the the OPC way server it's just sort

00:18:52,320 --> 00:18:59,300
of become sluggish sometimes it just

00:18:55,530 --> 00:19:03,060
stops working because it's so overloaded

00:18:59,300 --> 00:19:04,920
so for example in a field test those

00:19:03,060 --> 00:19:07,500
were tests done by his immense so it

00:19:04,920 --> 00:19:09,960
wasn't sort of usually a good thing if

00:19:07,500 --> 00:19:13,770
you sort of benchmark something you can

00:19:09,960 --> 00:19:15,840
you get to set the field so you you can

00:19:13,770 --> 00:19:18,240
sort of show off your numbers a little

00:19:15,840 --> 00:19:20,190
but this was what that was what Zeman's

00:19:18,240 --> 00:19:22,530
tried to do in that one case and they

00:19:20,190 --> 00:19:26,220
were able to sort of get 200 data points

00:19:22,530 --> 00:19:28,470
every two seconds out of a PLC and those

00:19:26,220 --> 00:19:32,100
weren't the little ones here for 150

00:19:28,470 --> 00:19:35,520
bucks we're talking about the 30,000 big

00:19:32,100 --> 00:19:37,950
as seven devices and and if they went a

00:19:35,520 --> 00:19:40,260
little bit above the 200 data points

00:19:37,950 --> 00:19:42,840
every two seconds the PLC was overloaded

00:19:40,260 --> 00:19:45,600
and shut down you can imagine if you've

00:19:42,840 --> 00:19:47,550
got a production line with I think in

00:19:45,600 --> 00:19:50,040
that case it was thousand two hundred

00:19:47,550 --> 00:19:52,890
PLC's sort of working together if one

00:19:50,040 --> 00:19:54,000
shuts down that's not good and well if

00:19:52,890 --> 00:19:57,240
you're talking about machine learning

00:19:54,000 --> 00:20:01,280
well sort of yeah to 200 data points

00:19:57,240 --> 00:20:04,050
every two seconds that's sort of yeah

00:20:01,280 --> 00:20:06,090
the other thing was the protocol I said

00:20:04,050 --> 00:20:08,100
it's pretty heavy the test server so

00:20:06,090 --> 00:20:12,590
they had sort of like you

00:20:08,100 --> 00:20:12,590
you just requested virtual machines yeah

00:20:16,640 --> 00:20:24,210
it was it was sort of bully ins but also

00:20:20,730 --> 00:20:26,750
a lot of short values sort of real

00:20:24,210 --> 00:20:29,100
numbers and stuff like that so they had

00:20:26,750 --> 00:20:31,440
2600 data points defined and the cool

00:20:29,100 --> 00:20:34,950
thing is being such a big manufacturer

00:20:31,440 --> 00:20:37,110
they sort of had every or customer they

00:20:34,950 --> 00:20:39,750
had all the manufacturers sort of they

00:20:37,110 --> 00:20:41,720
said you have to provide your PLC

00:20:39,750 --> 00:20:44,490
programs in a way that I can read this

00:20:41,720 --> 00:20:47,730
and it was sort of the same data

00:20:44,490 --> 00:20:50,909
structure on all of these PLC's it was

00:20:47,730 --> 00:20:53,400
sort of a wild mixture of boolean values

00:20:50,909 --> 00:20:58,260
and sort of floating-point numbers and

00:20:53,400 --> 00:21:00,360
integer values yeah so the thing was

00:20:58,260 --> 00:21:02,700
there you could sort of request in their

00:21:00,360 --> 00:21:05,370
data center small medium and large

00:21:02,700 --> 00:21:07,080
virtual machines so what they did they

00:21:05,370 --> 00:21:09,840
sort of requested a medium one and

00:21:07,080 --> 00:21:11,460
wanted to collect data on them and one

00:21:09,840 --> 00:21:14,549
of these virtual machines was just

00:21:11,460 --> 00:21:17,760
overloaded when processing more than 20

00:21:14,549 --> 00:21:21,210
pts the thing is they wanted to collect

00:21:17,760 --> 00:21:22,970
on 26,000 PLC so you can imagine the

00:21:21,210 --> 00:21:25,860
number of servers you need to do that

00:21:22,970 --> 00:21:27,630
and it was expensive because you even if

00:21:25,860 --> 00:21:29,880
they just sort of had to sort of like

00:21:27,630 --> 00:21:33,330
just rebuilt all of their factories so

00:21:29,880 --> 00:21:36,510
they all had really brand-new PLC's they

00:21:33,330 --> 00:21:42,570
would have to pay 800 euros per field C

00:21:36,510 --> 00:21:45,510
to turn on the OPC UA support so what we

00:21:42,570 --> 00:21:47,460
need is we need a c-3po because that was

00:21:45,510 --> 00:21:51,929
always the the guy sort of translating

00:21:47,460 --> 00:21:55,380
what r2 said um and well let's say PLC

00:21:51,929 --> 00:21:58,049
4x is exactly that you'll see that's

00:21:55,380 --> 00:22:00,090
sort of our mission statements or PLC 4x

00:21:58,049 --> 00:22:01,770
is a set of libraries for communicating

00:22:00,090 --> 00:22:03,780
with industrial programmable logic

00:22:01,770 --> 00:22:06,600
controllers using a variety of protocols

00:22:03,780 --> 00:22:08,130
but with a shared API and the shared API

00:22:06,600 --> 00:22:12,120
part is where it's sort of

00:22:08,130 --> 00:22:15,360
differentiates itself from the rest so

00:22:12,120 --> 00:22:19,429
please pay attention to my maximum

00:22:15,360 --> 00:22:19,429
photoshop abilities here

00:22:19,559 --> 00:22:25,540
yeah so what is Apache beauty freaks

00:22:22,990 --> 00:22:29,110
well mainly it sort of built all around

00:22:25,540 --> 00:22:31,420
this one module called the API so it's

00:22:29,110 --> 00:22:34,420
it's just one dependency you need to add

00:22:31,420 --> 00:22:38,470
to your project but it's also sort of

00:22:34,420 --> 00:22:40,870
has a wide big set of integration module

00:22:38,470 --> 00:22:42,550
so you don't have to use the API

00:22:40,870 --> 00:22:44,140
directly you can sort of use an

00:22:42,550 --> 00:22:48,160
integration module and just use it in

00:22:44,140 --> 00:22:50,110
camel in in knife I we've got four pachi

00:22:48,160 --> 00:22:53,050
Kafka we've got direct integrations for

00:22:50,110 --> 00:22:55,000
log stash for for for all sorts of

00:22:53,050 --> 00:22:57,730
software and I think I'm gonna have a

00:22:55,000 --> 00:23:00,940
slide with all the ones I have a few

00:22:57,730 --> 00:23:03,550
slides later currently it's sort of it's

00:23:00,940 --> 00:23:05,230
called PLC 4x and most of the stuff

00:23:03,550 --> 00:23:08,530
we're currently doing a sort of in Java

00:23:05,230 --> 00:23:11,950
but we're working hard on parching all

00:23:08,530 --> 00:23:13,809
of this to c++ to c-sharp to Python we

00:23:11,950 --> 00:23:16,090
already have the constructs the builds

00:23:13,809 --> 00:23:19,059
work we just need the manpower to sort

00:23:16,090 --> 00:23:21,040
of implement the API is because we

00:23:19,059 --> 00:23:24,940
didn't want to do what is sort of quite

00:23:21,040 --> 00:23:26,470
usable your usual quite now so somebody

00:23:24,940 --> 00:23:28,929
writes something in Java and if you want

00:23:26,470 --> 00:23:30,309
to have a C++ you just sort of cross

00:23:28,929 --> 00:23:34,510
compile it and then you have this sort

00:23:30,309 --> 00:23:36,790
of all the Java concepts in C which is

00:23:34,510 --> 00:23:39,640
sort of not that nice so what we wanted

00:23:36,790 --> 00:23:41,860
to do is sort of we wanted the the API

00:23:39,640 --> 00:23:45,400
module to be implemented by people

00:23:41,860 --> 00:23:48,580
native to the language that sort of

00:23:45,400 --> 00:23:53,200
gives the the look and feel of being a

00:23:48,580 --> 00:23:55,600
real C++ or C library but we'll be doing

00:23:53,200 --> 00:23:58,720
all the heavy lifting of the encoding

00:23:55,600 --> 00:24:00,010
decoding protocol stuff that's all be

00:23:58,720 --> 00:24:02,470
gonna be generated

00:24:00,010 --> 00:24:04,900
that's the generator is already done and

00:24:02,470 --> 00:24:07,030
it's working nicely but we're still

00:24:04,900 --> 00:24:10,300
working on the sort of the heavy lifting

00:24:07,030 --> 00:24:12,970
for implementing the API part and we're

00:24:10,300 --> 00:24:15,670
also supporting gonna support Scala C

00:24:12,970 --> 00:24:18,580
JavaScript and stuff like that

00:24:15,670 --> 00:24:21,190
but I think this mainly depends on who

00:24:18,580 --> 00:24:23,230
sort of joins our team because you don't

00:24:21,190 --> 00:24:25,570
want to have me implement something in C

00:24:23,230 --> 00:24:30,070
or JavaScript that would sort of not

00:24:25,570 --> 00:24:32,320
work that well and so the final goal is

00:24:30,070 --> 00:24:35,290
sort of to be able to write

00:24:32,320 --> 00:24:39,490
software that runs almost independent of

00:24:35,290 --> 00:24:40,870
which PLC you are using the things you

00:24:39,490 --> 00:24:43,420
can do with PLC Fricks it's quite

00:24:40,870 --> 00:24:45,700
limited so all you can do is of read

00:24:43,420 --> 00:24:49,150
data you can write data you can

00:24:45,700 --> 00:24:51,850
subscribe for if the PLC supports sort

00:24:49,150 --> 00:24:54,130
of value changes events and stuff like

00:24:51,850 --> 00:24:56,560
that we're going to support calling

00:24:54,130 --> 00:24:58,030
functions so sometimes you can call a

00:24:56,560 --> 00:25:00,490
function on one of these sort of like

00:24:58,030 --> 00:25:02,050
please go into the cleaning mode and

00:25:00,490 --> 00:25:05,320
then it's sort of positioned stuff

00:25:02,050 --> 00:25:07,090
differently and as we're implementing

00:25:05,320 --> 00:25:09,430
more and more protocols that allow this

00:25:07,090 --> 00:25:12,160
to also browse resources so I can

00:25:09,430 --> 00:25:15,550
connect to a PLC and ask it what do you

00:25:12,160 --> 00:25:19,360
have to offer the protocols we currently

00:25:15,550 --> 00:25:22,480
support it's sort of demons f7 that was

00:25:19,360 --> 00:25:26,440
sort of the first we implemented back

00:25:22,480 --> 00:25:31,540
off 80s Modbus both TCP and via serial

00:25:26,440 --> 00:25:33,700
port internet IP OPC UA we just started

00:25:31,540 --> 00:25:35,490
working I think we just I just stayed a

00:25:33,700 --> 00:25:41,100
release where we have the allen-bradley

00:25:35,490 --> 00:25:43,750
a B ETH as a sort of release driver

00:25:41,100 --> 00:25:46,090
allen-bradley df1 that's a serial

00:25:43,750 --> 00:25:49,840
protocol I'm currently working hard on

00:25:46,090 --> 00:25:52,000
buck net Amazon Delta V we were the

00:25:49,840 --> 00:25:56,170
first people to be able to talk with

00:25:52,000 --> 00:25:58,270
Delta V systems privately I'm sort of

00:25:56,170 --> 00:26:01,030
working on K nix net IP because I want

00:25:58,270 --> 00:26:02,950
to talk to my house in the near future

00:26:01,030 --> 00:26:05,320
we'll probably be tackling the newer

00:26:02,950 --> 00:26:07,330
Siemens protocols and especially stuff

00:26:05,320 --> 00:26:09,310
like prophy net so with prophy net will

00:26:07,330 --> 00:26:11,680
be sort of going down one level more

00:26:09,310 --> 00:26:15,220
because with prophy net will be able to

00:26:11,680 --> 00:26:19,360
sort of talk directly to the sensors or

00:26:15,220 --> 00:26:22,000
listen to them so we've got connectivity

00:26:19,360 --> 00:26:23,980
covered with PLC 4x and well we've got

00:26:22,000 --> 00:26:26,620
the legal stuff covered by being an

00:26:23,980 --> 00:26:30,040
Apache because we sort of we have that

00:26:26,620 --> 00:26:32,920
the license that is sort of everybody

00:26:30,040 --> 00:26:35,370
sort of likes and we made sure that

00:26:32,920 --> 00:26:40,300
everything we do in field C for X is

00:26:35,370 --> 00:26:42,370
absolutely 100% safe to use so we

00:26:40,300 --> 00:26:46,340
weren't doing anything that is sort of

00:26:42,370 --> 00:26:48,740
bad so we're absolutely safe

00:26:46,340 --> 00:26:53,300
the side and by this our customers are

00:26:48,740 --> 00:26:56,840
safe as I mentioned we have integrations

00:26:53,300 --> 00:26:59,150
to other projects namely calcite camel

00:26:56,840 --> 00:27:02,120
Apache edge and Apache kafka Connect

00:26:59,150 --> 00:27:02,990
that will sort of I think in the next

00:27:02,120 --> 00:27:05,510
month or so

00:27:02,990 --> 00:27:08,000
confluent will also probably have this

00:27:05,510 --> 00:27:11,060
certified and it will be available in

00:27:08,000 --> 00:27:12,860
there sort of I think they have this Web

00:27:11,060 --> 00:27:16,160
Store where you can just click it and

00:27:12,860 --> 00:27:18,410
and it runs in Vegas we finished the

00:27:16,160 --> 00:27:20,420
Apache knife I integration and two or

00:27:18,410 --> 00:27:24,410
three weeks ago we had a log session

00:27:20,420 --> 00:27:26,450
integration we also found a nice project

00:27:24,410 --> 00:27:28,700
in Vegas called stream pipes that's

00:27:26,450 --> 00:27:32,540
probably gonna be called Apache stream

00:27:28,700 --> 00:27:34,520
pipes pretty soon and as soon as we get

00:27:32,540 --> 00:27:36,260
the first seed type drivers I'm

00:27:34,520 --> 00:27:38,870
definitely gonna put all my effort into

00:27:36,260 --> 00:27:40,520
getting it work in Apache minut because

00:27:38,870 --> 00:27:44,410
I think we can do a really a lot of

00:27:40,520 --> 00:27:48,170
really great stuff there eclipse cura

00:27:44,410 --> 00:27:50,660
edx foundry those are sort of bridging

00:27:48,170 --> 00:27:52,100
over to the other foundations yeah well

00:27:50,660 --> 00:27:54,500
and the open hub guys they would

00:27:52,100 --> 00:28:00,050
definitely like to have some not GPL

00:27:54,500 --> 00:28:02,810
stuff yeah so as I said working on the

00:28:00,050 --> 00:28:05,450
sea type stuff and here a little

00:28:02,810 --> 00:28:07,610
architecture picture I didn't

00:28:05,450 --> 00:28:09,530
I stopped sort of stopped adding all the

00:28:07,610 --> 00:28:11,210
drivers and all the integration modules

00:28:09,530 --> 00:28:12,830
because otherwise you couldn't read

00:28:11,210 --> 00:28:15,890
anything but I guess you get the point

00:28:12,830 --> 00:28:18,890
if you're writing an application well

00:28:15,890 --> 00:28:21,290
you can sort of you can just use the PLC

00:28:18,890 --> 00:28:22,970
4x API directly or you just use one of

00:28:21,290 --> 00:28:25,700
the integration modules that sort of

00:28:22,970 --> 00:28:28,190
uses that but you don't have access to

00:28:25,700 --> 00:28:30,590
the actual driver so what happens here

00:28:28,190 --> 00:28:32,960
is so if you just ask the API give me a

00:28:30,590 --> 00:28:34,430
connection to an s7 device and that sort

00:28:32,960 --> 00:28:37,190
of looks through the class path and

00:28:34,430 --> 00:28:40,250
looks if there is a driver available for

00:28:37,190 --> 00:28:41,810
a service thing that so and this makes

00:28:40,250 --> 00:28:45,470
it really easy to sort of add own

00:28:41,810 --> 00:28:48,020
drivers so the API for providing drivers

00:28:45,470 --> 00:28:54,970
is very easy so if you for example have

00:28:48,020 --> 00:28:57,950
sort of 50% Siemens devices sort of 45%

00:28:54,970 --> 00:28:59,160
allen-bradley devices and then you've

00:28:57,950 --> 00:29:02,730
got some hand

00:28:59,160 --> 00:29:04,080
sort of like the apprentice sort of

00:29:02,730 --> 00:29:05,760
built them and you would never want to

00:29:04,080 --> 00:29:08,130
integrate them well you just have to

00:29:05,760 --> 00:29:10,740
write a little fealty Forex driver for

00:29:08,130 --> 00:29:12,210
that protocol and you get all the

00:29:10,740 --> 00:29:17,210
integration into the other stuff for

00:29:12,210 --> 00:29:19,980
free so this being a tech conference

00:29:17,210 --> 00:29:24,060
here's a little example of the native

00:29:19,980 --> 00:29:29,250
API and I hope I can find my mouse that

00:29:24,060 --> 00:29:32,550
was not my mouse ah there it is okay

00:29:29,250 --> 00:29:34,980
it's a little laggy so what happens here

00:29:32,550 --> 00:29:36,570
is so at the top you ask the driver

00:29:34,980 --> 00:29:39,030
manager to get a connection so it's

00:29:36,570 --> 00:29:41,010
pretty similar to JDBC so the important

00:29:39,030 --> 00:29:45,150
part is here the first part of the

00:29:41,010 --> 00:29:46,110
string sort of s7 by this I say please

00:29:45,150 --> 00:29:49,200
drive our manager

00:29:46,110 --> 00:29:52,230
I wanted a connection to something using

00:29:49,200 --> 00:29:54,360
the s7 protocol and if it finds it it

00:29:52,230 --> 00:29:57,630
sort of passes it along to the driver

00:29:54,360 --> 00:29:59,910
and that is able to parse the rest of

00:29:57,630 --> 00:30:02,640
the URL so in this case it's sort of a

00:29:59,910 --> 00:30:04,920
typical IP address and at the end you

00:30:02,640 --> 00:30:08,550
have to specify so-called rack and slot

00:30:04,920 --> 00:30:11,340
that's sort of usually always 1/1 but it

00:30:08,550 --> 00:30:14,520
can differ so this is all you need to

00:30:11,340 --> 00:30:17,340
establish a connection to that device so

00:30:14,520 --> 00:30:21,120
you now got a connection and now you

00:30:17,340 --> 00:30:26,130
want to send a request we do that by

00:30:21,120 --> 00:30:29,040
using these builders and we're also sort

00:30:26,130 --> 00:30:32,310
of preparing on shipping multiple

00:30:29,040 --> 00:30:35,940
versions of drivers so a lot of people

00:30:32,310 --> 00:30:39,420
are very very sort of afraid that

00:30:35,940 --> 00:30:42,810
software could manipulate these devices

00:30:39,420 --> 00:30:46,950
so they are really wanting a sort of a

00:30:42,810 --> 00:30:49,110
read-only driver so what we did we

00:30:46,950 --> 00:30:52,260
wrapped everything with these optionals

00:30:49,110 --> 00:30:54,240
so if you're sort of using a read-only

00:30:52,260 --> 00:30:56,730
driver and you want to create a write

00:30:54,240 --> 00:31:01,350
request this optional will probably

00:30:56,730 --> 00:31:04,550
return false so don't I can't I can't

00:31:01,350 --> 00:31:07,500
use it here here you can see so if if

00:31:04,550 --> 00:31:09,240
well I guess every driver will have a

00:31:07,500 --> 00:31:11,460
reader but we didn't want to sort of do

00:31:09,240 --> 00:31:12,990
it any differently for reading so you

00:31:11,460 --> 00:31:15,600
just ask it if it is press

00:31:12,990 --> 00:31:18,780
well if not well this connection doesn't

00:31:15,600 --> 00:31:20,700
support it so if it did I get I get the

00:31:18,780 --> 00:31:23,280
Builder and then I start adding items

00:31:20,700 --> 00:31:25,280
and what we did here is this is where it

00:31:23,280 --> 00:31:27,960
we sort of bridge the gap between

00:31:25,280 --> 00:31:32,970
software developers and the ones

00:31:27,960 --> 00:31:36,330
building PLC programs because this is

00:31:32,970 --> 00:31:39,540
something we can work with this is

00:31:36,330 --> 00:31:42,950
something does anybody of you know what

00:31:39,540 --> 00:31:42,950
this is what does this mean

00:31:43,429 --> 00:31:54,540
hmm yeah well it's it means I want to

00:31:49,350 --> 00:32:01,100
read the value of the first digital

00:31:54,540 --> 00:32:04,679
output pin of my PLC but the thing is

00:32:01,100 --> 00:32:06,480
the guy developing the the PLC program

00:32:04,679 --> 00:32:09,000
well he wouldn't know what we mean with

00:32:06,480 --> 00:32:11,429
that so this is what he understands

00:32:09,000 --> 00:32:14,220
that's what he has in his IDE when he

00:32:11,429 --> 00:32:16,620
develops the program so the idea is sort

00:32:14,220 --> 00:32:18,870
of we want to pressure value or we want

00:32:16,620 --> 00:32:21,870
to is this switch turned on or off and

00:32:18,870 --> 00:32:24,450
we label it switch eight turned on and

00:32:21,870 --> 00:32:26,790
then we ask the guy and say what's the

00:32:24,450 --> 00:32:28,920
address for this and each can just

00:32:26,790 --> 00:32:31,110
respond with that so this is where we

00:32:28,920 --> 00:32:35,670
sort of bridge the gap between the IT

00:32:31,110 --> 00:32:38,910
and the OT so now we built this hope

00:32:35,670 --> 00:32:42,570
scrolling works okay so what we do now

00:32:38,910 --> 00:32:47,040
is sort of we as incur honestly sort of

00:32:42,570 --> 00:32:49,290
send this request and in this block down

00:32:47,040 --> 00:32:52,350
here we sort of just define what happens

00:32:49,290 --> 00:32:55,340
if we get a response well or if

00:32:52,350 --> 00:32:58,830
something went wrong I'm just sort of

00:32:55,340 --> 00:33:01,320
skipping the theoretical possibility of

00:32:58,830 --> 00:33:05,010
the thing failing just for simplicity of

00:33:01,320 --> 00:33:07,050
code and what we do now is sort of if we

00:33:05,010 --> 00:33:10,470
get a response we can iterate over all

00:33:07,050 --> 00:33:12,240
the names or the aliases that were

00:33:10,470 --> 00:33:15,120
returned when doing a normal read

00:33:12,240 --> 00:33:17,580
request this will probably always be all

00:33:15,120 --> 00:33:20,940
of them but assuming you subscribe for

00:33:17,580 --> 00:33:22,980
changes so if you want a value if it

00:33:20,940 --> 00:33:26,340
changed then you really have to know

00:33:22,980 --> 00:33:26,820
which of these values is this and this

00:33:26,340 --> 00:33:29,220
is why

00:33:26,820 --> 00:33:30,750
so and it will probably not always have

00:33:29,220 --> 00:33:33,420
all the values just some ones that

00:33:30,750 --> 00:33:36,030
change so this way we can sort of

00:33:33,420 --> 00:33:39,140
iterate over all the returned fields and

00:33:36,030 --> 00:33:42,660
especially check if everything was okay

00:33:39,140 --> 00:33:46,320
yeah because imagine sort of asking for

00:33:42,660 --> 00:33:49,620
100 addresses and two or three of them

00:33:46,320 --> 00:33:52,050
well didn't exist or something was wrong

00:33:49,620 --> 00:33:54,660
it's sort of stupid to have everything

00:33:52,050 --> 00:33:59,400
failed so we can check per field what

00:33:54,660 --> 00:34:02,850
happened yeah and well if everything was

00:33:59,400 --> 00:34:06,690
okay you can see over that well we'll

00:34:02,850 --> 00:34:10,200
just get the object and print it out any

00:34:06,690 --> 00:34:13,740
questions I guess most of you wouldn't

00:34:10,200 --> 00:34:15,840
be using the native API anyway but it's

00:34:13,740 --> 00:34:19,590
sort of I think it might help to sort of

00:34:15,840 --> 00:34:22,050
get the idea and the good thing is this

00:34:19,590 --> 00:34:24,090
just sounds pretty straightforward but

00:34:22,050 --> 00:34:26,010
when talking to appeal seed it is

00:34:24,090 --> 00:34:28,260
actually not quite that simple for

00:34:26,010 --> 00:34:32,429
example if I want to connect to this

00:34:28,260 --> 00:34:34,740
device I have to login into the the

00:34:32,429 --> 00:34:38,570
protocol goes over three layers on top

00:34:34,740 --> 00:34:40,950
of TCP and I have to login and negotiate

00:34:38,570 --> 00:34:44,460
different parameters on each of these

00:34:40,950 --> 00:34:45,929
levels and this is just something I as a

00:34:44,460 --> 00:34:49,169
developer don't want to deal with and

00:34:45,929 --> 00:34:51,960
PLC 4x wraps all of this complexity if I

00:34:49,169 --> 00:34:54,390
want to talk to an Bekoff 80s I can't

00:34:51,960 --> 00:34:56,760
just send a read message and get it back

00:34:54,390 --> 00:34:59,670
I have to subscribe for the read I have

00:34:56,760 --> 00:35:04,340
to execute the read and in the end sort

00:34:59,670 --> 00:35:06,720
of release the the subscription again so

00:35:04,340 --> 00:35:08,880
but as I said I don't want to deal with

00:35:06,720 --> 00:35:11,820
this that's why the drivers take care of

00:35:08,880 --> 00:35:14,010
this but the good thing is with all of

00:35:11,820 --> 00:35:18,540
this sort of we've got almost all the

00:35:14,010 --> 00:35:20,670
bars covered stupidly the first bar is

00:35:18,540 --> 00:35:22,770
the one causing the most problems when I

00:35:20,670 --> 00:35:25,200
was talking to them because whenever I

00:35:22,770 --> 00:35:31,710
came there it was usually always sort of

00:35:25,200 --> 00:35:35,850
the the killer the killer question are

00:35:31,710 --> 00:35:38,580
your drivers certified and I will say

00:35:35,850 --> 00:35:40,110
yeah well that's when I usually said no

00:35:38,580 --> 00:35:40,690
they are not certified and they will

00:35:40,110 --> 00:35:42,940
never

00:35:40,690 --> 00:35:45,579
be certified because that would mean not

00:35:42,940 --> 00:35:47,770
only certifying our code but also all

00:35:45,579 --> 00:35:49,660
dependencies we've been using and that

00:35:47,770 --> 00:35:51,910
would just never happen

00:35:49,660 --> 00:35:54,940
the industry is able to do that because

00:35:51,910 --> 00:35:56,829
I said one of these systems cost 800,000

00:35:54,940 --> 00:35:59,380
euros well you can do a lot of stupid

00:35:56,829 --> 00:36:02,130
stuff with 800 thousand euros

00:35:59,380 --> 00:36:06,579
they're totally paranoid about sort of

00:36:02,130 --> 00:36:08,470
industrial espionage compliance rules so

00:36:06,579 --> 00:36:11,980
if I'm sort of having a company in

00:36:08,470 --> 00:36:14,079
Germany and I produce some drink and I

00:36:11,980 --> 00:36:17,140
want to sell that in the US well I have

00:36:14,079 --> 00:36:19,000
to apply to the FDA rules and they are

00:36:17,140 --> 00:36:22,510
very very strict when it comes to sort

00:36:19,000 --> 00:36:29,500
of separating networks that you can't

00:36:22,510 --> 00:36:32,170
interfere with them and sort of this

00:36:29,500 --> 00:36:35,980
makes it very very difficult to any sort

00:36:32,170 --> 00:36:37,690
of data science approach because the

00:36:35,980 --> 00:36:39,520
stupid thing with data scientists is

00:36:37,690 --> 00:36:43,030
they usually work best if you give them

00:36:39,520 --> 00:36:46,530
data and usually they don't work in the

00:36:43,030 --> 00:36:49,480
sealed environments they they have their

00:36:46,530 --> 00:36:52,540
it lofts where they sort of do all of

00:36:49,480 --> 00:36:55,240
their creative data stuff they don't

00:36:52,540 --> 00:36:57,730
perform well in sort of wearing helmets

00:36:55,240 --> 00:37:02,349
and special clothes and some closed

00:36:57,730 --> 00:37:06,310
environments yeah as I said but usually

00:37:02,349 --> 00:37:10,930
they come up with validated software and

00:37:06,310 --> 00:37:13,390
as I mentioned also reading data has an

00:37:10,930 --> 00:37:15,099
impact on a device so if you if I ask

00:37:13,390 --> 00:37:20,829
that thing too many questions

00:37:15,099 --> 00:37:22,420
it will just shut down so this is how it

00:37:20,829 --> 00:37:26,109
currently looks well it's a sort of a

00:37:22,420 --> 00:37:29,349
simplification usually you have some

00:37:26,109 --> 00:37:32,319
PLC's and you have some control systems

00:37:29,349 --> 00:37:34,390
usually it's set up redundant and then

00:37:32,319 --> 00:37:37,089
it's sort of data goes into this thing

00:37:34,390 --> 00:37:39,400
called a historian and that is sort of

00:37:37,089 --> 00:37:43,270
I've never seen a computer like that it

00:37:39,400 --> 00:37:45,670
sort of looks like a big desktop but it

00:37:43,270 --> 00:37:48,190
is sort of it's a little bit bigger but

00:37:45,670 --> 00:37:50,920
as when I tried moving one of them it

00:37:48,190 --> 00:37:53,470
was so heavy we had to take three people

00:37:50,920 --> 00:37:54,250
to move it it sort of I was told sort of

00:37:53,470 --> 00:37:58,210
the ha

00:37:54,250 --> 00:38:00,490
where costs are a six-digit number and

00:37:58,210 --> 00:38:02,800
all it does is sort of like it's a

00:38:00,490 --> 00:38:05,290
really stupid relational database in

00:38:02,800 --> 00:38:08,380
which you just dump data and you can't

00:38:05,290 --> 00:38:12,010
do things like give me this and that

00:38:08,380 --> 00:38:13,420
value between time a and B oh you have

00:38:12,010 --> 00:38:14,860
to sort of go through all of it and

00:38:13,420 --> 00:38:17,620
filter out of the stream what you want

00:38:14,860 --> 00:38:20,740
to have usually you don't connect them

00:38:17,620 --> 00:38:22,960
directly because in all use cases I've

00:38:20,740 --> 00:38:24,910
ever seen there was usually one or two

00:38:22,960 --> 00:38:27,700
systems in between the control system

00:38:24,910 --> 00:38:29,740
and the historian so the thing is if if

00:38:27,700 --> 00:38:32,710
a data scientist wants a new value

00:38:29,740 --> 00:38:36,340
outside they had to add just about five

00:38:32,710 --> 00:38:38,530
systems which is sort of the cost of the

00:38:36,340 --> 00:38:40,600
process of extending it was insane and

00:38:38,530 --> 00:38:46,450
the license costs of every device in

00:38:40,600 --> 00:38:49,600
between was insane so what did we do

00:38:46,450 --> 00:38:51,220
well we just thought well why do we have

00:38:49,600 --> 00:38:53,200
to do it that way and we came up with

00:38:51,220 --> 00:38:55,510
something we called the passive mode

00:38:53,200 --> 00:38:59,170
drivers well initially we called them

00:38:55,510 --> 00:39:01,660
promiscuous mode drivers but only people

00:38:59,170 --> 00:39:04,540
knowing the promiscuous mode on network

00:39:01,660 --> 00:39:07,240
interfaces knew that and everybody else

00:39:04,540 --> 00:39:09,160
thought oh this is something I don't

00:39:07,240 --> 00:39:12,280
want to work with so passive mode

00:39:09,160 --> 00:39:14,440
drivers works with it better and they

00:39:12,280 --> 00:39:17,590
only passively monitor what's going on

00:39:14,440 --> 00:39:19,390
in the network they capture a request on

00:39:17,590 --> 00:39:24,460
a response I'm from that they can

00:39:19,390 --> 00:39:30,960
extract at time X value Y has value Z on

00:39:24,460 --> 00:39:33,820
device of dam what's after that well and

00:39:30,960 --> 00:39:36,580
the cool thing is as we're not adding

00:39:33,820 --> 00:39:40,510
any extra load where we have absolutely

00:39:36,580 --> 00:39:44,020
zero impact on the on the hardware we

00:39:40,510 --> 00:39:47,230
have zero impact on the network and not

00:39:44,020 --> 00:39:49,060
having to sort of validate the software

00:39:47,230 --> 00:39:53,520
well we can make it really cheap sort of

00:39:49,060 --> 00:39:57,280
like zero yours still there was sort of

00:39:53,520 --> 00:39:59,350
they were hesitant because well if you

00:39:57,280 --> 00:40:02,020
just promised them to not send a bite

00:39:59,350 --> 00:40:04,450
well they don't really trust you because

00:40:02,020 --> 00:40:06,880
you're not validated so what we needed

00:40:04,450 --> 00:40:08,200
was something we we always had in our

00:40:06,880 --> 00:40:10,540
charts sort of like

00:40:08,200 --> 00:40:12,819
and then comes the data diode it's sort

00:40:10,540 --> 00:40:14,799
of a network device that lets data only

00:40:12,819 --> 00:40:16,329
pass in one direction not like a

00:40:14,799 --> 00:40:18,790
firewall that sort of lets you establish

00:40:16,329 --> 00:40:22,109
a connection which can be bi-directional

00:40:18,790 --> 00:40:25,079
it should really be sort of thing that

00:40:22,109 --> 00:40:28,540
bytes can only pass in one direction and

00:40:25,079 --> 00:40:31,000
unfortunately things they there existed

00:40:28,540 --> 00:40:32,500
a few models of these things but usually

00:40:31,000 --> 00:40:34,390
I think the cheapest one I found was

00:40:32,500 --> 00:40:37,660
fifty thousand euros it was sort of

00:40:34,390 --> 00:40:40,510
military-grade stuff I thought can't be

00:40:37,660 --> 00:40:44,170
how can something be that expensive that

00:40:40,510 --> 00:40:46,450
does something so simple and I happen to

00:40:44,170 --> 00:40:48,940
have the the opportunity to sort of meet

00:40:46,450 --> 00:40:50,500
somebody from a company building some

00:40:48,940 --> 00:40:54,250
network stuff and I talked to him about

00:40:50,500 --> 00:40:58,809
this idea and well five weeks after that

00:40:54,250 --> 00:41:03,420
little chat we had this this is sort of

00:40:58,809 --> 00:41:06,339
the first Hardware produced to support

00:41:03,420 --> 00:41:08,950
passive mode drivers and it's got a

00:41:06,339 --> 00:41:13,900
price tag I think of 500 bucks at the

00:41:08,950 --> 00:41:16,089
moment but I guess if sales should go up

00:41:13,900 --> 00:41:18,940
I guess they will be able to sort of

00:41:16,089 --> 00:41:22,030
lower that price even more but I mean

00:41:18,940 --> 00:41:25,329
we're competing with 800 thousand euros

00:41:22,030 --> 00:41:30,130
of license cost so I guess 500 bucks for

00:41:25,329 --> 00:41:32,770
a data diode is is a no-brainer so how

00:41:30,130 --> 00:41:34,540
does our system look like well we we

00:41:32,770 --> 00:41:37,540
have this network switch and we

00:41:34,540 --> 00:41:40,270
configured sort of the one port as an

00:41:37,540 --> 00:41:43,510
uplink port attached Network diode to it

00:41:40,270 --> 00:41:47,400
and on the end we could have a we had a

00:41:43,510 --> 00:41:49,990
raspberry pi when we did the demo and

00:41:47,400 --> 00:41:53,859
that just intercepted the whole network

00:41:49,990 --> 00:41:56,890
and sort of made all the data available

00:41:53,859 --> 00:42:01,000
in almost real-time and the cool thing

00:41:56,890 --> 00:42:05,470
was our little graph Anna dashboard we

00:42:01,000 --> 00:42:08,559
had had stored stuff in in flux had a

00:42:05,470 --> 00:42:13,000
sort of a graph on a dashboard and the

00:42:08,559 --> 00:42:14,950
cool thing was our charts and our gouges

00:42:13,000 --> 00:42:16,510
were they were moving faster than the

00:42:14,950 --> 00:42:20,470
ones on the screens of the control

00:42:16,510 --> 00:42:22,510
system that was that was awesome yeah so

00:42:20,470 --> 00:42:24,460
in the end it looks

00:42:22,510 --> 00:42:27,970
we managed to get sort of all of this

00:42:24,460 --> 00:42:30,820
covered except the return unclear return

00:42:27,970 --> 00:42:33,970
on invest and the technical expertise

00:42:30,820 --> 00:42:38,860
but that's why we're here that's what we

00:42:33,970 --> 00:42:42,490
do we can help the industry just color

00:42:38,860 --> 00:42:44,530
these last bars by sort of bringing open

00:42:42,490 --> 00:42:49,210
source and our expertise into the

00:42:44,530 --> 00:42:53,320
industry so what's new about the project

00:42:49,210 --> 00:42:56,620
well we graduated on 23rd of April and

00:42:53,320 --> 00:42:59,890
well we we just noticed that we did one

00:42:56,620 --> 00:43:01,630
thing really bad because I think in the

00:42:59,890 --> 00:43:04,900
puddling shark tank I think the measure

00:43:01,630 --> 00:43:08,020
of being a real puddling by having a -

00:43:04,900 --> 00:43:09,490
one vote by Justin we found out that we

00:43:08,020 --> 00:43:11,110
actually sort of passed through the

00:43:09,490 --> 00:43:14,470
entire incubator without getting a

00:43:11,110 --> 00:43:18,460
single - one vote by him I hope they

00:43:14,470 --> 00:43:20,260
don't won't downgrade us again what I've

00:43:18,460 --> 00:43:22,810
been working for the last half years so

00:43:20,260 --> 00:43:25,540
if you sort of look at the releases that

00:43:22,810 --> 00:43:27,250
speed has sort of slowed down a little

00:43:25,540 --> 00:43:28,710
but it was because we were working in

00:43:27,250 --> 00:43:30,970
the background so for about

00:43:28,710 --> 00:43:34,120
three-quarters of a year now I've been

00:43:30,970 --> 00:43:36,730
working on a on a way to specify a

00:43:34,120 --> 00:43:42,460
driver protocol in a machine-readable

00:43:36,730 --> 00:43:44,920
way and generate all of this code by a

00:43:42,460 --> 00:43:45,460
maven plugin and that's working really

00:43:44,920 --> 00:43:48,370
nicely

00:43:45,460 --> 00:43:50,410
we finished the templates for Java and

00:43:48,370 --> 00:43:52,810
currently will be starting porting that

00:43:50,410 --> 00:43:55,600
to other programming languages but the

00:43:52,810 --> 00:43:58,270
great thing is it's sort of our idea

00:43:55,600 --> 00:44:00,130
that you have a protocol module that has

00:43:58,270 --> 00:44:01,960
the specification in it you have a

00:44:00,130 --> 00:44:04,330
template module for every language you

00:44:01,960 --> 00:44:06,280
want and then you can sort of just start

00:44:04,330 --> 00:44:08,830
shipping protocols by adding a new

00:44:06,280 --> 00:44:11,980
protocol module and just using the Java

00:44:08,830 --> 00:44:15,250
language template and the new protocol

00:44:11,980 --> 00:44:17,440
module and just have a sort of 95% of

00:44:15,250 --> 00:44:19,360
the code just generated and that makes

00:44:17,440 --> 00:44:21,280
it possible to sort of keep all of these

00:44:19,360 --> 00:44:23,400
in sync because it would have been a

00:44:21,280 --> 00:44:27,370
total nightmare to sort of maintain this

00:44:23,400 --> 00:44:31,750
n cross n matrix of implementations

00:44:27,370 --> 00:44:33,790
somebody finds a bug in the Java s7

00:44:31,750 --> 00:44:36,280
driver now you have to sort of port that

00:44:33,790 --> 00:44:37,750
to Python and C and C++

00:44:36,280 --> 00:44:43,180
it would have been a nightmare to keep

00:44:37,750 --> 00:44:47,410
that in singer I am currently working on

00:44:43,180 --> 00:44:49,660
actually implementing a PLC mock because

00:44:47,410 --> 00:44:51,250
a lot of people were sort of asking yeah

00:44:49,660 --> 00:44:54,850
I really want to try out your project

00:44:51,250 --> 00:44:57,430
but you need hardware for that well it's

00:44:54,850 --> 00:44:59,530
sort of the point of PLC 4x or allow you

00:44:57,430 --> 00:45:02,040
to talk to hardware but it also sort of

00:44:59,530 --> 00:45:04,300
makes you sort of have to have hardware

00:45:02,040 --> 00:45:06,040
but what we're doing right now is we're

00:45:04,300 --> 00:45:07,900
using the generator drivers to also

00:45:06,040 --> 00:45:10,240
implement the other side so we're sort

00:45:07,900 --> 00:45:12,340
of building up some I'm building up some

00:45:10,240 --> 00:45:17,050
system with which we can sort of have

00:45:12,340 --> 00:45:18,670
some sort of predefined scenarios where

00:45:17,050 --> 00:45:20,350
we can write tutorials where people can

00:45:18,670 --> 00:45:24,940
try out things without actually having

00:45:20,350 --> 00:45:26,860
hardware so what's next well as I

00:45:24,940 --> 00:45:29,260
mentioned we want to use the generator

00:45:26,860 --> 00:45:31,480
drivers to port this to all the other

00:45:29,260 --> 00:45:33,520
languages we wanted to start with these

00:45:31,480 --> 00:45:36,580
restricted versions so I mentioned

00:45:33,520 --> 00:45:38,830
read-only drivers but also passive mode

00:45:36,580 --> 00:45:43,060
drivers that don't have any code for

00:45:38,830 --> 00:45:45,730
sending out data my topmost priority is

00:45:43,060 --> 00:45:49,510
definitely supporting minut but also a

00:45:45,730 --> 00:45:52,990
supporting educate and we also wanted to

00:45:49,510 --> 00:45:58,090
start working on query optimizers so if

00:45:52,990 --> 00:46:00,130
you sort of read the very bits and close

00:45:58,090 --> 00:46:05,080
proximity it's sometimes easy it's just

00:46:00,130 --> 00:46:07,900
3-2 byte then three bits and well a lot

00:46:05,080 --> 00:46:11,650
of testing and the cool thing is I

00:46:07,900 --> 00:46:14,830
mentioned that chart going up those were

00:46:11,650 --> 00:46:17,500
the download statistics of PLC 4x so I

00:46:14,830 --> 00:46:20,050
see quite a correlation have to admit I

00:46:17,500 --> 00:46:21,880
if I would have done this chart today

00:46:20,050 --> 00:46:25,360
there would have been this bump because

00:46:21,880 --> 00:46:28,810
we just didn't release for sort of 4

00:46:25,360 --> 00:46:33,340
months or so but in general the the

00:46:28,810 --> 00:46:36,160
direction is very very obvious so the

00:46:33,340 --> 00:46:39,160
rebellion needs you so do you know C++

00:46:36,160 --> 00:46:41,410
Python or whatever if you're good and

00:46:39,160 --> 00:46:44,040
brain-fuck we don't care we will provide

00:46:41,410 --> 00:46:46,810
drivers if you help us write the code

00:46:44,040 --> 00:46:49,300
also we need people to just try it out

00:46:46,810 --> 00:46:52,180
give us feedback

00:46:49,300 --> 00:46:54,640
test it on some real devices because

00:46:52,180 --> 00:46:56,260
well we have quite a lot of devices but

00:46:54,640 --> 00:46:59,080
there were quite a lot I think we have

00:46:56,260 --> 00:47:01,840
five or six different PLC's but there's

00:46:59,080 --> 00:47:04,650
a huge sue of different PLC's out there

00:47:01,840 --> 00:47:07,240
so we needed a lot of testing feedback

00:47:04,650 --> 00:47:09,790
if you like writing documentation if

00:47:07,240 --> 00:47:13,270
you're good at web design our website

00:47:09,790 --> 00:47:15,250
definitely leads needs some love so if

00:47:13,270 --> 00:47:17,920
you want to help please sign up to our

00:47:15,250 --> 00:47:20,320
mailing list I'm David peel Chief Rick

00:47:17,920 --> 00:47:22,030
start apache go dark or follow tardy or

00:47:20,320 --> 00:47:24,790
twitter

00:47:22,030 --> 00:47:26,800
he usually tweets quite a lot of the

00:47:24,790 --> 00:47:29,260
coolest things we're doing if you want

00:47:26,800 --> 00:47:34,000
to also get the fun picture as well sign

00:47:29,260 --> 00:47:34,450
up for Christopher duds yeah start using

00:47:34,000 --> 00:47:37,270
it

00:47:34,450 --> 00:47:39,070
file bugs submit pull requests I always

00:47:37,270 --> 00:47:41,830
like people submitting pull requests and

00:47:39,070 --> 00:47:43,330
just join in the discussion or well even

00:47:41,830 --> 00:47:46,660
if you're just talking to some friend

00:47:43,330 --> 00:47:48,460
who's sort of talking about his pain

00:47:46,660 --> 00:47:51,310
with digital digitization in the

00:47:48,460 --> 00:47:55,690
industry just spread the world and help

00:47:51,310 --> 00:48:03,220
us color the last two bars thanks for

00:47:55,690 --> 00:48:09,210
listening hope I wasn't time so are

00:48:03,220 --> 00:48:09,210
there any questions come on don't be shy

00:48:11,430 --> 00:48:17,980
so could you talk a bit about your

00:48:13,900 --> 00:48:20,770
relation concentric sponsoring the

00:48:17,980 --> 00:48:23,920
development what does he offer yeah yeah

00:48:20,770 --> 00:48:25,780
okay so the question you got the

00:48:23,920 --> 00:48:27,160
question and so the reason the code

00:48:25,780 --> 00:48:28,780
centric is sort of paying me for two

00:48:27,160 --> 00:48:31,090
years to sort of work on this is

00:48:28,780 --> 00:48:33,430
generally that sort of we have a lot of

00:48:31,090 --> 00:48:35,920
awesome people able to sort of do all of

00:48:33,430 --> 00:48:39,010
this big data cloud machine learning

00:48:35,920 --> 00:48:40,570
stuff but sort of currently we're sort

00:48:39,010 --> 00:48:42,100
of mainly working sort of insurance

00:48:40,570 --> 00:48:46,750
companies banks and and sort of the

00:48:42,100 --> 00:48:49,090
percentage of the industrial contracts

00:48:46,750 --> 00:48:50,830
as was was sort of low than we lower

00:48:49,090 --> 00:48:53,050
than we expected and the reason for that

00:48:50,830 --> 00:48:55,090
was sort of that first of all our tools

00:48:53,050 --> 00:48:56,590
couldn't talk to theirs I think the

00:48:55,090 --> 00:48:59,140
usual approach would have been to have

00:48:56,590 --> 00:49:02,740
another one of these sort of grey boxes

00:48:59,140 --> 00:49:05,860
but with less LEDs that sort of just

00:49:02,740 --> 00:49:08,230
like data and throw that in some CSV

00:49:05,860 --> 00:49:10,840
file that you sort of could sort of

00:49:08,230 --> 00:49:13,540
mountain windows share and and parse so

00:49:10,840 --> 00:49:15,970
that was sort of state of the art and so

00:49:13,540 --> 00:49:18,760
with our involvement in this project we

00:49:15,970 --> 00:49:21,700
sort of opened this whole market for our

00:49:18,760 --> 00:49:23,950
services we know it also opens it for

00:49:21,700 --> 00:49:26,410
all the others but well we don't really

00:49:23,950 --> 00:49:28,720
care because it is such a huge market

00:49:26,410 --> 00:49:33,270
that I think we can all do really good

00:49:28,720 --> 00:49:33,270
stuff there for the next 10 to 20 years

00:49:33,720 --> 00:49:36,720
yeah

00:49:58,590 --> 00:50:04,170
oh I have never talked to them before

00:50:01,920 --> 00:50:06,510
because I was thought sort of well the

00:50:04,170 --> 00:50:08,730
hardware part is sort of the department

00:50:06,510 --> 00:50:11,100
we're trying to sort of get out of the

00:50:08,730 --> 00:50:12,600
equation so not having to plug a new

00:50:11,100 --> 00:50:25,170
device in but maybe it may be the

00:50:12,600 --> 00:50:29,450
contacts will help no sure any other at

00:50:25,170 --> 00:50:29,450
least her eyes are open so looks like it

00:50:30,650 --> 00:50:44,190
yeah yeah are there only specialised

00:50:41,190 --> 00:50:46,230
PLC's or is it possible to build some

00:50:44,190 --> 00:50:51,150
kind of generic PLC into every single

00:50:46,230 --> 00:50:53,340
software yeah the thing is let's say

00:50:51,150 --> 00:50:56,460
these devices they are very very limited

00:50:53,340 --> 00:50:58,350
in their computational capacity and

00:50:56,460 --> 00:51:00,870
memory but one thing they're really

00:50:58,350 --> 00:51:03,120
really good at is being insanely fast so

00:51:00,870 --> 00:51:06,180
if you wanted to sort of use standard

00:51:03,120 --> 00:51:09,150
hardware or the standard operating

00:51:06,180 --> 00:51:11,310
systems it's it's way out of their

00:51:09,150 --> 00:51:13,620
league to sort of be able to control

00:51:11,310 --> 00:51:16,860
devices at that speed there are devices

00:51:13,620 --> 00:51:19,560
and we for example have at the plc 4x

00:51:16,860 --> 00:51:21,330
hackathon we have sort of from there are

00:51:19,560 --> 00:51:25,260
quite a lot of devices that have sort of

00:51:21,330 --> 00:51:28,260
like a real-time modified Linux

00:51:25,260 --> 00:51:30,960
distribution running on them so so there

00:51:28,260 --> 00:51:33,990
are software PLC's but you can't just

00:51:30,960 --> 00:51:35,820
sort of use a raspberry or normal Linux

00:51:33,990 --> 00:51:38,670
distribution you really have to sort of

00:51:35,820 --> 00:51:41,190
mess with the internals to get up to

00:51:38,670 --> 00:51:46,350
that speed and I think if you're sort of

00:51:41,190 --> 00:51:48,540
talking about some CNC machinery I doubt

00:51:46,350 --> 00:51:52,070
that with one of these you will get the

00:51:48,540 --> 00:51:52,070
performance you would need to do that

00:51:55,910 --> 00:52:05,480
any less questions well then all I can

00:52:02,780 --> 00:52:07,670
do is thank you for coming if you're

00:52:05,480 --> 00:52:09,980
interested in the project side of this

00:52:07,670 --> 00:52:12,650
thing because sort of it was also my

00:52:09,980 --> 00:52:14,810
first time to sort of start an Apache

00:52:12,650 --> 00:52:19,220
project and bring it through the

00:52:14,810 --> 00:52:21,650
incubator I think a little bit later in

00:52:19,220 --> 00:52:24,530
the community track I'll sort of be sort

00:52:21,650 --> 00:52:26,540
of putting a focus on the community side

00:52:24,530 --> 00:52:28,760
of this whole project might be

00:52:26,540 --> 00:52:34,280
interesting for the one or other of you

00:52:28,760 --> 00:52:34,600
well then thanks and enjoy lunch thank

00:52:34,280 --> 00:52:38,860
you everyone

00:52:34,600 --> 00:52:38,860

YouTube URL: https://www.youtube.com/watch?v=pjBYtJJmWq0


