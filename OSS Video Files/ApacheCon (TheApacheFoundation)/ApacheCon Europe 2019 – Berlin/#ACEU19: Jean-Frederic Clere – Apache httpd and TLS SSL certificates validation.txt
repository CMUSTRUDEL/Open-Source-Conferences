Title: #ACEU19: Jean-Frederic Clere – Apache httpd and TLS SSL certificates validation
Publication date: 2019-10-29
Playlist: ApacheCon Europe 2019 – Berlin
Description: 
	More: https://aceu19.apachecon.com/session/apache-httpd-and-tlsssl-certificates-validation

We will look to 2 different things here, validation of the server certificate and
validation of the client certificates.

For the server certificate we will show Let's encrypt and mod_md and speak about the new ACMEv2 protocol and OCSP stapling.

For the client certificates we look to OCSP and other validations.

Demo and quick start example will provided during the talk.
Captions: 
	00:00:04,819 --> 00:00:12,269
so I'm going to kind of jump in you've

00:00:10,530 --> 00:00:14,100
been in the last talk it's going to be a

00:00:12,269 --> 00:00:16,139
lot more easy because I'm going just to

00:00:14,100 --> 00:00:18,630
speak about a small piece of it and show

00:00:16,139 --> 00:00:25,020
basically how you configure your server

00:00:18,630 --> 00:00:27,900
so and the demo is scriptable I didn't

00:00:25,020 --> 00:00:31,289
script it but I have put it in my github

00:00:27,900 --> 00:00:37,920
repo so if you want to redo the stuff

00:00:31,289 --> 00:00:41,850
step by step everything is there so what

00:00:37,920 --> 00:00:45,239
I will cover quickly TLS and the

00:00:41,850 --> 00:00:47,730
certificate and key some basics I will

00:00:45,239 --> 00:00:54,690
speak about the client certificate and

00:00:47,730 --> 00:00:57,629
you CSP responder or the certificate

00:00:54,690 --> 00:01:01,140
revocation list last mention that stuff

00:00:57,629 --> 00:01:04,110
a while ago I do the same for the server

00:01:01,140 --> 00:01:07,500
certificate because basically there's

00:01:04,110 --> 00:01:12,540
two thing we have you've seen you can

00:01:07,500 --> 00:01:15,090
have the server asking the browser to

00:01:12,540 --> 00:01:18,510
send a client certificate like if for

00:01:15,090 --> 00:01:21,210
example your bank can give you a client

00:01:18,510 --> 00:01:25,530
certificate you can use to connect to

00:01:21,210 --> 00:01:28,350
the bank there's almost example like

00:01:25,530 --> 00:01:33,540
some banks are using these things to to

00:01:28,350 --> 00:01:37,560
connect the automat to the web server to

00:01:33,540 --> 00:01:42,150
make some controls the server

00:01:37,560 --> 00:01:46,950
certificate on that right basically this

00:01:42,150 --> 00:01:49,710
is that the server itself is sending you

00:01:46,950 --> 00:01:53,460
a certificate and this certificate have

00:01:49,710 --> 00:01:56,430
to be validated by a browser typically

00:01:53,460 --> 00:01:59,659
designed by us a typically by latin

00:01:56,430 --> 00:02:02,790
script so speaking about let's encrypt I

00:01:59,659 --> 00:02:07,229
I'm going to speak briefly on modem tea

00:02:02,790 --> 00:02:09,090
and chill it bit oh you can use it to

00:02:07,229 --> 00:02:12,360
automate the renewal of your let's

00:02:09,090 --> 00:02:17,249
encrypt certificate I'm going to mention

00:02:12,360 --> 00:02:18,440
mod mt2 and was this base happening you

00:02:17,249 --> 00:02:20,330
have a bunch of demo

00:02:18,440 --> 00:02:22,940
but I hope they're going to work and

00:02:20,330 --> 00:02:28,540
don't hesitate to interrupt me if you

00:02:22,940 --> 00:02:32,240
have a question so my name is chef Eric

00:02:28,540 --> 00:02:36,470
I'm working for reddit I've been writing

00:02:32,240 --> 00:02:42,350
code for a long long time and I'm living

00:02:36,470 --> 00:02:47,000
in Switzerland so as you have seen

00:02:42,350 --> 00:02:50,330
before there's a key and a certificate

00:02:47,000 --> 00:02:56,200
it's a pair basically you you're going

00:02:50,330 --> 00:02:59,750
to generate a key understand a

00:02:56,200 --> 00:03:02,120
certificate you want to cap the key

00:02:59,750 --> 00:03:04,520
secret basically you're going to protect

00:03:02,120 --> 00:03:08,770
it with the passphrase and leave it as a

00:03:04,520 --> 00:03:11,750
new browser either in your server and

00:03:08,770 --> 00:03:13,910
you're going to publish the certificate

00:03:11,750 --> 00:03:16,790
publish the certificate is going to see

00:03:13,910 --> 00:03:19,310
you're going to send it certificate but

00:03:16,790 --> 00:03:21,830
of course publishing your certificate

00:03:19,310 --> 00:03:24,260
does not mean that anyone can know that

00:03:21,830 --> 00:03:26,780
it's your certificate for that as a

00:03:24,260 --> 00:03:28,580
certificate authority which is going to

00:03:26,780 --> 00:03:33,140
sign the certificate basically you're

00:03:28,580 --> 00:03:35,150
going to send a certificate request to

00:03:33,140 --> 00:03:38,390
the authority and this authority is

00:03:35,150 --> 00:03:40,760
going to sign it going to other its

00:03:38,390 --> 00:03:44,030
signature to your certificate and so

00:03:40,760 --> 00:03:46,340
that the browser or the server can

00:03:44,030 --> 00:03:50,000
recognize that this is a valid

00:03:46,340 --> 00:03:51,920
certificate it could be a certificate

00:03:50,000 --> 00:03:52,670
authority that could be more less

00:03:51,920 --> 00:03:54,290
expensive

00:03:52,670 --> 00:03:56,720
it could be let's encrypt that son trip

00:03:54,290 --> 00:03:59,269
is very good because they offer you a

00:03:56,720 --> 00:04:01,790
free certificate so we're going

00:03:59,269 --> 00:04:05,000
basically to jump in some more detail

00:04:01,790 --> 00:04:07,130
how it works don't hesitate to stop me

00:04:05,000 --> 00:04:09,410
if you miss something because I'm going

00:04:07,130 --> 00:04:12,860
to add complexity of what we're doing

00:04:09,410 --> 00:04:14,269
through the talk and the goal is like

00:04:12,860 --> 00:04:17,419
basically you you should be able to

00:04:14,269 --> 00:04:20,030
reproduce what I'm doing on your own

00:04:17,419 --> 00:04:28,400
server or on your desktop just to make a

00:04:20,030 --> 00:04:31,180
test so so so basically this this is an

00:04:28,400 --> 00:04:31,180
example of

00:04:31,330 --> 00:04:36,610
of this is wild Shack typically when you

00:04:35,139 --> 00:04:38,919
try to debug these things and try to

00:04:36,610 --> 00:04:41,379
understand what goes wrong you can use

00:04:38,919 --> 00:04:44,080
watch Ike to understand what what is

00:04:41,379 --> 00:04:46,840
wrong at the first steps of the of the

00:04:44,080 --> 00:04:48,370
dialog you can't understand what's wrong

00:04:46,840 --> 00:04:53,830
with the data because it's it's

00:04:48,370 --> 00:04:56,590
encrypted so yeah it's a TLS 3.1 and

00:04:53,830 --> 00:05:00,550
it's Firefox do we need you can see that

00:04:56,590 --> 00:05:05,199
there's a client hello which is sent and

00:05:00,550 --> 00:05:07,330
then it's going to be answered by a sad

00:05:05,199 --> 00:05:09,190
alone and there's a change certificate

00:05:07,330 --> 00:05:12,819
and then there's a encrypted data so

00:05:09,190 --> 00:05:14,710
this is if it stops somewhere yeah you

00:05:12,819 --> 00:05:18,550
know that you have something wrong and

00:05:14,710 --> 00:05:22,330
usually you can use using wash like you

00:05:18,550 --> 00:05:24,159
can do it's going to tell some some code

00:05:22,330 --> 00:05:26,409
that you can google for it and find out

00:05:24,159 --> 00:05:29,830
what's wrong will tell like basically

00:05:26,409 --> 00:05:31,960
that the the server does not accept what

00:05:29,830 --> 00:05:36,340
you're sending or your client can't

00:05:31,960 --> 00:05:39,250
change but don't change the decipher

00:05:36,340 --> 00:05:41,169
spec those are of error code that you

00:05:39,250 --> 00:05:43,300
can just look to them you can click

00:05:41,169 --> 00:05:45,819
inside the message and then you have the

00:05:43,300 --> 00:05:49,389
information the part that can be

00:05:45,819 --> 00:05:50,830
decrypted from the TLS packet wyshak is

00:05:49,389 --> 00:05:53,279
going to give you the information so you

00:05:50,830 --> 00:05:58,569
can go inside and find out what's wrong

00:05:53,279 --> 00:06:04,240
so the next step is this is the sizzle

00:05:58,569 --> 00:06:09,699
Tomcat this is the hello you can see

00:06:04,240 --> 00:06:13,900
what it is sending so that's just a

00:06:09,699 --> 00:06:19,719
detail of the message I if you look to

00:06:13,900 --> 00:06:27,789
the difference of of the TLS at 3.1 this

00:06:19,719 --> 00:06:31,330
was one two three and versus one two you

00:06:27,789 --> 00:06:37,779
can see that basically there's several

00:06:31,330 --> 00:06:43,089
more steps in the in the in the two so

00:06:37,779 --> 00:06:44,470
if you if you if you think that you

00:06:43,089 --> 00:06:47,920
client the

00:06:44,470 --> 00:06:51,370
using reasonably fast and the recent

00:06:47,920 --> 00:06:56,620
Rosa you have some interest to use the

00:06:51,370 --> 00:06:58,690
latest the the the the 1.3 protocol

00:06:56,620 --> 00:07:05,710
because it's going to be faster because

00:06:58,690 --> 00:07:08,490
there's one step less another thing

00:07:05,710 --> 00:07:11,920
which is a kind of interesting is like

00:07:08,490 --> 00:07:20,350
this is a this is looking in a detail of

00:07:11,920 --> 00:07:22,000
the in the 1.2 you can see that the the

00:07:20,350 --> 00:07:25,900
exchange of the certificate is not

00:07:22,000 --> 00:07:28,210
encrypted so Yahoo kind of leaking some

00:07:25,900 --> 00:07:30,810
of your information that you might if

00:07:28,210 --> 00:07:34,840
someone intercepting on the line could

00:07:30,810 --> 00:07:37,120
know who is communicating to it probably

00:07:34,840 --> 00:07:39,250
does not give much information but you

00:07:37,120 --> 00:07:42,010
see in my case it's it giving some stuff

00:07:39,250 --> 00:07:48,820
that you might not not want to give out

00:07:42,010 --> 00:07:53,410
to everyone so some basic configuration

00:07:48,820 --> 00:07:58,419
so sorry this is a basically the

00:07:53,410 --> 00:08:00,610
httpd.conf you need to put a listen you

00:07:58,419 --> 00:08:02,350
need to define a virtual host in this

00:08:00,610 --> 00:08:04,720
virtual host you're going to say that

00:08:02,350 --> 00:08:08,520
you're going to reduce the SSL engine by

00:08:04,720 --> 00:08:10,750
saying SSL until now on you give it a

00:08:08,520 --> 00:08:14,380
certificate file in this case this is

00:08:10,750 --> 00:08:19,120
the certificate I've created for the

00:08:14,380 --> 00:08:22,200
demo the the one in the this is the

00:08:19,120 --> 00:08:24,790
first one and you have the key file

00:08:22,200 --> 00:08:26,620
which in my case I've not encrypted but

00:08:24,790 --> 00:08:29,710
because I didn't want to type the

00:08:26,620 --> 00:08:32,320
password but the safer is that you have

00:08:29,710 --> 00:08:34,750
a passphrase on it you can add a

00:08:32,320 --> 00:08:39,070
passphrase on it or remove it it's just

00:08:34,750 --> 00:08:42,339
one open SSL command it's easy I have

00:08:39,070 --> 00:08:46,900
I'm running my own C so basically I'm

00:08:42,339 --> 00:08:49,000
providing the certificate file yeah that

00:08:46,900 --> 00:08:51,220
I've created on my own and I'm telling

00:08:49,000 --> 00:08:54,490
in some shunt because I want to kind of

00:08:51,220 --> 00:08:56,980
show what I'm doing I'm using the SSL

00:08:54,490 --> 00:08:57,880
options in order to basically show the

00:08:56,980 --> 00:09:02,980
standard viable

00:08:57,880 --> 00:09:05,350
and dessert export data and I have a

00:09:02,980 --> 00:09:07,540
small CGI script that displayed that

00:09:05,350 --> 00:09:09,100
stuff so this is this is some tool

00:09:07,540 --> 00:09:11,860
basically that can help you to debug

00:09:09,100 --> 00:09:13,840
what what you're doing and if something

00:09:11,860 --> 00:09:18,010
is not working exactly the way you're

00:09:13,840 --> 00:09:23,650
expecting so if I go to my server which

00:09:18,010 --> 00:09:28,060
I have started so this would be the

00:09:23,650 --> 00:09:30,820
first this is the first virtual host I

00:09:28,060 --> 00:09:34,240
have installed in my server when it gets

00:09:30,820 --> 00:09:35,980
served the you can see all the the

00:09:34,240 --> 00:09:37,810
things that have been there coming out

00:09:35,980 --> 00:09:39,760
where else especially you are interested

00:09:37,810 --> 00:09:42,610
in this as I sell things which you can

00:09:39,760 --> 00:09:46,210
test in your own application basically

00:09:42,610 --> 00:09:48,180
if you can this is just a small CGI

00:09:46,210 --> 00:09:50,320
application you can write a

00:09:48,180 --> 00:09:52,180
sophisticated one that is going to read

00:09:50,320 --> 00:10:09,040
the things and decide whether you should

00:09:52,180 --> 00:10:12,490
accept the connection or not so let's

00:10:09,040 --> 00:10:16,660
one let's add one small step of

00:10:12,490 --> 00:10:19,090
complexity the first things you have

00:10:16,660 --> 00:10:20,890
seen is just what most of the people are

00:10:19,090 --> 00:10:24,040
using and now we're going to do

00:10:20,890 --> 00:10:26,920
something more we're going to tell the

00:10:24,040 --> 00:10:31,780
app we want to tell the browser to

00:10:26,920 --> 00:10:33,730
provide us I said a client certificate

00:10:31,780 --> 00:10:40,500
the client certificate I have imported

00:10:33,730 --> 00:10:40,500
them in my in my in my browser in case

00:10:41,460 --> 00:10:48,190
you can in case you use open SSL to

00:10:44,350 --> 00:10:51,640
create them as I have explained in the

00:10:48,190 --> 00:10:53,860
in the shell script oh you can get the

00:10:51,640 --> 00:10:56,070
certificate in your browser and then use

00:10:53,860 --> 00:10:59,080
this certificate I have asked for a

00:10:56,070 --> 00:11:05,300
verified if of one so if we look to the

00:10:59,080 --> 00:11:11,750
page so this was the previous one oops

00:11:05,300 --> 00:11:15,709
I've clicked someone I don't want so if

00:11:11,750 --> 00:11:18,410
we go there that's I mean maybe I should

00:11:15,709 --> 00:11:25,279
show what one moment yeah that's it

00:11:18,410 --> 00:11:27,980
so here I have actually PDS asking the

00:11:25,279 --> 00:11:29,959
browser to provide a client certificate

00:11:27,980 --> 00:11:33,980
I have a bunch of client certificate

00:11:29,959 --> 00:11:37,070
that have been importing and I've on

00:11:33,980 --> 00:11:37,490
purpose a content prepared a different

00:11:37,070 --> 00:11:39,680
one

00:11:37,490 --> 00:11:42,920
one is a certificate which is going to

00:11:39,680 --> 00:11:46,370
require a GT PD to basically check

00:11:42,920 --> 00:11:48,620
against OCSP server OSP responded that

00:11:46,370 --> 00:11:50,750
the certificate is valid I have an

00:11:48,620 --> 00:11:55,279
invalid certificate I made it invalid by

00:11:50,750 --> 00:11:57,529
basically revoking it and I have a valid

00:11:55,279 --> 00:12:00,110
certificate but I have not defined

00:11:57,529 --> 00:12:02,200
anything about validation so all of

00:12:00,110 --> 00:12:05,660
those certificates should be working

00:12:02,200 --> 00:12:07,779
without problem so this is this one I

00:12:05,660 --> 00:12:12,440
have invalidated but if I click on it

00:12:07,779 --> 00:12:17,570
forum and it's going to accept it so you

00:12:12,440 --> 00:12:20,360
need to tell a TPD that you want em to

00:12:17,570 --> 00:12:22,670
check that this certificate is valid

00:12:20,360 --> 00:12:32,060
we're going to do that first

00:12:22,670 --> 00:12:33,980
with the revocation so so basically this

00:12:32,060 --> 00:12:36,760
is the configuration so you see it's

00:12:33,980 --> 00:12:42,370
very easy we are two lines and then

00:12:36,760 --> 00:12:46,190
httpd is going to be able to use a

00:12:42,370 --> 00:12:47,899
revoke a certificate of patient list so

00:12:46,190 --> 00:12:49,940
basically this is this is a small file

00:12:47,899 --> 00:12:53,930
that opensl have generated for me I've

00:12:49,940 --> 00:12:56,510
said this certificate is not valid and I

00:12:53,930 --> 00:12:58,459
entered the command it generates a

00:12:56,510 --> 00:13:01,399
revocation on this revocation I

00:12:58,459 --> 00:13:04,520
generated on the list note that this

00:13:01,399 --> 00:13:07,310
contains a date so you can't you can't

00:13:04,520 --> 00:13:08,870
use a certificate revocation list which

00:13:07,310 --> 00:13:11,839
is too old or so wise you get an error

00:13:08,870 --> 00:13:15,250
message it's not going to accept any

00:13:11,839 --> 00:13:15,250
certificate in case it's wrong

00:13:15,329 --> 00:13:27,310
so if we go again there we take the one

00:13:22,899 --> 00:13:28,930
and here I have I have the invalid

00:13:27,310 --> 00:13:32,050
certificate if I pick the invalid

00:13:28,930 --> 00:13:35,649
certificate it's invalid because it

00:13:32,050 --> 00:13:37,899
should be in is in this virtual loss

00:13:35,649 --> 00:13:41,050
it's in the certificate of regulation if

00:13:37,899 --> 00:13:45,100
I click on and try to use it it's going

00:13:41,050 --> 00:13:47,290
to say it does not work if I go back I

00:13:45,100 --> 00:13:51,029
think if i refresh the page and I choose

00:13:47,290 --> 00:13:53,500
a valid one is going to show me the page

00:13:51,029 --> 00:13:55,029
so actually PD has done the validation

00:13:53,500 --> 00:13:57,550
it checked that in this certificate

00:13:55,029 --> 00:14:00,730
revocation list this certificate is a

00:13:57,550 --> 00:14:02,709
valid one well this certificate is not

00:14:00,730 --> 00:14:07,379
in the invalid one so it's going to let

00:14:02,709 --> 00:14:09,939
me in if I'm going too fast

00:14:07,379 --> 00:14:18,430
tell me I I can't slow down I have

00:14:09,939 --> 00:14:21,430
either I guess I have time so going back

00:14:18,430 --> 00:14:26,110
to another way of validating the

00:14:21,430 --> 00:14:28,839
certificate is running a responder in

00:14:26,110 --> 00:14:32,680
this case you have to tell that you want

00:14:28,839 --> 00:14:37,329
to enable the responders logic which is

00:14:32,680 --> 00:14:41,290
a solution spendable on in this case

00:14:37,329 --> 00:14:43,509
I've defined a default respondent in

00:14:41,290 --> 00:14:47,889
this case this is the IP address of my

00:14:43,509 --> 00:14:51,910
own laptop and I so I have a responder

00:14:47,889 --> 00:14:55,149
it's not using HTTPS yes it's not very

00:14:51,910 --> 00:14:56,620
good it should it's more easy to setup

00:14:55,149 --> 00:14:59,379
so this is why I've done it like that

00:14:56,620 --> 00:15:04,300
and I've run it on my machine on that

00:14:59,379 --> 00:15:09,370
port and this is this is this is an

00:15:04,300 --> 00:15:12,000
information to tell in case the

00:15:09,370 --> 00:15:21,660
certificate of some information about

00:15:12,000 --> 00:15:21,660
the OCSP ignore it and use that so

00:15:23,050 --> 00:15:33,830
if I go back to my example well I first

00:15:32,390 --> 00:15:37,250
need to check one thing is like that I

00:15:33,830 --> 00:15:46,390
have my OCSP certificate running so I'm

00:15:37,250 --> 00:15:49,510
making PS minus EF grab Oh see that so

00:15:46,390 --> 00:15:52,100
yes I have one running the so this is

00:15:49,510 --> 00:15:55,100
this is the respondent the responder

00:15:52,100 --> 00:15:57,500
basically the configuration is filled

00:15:55,100 --> 00:16:01,070
with correct information maybe I can

00:15:57,500 --> 00:16:08,440
make that a bit bigger its control Bruce

00:16:01,070 --> 00:16:08,440
anomaly yes if I step outside its

00:16:16,820 --> 00:16:23,690
nope sorry have to remember to make this

00:16:21,450 --> 00:16:29,280
thing's big

00:16:23,690 --> 00:16:39,720
someone remembers let's make it

00:16:29,280 --> 00:16:54,060
fullscreen bigger not ready okay so what

00:16:39,720 --> 00:16:54,570
you yeah yeah maximize maximize that yes

00:16:54,060 --> 00:16:57,110
I can

00:16:54,570 --> 00:16:57,110
no I can't

00:17:11,150 --> 00:17:18,809
and looking for finding the right okay

00:17:15,270 --> 00:17:23,819
yeah it's what I was starting which is

00:17:18,809 --> 00:17:26,000
this small Z so in sorry you're in the

00:17:23,819 --> 00:17:26,000
right

00:17:32,620 --> 00:17:46,630
yeah yeah I see what you mean the time

00:17:35,289 --> 00:17:48,400
is the key is it more readable yeah so

00:17:46,630 --> 00:17:51,179
basically you tell it to start so we can

00:17:48,400 --> 00:17:55,990
have a quick look in the file its

00:17:51,179 --> 00:18:08,020
cryptic but not so cryptic maybe I use

00:17:55,990 --> 00:18:14,559
vis so now I can make it fullscreen we

00:18:08,020 --> 00:18:17,770
does not want so let's start again so

00:18:14,559 --> 00:18:20,130
you have some information but what is

00:18:17,770 --> 00:18:27,390
interesting to know is like basically

00:18:20,130 --> 00:18:32,049
you have put it the end yes

00:18:27,390 --> 00:18:34,390
you tell it a bunch of information like

00:18:32,049 --> 00:18:37,779
you you're defining your first CA you're

00:18:34,390 --> 00:18:41,289
telling where the file is located and

00:18:37,779 --> 00:18:43,840
then it it add so this is a neural is

00:18:41,289 --> 00:18:46,600
supposed to served and one URL where is

00:18:43,840 --> 00:18:48,700
going to twelve all the certificate

00:18:46,600 --> 00:18:52,210
revocation so you have it yeah defined

00:18:48,700 --> 00:18:54,149
the rest is not very r2d2 understand is

00:18:52,210 --> 00:18:56,710
like basically you have to tell it you

00:18:54,149 --> 00:19:04,539
have to tell me that this is in the case

00:18:56,710 --> 00:19:12,430
you want to use HTTP with it so if if we

00:19:04,539 --> 00:19:16,510
just go down here

00:19:12,430 --> 00:19:18,520
if I use this invalid certificate it's

00:19:16,510 --> 00:19:27,790
going to say it does not allow me to

00:19:18,520 --> 00:19:31,450
connect if I use the valid one it should

00:19:27,790 --> 00:19:37,090
allow me to connect and if I can be a

00:19:31,450 --> 00:19:39,250
responder for some reason if I don't

00:19:37,090 --> 00:19:41,590
have a responder it should give me an

00:19:39,250 --> 00:19:44,310
arrow I can be started because I have

00:19:41,590 --> 00:19:44,310
the government's over

00:19:59,880 --> 00:20:03,630
and I can kill it

00:20:08,790 --> 00:20:20,790
and the responder is gone and if I try

00:20:13,410 --> 00:20:24,960
to refresh the page this let's return

00:20:20,790 --> 00:20:30,090
yeah oh sorry

00:20:24,960 --> 00:20:33,890
oh it's some kind of the browser

00:20:30,090 --> 00:20:37,679
remembers that I was choosing this one

00:20:33,890 --> 00:20:40,049
so I'm going to restart it that's one of

00:20:37,679 --> 00:20:42,840
the tricky thing with the with the

00:20:40,049 --> 00:20:48,570
brothers in some cases the they remember

00:20:42,840 --> 00:20:56,850
what you were doing and that's a bit

00:20:48,570 --> 00:20:59,790
annoying yeah and I'm going to take the

00:20:56,850 --> 00:21:01,410
invalid and then it gives an error and

00:20:59,790 --> 00:21:09,830
if I use the valid does not have

00:21:01,410 --> 00:21:11,820
responded and it should go to complain

00:21:09,830 --> 00:21:13,440
as you can see you don't have a

00:21:11,820 --> 00:21:21,720
responder so you are not able to

00:21:13,440 --> 00:21:23,669
validate the certificate so if so now

00:21:21,720 --> 00:21:26,130
we're going to do it to do another stuff

00:21:23,669 --> 00:21:28,650
which is also a quite interesting to to

00:21:26,130 --> 00:21:32,750
see it like we have been using this

00:21:28,650 --> 00:21:36,150
comment to make sure that we don't use

00:21:32,750 --> 00:21:42,750
the information from the client

00:21:36,150 --> 00:21:44,990
certificate to verify that the the

00:21:42,750 --> 00:21:47,820
certificate is valid on the responder

00:21:44,990 --> 00:21:53,669
I'm going to do two I have another

00:21:47,820 --> 00:21:57,510
example where in fact you want to be you

00:21:53,669 --> 00:22:00,270
want to use these the information of the

00:21:57,510 --> 00:22:03,660
OCSP responder in the certificate

00:22:00,270 --> 00:22:06,140
because the the see edit of create your

00:22:03,660 --> 00:22:11,910
certificate I've had that information

00:22:06,140 --> 00:22:14,429
while signing it that it add I respond

00:22:11,910 --> 00:22:17,600
and this responder you need to onion

00:22:14,429 --> 00:22:20,560
ability so you just another lit and then

00:22:17,600 --> 00:22:26,910
here if I go back

00:22:20,560 --> 00:22:26,910
to the page I pick this one

00:22:27,390 --> 00:22:35,400
yeah then I pick the certificate that

00:22:30,580 --> 00:22:38,920
contained the information to find the

00:22:35,400 --> 00:22:41,530
CSP respondent I click to it and I

00:22:38,920 --> 00:22:43,210
should get a connection and I don't get

00:22:41,530 --> 00:22:45,670
the connection because I've just touched

00:22:43,210 --> 00:22:50,530
up the responder previously so when do

00:22:45,670 --> 00:22:54,850
we start it and I have the command here

00:22:50,530 --> 00:22:58,510
so I'm not going to miss it I'm going to

00:22:54,850 --> 00:23:00,520
miss one letter of the passports so it

00:22:58,510 --> 00:23:05,160
should have started again and if we try

00:23:00,520 --> 00:23:11,800
again it should work I pick the very one

00:23:05,160 --> 00:23:14,710
and that's it so yeah what what at httpd

00:23:11,800 --> 00:23:17,350
have done is like it received the client

00:23:14,710 --> 00:23:19,540
certificate it read the information of

00:23:17,350 --> 00:23:21,700
the client certificate the information

00:23:19,540 --> 00:23:23,800
of the client certificate says please

00:23:21,700 --> 00:23:27,280
check this certificate again this

00:23:23,800 --> 00:23:30,550
responder in my case I've checked it

00:23:27,280 --> 00:23:35,730
against my responder but it could be a

00:23:30,550 --> 00:23:39,190
responder anywhere provided by you say

00:23:35,730 --> 00:23:41,530
and typically if the bank is we can also

00:23:39,190 --> 00:23:44,290
be providing this kind of thing so it's

00:23:41,530 --> 00:23:46,780
will this if we connect their web server

00:23:44,290 --> 00:23:48,370
will connect to the respondent and the

00:23:46,780 --> 00:23:51,040
responder will say ok this certificate

00:23:48,370 --> 00:23:54,270
is not in my in my revocation list and

00:23:51,040 --> 00:23:54,270
you can do the connection

00:24:00,920 --> 00:24:07,710
so we have seen something which is easy

00:24:05,070 --> 00:24:09,990
to demo something a bit less easy to

00:24:07,710 --> 00:24:11,760
demo so I'm not going to be more I'm

00:24:09,990 --> 00:24:17,640
just going to speak about it but

00:24:11,760 --> 00:24:20,900
basically all I've been doing for the

00:24:17,640 --> 00:24:23,430
client can be done on the server

00:24:20,900 --> 00:24:25,290
basically you can warrant all the

00:24:23,430 --> 00:24:29,280
browsers that are connecting to your

00:24:25,290 --> 00:24:33,810
server but that the things are valid so

00:24:29,280 --> 00:24:36,510
the client did the certificate of the

00:24:33,810 --> 00:24:39,540
server is definitively sign can be

00:24:36,510 --> 00:24:47,760
signed by your theme it can use OCSP you

00:24:39,540 --> 00:24:50,340
can use dumpling so if you want to use

00:24:47,760 --> 00:24:54,690
the say of a very well very easy way to

00:24:50,340 --> 00:24:57,150
try is to use let's encrypt let encrypt

00:24:54,690 --> 00:24:59,670
is basically going to give you a

00:24:57,150 --> 00:25:02,970
certificate with this sign is valid for

00:24:59,670 --> 00:25:05,580
90 days which is all perfectly enough

00:25:02,970 --> 00:25:08,160
for making some test it might not always

00:25:05,580 --> 00:25:09,720
be enough to make a demo when you are to

00:25:08,160 --> 00:25:11,220
conference you prepare your demo then

00:25:09,720 --> 00:25:13,560
you forget about it then you run it

00:25:11,220 --> 00:25:15,900
again and then it might happen that it's

00:25:13,560 --> 00:25:22,110
not valid so don't don't forget that it

00:25:15,900 --> 00:25:22,950
is and not signed forever but that's not

00:25:22,110 --> 00:25:26,670
a big problem

00:25:22,950 --> 00:25:30,900
I thought the challenge is going to

00:25:26,670 --> 00:25:33,930
basically very fine an automated wave

00:25:30,900 --> 00:25:37,140
that you really on the server you're

00:25:33,930 --> 00:25:41,820
claiming you're owning it it was

00:25:37,140 --> 00:25:44,130
different process it's going to send you

00:25:41,820 --> 00:25:48,120
something that you have to put on your

00:25:44,130 --> 00:25:50,640
server and verify that you can save it I

00:25:48,120 --> 00:25:52,530
tell each other DNS validation where

00:25:50,640 --> 00:25:55,010
basically it's going to ask you to write

00:25:52,530 --> 00:26:00,360
something in your DNS and check it and

00:25:55,010 --> 00:26:03,360
it can send a special I have the TLS sni

00:26:00,360 --> 00:26:06,300
seven indication where it can disappear

00:26:03,360 --> 00:26:10,110
markers in unvalued it it's not safe

00:26:06,300 --> 00:26:13,230
anymore so I've removed it you have the

00:26:10,110 --> 00:26:15,840
idea and the idea which is the

00:26:13,230 --> 00:26:19,489
the application layer protocol

00:26:15,840 --> 00:26:21,600
negotiation basically it's going to do

00:26:19,489 --> 00:26:23,669
let some creatures are going to say like

00:26:21,600 --> 00:26:26,789
I send you a request and you're supposed

00:26:23,669 --> 00:26:29,789
to do that kind of protocol

00:26:26,789 --> 00:26:33,649
it's a weird protocol and you you have

00:26:29,789 --> 00:26:36,720
to answer to it with the correct answer

00:26:33,649 --> 00:26:38,489
so we've seen on the first line that did

00:26:36,720 --> 00:26:42,480
value for 90 days so a view of the prom

00:26:38,489 --> 00:26:47,039
- we knew it you can renew it using a

00:26:42,480 --> 00:26:48,840
small script basically you have a very

00:26:47,039 --> 00:26:51,029
simple command which is in all

00:26:48,840 --> 00:26:54,029
distribution a set would renew its going

00:26:51,029 --> 00:26:56,940
to renew a certificate and then you can

00:26:54,029 --> 00:27:01,320
go on using them you can have an

00:26:56,940 --> 00:27:04,139
automatic renewal using mod MD and you

00:27:01,320 --> 00:27:07,799
can also do a sampling on your server

00:27:04,139 --> 00:27:10,830
which basically it will regularly check

00:27:07,799 --> 00:27:14,369
your certificate and then I add the

00:27:10,830 --> 00:27:19,259
sampling information to you so that the

00:27:14,369 --> 00:27:21,149
browser is happy when you register you

00:27:19,259 --> 00:27:23,369
just have to let some Crypt you give it

00:27:21,149 --> 00:27:26,279
an email this email is going to be use

00:27:23,369 --> 00:27:29,460
by let's encrypt to ring to remind you

00:27:26,279 --> 00:27:32,159
you have to change your certificate

00:27:29,460 --> 00:27:35,480
something some days before I think a

00:27:32,159 --> 00:27:37,830
month before it's expired

00:27:35,480 --> 00:27:40,350
don't let it expire because at some

00:27:37,830 --> 00:27:42,480
point it's ghost if you are saving a

00:27:40,350 --> 00:27:44,879
page phone to the outside it's it's bit

00:27:42,480 --> 00:27:47,070
annoying suddenly to find that you need

00:27:44,879 --> 00:27:48,869
to click several places in order to

00:27:47,070 --> 00:27:53,659
accept a wrong certificate which is

00:27:48,869 --> 00:27:57,539
never good to do it's not but it's not

00:27:53,659 --> 00:28:01,470
the the fact that this green is maybe

00:27:57,539 --> 00:28:04,549
not enough but if it's not green don't

00:28:01,470 --> 00:28:07,980
do that don't don't go on a server that

00:28:04,549 --> 00:28:11,869
ask you were to accept something which

00:28:07,980 --> 00:28:11,869
is obviously unsafe

00:28:15,529 --> 00:28:24,809
so this is a set boot configuration

00:28:21,230 --> 00:28:29,970
touch that's mad at myself at home in

00:28:24,809 --> 00:28:35,460
fact example so I've I have the 7m I

00:28:29,970 --> 00:28:37,649
said the SSL engine I sent I said the

00:28:35,460 --> 00:28:43,080
certificate file and the certificate

00:28:37,649 --> 00:28:47,309
keys and I I have to add the let's

00:28:43,080 --> 00:28:50,279
encrypt option SSL file which is

00:28:47,309 --> 00:28:53,340
provided by my distribution and it's

00:28:50,279 --> 00:28:56,279
it's very easy every time I need to

00:28:53,340 --> 00:28:58,440
renew my certificate I'll I'll connect

00:28:56,279 --> 00:29:00,360
on my server as route I renew the

00:28:58,440 --> 00:29:03,480
certificate those things are going to be

00:29:00,360 --> 00:29:05,610
updated I just need to make a graceful

00:29:03,480 --> 00:29:07,980
restart and my server is going to be ok

00:29:05,610 --> 00:29:09,600
if you configure that what to do the

00:29:07,980 --> 00:29:18,629
rest will restart for you it will do it

00:29:09,600 --> 00:29:21,960
so it it's perfect so this is using mod

00:29:18,629 --> 00:29:24,470
empty as you can see with more empty you

00:29:21,960 --> 00:29:26,730
basically simplified the VH your oath

00:29:24,470 --> 00:29:29,129
because mod M Day is going to provide

00:29:26,730 --> 00:29:32,039
you which certificate you're going to

00:29:29,129 --> 00:29:35,639
use you are to say to other to set a

00:29:32,039 --> 00:29:37,230
real server admin make sure you can

00:29:35,639 --> 00:29:39,869
receive the email because this is the

00:29:37,230 --> 00:29:43,019
email let's encrypt is going to use to

00:29:39,869 --> 00:29:44,789
tell you that your certificate as is

00:29:43,019 --> 00:29:47,429
going to expire that would happen in

00:29:44,789 --> 00:29:50,070
case mod M D is not working for some

00:29:47,429 --> 00:29:52,710
reasons you're going to be very happy to

00:29:50,070 --> 00:29:54,990
get an email like oh the renewal doesn't

00:29:52,710 --> 00:29:58,049
work it happened to me some months ago

00:29:54,990 --> 00:30:00,090
because I was not updating my my machine

00:29:58,049 --> 00:30:02,159
and then suddenly get an email and I was

00:30:00,090 --> 00:30:05,909
saying that can it be another realized

00:30:02,159 --> 00:30:08,129
hmm my httpd is not up to date so

00:30:05,909 --> 00:30:10,049
it's it's it's good to have it you have

00:30:08,129 --> 00:30:14,029
to accept the agreement

00:30:10,049 --> 00:30:17,610
so basically accepting the agreement is

00:30:14,029 --> 00:30:20,369
putting the arrival of the version of

00:30:17,610 --> 00:30:25,080
the agreement you are accepting you have

00:30:20,369 --> 00:30:26,909
to tell the domain you're using and the

00:30:25,080 --> 00:30:28,110
first time you are configuring this you

00:30:26,909 --> 00:30:30,270
will have to restart you

00:30:28,110 --> 00:30:34,620
server by end it's absolutely obvious

00:30:30,270 --> 00:30:37,470
you're it's at some point you start it

00:30:34,620 --> 00:30:39,870
and it's going you have a narrow message

00:30:37,470 --> 00:30:41,400
in the airlock that ask you to restart

00:30:39,870 --> 00:30:43,170
the server then you restart the server

00:30:41,400 --> 00:30:51,000
and then mode FD is going to run without

00:30:43,170 --> 00:30:54,710
any problem after that if you are using

00:30:51,000 --> 00:30:58,290
a salinas you have to remember that

00:30:54,710 --> 00:31:00,240
httpd running on the on a protected

00:30:58,290 --> 00:31:03,600
environment is not allowed to do

00:31:00,240 --> 00:31:06,150
connection outside so basically don't

00:31:03,600 --> 00:31:08,850
forget to tell that it can do Network

00:31:06,150 --> 00:31:09,840
connect because basically this is this

00:31:08,850 --> 00:31:12,929
is telling

00:31:09,840 --> 00:31:14,880
please check the agreement outside

00:31:12,929 --> 00:31:16,919
this requires the connection to go

00:31:14,880 --> 00:31:19,440
outside and if you're running on an esse

00:31:16,919 --> 00:31:21,299
Linux environment by default activity is

00:31:19,440 --> 00:31:23,190
not allowed to do that you don't you are

00:31:21,299 --> 00:31:26,040
not allowing activity to connect outside

00:31:23,190 --> 00:31:35,220
your box which kind of makes sense for

00:31:26,040 --> 00:31:37,250
security reason so let let's see what it

00:31:35,220 --> 00:31:37,250
does

00:31:38,150 --> 00:31:45,780
that's the stumbling of this time

00:31:40,620 --> 00:31:50,220
playing basically you you tell to modem

00:31:45,780 --> 00:31:53,760
play that mode of the most ample on the

00:31:50,220 --> 00:31:56,400
configuration is is very easy you can

00:31:53,760 --> 00:31:59,460
check it very easily by connecting to

00:31:56,400 --> 00:32:02,280
the server you ask for the status in the

00:31:59,460 --> 00:32:05,130
in the big status it's going to tell

00:32:02,280 --> 00:32:08,490
that it are the OCS spear respond and as

00:32:05,130 --> 00:32:11,880
this time my stamp link this is an

00:32:08,490 --> 00:32:16,410
example from Las Vegas so it's a bit

00:32:11,880 --> 00:32:21,000
outdated so if I would run it now I

00:32:16,410 --> 00:32:23,400
would other a newer date but there was a

00:32:21,000 --> 00:32:25,580
thunderstorm at my place my server is

00:32:23,400 --> 00:32:25,580
down

00:32:29,230 --> 00:32:36,560
so there's a actually a modern-day use

00:32:33,860 --> 00:32:40,750
and let's encrypt they are using a Acme

00:32:36,560 --> 00:32:43,820
v1 and there's a new protocol at me v2

00:32:40,750 --> 00:32:48,440
it's going to rig it of course

00:32:43,820 --> 00:32:50,600
unfortunately not backward-compatible it

00:32:48,440 --> 00:32:55,720
requires a new version of mod MD which

00:32:50,600 --> 00:33:01,660
is being developed you can already use

00:32:55,720 --> 00:33:07,870
use it to test it it's available it's

00:33:01,660 --> 00:33:11,210
the core it was not in our GT PD in

00:33:07,870 --> 00:33:14,980
September I did not have checked again I

00:33:11,210 --> 00:33:14,980
think at some point it's going to be in

00:33:15,160 --> 00:33:21,680
but you don't need to worry so much

00:33:17,480 --> 00:33:26,660
because they say that v1 is going to be

00:33:21,680 --> 00:33:30,280
sunset at some point in the future we

00:33:26,660 --> 00:33:30,280
sure that's going to take some time so

00:33:30,760 --> 00:33:36,740
the new protocol is kind of a bit safer

00:33:35,210 --> 00:33:40,400
because first it's going to force you to

00:33:36,740 --> 00:33:49,190
reduce HTTP to connect to the responder

00:33:40,400 --> 00:33:50,570
so it's it's it's a bit safer so one I'm

00:33:49,190 --> 00:33:55,340
a bit early

00:33:50,570 --> 00:34:02,780
so I've space for question don't

00:33:55,340 --> 00:34:04,430
hesitate to look to this one so this is

00:34:02,780 --> 00:34:08,780
this is my gaiter pant

00:34:04,430 --> 00:34:10,580
oops I should have the script oh you run

00:34:08,780 --> 00:34:13,970
all the stuff that means all what after

00:34:10,580 --> 00:34:17,810
all what I have shown you is basically

00:34:13,970 --> 00:34:20,360
on running not running it's running

00:34:17,810 --> 00:34:23,660
pieces of this script and you have the

00:34:20,360 --> 00:34:26,270
explanation what to run so you can you

00:34:23,660 --> 00:34:29,920
can do it on at home and if you have any

00:34:26,270 --> 00:34:33,560
problem don't hesitate just just ask me

00:34:29,920 --> 00:34:35,720
I'm very happy to help and that way you

00:34:33,560 --> 00:34:39,350
are you will have quite a good

00:34:35,720 --> 00:34:41,920
understanding of what can be done using

00:34:39,350 --> 00:34:41,920
these things

00:34:44,909 --> 00:35:01,150
so so I sped off some time for questions

00:34:51,790 --> 00:35:06,220
I'm I've been speaking a bit fast any

00:35:01,150 --> 00:35:09,060
questions from anyone what do you want

00:35:06,220 --> 00:35:13,600
me to go back to some slides where the

00:35:09,060 --> 00:35:22,090
information is a bit more extended like

00:35:13,600 --> 00:35:24,610
one line up to understand sure in one of

00:35:22,090 --> 00:35:27,250
your examples you have override the

00:35:24,610 --> 00:35:30,100
default responder what would happen if

00:35:27,250 --> 00:35:33,880
you haven't done that because you have

00:35:30,100 --> 00:35:37,840
it enabled one line above so basically

00:35:33,880 --> 00:35:39,720
this overwrite the information in my

00:35:37,840 --> 00:35:44,400
example nothing would have happened

00:35:39,720 --> 00:35:46,690
because the responder is is the same I

00:35:44,400 --> 00:35:51,250
because I've generated my certificate

00:35:46,690 --> 00:35:53,680
like that but normally if you use this

00:35:51,250 --> 00:35:57,760
comes from a bug we had in Tomcat that's

00:35:53,680 --> 00:36:01,300
why I was able to do this this took the

00:35:57,760 --> 00:36:03,940
add program with the responder it it was

00:36:01,300 --> 00:36:06,130
not picking the responder correctly so

00:36:03,940 --> 00:36:11,950
basically in the certificate you have

00:36:06,130 --> 00:36:16,390
the information of which a responder

00:36:11,950 --> 00:36:19,450
should be used and I've put overwrite in

00:36:16,390 --> 00:36:21,280
order that is not using what is in the

00:36:19,450 --> 00:36:25,710
client certificate but what is

00:36:21,280 --> 00:36:25,710
configured in httpd.conf

00:36:32,050 --> 00:36:42,590
any more questions I know that the top

00:36:39,710 --> 00:36:46,790
is shot and I have planned room for

00:36:42,590 --> 00:36:49,460
questions and usually this dog is given

00:36:46,790 --> 00:36:52,370
as the last one so that just forgot to

00:36:49,460 --> 00:36:53,750
people a bit earlier just an idea

00:36:52,370 --> 00:36:56,750
because I'm curious should be asked

00:36:53,750 --> 00:36:58,490
who's already using OpenSSL one-on-one

00:36:56,750 --> 00:37:02,690
based products and who's using one or

00:36:58,490 --> 00:37:05,030
two that's what do people know what

00:37:02,690 --> 00:37:08,030
you're using if it's OpenSSL paste do

00:37:05,030 --> 00:37:14,290
you already use one one one who is using

00:37:08,030 --> 00:37:17,330
one one one so nobody go we don't know

00:37:14,290 --> 00:37:21,470
yeah that could happen so it means that

00:37:17,330 --> 00:37:36,610
yeah all those things like TLS one two

00:37:21,470 --> 00:37:40,550
three years yes the definitive leads yes

00:37:36,610 --> 00:37:46,370
it's like the HV Protocol this is going

00:37:40,550 --> 00:37:48,140
to take a long long time yeah it's a

00:37:46,370 --> 00:37:54,230
probably going to be a lot longer than

00:37:48,140 --> 00:37:55,880
the h2o adoption yes yes yes I have a

00:37:54,230 --> 00:38:00,830
customer that was very upset when I

00:37:55,880 --> 00:38:02,810
remove it and trying to spend a lot of

00:38:00,830 --> 00:38:04,490
time explaining him that you need to

00:38:02,810 --> 00:38:09,290
rewrite your client because this is

00:38:04,490 --> 00:38:11,330
definitely not safe I mean but the

00:38:09,290 --> 00:38:13,160
answer is like I'm not the one that I've

00:38:11,330 --> 00:38:15,170
written the client I need to find the

00:38:13,160 --> 00:38:16,880
consultant that did that and then the

00:38:15,170 --> 00:38:20,720
consultant apparently didn't exist

00:38:16,880 --> 00:38:22,580
anymore and that's it and apparently

00:38:20,720 --> 00:38:25,040
those guys were not doing open-source so

00:38:22,580 --> 00:38:27,500
it seems they don't have the full source

00:38:25,040 --> 00:38:29,450
of their client so they can't update it

00:38:27,500 --> 00:38:32,090
so this is why you have to do open

00:38:29,450 --> 00:38:34,160
source and this is why you have to try

00:38:32,090 --> 00:38:35,420
to be up-to-date it's like basically you

00:38:34,160 --> 00:38:37,850
don't have the bad surprise that

00:38:35,420 --> 00:38:39,470
something is someone is saying like oh

00:38:37,850 --> 00:38:43,690
this is completely unsafe for years

00:38:39,470 --> 00:38:43,690
let's remove it and then nothing works

00:38:47,030 --> 00:38:54,210
okay so I am going to send you to your

00:38:52,320 --> 00:38:58,080
dinner a bit earlier than expected

00:38:54,210 --> 00:39:01,100
I hope you have nothing against it so

00:38:58,080 --> 00:39:01,100
thank you for listening

00:39:02,170 --> 00:39:07,219

YouTube URL: https://www.youtube.com/watch?v=EKWRosnhNMg


