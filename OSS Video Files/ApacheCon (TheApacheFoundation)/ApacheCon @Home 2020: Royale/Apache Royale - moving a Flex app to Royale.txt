Title: Apache Royale - moving a Flex app to Royale
Publication date: 2020-10-14
Playlist: ApacheCon @Home 2020: Royale
Description: 
	Apache Royale - moving a Flex app to Royale
Andrew Wetmore, Alina Kazi

A presentation from ApacheCon @Home 2020
https://apachecon.com/acah2020/

There are many applications of all sizes that are facing their end-of-life because they were built in Flex presuming the availability of Adobe Flash. Now that browsers are ending their support of Flash, we need to either migrate those apps to Royale or throw away a rich code resource. This sessions steps through the process of migrating an existing Flex application to Royale. It explores how the two platforms are similar and where they diverge, and the tools that are in place to help you get from the dying app to a one with a new life.

Andrew has 15 years in QA and documentation in the software industry and experience building many Flex and Royale applications.
Alina is a participant in the Apache Royale project, and a former staffer at DBIZ Solutions, where she was involved in a major migration from Flex to Royale
Captions: 
	00:00:06,420 --> 00:00:10,640
[Music]

00:00:14,160 --> 00:00:17,230
[Music]

00:00:26,160 --> 00:00:29,920
well alina's getting organized

00:00:28,320 --> 00:00:31,679
i think there's a connection issue or

00:00:29,920 --> 00:00:32,800
something and when she gets that

00:00:31,679 --> 00:00:35,120
straightened out

00:00:32,800 --> 00:00:37,920
she will join us i'm going to go ahead

00:00:35,120 --> 00:00:40,480
because the time is moving on

00:00:37,920 --> 00:00:42,160
this is the session on how to move a

00:00:40,480 --> 00:00:47,039
flat application

00:00:42,160 --> 00:00:49,440
to royale to apache royale

00:00:47,039 --> 00:00:51,840
and uh i'm glad you're all here and

00:00:49,440 --> 00:00:52,719
let's see how far we can get bef and how

00:00:51,840 --> 00:00:55,280
many

00:00:52,719 --> 00:00:58,320
things i can say wrong before elena

00:00:55,280 --> 00:01:02,000
shows up

00:00:58,320 --> 00:01:04,080
i'm andrew wetmore and i work on the

00:01:02,000 --> 00:01:05,920
uh oh hang on she's asking how to get

00:01:04,080 --> 00:01:08,799
live so let's see if i can figure

00:01:05,920 --> 00:01:10,840
that out for her while you guys watch in

00:01:08,799 --> 00:01:13,840
real time

00:01:10,840 --> 00:01:13,840
um

00:01:26,560 --> 00:01:29,680
um let's see

00:01:35,840 --> 00:01:41,119
she's having trouble going live and so i

00:01:38,799 --> 00:01:43,759
in my best uh

00:01:41,119 --> 00:01:44,799
customer service voice said what seems

00:01:43,759 --> 00:01:47,439
to be the problem

00:01:44,799 --> 00:01:48,720
and we'll see if she can uh share that

00:01:47,439 --> 00:01:51,119
with me and there

00:01:48,720 --> 00:01:52,079
therefore i can get her in here anyhow

00:01:51,119 --> 00:01:54,560
i'm

00:01:52,079 --> 00:01:55,520
i am a committer for the apache royale

00:01:54,560 --> 00:01:58,560
team and i also

00:01:55,520 --> 00:02:00,159
work on the infrastructure team alina is

00:01:58,560 --> 00:02:02,079
a committer

00:02:00,159 --> 00:02:03,759
before the project we're talking about

00:02:02,079 --> 00:02:06,719
started though

00:02:03,759 --> 00:02:08,640
she knew nothing of apache royale she

00:02:06,719 --> 00:02:12,720
was working for a company that had

00:02:08,640 --> 00:02:16,640
a huge important

00:02:12,720 --> 00:02:17,920
application with about 2000 files

00:02:16,640 --> 00:02:21,200
altogether

00:02:17,920 --> 00:02:24,959
and it was a very effective

00:02:21,200 --> 00:02:25,760
flex application and as you know if you

00:02:24,959 --> 00:02:27,920
have a flex

00:02:25,760 --> 00:02:29,120
application and you're running it you

00:02:27,920 --> 00:02:30,879
need flash

00:02:29,120 --> 00:02:33,040
you need that platform to run your

00:02:30,879 --> 00:02:36,160
application on

00:02:33,040 --> 00:02:37,040
and as you also know flash the flash

00:02:36,160 --> 00:02:39,280
player

00:02:37,040 --> 00:02:41,440
is coming to the end of life and that

00:02:39,280 --> 00:02:45,200
sort of casts doubts also on the

00:02:41,440 --> 00:02:46,879
uh adobe independ integrated runtime

00:02:45,200 --> 00:02:49,280
the alternative for a desktop

00:02:46,879 --> 00:02:50,080
environment about how long that will

00:02:49,280 --> 00:02:53,599
last

00:02:50,080 --> 00:02:57,280
so with the end of flash support

00:02:53,599 --> 00:03:01,120
they had a choice either rebuild the

00:02:57,280 --> 00:03:04,720
whole application in some new technology

00:03:01,120 --> 00:03:06,560
or use their existing assets and their

00:03:04,720 --> 00:03:10,239
existing team skills

00:03:06,560 --> 00:03:10,640
and move the application to royale which

00:03:10,239 --> 00:03:13,840
is

00:03:10,640 --> 00:03:17,200
the the further

00:03:13,840 --> 00:03:18,959
evolution of of flex

00:03:17,200 --> 00:03:20,800
hang on she's sending me an image so i

00:03:18,959 --> 00:03:22,640
can try to see she sees me but she's

00:03:20,800 --> 00:03:26,959
having trouble going live

00:03:22,640 --> 00:03:26,959
she sees us um

00:03:28,640 --> 00:03:38,319
i'm going to advise uh alaina

00:03:33,680 --> 00:03:42,239
can you contact rich

00:03:38,319 --> 00:03:47,840
 bowen through

00:03:42,239 --> 00:03:51,360
the slack channel

00:03:47,840 --> 00:03:55,439
but for rich bowlin

00:03:51,360 --> 00:03:58,799
for the uh for the software convention

00:03:55,439 --> 00:04:00,560
is the equivalent of the advice when

00:03:58,799 --> 00:04:02,159
when your family member is having

00:04:00,560 --> 00:04:04,959
trouble with a computer and you say

00:04:02,159 --> 00:04:09,120
can you turn it off and turn it on again

00:04:04,959 --> 00:04:12,080
rich is the solution for all problems

00:04:09,120 --> 00:04:13,599
so dbis solutions have this application

00:04:12,080 --> 00:04:14,640
the end of it flash support they had to

00:04:13,599 --> 00:04:17,840
decide what to do

00:04:14,640 --> 00:04:20,239
rebuild the whole app or move the

00:04:17,840 --> 00:04:22,000
application to something like real that

00:04:20,239 --> 00:04:26,080
would support their existing assets

00:04:22,000 --> 00:04:29,120
and their skills so

00:04:26,080 --> 00:04:30,479
they looked at apache royale and they

00:04:29,120 --> 00:04:33,120
realized how similar

00:04:30,479 --> 00:04:35,600
royale and flex are and that means there

00:04:33,120 --> 00:04:38,479
are many differences of course but

00:04:35,600 --> 00:04:40,479
to move from one to the other is much

00:04:38,479 --> 00:04:44,720
much less difficult than moving

00:04:40,479 --> 00:04:46,560
from royale to uh from flex to react or

00:04:44,720 --> 00:04:49,360
to java or to something else

00:04:46,560 --> 00:04:53,600
and trying to make the same application

00:04:49,360 --> 00:04:53,600
work there that you had working already

00:04:53,680 --> 00:04:59,520
uh so

00:04:56,800 --> 00:05:01,360
and nina's boss said why don't you see

00:04:59,520 --> 00:05:03,280
if you can

00:05:01,360 --> 00:05:04,400
migrate this thing we can move this

00:05:03,280 --> 00:05:06,880
thing to real

00:05:04,400 --> 00:05:09,199
and make it stand up again and see how

00:05:06,880 --> 00:05:12,800
how long that will take

00:05:09,199 --> 00:05:15,280
both flex and royale use mxml

00:05:12,800 --> 00:05:17,680
and actionscript files so there's one

00:05:15,280 --> 00:05:17,680
good thing

00:05:20,240 --> 00:05:24,000
that means that it's shorter time it

00:05:21,840 --> 00:05:27,440
takes less time to develop a replacement

00:05:24,000 --> 00:05:30,080
app fewer risks in that development

00:05:27,440 --> 00:05:31,520
fewer headaches for the team there's

00:05:30,080 --> 00:05:33,120
certain things that you have to get

00:05:31,520 --> 00:05:34,560
used to that are very that are very

00:05:33,120 --> 00:05:35,520
different and we'll come to some of

00:05:34,560 --> 00:05:38,720
those

00:05:35,520 --> 00:05:44,240
but in general the

00:05:38,720 --> 00:05:47,680
uh this migration

00:05:44,240 --> 00:05:50,840
is poses less challenges than it let

00:05:47,680 --> 00:05:52,960
right like a migration to a different

00:05:50,840 --> 00:05:55,120
language

00:05:52,960 --> 00:05:55,120
so

00:05:59,840 --> 00:06:03,840
the migration in general took these

00:06:01,600 --> 00:06:07,120
steps first they had to figure out

00:06:03,840 --> 00:06:10,560
what parts of flex their application

00:06:07,120 --> 00:06:13,680
was using so

00:06:10,560 --> 00:06:17,280
they had to run an

00:06:13,680 --> 00:06:21,840
api report to see what pieces

00:06:17,280 --> 00:06:21,840
of the of the flex

00:06:22,479 --> 00:06:28,000
were essential for their to for their

00:06:25,280 --> 00:06:28,000
application

00:06:29,680 --> 00:06:36,720
the next step um well i see that

00:06:34,720 --> 00:06:38,400
oh good maybe i should talk slower

00:06:36,720 --> 00:06:40,080
because alina is going to be here in a

00:06:38,400 --> 00:06:42,880
moment

00:06:40,080 --> 00:06:42,880
so uh

00:06:44,000 --> 00:06:48,160
i'll stay on the first step for now and

00:06:45,919 --> 00:06:51,759
say that the api report

00:06:48,160 --> 00:06:54,160
can be daunting when you see how many

00:06:51,759 --> 00:06:55,680
sections of the sdk your your

00:06:54,160 --> 00:06:57,520
application is using

00:06:55,680 --> 00:06:58,880
i've written a whole bunch of

00:06:57,520 --> 00:07:00,800
applications

00:06:58,880 --> 00:07:02,560
and none of them have been as complex as

00:07:00,800 --> 00:07:03,759
the one we're talking about today and

00:07:02,560 --> 00:07:07,840
each of them has

00:07:03,759 --> 00:07:08,639
used a ton more uh pieces touches a ton

00:07:07,840 --> 00:07:11,440
more pieces

00:07:08,639 --> 00:07:13,680
of the of the sdk than i would have

00:07:11,440 --> 00:07:13,680
thought

00:07:14,840 --> 00:07:19,039
possible

00:07:17,120 --> 00:07:20,960
i'll just run down this this bulleted

00:07:19,039 --> 00:07:24,080
list and that'll give us a running start

00:07:20,960 --> 00:07:24,080
when elena shows up

00:07:24,160 --> 00:07:28,240
the api report helps you see what are

00:07:26,560 --> 00:07:30,240
the things you need to use

00:07:28,240 --> 00:07:31,360
and then you can go and look and make a

00:07:30,240 --> 00:07:35,199
comparison

00:07:31,360 --> 00:07:35,840
between the flex sdk and the royale sdk

00:07:35,199 --> 00:07:40,240
and say oh

00:07:35,840 --> 00:07:42,319
i need this api does it exist in royale

00:07:40,240 --> 00:07:44,800
there it is oh this is going to make it

00:07:42,319 --> 00:07:45,520
that migration pretty simple i just have

00:07:44,800 --> 00:07:48,000
to look at that

00:07:45,520 --> 00:07:48,639
and see what things are different in

00:07:48,000 --> 00:07:51,680
this

00:07:48,639 --> 00:07:55,360
version of that api um

00:07:51,680 --> 00:07:58,639
from the flex one hello

00:07:55,360 --> 00:08:03,120
oh hello i've been i've been uh

00:07:58,639 --> 00:08:05,280
juggling here my juggling partner

00:08:03,120 --> 00:08:07,280
yeah i am alina ghazi apache royal

00:08:05,280 --> 00:08:09,759
committee i have worked on migration of

00:08:07,280 --> 00:08:11,840
flex application to apache trial

00:08:09,759 --> 00:08:13,759
sorry for the connection problem it was

00:08:11,840 --> 00:08:16,720
not actually the connection problem but

00:08:13,759 --> 00:08:17,759
i have two ids apache and my personal id

00:08:16,720 --> 00:08:21,199
so the link was

00:08:17,759 --> 00:08:23,520
on personal id okay so now you're here

00:08:21,199 --> 00:08:25,680
you can see the slide that i got us to

00:08:23,520 --> 00:08:26,560
i've been work talking as slowly as i

00:08:25,680 --> 00:08:28,800
could

00:08:26,560 --> 00:08:29,840
and i've just tried to describe the api

00:08:28,800 --> 00:08:32,800
report

00:08:29,840 --> 00:08:33,760
and it's over to you now yeah and

00:08:32,800 --> 00:08:35,760
actually we've

00:08:33,760 --> 00:08:38,719
we've jumped past the place where you

00:08:35,760 --> 00:08:41,440
where you talk about your journey

00:08:38,719 --> 00:08:43,599
yeah we can uh start do you want me to

00:08:41,440 --> 00:08:47,279
go back one slide

00:08:43,599 --> 00:08:51,760
yeah okay thank you

00:08:47,279 --> 00:08:51,760
thank you i'm gonna shut my mouth now

00:08:51,839 --> 00:08:57,440
thank you there were a lot of mxml files

00:08:56,560 --> 00:09:01,279
that were written

00:08:57,440 --> 00:09:03,760
by flex 10 flex developers for 13 years

00:09:01,279 --> 00:09:05,120
so we had two options first was to

00:09:03,760 --> 00:09:06,880
rebuild the application in new

00:09:05,120 --> 00:09:09,040
technology from scratch

00:09:06,880 --> 00:09:11,440
that may require different skill set a

00:09:09,040 --> 00:09:13,519
lot of time required for that

00:09:11,440 --> 00:09:15,440
second was to go for an option where we

00:09:13,519 --> 00:09:16,560
can migrate this flex application in

00:09:15,440 --> 00:09:18,480
less time possible

00:09:16,560 --> 00:09:20,160
and do not require very different skill

00:09:18,480 --> 00:09:23,200
set

00:09:20,160 --> 00:09:25,839
the decision we took was migration of

00:09:23,200 --> 00:09:28,399
flex application to apache royal

00:09:25,839 --> 00:09:30,560
my manager sn after 8x company db

00:09:28,399 --> 00:09:32,399
solutions told me about apache royal in

00:09:30,560 --> 00:09:34,959
early 2018.

00:09:32,399 --> 00:09:36,480
he knew about apache royal at very early

00:09:34,959 --> 00:09:39,760
stage because you used to read

00:09:36,480 --> 00:09:42,399
technology stuff a lot i subscribed to

00:09:39,760 --> 00:09:44,959
the users and developers mailing list

00:09:42,399 --> 00:09:45,680
of apache royal and started to ask

00:09:44,959 --> 00:09:49,040
questions

00:09:45,680 --> 00:09:52,080
you will find me everywhere

00:09:49,040 --> 00:09:54,480
when you search for an issue

00:09:52,080 --> 00:09:55,200
by time i found flex and royal always

00:09:54,480 --> 00:09:57,200
similar

00:09:55,200 --> 00:09:58,720
and it is possible to migrate flex

00:09:57,200 --> 00:10:01,600
application to royal

00:09:58,720 --> 00:10:02,640
in less time we need to do some hands-on

00:10:01,600 --> 00:10:05,120
conversion

00:10:02,640 --> 00:10:07,600
languages are same in flex and royal

00:10:05,120 --> 00:10:09,600
like mxml and action script both were in

00:10:07,600 --> 00:10:12,160
flex and both are in royal

00:10:09,600 --> 00:10:13,920
so the syntax will remain same function

00:10:12,160 --> 00:10:16,399
loop classes properties will work as

00:10:13,920 --> 00:10:18,560
they work before

00:10:16,399 --> 00:10:20,399
business logic that we built in flex

00:10:18,560 --> 00:10:22,000
will remain same in royal

00:10:20,399 --> 00:10:24,560
components and their function they do

00:10:22,000 --> 00:10:26,160
not rely on apache flex or adobe flash

00:10:24,560 --> 00:10:27,839
feature will probably work with minor

00:10:26,160 --> 00:10:29,680
tricks

00:10:27,839 --> 00:10:31,040
about my journey i would say we were two

00:10:29,680 --> 00:10:34,240
developers on this project

00:10:31,040 --> 00:10:35,440
i started alone in february 2018 when no

00:10:34,240 --> 00:10:38,240
emulation was present

00:10:35,440 --> 00:10:39,760
in sdk i got help from apache royal

00:10:38,240 --> 00:10:42,959
community especially alex

00:10:39,760 --> 00:10:44,959
he is pmc member in apache royalty

00:10:42,959 --> 00:10:46,000
he has started some emulations in the

00:10:44,959 --> 00:10:48,959
particular

00:10:46,000 --> 00:10:50,560
sdk in the visual area he initially

00:10:48,959 --> 00:10:54,000
added mx core application

00:10:50,560 --> 00:10:56,959
that every flex application had

00:10:54,000 --> 00:10:58,959
and in non-visual area he added mx4 ui

00:10:56,959 --> 00:11:03,360
component

00:10:58,959 --> 00:11:03,360
it was a flash api in real

00:11:03,519 --> 00:11:06,720
i learned from those apis and then i

00:11:06,079 --> 00:11:14,000
started

00:11:06,720 --> 00:11:17,279
to add emulation in sdk

00:11:14,000 --> 00:11:19,040
on uh third april 2018 i added my first

00:11:17,279 --> 00:11:21,839
commit to the sdk and then i

00:11:19,040 --> 00:11:22,640
edit a lot within a month i got the

00:11:21,839 --> 00:11:25,600
status of

00:11:22,640 --> 00:11:27,279
apache royal committee and then become

00:11:25,600 --> 00:11:30,240
part of the team

00:11:27,279 --> 00:11:31,760
later on july 7 2018 my sister pashmina

00:11:30,240 --> 00:11:33,920
khasi has joined

00:11:31,760 --> 00:11:36,640
i taught her what the community taught

00:11:33,920 --> 00:11:38,000
me she was a quick learner in august she

00:11:36,640 --> 00:11:40,839
started to commit and she became

00:11:38,000 --> 00:11:44,000
committed to in october

00:11:40,839 --> 00:11:44,560
2018. then we have worked on the project

00:11:44,000 --> 00:11:47,279
together

00:11:44,560 --> 00:11:48,399
apis emulation compilation success of

00:11:47,279 --> 00:11:50,560
our application

00:11:48,399 --> 00:11:52,720
ro's work first preview of the login

00:11:50,560 --> 00:11:55,279
page menu setups and then

00:11:52,720 --> 00:11:56,000
programs started running on the browser

00:11:55,279 --> 00:11:58,560
we got this

00:11:56,000 --> 00:12:01,279
success step by step she continued with

00:11:58,560 --> 00:12:02,959
the organization till the end

00:12:01,279 --> 00:12:05,279
and now i am going to discuss these

00:12:02,959 --> 00:12:06,959
steps

00:12:05,279 --> 00:12:09,120
these are the steps for migration of

00:12:06,959 --> 00:12:12,240
flex application to apache royal

00:12:09,120 --> 00:12:14,480
api report is the initial step

00:12:12,240 --> 00:12:15,440
we generate this report to see what

00:12:14,480 --> 00:12:19,279
components your

00:12:15,440 --> 00:12:21,519
existing application use all you need to

00:12:19,279 --> 00:12:23,040
do is to make your application flash

00:12:21,519 --> 00:12:25,360
free

00:12:23,040 --> 00:12:28,959
i've shared a link below to generate the

00:12:25,360 --> 00:12:28,959
api report on the next slide

00:12:29,279 --> 00:12:35,680
here it is some popular flash apis have

00:12:33,200 --> 00:12:37,760
been emulated to royal

00:12:35,680 --> 00:12:40,480
like flash core ui component has

00:12:37,760 --> 00:12:43,680
emulation mx4 ui component

00:12:40,480 --> 00:12:46,399
uh flash events event has has

00:12:43,680 --> 00:12:47,360
alternate in royal organic royal events

00:12:46,399 --> 00:12:51,920
event

00:12:47,360 --> 00:12:53,279
flash net navigate to url has alternate

00:12:51,920 --> 00:12:56,000
or the pattern

00:12:53,279 --> 00:12:56,639
code browser window and get qualified

00:12:56,000 --> 00:12:58,880
name has

00:12:56,639 --> 00:13:01,360
also an alternate or the partial

00:12:58,880 --> 00:13:04,560
reflection get qualified name

00:13:01,360 --> 00:13:07,600
so the easy parts uh in this migration

00:13:04,560 --> 00:13:11,440
process were like we need to change the

00:13:07,600 --> 00:13:14,720
name spaces from flex to royal

00:13:11,440 --> 00:13:15,440
so here's example given that we need to

00:13:14,720 --> 00:13:18,320
change the

00:13:15,440 --> 00:13:20,959
replace the name spaces replace the

00:13:18,320 --> 00:13:26,800
flesh apis with the equivalence

00:13:20,959 --> 00:13:30,079
in apache royal an example is also given

00:13:26,800 --> 00:13:32,560
add the class alias bead

00:13:30,079 --> 00:13:33,120
in your application file in every module

00:13:32,560 --> 00:13:34,959
file

00:13:33,120 --> 00:13:38,800
but not the border container title

00:13:34,959 --> 00:13:41,040
window mx script should be replaced with

00:13:38,800 --> 00:13:44,560
fx script mx component should be

00:13:41,040 --> 00:13:44,560
replaced with effects opponent

00:13:45,440 --> 00:13:49,839
can we move on to the next slide

00:13:51,120 --> 00:13:54,160
creation of steps

00:13:56,639 --> 00:14:03,839
there is always a slight delay between

00:13:58,639 --> 00:14:03,839
when i click and when you see

00:14:15,279 --> 00:14:19,279
creation of stop next slide uh even

00:14:18,320 --> 00:14:22,320
further

00:14:19,279 --> 00:14:25,519
yeah next okay

00:14:22,320 --> 00:14:28,160
even more here we go

00:14:25,519 --> 00:14:28,880
yeah royal has set off emulation

00:14:28,160 --> 00:14:32,000
components

00:14:28,880 --> 00:14:34,079
and reflex replace flex

00:14:32,000 --> 00:14:35,040
components that are dependent on flash

00:14:34,079 --> 00:14:37,440
features

00:14:35,040 --> 00:14:38,959
there are these are the sets mx royal

00:14:37,440 --> 00:14:41,760
and spark royal

00:14:38,959 --> 00:14:44,160
you can download the source flex sdk

00:14:41,760 --> 00:14:48,079
source and royal sdk sdks i have given a

00:14:44,160 --> 00:14:51,440
link on the slide that you can see

00:14:48,079 --> 00:14:51,440
and you need to do

00:14:51,680 --> 00:14:56,839
first contains mx and ui component

00:14:54,079 --> 00:14:58,160
emulation second contain the spark

00:14:56,839 --> 00:15:00,000
emulation

00:14:58,160 --> 00:15:02,560
initial target is to compile your

00:15:00,000 --> 00:15:04,560
application with royal sdk

00:15:02,560 --> 00:15:06,240
you might need to check from the api

00:15:04,560 --> 00:15:07,920
list what is required and what is

00:15:06,240 --> 00:15:09,760
present in sdk

00:15:07,920 --> 00:15:11,199
you need to add the remaining step in

00:15:09,760 --> 00:15:13,839
royal sdk

00:15:11,199 --> 00:15:15,920
the step will at this stage do nothing

00:15:13,839 --> 00:15:17,920
but you will be able to compile without

00:15:15,920 --> 00:15:19,760
any error

00:15:17,920 --> 00:15:22,079
i have shared the links of flex sdk

00:15:19,760 --> 00:15:24,000
source as i said earlier in royalistic

00:15:22,079 --> 00:15:25,680
source you can download both of these

00:15:24,000 --> 00:15:27,920
source on your machine

00:15:25,680 --> 00:15:29,440
and you can see that what apis are

00:15:27,920 --> 00:15:31,600
written in royal and

00:15:29,440 --> 00:15:34,639
what we need to emulate for this

00:15:31,600 --> 00:15:34,639
compilation success

00:15:35,360 --> 00:15:41,279
copy the code from flex sdk to the stuff

00:15:38,959 --> 00:15:42,560
functional property that you need to

00:15:41,279 --> 00:15:44,720
compile your application

00:15:42,560 --> 00:15:46,560
you need to paste it to royal sdk at the

00:15:44,720 --> 00:15:49,120
same place

00:15:46,560 --> 00:15:50,000
what if the api does not have alternate

00:15:49,120 --> 00:15:52,959
in royal

00:15:50,000 --> 00:15:56,160
neither exists in emulation set of mx

00:15:52,959 --> 00:15:56,160
royal on spot royal

00:15:56,720 --> 00:16:00,160
here you need emulation

00:16:01,040 --> 00:16:04,639
an emulation is an attempt to make

00:16:03,040 --> 00:16:07,519
something look

00:16:04,639 --> 00:16:10,880
like something real in this case real is

00:16:07,519 --> 00:16:14,079
flex sdk file or api

00:16:10,880 --> 00:16:16,880
copy flex sdk file from uh

00:16:14,079 --> 00:16:20,320
copy file from flex sdk and paste it to

00:16:16,880 --> 00:16:22,800
royal sdk on the same path

00:16:20,320 --> 00:16:23,680
the difference only the difference here

00:16:22,800 --> 00:16:26,160
is only

00:16:23,680 --> 00:16:28,240
that uh in flex they were mx and spark

00:16:26,160 --> 00:16:29,519
here the library names are mx royal and

00:16:28,240 --> 00:16:32,000
spark royal

00:16:29,519 --> 00:16:33,920
comment out all import statement use

00:16:32,000 --> 00:16:36,560
name space mx internal

00:16:33,920 --> 00:16:37,839
comment out all style metadata if you

00:16:36,560 --> 00:16:41,120
need any style you can

00:16:37,839 --> 00:16:43,440
put it as property right

00:16:41,120 --> 00:16:45,920
see your api report delete everything

00:16:43,440 --> 00:16:48,079
that is not mentioned in your api report

00:16:45,920 --> 00:16:50,079
sometimes this subclass may need some

00:16:48,079 --> 00:16:51,680
properties or methods so you may need

00:16:50,079 --> 00:16:54,000
them

00:16:51,680 --> 00:16:55,440
if your current implementation won't

00:16:54,000 --> 00:16:56,800
work like this

00:16:55,440 --> 00:16:58,480
you haven't filled this stuff you don't

00:16:56,800 --> 00:17:00,639
have knowledge about the stuff what or

00:16:58,480 --> 00:17:02,720
do you need to fill in that stuff

00:17:00,639 --> 00:17:04,000
for now you can add a trace statement

00:17:02,720 --> 00:17:06,319
the api name and the method

00:17:04,000 --> 00:17:08,160
name is not implemented so that when you

00:17:06,319 --> 00:17:10,720
run your application you can see

00:17:08,160 --> 00:17:13,919
that this this chunk was added as a

00:17:10,720 --> 00:17:16,240
stuff but it's not implemented yet

00:17:13,919 --> 00:17:16,959
if you need a reasonable value for now

00:17:16,240 --> 00:17:19,199
to return

00:17:16,959 --> 00:17:21,600
you can return true false zero whatever

00:17:19,199 --> 00:17:24,959
you want

00:17:21,600 --> 00:17:26,880
if the component is used in mxml area

00:17:24,959 --> 00:17:28,559
so you need to add it to mx royal

00:17:26,880 --> 00:17:32,320
manifest

00:17:28,559 --> 00:17:33,280
right if it belongs to the spa component

00:17:32,320 --> 00:17:36,320
you can add it to

00:17:33,280 --> 00:17:38,000
spark royal manifest if it is an event

00:17:36,320 --> 00:17:41,360
or a helper class

00:17:38,000 --> 00:17:43,280
non-visual event so that you can add it

00:17:41,360 --> 00:17:45,679
to mx royal classes or spark royal

00:17:43,280 --> 00:17:45,679
classes

00:17:47,360 --> 00:17:51,679
suppress public warning in as document

00:17:49,760 --> 00:17:55,360
to suppress warnings

00:17:51,679 --> 00:17:57,679
see list event for example

00:17:55,360 --> 00:17:59,360
replace flash apis through royal

00:17:57,679 --> 00:18:02,880
equivalence

00:17:59,360 --> 00:18:05,840
this time i am talking about sdk file

00:18:02,880 --> 00:18:07,919
to make it flash free right we have to

00:18:05,840 --> 00:18:11,440
make remember we have to make

00:18:07,919 --> 00:18:15,840
our port and flash uh code and sdk both

00:18:11,440 --> 00:18:15,840
flash free

00:18:16,160 --> 00:18:20,160
now the part is getting emulation

00:18:17,919 --> 00:18:23,200
component to run

00:18:20,160 --> 00:18:24,160
how we have created uh the emulation at

00:18:23,200 --> 00:18:26,480
this point

00:18:24,160 --> 00:18:28,000
our application should compile

00:18:26,480 --> 00:18:31,200
successfully with the royal

00:18:28,000 --> 00:18:33,520
sdk right

00:18:31,200 --> 00:18:35,360
key principle here is composition

00:18:33,520 --> 00:18:37,679
instead of an inheritance

00:18:35,360 --> 00:18:40,160
royal has basic and express components

00:18:37,679 --> 00:18:43,840
that comprise of top level components

00:18:40,160 --> 00:18:47,520
it is important for ui to subclass

00:18:43,840 --> 00:18:49,679
ui component copying a bits of code from

00:18:47,520 --> 00:18:52,000
basic or express to the right step of

00:18:49,679 --> 00:18:54,720
the emulation component

00:18:52,000 --> 00:18:57,039
copying the css from basic or express

00:18:54,720 --> 00:19:00,080
into mx royal or spark royal

00:18:57,039 --> 00:19:03,520
recompose the basic and express speeds

00:19:00,080 --> 00:19:03,520
onto the emulation strand

00:19:04,480 --> 00:19:13,280
and it will work if you're lucky

00:19:10,559 --> 00:19:15,840
uh but it uh but sometimes it is better

00:19:13,280 --> 00:19:18,000
to subclass basic or express speed in mx

00:19:15,840 --> 00:19:18,480
royal spark royale or an overriding and

00:19:18,000 --> 00:19:21,360
adding

00:19:18,480 --> 00:19:23,280
something of you that you need to

00:19:21,360 --> 00:19:27,120
compile your application like there are

00:19:23,280 --> 00:19:29,440
few things in the beads that

00:19:27,120 --> 00:19:30,240
are in express or basic but you need

00:19:29,440 --> 00:19:33,200
something more

00:19:30,240 --> 00:19:33,919
in the b so you can sub class that main

00:19:33,200 --> 00:19:35,840
class

00:19:33,919 --> 00:19:39,840
and add the additional functionality to

00:19:35,840 --> 00:19:39,840
your own class

00:19:40,240 --> 00:19:46,880
yeah i'm just noting we're at halfway

00:19:43,760 --> 00:19:51,200
in our time okay

00:19:46,880 --> 00:19:54,320
yeah yeah we have faced many

00:19:51,200 --> 00:19:54,960
many bugs even after compilation if you

00:19:54,320 --> 00:19:58,720
are

00:19:54,960 --> 00:19:58,720
uh go to the next slide

00:19:59,840 --> 00:20:03,120
these type of bugs that when drop down

00:20:02,000 --> 00:20:07,440
menu doesn't

00:20:03,120 --> 00:20:10,640
look good it has additional uh like area

00:20:07,440 --> 00:20:11,760
it is flex the car the old one and this

00:20:10,640 --> 00:20:13,520
is the current

00:20:11,760 --> 00:20:15,679
and this is the one that has all that

00:20:13,520 --> 00:20:20,799
blank space at the bottom

00:20:15,679 --> 00:20:20,799
yeah and there was

00:20:23,520 --> 00:20:27,200
yeah i'm just sharing small issues that

00:20:25,600 --> 00:20:28,480
were happening there were a lot of

00:20:27,200 --> 00:20:30,480
issues at that time

00:20:28,480 --> 00:20:31,840
but because the emulation is ready now

00:20:30,480 --> 00:20:35,360
then there are much

00:20:31,840 --> 00:20:38,720
it is much better now then we can use

00:20:35,360 --> 00:20:38,720
the basic components easily

00:20:38,880 --> 00:20:42,000
so here this required highlighting an

00:20:40,880 --> 00:20:44,720
essential field

00:20:42,000 --> 00:20:46,880
but royale wouldn't do it at first and

00:20:44,720 --> 00:20:51,039
you had to go in and figure out how to

00:20:46,880 --> 00:20:53,120
activate that function yeah

00:20:51,039 --> 00:20:54,080
then there was another issue uh yeah

00:20:53,120 --> 00:20:56,720
many were

00:20:54,080 --> 00:21:02,320
overlapping when it should be when we

00:20:56,720 --> 00:21:06,080
click to the next

00:21:02,320 --> 00:21:09,039
yeah okay then and all of those

00:21:06,080 --> 00:21:11,600
um when you can see the issue then it

00:21:09,039 --> 00:21:14,840
would be fairly easy to dig into the api

00:21:11,600 --> 00:21:18,000
and and um figure out where the

00:21:14,840 --> 00:21:19,760
um the control was missing or the or the

00:21:18,000 --> 00:21:20,720
function was missing to close down the

00:21:19,760 --> 00:21:22,960
first

00:21:20,720 --> 00:21:23,760
sub-menu when you open this up yeah

00:21:22,960 --> 00:21:26,320
community is

00:21:23,760 --> 00:21:27,360
actually here to help you even uh you

00:21:26,320 --> 00:21:30,400
can't you can

00:21:27,360 --> 00:21:32,400
put the emulation stubs and people will

00:21:30,400 --> 00:21:33,520
going to fill those stubs so it will be

00:21:32,400 --> 00:21:35,120
easy for you

00:21:33,520 --> 00:21:37,280
and you will compile your application

00:21:35,120 --> 00:21:38,640
with the current state

00:21:37,280 --> 00:21:40,480
in the current state the flex

00:21:38,640 --> 00:21:43,919
application will run on

00:21:40,480 --> 00:21:46,159
with compiler royal compiler and it does

00:21:43,919 --> 00:21:46,159
well

00:21:47,360 --> 00:21:53,679
yeah that's grand yeah okay so

00:21:51,360 --> 00:21:55,039
we got to success what is success for

00:21:53,679 --> 00:21:58,400
this project

00:21:55,039 --> 00:22:01,039
i would like to uh add something more

00:21:58,400 --> 00:22:01,440
for people who have started the project

00:22:01,039 --> 00:22:04,080
that

00:22:01,440 --> 00:22:05,440
go and check royal sdk commits for the

00:22:04,080 --> 00:22:08,720
creation of emulation

00:22:05,440 --> 00:22:10,480
spark mx components in royal sdk since

00:22:08,720 --> 00:22:12,799
march 2018

00:22:10,480 --> 00:22:13,520
it will help you to understand how you

00:22:12,799 --> 00:22:16,799
can create

00:22:13,520 --> 00:22:19,120
stuffs and new emulation from scratch

00:22:16,799 --> 00:22:20,720
i want people to come to this technology

00:22:19,120 --> 00:22:22,799
as they don't need to change much

00:22:20,720 --> 00:22:27,840
in their food like their existing code

00:22:22,799 --> 00:22:27,840
will work

00:22:28,000 --> 00:22:31,840
yeah that's one of the most powerful

00:22:29,679 --> 00:22:34,960
things about um

00:22:31,840 --> 00:22:38,080
uh this path is that you can take

00:22:34,960 --> 00:22:40,559
your flex app and give it new life

00:22:38,080 --> 00:22:41,200
uh now the flash is going away because

00:22:40,559 --> 00:22:43,200
almost

00:22:41,200 --> 00:22:44,960
so much of what you already have yeah

00:22:43,200 --> 00:22:45,919
because the emulation components are

00:22:44,960 --> 00:22:47,919
almost ready

00:22:45,919 --> 00:22:49,840
so they that they can use the those

00:22:47,919 --> 00:22:52,080
emulation components and they

00:22:49,840 --> 00:22:53,679
they don't need to change in mxml area

00:22:52,080 --> 00:22:56,000
at all

00:22:53,679 --> 00:22:58,159
so in action script area they need to

00:22:56,000 --> 00:23:03,280
replace this flash apis

00:22:58,159 --> 00:23:03,280
with the royal royal apis that's it

00:23:06,840 --> 00:23:13,520
hello hello

00:23:10,799 --> 00:23:13,520
can you hear me

00:23:20,840 --> 00:23:23,840
hello

00:23:25,200 --> 00:23:30,000
okay carlos said we can hear okay with

00:23:27,919 --> 00:23:32,240
my little experience i tried to help

00:23:30,000 --> 00:23:34,720
those people who haven't started yet or

00:23:32,240 --> 00:23:37,360
are at very early stage

00:23:34,720 --> 00:23:39,679
so feel free to ask questions at the

00:23:37,360 --> 00:23:44,080
users and developers mailing list

00:23:39,679 --> 00:23:46,880
of royal communities here to help you

00:23:44,080 --> 00:23:47,200
you are exactly three months left in end

00:23:46,880 --> 00:23:50,480
of

00:23:47,200 --> 00:23:52,159
flesh life today is 30 september

00:23:50,480 --> 00:23:54,480
choose the option of migration with

00:23:52,159 --> 00:23:56,960
emulation that is possible to achieve in

00:23:54,480 --> 00:23:56,960
less time

00:23:57,919 --> 00:24:01,440
for the client satisfaction you need

00:23:59,919 --> 00:24:04,960
your application ready by

00:24:01,440 --> 00:24:06,960
start of january 2021

00:24:04,960 --> 00:24:08,720
after that you can make some changes to

00:24:06,960 --> 00:24:10,640
adopt drill components

00:24:08,720 --> 00:24:12,480
as your clients will already be using

00:24:10,640 --> 00:24:14,720
the application you will have time

00:24:12,480 --> 00:24:16,559
for visual adoption depending upon the

00:24:14,720 --> 00:24:19,200
size of your application

00:24:16,559 --> 00:24:20,159
you can do that in 6 to 12 months maybe

00:24:19,200 --> 00:24:23,279
at this point

00:24:20,159 --> 00:24:25,520
of for migration i i mean change because

00:24:23,279 --> 00:24:26,400
you already have migrated to the royal

00:24:25,520 --> 00:24:29,760
structure

00:24:26,400 --> 00:24:31,039
you need to main uh change the mx royal

00:24:29,760 --> 00:24:34,400
spark royal set to

00:24:31,039 --> 00:24:36,320
drill set you might don't need to touch

00:24:34,400 --> 00:24:37,919
actual script part because it is already

00:24:36,320 --> 00:24:40,720
migrated in royal

00:24:37,919 --> 00:24:43,279
maybe few changes are required you have

00:24:40,720 --> 00:24:43,520
to change an mxml area like components

00:24:43,279 --> 00:24:46,559
in

00:24:43,520 --> 00:24:50,159
mx royal mx button

00:24:46,559 --> 00:24:52,320
in jewel they are the j button

00:24:50,159 --> 00:24:54,400
so uh some prompt properties in mx

00:24:52,320 --> 00:24:59,279
button exist doesn't exist in drill

00:24:54,400 --> 00:24:59,279
you can achieve them by adding beads

00:24:59,360 --> 00:25:02,640
say more about beads

00:25:03,520 --> 00:25:10,159
beads are actually functionalities so

00:25:06,880 --> 00:25:13,919
take it take an example of a train

00:25:10,159 --> 00:25:16,240
like the engine is a strain that ap

00:25:13,919 --> 00:25:17,360
every api had and the cars are like

00:25:16,240 --> 00:25:19,520
beats

00:25:17,360 --> 00:25:21,120
so whichever car you require you can

00:25:19,520 --> 00:25:23,919
attach with your beat

00:25:21,120 --> 00:25:23,919
and you can use it

00:25:24,159 --> 00:25:30,720
that is good so the uh the principle

00:25:27,279 --> 00:25:33,679
of the of the beads is that

00:25:30,720 --> 00:25:34,799
a component an instance of a component

00:25:33,679 --> 00:25:37,840
doesn't have

00:25:34,799 --> 00:25:38,799
have to have all the code to do all the

00:25:37,840 --> 00:25:40,880
things

00:25:38,799 --> 00:25:43,279
that every instance of that component

00:25:40,880 --> 00:25:46,400
might do

00:25:43,279 --> 00:25:49,919
if this if this one instance of this

00:25:46,400 --> 00:25:53,840
text entry field has to support

00:25:49,919 --> 00:25:57,120
password entry it only needs the bead

00:25:53,840 --> 00:25:59,039
that lets it do that right

00:25:57,120 --> 00:26:01,120
if right because the password field

00:25:59,039 --> 00:26:01,840
might be on the login page when you are

00:26:01,120 --> 00:26:05,039
logging in

00:26:01,840 --> 00:26:08,159
uh you have username and password so

00:26:05,039 --> 00:26:11,039
you do not require that uh functionality

00:26:08,159 --> 00:26:11,679
on every text field right right we don't

00:26:11,039 --> 00:26:14,320
only need

00:26:11,679 --> 00:26:15,760
it there so you can add that beat at

00:26:14,320 --> 00:26:18,159
this point

00:26:15,760 --> 00:26:19,440
in the code and it will work and the

00:26:18,159 --> 00:26:22,080
benefit one of them

00:26:19,440 --> 00:26:23,600
is one of the benefits of that is that

00:26:22,080 --> 00:26:27,440
you don't have this great big

00:26:23,600 --> 00:26:29,679
lump of unused uh code

00:26:27,440 --> 00:26:31,120
that you're carrying around in your

00:26:29,679 --> 00:26:33,840
application

00:26:31,120 --> 00:26:34,799
it's only the file that needs the code

00:26:33,840 --> 00:26:36,720
that gets it

00:26:34,799 --> 00:26:38,000
only the only the component that needs

00:26:36,720 --> 00:26:41,360
the code that gets

00:26:38,000 --> 00:26:43,360
that beat yeah

00:26:41,360 --> 00:26:45,520
andrew i want to tell you i haven't used

00:26:43,360 --> 00:26:46,240
any beat in this migration except class

00:26:45,520 --> 00:26:49,120
alias

00:26:46,240 --> 00:26:51,120
yes i i noted that you you went the

00:26:49,120 --> 00:26:53,520
emulation route

00:26:51,120 --> 00:26:55,919
and yeah and that's uh and so you

00:26:53,520 --> 00:26:58,320
emulated everything that you did

00:26:55,919 --> 00:27:00,320
and you got the benefit of a running

00:26:58,320 --> 00:27:03,760
application

00:27:00,320 --> 00:27:05,120
um you did not get the benefit of a much

00:27:03,760 --> 00:27:07,039
smaller code

00:27:05,120 --> 00:27:08,480
footprint that would be the other option

00:27:07,039 --> 00:27:12,080
of going to

00:27:08,480 --> 00:27:15,440
going to strands and beads

00:27:12,080 --> 00:27:16,400
yeah but uh for me for the new users i

00:27:15,440 --> 00:27:19,520
would suggest them

00:27:16,400 --> 00:27:20,399
that they should start with drill right

00:27:19,520 --> 00:27:23,039
because their

00:27:20,399 --> 00:27:24,399
components are more beautiful but for

00:27:23,039 --> 00:27:27,039
the

00:27:24,399 --> 00:27:27,679
migration like uh because the time is

00:27:27,039 --> 00:27:30,799
short

00:27:27,679 --> 00:27:35,039
only three months are left right so

00:27:30,799 --> 00:27:35,039
at this point we have about 10

00:27:35,440 --> 00:27:40,720
okay so we should go for this option

00:27:38,640 --> 00:27:42,640
right for the emulation option because

00:27:40,720 --> 00:27:43,440
the client may need the application

00:27:42,640 --> 00:27:46,960
ready by

00:27:43,440 --> 00:27:50,880
first of january yes that is

00:27:46,960 --> 00:27:53,279
quick option than the other one yeah

00:27:50,880 --> 00:27:55,279
this is my opinion maybe and wrong well

00:27:53,279 --> 00:27:57,279
it's based on your experience also

00:27:55,279 --> 00:28:00,320
i would think all i would think mean

00:27:57,279 --> 00:28:02,480
that if you were starting

00:28:00,320 --> 00:28:04,399
from nothing to build an application of

00:28:02,480 --> 00:28:07,360
course you could not emulate anything

00:28:04,399 --> 00:28:09,360
but that's where our components and sets

00:28:07,360 --> 00:28:12,320
would be very valuable

00:28:09,360 --> 00:28:14,000
um later today actually uh carlos is

00:28:12,320 --> 00:28:15,200
going to be talking about that what if

00:28:14,000 --> 00:28:18,320
you start from a blank

00:28:15,200 --> 00:28:20,080
file and want to build an application

00:28:18,320 --> 00:28:22,080
in this case when you're moving from an

00:28:20,080 --> 00:28:25,600
existing thing

00:28:22,080 --> 00:28:27,360
in flex to an application in royale

00:28:25,600 --> 00:28:29,520
and you want to bring along all the

00:28:27,360 --> 00:28:32,720
developers who have worked on

00:28:29,520 --> 00:28:34,480
the flex application well you might as

00:28:32,720 --> 00:28:36,720
well emulate what they're familiar with

00:28:34,480 --> 00:28:39,760
working on

00:28:36,720 --> 00:28:41,919
so yeah see like we have we had

00:28:39,760 --> 00:28:43,600
10 developers they were working for 13

00:28:41,919 --> 00:28:46,240
years and we were just two

00:28:43,600 --> 00:28:46,960
we have emulated the application in two

00:28:46,240 --> 00:28:51,919
years

00:28:46,960 --> 00:28:52,640
yes so uh it was a financial erp system

00:28:51,919 --> 00:28:54,640
actually

00:28:52,640 --> 00:28:56,799
it has multiple modules accounts

00:28:54,640 --> 00:28:59,200
receivable account table receivable

00:28:56,799 --> 00:28:59,919
feasibility purchase inventory and much

00:28:59,200 --> 00:29:02,000
more

00:28:59,919 --> 00:29:03,600
yes so when we can migrate this

00:29:02,000 --> 00:29:07,679
application every application

00:29:03,600 --> 00:29:10,000
can be migrated by emulation yes

00:29:07,679 --> 00:29:10,960
yeah and it works it works solidly and

00:29:10,000 --> 00:29:13,360
as far as you

00:29:10,960 --> 00:29:15,840
hear from that company people are

00:29:13,360 --> 00:29:18,240
content

00:29:15,840 --> 00:29:21,360
yeah well that's pretty good that i

00:29:18,240 --> 00:29:21,360
count that as success

00:29:24,080 --> 00:29:28,320
so you want to do you want to speak

00:29:26,399 --> 00:29:31,760
about the people who uh

00:29:28,320 --> 00:29:32,799
who got us here yeah yeah my manager at

00:29:31,760 --> 00:29:36,320
x company

00:29:32,799 --> 00:29:40,080
uh who has provided me this opportunity

00:29:36,320 --> 00:29:42,080
uh take my name uh like he said that

00:29:40,080 --> 00:29:43,200
you are the person who is going to do

00:29:42,080 --> 00:29:45,279
this project

00:29:43,200 --> 00:29:46,960
so i want to thank him and alex who has

00:29:45,279 --> 00:29:49,039
supported a lot

00:29:46,960 --> 00:29:51,120
in the with the immolation components i

00:29:49,039 --> 00:29:53,039
didn't i used to ask

00:29:51,120 --> 00:29:55,039
blunt questions if you will see you will

00:29:53,039 --> 00:29:57,440
laugh at me

00:29:55,039 --> 00:29:58,480
like i because there was no emulation

00:29:57,440 --> 00:30:01,600
available there was

00:29:58,480 --> 00:30:03,120
nothing at this stage at that stage so i

00:30:01,600 --> 00:30:05,200
used to ask like

00:30:03,120 --> 00:30:07,039
how i can do this how i can do this how

00:30:05,200 --> 00:30:08,320
i can do this and they used to reply

00:30:07,039 --> 00:30:11,360
probably this will help

00:30:08,320 --> 00:30:14,799
the newcomers to uh

00:30:11,360 --> 00:30:16,640
uh migrate their application and the

00:30:14,799 --> 00:30:18,080
rest of the community who has devoted

00:30:16,640 --> 00:30:21,200
their devoted

00:30:18,080 --> 00:30:24,240
hours in this migration success

00:30:21,200 --> 00:30:26,159
and my family members my aunt

00:30:24,240 --> 00:30:27,919
and my father my mother my husband my

00:30:26,159 --> 00:30:30,799
kids my sisters and my brothers

00:30:27,919 --> 00:30:31,360
everyone in my family i want to thank

00:30:30,799 --> 00:30:35,360
them

00:30:31,360 --> 00:30:37,600
yeah i wanted to say about the royal

00:30:35,360 --> 00:30:38,640
developer community that every one of us

00:30:37,600 --> 00:30:42,080
was a beginner

00:30:38,640 --> 00:30:43,679
with royale yeah because it's it's a

00:30:42,080 --> 00:30:46,720
young

00:30:43,679 --> 00:30:47,440
a young project um and every one of us

00:30:46,720 --> 00:30:50,159
had to ask

00:30:47,440 --> 00:30:52,159
questions almost embarrassed say i i

00:30:50,159 --> 00:30:53,279
don't even know how to do this piece and

00:30:52,159 --> 00:30:55,919
someone says

00:30:53,279 --> 00:30:57,360
this is how you do it and then you know

00:30:55,919 --> 00:30:58,960
when you're happy

00:30:57,360 --> 00:31:00,559
my experience anyhow is then you're

00:30:58,960 --> 00:31:02,080
happy to share it with other people

00:31:00,559 --> 00:31:05,360
coming into the community

00:31:02,080 --> 00:31:08,960
or starting to lead to you

00:31:05,360 --> 00:31:08,960
uh the sdk

00:31:09,519 --> 00:31:14,320
yeah i see people they don't they feel

00:31:15,840 --> 00:31:22,159
i see people feel sleepy shy about

00:31:19,919 --> 00:31:24,240
asking questions but i used to ask

00:31:22,159 --> 00:31:26,159
questions like

00:31:24,240 --> 00:31:27,679
one after another one after another when

00:31:26,159 --> 00:31:30,840
i received an email i

00:31:27,679 --> 00:31:33,039
asked another question and another

00:31:30,840 --> 00:31:36,320
question

00:31:33,039 --> 00:31:38,559
yeah the the trick for the community

00:31:36,320 --> 00:31:39,440
is to catch those really important

00:31:38,559 --> 00:31:42,960
questions

00:31:39,440 --> 00:31:44,880
and and document them so the next new

00:31:42,960 --> 00:31:45,600
person doesn't have to ask the same

00:31:44,880 --> 00:31:48,799
question

00:31:45,600 --> 00:31:53,519
again and again in the same way

00:31:48,799 --> 00:31:56,960
you did a huge job of

00:31:53,519 --> 00:32:00,240
creating emulations and

00:31:56,960 --> 00:32:01,120
replicating apis and the next person

00:32:00,240 --> 00:32:03,120
coming in

00:32:01,120 --> 00:32:05,519
can use all that stuff that you have

00:32:03,120 --> 00:32:06,159
created they don't have to start from

00:32:05,519 --> 00:32:08,000
the same

00:32:06,159 --> 00:32:10,159
starting place yeah many people are

00:32:08,000 --> 00:32:13,919
adding emulation to the sdk and

00:32:10,159 --> 00:32:14,799
now probably i think almost all apis are

00:32:13,919 --> 00:32:17,440
added to the

00:32:14,799 --> 00:32:18,240
sdk so when the newcomer will come they

00:32:17,440 --> 00:32:20,159
might

00:32:18,240 --> 00:32:21,600
don't need to do anything like they can

00:32:20,159 --> 00:32:24,320
start their project

00:32:21,600 --> 00:32:26,399
and compile with it with royal or maybe

00:32:24,320 --> 00:32:29,679
need to add few properties or methods

00:32:26,399 --> 00:32:34,399
in the sdk

00:32:29,679 --> 00:32:36,399
yeah i i hope it is that effortless i'm

00:32:34,399 --> 00:32:38,080
it may be that i'm just not the smartest

00:32:36,399 --> 00:32:40,080
programmer but i always find

00:32:38,080 --> 00:32:42,640
a bit of a struggle but then i always

00:32:40,080 --> 00:32:45,760
find that the community helps me out

00:32:42,640 --> 00:32:49,039
to get me past struggle

00:32:45,760 --> 00:32:51,360
if anybody watching has a question

00:32:49,039 --> 00:32:54,080
we have a couple of minutes and if you

00:32:51,360 --> 00:32:56,880
can type them into the chat screen

00:32:54,080 --> 00:32:57,519
we'll do our best to answer them but

00:32:56,880 --> 00:32:59,360
while i'm

00:32:57,519 --> 00:33:01,120
waiting to see if any questions occur i

00:32:59,360 --> 00:33:05,200
wanted to say that

00:33:01,120 --> 00:33:09,200
to um

00:33:05,200 --> 00:33:10,000
to the the the best way and the constant

00:33:09,200 --> 00:33:13,039
way to be able

00:33:10,000 --> 00:33:16,480
to get answers is to go to

00:33:13,039 --> 00:33:19,679
the apache royale website

00:33:16,480 --> 00:33:23,360
or join the mailing list

00:33:19,679 --> 00:33:26,960
for um there's a question

00:33:23,360 --> 00:33:28,880
and uh yep there's a question

00:33:26,960 --> 00:33:30,880
go ahead can emulation components be

00:33:28,880 --> 00:33:33,120
used at the same time

00:33:30,880 --> 00:33:34,480
as strands yeah we can use them because

00:33:33,120 --> 00:33:36,399
we have used uh

00:33:34,480 --> 00:33:38,880
glass elia speed i haven't used much

00:33:36,399 --> 00:33:41,679
speeds in the

00:33:38,880 --> 00:33:44,960
application but if we can use once and

00:33:41,679 --> 00:33:44,960
then we can use others too

00:33:46,799 --> 00:33:53,200
i have worked on gel sets also so

00:33:50,320 --> 00:33:54,559
i have seen a lot of uh strain and beads

00:33:53,200 --> 00:33:57,840
like beads there

00:33:54,559 --> 00:34:00,080
but i think we can use all of them with

00:33:57,840 --> 00:34:00,080
the

00:34:01,679 --> 00:34:06,640
emulation yes it would be a matter and

00:34:04,640 --> 00:34:10,159
really you could take an emulated

00:34:06,640 --> 00:34:10,960
component and add a um the strands and

00:34:10,159 --> 00:34:14,079
beads

00:34:10,960 --> 00:34:16,800
uh section and add and

00:34:14,079 --> 00:34:18,800
other beads to that that the original

00:34:16,800 --> 00:34:21,599
thing in flex didn't

00:34:18,800 --> 00:34:22,320
did not have yeah because these beads

00:34:21,599 --> 00:34:26,079
are

00:34:22,320 --> 00:34:27,839
available in default.css of the mx royal

00:34:26,079 --> 00:34:30,720
and spark royal project

00:34:27,839 --> 00:34:32,159
so i think they should be uh used they

00:34:30,720 --> 00:34:36,960
could be used with the

00:34:32,159 --> 00:34:36,960
mx and royal emulation set

00:34:46,839 --> 00:34:49,839
yep

00:34:51,280 --> 00:34:54,399
the other thing i was going to say is

00:34:52,720 --> 00:34:57,599
that the place where

00:34:54,399 --> 00:35:00,000
all these we too were asking all those

00:34:57,599 --> 00:35:03,200
questions was of course on the user's

00:35:00,000 --> 00:35:05,599
mailing list for apache royale

00:35:03,200 --> 00:35:06,320
and that's a great place to post

00:35:05,599 --> 00:35:09,200
questions

00:35:06,320 --> 00:35:10,880
the community usually comes back very

00:35:09,200 --> 00:35:14,480
quickly with a response or an

00:35:10,880 --> 00:35:15,839
or a clarification uh often i see

00:35:14,480 --> 00:35:17,440
questions that are asked and then

00:35:15,839 --> 00:35:19,680
someone in the community will say

00:35:17,440 --> 00:35:21,839
well can you can you show us a bit of

00:35:19,680 --> 00:35:23,599
your code or can you show us the error

00:35:21,839 --> 00:35:25,440
message that you ran into

00:35:23,599 --> 00:35:27,599
and that will help us give the the

00:35:25,440 --> 00:35:28,839
specific answer yeah there are examples

00:35:27,599 --> 00:35:31,839
available in this

00:35:28,839 --> 00:35:33,359
sdk royal sdks so that they can pick

00:35:31,839 --> 00:35:36,240
those examples and add

00:35:33,359 --> 00:35:36,800
only the stuff they are have question

00:35:36,240 --> 00:35:39,280
about

00:35:36,800 --> 00:35:42,839
so that they can compile it and send it

00:35:39,280 --> 00:35:44,400
to the community so that they can reply

00:35:42,839 --> 00:35:47,680
soon

00:35:44,400 --> 00:35:48,640
yeah so praveen is asking is there an

00:35:47,680 --> 00:35:52,000
emulation

00:35:48,640 --> 00:35:52,800
sample in git emulation uh mx royal in

00:35:52,000 --> 00:35:56,480
examples

00:35:52,800 --> 00:36:00,079
are the uh emulation sample on git

00:35:56,480 --> 00:36:03,440
in the sdk royale sdk mx royale is a

00:36:00,079 --> 00:36:08,000
folder in the examples examples folder

00:36:03,440 --> 00:36:08,000
so it has all emulation sample

00:36:08,400 --> 00:36:12,000
yeah and it's it's sort of fun to

00:36:10,800 --> 00:36:15,359
compare those

00:36:12,000 --> 00:36:18,720
to the files that are being emulated in

00:36:15,359 --> 00:36:18,720
in the flex sdk

00:36:21,119 --> 00:36:25,920
carlos has shared the link there it is

00:36:29,359 --> 00:36:32,880
that's full of emulation

00:36:37,280 --> 00:36:44,720
oh yes thank you carlos tomorrow

00:36:41,119 --> 00:36:47,839
uh carlos is giving a presentation on

00:36:44,720 --> 00:36:49,280
a um oh i'm sorry that i see what you're

00:36:47,839 --> 00:36:50,480
saying well i'll say this first and then

00:36:49,280 --> 00:36:53,520
the second thing

00:36:50,480 --> 00:36:58,720
that that set of examples includes the

00:36:53,520 --> 00:37:01,119
tour de flex set of component examples

00:36:58,720 --> 00:37:02,800
that was so popular in flex and carlos

00:37:01,119 --> 00:37:06,320
is doing a presentation

00:37:02,800 --> 00:37:08,320
tomorrow on tour de royale

00:37:06,320 --> 00:37:10,000
and toward the jewel rather deter the

00:37:08,320 --> 00:37:12,640
jewel which is

00:37:10,000 --> 00:37:13,760
an exam a demonstration of how you can

00:37:12,640 --> 00:37:17,119
use

00:37:13,760 --> 00:37:20,640
all sorts of components in the jewel

00:37:17,119 --> 00:37:21,440
component set in royale and this means

00:37:20,640 --> 00:37:24,640
you can

00:37:21,440 --> 00:37:26,240
see the component in action then take a

00:37:24,640 --> 00:37:28,480
look at the code

00:37:26,240 --> 00:37:31,119
and then actually make use of the code

00:37:28,480 --> 00:37:33,920
in your own application if you want to

00:37:31,119 --> 00:37:35,280
yeah i would see if look and so for

00:37:33,920 --> 00:37:37,119
someone

00:37:35,280 --> 00:37:38,800
someone starting not with an existing

00:37:37,119 --> 00:37:40,240
application i would say that's the way

00:37:38,800 --> 00:37:42,000
to go

00:37:40,240 --> 00:37:44,000
because you won't be emulating stuff if

00:37:42,000 --> 00:37:45,839
you're if you have a blank file

00:37:44,000 --> 00:37:47,760
but there you have all those examples

00:37:45,839 --> 00:37:49,839
and you can basically

00:37:47,760 --> 00:37:51,440
stick the various examples together and

00:37:49,839 --> 00:37:53,839
make something really interesting very

00:37:51,440 --> 00:37:53,839
quickly

00:37:58,000 --> 00:38:01,760
so praveen says alina you said that most

00:38:00,079 --> 00:38:04,240
changes are in

00:38:01,760 --> 00:38:05,280
actionscript files only and mxml doesn't

00:38:04,240 --> 00:38:08,079
change much

00:38:05,280 --> 00:38:09,200
this business emulate when you integrate

00:38:08,079 --> 00:38:12,320
an api your

00:38:09,200 --> 00:38:15,280
properties will be compiled as it is

00:38:12,320 --> 00:38:17,200
in the mxml area but if you are using a

00:38:15,280 --> 00:38:20,800
flash api directly from

00:38:17,200 --> 00:38:23,200
a flesh call directly from your source

00:38:20,800 --> 00:38:25,520
in action script block so you need to

00:38:23,200 --> 00:38:29,040
replace it with the emulation one

00:38:25,520 --> 00:38:32,640
or with the royal alternative

00:38:29,040 --> 00:38:34,560
so i have shared some we have come

00:38:32,640 --> 00:38:35,760
we we have come to the end of our time

00:38:34,560 --> 00:38:39,280
i'm afraid

00:38:35,760 --> 00:38:40,800
and we we we have to stop

00:38:39,280 --> 00:38:44,079
because we have to make room for the

00:38:40,800 --> 00:38:47,119
next uh thing that's going on in the

00:38:44,079 --> 00:38:48,720
um in the convention thank you very much

00:38:47,119 --> 00:38:50,880
for sharing your experience i'm sorry

00:38:48,720 --> 00:38:54,079
you had a tough time on the way in

00:38:50,880 --> 00:38:58,240
and i'm glad you came to my rescue

00:38:54,079 --> 00:38:58,240
no problem thank you very much and sorry

00:38:59,520 --> 00:39:03,119
and thank you to all our audience and

00:39:01,599 --> 00:39:04,400
we'll see you at the next thing thank

00:39:03,119 --> 00:39:15,200
you

00:39:04,400 --> 00:39:17,280
bye bye

00:39:15,200 --> 00:39:17,280

YouTube URL: https://www.youtube.com/watch?v=O5WJ6nRPX40


