Title: Apache Bigtop, a crash course in deploying a Hadoop bigdata - Roman Shaposhnik, Konstantin Boudnik
Publication date: 2014-04-25
Playlist: ApacheCon North America 2014
Description: 
	ApacheCon North America 2014
Captions: 
	00:00:00,000 --> 00:00:05,660
so thinks about everyone for coming and

00:00:02,429 --> 00:00:09,030
I'm a I apologize for my voice a just

00:00:05,660 --> 00:00:11,010
coming back from Amsterdam hadoop summit

00:00:09,030 --> 00:00:14,960
and I was too excited apparently there's

00:00:11,010 --> 00:00:18,029
about to lose it I'll try to not any way

00:00:14,960 --> 00:00:20,189
we want to talk about the sexiest actual

00:00:18,029 --> 00:00:22,920
project in the Apache ecosystem and I'm

00:00:20,189 --> 00:00:25,920
surprised that you know people are not

00:00:22,920 --> 00:00:27,750
hanging on the walls literally I would

00:00:25,920 --> 00:00:29,820
like to to start with I would like to

00:00:27,750 --> 00:00:35,239
invite my colleague and good friend

00:00:29,820 --> 00:00:40,200
Roman to here just for a minute maybe

00:00:35,239 --> 00:00:42,960
you don't need more I guess hey ya

00:00:40,200 --> 00:00:46,559
rahman and i we we started big dog back

00:00:42,960 --> 00:00:50,489
in clogger 2011 2010 right and since

00:00:46,559 --> 00:00:53,399
then it become the GOP project and this

00:00:50,489 --> 00:00:55,170
is the framework which is used by every

00:00:53,399 --> 00:00:56,520
single commercial value vendor of the

00:00:55,170 --> 00:00:58,620
Hadoop distribution actually in the

00:00:56,520 --> 00:01:00,030
world today even my park we use anything

00:00:58,620 --> 00:01:03,989
but I don't know why you invited me here

00:01:00,030 --> 00:01:06,840
no no no no and actually I think I have

00:01:03,989 --> 00:01:08,580
to I have to take my my yeah you can my

00:01:06,840 --> 00:01:11,450
head because I'm just duel now right yes

00:01:08,580 --> 00:01:14,430
exactly services so we recently had a a

00:01:11,450 --> 00:01:16,500
change of the leadership at the big top

00:01:14,430 --> 00:01:19,380
project so i used to be a VPO of big top

00:01:16,500 --> 00:01:21,000
and that's still how my profile for the

00:01:19,380 --> 00:01:23,580
apache icon looks like i have to update

00:01:21,000 --> 00:01:26,640
it now course is now a vp of big top and

00:01:23,580 --> 00:01:29,280
uh well best of luck to you guys the

00:01:26,640 --> 00:01:31,680
unity is like it's you know it's all

00:01:29,280 --> 00:01:34,140
yours now thanks way so now give me idea

00:01:31,680 --> 00:01:36,060
pretty hurts okay but i'll come back at

00:01:34,140 --> 00:01:38,430
the second time they look okay cool

00:01:36,060 --> 00:01:40,020
anyway um i thought i'd like to actually

00:01:38,430 --> 00:01:42,030
talk a little bit about big top and tell

00:01:40,020 --> 00:01:48,149
how how cool the project and why it's

00:01:42,030 --> 00:01:50,310
actually cool so um Hadoop ecosystem is

00:01:48,149 --> 00:01:52,770
is incredibly complex and actually for

00:01:50,310 --> 00:01:59,399
those who doesn't recognize this geeky

00:01:52,770 --> 00:02:01,439
stuff this is the world of the Rings did

00:01:59,399 --> 00:02:04,460
the Lord of the Rings her eating so

00:02:01,439 --> 00:02:08,340
there is a t7 nine and one green thread

00:02:04,460 --> 00:02:10,440
but anyway so Hadoop Hadoop is very very

00:02:08,340 --> 00:02:12,930
complex Hadoop ecosystem is very complex

00:02:10,440 --> 00:02:13,330
I think right now we can count about 17

00:02:12,930 --> 00:02:16,690
to

00:02:13,330 --> 00:02:20,980
19 projects all together in the

00:02:16,690 --> 00:02:23,320
ecosystem and communities are relentless

00:02:20,980 --> 00:02:25,420
actually in producing new versions patch

00:02:23,320 --> 00:02:29,140
in fixing bugs you know that kind of

00:02:25,420 --> 00:02:32,290
stuff and are you always can actually

00:02:29,140 --> 00:02:34,480
build totally your own thing with

00:02:32,290 --> 00:02:37,200
official you know partially accepted

00:02:34,480 --> 00:02:40,450
patches and many people actually do this

00:02:37,200 --> 00:02:44,530
so it's very hard to navigate essential

00:02:40,450 --> 00:02:47,680
right and ah anyway we'll talk about

00:02:44,530 --> 00:02:53,610
this so and the the worst part actually

00:02:47,680 --> 00:02:55,510
of this is this is relatively relatively

00:02:53,610 --> 00:02:59,080
up-to-date picture of the Hadoop

00:02:55,510 --> 00:03:02,680
genealogy tree right so I'm I apologized

00:02:59,080 --> 00:03:04,900
that it's not it's not very clear

00:03:02,680 --> 00:03:06,940
because a lot of small things and all

00:03:04,900 --> 00:03:09,370
and sexual doesn't show the whole Hadoop

00:03:06,940 --> 00:03:13,709
tree so I I cut it off somewhere around

00:03:09,370 --> 00:03:15,910
Hadoop 18 which was the the official

00:03:13,709 --> 00:03:18,820
essentially main line of the Hadoop back

00:03:15,910 --> 00:03:21,610
in two thousand nine whatever it is and

00:03:18,820 --> 00:03:23,850
so and since then did you know did this

00:03:21,610 --> 00:03:26,470
this whole thing actually exploded right

00:03:23,850 --> 00:03:29,080
we have companies coming in and doing

00:03:26,470 --> 00:03:31,450
crazy things with with patches and

00:03:29,080 --> 00:03:35,260
producing their own you know subversions

00:03:31,450 --> 00:03:37,209
of the features and binary compatible on

00:03:35,260 --> 00:03:39,489
compatible versions and and all they all

00:03:37,209 --> 00:03:41,170
that so you probably can't imagine how

00:03:39,489 --> 00:03:44,769
hard is that just you you know go

00:03:41,170 --> 00:03:47,380
through the Hadoop process of building

00:03:44,769 --> 00:03:49,300
releases and releasing it and making

00:03:47,380 --> 00:03:51,790
sure that you know you produce and

00:03:49,300 --> 00:03:54,100
working stuff right just clip itself now

00:03:51,790 --> 00:03:56,350
think about this group is not just HDFS

00:03:54,100 --> 00:03:59,590
plus MapReduce that it used to be before

00:03:56,350 --> 00:04:02,890
right so Hadoop is essentially is a huge

00:03:59,590 --> 00:04:05,200
balloon of you know as I said 1917

00:04:02,890 --> 00:04:08,670
tonight and components as as far as they

00:04:05,200 --> 00:04:11,140
remember and that there's HBS there's a

00:04:08,670 --> 00:04:14,610
sequel front ends of some kind read so

00:04:11,140 --> 00:04:17,620
hives and free of Phoenix for 4h base

00:04:14,610 --> 00:04:19,359
there is an in-memory processing spark

00:04:17,620 --> 00:04:20,919
and we just got recently another guys

00:04:19,359 --> 00:04:23,370
coming in and saying like hey guys we

00:04:20,919 --> 00:04:27,190
want to be a part of part of this thing

00:04:23,370 --> 00:04:30,520
storage cache and in HDFS storage cache

00:04:27,190 --> 00:04:32,290
and that tachyon project is sort of

00:04:30,520 --> 00:04:33,930
trying to it now right there's

00:04:32,290 --> 00:04:36,190
connectors there's dsl languages

00:04:33,930 --> 00:04:38,980
basically the bunch of crazy stuff and

00:04:36,190 --> 00:04:40,540
some of them are relatively simple so

00:04:38,980 --> 00:04:43,660
Phoenix for instance is a relatively you

00:04:40,540 --> 00:04:45,580
know contain component whereas HBase for

00:04:43,660 --> 00:04:47,860
instance is a monster on its own which

00:04:45,580 --> 00:04:50,740
has three hundred lines of development

00:04:47,860 --> 00:04:54,430
bunch of compatible incompatible history

00:04:50,740 --> 00:04:56,170
inside of it it might work with some

00:04:54,430 --> 00:04:59,080
versions of the Hadoop some might not

00:04:56,170 --> 00:05:02,560
work with some of some others and if you

00:04:59,080 --> 00:05:04,180
look at for instance HP is profiled you

00:05:02,560 --> 00:05:09,160
to build this thing right so this is

00:05:04,180 --> 00:05:10,930
this gigantic set of profiles and maven

00:05:09,160 --> 00:05:14,080
and you know just to be compliant with a

00:05:10,930 --> 00:05:17,230
bunch of version Soviet of Hadoop HDFS

00:05:14,080 --> 00:05:20,490
so it's incredibly hard to manage it

00:05:17,230 --> 00:05:22,660
right like like enormously hard and

00:05:20,490 --> 00:05:24,730
fortunately enough and then yeah that's

00:05:22,660 --> 00:05:26,770
I'm not picking up on pivot alright so

00:05:24,730 --> 00:05:29,170
they good guys and they bribe me with

00:05:26,770 --> 00:05:31,870
Kishore today so but that's that's

00:05:29,170 --> 00:05:36,100
essentially the extreme extreme I guess

00:05:31,870 --> 00:05:37,750
off of complexity rights and and in

00:05:36,100 --> 00:05:40,300
great part where it's a great part is

00:05:37,750 --> 00:05:43,570
just could do beats itself right so

00:05:40,300 --> 00:05:45,190
people tend to to pile tons of their own

00:05:43,570 --> 00:05:47,380
proprietary stuff not necessarily the

00:05:45,190 --> 00:05:50,890
proprietary stuff but tons of stuff on

00:05:47,380 --> 00:05:52,360
the de facto open source tag to meet the

00:05:50,890 --> 00:05:54,040
needs of their customers and and you

00:05:52,360 --> 00:05:55,480
know that this crazy sir and somehow we

00:05:54,040 --> 00:05:57,160
need to actually make sure that that all

00:05:55,480 --> 00:05:58,750
works right and when three months down

00:05:57,160 --> 00:06:00,640
the road you actually need to update the

00:05:58,750 --> 00:06:01,690
release the update stuff you need to

00:06:00,640 --> 00:06:03,640
make sure that you didn't break the

00:06:01,690 --> 00:06:05,080
previous stuff right so you need to do

00:06:03,640 --> 00:06:07,720
the integration testing you need to do

00:06:05,080 --> 00:06:09,580
package testing that you know make sure

00:06:07,720 --> 00:06:11,740
they're great packages they debate the

00:06:09,580 --> 00:06:15,550
package upgrades would work properly and

00:06:11,740 --> 00:06:17,370
you know all the can occur anyway so I

00:06:15,550 --> 00:06:19,720
want to bring them all right so I

00:06:17,370 --> 00:06:21,490
actually wanted to say one to rule them

00:06:19,720 --> 00:06:25,120
all but it wouldn't be exactly true

00:06:21,490 --> 00:06:26,980
that's my ex page expansionist vision of

00:06:25,120 --> 00:06:31,720
the world restaurant Russian says you

00:06:26,980 --> 00:06:34,150
know we wear next things right so um ok

00:06:31,720 --> 00:06:35,770
so the beauty of big top so we'll we'll

00:06:34,150 --> 00:06:38,350
see the damn a little bit later but

00:06:35,770 --> 00:06:40,420
essentially the idea about the whole big

00:06:38,350 --> 00:06:42,130
top is that you can

00:06:40,420 --> 00:06:45,820
find bill of materials right and Bill of

00:06:42,130 --> 00:06:47,350
Materials essentially look like a list

00:06:45,820 --> 00:06:48,670
of components with their versions right

00:06:47,350 --> 00:06:51,100
i mean it's a little bit more complex

00:06:48,670 --> 00:06:53,650
than that but you know for practical

00:06:51,100 --> 00:06:55,690
purpose so which you can do when when

00:06:53,650 --> 00:06:57,250
you need to defer work on your stack

00:06:55,690 --> 00:06:59,200
right so you define the bomb first right

00:06:57,250 --> 00:07:03,970
bill of materials first you say i want

00:06:59,200 --> 00:07:07,750
to hadoop version 2.0 point six I 1h

00:07:03,970 --> 00:07:10,990
base version 0 96 I want to have 0 12 I

00:07:07,750 --> 00:07:14,320
wanna this of that version spark version

00:07:10,990 --> 00:07:17,190
09 excuse me and then all that kind of

00:07:14,320 --> 00:07:20,890
crap so you define all your body things

00:07:17,190 --> 00:07:24,000
then fortunately again in standard big

00:07:20,890 --> 00:07:26,680
top we do have 44 bunch of the

00:07:24,000 --> 00:07:31,200
components that I just mentioned we have

00:07:26,680 --> 00:07:34,060
a set of the codes i would say that

00:07:31,200 --> 00:07:37,090
allow you to produce standard UNIX

00:07:34,060 --> 00:07:39,370
packaging that allows you to run

00:07:37,090 --> 00:07:41,680
verification on the packages and the

00:07:39,370 --> 00:07:44,860
applications built within the packages

00:07:41,680 --> 00:07:48,820
right and we have a code that allows you

00:07:44,860 --> 00:07:50,590
to actually click all your release build

00:07:48,820 --> 00:07:51,880
process into the traditional continuous

00:07:50,590 --> 00:07:54,460
integration system so you can actually

00:07:51,880 --> 00:07:57,220
have a centralized this board of some

00:07:54,460 --> 00:07:58,870
kind right so if you need to add the new

00:07:57,220 --> 00:08:00,310
component you probably would go and

00:07:58,870 --> 00:08:02,740
start developing the packaging code

00:08:00,310 --> 00:08:04,300
yourself right and tests and via the

00:08:02,740 --> 00:08:05,380
other actually we we get a new

00:08:04,300 --> 00:08:07,420
components all the time so people

00:08:05,380 --> 00:08:09,820
actually going through this process once

00:08:07,420 --> 00:08:12,850
in a while but essentially if you try

00:08:09,820 --> 00:08:15,250
and see just to shape your own stack and

00:08:12,850 --> 00:08:17,350
some sort of some sort of you know form

00:08:15,250 --> 00:08:19,630
like for instance you don't need

00:08:17,350 --> 00:08:22,510
everything that Hadoop ecosystem can

00:08:19,630 --> 00:08:26,530
offer you you only want to etfs and each

00:08:22,510 --> 00:08:28,210
base that's all right so you can totally

00:08:26,530 --> 00:08:31,510
define the very simple bomb with two

00:08:28,210 --> 00:08:33,990
components in it click well not click

00:08:31,510 --> 00:08:36,880
the button the wrong word for unix so

00:08:33,990 --> 00:08:40,120
hit the common life hit the con line

00:08:36,880 --> 00:08:41,770
command in a few minutes later literally

00:08:40,120 --> 00:08:43,279
you will get yourself packages that

00:08:41,770 --> 00:08:45,529
could be installed and

00:08:43,279 --> 00:08:49,100
you know the software would would would

00:08:45,529 --> 00:08:51,410
work essential right and yeah last but

00:08:49,100 --> 00:08:53,180
not least actually we do have as a part

00:08:51,410 --> 00:08:55,699
of the big topic Oh system the set of

00:08:53,180 --> 00:08:58,069
the fully functional deployment recipes

00:08:55,699 --> 00:08:59,449
written puppet so you actually can go to

00:08:58,069 --> 00:09:00,709
the cluster and just deploy you things

00:08:59,449 --> 00:09:02,059
you know just in the proper fashion

00:09:00,709 --> 00:09:03,800
right all configuration files will be

00:09:02,059 --> 00:09:05,240
generated for you and everything so I

00:09:03,800 --> 00:09:07,579
know that you already excited wait a

00:09:05,240 --> 00:09:10,490
little bit i'll show you how it works so

00:09:07,579 --> 00:09:12,680
and you know you deploy that you tested

00:09:10,490 --> 00:09:13,910
it because we have integration tests and

00:09:12,680 --> 00:09:15,800
you might have your own integration

00:09:13,910 --> 00:09:18,680
tests and what's not and you found some

00:09:15,800 --> 00:09:20,600
problems are big deal right so you come

00:09:18,680 --> 00:09:23,990
back you change something in your

00:09:20,600 --> 00:09:25,910
components you hit the build again you

00:09:23,990 --> 00:09:28,850
rebuild the new version of the packages

00:09:25,910 --> 00:09:30,620
you run update or fresh install you got

00:09:28,850 --> 00:09:31,790
your working cluster again and you

00:09:30,620 --> 00:09:37,300
didn't see repeat and rinse and repeat

00:09:31,790 --> 00:09:39,769
until you get actually until you get the

00:09:37,300 --> 00:09:44,389
the result you desire right so this is

00:09:39,769 --> 00:09:49,550
my favorite exploratory elephant so

00:09:44,389 --> 00:09:52,100
anyway so now once we sort of talked a

00:09:49,550 --> 00:09:53,870
little bit about the basics right and

00:09:52,100 --> 00:09:55,220
again I mean it might be it might be a

00:09:53,870 --> 00:09:58,040
little hard to to wrap the head around

00:09:55,220 --> 00:09:59,389
it but we'll go on into the demo and

00:09:58,040 --> 00:10:02,779
we'll we'll talk about this a little bit

00:09:59,389 --> 00:10:05,269
more in details a couple of a couple of

00:10:02,779 --> 00:10:08,779
case studies did real real things right

00:10:05,269 --> 00:10:10,339
so as I mentioned all commercial vendors

00:10:08,779 --> 00:10:12,019
and vendors and actually not commercial

00:10:10,339 --> 00:10:13,610
as well so Apache Apache Hadoop is

00:10:12,019 --> 00:10:15,470
packaged by big top and you can download

00:10:13,610 --> 00:10:17,660
it and it would work like awesomely

00:10:15,470 --> 00:10:20,480
because we have intensive testing

00:10:17,660 --> 00:10:22,939
process in the open Reds we do this like

00:10:20,480 --> 00:10:24,559
every quarter or something but anyway so

00:10:22,939 --> 00:10:26,449
any commercial vendor of the Hindu

00:10:24,559 --> 00:10:29,269
distribution is actually using us big

00:10:26,449 --> 00:10:32,959
top as as a framework to to do the thing

00:10:29,269 --> 00:10:37,100
right so it'll probably doesn't do this

00:10:32,959 --> 00:10:38,809
a memorial so and because we happen to

00:10:37,100 --> 00:10:40,670
work in these companies and again this

00:10:38,809 --> 00:10:42,529
is our bread and butter so we decided to

00:10:40,670 --> 00:10:46,399
talk a little bit about what we've done

00:10:42,529 --> 00:10:50,970
with picked up any past I'll go first

00:10:46,399 --> 00:10:54,300
okay so

00:10:50,970 --> 00:10:56,339
wendys kasur well enjoy the company last

00:10:54,300 --> 00:10:59,509
year at the beginning of last year so we

00:10:56,339 --> 00:11:05,100
decided actually to go forward with

00:10:59,509 --> 00:11:07,019
Hadoop distribution and the reason was

00:11:05,100 --> 00:11:08,220
that we we actually any interests and

00:11:07,019 --> 00:11:10,860
interests and business with billion

00:11:08,220 --> 00:11:12,689
multi active masters distributed systems

00:11:10,860 --> 00:11:14,399
Redford's it's pretty cool so you have

00:11:12,689 --> 00:11:16,439
multiple active named nodes on the HDFS

00:11:14,399 --> 00:11:18,839
for instance right he can kill the

00:11:16,439 --> 00:11:21,120
minority of them and nobody gives crap

00:11:18,839 --> 00:11:23,069
eraser it keeps going but anyway so we

00:11:21,120 --> 00:11:25,290
decided to go forward but we needed we

00:11:23,069 --> 00:11:26,670
needed a vehicle to to actually deliver

00:11:25,290 --> 00:11:29,879
the solution for the market and

00:11:26,670 --> 00:11:32,610
obviously Hadoop open source Apache

00:11:29,879 --> 00:11:36,420
Hadoop was the right choice for it right

00:11:32,610 --> 00:11:39,000
so but market you know market timing was

00:11:36,420 --> 00:11:40,589
pressure was was present us pretty badly

00:11:39,000 --> 00:11:43,410
so we needed actually to do this very

00:11:40,589 --> 00:11:46,980
quickly and I'm telling us this is the

00:11:43,410 --> 00:11:49,829
absolute world record 28 days from the

00:11:46,980 --> 00:11:51,540
start when I started it was the company

00:11:49,829 --> 00:11:54,300
until we actually pushed push the

00:11:51,540 --> 00:11:56,370
commercial district of the Hadoop out 28

00:11:54,300 --> 00:12:02,040
days nobody bitty bit it yet sir okay

00:11:56,370 --> 00:12:04,709
anyway so what if done actually is and

00:12:02,040 --> 00:12:06,209
again just just because Big Top was

00:12:04,709 --> 00:12:08,189
there we were able to make it otherwise

00:12:06,209 --> 00:12:12,300
we would be dead and dead in a water

00:12:08,189 --> 00:12:14,490
bottle so the challenge is the challenge

00:12:12,300 --> 00:12:15,750
is we we have during this this process

00:12:14,490 --> 00:12:16,949
and again I mean the process I just

00:12:15,750 --> 00:12:18,899
describe to you how to build your own

00:12:16,949 --> 00:12:21,720
stack essentially was what we did 20

00:12:18,899 --> 00:12:23,670
Scott but entity colleges are not

00:12:21,720 --> 00:12:26,399
probably the most interesting part of it

00:12:23,670 --> 00:12:29,430
but anyway so the challenge is that that

00:12:26,399 --> 00:12:32,129
were there actually is that we needed a

00:12:29,430 --> 00:12:33,600
repetitive development deployment build

00:12:32,129 --> 00:12:36,180
process right so we can actually make

00:12:33,600 --> 00:12:38,519
sure that the bits we rollin out you

00:12:36,180 --> 00:12:40,410
know full certified fully tested can be

00:12:38,519 --> 00:12:44,699
used by people actually they want you to

00:12:40,410 --> 00:12:46,319
deploy in and work with it we needed to

00:12:44,699 --> 00:12:50,370
make sure that what we deliver is

00:12:46,319 --> 00:12:53,339
exactly the same as open source Apache

00:12:50,370 --> 00:12:55,860
releases right so Hadoop released

00:12:53,339 --> 00:12:58,379
version HBase release version and so on

00:12:55,860 --> 00:12:59,850
so far so it's essentially was not kind

00:12:58,379 --> 00:13:01,769
of our commercial offering but just

00:12:59,850 --> 00:13:02,660
certified Apache Apache Hadoop binary

00:13:01,769 --> 00:13:05,149
the century

00:13:02,660 --> 00:13:07,250
the most challenging part was that the

00:13:05,149 --> 00:13:09,410
team that I sort of inherited right so

00:13:07,250 --> 00:13:12,680
they didn't have any expertise in Hadoop

00:13:09,410 --> 00:13:14,990
nor packagin North tech building nor

00:13:12,680 --> 00:13:16,879
nothin I mean total total noobs right so

00:13:14,990 --> 00:13:19,490
they did good engineers good software

00:13:16,879 --> 00:13:21,410
you know engineers programmers and all

00:13:19,490 --> 00:13:22,879
but software integration system

00:13:21,410 --> 00:13:26,120
integration is essentially a little bit

00:13:22,879 --> 00:13:28,189
different realm then say code

00:13:26,120 --> 00:13:29,540
development right so a bunch of bunch of

00:13:28,189 --> 00:13:31,490
and again I'm not trying to separate

00:13:29,540 --> 00:13:35,660
myself at the development for 20-plus

00:13:31,490 --> 00:13:38,449
years but in many cases you would see

00:13:35,660 --> 00:13:39,769
like what are you talking there is a

00:13:38,449 --> 00:13:43,279
bargaining system it works on my laptop

00:13:39,769 --> 00:13:46,639
as well so what what what you want but

00:13:43,279 --> 00:13:49,490
when you start actually rolling out the

00:13:46,639 --> 00:13:51,800
the production code to two people to

00:13:49,490 --> 00:13:55,699
consume the attitude actually change

00:13:51,800 --> 00:13:57,589
quite quite you know harshly and so

00:13:55,699 --> 00:13:58,790
because if if a customer has a problem

00:13:57,589 --> 00:14:04,459
so it's your neck on the line

00:13:58,790 --> 00:14:07,149
essentially so changing the attitude of

00:14:04,459 --> 00:14:10,490
the system teaching the system as you go

00:14:07,149 --> 00:14:13,630
trying to roll out the distribution in a

00:14:10,490 --> 00:14:15,430
very very very short period of time and

00:14:13,630 --> 00:14:21,380
essentially trying to build this

00:14:15,430 --> 00:14:23,180
incredibly hard and complex system in a

00:14:21,380 --> 00:14:24,439
in a short period so that that was the

00:14:23,180 --> 00:14:27,910
challenges right and again picked up

00:14:24,439 --> 00:14:30,970
picked up was awesomely helpful in this

00:14:27,910 --> 00:14:33,500
in this endeavor so as I mentioned we

00:14:30,970 --> 00:14:37,189
just work carefully on the set of the

00:14:33,500 --> 00:14:39,110
components we wanted to have integrated

00:14:37,189 --> 00:14:41,509
this whole thing into the the Jenkins

00:14:39,110 --> 00:14:42,980
essential res that we have so we have

00:14:41,509 --> 00:14:44,689
like you know the dashboard that shows

00:14:42,980 --> 00:14:47,420
the degree in builds with red bill so

00:14:44,689 --> 00:14:52,100
you can react quickly that kind of stuff

00:14:47,420 --> 00:14:53,720
ah puppet was extremely helpful to help

00:14:52,100 --> 00:14:55,759
us actually to deploy the code and test

00:14:53,720 --> 00:14:58,819
the code you know pretty frequently I

00:14:55,759 --> 00:15:02,120
mean did the the build applications the

00:14:58,819 --> 00:15:04,040
body binder is not occur and as I said

00:15:02,120 --> 00:15:05,300
we were rinsing and repeating like chill

00:15:04,040 --> 00:15:06,860
till the blue in the face essential

00:15:05,300 --> 00:15:08,509
we're in so many times because we were

00:15:06,860 --> 00:15:09,889
stepping on the bugs and stepping on the

00:15:08,509 --> 00:15:13,170
issues and was not

00:15:09,889 --> 00:15:14,850
so but yeah we did it and when we

00:15:13,170 --> 00:15:17,730
started actually that this angel was

00:15:14,850 --> 00:15:20,940
pretty much the the the state of the art

00:15:17,730 --> 00:15:25,230
in Hadoop ecosystem red and then next

00:15:20,940 --> 00:15:27,420
iteration was like that and then there

00:15:25,230 --> 00:15:30,120
was another iteration and there was

00:15:27,420 --> 00:15:32,100
another iteration and today is he

00:15:30,120 --> 00:15:34,410
actually even a little bit more complex

00:15:32,100 --> 00:15:36,449
code ch.5 came around and you know the

00:15:34,410 --> 00:15:38,339
kind stuff and into is not there anymore

00:15:36,449 --> 00:15:42,329
sir oh it's not hearing more others I

00:15:38,339 --> 00:15:44,310
know but yeah so that was that was great

00:15:42,329 --> 00:15:49,860
experience i will let Roman to

00:15:44,310 --> 00:15:59,459
pontificate about his and then we'll do

00:15:49,860 --> 00:16:00,600
them hello can you hear me alright so

00:15:59,459 --> 00:16:02,399
let me talk a little bit about the

00:16:00,600 --> 00:16:04,440
pivotal experience and I thought that

00:16:02,399 --> 00:16:05,940
Constantine would do a demo ahead of me

00:16:04,440 --> 00:16:07,889
so I don't have to bore you with you

00:16:05,940 --> 00:16:09,180
know yet another you know laundry list

00:16:07,889 --> 00:16:11,329
of things that we've done with Victor

00:16:09,180 --> 00:16:14,990
but i guess the demo is at the end so

00:16:11,329 --> 00:16:17,730
pivotal he has an interesting history

00:16:14,990 --> 00:16:22,860
you know with regard to hadoop so the

00:16:17,730 --> 00:16:26,160
company basically started as a spinoff

00:16:22,860 --> 00:16:28,470
from you know vmware and emc and before

00:16:26,160 --> 00:16:30,600
that the hadoop effort was essential

00:16:28,470 --> 00:16:34,680
part of the green plum so at green plum

00:16:30,600 --> 00:16:36,930
the idea behind hadoop was just as much

00:16:34,680 --> 00:16:38,850
as you know the idea behind Hadoop at

00:16:36,930 --> 00:16:40,110
let's say when this go is to have you

00:16:38,850 --> 00:16:41,279
know your own distribution of Hadoop

00:16:40,110 --> 00:16:44,069
that you sell as a product to your

00:16:41,279 --> 00:16:46,199
customers right it was based on the fork

00:16:44,069 --> 00:16:49,259
of big top you know pretty entrance you

00:16:46,199 --> 00:16:53,250
know 0.3 incubating Hadoop one ecosystem

00:16:49,259 --> 00:16:56,850
and it had very little community

00:16:53,250 --> 00:16:58,649
interaction again it was at the time

00:16:56,850 --> 00:17:02,370
when everybody was trying to do their

00:16:58,649 --> 00:17:03,899
own head of distributions and what they

00:17:02,370 --> 00:17:05,159
did actually made sense i mean i will

00:17:03,899 --> 00:17:08,100
talk a little bit about you know lesson

00:17:05,159 --> 00:17:09,839
to learn but the enablement that Victor

00:17:08,100 --> 00:17:12,480
provided you know allow the company to

00:17:09,839 --> 00:17:16,530
basically very quickly have a product

00:17:12,480 --> 00:17:18,329
out now at some point I like to say that

00:17:16,530 --> 00:17:20,459
you know people that are sort of the

00:17:18,329 --> 00:17:22,530
green plants that have graduated as a

00:17:20,459 --> 00:17:22,860
PhD you know pivotal Hadoop distribution

00:17:22,530 --> 00:17:26,730
and P

00:17:22,860 --> 00:17:28,950
the Hadoop distribution is kind of

00:17:26,730 --> 00:17:30,260
something else it's not really I mean it

00:17:28,950 --> 00:17:34,799
is a head of distribution in a way but

00:17:30,260 --> 00:17:37,110
the actual point of Hadoop at pivotal is

00:17:34,799 --> 00:17:38,910
to integrate it into po21 so in that way

00:17:37,110 --> 00:17:40,590
we're a little bit like you know Amazon

00:17:38,910 --> 00:17:43,049
where amazon has a product called Amazon

00:17:40,590 --> 00:17:44,549
EMR you know elastic MapReduce where

00:17:43,049 --> 00:17:47,940
they might not necessarily sell that

00:17:44,549 --> 00:17:49,860
sort of do you know product to you but

00:17:47,940 --> 00:17:51,299
they give you as a service again in

00:17:49,860 --> 00:17:53,520
pivotal's case you can still get Hadoop

00:17:51,299 --> 00:17:55,230
as a standalone distribution but the

00:17:53,520 --> 00:17:57,780
whole point is more about integrating it

00:17:55,230 --> 00:17:59,700
into a platform so right now it's based

00:17:57,780 --> 00:18:03,809
on another fork of dick top which is big

00:17:59,700 --> 00:18:05,700
top all for its Hadoop 22 based and we

00:18:03,809 --> 00:18:08,100
started integrating it with all sorts of

00:18:05,700 --> 00:18:09,720
interesting software projects that we

00:18:08,100 --> 00:18:12,419
have a pivotal now hot being you know

00:18:09,720 --> 00:18:15,720
one of the examples that is a sequel on

00:18:12,419 --> 00:18:20,100
top of Hadoop and the use of big top is

00:18:15,720 --> 00:18:21,390
still very much in place but it's a very

00:18:20,100 --> 00:18:24,210
different sort of take on the whole

00:18:21,390 --> 00:18:27,270
exercise so what are the lessons for

00:18:24,210 --> 00:18:29,040
pivotal I think we actually need to

00:18:27,270 --> 00:18:31,470
start thinking about big top as a fedora

00:18:29,040 --> 00:18:33,030
right so especially now that we don't

00:18:31,470 --> 00:18:36,179
actually have a distribution to protect

00:18:33,030 --> 00:18:37,950
you know at least not so much we can

00:18:36,179 --> 00:18:39,750
allow for all of the innovation that

00:18:37,950 --> 00:18:42,210
happens in Big Top to basically be

00:18:39,750 --> 00:18:44,220
available on our platform pivotal one so

00:18:42,210 --> 00:18:45,870
in a way I mean just like with fedora if

00:18:44,220 --> 00:18:48,000
you don't have a package in you know

00:18:45,870 --> 00:18:51,210
let's say well you know chances are if

00:18:48,000 --> 00:18:52,590
you grab it from fedora EPL our repo I

00:18:51,210 --> 00:18:54,570
mean it will work it won't be supported

00:18:52,590 --> 00:18:57,179
by redhead but it will work so I think

00:18:54,570 --> 00:18:59,880
what we really have to sort of look at

00:18:57,179 --> 00:19:01,440
Big Top a sort of this fedora aspect of

00:18:59,880 --> 00:19:03,299
the whole Hadoop ecosystem we build the

00:19:01,440 --> 00:19:05,429
packages and we make them available on

00:19:03,299 --> 00:19:08,070
you know pivotal one platform frankly on

00:19:05,429 --> 00:19:10,890
any platform that builds Hadoop via big

00:19:08,070 --> 00:19:13,470
top so amazon for example can totally do

00:19:10,890 --> 00:19:17,370
the same rate we have to become part of

00:19:13,470 --> 00:19:18,809
the community more I believe that you

00:19:17,370 --> 00:19:21,210
know the only way you can sort of keep

00:19:18,809 --> 00:19:22,590
in touch with all of the open-source

00:19:21,210 --> 00:19:25,110
innovation that's happening is to

00:19:22,590 --> 00:19:27,419
participate in the community as it goes

00:19:25,110 --> 00:19:28,919
so the model where you take the software

00:19:27,419 --> 00:19:30,330
becoming the fire world you can do you

00:19:28,919 --> 00:19:31,919
know tweak it for your own purpose you

00:19:30,330 --> 00:19:33,570
never talk to the community again and

00:19:31,919 --> 00:19:35,309
maybe when the community has an X

00:19:33,570 --> 00:19:36,690
release you know you rebate on to the

00:19:35,309 --> 00:19:39,750
you know top of that release

00:19:36,690 --> 00:19:41,160
I suppose it could work it works for you

00:19:39,750 --> 00:19:44,400
know at least two incarnations of the

00:19:41,160 --> 00:19:45,810
product but it cannot really capture all

00:19:44,400 --> 00:19:47,760
of the innovation that's happening so

00:19:45,810 --> 00:19:52,080
being in front of the community is the

00:19:47,760 --> 00:19:53,340
only way just say no to forking we have

00:19:52,080 --> 00:19:54,870
to work on customer requirements

00:19:53,340 --> 00:19:57,030
upstream right and what that means is

00:19:54,870 --> 00:19:59,880
again we used to take the software

00:19:57,030 --> 00:20:01,500
behind the firewall and for hawk the

00:19:59,880 --> 00:20:03,060
example that I gave for example we

00:20:01,500 --> 00:20:05,820
needed this thing in Hadoop called

00:20:03,060 --> 00:20:07,620
truncate so Hadoop HDFS filesystem by

00:20:05,820 --> 00:20:10,980
default doesn't support the sort of

00:20:07,620 --> 00:20:12,270
POSIX truncate functionality and again

00:20:10,980 --> 00:20:13,380
there are different views and you know

00:20:12,270 --> 00:20:15,270
where they'll actually needs to support

00:20:13,380 --> 00:20:17,610
truncate or maybe snapshots give you you

00:20:15,270 --> 00:20:19,950
know similar functionality but in

00:20:17,610 --> 00:20:21,690
pivotal's case we needed truncate for a

00:20:19,950 --> 00:20:23,370
hawk you know to support for

00:20:21,690 --> 00:20:25,980
functionality and we ended up putting

00:20:23,370 --> 00:20:28,380
truncate into a sort of PhD po2 headed

00:20:25,980 --> 00:20:30,360
distribution as a specific patch you

00:20:28,380 --> 00:20:31,440
know the patch existent they open but we

00:20:30,360 --> 00:20:34,380
haven't really worked with the community

00:20:31,440 --> 00:20:37,710
to sort of make that an accepted feature

00:20:34,380 --> 00:20:39,090
of the HDFS we really have to work on

00:20:37,710 --> 00:20:42,930
those types of customer requirements

00:20:39,090 --> 00:20:45,570
upstream doing patches you know for hot

00:20:42,930 --> 00:20:46,800
escalations behind the firewall is okay

00:20:45,570 --> 00:20:48,090
because you know at the end of the day

00:20:46,800 --> 00:20:49,800
we're all in the business were actually

00:20:48,090 --> 00:20:51,540
you know satisfying our customer

00:20:49,800 --> 00:20:53,190
requirements but if you're talking about

00:20:51,540 --> 00:20:55,920
you know crucial feature like that it

00:20:53,190 --> 00:20:57,570
has to have an upstream we have to also

00:20:55,920 --> 00:20:59,220
participate in release planning rate you

00:20:57,570 --> 00:21:02,010
know because so far if you look into the

00:20:59,220 --> 00:21:03,390
Hadoop release process and frankly into

00:21:02,010 --> 00:21:07,380
Big Top release process right you know

00:21:03,390 --> 00:21:10,920
it's being driven by you know few sort

00:21:07,380 --> 00:21:16,470
of i call them usual suspects and it's

00:21:10,920 --> 00:21:20,520
fine but what happens then is e you know

00:21:16,470 --> 00:21:22,620
the release for Hadoop or big top I get

00:21:20,520 --> 00:21:24,660
pushed out and then all of these

00:21:22,620 --> 00:21:26,370
companies they're like well we you know

00:21:24,660 --> 00:21:27,660
if only we have this feature of that

00:21:26,370 --> 00:21:30,390
fissure in the release rate you know

00:21:27,660 --> 00:21:32,310
then we would not be in a need of

00:21:30,390 --> 00:21:33,330
touching and the reason you don't have

00:21:32,310 --> 00:21:34,710
that feature is because you don't

00:21:33,330 --> 00:21:36,570
participate in the upstream sort of

00:21:34,710 --> 00:21:38,790
release planning rate you have to be out

00:21:36,570 --> 00:21:41,280
there you have to follow the very same

00:21:38,790 --> 00:21:42,750
software development practices as you're

00:21:41,280 --> 00:21:45,900
falling within your company in the

00:21:42,750 --> 00:21:48,350
upstream community as well and the last

00:21:45,900 --> 00:21:50,370
point that I think you know I'm very

00:21:48,350 --> 00:21:51,630
focused on you know pushing

00:21:50,370 --> 00:21:52,800
at pivotal personally because you know

00:21:51,630 --> 00:21:54,900
at the end of the day I'm a pivotal

00:21:52,800 --> 00:21:56,309
employee I would like to help us

00:21:54,900 --> 00:21:59,820
leverage big tops infrastructure

00:21:56,309 --> 00:22:02,430
internally partially because I think

00:21:59,820 --> 00:22:04,080
it's pretty good but also because we

00:22:02,430 --> 00:22:08,460
have to have a feedback loop right you

00:22:04,080 --> 00:22:11,160
know we have to have the loop of sort of

00:22:08,460 --> 00:22:12,420
the customer feedback not just this for

00:22:11,160 --> 00:22:14,130
the software itself but for the

00:22:12,420 --> 00:22:15,690
infrastructure as well so big top

00:22:14,130 --> 00:22:17,850
infrastructure is all about Jenkins it's

00:22:15,690 --> 00:22:19,980
all about continuous integration but we

00:22:17,850 --> 00:22:21,540
don't really get any customers you know

00:22:19,980 --> 00:22:23,100
telling us how good or how bad it is and

00:22:21,540 --> 00:22:26,160
I think you know it's about time we

00:22:23,100 --> 00:22:27,600
started doing it which brings me to my

00:22:26,160 --> 00:22:31,200
following slide you know what are the

00:22:27,600 --> 00:22:33,450
lessons for the big top itself it's good

00:22:31,200 --> 00:22:35,130
that you know I can push for all of this

00:22:33,450 --> 00:22:36,300
agenda within the company and I hope you

00:22:35,130 --> 00:22:37,830
know if you work for the company that

00:22:36,300 --> 00:22:39,300
you know he's interesting to do

00:22:37,830 --> 00:22:41,250
distribution but one way or the other

00:22:39,300 --> 00:22:42,960
maybe you will help me push for the same

00:22:41,250 --> 00:22:44,340
agenda within the company but there's

00:22:42,960 --> 00:22:46,559
also tons of stuff that we as a

00:22:44,340 --> 00:22:48,960
community now you know switching my head

00:22:46,559 --> 00:22:51,030
to just being a community member of the

00:22:48,960 --> 00:22:54,750
club community there's tons of stuff

00:22:51,030 --> 00:22:57,870
that we can do and you know meeting sort

00:22:54,750 --> 00:22:59,340
of companies halfway is I think what a

00:22:57,870 --> 00:23:02,850
Patrick communities are pretty good

00:22:59,340 --> 00:23:06,540
about we have to make it work because

00:23:02,850 --> 00:23:08,400
it's only when we get quite a bit of

00:23:06,540 --> 00:23:10,140
community participation the project you

00:23:08,400 --> 00:23:11,700
know prosperous right and one way to get

00:23:10,140 --> 00:23:14,130
that community participation you know

00:23:11,700 --> 00:23:15,480
get the community bigger is you know to

00:23:14,130 --> 00:23:17,190
make it interesting for the companies

00:23:15,480 --> 00:23:18,900
you know to demonstrate that company

00:23:17,190 --> 00:23:20,850
actually get some value out of using the

00:23:18,900 --> 00:23:22,620
project so I think you know promoting

00:23:20,850 --> 00:23:24,690
common building our infrastructure you

00:23:22,620 --> 00:23:27,690
know something that sort of was last

00:23:24,690 --> 00:23:29,550
bullets on the previous slide would be

00:23:27,690 --> 00:23:31,679
really good even within the community we

00:23:29,550 --> 00:23:33,120
can I have to codify it because even

00:23:31,679 --> 00:23:35,460
today if you look at the Patrick

00:23:33,120 --> 00:23:37,230
software foundation we have this you

00:23:35,460 --> 00:23:39,660
know builds dota Patchett at work right

00:23:37,230 --> 00:23:41,970
you know and it's sort of like this

00:23:39,660 --> 00:23:45,210
thing that's on the side you know people

00:23:41,970 --> 00:23:46,890
use it for REM for you know continuous

00:23:45,210 --> 00:23:48,720
integration but there is no sort of

00:23:46,890 --> 00:23:51,720
codifying is right you know nobody is

00:23:48,720 --> 00:23:53,160
really fully in charge of not the

00:23:51,720 --> 00:23:55,620
infrastructure but how you use the

00:23:53,160 --> 00:23:57,800
infrastructure I think we should you

00:23:55,620 --> 00:24:00,450
know there is this old principle

00:23:57,800 --> 00:24:01,470
infrastructure-as-a-service i guess i

00:24:00,450 --> 00:24:03,640
would say it's kind of like

00:24:01,470 --> 00:24:05,230
configuration as a service we have

00:24:03,640 --> 00:24:06,700
codified we have to make sure that

00:24:05,230 --> 00:24:08,530
whatever we use as build and release

00:24:06,700 --> 00:24:10,270
infrastructure is as much part of the

00:24:08,530 --> 00:24:13,330
every single project that these are the

00:24:10,270 --> 00:24:15,580
patch it as much as code is we have to

00:24:13,330 --> 00:24:18,070
avoid broken window syndrome I mean I'm

00:24:15,580 --> 00:24:20,290
as guilty as anywhere anybody else like

00:24:18,070 --> 00:24:21,460
I would go to the you know Jenkins I

00:24:20,290 --> 00:24:22,750
would see that the bunch of bills are

00:24:21,460 --> 00:24:24,010
broken and I'm like eh I no way it's

00:24:22,750 --> 00:24:26,170
broken you know it's always like that

00:24:24,010 --> 00:24:27,880
branch that this guy on myself is

00:24:26,170 --> 00:24:29,890
working on so like it should be broken I

00:24:27,880 --> 00:24:33,790
know why I don't have any time to test

00:24:29,890 --> 00:24:35,920
it but then you know just take a pause

00:24:33,790 --> 00:24:37,330
think about it right you know you know

00:24:35,920 --> 00:24:38,710
why it's broken but the guy who is

00:24:37,330 --> 00:24:40,150
coming to the project for the first time

00:24:38,710 --> 00:24:41,620
doesn't he you know he looks at it and

00:24:40,150 --> 00:24:43,810
says like it's all broken right you know

00:24:41,620 --> 00:24:45,220
how can I go back to my boss and say

00:24:43,810 --> 00:24:46,870
that this is an awesome project when

00:24:45,220 --> 00:24:50,020
even the bills are not working right you

00:24:46,870 --> 00:24:51,220
know we have to avoid you know giving

00:24:50,020 --> 00:24:52,180
this sort of false impression or at

00:24:51,220 --> 00:24:53,980
least you know we have to have a

00:24:52,180 --> 00:24:56,080
cleaned-up environment where stuff is

00:24:53,980 --> 00:24:58,150
working all the time hundred percent of

00:24:56,080 --> 00:25:01,180
the time and if anything gets broken you

00:24:58,150 --> 00:25:03,220
know committers just jump at it so big

00:25:01,180 --> 00:25:05,110
top releases don't patch we have this

00:25:03,220 --> 00:25:06,520
rule in place that you know when Big Top

00:25:05,110 --> 00:25:08,110
release something that you can actually

00:25:06,520 --> 00:25:11,980
deploy and Constantine will demonstrate

00:25:08,110 --> 00:25:13,480
it in you know five minutes or so you

00:25:11,980 --> 00:25:16,750
can deploy the big top right you know

00:25:13,480 --> 00:25:19,240
but when you deploy what gets pushed a

00:25:16,750 --> 00:25:21,850
set of big tub it's all of these bits

00:25:19,240 --> 00:25:23,770
are essentially big top provided builds

00:25:21,850 --> 00:25:25,870
of the upstream release apache software

00:25:23,770 --> 00:25:27,460
so we don't actually patch any of the

00:25:25,870 --> 00:25:29,440
software we try to participate in the

00:25:27,460 --> 00:25:31,330
upstream release planning and release

00:25:29,440 --> 00:25:33,340
execution to make sure that the features

00:25:31,330 --> 00:25:34,690
get into the releases and the bug fixes

00:25:33,340 --> 00:25:38,890
get into the releases but with on patch

00:25:34,690 --> 00:25:40,420
now vendors actually do patch part of

00:25:38,890 --> 00:25:42,280
the reason is like I gave you an example

00:25:40,420 --> 00:25:43,750
of pivotal you know we have to have a

00:25:42,280 --> 00:25:46,960
patch in place that's part of the

00:25:43,750 --> 00:25:48,190
open-source sort of trunk or maybe it's

00:25:46,960 --> 00:25:49,720
not even on trunk yet but it's available

00:25:48,190 --> 00:25:51,510
in the open source but it hasn't really

00:25:49,720 --> 00:25:54,520
been fully accepted by the community yet

00:25:51,510 --> 00:25:56,590
so we have to put it in place and pretty

00:25:54,520 --> 00:25:59,410
much every single vendor has that issue

00:25:56,590 --> 00:26:02,020
Big Top has been really kind of

00:25:59,410 --> 00:26:04,900
ambivalent towards patching we kinda

00:26:02,020 --> 00:26:06,250
left it to the company's own devices if

00:26:04,900 --> 00:26:07,630
you want to patch you kinda have to come

00:26:06,250 --> 00:26:09,580
up with your own infrastructure I think

00:26:07,630 --> 00:26:11,680
we have to take on to that use case why

00:26:09,580 --> 00:26:15,070
because you know I've been at close era

00:26:11,680 --> 00:26:16,930
and I've been at pivotal and at least at

00:26:15,070 --> 00:26:18,610
these two companies the patching process

00:26:16,930 --> 00:26:20,650
not the same and I think if we can

00:26:18,610 --> 00:26:23,110
leverage the common patching process we

00:26:20,650 --> 00:26:25,720
will again leverage picked up to a much

00:26:23,110 --> 00:26:28,000
fuller extent we have to make tests

00:26:25,720 --> 00:26:29,740
easier to use one of the big big big

00:26:28,000 --> 00:26:31,270
value adds of big top is that it's not

00:26:29,740 --> 00:26:32,620
just you can you know assemble this

00:26:31,270 --> 00:26:34,780
hodgepodge of software you can actually

00:26:32,620 --> 00:26:37,480
validate it you can test it there is a

00:26:34,780 --> 00:26:38,770
community-supported set of integration

00:26:37,480 --> 00:26:41,500
tests that can tell you whether it's

00:26:38,770 --> 00:26:44,140
good or bad unfortunately it's not as

00:26:41,500 --> 00:26:46,120
easy to use as I would like it to be and

00:26:44,140 --> 00:26:47,710
there is a bunch of really good

00:26:46,120 --> 00:26:49,780
community of work that's happening

00:26:47,710 --> 00:26:51,250
around it you know Jay sitting right

00:26:49,780 --> 00:26:52,780
there is you know doing quite a bit of

00:26:51,250 --> 00:26:54,640
that Thank You Jay I mean it'sit's

00:26:52,780 --> 00:26:56,170
really I know it's a really thankless

00:26:54,640 --> 00:26:58,000
job and that's why I'm saying like we

00:26:56,170 --> 00:26:59,650
should at least you know thank everybody

00:26:58,000 --> 00:27:01,210
who is you know pitching at least a

00:26:59,650 --> 00:27:03,700
little bit but we should also invest in

00:27:01,210 --> 00:27:05,710
it and we should you know you invest in

00:27:03,700 --> 00:27:07,510
documentation white papers demos you

00:27:05,710 --> 00:27:09,580
know these talks whatever so you know if

00:27:07,510 --> 00:27:11,950
you have any cool awesome you know use

00:27:09,580 --> 00:27:13,990
of big top talk to us you know we we can

00:27:11,950 --> 00:27:19,140
we can help you know figure out what

00:27:13,990 --> 00:27:21,700
events we should be up we should be at

00:27:19,140 --> 00:27:24,730
before Constantine goes with demo let me

00:27:21,700 --> 00:27:27,580
actually just give if you kind of like

00:27:24,730 --> 00:27:29,620
closing thoughts like I said I used to

00:27:27,580 --> 00:27:30,910
be sort of you know vp of the project

00:27:29,620 --> 00:27:32,350
which had a patch it doesn't really give

00:27:30,910 --> 00:27:33,820
you any special powers whatsoever it's

00:27:32,350 --> 00:27:35,680
just like you know you're essentially

00:27:33,820 --> 00:27:37,690
bureaucrat you know like filing

00:27:35,680 --> 00:27:39,580
paperwork you know for SF board meetings

00:27:37,690 --> 00:27:40,960
but you kind of feel like you know

00:27:39,580 --> 00:27:44,380
you're empowered right you know you can

00:27:40,960 --> 00:27:45,910
like wax you know about what's what

00:27:44,380 --> 00:27:48,430
needs to happen with the project so now

00:27:45,910 --> 00:27:50,100
that i'm actually not even bbp let me do

00:27:48,430 --> 00:27:52,750
just that you know from one last time so

00:27:50,100 --> 00:27:54,700
they're all the help so what i would

00:27:52,750 --> 00:27:57,790
personally be very excited about you

00:27:54,700 --> 00:27:59,230
know happening in big top and to a

00:27:57,790 --> 00:28:00,910
certain extent this is the stuff that i

00:27:59,230 --> 00:28:03,520
will be working on myself because you

00:28:00,910 --> 00:28:05,890
know i'm so excited about it now so i

00:28:03,520 --> 00:28:08,140
think we have to rethink or at least

00:28:05,890 --> 00:28:10,120
augment our deployment environments so

00:28:08,140 --> 00:28:16,000
when big top story them that was back in

00:28:10,120 --> 00:28:18,520
2011 ish danish 2010 it was all about

00:28:16,000 --> 00:28:19,810
you know just classical old-school unix

00:28:18,520 --> 00:28:21,640
packaging rate you know a bit while

00:28:19,810 --> 00:28:24,490
because hadoop distribution existed on

00:28:21,640 --> 00:28:26,080
this long-running clusters where you

00:28:24,490 --> 00:28:27,670
would have a DevOps you know like

00:28:26,080 --> 00:28:29,380
suppose your work at yahoo right your

00:28:27,670 --> 00:28:30,310
dev upset yahoo who is in charge of

00:28:29,380 --> 00:28:32,470
supporting if you should

00:28:30,310 --> 00:28:35,410
infrastructure so what you have in place

00:28:32,470 --> 00:28:37,450
is you know maybe well maybe Sam 2s

00:28:35,410 --> 00:28:40,320
maybe you bond to you know some version

00:28:37,450 --> 00:28:42,760
of Linux you know sometimes maybe Susie

00:28:40,320 --> 00:28:44,440
but you don't really update that

00:28:42,760 --> 00:28:47,080
infrastructure all that often I mean you

00:28:44,440 --> 00:28:48,760
provide security patches and whatnot but

00:28:47,080 --> 00:28:52,120
it's a very static infrastructure right

00:28:48,760 --> 00:28:53,860
you know you need to understand what's

00:28:52,120 --> 00:28:56,200
there you need to manage it you need to

00:28:53,860 --> 00:28:58,420
audit it and that's why unique style

00:28:56,200 --> 00:29:00,610
software packaging with you know rpms

00:28:58,420 --> 00:29:02,800
Debbie ins makes a lot of sense because

00:29:00,610 --> 00:29:04,450
as a DevOps you can basically very

00:29:02,800 --> 00:29:06,250
quickly see what is the state of your

00:29:04,450 --> 00:29:08,020
entire infrastructure and you can

00:29:06,250 --> 00:29:09,490
leverage tools like puppets chef you

00:29:08,020 --> 00:29:11,170
know to make it easier for you to manage

00:29:09,490 --> 00:29:14,170
that infrastructure so that's how big

00:29:11,170 --> 00:29:16,450
top started we wanted to give the Hadoop

00:29:14,170 --> 00:29:19,330
and you know Hadoop ecosystem software

00:29:16,450 --> 00:29:23,080
to the DevOps community in the way that

00:29:19,330 --> 00:29:25,540
would be easiest for them to consume I

00:29:23,080 --> 00:29:27,160
call it vanilla servers right you know

00:29:25,540 --> 00:29:31,600
it's the service that we all know and

00:29:27,160 --> 00:29:34,930
love you know they date back to 80s they

00:29:31,600 --> 00:29:36,850
still in place my my you knows when I

00:29:34,930 --> 00:29:38,350
talk about all these newfangled stuff I

00:29:36,850 --> 00:29:40,000
mean I have a friend from East Coast

00:29:38,350 --> 00:29:41,380
could basically you know all like every

00:29:40,000 --> 00:29:43,720
single time I talk about it he's like

00:29:41,380 --> 00:29:45,700
dude you don't understand how lucky you

00:29:43,720 --> 00:29:48,310
are on the west coast I still have to

00:29:45,700 --> 00:29:50,380
support freaking Windows NT NT can you

00:29:48,310 --> 00:29:51,730
believe that so yes I do get the fact

00:29:50,380 --> 00:29:54,790
that you know we shouldn't be just like

00:29:51,730 --> 00:29:57,250
dropping you know all schools unix

00:29:54,790 --> 00:29:59,740
packaging but there is different style

00:29:57,250 --> 00:30:03,580
of deployment nowadays in place right

00:29:59,740 --> 00:30:05,770
different style of experiencing sort of

00:30:03,580 --> 00:30:11,410
Hadoop cluster like you know frameworks

00:30:05,770 --> 00:30:13,210
and I call them you know vanilla VMs or

00:30:11,410 --> 00:30:15,460
containers at the sort of first level

00:30:13,210 --> 00:30:18,580
which we as well you can totally take

00:30:15,460 --> 00:30:20,590
something like docker and at that point

00:30:18,580 --> 00:30:22,720
there is no reason for you to basically

00:30:20,590 --> 00:30:25,000
pretend that's what's running inside of

00:30:22,720 --> 00:30:26,710
docker is a long-running service why

00:30:25,000 --> 00:30:28,090
because you know it's the thing that you

00:30:26,710 --> 00:30:30,010
build on the fly right you know your

00:30:28,090 --> 00:30:32,260
daughter environment could change you

00:30:30,010 --> 00:30:34,450
know with every single time you deploy

00:30:32,260 --> 00:30:36,100
the docker container so all of a sudden

00:30:34,450 --> 00:30:38,260
you know all the overhead that you're

00:30:36,100 --> 00:30:40,750
getting from installing rpms or you know

00:30:38,260 --> 00:30:43,090
Debian packages it's not even needed why

00:30:40,750 --> 00:30:45,940
would you have it

00:30:43,090 --> 00:30:48,280
you in fact can move from maintaining

00:30:45,940 --> 00:30:51,310
individual packages to maintaining rolls

00:30:48,280 --> 00:30:52,930
or container images for docker so if you

00:30:51,310 --> 00:30:56,290
have an environment that you know has

00:30:52,930 --> 00:30:58,120
Hadoop but not just Hadoop and HBase you

00:30:56,290 --> 00:31:02,200
know as well you will probably have

00:30:58,120 --> 00:31:07,780
nodes that need to be HDFS data nodes

00:31:02,200 --> 00:31:10,060
and you know hbase.regionserver.requests

00:31:07,780 --> 00:31:12,610
errs but at that point you actually can

00:31:10,060 --> 00:31:15,910
bake a docker image with that rolls in

00:31:12,610 --> 00:31:17,650
place on the fly using some kind of

00:31:15,910 --> 00:31:19,480
newfangled packaging that you know big

00:31:17,650 --> 00:31:21,250
top community is bound to come up with

00:31:19,480 --> 00:31:22,450
because we're so good at it right but

00:31:21,250 --> 00:31:23,740
that's the stuff that's really exciting

00:31:22,450 --> 00:31:25,660
for me right how do you solve that

00:31:23,740 --> 00:31:27,910
problem how do you actually big the

00:31:25,660 --> 00:31:29,620
image on the fly how do you move from

00:31:27,910 --> 00:31:31,420
static deployment of packages to a

00:31:29,620 --> 00:31:33,880
role-based deployment of VMs and

00:31:31,420 --> 00:31:36,130
containers and at this level I'm still

00:31:33,880 --> 00:31:37,960
talking about just bare you know vanilla

00:31:36,130 --> 00:31:40,570
VMs and containers I mean we can all do

00:31:37,960 --> 00:31:43,240
it today linux supports it you know very

00:31:40,570 --> 00:31:45,370
well so we can all do it today but

00:31:43,240 --> 00:31:49,900
kicking it up a notch we can actually

00:31:45,370 --> 00:31:52,660
think about you know the typical come

00:31:49,900 --> 00:31:55,690
back you have from anybody who gets you

00:31:52,660 --> 00:31:57,220
know to think about deploying Hadoop and

00:31:55,690 --> 00:31:59,020
I virtualized Oh containerized

00:31:57,220 --> 00:32:00,640
environment so a typical come back is

00:31:59,020 --> 00:32:03,520
like yeah it's all mice you know it

00:32:00,640 --> 00:32:05,620
makes my administration really nice but

00:32:03,520 --> 00:32:07,450
what about performance what about you

00:32:05,620 --> 00:32:09,310
know all of the costs that I would

00:32:07,450 --> 00:32:12,940
suffer on the performance side of things

00:32:09,310 --> 00:32:15,490
but now you know we have an interesting

00:32:12,940 --> 00:32:18,670
twist on that conversation so I've

00:32:15,490 --> 00:32:21,730
recently got introduced to a really

00:32:18,670 --> 00:32:23,560
awesome project called osv it's kind of

00:32:21,730 --> 00:32:25,960
like a specialized vm it's built on kvm

00:32:23,560 --> 00:32:28,810
and if you want to know more about it

00:32:25,960 --> 00:32:30,160
it's well actually before I go there let

00:32:28,810 --> 00:32:32,560
me say that this is the piece of

00:32:30,160 --> 00:32:34,540
technology that genuinely I haven't been

00:32:32,560 --> 00:32:37,540
excited that much about a piece of

00:32:34,540 --> 00:32:39,820
technologies in CFS and dtrace at Sun

00:32:37,540 --> 00:32:42,790
Microsystems it's like this is the stuff

00:32:39,820 --> 00:32:44,740
and I really cannot think enough you

00:32:42,790 --> 00:32:47,650
know don don marty who is here today you

00:32:44,740 --> 00:32:49,690
know for agreeing to come and present at

00:32:47,650 --> 00:32:52,120
the big top meet up so big top will have

00:32:49,690 --> 00:32:54,090
a meet up today in sort of nepa meet up

00:32:52,120 --> 00:32:56,200
/ hackathon you know today and tomorrow

00:32:54,090 --> 00:32:57,820
red hat and

00:32:56,200 --> 00:32:59,559
J you know have been kinda nice to

00:32:57,820 --> 00:33:02,260
organize it but don't was representing

00:32:59,559 --> 00:33:03,730
you will you all of your questions about

00:33:02,260 --> 00:33:06,190
you know why I'm so excited about this

00:33:03,730 --> 00:33:07,600
technology will get answers and I hope

00:33:06,190 --> 00:33:09,279
you will get as much excited but

00:33:07,600 --> 00:33:12,419
basically what this technology does so

00:33:09,279 --> 00:33:14,649
here's a little bit of a preview a

00:33:12,419 --> 00:33:17,620
little bit of a preview so that you know

00:33:14,649 --> 00:33:20,769
what you're coming for and if you use

00:33:17,620 --> 00:33:23,679
this piece of technology you deploy a vm

00:33:20,769 --> 00:33:26,880
that not only doesn't suffer performance

00:33:23,679 --> 00:33:29,710
degradation it outperforms the cost

00:33:26,880 --> 00:33:32,500
think about it for the first time ever

00:33:29,710 --> 00:33:36,130
you basically have a container / vm that

00:33:32,500 --> 00:33:38,679
freaking out performs the cost this is

00:33:36,130 --> 00:33:40,269
just like so cool the conversation just

00:33:38,679 --> 00:33:41,889
completely changes it's not how much you

00:33:40,269 --> 00:33:43,330
lose it's how much again it's like yeah

00:33:41,889 --> 00:33:45,880
no you don't understand this how much

00:33:43,330 --> 00:33:47,500
you gain so come to the big tub meet up

00:33:45,880 --> 00:33:51,279
it'll be I'm telling you it'll be

00:33:47,500 --> 00:33:52,929
awesome so on that note baking versus

00:33:51,279 --> 00:33:54,460
frying I mean in the DevOps community

00:33:52,929 --> 00:33:56,860
there are two ways of sort of addressing

00:33:54,460 --> 00:34:00,279
the issue of deploying you know baking

00:33:56,860 --> 00:34:01,779
is when you have the fully baked images

00:34:00,279 --> 00:34:03,519
it's like when you have an ami and

00:34:01,779 --> 00:34:04,750
that's what I alluded to you're not

00:34:03,519 --> 00:34:06,580
talking like we can totally have like

00:34:04,750 --> 00:34:08,349
docker images you know we can have big

00:34:06,580 --> 00:34:10,359
top images on like index the doctor

00:34:08,349 --> 00:34:12,460
thought I yo so you don't have to fuss

00:34:10,359 --> 00:34:14,560
with you know deploying your images

00:34:12,460 --> 00:34:16,149
comes to you pre-configured you know you

00:34:14,560 --> 00:34:17,770
just need to put it onto your daughter

00:34:16,149 --> 00:34:20,980
infrastructure and you just go with it

00:34:17,770 --> 00:34:22,540
so that's baking now frying is once you

00:34:20,980 --> 00:34:24,010
get that image you know chances are

00:34:22,540 --> 00:34:26,829
there is something you know little

00:34:24,010 --> 00:34:28,450
things that you kind of like not totally

00:34:26,829 --> 00:34:30,819
happy with and typically in the

00:34:28,450 --> 00:34:32,980
developed community you do baking with

00:34:30,819 --> 00:34:35,169
you know just building a complete image

00:34:32,980 --> 00:34:38,649
and you do frying of that image using

00:34:35,169 --> 00:34:40,329
your share for puppet we can still keep

00:34:38,649 --> 00:34:42,190
using you know chef and puppet you know

00:34:40,329 --> 00:34:45,960
big top comes with the puppet recipes

00:34:42,190 --> 00:34:47,889
but there is a little bit the additional

00:34:45,960 --> 00:34:49,720
interesting infrastructure that we can

00:34:47,889 --> 00:34:52,480
put in place again come to our meetup I

00:34:49,720 --> 00:34:54,369
will talk a little bit more about it and

00:34:52,480 --> 00:34:56,530
again things like rolling upgrades you

00:34:54,369 --> 00:34:57,940
know side by side installs we're still

00:34:56,530 --> 00:35:00,430
not really addressing it with the

00:34:57,940 --> 00:35:01,869
classical sort of UNIX packaging if you

00:35:00,430 --> 00:35:03,400
look at companies like Cloudera they're

00:35:01,869 --> 00:35:06,609
trying to do it with this you know

00:35:03,400 --> 00:35:09,820
really sort of worked off format called

00:35:06,609 --> 00:35:11,590
parcels which has no community

00:35:09,820 --> 00:35:12,820
support I mean it's basically the thing

00:35:11,590 --> 00:35:14,050
that the company have developed we

00:35:12,820 --> 00:35:17,760
should again nothing wrong with it but

00:35:14,050 --> 00:35:20,980
for Big Top I think we can do better and

00:35:17,760 --> 00:35:22,750
finally validation this is a long slide

00:35:20,980 --> 00:35:26,200
but basically what you have to take from

00:35:22,750 --> 00:35:27,850
it is any bit of activity that way that

00:35:26,200 --> 00:35:29,790
can be in support of you know making

00:35:27,850 --> 00:35:31,960
sure that we validate the software I

00:35:29,790 --> 00:35:33,880
don't know i can personally like vouch

00:35:31,960 --> 00:35:35,680
for buying anybody you know a keg of

00:35:33,880 --> 00:35:37,450
beer like if you contribute you know a

00:35:35,680 --> 00:35:39,550
good integration test you know come to

00:35:37,450 --> 00:35:41,410
mail buy you a keg of beer because this

00:35:39,550 --> 00:35:42,850
is how the project you know leave and

00:35:41,410 --> 00:35:46,090
dying right you know you have to make

00:35:42,850 --> 00:35:47,650
sure that the stuff works and it's all

00:35:46,090 --> 00:35:49,150
cool and nice you know to hack on the

00:35:47,650 --> 00:35:51,210
software and come up with like ways of

00:35:49,150 --> 00:35:53,350
integrating big top with you know osv

00:35:51,210 --> 00:35:58,120
but at the end of the day it has to be

00:35:53,350 --> 00:35:59,620
about testing growing the ecosystem this

00:35:58,120 --> 00:36:01,000
is the ultimate right you know Big Top

00:35:59,620 --> 00:36:03,760
has been ahead of the commercial

00:36:01,000 --> 00:36:05,440
distributions of Hadoop we've had

00:36:03,760 --> 00:36:07,330
packages that commercial distributions

00:36:05,440 --> 00:36:10,480
of Hadoop haven't really adopted yet so

00:36:07,330 --> 00:36:12,610
sheriff is one example and when I say

00:36:10,480 --> 00:36:14,290
that again it's not I'm not I'm not

00:36:12,610 --> 00:36:16,180
really complaining about commercial

00:36:14,290 --> 00:36:18,790
vendors of to do because you know it's a

00:36:16,180 --> 00:36:20,800
big cost that you have to evaluate when

00:36:18,790 --> 00:36:22,600
you get to support an open source

00:36:20,800 --> 00:36:23,500
component right you know all of a sudden

00:36:22,600 --> 00:36:25,150
it's not just you know getting the

00:36:23,500 --> 00:36:27,490
software but it's also you know

00:36:25,150 --> 00:36:29,350
factoring in what is my documentation

00:36:27,490 --> 00:36:31,870
cost what is my training costs what is

00:36:29,350 --> 00:36:35,320
my escalation s la's you know what is my

00:36:31,870 --> 00:36:38,290
support costs so having the project not

00:36:35,320 --> 00:36:40,150
being adopted by the commercial head

00:36:38,290 --> 00:36:42,250
offenders is ok as long as we have them

00:36:40,150 --> 00:36:44,950
in big fog and I want to have more more

00:36:42,250 --> 00:36:46,660
of them right you know when I was

00:36:44,950 --> 00:36:49,930
preparing for the Apache con I mean we

00:36:46,660 --> 00:36:51,550
did some analysis of the mailing list

00:36:49,930 --> 00:36:53,740
traffic at you know apache software

00:36:51,550 --> 00:36:55,840
foundation in general and i think the

00:36:53,740 --> 00:36:57,520
guy from infra came up with the

00:36:55,840 --> 00:36:59,740
statistics that more than fifty percent

00:36:57,520 --> 00:37:01,720
of all email traffic nowadays is about

00:36:59,740 --> 00:37:03,190
Hadoop ecosystem projects so like this

00:37:01,720 --> 00:37:05,110
is what the apache software foundation

00:37:03,190 --> 00:37:07,120
does you know we kinda like do a lot of

00:37:05,110 --> 00:37:09,910
Hadoop ecosystem projects so some of

00:37:07,120 --> 00:37:11,050
them are here you know like stratosphere

00:37:09,910 --> 00:37:12,460
you know the thing that just you know

00:37:11,050 --> 00:37:14,230
got proposed to the incubator we should

00:37:12,460 --> 00:37:16,210
totally get it into big top some of the

00:37:14,230 --> 00:37:17,920
projects are not even part of the apache

00:37:16,210 --> 00:37:20,110
software foundation yet you know there

00:37:17,920 --> 00:37:21,730
is grid game against something that is

00:37:20,110 --> 00:37:23,079
pretty cool if you want to know more

00:37:21,730 --> 00:37:25,390
about it come to our meetup

00:37:23,079 --> 00:37:28,989
hbase indexer you know Lily HBase

00:37:25,390 --> 00:37:31,359
indexer a lipstick you know yes it is

00:37:28,989 --> 00:37:34,599
for a pig imbrose you know all these

00:37:31,359 --> 00:37:37,599
projects I think one of the way we can

00:37:34,599 --> 00:37:39,549
actually get them into the Apache family

00:37:37,599 --> 00:37:41,829
is to get them into big toe first

00:37:39,549 --> 00:37:44,049
demonstrate how nice it is you know to

00:37:41,829 --> 00:37:45,729
be sort of part of the SF community and

00:37:44,049 --> 00:37:48,190
then get the people behind these

00:37:45,729 --> 00:37:50,200
projects you know thinking well if they

00:37:48,190 --> 00:37:51,969
can do so much for me you know just on

00:37:50,200 --> 00:37:53,979
the deployment sort of packaging you

00:37:51,969 --> 00:37:55,749
know validation side maybe it is time

00:37:53,979 --> 00:37:57,339
for us to consider incubation maybe this

00:37:55,749 --> 00:37:59,979
time for us to consider you know joining

00:37:57,339 --> 00:38:01,719
the SF family so doing you know by

00:37:59,979 --> 00:38:03,249
growing the ecosystem I don't just mean

00:38:01,719 --> 00:38:04,749
growing the big topic a system of

00:38:03,249 --> 00:38:06,249
growing the Hadoop ecosystem actually

00:38:04,749 --> 00:38:08,049
mean growing their self ecosystem

00:38:06,249 --> 00:38:10,089
because I literally want all these

00:38:08,049 --> 00:38:11,739
projects to be under the asf umbrella I

00:38:10,089 --> 00:38:17,229
mean they all apache licensed anyway so

00:38:11,739 --> 00:38:19,450
you know why not ah growth in the last

00:38:17,229 --> 00:38:22,150
six month on the community growth side

00:38:19,450 --> 00:38:24,489
has been you know we've had sort of

00:38:22,150 --> 00:38:27,489
apache spark in-memory analytics Phoenix

00:38:24,489 --> 00:38:30,430
HBase equal front end groovy pretty cool

00:38:27,489 --> 00:38:33,690
stuff a unification of user facing

00:38:30,430 --> 00:38:36,400
interfaces you know Gradle build system

00:38:33,690 --> 00:38:38,140
tons of you know really good work but we

00:38:36,400 --> 00:38:40,469
want more of it and that's where all of

00:38:38,140 --> 00:38:44,079
you come in I actually have a

00:38:40,469 --> 00:38:45,160
presentation you know later today where

00:38:44,079 --> 00:38:46,630
I will be talking about sort of

00:38:45,160 --> 00:38:48,190
particular use case for big top is

00:38:46,630 --> 00:38:49,539
called building google in the box as how

00:38:48,190 --> 00:38:51,640
you can build kind of like you know

00:38:49,539 --> 00:38:54,190
prototype of what Google built way back

00:38:51,640 --> 00:38:57,249
in like 97 and one of the components

00:38:54,190 --> 00:38:59,680
that I will be slightly complaining

00:38:57,249 --> 00:39:01,479
about is Apache match well my complaint

00:38:59,680 --> 00:39:02,709
is not so much about the technology it's

00:39:01,479 --> 00:39:04,660
the fact that it's not part of the big

00:39:02,709 --> 00:39:06,759
topic a system so when I was preparing

00:39:04,660 --> 00:39:08,319
my demo everything worked flawlessly

00:39:06,759 --> 00:39:10,749
again partially because of the big-top

00:39:08,319 --> 00:39:12,969
sort of validation test but because big

00:39:10,749 --> 00:39:15,430
top community hasn't been sort of hasn't

00:39:12,969 --> 00:39:18,279
had cycles to invest and integrating

00:39:15,430 --> 00:39:20,529
much into big topic a system nachi is

00:39:18,279 --> 00:39:23,619
not part of it right you know we have to

00:39:20,529 --> 00:39:25,479
basically like I had to really do quite

00:39:23,619 --> 00:39:29,049
a bit of hacking to make it work you

00:39:25,479 --> 00:39:31,299
know for the demo if we can integrate

00:39:29,049 --> 00:39:32,890
all of these things into big top I can

00:39:31,299 --> 00:39:34,809
choose like you know you install it or

00:39:32,890 --> 00:39:36,280
maybe even docker you know deploy it and

00:39:34,809 --> 00:39:38,410
be done with it so

00:39:36,280 --> 00:39:40,810
everything that you see in the past six

00:39:38,410 --> 00:39:43,630
months been great I mean I am really

00:39:40,810 --> 00:39:46,180
happy that we have spark so course we'll

00:39:43,630 --> 00:39:52,420
talk about it in a minute but let's do

00:39:46,180 --> 00:39:56,140
more of it so now back to you guys all

00:39:52,420 --> 00:39:58,840
the time it is no cool stuff to show red

00:39:56,140 --> 00:40:00,550
but essentially that's what we do in big

00:39:58,840 --> 00:40:02,050
top community right so the first first

00:40:00,550 --> 00:40:05,980
shot on me on the house and then you

00:40:02,050 --> 00:40:07,780
hook for all I pull effort um yeah you

00:40:05,980 --> 00:40:11,890
missed that so pretty big we're growing

00:40:07,780 --> 00:40:15,850
so come and join us anyway what we've

00:40:11,890 --> 00:40:19,020
been talking about in in a nice cool

00:40:15,850 --> 00:40:22,120
demo so what I have here is Brandon vm

00:40:19,020 --> 00:40:26,170
right so I have this this VM actually up

00:40:22,120 --> 00:40:30,270
and running so um that has essentially

00:40:26,170 --> 00:40:36,670
nothing on it but just a linux what oh

00:40:30,270 --> 00:40:42,100
that was smart ok here we go cool so um

00:40:36,670 --> 00:40:45,160
right just a linux nothing else I can

00:40:42,100 --> 00:40:48,340
show you that I'm not kidding you there

00:40:45,160 --> 00:40:50,050
is no Hadoop there is no nothing

00:40:48,340 --> 00:40:54,030
actually of a sort so it's a clean

00:40:50,050 --> 00:40:57,430
system all I have here is essentially

00:40:54,030 --> 00:41:00,280
what i have here yeah that's exactly

00:40:57,430 --> 00:41:02,170
what they have here ok so what I have

00:41:00,280 --> 00:41:04,330
here is essentially big top big top

00:41:02,170 --> 00:41:07,030
workspace git clone big top workspace

00:41:04,330 --> 00:41:10,330
which is again killing you not this is

00:41:07,030 --> 00:41:15,310
master there is nothing changed this is

00:41:10,330 --> 00:41:18,610
an old ok but there is only one file

00:41:15,310 --> 00:41:20,710
which is custom and that file do can you

00:41:18,610 --> 00:41:22,870
see this guy's all right do you want me

00:41:20,710 --> 00:41:24,880
to make a little bit bigger ok so that

00:41:22,870 --> 00:41:26,890
file is a big top puppet deployment

00:41:24,880 --> 00:41:31,750
configuration file that essentially says

00:41:26,890 --> 00:41:36,100
I want to have my kadubic add node which

00:41:31,750 --> 00:41:38,400
is you know wherever name node or HBase

00:41:36,100 --> 00:41:42,010
master unless we defined otherwise or

00:41:38,400 --> 00:41:43,630
yarn application manager resource

00:41:42,010 --> 00:41:46,180
manager whatever unless with if I

00:41:43,630 --> 00:41:47,710
decided defined otherwise on this

00:41:46,180 --> 00:41:48,900
particular horse so this is this is the

00:41:47,710 --> 00:41:52,170
DVM hasta

00:41:48,900 --> 00:41:54,360
so it defines the storage yours it

00:41:52,170 --> 00:41:55,890
defines a list of components i want to

00:41:54,360 --> 00:41:58,680
install i want to have only Hadoop and

00:41:55,890 --> 00:42:01,050
spark nothing else no you are no no

00:41:58,680 --> 00:42:04,320
nothing right and here's the URL

00:42:01,050 --> 00:42:06,150
essentially to release 07 of big top

00:42:04,320 --> 00:42:08,790
that is the latest and greatest most

00:42:06,150 --> 00:42:12,780
stable release right now okay so that's

00:42:08,790 --> 00:42:19,380
all right what I'm going to do right now

00:42:12,780 --> 00:42:21,750
is I'm going to fire up conveniently

00:42:19,380 --> 00:42:23,250
enough I have the common line here fire

00:42:21,750 --> 00:42:24,780
up the puppet apply right so there is no

00:42:23,250 --> 00:42:27,420
puppet master there's no nothing so it's

00:42:24,780 --> 00:42:28,920
a masterless puppet set up so all I do

00:42:27,420 --> 00:42:35,960
is angel I'm saying here's my module

00:42:28,920 --> 00:42:39,450
path here is my config file go right so

00:42:35,960 --> 00:42:42,000
it's going to be a little bit boring in

00:42:39,450 --> 00:42:44,190
the next couple of minutes I guess well

00:42:42,000 --> 00:42:46,110
you know we will put it in but

00:42:44,190 --> 00:42:48,450
essentially I I keep keep talking

00:42:46,110 --> 00:42:49,740
through and entertaining you so one of

00:42:48,450 --> 00:42:51,300
the things i wanted to mention when no

00:42:49,740 --> 00:42:53,490
one was available was speaking he said

00:42:51,300 --> 00:42:57,510
like we wanna we wanted this to be a

00:42:53,490 --> 00:43:02,790
fedora linux oh no wait you wanted to be

00:42:57,510 --> 00:43:05,580
debian of linux red to start with but at

00:43:02,790 --> 00:43:07,530
any rate actually it wasn't interesting

00:43:05,580 --> 00:43:09,840
i I bumped into the guy who is hidden

00:43:07,530 --> 00:43:12,330
with the center sign behind him read in

00:43:09,840 --> 00:43:13,590
the morning today and I came to him and

00:43:12,330 --> 00:43:15,630
said like hey dude did you see any

00:43:13,590 --> 00:43:19,160
anyone from canonical yet I told he's

00:43:15,630 --> 00:43:21,450
gonna he's got a hitter's oven in her

00:43:19,160 --> 00:43:23,700
butt right so what's going on right now

00:43:21,450 --> 00:43:24,960
so puppet is actually installing install

00:43:23,700 --> 00:43:27,090
the packages from the from our

00:43:24,960 --> 00:43:29,060
repository red accord introduced on the

00:43:27,090 --> 00:43:31,590
list of the components that they said

00:43:29,060 --> 00:43:34,980
because it's essentially young process

00:43:31,590 --> 00:43:36,510
it yeah that's red hat red so in this

00:43:34,980 --> 00:43:38,880
particular case it pulls all the

00:43:36,510 --> 00:43:40,950
dependencies that that have to to be

00:43:38,880 --> 00:43:43,650
there and the beauty actually of this

00:43:40,950 --> 00:43:45,900
particular stack or Reno off of the way

00:43:43,650 --> 00:43:49,860
of building the stack is that this park

00:43:45,900 --> 00:43:52,830
which has a pretty tightly reliance on

00:43:49,860 --> 00:43:55,500
say HDFS api's and all red is built

00:43:52,830 --> 00:43:57,960
guarantee against the diversion of the

00:43:55,500 --> 00:44:00,300
Hadoop that I'm just just installing so

00:43:57,960 --> 00:44:02,010
there is no leeway to install a little

00:44:00,300 --> 00:44:03,840
bit better version of HDFS that might

00:44:02,010 --> 00:44:05,640
screw up everything reza oui oui

00:44:03,840 --> 00:44:08,040
actually guarantee that the

00:44:05,640 --> 00:44:11,310
compatibility of the binary AP eyes and

00:44:08,040 --> 00:44:14,850
you know our pc versions are other right

00:44:11,310 --> 00:44:19,170
so as built okay so once the

00:44:14,850 --> 00:44:24,660
installation happened we are going to

00:44:19,170 --> 00:44:32,730
see does it do anything at all it's

00:44:24,660 --> 00:44:36,120
better okay yeah it works okay good so

00:44:32,730 --> 00:44:38,430
um once once the installation happened

00:44:36,120 --> 00:44:39,720
the department recipes will will

00:44:38,430 --> 00:44:41,940
generate actually a bunch of the

00:44:39,720 --> 00:44:43,830
appropriate config files that will

00:44:41,940 --> 00:44:46,320
guarantee that again spark or whatever

00:44:43,830 --> 00:44:47,730
HBase correctly works against the Hadoop

00:44:46,320 --> 00:44:49,620
cluster there just has been installed

00:44:47,730 --> 00:44:51,090
and configured and most important

00:44:49,620 --> 00:44:54,090
actually properly deploy it in the sense

00:44:51,090 --> 00:44:55,890
of like for Martin HDFS are creating the

00:44:54,090 --> 00:44:57,660
the appropriate structures on the file

00:44:55,890 --> 00:44:59,490
system which usually you know the

00:44:57,660 --> 00:45:01,740
problem for many people who just tryin

00:44:59,490 --> 00:45:03,750
name node and trying to run say

00:45:01,740 --> 00:45:06,090
MapReduce job and job tracker fails

00:45:03,750 --> 00:45:09,150
because some permissions aceptaron

00:45:06,090 --> 00:45:13,610
alright so our deployment mechanism xeo

00:45:09,150 --> 00:45:16,800
takes care about this as well um and so

00:45:13,610 --> 00:45:19,440
now we write we go on through the is

00:45:16,800 --> 00:45:22,080
defense installation and as I said once

00:45:19,440 --> 00:45:23,970
the configurations I actually said the

00:45:22,080 --> 00:45:25,950
department again will guarantee that the

00:45:23,970 --> 00:45:30,330
services actual started in the wrong min

00:45:25,950 --> 00:45:33,030
right you know sequence for instance the

00:45:30,330 --> 00:45:34,470
the the the data node would not be

00:45:33,030 --> 00:45:36,090
started before named know the door

00:45:34,470 --> 00:45:38,370
technically speaking I can do this and

00:45:36,090 --> 00:45:40,920
data node would wait but again in our

00:45:38,370 --> 00:45:43,620
deployment mechanism arm it won't happen

00:45:40,920 --> 00:45:45,900
the great part about this this way we

00:45:43,620 --> 00:45:47,910
doing was deposited a know if we have

00:45:45,900 --> 00:45:51,690
any any of the devil steps in the in the

00:45:47,910 --> 00:45:55,620
room but normally pop it works in a sort

00:45:51,690 --> 00:45:59,100
of slightly static way in the sense that

00:45:55,620 --> 00:46:01,200
you need to define recipes for

00:45:59,100 --> 00:46:04,500
particular costs and then store them

00:46:01,200 --> 00:46:08,369
somewhere else and just you know run

00:46:04,500 --> 00:46:10,259
puppet apply on the agents and you know

00:46:08,369 --> 00:46:12,450
the configuration got pulled from the

00:46:10,259 --> 00:46:14,730
master and via Raia Raia that cancer so

00:46:12,450 --> 00:46:17,160
in our case is totally totally flexible

00:46:14,730 --> 00:46:20,400
so you can actually run pop it on as

00:46:17,160 --> 00:46:22,079
many houses you want you as far as the

00:46:20,400 --> 00:46:23,490
config file is the same essential rate

00:46:22,079 --> 00:46:25,769
and all the configurations would be

00:46:23,490 --> 00:46:28,529
correct all the data nodes would be

00:46:25,769 --> 00:46:30,720
pointing to the same name node and the

00:46:28,529 --> 00:46:34,430
canister okay so we we almost there I

00:46:30,720 --> 00:46:36,509
guess and we're running out of time yes

00:46:34,430 --> 00:46:38,279
questions oh yeah actually we can do it

00:46:36,509 --> 00:46:41,640
we can do questions while we because

00:46:38,279 --> 00:46:44,759
we're probably gonna gonna be short on

00:46:41,640 --> 00:46:49,109
time if you guys have any questions we

00:46:44,759 --> 00:46:50,249
have a mic here in indy or you can

00:46:49,109 --> 00:46:51,960
actually hold the questions and come

00:46:50,249 --> 00:46:56,430
tonight for for the hackathon in the

00:46:51,960 --> 00:47:03,299
median sell anything anyone know oh here

00:46:56,430 --> 00:47:04,980
we go there's just just second just a

00:47:03,299 --> 00:47:07,999
small question regarding testing so

00:47:04,980 --> 00:47:10,650
you'll present some study cases how

00:47:07,999 --> 00:47:13,109
how's integration tested is organized at

00:47:10,650 --> 00:47:16,440
tools will collect some custom data and

00:47:13,109 --> 00:47:19,499
feel what rises those with a real data

00:47:16,440 --> 00:47:22,470
and just hope cluster nodes and I had to

00:47:19,499 --> 00:47:25,049
I which way so could you explain a bit

00:47:22,470 --> 00:47:26,839
more in degrade right so the the

00:47:25,049 --> 00:47:29,069
traditional I would say we quote unquote

00:47:26,839 --> 00:47:30,989
we were doing the integration testing

00:47:29,069 --> 00:47:33,890
right now on big top is yes we actually

00:47:30,989 --> 00:47:36,269
have small small data sets pre-generated

00:47:33,890 --> 00:47:37,769
unlike up unless we're doing something

00:47:36,269 --> 00:47:39,779
like guarantee resort which is totally

00:47:37,769 --> 00:47:41,099
dynamic and that kind of stuff right but

00:47:39,779 --> 00:47:42,720
most of them are actually are

00:47:41,099 --> 00:47:44,999
aesthetically generated and stored

00:47:42,720 --> 00:47:47,220
within the system so for instance 445

00:47:44,999 --> 00:47:48,960
big a bass test we have some some

00:47:47,220 --> 00:47:50,369
regenerated eight however there's

00:47:48,960 --> 00:47:54,900
actually project happening right now

00:47:50,369 --> 00:47:58,079
zero opened in the big top called the

00:47:54,900 --> 00:48:01,069
Big Data pets tourists I think a big top

00:47:58,079 --> 00:48:04,170
past or something like that which is

00:48:01,069 --> 00:48:06,599
about the the dynamic generation of the

00:48:04,170 --> 00:48:08,880
data sets so you can actually test the

00:48:06,599 --> 00:48:10,799
cluster and full right not necessarily

00:48:08,880 --> 00:48:14,099
just you know integration stuff but

00:48:10,799 --> 00:48:16,230
maybe you know bigger load or maybe some

00:48:14,099 --> 00:48:18,210
algorithm to make sure how to scale you

00:48:16,230 --> 00:48:19,220
know the kind stuff right so yes it is

00:48:18,210 --> 00:48:20,780
there an

00:48:19,220 --> 00:48:24,880
you if you have some ideas come and i

00:48:20,780 --> 00:48:30,140
won't contribute okay thanks yeah sure

00:48:24,880 --> 00:48:32,720
other questions we are about to be done

00:48:30,140 --> 00:48:36,020
name those darts hopefully it's gonna

00:48:32,720 --> 00:48:38,510
work what is what contributions so what

00:48:36,020 --> 00:48:40,119
what contributions are you looking for

00:48:38,510 --> 00:48:42,070
tickets once what distributions

00:48:40,119 --> 00:48:44,840
contributions Oh what contributions

00:48:42,070 --> 00:48:46,970
Roman was talking about tests and bet

00:48:44,840 --> 00:48:49,310
some pcs just prefer any admitted it may

00:48:46,970 --> 00:48:50,960
be a ms in a position to contribute to

00:48:49,310 --> 00:48:52,700
what Specter actually anything actually

00:48:50,960 --> 00:48:55,040
anything so this is the great question

00:48:52,700 --> 00:48:57,619
because Roman didn't specify you know

00:48:55,040 --> 00:48:59,210
the eligibility for the keg of beer so I

00:48:57,619 --> 00:49:01,040
guess I gonna I going to contribute

00:48:59,210 --> 00:49:03,410
couple tests tonight so you'll go to

00:49:01,040 --> 00:49:06,619
store them but seriously I mean this is

00:49:03,410 --> 00:49:08,090
this is the case where the merrier the

00:49:06,619 --> 00:49:11,900
better I mean David the more the merrier

00:49:08,090 --> 00:49:14,510
sir we will look in for for anything I

00:49:11,900 --> 00:49:16,580
mean test contributions code

00:49:14,510 --> 00:49:18,770
contributions test from a contribution

00:49:16,580 --> 00:49:20,780
packaging code contribution puppet so I

00:49:18,770 --> 00:49:23,869
mean as I said we had the focal point of

00:49:20,780 --> 00:49:26,869
Hadoop ecosystem I literally you know

00:49:23,869 --> 00:49:30,800
not trying to you know look better than

00:49:26,869 --> 00:49:33,380
am but although i'm not looking better

00:49:30,800 --> 00:49:35,599
but anyway so we're really the focal

00:49:33,380 --> 00:49:37,280
point of the of the ecosystem right so

00:49:35,599 --> 00:49:39,740
we we need to deal with a lot of

00:49:37,280 --> 00:49:45,589
complexities that's where actually

00:49:39,740 --> 00:49:47,119
anyone can can be highly useful we still

00:49:45,589 --> 00:49:53,089
don't have any doctor actually we do

00:49:47,119 --> 00:49:57,650
have a project again working there and

00:49:53,089 --> 00:49:59,450
you doing this right but yeah and as i

00:49:57,650 --> 00:50:01,250
said actually right now we form it in

00:49:59,450 --> 00:50:02,900
the depositor sexual does the different

00:50:01,250 --> 00:50:05,420
matt enough HDFS filesystem so we bought

00:50:02,900 --> 00:50:08,839
you to have the class already any any

00:50:05,420 --> 00:50:09,980
other questions i'm sorry but i think we

00:50:08,839 --> 00:50:12,890
need to close the Christians we're out

00:50:09,980 --> 00:50:17,240
of time we actually have 20 seconds come

00:50:12,890 --> 00:50:20,150
on no let's go discount account and oh

00:50:17,240 --> 00:50:21,859
we actually over time I am God give me a

00:50:20,150 --> 00:50:24,560
give me please five seconds guys it's

00:50:21,859 --> 00:50:29,330
it's actually it is done I won't be able

00:50:24,560 --> 00:50:31,530
to run dddd real real sort of red so we

00:50:29,330 --> 00:50:34,410
have the stuff I am expert in

00:50:31,530 --> 00:50:35,970
I am expert in the master variable

00:50:34,410 --> 00:50:38,640
essentially red so for those who know

00:50:35,970 --> 00:50:39,750
what was going on I'm running this park

00:50:38,640 --> 00:50:42,390
shell which is in the interactive

00:50:39,750 --> 00:50:44,400
scholar environment that allows me to to

00:50:42,390 --> 00:50:47,850
work with the cluster and again sorry

00:50:44,400 --> 00:50:51,780
timers out but this is the the working

00:50:47,850 --> 00:50:55,590
totally working spark on top of HDFS

00:50:51,780 --> 00:50:57,630
cluster so I blame you Roman actually

00:50:55,590 --> 00:50:58,920
for for for being out of time but I

00:50:57,630 --> 00:51:00,210
think you only think you thank you so

00:50:58,920 --> 00:51:01,590
much guys please come and join us

00:51:00,210 --> 00:51:07,100
actually it's pretty pretty cool stuff

00:51:01,590 --> 00:51:07,100

YouTube URL: https://www.youtube.com/watch?v=VZzJxsMJahc


