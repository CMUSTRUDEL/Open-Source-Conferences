Title: Introducing Apache Traffic Server
Publication date: 2013-10-17
Playlist: Apachecon NA 2013 - day 1
Description: 
	Igor GaliÄ‡
ApacheCon NA 2013
Track : A Patchy Web
Captions: 
	00:00:00,000 --> 00:00:04,980
Thank You Lewis since the light is a

00:00:02,490 --> 00:00:11,250
little bit blinding I'm going to keep my

00:00:04,980 --> 00:00:12,840
hat on they put me as final session for

00:00:11,250 --> 00:00:14,519
comedic relief I know I'm competing

00:00:12,840 --> 00:00:17,130
against beer but I'd still like to

00:00:14,519 --> 00:00:26,970
introduce traffic server so thank you

00:00:17,130 --> 00:00:30,560
all for staying here and welcome to my

00:00:26,970 --> 00:00:30,560
little introduction of my pet project

00:00:32,570 --> 00:00:40,440
for those of you who don't know me and

00:00:36,739 --> 00:00:45,739
I'm ego garlic I'm a member of the

00:00:40,440 --> 00:00:51,030
apache software foundation and I work on

00:00:45,739 --> 00:00:53,070
httpd and traffic server though traffic

00:00:51,030 --> 00:00:57,270
servers been occupying most of my time

00:00:53,070 --> 00:01:02,100
lately so I don't work on traffic on a

00:00:57,270 --> 00:01:06,630
CPD anymore on so that much you can find

00:01:02,100 --> 00:01:08,340
me on the Internet most of the time you

00:01:06,630 --> 00:01:10,920
can tweet me this is a picture of me

00:01:08,340 --> 00:01:12,510
from last time maybe I can update my

00:01:10,920 --> 00:01:15,659
next presentation with a prettier

00:01:12,510 --> 00:01:18,119
picture but I'd suppose I would have to

00:01:15,659 --> 00:01:23,729
update it with a different face yes I

00:01:18,119 --> 00:01:29,280
know life is a little bit of an overview

00:01:23,729 --> 00:01:31,320
what we're going to be looking at we'll

00:01:29,280 --> 00:01:34,829
take a look at who uses traffic serve

00:01:31,320 --> 00:01:39,990
and there are a few users of traffic

00:01:34,829 --> 00:01:42,030
server representing the company or not

00:01:39,990 --> 00:01:50,520
but maybe they can tell you what they're

00:01:42,030 --> 00:01:53,960
using it for and I hope they will I just

00:01:50,520 --> 00:01:53,960
realized this a little bit out of order

00:01:57,280 --> 00:02:04,400
like I said I'm here for comedic relief

00:02:00,259 --> 00:02:08,840
I know I'm competing against beer so

00:02:04,400 --> 00:02:11,569
what's a proxy cache and why you should

00:02:08,840 --> 00:02:16,580
use traffic server and we'll also look

00:02:11,569 --> 00:02:19,489
at the history of traffic server which

00:02:16,580 --> 00:02:23,720
is how it got open source and how it got

00:02:19,489 --> 00:02:26,840
into Apache and what you can do for your

00:02:23,720 --> 00:02:36,950
project if it's a commercial project to

00:02:26,840 --> 00:02:38,870
get it open and i'm going to leave 15

00:02:36,950 --> 00:02:41,900
minutes maybe for questions but you can

00:02:38,870 --> 00:02:47,600
interrupt me anytime with with questions

00:02:41,900 --> 00:02:50,209
and i'm probably doing a bad job here

00:02:47,600 --> 00:02:53,420
but I'd like people to get involved in

00:02:50,209 --> 00:02:56,180
traffic server we need we need to see

00:02:53,420 --> 00:02:58,450
much much more involvement especially in

00:02:56,180 --> 00:03:04,269
a couple of areas where we're lacking

00:02:58,450 --> 00:03:04,269
like documentation and presentation

00:03:04,540 --> 00:03:14,390
another thing that we'll see tomorrow

00:03:07,730 --> 00:03:19,850
mate is Ellen will be talking about

00:03:14,390 --> 00:03:22,000
traffic server as well so if I didn't

00:03:19,850 --> 00:03:24,760
manage to scare you all off completely

00:03:22,000 --> 00:03:28,730
you should take a look at another

00:03:24,760 --> 00:03:33,950
interesting use case of of this software

00:03:28,730 --> 00:03:36,769
that I haven't I haven't quite seen yet

00:03:33,950 --> 00:03:44,840
because yeah it's it's big and complex

00:03:36,769 --> 00:03:50,060
and can use use it for many things so

00:03:44,840 --> 00:03:55,250
here's from our website a list of

00:03:50,060 --> 00:04:00,319
prominent traffic server uses yahoo of

00:03:55,250 --> 00:04:03,290
course who donated to the software Brian

00:04:00,319 --> 00:04:08,240
can you wave to the people yes he's he's

00:04:03,290 --> 00:04:12,560
from you who comcast

00:04:08,240 --> 00:04:17,030
and to bow which is a company in China

00:04:12,560 --> 00:04:22,330
who are pushing insane insane amounts of

00:04:17,030 --> 00:04:27,410
traffic over over traffic server

00:04:22,330 --> 00:04:33,500
linkedin I don't see Brian did you did

00:04:27,410 --> 00:04:37,940
you leave him somewhere or and omni TI

00:04:33,500 --> 00:04:40,820
we've seen the ocean a snuggle this

00:04:37,940 --> 00:04:45,500
morning talked and talked a bit about

00:04:40,820 --> 00:04:50,180
traffic server as well so all of these

00:04:45,500 --> 00:04:59,090
companies are using different aspects of

00:04:50,180 --> 00:05:01,850
of traffic server and yeah simply

00:04:59,090 --> 00:05:05,180
because we we have so many different use

00:05:01,850 --> 00:05:07,760
cases maybe you should take a look at

00:05:05,180 --> 00:05:10,910
what you can do with a proxy and with a

00:05:07,760 --> 00:05:15,440
cache and what traffic server in

00:05:10,910 --> 00:05:20,450
particular can do for you so what what

00:05:15,440 --> 00:05:24,560
is a proxy what is a cash what a proxy

00:05:20,450 --> 00:05:28,430
basically does for you is it helps you

00:05:24,560 --> 00:05:33,380
shorten this distance between a user and

00:05:28,430 --> 00:05:36,620
your website and this can be across the

00:05:33,380 --> 00:05:39,500
globe this can be within your company

00:05:36,620 --> 00:05:42,170
learn it doesn't really matter it helps

00:05:39,500 --> 00:05:46,810
you simply shorten just this distance

00:05:42,170 --> 00:05:50,390
and it can do this in a number of ways

00:05:46,810 --> 00:05:53,990
it can do this as a forward proxy by

00:05:50,390 --> 00:05:59,990
making those requests for you into the

00:05:53,990 --> 00:06:01,760
internet it can do this same thing as an

00:05:59,990 --> 00:06:03,590
intercepting proxy as a transparent

00:06:01,760 --> 00:06:06,140
proxy and this is what Ellen will be

00:06:03,590 --> 00:06:09,280
talking tomorrow so you don't have to

00:06:06,140 --> 00:06:12,170
even take care of the configuration in

00:06:09,280 --> 00:06:15,500
your company lon you simply configure

00:06:12,170 --> 00:06:18,710
all connections that go out into the

00:06:15,500 --> 00:06:21,220
internet to go through a transparent

00:06:18,710 --> 00:06:24,860
proxy and

00:06:21,220 --> 00:06:30,620
and this proxy will then take care of

00:06:24,860 --> 00:06:33,410
making the connections or you can use it

00:06:30,620 --> 00:06:35,750
as a reverse proxy and put it in front

00:06:33,410 --> 00:06:38,240
of your application servers so that they

00:06:35,750 --> 00:06:43,660
don't have to take every single hit

00:06:38,240 --> 00:06:47,830
because this proxy server can then cash

00:06:43,660 --> 00:06:51,140
those requests in a sensible manner

00:06:47,830 --> 00:06:54,770
sometimes it's enough to cash it for

00:06:51,140 --> 00:06:57,530
just 10 seconds as we've heard or one

00:06:54,770 --> 00:07:01,270
second as we've heard feel talk because

00:06:57,530 --> 00:07:06,320
it's it's simply not necessary to have

00:07:01,270 --> 00:07:11,860
this this level of freshness but

00:07:06,320 --> 00:07:15,890
oftentimes you can cash things forever

00:07:11,860 --> 00:07:18,050
images are a good a good example static

00:07:15,890 --> 00:07:21,020
assets you can catch those simply

00:07:18,050 --> 00:07:22,700
forever and when it's time to update an

00:07:21,020 --> 00:07:26,150
image you simply rename it you give the

00:07:22,700 --> 00:07:29,750
version just like you would give with

00:07:26,150 --> 00:07:31,370
any other package or any other thing

00:07:29,750 --> 00:07:37,400
that you release you give it a new

00:07:31,370 --> 00:07:45,680
version you deploy it and that way you

00:07:37,400 --> 00:07:49,340
can once again store it forever and yeah

00:07:45,680 --> 00:07:54,800
this these are the things that a a proxy

00:07:49,340 --> 00:07:58,070
cache can do for you it simply it can

00:07:54,800 --> 00:08:01,460
eliminate a big number of requests for

00:07:58,070 --> 00:08:07,730
one and for the etta it can shorten the

00:08:01,460 --> 00:08:15,200
distance to your users and this is the

00:08:07,730 --> 00:08:18,800
this idea is what this idea is what

00:08:15,200 --> 00:08:22,190
gives us CD ends so if i have my users

00:08:18,800 --> 00:08:24,470
or a big big chunk of my users sitting

00:08:22,190 --> 00:08:26,960
in India for instance it will be a

00:08:24,470 --> 00:08:30,410
horrible user experience if they have to

00:08:26,960 --> 00:08:33,380
go across the globe to reach my website

00:08:30,410 --> 00:08:38,610
so it really helps a lot

00:08:33,380 --> 00:08:41,899
if I position a a server in India but I

00:08:38,610 --> 00:08:46,020
don't want to take care of this server I

00:08:41,899 --> 00:08:48,870
I don't want to deploy anything on that

00:08:46,020 --> 00:08:51,450
server so the easiest solution is to put

00:08:48,870 --> 00:08:56,220
a proxy server there a caching proxy

00:08:51,450 --> 00:09:02,370
server and configure the DNS such that

00:08:56,220 --> 00:09:05,250
in India it points to my cash and this

00:09:02,370 --> 00:09:07,620
cash then goes back to and Germany

00:09:05,250 --> 00:09:10,440
fetches the side and delivers it to the

00:09:07,620 --> 00:09:12,510
user so for the first access of course

00:09:10,440 --> 00:09:17,399
this will still be slow but every

00:09:12,510 --> 00:09:19,830
consecutive access will will be much

00:09:17,399 --> 00:09:31,190
shorter and give people a much better

00:09:19,830 --> 00:09:33,990
experience okay I'd like to use this for

00:09:31,190 --> 00:09:39,000
like to use this here as a little bit of

00:09:33,990 --> 00:09:40,800
a break and I'd like to call up a few of

00:09:39,000 --> 00:09:43,320
those people who are sitting here and

00:09:40,800 --> 00:09:45,029
representing different and companies or

00:09:43,320 --> 00:09:48,630
different parts of our development

00:09:45,029 --> 00:09:52,370
communities and just show give you a

00:09:48,630 --> 00:09:55,890
short idea of what they are using

00:09:52,370 --> 00:09:57,930
traffic server for so I'll lose if you

00:09:55,890 --> 00:10:08,070
could either hand the micro through the

00:09:57,930 --> 00:10:13,800
round or that's way well start with life

00:10:08,070 --> 00:10:15,600
or with Ellen ah I don't use it

00:10:13,800 --> 00:10:18,300
personally I have do consulting and have

00:10:15,600 --> 00:10:21,029
several clients who use it one uses it

00:10:18,300 --> 00:10:23,329
for local ISP work so they can minimize

00:10:21,029 --> 00:10:26,250
the bandwidth they have going upstream

00:10:23,329 --> 00:10:28,230
while still serving rapidly to their

00:10:26,250 --> 00:10:30,450
local clients by caching things that are

00:10:28,230 --> 00:10:32,630
commonly used across the local site

00:10:30,450 --> 00:10:35,490
would be similar to a corporate net

00:10:32,630 --> 00:10:38,240
another client who uses it to do

00:10:35,490 --> 00:10:40,560
basically middleware they use it to

00:10:38,240 --> 00:10:42,050
download original content in different

00:10:40,560 --> 00:10:44,660
formats and then

00:10:42,050 --> 00:10:47,660
by cashing a tree serve that reformatted

00:10:44,660 --> 00:10:50,240
content to various clients very rapidly

00:10:47,660 --> 00:10:53,330
without burdening the original servers

00:10:50,240 --> 00:10:54,709
nearly as much saving them their

00:10:53,330 --> 00:10:59,690
upstream costs and making their

00:10:54,709 --> 00:11:02,329
customers get better results I'm Brian

00:10:59,690 --> 00:11:05,060
call from yahoo I was one of the

00:11:02,329 --> 00:11:09,649
original developers that helped open

00:11:05,060 --> 00:11:12,050
source patchy traffic server currently

00:11:09,649 --> 00:11:14,089
we still we have two versions of traffic

00:11:12,050 --> 00:11:15,890
sir Yahoo we have our original Yahoo

00:11:14,089 --> 00:11:18,170
traffic server and then we have apache

00:11:15,890 --> 00:11:20,140
traffic server I maintain the packages

00:11:18,170 --> 00:11:22,070
or Apache traffic server and make

00:11:20,140 --> 00:11:24,800
special tweaks and stuff to the code

00:11:22,070 --> 00:11:27,529
that we need we have it completely for

00:11:24,800 --> 00:11:29,990
our CDN or CDN is completely running off

00:11:27,529 --> 00:11:32,290
of Apache traffic server runs a lot

00:11:29,990 --> 00:11:34,990
faster than our original version did

00:11:32,290 --> 00:11:38,350
less bugs it doesn't crash is often

00:11:34,990 --> 00:11:41,300
easier to maintain and things like that

00:11:38,350 --> 00:11:43,100
and then also we get the benefit of

00:11:41,300 --> 00:11:45,430
getting all the patches and stuff from

00:11:43,100 --> 00:11:48,560
the open-source development community

00:11:45,430 --> 00:11:49,940
that's about it there's other groups

00:11:48,560 --> 00:11:51,920
that are actually starting to use a

00:11:49,940 --> 00:11:54,649
patch of traffic server all of our

00:11:51,920 --> 00:11:56,510
calendar and stuff runs on Apache

00:11:54,649 --> 00:11:59,300
traffic server and a few other internal

00:11:56,510 --> 00:12:01,610
groups that continually ping me and ask

00:11:59,300 --> 00:12:03,950
me questions and help them diagnose

00:12:01,610 --> 00:12:07,810
their problems or I help them diagnose

00:12:03,950 --> 00:12:07,810
problems that's about it

00:12:08,760 --> 00:12:13,959
my name is John fedora uh I work at

00:12:11,470 --> 00:12:16,720
comcast we we distribute video with

00:12:13,959 --> 00:12:19,240
batch traffic server and and have really

00:12:16,720 --> 00:12:20,680
great plans of distributing a lot of

00:12:19,240 --> 00:12:24,040
video using a batch of traffic server

00:12:20,680 --> 00:12:26,019
most of the video right now is multicast

00:12:24,040 --> 00:12:29,470
video up until the edge we're moving

00:12:26,019 --> 00:12:32,050
that to make it a point to point video

00:12:29,470 --> 00:12:33,699
HTTP requests basically and traffic

00:12:32,050 --> 00:12:41,050
server is an incredible tool to do that

00:12:33,699 --> 00:12:44,850
for us so yeah we get an evaluation in

00:12:41,050 --> 00:12:47,500
the beginning of 2012 of all the caching

00:12:44,850 --> 00:12:49,750
software proxy software caching software

00:12:47,500 --> 00:12:51,670
that was out there and traffic server

00:12:49,750 --> 00:12:52,959
just performs outperforms anything

00:12:51,670 --> 00:12:55,510
that's out there right now for the use

00:12:52,959 --> 00:12:58,839
case that we have which is very very

00:12:55,510 --> 00:13:01,540
large library video and incredibly long

00:12:58,839 --> 00:13:04,329
tail in the terms of how we speak of it

00:13:01,540 --> 00:13:06,790
which means we have any a lot of content

00:13:04,329 --> 00:13:09,399
and we need to distribute that to our

00:13:06,790 --> 00:13:14,199
customers it seems to outperform

00:13:09,399 --> 00:13:16,240
anything that's out there right now yeah

00:13:14,199 --> 00:13:19,060
so if you go to our right now if you use

00:13:16,240 --> 00:13:22,269
our Xbox application or if you use your

00:13:19,060 --> 00:13:24,880
iPad or iPhone or your pc to go to our

00:13:22,269 --> 00:13:26,140
xfinity TV com website all of that

00:13:24,880 --> 00:13:27,790
traffic goes through a patch of traffic

00:13:26,140 --> 00:13:29,470
server we have hundreds of servers right

00:13:27,790 --> 00:13:33,820
now we plan on having thousands of

00:13:29,470 --> 00:13:35,620
servers or agusta the cable box not but

00:13:33,820 --> 00:13:38,769
we are deploying we starting to deploy

00:13:35,620 --> 00:13:40,899
in January in july of this year we will

00:13:38,769 --> 00:13:43,120
start deploying cable boxes that will be

00:13:40,899 --> 00:13:46,269
using IP to get their video on the map

00:13:43,120 --> 00:13:48,279
the broadcast live TV we also want to do

00:13:46,269 --> 00:13:50,410
on Apache traffic server but that's a

00:13:48,279 --> 00:13:52,899
little bit longer down the road and we

00:13:50,410 --> 00:13:54,790
will have you know things like ABC CBS

00:13:52,899 --> 00:13:57,990
NBC those channels will always be

00:13:54,790 --> 00:13:57,990
multicast all the way to decline

00:13:58,750 --> 00:14:03,850
thank you just a quick reminder if you

00:14:01,450 --> 00:14:06,490
if somebody's got a question and then

00:14:03,850 --> 00:14:08,460
don't have a micro please repeat it

00:14:06,490 --> 00:14:20,170
because we're recording the sessions

00:14:08,460 --> 00:14:21,850
okay this hi I'm Brian and this is man

00:14:20,170 --> 00:14:23,440
Josh we're from LinkedIn so we're

00:14:21,850 --> 00:14:25,680
actually heavily invested in traffic

00:14:23,440 --> 00:14:28,840
server also so we use traffic server

00:14:25,680 --> 00:14:30,460
everywhere from the edge down to we

00:14:28,840 --> 00:14:33,160
actually use it internally for caching

00:14:30,460 --> 00:14:36,100
as well so we use apache traffic server

00:14:33,160 --> 00:14:37,840
as actually our security tier so this is

00:14:36,100 --> 00:14:40,390
at the edge we actually use it for

00:14:37,840 --> 00:14:42,400
optimization and security so we've

00:14:40,390 --> 00:14:44,050
actually also integrated Google's page

00:14:42,400 --> 00:14:45,790
speed library to do page free

00:14:44,050 --> 00:14:47,800
transformations on content as it's going

00:14:45,790 --> 00:14:49,680
out from the client a Patrick traffic

00:14:47,800 --> 00:14:52,030
server has been been great for that

00:14:49,680 --> 00:14:54,060
we've used it as I've mentioned for

00:14:52,030 --> 00:14:57,040
security so we'll do all kinds of

00:14:54,060 --> 00:15:01,900
blocking based on a number of rules in

00:14:57,040 --> 00:15:03,670
and authentication I'll mention this

00:15:01,900 --> 00:15:06,820
later when I come to extensibility but

00:15:03,670 --> 00:15:08,890
are you using Iran be I we've looked at

00:15:06,820 --> 00:15:11,040
iron B we're not using iron be okay

00:15:08,890 --> 00:15:13,420
we've we've basically developed our own

00:15:11,040 --> 00:15:15,880
security infrastructure on top of it

00:15:13,420 --> 00:15:18,190
like them but that's just a testament to

00:15:15,880 --> 00:15:20,500
a patch of traffic servers a great

00:15:18,190 --> 00:15:24,130
plug-in environment it's absolutely

00:15:20,500 --> 00:15:26,920
unbelievable what you can do also we use

00:15:24,130 --> 00:15:28,810
it internally for development tools so

00:15:26,920 --> 00:15:31,060
when engineers are building a new future

00:15:28,810 --> 00:15:32,830
developing a new web app we've used

00:15:31,060 --> 00:15:36,339
apache tropics or refer a lot to allow

00:15:32,830 --> 00:15:38,170
them to share their web apps and so all

00:15:36,339 --> 00:15:42,370
our development happens through a single

00:15:38,170 --> 00:15:44,830
Apache traffic server box its bolts it's

00:15:42,370 --> 00:15:48,810
redundant but one box can support all

00:15:44,830 --> 00:15:53,490
the development live live

00:15:48,810 --> 00:15:55,140
that's going to happen it at velocity so

00:15:53,490 --> 00:15:57,840
the question was when is linked in an

00:15:55,140 --> 00:15:59,730
open source our version of page speed

00:15:57,840 --> 00:16:01,290
which is a transformation on top of the

00:15:59,730 --> 00:16:04,560
patch traffic server and that's going to

00:16:01,290 --> 00:16:07,740
happen at at velocity this year in santa

00:16:04,560 --> 00:16:11,580
clara are hopefully sooner but no later

00:16:07,740 --> 00:16:14,460
than velocity so yeah what else do we

00:16:11,580 --> 00:16:17,029
use it for leave anything up oh we use

00:16:14,460 --> 00:16:20,400
it for you I content aggregation so

00:16:17,029 --> 00:16:22,890
because Patrick traffic servers model

00:16:20,400 --> 00:16:25,290
allows you to fetch content in parallel

00:16:22,890 --> 00:16:28,260
we're actually able to assemble

00:16:25,290 --> 00:16:30,390
documents in real time from a number of

00:16:28,260 --> 00:16:33,150
different web services so we do it for

00:16:30,390 --> 00:16:36,150
you I content aggregation and we use it

00:16:33,150 --> 00:16:37,230
basically everywhere so every single

00:16:36,150 --> 00:16:44,279
request goes through a patch of traffic

00:16:37,230 --> 00:16:52,220
server several times that's it ok gel do

00:16:44,279 --> 00:16:52,220
you want to say anything Louis

00:16:53,509 --> 00:17:01,100
I'm from our China tall balding com I

00:16:57,689 --> 00:17:04,439
think I'm the Biggest Loser in the

00:17:01,100 --> 00:17:08,750
community we have about two thousand

00:17:04,439 --> 00:17:14,039
boxes raining traffic so happy creator

00:17:08,750 --> 00:17:19,409
poster about therapies therapies per

00:17:14,039 --> 00:17:25,919
second this is very stable in our your

00:17:19,409 --> 00:17:29,940
city your surgery and very efficient we

00:17:25,919 --> 00:17:35,970
are doing the reverse proxy in

00:17:29,940 --> 00:17:40,250
production for the biggest size busy

00:17:35,970 --> 00:17:42,919
society in China if you have any

00:17:40,250 --> 00:17:48,210
constraints on the stabbing stabbing

00:17:42,919 --> 00:17:51,950
stabbing this step greasy and and class

00:17:48,210 --> 00:17:55,860
there are all the hardware

00:17:51,950 --> 00:18:02,580
configurations please yummy find me on

00:17:55,860 --> 00:18:04,980
the community okay thank you okay so as

00:18:02,580 --> 00:18:11,210
you see the use cases are pretty diverse

00:18:04,980 --> 00:18:16,740
I myself have used it as a replace for

00:18:11,210 --> 00:18:19,200
apache httpd as as a front end I know

00:18:16,740 --> 00:18:21,570
Jim is going to have a talk about mod

00:18:19,200 --> 00:18:26,149
proxy and how awesome is it is but yeah

00:18:21,570 --> 00:18:26,149
I I switched the traffic server for

00:18:29,240 --> 00:18:40,950
simply because the cash is is so so much

00:18:35,370 --> 00:18:46,020
more stable than that of of a cheap ed

00:18:40,950 --> 00:18:49,440
and and the reason for this is because I

00:18:46,020 --> 00:18:54,270
can simply bypass the biggest hurdle in

00:18:49,440 --> 00:18:58,669
mod cash in the case of mod cash which

00:18:54,270 --> 00:19:01,530
is the file system in traffic server we

00:18:58,669 --> 00:19:05,890
we just don't use the file system you

00:19:01,530 --> 00:19:08,710
give the cash an entire disk or

00:19:05,890 --> 00:19:11,650
better a couple of disks and writes raw

00:19:08,710 --> 00:19:13,890
to those disks that's what we recommend

00:19:11,650 --> 00:19:17,710
for production use anyway I mean you can

00:19:13,890 --> 00:19:20,560
put it on a on a file system it will

00:19:17,710 --> 00:19:22,870
then right into a single file but this

00:19:20,560 --> 00:19:26,130
is what what gives it the edge this is

00:19:22,870 --> 00:19:31,140
what gives it that speed but I think I

00:19:26,130 --> 00:19:34,600
mean Yan has has done this this test

00:19:31,140 --> 00:19:38,710
testing with different proxies and

00:19:34,600 --> 00:19:40,660
caches and actually I mean most of them

00:19:38,710 --> 00:19:44,230
are pretty fast I mean they're they're

00:19:40,660 --> 00:19:46,920
really really really fast and for most

00:19:44,230 --> 00:19:50,770
of us normal people we don't really need

00:19:46,920 --> 00:19:53,770
300 300 thousand requests per second on

00:19:50,770 --> 00:19:56,950
a single box but yeah we can deliver

00:19:53,770 --> 00:20:01,180
that so that's I mean fast isn't really

00:19:56,950 --> 00:20:03,340
a selling argument if you're in in proxy

00:20:01,180 --> 00:20:05,260
cash business because everyone is fast I

00:20:03,340 --> 00:20:11,200
mean everyone except for squid probably

00:20:05,260 --> 00:20:15,460
but that's that's another kid the other

00:20:11,200 --> 00:20:18,550
thing that I really like about traffic

00:20:15,460 --> 00:20:20,170
server is that it's extremely scalable

00:20:18,550 --> 00:20:22,660
and that's one thing that we also don't

00:20:20,170 --> 00:20:24,880
really have an HTTP d in traffic server

00:20:22,660 --> 00:20:26,440
when you start when you start off

00:20:24,880 --> 00:20:29,110
traffic server it simply looks at your

00:20:26,440 --> 00:20:31,900
hardware it looks what you have it looks

00:20:29,110 --> 00:20:38,200
what you give it how many disks how many

00:20:31,900 --> 00:20:42,130
CPUs how much RAM and it sell it it is a

00:20:38,200 --> 00:20:45,490
self configuration with our developers

00:20:42,130 --> 00:20:50,050
here best guesses as to what will give

00:20:45,490 --> 00:20:55,510
you the the best performance with the on

00:20:50,050 --> 00:20:57,520
that hardware so it's it's scalable

00:20:55,510 --> 00:21:01,770
already on that hardware that you give

00:20:57,520 --> 00:21:04,870
it but as joe said they're using it in

00:21:01,770 --> 00:21:07,750
cluster configurations so you can have

00:21:04,870 --> 00:21:10,200
it on so you can have it run on multiple

00:21:07,750 --> 00:21:13,090
nodes and you can have it in a

00:21:10,200 --> 00:21:17,750
hierarchical configuration so it also of

00:21:13,090 --> 00:21:21,770
course scales horizontally

00:21:17,750 --> 00:21:23,870
and then of course the other selling

00:21:21,770 --> 00:21:29,390
argument as we have heard many many

00:21:23,870 --> 00:21:34,130
times is it's extremely extensible we've

00:21:29,390 --> 00:21:38,330
we've had a tutorial on Sunday a lucky

00:21:34,130 --> 00:21:43,550
or unlucky few have had the chance to to

00:21:38,330 --> 00:21:45,170
attend it and yes our API is a little

00:21:43,550 --> 00:21:49,700
bit complex but once you've wrapped your

00:21:45,170 --> 00:21:51,680
head around it it's it's also extremely

00:21:49,700 --> 00:21:55,310
powerful I mean I don't want to compare

00:21:51,680 --> 00:21:59,420
it to no chairs but yeah we have an

00:21:55,310 --> 00:22:01,720
event based model so it's also

00:21:59,420 --> 00:22:04,820
multi-threaded so it's very complex to

00:22:01,720 --> 00:22:07,670
wrap your head around it at at first but

00:22:04,820 --> 00:22:11,060
once you get it you can create extremely

00:22:07,670 --> 00:22:13,130
powerful plugins and this is I believe

00:22:11,060 --> 00:22:18,380
another major selling point for traffic

00:22:13,130 --> 00:22:21,260
silver one of my favorite developments

00:22:18,380 --> 00:22:24,560
lately has been from James peach who I

00:22:21,260 --> 00:22:29,300
don't see right now he has written a

00:22:24,560 --> 00:22:31,250
plug-in for Lua so that you can write

00:22:29,300 --> 00:22:34,450
your own plugins in Lua and I believe

00:22:31,250 --> 00:22:38,680
that this is a great step forward

00:22:34,450 --> 00:22:42,140
because as admins and I'm just an admin

00:22:38,680 --> 00:22:47,390
you don't really want to go down into c

00:22:42,140 --> 00:22:49,250
or c++ if all it takes is 12 lines of

00:22:47,390 --> 00:22:52,220
lua code for me to get something done

00:22:49,250 --> 00:22:55,730
that's pretty cool and it if it works

00:22:52,220 --> 00:23:03,520
and i hope it will work out soon at

00:22:55,730 --> 00:23:10,160
least we're here this week hacking then

00:23:03,520 --> 00:23:17,800
that's another great feature so ok time

00:23:10,160 --> 00:23:17,800
for history lesson as Brian mentioned a

00:23:19,690 --> 00:23:26,350
traffic server has has been donated to

00:23:22,450 --> 00:23:28,269
the apache software foundation by who

00:23:26,350 --> 00:23:31,059
but this isn't where it originated

00:23:28,269 --> 00:23:35,769
originated in a company called inc Tomy

00:23:31,059 --> 00:23:39,039
yahoo simply bought in tow me because of

00:23:35,769 --> 00:23:40,779
their search product and they forgot

00:23:39,039 --> 00:23:47,259
about all that awesome software think

00:23:40,779 --> 00:23:49,389
Tony had then I don't remember when it

00:23:47,259 --> 00:23:54,190
was but Yahoo decided that they needed a

00:23:49,389 --> 00:23:57,539
CDN and back then life found that there

00:23:54,190 --> 00:24:02,950
was a useful piece of software that

00:23:57,539 --> 00:24:07,299
could maybe be simply put on on a piece

00:24:02,950 --> 00:24:09,580
of hardware and put to good use this was

00:24:07,299 --> 00:24:12,039
this was traffic server it needed a

00:24:09,580 --> 00:24:13,210
little bit of cleanup because it had

00:24:12,039 --> 00:24:18,129
been sitting around for a couple of

00:24:13,210 --> 00:24:21,639
years and nobody had touched it so it it

00:24:18,129 --> 00:24:24,309
needed a little bit a little bit of a

00:24:21,639 --> 00:24:27,419
cleanup to get it running but once it

00:24:24,309 --> 00:24:31,059
was running it was already delivering an

00:24:27,419 --> 00:24:33,309
enormous performance and doing the right

00:24:31,059 --> 00:24:36,820
thing it was doing what they needed and

00:24:33,309 --> 00:24:39,340
Lafe decided that this is really great

00:24:36,820 --> 00:24:46,419
and they wanted to share this and open

00:24:39,340 --> 00:24:51,779
source it and Lafe and Brian and helped

00:24:46,419 --> 00:24:51,779
me out who who else had at the effort

00:24:59,170 --> 00:25:04,760
yeah so the effort came from from

00:25:02,990 --> 00:25:08,450
engineering but they had a lot of

00:25:04,760 --> 00:25:10,790
support from management and this is

00:25:08,450 --> 00:25:14,900
really really important you need support

00:25:10,790 --> 00:25:19,460
from management because one of the most

00:25:14,900 --> 00:25:23,150
painful parts about open sourcing a big

00:25:19,460 --> 00:25:25,670
big project and by that time traffic

00:25:23,150 --> 00:25:29,060
server had over seven hundred thousand

00:25:25,670 --> 00:25:32,510
lines of code one of the really most

00:25:29,060 --> 00:25:35,210
painful part is going through all the

00:25:32,510 --> 00:25:39,110
for all of that code and making sure

00:25:35,210 --> 00:25:42,070
that the IP is cleared so that you know

00:25:39,110 --> 00:25:45,080
which line of code belongs to whom and

00:25:42,070 --> 00:25:51,800
if they are ok with you open sourcing

00:25:45,080 --> 00:25:56,330
that with a lot of that code they simply

00:25:51,800 --> 00:25:59,860
went a conservative approach and deleted

00:25:56,330 --> 00:26:03,080
it which is also one of my favorite

00:25:59,860 --> 00:26:04,910
activities in the traffic's of a project

00:26:03,080 --> 00:26:07,220
it also helps a little bit with

00:26:04,910 --> 00:26:08,930
performance you simply rip out thirty

00:26:07,220 --> 00:26:13,270
thousand lines of code and suddenly

00:26:08,930 --> 00:26:16,550
everything is a little bit faster but

00:26:13,270 --> 00:26:18,830
with many parts we're really useful and

00:26:16,550 --> 00:26:21,140
they had to be checked and lawyers had

00:26:18,830 --> 00:26:23,870
to go through it another thing of course

00:26:21,140 --> 00:26:27,440
is at that time they had the product

00:26:23,870 --> 00:26:29,120
running in production and they didn't

00:26:27,440 --> 00:26:32,930
want to put the source code into open

00:26:29,120 --> 00:26:35,510
and had everyone look at it and find all

00:26:32,930 --> 00:26:37,850
of those ugly security bugs and then

00:26:35,510 --> 00:26:41,000
exploit their service so they went

00:26:37,850 --> 00:26:44,270
through rigorous security audits and

00:26:41,000 --> 00:26:48,640
made sure that those that those leaks

00:26:44,270 --> 00:26:52,970
are fixed actually so that that gave us

00:26:48,640 --> 00:26:58,370
a bit of a more stable code a code base

00:26:52,970 --> 00:27:00,740
to work on when it was donated to the

00:26:58,370 --> 00:27:04,610
apache software foundation and came into

00:27:00,740 --> 00:27:07,850
the incubator in 2009 if I remember

00:27:04,610 --> 00:27:09,590
correctly it it was reduced from

00:27:07,850 --> 00:27:15,049
seven hundred thousand lines of code it

00:27:09,590 --> 00:27:18,130
was down to four hundred thousand they

00:27:15,049 --> 00:27:21,860
had ripped out everything that wasn't

00:27:18,130 --> 00:27:25,880
HTTP because it had capability for FTP

00:27:21,860 --> 00:27:29,090
and 90s streaming protocols that nobody

00:27:25,880 --> 00:27:32,480
uses because everybody only uses HTTP

00:27:29,090 --> 00:27:35,270
these days anymore so it was down a

00:27:32,480 --> 00:27:39,169
substantial part I think SNMP got ripped

00:27:35,270 --> 00:27:41,090
out held up authentication many many

00:27:39,169 --> 00:27:44,179
things got ripped out and it got really

00:27:41,090 --> 00:27:50,690
slim down to buy three hundred thousand

00:27:44,179 --> 00:27:53,140
lines of code by the way after donating

00:27:50,690 --> 00:27:56,000
it to the incubator we did continue

00:27:53,140 --> 00:27:58,250
reducing code size a little bit so we I

00:27:56,000 --> 00:28:01,659
think we're down to two hundred forty

00:27:58,250 --> 00:28:10,460
three hundred something like that free

00:28:01,659 --> 00:28:12,559
300,000 350 did we're slacking well be

00:28:10,460 --> 00:28:17,450
adding code we are adding features

00:28:12,559 --> 00:28:21,409
that's good so in the nice thing about

00:28:17,450 --> 00:28:25,520
this long and painful process that

00:28:21,409 --> 00:28:31,070
involved many managers fighting against

00:28:25,520 --> 00:28:34,460
lawyers I imagine and/or with them and

00:28:31,070 --> 00:28:39,080
and getting the the code base cleared

00:28:34,460 --> 00:28:45,950
and the code base I IP cleared was that

00:28:39,080 --> 00:28:47,720
it only took ten months to go through

00:28:45,950 --> 00:28:51,740
the whole incubator process because a

00:28:47,720 --> 00:28:54,740
big chunk of of the incubator process is

00:28:51,740 --> 00:28:57,710
making sure that the IP is clear i don't

00:28:54,740 --> 00:28:59,390
know i think the commute community track

00:28:57,710 --> 00:29:03,169
where we talk about the incubator is in

00:28:59,390 --> 00:29:06,409
parallel to this one you would you would

00:29:03,169 --> 00:29:10,039
learn a big deal about how the incubator

00:29:06,409 --> 00:29:12,500
works and how open source works in that

00:29:10,039 --> 00:29:15,100
track but since we were in parallel

00:29:12,500 --> 00:29:20,740
since we're competing i think this is a

00:29:15,100 --> 00:29:22,630
good little add-on okay so we rushed for

00:29:20,740 --> 00:29:25,809
the incubator the project really rushed

00:29:22,630 --> 00:29:31,050
through the incubator in comparison and

00:29:25,809 --> 00:29:31,050
in 2010 it was a top-level project and

00:29:31,470 --> 00:29:40,630
in 2011 I think you who dropped out it

00:29:37,090 --> 00:29:42,370
pulled 10 developers out but the project

00:29:40,630 --> 00:29:44,440
survived because at this stage the

00:29:42,370 --> 00:29:46,900
community was already quite healthy and

00:29:44,440 --> 00:29:51,309
we're continuing to get in new

00:29:46,900 --> 00:29:56,100
developers from all over the world and

00:29:51,309 --> 00:29:56,100
many from from China and from the bow

00:29:56,640 --> 00:30:04,210
but yeah I think it's it's not enough I

00:30:02,140 --> 00:30:09,179
think we need more people I think we

00:30:04,210 --> 00:30:14,290
need more more involvement so whoops

00:30:09,179 --> 00:30:16,390
awesome so how do you get involved first

00:30:14,290 --> 00:30:19,690
of all you can use it you should use it

00:30:16,390 --> 00:30:23,620
you definitely will find a good use case

00:30:19,690 --> 00:30:26,590
for it and yeah then you will probably

00:30:23,620 --> 00:30:30,480
stumble across some issues in the

00:30:26,590 --> 00:30:34,660
documentation or maybe even find the bug

00:30:30,480 --> 00:30:36,520
one case or the other I I invite

00:30:34,660 --> 00:30:39,730
everyone to try it out and to come to us

00:30:36,520 --> 00:30:43,780
to our IC channel to our mailing lists

00:30:39,730 --> 00:30:53,010
and to give us some feedback so any

00:30:43,780 --> 00:30:53,010
questions where's my beer maybe

00:30:58,570 --> 00:31:10,389
I know that Alan does but other than you

00:31:06,340 --> 00:31:18,820
does anybody use 80s in a transparent in

00:31:10,389 --> 00:31:21,039
line topology I'm really keen on

00:31:18,820 --> 00:31:24,370
unlearning how it works tomorrow so

00:31:21,039 --> 00:31:27,909
maybe I will I can maybe answer that's

00:31:24,370 --> 00:31:29,380
Akamai I don't know exactly where they

00:31:27,909 --> 00:31:31,179
are in the state of that product but

00:31:29,380 --> 00:31:35,700
they they their plan was always to use

00:31:31,179 --> 00:31:39,610
traffic server in a transparent

00:31:35,700 --> 00:31:41,350
intercepting proxy case I'd always don't

00:31:39,610 --> 00:31:43,779
work at Akamai I can't talk for them but

00:31:41,350 --> 00:31:46,409
the doubles their purpose of using

00:31:43,779 --> 00:31:46,409
traffic server

00:31:51,850 --> 00:31:59,410
I also take stupid questions if if you

00:31:54,669 --> 00:32:07,120
think your question is stupid right I've

00:31:59,410 --> 00:32:09,730
done teaching hi I'm Josh moment I work

00:32:07,120 --> 00:32:11,410
on the PageSpeed optimization library so

00:32:09,730 --> 00:32:14,380
highly interested in the work that

00:32:11,410 --> 00:32:16,270
LinkedIn is done but I wanted to ask you

00:32:14,380 --> 00:32:20,140
kind of a pointed question if you could

00:32:16,270 --> 00:32:22,120
contrast why you would pick Apache

00:32:20,140 --> 00:32:24,220
traffics who server over engine X if

00:32:22,120 --> 00:32:30,809
your goal is to process a lot of

00:32:24,220 --> 00:32:33,460
requests I have started a horrible

00:32:30,809 --> 00:32:35,679
document it's called why traffic serve

00:32:33,460 --> 00:32:40,570
it's it's it's got a horrible formatting

00:32:35,679 --> 00:32:48,010
see if I can find it probably not so the

00:32:40,570 --> 00:32:51,700
thing is many proxies and caches have

00:32:48,010 --> 00:32:53,650
different kinds of feature set one of

00:32:51,700 --> 00:32:58,260
the feature sets that engine acts is

00:32:53,650 --> 00:32:58,260
definitely lacking is a proper

00:32:59,340 --> 00:33:07,659
extensibility I mean you can extend

00:33:03,990 --> 00:33:13,860
engine X but if you do you have to

00:33:07,659 --> 00:33:16,900
recompile the whole thing um another

00:33:13,860 --> 00:33:25,750
issue with engine X is that it's a

00:33:16,900 --> 00:33:28,510
pretty poor cash so depending on what

00:33:25,750 --> 00:33:32,940
you need if you need to extend the

00:33:28,510 --> 00:33:37,210
product if you need to cash properly if

00:33:32,940 --> 00:33:43,390
I don't know if if you need it to scale

00:33:37,210 --> 00:33:47,049
to horrendous amounts of of requests per

00:33:43,390 --> 00:33:52,390
second I think all do that quite as well

00:33:47,049 --> 00:33:54,429
but it yeah if you want if you want to

00:33:52,390 --> 00:33:58,179
extend it then engine X is probably the

00:33:54,429 --> 00:33:59,500
wrong one yes so I have one more problem

00:33:58,179 --> 00:34:01,850
with engine X and that's the fact that

00:33:59,500 --> 00:34:07,640
it doesn't talk HTTP

00:34:01,850 --> 00:34:07,640
really is it that bad it's not bad okay

00:34:08,270 --> 00:34:15,300
so that's actually a good point thank

00:34:12,179 --> 00:34:18,899
you I'm sorry if I'm interrupting you

00:34:15,300 --> 00:34:23,099
would just to get this one across that

00:34:18,899 --> 00:34:25,080
is actually one of the many issues that

00:34:23,099 --> 00:34:28,530
people have in adopting traffic server

00:34:25,080 --> 00:34:33,300
is that it expects your back and to

00:34:28,530 --> 00:34:38,179
speak hdb and by that I mean to get the

00:34:33,300 --> 00:34:41,520
headers right so if you want your

00:34:38,179 --> 00:34:43,800
backends contents to be properly cashed

00:34:41,520 --> 00:34:45,780
it should deliver proper cache headers

00:34:43,800 --> 00:34:48,510
if you want it to be validated it should

00:34:45,780 --> 00:34:50,700
send those headers as well or I don't

00:34:48,510 --> 00:34:52,590
know maybe write a plug-in that for

00:34:50,700 --> 00:34:55,050
wordpress or something like that where

00:34:52,590 --> 00:34:56,940
you hey I updated my site here purge the

00:34:55,050 --> 00:35:00,330
cash but the problem with this

00:34:56,940 --> 00:35:03,090
expectation is that many many many

00:35:00,330 --> 00:35:08,520
backends many applications simply don't

00:35:03,090 --> 00:35:10,560
speak hcp so I'm kind of interested in

00:35:08,520 --> 00:35:11,880
the details of what is not HTTP version

00:35:10,560 --> 00:35:13,530
I don't actually don't know that much

00:35:11,880 --> 00:35:16,770
about it we've started to you then

00:35:13,530 --> 00:35:18,630
checks I dabble in engine X we have like

00:35:16,770 --> 00:35:21,119
a preliminary report of my page bday in

00:35:18,630 --> 00:35:24,510
genetics but it could you speak up sorry

00:35:21,119 --> 00:35:26,160
um but the main difference that I saw

00:35:24,510 --> 00:35:30,540
and I was hoping you would elaborate on

00:35:26,160 --> 00:35:34,890
this point is that engine X is kind of a

00:35:30,540 --> 00:35:38,310
multi-process it's it's a little bit

00:35:34,890 --> 00:35:40,800
like Apache pre fork in that it is multi

00:35:38,310 --> 00:35:43,460
process but it's a little bit not like

00:35:40,800 --> 00:35:46,380
it and that it's highly asynchronous

00:35:43,460 --> 00:35:48,930
whereas my understanding of Apache

00:35:46,380 --> 00:35:52,740
traffic server is that it there's a lot

00:35:48,930 --> 00:35:55,410
more with multiple threads that engine X

00:35:52,740 --> 00:35:57,089
doesn't try to do so Apache traffic

00:35:55,410 --> 00:35:59,550
server probably has more complicated

00:35:57,089 --> 00:36:00,930
contention issues than engine X does and

00:35:59,550 --> 00:36:02,609
I was wondering how that impacted

00:36:00,930 --> 00:36:04,970
performance at really high cory's per

00:36:02,609 --> 00:36:04,970
second

00:36:09,300 --> 00:36:16,270
we finally nginx uses the file system to

00:36:13,200 --> 00:36:18,310
do right and we found that it just

00:36:16,270 --> 00:36:21,820
doesn't perform nearly as well with a

00:36:18,310 --> 00:36:24,880
lot of disk drives and a lot of you know

00:36:21,820 --> 00:36:27,130
on larger systems high volume traffic we

00:36:24,880 --> 00:36:29,890
find a patch structure is in our

00:36:27,130 --> 00:36:35,140
workload much much much better

00:36:29,890 --> 00:36:37,930
performance what's the typical so we

00:36:35,140 --> 00:36:39,850
queries per second we are large objects

00:36:37,930 --> 00:36:43,210
because we're video is fragmented video

00:36:39,850 --> 00:36:45,760
our average size is 1 1 megabit yeah one

00:36:43,210 --> 00:36:48,250
megabits per second so we push caches up

00:36:45,760 --> 00:36:50,790
to young gigabits per second easy could

00:36:48,250 --> 00:36:53,320
you pick up the microphone so easily

00:36:50,790 --> 00:36:55,240
it's directional it's really wish so we

00:36:53,320 --> 00:36:57,460
push caches up to 20 gigabytes per

00:36:55,240 --> 00:37:00,720
second easy we have 24 spindles and we

00:36:57,460 --> 00:37:03,070
read and write at really really high

00:37:00,720 --> 00:37:05,560
bandwidth to two drives and I think

00:37:03,070 --> 00:37:07,090
that's where NGO Nix was really lacking

00:37:05,560 --> 00:37:08,980
to us because it writes to the file

00:37:07,090 --> 00:37:10,750
system and it has this extra layer that

00:37:08,980 --> 00:37:12,580
you have to go through and we found a

00:37:10,750 --> 00:37:15,490
big performance difference in our use

00:37:12,580 --> 00:37:17,770
guys between nginx and traffics over

00:37:15,490 --> 00:37:20,760
that way we've we've done some really

00:37:17,770 --> 00:37:24,850
primitive testing but it already shows

00:37:20,760 --> 00:37:26,560
if in traffic server if we use the file

00:37:24,850 --> 00:37:28,840
system and again i want to point this

00:37:26,560 --> 00:37:31,770
out we don't use it in the same way as

00:37:28,840 --> 00:37:35,490
much cash does putting every single

00:37:31,770 --> 00:37:38,590
header information and content and

00:37:35,490 --> 00:37:42,190
variation into a file we don't do that

00:37:38,590 --> 00:37:46,050
we use just like squid a single file but

00:37:42,190 --> 00:37:49,300
if you put that on the file system and

00:37:46,050 --> 00:37:51,790
and access that instead of the raw disk

00:37:49,300 --> 00:37:56,350
you already can see ten to fifteen

00:37:51,790 --> 00:37:58,630
percent performance impact even in

00:37:56,350 --> 00:38:02,590
traffic server so I imagine it will be

00:37:58,630 --> 00:38:07,830
pretty much the same in in in squid

00:38:02,590 --> 00:38:10,570
engine eggs and varnish to uses a backup

00:38:07,830 --> 00:38:12,130
on this even though I mean what the

00:38:10,570 --> 00:38:14,500
problem with varnish of course is that

00:38:12,130 --> 00:38:18,250
it doesn't persist the cat

00:38:14,500 --> 00:38:20,830
so I can try to answer your question a

00:38:18,250 --> 00:38:22,540
little bit you have a lot of time rights

00:38:20,830 --> 00:38:26,110
I can take a few minutes yeah of course

00:38:22,540 --> 00:38:28,210
we are here too so CSU writes a traffic

00:38:26,110 --> 00:38:31,120
circle your LT threaded it's actually

00:38:28,210 --> 00:38:33,040
pretty similar to how and your next

00:38:31,120 --> 00:38:36,550
works the main difference being that

00:38:33,040 --> 00:38:39,160
we're engine X uses the process traffic

00:38:36,550 --> 00:38:40,690
uses of server uses a thread there will

00:38:39,160 --> 00:38:44,910
still be a small number of threads on

00:38:40,690 --> 00:38:48,310
your box typically one or two per CPU

00:38:44,910 --> 00:38:49,510
one of the two things we do to avoid

00:38:48,310 --> 00:38:52,300
that what you worry about lock

00:38:49,510 --> 00:38:55,120
contention and one is we use a lot of

00:38:52,300 --> 00:38:56,740
log free data structures so they want

00:38:55,120 --> 00:38:58,450
the double use Atomics they're still

00:38:56,740 --> 00:39:01,180
sort of has performance implications but

00:38:58,450 --> 00:39:04,120
it's not nearly as bad as as a locking

00:39:01,180 --> 00:39:08,680
in structure right the second thing is

00:39:04,120 --> 00:39:10,570
we try to do per thread data and

00:39:08,680 --> 00:39:12,990
computation as much as possible meaning

00:39:10,570 --> 00:39:15,190
you avoid that the lock issue entirely

00:39:12,990 --> 00:39:17,050
certain pieces of data are certain piece

00:39:15,190 --> 00:39:19,090
o computation happens on the one single

00:39:17,050 --> 00:39:20,380
thread only and when you do that when

00:39:19,090 --> 00:39:23,200
you guarantee that you don't have to

00:39:20,380 --> 00:39:26,170
worry about the thread contention for

00:39:23,200 --> 00:39:29,530
example all our stats and metrics gets

00:39:26,170 --> 00:39:31,240
calculated on each thread every five

00:39:29,530 --> 00:39:33,280
seconds there's another thread it goes

00:39:31,240 --> 00:39:35,290
and collects the metrics from all the

00:39:33,280 --> 00:39:37,780
different threads up into this sort of

00:39:35,290 --> 00:39:39,460
central stats collector and that way we

00:39:37,780 --> 00:39:42,190
avoid all the locking old Atomics and

00:39:39,460 --> 00:39:44,350
all that stuff around those things as

00:39:42,190 --> 00:39:46,450
far as performance concerned it really

00:39:44,350 --> 00:39:48,040
depends on your hardware it's reasonable

00:39:46,450 --> 00:39:51,160
to think that you almost always will be

00:39:48,040 --> 00:39:52,570
able to sustain Nick bandwidth

00:39:51,160 --> 00:39:54,580
limitation meaning if you ever gig

00:39:52,570 --> 00:39:56,530
Ethernet you're going to sustain a gig

00:39:54,580 --> 00:39:57,970
Ethernet or modern hardware and now if

00:39:56,530 --> 00:40:00,580
you're serving really really really

00:39:57,970 --> 00:40:02,770
small data say few hundred making a few

00:40:00,580 --> 00:40:03,880
hundred bytes per object I think it's

00:40:02,770 --> 00:40:05,050
reasonable to think that you can do

00:40:03,880 --> 00:40:11,140
maybe in the order of hundreds of

00:40:05,050 --> 00:40:13,750
thousands of requests per second maybe

00:40:11,140 --> 00:40:19,240
another thing that would be important in

00:40:13,750 --> 00:40:22,300
this case is that of course if you're if

00:40:19,240 --> 00:40:26,740
you're extending traffic server with

00:40:22,300 --> 00:40:30,480
your own plugins and you put or you have

00:40:26,740 --> 00:40:33,730
to put a giant lock somewhere in there

00:40:30,480 --> 00:40:35,650
simply because of the nature of how the

00:40:33,730 --> 00:40:39,250
processing has to happen in your

00:40:35,650 --> 00:40:41,610
particular case then of course the the

00:40:39,250 --> 00:40:45,480
performance will be bound to that plugin

00:40:41,610 --> 00:40:49,060
so that's nothing much that a that the

00:40:45,480 --> 00:40:51,580
system underneath can do to help you

00:40:49,060 --> 00:40:54,100
there if if you're processing is that

00:40:51,580 --> 00:40:59,230
complex or needs that kind of locking

00:40:54,100 --> 00:41:01,410
then then it has to happen okay any more

00:40:59,230 --> 00:41:01,410
questions

00:41:08,100 --> 00:41:18,330
hmm oh yes thank you that's that's

00:41:10,950 --> 00:41:21,600
actually a good good thing we did a a

00:41:18,330 --> 00:41:24,780
recent release of free dot-to-dot for

00:41:21,600 --> 00:41:29,400
and every time we get together we plan

00:41:24,780 --> 00:41:31,950
to do a one month cycle of stable

00:41:29,400 --> 00:41:39,750
releases and and development releases

00:41:31,950 --> 00:41:44,310
and maybe a six month cycle of you call

00:41:39,750 --> 00:41:48,720
it a major to a minor version upgrade

00:41:44,310 --> 00:41:51,000
like free dot 2 3 4 and so on we have

00:41:48,720 --> 00:41:53,640
semantic versioning just like HD PD to

00:41:51,000 --> 00:41:54,960
help you understand which which is the

00:41:53,640 --> 00:41:57,630
stable product and which is the

00:41:54,960 --> 00:42:00,390
development thing but this is really

00:41:57,630 --> 00:42:04,140
hard because we we have so few people

00:42:00,390 --> 00:42:10,290
that are actually paid full time to

00:42:04,140 --> 00:42:13,680
develop traffic server as opposed to

00:42:10,290 --> 00:42:15,480
many people who are involved in traffic

00:42:13,680 --> 00:42:21,120
server like yarn is pretty much

00:42:15,480 --> 00:42:23,970
full-time and yeah so in this case I I

00:42:21,120 --> 00:42:28,410
kind of promised you a clear road line

00:42:23,970 --> 00:42:31,740
road map we want to get the Lewis stuff

00:42:28,410 --> 00:42:35,460
in the next release in the next stable

00:42:31,740 --> 00:42:37,950
release in free dot for that would I

00:42:35,460 --> 00:42:42,530
think that would be a really big bonus

00:42:37,950 --> 00:42:42,530
for admins and

00:42:46,760 --> 00:42:51,290
is currently getting started I missed

00:42:49,340 --> 00:42:54,670
some stuff I suppose in this war room

00:42:51,290 --> 00:43:00,410
when I attended a couple of talks here

00:42:54,670 --> 00:43:03,290
but so what what Ellen said is partial

00:43:00,410 --> 00:43:07,520
object caching is currently being

00:43:03,290 --> 00:43:11,480
developed that is he and rage in our are

00:43:07,520 --> 00:43:14,060
doing that what else would do we have on

00:43:11,480 --> 00:43:16,070
the list I think we have SSL and ipv6

00:43:14,060 --> 00:43:17,810
we've pretty much cleared in freed out

00:43:16,070 --> 00:43:27,410
free so that's going to be in the next

00:43:17,810 --> 00:43:41,060
release that yes it is but now it works

00:43:27,410 --> 00:43:42,440
both ways properly one of the one of the

00:43:41,060 --> 00:43:44,300
other big things it's going to come up

00:43:42,440 --> 00:43:46,190
that's in the three-dot three thing is

00:43:44,300 --> 00:43:48,620
accelerated range requests where if you

00:43:46,190 --> 00:43:51,290
have a full object cache and the client

00:43:48,620 --> 00:43:54,860
requests a just a range of that it can

00:43:51,290 --> 00:43:56,330
go directly to that and serve it without

00:43:54,860 --> 00:43:58,190
having to read the whole file we've seen

00:43:56,330 --> 00:44:02,090
performance increases of up to thirty or

00:43:58,190 --> 00:44:04,490
factor of 30 or 40 seriously from this

00:44:02,090 --> 00:44:06,590
change another thing and we're trying to

00:44:04,490 --> 00:44:08,480
extend that so we can actually cash as

00:44:06,590 --> 00:44:10,640
mentioned partial ranges so if you do a

00:44:08,480 --> 00:44:12,260
range request to the origin server we

00:44:10,640 --> 00:44:14,750
can cash just that and serve it back

00:44:12,260 --> 00:44:16,940
later so those are two of the big things

00:44:14,750 --> 00:44:20,780
that are coming up on the roadmap and

00:44:16,940 --> 00:44:23,570
those are going to be in 22 for a free

00:44:20,780 --> 00:44:24,590
tote for three the range acceleration

00:44:23,570 --> 00:44:27,320
will be in three out four because that's

00:44:24,590 --> 00:44:29,390
already working on three dot 3 we're not

00:44:27,320 --> 00:44:31,540
we hope to get the partial object

00:44:29,390 --> 00:44:36,260
hashing done for three dot 4 as well but

00:44:31,540 --> 00:44:40,160
that's a little riskier so one of the

00:44:36,260 --> 00:44:44,000
things that we are we're going to have

00:44:40,160 --> 00:44:46,550
those those table releases free at zero

00:44:44,000 --> 00:44:51,110
we had we had Freda to we will have

00:44:46,550 --> 00:44:53,030
Freda free at four we're going to I mean

00:44:51,110 --> 00:44:57,700
we're going to maintain those for a

00:44:53,030 --> 00:44:59,460
while probably as long as it's feasible

00:44:57,700 --> 00:45:02,040
for

00:44:59,460 --> 00:45:04,700
as long as we have volunteers as long we

00:45:02,040 --> 00:45:06,990
have as long as we have users of those

00:45:04,700 --> 00:45:09,780
we will have to have a discussion about

00:45:06,990 --> 00:45:17,610
how many of those stable releases we

00:45:09,780 --> 00:45:20,610
will we will have out there we will ya

00:45:17,610 --> 00:45:23,540
what what else is I mean there's not so

00:45:20,610 --> 00:45:26,520
much a roadmap as there is a to-do list

00:45:23,540 --> 00:45:30,830
that needs to be that needs to be

00:45:26,520 --> 00:45:34,950
clarified because I mean the roadmap is

00:45:30,830 --> 00:45:37,590
is pretty much dictated from what all

00:45:34,950 --> 00:45:40,050
those people want from traffic server

00:45:37,590 --> 00:45:43,620
and they then sit down and hack on it

00:45:40,050 --> 00:45:46,110
and contribute patches and bug reports

00:45:43,620 --> 00:45:48,390
so that's that's how the roadmap is

00:45:46,110 --> 00:45:54,000
dictated so if you want to get involved

00:45:48,390 --> 00:45:58,500
I suggest you just open the JIRA or drop

00:45:54,000 --> 00:46:00,990
us a mail to the list and or I don't

00:45:58,500 --> 00:46:05,900
know maybe a documentation update I'd

00:46:00,990 --> 00:46:12,080
really love to see some of those yeah

00:46:05,900 --> 00:46:12,080
other questions or documentation patches

00:46:12,260 --> 00:46:21,510
lay if you're smiling you have a big

00:46:17,040 --> 00:46:25,080
documentation update coming up no yeah I

00:46:21,510 --> 00:46:26,910
had a this is just for closing if you're

00:46:25,080 --> 00:46:31,340
if anyone is afraid of writing

00:46:26,910 --> 00:46:34,080
documentation don't be we we had

00:46:31,340 --> 00:46:35,940
documentation contributed to us back

00:46:34,080 --> 00:46:38,370
then from Zhao who was very

00:46:35,940 --> 00:46:40,500
uncomfortable in his English and it

00:46:38,370 --> 00:46:43,200
doesn't matter the content was right and

00:46:40,500 --> 00:46:45,180
we had somebody I think it was me just

00:46:43,200 --> 00:46:47,220
get over it and and and fixed the

00:46:45,180 --> 00:46:49,710
English so that an English native

00:46:47,220 --> 00:46:52,410
English speaker or somebody who knows

00:46:49,710 --> 00:46:54,960
English a little bit could part it but

00:46:52,410 --> 00:46:56,790
the content was right and this is this

00:46:54,960 --> 00:47:01,790
is all that's needed for documentation

00:46:56,790 --> 00:47:06,240
just give give us documentation please

00:47:01,790 --> 00:47:09,120
ok yes that's pretty much it will be all

00:47:06,240 --> 00:47:10,140
week here we'll have more talks will

00:47:09,120 --> 00:47:12,150
have more

00:47:10,140 --> 00:47:14,940
all rooms and hacking sessions you're

00:47:12,150 --> 00:47:18,869
very much invited to just join us ask us

00:47:14,940 --> 00:47:22,589
questions with with your particular

00:47:18,869 --> 00:47:27,260
strange use case and we're very happy to

00:47:22,589 --> 00:47:27,260

YouTube URL: https://www.youtube.com/watch?v=6UyXa6MwX10


