Title: Integration UIMA components into cTAKES
Publication date: 2020-10-14
Playlist: ApacheCon @Home 2020
Description: 
	Integration UIMA components into cTAKES
Siamak Barzegar

A presentation from ApacheCon @Home 2020
https://apachecon.com/acah2020/

Apache cTAKES (clinical Text Analysis and Knowledge Extraction System) is an open-source Natural Language Processing system for extraction of information from Electronic Health Records (EHR). cTAKES consists of a number of components that work just with English documents. We integrated two important tools (HeidelTime and FreeLing) into cTAKES that provide language analysis functionalities (Temponym Tagging, Morphological Analysis, Named Entity Detection, PoS-Tagging, Parsing, Word Sense Disambiguation, Semantic Role Labelling, so forth) for a variety of languages. Also, we adapted HeidelTime’s grammar and FreeLing to the Medical domain in Spanish. Due to having different type systems in components of cTAKES and HeidelTime and FreeLing, we had interoperability challenges that were solved by adapting the native type system of cTAKES for HeidelTime and FreeLing’s Wrapper.

Siamak Barzegar is a Senior Research Engineer at Biomedical Text Mining Unit at Barcelona Supercomputing Center in Spain. He won the Science Foundation Ireland (SFI) research scholarship and received his PhD degree from the National University of Ireland, Galway in December 2018. The main area of his work/research is focusing on Natural Language Processing, Distributional Semantics, Word Embeddings, Deep Learning, Knowledge Extraction on Multilingual & Specific Domains.
Captions: 
	00:00:06,420 --> 00:00:10,640
[Music]

00:00:14,160 --> 00:00:17,230
[Music]

00:00:24,000 --> 00:00:31,840
let me

00:00:25,039 --> 00:00:31,840
start now shall sean join us or not

00:00:31,920 --> 00:00:37,840
okay perfect so i'm going to

00:00:35,360 --> 00:00:40,800
uh explain about the integration of the

00:00:37,840 --> 00:00:42,559
urimah components into ctx

00:00:40,800 --> 00:00:45,360
so i'm sierra macbasker from the

00:00:42,559 --> 00:00:50,160
barcelona super content center

00:00:45,360 --> 00:00:53,360
and so first of all i'm going to

00:00:50,160 --> 00:00:55,520
explain a bit about our

00:00:53,360 --> 00:00:58,399
tasks that we are doing and which

00:00:55,520 --> 00:01:02,000
companies it was necessary for all tasks

00:00:58,399 --> 00:01:05,920
and then although indicators

00:01:02,000 --> 00:01:09,040
so uh the the truth that we wanted to

00:01:05,920 --> 00:01:10,159
develop it was uh interpretable text

00:01:09,040 --> 00:01:13,200
mining systems

00:01:10,159 --> 00:01:15,360
that to assist in the process of

00:01:13,200 --> 00:01:17,439
extraction relevant information from

00:01:15,360 --> 00:01:19,840
hospital search reports

00:01:17,439 --> 00:01:21,360
of the patient's diagnosis with the

00:01:19,840 --> 00:01:24,080
astrologe

00:01:21,360 --> 00:01:24,880
gradually improved and we wanted to

00:01:24,080 --> 00:01:27,840
gradually

00:01:24,880 --> 00:01:29,600
improve the quality of the transforming

00:01:27,840 --> 00:01:30,400
narrative discharge report into

00:01:29,600 --> 00:01:33,840
structured

00:01:30,400 --> 00:01:36,159
clinical data representations

00:01:33,840 --> 00:01:37,600
and generating good practice

00:01:36,159 --> 00:01:41,840
recommendations

00:01:37,600 --> 00:01:44,960
so for this reason we select the syntax

00:01:41,840 --> 00:01:46,799
because it was extraction uh it has for

00:01:44,960 --> 00:01:47,520
the exact information from the electric

00:01:46,799 --> 00:01:50,720
medical

00:01:47,520 --> 00:01:53,920
records and it was based of the uema

00:01:50,720 --> 00:01:57,200
uh that sean explained us

00:01:53,920 --> 00:01:57,920
and also it was it is fully customized

00:01:57,200 --> 00:02:01,040
customized

00:01:57,920 --> 00:02:04,159
pop band to use any opportunity

00:02:01,040 --> 00:02:07,280
a competitive component and

00:02:04,159 --> 00:02:10,560
it was a base of the java

00:02:07,280 --> 00:02:13,120
and it has several components clinical

00:02:10,560 --> 00:02:16,080
domain but mostly for the english

00:02:13,120 --> 00:02:17,520
but for our case it was uh the chemical

00:02:16,080 --> 00:02:20,400
report that was working

00:02:17,520 --> 00:02:20,879
it was the spanish language so we need

00:02:20,400 --> 00:02:24,480
some

00:02:20,879 --> 00:02:27,760
components uh that help us for

00:02:24,480 --> 00:02:29,599
this task for the tokenizing and the

00:02:27,760 --> 00:02:33,440
detected times and so on

00:02:29,599 --> 00:02:34,400
so the component that we wanted to use

00:02:33,440 --> 00:02:37,840
for our

00:02:34,400 --> 00:02:41,440
case it was a full rings hidden time and

00:02:37,840 --> 00:02:43,680
some fast uh sorry fuzzy

00:02:41,440 --> 00:02:45,280
dictionary look up i wrote it by mistake

00:02:43,680 --> 00:02:49,280
here

00:02:45,280 --> 00:02:52,720
and also one metal frog that was brad

00:02:49,280 --> 00:02:56,000
writer uh so i will explain

00:02:52,720 --> 00:02:57,040
all of this component uh uh by details

00:02:56,000 --> 00:02:59,599
and how

00:02:57,040 --> 00:03:01,920
what was that the problem of this

00:02:59,599 --> 00:03:05,280
component and how i integrate them

00:03:01,920 --> 00:03:08,400
into the syntax so first

00:03:05,280 --> 00:03:09,280
uh the pharynx is this a simple aspect

00:03:08,400 --> 00:03:11,680
library

00:03:09,280 --> 00:03:14,480
that providing language analysing

00:03:11,680 --> 00:03:17,280
functionalities such as the motor

00:03:14,480 --> 00:03:17,760
morphologies analysis tokenizing post

00:03:17,280 --> 00:03:21,760
tagging

00:03:17,760 --> 00:03:24,879
semantical labeling and so our so on

00:03:21,760 --> 00:03:28,799
for a variety of the languages such as

00:03:24,879 --> 00:03:31,440
english spanish politics and so on

00:03:28,799 --> 00:03:32,400
around two years ago ring was integrated

00:03:31,440 --> 00:03:35,599
into uma

00:03:32,400 --> 00:03:36,400
using a rapper and it it was tokenized

00:03:35,599 --> 00:03:39,440
uh

00:03:36,400 --> 00:03:42,480
for for furious that it was developers

00:03:39,440 --> 00:03:45,280
developed during an open-minded project

00:03:42,480 --> 00:03:48,720
for our unit

00:03:45,280 --> 00:03:51,519
and but the problem for the firings

00:03:48,720 --> 00:03:52,000
it was that it spilled some spanish

00:03:51,519 --> 00:03:55,360
force

00:03:52,000 --> 00:03:58,959
into two tokens for example if we have

00:03:55,360 --> 00:04:02,239
we had the l it was tokenized in the a

00:03:58,959 --> 00:04:06,720
and l and the same for the disc

00:04:02,239 --> 00:04:09,920
that it was in the separating this and k

00:04:06,720 --> 00:04:12,959
another issue was a rating

00:04:09,920 --> 00:04:16,400
to air for abbreviations force

00:04:12,959 --> 00:04:18,400
some medical balls are for our case was

00:04:16,400 --> 00:04:19,199
very similar with the abbreviations

00:04:18,400 --> 00:04:21,680
board

00:04:19,199 --> 00:04:23,199
when they uh appear at the end of the

00:04:21,680 --> 00:04:25,680
sentence

00:04:23,199 --> 00:04:26,639
with the dots that was the punctuation

00:04:25,680 --> 00:04:29,440
punctuation

00:04:26,639 --> 00:04:29,759
character for example for the mrs that

00:04:29,440 --> 00:04:33,440
is

00:04:29,759 --> 00:04:36,560
related to in branding trivia it is

00:04:33,440 --> 00:04:39,560
ranking variables and also for the d

00:04:36,560 --> 00:04:41,680
and i that they are related to a

00:04:39,560 --> 00:04:44,560
rationalization category

00:04:41,680 --> 00:04:45,040
but for example i in the catalan is

00:04:44,560 --> 00:04:48,400
means

00:04:45,040 --> 00:04:52,160
and so when uh

00:04:48,400 --> 00:04:55,680
we have the dot the phrase tokenizer

00:04:52,160 --> 00:04:59,280
doesn't recognize uh separately dot and

00:04:55,680 --> 00:05:02,400
this force so there

00:04:59,280 --> 00:05:06,320
so for solve this problem first

00:05:02,400 --> 00:05:09,280
we uh update the flowing synchronizer

00:05:06,320 --> 00:05:10,639
for all of involved components uh so

00:05:09,280 --> 00:05:14,320
that i really explained

00:05:10,639 --> 00:05:15,840
in the next slides and so for each

00:05:14,320 --> 00:05:18,080
component that we wanted

00:05:15,840 --> 00:05:20,560
tokenize we operate the fillings instead

00:05:18,080 --> 00:05:24,039
of using the cdx

00:05:20,560 --> 00:05:25,199
tokenizer and another problem it was the

00:05:24,039 --> 00:05:28,240
interpretability

00:05:25,199 --> 00:05:28,639
challenge that the freelance or other

00:05:28,240 --> 00:05:31,600
comp

00:05:28,639 --> 00:05:32,560
uh um companies usually they have their

00:05:31,600 --> 00:05:34,960
type systems

00:05:32,560 --> 00:05:35,680
for example if we rings rapid use a dk

00:05:34,960 --> 00:05:38,800
pro

00:05:35,680 --> 00:05:42,240
type system but the ctx has

00:05:38,800 --> 00:05:44,880
its uh type systems

00:05:42,240 --> 00:05:45,600
and so i'll be explaining later about

00:05:44,880 --> 00:05:49,120
this topic

00:05:45,600 --> 00:05:50,720
uh how we solve this problem

00:05:49,120 --> 00:05:53,360
and another component is the hidden

00:05:50,720 --> 00:05:56,400
hedleton that is a multilingual

00:05:53,360 --> 00:05:58,960
domain sensitive temporal tiger that

00:05:56,400 --> 00:05:59,600
extracts temporal expressions from the

00:05:58,960 --> 00:06:02,319
document

00:05:59,600 --> 00:06:04,080
and normalize them according to the time

00:06:02,319 --> 00:06:06,400
x3

00:06:04,080 --> 00:06:09,680
and header time generated a resource

00:06:06,400 --> 00:06:12,000
manually for 13 languages

00:06:09,680 --> 00:06:15,199
to use this component in earth would be

00:06:12,000 --> 00:06:17,199
adapted is a spanish grammar to the

00:06:15,199 --> 00:06:18,160
medical domain of the cross domain

00:06:17,199 --> 00:06:20,319
grammar

00:06:18,160 --> 00:06:22,720
the adapted grammar can be used to

00:06:20,319 --> 00:06:26,639
detect a temporal expression in reacting

00:06:22,720 --> 00:06:29,440
card data in spanish and

00:06:26,639 --> 00:06:30,160
another exam problem it was the same i

00:06:29,440 --> 00:06:33,280
thought

00:06:30,160 --> 00:06:34,240
you hated them use its type systems but

00:06:33,280 --> 00:06:38,800
we wanted

00:06:34,240 --> 00:06:38,800
to somehow solve this problem

00:06:38,880 --> 00:06:43,600
uh so here is example of the header

00:06:41,280 --> 00:06:44,240
thumbs output yeah if you can see is

00:06:43,600 --> 00:06:48,479
that

00:06:44,240 --> 00:06:50,880
is a spanish update that we tag it

00:06:48,479 --> 00:06:51,919
and also we normalize it to some

00:06:50,880 --> 00:06:55,520
specific

00:06:51,919 --> 00:06:59,199
uh that we put it in the notes here

00:06:55,520 --> 00:07:02,400
is the brad format of the output of the

00:06:59,199 --> 00:07:06,160
header tone

00:07:02,400 --> 00:07:09,360
and uh for the also

00:07:06,160 --> 00:07:11,199
for the fuzzy dictionary uh look up uh

00:07:09,360 --> 00:07:13,520
it is based off the fast division look

00:07:11,199 --> 00:07:15,680
up of the ctx

00:07:13,520 --> 00:07:17,039
but the problem of the the fast

00:07:15,680 --> 00:07:19,759
dictionary look of our

00:07:17,039 --> 00:07:20,160
offseason is very it was really switched

00:07:19,759 --> 00:07:22,960
to

00:07:20,160 --> 00:07:24,319
finding the match was worse in the

00:07:22,960 --> 00:07:27,440
dictionary and or

00:07:24,319 --> 00:07:28,479
lexicons so therefore if the input of

00:07:27,440 --> 00:07:32,319
the electrical

00:07:28,479 --> 00:07:36,479
health reports we have to type and miss

00:07:32,319 --> 00:07:39,360
mrs spelling that is very regular on uh

00:07:36,479 --> 00:07:40,080
in their reports by the doctors so fast

00:07:39,360 --> 00:07:42,240
dictionary

00:07:40,080 --> 00:07:44,960
lookup company couldn't deduct these

00:07:42,240 --> 00:07:46,080
tokens for this reason we decided to

00:07:44,960 --> 00:07:49,039
modify

00:07:46,080 --> 00:07:49,919
fast dictionary lookup component and

00:07:49,039 --> 00:07:52,879
integrate

00:07:49,919 --> 00:07:53,280
it with the s nomnet spell checker that

00:07:52,879 --> 00:07:56,080
is

00:07:53,280 --> 00:07:56,960
using lucid similarity and it is very

00:07:56,080 --> 00:08:00,560
flexible

00:07:56,960 --> 00:08:04,319
in detecting this type of that is very

00:08:00,560 --> 00:08:07,599
usual in medical and clinical domains

00:08:04,319 --> 00:08:11,120
and that so because this new component

00:08:07,599 --> 00:08:13,599
fuzz additionally look on and also

00:08:11,120 --> 00:08:15,280
this facilitation you could normalize uh

00:08:13,599 --> 00:08:18,639
these informations

00:08:15,280 --> 00:08:22,000
uh i will explain later in this

00:08:18,639 --> 00:08:25,360
story so exactly same as the

00:08:22,000 --> 00:08:28,479
the origin of past uh additional lookup

00:08:25,360 --> 00:08:30,560
in the syntax we need a input

00:08:28,479 --> 00:08:32,719
dictionary files that includes all of

00:08:30,560 --> 00:08:35,519
the boards that we want to dedicate

00:08:32,719 --> 00:08:36,719
uh in the in the this file we have the

00:08:35,519 --> 00:08:38,640
three columns

00:08:36,719 --> 00:08:40,479
that in the first column we have is no

00:08:38,640 --> 00:08:43,279
net code and uh

00:08:40,479 --> 00:08:45,040
archetype and also the variance so but

00:08:43,279 --> 00:08:48,080
it's clear that

00:08:45,040 --> 00:08:52,160
one ethical archetype can be half

00:08:48,080 --> 00:08:55,279
have has several variants

00:08:52,160 --> 00:08:56,399
here i'll be explaining a bit how this

00:08:55,279 --> 00:09:00,080
positioning

00:08:56,399 --> 00:09:02,080
uh lookout works so as i said

00:09:00,080 --> 00:09:04,000
in the previous first so we have the

00:09:02,080 --> 00:09:06,000
some files of the very best that you

00:09:04,000 --> 00:09:08,080
want to detect

00:09:06,000 --> 00:09:09,040
here in the mythical dictionary we have

00:09:08,080 --> 00:09:12,000
all of this

00:09:09,040 --> 00:09:13,760
uh sentence or a short phrase or words

00:09:12,000 --> 00:09:17,120
that we wanted to take

00:09:13,760 --> 00:09:20,720
and uh so first uh i will uh

00:09:17,120 --> 00:09:23,360
upload the pre-processing except and uh

00:09:20,720 --> 00:09:23,920
for two folds that the expert checker i

00:09:23,360 --> 00:09:26,800
needed

00:09:23,920 --> 00:09:27,279
and needed so one is for the spell

00:09:26,800 --> 00:09:29,440
checker

00:09:27,279 --> 00:09:31,519
lexicon and another one is the

00:09:29,440 --> 00:09:34,080
spectacular dictionary

00:09:31,519 --> 00:09:36,880
for the first one i applied the

00:09:34,080 --> 00:09:39,680
lowercase and also i remove the accent

00:09:36,880 --> 00:09:40,240
accent from the false and also we have

00:09:39,680 --> 00:09:43,760
only

00:09:40,240 --> 00:09:47,360
the unique words and if the

00:09:43,760 --> 00:09:49,920
the the length of the board is the only

00:09:47,360 --> 00:09:50,640
one i keep the original one as you can

00:09:49,920 --> 00:09:53,760
see here

00:09:50,640 --> 00:09:55,360
we have i in the capital uppercase but

00:09:53,760 --> 00:09:58,000
the rest is the lowercase

00:09:55,360 --> 00:09:59,920
and yeah i applied the same previous

00:09:58,000 --> 00:10:02,240
exception for the dictionary one for

00:09:59,920 --> 00:10:05,440
expectation

00:10:02,240 --> 00:10:06,000
and also for the uh first edition you

00:10:05,440 --> 00:10:09,040
look up

00:10:06,000 --> 00:10:10,880
so we have the map so we have the so is

00:10:09,040 --> 00:10:14,640
the map so we have the first four

00:10:10,880 --> 00:10:18,000
and after for the the g and the value

00:10:14,640 --> 00:10:21,279
it is the complete uh uh

00:10:18,000 --> 00:10:23,519
phrase that you want to detect so

00:10:21,279 --> 00:10:25,760
here we have the input so it's the

00:10:23,519 --> 00:10:29,200
medical report input that is the lesion

00:10:25,760 --> 00:10:33,279
organ dion but it has the typo and

00:10:29,200 --> 00:10:36,000
uh it doesn't have x accent and so on

00:10:33,279 --> 00:10:37,920
but we want to detect uh it is we have

00:10:36,000 --> 00:10:39,680
this word or similar this word in the

00:10:37,920 --> 00:10:44,880
ordinary or not

00:10:39,680 --> 00:10:44,880
so first uh again we apply the

00:10:45,120 --> 00:10:50,160
the accent preposition convert them to

00:10:47,760 --> 00:10:54,480
lowercase

00:10:50,160 --> 00:10:56,480
so for the first step i find the

00:10:54,480 --> 00:10:58,320
for the first board i'm looking for the

00:10:56,480 --> 00:11:01,440
rs specifically

00:10:58,320 --> 00:11:02,240
for our lexicon and i applied the

00:11:01,440 --> 00:11:05,920
accuracy of

00:11:02,240 --> 00:11:09,360
70 percent to see can we

00:11:05,920 --> 00:11:10,959
predict or this world or similar word of

00:11:09,360 --> 00:11:13,600
the dysphoria in our especially

00:11:10,959 --> 00:11:14,480
lexicon that accuracy of 70 percent

00:11:13,600 --> 00:11:17,360
because only

00:11:14,480 --> 00:11:19,200
it is only one board and it can have a

00:11:17,360 --> 00:11:19,440
lot of the tribal so i put the accuracy

00:11:19,200 --> 00:11:22,079
of

00:11:19,440 --> 00:11:23,279
seventy percent and if you can see we

00:11:22,079 --> 00:11:27,040
have the power of

00:11:23,279 --> 00:11:29,279
this what this is so first step is done

00:11:27,040 --> 00:11:30,959
so the next step i will replace the

00:11:29,279 --> 00:11:33,519
first board with the correct one

00:11:30,959 --> 00:11:34,800
the soonest organic dion but i will look

00:11:33,519 --> 00:11:38,560
at the two

00:11:34,800 --> 00:11:42,720
yeah is i'll replace the first one

00:11:38,560 --> 00:11:46,480
and the the second step is uh is uh

00:11:42,720 --> 00:11:49,760
also uh we keep the the

00:11:46,480 --> 00:11:50,560
the value of the disk uh key in the rdg

00:11:49,760 --> 00:11:53,040
remark

00:11:50,560 --> 00:11:54,399
so uh in the dictionary uh map also we

00:11:53,040 --> 00:11:57,279
have the listeners

00:11:54,399 --> 00:11:57,839
and also uh and also we keep the the

00:11:57,279 --> 00:12:00,959
correct

00:11:57,839 --> 00:12:04,079
value for the d skill that is looseness

00:12:00,959 --> 00:12:05,920
and organ diana but it can be

00:12:04,079 --> 00:12:07,440
but maybe if you can't have more and

00:12:05,920 --> 00:12:10,480
more than one of

00:12:07,440 --> 00:12:13,600
prayers it can be and this

00:12:10,480 --> 00:12:16,720
in the second step is using

00:12:13,600 --> 00:12:20,079
this uh modified input that is

00:12:16,720 --> 00:12:23,040
listening as organo dion uh we

00:12:20,079 --> 00:12:25,760
we want to look it in the our dictionary

00:12:23,040 --> 00:12:27,839
false study for this culture

00:12:25,760 --> 00:12:28,959
and we applied the accuracy of 80

00:12:27,839 --> 00:12:31,600
percent

00:12:28,959 --> 00:12:32,720
so with 80 percent accuracy we can find

00:12:31,600 --> 00:12:36,079
the

00:12:32,720 --> 00:12:38,320
this units in organodiano and then

00:12:36,079 --> 00:12:39,200
we check the output of the dictionary

00:12:38,320 --> 00:12:42,240
mapper

00:12:39,200 --> 00:12:45,040
and with the uh output of the

00:12:42,240 --> 00:12:46,079
especially dictionary if it is the same

00:12:45,040 --> 00:12:49,920
so we tag

00:12:46,079 --> 00:12:53,839
this input as uh for that

00:12:49,920 --> 00:12:56,720
looking for that

00:12:53,839 --> 00:12:58,240
so no is uh so i'm going to explain

00:12:56,720 --> 00:13:01,360
about the interpretability

00:12:58,240 --> 00:13:03,440
challenge that we have to address

00:13:01,360 --> 00:13:06,399
because as i said different component

00:13:03,440 --> 00:13:09,680
has different type systems

00:13:06,399 --> 00:13:11,600
so uh the the one solution that

00:13:09,680 --> 00:13:12,720
uh we was thinking about that in the

00:13:11,600 --> 00:13:15,680
first step

00:13:12,720 --> 00:13:16,240
it was the uh the time mapper uh from

00:13:15,680 --> 00:13:19,279
the

00:13:16,240 --> 00:13:20,160
next uh institute that is the national

00:13:19,279 --> 00:13:23,680
center report

00:13:20,160 --> 00:13:27,040
takes mining in england in england

00:13:23,680 --> 00:13:29,920
which is uh capable of the transcribing

00:13:27,040 --> 00:13:31,279
and or mapping from one type to another

00:13:29,920 --> 00:13:34,079
that can be

00:13:31,279 --> 00:13:36,000
placed between non-interoperable

00:13:34,079 --> 00:13:39,120
components

00:13:36,000 --> 00:13:41,920
the type mapper component takes a

00:13:39,120 --> 00:13:44,639
user-defined mapping as a parameter

00:13:41,920 --> 00:13:46,320
for example for this example that you

00:13:44,639 --> 00:13:50,040
can see here

00:13:46,320 --> 00:13:51,440
for each annotations of the type

00:13:50,040 --> 00:13:54,079
com.example.person

00:13:51,440 --> 00:13:58,680
the component will create a

00:13:54,079 --> 00:14:02,160
corresponding annotations of the type

00:13:58,680 --> 00:14:04,480
org.example.name entity

00:14:02,160 --> 00:14:05,839
but we tried to use this component a

00:14:04,480 --> 00:14:08,880
comp component

00:14:05,839 --> 00:14:10,959
but we got several errors and it was

00:14:08,880 --> 00:14:12,240
not easy and simple as they mentioned

00:14:10,959 --> 00:14:14,880
their website

00:14:12,240 --> 00:14:16,240
uh so another solution it was to instead

00:14:14,880 --> 00:14:19,120
of using the next

00:14:16,240 --> 00:14:20,000
converting tab we do it manually but it

00:14:19,120 --> 00:14:23,519
is to

00:14:20,000 --> 00:14:24,320
have a messy code so another solution

00:14:23,519 --> 00:14:27,120
that we chose

00:14:24,320 --> 00:14:28,880
it is writing a native type system of

00:14:27,120 --> 00:14:31,600
syntax for the header time and field

00:14:28,880 --> 00:14:34,959
feelings rather component

00:14:31,600 --> 00:14:39,040
that i will explain here

00:14:34,959 --> 00:14:42,160
so uh

00:14:39,040 --> 00:14:44,160
means that we added all necessary types

00:14:42,160 --> 00:14:46,560
in the header time and the dk prototype

00:14:44,160 --> 00:14:50,639
system that their equivalent

00:14:46,560 --> 00:14:52,480
were not in the ctx type systems

00:14:50,639 --> 00:14:55,279
and of course we followed the same

00:14:52,480 --> 00:14:58,639
format name of the types for example

00:14:55,279 --> 00:15:02,079
in the syntax subsystem we have org dot

00:14:58,639 --> 00:15:04,240
space statistics the type systems and so

00:15:02,079 --> 00:15:04,240
on

00:15:05,279 --> 00:15:11,040
in this example you can see we added the

00:15:08,560 --> 00:15:11,680
the type system in the for the type of

00:15:11,040 --> 00:15:15,279
time x

00:15:11,680 --> 00:15:16,079
3 for from the header time and we added

00:15:15,279 --> 00:15:20,000
into

00:15:16,079 --> 00:15:20,000
uh the type system of the syntax

00:15:20,079 --> 00:15:23,600
and here we can see the example uh that

00:15:23,199 --> 00:15:27,199
we

00:15:23,600 --> 00:15:31,040
i added the dependency of the pharynx

00:15:27,199 --> 00:15:31,040
type system into the citrix

00:15:31,360 --> 00:15:36,160
and here as you can see uh in the

00:15:34,399 --> 00:15:36,959
original code of the three rings the

00:15:36,160 --> 00:15:40,079
first one

00:15:36,959 --> 00:15:43,040
first one and they imported token a type

00:15:40,079 --> 00:15:44,639
of the decay prototype systems

00:15:43,040 --> 00:15:46,880
to solve the problem and to be

00:15:44,639 --> 00:15:48,000
integrated with the c text subsystem we

00:15:46,880 --> 00:15:51,440
imported

00:15:48,000 --> 00:15:55,680
its equivalent into cdx subsystems uh

00:15:51,440 --> 00:15:58,240
that for the token was a wordplugin

00:15:55,680 --> 00:16:00,720
and we changed the related variables so

00:15:58,240 --> 00:16:03,680
in the first time it was a token

00:16:00,720 --> 00:16:04,560
and then we replies replace it with the

00:16:03,680 --> 00:16:08,320
word token

00:16:04,560 --> 00:16:10,880
from the syntax that we added uh

00:16:08,320 --> 00:16:13,199
that it was available in this uh ctx

00:16:10,880 --> 00:16:15,440
type systems

00:16:13,199 --> 00:16:16,959
but for this code of the header times

00:16:15,440 --> 00:16:20,839
because we didn't have the

00:16:16,959 --> 00:16:22,000
uh this type in the original syntax type

00:16:20,839 --> 00:16:25,120
system

00:16:22,000 --> 00:16:27,920
so we import so we imported the

00:16:25,120 --> 00:16:28,800
the type that we added uh manually by

00:16:27,920 --> 00:16:32,240
ourself

00:16:28,800 --> 00:16:33,680
uh and so for this uh type of variables

00:16:32,240 --> 00:16:36,240
that we don't have the

00:16:33,680 --> 00:16:37,120
in the original type system the syntax

00:16:36,240 --> 00:16:39,279
type system

00:16:37,120 --> 00:16:40,320
we don't need to change the the

00:16:39,279 --> 00:16:43,519
variables so

00:16:40,320 --> 00:16:44,000
because it was time x3 so we just change

00:16:43,519 --> 00:16:47,360
the

00:16:44,000 --> 00:16:50,560
or add the new import library

00:16:47,360 --> 00:16:54,240
type system and

00:16:50,560 --> 00:16:57,279
uh uh also we have to change the poem

00:16:54,240 --> 00:17:00,399
so if uh uh before the running the

00:16:57,279 --> 00:17:04,319
component is necessary to

00:17:00,399 --> 00:17:07,839
add the uh uh the add at this

00:17:04,319 --> 00:17:09,919
new component as a module and also

00:17:07,839 --> 00:17:12,559
show the dependency of the these

00:17:09,919 --> 00:17:15,439
components together

00:17:12,559 --> 00:17:16,160
and also if this we need some additional

00:17:15,439 --> 00:17:19,919
lastpass

00:17:16,160 --> 00:17:22,400
we as the dictionary foster dictionary

00:17:19,919 --> 00:17:23,839
needs and also the open open minded and

00:17:22,400 --> 00:17:26,640
also for the header time

00:17:23,839 --> 00:17:27,600
we have to add the resource in the

00:17:26,640 --> 00:17:31,120
additional

00:17:27,600 --> 00:17:33,280
class pass elements uh for the running

00:17:31,120 --> 00:17:36,240
the code uh

00:17:33,280 --> 00:17:37,200
so we use the pipeline builder in the

00:17:36,240 --> 00:17:39,360
syntax

00:17:37,200 --> 00:17:41,360
uh is the same as the the other

00:17:39,360 --> 00:17:44,400
components it should be the order

00:17:41,360 --> 00:17:47,760
piece of order so we used add

00:17:44,400 --> 00:17:49,360
and so we added the uh for example here

00:17:47,760 --> 00:17:51,280
is the feeling strapper

00:17:49,360 --> 00:17:52,559
and also we have to be a several

00:17:51,280 --> 00:17:54,559
argument

00:17:52,559 --> 00:17:55,919
that is here is the language is the

00:17:54,559 --> 00:17:57,679
spanish yes

00:17:55,919 --> 00:17:59,760
and also do you want to upload

00:17:57,679 --> 00:18:03,679
dependency parsing or not

00:17:59,760 --> 00:18:05,760
so we can put it the true and false

00:18:03,679 --> 00:18:07,360
and for the three rings the second one

00:18:05,760 --> 00:18:10,640
is free rings that we have

00:18:07,360 --> 00:18:13,520
another parameters that here are

00:18:10,640 --> 00:18:14,320
used against uh using spanish language

00:18:13,520 --> 00:18:17,840
but i said

00:18:14,320 --> 00:18:20,480
it has feelings and here they don't have

00:18:17,840 --> 00:18:22,559
several languages over several languages

00:18:20,480 --> 00:18:25,440
and so

00:18:22,559 --> 00:18:26,480
here we use the durations date and the

00:18:25,440 --> 00:18:30,400
time

00:18:26,480 --> 00:18:30,400
there are true the rest is false

00:18:33,840 --> 00:18:37,200
for the first edition lookup is the same

00:18:36,000 --> 00:18:39,360
as the

00:18:37,200 --> 00:18:40,840
fast dictionary lookup we have to

00:18:39,360 --> 00:18:44,080
address the

00:18:40,840 --> 00:18:45,520
dictionary description task uh of course

00:18:44,080 --> 00:18:48,559
we have to

00:18:45,520 --> 00:18:51,120
change it and address to default

00:18:48,559 --> 00:18:55,120
dictionary files that i mentioned

00:18:51,120 --> 00:18:56,880
and the rest is the same and also for

00:18:55,120 --> 00:18:59,360
the uh

00:18:56,880 --> 00:19:00,160
is not component but in it is uh the

00:18:59,360 --> 00:19:03,760
method

00:19:00,160 --> 00:19:04,720
that i have we added it is for the pratt

00:19:03,760 --> 00:19:07,679
so first one is

00:19:04,720 --> 00:19:09,039
smi output that is the it was other it

00:19:07,679 --> 00:19:10,880
was uh

00:19:09,039 --> 00:19:12,160
followed by the minus syntax but the

00:19:10,880 --> 00:19:14,400
next one is the prod

00:19:12,160 --> 00:19:15,600
because we want to to use the broad

00:19:14,400 --> 00:19:19,120
tools so we use

00:19:15,600 --> 00:19:21,760
uh this uh i wrote it this method

00:19:19,120 --> 00:19:22,640
to save in the black format and also for

00:19:21,760 --> 00:19:25,760
the right uh

00:19:22,640 --> 00:19:26,720
in the html writer also i change it a

00:19:25,760 --> 00:19:29,120
bit because

00:19:26,720 --> 00:19:30,400
it doesn't support the header times so i

00:19:29,120 --> 00:19:34,240
added this

00:19:30,400 --> 00:19:37,360
uh inform this code

00:19:34,240 --> 00:19:40,960
i added this information into hdmi

00:19:37,360 --> 00:19:43,520
code and here is the example of the

00:19:40,960 --> 00:19:44,880
brad that you can see here i'm not sure

00:19:43,520 --> 00:19:47,039
it's curious or not

00:19:44,880 --> 00:19:48,400
but anyway is the format of the product

00:19:47,039 --> 00:19:52,559
or output of the tools

00:19:48,400 --> 00:19:56,000
and is the hdmi that support there

00:19:52,559 --> 00:19:58,960
time has done as well and

00:19:56,000 --> 00:20:00,240
all of the source is available in the

00:19:58,960 --> 00:20:03,760
our github

00:20:00,240 --> 00:20:07,440
icon repository and

00:20:03,760 --> 00:20:10,559
uh i will upload that update

00:20:07,440 --> 00:20:13,840
the readme in the next few days to

00:20:10,559 --> 00:20:17,120
how you can use these informations

00:20:13,840 --> 00:20:20,480
in components into specifics and

00:20:17,120 --> 00:20:24,159
usually compile the cfp

00:20:20,480 --> 00:20:25,679
new components and thank you so much for

00:20:24,159 --> 00:20:27,760
your

00:20:25,679 --> 00:20:30,720
listening if you have any questions i

00:20:27,760 --> 00:20:30,720
will be happy to answer

00:20:32,840 --> 00:20:35,840
uh

00:20:38,640 --> 00:20:41,679
how did you use that

00:20:47,200 --> 00:20:51,440
all right so uh so the only change that

00:20:49,840 --> 00:20:53,440
i changed for the first week

00:20:51,440 --> 00:20:54,480
in the method is so as i said the best

00:20:53,440 --> 00:20:56,880
of the

00:20:54,480 --> 00:20:57,840
fast uh dictionary look up the only

00:20:56,880 --> 00:21:01,520
things that i

00:20:57,840 --> 00:21:04,480
uh changed it was i played

00:21:01,520 --> 00:21:05,679
affiliates tokenizer instead of the

00:21:04,480 --> 00:21:08,720
tokenizer of the

00:21:05,679 --> 00:21:10,080
ctx itself to be integrated with the

00:21:08,720 --> 00:21:13,600
rest of the

00:21:10,080 --> 00:21:17,200
component and uh

00:21:13,600 --> 00:21:18,080
also because it was very sweet so if you

00:21:17,200 --> 00:21:21,919
want to be

00:21:18,080 --> 00:21:31,840
some uh fuzzy to uh apply

00:21:21,919 --> 00:21:31,840
another typo that can happen in the text

00:21:33,440 --> 00:21:37,520
okay can everyone hear me this is shawn

00:21:36,799 --> 00:21:41,679
again

00:21:37,520 --> 00:21:45,280
hi son okay so i have a question

00:21:41,679 --> 00:21:48,960
uh your spell correct

00:21:45,280 --> 00:21:52,240
dictionary how did you actually build it

00:21:48,960 --> 00:21:55,280
how where did you get the um

00:21:52,240 --> 00:21:55,840
misspelled terms that you put into it so

00:21:55,280 --> 00:21:59,919
i i

00:21:55,840 --> 00:22:03,200
saw as i said i we use the esthetical uh

00:21:59,919 --> 00:22:04,240
estimated spectacular so we just added

00:22:03,200 --> 00:22:07,360
this library

00:22:04,240 --> 00:22:08,320
uh in this project actually into the

00:22:07,360 --> 00:22:10,960
cities

00:22:08,320 --> 00:22:12,720
and as i think as i explained in the i

00:22:10,960 --> 00:22:15,840
don't know you was in the meeting

00:22:12,720 --> 00:22:19,919
so i explained how it works so let me

00:22:15,840 --> 00:22:23,280
back to this slide

00:22:19,919 --> 00:22:24,400
here uh uh i explained how we handled

00:22:23,280 --> 00:22:27,039
this uh

00:22:24,400 --> 00:22:27,039
misspelling

00:22:32,159 --> 00:22:35,200
okay great thank you

00:22:35,679 --> 00:22:41,440
another question i suppose title time so

00:22:39,360 --> 00:22:43,520
if i remember correctly it can handle

00:22:41,440 --> 00:22:46,880
both german and english expressions

00:22:43,520 --> 00:22:49,039
does it have a setting for

00:22:46,880 --> 00:22:50,559
spanish or did you have to make some

00:22:49,039 --> 00:22:52,960
modifications for that

00:22:50,559 --> 00:22:54,320
no the only things that we changed for

00:22:52,960 --> 00:22:55,840
the spanish uh

00:22:54,320 --> 00:22:57,840
it was for the because we need to

00:22:55,840 --> 00:23:00,960
normalize at the

00:22:57,840 --> 00:23:04,000
times so the only the most uh

00:23:00,960 --> 00:23:04,559
change that we change for the header

00:23:04,000 --> 00:23:09,039
time

00:23:04,559 --> 00:23:13,520
to have a normalized version of the of

00:23:09,039 --> 00:23:17,440
each of these patterns the pattern

00:23:13,520 --> 00:23:19,840
so here if you can if you see

00:23:17,440 --> 00:23:20,480
here so in the node we have normalized

00:23:19,840 --> 00:23:23,520
everything in

00:23:20,480 --> 00:23:24,320
some explicit formats so we changed the

00:23:23,520 --> 00:23:27,360
grammar

00:23:24,320 --> 00:23:29,280
to have this information also the code

00:23:27,360 --> 00:23:31,280
of the or the grammar that we added in

00:23:29,280 --> 00:23:35,039
the header term is also is available

00:23:31,280 --> 00:23:35,039
in all github repository

00:23:35,679 --> 00:23:41,200
okay great i'm sorry if you

00:23:39,760 --> 00:23:43,919
said these things and i missed them i've

00:23:41,200 --> 00:23:44,559
been trying to handle the chat both here

00:23:43,919 --> 00:23:50,799
and

00:23:44,559 --> 00:23:52,640
in the main stage so my apologies

00:23:50,799 --> 00:23:54,720
and also this another question that c

00:23:52,640 --> 00:23:58,000
takes has functionality to work with

00:23:54,720 --> 00:24:02,159
speech to text that i don't see so about

00:23:58,000 --> 00:24:05,760
john so it does not right now

00:24:02,159 --> 00:24:06,559
basically um for something like speech

00:24:05,760 --> 00:24:10,080
to text

00:24:06,559 --> 00:24:13,600
or you know grabbing

00:24:10,080 --> 00:24:13,600
pdf files or

00:24:14,400 --> 00:24:20,880
optical character recognition

00:24:17,840 --> 00:24:23,919
would have to use an external tool

00:24:20,880 --> 00:24:26,100
as a preprocessor and

00:24:23,919 --> 00:24:27,600
basically have that

00:24:26,100 --> 00:24:29,760
[Music]

00:24:27,600 --> 00:24:31,520
create the regular plain text clinical

00:24:29,760 --> 00:24:33,840
note and ctx would consume

00:24:31,520 --> 00:24:33,840
that

00:24:42,880 --> 00:24:47,840
or as timothy miller sums it up nope

00:25:04,960 --> 00:25:08,059
[Music]

00:25:14,480 --> 00:25:17,840
okay i think we are ten minutes to until

00:25:17,200 --> 00:25:21,279
the

00:25:17,840 --> 00:25:21,840
next presentation uh if there are any

00:25:21,279 --> 00:25:25,679
more

00:25:21,840 --> 00:25:28,799
questions type them quickly

00:25:25,679 --> 00:25:32,320
i was told i suppose that

00:25:28,799 --> 00:25:34,080
some people needed to leave the current

00:25:32,320 --> 00:25:37,039
session

00:25:34,080 --> 00:25:38,880
go back into the sessions panel and

00:25:37,039 --> 00:25:45,120
re-select ctas

00:25:38,880 --> 00:25:45,120
and i correct in that understanding

00:25:49,679 --> 00:25:53,600
yes okay it looks like

00:25:54,840 --> 00:26:02,400
uh this is a strange platform

00:25:59,840 --> 00:26:03,840
it's the first time that anyone here has

00:26:02,400 --> 00:26:08,159
really used it so i

00:26:03,840 --> 00:26:10,720
apologize if it's been confusing um

00:26:08,159 --> 00:26:12,960
we are all kind of learning this as we

00:26:10,720 --> 00:26:12,960
go

00:26:22,840 --> 00:26:25,840
to

00:26:29,039 --> 00:26:39,840
are there any questions

00:26:40,559 --> 00:26:46,640
i think each targ has each uh station

00:26:43,679 --> 00:26:47,760
so we have to change each session

00:26:46,640 --> 00:26:49,760
something

00:26:47,760 --> 00:26:51,120
but next one we have to leave here and

00:26:49,760 --> 00:26:54,080
go to next one

00:26:51,120 --> 00:26:54,880
right yes i think we should all do that

00:26:54,080 --> 00:26:57,279
whether

00:26:54,880 --> 00:26:58,640
it is required or not uh better safe

00:26:57,279 --> 00:27:02,240
than sorry

00:26:58,640 --> 00:27:04,880
uh for the performance uh we tested

00:27:02,240 --> 00:27:06,240
so i think it's fast enough but uh i

00:27:04,880 --> 00:27:08,159
didn't i mean i didn't

00:27:06,240 --> 00:27:10,159
test it for the performance how it

00:27:08,159 --> 00:27:12,559
passed or how fast

00:27:10,159 --> 00:27:13,279
the fast teaching it was but it's really

00:27:12,559 --> 00:27:17,200
fast

00:27:13,279 --> 00:27:20,240
uh on the for our case i didn't test it

00:27:17,200 --> 00:27:23,360
for each to see how second it takes

00:27:20,240 --> 00:27:26,640
or uh but it's very fast enough to

00:27:23,360 --> 00:27:35,840
handle the uh the program i thought and

00:27:26,640 --> 00:27:35,840
so on

00:27:55,120 --> 00:27:59,600
and also for the uh the previous

00:27:58,000 --> 00:28:02,559
question of the pattern

00:27:59,600 --> 00:28:03,600
for the overlapping entities so if we

00:28:02,559 --> 00:28:06,000
have

00:28:03,600 --> 00:28:06,720
for our guests if we have two entities

00:28:06,000 --> 00:28:08,880
uh

00:28:06,720 --> 00:28:10,000
that they have overlapped for the two

00:28:08,880 --> 00:28:13,360
different type

00:28:10,000 --> 00:28:16,559
so we select the both but if for our

00:28:13,360 --> 00:28:18,159
case if you have the same two different

00:28:16,559 --> 00:28:21,600
entities with the same

00:28:18,159 --> 00:28:24,720
type we use the longest

00:28:21,600 --> 00:28:28,159
uh type longest expand for the

00:28:24,720 --> 00:28:30,960
the entity so we

00:28:28,159 --> 00:28:32,240
choose only selected that one if you

00:28:30,960 --> 00:28:45,840
understand correctly about the

00:28:32,240 --> 00:28:45,840
overlapping entity range that you asked

00:28:47,440 --> 00:28:53,840
let me video chatting with audio

00:28:50,720 --> 00:28:53,840
about ctx

00:28:55,360 --> 00:29:01,440
ah okay so i i suppose

00:28:58,399 --> 00:29:04,159
this question about uh

00:29:01,440 --> 00:29:05,440
having some video chat with audio about

00:29:04,159 --> 00:29:09,200
seatakes

00:29:05,440 --> 00:29:11,919
i would like to do that uh perhaps

00:29:09,200 --> 00:29:12,399
at the end of every day or perhaps even

00:29:11,919 --> 00:29:13,690
just

00:29:12,399 --> 00:29:15,679
at the end of the

00:29:13,690 --> 00:29:20,480
[Music]

00:29:15,679 --> 00:29:23,760
apache conference itself on thursday

00:29:20,480 --> 00:29:25,360
i am going to have to think about it

00:29:23,760 --> 00:29:27,679
and also think about how we might be

00:29:25,360 --> 00:29:32,559
able to do it and get back to

00:29:27,679 --> 00:29:32,559
everyone on that so stay tuned

00:29:32,880 --> 00:29:35,279
all right

00:29:36,480 --> 00:29:42,320
uh well i i think we're at time

00:29:39,520 --> 00:29:43,120
so cmac thank you very much this was

00:29:42,320 --> 00:29:46,799
really neat

00:29:43,120 --> 00:29:49,360
and uh it's amazing to see

00:29:46,799 --> 00:29:50,159
sea takes applied to another language

00:29:49,360 --> 00:29:53,440
besides

00:29:50,159 --> 00:29:56,159
english and tomorrow also i would uh

00:29:53,440 --> 00:29:57,840
have a card for the all project itself

00:29:56,159 --> 00:30:00,399
i'm going to details

00:29:57,840 --> 00:30:02,240
and how what was our corporal and what

00:30:00,399 --> 00:30:05,200
the challenge we have to address

00:30:02,240 --> 00:30:05,200
for our kids

00:30:05,360 --> 00:30:12,080
and we use this component as yes

00:30:09,440 --> 00:30:13,360
i for one will be watching that sounds

00:30:12,080 --> 00:30:17,039
like

00:30:13,360 --> 00:30:20,240
okay everyone so again uh

00:30:17,039 --> 00:30:21,039
i think the best thing to do right now

00:30:20,240 --> 00:30:24,399
is to

00:30:21,039 --> 00:30:27,760
leave the discussion uh big red

00:30:24,399 --> 00:30:30,880
letters upper right corner and

00:30:27,760 --> 00:30:33,200
then try to re-enter whatever

00:30:30,880 --> 00:30:34,880
c takes session happens to be running

00:30:33,200 --> 00:30:36,880
right now

00:30:34,880 --> 00:30:39,679
thank you so much for inviting me all

00:30:36,880 --> 00:30:39,679
right thanks all

00:30:48,840 --> 00:30:51,840
right

00:30:54,320 --> 00:30:56,399

YouTube URL: https://www.youtube.com/watch?v=-oliHuw8LeQ


