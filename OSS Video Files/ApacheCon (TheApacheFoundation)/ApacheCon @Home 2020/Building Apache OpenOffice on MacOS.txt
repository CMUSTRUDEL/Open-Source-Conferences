Title: Building Apache OpenOffice on MacOS
Publication date: 2020-10-14
Playlist: ApacheCon @Home 2020
Description: 
	Building Apache OpenOffice on MacOS
Jim Jagielski

A presentation from ApacheCon @Home 2020
https://apachecon.com/acah2020/

A talk about building Apache OpenOffice on MacOS.

Jim Jagielski is a well-known and acknowledged expert and visionary in open source, an accomplished coder, and frequent engaging presenter on all things open, web, and cloud related. As a developer, he’s made substantial code contributions to just about every core technology behind the internet and web and in 2012 was awarded the O’Reilly Open Source Award. In 2015, he received the Innovation Luminary Award from the EU. He is likely best known as one of the developers and cofounders of the Apache Software Foundation, where he has previously served as both chairman and president and where he’s been on the board of directors since day one. He’s served as president of the Outercurve Foundation and was also a director of the Open Source Initiative (OSI). He works at Uber in their Open Source Program Office. He credits his wife Eileen with keeping him sane.
Captions: 
	00:00:06,420 --> 00:00:10,640
[Music]

00:00:14,160 --> 00:00:17,230
[Music]

00:00:25,519 --> 00:00:30,000
hello everyone

00:00:26,960 --> 00:00:33,120
welcome to what i'm sure will be the

00:00:30,000 --> 00:00:34,079
most popular session of apache con in

00:00:33,120 --> 00:00:37,520
00:00:34,079 --> 00:00:38,559
maybe even the entire history of apache

00:00:37,520 --> 00:00:42,879
cons

00:00:38,559 --> 00:00:45,920
building apache open office on mac os

00:00:42,879 --> 00:00:49,520
i know it's one that has been

00:00:45,920 --> 00:00:51,280
just clamored for by huge amounts of the

00:00:49,520 --> 00:00:52,960
population out there so i'm really

00:00:51,280 --> 00:00:54,879
really proud to be able to

00:00:52,960 --> 00:00:56,160
be uh presenting this for you uh today

00:00:54,879 --> 00:00:59,280
hope everyone's having

00:00:56,160 --> 00:01:01,920
a great and fantastic uh session uh

00:00:59,280 --> 00:01:03,280
really impressed with how apache khan is

00:01:01,920 --> 00:01:05,680
going this year

00:01:03,280 --> 00:01:06,640
hoping everyone is also staying safe as

00:01:05,680 --> 00:01:08,479
well

00:01:06,640 --> 00:01:11,600
a little bit about me my name is jim

00:01:08,479 --> 00:01:14,479
jagelski i've been with the asf

00:01:11,600 --> 00:01:15,520
for a very very long period of time

00:01:14,479 --> 00:01:16,960
after being

00:01:15,520 --> 00:01:19,040
in the apache group and one of the

00:01:16,960 --> 00:01:22,400
co-founders of the asf

00:01:19,040 --> 00:01:24,240
i believe i was a mentor for apache open

00:01:22,400 --> 00:01:27,600
office that had been on the

00:01:24,240 --> 00:01:30,400
pmc since then uh recently

00:01:27,600 --> 00:01:31,280
i've been the release manager for a

00:01:30,400 --> 00:01:35,200
number

00:01:31,280 --> 00:01:36,640
i guess maybe three apache open office

00:01:35,200 --> 00:01:40,640
uh releases

00:01:36,640 --> 00:01:44,720
and have also provided the community

00:01:40,640 --> 00:01:45,520
builds for the linux 64 and linux 32

00:01:44,720 --> 00:01:49,119
builds

00:01:45,520 --> 00:01:51,840
as well as mac os

00:01:49,119 --> 00:01:53,040
uh apache open office is sort of like

00:01:51,840 --> 00:01:55,759
the

00:01:53,040 --> 00:01:56,399
schrodinger's cat i guess of open source

00:01:55,759 --> 00:01:59,759
projects

00:01:56,399 --> 00:02:00,240
is it live is it dead it's very very

00:01:59,759 --> 00:02:03,439
much

00:02:00,240 --> 00:02:06,840
alive uh just a little editorial comment

00:02:03,439 --> 00:02:08,720
i am a firm believer that the world

00:02:06,840 --> 00:02:12,480
needs a

00:02:08,720 --> 00:02:16,000
permissively licensed uh office suite

00:02:12,480 --> 00:02:19,360
i think it's vitally important uh

00:02:16,000 --> 00:02:19,920
out there for there to be an office

00:02:19,360 --> 00:02:22,319
suite

00:02:19,920 --> 00:02:23,599
that has as few restrictions on possible

00:02:22,319 --> 00:02:26,640
as possible

00:02:23,599 --> 00:02:28,640
as well as enables people to do

00:02:26,640 --> 00:02:30,640
basically anything and that all they

00:02:28,640 --> 00:02:33,440
want to do with it so i think

00:02:30,640 --> 00:02:35,360
uh even if that was just it i think

00:02:33,440 --> 00:02:36,000
there is a real purpose and a real need

00:02:35,360 --> 00:02:38,480
for apache

00:02:36,000 --> 00:02:41,040
open office but the other thing that i

00:02:38,480 --> 00:02:42,720
think is also very very important

00:02:41,040 --> 00:02:44,800
and we'll notice this when we start

00:02:42,720 --> 00:02:47,920
getting into the actual build

00:02:44,800 --> 00:02:51,040
process for openoffice

00:02:47,920 --> 00:02:52,560
is that not only

00:02:51,040 --> 00:02:54,480
does the world need a permissible

00:02:52,560 --> 00:02:58,480
license off this week

00:02:54,480 --> 00:03:01,840
but it also needs one which is available

00:02:58,480 --> 00:03:05,120
to huge um

00:03:01,840 --> 00:03:07,599
sections of the population which are not

00:03:05,120 --> 00:03:10,080
lucky enough we're fortunate enough or

00:03:07,599 --> 00:03:13,200
rich enough or well off enough

00:03:10,080 --> 00:03:16,400
uh or you know advantaged

00:03:13,200 --> 00:03:19,519
enough to have the latest and greatest

00:03:16,400 --> 00:03:20,800
uh systems latest and greatest operating

00:03:19,519 --> 00:03:23,840
systems

00:03:20,800 --> 00:03:25,120
large amounts of memory large amounts of

00:03:23,840 --> 00:03:28,799
ram

00:03:25,120 --> 00:03:33,440
things of that nature huge populations

00:03:28,799 --> 00:03:37,360
need something which will run on

00:03:33,440 --> 00:03:38,959
basically old platforms old os's and

00:03:37,360 --> 00:03:42,159
stuff like that

00:03:38,959 --> 00:03:44,239
and i think that uh open office is sort

00:03:42,159 --> 00:03:47,200
of like fills that niche

00:03:44,239 --> 00:03:47,920
as well uh it really is meant to do that

00:03:47,200 --> 00:03:51,000
and in fact

00:03:47,920 --> 00:03:53,120
what you'll see when we build our

00:03:51,000 --> 00:03:55,040
community-provided versions

00:03:53,120 --> 00:03:56,239
uh we build them with the expectation

00:03:55,040 --> 00:04:00,239
that they will be running

00:03:56,239 --> 00:04:03,920
on extremely old versions of

00:04:00,239 --> 00:04:06,959
linux uh bsd uh mac os

00:04:03,920 --> 00:04:08,159
and things like that and in some ways

00:04:06,959 --> 00:04:12,159
that kind of like

00:04:08,159 --> 00:04:14,400
um directs for guides

00:04:12,159 --> 00:04:16,239
the the building process at least for

00:04:14,400 --> 00:04:19,120
the community builds and we'll i'll

00:04:16,239 --> 00:04:20,639
mention those as we go into it um i'm

00:04:19,120 --> 00:04:23,360
sharing the screen internet right now

00:04:20,639 --> 00:04:24,720
i'm trying this uh this session a little

00:04:23,360 --> 00:04:27,360
bit differently i'm not gonna go through

00:04:24,720 --> 00:04:30,800
any slides i'm actually gonna go through

00:04:27,360 --> 00:04:33,120
an actual build process now um

00:04:30,800 --> 00:04:34,479
even on fast machines the build for open

00:04:33,120 --> 00:04:37,040
office will take

00:04:34,479 --> 00:04:38,400
a handful of hours so we're not going to

00:04:37,040 --> 00:04:41,840
go through all of that

00:04:38,400 --> 00:04:44,080
but i do want to provide a guide a clue

00:04:41,840 --> 00:04:46,960
on how to build not only on mac os but

00:04:44,080 --> 00:04:50,000
also on other operating systems as well

00:04:46,960 --> 00:04:53,600
even though we will be focusing on

00:04:50,000 --> 00:04:55,840
mac os so um

00:04:53,600 --> 00:04:56,960
that is the the main website right there

00:04:55,840 --> 00:05:00,320
that you can see

00:04:56,960 --> 00:05:02,800
i do now want to switch over to a uh

00:05:00,320 --> 00:05:05,440
a different slide uh uh this is

00:05:02,800 --> 00:05:05,440
basically

00:05:07,039 --> 00:05:13,600
on the asf uh page on the asf wiki

00:05:10,080 --> 00:05:17,360
for uh for apache open office we do have

00:05:13,600 --> 00:05:18,479
this uh extremely good guide as far as

00:05:17,360 --> 00:05:21,520
how to build

00:05:18,479 --> 00:05:24,560
uh apache open office for a variety

00:05:21,520 --> 00:05:26,880
of platforms out there so let's actually

00:05:24,560 --> 00:05:30,320
start going through some of the detail

00:05:26,880 --> 00:05:32,400
uh inside of this you know first of all

00:05:30,320 --> 00:05:33,440
uh what we need to do is actually get

00:05:32,400 --> 00:05:37,120
the source code

00:05:33,440 --> 00:05:40,800
itself now up until very very recently

00:05:37,120 --> 00:05:44,160
uh the canonical location for

00:05:40,800 --> 00:05:47,360
uh all the open source uh that was under

00:05:44,160 --> 00:05:50,560
apache open office was under svn but

00:05:47,360 --> 00:05:52,720
recently we switched over to get box

00:05:50,560 --> 00:05:55,199
which is also hosted on on github as

00:05:52,720 --> 00:05:56,639
well so to basically grab it you need to

00:05:55,199 --> 00:05:59,680
do a big clone

00:05:56,639 --> 00:06:03,280
of this particular repo

00:05:59,680 --> 00:06:05,120
right there and i'll show you how we're

00:06:03,280 --> 00:06:08,240
actually doing that now

00:06:05,120 --> 00:06:11,360
in this particular case

00:06:08,240 --> 00:06:14,080
so i will be switching over

00:06:11,360 --> 00:06:14,080
to my

00:06:15,280 --> 00:06:21,600
um to my platform right here now for

00:06:18,479 --> 00:06:24,960
uh for mac os i am running this

00:06:21,600 --> 00:06:28,000
on a vmware uh partition

00:06:24,960 --> 00:06:30,560
um this enables me to really lock down

00:06:28,000 --> 00:06:32,560
uh the the environment and just have

00:06:30,560 --> 00:06:35,280
things installed there as much as uh

00:06:32,560 --> 00:06:37,120
as much or as little as i need as i said

00:06:35,280 --> 00:06:40,080
before i do the community builds

00:06:37,120 --> 00:06:40,960
and so having this lockdown is really

00:06:40,080 --> 00:06:43,120
really important

00:06:40,960 --> 00:06:44,160
for consistency obviously when you're

00:06:43,120 --> 00:06:46,800
building uh

00:06:44,160 --> 00:06:47,199
open office for your mac os system you

00:06:46,800 --> 00:06:49,280
don't

00:06:47,199 --> 00:06:50,400
need to do that so some of that stuff

00:06:49,280 --> 00:06:53,599
you can just run it

00:06:50,400 --> 00:06:55,680
as is but in this particular case i do

00:06:53,599 --> 00:07:00,840
have it have it locked down

00:06:55,680 --> 00:07:02,960
and as you see i i certainly have right

00:07:00,840 --> 00:07:07,360
now

00:07:02,960 --> 00:07:07,360
a clone of the

00:07:08,960 --> 00:07:13,759
open office 4 2x you know which is

00:07:11,520 --> 00:07:16,639
basically the next release coming up

00:07:13,759 --> 00:07:17,520
i could also be doing trunk for example

00:07:16,639 --> 00:07:20,479
i won't do

00:07:17,520 --> 00:07:21,520
4-1-8 because that's basically an older

00:07:20,479 --> 00:07:23,840
version i don't

00:07:21,520 --> 00:07:25,520
anticipate many many people actually

00:07:23,840 --> 00:07:27,520
building that from scratch but most of

00:07:25,520 --> 00:07:29,840
the guidelines will be

00:07:27,520 --> 00:07:30,960
very very similar i will talk about some

00:07:29,840 --> 00:07:33,120
of the little gotchas

00:07:30,960 --> 00:07:35,120
as far as that's concerned but for this

00:07:33,120 --> 00:07:38,319
particular case i'll just be looking

00:07:35,120 --> 00:07:42,800
at uh 42x uh which also

00:07:38,319 --> 00:07:44,319
is the very very similar to the um

00:07:42,800 --> 00:07:47,039
you know version that you'd be writing

00:07:44,319 --> 00:07:49,280
if you're doing a trunk as well

00:07:47,039 --> 00:07:49,280
so

00:07:50,800 --> 00:07:55,680
we see that right there which is

00:07:53,360 --> 00:07:59,599
fantastic i will get back now

00:07:55,680 --> 00:08:03,919
to the actual

00:07:59,599 --> 00:08:06,639
prezzo slide itself wishing was a just a

00:08:03,919 --> 00:08:07,840
little bit easier to switch from share

00:08:06,639 --> 00:08:10,560
to share but

00:08:07,840 --> 00:08:12,319
we will definitely make through it well

00:08:10,560 --> 00:08:15,520
we know

00:08:12,319 --> 00:08:17,360
so uh for mac os there are some build

00:08:15,520 --> 00:08:20,720
requirements that we

00:08:17,360 --> 00:08:23,919
need uh to worry about first of all um

00:08:20,720 --> 00:08:28,400
if you're building on 4-1 you know

00:08:23,919 --> 00:08:31,039
building 4 4.1. whatever

00:08:28,400 --> 00:08:32,399
because that older version uses

00:08:31,039 --> 00:08:36,399
quicktime

00:08:32,399 --> 00:08:39,279
um and requires apple's quicktime

00:08:36,399 --> 00:08:40,719
stk and framework associated with it you

00:08:39,279 --> 00:08:44,480
really need access

00:08:40,719 --> 00:08:48,000
to either an older version of xcode

00:08:44,480 --> 00:08:52,720
for example xcode 7 includes that

00:08:48,000 --> 00:08:56,640
or a later version of xcode

00:08:52,720 --> 00:09:00,080
but using this cool neat little utility

00:08:56,640 --> 00:09:03,200
called xcode legacy which is this one

00:09:00,080 --> 00:09:06,399
right here which basically allows you

00:09:03,200 --> 00:09:09,519
to download and install

00:09:06,399 --> 00:09:10,240
older versions of sdks for example the

00:09:09,519 --> 00:09:14,399
sdk

00:09:10,240 --> 00:09:16,240
for 10.7 10.8 10.9 whatever

00:09:14,399 --> 00:09:18,800
and installed it inside of there so you

00:09:16,240 --> 00:09:21,200
can use the uh the newer compilers

00:09:18,800 --> 00:09:22,399
uh the newer uh you know frameworks and

00:09:21,200 --> 00:09:24,720
stuff like that

00:09:22,399 --> 00:09:26,240
but for the things that require older

00:09:24,720 --> 00:09:28,720
legacy sdks

00:09:26,240 --> 00:09:30,880
you can access that as well and you

00:09:28,720 --> 00:09:34,399
definitely do need that for building uh

00:09:30,880 --> 00:09:36,160
4.1 for 242 and trunk

00:09:34,399 --> 00:09:37,680
you really really don't you can just

00:09:36,160 --> 00:09:41,120
build it as is

00:09:37,680 --> 00:09:42,800
for uh the later versions of xcode

00:09:41,120 --> 00:09:46,720
inside of there

00:09:42,800 --> 00:09:49,440
you also do need some necessary tools

00:09:46,720 --> 00:09:50,640
as well and we'll talk about those uh

00:09:49,440 --> 00:09:52,880
for example

00:09:50,640 --> 00:09:54,160
even if you do install xcode even if you

00:09:52,880 --> 00:09:57,519
do install

00:09:54,160 --> 00:09:58,480
the control uh the um command line tools

00:09:57,519 --> 00:10:00,320
for xcode

00:09:58,480 --> 00:10:02,399
which adds compilers and things like

00:10:00,320 --> 00:10:04,000
that there are various tools and

00:10:02,399 --> 00:10:06,800
toolings which apple does not

00:10:04,000 --> 00:10:07,600
include or else it provides older

00:10:06,800 --> 00:10:11,279
versions

00:10:07,600 --> 00:10:13,760
that we need for uh for mac os

00:10:11,279 --> 00:10:14,320
uh one of the things that i do install

00:10:13,760 --> 00:10:16,240
inside

00:10:14,320 --> 00:10:17,680
of user local and you'll need to be able

00:10:16,240 --> 00:10:20,880
to do this as well

00:10:17,680 --> 00:10:21,680
is a relatively recent version of apache

00:10:20,880 --> 00:10:25,200
ant

00:10:21,680 --> 00:10:27,440
uh 1.9 or 1.10 are perfectly fine

00:10:25,200 --> 00:10:29,040
we're just using um 1.9 in this

00:10:27,440 --> 00:10:33,600
particular case

00:10:29,040 --> 00:10:35,040
you also need something which is um

00:10:33,600 --> 00:10:38,000
you know part of the heritage part of

00:10:35,040 --> 00:10:41,279
the legacy of apache open office

00:10:38,000 --> 00:10:44,480
apache open office has a very long

00:10:41,279 --> 00:10:48,240
and story build environment

00:10:44,480 --> 00:10:50,240
really is in some ways a hodgepodge

00:10:48,240 --> 00:10:53,040
of uh of different tools and different

00:10:50,240 --> 00:10:55,920
toolings based on its long history

00:10:53,040 --> 00:10:58,160
inside of the open source world um we

00:10:55,920 --> 00:11:02,079
are in the process of moving everything

00:10:58,160 --> 00:11:04,720
over to the uh standard gnu make system

00:11:02,079 --> 00:11:05,600
but really in general the overall make

00:11:04,720 --> 00:11:07,760
system

00:11:05,600 --> 00:11:08,640
is is based around this tool called

00:11:07,760 --> 00:11:11,680
d-make

00:11:08,640 --> 00:11:14,959
uh for distributed make um i believe it

00:11:11,680 --> 00:11:17,440
started off at sun under sun os

00:11:14,959 --> 00:11:18,880
we do have a version available on my

00:11:17,440 --> 00:11:21,120
github repo

00:11:18,880 --> 00:11:22,000
i have a copy of that that you can

00:11:21,120 --> 00:11:24,640
download

00:11:22,000 --> 00:11:26,240
and configure and run it's very very

00:11:24,640 --> 00:11:29,200
easy to do so

00:11:26,240 --> 00:11:31,440
just uh you know dash slash configure

00:11:29,200 --> 00:11:34,240
you want to install it in user local

00:11:31,440 --> 00:11:35,680
and it takes care of the actual driving

00:11:34,240 --> 00:11:37,440
of the configuration

00:11:35,680 --> 00:11:39,519
and the build system inside for open

00:11:37,440 --> 00:11:40,320
office you also need something called

00:11:39,519 --> 00:11:43,760
epm

00:11:40,320 --> 00:11:45,519
which is the program manager this is

00:11:43,760 --> 00:11:47,920
basically the tool

00:11:45,519 --> 00:11:49,040
that takes everything that open office

00:11:47,920 --> 00:11:52,000
contains

00:11:49,040 --> 00:11:53,680
and packages it up for the operating

00:11:52,000 --> 00:11:54,560
system or the platform that you'll be

00:11:53,680 --> 00:11:57,600
running it on

00:11:54,560 --> 00:11:59,680
for example for linux uh epm

00:11:57,600 --> 00:12:00,800
is responsible for grabbing all the bits

00:11:59,680 --> 00:12:03,040
and pieces together

00:12:00,800 --> 00:12:05,839
and either creating a dead file or an

00:12:03,040 --> 00:12:09,200
rpm file so you can install it there

00:12:05,839 --> 00:12:12,800
for for mac os it's uh it create

00:12:09,200 --> 00:12:16,000
it goes ahead and creates the uh

00:12:12,800 --> 00:12:18,800
the disk image as well as the package

00:12:16,000 --> 00:12:20,639
installer as well so that really is a

00:12:18,800 --> 00:12:24,480
required tool

00:12:20,639 --> 00:12:27,680
to create an installable version

00:12:24,480 --> 00:12:29,600
of uh apache open office if you don't

00:12:27,680 --> 00:12:31,440
need that if you just want to copy files

00:12:29,600 --> 00:12:33,760
over you can most probably do that

00:12:31,440 --> 00:12:36,160
but i would really recommend that you

00:12:33,760 --> 00:12:38,079
download and install epm

00:12:36,160 --> 00:12:39,200
to make sure that you're able to to run

00:12:38,079 --> 00:12:40,639
it and install it

00:12:39,200 --> 00:12:42,959
with all the bits and pieces all the

00:12:40,639 --> 00:12:44,320
dependencies all the links in there for

00:12:42,959 --> 00:12:45,839
good

00:12:44,320 --> 00:12:47,360
a couple other dependencies that you

00:12:45,839 --> 00:12:50,959
need um is

00:12:47,360 --> 00:12:52,480
a relatively uh recent version of

00:12:50,959 --> 00:12:54,639
openssl

00:12:52,480 --> 00:12:56,560
again this is just a build tool

00:12:54,639 --> 00:13:00,000
requirement inside there we do

00:12:56,560 --> 00:13:02,399
bundle open ssl inside

00:13:00,000 --> 00:13:03,040
of apache openoffice for the things that

00:13:02,399 --> 00:13:06,480
it needs

00:13:03,040 --> 00:13:09,279
ssl access for but in particular

00:13:06,480 --> 00:13:10,639
we need to also install a newer version

00:13:09,279 --> 00:13:12,560
of openssl

00:13:10,639 --> 00:13:13,920
for building and configuring some other

00:13:12,560 --> 00:13:15,279
aspects as well so you'll need to

00:13:13,920 --> 00:13:19,120
install that

00:13:15,279 --> 00:13:22,399
i also found it easier for mac os

00:13:19,120 --> 00:13:25,920
to download and install two other

00:13:22,399 --> 00:13:29,440
xml related uh libraries uh xml2

00:13:25,920 --> 00:13:31,920
as well as xslt these are xml related

00:13:29,440 --> 00:13:34,639
uh toolings that you require the

00:13:31,920 --> 00:13:37,680
versions included with uh with mac os

00:13:34,639 --> 00:13:38,240
really aren't optimal and it's really

00:13:37,680 --> 00:13:41,519
better

00:13:38,240 --> 00:13:43,519
not to have the actual build process try

00:13:41,519 --> 00:13:45,680
to download and install it for you

00:13:43,519 --> 00:13:48,800
instead do that for you basically

00:13:45,680 --> 00:13:50,720
these are things that you want when

00:13:48,800 --> 00:13:51,680
you're building a configuring apache

00:13:50,720 --> 00:13:55,040
open office

00:13:51,680 --> 00:13:56,800
to find in user local and use

00:13:55,040 --> 00:13:58,320
instead of it having to download and

00:13:56,800 --> 00:14:00,320
create it yourself

00:13:58,320 --> 00:14:02,240
or looking for a different version

00:14:00,320 --> 00:14:04,720
someplace else so these are basically

00:14:02,240 --> 00:14:05,440
just newer versions that we want to

00:14:04,720 --> 00:14:08,399
ensure

00:14:05,440 --> 00:14:09,600
are bundled with apache open office when

00:14:08,399 --> 00:14:12,880
we build it

00:14:09,600 --> 00:14:13,680
uh we also want a version of a package

00:14:12,880 --> 00:14:16,160
config

00:14:13,680 --> 00:14:17,920
because that's really what the autocom

00:14:16,160 --> 00:14:19,680
system looks for

00:14:17,920 --> 00:14:21,199
that's how it determines what libraries

00:14:19,680 --> 00:14:23,199
are available and where

00:14:21,199 --> 00:14:25,360
the include files are so you want that

00:14:23,199 --> 00:14:28,560
inside uh and finally

00:14:25,360 --> 00:14:31,920
a 1.7 version of the java

00:14:28,560 --> 00:14:34,320
jdk now you can use a 1.8

00:14:31,920 --> 00:14:34,959
you can use later versions as well

00:14:34,320 --> 00:14:37,680
however

00:14:34,959 --> 00:14:38,399
the default 1.6 version that was

00:14:37,680 --> 00:14:41,519
included

00:14:38,399 --> 00:14:43,519
many many many eons ago by apple

00:14:41,519 --> 00:14:44,959
simply uh will not work so you'll need

00:14:43,519 --> 00:14:47,120
to actually download that

00:14:44,959 --> 00:14:48,320
now it can be open jdk it doesn't need

00:14:47,120 --> 00:14:51,040
to be the formal

00:14:48,320 --> 00:14:52,000
official oracle jdk but you do need

00:14:51,040 --> 00:14:55,440
something of the

00:14:52,000 --> 00:14:59,680
1.7 at the at the youngest

00:14:55,440 --> 00:15:02,240
period inside there um now i do

00:14:59,680 --> 00:15:04,320
most of these things by hand for example

00:15:02,240 --> 00:15:08,240
for d make uh epm

00:15:04,320 --> 00:15:10,160
uh open ssl i actually download the uh

00:15:08,240 --> 00:15:11,519
the tarball distributions from their

00:15:10,160 --> 00:15:15,199
canonical site

00:15:11,519 --> 00:15:18,320
and build it myself that you could use

00:15:15,199 --> 00:15:21,600
a package manager for mac os

00:15:18,320 --> 00:15:23,760
such as homebrew or macports

00:15:21,600 --> 00:15:25,040
to install it inside there but i

00:15:23,760 --> 00:15:28,079
actually prefer

00:15:25,040 --> 00:15:30,800
not muddying things around i like using

00:15:28,079 --> 00:15:33,199
uh you know homebrew or mac ports for

00:15:30,800 --> 00:15:34,639
tools that i need to use but i don't

00:15:33,199 --> 00:15:37,199
necessarily want to build

00:15:34,639 --> 00:15:39,440
on top of so if that for example you'll

00:15:37,199 --> 00:15:42,240
see that i still use

00:15:39,440 --> 00:15:44,320
opt mac ports for some things that i

00:15:42,240 --> 00:15:47,040
need like newer versions of autocomp

00:15:44,320 --> 00:15:48,480
and canoe tool and pro 5 and git and

00:15:47,040 --> 00:15:50,880
other things that

00:15:48,480 --> 00:15:51,839
may or may not come with the the version

00:15:50,880 --> 00:15:54,079
of mac os

00:15:51,839 --> 00:15:55,040
and xcode that i'm using but i make sure

00:15:54,079 --> 00:15:57,839
they're installed in op

00:15:55,040 --> 00:15:58,560
local and i only put inside of user

00:15:57,839 --> 00:16:00,320
local

00:15:58,560 --> 00:16:01,680
the things that i definitely want to

00:16:00,320 --> 00:16:04,240
make sure

00:16:01,680 --> 00:16:06,160
that when i'm building open office the

00:16:04,240 --> 00:16:08,480
configure autocom system

00:16:06,160 --> 00:16:10,079
sees and looks at so that's the reason

00:16:08,480 --> 00:16:12,639
why there is that definition

00:16:10,079 --> 00:16:13,279
that distinction between what's in up

00:16:12,639 --> 00:16:15,360
local

00:16:13,279 --> 00:16:16,560
and then what's in user local you want

00:16:15,360 --> 00:16:18,480
to have some

00:16:16,560 --> 00:16:20,399
local environments basically you want to

00:16:18,480 --> 00:16:22,079
make sure that user local bin

00:16:20,399 --> 00:16:24,560
uh is in your path if you're putting

00:16:22,079 --> 00:16:27,680
stuff inside there you want to ensure

00:16:24,560 --> 00:16:29,920
that the java home is set up uh because

00:16:27,680 --> 00:16:31,759
of the way java is set up and enabled

00:16:29,920 --> 00:16:34,959
inside of a

00:16:31,759 --> 00:16:37,199
mac os you could just do you know java

00:16:34,959 --> 00:16:40,480
home equals blah blah blah whatever

00:16:37,199 --> 00:16:42,399
but i think it's much easier to use this

00:16:40,480 --> 00:16:45,600
configuration right here

00:16:42,399 --> 00:16:46,639
and use uh the lib exec uh java

00:16:45,600 --> 00:16:48,880
underscore home

00:16:46,639 --> 00:16:49,680
command because that takes care of

00:16:48,880 --> 00:16:51,839
setting up

00:16:49,680 --> 00:16:53,839
everything to ensure that java home

00:16:51,839 --> 00:16:56,079
points the correct locations

00:16:53,839 --> 00:16:58,320
and then again some final catch-alls

00:16:56,079 --> 00:17:00,000
making sure that because we're using our

00:16:58,320 --> 00:17:02,839
own installed version of it

00:17:00,000 --> 00:17:05,679
making sure that anton points that

00:17:02,839 --> 00:17:08,000
location making sure also that

00:17:05,679 --> 00:17:09,679
various uh include directives for the

00:17:08,000 --> 00:17:12,240
compilers both the c and the c

00:17:09,679 --> 00:17:13,520
plus plus compilers are looking in the

00:17:12,240 --> 00:17:15,600
right location

00:17:13,520 --> 00:17:16,880
for header files that might be going on

00:17:15,600 --> 00:17:21,120
inside there

00:17:16,880 --> 00:17:24,079
um and then we have a uh basically a

00:17:21,120 --> 00:17:25,439
simple look right here of the actual

00:17:24,079 --> 00:17:28,079
configuration

00:17:25,439 --> 00:17:29,760
aspect um i won't go into all these

00:17:28,079 --> 00:17:33,120
details inside here

00:17:29,760 --> 00:17:36,320
uh what you can do though inside of

00:17:33,120 --> 00:17:39,600
the uh the apache open office

00:17:36,320 --> 00:17:43,039
dev tools subversion repo we actually

00:17:39,600 --> 00:17:44,720
include a copy of the build scripts the

00:17:43,039 --> 00:17:48,720
actual configure script

00:17:44,720 --> 00:17:52,960
used to build those um community

00:17:48,720 --> 00:17:56,400
platforms as well as the output

00:17:52,960 --> 00:17:58,720
of the configure log as well

00:17:56,400 --> 00:18:00,240
so you can use those to not only figure

00:17:58,720 --> 00:18:03,679
out how we build

00:18:00,240 --> 00:18:05,919
but also what that build looks like so

00:18:03,679 --> 00:18:07,440
with this little bit of information

00:18:05,919 --> 00:18:10,080
inside here

00:18:07,440 --> 00:18:11,520
let's go and actually look at the system

00:18:10,080 --> 00:18:16,799
that we're going to be using

00:18:11,520 --> 00:18:21,120
to actually build on mac os

00:18:16,799 --> 00:18:25,440
so i will be again switching over to

00:18:21,120 --> 00:18:29,840
my vmware partition

00:18:25,440 --> 00:18:29,840
you should be able to see that right now

00:18:31,919 --> 00:18:37,360
um and uh

00:18:35,440 --> 00:18:40,640
this little bit of information about

00:18:37,360 --> 00:18:44,640
this uh partition i'm using i believe

00:18:40,640 --> 00:18:48,080
six virtual cpus on this

00:18:44,640 --> 00:18:50,240
i am using

00:18:48,080 --> 00:18:51,360
for this particular build environment

00:18:50,240 --> 00:18:56,080
right here

00:18:51,360 --> 00:18:58,960
uh mac os mojave 10.15.6

00:18:56,080 --> 00:18:59,760
uh younger versions have sierra and

00:18:58,960 --> 00:19:03,039
stuff like that

00:18:59,760 --> 00:19:06,000
work fine um also i have built

00:19:03,039 --> 00:19:06,720
on catalina that again works fine i have

00:19:06,000 --> 00:19:10,080
not tried

00:19:06,720 --> 00:19:13,760
big sur yet um mostly because

00:19:10,080 --> 00:19:17,440
i've run into some issues with xcode

00:19:13,760 --> 00:19:19,120
12. um there are some changes

00:19:17,440 --> 00:19:22,160
inside of i don't know whether it's the

00:19:19,120 --> 00:19:24,799
header files or libraries or whatever

00:19:22,160 --> 00:19:26,480
but it messes up auto config that it's

00:19:24,799 --> 00:19:28,240
not finding the right tools and not

00:19:26,480 --> 00:19:30,559
finding the right libraries

00:19:28,240 --> 00:19:31,840
it thinks a certain system parameter is

00:19:30,559 --> 00:19:33,840
a little bit different

00:19:31,840 --> 00:19:35,840
so at least for the time being i would

00:19:33,840 --> 00:19:39,440
not recommend

00:19:35,840 --> 00:19:42,640
running on big serve unless you're using

00:19:39,440 --> 00:19:44,640
auto comps unless you're using xcode 11

00:19:42,640 --> 00:19:45,840
and not xcode 12. in that case you

00:19:44,640 --> 00:19:48,480
should be working

00:19:45,840 --> 00:19:51,600
fine inside there as you see it's just a

00:19:48,480 --> 00:19:54,640
small number of cpus i'm just using 16

00:19:51,600 --> 00:19:57,360
gigabytes of ram hardly anything at

00:19:54,640 --> 00:19:58,960
all um and it works really really well i

00:19:57,360 --> 00:20:02,960
can actually do

00:19:58,960 --> 00:20:06,799
a total complete build for for mac os

00:20:02,960 --> 00:20:09,679
from start to finish i guess in about

00:20:06,799 --> 00:20:10,240
three hours or so on this platform right

00:20:09,679 --> 00:20:12,320
here

00:20:10,240 --> 00:20:13,679
so let's go through uh very very quickly

00:20:12,320 --> 00:20:15,840
what we would do to

00:20:13,679 --> 00:20:18,000
to actually start off as i said before

00:20:15,840 --> 00:20:19,039
you do a git clone and you pull down the

00:20:18,000 --> 00:20:22,320
um

00:20:19,039 --> 00:20:23,520
the repository and you would get a a

00:20:22,320 --> 00:20:26,480
small little top-level

00:20:23,520 --> 00:20:27,600
directory like this and we actually move

00:20:26,480 --> 00:20:30,159
into

00:20:27,600 --> 00:20:30,880
the main subdirectory you can see a

00:20:30,159 --> 00:20:33,039
number

00:20:30,880 --> 00:20:33,919
of different files inside here these are

00:20:33,039 --> 00:20:36,799
all included

00:20:33,919 --> 00:20:38,480
inside and they include all the bits and

00:20:36,799 --> 00:20:42,159
pieces required

00:20:38,480 --> 00:20:46,000
you also see right here this is actually

00:20:42,159 --> 00:20:48,400
a link to the actual build tool

00:20:46,000 --> 00:20:49,760
that we use to make the community of

00:20:48,400 --> 00:20:51,600
commercial versions

00:20:49,760 --> 00:20:53,200
not commercial the community versions of

00:20:51,600 --> 00:20:56,480
it uh but let me show you what that

00:20:53,200 --> 00:20:56,480
looks like uh real quick

00:20:56,559 --> 00:21:05,200
so let me uh pull that up

00:21:02,720 --> 00:21:08,240
uh also inside here i have a lot more

00:21:05,200 --> 00:21:10,559
detail as well so in addition to having

00:21:08,240 --> 00:21:11,440
uh all this information available on the

00:21:10,559 --> 00:21:14,640
uh on the

00:21:11,440 --> 00:21:17,679
uh aoo wiki i obviously have it

00:21:14,640 --> 00:21:18,080
in the config file as well and you can

00:21:17,679 --> 00:21:20,720
see

00:21:18,080 --> 00:21:22,320
again uh the termination of what's

00:21:20,720 --> 00:21:25,120
included in user local

00:21:22,320 --> 00:21:26,400
what's what's user in app local again if

00:21:25,120 --> 00:21:28,880
you want to use home pro

00:21:26,400 --> 00:21:30,240
that's certainly fine uh what the system

00:21:28,880 --> 00:21:32,480
environment looks like

00:21:30,240 --> 00:21:33,760
and again what the what the platforms

00:21:32,480 --> 00:21:37,600
are uh

00:21:33,760 --> 00:21:40,320
i have this of the script enabling us to

00:21:37,600 --> 00:21:42,080
detail various lowest common

00:21:40,320 --> 00:21:44,799
denominators for mac os

00:21:42,080 --> 00:21:45,200
you'll need that see that right here we

00:21:44,799 --> 00:21:48,799
say

00:21:45,200 --> 00:21:51,919
that i am building for

00:21:48,799 --> 00:21:53,919
mac os 10.7 which is an incredibly

00:21:51,919 --> 00:21:56,960
incredibly old version

00:21:53,919 --> 00:21:59,200
um but again you know what we want to do

00:21:56,960 --> 00:22:00,320
is ensure that people who are stuck on

00:21:59,200 --> 00:22:02,720
such a very very

00:22:00,320 --> 00:22:03,679
old version can you actually you know

00:22:02,720 --> 00:22:06,159
run it and

00:22:03,679 --> 00:22:07,360
and work with it and things like that

00:22:06,159 --> 00:22:08,559
you don't need to set this

00:22:07,360 --> 00:22:10,480
environment variable when you're

00:22:08,559 --> 00:22:13,679
building on your own but

00:22:10,480 --> 00:22:16,240
but we do in the configuration builds um

00:22:13,679 --> 00:22:18,720
so uh for this build i'm gonna be

00:22:16,240 --> 00:22:20,000
specifying a minimum mac os version of

00:22:18,720 --> 00:22:23,200
10.7

00:22:20,000 --> 00:22:27,280
i'm going to be using a 1.7 version of

00:22:23,200 --> 00:22:28,960
java and an ant version of 1.9 and this

00:22:27,280 --> 00:22:31,919
basically just changes

00:22:28,960 --> 00:22:32,240
some of the selections when you're doing

00:22:31,919 --> 00:22:35,760
the

00:22:32,240 --> 00:22:35,760
the configure inside here

00:22:36,240 --> 00:22:39,600
you'll see that basically what these

00:22:38,400 --> 00:22:41,039
things do

00:22:39,600 --> 00:22:43,600
when you're setting these environment

00:22:41,039 --> 00:22:45,919
variables or these configurations

00:22:43,600 --> 00:22:47,200
are either set up build environments

00:22:45,919 --> 00:22:48,320
that have been then passed to the

00:22:47,200 --> 00:22:50,880
configure line

00:22:48,320 --> 00:22:51,600
or else set up environment variables for

00:22:50,880 --> 00:22:54,159
example

00:22:51,600 --> 00:22:55,520
if i'm setting up a different java home

00:22:54,159 --> 00:22:56,640
then that's basically just something

00:22:55,520 --> 00:22:59,360
that needs to be said

00:22:56,640 --> 00:22:59,760
at the environment variables uh if i'm

00:22:59,360 --> 00:23:01,679
doing

00:22:59,760 --> 00:23:03,120
and then not only do i need to set up

00:23:01,679 --> 00:23:06,080
that environment

00:23:03,120 --> 00:23:08,159
but i also need to make sure that that

00:23:06,080 --> 00:23:10,559
is passed to the configure

00:23:08,159 --> 00:23:13,200
uh tooling as well so when it's looking

00:23:10,559 --> 00:23:16,000
for ant it knows where to find it

00:23:13,200 --> 00:23:17,600
i also build for basically every

00:23:16,000 --> 00:23:20,159
possible language that

00:23:17,600 --> 00:23:21,600
apache open office is available for and

00:23:20,159 --> 00:23:24,880
then we just go ahead

00:23:21,600 --> 00:23:26,480
and send the configure so in this

00:23:24,880 --> 00:23:27,760
particular case let me just go

00:23:26,480 --> 00:23:29,280
and walk through some of the

00:23:27,760 --> 00:23:29,919
configurations that we'll be talking

00:23:29,280 --> 00:23:32,960
about

00:23:29,919 --> 00:23:35,360
as i said before uh what we like to do

00:23:32,960 --> 00:23:37,039
is make sure that when you do an about

00:23:35,360 --> 00:23:38,159
open office you get some build

00:23:37,039 --> 00:23:40,000
information

00:23:38,159 --> 00:23:42,159
uh the version that was built that they

00:23:40,000 --> 00:23:44,159
was built what platform is built for

00:23:42,159 --> 00:23:46,640
and that's what this line uh right here

00:23:44,159 --> 00:23:49,520
does uh we want to enable uh

00:23:46,640 --> 00:23:50,000
open ldap uh so it's able to actually

00:23:49,520 --> 00:23:53,279
figure

00:23:50,000 --> 00:23:54,240
in and pull in ldap capabilities as well

00:23:53,279 --> 00:23:56,720
we include

00:23:54,240 --> 00:23:58,320
a bunch of features including bean shell

00:23:56,720 --> 00:24:01,360
all the bundled libraries

00:23:58,320 --> 00:24:03,440
uh category b toolings are things which

00:24:01,360 --> 00:24:05,760
may not necessarily be

00:24:03,440 --> 00:24:07,520
under an apache license or a permissive

00:24:05,760 --> 00:24:10,400
license maybe under

00:24:07,520 --> 00:24:11,440
either a strong or weak copy left but we

00:24:10,400 --> 00:24:12,880
want to

00:24:11,440 --> 00:24:14,559
make sure that people are able to

00:24:12,880 --> 00:24:16,960
actually build and use with

00:24:14,559 --> 00:24:18,480
these configurations as well you see

00:24:16,960 --> 00:24:20,720
that we specify

00:24:18,480 --> 00:24:21,600
what the java home is we need to specify

00:24:20,720 --> 00:24:24,080
that uh

00:24:21,600 --> 00:24:26,000
here at the configure line tooling but

00:24:24,080 --> 00:24:28,320
also at the environment variable

00:24:26,000 --> 00:24:30,880
the same as at home right here we're

00:24:28,320 --> 00:24:33,039
also specifying where we're putting

00:24:30,880 --> 00:24:35,120
those two build tools as i mentioned

00:24:33,039 --> 00:24:37,279
before epm is the packager

00:24:35,120 --> 00:24:38,159
and d make is the actual build tool

00:24:37,279 --> 00:24:40,240
itself

00:24:38,159 --> 00:24:42,640
this basically just says okay how do you

00:24:40,240 --> 00:24:45,039
build it how do you want to run it

00:24:42,640 --> 00:24:45,840
what configuration options do you want

00:24:45,039 --> 00:24:47,279
and then we go

00:24:45,840 --> 00:24:49,279
ahead and at least in this script and

00:24:47,279 --> 00:24:52,400
say yes i want to go ahead

00:24:49,279 --> 00:24:53,679
and run the builds so let's just really

00:24:52,400 --> 00:25:01,840
really quickly just see

00:24:53,679 --> 00:25:01,840
what that looks like in that environment

00:25:02,960 --> 00:25:07,440
so as you see one of the first things it

00:25:04,640 --> 00:25:09,840
does is it specifies to me what the

00:25:07,440 --> 00:25:12,000
environment variables are it's starting

00:25:09,840 --> 00:25:15,679
the build

00:25:12,000 --> 00:25:18,159
um and then it goes ahead

00:25:15,679 --> 00:25:19,360
and says hey you know i'm doing an auto

00:25:18,159 --> 00:25:20,960
comp i'm checking where the

00:25:19,360 --> 00:25:23,200
configuration is up to date

00:25:20,960 --> 00:25:24,640
and it gives this nice little screen and

00:25:23,200 --> 00:25:26,799
then at this point

00:25:24,640 --> 00:25:28,240
you get the configure output this is

00:25:26,799 --> 00:25:30,720
basically what autocomp

00:25:28,240 --> 00:25:32,400
does it goes through scans everything

00:25:30,720 --> 00:25:35,520
that's installed on mac os

00:25:32,400 --> 00:25:37,600
or your other platform and figures out

00:25:35,520 --> 00:25:38,880
not only how to build what capabilities

00:25:37,600 --> 00:25:41,520
and features to include

00:25:38,880 --> 00:25:42,880
in openoffice but also where things are

00:25:41,520 --> 00:25:46,080
for example right here

00:25:42,880 --> 00:25:48,799
it's looking for uh you know a

00:25:46,080 --> 00:25:49,760
c compiler looking for gcc and it's

00:25:48,799 --> 00:25:52,400
seeing that

00:25:49,760 --> 00:25:53,840
it's included under uh applications

00:25:52,400 --> 00:25:57,120
xcode x app

00:25:53,840 --> 00:25:59,919
uh so that takes care of all that for us

00:25:57,120 --> 00:26:00,720
um and we'll see you know also as well

00:25:59,919 --> 00:26:03,120
sorry for the

00:26:00,720 --> 00:26:05,919
long scrolling in here but it really is

00:26:03,120 --> 00:26:07,840
a very very long configuration process

00:26:05,919 --> 00:26:09,600
inside there but you can see that it's

00:26:07,840 --> 00:26:10,000
looking to find everything that we need

00:26:09,600 --> 00:26:12,799
to make

00:26:10,000 --> 00:26:13,760
sure if there was any issues or concerns

00:26:12,799 --> 00:26:15,919
with the build

00:26:13,760 --> 00:26:17,600
it would basically tail out and tell you

00:26:15,919 --> 00:26:19,520
what the issues are

00:26:17,600 --> 00:26:20,799
at the very very end of the

00:26:19,520 --> 00:26:24,000
configuration

00:26:20,799 --> 00:26:26,240
style it sets up

00:26:24,000 --> 00:26:28,159
the build environment vary but one of

00:26:26,240 --> 00:26:31,679
the um interesting things

00:26:28,159 --> 00:26:34,640
about apache open office's build is that

00:26:31,679 --> 00:26:36,400
it uses a lot of information as far as

00:26:34,640 --> 00:26:37,360
the build process and then build

00:26:36,400 --> 00:26:40,720
environment

00:26:37,360 --> 00:26:42,559
as an environmental variable so after

00:26:40,720 --> 00:26:46,080
you do the configuration

00:26:42,559 --> 00:26:48,320
you actually have to load in that

00:26:46,080 --> 00:26:49,360
environment you've got to go and source

00:26:48,320 --> 00:26:51,360
the environment

00:26:49,360 --> 00:26:52,400
source tree that's associated with and

00:26:51,360 --> 00:26:55,520
that's what we're doing

00:26:52,400 --> 00:26:57,520
uh right here uh it's basically saying

00:26:55,520 --> 00:27:00,240
hey i'm going to be loading in

00:26:57,520 --> 00:27:02,159
everything inside the configuration file

00:27:00,240 --> 00:27:03,919
and the environment file that was just

00:27:02,159 --> 00:27:04,960
in and these are the environment

00:27:03,919 --> 00:27:06,720
variables that

00:27:04,960 --> 00:27:08,400
that we're going to be using so you can

00:27:06,720 --> 00:27:10,159
see things such as you know where the

00:27:08,400 --> 00:27:14,000
ant is what kind of

00:27:10,159 --> 00:27:16,159
jdk we're using as well as various

00:27:14,000 --> 00:27:17,760
build environments you know whether

00:27:16,159 --> 00:27:20,799
we're doing an updater

00:27:17,760 --> 00:27:23,360
uh where uh gdk is

00:27:20,799 --> 00:27:24,480
where all the gnome uh information is as

00:27:23,360 --> 00:27:27,360
well for example

00:27:24,480 --> 00:27:28,399
obviously for mac os we're not using any

00:27:27,360 --> 00:27:30,880
kind of gnome

00:27:28,399 --> 00:27:32,640
uh tooling whereas for linux it would be

00:27:30,880 --> 00:27:34,080
and we're basically running how making

00:27:32,640 --> 00:27:35,840
sure all this information

00:27:34,080 --> 00:27:37,600
and again this is all very very good

00:27:35,840 --> 00:27:40,480
information for you to know

00:27:37,600 --> 00:27:42,720
how it's building and then finally after

00:27:40,480 --> 00:27:46,559
it reports this information

00:27:42,720 --> 00:27:50,559
to you it just goes ahead and starts

00:27:46,559 --> 00:27:52,000
cranking out the build

00:27:50,559 --> 00:27:54,399
first thing it needs to do before it

00:27:52,000 --> 00:27:57,840
cranks out a build is look for some

00:27:54,399 --> 00:27:58,640
external dependencies and that's what

00:27:57,840 --> 00:28:01,440
this area

00:27:58,640 --> 00:28:03,279
right here is these are all things that

00:28:01,440 --> 00:28:05,919
are looked for externally

00:28:03,279 --> 00:28:08,720
and if there aren't available inside of

00:28:05,919 --> 00:28:10,640
specific directory inside of the uh

00:28:08,720 --> 00:28:11,760
open off the source tree it will

00:28:10,640 --> 00:28:14,799
download those

00:28:11,760 --> 00:28:17,120
compile and build as you see since i've

00:28:14,799 --> 00:28:18,559
done this a number of times

00:28:17,120 --> 00:28:20,640
these downloads have already been

00:28:18,559 --> 00:28:21,840
fulfilled it already sees that i've

00:28:20,640 --> 00:28:24,000
downloaded those

00:28:21,840 --> 00:28:25,440
um the checksums are okay so we know

00:28:24,000 --> 00:28:27,679
it's up to date

00:28:25,440 --> 00:28:29,360
and we're already built a number of

00:28:27,679 --> 00:28:30,880
those if you haven't done that or if

00:28:29,360 --> 00:28:31,679
you'll be doing this at the very very

00:28:30,880 --> 00:28:34,000
start

00:28:31,679 --> 00:28:36,080
um it would not only download things

00:28:34,000 --> 00:28:38,399
like you know the cross core fonts

00:28:36,080 --> 00:28:39,440
but actually build it for you as well

00:28:38,399 --> 00:28:42,240
and install them

00:28:39,440 --> 00:28:42,720
inside this specific uh directory that

00:28:42,240 --> 00:28:45,039
then

00:28:42,720 --> 00:28:47,039
once you're building and packaging it

00:28:45,039 --> 00:28:48,880
can look for

00:28:47,039 --> 00:28:51,440
and then it goes go through and starts

00:28:48,880 --> 00:28:54,159
building all the bits and pieces

00:28:51,440 --> 00:28:55,039
inside that are required some externally

00:28:54,159 --> 00:28:57,279
driven

00:28:55,039 --> 00:28:59,440
some internally driven and that's what

00:28:57,279 --> 00:29:01,600
that information is right as well

00:28:59,440 --> 00:29:02,640
uh as you can see we're building like

00:29:01,600 --> 00:29:05,200
crazy

00:29:02,640 --> 00:29:07,200
uh it's pretty fast uh we have it set up

00:29:05,200 --> 00:29:08,480
to ensure that it's using as many cores

00:29:07,200 --> 00:29:11,600
as possible

00:29:08,480 --> 00:29:14,159
so uh making d maker

00:29:11,600 --> 00:29:15,039
the load out to all the available cpus

00:29:14,159 --> 00:29:18,240
available

00:29:15,039 --> 00:29:21,760
and as i said before after about

00:29:18,240 --> 00:29:25,679
two three hours or so you will get

00:29:21,760 --> 00:29:29,360
a suite of disk images that includes

00:29:25,679 --> 00:29:32,240
an apache open office installer

00:29:29,360 --> 00:29:33,279
so uh let me uh quit that real quick

00:29:32,240 --> 00:29:36,960
let's go back

00:29:33,279 --> 00:29:36,960
to the actual

00:29:37,200 --> 00:29:40,480
um screen itself we're running a little

00:29:40,159 --> 00:29:43,840
bit

00:29:40,480 --> 00:29:45,360
uh close to the end of time um i do want

00:29:43,840 --> 00:29:47,919
to leave a little bit of time for q

00:29:45,360 --> 00:29:48,399
a if there is any but again i just want

00:29:47,919 --> 00:29:51,679
to

00:29:48,399 --> 00:29:52,240
assure you that uh building uh open

00:29:51,679 --> 00:29:54,960
office

00:29:52,240 --> 00:29:55,679
is is very very easy to do it does take

00:29:54,960 --> 00:29:57,679
some time

00:29:55,679 --> 00:29:59,440
there are just a few little things to

00:29:57,679 --> 00:30:03,760
worry about a few little hurdles

00:29:59,440 --> 00:30:06,960
uh uh as i said before some external

00:30:03,760 --> 00:30:08,080
programs that you need to install but

00:30:06,960 --> 00:30:11,120
it's really very very

00:30:08,080 --> 00:30:14,720
straightforward i encourage you

00:30:11,120 --> 00:30:16,320
to give it a shot uh fire it off

00:30:14,720 --> 00:30:17,840
get yourself a nice cup of coffee or

00:30:16,320 --> 00:30:21,600
maybe an adult beverage

00:30:17,840 --> 00:30:25,039
and come back i will also

00:30:21,600 --> 00:30:28,640
show you the locations for those wiki

00:30:25,039 --> 00:30:28,640
entries so let me do that right now

00:30:30,000 --> 00:30:34,399
for the generic building guide

00:30:34,559 --> 00:30:40,480
uh that is the location uh right there

00:30:37,360 --> 00:30:42,720
so if you just go to wiki.openoffice.org

00:30:40,480 --> 00:30:43,840
uh you'll see the uh the information

00:30:42,720 --> 00:30:47,200
right there

00:30:43,840 --> 00:30:49,039
uh and for the uh the mac os version

00:30:47,200 --> 00:30:50,320
actually it comes right from here so you

00:30:49,039 --> 00:30:53,120
can see that

00:30:50,320 --> 00:30:55,279
in addition to uh the generic

00:30:53,120 --> 00:30:56,000
information about how to download and

00:30:55,279 --> 00:30:58,240
where things

00:30:56,000 --> 00:31:00,080
are and this is good reading if you're

00:30:58,240 --> 00:31:03,600
if you're curious about it

00:31:00,080 --> 00:31:05,840
we also have more specific information

00:31:03,600 --> 00:31:07,600
uh we have step-by-step building guides

00:31:05,840 --> 00:31:11,279
for a whole bunch of platforms

00:31:07,600 --> 00:31:14,880
uh ubuntu centos centos 5 is what we use

00:31:11,279 --> 00:31:19,039
for our canonical um community build

00:31:14,880 --> 00:31:22,240
server for apache open 4.1.x

00:31:19,039 --> 00:31:24,640
and we use centas7 for 4.2

00:31:22,240 --> 00:31:26,320
and above but you can also build it on

00:31:24,640 --> 00:31:29,279
all kinds of environments right here

00:31:26,320 --> 00:31:30,320
and it's also from this page that we go

00:31:29,279 --> 00:31:33,360
into

00:31:30,320 --> 00:31:35,039
how to build for squirrels girls girls

00:31:33,360 --> 00:31:38,799
curls crow

00:31:35,039 --> 00:31:39,840
building on mac os very very easy to do

00:31:38,799 --> 00:31:42,880
so

00:31:39,840 --> 00:31:46,240
um i encourage everyone to give it a try

00:31:42,880 --> 00:31:49,679
mac os really is a really nice uh build

00:31:46,240 --> 00:31:52,880
uh platform uh i've been a

00:31:49,679 --> 00:31:53,840
a really big um you know believer in

00:31:52,880 --> 00:31:57,200
that

00:31:53,840 --> 00:32:00,399
i think what i will try to do is put my

00:31:57,200 --> 00:32:03,679
uh build script uh not only

00:32:00,399 --> 00:32:05,919
in the uh in the dev tools uh place

00:32:03,679 --> 00:32:09,440
which as i said before is where i put it

00:32:05,919 --> 00:32:11,120
but maybe as uh and as an example

00:32:09,440 --> 00:32:12,480
in the uh in the main directory in the

00:32:11,120 --> 00:32:14,320
main build directory

00:32:12,480 --> 00:32:17,120
um so i think it's a really really good

00:32:14,320 --> 00:32:20,240
suggestion uh running post on time

00:32:17,120 --> 00:32:21,679
i appreciate everyone attending um uh

00:32:20,240 --> 00:32:24,880
unless anyone has

00:32:21,679 --> 00:32:26,559
any questions and i don't see any

00:32:24,880 --> 00:32:28,799
i will give you back a little bit of

00:32:26,559 --> 00:32:32,480
time uh give you an opportunity

00:32:28,799 --> 00:32:34,880
to refresh yourselves until

00:32:32,480 --> 00:32:37,279
the next session i hope everyone is

00:32:34,880 --> 00:32:40,480
having a fantastic apache con

00:32:37,279 --> 00:32:43,200
and again keep the faith

00:32:40,480 --> 00:32:44,960
apache open office is here to stay it is

00:32:43,200 --> 00:32:48,720
definitely alive

00:32:44,960 --> 00:32:57,840
so don't let anyone tell you otherwise

00:32:48,720 --> 00:32:57,840
thanks everyone bye-bye

00:33:12,640 --> 00:33:14,720

YouTube URL: https://www.youtube.com/watch?v=INivrgf9hvo


