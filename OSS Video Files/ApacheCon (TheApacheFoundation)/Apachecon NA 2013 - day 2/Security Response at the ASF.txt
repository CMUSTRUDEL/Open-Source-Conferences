Title: Security Response at the ASF
Publication date: 2013-10-17
Playlist: Apachecon NA 2013 - day 2
Description: 
	William A. Rowe Jr., Mark Thomas
ApacheCon NA 2013
How Secure?
Captions: 
	00:00:00,000 --> 00:00:03,600
get started today we've got bill rail

00:00:02,340 --> 00:00:05,640
and Mark Thomas they're going to talk

00:00:03,600 --> 00:00:10,889
about security response at the asf lead

00:00:05,640 --> 00:00:12,599
off the security track so let's uh like

00:00:10,889 --> 00:00:15,089
to introduce ourselves and actually you

00:00:12,599 --> 00:00:17,820
also like if you could briefly introduce

00:00:15,089 --> 00:00:21,000
yourselves I'd like to find out who our

00:00:17,820 --> 00:00:24,060
attendees are here so we know which

00:00:21,000 --> 00:00:26,670
audience were presented to but just to

00:00:24,060 --> 00:00:28,260
start out wanted to tell you a little

00:00:26,670 --> 00:00:32,009
bit about how we each came to the

00:00:28,260 --> 00:00:36,390
security team I am what it is that we do

00:00:32,009 --> 00:00:39,960
for the asf so I'm bill row this is Mark

00:00:36,390 --> 00:00:43,920
Thomas and my involvement in Apache goes

00:00:39,960 --> 00:00:48,660
back to about 2,000 what happened in my

00:00:43,920 --> 00:00:55,079
case as I started to use the Apache web

00:00:48,660 --> 00:00:58,949
server on windows the Apache web server

00:00:55,079 --> 00:01:01,379
on Leon the Windows platform in almost

00:00:58,949 --> 00:01:03,719
the very first time that i wrote a cgi

00:01:01,379 --> 00:01:06,210
example I then discovered a quote

00:01:03,719 --> 00:01:09,119
unquote vulnerability it seemed like

00:01:06,210 --> 00:01:12,360
something that could be readily abused

00:01:09,119 --> 00:01:14,689
or misused by anyone who was using a

00:01:12,360 --> 00:01:17,580
shared hosting provider and so I

00:01:14,689 --> 00:01:20,460
scrambled around having never used

00:01:17,580 --> 00:01:22,740
Apache style open source before trying

00:01:20,460 --> 00:01:24,600
to figure out where exactly I oughta who

00:01:22,740 --> 00:01:26,850
exactly i ought to point this out to so

00:01:24,600 --> 00:01:28,890
it gets fixed before more people

00:01:26,850 --> 00:01:30,689
discover the same problem and that's how

00:01:28,890 --> 00:01:33,750
I even got involved with the Apache

00:01:30,689 --> 00:01:38,640
project web server project as well as

00:01:33,750 --> 00:01:41,520
security team I commisar on the apache

00:01:38,640 --> 00:01:43,619
tomcat project so I got involved in

00:01:41,520 --> 00:01:45,329
security side of things when I had a

00:01:43,619 --> 00:01:48,360
deal with my first security

00:01:45,329 --> 00:01:50,909
vulnerability report for tomcat didn't

00:01:48,360 --> 00:01:52,560
make too much of a mess of it so after

00:01:50,909 --> 00:01:55,229
doing a handling a couple of those

00:01:52,560 --> 00:01:56,700
security teams said you seemed to know

00:01:55,229 --> 00:01:59,360
what you're doing so why won't you come

00:01:56,700 --> 00:02:02,100
and join the security team sure why not

00:01:59,360 --> 00:02:06,420
so I've been on the security team four

00:02:02,100 --> 00:02:08,759
five six years now but my primary focus

00:02:06,420 --> 00:02:10,440
at Apache is as I say as a committer on

00:02:08,759 --> 00:02:13,000
tomcat I also do other bits and pieces

00:02:10,440 --> 00:02:15,340
I'm part of the infrastructure team

00:02:13,000 --> 00:02:19,020
and how in other projects Commons being

00:02:15,340 --> 00:02:22,180
the most obvious and so we have

00:02:19,020 --> 00:02:23,530
basically with throughout the asf first

00:02:22,180 --> 00:02:25,900
thing that's probably worth pointing out

00:02:23,530 --> 00:02:28,270
is there are only about eight primary

00:02:25,900 --> 00:02:30,130
members of the Apache Security Response

00:02:28,270 --> 00:02:33,790
Team and we've got a little bit of

00:02:30,130 --> 00:02:36,820
exposure to everything the Chairman mark

00:02:33,790 --> 00:02:42,490
Cox is a very long very very well

00:02:36,820 --> 00:02:44,860
respected writer about topics and has

00:02:42,490 --> 00:02:48,100
been maintained the Apache week journal

00:02:44,860 --> 00:02:52,680
for a number of years and he's active at

00:02:48,100 --> 00:02:55,750
red of red hat and does a lot of their

00:02:52,680 --> 00:02:59,680
corporate bug triage as well as the

00:02:55,750 --> 00:03:02,170
apache opens patchy open source so he is

00:02:59,680 --> 00:03:05,470
our geezer chairman we have other

00:03:02,170 --> 00:03:08,640
expertise such as Ben Laurie who is a

00:03:05,470 --> 00:03:12,280
very well-respected openssl committer

00:03:08,640 --> 00:03:15,760
and it is extremely familiar with you

00:03:12,280 --> 00:03:18,070
know the intricacies of TLS and SSL and

00:03:15,760 --> 00:03:21,400
so through some of these mechanisms we

00:03:18,070 --> 00:03:23,920
actually get a sniff of what could be

00:03:21,400 --> 00:03:26,190
happening in other related projects that

00:03:23,920 --> 00:03:28,980
are outside of the apache foundation and

00:03:26,190 --> 00:03:32,140
hopefully can bring that information to

00:03:28,980 --> 00:03:34,330
specific projects one thing the security

00:03:32,140 --> 00:03:37,750
team does not do is actually fix

00:03:34,330 --> 00:03:40,690
security bugs the security teams primary

00:03:37,750 --> 00:03:43,420
goal were literally switchboard

00:03:40,690 --> 00:03:45,549
operators or traffic cops or what have

00:03:43,420 --> 00:03:48,970
you to make sure that the different

00:03:45,549 --> 00:03:53,320
projects within the asf in fact

00:03:48,970 --> 00:03:55,390
communicate amongst themselves come up

00:03:53,320 --> 00:03:58,959
with a reasonable approach given how

00:03:55,390 --> 00:04:04,540
severe a report is that best protects

00:03:58,959 --> 00:04:06,579
the users so we've effectively want to

00:04:04,540 --> 00:04:11,260
make sure that nobody is shocked

00:04:06,579 --> 00:04:15,820
surprised that this information leaks

00:04:11,260 --> 00:04:17,890
out before there's a remedy so let me

00:04:15,820 --> 00:04:20,350
see here just to give you a something

00:04:17,890 --> 00:04:22,750
kind of fun this is this is actually the

00:04:20,350 --> 00:04:23,470
inception of the security team before it

00:04:22,750 --> 00:04:27,060
was an actual

00:04:23,470 --> 00:04:30,880
committee we had this absolutely absurd

00:04:27,060 --> 00:04:34,000
URL our email address thinking that it

00:04:30,880 --> 00:04:36,850
would prevent people from spamming the

00:04:34,000 --> 00:04:41,230
list that didn't work out too well but I

00:04:36,850 --> 00:04:45,010
think I found a I can't remember from my

00:04:41,230 --> 00:04:49,270
angle but along the lines of I found a

00:04:45,010 --> 00:04:52,390
hole in the Apache web server at Apache

00:04:49,270 --> 00:04:54,340
network and this alias actually still

00:04:52,390 --> 00:04:55,840
does work today we should just

00:04:54,340 --> 00:04:59,470
commenting that it might be time to turn

00:04:55,840 --> 00:05:01,360
it off because the canonical address for

00:04:59,470 --> 00:05:05,860
anything security at the foundation is a

00:05:01,360 --> 00:05:09,010
security at Apache org and all the

00:05:05,860 --> 00:05:12,280
projects are welcome to advertise that

00:05:09,010 --> 00:05:14,620
address and then it becomes our issue to

00:05:12,280 --> 00:05:19,660
communicate with the with the individual

00:05:14,620 --> 00:05:21,430
projects and hopefully identify some

00:05:19,660 --> 00:05:24,820
projects have their own security lists

00:05:21,430 --> 00:05:26,740
other projects don't ever expect to have

00:05:24,820 --> 00:05:29,590
a vulnerability and even after they've

00:05:26,740 --> 00:05:31,330
discovered one that's exploitable don't

00:05:29,590 --> 00:05:33,070
ever expect to have another one so

00:05:31,330 --> 00:05:35,470
they're not an ideal candidate for

00:05:33,070 --> 00:05:38,740
having this whole infrastructure of a

00:05:35,470 --> 00:05:40,630
security specific list and the only

00:05:38,740 --> 00:05:42,520
reason that we don't simply use all our

00:05:40,630 --> 00:05:46,180
private lists is that we want to keep

00:05:42,520 --> 00:05:47,440
the awareness of these things limited to

00:05:46,180 --> 00:05:51,030
the people who will actually help

00:05:47,440 --> 00:05:54,100
address them we could span the entire

00:05:51,030 --> 00:05:58,690
believe apache web server is a fat as

00:05:54,100 --> 00:06:00,400
100 participants on the project

00:05:58,690 --> 00:06:04,050
management committee emeritus and

00:06:00,400 --> 00:06:06,970
current and we could spam 100 of them

00:06:04,050 --> 00:06:10,270
but in actuality there are about 15 20

00:06:06,970 --> 00:06:12,430
of us who are active in in solving those

00:06:10,270 --> 00:06:16,060
bugs and it's your experience as well

00:06:12,430 --> 00:06:19,950
you have about five tomcat yeah there's

00:06:16,060 --> 00:06:22,030
some yes it's about that it depends on

00:06:19,950 --> 00:06:23,710
what the particular issue is which

00:06:22,030 --> 00:06:24,790
particular members of the the project

00:06:23,710 --> 00:06:26,169
are going to be interested in it isn't

00:06:24,790 --> 00:06:30,580
only about five or so people

00:06:26,169 --> 00:06:32,410
contributing so so ken core one of the

00:06:30,580 --> 00:06:34,650
original security team founders is the

00:06:32,410 --> 00:06:38,520
one who set up these mailing lists

00:06:34,650 --> 00:06:40,590
and was the first to begin triaging all

00:06:38,520 --> 00:06:42,380
of the reports and within a matter of a

00:06:40,590 --> 00:06:45,509
month we were getting about a hundred

00:06:42,380 --> 00:06:49,919
five spam a day to this garbage

00:06:45,509 --> 00:06:54,350
collection basket and three or four

00:06:49,919 --> 00:06:57,570
times a year an incident of note that

00:06:54,350 --> 00:07:00,360
did turn out to merit more investigation

00:06:57,570 --> 00:07:03,330
and actually become a become a security

00:07:00,360 --> 00:07:07,110
concern there were actually two things

00:07:03,330 --> 00:07:09,449
that launched this whole effort we'd

00:07:07,110 --> 00:07:12,389
seen even from the day that the first

00:07:09,449 --> 00:07:14,190
eight founders started hacking on the

00:07:12,389 --> 00:07:17,490
Apache web server together there were

00:07:14,190 --> 00:07:20,610
already known security weaknesses in the

00:07:17,490 --> 00:07:22,500
software so that that was always an

00:07:20,610 --> 00:07:25,949
incentive for having a private

00:07:22,500 --> 00:07:29,430
communications channel and then we had a

00:07:25,949 --> 00:07:32,880
rather ugly incident I believe very

00:07:29,430 --> 00:07:34,440
early two thousand one and it actually

00:07:32,880 --> 00:07:37,199
had nothing to do with apache software

00:07:34,440 --> 00:07:39,990
it was the SSH software that had a

00:07:37,199 --> 00:07:43,229
vulnerability and at that point we had

00:07:39,990 --> 00:07:46,740
to consider our entire versioning at the

00:07:43,229 --> 00:07:49,710
time was CBS we had to consider our CVS

00:07:46,740 --> 00:07:51,630
repository suspect and there was a mad

00:07:49,710 --> 00:07:55,289
scramble and of course a mad scramble to

00:07:51,630 --> 00:07:57,180
publicize this to the world that here is

00:07:55,289 --> 00:08:01,050
what happened and here is how we're

00:07:57,180 --> 00:08:04,260
reacting to it and that in large part is

00:08:01,050 --> 00:08:05,460
actually not on our security team list

00:08:04,260 --> 00:08:07,760
anymore it's actually we have an

00:08:05,460 --> 00:08:10,380
entirely dedicated infrastructure team

00:08:07,760 --> 00:08:12,570
for paid employees of the foundation and

00:08:10,380 --> 00:08:16,320
they maintain an infrastructure blog and

00:08:12,570 --> 00:08:18,630
to this day a couple months ago they

00:08:16,320 --> 00:08:21,539
were writing new blog articles about the

00:08:18,630 --> 00:08:24,510
latest security concern that it affected

00:08:21,539 --> 00:08:31,459
I believe it was the bug one of the bug

00:08:24,510 --> 00:08:34,380
trackers 0 0 had issues a few years ago

00:08:31,459 --> 00:08:37,260
the most recent sort of Apache wide

00:08:34,380 --> 00:08:40,560
infrastructure problem we had was we

00:08:37,260 --> 00:08:43,740
discovered that we enabled some forensic

00:08:40,560 --> 00:08:45,600
logging on the web servers or we whether

00:08:43,740 --> 00:08:46,980
we knew we'd enabled friends logging

00:08:45,600 --> 00:08:47,710
what we've forgotten was that that was

00:08:46,980 --> 00:08:49,900
going to log all of

00:08:47,710 --> 00:08:51,910
headers which included the basic

00:08:49,900 --> 00:08:54,220
authorization headers which meant we

00:08:51,910 --> 00:08:56,080
were logging everybody's svn password

00:08:54,220 --> 00:08:58,000
which is the same as their shell

00:08:56,080 --> 00:09:01,840
password for my no and possibly other

00:08:58,000 --> 00:09:04,270
boxes as well and those passwords were

00:09:01,840 --> 00:09:05,800
readable to any committee so effectively

00:09:04,270 --> 00:09:07,960
any committee could read any other

00:09:05,800 --> 00:09:11,380
committees password hence we moved

00:09:07,960 --> 00:09:15,250
rather quickly to remove those logs and

00:09:11,380 --> 00:09:16,900
make everybody change their passwords so

00:09:15,250 --> 00:09:18,940
that that's that's the thing now is the

00:09:16,900 --> 00:09:21,550
responsibility of the infrastructure

00:09:18,940 --> 00:09:24,970
team and yet that one was definitely on

00:09:21,550 --> 00:09:28,090
us the one before that was a was an

00:09:24,970 --> 00:09:30,430
issue with JIRA and that was cross-site

00:09:28,090 --> 00:09:33,900
scripting problems in JIRA which was the

00:09:30,430 --> 00:09:36,640
root cause of the problem followed by a

00:09:33,900 --> 00:09:40,000
cascade of smaller issues at all all

00:09:36,640 --> 00:09:41,860
ended up with the attackers having root

00:09:40,000 --> 00:09:44,620
on the box that was running all of our

00:09:41,860 --> 00:09:46,870
issue trackers fortunately that wasn't

00:09:44,620 --> 00:09:49,750
that was as far as they got we caught it

00:09:46,870 --> 00:09:52,240
fairly quickly but the full gory details

00:09:49,750 --> 00:09:55,480
of how that happened is all on the the

00:09:52,240 --> 00:09:57,640
infrastructure blog and fundamentally

00:09:55,480 --> 00:09:59,350
that sort of the way we try and we try

00:09:57,640 --> 00:10:02,740
and approach all of this security stuff

00:09:59,350 --> 00:10:05,050
is that we keep it private until the

00:10:02,740 --> 00:10:07,390
instance dealt with and then we publish

00:10:05,050 --> 00:10:09,610
as much information as we can and the

00:10:07,390 --> 00:10:11,230
idea being that you know we've messed up

00:10:09,610 --> 00:10:13,900
so you know take the opportunity to

00:10:11,230 --> 00:10:15,250
learn from our mistakes and that goes to

00:10:13,900 --> 00:10:19,270
the infrastructure team as well as it

00:10:15,250 --> 00:10:20,650
does for any of the projects and in fact

00:10:19,270 --> 00:10:23,470
that's a that that brings up an

00:10:20,650 --> 00:10:25,920
interesting topic which is just what do

00:10:23,470 --> 00:10:28,720
we hear about how do we hear about it

00:10:25,920 --> 00:10:31,300
anybody here who does is involved in

00:10:28,720 --> 00:10:35,890
security is probably familiar with the

00:10:31,300 --> 00:10:40,080
long long stale debate about full

00:10:35,890 --> 00:10:42,490
disclosure versus responsible disclosure

00:10:40,080 --> 00:10:45,130
but the audience so there are various

00:10:42,490 --> 00:10:48,280
arguments and the Apache Foundation has

00:10:45,130 --> 00:10:50,680
always had the opinion that the world

00:10:48,280 --> 00:10:51,400
the entire world should be able to have

00:10:50,680 --> 00:10:54,400
the information

00:10:51,400 --> 00:10:56,980
react to it as they individually need to

00:10:54,400 --> 00:11:01,270
at the same time so we have a long

00:10:56,980 --> 00:11:03,370
tradition of not having a what you might

00:11:01,270 --> 00:11:08,100
call a vendor list or something or a

00:11:03,370 --> 00:11:13,030
priority subscription to security

00:11:08,100 --> 00:11:15,340
information about vulnerabilities so the

00:11:13,030 --> 00:11:18,550
core team effectively all you need to do

00:11:15,340 --> 00:11:21,520
to be in the know and you know that get

00:11:18,550 --> 00:11:24,310
the back the inside Scoob is to

00:11:21,520 --> 00:11:26,800
participate on your projects management

00:11:24,310 --> 00:11:29,290
committee and at that point you are

00:11:26,800 --> 00:11:32,500
privy to whatever is being privately

00:11:29,290 --> 00:11:35,770
discussed but that's of course dependent

00:11:32,500 --> 00:11:38,260
on a reporter who believes in

00:11:35,770 --> 00:11:42,850
responsible disclosure and i would say

00:11:38,260 --> 00:11:45,850
that nine-tenths of all apache related

00:11:42,850 --> 00:11:48,040
issues are found by such people and

00:11:45,850 --> 00:11:50,530
about half of them are security

00:11:48,040 --> 00:11:52,810
researchers I think that's a reasonable

00:11:50,530 --> 00:11:54,280
approximation yeah i'd have to have to

00:11:52,810 --> 00:11:57,280
go look at the stats and it's probably

00:11:54,280 --> 00:11:59,560
the case of the the ten percent of

00:11:57,280 --> 00:12:03,280
issues that are disclosed responsibly

00:11:59,560 --> 00:12:05,980
sort of disclosed accidentally rather

00:12:03,280 --> 00:12:08,620
than deliberately somebody and what

00:12:05,980 --> 00:12:10,900
often happens is some you'll find a

00:12:08,620 --> 00:12:14,890
security vulnerability in a product and

00:12:10,900 --> 00:12:16,930
then rather than the e.r probably want

00:12:14,890 --> 00:12:18,760
to keep this private they go and entry

00:12:16,930 --> 00:12:21,400
on the project's bug tracker which of

00:12:18,760 --> 00:12:24,580
course is public which sends all of his

00:12:21,400 --> 00:12:26,710
updates to the mailing lists so at that

00:12:24,580 --> 00:12:31,240
point you've you're effectively dealing

00:12:26,710 --> 00:12:33,010
with with a full disclosure and how much

00:12:31,240 --> 00:12:35,830
of a problem is really depends on what

00:12:33,010 --> 00:12:38,290
the vulnerability is summer obviously

00:12:35,830 --> 00:12:41,860
worse than others but I don't think

00:12:38,290 --> 00:12:44,650
we've certainly within Tomcat I don't

00:12:41,860 --> 00:12:46,810
think we've ever had somebody just

00:12:44,650 --> 00:12:49,060
publish an issue without giving us any

00:12:46,810 --> 00:12:52,840
warning or an opportunity to respond in

00:12:49,060 --> 00:12:54,100
advance the it's certainly yeah I don't

00:12:52,840 --> 00:12:56,890
think we ever had anything so they've

00:12:54,100 --> 00:12:58,900
all been either rose responsibly or

00:12:56,890 --> 00:13:00,760
they've sort of in the accidental oh I

00:12:58,900 --> 00:13:03,070
didn't think I didn't mean to make it

00:13:00,760 --> 00:13:05,690
public sorry is that a problem

00:13:03,070 --> 00:13:08,230
and now of course the experience of the

00:13:05,690 --> 00:13:11,510
httpd project is significantly different

00:13:08,230 --> 00:13:13,399
there has always been because it's so

00:13:11,510 --> 00:13:15,070
widely adopted because it's installed on

00:13:13,399 --> 00:13:17,540
so many machines just out of the box

00:13:15,070 --> 00:13:21,790
it's always been a prime target for

00:13:17,540 --> 00:13:24,709
Trojans for other brute kits and they're

00:13:21,790 --> 00:13:26,899
much of the investment in you know of

00:13:24,709 --> 00:13:29,680
the core developers in Apache has just

00:13:26,899 --> 00:13:33,380
been working around that set of issues

00:13:29,680 --> 00:13:36,410
but I also on the Apache side of web

00:13:33,380 --> 00:13:39,610
server we do have periodically about

00:13:36,410 --> 00:13:42,550
once every four or five years a zero-day

00:13:39,610 --> 00:13:46,790
disclosure of here is what we found and

00:13:42,550 --> 00:13:51,380
it's largely in the case of apache web

00:13:46,790 --> 00:13:53,510
server it's for the researchers for the

00:13:51,380 --> 00:13:57,410
hacking community it's it's largely a

00:13:53,510 --> 00:13:59,240
challenge it's a puzzle and there is a

00:13:57,410 --> 00:14:01,959
group of that a subset of those

00:13:59,240 --> 00:14:05,149
researchers who are very very strongly

00:14:01,959 --> 00:14:06,980
full disclosure and the only thing a PMC

00:14:05,149 --> 00:14:09,500
can do in that case it's no longer

00:14:06,980 --> 00:14:11,450
really the security team we have very

00:14:09,500 --> 00:14:12,920
little to offer because everything at

00:14:11,450 --> 00:14:16,100
that point might as well be discussed on

00:14:12,920 --> 00:14:18,410
your dev list putting the most more

00:14:16,100 --> 00:14:20,240
heads on the problem getting you know

00:14:18,410 --> 00:14:22,820
even even from the general public and

00:14:20,240 --> 00:14:24,440
getting a solution out there I want to

00:14:22,820 --> 00:14:26,720
say that there hasn't been a day that

00:14:24,440 --> 00:14:29,870
ever passed with a zero-day that we did

00:14:26,720 --> 00:14:31,300
not have multiple competing patches that

00:14:29,870 --> 00:14:34,540
would in fact work around the problem

00:14:31,300 --> 00:14:37,220
that were brought to the dead list and

00:14:34,540 --> 00:14:38,990
it would generally take half a day to

00:14:37,220 --> 00:14:41,839
day and a half to have an organized

00:14:38,990 --> 00:14:43,940
response and pick the best of breed of

00:14:41,839 --> 00:14:47,630
what our several patches will work

00:14:43,940 --> 00:14:49,940
around and one thing that's sort of 27

00:14:47,630 --> 00:14:52,040
is how many people here are committers

00:14:49,940 --> 00:14:55,430
on Apache projects of one form or

00:14:52,040 --> 00:14:57,620
another okay real number and I'll take

00:14:55,430 --> 00:15:02,089
it the rest of you a users of one or

00:14:57,620 --> 00:15:03,320
more Apache products okay from a from a

00:15:02,089 --> 00:15:04,730
committer point of view one of the

00:15:03,320 --> 00:15:08,690
things that you can do that will really

00:15:04,730 --> 00:15:11,360
make your life easier is streamline your

00:15:08,690 --> 00:15:13,850
release and build process the easier it

00:15:11,360 --> 00:15:15,650
is to do a release the easier it will be

00:15:13,850 --> 00:15:16,509
to deal with any zero days if you ever

00:15:15,650 --> 00:15:19,490
have

00:15:16,509 --> 00:15:21,230
and as they from you know Tomcats

00:15:19,490 --> 00:15:23,930
experience which they do happen they're

00:15:21,230 --> 00:15:25,610
not deliberate but they do happen and

00:15:23,930 --> 00:15:28,220
one of the you know one of the things

00:15:25,610 --> 00:15:31,670
that really helps us is it takes us

00:15:28,220 --> 00:15:33,139
about five minutes to build a release it

00:15:31,670 --> 00:15:35,089
takes a little bit longer to upload it

00:15:33,139 --> 00:15:36,769
to the servers but that's the it will

00:15:35,089 --> 00:15:38,269
spend far more time worrying about

00:15:36,769 --> 00:15:40,310
having the release vote and getting

00:15:38,269 --> 00:15:41,899
votes with eid and Joseph is a serious

00:15:40,310 --> 00:15:44,389
issue we could get really set in an hour

00:15:41,899 --> 00:15:46,730
if we had to but a lot of that stems

00:15:44,389 --> 00:15:50,139
from being able to have a really slick

00:15:46,730 --> 00:15:53,870
release process and literacy and release

00:15:50,139 --> 00:15:55,399
job done and that that really helps if

00:15:53,870 --> 00:15:56,720
you do not want have to be fighting your

00:15:55,399 --> 00:16:00,050
build process while you're trying to

00:15:56,720 --> 00:16:10,819
deal deal with a security problem yeah

00:16:00,050 --> 00:16:13,009
question Bank some projects have some

00:16:10,819 --> 00:16:16,670
very real estate I'm thinking

00:16:13,009 --> 00:16:18,440
particularly about Nathan blood and the

00:16:16,670 --> 00:16:21,199
security bug would certainly the most

00:16:18,440 --> 00:16:23,569
acute example of something that comes up

00:16:21,199 --> 00:16:25,279
where we might say gosh there is no more

00:16:23,569 --> 00:16:28,250
institutional footprint it was total

00:16:25,279 --> 00:16:30,470
crap about this can you shed any light

00:16:28,250 --> 00:16:33,290
about your foundation policy security

00:16:30,470 --> 00:16:35,949
teams approach to how under what

00:16:33,290 --> 00:16:35,949
circumstances

00:16:37,730 --> 00:16:44,850
what short answer is whenever you like

00:16:40,820 --> 00:16:47,580
and I'll club from the Tomcat

00:16:44,850 --> 00:16:50,220
perspective we have going back in the

00:16:47,580 --> 00:16:52,830
Tomcat history there's Tomcat 7 current

00:16:50,220 --> 00:16:54,900
release Tomcat six Tomcat 55 tom cat

00:16:52,830 --> 00:17:01,170
five to unpack for one tomcat for tomcat

00:16:54,900 --> 00:17:02,430
33 32 31 and 30 we abandoned Tomcat

00:17:01,170 --> 00:17:06,449
three before I even joined the project

00:17:02,430 --> 00:17:07,920
and tomcat 40 I think it gone as well

00:17:06,449 --> 00:17:12,420
when i joined we were just working on

00:17:07,920 --> 00:17:13,949
tomcat 41 and currently will keep two or

00:17:12,420 --> 00:17:16,350
three releases supportive than the

00:17:13,949 --> 00:17:17,820
others we effectively d support and what

00:17:16,350 --> 00:17:19,410
we do is we just send an announcement

00:17:17,820 --> 00:17:21,240
out to the users list in the announce

00:17:19,410 --> 00:17:24,959
list and the dev list and the Apache

00:17:21,240 --> 00:17:27,390
wider say right as of X date we will no

00:17:24,959 --> 00:17:29,670
longer be providing updates patches

00:17:27,390 --> 00:17:31,490
security releases for this version and

00:17:29,670 --> 00:17:36,150
we normally give people 12 months notice

00:17:31,490 --> 00:17:39,570
so back in sort of July August 2011 we

00:17:36,150 --> 00:17:42,000
said as of sep tember 30th 2012 we will

00:17:39,570 --> 00:17:44,130
not be supporting Apache 55 if there is

00:17:42,000 --> 00:17:46,140
a security vulnerability reported we

00:17:44,130 --> 00:17:48,360
will not check 55 to see if it is

00:17:46,140 --> 00:17:50,280
affected we will not produce a patch we

00:17:48,360 --> 00:17:53,250
will not do a release you need to

00:17:50,280 --> 00:17:55,760
upgrade you've got 12 months so for the

00:17:53,250 --> 00:17:58,470
software like that i think it is of

00:17:55,760 --> 00:18:00,510
service to your users to make that

00:17:58,470 --> 00:18:02,850
policy explicitly clear which version to

00:18:00,510 --> 00:18:04,200
support it which ones won't and tomcat

00:18:02,850 --> 00:18:07,350
she goes a little bit further and

00:18:04,200 --> 00:18:10,020
roughly says that release will get new

00:18:07,350 --> 00:18:11,970
features bug fixes security fixes that

00:18:10,020 --> 00:18:13,770
one will get bug fixes and security

00:18:11,970 --> 00:18:15,960
fixes that one will just get security

00:18:13,770 --> 00:18:17,730
fixes and we bend those rules a little

00:18:15,960 --> 00:18:20,640
bit we normally do a little bit more

00:18:17,730 --> 00:18:22,440
than we said we would but by having that

00:18:20,640 --> 00:18:24,060
policy clearly stated you users know

00:18:22,440 --> 00:18:26,610
what to expect and you can quite happily

00:18:24,060 --> 00:18:29,760
say when a security vulnerability comes

00:18:26,610 --> 00:18:32,540
in no not not doesn't affect any

00:18:29,760 --> 00:18:35,199
supported software you need to upgrade

00:18:32,540 --> 00:18:37,549
sorry

00:18:35,199 --> 00:18:40,519
well then let me let me elaborate on it

00:18:37,549 --> 00:18:42,349
for just a moment the apat the other

00:18:40,519 --> 00:18:45,919
example would be that within a web

00:18:42,349 --> 00:18:48,469
server obviously versions one two and

00:18:45,919 --> 00:18:50,269
one dot one hour long abandoned even

00:18:48,469 --> 00:18:53,690
before the foundation was formed into

00:18:50,269 --> 00:18:55,999
official body but recently I mean within

00:18:53,690 --> 00:18:58,699
the past several years we've looked at

00:18:55,999 --> 00:19:00,649
and face the issue of 13 it's everywhere

00:18:58,699 --> 00:19:02,269
it was widely deployed there were a lot

00:19:00,649 --> 00:19:03,859
of people who didn't jump to 20 because

00:19:02,269 --> 00:19:08,269
it was such a different piece of

00:19:03,859 --> 00:19:10,369
software and it is a community it has to

00:19:08,269 --> 00:19:13,129
be a decision by consensus of your

00:19:10,369 --> 00:19:15,649
project as long as there was a core

00:19:13,129 --> 00:19:17,929
group of people at httpd who were

00:19:15,649 --> 00:19:19,969
willing to maintain 13 and check it for

00:19:17,929 --> 00:19:24,139
both and check for security defects and

00:19:19,969 --> 00:19:27,019
write the occasional bug fix patch we

00:19:24,139 --> 00:19:29,509
didn't abandon it and it took it we

00:19:27,019 --> 00:19:32,299
literally had to wait until that group

00:19:29,509 --> 00:19:35,479
of individuals had either left or moved

00:19:32,299 --> 00:19:37,579
on or no longer had three cycles to

00:19:35,479 --> 00:19:39,589
participate that we brought it back up

00:19:37,579 --> 00:19:43,009
for a vote again and said now is the

00:19:39,589 --> 00:19:46,489
time to consider that we make 13 his

00:19:43,009 --> 00:19:49,369
history and similarly what Mark was

00:19:46,489 --> 00:19:51,709
describing a Tonka Apache the web server

00:19:49,369 --> 00:19:53,869
are we did we gave it my years notice

00:19:51,709 --> 00:19:55,940
and we said within you know a year from

00:19:53,869 --> 00:19:58,219
now we will cease to do anything about

00:19:55,940 --> 00:20:00,739
publishing vulnerabilities publishing

00:19:58,219 --> 00:20:02,809
releases or whatnot and at this point I

00:20:00,739 --> 00:20:04,819
believe you finally I mean we waited for

00:20:02,809 --> 00:20:09,049
that year to it last and then finally

00:20:04,819 --> 00:20:11,629
removed httpd 13 tar balls from the disc

00:20:09,049 --> 00:20:14,149
site so there aren't they are no longer

00:20:11,629 --> 00:20:15,799
there but you can find them all you can

00:20:14,149 --> 00:20:19,759
find every one of our releases at

00:20:15,799 --> 00:20:21,949
archive.org I see so you're so a good

00:20:19,759 --> 00:20:25,509
thing to do is a couple the lack of

00:20:21,949 --> 00:20:25,509
securities or with the lacquer

00:20:28,450 --> 00:20:33,410
yeah well that then then then you get

00:20:31,520 --> 00:20:35,780
into sort of sort of moving slightly

00:20:33,410 --> 00:20:37,370
away from sort of security policy into

00:20:35,780 --> 00:20:42,380
sort of distribution and infrastructure

00:20:37,370 --> 00:20:45,020
policy but if the what you should have

00:20:42,380 --> 00:20:47,270
on disks of your mate your latest

00:20:45,020 --> 00:20:49,250
release of every supported version so if

00:20:47,270 --> 00:20:50,390
you have several versions you supporting

00:20:49,250 --> 00:20:52,070
in parallel then that needs to be on

00:20:50,390 --> 00:20:54,830
dist and if it's on distant it's

00:20:52,070 --> 00:20:57,400
supported then the interesting is going

00:20:54,830 --> 00:21:02,630
to expect you to produce patches for it

00:20:57,400 --> 00:21:04,190
if you don't then ultimately we can't

00:21:02,630 --> 00:21:05,870
make you do anything but we're sort of

00:21:04,190 --> 00:21:08,030
going to start raising some concerns and

00:21:05,870 --> 00:21:10,220
st. look you really either need to stop

00:21:08,030 --> 00:21:11,540
supporting that or support it properly

00:21:10,220 --> 00:21:14,540
we don't really mind which one you do

00:21:11,540 --> 00:21:16,490
but you really need to pick one and

00:21:14,540 --> 00:21:17,570
something you encourage the project to

00:21:16,490 --> 00:21:19,220
sort of do the right thing when it comes

00:21:17,570 --> 00:21:21,470
back to doing the right thing for your

00:21:19,220 --> 00:21:23,810
users you know you users need to be

00:21:21,470 --> 00:21:25,400
aware of what they're working with so if

00:21:23,810 --> 00:21:27,050
you're putting something up there on

00:21:25,400 --> 00:21:29,060
your website that's downloadable then

00:21:27,050 --> 00:21:30,890
the expectation from the users is that

00:21:29,060 --> 00:21:33,350
it's going to be supported in some form

00:21:30,890 --> 00:21:34,640
now whether it's yes if there's a

00:21:33,350 --> 00:21:35,780
problem we'll give you a patch or well

00:21:34,640 --> 00:21:37,460
if there's a problem you'll have to

00:21:35,780 --> 00:21:39,260
upgrade to the next version or give your

00:21:37,460 --> 00:21:55,370
work around but it needs to be supported

00:21:39,260 --> 00:22:00,550
in some form two releases three releases

00:21:55,370 --> 00:22:06,790
were used I use your in 505 announcement

00:22:00,550 --> 00:22:14,920
presentations of why you do this just

00:22:06,790 --> 00:22:17,290
copied the one we did to a full one nice

00:22:14,920 --> 00:22:20,020
thing about httpd is the people running

00:22:17,290 --> 00:22:21,460
it right and so it's clear who the users

00:22:20,020 --> 00:22:23,110
aren't as clear the definition of

00:22:21,460 --> 00:22:24,820
vulnerability as a sense it's something

00:22:23,110 --> 00:22:27,130
that can actually happen to providing

00:22:24,820 --> 00:22:28,600
instance I they don't a couple of

00:22:27,130 --> 00:22:31,060
project mailing lists that make

00:22:28,600 --> 00:22:32,830
librarian audits where we've gotten the

00:22:31,060 --> 00:22:34,360
email message from somebody saying well

00:22:32,830 --> 00:22:39,010
we've read the following woozy but

00:22:34,360 --> 00:22:39,940
rebuilding it so disappointed potion 300

00:22:39,010 --> 00:22:42,310
really what are you going to do about

00:22:39,940 --> 00:22:43,900
you know this unique and I just thought

00:22:42,310 --> 00:22:46,210
this was a great opportunity to ask for

00:22:43,900 --> 00:22:49,420
some larger context on this discussion

00:22:46,210 --> 00:22:53,980
process for you guys yeah we've had that

00:22:49,420 --> 00:22:58,630
a few times on tomcat I mean the I'm not

00:22:53,980 --> 00:23:00,520
a particularly big fan of any form of

00:22:58,630 --> 00:23:02,680
static analysis for security

00:23:00,520 --> 00:23:04,630
vulnerabilities we've had a number of

00:23:02,680 --> 00:23:07,450
commercial companies approaches

00:23:04,630 --> 00:23:09,370
privately and say oh we'd yeah we've

00:23:07,450 --> 00:23:11,380
we've got this static analysis till we'd

00:23:09,370 --> 00:23:12,700
love to run tom cat on it or we run tom

00:23:11,380 --> 00:23:16,470
cat on it and we'd love you to look at

00:23:12,700 --> 00:23:18,670
the results and and i've wasted a

00:23:16,470 --> 00:23:22,540
reasonable proportion of my life looking

00:23:18,670 --> 00:23:26,830
at those results and they're they're not

00:23:22,540 --> 00:23:28,330
helpful to be honest the only things

00:23:26,830 --> 00:23:30,190
that were ever useful out of them were

00:23:28,330 --> 00:23:31,750
some of these commercial tools pull in

00:23:30,190 --> 00:23:33,130
other tools like things like fine bugs

00:23:31,750 --> 00:23:35,890
and the fine bug reports were usually

00:23:33,130 --> 00:23:38,260
pretty accurate there's a reasonable

00:23:35,890 --> 00:23:41,530
number of false positives but it's a

00:23:38,260 --> 00:23:44,650
pretty small percentage probably if you

00:23:41,530 --> 00:23:46,420
look at the Tomcat codebase prior to us

00:23:44,650 --> 00:23:47,590
fixing all of the fine bug issues though

00:23:46,420 --> 00:23:49,120
it's probably sort of a three or four

00:23:47,590 --> 00:23:50,590
percent false positive rate with fine

00:23:49,120 --> 00:23:53,110
bugs which yeah that's manageable I

00:23:50,590 --> 00:23:55,150
don't mind fixing you know ninety-six

00:23:53,110 --> 00:23:57,190
ninety-seven percent of the issues and

00:23:55,150 --> 00:24:02,410
just marking the other three as false

00:23:57,190 --> 00:24:05,350
positives but for so the specific

00:24:02,410 --> 00:24:06,640
analysis tools Tom for tomcat we see we

00:24:05,350 --> 00:24:08,620
found they were very much written for

00:24:06,640 --> 00:24:10,690
web applications so things that are

00:24:08,620 --> 00:24:12,940
incredibly dangerous and stupid to do in

00:24:10,690 --> 00:24:14,440
a web application are actually exactly

00:24:12,940 --> 00:24:16,539
what the container has to

00:24:14,440 --> 00:24:17,980
because it knows that the cat way the

00:24:16,539 --> 00:24:19,659
code has come from and it's trusted and

00:24:17,980 --> 00:24:21,639
it's safe and no that's perfectly

00:24:19,659 --> 00:24:24,159
reasonable so it was just false

00:24:21,639 --> 00:24:26,590
positives all over the place like the

00:24:24,159 --> 00:24:28,629
didn't like the CGI circlet because it

00:24:26,590 --> 00:24:31,000
you know calling calling exec was bad

00:24:28,629 --> 00:24:34,990
well that's what the CGI Sadler has to

00:24:31,000 --> 00:24:36,700
do people so that you know there are it

00:24:34,990 --> 00:24:38,980
was is things like that so I'm not a

00:24:36,700 --> 00:24:40,450
huge fan of them going on to the second

00:24:38,980 --> 00:24:42,850
point which is about there's a

00:24:40,450 --> 00:24:46,230
vulnerability reported in a library what

00:24:42,850 --> 00:24:46,230
do you do is it really a vulnerability

00:24:46,679 --> 00:24:51,820
it's a difficult one because it depends

00:24:49,179 --> 00:24:53,590
a lot on the house libraries used and

00:24:51,820 --> 00:24:55,690
it's one of those sort of judgment calls

00:24:53,590 --> 00:24:57,250
and it's that's probably the time to

00:24:55,690 --> 00:25:00,159
sort of ask the security team for a bit

00:24:57,250 --> 00:25:02,919
of advice if you've got other projects

00:25:00,159 --> 00:25:05,259
that use the library within Apache then

00:25:02,919 --> 00:25:07,480
notify their private lists as well and

00:25:05,259 --> 00:25:09,730
say look we've had this report we think

00:25:07,480 --> 00:25:11,230
you use our library you know might this

00:25:09,730 --> 00:25:12,940
affect you and you're just trying to get

00:25:11,230 --> 00:25:15,549
a bit more information as to whether

00:25:12,940 --> 00:25:17,500
it's an issue or not that is that is

00:25:15,549 --> 00:25:20,500
definitely one one aspect that the

00:25:17,500 --> 00:25:22,720
security at team can help you with is

00:25:20,500 --> 00:25:24,460
getting the wider exposure we run into

00:25:22,720 --> 00:25:27,820
this very often I mean with you know you

00:25:24,460 --> 00:25:31,330
you can't have a library component error

00:25:27,820 --> 00:25:33,429
issue with one of the HTTP client or one

00:25:31,330 --> 00:25:36,460
of the one of the very common base

00:25:33,429 --> 00:25:39,850
Apache base Apache Java packages without

00:25:36,460 --> 00:25:42,460
impacting potentially you know 20 30 40

00:25:39,850 --> 00:25:44,649
different projects at the asf I'll give

00:25:42,460 --> 00:25:49,110
you an example though one thing when you

00:25:44,649 --> 00:25:51,879
talk about mitre MIT re which is the CVE

00:25:49,110 --> 00:25:54,100
numbering and and really their entire

00:25:51,879 --> 00:25:55,990
purpose what if the reason they came to

00:25:54,100 --> 00:26:00,070
exist was so that we would have won

00:25:55,990 --> 00:26:02,769
canonical representation identification

00:26:00,070 --> 00:26:05,139
of a vulnerability so where it used to

00:26:02,769 --> 00:26:06,909
be sucky arena had their ID and bug

00:26:05,139 --> 00:26:09,460
track had you know all of these

00:26:06,909 --> 00:26:11,440
different research groups have their own

00:26:09,460 --> 00:26:13,809
ID numbers and they still do to this day

00:26:11,440 --> 00:26:16,179
and red hat will have this product

00:26:13,809 --> 00:26:18,039
specific bug number

00:26:16,179 --> 00:26:19,360
this isn't really helpful we can't we

00:26:18,039 --> 00:26:21,759
don't know if we're talking about the

00:26:19,360 --> 00:26:25,629
same problem or not so that's why mitre

00:26:21,759 --> 00:26:27,369
exists is to have a report determine all

00:26:25,629 --> 00:26:30,700
of the things that fall under that same

00:26:27,369 --> 00:26:33,039
report under that same umbrella you need

00:26:30,700 --> 00:26:34,480
to actually have an exploit before it's

00:26:33,039 --> 00:26:37,059
a vulnerability we were talking about

00:26:34,480 --> 00:26:38,679
the static code analysis yes there are a

00:26:37,059 --> 00:26:40,299
bunch of bugs and they will spit out a

00:26:38,679 --> 00:26:42,669
bunch of bugs and some of them are no

00:26:40,299 --> 00:26:45,159
ops and some of them in fact do bad

00:26:42,669 --> 00:26:48,990
things but unless you have a vector

00:26:45,159 --> 00:26:52,210
through which somebody may maliciously

00:26:48,990 --> 00:26:54,789
cause the program to fail or cause it in

00:26:52,210 --> 00:26:59,220
fact one of the more interesting things

00:26:54,789 --> 00:27:02,139
here I'm going to read it verbatim but

00:26:59,220 --> 00:27:04,149
no no all network servers are subject to

00:27:02,139 --> 00:27:06,820
denial of service attacks okay that's

00:27:04,149 --> 00:27:09,009
just a fact you can have always consumed

00:27:06,820 --> 00:27:13,749
too much resources if you are providing

00:27:09,009 --> 00:27:16,450
a resource it's the same as if we were

00:27:13,749 --> 00:27:18,190
to not raise hands here and just say who

00:27:16,450 --> 00:27:20,830
would like to ask questions yourself out

00:27:18,190 --> 00:27:22,960
and one person will suddenly have

00:27:20,830 --> 00:27:24,070
literally all the questions and other

00:27:22,960 --> 00:27:26,860
people won't get a word in edgewise

00:27:24,070 --> 00:27:28,749
that's exactly what a server experiences

00:27:26,860 --> 00:27:30,789
right so we have a very specific

00:27:28,749 --> 00:27:33,399
definition we've used it to this day in

00:27:30,789 --> 00:27:36,159
general our philosophy is to avoid any

00:27:33,399 --> 00:27:39,190
text which can cause the server consume

00:27:36,159 --> 00:27:42,999
resources in a non linear relationship

00:27:39,190 --> 00:27:44,710
besides if they're in so yes sure I mean

00:27:42,999 --> 00:27:47,590
you're providing a service therefore

00:27:44,710 --> 00:27:50,350
you're giving them computational cycles

00:27:47,590 --> 00:27:53,139
and you know that you can use more you

00:27:50,350 --> 00:27:55,960
can use less this is another example

00:27:53,139 --> 00:27:58,149
that's slow loris tolerability my

00:27:55,960 --> 00:28:00,490
goodness I can I can trickle in right

00:27:58,149 --> 00:28:03,669
after bite at your server and I will use

00:28:00,490 --> 00:28:06,070
up a connection that entire time of

00:28:03,669 --> 00:28:08,049
course and you can do that and that's by

00:28:06,070 --> 00:28:10,179
design in the case of Facebook or in the

00:28:08,049 --> 00:28:11,919
case of Twitter where you have pretty

00:28:10,179 --> 00:28:14,799
much a persistence dream yes you're

00:28:11,919 --> 00:28:16,869
going to monopolize that one Street so

00:28:14,799 --> 00:28:19,299
we don't consider these things around

00:28:16,869 --> 00:28:22,330
our abilities and we another example is

00:28:19,299 --> 00:28:24,580
we have a specific flaw in the APR

00:28:22,330 --> 00:28:25,940
library that for a very long time we did

00:28:24,580 --> 00:28:29,429
not salt hashes

00:28:25,940 --> 00:28:31,429
which might seem like and where this

00:28:29,429 --> 00:28:35,340
becomes an issue is if I'm going to then

00:28:31,429 --> 00:28:38,100
fill that hash with session tokens or

00:28:35,340 --> 00:28:40,980
something where if they actually are

00:28:38,100 --> 00:28:43,770
able to probe memory they're going to be

00:28:40,980 --> 00:28:45,210
able to easily decipher what this hash

00:28:43,770 --> 00:28:47,160
is doing or we end up with hash

00:28:45,210 --> 00:28:49,920
collision problem where you can actually

00:28:47,160 --> 00:28:52,920
force this particular hash node to be

00:28:49,920 --> 00:28:56,190
overloaded and literally waste thousands

00:28:52,920 --> 00:28:59,970
of cycles you know making all these

00:28:56,190 --> 00:29:02,190
duplicate identities yes it could be a

00:28:59,970 --> 00:29:04,980
vulnerability now the question is proven

00:29:02,190 --> 00:29:06,840
and so in the case of APR we said okay

00:29:04,980 --> 00:29:08,880
this is a defect we're going to treat it

00:29:06,840 --> 00:29:10,890
as a defect and we're going to go out to

00:29:08,880 --> 00:29:15,419
the communities who use APR do we know

00:29:10,890 --> 00:29:18,030
use the APR library and do you have can

00:29:15,419 --> 00:29:20,790
can this be exploited we're all ready to

00:29:18,030 --> 00:29:22,320
issue a cvd number for this library but

00:29:20,790 --> 00:29:25,740
you have to give us a use case of

00:29:22,320 --> 00:29:29,070
something that actually goes wrong in a

00:29:25,740 --> 00:29:30,990
malicious way and not simply it causes

00:29:29,070 --> 00:29:32,640
the program to fail so these are these

00:29:30,990 --> 00:29:36,030
are decisions your project will have to

00:29:32,640 --> 00:29:41,130
make a security team can give you some

00:29:36,030 --> 00:29:42,750
guidance but it's up to you which witch

00:29:41,130 --> 00:29:45,120
your project is going to consider

00:29:42,750 --> 00:29:48,419
vulnerability and what it simply wants

00:29:45,120 --> 00:29:50,040
to fix as a defect yeah just looking at

00:29:48,419 --> 00:29:53,730
the time one of the things that we did

00:29:50,040 --> 00:29:55,950
want to discuss today was so that just

00:29:53,730 --> 00:29:57,960
that the process for how these

00:29:55,950 --> 00:30:00,870
vulnerabilities are handled and that is

00:29:57,960 --> 00:30:03,059
documented on the security pages on the

00:30:00,870 --> 00:30:05,250
apache site this was a a recommended

00:30:03,059 --> 00:30:06,809
process that we suggest that projects

00:30:05,250 --> 00:30:08,190
follow you don't have to do and there

00:30:06,809 --> 00:30:11,220
are some aspects of that that you do

00:30:08,190 --> 00:30:12,750
have to do and most projects do follow

00:30:11,220 --> 00:30:13,500
that procedure give or take but if you

00:30:12,750 --> 00:30:15,900
were to do things in a slightly

00:30:13,500 --> 00:30:17,910
different way that's fine but the thing

00:30:15,900 --> 00:30:20,970
that we did want to sort of just bring

00:30:17,910 --> 00:30:22,590
up is we sort of have a fundamental

00:30:20,970 --> 00:30:25,110
problem when we're dealing with security

00:30:22,590 --> 00:30:26,429
vulnerabilities we we want to keep the

00:30:25,110 --> 00:30:28,590
information about the vulnerability

00:30:26,429 --> 00:30:30,270
private until there's a release

00:30:28,590 --> 00:30:31,740
available so when we publish the

00:30:30,270 --> 00:30:33,510
vulnerability information to our users

00:30:31,740 --> 00:30:36,120
we can say there's this problem but

00:30:33,510 --> 00:30:38,690
going at this release and everything

00:30:36,120 --> 00:30:42,530
will be fine problem we

00:30:38,690 --> 00:30:44,990
is that well this is open source and we

00:30:42,530 --> 00:30:47,330
do everything in public so in order to

00:30:44,990 --> 00:30:50,120
have a release there has to be a public

00:30:47,330 --> 00:30:52,880
commit there has to be a public tag

00:30:50,120 --> 00:30:53,990
there has to be a public vote and so

00:30:52,880 --> 00:30:56,030
fundamentally you've got a vulnerability

00:30:53,990 --> 00:30:57,620
you've got a patch that fixes that

00:30:56,030 --> 00:30:59,870
vulnerability and you have to commit

00:30:57,620 --> 00:31:03,710
that patch publicly before you can do

00:30:59,870 --> 00:31:06,650
the release and your attackers aren't

00:31:03,710 --> 00:31:08,390
stupid it's it's not beyond the realms

00:31:06,650 --> 00:31:11,990
of possibility to look at a look at a

00:31:08,390 --> 00:31:13,370
patch and reverse engineering real hang

00:31:11,990 --> 00:31:15,470
on it that's fixing something

00:31:13,370 --> 00:31:17,060
interesting that all that looks security

00:31:15,470 --> 00:31:20,930
all there's a hole there I can attack

00:31:17,060 --> 00:31:22,820
tom cat or httpd that way so and

00:31:20,930 --> 00:31:24,500
obviously you you don't announce the

00:31:22,820 --> 00:31:26,030
patch with a big fan fest oh there's

00:31:24,500 --> 00:31:28,850
this security patch look at this over

00:31:26,030 --> 00:31:29,960
here people you obviously don't you

00:31:28,850 --> 00:31:33,350
advertise it but there is this

00:31:29,960 --> 00:31:34,760
fundamental problem that you need to get

00:31:33,350 --> 00:31:38,170
the patched in order to do the release

00:31:34,760 --> 00:31:38,170
but you want to keep it private and

00:31:38,260 --> 00:31:44,690
fundament there isn't really a perfect

00:31:41,000 --> 00:31:46,910
solution to that problem Tom cutters has

00:31:44,690 --> 00:31:48,440
sort of used a variety of tactics over

00:31:46,910 --> 00:31:52,910
the years depending on what the problem

00:31:48,440 --> 00:31:56,870
is if it we sometimes we just try and

00:31:52,910 --> 00:32:00,260
put a fairly innocuous comment you know

00:31:56,870 --> 00:32:01,760
clean up or refract refactoring is one

00:32:00,260 --> 00:32:03,860
of my favorites because I do quite I do

00:32:01,760 --> 00:32:05,510
quite a bit of that anyway so if I

00:32:03,860 --> 00:32:09,170
commit a refactoring patch it's really

00:32:05,510 --> 00:32:11,510
not that much of a surprise so there are

00:32:09,170 --> 00:32:14,270
various ways to try and hide it and the

00:32:11,510 --> 00:32:15,890
other thing we look at is how close to

00:32:14,270 --> 00:32:19,880
the release do we actually commit the

00:32:15,890 --> 00:32:21,110
patch so if it's that the more easily we

00:32:19,880 --> 00:32:22,760
think it's going it's going to be to

00:32:21,110 --> 00:32:24,710
reverse-engineer it the closer to the

00:32:22,760 --> 00:32:27,620
release or the tag will commit the patch

00:32:24,710 --> 00:32:28,880
and again the more severe we think the

00:32:27,620 --> 00:32:32,330
issue is the faster we'll run the

00:32:28,880 --> 00:32:36,170
release process so we could do say

00:32:32,330 --> 00:32:38,240
commit tag roll the release vote and

00:32:36,170 --> 00:32:40,390
release and get that done within a

00:32:38,240 --> 00:32:42,560
couple of hours if we really have to

00:32:40,390 --> 00:32:44,300
generally we let the release process run

00:32:42,560 --> 00:32:45,800
for the normal three days we've never

00:32:44,300 --> 00:32:48,750
had anything so serious we need to do

00:32:45,800 --> 00:32:51,060
the release faster than that

00:32:48,750 --> 00:32:53,070
but that there is that there is that

00:32:51,060 --> 00:32:54,660
problem and various projects have got

00:32:53,070 --> 00:32:57,750
the sort of thought about various

00:32:54,660 --> 00:33:00,540
schemes of working around that but what

00:32:57,750 --> 00:33:02,760
you can't get over is well if what you

00:33:00,540 --> 00:33:04,650
proposed because Apache releases source

00:33:02,760 --> 00:33:06,090
everything really is it's not the

00:33:04,650 --> 00:33:08,550
binaries are a convenience what we

00:33:06,090 --> 00:33:09,780
actually releases source and one of the

00:33:08,550 --> 00:33:11,550
things that people are going to do is

00:33:09,780 --> 00:33:14,070
they're going to take that source tar

00:33:11,550 --> 00:33:16,500
ball and they should compare it against

00:33:14,070 --> 00:33:19,770
the tag so if you've decided all we

00:33:16,500 --> 00:33:21,420
won't actually put the commit in the tag

00:33:19,770 --> 00:33:23,730
until after we've announced the release

00:33:21,420 --> 00:33:25,560
and we'll sort of fix the tag later kind

00:33:23,730 --> 00:33:27,120
of thing then that won't work because

00:33:25,560 --> 00:33:28,350
the first thing somebody should do when

00:33:27,120 --> 00:33:30,000
they're voting on the release is check

00:33:28,350 --> 00:33:32,250
that the source tarball agrees with the

00:33:30,000 --> 00:33:34,290
tag if you haven't included one of the

00:33:32,250 --> 00:33:37,350
commits in the tag then it won't agree

00:33:34,290 --> 00:33:38,610
and the release should fail so that that

00:33:37,350 --> 00:33:41,550
approach does what you can try and do

00:33:38,610 --> 00:33:43,530
the entire thing privately take

00:33:41,550 --> 00:33:46,470
basically to have a copy of your your

00:33:43,530 --> 00:33:49,950
svn repo prop yeah have a private copy

00:33:46,470 --> 00:33:51,960
and do everything privately create the

00:33:49,950 --> 00:33:54,510
tag vote on the release do it all

00:33:51,960 --> 00:33:56,280
privately and then publish the

00:33:54,510 --> 00:33:57,720
disadvantage with that of course is well

00:33:56,280 --> 00:33:58,770
we're then not really doing open

00:33:57,720 --> 00:34:01,230
development we're doing things behind

00:33:58,770 --> 00:34:02,550
closed doors and depending on the

00:34:01,230 --> 00:34:04,740
severity of the issue there might be a

00:34:02,550 --> 00:34:06,870
justification for doing that but that

00:34:04,740 --> 00:34:10,260
that's really then down to the PMC to

00:34:06,870 --> 00:34:12,840
make the decision that we're prepared to

00:34:10,260 --> 00:34:14,610
sort of do things more privately than we

00:34:12,840 --> 00:34:17,159
would usually in or because of the

00:34:14,610 --> 00:34:18,659
severity of this issue the other

00:34:17,159 --> 00:34:20,250
approach that Tomcats actually taken

00:34:18,659 --> 00:34:21,720
we've looked at something sent off will

00:34:20,250 --> 00:34:23,879
publish that now it's fine we don't need

00:34:21,720 --> 00:34:27,360
a release for that it's trivial to work

00:34:23,879 --> 00:34:30,000
around or it'll affect one in 10,000

00:34:27,360 --> 00:34:30,990
users and even then it's easy to put

00:34:30,000 --> 00:34:32,280
them to work around so we just published

00:34:30,990 --> 00:34:34,139
straight away and say yeah they'll be a

00:34:32,280 --> 00:34:37,379
fix in the next release that'll be along

00:34:34,139 --> 00:34:38,909
in a month or however long and just make

00:34:37,379 --> 00:34:40,950
the vulnerability and the worth around

00:34:38,909 --> 00:34:44,129
public straightaway I was going to say

00:34:40,950 --> 00:34:46,260
this is actually much of what you were

00:34:44,129 --> 00:34:48,540
alluding to is this is all about

00:34:46,260 --> 00:34:50,460
communications and so one thing I wanted

00:34:48,540 --> 00:34:53,190
to point out and something that we have

00:34:50,460 --> 00:34:56,129
a we find comes up as an issue quite a

00:34:53,190 --> 00:34:57,240
bit it's the security team first of all

00:34:56,129 --> 00:34:59,910
you need to communicate is

00:34:57,240 --> 00:35:01,590
which means you use either a security

00:34:59,910 --> 00:35:03,990
list those are all the security lists

00:35:01,590 --> 00:35:06,390
that exist if your project doesn't have

00:35:03,990 --> 00:35:10,560
one infrastructure is happy to create

00:35:06,390 --> 00:35:12,330
you a new list if the if your project is

00:35:10,560 --> 00:35:15,240
small enough if you're not we have a

00:35:12,330 --> 00:35:19,080
hundred people on the httpd list wheel

00:35:15,240 --> 00:35:21,270
PMC list we only have 30 40 on the aprs

00:35:19,080 --> 00:35:23,280
and your project might only have 10 p.m.

00:35:21,270 --> 00:35:24,690
people following the DMC list then

00:35:23,280 --> 00:35:27,119
there's probably no reason to have a

00:35:24,690 --> 00:35:28,230
separate security list but number one is

00:35:27,119 --> 00:35:30,000
you need to communicate with each other

00:35:28,230 --> 00:35:32,010
and test those patches I mean right the

00:35:30,000 --> 00:35:34,980
patch put it out to the security or the

00:35:32,010 --> 00:35:36,360
PMC private list you know bounce that

00:35:34,980 --> 00:35:38,460
off of each other and come up with the

00:35:36,360 --> 00:35:42,060
best patch you can immediately

00:35:38,460 --> 00:35:43,950
thereafter you do the release it then

00:35:42,060 --> 00:35:46,110
becomes a Deb issue share some

00:35:43,950 --> 00:35:47,790
background notes with your community say

00:35:46,110 --> 00:35:50,280
this is how we came upon this patch

00:35:47,790 --> 00:35:52,230
maybe your community somebody is going

00:35:50,280 --> 00:35:53,760
to offer you know that that fixed it

00:35:52,230 --> 00:35:55,560
there's actually a better patch that

00:35:53,760 --> 00:35:56,910
would have been more thorough and let's

00:35:55,560 --> 00:35:59,040
come back and revisit this as a

00:35:56,910 --> 00:36:01,740
community as an open development

00:35:59,040 --> 00:36:03,240
community second thing though there's

00:36:01,740 --> 00:36:05,940
another communications that gets lost

00:36:03,240 --> 00:36:09,150
here often and that's what the reporter

00:36:05,940 --> 00:36:10,500
and whoever was whoever reported it

00:36:09,150 --> 00:36:12,810
whether they were doing it for fame and

00:36:10,500 --> 00:36:14,040
fortune whether they were doing it out

00:36:12,810 --> 00:36:15,359
of the goodness of their heart or

00:36:14,040 --> 00:36:17,550
whether they were doing out of pure

00:36:15,359 --> 00:36:19,710
malice of spite they still deserve

00:36:17,550 --> 00:36:21,240
they've shared you that information they

00:36:19,710 --> 00:36:23,280
deserve the courtesy of a response they

00:36:21,240 --> 00:36:25,140
deserve the courtesy of I you know I

00:36:23,280 --> 00:36:27,900
want to publish my research and I want

00:36:25,140 --> 00:36:30,570
to do that in three weeks will you have

00:36:27,900 --> 00:36:33,060
a patch ready or do you agree that this

00:36:30,570 --> 00:36:34,650
is a bug well if that if you let a week

00:36:33,060 --> 00:36:35,670
or two weeks go by what are they going

00:36:34,650 --> 00:36:36,840
to do at the end of their three weeks

00:36:35,670 --> 00:36:38,850
though I find you guys don't want to

00:36:36,840 --> 00:36:40,290
talk to me i'm just gonna publish you

00:36:38,850 --> 00:36:42,660
know you and you can't expect them to

00:36:40,290 --> 00:36:44,910
behave any other way whereas if you talk

00:36:42,660 --> 00:36:46,230
to them very early and you say yes this

00:36:44,910 --> 00:36:48,300
is a problem and I understand you want

00:36:46,230 --> 00:36:50,340
to publish but by the way these 12 other

00:36:48,300 --> 00:36:52,740
projects all some way or another

00:36:50,340 --> 00:36:54,540
indirectly use the same thing they all

00:36:52,740 --> 00:36:56,730
want to release before you publish can

00:36:54,540 --> 00:36:58,710
we make it six weeks most of them are

00:36:56,730 --> 00:37:00,750
going to say yes almost all the time I

00:36:58,710 --> 00:37:04,050
never I've never had push back that said

00:37:00,750 --> 00:37:05,850
I will not with one exception if they

00:37:04,050 --> 00:37:07,500
are going to present their findings at a

00:37:05,850 --> 00:37:09,510
research conference or at a security

00:37:07,500 --> 00:37:11,130
conference that's a pretty hard deadline

00:37:09,510 --> 00:37:13,230
they're not going to cancel their

00:37:11,130 --> 00:37:15,000
speaking slot just because you didn't

00:37:13,230 --> 00:37:17,070
get your act together yeah but normally

00:37:15,000 --> 00:37:18,960
that people are quite happy to delay

00:37:17,070 --> 00:37:20,520
because if particularly for the

00:37:18,960 --> 00:37:21,600
vulnerability is affecting more projects

00:37:20,520 --> 00:37:23,640
and that actually makes them look better

00:37:21,600 --> 00:37:25,050
they haven't found a small vulnerability

00:37:23,640 --> 00:37:26,609
in one project they found a larger

00:37:25,050 --> 00:37:28,710
vulnerability that's affected a larger

00:37:26,609 --> 00:37:30,810
number of projects and that gives them

00:37:28,710 --> 00:37:32,940
sort of more kudos in the community as a

00:37:30,810 --> 00:37:36,510
whole but I'm from a security teams

00:37:32,940 --> 00:37:39,210
perspective we would expect if we

00:37:36,510 --> 00:37:42,240
forward a vulnerability report to either

00:37:39,210 --> 00:37:45,990
security list or a private list we would

00:37:42,240 --> 00:37:48,330
expect within 24 hours I dearly and

00:37:45,990 --> 00:37:49,950
certainly no longer than 48 to see a

00:37:48,330 --> 00:37:51,480
response go back to the reporter saying

00:37:49,950 --> 00:37:54,420
thank you very much we got your report

00:37:51,480 --> 00:37:57,060
we're looking into it we'll get back to

00:37:54,420 --> 00:37:59,070
you and I've got a sort of standard text

00:37:57,060 --> 00:38:00,630
that did I use for the Tomcat that you

00:37:59,070 --> 00:38:03,540
sort of said something along the lines

00:38:00,630 --> 00:38:06,060
of yeah please appreciate this is a

00:38:03,540 --> 00:38:08,160
project run by volunteers we you know we

00:38:06,060 --> 00:38:09,630
don't have infinite time it might takes

00:38:08,160 --> 00:38:11,190
a little longer than you expect to get

00:38:09,630 --> 00:38:13,410
back to you but we will get back to you

00:38:11,190 --> 00:38:15,600
yeah feel free to ping us if you haven't

00:38:13,410 --> 00:38:18,300
heard anything in a week or two weeks or

00:38:15,600 --> 00:38:21,960
or whatever it is and yeah I've never

00:38:18,300 --> 00:38:23,100
never had a problem with that had some

00:38:21,960 --> 00:38:26,609
other issues but i'll be talking about

00:38:23,100 --> 00:38:28,980
that in the next slot and just the final

00:38:26,609 --> 00:38:30,420
communications go because that's really

00:38:28,980 --> 00:38:32,369
one of the main things i want to cover

00:38:30,420 --> 00:38:34,080
is that you do need to communicate with

00:38:32,369 --> 00:38:36,390
the public you do need to communicate

00:38:34,080 --> 00:38:38,040
with your user base like we're talking

00:38:36,390 --> 00:38:40,020
about you know what is the support

00:38:38,040 --> 00:38:42,330
policy well one of the workarounds to

00:38:40,020 --> 00:38:44,550
this newly-discovered defect how is it

00:38:42,330 --> 00:38:45,720
going to impact me for you know when can

00:38:44,550 --> 00:38:47,490
you when you can you tell us some more

00:38:45,720 --> 00:38:49,230
and hopefully you communicate those

00:38:47,490 --> 00:38:51,510
things with your with your users and do

00:38:49,230 --> 00:38:53,430
so by publishing an advisory you know

00:38:51,510 --> 00:38:54,690
publish something that spells out this

00:38:53,430 --> 00:38:56,670
is what we did with this is what was

00:38:54,690 --> 00:38:58,920
wrong this is how you can work around it

00:38:56,670 --> 00:39:01,710
if you if it's possible and this is how

00:38:58,920 --> 00:39:04,290
this is the bug fix this is what code we

00:39:01,710 --> 00:39:07,020
actually changed to make to resolve the

00:39:04,290 --> 00:39:08,570
problem completely so let me just to

00:39:07,020 --> 00:39:09,900
give you an idea of the rest of the day

00:39:08,570 --> 00:39:10,800
what

00:39:09,900 --> 00:39:13,530
what we're going to do is we're going to

00:39:10,800 --> 00:39:15,690
move on to a tomcat specific we're going

00:39:13,530 --> 00:39:17,880
to use Tomcat as the example of here's

00:39:15,690 --> 00:39:19,980
how one project has interfaced with the

00:39:17,880 --> 00:39:22,650
security community here's what happened

00:39:19,980 --> 00:39:24,180
behind the scenes at tomcat and then at

00:39:22,650 --> 00:39:26,340
eleven-forty-five we're going to turn

00:39:24,180 --> 00:39:28,440
this into more of an open round table so

00:39:26,340 --> 00:39:31,590
that if you have some involvement with

00:39:28,440 --> 00:39:34,080
your project please come on and you know

00:39:31,590 --> 00:39:35,520
join bring back that and share that

00:39:34,080 --> 00:39:38,820
information with us and it's going to be

00:39:35,520 --> 00:39:40,860
just open round table dialog on security

00:39:38,820 --> 00:39:42,900
and what different projects are doing at

00:39:40,860 --> 00:39:45,450
the foundation so thank you all very

00:39:42,900 --> 00:39:48,180
much we'll give you all five minutes to

00:39:45,450 --> 00:39:50,330
take a stretch and rejoin in a few

00:39:48,180 --> 00:39:50,330

YouTube URL: https://www.youtube.com/watch?v=NMll5mjHAHI


