Title: Fast Feather 1 & 2
Publication date: 2013-10-17
Playlist: Apachecon NA 2013 - day 2
Description: 
	Nick Burch
ApacheCon NA 2013
Community Over Code
Captions: 
	00:00:00,000 --> 00:00:04,380
from university of color to a sri lanka

00:00:01,650 --> 00:00:05,730
i am going to introduce a stream with

00:00:04,380 --> 00:00:07,560
Jason Takes my traditional

00:00:05,730 --> 00:00:12,179
transformation mechanism which we can

00:00:07,560 --> 00:00:15,120
use to transform Jason to xml n which

00:00:12,179 --> 00:00:17,520
suru saw some basic problem when we come

00:00:15,120 --> 00:00:21,090
to the distance formation by internal

00:00:17,520 --> 00:00:22,949
transformation yes a-actually Jason no

00:00:21,090 --> 00:00:26,029
xml it's debatable protection industry

00:00:22,949 --> 00:00:29,609
which we need to use gears and no xml

00:00:26,029 --> 00:00:32,399
there are many advantages in JSON and

00:00:29,609 --> 00:00:35,100
XML or so but as you can see it's some

00:00:32,399 --> 00:00:38,660
sort of bios DSN going to win same leads

00:00:35,100 --> 00:00:41,850
that seems guess i'm going to be

00:00:38,660 --> 00:00:44,399
actually why we need the jason to xml

00:00:41,850 --> 00:00:46,260
transformation is a jason has become a

00:00:44,399 --> 00:00:50,070
very popular and useful for some use

00:00:46,260 --> 00:00:53,719
cases particularly browser and mobile

00:00:50,070 --> 00:00:58,949
client those the developers required

00:00:53,719 --> 00:01:02,399
require jsm to btown deliver to n 4 from

00:00:58,949 --> 00:01:04,379
services we are often use xml as they

00:01:02,399 --> 00:01:07,560
are back in size but back in data models

00:01:04,379 --> 00:01:09,720
so we need some kind of mechanism to

00:01:07,560 --> 00:01:13,770
call to the back in services we are

00:01:09,720 --> 00:01:16,740
which uses xml but we have we have we

00:01:13,770 --> 00:01:19,710
have a client that trans in using

00:01:16,740 --> 00:01:24,930
javascript web browsing web browser some

00:01:19,710 --> 00:01:29,360
sort of like thick it appear that there

00:01:24,930 --> 00:01:32,150
is a any obvious and simple formatting

00:01:29,360 --> 00:01:38,150
mapping for meeting between the format

00:01:32,150 --> 00:01:41,310
both format JSON and XML data internal

00:01:38,150 --> 00:01:44,460
interchange languages markup languages

00:01:41,310 --> 00:01:47,130
both Jason are lighted Jason

00:01:44,460 --> 00:01:53,070
light-weighted XML is well documented

00:01:47,130 --> 00:01:55,890
and really descriptive so the four in

00:01:53,070 --> 00:01:58,259
fact there should be a simple reversal

00:01:55,890 --> 00:02:03,030
asst two reversible useless

00:01:58,259 --> 00:02:06,030
transformation which means when so that

00:02:03,030 --> 00:02:08,899
given documenting either Jason no xml we

00:02:06,030 --> 00:02:12,280
transferred it to the other format and a

00:02:08,899 --> 00:02:17,290
bang we should end up with the identical

00:02:12,280 --> 00:02:19,240
identical message as see if you get the

00:02:17,290 --> 00:02:22,060
Jason message like that then we need to

00:02:19,240 --> 00:02:23,410
transfer me to the XML which is a as you

00:02:22,060 --> 00:02:29,739
can see ID is the attribute of the

00:02:23,410 --> 00:02:32,380
product so after that if however we if

00:02:29,739 --> 00:02:35,590
he could have managed to transform that

00:02:32,380 --> 00:02:38,920
Jason to this XML and we if we need to

00:02:35,590 --> 00:02:41,590
transfer it back to the JSON format how

00:02:38,920 --> 00:02:45,130
we figure it out it's the ideal so the

00:02:41,590 --> 00:02:50,230
value of ID is a integer oh whatever it

00:02:45,130 --> 00:02:52,750
is and the price is also a string XML

00:02:50,230 --> 00:02:55,060
format but the original Jason message it

00:02:52,750 --> 00:02:58,180
is say integer as Jason supports several

00:02:55,060 --> 00:03:02,220
message for my data types numeric string

00:02:58,180 --> 00:03:04,810
null boolean but only XML has strings

00:03:02,220 --> 00:03:07,600
there are so many existing solution

00:03:04,810 --> 00:03:10,060
which developed to solve this problem

00:03:07,600 --> 00:03:12,390
and Jason Lee they are using some sort

00:03:10,060 --> 00:03:15,400
of they are only specific format to

00:03:12,390 --> 00:03:17,950
Colonel Jason to xml so they are using

00:03:15,400 --> 00:03:20,410
class object which is refer this

00:03:17,950 --> 00:03:23,650
suggests an object and the type string

00:03:20,410 --> 00:03:27,070
which is identified jason then jason is

00:03:23,650 --> 00:03:29,200
the string type and the boolean throw is

00:03:27,070 --> 00:03:31,480
a boolean type so they are using their

00:03:29,200 --> 00:03:34,380
own specific format so this is not

00:03:31,480 --> 00:03:37,480
generic generic way token if we want

00:03:34,380 --> 00:03:40,690
genetic way to an adjacent to XM it so

00:03:37,480 --> 00:03:43,269
we need some sort of like this this type

00:03:40,690 --> 00:03:45,609
of this type of message instead of this

00:03:43,269 --> 00:03:50,380
type of several attributes type staying

00:03:45,609 --> 00:03:54,730
boliyan so so like that in jettison also

00:03:50,380 --> 00:03:58,239
use some to conventions badge official

00:03:54,730 --> 00:04:00,400
condition any pet convention rehab Jason

00:03:58,239 --> 00:04:03,760
what this is it get the JSON string and

00:04:00,400 --> 00:04:06,910
build up the Builder stack you are using

00:04:03,760 --> 00:04:09,579
that string and after that they insider

00:04:06,910 --> 00:04:12,370
is right the XML string so it's

00:04:09,579 --> 00:04:14,440
basically get the just ring and builds a

00:04:12,370 --> 00:04:16,750
spec and ride it back to first XML

00:04:14,440 --> 00:04:19,390
string some kind of performance for

00:04:16,750 --> 00:04:21,940
performance issue is that we get this to

00:04:19,390 --> 00:04:25,930
input stream and read it and write it to

00:04:21,940 --> 00:04:29,620
the XM mystery a xml spring so

00:04:25,930 --> 00:04:31,270
the basic issue is how we in same Jason

00:04:29,620 --> 00:04:33,250
to xml transformation how we identified

00:04:31,270 --> 00:04:36,400
say the aegis attributes oh it's the

00:04:33,250 --> 00:04:38,350
element and the namespace xml have

00:04:36,400 --> 00:04:42,910
concept car Lane spaces but Jason

00:04:38,350 --> 00:04:45,910
doesn't support namespaces and the other

00:04:42,910 --> 00:04:48,520
way around example 2 j cell with the

00:04:45,910 --> 00:04:52,060
most applications you identify whether

00:04:48,520 --> 00:04:54,759
it is a JSON object or JSON array I see

00:04:52,060 --> 00:04:58,300
in that there is a simple sibling there

00:04:54,759 --> 00:05:00,340
is more than one sibling tags if you can

00:04:58,300 --> 00:05:03,310
see there you can see that there is a to

00:05:00,340 --> 00:05:07,000
tag seen one level they then it Irene

00:05:03,310 --> 00:05:11,500
father is a Jason array but if we get

00:05:07,000 --> 00:05:13,090
the one tag it should be winner if we

00:05:11,500 --> 00:05:16,479
transfer to the jason it should be a

00:05:13,090 --> 00:05:18,520
jason area so it can't identify so it

00:05:16,479 --> 00:05:21,430
basically what this is it mapped to the

00:05:18,520 --> 00:05:26,320
JSON object so there we end up with the

00:05:21,430 --> 00:05:28,840
90 integral Jason messages this is

00:05:26,320 --> 00:05:32,400
approach we are in we figure it out when

00:05:28,840 --> 00:05:37,229
i when i do my GC projects to improve

00:05:32,400 --> 00:05:40,630
the jason support in apache axis2 well

00:05:37,229 --> 00:05:45,130
this is we use xml schema as we assume

00:05:40,630 --> 00:05:47,560
that every xml message have every xml

00:05:45,130 --> 00:05:50,139
message has they own xml schema which

00:05:47,560 --> 00:05:53,740
describe the structure of the xml so we

00:05:50,139 --> 00:05:56,169
use in that assumption we use xml schema

00:05:53,740 --> 00:05:58,509
to identify the XML structure of the

00:05:56,169 --> 00:06:01,630
message there are so many details in the

00:05:58,509 --> 00:06:03,880
xml schema but we only need few of them

00:06:01,630 --> 00:06:05,680
to identify the rate it is a JSON object

00:06:03,880 --> 00:06:10,530
this is jason array it's a boolean type

00:06:05,680 --> 00:06:13,330
it's a numeric oh it's a string so we

00:06:10,530 --> 00:06:15,849
get in that xml schema we will we'll

00:06:13,330 --> 00:06:19,030
build a intermediate ii structure

00:06:15,849 --> 00:06:21,370
because it's a normal xml schema is he

00:06:19,030 --> 00:06:24,570
which document if we try to get e to the

00:06:21,370 --> 00:06:32,099
memory it get use a lot of memory now

00:06:24,570 --> 00:06:32,099
our machines so we figure it out sorry

00:06:32,910 --> 00:06:39,610
we need to without loading whole schema

00:06:36,760 --> 00:06:43,000
into the memory we build a lightweight

00:06:39,610 --> 00:06:46,720
restructure we what we need is is the

00:06:43,000 --> 00:06:51,150
name of the element and the is there is

00:06:46,720 --> 00:06:55,900
a tribute or not they say array or not

00:06:51,150 --> 00:06:58,300
the type of the value and then in space

00:06:55,900 --> 00:07:01,570
you are right so we get these details

00:06:58,300 --> 00:07:04,000
and the XML the childless means it is a

00:07:01,570 --> 00:07:07,120
complex type that then they are maybe a

00:07:04,000 --> 00:07:10,240
child elements also so we need to keep

00:07:07,120 --> 00:07:14,530
track of the structure of the HTML using

00:07:10,240 --> 00:07:16,360
this intermediate destructive how we how

00:07:14,530 --> 00:07:21,210
we identify yourself there it says array

00:07:16,360 --> 00:07:25,330
or notice we look at these the Mexica

00:07:21,210 --> 00:07:28,450
value if it is a see if it is a one it

00:07:25,330 --> 00:07:31,960
is not a array so if it is unbounded Oh

00:07:28,450 --> 00:07:33,250
more than one it should be array so we

00:07:31,960 --> 00:07:35,950
have heard that's how we identify

00:07:33,250 --> 00:07:39,160
whether it's a JSON array 0 node and the

00:07:35,950 --> 00:07:43,030
type you can see the excess xq modifying

00:07:39,160 --> 00:07:45,760
the strain in and the object a stock is

00:07:43,030 --> 00:07:48,640
top deck so we can clearly identify

00:07:45,760 --> 00:07:53,380
whether it is a boolean type or integer

00:07:48,640 --> 00:07:57,940
numeric type or string type so without

00:07:53,380 --> 00:07:59,410
at as jettison also does this we we come

00:07:57,940 --> 00:08:01,630
up with some sort of solution that we

00:07:59,410 --> 00:08:05,650
need does not need to convert jason to

00:08:01,630 --> 00:08:08,890
xml actually directly we don't want to

00:08:05,650 --> 00:08:11,350
convert jason to xml instead we wrap

00:08:08,890 --> 00:08:14,500
Jason inputstream using XML streamreader

00:08:11,350 --> 00:08:16,930
when when the sabacc in size required

00:08:14,500 --> 00:08:18,910
the xml enforce a then we read the jason

00:08:16,930 --> 00:08:22,060
input stream and provide it to the back

00:08:18,910 --> 00:08:24,910
in seven without converting fully jason

00:08:22,060 --> 00:08:29,440
input stream to the xml string i will

00:08:24,910 --> 00:08:32,380
explain how we were willed up that

00:08:29,440 --> 00:08:34,930
scenario we are in this if we get this

00:08:32,380 --> 00:08:37,630
jason message we are in this taste

00:08:34,930 --> 00:08:41,470
artistic the other the input stream is

00:08:37,630 --> 00:08:44,980
biggie biggie when

00:08:41,470 --> 00:08:47,890
when the back in size call the next then

00:08:44,980 --> 00:08:50,590
it read up to the that pipe red red red

00:08:47,890 --> 00:08:54,010
light come to that phone I know early

00:08:50,590 --> 00:08:56,980
because we need only the element name of

00:08:54,010 --> 00:08:59,910
the element we provide it if we need

00:08:56,980 --> 00:09:03,520
task so like the likewise we are

00:08:59,910 --> 00:09:08,830
traveling through the Xen stream we need

00:09:03,520 --> 00:09:11,890
require so you can see that we are not

00:09:08,830 --> 00:09:14,440
actually convert to the XML but we are

00:09:11,890 --> 00:09:21,190
providing XML infoset while reading the

00:09:14,440 --> 00:09:24,370
Jason inputstream further as Jason

00:09:21,190 --> 00:09:27,160
passer we use DSN google Jason stream

00:09:24,370 --> 00:09:30,190
API and we are providing XML read and

00:09:27,160 --> 00:09:32,230
write Java standard API never convert

00:09:30,190 --> 00:09:34,950
Jason two adjacent to ingest an input

00:09:32,230 --> 00:09:37,690
stream to the XML strings directly

00:09:34,950 --> 00:09:40,180
provide XML interested one fly while

00:09:37,690 --> 00:09:43,900
convert radiant adjacent input stream

00:09:40,180 --> 00:09:45,550
under we are you same as the reason we

00:09:43,900 --> 00:09:49,720
are using the stacks implementations

00:09:45,550 --> 00:09:52,240
where we put the put our to identify

00:09:49,720 --> 00:09:54,370
this talked of the XML we put the we

00:09:52,240 --> 00:09:58,420
come up with the stack implementation

00:09:54,370 --> 00:10:01,600
which something like this thing for the

00:09:58,420 --> 00:10:04,440
net message it's get filled up with the

00:10:01,600 --> 00:10:09,880
product and it's put into the ID and get

00:10:04,440 --> 00:10:15,160
ID back and get name then I again get

00:10:09,880 --> 00:10:18,900
name back so when so forth this is the

00:10:15,160 --> 00:10:22,990
how we you cannot XML to Jason the

00:10:18,900 --> 00:10:25,840
answer I can say as I can said we use

00:10:22,990 --> 00:10:29,820
that max occur value to identify they

00:10:25,840 --> 00:10:32,950
suggest an array object so we using that

00:10:29,820 --> 00:10:35,380
we are we need to come right start

00:10:32,950 --> 00:10:38,680
element product we write it to the ESN

00:10:35,380 --> 00:10:41,370
is output stream we are using google

00:10:38,680 --> 00:10:41,370
extreme api

00:10:41,950 --> 00:10:45,780
this is how its work

00:10:52,120 --> 00:10:59,389
well I actually did some performance

00:10:55,250 --> 00:11:01,759
tests with the ADB which is which is you

00:10:59,389 --> 00:11:05,360
know the good high performance their

00:11:01,759 --> 00:11:07,910
data binding framework in industry so an

00:11:05,360 --> 00:11:09,860
access to their they are wound data

00:11:07,910 --> 00:11:12,470
binding framework and we have good

00:11:09,860 --> 00:11:18,980
numbers with this extreme basic semjason

00:11:12,470 --> 00:11:21,829
to xml support so it actually we were

00:11:18,980 --> 00:11:23,300
figuring out it's because the size of

00:11:21,829 --> 00:11:26,889
the data Travon through the network or

00:11:23,300 --> 00:11:29,839
the the process given process gear

00:11:26,889 --> 00:11:31,730
happen in the side adjacent extreme so

00:11:29,839 --> 00:11:34,310
we need to do this some performative

00:11:31,730 --> 00:11:36,889
move for volunteers to identify the what

00:11:34,310 --> 00:11:41,630
are we which area we get in high

00:11:36,889 --> 00:11:43,579
performance so actually this is a common

00:11:41,630 --> 00:11:45,680
scenario not only to access to its a

00:11:43,579 --> 00:11:49,329
patchy camel also using yet Jason liebe

00:11:45,680 --> 00:11:51,920
a passive in causing jettison so we can

00:11:49,329 --> 00:11:56,529
use this implementation to improve the

00:11:51,920 --> 00:11:56,529
performance of those projects also oh

00:11:56,920 --> 00:12:04,149
thank you equations

00:12:06,259 --> 00:12:08,859
huh

00:12:21,629 --> 00:12:27,269
actually we can use content type the

00:12:24,149 --> 00:12:30,999
content-type header with a the

00:12:27,269 --> 00:12:47,409
application Jason no so the identified

00:12:30,999 --> 00:12:50,679
eight sides when the trees on fire is

00:12:47,409 --> 00:12:53,919
not well formed because we're well there

00:12:50,679 --> 00:12:58,139
is an unknown tag or anything like this

00:12:53,919 --> 00:13:03,209
how do you handle this kind of yours uh

00:12:58,139 --> 00:13:03,209
actually I think you're asking if it is

00:13:04,559 --> 00:13:11,319
in here you asking whether we need to

00:13:07,419 --> 00:13:14,619
send the name yes it is name indicates a

00:13:11,319 --> 00:13:17,439
message yeah yeah yeah yeah we are

00:13:14,619 --> 00:13:21,429
figuring we are using that name store in

00:13:17,439 --> 00:13:23,559
fact it's the ID do named so SE schema

00:13:21,429 --> 00:13:25,569
is available known to everybody the

00:13:23,559 --> 00:13:27,879
client also i can use in that schema

00:13:25,569 --> 00:13:30,329
build up the json string and send it

00:13:27,879 --> 00:13:30,329
through the way

00:13:36,030 --> 00:13:43,030
Harry would you deal with the situation

00:13:38,890 --> 00:13:48,310
where access is on a way behind version

00:13:43,030 --> 00:13:49,630
of XML schema and other libraries xml

00:13:48,310 --> 00:13:50,710
schema is the big one if you're using

00:13:49,630 --> 00:13:53,320
its muskie met and we also don't have

00:13:50,710 --> 00:13:56,770
dependencies on things like Acxiom is

00:13:53,320 --> 00:13:58,120
that something that you're is it things

00:13:56,770 --> 00:14:03,910
abstract enough that that would actually

00:13:58,120 --> 00:14:10,710
work or to do you have to research the

00:14:03,910 --> 00:14:10,710
more okay oh yeah okay thanks thank you

00:14:11,850 --> 00:14:20,290
that's all the time I had for shamira

00:14:14,260 --> 00:14:22,840
everybody but John next we have Jeff

00:14:20,290 --> 00:14:25,560
pots with one API to rule all content

00:14:22,840 --> 00:14:25,560
management systems

00:14:54,529 --> 00:14:56,589
Oh

00:15:05,080 --> 00:15:13,290
okay hello I'm Jeff I work for alfresco

00:15:08,680 --> 00:15:15,820
and I'm on the Apache chemistry pmc and

00:15:13,290 --> 00:15:18,520
today I want to talk a little bit about

00:15:15,820 --> 00:15:21,630
CM is just to give you who's already

00:15:18,520 --> 00:15:24,970
familiar with CM is as a standard so

00:15:21,630 --> 00:15:26,830
yeah three or four people okay so so

00:15:24,970 --> 00:15:30,490
just give a brief overview about what CM

00:15:26,830 --> 00:15:32,800
is is and what Apache chemistry is and

00:15:30,490 --> 00:15:35,740
then talk about a couple of things that

00:15:32,800 --> 00:15:39,540
are coming in cm is one dot one and then

00:15:35,740 --> 00:15:39,540
maybe we'll do a little bit of a demo

00:15:42,960 --> 00:15:49,060
okay so cm is stands for content

00:15:46,720 --> 00:15:51,640
management interoperability services and

00:15:49,060 --> 00:15:54,930
it's a vendor independent API for

00:15:51,640 --> 00:16:00,510
working with content repositories like

00:15:54,930 --> 00:16:04,450
alfresco documentum nuxeo you know rich

00:16:00,510 --> 00:16:07,950
content repositories basically the spec

00:16:04,450 --> 00:16:11,980
the cmas spec is managed by Oasis and

00:16:07,950 --> 00:16:13,750
you can the way that you talk to a CMAs

00:16:11,980 --> 00:16:17,380
server is through one of the bindings

00:16:13,750 --> 00:16:20,470
that's available and in CMAs 10 there's

00:16:17,380 --> 00:16:22,210
a web services binding and an atom pub

00:16:20,470 --> 00:16:26,080
binding or the two choices that you have

00:16:22,210 --> 00:16:29,620
there but CMAs one dot one has just been

00:16:26,080 --> 00:16:31,960
made a committee draft and it adds a

00:16:29,620 --> 00:16:34,990
third binding which is a browser binding

00:16:31,960 --> 00:16:38,470
which is based on JSON so that's coming

00:16:34,990 --> 00:16:40,810
in in in one dot one then in addition to

00:16:38,470 --> 00:16:43,150
the bindings there's a query language

00:16:40,810 --> 00:16:47,410
that's sort of sequel like so you can

00:16:43,150 --> 00:16:48,430
use a common query language to query for

00:16:47,410 --> 00:16:49,870
objects that are stored in these

00:16:48,430 --> 00:16:54,880
repositories which is kind of a cool

00:16:49,870 --> 00:16:57,220
thing because prior to CMAs there was no

00:16:54,880 --> 00:17:02,050
standard way of interacting with

00:16:57,220 --> 00:17:04,630
documentum filenet alfresco etc everyone

00:17:02,050 --> 00:17:09,010
had their own API is in their own query

00:17:04,630 --> 00:17:11,020
language so that's the graphics aren't

00:17:09,010 --> 00:17:14,500
really showing up on this screen but

00:17:11,020 --> 00:17:16,810
that's the beauty of CM is is that you

00:17:14,500 --> 00:17:18,260
know most big enterprises today have at

00:17:16,810 --> 00:17:20,360
least two three

00:17:18,260 --> 00:17:24,410
you sometimes more content repositories

00:17:20,360 --> 00:17:26,360
SharePoint documentum filenet etc and so

00:17:24,410 --> 00:17:28,580
when you go in and you write an app on

00:17:26,360 --> 00:17:31,430
top of one of these repositories a lot

00:17:28,580 --> 00:17:33,110
of times you're sort of restricted in

00:17:31,430 --> 00:17:35,090
what kind of app you can write because

00:17:33,110 --> 00:17:37,610
there's a certain API that those

00:17:35,090 --> 00:17:42,110
repositories use and so seen this gives

00:17:37,610 --> 00:17:43,580
you a way to just use rest restful calls

00:17:42,110 --> 00:17:47,420
against these repositories and it's the

00:17:43,580 --> 00:17:49,130
same same API across all that all the

00:17:47,420 --> 00:17:50,840
different vendors so you can use

00:17:49,130 --> 00:17:53,450
whatever framework or presentation

00:17:50,840 --> 00:17:55,940
whatever presentation tier programming

00:17:53,450 --> 00:17:58,940
language you want to use and you can

00:17:55,940 --> 00:18:02,840
still get content into and out of these

00:17:58,940 --> 00:18:04,910
repositories so basically you you're

00:18:02,840 --> 00:18:09,610
going to write a client it's going to do

00:18:04,910 --> 00:18:11,780
read rights against the repository and

00:18:09,610 --> 00:18:14,840
CMAs is going to be sitting there on the

00:18:11,780 --> 00:18:18,290
client and often also on the server

00:18:14,840 --> 00:18:24,500
mapping those calls back to the back to

00:18:18,290 --> 00:18:26,480
this specific vendor in cm is the the

00:18:24,500 --> 00:18:29,930
specification defined some domain

00:18:26,480 --> 00:18:34,040
objects so these objects are things like

00:18:29,930 --> 00:18:38,300
documents folders relationships policies

00:18:34,040 --> 00:18:39,620
and type definitions so if you've ever

00:18:38,300 --> 00:18:41,570
worked with a content management or a

00:18:39,620 --> 00:18:43,340
document management system before then

00:18:41,570 --> 00:18:44,890
the concept of what a document in a

00:18:43,340 --> 00:18:50,840
folder is and things like that is

00:18:44,890 --> 00:18:54,080
probably you know makes sense to you so

00:18:50,840 --> 00:18:56,120
but the spec actually sets these forth

00:18:54,080 --> 00:19:01,580
formally and just and defines exactly

00:18:56,120 --> 00:19:04,240
what those what those things are there's

00:19:01,580 --> 00:19:07,570
a lot of different vendor support for

00:19:04,240 --> 00:19:10,280
four seam is now apache chemistry is the

00:19:07,570 --> 00:19:14,240
reference implementation for four cm is

00:19:10,280 --> 00:19:16,970
and chemistry is an umbrella project for

00:19:14,240 --> 00:19:20,450
all of the cmas related projects that

00:19:16,970 --> 00:19:23,320
exist so there's open cmas which is by

00:19:20,450 --> 00:19:26,420
far the kind of most commonly used

00:19:23,320 --> 00:19:29,660
sub-project of apache chemistry and it's

00:19:26,420 --> 00:19:31,120
the java based client library as well as

00:19:29,660 --> 00:19:33,550
a server side

00:19:31,120 --> 00:19:36,610
set of libraries so that if you wanted

00:19:33,550 --> 00:19:38,080
to implement your own if you if you had

00:19:36,610 --> 00:19:40,570
a repository that you had written and

00:19:38,080 --> 00:19:43,059
you wanted to you wanted it to be a CMAs

00:19:40,570 --> 00:19:47,050
server you could use the server-side

00:19:43,059 --> 00:19:49,270
classes to do that then there's CMAs

00:19:47,050 --> 00:19:51,910
live which is a Python client that's

00:19:49,270 --> 00:19:55,809
what I maintained then there's also a

00:19:51,910 --> 00:19:58,120
PHP client dot seem dot seem is which is

00:19:55,809 --> 00:20:02,880
a.net client and then recently we've

00:19:58,120 --> 00:20:06,610
added objective cmas which is for iOS

00:20:02,880 --> 00:20:08,350
clients and Android Open CMAs so for

00:20:06,610 --> 00:20:12,760
people that are doing mobile apps on top

00:20:08,350 --> 00:20:17,220
of Android they can use CMAs to to get

00:20:12,760 --> 00:20:17,220
that content out to those mobile devices

00:20:17,280 --> 00:20:23,200
now there's some new stuff coming in one

00:20:20,500 --> 00:20:25,420
dot one that's pretty cool first is the

00:20:23,200 --> 00:20:29,010
browser binding which I mentioned

00:20:25,420 --> 00:20:32,140
earlier so the browser binding is JSON

00:20:29,010 --> 00:20:36,220
it's actually HTML forms going to the

00:20:32,140 --> 00:20:38,590
server and JSON coming back so this is

00:20:36,220 --> 00:20:41,620
nice because the atom pub binding is

00:20:38,590 --> 00:20:44,380
pretty verbose so it's moving a lot of

00:20:41,620 --> 00:20:47,350
XML back and forth so there should be

00:20:44,380 --> 00:20:49,929
some performance increases that we can

00:20:47,350 --> 00:20:54,070
get when we switch over to use the

00:20:49,929 --> 00:20:55,480
browser binding incidentally a server in

00:20:54,070 --> 00:20:58,120
order for it to be seamless compliant

00:20:55,480 --> 00:21:00,400
has to be has to implement all the

00:20:58,120 --> 00:21:04,120
bindings that are set forth by the spec

00:21:00,400 --> 00:21:05,429
so that means for a server to say that

00:21:04,120 --> 00:21:08,350
there seem as compliant they have to

00:21:05,429 --> 00:21:10,179
comply with or offer up both the web

00:21:08,350 --> 00:21:11,710
services binding and the atom pub

00:21:10,179 --> 00:21:15,309
binding and then with one dot one

00:21:11,710 --> 00:21:17,710
they'll also have to offer a browser

00:21:15,309 --> 00:21:20,679
binding so that means that the decision

00:21:17,710 --> 00:21:22,690
on which binding to use to connect to

00:21:20,679 --> 00:21:26,320
the server is completely up to you as a

00:21:22,690 --> 00:21:28,480
developer the next thing that's coming

00:21:26,320 --> 00:21:32,800
in one dot one which i think is cool is

00:21:28,480 --> 00:21:37,809
support for aspects the spec calls these

00:21:32,800 --> 00:21:40,960
secondary types and in in alfresco we

00:21:37,809 --> 00:21:43,420
call those aspects which is just a way

00:21:40,960 --> 00:21:44,169
of taking a collection of properties and

00:21:43,420 --> 00:21:46,480
sort of

00:21:44,169 --> 00:21:48,279
dropping them on to an object that

00:21:46,480 --> 00:21:51,129
collection of properties is called a

00:21:48,279 --> 00:21:54,899
secondary type so for a lot of people

00:21:51,129 --> 00:21:58,090
who use CMAs to talk to al fresco

00:21:54,899 --> 00:21:59,499
secondary type support is as important

00:21:58,090 --> 00:22:02,379
and as someone who works for alfresco

00:21:59,499 --> 00:22:05,320
I'm excited about that one the next one

00:22:02,379 --> 00:22:09,850
is really cool is tight mutability so

00:22:05,320 --> 00:22:11,830
today in CMAs 10 when you you know every

00:22:09,850 --> 00:22:16,480
type definition that's in the repository

00:22:11,830 --> 00:22:19,539
is has to be known by the repository

00:22:16,480 --> 00:22:23,919
beforehand so CMAs 10 has no way of

00:22:19,539 --> 00:22:26,080
knowing how to create new types in the

00:22:23,919 --> 00:22:31,210
in the repository new type definitions

00:22:26,080 --> 00:22:34,379
so now with one dot one as a developer

00:22:31,210 --> 00:22:37,509
you could actually through the API

00:22:34,379 --> 00:22:39,789
create brand new types so this is nice

00:22:37,509 --> 00:22:42,190
because that means you're your end users

00:22:39,789 --> 00:22:46,499
who if you write a solution that's based

00:22:42,190 --> 00:22:51,190
on CMAs with 10 you'd have to give them

00:22:46,499 --> 00:22:53,529
a set of type definitions in whatever

00:22:51,190 --> 00:22:54,820
that native repository understood and

00:22:53,529 --> 00:22:57,730
they'd have to go install that and

00:22:54,820 --> 00:23:00,429
configure that and with one dot one you

00:22:57,730 --> 00:23:02,470
should be able to inspect the repository

00:23:00,429 --> 00:23:03,999
see if the types that you need are there

00:23:02,470 --> 00:23:06,220
and if they're not there you should be

00:23:03,999 --> 00:23:10,480
able to create those new those new types

00:23:06,220 --> 00:23:12,249
through the API so that's tight

00:23:10,480 --> 00:23:14,759
mutability and then the next thing

00:23:12,249 --> 00:23:20,609
that's coming in one dot one is called

00:23:14,759 --> 00:23:24,700
CMAs item and a CMAs item is just a new

00:23:20,609 --> 00:23:26,830
new base level type which is just an

00:23:24,700 --> 00:23:29,460
object that doesn't have a file so

00:23:26,830 --> 00:23:31,899
usually in a document management system

00:23:29,460 --> 00:23:34,509
we're almost always talking about files

00:23:31,899 --> 00:23:36,159
so there's an object there's a file and

00:23:34,509 --> 00:23:38,619
as a developer when you ask for the

00:23:36,159 --> 00:23:39,970
object you're going to get the object

00:23:38,619 --> 00:23:41,590
back and then if you want the content

00:23:39,970 --> 00:23:44,379
stream of that object you just ask for

00:23:41,590 --> 00:23:47,409
the content stream but a lot of times

00:23:44,379 --> 00:23:50,559
you need a way of just keeping track of

00:23:47,409 --> 00:23:53,169
arbitrary objects in the repository that

00:23:50,559 --> 00:23:56,289
may not necessarily be associated with a

00:23:53,169 --> 00:23:57,090
binary file and so that's where CMAs

00:23:56,289 --> 00:23:59,259
item comes in

00:23:57,090 --> 00:24:02,620
there are a couple other things that are

00:23:59,259 --> 00:24:05,409
new and one dot one but these are these

00:24:02,620 --> 00:24:08,399
are the top items probably coming in one

00:24:05,409 --> 00:24:12,100
dot one so again one dot one is in

00:24:08,399 --> 00:24:16,090
committee draft I think is the official

00:24:12,100 --> 00:24:18,519
status of that and at oasis and we're

00:24:16,090 --> 00:24:21,070
just now in Apache chemistry starting to

00:24:18,519 --> 00:24:27,580
get some of these features into the

00:24:21,070 --> 00:24:30,820
build so if you let me flip over to the

00:24:27,580 --> 00:24:32,679
cmas workbench so if you're doing

00:24:30,820 --> 00:24:37,570
anything let me see if I can make this

00:24:32,679 --> 00:24:40,299
easier to look at if you're doing

00:24:37,570 --> 00:24:43,149
anything with CM is it might make sense

00:24:40,299 --> 00:24:46,289
for you to to start playing around with

00:24:43,149 --> 00:24:49,090
it by using the open cmas workbench and

00:24:46,289 --> 00:24:53,500
that's what I'm running here and let me

00:24:49,090 --> 00:24:56,649
just start from a connection here so I'm

00:24:53,500 --> 00:24:58,240
going to connect to the to the server i

00:24:56,649 --> 00:25:01,600
have two cmas servers running on my

00:24:58,240 --> 00:25:06,909
laptop right now i have al fresco and i

00:25:01,600 --> 00:25:08,470
have the open cmas in memory serves cmas

00:25:06,909 --> 00:25:11,620
server which is really there just for

00:25:08,470 --> 00:25:14,500
development purposes and so just to show

00:25:11,620 --> 00:25:17,289
you how this works all you need to know

00:25:14,500 --> 00:25:20,009
in order to connect to a SEMA server is

00:25:17,289 --> 00:25:24,070
its endpoint URL and then everything

00:25:20,009 --> 00:25:26,940
from there the client figures out so for

00:25:24,070 --> 00:25:30,190
chemistry the atom pub in point is

00:25:26,940 --> 00:25:33,399
whatever your web app context is / adem

00:25:30,190 --> 00:25:36,490
so I'm going to select my Adam pub

00:25:33,399 --> 00:25:39,000
binding here and load the repositories

00:25:36,490 --> 00:25:42,730
so a given server may have one or more

00:25:39,000 --> 00:25:45,519
repositories so I will load up this

00:25:42,730 --> 00:25:47,500
repository and now i can now i'm sitting

00:25:45,519 --> 00:25:51,700
in the root of my repository so a

00:25:47,500 --> 00:25:55,029
repository is like a hierarchical set of

00:25:51,700 --> 00:25:58,659
folders and objects and and so now i can

00:25:55,029 --> 00:26:00,850
click in this folder and maybe i want to

00:25:58,659 --> 00:26:02,590
create an object so i'll create an

00:26:00,850 --> 00:26:07,830
object and let's put a document in this

00:26:02,590 --> 00:26:15,970
folder so let's see let's go find

00:26:07,830 --> 00:26:18,909
document real quick so we'll put this

00:26:15,970 --> 00:26:22,900
full sail brewery screenshot in here and

00:26:18,909 --> 00:26:24,909
hit create document now the document is

00:26:22,900 --> 00:26:27,669
sitting in a folder called cmas libe and

00:26:24,909 --> 00:26:29,020
if i look at the properties i can i can

00:26:27,669 --> 00:26:32,679
see all the properties of that object

00:26:29,020 --> 00:26:37,360
and in this case the workbench is using

00:26:32,679 --> 00:26:38,830
tika to extract some metadata this

00:26:37,360 --> 00:26:42,700
happens to be a JPEG so it extracted

00:26:38,830 --> 00:26:48,340
some metadata off of that and and stored

00:26:42,700 --> 00:26:51,370
it on the object here oh yeah it's cuz i

00:26:48,340 --> 00:26:53,919
was i missed the drop down when i when i

00:26:51,370 --> 00:26:57,039
created it so the default is audio file

00:26:53,919 --> 00:26:58,480
so that's a type that so you know when

00:26:57,039 --> 00:27:00,039
you create a type you can select any

00:26:58,480 --> 00:27:01,480
type you want to so I could have told

00:27:00,039 --> 00:27:09,720
that that was an email document it would

00:27:01,480 --> 00:27:13,929
have still worked so yep so good catch

00:27:09,720 --> 00:27:16,780
so that's the workbench now using this

00:27:13,929 --> 00:27:19,360
exact same set of api's I could connect

00:27:16,780 --> 00:27:22,330
to any server that is seen as compliant

00:27:19,360 --> 00:27:24,940
that's the whole point right so if i if

00:27:22,330 --> 00:27:28,450
i change my URL and point to alfresco

00:27:24,940 --> 00:27:32,799
instead of chemistry's in memory server

00:27:28,450 --> 00:27:35,980
i can load the repositories here and now

00:27:32,799 --> 00:27:38,110
i'm looking at a repository from a

00:27:35,980 --> 00:27:40,750
completely different vendor and and i'm

00:27:38,110 --> 00:27:41,830
browsing that repository people that are

00:27:40,750 --> 00:27:44,559
used to working with relational

00:27:41,830 --> 00:27:46,900
databases are like wow big deal you know

00:27:44,559 --> 00:27:50,380
we've been able to do that for 25 years

00:27:46,900 --> 00:27:51,880
but but in the world of enterprise

00:27:50,380 --> 00:27:54,100
content management this is a big deal

00:27:51,880 --> 00:27:56,409
one you know now we're going to see an

00:27:54,100 --> 00:27:59,380
explosion of tools that are going to

00:27:56,409 --> 00:28:00,970
spring up and all around you know

00:27:59,380 --> 00:28:04,960
helping you work with content and these

00:28:00,970 --> 00:28:07,809
repositories through this API so anyway

00:28:04,960 --> 00:28:08,830
check it out chemistry Apache chemistry

00:28:07,809 --> 00:28:11,679
and

00:28:08,830 --> 00:28:16,539
I guess I have one minute maybe 44

00:28:11,679 --> 00:28:19,840
question maybe two minutes okay you have

00:28:16,539 --> 00:28:29,460
anyone have questions about history me

00:28:19,840 --> 00:28:32,019
other than the obvious why not yeah so

00:28:29,460 --> 00:28:33,429
you could totally build that there's no

00:28:32,019 --> 00:28:36,370
read there's no reason why you couldn't

00:28:33,429 --> 00:28:39,970
build that and that's but that's a i

00:28:36,370 --> 00:28:42,220
mean this is this is file you no folders

00:28:39,970 --> 00:28:45,340
and files you know this workbench here

00:28:42,220 --> 00:28:48,179
is just one sample UI for working with

00:28:45,340 --> 00:28:51,940
stuff in a repository but yeah you could

00:28:48,179 --> 00:28:54,970
you could do integration like that and

00:28:51,940 --> 00:28:56,440
then given that is it would it be price

00:28:54,970 --> 00:28:58,240
i'm very very pricing this maybe but is

00:28:56,440 --> 00:29:00,519
it kind of like with additional metadata

00:28:58,240 --> 00:29:02,380
yeah yeah that's not that's not a bad

00:29:00,519 --> 00:29:07,059
way to characterize it it's also similar

00:29:02,380 --> 00:29:14,940
in concept to jcr is another sort of

00:29:07,059 --> 00:29:14,940
roughly analogous concept yep

00:29:17,580 --> 00:29:26,769
yeah yeah very similar so an aspect is

00:29:22,240 --> 00:29:28,590
is similar in that so let's look at I

00:29:26,769 --> 00:29:34,139
don't have any examples in this

00:29:28,590 --> 00:29:36,399
particular repository I don't think but

00:29:34,139 --> 00:29:39,070
let's take that image as an example that

00:29:36,399 --> 00:29:40,539
I put in there earlier had a bunch of or

00:29:39,070 --> 00:29:44,679
let's say there was a latitude longitude

00:29:40,539 --> 00:29:46,210
on the on the image so the fact that the

00:29:44,679 --> 00:29:47,440
latitude longitude properties might be

00:29:46,210 --> 00:29:52,450
in an aspect that we might call

00:29:47,440 --> 00:29:54,490
Geographic or something and then any

00:29:52,450 --> 00:29:57,070
document that had latitude and longitude

00:29:54,490 --> 00:29:59,679
could have that aspect could be

00:29:57,070 --> 00:30:01,750
Geographic in nature so you could go

00:29:59,679 --> 00:30:03,789
into an object and say okay you you now

00:30:01,750 --> 00:30:05,799
get this set of properties that are that

00:30:03,789 --> 00:30:10,570
relates to being geographic so latitude

00:30:05,799 --> 00:30:13,960
line yeah at any time yeah you can also

00:30:10,570 --> 00:30:15,460
remove the aspect as well okay I think

00:30:13,960 --> 00:30:22,029
that's my time so if you have any other

00:30:15,460 --> 00:30:25,409
questions come find me later thanks you

00:30:22,029 --> 00:30:25,409
should keep your slogans on this splash

00:30:30,300 --> 00:30:33,810
continue on with this

00:30:57,680 --> 00:31:01,730
alright that seems to be working I'm

00:31:00,230 --> 00:31:05,090
Matt Benson I'm going to be talking

00:31:01,730 --> 00:31:07,910
about a new Commons sandbox component

00:31:05,090 --> 00:31:09,620
that has to do with the bike co weaving

00:31:07,910 --> 00:31:11,150
briefly I don't know well all these

00:31:09,620 --> 00:31:13,910
things that take it more time than I can

00:31:11,150 --> 00:31:15,460
I probably need to use up to go through

00:31:13,910 --> 00:31:18,410
them anyway we're talking about a new

00:31:15,460 --> 00:31:20,420
component that's under development I'm

00:31:18,410 --> 00:31:23,240
one of the principal developers of it

00:31:20,420 --> 00:31:26,450
called a weaver component in the sandbox

00:31:23,240 --> 00:31:28,040
for java bytecode post-processing what

00:31:26,450 --> 00:31:30,860
is Weaver provide with providing doesn't

00:31:28,040 --> 00:31:33,320
just SPI service provider interface for

00:31:30,860 --> 00:31:35,330
the basic concept of a weaver says what

00:31:33,320 --> 00:31:37,550
kinds of everything's annotation driven

00:31:35,330 --> 00:31:39,260
what kinds of annotations on what types

00:31:37,550 --> 00:31:41,210
of elements it's interested in receiving

00:31:39,260 --> 00:31:43,070
information about and then it gets

00:31:41,210 --> 00:31:45,710
invoked with the appropriate information

00:31:43,070 --> 00:31:47,600
we have them at what moral code is in

00:31:45,710 --> 00:31:49,970
vocal from a java api though it's really

00:31:47,600 --> 00:31:53,240
designed for a maven plugin and ant task

00:31:49,970 --> 00:31:56,360
that we provide the motivation that is

00:31:53,240 --> 00:31:57,860
actually came from the single

00:31:56,360 --> 00:31:59,960
implementation that we currently provide

00:31:57,860 --> 00:32:03,380
or that where that's under development

00:31:59,960 --> 00:32:05,410
called the privilege this was eventually

00:32:03,380 --> 00:32:08,480
abstracted out into a more broad

00:32:05,410 --> 00:32:10,640
bytecode weaving framework more or less

00:32:08,480 --> 00:32:12,340
but the original motivation had to do

00:32:10,640 --> 00:32:14,870
with java security manager privileges

00:32:12,340 --> 00:32:17,480
here's the naive version of the code

00:32:14,870 --> 00:32:19,520
that does something that requires some

00:32:17,480 --> 00:32:21,440
kind of privileges from the system well

00:32:19,520 --> 00:32:23,110
you know some sort of security manager

00:32:21,440 --> 00:32:25,370
privileged in this case rate of property

00:32:23,110 --> 00:32:26,660
that's the night version make you run

00:32:25,370 --> 00:32:27,860
that under a security manager without

00:32:26,660 --> 00:32:31,490
privileges enabled you're going to

00:32:27,860 --> 00:32:34,490
encounter any exceptions so the next

00:32:31,490 --> 00:32:36,260
step you get from there as you add the

00:32:34,490 --> 00:32:38,120
awareness of the security manager so

00:32:36,260 --> 00:32:41,990
that you do privileged to whatever

00:32:38,120 --> 00:32:44,050
you're trying to accomplish and you by

00:32:41,990 --> 00:32:45,980
wrapping this in a particular

00:32:44,050 --> 00:32:47,960
implementation of the privileged action

00:32:45,980 --> 00:32:49,250
in this case and passing it to access

00:32:47,960 --> 00:32:52,670
controller the problem with this is that

00:32:49,250 --> 00:32:54,320
the you know the additional direction of

00:32:52,670 --> 00:32:56,780
method calls and the additional

00:32:54,320 --> 00:32:58,010
construction of objects etc is heavier

00:32:56,780 --> 00:32:59,260
than it needs to be in the case that

00:32:58,010 --> 00:33:00,580
you're running under

00:32:59,260 --> 00:33:02,170
environment without the security manager

00:33:00,580 --> 00:33:04,840
enabled so the next thing that people

00:33:02,170 --> 00:33:07,060
usually go to from that point is to do

00:33:04,840 --> 00:33:09,070
these runtime checks of whether there's

00:33:07,060 --> 00:33:11,320
a security manager enabled and either do

00:33:09,070 --> 00:33:13,570
the access controller version of the

00:33:11,320 --> 00:33:15,040
same code or drop out to the night

00:33:13,570 --> 00:33:16,810
version of the code now we can see that

00:33:15,040 --> 00:33:18,610
our we already have duplication of code

00:33:16,810 --> 00:33:20,830
here and then when you multiply this by

00:33:18,610 --> 00:33:22,330
however many methods you're going to be

00:33:20,830 --> 00:33:23,650
writing throughout your code base they

00:33:22,330 --> 00:33:26,560
do this same thing you can see that that

00:33:23,650 --> 00:33:30,010
starts to get very cumbersome very

00:33:26,560 --> 00:33:31,420
quickly so that's kind of the motivation

00:33:30,010 --> 00:33:33,190
of the idea of the privileged other

00:33:31,420 --> 00:33:36,460
words you know we explored a few things

00:33:33,190 --> 00:33:39,880
obviously java 6 brought us annotation

00:33:36,460 --> 00:33:41,440
processing in the compiler with the sort

00:33:39,880 --> 00:33:43,360
of you know driven by the compiler that

00:33:41,440 --> 00:33:45,820
didn't seem to be adequate to the task

00:33:43,360 --> 00:33:48,910
and what we ended up with was

00:33:45,820 --> 00:33:52,170
microwaving so here's the the first

00:33:48,910 --> 00:33:55,440
concept that we had in the privilege

00:33:52,170 --> 00:33:58,240
weaver approach was that we would have

00:33:55,440 --> 00:33:59,920
private methods which do the well

00:33:58,240 --> 00:34:02,620
private methods is an implementation

00:33:59,920 --> 00:34:04,000
detail that's actually configurable but

00:34:02,620 --> 00:34:06,220
it would be recommended that you use

00:34:04,000 --> 00:34:07,560
things that have a private access

00:34:06,220 --> 00:34:10,800
because you don't want to just provide

00:34:07,560 --> 00:34:13,300
public access to calling things that

00:34:10,800 --> 00:34:15,250
require system properties and invoke the

00:34:13,300 --> 00:34:17,320
access controller but here's here's the

00:34:15,250 --> 00:34:19,570
canonical example of how we would do

00:34:17,320 --> 00:34:22,270
something in the basic approach to probe

00:34:19,570 --> 00:34:24,280
wiser we would annotate a given method

00:34:22,270 --> 00:34:27,520
as being privileged when we go through

00:34:24,280 --> 00:34:29,830
and post process this this actually

00:34:27,520 --> 00:34:31,570
expands down into our initial our

00:34:29,830 --> 00:34:34,210
original method is then replaced with

00:34:31,570 --> 00:34:36,550
that conditional code and then it's

00:34:34,210 --> 00:34:39,700
implemented by a hidden method more or

00:34:36,550 --> 00:34:43,600
less generated private method and a

00:34:39,700 --> 00:34:45,639
generative private inter-class in order

00:34:43,600 --> 00:34:48,460
to accomplish these things without and

00:34:45,639 --> 00:34:50,350
again that's what that's what your work

00:34:48,460 --> 00:34:51,879
would look like as a developer and this

00:34:50,350 --> 00:34:54,429
is what your the equivalent of the code

00:34:51,879 --> 00:34:55,870
that your class would then represent the

00:34:54,429 --> 00:34:58,360
problem with that of course is that if

00:34:55,870 --> 00:35:01,030
you have you know if you want to get foo

00:34:58,360 --> 00:35:03,520
from ten different classes you've got to

00:35:01,030 --> 00:35:05,590
create that same private method in all

00:35:03,520 --> 00:35:07,600
of them by doing it that way so the next

00:35:05,590 --> 00:35:09,010
and of course the beginning to that

00:35:07,600 --> 00:35:11,110
concept your first reaction as a

00:35:09,010 --> 00:35:11,660
developer is to do this and say okay I'm

00:35:11,110 --> 00:35:13,760
gonna have a pub

00:35:11,660 --> 00:35:17,059
utility class and I'm going to funk all

00:35:13,760 --> 00:35:19,010
this and do all that code there which of

00:35:17,059 --> 00:35:20,599
course is unsafe for the reasons we

00:35:19,010 --> 00:35:22,010
discuss now you've provided you've

00:35:20,599 --> 00:35:25,250
attempted to provide a public method

00:35:22,010 --> 00:35:28,359
that invokes on the security checks and

00:35:25,250 --> 00:35:31,039
thereby voids and you've secured any

00:35:28,359 --> 00:35:33,410
value that you get from specifying your

00:35:31,039 --> 00:35:36,670
security policy I keep up with what time

00:35:33,410 --> 00:35:40,910
I've got here you I'm pretty good so far

00:35:36,670 --> 00:35:44,450
so we came up with next and when I say

00:35:40,910 --> 00:35:46,549
we a colleague of mine in the Apache

00:35:44,450 --> 00:35:48,710
community really came up with this basic

00:35:46,549 --> 00:35:50,809
idea which is not bad revolutionary

00:35:48,710 --> 00:35:52,609
going back to the idea of having a utils

00:35:50,809 --> 00:35:55,520
class but in this case you're you chose

00:35:52,609 --> 00:35:57,349
class again is implemented naively with

00:35:55,520 --> 00:35:59,480
no awareness of the security manager and

00:35:57,349 --> 00:36:01,549
you would annotate the calling class

00:35:59,480 --> 00:36:06,319
such that any calls to utils are

00:36:01,549 --> 00:36:08,119
privileged that expands to and this is

00:36:06,319 --> 00:36:10,339
pretty small but the basic it's just as

00:36:08,119 --> 00:36:12,170
the same idea more or less except for

00:36:10,339 --> 00:36:14,359
the way that we would then use that

00:36:12,170 --> 00:36:16,279
utility code is we would actually copy

00:36:14,359 --> 00:36:19,970
it into a local private method which

00:36:16,279 --> 00:36:22,369
would be this would be the privileged

00:36:19,970 --> 00:36:24,349
version of that which finally does the

00:36:22,369 --> 00:36:28,010
naive call and again then when you get

00:36:24,349 --> 00:36:29,480
into the copied inversion we've now

00:36:28,010 --> 00:36:32,470
replaced it with the security manager

00:36:29,480 --> 00:36:36,380
checks and the corresponding action

00:36:32,470 --> 00:36:38,480
that's really the end of them but what

00:36:36,380 --> 00:36:41,059
you know what we what we decided was

00:36:38,480 --> 00:36:43,400
that by leaving this utils class here in

00:36:41,059 --> 00:36:45,549
this example completely naive that

00:36:43,400 --> 00:36:49,520
leaves it as safe as it can be because

00:36:45,549 --> 00:36:51,470
any caller who is able to to call that

00:36:49,520 --> 00:36:53,779
method obviously had the privileges to

00:36:51,470 --> 00:36:55,940
do so and and you don't and you're not

00:36:53,779 --> 00:36:58,339
exposing anything additional in the

00:36:55,940 --> 00:37:01,150
process of doing that so in the future

00:36:58,339 --> 00:37:03,589
and actually this this last bit with the

00:37:01,150 --> 00:37:06,230
blueprint privileges is what I've been

00:37:03,589 --> 00:37:08,960
working on this week as time permits and

00:37:06,230 --> 00:37:11,630
at the hackathon etc and this is almost

00:37:08,960 --> 00:37:14,059
complete it works all except for

00:37:11,630 --> 00:37:15,740
recursively called methods and as an

00:37:14,059 --> 00:37:17,859
implementation detail this is using java

00:37:15,740 --> 00:37:21,280
cysts which isn't necessarily the most

00:37:17,859 --> 00:37:22,990
robust bytecode processing tool but

00:37:21,280 --> 00:37:27,550
it does get the job done for the most

00:37:22,990 --> 00:37:29,500
part when that's complete the future we

00:37:27,550 --> 00:37:31,960
hope to release 10 and get this plugged

00:37:29,500 --> 00:37:36,850
into several of the Apache projects in

00:37:31,960 --> 00:37:40,240
the ee space we entertain ideas for new

00:37:36,850 --> 00:37:43,060
Weaver implementations it's a curiosity

00:37:40,240 --> 00:37:45,640
of what we could do with weaving by code

00:37:43,060 --> 00:37:47,440
at runtime and of course any

00:37:45,640 --> 00:37:50,620
contributions any of you or anyone else

00:37:47,440 --> 00:37:53,950
care to me so we can be reached at the

00:37:50,620 --> 00:37:56,890
dead list at commons and that's the

00:37:53,950 --> 00:37:58,720
location of the code for which hopefully

00:37:56,890 --> 00:38:01,120
that will be available by the slides

00:37:58,720 --> 00:38:04,630
after the conference if anyone becomes

00:38:01,120 --> 00:38:06,070
interested and I guess that's I've

00:38:04,630 --> 00:38:07,120
pretty much blazed through that one

00:38:06,070 --> 00:38:08,440
which is probably good because we were

00:38:07,120 --> 00:38:12,360
running a little behind but if anybody

00:38:08,440 --> 00:38:12,360
has any questions or comments

00:38:20,400 --> 00:38:32,960
that's a good one thank you and

00:38:30,690 --> 00:38:32,960
unfortunately

00:38:40,570 --> 00:38:46,570
now we're a few minutes ahead so we

00:38:42,610 --> 00:38:48,070
don't have to be so whatever but uh next

00:38:46,570 --> 00:39:06,280
we will have Matt Franklin with

00:38:48,070 --> 00:39:09,910
something interesting about rave yeah

00:39:06,280 --> 00:39:15,880
you know that's it hopefully by the end

00:39:09,910 --> 00:39:17,380
of it it's not still Vinnie all right so

00:39:15,880 --> 00:39:19,090
I'm going to talk a little bit I don't

00:39:17,380 --> 00:39:21,250
have slides I'm just going talk a little

00:39:19,090 --> 00:39:24,400
bit about a couple of projects that we

00:39:21,250 --> 00:39:28,780
did I work on how they work together and

00:39:24,400 --> 00:39:31,530
a couple of specs so as Nick put in the

00:39:28,780 --> 00:39:34,660
intro something interesting about rave

00:39:31,530 --> 00:39:39,060
so one of the projects i'm going to talk

00:39:34,660 --> 00:39:39,060
about is Apache rave microphone

00:39:42,480 --> 00:39:48,930
right so who has heard of Apache rave

00:39:46,859 --> 00:39:55,740
before doesn't count if you're

00:39:48,930 --> 00:40:02,010
committing ok so Apache rave in a

00:39:55,740 --> 00:40:03,540
nutshell is a widget based kind of user

00:40:02,010 --> 00:40:04,920
experience platform or web good social

00:40:03,540 --> 00:40:08,430
mashup engines what we really call it

00:40:04,920 --> 00:40:12,510
and what that means see if I can

00:40:08,430 --> 00:40:14,220
actually make this fit if you ever done

00:40:12,510 --> 00:40:16,770
anything with web widgets so OpenSocial

00:40:14,220 --> 00:40:18,720
gadgets are w3c widgets or anything else

00:40:16,770 --> 00:40:21,300
like that Ray's job is to manage those

00:40:18,720 --> 00:40:22,680
on a page for their users so in this

00:40:21,300 --> 00:40:25,200
case I'm you're looking at the portal

00:40:22,680 --> 00:40:27,119
view you can have other views like a you

00:40:25,200 --> 00:40:32,190
know user profile view we use it

00:40:27,119 --> 00:40:35,100
internally for a lot of sweet thanks we

00:40:32,190 --> 00:40:37,380
use it internally for a lot of kind of

00:40:35,100 --> 00:40:39,330
planning dashboards so if you can think

00:40:37,380 --> 00:40:41,220
of a big central map and then some

00:40:39,330 --> 00:40:44,220
widgets around the outside and you can

00:40:41,220 --> 00:40:45,840
use the the pub sub in tech gadget

00:40:44,220 --> 00:40:47,700
communication to be able to click on an

00:40:45,840 --> 00:40:49,859
item in the map and have the various

00:40:47,700 --> 00:40:52,109
widgets change context around it so if

00:40:49,859 --> 00:40:53,520
you wanted to find out where Nick is and

00:40:52,109 --> 00:40:55,440
click on that and find out what Nick's

00:40:53,520 --> 00:40:57,540
cell phone bill was last month and all

00:40:55,440 --> 00:41:00,540
the the other things you could do that

00:40:57,540 --> 00:41:02,160
right so that's what we use it for

00:41:00,540 --> 00:41:03,840
internally we also use it for our phone

00:41:02,160 --> 00:41:05,070
book which is what this is it's this

00:41:03,840 --> 00:41:06,450
kind of view right so it's instead of

00:41:05,070 --> 00:41:07,800
seeing a bunch of widgets it look like

00:41:06,450 --> 00:41:10,260
they can be moved around it's about

00:41:07,800 --> 00:41:12,960
having a modular application that's

00:41:10,260 --> 00:41:14,970
delivered to the users where you can do

00:41:12,960 --> 00:41:16,290
kind of client-side integration each one

00:41:14,970 --> 00:41:18,840
of these widgets hits a back-end data

00:41:16,290 --> 00:41:20,580
service that is its own uses the

00:41:18,840 --> 00:41:23,010
OpenSocial proxy to get at those those

00:41:20,580 --> 00:41:24,630
rest endpoints brave doesn't do anything

00:41:23,010 --> 00:41:26,900
with that all does it put the widgets on

00:41:24,630 --> 00:41:26,900
the page

00:41:28,050 --> 00:41:33,070
so that's right really quickly there's

00:41:31,480 --> 00:41:35,170
plenty more to talk about but that's the

00:41:33,070 --> 00:41:37,420
short version since we don't have a ton

00:41:35,170 --> 00:41:39,160
of time what I really want to talk about

00:41:37,420 --> 00:41:41,110
is how we're we're kind of taking Raven

00:41:39,160 --> 00:41:42,490
what how it's going to interact with

00:41:41,110 --> 00:41:45,760
some of the other projects that we deal

00:41:42,490 --> 00:41:48,430
with like activity Apache streams so

00:41:45,760 --> 00:41:51,130
Apache streams is a new project that we

00:41:48,430 --> 00:41:55,360
have started to build a new

00:41:51,130 --> 00:41:58,450
high-performance activities processors

00:41:55,360 --> 00:42:02,580
so if you've ever heard of the activity

00:41:58,450 --> 00:42:02,580
streams for minute from this website

00:42:02,640 --> 00:42:08,170
activity streams is a specification and

00:42:05,290 --> 00:42:11,800
it's really just a data format for

00:42:08,170 --> 00:42:17,620
pushing around event based social event

00:42:11,800 --> 00:42:20,380
based data come on scroll it's a you

00:42:17,620 --> 00:42:21,670
know so a very simple format right you

00:42:20,380 --> 00:42:24,220
can have a bunch of different fields

00:42:21,670 --> 00:42:27,550
when it was published the actor so the

00:42:24,220 --> 00:42:30,970
the thing that's actually creating the

00:42:27,550 --> 00:42:33,430
activity the object that it's being done

00:42:30,970 --> 00:42:35,410
against a verb that is you know some

00:42:33,430 --> 00:42:37,360
action against that that object in a

00:42:35,410 --> 00:42:39,610
target so some context that operates

00:42:37,360 --> 00:42:41,350
inside of so a very simple format but

00:42:39,610 --> 00:42:43,230
we're building apache streams is to do

00:42:41,350 --> 00:42:46,090
is to allow a bunch of different

00:42:43,230 --> 00:42:48,490
publishers of activities so inside of an

00:42:46,090 --> 00:42:50,530
enterprise IT environment you can

00:42:48,490 --> 00:42:52,540
imagine all of the different activities

00:42:50,530 --> 00:42:53,920
that you see across the enterprise so

00:42:52,540 --> 00:42:56,260
sharepoint has its own activity streams

00:42:53,920 --> 00:42:57,580
a stream of implementation JIRA has its

00:42:56,260 --> 00:42:58,840
own activity stream implementation

00:42:57,580 --> 00:43:00,580
wouldn't be really cool if you could

00:42:58,840 --> 00:43:03,070
just you know publish those activities

00:43:00,580 --> 00:43:04,750
out to a common comment processor and

00:43:03,070 --> 00:43:06,760
then have them delivered to the users

00:43:04,750 --> 00:43:07,930
inside of their their single contacts

00:43:06,760 --> 00:43:10,360
without having to go into 20 different

00:43:07,930 --> 00:43:12,760
applications so that's kind of the model

00:43:10,360 --> 00:43:15,130
and when you scale that out to the

00:43:12,760 --> 00:43:16,600
internet which is one of the cases that

00:43:15,130 --> 00:43:18,880
a couple people in the project have

00:43:16,600 --> 00:43:22,750
where they want to suck in like Twitter

00:43:18,880 --> 00:43:24,220
and Facebook and Pinterest and then put

00:43:22,750 --> 00:43:26,470
them all together and then re expose

00:43:24,220 --> 00:43:28,180
them to the users they're similar

00:43:26,470 --> 00:43:30,550
problems but they're scaled very

00:43:28,180 --> 00:43:31,630
differently so we'll see how we'll see

00:43:30,550 --> 00:43:32,830
what the hopefully we're building a

00:43:31,630 --> 00:43:36,280
flexible architecture that can support

00:43:32,830 --> 00:43:39,030
support both but we'll see but stream

00:43:36,280 --> 00:43:41,250
streams job is to take in the

00:43:39,030 --> 00:43:43,110
in this format and then be able to do

00:43:41,250 --> 00:43:46,500
intelligent things on it like security

00:43:43,110 --> 00:43:48,090
trim aggregate so if everybody on this

00:43:46,500 --> 00:43:51,030
half of the room comments on the blog

00:43:48,090 --> 00:43:53,120
post Nick doesn't want to get 15

00:43:51,030 --> 00:43:55,890
different nerd you know seven different

00:43:53,120 --> 00:43:57,330
activity entries in history it just

00:43:55,890 --> 00:43:59,460
floods them because if you do that from

00:43:57,330 --> 00:44:02,070
20 different applications 40 different

00:43:59,460 --> 00:44:03,690
applications starts to kind of really be

00:44:02,070 --> 00:44:05,280
a pain for the users and they stop

00:44:03,690 --> 00:44:07,020
paying attention what you really want to

00:44:05,280 --> 00:44:08,880
do is say they all come in is on the

00:44:07,020 --> 00:44:10,950
same blog post so and it gets one

00:44:08,880 --> 00:44:12,840
activity entry about that and when a new

00:44:10,950 --> 00:44:14,070
comment happens it just pops up to the

00:44:12,840 --> 00:44:16,230
back of the top of the stack and says

00:44:14,070 --> 00:44:18,510
there's one more then he can go look and

00:44:16,230 --> 00:44:21,000
engage it so that's the kind of thing

00:44:18,510 --> 00:44:22,950
that streams should support if we if we

00:44:21,000 --> 00:44:26,460
can do it right in the end we're pretty

00:44:22,950 --> 00:44:28,380
early on that project but aside from the

00:44:26,460 --> 00:44:29,880
fact of being able to deliver you know

00:44:28,380 --> 00:44:33,630
those activities to the user why would

00:44:29,880 --> 00:44:35,310
you want to do this it's fun to have all

00:44:33,630 --> 00:44:37,230
this aggregated information but not too

00:44:35,310 --> 00:44:39,540
many people are using portals anymore

00:44:37,230 --> 00:44:41,700
right the traditional portal sense but

00:44:39,540 --> 00:44:44,160
we're that's where OpenSocial comes in

00:44:41,700 --> 00:44:47,040
and allows us to deliver functionality

00:44:44,160 --> 00:44:49,650
through that stream all right so instead

00:44:47,040 --> 00:44:51,720
of just an activity stream I can now say

00:44:49,650 --> 00:44:53,970
as the producer of the activity not just

00:44:51,720 --> 00:44:57,030
the or the process or anywhere along the

00:44:53,970 --> 00:45:00,000
along the line I can now say not only

00:44:57,030 --> 00:45:02,310
show the user this activity also add

00:45:00,000 --> 00:45:05,220
this gadget to the context and let them

00:45:02,310 --> 00:45:08,430
interact with that activity and other

00:45:05,220 --> 00:45:10,530
services however I want so that's the

00:45:08,430 --> 00:45:12,630
kind of that next step of giving an in

00:45:10,530 --> 00:45:15,750
context ability to access your your

00:45:12,630 --> 00:45:17,640
stream based information so you can see

00:45:15,750 --> 00:45:18,900
it's pretty easy right so I anybody

00:45:17,640 --> 00:45:21,840
who's done anything with OpenSocial in

00:45:18,900 --> 00:45:23,160
the past knows that shindig or any of

00:45:21,840 --> 00:45:26,160
their OpenSocial container religious

00:45:23,160 --> 00:45:28,080
references gadgets by a URL and inside

00:45:26,160 --> 00:45:30,390
the at that URL is an XML file that

00:45:28,080 --> 00:45:33,900
defines all the resources and API is

00:45:30,390 --> 00:45:35,430
that you require with some container

00:45:33,900 --> 00:45:37,980
Hanson and a context object that gets

00:45:35,430 --> 00:45:40,020
passed to it the gadget table to this

00:45:37,980 --> 00:45:43,080
this context object will pass to the

00:45:40,020 --> 00:45:44,730
gadget at runtime and is able to go and

00:45:43,080 --> 00:45:47,750
say hey you know giving my context and

00:45:44,730 --> 00:45:47,750
then go do things

00:45:48,320 --> 00:45:53,460
so what that means is something like

00:45:51,270 --> 00:45:55,140
Grave that's able to rave has an

00:45:53,460 --> 00:46:01,140
activity streams and point through

00:45:55,140 --> 00:46:05,990
shindig but come on internet don't do

00:46:01,140 --> 00:46:05,990
this all right

00:46:06,660 --> 00:46:12,030
better so the the hotel Wi-Fi was so bad

00:46:10,620 --> 00:46:14,250
I put it on my phone and then I put my

00:46:12,030 --> 00:46:17,790
phone in my pocket and cell signal died

00:46:14,250 --> 00:46:18,990
so helps if I put it up alright so so

00:46:17,790 --> 00:46:21,450
right now we have no activities on this

00:46:18,990 --> 00:46:23,160
page right I'm glad we wrote a small

00:46:21,450 --> 00:46:26,540
little nodejs app that's going to do

00:46:23,160 --> 00:46:26,540
some publishing of activities for us

00:46:27,260 --> 00:46:35,130
start the ee demo so in a few seconds if

00:46:32,250 --> 00:46:37,770
everything still works from five minutes

00:46:35,130 --> 00:46:39,600
ago it's never a guarantee what you

00:46:37,770 --> 00:46:41,940
should see is an activity just popped in

00:46:39,600 --> 00:46:45,060
right so canonical user posted a photo

00:46:41,940 --> 00:46:48,330
at his you know photo album it's Boston

00:46:45,060 --> 00:46:49,650
a scene from the Charles River and then

00:46:48,330 --> 00:46:52,710
you know a couple seconds later he puts

00:46:49,650 --> 00:46:53,970
in the video right so normally that's

00:46:52,710 --> 00:46:55,830
what you'd see in activity stream so

00:46:53,970 --> 00:46:57,180
somebody like Twitter would say okay hey

00:46:55,830 --> 00:46:58,710
I know that that links a video I'm going

00:46:57,180 --> 00:46:59,970
to go look at that link and find out

00:46:58,710 --> 00:47:01,620
that it's a video and I'm going to you

00:46:59,970 --> 00:47:03,720
know open a player and I've got all this

00:47:01,620 --> 00:47:05,310
complicated logic inside of my my client

00:47:03,720 --> 00:47:06,930
to do that what would a better the

00:47:05,310 --> 00:47:08,760
experiences let you do is you know

00:47:06,930 --> 00:47:10,770
that's a generic stream bait or activity

00:47:08,760 --> 00:47:11,880
stream processors this you know that you

00:47:10,770 --> 00:47:15,120
can take this gadget now how it's open

00:47:11,880 --> 00:47:16,680
up on OpenSocial skit hub take that

00:47:15,120 --> 00:47:18,060
gadget put it in any context and as long

00:47:16,680 --> 00:47:19,830
as you're feeding it actual activity

00:47:18,060 --> 00:47:22,550
stream data in that format it'll be able

00:47:19,830 --> 00:47:24,510
to render it no special things required

00:47:22,550 --> 00:47:26,580
but the great thing is this abetted

00:47:24,510 --> 00:47:28,770
experience so if I want to add it you

00:47:26,580 --> 00:47:31,970
know that embedded experience that you

00:47:28,770 --> 00:47:34,380
saw before and Internet come on internet

00:47:31,970 --> 00:47:37,670
this is what I get for it relying on

00:47:34,380 --> 00:47:37,670
unruhe boat resources

00:47:37,789 --> 00:47:44,809
does it maybe I'll switch it over here

00:47:41,750 --> 00:47:44,809
what's that

00:47:51,400 --> 00:47:56,060
all right here we go all right the real

00:47:53,510 --> 00:47:59,060
so I just clicked add a comment and what

00:47:56,060 --> 00:48:01,070
you get is a new gadget opened inside of

00:47:59,060 --> 00:48:02,840
the same the context of rape so there's

00:48:01,070 --> 00:48:04,550
a whole bunch of api's that are

00:48:02,840 --> 00:48:07,340
accessible to the widgets that allow you

00:48:04,550 --> 00:48:08,540
to launch additional gadgets so it's

00:48:07,340 --> 00:48:09,800
part of the OpenSocial specification

00:48:08,540 --> 00:48:11,720
rave doesn't know anything about the

00:48:09,800 --> 00:48:13,430
gadget is rendering other than it's it's

00:48:11,720 --> 00:48:15,140
an authorized gadget to be launched

00:48:13,430 --> 00:48:16,700
right we don't just let you launch

00:48:15,140 --> 00:48:19,760
arbitrary code that that would be very

00:48:16,700 --> 00:48:21,410
bad here at some level of human in the

00:48:19,760 --> 00:48:27,140
loop so I can stay here and comment on

00:48:21,410 --> 00:48:29,570
it and say you know Boston is cold which

00:48:27,140 --> 00:48:33,770
every year that seems to be getting less

00:48:29,570 --> 00:48:35,600
and less true and then Joe great so I

00:48:33,770 --> 00:48:37,730
know what what did that do for the user

00:48:35,600 --> 00:48:39,770
amantha the user was able to interact

00:48:37,730 --> 00:48:41,690
with with something that was happening

00:48:39,770 --> 00:48:44,120
in a different application the photo

00:48:41,690 --> 00:48:46,100
album at that point and not ever have to

00:48:44,120 --> 00:48:47,510
leave his own context so that's pretty

00:48:46,100 --> 00:48:49,310
cool now you can do the same thing with

00:48:47,510 --> 00:48:51,650
the the video right so here's a YouTube

00:48:49,310 --> 00:48:54,710
video I can play the video I can comment

00:48:51,650 --> 00:48:56,990
on it and I can close it out Thank great

00:48:54,710 --> 00:48:58,970
and I had no no intelligence in the

00:48:56,990 --> 00:49:00,260
container whatsoever other than to know

00:48:58,970 --> 00:49:02,810
that I have a gadget that I'm going to

00:49:00,260 --> 00:49:04,700
render there was no video you know hey

00:49:02,810 --> 00:49:07,250
this is a video take it pull it and play

00:49:04,700 --> 00:49:10,130
it so lets you kind of really push on

00:49:07,250 --> 00:49:13,760
you know through that so if you're a

00:49:10,130 --> 00:49:16,070
business person what if you wanted to be

00:49:13,760 --> 00:49:19,340
able to do something other than you know

00:49:16,070 --> 00:49:21,080
comment on videos of cats or you know

00:49:19,340 --> 00:49:23,330
something else right you want to be able

00:49:21,080 --> 00:49:25,010
to do something real with this so that's

00:49:23,330 --> 00:49:27,560
where we're if you can see this embedded

00:49:25,010 --> 00:49:29,390
experience model and it for what it is

00:49:27,560 --> 00:49:30,740
and see how you can apply it you can

00:49:29,390 --> 00:49:33,230
start to see that you can really change

00:49:30,740 --> 00:49:35,990
the users workflow so they can do stuff

00:49:33,230 --> 00:49:37,490
in context say I've got a project leader

00:49:35,990 --> 00:49:39,830
dashboard and your project leaders I

00:49:37,490 --> 00:49:43,070
don't my company project leaders have to

00:49:39,830 --> 00:49:45,440
approve tribal and time so if your

00:49:43,070 --> 00:49:46,850
project leader sitting there it is

00:49:45,440 --> 00:49:48,830
project leader dashboard he doesn't have

00:49:46,850 --> 00:49:52,130
to leave he's also no filling out his

00:49:48,830 --> 00:49:53,900
you know quarterly reports for how well

00:49:52,130 --> 00:49:55,610
the projects going instead of making him

00:49:53,900 --> 00:49:57,110
go off to a different different

00:49:55,610 --> 00:49:59,250
interface to actually improve time cards

00:49:57,110 --> 00:50:01,290
why can't he just do it right here

00:49:59,250 --> 00:50:02,640
right you know he sees that an activity

00:50:01,290 --> 00:50:05,430
came through the Jane Doe submitted her

00:50:02,640 --> 00:50:06,900
Italian card you know you also look at

00:50:05,430 --> 00:50:09,510
it okay great so here's the time card

00:50:06,900 --> 00:50:11,130
I'm gonna prove it done so it's now long

00:50:09,510 --> 00:50:13,860
you know that was a 22nd interruption

00:50:11,130 --> 00:50:17,360
out of my way right and the John the

00:50:13,860 --> 00:50:20,730
same thing came through he's terrible

00:50:17,360 --> 00:50:22,740
time which is better than he sucks at

00:50:20,730 --> 00:50:25,590
life but you know so he sends it back

00:50:22,740 --> 00:50:26,850
right it's done so that's where the kind

00:50:25,590 --> 00:50:28,230
of power for business starts to come is

00:50:26,850 --> 00:50:29,760
you can start to see that you can you

00:50:28,230 --> 00:50:32,550
can interact with all these these

00:50:29,760 --> 00:50:34,830
different sources of activities and if

00:50:32,550 --> 00:50:37,590
you use cm is right so you can reach

00:50:34,830 --> 00:50:39,600
back into your cm is server for when

00:50:37,590 --> 00:50:41,130
documents get changed and start to

00:50:39,600 --> 00:50:43,200
actually show hey here's what Jess

00:50:41,130 --> 00:50:45,570
changes were right so something

00:50:43,200 --> 00:50:47,760
publicist activity for Jeff uploaded a

00:50:45,570 --> 00:50:51,180
new document now you're got you can just

00:50:47,760 --> 00:50:53,120
show it which there is a cm is gadget

00:50:51,180 --> 00:50:55,490
out there that can read the repository

00:50:53,120 --> 00:50:58,620
not the cathodic a at the moment so

00:50:55,490 --> 00:51:00,000
that's kind of the you know what we kind

00:50:58,620 --> 00:51:02,160
of think is the next social business

00:51:00,000 --> 00:51:03,660
move it's not about you know necessarily

00:51:02,160 --> 00:51:05,790
who you're connected to or who you

00:51:03,660 --> 00:51:07,200
follow or things like that some of these

00:51:05,790 --> 00:51:08,340
things are just natural relationships

00:51:07,200 --> 00:51:11,220
that you have inside your organization

00:51:08,340 --> 00:51:12,720
organization you know so like a report

00:51:11,220 --> 00:51:15,450
of organizations projects things like

00:51:12,720 --> 00:51:16,710
that naturally group people you can have

00:51:15,450 --> 00:51:19,530
following models and things like that to

00:51:16,710 --> 00:51:22,890
augment it but really you can start to

00:51:19,530 --> 00:51:25,500
push a social interaction that allows

00:51:22,890 --> 00:51:27,630
you to get some functionality and what

00:51:25,500 --> 00:51:30,240
we call it in context or as open socials

00:51:27,630 --> 00:51:31,920
actually calling apps at the point of

00:51:30,240 --> 00:51:35,430
need I'm not sure that actually makes

00:51:31,920 --> 00:51:36,690
sense but so that's a that's a couple

00:51:35,430 --> 00:51:38,550
different projects right and a couple

00:51:36,690 --> 00:51:44,610
different specifications that's Apache

00:51:38,550 --> 00:51:47,910
rave Apache streams and activity streams

00:51:44,610 --> 00:51:49,080
the format so if you want to be one take

00:51:47,910 --> 00:51:50,700
a look at what people are doing with

00:51:49,080 --> 00:51:54,090
activity streams go to that what you are

00:51:50,700 --> 00:51:57,570
right there opensocial always of

00:51:54,090 --> 00:52:03,520
interest Rafe

00:51:57,570 --> 00:52:07,300
and streams so that was any questions I

00:52:03,520 --> 00:52:09,750
think I like couple mins left no

00:52:07,300 --> 00:52:09,750
questions

00:52:14,980 --> 00:52:17,980
yes

00:52:18,930 --> 00:52:25,060
right so rave right now with this is so

00:52:23,650 --> 00:52:27,280
the rave shindig adapter has an adapter

00:52:25,060 --> 00:52:29,140
for activities so we have work on rave I

00:52:27,280 --> 00:52:31,120
also work on Apache streams and I also

00:52:29,140 --> 00:52:33,070
work at OpenSocial the only one I'm not

00:52:31,120 --> 00:52:36,910
as activity streams that netted you know

00:52:33,070 --> 00:52:38,230
have the whole set but there's a large

00:52:36,910 --> 00:52:39,190
overlap in a lot of these communities

00:52:38,230 --> 00:52:42,280
because I was trying to do the same

00:52:39,190 --> 00:52:43,630
stuff but in this case the you know rave

00:52:42,280 --> 00:52:44,950
is the thing that allows you to have the

00:52:43,630 --> 00:52:47,770
gadgets laid out wherever you want right

00:52:44,950 --> 00:52:49,450
so I can also you know you get your drag

00:52:47,770 --> 00:52:54,070
and drop type stuff which nobody seems

00:52:49,450 --> 00:52:55,240
to care about anymore right you could if

00:52:54,070 --> 00:52:57,280
you want to do that the point that we're

00:52:55,240 --> 00:52:58,840
trying to move rave to is where you can

00:52:57,280 --> 00:53:00,700
it's a flexible widget management

00:52:58,840 --> 00:53:01,780
framework it really doesn't matter how

00:53:00,700 --> 00:53:03,540
you want to deploy do you want to play

00:53:01,780 --> 00:53:06,070
this portal great doing the deploy it as

00:53:03,540 --> 00:53:08,470
you know a composite application more

00:53:06,070 --> 00:53:10,150
like our phone book great the point is

00:53:08,470 --> 00:53:12,330
that you have these these each of these

00:53:10,150 --> 00:53:15,070
gadgets especially with OpenSocial

00:53:12,330 --> 00:53:16,720
there's a runtime nation to be proxy let

00:53:15,070 --> 00:53:18,010
you get back to two other stuff on the

00:53:16,720 --> 00:53:21,010
network right so you don't actually your

00:53:18,010 --> 00:53:22,300
Ajax calls aren't bound by you no cross

00:53:21,010 --> 00:53:23,350
domain issues and you have to worry

00:53:22,300 --> 00:53:25,660
about Korra senators or anything like

00:53:23,350 --> 00:53:27,460
that you can just hit the proxy that

00:53:25,660 --> 00:53:29,260
proxy can also do o authentication right

00:53:27,460 --> 00:53:30,400
so it's an OAuth proxy as well so now

00:53:29,260 --> 00:53:32,560
you can get it authenticated access to

00:53:30,400 --> 00:53:34,720
services as well so that's that's where

00:53:32,560 --> 00:53:35,980
the you know kind of like a client-side

00:53:34,720 --> 00:53:40,180
integration model starts to come

00:53:35,980 --> 00:53:42,510
together hey other questions and look

00:53:40,180 --> 00:53:42,510
out of the way

00:53:52,010 --> 00:53:56,060
yeah exactly right you know

00:53:59,380 --> 00:54:04,440
no so I don't think anybody else has any

00:54:01,480 --> 00:54:04,440
questions for me so I can

00:55:06,299 --> 00:55:11,259
yep corner do you would you rather if

00:55:09,849 --> 00:55:14,169
you gotta talk that's okay I can go

00:55:11,259 --> 00:55:19,419
after it doesn't matter the order me

00:55:14,169 --> 00:55:29,679
either I unless but you're also okay

00:55:19,419 --> 00:55:33,309
it's a way to figure out a live tweeting

00:55:29,679 --> 00:55:41,789
like hash Brian please come to the front

00:55:33,309 --> 00:55:41,789
I see how the pole got in the way

00:55:45,410 --> 00:55:56,910
there

00:55:47,859 --> 00:56:00,599
you can be the closer need that uh and

00:55:56,910 --> 00:56:00,599
battery which is correct

00:56:03,830 --> 00:56:07,510
it's coming I promise

00:56:17,450 --> 00:56:20,990
never makes it

00:56:23,440 --> 00:56:26,010
ok

00:56:43,079 --> 00:56:47,119
shoot up in one more second

00:56:49,890 --> 00:56:53,180
oh yeah

00:56:56,039 --> 00:57:04,900
yeah it's just a slow there we go all

00:57:02,799 --> 00:57:07,920
right this is my friend Chris who also

00:57:04,900 --> 00:57:11,319
happens to be the media goblin founder

00:57:07,920 --> 00:57:14,740
so he had this idea that it would be

00:57:11,319 --> 00:57:19,269
really fun to make a decentralized media

00:57:14,740 --> 00:57:20,890
hosting so he is a longtime free

00:57:19,269 --> 00:57:22,750
software activist and coming from the

00:57:20,890 --> 00:57:25,599
Creative Commons community he also does

00:57:22,750 --> 00:57:28,569
a lot of artwork and in particular a lot

00:57:25,599 --> 00:57:31,089
of 3d animation artwork that he likes to

00:57:28,569 --> 00:57:33,490
work on collaborative collaboratively

00:57:31,089 --> 00:57:36,640
with folks so he was like oh I'd really

00:57:33,490 --> 00:57:39,039
like a format for hosting and sharing

00:57:36,640 --> 00:57:42,339
media that did a better job of

00:57:39,039 --> 00:57:44,019
supporting collaboration and also

00:57:42,339 --> 00:57:46,599
supporting control as far as the way

00:57:44,019 --> 00:57:48,010
that you share if I skip over or use

00:57:46,599 --> 00:57:53,400
weird acronyms feel free to interrupt

00:57:48,010 --> 00:57:57,039
and I will go back and explain um so um

00:57:53,400 --> 00:58:00,759
he's on this service identica um doing

00:57:57,039 --> 00:58:02,950
in here he is identica awesome okay one

00:58:00,759 --> 00:58:04,440
person Oh a little bit okay so it's kind

00:58:02,950 --> 00:58:07,630
of like the free software Twitter right

00:58:04,440 --> 00:58:10,480
and it's built on top of code called

00:58:07,630 --> 00:58:12,190
statusnet and it's a it's a GPL software

00:58:10,480 --> 00:58:15,880
which I realized makes it we were going

00:58:12,190 --> 00:58:17,950
for this conference um and he's built a

00:58:15,880 --> 00:58:20,759
bunch of different things there I know I

00:58:17,950 --> 00:58:23,380
know you can't roll me later um and

00:58:20,759 --> 00:58:26,920
anyway so statusnet is great it's

00:58:23,380 --> 00:58:28,450
microblogging it you know like you were

00:58:26,920 --> 00:58:29,920
talking about with the activity streams

00:58:28,450 --> 00:58:31,869
like we've been looking at some of those

00:58:29,920 --> 00:58:34,259
different kinds of things Olaf is

00:58:31,869 --> 00:58:38,049
definitely already in the status netcode

00:58:34,259 --> 00:58:41,349
but serving up 140 characters of like

00:58:38,049 --> 00:58:44,230
OMG cats like at a time is one thing and

00:58:41,349 --> 00:58:49,089
threading all of those conversations is

00:58:44,230 --> 00:58:51,640
you know not easy but a court of kind of

00:58:49,089 --> 00:58:56,289
a finite problem so what we decided to

00:58:51,640 --> 00:58:58,420
do was to get some folks together and do

00:58:56,289 --> 00:59:00,309
this for media hosting so we're like hey

00:58:58,420 --> 00:59:01,220
if you can do that with tweets then why

00:59:00,309 --> 00:59:05,030
not with v

00:59:01,220 --> 00:59:08,119
yo and photos and everything else this

00:59:05,030 --> 00:59:09,440
is jeff and you're Jeff makes all the

00:59:08,119 --> 00:59:12,109
things look pretty which is really

00:59:09,440 --> 00:59:14,359
important to us we wanted hey artists

00:59:12,109 --> 00:59:16,730
come use this site it looks like but but

00:59:14,359 --> 00:59:20,230
no we are like Jeff help us make it look

00:59:16,730 --> 00:59:24,290
nice so he also has make it look nice um

00:59:20,230 --> 00:59:26,060
different haircut there and so we

00:59:24,290 --> 00:59:29,230
started looking at like how do we do

00:59:26,060 --> 00:59:31,670
this so email is kind of the classic

00:59:29,230 --> 00:59:34,430
decentralized service like you don't

00:59:31,670 --> 00:59:37,609
care if your parents are still using AOL

00:59:34,430 --> 00:59:39,859
mail they don't care that you have your

00:59:37,609 --> 00:59:41,720
own domain all of the email just goes

00:59:39,859 --> 00:59:44,270
back and forth it talks to each other

00:59:41,720 --> 00:59:46,730
it's fantastic everyone you can have as

00:59:44,270 --> 00:59:48,800
leaky and crummy email as you want and

00:59:46,730 --> 00:59:50,900
you can still talk to your friends who

00:59:48,800 --> 00:59:53,420
have like their own server and it's it's

00:59:50,900 --> 00:59:55,070
great so people choose how they share

00:59:53,420 --> 00:59:56,740
they choose the format that they want to

00:59:55,070 --> 00:59:59,480
do their things in so we know that

00:59:56,740 --> 01:00:01,340
decentralized services there is a model

00:59:59,480 --> 01:00:03,290
there for everyone using their own thing

01:00:01,340 --> 01:00:07,369
but communicating through a common

01:00:03,290 --> 01:00:10,250
protocol so this is what I would think

01:00:07,369 --> 01:00:12,859
of as a healthy example of the Internet

01:00:10,250 --> 01:00:15,740
in a mini mini to mini situation where

01:00:12,859 --> 01:00:17,930
all the nodes kind of talk to each other

01:00:15,740 --> 01:00:20,330
interactively but there's no like one

01:00:17,930 --> 01:00:23,960
giant like too big to fail thing at the

01:00:20,330 --> 01:00:26,030
middle like this situation so for a lot

01:00:23,960 --> 01:00:28,730
of our existing web services where we

01:00:26,030 --> 01:00:31,460
host photos or we host videos we have

01:00:28,730 --> 01:00:33,950
like one massive thing in the middle and

01:00:31,460 --> 01:00:35,960
then we're all here on the outside so

01:00:33,950 --> 01:00:37,970
something happened to the middle or they

01:00:35,960 --> 01:00:40,310
decided they didn't like you on your

01:00:37,970 --> 01:00:42,410
little end of the node then poof you're

01:00:40,310 --> 01:00:44,420
gone you're no longer connected to the

01:00:42,410 --> 01:00:47,920
everyone not just the people you

01:00:44,420 --> 01:00:51,440
irritated or whatever so that's not good

01:00:47,920 --> 01:00:54,650
so censorship on the internet is

01:00:51,440 --> 01:00:56,660
perceived as damaged and needs to be

01:00:54,650 --> 01:01:00,470
routed around so in a decentralized

01:00:56,660 --> 01:01:02,330
system like one place breaks down in the

01:01:00,470 --> 01:01:04,400
internet and then you can route around

01:01:02,330 --> 01:01:08,930
it and everybody's still all back and

01:01:04,400 --> 01:01:11,519
forth like you know happy happy so

01:01:08,930 --> 01:01:15,539
because we're giant nerds we built

01:01:11,519 --> 01:01:18,869
support for ASCII art first because you

01:01:15,539 --> 01:01:21,269
know it seemed really important well but

01:01:18,869 --> 01:01:24,089
also doable so we wanted to like kind of

01:01:21,269 --> 01:01:27,000
talk about like how will we model this

01:01:24,089 --> 01:01:30,450
sort of adding a media hosting type to

01:01:27,000 --> 01:01:33,089
like our existing framework so we

01:01:30,450 --> 01:01:35,339
started asking art which was fun and now

01:01:33,089 --> 01:01:39,650
we have a lot of funny can you ask you

01:01:35,339 --> 01:01:42,240
art on our website we added photos next

01:01:39,650 --> 01:01:43,980
our contributor community is pretty

01:01:42,240 --> 01:01:45,539
tight-knit we have like pictures of each

01:01:43,980 --> 01:01:47,220
other's weddings pictures of each

01:01:45,539 --> 01:01:49,200
other's cats pictures of each other's

01:01:47,220 --> 01:01:51,089
babies that have been like used in

01:01:49,200 --> 01:01:53,220
testing and all these things something's

01:01:51,089 --> 01:01:55,349
to everybody like oh I've seen your

01:01:53,220 --> 01:02:00,750
infant like I can't be mean to you on

01:01:55,349 --> 01:02:05,670
IRC and so we have we've photos we've

01:02:00,750 --> 01:02:07,769
videos now we have audio and then when

01:02:05,670 --> 01:02:11,279
we got to that point where like it would

01:02:07,769 --> 01:02:13,410
be awesome to get paid for this so we

01:02:11,279 --> 01:02:15,509
did a fundraising campaign we ended up

01:02:13,410 --> 01:02:17,609
hiring our lead technical person I'm a

01:02:15,509 --> 01:02:19,859
giant fan of paying coders and

01:02:17,609 --> 01:02:22,170
contributors hackers definitely got to

01:02:19,859 --> 01:02:24,720
eat I know the free software things

01:02:22,170 --> 01:02:28,950
thanks might you may feel like hmm she

01:02:24,720 --> 01:02:30,180
must not like money I do I'm a fan so we

01:02:28,950 --> 01:02:32,039
were in a campaign through the Free

01:02:30,180 --> 01:02:34,769
Software Foundation it's sort of like

01:02:32,039 --> 01:02:36,390
Kickstarter for us but they took the

01:02:34,769 --> 01:02:38,549
admin fees and it went back into a

01:02:36,390 --> 01:02:40,559
non-profit so we were happier with that

01:02:38,549 --> 01:02:42,480
they also promoted it to their members

01:02:40,559 --> 01:02:44,150
who are the kind of folks who are like

01:02:42,480 --> 01:02:46,410
whoo you guys are building like a

01:02:44,150 --> 01:02:48,869
decentralized media hosting project

01:02:46,410 --> 01:02:52,920
under the hepl i'm in so it was a

01:02:48,869 --> 01:02:55,170
win-win we also attracted the attention

01:02:52,920 --> 01:02:57,990
of the lulzbot folks do you guys know

01:02:55,170 --> 01:03:00,359
what the 3d printer the lulzbot is right

01:02:57,990 --> 01:03:02,819
okay so and then you know there's like

01:03:00,359 --> 01:03:05,910
two versions like this one has like it's

01:03:02,819 --> 01:03:08,039
sort of an open hardware model where you

01:03:05,910 --> 01:03:10,319
can reprint other stuff and the pieces

01:03:08,039 --> 01:03:13,829
and bits are licensed freely and then

01:03:10,319 --> 01:03:16,170
the other one is sort of like they are

01:03:13,829 --> 01:03:18,000
trying to patent that or intellectual

01:03:16,170 --> 01:03:18,830
Ventures has a patent out on it and the

01:03:18,000 --> 01:03:20,240
and they're trying

01:03:18,830 --> 01:03:22,760
everyone's trying to lock up their

01:03:20,240 --> 01:03:24,680
version of the 3d printer but loves but

01:03:22,760 --> 01:03:27,650
was like no no we're going to give

01:03:24,680 --> 01:03:29,870
everybody all the specs and in fact they

01:03:27,650 --> 01:03:32,000
said if you guys would build 3d

01:03:29,870 --> 01:03:34,160
modelling support we will give whoever

01:03:32,000 --> 01:03:36,830
builds 3d modelling support for media

01:03:34,160 --> 01:03:40,190
goblin a 3d printer which we were pretty

01:03:36,830 --> 01:03:42,800
jazzed about um an effect Ava one of our

01:03:40,190 --> 01:03:45,560
contributors was the most jazz she has

01:03:42,800 --> 01:03:47,710
wanted a 3d printer like so bad for so

01:03:45,560 --> 01:03:49,760
long she spent the whole weekend

01:03:47,710 --> 01:03:51,770
immediately after they announced they

01:03:49,760 --> 01:03:54,230
were giving one away coating up support

01:03:51,770 --> 01:03:56,840
so now we're able to support 3d modeling

01:03:54,230 --> 01:03:58,580
which is great for this it's also like

01:03:56,840 --> 01:04:00,430
helps us with some of the backend stuff

01:03:58,580 --> 01:04:03,020
for blender and you know sharing

01:04:00,430 --> 01:04:07,640
projects in that way so it's it's very

01:04:03,020 --> 01:04:09,530
exciting so this is sort of the pieces

01:04:07,640 --> 01:04:12,860
of the puzzle that we think would be

01:04:09,530 --> 01:04:15,200
necessary for like a good like federated

01:04:12,860 --> 01:04:17,120
decentralized media hosting so some of

01:04:15,200 --> 01:04:19,160
these things like the image support

01:04:17,120 --> 01:04:22,820
turned out to be not that difficult to

01:04:19,160 --> 01:04:26,960
build you know audio support came in

01:04:22,820 --> 01:04:30,110
pretty quick we have an API now you can

01:04:26,960 --> 01:04:31,490
put a Geo stuff on your photos and some

01:04:30,110 --> 01:04:34,280
of the other things turned out to be a

01:04:31,490 --> 01:04:36,020
little bit harder this the next thing

01:04:34,280 --> 01:04:37,790
we're focusing on we have plugins

01:04:36,020 --> 01:04:39,820
support is getting people to write

01:04:37,790 --> 01:04:42,110
plugins for different media types or

01:04:39,820 --> 01:04:45,320
plugins for reporting it to different

01:04:42,110 --> 01:04:47,210
devices or you know we're we're happy if

01:04:45,320 --> 01:04:49,310
you want to put our media goblin in your

01:04:47,210 --> 01:04:53,020
project or your project in our media

01:04:49,310 --> 01:04:56,030
goblin like we're good either way um

01:04:53,020 --> 01:04:58,310
Federation this is actually the hardest

01:04:56,030 --> 01:05:02,210
problem so when you're talking about the

01:04:58,310 --> 01:05:05,660
activity streams it's one thing to have

01:05:02,210 --> 01:05:06,920
like a you know like a finite group that

01:05:05,660 --> 01:05:09,410
you share with but when you're like

01:05:06,920 --> 01:05:11,540
inviting the whole internet to the party

01:05:09,410 --> 01:05:13,790
all of a sudden it becomes like a much

01:05:11,540 --> 01:05:16,880
bigger deal to figure out how to

01:05:13,790 --> 01:05:18,650
gracefully feder eight and so our goal

01:05:16,880 --> 01:05:21,170
here is to have lots of different

01:05:18,650 --> 01:05:23,330
instances that talk over like a single

01:05:21,170 --> 01:05:25,370
protocol and you would seamlessly go

01:05:23,330 --> 01:05:27,620
from one to the other in the same way

01:05:25,370 --> 01:05:29,520
that you do email now so you would be

01:05:27,620 --> 01:05:31,770
like I'm on George's site

01:05:29,520 --> 01:05:33,780
had some videos and then i tole over to

01:05:31,770 --> 01:05:36,810
marry site and she has all these images

01:05:33,780 --> 01:05:38,520
and then like Julie's band has new sound

01:05:36,810 --> 01:05:40,590
up and I'm going to go over there and

01:05:38,520 --> 01:05:42,810
you can comment you know from your

01:05:40,590 --> 01:05:45,420
dashboard on all of those things without

01:05:42,810 --> 01:05:47,130
realizing like you know like Julie

01:05:45,420 --> 01:05:48,690
decided to change the database under the

01:05:47,130 --> 01:05:51,210
hood because she's crazy like that or

01:05:48,690 --> 01:05:54,180
whatever it is so the Federation is

01:05:51,210 --> 01:05:56,160
still the hard problem and in fact it's

01:05:54,180 --> 01:05:58,350
still kind of the same when you look at

01:05:56,160 --> 01:06:00,060
the thing that spawned the idea

01:05:58,350 --> 01:06:02,400
statusnet you still have this thing

01:06:00,060 --> 01:06:04,350
where it's like wait oh and you want to

01:06:02,400 --> 01:06:05,760
go to another instance and it interrupts

01:06:04,350 --> 01:06:07,560
you to let you know you're going to

01:06:05,760 --> 01:06:09,960
another instance and I'm not like

01:06:07,560 --> 01:06:12,480
calling Evan the person who works on

01:06:09,960 --> 01:06:14,880
this project out on that he's aware that

01:06:12,480 --> 01:06:17,430
this is annoying this actually might be

01:06:14,880 --> 01:06:19,680
his slide I think but um so the goal is

01:06:17,430 --> 01:06:21,570
to have none of that like hey you're

01:06:19,680 --> 01:06:23,850
leaving one instance going to another

01:06:21,570 --> 01:06:26,850
it's like users aren't really into that

01:06:23,850 --> 01:06:29,100
they like to just like you know diet

01:06:26,850 --> 01:06:31,350
back black hole of like hours of

01:06:29,100 --> 01:06:33,360
internet without interruptions so we

01:06:31,350 --> 01:06:34,770
want to give that to them the other

01:06:33,360 --> 01:06:37,170
thing we want to give them as easier

01:06:34,770 --> 01:06:39,450
installs right now it's kind of like two

01:06:37,170 --> 01:06:41,400
pages on the wiki it involves like

01:06:39,450 --> 01:06:43,710
downloading a bunch of dependencies to

01:06:41,400 --> 01:06:45,300
run your instance plus like the idea of

01:06:43,710 --> 01:06:46,320
like you have your own server right

01:06:45,300 --> 01:06:49,320
you're just going to put it on your

01:06:46,320 --> 01:06:51,750
server not everyone really is ready to

01:06:49,320 --> 01:06:54,120
do that so um we're looking at a couple

01:06:51,750 --> 01:06:57,090
of ways to do that for the folks who are

01:06:54,120 --> 01:06:59,540
like yeah I have my own server we've

01:06:57,090 --> 01:07:01,380
been looking at packaging it with

01:06:59,540 --> 01:07:03,360
distributions we've been talking to

01:07:01,380 --> 01:07:05,760
fedora and Debian so that people can

01:07:03,360 --> 01:07:08,100
just kind of like app get or young and

01:07:05,760 --> 01:07:09,900
have a media Goblin like all the media

01:07:08,100 --> 01:07:13,290
goblins stuffs tucked in if it doesn't

01:07:09,900 --> 01:07:15,360
actually ship with so easier installs or

01:07:13,290 --> 01:07:17,100
another thing that's going to be huge

01:07:15,360 --> 01:07:19,590
for us in the coming year on this

01:07:17,100 --> 01:07:23,640
project so we're in your internet or to

01:07:19,590 --> 01:07:25,950
centralizing your media's we are media

01:07:23,640 --> 01:07:28,710
goblin org Pam media goblin on freenode

01:07:25,950 --> 01:07:31,830
net it's a Python project with

01:07:28,710 --> 01:07:34,050
SQL database underneath and if you enjoy

01:07:31,830 --> 01:07:36,240
the idea of pitching in on the hard

01:07:34,050 --> 01:07:43,589
project or heart problems of Federation

01:07:36,240 --> 01:07:45,420
we would love to see you so thanks I'll

01:07:43,589 --> 01:07:47,160
take questions or I don't know how I did

01:07:45,420 --> 01:07:51,690
on time that was like a five-minute talk

01:07:47,160 --> 01:07:56,910
the last time I gave it so yeah um Brian

01:07:51,690 --> 01:08:05,550
right oh okay we see you you're not

01:07:56,910 --> 01:08:08,670
invisible oh oh no actual babies just

01:08:05,550 --> 01:08:12,210
virtual babies that's a whole other

01:08:08,670 --> 01:08:14,010
level of like media type support maybe

01:08:12,210 --> 01:08:17,060
with the 3d printer someone wants to

01:08:14,010 --> 01:08:19,350
code up support for baby sharing

01:08:17,060 --> 01:08:22,160
actually I think you'd have to fork I'm

01:08:19,350 --> 01:08:25,080
not really into baby sharing I'm sorry

01:08:22,160 --> 01:08:27,299
yes you did and she started printing out

01:08:25,080 --> 01:08:29,250
stuff like we now leg we have pictures

01:08:27,299 --> 01:08:33,359
of things it was printed out on the 3d

01:08:29,250 --> 01:08:36,259
printer so yeah cool anything else all

01:08:33,359 --> 01:08:36,259
right great thanks a lot

01:09:02,750 --> 01:09:10,580
but that adapters done okay lang sa I

01:09:07,460 --> 01:09:10,580
got one

01:09:17,080 --> 01:09:24,000
oh thanks I work thank you

01:09:47,049 --> 01:09:52,009
so Nick asked me at lunch if I could

01:09:49,730 --> 01:09:54,500
give a quick talk so what I wanted to do

01:09:52,009 --> 01:09:57,530
I just had some ideas about things to

01:09:54,500 --> 01:09:59,239
share with the group I don't know if you

01:09:57,530 --> 01:10:02,380
can read that probably not hold on I

01:09:59,239 --> 01:10:05,330
think you go windows plus there you go

01:10:02,380 --> 01:10:08,360
so I work for Microsoft open

01:10:05,330 --> 01:10:10,010
technologies which is a wholly owned

01:10:08,360 --> 01:10:14,900
subsidiary of Microsoft as we are

01:10:10,010 --> 01:10:16,760
required by the lawyers to say and what

01:10:14,900 --> 01:10:19,099
we do is work with the open source

01:10:16,760 --> 01:10:23,090
community engage the open source

01:10:19,099 --> 01:10:30,650
community and encourage them to help us

01:10:23,090 --> 01:10:33,380
make Windows Azure more useful to the

01:10:30,650 --> 01:10:35,840
open source community there's a lot of

01:10:33,380 --> 01:10:37,219
different packages on Azure a lot of

01:10:35,840 --> 01:10:39,710
them are commercial packages a lot of

01:10:37,219 --> 01:10:44,000
them are open source as well as I'll

01:10:39,710 --> 01:10:47,320
show you today let's see we're gonna

01:10:44,000 --> 01:10:47,320
want to get in here with

01:10:50,700 --> 01:10:59,250
we go you got that okay so i've been at

01:10:57,330 --> 01:11:01,800
microsoft album technologies for a few

01:10:59,250 --> 01:11:03,150
months now prior to that is at IBM and

01:11:01,800 --> 01:11:06,120
Deloitte in a few other places some

01:11:03,150 --> 01:11:07,890
smaller companies building Big Data

01:11:06,120 --> 01:11:11,250
solutions some proprietary some open

01:11:07,890 --> 01:11:13,880
source sells a little bit about me I'd

01:11:11,250 --> 01:11:16,800
wanted to plug my session for tomorrow

01:11:13,880 --> 01:11:19,470
at 11am i'm giving a session on best

01:11:16,800 --> 01:11:21,840
practice nice TV for developers on azure

01:11:19,470 --> 01:11:23,820
and what i wanted to do in this session

01:11:21,840 --> 01:11:25,530
today is I'm going to give you some of

01:11:23,820 --> 01:11:29,160
the hints and tips or more generic for

01:11:25,530 --> 01:11:30,810
developers so you as a developer as an

01:11:29,160 --> 01:11:33,270
administrator what could you do with

01:11:30,810 --> 01:11:36,780
windows add your to make it useful for

01:11:33,270 --> 01:11:39,210
you our group has a blog

01:11:36,780 --> 01:11:41,820
interoperability of Microsoft we are

01:11:39,210 --> 01:11:42,990
mainly concerned with standards so we

01:11:41,820 --> 01:11:47,420
work with a lot of standards and work

01:11:42,990 --> 01:11:51,300
the waist this community we have a few

01:11:47,420 --> 01:11:53,850
Apache members and some VPS who have

01:11:51,300 --> 01:11:58,440
joined janu go rivoli know is one of our

01:11:53,850 --> 01:11:59,430
members Ross gargler as well but like I

01:11:58,440 --> 01:12:01,680
say we have a group that's part of

01:11:59,430 --> 01:12:06,300
standards we have a part of anjel ISM

01:12:01,680 --> 01:12:07,770
and developer platforms as well so what

01:12:06,300 --> 01:12:13,190
I want to show you today how many people

01:12:07,770 --> 01:12:18,380
know about vm depot nobody oh good okay

01:12:13,190 --> 01:12:21,210
well this is good to know vm depot is a

01:12:18,380 --> 01:12:24,060
website that we put together to create

01:12:21,210 --> 01:12:25,890
virtual machines so on windows azure

01:12:24,060 --> 01:12:28,530
you've got information out of

01:12:25,890 --> 01:12:30,990
infrastructures of service platform as a

01:12:28,530 --> 01:12:33,960
service software as a service along the

01:12:30,990 --> 01:12:35,640
lines of amazon and other providers but

01:12:33,960 --> 01:12:39,300
one of the things we were missing was a

01:12:35,640 --> 01:12:42,270
way to create and share virtual machine

01:12:39,300 --> 01:12:44,880
images snapshots so you can create for

01:12:42,270 --> 01:12:47,970
example right now working with someone

01:12:44,880 --> 01:12:53,790
to create a Cassandra image running on

01:12:47,970 --> 01:12:56,400
Linux and put that out on vm Depot all

01:12:53,790 --> 01:12:57,790
the images on vm depot there are quite a

01:12:56,400 --> 01:12:59,830
few here

01:12:57,790 --> 01:13:03,010
I think there's about two or three

01:12:59,830 --> 01:13:05,050
hundred now are mostly open source

01:13:03,010 --> 01:13:06,430
packages running on and they all run a

01:13:05,050 --> 01:13:08,470
linux there's nothing to hear the runs

01:13:06,430 --> 01:13:10,210
on windows or anything like that you can

01:13:08,470 --> 01:13:13,090
create them there's no charge to create

01:13:10,210 --> 01:13:14,410
images share images you can brand them

01:13:13,090 --> 01:13:18,760
any way you want we don't have any

01:13:14,410 --> 01:13:21,580
control over it we have a few basic

01:13:18,760 --> 01:13:24,790
rules that most people are going to

01:13:21,580 --> 01:13:26,590
follow in terms of content it has to be

01:13:24,790 --> 01:13:30,580
in those images and things like that or

01:13:26,590 --> 01:13:33,160
cannot be in those images and you can

01:13:30,580 --> 01:13:34,990
basically create them share them there's

01:13:33,160 --> 01:13:38,760
all kinds of information out here on how

01:13:34,990 --> 01:13:42,580
to do that you create your own account

01:13:38,760 --> 01:13:46,000
let me give you an example here so as I

01:13:42,580 --> 01:13:52,000
said we're working with a vendor right

01:13:46,000 --> 01:13:54,130
now to create a Cassandra image here's

01:13:52,000 --> 01:13:57,730
another image that we just recently put

01:13:54,130 --> 01:14:02,050
out there drupal image was put out by a

01:13:57,730 --> 01:14:05,500
business partner they created an o data

01:14:02,050 --> 01:14:07,690
module that makes any Drupal everybody

01:14:05,500 --> 01:14:10,690
familiar though data it's just an easy

01:14:07,690 --> 01:14:13,120
way to access data from any data source

01:14:10,690 --> 01:14:17,880
using URLs and things like that it's an

01:14:13,120 --> 01:14:21,090
oasis standard and in this case what

01:14:17,880 --> 01:14:26,050
these guys did show you the image is

01:14:21,090 --> 01:14:27,940
they created is there they created a

01:14:26,050 --> 01:14:31,060
drupal and o data image so if you have a

01:14:27,940 --> 01:14:33,340
drupal website out there you can plug in

01:14:31,060 --> 01:14:36,490
a module instantly becomes a node data

01:14:33,340 --> 01:14:38,320
provider so right away you can do things

01:14:36,490 --> 01:14:40,120
of that so the idea is you could take

01:14:38,320 --> 01:14:42,580
for example I use the example in

01:14:40,120 --> 01:14:46,440
Cassandra earlier you could take a Linux

01:14:42,580 --> 01:14:48,580
image you could create a Cassandra

01:14:46,440 --> 01:14:50,680
instance on that image and then you can

01:14:48,580 --> 01:14:52,300
load something else on an image that you

01:14:50,680 --> 01:14:53,440
might have developed or you might be

01:14:52,300 --> 01:14:55,210
wanting to share with a whole bunch of

01:14:53,440 --> 01:14:57,100
people and you can put it out on vm

01:14:55,210 --> 01:14:58,750
depot and say hey everybody you can have

01:14:57,100 --> 01:15:03,570
a look at this you can share it and what

01:14:58,750 --> 01:15:03,570
happens is that image is is

01:15:04,860 --> 01:15:13,719
built with a deployment script that you

01:15:09,730 --> 01:15:15,040
are able to use to put on Azure one

01:15:13,719 --> 01:15:16,870
thing I should say about Windows Azure I

01:15:15,040 --> 01:15:20,500
don't know if anybody's all that

01:15:16,870 --> 01:15:25,660
familiar about it with it windows azure

01:15:20,500 --> 01:15:27,880
is it has a free 90-day trial and you're

01:15:25,660 --> 01:15:29,260
allowed right now up to 10 websites on

01:15:27,880 --> 01:15:31,810
Windows Azure anything could be on the

01:15:29,260 --> 01:15:32,920
websites for a year now a year they've

01:15:31,810 --> 01:15:33,880
been talking about that for a while so

01:15:32,920 --> 01:15:36,850
it's probably going to be the rest of

01:15:33,880 --> 01:15:39,489
2013 but it's all free to do this so you

01:15:36,850 --> 01:15:41,410
can free get a free account create

01:15:39,489 --> 01:15:43,960
images share images deploy them and just

01:15:41,410 --> 01:15:45,940
try images out one of the examples we

01:15:43,960 --> 01:15:48,489
were talking to a few people about here

01:15:45,940 --> 01:15:52,270
is sometimes when you do a tutorial on a

01:15:48,489 --> 01:15:54,280
new platform the instructions on setting

01:15:52,270 --> 01:15:55,570
up the platforms for the tutorial or you

01:15:54,280 --> 01:15:58,540
know ten times longer than the actual

01:15:55,570 --> 01:16:00,550
tutorial itself so what you could do is

01:15:58,540 --> 01:16:02,170
you could set everything up on a linux

01:16:00,550 --> 01:16:04,870
server exactly the way you want it and

01:16:02,170 --> 01:16:07,540
then there's some easy steps basically

01:16:04,870 --> 01:16:08,800
so far people who've never created an

01:16:07,540 --> 01:16:11,170
image before it usually takes them three

01:16:08,800 --> 01:16:14,620
or four days to create the first image

01:16:11,170 --> 01:16:15,790
and take a snapshot of that linux server

01:16:14,620 --> 01:16:18,640
that you've created with all those

01:16:15,790 --> 01:16:19,900
components put together put it out here

01:16:18,640 --> 01:16:21,880
and then share with the community

01:16:19,900 --> 01:16:23,949
everyone can download it and start

01:16:21,880 --> 01:16:25,239
working with that tutorial right away so

01:16:23,949 --> 01:16:27,300
so it's a quick and easy way and

01:16:25,239 --> 01:16:31,239
everyone gets 90 days free trial and

01:16:27,300 --> 01:16:35,230
even after that it's fairly affordable

01:16:31,239 --> 01:16:39,880
to to use for example for a tutorial

01:16:35,230 --> 01:16:44,519
briefly to go in and it'll be certain

01:16:39,880 --> 01:16:46,960
coffee money sort of prices not not

01:16:44,519 --> 01:16:49,510
not a night out on the town kind of

01:16:46,960 --> 01:16:54,099
money to run that tutorial on your your

01:16:49,510 --> 01:16:56,619
own account so I want to give you an

01:16:54,099 --> 01:17:00,070
example here oh the other thing i want

01:16:56,619 --> 01:17:03,090
to show you so that's vm depot so it's

01:17:00,070 --> 01:17:06,210
an easy way to create and share images

01:17:03,090 --> 01:17:09,909
there's also an easy way to create and

01:17:06,210 --> 01:17:13,449
use websites and i don't know if anybody

01:17:09,909 --> 01:17:15,070
has ever seen this so on azure you've

01:17:13,449 --> 01:17:18,340
got for example you can create a website

01:17:15,070 --> 01:17:21,900
from gallery we've got a punch of pre

01:17:18,340 --> 01:17:21,900
name pre-made websites yes

01:17:30,510 --> 01:17:37,180
they have to sign up for an account yeah

01:17:32,680 --> 01:17:39,910
yeah but yes they do it's a vhd image

01:17:37,180 --> 01:17:42,160
and if we create a deployment script

01:17:39,910 --> 01:17:44,170
that goes and deploys out onto widows

01:17:42,160 --> 01:17:46,110
windows azure for you but yes everyone

01:17:44,170 --> 01:17:50,770
has to have a Windows Azure trial a

01:17:46,110 --> 01:17:52,060
trial or full account to do that here's

01:17:50,770 --> 01:17:55,810
some of the packages that you can

01:17:52,060 --> 01:17:57,850
install fairly easily and I know this

01:17:55,810 --> 01:18:00,820
you know for the Apache crowd this might

01:17:57,850 --> 01:18:02,710
not be as interesting but you can either

01:18:00,820 --> 01:18:05,410
create a base website which is just a

01:18:02,710 --> 01:18:09,400
build basically or you can create one of

01:18:05,410 --> 01:18:10,570
these images for a website as well so

01:18:09,400 --> 01:18:14,380
the reason why i want to show you this

01:18:10,570 --> 01:18:16,930
is let's say you have a multi-tier

01:18:14,380 --> 01:18:20,080
application that you want to deploy on a

01:18:16,930 --> 01:18:21,790
cloud service somewhere you could use vm

01:18:20,080 --> 01:18:25,120
depot for the back end you can create a

01:18:21,790 --> 01:18:26,830
linux server you can actually set up

01:18:25,120 --> 01:18:28,840
everything you need for that server

01:18:26,830 --> 01:18:30,250
including connection strings and things

01:18:28,840 --> 01:18:32,140
like that then you can go over here and

01:18:30,250 --> 01:18:33,780
you can set up an easy website you can

01:18:32,140 --> 01:18:36,940
even use one of our pre-made

01:18:33,780 --> 01:18:40,300
configurations for that website and use

01:18:36,940 --> 01:18:43,390
that as your middle tier for web browser

01:18:40,300 --> 01:18:45,790
applications and i'm going to show you a

01:18:43,390 --> 01:18:48,730
few tricks for hacking those as well so

01:18:45,790 --> 01:18:50,230
these are easy to load i should say

01:18:48,730 --> 01:18:51,790
about the vm depot images once you

01:18:50,230 --> 01:18:54,250
create an image it becomes

01:18:51,790 --> 01:18:57,820
infrastructure-as-a-service image on

01:18:54,250 --> 01:19:02,590
azure you can get in via windows remote

01:18:57,820 --> 01:19:05,410
desktop rdp ssh putty anything you want

01:19:02,590 --> 01:19:07,510
to get in to that application with it's

01:19:05,410 --> 01:19:09,730
basically your server so you can

01:19:07,510 --> 01:19:12,120
configure it that's not the same

01:19:09,730 --> 01:19:14,260
flexibility you have with these websites

01:19:12,120 --> 01:19:15,790
with the websites or some very

01:19:14,260 --> 01:19:17,800
specialized tricks you need to get into

01:19:15,790 --> 01:19:20,020
them so I'll show you what those are and

01:19:17,800 --> 01:19:21,940
so I won't make one right now but it

01:19:20,020 --> 01:19:23,080
takes about five minutes to set up one

01:19:21,940 --> 01:19:25,090
of these so if you want to set up a

01:19:23,080 --> 01:19:27,940
Drupal instance it's literally sort of

01:19:25,090 --> 01:19:29,890
like fisher-price sort of interface sort

01:19:27,940 --> 01:19:31,180
of the kids can do it if your mom wants

01:19:29,890 --> 01:19:35,020
to set up a website this is a great

01:19:31,180 --> 01:19:37,870
place to come and do it so not a lot of

01:19:35,020 --> 01:19:40,030
knowledge needed for this now the

01:19:37,870 --> 01:19:41,360
trade-off is you don't have a lot of

01:19:40,030 --> 01:19:43,670
flexibility on

01:19:41,360 --> 01:19:51,590
that website looks like but this example

01:19:43,670 --> 01:19:53,480
i want to show you yes well that's

01:19:51,590 --> 01:19:56,810
that's the thing so it's pretty well

01:19:53,480 --> 01:20:00,170
sandboxed so that the security is all

01:19:56,810 --> 01:20:02,570
built-in log in Active Directory you

01:20:00,170 --> 01:20:03,710
have to authenticate to get in here but

01:20:02,570 --> 01:20:06,110
in general you're building a website

01:20:03,710 --> 01:20:08,030
that then you know for example if you

01:20:06,110 --> 01:20:12,350
created a Drupal website or WordPress or

01:20:08,030 --> 01:20:14,090
net new core mediawiki website you have

01:20:12,350 --> 01:20:16,040
to know a little bit about that security

01:20:14,090 --> 01:20:18,800
on that platform but the only way to

01:20:16,040 --> 01:20:20,870
access it by default is through the web

01:20:18,800 --> 01:20:22,430
interface for that platform so for

01:20:20,870 --> 01:20:24,410
WordPress you set up your users through

01:20:22,430 --> 01:20:26,000
you've got a my sequel back in for that

01:20:24,410 --> 01:20:28,850
you need to know a little bit mighty

01:20:26,000 --> 01:20:30,800
single things like that one of the other

01:20:28,850 --> 01:20:32,690
interesting things this deployment tab

01:20:30,800 --> 01:20:34,700
here so you can create a website

01:20:32,690 --> 01:20:37,000
pre-configured that's not part of the

01:20:34,700 --> 01:20:40,490
gallery but it's a github website and

01:20:37,000 --> 01:20:42,020
you can actually publish that in this

01:20:40,490 --> 01:20:44,350
case this this website that we're

01:20:42,020 --> 01:20:47,240
looking at was published through github

01:20:44,350 --> 01:20:48,860
so you can actually publish directly to

01:20:47,240 --> 01:20:51,050
a windows as your website that way as

01:20:48,860 --> 01:20:54,020
well so you have some control over setup

01:20:51,050 --> 01:20:59,420
and security and things like that in

01:20:54,020 --> 01:21:03,560
advance let's see so that's just an

01:20:59,420 --> 01:21:06,290
example some of the things you can do as

01:21:03,560 --> 01:21:11,120
well to create those websites or github

01:21:06,290 --> 01:21:14,360
or other platforms you've got several

01:21:11,120 --> 01:21:15,920
different mobile several different SDKs

01:21:14,360 --> 01:21:18,620
that you might not know about nodejs

01:21:15,920 --> 01:21:20,840
know Jas is actually one of the pre-made

01:21:18,620 --> 01:21:24,490
web gallery sites that you can build in

01:21:20,840 --> 01:21:27,260
Windows Azure as well PHP Java Python

01:21:24,490 --> 01:21:29,620
Steve he's not here he was asking me

01:21:27,260 --> 01:21:32,090
about do we have a Python SDK for azure

01:21:29,620 --> 01:21:35,450
so let me back up a bit in just this

01:21:32,090 --> 01:21:37,040
place so a lot of talk goes into the

01:21:35,450 --> 01:21:39,800
cloud and things like that and people

01:21:37,040 --> 01:21:43,790
look at it like hardware and operating

01:21:39,800 --> 01:21:47,300
systems but what Microsoft's trying to

01:21:43,790 --> 01:21:49,640
do here is really build a integrated

01:21:47,300 --> 01:21:49,969
development environment as well on top

01:21:49,640 --> 01:21:52,909
of that

01:21:49,969 --> 01:21:55,249
so the idea is you have sort of the

01:21:52,909 --> 01:21:57,679
world's biggest development server that

01:21:55,249 --> 01:22:00,409
you can actually put things on and

01:21:57,679 --> 01:22:01,579
that's why the SDKs integrates so well

01:22:00,409 --> 01:22:03,590
that's why we're doing things like

01:22:01,579 --> 01:22:05,090
integrating with github and things that

01:22:03,590 --> 01:22:07,849
you wouldn't really expect Microsoft to

01:22:05,090 --> 01:22:09,050
do you know we'd usually go with you

01:22:07,849 --> 01:22:11,539
know you after you have visual studio

01:22:09,050 --> 01:22:13,519
therefore you know to get on to our as

01:22:11,539 --> 01:22:16,249
your platform things like that so we're

01:22:13,519 --> 01:22:18,710
trying to make this big development

01:22:16,249 --> 01:22:20,900
platform that you don't really need to

01:22:18,710 --> 01:22:23,360
worry about the back hand oh so you want

01:22:20,900 --> 01:22:24,619
to have replicas all over the world you

01:22:23,360 --> 01:22:26,809
want to have clusters you want to have a

01:22:24,619 --> 01:22:28,280
high availability sets those can all be

01:22:26,809 --> 01:22:30,260
configured behind the scenes using

01:22:28,280 --> 01:22:32,030
commands working with Chef and some

01:22:30,260 --> 01:22:34,249
other things obstacle to build chef

01:22:32,030 --> 01:22:36,739
recipes and cook books and things like

01:22:34,249 --> 01:22:38,659
that to help with deployment and set up

01:22:36,739 --> 01:22:41,690
and you can really concentrate

01:22:38,659 --> 01:22:43,940
outbuilding interesting apps so that's

01:22:41,690 --> 01:22:47,570
the reason behind the SDKs that's the

01:22:43,940 --> 01:22:49,960
reason behind a vm depot and some other

01:22:47,570 --> 01:22:49,960
things yes

01:22:56,930 --> 01:23:01,650
oh no they can't yes absolutely in fact

01:22:59,670 --> 01:23:23,640
you have to most of the coding that you

01:23:01,650 --> 01:23:25,560
need to do is needs to be offline okay

01:23:23,640 --> 01:23:27,300
so you can create whatever whatever you

01:23:25,560 --> 01:23:30,510
do now to build your applications and

01:23:27,300 --> 01:23:32,970
put them on github and the github is you

01:23:30,510 --> 01:23:35,250
steal your repository but you can deploy

01:23:32,970 --> 01:23:43,260
from github directly onto a website here

01:23:35,250 --> 01:23:46,200
so just one yes no problem no prob so

01:23:43,260 --> 01:23:49,590
you can create a deployment distribution

01:23:46,200 --> 01:23:52,020
you can actually put it on Azure and as

01:23:49,590 --> 01:23:53,400
you will know what to do with it now

01:23:52,020 --> 01:23:54,780
there's a few limitations i was saying

01:23:53,400 --> 01:23:57,120
about these websites they're fairly well

01:23:54,780 --> 01:23:58,590
sandboxed so security and things like

01:23:57,120 --> 01:24:00,030
that there's not a lot you can do to run

01:23:58,590 --> 01:24:01,530
things but i'll show you a few tricks

01:24:00,030 --> 01:24:04,110
that you can use behind the scenes to

01:24:01,530 --> 01:24:05,790
actually run some things this website

01:24:04,110 --> 01:24:07,980
that i was showed you just a second ago

01:24:05,790 --> 01:24:09,150
is actually the website i'm going to

01:24:07,980 --> 01:24:12,300
show you tomorrow it's a scheduling

01:24:09,150 --> 01:24:15,330
website this is it it has a couchdb back

01:24:12,300 --> 01:24:17,070
in and it has a website middle tier and

01:24:15,330 --> 01:24:18,720
then we've got the browser for the front

01:24:17,070 --> 01:24:21,750
end so it's a three-tier application

01:24:18,720 --> 01:24:23,190
that we deployed on on azure it's kind

01:24:21,750 --> 01:24:24,750
of interesting but I don't wanna go to

01:24:23,190 --> 01:24:31,470
that too much detail cover it tomorrow

01:24:24,750 --> 01:24:34,620
but it was all built by us at ms open

01:24:31,470 --> 01:24:36,420
Tek we put together a git repository we

01:24:34,620 --> 01:24:39,420
deployed it we distributed it to azure

01:24:36,420 --> 01:24:42,240
and it knows what to do one of the

01:24:39,420 --> 01:24:44,670
tricks is you have to run grunt Jas does

01:24:42,240 --> 01:24:46,560
anybody know what grunge ajs is it's a

01:24:44,670 --> 01:24:49,430
task manager it's an open source

01:24:46,560 --> 01:24:51,870
javascript server-side JavaScript tool

01:24:49,430 --> 01:24:53,840
so how do you get that started on a

01:24:51,870 --> 01:24:56,340
website when you're deploying it and get

01:24:53,840 --> 01:24:59,850
yes does have some kind of command line

01:24:56,340 --> 01:25:04,159
and is anyone here familiar with project

01:24:59,850 --> 01:25:06,949
kudu which is okay so out there and get

01:25:04,159 --> 01:25:09,820
what we've done is the web as your

01:25:06,949 --> 01:25:13,459
distribution files are actually based on

01:25:09,820 --> 01:25:16,999
project kudu and I showed you the j

01:25:13,459 --> 01:25:22,309
decays earlier one of the things you can

01:25:16,999 --> 01:25:27,349
do Oh what I just do I don't know there

01:25:22,309 --> 01:25:29,900
we go so did I say JDK SDKs earlier I've

01:25:27,349 --> 01:25:31,939
been working with Java all week so try

01:25:29,900 --> 01:25:37,159
to get ready for a Eclipse con in a

01:25:31,939 --> 01:25:39,289
month so the SDKs are the Windows Azure

01:25:37,159 --> 01:25:41,840
PowerShell and there's also a

01:25:39,289 --> 01:25:43,550
cross-platform command-line interface if

01:25:41,840 --> 01:25:45,110
you download this cross-platform

01:25:43,550 --> 01:25:48,199
command-line interface which works on

01:25:45,110 --> 01:25:50,449
macs Linux everything it actually allows

01:25:48,199 --> 01:25:54,800
you to have a command-line interface

01:25:50,449 --> 01:25:56,689
into into the azure websites and into

01:25:54,800 --> 01:25:59,570
the virtual machines everything so you

01:25:56,689 --> 01:26:01,159
can fire off scripts you can run for

01:25:59,570 --> 01:26:06,050
example grunge guess in the web app suit

01:26:01,159 --> 01:26:09,769
but in the web gallery tools that we

01:26:06,050 --> 01:26:11,929
have on the web sites now how do you

01:26:09,769 --> 01:26:13,280
automatically get it to run well there's

01:26:11,929 --> 01:26:14,209
some kudu scripts that you would

01:26:13,280 --> 01:26:17,479
actually put as part of your

01:26:14,209 --> 01:26:19,369
distribution in github and when you put

01:26:17,479 --> 01:26:20,929
that on your site as you're

01:26:19,369 --> 01:26:24,919
automatically deploys it including the

01:26:20,929 --> 01:26:26,599
github scripts and allows it to

01:26:24,919 --> 01:26:29,539
automatically run grunt jas so it's a

01:26:26,599 --> 01:26:31,630
nice way to pre-configure tools for end

01:26:29,539 --> 01:26:33,769
users or anyone else who wants to use

01:26:31,630 --> 01:26:36,559
some of your applications as your

01:26:33,769 --> 01:26:39,260
projects so a couple of different

01:26:36,559 --> 01:26:40,999
options there the web platform installer

01:26:39,260 --> 01:26:43,400
is another thing so if you want to get

01:26:40,999 --> 01:26:46,070
really into just reading things on Azure

01:26:43,400 --> 01:26:49,419
and this goes for any tool that you have

01:26:46,070 --> 01:26:52,249
including Java Python anything like that

01:26:49,419 --> 01:26:53,809
the web platform installer is something

01:26:52,249 --> 01:26:56,619
that Microsoft put together that allows

01:26:53,809 --> 01:26:59,719
you to actually automatically create

01:26:56,619 --> 01:27:02,840
install routines that automatically push

01:26:59,719 --> 01:27:03,530
things to the cloud from the command not

01:27:02,840 --> 01:27:05,389
from a command

01:27:03,530 --> 01:27:09,559
from an exe or something on your local

01:27:05,389 --> 01:27:13,460
machine webmatrix is a tool that you can

01:27:09,559 --> 01:27:16,340
use to actually manage these files as

01:27:13,460 --> 01:27:19,880
well it's a free tool out on the web it

01:27:16,340 --> 01:27:21,920
only runs on windows though so but

01:27:19,880 --> 01:27:27,469
basically you can actually manipulate

01:27:21,920 --> 01:27:29,570
files on your websites as well that's

01:27:27,469 --> 01:27:31,610
webmatrix so I showed you a project kudu

01:27:29,570 --> 01:27:35,150
as well and I've showed you the

01:27:31,610 --> 01:27:36,980
conference I think this is about it so

01:27:35,150 --> 01:27:38,420
just to wrap up so what I wanted to show

01:27:36,980 --> 01:27:40,699
you was some of the things we have we

01:27:38,420 --> 01:27:44,090
have vm depot we're looking for people

01:27:40,699 --> 01:27:46,250
to create virtual machine images on vm

01:27:44,090 --> 01:27:48,590
depot if anyone is interested in doing

01:27:46,250 --> 01:27:50,469
that please let me know we can help you

01:27:48,590 --> 01:27:52,820
we can help promote your images as well

01:27:50,469 --> 01:27:54,770
and we can help distribute them and

01:27:52,820 --> 01:27:57,619
we'll get them built in the first place

01:27:54,770 --> 01:27:59,960
so also I wanted to show you the web

01:27:57,619 --> 01:28:02,119
sites how easy it is to create a website

01:27:59,960 --> 01:28:03,980
and then how to manipulate it through

01:28:02,119 --> 01:28:05,929
the back ends it's real briefly this is

01:28:03,980 --> 01:28:07,460
I can probably go into this for hours

01:28:05,929 --> 01:28:10,070
and show you the different code and

01:28:07,460 --> 01:28:12,110
things like that but for now that's

01:28:10,070 --> 01:28:14,690
that's what you need to know some of the

01:28:12,110 --> 01:28:17,630
SDKs and the command line tools for

01:28:14,690 --> 01:28:20,030
forgetting things done in Azure the web

01:28:17,630 --> 01:28:23,780
platform installer the web matrix and

01:28:20,030 --> 01:28:26,739
the project kudu is what platform

01:28:23,780 --> 01:28:29,929
installer the command line interface and

01:28:26,739 --> 01:28:31,670
a lot of tools in webmatrix are based on

01:28:29,929 --> 01:28:33,409
so if you want to get into the behind

01:28:31,670 --> 01:28:35,300
the scenes code it's all open source you

01:28:33,409 --> 01:28:37,789
can get that from github as well so a

01:28:35,300 --> 01:28:39,289
few ways to sort of hack Azure and like

01:28:37,789 --> 01:28:41,329
I say you've got 90 day free trial that

01:28:39,289 --> 01:28:44,480
he wants to try it but it is a big

01:28:41,329 --> 01:28:48,309
platform for development and it's kind

01:28:44,480 --> 01:28:48,309
of interesting yes so

01:28:49,349 --> 01:28:55,269
they're all linux-based yeah we wanted

01:28:52,840 --> 01:28:57,820
to make sure that there was a facility

01:28:55,269 --> 01:29:00,249
for having these images to share on

01:28:57,820 --> 01:29:01,690
Azure you know Asher is taking a

01:29:00,249 --> 01:29:05,050
different approach than you might expect

01:29:01,690 --> 01:29:09,010
Microsoft to take obviously we are

01:29:05,050 --> 01:29:10,659
looking at open source and we are not

01:29:09,010 --> 01:29:12,369
just looking at open source we're fully

01:29:10,659 --> 01:29:14,650
supporting open source and we're behind

01:29:12,369 --> 01:29:17,710
the community as much as some canvas why

01:29:14,650 --> 01:29:20,050
we're here in Oz khan and drupalcon all

01:29:17,710 --> 01:29:22,179
kinds of other projects as well

01:29:20,050 --> 01:29:24,309
standard-based commercial products

01:29:22,179 --> 01:29:26,349
anything we can put on there and of

01:29:24,309 --> 01:29:27,760
course you know our interest in that is

01:29:26,349 --> 01:29:28,900
people are going to run things we're

01:29:27,760 --> 01:29:31,599
going to have storage we're going to

01:29:28,900 --> 01:29:35,349
have activity that we that we built for

01:29:31,599 --> 01:29:39,010
but really it's not it's not a religious

01:29:35,349 --> 01:29:40,690
issue at all in terms of the operating

01:29:39,010 --> 01:29:43,050
system or any of the tools that we put

01:29:40,690 --> 01:29:43,050
on there

01:29:47,230 --> 01:29:54,239
Mac here but across platform compatible

01:29:49,450 --> 01:29:54,239
developments way I take a PMI that's got

01:29:55,920 --> 01:29:58,580
see

01:30:03,690 --> 01:30:08,320
looks like I won't be able to do that

01:30:05,560 --> 01:30:12,159
imagine because you actually go ahead we

01:30:08,320 --> 01:30:16,480
noticed am I said I game oh well not at

01:30:12,159 --> 01:30:19,320
the vm depot but i'm not sure about that

01:30:16,480 --> 01:30:22,750
i think any infrastructure as a service

01:30:19,320 --> 01:30:28,480
offering that we have when you create

01:30:22,750 --> 01:30:34,830
those let me see here i think we do if

01:30:28,480 --> 01:30:39,690
you look at for example new app services

01:30:34,830 --> 01:30:39,690
virtual machine from gallery

01:30:53,360 --> 01:30:57,510
right yeah now that would work well on

01:30:55,980 --> 01:30:59,040
the back end you could use the infrared

01:30:57,510 --> 01:31:01,080
infrastructure-as-a-service and then as

01:30:59,040 --> 01:31:03,030
a front end the website so these are

01:31:01,080 --> 01:31:07,620
some of the platform options that you

01:31:03,030 --> 01:31:12,060
have let me do this again as magnifier

01:31:07,620 --> 01:31:13,260
tools kind of works out there it is so

01:31:12,060 --> 01:31:16,560
see here's some of the options you have

01:31:13,260 --> 01:31:18,840
got these pre-configured virtual machine

01:31:16,560 --> 01:31:21,600
images that you can use as a base so you

01:31:18,840 --> 01:31:24,150
got windows server 2012 you know if

01:31:21,600 --> 01:31:26,179
you're working in a operation right now

01:31:24,150 --> 01:31:28,890
that doesn't have windows server 2012

01:31:26,179 --> 01:31:31,110
imagine that you could actually come out

01:31:28,890 --> 01:31:32,790
here and get a virtual machine to start

01:31:31,110 --> 01:31:34,830
testing things before you deploy an

01:31:32,790 --> 01:31:37,350
upgrade and things like that so these

01:31:34,830 --> 01:31:38,699
are some of the the pre-made platforms

01:31:37,350 --> 01:31:42,480
we've got a sequel server so sequel

01:31:38,699 --> 01:31:44,010
server runs on Windows 2012 and there's

01:31:42,480 --> 01:31:48,000
also some linux ones which i wish i

01:31:44,010 --> 01:31:50,699
could show ya where are they but there

01:31:48,000 --> 01:31:53,969
we go Susie linux ubuntu so we have this

01:31:50,699 --> 01:31:57,690
concept of endorsed linux there are

01:31:53,969 --> 01:32:01,110
three santos suse linux and a boon to

01:31:57,690 --> 01:32:04,590
those are the 4 i'm sorry the for the

01:32:01,110 --> 01:32:06,659
three endorsed linux images that we

01:32:04,590 --> 01:32:09,150
provide support through third parties

01:32:06,659 --> 01:32:10,760
for so you could actually create out on

01:32:09,150 --> 01:32:15,090
the infrastructure as a service a

01:32:10,760 --> 01:32:17,219
windows image or limiting it probably be

01:32:15,090 --> 01:32:19,730
able to run the things you you're

01:32:17,219 --> 01:32:19,730
looking to run

01:32:22,160 --> 01:32:36,750
any other questions okay yeah the

01:32:34,500 --> 01:32:39,150
windows server is there's a license roll

01:32:36,750 --> 01:32:42,660
into the time that you spend you don't

01:32:39,150 --> 01:32:45,030
have to and if you have if you have

01:32:42,660 --> 01:32:46,770
through a greement or some other way an

01:32:45,030 --> 01:32:48,870
on-premise license that you have for

01:32:46,770 --> 01:32:51,930
Windows Server depending on the version

01:32:48,870 --> 01:32:54,660
you can use that on you can actually use

01:32:51,930 --> 01:32:56,250
that license on here and there won't be

01:32:54,660 --> 01:33:03,050
any additional charges for the license

01:32:56,250 --> 01:33:07,130
portion of that yeah other questions no

01:33:03,050 --> 01:33:07,130

YouTube URL: https://www.youtube.com/watch?v=HDN9stMC2C8


