Title: Scripting Apache OpenOffice
Publication date: 2013-10-17
Playlist: Apachecon NA 2013 - day 2
Description: 
	Rony G. Flatscher
ApacheCon NA 2013
Open Office
Captions: 
	00:00:00,949 --> 00:00:05,549
so good afternoon welcome to this

00:00:03,720 --> 00:00:08,940
presentation about scripting apache

00:00:05,549 --> 00:00:11,120
openoffice if you have questions while

00:00:08,940 --> 00:00:14,880
the presentation is going on please

00:00:11,120 --> 00:00:18,390
interrupt me and step forward I have

00:00:14,880 --> 00:00:20,119
about eighty five slides so you can

00:00:18,390 --> 00:00:23,640
imagine that this is a quite

00:00:20,119 --> 00:00:27,750
comprehensive introduction on how to

00:00:23,640 --> 00:00:30,300
program script openoffice but this

00:00:27,750 --> 00:00:32,040
lights are created in a way that once

00:00:30,300 --> 00:00:34,350
you got the first part of the

00:00:32,040 --> 00:00:36,870
presentation you will be able to

00:00:34,350 --> 00:00:38,540
understand it on your own also so there

00:00:36,870 --> 00:00:41,250
is no need for me if you have questions

00:00:38,540 --> 00:00:44,340
to hurry up to get through all the

00:00:41,250 --> 00:00:46,410
slides ok so it the purpose of this

00:00:44,340 --> 00:00:49,110
light is also to document it and to

00:00:46,410 --> 00:00:52,640
allow you to look up different

00:00:49,110 --> 00:00:55,649
possibilities later on and transcribe

00:00:52,640 --> 00:00:59,100
the natural examples to your programming

00:00:55,649 --> 00:01:02,120
language ok this is the plan first an

00:00:59,100 --> 00:01:05,880
oval you a bird is overview of the

00:01:02,120 --> 00:01:08,189
architecture of apache openoffice then

00:01:05,880 --> 00:01:12,240
we concentrate on scripting programming

00:01:08,189 --> 00:01:14,880
apache openoffice how is this in

00:01:12,240 --> 00:01:17,340
principle being done and then there are

00:01:14,880 --> 00:01:19,950
quite a few natural examples little

00:01:17,340 --> 00:01:23,759
programs that are running into something

00:01:19,950 --> 00:01:28,619
useful as it meant as a stepping stone

00:01:23,759 --> 00:01:31,890
and helping interested programmers to

00:01:28,619 --> 00:01:34,259
approach the broker say-so of openoffice

00:01:31,890 --> 00:01:37,229
the spreadsheet or the presentation

00:01:34,259 --> 00:01:40,380
module and interact with it

00:01:37,229 --> 00:01:42,810
programmatically it it around up and

00:01:40,380 --> 00:01:48,090
there are links at the end to various

00:01:42,810 --> 00:01:51,030
areas of programming openoffice now

00:01:48,090 --> 00:01:54,210
let's start first with the birds view of

00:01:51,030 --> 00:01:56,759
a open office open offices the set of

00:01:54,210 --> 00:01:58,560
services that may contain interfaces

00:01:56,759 --> 00:02:01,530
with attributes other services

00:01:58,560 --> 00:02:04,799
structures or properties so this is a

00:02:01,530 --> 00:02:07,619
very generic abstract definition but it

00:02:04,799 --> 00:02:12,150
really describes what open office is all

00:02:07,619 --> 00:02:14,670
about what is also interesting

00:02:12,150 --> 00:02:18,870
is a true object oriented design applied

00:02:14,670 --> 00:02:20,819
to all of openoffice which means that

00:02:18,870 --> 00:02:23,370
all common functionality of all types of

00:02:20,819 --> 00:02:26,189
documents is extracted and organized as

00:02:23,370 --> 00:02:28,670
a set of interfaces that define methods

00:02:26,189 --> 00:02:31,400
and possibly attributes so for instance

00:02:28,670 --> 00:02:34,200
loading saving printing documents

00:02:31,400 --> 00:02:36,269
specific functions functionalities that

00:02:34,200 --> 00:02:41,849
could be extracted and then grouped

00:02:36,269 --> 00:02:43,859
together in so-called interfaces what is

00:02:41,849 --> 00:02:46,379
also important from a bird eyes view

00:02:43,859 --> 00:02:48,359
services are created and get managed by

00:02:46,379 --> 00:02:52,200
service managers that are supplied with

00:02:48,359 --> 00:02:54,359
openoffice the next thing which might be

00:02:52,200 --> 00:02:57,120
interesting is that open office is a

00:02:54,359 --> 00:03:02,280
client-server application and

00:02:57,120 --> 00:03:05,480
communicates via tcp/ip so it employs

00:03:02,280 --> 00:03:08,459
distributable components in principle

00:03:05,480 --> 00:03:10,409
where we have an actual acronym to which

00:03:08,459 --> 00:03:13,680
I come back in a minute called you know

00:03:10,409 --> 00:03:16,079
you well welcome back in a minute server

00:03:13,680 --> 00:03:20,040
can run on any computer in the world

00:03:16,079 --> 00:03:22,500
they're open office server part and the

00:03:20,040 --> 00:03:24,389
client maybe even on a different

00:03:22,500 --> 00:03:29,549
computer on the other side of the world

00:03:24,389 --> 00:03:31,440
and it would work okay it just happens

00:03:29,549 --> 00:03:32,909
to be the case that if you install open

00:03:31,440 --> 00:03:34,949
office that the server and the client

00:03:32,909 --> 00:03:40,470
part are installed in the same machine

00:03:34,949 --> 00:03:42,690
which is interesting okay you know is

00:03:40,470 --> 00:03:45,180
the acronym for universal network

00:03:42,690 --> 00:03:47,129
objects it's a distributable

00:03:45,180 --> 00:03:49,109
interconnected infrastructure in the

00:03:47,129 --> 00:03:51,150
functionalities organized in the form of

00:03:49,109 --> 00:03:54,629
classes they are also dubbed you know

00:03:51,150 --> 00:03:58,169
classes one interesting part here is

00:03:54,629 --> 00:04:01,650
that all you know classes are documented

00:03:58,169 --> 00:04:03,659
in their structure in an in an interface

00:04:01,650 --> 00:04:08,489
description language actually originally

00:04:03,659 --> 00:04:10,319
in a text file Tim the communication

00:04:08,489 --> 00:04:12,690
among you know objects and you know

00:04:10,319 --> 00:04:16,320
components is carried out with a so

00:04:12,690 --> 00:04:19,229
called you know remote protocol using

00:04:16,320 --> 00:04:20,340
tcp/ip se as the transport and it's a

00:04:19,229 --> 00:04:24,810
coma-like

00:04:20,340 --> 00:04:26,790
on protocol so if you look from the

00:04:24,810 --> 00:04:30,180
distance at Open Office Open Office

00:04:26,790 --> 00:04:32,550
documents you see that the open office

00:04:30,180 --> 00:04:35,550
is in the middle and you have all kind

00:04:32,550 --> 00:04:40,190
of documents that open office is able to

00:04:35,550 --> 00:04:44,280
read create I did open office itself is

00:04:40,190 --> 00:04:46,740
originally a C++ application but then

00:04:44,280 --> 00:04:50,850
when son bought stuff is the original

00:04:46,740 --> 00:04:55,770
creator of opener of openoffice all of

00:04:50,850 --> 00:05:00,030
openoffice was also made available to

00:04:55,770 --> 00:05:03,210
drive a v8 Java bridge which costs are

00:05:00,030 --> 00:05:06,169
quite a few Java components to be

00:05:03,210 --> 00:05:09,180
created later on that became part of

00:05:06,169 --> 00:05:15,590
openoffice itself so open office is a

00:05:09,180 --> 00:05:18,840
combination of C++ and Java code now the

00:05:15,590 --> 00:05:21,750
generic term phone uno objects could be

00:05:18,840 --> 00:05:24,690
other components which may or combine

00:05:21,750 --> 00:05:27,360
different services for instance and they

00:05:24,690 --> 00:05:30,240
may communicate with each other you have

00:05:27,360 --> 00:05:34,169
a server you have a client and they are

00:05:30,240 --> 00:05:38,610
able to communicate via this you know

00:05:34,169 --> 00:05:40,950
remote protocol object-oriented design

00:05:38,610 --> 00:05:43,620
there are you know components that got

00:05:40,950 --> 00:05:46,830
defined and implemented and what

00:05:43,620 --> 00:05:50,430
actually happens from a conceptual point

00:05:46,830 --> 00:05:52,380
of view you pick you know components and

00:05:50,430 --> 00:05:55,919
combine them to create an application

00:05:52,380 --> 00:05:58,560
like the word processor the word

00:05:55,919 --> 00:06:04,680
processor the word processors name in

00:05:58,560 --> 00:06:06,930
OpenOffice is s writer now if you pick

00:06:04,680 --> 00:06:09,240
another combination of you know

00:06:06,930 --> 00:06:12,180
components you may create for instance a

00:06:09,240 --> 00:06:14,060
spreadsheet and if you look at different

00:06:12,180 --> 00:06:16,680
you know components of the same color

00:06:14,060 --> 00:06:19,139
then here's the attempt to communicate

00:06:16,680 --> 00:06:22,380
that it may be possible that that the

00:06:19,139 --> 00:06:24,410
same components are being used in

00:06:22,380 --> 00:06:28,080
different applications of openoffice

00:06:24,410 --> 00:06:29,880
which also means if you learn one of the

00:06:28,080 --> 00:06:33,240
functionality of one of those you know

00:06:29,880 --> 00:06:36,120
components in the word processor part 4

00:06:33,240 --> 00:06:38,720
things you already know how to use the

00:06:36,120 --> 00:06:40,650
very same component in the spreadsheet

00:06:38,720 --> 00:06:43,590
application or in the presentation

00:06:40,650 --> 00:06:46,979
application which is quite an

00:06:43,590 --> 00:06:50,400
interesting feature okay brothers view

00:06:46,979 --> 00:06:52,349
next service managers also sometimes

00:06:50,400 --> 00:06:55,610
that factories in the different

00:06:52,349 --> 00:06:57,690
documentation available for openoffice

00:06:55,610 --> 00:07:01,259
service managers are supplied for

00:06:57,690 --> 00:07:06,180
servers and you can usually get at a

00:07:01,259 --> 00:07:08,639
service manager by using the component

00:07:06,180 --> 00:07:11,580
context that is being created by Open

00:07:08,639 --> 00:07:13,860
Office and clearing it or in this case

00:07:11,580 --> 00:07:17,880
invoking a method that we return you the

00:07:13,860 --> 00:07:21,680
service manager service managers are

00:07:17,880 --> 00:07:25,620
used to request or create services and

00:07:21,680 --> 00:07:28,500
the return services which are the normal

00:07:25,620 --> 00:07:30,990
object allow you to assess part of the

00:07:28,500 --> 00:07:33,240
office functionality for instance there

00:07:30,990 --> 00:07:36,180
is a service called common that Thun

00:07:33,240 --> 00:07:39,719
that started frame the desktop which is

00:07:36,180 --> 00:07:41,580
a service you have condescended started

00:07:39,719 --> 00:07:44,610
configuration configuration provider

00:07:41,580 --> 00:07:46,949
which would be another service but you

00:07:44,610 --> 00:07:49,320
can see already that you would have a

00:07:46,949 --> 00:07:52,349
fully qualified you would have package

00:07:49,320 --> 00:07:54,810
names and the fully qualified name of a

00:07:52,349 --> 00:07:57,870
unit class looks as in this particular

00:07:54,810 --> 00:08:02,130
case as you are used to maybe from Java

00:07:57,870 --> 00:08:04,080
ok so the unqualified name of these you

00:08:02,130 --> 00:08:05,969
know class is representing services

00:08:04,080 --> 00:08:09,960
would be desktop configuration provider

00:08:05,969 --> 00:08:11,969
database context Kim from the

00:08:09,960 --> 00:08:16,050
documentation of open office you have

00:08:11,969 --> 00:08:18,479
this this picture of a service manager

00:08:16,050 --> 00:08:22,289
being a factory which can be used to

00:08:18,479 --> 00:08:25,169
create all kind of services services can

00:08:22,289 --> 00:08:27,659
be very comprehensive they may contain

00:08:25,169 --> 00:08:31,740
interfaces interfaces our group of

00:08:27,659 --> 00:08:35,219
methods and attributes other services

00:08:31,740 --> 00:08:37,010
and properties open office was created

00:08:35,219 --> 00:08:40,300
at a time where

00:08:37,010 --> 00:08:44,000
memory and banked with was very very low

00:08:40,300 --> 00:08:45,530
so there are many very efficient

00:08:44,000 --> 00:08:49,970
implementations and interesting

00:08:45,530 --> 00:08:53,210
architectural rules that have been

00:08:49,970 --> 00:08:56,990
applied one is if you get a service

00:08:53,210 --> 00:08:59,140
object you may not yet use all of the

00:08:56,990 --> 00:09:03,140
functionality of the service object

00:08:59,140 --> 00:09:07,190
rather in an intermediate step you need

00:09:03,140 --> 00:09:09,590
to query the interface that contains the

00:09:07,190 --> 00:09:12,680
functionality the methods that you wish

00:09:09,590 --> 00:09:14,360
to use and take advantage of so you

00:09:12,680 --> 00:09:17,240
would always have and constantly have

00:09:14,360 --> 00:09:20,000
the need to do query interfaces on

00:09:17,240 --> 00:09:21,740
service objects in order to get at the

00:09:20,000 --> 00:09:27,380
group of functionality that you wish to

00:09:21,740 --> 00:09:30,050
use and take advantage of depending on

00:09:27,380 --> 00:09:32,660
the desired ask the interfaces could be

00:09:30,050 --> 00:09:34,910
for instance comrades under the other do

00:09:32,660 --> 00:09:38,750
that it's printable the unqualified

00:09:34,910 --> 00:09:40,460
names are easier to to communicate so

00:09:38,750 --> 00:09:44,390
you would have X printable extraoral

00:09:40,460 --> 00:09:48,830
xtext document it's a convention in open

00:09:44,390 --> 00:09:50,930
office that interface classes always the

00:09:48,830 --> 00:09:54,530
unqualified name starts with the capital

00:09:50,930 --> 00:09:57,050
X it's not a must but it's been carried

00:09:54,530 --> 00:09:59,990
through throughout openoffice

00:09:57,050 --> 00:10:02,240
implementations so X printable obviously

00:09:59,990 --> 00:10:04,660
will organize the functionality the

00:10:02,240 --> 00:10:08,900
functions the methods for printing

00:10:04,660 --> 00:10:11,690
storable for saving x text document the

00:10:08,900 --> 00:10:16,160
interface functionality to get at the

00:10:11,690 --> 00:10:20,030
text of a document here's a little

00:10:16,160 --> 00:10:25,220
example of roditis example of two

00:10:20,030 --> 00:10:28,630
services with seven interfaces that this

00:10:25,220 --> 00:10:31,810
picture stems that follows from the

00:10:28,630 --> 00:10:35,900
documentation of the OpenOffice

00:10:31,810 --> 00:10:38,420
development toolkit and communication

00:10:35,900 --> 00:10:41,330
and you see that we have an office

00:10:38,420 --> 00:10:44,570
document which is this class here having

00:10:41,330 --> 00:10:48,440
four interfaces and you have a text

00:10:44,570 --> 00:10:50,339
document with three interfaces now from

00:10:48,440 --> 00:10:52,709
this notation you will

00:10:50,339 --> 00:10:56,129
see that the text document specializes

00:10:52,709 --> 00:10:57,779
in office document meaning that a text

00:10:56,129 --> 00:11:00,300
document of course where your

00:10:57,779 --> 00:11:03,899
inheritance will have all these

00:11:00,300 --> 00:11:06,240
abilities available to it as well now if

00:11:03,899 --> 00:11:08,160
you look at the office document you see

00:11:06,240 --> 00:11:10,740
you have the ex-principal the exterior

00:11:08,160 --> 00:11:15,269
of the X Torah bill the ex model and the

00:11:10,740 --> 00:11:18,480
x-mas fiber are interfaces so if you

00:11:15,269 --> 00:11:21,720
look at the X printable I read it here

00:11:18,480 --> 00:11:25,589
you have a method called get printer set

00:11:21,720 --> 00:11:28,559
printer and print so there are only

00:11:25,589 --> 00:11:30,240
three functions there but these three

00:11:28,559 --> 00:11:32,850
functions are available for all

00:11:30,240 --> 00:11:34,769
applications of openoffice and they are

00:11:32,850 --> 00:11:37,279
actually quite powerful you can

00:11:34,769 --> 00:11:40,529
configure whatever you wish to bring

00:11:37,279 --> 00:11:43,079
supplying proper collections of

00:11:40,529 --> 00:11:46,829
properties as an argument that's a

00:11:43,079 --> 00:11:51,899
reason why it's only necessary to supply

00:11:46,829 --> 00:11:54,269
these three functions story has

00:11:51,899 --> 00:11:56,999
obviously to do with storage of

00:11:54,269 --> 00:11:59,339
documents ex-model is interesting

00:11:56,999 --> 00:12:01,800
because it indicates that the user

00:11:59,339 --> 00:12:05,279
interface in OpenOffice follows the

00:12:01,800 --> 00:12:07,019
model-view-controller paradigm that was

00:12:05,279 --> 00:12:09,569
introduced originally with small talk

00:12:07,019 --> 00:12:12,749
many decades ago but has been so

00:12:09,569 --> 00:12:16,370
successful that has been deployed all

00:12:12,749 --> 00:12:19,110
over object-oriented infrastructures

00:12:16,370 --> 00:12:21,179
okay now if you look at the text

00:12:19,110 --> 00:12:24,480
document you see we have an interface x

00:12:21,179 --> 00:12:28,980
text document which interestingly only

00:12:24,480 --> 00:12:31,920
possesses two methods one is get text

00:12:28,980 --> 00:12:34,350
and one is reformat now one needs to be

00:12:31,920 --> 00:12:38,839
a little bit cautious because get text

00:12:34,350 --> 00:12:42,179
does not return the characters

00:12:38,839 --> 00:12:45,240
representing the document but represents

00:12:42,179 --> 00:12:48,809
other objects that can then be used to

00:12:45,240 --> 00:12:54,360
further drill down or manipulate text

00:12:48,809 --> 00:12:58,170
him okay you will have a searchable

00:12:54,360 --> 00:13:00,870
index refreshable interface I would like

00:12:58,170 --> 00:13:02,360
to draw your attention to this interface

00:13:00,870 --> 00:13:07,100
appear in the office talk

00:13:02,360 --> 00:13:11,180
it's modifiable which has two methods

00:13:07,100 --> 00:13:13,450
one is is modified so you can learn

00:13:11,180 --> 00:13:16,399
about the state of any document in

00:13:13,450 --> 00:13:19,130
OpenOffice because the office document

00:13:16,399 --> 00:13:21,220
will always be the superclass for word

00:13:19,130 --> 00:13:24,290
processors for spreadsheets for drawing

00:13:21,220 --> 00:13:26,540
documents or for presentation document

00:13:24,290 --> 00:13:30,350
so if you wish to learn whether a

00:13:26,540 --> 00:13:32,930
document was edited then you would first

00:13:30,350 --> 00:13:35,810
query the ex modifiable interface and

00:13:32,930 --> 00:13:38,240
then use that the method is modified

00:13:35,810 --> 00:13:42,200
returning to a false now if you

00:13:38,240 --> 00:13:44,600
programmatically created a document for

00:13:42,200 --> 00:13:47,709
whatever reasons it maybe sometimes

00:13:44,600 --> 00:13:50,420
interesting to throw the document away

00:13:47,709 --> 00:13:52,820
but if you close the document which is

00:13:50,420 --> 00:13:55,820
modified you will get an interactive

00:13:52,820 --> 00:13:58,010
pop-up dialog premiering the user

00:13:55,820 --> 00:13:59,660
whether the user really wants to throw

00:13:58,010 --> 00:14:02,570
this away because the document was

00:13:59,660 --> 00:14:04,339
modified so this is the other method

00:14:02,570 --> 00:14:07,130
that helps you in this case that

00:14:04,339 --> 00:14:09,170
modified and you can supply true or

00:14:07,130 --> 00:14:11,120
false and actually tell openoffice

00:14:09,170 --> 00:14:15,079
pretend the document is not modified

00:14:11,120 --> 00:14:16,870
because closing it afterwards does not

00:14:15,079 --> 00:14:19,310
cause this dialog to appear I'm

00:14:16,870 --> 00:14:22,220
stressing this so much because I have

00:14:19,310 --> 00:14:25,970
experienced in the past that many people

00:14:22,220 --> 00:14:28,310
are seeking this functionality they saw

00:14:25,970 --> 00:14:32,449
it but then they forgot about it because

00:14:28,310 --> 00:14:35,240
they were drowned in the functionalities

00:14:32,449 --> 00:14:37,279
that open office supplies and then they

00:14:35,240 --> 00:14:39,680
get into a serious troubles and actually

00:14:37,279 --> 00:14:41,990
if you know where to look it's easy so I

00:14:39,680 --> 00:14:44,120
hope by stressing it so much that you

00:14:41,990 --> 00:14:48,500
will never ever forget it and never lose

00:14:44,120 --> 00:14:51,380
time there ok the programming languages

00:14:48,500 --> 00:14:53,930
that you can use to a program open

00:14:51,380 --> 00:14:56,029
office or C++ of course because it's a

00:14:53,930 --> 00:14:59,480
language which was used to created in

00:14:56,029 --> 00:15:03,949
the first place Java there is a basic

00:14:59,480 --> 00:15:07,430
language that comes with open office and

00:15:03,949 --> 00:15:11,240
there's thai tom support for python out

00:15:07,430 --> 00:15:15,890
of the box c++ in java

00:15:11,240 --> 00:15:18,890
have the need to explicitly use a method

00:15:15,890 --> 00:15:21,260
called query interface to get a

00:15:18,890 --> 00:15:24,230
difunctional eated adult organizing

00:15:21,260 --> 00:15:26,270
those interfaces basic in Python have an

00:15:24,230 --> 00:15:28,970
implicit query interface behind the

00:15:26,270 --> 00:15:31,100
curtain if you wish so it is carried out

00:15:28,970 --> 00:15:35,330
but the programmers have no need to

00:15:31,100 --> 00:15:37,580
carry it out explicitly in ja in

00:15:35,330 --> 00:15:40,490
OpenOffice three dot zero a java-based

00:15:37,580 --> 00:15:44,120
scripting framework got introduced which

00:15:40,490 --> 00:15:46,220
in principle enables the addition of any

00:15:44,120 --> 00:15:50,300
scripting language that it here's to

00:15:46,220 --> 00:15:52,880
this Java framework for instance being

00:15:50,300 --> 00:15:55,700
Sharon is you indeed in the Java

00:15:52,880 --> 00:15:58,310
implementation of JavaScript are using

00:15:55,700 --> 00:16:00,680
this framework and this framework can be

00:15:58,310 --> 00:16:03,950
used for any scripting language even for

00:16:00,680 --> 00:16:06,649
non javascript in languages so for years

00:16:03,950 --> 00:16:08,540
an example where you have a scripting

00:16:06,649 --> 00:16:12,399
language which is usually unknown and

00:16:08,540 --> 00:16:16,339
unheard of called all Rex which itself

00:16:12,399 --> 00:16:21,589
needs query interfaces to be explicitly

00:16:16,339 --> 00:16:23,810
issued but it's being bound to open

00:16:21,589 --> 00:16:26,839
office and then made available in macro

00:16:23,810 --> 00:16:28,640
language using this java based scripting

00:16:26,839 --> 00:16:30,829
framework and you can do it with any

00:16:28,640 --> 00:16:33,850
language actually you just need to know

00:16:30,829 --> 00:16:36,230
that this infrastructure is there ok

00:16:33,850 --> 00:16:37,820
what is extremely important in

00:16:36,230 --> 00:16:40,310
openoffice programming is the

00:16:37,820 --> 00:16:42,470
documentation of openoffice there's a

00:16:40,310 --> 00:16:46,040
wealth of services and interfaces that

00:16:42,470 --> 00:16:48,890
are available to you I'm not a German

00:16:46,040 --> 00:16:51,529
I'm an Austrian so I may say that the

00:16:48,890 --> 00:16:54,709
entire open office was created in pure

00:16:51,529 --> 00:16:56,300
German engineering style so what they

00:16:54,709 --> 00:17:00,829
learned in the textbooks they would

00:16:56,300 --> 00:17:04,000
apply really to real-world situations

00:17:00,829 --> 00:17:08,030
and they did a beautiful job in creating

00:17:04,000 --> 00:17:11,059
object-oriented classes however there's

00:17:08,030 --> 00:17:13,640
a downside to this that because of the

00:17:11,059 --> 00:17:15,790
rich functionality of an office package

00:17:13,640 --> 00:17:18,589
like Open Office you have an

00:17:15,790 --> 00:17:21,709
unbelievable amount of classes that are

00:17:18,589 --> 00:17:23,870
available such that it be that you might

00:17:21,709 --> 00:17:24,390
run the risk to miss the forest for the

00:17:23,870 --> 00:17:26,250
trees

00:17:24,390 --> 00:17:29,310
because there is an overwhelming amount

00:17:26,250 --> 00:17:32,040
of classes functionality available to

00:17:29,310 --> 00:17:35,490
you for that reason documentation is so

00:17:32,040 --> 00:17:38,370
important here you have the links which

00:17:35,490 --> 00:17:40,860
link you directly to the official

00:17:38,370 --> 00:17:44,520
openoffice documentation which is a set

00:17:40,860 --> 00:17:47,550
of HTM interlinked HTML files comparable

00:17:44,520 --> 00:17:49,590
to Java Docs if you wish and if you know

00:17:47,550 --> 00:17:52,310
the entry points how to get there then

00:17:49,590 --> 00:17:58,040
it's rather easy to find the ways around

00:17:52,310 --> 00:18:02,100
so here is an example of the official

00:17:58,040 --> 00:18:04,410
documentation for all of the OpenOffice

00:18:02,100 --> 00:18:06,420
classes and on the top you will have a

00:18:04,410 --> 00:18:09,780
little bar where you have among other

00:18:06,420 --> 00:18:13,740
things a link to the index if you click

00:18:09,780 --> 00:18:16,170
that link you get a little bar with all

00:18:13,740 --> 00:18:20,760
the alphabetical letters and if you

00:18:16,170 --> 00:18:25,140
click on the X there you get to see to

00:18:20,760 --> 00:18:28,380
all the links to terms fields or classes

00:18:25,140 --> 00:18:31,470
that start with in X and if you know

00:18:28,380 --> 00:18:34,830
that the OpenOffice interfaces usually

00:18:31,470 --> 00:18:38,580
start with an X then you have a path

00:18:34,830 --> 00:18:41,570
here to quickly find the documentation

00:18:38,580 --> 00:18:44,520
to any interface in OpenOffice

00:18:41,570 --> 00:18:46,830
interestingly not too many people

00:18:44,520 --> 00:18:49,740
realize that and so they lose a lot of

00:18:46,830 --> 00:18:54,030
time if if they do it the hard way if

00:18:49,740 --> 00:18:55,710
you wish but this is hopefully a hint

00:18:54,030 --> 00:18:58,890
that will save you a lot of time if you

00:18:55,710 --> 00:19:02,910
look at it now on this slide you will

00:18:58,890 --> 00:19:06,750
see examples of applying this query in

00:19:02,910 --> 00:19:09,900
the query interface call to query an

00:19:06,750 --> 00:19:11,940
interface from the service object your

00:19:09,900 --> 00:19:15,230
query interface is always from service

00:19:11,940 --> 00:19:19,260
objects this example we have a service

00:19:15,230 --> 00:19:21,110
object of this type Condit's and that's

00:19:19,260 --> 00:19:24,540
not a friend at dispatch helper and

00:19:21,110 --> 00:19:28,680
assigned to a variable name s dispatch

00:19:24,540 --> 00:19:31,680
oppa s indicating service in inter in

00:19:28,680 --> 00:19:34,190
Java you would exercise the query

00:19:31,680 --> 00:19:38,299
interface this way with this

00:19:34,190 --> 00:19:41,330
service object you import the interface

00:19:38,299 --> 00:19:45,230
class which is the Java class available

00:19:41,330 --> 00:19:50,000
if you develop with Java and then you

00:19:45,230 --> 00:19:53,840
carry out a query interface using an

00:19:50,000 --> 00:19:56,090
object class the Cardinal run time where

00:19:53,840 --> 00:19:58,519
you supply the the interface class

00:19:56,090 --> 00:20:01,610
object is the first argument and as the

00:19:58,519 --> 00:20:05,779
second argument the service object

00:20:01,610 --> 00:20:07,960
itself and what gets returned is an

00:20:05,779 --> 00:20:10,789
object which has now the the

00:20:07,960 --> 00:20:13,279
functionality made available to you that

00:20:10,789 --> 00:20:15,289
is the interface class defines okay

00:20:13,279 --> 00:20:17,600
because it is strictly typed language

00:20:15,289 --> 00:20:20,120
you need to cast are such that

00:20:17,600 --> 00:20:23,690
everything in the compiler everyone is

00:20:20,120 --> 00:20:25,700
happy here is an example in how you

00:20:23,690 --> 00:20:28,549
would carry out the query interface in

00:20:25,700 --> 00:20:31,009
JavaScript you import all the X dispatch

00:20:28,549 --> 00:20:33,830
helper class and you use the you know

00:20:31,009 --> 00:20:37,220
runtime as in Java to query the

00:20:33,830 --> 00:20:41,059
interface the decide interface from the

00:20:37,220 --> 00:20:43,580
service object here you see an example

00:20:41,059 --> 00:20:47,120
in a scripting language that is called

00:20:43,580 --> 00:20:49,850
all Rex the thingy on the in this

00:20:47,120 --> 00:20:52,190
example is you have the service object

00:20:49,850 --> 00:20:54,200
and you send it the message and the

00:20:52,190 --> 00:20:57,590
message name is the name of the

00:20:54,200 --> 00:20:59,720
interface class now the tilde here that

00:20:57,590 --> 00:21:02,720
you see is an explicit message operator

00:20:59,720 --> 00:21:05,539
with object Rex I just mention it

00:21:02,720 --> 00:21:07,909
because all the examples you we see that

00:21:05,539 --> 00:21:10,789
for yourself look like pseudo code but

00:21:07,909 --> 00:21:12,230
are in the o.r x2 in Turks and if you

00:21:10,789 --> 00:21:13,970
know that the tilde is a message

00:21:12,230 --> 00:21:16,759
operator you can deceive for those

00:21:13,970 --> 00:21:19,549
programs and then translate what these

00:21:16,759 --> 00:21:25,039
programs through easily to Java C++

00:21:19,549 --> 00:21:29,240
Python basic ok there is a simpler way

00:21:25,039 --> 00:21:32,000
in the RX support you are you are able

00:21:29,240 --> 00:21:35,210
to just apply the unqualified name of

00:21:32,000 --> 00:21:37,519
the interface such that you can also use

00:21:35,210 --> 00:21:39,740
s dispatch I report with the ex dispatch

00:21:37,519 --> 00:21:43,669
helper and then you get the interface

00:21:39,740 --> 00:21:46,009
object in principle there are two

00:21:43,669 --> 00:21:46,830
different ways how to program patchy

00:21:46,009 --> 00:21:49,860
open office

00:21:46,830 --> 00:21:52,590
some standalone from outside the open

00:21:49,860 --> 00:21:54,809
office so what you need to do in this

00:21:52,590 --> 00:21:57,419
case is you need to bootstrap openoffice

00:21:54,809 --> 00:22:00,240
the infrastructure such that you can

00:21:57,419 --> 00:22:04,309
then get in touch with an infrastructure

00:22:00,240 --> 00:22:06,899
to control it later on this kind of

00:22:04,309 --> 00:22:10,320
programming openoffice allows you also

00:22:06,899 --> 00:22:12,360
to easily determine with which

00:22:10,320 --> 00:22:14,700
openoffice servers you wish to contact

00:22:12,360 --> 00:22:18,299
and to which which ones when you want to

00:22:14,700 --> 00:22:22,409
use and the second one is the one that

00:22:18,299 --> 00:22:25,169
is dispatched from the inside of a

00:22:22,409 --> 00:22:28,649
running Open Office which is many times

00:22:25,169 --> 00:22:31,470
also called macro macro program that you

00:22:28,649 --> 00:22:33,510
dispatch from within open office so in

00:22:31,470 --> 00:22:35,299
this case open office supplies the

00:22:33,510 --> 00:22:38,330
script context that allows you to access

00:22:35,299 --> 00:22:41,039
the initialized open office environment

00:22:38,330 --> 00:22:43,220
like the desktop object which is a very

00:22:41,039 --> 00:22:46,950
important object for documents

00:22:43,220 --> 00:22:50,000
getcomponent the context information

00:22:46,950 --> 00:22:52,260
object that is in effect and the

00:22:50,000 --> 00:22:54,350
document for which the dispatch has

00:22:52,260 --> 00:22:58,350
occurred such as you can address also

00:22:54,350 --> 00:23:01,139
the document in your script now this is

00:22:58,350 --> 00:23:03,389
the boot a bootstrapping example in Java

00:23:01,139 --> 00:23:05,730
you would need to have of course all the

00:23:03,389 --> 00:23:08,429
import statement in the beginning such

00:23:05,730 --> 00:23:10,980
that it is able to successfully compile

00:23:08,429 --> 00:23:14,370
and the first thing what you would do is

00:23:10,980 --> 00:23:16,860
you would use the bootstrap class to

00:23:14,370 --> 00:23:19,490
create an initial component context

00:23:16,860 --> 00:23:25,080
which is the context did you carry along

00:23:19,490 --> 00:23:29,100
for interacting with openoffice using

00:23:25,080 --> 00:23:31,529
the local context you can query now the

00:23:29,100 --> 00:23:36,179
service manager that you will be then

00:23:31,529 --> 00:23:38,960
using in this case for creating services

00:23:36,179 --> 00:23:42,299
one service in this example is the

00:23:38,960 --> 00:23:47,490
service you know URL resolver it's a

00:23:42,299 --> 00:23:52,789
class that allows us later on to resolve

00:23:47,490 --> 00:23:52,789
an open office server supplying a URL

00:23:54,260 --> 00:24:02,370
okay before we can use these services

00:23:59,600 --> 00:24:05,460
functionality we must do a query

00:24:02,370 --> 00:24:09,060
interface supplying the external

00:24:05,460 --> 00:24:13,680
resolver class such that we are then

00:24:09,060 --> 00:24:15,840
able to supply an argument like this the

00:24:13,680 --> 00:24:19,080
review you get access to the resolve

00:24:15,840 --> 00:24:23,640
method the result method expects an

00:24:19,080 --> 00:24:25,380
argument and the argument looks like you

00:24:23,640 --> 00:24:27,420
have the protocol part you will know

00:24:25,380 --> 00:24:29,730
before the first column and then you

00:24:27,420 --> 00:24:32,550
have information following it that

00:24:29,730 --> 00:24:36,000
depended depend on the protocol that is

00:24:32,550 --> 00:24:38,670
being in use so here you see that the

00:24:36,000 --> 00:24:41,490
host you we are that you wish to talk to

00:24:38,670 --> 00:24:44,030
is the local host if you have a IP

00:24:41,490 --> 00:24:49,440
address it can be any host in the world

00:24:44,030 --> 00:24:51,780
the port the protocol and the service

00:24:49,440 --> 00:24:56,400
object that you wish to have access to

00:24:51,780 --> 00:24:58,350
initially at the server side so you'll

00:24:56,400 --> 00:25:00,840
check whether the initial object could

00:24:58,350 --> 00:25:05,670
be fetched and if it's available you can

00:25:00,840 --> 00:25:09,600
then keep on using this service object

00:25:05,670 --> 00:25:12,300
in this case the service manager which

00:25:09,600 --> 00:25:16,860
in your program will be a proxy for the

00:25:12,300 --> 00:25:19,230
service manager in the server ok this is

00:25:16,860 --> 00:25:25,050
the same example now with the old wreck

00:25:19,230 --> 00:25:28,620
support where you would be able to use a

00:25:25,050 --> 00:25:30,690
predefined routine with this is the

00:25:28,620 --> 00:25:32,850
support there's special support for

00:25:30,690 --> 00:25:36,060
openoffice programming and there's one

00:25:32,850 --> 00:25:39,000
routine called will not connect now what

00:25:36,060 --> 00:25:42,930
another hint here in wrecks the dot is a

00:25:39,000 --> 00:25:47,640
normal character ok so it's like a

00:25:42,930 --> 00:25:49,140
letter whatever but but it looks

00:25:47,640 --> 00:25:50,820
familiar somehow because the dot has

00:25:49,140 --> 00:25:52,920
been used in so many programming

00:25:50,820 --> 00:25:54,690
languages but i just wanted to point out

00:25:52,920 --> 00:25:56,580
that this is there is a little

00:25:54,690 --> 00:26:01,280
difference there but this is actually

00:25:56,580 --> 00:26:03,960
all you need to do to create an

00:26:01,280 --> 00:26:07,290
openoffice so ever and get in touch with

00:26:03,960 --> 00:26:09,240
it ok so this is a little bit smaller of

00:26:07,290 --> 00:26:11,340
course than the Java solution because

00:26:09,240 --> 00:26:11,640
all the logic that needs to be carried

00:26:11,340 --> 00:26:14,160
out

00:26:11,640 --> 00:26:17,160
standing this routine but it's made

00:26:14,160 --> 00:26:21,360
easier on the programmer until you have

00:26:17,160 --> 00:26:24,720
an example in our X where you have

00:26:21,360 --> 00:26:27,870
another routine that is being used which

00:26:24,720 --> 00:26:30,030
creates the desktop object and there's a

00:26:27,870 --> 00:26:32,010
fixed sequence of statements that you

00:26:30,030 --> 00:26:36,210
have to repeatedly use in order to

00:26:32,010 --> 00:26:38,700
create a desktop and in this case what

00:26:36,210 --> 00:26:41,070
happens is that from the best of object

00:26:38,700 --> 00:26:45,000
you query the x-component loader

00:26:41,070 --> 00:26:48,050
interface you have a string which

00:26:45,000 --> 00:26:52,520
contains again and you are a URI URI

00:26:48,050 --> 00:26:56,010
private protocol factory /s writer and

00:26:52,520 --> 00:26:59,070
from the component loader you exercise

00:26:56,010 --> 00:27:03,900
the method load component from URL and

00:26:59,070 --> 00:27:07,170
supply this Ori here the next argument

00:27:03,900 --> 00:27:09,840
the underscore blank tells openoffice to

00:27:07,170 --> 00:27:12,630
create in your window so like if it was

00:27:09,840 --> 00:27:14,760
in a browser under squabbling I keep

00:27:12,630 --> 00:27:18,740
forgetting the third argument and the

00:27:14,760 --> 00:27:22,910
fourth argument is there is an array of

00:27:18,740 --> 00:27:29,070
openoffice property value objects and

00:27:22,910 --> 00:27:31,320
many times you can you you but if this

00:27:29,070 --> 00:27:32,970
time at the end I could speak a little

00:27:31,320 --> 00:27:36,240
bit more about it but what is

00:27:32,970 --> 00:27:39,870
interesting is there are some methods in

00:27:36,240 --> 00:27:42,720
openoffice where you cannot use niall if

00:27:39,870 --> 00:27:46,410
you have no property value series rather

00:27:42,720 --> 00:27:49,080
you need to supply an array of property

00:27:46,410 --> 00:27:54,150
values with the capacity with the size

00:27:49,080 --> 00:27:56,250
of 0 okay because it's used or needed

00:27:54,150 --> 00:28:00,990
quite a few times in different areas of

00:27:56,250 --> 00:28:04,020
openoffice the reg supports a place by

00:28:00,990 --> 00:28:06,270
default an empty array of type property

00:28:04,020 --> 00:28:09,900
value which is just being fetched here

00:28:06,270 --> 00:28:11,970
from all regions of like them this is

00:28:09,900 --> 00:28:16,860
the code that is needed to create an

00:28:11,970 --> 00:28:19,850
empty word processor document okay which

00:28:16,860 --> 00:28:23,720
is easy enough if you if you saw it and

00:28:19,850 --> 00:28:27,200
see it but there's more to that if you

00:28:23,720 --> 00:28:31,880
changed in the string after the slash

00:28:27,200 --> 00:28:34,190
the module from s writer to ask alec you

00:28:31,880 --> 00:28:38,030
will create an empty spreadsheet

00:28:34,190 --> 00:28:40,250
document the same here in our

00:28:38,030 --> 00:28:43,370
presentation the presentation module is

00:28:40,250 --> 00:28:46,580
called as impress and there's a draw

00:28:43,370 --> 00:28:48,350
module called espera they all start with

00:28:46,580 --> 00:28:51,980
s because the original name of the

00:28:48,350 --> 00:28:54,500
company was star okay so that's a

00:28:51,980 --> 00:28:58,400
reasonable way but there's another thing

00:28:54,500 --> 00:29:01,490
which might be surprising this uri could

00:28:58,400 --> 00:29:05,150
be such a uri could this is the local

00:29:01,490 --> 00:29:06,860
failure early this is an HTTP or e you

00:29:05,150 --> 00:29:09,679
could work with web tough for instance

00:29:06,860 --> 00:29:12,770
and you would even be able to use the

00:29:09,679 --> 00:29:15,380
FTP protocol and you have the rights to

00:29:12,770 --> 00:29:19,250
save that you would be even able to save

00:29:15,380 --> 00:29:21,350
those documents and again it's a it's

00:29:19,250 --> 00:29:24,230
ingenious for me i'm not affiliated with

00:29:21,350 --> 00:29:27,289
the developers how easy this was made

00:29:24,230 --> 00:29:30,559
available just by using the concept of

00:29:27,289 --> 00:29:35,840
the uri ok and now return to the

00:29:30,559 --> 00:29:37,730
different kinds of editors if you wish

00:29:35,840 --> 00:29:40,309
the word processor followed by the

00:29:37,730 --> 00:29:43,520
spreadsheet and by by the presentation

00:29:40,309 --> 00:29:46,820
one so we now concentrate an end to the

00:29:43,520 --> 00:29:50,270
world how to program the web process of

00:29:46,820 --> 00:29:52,940
openoffice first thing is you need to

00:29:50,270 --> 00:29:55,700
realize the functionality that is

00:29:52,940 --> 00:29:59,240
available and the word processor

00:29:55,700 --> 00:30:01,760
consists of three services services the

00:29:59,240 --> 00:30:06,500
can be multiple services implemented in

00:30:01,760 --> 00:30:08,360
one object in openoffice again there's a

00:30:06,500 --> 00:30:10,539
generic text document and office

00:30:08,360 --> 00:30:13,820
document in the text document service

00:30:10,539 --> 00:30:18,260
all these services are fully documented

00:30:13,820 --> 00:30:21,650
on the internet so if you follow the

00:30:18,260 --> 00:30:25,870
documentation ryu RL you can get a debt

00:30:21,650 --> 00:30:28,659
documentation they are all together 35

00:30:25,870 --> 00:30:31,789
interfaces available

00:30:28,659 --> 00:30:33,730
and these are the unqualified names and

00:30:31,789 --> 00:30:36,260
if you look at the names you see the

00:30:33,730 --> 00:30:40,669
functionality that is actually available

00:30:36,260 --> 00:30:43,370
at the top level if you have a function

00:30:40,669 --> 00:30:46,190
that returns a oh no object you may have

00:30:43,370 --> 00:30:49,400
a different service object or interface

00:30:46,190 --> 00:30:52,000
object in your hands adding making it

00:30:49,400 --> 00:30:55,760
possible for you to even use additional

00:30:52,000 --> 00:30:58,450
functionalities one very important

00:30:55,760 --> 00:31:01,159
interface of course for word processors

00:30:58,450 --> 00:31:03,710
represents the documents is the ex text

00:31:01,159 --> 00:31:07,010
document interface which allows you to

00:31:03,710 --> 00:31:10,880
address then in fact with this document

00:31:07,010 --> 00:31:17,659
as a word processor document there are

00:31:10,880 --> 00:31:21,200
37 three properties defined I forgot to

00:31:17,659 --> 00:31:23,870
mention at explaining the services the

00:31:21,200 --> 00:31:28,760
properties if a service has properties

00:31:23,870 --> 00:31:31,360
then it's always a set of properties so

00:31:28,760 --> 00:31:34,309
you need to get an interface to access

00:31:31,360 --> 00:31:37,250
the collection of properties that are

00:31:34,309 --> 00:31:40,149
available for instance it has also the

00:31:37,250 --> 00:31:43,730
interesting ramification that sometimes

00:31:40,149 --> 00:31:46,640
properties may be a document to be

00:31:43,730 --> 00:31:50,570
optional and actually not available

00:31:46,640 --> 00:31:53,480
depending on the context where you fetch

00:31:50,570 --> 00:31:55,760
the service object and it's possible

00:31:53,480 --> 00:31:59,740
because the properties of the service

00:31:55,760 --> 00:32:03,590
are managed as a collection okay and

00:31:59,740 --> 00:32:06,020
here we have 37 properties one is

00:32:03,590 --> 00:32:08,750
highlighted the character count property

00:32:06,020 --> 00:32:11,120
because it's being used in one of the

00:32:08,750 --> 00:32:14,390
examples to show you how easy it is

00:32:11,120 --> 00:32:18,470
actually two together the properties and

00:32:14,390 --> 00:32:21,110
take advantage of it okay the major

00:32:18,470 --> 00:32:24,500
interface once you created a document is

00:32:21,110 --> 00:32:28,250
the ex text document all right it will

00:32:24,500 --> 00:32:31,279
make available the the method the

00:32:28,250 --> 00:32:34,880
function get text which returns an ex

00:32:31,279 --> 00:32:40,100
text object meaning it's an instance of

00:32:34,880 --> 00:32:41,720
the unit class named ex text the XX is

00:32:40,100 --> 00:32:44,480
derived from the

00:32:41,720 --> 00:32:47,900
simple text interface or via inheritance

00:32:44,480 --> 00:32:49,700
all the functions of the functionality

00:32:47,900 --> 00:32:52,820
that is defined in example text is

00:32:49,700 --> 00:32:55,340
available which itself is tiff derived

00:32:52,820 --> 00:32:59,780
from the ex range text so that

00:32:55,340 --> 00:33:02,330
functionality is available as well the

00:32:59,780 --> 00:33:05,900
word processor has the notion the

00:33:02,330 --> 00:33:08,180
concepts of curses available to it so

00:33:05,900 --> 00:33:11,030
you have different types of curses for

00:33:08,180 --> 00:33:14,180
instance paragraph curses sentences

00:33:11,030 --> 00:33:16,670
words characters page curses and if your

00:33:14,180 --> 00:33:19,220
query if you get access to the cursors

00:33:16,670 --> 00:33:22,040
you can step through the entire document

00:33:19,220 --> 00:33:28,760
paragraph wire sentence wise words wise

00:33:22,040 --> 00:33:31,220
characters wise or page ways even it is

00:33:28,760 --> 00:33:33,620
always possible to insert tables fields

00:33:31,220 --> 00:33:37,850
pictures drawings other objects into an

00:33:33,620 --> 00:33:40,250
ex text object now the first example is

00:33:37,850 --> 00:33:42,890
about creating a word processor document

00:33:40,250 --> 00:33:46,940
and adding the text hello Patrick on

00:33:42,890 --> 00:33:49,100
North America 2013 closing the word

00:33:46,940 --> 00:33:51,050
processor document manually will call

00:33:49,100 --> 00:33:53,840
the save dialog to appear because

00:33:51,050 --> 00:33:57,530
creating the document and putting text

00:33:53,840 --> 00:34:00,080
to it will modify the document this is

00:33:57,530 --> 00:34:02,480
the code you need to get the desktop

00:34:00,080 --> 00:34:05,090
object from the best of object your

00:34:02,480 --> 00:34:08,500
community X component loader which you

00:34:05,090 --> 00:34:12,020
need to create an empty word processor

00:34:08,500 --> 00:34:15,860
document get a word processor document

00:34:12,020 --> 00:34:17,900
because we use here s writer everything

00:34:15,860 --> 00:34:21,020
else is the same as before hand what is

00:34:17,900 --> 00:34:25,040
added here is that the document that you

00:34:21,020 --> 00:34:28,640
get is being queried for its X text

00:34:25,040 --> 00:34:33,950
document interface which then enables

00:34:28,640 --> 00:34:36,290
you to use the method get text ok and

00:34:33,950 --> 00:34:39,910
the result is an X text object the x

00:34:36,290 --> 00:34:42,680
text object is an X text and now this

00:34:39,910 --> 00:34:46,520
cumbersome sounding explanation comes

00:34:42,680 --> 00:34:48,950
into play x Tex is the specialization of

00:34:46,520 --> 00:34:51,920
example text specialization for x ray

00:34:48,950 --> 00:34:53,330
inch text such that all methods that are

00:34:51,920 --> 00:34:56,450
defined in this

00:34:53,330 --> 00:35:00,500
interfaces are now available among other

00:34:56,450 --> 00:35:04,040
things a method called set string until

00:35:00,500 --> 00:35:07,360
you supply the string that should be set

00:35:04,040 --> 00:35:10,700
at that position in the word processor

00:35:07,360 --> 00:35:14,990
until you see the result it's a it's a

00:35:10,700 --> 00:35:17,600
writer document in this example from the

00:35:14,990 --> 00:35:20,330
Macintosh and the content of this

00:35:17,600 --> 00:35:24,530
document is hello Patrick on North

00:35:20,330 --> 00:35:27,260
America 2013 and that's actually not

00:35:24,530 --> 00:35:31,540
difficult if you saw what sequences of

00:35:27,260 --> 00:35:36,820
query interfaces you need to carry out

00:35:31,540 --> 00:35:40,310
the next example uses the ex modifiable

00:35:36,820 --> 00:35:44,810
interface to turn off the modified flag

00:35:40,310 --> 00:35:47,990
and then it you it exercises the

00:35:44,810 --> 00:35:51,470
explosive interface to close the

00:35:47,990 --> 00:35:53,990
document and if the document is not

00:35:51,470 --> 00:35:56,570
modified you can immediately close it

00:35:53,990 --> 00:36:02,450
otherwise this pop-up dialog would

00:35:56,570 --> 00:36:04,160
appear modified ok so this is the first

00:36:02,450 --> 00:36:08,300
statements are exactly the same as

00:36:04,160 --> 00:36:11,600
before hand what is new are these state

00:36:08,300 --> 00:36:14,180
these three statements your query from

00:36:11,600 --> 00:36:17,510
the document the x mod available

00:36:14,180 --> 00:36:22,250
interface get access therefore to the

00:36:17,510 --> 00:36:26,270
set modified better and supply the false

00:36:22,250 --> 00:36:30,200
value as the argument to clear the

00:36:26,270 --> 00:36:33,260
modified flag then in this example if I

00:36:30,200 --> 00:36:35,660
were to run this I have all the examples

00:36:33,260 --> 00:36:38,300
on my machine I could run them the

00:36:35,660 --> 00:36:40,370
sister of a the execution would sleep

00:36:38,300 --> 00:36:43,070
for five seconds and then using the

00:36:40,370 --> 00:36:46,120
explosively interface the document would

00:36:43,070 --> 00:36:54,200
get closed and the document would be

00:36:46,120 --> 00:36:58,850
gone after them ok now this example add

00:36:54,200 --> 00:37:01,760
some code to show the property correct

00:36:58,850 --> 00:37:04,730
account of the circuit of the word

00:37:01,760 --> 00:37:07,740
processor service object

00:37:04,730 --> 00:37:10,910
most of this is the same as before hand

00:37:07,740 --> 00:37:14,220
except for the cold here in the middle

00:37:10,910 --> 00:37:17,580
what you see here ductility X property

00:37:14,220 --> 00:37:22,260
set here is the interface called X

00:37:17,580 --> 00:37:26,310
property set from the document servers

00:37:22,260 --> 00:37:30,060
and now you have a set of properties

00:37:26,310 --> 00:37:32,250
available to you and the ex property set

00:37:30,060 --> 00:37:35,330
interface defines among other things the

00:37:32,250 --> 00:37:39,450
method called get property value

00:37:35,330 --> 00:37:42,300
supplying the name of the property will

00:37:39,450 --> 00:37:44,880
return the value that is currently

00:37:42,300 --> 00:37:47,070
stored with this property value and in

00:37:44,880 --> 00:37:50,000
this example the output would be because

00:37:47,070 --> 00:37:53,190
there is an output operation here to the

00:37:50,000 --> 00:37:58,470
command line interface would give us all

00:37:53,190 --> 00:38:01,200
your character count column space 25 25

00:37:58,470 --> 00:38:03,510
comes from the get property value of

00:38:01,200 --> 00:38:07,290
character count so this will return the

00:38:03,510 --> 00:38:09,780
number 25 if you have any questions

00:38:07,290 --> 00:38:13,470
please interrupt me again I just will

00:38:09,780 --> 00:38:16,590
proceed in this space because then we

00:38:13,470 --> 00:38:18,450
will be able to truly get through all

00:38:16,590 --> 00:38:23,060
these lights which would be premiere

00:38:18,450 --> 00:38:28,260
actually okay so the next example

00:38:23,060 --> 00:38:32,040
demonstrates how to select words using a

00:38:28,260 --> 00:38:35,190
word cursor in a text document replace

00:38:32,040 --> 00:38:38,490
the text with a different text and then

00:38:35,190 --> 00:38:40,830
apply a different formatting at the

00:38:38,490 --> 00:38:43,560
replacement x making it read and

00:38:40,830 --> 00:38:49,260
changing the fund to it to a de ja vu

00:38:43,560 --> 00:38:52,470
saw mono foam type okay so what happens

00:38:49,260 --> 00:38:55,680
is we get the desktop object we get the

00:38:52,470 --> 00:38:57,900
x component loader interface we use now

00:38:55,680 --> 00:39:01,369
the load component from all method to

00:38:57,900 --> 00:39:05,190
create a new word processor identity one

00:39:01,369 --> 00:39:07,350
then we use the x text document

00:39:05,190 --> 00:39:11,090
interface and then the method from this

00:39:07,350 --> 00:39:14,580
interface named get text and use that

00:39:11,090 --> 00:39:17,730
object to set a

00:39:14,580 --> 00:39:21,270
to it hello a Patrick on North American

00:39:17,730 --> 00:39:23,910
2013 so the same document would be

00:39:21,270 --> 00:39:28,830
created as beforehand but now we keep on

00:39:23,910 --> 00:39:32,850
working we change the second word and

00:39:28,830 --> 00:39:36,690
the third word to do this we use the ex

00:39:32,850 --> 00:39:38,960
text object and it has among other

00:39:36,690 --> 00:39:45,030
things the method which is documented

00:39:38,960 --> 00:39:48,060
called create text cursor ok now we have

00:39:45,030 --> 00:39:51,720
a text cursor we go to the start of the

00:39:48,060 --> 00:39:55,440
text and the argument is it off also

00:39:51,720 --> 00:39:57,900
true if it's false then no selections

00:39:55,440 --> 00:40:00,060
will be done if it's set to true then

00:39:57,900 --> 00:40:03,600
the movement of the cursor will cause

00:40:00,060 --> 00:40:05,400
selections in the text ok so here we go

00:40:03,600 --> 00:40:07,020
to the beginning we move the cursor to

00:40:05,400 --> 00:40:10,860
the beginning of the text we select

00:40:07,020 --> 00:40:13,770
nothing then we use the ex text cursor

00:40:10,860 --> 00:40:19,080
to get the x text person to get its

00:40:13,770 --> 00:40:21,450
interface called x verte cursor so we

00:40:19,080 --> 00:40:23,520
have now the next word cursor and can

00:40:21,450 --> 00:40:28,230
step through the document where a word

00:40:23,520 --> 00:40:31,740
wise ahead and backwards so what we do

00:40:28,230 --> 00:40:34,500
here is go to next word and with the

00:40:31,740 --> 00:40:37,050
argument falls moves to the second worth

00:40:34,500 --> 00:40:40,200
of the text but does not select the word

00:40:37,050 --> 00:40:42,930
that was being moved over and these two

00:40:40,200 --> 00:40:46,520
statements you select are the car the

00:40:42,930 --> 00:40:50,280
following words and selecting them

00:40:46,520 --> 00:40:55,410
including the blank that follow the the

00:40:50,280 --> 00:40:58,380
text and finally the expert cursor is

00:40:55,410 --> 00:41:01,080
now used to set a new value and

00:40:58,380 --> 00:41:05,280
everything that is selected will be now

00:41:01,080 --> 00:41:07,980
replace x by the new text which is

00:41:05,280 --> 00:41:11,940
actually straight forward if you forget

00:41:07,980 --> 00:41:14,400
used to this logic and the next thing

00:41:11,940 --> 00:41:18,600
now is the selection still exists and

00:41:14,400 --> 00:41:21,690
what happens now is from the xword

00:41:18,600 --> 00:41:24,450
cursor we query the expertise at

00:41:21,690 --> 00:41:27,060
interface which allows you to access the

00:41:24,450 --> 00:41:27,970
properties and the properties would be

00:41:27,060 --> 00:41:31,450
the properties of

00:41:27,970 --> 00:41:36,250
selected text so in this case the

00:41:31,450 --> 00:41:38,170
character color is set to read such that

00:41:36,250 --> 00:41:41,530
the replacement text will now be ready

00:41:38,170 --> 00:41:45,820
until you see how you change the font

00:41:41,530 --> 00:41:48,210
you just use again the ex property set

00:41:45,820 --> 00:41:51,220
interface from the exploit cursor and

00:41:48,210 --> 00:41:53,950
use that property value the character

00:41:51,220 --> 00:41:59,170
font name will be changed to deja la

00:41:53,950 --> 00:42:04,020
mano ok so um this would be the

00:41:59,170 --> 00:42:06,970
resulting document so the secular insert

00:42:04,020 --> 00:42:10,869
word would have been replaced this is

00:42:06,970 --> 00:42:12,730
now red and in the Java saw mono and the

00:42:10,869 --> 00:42:15,630
cursor would be there which is Times New

00:42:12,730 --> 00:42:20,349
Roman but this is the job you saw mono

00:42:15,630 --> 00:42:22,780
and I think these are if you get to that

00:42:20,349 --> 00:42:26,190
logic in OpenOffice it straight forward

00:42:22,780 --> 00:42:30,849
and actually not complicated him now

00:42:26,190 --> 00:42:35,670
here there is another demonstration of

00:42:30,849 --> 00:42:38,770
how to use the word processor we create

00:42:35,670 --> 00:42:41,560
paragraphs multiple paragraphs that have

00:42:38,770 --> 00:42:44,080
different adjustments right they just

00:42:41,560 --> 00:42:47,800
make a right adjusted st. they just the

00:42:44,080 --> 00:42:50,859
block adjustment left adjusted so first

00:42:47,800 --> 00:42:52,960
the code looks like the initial code we

00:42:50,859 --> 00:42:55,990
create the word processor we set the

00:42:52,960 --> 00:43:01,869
certain text to the word processor now

00:42:55,990 --> 00:43:03,880
the next our code will allow us to do

00:43:01,869 --> 00:43:07,599
this magic that we are about to

00:43:03,880 --> 00:43:11,290
demonstrate first we get a create a text

00:43:07,599 --> 00:43:14,830
cursor from the text cursor we are query

00:43:11,290 --> 00:43:18,160
the Xperia of course or interface so we

00:43:14,830 --> 00:43:22,150
now have the ability to address all the

00:43:18,160 --> 00:43:25,150
text well as it as a paragraph cursor

00:43:22,150 --> 00:43:29,160
and query the ex property set interface

00:43:25,150 --> 00:43:32,230
from it for this example there is

00:43:29,160 --> 00:43:35,230
control character the paragraph break

00:43:32,230 --> 00:43:38,050
character that we wish to use so we use

00:43:35,230 --> 00:43:40,120
the OpenOffice class comrades under

00:43:38,050 --> 00:43:43,390
starter takes the control character

00:43:40,120 --> 00:43:46,540
and from that we query the paragraph

00:43:43,390 --> 00:43:48,610
underscored break value which is some

00:43:46,540 --> 00:43:51,370
number that will be returned that we

00:43:48,610 --> 00:43:56,410
then insert and have a paragraph break

00:43:51,370 --> 00:43:59,980
effect the other thing is the you know

00:43:56,410 --> 00:44:02,770
type system has not only constants which

00:43:59,980 --> 00:44:06,010
is visible here but also enumeration

00:44:02,770 --> 00:44:08,860
values and you enumeration values in

00:44:06,010 --> 00:44:14,320
this case a paragraph adjust enumeration

00:44:08,860 --> 00:44:16,360
values which we wish to access here do

00:44:14,320 --> 00:44:19,660
some cold air is an array defined with a

00:44:16,360 --> 00:44:23,110
bit values right center block left which

00:44:19,660 --> 00:44:27,310
are the verbs which are needed to be

00:44:23,110 --> 00:44:31,690
used to write thank the block or left

00:44:27,310 --> 00:44:34,890
align a paragraph in this example then

00:44:31,690 --> 00:44:39,970
what you see here is a loop over those

00:44:34,890 --> 00:44:43,320
values we use the text cursor to go to

00:44:39,970 --> 00:44:48,280
the end of the existing text okay

00:44:43,320 --> 00:44:51,730
nothing is selected then we insert a

00:44:48,280 --> 00:44:55,120
paragraph break ok this is this control

00:44:51,730 --> 00:45:01,210
character we do not select anything then

00:44:55,120 --> 00:45:09,130
we define a string and ok I have 15

00:45:01,210 --> 00:45:12,640
minutes left I have my alarm yeah ok so

00:45:09,130 --> 00:45:15,160
what we have here is a DJ which would be

00:45:12,640 --> 00:45:17,920
right and the next loop center block and

00:45:15,160 --> 00:45:20,770
left such that the text contains the

00:45:17,920 --> 00:45:22,990
alignment information and then we use

00:45:20,770 --> 00:45:26,470
the insert string function of the ex

00:45:22,990 --> 00:45:29,230
text object or a detects cursor to

00:45:26,470 --> 00:45:31,420
insert the string and the string is

00:45:29,230 --> 00:45:33,610
copied eight times that's that's a retro

00:45:31,420 --> 00:45:37,210
sponger so whatever your programming

00:45:33,610 --> 00:45:41,860
language will have use it so it's eight

00:45:37,210 --> 00:45:43,780
times the sentence and you see the last

00:45:41,860 --> 00:45:47,920
argument is true meaning what gather

00:45:43,780 --> 00:45:51,100
gets inserted will be selected ok and

00:45:47,920 --> 00:45:51,550
now the paragraph properties come into

00:45:51,100 --> 00:45:53,770
play

00:45:51,550 --> 00:45:59,260
and the property value named power

00:45:53,770 --> 00:46:02,500
adjust is said to either right center

00:45:59,260 --> 00:46:04,510
block you left but this is from the

00:46:02,500 --> 00:46:08,800
value that is being used is from the

00:46:04,510 --> 00:46:11,320
owner enumeration ok so the unit

00:46:08,800 --> 00:46:14,140
numeration has right-center blood left

00:46:11,320 --> 00:46:16,510
to it and this is being irritable so

00:46:14,140 --> 00:46:18,940
running these four times yields finally

00:46:16,510 --> 00:46:21,610
this output you have first Tyler Patrick

00:46:18,940 --> 00:46:26,560
on North America 2013 we have the right

00:46:21,610 --> 00:46:29,560
adjusted paragraph we have the center

00:46:26,560 --> 00:46:32,380
justed one you see it here here you have

00:46:29,560 --> 00:46:36,790
the block adjusted paragraph until you

00:46:32,380 --> 00:46:39,130
have the left aligned one okay so let's

00:46:36,790 --> 00:46:41,380
want you you know the plumbing and how

00:46:39,130 --> 00:46:43,120
they interrelate it's not very difficult

00:46:41,380 --> 00:46:45,430
and that's the purpose of the nutshell

00:46:43,120 --> 00:46:49,330
examples to arrive at that know how may

00:46:45,430 --> 00:46:51,130
be taking you days and weeks and that's

00:46:49,330 --> 00:46:53,740
obviously the benefit of natural

00:46:51,130 --> 00:46:55,600
examples that they jump start you okay

00:46:53,740 --> 00:46:58,480
that's the reason why i always

00:46:55,600 --> 00:47:01,300
appreciate working natural examples and

00:46:58,480 --> 00:47:03,130
to transfer it to your language to map

00:47:01,300 --> 00:47:05,500
it it should be easy because the code

00:47:03,130 --> 00:47:07,390
looks really like pseudo code and if you

00:47:05,500 --> 00:47:09,580
know the query interfaces that need to

00:47:07,390 --> 00:47:13,930
be carried out you are really very very

00:47:09,580 --> 00:47:16,660
fast up up and running we now turn to

00:47:13,930 --> 00:47:20,200
the spreadsheet module three services

00:47:16,660 --> 00:47:21,910
again office document but then we have

00:47:20,200 --> 00:47:26,800
the spreadsheet document and spreadsheet

00:47:21,910 --> 00:47:29,740
document settings so these three service

00:47:26,800 --> 00:47:32,800
class is define a spreadsheet there are

00:47:29,740 --> 00:47:35,800
26 interfaces the most important one is

00:47:32,800 --> 00:47:39,190
the expression document such that you

00:47:35,800 --> 00:47:42,520
can get the functionality that is

00:47:39,190 --> 00:47:44,800
specific for spreadsheets there are 40

00:47:42,520 --> 00:47:46,780
properties currently that are defined

00:47:44,800 --> 00:47:52,120
for spreadsheets which are just

00:47:46,780 --> 00:47:57,250
documented here from from robertos view

00:47:52,120 --> 00:47:59,380
a spreadsheet is expressive document

00:47:57,250 --> 00:48:02,530
which contains a collection of

00:47:59,380 --> 00:48:04,530
spreadsheets you

00:48:02,530 --> 00:48:07,870
actually you would be able to

00:48:04,530 --> 00:48:10,750
numerically address individual

00:48:07,870 --> 00:48:14,350
spreadsheets zero-based if you use the

00:48:10,750 --> 00:48:17,200
interface X index access open office is

00:48:14,350 --> 00:48:20,590
quite flexible it also has for instance

00:48:17,200 --> 00:48:23,290
an interface to not use a number to

00:48:20,590 --> 00:48:25,270
address spreadsheet but names if they

00:48:23,290 --> 00:48:29,530
have names then the interface would have

00:48:25,270 --> 00:48:31,420
the would be named ixnay Maxis ok so

00:48:29,530 --> 00:48:35,190
when you once you see that I learned

00:48:31,420 --> 00:48:37,780
that it's it straight forward again

00:48:35,190 --> 00:48:39,460
spreadsheets implement the concept of a

00:48:37,780 --> 00:48:42,820
table consisting of the collection of

00:48:39,460 --> 00:48:45,910
roles which with gchat columns there are

00:48:42,820 --> 00:48:50,190
isn't a cell range Excel range interface

00:48:45,910 --> 00:48:54,370
a tabular area of a spreadsheet and the

00:48:50,190 --> 00:48:57,430
origin of 0 comma 0 r represents the

00:48:54,370 --> 00:49:00,190
upper left-hand corner so these are

00:48:57,430 --> 00:49:04,000
actually offset relative to to the upper

00:49:00,190 --> 00:49:06,820
left-hand corner addressing a cell can

00:49:04,000 --> 00:49:09,040
be carried out numerically get sale by

00:49:06,820 --> 00:49:12,330
position would be the method that you

00:49:09,040 --> 00:49:15,640
use column offset row upset and this

00:49:12,330 --> 00:49:17,980
method will return the Excel a sale

00:49:15,640 --> 00:49:20,320
object which contains the value of a

00:49:17,980 --> 00:49:22,120
formula maybe and may have properties

00:49:20,320 --> 00:49:26,710
such as you are able to individually

00:49:22,120 --> 00:49:30,460
format it it's also possible to refer to

00:49:26,710 --> 00:49:33,580
cells or regions by name a name range or

00:49:30,460 --> 00:49:36,070
column a name one base a 2 is for

00:49:33,580 --> 00:49:39,070
instance a representation that is quite

00:49:36,070 --> 00:49:40,900
common and everyone would know that so

00:49:39,070 --> 00:49:43,480
what you would do in this case you get

00:49:40,900 --> 00:49:46,690
you use the function dead cell range by

00:49:43,480 --> 00:49:50,470
names apply the name and you get an

00:49:46,690 --> 00:49:53,890
Excel range but even if you supply the

00:49:50,470 --> 00:49:56,290
name a two so if you want to get at the

00:49:53,890 --> 00:49:58,990
seller you need to you need to apply the

00:49:56,290 --> 00:50:03,000
gate sale by position method and supply

00:49:58,990 --> 00:50:05,800
0 comma 0 the left upper hand corner ok

00:50:03,000 --> 00:50:08,800
it's possible in spreadsheets to insert

00:50:05,800 --> 00:50:12,010
charts drawings and so forth here's an

00:50:08,800 --> 00:50:16,420
example of how you would create an empty

00:50:12,010 --> 00:50:19,309
spreadsheet and put this text into a one

00:50:16,420 --> 00:50:22,279
to create the document you just change

00:50:19,309 --> 00:50:24,259
the type from s writer to s code so now

00:50:22,279 --> 00:50:28,069
you have a document which actually is a

00:50:24,259 --> 00:50:29,839
spreadsheet to work with it as a

00:50:28,069 --> 00:50:33,170
spreadsheet you query the interface

00:50:29,839 --> 00:50:36,259
expressive document then you have access

00:50:33,170 --> 00:50:38,690
to the method get cheats and then you

00:50:36,259 --> 00:50:41,329
clear the interface each index access

00:50:38,690 --> 00:50:43,430
such that the return objects allows you

00:50:41,329 --> 00:50:46,460
to address every spreadsheet with a

00:50:43,430 --> 00:50:48,920
numeric index which is being exercised

00:50:46,460 --> 00:50:51,170
here get by index 0 gives you the first

00:50:48,920 --> 00:50:53,809
spreadsheet and from that spreadsheet

00:50:51,170 --> 00:50:56,930
you query the express cheat interface

00:50:53,809 --> 00:50:58,880
functionality so now you have this you

00:50:56,930 --> 00:51:03,710
have the spreadsheet with a spreadsheet

00:50:58,880 --> 00:51:07,430
functionality and next thing is with get

00:51:03,710 --> 00:51:10,819
cell by position 0 comma 0 you get the

00:51:07,430 --> 00:51:14,559
first Excel and there you use the method

00:51:10,819 --> 00:51:17,809
set formula to set it to a text okay

00:51:14,559 --> 00:51:20,299
here the example also shows you how you

00:51:17,809 --> 00:51:24,769
would be able to save the document that

00:51:20,299 --> 00:51:28,190
you just created you need to use the

00:51:24,769 --> 00:51:31,220
file URL so the erect support has

00:51:28,190 --> 00:51:35,329
routines implemented that is this to

00:51:31,220 --> 00:51:37,059
translate it to the correct file URL to

00:51:35,329 --> 00:51:39,859
the native operating system

00:51:37,059 --> 00:51:41,750
representation vice versa you would use

00:51:39,859 --> 00:51:44,869
the xterra bill interface from the

00:51:41,750 --> 00:51:48,589
document and then get access to the

00:51:44,869 --> 00:51:52,490
store as URL method and then you supply

00:51:48,589 --> 00:51:55,069
this file URL the second argument again

00:51:52,490 --> 00:51:57,410
is an empty array of proper of type

00:51:55,069 --> 00:52:01,519
property value you could for instance

00:51:57,410 --> 00:52:03,950
apply passwords make it read on whatever

00:52:01,519 --> 00:52:05,990
you just need to further study the

00:52:03,950 --> 00:52:07,940
documentation in natural example so that

00:52:05,990 --> 00:52:10,369
there's a lot of power even in that

00:52:07,940 --> 00:52:14,390
corner which we don't have the time to

00:52:10,369 --> 00:52:16,339
go into detail and then you use these

00:52:14,390 --> 00:52:20,450
clothes ibly interface to close this

00:52:16,339 --> 00:52:22,700
saved document this would be the results

00:52:20,450 --> 00:52:25,009
you would be able to create with this

00:52:22,700 --> 00:52:26,930
cold and empty spreadsheet set the value

00:52:25,009 --> 00:52:31,460
to the cell a1 say

00:52:26,930 --> 00:52:33,530
that spreadsheet in the file the next

00:52:31,460 --> 00:52:37,069
example demonstrates how to change the

00:52:33,530 --> 00:52:41,079
height of table rolls so what you do is

00:52:37,069 --> 00:52:46,900
you create a spreadsheet you add the

00:52:41,079 --> 00:52:50,480
text to a one and now you use from the

00:52:46,900 --> 00:52:53,720
spreadsheet the interface X column row

00:52:50,480 --> 00:52:56,450
range and then the method get roles now

00:52:53,720 --> 00:53:00,260
you have all the rows available that are

00:52:56,450 --> 00:53:04,099
in the spreadsheet and here is a little

00:53:00,260 --> 00:53:06,770
loop don't forget the the indexing by

00:53:04,099 --> 00:53:08,809
number is always zero based but this

00:53:06,770 --> 00:53:12,980
loop goes from one to five so it's

00:53:08,809 --> 00:53:19,300
referring to Row 2 3 4 5 6 and what

00:53:12,980 --> 00:53:23,540
happens is from the X rose notice the S

00:53:19,300 --> 00:53:27,020
collection you are fetch the second row

00:53:23,540 --> 00:53:31,430
here on the first floor you get access

00:53:27,020 --> 00:53:34,010
to the property set your query the

00:53:31,430 --> 00:53:37,280
current height of a role which returns

00:53:34,010 --> 00:53:40,430
the number then which is the old tight

00:53:37,280 --> 00:53:49,040
the old tight now gets increased by the

00:53:40,430 --> 00:53:53,270
value of the counter times 250 250 is 0

00:53:49,040 --> 00:53:58,220
comma 25 centimeters the coordinates in

00:53:53,270 --> 00:54:01,819
OpenOffice a message okay so this will

00:53:58,220 --> 00:54:05,869
increase in this example the height by

00:54:01,819 --> 00:54:09,589
quarter of a centimeter then you set the

00:54:05,869 --> 00:54:14,150
property hi to the new value and you set

00:54:09,589 --> 00:54:17,630
the Saline that role to a value which

00:54:14,150 --> 00:54:21,109
tells us the old tight value and the new

00:54:17,630 --> 00:54:22,990
one okay and this is the end placed in

00:54:21,109 --> 00:54:27,349
the spreadsheet if you run this program

00:54:22,990 --> 00:54:31,520
you see you have these roles that

00:54:27,349 --> 00:54:34,750
increasingly I become higher and the

00:54:31,520 --> 00:54:38,270
next example does the same with columns

00:54:34,750 --> 00:54:41,840
in so

00:54:38,270 --> 00:54:45,260
do you use the Excalibur arranged we do

00:54:41,840 --> 00:54:47,420
get columns function so with this

00:54:45,260 --> 00:54:50,720
interface you also have a method called

00:54:47,420 --> 00:54:54,670
get columns which gives you which

00:54:50,720 --> 00:54:57,260
returns you thank you which returns you

00:54:54,670 --> 00:55:00,290
the collection of columns available in

00:54:57,260 --> 00:55:02,090
this patch it and then the same logic is

00:55:00,290 --> 00:55:04,970
applied here except that the width is

00:55:02,090 --> 00:55:07,820
changed ok there's a property named

00:55:04,970 --> 00:55:11,090
width which is being used to clear the

00:55:07,820 --> 00:55:14,090
old ways change to a new with the new

00:55:11,090 --> 00:55:17,510
breeze will be reduced by water

00:55:14,090 --> 00:55:19,280
presented in the burn so if you look at

00:55:17,510 --> 00:55:21,530
this spreadsheet you see that the

00:55:19,280 --> 00:55:28,700
columns get smaller and smaller and

00:55:21,530 --> 00:55:29,810
smaller good now we have another example

00:55:28,700 --> 00:55:33,050
here where we create a spreadsheet

00:55:29,810 --> 00:55:34,880
document and I think we end with the

00:55:33,050 --> 00:55:37,280
spreadsheet examples because we only

00:55:34,880 --> 00:55:38,570
have four minutes left but if you have

00:55:37,280 --> 00:55:41,960
questions I would be available

00:55:38,570 --> 00:55:44,630
afterwards and we could go through the

00:55:41,960 --> 00:55:47,510
missing slides if you if you wanted to I

00:55:44,630 --> 00:55:51,560
mostly around tomorrow so you can always

00:55:47,510 --> 00:55:53,750
approach me if you want to ok so create

00:55:51,560 --> 00:55:55,580
a texture spreadsheet document 8x10 the

00:55:53,750 --> 00:55:58,340
date and demonstrate how to format

00:55:55,580 --> 00:56:00,830
individual cells in the cell range ok

00:55:58,340 --> 00:56:04,400
you create the spreadsheet get access to

00:56:00,830 --> 00:56:07,340
the first spreadsheet now in in the rep

00:56:04,400 --> 00:56:10,790
support ayodele also routine supply that

00:56:07,340 --> 00:56:13,010
make it easy to query or sets individual

00:56:10,790 --> 00:56:15,670
cells behind the curtain all those

00:56:13,010 --> 00:56:18,320
interface query interfacing takes place

00:56:15,670 --> 00:56:21,230
so they are different there's the name

00:56:18,320 --> 00:56:24,890
John Doe date and today today is the

00:56:21,230 --> 00:56:28,040
formula from open office so you have the

00:56:24,890 --> 00:56:30,560
equal sign today the name of the

00:56:28,040 --> 00:56:35,120
building function in OpenOffice round

00:56:30,560 --> 00:56:39,849
parenthesis the next thing is we form a

00:56:35,120 --> 00:56:43,059
different cells the one gets

00:56:39,849 --> 00:56:48,099
a certain background color that is that

00:56:43,059 --> 00:56:50,609
the men here in v2 you change the

00:56:48,099 --> 00:56:55,059
character color to a different color

00:56:50,609 --> 00:56:57,339
until you change the boldness of the

00:56:55,059 --> 00:57:02,979
text character wait who is the name of

00:56:57,339 --> 00:57:05,680
the property value ok if you look at the

00:57:02,979 --> 00:57:08,829
result you have the different coloring

00:57:05,680 --> 00:57:11,079
and the different bonuses apply to

00:57:08,829 --> 00:57:15,549
individual cells so the formatting you

00:57:11,079 --> 00:57:18,670
stand with property videos the next one

00:57:15,549 --> 00:57:22,119
is interesting because it shows you how

00:57:18,670 --> 00:57:25,089
to create a chart in the OpenOffice

00:57:22,119 --> 00:57:27,729
spreadsheet so in this example we have

00:57:25,089 --> 00:57:32,200
four quarters that it get created

00:57:27,729 --> 00:57:33,970
automatically for 2011-12 this the

00:57:32,200 --> 00:57:35,859
column headings will be formatted the

00:57:33,970 --> 00:57:39,130
numbers will be formatted in a certain

00:57:35,859 --> 00:57:42,279
way and then a chart will be created

00:57:39,130 --> 00:57:46,630
from this battle the numbers are being

00:57:42,279 --> 00:57:49,749
created randomly so here we create a

00:57:46,630 --> 00:57:53,499
spreadsheet here we create the different

00:57:49,749 --> 00:57:56,319
headings a1 b1 c1 then there is a little

00:57:53,499 --> 00:57:59,109
loop 1 through 4 meaning the different

00:57:56,319 --> 00:58:01,119
quarters and you see with the random

00:57:59,109 --> 00:58:03,549
function is a built-in function in this

00:58:01,119 --> 00:58:06,369
case from Rex wherever you supply the

00:58:03,549 --> 00:58:09,130
range so the tight the line tight leash

00:58:06,369 --> 00:58:12,579
cool are concatenated with one two three

00:58:09,130 --> 00:58:16,630
four and then we have different random

00:58:12,579 --> 00:58:19,779
numbers now here you define a cell

00:58:16,630 --> 00:58:21,900
arranged by name a1 through c1 we take a

00:58:19,779 --> 00:58:26,819
look then at the resulting spreadsheet

00:58:21,900 --> 00:58:30,130
are queer the property set interface and

00:58:26,819 --> 00:58:33,999
change these properties in the character

00:58:30,130 --> 00:58:40,029
way too bold so Colin ard the cell range

00:58:33,999 --> 00:58:42,910
a1 through see one will be bolded here

00:58:40,029 --> 00:58:45,700
you have p 2 through c5 which will be

00:58:42,910 --> 00:58:48,759
two columns containing numbers these

00:58:45,700 --> 00:58:50,450
numbers will be changed to the number

00:58:48,759 --> 00:58:53,359
format number for their

00:58:50,450 --> 00:58:57,490
redefined formats number four has the

00:58:53,359 --> 00:59:01,130
form a team that you see over here okay

00:58:57,490 --> 00:59:03,170
the next page now it's all so this is

00:59:01,130 --> 00:59:05,119
the first step in the second step this

00:59:03,170 --> 00:59:09,530
is the last example which I would bring

00:59:05,119 --> 00:59:15,670
to end and the next page shows you how

00:59:09,530 --> 00:59:19,339
to create the chart first you use the

00:59:15,670 --> 00:59:22,520
rectangle class you create an instance

00:59:19,339 --> 00:59:25,040
of the rectangle class that's the

00:59:22,520 --> 00:59:28,390
exposition the Y position in the

00:59:25,040 --> 00:59:33,010
spreadsheet again it's matric 300 means

00:59:28,390 --> 00:59:36,470
the exafs that is 0 comma 3 centimeters

00:59:33,010 --> 00:59:38,930
the width would be 16 centimeters and

00:59:36,470 --> 00:59:40,609
the height would be 8 centimeters so

00:59:38,930 --> 00:59:42,530
this is not an object which contains

00:59:40,609 --> 00:59:45,619
this information about a rectangle

00:59:42,530 --> 00:59:50,690
position in size the next thing you do

00:59:45,619 --> 00:59:52,579
is you go select you get the same range

00:59:50,690 --> 00:59:55,640
which contains the data that should be

00:59:52,579 --> 00:59:59,450
transformed into a child this is what

00:59:55,640 --> 01:00:02,210
you would do here you would clear the

00:59:59,450 --> 01:00:05,480
exhale range addressable interface to

01:00:02,210 --> 01:00:10,520
get to this method and InDesign the

01:00:05,480 --> 01:00:13,160
result to this variable this is a erect

01:00:10,520 --> 01:00:15,650
merle variant to create the Java array

01:00:13,160 --> 01:00:20,230
which way are with of this type with one

01:00:15,650 --> 01:00:23,869
element which which is a range address

01:00:20,230 --> 01:00:27,890
from the sheet sheet you query the X

01:00:23,869 --> 01:00:30,319
table chart supplier interface to get

01:00:27,890 --> 01:00:33,079
access to the method get charts which

01:00:30,319 --> 01:00:37,130
returns you an empty collection of

01:00:33,079 --> 01:00:41,569
charts for this spreadsheet and you can

01:00:37,130 --> 01:00:43,849
use that to add a new chart so add new

01:00:41,569 --> 01:00:46,130
by name first charge charge you have you

01:00:43,849 --> 01:00:47,990
the rectangle the address and so forth

01:00:46,130 --> 01:00:55,750
and this is the result which is actually

01:00:47,990 --> 01:00:55,750
spectacular and it's quite easy if you

01:00:56,240 --> 01:01:03,350
if you know how if you have the hell

01:00:59,540 --> 01:01:05,360
tools to change the type of the chart to

01:01:03,350 --> 01:01:07,880
make it three-dimensional and you can

01:01:05,360 --> 01:01:28,280
even more spectacular so I jumped out to

01:01:07,880 --> 01:01:30,740
the end ok let's go further in ok what

01:01:28,280 --> 01:01:33,830
you learnt now was a bird ice view of

01:01:30,740 --> 01:01:36,020
the you know framework it's a very

01:01:33,830 --> 01:01:37,990
powerful framework but also complex

01:01:36,020 --> 01:01:40,700
because there's so many classes defined

01:01:37,990 --> 01:01:42,710
but it's not surprising the

01:01:40,700 --> 01:01:46,160
functionalities enormous that openoffice

01:01:42,710 --> 01:01:50,210
comes with you can you saw how to create

01:01:46,160 --> 01:01:52,640
edit documents in s writer s card you

01:01:50,210 --> 01:01:55,430
will be able if you look up the missing

01:01:52,640 --> 01:01:58,700
natural examples to understand what s

01:01:55,430 --> 01:02:00,590
pro and this impress will do and you

01:01:58,700 --> 01:02:02,810
will be able with the knowledge here to

01:02:00,590 --> 01:02:07,520
transliterate it to your programming

01:02:02,810 --> 01:02:09,530
language whatever it is ok they see need

01:02:07,520 --> 01:02:11,690
for many more natural examples in all

01:02:09,530 --> 01:02:13,790
programming languages for openoffice so

01:02:11,690 --> 01:02:15,980
if you are interested in this and you

01:02:13,790 --> 01:02:18,280
learn openoffice programming think also

01:02:15,980 --> 01:02:20,180
about creating such little nutshell

01:02:18,280 --> 01:02:22,490
examples and share them with the

01:02:20,180 --> 01:02:25,970
community that would be really love a

01:02:22,490 --> 01:02:27,650
big big help ok so this concludes it if

01:02:25,970 --> 01:02:29,960
you have any questions please ask them

01:02:27,650 --> 01:02:33,710
but maybe if you want to go for the beer

01:02:29,960 --> 01:02:36,070
first we can be back later date or

01:02:33,710 --> 01:02:36,070
whenever

01:02:36,620 --> 01:02:38,680

YouTube URL: https://www.youtube.com/watch?v=p4DeOilMOQA


