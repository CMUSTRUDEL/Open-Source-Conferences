Title: Project Security War Stories
Publication date: 2013-10-17
Playlist: Apachecon NA 2013 - day 2
Description: 
	The Apache Community
ApacheCon NA 2013
How Secure?
Captions: 
	00:00:00,410 --> 00:00:05,700
so welcome to the third part of today's

00:00:03,959 --> 00:00:09,030
presentation and this is just going to

00:00:05,700 --> 00:00:11,700
be as I say an open discussion amongst

00:00:09,030 --> 00:00:13,830
different projects and your experiences

00:00:11,700 --> 00:00:17,190
or even more importantly your questions

00:00:13,830 --> 00:00:20,359
things that ideas that this has left you

00:00:17,190 --> 00:00:20,359
you can probably kill the

00:00:37,910 --> 00:00:45,260
so so I'll straw I'll just lead off here

00:00:42,530 --> 00:00:48,140
with a little bit from the httpd project

00:00:45,260 --> 00:00:50,150
which is my own experience we're lucky

00:00:48,140 --> 00:00:53,480
enough as I say to have about 15 very

00:00:50,150 --> 00:00:57,890
active committers who participate

00:00:53,480 --> 00:01:01,460
regularly on known issues exploits about

00:00:57,890 --> 00:01:05,030
the Apache web server and we typically

00:01:01,460 --> 00:01:08,020
found I want to say three three issues a

00:01:05,030 --> 00:01:10,580
year three or four but as Mark said in

00:01:08,020 --> 00:01:12,790
Tomcats experience there is no rhyme or

00:01:10,580 --> 00:01:15,320
reason to how quickly and how many

00:01:12,790 --> 00:01:18,110
reports we get how many different areas

00:01:15,320 --> 00:01:19,880
are impacted I would say our most

00:01:18,110 --> 00:01:23,720
amusing story are not amusing but

00:01:19,880 --> 00:01:26,390
embarrassing story is Jeff was reminding

00:01:23,720 --> 00:01:31,280
me the other day at the hackathon that

00:01:26,390 --> 00:01:33,979
we seem to have a small issue with data

00:01:31,280 --> 00:01:36,259
tainting and so our most recent

00:01:33,979 --> 00:01:39,320
vulnerability that was just fixed in the

00:01:36,259 --> 00:01:41,830
in the release this week has to do with

00:01:39,320 --> 00:01:43,880
a very mild cross-site scripting

00:01:41,830 --> 00:01:46,940
vulnerability that if somebody has

00:01:43,880 --> 00:01:48,920
manipulated the host header well at that

00:01:46,940 --> 00:01:51,470
point the host header can have whatever

00:01:48,920 --> 00:01:53,390
cross-site scripting code there that you

00:01:51,470 --> 00:01:55,940
want now the funny thing is a host name

00:01:53,390 --> 00:02:00,080
is a pretty specific entity it's got to

00:01:55,940 --> 00:02:01,490
be a DNS valid DNS entry or a valid IP

00:02:00,080 --> 00:02:03,830
address you would think that this would

00:02:01,490 --> 00:02:05,479
be easy to detained and we would never

00:02:03,830 --> 00:02:09,170
be passing around this little bit of

00:02:05,479 --> 00:02:11,810
trivia this bad host header contents

00:02:09,170 --> 00:02:14,000
that came across but in fact we did and

00:02:11,810 --> 00:02:17,209
there were five different modules that

00:02:14,000 --> 00:02:18,620
were emitting this host header back to

00:02:17,209 --> 00:02:22,040
the user reflecting it in one way or

00:02:18,620 --> 00:02:23,420
another mod status or whatnot now the

00:02:22,040 --> 00:02:25,790
funny thing is we get some very

00:02:23,420 --> 00:02:29,150
interesting reports to httpd on a very

00:02:25,790 --> 00:02:31,520
regular basis one of them is that the

00:02:29,150 --> 00:02:33,560
Apache foundation has is very very

00:02:31,520 --> 00:02:37,160
insecure because we are presenting all

00:02:33,560 --> 00:02:40,040
you have to do is go to ww patchy org

00:02:37,160 --> 00:02:41,620
slash server status and everybody knows

00:02:40,040 --> 00:02:45,620
that server status is a vulnerability

00:02:41,620 --> 00:02:48,110
this is a security hole but in fact it's

00:02:45,620 --> 00:02:51,569
not there is one there is only one

00:02:48,110 --> 00:02:53,609
potential question of the legitimacy of

00:02:51,569 --> 00:02:55,379
presenting that data frankly we want

00:02:53,609 --> 00:02:57,359
people to know how our servers run we

00:02:55,379 --> 00:02:59,549
may not give them all the details about

00:02:57,359 --> 00:03:01,859
how we do authentication and such but in

00:02:59,549 --> 00:03:04,260
general we want to we are we create this

00:03:01,859 --> 00:03:07,290
software we want you to see how it runs

00:03:04,260 --> 00:03:09,150
and if your first opportunity is to see

00:03:07,290 --> 00:03:11,099
Apache itself running well that's

00:03:09,150 --> 00:03:13,769
wonderful go ahead you can see our

00:03:11,099 --> 00:03:15,269
server status you can anybody who's in

00:03:13,769 --> 00:03:17,099
any project you can get to the

00:03:15,269 --> 00:03:19,409
configuration of that web server you can

00:03:17,099 --> 00:03:21,030
you can see how your section is

00:03:19,409 --> 00:03:23,730
configured or how other projects have

00:03:21,030 --> 00:03:26,519
configured their sections point out with

00:03:23,730 --> 00:03:29,760
my infrastructure hassle but that's only

00:03:26,519 --> 00:03:32,280
enabled for HTTP and authenticated

00:03:29,760 --> 00:03:34,199
services as soon as you're looking at a

00:03:32,280 --> 00:03:36,449
service over HTTPS or anything on any

00:03:34,199 --> 00:03:37,799
issue trackers service APIs isn't

00:03:36,449 --> 00:03:39,060
available for the obvious reasons we

00:03:37,799 --> 00:03:41,790
don't want to expose session IDs

00:03:39,060 --> 00:03:46,019
passwords or anything else so it's just

00:03:41,790 --> 00:03:49,169
for the asf website and the TLP websites

00:03:46,019 --> 00:03:51,480
are served over HTTP and the only

00:03:49,169 --> 00:03:53,579
question and and and mark is perfectly

00:03:51,480 --> 00:03:54,840
willing to hear your argument later the

00:03:53,579 --> 00:03:57,180
only question is you can actually

00:03:54,840 --> 00:03:59,759
associate an IP address with oh they're

00:03:57,180 --> 00:04:01,889
reading the documentation for tomcat for

00:03:59,759 --> 00:04:03,209
example so if that if somebody

00:04:01,889 --> 00:04:05,639
considered that a gross privacy

00:04:03,209 --> 00:04:08,129
violation and can type the site chapter

00:04:05,639 --> 00:04:09,659
in verse of the EU privacy law feel free

00:04:08,129 --> 00:04:12,269
to take it up with mark and he'll bring

00:04:09,659 --> 00:04:15,810
it back to infrastructure to consider or

00:04:12,269 --> 00:04:19,739
not some other things we get a lot of

00:04:15,810 --> 00:04:23,070
reports that Apache does exactly what we

00:04:19,739 --> 00:04:26,370
said it does so for example we we have a

00:04:23,070 --> 00:04:29,340
nice little feature options that allow

00:04:26,370 --> 00:04:32,099
us to say that if owner match if symlink

00:04:29,340 --> 00:04:34,500
owner match will only follow content for

00:04:32,099 --> 00:04:37,590
a given user if their user IDs are

00:04:34,500 --> 00:04:39,030
correct well as it turns out there is a

00:04:37,590 --> 00:04:41,520
race condition there there has been a

00:04:39,030 --> 00:04:43,050
race condition there for 17 years and

00:04:41,520 --> 00:04:45,780
there will be a race condition there for

00:04:43,050 --> 00:04:47,130
the next seven so this is but it's well

00:04:45,780 --> 00:04:49,620
documented it's spelled out in the

00:04:47,130 --> 00:04:52,530
documentation and once a year at least

00:04:49,620 --> 00:04:54,240
maybe twice we get a report that Apache

00:04:52,530 --> 00:04:56,159
has a race condition this is insecure

00:04:54,240 --> 00:04:58,830
and in our documentation we say this is

00:04:56,159 --> 00:05:01,560
not a security feature this is simply a

00:04:58,830 --> 00:05:02,460
convenience feature and you cannot rely

00:05:01,560 --> 00:05:05,759
upon it and here is

00:05:02,460 --> 00:05:10,919
why another example of that same class

00:05:05,759 --> 00:05:16,050
of problem with ya beyond the options in

00:05:10,919 --> 00:05:18,360
Apache in HD APD is that we have let me

00:05:16,050 --> 00:05:24,720
let me try to come around to where I was

00:05:18,360 --> 00:05:26,220
coming with that server no I'm gonna I'm

00:05:24,720 --> 00:05:27,630
going to completely lose track of where

00:05:26,220 --> 00:05:30,300
I was going with that I will I will come

00:05:27,630 --> 00:05:32,310
back to it but we do have as I say a

00:05:30,300 --> 00:05:35,490
number of things that are just not for

00:05:32,310 --> 00:05:39,090
security oh I'm sorry htaccess so

00:05:35,490 --> 00:05:40,919
everyone one group of problems that

00:05:39,090 --> 00:05:43,380
we've had periodically and we've issued

00:05:40,919 --> 00:05:45,720
CVS we've treated these as security

00:05:43,380 --> 00:05:48,060
holes when we discover that if you do

00:05:45,720 --> 00:05:50,370
something specific with an htaccess file

00:05:48,060 --> 00:05:51,599
it'll cause the server to crash or it'll

00:05:50,370 --> 00:05:53,970
cause the server to behave in an

00:05:51,599 --> 00:05:56,070
unexpected way and the problem is is

00:05:53,970 --> 00:05:58,050
that when you can configure a service

00:05:56,070 --> 00:06:00,419
when you can manipulate how a service

00:05:58,050 --> 00:06:01,860
behaves in general you can force it you

00:06:00,419 --> 00:06:04,889
can cause it to crash this is true of

00:06:01,860 --> 00:06:07,409
most unix services but htaccess is a

00:06:04,889 --> 00:06:09,180
special thing because content hosts

00:06:07,409 --> 00:06:11,520
provoke content providers hosting

00:06:09,180 --> 00:06:14,580
providers tend to trust that if you're

00:06:11,520 --> 00:06:16,860
in the / customer one director directory

00:06:14,580 --> 00:06:18,659
and you're manipulating your contents

00:06:16,860 --> 00:06:20,820
you shouldn't be able to cause the

00:06:18,659 --> 00:06:25,349
server to crash for customers to 3 and

00:06:20,820 --> 00:06:27,900
etc so people have treated HT Axis's oh

00:06:25,349 --> 00:06:30,930
well this is very very carefully handled

00:06:27,900 --> 00:06:33,719
we don't have to worry about customer a

00:06:30,930 --> 00:06:36,060
affecting customer be etc and the more

00:06:33,719 --> 00:06:37,800
we looked at the problem every time we

00:06:36,060 --> 00:06:40,979
would we would go and close a security

00:06:37,800 --> 00:06:42,870
hole or a bug defect like pcre it turned

00:06:40,979 --> 00:06:44,370
out we could we could crash it just by

00:06:42,870 --> 00:06:46,469
writing the appropriate regular

00:06:44,370 --> 00:06:48,570
expression every time we went to close

00:06:46,469 --> 00:06:50,550
one of these we discovered that oh but

00:06:48,570 --> 00:06:52,889
there are seven other ways that we can

00:06:50,550 --> 00:06:56,400
through a nefarious means do something

00:06:52,889 --> 00:06:59,039
bad with htaccess and so we ultimately

00:06:56,400 --> 00:07:01,680
came up with a policy not two years ago

00:06:59,039 --> 00:07:04,740
that says that HT access defects are not

00:07:01,680 --> 00:07:06,900
security defects h you know it is it is

00:07:04,740 --> 00:07:08,759
a feature it's a facility but you have

00:07:06,900 --> 00:07:11,820
to understand that as long as you are

00:07:08,759 --> 00:07:14,250
giving the a user control over what

00:07:11,820 --> 00:07:16,230
apache is doing there is going to always

00:07:14,250 --> 00:07:18,420
be some risk that they can

00:07:16,230 --> 00:07:19,800
do something in a malicious way that's

00:07:18,420 --> 00:07:21,630
then going to cause that server to fail

00:07:19,800 --> 00:07:23,850
and in fact there is a way to handle

00:07:21,630 --> 00:07:25,710
this you simply run multiple instances

00:07:23,850 --> 00:07:27,570
of Apache each running is different

00:07:25,710 --> 00:07:29,790
users each of them under those customers

00:07:27,570 --> 00:07:31,800
accounts and that is the way to properly

00:07:29,790 --> 00:07:34,890
prepare you know the operating system

00:07:31,800 --> 00:07:38,370
has user and ownership for a very

00:07:34,890 --> 00:07:39,660
specific reason so so those are just

00:07:38,370 --> 00:07:43,560
some of the things that have happened at

00:07:39,660 --> 00:07:46,530
httpd I'm wondering some of the other

00:07:43,560 --> 00:07:49,890
projects represented here does anybody

00:07:46,530 --> 00:07:58,560
want a share an antidote as a dope from

00:07:49,890 --> 00:08:01,800
your projects experience put you on the

00:07:58,560 --> 00:08:04,470
spot so we can also open this up just

00:08:01,800 --> 00:08:06,690
generally to questions about how these

00:08:04,470 --> 00:08:08,280
how these incidents could handle it mark

00:08:06,690 --> 00:08:12,900
gave you some excellent examples with

00:08:08,280 --> 00:08:14,520
exactly what has the flow of a one

00:08:12,900 --> 00:08:18,180
particular case and these all look

00:08:14,520 --> 00:08:20,250
fairly similar but does anyone here from

00:08:18,180 --> 00:08:22,560
another PMC maybe maybe you've just

00:08:20,250 --> 00:08:25,430
attacked your first security problem or

00:08:22,560 --> 00:08:28,140
you have a lot of open questions as a

00:08:25,430 --> 00:08:31,220
PMC about how would this all work

00:08:28,140 --> 00:08:31,220
relative to your project

00:08:33,599 --> 00:08:44,250
I months ago I believe I did find a

00:08:37,589 --> 00:08:46,920
vulnerability with the project by I came

00:08:44,250 --> 00:08:48,509
to some of the members that said I think

00:08:46,920 --> 00:08:50,850
I found something here it's a problem

00:08:48,509 --> 00:09:06,120
with the default configuration you know

00:08:50,850 --> 00:09:10,670
you can disclose resources and their

00:09:06,120 --> 00:09:14,880
response was kind of late yeah we should

00:09:10,670 --> 00:09:20,420
you know when when I feel like my

00:09:14,880 --> 00:09:20,420
opinion dudes I feel like I have

00:09:25,220 --> 00:09:29,970
certainly and yeah that absolutely

00:09:28,470 --> 00:09:32,310
always feel free to send anything to

00:09:29,970 --> 00:09:34,110
secure you too patchy org as I set as

00:09:32,310 --> 00:09:36,540
Mark mentions I mean if you send

00:09:34,110 --> 00:09:38,819
something to security to httpd Apache

00:09:36,540 --> 00:09:40,920
org security at Apache org does see that

00:09:38,819 --> 00:09:43,680
now it's not that we're the traffic cops

00:09:40,920 --> 00:09:46,110
of the asf in terms of security but we

00:09:43,680 --> 00:09:47,639
at least get to see a big picture of how

00:09:46,110 --> 00:09:51,120
are different projects handling these

00:09:47,639 --> 00:09:53,100
how are they responding does there need

00:09:51,120 --> 00:09:55,740
to be some intervention so that you know

00:09:53,100 --> 00:09:57,630
maybe maybe another pmc member over

00:09:55,740 --> 00:09:59,459
there is encouraged to send the

00:09:57,630 --> 00:10:00,720
responses because these are not so

00:09:59,459 --> 00:10:03,930
diplomatic coming from this other

00:10:00,720 --> 00:10:06,029
individual we like to keep an eye on it

00:10:03,930 --> 00:10:08,279
at that level but each project is in

00:10:06,029 --> 00:10:10,980
fact ultimately responsible for their

00:10:08,279 --> 00:10:13,980
code and so if you really do encounter a

00:10:10,980 --> 00:10:16,170
situation where you cannot convince the

00:10:13,980 --> 00:10:18,630
project members or committers of a

00:10:16,170 --> 00:10:21,240
project that this is actually a boner

00:10:18,630 --> 00:10:23,220
ability than perhaps it isn't at some

00:10:21,240 --> 00:10:25,380
point the most efficient effective way

00:10:23,220 --> 00:10:27,060
to do it and we don't General Mark and I

00:10:25,380 --> 00:10:30,329
don't and I most of us in this room

00:10:27,060 --> 00:10:35,980
don't believe in zero day disclosure or

00:10:30,329 --> 00:10:39,860
full disclosure unlimited an impact

00:10:35,980 --> 00:10:42,200
take it to Deb take it to death because

00:10:39,860 --> 00:10:43,940
ultimately when you know you've given

00:10:42,200 --> 00:10:46,490
them that you've given them the ability

00:10:43,940 --> 00:10:48,650
to evaluate this and give it all due

00:10:46,490 --> 00:10:51,320
consideration they decide well that's

00:10:48,650 --> 00:10:53,300
just it's not an issue well then bring

00:10:51,320 --> 00:10:54,890
post the same thing you took privately

00:10:53,300 --> 00:10:56,960
and say okay here's what I think is a

00:10:54,890 --> 00:10:58,460
problem as a project shouldn't we

00:10:56,960 --> 00:11:01,250
consider this and now they have the

00:10:58,460 --> 00:11:02,540
scrutiny of the general public and now

00:11:01,250 --> 00:11:04,610
they maybe have to give it some more

00:11:02,540 --> 00:11:06,500
consideration and say yeah you know that

00:11:04,610 --> 00:11:08,270
default really doesn't sound right let's

00:11:06,500 --> 00:11:11,510
let's do something about that to make it

00:11:08,270 --> 00:11:13,910
a little more reliable also don't assume

00:11:11,510 --> 00:11:16,310
when you email security at that you're

00:11:13,910 --> 00:11:19,910
talking to all the PMC members at the

00:11:16,310 --> 00:11:21,710
patchy httpd only 25 30 of them are

00:11:19,910 --> 00:11:24,100
actually participating on the security

00:11:21,710 --> 00:11:27,260
list we have a hundred PMC members

00:11:24,100 --> 00:11:29,930
historically and some of them may be

00:11:27,260 --> 00:11:31,640
easy easily convinced that there is a

00:11:29,930 --> 00:11:38,330
problem where the security list

00:11:31,640 --> 00:11:40,640
initially did recent examples which all

00:11:38,330 --> 00:11:42,470
so far yeah okay we're so it was

00:11:40,640 --> 00:11:45,740
reported to an Apache project and

00:11:42,470 --> 00:11:47,720
response in the project was well what's

00:11:45,740 --> 00:11:50,690
possibly wrong with that that's not a

00:11:47,720 --> 00:11:54,140
problem and then with the security team

00:11:50,690 --> 00:11:57,080
in my step is attack yeah it is the op's

00:11:54,140 --> 00:12:00,920
right you will gaping hole gear you need

00:11:57,080 --> 00:12:04,130
to fix it so good he can step inside

00:12:00,920 --> 00:12:06,110
that sort of advice as a more necessary

00:12:04,130 --> 00:12:07,540
but they've in each know what's going on

00:12:06,110 --> 00:12:09,519
in order to do that

00:12:07,540 --> 00:12:11,800
so it needs to be copied silence the

00:12:09,519 --> 00:12:15,519
project security pneus or the insecurity

00:12:11,800 --> 00:12:18,160
after all have the opportunity to step

00:12:15,519 --> 00:12:20,440
in and say again as problem because or

00:12:18,160 --> 00:12:22,660
explain from another perspective why

00:12:20,440 --> 00:12:26,639
they agree that is not an issue okay

00:12:22,660 --> 00:12:28,720
I'll go back and look at it because I

00:12:26,639 --> 00:12:31,569
having the source code available it's

00:12:28,720 --> 00:12:33,100
very nice I just went ahead and it's a

00:12:31,569 --> 00:12:35,620
case of the kind of thing where i can

00:12:33,100 --> 00:12:41,529
write my own subclass fix it myself and

00:12:35,620 --> 00:12:42,790
my project is fixed so it's not

00:12:41,529 --> 00:12:47,440
something that's going to take lots of

00:12:42,790 --> 00:12:51,850
months of research and like a ruddy

00:12:47,440 --> 00:12:58,089
reviews just submit Europe to me they

00:12:51,850 --> 00:13:02,130
already a treat is a mug maybe they

00:12:58,089 --> 00:13:02,130
don't they you may they may not agree

00:13:10,139 --> 00:13:16,209
yeah but it but all right back sure sure

00:13:14,380 --> 00:13:17,649
but I mean you you know if they say this

00:13:16,209 --> 00:13:19,060
is not a vulnerability than at some

00:13:17,649 --> 00:13:20,410
point you just have to say okay fine I'm

00:13:19,060 --> 00:13:22,769
gonna treat it as a defect cuz it's a

00:13:20,410 --> 00:13:22,769
defect

00:13:28,810 --> 00:13:34,480
yeah try to consensus other kinds of

00:13:31,450 --> 00:13:38,670
changes how to behave and be kind of our

00:13:34,480 --> 00:13:41,800
users and things but like security I

00:13:38,670 --> 00:13:43,240
really think it's worth instructing the

00:13:41,800 --> 00:13:47,110
user experience of it or it's worth

00:13:43,240 --> 00:13:48,160
pushing it really I mean you don't you

00:13:47,110 --> 00:13:49,960
don't have to take it as far as

00:13:48,160 --> 00:13:52,089
Microsoft did with their the way they

00:13:49,960 --> 00:13:54,730
rolled out UAC I mean I don't think we

00:13:52,089 --> 00:13:56,740
have to be that cruel to our users but I

00:13:54,730 --> 00:13:58,330
eventually you have to say look this

00:13:56,740 --> 00:14:00,430
really you know I we know we made it

00:13:58,330 --> 00:14:01,870
really easy for you before but that

00:14:00,430 --> 00:14:03,070
really wasn't a good idea and we're

00:14:01,870 --> 00:14:05,800
going to be a little stricter in the

00:14:03,070 --> 00:14:09,310
future and we've had this are the

00:14:05,800 --> 00:14:10,720
default CGI examples at httpd those used

00:14:09,310 --> 00:14:13,450
to be turned on as soon as you install

00:14:10,720 --> 00:14:16,120
that you could do echo and oh well we

00:14:13,450 --> 00:14:18,520
had some you tf7 issues because of IE s

00:14:16,120 --> 00:14:20,680
bud we had and and that is actually an

00:14:18,520 --> 00:14:23,230
interesting point is that very often

00:14:20,680 --> 00:14:25,740
you're going to run in and market it at

00:14:23,230 --> 00:14:29,500
this with how the jet the Java Runtime

00:14:25,740 --> 00:14:31,750
very often is the root cause of these

00:14:29,500 --> 00:14:33,850
problems in the web servers case it's

00:14:31,750 --> 00:14:35,560
very often been something that's very

00:14:33,850 --> 00:14:38,530
specific to IE or something that is

00:14:35,560 --> 00:14:40,030
specific to certain browsers that in

00:14:38,530 --> 00:14:43,089
fact he have nothing to do with it it

00:14:40,030 --> 00:14:45,280
we're following the protocol we did

00:14:43,089 --> 00:14:48,040
exactly what we were promised or what we

00:14:45,280 --> 00:14:49,930
were told to do by the spec and the

00:14:48,040 --> 00:14:53,530
client in this particular case didn't

00:14:49,930 --> 00:14:56,470
behave my my most interesting experience

00:14:53,530 --> 00:14:59,920
myself in in the security world was when

00:14:56,470 --> 00:15:03,190
I ended up assisting being part of the

00:14:59,920 --> 00:15:05,980
solution to what we call the HTTP

00:15:03,190 --> 00:15:08,260
response splitting vulnerability and

00:15:05,980 --> 00:15:11,440
basically what this was was if you were

00:15:08,260 --> 00:15:14,020
very clever in inserting certain

00:15:11,440 --> 00:15:16,930
carriage returns and other escaped

00:15:14,020 --> 00:15:19,300
carriage returns each and almost each

00:15:16,930 --> 00:15:21,250
and every web server product every

00:15:19,300 --> 00:15:25,690
single gateway product out there from

00:15:21,250 --> 00:15:28,810
everybody from no Netscape to Microsoft

00:15:25,690 --> 00:15:32,589
to Oracle to swell at the time son all

00:15:28,810 --> 00:15:34,959
of these had some defect and none of the

00:15:32,589 --> 00:15:37,300
defects were the same because every

00:15:34,959 --> 00:15:39,550
author was trying to be permissive in

00:15:37,300 --> 00:15:40,839
how they processed the input so if you

00:15:39,550 --> 00:15:41,680
got a header and you couldn't quite

00:15:40,839 --> 00:15:43,870
understand it

00:15:41,680 --> 00:15:47,710
maybe they turned it into something that

00:15:43,870 --> 00:15:49,960
was understandable the request

00:15:47,710 --> 00:15:52,180
responsibility of ulnar abilities came

00:15:49,960 --> 00:15:55,720
into play because each of these proxies

00:15:52,180 --> 00:15:58,149
behave differently that they each broke

00:15:55,720 --> 00:15:59,830
each other's expectations so they could

00:15:58,149 --> 00:16:01,630
basically work out that oh if you pass

00:15:59,830 --> 00:16:04,270
this but only through an Apache web

00:16:01,630 --> 00:16:06,850
server and only to an iis server this is

00:16:04,270 --> 00:16:08,680
the net impact and so it was a really

00:16:06,850 --> 00:16:12,610
fat we have to change the rules and

00:16:08,680 --> 00:16:15,610
basically say look the RFC says every

00:16:12,610 --> 00:16:17,800
line must be terminated with a CR LF if

00:16:15,610 --> 00:16:19,630
they violate that we can no longer be

00:16:17,800 --> 00:16:22,570
permissive we're going to have to be

00:16:19,630 --> 00:16:24,880
very strict about certain patterns

00:16:22,570 --> 00:16:27,250
certain behaviors that we expect a

00:16:24,880 --> 00:16:30,490
browser to have and if somebody's just

00:16:27,250 --> 00:16:34,149
maybe typing you know we all use telnet

00:16:30,490 --> 00:16:36,040
to test our web server and if you don't

00:16:34,149 --> 00:16:38,589
send a crl f-fine it's going to stop

00:16:36,040 --> 00:16:41,770
working but we needed to become much

00:16:38,589 --> 00:16:43,899
more strict just so that every other

00:16:41,770 --> 00:16:45,640
product we interoperate with had a

00:16:43,899 --> 00:16:50,080
similar set of expectations and that

00:16:45,640 --> 00:16:52,720
that class of bugs took nearly a year to

00:16:50,080 --> 00:16:54,820
fix when when you all of the different

00:16:52,720 --> 00:16:56,500
actors that were involved or implicated

00:16:54,820 --> 00:16:58,480
in one way or another in that they were

00:16:56,500 --> 00:17:00,400
either accepting things that they

00:16:58,480 --> 00:17:01,900
shouldn't have or passing things on and

00:17:00,400 --> 00:17:04,720
decoding things that they shouldn't have

00:17:01,900 --> 00:17:06,309
one way or another they were we were

00:17:04,720 --> 00:17:10,660
each doing something slightly different

00:17:06,309 --> 00:17:17,130
and that that in and of itself was the

00:17:10,660 --> 00:17:17,130
defect so other other questions other

00:17:19,010 --> 00:17:28,169
call it bug track still and Valdez I

00:17:22,829 --> 00:17:29,820
think was one but they're realistic are

00:17:28,169 --> 00:17:31,140
good to follow even as they're talking

00:17:29,820 --> 00:17:34,500
about vulnerabilities on the Beatles

00:17:31,140 --> 00:17:35,820
product other products and you see on

00:17:34,500 --> 00:17:38,130
some of these lists kind of debate

00:17:35,820 --> 00:17:39,630
sometimes between borders or something

00:17:38,130 --> 00:17:41,460
actually there's a full disclosure was

00:17:39,630 --> 00:17:43,320
to where you take some of these debates

00:17:41,460 --> 00:17:44,610
break out of the public and even if

00:17:43,320 --> 00:17:46,860
sometimes they're little silly they

00:17:44,610 --> 00:17:49,520
could be very instructive on both the

00:17:46,860 --> 00:17:56,250
class opposed to be looking for and how

00:17:49,520 --> 00:18:00,900
to interact that is how reporters now

00:17:56,250 --> 00:18:03,570
that's I was going to say well Vonda von

00:18:00,900 --> 00:18:05,669
dev and full disclosure or amusing in

00:18:03,570 --> 00:18:09,030
that neither of them really believe that

00:18:05,669 --> 00:18:11,429
you have to have any sort of responsible

00:18:09,030 --> 00:18:12,720
disclosure none of the there you know as

00:18:11,429 --> 00:18:15,090
soon as you see something interesting

00:18:12,720 --> 00:18:18,510
you can post it up there and say hey but

00:18:15,090 --> 00:18:20,070
if we just saw this behavior couldn't

00:18:18,510 --> 00:18:21,990
this become a vulnerability or can't we

00:18:20,070 --> 00:18:23,840
find a way to exploit this and you can

00:18:21,990 --> 00:18:26,190
have these deep philosophical

00:18:23,840 --> 00:18:27,540
discussions about how can you what

00:18:26,190 --> 00:18:29,370
interesting things can you do in

00:18:27,540 --> 00:18:35,010
manipulating the stack if you actually

00:18:29,370 --> 00:18:37,890
have a crash whereas bug track is one of

00:18:35,010 --> 00:18:40,130
my favorites is a more formalized I'm

00:18:37,890 --> 00:18:42,480
this is where we have a official

00:18:40,130 --> 00:18:44,309
vulnerability it is there is an

00:18:42,480 --> 00:18:46,200
announcement of it they're probably our

00:18:44,309 --> 00:18:48,290
vendor responses that are coordinated

00:18:46,200 --> 00:18:50,570
with it it probably is not a zero-day

00:18:48,290 --> 00:18:53,280
because the zero-day is tend to get

00:18:50,570 --> 00:18:55,919
posted out to the other list to the full

00:18:53,280 --> 00:18:57,480
disclosure I've owned up those are the

00:18:55,919 --> 00:18:58,860
three that I use I don't know does it

00:18:57,480 --> 00:19:03,590
does anyone else here have other

00:18:58,860 --> 00:19:07,669
favorite security hacking forums

00:19:03,590 --> 00:19:10,679
disclosure sites anything like that i

00:19:07,669 --> 00:19:12,360
would say full disclosure needs a fairly

00:19:10,679 --> 00:19:13,980
heavy filter on it we don't to get

00:19:12,360 --> 00:19:16,750
useful information out of it yeah

00:19:13,980 --> 00:19:19,810
there's a lot of girl

00:19:16,750 --> 00:19:22,410
les I find just keeping up with the

00:19:19,810 --> 00:19:25,480
fresh science blog is quite good for

00:19:22,410 --> 00:19:30,550
general battery it's not necessarily

00:19:25,480 --> 00:19:34,590
related I'll wait for your general

00:19:30,550 --> 00:19:40,120
knowledge I think it's quite amazing job

00:19:34,590 --> 00:19:43,390
proud good point is there a place where

00:19:40,120 --> 00:19:46,690
it's formalized and Sosa's to be easily

00:19:43,390 --> 00:19:48,190
understandable when what I say I've

00:19:46,690 --> 00:19:51,160
identified some situation how do I

00:19:48,190 --> 00:19:54,250
determine to what degree and represents

00:19:51,160 --> 00:19:56,650
the truth well again this goes back to

00:19:54,250 --> 00:20:01,170
the one quote I took from the web page

00:19:56,650 --> 00:20:03,580
in 2001 are we able it does the vector

00:20:01,170 --> 00:20:06,190
whatever input you're putting into it

00:20:03,580 --> 00:20:07,960
does it cause the machine to spend an

00:20:06,190 --> 00:20:09,520
inordinate amount of resources in

00:20:07,960 --> 00:20:12,190
comparison to the amount of resources

00:20:09,520 --> 00:20:16,360
you had to expend to cause that service

00:20:12,190 --> 00:20:22,240
for that program service whatever to to

00:20:16,360 --> 00:20:24,040
have that impact right so it and

00:20:22,240 --> 00:20:26,230
obviously there's also I mean totally

00:20:24,040 --> 00:20:28,330
different classes we have disclosed we

00:20:26,230 --> 00:20:31,000
have data disclosure we have

00:20:28,330 --> 00:20:34,150
vulnerabilities which actually allow you

00:20:31,000 --> 00:20:38,410
to manipulate and destroy or corrupt

00:20:34,150 --> 00:20:40,240
records and so forth in terms of the

00:20:38,410 --> 00:20:42,990
large java projects we have the

00:20:40,240 --> 00:20:45,190
foundation and of course

00:20:42,990 --> 00:20:50,500
landscape of the Java Access Controller

00:20:45,190 --> 00:20:52,350
security ok when once you start talking

00:20:50,500 --> 00:20:55,690
about the job security manager and

00:20:52,350 --> 00:20:58,030
issues with that for starters I would

00:20:55,690 --> 00:21:04,540
argue that the vulnerabilities are in

00:20:58,030 --> 00:21:07,270
the JDM not in the products up yes Polly

00:21:04,540 --> 00:21:10,710
the potential problem situation is if

00:21:07,270 --> 00:21:13,240
you use the access control really is to

00:21:10,710 --> 00:21:17,140
invoke some code with accidents around

00:21:13,240 --> 00:21:21,000
but that you may those things probably

00:21:17,140 --> 00:21:21,000
yeah then you will have a problem yeah

00:21:22,440 --> 00:21:28,020
if it's exploitable the caveat being if

00:21:26,470 --> 00:21:30,460
it's exploitable then yes it would be

00:21:28,020 --> 00:21:31,630
because you'd be able to do you know

00:21:30,460 --> 00:21:33,160
you'll be able to do so he built by the

00:21:31,630 --> 00:21:34,900
manipulator file and read a file you

00:21:33,160 --> 00:21:38,440
should go to remit read or delete a file

00:21:34,900 --> 00:21:41,080
should be able to delete so if there is

00:21:38,440 --> 00:21:45,250
an element of can you actually export

00:21:41,080 --> 00:21:46,690
it's on and it's ok for you don't

00:21:45,250 --> 00:21:48,670
necessarily have to have working code

00:21:46,690 --> 00:21:51,940
but you need to have at least some idea

00:21:48,670 --> 00:21:53,860
of how it might be exploitable rather

00:21:51,940 --> 00:21:55,120
than oh I found this code that looks

00:21:53,860 --> 00:21:57,430
like this and i'm sure that must be a

00:21:55,120 --> 00:21:59,710
problem without any rational explanation

00:21:57,430 --> 00:22:02,890
of how it might be I was exploiting now

00:21:59,710 --> 00:22:04,789
I'm aware so all discussions taking

00:22:02,890 --> 00:22:07,649
place in the open

00:22:04,789 --> 00:22:09,210
vulnerabilities of this type that yes

00:22:07,649 --> 00:22:11,159
we're trying to address those and

00:22:09,210 --> 00:22:13,679
eventually we will that there's not

00:22:11,159 --> 00:22:14,909
really a sense of urgency associated

00:22:13,679 --> 00:22:17,669
with them and from the security

00:22:14,909 --> 00:22:19,289
perspective all the participants myself

00:22:17,669 --> 00:22:21,600
included definitely thought of it from

00:22:19,289 --> 00:22:23,760
that perspective into here now I mean

00:22:21,600 --> 00:22:27,510
let me take for example a lot of the

00:22:23,760 --> 00:22:30,299
defects in SSL computational theoretical

00:22:27,510 --> 00:22:33,890
defects all have basically boiled back

00:22:30,299 --> 00:22:37,289
down to having being able to measure two

00:22:33,890 --> 00:22:39,840
microseconds the computational time that

00:22:37,289 --> 00:22:42,510
a given encryption takes so as soon as

00:22:39,840 --> 00:22:45,000
you know that it's a this complex or

00:22:42,510 --> 00:22:48,090
this simple and you can compare you can

00:22:45,000 --> 00:22:51,149
actually begin to walk through and begin

00:22:48,090 --> 00:22:52,919
to narrow your hash or narrow the the

00:22:51,149 --> 00:22:55,260
data set that you're evaluating because

00:22:52,919 --> 00:22:57,600
as long as you have to work out every

00:22:55,260 --> 00:23:00,029
one of those 20 48 bits and a 2048-bit

00:22:57,600 --> 00:23:01,529
encryption great it's going to take you

00:23:00,029 --> 00:23:03,600
a very long time but as soon as you can

00:23:01,529 --> 00:23:06,690
say well yeah but I can throw away these

00:23:03,600 --> 00:23:07,740
these 75 bits are just garbage I mean we

00:23:06,690 --> 00:23:09,690
know we know where they're going to come

00:23:07,740 --> 00:23:11,460
from we know they're based on a clock we

00:23:09,690 --> 00:23:13,350
know they're based on whatever all the

00:23:11,460 --> 00:23:14,760
sudden the problem you know you keep

00:23:13,350 --> 00:23:17,640
shrinking the number of bits this is why

00:23:14,760 --> 00:23:20,100
md5 or the the hash is useless now

00:23:17,640 --> 00:23:23,840
because it's I think the problem set is

00:23:20,100 --> 00:23:27,710
now what 64 bits 68 bits out of a tease

00:23:23,840 --> 00:23:30,960
they slowly just chopped off the

00:23:27,710 --> 00:23:34,110
computational problem but as I say lucky

00:23:30,960 --> 00:23:37,110
13 which is a new TLS vulnerability and

00:23:34,110 --> 00:23:40,279
this entire class of problem is that if

00:23:37,110 --> 00:23:43,279
you can measure and it used to be that

00:23:40,279 --> 00:23:45,299
fine if they have a local account

00:23:43,279 --> 00:23:47,220
potentially they are going to be able to

00:23:45,299 --> 00:23:49,710
use that information against the server

00:23:47,220 --> 00:23:52,500
that they have a local count on at this

00:23:49,710 --> 00:23:54,059
point with gigabit Gigabit Ethernet with

00:23:52,500 --> 00:23:55,799
the way the data centers are structured

00:23:54,059 --> 00:23:57,659
now you can get those millisecond

00:23:55,799 --> 00:23:59,659
timings you know somewhere in the same

00:23:57,659 --> 00:24:01,710
building somewhere in the same County

00:23:59,659 --> 00:24:03,899
you don't actually need the same

00:24:01,710 --> 00:24:05,039
physical presence that you used to have

00:24:03,899 --> 00:24:07,950
to have to make those kind of

00:24:05,039 --> 00:24:10,200
computational timing attacks so

00:24:07,950 --> 00:24:13,409
that it what what is what is a

00:24:10,200 --> 00:24:15,120
vulnerability today it was alone what

00:24:13,409 --> 00:24:17,309
was not a vulnerability yesterday can be

00:24:15,120 --> 00:24:19,940
a vulnerability today just by that very

00:24:17,309 --> 00:24:23,100
virtue that people have different tools

00:24:19,940 --> 00:24:27,419
that the nature of copy of computing has

00:24:23,100 --> 00:24:29,429
changed by going back to Java security

00:24:27,419 --> 00:24:32,399
manager and things of that lets you do

00:24:29,429 --> 00:24:37,019
and discussions in the pub leg it

00:24:32,399 --> 00:24:40,350
depends on how easy those things are to

00:24:37,019 --> 00:24:41,760
exploit as to how much of a problem it

00:24:40,350 --> 00:24:43,440
is that there's something there's a

00:24:41,760 --> 00:24:45,059
discussion happening in deaf and I

00:24:43,440 --> 00:24:46,919
personally I don't think i have a

00:24:45,059 --> 00:24:51,029
problem about a discussion of the dev

00:24:46,919 --> 00:24:52,950
list I had a highly theoretical that we

00:24:51,029 --> 00:24:54,090
can't really see a way to exploit it but

00:24:52,950 --> 00:24:55,559
we think there might be an issue here

00:24:54,090 --> 00:24:57,870
and kind of that kind of discussion on

00:24:55,559 --> 00:24:59,220
the deficit is probably okay as long as

00:24:57,870 --> 00:25:01,019
you're planning on fixing it fairly soon

00:24:59,220 --> 00:25:02,399
because chances are at some point

00:25:01,019 --> 00:25:06,750
somebody might figure out a way to use

00:25:02,399 --> 00:25:09,750
it but eat again there's judgment and

00:25:06,750 --> 00:25:11,760
there's balance and if you get more

00:25:09,750 --> 00:25:13,590
people looking at it on the dev list

00:25:11,760 --> 00:25:16,289
then that the extra eyes are potentially

00:25:13,590 --> 00:25:19,620
a benefit but the attackers are looking

00:25:16,289 --> 00:25:23,029
as well so you it's it is an element of

00:25:19,620 --> 00:25:25,409
judgement certainly it would be worth

00:25:23,029 --> 00:25:27,000
having a quick look at those issues and

00:25:25,409 --> 00:25:29,820
seeing if there's anything obviously

00:25:27,000 --> 00:25:35,070
exploitable what they'll also get into

00:25:29,820 --> 00:25:37,409
cylinder in the Tomcat realm is we often

00:25:35,070 --> 00:25:39,960
look at issues well that's only an issue

00:25:37,409 --> 00:25:44,820
if I don't trust the web application

00:25:39,960 --> 00:25:47,639
code that's running on tomcat and there

00:25:44,820 --> 00:25:50,220
are there is a very very small group of

00:25:47,639 --> 00:25:52,950
users that that's a problem for there

00:25:50,220 --> 00:25:55,200
either the extremely paranoid where

00:25:52,950 --> 00:25:58,529
organizations do not completely trust

00:25:55,200 --> 00:26:00,500
their own developers in some big

00:25:58,529 --> 00:26:04,200
financial institutions that's the case

00:26:00,500 --> 00:26:06,149
or you're in a sort of virtual hosting

00:26:04,200 --> 00:26:07,529
environment where you've got one jvn

00:26:06,149 --> 00:26:10,080
that's hosting apps from multiple

00:26:07,529 --> 00:26:10,770
customers wearing your customer 80s in a

00:26:10,080 --> 00:26:15,890
trust

00:26:10,770 --> 00:26:18,090
b and for tomcat what we generally do is

00:26:15,890 --> 00:26:20,970
those are the sorts of issues or so

00:26:18,090 --> 00:26:23,220
actually this is how its effect such a

00:26:20,970 --> 00:26:25,470
small proportion of our users that will

00:26:23,220 --> 00:26:27,180
announce that publicly and we'll fix it

00:26:25,470 --> 00:26:29,600
in any subsequent release and we do fix

00:26:27,180 --> 00:26:31,800
them but we tend to announce it first

00:26:29,600 --> 00:26:33,330
particularly end set up this is

00:26:31,800 --> 00:26:35,610
potentially so you need for this you

00:26:33,330 --> 00:26:41,100
need to watch that it's normally pretty

00:26:35,610 --> 00:26:43,050
pretty easy to detect yes we do we apply

00:26:41,100 --> 00:26:45,600
for a CV but we'll announce it loft and

00:26:43,050 --> 00:26:47,850
then ate it before we do a release and

00:26:45,600 --> 00:26:51,330
that to some extent that that's driven

00:26:47,850 --> 00:26:52,440
by the fact that if you're in a security

00:26:51,330 --> 00:26:54,510
projects environment and you're using

00:26:52,440 --> 00:26:57,480
Tom camp by far the simplest solution is

00:26:54,510 --> 00:26:59,850
to run multiple instances that's far

00:26:57,480 --> 00:27:00,990
more secure and we'll get you follow

00:26:59,850 --> 00:27:03,720
because the OS will then do a lot of

00:27:00,990 --> 00:27:04,920
protection for you so generally our

00:27:03,720 --> 00:27:08,120
recommendations know that's what should

00:27:04,920 --> 00:27:11,970
be doing anyway really so that's its

00:27:08,120 --> 00:27:13,530
review it as less of a risk because it's

00:27:11,970 --> 00:27:15,330
very few situations where you have

00:27:13,530 --> 00:27:18,060
really untrusted apps running side by

00:27:15,330 --> 00:27:19,140
side in the same jvm so if that's what

00:27:18,060 --> 00:27:22,140
sort of thing that's being discussed

00:27:19,140 --> 00:27:24,270
then I think that's probably okay to

00:27:22,140 --> 00:27:26,580
discuss it on the death list but yeah

00:27:24,270 --> 00:27:30,120
you probably will need CVS if they're

00:27:26,580 --> 00:27:32,310
exploitable and they didn't be fixed and

00:27:30,120 --> 00:27:36,600
when you do get into something like a

00:27:32,310 --> 00:27:39,480
beast or crime or we get into lucky 13

00:27:36,600 --> 00:27:41,940
these TLS issues there their ecosystem

00:27:39,480 --> 00:27:45,030
why did there is no band aid we cannot

00:27:41,940 --> 00:27:47,960
fix this tomorrow there is no way that I

00:27:45,030 --> 00:27:51,870
mean we it takes potentially years I

00:27:47,960 --> 00:27:56,490
myself I work at a secure government

00:27:51,870 --> 00:27:58,100
environment is governed by the security

00:27:56,490 --> 00:28:00,260
rules of the

00:27:58,100 --> 00:28:05,380
the United States Department of Commerce

00:28:00,260 --> 00:28:09,020
and US Department defense and other

00:28:05,380 --> 00:28:12,620
homeland security issues and one of the

00:28:09,020 --> 00:28:18,320
reasons why the agency i work for has

00:28:12,620 --> 00:28:20,980
not gone to xml based communications in

00:28:18,320 --> 00:28:24,470
web services because of the

00:28:20,980 --> 00:28:27,980
vulnerabilities inherent that in the

00:28:24,470 --> 00:28:30,559
specifications on what constitutes a

00:28:27,980 --> 00:28:33,409
high definition of what constitutes an

00:28:30,559 --> 00:28:38,750
external entity and when is an external

00:28:33,409 --> 00:28:42,799
entity referenced it expanded and how

00:28:38,750 --> 00:28:45,380
well you reference your URLs in absence

00:28:42,799 --> 00:28:49,450
of a trusting who are at entity

00:28:45,380 --> 00:28:53,000
dictionary yeah and tom cat has had a

00:28:49,450 --> 00:28:56,299
number of fund abilities around external

00:28:53,000 --> 00:28:58,520
analysis in that you could you could do

00:28:56,299 --> 00:29:02,020
all sorts of interesting things from

00:28:58,520 --> 00:29:04,280
just reading the EC personnel file

00:29:02,020 --> 00:29:08,330
there's another interesting one where

00:29:04,280 --> 00:29:10,549
you could it's back to this and 200 just

00:29:08,330 --> 00:29:12,770
after lee side by side but you could

00:29:10,549 --> 00:29:14,929
replace the external cars used by

00:29:12,770 --> 00:29:17,150
another and then they read orbit that

00:29:14,929 --> 00:29:19,039
their actual figuration fight which

00:29:17,150 --> 00:29:21,650
included things like a text passwords

00:29:19,039 --> 00:29:25,750
get quite interesting quite quickly but

00:29:21,650 --> 00:29:25,750
there are the excellent

00:29:44,570 --> 00:29:49,890
there are lots of issues like that just

00:29:48,360 --> 00:29:54,330
follow your foot bill saying that the

00:29:49,890 --> 00:29:57,090
ESL stuff when you get sort of Fatima

00:29:54,330 --> 00:30:00,750
versatile the SSL get other service

00:29:57,090 --> 00:30:02,640
stuff starts to get quite interesting so

00:30:00,750 --> 00:30:06,510
what is that really a vulnerability is

00:30:02,640 --> 00:30:09,150
yes I can I can do this thing that very

00:30:06,510 --> 00:30:10,470
much computational server but I can do

00:30:09,150 --> 00:30:13,050
always the same thing with a valid

00:30:10,470 --> 00:30:14,730
request so is there really any

00:30:13,050 --> 00:30:16,320
difference to using this thing that okay

00:30:14,730 --> 00:30:17,700
it looks a little bit naughty little bit

00:30:16,320 --> 00:30:21,300
sneaky it's really no different to

00:30:17,700 --> 00:30:23,160
sending a valid question around so what

00:30:21,300 --> 00:30:24,870
what point does it become a

00:30:23,160 --> 00:30:28,350
vulnerability and then you match that

00:30:24,870 --> 00:30:31,410
definition is nonlinear response based

00:30:28,350 --> 00:30:35,850
on the size of the inputs Microsoft has

00:30:31,410 --> 00:30:39,660
even documented that if you buy your

00:30:35,850 --> 00:30:43,910
single server to iis server in such a

00:30:39,660 --> 00:30:48,480
way you can send a basic HTTP yet

00:30:43,910 --> 00:30:53,220
followed by the URL of the system

00:30:48,480 --> 00:30:55,470
followed by any that select strength

00:30:53,220 --> 00:30:57,870
that would apology the entire contents

00:30:55,470 --> 00:31:00,690
of the server plus all the databases

00:30:57,870 --> 00:31:03,810
yeah we see this all the time and the

00:31:00,690 --> 00:31:05,430
problem is basically detain ting we have

00:31:03,810 --> 00:31:08,010
to trust that all the information coming

00:31:05,430 --> 00:31:09,900
over the wire is tainted that we can't

00:31:08,010 --> 00:31:12,900
trust a bit of it but then we assume

00:31:09,900 --> 00:31:15,240
that for example the utf-8 bug we assume

00:31:12,900 --> 00:31:17,880
that we actually when we say if

00:31:15,240 --> 00:31:19,920
substring the word select case

00:31:17,880 --> 00:31:22,590
insensitive and we don't even anticipate

00:31:19,920 --> 00:31:24,930
that oh by the way there are under utf-8

00:31:22,590 --> 00:31:26,910
potentially six other five other

00:31:24,930 --> 00:31:30,150
different ways of representing the

00:31:26,910 --> 00:31:32,210
letter s that that test will always miss

00:31:30,150 --> 00:31:37,309
so

00:31:32,210 --> 00:31:40,799
the character character which is UTF

00:31:37,309 --> 00:31:42,899
which is an invalid you here yes exactly

00:31:40,799 --> 00:31:45,600
and so when when son made it very

00:31:42,899 --> 00:31:47,490
permissive that it would accept all five

00:31:45,600 --> 00:31:50,220
of these but the spec says the utf-8

00:31:47,490 --> 00:31:52,200
spec for years has said warning caveat

00:31:50,220 --> 00:31:54,809
if you allow all of these different

00:31:52,200 --> 00:31:57,929
forms to coexist you are never going to

00:31:54,809 --> 00:31:59,220
be able to write a security restriction

00:31:57,929 --> 00:32:01,169
you'll never be able to blacklist these

00:31:59,220 --> 00:32:03,450
things and and go into basic design

00:32:01,169 --> 00:32:05,549
decisions like am I going to whitelist

00:32:03,450 --> 00:32:06,690
or am I going to blacklist well we we

00:32:05,549 --> 00:32:08,760
know what happens when we get the

00:32:06,690 --> 00:32:11,730
blacklist wrong so maybe the whitelist

00:32:08,760 --> 00:32:13,529
makes more sense but you're right i mean

00:32:11,730 --> 00:32:16,169
and i think you made a very good point

00:32:13,529 --> 00:32:19,110
the whole problem of defective by design

00:32:16,169 --> 00:32:21,630
i mean is a very serious problem and the

00:32:19,110 --> 00:32:23,610
nice thing is is that we are open source

00:32:21,630 --> 00:32:26,130
and where I kind of wanted to take this

00:32:23,610 --> 00:32:28,590
was we the advantage here is that we are

00:32:26,130 --> 00:32:32,429
peer reviewed the advantage here is is

00:32:28,590 --> 00:32:34,470
that we can we have each other to be

00:32:32,429 --> 00:32:36,510
each other's you know next set of

00:32:34,470 --> 00:32:38,309
eyeballs and say you know that was a

00:32:36,510 --> 00:32:40,710
really nice idea but I don't think it's

00:32:38,309 --> 00:32:43,320
actually going to be effective when we

00:32:40,710 --> 00:32:47,190
start applying this problem and without

00:32:43,320 --> 00:32:50,100
without that openness the only other the

00:32:47,190 --> 00:32:52,289
only possibly similar example is when

00:32:50,100 --> 00:32:54,270
you have a purely academic environment

00:32:52,289 --> 00:32:56,909
and you have that sort of peer review

00:32:54,270 --> 00:32:59,429
going on but certainly I mean everybody

00:32:56,909 --> 00:33:00,929
gets a little chuckle out of oh wow I

00:32:59,429 --> 00:33:03,029
just found a bug in your software you

00:33:00,929 --> 00:33:06,539
know and hopefully it's all in good fun

00:33:03,029 --> 00:33:08,580
and sometimes you know when you realize

00:33:06,539 --> 00:33:11,190
that oh this has unintended consequences

00:33:08,580 --> 00:33:12,720
yeah this is why security at exist so

00:33:11,190 --> 00:33:15,779
that we can have this discussion quietly

00:33:12,720 --> 00:33:17,399
but afterwards it's always it makes

00:33:15,779 --> 00:33:19,860
sense to bring that back to the list and

00:33:17,399 --> 00:33:21,799
have the public discussion of why was

00:33:19,860 --> 00:33:24,539
this this way why did what other

00:33:21,799 --> 00:33:26,490
exploits are there i mean we very often

00:33:24,539 --> 00:33:28,770
will take something and classified as a

00:33:26,490 --> 00:33:30,000
low priority vulnerability and three

00:33:28,770 --> 00:33:32,159
weeks later it is a high priority

00:33:30,000 --> 00:33:34,020
vulnerability and then I'm two months

00:33:32,159 --> 00:33:37,470
later it's critical because now we've

00:33:34,020 --> 00:33:40,370
found other other extremes or other

00:33:37,470 --> 00:33:40,370
other approaches

00:33:46,250 --> 00:34:09,599
medium security vulnerabilities it's

00:34:05,070 --> 00:34:12,000
half past say that quite letter yes it

00:34:09,599 --> 00:34:14,159
does do subtle things yes it does

00:34:12,000 --> 00:34:16,740
required by local processing but this

00:34:14,159 --> 00:34:20,940
class of genuine valid officially right

00:34:16,740 --> 00:34:29,490
over here the same size actually more

00:34:20,940 --> 00:34:31,619
processing work and again I mean we have

00:34:29,490 --> 00:34:33,419
things like the PNG vulnerability which

00:34:31,619 --> 00:34:35,250
you know it's oh by the way we just

00:34:33,419 --> 00:34:37,409
never anticipated that when we said that

00:34:35,250 --> 00:34:38,879
this fight has to be c4 that anybody

00:34:37,409 --> 00:34:41,730
would ever put something other than c4

00:34:38,879 --> 00:34:44,460
in that way and so this I mean in these

00:34:41,730 --> 00:34:47,280
things can be very very widespread the

00:34:44,460 --> 00:34:49,169
question is what is my experience is an

00:34:47,280 --> 00:34:51,240
openoffice user if I open in a

00:34:49,169 --> 00:34:53,070
legitimate document and it crashes the

00:34:51,240 --> 00:34:55,800
browser and doesn't otherwise you know

00:34:53,070 --> 00:34:57,450
doesn't have an opportunity to execute

00:34:55,800 --> 00:34:59,790
code it just crashes is that a

00:34:57,450 --> 00:35:02,190
vulnerability well I just restart the

00:34:59,790 --> 00:35:05,400
browser you know it's sort of the fail

00:35:02,190 --> 00:35:07,349
whale approach to computing but then

00:35:05,400 --> 00:35:09,540
again if i'm running a service and i'm

00:35:07,349 --> 00:35:13,020
using that very same decoder so that i

00:35:09,540 --> 00:35:15,990
can turn that dock into an HTML for one

00:35:13,020 --> 00:35:17,730
of hundreds of users that does seem to

00:35:15,990 --> 00:35:20,849
me to be in vulnerability going back to

00:35:17,730 --> 00:35:24,030
that question today yeah how excessive

00:35:20,849 --> 00:35:24,839
is the process again to bed hey you run

00:35:24,030 --> 00:35:27,239
for the ladies

00:35:24,839 --> 00:35:28,410
contest of well is there a valid file of

00:35:27,239 --> 00:35:31,469
a similar size would take more

00:35:28,410 --> 00:35:33,569
processing in which case this this one

00:35:31,469 --> 00:35:35,670
over here is probably just a bug but if

00:35:33,569 --> 00:35:37,019
you've got a malformed file that takes

00:35:35,670 --> 00:35:39,119
us or orders of magnitude more

00:35:37,019 --> 00:35:42,930
processing that valid ones of a similar

00:35:39,119 --> 00:35:44,309
size then that probably heading towards

00:35:42,930 --> 00:35:46,710
the vulnerability I think the the

00:35:44,309 --> 00:35:48,630
further it gets so the further it gets

00:35:46,710 --> 00:35:50,969
away in terms of how much more

00:35:48,630 --> 00:35:52,859
processing is required then the further

00:35:50,969 --> 00:35:54,329
it gets up a severity chart in terms of

00:35:52,859 --> 00:35:55,859
its a denial of service but I think it

00:35:54,329 --> 00:35:58,499
starts off to the answers to bug and

00:35:55,859 --> 00:36:01,589
where you draw those lines is really to

00:35:58,499 --> 00:36:03,509
them up to the project to to decide but

00:36:01,589 --> 00:36:05,989
from it with my security team hat on I

00:36:03,509 --> 00:36:09,299
would sort of expect that if there was a

00:36:05,989 --> 00:36:12,119
file that if it was malformed required

00:36:09,299 --> 00:36:14,430
year orders of areas or processing than

00:36:12,119 --> 00:36:18,589
any valid file that I'd probably expect

00:36:14,430 --> 00:36:21,809
to see a CVA attached to that but yes it

00:36:18,589 --> 00:36:23,670
yet yet another judgment call was going

00:36:21,809 --> 00:36:25,529
to say another another interesting as a

00:36:23,670 --> 00:36:26,999
developer and especially as a developers

00:36:25,529 --> 00:36:28,680
of libraries that are going to be

00:36:26,999 --> 00:36:30,089
consumed by developers I think one thing

00:36:28,680 --> 00:36:31,349
we can do is even if we're not going to

00:36:30,089 --> 00:36:33,210
declare each of these things to be

00:36:31,349 --> 00:36:35,219
vulnerabilities that doesn't mean that

00:36:33,210 --> 00:36:37,529
we can't point out in the documentation

00:36:35,219 --> 00:36:40,289
that by the way this is an unexpected

00:36:37,529 --> 00:36:42,450
side side effect of processing this sort

00:36:40,289 --> 00:36:44,519
of input is that you should not trust

00:36:42,450 --> 00:36:46,289
this particular library of this

00:36:44,519 --> 00:36:47,880
particular method to do what you're

00:36:46,289 --> 00:36:49,769
thinking it's doing it could potentially

00:36:47,880 --> 00:36:56,160
use quite a bit more resources than you

00:36:49,769 --> 00:37:00,079
were expecting best example that Indy or

00:36:56,160 --> 00:37:02,549
sort of example a tomcat dogs don't

00:37:00,079 --> 00:37:04,049
directory listings are turned off by

00:37:02,549 --> 00:37:06,150
default on that look because we think

00:37:04,049 --> 00:37:08,249
directory listings are insecure or but

00:37:06,150 --> 00:37:10,140
because of just the way you generate

00:37:08,249 --> 00:37:11,700
them if you've got large numbers of

00:37:10,140 --> 00:37:12,890
files in the directory and cause a

00:37:11,700 --> 00:37:14,960
denial sir

00:37:12,890 --> 00:37:16,760
our processing so they're disabled by

00:37:14,960 --> 00:37:17,900
default for that reason we discussed

00:37:16,760 --> 00:37:19,280
that in the dogs those are the

00:37:17,900 --> 00:37:21,320
consequences and people get to make the

00:37:19,280 --> 00:37:24,740
decision as to whether or not to an

00:37:21,320 --> 00:37:26,930
eight-way it doesn't stop people really

00:37:24,740 --> 00:37:28,460
is a directory listings must be insecure

00:37:26,930 --> 00:37:31,160
[ __ ] Todd cast disable the security

00:37:28,460 --> 00:37:32,840
breaches or not quite you need to read a

00:37:31,160 --> 00:37:38,090
little bit beyond that and understand

00:37:32,840 --> 00:37:41,090
why and personally I reckon it's in can

00:37:38,090 --> 00:37:42,920
be an ability but that's yet another

00:37:41,090 --> 00:37:44,600
debate it's ages also against the

00:37:42,920 --> 00:37:46,610
definition of a security vulnerability

00:37:44,600 --> 00:37:48,320
changes over time to be denial of

00:37:46,610 --> 00:37:51,380
service attack used to not be considered

00:37:48,320 --> 00:37:53,150
something worthy of you know Arakawa

00:37:51,380 --> 00:37:54,800
allowed for a dose wasn't considered

00:37:53,150 --> 00:37:56,780
release the myth that would necessarily

00:37:54,800 --> 00:37:57,650
accelerate a release or be considered a

00:37:56,780 --> 00:37:59,180
vulnerability because you weren't

00:37:57,650 --> 00:38:01,520
actually able to break in and steal any

00:37:59,180 --> 00:38:02,840
data anger just it was the equivalent of

00:38:01,520 --> 00:38:04,040
protesting in front of the Exxon

00:38:02,840 --> 00:38:06,860
headquarters or something like that

00:38:04,040 --> 00:38:08,810
right but then we also had an Internet

00:38:06,860 --> 00:38:10,790
where we have email servers be open

00:38:08,810 --> 00:38:16,730
realize so you know things that change

00:38:10,790 --> 00:38:19,070
things that do change over time time for

00:38:16,730 --> 00:38:21,250
to last short observations or questions

00:38:19,070 --> 00:38:21,250
and

00:38:26,570 --> 00:38:33,680
securities I mean we don't have security

00:38:38,810 --> 00:38:47,130
so I mean the problem I have is that in

00:38:43,710 --> 00:38:50,130
the PMC we don't have a number that are

00:38:47,130 --> 00:38:54,060
really interested in fixing this kind of

00:38:50,130 --> 00:38:57,750
our troopers on the other but we are

00:38:54,060 --> 00:39:01,260
some meters that could add more also I

00:38:57,750 --> 00:39:03,690
don't like the idea and it is privately

00:39:01,260 --> 00:39:07,620
being visible to all members of your

00:39:03,690 --> 00:39:11,520
passage of the condition that mean it's

00:39:07,620 --> 00:39:13,080
not that I don't trust them but we don't

00:39:11,520 --> 00:39:14,970
get any hand from them because they're

00:39:13,080 --> 00:39:18,450
not interested in that we must be seen

00:39:14,970 --> 00:39:21,600
by our security list episcopal school

00:39:18,450 --> 00:39:25,980
that is anyway so that we have a very

00:39:21,600 --> 00:39:28,080
much and what I would say if i would say

00:39:25,980 --> 00:39:30,540
you've got two options at one miss mrs.

00:39:28,080 --> 00:39:34,830
baby numbers and so their own private

00:39:30,540 --> 00:39:36,990
option second my is set up a second

00:39:34,830 --> 00:39:41,480
security list and you can certainly

00:39:36,990 --> 00:39:43,560
invite me [ __ ] and get onto that and

00:39:41,480 --> 00:39:46,230
invited by your life on stuff they don't

00:39:43,560 --> 00:39:49,100
even need big hitters I you might get

00:39:46,230 --> 00:39:52,050
some slightly raised eyebrows but if

00:39:49,100 --> 00:39:54,680
another dose of alien what if the

00:39:52,050 --> 00:39:54,680
contributions

00:40:09,200 --> 00:40:15,870
and if you do probably just cement for

00:40:12,840 --> 00:40:19,040
help it could suddenly have a base or

00:40:15,870 --> 00:40:22,200
consent validate walktrough daily

00:40:19,040 --> 00:40:25,890
achievement some time to take the

00:40:22,200 --> 00:40:27,630
playbook the epic of being on a PMC is

00:40:25,890 --> 00:40:30,000
then you're taking kind of collective

00:40:27,630 --> 00:40:32,250
responsibility for the project and and

00:40:30,000 --> 00:40:33,540
from time to time for special names for

00:40:32,250 --> 00:40:34,860
security issues working on the things

00:40:33,540 --> 00:40:36,600
that may not be personally interested

00:40:34,860 --> 00:40:39,510
for doing a bit of a sense of

00:40:36,600 --> 00:40:40,980
responsibility right so I just had to be

00:40:39,510 --> 00:40:42,540
response to the concerns you had

00:40:40,980 --> 00:40:44,310
sometimes it seems like some of the PMC

00:40:42,540 --> 00:40:47,880
members aren't interested in addressing

00:40:44,310 --> 00:40:51,330
security issues that's a cultural kind

00:40:47,880 --> 00:40:54,660
of thing that we can be loved that made

00:40:51,330 --> 00:40:56,900
of there's very last comment yet I

00:40:54,660 --> 00:41:04,040
actually

00:40:56,900 --> 00:41:08,140
I know we're getting security issues in

00:41:04,040 --> 00:41:11,540
it seemed likely right now but I think

00:41:08,140 --> 00:41:13,580
so one of the question I always have it

00:41:11,540 --> 00:41:17,140
is how much do you have to work with not

00:41:13,580 --> 00:41:20,630
just downstream projects but I wants a

00:41:17,140 --> 00:41:22,010
sister projects at the episode will

00:41:20,630 --> 00:41:24,830
agree again is like there will be

00:41:22,010 --> 00:41:26,480
reported against CSS specifically but if

00:41:24,830 --> 00:41:29,030
you're like looking at the segment ok

00:41:26,480 --> 00:41:30,620
this is nails with these other two

00:41:29,030 --> 00:41:33,020
projects that are very similar to see if

00:41:30,620 --> 00:41:38,090
it up but lose weight or access or

00:41:33,020 --> 00:41:40,520
whatever how much do you or the SSF of

00:41:38,090 --> 00:41:41,840
you feel you should be trying to forward

00:41:40,520 --> 00:41:44,810
this information along these other

00:41:41,840 --> 00:41:47,870
projects or contracted or I know what

00:41:44,810 --> 00:41:50,090
use it withdrawn motivation that people

00:41:47,870 --> 00:41:52,460
are like watching our PMT lists to see

00:41:50,090 --> 00:41:54,160
for this thing what does your boss

00:41:52,460 --> 00:41:57,140
around

00:41:54,160 --> 00:41:58,550
how would you take it I think if I sort

00:41:57,140 --> 00:42:00,650
of throw one of the things we probably

00:41:58,550 --> 00:42:04,609
do better is to share that information

00:42:00,650 --> 00:42:07,490
between projects and there's a couple of

00:42:04,609 --> 00:42:10,730
factors own so all of the projects that

00:42:07,490 --> 00:42:13,730
Tomcat consumes and then most different

00:42:10,730 --> 00:42:15,170
Commons we've got people in commons that

00:42:13,730 --> 00:42:16,760
are both contributing to them and

00:42:15,170 --> 00:42:19,310
keeping an eye if there's anything

00:42:16,760 --> 00:42:20,570
that's and a security concern and you

00:42:19,310 --> 00:42:23,900
know we've been able to take advantage

00:42:20,570 --> 00:42:25,790
of that starting up in a couple of

00:42:23,900 --> 00:42:27,440
issues and comments diamond that we've

00:42:25,790 --> 00:42:29,090
known about in advance because we have

00:42:27,440 --> 00:42:33,680
people in commons working on commons

00:42:29,090 --> 00:42:36,680
demon so that model definitely works but

00:42:33,680 --> 00:42:38,869
it does require two places

00:42:36,680 --> 00:42:42,980
responsibility on the consuming project

00:42:38,869 --> 00:42:45,440
to do the work I think the consumed

00:42:42,980 --> 00:42:48,350
projects could do a little bit more to

00:42:45,440 --> 00:42:50,180
publish the issues i'm certainly tomcat

00:42:48,350 --> 00:42:53,180
is pretty bad at telling Geronimo more

00:42:50,180 --> 00:42:54,980
Tommy but there's a security problem and

00:42:53,180 --> 00:42:56,660
i'll give you wish we could be a little

00:42:54,980 --> 00:42:58,550
better at that can drive you and being

00:42:56,660 --> 00:43:00,109
they've got mens on that thing disease

00:42:58,550 --> 00:43:03,050
they can read our security lists if they

00:43:00,109 --> 00:43:04,940
want to i was even going to suggest as a

00:43:03,050 --> 00:43:06,650
one-round about where to go is that we

00:43:04,940 --> 00:43:08,810
could actually right now every security

00:43:06,650 --> 00:43:10,520
at list goes to security at apache

00:43:08,810 --> 00:43:13,130
cheddar there isn't anything that says

00:43:10,520 --> 00:43:15,350
that security at tom cat couldn't also

00:43:13,130 --> 00:43:17,840
be mirrored and replicated to security

00:43:15,350 --> 00:43:21,170
at Geronimo or security at other

00:43:17,840 --> 00:43:23,600
downstream consumers if it would bring

00:43:21,170 --> 00:43:25,400
those people in to assault the illness

00:43:23,600 --> 00:43:27,260
if somebody from John would say could we

00:43:25,400 --> 00:43:29,090
sign up to security list I don't really

00:43:27,260 --> 00:43:30,440
see us saying names bill this right

00:43:29,090 --> 00:43:36,380
actually helped out and we're doing

00:43:30,440 --> 00:43:38,030
useful stuff these discover any kind of

00:43:36,380 --> 00:43:38,550
honor ability you know people will look

00:43:38,030 --> 00:43:40,230
at that

00:43:38,550 --> 00:43:41,700
well they might apply to these other

00:43:40,230 --> 00:43:43,530
projects they might have applied it in

00:43:41,700 --> 00:43:46,170
other languages because often refer to

00:43:43,530 --> 00:43:47,850
call it all the times forever so if you

00:43:46,170 --> 00:43:50,010
know most I don't know if an ounce every

00:43:47,850 --> 00:43:52,650
suffer update on an Apache announce or

00:43:50,010 --> 00:43:54,660
announced Apache work but I would assume

00:43:52,650 --> 00:43:56,730
every security related kind of thing

00:43:54,660 --> 00:43:58,740
perhaps they push their the

00:43:56,730 --> 00:44:01,230
recommendation is that every security

00:43:58,740 --> 00:44:03,330
very busy when published goes to users

00:44:01,230 --> 00:44:05,100
list deathless project an angel east

00:44:03,330 --> 00:44:07,470
apache an age-based bug tracker full

00:44:05,100 --> 00:44:12,420
disclosure so a good practice while the

00:44:07,470 --> 00:44:14,880
manage- but a good practice would be

00:44:12,420 --> 00:44:17,820
that for developers pretty much anybody

00:44:14,880 --> 00:44:20,370
in the asf to call announced Apache

00:44:17,820 --> 00:44:22,100
Oregon Museum owner ability even in a

00:44:20,370 --> 00:44:24,510
profit and project never heard it before

00:44:22,100 --> 00:44:25,980
you look at that vulnerability look at

00:44:24,510 --> 00:44:29,790
the classes that vulnerability and ask

00:44:25,980 --> 00:44:32,880
yourself might apply does not get

00:44:29,790 --> 00:44:34,140
sensible thing today well I want to

00:44:32,880 --> 00:44:37,350
thank everyone for all of your

00:44:34,140 --> 00:44:38,940
contributions to this discussion and for

00:44:37,350 --> 00:44:41,460
attending and I hope you all walked away

00:44:38,940 --> 00:44:43,650
with us new insight and some new ideas

00:44:41,460 --> 00:44:45,390
about how to approach we do have a few

00:44:43,650 --> 00:44:47,520
more security talks coming up after the

00:44:45,390 --> 00:44:50,430
lunch and then we're going to break into

00:44:47,520 --> 00:44:52,230
an ex fast feather content not is

00:44:50,430 --> 00:44:55,350
personally but find out all about

00:44:52,230 --> 00:44:58,790
incubator projects later on this

00:44:55,350 --> 00:44:58,790

YouTube URL: https://www.youtube.com/watch?v=kilPxU6gJLU


