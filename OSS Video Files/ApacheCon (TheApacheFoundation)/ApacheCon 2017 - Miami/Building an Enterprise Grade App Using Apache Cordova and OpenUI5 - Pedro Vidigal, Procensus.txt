Title: Building an Enterprise Grade App Using Apache Cordova and OpenUI5 - Pedro Vidigal, Procensus
Publication date: 2017-05-19
Playlist: ApacheCon 2017 - Miami
Description: 
	Building an Enterprise Grade App Using Apache Cordova and OpenUI5 - Pedro Vidigal, Procensus

There is a need growing need for fast deployment of enterprise-grade mobile applications and web apps responsive to all devices and running on the browser of your choice. Pedro Shows how to do it by harnessing by using the OpenUI5 JavaScript toolkit and Apache Cordova to build mobile applications using HTML5 Web development standards that target multiple platforms.

About Pedro Vidigal
Having worked for 7 years as a consultant for a multinational IT consultancy firm enabled me to acquire extensive experience in leading and designing and developing software, providing me with the opportunity to work from big multinational companies to small and medium ones all over the world.
My consultancy experience together with the MBA in management gave me that I have the business knowledge necessary to interact with the clients and align technology-related decisions with the company and client goals, identify opportunities and risks for the business, in building and designing solutions that solve a client need regardless of the underlining technology.

https://pt.linkedin.com/in/pvidigal
Captions: 
	00:00:00,030 --> 00:00:06,870
so I'm here to talk about the building

00:00:02,639 --> 00:00:11,849
enterprise applications using Apache

00:00:06,870 --> 00:00:15,240
Cordova and SAP open us ice so Who am I

00:00:11,849 --> 00:00:19,880
my name is Gary Vidigal I currently am a

00:00:15,240 --> 00:00:24,810
Cassandra consultant at Pythian but

00:00:19,880 --> 00:00:28,560
actually my I've been formerly I was

00:00:24,810 --> 00:00:32,189
working in eight or nine years as an SP

00:00:28,560 --> 00:00:36,980
consultant so I came from the dark side

00:00:32,189 --> 00:00:41,670
to the open source world so I was I

00:00:36,980 --> 00:00:43,680
worked mainly in I had a lot a lot of

00:00:41,670 --> 00:00:56,879
experience with the international

00:00:43,680 --> 00:01:00,800
clients Europe us also Asia so so let's

00:00:56,879 --> 00:01:06,479
start and I will start talking about

00:01:00,800 --> 00:01:13,080
open uy5 I as anyone has an experience

00:01:06,479 --> 00:01:20,159
with the city the know the so basically

00:01:13,080 --> 00:01:25,110
the SAT is a one of the leading ERP

00:01:20,159 --> 00:01:28,979
systems German one and while it is very

00:01:25,110 --> 00:01:31,439
very robust and basically offers you can

00:01:28,979 --> 00:01:35,579
integrate every single feature of a

00:01:31,439 --> 00:01:39,930
company inside it from the finance to

00:01:35,579 --> 00:01:48,329
Human Resources logistics material

00:01:39,930 --> 00:01:51,090
management etc etc etc it has a big flaw

00:01:48,329 --> 00:01:54,060
that most people don't actually like to

00:01:51,090 --> 00:01:59,759
use it because the the user interface

00:01:54,060 --> 00:02:01,920
from SAT was frozen in times in the

00:01:59,759 --> 00:02:05,340
night to beginning of the nineties let's

00:02:01,920 --> 00:02:09,750
say and so no one no one really really

00:02:05,340 --> 00:02:13,200
likes to use it sa P tried several

00:02:09,750 --> 00:02:17,130
approaches where say P is

00:02:13,200 --> 00:02:20,850
most of they tried several approaches

00:02:17,130 --> 00:02:24,260
with the with the interfaces but they

00:02:20,850 --> 00:02:27,390
were using mostly a closed source

00:02:24,260 --> 00:02:30,560
solution so this is their netweaver

00:02:27,390 --> 00:02:37,710
which you have to install in your PC and

00:02:30,560 --> 00:02:40,320
it only actually it works in in Windows

00:02:37,710 --> 00:02:44,400
kind of well but if you go if you are

00:02:40,320 --> 00:02:46,110
using Linux or Mac OS it works very

00:02:44,400 --> 00:02:50,090
badly because you have to install it

00:02:46,110 --> 00:02:53,400
using Java and it's it's a mess in

00:02:50,090 --> 00:02:57,030
particularly if you are a developer you

00:02:53,400 --> 00:03:01,470
it's very very very well and so they

00:02:57,030 --> 00:03:04,260
tried several approaches using a web

00:03:01,470 --> 00:03:07,410
interfaces but all proprietary is

00:03:04,260 --> 00:03:11,310
started with a technology that was

00:03:07,410 --> 00:03:13,800
called BSP it was Visine Java and then

00:03:11,310 --> 00:03:17,070
they it didn't have a lot of traction

00:03:13,800 --> 00:03:19,680
and they tried another one which was

00:03:17,070 --> 00:03:21,540
called web link Pro it's basically the

00:03:19,680 --> 00:03:24,660
layouts are very similar to the ones

00:03:21,540 --> 00:03:28,769
that you see here but except it's it's

00:03:24,660 --> 00:03:30,930
in in the web and the backend is in a

00:03:28,769 --> 00:03:36,630
bot and I don't know if you know the

00:03:30,930 --> 00:03:41,940
language it's a verb is a it's a city's

00:03:36,630 --> 00:03:48,060
own language and it's based from Kabul

00:03:41,940 --> 00:03:53,670
so while it's a COBOL with a not frozen

00:03:48,060 --> 00:03:56,850
in time so they tried several approaches

00:03:53,670 --> 00:04:01,320
and none of them actually worked and so

00:03:56,850 --> 00:04:05,280
they some years ago they come they came

00:04:01,320 --> 00:04:08,610
up with a with the list with actually it

00:04:05,280 --> 00:04:13,230
started not as open SAP open UI 5 it's

00:04:08,610 --> 00:04:16,650
it was called SAP new UI 5 which still

00:04:13,230 --> 00:04:21,150
exists and that one is is a closed

00:04:16,650 --> 00:04:23,410
source and after that it's this is

00:04:21,150 --> 00:04:26,010
basically its

00:04:23,410 --> 00:04:32,770
a web framework which is based in

00:04:26,010 --> 00:04:36,490
JavaScript html5 and css3 and developers

00:04:32,770 --> 00:04:40,560
they really enjoyed it and so they push

00:04:36,490 --> 00:04:47,410
their safety to to release the cause

00:04:40,560 --> 00:04:51,630
in 2005 the framework one red dot design

00:04:47,410 --> 00:04:54,060
awards so this is a really good at

00:04:51,630 --> 00:04:57,700
framework if you want to build the

00:04:54,060 --> 00:05:02,050
enterprise applications because you have

00:04:57,700 --> 00:05:05,200
already a lot of components pre-made so

00:05:02,050 --> 00:05:10,540
you don't lose time building stuff data

00:05:05,200 --> 00:05:13,510
they already it's already done so and so

00:05:10,540 --> 00:05:16,390
what it is again it's a JavaScript UI

00:05:13,510 --> 00:05:18,820
library it has a huge number of UI

00:05:16,390 --> 00:05:22,450
controls and I will show you a little

00:05:18,820 --> 00:05:26,920
bit later so it's a Model View

00:05:22,450 --> 00:05:30,610
controller it did it has that dividing

00:05:26,920 --> 00:05:33,400
with the backend so it's pretty easy to

00:05:30,610 --> 00:05:35,980
connect with this app it's obvious so

00:05:33,400 --> 00:05:38,919
you connect it with all data but

00:05:35,980 --> 00:05:43,960
actually you can use any back-end you

00:05:38,919 --> 00:05:46,240
want the project I did I one of the

00:05:43,960 --> 00:05:49,480
project the latest project I did that I

00:05:46,240 --> 00:05:53,080
actually wanna and I be actually I'm

00:05:49,480 --> 00:05:55,720
from Portugal again and I the project

00:05:53,080 --> 00:05:58,600
that that my company did I was working

00:05:55,720 --> 00:06:01,270
in a Portuguese consulting company

00:05:58,600 --> 00:06:04,380
called processors and we won an I

00:06:01,270 --> 00:06:07,990
variant price from site which is another

00:06:04,380 --> 00:06:10,960
ERP system from based in England which

00:06:07,990 --> 00:06:14,350
has a lot of traction in Europe and we

00:06:10,960 --> 00:06:20,020
we were up using up on uy5 and the back

00:06:14,350 --> 00:06:24,250
end was side so it's Enterprise great so

00:06:20,020 --> 00:06:28,150
since its built the the pieces go from

00:06:24,250 --> 00:06:31,479
SAT it's very very robust it it doesn't

00:06:28,150 --> 00:06:35,110
have a lot of errors and it works very

00:06:31,479 --> 00:06:36,800
well in the current browsers and every

00:06:35,110 --> 00:06:40,160
single touch device

00:06:36,800 --> 00:06:41,790
also it it's a responsive design it as

00:06:40,160 --> 00:06:44,550
it should be

00:06:41,790 --> 00:06:48,420
nowadays and now it's open source it

00:06:44,550 --> 00:06:51,600
started as a project Phoenix and then

00:06:48,420 --> 00:06:54,210
they changed when they change it to open

00:06:51,600 --> 00:06:57,530
UI five and that's why you in the symbol

00:06:54,210 --> 00:07:01,830
list you'll see the Phoenix

00:06:57,530 --> 00:07:03,930
so which companies are using this you

00:07:01,830 --> 00:07:08,910
can see there are a lot of companies are

00:07:03,930 --> 00:07:11,760
using open UI files of course s ap but

00:07:08,910 --> 00:07:16,790
you have a lot of big companies that are

00:07:11,760 --> 00:07:20,280
using this so again you can build a an

00:07:16,790 --> 00:07:24,750
application very fast and you don't have

00:07:20,280 --> 00:07:30,810
to spend time bothering about which

00:07:24,750 --> 00:07:34,580
devices you are dealing with so use some

00:07:30,810 --> 00:07:40,740
of the documentation for for the

00:07:34,580 --> 00:07:45,570
framework if you are interested and so

00:07:40,740 --> 00:07:48,380
as I said again this is a build by ASAP

00:07:45,570 --> 00:07:52,050
so it's very very good quality

00:07:48,380 --> 00:07:55,710
it supports internationalization also

00:07:52,050 --> 00:08:00,950
right to left which is important for for

00:07:55,710 --> 00:08:05,190
Arabic countries accessibility so you

00:08:00,950 --> 00:08:06,540
somehow if you can see write it it works

00:08:05,190 --> 00:08:09,890
very well as well

00:08:06,540 --> 00:08:14,330
it has teams to support it it's

00:08:09,890 --> 00:08:18,030
expressive you can extend it and also

00:08:14,330 --> 00:08:22,470
you can the seeming so basically you can

00:08:18,030 --> 00:08:24,320
build an application and actually when

00:08:22,470 --> 00:08:27,800
you build an application for a client

00:08:24,320 --> 00:08:31,590
usually you do want to change the

00:08:27,800 --> 00:08:35,840
templates to fit the the needs of the of

00:08:31,590 --> 00:08:40,140
the clients you have a lot of pre pre

00:08:35,840 --> 00:08:44,160
existing templates and you can also you

00:08:40,140 --> 00:08:47,250
can be a city also provides a theme

00:08:44,160 --> 00:08:48,070
designer so you can change the themes

00:08:47,250 --> 00:08:52,449
very very

00:08:48,070 --> 00:08:55,029
very easily so you have here some

00:08:52,449 --> 00:09:02,800
examples of the different things that

00:08:55,029 --> 00:09:05,730
you can use again and I will show you

00:09:02,800 --> 00:09:15,240
some of the applications that you could

00:09:05,730 --> 00:09:15,240
do with the open UI files so let me

00:09:20,140 --> 00:09:24,610
let me see if I can open me

00:09:48,860 --> 00:09:56,870
so si P they already have a lot of

00:09:52,810 --> 00:10:01,570
applications that are done in that then

00:09:56,870 --> 00:10:08,870
that you can use so they range from

00:10:01,570 --> 00:10:12,350
several HR CRM retail travel and

00:10:08,870 --> 00:10:16,310
expenses logistics as I said you have a

00:10:12,350 --> 00:10:19,730
lot of a lot of a lot of things that you

00:10:16,310 --> 00:10:27,680
can do so for example I can show you

00:10:19,730 --> 00:10:30,410
some this is the good thing the good

00:10:27,680 --> 00:10:32,900
thing about open ui5 you already have a

00:10:30,410 --> 00:10:35,300
lot of a lot of applications that you

00:10:32,900 --> 00:10:41,900
can use you can base your own

00:10:35,300 --> 00:10:46,220
applications on this ones so and so

00:10:41,900 --> 00:10:52,150
basically this saves a lot of a lot of a

00:10:46,220 --> 00:10:52,150
lot of developing timing

00:10:56,640 --> 00:11:12,780
this is also this is responsive so if I

00:11:01,940 --> 00:11:17,330
if I change the layout maybe this one is

00:11:12,780 --> 00:11:17,330
not a good example let me check

00:11:35,560 --> 00:11:43,220
actually none of these examples are very

00:11:38,360 --> 00:11:48,650
good for the responsive layouts but yeah

00:11:43,220 --> 00:11:51,020
it's a it's a I I would I wanted to show

00:11:48,650 --> 00:11:54,740
you the application that I did but

00:11:51,020 --> 00:11:57,500
unfortunately I do have signed some gear

00:11:54,740 --> 00:12:01,460
I cannot I cannot show you the the

00:11:57,500 --> 00:12:11,540
applications because of the DSM idea is

00:12:01,460 --> 00:12:14,440
that we had to shut to sign so

00:12:11,540 --> 00:12:14,440
continuing

00:12:19,430 --> 00:12:29,390
so what what of course when you're

00:12:25,610 --> 00:12:32,300
building with with the web a web web

00:12:29,390 --> 00:12:35,450
framework you're never going to get the

00:12:32,300 --> 00:12:39,080
performance you get from from a standard

00:12:35,450 --> 00:12:42,260
application and so there are some things

00:12:39,080 --> 00:12:45,010
that you have to do when you're

00:12:42,260 --> 00:12:47,270
developing as an open UI five

00:12:45,010 --> 00:12:50,750
applications that you have to take into

00:12:47,270 --> 00:12:56,060
account most of them are common sense I

00:12:50,750 --> 00:12:59,180
would say so you should for example you

00:12:56,060 --> 00:13:04,040
should it's very easy to get the styling

00:12:59,180 --> 00:13:07,820
wrong so you should avoid our coding the

00:13:04,040 --> 00:13:13,430
CSS and just use the the seeming engine

00:13:07,820 --> 00:13:16,700
that the framework provides you should

00:13:13,430 --> 00:13:19,630
as well you should when you're dealing

00:13:16,700 --> 00:13:23,450
with the controls you should use the

00:13:19,630 --> 00:13:30,860
controls functions to to manipulate it

00:13:23,450 --> 00:13:33,140
and not mess with the with the CSS one

00:13:30,860 --> 00:13:37,310
of the common issues like and this is

00:13:33,140 --> 00:13:39,620
really really common sense but it's

00:13:37,310 --> 00:13:43,460
sometimes it you do happen to see it

00:13:39,620 --> 00:13:45,860
that since you have the themes some

00:13:43,460 --> 00:13:49,030
sometimes the developers say okay I'm

00:13:45,860 --> 00:13:51,710
not getting what I want from this

00:13:49,030 --> 00:13:54,590
parameter and so they would use a

00:13:51,710 --> 00:13:57,040
different parameter for that particular

00:13:54,590 --> 00:14:02,030
that would suit them for that particular

00:13:57,040 --> 00:14:05,660
scenario so but in the end that doesn't

00:14:02,030 --> 00:14:08,150
really work because when if you then

00:14:05,660 --> 00:14:11,410
want to use that parameter the thing

00:14:08,150 --> 00:14:14,620
goes falls apart it doesn't work so

00:14:11,410 --> 00:14:17,270
don't hard-code or concatenate strings

00:14:14,620 --> 00:14:21,260
that you want to be translated again

00:14:17,270 --> 00:14:24,650
this is more in all frameworks so it

00:14:21,260 --> 00:14:28,490
will be very hard you will have to redo

00:14:24,650 --> 00:14:32,990
the the jaw the work at words and then

00:14:28,490 --> 00:14:36,440
since you this is a a JavaScript

00:14:32,990 --> 00:14:39,589
vacation you one of also the issues that

00:14:36,440 --> 00:14:43,370
you went up is that you when you load

00:14:39,589 --> 00:14:45,620
the the controls that you have you

00:14:43,370 --> 00:14:49,880
sometimes what happens is that you end

00:14:45,620 --> 00:14:52,130
up loading all of the this is a one-page

00:14:49,880 --> 00:14:55,930
application so you could end up loading

00:14:52,130 --> 00:14:59,360
all of the controls in the beginning and

00:14:55,930 --> 00:15:01,279
so but this is it has a lot of negative

00:14:59,360 --> 00:15:04,160
effects on performance so you don't want

00:15:01,279 --> 00:15:07,130
to start the application and then wait

00:15:04,160 --> 00:15:11,089
10 or 15 or 20 seconds because you're

00:15:07,130 --> 00:15:16,490
downloading the controls so you should

00:15:11,089 --> 00:15:18,589
be very careful so only only call on the

00:15:16,490 --> 00:15:23,120
application manifest the controls that

00:15:18,589 --> 00:15:27,410
you really want and if you do if you do

00:15:23,120 --> 00:15:30,140
instantiate the controls please use and

00:15:27,410 --> 00:15:37,660
don't instantiate them and then hide

00:15:30,140 --> 00:15:44,630
them that it doesn't make sense again so

00:15:37,660 --> 00:15:47,930
this is the the web parts and I don't

00:15:44,630 --> 00:15:52,220
know if anyone knows about the Apache

00:15:47,930 --> 00:15:57,740
Cordova project so Apache Cordova is

00:15:52,220 --> 00:15:59,899
basically a an Apache project that

00:15:57,740 --> 00:16:01,540
enables you to build I've read

00:15:59,899 --> 00:16:07,600
applications

00:16:01,540 --> 00:16:13,339
so what the CDC was developed as

00:16:07,600 --> 00:16:15,230
probably most of you or could know for

00:16:13,339 --> 00:16:19,220
the PhoneGap project which is another

00:16:15,230 --> 00:16:22,370
big project this was born by any Toby as

00:16:19,220 --> 00:16:26,270
though we bought it in 2011 and then

00:16:22,370 --> 00:16:31,850
they donated the source code to to the

00:16:26,270 --> 00:16:36,500
foundation what is there again we have a

00:16:31,850 --> 00:16:40,370
lot of companies using the project and

00:16:36,500 --> 00:16:45,379
what does this actually do so what this

00:16:40,370 --> 00:16:48,229
does is that you can you you select

00:16:45,379 --> 00:16:53,299
a web framework again you can use open

00:16:48,229 --> 00:17:00,259
uy5 or whatever and then what this

00:16:53,299 --> 00:17:02,179
enables it is to just embed the the you

00:17:00,259 --> 00:17:05,870
create a container when you where you

00:17:02,179 --> 00:17:08,689
embed a webview so you develop the

00:17:05,870 --> 00:17:11,620
application in technology technologies

00:17:08,689 --> 00:17:15,980
that you know it's very easy to find

00:17:11,620 --> 00:17:19,519
developers that know HTML files CSS or

00:17:15,980 --> 00:17:21,559
an JavaScript but it's not made

00:17:19,519 --> 00:17:25,419
especially if you have a small company

00:17:21,559 --> 00:17:28,940
maybe it's not very easy to find a

00:17:25,419 --> 00:17:30,980
developer that knows Android development

00:17:28,940 --> 00:17:35,240
and then another you have to find

00:17:30,980 --> 00:17:38,779
another one for iOS Firefox I always

00:17:35,240 --> 00:17:41,690
it's it guy it can be MS it's sometimes

00:17:38,779 --> 00:17:44,750
it's very difficult and so this is a

00:17:41,690 --> 00:17:47,600
good approach if you are building some

00:17:44,750 --> 00:17:52,490
kinds of application that are not very

00:17:47,600 --> 00:17:54,860
performance performance heavy so you can

00:17:52,490 --> 00:17:59,600
you build you have the container and the

00:17:54,860 --> 00:18:02,259
key value of Cordova is that you when

00:17:59,600 --> 00:18:07,929
you build the container the container

00:18:02,259 --> 00:18:07,929
enables you to interact with the native

00:18:09,070 --> 00:18:14,299
functionalities of the devices and so

00:18:11,779 --> 00:18:18,500
you don't really know needs to know how

00:18:14,299 --> 00:18:22,370
the how the devices work you don't need

00:18:18,500 --> 00:18:25,279
to know to develop Android or iOS you

00:18:22,370 --> 00:18:28,820
develop for one and it works for every

00:18:25,279 --> 00:18:34,129
single one of them so these are some of

00:18:28,820 --> 00:18:37,309
the the support of the OSS like I said

00:18:34,129 --> 00:18:40,669
Android Blackberry Firefox OS which

00:18:37,309 --> 00:18:45,639
actually Firefox OS is basically

00:18:40,669 --> 00:18:45,639
developed developing a on web

00:18:48,090 --> 00:18:55,960
so again what are the pros and cons it

00:18:54,160 --> 00:18:59,250
enables you to use standard web

00:18:55,960 --> 00:19:02,800
technologies which is good for again for

00:18:59,250 --> 00:19:05,650
everyone knows basically you just need

00:19:02,800 --> 00:19:12,270
to develop it once no need to develop

00:19:05,650 --> 00:19:14,560
for multiple platforms you can existing

00:19:12,270 --> 00:19:17,740
sometimes you can have any existing

00:19:14,560 --> 00:19:23,440
weather and you want for example you

00:19:17,740 --> 00:19:28,330
want to to to put it on the Android in

00:19:23,440 --> 00:19:31,750
in Google Play Store on or on Apple

00:19:28,330 --> 00:19:34,120
Store and so for for you to do that you

00:19:31,750 --> 00:19:38,200
it's not possible if you're using a web

00:19:34,120 --> 00:19:41,260
app but if you put it on a container on

00:19:38,200 --> 00:19:43,510
a cord of a container then you can so if

00:19:41,260 --> 00:19:45,910
you already have apps working and you

00:19:43,510 --> 00:19:49,120
want to put it on the stores this is a

00:19:45,910 --> 00:19:50,890
possible way to do it as I said it

00:19:49,120 --> 00:19:55,500
enables you to access native

00:19:50,890 --> 00:19:59,910
functionality of the devices via api's

00:19:55,500 --> 00:20:04,750
which were what are the downsides so

00:19:59,910 --> 00:20:07,420
some of the the functional native

00:20:04,750 --> 00:20:10,660
functionality may not be present one of

00:20:07,420 --> 00:20:14,620
the examples is the calendar feature

00:20:10,660 --> 00:20:17,200
it's not you can at this moment you

00:20:14,620 --> 00:20:21,790
cannot use the interact with the

00:20:17,200 --> 00:20:24,630
calendar if it's this again it's an open

00:20:21,790 --> 00:20:30,550
source project so if anyone wants to

00:20:24,630 --> 00:20:35,110
contribute it's nice Sensei it has a

00:20:30,550 --> 00:20:38,020
let's reach UI then the then the 90s but

00:20:35,110 --> 00:20:42,430
since you are building on the web you

00:20:38,020 --> 00:20:45,970
can use whatever so it's not as

00:20:42,430 --> 00:20:51,580
performance or performance as the native

00:20:45,970 --> 00:20:53,680
application but again if you have very

00:20:51,580 --> 00:20:56,680
good web developers maybe the

00:20:53,680 --> 00:21:00,970
application and not so good native

00:20:56,680 --> 00:21:01,510
developers maybe the application won't

00:21:00,970 --> 00:21:05,040
work

00:21:01,510 --> 00:21:08,050
as differently as the the other one

00:21:05,040 --> 00:21:11,970
owner the other issues is that the the

00:21:08,050 --> 00:21:17,350
plugins do vary in quality so between

00:21:11,970 --> 00:21:19,630
devices and for example there are some

00:21:17,350 --> 00:21:24,070
companies that do contribute a lot to

00:21:19,630 --> 00:21:29,230
curdle for example the plugins that were

00:21:24,070 --> 00:21:31,750
done the the for Android Google actually

00:21:29,230 --> 00:21:36,010
contributes a lot for those plugins so

00:21:31,750 --> 00:21:41,710
they are really robust as of as for for

00:21:36,010 --> 00:21:44,230
example Firefox or or or cream they also

00:21:41,710 --> 00:21:51,580
contribute but Apple actually doesn't

00:21:44,230 --> 00:21:56,950
doesn't so the the the plugins are made

00:21:51,580 --> 00:22:00,280
from people like us that want to to

00:21:56,950 --> 00:22:03,910
contribute to the to the to the projects

00:22:00,280 --> 00:22:07,240
and so sometimes you do see some weird

00:22:03,910 --> 00:22:09,280
stuff that works in one and it doesn't

00:22:07,240 --> 00:22:15,460
work exactly as you would you would

00:22:09,280 --> 00:22:15,940
expect on another platform so how do you

00:22:15,460 --> 00:22:21,760
start

00:22:15,940 --> 00:22:26,190
so you basically select the devices and

00:22:21,760 --> 00:22:30,760
the OS versions that you want you have a

00:22:26,190 --> 00:22:34,360
command-line client you basically the

00:22:30,760 --> 00:22:36,730
norm is that you would want to build a

00:22:34,360 --> 00:22:41,280
single page application it's much easier

00:22:36,730 --> 00:22:45,990
and then you just have to you use the

00:22:41,280 --> 00:22:51,310
command line you build the the

00:22:45,990 --> 00:22:54,160
application for the targeted OS and our

00:22:51,310 --> 00:22:59,280
end device and basically that's it is

00:22:54,160 --> 00:22:59,280
very actually easy and this is the

00:22:59,730 --> 00:23:07,300
framework so again you have the the web

00:23:04,120 --> 00:23:13,750
application it can be whatever framework

00:23:07,300 --> 00:23:14,680
that issues it renders you use the HTML

00:23:13,750 --> 00:23:16,870
rendering and

00:23:14,680 --> 00:23:22,150
of the application for example Android

00:23:16,870 --> 00:23:26,590
then iOS now share the same so WebKit

00:23:22,150 --> 00:23:30,940
and then you have the de Cordova plugins

00:23:26,590 --> 00:23:34,000
so the you have an API that connects

00:23:30,940 --> 00:23:37,600
with which is common to all of them

00:23:34,000 --> 00:23:39,930
which you develop in the JavaScript that

00:23:37,600 --> 00:23:44,950
you connect with the Cordova plugins and

00:23:39,930 --> 00:23:51,190
then between the Cordova plugins and the

00:23:44,950 --> 00:23:53,440
OS plugins you have different different

00:23:51,190 --> 00:23:56,190
connectors for each one of them which

00:23:53,440 --> 00:23:58,240
you don't need to worry about the

00:23:56,190 --> 00:24:01,930
different the code of the framework

00:23:58,240 --> 00:24:06,640
manages everything you just you target

00:24:01,930 --> 00:24:09,390
the the devices that you want and then

00:24:06,640 --> 00:24:15,280
it does all by itself which is the

00:24:09,390 --> 00:24:18,730
actually good thing about the the

00:24:15,280 --> 00:24:25,000
framework so this is I don't know if you

00:24:18,730 --> 00:24:29,410
can read this is some of the the os's

00:24:25,000 --> 00:24:34,600
and the all the plugins and the that are

00:24:29,410 --> 00:24:36,910
available for for each and some of them

00:24:34,600 --> 00:24:40,690
with the some notes that some things

00:24:36,910 --> 00:24:45,360
that might not be working as expected

00:24:40,690 --> 00:24:49,000
one of the things about this is that a

00:24:45,360 --> 00:24:51,640
Cordova Apache Cordova that the Apache

00:24:49,000 --> 00:24:58,150
foundation is actually expecting that in

00:24:51,640 --> 00:25:01,630
the future the project will be it won't

00:24:58,150 --> 00:25:04,810
be necessary because with the evolution

00:25:01,630 --> 00:25:09,990
of html5 there are a lot of functions

00:25:04,810 --> 00:25:13,900
that are are already there so the the

00:25:09,990 --> 00:25:18,700
trends will be probably that html5 will

00:25:13,900 --> 00:25:22,300
be able to do this this interaction with

00:25:18,700 --> 00:25:25,660
the native API of the of the devices

00:25:22,300 --> 00:25:28,590
some of them are actually already

00:25:25,660 --> 00:25:33,220
working so you can use HTML

00:25:28,590 --> 00:25:36,490
html5 and connect with the with your

00:25:33,220 --> 00:25:39,810
camera for example he is unknit cordova

00:25:36,490 --> 00:25:43,510
for this but if you're using

00:25:39,810 --> 00:25:49,500
accelerometers if you're using contacts

00:25:43,510 --> 00:25:54,940
it's actually nice to use a unified

00:25:49,500 --> 00:25:58,300
framework so this is the if you are

00:25:54,940 --> 00:26:00,910
interested this is the documentation of

00:25:58,300 --> 00:26:06,400
the project some of the places you could

00:26:00,910 --> 00:26:08,830
go for questions Stack Overflow works

00:26:06,400 --> 00:26:14,610
very nice there's a an active community

00:26:08,830 --> 00:26:17,130
and the documentation is actually also

00:26:14,610 --> 00:26:20,200
also nice if you are interested it's

00:26:17,130 --> 00:26:27,600
very easy to build your your first

00:26:20,200 --> 00:26:32,230
application it's very very yeah so

00:26:27,600 --> 00:26:34,870
basically that's it I hope you enjoyed

00:26:32,230 --> 00:26:40,170
it and if you have any questions please

00:26:34,870 --> 00:26:40,170
feel free to to to ask

00:26:44,700 --> 00:26:50,549

YouTube URL: https://www.youtube.com/watch?v=o5TX4gaukvQ


