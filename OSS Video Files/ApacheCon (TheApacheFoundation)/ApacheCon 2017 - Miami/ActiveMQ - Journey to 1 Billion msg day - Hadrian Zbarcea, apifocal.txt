Title: ActiveMQ - Journey to 1 Billion msg day - Hadrian Zbarcea, apifocal
Publication date: 2017-05-17
Playlist: ApacheCon 2017 - Miami
Description: 
	ActiveMQ - Journey to 1 Billion msg/day - Hadrian Zbarcea, apifocal

Asynchronous messaging is a necessary complement to the more synchronous REST. Apache ActiveMQ is the de-facto leader of the JMS based messaging frameworks. Robust and feature rich, ActiveMQ provides excellent scalability characteristics via networks of brokers. However, ActiveMQ alone is not sufficient by itself when deploying a massively scalable, secure and self-healing cluster of brokers. This talk walks the audience through the requirements, choices and solutions adopted when deploying in production such a messaging system.

About Hadrian Zbarcea
Hadrian is a technology consultant and a member and officer of the Apache Software Foundation who devotes most of his time to open source. With over 20 years of experience in system integration, committer on projects like ActiveMQ, Camel, Brooklyn, ODE and others, he brings experience implementing countless large-scale solutions. Outside his career, Hadrian enjoys quality time with his family and playing go or chess.
Captions: 
	00:00:00,030 --> 00:00:07,410
so thanks for spending the next hour so

00:00:04,259 --> 00:00:10,700
with me and having a shorter lunch

00:00:07,410 --> 00:00:13,130
I'm Hadrian I've been involved in the

00:00:10,700 --> 00:00:16,170
integration space for more than 20 years

00:00:13,130 --> 00:00:18,029
I'm a committed on a few projects at the

00:00:16,170 --> 00:00:21,949
adventures of the foundation ActiveMQ

00:00:18,029 --> 00:00:27,390
gamma being some of them broke clean old

00:00:21,949 --> 00:00:29,220
others tinker pub I'm a member of the

00:00:27,390 --> 00:00:30,960
foundation and until recently I was the

00:00:29,220 --> 00:00:32,520
VP for fundraising as well so I'm

00:00:30,960 --> 00:00:37,230
involved in the foundation as well not

00:00:32,520 --> 00:00:39,059
just the projects I've been doing open

00:00:37,230 --> 00:00:41,610
source for more than 15 years so if you

00:00:39,059 --> 00:00:47,489
have any questions for me you know how

00:00:41,610 --> 00:00:52,199
to find me so I'm going to talk about

00:00:47,489 --> 00:00:57,590
the project we started in the messaging

00:00:52,199 --> 00:00:59,789
space it started about two years ago and

00:00:57,590 --> 00:01:01,859
the messaging states got very

00:00:59,789 --> 00:01:04,439
commoditized most of the messaging

00:01:01,859 --> 00:01:08,040
products were built between 2000 2005

00:01:04,439 --> 00:01:11,100
when you got MSN cue from Microsoft

00:01:08,040 --> 00:01:13,080
you got IBM and Oracle with their well

00:01:11,100 --> 00:01:17,009
must be I think at the time that started

00:01:13,080 --> 00:01:19,470
it with their ESB s and messaging

00:01:17,009 --> 00:01:23,250
solutions and it got commoditize pretty

00:01:19,470 --> 00:01:25,350
fast I'm gonna talk more about it so the

00:01:23,250 --> 00:01:30,170
question was what can you innovate now

00:01:25,350 --> 00:01:35,520
in you know 2015 at the time in the

00:01:30,170 --> 00:01:37,829
messaging space and we were looking at

00:01:35,520 --> 00:01:39,540
obviously the thing you look at the

00:01:37,829 --> 00:01:43,259
scalability right so most of the

00:01:39,540 --> 00:01:47,390
projects were scaling up actually and

00:01:43,259 --> 00:01:47,390
you had projects like Kafka and

00:01:47,540 --> 00:01:52,229
rabbitmq that's written in Erlang right

00:01:49,950 --> 00:01:53,939
they were trying to do to use resources

00:01:52,229 --> 00:01:55,829
better to be faster

00:01:53,939 --> 00:01:58,530
actually even ActiveMQ had the sub

00:01:55,829 --> 00:02:00,840
project called the follow that was much

00:01:58,530 --> 00:02:05,340
faster than via I didn't kill core a few

00:02:00,840 --> 00:02:08,160
years ago so a lot of people focused on

00:02:05,340 --> 00:02:10,979
scaling up and we thought there are some

00:02:08,160 --> 00:02:14,129
opportunities to scale out meaning

00:02:10,979 --> 00:02:19,080
putting more brokers and serving more

00:02:14,129 --> 00:02:22,730
and more traffic by basically producing

00:02:19,080 --> 00:02:26,190
your broker configuration at scale and

00:02:22,730 --> 00:02:29,879
when I say scaling out I don't really

00:02:26,190 --> 00:02:32,400
mean just having more brokers because

00:02:29,879 --> 00:02:34,709
that's a feature that activemq supports

00:02:32,400 --> 00:02:39,420
for I don't know more than five years is

00:02:34,709 --> 00:02:42,950
called network of brokers what I mean

00:02:39,420 --> 00:02:45,480
mostly is supporting a large number of

00:02:42,950 --> 00:02:49,080
applications messaging applications

00:02:45,480 --> 00:02:51,569
running in the same brokers I should

00:02:49,080 --> 00:02:56,550
have started by asking how many of you

00:02:51,569 --> 00:03:00,959
are at least intermediate with messaging

00:02:56,550 --> 00:03:01,440
systems and ActiveMQ oh so that that's

00:03:00,959 --> 00:03:04,530
awesome

00:03:01,440 --> 00:03:07,110
and this presentation was meant to be

00:03:04,530 --> 00:03:09,269
less technical although we can make it

00:03:07,110 --> 00:03:15,060
technical if you have questions and to

00:03:09,269 --> 00:03:17,909
be more sharing our experience seeing

00:03:15,060 --> 00:03:20,159
many messaging deployments of what

00:03:17,909 --> 00:03:22,170
things work and what what works less

00:03:20,159 --> 00:03:24,390
than what you have to do in order to

00:03:22,170 --> 00:03:32,220
have a scalable and robust messaging

00:03:24,390 --> 00:03:34,170
system so I was thinking if you have

00:03:32,220 --> 00:03:36,690
questions like because it's not a large

00:03:34,170 --> 00:03:37,950
audience we can probably address them

00:03:36,690 --> 00:03:40,099
while you have them I don't know we're

00:03:37,950 --> 00:03:46,470
gonna see how it goes

00:03:40,099 --> 00:03:48,090
so that's how the journey began and we

00:03:46,470 --> 00:03:52,200
thought that if you have a messaging

00:03:48,090 --> 00:03:53,879
system what things really customers look

00:03:52,200 --> 00:03:56,069
at in production or you know massive

00:03:53,879 --> 00:03:56,879
users look at and the first one is

00:03:56,069 --> 00:03:58,950
security and

00:03:56,879 --> 00:04:00,540
activemq already had good security

00:03:58,950 --> 00:04:02,640
characteristics so there was not a lot

00:04:00,540 --> 00:04:05,269
to innovate there the question was how

00:04:02,640 --> 00:04:07,590
you use it because

00:04:05,269 --> 00:04:09,900
activemq like many other projects at

00:04:07,590 --> 00:04:12,599
Apache are both the framework and the

00:04:09,900 --> 00:04:14,340
product people see the the brokers in

00:04:12,599 --> 00:04:16,530
activemq for instance and they take them

00:04:14,340 --> 00:04:18,600
the way they are not realizing that

00:04:16,530 --> 00:04:21,269
actually a lot of things underneath can

00:04:18,600 --> 00:04:23,310
be rearranged in different ways the

00:04:21,269 --> 00:04:25,070
elements of the framework to obtain

00:04:23,310 --> 00:04:26,790
brokers with different characteristics

00:04:25,070 --> 00:04:28,410
so and

00:04:26,790 --> 00:04:33,330
that's something I wanted to show you

00:04:28,410 --> 00:04:35,100
today as well so in the security area we

00:04:33,330 --> 00:04:37,380
actually had to constrain ActiveMQ

00:04:35,100 --> 00:04:40,200
because active enqueue allows for

00:04:37,380 --> 00:04:43,810
anonymous connections and we want it to

00:04:40,200 --> 00:04:45,530
be secure so we only support

00:04:43,810 --> 00:04:48,060
[Music]

00:04:45,530 --> 00:04:50,790
authenticated connections so we enforce

00:04:48,060 --> 00:04:51,930
having a username and a password which

00:04:50,790 --> 00:04:55,320
is what gem is required for

00:04:51,930 --> 00:04:57,000
authentication and then the other thing

00:04:55,320 --> 00:05:00,060
this is probably the most interesting

00:04:57,000 --> 00:05:05,970
thing we did is the multi-tenancy which

00:05:00,060 --> 00:05:13,850
no mq system that's enterprise class

00:05:05,970 --> 00:05:18,480
does today including the commercial ones

00:05:13,850 --> 00:05:20,520
so I'm going to talk more about monkey

00:05:18,480 --> 00:05:23,100
tendency because that's what we did so

00:05:20,520 --> 00:05:26,340
for those of you who know ActiveMQ which

00:05:23,100 --> 00:05:27,720
is most most of you what happens if you

00:05:26,340 --> 00:05:29,700
have two different messaging gaps

00:05:27,720 --> 00:05:31,920
written by two different groups and they

00:05:29,700 --> 00:05:35,040
send messages to the same queue and use

00:05:31,920 --> 00:05:36,840
the same broker basically messages can

00:05:35,040 --> 00:05:39,450
cross from one consumer of an app to

00:05:36,840 --> 00:05:42,960
another consumer of another ed right so

00:05:39,450 --> 00:05:45,630
what do you do then you basically have

00:05:42,960 --> 00:05:46,860
two options one is to make the two

00:05:45,630 --> 00:05:48,720
groups who build the messaging

00:05:46,860 --> 00:05:50,100
applications to talk to each other to

00:05:48,720 --> 00:05:52,770
make sure that the names don't clash

00:05:50,100 --> 00:05:56,940
right but that doesn't scale because if

00:05:52,770 --> 00:06:00,270
you write 4 5 10 20 applications the

00:05:56,940 --> 00:06:02,250
risk for mistakes is growing and the

00:06:00,270 --> 00:06:04,440
other thing that is quite common which

00:06:02,250 --> 00:06:05,940
is even more costly is to deploy

00:06:04,440 --> 00:06:08,220
different brokers for different

00:06:05,940 --> 00:06:10,440
messaging apps and that becomes sort of

00:06:08,220 --> 00:06:14,220
a maintenance operational nightmare

00:06:10,440 --> 00:06:16,530
right so what we said is that something

00:06:14,220 --> 00:06:19,860
we can do to have the same network of

00:06:16,530 --> 00:06:22,350
brokers support multiple messaging

00:06:19,860 --> 00:06:25,410
applications and not really care that

00:06:22,350 --> 00:06:27,510
they are sending messages to the same

00:06:25,410 --> 00:06:29,340
queue and be able to partner able to

00:06:27,510 --> 00:06:30,660
partition somehow so that the messages

00:06:29,340 --> 00:06:34,819
don't clash is that clear what I'm

00:06:30,660 --> 00:06:37,530
saying should be ok um

00:06:34,819 --> 00:06:40,860
another thing was scalability we wanted

00:06:37,530 --> 00:06:42,690
to be able to add more brokers as there

00:06:40,860 --> 00:06:44,759
is more traffic and we're going to talk

00:06:42,690 --> 00:06:46,530
more about that and then something

00:06:44,759 --> 00:06:52,289
around governance and we did something

00:06:46,530 --> 00:06:53,940
interesting over there as well then we

00:06:52,289 --> 00:06:56,039
said actually don't need to use ActiveMQ

00:06:53,940 --> 00:06:58,080
we can use whatever so we looked at

00:06:56,039 --> 00:07:01,139
given two competitors some of them are

00:06:58,080 --> 00:07:04,130
from Apache itself

00:07:01,139 --> 00:07:06,000
one is Kafka which is very popular for

00:07:04,130 --> 00:07:13,110
streaming it's very fast

00:07:06,000 --> 00:07:15,090
Cupid RabbitMQ started at SpringSource I

00:07:13,110 --> 00:07:18,599
think it's a pivotal right now

00:07:15,090 --> 00:07:19,979
then there is BBF which is used mostly

00:07:18,599 --> 00:07:21,560
in the government space and also if

00:07:19,979 --> 00:07:24,569
you're aware of that it's also a

00:07:21,560 --> 00:07:27,180
distribution kind of like service mix

00:07:24,569 --> 00:07:31,560
this based on negative mqc excess carafe

00:07:27,180 --> 00:07:33,389
and active Ncube then there are some

00:07:31,560 --> 00:07:36,360
older ones that you may not be aware of

00:07:33,389 --> 00:07:40,530
anymore W so - they were popular in the

00:07:36,360 --> 00:07:43,620
federal space so a logo came out of IBM

00:07:40,530 --> 00:07:45,270
actually some people from IBM 0 mq there

00:07:43,620 --> 00:07:47,159
are the commercial ones but because of

00:07:45,270 --> 00:07:50,009
licensing we didn't even care about

00:07:47,159 --> 00:07:52,620
those and all of these don't have

00:07:50,009 --> 00:07:55,409
multi-tenancy characteristics the new

00:07:52,620 --> 00:07:57,270
ones the cloud services do have some

00:07:55,409 --> 00:07:59,699
sort of multi-tenancy characteristics

00:07:57,270 --> 00:08:02,009
but they are only running in a specific

00:07:59,699 --> 00:08:04,139
cloud they have proprietary api's which

00:08:02,009 --> 00:08:05,159
provide some login so again not not

00:08:04,139 --> 00:08:07,229
really a good fit

00:08:05,159 --> 00:08:10,889
plus it wasn't really what we wanted to

00:08:07,229 --> 00:08:12,840
do I didn't mention the Google cloud

00:08:10,889 --> 00:08:14,520
pub/sub that's another important thing

00:08:12,840 --> 00:08:19,080
there they are doing some really cool

00:08:14,520 --> 00:08:21,030
stuff as well so in order to figure out

00:08:19,080 --> 00:08:25,080
what we want to do we actually went back

00:08:21,030 --> 00:08:28,110
to the so uh principles and back in the

00:08:25,080 --> 00:08:30,270
early 2000 people were talking about so

00:08:28,110 --> 00:08:32,640
like people talk about micro services

00:08:30,270 --> 00:08:36,349
today right it meant whatever people

00:08:32,640 --> 00:08:38,399
wanted to mean and only around 2009 of

00:08:36,349 --> 00:08:42,089
ourselves and people came up with the

00:08:38,399 --> 00:08:45,230
soem manifesto where they tried to focus

00:08:42,089 --> 00:08:48,720
the definition of also around the

00:08:45,230 --> 00:08:51,209
business value and the agility

00:08:48,720 --> 00:08:53,069
and coping with change and that's

00:08:51,209 --> 00:08:57,720
something that appealed very much to me

00:08:53,069 --> 00:09:00,089
because in the in my experience I keep

00:08:57,720 --> 00:09:02,970
saying this a lot it code that is not in

00:09:00,089 --> 00:09:04,920
production is like one of these cruise

00:09:02,970 --> 00:09:07,350
cruise ships here staying at the dock

00:09:04,920 --> 00:09:09,360
all the time right it's occupying real

00:09:07,350 --> 00:09:11,819
estate it's not as useful it's more a

00:09:09,360 --> 00:09:15,930
liability than an asset or plane said a

00:09:11,819 --> 00:09:18,029
terminal right so every business has an

00:09:15,930 --> 00:09:20,430
incentive to move the code they produce

00:09:18,029 --> 00:09:23,220
as quickly as possible in production to

00:09:20,430 --> 00:09:24,870
produce value and make money or help

00:09:23,220 --> 00:09:30,930
providing feedback for running the

00:09:24,870 --> 00:09:34,019
business or whatnot so that part of so

00:09:30,930 --> 00:09:36,779
up is very much to us so we we use that

00:09:34,019 --> 00:09:38,550
part and you're probably very where I'm

00:09:36,779 --> 00:09:41,970
going to go quickly over this stuff

00:09:38,550 --> 00:09:45,300
about the course or concepts like loose

00:09:41,970 --> 00:09:49,589
coupling and service contracts basically

00:09:45,300 --> 00:09:52,649
api's lately composition camera is great

00:09:49,589 --> 00:09:56,939
in that area by the way and we wanted to

00:09:52,649 --> 00:09:59,250
look more at connectivity which is one

00:09:56,939 --> 00:10:02,339
important part of so and the SBS and all

00:09:59,250 --> 00:10:05,220
that stuff that are still in use talking

00:10:02,339 --> 00:10:08,309
about connectivity there are two styles

00:10:05,220 --> 00:10:11,519
of connectivity basically is that

00:10:08,309 --> 00:10:12,930
classic Bob talks to le scenario and you

00:10:11,519 --> 00:10:14,759
have the choice of synchronous

00:10:12,930 --> 00:10:17,550
communication or asynchronous

00:10:14,759 --> 00:10:21,769
communication synchronous doesn't scale

00:10:17,550 --> 00:10:25,110
very well it has a lot of advantages

00:10:21,769 --> 00:10:27,600
people are shaking heads here we can

00:10:25,110 --> 00:10:30,629
talk about that but asynchronous

00:10:27,600 --> 00:10:32,459
messages but when you send bulk messages

00:10:30,629 --> 00:10:35,100
they scale much better than we can you

00:10:32,459 --> 00:10:40,769
know take all sorts of examples even

00:10:35,100 --> 00:10:45,329
from the real life sending regular mail

00:10:40,769 --> 00:10:48,029
snail mail the problem with the

00:10:45,329 --> 00:10:50,339
asynchronous messaging is that is not

00:10:48,029 --> 00:10:50,939
very interactive right but it scares

00:10:50,339 --> 00:10:55,230
much better

00:10:50,939 --> 00:10:57,269
so normally any company or any

00:10:55,230 --> 00:10:59,490
organization is going to use both and is

00:10:57,269 --> 00:11:00,899
going to use them for what they work for

00:10:59,490 --> 00:11:02,050
the benefits they provide in a specific

00:11:00,899 --> 00:11:04,329
context

00:11:02,050 --> 00:11:08,800
so our focus is known around the

00:11:04,329 --> 00:11:11,529
asynchronous communication and we had to

00:11:08,800 --> 00:11:13,929
choose some way to deploy that so we

00:11:11,529 --> 00:11:19,239
looked at service links which is the

00:11:13,929 --> 00:11:21,459
Apache PSB basically I'm gonna you

00:11:19,239 --> 00:11:23,980
probably know about it but it basically

00:11:21,459 --> 00:11:26,529
combination of carafe container and OSGi

00:11:23,980 --> 00:11:29,799
container activemq for asynchronous

00:11:26,529 --> 00:11:31,749
communication cxl for synchronous

00:11:29,799 --> 00:11:35,230
communication the stack and camera

00:11:31,749 --> 00:11:41,619
provides a mediation routing a IP based

00:11:35,230 --> 00:11:45,850
sort of framework why we use OSGi for a

00:11:41,619 --> 00:11:48,819
few reasons a very robust platform the

00:11:45,850 --> 00:11:51,759
security part we got a lot out of the

00:11:48,819 --> 00:11:53,589
box it was very appealing to us the

00:11:51,759 --> 00:11:55,959
provisioning part of the login even

00:11:53,589 --> 00:11:59,889
management the dynamic configuration so

00:11:55,959 --> 00:12:04,449
we thought it's it provides a lot of the

00:11:59,889 --> 00:12:06,670
features we really needed and even four

00:12:04,449 --> 00:12:08,410
years be distros based on the register

00:12:06,670 --> 00:12:10,540
which means there are quite a few tenant

00:12:08,410 --> 00:12:15,549
has one that's quite popular I mentioned

00:12:10,540 --> 00:12:18,910
DDS before use mostly in the governor's

00:12:15,549 --> 00:12:21,549
state in the US and redhead also has a

00:12:18,910 --> 00:12:23,709
very popular distribution I think it's

00:12:21,549 --> 00:12:26,709
not called JBoss use but fabric or

00:12:23,709 --> 00:12:29,170
fabricate something like that with the

00:12:26,709 --> 00:12:31,569
people here in the audience will know

00:12:29,170 --> 00:12:33,670
better but anyway reddit has a

00:12:31,569 --> 00:12:35,799
distribution there are some other areas

00:12:33,670 --> 00:12:37,629
B's that probably nobody cares about but

00:12:35,799 --> 00:12:40,839
anyway they are open source as well and

00:12:37,629 --> 00:12:45,009
you can do it yourself which is kind of

00:12:40,839 --> 00:12:50,679
what we did by assembling the same

00:12:45,009 --> 00:12:52,449
projects I mentioned before so that

00:12:50,679 --> 00:12:55,529
brings us to event queue which is really

00:12:52,449 --> 00:13:02,169
the workhorse of the messaging platform

00:12:55,529 --> 00:13:05,739
and ActiveMQ has a bunch of features

00:13:02,169 --> 00:13:10,600
that are very useful is based on a JMS

00:13:05,739 --> 00:13:15,350
1:1 it's been mature and robot for at

00:13:10,600 --> 00:13:17,990
least 5-6 years right now I think if the

00:13:15,350 --> 00:13:21,560
mostly used in production open-source

00:13:17,990 --> 00:13:24,680
messaging messaging platform it has all

00:13:21,560 --> 00:13:26,840
sorts of goodies for you know even

00:13:24,680 --> 00:13:28,610
streaming governance stuff like that

00:13:26,840 --> 00:13:30,860
won't be a bit availability sighs I

00:13:28,610 --> 00:13:34,670
mentioned the support for multiple

00:13:30,860 --> 00:13:39,950
topologies and that's something we

00:13:34,670 --> 00:13:42,160
really pay close attention to everything

00:13:39,950 --> 00:13:45,620
is pluggable persistence is pluggable

00:13:42,160 --> 00:13:47,450
the transports our pluggable so when

00:13:45,620 --> 00:13:50,480
transferred became popular active and

00:13:47,450 --> 00:13:55,040
queue adopted them nqp is one of them

00:13:50,480 --> 00:13:57,260
MQTT is even newer there is also a stomp

00:13:55,040 --> 00:13:59,360
that's not mentioned here so you can use

00:13:57,260 --> 00:14:02,990
that from your JavaScript app in the

00:13:59,360 --> 00:14:06,410
browser so anyway a lot of good features

00:14:02,990 --> 00:14:08,060
in a given Q another interesting thing

00:14:06,410 --> 00:14:10,100
for ActiveMQ is the fact that even

00:14:08,060 --> 00:14:11,900
though it's written in Java it has

00:14:10,100 --> 00:14:16,310
client bindings in a lot of other

00:14:11,900 --> 00:14:18,770
languages so you can have a JMS Broker

00:14:16,310 --> 00:14:20,780
detective MQ but your application could

00:14:18,770 --> 00:14:25,850
be written in Python could be in dotnet

00:14:20,780 --> 00:14:27,380
could be in C++ JVM based languages of

00:14:25,850 --> 00:14:29,060
course I mentioned javascript in the

00:14:27,380 --> 00:14:35,050
browser and so forth so that was a

00:14:29,060 --> 00:14:35,050
really cool reason basically to use

00:14:35,230 --> 00:14:43,550
activemq and then I mentioned the

00:14:38,390 --> 00:14:46,070
topologies so when you have a broker no

00:14:43,550 --> 00:14:48,290
matter what it's not gonna scale

00:14:46,070 --> 00:14:50,240
infinitely right so you've gotta have it

00:14:48,290 --> 00:14:52,370
sample you your traffic at some point is

00:14:50,240 --> 00:14:55,790
gonna exceed the capacity of your broker

00:14:52,370 --> 00:14:58,190
so you're gonna have to put multiple

00:14:55,790 --> 00:14:59,930
brokers for different reasons bid for

00:14:58,190 --> 00:15:01,490
resiliency if you want something like a

00:14:59,930 --> 00:15:04,880
master slave or some other configuration

00:15:01,490 --> 00:15:06,380
or just the fact that the traffic is you

00:15:04,880 --> 00:15:12,230
know too high and you have to put other

00:15:06,380 --> 00:15:14,180
brokers and the in the way you configure

00:15:12,230 --> 00:15:15,940
your broker base if you can achieve one

00:15:14,180 --> 00:15:20,510
of these quite popular and known

00:15:15,940 --> 00:15:23,840
topologies from the fully connected mesh

00:15:20,510 --> 00:15:26,420
or hyper cube hub-and-spoke was very

00:15:23,840 --> 00:15:29,240
popular and they all have advantages and

00:15:26,420 --> 00:15:32,290
disadvantages so don't believe that

00:15:29,240 --> 00:15:34,520
is better than the other I saw some

00:15:32,290 --> 00:15:36,800
users large systemic production actually

00:15:34,520 --> 00:15:38,480
measure before they make decisions on

00:15:36,800 --> 00:15:43,160
how to date their technology that's very

00:15:38,480 --> 00:15:44,600
smart so anyway I encourage you if you

00:15:43,160 --> 00:15:46,880
see a given Q to kind of do the same

00:15:44,600 --> 00:15:49,850
take a look at different topologies and

00:15:46,880 --> 00:15:53,450
decide what works for you but the fact

00:15:49,850 --> 00:15:55,700
that you are able to build different

00:15:53,450 --> 00:15:57,709
topologies but was something that was

00:15:55,700 --> 00:16:01,880
really good for us so we decided to go

00:15:57,709 --> 00:16:03,529
down this path and this being the

00:16:01,880 --> 00:16:06,050
introduction before but before I

00:16:03,529 --> 00:16:11,050
continue I want to show you a bit of a

00:16:06,050 --> 00:16:13,970
demo and show you what we did

00:16:11,050 --> 00:16:16,279
unfortunately the resolution is not

00:16:13,970 --> 00:16:19,459
gonna cooperate very much we have very

00:16:16,279 --> 00:16:29,000
low resolution and that uncovered to a

00:16:19,459 --> 00:16:32,779
few bugs with the GUI but anyway that's

00:16:29,000 --> 00:16:35,110
not gonna work because I hate places we

00:16:32,779 --> 00:16:35,110
speak

00:16:36,899 --> 00:16:38,959
you

00:16:39,910 --> 00:16:46,900
so I mentioned multi-tenancy and one

00:16:44,620 --> 00:16:48,880
thing we did was okay if you have a

00:16:46,900 --> 00:16:51,880
large number of applications who's gonna

00:16:48,880 --> 00:16:57,790
own them what's gonna happen there so we

00:16:51,880 --> 00:17:00,430
said let's use ownership identity

00:16:57,790 --> 00:17:03,640
management model that similar to the one

00:17:00,430 --> 00:17:05,530
used by cloud native applications today

00:17:03,640 --> 00:17:07,720
so there's an example that they github

00:17:05,530 --> 00:17:16,180
right where you have a bunch of users

00:17:07,720 --> 00:17:20,010
over there my mouse is sliding that may

00:17:16,180 --> 00:17:22,420
belong to different organizations and

00:17:20,010 --> 00:17:25,230
users and organizations can own

00:17:22,420 --> 00:17:27,880
resources which in github case our

00:17:25,230 --> 00:17:33,430
repositories in our case they are

00:17:27,880 --> 00:17:35,860
messaging applications and we came up

00:17:33,430 --> 00:17:39,610
with this GUI in which you can organize

00:17:35,860 --> 00:17:41,500
your I mean user get accounts between

00:17:39,610 --> 00:17:43,210
organizations that other people's

00:17:41,500 --> 00:17:46,000
organization they create projects and

00:17:43,210 --> 00:17:49,780
all that kind of stuff and we came up

00:17:46,000 --> 00:17:54,310
with this organization that you cannot

00:17:49,780 --> 00:17:56,050
really see because us on this side this

00:17:54,310 --> 00:17:58,560
is done a few people for nuisance I'm

00:17:56,050 --> 00:17:58,560
really sorry

00:18:01,500 --> 00:18:09,880
so summer here we should see that the

00:18:07,320 --> 00:18:11,890
Galactic Empire is our current

00:18:09,880 --> 00:18:13,420
organization and I'm not being as the

00:18:11,890 --> 00:18:17,530
Chancellor Palpatine which is a

00:18:13,420 --> 00:18:19,990
fictitious of defuser and I have to

00:18:17,530 --> 00:18:25,390
messaging apps called Tex Aurora and

00:18:19,990 --> 00:18:28,030
Death Star and I can go and take a look

00:18:25,390 --> 00:18:29,260
at these project and get some metrics

00:18:28,030 --> 00:18:31,750
and stuff like that I'm going to show

00:18:29,260 --> 00:18:33,220
you that in a second but I also said we

00:18:31,750 --> 00:18:36,010
have a set of credentials I'm going to

00:18:33,220 --> 00:18:38,700
talk about a little bit so in the text

00:18:36,010 --> 00:18:38,700
or okay

00:18:43,080 --> 00:18:48,400
nothing has been sent recently as the

00:18:46,000 --> 00:18:52,120
most are messages early on and we can

00:18:48,400 --> 00:18:53,830
look at the other stats down there and

00:18:52,120 --> 00:18:56,350
you can see that the wacom traffic over

00:18:53,830 --> 00:19:00,970
here and if I look at the credential

00:18:56,350 --> 00:19:03,309
name there are some traditions over here

00:19:00,970 --> 00:19:05,620
I think this one is the one we look at

00:19:03,309 --> 00:19:08,530
the ACE something in the one talking

00:19:05,620 --> 00:19:15,840
with the capital C I can actually create

00:19:08,530 --> 00:19:15,840
your credentials call it works

00:19:20,720 --> 00:19:24,590
my Annie and I think Rita said this is

00:19:23,090 --> 00:19:28,850
gonna be just the description is not the

00:19:24,590 --> 00:19:32,480
name of the credential and it's going to

00:19:28,850 --> 00:19:33,950
create a new credential and this is

00:19:32,480 --> 00:19:37,420
going to be the user name and the

00:19:33,950 --> 00:19:42,860
password and I can copy to the keyboard

00:19:37,420 --> 00:19:44,960
once I close this window that username

00:19:42,860 --> 00:19:47,150
at the top is going to be preserved by

00:19:44,960 --> 00:19:48,980
the test word is gone we don't keep it

00:19:47,150 --> 00:19:50,660
because we don't want to be Hecht we

00:19:48,980 --> 00:19:53,210
care about security and stuff like that

00:19:50,660 --> 00:19:55,520
it's up to the user to keep this

00:19:53,210 --> 00:20:01,000
password and these credentials are going

00:19:55,520 --> 00:20:03,980
to be used in the JMS app is the

00:20:01,000 --> 00:20:06,740
connection credentials to authenticate

00:20:03,980 --> 00:20:08,420
with the brokers does it make sense but

00:20:06,740 --> 00:20:10,610
we don't keep them we keep a shout out

00:20:08,420 --> 00:20:13,280
it I mean that we have a shy and the

00:20:10,610 --> 00:20:15,400
brokers can verify that the credentials

00:20:13,280 --> 00:20:23,560
are ok but we don't need to in the past

00:20:15,400 --> 00:20:23,560
so why don't I do this I'm gonna have to

00:20:37,360 --> 00:20:41,129
keep the credential here

00:20:42,730 --> 00:20:50,100
so I say this is the potential I had

00:20:45,610 --> 00:20:50,100
before and now what I'm gonna do

00:21:10,260 --> 00:21:17,580
so I'm going to send here hundred

00:21:13,919 --> 00:21:21,720
messages with this potential the queue

00:21:17,580 --> 00:21:23,309
is gonna be I think Miami hello Miami or

00:21:21,720 --> 00:21:29,549
something like that I can show you it's

00:21:23,309 --> 00:21:31,730
coming from and I'm just going to send

00:21:29,549 --> 00:21:31,730
these messages

00:21:37,960 --> 00:21:41,100
assuming the Nestle flipz

00:21:44,930 --> 00:21:51,500
and I'm also gonna receive but let's not

00:21:48,830 --> 00:21:54,410
receive consciousness receive only 70

00:21:51,500 --> 00:21:59,080
messages or whatever the number and

00:21:54,410 --> 00:21:59,080
let's use the credential I just used

00:22:15,470 --> 00:22:22,010
we will

00:22:18,140 --> 00:22:22,010
you shouldn't be here

00:22:32,680 --> 00:22:36,370
so this is going to start consuming

00:22:34,870 --> 00:22:37,540
stuff and you going to see the stuff

00:22:36,370 --> 00:22:41,770
over there doesn't really matter that

00:22:37,540 --> 00:22:45,210
much what happens though if I look here

00:22:41,770 --> 00:22:45,210
back in text or aura

00:22:49,600 --> 00:22:57,490
is the network cooperating or we see

00:22:54,039 --> 00:23:00,010
that there were 173 messages has not

00:22:57,490 --> 00:23:02,500
understand 70 people all the others are

00:23:00,010 --> 00:23:05,169
from and we can see over them over here

00:23:02,500 --> 00:23:09,490
we can zoom in we can do stuff analyze

00:23:05,169 --> 00:23:13,389
whatever make sense right so if I look

00:23:09,490 --> 00:23:15,580
at the traffic I can see the traffic for

00:23:13,389 --> 00:23:18,100
for a credential this is what the one

00:23:15,580 --> 00:23:22,529
that we use to rule to say active

00:23:18,100 --> 00:23:27,090
potentials one oh here we go

00:23:22,529 --> 00:23:27,090
103 just in this time Windham right

00:23:27,870 --> 00:23:32,039
looks like I'm going away from the

00:23:30,370 --> 00:23:37,240
microphone sorry about that

00:23:32,039 --> 00:23:41,019
so I'm not sure if I'm not running out

00:23:37,240 --> 00:23:44,830
of time so if I use another credential

00:23:41,019 --> 00:23:46,750
basically from the Death Star project

00:23:44,830 --> 00:23:48,700
you're gonna see that I'm gonna use the

00:23:46,750 --> 00:23:50,289
same queue but it's gonna go to the

00:23:48,700 --> 00:23:53,980
other project because we wrote some

00:23:50,289 --> 00:23:55,990
extra plugins for active NQ that are not

00:23:53,980 --> 00:23:57,760
in the active NQ distribution that do

00:23:55,990 --> 00:24:01,510
some name spacing so based on the

00:23:57,760 --> 00:24:03,669
credential it ActiveMQ has a plugin that

00:24:01,510 --> 00:24:05,919
knows what project destroy densha

00:24:03,669 --> 00:24:08,409
belongs to and create some sort of a

00:24:05,919 --> 00:24:10,450
namespace for the queues in that

00:24:08,409 --> 00:24:12,519
namespace so because use different

00:24:10,450 --> 00:24:14,820
credentials but with the same queue name

00:24:12,519 --> 00:24:19,120
is going to that cube in that namespace

00:24:14,820 --> 00:24:23,440
so does it make sense and here actually

00:24:19,120 --> 00:24:29,370
we I have a small client it's actually

00:24:23,440 --> 00:24:29,370
the same client that did one Santa Fe

00:24:31,280 --> 00:24:39,530
today there are some 58 thousand

00:24:37,280 --> 00:24:42,760
messages in the past hour and if you

00:24:39,530 --> 00:24:50,110
want to look in the past by the nog

00:24:42,760 --> 00:24:53,180
three hours or six hours it's about 1

00:24:50,110 --> 00:24:55,130
million and a quarter just one clients

00:24:53,180 --> 00:25:00,740
and messages in the past four or five

00:24:55,130 --> 00:25:01,940
hours okay I think I'm running out of

00:25:00,740 --> 00:25:03,560
time because I want to leave something

00:25:01,940 --> 00:25:07,220
for questions so I'm going to go back to

00:25:03,560 --> 00:25:09,250
the slide and I think you've got the

00:25:07,220 --> 00:25:09,250
idea

00:25:15,530 --> 00:25:22,180
so again what we worked on is achieving

00:25:19,310 --> 00:25:25,730
this multi-tenancy that you kind of saw

00:25:22,180 --> 00:25:31,360
the global governance is there something

00:25:25,730 --> 00:25:34,880
or that anybody noticed in the GUI

00:25:31,360 --> 00:25:36,950
nothing there was no broker we didn't

00:25:34,880 --> 00:25:38,720
talk about the broker at all you don't

00:25:36,950 --> 00:25:41,030
know how many brokers are there and

00:25:38,720 --> 00:25:43,520
there's a user you don't care you only

00:25:41,030 --> 00:25:45,290
care about your messaging gap how many

00:25:43,520 --> 00:25:47,840
did you send how many messages you

00:25:45,290 --> 00:25:51,200
received there is also a REST API that

00:25:47,840 --> 00:25:52,400
can give you some metrics so all the

00:25:51,200 --> 00:25:54,890
administration of the messaging system

00:25:52,400 --> 00:25:56,780
is left to somebody else that you don't

00:25:54,890 --> 00:25:58,640
care about right you only want to see

00:25:56,780 --> 00:26:03,250
your messages another thing that doesn't

00:25:58,640 --> 00:26:06,080
exist in a given Q and all the other

00:26:03,250 --> 00:26:09,740
messaging product products you you've

00:26:06,080 --> 00:26:12,320
seen before we can show that how many

00:26:09,740 --> 00:26:15,470
messages were sent and received per

00:26:12,320 --> 00:26:17,270
credential so it is a good practice for

00:26:15,470 --> 00:26:19,790
instance to give different credentials

00:26:17,270 --> 00:26:21,890
to different apps there I didn't show

00:26:19,790 --> 00:26:24,020
you but you can also revoke the dentures

00:26:21,890 --> 00:26:25,790
that is kind of obvious right so if you

00:26:24,020 --> 00:26:27,830
don't like something you can revoke just

00:26:25,790 --> 00:26:29,750
that credential or if you see that

00:26:27,830 --> 00:26:32,090
somebody is doing something odd you can

00:26:29,750 --> 00:26:34,850
reroute traffic through some other

00:26:32,090 --> 00:26:37,760
brokers so you can investigate what's

00:26:34,850 --> 00:26:39,680
going on but from a user point of view

00:26:37,760 --> 00:26:41,870
from a user of the messaging system

00:26:39,680 --> 00:26:43,700
point of view kind of like the sqs and

00:26:41,870 --> 00:26:45,590
the other cloud services you don't

00:26:43,700 --> 00:26:47,330
really know how its operated how many

00:26:45,590 --> 00:26:50,230
brokers they are we are distributed and

00:26:47,330 --> 00:26:52,640
so forth so we took the same approach

00:26:50,230 --> 00:26:54,470
there is a destination sharing feature

00:26:52,640 --> 00:26:56,000
that we started to implement a few

00:26:54,470 --> 00:27:02,140
months back that's very interesting as

00:26:56,000 --> 00:27:02,140
well that is not present in all these

00:27:02,830 --> 00:27:10,760
messaging services including the cloud

00:27:07,100 --> 00:27:14,480
ones including things like sqs we wanted

00:27:10,760 --> 00:27:17,230
to see can I actually publish my message

00:27:14,480 --> 00:27:20,150
stream outside my application I want

00:27:17,230 --> 00:27:22,040
other applications to be able to receive

00:27:20,150 --> 00:27:23,810
my messages but I don't want to manage

00:27:22,040 --> 00:27:26,360
the credentials for them I don't want to

00:27:23,810 --> 00:27:28,220
give them credentials and for them to

00:27:26,360 --> 00:27:29,299
ask me to revoke them and all that kind

00:27:28,220 --> 00:27:30,889
of stuff and I don't want to

00:27:29,299 --> 00:27:32,929
give them access to my project either

00:27:30,889 --> 00:27:35,600
right create an addendum to my

00:27:32,929 --> 00:27:38,119
organization for instance so what we

00:27:35,600 --> 00:27:40,159
added is a feature to basically share a

00:27:38,119 --> 00:27:43,929
destination kind of the way you share

00:27:40,159 --> 00:27:46,820
pictures in I don't know whatever

00:27:43,929 --> 00:27:49,220
application you use and then they can be

00:27:46,820 --> 00:27:51,049
shared publicly with everybody let's say

00:27:49,220 --> 00:27:53,779
you I have a very neat weather

00:27:51,049 --> 00:27:56,600
application I want to share my weather

00:27:53,779 --> 00:27:58,190
event and I publish them to my

00:27:56,600 --> 00:28:00,019
destination but then I share the

00:27:58,190 --> 00:28:02,299
destination too you know with other

00:28:00,019 --> 00:28:04,659
people publicly or I can share them with

00:28:02,299 --> 00:28:07,970
a particular tenant or a particular

00:28:04,659 --> 00:28:11,359
application and other people basically

00:28:07,970 --> 00:28:13,489
say that if I can get messages in this

00:28:11,359 --> 00:28:16,730
destination that I can process them

00:28:13,489 --> 00:28:20,299
right so there is a configuration aspect

00:28:16,730 --> 00:28:22,220
now in the broker to adapt the tool and

00:28:20,299 --> 00:28:24,259
say that this guy shared this

00:28:22,220 --> 00:28:27,200
destination and this other guy

00:28:24,259 --> 00:28:29,059
subscribed to this shared destination so

00:28:27,200 --> 00:28:30,950
that's why you that's how you allow them

00:28:29,059 --> 00:28:33,559
to manage their own applications but

00:28:30,950 --> 00:28:34,879
inside the broker you can imagine a

00:28:33,559 --> 00:28:36,590
simple camera route for instance

00:28:34,879 --> 00:28:38,779
although there's another way we do it to

00:28:36,590 --> 00:28:40,580
add ed between the two applications does

00:28:38,779 --> 00:28:44,809
it make sense that we thought was pretty

00:28:40,580 --> 00:28:46,340
neat for Identity Management we

00:28:44,809 --> 00:28:52,609
basically talked about the model so I'm

00:28:46,340 --> 00:28:54,200
going to spend too much time on that for

00:28:52,609 --> 00:28:57,529
the broker topology this is an

00:28:54,200 --> 00:29:00,879
interesting thing so once we started to

00:28:57,529 --> 00:29:05,600
look at it we realized that actually I

00:29:00,879 --> 00:29:07,519
think all of the messaging deployments

00:29:05,600 --> 00:29:10,340
I've seen with one exception and that

00:29:07,519 --> 00:29:12,559
was a small exception all the topologies

00:29:10,340 --> 00:29:15,350
were homogeneous meaning that all the

00:29:12,559 --> 00:29:17,239
brokers looked alike even if it's a

00:29:15,350 --> 00:29:19,759
master slave they are they look the same

00:29:17,239 --> 00:29:21,289
way is just that when the master died

00:29:19,759 --> 00:29:23,570
the slave becomes the broker but it's

00:29:21,289 --> 00:29:25,639
essentially the same thing right but it

00:29:23,570 --> 00:29:27,350
doesn't need to be the case it's not

00:29:25,639 --> 00:29:29,480
there's nothing in ActiveMQ that says

00:29:27,350 --> 00:29:31,340
that all brokers have to be alike so in

00:29:29,480 --> 00:29:34,659
our two we came up with a heterogeneous

00:29:31,340 --> 00:29:39,740
topology in which some of the brokers

00:29:34,659 --> 00:29:41,629
don't carry client traffic if you want

00:29:39,740 --> 00:29:42,710
they have other roles in the messaging

00:29:41,629 --> 00:29:47,110
system

00:29:42,710 --> 00:29:50,179
instance we have this master broker that

00:29:47,110 --> 00:29:52,580
receives all the advisories from the

00:29:50,179 --> 00:29:57,980
other brokers do you know how advisories

00:29:52,580 --> 00:29:59,870
work no so in a network of brokers when

00:29:57,980 --> 00:30:02,330
you have multiple brokers in your client

00:29:59,870 --> 00:30:04,820
connect over here and the producer and

00:30:02,330 --> 00:30:07,820
the consumer connects over there how do

00:30:04,820 --> 00:30:09,529
they know the brokers to send the

00:30:07,820 --> 00:30:12,200
messages from here there because that's

00:30:09,529 --> 00:30:14,419
where the consumer is so what happens is

00:30:12,200 --> 00:30:17,000
every time there is an event inside the

00:30:14,419 --> 00:30:18,770
broker like a connection gets created a

00:30:17,000 --> 00:30:20,750
producer or consumer gets creating a

00:30:18,770 --> 00:30:22,970
destination gets you stuff like that

00:30:20,750 --> 00:30:25,250
they send messages to each other which

00:30:22,970 --> 00:30:27,110
are called advisories so then brokers

00:30:25,250 --> 00:30:29,090
now aha I don't know exactly who's

00:30:27,110 --> 00:30:30,860
listening to intuit but I know that this

00:30:29,090 --> 00:30:33,590
brokers are connected to me once that

00:30:30,860 --> 00:30:37,669
information right because the advisory

00:30:33,590 --> 00:30:39,320
was propagated down through that apology

00:30:37,669 --> 00:30:41,539
links that you saw in the other slide

00:30:39,320 --> 00:30:45,230
it's a bit complicated but anyway we

00:30:41,539 --> 00:30:47,360
said that this is too chatty just this

00:30:45,230 --> 00:30:48,980
we can talk about hours about about we

00:30:47,360 --> 00:30:50,720
said let's not do that let's have just

00:30:48,980 --> 00:30:52,549
one broker that we sees all the advice

00:30:50,720 --> 00:30:54,380
reason creates a graph we use the pecchì

00:30:52,549 --> 00:30:57,830
tinker pop for that which is a graph

00:30:54,380 --> 00:31:00,559
database and it's the basis for IBM

00:30:57,830 --> 00:31:02,720
graph for instance and neo4j uses it so

00:31:00,559 --> 00:31:04,700
we said that let's use all these

00:31:02,720 --> 00:31:06,140
advisories to create a map a graph of

00:31:04,700 --> 00:31:07,640
everything that's going on the messaging

00:31:06,140 --> 00:31:08,960
system all the brokers that are there

00:31:07,640 --> 00:31:10,730
the connections that are attached to

00:31:08,960 --> 00:31:12,649
them what credentials they are used and

00:31:10,730 --> 00:31:15,620
stuff like that and based on this graph

00:31:12,649 --> 00:31:21,830
make decisions the reason how to

00:31:15,620 --> 00:31:23,990
optimize our messaging service okay then

00:31:21,830 --> 00:31:25,700
we got the what we call the gateway

00:31:23,990 --> 00:31:27,740
brokers because they are the gateways to

00:31:25,700 --> 00:31:31,279
the messaging system these are the

00:31:27,740 --> 00:31:34,789
brokers that receive messages or

00:31:31,279 --> 00:31:36,230
exchanged messages with clients the

00:31:34,789 --> 00:31:38,029
first thing they do obviously they take

00:31:36,230 --> 00:31:40,580
responsibility for responsibility for

00:31:38,029 --> 00:31:44,210
the message so they are persistent let's

00:31:40,580 --> 00:31:47,750
hence the database being there or the

00:31:44,210 --> 00:31:49,820
persistent store but if you have brokers

00:31:47,750 --> 00:31:51,559
coming up and down all the time then

00:31:49,820 --> 00:31:54,080
what kind of you hotel have you gotta

00:31:51,559 --> 00:31:55,940
give your your clients right because

00:31:54,080 --> 00:31:56,500
your broker can come up and down if you

00:31:55,940 --> 00:31:57,580
don't know

00:31:56,500 --> 00:31:59,260
is there right you have to have

00:31:57,580 --> 00:32:01,780
something that's kind of stable there

00:31:59,260 --> 00:32:04,510
that is used for the client to make a

00:32:01,780 --> 00:32:08,080
connection and these are what we call

00:32:04,510 --> 00:32:11,080
the discovery brokers or D brokers use

00:32:08,080 --> 00:32:13,960
letters for them which are brokers that

00:32:11,080 --> 00:32:16,930
are advertised in the DNS they do not

00:32:13,960 --> 00:32:20,410
carry any traffic but these are the

00:32:16,930 --> 00:32:23,230
brokers clients connect to they

00:32:20,410 --> 00:32:26,460
authenticate based on the authentication

00:32:23,230 --> 00:32:30,400
they use credentials right

00:32:26,460 --> 00:32:31,900
the master brokers ask the discovery

00:32:30,400 --> 00:32:33,790
brokers have the map as the master

00:32:31,900 --> 00:32:35,890
broker where should I route this guy and

00:32:33,790 --> 00:32:39,280
right away they force the connection to

00:32:35,890 --> 00:32:41,700
failover to one of the gateway brokers

00:32:39,280 --> 00:32:46,870
that think is assigned to is it crazy

00:32:41,700 --> 00:32:48,610
too complicated no then you have the

00:32:46,870 --> 00:32:50,950
producer and consumers and we also have

00:32:48,610 --> 00:32:55,810
worker brokers things that let's say you

00:32:50,950 --> 00:32:58,770
want to do in flight message validation

00:32:55,810 --> 00:33:01,660
or stuff like that which is not really

00:32:58,770 --> 00:33:03,790
messaging but value-added processing if

00:33:01,660 --> 00:33:06,220
you want down the messaging chain for

00:33:03,790 --> 00:33:08,200
instance me as an application I'm

00:33:06,220 --> 00:33:09,490
subscribing to a stream but I don't want

00:33:08,200 --> 00:33:12,420
to get all the stream I don't really

00:33:09,490 --> 00:33:15,070
care about it I only want about some

00:33:12,420 --> 00:33:18,250
subset of it based on the filter that I

00:33:15,070 --> 00:33:20,260
can define I want the filter to run in

00:33:18,250 --> 00:33:22,120
the messaging system and me only get the

00:33:20,260 --> 00:33:25,810
messages I care about not get everything

00:33:22,120 --> 00:33:28,170
and do the filtering myself plus you can

00:33:25,810 --> 00:33:30,130
use this kind of feature for

00:33:28,170 --> 00:33:33,210
transitioning from a version to another

00:33:30,130 --> 00:33:36,250
and the depth things in the messaging

00:33:33,210 --> 00:33:41,020
fabric stuff like that so these are

00:33:36,250 --> 00:33:43,210
different kinds of brokers so as you can

00:33:41,020 --> 00:33:46,450
see by leveraging the fact that you can

00:33:43,210 --> 00:33:51,120
have brokers with whatever capabilities

00:33:46,450 --> 00:33:51,120
you want you can have a heterogeneous

00:33:51,570 --> 00:34:00,910
topology that I think serves you better

00:33:57,240 --> 00:34:02,920
then for the governance observe I

00:34:00,910 --> 00:34:06,850
mentioned that already so we don't

00:34:02,920 --> 00:34:10,089
really talk about the brokers from a

00:34:06,850 --> 00:34:12,579
user point of view we talk about the

00:34:10,089 --> 00:34:13,929
messaging gap and how many messages are

00:34:12,579 --> 00:34:16,089
in flight how many were sent received

00:34:13,929 --> 00:34:18,220
another thing I think I started to

00:34:16,089 --> 00:34:21,190
mention I don't think I finished we

00:34:18,220 --> 00:34:25,200
don't use JMS because Janus is kind of

00:34:21,190 --> 00:34:27,549
limited and it's also slow its scale we

00:34:25,200 --> 00:34:31,359
basically import everything the metrics

00:34:27,549 --> 00:34:33,369
in elasticsearch and we have indexes and

00:34:31,359 --> 00:34:37,929
we have an API that basically make

00:34:33,369 --> 00:34:40,419
queries on it and that's how that's what

00:34:37,929 --> 00:34:42,579
we use for our matrix so our governments

00:34:40,419 --> 00:34:45,970
our management is done by a combination

00:34:42,579 --> 00:34:51,539
of the data in the graph database in

00:34:45,970 --> 00:34:54,250
tinker pop and elastic search basically

00:34:51,539 --> 00:34:56,079
for administration there is a different

00:34:54,250 --> 00:34:59,140
view these are the guys who are in

00:34:56,079 --> 00:35:01,869
operations and they look at at the graph

00:34:59,140 --> 00:35:04,539
they see the brokers as I said this is

00:35:01,869 --> 00:35:05,799
so we're working on the rendering part

00:35:04,539 --> 00:35:08,619
that's why you don't see the real thing

00:35:05,799 --> 00:35:10,569
right now we did export the graph from

00:35:08,619 --> 00:35:14,799
tinker pop but we use a tool called

00:35:10,569 --> 00:35:17,140
Jesse which is a non standalone tool to

00:35:14,799 --> 00:35:18,819
visualize it and present it this way so

00:35:17,140 --> 00:35:23,890
it's not very pretty we're still working

00:35:18,819 --> 00:35:28,809
on it but again what's important to note

00:35:23,890 --> 00:35:30,150
is that like so our kind of expects us

00:35:28,809 --> 00:35:32,230
to have separation of concerns

00:35:30,150 --> 00:35:33,430
administrators have a different view and

00:35:32,230 --> 00:35:35,349
they don't really care about how many

00:35:33,430 --> 00:35:37,000
apps are there and whatnot they only

00:35:35,349 --> 00:35:45,250
care about the client star connected

00:35:37,000 --> 00:35:48,220
right it's an adaptive topology so once

00:35:45,250 --> 00:35:49,690
we got the ability to deploy brokers

00:35:48,220 --> 00:35:51,849
on-demand and remove them on demand

00:35:49,690 --> 00:35:54,400
which we thought is pretty cool we said

00:35:51,849 --> 00:35:57,099
then why do we have to have long-running

00:35:54,400 --> 00:36:00,900
brokers pretty much all the deployment

00:35:57,099 --> 00:36:03,190
sound I saw have long-running brokers

00:36:00,900 --> 00:36:05,680
those of you who is active in queue is

00:36:03,190 --> 00:36:07,329
not the same that the same case you have

00:36:05,680 --> 00:36:10,240
brokers running for days and months and

00:36:07,329 --> 00:36:12,849
whatnot so we said that if we can have

00:36:10,240 --> 00:36:16,630
so many brokers then why not have a

00:36:12,849 --> 00:36:18,940
broker run every having for only 8 hours

00:36:16,630 --> 00:36:22,160
and then it goes away and interestingly

00:36:18,940 --> 00:36:24,320
enough they became sort of a security

00:36:22,160 --> 00:36:26,060
sort of advantage in the sense that if

00:36:24,320 --> 00:36:31,270
one gets compromised two kids because it

00:36:26,060 --> 00:36:31,270
does have eight hours regardless right

00:36:31,810 --> 00:36:38,240
think I'm forgetting a lot of stuff that

00:36:34,010 --> 00:36:40,730
cool about this topology the layers so

00:36:38,240 --> 00:36:43,520
we also realized okay to do all this

00:36:40,730 --> 00:36:47,000
kind of stuff we need a lot of other

00:36:43,520 --> 00:36:50,330
services we needed first of all the

00:36:47,000 --> 00:36:52,970
machines to run on we run we have I

00:36:50,330 --> 00:36:58,310
think 11 bare metal big servers in

00:36:52,970 --> 00:36:59,990
Germany and a few in the US so we have

00:36:58,310 --> 00:37:01,640
this infrastructure as a service and

00:36:59,990 --> 00:37:03,650
then we needed some tools to automate

00:37:01,640 --> 00:37:08,480
the deployment we used NC Bowl now we

00:37:03,650 --> 00:37:10,490
use Ranger so I mentioned service needs

00:37:08,480 --> 00:37:12,650
we have our own Vista like service mix

00:37:10,490 --> 00:37:15,380
which is the container in which cars run

00:37:12,650 --> 00:37:18,040
but actually what we do afterwards and

00:37:15,380 --> 00:37:21,040
I'm going to show in the next slide we

00:37:18,040 --> 00:37:21,040
re

00:37:21,100 --> 00:37:26,150
package it into a carafe container that

00:37:24,080 --> 00:37:28,160
we deploy and actually what gets

00:37:26,150 --> 00:37:32,120
deployed is the carafe container desoto

00:37:28,160 --> 00:37:33,770
sorry a docker container that already

00:37:32,120 --> 00:37:36,170
pairs the carafe running inside

00:37:33,770 --> 00:37:37,700
configures and that gets deployed on one

00:37:36,170 --> 00:37:39,410
of the the machines that are running

00:37:37,700 --> 00:37:42,830
bare metal machines that are running

00:37:39,410 --> 00:37:45,200
docker so we use as I said ansible

00:37:42,830 --> 00:37:47,870
docker Rancher and we have some other

00:37:45,200 --> 00:37:50,240
tools that's for the platform as a

00:37:47,870 --> 00:37:52,270
service layer and then we have a number

00:37:50,240 --> 00:37:54,710
of services we mentioned for instance

00:37:52,270 --> 00:37:58,400
the fact that we need to manage the

00:37:54,710 --> 00:38:02,830
credential so we have LDAP servers we

00:37:58,400 --> 00:38:07,460
have elastic search as I said we have

00:38:02,830 --> 00:38:12,200
use gray log databases we have the GUI

00:38:07,460 --> 00:38:13,970
we have quite a few other systems kind

00:38:12,200 --> 00:38:18,020
of like an infrastructure on these on

00:38:13,970 --> 00:38:22,970
which this messaging fabric works on

00:38:18,020 --> 00:38:25,630
relies on also in order to deploy things

00:38:22,970 --> 00:38:27,770
fast I mentioned in the beginning that

00:38:25,630 --> 00:38:32,360
everything does not in production is

00:38:27,770 --> 00:38:35,240
actually a waste or a liability we have

00:38:32,360 --> 00:38:38,420
multiple environments development

00:38:35,240 --> 00:38:41,480
staging and production everything gives

00:38:38,420 --> 00:38:43,910
version including the configuration so

00:38:41,480 --> 00:38:48,140
you interior europe able to come and

00:38:43,910 --> 00:38:51,280
figure out how the messaging system

00:38:48,140 --> 00:38:54,290
looked at the particular moment in time

00:38:51,280 --> 00:38:56,270
things get built they end up in archival

00:38:54,290 --> 00:38:58,330
we don't use nexus because we like the

00:38:56,270 --> 00:39:00,980
techie right

00:38:58,330 --> 00:39:02,630
we have Jenkins that does that you could

00:39:00,980 --> 00:39:04,970
use get lab or other tools for a

00:39:02,630 --> 00:39:07,880
continuous delivery pipeline things go

00:39:04,970 --> 00:39:14,090
in archive in an archiver from there as

00:39:07,880 --> 00:39:17,240
I said they get repackaged into docker

00:39:14,090 --> 00:39:19,820
containers we have a docker registry

00:39:17,240 --> 00:39:22,130
kind of like docker hub but it's we host

00:39:19,820 --> 00:39:24,770
it in which you put docker containers

00:39:22,130 --> 00:39:27,710
wrenchers adventure has catalog system

00:39:24,770 --> 00:39:29,240
from there we can update them from there

00:39:27,710 --> 00:39:31,850
and so forth

00:39:29,240 --> 00:39:37,400
we first deployed them in our

00:39:31,850 --> 00:39:39,470
development environment to test then if

00:39:37,400 --> 00:39:41,240
everything works okay we deployed them

00:39:39,470 --> 00:39:43,130
in a staging environment where more

00:39:41,240 --> 00:39:44,690
tests come in and then it goes in

00:39:43,130 --> 00:39:46,790
production obviously there are things

00:39:44,690 --> 00:39:50,630
that go just in production which is just

00:39:46,790 --> 00:39:55,640
configuration for adapting the structure

00:39:50,630 --> 00:39:58,910
of the messaging system so this what it

00:39:55,640 --> 00:40:02,210
ended up being and in conclusion what's

00:39:58,910 --> 00:40:05,720
in the name to have a robust messaging

00:40:02,210 --> 00:40:07,580
system is not just the product of the

00:40:05,720 --> 00:40:10,130
tool the project does the messaging

00:40:07,580 --> 00:40:11,960
ActiveMQ in this case in order to deploy

00:40:10,130 --> 00:40:15,260
something robust you have to look at a

00:40:11,960 --> 00:40:19,310
lot of other aspects and you end up

00:40:15,260 --> 00:40:24,140
building something more complex that

00:40:19,310 --> 00:40:27,230
looks like the stuff we built the social

00:40:24,140 --> 00:40:30,710
implications of this are that us

00:40:27,230 --> 00:40:32,540
engineers integration engineers should

00:40:30,710 --> 00:40:34,220
be familiar with the number of other

00:40:32,540 --> 00:40:37,670
projects and know how to use them to

00:40:34,220 --> 00:40:39,740
your advantage and hopefully even

00:40:37,670 --> 00:40:44,180
contribute to them because hey we are

00:40:39,740 --> 00:40:47,990
attaching so that's pretty much what I

00:40:44,180 --> 00:40:48,600
had to say and I wanted to leave some

00:40:47,990 --> 00:40:51,000
room

00:40:48,600 --> 00:40:54,060
or for questions I assume there's going

00:40:51,000 --> 00:40:58,500
to be quite a few but if not you can you

00:40:54,060 --> 00:41:11,000
know have a coffee break so thank you

00:40:58,500 --> 00:41:14,000
very much either is that everything or

00:41:11,000 --> 00:41:14,000
yes

00:41:21,260 --> 00:41:26,850
the I mean also what the definition of

00:41:24,660 --> 00:41:28,770
broker scaling is is not really the

00:41:26,850 --> 00:41:31,380
brokers that scale is the number of

00:41:28,770 --> 00:41:36,600
brokers that grows or shrinks and

00:41:31,380 --> 00:41:38,970
basically if you know the one thing I

00:41:36,600 --> 00:41:40,800
didn't mention so you usually even if

00:41:38,970 --> 00:41:43,290
you know the x bean configuration right

00:41:40,800 --> 00:41:45,450
the XML configuration and everybody has

00:41:43,290 --> 00:41:47,730
a file that we sign in some location

00:41:45,450 --> 00:41:50,580
with that configuration who knows that

00:41:47,730 --> 00:41:52,710
there is a I think runtime configuration

00:41:50,580 --> 00:41:54,810
plug-in it's cold it's inactive and you

00:41:52,710 --> 00:41:57,450
for at least five years that allows you

00:41:54,810 --> 00:41:59,340
that once you change that file it sees

00:41:57,450 --> 00:42:01,680
the new timestamp and reconfigures the

00:41:59,340 --> 00:42:08,760
broker broker at runtime who knew about

00:42:01,680 --> 00:42:12,840
that okay i presented on that last year

00:42:08,760 --> 00:42:15,150
by the way so basically you can

00:42:12,840 --> 00:42:19,830
reconfigure a broker at runtime

00:42:15,150 --> 00:42:22,230
this one the second one is that you know

00:42:19,830 --> 00:42:23,970
the failover that allows you to move a

00:42:22,230 --> 00:42:28,400
client or there's also plug in for

00:42:23,970 --> 00:42:30,570
rebalancing clients as well so the

00:42:28,400 --> 00:42:33,420
element that makes two brokers can

00:42:30,570 --> 00:42:34,830
configure work with each other connect

00:42:33,420 --> 00:42:38,310
to each other is the network

00:42:34,830 --> 00:42:40,110
configuration right so you can change

00:42:38,310 --> 00:42:43,460
the configuration at runtime or

00:42:40,110 --> 00:42:46,700
redeployed the broker with a different

00:42:43,460 --> 00:42:50,010
configuration of that network connectors

00:42:46,700 --> 00:42:52,800
does it make sense so that's how you can

00:42:50,010 --> 00:42:55,410
update the topology at runtime make

00:42:52,800 --> 00:42:59,310
sense another thing that I'm not sure

00:42:55,410 --> 00:43:01,050
you knew is that that X being which

00:42:59,310 --> 00:43:03,750
usually people don't put just the file

00:43:01,050 --> 00:43:06,180
but technically the URL it's been callin

00:43:03,750 --> 00:43:08,490
that thing that expects a URL to come

00:43:06,180 --> 00:43:11,760
after after that which is again usually

00:43:08,490 --> 00:43:14,130
a file but it could be HTTP so what we

00:43:11,760 --> 00:43:16,440
use all these configurations are not

00:43:14,130 --> 00:43:19,650
stored as file locally with the broker

00:43:16,440 --> 00:43:21,600
they assert via an HTTP server from one

00:43:19,650 --> 00:43:24,630
single low key location and it gets

00:43:21,600 --> 00:43:26,580
generated from data in that graph so the

00:43:24,630 --> 00:43:29,400
configuration of the broker looks for us

00:43:26,580 --> 00:43:31,920
X being called an HTTP our configuration

00:43:29,400 --> 00:43:33,509
service and then is the name of the

00:43:31,920 --> 00:43:37,169
broker in there they know

00:43:33,509 --> 00:43:45,179
how to look at based on a convention did

00:43:37,169 --> 00:43:50,099
I answer you had the question - oh yes I

00:43:45,179 --> 00:43:53,339
I think it's a funny name so we had to

00:43:50,099 --> 00:43:55,589
call it something because ActiveMQ is an

00:43:53,339 --> 00:43:58,589
Apache brand and this started pretty

00:43:55,589 --> 00:44:00,630
much like as a demo and we had to give

00:43:58,589 --> 00:44:02,519
it a name and we thought what was the

00:44:00,630 --> 00:44:05,279
messaging fabric and we thought it's

00:44:02,519 --> 00:44:08,869
elegant and it's smooth and is whatever

00:44:05,279 --> 00:44:11,699
whatever and it end up being silk and Q

00:44:08,869 --> 00:44:13,109
so we talked we want to donate most of

00:44:11,699 --> 00:44:15,029
the code because it was built as

00:44:13,109 --> 00:44:16,319
open-source to service mix we already

00:44:15,029 --> 00:44:20,249
talked to them and I think it's gonna

00:44:16,319 --> 00:44:22,109
happen soon at one presentation I have

00:44:20,249 --> 00:44:24,089
this kind of demo people also said that

00:44:22,109 --> 00:44:28,949
it looks kind of expensive you know silk

00:44:24,089 --> 00:44:32,759
so yeah maybe haha so it's just a name

00:44:28,949 --> 00:44:34,859
it is active and actually this is just a

00:44:32,759 --> 00:44:37,259
set of plugins that work with active NQ

00:44:34,859 --> 00:44:42,289
it can be deployed with the talon DSD

00:44:37,259 --> 00:44:44,639
with the redhead thing with BBF with

00:44:42,289 --> 00:44:46,589
savoir tech has a thing called it I

00:44:44,639 --> 00:44:49,589
think or something like that because

00:44:46,589 --> 00:44:51,329
it's just basically a number of active

00:44:49,589 --> 00:44:55,199
n2 plugins that are based on some

00:44:51,329 --> 00:44:56,729
conventions and some other services like

00:44:55,199 --> 00:44:59,579
health death and stuff like that which

00:44:56,729 --> 00:45:02,519
you have to wire in which also makes it

00:44:59,579 --> 00:45:04,499
a bit complicated to test in an

00:45:02,519 --> 00:45:10,880
open-source project because you rely on

00:45:04,499 --> 00:45:10,880
this infrastructure to exist so yes

00:45:12,340 --> 00:45:20,260
you could use CAF character I talked to

00:45:15,670 --> 00:45:23,210
Jake ribs the couple of weeks back

00:45:20,260 --> 00:45:25,220
Casterbridge a mess first of all Kafka

00:45:23,210 --> 00:45:28,070
doesn't support transactions Kafka is

00:45:25,220 --> 00:45:31,280
very fast so there are advantages and

00:45:28,070 --> 00:45:33,710
disadvantages however so you cannot use

00:45:31,280 --> 00:45:35,650
cup so the GMs the screwing with domains

00:45:33,710 --> 00:45:39,590
right the point-to-point the cues and

00:45:35,650 --> 00:45:41,510
the pops up the topics right so the

00:45:39,590 --> 00:45:43,400
topics don't have or pops up doesn't

00:45:41,510 --> 00:45:46,010
have transaction so you could use Kafka

00:45:43,400 --> 00:45:48,560
for that but remember what you see over

00:45:46,010 --> 00:45:51,110
here you don't really care what's

00:45:48,560 --> 00:45:55,430
underneath so when you connect to the

00:45:51,110 --> 00:45:57,260
messaging fabric maybe some messages are

00:45:55,430 --> 00:45:59,120
going to go over Kafka how do you know

00:45:57,260 --> 00:46:01,070
maybe they go over tuxedo maybe who

00:45:59,120 --> 00:46:02,960
knows maybe they go over taxi at some

00:46:01,070 --> 00:46:05,000
point hitting a legacy app and you get

00:46:02,960 --> 00:46:08,420
responses and you think it's a new

00:46:05,000 --> 00:46:10,400
really cool app do you see what I'm and

00:46:08,420 --> 00:46:14,870
that's the point of the messaging gap or

00:46:10,400 --> 00:46:16,340
messaging fabric to adapt different

00:46:14,870 --> 00:46:19,160
messaging systems I just talked to

00:46:16,340 --> 00:46:20,810
clever before these things so let me

00:46:19,160 --> 00:46:23,810
just announce the name queue that has a

00:46:20,810 --> 00:46:27,590
different take on the same problem by

00:46:23,810 --> 00:46:30,580
combining their messaging services maybe

00:46:27,590 --> 00:46:32,450
he's gonna talk more about that after me

00:46:30,580 --> 00:46:37,640
but I'm not sure if I answered your

00:46:32,450 --> 00:46:40,120
question or good enough oh absolutely

00:46:37,640 --> 00:46:40,120
yes

00:46:40,850 --> 00:46:48,530
and you can use it to running you can

00:46:44,300 --> 00:46:51,010
steal from it as much as you any other

00:46:48,530 --> 00:46:51,010
questions

00:46:53,000 --> 00:47:03,440
yes No you mentioned family and using

00:47:00,050 --> 00:47:06,770
camel for Soviet operations is that did

00:47:03,440 --> 00:47:09,880
you end up it's more configurable or

00:47:06,770 --> 00:47:09,880
severe wife

00:47:10,500 --> 00:47:18,970
this is an interesting question so once

00:47:16,780 --> 00:47:21,790
we realize what we did which kind of

00:47:18,970 --> 00:47:24,430
shocked me to be honest with the sharing

00:47:21,790 --> 00:47:26,860
and subscribing then I realized actually

00:47:24,430 --> 00:47:29,470
it's not that if the guy shared and the

00:47:26,860 --> 00:47:32,170
guys subscribe subscribed I can put I

00:47:29,470 --> 00:47:34,990
can do a texture of the message stream

00:47:32,170 --> 00:47:37,090
from here I actually can put a business

00:47:34,990 --> 00:47:39,040
process in the middle I can put the

00:47:37,090 --> 00:47:41,080
camera route I can do whatever stop

00:47:39,040 --> 00:47:43,090
who's gonna do that how do you attach it

00:47:41,080 --> 00:47:45,369
to that okay you can use the same model

00:47:43,090 --> 00:47:48,250
to create some sort of a marketplace so

00:47:45,369 --> 00:47:50,320
people create their own business

00:47:48,250 --> 00:47:53,830
processes or cameras or whatnot and

00:47:50,320 --> 00:47:55,990
people would say when I'm subscribing to

00:47:53,830 --> 00:47:59,500
this destination I don't want you to

00:47:55,990 --> 00:48:01,119
just send to my internal destination I

00:47:59,500 --> 00:48:04,750
want you to first apply a business

00:48:01,119 --> 00:48:06,940
process and then do that so there are

00:48:04,750 --> 00:48:09,220
number of things you can start doing

00:48:06,940 --> 00:48:11,110
with it right now that we realize that

00:48:09,220 --> 00:48:13,000
possible that are not really possible

00:48:11,110 --> 00:48:14,619
with ActiveMQ out of the box

00:48:13,000 --> 00:48:16,869
so it's fun who knows where this is

00:48:14,619 --> 00:48:18,280
going to go if you're gonna see my

00:48:16,869 --> 00:48:20,440
presentations for the next two years

00:48:18,280 --> 00:48:22,690
because this is really fun you kind of

00:48:20,440 --> 00:48:24,310
know what to expect at that point I said

00:48:22,690 --> 00:48:27,489
before I'm not going to go

00:48:24,310 --> 00:48:27,489
[Music]

00:48:29,720 --> 00:48:39,500
ask lemon so I hope I gave you some

00:48:37,820 --> 00:48:40,970
ideas I don't know so there are also

00:48:39,500 --> 00:48:43,220
some other things that we can

00:48:40,970 --> 00:48:45,470
demonstrate with disconnected because

00:48:43,220 --> 00:48:47,300
the other end could be not just a client

00:48:45,470 --> 00:48:49,520
could be another broke another messaging

00:48:47,300 --> 00:48:52,820
system righted occasionally connected

00:48:49,520 --> 00:48:55,330
and stuff like that so anyway thanks for

00:48:52,820 --> 00:48:55,330

YouTube URL: https://www.youtube.com/watch?v=8hvV1l6uSRw


