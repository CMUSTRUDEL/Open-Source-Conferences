Title: From dev@ to user@ to the Apache Way - Steve Blackmon, People Pattern
Publication date: 2017-05-18
Playlist: ApacheCon 2017 - Miami
Description: 
	From dev@ to user@ to the Apache Way- Steve Blackmon, People Pattern

This talk will cover the journey of Apache Streams (incubating) beyond a solution solely by and for java developers, toward a solution that can provide value for anyone, anywhere along the experience spectrum, regardless of technical preferences. We'll share feedback that served as concentrate focus on mission and usability. We'll walk through some of the improvements made to project code and tooling (maven), documentation (website, examples), and usability (command line interface, maven plugins, zeppelin support, network APIs) to move the project from dev@ to user@, and the opportunities we see to increase usability and relevance still further.

About Steve Blackmon
VP Technology at People Pattern, previously Director of Data Science at W2O Group, co-founder of Ravel, stints at Boeing, Lockheed Martin, and Accenture. Committer and PMC for Apache Streams (incubating). Experienced user of Spark, Storm, Hadoop, Pig, Hive, Nutch, Cassandra, Tinkerpop, and more.
Captions: 
	00:00:00,030 --> 00:00:05,759
hello everyone thanks for coming to this

00:00:03,120 --> 00:00:08,130
talk Thank You Shane and everyone else

00:00:05,759 --> 00:00:13,290
who organized the Apache way track for

00:00:08,130 --> 00:00:14,099
including me excited to be here talk is

00:00:13,290 --> 00:00:17,250
titled

00:00:14,099 --> 00:00:21,180
from dev at to user at via the Apache

00:00:17,250 --> 00:00:27,240
way subtitle lessons on the front lines

00:00:21,180 --> 00:00:31,399
of the ASF incubator so the the title

00:00:27,240 --> 00:00:35,010
comes from essentially the journey from

00:00:31,399 --> 00:00:38,280
bringing a new project spinning it up

00:00:35,010 --> 00:00:42,930
and then making the transition from a

00:00:38,280 --> 00:00:45,239
loose collection of ideas and code into

00:00:42,930 --> 00:00:48,960
something that is suitable and exciting

00:00:45,239 --> 00:00:50,640
for casual users right the de patchy we

00:00:48,960 --> 00:00:52,680
don't just want to make code that helps

00:00:50,640 --> 00:01:00,030
us we want to make code that helps

00:00:52,680 --> 00:01:02,820
everybody so some background on me this

00:01:00,030 --> 00:01:04,559
I've been programming for 25 years but

00:01:02,820 --> 00:01:08,189
this is the first open source project

00:01:04,559 --> 00:01:10,140
that I've been involved with so whatever

00:01:08,189 --> 00:01:12,390
I know about open source it's been from

00:01:10,140 --> 00:01:15,960
this experience being in the trenches

00:01:12,390 --> 00:01:19,140
and from the mentorship and kind of

00:01:15,960 --> 00:01:27,540
learning on the job of working on on

00:01:19,140 --> 00:01:30,950
streams so streams was created to fill a

00:01:27,540 --> 00:01:33,750
niche or to fill a gap essentially

00:01:30,950 --> 00:01:36,000
there's a open sore or there is a

00:01:33,750 --> 00:01:40,590
standard called activity streams whose

00:01:36,000 --> 00:01:44,399
purpose is to allow for activity and

00:01:40,590 --> 00:01:47,939
profile and related data online to be

00:01:44,399 --> 00:01:53,220
expressed in a network agnostic fashion

00:01:47,939 --> 00:01:56,479
so where you know what is a friend or a

00:01:53,220 --> 00:02:00,479
follower or a post or a video these are

00:01:56,479 --> 00:02:03,299
more general concepts than then simply

00:02:00,479 --> 00:02:06,360
whatever one specific network or

00:02:03,299 --> 00:02:09,300
enterprise software the idea of what

00:02:06,360 --> 00:02:12,750
that is and should be so the activity

00:02:09,300 --> 00:02:13,300
streams vocabulary expresses how those

00:02:12,750 --> 00:02:20,140
can be accept

00:02:13,300 --> 00:02:22,690
just in a generic fashion and the w3c is

00:02:20,140 --> 00:02:26,260
working on putting out and has put out

00:02:22,690 --> 00:02:30,010
and is codifying this as the hopefully

00:02:26,260 --> 00:02:33,580
the lingua franca of the social digital

00:02:30,010 --> 00:02:36,730
sphere going forward so this is a I

00:02:33,580 --> 00:02:40,300
think important exciting sort of project

00:02:36,730 --> 00:02:42,670
that is ambitious to say the least

00:02:40,300 --> 00:02:46,360
there's a lot of data silos in the world

00:02:42,670 --> 00:02:48,280
today and the more data silos that you

00:02:46,360 --> 00:02:52,540
bump up against as a coder or a data

00:02:48,280 --> 00:02:54,310
scientist or a user the more challenging

00:02:52,540 --> 00:02:56,550
it is to keep track of everything that's

00:02:54,310 --> 00:03:01,540
going on and to be effective at whatever

00:02:56,550 --> 00:03:03,310
you're trying to accomplish so Apache

00:03:01,540 --> 00:03:08,650
streams tries to help solve that problem

00:03:03,310 --> 00:03:11,620
and I will kind of talk through some of

00:03:08,650 --> 00:03:16,930
the different things that we've learned

00:03:11,620 --> 00:03:19,090
in the process of incubation so I'm

00:03:16,930 --> 00:03:20,650
proposing these you know I've broken it

00:03:19,090 --> 00:03:23,350
up into four different parts so these

00:03:20,650 --> 00:03:26,200
are areas that a project needs to

00:03:23,350 --> 00:03:30,300
develop and make progress on in order to

00:03:26,200 --> 00:03:35,170
become self-sufficient and relevant

00:03:30,300 --> 00:03:37,420
their vision of the code it's community

00:03:35,170 --> 00:03:40,600
over code but the code still does matter

00:03:37,420 --> 00:03:42,400
a community won't be attracted to work

00:03:40,600 --> 00:03:45,910
on the code unless if the code is

00:03:42,400 --> 00:03:48,610
horrible right documentation also very

00:03:45,910 --> 00:03:51,430
important to attracting users and I'm

00:03:48,610 --> 00:03:53,650
growing the community and then the team

00:03:51,430 --> 00:03:56,530
the team I think will be a nice

00:03:53,650 --> 00:04:00,400
transition into the next talk which is

00:03:56,530 --> 00:04:03,520
about software as easy people are hard

00:04:00,400 --> 00:04:05,590
and so I'm looking forward to that and

00:04:03,520 --> 00:04:09,550
will be part of the panel look forward

00:04:05,590 --> 00:04:11,380
to good questions there so for and you

00:04:09,550 --> 00:04:12,970
know so we can't neglect any of these if

00:04:11,380 --> 00:04:17,560
we want to have a successful project of

00:04:12,970 --> 00:04:19,239
course of this is the list isn't

00:04:17,560 --> 00:04:22,030
comprehensive and for each one of these

00:04:19,239 --> 00:04:24,070
I'm going to propose a couple different

00:04:22,030 --> 00:04:25,920
dimensions of maturity that a projecting

00:04:24,070 --> 00:04:28,560
can go through

00:04:25,920 --> 00:04:31,110
of for each one I'll talk briefly about

00:04:28,560 --> 00:04:34,520
why it's important kind of characterized

00:04:31,110 --> 00:04:38,520
the different phases of progress that

00:04:34,520 --> 00:04:41,100
I've observed offer some examples and

00:04:38,520 --> 00:04:44,490
anecdotes from my experience working on

00:04:41,100 --> 00:04:47,130
streams and then you know also just note

00:04:44,490 --> 00:04:51,320
some tactics for kind of a project

00:04:47,130 --> 00:04:54,600
trying to get from one phase to the next

00:04:51,320 --> 00:04:56,430
with each one I'll also pause to kind of

00:04:54,600 --> 00:04:58,920
survey the room and look if anyone wants

00:04:56,430 --> 00:05:02,190
to add a comment or ask a question at

00:04:58,920 --> 00:05:05,520
that point a B that'd be great we can be

00:05:02,190 --> 00:05:07,440
interactive as we go otherwise we'll get

00:05:05,520 --> 00:05:10,350
to the end and then we can talk about

00:05:07,440 --> 00:05:14,190
any of the aspects of this that that

00:05:10,350 --> 00:05:16,610
anyone wants to talk about but yeah the

00:05:14,190 --> 00:05:19,380
the focus is on essentially how can a

00:05:16,610 --> 00:05:23,840
incubating project learn the Apache Way

00:05:19,380 --> 00:05:29,130
and grow up and become self-sufficient

00:05:23,840 --> 00:05:32,730
so we'll start with vision and I want to

00:05:29,130 --> 00:05:34,290
talk about both your mission discovering

00:05:32,730 --> 00:05:36,360
what it is and your and how you

00:05:34,290 --> 00:05:40,620
characterize that mission statement and

00:05:36,360 --> 00:05:42,810
the way that you market the project so

00:05:40,620 --> 00:05:47,970
the mission is really what are the

00:05:42,810 --> 00:05:50,220
project's goals so at the outset it

00:05:47,970 --> 00:05:52,500
might be you know not clearly known so

00:05:50,220 --> 00:05:55,380
projects entering incubation can be all

00:05:52,500 --> 00:05:57,930
over the place in terms of where they

00:05:55,380 --> 00:06:00,120
start all the way from fully baked

00:05:57,930 --> 00:06:04,260
platforms that are already in production

00:06:00,120 --> 00:06:06,990
at many places summer might be offshoots

00:06:04,260 --> 00:06:09,090
of other projects that are already more

00:06:06,990 --> 00:06:11,760
or less working maybe some single

00:06:09,090 --> 00:06:14,940
purpose apps that are going to expand

00:06:11,760 --> 00:06:17,460
what they do maybe just a grab bag of

00:06:14,940 --> 00:06:20,910
barely related features that get put

00:06:17,460 --> 00:06:23,070
together into a project or kind of like

00:06:20,910 --> 00:06:26,630
like streams was an idea that had little

00:06:23,070 --> 00:06:29,430
or no implementation at the outset so

00:06:26,630 --> 00:06:32,930
regardless the project still has to

00:06:29,430 --> 00:06:32,930
decide what its mission is going to be

00:06:33,410 --> 00:06:38,040
the next phase may be your your project

00:06:36,660 --> 00:06:39,960
is uncertain about what its mission is

00:06:38,040 --> 00:06:42,420
going to be and needs to work that out

00:06:39,960 --> 00:06:43,770
so the project team is going to disagree

00:06:42,420 --> 00:06:46,980
about different aspects of

00:06:43,770 --> 00:06:49,020
implementation probably disagree about

00:06:46,980 --> 00:06:50,610
the scope of the project right

00:06:49,020 --> 00:06:54,060
what should the project try to do and

00:06:50,610 --> 00:06:56,250
what should it avoid doing and these

00:06:54,060 --> 00:06:58,830
discussions are part of the process of

00:06:56,250 --> 00:07:01,020
refining the mission and deciding what

00:06:58,830 --> 00:07:04,850
your projects ultimate niche is going to

00:07:01,020 --> 00:07:04,850
be in the open source ecosystem

00:07:05,210 --> 00:07:09,330
ultimately you want to have an explicit

00:07:07,320 --> 00:07:11,910
mission right it's important to

00:07:09,330 --> 00:07:14,130
ultimately determine the larger goals

00:07:11,910 --> 00:07:16,260
scope and limits of the project and

00:07:14,130 --> 00:07:19,830
state them explicitly you can achieve

00:07:16,260 --> 00:07:21,930
more capability wise if the team's time

00:07:19,830 --> 00:07:24,300
and attention are focused on the most

00:07:21,930 --> 00:07:27,060
unique things that you do and an

00:07:24,300 --> 00:07:32,100
explicit mission will help to hone and

00:07:27,060 --> 00:07:35,730
maintain this focus of the journey of

00:07:32,100 --> 00:07:37,620
streams in refining our mission had

00:07:35,730 --> 00:07:39,180
multiple phases depending on what year

00:07:37,620 --> 00:07:41,180
you read our board reports you'll see

00:07:39,180 --> 00:07:44,910
different descriptions of the project

00:07:41,180 --> 00:07:46,800
but I think we are happy with what we're

00:07:44,910 --> 00:07:49,350
where we've gotten to and what we're

00:07:46,800 --> 00:07:53,270
working on is now more focused on what's

00:07:49,350 --> 00:07:53,270
truly important to making that happen

00:07:55,820 --> 00:08:01,560
and so then the statement of your

00:07:58,380 --> 00:08:03,240
mission right and I have come to realize

00:08:01,560 --> 00:08:06,650
it's very important that your vision can

00:08:03,240 --> 00:08:09,810
be summarized in a single sentence and

00:08:06,650 --> 00:08:12,900
the other technology and the solutions

00:08:09,810 --> 00:08:14,850
that you have two problems really don't

00:08:12,900 --> 00:08:17,280
have a place and in your vision your

00:08:14,850 --> 00:08:22,290
vision is about why do you exist and

00:08:17,280 --> 00:08:26,160
what are you trying to accomplish so

00:08:22,290 --> 00:08:28,590
often when you're determining your

00:08:26,160 --> 00:08:31,170
mission and trying to state it well you

00:08:28,590 --> 00:08:34,290
start out with a statement that's too

00:08:31,170 --> 00:08:36,270
complicated right and it's obvious why

00:08:34,290 --> 00:08:40,830
this happens if you're trying to solve a

00:08:36,270 --> 00:08:42,420
multitude of problems then the various

00:08:40,830 --> 00:08:44,670
aspects of the way you're solving those

00:08:42,420 --> 00:08:46,470
problems will leak into your vision as

00:08:44,670 --> 00:08:48,440
you're trying to figure it out and as

00:08:46,470 --> 00:08:51,950
you're trying to describe it

00:08:48,440 --> 00:08:54,620
that's expected and you should

00:08:51,950 --> 00:08:56,240
to work to enumerate everything that

00:08:54,620 --> 00:08:59,510
your project does and everything that

00:08:56,240 --> 00:09:01,880
it's trying to do right and in all those

00:08:59,510 --> 00:09:05,270
cases highlight how your project is

00:09:01,880 --> 00:09:08,480
distinct from alternative projects or

00:09:05,270 --> 00:09:11,420
complementary projects but don't get

00:09:08,480 --> 00:09:15,230
carried away on your landing page or in

00:09:11,420 --> 00:09:20,180
your initial user ramped up flow don't

00:09:15,230 --> 00:09:22,160
let it be too complicated right then

00:09:20,180 --> 00:09:24,350
when you think about the all the

00:09:22,160 --> 00:09:25,820
different messaging that users or new

00:09:24,350 --> 00:09:28,730
developers will experience as they learn

00:09:25,820 --> 00:09:30,350
about the project your reason for

00:09:28,730 --> 00:09:34,000
existing is going to take more than a

00:09:30,350 --> 00:09:36,470
sentence more than a page most likely

00:09:34,000 --> 00:09:38,990
but if it seems to annul this or an

00:09:36,470 --> 00:09:41,360
outsider to be just a collection of

00:09:38,990 --> 00:09:45,790
bullet points and not a compelling

00:09:41,360 --> 00:09:48,650
narrative then it won't resonate as well

00:09:45,790 --> 00:09:51,220
really you want a coherent mission

00:09:48,650 --> 00:09:54,860
statement and a coherent set of

00:09:51,220 --> 00:09:58,400
messaging that is meant to excite people

00:09:54,860 --> 00:10:00,050
and to inspire them to use the project

00:09:58,400 --> 00:10:02,930
and ultimately to help to join the

00:10:00,050 --> 00:10:05,000
community right so I think it's

00:10:02,930 --> 00:10:07,370
important and what we learned is that

00:10:05,000 --> 00:10:10,910
the essentials of the vision need to be

00:10:07,370 --> 00:10:13,280
written in a narrative sequential kind

00:10:10,910 --> 00:10:16,400
of outline fashion pictures are really

00:10:13,280 --> 00:10:20,810
important as our real-world examples how

00:10:16,400 --> 00:10:24,050
do you actually get started then that

00:10:20,810 --> 00:10:25,400
you know your entire web presence of

00:10:24,050 --> 00:10:28,370
your entire github repo is going to have

00:10:25,400 --> 00:10:31,220
a lot of pieces of vision throughout it

00:10:28,370 --> 00:10:34,550
you want to have a really strong summary

00:10:31,220 --> 00:10:37,250
level content at the top which is what

00:10:34,550 --> 00:10:41,120
people are most likely to find as they

00:10:37,250 --> 00:10:43,570
get started and lastly if your vision is

00:10:41,120 --> 00:10:46,250
bigger than your current implementation

00:10:43,570 --> 00:10:49,640
should work to ensure that all the

00:10:46,250 --> 00:10:51,680
pieces of the vision have of how the a

00:10:49,640 --> 00:10:53,900
working place holder at least even if

00:10:51,680 --> 00:10:56,690
they're kind of the simplest just what

00:10:53,900 --> 00:10:58,250
you need in order to withstand the

00:10:56,690 --> 00:11:00,290
scrutiny like you say you do that do you

00:10:58,250 --> 00:11:02,190
really do that yes we have something

00:11:00,290 --> 00:11:06,510
that does that we're always working to

00:11:02,190 --> 00:11:09,600
improve the technology if anyone have

00:11:06,510 --> 00:11:14,510
anything they'd like to add before we

00:11:09,600 --> 00:11:14,510
move on to code yes

00:11:22,740 --> 00:11:29,160
so the question is should the vision be

00:11:26,190 --> 00:11:37,170
checked primarily technology-focused or

00:11:29,160 --> 00:11:38,940
also reflect on culture I think a virtue

00:11:37,170 --> 00:11:41,010
of being part of Apache we have kind of

00:11:38,940 --> 00:11:45,480
a great lineage and set of materials

00:11:41,010 --> 00:11:50,000
about culture and the project vision

00:11:45,480 --> 00:11:55,500
should should reinforce those had and

00:11:50,000 --> 00:11:57,510
linked to them right and especially on

00:11:55,500 --> 00:12:00,930
the mailing list as you interact with

00:11:57,510 --> 00:12:04,850
people you can continue to kind of point

00:12:00,930 --> 00:12:07,410
out and you know lead by example as to

00:12:04,850 --> 00:12:11,880
in order to kind of build to build that

00:12:07,410 --> 00:12:15,780
culture I think the vision statement

00:12:11,880 --> 00:12:18,330
such as it is it's about what the

00:12:15,780 --> 00:12:19,920
project wants to wants to become and if

00:12:18,330 --> 00:12:24,960
what you left the project wants to

00:12:19,920 --> 00:12:27,530
become is is characterized largely by

00:12:24,960 --> 00:12:30,830
culture then it certainly has a place

00:12:27,530 --> 00:12:30,830
front and center

00:12:40,390 --> 00:12:45,040
it's incredibly helpful to people who

00:12:42,520 --> 00:12:47,500
might otherwise question a little bit

00:12:45,040 --> 00:12:51,390
they want to invest their personal

00:12:47,500 --> 00:12:54,730
phones which might attract individuals

00:12:51,390 --> 00:12:57,870
so being positive about that is they're

00:12:54,730 --> 00:12:57,870
really simple definitely make it

00:13:00,320 --> 00:13:07,280
okay so talking about the code maturity

00:13:03,920 --> 00:13:10,880
right for different kind of things I

00:13:07,280 --> 00:13:13,610
want to touch on licensing functionality

00:13:10,880 --> 00:13:15,140
synergy I apologize the best word I

00:13:13,610 --> 00:13:17,630
could come up with on short notice to

00:13:15,140 --> 00:13:22,100
describe but we'll get into it and

00:13:17,630 --> 00:13:24,730
comprehensibility so licensing right is

00:13:22,100 --> 00:13:27,560
the code actually legit Apache code and

00:13:24,730 --> 00:13:29,330
out of the gate a lot of projects don't

00:13:27,560 --> 00:13:32,510
meet the minimum code standards for an

00:13:29,330 --> 00:13:35,870
Apache release that's fine that's why we

00:13:32,510 --> 00:13:37,490
have the incubator the next stage is

00:13:35,870 --> 00:13:40,130
getting to having code that is

00:13:37,490 --> 00:13:43,430
releasable so actually getting a release

00:13:40,130 --> 00:13:46,600
through an IPM fee boat is a significant

00:13:43,430 --> 00:13:49,190
milestone in itself so I've been told

00:13:46,600 --> 00:13:51,800
now getting your license house in order

00:13:49,190 --> 00:13:53,450
to graduate is is another there's

00:13:51,800 --> 00:13:55,100
another thing right because your project

00:13:53,450 --> 00:13:57,350
source code doesn't need to be

00:13:55,100 --> 00:14:01,940
demonstrably free of any licensing

00:13:57,350 --> 00:14:06,170
issues and needs to get there by the end

00:14:01,940 --> 00:14:09,310
of your incubating journey so

00:14:06,170 --> 00:14:09,310
functionality yes

00:14:28,000 --> 00:14:34,720
so the question is about license

00:14:31,079 --> 00:14:38,560
auditability and technic technological

00:14:34,720 --> 00:14:42,459
tools to help for projects of the size

00:14:38,560 --> 00:14:45,339
of streams that's pretty important for

00:14:42,459 --> 00:14:46,660
maybe smaller projects someone can wrap

00:14:45,339 --> 00:14:48,759
their head around all the dependencies

00:14:46,660 --> 00:14:51,579
and enumerate them and write the notice

00:14:48,759 --> 00:14:54,129
file by hand right that's fine but when

00:14:51,579 --> 00:14:56,199
when you cross into the realm of

00:14:54,129 --> 00:14:59,259
hundreds of things all of which have

00:14:56,199 --> 00:15:00,699
independent versions and the the group

00:14:59,259 --> 00:15:04,540
IDs might change

00:15:00,699 --> 00:15:06,040
I do think you want to be collecting all

00:15:04,540 --> 00:15:08,199
of that information into one central

00:15:06,040 --> 00:15:24,850
place that gets looked at at least prior

00:15:08,199 --> 00:15:27,420
to each release and yes about you rad

00:15:24,850 --> 00:15:30,250
and Apache tentacles being to Apache

00:15:27,420 --> 00:15:33,250
foundation supported tools that will

00:15:30,250 --> 00:15:37,870
help shed light into whether you have

00:15:33,250 --> 00:15:41,199
license problems functionality does the

00:15:37,870 --> 00:15:43,360
code actually work right so the spectrum

00:15:41,199 --> 00:15:45,670
starts it broken there's a patchy

00:15:43,360 --> 00:15:48,579
project and not just an incubator that

00:15:45,670 --> 00:15:51,189
sometimes go periods of time with

00:15:48,579 --> 00:15:55,029
compile or test problems in the master

00:15:51,189 --> 00:15:56,290
branch right so to an outsider this

00:15:55,029 --> 00:15:57,759
doesn't look good

00:15:56,290 --> 00:16:00,699
someone who's coming in trying to get

00:15:57,759 --> 00:16:03,220
started regardless of why it happened or

00:16:00,699 --> 00:16:05,709
how long it's been happening it's it's

00:16:03,220 --> 00:16:10,000
not good you want to avoid this and get

00:16:05,709 --> 00:16:11,559
to baseline working phase so the project

00:16:10,000 --> 00:16:14,050
code I think is officially working when

00:16:11,559 --> 00:16:17,500
you have unit tests in every module and

00:16:14,050 --> 00:16:19,329
they get run routinely and the standard

00:16:17,500 --> 00:16:22,809
of there should be unit tests is applied

00:16:19,329 --> 00:16:26,019
to all new code submissions getting

00:16:22,809 --> 00:16:27,459
getting here takes time assuming you

00:16:26,019 --> 00:16:29,920
don't start out with test-driven

00:16:27,459 --> 00:16:31,269
development from day one of you thought

00:16:29,920 --> 00:16:34,509
you will build up some technical that

00:16:31,269 --> 00:16:36,309
need to work through it ultimately you

00:16:34,509 --> 00:16:40,089
want to get to where the functionality

00:16:36,309 --> 00:16:41,920
is solid right so projects with solid

00:16:40,089 --> 00:16:45,070
code have automated

00:16:41,920 --> 00:16:46,149
newest integration they address build

00:16:45,070 --> 00:16:49,600
issues that are brought to light

00:16:46,149 --> 00:16:51,720
mmediately I probably are using

00:16:49,600 --> 00:16:54,810
integration tests that check-in

00:16:51,720 --> 00:16:57,430
workflows for proper function and

00:16:54,810 --> 00:16:59,680
features that aren't being maintained or

00:16:57,430 --> 00:17:02,740
keeping up get scrutinized and are

00:16:59,680 --> 00:17:04,959
deleted right you don't just want a lot

00:17:02,740 --> 00:17:08,319
of stuff sitting around that is not

00:17:04,959 --> 00:17:09,730
being maintained in though that on this

00:17:08,319 --> 00:17:12,010
and you know many of these other

00:17:09,730 --> 00:17:13,720
dimensions of maturity it's not

00:17:12,010 --> 00:17:16,329
necessarily a straight line progression

00:17:13,720 --> 00:17:19,240
you can work your way up to a certain

00:17:16,329 --> 00:17:20,860
degree of maturity and then fall back

00:17:19,240 --> 00:17:25,089
for a time because you're focused on

00:17:20,860 --> 00:17:26,770
other things but you know general you

00:17:25,089 --> 00:17:32,140
keep trying to make things better it's

00:17:26,770 --> 00:17:34,419
okay to be imperfect but always try to

00:17:32,140 --> 00:17:36,250
remember that all of the these various

00:17:34,419 --> 00:17:39,760
aspects of maturity are important and

00:17:36,250 --> 00:17:43,290
reflect on on the project reflect on the

00:17:39,760 --> 00:17:43,290
contributors reflect on the foundation

00:17:44,460 --> 00:17:47,590
okay

00:17:45,669 --> 00:17:49,630
Sergey I don't even know how to describe

00:17:47,590 --> 00:17:52,450
it but I'll kind of talk about what I'm

00:17:49,630 --> 00:17:55,840
trying to express here so code bases can

00:17:52,450 --> 00:17:58,150
be fragmented so when a project is first

00:17:55,840 --> 00:17:59,980
being assembled not all the parts you

00:17:58,150 --> 00:18:01,419
know fit together all the time so you

00:17:59,980 --> 00:18:03,429
might have groups of modules that are

00:18:01,419 --> 00:18:06,130
incompatible with other groups in

00:18:03,429 --> 00:18:09,010
various ways or the same function might

00:18:06,130 --> 00:18:10,990
be implemented in multiple modules your

00:18:09,010 --> 00:18:12,460
interfaces aren't yet stable or you

00:18:10,990 --> 00:18:17,940
don't have any interfaces yet you just

00:18:12,460 --> 00:18:20,559
have classes so it's it's normal for

00:18:17,940 --> 00:18:22,270
projects to have a phase like this and

00:18:20,559 --> 00:18:24,280
for new capabilities that are going into

00:18:22,270 --> 00:18:27,010
existing projects to kind of start out a

00:18:24,280 --> 00:18:28,840
little bit disconnected but ultimately

00:18:27,010 --> 00:18:32,799
you want the balance of the code to be

00:18:28,840 --> 00:18:35,070
connected so you'll find modules that

00:18:32,799 --> 00:18:36,940
you don't need during incubation

00:18:35,070 --> 00:18:39,250
you'll find interfaces that you

00:18:36,940 --> 00:18:40,419
desperately need and you'll go through a

00:18:39,250 --> 00:18:42,820
lot of our factorings

00:18:40,419 --> 00:18:44,799
that hit tens or hundreds of files and

00:18:42,820 --> 00:18:48,580
eventually should get all the code

00:18:44,799 --> 00:18:50,049
connected very few orphan modules or

00:18:48,580 --> 00:18:52,270
classes that are completely standalone

00:18:50,049 --> 00:18:53,730
everything kind of all part of a larger

00:18:52,270 --> 00:18:56,350
system

00:18:53,730 --> 00:18:59,620
so just understand it until you get

00:18:56,350 --> 00:19:01,420
there you have these parts of your code

00:18:59,620 --> 00:19:04,690
base that someone can come across and

00:19:01,420 --> 00:19:06,850
think this doesn't you know I don't

00:19:04,690 --> 00:19:08,920
understand this why is this not hooked

00:19:06,850 --> 00:19:11,590
up the way everything else is and that

00:19:08,920 --> 00:19:13,600
those sorts of things can rub a new user

00:19:11,590 --> 00:19:14,650
or potential committer of the raw or

00:19:13,600 --> 00:19:19,750
pretty potential contributor the wrong

00:19:14,650 --> 00:19:21,490
way you want a fully integrated code so

00:19:19,750 --> 00:19:24,220
a really mature integrated code base

00:19:21,490 --> 00:19:26,380
will have exhaustively considered and

00:19:24,220 --> 00:19:29,040
debated interfaces predictable class

00:19:26,380 --> 00:19:31,030
names predictable package names and

00:19:29,040 --> 00:19:34,540
patterns for things like configuration

00:19:31,030 --> 00:19:36,850
and logging and instantiation and

00:19:34,540 --> 00:19:40,060
testing and reflection that are

00:19:36,850 --> 00:19:43,570
universal across all the code in within

00:19:40,060 --> 00:19:45,100
the project right and they're versatile

00:19:43,570 --> 00:19:47,860
in terms of what they can do and how

00:19:45,100 --> 00:19:50,140
much tweaking they take to to try out

00:19:47,860 --> 00:19:53,980
something new and this is really worth

00:19:50,140 --> 00:19:55,630
doing really smart projects that are

00:19:53,980 --> 00:19:57,520
built smartly are more fun to dig into

00:19:55,630 --> 00:20:01,840
because they teach you they teaching you

00:19:57,520 --> 00:20:03,760
tricks and learning as you get involved

00:20:01,840 --> 00:20:08,070
in a project is a good motivator for

00:20:03,760 --> 00:20:10,660
continuing to go deeper

00:20:08,070 --> 00:20:15,430
comprehensibility of code this is key on

00:20:10,660 --> 00:20:17,440
newbies understand the code so you know

00:20:15,430 --> 00:20:20,080
sometimes code can just be confusing so

00:20:17,440 --> 00:20:22,210
has anyone checked out a new code base

00:20:20,080 --> 00:20:25,330
and had this like strange feeling that

00:20:22,210 --> 00:20:27,640
you just landed on an alien planet right

00:20:25,330 --> 00:20:30,550
so you get glimpses of familiar things

00:20:27,640 --> 00:20:32,710
and there's still some organic matter

00:20:30,550 --> 00:20:34,510
and you know there's still an atmosphere

00:20:32,710 --> 00:20:37,540
but on the whole you cut you really have

00:20:34,510 --> 00:20:41,430
no idea where or what or why anything is

00:20:37,540 --> 00:20:44,560
the way it is you you have to learn of

00:20:41,430 --> 00:20:45,820
so it's and again it's only once you

00:20:44,560 --> 00:20:46,780
come to understanding the reasoning

00:20:45,820 --> 00:20:49,210
behind the design and the implementation

00:20:46,780 --> 00:20:51,430
of a project that you can develop

00:20:49,210 --> 00:20:55,900
intuitions that are useful in diagnosing

00:20:51,430 --> 00:20:57,400
a problem or adding a feature projects

00:20:55,900 --> 00:21:00,100
though can take steps to seem less

00:20:57,400 --> 00:21:03,730
foreign and seem more familiar at least

00:21:00,100 --> 00:21:06,070
to Apache committers who are coming from

00:21:03,730 --> 00:21:06,890
another Apache project right and I think

00:21:06,070 --> 00:21:09,740
that that's

00:21:06,890 --> 00:21:13,280
worth looking at and trying to strive

00:21:09,740 --> 00:21:15,740
for in your project ultimately you'd

00:21:13,280 --> 00:21:18,170
like your code to be welcoming

00:21:15,740 --> 00:21:20,600
so each newcomer still has to explore

00:21:18,170 --> 00:21:21,830
for themselves but there's a noticeable

00:21:20,600 --> 00:21:24,320
difference between projects where

00:21:21,830 --> 00:21:28,100
understanding what's going on comes

00:21:24,320 --> 00:21:29,929
easily and projects where it doesn't all

00:21:28,100 --> 00:21:34,309
right and I think that comes down a lot

00:21:29,929 --> 00:21:36,049
to consistency if all the parts in your

00:21:34,309 --> 00:21:39,380
project that need to do a specific

00:21:36,049 --> 00:21:42,679
activity do it the same way and you have

00:21:39,380 --> 00:21:44,210
documentation behind the not only the

00:21:42,679 --> 00:21:46,820
individual parts of the project but also

00:21:44,210 --> 00:21:48,919
the patterns then someone can read about

00:21:46,820 --> 00:21:50,660
it and come to understand why you log

00:21:48,919 --> 00:21:52,910
with a certain package while you do

00:21:50,660 --> 00:21:54,740
configuration a certain way and

00:21:52,910 --> 00:21:56,630
understand how to actually do those

00:21:54,740 --> 00:21:59,510
things the way they want to rather than

00:21:56,630 --> 00:22:04,010
just how the code base and the test ship

00:21:59,510 --> 00:22:05,510
out of the box the fundamental thing

00:22:04,010 --> 00:22:08,929
here is to try to push your project

00:22:05,510 --> 00:22:10,640
closer to consistency in the design in

00:22:08,929 --> 00:22:13,360
and the implementation with every issue

00:22:10,640 --> 00:22:15,919
that you close look for opportunities to

00:22:13,360 --> 00:22:17,690
to take what you're working on and make

00:22:15,919 --> 00:22:21,970
it a little bit closer to the best

00:22:17,690 --> 00:22:21,970
practices that the team is discovered

00:22:22,270 --> 00:22:31,750
any questions or comments about code

00:22:25,790 --> 00:22:31,750
before we move on to documentation yes

00:22:41,010 --> 00:22:46,650
yeah these are just kind of a grab bag

00:22:44,490 --> 00:22:48,809
of different things that you're going to

00:22:46,650 --> 00:22:51,390
need to make better they're not in any

00:22:48,809 --> 00:22:58,770
specific order although on each slide it

00:22:51,390 --> 00:23:01,559
starts from God and goes to good right

00:22:58,770 --> 00:23:04,620
so both vision and code and/or vision

00:23:01,559 --> 00:23:08,960
code documentation and team dynamic all

00:23:04,620 --> 00:23:14,580
need to be developed constantly and

00:23:08,960 --> 00:23:16,260
there's no shortcut to if you you don't

00:23:14,580 --> 00:23:25,400
develop one of them you'll wind up

00:23:16,260 --> 00:23:31,710
paying for it later okay um

00:23:25,400 --> 00:23:34,200
documentation so here the kind of the

00:23:31,710 --> 00:23:37,919
four kind of dimensions I've proposed so

00:23:34,200 --> 00:23:42,870
you've got availability utility recency

00:23:37,919 --> 00:23:45,030
and aesthetics of all of these really

00:23:42,870 --> 00:23:49,650
important for the public perception of

00:23:45,030 --> 00:23:54,080
the project so availability just is are

00:23:49,650 --> 00:23:56,190
there decent Doc's available so

00:23:54,080 --> 00:23:58,440
worst-case there they're straight up

00:23:56,190 --> 00:24:00,960
missing now you do you need a project

00:23:58,440 --> 00:24:02,700
website you can get away with

00:24:00,960 --> 00:24:05,280
boilerplate copied out of the proposal

00:24:02,700 --> 00:24:08,000
and links to your code and your issue

00:24:05,280 --> 00:24:10,620
tracker and so on but not for very long

00:24:08,000 --> 00:24:12,000
what what I found is that if your

00:24:10,620 --> 00:24:14,400
website sucks you're going to hear about

00:24:12,000 --> 00:24:17,190
it and no one's going to hold any

00:24:14,400 --> 00:24:20,010
punches you have to take that criticism

00:24:17,190 --> 00:24:24,660
as seriously as any other that you hear

00:24:20,010 --> 00:24:26,549
about the project the developers and

00:24:24,660 --> 00:24:30,090
users that you want to recruit are by

00:24:26,549 --> 00:24:33,360
and large not tolerate missing or bad

00:24:30,090 --> 00:24:35,280
documentation and it's the number one

00:24:33,360 --> 00:24:40,440
thing that people see when they learn

00:24:35,280 --> 00:24:42,690
about your project so even once you've

00:24:40,440 --> 00:24:45,390
got some documentation it might be

00:24:42,690 --> 00:24:47,610
lacking right so you I would say you've

00:24:45,390 --> 00:24:49,890
achieved documentation level one when

00:24:47,610 --> 00:24:52,740
your website contains details about

00:24:49,890 --> 00:24:54,990
everything that your project is your

00:24:52,740 --> 00:24:58,500
read knees are not just a link to a lot

00:24:54,990 --> 00:25:01,280
once in in summaries right and your

00:24:58,500 --> 00:25:03,750
projects website and other artifacts are

00:25:01,280 --> 00:25:05,760
ranked towards at the top or close to

00:25:03,750 --> 00:25:10,650
the top and searches for your project

00:25:05,760 --> 00:25:12,360
and keywords related to your code the

00:25:10,650 --> 00:25:15,420
docs that you have are never going to be

00:25:12,360 --> 00:25:18,360
the docs that your users want also most

00:25:15,420 --> 00:25:19,710
of the time and that's because the

00:25:18,360 --> 00:25:22,370
practice of documentation assumes

00:25:19,710 --> 00:25:24,809
certain use cases and motivations and

00:25:22,370 --> 00:25:28,140
those are in flux in an early project

00:25:24,809 --> 00:25:31,110
and every time in the user shows up they

00:25:28,140 --> 00:25:34,290
have a new they have a new take on what

00:25:31,110 --> 00:25:35,970
this should do in their mind right so

00:25:34,290 --> 00:25:40,140
you need to keep creating updating and

00:25:35,970 --> 00:25:42,600
reorganizing documentation constantly so

00:25:40,140 --> 00:25:45,690
what you want to get to is rockin

00:25:42,600 --> 00:25:48,179
documentation so in this ideal world

00:25:45,690 --> 00:25:49,710
your project documentation should

00:25:48,179 --> 00:25:51,480
anticipate everything that a user will

00:25:49,710 --> 00:25:54,059
want to know present the right

00:25:51,480 --> 00:25:56,910
information in response to expected

00:25:54,059 --> 00:25:58,500
search terms right so for example

00:25:56,910 --> 00:25:59,730
developers are going to Google your

00:25:58,500 --> 00:26:01,230
package names they're going to Google

00:25:59,730 --> 00:26:03,590
your class names they're going to Google

00:26:01,230 --> 00:26:06,390
the exceptions they run into

00:26:03,590 --> 00:26:09,090
ideally you want the results of those to

00:26:06,390 --> 00:26:13,290
land on properties that the project

00:26:09,090 --> 00:26:16,230
controls and so Java Doc's are good for

00:26:13,290 --> 00:26:19,650
that or Scala Doc's or fill in the blank

00:26:16,230 --> 00:26:21,360
based on your technology but unless your

00:26:19,650 --> 00:26:24,090
team is actually annotating your code

00:26:21,360 --> 00:26:26,070
and providing good class and method

00:26:24,090 --> 00:26:30,960
level documentation the page might as

00:26:26,070 --> 00:26:32,490
well just be blank they need to act they

00:26:30,960 --> 00:26:34,850
need to actually be filled out to some

00:26:32,490 --> 00:26:37,920
degree so that someone landing on that

00:26:34,850 --> 00:26:39,960
module understands what its purpose is

00:26:37,920 --> 00:26:43,800
and what it should be used for and what

00:26:39,960 --> 00:26:45,240
else it's connected to and also a lot of

00:26:43,800 --> 00:26:47,490
techies are going to chance on your

00:26:45,240 --> 00:26:49,110
project via github right so you want to

00:26:47,490 --> 00:26:55,170
make sure that your readme is on github

00:26:49,110 --> 00:26:56,460
are strong and helpful and you want to

00:26:55,170 --> 00:26:58,050
think about people looking at the source

00:26:56,460 --> 00:27:00,750
code directly as well as people looking

00:26:58,050 --> 00:27:03,059
at the webpage so ideally you want the

00:27:00,750 --> 00:27:05,210
content on the two connected or mutually

00:27:03,059 --> 00:27:07,970
reinforcing

00:27:05,210 --> 00:27:11,540
there's a question of recency so are the

00:27:07,970 --> 00:27:13,250
docs current and sometimes the docs are

00:27:11,540 --> 00:27:15,500
just plain and accurate right and

00:27:13,250 --> 00:27:19,010
inaccurate or stale documentation is

00:27:15,500 --> 00:27:20,480
actually worse than no documentation and

00:27:19,010 --> 00:27:23,420
actually documentation that goes stale

00:27:20,480 --> 00:27:26,510
even just a few versions can become so

00:27:23,420 --> 00:27:28,970
wrong that a new user will fail to do

00:27:26,510 --> 00:27:30,770
what they're trying to do in steps one

00:27:28,970 --> 00:27:32,240
two and three of their experience get

00:27:30,770 --> 00:27:38,240
frustrated trying to run the software at

00:27:32,240 --> 00:27:38,930
all and move on so presume that you

00:27:38,240 --> 00:27:42,320
still need to be aware that

00:27:38,930 --> 00:27:45,440
documentation natural tendency is to

00:27:42,320 --> 00:27:49,550
become dated and even small oversight

00:27:45,440 --> 00:27:52,270
and version numbers or class names that

00:27:49,550 --> 00:27:54,260
changed right they lead to problems most

00:27:52,270 --> 00:27:55,730
some of these problems can be easily

00:27:54,260 --> 00:27:57,830
overcome by an experienced software

00:27:55,730 --> 00:27:59,810
engineer but not everyone is going to

00:27:57,830 --> 00:28:03,020
have that experience or have the

00:27:59,810 --> 00:28:07,030
patience of in those experiences you

00:28:03,020 --> 00:28:10,820
know hurt your funnel of of new talent

00:28:07,030 --> 00:28:12,290
so to help current documentation you

00:28:10,820 --> 00:28:15,010
want to make updating documentation

00:28:12,290 --> 00:28:17,300
standard practice during code review and

00:28:15,010 --> 00:28:20,330
you want to perform a survey for

00:28:17,300 --> 00:28:22,250
incorrect content any time leading up to

00:28:20,330 --> 00:28:29,240
and during the release process at a

00:28:22,250 --> 00:28:30,440
minimum documentation utility right so

00:28:29,240 --> 00:28:31,940
how helpful actually is the

00:28:30,440 --> 00:28:34,730
documentation you can have documentation

00:28:31,940 --> 00:28:38,390
that's not particularly helpful or

00:28:34,730 --> 00:28:39,830
irrelevant so things to think about does

00:28:38,390 --> 00:28:42,100
your documentation actually tell the

00:28:39,830 --> 00:28:44,270
world why they should use the project

00:28:42,100 --> 00:28:46,760
does it help a new user get up and

00:28:44,270 --> 00:28:49,250
running seamlessly and doesn't explain

00:28:46,760 --> 00:28:52,070
the line between what it does today

00:28:49,250 --> 00:28:54,230
out-of-the-box and what it's capable of

00:28:52,070 --> 00:28:56,690
doing and helping for power users who

00:28:54,230 --> 00:28:58,660
are willing to write code inside the

00:28:56,690 --> 00:29:04,130
project or using its interfaces and

00:28:58,660 --> 00:29:05,950
using its internals so you would have

00:29:04,130 --> 00:29:08,200
helpful Docs

00:29:05,950 --> 00:29:10,610
docks are your first line of defense

00:29:08,200 --> 00:29:12,440
when someone has a question and they're

00:29:10,610 --> 00:29:14,600
your best chance to win advocates right

00:29:12,440 --> 00:29:16,820
so assuming that your code can provide

00:29:14,600 --> 00:29:19,580
user value quickly to somebody running

00:29:16,820 --> 00:29:22,490
it then you want your dogs to explain

00:29:19,580 --> 00:29:26,870
exactly how to make that happen so that

00:29:22,490 --> 00:29:28,220
there's no room for confusion all the

00:29:26,870 --> 00:29:31,190
way you want your docks to be inspiring

00:29:28,220 --> 00:29:34,990
right so the parts of your code that are

00:29:31,190 --> 00:29:38,300
geared to programmers also require

00:29:34,990 --> 00:29:42,380
marketing to them so when and why are

00:29:38,300 --> 00:29:45,140
your library's the best choice why does

00:29:42,380 --> 00:29:48,140
the system work the way that it does why

00:29:45,140 --> 00:29:51,020
is it really good and if it's really

00:29:48,140 --> 00:29:55,370
good what improvements are on deck and

00:29:51,020 --> 00:29:57,350
coming and how does your project stack

00:29:55,370 --> 00:30:02,050
up against other projects that claim to

00:29:57,350 --> 00:30:03,890
do similar things on streams we've

00:30:02,050 --> 00:30:06,320
constantly been asked how are we

00:30:03,890 --> 00:30:09,980
different from storm or how are we

00:30:06,320 --> 00:30:11,870
different from spark streaming and it's

00:30:09,980 --> 00:30:14,570
you know there was a time when the

00:30:11,870 --> 00:30:16,190
project was attempting to and did

00:30:14,570 --> 00:30:18,560
implement some of the sorts of core

00:30:16,190 --> 00:30:21,980
features of those platforms in order to

00:30:18,560 --> 00:30:24,920
pass data around but over time we

00:30:21,980 --> 00:30:26,810
decided to stop doing that and focus on

00:30:24,920 --> 00:30:30,260
our bread and butter which is getting

00:30:26,810 --> 00:30:34,100
data moving data to and from various

00:30:30,260 --> 00:30:39,710
api's of while exposing standard api's

00:30:34,100 --> 00:30:41,600
and data formats to the programmer so

00:30:39,710 --> 00:30:44,270
it's important to have pages that

00:30:41,600 --> 00:30:48,110
explain how you differ from the from the

00:30:44,270 --> 00:30:50,060
usual suspects so aesthetics you know

00:30:48,110 --> 00:30:52,510
often an afterthought but this is art

00:30:50,060 --> 00:30:56,000
are your Doc's visually appealing and

00:30:52,510 --> 00:30:57,350
they might they might be ugly a lot of

00:30:56,000 --> 00:31:00,410
the tools that we use day to day

00:30:57,350 --> 00:31:03,050
especially as engineers are just ugly

00:31:00,410 --> 00:31:04,610
right so we get used to it but isn't it

00:31:03,050 --> 00:31:07,580
just a breath of fresh air when you find

00:31:04,610 --> 00:31:10,400
a new tool that isn't ugly and is

00:31:07,580 --> 00:31:13,010
beautiful basically you don't want your

00:31:10,400 --> 00:31:14,840
new users thinking like math or ik as

00:31:13,010 --> 00:31:16,910
they encounter your projects branding

00:31:14,840 --> 00:31:18,659
for you know the first time you got them

00:31:16,910 --> 00:31:20,669
thinking ah ok like

00:31:18,659 --> 00:31:22,529
this looks that this looks nice I could

00:31:20,669 --> 00:31:24,950
get used to to this I want to send this

00:31:22,529 --> 00:31:28,049
to my friends

00:31:24,950 --> 00:31:32,039
so there's acceptable level right would

00:31:28,049 --> 00:31:34,109
say but you even if you're using tools

00:31:32,039 --> 00:31:37,950
like Itachi CMS try not to settle for

00:31:34,109 --> 00:31:40,229
just like bare-bones very basic white

00:31:37,950 --> 00:31:45,509
background same icon as every other

00:31:40,229 --> 00:31:48,720
project right you can pick a platform

00:31:45,509 --> 00:31:53,070
there's several that are in use and

00:31:48,720 --> 00:31:54,690
supported by patchy and that are or

00:31:53,070 --> 00:31:57,539
where you can find other projects using

00:31:54,690 --> 00:32:00,179
using platforms that have header min or

00:31:57,539 --> 00:32:02,489
other menus at a minimum right that

00:32:00,179 --> 00:32:04,830
allow for custom styling and theming so

00:32:02,489 --> 00:32:09,599
you can pick pick color schemes to match

00:32:04,830 --> 00:32:10,769
the iconography that you use want to

00:32:09,599 --> 00:32:12,210
make sure you write a frequently asked

00:32:10,769 --> 00:32:15,859
questions getting started guides

00:32:12,210 --> 00:32:15,859
examples that sort of thing

00:32:21,480 --> 00:32:28,010
so the question is does the ASF have

00:32:23,549 --> 00:32:28,010
resources for designers to help projects

00:32:28,820 --> 00:32:35,070
I'm not seeing any hands come out but I

00:32:31,799 --> 00:32:37,860
would if we come back to the you know

00:32:35,070 --> 00:32:40,710
one of the themes from the talk this

00:32:37,860 --> 00:32:43,260
morning and a lighter theme from later

00:32:40,710 --> 00:32:47,159
in the day it's not just about

00:32:43,260 --> 00:32:48,510
programming so you can use the we we

00:32:47,159 --> 00:32:50,730
would like a better design as a way to

00:32:48,510 --> 00:32:51,899
appeal to people who would otherwise you

00:32:50,730 --> 00:32:54,120
know not join an open-source project

00:32:51,899 --> 00:32:56,820
they have skills that can help you out

00:32:54,120 --> 00:32:59,940
don't be afraid to ask designers or

00:32:56,820 --> 00:33:02,039
copywriters to help with your you know

00:32:59,940 --> 00:33:03,120
to help with your project in how make

00:33:02,039 --> 00:33:05,190
sure your project content actually

00:33:03,120 --> 00:33:08,000
explicitly invites participation from

00:33:05,190 --> 00:33:08,000
people with those skill sets

00:33:27,690 --> 00:33:32,550
that's great yeah the comment was just

00:33:29,850 --> 00:33:34,050
like you have tickets for what you want

00:33:32,550 --> 00:33:36,990
to accomplish in your code you can have

00:33:34,050 --> 00:33:40,400
tickets for updating copy for creating

00:33:36,990 --> 00:33:46,710
logos for any range of non code related

00:33:40,400 --> 00:33:48,210
tasks and list those and you use that

00:33:46,710 --> 00:33:50,910
inventory of things you'd like to have

00:33:48,210 --> 00:33:52,530
happen to help motivate people to to

00:33:50,910 --> 00:33:55,110
join to try it out and to realize that

00:33:52,530 --> 00:33:57,390
you're not looking for a huge commitment

00:33:55,110 --> 00:34:00,270
necessarily just for progress on

00:33:57,390 --> 00:34:01,740
specifically identified tasks that are

00:34:00,270 --> 00:34:07,560
going to be appreciated by the by the

00:34:01,740 --> 00:34:09,360
community ultimately you want your

00:34:07,560 --> 00:34:11,070
documentation to be really engaging and

00:34:09,360 --> 00:34:13,370
this comes from investing time and

00:34:11,070 --> 00:34:16,679
themes and style sheets and platforms

00:34:13,370 --> 00:34:18,780
and it's important it affects your

00:34:16,679 --> 00:34:22,590
reputation as a project even if you

00:34:18,780 --> 00:34:24,510
think that it shouldn't so leaving aside

00:34:22,590 --> 00:34:27,660
the utility of your project to

00:34:24,510 --> 00:34:30,540
programmers or users humans are just

00:34:27,660 --> 00:34:34,350
more likely to share links to two pages

00:34:30,540 --> 00:34:36,510
that we enjoyed looking at right it's

00:34:34,350 --> 00:34:37,830
just human nature so if you haven't if

00:34:36,510 --> 00:34:40,200
you have an ugly site it's less likely

00:34:37,830 --> 00:34:42,929
to get to get retweeted than if you have

00:34:40,200 --> 00:34:45,810
a pretty site and as it happens web

00:34:42,929 --> 00:34:51,720
crawlers actually care about these kind

00:34:45,810 --> 00:34:56,340
of style things as well many questions

00:34:51,720 --> 00:34:57,930
or comments about documentation the next

00:34:56,340 --> 00:35:04,920
and final group being that I had planned

00:34:57,930 --> 00:35:08,280
is to talk about your team dynamics so

00:35:04,920 --> 00:35:12,300
the kind of the three top level items to

00:35:08,280 --> 00:35:14,670
talk about with team I think our team

00:35:12,300 --> 00:35:19,560
presence right team coordination and

00:35:14,670 --> 00:35:21,000
team planning so present so is anybody

00:35:19,560 --> 00:35:25,740
actually reading these messages that I'm

00:35:21,000 --> 00:35:27,780
sending and sometimes the team can feel

00:35:25,740 --> 00:35:32,520
can feel absent especially when it's

00:35:27,780 --> 00:35:34,590
small everyone is on a specific day or

00:35:32,520 --> 00:35:38,940
week or month that seems you know busy

00:35:34,590 --> 00:35:40,620
disconnected or unmotivated and you're

00:35:38,940 --> 00:35:41,510
going to hit periods like this right the

00:35:40,620 --> 00:35:44,120
way through it is yeah

00:35:41,510 --> 00:35:47,180
to find specific topics that will spur

00:35:44,120 --> 00:35:49,640
discussion and specific goals that will

00:35:47,180 --> 00:35:52,100
galvanize people to want to reach them

00:35:49,640 --> 00:35:53,420
and get commits moving and then find

00:35:52,100 --> 00:35:56,050
another one and then find another one

00:35:53,420 --> 00:35:59,630
and then find another one that's

00:35:56,050 --> 00:36:00,980
activity is what breeds inspiration when

00:35:59,630 --> 00:36:03,470
things are happening people want to be a

00:36:00,980 --> 00:36:07,160
part of what's happening they don't want

00:36:03,470 --> 00:36:09,140
to miss out and they don't want to lose

00:36:07,160 --> 00:36:13,310
their chance to to weigh in on the

00:36:09,140 --> 00:36:15,110
direction that the project is taking the

00:36:13,310 --> 00:36:17,120
team can just be distracted right so

00:36:15,110 --> 00:36:19,820
even when everyone has great intentions

00:36:17,120 --> 00:36:21,920
email thread and pull requests can take

00:36:19,820 --> 00:36:26,060
longer to wrap up right then we might

00:36:21,920 --> 00:36:27,860
like and I say sometimes prompts off

00:36:26,060 --> 00:36:31,790
line you know to your buddies via

00:36:27,860 --> 00:36:33,860
slacker text or phone right can keep

00:36:31,790 --> 00:36:36,470
things moving okay I really just need a

00:36:33,860 --> 00:36:37,850
plus one on this thing I want you to

00:36:36,470 --> 00:36:39,590
take a look at it I usually I think it's

00:36:37,850 --> 00:36:42,550
important can you get this to me by

00:36:39,590 --> 00:36:42,550
tomorrow right

00:36:42,670 --> 00:36:48,380
you know worst case we do you know there

00:36:45,950 --> 00:36:50,960
is lazy consensus it's not what you want

00:36:48,380 --> 00:36:53,570
to do but sometimes you know yet the the

00:36:50,960 --> 00:36:56,510
project can't suffer and become static

00:36:53,570 --> 00:36:59,350
for want of active participation by the

00:36:56,510 --> 00:36:59,350
team all the time

00:37:00,940 --> 00:37:05,210
again you want to you want your team to

00:37:03,590 --> 00:37:07,760
become you know engaged in everything

00:37:05,210 --> 00:37:09,680
that's being worked on by everybody or

00:37:07,760 --> 00:37:13,340
at least paying attention activity

00:37:09,680 --> 00:37:16,490
renews interest try to you know when you

00:37:13,340 --> 00:37:20,300
talk about the project on the list or as

00:37:16,490 --> 00:37:22,190
you advocate for it as you try to you

00:37:20,300 --> 00:37:25,250
know bring people in keep the focus on

00:37:22,190 --> 00:37:26,780
short term milestones medium term

00:37:25,250 --> 00:37:28,880
milestones and long term milestones

00:37:26,780 --> 00:37:30,500
right here's what we're doing now here's

00:37:28,880 --> 00:37:34,310
what we're doing next here's where we're

00:37:30,500 --> 00:37:36,680
going and get you know get buy-in on on

00:37:34,310 --> 00:37:38,870
those on those kind of ideas which you

00:37:36,680 --> 00:37:40,220
can then tie back to specific issues

00:37:38,870 --> 00:37:43,370
that are gonna that are going to make it

00:37:40,220 --> 00:37:47,060
happen and always be recruiting for new

00:37:43,370 --> 00:37:50,300
participants of going to conferences

00:37:47,060 --> 00:37:52,760
like capatch econ and just talking to

00:37:50,300 --> 00:37:55,250
people about what they're working on is

00:37:52,760 --> 00:37:57,150
where you know some of

00:37:55,250 --> 00:37:58,590
participation that I've been able to

00:37:57,150 --> 00:38:01,650
kind of drive for the project has come

00:37:58,590 --> 00:38:03,720
through in-person meetings sometimes it

00:38:01,650 --> 00:38:06,300
takes more than reading the front page

00:38:03,720 --> 00:38:08,100
of a website to kind of get get someone

00:38:06,300 --> 00:38:10,320
really interested in something you have

00:38:08,100 --> 00:38:13,770
to be willing to talk them through it

00:38:10,320 --> 00:38:15,600
and spend time listening to all of their

00:38:13,770 --> 00:38:20,700
questions and concerns in order to

00:38:15,600 --> 00:38:21,840
actually build a strong advocate so the

00:38:20,700 --> 00:38:23,460
issue of coordination and this about

00:38:21,840 --> 00:38:27,180
like how is the work actually getting

00:38:23,460 --> 00:38:27,930
done day to day there could be work

00:38:27,180 --> 00:38:31,590
getting done

00:38:27,930 --> 00:38:34,460
there can be participation what about if

00:38:31,590 --> 00:38:37,560
people are mostly working in silos or

00:38:34,460 --> 00:38:39,180
even if they happen to be working at

00:38:37,560 --> 00:38:42,600
cross-purpose at a certain juncture

00:38:39,180 --> 00:38:46,020
right or if people are more focused on

00:38:42,600 --> 00:38:51,110
getting code merged fast than getting

00:38:46,020 --> 00:38:54,290
good code merged first on the first try

00:38:51,110 --> 00:38:56,490
this comes down to integration so I

00:38:54,290 --> 00:38:59,670
would suggest like to try to break out

00:38:56,490 --> 00:39:02,430
of those patterns when they come up try

00:38:59,670 --> 00:39:05,040
to reach a quorum among the list right

00:39:02,430 --> 00:39:07,110
about where to focus next you can start

00:39:05,040 --> 00:39:09,960
with the upcoming release what are we

00:39:07,110 --> 00:39:11,550
trying to do in the upcoming release you

00:39:09,960 --> 00:39:14,340
can create an agile board if you're

00:39:11,550 --> 00:39:16,140
using JIRA you can order your backlog

00:39:14,340 --> 00:39:18,210
when someone asks what to do next

00:39:16,140 --> 00:39:21,120
write the default answer can be go to go

00:39:18,210 --> 00:39:22,860
look at the backlog and you know group

00:39:21,120 --> 00:39:26,520
group issues into upcoming release

00:39:22,860 --> 00:39:29,220
sprints even a couple releases out also

00:39:26,520 --> 00:39:32,610
as a team try to assess the difficulty

00:39:29,220 --> 00:39:34,770
of new features and you know debate the

00:39:32,610 --> 00:39:36,210
assumptions behind why those features

00:39:34,770 --> 00:39:39,030
are needed in how they would be assumed

00:39:36,210 --> 00:39:41,310
to work and the implications of taking

00:39:39,030 --> 00:39:43,380
on those problems actually before you

00:39:41,310 --> 00:39:46,020
start coding so some projects will use

00:39:43,380 --> 00:39:49,890
design proposals on confluence to do

00:39:46,020 --> 00:39:52,410
this and then use the mailing list to

00:39:49,890 --> 00:39:54,480
actually kind of explicitly express the

00:39:52,410 --> 00:39:56,940
intent of the of the team to follow

00:39:54,480 --> 00:39:59,240
those design proposals in debate where

00:39:56,940 --> 00:39:59,240
they're lacking

00:40:00,150 --> 00:40:04,690
so I think a fully integrated

00:40:02,260 --> 00:40:08,230
coordinating team right the implications

00:40:04,690 --> 00:40:09,670
of every feature request discusses is

00:40:08,230 --> 00:40:11,950
discussed and there's an appropriate

00:40:09,670 --> 00:40:16,150
kind of implementation and testing plan

00:40:11,950 --> 00:40:17,950
going into going into the work a fully

00:40:16,150 --> 00:40:20,920
integrated team would treat every new

00:40:17,950 --> 00:40:22,630
feature as an evaluation of the

00:40:20,920 --> 00:40:24,640
pre-existing patterns and the project

00:40:22,630 --> 00:40:28,000
write or think about them as an

00:40:24,640 --> 00:40:31,180
opportunity to implement something a

00:40:28,000 --> 00:40:32,980
little fresh or little new but using a

00:40:31,180 --> 00:40:35,080
design that's already been carefully

00:40:32,980 --> 00:40:36,820
considered not just treat each new

00:40:35,080 --> 00:40:38,950
feature as something we're going to bolt

00:40:36,820 --> 00:40:43,030
on to the side it's going to be added in

00:40:38,950 --> 00:40:45,580
a reasoned way a reasoned way on which

00:40:43,030 --> 00:40:47,710
there's hopefully a consensus of the of

00:40:45,580 --> 00:40:52,840
the team that cares about specifically

00:40:47,710 --> 00:40:54,790
about that part of the codebase so then

00:40:52,840 --> 00:40:59,410
you know planning so how are you

00:40:54,790 --> 00:41:01,060
actually deciding what to do some some

00:40:59,410 --> 00:41:02,770
you know you might just be doing random

00:41:01,060 --> 00:41:05,440
planning so code submissions are coming

00:41:02,770 --> 00:41:06,849
in at Hauk sometimes they aren't

00:41:05,440 --> 00:41:10,630
associated with tickets where the

00:41:06,849 --> 00:41:12,070
tickets are or low-quality and you know

00:41:10,630 --> 00:41:13,869
projects in this mode you can look at

00:41:12,070 --> 00:41:15,400
the email threads and they'll you know

00:41:13,869 --> 00:41:17,530
be debating like why things are the way

00:41:15,400 --> 00:41:21,130
they are right or whether they ought to

00:41:17,530 --> 00:41:23,680
change I think some of this comes back

00:41:21,130 --> 00:41:29,200
to having having built consensus and

00:41:23,680 --> 00:41:30,940
having created good documentation so a

00:41:29,200 --> 00:41:32,800
team that's planning and a tactical

00:41:30,940 --> 00:41:34,540
sense not in a random sense will be

00:41:32,800 --> 00:41:36,400
collaborating together to get tickets

00:41:34,540 --> 00:41:39,220
resolved and to get releases out the

00:41:36,400 --> 00:41:41,500
door the decisions will be being made on

00:41:39,220 --> 00:41:42,760
the list that's good but and then

00:41:41,500 --> 00:41:45,520
they're written up and shift into

00:41:42,760 --> 00:41:47,200
persistent reference materials right so

00:41:45,520 --> 00:41:49,450
then when a question comes up on the

00:41:47,200 --> 00:41:52,660
list that's maybe rehashing something

00:41:49,450 --> 00:41:54,400
that's already been addressed sharing

00:41:52,660 --> 00:41:59,349
links back back to that material is

00:41:54,400 --> 00:42:01,270
perfectly suitable answer right yeah and

00:41:59,349 --> 00:42:02,650
I think you know the tickets need to

00:42:01,270 --> 00:42:04,450
contain enough details of the work to

00:42:02,650 --> 00:42:06,040
get done that they can potentially be

00:42:04,450 --> 00:42:09,010
picked up and attempted by anyone who's

00:42:06,040 --> 00:42:10,450
familiar with the project not just by

00:42:09,010 --> 00:42:12,280
the person who have the idea about the

00:42:10,450 --> 00:42:16,850
change they wanted to make

00:42:12,280 --> 00:42:19,040
um but really your team as a whole wants

00:42:16,850 --> 00:42:21,980
to be in a strategic mindset not just

00:42:19,040 --> 00:42:24,320
the tactical mindset so this comes down

00:42:21,980 --> 00:42:26,690
to you want to be planning your sprint

00:42:24,320 --> 00:42:29,480
objectives and your release dates in

00:42:26,690 --> 00:42:30,680
advance because of specific reasons

00:42:29,480 --> 00:42:34,720
because the team has decided that a

00:42:30,680 --> 00:42:38,030
specific aspect of of development is

00:42:34,720 --> 00:42:40,010
important to them and the the other

00:42:38,030 --> 00:42:44,390
stakeholders that are but that they're

00:42:40,010 --> 00:42:46,510
talking to and then you want to be doing

00:42:44,390 --> 00:42:49,660
your releases in a kind of a more

00:42:46,510 --> 00:42:52,220
strategic major/minor or maintenance

00:42:49,660 --> 00:42:54,430
type of way right depending on the

00:42:52,220 --> 00:42:57,950
degree of change that's needed to

00:42:54,430 --> 00:43:00,500
implement them and based on whether

00:42:57,950 --> 00:43:05,630
there's breaking changes - and how big

00:43:00,500 --> 00:43:07,490
those breaking changes will be and you

00:43:05,630 --> 00:43:09,440
want to be get to the point where the

00:43:07,490 --> 00:43:12,320
stuff that gets merged is getting merged

00:43:09,440 --> 00:43:15,800
as good quality right not just as a

00:43:12,320 --> 00:43:17,330
first take in the early stages first

00:43:15,800 --> 00:43:18,950
takes on stuff get merged but ultimately

00:43:17,330 --> 00:43:22,210
you want to raise the threshold of

00:43:18,950 --> 00:43:24,340
quality across the board and hold all

00:43:22,210 --> 00:43:26,240
contributor pull request to a

00:43:24,340 --> 00:43:30,530
universally understood kind of high

00:43:26,240 --> 00:43:34,250
standard so experience and this you know

00:43:30,530 --> 00:43:37,670
this is I think one of the experience I

00:43:34,250 --> 00:43:40,250
mean specifically with the Apache way so

00:43:37,670 --> 00:43:42,650
I didn't know anything about open source

00:43:40,250 --> 00:43:45,320
or the Apache way when I got here right

00:43:42,650 --> 00:43:46,340
maybe your team has great coders but

00:43:45,320 --> 00:43:50,270
they don't know anything about open

00:43:46,340 --> 00:43:52,010
source there's a learning that has to

00:43:50,270 --> 00:43:54,130
take place and the core team is going to

00:43:52,010 --> 00:43:58,430
have to teach them you know patiently of

00:43:54,130 --> 00:44:01,160
both in public settings and in private

00:43:58,430 --> 00:44:03,250
settings coaching like the skip we just

00:44:01,160 --> 00:44:03,250
saw

00:44:03,300 --> 00:44:07,860
um it's very normal and positive for

00:44:06,330 --> 00:44:10,500
learning moments about the Apache way to

00:44:07,860 --> 00:44:12,720
occur on the list but some messages are

00:44:10,500 --> 00:44:16,200
best delivered and or maybe best

00:44:12,720 --> 00:44:17,580
received without an audience that's you

00:44:16,200 --> 00:44:20,370
know kind of a thing to keep in mind

00:44:17,580 --> 00:44:22,680
when you think about scolding somebody

00:44:20,370 --> 00:44:34,910
is maybe you could do that in a way that

00:44:22,680 --> 00:44:36,990
would accompany in the project right so

00:44:34,910 --> 00:44:38,790
you're going to have some homegrown

00:44:36,990 --> 00:44:41,490
talent but also you know add people to

00:44:38,790 --> 00:44:44,280
the pp and see who already understand

00:44:41,490 --> 00:44:46,110
the Apache way you know even if they

00:44:44,280 --> 00:44:48,240
aren't going to commit as heavily as the

00:44:46,110 --> 00:44:48,870
as the team you already have because

00:44:48,240 --> 00:44:51,090
they're going to bring that

00:44:48,870 --> 00:44:54,780
institutional knowledge that experience

00:44:51,090 --> 00:44:57,210
and that mentorship to the group and you

00:44:54,780 --> 00:44:58,800
know as a working on a project that's

00:44:57,210 --> 00:45:01,320
made quite a number of missteps and

00:44:58,800 --> 00:45:04,020
mishaps the number of them will shrink

00:45:01,320 --> 00:45:07,170
over time as the people that are

00:45:04,020 --> 00:45:09,480
observing and participating learn and

00:45:07,170 --> 00:45:11,190
start to emulate the best practices from

00:45:09,480 --> 00:45:15,090
from the experienced folks that you

00:45:11,190 --> 00:45:17,580
bring into the community I think we have

00:45:15,090 --> 00:45:19,830
a little bit of time for questions and I

00:45:17,580 --> 00:45:22,710
think probably many of these topics will

00:45:19,830 --> 00:45:26,820
be fair gain in the panel that's coming

00:45:22,710 --> 00:45:29,130
up next so feel free to hit us with them

00:45:26,820 --> 00:45:32,630
and you'll get more opinions than just

00:45:29,130 --> 00:45:35,760
my own which is great we collaborate

00:45:32,630 --> 00:45:37,050
this is the link to my website where the

00:45:35,760 --> 00:45:41,670
slides will be going up in my email

00:45:37,050 --> 00:45:43,920
address and so does anyone have any

00:45:41,670 --> 00:45:47,150
media questions or comments or thoughts

00:45:43,920 --> 00:45:49,830
on anything that I just talked about or

00:45:47,150 --> 00:45:51,150
about the you know about my experience

00:45:49,830 --> 00:45:53,840
going through the incubation more

00:45:51,150 --> 00:45:53,840
generally

00:46:09,900 --> 00:46:17,070
thanks I appreciate it so one one so to

00:46:14,580 --> 00:46:19,650
dress that one thing you didn't address

00:46:17,070 --> 00:46:23,780
if I just saw in a computer for before

00:46:19,650 --> 00:46:27,540
is we have an official unofficial

00:46:23,780 --> 00:46:29,130
maturity model or project that the

00:46:27,540 --> 00:46:31,830
incubator is not mandated in the

00:46:29,130 --> 00:46:33,840
incubator but essentially is a specific

00:46:31,830 --> 00:46:36,440
set of criteria you have a special of

00:46:33,840 --> 00:46:39,960
evidence of the code open so like check

00:46:36,440 --> 00:46:43,440
rat automated so there is a model for

00:46:39,960 --> 00:46:46,170
that that is important that you know

00:46:43,440 --> 00:46:49,340
it's one guideline yes that is certainly

00:46:46,170 --> 00:46:49,340
a way to express that

00:46:49,580 --> 00:46:53,990
and I had considered like getting all

00:46:52,130 --> 00:46:55,520
the different codes and kind of tying it

00:46:53,990 --> 00:46:58,460
on here but everyone should just look at

00:46:55,520 --> 00:46:59,900
and read the whole thing on streams

00:46:58,460 --> 00:47:02,120
we're using it as essentially our

00:46:59,900 --> 00:47:03,620
guideline to whether we're ready to

00:47:02,120 --> 00:47:06,020
graduate and we have a couple issues

00:47:03,620 --> 00:47:07,310
left where we're still working through

00:47:06,020 --> 00:47:28,430
to make sure that we have a checkbox

00:47:07,310 --> 00:47:30,230
everywhere correct so the question is

00:47:28,430 --> 00:47:31,970
how does my personal experience writing

00:47:30,230 --> 00:47:35,090
commercial software differ from open

00:47:31,970 --> 00:47:37,790
source so I kept writing commercial

00:47:35,090 --> 00:47:41,240
software all this time to write so my

00:47:37,790 --> 00:47:47,060
company uses Apache streams among other

00:47:41,240 --> 00:47:50,030
technologies to do what we do and it's

00:47:47,060 --> 00:47:54,530
very helpful I think to have parts of

00:47:50,030 --> 00:47:59,450
what you do that are not maintained by

00:47:54,530 --> 00:48:01,520
you solely right so if you think about

00:47:59,450 --> 00:48:03,110
the hundreds of thousands of lines of

00:48:01,520 --> 00:48:04,820
code that it takes to actually stand up

00:48:03,110 --> 00:48:07,850
an enterprise software or SAS

00:48:04,820 --> 00:48:10,490
application really you're better off

00:48:07,850 --> 00:48:13,370
the less of that software is in your own

00:48:10,490 --> 00:48:17,050
repo subject to your own time

00:48:13,370 --> 00:48:17,050
constraints or subject to your own

00:48:17,950 --> 00:48:23,090
inability to focus on things that

00:48:20,150 --> 00:48:26,870
actually are important in the for the

00:48:23,090 --> 00:48:29,150
maturity of the software stack so my

00:48:26,870 --> 00:48:32,360
take has become the more open source

00:48:29,150 --> 00:48:34,760
that you use in your project and your in

00:48:32,360 --> 00:48:37,490
your commercial endeavor the more

00:48:34,760 --> 00:48:39,950
quickly you're able to move all things

00:48:37,490 --> 00:48:43,910
considered and the less technical risk

00:48:39,950 --> 00:48:48,440
that you have of having bugs not be

00:48:43,910 --> 00:48:52,430
found of having performance issues that

00:48:48,440 --> 00:48:55,040
show up that um you didn't anticipate I

00:48:52,430 --> 00:48:57,500
really strive to use an open-source

00:48:55,040 --> 00:48:58,910
package first actually I strive to use

00:48:57,500 --> 00:49:01,460
an Apache package first if at all

00:48:58,910 --> 00:49:03,200
possible for those reasons because I

00:49:01,460 --> 00:49:05,540
just I trust that what I mean

00:49:03,200 --> 00:49:07,850
is gone through a certain degree of

00:49:05,540 --> 00:49:09,580
quality control as it was being built

00:49:07,850 --> 00:49:14,210
and then that it's subject to ongoing

00:49:09,580 --> 00:49:15,680
maintenance and and debate about in

00:49:14,210 --> 00:49:22,730
anticipation of where the project needs

00:49:15,680 --> 00:49:24,620
to go I'd say 99% open source code 1%

00:49:22,730 --> 00:49:29,240
and house code is probably a good ratio

00:49:24,620 --> 00:49:32,420
to strive for and if you write code in

00:49:29,240 --> 00:49:34,970
house the quicker you can push it into

00:49:32,420 --> 00:49:36,170
the into an open source project provided

00:49:34,970 --> 00:49:38,000
that it fits there right and that it's

00:49:36,170 --> 00:49:41,030
already using the same patterns and

00:49:38,000 --> 00:49:47,650
libraries the better all things

00:49:41,030 --> 00:49:52,650
considered okay thank you very much

00:49:47,650 --> 00:49:52,650

YouTube URL: https://www.youtube.com/watch?v=E9A54x6af8o


