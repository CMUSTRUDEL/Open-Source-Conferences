Title: Success Story: Bring your VMware Infrastructure to the next level... -  Bousquet & Gaudreault
Publication date: 2014-05-07
Playlist: CloudStack Collaboration Conference North America 2014
Description: 
	CloudStack Collaboration Conference North America 2014
Captions: 
	00:00:00,000 --> 00:00:05,100
alright thank you thank you for joining

00:00:02,429 --> 00:00:09,900
this session today so what's interesting

00:00:05,100 --> 00:00:11,880
hours for our session today is that it's

00:00:09,900 --> 00:00:14,480
not really a presentation about cloud

00:00:11,880 --> 00:00:17,820
apps it's a presentation about a

00:00:14,480 --> 00:00:20,460
customer of ours customer name Radel

00:00:17,820 --> 00:00:23,279
point so that's why we are two people in

00:00:20,460 --> 00:00:25,260
front today so I'm francois guillot and

00:00:23,279 --> 00:00:31,320
i'll present you Francois busca from the

00:00:25,260 --> 00:00:33,870
radial point so like Sebastian told it's

00:00:31,320 --> 00:00:37,530
a success story so we won't go into the

00:00:33,870 --> 00:00:41,940
technical details we'll try to keep it

00:00:37,530 --> 00:00:43,469
at a I'll I level so if you have

00:00:41,940 --> 00:00:47,700
questions we can address that later on

00:00:43,469 --> 00:00:49,860
so before going into the details that

00:00:47,700 --> 00:00:52,739
let me introduce you to two cloud apps

00:00:49,860 --> 00:00:56,510
what we're doing so we specialize in

00:00:52,739 --> 00:00:59,760
building supporting and managing cloud

00:00:56,510 --> 00:01:02,640
computing platform so either CloudStack

00:00:59,760 --> 00:01:06,560
cloud platform or we also have customers

00:01:02,640 --> 00:01:11,220
running on AWS and we manage those

00:01:06,560 --> 00:01:13,590
deployments on a 24-7 basis so we we

00:01:11,220 --> 00:01:17,159
manage the infrastructure we manage the

00:01:13,590 --> 00:01:20,729
cloudstack services we manage the VMS up

00:01:17,159 --> 00:01:24,060
to the application level we have also

00:01:20,729 --> 00:01:26,610
some some good expertise on a TCS so

00:01:24,060 --> 00:01:28,970
people familiar with net scalars we have

00:01:26,610 --> 00:01:31,170
almost 12 years of experience with those

00:01:28,970 --> 00:01:33,030
actually we started working with

00:01:31,170 --> 00:01:36,720
netscaler even before they got bought by

00:01:33,030 --> 00:01:40,460
Citrix we also have an expertise on

00:01:36,720 --> 00:01:42,630
end-user experience management and

00:01:40,460 --> 00:01:47,820
application performance management as

00:01:42,630 --> 00:01:51,689
well we have customers in Canada us and

00:01:47,820 --> 00:01:55,049
E and E I cannot add the a we don't have

00:01:51,689 --> 00:01:58,049
any customers in Asia yet but we're

00:01:55,049 --> 00:02:00,829
working on it and also it's important to

00:01:58,049 --> 00:02:03,869
add that we did some some cool

00:02:00,829 --> 00:02:06,000
contribution to cloth sack we do

00:02:03,869 --> 00:02:09,000
contribute to the project I have some

00:02:06,000 --> 00:02:12,480
colleagues Syed basically it did the

00:02:09,000 --> 00:02:13,340
netscaler ssl offload integration so

00:02:12,480 --> 00:02:16,700
we'll present

00:02:13,340 --> 00:02:19,010
I think today or tomorrow we have with

00:02:16,700 --> 00:02:21,920
Stephens that basically work on palo

00:02:19,010 --> 00:02:24,290
alto firewalls integration you cannot

00:02:21,920 --> 00:02:27,349
you cannot be there today but sad will

00:02:24,290 --> 00:02:30,410
present that later today and we have

00:02:27,349 --> 00:02:34,250
original worked on CloudStack deployment

00:02:30,410 --> 00:02:36,769
automation which chef and we present

00:02:34,250 --> 00:02:39,440
that later today as well and about

00:02:36,769 --> 00:02:43,910
myself well my contributions are more

00:02:39,440 --> 00:02:45,739
bugs related so I'm good filing bugs and

00:02:43,910 --> 00:02:48,140
I'm good like I'm posting on mailing

00:02:45,739 --> 00:02:51,920
this a lot so you might you might seen

00:02:48,140 --> 00:02:54,769
my name quite often so let me give you a

00:02:51,920 --> 00:03:00,110
little context before ending off to the

00:02:54,769 --> 00:03:02,959
other Francois about this this talk with

00:03:00,110 --> 00:03:05,299
this project so a year ago radial point

00:03:02,959 --> 00:03:08,360
came to us and they said we need pass

00:03:05,299 --> 00:03:12,829
basically so we were like sure customer

00:03:08,360 --> 00:03:15,470
but why why you guys need pass so we

00:03:12,829 --> 00:03:17,350
want to better understand their needs so

00:03:15,470 --> 00:03:20,000
we went there with the workshops

00:03:17,350 --> 00:03:23,329
basically we look at their processes we

00:03:20,000 --> 00:03:25,609
look at all the devs were working Jairaj

00:03:23,329 --> 00:03:28,639
cetera and then at the end we came back

00:03:25,609 --> 00:03:30,470
with a gap analysis report with bunch of

00:03:28,639 --> 00:03:33,920
requirements there that you know where

00:03:30,470 --> 00:03:37,340
radio point shall look to evolve towards

00:03:33,920 --> 00:03:39,410
pass but the report world was primarily

00:03:37,340 --> 00:03:41,599
saying guys well you need infrastructure

00:03:39,410 --> 00:03:44,569
first you have to focus on

00:03:41,599 --> 00:03:48,079
infrastructure so we did we did a small

00:03:44,569 --> 00:03:50,269
POC with class tag there nothing really

00:03:48,079 --> 00:03:53,419
fancy we started with the you know one

00:03:50,269 --> 00:03:56,060
vm for class that one vm for the

00:03:53,419 --> 00:03:59,150
secondary storage and if a server we

00:03:56,060 --> 00:04:03,680
created a data center within their

00:03:59,150 --> 00:04:05,930
existing vmware stack and we dropped in

00:04:03,680 --> 00:04:08,690
to Viper visors and we we started from

00:04:05,930 --> 00:04:13,940
there so today what's what's interesting

00:04:08,690 --> 00:04:16,060
is we will have a customer experience

00:04:13,940 --> 00:04:19,160
like a real customer experience about

00:04:16,060 --> 00:04:23,539
the cloudstack deployment ow cloudstack

00:04:19,160 --> 00:04:25,860
basically changed the way that the

00:04:23,539 --> 00:04:29,139
business is doing development

00:04:25,860 --> 00:04:31,569
so I'll end it off to Francois which

00:04:29,139 --> 00:04:37,900
will describe his experience with the

00:04:31,569 --> 00:04:39,580
deployment good afternoon everyone so

00:04:37,900 --> 00:04:42,400
let me just talk quickly about a radial

00:04:39,580 --> 00:04:44,800
point so we're a the development shop

00:04:42,400 --> 00:04:46,270
were more than 100 employees we have a

00:04:44,800 --> 00:04:49,090
strong innovation culture inside the

00:04:46,270 --> 00:04:53,020
company we do quarterly hackathons to

00:04:49,090 --> 00:04:56,800
try to develop new stuff hang on on new

00:04:53,020 --> 00:05:00,699
technology our our existing product is

00:04:56,800 --> 00:05:02,919
mainly a technical support platform that

00:05:00,699 --> 00:05:05,620
we resell through partners there is

00:05:02,919 --> 00:05:08,740
peace and retailers mostly so we don't

00:05:05,620 --> 00:05:11,620
we don't we outsource the labor we focus

00:05:08,740 --> 00:05:14,469
on the software itself and it's it's

00:05:11,620 --> 00:05:17,909
been deployed as a SAS offering to in

00:05:14,469 --> 00:05:21,550
the end million subscribers and we also

00:05:17,909 --> 00:05:25,750
read more recently looked into a new

00:05:21,550 --> 00:05:27,879
product we're basically basically it's

00:05:25,750 --> 00:05:31,000
not really basic to do but we're

00:05:27,879 --> 00:05:35,229
developing a search engine for tech

00:05:31,000 --> 00:05:38,289
support and also we have sdk for to help

00:05:35,229 --> 00:05:40,960
enable tech support channels on mobile

00:05:38,289 --> 00:05:42,430
apps we're very open source friendly

00:05:40,960 --> 00:05:45,669
company so we a lot of open source

00:05:42,430 --> 00:05:50,529
technologies but our core infrastructure

00:05:45,669 --> 00:05:51,879
is is is mostly enterprise and by

00:05:50,529 --> 00:05:54,580
enterprise I mean it's it's a strong

00:05:51,879 --> 00:05:56,650
VMware a platform that we use it's a

00:05:54,580 --> 00:05:59,589
mixed environment we're almost fully

00:05:56,650 --> 00:06:01,870
virtualized and we use a whole bunch of

00:05:59,589 --> 00:06:04,779
popular technologies and we also based

00:06:01,870 --> 00:06:08,710
in Montreal like like Claude ups so our

00:06:04,779 --> 00:06:11,050
environment we have three datacenters to

00:06:08,710 --> 00:06:13,050
in Canada Montreal and Toronto and we

00:06:11,050 --> 00:06:16,779
also have our head office for

00:06:13,050 --> 00:06:18,460
development and QA environments after

00:06:16,779 --> 00:06:20,650
the two production data center one is

00:06:18,460 --> 00:06:24,969
active when it's stand by there they're

00:06:20,650 --> 00:06:27,490
almost identical that 99% it's a few

00:06:24,969 --> 00:06:29,650
little details we do not have prisons in

00:06:27,490 --> 00:06:32,529
us anymore the reason behind that is

00:06:29,650 --> 00:06:36,250
some of our customers don't allow us to

00:06:32,529 --> 00:06:38,520
put the data on us so for this reason it

00:06:36,250 --> 00:06:41,759
kind of complicates our our

00:06:38,520 --> 00:06:44,490
our our way to the cloud let's say so

00:06:41,759 --> 00:06:46,710
but recently we found a workaround

00:06:44,490 --> 00:06:49,319
around that we use the Amazon Ireland

00:06:46,710 --> 00:06:51,539
data center at their Center to to start

00:06:49,319 --> 00:06:53,280
a project to migrate our arrest and by

00:06:51,539 --> 00:06:56,280
data center Roberts the disaster

00:06:53,280 --> 00:06:58,860
recovery 2222 to the public cloud so

00:06:56,280 --> 00:07:00,449
we're aiming tourism hybrid model where

00:06:58,860 --> 00:07:03,840
we have both the private and in public

00:07:00,449 --> 00:07:05,550
cloud so as I said earlier we use VMware

00:07:03,840 --> 00:07:07,500
for virtualization it's been something

00:07:05,550 --> 00:07:10,139
we've been using for more than five

00:07:07,500 --> 00:07:11,729
years it's been very stable for us we're

00:07:10,139 --> 00:07:14,970
very happy about that except for the

00:07:11,729 --> 00:07:17,400
license costs and and we also use cisco

00:07:14,970 --> 00:07:20,099
ucs just to give you a context on on

00:07:17,400 --> 00:07:22,530
what we're using in terms of load we're

00:07:20,099 --> 00:07:25,770
speaking about more than 500 VMs or cut

00:07:22,530 --> 00:07:29,099
across three sites so my role is I'm the

00:07:25,770 --> 00:07:30,930
manager of the the NOC team so the NOC

00:07:29,099 --> 00:07:33,569
team is not really a NOC team in the

00:07:30,930 --> 00:07:35,039
sense that it's more it's more an

00:07:33,569 --> 00:07:39,240
infrastructure team because we manage

00:07:35,039 --> 00:07:41,370
both we manage all networks servers OS

00:07:39,240 --> 00:07:43,560
Windows Linux virtualization storage

00:07:41,370 --> 00:07:45,419
load balancers etc etc everything

00:07:43,560 --> 00:07:47,669
infrastructure-related we manage it

00:07:45,419 --> 00:07:50,460
which helps us troubleshoot things as

00:07:47,669 --> 00:07:54,990
you have access to everything so first

00:07:50,460 --> 00:07:57,090
ah the problems so a year ago we were in

00:07:54,990 --> 00:08:00,719
in conversation with cloud apps to get

00:07:57,090 --> 00:08:05,130
get more to try to improve our our the

00:08:00,719 --> 00:08:08,099
way we manage technology and develop so

00:08:05,130 --> 00:08:09,120
we had a lot of problems first one of

00:08:08,099 --> 00:08:10,979
the problem is that there was a lot of

00:08:09,120 --> 00:08:12,830
manual stuff even though we automated a

00:08:10,979 --> 00:08:15,419
lot of things in the past year is like

00:08:12,830 --> 00:08:17,669
application builds everything was

00:08:15,419 --> 00:08:20,130
packaged into RPM that was a great a

00:08:17,669 --> 00:08:22,590
great start but we also but we had a

00:08:20,130 --> 00:08:24,419
bunch of issues regarding the execution

00:08:22,590 --> 00:08:27,060
of and the installation the creation of

00:08:24,419 --> 00:08:28,949
environments and by an environment I

00:08:27,060 --> 00:08:30,630
mean a bunch of virtual machines with

00:08:28,949 --> 00:08:33,089
applications configure all linked

00:08:30,630 --> 00:08:36,419
together and and with with proper data

00:08:33,089 --> 00:08:38,520
so and one of the biggest issue we had

00:08:36,419 --> 00:08:39,959
was just four simple server creation so

00:08:38,520 --> 00:08:41,880
you have a team of infrastructure that

00:08:39,959 --> 00:08:43,200
managed a virtual environment and you

00:08:41,880 --> 00:08:45,240
have a bunch of development teams

00:08:43,200 --> 00:08:48,270
internally that are all our customers

00:08:45,240 --> 00:08:50,100
that every time they need machines the

00:08:48,270 --> 00:08:52,410
extent they open a ticket and they go

00:08:50,100 --> 00:08:55,139
through this somewhat complex work

00:08:52,410 --> 00:08:57,209
hello in order to get there one or many

00:08:55,139 --> 00:08:59,100
virtual machines that that workflow

00:08:57,209 --> 00:09:01,379
involves reviewing the machine getting

00:08:59,100 --> 00:09:03,420
approval the creation of those machine

00:09:01,379 --> 00:09:05,970
at least that the whole creation part of

00:09:03,420 --> 00:09:09,360
machine was somewhat automated but in

00:09:05,970 --> 00:09:11,699
the end it was it was taking day

00:09:09,360 --> 00:09:15,060
sometimes depending on the requirements

00:09:11,699 --> 00:09:18,209
so so this whole process was was was was

00:09:15,060 --> 00:09:21,120
long it was costly and as a consequence

00:09:18,209 --> 00:09:23,370
is it was impacting our velocity and it

00:09:21,120 --> 00:09:24,870
was increasing all the development risks

00:09:23,370 --> 00:09:27,600
because it was intruding delays all the

00:09:24,870 --> 00:09:29,370
time so in terms of solutions what we

00:09:27,600 --> 00:09:31,980
were what we looked for first of all

00:09:29,370 --> 00:09:35,519
automation I hang it just cannot say to

00:09:31,980 --> 00:09:37,470
too much and also what are the key

00:09:35,519 --> 00:09:38,790
component to do automations is to what

00:09:37,470 --> 00:09:42,329
was was for us to have an infrastructure

00:09:38,790 --> 00:09:45,240
as a service platform and that that

00:09:42,329 --> 00:09:47,279
that's where cloud ups really made us a

00:09:45,240 --> 00:09:51,980
good recommendation by suggesting us to

00:09:47,279 --> 00:09:55,079
use CloudStack so last spring we did a

00:09:51,980 --> 00:09:58,170
proof of concept with CloudStack in

00:09:55,079 --> 00:10:01,230
order to understand what it meant for us

00:09:58,170 --> 00:10:03,839
in the context of our infrastructure so

00:10:01,230 --> 00:10:06,149
we were skeptic at the beginning to be

00:10:03,839 --> 00:10:08,130
to be honest with you we are guys that

00:10:06,149 --> 00:10:10,199
are used to manage VMware and I have

00:10:08,130 --> 00:10:12,149
access to all those advanced features of

00:10:10,199 --> 00:10:14,790
VMware that's um what's a pretty good

00:10:12,149 --> 00:10:16,589
environment is very stable then it's

00:10:14,790 --> 00:10:18,180
very cool and then we were just at the

00:10:16,589 --> 00:10:20,610
first look we had a close like was uh

00:10:18,180 --> 00:10:25,790
just a GUI on top of VMware for users

00:10:20,610 --> 00:10:28,439
but as much as we were learning it we we

00:10:25,790 --> 00:10:30,089
we found some advantages but other

00:10:28,439 --> 00:10:32,180
issues we were we're seeing with class I

00:10:30,089 --> 00:10:34,980
got a big inge was about resource usage

00:10:32,180 --> 00:10:36,870
how can we manage the resource that we

00:10:34,980 --> 00:10:38,790
can give to people people would just

00:10:36,870 --> 00:10:41,250
create machines if they have access to

00:10:38,790 --> 00:10:43,980
keep training resources without cleaning

00:10:41,250 --> 00:10:46,800
them up and also we were concerned about

00:10:43,980 --> 00:10:49,920
the fact that some some some advanced

00:10:46,800 --> 00:10:54,089
features of VMware like at that time DRS

00:10:49,920 --> 00:10:56,970
storage DRS we're not like supported or

00:10:54,089 --> 00:10:58,680
completely supported so we were we were

00:10:56,970 --> 00:11:01,500
used to using those features in order to

00:10:58,680 --> 00:11:03,990
be able to do some some some cool stuff

00:11:01,500 --> 00:11:06,270
and we were asking questions about that

00:11:03,990 --> 00:11:08,490
and at one point we also try to

00:11:06,270 --> 00:11:11,250
consider vcloud is you got a good

00:11:08,490 --> 00:11:13,110
alternative for us on that one it was

00:11:11,250 --> 00:11:15,060
pretty quick to realize that in terms of

00:11:13,110 --> 00:11:16,350
cost and complexity you just wasn't

00:11:15,060 --> 00:11:18,330
worth it for what we were trying to do

00:11:16,350 --> 00:11:21,570
with it so we kind of put that aside

00:11:18,330 --> 00:11:24,480
quickly so we did the POC it went pretty

00:11:21,570 --> 00:11:26,130
well I mean we were able to quickly get

00:11:24,480 --> 00:11:29,450
something up and running and start

00:11:26,130 --> 00:11:31,440
experimenting with it and in the end we

00:11:29,450 --> 00:11:33,660
install the cloud stack for all our

00:11:31,440 --> 00:11:36,390
different environments in during the

00:11:33,660 --> 00:11:41,360
summer and two months later we saw our

00:11:36,390 --> 00:11:44,580
first cloudstack usage in production so

00:11:41,360 --> 00:11:47,610
so we started with version 40 and try to

00:11:44,580 --> 00:11:50,250
upgrade as as fast as we could to the

00:11:47,610 --> 00:11:52,800
new versions or we're now we're

00:11:50,250 --> 00:11:56,330
presently we're running for 21 we

00:11:52,800 --> 00:11:59,550
haven't touched 43 yet still recent and

00:11:56,330 --> 00:12:02,720
so in terms of notes specifically to our

00:11:59,550 --> 00:12:05,760
traditional VMware a cluster environment

00:12:02,720 --> 00:12:07,920
shared storage and and all this thing

00:12:05,760 --> 00:12:10,350
and so one of the first thing we notice

00:12:07,920 --> 00:12:12,390
with class tank that it requires vcenter

00:12:10,350 --> 00:12:16,770
so we were hoping to have some licensing

00:12:12,390 --> 00:12:19,500
and savings there but given the eighth

00:12:16,770 --> 00:12:21,090
at penn's definitely it appears that we

00:12:19,500 --> 00:12:22,560
needed vcenter so we had to keep our

00:12:21,090 --> 00:12:24,810
review center but that's one thing to

00:12:22,560 --> 00:12:26,430
consider the other thing we realized

00:12:24,810 --> 00:12:27,570
what the different types of licenses

00:12:26,430 --> 00:12:31,080
also I don't know if you're familiar

00:12:27,570 --> 00:12:34,380
with the vmware types of licenses so in

00:12:31,080 --> 00:12:35,880
addition to charging you for for for the

00:12:34,380 --> 00:12:38,970
different different licenses they also

00:12:35,880 --> 00:12:41,100
give you different offerings of those so

00:12:38,970 --> 00:12:43,410
they have basically standard enterprise

00:12:41,100 --> 00:12:45,180
and enterprise plus mainly we were using

00:12:43,410 --> 00:12:47,940
enterprise plus licenses in order to

00:12:45,180 --> 00:12:51,270
benefit from like verte distributed the

00:12:47,940 --> 00:12:53,730
V switch DRS storage DRS and such kind

00:12:51,270 --> 00:12:56,220
of feature and enterprise and the

00:12:53,730 --> 00:12:58,620
standard licensing is basically to make

00:12:56,220 --> 00:13:00,720
meghna make this quick is a license that

00:12:58,620 --> 00:13:04,590
just give you access to the hypervisor

00:13:00,720 --> 00:13:05,760
the h.a and you don't have DRS you know

00:13:04,590 --> 00:13:08,160
have storage ers you don't have a

00:13:05,760 --> 00:13:10,350
virtual distributed switch so but what

00:13:08,160 --> 00:13:12,840
we realized is that by using cloudstack

00:13:10,350 --> 00:13:15,270
we didn't really need all those features

00:13:12,840 --> 00:13:18,180
because CloudStack was somewhat hiding

00:13:15,270 --> 00:13:19,560
them from us anyway and and because we

00:13:18,180 --> 00:13:19,800
were used in class that we were entering

00:13:19,560 --> 00:13:22,339
some

00:13:19,800 --> 00:13:26,040
kind of a new model of development were

00:13:22,339 --> 00:13:28,050
very like more of a cloud type model

00:13:26,040 --> 00:13:29,490
where general you create machines you

00:13:28,050 --> 00:13:33,089
destroy them you can easily recreated

00:13:29,490 --> 00:13:35,610
them so then this kind of feature was

00:13:33,089 --> 00:13:42,990
not as much important as it was be as it

00:13:35,610 --> 00:13:45,660
was in the past so one thing that that

00:13:42,990 --> 00:13:47,370
really makes our environment different

00:13:45,660 --> 00:13:49,589
from typical cloud environment that our

00:13:47,370 --> 00:13:52,140
public is that our our environment is

00:13:49,589 --> 00:13:53,880
all is all private in the sense that all

00:13:52,140 --> 00:13:55,529
these devs environments so all the

00:13:53,880 --> 00:13:58,890
development teams that I deal with every

00:13:55,529 --> 00:14:00,839
every day and they do their stuff

00:13:58,890 --> 00:14:04,380
internally they don't need to expose

00:14:00,839 --> 00:14:05,820
those on the web so although those web

00:14:04,380 --> 00:14:08,040
application mostly that they work on

00:14:05,820 --> 00:14:10,500
they need to be to be to be only

00:14:08,040 --> 00:14:13,110
accessible internally and we didn't want

00:14:10,500 --> 00:14:15,709
to go through complex like VP internal

00:14:13,110 --> 00:14:18,450
VPN to access those so stuff like

00:14:15,709 --> 00:14:20,790
isolated networks and public networks in

00:14:18,450 --> 00:14:22,680
terms of CloudStack terminology didn't

00:14:20,790 --> 00:14:24,630
make sense for us for us we just wanted

00:14:22,680 --> 00:14:26,820
two people to deploy machines and be

00:14:24,630 --> 00:14:29,160
able to ssh or rdp to those machines

00:14:26,820 --> 00:14:30,990
right away without having to create some

00:14:29,160 --> 00:14:32,700
port forwards or some complex network

00:14:30,990 --> 00:14:35,040
configuration I'm talking to developers

00:14:32,700 --> 00:14:36,360
who don't want to have to just have a

00:14:35,040 --> 00:14:38,310
quick quiz or to create their servers

00:14:36,360 --> 00:14:40,260
and access it so for this reason we

00:14:38,310 --> 00:14:44,850
started using shared network instead of

00:14:40,260 --> 00:14:47,010
isolated networks and we we created our

00:14:44,850 --> 00:14:48,180
our implementation based on that so a

00:14:47,010 --> 00:14:50,339
shared network for those are not

00:14:48,180 --> 00:14:53,329
familiar with it for this is a is

00:14:50,339 --> 00:14:56,190
basically a network that is routed by a

00:14:53,329 --> 00:14:58,170
router external to cloudstack so it's

00:14:56,190 --> 00:15:02,640
not routed by the VR themselves it's

00:14:58,170 --> 00:15:06,529
another router so another another issue

00:15:02,640 --> 00:15:09,779
we we had when when first implementing

00:15:06,529 --> 00:15:12,060
call stack on vmware was the the initial

00:15:09,779 --> 00:15:14,160
configuration for the vmware interfaces

00:15:12,060 --> 00:15:15,690
network interfaces I was not

00:15:14,160 --> 00:15:17,640
straightforward to configure we're used

00:15:15,690 --> 00:15:20,519
to having so our environment is

00:15:17,640 --> 00:15:22,199
typically has a VLAN for management as a

00:15:20,519 --> 00:15:24,390
VLAN for this I feel and for gas and a

00:15:22,199 --> 00:15:26,130
bunch of different VLAN configuration so

00:15:24,390 --> 00:15:28,860
when we initiated install CloudStack we

00:15:26,130 --> 00:15:30,720
had to do some tweaking because

00:15:28,860 --> 00:15:31,920
CloudStack was expecting the management

00:15:30,720 --> 00:15:32,990
VLAN to be the same one as the

00:15:31,920 --> 00:15:35,600
CloudStack management

00:15:32,990 --> 00:15:38,630
that's kind of thing so we were somewhat

00:15:35,600 --> 00:15:40,430
able to figure it out and we ended up

00:15:38,630 --> 00:15:43,190
with our first environment which was a

00:15:40,430 --> 00:15:46,640
to host environment I mean have the

00:15:43,190 --> 00:15:49,190
specs terrace san storage and in our

00:15:46,640 --> 00:15:52,600
case we decided to just cannibalize our

00:15:49,190 --> 00:15:54,980
production stand by site instead of

00:15:52,600 --> 00:15:58,790
spawning new resources or using some old

00:15:54,980 --> 00:15:59,899
old crappy servers so um another thing

00:15:58,790 --> 00:16:02,149
we decided also in terms of

00:15:59,899 --> 00:16:03,680
implementation was that because we're

00:16:02,149 --> 00:16:05,959
dealing with many development teams that

00:16:03,680 --> 00:16:08,770
can be between like three or ten people

00:16:05,959 --> 00:16:11,600
in each team and I have like probably

00:16:08,770 --> 00:16:12,920
ten of those at different teams we

00:16:11,600 --> 00:16:15,950
decide to create one account per

00:16:12,920 --> 00:16:18,020
development team and also integrate

00:16:15,950 --> 00:16:20,540
their authentication with the internal

00:16:18,020 --> 00:16:22,880
Active Directory the reason behind that

00:16:20,540 --> 00:16:25,300
was was that we wanted each team to work

00:16:22,880 --> 00:16:27,680
together and manage their own resources

00:16:25,300 --> 00:16:29,240
we didn't need like each people to have

00:16:27,680 --> 00:16:30,950
an account they didn't they could share

00:16:29,240 --> 00:16:34,339
those resources together and also

00:16:30,950 --> 00:16:37,250
managed him which was a big difference

00:16:34,339 --> 00:16:39,589
between versus what we had before where

00:16:37,250 --> 00:16:42,110
each team had a bunch of virtual

00:16:39,589 --> 00:16:44,300
machines that they somewhat created over

00:16:42,110 --> 00:16:46,550
time by creating a request but didn't

00:16:44,300 --> 00:16:48,560
have really a big picture of this so it

00:16:46,550 --> 00:16:50,930
was it was really complex over time to

00:16:48,560 --> 00:16:52,160
know which one is the owner of that

00:16:50,930 --> 00:16:53,810
virtual machine that I have in my

00:16:52,160 --> 00:16:55,070
infrastructure I didn't know if it was

00:16:53,810 --> 00:16:56,930
this guy this guy because eventually

00:16:55,070 --> 00:16:59,390
people leave people change team a

00:16:56,930 --> 00:17:03,800
project changes so the whole

00:16:59,390 --> 00:17:07,939
organization can change so the first

00:17:03,800 --> 00:17:09,860
observations we after after setting up

00:17:07,939 --> 00:17:12,199
our first environment for for cloud stat

00:17:09,860 --> 00:17:14,480
dev we try to get the dev teams on board

00:17:12,199 --> 00:17:16,429
so the first thing was to let them know

00:17:14,480 --> 00:17:18,199
hey we have some infrastructure as a

00:17:16,429 --> 00:17:19,819
service platform in house and you guys

00:17:18,199 --> 00:17:21,530
can use it it's just you login you

00:17:19,819 --> 00:17:24,260
create machines and there you go that

00:17:21,530 --> 00:17:26,120
was the whole the whole purpose so we

00:17:24,260 --> 00:17:27,620
had to present you to those teams the

00:17:26,120 --> 00:17:30,500
different the difference between the GUI

00:17:27,620 --> 00:17:33,620
de TI such kind of tool give them create

00:17:30,500 --> 00:17:36,380
some some simple getting started the

00:17:33,620 --> 00:17:39,770
documentation page on this and one thing

00:17:36,380 --> 00:17:42,800
we we start discussing with them was

00:17:39,770 --> 00:17:46,310
what we call the cloud janitor so at

00:17:42,800 --> 00:17:48,320
first as I mentioned earlier we were

00:17:46,310 --> 00:17:49,640
somewhat afraid that that the dev guys

00:17:48,320 --> 00:17:52,010
would just create keeps creating

00:17:49,640 --> 00:17:54,590
machines like crazy and that we will run

00:17:52,010 --> 00:17:57,260
out all our resources quickly so one of

00:17:54,590 --> 00:17:59,540
the thing we mentioned to them that we

00:17:57,260 --> 00:18:02,270
weren't sure about was do we need some

00:17:59,540 --> 00:18:03,920
kind of process that that cleans up the

00:18:02,270 --> 00:18:05,480
old machines or make sure that if you

00:18:03,920 --> 00:18:07,550
guys are not using machines or if your

00:18:05,480 --> 00:18:09,590
machines are too old we just clean them

00:18:07,550 --> 00:18:11,750
up or we stop them automatically so that

00:18:09,590 --> 00:18:16,190
what that is what we were calling a

00:18:11,750 --> 00:18:18,650
cloud janitor what happened basically is

00:18:16,190 --> 00:18:20,780
that we discussed this but in the end we

00:18:18,650 --> 00:18:23,390
said let's go forward without it and see

00:18:20,780 --> 00:18:32,380
what happens let's make an experiment so

00:18:23,390 --> 00:18:35,030
um so that's what we did and in the end

00:18:32,380 --> 00:18:37,220
after a couple of months we never talked

00:18:35,030 --> 00:18:40,520
again about this because we realized

00:18:37,220 --> 00:18:42,440
that it was not required so as soon as

00:18:40,520 --> 00:18:44,750
we deployed cloudstack internally for

00:18:42,440 --> 00:18:47,090
development teams we saw a continuous

00:18:44,750 --> 00:18:49,550
increase in terms of a few switch over

00:18:47,090 --> 00:18:51,890
time we saw developers which huge

00:18:49,550 --> 00:18:53,900
workstation with like huge quantities of

00:18:51,890 --> 00:18:58,130
RAM starting to use class like instead

00:18:53,900 --> 00:19:00,710
of having their own using VMware virtual

00:18:58,130 --> 00:19:02,390
box locally to to have bunch of virtual

00:19:00,710 --> 00:19:05,240
machines to render their development or

00:19:02,390 --> 00:19:06,860
QA environment so and we also have an

00:19:05,240 --> 00:19:11,630
automated and not automation team

00:19:06,860 --> 00:19:15,260
internally that started using the salt

00:19:11,630 --> 00:19:18,230
stack which is a remote execution

00:19:15,260 --> 00:19:21,470
framework that can do more than that to

00:19:18,230 --> 00:19:24,860
basically build complete environments by

00:19:21,470 --> 00:19:26,300
using the cloud stack API so I what it

00:19:24,860 --> 00:19:28,490
means is that you take an you take a

00:19:26,300 --> 00:19:30,080
bunch of servers Windows Linux together

00:19:28,490 --> 00:19:31,460
you configure the installation

00:19:30,080 --> 00:19:34,130
automatically of all the applications

00:19:31,460 --> 00:19:37,250
and you connect them all together all

00:19:34,130 --> 00:19:38,900
this and this requires required an

00:19:37,250 --> 00:19:40,670
infrastructure as a service but that was

00:19:38,900 --> 00:19:42,590
a big change toward what we were doing

00:19:40,670 --> 00:19:44,990
before if you remember the work folder

00:19:42,590 --> 00:19:48,050
that I that I showed her on the previous

00:19:44,990 --> 00:19:49,850
slide which was taking days now they

00:19:48,050 --> 00:19:51,680
were able to a simple script to create a

00:19:49,850 --> 00:19:53,750
whole environment and then they were

00:19:51,680 --> 00:19:55,520
able to give these kind of scripts to

00:19:53,750 --> 00:19:58,490
each development team so they can do the

00:19:55,520 --> 00:19:59,470
same thing and reuse these dddd these

00:19:58,490 --> 00:20:04,000
automation scripts

00:19:59,470 --> 00:20:06,340
so as I mentioned earlier about about

00:20:04,000 --> 00:20:07,870
cloud janitor the one of the biggest

00:20:06,340 --> 00:20:09,580
concern we had it was resource

00:20:07,870 --> 00:20:14,140
management we were afraid that people

00:20:09,580 --> 00:20:15,789
because it was like a an open buffet

00:20:14,140 --> 00:20:18,190
that the day would eat all the resources

00:20:15,789 --> 00:20:21,340
pretty quickly and that we would run

00:20:18,190 --> 00:20:25,030
into the limits pretty fast so what we

00:20:21,340 --> 00:20:28,120
realized was that giving giving giving

00:20:25,030 --> 00:20:30,760
dev developers access to a self-service

00:20:28,120 --> 00:20:35,169
platform where they can they can manage

00:20:30,760 --> 00:20:37,659
their own their own resource create them

00:20:35,169 --> 00:20:40,840
delete them and and and and manage this

00:20:37,659 --> 00:20:42,700
by themselves it kind of did did that

00:20:40,840 --> 00:20:44,850
cloud janitor by itself because we

00:20:42,700 --> 00:20:47,320
realized that people were somewhat

00:20:44,850 --> 00:20:48,669
diligent about what what what resources

00:20:47,320 --> 00:20:50,799
they use and they were just keeping what

00:20:48,669 --> 00:20:52,120
they're really needed and as a team they

00:20:50,799 --> 00:20:55,659
were they were asking those questions

00:20:52,120 --> 00:20:58,960
and in terms of processes what we we did

00:20:55,659 --> 00:21:01,600
is that since each dev team has a team

00:20:58,960 --> 00:21:03,940
lead if we had some questions about the

00:21:01,600 --> 00:21:06,190
resource usage for a dev team we had one

00:21:03,940 --> 00:21:07,809
guy that was well and identified ask

00:21:06,190 --> 00:21:09,669
those questions but giving them

00:21:07,809 --> 00:21:12,250
visibility on their resources with the

00:21:09,669 --> 00:21:16,630
but was a big big advantage for them and

00:21:12,250 --> 00:21:18,190
for us so in terms of infrastructure as

00:21:16,630 --> 00:21:20,650
I mentioned we have two datacenters we

00:21:18,190 --> 00:21:24,549
have on the production right now is at

00:21:20,650 --> 00:21:27,880
Toronto and our Montreal data center has

00:21:24,549 --> 00:21:29,710
was standby production okay just to

00:21:27,880 --> 00:21:32,350
mention if we use some nimble storage we

00:21:29,710 --> 00:21:34,870
have net scalars we have one v center at

00:21:32,350 --> 00:21:36,340
each data center the logic behind that

00:21:34,870 --> 00:21:38,169
is that each data center needs to be

00:21:36,340 --> 00:21:40,330
pretty much independent from each other

00:21:38,169 --> 00:21:44,730
even though they are supposed to mirror

00:21:40,330 --> 00:21:48,070
each other so because we had a we were

00:21:44,730 --> 00:21:50,650
we had a lot of overcapacity we decide

00:21:48,070 --> 00:21:53,140
to just start cannibalizing those those

00:21:50,650 --> 00:21:55,240
data centers in order to to reuse some

00:21:53,140 --> 00:21:56,169
of those resources for cloudstack so one

00:21:55,240 --> 00:21:57,970
of the things we realized by using

00:21:56,169 --> 00:21:59,890
cloudstack in an existing environment

00:21:57,970 --> 00:22:01,960
CloudStack was not for us to replace

00:21:59,890 --> 00:22:03,250
necessarily what we had already we have

00:22:01,960 --> 00:22:04,870
production running on this we don't

00:22:03,250 --> 00:22:07,570
wanna introduce and stability right away

00:22:04,870 --> 00:22:10,870
you want to slowly integrate this so

00:22:07,570 --> 00:22:12,540
what we realize is that you we need to

00:22:10,870 --> 00:22:16,180
either give

00:22:12,540 --> 00:22:18,190
a-any an ESX owes to our traditional

00:22:16,180 --> 00:22:19,900
production or to Klaus that because once

00:22:18,190 --> 00:22:21,790
you give it a cloud stack it manage it

00:22:19,900 --> 00:22:25,480
completely you cannot like share your

00:22:21,790 --> 00:22:27,550
host between the traditional one and and

00:22:25,480 --> 00:22:30,070
the new class stack cluster so basically

00:22:27,550 --> 00:22:32,410
we we took an eight machine cluster and

00:22:30,070 --> 00:22:33,850
split it into a six and A two machine in

00:22:32,410 --> 00:22:36,460
production in order to have to start

00:22:33,850 --> 00:22:39,010
having some some some a cloud stack

00:22:36,460 --> 00:22:40,600
platform in production and in for

00:22:39,010 --> 00:22:43,230
development we started with two servers

00:22:40,600 --> 00:22:45,580
and eventually we added a third one and

00:22:43,230 --> 00:22:47,560
so the logic behind having two

00:22:45,580 --> 00:22:50,620
cloudstack in our environments one for

00:22:47,560 --> 00:22:52,300
that one for prod is that it is that for

00:22:50,620 --> 00:22:54,480
us each data center should be

00:22:52,300 --> 00:22:59,020
independent if the other side goes down

00:22:54,480 --> 00:23:00,730
the other one should notice so um and in

00:22:59,020 --> 00:23:02,260
the end we didn't realize that class

00:23:00,730 --> 00:23:05,320
that was not too heavy in terms of

00:23:02,260 --> 00:23:07,690
resource to run so so it was easier for

00:23:05,320 --> 00:23:10,240
that plus for security purposes it was

00:23:07,690 --> 00:23:14,110
much easier to physically separate them

00:23:10,240 --> 00:23:15,790
in terms of network and access so in

00:23:14,110 --> 00:23:17,500
order to to run your class text some

00:23:15,790 --> 00:23:19,510
people like to run the class that

00:23:17,500 --> 00:23:22,450
management servers or database on on

00:23:19,510 --> 00:23:25,960
separate servers or bare metal for us it

00:23:22,450 --> 00:23:28,120
was it was easy since we had a regular

00:23:25,960 --> 00:23:29,470
cluster with our production stuff we

00:23:28,120 --> 00:23:31,210
could just instant use a couple of

00:23:29,470 --> 00:23:34,660
virtual machines on it in order to have

00:23:31,210 --> 00:23:38,320
the cloudstack management servers and

00:23:34,660 --> 00:23:39,640
DBS and then the other cluster would run

00:23:38,320 --> 00:23:42,100
the cloud class deck load so we didn't

00:23:39,640 --> 00:23:45,610
need didn't need extra hardware for that

00:23:42,100 --> 00:23:48,000
and in terms of networking because we

00:23:45,610 --> 00:23:53,140
were we wanted to use shared networks

00:23:48,000 --> 00:23:56,590
the idea was to give one network per

00:23:53,140 --> 00:23:59,620
account so and make all those networks

00:23:56,590 --> 00:24:05,230
accessible everywhere through through

00:23:59,620 --> 00:24:09,490
our router here and to have a sub domain

00:24:05,230 --> 00:24:13,360
for each each Network so for example we

00:24:09,490 --> 00:24:16,360
made the choice of using the top-level

00:24:13,360 --> 00:24:20,110
domain cloud for all our cloudstack

00:24:16,360 --> 00:24:22,990
infrastructure either prod or or or dev

00:24:20,110 --> 00:24:24,850
and each network would be a sub domain

00:24:22,990 --> 00:24:25,010
of that with the name of the account so

00:24:24,850 --> 00:24:29,360
that

00:24:25,010 --> 00:24:32,630
say I have a no I'm not gonna when our

00:24:29,360 --> 00:24:34,400
product is called pts so pts that cloud

00:24:32,630 --> 00:24:36,380
was the sub domain for that so every

00:24:34,400 --> 00:24:38,750
time you deploy machine in that in that

00:24:36,380 --> 00:24:40,550
Network it was the machine name that pts

00:24:38,750 --> 00:24:42,650
that cloud it was the way to reach the

00:24:40,550 --> 00:24:46,970
machine directly so that that was our

00:24:42,650 --> 00:24:52,010
the way we integrate with DNS and yeah

00:24:46,970 --> 00:24:59,600
so after six months that brings us at

00:24:52,010 --> 00:25:02,870
the beginning of this year we saw a big

00:24:59,600 --> 00:25:05,540
big migration of our our old in our old

00:25:02,870 --> 00:25:08,090
development environments toward

00:25:05,540 --> 00:25:11,980
CloudStack because of people really saw

00:25:08,090 --> 00:25:14,630
the value of having this environment and

00:25:11,980 --> 00:25:17,510
because of resource usage we needed to

00:25:14,630 --> 00:25:19,610
add a third host for this we run into a

00:25:17,510 --> 00:25:21,920
couple of issues for around

00:25:19,610 --> 00:25:26,600
over-provisioning whether its CPU memory

00:25:21,920 --> 00:25:27,830
and storage primarily because sometimes

00:25:26,600 --> 00:25:31,010
the some of the settings were not

00:25:27,830 --> 00:25:32,660
working as we were expecting we had some

00:25:31,010 --> 00:25:34,190
issues with the virtual routers actually

00:25:32,660 --> 00:25:39,680
we had a bunch of issue with the virtual

00:25:34,190 --> 00:25:41,390
routers DNS DHA and dhcp were not stable

00:25:39,680 --> 00:25:43,850
I mean we're talking about people who

00:25:41,390 --> 00:25:46,850
deploy is like 10 machines de Montaigne

00:25:43,850 --> 00:25:49,160
Slee so the way it looks like we found

00:25:46,850 --> 00:25:50,780
some bugs in the in the virtual router

00:25:49,160 --> 00:25:53,720
and had to find some workarounds for

00:25:50,780 --> 00:25:55,070
example on the DNS side if you're

00:25:53,720 --> 00:25:57,320
familiar with how the virtual router

00:25:55,070 --> 00:25:59,390
works they use a service called DNS

00:25:57,320 --> 00:26:03,050
masquerading which is a very very

00:25:59,390 --> 00:26:05,270
lightweight dns and dhcp server and for

00:26:03,050 --> 00:26:07,430
dns every time we were adding a host it

00:26:05,270 --> 00:26:09,140
was restarting the service so during

00:26:07,430 --> 00:26:12,410
that time the dns was not working and

00:26:09,140 --> 00:26:14,360
because TTL czar r0 it just keeps going

00:26:12,410 --> 00:26:16,550
to the dns all the time so we actually

00:26:14,360 --> 00:26:20,210
did a workaround for that by installing

00:26:16,550 --> 00:26:24,560
our own dns server next to cloudstack in

00:26:20,210 --> 00:26:27,230
order to manage the dns ourselves so we

00:26:24,560 --> 00:26:29,150
have basically have a script that that

00:26:27,230 --> 00:26:30,350
that that looks at the cloudstack events

00:26:29,150 --> 00:26:33,110
every time there's a new machine it

00:26:30,350 --> 00:26:34,490
updates the DNS with it and that way we

00:26:33,110 --> 00:26:37,530
gain much stability because we use a

00:26:34,490 --> 00:26:41,180
more robust dns server

00:26:37,530 --> 00:26:43,380
and with the w-2 for 2,000 recently

00:26:41,180 --> 00:26:45,300
sometimes it scary to do updates with

00:26:43,380 --> 00:26:47,730
CloudStack because there's no rollback

00:26:45,300 --> 00:26:49,830
procedures on some of the steps so you

00:26:47,730 --> 00:26:51,510
have to be very careful and understand

00:26:49,830 --> 00:26:56,610
what you're doing so that's a part of

00:26:51,510 --> 00:26:59,400
our experience and our social class

00:26:56,610 --> 00:27:01,680
stack also enabled us to from if I'm a

00:26:59,400 --> 00:27:04,020
development perspective to start doing

00:27:01,680 --> 00:27:05,400
some continuous delivery process so I

00:27:04,020 --> 00:27:07,860
mean I'm not a developer so I cannot

00:27:05,400 --> 00:27:10,200
really elaborate a lot on this but

00:27:07,860 --> 00:27:12,510
basically it's it's the fact that you're

00:27:10,200 --> 00:27:14,520
as soon as as you commit your code your

00:27:12,510 --> 00:27:17,430
code is come to me being built tested

00:27:14,520 --> 00:27:20,340
and and and using the same mechanism

00:27:17,430 --> 00:27:23,760
that we we use to deploy your production

00:27:20,340 --> 00:27:30,090
why will believe something pretty much

00:27:23,760 --> 00:27:31,560
similar to that and also I we and we

00:27:30,090 --> 00:27:33,810
started doing our migration of our

00:27:31,560 --> 00:27:36,540
production environments the cloud stack

00:27:33,810 --> 00:27:38,640
so for us it's a way to to really

00:27:36,540 --> 00:27:40,500
automate our deployments if the

00:27:38,640 --> 00:27:42,300
deployments include bringing new machine

00:27:40,500 --> 00:27:43,740
in more in a cloud away than a

00:27:42,300 --> 00:27:45,240
traditional way where you do everything

00:27:43,740 --> 00:27:47,400
manually if you have this kind of

00:27:45,240 --> 00:27:48,540
platform you can just spawn machines

00:27:47,400 --> 00:27:52,350
whenever you create a new deployment

00:27:48,540 --> 00:27:53,940
just rewrite your load balancer to those

00:27:52,350 --> 00:27:56,670
new machines and there you go you're in

00:27:53,940 --> 00:27:59,880
prod so so the automation script that we

00:27:56,670 --> 00:28:04,500
have enabled us to to do such a thing so

00:27:59,880 --> 00:28:05,790
we just started to to roll out class

00:28:04,500 --> 00:28:09,950
back in production for some specific

00:28:05,790 --> 00:28:12,690
products so some of our applications and

00:28:09,950 --> 00:28:13,800
like and we did with the desperate one

00:28:12,690 --> 00:28:16,770
of the new product we were developing

00:28:13,800 --> 00:28:20,700
and we're in the in the process of doing

00:28:16,770 --> 00:28:23,130
it for another one so our our so the way

00:28:20,700 --> 00:28:26,610
we see the transition for us is that we

00:28:23,130 --> 00:28:29,010
think our our production environment

00:28:26,610 --> 00:28:31,380
will just transition from a traditional

00:28:29,010 --> 00:28:34,230
VMware production cluster to work

00:28:31,380 --> 00:28:36,330
CloudStack VMware cluster so we would

00:28:34,230 --> 00:28:38,450
just maybe move host one of the time

00:28:36,330 --> 00:28:41,910
form one cluster to another in order to

00:28:38,450 --> 00:28:44,280
as it follows the shift of resources

00:28:41,910 --> 00:28:45,919
from one to another another thing we

00:28:44,280 --> 00:28:48,809
were we were

00:28:45,919 --> 00:28:52,559
really looking forward was to start

00:28:48,809 --> 00:28:54,570
leveraging like benefit from the fact

00:28:52,559 --> 00:28:57,390
that CloudStack makes it an abstraction

00:28:54,570 --> 00:28:59,130
of the hypervisor for the users and for

00:28:57,390 --> 00:29:02,520
all the automation scripts aside to

00:28:59,130 --> 00:29:04,980
start looking as other I provider for a

00:29:02,520 --> 00:29:07,740
four-out as a free alternative to VMware

00:29:04,980 --> 00:29:09,510
I mean VMware's great super stable has

00:29:07,740 --> 00:29:11,309
great features but there's a cost I to

00:29:09,510 --> 00:29:13,830
that so depending on the types of low

00:29:11,309 --> 00:29:16,559
you want to run sometimes for furloughed

00:29:13,830 --> 00:29:18,960
that that does not require as much as

00:29:16,559 --> 00:29:21,270
much a disability or can or build to

00:29:18,960 --> 00:29:24,720
sustain failure or can can deal with

00:29:21,270 --> 00:29:26,580
this it was interesting for us to start

00:29:24,720 --> 00:29:29,159
having likes a kvm as a free out there

00:29:26,580 --> 00:29:33,570
as a free hypervisor and VMware for more

00:29:29,159 --> 00:29:35,370
like legacy stuff existing product so

00:29:33,570 --> 00:29:37,320
that's why in the end we say that class

00:29:35,370 --> 00:29:39,570
that is not all or nothing solution you

00:29:37,320 --> 00:29:41,880
can that we actually are a good example

00:29:39,570 --> 00:29:44,669
of people who decided to use it for some

00:29:41,880 --> 00:29:47,309
stuff and keep using our platform for

00:29:44,669 --> 00:29:49,409
for our existing application not to put

00:29:47,309 --> 00:29:51,690
them necessarily at risk by changing the

00:29:49,409 --> 00:29:54,690
whole way that they're built but for

00:29:51,690 --> 00:29:57,210
transition them slowly but depending on

00:29:54,690 --> 00:30:00,030
the way you want you want to do that so

00:29:57,210 --> 00:30:03,150
if you have questions we're open for

00:30:00,030 --> 00:30:10,770
question both half SWA and myself as

00:30:03,150 --> 00:30:13,559
well we're still not done well I hope

00:30:10,770 --> 00:30:16,140
you guys enjoyed the presentation and i

00:30:13,559 --> 00:30:19,830
hope you you see that it's it's not

00:30:16,140 --> 00:30:22,200
fluff it's possible to really change

00:30:19,830 --> 00:30:25,400
things with with cloudstack in your

00:30:22,200 --> 00:30:29,990
enterprise or you know in your company

00:30:25,400 --> 00:30:34,049
and if you guys i have like five minutes

00:30:29,990 --> 00:30:36,299
if possible we would like to get your

00:30:34,049 --> 00:30:38,100
like you would like to understand now

00:30:36,299 --> 00:30:41,490
you are using cloud or what you think

00:30:38,100 --> 00:30:43,320
like will be the Cloud usage it's just a

00:30:41,490 --> 00:30:45,830
small survey to want ten questions five

00:30:43,320 --> 00:30:48,750
minutes you can you can go to that URL

00:30:45,830 --> 00:30:51,179
and we will give back all those results

00:30:48,750 --> 00:30:54,120
to you will not keep that for ourselves

00:30:51,179 --> 00:30:56,760
will contributed Google country do it

00:30:54,120 --> 00:30:58,950
back those results and I other

00:30:56,760 --> 00:30:59,370
announcement is that we host a party

00:30:58,950 --> 00:31:03,240
tonight

00:30:59,370 --> 00:31:05,640
I know there was one yesterday but

00:31:03,240 --> 00:31:07,350
tonight with with SolidFire and in us

00:31:05,640 --> 00:31:10,830
cloud apps we would like to invite you

00:31:07,350 --> 00:31:12,720
to a beer beer tasting so it's at the

00:31:10,830 --> 00:31:14,640
front the front porch not exactly sure

00:31:12,720 --> 00:31:17,400
where it is but you have the the

00:31:14,640 --> 00:31:21,600
register link it's on even bright and

00:31:17,400 --> 00:31:40,320
it's free is free okay so we're done so

00:31:21,600 --> 00:31:44,130
if you have questions so so our our

00:31:40,320 --> 00:31:47,070
update 2421 went well but in the process

00:31:44,130 --> 00:31:49,200
of upgrading it we we saw that there

00:31:47,070 --> 00:31:52,020
were some some parts that had no point

00:31:49,200 --> 00:31:55,050
of return so but so so our strategy

00:31:52,020 --> 00:31:56,940
right now will be to build a test

00:31:55,050 --> 00:31:58,530
environment or some kind of little POC

00:31:56,940 --> 00:32:00,179
environment order to test those upgrades

00:31:58,530 --> 00:32:02,610
to be more familiar with them before

00:32:00,179 --> 00:32:04,140
upgrading our dev environment which yes

00:32:02,610 --> 00:32:06,600
it's a dev environment but it impacts so

00:32:04,140 --> 00:32:09,420
many people when it goes down that you

00:32:06,600 --> 00:32:12,120
have to be careful so but in probably

00:32:09,420 --> 00:32:13,350
ending after at this POS environment so

00:32:12,120 --> 00:32:16,040
in couple of weeks we'll probably have

00:32:13,350 --> 00:32:16,040
great 243

00:32:21,480 --> 00:32:43,600
I'm happy to hear that yes yes yep now

00:32:41,740 --> 00:32:46,630
you have to manually create each user

00:32:43,600 --> 00:32:48,790
inside the account to map the user to an

00:32:46,630 --> 00:32:51,670
account so that so that there's no

00:32:48,790 --> 00:32:53,770
relation to groups in ad it's really two

00:32:51,670 --> 00:32:55,240
one two one user creation you have to

00:32:53,770 --> 00:32:57,280
explicitly create each user around

00:32:55,240 --> 00:33:00,190
CloudStack to grant him access to that

00:32:57,280 --> 00:33:02,140
account that that's one thing I wanted

00:33:00,190 --> 00:33:04,270
to you know comment on is that an

00:33:02,140 --> 00:33:06,460
account in cloudstack is more of a group

00:33:04,270 --> 00:33:07,720
yeah so it's not like you know the

00:33:06,460 --> 00:33:09,550
entire team is sharing the same

00:33:07,720 --> 00:33:11,620
credentials right you see they still

00:33:09,550 --> 00:33:14,940
have their own financial users within an

00:33:11,620 --> 00:33:18,130
account but they share the same

00:33:14,940 --> 00:33:20,350
resources and they can delete the stuff

00:33:18,130 --> 00:33:22,630
of their of their co-worker in the same

00:33:20,350 --> 00:33:24,850
team that would be careful but they

00:33:22,630 --> 00:33:26,470
should be working together anyway so in

00:33:24,850 --> 00:33:36,100
our case they're all sitting next to

00:33:26,470 --> 00:33:39,730
each other so it's not a big issue yep

00:33:36,100 --> 00:33:42,190
since since since 42 you can limit the

00:33:39,730 --> 00:33:44,650
the resource per account pretty much

00:33:42,190 --> 00:33:47,650
like this we actually don't because we

00:33:44,650 --> 00:33:50,260
want to like educate them at the same

00:33:47,650 --> 00:33:51,760
time and so far it's been a pretty good

00:33:50,260 --> 00:33:55,210
experience every time we at the

00:33:51,760 --> 00:33:57,130
beginning we were trying to put kodys

00:33:55,210 --> 00:33:59,020
especially when when 42 came out it had

00:33:57,130 --> 00:34:02,890
kotas that by default we didn't realize

00:33:59,020 --> 00:34:05,140
that and we just quickly remove all this

00:34:02,890 --> 00:34:06,820
and whenever that we see that we have

00:34:05,140 --> 00:34:08,109
some problems terms of resource we just

00:34:06,820 --> 00:34:09,669
look at who's using the most and we

00:34:08,109 --> 00:34:12,340
asked questions and generally people

00:34:09,669 --> 00:34:13,720
just clean stuff by themselves or if we

00:34:12,340 --> 00:34:14,950
ask them they go oh yeah we can leave

00:34:13,720 --> 00:34:17,710
this no problem and they do it

00:34:14,950 --> 00:34:19,149
themselves so it's just less work for us

00:34:17,710 --> 00:34:20,980
and we focus on just improving the

00:34:19,149 --> 00:34:26,889
platform instead of doing all this

00:34:20,980 --> 00:34:29,760
repetitive work and tasks yes were you

00:34:26,889 --> 00:34:29,760
guys ever asked to do

00:34:37,760 --> 00:34:43,740
not specifically but I know that our

00:34:40,649 --> 00:34:46,260
management really see the value in this

00:34:43,740 --> 00:34:47,609
and they're there they were very happy

00:34:46,260 --> 00:34:49,649
with the end result and the

00:34:47,609 --> 00:34:51,540
transformation that happened at the IT

00:34:49,649 --> 00:34:53,700
level in terms that were what it brings

00:34:51,540 --> 00:34:56,310
and in terms of capability for

00:34:53,700 --> 00:34:58,859
automation and and all those things that

00:34:56,310 --> 00:35:00,540
they directly see the value but

00:34:58,859 --> 00:35:10,080
unfortunately I cannot put a price tag

00:35:00,540 --> 00:35:12,210
to this or one more what thanks a lot

00:35:10,080 --> 00:35:14,369
guys I think it was a great talk and a

00:35:12,210 --> 00:35:18,780
great case study of cloudstack with

00:35:14,369 --> 00:35:20,820
VMware with netscaler with cisco ucs dr

00:35:18,780 --> 00:35:22,560
in amazon so a great case study I would

00:35:20,820 --> 00:35:24,450
love to write something about it that we

00:35:22,560 --> 00:35:28,010
can you know put on there cloudstack

00:35:24,450 --> 00:35:28,010

YouTube URL: https://www.youtube.com/watch?v=TB7mrLem_k0


