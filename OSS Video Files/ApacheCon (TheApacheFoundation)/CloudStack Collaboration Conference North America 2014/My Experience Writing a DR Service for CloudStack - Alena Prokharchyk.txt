Title: My Experience Writing a DR Service for CloudStack - Alena Prokharchyk
Publication date: 2014-05-02
Playlist: CloudStack Collaboration Conference North America 2014
Description: 
	CloudStack Collaboration Conference North America 2014
Captions: 
	00:00:00,000 --> 00:00:05,190
my name is Alina and I've been working

00:00:02,429 --> 00:00:07,200
the cloud tech since 2009 started as a

00:00:05,190 --> 00:00:09,780
part of the cloud come now continued

00:00:07,200 --> 00:00:13,740
development as a part of Citrix I've

00:00:09,780 --> 00:00:17,340
mainly worked with a API layer network

00:00:13,740 --> 00:00:19,650
as a service of the GPC and lately I've

00:00:17,340 --> 00:00:22,199
been changed to try on a different head

00:00:19,650 --> 00:00:25,080
and write a service on the top of a

00:00:22,199 --> 00:00:27,630
cloud stack so that indeed has been a

00:00:25,080 --> 00:00:29,760
very interesting experience as they had

00:00:27,630 --> 00:00:31,619
to act as a third-party developer for

00:00:29,760 --> 00:00:34,050
the product where I'm a core developer

00:00:31,619 --> 00:00:36,690
and certain things certainly backfired

00:00:34,050 --> 00:00:39,030
at me so today I'm going to share this

00:00:36,690 --> 00:00:42,090
experience with you as well as give a

00:00:39,030 --> 00:00:43,710
brief overview of the dr infrastructure

00:00:42,090 --> 00:00:45,960
hope it would be useful for people

00:00:43,710 --> 00:00:54,420
thinking or writing the same services

00:00:45,960 --> 00:00:56,460
for the clouds that oops so what is the

00:00:54,420 --> 00:01:00,600
disaster in the cloud the disaster is

00:00:56,460 --> 00:01:02,640
basically any failure that can happen to

00:01:00,600 --> 00:01:04,949
your dealer center like the storage

00:01:02,640 --> 00:01:07,020
failure or the network failure quarter

00:01:04,949 --> 00:01:10,619
router failure or the physical damage as

00:01:07,020 --> 00:01:12,990
a result your entire data center becomes

00:01:10,619 --> 00:01:15,990
non functional or it can host can cause

00:01:12,990 --> 00:01:18,990
a partial data center failure and the

00:01:15,990 --> 00:01:21,150
user vm VMs become unresponsive they

00:01:18,990 --> 00:01:22,799
cannot access their volumes anymore they

00:01:21,150 --> 00:01:25,619
cannot stop they can infer nipple 8 with

00:01:22,799 --> 00:01:28,020
VMs anymore and any dr products goal

00:01:25,619 --> 00:01:29,909
should be prepared VMs for situations

00:01:28,020 --> 00:01:33,659
like this and recover as soon as

00:01:29,909 --> 00:01:35,939
possible if you look at the clouds tech

00:01:33,659 --> 00:01:38,640
today and think about what possible

00:01:35,939 --> 00:01:40,409
solutions that can be used as a disaster

00:01:38,640 --> 00:01:43,770
recovery there's only one feature is

00:01:40,409 --> 00:01:45,930
recurrent snapshots basically end user

00:01:43,770 --> 00:01:49,110
has to set up snapshot policies for his

00:01:45,930 --> 00:01:52,439
volumes and restore them either in the

00:01:49,110 --> 00:01:53,850
same zone or in the different zones but

00:01:52,439 --> 00:01:55,829
he can't really call it out of the box

00:01:53,850 --> 00:01:58,860
the our solution as it just does the

00:01:55,829 --> 00:02:01,290
volumes recovery and any other data that

00:01:58,860 --> 00:02:04,469
is linked to a vm like the network the

00:02:01,290 --> 00:02:07,259
networking rules you gotta restore it by

00:02:04,469 --> 00:02:09,509
hand either by calling the classic api's

00:02:07,259 --> 00:02:13,200
or by maintaining some set of scripts

00:02:09,509 --> 00:02:13,800
that do this calls for you so all that

00:02:13,200 --> 00:02:16,440
create

00:02:13,800 --> 00:02:19,110
the demand for the third party service

00:02:16,440 --> 00:02:22,230
what are the advantages of using this

00:02:19,110 --> 00:02:25,500
service first of all it lets admin to

00:02:22,230 --> 00:02:28,530
configure the dr just by using the dr UI

00:02:25,500 --> 00:02:31,860
and AP is you don't have to set up and

00:02:28,530 --> 00:02:34,200
maintain the any extra scripts it can

00:02:31,860 --> 00:02:37,170
eat well it prepares the entire vm

00:02:34,200 --> 00:02:39,080
including all the lead at metadata like

00:02:37,170 --> 00:02:41,550
the network and networking rules and

00:02:39,080 --> 00:02:44,490
when you restore vm you restore the

00:02:41,550 --> 00:02:48,840
entire package it can recover vm cross

00:02:44,490 --> 00:02:50,970
zones when it creates the recovery

00:02:48,840 --> 00:02:52,860
object it does the real-time update for

00:02:50,970 --> 00:02:55,680
the subject anytime anything changes for

00:02:52,860 --> 00:02:59,190
the original p.m. it helps to keep them

00:02:55,680 --> 00:03:01,620
in time to recover very low it also

00:02:59,190 --> 00:03:03,450
provides a tiered dr service if you

00:03:01,620 --> 00:03:05,760
think that some applications are more

00:03:03,450 --> 00:03:08,370
important than the others you can choose

00:03:05,760 --> 00:03:13,770
to recover them first and charge based

00:03:08,370 --> 00:03:17,010
on that there are some things that dr

00:03:13,770 --> 00:03:18,900
service doesn't cover it doesn't do

00:03:17,010 --> 00:03:21,090
actual storage replication in version

00:03:18,900 --> 00:03:23,370
one storage replication has to be

00:03:21,090 --> 00:03:25,860
maintained outside of the clouds tag it

00:03:23,370 --> 00:03:28,350
can be any third-party solutions like

00:03:25,860 --> 00:03:31,140
the netip snapmirror or you can use a

00:03:28,350 --> 00:03:32,820
simple are saying you can find certain

00:03:31,140 --> 00:03:35,310
advantages in this approach let's say

00:03:32,820 --> 00:03:37,590
customer will reuse some replication

00:03:35,310 --> 00:03:39,690
solutions prior to installing the dr he

00:03:37,590 --> 00:03:42,120
can continue using it and just install

00:03:39,690 --> 00:03:44,430
the dr on top of it we are planning to

00:03:42,120 --> 00:03:48,480
add support for storage replication in

00:03:44,430 --> 00:03:50,040
the next dr release very important

00:03:48,480 --> 00:03:52,590
questions which version of cloth stack

00:03:50,040 --> 00:03:55,709
is supported by dr the dr will work with

00:03:52,590 --> 00:03:58,290
the CloudStack 4.5 version and it will

00:03:55,709 --> 00:04:00,239
work for the next citrix cloud platform

00:03:58,290 --> 00:04:03,090
version that is based on for that for

00:04:00,239 --> 00:04:05,580
apache release why such a difference is

00:04:03,090 --> 00:04:08,610
just because some things was too late to

00:04:05,580 --> 00:04:13,040
put to the Apache for that for release

00:04:08,610 --> 00:04:13,040
so we just put them into for that five

00:04:13,370 --> 00:04:17,790
why developed by development the product

00:04:16,200 --> 00:04:21,269
I had to follow certain design

00:04:17,790 --> 00:04:24,150
principles I had to develop the DRS a

00:04:21,269 --> 00:04:26,400
plug-in in version one with the ability

00:04:24,150 --> 00:04:27,470
to run as a separate service in the

00:04:26,400 --> 00:04:32,639
future release

00:04:27,470 --> 00:04:34,409
so it means no changes should be done to

00:04:32,639 --> 00:04:37,800
the clouds tech or services packages

00:04:34,409 --> 00:04:39,629
that are just specific to the dr and the

00:04:37,800 --> 00:04:41,909
dr dependencies on the cloud stabbed

00:04:39,629 --> 00:04:44,639
jars should be minimal so so far i'm

00:04:41,909 --> 00:04:47,759
using just cloudy api gr and cloud util

00:04:44,639 --> 00:04:49,949
Jerry no direct access to the cloud

00:04:47,759 --> 00:04:52,590
stack database no data manipulation

00:04:49,949 --> 00:04:54,539
through the database queries all data

00:04:52,590 --> 00:04:58,379
should be requested and modified only

00:04:54,539 --> 00:05:00,030
using cloud tech ap is gr service

00:04:58,379 --> 00:05:03,419
doesn't have its own database in version

00:05:00,030 --> 00:05:05,669
one all the data that gr needs to use is

00:05:03,419 --> 00:05:07,919
stored in form of clouds tech metadata

00:05:05,669 --> 00:05:09,780
in the clouds tag every object like the

00:05:07,919 --> 00:05:11,849
user vm volume has a correspondent

00:05:09,780 --> 00:05:14,669
metadata table where you can store all

00:05:11,849 --> 00:05:16,259
third-party details and you might choose

00:05:14,669 --> 00:05:19,889
if you want to show each an end user or

00:05:16,259 --> 00:05:21,300
hide it from him the feature was build

00:05:19,889 --> 00:05:23,819
around the fog that mean time between

00:05:21,300 --> 00:05:25,860
failures is very high because own

00:05:23,819 --> 00:05:28,469
failures don't happen too often so what

00:05:25,860 --> 00:05:30,599
it means for a cloud tell 4dr plugin it

00:05:28,469 --> 00:05:32,789
means that when you deploy the young in

00:05:30,599 --> 00:05:35,479
the original zone and the recovery

00:05:32,789 --> 00:05:37,740
object fails to create by some reason

00:05:35,479 --> 00:05:39,900
because something is misconfigured in

00:05:37,740 --> 00:05:42,479
the recovery zone we never failed the

00:05:39,900 --> 00:05:45,210
original vm deployment are we always let

00:05:42,479 --> 00:05:46,650
admin go and fix things then come back

00:05:45,210 --> 00:05:52,289
to the dr plugin and trigger the

00:05:46,650 --> 00:05:53,699
preparation again on this picture i'm

00:05:52,289 --> 00:05:56,190
going to show you how cloud step

00:05:53,699 --> 00:06:00,210
deployment is done so the clause text

00:05:56,190 --> 00:06:03,990
service consists of four parts dr uija

00:06:00,210 --> 00:06:09,020
plug-in API plug in your server and dr

00:06:03,990 --> 00:06:09,020
events listener on the installation

00:06:12,080 --> 00:06:20,940
which part is moved to appropriate

00:06:15,210 --> 00:06:22,860
cloudstack location and as already

00:06:20,940 --> 00:06:26,069
mentioned is going to run as a part of

00:06:22,860 --> 00:06:27,629
the clouds to add process so now i'm

00:06:26,069 --> 00:06:32,370
going to show you how that these parts

00:06:27,629 --> 00:06:34,949
communicate with each other so all the

00:06:32,370 --> 00:06:40,950
calls to the dr services can be made

00:06:34,949 --> 00:06:43,260
either through the gr api plugin or the

00:06:40,950 --> 00:06:44,790
was also dr evans listener the listens

00:06:43,260 --> 00:06:46,860
to specific events happening on the

00:06:44,790 --> 00:06:49,290
clouds tech side for example vm

00:06:46,860 --> 00:06:51,840
deployment events or any changes that

00:06:49,290 --> 00:06:53,880
done for the vm Klaus tech publishes

00:06:51,840 --> 00:06:56,580
this amounts to the event bus and the

00:06:53,880 --> 00:06:59,580
our plug-in listens to them and reports

00:06:56,580 --> 00:07:01,380
back to the dr service so let's say

00:06:59,580 --> 00:07:03,870
something changed for the vm word the vm

00:07:01,380 --> 00:07:06,210
got deployed gr service node knows what

00:07:03,870 --> 00:07:09,960
to do whether to deploy a vm one to just

00:07:06,210 --> 00:07:11,730
update the recovery vm and as i already

00:07:09,960 --> 00:07:13,440
mentioned the dr service doesn't talk

00:07:11,730 --> 00:07:15,090
directly to the cloud tech orchestration

00:07:13,440 --> 00:07:21,030
engine all the calls are done through

00:07:15,090 --> 00:07:24,690
the cloud tech aps the DRS sir dr

00:07:21,030 --> 00:07:27,330
process is logically split into four

00:07:24,690 --> 00:07:30,710
stages configuration is very actually

00:07:27,330 --> 00:07:34,260
configure the their service itself

00:07:30,710 --> 00:07:37,830
preparation is when vm gets prepared for

00:07:34,260 --> 00:07:41,370
failover fell over it's when vm gets

00:07:37,830 --> 00:07:44,250
recovered to the recovery zone fell back

00:07:41,370 --> 00:07:47,370
when we move vm back to the original

00:07:44,250 --> 00:07:50,250
zone once the zone is recovered i'm

00:07:47,370 --> 00:07:54,110
going to go through each stages for each

00:07:50,250 --> 00:07:57,960
stage in more details on the next slides

00:07:54,110 --> 00:08:00,330
so what do you need to do to configure

00:07:57,960 --> 00:08:01,950
their first of all of course you have to

00:08:00,330 --> 00:08:05,550
link the active zone with the recovery

00:08:01,950 --> 00:08:07,830
zone then you got to configure your dr

00:08:05,550 --> 00:08:10,920
offerings in the dr offerings you can

00:08:07,830 --> 00:08:13,500
specify mean time to recover for example

00:08:10,920 --> 00:08:16,440
24 hours one hour and you can charge

00:08:13,500 --> 00:08:18,210
your customer based on that also you

00:08:16,440 --> 00:08:21,240
might want to tag your storages so all

00:08:18,210 --> 00:08:28,230
your dr enabled volumes can be placed in

00:08:21,240 --> 00:08:31,380
a certain storages only preparing vm

00:08:28,230 --> 00:08:33,599
fulfill over you can trigger the

00:08:31,380 --> 00:08:37,169
preparation other by calling the api

00:08:33,599 --> 00:08:41,280
that you are enabled vm or you can use

00:08:37,169 --> 00:08:44,460
the word you can listen to the events

00:08:41,280 --> 00:08:47,010
coming from the clouds tag and react

00:08:44,460 --> 00:08:51,090
upon let's say the vm gets deployed from

00:08:47,010 --> 00:08:53,220
the journey boat service offering the dr

00:08:51,090 --> 00:08:54,310
service reacts and deploys the vm in the

00:08:53,220 --> 00:08:57,250
recovery zone

00:08:54,310 --> 00:08:59,860
the recovery visit vm is nothing more

00:08:57,250 --> 00:09:02,080
than the metadata in the recovery zone

00:08:59,860 --> 00:09:05,860
it doesn't occupy any physical resources

00:09:02,080 --> 00:09:08,890
no volumes that created this point no

00:09:05,860 --> 00:09:11,950
cpu memory resources are allocated no

00:09:08,890 --> 00:09:14,589
networks are implemented and the

00:09:11,950 --> 00:09:16,600
recovery vm metadata is invisible to an

00:09:14,589 --> 00:09:19,060
end user and he's definitely not being

00:09:16,600 --> 00:09:22,680
charged for that all he can see is the

00:09:19,060 --> 00:09:25,779
vm in the original zone at this point

00:09:22,680 --> 00:09:28,720
and this light i'm going to show you how

00:09:25,779 --> 00:09:35,020
the preparations actually be handled by

00:09:28,720 --> 00:09:38,830
the dr plugin so the vm gets deployed in

00:09:35,020 --> 00:09:40,450
the active zone it has just one nic the

00:09:38,830 --> 00:09:43,480
dr service immediately picks up this

00:09:40,450 --> 00:09:48,220
event and crease the vm in the recovery

00:09:43,480 --> 00:09:50,020
zone now let's say after some point user

00:09:48,220 --> 00:09:52,570
decides to add his user vm and the

00:09:50,020 --> 00:09:55,570
active zone to another network and in

00:09:52,570 --> 00:09:58,600
unique gets plug to the user vm dr

00:09:55,570 --> 00:10:05,710
service listens to this event and plug

00:09:58,600 --> 00:10:07,839
the nick in the recovery zone so the

00:10:05,710 --> 00:10:10,780
fell over the disaster actual happened

00:10:07,839 --> 00:10:13,480
how does dr plugin knows that something

00:10:10,780 --> 00:10:15,420
wrong happened to the to the zone there

00:10:13,480 --> 00:10:18,070
is no automatic indication of that

00:10:15,420 --> 00:10:20,950
basically the dr plugin doesn't doesn't

00:10:18,070 --> 00:10:23,410
know if if anything go goes running the

00:10:20,950 --> 00:10:25,540
in the original zone administrator has

00:10:23,410 --> 00:10:28,150
to monitor it and report to the dr

00:10:25,540 --> 00:10:31,200
service by invoking the certainly PA

00:10:28,150 --> 00:10:34,330
code to fell over the accounts liam's

00:10:31,200 --> 00:10:42,700
all the dr service does it just prepares

00:10:34,330 --> 00:10:44,380
the vm start in the recovery zone on

00:10:42,700 --> 00:10:47,050
this slide i'm going to show you how the

00:10:44,380 --> 00:10:49,690
fell over process is being done so here

00:10:47,050 --> 00:10:53,320
on the picture you see X's on whether

00:10:49,690 --> 00:10:55,690
actual vm runs it has two volumes on the

00:10:53,320 --> 00:10:58,320
clouds texture each one storage

00:10:55,690 --> 00:11:01,510
represent the actual physical storage

00:10:58,320 --> 00:11:04,060
physical storage one and there is a data

00:11:01,510 --> 00:11:05,860
replication done from physical storage

00:11:04,060 --> 00:11:06,380
one to physical storage to buy NetApp's

00:11:05,860 --> 00:11:08,420
net mere

00:11:06,380 --> 00:11:10,340
as you can see from the picture there's

00:11:08,420 --> 00:11:12,860
no representation of physical storage to

00:11:10,340 --> 00:11:16,370
to the recoveries on it hasn't been

00:11:12,860 --> 00:11:19,340
introduced to the clouds dead yet so

00:11:16,370 --> 00:11:21,740
once that one staff administrator

00:11:19,340 --> 00:11:24,770
triggers the failover process the first

00:11:21,740 --> 00:11:28,130
step we do we introduce the physical

00:11:24,770 --> 00:11:31,580
storage to the recovery zone and all the

00:11:28,130 --> 00:11:37,460
volumes get discovered on the

00:11:31,580 --> 00:11:41,380
corresponding hypervisors then we

00:11:37,460 --> 00:11:41,380
connect the swallows to the vm metadata

00:11:41,770 --> 00:11:47,180
so then what happens in that to the DM

00:11:44,330 --> 00:11:49,220
in the active zone in the vm in the

00:11:47,180 --> 00:11:51,080
active zone we detach all the volumes we

00:11:49,220 --> 00:11:53,120
don't destroy the vm we just attach all

00:11:51,080 --> 00:11:56,660
the volumes and leave them around in

00:11:53,120 --> 00:11:59,080
case admin needs to access them then the

00:11:56,660 --> 00:12:02,080
vm in the active zone gets disabled and

00:11:59,080 --> 00:12:05,480
vm in the recovery zone get started and

00:12:02,080 --> 00:12:07,400
the next very important step you could

00:12:05,480 --> 00:12:13,100
see that the vm in the active zone has a

00:12:07,400 --> 00:12:15,140
external uid one we do the UID swap so

00:12:13,100 --> 00:12:17,540
the UID the vm in the recover is on

00:12:15,140 --> 00:12:19,310
you'll have the very same you ID what do

00:12:17,540 --> 00:12:21,470
we need to do that is just because user

00:12:19,310 --> 00:12:24,890
relies on this you ready to be the same

00:12:21,470 --> 00:12:27,230
croissants and all he can see during any

00:12:24,890 --> 00:12:30,020
period of time is just one vm having one

00:12:27,230 --> 00:12:36,650
uid the only one information the changes

00:12:30,020 --> 00:12:39,230
in the recoveries all information well

00:12:36,650 --> 00:12:40,700
dr is busy recovering user vm the

00:12:39,230 --> 00:12:43,430
cloudstack administrator is busy

00:12:40,700 --> 00:12:47,060
recovering his zone from the failure as

00:12:43,430 --> 00:12:49,430
soon as zone is back up we advise to

00:12:47,060 --> 00:12:52,160
move the filled over vm back to its

00:12:49,430 --> 00:12:54,050
original zone why why why do we need to

00:12:52,160 --> 00:12:55,460
do that just think about it recovery

00:12:54,050 --> 00:12:58,100
zone can serve as a recovery for

00:12:55,460 --> 00:13:00,710
multiple zones in the cloud and its

00:12:58,100 --> 00:13:02,870
resources are not unlimited so you want

00:13:00,710 --> 00:13:06,380
might want to spare them by moving vm

00:13:02,870 --> 00:13:07,910
back to the original zone the fell back

00:13:06,380 --> 00:13:11,300
process is pretty similar to the

00:13:07,910 --> 00:13:13,280
failover process the vm metadata is

00:13:11,300 --> 00:13:15,200
preserved in the original zone and we

00:13:13,280 --> 00:13:18,499
are going to recover to that very same

00:13:15,200 --> 00:13:21,349
metadata the only one new thing the

00:13:18,499 --> 00:13:23,179
we introduce we reintroduce the volumes

00:13:21,349 --> 00:13:24,999
back from the recoveries on to the

00:13:23,179 --> 00:13:27,649
original zone why don't you use the

00:13:24,999 --> 00:13:29,839
original volumes just because customer

00:13:27,649 --> 00:13:31,849
but already written something to the

00:13:29,839 --> 00:13:35,029
volumes in the recovery zone and we have

00:13:31,849 --> 00:13:36,739
to respect this information then we do

00:13:35,029 --> 00:13:38,629
just the same be disabled a vm in the

00:13:36,739 --> 00:13:46,569
recovery zone enabled vm in the original

00:13:38,629 --> 00:13:48,859
zone do the UID swap on this slides

00:13:46,569 --> 00:13:52,369
there is i'm going to show you some

00:13:48,859 --> 00:13:54,019
information that dr plug-in stores in

00:13:52,369 --> 00:13:56,689
the clouds tag database in form of

00:13:54,019 --> 00:13:59,929
metadata details so you can see there is

00:13:56,689 --> 00:14:02,959
a user vm table and it has a user vmd

00:13:59,929 --> 00:14:06,259
tl's table correspondent it what dr

00:14:02,959 --> 00:14:08,899
needs to know about is what object in

00:14:06,259 --> 00:14:12,829
the recovery zone is linked to this

00:14:08,899 --> 00:14:16,219
original vm so it's a dr recovery ID the

00:14:12,829 --> 00:14:18,049
state of the dr on this object let's say

00:14:16,219 --> 00:14:21,589
something failed during the pre creation

00:14:18,049 --> 00:14:23,779
so we report back the failure and the dr

00:14:21,589 --> 00:14:25,939
alert so we generate the dr alert on per

00:14:23,779 --> 00:14:27,319
diem basis so you can actually see the

00:14:25,939 --> 00:14:29,839
reason for the failure while the

00:14:27,319 --> 00:14:33,049
preparation failed all these details are

00:14:29,839 --> 00:14:35,449
being returned to the API color if you

00:14:33,049 --> 00:14:37,069
make the list virtual machine calls you

00:14:35,449 --> 00:14:39,799
can see all the dr related information

00:14:37,069 --> 00:14:42,829
even the regulator can see it he can see

00:14:39,799 --> 00:14:49,489
what's going on with his liam's in terms

00:14:42,829 --> 00:14:51,439
of the dr now who controls the dr

00:14:49,489 --> 00:14:53,749
process who can do the configuration who

00:14:51,439 --> 00:14:56,119
can do the failover only route

00:14:53,749 --> 00:14:58,699
administrators in charge of doing so he

00:14:56,119 --> 00:15:01,609
crazed the dr offerings he can fell over

00:14:58,699 --> 00:15:03,589
the user VMS all the user vm needs to do

00:15:01,609 --> 00:15:05,239
in order to enable the dr is just to

00:15:03,589 --> 00:15:08,470
start the vm from the dr enabled

00:15:05,239 --> 00:15:11,179
offering once the game is started he can

00:15:08,470 --> 00:15:13,429
he can monitor he can monitor the dr

00:15:11,179 --> 00:15:15,169
state of his vm he can see whether it's

00:15:13,429 --> 00:15:18,859
being prepared fulfill over a failed

00:15:15,169 --> 00:15:21,819
over or fell back he can see that errors

00:15:18,859 --> 00:15:24,229
that happened during the dr the alerts

00:15:21,819 --> 00:15:25,759
he can add pic and report back to the

00:15:24,229 --> 00:15:29,839
admin sane or something went wrong with

00:15:25,759 --> 00:15:31,729
my vm how do i fix it we also show him

00:15:29,839 --> 00:15:32,060
the recoveries on information he might

00:15:31,729 --> 00:15:33,350
want to

00:15:32,060 --> 00:15:36,320
Oh in which is on the vm is going to

00:15:33,350 --> 00:15:39,110
recovery and the last one is very

00:15:36,320 --> 00:15:40,610
important we show the public the

00:15:39,110 --> 00:15:43,970
recovery public IP address information

00:15:40,610 --> 00:15:47,390
let's say prior to a failover admin one

00:15:43,970 --> 00:15:50,060
user wants to configure his DNS with a

00:15:47,390 --> 00:15:52,520
active passive mode in active mode he

00:15:50,060 --> 00:15:55,070
sets up the public IP addresses in his

00:15:52,520 --> 00:15:57,920
original zone in the passive mode he

00:15:55,070 --> 00:16:00,860
sets up the recovery IPS once he a ms

00:15:57,920 --> 00:16:02,270
feld / Higgins's flips the modes and his

00:16:00,860 --> 00:16:08,810
web app can continue working the same

00:16:02,270 --> 00:16:10,930
way overall it's been a pretty easy

00:16:08,810 --> 00:16:12,770
experience riding on top of a cloud stag

00:16:10,930 --> 00:16:15,620
especially considering all the

00:16:12,770 --> 00:16:18,350
architectural enhancement that were done

00:16:15,620 --> 00:16:21,560
during the past two years but there are

00:16:18,350 --> 00:16:24,680
certain things that I fixed in the

00:16:21,560 --> 00:16:27,290
clouds tech API side first of all some

00:16:24,680 --> 00:16:30,620
data was missing in the closet a KPI

00:16:27,290 --> 00:16:32,720
responses like for example user data you

00:16:30,620 --> 00:16:34,970
were able to set up user data using the

00:16:32,720 --> 00:16:38,750
API but you couldn't retrieve the data

00:16:34,970 --> 00:16:40,460
through the EPS some resource details

00:16:38,750 --> 00:16:44,210
tables were missing for certain

00:16:40,460 --> 00:16:46,460
cloudstack resources I've edited there

00:16:44,210 --> 00:16:48,050
was no way for a cloud tech services to

00:16:46,460 --> 00:16:52,720
publish the alerts through the clouds

00:16:48,050 --> 00:16:55,730
tech api's I've added the EPF of that

00:16:52,720 --> 00:16:58,300
there was no way to monitor to manage

00:16:55,730 --> 00:17:00,860
the external uid basically at the uid

00:16:58,300 --> 00:17:03,620
the clock was something that cloudstack

00:17:00,860 --> 00:17:05,720
used to set for for you there was no way

00:17:03,620 --> 00:17:08,630
to provide the UID during the vm

00:17:05,720 --> 00:17:13,490
deployment for example so we enabled

00:17:08,630 --> 00:17:15,980
that there are some things and clouds

00:17:13,490 --> 00:17:18,920
tag that I'm not growing enough for

00:17:15,980 --> 00:17:20,540
example you when you subtly when you

00:17:18,920 --> 00:17:22,760
deploy to the year you can postpone and

00:17:20,540 --> 00:17:25,700
start till the point you need it or when

00:17:22,760 --> 00:17:27,680
you create a network you it's not it's

00:17:25,700 --> 00:17:29,450
not getting implemented right away it

00:17:27,680 --> 00:17:31,610
gets implemented on the one the first vm

00:17:29,450 --> 00:17:33,980
stars net for some resources this

00:17:31,610 --> 00:17:36,860
behavior wasn't exactly the same like

00:17:33,980 --> 00:17:38,780
for example for BBC at the moment PPC

00:17:36,860 --> 00:17:41,600
was created we implemented by stirring

00:17:38,780 --> 00:17:44,150
the virtual router and occupying the IP

00:17:41,600 --> 00:17:45,440
resources I've added the way to pass on

00:17:44,150 --> 00:17:47,059
the start

00:17:45,440 --> 00:17:49,220
so basically can create a VPC and

00:17:47,059 --> 00:17:52,809
postpone to start till the time you want

00:17:49,220 --> 00:17:52,809
to actually add a network to the CPC

00:17:54,970 --> 00:17:59,809
there are some things that are still

00:17:57,169 --> 00:18:01,399
missing on the call stack side the very

00:17:59,809 --> 00:18:04,009
important feature there is no single

00:18:01,399 --> 00:18:05,659
sign-on and it made it a little bit

00:18:04,009 --> 00:18:07,700
difficult for services communication

00:18:05,659 --> 00:18:11,480
from services to services I had to use

00:18:07,700 --> 00:18:14,600
the secret key API key sanding sanding

00:18:11,480 --> 00:18:17,389
the request with them and as I've

00:18:14,600 --> 00:18:19,279
already mentioned the resource creation

00:18:17,389 --> 00:18:23,629
in the clouds tech and actual resource

00:18:19,279 --> 00:18:28,190
implementation is my granular enough so

00:18:23,629 --> 00:18:29,899
that has to be fixed as well so the

00:18:28,190 --> 00:18:33,500
summary I want to conclude if if you're

00:18:29,899 --> 00:18:37,070
a developer for any is platform clouds

00:18:33,500 --> 00:18:38,779
tech for example you and whenever you

00:18:37,070 --> 00:18:40,070
develop a new API you always have to

00:18:38,779 --> 00:18:41,990
think about from the end-user

00:18:40,070 --> 00:18:45,289
perspective think about all the use

00:18:41,990 --> 00:18:47,960
cases all the potential user that can

00:18:45,289 --> 00:18:52,399
use your feature and build your API is

00:18:47,960 --> 00:18:54,950
based on that also look out which plugin

00:18:52,399 --> 00:18:56,960
services or bug fixes people do for your

00:18:54,950 --> 00:18:58,399
product sometimes they don't make it to

00:18:56,960 --> 00:18:59,840
the cloud tech sometimes just a set of

00:18:58,399 --> 00:19:02,509
scripts maintained somewhere on the

00:18:59,840 --> 00:19:07,809
github it helps you to identify the gaps

00:19:02,509 --> 00:19:11,750
and any missing pieces in your product

00:19:07,809 --> 00:19:13,809
that's that's it from my side have n

00:19:11,750 --> 00:19:13,809
equations

00:19:16,820 --> 00:19:23,510
I'm came in late so i might have

00:19:19,680 --> 00:19:27,110
listened but to what extent does this

00:19:23,510 --> 00:19:27,110
changes that you made

00:19:27,230 --> 00:19:32,460
to what extent are they usable for

00:19:29,970 --> 00:19:34,850
accounting counseling for instance the

00:19:32,460 --> 00:19:37,139
external

00:19:34,850 --> 00:19:39,480
so all changes that have made are made

00:19:37,139 --> 00:19:40,860
on the services layer APL layer so

00:19:39,480 --> 00:19:42,809
basically it makes things easier for

00:19:40,860 --> 00:19:45,630
services integrated into the clouds tag

00:19:42,809 --> 00:19:54,509
I didn't change an accord code or sell

00:19:45,630 --> 00:19:56,970
your code you are replicating so it

00:19:54,509 --> 00:20:01,049
seems like a replicating some cod on the

00:19:56,970 --> 00:20:05,779
outside are you replicating the end user

00:20:01,049 --> 00:20:08,009
so the user API no this is these are

00:20:05,779 --> 00:20:19,200
similar crossbones you don't support

00:20:08,009 --> 00:20:21,149
cross region dr in this release as i

00:20:19,200 --> 00:20:22,860
said i'd done reserve there's no no

00:20:21,149 --> 00:20:24,899
physical resources are occupied and

00:20:22,860 --> 00:20:27,870
they're just two resources that we

00:20:24,899 --> 00:20:30,059
reserve one is the public IP address for

00:20:27,870 --> 00:20:34,169
your network and another one is the

00:20:30,059 --> 00:20:36,000
guest IP address for your vm know CPR no

00:20:34,169 --> 00:20:38,009
memory so VA means is just as a meta

00:20:36,000 --> 00:20:41,659
data in the database it doesn't actually

00:20:38,009 --> 00:20:41,659
start or create on the back end

00:20:48,770 --> 00:20:52,710
educated

00:20:50,570 --> 00:20:55,520
doors

00:20:52,710 --> 00:20:55,520
yars life

00:20:58,050 --> 00:21:01,590
makes no logical and map the storage is

00:21:00,180 --> 00:21:03,570
in the original and recovery zone

00:21:01,590 --> 00:21:06,390
someone you add a replicated storage to

00:21:03,570 --> 00:21:08,220
the recovery zone this we say okay the

00:21:06,390 --> 00:21:10,980
original storage for this is this one

00:21:08,220 --> 00:21:12,900
right and basically one we rely on the

00:21:10,980 --> 00:21:14,850
fact that the path to the volume is

00:21:12,900 --> 00:21:16,830
going to be the same the vhd name is

00:21:14,850 --> 00:21:19,200
going to be the same and then on the

00:21:16,830 --> 00:21:21,630
hypervisor it just does that medic

00:21:19,200 --> 00:21:23,520
discovery for these volumes and we all

00:21:21,630 --> 00:21:30,150
we need to do is update metadata in the

00:21:23,520 --> 00:21:31,590
database the recovery volumes these are

00:21:30,150 --> 00:21:33,360
there any hypervisor of limitations for

00:21:31,590 --> 00:21:41,490
this or is this so this release we go

00:21:33,360 --> 00:21:44,880
support kvm be over an exam resort is it

00:21:41,490 --> 00:21:46,860
or is it just any other side because if

00:21:44,880 --> 00:21:49,590
i come razon is it does it have to be

00:21:46,860 --> 00:21:53,220
dedicated just sitting waiting or it's

00:21:49,590 --> 00:21:55,440
just any other zone you have you can

00:21:53,220 --> 00:21:57,930
regain his own so the zone can active

00:21:55,440 --> 00:22:00,360
can act as active and the recovery zone

00:21:57,930 --> 00:22:02,520
at the same time and both if you set up

00:22:00,360 --> 00:22:04,530
two zones you can say okay zone 2 is

00:22:02,520 --> 00:22:07,610
recovers on for zone 1 and zone one is

00:22:04,530 --> 00:22:07,610
recovers on for some cheer

00:22:11,040 --> 00:22:16,530
so if you've moved over to your

00:22:13,320 --> 00:22:20,040
desired add the user they create a new

00:22:16,530 --> 00:22:21,810
virtual machine there when you pick that

00:22:20,040 --> 00:22:26,250
up and take that back to their original

00:22:21,810 --> 00:22:29,670
zone afterwards if you so if you deploy

00:22:26,250 --> 00:22:32,220
a new vm in the recovery zone will will

00:22:29,670 --> 00:22:34,380
we can recover to the originals on only

00:22:32,220 --> 00:22:37,110
when this recovery zone is set for the

00:22:34,380 --> 00:22:39,300
recovery zone of the original only a

00:22:37,110 --> 00:22:42,540
also any changes you make to the euro

00:22:39,300 --> 00:22:44,430
fell back TM in the recovery zone they

00:22:42,540 --> 00:22:48,800
don't get reflected back to the original

00:22:44,430 --> 00:22:48,800
zone only volume changes we respect

00:22:51,670 --> 00:22:56,690
ask you to pull back to the slide where

00:22:53,680 --> 00:23:02,510
you have in storage this one

00:22:56,690 --> 00:23:07,190
this one hmm guess you I can see it

00:23:02,510 --> 00:23:09,950
sorry hopefully this question that one

00:23:07,190 --> 00:23:11,960
does white maybe maybe you would

00:23:09,950 --> 00:23:13,730
consider in the future instead of using

00:23:11,960 --> 00:23:17,240
this whole physical storage application

00:23:13,730 --> 00:23:20,390
part all we can do is replicate the

00:23:17,240 --> 00:23:24,550
templates from one set of water covers

00:23:20,390 --> 00:23:27,530
on to the other and let the pocket chef

00:23:24,550 --> 00:23:30,620
configure everything else but it means

00:23:27,530 --> 00:23:32,510
you mean that ok when you replicate the

00:23:30,620 --> 00:23:34,010
template how do you tell you the gate

00:23:32,510 --> 00:23:39,080
all the changes that happening to their

00:23:34,010 --> 00:23:44,990
be able to bottoms they restore to some

00:23:39,080 --> 00:23:47,120
other location so i mean this the vm the

00:23:44,990 --> 00:23:48,590
catalyst is replicated through something

00:23:47,120 --> 00:23:50,060
else that we don't have to worry about

00:23:48,590 --> 00:23:52,500
that

00:23:50,060 --> 00:23:55,890
as long as the template is there the

00:23:52,500 --> 00:23:58,230
metadata is there when you power on the

00:23:55,890 --> 00:24:00,450
vm template is well with it you know

00:23:58,230 --> 00:24:04,860
these are you willing do you want to

00:24:00,450 --> 00:24:06,660
basically wanna know yeah I've no idea

00:24:04,860 --> 00:24:08,580
should be unique because basically 10

00:24:06,660 --> 00:24:10,260
you want a physical storage to pre exist

00:24:08,580 --> 00:24:14,880
in the recovery zone before the actual

00:24:10,260 --> 00:24:17,460
fellow ever happens what day it is you

00:24:14,880 --> 00:24:18,900
know the secondary storage case that was

00:24:17,460 --> 00:24:20,610
the other recovery it's were thinking

00:24:18,900 --> 00:24:22,410
about storage application might be

00:24:20,610 --> 00:24:24,150
covered in the next release in this

00:24:22,410 --> 00:24:26,870
release we rely on the third-party

00:24:24,150 --> 00:24:26,870
solutions

00:24:31,980 --> 00:24:34,760

YouTube URL: https://www.youtube.com/watch?v=2YEXC3WNL0s


