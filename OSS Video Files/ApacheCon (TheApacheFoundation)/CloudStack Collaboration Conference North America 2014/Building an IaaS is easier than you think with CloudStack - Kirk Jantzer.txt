Title: Building an IaaS is easier than you think with CloudStack - Kirk Jantzer
Publication date: 2014-05-07
Playlist: CloudStack Collaboration Conference North America 2014
Description: 
	CloudStack Collaboration Conference North America 2014
Captions: 
	00:00:00,000 --> 00:00:06,930
hi guys my name's Kurt chancer and today

00:00:04,500 --> 00:00:09,269
I want to talk about building and I I as

00:00:06,930 --> 00:00:13,410
and how it's easier than you think if

00:00:09,269 --> 00:00:16,460
you try and do with CloudStack they'll

00:00:13,410 --> 00:00:18,930
give you a little background this is me

00:00:16,460 --> 00:00:22,590
if any of you guys attended the dojo

00:00:18,930 --> 00:00:24,330
speak is a talk yesterday I whatever a

00:00:22,590 --> 00:00:26,310
little bit my background of work came

00:00:24,330 --> 00:00:28,460
from a data center did all the grunt

00:00:26,310 --> 00:00:30,660
work of moving tapes cables all

00:00:28,460 --> 00:00:33,270
rebooting servers for clients and stuff

00:00:30,660 --> 00:00:34,829
like that work my way up to a systems

00:00:33,270 --> 00:00:37,770
administrator / engineer at

00:00:34,829 --> 00:00:41,190
careerbuilder calm and then got promoted

00:00:37,770 --> 00:00:44,730
to team lead in 2011 and managed about a

00:00:41,190 --> 00:00:46,770
thousand servers and then in March of

00:00:44,730 --> 00:00:49,559
this year actually moved from Atlanta to

00:00:46,770 --> 00:00:52,949
Santa Monica for a senior engineer role

00:00:49,559 --> 00:00:54,930
with a cornerstone ondemand have a few

00:00:52,949 --> 00:00:57,120
certifications and Adele tech center

00:00:54,930 --> 00:00:59,579
rock star and what that means it's just

00:00:57,120 --> 00:01:03,329
I'm social twitter and stuff like that

00:00:59,579 --> 00:01:05,610
with talking about their products as my

00:01:03,329 --> 00:01:09,240
about me link and my twitter handle if

00:01:05,610 --> 00:01:11,280
you want to follow me a little bit of an

00:01:09,240 --> 00:01:13,110
abstract some people have a myth that

00:01:11,280 --> 00:01:15,780
they say cloudstack isn't for them and

00:01:13,110 --> 00:01:18,060
it may not be it's a reality like it

00:01:15,780 --> 00:01:21,390
does have countless use cases but it may

00:01:18,060 --> 00:01:23,640
not be for everybody same with OpenStack

00:01:21,390 --> 00:01:25,320
aid everything's got its fit for

00:01:23,640 --> 00:01:28,229
everybody so not one thing will fit all

00:01:25,320 --> 00:01:29,759
your problems and classic won't fix all

00:01:28,229 --> 00:01:32,150
your problem is a myth but if it used

00:01:29,759 --> 00:01:34,259
correctly can make your life easier and

00:01:32,150 --> 00:01:36,030
classic is better or worse than

00:01:34,259 --> 00:01:37,560
OpenStack and neither is truly better

00:01:36,030 --> 00:01:40,200
than one of the other or they each have

00:01:37,560 --> 00:01:43,200
their own purpose and it's not that hard

00:01:40,200 --> 00:01:45,119
to get started with cloudstack they

00:01:43,200 --> 00:01:47,250
would instead OS yum install KOSDAQ dash

00:01:45,119 --> 00:01:49,799
management or ubuntu apt-get install

00:01:47,250 --> 00:01:52,320
class tech management there's a few more

00:01:49,799 --> 00:01:54,930
steps but it's really that simple to get

00:01:52,320 --> 00:01:57,810
started these are some of the obstacles

00:01:54,930 --> 00:01:59,520
I faced before implementing cloudstack I

00:01:57,810 --> 00:02:02,850
couldn't get hardware fast enough from

00:01:59,520 --> 00:02:04,409
our vendor we had three week we were in

00:02:02,850 --> 00:02:07,799
the whole agile mindset and so we had

00:02:04,409 --> 00:02:08,849
three week project cycles because of

00:02:07,799 --> 00:02:10,920
some of the vendors that we use we

00:02:08,849 --> 00:02:12,350
couldn't guarantee that if we ordered a

00:02:10,920 --> 00:02:14,660
block of servers that we wouldn't get

00:02:12,350 --> 00:02:17,690
some that were dead on arrival so if I

00:02:14,660 --> 00:02:19,340
ordered 50 servers for a project and I

00:02:17,690 --> 00:02:21,380
needed all 50 for that project there's

00:02:19,340 --> 00:02:25,220
sometimes some wouldn't work out of the

00:02:21,380 --> 00:02:26,870
box and when we had to change our script

00:02:25,220 --> 00:02:29,330
for a new project or team the required

00:02:26,870 --> 00:02:31,400
resources in time to get that all

00:02:29,330 --> 00:02:34,040
configured and then that delayed the

00:02:31,400 --> 00:02:36,260
project even further and I couldn't

00:02:34,040 --> 00:02:37,790
forecast what people needed because they

00:02:36,260 --> 00:02:41,300
were working on short life support

00:02:37,790 --> 00:02:43,910
project cycles as well another problem

00:02:41,300 --> 00:02:45,080
at a face was that they senior

00:02:43,910 --> 00:02:46,460
management always wanted to throw

00:02:45,080 --> 00:02:49,130
hardware at the problem because it was

00:02:46,460 --> 00:02:51,760
cheaper and faster to order servers than

00:02:49,130 --> 00:02:53,690
to optimize the code and then newer

00:02:51,760 --> 00:02:55,550
multi-threaded applications required

00:02:53,690 --> 00:02:57,770
more cords more sockets more RAM and

00:02:55,550 --> 00:03:00,020
more network paths and more discs and

00:02:57,770 --> 00:03:02,690
everything SSD I mean everybody just

00:03:00,020 --> 00:03:07,580
needed more lower latency and higher

00:03:02,690 --> 00:03:10,130
speed an infrastructure is code my team

00:03:07,580 --> 00:03:11,870
only had two admins so automation wasn't

00:03:10,130 --> 00:03:14,180
just a nice to have it was a necessity

00:03:11,870 --> 00:03:15,380
we needed we were doing all our own work

00:03:14,180 --> 00:03:16,790
we were going to the days in a rocking

00:03:15,380 --> 00:03:18,260
around servers cabling our own servers

00:03:16,790 --> 00:03:21,860
imaging our own servers we didn't

00:03:18,260 --> 00:03:23,480
outsource anything we can somebody came

00:03:21,860 --> 00:03:24,470
in long way for automation but there's

00:03:23,480 --> 00:03:26,600
still a lot that could have been done

00:03:24,470 --> 00:03:29,000
for us there's still a lot of post work

00:03:26,600 --> 00:03:33,710
that we didn't we didn't get the time to

00:03:29,000 --> 00:03:37,990
work on so when I got the chance to

00:03:33,710 --> 00:03:40,970
deploy cloudstack I I started off I

00:03:37,990 --> 00:03:42,860
proposed to my management that we needed

00:03:40,970 --> 00:03:44,480
to change the way we were doing or we're

00:03:42,860 --> 00:03:46,790
going to hit a wall at some point we

00:03:44,480 --> 00:03:50,870
were just expanding scaling out way too

00:03:46,790 --> 00:03:52,630
fast so we needed to scale up a little

00:03:50,870 --> 00:03:55,820
bit and do some sort of virtualization

00:03:52,630 --> 00:03:58,160
so my goal for 2013 was to eliminate

00:03:55,820 --> 00:04:00,260
delivery obstacles and delay and delays

00:03:58,160 --> 00:04:01,160
for compute requests and kind of well

00:04:00,260 --> 00:04:03,260
from customers while avoiding

00:04:01,160 --> 00:04:06,230
substantial costs associated with mass

00:04:03,260 --> 00:04:07,760
scale virtualization so this was the the

00:04:06,230 --> 00:04:09,350
workflow prior to implementing

00:04:07,760 --> 00:04:12,080
CloudStack I would get a customer

00:04:09,350 --> 00:04:14,720
request the initial request would come

00:04:12,080 --> 00:04:17,870
from a ticket or something like that and

00:04:14,720 --> 00:04:18,920
so that starts the clock we would order

00:04:17,870 --> 00:04:22,240
the servers if we didn't have enough

00:04:18,920 --> 00:04:24,669
spare capacity and then we would

00:04:22,240 --> 00:04:28,569
this one was always our unknown variable

00:04:24,669 --> 00:04:30,699
because if we if we ordered new servers

00:04:28,569 --> 00:04:32,590
or we ordered a way to do some testing

00:04:30,699 --> 00:04:36,699
if we wanted to start with testing SSDs

00:04:32,590 --> 00:04:38,710
or the you know to switch from AMD or

00:04:36,699 --> 00:04:39,819
intel or anything like that we had to we

00:04:38,710 --> 00:04:42,220
had to go through testing so it's always

00:04:39,819 --> 00:04:44,620
a big variable it could be three weeks

00:04:42,220 --> 00:04:46,539
six weeks to months any number of time

00:04:44,620 --> 00:04:48,210
and dealing with a customer that as a

00:04:46,539 --> 00:04:53,440
three week project cycle just it wasn't

00:04:48,210 --> 00:04:54,970
it wasn't working so when we received

00:04:53,440 --> 00:04:56,440
the servers we unpack them Rackham cable

00:04:54,970 --> 00:04:57,669
and configure the remote access and

00:04:56,440 --> 00:05:01,979
depending on the quantity this can take

00:04:57,669 --> 00:05:04,090
from an hour to add a image of servers

00:05:01,979 --> 00:05:05,259
like so we have a lot of automation

00:05:04,090 --> 00:05:08,020
around this but there's still a lot that

00:05:05,259 --> 00:05:09,849
needed to be automated again this can

00:05:08,020 --> 00:05:12,220
take another hour to a day depending on

00:05:09,849 --> 00:05:14,199
more how many servers we have and then

00:05:12,220 --> 00:05:15,639
we hand off to the customer and so once

00:05:14,199 --> 00:05:17,889
everything is done we can hand it off to

00:05:15,639 --> 00:05:19,030
them but if it's a new new request and

00:05:17,889 --> 00:05:20,289
they need to test things and the need to

00:05:19,030 --> 00:05:23,349
come back to us and we need to change

00:05:20,289 --> 00:05:27,610
things and script or the image or

00:05:23,349 --> 00:05:29,380
whatever and then we can finally once

00:05:27,610 --> 00:05:30,880
we're all once both parties are happy we

00:05:29,380 --> 00:05:34,060
actually close the ticket out and I

00:05:30,880 --> 00:05:37,840
could be two three four months of start

00:05:34,060 --> 00:05:39,729
to end and that just wasn't a one wasn't

00:05:37,840 --> 00:05:41,320
acceptable because I had upwards of ten

00:05:39,729 --> 00:05:42,580
customers and all my customers were

00:05:41,320 --> 00:05:45,190
internal tech teams that were doing

00:05:42,580 --> 00:05:49,409
DevOps tough and so they needed hardware

00:05:45,190 --> 00:05:50,979
fast and so this is what we did in 213

00:05:49,409 --> 00:05:52,930
customers can build their own

00:05:50,979 --> 00:05:56,169
production-ready PCI compliant domain

00:05:52,930 --> 00:06:00,130
available servers via UI or API in less

00:05:56,169 --> 00:06:01,240
than an hour so the customer comes to me

00:06:00,130 --> 00:06:04,740
though they don't even come to me

00:06:01,240 --> 00:06:07,719
anymore they would go through the UI

00:06:04,740 --> 00:06:10,990
click through the steps of building the

00:06:07,719 --> 00:06:13,199
their image or their instance and then

00:06:10,990 --> 00:06:16,990
they're done if they want to use API

00:06:13,199 --> 00:06:19,840
this little if you can see it so it's a

00:06:16,990 --> 00:06:21,599
little cloud monkey script and said it

00:06:19,840 --> 00:06:23,500
will iterate through a hundred times

00:06:21,599 --> 00:06:25,060
deploying the virtual machine to the

00:06:23,500 --> 00:06:27,069
zone using this template service

00:06:25,060 --> 00:06:28,420
offering this name and it will just

00:06:27,069 --> 00:06:31,300
sequence one through

00:06:28,420 --> 00:06:33,190
hundred and it will put in a project and

00:06:31,300 --> 00:06:34,270
it will sleep for five seconds after it

00:06:33,190 --> 00:06:37,870
does each one so we'll give it a ton of

00:06:34,270 --> 00:06:39,190
the API time to process it but with that

00:06:37,870 --> 00:06:40,240
one command you can deploy a hundred

00:06:39,190 --> 00:06:41,830
thousand depending on your

00:06:40,240 --> 00:06:44,620
infrastructure it's really just the

00:06:41,830 --> 00:06:47,050
capacity of your ecosystem and you can

00:06:44,620 --> 00:06:51,270
change this to be different service

00:06:47,050 --> 00:06:53,710
offerings or different templates so and

00:06:51,270 --> 00:06:55,450
then when they're when that's done they

00:06:53,710 --> 00:06:59,380
receive an automated email saying your

00:06:55,450 --> 00:07:02,020
servers ready and it goes from it went

00:06:59,380 --> 00:07:05,050
from days weeks months to less than an

00:07:02,020 --> 00:07:06,670
hour our windows ones took about 55

00:07:05,050 --> 00:07:08,380
minutes and then our Linux ones take

00:07:06,670 --> 00:07:14,140
about 12 to 15 minutes depending on

00:07:08,380 --> 00:07:15,700
which one they did and from there the

00:07:14,140 --> 00:07:17,410
arrows went the other way the there

00:07:15,700 --> 00:07:20,140
wasn't funneling into us it was the

00:07:17,410 --> 00:07:22,300
customers would do their stuff and the

00:07:20,140 --> 00:07:27,760
the only limitation now was the

00:07:22,300 --> 00:07:32,320
ecosystem so the UI would provide us was

00:07:27,760 --> 00:07:34,060
beautiful statistics of how everything

00:07:32,320 --> 00:07:37,780
was this is an actual screenshot of what

00:07:34,060 --> 00:07:40,330
we had we had 27 terabytes of committed

00:07:37,780 --> 00:07:44,020
story a usable storage we had 13

00:07:40,330 --> 00:07:45,970
committed and only because of the way

00:07:44,020 --> 00:07:51,330
the storage we were using we only had

00:07:45,970 --> 00:07:54,760
1.5 actually used we had 1280 cores and

00:07:51,330 --> 00:07:59,100
half of whom were committed 10 terabytes

00:07:54,760 --> 00:08:04,230
of RAM and only two committed and then

00:07:59,100 --> 00:08:04,230
we had about 150 instances out there

00:08:06,060 --> 00:08:14,740
okay so we used a product from our

00:08:13,330 --> 00:08:19,840
storage solution was innocenta and it

00:08:14,740 --> 00:08:21,999
was an NFS solution and I don't know how

00:08:19,840 --> 00:08:25,330
the numbers came to this but it was it

00:08:21,999 --> 00:08:27,580
would be we all we would have three we

00:08:25,330 --> 00:08:29,560
had three clusters in the in the

00:08:27,580 --> 00:08:31,870
environment and each cluster had a

00:08:29,560 --> 00:08:34,839
certain quota that they could use out of

00:08:31,870 --> 00:08:36,969
the 27 terabytes so when you deploy a vm

00:08:34,839 --> 00:08:40,599
if you chose 100 gig or 200 gig or 500

00:08:36,969 --> 00:08:43,240
gig disk for your you're offering it

00:08:40,599 --> 00:08:45,220
would allocate that as part of this but

00:08:43,240 --> 00:08:46,990
it's only using that's how many blocks

00:08:45,220 --> 00:08:48,910
are actually written to the actual

00:08:46,990 --> 00:08:52,800
storage that were actually used was only

00:08:48,910 --> 00:08:52,800
1.5 out of the whole 27 terabytes

00:08:58,190 --> 00:09:03,030
because of the way we deployed it no

00:09:00,750 --> 00:09:05,730
this was the admin this is what the

00:09:03,030 --> 00:09:07,020
admin solved so all of our team saw when

00:09:05,730 --> 00:09:08,880
they logged in they logged into their

00:09:07,020 --> 00:09:10,710
projects and so they saw their project

00:09:08,880 --> 00:09:13,590
and they saw how many instances they had

00:09:10,710 --> 00:09:16,170
other time yes yeah so if they had a

00:09:13,590 --> 00:09:17,400
quota of 50 VMs and they were using 20

00:09:16,170 --> 00:09:22,770
they would see that they wouldn't see

00:09:17,400 --> 00:09:24,120
this the infrastructure yeah yeah but

00:09:22,770 --> 00:09:28,920
they wouldn't see statistics like this

00:09:24,120 --> 00:09:32,460
yeah so if there was a request that came

00:09:28,920 --> 00:09:33,990
that we couldn't support in in our

00:09:32,460 --> 00:09:35,100
environment in the class I ecosystem we

00:09:33,990 --> 00:09:37,380
would just fall back to our normal

00:09:35,100 --> 00:09:39,660
methods for that but it really approved

00:09:37,380 --> 00:09:43,470
it it's it's worth in gold when we

00:09:39,660 --> 00:09:46,010
deployed it we open access to our

00:09:43,470 --> 00:09:50,550
customers in the middle of October and

00:09:46,010 --> 00:09:54,840
by the end of november i say we had over

00:09:50,550 --> 00:09:58,890
150 bm's up and running anywhere from

00:09:54,840 --> 00:10:03,510
four cores to 16 cores and from 16 gigs

00:09:58,890 --> 00:10:06,180
of ram to 64 gigs of ram for instance so

00:10:03,510 --> 00:10:09,030
it's pretty good I was pretty happy with

00:10:06,180 --> 00:10:11,700
it and this is the hardware details so

00:10:09,030 --> 00:10:15,300
we had 21 you boxes they were quad

00:10:11,700 --> 00:10:18,540
socket AMD opteron told each socket was

00:10:15,300 --> 00:10:21,600
16 cores so the Mac told that to 1200

00:10:18,540 --> 00:10:25,080
cores 10 terabytes of RAM 33 terabytes

00:10:21,600 --> 00:10:27,240
of NFS storage we only provision 27 just

00:10:25,080 --> 00:10:29,670
the way we did the math since it was an

00:10:27,240 --> 00:10:31,890
extent to base solution it was ahead

00:10:29,670 --> 00:10:34,980
read and write cache based off of SSD

00:10:31,890 --> 00:10:38,280
and RAM and so we could achieve 20,000 I

00:10:34,980 --> 00:10:40,680
ops easily and we did I urge all day

00:10:38,280 --> 00:10:42,240
long and what I could see that and the

00:10:40,680 --> 00:10:45,360
beauty of it was all connected via 10

00:10:42,240 --> 00:10:46,860
gig ethernet rj-45 connections so it was

00:10:45,360 --> 00:10:48,150
really easy to manage we didn't have to

00:10:46,860 --> 00:10:53,220
give the network team involved for any

00:10:48,150 --> 00:10:54,870
of it and the math right there for that

00:10:53,220 --> 00:10:57,420
we had around it could support we did

00:10:54,870 --> 00:11:00,990
the all of our web servers were poor

00:10:57,420 --> 00:11:03,570
poor 16 gig Aram and so we provision for

00:11:00,990 --> 00:11:06,180
that and it's like I say currently

00:11:03,570 --> 00:11:08,160
running almost 200 instances it's a

00:11:06,180 --> 00:11:10,199
little picture of it so

00:11:08,160 --> 00:11:13,490
there's the 10 hosts on each side and

00:11:10,199 --> 00:11:13,490
then the storage solution at the bottom

00:11:14,360 --> 00:11:24,449
yes so you know you're asking what about

00:11:20,790 --> 00:11:26,879
me so enough about my deployment how do

00:11:24,449 --> 00:11:29,220
I get started to get started if you

00:11:26,879 --> 00:11:30,839
haven't played with CloudStack scrounge

00:11:29,220 --> 00:11:34,050
up a few servers if you have access to

00:11:30,839 --> 00:11:37,290
them or just spin up some VMS on your

00:11:34,050 --> 00:11:39,300
laptop on anything install the OS for

00:11:37,290 --> 00:11:40,769
the master server recommend sento at six

00:11:39,300 --> 00:11:42,779
it's the lowest lowest barrier to entry

00:11:40,769 --> 00:11:45,480
it's very easy to use very easy to run

00:11:42,779 --> 00:11:46,410
there's lots of support for is because

00:11:45,480 --> 00:11:48,839
it's based off of the redhead

00:11:46,410 --> 00:11:50,399
distribution it's all a notice for the

00:11:48,839 --> 00:11:52,560
hypervisor and i recommend xenserver

00:11:50,399 --> 00:11:55,410
because again it's very easy to use it's

00:11:52,560 --> 00:11:58,259
very easy to manage there's a GUI contas

00:11:55,410 --> 00:11:59,759
and client console you can poke around

00:11:58,259 --> 00:12:03,089
in so you don't have to know all the X

00:11:59,759 --> 00:12:04,379
API commands and then download and

00:12:03,089 --> 00:12:06,420
install the call stack on the master

00:12:04,379 --> 00:12:08,129
server connect everything together start

00:12:06,420 --> 00:12:10,350
with a basic zone just get it out there

00:12:08,129 --> 00:12:11,610
get it running getting tested join the

00:12:10,350 --> 00:12:13,139
mailing list and then contribute back to

00:12:11,610 --> 00:12:16,110
the community and if you're not a

00:12:13,139 --> 00:12:19,470
programmer update the docs I know this

00:12:16,110 --> 00:12:22,410
all seems obvious but it's it's it's

00:12:19,470 --> 00:12:25,439
really easy to get started I had six

00:12:22,410 --> 00:12:27,420
weeks last year to provision a private

00:12:25,439 --> 00:12:30,180
cloud and I didn't know anything about

00:12:27,420 --> 00:12:31,889
cloudstack or I knew of OpenStack and I

00:12:30,180 --> 00:12:34,860
knew that there was things out there to

00:12:31,889 --> 00:12:36,240
do private private clouds but we needed

00:12:34,860 --> 00:12:37,769
something in those six weeks i had to

00:12:36,240 --> 00:12:40,019
have production instances running on it

00:12:37,769 --> 00:12:41,250
and I did it with cosmic I had

00:12:40,019 --> 00:12:43,980
production instances by the end of the

00:12:41,250 --> 00:12:45,060
six weeks and I had commitment for my

00:12:43,980 --> 00:12:48,360
company to move forward on the

00:12:45,060 --> 00:12:51,089
deployment that I did so I want to take

00:12:48,360 --> 00:12:52,709
it to scale okay so evaluate what you're

00:12:51,089 --> 00:12:55,319
trying to achieve and obstacles trying

00:12:52,709 --> 00:12:56,910
to overcome the reason why i did my

00:12:55,319 --> 00:12:59,100
deployment is like i said i couldn't

00:12:56,910 --> 00:13:01,290
keep up with the requests that i was

00:12:59,100 --> 00:13:02,519
getting from my customers all right is

00:13:01,290 --> 00:13:03,930
that what you're trying to do or are you

00:13:02,519 --> 00:13:05,430
trying to optimize your hardware

00:13:03,930 --> 00:13:07,529
utilization are you trying to do mass

00:13:05,430 --> 00:13:10,620
consolidation are you trying to do cost

00:13:07,529 --> 00:13:11,790
control freak a few resources you want

00:13:10,620 --> 00:13:13,379
evaluate your hardware options do you

00:13:11,790 --> 00:13:14,819
want to do shared storage or do you want

00:13:13,379 --> 00:13:16,949
to local storage that's an option with

00:13:14,819 --> 00:13:18,720
CloudStack and it works fine do you want

00:13:16,949 --> 00:13:21,690
to do spindle or SSD do you want lots of

00:13:18,720 --> 00:13:24,900
course lots of random scale-out scale up

00:13:21,690 --> 00:13:27,630
name my bucks so it all works I mean I

00:13:24,900 --> 00:13:29,700
and my stuff was white box it was super

00:13:27,630 --> 00:13:34,610
micro boxes everything worked perfectly

00:13:29,700 --> 00:13:37,020
time are all careerbuilder was entirely

00:13:34,610 --> 00:13:39,210
Adele shop who had over a thousand dell

00:13:37,020 --> 00:13:42,330
servers and when I deployed this it's

00:13:39,210 --> 00:13:45,360
just I got everything for under 300

00:13:42,330 --> 00:13:48,660
grand including storage so it's blooming

00:13:45,360 --> 00:13:50,640
out of the water evaluate your software

00:13:48,660 --> 00:13:54,660
options like I said reto at Red Hat's

00:13:50,640 --> 00:14:00,540
NOS or a boon to kvm Zen VMware are now

00:13:54,660 --> 00:14:02,460
hyper-v in 43 networking options such as

00:14:00,540 --> 00:14:03,600
when i made this presentation I had a

00:14:02,460 --> 00:14:06,240
little I've been dealing with an email

00:14:03,600 --> 00:14:08,460
problem at work and i miss typo sorry

00:14:06,240 --> 00:14:11,190
about that do you want to fiber you want

00:14:08,460 --> 00:14:12,690
to do sfp you want to do 10 gig Ethernet

00:14:11,190 --> 00:14:15,690
or are you just doing one gig because

00:14:12,690 --> 00:14:18,510
you're on a generic server that from an

00:14:15,690 --> 00:14:21,660
old refurbished server it can do a basic

00:14:18,510 --> 00:14:23,010
or an advanced zone van saun gives you a

00:14:21,660 --> 00:14:24,570
lot more options but it's a lot more

00:14:23,010 --> 00:14:26,400
complex to get started so I recommend

00:14:24,570 --> 00:14:28,080
just starting with basic and then

00:14:26,400 --> 00:14:29,640
working your way up because you can

00:14:28,080 --> 00:14:32,430
always create new zones and move things

00:14:29,640 --> 00:14:34,710
over to evaluate your support options

00:14:32,430 --> 00:14:36,660
cloud platform directly from Citrix or

00:14:34,710 --> 00:14:38,670
paid cause tech support from companies

00:14:36,660 --> 00:14:41,010
like shape blue and then just put it all

00:14:38,670 --> 00:14:44,970
together and build it out I just just

00:14:41,010 --> 00:14:47,330
get started and then go that's it push

00:14:44,970 --> 00:14:47,330
this

00:14:53,900 --> 00:14:59,820
the art deployment we did was just a

00:14:57,180 --> 00:15:03,150
basic deployment but we fully intended

00:14:59,820 --> 00:15:05,220
to we had Palo Alto fires occur blur and

00:15:03,150 --> 00:15:06,810
so we wanted once for da 3 was released

00:15:05,220 --> 00:15:11,970
we wanted to start taking advantage of

00:15:06,810 --> 00:15:13,470
the pellet of being able to have changes

00:15:11,970 --> 00:15:17,160
pushed into the into the firewall and

00:15:13,470 --> 00:15:18,660
then we wanted we used load balancers as

00:15:17,160 --> 00:15:22,680
well for all those the front end for

00:15:18,660 --> 00:15:26,190
everything we did use a virtual router

00:15:22,680 --> 00:15:27,660
but it was only for DHCP the instances

00:15:26,190 --> 00:15:30,810
since they were on the domain that would

00:15:27,660 --> 00:15:32,640
register with the domain for DNS but

00:15:30,810 --> 00:15:34,320
then the virtual router was only hanging

00:15:32,640 --> 00:15:38,430
out DHCP addresses that's really the

00:15:34,320 --> 00:15:40,800
only thing it did nope as I'm saying

00:15:38,430 --> 00:15:43,650
like this is we we wanted to just get

00:15:40,800 --> 00:15:45,990
the get it in there and our main goal

00:15:43,650 --> 00:15:50,730
was to accelerate the delivery of our

00:15:45,990 --> 00:15:54,870
instances but the sky's the limit a pun

00:15:50,730 --> 00:15:56,730
intended but yeah I mean there's their

00:15:54,870 --> 00:15:58,650
full potential to do any corner of any

00:15:56,730 --> 00:16:01,290
sort of networking you want it just

00:15:58,650 --> 00:16:07,970
takes a lot more planning and insight

00:16:01,290 --> 00:16:07,970
and it's good

00:16:16,750 --> 00:16:25,400
they were we provision projects for them

00:16:19,940 --> 00:16:28,580
and then yeah so we had to 11 domain one

00:16:25,400 --> 00:16:30,110
pod one zone three clusters because with

00:16:28,580 --> 00:16:34,520
then you can only do eight servers in a

00:16:30,110 --> 00:16:38,120
cluster and so we just put them all into

00:16:34,520 --> 00:16:40,130
their own projects and then we would put

00:16:38,120 --> 00:16:41,990
quotas on the project so our biggest

00:16:40,130 --> 00:16:45,320
customer was our automated deployment

00:16:41,990 --> 00:16:47,000
team they had a project limit of 200 VMs

00:16:45,320 --> 00:16:48,440
and then all the other customers only

00:16:47,000 --> 00:16:50,480
had project limits of 20 beams because

00:16:48,440 --> 00:16:52,160
that's all they were doing but we had

00:16:50,480 --> 00:16:54,200
one customer he did to 20 and then came

00:16:52,160 --> 00:16:56,270
to us and said I need five more so we up

00:16:54,200 --> 00:16:59,170
Dakota gave it he was able to deploy

00:16:56,270 --> 00:17:01,700
five more servers so it just gave us a

00:16:59,170 --> 00:17:03,500
better insight into his growth pattern

00:17:01,700 --> 00:17:05,540
when he just say okay I need five more

00:17:03,500 --> 00:17:07,250
tremors because I've reached my limit so

00:17:05,540 --> 00:17:09,740
we can just go back and forth and say oh

00:17:07,250 --> 00:17:11,750
I need to order two more servers you can

00:17:09,740 --> 00:17:20,920
go and deploy these five but I can feed

00:17:11,750 --> 00:17:20,920
the back end while you're doing this yes

00:17:23,950 --> 00:17:28,880
experiences hey it was great for the dev

00:17:27,440 --> 00:17:31,640
environment that we used it in it did

00:17:28,880 --> 00:17:35,150
have its issues but it wasn't anything

00:17:31,640 --> 00:17:36,980
that was impacting it was very easy to

00:17:35,150 --> 00:17:40,850
set up we just presented to be an NFS

00:17:36,980 --> 00:17:45,370
share but once we got everything all the

00:17:40,850 --> 00:17:47,780
kinks worked out occasionally it would

00:17:45,370 --> 00:17:49,820
we would have to failover between the

00:17:47,780 --> 00:17:54,890
nodes of the master of the nodes but it

00:17:49,820 --> 00:17:56,930
wasn't anything huh no we would it would

00:17:54,890 --> 00:17:58,580
take under a minute to do the failover

00:17:56,930 --> 00:18:03,230
and there was no impact to the customers

00:17:58,580 --> 00:18:05,630
I mean but yeah it's I don't know if we

00:18:03,230 --> 00:18:07,160
would do it in production at the scale

00:18:05,630 --> 00:18:09,200
we had to that if we did we'd break it

00:18:07,160 --> 00:18:10,670
into a like it wouldn't be the primary

00:18:09,200 --> 00:18:12,110
storage across the entire cluster it

00:18:10,670 --> 00:18:15,600
would be a primary short for a pilot or

00:18:12,110 --> 00:18:25,470
zone and we just replicate that out

00:18:15,600 --> 00:18:27,090
number times now just use the generic

00:18:25,470 --> 00:18:27,929
portal and they would log in and they

00:18:27,090 --> 00:18:36,630
would be dropped right into their

00:18:27,929 --> 00:18:38,789
project they they didn't get to that

00:18:36,630 --> 00:18:40,590
point they just use the the the UI

00:18:38,789 --> 00:18:44,460
because that's all they were doing they

00:18:40,590 --> 00:18:45,780
were doing it but the only one that the

00:18:44,460 --> 00:18:48,360
automated deployment team that had the

00:18:45,780 --> 00:18:49,559
200 bm's he gave us a list and we did

00:18:48,360 --> 00:18:52,350
the cloud we did through cloud monkey

00:18:49,559 --> 00:18:53,640
but it was they they just weren't

00:18:52,350 --> 00:18:56,450
comfortable with again because they were

00:18:53,640 --> 00:18:59,159
just getting started with it as far as

00:18:56,450 --> 00:19:00,270
you know getting you know being able to

00:18:59,159 --> 00:19:02,850
deploy their own servers they were just

00:19:00,270 --> 00:19:03,950
getting used to that mindset of that

00:19:02,850 --> 00:19:06,090
they don't need to come to me anymore

00:19:03,950 --> 00:19:07,320
they have the server ready in an hour

00:19:06,090 --> 00:19:10,549
and then they screw it up they just

00:19:07,320 --> 00:19:10,549
destroy it and rebuild a new one

00:19:13,870 --> 00:19:16,920
ciego man

00:19:19,250 --> 00:19:26,190
of tech is more ECMO planet beauty any

00:19:24,080 --> 00:19:28,710
special action

00:19:26,190 --> 00:19:31,200
we deployed our servers the same way we

00:19:28,710 --> 00:19:33,330
did our the instances that were deployed

00:19:31,200 --> 00:19:36,149
on within cloudstack were deployed the

00:19:33,330 --> 00:19:37,710
same exact way as far as the the user

00:19:36,149 --> 00:19:39,899
restrictions that were on them as far as

00:19:37,710 --> 00:19:42,809
administrators everything was done via a

00:19:39,899 --> 00:19:45,629
postscript on both windows and linux so

00:19:42,809 --> 00:19:48,330
everything that was needed for to meet

00:19:45,629 --> 00:19:50,700
our pci compliance at careerbuilder was

00:19:48,330 --> 00:19:53,669
done so the instances were audited the

00:19:50,700 --> 00:19:55,110
same way as far as the instances that

00:19:53,669 --> 00:19:56,490
that was our are concerned that the

00:19:55,110 --> 00:19:59,009
cloud stack stuff wasn't as big of a

00:19:56,490 --> 00:20:00,590
concern because it wasn't they didn't

00:19:59,009 --> 00:20:02,779
need to be complete PSAC applying the

00:20:00,590 --> 00:20:05,100
instances that were running

00:20:02,779 --> 00:20:07,909
transactional data where were the ones

00:20:05,100 --> 00:20:07,909
that needed to be compliant

00:20:16,340 --> 00:20:22,700
such instances they can get off me

00:20:19,940 --> 00:20:25,009
I left careerbuilder at the beginning of

00:20:22,700 --> 00:20:28,159
march so I I don't know what they've

00:20:25,009 --> 00:20:31,789
done since then but when i was there i

00:20:28,159 --> 00:20:34,009
mean we finished it and presented it to

00:20:31,789 --> 00:20:36,289
all of our customers in october and we

00:20:34,009 --> 00:20:51,610
had to quarterly audits and he rly audit

00:20:36,289 --> 00:20:51,610
and had no problems yep anything else

00:20:53,600 --> 00:20:56,169
so

00:20:56,870 --> 00:20:59,800

YouTube URL: https://www.youtube.com/watch?v=EVLrSFkcpC0


