Title: Best Practices for CouchDB Developers on Windows Azure
Publication date: 2013-10-18
Playlist: Apachecon NA 2013 - day 3
Description: 
	Brian Benz
ApacheCon NA 2013
Big Data
Captions: 
	00:00:00,199 --> 00:00:09,269
there we go hi seems like a if you guys

00:00:06,960 --> 00:00:11,670
have any questions just yell about I

00:00:09,269 --> 00:00:15,929
think we have a small number of people

00:00:11,670 --> 00:00:19,439
so yeah what I'm going to do today I

00:00:15,929 --> 00:00:21,090
just want to cover a few things i'm

00:00:19,439 --> 00:00:23,430
going to show you an app demo and i'm

00:00:21,090 --> 00:00:25,710
showing you the app demo for the

00:00:23,430 --> 00:00:27,810
purposes of illustrating the kind of

00:00:25,710 --> 00:00:32,369
challenges you might have when you're

00:00:27,810 --> 00:00:35,579
putting a web app on azure on windows

00:00:32,369 --> 00:00:37,200
azure i'm going to show you couchdb

00:00:35,579 --> 00:00:39,149
different options for loading

00:00:37,200 --> 00:00:41,930
applications on virtual machines data

00:00:39,149 --> 00:00:47,489
middle tier front end things like that

00:00:41,930 --> 00:00:49,500
and also some tips and tricks that that

00:00:47,489 --> 00:00:50,969
we use to get this particular app going

00:00:49,500 --> 00:00:53,160
I'm not going to go into the app and in

00:00:50,969 --> 00:00:54,210
great detail it's actually out on github

00:00:53,160 --> 00:00:55,649
and you can play around with it and I

00:00:54,210 --> 00:00:57,870
can answer questions about it later but

00:00:55,649 --> 00:00:59,969
i'll just use it to illustrate some of

00:00:57,870 --> 00:01:02,370
the challenges you might have things you

00:00:59,969 --> 00:01:11,700
might want to do so the conference

00:01:02,370 --> 00:01:13,530
scheduling app let's see here there so

00:01:11,700 --> 00:01:15,869
it's a pretty straightforward little app

00:01:13,530 --> 00:01:18,360
that was written by someone who's

00:01:15,869 --> 00:01:20,009
actually working for us now and i put in

00:01:18,360 --> 00:01:25,080
a few sessions from today's schedule

00:01:20,009 --> 00:01:27,500
whoops we're not on that screen how did

00:01:25,080 --> 00:01:27,500
that happen

00:01:29,820 --> 00:01:43,890
don't have to do that no maybe I have to

00:01:33,930 --> 00:01:46,850
stop this looks like I have to stop yeah

00:01:43,890 --> 00:01:48,780
you're right there's a few issues miss I

00:01:46,850 --> 00:01:52,800
was warned there might be a few issues

00:01:48,780 --> 00:01:54,150
anyway this is a scheduling app it's a

00:01:52,800 --> 00:01:57,600
front-end it's written with Twitter

00:01:54,150 --> 00:02:02,789
bootstrap a few custom pieces of

00:01:57,600 --> 00:02:04,080
JavaScript and we use a quarter serve if

00:02:02,789 --> 00:02:06,000
anybody's familiar with that I'll get in

00:02:04,080 --> 00:02:07,530
that a little bit later it's a server

00:02:06,000 --> 00:02:10,709
that allows you to do cross domain

00:02:07,530 --> 00:02:14,780
JavaScript from one side to another with

00:02:10,709 --> 00:02:18,570
a with a unique port and also we use

00:02:14,780 --> 00:02:20,100
grunt j/s to manage the core server to

00:02:18,570 --> 00:02:22,860
actually get it up and running started

00:02:20,100 --> 00:02:25,500
no j/s runs behind the scenes as well so

00:02:22,860 --> 00:02:28,560
it's a pretty quick little app and you

00:02:25,500 --> 00:02:31,650
can do little things you can you can

00:02:28,560 --> 00:02:34,049
take notes you can vote things up or

00:02:31,650 --> 00:02:37,739
down one of the nice things about it is

00:02:34,049 --> 00:02:40,170
it's got an offline version so if the

00:02:37,739 --> 00:02:43,049
Wi-Fi is really bad not in the case of

00:02:40,170 --> 00:02:44,610
this room but in other conferences you

00:02:43,049 --> 00:02:45,630
can actually go offline and take your

00:02:44,610 --> 00:02:47,220
notes and everything then when you're

00:02:45,630 --> 00:02:49,110
done you hit this button and it go takes

00:02:47,220 --> 00:02:51,360
you back online and sinks everything up

00:02:49,110 --> 00:02:54,420
so it's just a little app it's kind of a

00:02:51,360 --> 00:02:57,329
cool little thing that that one of my

00:02:54,420 --> 00:02:58,980
colleagues put together and we got it

00:02:57,329 --> 00:03:00,390
going on Windows Azure it was alright it

00:02:58,980 --> 00:03:02,700
was running on a different provider and

00:03:00,390 --> 00:03:05,180
it was meant to be a client apps so what

00:03:02,700 --> 00:03:07,560
we did is we actually built it into a

00:03:05,180 --> 00:03:10,380
multi-tier app with CouchDB on the

00:03:07,560 --> 00:03:11,910
backend a website in the middle that

00:03:10,380 --> 00:03:13,380
runs on Windows everything runs on

00:03:11,910 --> 00:03:17,370
Windows Azure and then of course a

00:03:13,380 --> 00:03:24,870
browser on the front end so

00:03:17,370 --> 00:03:24,870
that's it for the demo let's start here

00:03:29,400 --> 00:03:40,989
okay starts over right so there's a

00:03:37,780 --> 00:03:43,660
scheduling app so i just described it

00:03:40,989 --> 00:03:46,690
what it does use as no Jas grunt and

00:03:43,660 --> 00:03:48,610
course server on the back end the demo

00:03:46,690 --> 00:03:51,840
architecture as I said it's a nodejs app

00:03:48,610 --> 00:03:54,519
so I've got couchdb on the bottom nodejs

00:03:51,840 --> 00:03:57,489
is a story of retrieving data from

00:03:54,519 --> 00:04:02,049
couchdb the quarter service allowed us

00:03:57,489 --> 00:04:06,250
to talk from another internal website

00:04:02,049 --> 00:04:10,569
the middle tier me through multi-domain

00:04:06,250 --> 00:04:11,829
javascript so what i'm going to talk

00:04:10,569 --> 00:04:13,480
about now is just a little bit about

00:04:11,829 --> 00:04:15,720
windows azure for those how many people

00:04:13,480 --> 00:04:18,190
have worked with windows azure before

00:04:15,720 --> 00:04:23,919
one person okay good so this is going to

00:04:18,190 --> 00:04:25,870
be useful then so basically you know the

00:04:23,919 --> 00:04:28,060
idea here how many people worked with

00:04:25,870 --> 00:04:30,340
clouds amazon other pile okay so

00:04:28,060 --> 00:04:33,130
everybody has a concept of of different

00:04:30,340 --> 00:04:34,930
things so you've got packaged software

00:04:33,130 --> 00:04:37,570
infrastructure as a service is the

00:04:34,930 --> 00:04:40,050
lowest common denominator here it's

00:04:37,570 --> 00:04:43,950
basically provisioning a server for you

00:04:40,050 --> 00:04:46,300
it can be windows it can be linux

00:04:43,950 --> 00:04:49,900
different versions of linux as well

00:04:46,300 --> 00:04:52,660
we've got windows 2008 servers 2012 and

00:04:49,900 --> 00:04:53,979
three endorsed versions of Linux which

00:04:52,660 --> 00:04:56,349
means we support them through the third

00:04:53,979 --> 00:04:57,880
party and other versions of Linux can be

00:04:56,349 --> 00:05:01,270
run as well but I'll get into that in a

00:04:57,880 --> 00:05:03,160
bit of detail in a few minutes then

00:05:01,270 --> 00:05:05,710
you've got another thing we offer as a

00:05:03,160 --> 00:05:08,020
platform as a service and what we call a

00:05:05,710 --> 00:05:09,910
worker roles and web roles and the

00:05:08,020 --> 00:05:13,240
difference is web browser web enabled

00:05:09,910 --> 00:05:15,970
worker roles are just processors that

00:05:13,240 --> 00:05:18,610
you can use in the middle the difference

00:05:15,970 --> 00:05:19,330
between infrastructure and pass is in

00:05:18,610 --> 00:05:21,849
the industry

00:05:19,330 --> 00:05:25,990
you have full control over everything

00:05:21,849 --> 00:05:27,520
here in the platform as a service pass

00:05:25,990 --> 00:05:29,500
you only have control over the

00:05:27,520 --> 00:05:31,419
applications of the data and we have

00:05:29,500 --> 00:05:34,509
some services that vendors provide as

00:05:31,419 --> 00:05:37,300
well soft turns as a service basically

00:05:34,509 --> 00:05:42,580
we provide a sandbox for you to put

00:05:37,300 --> 00:05:48,069
things on and you can run it so Windows

00:05:42,580 --> 00:05:50,259
Azure basically a comprehensive set of

00:05:48,069 --> 00:05:52,419
services and this is where it gets kind

00:05:50,259 --> 00:05:54,729
of interesting for me I might be a

00:05:52,419 --> 00:05:57,340
little bit biased working there but the

00:05:54,729 --> 00:06:03,849
the interesting thing for me is it's not

00:05:57,340 --> 00:06:05,919
just a set of hardware and an operating

00:06:03,849 --> 00:06:07,569
system that you can work with it has a

00:06:05,919 --> 00:06:09,460
lot of deployment facilities and

00:06:07,569 --> 00:06:11,440
deployment tools you still have to

00:06:09,460 --> 00:06:12,580
develop your code outside of azure but

00:06:11,440 --> 00:06:16,500
actually there are some tools you can

00:06:12,580 --> 00:06:18,759
use that are free to do that as well but

00:06:16,500 --> 00:06:21,219
there's a multiple options for

00:06:18,759 --> 00:06:24,569
deployment continuous integration as the

00:06:21,219 --> 00:06:24,569
previous speaker was talking about and

00:06:24,810 --> 00:06:30,789
managing and basically hacking all the

00:06:28,449 --> 00:06:32,979
different platforms to make them easy to

00:06:30,789 --> 00:06:37,000
deploy so one of the challenges we had

00:06:32,979 --> 00:06:39,610
with our app was that we want to if you

00:06:37,000 --> 00:06:42,339
if you set it up on a local client and

00:06:39,610 --> 00:06:44,589
start it running it actually takes a lot

00:06:42,339 --> 00:06:47,830
of time to set up that app you have to

00:06:44,589 --> 00:06:49,659
download the app itself from github you

00:06:47,830 --> 00:06:51,550
have to learn how to use if you haven't

00:06:49,659 --> 00:06:54,940
used it before cores serve which is the

00:06:51,550 --> 00:06:57,219
core server for this you have to learn

00:06:54,940 --> 00:07:00,250
about grunt which manages the core

00:06:57,219 --> 00:07:01,719
server and no Jas has to be installed

00:07:00,250 --> 00:07:05,319
and running on your local machine as

00:07:01,719 --> 00:07:07,589
well what you can do with different

00:07:05,319 --> 00:07:10,690
platforms on azure is you can have

00:07:07,589 --> 00:07:12,279
pre-configured deployment options or you

00:07:10,690 --> 00:07:13,690
can actually just deploy something with

00:07:12,279 --> 00:07:16,900
some distribution scripts and some

00:07:13,690 --> 00:07:18,789
pre-made configurations that put this

00:07:16,900 --> 00:07:20,680
out on a Windows as your website or

00:07:18,789 --> 00:07:22,690
infrastructure as a service or platform

00:07:20,680 --> 00:07:24,099
as a service and allow you to is to get

00:07:22,690 --> 00:07:26,770
it running right away so instead of

00:07:24,099 --> 00:07:28,389
saying okay mr. user here you go here's

00:07:26,770 --> 00:07:29,740
your app here's all the other things you

00:07:28,389 --> 00:07:31,449
have to download this is how they work

00:07:29,740 --> 00:07:32,860
together all these tutorials you can

00:07:31,449 --> 00:07:36,610
actually just

00:07:32,860 --> 00:07:38,740
download the back end as an

00:07:36,610 --> 00:07:42,030
infrastructure-as-a-service download the

00:07:38,740 --> 00:07:43,990
middle tier as a web application and

00:07:42,030 --> 00:07:48,639
you're ready to go as long as you have a

00:07:43,990 --> 00:07:53,139
browser on your on your machine we offer

00:07:48,639 --> 00:07:55,599
that 99.95 monthly SLA and just like

00:07:53,139 --> 00:08:00,189
every other cloud provider you pay for

00:07:55,599 --> 00:08:02,020
what you use we have a global put

00:08:00,189 --> 00:08:04,330
footprint we have I think there's 22

00:08:02,020 --> 00:08:06,879
locations around the world we have data

00:08:04,330 --> 00:08:08,979
and the data is automatically dispersed

00:08:06,879 --> 00:08:11,409
based on whatever rules you want to

00:08:08,979 --> 00:08:12,759
follow if you need it to be regional for

00:08:11,409 --> 00:08:16,750
regulatory reasons or anything like that

00:08:12,759 --> 00:08:18,250
it can be actually put in certain

00:08:16,750 --> 00:08:21,210
locations if you want it sprayed across

00:08:18,250 --> 00:08:24,129
the globe so you have redundant backups

00:08:21,210 --> 00:08:26,830
complete fault tolerance that could be

00:08:24,129 --> 00:08:28,539
done as well so as I mentioned we've got

00:08:26,830 --> 00:08:30,340
virtual machines cloud services and

00:08:28,539 --> 00:08:31,930
websites and those are the three things

00:08:30,340 --> 00:08:33,849
I'm going to show you how we built our

00:08:31,930 --> 00:08:36,640
app we worked a lot of open source

00:08:33,849 --> 00:08:38,469
software I work with Microsoft open

00:08:36,640 --> 00:08:41,649
technologies which is a subsidiary of

00:08:38,469 --> 00:08:44,130
Microsoft and our job is to make open

00:08:41,649 --> 00:08:47,380
source technologies work on Azure

00:08:44,130 --> 00:08:51,250
including a number of Apache project as

00:08:47,380 --> 00:08:54,370
you as you know cloud oh I'm sorry

00:08:51,250 --> 00:08:57,010
CouchDB we've also got solar that I've

00:08:54,370 --> 00:08:59,560
been working with recently we're getting

00:08:57,010 --> 00:09:01,720
some Cassandra goodness out there as

00:08:59,560 --> 00:09:03,339
well some other platforms as well and a

00:09:01,720 --> 00:09:09,459
lot of commercial open source packages

00:09:03,339 --> 00:09:11,079
too so I'll just skip over that one

00:09:09,459 --> 00:09:13,209
getting started one of the things I want

00:09:11,079 --> 00:09:15,730
to mention for Windows Azure there's a

00:09:13,209 --> 00:09:21,430
90 day free trial so you can try these

00:09:15,730 --> 00:09:23,230
things out and they as of last year in

00:09:21,430 --> 00:09:25,600
june two thousand twelve we're offering

00:09:23,230 --> 00:09:28,660
one year with 10 free website so you can

00:09:25,600 --> 00:09:32,140
put anything on websites and is free for

00:09:28,660 --> 00:09:34,320
a year to try out I think that's

00:09:32,140 --> 00:09:38,829
probably just going for the rest of 2013

00:09:34,320 --> 00:09:41,020
so oh so this is actually a great demo

00:09:38,829 --> 00:09:44,830
if you get a chance if you get my slides

00:09:41,020 --> 00:09:48,610
later this link takes you to a demo from

00:09:44,830 --> 00:09:52,060
one of our VPS we call Scott goo scott

00:09:48,610 --> 00:09:54,010
guthrie who has a great presentation and

00:09:52,060 --> 00:09:55,660
even though one of the things that

00:09:54,010 --> 00:09:58,060
impresses me about this organization is

00:09:55,660 --> 00:10:00,250
he's a VP but he's writing code and he's

00:09:58,060 --> 00:10:03,180
showing demos in that presentation it's

00:10:00,250 --> 00:10:07,450
actually really good it's a good good

00:10:03,180 --> 00:10:12,940
investment of 40 minutes okay so as

00:10:07,450 --> 00:10:15,340
you're in couchdb we have built-in

00:10:12,940 --> 00:10:17,740
support for scaling we also have a

00:10:15,340 --> 00:10:20,500
responsive auto scaling through what we

00:10:17,740 --> 00:10:25,150
call high availability sets which allows

00:10:20,500 --> 00:10:27,250
you to create clusters of CouchDB easily

00:10:25,150 --> 00:10:31,210
with some command line functions I'll

00:10:27,250 --> 00:10:32,530
show you in a bit here's the idea so

00:10:31,210 --> 00:10:36,850
you've got your application you've got a

00:10:32,530 --> 00:10:38,710
driver and you've got clusters primary

00:10:36,850 --> 00:10:41,320
and secondary and what's nice about

00:10:38,710 --> 00:10:43,660
those is when you have it clustered for

00:10:41,320 --> 00:10:45,820
example for our pass offerings we patch

00:10:43,660 --> 00:10:48,490
software we update it we keep it going

00:10:45,820 --> 00:10:50,620
and you don't need to worry about that

00:10:48,490 --> 00:10:52,240
but we do one piece of the cluster at a

00:10:50,620 --> 00:10:56,890
time so you never have any downtime at

00:10:52,240 --> 00:10:58,210
all virtual machines so what I did for

00:10:56,890 --> 00:11:02,980
that application I showed you we put

00:10:58,210 --> 00:11:05,260
CouchDB on the backend and these are the

00:11:02,980 --> 00:11:08,830
virtual machine options you have so all

00:11:05,260 --> 00:11:13,510
I did was create a virtual machine we

00:11:08,830 --> 00:11:15,640
used in this case windows 2012 then I

00:11:13,510 --> 00:11:17,980
put a browser on that machine i was able

00:11:15,640 --> 00:11:21,610
to rdp into it put a browser on that

00:11:17,980 --> 00:11:24,250
machine went out to the CouchDB site and

00:11:21,610 --> 00:11:25,870
downloaded the software and as i measure

00:11:24,250 --> 00:11:28,360
these are the options you have got

00:11:25,870 --> 00:11:32,530
several versions of linux actually for

00:11:28,360 --> 00:11:34,420
now of linux that are endorsed versions

00:11:32,530 --> 00:11:36,910
in other words supported by a third

00:11:34,420 --> 00:11:40,210
party for us with SLA and uptime and

00:11:36,910 --> 00:11:44,260
everything virtual machines shut as

00:11:40,210 --> 00:11:46,630
sizes typically you know the extra small

00:11:44,260 --> 00:11:48,160
and the small sizes here you're going to

00:11:46,630 --> 00:11:50,290
want to put a simple website on there

00:11:48,160 --> 00:11:55,630
which is what we have if you want to go

00:11:50,290 --> 00:11:58,660
with CouchDB the 3.5 gig in the end

00:11:55,630 --> 00:12:00,670
for disc is is probably the size and you

00:11:58,660 --> 00:12:02,890
want to use but you can use that for

00:12:00,670 --> 00:12:05,560
reference later so I'm going fairly

00:12:02,890 --> 00:12:08,110
quick to these slides we're already 1115

00:12:05,560 --> 00:12:12,970
got a little bit of time but jump out if

00:12:08,110 --> 00:12:14,650
you have any questions so deploying the

00:12:12,970 --> 00:12:17,310
virtual machine so as I mentioned all I

00:12:14,650 --> 00:12:21,340
did was create a new virtual machine

00:12:17,310 --> 00:12:22,680
install the browser download couchdb ran

00:12:21,340 --> 00:12:28,210
the installer and launched it and

00:12:22,680 --> 00:12:30,990
started futon to actually get into it so

00:12:28,210 --> 00:12:30,990
let me see if I can

00:12:42,820 --> 00:12:53,170
alright so the actual personal machine

00:12:48,140 --> 00:12:55,100
we used you see here there this is futon

00:12:53,170 --> 00:12:57,020
showing the data that's in there on the

00:12:55,100 --> 00:12:58,460
back end as you can see it's nice and

00:12:57,020 --> 00:13:02,030
fast this is over a Wi-Fi connection

00:12:58,460 --> 00:13:05,060
here in the basement and there's not a

00:13:02,030 --> 00:13:06,410
lot of data in there to be fair but you

00:13:05,060 --> 00:13:08,660
know it's pretty much instantaneous

00:13:06,410 --> 00:13:12,710
access for this so it's a Windows

00:13:08,660 --> 00:13:15,590
virtual machine I've got the rdp here so

00:13:12,710 --> 00:13:17,480
we're actually out on the server now and

00:13:15,590 --> 00:13:21,680
i'm looking through the browser i have

00:13:17,480 --> 00:13:24,350
out there but this is the text that i

00:13:21,680 --> 00:13:27,380
had to run it starts a watch task using

00:13:24,350 --> 00:13:31,850
grunt and let me show you what that is

00:13:27,380 --> 00:13:33,740
so grunt is a java javascript task

00:13:31,850 --> 00:13:36,110
runner so basically it's something that

00:13:33,740 --> 00:13:46,270
we use to fire up a course server and

00:13:36,110 --> 00:13:46,270
the core server is let me see here

00:13:47,950 --> 00:14:03,520
too many windows let me see if I can

00:13:55,930 --> 00:14:05,200
find it okay so when you're working with

00:14:03,520 --> 00:14:07,960
JavaScript one of the problems is you

00:14:05,200 --> 00:14:11,290
can't share things across domains you

00:14:07,960 --> 00:14:12,760
can't share data across domains when

00:14:11,290 --> 00:14:15,430
you're working javascript to JavaScript

00:14:12,760 --> 00:14:17,650
we've got a node.js application on the

00:14:15,430 --> 00:14:19,540
back end we want to share information

00:14:17,650 --> 00:14:24,220
with our middle tier which is a web

00:14:19,540 --> 00:14:26,140
application tier on Windows Azure so the

00:14:24,220 --> 00:14:30,340
way to do that was in to enable course

00:14:26,140 --> 00:14:35,230
on the server through port 2020 and that

00:14:30,340 --> 00:14:37,180
talks to Apache couchdb on port 5984 and

00:14:35,230 --> 00:14:38,860
allows you to run so that's what we're

00:14:37,180 --> 00:14:40,900
actually looking at here that's just a

00:14:38,860 --> 00:14:44,290
something that starts up now the problem

00:14:40,900 --> 00:14:46,270
with this is you need to run a glint to

00:14:44,290 --> 00:14:48,760
make this application work as well on

00:14:46,270 --> 00:14:50,350
the website and what we've got with

00:14:48,760 --> 00:14:53,950
websites when you deploy things it's

00:14:50,350 --> 00:14:55,540
really sandboxed so in the middle tier

00:14:53,950 --> 00:14:57,400
we had some challenges and getting that

00:14:55,540 --> 00:14:58,930
going but we were able to do that with

00:14:57,400 --> 00:15:04,170
github and I'll explain that in a little

00:14:58,930 --> 00:15:04,170
bit okay

00:15:10,960 --> 00:15:14,050
I really can see that okay I'm you know

00:15:12,970 --> 00:15:18,640
I think I'm just going to stay in this

00:15:14,050 --> 00:15:19,960
mode which is basically easier than

00:15:18,640 --> 00:15:21,280
switching back and forth and changing

00:15:19,960 --> 00:15:24,070
the resolution of something wrong with

00:15:21,280 --> 00:15:26,500
the resolution there so as I mentioned

00:15:24,070 --> 00:15:28,780
deploying the virtual machines all I had

00:15:26,500 --> 00:15:31,240
to do was download CouchDB into that

00:15:28,780 --> 00:15:33,700
created virtual machine windows 2012 is

00:15:31,240 --> 00:15:34,870
basically a windows 2012 server one of

00:15:33,700 --> 00:15:36,790
the things that came up last night that

00:15:34,870 --> 00:15:38,920
you might be of interest you guys if

00:15:36,790 --> 00:15:40,360
you're working with Windows and you have

00:15:38,920 --> 00:15:43,390
a Windows 2008 server you don't have

00:15:40,360 --> 00:15:45,880
access to windows 2012 one of the nice

00:15:43,390 --> 00:15:47,740
things about the 90 day free trial is

00:15:45,880 --> 00:15:49,720
you're able to go out there provision a

00:15:47,740 --> 00:15:52,990
windows 2012 server and try out your

00:15:49,720 --> 00:15:56,230
apps that way for free actually so just

00:15:52,990 --> 00:16:00,120
an aside the other thing i want to show

00:15:56,230 --> 00:16:06,390
you was vm depot and vm depot is

00:16:00,120 --> 00:16:08,860
actually something that the apache the

00:16:06,390 --> 00:16:12,430
patching developers should be quite

00:16:08,860 --> 00:16:15,490
interested in we have a website out

00:16:12,430 --> 00:16:19,450
there that contains hundreds of Linux

00:16:15,490 --> 00:16:21,520
images and Linux images for nodejs as

00:16:19,450 --> 00:16:24,960
you can see here what else we get on the

00:16:21,520 --> 00:16:27,430
front page magento Django WordPress tiki

00:16:24,960 --> 00:16:28,540
literally hundreds of images some of

00:16:27,430 --> 00:16:31,750
them well known some of them fairly

00:16:28,540 --> 00:16:34,690
obscure of applications the operating

00:16:31,750 --> 00:16:37,420
system in this virtual machines is Linux

00:16:34,690 --> 00:16:38,560
only and it can be any version of Linux

00:16:37,420 --> 00:16:39,850
it doesn't have to be the endorsed

00:16:38,560 --> 00:16:42,070
versions of Linux that I showed you

00:16:39,850 --> 00:16:47,170
earlier give me any version of Linux at

00:16:42,070 --> 00:16:52,410
all and the reason sorry reason i want

00:16:47,170 --> 00:16:54,950
to show you that is for example couch

00:16:52,410 --> 00:17:02,070
let's go

00:16:54,950 --> 00:17:10,250
see we've got there thought we had some

00:17:02,070 --> 00:17:10,250
hold on no okay we don't how about solar

00:17:13,920 --> 00:17:18,150
there we go so we've got different

00:17:16,350 --> 00:17:19,700
versions of solar out there for example

00:17:18,150 --> 00:17:22,580
with different versions of a boom to

00:17:19,700 --> 00:17:24,870
some of them endorsed versions some not

00:17:22,580 --> 00:17:27,900
couchdb we should have some as well as a

00:17:24,870 --> 00:17:32,820
surprise but the idea here is that you

00:17:27,900 --> 00:17:36,840
can actually how these actually get on

00:17:32,820 --> 00:17:39,060
here is community publishing so anyone

00:17:36,840 --> 00:17:41,490
in this room anyone who wants to do this

00:17:39,060 --> 00:17:43,370
can go out and there's instructions on

00:17:41,490 --> 00:17:45,870
how to create a virtual machine using

00:17:43,370 --> 00:17:47,730
Linux and putting anything on that linux

00:17:45,870 --> 00:17:50,010
server that you want taking a snapshot

00:17:47,730 --> 00:17:53,640
of that and publishing it up to vm depot

00:17:50,010 --> 00:17:58,200
it's a great way to find new audiences

00:17:53,640 --> 00:18:01,410
for your for your products so for

00:17:58,200 --> 00:18:04,260
example you could right now i'm working

00:18:01,410 --> 00:18:05,640
with a partner to get Cassandra up there

00:18:04,260 --> 00:18:07,080
so that's taking them three four days

00:18:05,640 --> 00:18:09,210
usually takes three four days for the

00:18:07,080 --> 00:18:10,560
first image till you figure out the

00:18:09,210 --> 00:18:13,080
whole process and get the publishing

00:18:10,560 --> 00:18:14,430
going but after that it's usually a half

00:18:13,080 --> 00:18:17,580
an hour because you have all the pieces

00:18:14,430 --> 00:18:18,660
in place but he's going to do cassandra

00:18:17,580 --> 00:18:21,530
and then hopefully we can get some

00:18:18,660 --> 00:18:23,670
business partners out there who have

00:18:21,530 --> 00:18:26,190
something that's running on top of

00:18:23,670 --> 00:18:29,090
cassandra and then we can get them to

00:18:26,190 --> 00:18:31,620
create images using that Cassandra image

00:18:29,090 --> 00:18:33,450
downloading it adding the things they

00:18:31,620 --> 00:18:35,670
want to add Andrey publishing it back up

00:18:33,450 --> 00:18:37,860
as their own and we don't charge

00:18:35,670 --> 00:18:39,570
anything for this we don't control the

00:18:37,860 --> 00:18:42,720
branding you can put any branding one on

00:18:39,570 --> 00:18:45,630
it but it's a handy way to share stuff

00:18:42,720 --> 00:18:47,760
with anybody you want we've been talking

00:18:45,630 --> 00:18:50,100
actually to some academic institutions

00:18:47,760 --> 00:18:51,780
here at the conference about putting

00:18:50,100 --> 00:18:54,600
tutorials on there one of the problems

00:18:51,780 --> 00:18:55,650
with tutorials is especially if you're

00:18:54,600 --> 00:18:57,900
working with a lot of different

00:18:55,650 --> 00:19:01,500
components in the Apache world or else

00:18:57,900 --> 00:19:04,050
we're getting all those components to

00:19:01,500 --> 00:19:05,880
work together sometimes takes a week

00:19:04,050 --> 00:19:09,300
longer than the actual tutorial takes

00:19:05,880 --> 00:19:13,890
two to finish so they can actually

00:19:09,300 --> 00:19:16,800
create snapshots of data and small

00:19:13,890 --> 00:19:19,620
amounts of data and the applications

00:19:16,800 --> 00:19:21,240
make sure it all works together publish

00:19:19,620 --> 00:19:23,520
it up to vm depot and then people can

00:19:21,240 --> 00:19:24,570
just download that and share it it comes

00:19:23,520 --> 00:19:26,160
with deployment scripts that

00:19:24,570 --> 00:19:26,900
automatically put it on windows azure

00:19:26,160 --> 00:19:28,850
one

00:19:26,900 --> 00:19:32,270
that I had yesterday my fast feather

00:19:28,850 --> 00:19:36,710
talk was can it run on any other VMS our

00:19:32,270 --> 00:19:39,500
vm hosts such as amazon etc it's really

00:19:36,710 --> 00:19:40,760
just set up to run on windows azure but

00:19:39,500 --> 00:19:43,970
it is a quick and easy way to share

00:19:40,760 --> 00:19:45,950
virtual machines so that would have been

00:19:43,970 --> 00:19:48,320
another option for me if we had a

00:19:45,950 --> 00:19:51,200
couchdb instance i could actually create

00:19:48,320 --> 00:19:53,150
a linux virtual machine with that

00:19:51,200 --> 00:19:56,690
couchdb instance and then just love my

00:19:53,150 --> 00:20:00,860
data on it for this app as well pardon

00:19:56,690 --> 00:20:02,030
me so one of the things I want to tell

00:20:00,860 --> 00:20:04,670
you about as well as the windows azure

00:20:02,030 --> 00:20:08,360
developer center so for couch TV

00:20:04,670 --> 00:20:13,240
developers we've got mobile dotnet

00:20:08,360 --> 00:20:17,480
nodejs Java PHP Python and some other

00:20:13,240 --> 00:20:26,510
SDKs that you can use let me go to that

00:20:17,480 --> 00:20:31,160
website and those SDKs are good to know

00:20:26,510 --> 00:20:35,930
about because they have couch drivers as

00:20:31,160 --> 00:20:39,740
well so the SDKs are here the other

00:20:35,930 --> 00:20:41,480
thing you need to know about is and it's

00:20:39,740 --> 00:20:45,670
all free to download them and use them

00:20:41,480 --> 00:20:48,650
the Java we have Eclipse plugins as well

00:20:45,670 --> 00:20:50,330
the command line tools are good to know

00:20:48,650 --> 00:20:52,220
about as well this one especially the

00:20:50,330 --> 00:20:57,170
cross-platform command-line interface

00:20:52,220 --> 00:20:59,530
that runs on linux mac windows and it

00:20:57,170 --> 00:21:02,120
actually allows you to have access to

00:20:59,530 --> 00:21:06,020
virtual machines platform-as-a-service

00:21:02,120 --> 00:21:08,720
and websites through a command line on

00:21:06,020 --> 00:21:10,520
your desktop and the good thing about

00:21:08,720 --> 00:21:12,530
that is i'll show you a little bit is

00:21:10,520 --> 00:21:16,610
you can actually create pre-made

00:21:12,530 --> 00:21:19,430
deployment scripts the actual command

00:21:16,610 --> 00:21:20,810
line interface can be downloaded runs

00:21:19,430 --> 00:21:25,640
just like any other command line on your

00:21:20,810 --> 00:21:27,680
machine the syntax that is based on is

00:21:25,640 --> 00:21:30,410
project kudu if anybody's ever worked

00:21:27,680 --> 00:21:34,100
with project kudu it's a platform

00:21:30,410 --> 00:21:36,830
deployment tool or a set of platform

00:21:34,100 --> 00:21:38,440
deployment tools that we've adapted it's

00:21:36,830 --> 00:21:42,360
open source is out on github

00:21:38,440 --> 00:21:47,519
where is that actually project kudu and

00:21:42,360 --> 00:21:51,399
you can use that to basically hack into

00:21:47,519 --> 00:21:54,190
within certain parameters hack into

00:21:51,399 --> 00:21:55,690
different deployment options when you're

00:21:54,190 --> 00:21:57,460
sending these things out to websites

00:21:55,690 --> 00:22:04,590
virtual machines and platform as a

00:21:57,460 --> 00:22:07,419
service worker roles and web roles so

00:22:04,590 --> 00:22:09,340
that's the screen I want to show you the

00:22:07,419 --> 00:22:13,120
command line this is give you a little

00:22:09,340 --> 00:22:15,970
taste of the command line syntax so you

00:22:13,120 --> 00:22:19,139
can create a virtual machine you can

00:22:15,970 --> 00:22:23,679
create a virtual machine disk endpoints

00:22:19,139 --> 00:22:25,539
images you can manage images then we've

00:22:23,679 --> 00:22:26,980
got you know download import some of the

00:22:25,539 --> 00:22:28,960
verbs and some of the options you have

00:22:26,980 --> 00:22:32,590
so you can actually create some pretty

00:22:28,960 --> 00:22:34,539
sophisticated scripting to go along with

00:22:32,590 --> 00:22:38,559
your deployment scripts that you load

00:22:34,539 --> 00:22:40,600
things on Azure with here's an example

00:22:38,559 --> 00:22:43,289
of provisioning and clusters so what I

00:22:40,600 --> 00:22:45,279
showed you before all I did was download

00:22:43,289 --> 00:22:47,460
CouchDB through the browser through

00:22:45,279 --> 00:22:50,470
remote desktop on my windows server and

00:22:47,460 --> 00:22:52,659
get it running you can also if you're on

00:22:50,470 --> 00:22:55,809
Linux this works on linux or on Windows

00:22:52,659 --> 00:23:00,190
you can use the command line interface

00:22:55,809 --> 00:23:03,059
to create instances three instances of

00:23:00,190 --> 00:23:07,000
CouchDB in this case and tie them to

00:23:03,059 --> 00:23:11,350
create three endpoints and tie them to a

00:23:07,000 --> 00:23:14,019
disk so it's just an a then in this case

00:23:11,350 --> 00:23:16,419
we're working with centos so you create

00:23:14,019 --> 00:23:18,850
three virtual machine images tied in

00:23:16,419 --> 00:23:20,350
together by the endpoints and provision

00:23:18,850 --> 00:23:22,299
disks that are going to be using them as

00:23:20,350 --> 00:23:29,350
well the disks in this case will be 30

00:23:22,299 --> 00:23:30,820
gigabytes so security so one of the

00:23:29,350 --> 00:23:33,970
things like that we started out with

00:23:30,820 --> 00:23:36,610
when you put that app on azure we had it

00:23:33,970 --> 00:23:38,799
running on our local machine and then we

00:23:36,610 --> 00:23:40,509
wanted to do the multi-tier arrangement

00:23:38,799 --> 00:23:41,769
and we had to figure out how to do that

00:23:40,509 --> 00:23:43,240
so the first thing we did is we actually

00:23:41,769 --> 00:23:45,820
put everything on the virtual machine

00:23:43,240 --> 00:23:47,470
which works and then you don't need the

00:23:45,820 --> 00:23:49,560
cross domain JavaScript so we didn't

00:23:47,470 --> 00:23:53,700
actually need to run core server

00:23:49,560 --> 00:23:55,590
but you still need to run nodejs but we

00:23:53,700 --> 00:23:57,240
wanted to show a multi-tier app you know

00:23:55,590 --> 00:24:01,160
because we wanted to have that option of

00:23:57,240 --> 00:24:04,640
having clusters on the back end and a

00:24:01,160 --> 00:24:09,300
single tier in the middle that points to

00:24:04,640 --> 00:24:11,850
clustered entity so in order in order to

00:24:09,300 --> 00:24:14,280
do that we had to set up the security

00:24:11,850 --> 00:24:15,840
using Korres server and these are some

00:24:14,280 --> 00:24:19,290
of the options you've got for security

00:24:15,840 --> 00:24:22,620
of good Active Directory remote

00:24:19,290 --> 00:24:26,460
management you've got a REST API to get

00:24:22,620 --> 00:24:28,940
in there as well as your command 'let's

00:24:26,460 --> 00:24:32,400
to actually manage the security as well

00:24:28,940 --> 00:24:37,080
and cross-platform scripting as i

00:24:32,400 --> 00:24:39,600
mentioned before so the scripting

00:24:37,080 --> 00:24:41,330
capabilities as i mentioned i already

00:24:39,600 --> 00:24:45,210
covered a lot of this so you can reboot

00:24:41,330 --> 00:24:47,850
the machine restart if you have patches

00:24:45,210 --> 00:24:49,890
you can actually script the company of

00:24:47,850 --> 00:24:52,410
the patches to be put on multiple

00:24:49,890 --> 00:24:55,110
clusters and and identify the sequence

00:24:52,410 --> 00:24:56,850
things like that so the virtual machine

00:24:55,110 --> 00:24:58,860
you know you have complete control over

00:24:56,850 --> 00:25:02,300
it it's your machine you can play with

00:24:58,860 --> 00:25:05,690
it you got disks as many as you want and

00:25:02,300 --> 00:25:08,160
they can be manipulated fairly easily

00:25:05,690 --> 00:25:10,710
and when you get into pass things are a

00:25:08,160 --> 00:25:13,530
little bit more sandboxed so you still

00:25:10,710 --> 00:25:16,860
have application control and you have

00:25:13,530 --> 00:25:22,490
some disc control but generally it's

00:25:16,860 --> 00:25:22,490
handled by the platform as a service and

00:25:22,550 --> 00:25:29,880
the app itself provides security and

00:25:27,870 --> 00:25:32,160
some of the other you know version

00:25:29,880 --> 00:25:34,500
control stuff like that one of our

00:25:32,160 --> 00:25:40,290
service providers we work with Cloudant

00:25:34,500 --> 00:25:43,290
windows azure and cloud isn't going to

00:25:40,290 --> 00:25:47,040
work there Cloudant has their own

00:25:43,290 --> 00:25:49,170
version as you probably know of CouchDB

00:25:47,040 --> 00:25:50,910
they also have something that's

00:25:49,170 --> 00:25:54,330
interesting called incremental MapReduce

00:25:50,910 --> 00:25:57,690
engine so you can set up your own

00:25:54,330 --> 00:26:00,330
platform as a service in fact let me go

00:25:57,690 --> 00:26:02,210
back to the previous slide there are

00:26:00,330 --> 00:26:11,680
instructions for doing it on our

00:26:02,210 --> 00:26:11,680
web site seed

00:26:17,740 --> 00:26:26,440
why not once you get in too many windows

00:26:20,170 --> 00:26:28,330
sorry guys I think it's this one no just

00:26:26,440 --> 00:26:32,610
let me go here and I think if I hit ctrl

00:26:28,330 --> 00:26:52,020
click it open that up for me hopefully I

00:26:32,610 --> 00:26:55,210
guess I can cut and paste it there we go

00:26:52,020 --> 00:27:01,540
hopefully how to come up soon couchdb

00:26:55,210 --> 00:27:03,820
runs a lot faster there we go so there

00:27:01,540 --> 00:27:05,470
is an option here for we have

00:27:03,820 --> 00:27:08,260
instructions on how to set up platform

00:27:05,470 --> 00:27:09,550
as a service worker roll with couchdb if

00:27:08,260 --> 00:27:11,740
you didn't want to do that or you had

00:27:09,550 --> 00:27:15,460
customers that didn't want to do that we

00:27:11,740 --> 00:27:20,620
also use Cloudant for that and Cloudant

00:27:15,460 --> 00:27:22,750
actually has their own service that they

00:27:20,620 --> 00:27:25,270
provide they manage the discs they

00:27:22,750 --> 00:27:31,240
manage everything they add a service fee

00:27:25,270 --> 00:27:33,190
on top of that and they also manage any

00:27:31,240 --> 00:27:35,470
patches of security and things like that

00:27:33,190 --> 00:27:39,490
so basically it's just place to put your

00:27:35,470 --> 00:27:41,980
apps and that's a one of our service

00:27:39,490 --> 00:27:45,340
partners and we're we also work with

00:27:41,980 --> 00:27:52,720
lucid works for solo leucine among goal

00:27:45,340 --> 00:27:54,010
as for mongodb and a few others so so i

00:27:52,720 --> 00:27:56,770
described a little bit about the

00:27:54,010 --> 00:27:58,210
multi-tier application there are lots of

00:27:56,770 --> 00:28:00,760
different options when you're working

00:27:58,210 --> 00:28:06,400
with your apps and data in this case

00:28:00,760 --> 00:28:07,570
we've gone with a website deployment and

00:28:06,400 --> 00:28:11,670
I'll get into that in a little bit in a

00:28:07,570 --> 00:28:14,110
minute and we've gone with infra

00:28:11,670 --> 00:28:16,360
infrastructure as a service on the back

00:28:14,110 --> 00:28:19,870
end but you could actually mesh these

00:28:16,360 --> 00:28:21,580
and create multiple platforms depending

00:28:19,870 --> 00:28:24,670
on what you needed or depending on what

00:28:21,580 --> 00:28:29,240
you wanted as well and some of the

00:28:24,670 --> 00:28:31,880
options for IAS pass and SAS

00:28:29,240 --> 00:28:34,130
yeah there's obviously less flexibility

00:28:31,880 --> 00:28:35,300
as you get into SAS more flexibility

00:28:34,130 --> 00:28:38,720
when you're in infrastructure but

00:28:35,300 --> 00:28:41,180
there's more management as well so

00:28:38,720 --> 00:28:43,160
websites so the next thing we did when

00:28:41,180 --> 00:28:44,660
we created that app I put everything on

00:28:43,160 --> 00:28:45,890
the infrastructure as a service tested

00:28:44,660 --> 00:28:48,080
it out make sure everything worked the

00:28:45,890 --> 00:28:49,520
road leaf with a with a browser and then

00:28:48,080 --> 00:28:51,230
we want to do the website so we could

00:28:49,520 --> 00:28:52,940
have a clustered app on the backend that

00:28:51,230 --> 00:28:56,480
axe or a clustered data on the backend

00:28:52,940 --> 00:28:59,330
that was accessed by a single access

00:28:56,480 --> 00:29:02,840
point on the website as a month as a

00:28:59,330 --> 00:29:06,560
middle tier so what we did there is we

00:29:02,840 --> 00:29:12,260
used windows azure websites so let me

00:29:06,560 --> 00:29:13,460
actually go into the management tool so

00:29:12,260 --> 00:29:17,840
by the way I should mention that the

00:29:13,460 --> 00:29:20,960
windows azure management tool is all web

00:29:17,840 --> 00:29:24,770
based there are clients as well and you

00:29:20,960 --> 00:29:29,410
can deploy things through github on top

00:29:24,770 --> 00:29:31,670
of that so this is the actual

00:29:29,410 --> 00:29:33,830
application website that we're looking

00:29:31,670 --> 00:29:37,430
at right now to create a new website

00:29:33,830 --> 00:29:40,970
it's pretty easy you just go create

00:29:37,430 --> 00:29:44,270
website and you can create a quick

00:29:40,970 --> 00:29:47,270
create just creates a in just a basic

00:29:44,270 --> 00:29:48,800
website http accustomed create allows

00:29:47,270 --> 00:29:51,650
you to specify different options

00:29:48,800 --> 00:29:54,470
back-end databases things like that set

00:29:51,650 --> 00:29:56,540
up continuous deployment and also we

00:29:54,470 --> 00:29:58,460
have from gallery so the gallery is kind

00:29:56,540 --> 00:30:00,770
of interesting because you've got some

00:29:58,460 --> 00:30:03,830
standard configurations similar to the

00:30:00,770 --> 00:30:08,300
vm Depot arrangement but for websites

00:30:03,830 --> 00:30:11,450
and these are tested fully functional

00:30:08,300 --> 00:30:13,520
full SLA s updated all the time we've

00:30:11,450 --> 00:30:16,820
got drupal joomla wordpress the standard

00:30:13,520 --> 00:30:22,400
stuff PHP BB and we actually use these a

00:30:16,820 --> 00:30:24,080
lot internally for our own tools so

00:30:22,400 --> 00:30:25,760
that's just an example of some kinds of

00:30:24,080 --> 00:30:30,230
things you can set up so in this case

00:30:25,760 --> 00:30:32,540
what we did we had to create the front

00:30:30,230 --> 00:30:34,550
end for that app which works now we knew

00:30:32,540 --> 00:30:35,750
it worked on our local machine we knew

00:30:34,550 --> 00:30:37,880
it worked on the server as

00:30:35,750 --> 00:30:39,170
infrastructure as a service but we

00:30:37,880 --> 00:30:41,870
didn't know if I was going to work his

00:30:39,170 --> 00:30:42,300
in the middle tier we had to start as

00:30:41,870 --> 00:30:44,970
you were

00:30:42,300 --> 00:30:46,980
call when you go into the remote desktop

00:30:44,970 --> 00:30:49,170
we have to start this somehow when we

00:30:46,980 --> 00:30:51,060
put it on a website web sites are fairly

00:30:49,170 --> 00:30:52,950
well sandbox as I mentioned so there's

00:30:51,060 --> 00:30:55,110
very few options for deployment and

00:30:52,950 --> 00:31:00,540
setup but one of the features you have

00:30:55,110 --> 00:31:06,030
in web sites is get so we actually

00:31:00,540 --> 00:31:09,270
created a instance of this with some

00:31:06,030 --> 00:31:11,610
scripting built into it using grunt to

00:31:09,270 --> 00:31:13,440
kick off the core server we are able to

00:31:11,610 --> 00:31:15,630
put that scripting in our deployment and

00:31:13,440 --> 00:31:18,600
we've deployed this out to the website

00:31:15,630 --> 00:31:20,460
it actually automatically generated the

00:31:18,600 --> 00:31:22,980
scripts and starts running the command

00:31:20,460 --> 00:31:24,780
line for us we'll never see that command

00:31:22,980 --> 00:31:25,950
line you actually can't access it and

00:31:24,780 --> 00:31:29,640
you can't actually run things

00:31:25,950 --> 00:31:31,950
server-side like that unless you use the

00:31:29,640 --> 00:31:33,930
deployment script so that's the trick

00:31:31,950 --> 00:31:36,660
that we used to do that so then we had a

00:31:33,930 --> 00:31:39,810
multi-tier website that we could

00:31:36,660 --> 00:31:41,190
actually use some of the options you can

00:31:39,810 --> 00:31:45,480
use here to actually work with these

00:31:41,190 --> 00:31:47,760
websites you can download a publish

00:31:45,480 --> 00:31:49,890
profile and that published profile works

00:31:47,760 --> 00:31:52,230
with visual studio it works with the

00:31:49,890 --> 00:31:54,270
tool called webmatrix i think i have

00:31:52,230 --> 00:31:59,790
that working here yep this is the actual

00:31:54,270 --> 00:32:01,410
site as it looks for web matrix and as

00:31:59,790 --> 00:32:03,000
you can see we've got bootstrap in here

00:32:01,410 --> 00:32:06,000
we've got some source and got some

00:32:03,000 --> 00:32:07,500
JavaScript there's very little HTML in

00:32:06,000 --> 00:32:10,620
here because we're using Twitter

00:32:07,500 --> 00:32:14,070
bootstrap there's a lot of CSS a little

00:32:10,620 --> 00:32:18,720
bit of HTML and some Jason packages but

00:32:14,070 --> 00:32:21,270
in general the whole application can be

00:32:18,720 --> 00:32:23,910
actually managed you can't actually

00:32:21,270 --> 00:32:27,260
start those server-side scripts but you

00:32:23,910 --> 00:32:29,880
can manage the application through

00:32:27,260 --> 00:32:33,690
through this tool called webmatrix and

00:32:29,880 --> 00:32:36,060
it's a free download let me show you

00:32:33,690 --> 00:32:37,680
here there it is it's actually a free

00:32:36,060 --> 00:32:39,960
download that you can use and it's a web

00:32:37,680 --> 00:32:42,030
application development tool and you can

00:32:39,960 --> 00:32:44,460
manage windows add your websites from

00:32:42,030 --> 00:32:46,410
there as well I've got a friend of mine

00:32:44,460 --> 00:32:48,900
who is teaches at a community college

00:32:46,410 --> 00:32:50,670
and he uses this for his his class he

00:32:48,900 --> 00:32:53,820
gets everyone to sign up with a 90 day

00:32:50,670 --> 00:32:55,110
free trial on the on the Windows Azure

00:32:53,820 --> 00:32:57,150
website

00:32:55,110 --> 00:32:58,679
and then he downloads a sing called the

00:32:57,150 --> 00:33:04,049
windows azure training kit which has a

00:32:58,679 --> 00:33:05,970
lot of PHP and HTML course we're all for

00:33:04,049 --> 00:33:10,380
free and then they load up webmatrix and

00:33:05,970 --> 00:33:12,630
for the 90 days they do a PHP HTML web

00:33:10,380 --> 00:33:15,660
application development of course and

00:33:12,630 --> 00:33:19,070
it's actually all free but the web major

00:33:15,660 --> 00:33:19,070
is actually a pretty good tool for that

00:33:19,910 --> 00:33:27,120
alright so that's Windows Azure websites

00:33:25,620 --> 00:33:29,100
I just want to show you some of the

00:33:27,120 --> 00:33:30,600
configuration when you actually put data

00:33:29,100 --> 00:33:34,080
on the windows azure websites one of the

00:33:30,600 --> 00:33:36,179
reasons it's sandboxed is that it

00:33:34,080 --> 00:33:37,950
actually clusters your data

00:33:36,179 --> 00:33:40,919
automatically puts it on different

00:33:37,950 --> 00:33:42,720
servers so that if one segment goes down

00:33:40,919 --> 00:33:43,890
you never lose access to your data so

00:33:42,720 --> 00:33:47,549
that's how we get the ninety-nine point

00:33:43,890 --> 00:33:51,929
nine five percent up time you can also

00:33:47,549 --> 00:33:53,549
create reserved instances so that's

00:33:51,929 --> 00:33:55,380
another option as well so next to your

00:33:53,549 --> 00:33:57,630
ups a little bit more expensive but you

00:33:55,380 --> 00:34:05,100
can create reserved instances which are

00:33:57,630 --> 00:34:07,290
clustered as well so supported web

00:34:05,100 --> 00:34:11,250
frameworks the one we're using here is

00:34:07,290 --> 00:34:15,090
nodejs got PHP net of course an ASP of

00:34:11,250 --> 00:34:18,179
course and deployment methods you got

00:34:15,090 --> 00:34:20,460
ftp team foundation server web deploy

00:34:18,179 --> 00:34:25,740
and get so i show the get deployment for

00:34:20,460 --> 00:34:27,179
that website and these are some of the

00:34:25,740 --> 00:34:29,129
partners as i mentioned when you wanted

00:34:27,179 --> 00:34:31,770
to if you want to create a website that

00:34:29,129 --> 00:34:33,359
has drupal joomla wordpress takes about

00:34:31,770 --> 00:34:35,250
five minutes you can fire up a drupal

00:34:33,359 --> 00:34:36,720
website and it's ready to go if you want

00:34:35,250 --> 00:34:38,940
to change extensions or themes use

00:34:36,720 --> 00:34:42,300
webmatrix download the actual

00:34:38,940 --> 00:34:44,700
configuration add a module at an

00:34:42,300 --> 00:34:48,350
extension at a theme and publish it back

00:34:44,700 --> 00:34:48,350
up to the website fairly easily and

00:34:51,139 --> 00:34:55,790
nodejs and crunch us a little bit about

00:34:53,490 --> 00:34:59,130
that how many people worked with nodejs

00:34:55,790 --> 00:35:03,530
okay so nodejs is a server-side

00:34:59,130 --> 00:35:07,100
javascript tool it enables a quick

00:35:03,530 --> 00:35:10,370
processing extremely quick processing

00:35:07,100 --> 00:35:13,370
of data through a queuing method instead

00:35:10,370 --> 00:35:16,160
of using events each time a request

00:35:13,370 --> 00:35:18,290
comes in it gets queued that is

00:35:16,160 --> 00:35:21,140
processed in a separate process and then

00:35:18,290 --> 00:35:22,820
the state is remembered on disk and when

00:35:21,140 --> 00:35:25,940
you're done with the process it comes

00:35:22,820 --> 00:35:27,790
back and puts the to the request in the

00:35:25,940 --> 00:35:30,290
road and the response together for you

00:35:27,790 --> 00:35:32,270
as I mentioned it to event loop with a

00:35:30,290 --> 00:35:34,340
stack and that's why we use it and why

00:35:32,270 --> 00:35:36,230
do we use grunt well we use grunt tujh

00:35:34,340 --> 00:35:42,110
actually just facilitate the running of

00:35:36,230 --> 00:35:46,130
those of the core server and make sure

00:35:42,110 --> 00:35:48,410
that everything's up and running uh I

00:35:46,130 --> 00:35:50,090
think it's about it I've got a little

00:35:48,410 --> 00:35:52,880
slide here on an application scenarios

00:35:50,090 --> 00:35:55,880
kind of hard to see from there but I

00:35:52,880 --> 00:35:57,800
think I covered in general already what

00:35:55,880 --> 00:35:59,540
you can do is you can create Windows add

00:35:57,800 --> 00:36:01,010
your websites that are multi-tier first

00:35:59,540 --> 00:36:02,480
of all you can just create everything on

00:36:01,010 --> 00:36:04,700
infrastructure as a service if you want

00:36:02,480 --> 00:36:07,310
to just like you would any single server

00:36:04,700 --> 00:36:09,860
if you want Multi multi server you want

00:36:07,310 --> 00:36:13,760
replica sets I'm sorry in this case of

00:36:09,860 --> 00:36:16,700
clusters and high availability sets of

00:36:13,760 --> 00:36:19,730
your data you can use the multi-tier

00:36:16,700 --> 00:36:22,040
structure which will be websites and or

00:36:19,730 --> 00:36:24,380
pass worker roles accessing the back-end

00:36:22,040 --> 00:36:25,910
infrastructure as a service as well and

00:36:24,380 --> 00:36:28,310
I've got a bunch of resources here

00:36:25,910 --> 00:36:30,830
they'll be i'll be sharing the slides in

00:36:28,310 --> 00:36:32,120
a minute and they'll be out there on the

00:36:30,830 --> 00:36:36,520
web if you want to follow up with any of

00:36:32,120 --> 00:36:36,520
these and let me take some questions

00:36:38,770 --> 00:36:41,770
yeah

00:36:44,229 --> 00:36:48,859
it's rolled in so you can use Linux

00:36:47,089 --> 00:36:53,679
there's no license for that obviously if

00:36:48,859 --> 00:36:56,539
you use Windows the windows license is

00:36:53,679 --> 00:36:59,539
rolled into your cost and it's charged

00:36:56,539 --> 00:37:02,150
by by space and by bandwidth and things

00:36:59,539 --> 00:37:04,789
like that now interestingly if you

00:37:02,150 --> 00:37:06,979
already have on-premise Windows Server

00:37:04,789 --> 00:37:13,609
licenses there is a way to credit that

00:37:06,979 --> 00:37:15,019
and so you're not using your your if

00:37:13,609 --> 00:37:17,209
this so you're not paying twice for that

00:37:15,019 --> 00:37:20,269
license basically so if you do actually

00:37:17,209 --> 00:37:21,650
have some you know enterprise agreements

00:37:20,269 --> 00:37:26,719
or something like that that you can use

00:37:21,650 --> 00:37:29,089
Windows Server 2012 or 2008 then you can

00:37:26,719 --> 00:37:31,910
actually use those licenses for credit

00:37:29,089 --> 00:37:34,429
for that so but yeah it's it's rolled in

00:37:31,910 --> 00:37:36,890
its it's part of the it's part of the

00:37:34,429 --> 00:37:40,539
fee but you don't see it separately

00:37:36,890 --> 00:37:40,539
there's no license fee or anything

00:37:44,420 --> 00:37:50,120
another question okay well I'm going to

00:37:47,540 --> 00:37:54,050
put that app that actually the links

00:37:50,120 --> 00:37:58,040
here have that ranking yeah but I do

00:37:54,050 --> 00:38:01,090
that waits for the for our blog windows

00:37:58,040 --> 00:38:04,340
azure the training kit that i mentioned

00:38:01,090 --> 00:38:06,260
SDKs and command-line tools also the web

00:38:04,340 --> 00:38:08,750
platform installer is something you can

00:38:06,260 --> 00:38:11,600
use to to roll things out to the web and

00:38:08,750 --> 00:38:13,370
cover that great detail webmatrix is the

00:38:11,600 --> 00:38:16,450
application tool that I talked about for

00:38:13,370 --> 00:38:18,620
using Windows Azure websites and also

00:38:16,450 --> 00:38:21,110
when I share these slides I'll put the

00:38:18,620 --> 00:38:22,970
link for the for the astral application

00:38:21,110 --> 00:38:26,240
which is out on github if you want to

00:38:22,970 --> 00:38:32,930
reuse it it can be reused it works with

00:38:26,240 --> 00:38:35,590
back-end couchdb on Azure that's it okay

00:38:32,930 --> 00:38:35,590

YouTube URL: https://www.youtube.com/watch?v=Vagb1fJOh3Q


