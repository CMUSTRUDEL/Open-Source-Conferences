Title: Continuous Delivery with Maven, Puppet and Tomcat
Publication date: 2013-10-18
Playlist: Apachecon NA 2013 - day 3
Description: 
	Carlos Sanchez
ApacheCon NA 2013
Community Over Code
Captions: 
	00:00:00,030 --> 00:00:07,830
thank you for coming I hope you all have

00:00:03,319 --> 00:00:10,469
coffee to stay up for the next hour I'll

00:00:07,830 --> 00:00:15,330
try to make it not as boring as usual

00:00:10,469 --> 00:00:18,869
but maybe it'll manage to show feel free

00:00:15,330 --> 00:00:20,279
to ask me questions anytime there's a

00:00:18,869 --> 00:00:22,800
mic there because they are recording the

00:00:20,279 --> 00:00:27,990
session so if you can stand up I guess

00:00:22,800 --> 00:00:30,300
there that's gonna be great I'm gonna go

00:00:27,990 --> 00:00:33,270
through the slides probably the first

00:00:30,300 --> 00:00:36,719
half and then I have some examples to

00:00:33,270 --> 00:00:40,890
show you so we can go as deep as you

00:00:36,719 --> 00:00:43,230
wanting any any of the of the parts so

00:00:40,890 --> 00:00:48,989
just feel free to interrupt me at any

00:00:43,230 --> 00:00:51,629
time so Who I am

00:00:48,989 --> 00:00:54,120
so that's my to handle if you want to do

00:00:51,629 --> 00:00:58,140
it about the session how great it is how

00:00:54,120 --> 00:01:00,500
amazing great all the bad things - so I

00:00:58,140 --> 00:01:04,979
know who you are

00:01:00,500 --> 00:01:07,890
some ASF member long time mavin

00:01:04,979 --> 00:01:10,790
committer also the other build related

00:01:07,890 --> 00:01:15,720
projects are Apache like archive

00:01:10,790 --> 00:01:18,810
continuum and I've done a lot of let's

00:01:15,720 --> 00:01:21,240
say help with other projects - I've

00:01:18,810 --> 00:01:25,070
involved having involving other projects

00:01:21,240 --> 00:01:29,100
at the cliff foundation sprint security

00:01:25,070 --> 00:01:31,290
you name it puppet stuff so I try to

00:01:29,100 --> 00:01:33,630
contribute as much as I can mostly

00:01:31,290 --> 00:01:37,340
because I will might go to be released

00:01:33,630 --> 00:01:41,729
on those projects are at song with an

00:01:37,340 --> 00:01:44,700
encouragement and any word for maestro

00:01:41,729 --> 00:01:47,420
left which is startup in basing Los

00:01:44,700 --> 00:01:51,810
Angeles although I live in a spring and

00:01:47,420 --> 00:01:53,460
where we do a lot of the automation

00:01:51,810 --> 00:01:56,159
since the sort of things that you will

00:01:53,460 --> 00:01:59,670
see here so we build up - Oh maestro

00:01:56,159 --> 00:02:01,829
that it's orchestration for the

00:01:59,670 --> 00:02:04,200
development lifecycle source control

00:02:01,829 --> 00:02:08,220
source code all the way to deployment to

00:02:04,200 --> 00:02:12,599
production and so we basically automate

00:02:08,220 --> 00:02:13,870
all these steps in a in our way nicer

00:02:12,599 --> 00:02:15,489
way than

00:02:13,870 --> 00:02:22,959
can be done with the without the

00:02:15,489 --> 00:02:26,410
individual tools so a little bit of how

00:02:22,959 --> 00:02:29,519
we got here on the automation world so

00:02:26,410 --> 00:02:32,980
at you you are familiar with agile I

00:02:29,519 --> 00:02:37,930
suppose who is using agile methodologies

00:02:32,980 --> 00:02:42,670
here yeah some some people are wondering

00:02:37,930 --> 00:02:44,319
if they do it so we have we have all

00:02:42,670 --> 00:02:46,329
this planning iterative development

00:02:44,319 --> 00:02:50,620
continuous integration release soon

00:02:46,329 --> 00:02:53,769
release often so what we we've been

00:02:50,620 --> 00:02:56,410
through is moving from waterfall

00:02:53,769 --> 00:02:59,860
methodologies were releases don't happen

00:02:56,410 --> 00:03:03,700
that nothing to a model work with the

00:02:59,860 --> 00:03:06,730
releases pretty often even several times

00:03:03,700 --> 00:03:08,650
a day so there's people that actually do

00:03:06,730 --> 00:03:10,569
that

00:03:08,650 --> 00:03:13,269
it's like unicorns they say they're

00:03:10,569 --> 00:03:14,829
cysts but nobody's seen them but there's

00:03:13,269 --> 00:03:19,329
there's some people that actually do

00:03:14,829 --> 00:03:21,459
that so several continuous releases a

00:03:19,329 --> 00:03:25,540
lot of people just think about agile in

00:03:21,459 --> 00:03:27,100
a different way so that's not what I'm

00:03:25,540 --> 00:03:30,540
going to talk about and what I'm talking

00:03:27,100 --> 00:03:36,930
about the real agile methodologies and

00:03:30,540 --> 00:03:40,599
what they so what we're trying to solve

00:03:36,930 --> 00:03:45,880
on day let's say continuous deployment

00:03:40,599 --> 00:03:49,269
scythe is with agile we try to avoid a

00:03:45,880 --> 00:03:51,280
fear of change what's going to happen

00:03:49,269 --> 00:03:54,609
when I make a release and I push this

00:03:51,280 --> 00:03:58,569
into production something really bad is

00:03:54,609 --> 00:04:00,940
going to happen the deployments works in

00:03:58,569 --> 00:04:03,819
my machine and all these different teams

00:04:00,940 --> 00:04:05,620
working on different silos or sections

00:04:03,819 --> 00:04:08,169
like the developers were do their own

00:04:05,620 --> 00:04:12,069
thing and then the operations people do

00:04:08,169 --> 00:04:14,769
their another thing and they just throw

00:04:12,069 --> 00:04:18,789
stuff from one to another and sometimes

00:04:14,769 --> 00:04:22,180
not in a very nice way so what happens

00:04:18,789 --> 00:04:23,639
is that developers their main focus or

00:04:22,180 --> 00:04:26,280
some change

00:04:23,639 --> 00:04:28,680
getting new features out doing more

00:04:26,280 --> 00:04:30,930
stuff anything that the business asked

00:04:28,680 --> 00:04:32,340
for world operations people are trying

00:04:30,930 --> 00:04:35,669
to make everything assist able as

00:04:32,340 --> 00:04:40,889
possible so this two concepts kind of

00:04:35,669 --> 00:04:47,819
clash sometimes so obviously from the

00:04:40,889 --> 00:04:50,030
agile manifesto so what this is a subtly

00:04:47,819 --> 00:04:53,189
where we're trying to do focus on the

00:04:50,030 --> 00:04:56,550
processes make and the people and make

00:04:53,189 --> 00:05:00,030
sure that everything goes as nice as as

00:04:56,550 --> 00:05:02,969
possible so on the one hand you have the

00:05:00,030 --> 00:05:06,030
option requirements when you're a

00:05:02,969 --> 00:05:08,699
developer and they look like that

00:05:06,030 --> 00:05:11,539
something really complex that you'll

00:05:08,699 --> 00:05:14,219
have no idea how it's supposed to work

00:05:11,539 --> 00:05:17,129
so you have all these combinations of

00:05:14,219 --> 00:05:18,710
configuration operating systems and you

00:05:17,129 --> 00:05:23,129
can have that in multiple environments

00:05:18,710 --> 00:05:25,770
and for software developer is like how

00:05:23,129 --> 00:05:30,469
can i deploy this in a repeatable

00:05:25,770 --> 00:05:34,500
consisting way to production without

00:05:30,469 --> 00:05:38,580
manual steps so as automated as possible

00:05:34,500 --> 00:05:40,740
and obviously with with a cloud you have

00:05:38,580 --> 00:05:44,969
the same problem but how do I do this

00:05:40,740 --> 00:05:49,319
across hundreds of machines so there are

00:05:44,969 --> 00:05:52,110
some solutions it's not always as simple

00:05:49,319 --> 00:05:53,580
as it looks there's some solutions are

00:05:52,110 --> 00:05:55,940
very simple but they are not always

00:05:53,580 --> 00:05:55,940
right

00:05:56,779 --> 00:06:04,020
so there's being a movement that

00:06:01,979 --> 00:06:11,819
probably everybody knows here who knows

00:06:04,020 --> 00:06:14,580
DevOps DevOps no yes kind of yeah so

00:06:11,819 --> 00:06:19,229
well who considers themselves as

00:06:14,580 --> 00:06:25,300
developers in this room operations

00:06:19,229 --> 00:06:27,710
people doing both of them okay

00:06:25,300 --> 00:06:29,750
it depends how big usually it depends

00:06:27,710 --> 00:06:38,450
how big the companies you may am doing

00:06:29,750 --> 00:06:39,950
anything and even sales so which is

00:06:38,450 --> 00:06:42,230
always nice to be in front of a client

00:06:39,950 --> 00:06:46,580
that also you how your ship doesn't work

00:06:42,230 --> 00:06:51,410
but besides that so the verb the DevOps

00:06:46,580 --> 00:06:53,800
movement became like the mixture of the

00:06:51,410 --> 00:06:56,990
developers operations getting together

00:06:53,800 --> 00:06:59,450
trying to figure out things together not

00:06:56,990 --> 00:07:01,220
independently like I work my I do my

00:06:59,450 --> 00:07:02,900
stuff on the development side you do

00:07:01,220 --> 00:07:06,020
your stuff on the operation side and

00:07:02,900 --> 00:07:09,200
we'll figure out later how how we push

00:07:06,020 --> 00:07:12,100
things from one place to another and the

00:07:09,200 --> 00:07:14,240
always neglected side is the QA part

00:07:12,100 --> 00:07:15,950
that you always we included that

00:07:14,240 --> 00:07:20,180
probably the name is but we a little bit

00:07:15,950 --> 00:07:24,080
longer and it's not so fancy but

00:07:20,180 --> 00:07:27,680
obviously you should consider QA as part

00:07:24,080 --> 00:07:30,980
of the DevOps naming conventions

00:07:27,680 --> 00:07:33,380
whatever so there's another nice way to

00:07:30,980 --> 00:07:35,120
explain what the box is which is to make

00:07:33,380 --> 00:07:36,830
errors is human to propagate the error

00:07:35,120 --> 00:07:40,520
tone servers in automatic quakes

00:07:36,830 --> 00:07:42,410
- DevOps so that's pretty much what

00:07:40,520 --> 00:07:45,590
we're trying to accomplish here when you

00:07:42,410 --> 00:07:47,890
make mistakes automatic deployment your

00:07:45,590 --> 00:07:50,750
mistakes gets deployed everywhere

00:07:47,890 --> 00:07:54,040
automatically you don't need to you

00:07:50,750 --> 00:07:54,040
don't need to do anything there so

00:07:54,400 --> 00:08:01,070
typically the delivery cycle or

00:07:59,030 --> 00:08:07,460
development cycle is development QA

00:08:01,070 --> 00:08:11,000
operations but it's not or the idea is

00:08:07,460 --> 00:08:13,910
that you should think about about it in

00:08:11,000 --> 00:08:17,600
a different way also which is the

00:08:13,910 --> 00:08:19,820
feedback loops where you should consider

00:08:17,600 --> 00:08:23,030
what the operation has to say what the

00:08:19,820 --> 00:08:27,350
QA people has to say and not only that

00:08:23,030 --> 00:08:30,140
but also told you you could you should

00:08:27,350 --> 00:08:33,200
have access to production logs you

00:08:30,140 --> 00:08:35,510
should have access to metrics on how

00:08:33,200 --> 00:08:36,230
your system as a developer you should

00:08:35,510 --> 00:08:39,440
have

00:08:36,230 --> 00:08:44,090
metrics on how your system is is doing

00:08:39,440 --> 00:08:46,220
in production and so just to be clear

00:08:44,090 --> 00:08:48,080
when you talk when you hear about DevOps

00:08:46,220 --> 00:08:48,860
there's a lot of operations people

00:08:48,080 --> 00:08:51,230
talking about it

00:08:48,860 --> 00:08:56,510
my background is completely on the other

00:08:51,230 --> 00:08:58,310
side and developer side so just have

00:08:56,510 --> 00:09:03,110
that into account that I'm biased and on

00:08:58,310 --> 00:09:05,120
the development side so when you are a

00:09:03,110 --> 00:09:08,000
developer and you need to push things in

00:09:05,120 --> 00:09:10,400
to move the thing move your development

00:09:08,000 --> 00:09:13,190
into production you have to have into

00:09:10,400 --> 00:09:15,050
account things like their what packages

00:09:13,190 --> 00:09:19,100
needs to install what versions of those

00:09:15,050 --> 00:09:22,270
packages but also you have the feedback

00:09:19,100 --> 00:09:25,280
loops like QA people telling you how

00:09:22,270 --> 00:09:28,730
testable is your software how you should

00:09:25,280 --> 00:09:32,720
change themes during development to make

00:09:28,730 --> 00:09:35,360
your software more testable and what I

00:09:32,720 --> 00:09:37,460
mentioned before like production you

00:09:35,360 --> 00:09:41,090
should be able to get metrics and logs

00:09:37,460 --> 00:09:44,480
and people from operations can tell you

00:09:41,090 --> 00:09:48,110
what what security updates you need to

00:09:44,480 --> 00:09:51,410
do in your inter software and so so it's

00:09:48,110 --> 00:09:55,280
not always about the tools but really

00:09:51,410 --> 00:09:57,740
it's a methodology or our movement but

00:09:55,280 --> 00:10:01,850
without the tools there's no way you can

00:09:57,740 --> 00:10:03,320
actually do it the same way you can do

00:10:01,850 --> 00:10:06,350
continuous integration with shell

00:10:03,320 --> 00:10:10,760
scripts that's not probably the best way

00:10:06,350 --> 00:10:13,490
to do so something that Patrick Dubois

00:10:10,760 --> 00:10:17,120
said he's the one that coined the term

00:10:13,490 --> 00:10:19,010
DevOps tools can enable change in

00:10:17,120 --> 00:10:22,100
behavior and change the culture same

00:10:19,010 --> 00:10:26,270
thing like Gutenberg printer did alright

00:10:22,100 --> 00:10:30,080
so start about the tools but tools are

00:10:26,270 --> 00:10:32,960
really helpful and you but you'll find

00:10:30,080 --> 00:10:34,850
out they're also people that the same

00:10:32,960 --> 00:10:37,220
way that everything is cloud enabled

00:10:34,850 --> 00:10:39,920
nowadays now these people saying well

00:10:37,220 --> 00:10:44,040
there's Tooley's DevOps and something or

00:10:39,920 --> 00:10:50,269
another right so there

00:10:44,040 --> 00:10:55,079
three key concepts here one of them

00:10:50,269 --> 00:11:00,209
continuous delivery the book these guys

00:10:55,079 --> 00:11:07,310
wrote on how to kind of describes what

00:11:00,209 --> 00:11:07,310
continuous delivery is so when you have

00:11:08,180 --> 00:11:15,720
agile lifecycle so even if even when you

00:11:13,079 --> 00:11:19,940
are doing a job which is you still have

00:11:15,720 --> 00:11:24,709
the development QA and operation cycle

00:11:19,940 --> 00:11:27,930
so continuously live delivery kind of

00:11:24,709 --> 00:11:32,160
takes that to the extreme or between all

00:11:27,930 --> 00:11:33,779
those fastest phases continuously and so

00:11:32,160 --> 00:11:36,600
you do development your own operations

00:11:33,779 --> 00:11:39,149
and I'm so continuously so you don't

00:11:36,600 --> 00:11:42,300
wait until everything goes through QA

00:11:39,149 --> 00:11:46,800
you just keep pushing things all the way

00:11:42,300 --> 00:11:50,180
forward another key concept this

00:11:46,800 --> 00:11:53,990
infrastructure of scope something that

00:11:50,180 --> 00:11:57,470
puppet and chef made really popular so

00:11:53,990 --> 00:12:01,920
it's not nothing it's not anything new

00:11:57,470 --> 00:12:05,699
but again is these tools make it really

00:12:01,920 --> 00:12:08,579
easier nicer to do there's obviously you

00:12:05,699 --> 00:12:11,040
can't do anything you could do it before

00:12:08,579 --> 00:12:12,899
there was a lot of people and operations

00:12:11,040 --> 00:12:15,209
doing it before writing their own

00:12:12,899 --> 00:12:18,360
scripts to automate things

00:12:15,209 --> 00:12:22,819
it's just that puppet or share from some

00:12:18,360 --> 00:12:26,130
other tools out there and standardize on

00:12:22,819 --> 00:12:28,850
helps on doing it the right way the

00:12:26,130 --> 00:12:34,889
right way so I'm going to talk about

00:12:28,850 --> 00:12:37,829
puppet puppet basically uses manifests

00:12:34,889 --> 00:12:41,339
there are like Ruby like syntax it's

00:12:37,829 --> 00:12:47,459
around DSL but kinda looks like Ruby how

00:12:41,339 --> 00:12:51,269
do it's not so that's that's a typical

00:12:47,459 --> 00:12:56,730
example so you can execute some commands

00:12:51,269 --> 00:12:57,750
you can define files that need to be

00:12:56,730 --> 00:12:59,760
present or

00:12:57,750 --> 00:13:03,540
absinthe or you can copy files to the

00:12:59,760 --> 00:13:06,950
machine seat covers are a lot of other

00:13:03,540 --> 00:13:09,540
different steps they're an

00:13:06,950 --> 00:13:13,770
infrastructure is called so you can

00:13:09,540 --> 00:13:16,740
define s code that I need some package

00:13:13,770 --> 00:13:21,420
install and puppet is going to run that

00:13:16,740 --> 00:13:23,520
and install that package for you so you

00:13:21,420 --> 00:13:25,590
are defining a scull all the

00:13:23,520 --> 00:13:29,430
infrastructure that you can you can have

00:13:25,590 --> 00:13:30,420
in your in your servers it's important

00:13:29,430 --> 00:13:33,060
to mention that it's a declarative

00:13:30,420 --> 00:13:35,400
models so if I need to describes this

00:13:33,060 --> 00:13:38,790
state and not the process this is a

00:13:35,400 --> 00:13:41,580
common issue with that people are

00:13:38,790 --> 00:13:45,600
starting to use puppet hat so you don't

00:13:41,580 --> 00:13:47,400
define what are the steps to get to some

00:13:45,600 --> 00:13:49,980
state you just define this state the

00:13:47,400 --> 00:13:51,840
state something like ant versus maven

00:13:49,980 --> 00:13:53,360
for instance and and you describe all

00:13:51,840 --> 00:13:56,430
the different steps

00:13:53,360 --> 00:13:57,920
maven you just say where are the

00:13:56,430 --> 00:14:00,600
dependencies and what you want to do

00:13:57,920 --> 00:14:03,740
whether it is building a jar or a war or

00:14:00,600 --> 00:14:08,520
something so this is important because

00:14:03,740 --> 00:14:11,820
let's say you have to create a directory

00:14:08,520 --> 00:14:14,130
to create a file so if you need to do

00:14:11,820 --> 00:14:18,030
things in order you need to make sure

00:14:14,130 --> 00:14:21,780
that you define that they order

00:14:18,030 --> 00:14:24,089
explicitly because it does there is

00:14:21,780 --> 00:14:26,420
their end state what matters to puppet I

00:14:24,089 --> 00:14:29,280
need you to run puppet several times

00:14:26,420 --> 00:14:37,710
that also you also need to ensure that

00:14:29,280 --> 00:14:44,630
this state is consistent so new

00:14:37,710 --> 00:14:47,040
solutions bring also new challenges so

00:14:44,630 --> 00:14:49,940
when you use have infrastructure is

00:14:47,040 --> 00:14:52,500
called just need to start applying your

00:14:49,940 --> 00:14:55,200
development best practices to jury first

00:14:52,500 --> 00:14:58,490
structure Cup so whether it is

00:14:55,200 --> 00:15:01,530
tie game branching making releases

00:14:58,490 --> 00:15:03,420
moving during infrastructure go through

00:15:01,530 --> 00:15:07,580
the different stages of development QA

00:15:03,420 --> 00:15:10,290
or production is really important so

00:15:07,580 --> 00:15:13,500
like we have our puppet manaphy

00:15:10,290 --> 00:15:14,970
tests we run unit tests on those puppet

00:15:13,500 --> 00:15:20,339
manifests that describe the

00:15:14,970 --> 00:15:22,889
infrastructure and we make releases so

00:15:20,339 --> 00:15:24,959
we can all easily go back to previous

00:15:22,889 --> 00:15:26,730
versions and things like that so

00:15:24,959 --> 00:15:29,220
everything that is being invented

00:15:26,730 --> 00:15:33,000
already for development now you could do

00:15:29,220 --> 00:15:35,880
it with with infrastructure so who here

00:15:33,000 --> 00:15:38,420
is able to for instance roll back to a

00:15:35,880 --> 00:15:42,149
previous version of their development

00:15:38,420 --> 00:15:44,639
project being able to for source code

00:15:42,149 --> 00:15:50,149
right okay and who is able to do that

00:15:44,639 --> 00:15:54,000
for infrastructure so let's say you

00:15:50,149 --> 00:15:56,490
install a new package you deploy there

00:15:54,000 --> 00:15:59,279
things don't work you need to roll back

00:15:56,490 --> 00:16:02,009
but in Denali you don't only read need

00:15:59,279 --> 00:16:03,750
to roll back your application you also

00:16:02,009 --> 00:16:06,449
need to roll back the infrastructure

00:16:03,750 --> 00:16:07,920
that supports your application so that's

00:16:06,449 --> 00:16:10,230
the kind of thing that you could do now

00:16:07,920 --> 00:16:12,959
with infrastructure let's go you can

00:16:10,230 --> 00:16:14,670
thank your infrastructure and you could

00:16:12,959 --> 00:16:16,800
say this is the version that goes with

00:16:14,670 --> 00:16:18,209
this version of the application should

00:16:16,800 --> 00:16:22,230
they all become dependencies between

00:16:18,209 --> 00:16:24,829
them being able to to use them together

00:16:22,230 --> 00:16:30,720
and rolling back and move forward and

00:16:24,829 --> 00:16:34,250
replicate them and so on another key

00:16:30,720 --> 00:16:36,420
concept here is the self servicing so

00:16:34,250 --> 00:16:40,470
this is something that became really

00:16:36,420 --> 00:16:42,060
popular with files obviously so being

00:16:40,470 --> 00:16:45,930
able to have infrastructure available

00:16:42,060 --> 00:16:49,910
for you anytime and that anybody any

00:16:45,930 --> 00:16:52,160
developer can have access to right so

00:16:49,910 --> 00:16:56,010
that's what you can do with

00:16:52,160 --> 00:16:58,589
virtualization and cloud and basically

00:16:56,010 --> 00:17:01,110
you are giving the developers the the

00:16:58,589 --> 00:17:03,779
power to do all these things by

00:17:01,110 --> 00:17:07,650
themselves without needing to go through

00:17:03,779 --> 00:17:12,150
long processes of procurement or

00:17:07,650 --> 00:17:14,459
anything like that right so really but

00:17:12,150 --> 00:17:18,110
it's what you are doing is reducing the

00:17:14,459 --> 00:17:21,540
time to market making shorter cycles

00:17:18,110 --> 00:17:21,900
which also helps um on having continuous

00:17:21,540 --> 00:17:29,020
that

00:17:21,900 --> 00:17:29,950
and with great power comes also great

00:17:29,020 --> 00:17:33,520
responsibility

00:17:29,950 --> 00:17:35,230
you need developers to understand what

00:17:33,520 --> 00:17:38,560
that means right do you have access to

00:17:35,230 --> 00:17:40,990
these clouds you can start them any

00:17:38,560 --> 00:17:43,150
machines as you want but just make sure

00:17:40,990 --> 00:17:47,440
you clean up after you and things like

00:17:43,150 --> 00:17:51,670
that so that needs to be be understood

00:17:47,440 --> 00:17:56,230
too and there's some tools out there

00:17:51,670 --> 00:18:00,130
that help greatly achieve this self

00:17:56,230 --> 00:18:03,880
servicing so one of them is vagrant so

00:18:00,130 --> 00:18:06,790
big ring is a tool command-line tool on

00:18:03,880 --> 00:18:10,200
top of real toolbox that allows you to

00:18:06,790 --> 00:18:13,660
easily store new VMs from the landline

00:18:10,200 --> 00:18:20,140
provision them with puppet or chef and

00:18:13,660 --> 00:18:21,940
destroy them yes SPC so this enables the

00:18:20,140 --> 00:18:24,460
collaboration between developers and

00:18:21,940 --> 00:18:28,660
operations so you could just share a

00:18:24,460 --> 00:18:31,060
base image of a SVM with vagrant you can

00:18:28,660 --> 00:18:35,680
provision that base VM with puppet

00:18:31,060 --> 00:18:37,960
scripts or chef scripts so you could

00:18:35,680 --> 00:18:40,270
have your operations people write some

00:18:37,960 --> 00:18:42,760
puppet script and they give you okay

00:18:40,270 --> 00:18:46,240
this is your vagrant file that defines

00:18:42,760 --> 00:18:48,430
these are the puppet manifests and this

00:18:46,240 --> 00:18:50,740
is the base VM which obeys VM is just

00:18:48,430 --> 00:18:54,760
for instance Alex sent OS minimal or a

00:18:50,740 --> 00:18:58,600
debian some sort of ISO you can always

00:18:54,760 --> 00:19:02,170
do your own but you can share these

00:18:58,600 --> 00:19:06,160
puppet scripts so developers can try in

00:19:02,170 --> 00:19:08,380
their machines in their laptops the

00:19:06,160 --> 00:19:11,290
infrastructure that we use in production

00:19:08,380 --> 00:19:14,110
which also is always very helpful for

00:19:11,290 --> 00:19:16,240
you need to debug something you need to

00:19:14,110 --> 00:19:19,030
find some problems you need to test how

00:19:16,240 --> 00:19:23,590
something is gonna behave okay I need to

00:19:19,030 --> 00:19:26,080
update some version of HD DVD or

00:19:23,590 --> 00:19:28,720
something else well I want to try it in

00:19:26,080 --> 00:19:31,510
maybe in my machine with a vagrant I can

00:19:28,720 --> 00:19:33,460
start the VM try with application and

00:19:31,510 --> 00:19:34,840
then I can say they helped guys yeah I

00:19:33,460 --> 00:19:41,460
tried this and it works

00:19:34,840 --> 00:19:41,460
right any questions so far

00:19:42,150 --> 00:19:53,800
so a little bit more about puppet and

00:19:50,070 --> 00:19:57,700
vagrant actually went to have them

00:19:53,800 --> 00:19:59,800
mentioned some of these things yeah so

00:19:57,700 --> 00:20:01,300
you can share the configuration easily

00:19:59,800 --> 00:20:06,880
because it's just text files so you can

00:20:01,300 --> 00:20:11,230
keep that in source control and you can

00:20:06,880 --> 00:20:14,620
also find base boxes which are like a

00:20:11,230 --> 00:20:17,290
starting point the machines the VMS you

00:20:14,620 --> 00:20:21,250
can find them in Vikram box 30s and you

00:20:17,290 --> 00:20:24,700
can build your own with with other tools

00:20:21,250 --> 00:20:28,840
out there one of them is called V we ve

00:20:24,700 --> 00:20:33,990
e WT e that allows you to automatically

00:20:28,840 --> 00:20:37,500
create new new base boxes so how does

00:20:33,990 --> 00:20:40,630
vagrant run like life look like

00:20:37,500 --> 00:20:44,200
so you just inspecting a sub-project you

00:20:40,630 --> 00:20:46,990
can just install it with gems you can

00:20:44,200 --> 00:20:49,420
have base boxes just passing the URL

00:20:46,990 --> 00:20:52,960
where they are bickering is gonna

00:20:49,420 --> 00:20:55,870
download them and unpack them the first

00:20:52,960 --> 00:20:59,380
time you use them vagrant unity is going

00:20:55,870 --> 00:21:03,070
to create a skeleton project vehicle map

00:20:59,380 --> 00:21:06,100
is going to start that VM do whatever

00:21:03,070 --> 00:21:10,510
you told vagrant to do provision with

00:21:06,100 --> 00:21:14,260
puppet or chef then you can do SSH to

00:21:10,510 --> 00:21:16,450
the Machine suspend it and resume it if

00:21:14,260 --> 00:21:18,100
you want if you need to stop the the VM

00:21:16,450 --> 00:21:19,900
or at the end you can just move by you

00:21:18,100 --> 00:21:21,970
and destroy and it the Machine

00:21:19,900 --> 00:21:26,170
disappears so this is really helpful

00:21:21,970 --> 00:21:29,680
because you try something doesn't work

00:21:26,170 --> 00:21:31,870
or works or whatever then to destroy a

00:21:29,680 --> 00:21:36,610
machine just start from a Kling Kling a

00:21:31,870 --> 00:21:39,010
state again so for developers is is

00:21:36,610 --> 00:21:40,900
really really helpful for operations

00:21:39,010 --> 00:21:43,600
they allow it allows them to also try

00:21:40,900 --> 00:21:45,700
things in their own in their own

00:21:43,600 --> 00:21:50,370
machines so something that you could do

00:21:45,700 --> 00:21:53,080
with cloud - they are actually doing

00:21:50,370 --> 00:21:56,890
adding support for more than brittle box

00:21:53,080 --> 00:22:01,210
VMware since making it more like cloud

00:21:56,890 --> 00:22:03,789
elastic or visualization agnostic so you

00:22:01,210 --> 00:22:05,890
could also in the future the VMware

00:22:03,789 --> 00:22:12,100
images and do the same exactly the same

00:22:05,890 --> 00:22:16,720
process so how does Vikram file look

00:22:12,100 --> 00:22:19,630
like basically you say what VM you want

00:22:16,720 --> 00:22:23,230
to use the name where to download it if

00:22:19,630 --> 00:22:26,320
you don't have it already you can

00:22:23,230 --> 00:22:31,659
forward ports from your local box to the

00:22:26,320 --> 00:22:38,620
VM or you can configure IP a local

00:22:31,659 --> 00:22:42,940
network with with its own interface you

00:22:38,620 --> 00:22:46,570
can share folders between your hosts on

00:22:42,940 --> 00:22:49,240
the VM I'm here for instance you are you

00:22:46,570 --> 00:22:52,120
can do the puppet provisioning you just

00:22:49,240 --> 00:22:54,190
say where the puppet file is any

00:22:52,120 --> 00:22:56,200
parameters that you want to pass and

00:22:54,190 --> 00:23:00,100
when you run breaker on top is gonna

00:22:56,200 --> 00:23:05,650
create a new VM run puppet inside the VM

00:23:00,100 --> 00:23:07,960
and apply that puppet manifest so a

00:23:05,650 --> 00:23:10,929
puppet manifest can be something as easy

00:23:07,960 --> 00:23:16,059
as installing at the IBK you just define

00:23:10,929 --> 00:23:18,940
what package to install you can also do

00:23:16,059 --> 00:23:20,409
some conditional things like I'm

00:23:18,940 --> 00:23:22,390
depending on the different operating

00:23:20,409 --> 00:23:24,490
systems that package has a different

00:23:22,390 --> 00:23:26,940
name so that way you can make this

00:23:24,490 --> 00:23:31,799
manifest work across different offices

00:23:26,940 --> 00:23:35,260
so just say the day BK is installed so

00:23:31,799 --> 00:23:37,480
whether you use rpm or use Debian

00:23:35,260 --> 00:23:43,750
packages this is going to stop it for

00:23:37,480 --> 00:23:50,409
you so I mentioned before I'm a maven

00:23:43,750 --> 00:23:55,530
guy mostly I was so what we found

00:23:50,409 --> 00:23:56,960
ourselves what we wanted to do was

00:23:55,530 --> 00:23:59,030
integrate

00:23:56,960 --> 00:24:00,670
both of them so we if you develop with

00:23:59,030 --> 00:24:03,980
my ring

00:24:00,670 --> 00:24:08,300
do you wanna provision you later on with

00:24:03,980 --> 00:24:09,850
puppet how to tie this both both worlds

00:24:08,300 --> 00:24:15,830
together

00:24:09,850 --> 00:24:18,560
so what who here use maven to deploy

00:24:15,830 --> 00:24:21,530
things into a machine like drop

00:24:18,560 --> 00:24:26,240
intervals over and things like that okay

00:24:21,530 --> 00:24:30,290
so maybe is not really well designed to

00:24:26,240 --> 00:24:33,080
do that you can always I've seen people

00:24:30,290 --> 00:24:38,420
doing maven called scripts that which is

00:24:33,080 --> 00:24:42,650
copy files over so what we try to do to

00:24:38,420 --> 00:24:46,610
do here instead of using an tas i've

00:24:42,650 --> 00:24:49,940
seen people doing an tas plugin to copy

00:24:46,610 --> 00:24:53,510
files over or SSH they are simply plug

00:24:49,940 --> 00:24:57,410
in to build our bows or cargo to deploy

00:24:53,510 --> 00:24:59,890
to app servers or Capistrano jar in the

00:24:57,410 --> 00:24:59,890
Rubik world

00:24:59,920 --> 00:25:10,280
so to avoid all that we can use maven

00:25:05,780 --> 00:25:12,370
and puppet together in a way that you

00:25:10,280 --> 00:25:16,160
don't need to mess with with all this

00:25:12,370 --> 00:25:17,540
scripting so you can provide operation

00:25:16,160 --> 00:25:19,370
you can define your own money puppet

00:25:17,540 --> 00:25:22,490
manifests you can provide them to

00:25:19,370 --> 00:25:25,310
operations so there's no question of

00:25:22,490 --> 00:25:30,680
what is this thing doing it's there it's

00:25:25,310 --> 00:25:33,320
code itself documented of course so and

00:25:30,680 --> 00:25:35,420
you can most the most important thing is

00:25:33,320 --> 00:25:36,650
that it allows you to use the right tool

00:25:35,420 --> 00:25:39,670
for the right job right

00:25:36,650 --> 00:25:43,940
maven is not done to deploy things and

00:25:39,670 --> 00:25:47,690
pop it is it is the same way that public

00:25:43,940 --> 00:25:50,660
is not done to build Java projects so we

00:25:47,690 --> 00:25:54,590
have created a maven puppet module that

00:25:50,660 --> 00:25:57,470
it's github that allows you to with

00:25:54,590 --> 00:26:00,200
puppet fetch artifacts from maven

00:25:57,470 --> 00:26:03,890
repository so we use the repository so a

00:26:00,200 --> 00:26:04,600
central piece central location to who

00:26:03,890 --> 00:26:09,280
share

00:26:04,600 --> 00:26:11,740
builds and any binaries and manages them

00:26:09,280 --> 00:26:14,740
with puppet and use don't need any extra

00:26:11,740 --> 00:26:16,660
packaging like tar balls building rpms

00:26:14,740 --> 00:26:21,250
from your work files or anything like

00:26:16,660 --> 00:26:24,700
that so it allows you to easily you can

00:26:21,250 --> 00:26:28,000
define repositories if you're familiar

00:26:24,700 --> 00:26:29,950
so you just say what's where they use

00:26:28,000 --> 00:26:33,310
repository is if you need a username and

00:26:29,950 --> 00:26:35,860
password you can install maven with just

00:26:33,310 --> 00:26:38,470
with these three lines here you can use

00:26:35,860 --> 00:26:41,440
different versions of maven you can

00:26:38,470 --> 00:26:45,610
create a maven settings file with the

00:26:41,440 --> 00:26:47,740
repository information so not not only

00:26:45,610 --> 00:26:50,290
to deploy but also you have development

00:26:47,740 --> 00:26:52,180
machines that you want to configure you

00:26:50,290 --> 00:26:56,200
can use this and use puppet if you've

00:26:52,180 --> 00:27:00,820
seen the github just released in the

00:26:56,200 --> 00:27:04,480
boxer project last week I think so it's

00:27:00,820 --> 00:27:08,350
it allows you to configure your OSX your

00:27:04,480 --> 00:27:11,890
macbook with puppet everything from a

00:27:08,350 --> 00:27:14,620
scratch so this is something that you

00:27:11,890 --> 00:27:17,320
could also if you could also do like I

00:27:14,620 --> 00:27:19,570
won this development machine to have the

00:27:17,320 --> 00:27:21,520
settings and everyone in the company

00:27:19,570 --> 00:27:24,250
needs to have the same setting so why

00:27:21,520 --> 00:27:26,110
not use puppet to provision them so

00:27:24,250 --> 00:27:28,660
that's what give up stars with their own

00:27:26,110 --> 00:27:31,540
stuff like installing all the different

00:27:28,660 --> 00:27:33,430
applications and configuring and for the

00:27:31,540 --> 00:27:38,950
new people that joined he's up so they

00:27:33,430 --> 00:27:42,990
are up up and running really fast so

00:27:38,950 --> 00:27:45,970
that's that's also applicable here and

00:27:42,990 --> 00:27:49,720
the most important part is we have

00:27:45,970 --> 00:27:52,990
created an maven type that basically you

00:27:49,720 --> 00:27:54,580
say where did you want some file what is

00:27:52,990 --> 00:27:57,460
diving in the repository and what

00:27:54,580 --> 00:28:00,430
preposterous total of it from so this

00:27:57,460 --> 00:28:02,830
behind the scenes this runs maven plugin

00:28:00,430 --> 00:28:05,170
and it will connect to the repository

00:28:02,830 --> 00:28:10,350
and a lot attend copied over to your to

00:28:05,170 --> 00:28:10,350
your to that path that you set

00:28:11,300 --> 00:28:16,020
so to look at the same thing with just

00:28:14,430 --> 00:28:19,710
passing the different group are

00:28:16,020 --> 00:28:27,770
different version packaging and the

00:28:19,710 --> 00:28:31,950
Reapers so questions you're not shy

00:28:27,770 --> 00:28:35,160
you're going to wait until I leave so I

00:28:31,950 --> 00:28:39,810
wanted to show you the examples so what

00:28:35,160 --> 00:28:42,710
I have here let's see how I can explain

00:28:39,810 --> 00:28:45,320
this I have in my laptop I have running

00:28:42,710 --> 00:28:47,310
Jenkins and archiver

00:28:45,320 --> 00:28:50,220
repository management continuous

00:28:47,310 --> 00:28:55,410
integration tool I have three machines

00:28:50,220 --> 00:28:56,880
that I call www tommcatt one and DB each

00:28:55,410 --> 00:29:00,420
of them are running already

00:28:56,880 --> 00:29:07,230
they have Postgres tomcat on HDTV

00:29:00,420 --> 00:29:10,430
typical three-tier webs in front stack

00:29:07,230 --> 00:29:14,640
you can also have many template

00:29:10,430 --> 00:29:17,700
instances and to load-balancing what I

00:29:14,640 --> 00:29:21,030
really wanna do and I have a QA machine

00:29:17,700 --> 00:29:23,550
that has the three things installed but

00:29:21,030 --> 00:29:26,370
this QA machine is not running this fear

00:29:23,550 --> 00:29:28,950
machine is created on the fly and is

00:29:26,370 --> 00:29:31,200
destroyed at the end of the Qi tests so

00:29:28,950 --> 00:29:38,250
it's always is starting from from

00:29:31,200 --> 00:29:40,590
scratch so I have the yeah this is the

00:29:38,250 --> 00:29:42,780
same thing I have the database and the

00:29:40,590 --> 00:29:52,590
Tomcat server I have one you could have

00:29:42,780 --> 00:29:55,890
any any of them let's see so I have with

00:29:52,590 --> 00:29:59,130
puppet you use you can the way to reuse

00:29:55,890 --> 00:30:03,120
code is having puppet modules so let me

00:29:59,130 --> 00:30:04,830
go back for a second so we use one tool

00:30:03,120 --> 00:30:06,570
that is called librarian puppet that is

00:30:04,830 --> 00:30:10,920
basically dependency management for

00:30:06,570 --> 00:30:12,840
puppet modules in a file I can define

00:30:10,920 --> 00:30:16,440
what modules do I have do I want to use

00:30:12,840 --> 00:30:19,470
so I won the Java module to install the

00:30:16,440 --> 00:30:21,720
JDK I won the Apache module to say

00:30:19,470 --> 00:30:23,160
install a CD PD Postgres

00:30:21,720 --> 00:30:25,290
firewall

00:30:23,160 --> 00:30:30,300
allows me to easily manage their IP

00:30:25,290 --> 00:30:34,470
table stuff Tomcat you can and you can

00:30:30,300 --> 00:30:38,460
get these modules from forged poppet

00:30:34,470 --> 00:30:41,790
come up with like um I think it is or

00:30:38,460 --> 00:30:43,950
you can also get them from gift so the

00:30:41,790 --> 00:30:46,110
ones that have a specific version said

00:30:43,950 --> 00:30:48,090
they come from the fort which is some

00:30:46,110 --> 00:30:51,420
sort of flex and repository of puppet

00:30:48,090 --> 00:30:55,380
modules this one comes from a 4k having

00:30:51,420 --> 00:30:59,640
it said you can mix and match here we're

00:30:55,380 --> 00:31:03,480
using or maybe or maybe module avahi

00:30:59,640 --> 00:31:08,700
modules installed you sabahi that way I

00:31:03,480 --> 00:31:11,550
can use my me in my VM second use name

00:31:08,700 --> 00:31:16,200
TNS instead of having to remember the

00:31:11,550 --> 00:31:20,840
whole IPS and I have created a module in

00:31:16,200 --> 00:31:25,890
in a path of the of the source code to

00:31:20,840 --> 00:31:29,250
yes show you how to do a module and

00:31:25,890 --> 00:31:32,880
share class configuration across all the

00:31:29,250 --> 00:31:36,840
different notes that W they wept movie

00:31:32,880 --> 00:31:43,770
what now database now and all the other

00:31:36,840 --> 00:31:46,230
ones so in that module what I have I

00:31:43,770 --> 00:31:48,380
have created a class that's what puppet

00:31:46,230 --> 00:31:53,310
close it

00:31:48,380 --> 00:31:55,350
so I'm saying DB node for me it's ass is

00:31:53,310 --> 00:31:58,200
a node that has positive server

00:31:55,350 --> 00:32:00,150
installed with I can set the password

00:31:58,200 --> 00:32:03,990
and if you look at the to documentation

00:32:00,150 --> 00:32:06,720
of each module they should give you all

00:32:03,990 --> 00:32:08,610
the parameters that you can use so it

00:32:06,720 --> 00:32:10,980
allows you to create databases and more

00:32:08,610 --> 00:32:14,270
stuff so this is installing the

00:32:10,980 --> 00:32:17,310
bosphorus server this is creating a

00:32:14,270 --> 00:32:20,160
database so I'm using a second sample

00:32:17,310 --> 00:32:24,630
they are fuse web application project

00:32:20,160 --> 00:32:26,580
which is just demo simple web

00:32:24,630 --> 00:32:32,710
application so I'm creating a database

00:32:26,580 --> 00:32:36,370
for that for the champion now

00:32:32,710 --> 00:32:38,950
I'm installing Java I can pass also the

00:32:36,370 --> 00:32:42,100
distribution so I one day open JDK 1/6

00:32:38,950 --> 00:32:45,940
I'm installing Tomcat creating a tomcat

00:32:42,100 --> 00:32:47,799
instance this what this specific module

00:32:45,940 --> 00:32:49,630
does it allows you to have multiple

00:32:47,799 --> 00:32:53,110
instances of Tomcat running in the same

00:32:49,630 --> 00:32:55,330
box and they don't clash so they all

00:32:53,110 --> 00:32:57,549
using different ports so if one dies

00:32:55,330 --> 00:32:59,230
other one can continue in this case I'm

00:32:57,549 --> 00:33:02,799
only installing one of them but that's

00:32:59,230 --> 00:33:06,490
why there's like duplication I'm

00:33:02,799 --> 00:33:11,830
installing maven and I'm telling maven

00:33:06,490 --> 00:33:14,559
to get the app fuse were in this

00:33:11,830 --> 00:33:17,169
specific location a server Tomcat effuse

00:33:14,559 --> 00:33:20,140
web apps so that's where Tomcat is

00:33:17,169 --> 00:33:22,480
installed in the previous step so this

00:33:20,140 --> 00:33:25,210
would in the lot that were installed

00:33:22,480 --> 00:33:28,179
Tomcat and this would get me Tomcat

00:33:25,210 --> 00:33:32,590
running with that with that web app in

00:33:28,179 --> 00:33:34,929
the in the root path there's more not

00:33:32,590 --> 00:33:39,000
there's more classes I'll I'll share the

00:33:34,929 --> 00:33:39,000
code later in this up yes

00:33:56,860 --> 00:34:03,970
okay so he's asking how the verse how do

00:34:00,560 --> 00:34:03,970
you ensure the virtual really works

00:34:04,330 --> 00:34:11,060
yes I'm gonna answer that because so

00:34:08,000 --> 00:34:15,710
we'd run the QA test and the continuous

00:34:11,060 --> 00:34:21,200
integration server so we do convert

00:34:15,710 --> 00:34:23,120
tests so it's with webdriver so when we

00:34:21,200 --> 00:34:24,980
bring up the machine we test that

00:34:23,120 --> 00:34:27,080
whatever we want to test right like the

00:34:24,980 --> 00:34:32,750
app is running there and there's some

00:34:27,080 --> 00:34:35,240
text showing us showing up and in the

00:34:32,750 --> 00:34:37,550
site dot P P is the main entry points

00:34:35,240 --> 00:34:40,250
for puppet so I'm importing all the

00:34:37,550 --> 00:34:42,980
nodes with all the definitions for the

00:34:40,250 --> 00:34:45,440
different machines and I can define a

00:34:42,980 --> 00:34:47,780
parent node that all the other ones will

00:34:45,440 --> 00:34:50,540
inherit and worse does where I'm

00:34:47,780 --> 00:34:56,690
installing EPL repository and avahi for

00:34:50,540 --> 00:34:58,730
for all of them so they the Tomcat node

00:34:56,690 --> 00:35:02,180
for instance that will be in to manifest

00:34:58,730 --> 00:35:04,880
notes I'm saying every any machine that

00:35:02,180 --> 00:35:08,390
matches that regular expression so

00:35:04,880 --> 00:35:13,910
Tomcat one thumb cut two or thumb pick

00:35:08,390 --> 00:35:16,130
at any number is gonna have the all in

00:35:13,910 --> 00:35:17,570
it it's the parent class so the parent

00:35:16,130 --> 00:35:20,390
notes so it's gonna have the bahi

00:35:17,570 --> 00:35:23,900
configuration it's gonna have message of

00:35:20,390 --> 00:35:26,330
the day I'm gonna use the class Tomcat

00:35:23,900 --> 00:35:30,260
note that I defined earlier in my

00:35:26,330 --> 00:35:33,580
private module so this is this is what I

00:35:30,260 --> 00:35:39,800
actually uses the classes in the module

00:35:33,580 --> 00:35:42,830
and what I did for our QA note is it has

00:35:39,800 --> 00:35:46,040
the VB now the tonkin of and the WW

00:35:42,830 --> 00:35:50,570
totally not that way i can reuse them so

00:35:46,040 --> 00:35:53,210
it's a specific node will have the DB

00:35:50,570 --> 00:35:55,010
now will have the class given out the

00:35:53,210 --> 00:35:56,110
tongue canal is now and a half the class

00:35:55,010 --> 00:35:59,260
terminal

00:35:56,110 --> 00:35:59,860
the www and a half dollars earlier Tom

00:35:59,260 --> 00:36:03,790
didn't know

00:35:59,860 --> 00:36:06,370
and this QA has all of them so I'm

00:36:03,790 --> 00:36:12,180
reusing the same glasses across all the

00:36:06,370 --> 00:36:17,290
different machines that I'm starting and

00:36:12,180 --> 00:36:20,770
you can also run unit tests on your

00:36:17,290 --> 00:36:25,030
puppet no puppet manifests so for

00:36:20,770 --> 00:36:30,340
instance what we are doing here for the

00:36:25,030 --> 00:36:34,900
node the DB the Taklamakan I can set

00:36:30,340 --> 00:36:37,240
specific facts which is what some things

00:36:34,900 --> 00:36:40,420
that are provided by the puppet agent

00:36:37,240 --> 00:36:43,890
running on the VM she's aching I'm able

00:36:40,420 --> 00:36:46,750
to get what OS how much RAM does it have

00:36:43,890 --> 00:36:52,030
what is they be of the nose and things

00:36:46,750 --> 00:36:54,340
like that so I can say provided that the

00:36:52,030 --> 00:36:59,380
machine has these facts like it's a red

00:36:54,340 --> 00:37:01,240
hot red hot cent OS 603 machine it

00:36:59,380 --> 00:37:04,690
should contain the class particular

00:37:01,240 --> 00:37:07,060
server so you can say there's a syntax

00:37:04,690 --> 00:37:09,940
and our r-spec puppet allows you to say

00:37:07,060 --> 00:37:12,520
it should contain some package or it

00:37:09,940 --> 00:37:14,440
should contain some file or the context

00:37:12,520 --> 00:37:17,820
of some file should match this regular

00:37:14,440 --> 00:37:20,500
expression so this is what we use for

00:37:17,820 --> 00:37:22,330
for the testing of the infrastructure

00:37:20,500 --> 00:37:25,810
itself all the puppet manifests go

00:37:22,330 --> 00:37:27,670
through so this also checks syntax when

00:37:25,810 --> 00:37:32,500
you run our SPECT it's going to compile

00:37:27,670 --> 00:37:35,730
the the catalog the puppet manifest so

00:37:32,500 --> 00:37:42,750
that will be the basic testing before

00:37:35,730 --> 00:37:47,110
creating any machine with them like the

00:37:42,750 --> 00:37:51,370
w-w-w spec is the same thing i decide

00:37:47,110 --> 00:37:54,310
should contain the package httpd so that

00:37:51,370 --> 00:37:58,110
will be the very first step and now

00:37:54,310 --> 00:37:58,110
moving on to some examples

00:38:08,090 --> 00:38:11,230
you know this

00:38:13,960 --> 00:38:25,489
okay so I have Jenkins running with to

00:38:21,019 --> 00:38:27,589
do for this part would be the first

00:38:25,489 --> 00:38:30,380
project so I have a fuse which is just

00:38:27,589 --> 00:38:32,150
the Java maven build this is building

00:38:30,380 --> 00:38:34,509
the whole project and creating a war

00:38:32,150 --> 00:38:41,140
file and deploying it to the repository

00:38:34,509 --> 00:38:45,289
I have the QA this is running vagrant

00:38:41,140 --> 00:38:49,130
creating our QA machine and running code

00:38:45,289 --> 00:38:51,289
number specs against that machine which

00:38:49,130 --> 00:38:54,619
is basically like selenium testing or

00:38:51,289 --> 00:38:58,660
webdriver testing so I can run this on

00:38:54,619 --> 00:39:03,680
the final running machine and I have

00:38:58,660 --> 00:39:06,880
these three projects that basically what

00:39:03,680 --> 00:39:09,619
they do they call puppet on the

00:39:06,880 --> 00:39:13,789
production machines the three that I

00:39:09,619 --> 00:39:16,910
have DB tomcat one and www and this all

00:39:13,789 --> 00:39:19,279
happens in in change so when a fuse

00:39:16,910 --> 00:39:22,729
finishes thank you a Rams and Winkie

00:39:19,279 --> 00:39:27,170
rounds of this other three run the other

00:39:22,729 --> 00:39:29,150
two examples I have is if our four or my

00:39:27,170 --> 00:39:31,759
store tools so I can show you later if

00:39:29,150 --> 00:39:34,329
we have time how to do the same how

00:39:31,759 --> 00:39:41,180
would we do the same thing with maestro

00:39:34,329 --> 00:39:44,029
so I have WWE little local that comes

00:39:41,180 --> 00:39:53,630
from a bahi so this is the production

00:39:44,029 --> 00:39:59,269
machine and I okay so this is the app

00:39:53,630 --> 00:40:06,140
fuse project I'm gonna have some text to

00:39:59,269 --> 00:40:09,079
the login page and I have with gate I

00:40:06,140 --> 00:40:13,249
have a post commit foot the first one is

00:40:09,079 --> 00:40:15,799
the one with Jenkins and the second one

00:40:13,249 --> 00:40:16,519
will be for maestro so I'm gonna show

00:40:15,799 --> 00:40:18,529
you first day

00:40:16,519 --> 00:40:22,609
Jenkins one so every time I come it's

00:40:18,529 --> 00:40:25,519
something I'm sending a core with crew

00:40:22,609 --> 00:40:26,099
I'm sending a HTTP GET to Jenkins to say

00:40:25,519 --> 00:40:33,979
this

00:40:26,099 --> 00:40:33,979
changed your build so that

00:40:43,070 --> 00:40:47,910
no item

00:40:44,790 --> 00:40:50,240
I don't PO if you hear some people talk

00:40:47,910 --> 00:40:54,120
about that they'd say Pauling is evil

00:40:50,240 --> 00:40:57,840
you should not do polling if you get to

00:40:54,120 --> 00:41:01,170
pushing that way you are not hammering

00:40:57,840 --> 00:41:03,870
the source control every time you just

00:41:01,170 --> 00:41:06,420
get notifications and bills when there

00:41:03,870 --> 00:41:09,950
are actual changes and if you use things

00:41:06,420 --> 00:41:15,210
like github it gives you the web hooks

00:41:09,950 --> 00:41:19,020
where you can set URL that when whenever

00:41:15,210 --> 00:41:33,540
a new committees is is pushed you get a

00:41:19,020 --> 00:41:36,390
notification to the door built at ASF

00:41:33,540 --> 00:41:39,260
would have pots for push for a

00:41:36,390 --> 00:41:39,260
subversion indeed

00:41:40,280 --> 00:41:53,810
so let me okay which so you can see it

00:41:54,320 --> 00:41:59,180
so let's do something

00:42:03,130 --> 00:42:06,870
oh great

00:42:09,270 --> 00:42:19,500
so I just made a commit and you will go

00:42:14,760 --> 00:42:24,420
back to Jenkins any time now is gonna

00:42:19,500 --> 00:42:26,460
start building up fears there is so this

00:42:24,420 --> 00:42:28,200
has triggered the whole thing this is

00:42:26,460 --> 00:42:30,390
going to take a little bit depending

00:42:28,200 --> 00:42:32,340
also in the internet connection I'm

00:42:30,390 --> 00:42:35,369
cheating because I'm using VMs that are

00:42:32,340 --> 00:42:36,600
pretty provision most of the stuff so we

00:42:35,369 --> 00:42:39,300
are not waiting here the loving the

00:42:36,600 --> 00:42:43,080
packages for HTTP and Tomcat and these

00:42:39,300 --> 00:42:45,210
and other but the word file is being

00:42:43,080 --> 00:42:47,310
built it's been pushed to the repository

00:42:45,210 --> 00:42:49,950
what I'm doing is depending on the

00:42:47,310 --> 00:42:52,590
snapshot version so every time a new

00:42:49,950 --> 00:42:55,470
snapshot is built and I run puppet it's

00:42:52,590 --> 00:42:58,080
going to get the latest one so well this

00:42:55,470 --> 00:43:02,570
runs I'll show you

00:42:58,080 --> 00:43:05,369
so I have this other three VMs running

00:43:02,570 --> 00:43:15,320
which are the three production ones I

00:43:05,369 --> 00:43:15,320
mentioned and so this is the

00:43:20,030 --> 00:43:26,270
this would be the project vagrant

00:43:23,780 --> 00:43:28,550
project without the puppet modules and

00:43:26,270 --> 00:43:34,359
manifests and everything this there are

00:43:28,550 --> 00:43:39,290
right so I have a vagrant file with

00:43:34,359 --> 00:43:42,859
interesting parts here so I'm defining

00:43:39,290 --> 00:43:44,660
@q a VM with vagrant you can do not

00:43:42,859 --> 00:43:45,710
eliminate to define one VM you can

00:43:44,660 --> 00:43:48,800
define as many as you want

00:43:45,710 --> 00:43:51,460
so I'm defining a QA one and then the DB

00:43:48,800 --> 00:43:56,240
Tomcat one and www

00:43:51,460 --> 00:43:59,000
so I can set the hostname that way

00:43:56,240 --> 00:44:01,460
puppet will recognize what what's the

00:43:59,000 --> 00:44:04,280
what's the VM and how it should be

00:44:01,460 --> 00:44:07,400
provisioned and I'm saying yeah just use

00:44:04,280 --> 00:44:10,190
the my modules are in the module path on

00:44:07,400 --> 00:44:14,000
my site use my site of PP to provision

00:44:10,190 --> 00:44:17,240
there to provision the VM and I came

00:44:14,000 --> 00:44:19,369
forward ports I'm using a host only

00:44:17,240 --> 00:44:22,190
network that way I can connect to those

00:44:19,369 --> 00:44:24,410
VMs without going through the through

00:44:22,190 --> 00:44:28,130
the forwarding of the ports and I feel

00:44:24,410 --> 00:44:30,770
the same thing for the TV Tomcat 1 and W

00:44:28,130 --> 00:44:37,190
top with no P so this is what you define

00:44:30,770 --> 00:44:40,220
in your bacon file in the puppet file

00:44:37,190 --> 00:44:41,720
this is used by librarian puppet so this

00:44:40,220 --> 00:44:45,250
is what I'm where I'm defining what

00:44:41,720 --> 00:44:51,619
module is doing when I use what versions

00:44:45,250 --> 00:44:53,900
and the site of pp which is the entry

00:44:51,619 --> 00:44:57,920
point I have added some more things that

00:44:53,900 --> 00:45:03,109
you see in the slides basically to deal

00:44:57,920 --> 00:45:08,450
with IP tables for warning but if we go

00:45:03,109 --> 00:45:11,000
to the DB so this is a DB now some cut

00:45:08,450 --> 00:45:13,280
is using the that class so the no

00:45:11,000 --> 00:45:15,770
definitions are just using classes so I

00:45:13,280 --> 00:45:19,570
can reuse the classes and the classes I

00:45:15,770 --> 00:45:23,270
define are defined in my module here

00:45:19,570 --> 00:45:25,250
where I have DB nose with the server

00:45:23,270 --> 00:45:28,760
bump spot installed the prosecutor

00:45:25,250 --> 00:45:30,440
server create the fuse database and then

00:45:28,760 --> 00:45:32,740
I'm doing other stuff that needs needed

00:45:30,440 --> 00:45:35,230
for a fuse which is like

00:45:32,740 --> 00:45:38,950
get the SQL dump and import it into the

00:45:35,230 --> 00:45:44,349
database and enable open the firewall

00:45:38,950 --> 00:45:47,080
for that port at the www even easier I'd

00:45:44,349 --> 00:45:49,839
me just saying create a video source

00:45:47,080 --> 00:45:52,660
that Apache that points to the to the

00:45:49,839 --> 00:45:56,080
Tomcat server so I can use variables

00:45:52,660 --> 00:46:01,530
here with puppet I'm saying point to

00:45:56,080 --> 00:46:04,240
Tomcat one dot local 8080 so if I go to

00:46:01,530 --> 00:46:06,670
w-w-w dot local in the port eight is

00:46:04,240 --> 00:46:09,640
just doing the processing with with

00:46:06,670 --> 00:46:12,970
Duncan the interesting part of the

00:46:09,640 --> 00:46:16,510
integration with with Tom cotton maven

00:46:12,970 --> 00:46:19,180
so in the Tomcat node Tomcat class what

00:46:16,510 --> 00:46:21,880
I'm doing is installed Java installed

00:46:19,180 --> 00:46:26,859
Tomcat create a tomcat instance on the

00:46:21,880 --> 00:46:30,010
port 8080 so I need to so basically this

00:46:26,859 --> 00:46:32,740
is the location of the word file on the

00:46:30,010 --> 00:46:37,060
file system this is where Tomcat is

00:46:32,740 --> 00:46:41,830
gonna pick it up I'm installing maven

00:46:37,060 --> 00:46:46,240
I'm done loving the web app so the web

00:46:41,830 --> 00:46:50,980
app is up fuses spring I can use the

00:46:46,240 --> 00:46:53,050
version that I saw I can define default

00:46:50,980 --> 00:46:54,880
values on the top of the class or I can

00:46:53,050 --> 00:46:59,500
pass them so different nodes can have

00:46:54,880 --> 00:47:03,990
different values and copy that war file

00:46:59,500 --> 00:47:07,420
over the tomcat web apps directory and

00:47:03,990 --> 00:47:08,970
because I'm you see in Postgres I need

00:47:07,420 --> 00:47:11,890
to do a little bit more work there

00:47:08,970 --> 00:47:14,920
that's why that's because I just didn't

00:47:11,890 --> 00:47:17,070
want to change that fuse or file so I'm

00:47:14,920 --> 00:47:22,089
doing it on the fly every time I deploy

00:47:17,070 --> 00:47:24,790
and sit the word file configure a fuse

00:47:22,089 --> 00:47:26,980
to use Postgres so I'm getting also the

00:47:24,790 --> 00:47:30,339
jar file for the Postgres database it

00:47:26,980 --> 00:47:37,030
driver configuring of a properties file

00:47:30,339 --> 00:47:38,800
just setting the right values adjusting

00:47:37,030 --> 00:47:41,010
the hibernate properties to do some

00:47:38,800 --> 00:47:41,010
changes

00:47:41,470 --> 00:47:48,190
create any other folder that was needed

00:47:43,870 --> 00:47:52,510
by up years so this is the most complex

00:47:48,190 --> 00:47:55,390
one of of the three notes but as does

00:47:52,510 --> 00:47:57,840
the one that allows me to just get

00:47:55,390 --> 00:48:17,740
whatever it is in the maven repository

00:47:57,840 --> 00:48:20,650
unpublished yeah the the variation here

00:48:17,740 --> 00:48:26,010
in the properties so one of the things

00:48:20,650 --> 00:48:29,530
that I do for variation is okay so

00:48:26,010 --> 00:48:32,230
obviously the httpd needs to know where

00:48:29,530 --> 00:48:34,540
Tomcat is to do the proxy for instance

00:48:32,230 --> 00:48:36,100
and the Tomcat notion is thumbkin node

00:48:34,540 --> 00:48:40,380
needs to know where the Postgres

00:48:36,100 --> 00:48:44,110
database is so by default I use the

00:48:40,380 --> 00:48:46,690
names here the defaults does so I'm

00:48:44,110 --> 00:48:48,640
saying the Tomcat hostess in Tomcat

00:48:46,690 --> 00:48:52,590
Wonderlic oh that would be my default

00:48:48,640 --> 00:48:57,280
and what I'm doing in the queue a node

00:48:52,590 --> 00:49:05,980
is passing that explicitly so I tell I

00:48:57,280 --> 00:49:09,190
tell Tomcat in the qenos to use the I'm

00:49:05,980 --> 00:49:11,770
telling ya I see the PV to use the

00:49:09,190 --> 00:49:13,300
Tomcat server that is in localhost so I

00:49:11,770 --> 00:49:16,080
don't want it to go to Tomcat one which

00:49:13,300 --> 00:49:20,520
is my dumb production Tomcat server I

00:49:16,080 --> 00:49:25,300
for QA I just want to use the log of one

00:49:20,520 --> 00:49:30,670
right right they I have there's four

00:49:25,300 --> 00:49:34,390
nodes www Tomcat one DB which are like

00:49:30,670 --> 00:49:36,250
production let's say and then QA is

00:49:34,390 --> 00:49:40,350
something that gets started from scratch

00:49:36,250 --> 00:49:45,400
on destroying at the end of the tests

00:49:40,350 --> 00:49:47,440
which are running right now so a fuse

00:49:45,400 --> 00:49:48,549
the build has finished the word file is

00:49:47,440 --> 00:49:54,699
deployed through our

00:49:48,549 --> 00:50:01,839
Kyra and I have the up fuse running so

00:49:54,699 --> 00:50:04,809
the QA tests running so in QA what I'm

00:50:01,839 --> 00:50:07,660
doing is running the dots you see here

00:50:04,809 --> 00:50:10,449
are the tests passing on the puppet

00:50:07,660 --> 00:50:15,569
manifests so once you validate that the

00:50:10,449 --> 00:50:15,569
puppet manifests are okay I'm creating

00:50:16,140 --> 00:50:22,749
I'm destroying with vagrant destroy on

00:50:19,119 --> 00:50:25,900
destroying the VM if it existed and I'm

00:50:22,749 --> 00:50:34,689
creating a the VM again with vagrant up

00:50:25,900 --> 00:50:38,890
QA so I'm starting from scratch so this

00:50:34,689 --> 00:50:42,670
is creating the VM and then running

00:50:38,890 --> 00:50:46,299
puppet this is failing because of the

00:50:42,670 --> 00:50:49,299
network's strength of the the packages

00:50:46,299 --> 00:50:52,929
but when this finishes is going to

00:50:49,299 --> 00:51:02,410
finish provisioning and when it does

00:50:52,929 --> 00:51:04,299
what I have set up for it to do is to

00:51:02,410 --> 00:51:09,489
convert this if you are not familiar

00:51:04,299 --> 00:51:15,910
with the cumber so you can do like

00:51:09,489 --> 00:51:17,410
natural language sort of testing so you

00:51:15,910 --> 00:51:20,979
could do whatever you want to do with

00:51:17,410 --> 00:51:21,459
selenium webdriver any other test system

00:51:20,979 --> 00:51:24,339
out there

00:51:21,459 --> 00:51:25,959
so basically what I'm checking is I have

00:51:24,339 --> 00:51:28,239
my services running they are not

00:51:25,959 --> 00:51:30,359
listening on these parts behind the

00:51:28,239 --> 00:51:33,999
scenes this is actually doing the

00:51:30,359 --> 00:51:36,819
checking the others ports are open and I

00:51:33,999 --> 00:51:38,859
say given that I'm at the login page as

00:51:36,819 --> 00:51:41,109
you see the text signing sorry that's

00:51:38,859 --> 00:51:42,939
validating a little bit more than the

00:51:41,109 --> 00:51:45,459
app is running so you could write any

00:51:42,939 --> 00:51:49,329
sort of testing that you wanted as

00:51:45,459 --> 00:51:52,769
complex as you want and that's running

00:51:49,329 --> 00:51:52,769
as part of

00:51:58,380 --> 00:52:08,140
okay I'm running break and break us so

00:52:06,309 --> 00:52:17,650
this is the part where it's running the

00:52:08,140 --> 00:52:28,359
tests so fairly simple it points to here

00:52:17,650 --> 00:52:31,539
it is yeah and here is where I

00:52:28,359 --> 00:52:34,779
configured to convert to to half the to

00:52:31,539 --> 00:52:38,289
point to the QA server she's running all

00:52:34,779 --> 00:52:44,709
those all those tests against that at

00:52:38,289 --> 00:52:49,259
some point this is gonna finish what it

00:52:44,709 --> 00:52:49,259
happened it failed

00:52:49,410 --> 00:52:52,650
of course

00:52:53,450 --> 00:53:00,940
all the demos fail when you are doing

00:52:55,490 --> 00:53:04,460
them in the okay closest three and I

00:53:00,940 --> 00:53:10,369
guess there's some URL some network

00:53:04,460 --> 00:53:19,520
connectivity issues let me see if there

00:53:10,369 --> 00:53:23,240
be a mess up now okay so what would

00:53:19,520 --> 00:53:29,990
actually happen afterwards is that all

00:53:23,240 --> 00:53:42,020
these three jobs would be trigger

00:53:29,990 --> 00:53:46,070
so I'm trying them manually so this is

00:53:42,020 --> 00:53:47,420
simulating a puppet prank on those it's

00:53:46,070 --> 00:53:50,150
actually running a puppet trying on

00:53:47,420 --> 00:53:51,980
those machines if you have something

00:53:50,150 --> 00:53:54,619
more complex there's tools out there

00:53:51,980 --> 00:53:57,170
that will allow you to do more complex

00:53:54,619 --> 00:53:59,810
like get into the machines and ramp

00:53:57,170 --> 00:54:02,510
operators call em collective that does

00:53:59,810 --> 00:54:05,030
that for you but this is just a

00:54:02,510 --> 00:54:08,089
searching into the box and running

00:54:05,030 --> 00:54:11,569
puppet up life and at some point this is

00:54:08,089 --> 00:54:16,270
going to finish but maybe it fails

00:54:11,569 --> 00:54:20,300
because of the network and the W the web

00:54:16,270 --> 00:54:25,210
the website should be updated so well

00:54:20,300 --> 00:54:25,210
that frames any questions

00:54:29,570 --> 00:54:35,390
if you would start a project like this

00:54:32,650 --> 00:54:38,650
what would you concentrate on initially

00:54:35,390 --> 00:54:42,680
I have made it a topic just get get your

00:54:38,650 --> 00:54:45,920
your puppet deployments and

00:54:42,680 --> 00:54:47,390
configuration up up to snuff that you

00:54:45,920 --> 00:54:49,100
can run them manually and then after

00:54:47,390 --> 00:54:53,570
that introduce maven and then start

00:54:49,100 --> 00:54:56,450
having a structure for pushing it even

00:54:53,570 --> 00:54:59,660
more like I'm Carl oh you're going from

00:54:56,450 --> 00:55:02,420
an annual state to fully up automated

00:54:59,660 --> 00:55:06,970
state what would be your best

00:55:02,420 --> 00:55:06,970
progression if you wanted to move it for

00:55:07,330 --> 00:55:13,280
okay so this was just an example of with

00:55:11,390 --> 00:55:16,460
the tools I chose I mean you could have

00:55:13,280 --> 00:55:19,280
if you have any project or any other

00:55:16,460 --> 00:55:21,670
project they always deploy it you always

00:55:19,280 --> 00:55:23,990
have to deploy something somewhere so

00:55:21,670 --> 00:55:26,440
with puppet you can automate the

00:55:23,990 --> 00:55:30,560
deployment from that sub development

00:55:26,440 --> 00:55:33,740
site location to to the machines

00:55:30,560 --> 00:55:36,470
so obviously automation is to be done

00:55:33,740 --> 00:55:41,410
like a little step at a time I think

00:55:36,470 --> 00:55:41,410
mostly because people won't buy in and

00:55:43,810 --> 00:55:52,280
if you are using CI you can easily keep

00:55:47,570 --> 00:55:53,750
adding new new features and the defining

00:55:52,280 --> 00:55:55,160
your infrastructure with puppet is

00:55:53,750 --> 00:55:59,860
something really cool that you can do

00:55:55,160 --> 00:55:59,860
and reuse pretty pretty easily

00:55:59,890 --> 00:56:10,030
okay I'm down okay I have no more time

00:56:05,690 --> 00:56:10,030

YouTube URL: https://www.youtube.com/watch?v=ieE2ye2u-cA


