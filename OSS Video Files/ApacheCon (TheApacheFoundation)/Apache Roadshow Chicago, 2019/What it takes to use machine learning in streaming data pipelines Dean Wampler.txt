Title: What it takes to use machine learning in streaming data pipelines Dean Wampler
Publication date: 2019-07-08
Playlist: Apache Roadshow Chicago, 2019
Description: 
	If you want to use ML/AI in streaming data pipelines, here are the challenges you face: 1) there is a gap between popular data science tools and methods (e.g., Python and R based) and typical production deployment tools (e.g., Java based), 2) how do data scientists periodically deploy updated models into running streams without forcing restarts?, and finally 3) production streaming data pipelines must meet higher demands for reliability, resiliency, dynamic scalability, etc., compared to their batch counterparts. I'll explain these problems and discuss established and emerging open-source techniques and tools (Apache and beyond) to solve them.
Captions: 
	00:00:00,030 --> 00:00:06,660
be a clever trap we have been still two

00:00:04,799 --> 00:00:07,140
more two more presentations for you

00:00:06,660 --> 00:00:10,889
today

00:00:07,140 --> 00:00:14,190
and continuing on from our talks an

00:00:10,889 --> 00:00:28,920
offensive way then Dean went where the

00:00:14,190 --> 00:00:32,570
way to induce these shimmering you want

00:00:28,920 --> 00:00:32,570
to be ordained time coffee

00:00:34,430 --> 00:00:41,820
we're gonna get really thirsty

00:00:36,920 --> 00:00:43,890
bullying mandibles okay so this is a

00:00:41,820 --> 00:00:49,770
talk about what it takes you some oisin

00:00:43,890 --> 00:00:53,219
earning in so you know this is how to

00:00:49,770 --> 00:00:54,840
make money easily the pictures say we've

00:00:53,219 --> 00:00:59,370
never seen anything like toxic with

00:00:54,840 --> 00:01:02,399
pictures my talks taken and there's

00:00:59,370 --> 00:01:12,960
other pictures for more opinion the body

00:01:02,399 --> 00:01:29,729
oh and there are some executive briefing

00:01:12,960 --> 00:01:32,220
but pretty much this thing okay report

00:01:29,729 --> 00:01:34,110
probably stigmatizes agency talking

00:01:32,220 --> 00:01:37,850
about streaming architectures so you can

00:01:34,110 --> 00:01:42,500
get it copy this if you want it's free

00:01:37,850 --> 00:01:53,180
what anyone like Bend is cost for

00:01:42,500 --> 00:01:53,180
somebody Chicago police anyway so

00:01:53,420 --> 00:01:58,500
develops the sort of streaming part of

00:01:55,950 --> 00:02:02,090
our platform which is you know it's a

00:01:58,500 --> 00:02:04,500
bunch of microsurgery stuff at the top

00:02:02,090 --> 00:02:07,320
we're doing a month with a lot more

00:02:04,500 --> 00:02:10,020
spark and tensorflow instead right on

00:02:07,320 --> 00:02:12,880
cop gives it back etc so if you want to

00:02:10,020 --> 00:02:16,930
spend some money but when we take from

00:02:12,880 --> 00:02:18,960
arts and actually recently we're kind of

00:02:16,930 --> 00:02:21,160
excited about this we released the

00:02:18,960 --> 00:02:22,830
component of that fight appliances

00:02:21,160 --> 00:02:25,390
designed to make it easy to fail

00:02:22,830 --> 00:02:28,150
streaming data pipelines with with

00:02:25,390 --> 00:02:29,830
August dreams are smarter than me and

00:02:28,150 --> 00:02:34,690
then we need accordin to get my

00:02:29,830 --> 00:02:37,420
specializations going anyway that's a

00:02:34,690 --> 00:02:40,090
lot to say about marketing stuff so what

00:02:37,420 --> 00:02:41,710
we'll discuss again this is a start

00:02:40,090 --> 00:02:43,870
listing SEC YouTube briefing but I think

00:02:41,710 --> 00:02:46,720
for this crowd it's a public separate

00:02:43,870 --> 00:02:48,430
about why screaming there to get it

00:02:46,720 --> 00:02:50,140
talked a little bit about the challenges

00:02:48,430 --> 00:02:53,890
that make some data science today

00:02:50,140 --> 00:02:55,480
engineering very briefly about how to

00:02:53,890 --> 00:02:59,350
get started with a guy on your

00:02:55,480 --> 00:03:01,480
environment less they talk about issues

00:02:59,350 --> 00:03:03,400
of actually serving models and

00:03:01,480 --> 00:03:06,280
production what that means in screaming

00:03:03,400 --> 00:03:08,640
context talk about some of the systems

00:03:06,280 --> 00:03:11,710
that you can use they're like all

00:03:08,640 --> 00:03:17,260
packages nice and then finish with a

00:03:11,710 --> 00:03:18,910
couple of pragmatic ok so we're used to

00:03:17,260 --> 00:03:22,450
doing a lot of data analytics is bad

00:03:18,910 --> 00:03:30,160
necessarily the reason for the Duke was

00:03:22,450 --> 00:03:32,200
just this much crap that you can but why

00:03:30,160 --> 00:03:34,870
are we trying to argument screaming is

00:03:32,200 --> 00:03:38,230
so important now a lot of it is just

00:03:34,870 --> 00:03:39,910
comes down in timing this money like

00:03:38,230 --> 00:03:42,070
I've been in the energy industry which

00:03:39,910 --> 00:03:44,500
obviously a wind farm industry you've

00:03:42,070 --> 00:03:46,030
got all the kinds of need now manage the

00:03:44,500 --> 00:03:48,130
grid because it's a lot more dynamic

00:03:46,030 --> 00:03:49,930
than it used to be is things like wind

00:03:48,130 --> 00:03:51,940
and solar are very they're quite

00:03:49,930 --> 00:03:53,680
variable so managing leaves the

00:03:51,940 --> 00:03:56,140
inventory is actually a real challenge

00:03:53,680 --> 00:03:58,330
whatever store if to but it's also an

00:03:56,140 --> 00:04:00,580
IOT problem you to these devices they

00:03:58,330 --> 00:04:03,250
get emails lemon tree I remember a few

00:04:00,580 --> 00:04:05,950
years ago watching a video from Scotland

00:04:03,250 --> 00:04:08,410
of a turbine liquids like burning out it

00:04:05,950 --> 00:04:09,880
was on fire you spin with so you don't

00:04:08,410 --> 00:04:12,250
to know when that's going to happen at a

00:04:09,880 --> 00:04:14,830
time so they like to monitor these

00:04:12,250 --> 00:04:16,600
things a lot of the same problems supply

00:04:14,830 --> 00:04:18,000
a medical what are you trying to make

00:04:16,600 --> 00:04:21,160
sure you detect an arrhythmia

00:04:18,000 --> 00:04:23,050
immediately or offline meal to provide

00:04:21,160 --> 00:04:25,980
access to someone's like experience or

00:04:23,050 --> 00:04:27,690
something in finance units

00:04:25,980 --> 00:04:30,780
everything from very high frequency

00:04:27,690 --> 00:04:33,210
trading down to maybe longer latency

00:04:30,780 --> 00:04:36,780
trading but more intelligent algorithms

00:04:33,210 --> 00:04:38,610
this okay well we're hitting the limits

00:04:36,780 --> 00:04:41,190
like a flight for the speed of light

00:04:38,610 --> 00:04:43,160
like they can't get any faster so now

00:04:41,190 --> 00:04:47,790
that you're trying to get smarter as a

00:04:43,160 --> 00:04:48,960
baby with a little less speed Telecom is

00:04:47,790 --> 00:04:52,200
an interesting one because it's

00:04:48,960 --> 00:04:55,020
everything from IOT to managing this

00:04:52,200 --> 00:05:00,960
network and people live doing sessions

00:04:55,020 --> 00:05:04,830
and calls recently with the telecom

00:05:00,960 --> 00:05:07,800
where were helping on this project where

00:05:04,830 --> 00:05:09,870
they were electric major sporting events

00:05:07,800 --> 00:05:12,210
they wanted to analyze all the activity

00:05:09,870 --> 00:05:14,700
on the network related sentiment and my

00:05:12,210 --> 00:05:22,650
target had some people and you can like

00:05:14,700 --> 00:05:24,480
target things like Twitter campaigns of

00:05:22,650 --> 00:05:28,190
course that doesn't work if I can find

00:05:24,480 --> 00:05:30,090
out for now or what the erection tweet

00:05:28,190 --> 00:05:32,040
and then of course we all know about

00:05:30,090 --> 00:05:35,430
mobile apps how important it is I found

00:05:32,040 --> 00:05:39,800
the state of the Thank You this is one

00:05:35,430 --> 00:05:39,800
of the best ones it was indestructible

00:05:39,890 --> 00:05:45,150
the pocket really max it's a little

00:05:42,540 --> 00:05:49,140
thicker than this bank but yet it was

00:05:45,150 --> 00:05:51,140
still disappeared a pocket you look like

00:05:49,140 --> 00:06:02,100
you're happy to see people maybe but

00:05:51,140 --> 00:06:05,930
there were less value of information is

00:06:02,100 --> 00:06:05,930
less over time

00:06:06,740 --> 00:06:12,570
even how you guys look there but I

00:06:11,070 --> 00:06:17,010
really wanted to know an hour ago when

00:06:12,570 --> 00:06:20,790
people were tweeting ok so this sort of

00:06:17,010 --> 00:06:22,140
a motivation that's not news oh by the

00:06:20,790 --> 00:06:25,230
way the other thing you can do any

00:06:22,140 --> 00:06:30,390
questions or small groups any questions

00:06:25,230 --> 00:06:33,360
or whatever just interrupt so what about

00:06:30,390 --> 00:06:34,650
these things versus engineering let me

00:06:33,360 --> 00:06:37,320
be actually working on organization

00:06:34,650 --> 00:06:39,409
we're given trivial data science team in

00:06:37,320 --> 00:06:41,669
engineering

00:06:39,409 --> 00:06:45,360
if you can feed out today you probably

00:06:41,669 --> 00:06:47,849
will before too long but we have this

00:06:45,360 --> 00:06:49,500
sort of Mars versus being this problem

00:06:47,849 --> 00:06:51,659
moving on we're in the data science

00:06:49,500 --> 00:06:54,330
folks think of this love affair with

00:06:51,659 --> 00:06:57,210
this crazy language ie bond nobody's

00:06:54,330 --> 00:07:00,479
going to succeed but it's only going

00:06:57,210 --> 00:07:04,229
around 130 years but anyway almost all

00:07:00,479 --> 00:07:06,150
these people's choice because it's very

00:07:04,229 --> 00:07:08,360
simple language to learn and these folks

00:07:06,150 --> 00:07:11,460
from learning languages they're

00:07:08,360 --> 00:07:13,139
analyzing they of course whereas you

00:07:11,460 --> 00:07:15,840
know we developers were kind of used to

00:07:13,139 --> 00:07:21,620
working and stuff as hard as we like

00:07:15,840 --> 00:07:21,620
suffering I think like jaebeum based and

00:07:22,159 --> 00:07:32,539
vintage 80s languages and they're sort

00:07:29,159 --> 00:07:34,620
of the scat between the two these two I

00:07:32,539 --> 00:07:36,210
want you to do a lot of details that

00:07:34,620 --> 00:07:37,710
some of the interesting things for going

00:07:36,210 --> 00:07:40,620
on to actually bridge them to make it

00:07:37,710 --> 00:07:43,469
possible to run stuff on the left on the

00:07:40,620 --> 00:07:44,520
infrastructure on the right but we'll

00:07:43,469 --> 00:07:45,930
get into it a little bit as we go

00:07:44,520 --> 00:07:49,650
actually one of the interesting things

00:07:45,930 --> 00:07:52,259
that's happening the instantly talking I

00:07:49,650 --> 00:07:57,629
think about it will be made for this is

00:07:52,259 --> 00:08:00,210
to be an from Oracle rail VM GRA and one

00:07:57,629 --> 00:08:04,229
of its nice features is it makes it much

00:08:00,210 --> 00:08:09,389
easier to host languages in people found

00:08:04,229 --> 00:08:11,129
ways to get like Ruby and Python for

00:08:09,389 --> 00:08:12,719
Street operation Grails a lot more

00:08:11,129 --> 00:08:15,599
flexible about this as well three

00:08:12,719 --> 00:08:17,849
general requirements so one possibility

00:08:15,599 --> 00:08:21,259
is that the dissolve up your onion gravy

00:08:17,849 --> 00:08:27,169
atoms Oracle money for the price version

00:08:21,259 --> 00:08:29,849
and then all this stuff with just one

00:08:27,169 --> 00:08:32,070
okay and then actually also supports

00:08:29,849 --> 00:08:33,839
native code which is a requirement as

00:08:32,070 --> 00:08:36,390
most of these tools at using native

00:08:33,839 --> 00:08:38,880
libraries to give the performance like

00:08:36,390 --> 00:08:45,209
target GPUs and stuff so that would have

00:08:38,880 --> 00:08:46,800
the word can just be interpreted but if

00:08:45,209 --> 00:08:50,370
you think about this sort of the world

00:08:46,800 --> 00:08:51,899
view of these two camps of people does

00:08:50,370 --> 00:08:53,100
an interesting things a kind of emerged

00:08:51,899 --> 00:08:54,600
one is that

00:08:53,100 --> 00:08:56,399
scientists are actually completely

00:08:54,600 --> 00:08:58,500
comfortable with uncertainty they are

00:08:56,399 --> 00:09:00,300
used to statistics and probabilities

00:08:58,500 --> 00:09:04,620
where you don't have to Nick dancer you

00:09:00,300 --> 00:09:05,610
have well it's probably this bars

00:09:04,620 --> 00:09:09,300
whatever

00:09:05,610 --> 00:09:12,000
whereas we engineers that we we just

00:09:09,300 --> 00:09:13,980
like certain even though we sort of are

00:09:12,000 --> 00:09:15,480
living in denial it's distributed

00:09:13,980 --> 00:09:19,199
systems are your employees and

00:09:15,480 --> 00:09:21,360
predictable as well but anyways we spent

00:09:19,199 --> 00:09:25,050
a different way of thinking come back to

00:09:21,360 --> 00:09:27,449
complications we go data scientists are

00:09:25,050 --> 00:09:30,389
less about these sort of see ICD

00:09:27,449 --> 00:09:31,920
processes that you developers love and

00:09:30,389 --> 00:09:34,410
where this is long chain of events that

00:09:31,920 --> 00:09:36,540
leads to deployment there were many

00:09:34,410 --> 00:09:39,540
ridiculous parallels there working

00:09:36,540 --> 00:09:42,630
within the scientific method but much

00:09:39,540 --> 00:09:45,569
more about kind of things oratory sort

00:09:42,630 --> 00:09:48,029
of important process now we're like I

00:09:45,569 --> 00:09:50,459
said I'd be the engineers and regular

00:09:48,029 --> 00:09:52,050
software people to do plumbing we're a

00:09:50,459 --> 00:09:57,810
little less what would make sort of

00:09:52,050 --> 00:10:00,240
uncertainty and we tend to be more

00:09:57,810 --> 00:10:03,329
process oriented now printing wind up

00:10:00,240 --> 00:10:07,079
buckling Nathan human race he speaks a

00:10:03,329 --> 00:10:17,010
lot in strata they may be interesting

00:10:07,079 --> 00:10:25,980
observation recently agile manifesto but

00:10:17,010 --> 00:10:28,170
this image data now this is a lot about

00:10:25,980 --> 00:10:35,899
Native governments we talk about issues

00:10:28,170 --> 00:10:38,279
like this mental recently certain

00:10:35,899 --> 00:10:40,649
another thing you realize that you start

00:10:38,279 --> 00:10:42,870
doing screaming is that kind of proposes

00:10:40,649 --> 00:10:48,689
new requirements on your environment

00:10:42,870 --> 00:10:51,149
that maybe work there so much anyway

00:10:48,689 --> 00:10:53,750
it's the problem you know when I

00:10:51,149 --> 00:10:57,360
launched them batch job

00:10:53,750 --> 00:11:02,819
couple hours minutes dying like his UNIX

00:10:57,360 --> 00:11:05,550
part but after a few hours done but if I

00:11:02,819 --> 00:11:07,950
started screaming do this thing

00:11:05,550 --> 00:11:09,930
from Italy that may have to run for

00:11:07,950 --> 00:11:11,790
weeks or months you know it's going to

00:11:09,930 --> 00:11:13,830
see everything we can us think I've been

00:11:11,790 --> 00:11:15,090
under pencil on your network partitions

00:11:13,830 --> 00:11:18,390
hundred millions

00:11:15,090 --> 00:11:20,940
it's like traffic like the game days and

00:11:18,390 --> 00:11:23,370
stuff and so suddenly you have a lot

00:11:20,940 --> 00:11:26,610
more challenges to make these things

00:11:23,370 --> 00:11:28,380
reliable in to handle both faults as

00:11:26,610 --> 00:11:30,120
well as surprise and then you sort

00:11:28,380 --> 00:11:32,310
surprise here but things that I didn't

00:11:30,120 --> 00:11:37,800
anticipate like oh my gosh people

00:11:32,310 --> 00:11:39,780
actually like to shop availability you

00:11:37,800 --> 00:11:41,910
know typically to always be on because

00:11:39,780 --> 00:11:44,460
we're doing streaming because again I

00:11:41,910 --> 00:11:46,770
use but again you need answers faster so

00:11:44,460 --> 00:11:47,850
it's offline for now it's typically

00:11:46,770 --> 00:11:50,430
really really bad

00:11:47,850 --> 00:11:58,440
but where's the batch job crashes into

00:11:50,430 --> 00:12:00,270
it restoring and then for some

00:11:58,440 --> 00:12:03,050
definition of low latency now a lot of

00:12:00,270 --> 00:12:05,370
people unfortunately get carried away

00:12:03,050 --> 00:12:07,200
doing low latency computing when

00:12:05,370 --> 00:12:10,430
actually making the answers within an

00:12:07,200 --> 00:12:13,080
hour or maybe tomorrow's good enough so

00:12:10,430 --> 00:12:15,120
idea even though he sells screaming

00:12:13,080 --> 00:12:16,920
tools as I mentioned earlier I do try to

00:12:15,120 --> 00:12:18,840
remind people they know what if you can

00:12:16,920 --> 00:12:20,420
work with batch jobs but life is gonna

00:12:18,840 --> 00:12:25,830
be so much easier

00:12:20,420 --> 00:12:27,060
racing but if you're doing screaming you

00:12:25,830 --> 00:12:34,700
really aren't doing high-frequency

00:12:27,060 --> 00:12:34,700
trading or something and then of course

00:12:37,430 --> 00:12:46,340
that's very important we weren't people

00:12:41,790 --> 00:12:50,550
today and I'll come back to this point

00:12:46,340 --> 00:12:54,810
specific to be able to modify behavior

00:12:50,550 --> 00:13:08,760
and some control restart things and in

00:12:54,810 --> 00:13:10,350
particular we'll see models well a lot

00:13:08,760 --> 00:13:12,300
of these properties are things that we

00:13:10,350 --> 00:13:15,960
got used to actually working with micro

00:13:12,300 --> 00:13:17,970
service so in a lot of cases that we

00:13:15,960 --> 00:13:18,710
just applied those principles that we've

00:13:17,970 --> 00:13:22,310
been

00:13:18,710 --> 00:13:25,090
he's interpreting requirements that's

00:13:22,310 --> 00:13:27,980
another area of emerging mapping between

00:13:25,090 --> 00:13:36,290
classic data science and data even data

00:13:27,980 --> 00:13:38,030
engineering and micro service okay so

00:13:36,290 --> 00:13:40,280
suppose you want to start the point

00:13:38,030 --> 00:13:40,880
machine learning or should you start

00:13:40,280 --> 00:13:44,480
first

00:13:40,880 --> 00:13:48,140
well actually the obvious answer is this

00:13:44,480 --> 00:13:50,990
is taken from actually Riley postnup

00:13:48,140 --> 00:13:55,120
rings may I adoption and the obvious

00:13:50,990 --> 00:13:55,120
thing is you have existing application

00:13:59,380 --> 00:14:03,710
that can actually be a challenge if

00:14:01,700 --> 00:14:06,740
those existing systems are not very

00:14:03,710 --> 00:14:08,390
amenable to enhancement or incorporating

00:14:06,740 --> 00:14:12,740
new stuff it could actually be harder

00:14:08,390 --> 00:14:15,020
than paste but usually that's that's a

00:14:12,740 --> 00:14:18,260
logical place to do is try to make

00:14:15,020 --> 00:14:19,910
things better and you've also got a

00:14:18,260 --> 00:14:21,440
baseline right so you can actually see

00:14:19,910 --> 00:14:23,630
in the deployment neural network

00:14:21,440 --> 00:14:30,290
essentially better recommendations are

00:14:23,630 --> 00:14:32,150
actually worse recommendations what are

00:14:30,290 --> 00:14:35,960
things I'm kind of interested in and

00:14:32,150 --> 00:14:37,880
explore this a little bit we integrate

00:14:35,960 --> 00:14:40,490
stuff that we've been doing for long

00:14:37,880 --> 00:14:44,060
time like expert systems makes it become

00:14:40,490 --> 00:14:49,820
more modern approaches I did a little

00:14:44,060 --> 00:14:51,770
product like recently where we actually

00:14:49,820 --> 00:14:53,060
used it in a streaming pipeline we

00:14:51,770 --> 00:14:55,280
didn't integrated with machine learning

00:14:53,060 --> 00:14:58,460
anyway but we did use rules

00:14:55,280 --> 00:15:00,650
it's really old systematically very

00:14:58,460 --> 00:15:02,330
object oriented and approved in a lot of

00:15:00,650 --> 00:15:03,920
ways by modern standards but

00:15:02,330 --> 00:15:06,950
nevertheless a great way to specify

00:15:03,920 --> 00:15:14,060
rules behavior there is some research

00:15:06,950 --> 00:15:16,430
work and I need to find some links there

00:15:14,060 --> 00:15:19,850
are people who are thinking about and we

00:15:16,430 --> 00:15:21,980
make training faster and smarter of

00:15:19,850 --> 00:15:24,110
models that we actually do make

00:15:21,980 --> 00:15:26,150
knowledge ahead of time make certainly

00:15:24,110 --> 00:15:28,640
classically between your own networks is

00:15:26,150 --> 00:15:31,510
we just kind of throw this thing data

00:15:28,640 --> 00:15:33,010
and it's completely stupid

00:15:31,510 --> 00:15:35,110
you know weights in the model are

00:15:33,010 --> 00:15:37,990
completely random or whatever and they

00:15:35,110 --> 00:15:40,089
make excellent vibes information on the

00:15:37,990 --> 00:15:41,980
flights or an almost miraculous but it's

00:15:40,089 --> 00:15:46,180
also incredibly expensive to do it that

00:15:41,980 --> 00:15:47,680
way so if I could reframe the model well

00:15:46,180 --> 00:15:49,360
there's other ways to do this too but if

00:15:47,680 --> 00:15:56,350
I can actually leverage what I know

00:15:49,360 --> 00:15:58,959
already or it runs I'm combining

00:15:56,350 --> 00:16:00,760
there are times well I mentioned this

00:15:58,959 --> 00:16:03,310
earlier you know like these machine

00:16:00,760 --> 00:16:05,889
learning models is very probable is if I

00:16:03,310 --> 00:16:07,930
already know that tax law says that if

00:16:05,889 --> 00:16:10,170
you make over twenty thousand dollars a

00:16:07,930 --> 00:16:14,170
year get involved with the IRS

00:16:10,170 --> 00:16:16,870
I can certainly part rule out you can go

00:16:14,170 --> 00:16:21,820
back to get there now so is there

00:16:16,870 --> 00:16:23,649
Spencer okay let's start peel the onion

00:16:21,820 --> 00:16:25,810
a bit talk about serving models

00:16:23,649 --> 00:16:31,540
production and put a cloud here because

00:16:25,810 --> 00:16:33,339
this is where it gets so like that

00:16:31,540 --> 00:16:35,170
actually not this is a certain way from

00:16:33,339 --> 00:16:37,750
cute clothing on people Louis let my

00:16:35,170 --> 00:16:40,839
back to it but it's a project machine

00:16:37,750 --> 00:16:43,630
learning system day but they did a

00:16:40,839 --> 00:16:46,540
survey recently of their users and it's

00:16:43,630 --> 00:16:49,300
all to read but the number three I am on

00:16:46,540 --> 00:16:52,089
there was people were challenges taking

00:16:49,300 --> 00:16:53,980
models to production number one and two

00:16:52,089 --> 00:16:56,980
on the list where the sort of things we

00:16:53,980 --> 00:16:58,720
all know about important data at all

00:16:56,980 --> 00:17:06,939
like how you can get started in

00:16:58,720 --> 00:17:08,679
infrastructure so a lot of stuff that

00:17:06,939 --> 00:17:13,689
was difficult that this one is pretty

00:17:08,679 --> 00:17:15,669
interesting so I can actually this is

00:17:13,689 --> 00:17:19,390
already published we've done a survey

00:17:15,669 --> 00:17:22,390
recently and he does the link to it but

00:17:19,390 --> 00:17:26,410
some of the areas were we found our

00:17:22,390 --> 00:17:29,520
customers first he's like you know if I

00:17:26,410 --> 00:17:31,960
give this longer business opportunities

00:17:29,520 --> 00:17:33,400
I'm really worried at my data team well

00:17:31,960 --> 00:17:36,640
this is like their productivity would

00:17:33,400 --> 00:17:40,510
brag called their best mundane

00:17:36,640 --> 00:17:42,970
employment problems or whatever I don't

00:17:40,510 --> 00:17:44,240
want to get wet you flat-footed in this

00:17:42,970 --> 00:17:48,140
market opportunity

00:17:44,240 --> 00:17:54,140
I really got what my customers that's

00:17:48,140 --> 00:17:56,240
call inserts so these are not too

00:17:54,140 --> 00:17:58,610
surprising but never less than emphasize

00:17:56,240 --> 00:18:02,170
white people are really like you

00:17:58,610 --> 00:18:06,140
learning it's kind of their sacred

00:18:02,170 --> 00:18:07,760
another problem is if I'm going to lift

00:18:06,140 --> 00:18:15,740
up in production there's a lot of

00:18:07,760 --> 00:18:19,100
control and do things I come back to at

00:18:15,740 --> 00:18:20,840
the end but you know I hopefully my

00:18:19,100 --> 00:18:22,820
pelvic teams are I got this great

00:18:20,840 --> 00:18:26,210
process continuous integration and

00:18:22,820 --> 00:18:28,790
delivery way integrate bed with my model

00:18:26,210 --> 00:18:30,740
servants like should I be like doing

00:18:28,790 --> 00:18:34,730
version control of the models so I know

00:18:30,740 --> 00:18:36,890
exactly what's made time but I feel the

00:18:34,730 --> 00:18:38,690
automated testing builds and so of

00:18:36,890 --> 00:18:41,630
course other than someone who doesn't we

00:18:38,690 --> 00:18:43,820
are to a integration branch my own that

00:18:41,630 --> 00:18:45,440
they came out the sequence of tests to

00:18:43,820 --> 00:18:49,340
make sure that the model means some sort

00:18:45,440 --> 00:18:50,990
of quality members and then I watch

00:18:49,340 --> 00:18:53,330
there's all kind of stuff we're used to

00:18:50,990 --> 00:18:59,780
doing now like dart launches maybe

00:18:53,330 --> 00:19:02,090
testing and so forth it's absolutely

00:18:59,780 --> 00:19:04,820
critical like they always this reduction

00:19:02,090 --> 00:19:06,800
of Monica what's going on I'll end up

00:19:04,820 --> 00:19:11,960
why Milan something takes place is long

00:19:06,800 --> 00:19:17,360
to support records service certainly I'd

00:19:11,960 --> 00:19:19,220
like to know it's actually usually we

00:19:17,360 --> 00:19:21,380
have to figure out what quality metrics

00:19:19,220 --> 00:19:24,500
we assign this can be really tough like

00:19:21,380 --> 00:19:35,720
for recommendations you know if I change

00:19:24,500 --> 00:19:44,210
now I recommend stuff to you by earlier

00:19:35,720 --> 00:19:48,160
other things supposed to hear these

00:19:44,210 --> 00:19:52,790
models to score to a group logins for

00:19:48,160 --> 00:19:55,070
mortgages and somebody files have been

00:19:52,790 --> 00:19:57,170
playing with the regulatory agency

00:19:55,070 --> 00:19:58,340
plagues that you denied them alone and

00:19:57,170 --> 00:19:59,930
they think you were discriminated

00:19:58,340 --> 00:20:02,570
against something that you and some

00:19:59,930 --> 00:20:04,100
minority groups the first thing you're

00:20:02,570 --> 00:20:06,830
going to need to do is to go back to

00:20:04,100 --> 00:20:09,110
find out which model which version of

00:20:06,830 --> 00:20:12,680
the model actually was used to score

00:20:09,110 --> 00:20:16,580
that ensued what made it make the

00:20:12,680 --> 00:20:19,730
decision whether maybe you can I need to

00:20:16,580 --> 00:20:21,800
know whose whose access system I was it

00:20:19,730 --> 00:20:24,350
possibly somebody somebody tampered clip

00:20:21,800 --> 00:20:26,270
but maybe I'm let me bid to know how he

00:20:24,350 --> 00:20:28,880
was trained if I'm really diving deep

00:20:26,270 --> 00:20:30,740
into like slow before I guess I mean you

00:20:28,880 --> 00:20:34,190
can know exactly what records were used

00:20:30,740 --> 00:20:36,470
to dream so this is up Alexis stuff that

00:20:34,190 --> 00:20:41,770
now I have to keep track of different

00:20:36,470 --> 00:20:43,970
models some of the models become data

00:20:41,770 --> 00:20:46,220
they're not only data in the sense that

00:20:43,970 --> 00:20:48,530
this is one of the ways they can be used

00:20:46,220 --> 00:20:49,220
in Brighton I talked about this in the

00:20:48,530 --> 00:20:51,410
last hour

00:20:49,220 --> 00:20:54,110
basically exchange models as parameters

00:20:51,410 --> 00:20:55,550
and updating that rate and so forth

00:20:54,110 --> 00:21:00,800
but they're actually dated from the

00:20:55,550 --> 00:21:02,000
sense of government but there are some

00:21:00,800 --> 00:21:03,320
different things this is kind of a

00:21:02,000 --> 00:21:07,100
laundry list of stuff that's a little

00:21:03,320 --> 00:21:08,780
different so normally an organization

00:21:07,100 --> 00:21:11,720
and baseline organization is going to

00:21:08,780 --> 00:21:21,620
need ways to do reasonably accurate

00:21:11,720 --> 00:21:23,750
quality processes to do experiments on

00:21:21,620 --> 00:21:31,940
recently representative data while

00:21:23,750 --> 00:21:33,680
preserving data privacy concerns while

00:21:31,940 --> 00:21:35,210
all this time we're worried we're also

00:21:33,680 --> 00:21:37,130
worried about not like protecting to

00:21:35,210 --> 00:21:39,380
private information you were playing

00:21:37,130 --> 00:21:41,090
with reduce experimental purposes but

00:21:39,380 --> 00:21:44,840
you know making sure that we get fair

00:21:41,090 --> 00:21:46,610
models discriminatory understandable

00:21:44,840 --> 00:21:51,620
India to the model and the big event is

00:21:46,610 --> 00:21:58,930
used for tracking all that stuff the

00:21:51,620 --> 00:22:01,490
rest was within another problem too that

00:21:58,930 --> 00:22:03,710
declined the engineering side of the

00:22:01,490 --> 00:22:06,320
health and you're telling me that like

00:22:03,710 --> 00:22:08,029
you packing sense like you put in this

00:22:06,320 --> 00:22:09,350
ring let me give you this things for

00:22:08,029 --> 00:22:10,669
every time but inflection your

00:22:09,350 --> 00:22:12,140
probabilistic thing

00:22:10,669 --> 00:22:15,409
now you've introduced some measure of

00:22:12,140 --> 00:22:17,630
uncertainty before inside you there's

00:22:15,409 --> 00:22:22,640
some helping your out I only know that

00:22:17,630 --> 00:22:24,230
this is actually on wait accept the fact

00:22:22,640 --> 00:22:31,970
that amount you've added this expert

00:22:24,230 --> 00:22:33,289
level indeterminacy in my system okay

00:22:31,970 --> 00:22:35,419
let's still the idea just a little bit

00:22:33,289 --> 00:22:37,220
more and talk about two architectures

00:22:35,419 --> 00:22:39,020
that you can use to actually serve these

00:22:37,220 --> 00:22:41,720
in production and again this isn't like

00:22:39,020 --> 00:22:49,520
a screaming effect and because this is a

00:22:41,720 --> 00:22:53,690
bit small with the mouse but there's

00:22:49,520 --> 00:23:08,149
actually three things going on here the

00:22:53,690 --> 00:23:12,100
first one is what's going on is my ot

00:23:08,149 --> 00:23:12,100
devices and looking for anomalies

00:23:14,380 --> 00:23:18,169
so that's a lemon tree coming in from

00:23:16,820 --> 00:23:21,049
the field from all these devices

00:23:18,169 --> 00:23:24,289
automatically i've been ingested into a

00:23:21,049 --> 00:23:27,350
lot oriented system like to capture the

00:23:24,289 --> 00:23:29,870
data reliably and scale durably all that

00:23:27,350 --> 00:23:32,179
stuff and then serve downswing consumers

00:23:29,870 --> 00:23:34,250
so it's Boris mentioned earlier copies

00:23:32,179 --> 00:23:38,929
like like dated back or my Enterprise

00:23:34,250 --> 00:23:40,940
Service bus you have great hair that's

00:23:38,929 --> 00:23:43,760
sort of the same thing but anyway I'm

00:23:40,940 --> 00:23:45,500
dashing limbs lime cream pasta and then

00:23:43,760 --> 00:23:49,730
I'm going to send it over to my training

00:23:45,500 --> 00:23:52,010
regime which is this blue circle so this

00:23:49,730 --> 00:23:54,500
is where periodically I'm going to take

00:23:52,010 --> 00:23:56,299
whatever data I need whether it's just

00:23:54,500 --> 00:23:58,580
the incremental stuff since the last

00:23:56,299 --> 00:24:00,620
training regime or maybe it's everything

00:23:58,580 --> 00:24:02,390
I'm going to refrain from scratch now

00:24:00,620 --> 00:24:04,370
I'm going to be model train and I'm just

00:24:02,390 --> 00:24:06,740
showing spark here's one way I might do

00:24:04,370 --> 00:24:08,720
that model trains it's good and bad many

00:24:06,740 --> 00:24:10,809
back and then we'll see another example

00:24:08,720 --> 00:24:13,610
in a minute tensorflow

00:24:10,809 --> 00:24:16,309
so whenever that happens next to be

00:24:13,610 --> 00:24:16,940
hourly daily whatever then I'm going to

00:24:16,309 --> 00:24:19,310
send

00:24:16,940 --> 00:24:21,590
the updated model parameters back to a

00:24:19,310 --> 00:24:23,810
new popular topic and they also write

00:24:21,590 --> 00:24:26,030
them to storage for the auditing things

00:24:23,810 --> 00:24:27,590
that I mentioned and also to do startup

00:24:26,030 --> 00:24:30,770
and quickly just load everything in

00:24:27,590 --> 00:24:32,360
memory but for now in my writing system

00:24:30,770 --> 00:24:34,160
I'm going to write those parameters back

00:24:32,360 --> 00:24:36,970
to a new topic topic so they're

00:24:34,160 --> 00:24:39,260
available for whoever's doing scoring

00:24:36,970 --> 00:24:41,210
and actually you get the monuments of a

00:24:39,260 --> 00:24:43,220
scoring Houston reading section of this

00:24:41,210 --> 00:24:45,560
architecture where here I'm going to use

00:24:43,220 --> 00:24:47,210
micro services like caucus graves or

00:24:45,560 --> 00:24:49,190
aqua streams because maybe I'm care

00:24:47,210 --> 00:24:50,840
about blow ladies you don't care about

00:24:49,190 --> 00:24:52,910
the latency but you smart

00:24:50,840 --> 00:24:55,040
you just know maybe second latency

00:24:52,910 --> 00:24:56,660
realistically the link is pretty good at

00:24:55,040 --> 00:24:58,670
low latency tuned we have really big

00:24:56,660 --> 00:25:00,170
scale but if you might use you might

00:24:58,670 --> 00:25:01,940
your service is very comfortable

00:25:00,170 --> 00:25:04,370
deploying those and it's nice if you

00:25:01,940 --> 00:25:07,010
have a library to do this kind of data

00:25:04,370 --> 00:25:11,210
for you that's inside your existing

00:25:07,010 --> 00:25:13,280
micro service are so anyway that system

00:25:11,210 --> 00:25:15,260
is going to be read not only the raw

00:25:13,280 --> 00:25:17,660
data to do scoring but whatever the

00:25:15,260 --> 00:25:19,130
latest models are that show up in Cabo

00:25:17,660 --> 00:25:21,620
got a little update it's in memory

00:25:19,130 --> 00:25:25,340
representation of those ahnold's and the

00:25:21,620 --> 00:25:27,590
disorient Y and if it periodically sees

00:25:25,340 --> 00:25:30,110
what looks like an anomaly based model

00:25:27,590 --> 00:25:31,970
says it will write a record to a new

00:25:30,110 --> 00:25:34,430
pocket clapping that's going to be where

00:25:31,970 --> 00:25:36,200
the anomalies get written to and then

00:25:34,430 --> 00:25:38,030
the last bit is just a regular

00:25:36,200 --> 00:25:40,100
microservices that I've been writing to

00:25:38,030 --> 00:25:43,990
manage things like sessions with the

00:25:40,100 --> 00:25:49,070
devices pushing down patches and updates

00:25:43,990 --> 00:25:51,530
maybe can services like and they'll also

00:25:49,070 --> 00:25:53,480
be watching that topic for anomalies if

00:25:51,530 --> 00:25:58,460
they see that oh looks like device Spy

00:25:53,480 --> 00:26:00,380
is having a hard drive maybe it can

00:25:58,460 --> 00:26:02,930
trigger whatever corrective actions

00:26:00,380 --> 00:26:08,690
require hopefully before the user even

00:26:02,930 --> 00:26:11,240
notices so this you know like three big

00:26:08,690 --> 00:26:14,510
areas of concern is monitoring I'm

00:26:11,240 --> 00:26:15,950
sharing it all the same in another

00:26:14,510 --> 00:26:18,520
cluster whatever

00:26:15,950 --> 00:26:22,130
there's model serving that happens at

00:26:18,520 --> 00:26:25,450
low latency whatever I need and actually

00:26:22,130 --> 00:26:25,450
not late to actually listen

00:26:29,330 --> 00:26:38,690
um and then the regular stuff that I

00:26:31,999 --> 00:26:41,149
have to do with micro-services so this

00:26:38,690 --> 00:26:42,980
is an example of embedded model serving

00:26:41,149 --> 00:26:45,440
where it actually had the models like

00:26:42,980 --> 00:26:47,989
somehow embedded in my micro services is

00:26:45,440 --> 00:26:50,779
a library the other possibility is that

00:26:47,989 --> 00:26:53,090
I just use a service like tensorflow

00:26:50,779 --> 00:26:55,009
serving we're now I'm going to keep all

00:26:53,090 --> 00:26:57,649
of the stuff all the intelligence about

00:26:55,009 --> 00:26:59,539
model training and serving in one place

00:26:57,649 --> 00:27:01,369
and you know it could be I have a

00:26:59,539 --> 00:27:03,499
difference tensorflow training in a

00:27:01,369 --> 00:27:06,409
different instance it's doing serving

00:27:03,499 --> 00:27:08,389
but logically one place I don't have

00:27:06,409 --> 00:27:10,340
just exchange models anymore in my

00:27:08,389 --> 00:27:13,190
system I don't have to rehydrate models

00:27:10,340 --> 00:27:14,929
and my micro service I'll just make your

00:27:13,190 --> 00:27:16,700
rest with calls or whatever to

00:27:14,929 --> 00:27:18,830
tensorflow serving and everyone from

00:27:16,700 --> 00:27:21,559
scoring and that actually keeps these

00:27:18,830 --> 00:27:23,929
guys in separate of micro services put

00:27:21,559 --> 00:27:30,289
it at the penalty and pour overhead for

00:27:23,929 --> 00:27:32,659
the rest part time to go through the so

00:27:30,289 --> 00:27:36,169
I stole this picture from the tensor

00:27:32,659 --> 00:27:37,730
flow documentation it's you can't see

00:27:36,169 --> 00:27:39,350
the details in the back but it's pretty

00:27:37,730 --> 00:27:42,739
much like you would expect there's some

00:27:39,350 --> 00:27:48,049
of API points make calls behind the

00:27:42,739 --> 00:27:58,999
scenes that manage models or like like

00:27:48,049 --> 00:28:06,820
forest models of models serving as a

00:27:58,999 --> 00:28:14,059
service well as a service engineer

00:28:06,820 --> 00:28:17,119
services in each year you see or

00:28:14,059 --> 00:28:19,730
something and he knows nicely separate

00:28:17,119 --> 00:28:21,679
concerns so I have my brains data

00:28:19,730 --> 00:28:27,489
science organization worried about all

00:28:21,679 --> 00:28:30,230
the network stuff I just have to arrest

00:28:27,489 --> 00:28:31,820
connections and that means they can not

00:28:30,230 --> 00:28:34,970
only have that expertise that they can

00:28:31,820 --> 00:28:39,100
yes different schedules for deploying

00:28:34,970 --> 00:28:39,100
new systems maybe they

00:28:41,790 --> 00:28:52,790
the disadvantages are milliseconds

00:28:49,830 --> 00:28:58,680
versus the function microseconds

00:28:52,790 --> 00:29:06,480
although the time it takes to process I

00:28:58,680 --> 00:29:08,100
conclude this is actually yeah you can

00:29:06,480 --> 00:29:10,290
lose your network so you would have to

00:29:08,100 --> 00:29:11,880
add logic and the Micra service that can

00:29:10,290 --> 00:29:15,030
handle the case where it doesn't get an

00:29:11,880 --> 00:29:22,350
answer or nothing everything's back so

00:29:15,030 --> 00:29:25,050
we just recommends you and you know this

00:29:22,350 --> 00:29:27,030
if you're running entirely different

00:29:25,050 --> 00:29:28,860
systems for model training like whatever

00:29:27,030 --> 00:29:30,810
tensor does that's totally different

00:29:28,860 --> 00:29:32,280
than your toolkits for micro service as

00:29:30,810 --> 00:29:42,560
well now you have to figure out that

00:29:32,280 --> 00:29:45,000
manage the advantages over know this is

00:29:42,560 --> 00:29:48,720
embedded model serving we're gonna get

00:29:45,000 --> 00:29:49,500
the model serving library embedded micro

00:29:48,720 --> 00:29:51,360
services

00:29:49,500 --> 00:29:53,490
I get the lowest over again I still

00:29:51,360 --> 00:29:54,960
might have a lot of good process in the

00:29:53,490 --> 00:29:57,000
model of the neural network the

00:29:54,960 --> 00:30:00,180
expensive but I don't know the process

00:29:57,000 --> 00:30:03,690
of communication reliability which gives

00:30:00,180 --> 00:30:06,540
of course the ability to like to

00:30:03,690 --> 00:30:08,280
everything in one place I'm actually

00:30:06,540 --> 00:30:10,140
negative proposing to talk during

00:30:08,280 --> 00:30:13,950
conference basically about the per day

00:30:10,140 --> 00:30:23,130
monoliths went too far sometimes in

00:30:13,950 --> 00:30:29,610
services there are times you've heard a

00:30:23,130 --> 00:30:34,230
new first nobody Boris you should have

00:30:29,610 --> 00:30:36,510
pointed out there are some big

00:30:34,230 --> 00:30:38,670
disadvantages you know it's not rocket

00:30:36,510 --> 00:30:41,370
science but it's somewhat complex to

00:30:38,670 --> 00:30:43,320
figure out the interchange format with

00:30:41,370 --> 00:30:45,780
like human male or whatever make sure

00:30:43,320 --> 00:30:47,580
that both sides that believe my training

00:30:45,780 --> 00:30:49,890
bottle serving tools that might be

00:30:47,580 --> 00:30:54,540
slightly different support both kinds of

00:30:49,890 --> 00:30:55,290
models interchange format there is this

00:30:54,540 --> 00:30:56,730
coordination

00:30:55,290 --> 00:30:59,610
process it does actually bring

00:30:56,730 --> 00:31:01,560
complexity a few met models serving and

00:30:59,610 --> 00:31:05,270
your micro services like I say it's not

00:31:01,560 --> 00:31:08,370
necessarily bad but it's it's a downside

00:31:05,270 --> 00:31:10,080
and actually one big real challenge is

00:31:08,370 --> 00:31:12,840
making sure that they are actually

00:31:10,080 --> 00:31:14,790
compatible but it might do logistic

00:31:12,840 --> 00:31:18,360
regression usually works my new your own

00:31:14,790 --> 00:31:20,730
networks intensive blowing like a Big Al

00:31:18,360 --> 00:31:23,130
and bedded in spark I'm actually getting

00:31:20,730 --> 00:31:25,380
the same results but this is to make

00:31:23,130 --> 00:31:31,380
sure that actually works if I mind using

00:31:25,380 --> 00:31:33,450
the same system okay so the key thing

00:31:31,380 --> 00:31:35,400
about the last couple of slides is

00:31:33,450 --> 00:31:37,200
really this is what you should do if you

00:31:35,400 --> 00:31:40,850
need to really take control of what's

00:31:37,200 --> 00:31:45,270
going on either to optimize performance

00:31:40,850 --> 00:31:47,640
cost maybe twelve latency and you don't

00:31:45,270 --> 00:31:51,620
want to just kind of like you adopt some

00:31:47,640 --> 00:31:58,050
like anything system and just whatever

00:31:51,620 --> 00:31:59,160
take control but I think you should

00:31:58,050 --> 00:32:01,200
think about some of these all-in-one

00:31:59,160 --> 00:32:05,550
systems see if they're good enough

00:32:01,200 --> 00:32:06,900
you end up in particular there's three

00:32:05,550 --> 00:32:10,820
that I have listed you're actually have

00:32:06,900 --> 00:32:10,820
more links at the end but cute floats

00:32:12,860 --> 00:32:23,460
you've actually used anybody about safe

00:32:18,270 --> 00:32:31,830
for any of us and ml flow is kind of a

00:32:23,460 --> 00:32:38,880
more this is what they all more or less

00:32:31,830 --> 00:32:41,190
try to do is science environment

00:32:38,880 --> 00:32:43,200
everything from frame serving it's all

00:32:41,190 --> 00:32:47,100
these things during day ingestion and

00:32:43,200 --> 00:32:51,360
cleansing I program inter tuning putting

00:32:47,100 --> 00:32:54,000
exploring the space of models and so

00:32:51,360 --> 00:32:56,160
intense acute flow stage maker and all

00:32:54,000 --> 00:32:58,740
these guys I'm trying to do is give you

00:32:56,160 --> 00:33:02,130
like one place to kind of do all this

00:32:58,740 --> 00:33:03,420
integrated way most of them are bringing

00:33:02,130 --> 00:33:07,450
in a bunch of other open source

00:33:03,420 --> 00:33:09,340
components to do various pieces of this

00:33:07,450 --> 00:33:11,230
and try to make it a recently integrated

00:33:09,340 --> 00:33:15,040
experience so that you can just chooses

00:33:11,230 --> 00:33:17,440
one big system in your needs so you can

00:33:15,040 --> 00:33:20,110
certainly do that it came out of Google

00:33:17,440 --> 00:33:23,560
there's a lot of other companies working

00:33:20,110 --> 00:33:25,360
on this it is a nice system although it

00:33:23,560 --> 00:33:27,030
will work with open ships and soakers

00:33:25,360 --> 00:33:29,350
equipment ships

00:33:27,030 --> 00:33:31,630
if you really interested in this boris

00:33:29,350 --> 00:33:37,590
has written a ton of blog posts like and

00:33:31,630 --> 00:33:37,590
you said word on OpenShift thank you

00:33:50,400 --> 00:33:54,360
okay we're nearly done

00:33:58,830 --> 00:34:06,070
just a few pragmatic things about lastly

00:34:02,710 --> 00:34:08,140
I said earlier that I don't want to have

00:34:06,070 --> 00:34:10,540
to reboot my streaming system to update

00:34:08,140 --> 00:34:13,210
the models okay

00:34:10,540 --> 00:34:16,030
and also I need the audience let's talk

00:34:13,210 --> 00:34:17,860
just briefly about those why do I have

00:34:16,030 --> 00:34:24,370
to do model updates because the world

00:34:17,860 --> 00:34:26,679
changes the mansion what's going on real

00:34:24,370 --> 00:34:29,770
world essentially had a half light as

00:34:26,679 --> 00:34:31,150
well so periodically I need to retrain

00:34:29,770 --> 00:34:32,919
them and eventually we'll get to the

00:34:31,150 --> 00:34:39,160
point where we just do it to do strange

00:34:32,919 --> 00:34:40,870
but that's a bit of research but not to

00:34:39,160 --> 00:34:44,980
be expensive so there's also this

00:34:40,870 --> 00:34:59,440
calculation you might go through all

00:34:44,980 --> 00:35:01,330
these again or and if you just say if

00:34:59,440 --> 00:35:02,680
and when you decide to return then you

00:35:01,330 --> 00:35:04,840
could either do like just the usual

00:35:02,680 --> 00:35:07,600
batch jobs that we've done forever from

00:35:04,840 --> 00:35:10,270
training where you take some subset of

00:35:07,600 --> 00:35:13,320
your data maybe not all of it

00:35:10,270 --> 00:35:17,859
but some subset and refrain from scratch

00:35:13,320 --> 00:35:19,900
there are some recently mature it's like

00:35:17,859 --> 00:35:21,369
training a mini batches so you can start

00:35:19,900 --> 00:35:23,740
with an existing modeling and you

00:35:21,369 --> 00:35:26,099
ferment improvement that's really doing

00:35:23,740 --> 00:35:33,310
this piece and then there's this

00:35:26,099 --> 00:35:36,180
researching kind of stuff which

00:35:33,310 --> 00:35:40,230
hopefully we late to it into two years

00:35:36,180 --> 00:35:44,800
ok so that was one topic party

00:35:40,230 --> 00:35:49,510
so here's remember like what kind of

00:35:44,800 --> 00:35:52,060
model it's a neural network the forest

00:35:49,510 --> 00:35:54,250
whatever what are the parameters and

00:35:52,060 --> 00:35:57,730
micrometers of the model is a big

00:35:54,250 --> 00:36:00,190
particular model instance when we

00:35:57,730 --> 00:36:06,040
subtract what David was used to train it

00:36:00,190 --> 00:36:07,480
when was it deploy whatever we really do

00:36:06,040 --> 00:36:09,490
need quality metrics you don't often

00:36:07,480 --> 00:36:13,839
think about there's sometimes we do but

00:36:09,490 --> 00:36:16,150
you can know it's work they also need to

00:36:13,839 --> 00:36:18,130
keep track of how it's doing like

00:36:16,150 --> 00:36:21,130
naughty record seasons toward what was

00:36:18,130 --> 00:36:23,050
like statistics of scoring we can assume

00:36:21,130 --> 00:36:28,349
it's Gaussian is it might be long tail

00:36:23,050 --> 00:36:31,839
but yeah what was like the average again

00:36:28,349 --> 00:36:34,420
member statistics but I mean they're

00:36:31,839 --> 00:36:42,940
that kind of stuff and then the kind of

00:36:34,420 --> 00:36:44,710
details that might be put a bunch of

00:36:42,940 --> 00:36:53,710
links at the end I had to show this

00:36:44,710 --> 00:36:57,010
picture this is obviously the Milky Way

00:36:53,710 --> 00:36:58,750
that maybe you saw Mars last summer it

00:36:57,010 --> 00:37:02,440
was like really bright in Chicago you

00:36:58,750 --> 00:37:06,839
actually see it was closest approach on

00:37:02,440 --> 00:37:13,890
seven years that's Mars

00:37:06,839 --> 00:37:13,890
I mentioned this blog post from a trans

00:37:14,380 --> 00:37:21,190
these are all clickable links I'll show

00:37:16,660 --> 00:37:23,180
you the different I actually really

00:37:21,190 --> 00:37:24,800
liked their weekly blog

00:37:23,180 --> 00:37:27,160
that's what I can email newsletter the

00:37:24,800 --> 00:37:32,300
radar data there's another one for di

00:37:27,160 --> 00:37:35,059
mothers what systems programming to

00:37:32,300 --> 00:37:38,150
steal that amazing resource for very

00:37:35,059 --> 00:37:42,160
graphical detailed explanations of

00:37:38,150 --> 00:37:44,990
neural network concepts like training

00:37:42,160 --> 00:37:46,730
that's what it takes if you're

00:37:44,990 --> 00:37:49,609
left-handed well the algorithm and the

00:37:46,730 --> 00:37:53,809
gradients are really good for more

00:37:49,609 --> 00:37:56,390
general audience kind of resources for

00:37:53,809 --> 00:38:01,579
explaining concepts the algorithm is

00:37:56,390 --> 00:38:03,829
done by MIT or University but a few

00:38:01,579 --> 00:38:08,990
links about research on like improving

00:38:03,829 --> 00:38:14,960
the ability to train on fly links to

00:38:08,990 --> 00:38:19,869
these new systems ticklers have started

00:38:14,960 --> 00:38:19,869
it's focused on the problem of explain

00:38:24,400 --> 00:38:33,220
why people are like it will actually

00:38:30,500 --> 00:38:35,210
Bruce link this that report I mentioned

00:38:33,220 --> 00:38:40,490
and then a couple of really good books

00:38:35,210 --> 00:38:45,940
on screening process and some other

00:38:40,490 --> 00:38:51,770
talks leg down on screaming and then

00:38:45,940 --> 00:38:53,540
worse mostly tutorials while serving

00:38:51,770 --> 00:38:55,730
screams like something though he was

00:38:53,540 --> 00:38:58,849
going for the first one and the general

00:38:55,730 --> 00:39:01,760
string process these aren't getting up

00:38:58,849 --> 00:39:09,710
there we've done them at conferences but

00:39:01,760 --> 00:39:13,270
they're free to use yeah

00:39:09,710 --> 00:39:13,270
production make sure you buy my stuff

00:39:31,120 --> 00:39:40,460
yeah some video for my part of IBS uber

00:39:35,840 --> 00:39:42,050
students touring models you know it

00:39:40,460 --> 00:39:44,600
really depends a lot most the time this

00:39:42,050 --> 00:39:48,110
is text like especially this is one way

00:39:44,600 --> 00:39:49,580
to do it is actually to give them l that

00:39:48,110 --> 00:39:52,940
you're not putting and just like that

00:39:49,580 --> 00:39:55,970
and do it differently you can even tag

00:39:52,940 --> 00:39:57,500
it label and you wanted more you can

00:39:55,970 --> 00:40:00,290
take this parameter straight to a

00:39:57,500 --> 00:40:02,600
database a challenge would be if you

00:40:00,290 --> 00:40:04,430
like very the hyper parameters to the

00:40:02,600 --> 00:40:06,140
records are actually changing like the

00:40:04,430 --> 00:40:10,910
number of parameters has changed means

00:40:06,140 --> 00:40:12,860
tying or the structure I think it's it's

00:40:10,910 --> 00:40:18,290
probably less important so here's the

00:40:12,860 --> 00:40:19,490
thing these are not tied walking because

00:40:18,290 --> 00:40:21,590
again you're not trading it very often

00:40:19,490 --> 00:40:23,390
it's probably anything you choose as

00:40:21,590 --> 00:40:24,860
long as you capture the data it's good

00:40:23,390 --> 00:40:27,470
enough whether you're right into the

00:40:24,860 --> 00:40:32,050
cart and a violin service CSV files and

00:40:27,470 --> 00:40:32,050
then using smart query then that's good

00:40:32,350 --> 00:40:37,160
but you could especially if you already

00:40:35,690 --> 00:40:39,230
know about an assistant for data

00:40:37,160 --> 00:40:40,730
governance in your organization that it

00:40:39,230 --> 00:40:42,860
would make more sense to maybe be

00:40:40,730 --> 00:40:45,050
writing for different databases you're

00:40:42,860 --> 00:40:49,310
already using as part of the data

00:40:45,050 --> 00:40:53,090
governance the I might look burying

00:40:49,310 --> 00:40:56,620
every single one was some let me I

00:40:53,090 --> 00:40:58,910
didn't mention in my comments on this is

00:40:56,620 --> 00:41:00,860
like when you've actually scoring record

00:40:58,910 --> 00:41:02,600
you should probably modeling and score

00:41:00,860 --> 00:41:04,550
to the other record but also an

00:41:02,600 --> 00:41:17,260
identifier for that model version so you

00:41:04,550 --> 00:41:21,770
know you look at you float they just

00:41:17,260 --> 00:41:25,730
didn't use it they actually trying to be

00:41:21,770 --> 00:41:31,100
able to keep following month which is

00:41:25,730 --> 00:41:38,330
monumentally multiple tracks starting

00:41:31,100 --> 00:41:39,500
through they capture the assumption of

00:41:38,330 --> 00:41:44,820
the deponents

00:41:39,500 --> 00:41:49,070
probably get them introduced so we

00:41:44,820 --> 00:42:18,480
yes come back into the ball tickler

00:41:49,070 --> 00:42:24,440
when might be something with a lot of

00:42:18,480 --> 00:42:24,440
screaming will you stay we may be just

00:42:37,790 --> 00:42:46,970
the systems are amazingly stable the

00:42:42,240 --> 00:42:52,710
model good suck that's amazing

00:42:46,970 --> 00:43:00,270
but the system itself it doesn't it's

00:42:52,710 --> 00:43:05,880
the model you supervise doing the model

00:43:00,270 --> 00:43:11,450
is as good is the use to twin mando

00:43:05,880 --> 00:43:14,360
so you are trying to do a Western very

00:43:11,450 --> 00:43:31,740
unsettled a parity and trying to

00:43:14,360 --> 00:43:37,350
production algorithms and it's not the

00:43:31,740 --> 00:43:47,340
algorithms it's the data the okay thanks

00:43:37,350 --> 00:43:50,810
Len make sure you buy here yeah for

00:43:47,340 --> 00:43:50,810
anybody who's doing this recently

00:43:51,920 --> 00:43:57,200

YouTube URL: https://www.youtube.com/watch?v=Pdv7yO93Fys


