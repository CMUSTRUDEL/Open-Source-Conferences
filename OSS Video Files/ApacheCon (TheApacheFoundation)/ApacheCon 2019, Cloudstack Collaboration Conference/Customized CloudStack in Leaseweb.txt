Title: Customized CloudStack in Leaseweb
Publication date: 2019-09-19
Playlist: ApacheCon 2019, Cloudstack Collaboration Conference
Description: 
	In this talk we will share how Leaseweb customized the CloudStack project to serve our business model and our customers, by doing some improvements and do some bug fixes. We always focused on upgrading our fork to the latest in the community while making sure all our improvements are ported to the latest version. In this talk we will tell you about some features and fixes we did like: - multiple NICs feature, - NoVNC, autoscaling, - SSL offloading in load balancer - and other changes made to serve some of our customers' needs. We also love to give the community as we take from it, so we open PRs to release our improvements to the community and based on the community reactions to this talk will start to open new PRs of these changes.
Captions: 
	00:00:05,040 --> 00:00:08,490
welcome all my name is Jeffrey Guzman

00:00:07,050 --> 00:00:10,440
I'm going to talk here with my

00:00:08,490 --> 00:00:12,510
colleagues way entire about

00:00:10,440 --> 00:00:16,049
customizations of glass that we did

00:00:12,510 --> 00:00:17,490
within leisure so we're the glass tech

00:00:16,049 --> 00:00:20,790
team we're currently a team of 10

00:00:17,490 --> 00:00:22,950
developers working from from eight

00:00:20,790 --> 00:00:25,500
countries mainly working within our

00:00:22,950 --> 00:00:27,809
Amsterdam office in the Netherlands and

00:00:25,500 --> 00:00:31,079
we have Tyler working from our Phoenix

00:00:27,809 --> 00:00:34,350
office and we have a colleague working

00:00:31,079 --> 00:00:36,600
from Bulgaria at the moment

00:00:34,350 --> 00:00:38,640
yeah we're building the cloud stack

00:00:36,600 --> 00:00:42,090
platform for each rep doing this for

00:00:38,640 --> 00:00:45,230
over seven years now running multiple

00:00:42,090 --> 00:00:47,850
cloud platforms over multiple continents

00:00:45,230 --> 00:00:51,260
currently over thousand surface run in

00:00:47,850 --> 00:00:56,160
our platform located in six datacenters

00:00:51,260 --> 00:01:01,050
and currently we're at 248 49 commits to

00:00:56,160 --> 00:01:02,010
the Apache classic platform project so a

00:01:01,050 --> 00:01:03,960
little bit about us

00:01:02,010 --> 00:01:06,540
I'm Jeff picks month I'm senior engineer

00:01:03,960 --> 00:01:09,720
for classic team there for DevOps

00:01:06,540 --> 00:01:14,729
infra specialist Tyler and our principal

00:01:09,720 --> 00:01:17,850
plastic engineer way and the agenda for

00:01:14,729 --> 00:01:19,409
today is we will talk about what why we

00:01:17,850 --> 00:01:22,799
needed customizations in cloud stack

00:01:19,409 --> 00:01:25,200
what we did customize the challenges we

00:01:22,799 --> 00:01:27,540
faced during these implementations and

00:01:25,200 --> 00:01:32,820
our future improvements which we're

00:01:27,540 --> 00:01:36,690
planning on doing with its lab set so

00:01:32,820 --> 00:01:37,920
first when we did the private

00:01:36,690 --> 00:01:40,830
interconnect we're connecting our

00:01:37,920 --> 00:01:44,250
private clouds with our dedicated

00:01:40,830 --> 00:01:47,780
service we did a multi Nick support for

00:01:44,250 --> 00:01:50,220
cloud stack improve volume management

00:01:47,780 --> 00:01:53,880
containerization put in top stack and no

00:01:50,220 --> 00:01:57,869
fancy console and customized load

00:01:53,880 --> 00:02:00,960
balancers and some features that made

00:01:57,869 --> 00:02:03,360
our life easier for DRS for managing

00:02:00,960 --> 00:02:05,040
balancing in the PM's and centralized

00:02:03,360 --> 00:02:09,209
logging John could easily see what's

00:02:05,040 --> 00:02:10,590
going on within the virtual routers so

00:02:09,209 --> 00:02:14,519
the first point is private it's good

00:02:10,590 --> 00:02:16,590
interconnect so we have some customers

00:02:14,519 --> 00:02:18,660
at least web who run both bare metal and

00:02:16,590 --> 00:02:21,000
cloud and you score

00:02:18,660 --> 00:02:24,060
summers wanted to interconnect their

00:02:21,000 --> 00:02:25,530
dedicated service with our cloud so we

00:02:24,060 --> 00:02:28,620
needed to figure out a way on how to

00:02:25,530 --> 00:02:30,900
connect these two platforms so if

00:02:28,620 --> 00:02:32,640
current setup is you have customer with

00:02:30,900 --> 00:02:37,770
its own rack with dedicated service and

00:02:32,640 --> 00:02:41,070
we have our cloud platform we show this

00:02:37,770 --> 00:02:42,720
by connecting the dedicated service and

00:02:41,070 --> 00:02:46,080
cloud platform over and private

00:02:42,720 --> 00:02:48,780
interconnect directly between a switch

00:02:46,080 --> 00:02:52,200
within the customers rack and connecting

00:02:48,780 --> 00:02:53,490
it to a network in lab stack once

00:02:52,200 --> 00:02:55,140
everything set up we could easily test

00:02:53,490 --> 00:03:08,790
that ping both machines see if

00:02:55,140 --> 00:03:10,260
everything's ritual hosting company so

00:03:08,790 --> 00:03:12,900
we're providing housing services to our

00:03:10,260 --> 00:03:15,270
customers so both from dedicated servers

00:03:12,900 --> 00:03:22,290
to colocation shared hosting cloud

00:03:15,270 --> 00:03:24,600
products yeah yeah so you can get VPSs

00:03:22,290 --> 00:03:26,720
for just a simple features virtual

00:03:24,600 --> 00:03:29,130
server or we can deliver a cloud stack

00:03:26,720 --> 00:03:30,780
infrastructure for you so you just get

00:03:29,130 --> 00:03:35,430
the log into cloud stack and can manage

00:03:30,780 --> 00:03:38,760
your furniture machines so we can

00:03:35,430 --> 00:03:39,780
connect these two platforms either with

00:03:38,760 --> 00:03:40,980
a single connection we've done on

00:03:39,780 --> 00:03:44,720
connection that's all up to the customer

00:03:40,980 --> 00:03:44,720
depending if he needs redundancy or not

00:03:44,870 --> 00:03:48,930
so once everything is connected we have

00:03:47,220 --> 00:03:51,660
a customer rep connected to switching

00:03:48,930 --> 00:03:54,540
over clouds net platform and then we

00:03:51,660 --> 00:03:58,560
didn't touch that we look at an extra

00:03:54,540 --> 00:04:00,989
network for it so this is connected by

00:03:58,560 --> 00:04:03,600
default we offering a redundancy on our

00:04:00,989 --> 00:04:05,700
claps backside with a single switch on a

00:04:03,600 --> 00:04:07,230
customer side and that's either

00:04:05,700 --> 00:04:08,670
connected on a single link or redundant

00:04:07,230 --> 00:04:12,470
link depending on the customers needs

00:04:08,670 --> 00:04:14,340
and it's of course optionally to get

00:04:12,470 --> 00:04:16,350
redone on switching as well on the

00:04:14,340 --> 00:04:18,810
customer side if if the customer has the

00:04:16,350 --> 00:04:21,060
need for this and this is connected over

00:04:18,810 --> 00:04:23,550
now I should be sort of in case one of

00:04:21,060 --> 00:04:26,150
the network devices fail that the other

00:04:23,550 --> 00:04:26,150
one will take off

00:04:27,160 --> 00:04:32,620
the methods of internet interconnection

00:04:29,350 --> 00:04:34,240
in CloudStack are two ways we offer this

00:04:32,620 --> 00:04:39,940
for customers either with a shared

00:04:34,240 --> 00:04:42,330
network or with a PPC network so the

00:04:39,940 --> 00:04:45,730
advantage of the shared network is that

00:04:42,330 --> 00:04:49,780
the customer can you know create a

00:04:45,730 --> 00:04:50,950
gateway on his dedicated site that can

00:04:49,780 --> 00:04:54,720
wreck site you can create a virtual

00:04:50,950 --> 00:04:58,210
router there are on a delicate machine

00:04:54,720 --> 00:04:59,440
throughout internet towards Ethernet

00:04:58,210 --> 00:05:02,110
from the themes over the internal and to

00:04:59,440 --> 00:05:03,580
the internet cool also do yellow side

00:05:02,110 --> 00:05:05,380
create a gateway on this virtual machine

00:05:03,580 --> 00:05:08,110
and use that as a gateway for his

00:05:05,380 --> 00:05:11,110
dedicated service and we have isolation

00:05:08,110 --> 00:05:12,490
through feelin's and when the shared

00:05:11,110 --> 00:05:15,010
network is applied on a domain level

00:05:12,490 --> 00:05:19,150
then customer can have multiple accounts

00:05:15,010 --> 00:05:20,800
using the internal network however it's

00:05:19,150 --> 00:05:23,560
the customer's responsibility to set up

00:05:20,800 --> 00:05:26,110
the HP networking since the DHCP will in

00:05:23,560 --> 00:05:29,229
cloud stack automatically has a list of

00:05:26,110 --> 00:05:31,180
all the VMS and will assign an IP based

00:05:29,229 --> 00:05:32,979
on the available pool within cloud stack

00:05:31,180 --> 00:05:35,830
however the dedicated servers are not

00:05:32,979 --> 00:05:38,169
within this so the dedicated servers

00:05:35,830 --> 00:05:41,830
will never get an ID from the DSP server

00:05:38,169 --> 00:05:43,120
of cloud stack and running to HP servers

00:05:41,830 --> 00:05:44,350
at the same time shall one for the

00:05:43,120 --> 00:05:46,419
customers dedicated servers in the cloud

00:05:44,350 --> 00:05:48,190
well that's not really recommended so we

00:05:46,419 --> 00:05:49,330
just offer a shared network without any

00:05:48,190 --> 00:05:50,650
surfaces and then it's up to the

00:05:49,330 --> 00:05:54,570
customer to either configure static

00:05:50,650 --> 00:05:57,039
addresses or use its own DHCP server

00:05:54,570 --> 00:05:58,510
yeah of course these speeds between the

00:05:57,039 --> 00:06:00,610
two platforms is depending on the

00:05:58,510 --> 00:06:03,360
customers connection customer can

00:06:00,610 --> 00:06:07,960
connect on holidays gigabit 10 gigabit

00:06:03,360 --> 00:06:12,639
the depends on customers need for the

00:06:07,960 --> 00:06:14,350
CPC service and private rack can use the

00:06:12,639 --> 00:06:20,350
Phoebe for two router to connect to the

00:06:14,350 --> 00:06:23,200
internet and another Pro is that the

00:06:20,350 --> 00:06:24,729
customer can in case yes booth pool I've

00:06:23,200 --> 00:06:25,150
danced with these web for example one in

00:06:24,729 --> 00:06:27,010
Amsterdam

00:06:25,150 --> 00:06:28,450
one in Germany you can create a

00:06:27,010 --> 00:06:30,729
site-to-site VPN connection between the

00:06:28,450 --> 00:06:33,639
two platforms and over this VPN you can

00:06:30,729 --> 00:06:35,909
also access his private service that he

00:06:33,639 --> 00:06:38,349
asked within the Amsterdam location

00:06:35,909 --> 00:06:40,390
however in case of Phoebe seed and a few

00:06:38,349 --> 00:06:41,320
PC router will become a bottleneck

00:06:40,390 --> 00:06:44,520
so depending on you need to make sure

00:06:41,320 --> 00:06:50,890
you if the router and of resources and

00:06:44,520 --> 00:06:52,990
proper network immunity multiple

00:06:50,890 --> 00:06:55,240
physical network so within a cloud stack

00:06:52,990 --> 00:06:59,230
we experienced that it's only possible

00:06:55,240 --> 00:07:00,880
or you have physical network and when

00:06:59,230 --> 00:07:03,240
adding an additional physical network

00:07:00,880 --> 00:07:05,560
you have to provide this with attack

00:07:03,240 --> 00:07:08,010
however when using the stack then the

00:07:05,560 --> 00:07:11,530
first network is not selectable anymore

00:07:08,010 --> 00:07:14,620
so we made a programmer made a change

00:07:11,530 --> 00:07:16,150
that by default the primary physical

00:07:14,620 --> 00:07:17,770
network is always available even if it

00:07:16,150 --> 00:07:22,390
does not have attack and then we can

00:07:17,770 --> 00:07:25,210
have multiple networks with attack we

00:07:22,390 --> 00:07:26,920
created this because we physically split

00:07:25,210 --> 00:07:28,450
the public traffic and it hops like

00:07:26,920 --> 00:07:30,040
internal traffic over a different

00:07:28,450 --> 00:07:35,680
network layer than the traffic towards

00:07:30,040 --> 00:07:38,310
customers to get Network graduation yeah

00:07:35,680 --> 00:07:43,150
and to make sure that everything works

00:07:38,310 --> 00:07:44,620
for us to sneak okay now I can hand out

00:07:43,150 --> 00:07:46,210
over to my colleague way who's gonna

00:07:44,620 --> 00:07:54,460
talk to you about multiple mix report

00:07:46,210 --> 00:07:59,140
that he had it in his class act good

00:07:54,460 --> 00:08:02,550
morning I will talk about some other of

00:07:59,140 --> 00:08:08,500
our improvements on the networks volumes

00:08:02,550 --> 00:08:14,910
em console and the containers and I was

00:08:08,500 --> 00:08:20,100
first much Nick support in PVM this one

00:08:14,910 --> 00:08:24,060
was 2000 two years ago we migrates

00:08:20,100 --> 00:08:28,750
thousands containers from openers

00:08:24,060 --> 00:08:31,240
acrostic we had a problem that many

00:08:28,750 --> 00:08:35,910
containers IP

00:08:31,240 --> 00:08:40,540
I have much at ease and Martin mix and

00:08:35,910 --> 00:08:44,680
micro is the converse our code where we

00:08:40,540 --> 00:08:48,640
use costumes cuckoo and it's not

00:08:44,680 --> 00:08:53,490
possible to create new weak-ass in the

00:08:48,640 --> 00:09:01,920
advanced wound schedule because now

00:08:53,490 --> 00:09:06,690
networks which I goof is and so we try

00:09:01,920 --> 00:09:09,810
to solve the last way we try to first we

00:09:06,690 --> 00:09:13,470
try to create a washing machine with

00:09:09,810 --> 00:09:18,060
only one week and then had some ethnics

00:09:13,470 --> 00:09:20,760
yes and the operation success over I

00:09:18,060 --> 00:09:23,070
mean the first Nick works so the coding

00:09:20,760 --> 00:09:25,670
the for holding the IP on the first Nick

00:09:23,070 --> 00:09:25,670
a vegetable

00:09:27,890 --> 00:09:38,790
so we're thinking support much Nick's

00:09:33,899 --> 00:09:43,100
that like this our go first the origin

00:09:38,790 --> 00:09:51,450
should succeed you able to create VPS

00:09:43,100 --> 00:09:55,770
with my phonics UI API and in the

00:09:51,450 --> 00:10:00,740
nucleus - it was the IPS and mix should

00:09:55,770 --> 00:10:00,740
be working fine this is our core and

00:10:01,370 --> 00:10:11,250
besides because the customers full

00:10:07,529 --> 00:10:14,730
control on his VPS so I can add can

00:10:11,250 --> 00:10:22,230
change change IPS change MAC address at

00:10:14,730 --> 00:10:27,209
the eyepiece so oh this cannot control

00:10:22,230 --> 00:10:29,610
these actions so but all these IPS and

00:10:27,209 --> 00:10:33,360
Nick's customer IDs should not be

00:10:29,610 --> 00:10:36,540
working so we need to block the IP

00:10:33,360 --> 00:10:45,300
address and the MAC address from classic

00:10:36,540 --> 00:10:48,060
set you solve this term we removed so

00:10:45,300 --> 00:10:55,709
the operations are supported on both you

00:10:48,060 --> 00:10:59,610
and API and also we apply the network

00:10:55,709 --> 00:11:02,490
network rules su squid group and the

00:10:59,610 --> 00:11:07,270
natural rules will be applied for all

00:11:02,490 --> 00:11:10,120
the nicks and their IPs and when we

00:11:07,270 --> 00:11:13,660
remove Nick and IP from the virtual

00:11:10,120 --> 00:11:20,709
machine The Naked Network rules should

00:11:13,660 --> 00:11:25,390
also be removed from call stack we have

00:11:20,709 --> 00:11:29,040
made some changes in KVM from KVM in the

00:11:25,390 --> 00:11:33,570
KVM hypervisor was the secret moves

00:11:29,040 --> 00:11:33,570
applied by a python script

00:11:34,529 --> 00:11:46,180
why so he made some changes right and

00:11:39,779 --> 00:11:49,990
then the network rules of war the nicks

00:11:46,180 --> 00:11:53,560
and I piece will be programmed including

00:11:49,990 --> 00:11:58,330
the IP table rules for Nick's bridge for

00:11:53,560 --> 00:12:02,740
the IPS for the mix and the most

00:11:58,330 --> 00:12:06,580
important see we have our effect which

00:12:02,740 --> 00:12:13,870
is which created by passing script for

00:12:06,580 --> 00:12:16,240
now in the main stream the all in one or

00:12:13,870 --> 00:12:19,720
in a tables available rules of one week

00:12:16,240 --> 00:12:22,890
is supported so after we affect the

00:12:19,720 --> 00:12:30,610
eatable rules now is we are about to

00:12:22,890 --> 00:12:34,390
support much ponics and eyepiece now we

00:12:30,610 --> 00:12:38,950
are in the future we report our or our

00:12:34,390 --> 00:12:43,649
changes to class ministry remember this

00:12:38,950 --> 00:12:50,050
feature is requested by some cloud users

00:12:43,649 --> 00:12:53,920
in the community we have made some

00:12:50,050 --> 00:12:58,270
changes for KVM and happy be happy

00:12:53,920 --> 00:13:03,149
before so it would be nice if someone in

00:12:58,270 --> 00:13:10,390
the community can join us to support

00:13:03,149 --> 00:13:13,450
more hypervisors and also ipv6 the

00:13:10,390 --> 00:13:21,450
second part improvement on volume

00:13:13,450 --> 00:13:24,550
management from most of us might

00:13:21,450 --> 00:13:27,430
know that when we for the virtual

00:13:24,550 --> 00:13:34,140
machines in CloudStack we are able to

00:13:27,430 --> 00:13:34,140
destroy a good machine and if we want to

00:13:34,200 --> 00:13:42,220
recover it is also option

00:13:37,470 --> 00:13:46,290
lui but for volume a is not possible if

00:13:42,220 --> 00:13:50,920
we need volume on closed UI the image

00:13:46,290 --> 00:13:56,910
will be moved from perm storage so it's

00:13:50,920 --> 00:13:56,910
not possible to cover the image film

00:13:58,620 --> 00:14:08,470
right in context the volume there are

00:14:01,660 --> 00:14:11,470
these estate however the volume in these

00:14:08,470 --> 00:14:16,120
two estates cannot be covered so what we

00:14:11,470 --> 00:14:18,520
change we have made some color change at

00:14:16,120 --> 00:14:21,370
some code in caustic to recover the

00:14:18,520 --> 00:14:25,240
volume in Destroy state and also we

00:14:21,370 --> 00:14:30,850
added a to API so seminars the virtual

00:14:25,240 --> 00:14:34,930
machines we can destroy a volume and if

00:14:30,850 --> 00:14:37,930
the volume is not recovered in some

00:14:34,930 --> 00:14:46,510
periods the ETOP removed some classic

00:14:37,930 --> 00:14:48,480
and if if we cover the volume API and UI

00:14:46,510 --> 00:14:52,090
is also possible in the volume will be

00:14:48,480 --> 00:14:58,240
changed back to ready States and then we

00:14:52,090 --> 00:15:04,510
can use it so when use case for this

00:14:58,240 --> 00:15:07,660
change for example if the operating

00:15:04,510 --> 00:15:11,170
system of which key is broken then we

00:15:07,660 --> 00:15:13,390
try to fix it normally we can restore

00:15:11,170 --> 00:15:16,090
recover restore the washing machine then

00:15:13,390 --> 00:15:20,890
a new open system will be installed in

00:15:16,090 --> 00:15:23,680
the washing machine in a closet

00:15:20,890 --> 00:15:27,070
mainstream when we restore the virtual

00:15:23,680 --> 00:15:31,830
machine the image work gone so we cannot

00:15:27,070 --> 00:15:33,880
get a mean plate back our change when we

00:15:31,830 --> 00:15:37,600
restore the

00:15:33,880 --> 00:15:41,620
she it will allocate a new route disk

00:15:37,600 --> 00:15:47,190
and the old disk will be in destroy

00:15:41,620 --> 00:15:51,010
state and we are able to recover the

00:15:47,190 --> 00:15:53,980
state as a routes disk in destroyed

00:15:51,010 --> 00:15:55,630
state and then attach to the new virtual

00:15:53,980 --> 00:16:00,180
machine so we can't will I be able to

00:15:55,630 --> 00:16:00,180
catch the date on the new route disk

00:16:01,770 --> 00:16:11,140
third path the computers and Casta first

00:16:06,130 --> 00:16:14,950
I would add not to sense hipuu for their

00:16:11,140 --> 00:16:17,730
work on plastic on service and based on

00:16:14,950 --> 00:16:23,380
their release we have made some changes

00:16:17,730 --> 00:16:25,960
for example our cost our classic camino

00:16:23,380 --> 00:16:31,090
service support much Baku glass versions

00:16:25,960 --> 00:16:35,230
from the old 1.72 and the next one point

00:16:31,090 --> 00:16:39,250
15 and some parameters of the continuous

00:16:35,230 --> 00:16:43,450
cluster can be customized composer VM

00:16:39,250 --> 00:16:47,440
template disk and also we provide some

00:16:43,450 --> 00:16:51,910
more actions and cost continued cluster

00:16:47,440 --> 00:16:54,850
for example skill in scale out and so

00:16:51,910 --> 00:16:57,460
that's the virtual machines in a

00:16:54,850 --> 00:16:58,390
container cluster can be created or

00:16:57,460 --> 00:17:02,740
destroyed

00:16:58,390 --> 00:17:05,319
unmount and also have integrated clause

00:17:02,740 --> 00:17:10,800
no parents or to the content faster so

00:17:05,319 --> 00:17:14,910
if we create coop last service which

00:17:10,800 --> 00:17:18,160
type is an old pan insert and

00:17:14,910 --> 00:17:22,569
corresponding Lola pencil rules will be

00:17:18,160 --> 00:17:26,069
added to be happy to close the automatic

00:17:22,569 --> 00:17:29,530
Eenie so we do not need to manually add

00:17:26,069 --> 00:17:34,120
or remove another pencil rules and when

00:17:29,530 --> 00:17:37,270
we skew in when we add a new VM to the

00:17:34,120 --> 00:17:41,380
consonant clusters the balancer will

00:17:37,270 --> 00:17:47,350
also be added to cross annual cancer of

00:17:41,380 --> 00:17:50,559
machine we also supports

00:17:47,350 --> 00:17:55,740
hile ability comes in cluster I give

00:17:50,559 --> 00:18:00,190
more details high high availability

00:17:55,740 --> 00:18:03,340
normally means more uptime and less

00:18:00,190 --> 00:18:05,799
downtime so normally there is no single

00:18:03,340 --> 00:18:09,640
point of vineyards and water components

00:18:05,799 --> 00:18:12,850
dependent in the divorce setup of the

00:18:09,640 --> 00:18:16,780
consonant cluster there is it contains

00:18:12,850 --> 00:18:22,020
one couplets master and several couplets

00:18:16,780 --> 00:18:24,270
loss there is the APS server Ronnie and

00:18:22,020 --> 00:18:29,080
EGCG

00:18:24,270 --> 00:18:32,520
process which is saved the state of of

00:18:29,080 --> 00:18:38,260
the coolest cluster and also the

00:18:32,520 --> 00:18:42,929
services so with which to achieve high

00:18:38,260 --> 00:18:47,620
availability we need to create content

00:18:42,929 --> 00:18:55,030
compliance for example API server and

00:18:47,620 --> 00:18:57,549
ECT this is our setup of our high

00:18:55,030 --> 00:19:05,140
availability constant Astor it contains

00:18:57,549 --> 00:19:07,419
three masters must map city watering

00:19:05,140 --> 00:19:13,750
coolest master where PA each city

00:19:07,419 --> 00:19:18,360
cluster so once one public master is

00:19:13,750 --> 00:19:22,659
done the couplet cluster is tyranny and

00:19:18,360 --> 00:19:32,200
fourth API server it's implemented in

00:19:22,659 --> 00:19:38,159
the notes or the coolest loads it will

00:19:32,200 --> 00:19:41,320
be lessened on 8080 on local port and

00:19:38,159 --> 00:19:49,960
point to the string API server on odd

00:19:41,320 --> 00:19:52,720
masters no valency VM console we need

00:19:49,960 --> 00:19:58,440
this one because some drawback of

00:19:52,720 --> 00:20:01,710
currents of VM console and we want to

00:19:58,440 --> 00:20:05,890
improve it to

00:20:01,710 --> 00:20:09,490
currents except concurrent access for

00:20:05,890 --> 00:20:13,410
the virtual machines and smooth user

00:20:09,490 --> 00:20:17,050
interaction interaction and to discuss

00:20:13,410 --> 00:20:18,250
continuous Pony from our browser I will

00:20:17,050 --> 00:20:23,770
give more details

00:20:18,250 --> 00:20:30,970
my last pork starting at 11:30 a lot of

00:20:23,770 --> 00:20:49,180
room now my 10 Mike are even aware about

00:20:30,970 --> 00:20:51,040
this my name is Tyler Wilson I work for

00:20:49,180 --> 00:20:54,250
lease heads as well I've been working

00:20:51,040 --> 00:20:56,050
there for about four years now and I'm

00:20:54,250 --> 00:20:58,870
gonna talk about first I'm gonna talk

00:20:56,050 --> 00:21:00,310
about what bounced that the changes we

00:20:58,870 --> 00:21:06,810
made to the load balancer configuration

00:21:00,310 --> 00:21:10,840
for requesting so basically we

00:21:06,810 --> 00:21:15,270
discovered early on into the closet tech

00:21:10,840 --> 00:21:18,960
hosting game that we needed to alter our

00:21:15,270 --> 00:21:21,100
pretty much our setup are providing of

00:21:18,960 --> 00:21:24,880
load balancing except vs. there were

00:21:21,100 --> 00:21:26,920
private for our customers we had

00:21:24,880 --> 00:21:30,790
customers that were requiring different

00:21:26,920 --> 00:21:33,640
different features like say HTTP

00:21:30,790 --> 00:21:35,500
versions or if they say one customer has

00:21:33,640 --> 00:21:36,850
a few amount of hits to their load

00:21:35,500 --> 00:21:38,530
balancer and some fun some customers

00:21:36,850 --> 00:21:40,840
have wanted quite a bit more capacity

00:21:38,530 --> 00:21:43,830
for their blood bouncers and we needed

00:21:40,840 --> 00:21:46,990
something to configure hot stack to

00:21:43,830 --> 00:21:50,830
support all these different customers so

00:21:46,990 --> 00:21:52,450
we changed the load balancing system to

00:21:50,830 --> 00:21:58,930
support these different configurations

00:21:52,450 --> 00:22:00,220
of H a proxy basically so some in the

00:21:58,930 --> 00:22:03,880
woods some of the ways we did this is

00:22:00,220 --> 00:22:07,390
creating a configuration file variable

00:22:03,880 --> 00:22:09,610
system and these rules are applied to

00:22:07,390 --> 00:22:12,850
the HT proxy system on the on the VR

00:22:09,610 --> 00:22:14,890
through these configuration variables on

00:22:12,850 --> 00:22:17,590
the resource tags for the network

00:22:14,890 --> 00:22:18,790
and look Meltzer so we have the vari

00:22:17,590 --> 00:22:21,970
have the obvious ones like max

00:22:18,790 --> 00:22:24,100
connections we have time-out variables

00:22:21,970 --> 00:22:25,900
different if you want set the password

00:22:24,100 --> 00:22:29,230
for the stats page on h8 proxy you can

00:22:25,900 --> 00:22:30,850
do that there too and if you want to

00:22:29,230 --> 00:22:31,900
just keep it in line instead of

00:22:30,850 --> 00:22:33,880
restarting it you can reload the

00:22:31,900 --> 00:22:35,590
configuration you know just some basic

00:22:33,880 --> 00:22:36,670
stuff like that and it helped up it

00:22:35,590 --> 00:22:38,460
helps a lot our customers quite a bit

00:22:36,670 --> 00:22:41,500
because they were able to adjust their

00:22:38,460 --> 00:22:42,730
volunteering HJ proxy with that going

00:22:41,500 --> 00:22:44,290
you know without going to the VR and

00:22:42,730 --> 00:22:47,380
have a good edit the air box information

00:22:44,290 --> 00:22:48,910
they just type in some key value pairs

00:22:47,380 --> 00:22:53,980
into the network's debt and they work

00:22:48,910 --> 00:22:55,360
and pretty much good to go and more of

00:22:53,980 --> 00:23:00,430
the configuration files can be found in

00:22:55,360 --> 00:23:03,580
our knowledgebase it's a public another

00:23:00,430 --> 00:23:05,380
really common requester got is customers

00:23:03,580 --> 00:23:06,640
ever wanted to see the IP of the

00:23:05,380 --> 00:23:10,960
customers that hit their load balancer

00:23:06,640 --> 00:23:12,160
and by default you just gonna see the HT

00:23:10,960 --> 00:23:13,720
a proxy priv

00:23:12,160 --> 00:23:16,000
whenever you know if a customer from

00:23:13,720 --> 00:23:18,760
anywhere from Bulgaria to Russia to us

00:23:16,000 --> 00:23:20,950
your since seems a might be so we

00:23:18,760 --> 00:23:25,210
included support for transfer networks

00:23:20,950 --> 00:23:26,740
and that allows our clients to see the

00:23:25,210 --> 00:23:30,730
actually IP claimed into their web

00:23:26,740 --> 00:23:32,740
server from the load balancer that

00:23:30,730 --> 00:23:34,480
allows them to track you know sets for

00:23:32,740 --> 00:23:37,570
Google Analytics or any kind of income

00:23:34,480 --> 00:23:39,610
analytic services which at a pub learner

00:23:37,570 --> 00:23:43,270
cluster is quite a bit and the way we

00:23:39,610 --> 00:23:45,280
did this is changing IP tables rules IP

00:23:43,270 --> 00:23:49,630
route rules and also obviously they

00:23:45,280 --> 00:23:52,860
shake HT a proxy configuration we also

00:23:49,630 --> 00:23:57,970
implement a support for SSL offloading

00:23:52,860 --> 00:23:59,920
and we can we can actually decrypt and

00:23:57,970 --> 00:24:03,160
encrypt the HTTPS traffic through

00:23:59,920 --> 00:24:04,960
uploading the SSL key and again that's

00:24:03,160 --> 00:24:16,900
also changing a configuration variable

00:24:04,960 --> 00:24:19,000
in the network key value pair I will go

00:24:16,900 --> 00:24:21,100
over that in the end but no not yet for

00:24:19,000 --> 00:24:24,550
a lot of these hopefully hopefully soon

00:24:21,100 --> 00:24:25,900
I can't say a date but it's a lot of you

00:24:24,550 --> 00:24:27,040
a lot of exciting features you really

00:24:25,900 --> 00:24:32,930
want to do

00:24:27,040 --> 00:24:35,330
yeah it is it's in the plan yet and one

00:24:32,930 --> 00:24:38,000
more thing actually recently we actually

00:24:35,330 --> 00:24:39,410
also any voltage GTP to for our load

00:24:38,000 --> 00:24:41,690
balancing and that's also said through

00:24:39,410 --> 00:24:43,610
curation variable and that will change

00:24:41,690 --> 00:24:45,020
everything on the on the VR for you and

00:24:43,610 --> 00:24:50,030
just need to reload the network and good

00:24:45,020 --> 00:24:52,250
to go and a lot of you may be familiar

00:24:50,030 --> 00:24:53,480
with trying to debug or trying to

00:24:52,250 --> 00:24:56,690
troubleshoot problems with virtual

00:24:53,480 --> 00:24:58,760
routers it's really pretty hard to

00:24:56,690 --> 00:25:01,820
pretty annoying actually to having to

00:24:58,760 --> 00:25:03,410
ssh into each VR and trying to figure

00:25:01,820 --> 00:25:05,179
out okay why did this network go down at

00:25:03,410 --> 00:25:08,210
6:00 a.m. last night or at 6 a.m. this

00:25:05,179 --> 00:25:11,210
morning and so we finally got fed up

00:25:08,210 --> 00:25:17,059
with it and we centralized our logging

00:25:11,210 --> 00:25:18,830
for our system games and the way the way

00:25:17,059 --> 00:25:21,520
we have it right now is all of our logs

00:25:18,830 --> 00:25:26,720
are going to just one man offense here

00:25:21,520 --> 00:25:28,940
and it's actually storing our logs for

00:25:26,720 --> 00:25:30,710
us too so in case AVR does go down it

00:25:28,940 --> 00:25:32,420
actually gets destroyed through either

00:25:30,710 --> 00:25:36,170
customer interaction or just you know

00:25:32,420 --> 00:25:38,090
some sort of destruction action we

00:25:36,170 --> 00:25:40,640
actually can see those logs on earth as

00:25:38,090 --> 00:25:44,390
your server so it helps us really help

00:25:40,640 --> 00:25:47,090
stuff for troubleshooting and obviously

00:25:44,390 --> 00:25:48,200
you can send these logs to a last you

00:25:47,090 --> 00:25:50,540
search your Cabana or whatever you

00:25:48,200 --> 00:25:53,240
whatever log you know you or you want to

00:25:50,540 --> 00:25:56,960
see and the way we do this

00:25:53,240 --> 00:25:58,700
just a quick flow is we have our song it

00:25:56,960 --> 00:26:01,210
captured we have an RSS log on the on

00:25:58,700 --> 00:26:04,280
the system VM already but it captures

00:26:01,210 --> 00:26:06,170
the cloud log for from hots deck itself

00:26:04,280 --> 00:26:10,130
and also the system logs so if you have

00:26:06,170 --> 00:26:11,690
any sort of any source of network issues

00:26:10,130 --> 00:26:13,910
from Linux itself that's going to

00:26:11,690 --> 00:26:15,650
capture that and well then this is some

00:26:13,910 --> 00:26:19,400
vm for words that are syslog information

00:26:15,650 --> 00:26:22,460
to the 169.254 dot one usually it's

00:26:19,400 --> 00:26:24,410
always one but it forwards that log to

00:26:22,460 --> 00:26:26,390
one and that's a special interface

00:26:24,410 --> 00:26:28,790
created on the hypervisor itself there's

00:26:26,390 --> 00:26:30,620
a high browser VR connection there

00:26:28,790 --> 00:26:32,720
high pressure is just configured to

00:26:30,620 --> 00:26:35,090
receive that our syslog information and

00:26:32,720 --> 00:26:38,240
then forward it to the management server

00:26:35,090 --> 00:26:39,590
or whatever server you have but it just

00:26:38,240 --> 00:26:40,250
it doesn't store anything locally just

00:26:39,590 --> 00:26:41,720
forwards on

00:26:40,250 --> 00:26:45,050
four words that long to the management

00:26:41,720 --> 00:26:46,760
server right here and management server

00:26:45,050 --> 00:26:50,650
collects and stores that this is a box

00:26:46,760 --> 00:26:50,650
so we have one central location for it

00:26:51,130 --> 00:26:57,200
so this is uh this is the configuration

00:26:53,990 --> 00:26:59,540
file for the system VMs it just it is

00:26:57,200 --> 00:27:01,910
pretty much of a basic arsons log you

00:26:59,540 --> 00:27:04,280
know forwarder and that's for the this

00:27:01,910 --> 00:27:07,310
is one is particulars for the cloud log

00:27:04,280 --> 00:27:08,900
there for the caustic block and also we

00:27:07,310 --> 00:27:10,450
have a forwarder setting up again for

00:27:08,900 --> 00:27:12,740
that one six nine two before address

00:27:10,450 --> 00:27:18,680
especially dynamically created on the hi

00:27:12,740 --> 00:27:21,890
browser for Acadian and on the medicine

00:27:18,680 --> 00:27:24,590
server again we collect these logs and

00:27:21,890 --> 00:27:27,440
store them in folders depending on what

00:27:24,590 --> 00:27:29,510
the hostname is or the V R so we can

00:27:27,440 --> 00:27:31,370
easily look at them later and we also

00:27:29,510 --> 00:27:33,770
have a combined log just in case we need

00:27:31,370 --> 00:27:35,030
to see if they see if there's any

00:27:33,770 --> 00:27:37,040
patterns than a lot of the arts

00:27:35,030 --> 00:27:38,330
happening like that we can easily go

00:27:37,040 --> 00:27:41,270
through the combine log of every single

00:27:38,330 --> 00:27:49,160
V R on the platform and so you see if we

00:27:41,270 --> 00:27:52,520
see any issues okay another thing that I

00:27:49,160 --> 00:27:56,840
personally have implemented and worked

00:27:52,520 --> 00:27:58,700
on is our dynamic resource scheduling so

00:27:56,840 --> 00:28:01,190
if you ever had issues with your head

00:27:58,700 --> 00:28:02,990
here load balance your cluster or pretty

00:28:01,190 --> 00:28:04,490
much allocate load throughout your

00:28:02,990 --> 00:28:06,470
cluster not really load balancing but

00:28:04,490 --> 00:28:09,680
sort of same thing not really easy proxy

00:28:06,470 --> 00:28:11,690
but basically if you have you have

00:28:09,680 --> 00:28:13,370
customers that are inter inter actually

00:28:11,690 --> 00:28:18,110
through hypervisors they all have

00:28:13,370 --> 00:28:20,690
different loads and depending on these

00:28:18,110 --> 00:28:23,000
loads your hypervisor load averages

00:28:20,690 --> 00:28:25,610
maybe you know ninety percent to to two

00:28:23,000 --> 00:28:29,360
percent and what we've developed is a

00:28:25,610 --> 00:28:30,530
way to ethically analytically look at

00:28:29,360 --> 00:28:32,420
those loads and it should be

00:28:30,530 --> 00:28:34,580
redistribute those beams accordingly to

00:28:32,420 --> 00:28:36,800
you know two thousand balance that

00:28:34,580 --> 00:28:38,960
process

00:28:36,800 --> 00:28:40,880
ending in because just because different

00:28:38,960 --> 00:28:42,830
customers have different needs and cloud

00:28:40,880 --> 00:28:44,780
stack usually usually allocates those

00:28:42,830 --> 00:28:45,950
VMs depending on what kind of resources

00:28:44,780 --> 00:28:49,310
they could use other than they're

00:28:45,950 --> 00:28:52,040
actually using it's all secular doesn't

00:28:49,310 --> 00:28:54,049
doesn't really should be this as needed

00:28:52,040 --> 00:28:56,450
so we have tech we kinda have to

00:28:54,049 --> 00:29:01,690
go in the middle and fix those whenever

00:28:56,450 --> 00:29:04,700
wherever needed and it also allows us to

00:29:01,690 --> 00:29:07,460
give a standard of resources to our

00:29:04,700 --> 00:29:09,140
customers so when when a customer comes

00:29:07,460 --> 00:29:11,659
to us they expect a certain level

00:29:09,140 --> 00:29:13,730
hypervisor availability and we this

00:29:11,659 --> 00:29:16,690
helps us achieve that so to make sure

00:29:13,730 --> 00:29:18,710
all of our load is within the margins

00:29:16,690 --> 00:29:20,240
and again the balanced posture is

00:29:18,710 --> 00:29:21,860
obviously easier to manage because you

00:29:20,240 --> 00:29:23,390
don't have you know stuff kernel panneti

00:29:21,860 --> 00:29:29,690
come upon again through a cpu

00:29:23,390 --> 00:29:31,669
limitations or or IO load there so it

00:29:29,690 --> 00:29:33,950
works through a Python script on the

00:29:31,669 --> 00:29:38,059
management server and that runs set

00:29:33,950 --> 00:29:40,279
intervals it actually tracks the load

00:29:38,059 --> 00:29:43,580
averages of all the VMS and all the

00:29:40,279 --> 00:29:48,039
hypervisors and has different algorithms

00:29:43,580 --> 00:29:51,140
depending on which one you select to

00:29:48,039 --> 00:29:53,690
migrate to the highest pretty much the

00:29:51,140 --> 00:29:54,320
highest loaded VM - or lowest right at

00:29:53,690 --> 00:29:56,570
what are alligators

00:29:54,320 --> 00:29:58,610
other moods check to lowest-scoring

00:29:56,570 --> 00:30:00,919
hydro-zone cluster and the scoring is

00:29:58,610 --> 00:30:03,529
depending on how you configure the

00:30:00,919 --> 00:30:05,450
variables within the DRS so you can set

00:30:03,529 --> 00:30:07,429
memory if you want if you want if you

00:30:05,450 --> 00:30:08,840
value memory over CPU you can set to

00:30:07,429 --> 00:30:10,970
memory to be a higher weight than the

00:30:08,840 --> 00:30:16,250
CPU or if you buy vice-versa how your

00:30:10,970 --> 00:30:18,580
cluster set up and we actually depending

00:30:16,250 --> 00:30:21,320
on where it was initially created as a

00:30:18,580 --> 00:30:23,890
hackathon project but we have developed

00:30:21,320 --> 00:30:27,860
into we have added finiti group support

00:30:23,890 --> 00:30:30,470
we have a migration blacklist so a VM

00:30:27,860 --> 00:30:32,000
has the option to not be migrated for X

00:30:30,470 --> 00:30:39,610
amount of time if it been migrated again

00:30:32,000 --> 00:30:39,610
yeah yes

00:30:44,960 --> 00:30:49,760
currently we ask cloud spec what's load

00:30:47,600 --> 00:30:54,220
hub the head riser has for a CPU memory

00:30:49,760 --> 00:30:54,220
and also as well for a V of your VM

00:30:55,750 --> 00:31:02,559
Acadie yep

00:31:21,380 --> 00:31:26,250
yes there is

00:31:23,520 --> 00:31:28,710
okay so there is thresholds so you can

00:31:26,250 --> 00:31:30,480
set where it will not balance a cluster

00:31:28,710 --> 00:31:33,570
if you set so there's a standard

00:31:30,480 --> 00:31:36,360
deviation threshold it will not balance

00:31:33,570 --> 00:31:39,510
it if it's below that's our status so it

00:31:36,360 --> 00:31:43,560
sits within that so those margins and

00:31:39,510 --> 00:31:45,540
that's also changeable but yeah it will

00:31:43,560 --> 00:31:49,020
migrate whenever it can

00:31:45,540 --> 00:31:50,940
and it but but in how it chooses which

00:31:49,020 --> 00:31:54,360
hypervisor in which VM is in it which

00:31:50,940 --> 00:31:55,920
which has defined by which algorithm you

00:31:54,360 --> 00:32:05,010
choose and also how you weights the

00:31:55,920 --> 00:32:08,720
different memory and CPU yes I need to

00:32:05,010 --> 00:32:11,970
refactor hopefully we will get a Kovac

00:32:08,720 --> 00:32:15,570
again things like affinity groups which

00:32:11,970 --> 00:32:17,070
is a pain to get working migration

00:32:15,570 --> 00:32:19,470
blacklist again so you can actually

00:32:17,070 --> 00:32:21,360
defined so you don't want to migrate the

00:32:19,470 --> 00:32:23,640
same VM more than X amount of hours or

00:32:21,360 --> 00:32:27,360
days or whatever you can define that

00:32:23,640 --> 00:32:30,840
there and also sports are tagging so we

00:32:27,360 --> 00:32:33,420
have we have our templates tagged to

00:32:30,840 --> 00:32:34,800
certain hypervisors so Windows you know

00:32:33,420 --> 00:32:36,390
V ends only good when is hypervisors

00:32:34,800 --> 00:32:39,150
like the most high pressors and this

00:32:36,390 --> 00:32:40,740
actually understands that and matches

00:32:39,150 --> 00:32:43,350
those together and it actually also

00:32:40,740 --> 00:32:44,730
rebalances so it finds ones that aren't

00:32:43,350 --> 00:32:48,020
in the same well art and same right

00:32:44,730 --> 00:32:48,020
place that'll move in the right place

00:32:48,440 --> 00:32:55,190
that's a deer s course so some other

00:32:52,920 --> 00:33:00,210
enhancements we did over the years

00:32:55,190 --> 00:33:01,590
so again wave touched on this but volume

00:33:00,210 --> 00:33:03,180
management we can actually recover

00:33:01,590 --> 00:33:06,210
things in destroyed state which is

00:33:03,180 --> 00:33:07,350
really great for obviously when you have

00:33:06,210 --> 00:33:09,960
users that delete things that I want

00:33:07,350 --> 00:33:13,680
them to delete we do have auto scaling

00:33:09,960 --> 00:33:18,120
for a VM which is pretty nice pretty

00:33:13,680 --> 00:33:19,950
amazing and we have the resource

00:33:18,120 --> 00:33:25,950
management for systems and cost

00:33:19,950 --> 00:33:27,990
domains and and we have the network to

00:33:25,950 --> 00:33:31,950
me of the few PC office settings and the

00:33:27,990 --> 00:33:34,049
virtual are offerings those another some

00:33:31,950 --> 00:33:36,929
other more some more enhancements that

00:33:34,049 --> 00:33:38,039
our colleague Rakesh made unfortunately

00:33:36,929 --> 00:33:40,380
couldn't be there today that's why we're

00:33:38,039 --> 00:33:43,409
doing this presentation you wish we

00:33:40,380 --> 00:33:46,950
could be here and he developed a closet

00:33:43,409 --> 00:33:49,710
automation yet also a new dashboard for

00:33:46,950 --> 00:33:51,149
the hypervisor upgrades so he he

00:33:49,710 --> 00:33:54,480
developed an automated way to uh to

00:33:51,149 --> 00:33:56,669
upgrade hypervisors mostly through linux

00:33:54,480 --> 00:34:00,029
updates and he made a dashboard for that

00:33:56,669 --> 00:34:04,889
also a template manager for managing

00:34:00,029 --> 00:34:06,179
temple to thin cloud spec so a few

00:34:04,889 --> 00:34:09,570
things that are up on that rise and for

00:34:06,179 --> 00:34:12,839
us next is no duplication for secondary

00:34:09,570 --> 00:34:14,940
storage so by default when you have

00:34:12,839 --> 00:34:17,760
multiple secondary storage VMs that data

00:34:14,940 --> 00:34:20,129
is replicated throughout each one and we

00:34:17,760 --> 00:34:22,800
want to give an option to actually have

00:34:20,129 --> 00:34:25,409
multiple secondary storage high legs so

00:34:22,800 --> 00:34:26,639
it can act as more of a load balancing

00:34:25,409 --> 00:34:30,240
situation rather than redundancy

00:34:26,639 --> 00:34:31,950
situation we also want to improve our

00:34:30,240 --> 00:34:33,450
database exception handling because

00:34:31,950 --> 00:34:36,690
troubleshooting debit database exception

00:34:33,450 --> 00:34:41,879
is just a major pain or had to deal with

00:34:36,690 --> 00:34:44,369
that handling i/o so deletions so when

00:34:41,879 --> 00:34:46,500
you have VMs with is OS mounted on them

00:34:44,369 --> 00:34:49,649
and you tried to delete the ISO it

00:34:46,500 --> 00:34:51,359
causes havoc within contact and we're

00:34:49,649 --> 00:34:52,679
trying to improve that functionality so

00:34:51,359 --> 00:34:55,169
it actually handles it a Dazzler

00:34:52,679 --> 00:34:58,530
gracefully obviously we're trying to

00:34:55,169 --> 00:35:00,540
migrate to 4.13 and hopefully create

00:34:58,530 --> 00:35:04,020
more PRS about all these happen topics

00:35:00,540 --> 00:35:19,220
within the community there's any

00:35:04,020 --> 00:35:19,220
questions already answered yes yes

00:35:24,810 --> 00:35:31,890
well it's primarily to automates so if

00:35:30,119 --> 00:35:33,600
you have kernel crates or pretty much

00:35:31,890 --> 00:35:35,820
your monthly

00:35:33,600 --> 00:35:38,370
or weekly or yearly whatever I mean how

00:35:35,820 --> 00:35:40,350
often you want afraid you're all of your

00:35:38,370 --> 00:35:42,750
with Linux updates to the hypervisor so

00:35:40,350 --> 00:35:44,790
you could upgrade KVM in the same time

00:35:42,750 --> 00:35:47,750
depending on what depends or what your

00:35:44,790 --> 00:35:50,880
repo is really but yeah basically

00:35:47,750 --> 00:35:53,040
automates the migration of VMs from that

00:35:50,880 --> 00:35:54,150
I've resurrect itself finds a new you

00:35:53,040 --> 00:35:56,370
know finds a new hypervisor for all

00:35:54,150 --> 00:35:59,480
those viens according to the rules you

00:35:56,370 --> 00:36:01,680
set it so it only migrate things to the

00:35:59,480 --> 00:36:05,720
creative high prices already so it is a

00:36:01,680 --> 00:36:11,070
nothing migrated again and some I got so

00:36:05,720 --> 00:36:13,050
yeah yeah and again that's that's the -

00:36:11,070 --> 00:36:15,570
before it there I'm not sure if the

00:36:13,050 --> 00:37:02,910
backend code is there - but yeah but

00:36:15,570 --> 00:37:05,060
that's what the projects are all over

00:37:02,910 --> 00:37:05,060
now

00:37:32,819 --> 00:37:37,119
yeah we primarily use Linux pretty sure

00:37:35,229 --> 00:37:42,869
I know

00:37:37,119 --> 00:37:42,869
hey the question about anything you see

00:37:54,450 --> 00:37:57,959
at her next talks

00:38:06,880 --> 00:38:10,039
[Music]

00:38:17,849 --> 00:38:23,140
well I mean I know they chose cloud

00:38:21,369 --> 00:38:25,329
stack I was before I my time at least

00:38:23,140 --> 00:38:28,359
well unfortunately but I was previous

00:38:25,329 --> 00:38:31,089
upside guy as well but I moved on the

00:38:28,359 --> 00:38:33,759
hosts like with joining lucid and I

00:38:31,089 --> 00:38:35,709
dunno they actually just they actually

00:38:33,759 --> 00:38:37,119
looked at OpenStack and when when they

00:38:35,709 --> 00:38:41,769
chose when they're choosing their you

00:38:37,119 --> 00:38:43,449
know provider and they decided on call

00:38:41,769 --> 00:38:45,219
stack I think they liked the community

00:38:43,449 --> 00:38:47,170
better they liked how it was set up a

00:38:45,219 --> 00:38:49,869
lot easier to work with

00:38:47,170 --> 00:38:51,789
I think I'm yeah I wasn't there for I

00:38:49,869 --> 00:38:52,930
wasn't around but I believe that was was

00:38:51,789 --> 00:38:54,519
they looked at both than they found

00:38:52,930 --> 00:38:55,989
cause life was better for everything all

00:38:54,519 --> 00:38:57,670
of their needs

00:38:55,989 --> 00:39:03,539
I don't worked out we've been working

00:38:57,670 --> 00:39:06,519
out for us ever since any more questions

00:39:03,539 --> 00:39:09,969
Nate

00:39:06,519 --> 00:39:12,190
so next talk is for as ways giving it

00:39:09,969 --> 00:39:14,229
and are actually in the next to the next

00:39:12,190 --> 00:39:15,999
scheduling appointment is actually gonna

00:39:14,229 --> 00:39:19,329
next door and he's gonna be talking

00:39:15,999 --> 00:39:22,809
about the no VNC implementation which is

00:39:19,329 --> 00:39:26,229
amazing html5 is amazing you should see

00:39:22,809 --> 00:39:29,039
it and the next one for from me in

00:39:26,229 --> 00:39:31,900
Jeffrey is going to be how we migrated

00:39:29,039 --> 00:39:34,269
how we integrated a different company

00:39:31,900 --> 00:39:37,029
within that we bought and integrated up

00:39:34,269 --> 00:39:39,959
there openvz opz system into into class

00:39:37,029 --> 00:39:42,370
tech and that's going to be tomorrow

00:39:39,959 --> 00:39:45,620
11:30

00:39:42,370 --> 00:39:47,840
if you have no questions weird beer

00:39:45,620 --> 00:39:58,370
available you just look for me Jeff for

00:39:47,840 --> 00:40:01,150
your way I'm in Phoenix and Jeffrey way

00:39:58,370 --> 00:40:01,150
are in Netherlands

00:40:03,890 --> 00:40:07,000

YouTube URL: https://www.youtube.com/watch?v=tUeJEcBWVpM


