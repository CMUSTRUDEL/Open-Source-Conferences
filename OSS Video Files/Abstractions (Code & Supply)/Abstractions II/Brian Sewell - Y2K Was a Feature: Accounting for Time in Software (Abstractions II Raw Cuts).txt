Title: Brian Sewell - Y2K Was a Feature: Accounting for Time in Software (Abstractions II Raw Cuts)
Publication date: 2019-11-25
Playlist: Abstractions II
Description: 
	Presented at Abstractions II, a software conference Code & Supply in Pittsburgh, PA August 21-23, 2019. Learn more at http://www.codeandsupply.co or https://abstractions.io. 

The RAW CUTS series is comprised of selections from a few of our stages wherein the raw video was of high enough quality for C&S to release it before post-production. 

Post-production for a community-run conference with as many speakers and as low of a budget as Abstractions is an enormous and time-consuming undertaking. If you're interested in volunteering your time and CPU cycles to help with post-production, we can use your help. Email us at support@codeandsupply.co and we'll get you into the mix. You'll be permitted to credit yourself in the video pre-roll and credits and we'll thank you in this text and on social media.

Interested in sponsoring professional post-production costs in exchange for your company's name and logo in the video forevermore? Contact us at sponsorship@abstractions.io. Opportunities start at $1,000.

-----

Time is a complex mechanism in programming. Whether you are building a calendar app or a chatbot, time will likely play an important role in your software.

Popular bugs like Y2K have brought a lot of attention to how easily software can overlook such a vital part of everyday life. These bugs may be fun anecdotes, but they illustrate how difficult it can be to successfully account for every edge case time presents. Why is time so hard to deal with? It goes much further than time zones, daylight savings, and leap years.

As product designers and developers, it is essential that we better understand the gap between user expectations and the realities of how time operates.

We’ll chronicle some time-related programming bugs and what we can learn from them (and laugh at ourselves a little). We’ll also cover how different languages handle time and some best practices for storing, retrieving, and presenting time. Lastly we’ll dive into the special cases to be aware of as we design and build our software.

https://abstractions.io/schedule/#Y2K%20Was%20a%20Feature:%20Accounting%20for%20Time%20in%20Software-Brian%20Sewell
YouTube URL: https://www.youtube.com/watch?v=E2W-rNT5_9A


