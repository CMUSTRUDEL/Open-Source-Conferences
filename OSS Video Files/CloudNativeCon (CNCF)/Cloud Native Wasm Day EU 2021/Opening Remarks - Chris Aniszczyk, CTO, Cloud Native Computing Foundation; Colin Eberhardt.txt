Title: Opening Remarks - Chris Aniszczyk, CTO, Cloud Native Computing Foundation; Colin Eberhardt
Publication date: 2021-05-04
Playlist: Cloud Native Wasm Day EU 2021
Description: 
	Donâ€™t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon North America 2021 in Los Angeles, CA from October 12-15. Learn more at https://kubecon.io The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.

Opening Remarks - Chris Aniszczyk, CTO, Cloud Native Computing Foundation; Colin Eberhardt, Technology Director, Scott Logic
Captions: 
	00:00:00,160 --> 00:00:04,400
hello everyone my name is chris anazik i

00:00:02,480 --> 00:00:05,120
am the cto of the cloud native computing

00:00:04,400 --> 00:00:08,000
foundation

00:00:05,120 --> 00:00:09,120
uh i'm here today as one of the program

00:00:08,000 --> 00:00:11,840
committee members of

00:00:09,120 --> 00:00:13,440
our first cloud native wasm day uh i'm

00:00:11,840 --> 00:00:15,360
excited to be here to kind of uh

00:00:13,440 --> 00:00:17,440
show show you know and present a new

00:00:15,360 --> 00:00:20,720
conference to our wonderful cloud native

00:00:17,440 --> 00:00:22,640
community i'm here with my other program

00:00:20,720 --> 00:00:24,000
committee member colin who will talk a

00:00:22,640 --> 00:00:26,320
little bit about

00:00:24,000 --> 00:00:27,359
you know history of wasm and uh how it's

00:00:26,320 --> 00:00:29,519
relevant

00:00:27,359 --> 00:00:31,679
these days in our cloud native uh

00:00:29,519 --> 00:00:34,320
ecosystem

00:00:31,679 --> 00:00:35,600
cool thanks intro chris uh so my my name

00:00:34,320 --> 00:00:37,360
is colin eberhardt and i'm the

00:00:35,600 --> 00:00:39,200
technology director of a company called

00:00:37,360 --> 00:00:41,920
scotlogic which is a small

00:00:39,200 --> 00:00:42,559
uk-based software consultancy and i'm

00:00:41,920 --> 00:00:44,640
also

00:00:42,559 --> 00:00:47,200
as people who know me that they all know

00:00:44,640 --> 00:00:48,640
i'm a complete webassembly enthusiast

00:00:47,200 --> 00:00:51,120
now to give you a little bit of

00:00:48,640 --> 00:00:53,360
historical context webassembly is quite

00:00:51,120 --> 00:00:55,920
a new and fast-moving technology

00:00:53,360 --> 00:00:57,920
it was originally born in the browser

00:00:55,920 --> 00:00:58,800
and addressed the age-old problem of how

00:00:57,920 --> 00:01:00,640
you bring other

00:00:58,800 --> 00:01:02,000
other languages to the browser for those

00:01:00,640 --> 00:01:03,760
of you who've been around for a while

00:01:02,000 --> 00:01:05,760
i'm sure you remember flash or

00:01:03,760 --> 00:01:06,799
if you're as old as me things like java

00:01:05,760 --> 00:01:09,040
java applets

00:01:06,799 --> 00:01:10,960
and it's always been a challenge uh the

00:01:09,040 --> 00:01:14,000
plug-in model was

00:01:10,960 --> 00:01:14,640
cause some significant tensions web

00:01:14,000 --> 00:01:16,240
assembly

00:01:14,640 --> 00:01:18,560
itself was developed really quite

00:01:16,240 --> 00:01:19,119
rapidly over a period of a few years

00:01:18,560 --> 00:01:21,280
building

00:01:19,119 --> 00:01:22,320
primarily on the work of mozilla and

00:01:21,280 --> 00:01:24,240
asm.js

00:01:22,320 --> 00:01:26,320
and it was launched relatively recently

00:01:24,240 --> 00:01:29,119
in in 2019

00:01:26,320 --> 00:01:30,320
and at around that time it also moved

00:01:29,119 --> 00:01:33,520
under w3c

00:01:30,320 --> 00:01:35,520
alongside css javascript and html

00:01:33,520 --> 00:01:37,920
and for me this was a real landmark for

00:01:35,520 --> 00:01:39,200
the web it's the first time in the 25

00:01:37,920 --> 00:01:41,200
year history

00:01:39,200 --> 00:01:42,720
that there has now been another language

00:01:41,200 --> 00:01:44,720
that you can use another language which

00:01:42,720 --> 00:01:46,159
is a first-class citizen of the web

00:01:44,720 --> 00:01:48,000
rather than the plug-in model where they

00:01:46,159 --> 00:01:49,680
are effectively a second-class citizen

00:01:48,000 --> 00:01:51,920
so it's hard to understate the

00:01:49,680 --> 00:01:54,320
significance of that event

00:01:51,920 --> 00:01:56,000
so webassembly is a fantastic technology

00:01:54,320 --> 00:01:56,960
but unfortunately i think the name is a

00:01:56,000 --> 00:01:59,439
little bit

00:01:56,960 --> 00:02:00,079
wrong in some regards firstly it's not

00:01:59,439 --> 00:02:02,159
really as

00:02:00,079 --> 00:02:03,680
an assembly language but you'd only be a

00:02:02,159 --> 00:02:06,320
pedant if you pointed that out

00:02:03,680 --> 00:02:07,360
but more importantly it's it's not just

00:02:06,320 --> 00:02:10,239
for the web

00:02:07,360 --> 00:02:11,920
so the web assembly runtime itself is

00:02:10,239 --> 00:02:13,760
secure and sandboxed which was

00:02:11,920 --> 00:02:15,120
a must for the web browser the web is

00:02:13,760 --> 00:02:17,040
probably one of the most attacked

00:02:15,120 --> 00:02:20,080
platforms there is so it had to be

00:02:17,040 --> 00:02:22,400
secure it also has a very lightweight

00:02:20,080 --> 00:02:24,400
and platform independent instruction set

00:02:22,400 --> 00:02:26,720
and it's these features that make it

00:02:24,400 --> 00:02:27,920
a very desirable runtime for many other

00:02:26,720 --> 00:02:29,840
use cases

00:02:27,920 --> 00:02:31,920
so since since the inception of the

00:02:29,840 --> 00:02:33,040
technology people have been using it for

00:02:31,920 --> 00:02:35,200
various different

00:02:33,040 --> 00:02:36,080
non-browser-based applications so for

00:02:35,200 --> 00:02:38,400
example

00:02:36,080 --> 00:02:39,440
in the blockchain world webassembly

00:02:38,400 --> 00:02:41,760
makes a

00:02:39,440 --> 00:02:42,640
quite an ideal smart contract engine in

00:02:41,760 --> 00:02:44,480
the past

00:02:42,640 --> 00:02:46,480
ethereum had used their own proprietary

00:02:44,480 --> 00:02:48,160
language solidity in the future

00:02:46,480 --> 00:02:50,400
through webassembly they'll be bringing

00:02:48,160 --> 00:02:54,319
a range of modern programming languages

00:02:50,400 --> 00:02:57,360
to to blockchain also iot again

00:02:54,319 --> 00:02:59,920
it it allows us through being uh

00:02:57,360 --> 00:03:02,400
through being a platform agnostic to

00:02:59,920 --> 00:03:04,800
create a much broader ecosystem

00:03:02,400 --> 00:03:05,680
and finally cloud native the reason many

00:03:04,800 --> 00:03:07,599
of you are here

00:03:05,680 --> 00:03:09,360
webassembly gives again a lightweight

00:03:07,599 --> 00:03:11,440
and secure isolation model

00:03:09,360 --> 00:03:12,879
it's ideal for running cloud functions

00:03:11,440 --> 00:03:15,200
or running code on the edge

00:03:12,879 --> 00:03:17,599
or running code within proxies it's it's

00:03:15,200 --> 00:03:20,239
an ideal runtime for those scenarios

00:03:17,599 --> 00:03:20,800
and and finally i guess on a personal

00:03:20,239 --> 00:03:22,400
note

00:03:20,800 --> 00:03:24,720
i think web assembly could have a

00:03:22,400 --> 00:03:25,360
greater impact beyond the web than it

00:03:24,720 --> 00:03:26,959
does

00:03:25,360 --> 00:03:30,560
within the browser so i think it has a

00:03:26,959 --> 00:03:32,720
great history within cloud native

00:03:30,560 --> 00:03:34,239
thank you thank you colin for that uh

00:03:32,720 --> 00:03:35,200
quick synopsis and history of

00:03:34,239 --> 00:03:37,200
webassembly

00:03:35,200 --> 00:03:39,040
i'm personally very excited you know

00:03:37,200 --> 00:03:40,080
within the cncf we've already had some

00:03:39,040 --> 00:03:42,640
early adoption

00:03:40,080 --> 00:03:43,519
of wasm-related technologies uh in the

00:03:42,640 --> 00:03:45,920
envoy pro

00:03:43,519 --> 00:03:47,680
in the envoy project which is one of our

00:03:45,920 --> 00:03:49,120
you know fancy service proxies

00:03:47,680 --> 00:03:50,879
they've been basically ripping out and

00:03:49,120 --> 00:03:52,480
replacing their existing kind of

00:03:50,879 --> 00:03:53,360
extension mechanisms which was powered

00:03:52,480 --> 00:03:54,879
by lua

00:03:53,360 --> 00:03:57,040
which is you know a lightweight

00:03:54,879 --> 00:03:58,400
scripting engine but fairly heavy weight

00:03:57,040 --> 00:04:00,319
and you know from them

00:03:58,400 --> 00:04:01,920
moving from low to wasm it has helped

00:04:00,319 --> 00:04:04,159
you know uh you know make

00:04:01,920 --> 00:04:05,519
envoy lighter weight and a little bit

00:04:04,159 --> 00:04:06,159
more flexible in dealing with different

00:04:05,519 --> 00:04:09,040
languages

00:04:06,159 --> 00:04:09,760
for you to write filters that support um

00:04:09,040 --> 00:04:11,519
envoy

00:04:09,760 --> 00:04:12,720
we also have a lot of experimentation

00:04:11,519 --> 00:04:14,480
you know in the wider cloud native

00:04:12,720 --> 00:04:18,000
community um folks

00:04:14,480 --> 00:04:20,479
in microsoft have been working on a new

00:04:18,000 --> 00:04:22,000
cubelet kubernetes engine called

00:04:20,479 --> 00:04:23,040
crustlit which basically allows you to

00:04:22,000 --> 00:04:26,240
take advantage of

00:04:23,040 --> 00:04:27,199
running uh wasm within a kubernetes

00:04:26,240 --> 00:04:29,280
context

00:04:27,199 --> 00:04:30,479
so to me like all this innovation is

00:04:29,280 --> 00:04:32,240
happening kind of at the perfect time

00:04:30,479 --> 00:04:34,000
where i think over the next couple years

00:04:32,240 --> 00:04:35,440
you're going to see wasms stretched in

00:04:34,000 --> 00:04:37,120
new environments from the edge

00:04:35,440 --> 00:04:38,479
to cloud-based environments such as

00:04:37,120 --> 00:04:40,080
kubernetes and

00:04:38,479 --> 00:04:41,759
you know colin and i are both glad to

00:04:40,080 --> 00:04:42,639
welcome you to our first cloud-native

00:04:41,759 --> 00:04:43,919
wasm day and

00:04:42,639 --> 00:04:45,680
hopefully you could use this occasion to

00:04:43,919 --> 00:04:47,199
learn more about the technology of

00:04:45,680 --> 00:04:48,720
how it's being used both inside and

00:04:47,199 --> 00:04:50,080
outside the browser and

00:04:48,720 --> 00:04:52,320
we hope to do many of more of these

00:04:50,080 --> 00:04:53,840
events in the future so from col and i

00:04:52,320 --> 00:04:55,600
thank you for attending and we hope you

00:04:53,840 --> 00:04:59,919
learned something new

00:04:55,600 --> 00:04:59,919

YouTube URL: https://www.youtube.com/watch?v=llf9b_UGQ1k


