Title: Allocating Less: Really Thin Rust Cloud Apps - Evan Chan, UrbanLogiq
Publication date: 2021-05-03
Playlist: Cloud Native Rust Day EU 2021
Description: 
	Donâ€™t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon North America 2021 in Los Angeles, CA from October 12-15. Learn more at https://kubecon.io The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.

Allocating Less: Really Thin Rust Cloud Apps - Evan Chan, UrbanLogiq

In this talk I discuss in depth one of the key selling points of Rust for cloud native apps: creating really thin and fast apps or infrastructure layers.  To do this, it is important to review and examine the memory allocation choices that we can make in Rust, and how to optimize them and data structures to ensure our Rust apps can reach the ceiling they are capable of.

- Why use Rust for thin cloud apps?
- Review memory usage in Rust
- How to profile Rust apps for memory usage
- Where to look for memory allocations in Rust apps
- Improving rust heap usage through better APIs, improving serialization, getting rid of clones, flattening data structures, etc.
- The effect of switching memory allocators (ie jemalloc) and why you might want to, or not
- A study of JSON processors: memory usage
- Different benchmarking stats to use for memory
- Traits and trait objects: how to avoid allocations and speed up performance (enum-dispatch and friends)
YouTube URL: https://www.youtube.com/watch?v=FAz0qSclLss


