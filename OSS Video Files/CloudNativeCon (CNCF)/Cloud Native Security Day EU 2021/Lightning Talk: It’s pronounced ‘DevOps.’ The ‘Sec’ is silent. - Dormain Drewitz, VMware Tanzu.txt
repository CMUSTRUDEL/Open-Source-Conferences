Title: Lightning Talk: It’s pronounced ‘DevOps.’ The ‘Sec’ is silent. - Dormain Drewitz, VMware Tanzu
Publication date: 2021-05-04
Playlist: Cloud Native Security Day EU 2021
Description: 
	Don’t miss out! Join us at our upcoming event: KubeCon + CloudNativeCon North America 2021 in Los Angeles, CA from October 12-15. Learn more at https://kubecon.io The conference features presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects.

Lightning Talk: It’s pronounced ‘DevOps.’ The ‘Sec’ is silent. - Dormain Drewitz, VMware Tanzu

A common roadblock in realizing DevOps outcomes is security. In this lightning talk, hear how the security landscape has changed and is forcing a DevSecOps mindset to achieve DevOps outcomes.
Captions: 
	00:00:00,160 --> 00:00:02,720
and i'm going to jump right into it

00:00:01,520 --> 00:00:04,400
because this is a lightning talk and

00:00:02,720 --> 00:00:05,520
it's going to go by fast

00:00:04,400 --> 00:00:07,600
today i'm going to talk to you a little

00:00:05,520 --> 00:00:08,000
bit about why if you're doing devops

00:00:07,600 --> 00:00:10,320
right

00:00:08,000 --> 00:00:11,599
you should be solving for security and

00:00:10,320 --> 00:00:13,599
that's where of course

00:00:11,599 --> 00:00:15,280
a lot of these cloud native security

00:00:13,599 --> 00:00:17,039
concepts and technologies

00:00:15,280 --> 00:00:18,960
come into play in terms of being able to

00:00:17,039 --> 00:00:21,199
deliver those outcomes

00:00:18,960 --> 00:00:23,199
now we can't have a talk about devops

00:00:21,199 --> 00:00:25,359
without defining devops

00:00:23,199 --> 00:00:27,039
and we could spend all day or all year

00:00:25,359 --> 00:00:28,560
on this because if you ask 10 people

00:00:27,039 --> 00:00:30,960
what devops means you'll get

00:00:28,560 --> 00:00:32,960
maybe 20 answers but if we take a look

00:00:30,960 --> 00:00:35,200
at the wikipedia definition because no

00:00:32,960 --> 00:00:36,480
one's allowed to argue with wikipedia

00:00:35,200 --> 00:00:38,559
what you'll see is that there's an

00:00:36,480 --> 00:00:39,280
emphasis on the practices yes there is a

00:00:38,559 --> 00:00:40,879
tool chain

00:00:39,280 --> 00:00:42,399
but it's really about the practices that

00:00:40,879 --> 00:00:44,719
lead to this outcome

00:00:42,399 --> 00:00:46,239
shorter shorten the development uh

00:00:44,719 --> 00:00:48,399
systems development life cycle

00:00:46,239 --> 00:00:49,680
and you get high quality software to

00:00:48,399 --> 00:00:51,680
paraphrase

00:00:49,680 --> 00:00:52,800
the goal of devops is shipping higher

00:00:51,680 --> 00:00:54,800
quality code

00:00:52,800 --> 00:00:57,120
faster and more frequently and of course

00:00:54,800 --> 00:01:00,079
to production where it matters

00:00:57,120 --> 00:01:00,879
now why does this matter from a security

00:01:00,079 --> 00:01:02,960
perspective

00:01:00,879 --> 00:01:04,559
which is actually if you look at the

00:01:02,960 --> 00:01:05,360
number of common vulnerabilities and

00:01:04,559 --> 00:01:08,080
exposures

00:01:05,360 --> 00:01:08,799
that are getting reported every week you

00:01:08,080 --> 00:01:11,280
see that

00:01:08,799 --> 00:01:13,600
over the last 10 or so years basically

00:01:11,280 --> 00:01:16,640
since devops was born

00:01:13,600 --> 00:01:18,960
there's been a 3 to 4x increase in how

00:01:16,640 --> 00:01:21,680
many of these cves are getting reported

00:01:18,960 --> 00:01:22,640
every week part of this is just we have

00:01:21,680 --> 00:01:24,320
more software

00:01:22,640 --> 00:01:26,320
we've been kind of in this you know

00:01:24,320 --> 00:01:27,119
explosion and growth of the software

00:01:26,320 --> 00:01:29,600
industry

00:01:27,119 --> 00:01:31,280
taking over all kinds of industries or

00:01:29,600 --> 00:01:33,600
as mark andreessen said

00:01:31,280 --> 00:01:35,119
software is taking over the world um

00:01:33,600 --> 00:01:36,000
software's eating the world that was his

00:01:35,119 --> 00:01:39,680
quote from about

00:01:36,000 --> 00:01:40,079
10 years ago and what we can see is that

00:01:39,680 --> 00:01:41,280
that

00:01:40,079 --> 00:01:43,119
brings along with it a lot of

00:01:41,280 --> 00:01:45,200
vulnerabilities more code means more

00:01:43,119 --> 00:01:46,000
vulnerabilities and how do we manage all

00:01:45,200 --> 00:01:48,479
of it

00:01:46,000 --> 00:01:50,000
now if you kind of deal with that sort

00:01:48,479 --> 00:01:51,600
of at the end of your software

00:01:50,000 --> 00:01:54,720
development life cycle

00:01:51,600 --> 00:01:56,000
uh you get this kind of kind of crazy

00:01:54,720 --> 00:01:57,680
effect where

00:01:56,000 --> 00:02:00,320
you're just getting hammered with the

00:01:57,680 --> 00:02:01,360
amount of code that needs to be scanned

00:02:00,320 --> 00:02:02,719
and remediated

00:02:01,360 --> 00:02:04,000
and it feels a little bit like the scene

00:02:02,719 --> 00:02:05,040
out of i love lucy when they're in the

00:02:04,000 --> 00:02:07,280
chocolate factory

00:02:05,040 --> 00:02:08,080
and they can't keep up so the conclusion

00:02:07,280 --> 00:02:10,000
that we have here

00:02:08,080 --> 00:02:11,760
is that we need some amount of

00:02:10,000 --> 00:02:12,640
automation it's essential when you

00:02:11,760 --> 00:02:14,640
factor in

00:02:12,640 --> 00:02:16,160
just the growth in the number of cves

00:02:14,640 --> 00:02:17,200
out there the growth in the amount of

00:02:16,160 --> 00:02:19,120
code that's trying to get

00:02:17,200 --> 00:02:21,680
out into production and then you take

00:02:19,120 --> 00:02:23,599
into effect things like containers

00:02:21,680 --> 00:02:25,040
as sort of uh one of the staples of

00:02:23,599 --> 00:02:27,760
devops tool chains

00:02:25,040 --> 00:02:28,480
and how they're very ephemeral so

00:02:27,760 --> 00:02:30,480
instead of

00:02:28,480 --> 00:02:32,160
patching and hardening a vm that we're

00:02:30,480 --> 00:02:32,640
going to keep in production for a long

00:02:32,160 --> 00:02:34,160
time

00:02:32,640 --> 00:02:35,760
we want to throw it away and rebuild it

00:02:34,160 --> 00:02:37,360
again so we're going to need a lot of

00:02:35,760 --> 00:02:39,360
automation to deal with that

00:02:37,360 --> 00:02:40,959
now there's kind of looking at this is

00:02:39,360 --> 00:02:42,080
we can't just automate at the end we

00:02:40,959 --> 00:02:44,879
need to sort of

00:02:42,080 --> 00:02:46,400
cause security to happen in more places

00:02:44,879 --> 00:02:46,879
some people talk about this as shifting

00:02:46,400 --> 00:02:48,959
left

00:02:46,879 --> 00:02:50,080
or expanding left and there's a couple

00:02:48,959 --> 00:02:52,160
things to consider here

00:02:50,080 --> 00:02:54,000
one is just on the design side and how

00:02:52,160 --> 00:02:56,319
do you educate more developers to

00:02:54,000 --> 00:02:57,760
be mindful about security practices but

00:02:56,319 --> 00:03:00,640
there's also thinking about

00:02:57,760 --> 00:03:01,200
how do we automate in security points of

00:03:00,640 --> 00:03:02,720
control

00:03:01,200 --> 00:03:04,239
along the entire development and

00:03:02,720 --> 00:03:05,440
deployment life cycle

00:03:04,239 --> 00:03:07,280
and that's really where you start to

00:03:05,440 --> 00:03:10,000
kind of get into some of these

00:03:07,280 --> 00:03:11,200
uh cloud native security technologies

00:03:10,000 --> 00:03:14,239
where you can think about

00:03:11,200 --> 00:03:16,159
hey how do i get code from development

00:03:14,239 --> 00:03:17,440
into the into the hands of customers and

00:03:16,159 --> 00:03:19,200
in front of users

00:03:17,440 --> 00:03:20,560
and what are my points of control in

00:03:19,200 --> 00:03:21,920
that life cycle knowing that we're going

00:03:20,560 --> 00:03:23,040
to go around it again and again and

00:03:21,920 --> 00:03:25,360
again

00:03:23,040 --> 00:03:27,519
now even the best laid plans if you

00:03:25,360 --> 00:03:29,280
develop a system to do this if it's

00:03:27,519 --> 00:03:31,120
painful to use

00:03:29,280 --> 00:03:32,720
developers are going to go around it and

00:03:31,120 --> 00:03:34,080
take the gumdrop path

00:03:32,720 --> 00:03:35,280
um and that's not because they're bad

00:03:34,080 --> 00:03:36,640
people but it's because they're just

00:03:35,280 --> 00:03:38,640
trying to get their job done

00:03:36,640 --> 00:03:40,000
now this was actually a really great

00:03:38,640 --> 00:03:42,000
insight that was shared

00:03:40,000 --> 00:03:43,680
in the state of devops report from last

00:03:42,000 --> 00:03:46,159
year which is really about you have to

00:03:43,680 --> 00:03:47,920
make these platforms a compelling option

00:03:46,159 --> 00:03:49,680
and this becomes really important when

00:03:47,920 --> 00:03:50,319
you've designed these platforms to help

00:03:49,680 --> 00:03:51,840
solve

00:03:50,319 --> 00:03:53,280
all these critical security needs

00:03:51,840 --> 00:03:55,760
whether it's scanning or points of

00:03:53,280 --> 00:03:58,159
remediation and control

00:03:55,760 --> 00:04:00,000
you you spend all this effort to do that

00:03:58,159 --> 00:04:01,840
but then you don't want developers to go

00:04:00,000 --> 00:04:03,200
around it so you have to have them in

00:04:01,840 --> 00:04:04,879
mind as the customer

00:04:03,200 --> 00:04:07,200
so how do you make it a developer

00:04:04,879 --> 00:04:08,799
friendly thing so this is kind of the

00:04:07,200 --> 00:04:10,640
the formula to think about the the

00:04:08,799 --> 00:04:12,959
mathematical proof if you will

00:04:10,640 --> 00:04:14,720
that gets you to when you think about

00:04:12,959 --> 00:04:17,280
the outcomes you're trying to achieve

00:04:14,720 --> 00:04:18,479
the challenges that security brings in

00:04:17,280 --> 00:04:20,560
as well as things like

00:04:18,479 --> 00:04:21,519
the ephemeral nature of containers and

00:04:20,560 --> 00:04:23,759
behaviors

00:04:21,519 --> 00:04:25,759
that developers exhibit you really need

00:04:23,759 --> 00:04:28,320
to automate this whole

00:04:25,759 --> 00:04:29,919
platform and life cycle in a developer

00:04:28,320 --> 00:04:31,600
friendly way and you probably need to be

00:04:29,919 --> 00:04:33,759
thinking about that on a constant basis

00:04:31,600 --> 00:04:36,800
with a team that's really thinking about

00:04:33,759 --> 00:04:38,479
a developer friendly platform so

00:04:36,800 --> 00:04:40,560
at the end of the day if you're doing

00:04:38,479 --> 00:04:43,280
devops right and you're doing it on an

00:04:40,560 --> 00:04:44,880
ongoing basis then you've solved for

00:04:43,280 --> 00:04:46,800
these security challenges

00:04:44,880 --> 00:04:48,720
now if this was interesting to you i

00:04:46,800 --> 00:04:49,759
have a 43 minute version of this talk

00:04:48,720 --> 00:04:51,600
that you can find

00:04:49,759 --> 00:04:52,800
you can google it's pronounced devops

00:04:51,600 --> 00:04:54,800
the sec is silent

00:04:52,800 --> 00:04:56,880
because this bright talk url is probably

00:04:54,800 --> 00:04:59,440
going to be impossible to memorize

00:04:56,880 --> 00:05:01,039
so with that i want to say thank you and

00:04:59,440 --> 00:05:05,440
enjoy the rest of the cloud native

00:05:01,039 --> 00:05:05,440

YouTube URL: https://www.youtube.com/watch?v=xAN76xwGRJg


