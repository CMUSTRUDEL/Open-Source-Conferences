Title: Exit Stage Left: Replacing Theater with Chaos - Kelly Shortridge, Capsule8
Publication date: 2020-11-25
Playlist: Cloud Native Security Day North America 2020
Description: 
	Exit Stage Left: Replacing Theater with Chaos - Kelly Shortridge, Capsule8

Kelly will explore how security theater leads to increased organizational friction, especially in the realm of software delivery, rather than promoting safety. She'll contrast these dramatics with a security chaos engineering approach â€“ one which embraces the importance of convenience, alignment with organizational goals, and the wisdom derived from failure.
Captions: 
	00:00:00,000 --> 00:00:04,319
welcome to exit stage left replacing

00:00:02,159 --> 00:00:06,160
theater with chaos

00:00:04,319 --> 00:00:07,680
i'm kelly shortridge i'm the product

00:00:06,160 --> 00:00:08,400
management and product strategy at

00:00:07,680 --> 00:00:10,000
capsley

00:00:08,400 --> 00:00:11,840
just startup based in new york city that

00:00:10,000 --> 00:00:13,840
provides infrastructure monitoring and

00:00:11,840 --> 00:00:16,160
protection for production systems

00:00:13,840 --> 00:00:16,960
my spare time and maybe how you know me

00:00:16,160 --> 00:00:18,480
already

00:00:16,960 --> 00:00:20,000
i researched the intersection of

00:00:18,480 --> 00:00:21,359
information security and behavioral

00:00:20,000 --> 00:00:22,800
economics

00:00:21,359 --> 00:00:25,039
so what's the problem we're exploring

00:00:22,800 --> 00:00:27,039
today well it's that infosec often sees

00:00:25,039 --> 00:00:27,680
itself as the underappreciated star of

00:00:27,039 --> 00:00:29,840
the i.t

00:00:27,680 --> 00:00:31,439
stage often laments that it feels like

00:00:29,840 --> 00:00:34,239
no one else cares about the security of

00:00:31,439 --> 00:00:35,520
our data or of our systems

00:00:34,239 --> 00:00:37,680
i would certainly agree and probably

00:00:35,520 --> 00:00:39,840
some of you all do too is that infosec

00:00:37,680 --> 00:00:41,600
is often a prima donna about things

00:00:39,840 --> 00:00:43,680
doesn't exactly state its concerns

00:00:41,600 --> 00:00:45,200
always calmly or constructively

00:00:43,680 --> 00:00:47,200
and it's pretty boisterous in its

00:00:45,200 --> 00:00:49,600
displeasure with developers operators

00:00:47,200 --> 00:00:51,199
and end users

00:00:49,600 --> 00:00:53,199
what i've seen way too many people in

00:00:51,199 --> 00:00:55,120
information security consistently miss

00:00:53,199 --> 00:00:57,920
is that developers and operators do

00:00:55,120 --> 00:00:59,120
actually want to build secure software

00:00:57,920 --> 00:01:00,879
the problem is

00:00:59,120 --> 00:01:03,520
that they're judged more on the delivery

00:01:00,879 --> 00:01:04,799
part rather than the security part

00:01:03,520 --> 00:01:06,560
infosec of course in classic

00:01:04,799 --> 00:01:07,200
shakespearean tradition fights its

00:01:06,560 --> 00:01:08,880
stomach and

00:01:07,200 --> 00:01:10,400
response and leaps onto the security

00:01:08,880 --> 00:01:13,040
theater stage

00:01:10,400 --> 00:01:14,640
all of our detriments so what can we do

00:01:13,040 --> 00:01:16,400
to remove the drama and the pain from

00:01:14,640 --> 00:01:18,720
security theater and actually start

00:01:16,400 --> 00:01:21,600
delivering safe software and systems

00:01:18,720 --> 00:01:22,720
this talk will explore one way to start

00:01:21,600 --> 00:01:24,080
so in act one

00:01:22,720 --> 00:01:26,320
we will welcome you to the security

00:01:24,080 --> 00:01:28,159
theater and act two we'll explore the

00:01:26,320 --> 00:01:31,200
fisticuffs between security theater

00:01:28,159 --> 00:01:35,119
and security chaos engineering so

00:01:31,200 --> 00:01:37,280
that act one welcome to security theater

00:01:35,119 --> 00:01:39,119
to spoof the classic song welcome to the

00:01:37,280 --> 00:01:40,799
theater to the magic to the fun

00:01:39,119 --> 00:01:44,560
where snake oil tools and roadblocks

00:01:40,799 --> 00:01:46,159
grow and blaming rings fortissimo

00:01:44,560 --> 00:01:47,920
so what do we actually mean by security

00:01:46,159 --> 00:01:49,920
theater similar to the

00:01:47,920 --> 00:01:52,000
origins terms and physical security

00:01:49,920 --> 00:01:53,920
security theater involves any effort

00:01:52,000 --> 00:01:55,759
towards producing the perception of

00:01:53,920 --> 00:01:57,439
improved security

00:01:55,759 --> 00:01:59,280
unfortunately creating the perception of

00:01:57,439 --> 00:02:00,079
improved security is often at odds with

00:01:59,280 --> 00:02:01,759
actually creating

00:02:00,079 --> 00:02:03,600
meaningful and valuable security

00:02:01,759 --> 00:02:05,280
outcomes the end result is that you

00:02:03,600 --> 00:02:06,960
produce a whole lot of drama

00:02:05,280 --> 00:02:10,239
you have historic theatrics about enough

00:02:06,960 --> 00:02:11,680
for the entire audience to hear

00:02:10,239 --> 00:02:13,680
security theater is also particularly

00:02:11,680 --> 00:02:14,800
obsessed with bad apples which are

00:02:13,680 --> 00:02:16,480
referring to humans

00:02:14,800 --> 00:02:18,080
who do something malicious or

00:02:16,480 --> 00:02:19,840
accidentally careless

00:02:18,080 --> 00:02:21,520
and of course these humans are

00:02:19,840 --> 00:02:22,560
incredibly rare but that doesn't change

00:02:21,520 --> 00:02:23,840
the focus

00:02:22,560 --> 00:02:25,680
and the problem with this is that

00:02:23,840 --> 00:02:27,599
security theater then involves policies

00:02:25,680 --> 00:02:29,599
that apply to everyone because you have

00:02:27,599 --> 00:02:32,640
to be hyper vigilant for those bad

00:02:29,599 --> 00:02:34,319
apples so as bogna said there might be

00:02:32,640 --> 00:02:36,000
someone who can't be trusted

00:02:34,319 --> 00:02:38,000
the strategy seems to be preventative

00:02:36,000 --> 00:02:38,720
control on everybody instead of damage

00:02:38,000 --> 00:02:41,040
control

00:02:38,720 --> 00:02:42,319
on those few the philosophy basically

00:02:41,040 --> 00:02:44,239
sucks for everyone

00:02:42,319 --> 00:02:45,519
but the actors on the security theater

00:02:44,239 --> 00:02:47,280
stage

00:02:45,519 --> 00:02:48,800
in infosec this is why we often see the

00:02:47,280 --> 00:02:51,040
department of no they say

00:02:48,800 --> 00:02:52,400
no to all requests just in case someone

00:02:51,040 --> 00:02:54,480
is a bad apple

00:02:52,400 --> 00:02:56,160
and this is in part what fuels the high

00:02:54,480 --> 00:02:57,760
conflict relationship we see often

00:02:56,160 --> 00:03:00,640
between infosec

00:02:57,760 --> 00:03:01,040
and engineering just humble did some

00:03:00,640 --> 00:03:02,480
work

00:03:01,040 --> 00:03:04,319
on risk management theater and noted

00:03:02,480 --> 00:03:06,720
that any sort of theater is a common

00:03:04,319 --> 00:03:08,000
encounter control apparatus imposed in a

00:03:06,720 --> 00:03:09,599
top-down way

00:03:08,000 --> 00:03:11,840
which makes life painful for the

00:03:09,599 --> 00:03:13,760
innocent but can be circumvented by

00:03:11,840 --> 00:03:15,599
guilty

00:03:13,760 --> 00:03:17,280
now if you think about things like shift

00:03:15,599 --> 00:03:19,200
left right

00:03:17,280 --> 00:03:21,120
the goal is really like for a developer

00:03:19,200 --> 00:03:22,400
and architect on each team to understand

00:03:21,120 --> 00:03:22,959
things like threat modeling to help

00:03:22,400 --> 00:03:25,360
build

00:03:22,959 --> 00:03:26,799
systems more securely by design but

00:03:25,360 --> 00:03:28,959
instead what we see with something

00:03:26,799 --> 00:03:30,560
like shifting left is catch the os top

00:03:28,959 --> 00:03:32,080
10 or whatever else our tools say is

00:03:30,560 --> 00:03:33,840
important during the build phase rather

00:03:32,080 --> 00:03:35,040
than the deployment phase

00:03:33,840 --> 00:03:36,959
there's maybe a kind of benefit to

00:03:35,040 --> 00:03:38,560
shifting that friction earlier but to be

00:03:36,959 --> 00:03:40,080
real it's minimal and it certainly isn't

00:03:38,560 --> 00:03:42,319
fulfilling the stated goal

00:03:40,080 --> 00:03:43,200
a lot of tools security tools with pro

00:03:42,319 --> 00:03:44,959
roi

00:03:43,200 --> 00:03:47,280
are also hurting and punishing the

00:03:44,959 --> 00:03:49,280
innocent and you're still bypassed by

00:03:47,280 --> 00:03:51,040
the guilty

00:03:49,280 --> 00:03:53,439
relatedly uh even though i still think

00:03:51,040 --> 00:03:55,439
the buzzword is useless at best

00:03:53,439 --> 00:03:57,519
sec ops kind of marches onto the stage

00:03:55,439 --> 00:04:00,640
and says i'm not a regular security

00:03:57,519 --> 00:04:02,560
theater i'm a cool security theater

00:04:00,640 --> 00:04:04,000
in an ideal world deficit op should be

00:04:02,560 --> 00:04:05,599
about similarly unifying

00:04:04,000 --> 00:04:07,200
accountability and responsibility in the

00:04:05,599 --> 00:04:09,200
realm of security just as

00:04:07,200 --> 00:04:10,239
dev and ops was the unification of

00:04:09,200 --> 00:04:12,799
responsibility and

00:04:10,239 --> 00:04:14,319
accountability around operations the

00:04:12,799 --> 00:04:16,000
real world though deficit ops is

00:04:14,319 --> 00:04:17,280
basically just security theater with a

00:04:16,000 --> 00:04:19,040
fresh makeover

00:04:17,280 --> 00:04:20,799
it's deploying code and image scanners

00:04:19,040 --> 00:04:22,000
rather than firewalls and antivirus

00:04:20,799 --> 00:04:26,160
engines and adding the word

00:04:22,000 --> 00:04:27,840
automation in as many places as possible

00:04:26,160 --> 00:04:29,840
the problem is it can't be just us

00:04:27,840 --> 00:04:31,600
versus them right if security can't

00:04:29,840 --> 00:04:33,520
trust engineering teams that's a culture

00:04:31,600 --> 00:04:34,080
problem and almost assuredly a process

00:04:33,520 --> 00:04:36,320
problem

00:04:34,080 --> 00:04:38,000
but it's not a technology problem as

00:04:36,320 --> 00:04:40,000
we'll discuss in the next section

00:04:38,000 --> 00:04:42,400
uh localizing changes is actually a much

00:04:40,000 --> 00:04:44,080
better way to thrive

00:04:42,400 --> 00:04:46,080
so when you see devsecops it's like

00:04:44,080 --> 00:04:47,440
devops is like a building then security

00:04:46,080 --> 00:04:49,600
is smashing through the building

00:04:47,440 --> 00:04:52,000
like it's the kool-aid man and why stop

00:04:49,600 --> 00:04:54,479
at devsecops why not devsec test stops

00:04:52,000 --> 00:04:56,960
why not devsec tests and dba ops

00:04:54,479 --> 00:04:58,400
right we're actually delivering secure

00:04:56,960 --> 00:05:00,639
software then it's a seamless part of

00:04:58,400 --> 00:05:03,600
devops processes and its insertion into

00:05:00,639 --> 00:05:05,120
the buzzword is totally extraneous

00:05:03,600 --> 00:05:06,960
that's the thing there's actually an

00:05:05,120 --> 00:05:08,160
incentive on the security side for it

00:05:06,960 --> 00:05:10,800
not to be seamless

00:05:08,160 --> 00:05:12,960
and to still treat security is distinct

00:05:10,800 --> 00:05:14,400
but equal

00:05:12,960 --> 00:05:16,800
i actually discussed this in a recent

00:05:14,400 --> 00:05:18,400
blog post about yoga sec versus fomo sec

00:05:16,800 --> 00:05:20,320
i recommend you all checking out

00:05:18,400 --> 00:05:22,320
but fomosar can be thought of security

00:05:20,320 --> 00:05:24,080
uh security strategy that's driven by

00:05:22,320 --> 00:05:25,759
fear of missing out and all of the

00:05:24,080 --> 00:05:27,199
related thought patterns around it

00:05:25,759 --> 00:05:28,880
so it gains the spotlight and fomo

00:05:27,199 --> 00:05:29,919
seconds escaping the feeling of

00:05:28,880 --> 00:05:31,680
inadequacy

00:05:29,919 --> 00:05:34,240
you want to regain a sense that security

00:05:31,680 --> 00:05:35,919
is in control and it isn't irrelevant

00:05:34,240 --> 00:05:38,639
even if that's at the expense of

00:05:35,919 --> 00:05:40,320
security outcomes

00:05:38,639 --> 00:05:42,160
what's interesting is envy is actually

00:05:40,320 --> 00:05:43,039
at the heart of fomo security and for

00:05:42,160 --> 00:05:45,199
the context of

00:05:43,039 --> 00:05:46,880
this talk the most relevant target of

00:05:45,199 --> 00:05:47,840
infosex envy is actually software

00:05:46,880 --> 00:05:50,160
engineers

00:05:47,840 --> 00:05:51,120
so devon ops actually possess meaningful

00:05:50,160 --> 00:05:53,280
goals and

00:05:51,120 --> 00:05:54,720
that are part of meaningful work all of

00:05:53,280 --> 00:05:56,080
which is measurable

00:05:54,720 --> 00:05:57,360
and allows them to somewhat answer the

00:05:56,080 --> 00:05:58,960
question of like did you deliver

00:05:57,360 --> 00:06:00,560
software customers are actually going to

00:05:58,960 --> 00:06:02,639
buy and use

00:06:00,560 --> 00:06:05,039
infosec schools are largely nebulous and

00:06:02,639 --> 00:06:08,400
its success is often abstractly shaped

00:06:05,039 --> 00:06:10,000
and often bittersweet at best so when

00:06:08,400 --> 00:06:11,440
security wants to cover every last inch

00:06:10,000 --> 00:06:13,120
of attack surface when all

00:06:11,440 --> 00:06:13,840
vulnerabilities are treated as mission

00:06:13,120 --> 00:06:15,600
critical

00:06:13,840 --> 00:06:17,120
when security approvals are demanded on

00:06:15,600 --> 00:06:19,360
every last bit of new code

00:06:17,120 --> 00:06:21,520
well all this is part of fomo sex

00:06:19,360 --> 00:06:23,280
melodrama on stage at the security

00:06:21,520 --> 00:06:25,120
theater

00:06:23,280 --> 00:06:26,479
ironically though infosec's homosexual

00:06:25,120 --> 00:06:28,960
and lust for the idea of being

00:06:26,479 --> 00:06:30,960
treated equally to devon ops at the big

00:06:28,960 --> 00:06:32,960
kids business table makes it lose sight

00:06:30,960 --> 00:06:34,960
of organizational priorities

00:06:32,960 --> 00:06:37,120
it's so intense on maintaining control

00:06:34,960 --> 00:06:39,360
and feeling important that it actually

00:06:37,120 --> 00:06:41,039
architects sub-optimal strategy that

00:06:39,360 --> 00:06:42,479
keeps it from earning its seat at the

00:06:41,039 --> 00:06:44,160
table

00:06:42,479 --> 00:06:45,759
bombos sex histrionics around

00:06:44,160 --> 00:06:47,360
desperately desiring feeling control

00:06:45,759 --> 00:06:47,680
make infosec quite like someone who's

00:06:47,360 --> 00:06:49,680
like

00:06:47,680 --> 00:06:51,280
statically gripping a wheel even the

00:06:49,680 --> 00:06:52,880
wheel isn't attached to anything

00:06:51,280 --> 00:06:54,319
and all that fake steering maybe makes

00:06:52,880 --> 00:06:56,319
you feel like you're doing something but

00:06:54,319 --> 00:06:58,240
you're actually staying stagnant

00:06:56,319 --> 00:07:00,319
and if you're staying stagnant there's

00:06:58,240 --> 00:07:03,840
no way you're actually promoting safety

00:07:00,319 --> 00:07:03,840
or security in your systems

00:07:03,919 --> 00:07:07,199
as shown in dr nicole forsgren's state

00:07:06,080 --> 00:07:08,639
of devops research

00:07:07,199 --> 00:07:10,560
the elite organizations who have the

00:07:08,639 --> 00:07:11,919
fastest deploy frequency and shortest

00:07:10,560 --> 00:07:13,520
lead time for changes

00:07:11,919 --> 00:07:15,039
also actually exhibit the lowest change

00:07:13,520 --> 00:07:15,440
failure rates and shortest time to

00:07:15,039 --> 00:07:17,599
restore

00:07:15,440 --> 00:07:19,520
service that is speed and stability are

00:07:17,599 --> 00:07:20,960
positively correlated

00:07:19,520 --> 00:07:22,880
especially when you consider the typical

00:07:20,960 --> 00:07:23,680
ratio of security engineers to software

00:07:22,880 --> 00:07:25,280
engineers

00:07:23,680 --> 00:07:28,400
it's basically impossible to scale any

00:07:25,280 --> 00:07:29,919
sort of like heavy approval process

00:07:28,400 --> 00:07:31,840
in fact like the organizations that have

00:07:29,919 --> 00:07:33,680
the most restrictions in place and which

00:07:31,840 --> 00:07:35,199
are in theory like the most careful

00:07:33,680 --> 00:07:36,639
aren't actually the ones that are most

00:07:35,199 --> 00:07:38,560
stable because they experience the

00:07:36,639 --> 00:07:40,720
highest change failure rates

00:07:38,560 --> 00:07:42,639
so these seemingly you know careful and

00:07:40,720 --> 00:07:45,120
cautious organizations actually see

00:07:42,639 --> 00:07:46,639
46 to 60 percent of their deployed

00:07:45,120 --> 00:07:48,319
changes result in either

00:07:46,639 --> 00:07:52,080
degraded service or something that

00:07:48,319 --> 00:07:52,080
requires subsequent remediation

00:07:52,160 --> 00:07:55,599
ultimately the lesson here is the more

00:07:54,080 --> 00:07:57,680
hoops through which you jump

00:07:55,599 --> 00:08:00,400
the more opportunities there are to fall

00:07:57,680 --> 00:08:00,400
on your face

00:08:01,599 --> 00:08:04,800
for instance if there's a nasty like

00:08:03,199 --> 00:08:06,160
remote code execution vulnerability and

00:08:04,800 --> 00:08:06,960
a library that's critical for one of

00:08:06,160 --> 00:08:08,879
your product

00:08:06,960 --> 00:08:10,160
production systems you want to fix that

00:08:08,879 --> 00:08:11,919
quickly right

00:08:10,160 --> 00:08:13,599
so a heavy and inconvenient change

00:08:11,919 --> 00:08:15,120
management process will actually make it

00:08:13,599 --> 00:08:16,720
harder to deploy a patch

00:08:15,120 --> 00:08:18,400
which means your production systems will

00:08:16,720 --> 00:08:20,000
languish with both security and

00:08:18,400 --> 00:08:21,919
stability at risk

00:08:20,000 --> 00:08:24,000
but if your process is speedy you can

00:08:21,919 --> 00:08:26,160
push out patches and fixes and other

00:08:24,000 --> 00:08:27,919
sorts of enhancements much faster which

00:08:26,160 --> 00:08:29,759
allows for continuous improvement

00:08:27,919 --> 00:08:32,160
of your system stability and security

00:08:29,759 --> 00:08:32,160
instead

00:08:32,560 --> 00:08:35,760
ultimately like a fortress of approvals

00:08:34,320 --> 00:08:37,760
and red tape and

00:08:35,760 --> 00:08:39,519
nebulous policy doesn't help your

00:08:37,760 --> 00:08:41,440
security program as much as ensuring

00:08:39,519 --> 00:08:43,919
that you can adapt your security program

00:08:41,440 --> 00:08:46,640
as your system's environments evolve

00:08:43,919 --> 00:08:47,200
you can test and fix things quickly and

00:08:46,640 --> 00:08:49,120
easily

00:08:47,200 --> 00:08:51,279
you can actually actually bolster

00:08:49,120 --> 00:08:54,720
security far more than any sort of like

00:08:51,279 --> 00:08:56,480
extra strict okay so we can probably

00:08:54,720 --> 00:08:58,399
agree security theater is like not a

00:08:56,480 --> 00:08:59,760
great time so how do we spot security

00:08:58,399 --> 00:09:02,800
theaters red flags

00:08:59,760 --> 00:09:04,320
and is there a better way ahead yes

00:09:02,800 --> 00:09:06,959
there is

00:09:04,320 --> 00:09:08,160
this brings us to act two which is

00:09:06,959 --> 00:09:11,360
theater and chaos

00:09:08,160 --> 00:09:12,640
and fisticuffs so there's conflict born

00:09:11,360 --> 00:09:14,240
from how we should treat security

00:09:12,640 --> 00:09:15,519
failure and where accountability for

00:09:14,240 --> 00:09:17,519
security rests

00:09:15,519 --> 00:09:19,680
on one side we have security theater and

00:09:17,519 --> 00:09:20,720
on the other there stands security chaos

00:09:19,680 --> 00:09:24,160
engineering

00:09:20,720 --> 00:09:26,080
we're exploring these tensions presently

00:09:24,160 --> 00:09:27,760
the tldr on security cams engineering is

00:09:26,080 --> 00:09:29,200
that it seeks to leverage failure as a

00:09:27,760 --> 00:09:30,959
learning opportunity

00:09:29,200 --> 00:09:32,399
and as a chance to build knowledge of

00:09:30,959 --> 00:09:34,320
systems level dynamics

00:09:32,399 --> 00:09:36,399
towards continuously improving systems

00:09:34,320 --> 00:09:37,760
resilience i'm actually releasing a

00:09:36,399 --> 00:09:38,560
report on this topic with my co-author

00:09:37,760 --> 00:09:40,080
aaron reinhardt

00:09:38,560 --> 00:09:42,560
might actually be out by the time this

00:09:40,080 --> 00:09:45,279
airs by o'reilly so check that out if

00:09:42,560 --> 00:09:47,839
you want a deeper dive into the topic

00:09:45,279 --> 00:09:48,959
again security uh theaters five isn't

00:09:47,839 --> 00:09:50,720
nearly as chill

00:09:48,959 --> 00:09:52,880
they would like to feel absolutely harsh

00:09:50,720 --> 00:09:54,560
or mellow so the security team that acts

00:09:52,880 --> 00:09:56,160
in the security theater troop

00:09:54,560 --> 00:09:58,080
wants to avoid failure by any means

00:09:56,160 --> 00:10:01,279
necessary and punishes chosen

00:09:58,080 --> 00:10:03,040
humans involved when incidents occur

00:10:01,279 --> 00:10:05,360
obviously these are odds so this brings

00:10:03,040 --> 00:10:08,399
us to scene one and act two

00:10:05,360 --> 00:10:10,000
the duel let's do some comparing

00:10:08,399 --> 00:10:11,600
teams to adopt security cast engineering

00:10:10,000 --> 00:10:13,360
are very clue about things

00:10:11,600 --> 00:10:15,120
they radically accept that failure is a

00:10:13,360 --> 00:10:17,279
part of any sort of complex system that

00:10:15,120 --> 00:10:18,959
continuously changes

00:10:17,279 --> 00:10:20,480
they don't expect to know all the ways

00:10:18,959 --> 00:10:22,800
things can fail so they instead

00:10:20,480 --> 00:10:24,480
pursue and incentivize feedback loops

00:10:22,800 --> 00:10:27,360
and experimentation to uncover

00:10:24,480 --> 00:10:29,200
evidence of how systems behave teams who

00:10:27,360 --> 00:10:30,959
adopt security theater though are pretty

00:10:29,200 --> 00:10:32,320
stubborn they lament that if only

00:10:30,959 --> 00:10:34,320
you know humans followed all of the

00:10:32,320 --> 00:10:36,959
infosec laws and the kingdom perfectly

00:10:34,320 --> 00:10:38,800
incidents wouldn't happen these are lazy

00:10:36,959 --> 00:10:40,959
or stupider the aforementioned bad

00:10:38,800 --> 00:10:42,399
apples so they deserve to be ruled with

00:10:40,959 --> 00:10:44,079
sort of iron fist

00:10:42,399 --> 00:10:46,079
despite the fact that policies are never

00:10:44,079 --> 00:10:47,120
going to be globally applied given the

00:10:46,079 --> 00:10:50,720
reality of context

00:10:47,120 --> 00:10:52,240
nuance another comparison is security

00:10:50,720 --> 00:10:54,399
programs following security chaos

00:10:52,240 --> 00:10:56,160
engineering are designed to minimize the

00:10:54,399 --> 00:10:58,320
impact of incidents by making incident

00:10:56,160 --> 00:10:59,120
recovery as efficient and graceful as

00:10:58,320 --> 00:11:00,800
possible

00:10:59,120 --> 00:11:02,560
so teams know that know that pointing

00:11:00,800 --> 00:11:04,240
fingers is useless and that conducting

00:11:02,560 --> 00:11:04,720
experiments to power feedback loops

00:11:04,240 --> 00:11:07,519
instead

00:11:04,720 --> 00:11:08,800
is incredibly valuable security programs

00:11:07,519 --> 00:11:10,399
though that are following a security

00:11:08,800 --> 00:11:12,399
theater approach use technology and

00:11:10,399 --> 00:11:14,560
policy to eliminate the possibility of

00:11:12,399 --> 00:11:16,079
failure if they can which they can't

00:11:14,560 --> 00:11:18,160
and allow for easier blame when

00:11:16,079 --> 00:11:20,000
incidents happen but no one can

00:11:18,160 --> 00:11:21,200
enumerate all possible failure in any

00:11:20,000 --> 00:11:23,279
sort of complex system

00:11:21,200 --> 00:11:24,480
and keep any failure from happening with

00:11:23,279 --> 00:11:27,920
control so you know

00:11:24,480 --> 00:11:28,640
i guess we'll see teams pursuing

00:11:27,920 --> 00:11:30,720
circadian

00:11:28,640 --> 00:11:32,720
engineering want to unify accountability

00:11:30,720 --> 00:11:33,279
responsibility by handing off acceptance

00:11:32,720 --> 00:11:34,800
of risk

00:11:33,279 --> 00:11:36,320
to the engineering teams that are

00:11:34,800 --> 00:11:38,560
actually performing work

00:11:36,320 --> 00:11:39,519
which we refer to as localized change

00:11:38,560 --> 00:11:41,519
approvals

00:11:39,519 --> 00:11:43,519
so the security team instead operates as

00:11:41,519 --> 00:11:44,640
an advisor sharing knowledge as widely

00:11:43,519 --> 00:11:46,320
as possible

00:11:44,640 --> 00:11:48,079
in the o'reilly report we also talk

00:11:46,320 --> 00:11:50,880
about the idea of security champions

00:11:48,079 --> 00:11:52,399
very closely related teams performing

00:11:50,880 --> 00:11:54,240
security theater though in contrast

00:11:52,399 --> 00:11:56,399
are really thirsty for bottlenecks and

00:11:54,240 --> 00:11:58,000
silos so the security team is generally

00:11:56,399 --> 00:11:59,760
in charge of approving or denying

00:11:58,000 --> 00:12:01,120
changes and releases despite the fact

00:11:59,760 --> 00:12:03,279
that they're actually divorced from the

00:12:01,120 --> 00:12:05,120
systems in the work itself

00:12:03,279 --> 00:12:06,880
importantly though this bottleneck and

00:12:05,120 --> 00:12:07,680
this requirement for security approvals

00:12:06,880 --> 00:12:10,160
is actually seen

00:12:07,680 --> 00:12:11,200
as providing security in itself even

00:12:10,160 --> 00:12:11,920
though neither of those are actually

00:12:11,200 --> 00:12:15,200
security

00:12:11,920 --> 00:12:16,560
outcomes as far as culture security cast

00:12:15,200 --> 00:12:17,440
engineering is all about a culture of

00:12:16,560 --> 00:12:19,760
security uh

00:12:17,440 --> 00:12:21,839
culture curiosity that's always down for

00:12:19,760 --> 00:12:23,120
like a healthy retrospective and an open

00:12:21,839 --> 00:12:25,680
discussion of oofs

00:12:23,120 --> 00:12:27,200
even big moves and teams feel super safe

00:12:25,680 --> 00:12:28,560
coming forward about security issues

00:12:27,200 --> 00:12:29,920
because they know they won't be

00:12:28,560 --> 00:12:31,360
ridiculed or blamed

00:12:29,920 --> 00:12:33,920
and also they know that problems can

00:12:31,360 --> 00:12:35,279
actually be solved collaboratively

00:12:33,920 --> 00:12:37,600
security theater of course is the

00:12:35,279 --> 00:12:39,680
opposite because of its fear of change

00:12:37,600 --> 00:12:41,519
that also means it has a fear of

00:12:39,680 --> 00:12:42,959
learning so teams would rather keep

00:12:41,519 --> 00:12:44,959
security issues quiet

00:12:42,959 --> 00:12:46,959
and hidden in secret so they don't face

00:12:44,959 --> 00:12:50,800
retribution or disruption

00:12:46,959 --> 00:12:52,480
honestly it's all around a bad vibe

00:12:50,800 --> 00:12:54,079
and finally uh security teams with the

00:12:52,480 --> 00:12:54,720
security cast engineering approach are

00:12:54,079 --> 00:12:56,240
all about

00:12:54,720 --> 00:12:58,399
providing a guiding light so that

00:12:56,240 --> 00:13:00,560
unfamiliar situations can be approached

00:12:58,399 --> 00:13:01,920
constructively they welcome audience

00:13:00,560 --> 00:13:03,760
participation and challenging

00:13:01,920 --> 00:13:05,360
assumptions about security strategy

00:13:03,760 --> 00:13:07,600
because it's accepted that security

00:13:05,360 --> 00:13:09,839
strategy has to evolve as your systems

00:13:07,600 --> 00:13:12,240
and your environmental context involves

00:13:09,839 --> 00:13:13,920
evolves but security teams with a

00:13:12,240 --> 00:13:15,360
security theater approach instead are a

00:13:13,920 --> 00:13:17,200
stickler for rules and they find the

00:13:15,360 --> 00:13:18,560
status quo very comforting

00:13:17,200 --> 00:13:20,480
they would much rather copy-paste

00:13:18,560 --> 00:13:22,240
policies over from the world they're

00:13:20,480 --> 00:13:23,360
familiar with to this new scary world

00:13:22,240 --> 00:13:24,880
which is why you see things like

00:13:23,360 --> 00:13:27,440
container firewalls which

00:13:24,880 --> 00:13:28,480
don't make a lot of sense so ultimately

00:13:27,440 --> 00:13:30,880
do you want to thrive

00:13:28,480 --> 00:13:32,720
in the real world or do you want to try

00:13:30,880 --> 00:13:35,120
to survive in security theater's

00:13:32,720 --> 00:13:36,320
fantasy world but security chaos

00:13:35,120 --> 00:13:38,320
engineering's teams are ultimately

00:13:36,320 --> 00:13:39,600
accepting reality and especially the

00:13:38,320 --> 00:13:41,440
reality that security just

00:13:39,600 --> 00:13:43,199
isn't the most important priority to

00:13:41,440 --> 00:13:44,720
most organizations

00:13:43,199 --> 00:13:46,720
it's really about you know building a

00:13:44,720 --> 00:13:47,600
custom base like fueling revenue growth

00:13:46,720 --> 00:13:50,079
improving

00:13:47,600 --> 00:13:51,279
profitability and so forth with security

00:13:50,079 --> 00:13:52,959
theater it's almost like teams are

00:13:51,279 --> 00:13:54,959
method acting so hard that they start to

00:13:52,959 --> 00:13:56,639
believe in this fantasyland

00:13:54,959 --> 00:13:58,399
and they start to feel that security

00:13:56,639 --> 00:14:00,240
actually is the top priority

00:13:58,399 --> 00:14:02,079
and you know there's this elaborate song

00:14:00,240 --> 00:14:05,360
and dance required to fulfill it

00:14:02,079 --> 00:14:06,800
it's just not true so those who actually

00:14:05,360 --> 00:14:07,279
adopt a security cast engineering

00:14:06,800 --> 00:14:09,760
approach

00:14:07,279 --> 00:14:11,199
want to produce meaningful outcomes they

00:14:09,760 --> 00:14:12,560
don't care about doing something just

00:14:11,199 --> 00:14:14,639
for appearances sake

00:14:12,560 --> 00:14:16,639
again going back to that blog post i

00:14:14,639 --> 00:14:18,480
mentioned on yolo second fomosec

00:14:16,639 --> 00:14:20,079
security chaos engineering also doesn't

00:14:18,480 --> 00:14:22,320
encourage uh i

00:14:20,079 --> 00:14:24,160
feel like caring about feeling important

00:14:22,320 --> 00:14:24,480
or buying the latest security shiny just

00:14:24,160 --> 00:14:26,639
because

00:14:24,480 --> 00:14:28,240
everyone else is doing it that's really

00:14:26,639 --> 00:14:29,600
important

00:14:28,240 --> 00:14:31,440
the other thing is that most engineering

00:14:29,600 --> 00:14:33,519
teams already understand that

00:14:31,440 --> 00:14:34,639
bugs that could disrupt uh performance

00:14:33,519 --> 00:14:36,079
are inevitable so they try to

00:14:34,639 --> 00:14:38,320
continually test and refine their

00:14:36,079 --> 00:14:40,320
systems to get the results they want

00:14:38,320 --> 00:14:42,399
security chaos engineering thinks super

00:14:40,320 --> 00:14:44,240
similarly to this which means that

00:14:42,399 --> 00:14:46,399
it's actually aligning to how developers

00:14:44,240 --> 00:14:48,079
and operators already operate

00:14:46,399 --> 00:14:50,160
so security bugs exist this

00:14:48,079 --> 00:14:50,480
configurations are a fact of life keys

00:14:50,160 --> 00:14:51,760
are

00:14:50,480 --> 00:14:53,760
accidentally going to be pasted into

00:14:51,760 --> 00:14:56,000
code it's quite silly to think that just

00:14:53,760 --> 00:14:59,040
because some security checks passed once

00:14:56,000 --> 00:15:00,800
that everything is perfect

00:14:59,040 --> 00:15:02,399
on the flip side joining the security

00:15:00,800 --> 00:15:04,639
theater actually results in a dangerous

00:15:02,399 --> 00:15:06,639
and self-fulfilling prophecy

00:15:04,639 --> 00:15:07,920
if everyone is treated like a bad apple

00:15:06,639 --> 00:15:09,839
they're more likely to hide

00:15:07,920 --> 00:15:11,760
and keep secrets which ironically

00:15:09,839 --> 00:15:15,839
actually turns the innocence

00:15:11,760 --> 00:15:17,040
into bad apples that's terrible

00:15:15,839 --> 00:15:18,320
instead they're going to now start

00:15:17,040 --> 00:15:19,760
covering up mistakes and they're going

00:15:18,320 --> 00:15:21,199
to be too scared or resentful to

00:15:19,760 --> 00:15:23,839
actually raise concerns which

00:15:21,199 --> 00:15:25,760
totally dismantles your feedback loop

00:15:23,839 --> 00:15:27,360
and honestly it also erodes the security

00:15:25,760 --> 00:15:29,199
team's political capital which

00:15:27,360 --> 00:15:30,959
as much as we would like that not to

00:15:29,199 --> 00:15:34,000
exist it's a fact of most

00:15:30,959 --> 00:15:35,600
like organizational realities and so

00:15:34,000 --> 00:15:37,279
without this feedback loop how can you

00:15:35,600 --> 00:15:39,199
actually be certain that your security

00:15:37,279 --> 00:15:41,680
program is working

00:15:39,199 --> 00:15:42,639
this brings us to scene two about

00:15:41,680 --> 00:15:44,160
judgment

00:15:42,639 --> 00:15:46,000
security chaos engineering welcomes

00:15:44,160 --> 00:15:48,800
objective judgment whereas security

00:15:46,000 --> 00:15:51,360
theater would rather bribe the judges

00:15:48,800 --> 00:15:52,800
so classic a red flag of like any sort

00:15:51,360 --> 00:15:54,639
of security theater is that it's nearly

00:15:52,800 --> 00:15:55,279
impossible to directly tie costs to

00:15:54,639 --> 00:15:57,120
benefits

00:15:55,279 --> 00:15:58,399
there's often a lot of hand waving and

00:15:57,120 --> 00:16:00,639
purposely vague math

00:15:58,399 --> 00:16:02,079
at all it's sometimes alarming at least

00:16:00,639 --> 00:16:04,320
in my experience to discover

00:16:02,079 --> 00:16:05,680
or often rediscover how few infosec

00:16:04,320 --> 00:16:07,360
leaders and professionals can actually

00:16:05,680 --> 00:16:09,279
articulate the roi

00:16:07,360 --> 00:16:10,560
on the dollar spent in their security

00:16:09,279 --> 00:16:11,920
programs

00:16:10,560 --> 00:16:14,240
i think we can all understand that not

00:16:11,920 --> 00:16:15,440
being able to how to uh articulate how

00:16:14,240 --> 00:16:16,959
dollar spent transforming to

00:16:15,440 --> 00:16:18,079
organizational benefits is super

00:16:16,959 --> 00:16:19,519
problematic

00:16:18,079 --> 00:16:20,959
so moving towards security chaos

00:16:19,519 --> 00:16:21,519
engineering is actually a movement

00:16:20,959 --> 00:16:23,360
towards

00:16:21,519 --> 00:16:25,120
creating success criteria so you can

00:16:23,360 --> 00:16:26,160
keep track of the efficacy of your

00:16:25,120 --> 00:16:29,120
security program

00:16:26,160 --> 00:16:30,560
in a quantifiable way so it's obvious

00:16:29,120 --> 00:16:32,320
but you either want to prove that you've

00:16:30,560 --> 00:16:33,440
avoided a monetary loss which is more

00:16:32,320 --> 00:16:35,680
common in infosec

00:16:33,440 --> 00:16:36,880
or that you're helping your organization

00:16:35,680 --> 00:16:38,800
make more money

00:16:36,880 --> 00:16:40,959
definitely rare in infosec but i think

00:16:38,800 --> 00:16:42,560
we can get there

00:16:40,959 --> 00:16:43,839
problem is this calculation also needs

00:16:42,560 --> 00:16:44,639
to consider the effects that your

00:16:43,839 --> 00:16:46,959
security program

00:16:44,639 --> 00:16:48,639
has on other parts of the organization

00:16:46,959 --> 00:16:50,880
in economics literature this is what's

00:16:48,639 --> 00:16:52,639
referred to as negative externalities

00:16:50,880 --> 00:16:55,199
so drawing on an example in the physical

00:16:52,639 --> 00:16:56,880
security domain one study by blalock

00:16:55,199 --> 00:16:58,720
and their colleagues suggested that road

00:16:56,880 --> 00:17:00,800
fatalities actually increased as a

00:16:58,720 --> 00:17:02,399
result of airport security theater

00:17:00,800 --> 00:17:04,079
because more people decided to try

00:17:02,399 --> 00:17:06,319
rather than deal with all of that pain

00:17:04,079 --> 00:17:08,400
at the airport

00:17:06,319 --> 00:17:10,319
so security metrics as a result of all

00:17:08,400 --> 00:17:12,400
this are often way too tone-deaf to what

00:17:10,319 --> 00:17:14,079
the rest of the organization is doing

00:17:12,400 --> 00:17:16,000
no one cares about your number of

00:17:14,079 --> 00:17:17,600
phishing link clicks just like no one

00:17:16,000 --> 00:17:19,600
cares about line of code written on the

00:17:17,600 --> 00:17:22,079
engineering side

00:17:19,600 --> 00:17:23,600
it's a huge huge mistake not to include

00:17:22,079 --> 00:17:24,799
these negative externalities in your

00:17:23,600 --> 00:17:26,480
measurement as it keeps you from

00:17:24,799 --> 00:17:29,600
measuring security efficacy

00:17:26,480 --> 00:17:31,440
holistically any measurement of infosec

00:17:29,600 --> 00:17:32,960
efficacy needs to look at other teams

00:17:31,440 --> 00:17:34,160
measurements to track whether there's

00:17:32,960 --> 00:17:35,840
increased friction

00:17:34,160 --> 00:17:37,919
or some sort of inconvenience that's

00:17:35,840 --> 00:17:39,760
being engendered

00:17:37,919 --> 00:17:41,440
so an increase for instance of code

00:17:39,760 --> 00:17:44,160
review coverage by the security program

00:17:41,440 --> 00:17:45,760
could actually be a great thing but is

00:17:44,160 --> 00:17:47,280
it actually great if critical software

00:17:45,760 --> 00:17:47,840
delivery metrics like lead time or

00:17:47,280 --> 00:17:50,799
deploy

00:17:47,840 --> 00:17:52,320
frequency are being hurt as a result so

00:17:50,799 --> 00:17:54,000
it's obviously ridiculous to assume that

00:17:52,320 --> 00:17:55,919
any change in the security program is

00:17:54,000 --> 00:17:57,440
like uh or any change in an engineering

00:17:55,919 --> 00:17:58,880
metric is the direct result of the

00:17:57,440 --> 00:18:00,559
security program right

00:17:58,880 --> 00:18:02,559
the point is that these metrics open up

00:18:00,559 --> 00:18:04,160
the opportunity for investigation

00:18:02,559 --> 00:18:06,080
you want to investigate security's

00:18:04,160 --> 00:18:07,919
impact on software delivery and ensure

00:18:06,080 --> 00:18:09,360
there aren't any negative consequences

00:18:07,919 --> 00:18:10,640
to the policies and programs you're

00:18:09,360 --> 00:18:12,400
instituting

00:18:10,640 --> 00:18:13,760
because otherwise those might appear

00:18:12,400 --> 00:18:16,720
like security improvements

00:18:13,760 --> 00:18:18,240
when they're actually not as is likely

00:18:16,720 --> 00:18:19,360
obvious like this is going to require

00:18:18,240 --> 00:18:21,200
collaboration both

00:18:19,360 --> 00:18:22,799
between security and software

00:18:21,200 --> 00:18:25,200
engineering the mutual

00:18:22,799 --> 00:18:25,840
benefits are right for the picking as is

00:18:25,200 --> 00:18:27,919
explored

00:18:25,840 --> 00:18:30,240
in that ireland report i mentioned on

00:18:27,919 --> 00:18:34,559
security cams engineering

00:18:30,240 --> 00:18:36,080
so now we reach the grand finale

00:18:34,559 --> 00:18:37,679
so security theater prioritizes

00:18:36,080 --> 00:18:40,160
gatekeeping it prefers to

00:18:37,679 --> 00:18:40,880
punish humans for supposedly causing

00:18:40,160 --> 00:18:42,640
failures

00:18:40,880 --> 00:18:44,400
even if it leads to a fear of learning

00:18:42,640 --> 00:18:45,440
that actually stifles continuous

00:18:44,400 --> 00:18:48,320
improvement

00:18:45,440 --> 00:18:49,840
and that's what we all want so when

00:18:48,320 --> 00:18:52,480
security teams serve as this kind of

00:18:49,840 --> 00:18:53,840
uh you know an authoritarian external

00:18:52,480 --> 00:18:56,240
approval

00:18:53,840 --> 00:18:58,080
approver bottlenecks are inevitable and

00:18:56,240 --> 00:18:59,520
this friction in turns actually leads to

00:18:58,080 --> 00:19:01,600
longer deploy times and larger

00:18:59,520 --> 00:19:03,120
deployment sizes both of which seriously

00:19:01,600 --> 00:19:06,400
jeopardize stability

00:19:03,120 --> 00:19:08,480
and thus security so again continuous

00:19:06,400 --> 00:19:10,960
improvement is our goal for systems

00:19:08,480 --> 00:19:12,720
uh performance and it also should be for

00:19:10,960 --> 00:19:14,480
system stability as well

00:19:12,720 --> 00:19:16,080
and security chaos engineering is the

00:19:14,480 --> 00:19:17,840
path to get there

00:19:16,080 --> 00:19:19,280
plus i mean we constantly hear about how

00:19:17,840 --> 00:19:21,120
attackers are constantly evolving their

00:19:19,280 --> 00:19:22,720
methods and they're so far ahead

00:19:21,120 --> 00:19:25,679
so shouldn't our defenders and our

00:19:22,720 --> 00:19:29,120
defense continually be evolving too

00:19:25,679 --> 00:19:30,960
makes sense right so security teams

00:19:29,120 --> 00:19:32,720
as we discuss in the report can be freed

00:19:30,960 --> 00:19:34,799
from the burden of heavy-handed control

00:19:32,720 --> 00:19:36,559
and they can instead become advisors

00:19:34,799 --> 00:19:37,280
allowing them to focus on more strategic

00:19:36,559 --> 00:19:38,559
work

00:19:37,280 --> 00:19:40,000
product and engineering teams are

00:19:38,559 --> 00:19:41,679
actually the ones that start to accept

00:19:40,000 --> 00:19:42,720
accountability for all these security

00:19:41,679 --> 00:19:44,000
changes

00:19:42,720 --> 00:19:45,760
and importantly cleaning up any

00:19:44,000 --> 00:19:47,919
resulting impact of these changes

00:19:45,760 --> 00:19:49,760
which makes for healthier security for

00:19:47,919 --> 00:19:52,559
everyone

00:19:49,760 --> 00:19:54,160
so i hope today all of you are very

00:19:52,559 --> 00:19:55,919
motivated to close the curtain on

00:19:54,160 --> 00:19:57,919
security theater and let speed and

00:19:55,919 --> 00:19:59,520
stability instead flow in concert

00:19:57,919 --> 00:20:01,760
through the security chaos engineering

00:19:59,520 --> 00:20:02,480
approach i always like to close with a

00:20:01,760 --> 00:20:05,600
quote

00:20:02,480 --> 00:20:07,200
so i'll invoke chuck paul yuck

00:20:05,600 --> 00:20:08,720
classic kind of monologue tradition at

00:20:07,200 --> 00:20:09,520
the theater people don't want their

00:20:08,720 --> 00:20:11,360
lives fixed

00:20:09,520 --> 00:20:13,440
nobody wants their problem solved their

00:20:11,360 --> 00:20:14,240
dramas their distractions their stories

00:20:13,440 --> 00:20:16,080
resolved

00:20:14,240 --> 00:20:17,520
their mess is cleaned up because what

00:20:16,080 --> 00:20:20,799
would they have left

00:20:17,520 --> 00:20:22,480
just a big scary unknown again

00:20:20,799 --> 00:20:24,000
um this was only surface dive in

00:20:22,480 --> 00:20:25,039
security gas engineering which we're

00:20:24,000 --> 00:20:27,200
really excited about

00:20:25,039 --> 00:20:29,200
um so check out the o'reilly report i

00:20:27,200 --> 00:20:31,200
wrote with my co-author aaron reinhart

00:20:29,200 --> 00:20:33,679
it is available for free should be at

00:20:31,200 --> 00:20:35,840
the link by the time this airs

00:20:33,679 --> 00:20:37,360
so download and dive into it and again

00:20:35,840 --> 00:20:40,640
hopefully close the theater

00:20:37,360 --> 00:20:45,679
at close the curtain on security theater

00:20:40,640 --> 00:20:45,679

YouTube URL: https://www.youtube.com/watch?v=Z8scunfsgRQ


