Title: Intro: Provider IBM Cloud - Sahdev Zala & Richard Theis, IBM
Publication date: 2020-09-11
Playlist: Cloud Native + Open Source Virtual Summit China 2020
Description: 
	Don’t miss out! Join us at our upcoming events: EnvoyCon Virtual on October 15 and KubeCon + CloudNativeCon North America 2020 Virtual from November 17-20. Learn more at https://kubecon.io The conferences feature presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects. 

Intro: Provider IBM Cloud - Sahdev Zala & Richard Theis, IBM 

The Provider IBM Cloud is a subproject of the Cloud Provider SIG. In this session, the Provider IBM Cloud leads will provide an introduction of the project, and brief about the activities and GitHub repo on Kubernetes Cluster API Provider IBM Cloud. This will be followed by an overview of IBM Provider used by IBM Cloud Kubernetes Service (IKS) and Red Hat OpenShift on IBM Cloud, and how the provider leverages the Kubernetes Cloud Controller Manager. The session should be informative to anyone with interest in the Kubernetes Provider IBM Cloud subproject. 

https://sched.co/cpAA
Captions: 
	00:00:01,680 --> 00:00:06,799
nihao my name is sadhu zala

00:00:03,840 --> 00:00:07,600
i am a open source uh contributor

00:00:06,799 --> 00:00:10,960
developer

00:00:07,600 --> 00:00:11,599
at ibm and i contribute to kubernetes i

00:00:10,960 --> 00:00:13,599
am

00:00:11,599 --> 00:00:15,519
a co-chair for this project called

00:00:13,599 --> 00:00:16,480
provider ibm cloud which is a sub

00:00:15,519 --> 00:00:18,320
project

00:00:16,480 --> 00:00:19,760
of kubernetes special interest group

00:00:18,320 --> 00:00:22,640
cloud provider

00:00:19,760 --> 00:00:24,240
i'm also a maintainer for the hcd

00:00:22,640 --> 00:00:26,080
project

00:00:24,240 --> 00:00:27,680
uh richard would you like to introduce

00:00:26,080 --> 00:00:31,279
yourself please

00:00:27,680 --> 00:00:32,800
yeah i'm richard theis i work on the ibm

00:00:31,279 --> 00:00:35,520
cloud kubernetes service

00:00:32,800 --> 00:00:36,960
and red hat openshift and ibm cloud

00:00:35,520 --> 00:00:39,440
managed services

00:00:36,960 --> 00:00:40,640
and also i uh co-chair of the provider

00:00:39,440 --> 00:00:42,640
ibm cloud

00:00:40,640 --> 00:00:44,239
working on primarily our cloud provider

00:00:42,640 --> 00:00:48,960
component for

00:00:44,239 --> 00:00:51,760
the ibm cloud kubernetes services

00:00:48,960 --> 00:00:52,320
thank you richard so welcome to this

00:00:51,760 --> 00:00:55,360
talk

00:00:52,320 --> 00:00:57,760
uh the agenda uh

00:00:55,360 --> 00:00:58,559
it's it's a it's a light agent uh we'll

00:00:57,760 --> 00:01:01,520
talk more

00:00:58,559 --> 00:01:02,480
a lot more i think uh i will provide an

00:01:01,520 --> 00:01:05,439
overview of

00:01:02,480 --> 00:01:06,080
uh the sig club water uh and about this

00:01:05,439 --> 00:01:09,200
provider

00:01:06,080 --> 00:01:11,439
ibm cloud sub project uh the structure

00:01:09,200 --> 00:01:13,439
and activities and then

00:01:11,439 --> 00:01:15,840
talk a little bit about the cluster api

00:01:13,439 --> 00:01:18,320
provider ibm cloud which is um

00:01:15,840 --> 00:01:19,439
one of the git repository we have under

00:01:18,320 --> 00:01:24,840
this project

00:01:19,439 --> 00:01:26,320
and then we'll talk about ibm cloud

00:01:24,840 --> 00:01:29,439
provider

00:01:26,320 --> 00:01:31,600
alrighty so uh sig cloud provider

00:01:29,439 --> 00:01:32,560
is one of uh the special interest group

00:01:31,600 --> 00:01:36,240
in kubernetes

00:01:32,560 --> 00:01:39,119
it owns it owns the code

00:01:36,240 --> 00:01:40,159
uh for the cloud for interface and

00:01:39,119 --> 00:01:42,880
related work

00:01:40,159 --> 00:01:43,920
so as you may know uh that for

00:01:42,880 --> 00:01:46,720
kubernetes to run

00:01:43,920 --> 00:01:48,240
on a provider-specific cloud it needs

00:01:46,720 --> 00:01:51,720
certain functionalities

00:01:48,240 --> 00:01:55,200
uh that are provided by control

00:01:51,720 --> 00:01:58,399
loops uh for example you know

00:01:55,200 --> 00:02:01,600
uh for the node to find the zone and ip

00:01:58,399 --> 00:02:04,640
or load balancer uh

00:02:01,600 --> 00:02:07,040
related control loops so

00:02:04,640 --> 00:02:09,520
these control loops were part of the

00:02:07,040 --> 00:02:11,520
kubernetes core

00:02:09,520 --> 00:02:13,599
but eventually the community thought

00:02:11,520 --> 00:02:14,800
it's good to decouple it from there so

00:02:13,599 --> 00:02:16,800
that's where

00:02:14,800 --> 00:02:18,319
the cloud provider interface comes in

00:02:16,800 --> 00:02:21,360
picture

00:02:18,319 --> 00:02:24,319
it is now

00:02:21,360 --> 00:02:24,720
hosted on the github repository on its

00:02:24,319 --> 00:02:27,760
own

00:02:24,720 --> 00:02:29,520
on the cloud provider github repository

00:02:27,760 --> 00:02:30,800
and the cloudford interface is

00:02:29,520 --> 00:02:32,959
responsible for running

00:02:30,800 --> 00:02:34,480
all the cloud provider specific control

00:02:32,959 --> 00:02:37,599
loops

00:02:34,480 --> 00:02:40,879
richard will talk more about uh uh

00:02:37,599 --> 00:02:44,640
architecture based on uh on this called

00:02:40,879 --> 00:02:45,200
ccm or cloud control manager uh but for

00:02:44,640 --> 00:02:48,000
now

00:02:45,200 --> 00:02:49,519
uh continuing with cloud provider c uh

00:02:48,000 --> 00:02:51,280
it also owns

00:02:49,519 --> 00:02:52,560
all the sub projects uh they were

00:02:51,280 --> 00:02:54,959
formerly uh

00:02:52,560 --> 00:02:56,400
owned by uh different sigs you know they

00:02:54,959 --> 00:03:00,000
were there were like

00:02:56,400 --> 00:03:02,239
uh six uh uh uh dedicated

00:03:00,000 --> 00:03:04,080
uh sigs for different cloud provider for

00:03:02,239 --> 00:03:07,920
example ckws

00:03:04,080 --> 00:03:11,920
or c azure or you know gcp or

00:03:07,920 --> 00:03:15,120
seek ibm cloud and uh there were one for

00:03:11,920 --> 00:03:17,040
openstack and vmware as well so these

00:03:15,120 --> 00:03:18,879
are all now part of the sig cloud

00:03:17,040 --> 00:03:21,440
provider

00:03:18,879 --> 00:03:22,159
and they were there was some renaming as

00:03:21,440 --> 00:03:25,519
well

00:03:22,159 --> 00:03:27,920
and that renaming uh

00:03:25,519 --> 00:03:29,920
part of the renaming the project uh

00:03:27,920 --> 00:03:33,840
which was formerly known as sig ibm

00:03:29,920 --> 00:03:36,640
cloud is now called provider ibm cloud

00:03:33,840 --> 00:03:39,280
so the sig cloud provider also ensures

00:03:36,640 --> 00:03:41,680
ensures that

00:03:39,280 --> 00:03:44,640
uh the cubase ecosystem is evolving in a

00:03:41,680 --> 00:03:47,840
way that is neutral to cloud providers

00:03:44,640 --> 00:03:49,200
right so i make sure that there is no

00:03:47,840 --> 00:03:52,720
such thing like favoring

00:03:49,200 --> 00:03:54,640
one provider or another provider it also

00:03:52,720 --> 00:03:58,319
ensures that there is a consistent

00:03:54,640 --> 00:04:01,519
and high quality user experience across

00:03:58,319 --> 00:04:02,720
different providers as part of the sig

00:04:01,519 --> 00:04:06,159
policy

00:04:02,720 --> 00:04:08,640
uh the chair chairs of sigs uh you know

00:04:06,159 --> 00:04:09,840
there is only one chair from a single

00:04:08,640 --> 00:04:12,239
company so

00:04:09,840 --> 00:04:14,000
you know there can be two uh chairs or

00:04:12,239 --> 00:04:16,000
even three chairs sometime

00:04:14,000 --> 00:04:17,199
but they make sure that they are

00:04:16,000 --> 00:04:21,120
representing different

00:04:17,199 --> 00:04:24,160
uh companies you can find more about uh

00:04:21,120 --> 00:04:26,240
the about the sig uh and you know all

00:04:24,160 --> 00:04:28,960
the sub projects its owns

00:04:26,240 --> 00:04:30,560
uh under the github repository where you

00:04:28,960 --> 00:04:33,680
know it's under cuban this

00:04:30,560 --> 00:04:35,759
community uh get a pre uh get up

00:04:33,680 --> 00:04:37,280
uh reaper so please take a look over

00:04:35,759 --> 00:04:40,160
there to learn more about

00:04:37,280 --> 00:04:40,160
the sig

00:04:40,880 --> 00:04:46,240
uh alrighty so the provider ibm cloud

00:04:47,840 --> 00:04:51,680
you know as i said it's a sub project of

00:04:49,919 --> 00:04:54,400
cloud provider sync

00:04:51,680 --> 00:04:55,280
and the purpose of this sub project is

00:04:54,400 --> 00:04:58,560
to build

00:04:55,280 --> 00:05:01,680
deploy maintain support and use

00:04:58,560 --> 00:05:04,160
kubernetes on ibm cloud

00:05:01,680 --> 00:05:05,280
so we have ibm cloud kubernetes service

00:05:04,160 --> 00:05:08,000
uh

00:05:05,280 --> 00:05:09,360
which richard will talk later uh when he

00:05:08,000 --> 00:05:10,000
when he talked about the ibm cloud

00:05:09,360 --> 00:05:13,520
provider

00:05:10,000 --> 00:05:17,039
uh and he will talk about great at

00:05:13,520 --> 00:05:19,199
openshift commissioners as well uh

00:05:17,039 --> 00:05:21,360
so you know as a member of this sub

00:05:19,199 --> 00:05:24,720
project as a participant of this

00:05:21,360 --> 00:05:25,919
project you basically you know obviously

00:05:24,720 --> 00:05:29,440
get in touch with

00:05:25,919 --> 00:05:32,720
uh many developers and leaders from ibm

00:05:29,440 --> 00:05:34,720
uh who have uh work on building uh

00:05:32,720 --> 00:05:38,320
the ibm clouds and you know work on

00:05:34,720 --> 00:05:40,639
operating the ibm clouds right

00:05:38,320 --> 00:05:42,320
and you can follow the evaluation of the

00:05:40,639 --> 00:05:44,479
ibm cloud platforms

00:05:42,320 --> 00:05:46,880
uh with respect to kubernetes and

00:05:44,479 --> 00:05:50,160
related cnca projects right so this

00:05:46,880 --> 00:05:53,039
project is is is is a platform

00:05:50,160 --> 00:05:55,280
to discuss things around kubernetes and

00:05:53,039 --> 00:05:57,759
related cnca projects you know and the

00:05:55,280 --> 00:06:01,039
repositories like i mentioned earlier

00:05:57,759 --> 00:06:02,880
uh it is not a platform or a project to

00:06:01,039 --> 00:06:06,080
discuss any commercial

00:06:02,880 --> 00:06:09,199
uh product related discussions or you

00:06:06,080 --> 00:06:09,199
know anything like that

00:06:09,520 --> 00:06:13,919
all right the sick structure uh you know

00:06:12,639 --> 00:06:16,479
there are three colleagues

00:06:13,919 --> 00:06:18,319
uh khalid amit who is uh ibm

00:06:16,479 --> 00:06:20,080
distinguished engineer

00:06:18,319 --> 00:06:21,360
uh who leads the team on multi-cloud

00:06:20,080 --> 00:06:25,199
manager uh

00:06:21,360 --> 00:06:28,479
richard thiess uh who is representing

00:06:25,199 --> 00:06:30,800
ibm cloud kubernetes service and uh

00:06:28,479 --> 00:06:32,160
rocks or radar openshift human resource

00:06:30,800 --> 00:06:34,319
and myself

00:06:32,160 --> 00:06:35,840
from the open source uh software

00:06:34,319 --> 00:06:38,960
development

00:06:35,840 --> 00:06:39,680
aside uh i actually work with the cubase

00:06:38,960 --> 00:06:43,360
community

00:06:39,680 --> 00:06:45,120
uh on on different things um

00:06:43,360 --> 00:06:47,039
there is a main list so you can be part

00:06:45,120 --> 00:06:48,080
of the main list and you know stay on

00:06:47,039 --> 00:06:49,919
top of uh

00:06:48,080 --> 00:06:51,120
any communication happening there there

00:06:49,919 --> 00:06:54,000
is a slack disc

00:06:51,120 --> 00:06:54,319
discussions uh available on provider

00:06:54,000 --> 00:06:57,440
dash

00:06:54,319 --> 00:07:00,840
ibm cloud slack channel uh it

00:06:57,440 --> 00:07:02,160
it's it's uh one of the channel on the

00:07:00,840 --> 00:07:04,319
kubernetes.com

00:07:02,160 --> 00:07:05,840
so you know we would love to have you

00:07:04,319 --> 00:07:09,440
join there

00:07:05,840 --> 00:07:10,880
if you haven't participated uh before

00:07:09,440 --> 00:07:13,680
and if you're only participating

00:07:10,880 --> 00:07:16,800
participating there thank you uh

00:07:13,680 --> 00:07:19,919
you know we we love you so much

00:07:16,800 --> 00:07:23,120
um you can learn more about

00:07:19,919 --> 00:07:26,560
the project uh again on the cloud

00:07:23,120 --> 00:07:30,160
provider page and the github

00:07:26,560 --> 00:07:31,680
cuban is community repo

00:07:30,160 --> 00:07:34,160
all right so what are the different

00:07:31,680 --> 00:07:37,520
activities that we

00:07:34,160 --> 00:07:41,599
have uh as part of this subproject

00:07:37,520 --> 00:07:44,560
so we meet every month

00:07:41,599 --> 00:07:45,440
so every last wednesday of the month we

00:07:44,560 --> 00:07:51,120
have one hour

00:07:45,440 --> 00:07:53,120
meetings uh at 2 p.m eastern time

00:07:51,120 --> 00:07:54,400
we used to have weekly meetings but

00:07:53,120 --> 00:07:56,160
starting this year we

00:07:54,400 --> 00:07:58,319
we changed it to monthly because we have

00:07:56,160 --> 00:08:01,039
many other platforms discussions

00:07:58,319 --> 00:08:02,639
as i mentioned slack meeting list emails

00:08:01,039 --> 00:08:04,400
you know what not

00:08:02,639 --> 00:08:05,840
uh if you're in different time zone if

00:08:04,400 --> 00:08:07,840
you you know if if you can

00:08:05,840 --> 00:08:09,280
run the meetings that is totally fine we

00:08:07,840 --> 00:08:11,360
record uh

00:08:09,280 --> 00:08:13,360
all the meetings and all the recordings

00:08:11,360 --> 00:08:16,639
are made available

00:08:13,360 --> 00:08:19,919
uh on the kubernetes youtube channel

00:08:16,639 --> 00:08:23,280
so here is link you can access the

00:08:19,919 --> 00:08:23,280
past recordings there

00:08:24,080 --> 00:08:28,639
we also participate in the sig cloud

00:08:26,639 --> 00:08:30,160
provider channel activities of course as

00:08:28,639 --> 00:08:33,039
a sub project of the sig

00:08:30,160 --> 00:08:34,000
uh you know that's where we belong right

00:08:33,039 --> 00:08:37,279
uh

00:08:34,000 --> 00:08:41,120
and uh you know there are two uh

00:08:37,279 --> 00:08:43,760
main uh main uh you know items

00:08:41,120 --> 00:08:46,160
uh as far as code is concerned as far as

00:08:43,760 --> 00:08:51,920
you know the real work is concerned

00:08:46,160 --> 00:08:54,399
uh we you know as part of this project

00:08:51,920 --> 00:08:55,440
uh i would like to mention uh the first

00:08:54,399 --> 00:08:59,440
one is

00:08:55,440 --> 00:09:02,160
cluster api provider ibm cloud

00:08:59,440 --> 00:09:03,680
so as you probably already know there is

00:09:02,160 --> 00:09:06,959
a cluster api project

00:09:03,680 --> 00:09:10,240
in kubernetes uh it basically brings

00:09:06,959 --> 00:09:12,160
declarative kubernetes style apis to

00:09:10,240 --> 00:09:13,920
cluster creation configuration and

00:09:12,160 --> 00:09:17,360
management

00:09:13,920 --> 00:09:20,399
and uh you know the ibm cloud

00:09:17,360 --> 00:09:22,080
particular project that we we own under

00:09:20,399 --> 00:09:24,080
this sub project it's basically an

00:09:22,080 --> 00:09:26,640
implementation of the

00:09:24,080 --> 00:09:28,080
uh cluster api project of kubernetes

00:09:26,640 --> 00:09:31,440
right so as i mentioned

00:09:28,080 --> 00:09:34,640
uh it provides optional functionalities

00:09:31,440 --> 00:09:38,480
on top of the core kubernetes to manage

00:09:34,640 --> 00:09:41,920
the cycle of a kubernetes cluster

00:09:38,480 --> 00:09:45,360
you can learn uh more about uh

00:09:41,920 --> 00:09:48,800
more about this sub project and uh

00:09:45,360 --> 00:09:53,519
the code at the github repository

00:09:48,800 --> 00:09:56,399
which is on github.com kubernetes.6

00:09:53,519 --> 00:09:58,880
and you know cluster api for driving

00:09:56,399 --> 00:10:01,760
cloud so please uh visit there

00:09:58,880 --> 00:10:02,640
uh let us know if you any questions on

00:10:01,760 --> 00:10:04,480
the on the

00:10:02,640 --> 00:10:06,079
slack channel or mailing list or

00:10:04,480 --> 00:10:09,760
anything any by

00:10:06,079 --> 00:10:12,399
any domain the second thing is uh

00:10:09,760 --> 00:10:14,240
ibm cloud provider right so uh the

00:10:12,399 --> 00:10:14,959
support for out of free ibm cloud

00:10:14,240 --> 00:10:18,000
provider

00:10:14,959 --> 00:10:20,399
is under progress internally we already

00:10:18,000 --> 00:10:22,560
implement the ccm as i mentioned earlier

00:10:20,399 --> 00:10:26,640
the cloudwater interface

00:10:22,560 --> 00:10:29,680
you know enables that ccm architecture

00:10:26,640 --> 00:10:32,560
so we already have that

00:10:29,680 --> 00:10:33,360
internally but richard will talk more

00:10:32,560 --> 00:10:36,640
about

00:10:33,360 --> 00:10:37,839
the plan going forward uh with the ibm

00:10:36,640 --> 00:10:41,200
club provider

00:10:37,839 --> 00:10:44,880
so with that uh richard to you

00:10:41,200 --> 00:10:47,440
thanks all right very good thank you

00:10:44,880 --> 00:10:48,399
so yeah i'll run at a high level here

00:10:47,440 --> 00:10:50,640
over the

00:10:48,399 --> 00:10:52,399
managed services and then how the cloud

00:10:50,640 --> 00:10:54,959
provider fits into those

00:10:52,399 --> 00:10:56,480
uh so we'll first start with our first

00:10:54,959 --> 00:10:58,399
service that we provided which is the

00:10:56,480 --> 00:10:59,680
ibm cloud kubernetes service and managed

00:10:58,399 --> 00:11:02,320
service offering to create

00:10:59,680 --> 00:11:02,720
kubernetes clusters as you would expect

00:11:02,320 --> 00:11:05,279
um

00:11:02,720 --> 00:11:06,800
it's a certified kubernetes offering

00:11:05,279 --> 00:11:09,680
through the cncf

00:11:06,800 --> 00:11:11,120
certification program and if you want

00:11:09,680 --> 00:11:12,640
more information about

00:11:11,120 --> 00:11:14,320
this service and using it you can check

00:11:12,640 --> 00:11:16,880
out that link there

00:11:14,320 --> 00:11:17,360
but basically it's a kubernetes service

00:11:16,880 --> 00:11:20,399
and

00:11:17,360 --> 00:11:20,959
in that we implement our ibm cloud

00:11:20,399 --> 00:11:23,600
provider

00:11:20,959 --> 00:11:26,480
to provide the cloud functionalities for

00:11:23,600 --> 00:11:29,519
the kube clusters that you create

00:11:26,480 --> 00:11:32,880
so next slide please um

00:11:29,519 --> 00:11:35,120
so then our ibm cloud kubernetes service

00:11:32,880 --> 00:11:39,040
has provided two releases this year

00:11:35,120 --> 00:11:41,519
um in 2020 uh 117 and 118.

00:11:39,040 --> 00:11:42,160
kubernetes on the other hand um has

00:11:41,519 --> 00:11:44,240
provided

00:11:42,160 --> 00:11:46,000
the 118 release this year and working on

00:11:44,240 --> 00:11:48,560
119.

00:11:46,000 --> 00:11:49,040
normally there's four releases a year

00:11:48,560 --> 00:11:51,200
and

00:11:49,040 --> 00:11:52,399
there's been a couple things going on

00:11:51,200 --> 00:11:55,200
that has impacted

00:11:52,399 --> 00:11:55,600
2020 of course the global pandemic has

00:11:55,200 --> 00:11:57,440
made

00:11:55,600 --> 00:12:00,079
a lot of changes to life and then coop

00:11:57,440 --> 00:12:03,680
community has adjusted as well

00:12:00,079 --> 00:12:05,440
and there's been a lot of feedback from

00:12:03,680 --> 00:12:08,480
user communities and developers

00:12:05,440 --> 00:12:10,399
on and and other cloud providers on the

00:12:08,480 --> 00:12:12,160
speed at which kubernetes moves

00:12:10,399 --> 00:12:14,560
as far as the releases are concerned so

00:12:12,160 --> 00:12:16,800
normally with four releases a year

00:12:14,560 --> 00:12:17,839
you end up out of support from cube

00:12:16,800 --> 00:12:19,600
community in

00:12:17,839 --> 00:12:21,680
in less than a year if you're not

00:12:19,600 --> 00:12:24,800
staying up on the current releases

00:12:21,680 --> 00:12:25,120
so it can be pretty daunting tasks for

00:12:24,800 --> 00:12:27,120
some

00:12:25,120 --> 00:12:28,399
to keep current with that pace so

00:12:27,120 --> 00:12:30,560
there's been a lot of discussions in

00:12:28,399 --> 00:12:32,320
this area about the need for maybe

00:12:30,560 --> 00:12:33,600
long-term support or adjusting the

00:12:32,320 --> 00:12:37,200
release life cycle

00:12:33,600 --> 00:12:40,399
and support cycles so this is well not

00:12:37,200 --> 00:12:42,160
directly impacting the cloud provider

00:12:40,399 --> 00:12:44,000
sig but it certainly impacts all the

00:12:42,160 --> 00:12:45,760
cloud providers as far as the service

00:12:44,000 --> 00:12:47,519
they provide

00:12:45,760 --> 00:12:49,920
building building on top of kubernetes

00:12:47,519 --> 00:12:52,480
whether it's a managed offering or

00:12:49,920 --> 00:12:53,519
a product if you will so i've laid out

00:12:52,480 --> 00:12:56,560
on this page

00:12:53,519 --> 00:12:58,320
uh our latest releases as you can see um

00:12:56,560 --> 00:13:01,360
when they were provided and when

00:12:58,320 --> 00:13:04,320
they are unsupported and um

00:13:01,360 --> 00:13:06,000
the we released the the versions of kube

00:13:04,320 --> 00:13:08,000
uh usually about 45 days after

00:13:06,000 --> 00:13:09,040
the community so you can get an idea of

00:13:08,000 --> 00:13:11,519
when cube released

00:13:09,040 --> 00:13:12,240
their versions so this is pretty quick

00:13:11,519 --> 00:13:15,279
um

00:13:12,240 --> 00:13:16,800
speed at which to keep up so um if

00:13:15,279 --> 00:13:18,000
you're interested in more about the

00:13:16,800 --> 00:13:20,480
topic on

00:13:18,000 --> 00:13:22,399
cube releases and patching and release

00:13:20,480 --> 00:13:24,800
life cycle

00:13:22,399 --> 00:13:26,800
and potential changes there please reach

00:13:24,800 --> 00:13:29,279
out to folks on the

00:13:26,800 --> 00:13:30,800
working group lts channel and there's

00:13:29,279 --> 00:13:32,560
some links on that channel as well if

00:13:30,800 --> 00:13:35,200
you're interested

00:13:32,560 --> 00:13:35,760
for the cloud provider there's um

00:13:35,200 --> 00:13:38,079
interest

00:13:35,760 --> 00:13:39,680
in extracting all of the code from

00:13:38,079 --> 00:13:41,760
kubernetes code base

00:13:39,680 --> 00:13:43,360
that has lived there for quite a long

00:13:41,760 --> 00:13:45,920
time to move

00:13:43,360 --> 00:13:47,120
all of the cloud provider code out of

00:13:45,920 --> 00:13:50,079
the tree

00:13:47,120 --> 00:13:52,320
ibm we were we never had our cloud

00:13:50,079 --> 00:13:55,040
provider in tree

00:13:52,320 --> 00:13:56,880
so by the time we got to the show they

00:13:55,040 --> 00:13:59,199
were not adding cloud providers in trees

00:13:56,880 --> 00:14:01,600
so there's no need for us to move

00:13:59,199 --> 00:14:03,120
so it's more about our plans on open

00:14:01,600 --> 00:14:05,360
sourcing what we have today

00:14:03,120 --> 00:14:06,959
which we run as part of the kubernetes

00:14:05,360 --> 00:14:10,480
service here

00:14:06,959 --> 00:14:10,480
all right next slide if you will

00:14:10,639 --> 00:14:15,120
so we also have the red hat open shift

00:14:13,040 --> 00:14:17,199
on ibm cloud managed offering so

00:14:15,120 --> 00:14:20,399
openshift if you're not familiar is

00:14:17,199 --> 00:14:22,320
built on top of kubernetes and provides

00:14:20,399 --> 00:14:25,440
these additional features and functions

00:14:22,320 --> 00:14:27,440
you get with red hat's open shift

00:14:25,440 --> 00:14:29,040
management or their container

00:14:27,440 --> 00:14:32,079
application

00:14:29,040 --> 00:14:34,480
service so we provide that as a managed

00:14:32,079 --> 00:14:36,000
service on our on ibm cloud

00:14:34,480 --> 00:14:37,680
and you can see the versions that we

00:14:36,000 --> 00:14:40,560
have listed um

00:14:37,680 --> 00:14:42,480
on the slide as well uh 311 and 43 and

00:14:40,560 --> 00:14:45,360
in fact today we just released four

00:14:42,480 --> 00:14:46,880
four so that i haven't i haven't updated

00:14:45,360 --> 00:14:49,920
the documentation yet

00:14:46,880 --> 00:14:52,399
but um anyway so those are available uh

00:14:49,920 --> 00:14:52,959
openshift43 is certified through the

00:14:52,399 --> 00:14:55,760
same

00:14:52,959 --> 00:14:57,680
certification program um that we have

00:14:55,760 --> 00:15:00,480
for our kubernetes service

00:14:57,680 --> 00:15:02,079
and it's based based on kubernetes

00:15:00,480 --> 00:15:04,959
version 1.16.

00:15:02,079 --> 00:15:06,079
so if you look at openshift

00:15:04,959 --> 00:15:08,880
documentation

00:15:06,079 --> 00:15:10,160
from red hat you'll see that they move

00:15:08,880 --> 00:15:12,079
at quite a

00:15:10,160 --> 00:15:13,680
pace fast pace as well just like the

00:15:12,079 --> 00:15:14,639
cube community as far as releases are

00:15:13,680 --> 00:15:16,720
concerned

00:15:14,639 --> 00:15:18,160
so if you're interested more than one

00:15:16,720 --> 00:15:19,120
like would like to learn more about

00:15:18,160 --> 00:15:22,240
openshift

00:15:19,120 --> 00:15:24,720
please check out that link there

00:15:22,240 --> 00:15:25,600
all right so now let's get into what is

00:15:24,720 --> 00:15:27,839
the cloud provider

00:15:25,600 --> 00:15:30,160
what does it provide for kubernetes so

00:15:27,839 --> 00:15:32,320
you you may hear us say the term ccm

00:15:30,160 --> 00:15:33,519
that stands for the cloud controller

00:15:32,320 --> 00:15:35,120
manager

00:15:33,519 --> 00:15:38,480
there was this is the current

00:15:35,120 --> 00:15:40,639
architecture on

00:15:38,480 --> 00:15:41,839
kubernetes for managing and working with

00:15:40,639 --> 00:15:42,959
the cloud

00:15:41,839 --> 00:15:45,040
this is done through the cloud

00:15:42,959 --> 00:15:46,160
controller manager which has the main

00:15:45,040 --> 00:15:48,720
control loops

00:15:46,160 --> 00:15:50,480
so the cloud provider say is responsible

00:15:48,720 --> 00:15:52,959
for owning those

00:15:50,480 --> 00:15:54,160
primary control loops and then the cloud

00:15:52,959 --> 00:15:55,519
providers themselves

00:15:54,160 --> 00:15:57,279
implement the interfaces that the

00:15:55,519 --> 00:15:59,839
control loops use

00:15:57,279 --> 00:16:01,199
in order to contact through the cloud

00:15:59,839 --> 00:16:04,639
connector the

00:16:01,199 --> 00:16:08,160
the cloud resources that it needs so um

00:16:04,639 --> 00:16:10,000
for ibm cloud provider we we run our

00:16:08,160 --> 00:16:12,079
cloud controller manager in the control

00:16:10,000 --> 00:16:14,000
plane um with alongside the kube

00:16:12,079 --> 00:16:16,720
controller manager the api server and

00:16:14,000 --> 00:16:19,839
scheduler and that cd and all that

00:16:16,720 --> 00:16:22,959
and then we from there connect off to

00:16:19,839 --> 00:16:23,279
the cloud ibm cloud of course and make

00:16:22,959 --> 00:16:25,279
the

00:16:23,279 --> 00:16:27,920
uh application calls that we need to

00:16:25,279 --> 00:16:30,240
implement various features of kubernetes

00:16:27,920 --> 00:16:31,680
and that way it leaves the worker nodes

00:16:30,240 --> 00:16:34,240
um

00:16:31,680 --> 00:16:35,519
they they're they're kind of hands off

00:16:34,240 --> 00:16:37,120
from the cloud

00:16:35,519 --> 00:16:38,560
connections which they used to be

00:16:37,120 --> 00:16:41,600
hands-on meaning they

00:16:38,560 --> 00:16:42,800
all would work directly with the cloud

00:16:41,600 --> 00:16:46,399
now there's a little bit different

00:16:42,800 --> 00:16:46,399
approach here with this new architecture

00:16:46,639 --> 00:16:49,440
next slide please

00:16:49,680 --> 00:16:55,759
so then um the if you roll back that

00:16:53,839 --> 00:16:57,680
even further and look under the covers

00:16:55,759 --> 00:16:59,360
at what the interface is and what a

00:16:57,680 --> 00:17:01,920
cloud provider provides

00:16:59,360 --> 00:17:03,680
um there's a lot of different things but

00:17:01,920 --> 00:17:05,679
these are the main ones

00:17:03,680 --> 00:17:07,199
and you don't have to implement all of

00:17:05,679 --> 00:17:08,959
them

00:17:07,199 --> 00:17:10,319
in fact you can write your own cloud

00:17:08,959 --> 00:17:13,120
provider to

00:17:10,319 --> 00:17:13,679
run on top of any any cloud really that

00:17:13,120 --> 00:17:15,120
you want

00:17:13,679 --> 00:17:17,600
and make it be whatever you want it to

00:17:15,120 --> 00:17:18,000
be for the ibm cloud provider that we

00:17:17,600 --> 00:17:20,400
provide

00:17:18,000 --> 00:17:22,160
with our managed services and that we'd

00:17:20,400 --> 00:17:23,919
love to open sources

00:17:22,160 --> 00:17:25,600
it provides two main things number one

00:17:23,919 --> 00:17:28,000
it provides load balancer support for

00:17:25,600 --> 00:17:29,679
kubernetes load balancers

00:17:28,000 --> 00:17:31,679
and depending on whether you're running

00:17:29,679 --> 00:17:34,240
on a classic infrastructure or

00:17:31,679 --> 00:17:36,240
vpc infrastructure you get different

00:17:34,240 --> 00:17:38,160
types of load balancers so for classic

00:17:36,240 --> 00:17:40,000
you have a network load balancer that

00:17:38,160 --> 00:17:43,600
runs within the cluster

00:17:40,000 --> 00:17:47,120
it's either ip tablespace or ipvs based

00:17:43,600 --> 00:17:49,200
depending on your configuration and then

00:17:47,120 --> 00:17:50,960
on vpc infrastructure you get a vpc

00:17:49,200 --> 00:17:53,600
layer 7 load balancer

00:17:50,960 --> 00:17:55,360
so when calls are made for kubernetes to

00:17:53,600 --> 00:17:58,000
create a service

00:17:55,360 --> 00:17:59,520
that call is then sent off to the cloud

00:17:58,000 --> 00:18:01,039
provider the cloud provider goes and

00:17:59,520 --> 00:18:02,880
makes the calls to

00:18:01,039 --> 00:18:04,640
do whatever it needs to do to create

00:18:02,880 --> 00:18:07,360
that load balancer

00:18:04,640 --> 00:18:08,880
for you in your cluster so that's uh

00:18:07,360 --> 00:18:10,080
that's one of the primary roles the

00:18:08,880 --> 00:18:12,320
other

00:18:10,080 --> 00:18:14,160
important role for the cloud provider is

00:18:12,320 --> 00:18:17,520
to um

00:18:14,160 --> 00:18:20,880
provide data about instances or nodes

00:18:17,520 --> 00:18:23,679
in the cluster so we in the ibm cloud

00:18:20,880 --> 00:18:24,799
provider we actually rely we work a

00:18:23,679 --> 00:18:26,320
little bit different than probably you'd

00:18:24,799 --> 00:18:27,600
find in a lot of other cloud providers

00:18:26,320 --> 00:18:30,400
in the sense that

00:18:27,600 --> 00:18:31,760
we rely on the infrastructure layer to

00:18:30,400 --> 00:18:34,559
do some bootstrapping

00:18:31,760 --> 00:18:35,600
of the node and we grab that data from

00:18:34,559 --> 00:18:38,400
the node labels

00:18:35,600 --> 00:18:41,440
to populate the instance data that is

00:18:38,400 --> 00:18:43,760
needed for kubernetes so for example

00:18:41,440 --> 00:18:44,640
you may want to know cube wants to know

00:18:43,760 --> 00:18:47,679
what region

00:18:44,640 --> 00:18:49,440
or what zone is a node in so that it

00:18:47,679 --> 00:18:51,679
could properly attach labels you know

00:18:49,440 --> 00:18:53,039
what's the

00:18:51,679 --> 00:18:54,559
other information from the cloud

00:18:53,039 --> 00:18:56,640
provider that it needs such as ip

00:18:54,559 --> 00:18:58,480
addresses and such

00:18:56,640 --> 00:19:00,240
so that that data is provided to the

00:18:58,480 --> 00:19:03,520
instances interface and now

00:19:00,240 --> 00:19:06,400
at 119 uh the community's

00:19:03,520 --> 00:19:08,160
implementing the instances v2 interface

00:19:06,400 --> 00:19:10,480
to try to streamline

00:19:08,160 --> 00:19:11,840
the connections to the cloud so we'll be

00:19:10,480 --> 00:19:14,480
looking at implementing that

00:19:11,840 --> 00:19:14,960
in the cloud provider as well um the

00:19:14,480 --> 00:19:18,160
other

00:19:14,960 --> 00:19:21,039
interfaces the zones one is is is tied

00:19:18,160 --> 00:19:21,760
uh to instances and load balancers um

00:19:21,039 --> 00:19:24,720
and

00:19:21,760 --> 00:19:26,640
it's very similar in that structure we

00:19:24,720 --> 00:19:28,160
do not implement clusters or routes

00:19:26,640 --> 00:19:30,559
interfaces

00:19:28,160 --> 00:19:32,559
as far as routes are concerned we rely

00:19:30,559 --> 00:19:35,679
and our managed services rely on

00:19:32,559 --> 00:19:37,600
calico to provide the implementation for

00:19:35,679 --> 00:19:40,080
the cni and do the routing

00:19:37,600 --> 00:19:40,880
within the cluster so as a cloud

00:19:40,080 --> 00:19:44,240
provider you're

00:19:40,880 --> 00:19:45,600
you're free to pick which interfaces you

00:19:44,240 --> 00:19:47,039
choose to implement or not

00:19:45,600 --> 00:19:49,200
and what features you provide through

00:19:47,039 --> 00:19:52,880
that

00:19:49,200 --> 00:19:54,720
all right next slide please

00:19:52,880 --> 00:19:56,400
so then just to wrap things up what are

00:19:54,720 --> 00:19:58,559
we looking at towards the future

00:19:56,400 --> 00:20:00,080
uh on our cloud provider well we for

00:19:58,559 --> 00:20:02,480
sure work with community

00:20:00,080 --> 00:20:05,760
and kind of keep pace on what's going on

00:20:02,480 --> 00:20:08,080
on the sig cloud provider front so

00:20:05,760 --> 00:20:09,760
to that end you know we'd like to open

00:20:08,080 --> 00:20:11,679
source our cloud provider

00:20:09,760 --> 00:20:13,360
for folks that are interested in using

00:20:11,679 --> 00:20:16,400
the ibm cloud provider outside of our

00:20:13,360 --> 00:20:19,200
managed services right

00:20:16,400 --> 00:20:21,280
and then we to that end we'd have to

00:20:19,200 --> 00:20:23,840
prove some documentations on how to

00:20:21,280 --> 00:20:25,919
set up your cloud provider and then we

00:20:23,840 --> 00:20:27,520
continue working on aligning our build

00:20:25,919 --> 00:20:28,640
tests and release processes with the

00:20:27,520 --> 00:20:31,120
community

00:20:28,640 --> 00:20:32,880
so there's there's ongoing discussions

00:20:31,120 --> 00:20:34,720
with all the cloud providers about

00:20:32,880 --> 00:20:36,640
what's the best way you know for

00:20:34,720 --> 00:20:38,640
everybody to be consistent about

00:20:36,640 --> 00:20:40,000
how they should build their club

00:20:38,640 --> 00:20:42,080
controller managers

00:20:40,000 --> 00:20:43,919
you know where should they submit tests

00:20:42,080 --> 00:20:45,600
and how should that be done

00:20:43,919 --> 00:20:47,200
and you know what should versioning

00:20:45,600 --> 00:20:49,520
process look like so there's some

00:20:47,200 --> 00:20:51,520
consistency at class cloud providers

00:20:49,520 --> 00:20:53,120
so those discussions ongoing and they

00:20:51,520 --> 00:20:54,480
impact you know all the cloud providers

00:20:53,120 --> 00:20:56,480
and we continue to

00:20:54,480 --> 00:20:57,679
you know make adjustments on ours to

00:20:56,480 --> 00:20:59,919
handle things like

00:20:57,679 --> 00:21:03,200
what was in you know 119 to provide a

00:20:59,919 --> 00:21:06,559
new instances v2 interface

00:21:03,200 --> 00:21:08,559
so with that uh overview of ibm cloud

00:21:06,559 --> 00:21:11,679
and our

00:21:08,559 --> 00:21:12,720
our sub project of sig ibm our sig cloud

00:21:11,679 --> 00:21:14,480
provider

00:21:12,720 --> 00:21:17,520
would like to say thank you and i'll

00:21:14,480 --> 00:21:17,520
turn it back over to you

00:21:21,120 --> 00:21:24,960
all right unmuting myself well that was

00:21:23,039 --> 00:21:27,679
great so richard thank you so much

00:21:24,960 --> 00:21:29,360
and uh thank you so much everyone uh for

00:21:27,679 --> 00:21:32,159
watching this video

00:21:29,360 --> 00:21:32,880
uh please reach out to us through slack

00:21:32,159 --> 00:21:36,400
channel

00:21:32,880 --> 00:21:38,960
or through mailing lists or emails

00:21:36,400 --> 00:21:39,600
as you know as we mentioned earlier we

00:21:38,960 --> 00:21:41,919
would love

00:21:39,600 --> 00:21:43,280
to have you to contribute to the project

00:21:41,919 --> 00:21:46,559
and making it

00:21:43,280 --> 00:21:47,760
better making cuban is better so thank

00:21:46,559 --> 00:21:51,200
you so much

00:21:47,760 --> 00:21:53,039
with that i'm gonna stop my

00:21:51,200 --> 00:21:55,440
stop shedding richard unless you have

00:21:53,039 --> 00:21:59,840
anything else to talk

00:21:55,440 --> 00:21:59,840

YouTube URL: https://www.youtube.com/watch?v=fXhzd9AuJug


