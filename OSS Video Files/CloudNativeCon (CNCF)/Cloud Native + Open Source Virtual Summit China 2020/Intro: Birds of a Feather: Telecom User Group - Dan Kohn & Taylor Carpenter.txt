Title: Intro: Birds of a Feather: Telecom User Group - Dan Kohn & Taylor Carpenter
Publication date: 2020-09-11
Playlist: Cloud Native + Open Source Virtual Summit China 2020
Description: 
	Don’t miss out! Join us at our upcoming events: EnvoyCon Virtual on October 15 and KubeCon + CloudNativeCon North America 2020 Virtual from November 17-20. Learn more at https://kubecon.io The conferences feature presentations from developers and end users of Kubernetes, Prometheus, Envoy, and all of the other CNCF-hosted projects. 

Intro: Birds of a Feather: Telecom User Group - Dan Kohn, Cloud Native Computing Foundation & Taylor Carpenter, Vulk Coop 

CNCF hosts the Telecom User Group (TUG) for service providers and their vendors to discuss the adoption of cloud native technologies. The community is invited to join this birds-of-a-feather (BoF) session to discuss the status of various initiatives and white papers in this space as well as ideas, requirements and best practices to continue moving forward. Updates and discussions about the CNF Conformance testing initiative which provides visibility into how well Cloud native Network Functions (CNFs) and the underlying Telecom platform follows cloud native principles 

https://sched.co/cpAM
Captions: 
	00:00:01,760 --> 00:00:05,920
welcome and thank you for joining this

00:00:03,679 --> 00:00:06,960
session i'm taylor carpenter with full

00:00:05,920 --> 00:00:08,639
co-op

00:00:06,960 --> 00:00:11,280
i'm going to give an introduction to

00:00:08,639 --> 00:00:13,519
cncf's telecom initiatives on behalf

00:00:11,280 --> 00:00:15,040
of the cloud native computing foundation

00:00:13,519 --> 00:00:18,160
and dan khan

00:00:15,040 --> 00:00:19,199
it's vp of strategic programs and the

00:00:18,160 --> 00:00:23,039
general manager

00:00:19,199 --> 00:00:25,039
of lf public health currently there's

00:00:23,039 --> 00:00:27,680
three telecommunication focused

00:00:25,039 --> 00:00:31,279
initiatives within cncf

00:00:27,680 --> 00:00:32,800
including the telcom user group the cnf

00:00:31,279 --> 00:00:35,840
test fed

00:00:32,800 --> 00:00:38,000
and the cnf conformance initiative

00:00:35,840 --> 00:00:40,320
they all share the goals of helping

00:00:38,000 --> 00:00:41,440
telecom operators and developers in

00:00:40,320 --> 00:00:43,280
navigating

00:00:41,440 --> 00:00:44,559
the cloud native and open source

00:00:43,280 --> 00:00:47,200
landscape

00:00:44,559 --> 00:00:49,840
to obtain the benefits touted by cloud

00:00:47,200 --> 00:00:52,079
native technologies

00:00:49,840 --> 00:00:53,280
the telcom user group is a place for

00:00:52,079 --> 00:00:55,920
operators

00:00:53,280 --> 00:00:58,239
vendors and telecom developers who are

00:00:55,920 --> 00:00:59,520
using our aim to use cloud native

00:00:58,239 --> 00:01:02,719
technologies

00:00:59,520 --> 00:01:04,720
to share their ideas experiences ask

00:01:02,719 --> 00:01:05,840
questions and voice their concerns and

00:01:04,720 --> 00:01:07,920
needs

00:01:05,840 --> 00:01:09,840
it's not expected that software

00:01:07,920 --> 00:01:10,960
development will occur within the telco

00:01:09,840 --> 00:01:13,760
music group

00:01:10,960 --> 00:01:14,640
but it may write up documents covering

00:01:13,760 --> 00:01:16,560
requirements

00:01:14,640 --> 00:01:18,880
best practices and tips that it's

00:01:16,560 --> 00:01:21,280
learned

00:01:18,880 --> 00:01:22,960
the telecom user group started as birds

00:01:21,280 --> 00:01:26,080
of a feather meetings

00:01:22,960 --> 00:01:28,159
in barcelona and shanghai during 2019

00:01:26,080 --> 00:01:29,200
in a sense moved to once a month zoom

00:01:28,159 --> 00:01:31,840
calls

00:01:29,200 --> 00:01:34,159
and online conversations in slack and

00:01:31,840 --> 00:01:37,439
emails

00:01:34,159 --> 00:01:40,479
the testbed initiative is an open source

00:01:37,439 --> 00:01:42,880
platform tool chain and set of examples

00:01:40,479 --> 00:01:44,720
that supports reviewing the different

00:01:42,880 --> 00:01:45,439
emerging cloud native technologies

00:01:44,720 --> 00:01:48,479
within the

00:01:45,439 --> 00:01:50,880
telecom domain supporting

00:01:48,479 --> 00:01:53,360
reproducing its test results and use

00:01:50,880 --> 00:01:57,520
cases as well as building new

00:01:53,360 --> 00:01:57,520
prototypes and reference examples

00:01:58,399 --> 00:02:02,079
the third and newest initiatives is cnf

00:02:00,880 --> 00:02:04,719
conformance

00:02:02,079 --> 00:02:05,280
it's an open source test suite that

00:02:04,719 --> 00:02:07,759
supports

00:02:05,280 --> 00:02:09,759
validating cloud native network

00:02:07,759 --> 00:02:12,800
functions or cns

00:02:09,759 --> 00:02:16,160
as well as telecom platforms adherence

00:02:12,800 --> 00:02:19,120
to cloud native principles

00:02:16,160 --> 00:02:21,440
it helps to provide test results for the

00:02:19,120 --> 00:02:22,560
cns and the telecom platforms which

00:02:21,440 --> 00:02:25,120
attest

00:02:22,560 --> 00:02:26,319
to operators to help them identify

00:02:25,120 --> 00:02:29,120
solutions

00:02:26,319 --> 00:02:31,200
which are observing cloud native

00:02:29,120 --> 00:02:34,319
capabilities and principles

00:02:31,200 --> 00:02:37,519
which are important to those telecom

00:02:34,319 --> 00:02:38,160
operators themselves it also helps to

00:02:37,519 --> 00:02:40,400
help

00:02:38,160 --> 00:02:41,680
cnf developers in demonstrating

00:02:40,400 --> 00:02:44,160
conformance

00:02:41,680 --> 00:02:44,720
to cloud native best practices and

00:02:44,160 --> 00:02:47,599
provide

00:02:44,720 --> 00:02:51,840
tools and feedback for those developers

00:02:47,599 --> 00:02:51,840
to improve their technology

00:02:51,920 --> 00:02:55,760
there's public telecom focused meetings

00:02:54,879 --> 00:02:57,920
including

00:02:55,760 --> 00:02:59,200
the telcom music group's monthly meeting

00:02:57,920 --> 00:03:02,959
which occurs

00:02:59,200 --> 00:03:06,159
at 1500 and 1100 utc

00:03:02,959 --> 00:03:07,040
alternating monthly with the next call

00:03:06,159 --> 00:03:11,040
on monday

00:03:07,040 --> 00:03:13,440
august 3rd at 1500 utc

00:03:11,040 --> 00:03:14,239
there's also a weekly meeting on

00:03:13,440 --> 00:03:17,280
thursdays

00:03:14,239 --> 00:03:19,599
for the cnf conformance and testbed

00:03:17,280 --> 00:03:21,120
which is a technical meeting occurring

00:03:19,599 --> 00:03:23,760
at 1400

00:03:21,120 --> 00:03:23,760
utc

00:03:24,319 --> 00:03:27,519
in addition to those meetings there's

00:03:26,319 --> 00:03:30,640
also

00:03:27,519 --> 00:03:33,760
a mailing list for the telcom user group

00:03:30,640 --> 00:03:35,840
public cncf slack channels and you can

00:03:33,760 --> 00:03:40,560
reach me directly

00:03:35,840 --> 00:03:44,840
via email at taylor vault co-op

00:03:40,560 --> 00:03:47,440
or dan khan viadan

00:03:44,840 --> 00:03:49,680
linuxfoundation.org

00:03:47,440 --> 00:03:50,480
cncf is collaborating with other

00:03:49,680 --> 00:03:52,480
communities

00:03:50,480 --> 00:03:53,680
including the linux foundation

00:03:52,480 --> 00:03:56,959
networking

00:03:53,680 --> 00:03:59,040
and all of its initiatives and projects

00:03:56,959 --> 00:04:00,799
the cloud infrastructure telco task

00:03:59,040 --> 00:04:03,519
force cnt

00:04:00,799 --> 00:04:04,560
as well as the new platform as a service

00:04:03,519 --> 00:04:08,319
initiative

00:04:04,560 --> 00:04:11,040
xg vela which china mobile is a part of

00:04:08,319 --> 00:04:15,040
in addition to cncf's own special

00:04:11,040 --> 00:04:17,040
interest groups and projects

00:04:15,040 --> 00:04:18,720
we'd love to have your feedback we've

00:04:17,040 --> 00:04:22,320
created a survey

00:04:18,720 --> 00:04:22,320
we'll show this again at the end

00:04:22,880 --> 00:04:26,880
a little bit more about the telecom user

00:04:24,720 --> 00:04:30,160
group there's currently

00:04:26,880 --> 00:04:32,800
quite a few members including vendors

00:04:30,160 --> 00:04:38,400
and operators like nokia

00:04:32,800 --> 00:04:38,400
swisscom t-mobile huawei china mobile

00:04:39,280 --> 00:04:43,040
as well as direct collaboration with

00:04:41,199 --> 00:04:46,160
other groups like cndt

00:04:43,040 --> 00:04:49,280
ovp we're currently

00:04:46,160 --> 00:04:53,360
working to share requirements with

00:04:49,280 --> 00:04:56,400
cntt ras2 the kubernetes reference

00:04:53,360 --> 00:04:58,560
work as well as the reference

00:04:56,400 --> 00:05:01,840
implementation where things are shared

00:04:58,560 --> 00:05:03,840
from the cnf testbed on tooling

00:05:01,840 --> 00:05:06,160
and we're also providing a cloud native

00:05:03,840 --> 00:05:10,560
checkbox for the cnt's

00:05:06,160 --> 00:05:12,960
rc2 program

00:05:10,560 --> 00:05:14,479
regarding documentation papers there's

00:05:12,960 --> 00:05:15,919
been a white paper

00:05:14,479 --> 00:05:17,680
the cloud native thinking for

00:05:15,919 --> 00:05:20,960
telecommunication created

00:05:17,680 --> 00:05:24,479
it's in the telco music groups github

00:05:20,960 --> 00:05:25,919
and there's contribution and references

00:05:24,479 --> 00:05:28,880
to the cloud native networking

00:05:25,919 --> 00:05:28,880
principles papers

00:05:30,000 --> 00:05:33,840
this leads us to something important

00:05:31,919 --> 00:05:34,479
that's being discussed what is cloud

00:05:33,840 --> 00:05:37,520
native

00:05:34,479 --> 00:05:39,840
and what does it mean for

00:05:37,520 --> 00:05:41,600
well cloud native builds on existing

00:05:39,840 --> 00:05:44,240
principles and practices like

00:05:41,600 --> 00:05:46,080
devops processes service-based

00:05:44,240 --> 00:05:46,960
architecture and agile software

00:05:46,080 --> 00:05:49,520
development

00:05:46,960 --> 00:05:51,440
which may be familiar to many operators

00:05:49,520 --> 00:05:55,120
and telecom developers

00:05:51,440 --> 00:05:57,360
cncf outlines some of these things

00:05:55,120 --> 00:05:58,160
in their cloud native definitions

00:05:57,360 --> 00:06:00,560
including

00:05:58,160 --> 00:06:02,880
microservices immutable infrastructure

00:06:00,560 --> 00:06:04,639
declarative apis

00:06:02,880 --> 00:06:07,199
these allow high impact changes

00:06:04,639 --> 00:06:09,600
frequently predictably

00:06:07,199 --> 00:06:10,319
you can do things like moving security

00:06:09,600 --> 00:06:13,520
patches

00:06:10,319 --> 00:06:13,520
safely to production

00:06:15,199 --> 00:06:18,720
and the cloud native networking

00:06:16,639 --> 00:06:21,039
principles papers go

00:06:18,720 --> 00:06:23,759
in more depth on all of these principles

00:06:21,039 --> 00:06:26,800
and provide extensive references

00:06:23,759 --> 00:06:28,080
and allow you to ask questions and

00:06:26,800 --> 00:06:31,280
answer them

00:06:28,080 --> 00:06:32,400
such as how are cloud native systems

00:06:31,280 --> 00:06:33,919
loosely coupled

00:06:32,400 --> 00:06:36,160
how do you provision immutable

00:06:33,919 --> 00:06:39,120
infrastructure and how do you configure

00:06:36,160 --> 00:06:41,199
these cloud native systems

00:06:39,120 --> 00:06:44,479
as well as what are the underlying

00:06:41,199 --> 00:06:44,479
properties and principles

00:06:44,720 --> 00:06:49,199
this leads us to what is a cloud native

00:06:46,800 --> 00:06:52,319
networking function

00:06:49,199 --> 00:06:55,280
well a cloud native network function is

00:06:52,319 --> 00:06:56,319
a cloud native application which

00:06:55,280 --> 00:06:59,919
implements

00:06:56,319 --> 00:06:59,919
network functionality

00:07:00,160 --> 00:07:04,240
we expect it to then follow cloud native

00:07:03,280 --> 00:07:07,520
principles like

00:07:04,240 --> 00:07:08,720
using microservices having immutable

00:07:07,520 --> 00:07:10,560
infrastructure

00:07:08,720 --> 00:07:12,080
having declarative apis and

00:07:10,560 --> 00:07:15,599
configuration

00:07:12,080 --> 00:07:19,120
using a repeatable deployment process

00:07:15,599 --> 00:07:20,880
likewise a telecom platform that

00:07:19,120 --> 00:07:22,240
is itself cloud native should follow

00:07:20,880 --> 00:07:25,280
these principles

00:07:22,240 --> 00:07:26,240
providing service discovery declarative

00:07:25,280 --> 00:07:28,400
configuration

00:07:26,240 --> 00:07:31,840
and resiliency for the workload and

00:07:28,400 --> 00:07:31,840
platform itself

00:07:32,479 --> 00:07:36,800
the cnf testbed which has contributors

00:07:36,479 --> 00:07:41,520
like

00:07:36,800 --> 00:07:46,160
cisco intel samsung nokia

00:07:41,520 --> 00:07:46,160
the fdio project from lfn

00:07:46,639 --> 00:07:50,000
contributes to this open source

00:07:48,639 --> 00:07:52,240
initiative

00:07:50,000 --> 00:07:54,879
which helps us review cloud native

00:07:52,240 --> 00:07:54,879
technology

00:07:55,360 --> 00:07:58,720
you can think of the cnf testbed as an

00:07:57,919 --> 00:08:02,639
innovation

00:07:58,720 --> 00:08:05,199
review tool it helps

00:08:02,639 --> 00:08:07,280
review this software by supporting

00:08:05,199 --> 00:08:09,280
different technology options

00:08:07,280 --> 00:08:11,520
keeps things as simple as reasonably

00:08:09,280 --> 00:08:13,039
possible so that you can understand the

00:08:11,520 --> 00:08:15,599
different components

00:08:13,039 --> 00:08:16,800
and use upstream community tooling like

00:08:15,599 --> 00:08:19,039
cubespray

00:08:16,800 --> 00:08:19,919
and nfebench so that you can become

00:08:19,039 --> 00:08:22,879
familiar

00:08:19,919 --> 00:08:26,080
and we can provide bug fixes and things

00:08:22,879 --> 00:08:28,400
we've learned to those upstream projects

00:08:26,080 --> 00:08:29,440
and of course it tries to follow cloud

00:08:28,400 --> 00:08:32,800
native principles

00:08:29,440 --> 00:08:36,320
as much as possible this

00:08:32,800 --> 00:08:39,200
goes all the way from hardware

00:08:36,320 --> 00:08:42,399
up through all the levels so we try to

00:08:39,200 --> 00:08:45,040
focus on immutable hardware

00:08:42,399 --> 00:08:47,200
providing configuration that saved

00:08:45,040 --> 00:08:48,640
inversion control even for the underlay

00:08:47,200 --> 00:08:51,440
network

00:08:48,640 --> 00:08:52,800
bootstrapping is repeatable from the

00:08:51,440 --> 00:08:53,760
hardware all the way up through the

00:08:52,800 --> 00:08:55,839
workload

00:08:53,760 --> 00:08:58,720
and then we try to highlight gaps that

00:08:55,839 --> 00:09:01,600
are missing and anaben procedures that

00:08:58,720 --> 00:09:03,519
had to be used and then we try to find

00:09:01,600 --> 00:09:06,399
technology that can

00:09:03,519 --> 00:09:08,080
solve those out-of-bound procedures and

00:09:06,399 --> 00:09:11,839
we highlight any technology

00:09:08,080 --> 00:09:11,839
that meets cloud native principles

00:09:12,560 --> 00:09:17,279
it's fully repeatable in packet from

00:09:15,839 --> 00:09:19,279
hardware all the way up through the

00:09:17,279 --> 00:09:22,480
workload it uses

00:09:19,279 --> 00:09:24,880
helm and cube cuddle for use cases cube

00:09:22,480 --> 00:09:26,560
spray the kubernetes project

00:09:24,880 --> 00:09:30,560
and we try to use kubernetes native

00:09:26,560 --> 00:09:30,560
replacements as much as possible

00:09:32,080 --> 00:09:38,080
examples go from very minimal

00:09:35,600 --> 00:09:39,839
simple things that you can try to see

00:09:38,080 --> 00:09:41,600
how technology is used all the way

00:09:39,839 --> 00:09:45,279
through service chaining

00:09:41,600 --> 00:09:47,120
and use cases some of the technologies

00:09:45,279 --> 00:09:48,480
that are demonstrated include network

00:09:47,120 --> 00:09:51,920
service mesh

00:09:48,480 --> 00:09:56,240
different cni's different topology

00:09:51,920 --> 00:09:56,240
and pneuma cpu managers

00:09:57,200 --> 00:10:01,519
you can replicate this using the

00:09:59,360 --> 00:10:03,680
published code in the cnf testbed with

00:10:01,519 --> 00:10:05,680
an api key from packet

00:10:03,680 --> 00:10:07,040
if you package your own network function

00:10:05,680 --> 00:10:08,560
in containers

00:10:07,040 --> 00:10:10,240
you should be able to run it in the

00:10:08,560 --> 00:10:12,480
testbed

00:10:10,240 --> 00:10:13,360
we'd be happy to accept pull requests

00:10:12,480 --> 00:10:15,600
for improvements

00:10:13,360 --> 00:10:16,800
in the tool chain to add support for

00:10:15,600 --> 00:10:20,000
your own lab

00:10:16,800 --> 00:10:23,120
other cloud providers as well as new use

00:10:20,000 --> 00:10:23,120
cases and examples

00:10:25,600 --> 00:10:34,800
the cnf conformance contributors include

00:10:29,760 --> 00:10:34,800
different vendors and operators

00:10:35,600 --> 00:10:42,160
this open source test suite is showing

00:10:39,600 --> 00:10:43,519
and focused on how well cnfs and

00:10:42,160 --> 00:10:46,079
platforms

00:10:43,519 --> 00:10:47,839
follow cloud native principles it's

00:10:46,079 --> 00:10:51,120
based on the kubernetes

00:10:47,839 --> 00:10:52,000
conformance program which is not only

00:10:51,120 --> 00:10:55,360
open source

00:10:52,000 --> 00:10:58,079
but focuses on self validation so

00:10:55,360 --> 00:10:59,519
anyone can download and use this suite

00:10:58,079 --> 00:11:03,279
with your own

00:10:59,519 --> 00:11:03,279
cns and platforms

00:11:07,040 --> 00:11:12,880
we've organized the test into categories

00:11:10,480 --> 00:11:16,360
which we find helpful for discussion

00:11:12,880 --> 00:11:18,800
including configuration life cycle

00:11:16,360 --> 00:11:20,640
upgradeability scalability and

00:11:18,800 --> 00:11:22,240
resilience

00:11:20,640 --> 00:11:24,480
the different cloud native principles

00:11:22,240 --> 00:11:26,079
and capabilities

00:11:24,480 --> 00:11:28,880
are the tests that are covered that are

00:11:26,079 --> 00:11:31,120
within these categories

00:11:28,880 --> 00:11:33,600
these categories cover both platform and

00:11:31,120 --> 00:11:35,120
workload tests

00:11:33,600 --> 00:11:37,760
when we take a look at the workload

00:11:35,120 --> 00:11:40,839
tests the first set that we've covered

00:11:37,760 --> 00:11:42,240
are part of these categories including

00:11:40,839 --> 00:11:44,800
microservice

00:11:42,240 --> 00:11:46,240
security like privileged mode

00:11:44,800 --> 00:11:48,720
configuration

00:11:46,240 --> 00:11:49,279
looking at liveliness and readiness

00:11:48,720 --> 00:11:52,399
check

00:11:49,279 --> 00:11:54,839
upgradeability as well as resilience

00:11:52,399 --> 00:11:56,320
where we look at stuff like chaos

00:11:54,839 --> 00:11:58,079
testing

00:11:56,320 --> 00:11:59,600
where we expect the workloads to

00:11:58,079 --> 00:12:04,000
continue to function

00:11:59,600 --> 00:12:07,120
if one of the nodes goes out or a pod

00:12:04,000 --> 00:12:09,680
on the platform conformance side we're

00:12:07,120 --> 00:12:13,200
focused on kubernetes-based platforms

00:12:09,680 --> 00:12:15,839
and we expect to test a reference cntt

00:12:13,200 --> 00:12:17,760
kubernetes reference requirements direct

00:12:15,839 --> 00:12:18,480
feedback from operators and cnf

00:12:17,760 --> 00:12:21,120
developers

00:12:18,480 --> 00:12:22,880
as well as the kubernetes community best

00:12:21,120 --> 00:12:25,200
practice and collaborative principles

00:12:22,880 --> 00:12:27,200
themselves

00:12:25,200 --> 00:12:29,839
some of those potential tests in

00:12:27,200 --> 00:12:32,560
addition to kubernetes conformance

00:12:29,839 --> 00:12:33,839
include horizontal auto scaling

00:12:32,560 --> 00:12:36,320
capabilities

00:12:33,839 --> 00:12:39,440
include including hardware itself where

00:12:36,320 --> 00:12:42,399
more nodes could be added as needed

00:12:39,440 --> 00:12:43,360
more resilience testing including

00:12:42,399 --> 00:12:47,680
intentional

00:12:43,360 --> 00:12:51,279
failures in nodes and verifying that if

00:12:47,680 --> 00:12:53,760
traffic and the signaling

00:12:51,279 --> 00:12:55,279
either fails or is under high load that

00:12:53,760 --> 00:12:59,440
the data plane worklet

00:12:55,279 --> 00:12:59,440
will continue to function as expected

00:13:00,240 --> 00:13:03,839
we also want to test not only the core

00:13:03,040 --> 00:13:07,040
platform

00:13:03,839 --> 00:13:09,279
but any type of add-ons for metrics

00:13:07,040 --> 00:13:10,720
whether they're standardized kubernetes

00:13:09,279 --> 00:13:12,320
add-ons

00:13:10,720 --> 00:13:13,680
and whether or not they have network

00:13:12,320 --> 00:13:15,440
policies that are following the

00:13:13,680 --> 00:13:18,160
kubernetes network policies

00:13:15,440 --> 00:13:18,880
so that you can use them together with

00:13:18,160 --> 00:13:21,839
all the other

00:13:18,880 --> 00:13:21,839
configuration

00:13:22,320 --> 00:13:25,839
we've included some cnf examples like

00:13:24,880 --> 00:13:29,519
coordinates

00:13:25,839 --> 00:13:32,480
envoy a vpp based ip forwarder

00:13:29,519 --> 00:13:33,519
linker d is in progress we have other

00:13:32,480 --> 00:13:37,120
examples that

00:13:33,519 --> 00:13:37,120
could be included in the future

00:13:40,800 --> 00:13:45,519
and when we get to using the cnf

00:13:43,360 --> 00:13:48,000
conformance suite we have an extensive

00:13:45,519 --> 00:13:50,560
set of instructions and use this guide

00:13:48,000 --> 00:13:52,240
from a minimal set for cnf developer to

00:13:50,560 --> 00:13:54,399
quickly get started

00:13:52,240 --> 00:13:56,240
through extensive source based

00:13:54,399 --> 00:13:58,800
installation

00:13:56,240 --> 00:13:59,839
and usage for running individual tests

00:13:58,800 --> 00:14:02,320
or groups

00:13:59,839 --> 00:14:04,480
we've outlined prereqs we've shown how

00:14:02,320 --> 00:14:05,600
you can test using your own kubernetes

00:14:04,480 --> 00:14:08,560
cluster

00:14:05,600 --> 00:14:10,320
or how to deploy clusters that we use

00:14:08,560 --> 00:14:12,720
with our tool chain

00:14:10,320 --> 00:14:13,920
we've also included instructions for

00:14:12,720 --> 00:14:17,120
configuring and using

00:14:13,920 --> 00:14:21,120
cnfs with example configuration files

00:14:17,120 --> 00:14:24,800
which you can copy and follow directly

00:14:21,120 --> 00:14:25,839
this is an example of how a test run

00:14:24,800 --> 00:14:28,480
would work

00:14:25,839 --> 00:14:29,120
for a cnf itself if you ran all the

00:14:28,480 --> 00:14:32,160
tests

00:14:29,120 --> 00:14:34,560
you should see the individual tests with

00:14:32,160 --> 00:14:37,760
pass or fill

00:14:34,560 --> 00:14:40,160
and then a final score will be shown and

00:14:37,760 --> 00:14:41,600
all these results will go into a log

00:14:40,160 --> 00:14:45,440
file

00:14:41,600 --> 00:14:47,839
the scoring system itself consists of

00:14:45,440 --> 00:14:49,519
a summation of all the individual

00:14:47,839 --> 00:14:52,639
schools

00:14:49,519 --> 00:14:53,440
scores for the final score which can be

00:14:52,639 --> 00:14:55,440
weighted

00:14:53,440 --> 00:14:57,360
for positive or negative based on the

00:14:55,440 --> 00:15:00,480
importance

00:14:57,360 --> 00:15:02,399
and modified in an external yaml file

00:15:00,480 --> 00:15:04,639
the test results themselves are saved

00:15:02,399 --> 00:15:06,560
into yaml configuration files

00:15:04,639 --> 00:15:10,399
the summary as well as all of the

00:15:06,560 --> 00:15:10,399
information for individual tests

00:15:11,199 --> 00:15:15,279
if you'd like to get involved we have a

00:15:13,040 --> 00:15:18,079
contributing guide

00:15:15,279 --> 00:15:19,680
we have the installation and usage guide

00:15:18,079 --> 00:15:21,680
which i mentioned before

00:15:19,680 --> 00:15:23,440
we'd be happy to receive pull requests

00:15:21,680 --> 00:15:26,720
for documentation

00:15:23,440 --> 00:15:30,000
adding new cnfs or tests for both the

00:15:26,720 --> 00:15:30,000
platform and the workload

00:15:30,959 --> 00:15:35,040
if you can attend the upcoming meetings

00:15:32,880 --> 00:15:36,240
there's a telecom user group on august

00:15:35,040 --> 00:15:39,120
3rd

00:15:36,240 --> 00:15:40,399
the weekly cnf test fit and conformance

00:15:39,120 --> 00:15:43,920
technical meetings

00:15:40,399 --> 00:15:47,440
august 6 at 14 15. we'll also be

00:15:43,920 --> 00:15:49,600
speaking at kubecon eu on august 19th

00:15:47,440 --> 00:15:52,480
as well as onees north america on

00:15:49,600 --> 00:15:55,279
september 29th

00:15:52,480 --> 00:15:56,720
you can join us in the mailing list for

00:15:55,279 --> 00:15:59,759
telco music group

00:15:56,720 --> 00:16:01,040
on the cncs public slack channels you

00:15:59,759 --> 00:16:03,600
can email me

00:16:01,040 --> 00:16:05,440
or dan khan directly if you'd like to

00:16:03,600 --> 00:16:07,600
speak with dan khan

00:16:05,440 --> 00:16:10,959
he's offered to speak you can reach out

00:16:07,600 --> 00:16:10,959
to him on this calmly

00:16:13,839 --> 00:16:18,320
we'd love to have your feedback on how

00:16:15,759 --> 00:16:19,759
well this introduction to telecom

00:16:18,320 --> 00:16:22,240
initiatives

00:16:19,759 --> 00:16:24,480
helped you if you'd like to sign up for

00:16:22,240 --> 00:16:27,040
beta testing for cnf conformance

00:16:24,480 --> 00:16:28,160
and provide other feedback on how cncf

00:16:27,040 --> 00:16:31,600
can help you

00:16:28,160 --> 00:16:34,720
as they see enough as a telecom operator

00:16:31,600 --> 00:16:37,839
or cnf developer

00:16:34,720 --> 00:16:37,839

YouTube URL: https://www.youtube.com/watch?v=7MHd7GTENjU


