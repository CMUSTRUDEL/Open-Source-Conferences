Title: Git-buildpackage BoF
Publication date: 2017-12-03
Playlist: DebConf 15
Description: 
	by Guido GÃ¼nther

At: DebConf15
https://summit.debconf.org/debconf15/meeting/315/git-buildpackage-bof/
https://debconf15.debconf.org/

git-buildpackage{,-rpm} are used inside and outside of Debian for creating Debian and RPM packages out of Git repositories.

What workflows do you use? Where can gbp be improved for that? What's missing? Where should it integrate better into other tools? What about DEP-14?

Room: Amsterdam
Scheduled start: 2015-08-16 18:00:00
Captions: 
	00:00:06,740 --> 00:00:12,030
welcome to the gift to take it off the

00:00:09,750 --> 00:00:17,670
idea behind the spot also basically to

00:00:12,030 --> 00:00:19,380
kind of find out so where to next

00:00:17,670 --> 00:00:21,779
during the last year stuff quite some

00:00:19,380 --> 00:00:23,369
features here and they are and so the

00:00:21,779 --> 00:00:26,689
idea would be to find out what kind of

00:00:23,369 --> 00:00:29,160
picture you are using and just actually

00:00:26,689 --> 00:00:30,779
missing at the moment or which kind of

00:00:29,160 --> 00:00:32,730
features basically don't work as

00:00:30,779 --> 00:00:34,590
expected for you and how they kind of

00:00:32,730 --> 00:00:36,960
more you know your workflow then then

00:00:34,590 --> 00:00:45,090
support it and maybe during this kind of

00:00:36,960 --> 00:00:47,100
learn about so just to get into it they

00:00:45,090 --> 00:00:50,340
are here will basically find out which

00:00:47,100 --> 00:00:59,879
are the most commonly use the tools from

00:00:50,340 --> 00:01:06,479
this package to command itself origin

00:00:59,879 --> 00:01:08,340
original trouble and so people learn so

00:01:06,479 --> 00:01:11,700
those of you who are not using it people

00:01:08,340 --> 00:01:13,229
that are using Ã©stos or okay so because

00:01:11,700 --> 00:01:14,729
I would love to hear how you're doing

00:01:13,229 --> 00:01:15,990
the SQL inspiration because I think it's

00:01:14,729 --> 00:01:17,939
not perfect at the moment you may be

00:01:15,990 --> 00:01:21,180
buddy pretty good actually

00:01:17,939 --> 00:01:23,040
okay but we don't have to mines mines

00:01:21,180 --> 00:01:25,619
get s bowl so you're doing my to

00:01:23,040 --> 00:01:28,700
minus-50 get builders as those are

00:01:25,619 --> 00:01:28,700
setting the builder

00:01:34,320 --> 00:01:51,990
I don't use the integrated version just

00:01:38,100 --> 00:02:01,020
plain people okay of having always the

00:01:51,990 --> 00:02:04,890
text set after I think that maybe well

00:02:01,020 --> 00:02:07,950
maybe it did the box there was something

00:02:04,890 --> 00:02:11,580
I was annoyed with so I went to Peter

00:02:07,950 --> 00:02:14,250
and basically using people package only

00:02:11,580 --> 00:02:16,020
with dish dish it take only okay after

00:02:14,250 --> 00:02:16,380
the beer okay if I'm said it's funny

00:02:16,020 --> 00:02:18,780
okay

00:02:16,380 --> 00:02:21,650
also you may be doing with no thanks at

00:02:18,780 --> 00:02:21,650
all you're just joking

00:02:26,630 --> 00:02:29,630
yeah

00:02:34,550 --> 00:02:39,989
when I you people are all people

00:02:36,990 --> 00:02:41,280
directly in with Genesis the the thing

00:02:39,989 --> 00:02:42,840
that takes most of the time it's like

00:02:41,280 --> 00:02:44,400
I'm packaging all the dependencies so

00:02:42,840 --> 00:02:46,530
are you using that kind of several

00:02:44,400 --> 00:02:49,410
changements like the feed install

00:02:46,530 --> 00:02:57,239
dependencies or are you just xst I'm

00:02:49,410 --> 00:02:58,739
waiting for it or even tmpfs so so we

00:02:57,239 --> 00:03:06,959
were choosing the texture handling and

00:02:58,739 --> 00:03:09,440
it was at the end of the last much less

00:03:06,959 --> 00:03:09,440
people then

00:03:21,210 --> 00:03:24,210
yeah

00:04:14,060 --> 00:05:18,720
always I think there are few weapons

00:05:10,500 --> 00:05:19,620
along the package protein they we have a

00:05:18,720 --> 00:05:23,280
tool called

00:05:19,620 --> 00:05:25,740
DPT debian protein which works similar

00:05:23,280 --> 00:05:28,830
with the commands and it has for example

00:05:25,740 --> 00:05:32,910
also an import a week sub command which

00:05:28,830 --> 00:05:36,390
calls but also twice to figure out if

00:05:32,910 --> 00:05:38,790
there's an upstream repository which

00:05:36,390 --> 00:05:40,860
will then be written down into the

00:05:38,790 --> 00:05:43,470
debian upstream meter dr. automatically

00:05:40,860 --> 00:05:48,180
and then fold into with the upstream

00:05:43,470 --> 00:05:52,140
paper option and just everything set up

00:05:48,180 --> 00:05:55,410
for using that feature okay so i can

00:05:52,140 --> 00:05:59,330
imagine there may be more wrappers

00:05:55,410 --> 00:06:03,540
around GBP and that package power tools

00:05:59,330 --> 00:06:06,630
package we're features may be may move

00:06:03,540 --> 00:06:08,139
over to gbb pop up yeah I'll make an egg

00:06:06,630 --> 00:06:09,460
making them

00:06:08,139 --> 00:06:11,349
more widely or something like that

00:06:09,460 --> 00:06:12,520
because yeah if they're working well so

00:06:11,349 --> 00:06:15,099
you basically pulling in all the

00:06:12,520 --> 00:06:17,650
upstream kids if it's available

00:06:15,099 --> 00:06:19,629
yes which I think by night because it's

00:06:17,650 --> 00:06:20,169
two steps at the moon I'm using the TP t

00:06:19,629 --> 00:06:23,650
part

00:06:20,169 --> 00:06:26,770
hush-hush which is what I would like to

00:06:23,650 --> 00:06:29,409
see in here already for Mumper packages

00:06:26,770 --> 00:06:33,340
and works well for me because it looks

00:06:29,409 --> 00:06:35,680
in and Debian GPP conf what's the format

00:06:33,340 --> 00:06:45,240
of the text and only pushes variants

00:06:35,680 --> 00:06:48,430
text not upstream checks okay okay then

00:06:45,240 --> 00:06:52,779
the other thing it's like now we had our

00:06:48,430 --> 00:06:55,599
Marty so I think I use very often so I'm

00:06:52,779 --> 00:07:00,159
usually an importing all the original

00:06:55,599 --> 00:07:05,919
Cabos - you can actually mentioned that

00:07:00,159 --> 00:07:08,589
before very nice especially if upstream

00:07:05,919 --> 00:07:10,089
science its releases that novel also

00:07:08,589 --> 00:07:13,479
this is you scan is chopped down to

00:07:10,089 --> 00:07:17,469
better verify the signatures if not you

00:07:13,479 --> 00:07:18,819
can just pass it the the URL so it will

00:07:17,469 --> 00:07:20,080
just download the table one and imports

00:07:18,819 --> 00:07:22,750
it so you don't have to do that in two

00:07:20,080 --> 00:07:25,029
steps is anybody using that order or is

00:07:22,750 --> 00:07:27,219
everybody you can use can anyway I'm

00:07:25,029 --> 00:07:31,770
using that quite often I like it with a

00:07:27,219 --> 00:07:31,770
lot I'm using it as TPT import okay so

00:07:41,639 --> 00:07:47,370
yes so one thing we did for Jesse is

00:07:44,710 --> 00:07:50,560
just like remove all the kids card so

00:07:47,370 --> 00:07:52,300
before that we had GBP import auric and

00:07:50,560 --> 00:07:55,500
get input or again we kind of dropped

00:07:52,300 --> 00:07:55,500
all the big parts and that's only

00:07:57,130 --> 00:08:00,870
or should be there any more than any

00:08:01,080 --> 00:08:06,040
kind of the changes because we had kinda

00:08:04,060 --> 00:08:08,110
create rules that the neutrals only had

00:08:06,040 --> 00:08:09,670
to GBP part the old to take oath and now

00:08:08,110 --> 00:08:14,800
we have the free use of transition or

00:08:09,670 --> 00:08:30,450
something so if I do the mitosis get

00:08:14,800 --> 00:08:32,560
something then it's Phil will the be

00:08:30,450 --> 00:08:35,349
Bill Pickett screens in the phone

00:08:32,560 --> 00:08:36,820
without and without something like of

00:08:35,349 --> 00:08:43,860
you thinking about that one but then you

00:08:36,820 --> 00:08:43,860
had one exception and I think so because

00:08:46,170 --> 00:08:49,900
become very short and it could come up

00:08:48,400 --> 00:08:51,640
with anything else and actually it's not

00:08:49,900 --> 00:08:52,720
absolutely necessary I don't want to go

00:08:51,640 --> 00:09:01,150
through another name change again

00:08:52,720 --> 00:09:03,700
because it's just one I use quite often

00:09:01,150 --> 00:09:05,470
this like with GBP Q import is the time

00:09:03,700 --> 00:09:07,660
machine option which basically uses your

00:09:05,470 --> 00:09:09,340
HQ and if it doesn't apply on the heck

00:09:07,660 --> 00:09:10,570
just throw it down back in history and

00:09:09,340 --> 00:09:12,520
so it finds a point where it applies

00:09:10,570 --> 00:09:13,960
because sometimes you have a pesky which

00:09:12,520 --> 00:09:15,730
is outdated and then you kind of

00:09:13,960 --> 00:09:17,140
important Utah whole and your pet your

00:09:15,730 --> 00:09:18,610
group to apply anymore so you can just

00:09:17,140 --> 00:09:22,630
go back in this refined the last time I

00:09:18,610 --> 00:09:24,190
can use get teammates makes it simple or

00:09:22,630 --> 00:09:25,630
if you haven't taken from somebody else

00:09:24,190 --> 00:09:27,520
you don't know where it would apply you

00:09:25,630 --> 00:09:29,560
can just use that one and the three just

00:09:27,520 --> 00:09:32,910
says go back more no more than three

00:09:29,560 --> 00:09:32,910
four bits and testify

00:09:34,290 --> 00:09:43,780
oh yeah all the pages quite small so it

00:09:39,490 --> 00:09:45,130
doesn't linear any the going back yes

00:09:43,780 --> 00:09:50,320
wait wait if it goes back on the - no

00:09:45,130 --> 00:09:52,630
she's a bisect no it's like

00:09:50,320 --> 00:09:54,700
so the usual use case is like you have a

00:09:52,630 --> 00:09:56,950
nap today test you using for the normal

00:09:54,700 --> 00:09:58,930
or a copy here we important you or a

00:09:56,950 --> 00:10:00,940
table just forget for the time they put

00:09:58,930 --> 00:10:04,870
the new upstream yeah get a lot of

00:10:00,940 --> 00:10:08,710
commits and yes if you're if you're

00:10:04,870 --> 00:10:10,060
having are you having upstream in like

00:10:08,710 --> 00:10:11,950
the absolute mystery dance so actually

00:10:10,060 --> 00:10:14,830
we should maybe edit make it possible to

00:10:11,950 --> 00:10:19,330
in five seconds well everything quite

00:10:14,830 --> 00:10:21,250
nice that's so any volunteers for these

00:10:19,330 --> 00:10:23,050
kind of things just just let me know but

00:10:21,250 --> 00:10:24,460
I think especially if you if you have

00:10:23,050 --> 00:10:33,130
the abstract story get this will speed

00:10:24,460 --> 00:10:35,200
up things a lot what I mean I think you

00:10:33,130 --> 00:10:48,700
just be up loud enough it will be picked

00:10:35,200 --> 00:10:52,090
up by the camera how do they choose

00:10:48,700 --> 00:10:55,810
their listen them to Jack I mean if you

00:10:52,090 --> 00:10:59,530
have a posting git repository on a

00:10:55,810 --> 00:11:04,550
branch and you also checking

00:10:59,530 --> 00:11:08,240
top was a stammering branchy

00:11:04,550 --> 00:11:12,950
then your your marriage into the libyan

00:11:08,240 --> 00:11:16,730
branch as to success and the top screen

00:11:12,950 --> 00:11:19,820
also has another ancestors and if you go

00:11:16,730 --> 00:11:22,970
the right way then it's still that you

00:11:19,820 --> 00:11:28,550
only have to go back like three comets

00:11:22,970 --> 00:11:38,180
to have your HP but if you got it

00:11:28,550 --> 00:11:41,630
already so so he if you if you use like

00:11:38,180 --> 00:11:42,920
like auric to to import the table all

00:11:41,630 --> 00:11:45,740
the day again branches your left hand

00:11:42,920 --> 00:11:47,570
parents or just goes down left but it's

00:11:45,740 --> 00:11:49,760
not very clever like trying to

00:11:47,570 --> 00:11:51,680
possibilities just take the first parent

00:11:49,760 --> 00:11:53,780
and even anyway and it's not there

00:11:51,680 --> 00:12:00,470
because you know without some other tool

00:11:53,780 --> 00:12:03,110
then it won't fight no not yet yeah so

00:12:00,470 --> 00:12:05,480
make some the basic idea mentioned here

00:12:03,110 --> 00:12:07,670
was exactly that so so if nobody else

00:12:05,480 --> 00:12:09,050
besides me is using it that is perfect

00:12:07,670 --> 00:12:10,610
you find this is so if you are using it

00:12:09,050 --> 00:12:13,630
and doesn't find history then should

00:12:10,610 --> 00:12:13,630
just picked it up and

00:12:22,810 --> 00:12:28,089
okay so but if you have a repository

00:12:26,540 --> 00:12:35,779
where it doesn't work then they just

00:12:28,089 --> 00:12:38,089
publish it some very possible other

00:12:35,779 --> 00:12:40,040
questions okay music above so it's fine

00:12:38,089 --> 00:12:50,420
if you do you're just under stepping in

00:12:40,040 --> 00:12:53,180
between each other and understand sorry

00:12:50,420 --> 00:12:55,850
if you aren't your own upstream it's not

00:12:53,180 --> 00:13:07,070
that some remote code that some small

00:12:55,850 --> 00:13:09,709
script you want to maintain just know

00:13:07,070 --> 00:13:11,540
you but you don't need to so so what I

00:13:09,709 --> 00:13:13,760
usually do is I mind my own upstream and

00:13:11,540 --> 00:13:15,560
to keep so if I don't want to want to

00:13:13,760 --> 00:13:17,209
keep the david history in just one round

00:13:15,560 --> 00:13:19,220
I usually just need to write to my

00:13:17,209 --> 00:13:21,019
master branch without forgiving on and I

00:13:19,220 --> 00:13:22,760
have a dead end branch but I have I do

00:13:21,019 --> 00:13:24,589
our three Marines I just merge it over

00:13:22,760 --> 00:13:31,850
to the Damien branch and boom okay

00:13:24,589 --> 00:13:34,220
that's the way I and then that basically

00:13:31,850 --> 00:13:36,199
Britain to the next thing so but

00:13:34,220 --> 00:13:38,750
nevertheless you might want to have like

00:13:36,199 --> 00:13:40,339
a pristine tar capital table also when I

00:13:38,750 --> 00:13:43,699
build like packages everywhere I'm I own

00:13:40,339 --> 00:13:45,620
my own upstream I did Christine talked

00:13:43,699 --> 00:13:50,029
of it so it will just kind of like

00:13:45,620 --> 00:13:51,769
commit back the the pristine to our

00:13:50,029 --> 00:13:53,570
history of that branch so if I want to

00:13:51,769 --> 00:13:55,970
regenerate it at a later point that can

00:13:53,570 --> 00:13:58,070
regenerate in having five identical

00:13:55,970 --> 00:14:00,050
table wall but that is actually for

00:13:58,070 --> 00:14:02,240
especially these cases or when you don't

00:14:00,050 --> 00:14:03,920
use any upstream travels at all we

00:14:02,240 --> 00:14:05,980
proceed to our colleges kind of your

00:14:03,920 --> 00:14:08,990
friends here because it just kind of

00:14:05,980 --> 00:14:13,220
saves you the exit pristine tar

00:14:08,990 --> 00:14:16,970
yeah so we've been talking about the

00:14:13,220 --> 00:14:19,040
Continental GB because it before there

00:14:16,970 --> 00:14:24,380
are two other commands which came up

00:14:19,040 --> 00:14:27,020
before in the workflow part which is GDP

00:14:24,380 --> 00:14:30,680
or TS C and D for KC's I'm mostly using

00:14:27,020 --> 00:14:32,420
for for an abuser these kind of things

00:14:30,680 --> 00:14:33,830
and this is Ruby kind of partially

00:14:32,420 --> 00:14:35,780
superseded by the kids because if you

00:14:33,830 --> 00:14:38,990
have kids with you on the repository you

00:14:35,780 --> 00:14:42,560
can just use it directly so but it's

00:14:38,990 --> 00:14:44,600
supposed to stay here for them for for a

00:14:42,560 --> 00:14:47,210
long time and if akagi's using min and

00:14:44,600 --> 00:14:51,860
other there's all type of debian and

00:14:47,210 --> 00:14:53,690
it's fine anyway so there's that

00:14:51,860 --> 00:14:55,340
completion at the moment F and there's

00:14:53,690 --> 00:14:56,810
the shell completion because some of the

00:14:55,340 --> 00:14:58,610
options are quite long and sometimes you

00:14:56,810 --> 00:14:59,840
have to put a branch name there and then

00:14:58,610 --> 00:15:02,540
you don't want to remember how the

00:14:59,840 --> 00:15:03,890
grantors a name but the shell completion

00:15:02,540 --> 00:15:05,660
is currently unmaintained and I'm not

00:15:03,890 --> 00:15:07,430
using set shell myself so I wonder if

00:15:05,660 --> 00:15:13,690
there's anybody there who kind of want

00:15:07,430 --> 00:15:13,690
to pick up this edge hold well okay

00:15:13,870 --> 00:15:22,010
maybe it would be a good point to put it

00:15:18,710 --> 00:15:23,810
said shell upstream then okay so they

00:15:22,010 --> 00:15:28,160
are maintaining upstream completions are

00:15:23,810 --> 00:15:32,930
a lot of yeah usually the rule of thumb

00:15:28,160 --> 00:15:35,690
is if the software upstream is

00:15:32,930 --> 00:15:39,770
maintaining it anyway it's better there

00:15:35,690 --> 00:15:42,740
but if it's not maintained properly it's

00:15:39,770 --> 00:15:48,560
probably best maintained with such shell

00:15:42,740 --> 00:15:51,680
itself okay so we can have a look to

00:15:48,560 --> 00:15:53,170
make a move over yeah so maybe you can

00:15:51,680 --> 00:15:57,070
because again you can tell if it's like

00:15:53,170 --> 00:15:57,070
upstream look how the reckoning

00:15:57,190 --> 00:16:02,710
yeah well I'm packaging satchel and king

00:16:00,400 --> 00:16:07,230
with well there's even one more member

00:16:02,710 --> 00:16:10,480
yeah but that's not my part of expertise

00:16:07,230 --> 00:16:12,490
so you are able to actually be nice

00:16:10,480 --> 00:16:16,920
because the moment is I think it's just

00:16:12,490 --> 00:16:19,120
broken I think you before yeah and so

00:16:16,920 --> 00:16:21,910
nice yeah

00:16:19,120 --> 00:16:25,120
sorry I haven't noticed that there okay

00:16:21,910 --> 00:16:27,340
Robin either okay Uncle Jesse works fine

00:16:25,120 --> 00:16:35,050
maybe on something right yeah maybe it's

00:16:27,340 --> 00:16:37,900
just broken on state so some of the

00:16:35,050 --> 00:16:39,340
recent means like since the last time I

00:16:37,900 --> 00:16:42,520
talked about it like it which I think

00:16:39,340 --> 00:16:44,350
was in New York so with this we had this

00:16:42,520 --> 00:16:46,060
before we have the one one to be super

00:16:44,350 --> 00:16:49,150
come on now which which made it in grabs

00:16:46,060 --> 00:16:51,060
everything else GDP country come on we

00:16:49,150 --> 00:16:55,510
have to this is which is not that old so

00:16:51,060 --> 00:16:57,280
I proposed like its naming scheme which

00:16:55,510 --> 00:16:59,590
I think would be actually a nice thing

00:16:57,280 --> 00:17:01,720
to discuss here because I think this is

00:16:59,590 --> 00:17:03,510
kind of important to downstreams who

00:17:01,720 --> 00:17:05,709
look at our history and kind of

00:17:03,510 --> 00:17:09,490
important for us if we have another

00:17:05,709 --> 00:17:11,470
repository and then what I want and to

00:17:09,490 --> 00:17:13,839
find that the actual branch is going to

00:17:11,470 --> 00:17:17,220
work is being down and so who knows

00:17:13,839 --> 00:17:17,220
about m14

00:17:34,610 --> 00:17:39,080
I think what what is proposed to depth

00:17:36,440 --> 00:17:42,320
14 makes it makes a lot of sense and in

00:17:39,080 --> 00:17:44,360
many situations and so the first idea is

00:17:42,320 --> 00:17:46,370
basically to put everything into Italian

00:17:44,360 --> 00:17:48,529
names they said basic in steps hero but

00:17:46,370 --> 00:17:50,899
if I understand that correctly so so all

00:17:48,529 --> 00:17:56,929
deadly related word upstream will stay

00:17:50,899 --> 00:17:58,309
in natural namespace and you want to

00:17:56,929 --> 00:18:03,019
talk about it or because I did you know

00:17:58,309 --> 00:18:06,529
it much more about night yes Chinese as

00:18:03,019 --> 00:18:08,870
I said to not mix up too much because

00:18:06,529 --> 00:18:10,399
the default Cupid microchip to use the

00:18:08,870 --> 00:18:13,130
master branch with david package a nice

00:18:10,399 --> 00:18:16,700
beach virtual when you want to reporter

00:18:13,130 --> 00:18:18,320
streaming people put it in true one its

00:18:16,700 --> 00:18:19,669
inverse of the period not spring because

00:18:18,320 --> 00:18:31,279
the other we always have to think the

00:18:19,669 --> 00:18:34,100
other way around to be able to share

00:18:31,279 --> 00:18:41,810
easily get repository between

00:18:34,100 --> 00:18:42,740
County for my case and also so there is

00:18:41,810 --> 00:18:44,870
some discretion

00:18:42,740 --> 00:18:49,280
I said I agree which makes a lot of

00:18:44,870 --> 00:18:51,230
sense but not everybody agrees still I

00:18:49,280 --> 00:18:55,780
think it would be nice to get big

00:18:51,230 --> 00:18:55,780
package before to this name

00:19:09,510 --> 00:19:25,860
it's a pain I should panic need to do

00:19:12,480 --> 00:19:27,480
our new round of discussion so maybe it

00:19:25,860 --> 00:19:31,620
would be actually good step to like kind

00:19:27,480 --> 00:19:33,510
of in the package configuration like a

00:19:31,620 --> 00:19:34,830
set of configuration which does that

00:19:33,510 --> 00:19:38,970
you're gonna have to command out some

00:19:34,830 --> 00:19:40,620
lines to get conformance then announce

00:19:38,970 --> 00:19:45,870
that the default will switch in I don't

00:19:40,620 --> 00:19:47,760
know when he's being abandoned or

00:19:45,870 --> 00:19:50,490
something no matter this is fu behavior

00:19:47,760 --> 00:19:56,580
change that can make it easier to do

00:19:50,490 --> 00:19:59,250
booty switch typically you can assume

00:19:56,580 --> 00:20:01,230
that the current branch is david package

00:19:59,250 --> 00:20:04,049
in branch if there is the video 3 and

00:20:01,230 --> 00:20:07,889
say yeah complaining that Steven

00:20:04,049 --> 00:20:11,220
they've been lunch setting much rather

00:20:07,889 --> 00:20:13,529
the day for value doesn't match if you

00:20:11,220 --> 00:20:16,130
set it in gdb don't constitute

00:20:13,529 --> 00:20:19,080
respecting but if it's not like anywhere

00:20:16,130 --> 00:20:22,649
today for should be okay so we have to

00:20:19,080 --> 00:20:24,360
speak meet unkind yes I also had once

00:20:22,649 --> 00:20:26,039
that this experience just the second

00:20:24,360 --> 00:20:28,380
this because if you have to some reason

00:20:26,039 --> 00:20:30,059
different DB on branches that it's

00:20:28,380 --> 00:20:31,860
strange is some how much between the

00:20:30,059 --> 00:20:33,360
branches and they always have to take

00:20:31,860 --> 00:20:36,029
care for this particular entry in

00:20:33,360 --> 00:20:38,940
cbn.com and there's a little bit strange

00:20:36,029 --> 00:20:41,250
and yeah and by default policy this

00:20:38,940 --> 00:20:44,299
would be amended and a similar problem I

00:20:41,250 --> 00:20:44,299
eat every time

00:20:45,830 --> 00:20:50,989
I had it a pure with I would work in

00:20:48,440 --> 00:20:53,299
this room I want two important new acts

00:20:50,989 --> 00:20:56,960
for their food sovereignty in your

00:20:53,299 --> 00:21:00,230
dreams is GD GD import Ori but since the

00:20:56,960 --> 00:21:02,950
defo of david branch is master it will

00:21:00,230 --> 00:21:06,350
check out master and try to match the

00:21:02,950 --> 00:21:10,460
actual function master but actually I

00:21:06,350 --> 00:21:18,710
want I want whatever putting up separate

00:21:10,460 --> 00:21:20,960
upstream branch and I forgot to actually

00:21:18,710 --> 00:21:24,499
I think it doesn't even respect when you

00:21:20,960 --> 00:21:29,509
say you keep taking brunch on the GBP

00:21:24,499 --> 00:21:34,549
import already does it I got it I forgot

00:21:29,509 --> 00:21:36,259
it each branch so would you do it before

00:21:34,549 --> 00:21:38,419
chip it work on the branch you're on

00:21:36,259 --> 00:21:42,049
well the d4 is for a bit that's easy

00:21:38,419 --> 00:21:43,460
this should be either no d4 so do people

00:21:42,049 --> 00:21:44,989
behavior enough the default value to

00:21:43,460 --> 00:21:49,789
just 24 behavior would be cheaper to

00:21:44,989 --> 00:21:52,629
merge on the branch you're on or if it's

00:21:49,789 --> 00:21:52,629
a conjunction

00:22:10,770 --> 00:22:21,850
yes except it's just going to add called

00:22:19,330 --> 00:22:23,350
the current branch name in the file

00:22:21,850 --> 00:22:26,620
because when you merge into somewhere

00:22:23,350 --> 00:22:31,600
else you have to tear it every time Oh a

00:22:26,620 --> 00:22:35,260
lot every time but if you have the name

00:22:31,600 --> 00:22:37,780
of the current branch it did - DVD comp

00:22:35,260 --> 00:22:45,330
and she managed this branch in another

00:22:37,780 --> 00:22:49,470
branch which is walk three of the same

00:22:45,330 --> 00:22:52,270
same function it would complain anyway I

00:22:49,470 --> 00:22:54,429
tell you and I've got an option just as

00:22:52,270 --> 00:22:56,800
documentation for what branch I'm going

00:22:54,429 --> 00:23:01,420
to eventually merge this back into

00:22:56,800 --> 00:23:03,820
pass that get that branch peoples play

00:23:01,420 --> 00:23:07,990
every time it was always explosively

00:23:03,820 --> 00:23:13,030
even though the values there otherwise

00:23:07,990 --> 00:23:19,120
it to brunch that I'm talking in

00:23:13,030 --> 00:23:21,160
sustainability when I maintain Junko 1.6

00:23:19,120 --> 00:23:24,310
and wonderful so definitely I want to

00:23:21,160 --> 00:23:28,630
take two that's a buncha separately so I

00:23:24,310 --> 00:23:30,040
take the time to to write it down but I

00:23:28,630 --> 00:23:37,180
don't see the need to write down of the

00:23:30,040 --> 00:23:39,940
training package and so then what about

00:23:37,180 --> 00:23:42,340
the upstream namespace so I think that

00:23:39,940 --> 00:23:44,500
14 everyone will just test you use like

00:23:42,340 --> 00:23:48,040
like something like 1.5 dot X if you're

00:23:44,500 --> 00:23:51,640
tracking the one of extraneous tweet

00:23:48,040 --> 00:23:54,880
from I mean today for debug package is

00:23:51,640 --> 00:23:57,280
fine for most packages and as soon as

00:23:54,880 --> 00:24:00,670
need to track multiple upstream branches

00:23:57,280 --> 00:24:03,400
and that is to do something big over

00:24:00,670 --> 00:24:07,110
streams Nash

00:24:03,400 --> 00:24:07,110
there's a different suggestion

00:24:08,210 --> 00:24:11,289
name basis

00:24:19,400 --> 00:24:23,750
yes what babies would be nice to send

00:24:22,160 --> 00:24:24,560
your eyes down and something else and I

00:24:23,750 --> 00:24:26,510
think that's the problem with the

00:24:24,560 --> 00:24:28,190
current default is like if you start

00:24:26,510 --> 00:24:30,290
with upstream by default and anything

00:24:28,190 --> 00:24:31,760
upstream / or something else it would

00:24:30,290 --> 00:24:34,100
kind of mess up the people's repository

00:24:31,760 --> 00:24:36,740
so it so the question would be should we

00:24:34,100 --> 00:24:46,760
then go for like upstream / whatever

00:24:36,740 --> 00:24:48,560
then by default and work with that but

00:24:46,760 --> 00:24:50,570
what you do package can do is actually

00:24:48,560 --> 00:24:51,830
you can try it from the branch and it

00:24:50,570 --> 00:24:53,690
can try to figure out the distribution

00:24:51,830 --> 00:24:56,390
to build for so if you say it's just

00:24:53,690 --> 00:24:58,040
like that 14 and it then it will try to

00:24:56,390 --> 00:24:59,930
find people or environment which is

00:24:58,040 --> 00:25:01,850
painful and you're on a branch of that

00:24:59,930 --> 00:25:04,970
in experimental then it will just find

00:25:01,850 --> 00:25:06,560
try to find the people there environment

00:25:04,970 --> 00:25:09,350
that's called experimental if you're on

00:25:06,560 --> 00:25:11,780
sick branch book - it and here is Jesse

00:25:09,350 --> 00:25:14,390
Grahm we'll find Jesse two weeks ago

00:25:11,780 --> 00:25:16,370
didn't work at all so then shall be

00:25:14,390 --> 00:25:22,160
better than pile back please because I'm

00:25:16,370 --> 00:25:32,990
using it all day so so what was the

00:25:22,160 --> 00:25:35,300
problem actually had couldn't find yes

00:25:32,990 --> 00:25:38,270
but did you use the people report all

00:25:35,300 --> 00:25:41,570
what a you skipped if people are

00:25:38,270 --> 00:25:44,600
I can't define builder inside the

00:25:41,570 --> 00:25:46,040
concrete okay yeah so that doesn't make

00:25:44,600 --> 00:25:48,250
a difference so but then we should have

00:25:46,040 --> 00:25:48,250
a look

00:25:49,260 --> 00:25:53,970
yes some some other things we which are

00:25:52,380 --> 00:25:55,649
still ongoing and which I kind of hope

00:25:53,970 --> 00:25:57,570
to finish it like so we have something

00:25:55,649 --> 00:25:59,639
like there's a fork of get code package

00:25:57,570 --> 00:26:02,490
which allows you to those RPM packages

00:25:59,639 --> 00:26:08,639
anybody using that here yeah anybody

00:26:02,490 --> 00:26:10,529
else just I checked with my roads the

00:26:08,639 --> 00:26:11,220
vehicle suggestions use absolute /

00:26:10,529 --> 00:26:18,299
latest

00:26:11,220 --> 00:26:20,909
okay because we have part of this an RPM

00:26:18,299 --> 00:26:22,409
support in in the Delian package already

00:26:20,909 --> 00:26:25,409
we also have the stack file so you can

00:26:22,409 --> 00:26:27,419
group these things like an RPM packages

00:26:25,409 --> 00:26:28,950
so if you are kind of in the situation

00:26:27,419 --> 00:26:31,620
that you have to kind of build any

00:26:28,950 --> 00:26:33,570
packages on Contador or whatever you can

00:26:31,620 --> 00:26:36,029
just use that one to do the RPM okay

00:26:33,570 --> 00:26:38,250
growth package and like kind of kind of

00:26:36,029 --> 00:26:42,330
getting the rest of the tools merged is

00:26:38,250 --> 00:26:43,590
kind of ongoing at the moment and yeah

00:26:42,330 --> 00:26:45,059
we have some other other changes like

00:26:43,590 --> 00:26:47,399
they are repository support which is

00:26:45,059 --> 00:26:50,190
like so that you can import like cobbles

00:26:47,399 --> 00:26:51,779
into a very positive and we have a shed

00:26:50,190 --> 00:26:53,100
support which you kind of equally

00:26:51,779 --> 00:27:01,890
believe me jenkin at these kind of

00:26:53,100 --> 00:27:05,210
things it was mentioned before I think

00:27:01,890 --> 00:27:08,159
still chair but what is it so I think

00:27:05,210 --> 00:27:09,870
the idea is basically that you so when

00:27:08,159 --> 00:27:12,169
you when you merge in a string version

00:27:09,870 --> 00:27:15,690
and you have that on your on your

00:27:12,169 --> 00:27:17,700
upstream branch then basically what you

00:27:15,690 --> 00:27:19,529
what you'd sometimes what you want is

00:27:17,700 --> 00:27:21,120
like you want on your debian branch you

00:27:19,529 --> 00:27:22,679
want exactly the a string version plus

00:27:21,120 --> 00:27:24,330
your own Debian directory so you

00:27:22,679 --> 00:27:26,850
basically don't care if there is any

00:27:24,330 --> 00:27:28,950
rich working or anything else you don't

00:27:26,850 --> 00:27:29,940
care if upstream has a deadly directory

00:27:28,950 --> 00:27:31,710
don't we don't what are you allergic

00:27:29,940 --> 00:27:34,080
entree caused by this so it basically

00:27:31,710 --> 00:27:36,360
just fixed the unique meaning for the

00:27:34,080 --> 00:27:38,399
absolute version and puts that on your

00:27:36,360 --> 00:27:41,490
debian branches at the old and indirect

00:27:38,399 --> 00:27:44,340
weight I was losing that thanks yeah

00:27:41,490 --> 00:27:45,720
okay and so we might need some more

00:27:44,340 --> 00:27:48,000
tools like maybe to move up with the

00:27:45,720 --> 00:27:49,320
deme directly between different

00:27:48,000 --> 00:27:50,760
directories but I think that sometimes

00:27:49,320 --> 00:27:52,080
it makes much easier because you have

00:27:50,760 --> 00:27:57,750
taken stuff in there

00:27:52,080 --> 00:27:58,980
it should totally help yeah so and then

00:27:57,750 --> 00:28:01,590
I'm going changes at the moment our pipe

00:27:58,980 --> 00:28:03,419
free support and merchants final rpm

00:28:01,590 --> 00:28:05,940
support we haven't worked progress

00:28:03,419 --> 00:28:09,870
branch which kind of builds and runs the

00:28:05,940 --> 00:28:12,840
tests with - three but I've not really

00:28:09,870 --> 00:28:14,760
used it myself yet so if anybody wants

00:28:12,840 --> 00:28:16,830
to jump in and test

00:28:14,760 --> 00:28:21,389
- two - three porting is the nicest

00:28:16,830 --> 00:28:26,330
thing what do you mean exactly by

00:28:21,389 --> 00:28:26,330
support to provide an IPA actually for

00:28:26,929 --> 00:28:41,279
applications which are easy to do so so

00:28:36,809 --> 00:28:42,809
it's about big waiting it's been and you

00:28:41,279 --> 00:28:46,160
know part as well it's like about

00:28:42,809 --> 00:28:49,880
working in like the hearts of people

00:28:46,160 --> 00:28:53,220
to be able to to build RPM packages

00:28:49,880 --> 00:29:00,180
they'll do RPM work was mostly done by

00:28:53,220 --> 00:29:01,710
Marcus Mitchell which I think what I'm

00:29:00,180 --> 00:29:04,140
currently working on is like kind of

00:29:01,710 --> 00:29:05,310
what if what or what what really is bad

00:29:04,140 --> 00:29:06,720
about it would already at the moment if

00:29:05,310 --> 00:29:08,010
you run out of disk space or these kind

00:29:06,720 --> 00:29:12,270
of things then you have to kind of

00:29:08,010 --> 00:29:14,220
rewind all the branches yourself and the

00:29:12,270 --> 00:29:16,170
idea is basically to be more clever than

00:29:14,220 --> 00:29:17,910
that and just clean up after yourself if

00:29:16,170 --> 00:29:19,980
you fail between the different steps

00:29:17,910 --> 00:29:24,660
like importing the table will merge into

00:29:19,980 --> 00:29:26,700
the branch break into text yeah so

00:29:24,660 --> 00:29:28,590
that's basically so the worst thing

00:29:26,700 --> 00:29:30,180
usually is like pretty talkative eats up

00:29:28,590 --> 00:29:31,890
all your time space and anything's and

00:29:30,180 --> 00:29:33,360
then you have to go back and that's

00:29:31,890 --> 00:29:37,770
basically moving my motivation for

00:29:33,360 --> 00:29:41,040
writing my compilers that the merge

00:29:37,770 --> 00:29:43,380
fails at the end and we hope we have

00:29:41,040 --> 00:29:46,920
that resolved now yeah well I like that

00:29:43,380 --> 00:29:52,170
just now yeah so but one thing I only

00:29:46,920 --> 00:29:53,700
noticed quite ladies that if I I can fix

00:29:52,170 --> 00:29:55,800
the upstream branch

00:29:53,700 --> 00:30:01,530
it usually obvious about the tech yeah

00:29:55,800 --> 00:30:03,660
but I never noticed it it will also do

00:30:01,530 --> 00:30:05,400
the pristine table again yeah exactly so

00:30:03,660 --> 00:30:06,810
that's basically what for Setar does it

00:30:05,400 --> 00:30:09,420
doesn't care about what's on the branch

00:30:06,810 --> 00:30:11,160
it just does it again and so the guy

00:30:09,420 --> 00:30:16,200
here is just too if this thing is just

00:30:11,160 --> 00:30:23,910
clean up great no that's the current

00:30:16,200 --> 00:30:25,140
working progress but that's basically

00:30:23,910 --> 00:30:30,450
the next thing I want to do it because

00:30:25,140 --> 00:30:36,050
otherwise check the tank that you would

00:30:30,450 --> 00:30:36,050
want to apply in the end so sometimes I

00:30:36,680 --> 00:30:42,420
actually got a successful import or

00:30:40,590 --> 00:30:47,580
whatever reason for instance because I

00:30:42,420 --> 00:30:51,090
do repackaging of my upstream tar ball

00:30:47,580 --> 00:30:52,300
and I decide that my read back tar ball

00:30:51,090 --> 00:30:55,390
is not one that

00:30:52,300 --> 00:30:57,400
to use but I pre-pack it again I can use

00:30:55,390 --> 00:30:59,860
the name again but sometimes up after

00:30:57,400 --> 00:31:00,820
the tanker than the import filter across

00:30:59,860 --> 00:31:23,170
the back ready

00:31:00,820 --> 00:31:26,890
exists good documentation but I think

00:31:23,170 --> 00:31:29,950
from a lot of people ask have a hard

00:31:26,890 --> 00:31:31,990
time understanding the workflow most of

00:31:29,950 --> 00:31:36,160
the workflow is very well documented on

00:31:31,990 --> 00:31:43,570
the website but I don't think in the

00:31:36,160 --> 00:31:45,700
depend packages everything is they are

00:31:43,570 --> 00:31:47,410
parts missing something I'm not that

00:31:45,700 --> 00:31:50,170
much of documentation right now so if

00:31:47,410 --> 00:31:52,990
anybody wants to jump in here and and

00:31:50,170 --> 00:31:56,410
document the workflow it will actually

00:31:52,990 --> 00:31:58,570
quite nice because um that's I think

00:31:56,410 --> 00:32:00,640
that's really something that could

00:31:58,570 --> 00:32:01,960
improve on and I think the manual

00:32:00,640 --> 00:32:03,340
doesn't have a single picture or hand

00:32:01,960 --> 00:32:07,060
like that where you have a tree which

00:32:03,340 --> 00:32:08,860
holds the flag up anything so if there

00:32:07,060 --> 00:32:16,840
are in volunteers who kind of like to

00:32:08,860 --> 00:32:18,490
write HTML box otherwise I just think it

00:32:16,840 --> 00:32:22,150
won't happen in the near future because

00:32:18,490 --> 00:32:24,160
I try to write the documentation I think

00:32:22,150 --> 00:32:27,180
from the Robie few heads to somebody and

00:32:24,160 --> 00:32:29,500
has understand that feel quite badly so

00:32:27,180 --> 00:32:31,320
they should be nice to have somebody

00:32:29,500 --> 00:32:41,730
jump in there

00:32:31,320 --> 00:32:45,160
yeah Robeck would be nice or an option

00:32:41,730 --> 00:32:47,500
that checks okay

00:32:45,160 --> 00:32:50,590
I want to work on this version and I

00:32:47,500 --> 00:32:54,040
already have this tape and checks okay

00:32:50,590 --> 00:32:57,580
it's my file that I want to write the

00:32:54,040 --> 00:32:59,950
same that is already committed then I

00:32:57,580 --> 00:33:02,200
say okay it's already committed and

00:32:59,950 --> 00:33:03,850
matches and I'm done yeah so but

00:33:02,200 --> 00:33:05,800
basically that I would see that in

00:33:03,850 --> 00:33:08,790
Christie tar-like not doing the same

00:33:05,800 --> 00:33:08,790
work over again

00:33:13,540 --> 00:33:17,020
yeah but then that's the better bad

00:33:15,760 --> 00:33:35,080
thing by itself I think you know that

00:33:17,020 --> 00:33:40,120
we're using with that okay I think

00:33:35,080 --> 00:33:44,410
there's a buck for that just one more

00:33:40,120 --> 00:33:47,440
finger back to the time machine

00:33:44,410 --> 00:33:49,750
I just got the impression that maybe it

00:33:47,440 --> 00:33:54,070
would actually make more sense to go

00:33:49,750 --> 00:33:55,780
back on the upstream branch if you if

00:33:54,070 --> 00:33:58,679
you have pain patches because the

00:33:55,780 --> 00:34:01,900
failure is caused by some upstate

00:33:58,679 --> 00:34:03,910
yes but so be it I hear you had a time

00:34:01,900 --> 00:34:06,190
machine things like to find a lot any

00:34:03,910 --> 00:34:07,780
inversion by this edge cool it's too

00:34:06,190 --> 00:34:10,060
because that's your view of things at

00:34:07,780 --> 00:34:12,159
the moment could could actually go back

00:34:10,060 --> 00:34:17,250
at the astronaut place where it broke so

00:34:12,159 --> 00:34:17,250
it may be easier to fix the breakage

00:34:24,929 --> 00:34:28,450
some things we're not they're really

00:34:26,830 --> 00:34:32,770
terribly good and there are facts as

00:34:28,450 --> 00:34:34,780
well and I'm basically usually very

00:34:32,770 --> 00:34:36,730
happy with what with what did I end up

00:34:34,780 --> 00:34:41,080
on that when I score kotecha choose but

00:34:36,730 --> 00:34:42,850
at the moment doesn't really respect any

00:34:41,080 --> 00:34:44,859
depth free header so if there is a debt

00:34:42,850 --> 00:34:46,929
free header like which stands where does

00:34:44,859 --> 00:34:49,450
something come from and is my luxury and

00:34:46,929 --> 00:34:51,220
you imported and Yuri exported again and

00:34:49,450 --> 00:34:54,340
it would just basically forget about

00:34:51,220 --> 00:34:57,040
most of the stuff that is in there there

00:34:54,340 --> 00:35:00,490
is another tool for similar purpose

00:34:57,040 --> 00:35:05,200
called get dead cherry yeah and I hit PK

00:35:00,490 --> 00:35:07,630
g package that one has recently got

00:35:05,200 --> 00:35:10,710
support for storing exactly that those

00:35:07,630 --> 00:35:14,170
implement this information in keep notes

00:35:10,710 --> 00:35:17,560
so maybe that's something for Bill

00:35:14,170 --> 00:35:20,859
package HQ to to saw that three errors

00:35:17,560 --> 00:35:24,820
and notes because they get updated after

00:35:20,859 --> 00:35:30,430
time anyway so like forwarded no to yes

00:35:24,820 --> 00:35:32,410
or yeah well other pocket parts for

00:35:30,430 --> 00:35:36,670
example and I'm good you back record is

00:35:32,410 --> 00:35:38,560
added so yeah well maybe that's helpful

00:35:36,670 --> 00:35:40,270
there and then you notice attached to

00:35:38,560 --> 00:35:43,589
the one who commits that has the patch

00:35:40,270 --> 00:35:51,030
waiting at night yeah well you know

00:35:43,589 --> 00:35:51,030
there's a people against I think

00:35:52,349 --> 00:35:58,599
package to fetch the hobbits importance

00:35:55,990 --> 00:36:04,990
I think you have all the information now

00:35:58,599 --> 00:36:06,369
occurrences in there yeah yeah I saw

00:36:04,990 --> 00:36:13,630
that it's basically kind of beautiful

00:36:06,369 --> 00:36:16,300
cherry but I didn't think could we make

00:36:13,630 --> 00:36:22,270
a big package doing all the talk we see

00:36:16,300 --> 00:36:26,589
a typo is from which place does it care

00:36:22,270 --> 00:36:28,780
about package it will say there's the

00:36:26,589 --> 00:36:31,630
uncommitted changes there's a cop PC

00:36:28,780 --> 00:36:36,819
folder so you were able to pull from

00:36:31,630 --> 00:36:42,760
each tree over the object which is using

00:36:36,819 --> 00:36:49,420
credit yeah even on a fire yeah PC for

00:36:42,760 --> 00:36:51,460
were still there yeah might one that

00:36:49,420 --> 00:36:54,010
might make you run into other problems

00:36:51,460 --> 00:36:57,970
so using getting more new all the time

00:36:54,010 --> 00:37:00,099
you might end up just yeah ignoring

00:36:57,970 --> 00:37:04,079
other quad he thinks that should be have

00:37:00,099 --> 00:37:04,079
been Camilla goes to around

00:37:10,110 --> 00:37:20,200
so is anybody going to try this box then

00:37:13,360 --> 00:37:23,460
because I always able to get anyway so

00:37:20,200 --> 00:37:23,460
one thing that came up I think the

00:37:24,930 --> 00:37:30,940
skills change session before is like

00:37:27,400 --> 00:37:34,300
like supporting like clean branches and

00:37:30,940 --> 00:37:36,190
this kind of thing so is anybody in kind

00:37:34,300 --> 00:37:39,430
of like something something you wanted

00:37:36,190 --> 00:37:44,430
to share how he keeps up his his history

00:37:39,430 --> 00:37:47,410
and oh no it's not if it stops from from

00:37:44,430 --> 00:37:58,630
free stuff like images and skeptics are

00:37:47,410 --> 00:38:01,600
using filter next generation barrier can

00:37:58,630 --> 00:38:03,850
specify hi excuse yeah and special power

00:38:01,600 --> 00:38:11,650
packs in the table that you don't want

00:38:03,850 --> 00:38:14,680
to have your if sg3 Tabo and use can can

00:38:11,650 --> 00:38:17,440
handle that and know that and Thomas the

00:38:14,680 --> 00:38:22,560
tarball throughout these unwanted files

00:38:17,440 --> 00:38:22,560
and we take them

00:38:23,680 --> 00:38:30,250
 knock fits nicely into the velcro

00:38:26,260 --> 00:38:33,490
hello changes to so it's already in

00:38:30,250 --> 00:38:34,840
Jesse or in unstable because I do

00:38:33,490 --> 00:38:37,750
remember some discussion the devil girl

00:38:34,840 --> 00:38:42,930
parts missing someone and I'm not sure

00:38:37,750 --> 00:38:42,930
about the current worst okay very good

00:38:45,420 --> 00:38:50,080
yeah then he sometimes so is anybody

00:38:48,550 --> 00:38:57,250
maintaining packages with multi-block

00:38:50,080 --> 00:38:59,920
strict our walls because there's no

00:38:57,250 --> 00:39:03,640
support for each in just a moment and I

00:38:59,920 --> 00:39:05,260
kind of don't didn't count get with the

00:39:03,640 --> 00:39:07,330
same works awesome do you want to kind

00:39:05,260 --> 00:39:08,830
of use sub-modules I want to use do you

00:39:07,330 --> 00:39:10,690
want to use detached histories for

00:39:08,830 --> 00:39:13,810
different are walls or do you wanna use

00:39:10,690 --> 00:39:15,430
get subtrees which is obtained up like

00:39:13,810 --> 00:39:16,600
that because I don't look but because

00:39:15,430 --> 00:39:18,490
all the time I think about I think if

00:39:16,600 --> 00:39:19,960
you do it like in get it just with

00:39:18,490 --> 00:39:21,880
different trees it just gets more

00:39:19,960 --> 00:39:27,910
complicated than just using SAP or

00:39:21,880 --> 00:39:30,780
usable in one power so some suppose

00:39:27,910 --> 00:39:30,780
would be nice because

00:39:36,539 --> 00:39:49,979
I want to package and they have the game

00:39:45,739 --> 00:39:57,989
model data in the Gita so we could

00:39:49,979 --> 00:40:02,189
generate certain package with current

00:39:57,989 --> 00:40:05,369
funding supplementary tarballs it would

00:40:02,189 --> 00:40:07,859
be nice but suggest I using one

00:40:05,369 --> 00:40:09,449
repository I'm not carrying that they're

00:40:07,859 --> 00:40:10,529
kind of different projects owned and

00:40:09,449 --> 00:40:15,229
carrying a deal

00:40:10,529 --> 00:40:15,229
oops export time or using support or

00:40:16,069 --> 00:40:20,579
because let's face it before Tyco

00:40:17,969 --> 00:40:23,419
usually then give up and say ok now that

00:40:20,579 --> 00:40:23,419
somebody has handle

00:40:49,580 --> 00:40:59,870
singing it needs to be thought a bit

00:40:54,800 --> 00:40:59,870
louder they may be also issues come into

00:41:01,280 --> 00:41:06,540
the short-term what would be nice is

00:41:03,270 --> 00:41:14,460
simply to be able to take an existing

00:41:06,540 --> 00:41:16,440
repository generate disability Superman

00:41:14,460 --> 00:41:21,300
character but we already have we only

00:41:16,440 --> 00:41:26,240
track the reference but the meeting

00:41:21,300 --> 00:41:34,020
plants should be able to be generated I

00:41:26,240 --> 00:41:39,600
think well my case is like the first one

00:41:34,020 --> 00:41:42,480
I I just have packaged with many many

00:41:39,600 --> 00:41:45,240
similar tar balls you know no processing

00:41:42,480 --> 00:41:49,050
almost no processing needed I just need

00:41:45,240 --> 00:41:52,860
to throw them over create many many very

00:41:49,050 --> 00:41:55,530
similar packages with them so I don't

00:41:52,860 --> 00:41:58,470
care how the tar balls are stored I can

00:41:55,530 --> 00:41:59,250
store them externally figure out how to

00:41:58,470 --> 00:42:03,260
catch them

00:41:59,250 --> 00:42:06,030
I just need to store the few bits

00:42:03,260 --> 00:42:07,470
company I just don't want to get to

00:42:06,030 --> 00:42:12,240
build manage to get in my way

00:42:07,470 --> 00:42:16,110
ok and it does at the moment or from the

00:42:12,240 --> 00:42:18,540
little number if I think it does SBN

00:42:16,110 --> 00:42:19,440
pill package have to be patched with

00:42:18,540 --> 00:42:22,550
Psychopaths

00:42:19,440 --> 00:42:22,550
for it to work

00:42:29,420 --> 00:42:37,650
so maybe we can just sit down and try

00:42:33,860 --> 00:42:40,470
yeah so um so what what so that would be

00:42:37,650 --> 00:42:43,950
the key branch support multiple tarballs

00:42:40,470 --> 00:42:45,780
and that's what you wrote already like

00:42:43,950 --> 00:42:47,460
if we have the RPM support we actually

00:42:45,780 --> 00:42:51,030
want to support Mach for building like

00:42:47,460 --> 00:42:55,800
you be in RPMs quite nice so having

00:42:51,030 --> 00:43:00,570
something similar to get people or I so

00:42:55,800 --> 00:43:03,030
I will put this somewhere so we so there

00:43:00,570 --> 00:43:04,440
are unit tests within the package so if

00:43:03,030 --> 00:43:09,860
you want to kind of submit a patch then

00:43:04,440 --> 00:43:12,540
you could run the tests and yeah so

00:43:09,860 --> 00:43:13,950
let's uncover yo your new use cases

00:43:12,540 --> 00:43:16,860
thank you

00:43:13,950 --> 00:43:18,690
there are some component tests which are

00:43:16,860 --> 00:43:20,130
currently storing extra stuff for you so

00:43:18,690 --> 00:43:21,660
you can get some when you update my

00:43:20,130 --> 00:43:24,570
friends then and those component tests

00:43:21,660 --> 00:43:26,640
will be running as well and you can book

00:43:24,570 --> 00:43:29,460
the documentation and kind of indicates

00:43:26,640 --> 00:43:30,420
you really want to add some workflows

00:43:29,460 --> 00:43:33,630
and these kind of things

00:43:30,420 --> 00:43:35,460
um directly and then it will just

00:43:33,630 --> 00:43:37,830
generate the HTML pages and the main

00:43:35,460 --> 00:43:41,390
pages and there's some epitope generated

00:43:37,830 --> 00:43:43,890
things for them for the for the piping

00:43:41,390 --> 00:43:45,570
parts especially the repository related

00:43:43,890 --> 00:43:48,870
commands are actually talking about it

00:43:45,570 --> 00:43:51,210
quite well so it might kind of help if

00:43:48,870 --> 00:43:52,680
you want to contribute some pictures so

00:43:51,210 --> 00:43:56,400
that basically everything from my

00:43:52,680 --> 00:44:02,090
assigned time over so no other questions

00:43:56,400 --> 00:44:05,090
then so it is what is it one minute over

00:44:02,090 --> 00:44:05,090
okay

00:44:07,440 --> 00:44:09,500

YouTube URL: https://www.youtube.com/watch?v=Nc_6lj_F4j8


