Title: The Many ARMed Monster of Reproducibility
Publication date: 2017-12-05
Playlist: DebConf 16
Description: 
	by Vagrant Cascadian

At: Debconf 16 video RSS feed
https://debconf16.debconf.org/
Room: Menzies 10
Scheduled start: 2016-07-04 16:10:00
Captions: 
	00:00:00,230 --> 00:00:08,429
the many our months of Sue's ability so

00:00:04,310 --> 00:00:17,850
hi I'm Becca Cascadian and I may have

00:00:08,429 --> 00:00:19,980
created a monster so just a really very

00:00:17,850 --> 00:00:22,949
brief introduction to the idea of

00:00:19,980 --> 00:00:26,460
reproducible builds basically the idea

00:00:22,949 --> 00:00:28,800
is ideally if you build a package from a

00:00:26,460 --> 00:00:31,349
given set of source code you build it

00:00:28,800 --> 00:00:34,170
with a particular tool train the

00:00:31,349 --> 00:00:36,350
binaries in a really ideal world it

00:00:34,170 --> 00:00:39,210
should come out the same identical

00:00:36,350 --> 00:00:41,879
exactly the same they usually don't

00:00:39,210 --> 00:00:44,550
we're working on fixing that and this is

00:00:41,879 --> 00:00:46,710
a project that got me into the big mess

00:00:44,550 --> 00:00:49,860
of trying to demonstrate that it works

00:00:46,710 --> 00:00:52,050
on basically trying to find more

00:00:49,860 --> 00:00:54,600
variations by testing on an entirely

00:00:52,050 --> 00:00:56,489
different architecture you can find a

00:00:54,600 --> 00:01:00,960
little bit more about reproducible

00:00:56,489 --> 00:01:04,170
builds at reproducible builds org but

00:01:00,960 --> 00:01:06,510
I'm basically assuming you get what

00:01:04,170 --> 00:01:11,610
reproducible builds is about at least on

00:01:06,510 --> 00:01:12,570
some level so what led me to do this

00:01:11,610 --> 00:01:15,840
crazy thing

00:01:12,570 --> 00:01:19,350
I'm the u-boot maintainer which was kind

00:01:15,840 --> 00:01:21,979
of a crazy thing in its own right and I

00:01:19,350 --> 00:01:25,110
noticed that you boot was marked as

00:01:21,979 --> 00:01:27,479
reproducible and I knew that was

00:01:25,110 --> 00:01:29,790
absolutely ridiculous because every time

00:01:27,479 --> 00:01:32,909
I booted you boot on all of these random

00:01:29,790 --> 00:01:36,060
systems I've been testing you get a date

00:01:32,909 --> 00:01:38,610
string with the seconds in it I mean how

00:01:36,060 --> 00:01:41,880
many times am I and and it the u-boot

00:01:38,610 --> 00:01:45,720
builds like countless targets they're

00:01:41,880 --> 00:01:49,020
not all building in under one second it

00:01:45,720 --> 00:01:51,509
usually takes a few minutes at least so

00:01:49,020 --> 00:01:54,659
I knew something was wrong here and

00:01:51,509 --> 00:01:56,579
obviously some packages built

00:01:54,659 --> 00:01:58,950
differently on different architectures

00:01:56,579 --> 00:02:03,570
some packages don't even get built on

00:01:58,950 --> 00:02:06,210
every architecture and so I thought well

00:02:03,570 --> 00:02:08,720
I've got this handful of arm boards that

00:02:06,210 --> 00:02:11,910
people have donated to me

00:02:08,720 --> 00:02:13,530
just to largely detest u-boot or just

00:02:11,910 --> 00:02:16,980
because they thought oh here vagrant

00:02:13,530 --> 00:02:21,150
have a board and I was a sucker to take

00:02:16,980 --> 00:02:22,830
them but now finally I had something

00:02:21,150 --> 00:02:25,980
productive to do with them

00:02:22,830 --> 00:02:28,080
I figured well I could like set up this

00:02:25,980 --> 00:02:33,300
whole infrastructure to reproduce these

00:02:28,080 --> 00:02:35,519
builds myself but why not share so I

00:02:33,300 --> 00:02:38,069
decided to contact the reproducible

00:02:35,519 --> 00:02:43,230
builds team and say hey why don't I set

00:02:38,069 --> 00:02:46,260
up a few of these boards for you so we

00:02:43,230 --> 00:02:49,980
started out pretty small in August we

00:02:46,260 --> 00:02:52,920
got you know two dual core and two

00:02:49,980 --> 00:02:56,280
quad-core machines running that's an

00:02:52,920 --> 00:03:01,170
example of one of them that's a humming

00:02:56,280 --> 00:03:06,120
board I to ex1 gig of ram dual core

00:03:01,170 --> 00:03:09,480
pretty cool and then it went live in

00:03:06,120 --> 00:03:13,500
September it was building about 200

00:03:09,480 --> 00:03:15,090
source packages a day with over 20,000

00:03:13,500 --> 00:03:18,630
packages and really it's probably more

00:03:15,090 --> 00:03:20,430
like over 24,000 it was looking like

00:03:18,630 --> 00:03:22,950
it's gonna take over a hundred days to

00:03:20,430 --> 00:03:26,069
build the entire archive just for

00:03:22,950 --> 00:03:29,180
unstable what a mess

00:03:26,069 --> 00:03:31,739
that's not you know it's a pretty big

00:03:29,180 --> 00:03:35,250
development cycle to test the entire

00:03:31,739 --> 00:03:40,739
archives so that was just wasn't going

00:03:35,250 --> 00:03:43,410
to do so I bought a couple more boards

00:03:40,739 --> 00:03:45,420
and I got some donations I kind of

00:03:43,410 --> 00:03:47,340
solicited some donations got one from

00:03:45,420 --> 00:03:49,829
BeagleBoard and then Holger was like

00:03:47,340 --> 00:03:56,459
vagrant are you buying all these boards

00:03:49,829 --> 00:03:59,340
yourself yeah well so Holger helped by

00:03:56,459 --> 00:04:03,410
soliciting to get a donation from the

00:03:59,340 --> 00:04:05,849
DPL - and we wrote up a proposal to

00:04:03,410 --> 00:04:07,980
double or triple the capacity of our

00:04:05,849 --> 00:04:11,430
build Network a picture there is an

00:04:07,980 --> 00:04:14,220
example of a beagle board x-15 that was

00:04:11,430 --> 00:04:16,079
one of the ones donated but the majority

00:04:14,220 --> 00:04:21,100
of our network got built out from funds

00:04:16,079 --> 00:04:23,710
from Debian this is basically

00:04:21,100 --> 00:04:25,990
what it looks like when I started

00:04:23,710 --> 00:04:29,710
building this out there just cables

00:04:25,990 --> 00:04:32,260
everywhere cable management is not my

00:04:29,710 --> 00:04:34,420
strength but even if it was it's a lot

00:04:32,260 --> 00:04:41,650
of chaos

00:04:34,420 --> 00:04:43,840
so what's it yeah there are a few so

00:04:41,650 --> 00:04:46,480
yeah we can see a handful of systems

00:04:43,840 --> 00:04:47,950
there but that's basically what it looks

00:04:46,480 --> 00:04:52,780
like these pictures were taken a few

00:04:47,950 --> 00:04:55,060
days ago the basic gist of the current

00:04:52,780 --> 00:04:58,180
setup we've got a few dual core a few

00:04:55,060 --> 00:05:01,360
quad core you know anywhere from 1 to 4

00:04:58,180 --> 00:05:03,820
gigs of ram the tilde on the 4 gigs of

00:05:01,360 --> 00:05:06,070
ram is well we'll only one of our boards

00:05:03,820 --> 00:05:09,130
actually recognizes all four gigs we've

00:05:06,070 --> 00:05:12,100
got a few q box i four-by-fours

00:05:09,130 --> 00:05:16,740
which recognize only three point eight

00:05:12,100 --> 00:05:16,740
gigs of ram but that's still pretty good

00:05:18,180 --> 00:05:24,190
so how many what's from a thingies we

00:05:20,920 --> 00:05:27,130
got you know i did a little math cuz you

00:05:24,190 --> 00:05:32,260
know we're pretty good at math right at

00:05:27,130 --> 00:05:35,800
least with computers 86 cores and 43

00:05:32,260 --> 00:05:38,710
gigabytes of ram but you know we're

00:05:35,800 --> 00:05:41,020
comparing apples to oranges some of the

00:05:38,710 --> 00:05:43,420
cores are a lot faster than others and

00:05:41,020 --> 00:05:45,580
some of the ram is faster or slower so

00:05:43,420 --> 00:05:49,990
that's those are kind of stupid numbers

00:05:45,580 --> 00:05:51,910
really so a useful number since we're

00:05:49,990 --> 00:05:53,830
building packages is we're up to

00:05:51,910 --> 00:05:56,290
building about fourteen hundred packages

00:05:53,830 --> 00:05:59,590
a day and actually the last few weeks

00:05:56,290 --> 00:06:02,770
it's looking more like 1600 you see some

00:05:59,590 --> 00:06:06,480
of those red spikes and I think one of

00:06:02,770 --> 00:06:09,520
our best days we got to around 2000

00:06:06,480 --> 00:06:11,320
builds all of unstable testing and

00:06:09,520 --> 00:06:13,990
experimental and I'm about a

00:06:11,320 --> 00:06:16,420
month-and-a-half which that's more

00:06:13,990 --> 00:06:17,890
reasonable I also kind of feel like

00:06:16,420 --> 00:06:20,320
maybe we shouldn't bother testing

00:06:17,890 --> 00:06:23,250
testing and all that and then we could

00:06:20,320 --> 00:06:26,380
get a real development cycle going but

00:06:23,250 --> 00:06:31,270
so anyone want to take a guess where we

00:06:26,380 --> 00:06:33,970
started getting a lot of donations it's

00:06:31,270 --> 00:06:34,990
actually kind of funny basically it's

00:06:33,970 --> 00:06:37,000
basically we

00:06:34,990 --> 00:06:40,720
started all the new machines went live

00:06:37,000 --> 00:06:42,970
right on this deep dip right here that's

00:06:40,720 --> 00:06:45,310
the way life goes but there are some

00:06:42,970 --> 00:06:47,230
technical glitches and then a few days

00:06:45,310 --> 00:06:49,570
later we started bumping up to more

00:06:47,230 --> 00:06:51,460
around like a thousand packages a day

00:06:49,570 --> 00:06:56,860
and you know getting into some more

00:06:51,460 --> 00:06:59,230
reasonable numbers the whole build

00:06:56,860 --> 00:07:04,300
network runs in under a hundred eighty

00:06:59,230 --> 00:07:06,190
watts there's a picture of the power

00:07:04,300 --> 00:07:09,100
remote power controller so I can

00:07:06,190 --> 00:07:11,170
manually reset them they don't always

00:07:09,100 --> 00:07:14,620
stay up 24/7

00:07:11,170 --> 00:07:16,420
some of them crash we rarely go a day

00:07:14,620 --> 00:07:19,990
without at least one crash but that

00:07:16,420 --> 00:07:22,060
switch has some features to auto ping

00:07:19,990 --> 00:07:27,520
them and resect and reset them when

00:07:22,060 --> 00:07:29,440
needed and so you know yeah and right

00:07:27,520 --> 00:07:32,140
now I think one of the boards is

00:07:29,440 --> 00:07:33,490
actually down at the moment and it's

00:07:32,140 --> 00:07:37,780
probably not getting back till I get

00:07:33,490 --> 00:07:41,050
home but and by comparison if you don't

00:07:37,780 --> 00:07:44,380
know what on what one watt is or 180

00:07:41,050 --> 00:07:47,680
watts is the space heaters use that dub

00:07:44,380 --> 00:07:51,640
comm 16 used between 400 and 800 watts

00:07:47,680 --> 00:07:54,720
so we could easily run to two you know

00:07:51,640 --> 00:07:57,700
four of these build networks in the

00:07:54,720 --> 00:08:01,020
energy it takes to run just a single one

00:07:57,700 --> 00:08:01,020
of the space heaters we've been using

00:08:02,190 --> 00:08:06,700
this uses a fair amount of bandwidth and

00:08:04,750 --> 00:08:10,050
I didn't really think about this when I

00:08:06,700 --> 00:08:13,720
when I when I started this project but

00:08:10,050 --> 00:08:17,620
the vast majority you know we've

00:08:13,720 --> 00:08:20,170
download about a hundred some hundreds

00:08:17,620 --> 00:08:22,960
of gigabytes of you know source packages

00:08:20,170 --> 00:08:27,160
every day but the real surprise is how

00:08:22,960 --> 00:08:32,260
many we upload we upload about this is

00:08:27,160 --> 00:08:35,440
in for June we upload like over half a

00:08:32,260 --> 00:08:37,390
terabyte of you know binary packages

00:08:35,440 --> 00:08:39,040
because we build them twice and then we

00:08:37,390 --> 00:08:42,250
upload somewhere where it does all the

00:08:39,040 --> 00:08:44,950
comparisons the proxy server however I

00:08:42,250 --> 00:08:48,529
did an apt caching proxy server that

00:08:44,950 --> 00:08:51,470
delivered you know almost five terabytes

00:08:48,529 --> 00:08:55,910
Dadda in June so I guess the proxy

00:08:51,470 --> 00:08:57,829
server is working pretty well but yeah I

00:08:55,910 --> 00:09:00,170
was a little surprised we started

00:08:57,829 --> 00:09:03,259
hitting near the bandwidth limits of my

00:09:00,170 --> 00:09:08,569
ISP at one point and they never

00:09:03,259 --> 00:09:11,209
complained which I'm glad so we've got a

00:09:08,569 --> 00:09:13,399
number of different types of boards one

00:09:11,209 --> 00:09:14,930
of the things one of my goals was well

00:09:13,399 --> 00:09:17,809
if we're going to try and create

00:09:14,930 --> 00:09:19,639
variations let's throw in some variety

00:09:17,809 --> 00:09:22,819
let's get as many different types of

00:09:19,639 --> 00:09:25,999
boards as we can get and most of them

00:09:22,819 --> 00:09:28,189
are free scale imx6 base boards but

00:09:25,999 --> 00:09:30,860
we've got a handful of other ones and

00:09:28,189 --> 00:09:38,600
and there are some multiples on a number

00:09:30,860 --> 00:09:40,360
of these and yeah I really I doubt if

00:09:38,600 --> 00:09:43,519
we've actually found anything that

00:09:40,360 --> 00:09:46,399
builds reproducibly on one set of boards

00:09:43,519 --> 00:09:48,290
and not on another but but in theory

00:09:46,399 --> 00:09:50,720
it's possible something might actually

00:09:48,290 --> 00:09:57,649
check the CPU type running and build

00:09:50,720 --> 00:10:00,110
differently we'll find out and then so

00:09:57,649 --> 00:10:01,939
as a result of all this I actually ended

00:10:00,110 --> 00:10:04,730
up enabling a number of platforms and

00:10:01,939 --> 00:10:07,850
Debian Network out of the box or almost

00:10:04,730 --> 00:10:13,100
out of the box got you or a Linux

00:10:07,850 --> 00:10:17,120
support for the Odroid Firefly or droid

00:10:13,100 --> 00:10:18,920
zu4 and BeagleBoard x-15 enabled you

00:10:17,120 --> 00:10:21,350
boot which I'm the maintainer of for a

00:10:18,920 --> 00:10:23,269
number of other boards and enabled

00:10:21,350 --> 00:10:24,709
Debian installer support for some boards

00:10:23,269 --> 00:10:26,449
some of the boards actually already had

00:10:24,709 --> 00:10:28,490
some of this support so I didn't have to

00:10:26,449 --> 00:10:34,429
do as much so that's why these are not

00:10:28,490 --> 00:10:38,179
all like perfectly lined up here but and

00:10:34,429 --> 00:10:42,230
then there are platforms mmm it's kind

00:10:38,179 --> 00:10:45,740
of sad so some of them lack mainline

00:10:42,230 --> 00:10:48,350
kernel and you boot and I got a couple

00:10:45,740 --> 00:10:50,720
of those I picked up the Odroid see one

00:10:48,350 --> 00:10:52,850
myself and we got a couple QB boards for

00:10:50,720 --> 00:10:55,490
the build but they just don't go

00:10:52,850 --> 00:10:59,379
anywhere the vendor kernels suck the

00:10:55,490 --> 00:11:02,270
vendor you boot it like it might be but

00:10:59,379 --> 00:11:04,130
even you know rebooting once a day

00:11:02,270 --> 00:11:09,380
that's maybe tolerable but rebooting

00:11:04,130 --> 00:11:11,570
every hour - not really viable some of

00:11:09,380 --> 00:11:14,060
them also lack mainline kernel support

00:11:11,570 --> 00:11:17,150
the QB truck bus and the Lee maker high

00:11:14,060 --> 00:11:19,250
key haven't really been able to use them

00:11:17,150 --> 00:11:23,240
because the vendor kernel is not so

00:11:19,250 --> 00:11:27,260
great and and well the mainline support

00:11:23,240 --> 00:11:30,080
maybe it exists but like Martin Michael

00:11:27,260 --> 00:11:32,330
Meyer said and his last talk yeah you

00:11:30,080 --> 00:11:34,040
know serial console is nice and all and

00:11:32,330 --> 00:11:36,950
you can see the RAM and it might even

00:11:34,040 --> 00:11:38,660
recognize all the CPU cores but not

00:11:36,950 --> 00:11:44,990
particularly useful if you don't have

00:11:38,660 --> 00:11:47,600
any USB support or or you know the

00:11:44,990 --> 00:11:50,210
microSD or anything like that and a

00:11:47,600 --> 00:11:52,640
number of them we're using but they

00:11:50,210 --> 00:11:55,940
require some non free binary blobs you

00:11:52,640 --> 00:11:58,610
know Raspberry Pi the Odroid family are

00:11:55,940 --> 00:12:01,580
all disastrous in that regard and I'm

00:11:58,610 --> 00:12:04,160
not sure about Firefly it's a rock chip

00:12:01,580 --> 00:12:06,560
based one it might have some binary

00:12:04,160 --> 00:12:09,860
thing I had trouble resurrecting one

00:12:06,560 --> 00:12:12,080
when it had a terrible fail and then

00:12:09,860 --> 00:12:15,800
I've worked I'm running some patch new

00:12:12,080 --> 00:12:19,700
boots for the Firefly for gigabyte

00:12:15,800 --> 00:12:22,220
variant and the cubox I 4x4 need to work

00:12:19,700 --> 00:12:25,430
on some sort of auto detection to figure

00:12:22,220 --> 00:12:27,860
out so that you can run the same you

00:12:25,430 --> 00:12:31,550
boot on multiple different boards right

00:12:27,860 --> 00:12:34,130
now the if you try to run the 4 gigabyte

00:12:31,550 --> 00:12:36,890
variant of you boot on the to get 2

00:12:34,130 --> 00:12:39,290
gigabyte board model it'll just crash or

00:12:36,890 --> 00:12:45,410
something so it doesn't work out so

00:12:39,290 --> 00:12:47,540
great so we're looking at some other

00:12:45,410 --> 00:12:51,050
boards in the future

00:12:47,540 --> 00:12:52,850
I've got a few pine 64 boards waiting at

00:12:51,050 --> 00:12:55,670
home and there's been really great

00:12:52,850 --> 00:12:59,240
progress on mainline support for both

00:12:55,670 --> 00:13:02,570
you boot and the kernel I don't know how

00:12:59,240 --> 00:13:05,810
Oh droids see twos coming but I'm I'll

00:13:02,570 --> 00:13:07,940
spend some time on it and then we might

00:13:05,810 --> 00:13:10,520
get access to some of the maker shellow

00:13:07,940 --> 00:13:13,100
or even I've heard rumors of getting

00:13:10,520 --> 00:13:14,670
access to some HP moonshot stuff so that

00:13:13,100 --> 00:13:17,010
would be pretty exciting

00:13:14,670 --> 00:13:19,529
and one thing I'd really like to try is

00:13:17,010 --> 00:13:21,750
building the architecture independent

00:13:19,529 --> 00:13:25,290
packages on two different architectures

00:13:21,750 --> 00:13:27,209
so we build arch all on one you know on

00:13:25,290 --> 00:13:29,880
the arm HF architecture and then build

00:13:27,209 --> 00:13:36,240
it again on amd64 do they come out the

00:13:29,880 --> 00:13:37,980
same how will we ever find out I'm

00:13:36,240 --> 00:13:40,920
guessing I'm moving a little too fast

00:13:37,980 --> 00:13:48,839
here which will be plenty of time for

00:13:40,920 --> 00:13:51,390
questions so in the distant future I I

00:13:48,839 --> 00:13:54,950
think the autonomous reproducible build

00:13:51,390 --> 00:13:57,480
network will reproduce the entire earth

00:13:54,950 --> 00:14:03,600
this is kind of the monster we're

00:13:57,480 --> 00:14:06,300
heading towards many thanks to all sorts

00:14:03,600 --> 00:14:08,279
folks Holger has put in an absurd amount

00:14:06,300 --> 00:14:10,430
of time getting this infrastructure set

00:14:08,279 --> 00:14:12,990
up we've gotten hardware donations

00:14:10,430 --> 00:14:15,180
mostly from Debian they contributed

00:14:12,990 --> 00:14:19,050
probably about two-thirds of the build

00:14:15,180 --> 00:14:21,600
network the maker has donated a handful

00:14:19,050 --> 00:14:24,660
of boards directly or indirectly not so

00:14:21,600 --> 00:14:27,480
bad and BeagleBoard donated the

00:14:24,660 --> 00:14:29,820
BeagleBoard x-15 which I don't think

00:14:27,480 --> 00:14:31,769
it's generally available yet so Debian

00:14:29,820 --> 00:14:35,430
supports aboard that's not even really

00:14:31,769 --> 00:14:38,640
on the market yet surprised and solid

00:14:35,430 --> 00:14:40,410
run also donated one of the boards the

00:14:38,640 --> 00:14:43,079
reproducible builds team is awesome

00:14:40,410 --> 00:14:46,560
they've really put up with me in a lot

00:14:43,079 --> 00:14:48,779
of ways - pester them about hey I've got

00:14:46,560 --> 00:14:51,240
this idea how we could do this or that

00:14:48,779 --> 00:14:55,829
they've been really supportive even if

00:14:51,240 --> 00:15:00,839
they say no and my partner did of most

00:14:55,829 --> 00:15:04,230
of the photos in this and so we've got a

00:15:00,839 --> 00:15:07,860
I've got you know I'll introduce you to

00:15:04,230 --> 00:15:12,149
the staff we've got a humming board one

00:15:07,860 --> 00:15:15,480
that basically does it's got two 13 port

00:15:12,149 --> 00:15:17,550
13 port USB serial consoles and that's

00:15:15,480 --> 00:15:20,820
basically just doing some serial console

00:15:17,550 --> 00:15:24,300
monitoring on all the boards we've got

00:15:20,820 --> 00:15:29,790
an RPI we have two RPI Raspberry Pi 2

00:15:24,300 --> 00:15:32,610
boards look it's

00:15:29,790 --> 00:15:35,190
most all of the boards are running on a

00:15:32,610 --> 00:15:37,350
hundred twenty gigabyte SSDs some of

00:15:35,190 --> 00:15:42,829
them with SATA some of them on USB -

00:15:37,350 --> 00:15:48,410
some of them USB 3 this one is the

00:15:42,829 --> 00:15:48,410
cubieboard 3 a KA the QB truck

00:15:48,449 --> 00:15:55,800
another Raspberry Pi this is one of the

00:15:53,250 --> 00:16:02,399
cubox eye boards it's one of the most

00:15:55,800 --> 00:16:06,470
it's literally a black box yeah but more

00:16:02,399 --> 00:16:06,470
open than your typical black box I guess

00:16:06,889 --> 00:16:13,079
the Odroid Zhu for those are one of the

00:16:10,949 --> 00:16:15,120
few ones that actually has a fan which

00:16:13,079 --> 00:16:17,970
kind of annoys me I guess they just

00:16:15,120 --> 00:16:20,250
recently made some very large heat sinks

00:16:17,970 --> 00:16:22,139
so you can run them fanless I would love

00:16:20,250 --> 00:16:24,509
to get those cuz they make little

00:16:22,139 --> 00:16:27,269
whirring noises that drive me crazy but

00:16:24,509 --> 00:16:27,810
this is one of our best performing

00:16:27,269 --> 00:16:33,690
boards

00:16:27,810 --> 00:16:38,010
despite the annoying fan it's perhaps

00:16:33,690 --> 00:16:42,990
because of yes but it's running I think

00:16:38,010 --> 00:16:46,050
a cortex a15 and it's got oh no this is

00:16:42,990 --> 00:16:48,060
the octa-core board and even though it's

00:16:46,050 --> 00:16:49,410
only got 2 gigs around it seems to

00:16:48,060 --> 00:16:53,459
consistently be one of the higher

00:16:49,410 --> 00:16:55,589
performing boards in our network this is

00:16:53,459 --> 00:16:58,829
a one board quad and this is one of the

00:16:55,589 --> 00:17:03,779
first like fairly capable arm boards I

00:16:58,829 --> 00:17:05,790
started working with and that one that

00:17:03,779 --> 00:17:08,610
one is one of the board's that rarely

00:17:05,790 --> 00:17:11,100
ever reboots which so if you want a nice

00:17:08,610 --> 00:17:12,659
solid one the one board quad it's not

00:17:11,100 --> 00:17:14,929
the most powerful thing on the market

00:17:12,659 --> 00:17:18,750
but it's reasonable and pretty stable

00:17:14,929 --> 00:17:26,309
really well supported we've got the

00:17:18,750 --> 00:17:28,079
Firefly orange PI plus 2 you can really

00:17:26,309 --> 00:17:32,250
get lost trying to figure out all the

00:17:28,079 --> 00:17:36,299
orange pi variants another Firefly board

00:17:32,250 --> 00:17:40,460
another orange PI plus 2 and I think

00:17:36,299 --> 00:17:42,740
that's it so I know

00:17:40,460 --> 00:17:48,020
we're probably almost out of time which

00:17:42,740 --> 00:17:50,230
works for me but how many anybody got

00:17:48,020 --> 00:17:50,230
any questions

00:17:54,520 --> 00:17:59,990
do they crash because of kernel bugs or

00:17:58,070 --> 00:18:03,470
because of heat or what do you have any

00:17:59,990 --> 00:18:05,720
idea not entirely sure to be perfectly

00:18:03,470 --> 00:18:08,200
honest some of the bill definitely I

00:18:05,720 --> 00:18:12,110
definitely see some kernel panics

00:18:08,200 --> 00:18:15,610
sometimes the USB kind of dies when when

00:18:12,110 --> 00:18:18,140
your root FS is on USB that can be bad

00:18:15,610 --> 00:18:20,480
there are all sorts of random things we

00:18:18,140 --> 00:18:25,910
don't really have enough time to really

00:18:20,480 --> 00:18:28,760
troubleshoot all of that but yeah mostly

00:18:25,910 --> 00:18:31,790
you know with 21 boards running we get

00:18:28,760 --> 00:18:35,390
one maybe two reboots a day that are due

00:18:31,790 --> 00:18:37,640
to who knows what but it's kind of one

00:18:35,390 --> 00:18:41,030
of those you know you know you large

00:18:37,640 --> 00:18:48,460
raid array one of those this is going to

00:18:41,030 --> 00:18:51,140
fail kind of same kind of problem yeah

00:18:48,460 --> 00:18:54,440
it looks like we've got a hand over in

00:18:51,140 --> 00:18:56,480
the back corner here okay I receipt so

00:18:54,440 --> 00:18:58,310
the question is which ports have been

00:18:56,480 --> 00:19:02,780
gave the best performance for this

00:18:58,310 --> 00:19:07,010
implementation I'm entering the the

00:19:02,780 --> 00:19:08,600
Odroid xu4 was definitely doing pretty

00:19:07,010 --> 00:19:10,910
well but it's also one of the ones that

00:19:08,600 --> 00:19:12,890
reboots the most so it's kind of an it's

00:19:10,910 --> 00:19:14,900
kind of this like well it still gets the

00:19:12,890 --> 00:19:19,490
best numbers but it just crashes

00:19:14,900 --> 00:19:21,860
randomly so and then the Wan board is a

00:19:19,490 --> 00:19:27,920
little bit less good numbers but but

00:19:21,860 --> 00:19:30,080
much more stable so yeah they're all

00:19:27,920 --> 00:19:33,020
pretty I mean they range

00:19:30,080 --> 00:19:36,290
I think they range just under a hundred

00:19:33,020 --> 00:19:37,160
builds a day up to around 200 builds a

00:19:36,290 --> 00:19:43,130
day per board

00:19:37,160 --> 00:19:45,560
I don't yeah well first of all thank you

00:19:43,130 --> 00:19:50,390
for doing all these setup is quite

00:19:45,560 --> 00:19:52,760
impressive the question is if you grow

00:19:50,390 --> 00:19:54,620
your network

00:19:52,760 --> 00:19:58,340
would it be possible to share resources

00:19:54,620 --> 00:20:01,790
for QA like for example hooking some of

00:19:58,340 --> 00:20:04,070
the boards to to lava which is a

00:20:01,790 --> 00:20:07,580
framework cleaner - for doing our

00:20:04,070 --> 00:20:10,550
validation and stuff like that yeah I

00:20:07,580 --> 00:20:13,310
think it's possible we could maybe just

00:20:10,550 --> 00:20:15,280
do some scheduled downtime for the the

00:20:13,310 --> 00:20:17,570
reproducible builds Network it's not

00:20:15,280 --> 00:20:23,180
absolutely essential we're running it

00:20:17,570 --> 00:20:25,970
you know 24/7 and we briefly chatted

00:20:23,180 --> 00:20:30,170
about actually how to do some you boot

00:20:25,970 --> 00:20:32,810
testing over lava and but yeah I'm open

00:20:30,170 --> 00:20:35,180
to the idea most of it most of the

00:20:32,810 --> 00:20:43,550
network is done with Debian funds - so

00:20:35,180 --> 00:20:45,500
yeah I'd love to share yeah so okay

00:20:43,550 --> 00:20:45,740
thank you for a talk yeah out of time

00:20:45,500 --> 00:20:48,260
now

00:20:45,740 --> 00:20:50,170
all right and so I think that

00:20:48,260 --> 00:20:52,760
discussions can always a start

00:20:50,170 --> 00:20:54,110
yeah in at the tech conference and thank

00:20:52,760 --> 00:20:54,900
you for your presentation all right

00:20:54,110 --> 00:21:00,869
thank you

00:20:54,900 --> 00:21:00,869

YouTube URL: https://www.youtube.com/watch?v=V-uIWEtbQPg


