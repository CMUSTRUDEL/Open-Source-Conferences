Title: Ruby BoF
Publication date: 2017-12-05
Playlist: DebConf 16
Description: 
	by Antonio Terceiro

At: Debconf 16 video RSS feed
https://debconf16.debconf.org/
Room: Menzies 12
Scheduled start: 2016-07-05 17:15:00
Captions: 
	00:00:00,030 --> 00:00:07,980
hello and welcome to the yearly Ruby

00:00:04,110 --> 00:00:11,670
above let's make a quick introduction

00:00:07,980 --> 00:00:15,030
who's here can you pass around

00:00:11,670 --> 00:00:16,350
microphone and start somewhere start

00:00:15,030 --> 00:00:22,859
Lucas

00:00:16,350 --> 00:00:26,840
inactive Ruby team member Khun rot

00:00:22,859 --> 00:00:36,719
I'm to observe and maybe get involved

00:00:26,840 --> 00:00:42,450
all right I'm commercial I recently

00:00:36,719 --> 00:00:44,969
become a active member in Ruby team I'm

00:00:42,450 --> 00:00:53,370
Lukas as well I recently become a member

00:00:44,969 --> 00:00:58,710
of the Ruby team - I'm at yes I'm not a

00:00:53,370 --> 00:01:02,430
member from B team I'm just looking at

00:00:58,710 --> 00:01:06,900
auto packaged test failures for rupee

00:01:02,430 --> 00:01:09,060
packages in the wood - my name is Alan

00:01:06,900 --> 00:01:15,450
I'm just here to observe and maybe get

00:01:09,060 --> 00:01:17,960
involved hi I'm Christian and happen to

00:01:15,450 --> 00:01:17,960
be on the team

00:01:24,430 --> 00:01:27,589
[Music]

00:01:35,860 --> 00:01:47,150
good there is a list of things that we

00:01:45,170 --> 00:01:52,300
possibly could talk about on gobby

00:01:47,150 --> 00:01:52,300
I hope you have seen the copy imitation

00:01:53,320 --> 00:02:01,730
we nowadays have a list of applications

00:01:58,160 --> 00:02:04,490
and important packages that maybe people

00:02:01,730 --> 00:02:13,040
want to know what we're doing for in

00:02:04,490 --> 00:02:14,959
stretch yeah so from the list that yeah

00:02:13,040 --> 00:02:17,150
I personally got to classroom which

00:02:14,959 --> 00:02:18,290
version for his mentorship which I have

00:02:17,150 --> 00:02:20,230
no idea

00:02:18,290 --> 00:02:22,910
and then I imagine people want to know

00:02:20,230 --> 00:02:26,150
what's the status of ticket lab and

00:02:22,910 --> 00:02:28,220
maybe read mine and possibly diaspora

00:02:26,150 --> 00:02:32,020
and open bill service which I didn't

00:02:28,220 --> 00:02:32,020
know we ship but apparently we do

00:02:32,140 --> 00:02:37,310
doesn't anybody know

00:02:33,890 --> 00:02:40,519
so rails rails 5 has just released a few

00:02:37,310 --> 00:02:43,550
days ago but if we upgrade we

00:02:40,519 --> 00:02:46,580
immediately break it like therefore read

00:02:43,550 --> 00:02:51,019
mining phobias so we'll probably be

00:02:46,580 --> 00:02:54,050
shipping rails 4.2 unless some miracle

00:02:51,019 --> 00:02:59,180
happens and all those guys start using

00:02:54,050 --> 00:03:02,060
rails 5 and I don't think it's a good

00:02:59,180 --> 00:03:07,250
idea to have two verses on the archive

00:03:02,060 --> 00:03:10,570
at the same time so it's probably going

00:03:07,250 --> 00:03:10,570
to be raised 4.2

00:03:30,410 --> 00:03:43,760
okay the club is is more or less working

00:03:36,680 --> 00:03:47,780
on unstable and bravi which is the main

00:03:43,760 --> 00:03:55,220
person driving the efforts dealing with

00:03:47,780 --> 00:04:02,060
lots of dependency breakage and every

00:03:55,220 --> 00:04:05,330
you and every new digital aberration has

00:04:02,060 --> 00:04:07,970
unit penises and changes the fashions it

00:04:05,330 --> 00:04:11,780
wants and it's very complicated so we

00:04:07,970 --> 00:04:17,690
are trying to deal with that we've done

00:04:11,780 --> 00:04:21,170
before is read mine so read mine and up

00:04:17,690 --> 00:04:24,200
until now we have the latest which works

00:04:21,170 --> 00:04:28,160
release which is in a good state as far

00:04:24,200 --> 00:04:35,960
as I know we have some issues on stable

00:04:28,160 --> 00:04:39,530
I already did three step updates and

00:04:35,960 --> 00:04:45,680
maybe need more because the Jessie

00:04:39,530 --> 00:04:48,500
freeze happened exactly when before read

00:04:45,680 --> 00:04:52,910
might had raised for support up three so

00:04:48,500 --> 00:04:56,420
I had to take it a non-religion snapshot

00:04:52,910 --> 00:04:56,840
it was dead or not having read mine and

00:04:56,420 --> 00:05:00,290
Jessie

00:04:56,840 --> 00:05:02,210
so there are few issues and if people

00:05:00,290 --> 00:05:04,750
wants to help with read mind I'm

00:05:02,210 --> 00:05:08,780
interested in mentoring and helping

00:05:04,750 --> 00:05:13,310
anyone interested so it's basically

00:05:08,780 --> 00:05:15,590
figure out why the problems happen and

00:05:13,310 --> 00:05:19,790
try to back part of page one up three

00:05:15,590 --> 00:05:23,210
because of obviously we don't we don't

00:05:19,790 --> 00:05:25,900
want to add a whole new upstream release

00:05:23,210 --> 00:05:25,900
to dressing

00:05:27,050 --> 00:05:35,330
I have an idea about diaspora anyone I

00:05:33,190 --> 00:05:39,680
guess it's more or less in the same

00:05:35,330 --> 00:05:42,470
status get to live as far as I know it

00:05:39,680 --> 00:05:45,199
seems the Diaspora trees and the

00:05:42,470 --> 00:05:48,139
earliest cooperative reverse the get lot

00:05:45,199 --> 00:05:54,500
people seem to care enough about the

00:05:48,139 --> 00:05:58,879
ability to be helpful and feel that the

00:05:54,500 --> 00:06:02,169
Diaspora is actually hostile today but

00:05:58,879 --> 00:06:02,169
Provost you

00:06:10,250 --> 00:06:17,000
so we're going to keep this for anyway

00:06:14,140 --> 00:06:21,250
as long as robbing is willing to

00:06:17,000 --> 00:06:21,250
maintain it I don't organize you are not

00:06:21,480 --> 00:06:24,709
[Music]

00:06:27,600 --> 00:06:38,010
some people on IRC say the video streams

00:06:31,540 --> 00:06:38,010
down okay

00:06:46,750 --> 00:06:49,470
okay

00:06:59,220 --> 00:07:09,699
and obvious injuries working on it the

00:07:06,699 --> 00:07:12,879
probably shift in stretch so there's

00:07:09,699 --> 00:07:21,909
going to be before big rails application

00:07:12,879 --> 00:07:24,550
again okay so paws are not Paul's well

00:07:21,909 --> 00:07:28,919
as on current sorry mentioned that they

00:07:24,550 --> 00:07:32,830
are working on get lipstick do six so

00:07:28,919 --> 00:07:43,629
maybe we're going to get that and Andrew

00:07:32,830 --> 00:07:45,960
is not here right he's okay thank you

00:07:43,629 --> 00:07:52,569
for the update

00:07:45,960 --> 00:07:55,539
so given recent cleanup efforts we came

00:07:52,569 --> 00:07:57,750
to an interesting question that is what

00:07:55,539 --> 00:08:02,110
should the team actually try to package

00:07:57,750 --> 00:08:04,690
because we now maintain last year we

00:08:02,110 --> 00:08:06,669
maintained over 800 packages many of

00:08:04,690 --> 00:08:11,020
them are live packages there are

00:08:06,669 --> 00:08:14,529
actually library packages and it's not

00:08:11,020 --> 00:08:17,710
clear if we should keep those so the

00:08:14,529 --> 00:08:21,520
general question is are we focusing on

00:08:17,710 --> 00:08:23,770
packaging applications and and actively

00:08:21,520 --> 00:08:28,000
remove all leave packages that are not

00:08:23,770 --> 00:08:31,180
applications or are we there to ship

00:08:28,000 --> 00:08:36,760
everything under the Sun and include and

00:08:31,180 --> 00:08:39,339
keep all those libraries or not so I'd

00:08:36,760 --> 00:08:43,180
like to have some discussion a YES on

00:08:39,339 --> 00:08:45,539
that and apparently no ship over 1,000

00:08:43,180 --> 00:08:45,539
packages

00:08:45,870 --> 00:08:53,890
thanks it week house on I see I think so

00:08:50,880 --> 00:08:55,810
my motivation is having applications so

00:08:53,890 --> 00:09:01,630
I don't package

00:08:55,810 --> 00:09:02,920
I don't package random libraries but if

00:09:01,630 --> 00:09:06,420
people are willing to do that because

00:09:02,920 --> 00:09:08,640
they're using for local scripts or for

00:09:06,420 --> 00:09:11,910
stuff they have it's not packaged

00:09:08,640 --> 00:09:14,399
who wants to use packaged libraries and

00:09:11,910 --> 00:09:15,990
I don't see a problem if that as long as

00:09:14,399 --> 00:09:22,860
the libraries are maintained it is not

00:09:15,990 --> 00:09:25,920
broken if it's broken nobody cares and

00:09:22,860 --> 00:09:27,990
we should probably remove but as long as

00:09:25,920 --> 00:09:30,959
they don't cause problems for us for

00:09:27,990 --> 00:09:34,290
instance when upgrade to new versions of

00:09:30,959 --> 00:09:36,120
the interpreter or being completely

00:09:34,290 --> 00:09:39,360
broken otherwise I buy items via

00:09:36,120 --> 00:09:41,790
probably the packages stay in there if

00:09:39,360 --> 00:09:44,910
this has to be problems I am all for

00:09:41,790 --> 00:09:49,079
removing them but we certainly don't

00:09:44,910 --> 00:09:53,640
have the ascetic size we don't have the

00:09:49,079 --> 00:09:55,110
manpower to package everything and if

00:09:53,640 --> 00:09:56,970
you look at the list of out-of-date

00:09:55,110 --> 00:09:59,880
upstream versions then that's also a

00:09:56,970 --> 00:10:02,640
very large number by now

00:09:59,880 --> 00:10:07,860
yeah I'm not sure we want to ship all

00:10:02,640 --> 00:10:10,880
libraries possibly that will cost you

00:10:07,860 --> 00:10:10,880
issues I don't know

00:10:24,140 --> 00:10:31,940
does it microphone okay well I think

00:10:27,800 --> 00:10:36,110
that in many cases an old type libraries

00:10:31,940 --> 00:10:39,730
more useful than no package at all I

00:10:36,110 --> 00:10:43,670
don't use any of those applications but

00:10:39,730 --> 00:10:50,570
I use quite a lot of libraries at a

00:10:43,670 --> 00:10:52,130
packer package in Debian so I think

00:10:50,570 --> 00:10:57,340
somebody such as to the other day that

00:10:52,130 --> 00:11:00,020
we have like a wiki page listing

00:10:57,340 --> 00:11:03,170
important or core libraries that are not

00:11:00,020 --> 00:11:12,370
dependencies of other packages that we

00:11:03,170 --> 00:11:15,260
want to keep maybe if they are broken

00:11:12,370 --> 00:11:17,510
it's okay to remove them but I don't see

00:11:15,260 --> 00:11:21,020
the point in removing stuff that is not

00:11:17,510 --> 00:11:22,970
broken we have users they report bugs

00:11:21,020 --> 00:11:25,400
about stuff that is broken artists as

00:11:22,970 --> 00:11:27,920
opposed to it has no Berg we cannot

00:11:25,400 --> 00:11:32,030
assume that it works for everybody more

00:11:27,920 --> 00:11:33,560
that nobody other people use it but it's

00:11:32,030 --> 00:11:39,750
not causing problems I don't see why

00:11:33,560 --> 00:11:42,940
they shouldn't be there okay

00:11:39,750 --> 00:11:42,940
[Music]

00:11:47,470 --> 00:11:59,240
okay so another cleanup effort Ruby PDP

00:11:55,339 --> 00:12:03,459
is now not broken but it's still very

00:11:59,240 --> 00:12:07,160
old and it used to break regularly

00:12:03,459 --> 00:12:11,120
there is no reverse dependency and I

00:12:07,160 --> 00:12:14,240
mailed a few days ago I I will file for

00:12:11,120 --> 00:12:19,519
removal for this accept anybody says

00:12:14,240 --> 00:12:22,009
something yeah specific case if you have

00:12:19,519 --> 00:12:23,990
a good reason to remove okay I just

00:12:22,009 --> 00:12:30,170
don't think we should remove just

00:12:23,990 --> 00:12:31,999
because what is recommended library to

00:12:30,170 --> 00:12:34,819
replace your BB BB

00:12:31,999 --> 00:12:38,120
oh good question I don't know the

00:12:34,819 --> 00:12:43,550
problem with that is upstream is gone

00:12:38,120 --> 00:12:50,149
yeah I know I guess the answer is not

00:12:43,550 --> 00:12:52,550
used PDP okay I mean frequently paper

00:12:50,149 --> 00:12:54,199
for database access no it speculatively

00:12:52,550 --> 00:13:01,819
back lady be alright

00:12:54,199 --> 00:13:11,720
I think licensing PDP has changed to a

00:13:01,819 --> 00:13:15,259
few years ago also yeah then I made

00:13:11,720 --> 00:13:21,040
lists packages that did not see uploads

00:13:15,259 --> 00:13:26,269
in the last two years so I think 256 and

00:13:21,040 --> 00:13:29,139
then yeah packages that have no reverse

00:13:26,269 --> 00:13:35,600
dependencies I did not check for

00:13:29,139 --> 00:13:40,870
reversible dependencies indeed but it's

00:13:35,600 --> 00:13:40,870
quite a list does that work

00:13:48,980 --> 00:14:07,820
here so how many 258 2056 so about 1/4

00:13:58,910 --> 00:14:10,459
of our packages yeah some of these are

00:14:07,820 --> 00:14:12,470
obviously broken even though there are

00:14:10,459 --> 00:14:14,810
no bars filed but they don't actually

00:14:12,470 --> 00:14:19,610
work so I I manually looked at the first

00:14:14,810 --> 00:14:21,620
few and well they don't actually work if

00:14:19,610 --> 00:14:31,010
you start or if you just let the library

00:14:21,620 --> 00:14:33,019
it crashes so I did not check that so

00:14:31,010 --> 00:14:37,220
you'd need to manually draw in both

00:14:33,019 --> 00:14:41,680
lists first some libraries in the list

00:14:37,220 --> 00:14:41,680
that I use and that work fine so yeah

00:14:42,190 --> 00:14:49,240
yeah I guess the newer ones work even

00:14:46,370 --> 00:14:52,040
not the newer ones but what's your

00:14:49,240 --> 00:14:53,079
that's over the last year right not the

00:14:52,040 --> 00:14:56,079
last two years okay

00:14:53,079 --> 00:14:56,079
yeah

00:15:11,410 --> 00:15:15,470
okay it's just there is a basic lab

00:15:13,820 --> 00:15:17,420
package here that is broken since the

00:15:15,470 --> 00:15:20,240
Ruby sprint that that happened in March

00:15:17,420 --> 00:15:22,279
that Robby ray goes out to link so yeah

00:15:20,240 --> 00:15:25,120
there's there's definitely some package

00:15:22,279 --> 00:15:27,860
here that are broken quite some time

00:15:25,120 --> 00:15:29,810
but you said that vast some that just

00:15:27,860 --> 00:15:31,220
crash if you load the library yeah

00:15:29,810 --> 00:15:36,980
that's something that we could test

00:15:31,220 --> 00:15:40,850
automatically I think I think we

00:15:36,980 --> 00:15:43,070
actually we we run auto package tests on

00:15:40,850 --> 00:15:46,850
or CI adeptia runs how to package tests

00:15:43,070 --> 00:15:51,100
for this but yeah then nobody files on

00:15:46,850 --> 00:15:57,560
RC back for it so they're failing at

00:15:51,100 --> 00:16:00,260
yeah citrate reports that he thinks most

00:15:57,560 --> 00:16:03,500
of these packages are horribly built

00:16:00,260 --> 00:16:08,450
appearances of Key Club or diaspora so

00:16:03,500 --> 00:16:11,200
we need both of them many yeah maybe we

00:16:08,450 --> 00:16:15,760
need or I should make a new list

00:16:11,200 --> 00:16:18,380
excluding built dependencies but anyway

00:16:15,760 --> 00:16:21,970
yeah like packages that haven't been

00:16:18,380 --> 00:16:24,950
touched in three or four or more years

00:16:21,970 --> 00:16:27,320
yeah it just don't put if you are going

00:16:24,950 --> 00:16:30,290
to review them and try to remove them

00:16:27,320 --> 00:16:37,730
just don't put such as puts a bar quite

00:16:30,290 --> 00:16:40,459
far in the future that data from 2014 up

00:16:37,730 --> 00:16:51,440
don't need to be reviewed start with the

00:16:40,459 --> 00:16:55,339
really old ones yeah well this is a call

00:16:51,440 --> 00:16:57,709
for help on testing packages really and

00:16:55,339 --> 00:17:05,510
maybe looking at all packages maybe we

00:16:57,709 --> 00:17:10,610
just need to start with things that

00:17:05,510 --> 00:17:12,420
should be removed that pass CI and no

00:17:10,610 --> 00:17:14,459
non Burks

00:17:12,420 --> 00:17:16,140
and I had that connection for YouTube in

00:17:14,459 --> 00:17:16,709
the image the least we have is

00:17:16,140 --> 00:17:20,820
information

00:17:16,709 --> 00:17:24,170
yeah in asking ok I will do it does you

00:17:20,820 --> 00:17:35,790
titties maintainer dashboard listeners

00:17:24,170 --> 00:17:38,160
yeah ok good yeah so the lift package

00:17:35,790 --> 00:17:45,210
list is as we have probably not as

00:17:38,160 --> 00:17:49,170
relevant the an open point here is do we

00:17:45,210 --> 00:17:52,050
have any to to use first read that are

00:17:49,170 --> 00:17:54,960
important I think the interpreter is

00:17:52,050 --> 00:18:00,470
quite okay except that it does not feel

00:17:54,960 --> 00:18:04,740
it you yeah it does not read for build

00:18:00,470 --> 00:18:08,840
and I don't really know why but differ

00:18:04,740 --> 00:18:17,730
scope times odd so I probably too many

00:18:08,840 --> 00:18:23,690
if there is also the issue with open SSL

00:18:17,730 --> 00:18:23,690
1.1 all right so that's fixed upstream I

00:18:24,800 --> 00:18:34,530
think the plans to have up SSL 1.1

00:18:29,820 --> 00:18:36,150
Jessie I'm sorry yes stretch so you have

00:18:34,530 --> 00:18:42,030
to fix that that's fixed up three in

00:18:36,150 --> 00:18:45,300
front but there's an an open bag about

00:18:42,030 --> 00:18:48,120
that and you just don't have the perfect

00:18:45,300 --> 00:18:50,580
solution yet so maybe it's backporting

00:18:48,120 --> 00:18:54,090
the changes in type 3 trunk

00:18:50,580 --> 00:18:57,360
maybe it's so it seems that Ruby 2 point

00:18:54,090 --> 00:19:00,660
4 we will remove the open SSL extension

00:18:57,360 --> 00:19:04,740
from the interpreter package so do we

00:19:00,660 --> 00:19:06,000
pull the external version but I don't

00:19:04,740 --> 00:19:08,700
think that's ready right now

00:19:06,000 --> 00:19:12,090
so the the external faction didn't have

00:19:08,700 --> 00:19:15,680
any readings on to this point in a I

00:19:12,090 --> 00:19:20,010
open an issue there to ask them to

00:19:15,680 --> 00:19:23,120
clarify what's the status is and how

00:19:20,010 --> 00:19:26,100
they plan to go forward with that

00:19:23,120 --> 00:19:28,040
okay enough she already knows about that

00:19:26,100 --> 00:19:32,220
they mean maintainer

00:19:28,040 --> 00:19:35,010
reply that he will be working like talk

00:19:32,220 --> 00:19:38,400
community how is security support going

00:19:35,010 --> 00:19:42,560
to be but even then maybe that's not

00:19:38,400 --> 00:19:42,560
something we want to do for which 0.3

00:19:42,680 --> 00:19:49,890
especially because I've three didn't do

00:19:45,030 --> 00:19:53,930
it so maybe we want to take port open

00:19:49,890 --> 00:19:58,290
SSL 1.1 pages for 2.3 and then follow up

00:19:53,930 --> 00:20:02,970
3/4 2.4 in drop the embedded copy of of

00:19:58,290 --> 00:20:06,000
the open SSL already ok ascetic such as

00:20:02,970 --> 00:20:09,930
noisy that we should also update

00:20:06,000 --> 00:20:13,910
packages obviously to last up upstream

00:20:09,930 --> 00:20:18,150
immersion very possible I think that

00:20:13,910 --> 00:20:22,220
neatly leads to the next point which are

00:20:18,150 --> 00:20:26,070
called are tab check here right now it's

00:20:22,220 --> 00:20:27,570
hard to know if updating a library

00:20:26,070 --> 00:20:33,480
breaks one of the major applications

00:20:27,570 --> 00:20:37,470
that we ship and yeah I don't have a

00:20:33,480 --> 00:20:38,670
good answer for that I don't know what

00:20:37,470 --> 00:20:43,740
other people are doing

00:20:38,670 --> 00:20:45,540
I mostly assuming people are using the

00:20:43,740 --> 00:20:50,100
helper scripts in the repository we

00:20:45,540 --> 00:20:55,320
could check if the package being built

00:20:50,100 --> 00:20:57,090
is a dependency or one of the list of

00:20:55,320 --> 00:21:01,380
applications we care about and then test

00:20:57,090 --> 00:21:03,000
them before going to the uploaded part

00:21:01,380 --> 00:21:07,680
ok

00:21:03,000 --> 00:21:10,620
from what I understand the at least

00:21:07,680 --> 00:21:15,180
github has a very tight dependencies in

00:21:10,620 --> 00:21:17,340
champagne I stopped intruders

00:21:15,180 --> 00:21:18,930
I already told browsing that he needs to

00:21:17,340 --> 00:21:20,700
change that otherwise it's going to be

00:21:18,930 --> 00:21:27,920
impossible to maintain

00:21:20,700 --> 00:21:30,120
okay so I mean yeah there's all that

00:21:27,920 --> 00:21:33,630
conversation about semantic versioning

00:21:30,120 --> 00:21:36,270
everything but I think we can assume

00:21:33,630 --> 00:21:38,330
upstream using say everything every time

00:21:36,270 --> 00:21:45,000
I mean so much things are anything but

00:21:38,330 --> 00:21:49,200
most of them are not okay do you want an

00:21:45,000 --> 00:21:52,970
action item for doing the changes to the

00:21:49,200 --> 00:21:52,970
build script - yes

00:22:05,710 --> 00:22:13,210
yeah so yeah that was if people are

00:22:11,170 --> 00:22:16,900
actually using the scripting in our

00:22:13,210 --> 00:22:20,110
repository not sure everybody is but

00:22:16,900 --> 00:22:23,260
they are a nice build and upload is an

00:22:20,110 --> 00:22:26,530
awesome script if you don't use it well

00:22:23,260 --> 00:22:33,780
you should really it does almost

00:22:26,530 --> 00:22:33,780
everything for you yeah

00:22:36,990 --> 00:22:40,840
maybe I don't know maybe we should

00:22:39,250 --> 00:22:43,630
package those scripts I mean they're

00:22:40,840 --> 00:22:45,910
useful not only for the rugby team

00:22:43,630 --> 00:22:47,860
I mean Tercero was really just talking

00:22:45,910 --> 00:22:50,800
that he used the data scriptural almost

00:22:47,860 --> 00:22:51,970
all package that he does and I mean how

00:22:50,800 --> 00:22:53,350
would you like to use that not only

00:22:51,970 --> 00:22:54,850
Andrew Beatty as well so I think it's

00:22:53,350 --> 00:23:02,970
gonna be used for everyone if they are

00:22:54,850 --> 00:23:05,980
packaging yeah okay so right there's a

00:23:02,970 --> 00:23:09,160
language packaging skills exchange both

00:23:05,980 --> 00:23:15,640
scheduled for first day quarter past

00:23:09,160 --> 00:23:19,240
5:00 well the plan was the the least

00:23:15,640 --> 00:23:22,210
problem in the room teams see what was

00:23:19,240 --> 00:23:26,230
they're using and how they work and what

00:23:22,210 --> 00:23:29,170
what our respective workflows are so I'd

00:23:26,230 --> 00:23:34,050
like to invite everybody to come to that

00:23:29,170 --> 00:23:37,480
path and then we can possibly discuss

00:23:34,050 --> 00:23:40,540
different maybe we should merge some of

00:23:37,480 --> 00:23:44,580
our scripts with the scripts used by the

00:23:40,540 --> 00:23:47,640
protein yeah a lot of just four scripts

00:23:44,580 --> 00:23:47,640
they do

00:23:53,960 --> 00:24:03,320
okay so yeah Citrix is buildin upload

00:23:59,370 --> 00:24:07,620
might need some more documentation yes

00:24:03,320 --> 00:24:13,080
that's probably good idea and then

00:24:07,620 --> 00:24:14,850
there's another thing I recently was

00:24:13,080 --> 00:24:19,680
made aware of get bill package patch

00:24:14,850 --> 00:24:25,440
queue which is yeah a nice tool for

00:24:19,680 --> 00:24:25,770
managing Debian patches I I like it so

00:24:25,440 --> 00:24:30,240
far

00:24:25,770 --> 00:24:36,510
and I propose that people that manage

00:24:30,240 --> 00:24:39,630
patches in our repor would use that as

00:24:36,510 --> 00:24:42,750
anybody I agree

00:24:39,630 --> 00:24:45,270
each bid package back they page Q is the

00:24:42,750 --> 00:24:49,310
author I use I use it already on some of

00:24:45,270 --> 00:24:49,310
the team packages including read mine in

00:24:49,520 --> 00:24:54,020
maybe others in gravis

00:25:07,800 --> 00:25:25,450
okay good so then an open item on I

00:25:21,430 --> 00:25:31,200
guess our team wish list is to actually

00:25:25,450 --> 00:25:33,250
know who's active in team oh yeah yeah

00:25:31,200 --> 00:25:38,380
it was good

00:25:33,250 --> 00:25:46,090
I I think more than 200 people in the

00:25:38,380 --> 00:25:49,600
ayah of team yeah yeah so the other day

00:25:46,090 --> 00:25:53,710
I wrote a script finds people in the

00:25:49,600 --> 00:25:59,580
team that did not touch any file in the

00:25:53,710 --> 00:26:04,720
on a life in the last few years so that

00:25:59,580 --> 00:26:09,490
yeah and I think that reports basically

00:26:04,720 --> 00:26:12,580
2/3 of the team so I will go ahead and

00:26:09,490 --> 00:26:16,630
ping or send mail to everybody that's on

00:26:12,580 --> 00:26:20,620
that list and ask them if they are still

00:26:16,630 --> 00:26:22,720
here basically and then maybe we can

00:26:20,620 --> 00:26:26,200
reduce the list of members till you see

00:26:22,720 --> 00:26:28,240
who's actually activated you'll be

00:26:26,200 --> 00:26:29,230
removing from the team in one month if

00:26:28,240 --> 00:26:34,720
you don't say anything

00:26:29,230 --> 00:26:37,240
yeah I'm so I gave that script to the

00:26:34,720 --> 00:26:39,790
pro team and they are doing that in the

00:26:37,240 --> 00:26:42,220
next few days for their team and I'll

00:26:39,790 --> 00:26:51,070
steal their main template once that's

00:26:42,220 --> 00:26:56,910
done yeah if nobody disagrees that yeah

00:26:51,070 --> 00:26:56,910
we need a sprint next yeah I guess

00:27:05,129 --> 00:27:13,719
that too bad but this thing's probably

00:27:09,940 --> 00:27:19,539
going to be doing the fries right we had

00:27:13,719 --> 00:27:21,190
one mark easier so the similar time of

00:27:19,539 --> 00:27:25,839
the year next year is gonna be freeze

00:27:21,190 --> 00:27:29,409
right everything's okay we can do some

00:27:25,839 --> 00:27:33,039
Ruby to a point forward but otherwise is

00:27:29,409 --> 00:27:40,529
probably going to be fixing stuff for

00:27:33,039 --> 00:27:45,899
the release yeah does anybody want to

00:27:40,529 --> 00:27:45,899
volunteer for setting this print up or

00:27:46,080 --> 00:27:58,989
providing locations or anything no

00:27:51,369 --> 00:28:03,099
Brussels was really nice and and they're

00:27:58,989 --> 00:28:05,669
more people here now from okay it's it's

00:28:03,099 --> 00:28:05,669
00:28:09,219 --> 00:28:13,539
yes satiric is asking when I receive it

00:28:11,950 --> 00:28:18,149
would be better to wait for the release

00:28:13,539 --> 00:28:18,149
so I just wait for freeze to be over but

00:28:19,440 --> 00:28:26,099
that might mean sprint in September or

00:28:23,499 --> 00:28:26,099
later

00:28:34,200 --> 00:28:43,120
you could do another sprint this year to

00:28:40,509 --> 00:28:53,080
finish or to work on updating packages

00:28:43,120 --> 00:28:58,500
it could make sense okay so Texas just

00:28:53,080 --> 00:28:58,500
Belgium or Austria not sure why Belgium

00:28:59,070 --> 00:29:09,909
yeah we could try Austria if we do yep

00:29:04,480 --> 00:29:19,529
this year or again in February that will

00:29:09,909 --> 00:29:36,429
be as cold as in Paris circus yeah

00:29:19,529 --> 00:29:39,509
maybe Austria why Belgium let's see

00:29:36,429 --> 00:29:47,440
what's the tricks as a bath bedroom

00:29:39,509 --> 00:29:54,490
good I think it's going to mention four

00:29:47,440 --> 00:29:59,860
dates Oh No okay okay yeah yeah all

00:29:54,490 --> 00:30:09,519
right okay do we have anybody from

00:29:59,860 --> 00:30:12,450
version okay well okay then yeah so I

00:30:09,519 --> 00:30:14,529
think there are 15 minutes left the

00:30:12,450 --> 00:30:19,120
there were some open points from last

00:30:14,529 --> 00:30:22,629
year that I'm not sure have been dealt

00:30:19,120 --> 00:30:24,759
with the first one is what to do about

00:30:22,629 --> 00:30:27,039
rails as packages and I think we're

00:30:24,759 --> 00:30:36,190
going to have more and more of these

00:30:27,039 --> 00:30:38,550
yeah I don't know if anything came out

00:30:36,190 --> 00:30:43,920
of that discussion

00:30:38,550 --> 00:30:47,150
our luxury as a link could can you yes

00:30:43,920 --> 00:30:47,150
so what that times

00:30:57,940 --> 00:31:05,010
did I not read that all right

00:31:08,200 --> 00:31:11,710
so we came to the conclusion that the

00:31:10,299 --> 00:31:13,539
best way to maintain this package is to

00:31:11,710 --> 00:31:16,600
come to package separately the

00:31:13,539 --> 00:31:18,159
JavaScript library and a ruby group so

00:31:16,600 --> 00:31:18,760
this is more or less what we are already

00:31:18,159 --> 00:31:21,829
doing

00:31:18,760 --> 00:31:21,829
[Music]

00:31:22,230 --> 00:31:31,269
yeah there's lots of things if you if

00:31:27,999 --> 00:31:34,869
you take a right brained on Rails assets

00:31:31,269 --> 00:31:37,480
package today it's very probable that

00:31:34,869 --> 00:31:41,590
the corresponding JavaScript package is

00:31:37,480 --> 00:31:45,789
already there and then you just I mean

00:31:41,590 --> 00:31:47,529
just in quotes you just need to maybe

00:31:45,789 --> 00:31:48,129
remove the embedded copies from the app

00:31:47,529 --> 00:31:54,450
Streeterville

00:31:48,129 --> 00:32:03,179
and then symlink the file so I was

00:31:54,450 --> 00:32:09,340
discussing yesterday with actor which is

00:32:03,179 --> 00:32:12,100
Khalif of angel hmm so his work for

00:32:09,340 --> 00:32:15,549
collaborating they are kind of pushing

00:32:12,100 --> 00:32:17,789
for obs and he suggested that we could

00:32:15,549 --> 00:32:24,340
have a script that will view

00:32:17,789 --> 00:32:26,499
automatically with the same link like

00:32:24,340 --> 00:32:29,799
point into the proper JavaScript package

00:32:26,499 --> 00:32:32,139
that is kind of nice because we are

00:32:29,799 --> 00:32:35,019
right now doing that by hand and doing

00:32:32,139 --> 00:32:41,679
things by hands always possible to break

00:32:35,019 --> 00:32:46,450
stuff and not do the right way okay um I

00:32:41,679 --> 00:32:48,009
guess this mail implies that the

00:32:46,450 --> 00:32:50,799
transcript package will be maintained by

00:32:48,009 --> 00:32:53,950
the transcript team and we will maintain

00:32:50,799 --> 00:32:57,129
just assume link containing package yes

00:32:53,950 --> 00:32:58,450
okay oh yeah but it doesn't really care

00:32:57,129 --> 00:33:01,600
about the actual content of the

00:32:58,450 --> 00:33:07,779
JavaScript we also need to help me

00:33:01,600 --> 00:33:10,629
JavaScript okay yeah sedgwick notes that

00:33:07,779 --> 00:33:14,340
we'll have a twenty line Ruby package

00:33:10,629 --> 00:33:18,640
yeah okay

00:33:14,340 --> 00:33:21,580
right I mean every few months

00:33:18,640 --> 00:33:24,520
one night EP that goes of David never

00:33:21,580 --> 00:33:27,280
will be restarting the discussion of

00:33:24,520 --> 00:33:35,280
very small package and we will hear each

00:33:27,280 --> 00:33:35,280
again the same conclusion as always okay

00:33:36,390 --> 00:33:45,580
so and then yeah there's an open item

00:33:42,190 --> 00:33:48,310
saying remove apricot and fast access

00:33:45,580 --> 00:33:52,300
which we still need to carry around

00:33:48,310 --> 00:33:55,570
unfortunately I assume for at least

00:33:52,300 --> 00:33:58,390
another two releases except if you find

00:33:55,570 --> 00:34:00,190
somebody who is going to fix Ron which

00:33:58,390 --> 00:34:04,900
is a documentation generator which is

00:34:00,190 --> 00:34:09,850
used by a number of packages yeah yeah

00:34:04,900 --> 00:34:11,500
I'm not sure what to do about that it

00:34:09,850 --> 00:34:14,560
rakaat has had security issues in the

00:34:11,500 --> 00:34:19,030
past and maybe they are still open

00:34:14,560 --> 00:34:22,080
issues I don't know and something that's

00:34:19,030 --> 00:34:28,870
not here in the list is I'm going to

00:34:22,080 --> 00:34:31,270
remove blue cloth actually there are two

00:34:28,870 --> 00:34:34,540
reverse dependencies left for that I

00:34:31,270 --> 00:34:37,540
have uploaded one of them and I'll fix

00:34:34,540 --> 00:34:40,360
the other one in turn blue cloth can

00:34:37,540 --> 00:34:42,760
also go as far as I'm concerned lost

00:34:40,360 --> 00:34:45,880
upstream coming for blue cloth was 11

00:34:42,760 --> 00:34:51,310
years ago or something or eight I don't

00:34:45,880 --> 00:34:55,120
know so yeah that needs to go and yeah

00:34:51,310 --> 00:34:59,680
we have ten minutes left maybe Ubuntu

00:34:55,120 --> 00:35:03,780
contact wants to say something it's not

00:34:59,680 --> 00:35:03,780
listening okay

00:35:06,900 --> 00:35:12,220
yeah exactly

00:35:09,880 --> 00:35:14,860
ascetic says we could migrate upstream

00:35:12,220 --> 00:35:21,010
projects to another tools and wrong form

00:35:14,860 --> 00:35:25,990
and pages but I'm not sure that's that's

00:35:21,010 --> 00:35:29,230
going to work yeah there are lots of non

00:35:25,990 --> 00:35:34,960
rubric packages using that so I don't

00:35:29,230 --> 00:35:38,290
know or if they can ask you doc you're a

00:35:34,960 --> 00:35:42,400
doctor yeah okay so there's the argument

00:35:38,290 --> 00:35:44,890
that some dogs are relatively heavy view

00:35:42,400 --> 00:35:46,930
dependency but then I try to selling it

00:35:44,890 --> 00:35:50,560
or not clean chroot in the other day

00:35:46,930 --> 00:35:53,620
just we just when dog itself and two

00:35:50,560 --> 00:35:55,690
other libraries or something so it's in

00:35:53,620 --> 00:35:57,610
my opinion snot we should not be a big

00:35:55,690 --> 00:36:00,430
deal yeah as long as you don't need to

00:35:57,610 --> 00:36:02,290
build Panda I think it's fine because

00:36:00,430 --> 00:36:04,810
building as long as you don't actually

00:36:02,290 --> 00:36:06,900
build pan dog itself it's fine

00:36:04,810 --> 00:36:10,570
I guess pen dog itself falls in

00:36:06,900 --> 00:36:12,940
everything yeah Cedric note some factors

00:36:10,570 --> 00:36:18,250
actually move to ask a dog oh that's

00:36:12,940 --> 00:36:20,350
good yeah I think I remove it wrong

00:36:18,250 --> 00:36:22,590
around that - from or everything that I

00:36:20,350 --> 00:36:22,590
write

00:36:29,719 --> 00:36:36,859
anything else

00:36:32,449 --> 00:36:40,140
creation I saw your email that is sent

00:36:36,859 --> 00:36:42,239
earlier in are you planing something

00:36:40,140 --> 00:36:46,789
about the Ruby package that are not

00:36:42,239 --> 00:36:46,789
maintained by the Ruby team selection

00:36:46,910 --> 00:36:52,259
yeah so that's a good question

00:36:49,589 --> 00:36:55,499
I think the packages that are maintained

00:36:52,259 --> 00:36:57,719
by other teams should just continue to

00:36:55,499 --> 00:36:59,640
be maintained by them maybe we should

00:36:57,719 --> 00:37:04,559
find somebody from these teams and talk

00:36:59,640 --> 00:37:09,839
to them and say okay are you happy with

00:37:04,559 --> 00:37:12,179
our tools I guess and then the other

00:37:09,839 --> 00:37:16,859
remaining packages which are I think 10

00:37:12,179 --> 00:37:19,650
no sir I guess we should have a look if

00:37:16,859 --> 00:37:24,630
they are actually working and which

00:37:19,650 --> 00:37:26,429
state they are and yeah so if they are

00:37:24,630 --> 00:37:28,400
not in a good state and do something

00:37:26,429 --> 00:37:37,409
about it whatever it is

00:37:28,400 --> 00:37:40,409
yes well that package is not maintained

00:37:37,409 --> 00:37:46,529
by the team right there are ruby

00:37:40,409 --> 00:37:48,959
packages and in the past we had like

00:37:46,529 --> 00:37:51,509
there were quite a few rural package was

00:37:48,959 --> 00:37:54,749
not maintained by the team and then they

00:37:51,509 --> 00:37:58,049
did not actually work and nobody cared

00:37:54,749 --> 00:38:01,259
about them okay so we do at least a

00:37:58,049 --> 00:38:03,900
little bit better chop turnout so yeah

00:38:01,259 --> 00:38:05,939
yeah I guess it goes together everything

00:38:03,900 --> 00:38:08,579
if they don't work then we file our

00:38:05,939 --> 00:38:10,789
suppose and let them be removed from

00:38:08,579 --> 00:38:10,789
there

00:38:14,040 --> 00:38:23,050
yeah Paula Sankar mentions that we

00:38:20,520 --> 00:38:29,940
really need to document our tools a bit

00:38:23,050 --> 00:38:33,640
more yes yeah I think help is welcome

00:38:29,940 --> 00:38:46,570
all of that I hate to write

00:38:33,640 --> 00:38:48,369
documentation honestly yeah Michael yes

00:38:46,570 --> 00:38:53,740
Oh miss do you want to say something

00:38:48,369 --> 00:39:01,119
about I want to know your going to shape

00:38:53,740 --> 00:39:04,540
2.3 something I'm going to drag you into

00:39:01,119 --> 00:39:08,170
conversation Nevada right well the one

00:39:04,540 --> 00:39:11,650
thing I did was to do back part two dots

00:39:08,170 --> 00:39:14,890
as to rattly got one to the last

00:39:11,650 --> 00:39:17,710
LTS hmm and it was I think you proved

00:39:14,890 --> 00:39:21,940
last week so oh you should be

00:39:17,710 --> 00:39:25,450
- dr. lat oh and update it well exactly

00:39:21,940 --> 00:39:29,470
the debian package - that's a hard one

00:39:25,450 --> 00:39:33,760
so and yeah after that I didn't touch

00:39:29,470 --> 00:39:42,480
Ruby anymore do you know if you read

00:39:33,760 --> 00:39:48,640
mine works at all read mine no problems

00:39:42,480 --> 00:39:51,670
yeah okay yes on the red minor IRC

00:39:48,640 --> 00:39:55,810
channels upstream channels so sometimes

00:39:51,670 --> 00:39:58,230
people ask them what I'm doing I don't

00:39:55,810 --> 00:39:58,230
know what

00:40:02,730 --> 00:40:10,210
then if nobody has anything else and I'm

00:40:07,570 --> 00:40:14,680
ignoring Citrix not about the route

00:40:10,210 --> 00:40:20,650
policy I say let's conclude the session

00:40:14,680 --> 00:40:26,100
thank you for coming don't see you at a

00:40:20,650 --> 00:40:26,100

YouTube URL: https://www.youtube.com/watch?v=QHiWd_pygbU


