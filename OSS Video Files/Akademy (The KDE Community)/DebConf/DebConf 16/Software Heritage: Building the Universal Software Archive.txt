Title: Software Heritage: Building the Universal Software Archive
Publication date: 2017-12-05
Playlist: DebConf 16
Description: 
	by Nicolas Dandrimont

At: Debconf 16 video RSS feed
https://debconf16.debconf.org/
Room: Menzies 10
Scheduled start: 2016-07-04 11:15:00
Captions: 
	00:00:00,060 --> 00:00:08,220
welcome to Monday and also welcome to

00:00:05,279 --> 00:00:11,880
the software heritage talk by Nicola

00:00:08,220 --> 00:00:17,220
dawn limo thank you

00:00:11,880 --> 00:00:19,460
oh hi I'm Nicola don't remove and I will

00:00:17,220 --> 00:00:23,100
talk to you about the saturated projects

00:00:19,460 --> 00:00:24,359
I'm really glad to be here and to be

00:00:23,100 --> 00:00:27,859
able to talk to you about software

00:00:24,359 --> 00:00:33,740
attached it's been a long day of work

00:00:27,859 --> 00:00:33,740
you see that it's just the beginning so

00:00:33,950 --> 00:00:40,800
the soft software is very pervasive it's

00:00:38,100 --> 00:00:43,110
at the heart of our society we use it

00:00:40,800 --> 00:00:45,660
everywhere we have software in our

00:00:43,110 --> 00:00:47,610
pockets we have software everywhere

00:00:45,660 --> 00:00:52,050
around us we have software in our bodies

00:00:47,610 --> 00:00:55,160
and it's really at the heart of

00:00:52,050 --> 00:00:58,309
technology appliances in a house

00:00:55,160 --> 00:01:00,989
contained ten millions of lines of codes

00:00:58,309 --> 00:01:05,400
phones contain 20 million lines of code

00:01:00,989 --> 00:01:07,890
Cass can contain up to 100 million lines

00:01:05,400 --> 00:01:10,619
of codes and it's not going to stop

00:01:07,890 --> 00:01:13,080
anytime soon I mean we're starting to

00:01:10,619 --> 00:01:17,750
put software in every single thing

00:01:13,080 --> 00:01:21,560
that's going to market right now

00:01:17,750 --> 00:01:28,020
software is the mediator to access our

00:01:21,560 --> 00:01:31,409
our knowledge information is one of the

00:01:28,020 --> 00:01:33,869
main pillars of modern societies done

00:01:31,409 --> 00:01:39,180
with software and software is critical

00:01:33,869 --> 00:01:42,329
to reproduce research software must be

00:01:39,180 --> 00:01:45,320
therefore corrected referenced and made

00:01:42,329 --> 00:01:49,579
accessible because it embodies our

00:01:45,320 --> 00:01:52,560
knowledge and our cultural heritage

00:01:49,579 --> 00:01:55,170
software is really fragile have you

00:01:52,560 --> 00:01:59,189
tested your backups recently did you run

00:01:55,170 --> 00:02:01,439
Getafe secure on your repositories did

00:01:59,189 --> 00:02:05,990
you have an account on guitar use or on

00:02:01,439 --> 00:02:09,239
Google code both of those have shut down

00:02:05,990 --> 00:02:12,470
software is scattered all around you

00:02:09,239 --> 00:02:14,840
know we have several 40s github gitlab

00:02:12,470 --> 00:02:19,750
bitbucket sauce for area of your

00:02:14,840 --> 00:02:22,880
personal homepage CDs in drawers

00:02:19,750 --> 00:02:25,820
software is really everywhere and there

00:02:22,880 --> 00:02:27,890
is no single standard to retrieve

00:02:25,820 --> 00:02:33,620
software there is no uniformity there is

00:02:27,890 --> 00:02:36,290
no stability URLs change often even in

00:02:33,620 --> 00:02:39,500
Debian we change the URLs to a

00:02:36,290 --> 00:02:41,840
repository quite often software migrates

00:02:39,500 --> 00:02:44,660
it moves from one I'll start whenever

00:02:41,840 --> 00:02:49,490
because posters close rosters change

00:02:44,660 --> 00:02:53,420
policies so with the software heritage

00:02:49,490 --> 00:02:56,360
projects what we are trying to do is to

00:02:53,420 --> 00:02:58,100
collect organize preserve and share all

00:02:56,360 --> 00:03:04,600
the software source code machines to

00:02:58,100 --> 00:03:07,460
execute so software is executable and

00:03:04,600 --> 00:03:10,490
human readable knowledge which is a note

00:03:07,460 --> 00:03:17,660
I'm new even hardware software with FPGA

00:03:10,490 --> 00:03:20,530
is with a6 and text files can be

00:03:17,660 --> 00:03:24,950
interpreted forever

00:03:20,530 --> 00:03:27,110
of course software evolves over time the

00:03:24,950 --> 00:03:29,870
development history is really important

00:03:27,110 --> 00:03:32,750
to understand software and software is

00:03:29,870 --> 00:03:35,180
really complex it has a large web of

00:03:32,750 --> 00:03:38,000
dependencies we get millions of lines of

00:03:35,180 --> 00:03:41,780
code so software is not just another

00:03:38,000 --> 00:03:44,060
sequence of bits we need to be able in a

00:03:41,780 --> 00:03:47,209
software archive to make sure that we

00:03:44,060 --> 00:03:51,380
can interpret the software its history

00:03:47,209 --> 00:03:55,489
its dependencies everything that we need

00:03:51,380 --> 00:04:01,070
to understand this tiny C file that

00:03:55,489 --> 00:04:03,070
exists on your hard disk so software

00:04:01,070 --> 00:04:07,489
attached is working on the foundations

00:04:03,070 --> 00:04:10,610
we're building infrastructure based

00:04:07,489 --> 00:04:14,360
infrastructure to allow for all the

00:04:10,610 --> 00:04:18,010
applications that you could use a

00:04:14,360 --> 00:04:22,490
software archive for cultural heritage

00:04:18,010 --> 00:04:26,090
industry research education we're laying

00:04:22,490 --> 00:04:31,400
the foundations so that people can be

00:04:26,090 --> 00:04:33,199
applications on top of our archive we're

00:04:31,400 --> 00:04:35,210
preserving the world software heritage

00:04:33,199 --> 00:04:38,510
by building a structure archive of all

00:04:35,210 --> 00:04:41,900
the world's software so we can preserve

00:04:38,510 --> 00:04:43,699
the knowledge that has been put in

00:04:41,900 --> 00:04:47,090
science and technology over the last

00:04:43,699 --> 00:04:49,460
years we try to enable continued access

00:04:47,090 --> 00:04:54,139
to all digital documents and information

00:04:49,460 --> 00:04:56,449
and we're creating a building block for

00:04:54,139 --> 00:05:02,479
thematic portals and collections of

00:04:56,449 --> 00:05:04,160
software we try to build something that

00:05:02,479 --> 00:05:09,919
can be used to create better software

00:05:04,160 --> 00:05:12,350
for the industry the idea is that a lot

00:05:09,919 --> 00:05:15,050
of companies have been running software

00:05:12,350 --> 00:05:19,220
for dozens of years and I've completely

00:05:15,050 --> 00:05:23,630
lost the source of their software this

00:05:19,220 --> 00:05:27,680
is an acceptable because when you have a

00:05:23,630 --> 00:05:28,630
bug and you cannot fix it lives can be

00:05:27,680 --> 00:05:31,190
at stake

00:05:28,630 --> 00:05:34,850
so we need to ensure the long-term

00:05:31,190 --> 00:05:37,430
preservation of critical software we

00:05:34,850 --> 00:05:41,750
intend to ease the variability tracking

00:05:37,430 --> 00:05:44,930
to get more secure software and we will

00:05:41,750 --> 00:05:47,300
make sure that software is traceable so

00:05:44,930 --> 00:05:50,780
that we can better integrate software

00:05:47,300 --> 00:05:53,570
and so that we can make sure that for

00:05:50,780 --> 00:05:57,410
instance when someone reuses a piece of

00:05:53,570 --> 00:05:59,720
code there I mean they're using it

00:05:57,410 --> 00:06:03,349
correctly licensed white winston's for

00:05:59,720 --> 00:06:05,210
GPL compliance of course we are also

00:06:03,349 --> 00:06:08,979
trying to support more accessible and

00:06:05,210 --> 00:06:11,389
reproducible science the global library

00:06:08,979 --> 00:06:14,539
referencing all software used in

00:06:11,389 --> 00:06:15,979
research fields so we are completing the

00:06:14,539 --> 00:06:19,099
infrastructure for open access in

00:06:15,979 --> 00:06:22,160
science you get open data you get open

00:06:19,099 --> 00:06:24,950
access for papers and you need to be

00:06:22,160 --> 00:06:29,360
able to have open source code to be able

00:06:24,950 --> 00:06:31,880
to reproduce the results and we enable

00:06:29,360 --> 00:06:35,599
large-scale variable software studies

00:06:31,880 --> 00:06:38,110
with a comprehensive archive of billions

00:06:35,599 --> 00:06:38,110
of source files

00:06:38,560 --> 00:06:47,540
so that's a lot of talk but really what

00:06:42,889 --> 00:06:49,400
do we do so meet the team we are seven

00:06:47,540 --> 00:06:52,550
people who have been working for

00:06:49,400 --> 00:06:53,900
different amounts of time Roberto and

00:06:52,550 --> 00:06:55,550
Stefan who have been working on the

00:06:53,900 --> 00:06:59,780
project for the most part of two years

00:06:55,550 --> 00:07:03,530
now Antoine and myself has been

00:06:59,780 --> 00:07:06,169
recruited as engineers during 2015 this

00:07:03,530 --> 00:07:09,380
summer we've had two interns working on

00:07:06,169 --> 00:07:15,500
front-end and back-end and Guillaume has

00:07:09,380 --> 00:07:20,000
been advising us on industry issues our

00:07:15,500 --> 00:07:21,800
stack is hardware hosted by inria who is

00:07:20,000 --> 00:07:25,280
a big sponsor and he initiated the

00:07:21,800 --> 00:07:27,820
project it's currently just one big

00:07:25,280 --> 00:07:31,010
hypervisor with a dozen virtual machines

00:07:27,820 --> 00:07:34,850
high-density storage array with 300

00:07:31,010 --> 00:07:37,070
terabytes usable and to be safe we have

00:07:34,850 --> 00:07:40,160
another copy in another server room so

00:07:37,070 --> 00:07:43,880
we have the duplication of this hardware

00:07:40,160 --> 00:07:46,070
and we're working very hard to enable a

00:07:43,880 --> 00:07:49,450
mirror network to make sure that our

00:07:46,070 --> 00:07:53,180
contents can be kept as long as possible

00:07:49,450 --> 00:07:56,030
our software runs Debian every machine

00:07:53,180 --> 00:07:58,789
runs Debian we use PostgreSQL for

00:07:56,030 --> 00:08:02,630
metadata storage we use Python free and

00:07:58,789 --> 00:08:04,729
psycho PG - for the backend flask for

00:08:02,630 --> 00:08:08,120
web apps and rabbitmq for task

00:08:04,729 --> 00:08:10,280
scheduling so we are using only free

00:08:08,120 --> 00:08:14,120
software and we're building free

00:08:10,280 --> 00:08:16,610
software our values are those of Debian

00:08:14,120 --> 00:08:19,610
we use 100% free and open-source

00:08:16,610 --> 00:08:22,610
software licenses gplv3 for the back-end

00:08:19,610 --> 00:08:23,840
code a gplv3 for the front-end so it

00:08:22,610 --> 00:08:26,030
stays free forever

00:08:23,840 --> 00:08:28,729
Apache - for the pipette manifest

00:08:26,030 --> 00:08:32,599
because that's what the community of

00:08:28,729 --> 00:08:33,950
rapid developers uses we really

00:08:32,599 --> 00:08:37,360
encourage bug reports and code

00:08:33,950 --> 00:08:39,529
contributions for everyone interested in

00:08:37,360 --> 00:08:43,610
pursuing our software preservation

00:08:39,529 --> 00:08:47,450
mission and to do that today we are

00:08:43,610 --> 00:08:49,450
opening our Forge so as a thank you to

00:08:47,450 --> 00:08:54,639
Debian and

00:08:49,450 --> 00:08:56,800
I mean we've timed the opening today so

00:08:54,639 --> 00:09:04,209
thanks to the Debian community for what

00:08:56,800 --> 00:09:06,510
it has brought to us so we have this

00:09:04,209 --> 00:09:11,440
infrastructure what do we have inside it

00:09:06,510 --> 00:09:14,139
so it's really exciting to work on such

00:09:11,440 --> 00:09:17,649
huge amounts of files of comments of

00:09:14,139 --> 00:09:20,019
projects we've got replicated all the

00:09:17,649 --> 00:09:23,889
known for github repositories that's 22

00:09:20,019 --> 00:09:26,529
million repositories those 22 million

00:09:23,889 --> 00:09:31,570
repositories contain six hundred million

00:09:26,529 --> 00:09:33,839
commits and 2.6 billion unique source

00:09:31,570 --> 00:09:33,839
files

00:09:33,959 --> 00:09:38,529
we're also importing all the Debian

00:09:36,670 --> 00:09:41,290
packages from snapshot the Debian or and

00:09:38,529 --> 00:09:45,880
we have imported new projects FTP

00:09:41,290 --> 00:09:49,120
archive but we didn't stop there we also

00:09:45,880 --> 00:09:51,160
have been talking to Google and we have

00:09:49,120 --> 00:09:56,589
been fetching all of Google code before

00:09:51,160 --> 00:09:59,470
it closed so we have the 12 million 12

00:09:56,589 --> 00:10:02,380
million Google code repositories ready

00:09:59,470 --> 00:10:04,930
to be imported we also have talked to

00:10:02,380 --> 00:10:06,130
the archive team about detours and we

00:10:04,930 --> 00:10:09,660
have a copy of the two million

00:10:06,130 --> 00:10:09,660
repositories that won't get aureus

00:10:11,339 --> 00:10:19,449
westering of files or our git

00:10:15,970 --> 00:10:21,279
repositories as loose files so each and

00:10:19,449 --> 00:10:24,160
every single version of each and every

00:10:21,279 --> 00:10:31,089
source file is stored as one flat file

00:10:24,160 --> 00:10:34,810
in in a file system and on top of this

00:10:31,089 --> 00:10:37,690
file archive we have built a Postgres

00:10:34,810 --> 00:10:41,829
database for all the metadata so the

00:10:37,690 --> 00:10:44,279
metadata is basically one big directed

00:10:41,829 --> 00:10:46,839
acyclic graph inspired by the gate model

00:10:44,279 --> 00:10:50,339
where at the bottom layer we have

00:10:46,839 --> 00:10:54,720
contents which are blobs which are files

00:10:50,339 --> 00:11:00,550
those contents are stored in directories

00:10:54,720 --> 00:11:03,190
those directories so software software

00:11:00,550 --> 00:11:06,190
source code is organized in revision

00:11:03,190 --> 00:11:08,430
so you do iterative changes so those

00:11:06,190 --> 00:11:10,990
revisions are stored in our database

00:11:08,430 --> 00:11:14,199
releases of the software are stored in

00:11:10,990 --> 00:11:15,910
the database then on top of that we have

00:11:14,199 --> 00:11:17,800
origins which are the source

00:11:15,910 --> 00:11:21,550
repositories that were getting data from

00:11:17,800 --> 00:11:23,470
and occurrences which are at every point

00:11:21,550 --> 00:11:25,199
of time where we looked at a repository

00:11:23,470 --> 00:11:29,110
the branches that were available

00:11:25,199 --> 00:11:35,050
pointing to every single one object at

00:11:29,110 --> 00:11:38,980
the bottom so this is probably the

00:11:35,050 --> 00:11:43,839
biggest distributed VCS graph in

00:11:38,980 --> 00:11:47,550
existence yes so when I'd rather than 20

00:11:43,839 --> 00:11:52,000
terabytes of files on disk 3.1 - right

00:11:47,550 --> 00:11:53,529
Postgres database for the metadata 2.7

00:11:52,000 --> 00:11:56,079
billion files to go into billion

00:11:53,529 --> 00:11:57,490
directories 600 million revisions 12

00:11:56,079 --> 00:12:01,000
million people 5 million

00:11:57,490 --> 00:12:08,439
releases the biggest DVCS tree in

00:12:01,000 --> 00:12:11,470
existence what will we do we have a lot

00:12:08,439 --> 00:12:14,380
of planned features so right now our

00:12:11,470 --> 00:12:16,899
website allows you to look for contents

00:12:14,380 --> 00:12:19,959
by hash so the idea is that if you have

00:12:16,899 --> 00:12:22,470
a file a source file you can put it in a

00:12:19,959 --> 00:12:26,319
box on a website and make sure that

00:12:22,470 --> 00:12:28,300
software heritage as archived it what we

00:12:26,319 --> 00:12:30,519
want to provide is provenance

00:12:28,300 --> 00:12:33,509
information for all the content so that

00:12:30,519 --> 00:12:39,480
we can say we have seen this file at

00:12:33,509 --> 00:12:41,980
that date on github.com /foo slash bar

00:12:39,480 --> 00:12:44,949
we want to enable people to browse the

00:12:41,980 --> 00:12:47,139
contents because putting all the

00:12:44,949 --> 00:12:48,970
software source code in a box is not

00:12:47,139 --> 00:12:53,069
what we want to do we want to enable

00:12:48,970 --> 00:12:55,149
everyone to look at the source code so

00:12:53,069 --> 00:12:58,829
basically we are trying to build a

00:12:55,149 --> 00:13:01,809
wayback machine for software source code

00:12:58,829 --> 00:13:06,430
we want to enable full-text search in

00:13:01,809 --> 00:13:09,309
all of our archive that's that would be

00:13:06,430 --> 00:13:11,290
quite a promise 2.7 billion source code

00:13:09,309 --> 00:13:15,430
files that you can search into instantly

00:13:11,290 --> 00:13:17,940
and of course what we want to do is to

00:13:15,430 --> 00:13:21,070
enable people to

00:13:17,940 --> 00:13:24,670
every single bit of software that

00:13:21,070 --> 00:13:26,590
software heritage as archived and

00:13:24,670 --> 00:13:30,850
basically what we want what we could

00:13:26,590 --> 00:13:33,790
provide is a git clone for every data

00:13:30,850 --> 00:13:36,280
source that exists whether it is a git

00:13:33,790 --> 00:13:40,090
repository and SVN repository where

00:13:36,280 --> 00:13:44,160
Debian a suspected we will enable you to

00:13:40,090 --> 00:13:46,870
get clone from software heritage of

00:13:44,160 --> 00:13:49,960
course there are so many more

00:13:46,870 --> 00:13:51,820
applications one could imagine all of

00:13:49,960 --> 00:13:56,920
the world's software at your fingertips

00:13:51,820 --> 00:13:59,050
in a single graph we also have a lot of

00:13:56,920 --> 00:14:01,720
technical changes because software

00:13:59,050 --> 00:14:05,020
changes all the time so we have to hand

00:14:01,720 --> 00:14:07,930
out the backlog and all the data that we

00:14:05,020 --> 00:14:11,770
have saved as a one-shot import which is

00:14:07,930 --> 00:14:14,290
the new dot or mirror the snapshot

00:14:11,770 --> 00:14:18,310
debian archive we need to make sure that

00:14:14,290 --> 00:14:20,170
we can keep up with your updates we also

00:14:18,310 --> 00:14:24,310
need to make sure that we get the new

00:14:20,170 --> 00:14:27,250
repositories and commit on github we

00:14:24,310 --> 00:14:30,370
need basically reliable standardized

00:14:27,250 --> 00:14:33,810
even feeds that we can tap into and that

00:14:30,370 --> 00:14:38,560
people can send us a gap can provide us

00:14:33,810 --> 00:14:42,210
for us to be able to update and make

00:14:38,560 --> 00:14:45,070
sure we stay up to date and of course

00:14:42,210 --> 00:14:46,630
all the software is not on github or the

00:14:45,070 --> 00:14:48,370
software is not in Debian or the

00:14:46,630 --> 00:14:50,860
software is not in the GNU project so we

00:14:48,370 --> 00:14:54,790
need to expand we need to discover and

00:14:50,860 --> 00:14:57,820
classify all the software sources which

00:14:54,790 --> 00:15:01,870
means that if you have forge at your

00:14:57,820 --> 00:15:05,530
company and you do open source we can

00:15:01,870 --> 00:15:07,750
get your software if your Linux

00:15:05,530 --> 00:15:11,770
distribution and you have a forge we

00:15:07,750 --> 00:15:14,620
need to get your software if you know of

00:15:11,770 --> 00:15:16,600
someone's webpage where software is

00:15:14,620 --> 00:15:19,930
released we need to get it we need to

00:15:16,600 --> 00:15:22,030
get everything and of course not

00:15:19,930 --> 00:15:24,190
everything is in gates or in the table

00:15:22,030 --> 00:15:25,870
or in the Debian package so we need to

00:15:24,190 --> 00:15:26,470
make sure that we have importers for all

00:15:25,870 --> 00:15:29,280
the

00:15:26,470 --> 00:15:32,290
that all the version control systems

00:15:29,280 --> 00:15:35,260
with we have started work on an SVN

00:15:32,290 --> 00:15:37,450
importer we need mercurial importers

00:15:35,260 --> 00:15:41,770
darks whatever it's a wonderful

00:15:37,450 --> 00:15:46,480
playground if you have time to help so

00:15:41,770 --> 00:15:49,180
how do you help our food is open on for

00:15:46,480 --> 00:15:52,000
that software health edit or you can

00:15:49,180 --> 00:15:55,000
subscribe to our mailing list as swh

00:15:52,000 --> 00:15:57,280
that they will add in reality fair the

00:15:55,000 --> 00:15:59,440
link to the subscription page is on the

00:15:57,280 --> 00:16:02,350
slide and you can take a look at our

00:15:59,440 --> 00:16:08,560
wiki where we store the public

00:16:02,350 --> 00:16:11,920
information about the project if your

00:16:08,560 --> 00:16:13,960
company or your organization can join us

00:16:11,920 --> 00:16:16,720
as sponsors we are welcoming support

00:16:13,960 --> 00:16:19,030
from everybody in India as initiated the

00:16:16,720 --> 00:16:20,350
project in RIA enables me to be here

00:16:19,030 --> 00:16:22,720
today

00:16:20,350 --> 00:16:25,930
India is the French Institute for

00:16:22,720 --> 00:16:29,640
research in computer science in react

00:16:25,930 --> 00:16:31,960
contributed to the birth of the w3c

00:16:29,640 --> 00:16:35,680
4,500 people work there many prestigious

00:16:31,960 --> 00:16:40,480
scientists and recently INRIA has worked

00:16:35,680 --> 00:16:43,780
on TLS vulnerabilities and lots of stuff

00:16:40,480 --> 00:16:45,370
that have been made public recently in

00:16:43,780 --> 00:16:48,010
RIA is fully supporting the bootstrap

00:16:45,370 --> 00:16:51,520
phase of the heritage but we do need the

00:16:48,010 --> 00:16:53,710
help of everybody so if you think

00:16:51,520 --> 00:16:58,510
everybody can help us more info is

00:16:53,710 --> 00:17:01,240
available on our website software

00:16:58,510 --> 00:17:03,610
heritage it's a revolutionary reference

00:17:01,240 --> 00:17:06,190
archive of all the software ever written

00:17:03,610 --> 00:17:09,070
it's a unique complement for development

00:17:06,190 --> 00:17:11,620
platforms like github and we're building

00:17:09,070 --> 00:17:14,080
an international open nonprofit mutual

00:17:11,620 --> 00:17:17,350
eyes infrastructure and we're ready to

00:17:14,080 --> 00:17:20,730
work with you if you have any questions

00:17:17,350 --> 00:17:20,730
feel free to ask right now

00:17:22,560 --> 00:17:29,620
or you can contact us by email and you

00:17:26,770 --> 00:17:43,780
can look at our website thank you very

00:17:29,620 --> 00:17:45,850
much for your picture so the software

00:17:43,780 --> 00:17:48,850
that you've used you're using enhanced

00:17:45,850 --> 00:17:51,490
has been written do you think that could

00:17:48,850 --> 00:17:59,160
be used also for snapshot Debian org as

00:17:51,490 --> 00:18:03,990
the front end so currently we're using

00:17:59,160 --> 00:18:06,400
snapshot Debian org as a data source so

00:18:03,990 --> 00:18:08,590
just the designs you are talking about

00:18:06,400 --> 00:18:12,340
sounded very similar to what we already

00:18:08,590 --> 00:18:14,260
have which is not very worked on very

00:18:12,340 --> 00:18:16,810
much at the moment well maybe to be

00:18:14,260 --> 00:18:18,850
better for us to be using so I think the

00:18:16,810 --> 00:18:22,900
advice right so the main difference

00:18:18,850 --> 00:18:24,640
between what's been done with with

00:18:22,900 --> 00:18:26,740
snapshot Debian org and what we are

00:18:24,640 --> 00:18:29,310
doing in software heritage is that we

00:18:26,740 --> 00:18:32,970
are unpacking all the source files which

00:18:29,310 --> 00:18:36,190
snapshot that Debian or doesn't do

00:18:32,970 --> 00:18:40,000
snapshot just has a pool of files that

00:18:36,190 --> 00:18:44,070
existed on mirrors at do you also keep

00:18:40,000 --> 00:18:47,890
the turbos

00:18:44,070 --> 00:18:54,700
so yes we are storing the tables to be

00:18:47,890 --> 00:18:58,390
so we have yes right now we're keeping

00:18:54,700 --> 00:19:03,190
the towers we are not sure that we're

00:18:58,390 --> 00:19:07,660
going to do that long term because tower

00:19:03,190 --> 00:19:11,890
changes and as we know with pristine tar

00:19:07,660 --> 00:19:14,950
for instance so we want to make sure

00:19:11,890 --> 00:19:17,200
that the software is available now is

00:19:14,950 --> 00:19:22,539
available in 10 years in 50 years in a

00:19:17,200 --> 00:19:25,700
hundred years so the only really

00:19:22,539 --> 00:19:30,919
anything that allows us to do that is to

00:19:25,700 --> 00:19:33,559
store the plain source files yes also a

00:19:30,919 --> 00:19:35,360
big difference with snapshot Debian or

00:19:33,559 --> 00:19:39,860
is that snapshot Debian Augusta's

00:19:35,360 --> 00:19:42,799
binaries we do store binaries because

00:19:39,860 --> 00:19:45,320
people put everything and anything else

00:19:42,799 --> 00:19:48,049
in their git repositories but we are not

00:19:45,320 --> 00:19:50,330
really interested in that we have a file

00:19:48,049 --> 00:19:53,510
size limit which is currently set at

00:19:50,330 --> 00:19:54,919
hundred megabytes and we are not

00:19:53,510 --> 00:19:58,880
importing anything bigger than that

00:19:54,919 --> 00:20:02,030
because it's very very probably not

00:19:58,880 --> 00:20:05,890
source code so we don't currently have

00:20:02,030 --> 00:20:05,890
the infrastructure to store big files

00:20:06,220 --> 00:20:11,450
related question

00:20:08,230 --> 00:20:13,610
suggestion the Debian derivative census

00:20:11,450 --> 00:20:16,370
is downloading those packages from a

00:20:13,610 --> 00:20:25,429
whole bunch of derivatives maybe you'd

00:20:16,370 --> 00:20:27,200
like to also get all those files it

00:20:25,429 --> 00:20:29,360
pretty much that you did your own

00:20:27,200 --> 00:20:33,020
storage right into this directory

00:20:29,360 --> 00:20:35,600
yes have you ever investigated using

00:20:33,020 --> 00:20:38,299
technologies like Swift cluster FS

00:20:35,600 --> 00:20:43,070
sheepdog whatnot

00:20:38,299 --> 00:20:47,539
yes I do and do the FS nice too so we've

00:20:43,070 --> 00:20:50,360
started with a very limited budget so we

00:20:47,539 --> 00:20:54,530
had to do what was the most dense

00:20:50,360 --> 00:20:58,309
storage for our price price tag

00:20:54,530 --> 00:21:01,400
basically so we went for the very simple

00:20:58,309 --> 00:21:04,970
solution we've optimized for data

00:21:01,400 --> 00:21:09,169
ingestion so we have been able to import

00:21:04,970 --> 00:21:11,600
2.7 billion files in a year but of

00:21:09,169 --> 00:21:13,970
course we need to make sure that we can

00:21:11,600 --> 00:21:17,210
retrieve those files which is currently

00:21:13,970 --> 00:21:19,220
not very efficient with our storage so

00:21:17,210 --> 00:21:21,130
yes we have we are starting to

00:21:19,220 --> 00:21:25,929
investigate over

00:21:21,130 --> 00:21:28,000
of a storage storage capabilities the

00:21:25,929 --> 00:21:31,299
main issue we have with file storage is

00:21:28,000 --> 00:21:34,960
that so we have 2.7 million files the

00:21:31,299 --> 00:21:37,899
median file size is free kilobytes so

00:21:34,960 --> 00:21:41,740
the files are very very tiny they are

00:21:37,899 --> 00:21:44,740
source code files so for instance the

00:21:41,740 --> 00:21:51,549
get storage model breaks down very bad

00:21:44,740 --> 00:21:53,769
with so many files and well I mean yes

00:21:51,549 --> 00:21:58,990
we need people that know storage and

00:21:53,769 --> 00:22:00,779
that can help us improve on that so the

00:21:58,990 --> 00:22:04,090
other question is did you investigate

00:22:00,779 --> 00:22:07,600
archiving language specific repositories

00:22:04,090 --> 00:22:10,600
like I don't know sipan by maven it's

00:22:07,600 --> 00:22:13,809
kind of things so currently we have

00:22:10,600 --> 00:22:16,000
focused on github because basically it

00:22:13,809 --> 00:22:18,669
was a low-hanging fruit it's very easy

00:22:16,000 --> 00:22:20,980
to clone a git repository and it's very

00:22:18,669 --> 00:22:22,419
easy to unpack and to make sense of the

00:22:20,980 --> 00:22:25,389
metadata that there is in the git

00:22:22,419 --> 00:22:28,240
repository of course we want to archive

00:22:25,389 --> 00:22:31,090
everything and getting

00:22:28,240 --> 00:22:32,610
language-specific forges is a very

00:22:31,090 --> 00:22:36,669
important step towards that

00:22:32,610 --> 00:22:44,950
so we're welcoming any help in doing

00:22:36,669 --> 00:22:47,529
that yes interesting project open source

00:22:44,950 --> 00:22:49,200
and not all data they publish they

00:22:47,529 --> 00:22:51,700
produces open data so do you have

00:22:49,200 --> 00:22:53,559
training material training courses for

00:22:51,700 --> 00:22:58,330
scientists and for students to convince

00:22:53,559 --> 00:23:00,970
them so Roberto d Cosmo who is leading

00:22:58,330 --> 00:23:04,059
the saturated project has done a lot of

00:23:00,970 --> 00:23:06,460
outreach in the open access community

00:23:04,059 --> 00:23:09,789
and in the research community in general

00:23:06,460 --> 00:23:13,299
to underline the importance of writing

00:23:09,789 --> 00:23:17,110
open of writing free software to enable

00:23:13,299 --> 00:23:19,440
reproducible research so yes I think we

00:23:17,110 --> 00:23:22,840
do have some training materials that

00:23:19,440 --> 00:23:24,549
must be available somewhere I think you

00:23:22,840 --> 00:23:26,649
should send an email to infrared

00:23:24,549 --> 00:23:30,600
software attached org and I'm sure that

00:23:26,649 --> 00:23:30,600
we can point you to some adhere

00:23:32,100 --> 00:23:40,450
okay hey so this is a this is a

00:23:37,900 --> 00:23:42,130
ridiculous question but I think this is

00:23:40,450 --> 00:23:45,150
such an important project for Humanity

00:23:42,130 --> 00:23:47,380
are you planning for the apocalypse

00:23:45,150 --> 00:23:50,770
presence by planning to have an

00:23:47,380 --> 00:23:52,810
occasional snapshot but you know your

00:23:50,770 --> 00:23:54,760
facilities you can find possibly with

00:23:52,810 --> 00:24:01,390
the computer that could be used right

00:23:54,760 --> 00:24:07,870
access it so we haven't done any plans

00:24:01,390 --> 00:24:11,710
for the apocalypse yet but our interns

00:24:07,870 --> 00:24:15,850
or intern working on back-end storage is

00:24:11,710 --> 00:24:22,870
starting is enabling us to have a leader

00:24:15,850 --> 00:24:24,730
for our model for for storage we need to

00:24:22,870 --> 00:24:27,460
put something in place to be able to

00:24:24,730 --> 00:24:29,590
replicate the database replicating the

00:24:27,460 --> 00:24:33,910
database has lots of issues because we

00:24:29,590 --> 00:24:36,490
have something like 4.5 million people

00:24:33,910 --> 00:24:39,340
so 4.5 million email addresses that are

00:24:36,490 --> 00:24:43,030
easy to pick just take a big list and

00:24:39,340 --> 00:24:46,990
you can spam everybody so there are some

00:24:43,030 --> 00:24:51,730
considerations there making snapshots is

00:24:46,990 --> 00:24:53,980
of course a possibility it's going to

00:24:51,730 --> 00:24:58,090
need a lot of storage but it's certainly

00:24:53,980 --> 00:25:05,020
doable yes I for now we haven't thought

00:24:58,090 --> 00:25:08,170
about it security rate question there is

00:25:05,020 --> 00:25:10,570
an interesting article about a forgery

00:25:08,170 --> 00:25:14,170
the gospel of Mary or something like

00:25:10,570 --> 00:25:15,790
that and since you know an archive you

00:25:14,170 --> 00:25:19,030
might become the target or people trying

00:25:15,790 --> 00:25:20,890
to rewrite history or even remove leaked

00:25:19,030 --> 00:25:23,290
documents or something like that and

00:25:20,890 --> 00:25:26,620
some cases that might mean just deleting

00:25:23,290 --> 00:25:28,840
it entirely yes to obfuscate the fact

00:25:26,620 --> 00:25:35,070
that it's been done give any mechanism

00:25:28,840 --> 00:25:37,900
to worry about that so so every single

00:25:35,070 --> 00:25:41,290
identifier for objects in our database

00:25:37,900 --> 00:25:44,679
is intrinsic which means that it's a

00:25:41,290 --> 00:25:45,549
hash of the content of the object so for

00:25:44,679 --> 00:25:50,139
instance fights

00:25:45,549 --> 00:25:53,139
are identified by the hashes directories

00:25:50,139 --> 00:25:55,690
we'd write a manifest saying this

00:25:53,139 --> 00:25:59,200
directory contains the file with such ID

00:25:55,690 --> 00:26:03,489
and etc and we hashed that and that is

00:25:59,200 --> 00:26:07,649
the identifier of the directory etc etc

00:26:03,489 --> 00:26:11,889
for all the layers of software heritage

00:26:07,649 --> 00:26:14,320
to be resilient to attacks what we need

00:26:11,889 --> 00:26:17,230
to do is have mirrors everywhere the

00:26:14,320 --> 00:26:19,299
idea is that if you copy information you

00:26:17,230 --> 00:26:22,299
cannot remove it anymore because it's

00:26:19,299 --> 00:26:24,220
everywhere it's pervasive so this is

00:26:22,299 --> 00:26:26,919
this is really what we want to focus on

00:26:24,220 --> 00:26:28,299
now is making sure that we have copies

00:26:26,919 --> 00:26:31,179
everywhere in the world in every

00:26:28,299 --> 00:26:33,820
jurisdiction in the world so we can make

00:26:31,179 --> 00:26:35,590
sure that if governments wants to take

00:26:33,820 --> 00:26:36,039
us down if someone wants to rewrite

00:26:35,590 --> 00:26:38,230
history

00:26:36,039 --> 00:26:41,109
then the eastery is available everywhere

00:26:38,230 --> 00:26:43,679
and they just cannot physically do that

00:26:41,109 --> 00:26:43,679
anymore

00:26:50,150 --> 00:26:58,140
the previous talk Karen mentioned

00:26:55,040 --> 00:27:01,770
software registry is there is there any

00:26:58,140 --> 00:27:08,070
relation to this software registry she

00:27:01,770 --> 00:27:12,750
was talking about no he wasn't at her

00:27:08,070 --> 00:27:18,929
talk so I not sure I can not sure I know

00:27:12,750 --> 00:27:27,320
what the software is but we can talk

00:27:18,929 --> 00:27:27,320
about it anymore

00:27:30,140 --> 00:27:43,520
does anyone see if there's any question

00:27:32,669 --> 00:27:43,520

YouTube URL: https://www.youtube.com/watch?v=aUHoq2QO7BM


