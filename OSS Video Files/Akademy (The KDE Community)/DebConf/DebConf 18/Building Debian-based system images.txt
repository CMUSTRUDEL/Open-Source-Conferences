Title: Building Debian-based system images
Publication date: 2018-07-31
Playlist: DebConf 18
Description: 
	by Ben Hutchings

At: DebConf18
https://debconf18.debconf.org/talks/89-building-debian-based-system-images/

There are various tools for creating system images based on Debian and its derivatives, including vmdebootstrap(2), bitbake, and live-wrapper. Each has its own pros and cons.

This is an opportunity to share practical experience, including recommendations for effective usage, traps to avoid, and lesser-known tools for this task.

Room: Xueshan (雪山)
Scheduled start: 2018-07-30 16:30:00
Captions: 
	00:00:04,580 --> 00:00:12,090
hi hi one more time the presentation

00:00:09,450 --> 00:00:14,760
will be for building Debian based system

00:00:12,090 --> 00:00:20,640
images and the speaker will live there

00:00:14,760 --> 00:00:22,350
so hope you'll enjoy it and thank you

00:00:20,640 --> 00:00:26,070
well this isn't really a presentation

00:00:22,350 --> 00:00:30,320
it's the boss and I don't really have

00:00:26,070 --> 00:00:33,600
any huge experience with building

00:00:30,320 --> 00:00:37,110
building Debian images I just know that

00:00:33,600 --> 00:00:39,570
there's a lot of different tools quite a

00:00:37,110 --> 00:00:46,559
bit of work going on to develop those

00:00:39,570 --> 00:00:48,329
tools and I thought this would be I can

00:00:46,559 --> 00:00:54,420
see there's a lot of people interested

00:00:48,329 --> 00:00:59,250
so hopefully you some of you have tips

00:00:54,420 --> 00:01:01,020
and recommendations for you know what

00:00:59,250 --> 00:01:08,549
what are the pros and cons of different

00:01:01,020 --> 00:01:11,600
tools what what improvements you would

00:01:08,549 --> 00:01:18,439
like to see in the tools that you use

00:01:11,600 --> 00:01:18,439
and so on so I thought a Cobie document

00:01:19,340 --> 00:01:26,840
if I can remember work Gobi Devi no

00:01:24,450 --> 00:01:26,840
right

00:01:27,420 --> 00:01:30,849
[Music]

00:01:33,960 --> 00:01:46,420
go into the window oh okay yeah yeah

00:01:39,910 --> 00:01:48,960
okay that's not working either and

00:01:46,420 --> 00:01:48,960
wonder why not

00:01:53,830 --> 00:01:57,480
[Music]

00:02:06,930 --> 00:02:10,040
okay yeah

00:02:16,370 --> 00:02:22,320
right it's not married yet

00:02:19,140 --> 00:02:22,320
[Music]

00:03:06,350 --> 00:03:11,720
Mira

00:03:08,670 --> 00:03:11,720
[Music]

00:03:20,010 --> 00:03:23,510
oh that's not actually working is it

00:03:40,150 --> 00:03:45,730
well I can't even get to that display so

00:03:44,220 --> 00:03:48,830
work

00:03:45,730 --> 00:03:48,830
[Music]

00:03:58,410 --> 00:04:02,799
[Music]

00:04:01,150 --> 00:04:05,200
okay.what anyone like to start off by

00:04:02,799 --> 00:04:07,599
advocating for their favorite tool that

00:04:05,200 --> 00:04:12,819
they think not not enough people are

00:04:07,599 --> 00:04:18,239
using and do I have a microphone to give

00:04:12,819 --> 00:04:18,239
oh you've got a microphone yet

00:04:25,700 --> 00:04:37,250
I saw Enrico zeny is giving another talk

00:04:34,460 --> 00:04:40,520
but that conflicted with this one and he

00:04:37,250 --> 00:04:45,710
asked me to mention that he's working on

00:04:40,520 --> 00:04:47,870
an update too he has worked on an

00:04:45,710 --> 00:04:53,050
updated live report that removes the

00:04:47,870 --> 00:04:56,440
dependency on a VM to bootstrap which

00:04:53,050 --> 00:05:02,570
you may have seen is about to be removed

00:04:56,440 --> 00:05:05,290
from the archive so that might continue

00:05:02,570 --> 00:05:05,290
to be an option

00:05:16,150 --> 00:05:23,180
hello I maintain a coaling application

00:05:21,229 --> 00:05:28,550
that builds images is called the boss

00:05:23,180 --> 00:05:33,610
when having thank you listed in the

00:05:28,550 --> 00:05:37,520
system bill tools we created this

00:05:33,610 --> 00:05:43,039
collabora 400 in our own images

00:05:37,520 --> 00:05:45,169
it's basically infrastructure and then

00:05:43,039 --> 00:05:48,649
you just describe your images in a

00:05:45,169 --> 00:05:53,539
general file so all the data you have

00:05:48,649 --> 00:05:55,879
you can specify actions like you can run

00:05:53,539 --> 00:05:58,430
the bootstrap to create the Nietzschean

00:05:55,879 --> 00:06:01,999
file system and then on that you can add

00:05:58,430 --> 00:06:04,339
repositories and install extra packages

00:06:01,999 --> 00:06:08,419
and do whatever tweaks you need to do

00:06:04,339 --> 00:06:12,469
you can get a binary file and flash it

00:06:08,419 --> 00:06:15,589
on the offset that you need for boot

00:06:12,469 --> 00:06:18,020
loaders so you are able to generate an

00:06:15,589 --> 00:06:20,169
image that later you can flash on an SD

00:06:18,020 --> 00:06:23,419
card and move on a target device

00:06:20,169 --> 00:06:26,419
something like that I guess it might it

00:06:23,419 --> 00:06:29,599
could also accommodate clouds images

00:06:26,419 --> 00:06:33,009
maybe but I'm not sure what the subtly

00:06:29,599 --> 00:06:36,199
requirements are for cloud images and

00:06:33,009 --> 00:06:39,229
I'm not sure what other kind of images

00:06:36,199 --> 00:06:42,159
we might need but I mean people want to

00:06:39,229 --> 00:06:42,159
have a have a look

00:06:51,440 --> 00:06:59,160
I'm far from expert in it but this sound

00:06:56,220 --> 00:07:02,460
yeah okay I'm far from an expert in it

00:06:59,160 --> 00:07:05,520
but I've been working a bit with VM db2

00:07:02,460 --> 00:07:09,240
which is well by the same author as a VM

00:07:05,520 --> 00:07:12,420
the bootstrap by Lars and it's also

00:07:09,240 --> 00:07:16,650
based on a young description of the of

00:07:12,420 --> 00:07:21,570
the desired system I have found it to be

00:07:16,650 --> 00:07:25,820
well really easy and like expressive but

00:07:21,570 --> 00:07:25,820
again I'm just getting to know it

00:07:40,349 --> 00:07:49,079
anymore anymore tools not mentioned that

00:07:43,449 --> 00:07:49,079
people would like to advocate for

00:07:53,490 --> 00:07:58,419
Joey has this propeller tool that he

00:07:56,349 --> 00:08:00,879
didn't talk about at Def Con last year

00:07:58,419 --> 00:08:03,069
is configuration management but you can

00:08:00,879 --> 00:08:04,900
just tell it this host that you're

00:08:03,069 --> 00:08:06,969
already configuring please make an image

00:08:04,900 --> 00:08:17,490
that has all the properties that that

00:08:06,969 --> 00:08:23,110
host has which is quite nice so FA is

00:08:17,490 --> 00:08:27,460
used by the Debian cloud team and it can

00:08:23,110 --> 00:08:31,240
do a lot of things so I think since

00:08:27,460 --> 00:08:33,419
there are it's very major I think I do

00:08:31,240 --> 00:08:36,389
this since 18 years and we have a lot of

00:08:33,419 --> 00:08:41,889
experiences and it works in a lot of

00:08:36,389 --> 00:08:45,810
cases and it can also do disk images or

00:08:41,889 --> 00:08:45,810
change food environments as all

00:08:57,780 --> 00:09:05,190
there's a tool called dev earth that can

00:09:00,540 --> 00:09:07,970
put a whole system in amethyst that

00:09:05,190 --> 00:09:07,970
could be useful at times

00:09:36,050 --> 00:09:41,029
since no one else is talking I've put a

00:09:38,329 --> 00:09:43,639
plug on my talk on Thursday which will

00:09:41,029 --> 00:09:46,639
be about using FAI for building disk

00:09:43,639 --> 00:09:49,209
images and arm systems so I will

00:09:46,639 --> 00:09:50,780
probably talk more about it here now but

00:09:49,209 --> 00:09:53,980
welcome on Thursday

00:09:50,780 --> 00:09:53,980
[Music]

00:10:15,389 --> 00:10:22,660
Steve would you like to talk about

00:10:17,470 --> 00:10:31,230
that's the the more about the Debian

00:10:22,660 --> 00:10:31,230
cloud bill process once

00:10:31,649 --> 00:10:37,389
so which Debian cloud bill bonus so at

00:10:36,129 --> 00:10:40,839
the moment there's a there's a whole

00:10:37,389 --> 00:10:47,259
slew of things we've got people were

00:10:40,839 --> 00:10:51,069
using bootstrap breeze ed I think that

00:10:47,259 --> 00:10:53,740
as far as I understand development of

00:10:51,069 --> 00:10:55,360
that has basically stopped but some

00:10:53,740 --> 00:10:59,139
people are probably still using it we're

00:10:55,360 --> 00:11:05,050
not a number of people have moved over

00:10:59,139 --> 00:11:08,009
to using using Phi as Thomas said so he

00:11:05,050 --> 00:11:13,209
added support for building images

00:11:08,009 --> 00:11:17,470
eighteen months ago yeah and so the

00:11:13,209 --> 00:11:21,850
current images that are happening on AWS

00:11:17,470 --> 00:11:24,579
are built using that Google are still

00:11:21,850 --> 00:11:26,439
using I think bootstrap reserved for

00:11:24,579 --> 00:11:29,019
what they're using for official images

00:11:26,439 --> 00:11:35,670
what people are working on moving over

00:11:29,019 --> 00:11:39,759
to to Phi as well for the azure images

00:11:35,670 --> 00:11:44,649
the folks at crediting those they were

00:11:39,759 --> 00:11:51,250
using a fork almost a few changes on top

00:11:44,649 --> 00:11:52,689
all Z goes OpenStack build script and of

00:11:51,250 --> 00:11:55,720
course we're still using that OpenStack

00:11:52,689 --> 00:11:57,550
build script for the OpenStack images

00:11:55,720 --> 00:12:01,600
we've build regularly so yes we have

00:11:57,550 --> 00:12:03,670
every tool going we have consensus in

00:12:01,600 --> 00:12:07,149
the cloud team that we want to move

00:12:03,670 --> 00:12:09,490
everything over to using Phi the main

00:12:07,149 --> 00:12:13,290
thing reason for that is we want to get

00:12:09,490 --> 00:12:15,910
again a consistent base configuration

00:12:13,290 --> 00:12:17,379
that we can use because obviously most

00:12:15,910 --> 00:12:21,220
of the cloud images that we're building

00:12:17,379 --> 00:12:23,500
or 99% the same you know we're just

00:12:21,220 --> 00:12:27,129
making tiny tweaks for one provider or

00:12:23,500 --> 00:12:27,570
another and Phi lets us do that in a

00:12:27,129 --> 00:12:30,660
much more

00:12:27,570 --> 00:12:34,140
saying fashion so we can then just check

00:12:30,660 --> 00:12:36,930
in the configuration and you know

00:12:34,140 --> 00:12:39,960
obviously things can then derive from a

00:12:36,930 --> 00:12:42,870
core set of classes it seems to work

00:12:39,960 --> 00:12:45,690
very well we're still working on

00:12:42,870 --> 00:12:49,400
actually automating all of this with CIN

00:12:45,690 --> 00:12:49,400
stuff but that's we're up to

00:12:59,660 --> 00:13:07,560
so I have just under the Packer and

00:13:03,000 --> 00:13:13,170
Germany so Plataea to create a VM images

00:13:07,560 --> 00:13:16,520
for x and the forms such as Amazon will

00:13:13,170 --> 00:13:23,400
crowd or a decoder provides or even

00:13:16,520 --> 00:13:28,970
background and and I think it's also ok

00:13:23,400 --> 00:13:28,970
to create a VM images go over stack

00:13:41,619 --> 00:13:53,209
as in one down comparison of several of

00:13:46,249 --> 00:13:56,779
these tools and could explain why what's

00:13:53,209 --> 00:14:02,649
what they chose me and why why it worked

00:13:56,779 --> 00:14:02,649
better for their very use case

00:14:13,930 --> 00:14:23,080
so we had a need to build aerial images

00:14:18,540 --> 00:14:25,900
we were using the narrow the weight

00:14:23,080 --> 00:14:29,530
leonardo was building images so the way

00:14:25,900 --> 00:14:32,950
they created they were creating what

00:14:29,530 --> 00:14:36,370
they call oil spot which is the general

00:14:32,950 --> 00:14:39,000
application the use of land created a

00:14:36,370 --> 00:14:43,810
star pole and I was using light bill

00:14:39,000 --> 00:14:47,200
which was deprecated few years ago and

00:14:43,810 --> 00:14:50,050
then they had the Guru image tools which

00:14:47,200 --> 00:14:53,500
was creating a highway packet which was

00:14:50,050 --> 00:14:59,440
all the hard work specific components in

00:14:53,500 --> 00:15:02,260
a separated tybalt and then for thermal

00:14:59,440 --> 00:15:05,020
or image format it was some sub-packages

00:15:02,260 --> 00:15:08,470
there and then he was mixing the

00:15:05,020 --> 00:15:11,260
hardware enablement with the user land

00:15:08,470 --> 00:15:14,920
so he could as a scale to generate

00:15:11,260 --> 00:15:20,170
several different images but since light

00:15:14,920 --> 00:15:23,770
field got to maintain we were looking

00:15:20,170 --> 00:15:26,530
other options so we're looking BMD

00:15:23,770 --> 00:15:29,740
bootstrap which it was missing some of

00:15:26,530 --> 00:15:32,170
the features that like build hot that we

00:15:29,740 --> 00:15:35,170
could not I think we could not include

00:15:32,170 --> 00:15:38,440
it was not easy to do our customizations

00:15:35,170 --> 00:15:42,100
that we had to do with this tool so it

00:15:38,440 --> 00:15:44,590
was not luckily not then the bootstrap

00:15:42,100 --> 00:15:48,610
they said with just some Python script

00:15:44,590 --> 00:15:50,530
very writing command sequentially and

00:15:48,610 --> 00:15:53,310
generating an image at the end so you we

00:15:50,530 --> 00:15:55,540
could not either remove and our other

00:15:53,310 --> 00:15:58,120
customizations either and it fits out

00:15:55,540 --> 00:16:02,430
only one image while we probably need to

00:15:58,120 --> 00:16:05,110
generate multiple images with different

00:16:02,430 --> 00:16:07,810
characteristics and we don't want to

00:16:05,110 --> 00:16:10,630
like waste a lot of a space so that's

00:16:07,810 --> 00:16:14,710
there we like to have one OS back and

00:16:10,630 --> 00:16:17,590
then we can increment incrementally add

00:16:14,710 --> 00:16:19,270
more things to this OS back and combined

00:16:17,590 --> 00:16:24,740
with a highway pack and generate an

00:16:19,270 --> 00:16:29,209
image so it's quite a storage efficient

00:16:24,740 --> 00:16:32,089
this way so at the end we yes we also

00:16:29,209 --> 00:16:34,160
look up propeller it looked nice but it

00:16:32,089 --> 00:16:37,330
was high skill high school it has a bit

00:16:34,160 --> 00:16:44,510
of a barrier because not everyone is

00:16:37,330 --> 00:16:50,390
comfortable hacking on Haskell then I

00:16:44,510 --> 00:16:52,640
think we also look at the BM d v2 it was

00:16:50,390 --> 00:16:56,240
python-based but you didn't feel the

00:16:52,640 --> 00:16:58,100
requirements very well so what why did

00:16:56,240 --> 00:17:03,290
not fit the requirements oops

00:16:58,100 --> 00:17:06,110
what specifically we've been saying we

00:17:03,290 --> 00:17:10,670
want to build without root so we we

00:17:06,110 --> 00:17:13,520
create a fake machine which uses KVM to

00:17:10,670 --> 00:17:17,870
to build the image so you see if you

00:17:13,520 --> 00:17:22,790
have access to KVM you don't need root

00:17:17,870 --> 00:17:28,069
access for to be damaged so at the end

00:17:22,790 --> 00:17:30,170
we just implemented this tool called

00:17:28,069 --> 00:17:32,830
Devils to try to fulfill the

00:17:30,170 --> 00:17:32,830
requirements

00:17:35,610 --> 00:17:41,580
I think that's more or less I don't

00:17:37,470 --> 00:17:48,570
think there was more and also by Luke

00:17:41,580 --> 00:17:53,570
Lou a bit bit complicated the code base

00:17:48,570 --> 00:17:57,510
was to be meanness we'd like growing

00:17:53,570 --> 00:18:02,000
organically and it looked it didn't look

00:17:57,510 --> 00:18:06,530
easy to customize for means that we had

00:18:02,000 --> 00:18:06,530
generating multiple images control

00:18:18,800 --> 00:18:26,680
I had a talk about this two years ago in

00:18:23,450 --> 00:18:30,290
Heidelberg and basically I think that

00:18:26,680 --> 00:18:32,570
main conclusion was that it's usually

00:18:30,290 --> 00:18:34,990
just easier to write your own tune and

00:18:32,570 --> 00:18:37,730
try to understand the existing tools and

00:18:34,990 --> 00:18:39,080
there's always a kind of a good feeling

00:18:37,730 --> 00:18:40,910
when you have your own tool that you

00:18:39,080 --> 00:18:43,220
have written exactly to that your use

00:18:40,910 --> 00:18:44,900
case while when you're working on

00:18:43,220 --> 00:18:47,030
someone else's code base you have to

00:18:44,900 --> 00:18:50,290
like consider everyone else's use cases

00:18:47,030 --> 00:18:50,290
and you have to make compromises

00:18:51,310 --> 00:18:56,510
generally I think it's not a very hard

00:18:54,350 --> 00:18:59,090
thing to write that your own image

00:18:56,510 --> 00:19:01,940
writing tool so that's why they appear

00:18:59,090 --> 00:19:04,070
so quickly but then a few years down the

00:19:01,940 --> 00:19:07,250
line you've collected more use cases and

00:19:04,070 --> 00:19:09,650
then you're working on someone else's

00:19:07,250 --> 00:19:11,090
code that someone else being passed you

00:19:09,650 --> 00:19:18,500
who didn't understand the problem as

00:19:11,090 --> 00:19:20,450
well I think if you should or if you

00:19:18,500 --> 00:19:24,710
want to select the tool you should think

00:19:20,450 --> 00:19:26,960
about do I only need to create images on

00:19:24,710 --> 00:19:29,660
the architecture that I'm running the

00:19:26,960 --> 00:19:34,100
tools on or is it possible to create

00:19:29,660 --> 00:19:37,520
cross architecture images or I think

00:19:34,100 --> 00:19:39,260
often creating the image or creating the

00:19:37,520 --> 00:19:44,090
change food environments or just the

00:19:39,260 --> 00:19:47,360
file system is nearly the same and I

00:19:44,090 --> 00:19:50,840
don't know if if all the tools support

00:19:47,360 --> 00:19:53,990
bows so if you want to have a disk image

00:19:50,840 --> 00:19:55,970
you may for debugging purpose without

00:19:53,990 --> 00:19:58,490
extracting the file system from the

00:19:55,970 --> 00:20:04,780
image just do the same process to get

00:19:58,490 --> 00:20:04,780
just a file system for looking into it

00:20:22,100 --> 00:20:35,570
just like to share their experiences

00:20:24,380 --> 00:20:39,920
with some of these tools I was using a

00:20:35,570 --> 00:20:41,960
morning group to start developing the

00:20:39,920 --> 00:20:43,970
Karen oh and I like a tool to build a

00:20:41,960 --> 00:20:48,800
Debian you measure really quickly so we

00:20:43,970 --> 00:20:52,310
can use with KVM to test the kernel and

00:20:48,800 --> 00:20:57,530
I was using VM with the bootstrap for

00:20:52,310 --> 00:21:01,010
that but it had a bug and I sent I filed

00:20:57,530 --> 00:21:03,110
a bug report in the bug tracking system

00:21:01,010 --> 00:21:05,030
and somebody just reply me I probably

00:21:03,110 --> 00:21:08,900
should use another tool because the two

00:21:05,030 --> 00:21:12,610
is kind of dead so yeah that was my

00:21:08,900 --> 00:21:15,440
experience and I I just want a simple to

00:21:12,610 --> 00:21:18,680
create an image with a simple command

00:21:15,440 --> 00:21:20,390
line anytime Cameroonian yeah the other

00:21:18,680 --> 00:21:21,920
ones seem complicated and each of the

00:21:20,390 --> 00:21:22,540
configurations and things things like

00:21:21,920 --> 00:21:25,670
that

00:21:22,540 --> 00:21:35,540
actually I didn't really look at the

00:21:25,670 --> 00:21:38,330
others I would be interested in if if

00:21:35,540 --> 00:21:42,470
it's important for people to have a tool

00:21:38,330 --> 00:21:47,480
that does not need root X root for being

00:21:42,470 --> 00:21:50,120
run so currently I don't know how to do

00:21:47,480 --> 00:21:53,210
Beck mounting or some other things or

00:21:50,120 --> 00:21:56,660
are there already tools that do not need

00:21:53,210 --> 00:22:04,880
rule root or which are the parts that

00:21:56,660 --> 00:22:07,910
still need root access well be you could

00:22:04,880 --> 00:22:12,910
look into a Libya's defense to access

00:22:07,910 --> 00:22:12,910
leap cast FS have you looked into that

00:22:13,570 --> 00:22:21,400
would be worse so actually this is one

00:22:19,220 --> 00:22:25,910
thing I do know about a little because I

00:22:21,400 --> 00:22:28,400
started working on regression tests for

00:22:25,910 --> 00:22:32,770
any references in it RAM FS

00:22:28,400 --> 00:22:38,810
tools and try to get those working as

00:22:32,770 --> 00:22:42,230
without root and so far I have got two I

00:22:38,810 --> 00:22:48,170
can build the next two file system using

00:22:42,230 --> 00:22:53,450
Gen X two FS but I didn't find any way

00:22:48,170 --> 00:22:59,260
to set up anything more confident that

00:22:53,450 --> 00:22:59,260
like from next for file system or LVM

00:22:59,980 --> 00:23:17,920
just using disk images rather than

00:23:04,220 --> 00:23:23,170
devices tashlich does live with guest FS

00:23:17,920 --> 00:23:23,170
wonders I mean does that do for you

00:23:28,520 --> 00:23:34,320
having a look at the docks

00:23:31,049 --> 00:23:35,970
I live guest FS it actually does really

00:23:34,320 --> 00:23:39,960
really complicated scary things

00:23:35,970 --> 00:23:43,650
underneath essentially running running

00:23:39,960 --> 00:23:46,919
an emulator and running a machine inside

00:23:43,650 --> 00:23:49,679
a VM and then exporting access to

00:23:46,919 --> 00:23:51,510
basically to allow you to to do the Merc

00:23:49,679 --> 00:23:54,030
nod call which of course is the woman

00:23:51,510 --> 00:23:57,510
you can't do any other way without being

00:23:54,030 --> 00:23:59,280
route and you can it runs a VM you're

00:23:57,510 --> 00:24:02,400
gonna have a son a kind of a file system

00:23:59,280 --> 00:24:05,850
proxy into that's exactly how it works

00:24:02,400 --> 00:24:08,370
yes okay so it then X so it's it's got

00:24:05,850 --> 00:24:12,990
bindings for most common languages I

00:24:08,370 --> 00:24:16,980
know in Lenovo we use it a lot in lava

00:24:12,990 --> 00:24:19,710
to help us or allow us to then go and

00:24:16,980 --> 00:24:21,480
modify random file system images and add

00:24:19,710 --> 00:24:25,830
extra things into them after they've

00:24:21,480 --> 00:24:27,720
been built it's very powerful and also

00:24:25,830 --> 00:24:32,250
quite scary under the hood if you go and

00:24:27,720 --> 00:24:34,409
have a look but otherwise you know my

00:24:32,250 --> 00:24:36,150
experience is whenever we end up

00:24:34,409 --> 00:24:37,590
building images and I can I've done

00:24:36,150 --> 00:24:39,780
whole loads of different types

00:24:37,590 --> 00:24:42,030
it always ends up coming down to can you

00:24:39,780 --> 00:24:44,250
run look not so that's why you end up by

00:24:42,030 --> 00:24:46,850
the building in a VM or or something to

00:24:44,250 --> 00:24:46,850
get around there

00:25:12,130 --> 00:25:18,350
I'm curious which of the tools mentioned

00:25:15,830 --> 00:25:20,150
can do bare-metal installs as well

00:25:18,350 --> 00:25:23,110
because I'd be interested in a system

00:25:20,150 --> 00:25:27,650
where you could create a virtual machine

00:25:23,110 --> 00:25:30,910
cloud image an arm image and also

00:25:27,650 --> 00:25:30,910
install on bare metal

00:25:41,440 --> 00:25:48,860
so Thomas anger if I can do that my

00:25:46,540 --> 00:25:50,900
script that is currently used for

00:25:48,860 --> 00:25:56,780
building the official depend images you

00:25:50,900 --> 00:25:58,700
can do it too well what else is there

00:25:56,780 --> 00:26:02,920
any other of dimension tools that can do

00:25:58,700 --> 00:26:02,920
bare metal I don't think so

00:26:09,410 --> 00:26:14,080
well Debian installer with proceeding

00:26:14,500 --> 00:26:18,640
but that only does yeah

00:26:36,610 --> 00:26:44,080
I'm still using as an create image which

00:26:39,790 --> 00:26:46,570
as a simple configuration isn't much

00:26:44,080 --> 00:26:51,190
being worked on I think and doesn't

00:26:46,570 --> 00:26:55,710
support ipv6 and yeah we've been also on

00:26:51,190 --> 00:26:55,710
the verge of creating something about

00:27:08,050 --> 00:27:27,040
shall I scroll this down a little more

00:27:12,220 --> 00:27:31,930
people starting it resolved so we should

00:27:27,040 --> 00:27:35,280
the tools can cross build sorry going

00:27:31,930 --> 00:27:40,620
back to the vagrant question on the

00:27:35,280 --> 00:27:44,890
Installer parts we also looking into

00:27:40,620 --> 00:27:48,700
maybe Calamari's it's something you can

00:27:44,890 --> 00:27:53,080
add into the image to get later being

00:27:48,700 --> 00:27:59,530
able to install this image into into the

00:27:53,080 --> 00:28:02,800
device or there's also opt from in

00:27:59,530 --> 00:28:04,660
canonical to be able to do the

00:28:02,800 --> 00:28:08,790
installation like you run a live image

00:28:04,660 --> 00:28:13,320
you can install the parameter

00:28:08,790 --> 00:28:16,840
however photos our installers that we

00:28:13,320 --> 00:28:21,160
were currently also interested that we

00:28:16,840 --> 00:28:23,710
assign collabora I know it's interesting

00:28:21,160 --> 00:28:26,580
also to know if somebody else knows

00:28:23,710 --> 00:28:26,580
about installers

00:28:37,100 --> 00:28:42,919
and another question in there one of

00:28:39,919 --> 00:28:47,120
these tools that already particularly

00:28:42,919 --> 00:28:49,070
cares about American disability like

00:28:47,120 --> 00:28:52,519
making sure that if someone else beats

00:28:49,070 --> 00:28:57,259
the same from the same commit they will

00:28:52,519 --> 00:28:59,830
get bit by bit for bit identical aspects

00:28:57,259 --> 00:28:59,830
as a result

00:29:09,140 --> 00:29:15,230
the problem is that you are writing and

00:29:12,110 --> 00:29:18,550
on a file system and writing on or next

00:29:15,230 --> 00:29:22,280
to as much as I know is not reproducible

00:29:18,550 --> 00:29:27,860
my mistake Englander vagrant says aha

00:29:22,280 --> 00:29:34,880
that's wrong what to answer that one

00:29:27,860 --> 00:29:39,490
very good you have current only right on

00:29:34,880 --> 00:29:43,270
next X third two three four reproducibly

00:29:39,490 --> 00:29:43,270
you can generate

00:29:55,500 --> 00:30:01,320
it's just having to say the file system

00:29:58,470 --> 00:30:05,389
new you IDs and presumably partition you

00:30:01,320 --> 00:30:07,230
you IDs if you use a GPT are going to

00:30:05,389 --> 00:30:09,960
well obviously they're supposed to be

00:30:07,230 --> 00:30:14,370
unique every time and I don't know

00:30:09,960 --> 00:30:19,230
what's the know whether there's a good

00:30:14,370 --> 00:30:21,210
way to override that I think okay two FS

00:30:19,230 --> 00:30:25,919
lets you specify you UOIT and you could

00:30:21,210 --> 00:30:35,970
you could derive the value from the from

00:30:25,919 --> 00:30:38,700
something but I don't know if F if and

00:30:35,970 --> 00:30:50,730
if anything does that what's going on in

00:30:38,700 --> 00:30:52,529
most societies of tales CD images what

00:30:50,730 --> 00:30:54,330
we do at the moment where we use Krishna

00:30:52,529 --> 00:30:57,990
path so we don't have any problem with X

00:30:54,330 --> 00:31:03,659
3 2 3 4 and squash has reports ability

00:30:57,990 --> 00:31:08,879
is now sort problem mostly to build our

00:31:03,659 --> 00:31:11,480
work is limited rock participe well when

00:31:08,879 --> 00:31:15,149
you type right build we will build a

00:31:11,480 --> 00:31:17,429
vagrant base box image with the under

00:31:15,149 --> 00:31:21,389
bootstrap this one won't be reversible

00:31:17,429 --> 00:31:23,399
but we don't care and then it will be

00:31:21,389 --> 00:31:26,850
started with vagrants inside lead world

00:31:23,399 --> 00:31:29,039
KVM and then our bid system which uses

00:31:26,850 --> 00:31:32,279
an old version of life it will take over

00:31:29,039 --> 00:31:35,940
and in there produce reversible ISO

00:31:32,279 --> 00:31:40,490
image using snapshots of the Debian

00:31:35,940 --> 00:31:40,490
archives we control our input

00:31:51,120 --> 00:31:56,700
what's the question about cross build

00:31:53,820 --> 00:31:59,759
again it's about cross penis which tool

00:31:56,700 --> 00:32:02,429
still can suppose building a system

00:31:59,759 --> 00:32:06,600
image for another architecture however

00:32:02,429 --> 00:32:09,149
the Devils can build on amd64 I think it

00:32:06,600 --> 00:32:11,490
just uses amd64 claim use so you are

00:32:09,149 --> 00:32:14,549
forced to use that architecture as build

00:32:11,490 --> 00:32:17,879
architecture and then you can it's meant

00:32:14,549 --> 00:32:22,230
to to cross build images for any

00:32:17,879 --> 00:32:24,640
architecture you you want but actually

00:32:22,230 --> 00:32:27,699
we do it for forearm

00:32:24,640 --> 00:32:27,699
[Music]

00:32:41,940 --> 00:32:51,270
I have a question on kalamarez isn't

00:32:47,160 --> 00:32:56,970
this installer with user interface or

00:32:51,270 --> 00:32:58,860
can it be run in a scripted mode it

00:32:56,970 --> 00:33:00,690
depends on a bunch of duty stuff so you

00:32:58,860 --> 00:33:03,120
can only run it as a GUI at the moment

00:33:00,690 --> 00:33:05,670
now the nice crypto back in but this is

00:33:03,120 --> 00:33:07,290
a busy session tomorrow 40 people who

00:33:05,670 --> 00:33:10,500
want to create something like kalamarez

00:33:07,290 --> 00:33:13,220
but come kick you back in so if you can

00:33:10,500 --> 00:33:16,970
vote whatever fronted you want to it

00:33:13,220 --> 00:33:16,970
does it answer your question

00:33:27,450 --> 00:33:35,580
so just checking with G desk for GPT

00:33:32,460 --> 00:33:37,980
partitioning of course were your new

00:33:35,580 --> 00:33:39,630
it's are normally randomized and

00:33:37,980 --> 00:33:41,340
partition Croatian time or whatever

00:33:39,630 --> 00:33:43,500
obviously that would be a problem if

00:33:41,340 --> 00:33:46,410
you're going week reducible you it does

00:33:43,500 --> 00:33:48,920
let you specify your own you you it's if

00:33:46,410 --> 00:33:54,540
you need so okay so you can control that

00:33:48,920 --> 00:33:58,110
I've no idea about doing it for dust

00:33:54,540 --> 00:34:00,270
partitioning pass I guess I mean a lot

00:33:58,110 --> 00:34:08,070
of that comes down to time stamps and

00:34:00,270 --> 00:34:09,120
stuff IDs today you might good point so

00:34:08,070 --> 00:34:14,010
then it will come down to the file

00:34:09,120 --> 00:34:15,810
systems you using so yeah x2 two three

00:34:14,010 --> 00:34:19,950
four in theory you should be able to do

00:34:15,810 --> 00:34:22,580
is other file systems yeah you get to

00:34:19,950 --> 00:34:22,580
keep the pieces

00:34:35,559 --> 00:34:43,569
I added the question at the bottom

00:34:38,589 --> 00:34:48,609
it's about updaters someone also using

00:34:43,569 --> 00:34:51,489
updaters besides apt nowadays we were

00:34:48,609 --> 00:34:56,159
looking into ice tree for cysts atomic

00:34:51,489 --> 00:34:56,159
updates and also in to see a sink

00:34:56,969 --> 00:35:08,499
no one here is using this kind of

00:35:01,529 --> 00:35:12,670
updating technologies you mean updating

00:35:08,499 --> 00:35:15,999
your disk image yeah

00:35:12,670 --> 00:35:18,099
I mean about like all field upgrades so

00:35:15,999 --> 00:35:22,049
for example there was we have support

00:35:18,099 --> 00:35:27,369
for OS 3 it's a always treat do you know

00:35:22,049 --> 00:35:29,709
that's just a really quick introduction

00:35:27,369 --> 00:35:33,249
it'll be like it but for a root

00:35:29,709 --> 00:35:35,619
filesystem so you just you have a

00:35:33,249 --> 00:35:37,689
filesystem in a server and then you just

00:35:35,619 --> 00:35:40,599
get pour oil strip pool and then you

00:35:37,689 --> 00:35:43,029
just update from that and you can roll

00:35:40,599 --> 00:35:45,519
back as well and it's an atomic atomic

00:35:43,029 --> 00:35:48,609
upgrade and it it is it the filesystem

00:35:45,519 --> 00:35:51,429
is just some objects that need to be

00:35:48,609 --> 00:35:55,329
downloaded and then you can update your

00:35:51,429 --> 00:35:58,420
your system in filter for in field up

00:35:55,329 --> 00:36:01,569
upgrades on for embedded devices so meet

00:35:58,420 --> 00:36:06,869
a little bit like snapshots of the file

00:36:01,569 --> 00:36:06,869
system yeah yeah

00:36:08,319 --> 00:36:15,009
in file you could create a disk image

00:36:10,929 --> 00:36:18,309
with battery FS file system so this

00:36:15,009 --> 00:36:20,199
would be concerning package upgrades I

00:36:18,309 --> 00:36:23,349
think most people would say it just

00:36:20,199 --> 00:36:26,410
rebuilt a new disk image so there's no

00:36:23,349 --> 00:36:30,009
special need if you have already a disk

00:36:26,410 --> 00:36:33,219
image to do an update or upgrade inside

00:36:30,009 --> 00:36:38,229
in it because the build process is so

00:36:33,219 --> 00:36:42,429
fast just rebuild a disk image and then

00:36:38,229 --> 00:36:46,630
you need to like I guess your use case

00:36:42,429 --> 00:36:49,110
is more into the cloud or service but if

00:36:46,630 --> 00:36:52,010
you have like in Internet of Things

00:36:49,110 --> 00:36:57,390
vices around and you need to deploy

00:36:52,010 --> 00:36:59,730
updates into these devices and there's

00:36:57,390 --> 00:37:02,820
failures you need rollback and things

00:36:59,730 --> 00:37:05,760
like that yeah as far as I know most

00:37:02,820 --> 00:37:11,010
also embedded devices you will always

00:37:05,760 --> 00:37:13,680
write the whole disk image onto it or is

00:37:11,010 --> 00:37:17,700
anybody using some dealt or images or

00:37:13,680 --> 00:37:20,220
updates so I only know that people get a

00:37:17,700 --> 00:37:22,140
new version of a disk image and write

00:37:20,220 --> 00:37:24,530
the whole disk image to the embedded

00:37:22,140 --> 00:37:24,530
device

00:37:35,850 --> 00:37:40,770
or there are a lot of projects to manage

00:37:38,970 --> 00:37:45,900
these kind of updates for undated with

00:37:40,770 --> 00:37:49,380
AP type system partitions it seems that

00:37:45,900 --> 00:37:53,940
many projects are slowly standardizing

00:37:49,380 --> 00:37:56,730
and rock ra you see to that and it has

00:37:53,940 --> 00:38:00,050
been it has gained see a thing

00:37:56,730 --> 00:38:00,050
support recently I think

00:38:33,270 --> 00:38:36,990
so the question for you been you

00:38:35,670 --> 00:38:42,540
organize the session what were you

00:38:36,990 --> 00:38:52,500
hoping to get out of this just a

00:38:42,540 --> 00:38:55,070
conversation about pros and cons I mean

00:38:52,500 --> 00:38:57,390
there's already there's a wiki page

00:38:55,070 --> 00:38:59,040
which hopefully should have links to all

00:38:57,390 --> 00:39:01,260
of these tools are you going to go

00:38:59,040 --> 00:39:04,050
through and update the links though and

00:39:01,260 --> 00:39:05,850
I can do yes please no mission is

00:39:04,050 --> 00:39:07,200
obviously it will be great to share what

00:39:05,850 --> 00:39:09,440
we know what people have been talking

00:39:07,200 --> 00:39:09,440
about

00:39:22,740 --> 00:39:31,210
so it looks like that's people who said

00:39:25,710 --> 00:39:37,300
all they have to say any last points

00:39:31,210 --> 00:39:37,300
[Music]

00:39:41,000 --> 00:39:45,910
ok let's let's stop there

00:39:47,710 --> 00:39:54,809

YouTube URL: https://www.youtube.com/watch?v=pfIXmIt9NP0


