Title: OpenRC: A Featureful and Hackable Init System
Publication date: 2018-07-31
Playlist: DebConf 18
Description: 
	by Benda Xu

At: DebConf18
https://debconf18.debconf.org/talks/102-openrc-a-featureful-and-hackable-init-system/

OpenRC is a dependency based init system written in C and shell
script. It is modular and can be extended by s6 supervisor and Linux
cgroup. Keeping itself simple and stupid, OpenRC values Unix philosophy.

OpenRC is shipped with Debian stable since Jessie and runs on kFreeBSD
and Hurd besides Linux.  It readily runs Debian in LXC, OpenVZ, vserver
containers, usermodel Linux or Xen domains.

In this talk I am going to walk you through the features of OpenRC, and
show you how OpenRC is hacked to suit our needs in real life.

Room: Xueshan (é›ªå±±)
Scheduled start: 2018-07-30 18:00:00
Captions: 
	00:00:04,720 --> 00:00:15,230
um I'm here to present the open are see

00:00:11,780 --> 00:00:20,990
an alternative init system and service

00:00:15,230 --> 00:00:26,900
manager so one question who cares about

00:00:20,990 --> 00:00:29,870
the init system great brick that's why

00:00:26,900 --> 00:00:35,379
you are coming here and has gone through

00:00:29,870 --> 00:00:40,520
the inner system debate around 2014

00:00:35,379 --> 00:00:46,579
great wait thank you and who likes show

00:00:40,520 --> 00:00:51,050
scripts nice I I think I am meeting with

00:00:46,579 --> 00:00:54,170
the correct audience so something about

00:00:51,050 --> 00:00:58,790
me I'm a long-term Devi end-users since

00:00:54,170 --> 00:01:03,320
the age of woody and I also involved in

00:00:58,790 --> 00:01:07,009
Gen 2 and right now I'm applying to be a

00:01:03,320 --> 00:01:09,139
Debian developer so from my point of

00:01:07,009 --> 00:01:13,189
view of the patience of skills required

00:01:09,139 --> 00:01:16,249
the Davian and Gen 2 has a kind of this

00:01:13,189 --> 00:01:18,350
relationship so I'm climbing up so

00:01:16,249 --> 00:01:21,799
finally to be a Debian developer which

00:01:18,350 --> 00:01:25,639
made me very excited hopefully this

00:01:21,799 --> 00:01:30,979
meeting can give me a boost of that okay

00:01:25,639 --> 00:01:35,659
so let's come to the topic of today what

00:01:30,979 --> 00:01:38,840
is open RC basically open RC has been

00:01:35,659 --> 00:01:42,950
grown from the gentle community as an

00:01:38,840 --> 00:01:45,679
answer to to for the call to design a

00:01:42,950 --> 00:01:47,139
modern innocent

00:01:45,679 --> 00:01:50,389
I should be compatible with the

00:01:47,139 --> 00:01:54,979
traditional scripts as much as possible

00:01:50,389 --> 00:02:00,200
and basically open RC is written in C

00:01:54,979 --> 00:02:03,669
and shell scripts and that makes the

00:02:00,200 --> 00:02:07,999
system quite simple and very much

00:02:03,669 --> 00:02:10,729
portable so if you want to install open

00:02:07,999 --> 00:02:15,380
RC on Debian you can copy this command

00:02:10,729 --> 00:02:17,150
it basically installs the system V in it

00:02:15,380 --> 00:02:21,349
and open RC and

00:02:17,150 --> 00:02:25,670
removes the system thesis v replacement

00:02:21,349 --> 00:02:28,670
and with this single command and after

00:02:25,670 --> 00:02:34,760
the reboot you will be powered by open

00:02:28,670 --> 00:02:38,989
RC so that's all for the talk well not

00:02:34,760 --> 00:02:41,739
really and so I think the audience is

00:02:38,989 --> 00:02:46,010
not quite convinced why open RC is

00:02:41,739 --> 00:02:49,940
useful at least for some cases well I

00:02:46,010 --> 00:02:54,290
think it's a good to answer this

00:02:49,940 --> 00:02:57,190
question it is needed to consider

00:02:54,290 --> 00:03:01,790
reconsider the good practice of a free

00:02:57,190 --> 00:03:04,489
software I from my point of view it

00:03:01,790 --> 00:03:07,670
should be respected UNIX philosophy and

00:03:04,489 --> 00:03:09,889
it should be easy to tinker and easy to

00:03:07,670 --> 00:03:14,450
understand and straightforward to hack

00:03:09,889 --> 00:03:16,340
and it should provide some modern or

00:03:14,450 --> 00:03:19,579
standard features that that everybody

00:03:16,340 --> 00:03:22,099
takes for granted and as a bunch mark I

00:03:19,579 --> 00:03:25,660
think a software that is discussed

00:03:22,099 --> 00:03:30,849
successful is usually used when in an

00:03:25,660 --> 00:03:33,889
unknown anticipated by the developers so

00:03:30,849 --> 00:03:38,180
let me show you that open RC meets these

00:03:33,889 --> 00:03:42,199
standards so first open RC has a very

00:03:38,180 --> 00:03:45,290
flexible design because the services are

00:03:42,199 --> 00:03:48,319
defined by shell scripts and the show

00:03:45,290 --> 00:03:51,349
squirt is the most natural language to

00:03:48,319 --> 00:03:55,190
invoke months because we reuse Charles

00:03:51,349 --> 00:03:57,680
to invoke commands every day and so

00:03:55,190 --> 00:04:02,479
therefore this gives the open RC a very

00:03:57,680 --> 00:04:06,440
flexible design first an example is like

00:04:02,479 --> 00:04:10,760
this it can be very decorative for

00:04:06,440 --> 00:04:14,840
example you give a description you give

00:04:10,760 --> 00:04:17,840
a file and command and some extra

00:04:14,840 --> 00:04:22,789
arguments and it will become a service

00:04:17,840 --> 00:04:26,150
you can start and stop and make it run

00:04:22,789 --> 00:04:29,600
automatically on on reboot or it can be

00:04:26,150 --> 00:04:32,660
very much like a script

00:04:29,600 --> 00:04:36,290
where you define some functions and a

00:04:32,660 --> 00:04:38,660
you execute commands inside those

00:04:36,290 --> 00:04:42,490
functions by the way this is for the

00:04:38,660 --> 00:04:45,290
dependency and the mo the more

00:04:42,490 --> 00:04:49,420
conventional example is in the start

00:04:45,290 --> 00:04:51,800
function for example it is to mount some

00:04:49,420 --> 00:04:57,490
kernel filesystems

00:04:51,800 --> 00:05:03,820
you can just write shell script directly

00:04:57,490 --> 00:05:08,720
or we can support the Debian Linux

00:05:03,820 --> 00:05:13,570
standard base inner scripts which is why

00:05:08,720 --> 00:05:13,570
we plotted this system to Debian

00:05:14,770 --> 00:05:25,360
secondly open RC is a very small tool to

00:05:19,850 --> 00:05:29,870
be honest and it is very simple to

00:05:25,360 --> 00:05:32,300
understand so I think the motto is when

00:05:29,870 --> 00:05:36,850
you are in doubt of the behavior just

00:05:32,300 --> 00:05:41,840
read the code for example in the past

00:05:36,850 --> 00:05:44,330
case I've shown this decorative example

00:05:41,840 --> 00:05:48,320
and this decorative example can is

00:05:44,330 --> 00:05:50,630
define in some shell script and this

00:05:48,320 --> 00:05:54,920
show script can be read directly for

00:05:50,630 --> 00:05:57,950
example on the Debian system it is in

00:05:54,920 --> 00:06:01,730
this file and we can see okay so we if

00:05:57,950 --> 00:06:04,340
we define the PID file it will use the

00:06:01,730 --> 00:06:07,100
PID file here if you define some other

00:06:04,340 --> 00:06:13,670
arguments it will be used a pass to

00:06:07,100 --> 00:06:17,630
start/stop demon so is very simple to

00:06:13,670 --> 00:06:21,320
understand and it is a actually a good

00:06:17,630 --> 00:06:26,180
educative piece of software where we can

00:06:21,320 --> 00:06:32,030
learn for system programming and shells

00:06:26,180 --> 00:06:35,000
for attacking and also open RC stands to

00:06:32,030 --> 00:06:39,979
its sinfulness it's very easy to hack

00:06:35,000 --> 00:06:42,520
and it I think this is the the central

00:06:39,979 --> 00:06:46,150
spirit of free software

00:06:42,520 --> 00:06:50,470
and because the code base is very light

00:06:46,150 --> 00:06:54,669
and you can easy very easily to find the

00:06:50,470 --> 00:06:56,800
solution to satisfy you need and because

00:06:54,669 --> 00:07:00,789
the open RC respects the backward

00:06:56,800 --> 00:07:07,840
compatibility so your hacks are will be

00:07:00,789 --> 00:07:11,909
long-lived for example initially the

00:07:07,840 --> 00:07:16,150
debian RSP scripts has some weak

00:07:11,909 --> 00:07:19,330
dependencies and these dependencies make

00:07:16,150 --> 00:07:23,409
some dependency loop which is not

00:07:19,330 --> 00:07:26,650
originally supported by Gen 2 version of

00:07:23,409 --> 00:07:31,750
Narcy so in order to port the opener c

00:07:26,650 --> 00:07:35,409
to Davian so we implemented a dependency

00:07:31,750 --> 00:07:38,380
handler to accept loops in the

00:07:35,409 --> 00:07:44,080
dependency and it has been working well

00:07:38,380 --> 00:07:47,860
for 4 years for this fact and the patch

00:07:44,080 --> 00:07:50,770
hasn't been changed at all and you it

00:07:47,860 --> 00:07:57,669
works for every new versions of an open

00:07:50,770 --> 00:08:01,150
RC and because it's a very simple tool

00:07:57,669 --> 00:08:05,580
so it does one thing and does it

00:08:01,150 --> 00:08:09,159
correctly and for example it manages the

00:08:05,580 --> 00:08:13,180
service dependency and as well as the

00:08:09,159 --> 00:08:16,560
start and stop of the services it can be

00:08:13,180 --> 00:08:19,919
in foreground or in background so

00:08:16,560 --> 00:08:25,240
recently we have a trend to supervise

00:08:19,919 --> 00:08:28,900
the services so if we put the demon in

00:08:25,240 --> 00:08:34,120
foreground it is easier to be supervised

00:08:28,900 --> 00:08:40,060
and so that when the demon crashes can

00:08:34,120 --> 00:08:43,209
be restarted and and and to minimize the

00:08:40,060 --> 00:08:46,839
downtime and also the open RC is

00:08:43,209 --> 00:08:50,200
flexible it can be interpreted with C

00:08:46,839 --> 00:08:53,339
group or some alternative init programs

00:08:50,200 --> 00:08:55,190
like Essex and run it they are also very

00:08:53,339 --> 00:09:01,490
nice

00:08:55,190 --> 00:09:04,070
and simple service supervisors you can

00:09:01,490 --> 00:09:07,250
also to many things with open RC for

00:09:04,070 --> 00:09:12,530
example you you're not necessarily using

00:09:07,250 --> 00:09:15,770
the you dev you can use some M dev from

00:09:12,530 --> 00:09:20,030
the busy box or you can you are not tied

00:09:15,770 --> 00:09:24,440
to the CC unit you can use some

00:09:20,030 --> 00:09:27,890
alternative init programs or write write

00:09:24,440 --> 00:09:32,210
some in it by yourself as long as it

00:09:27,890 --> 00:09:35,870
starts open RC a cause of an RC or even

00:09:32,210 --> 00:09:40,460
open RC can be used in as a normal user

00:09:35,870 --> 00:09:47,120
and started by some chrome tab or some

00:09:40,460 --> 00:09:49,850
menu manual execution it doesn't it

00:09:47,120 --> 00:09:56,840
doesn't care so as long as it's get

00:09:49,850 --> 00:10:00,680
executed its executed perfectly and the

00:09:56,840 --> 00:10:03,550
other point I want to cover is that the

00:10:00,680 --> 00:10:07,910
open our series philosophy is that it's

00:10:03,550 --> 00:10:13,390
evolutional the users has the ultimate

00:10:07,910 --> 00:10:17,180
words on the development for example

00:10:13,390 --> 00:10:20,900
there are many power users say giving

00:10:17,180 --> 00:10:23,740
opinions to the developers and sometimes

00:10:20,900 --> 00:10:27,070
they do a very good hack and they become

00:10:23,740 --> 00:10:31,640
developers developers by themselves and

00:10:27,070 --> 00:10:35,300
the the group is very friendly to speak

00:10:31,640 --> 00:10:38,360
with and to work with for example when

00:10:35,300 --> 00:10:40,520
we are when we were adopting open RC to

00:10:38,360 --> 00:10:42,770
Debian there has been some name

00:10:40,520 --> 00:10:47,080
conflicts for example the run script and

00:10:42,770 --> 00:10:51,050
the RC are in conflict with existing

00:10:47,080 --> 00:10:53,270
Debian packages and the upstream acted

00:10:51,050 --> 00:10:57,800
very quickly to change their executables

00:10:53,270 --> 00:11:01,120
to offer RC specific names and we were

00:10:57,800 --> 00:11:01,120
very appreciated with that

00:11:03,850 --> 00:11:12,009
and finally what I think is very

00:11:08,910 --> 00:11:14,829
important for software freedom and for

00:11:12,009 --> 00:11:18,790
Debian as the universal operating system

00:11:14,829 --> 00:11:22,449
the open RC is not Linux only it

00:11:18,790 --> 00:11:25,329
supports as I mentioned as long as it

00:11:22,449 --> 00:11:30,480
started it started so it supports

00:11:25,329 --> 00:11:36,100
alternative kernels for example this new

00:11:30,480 --> 00:11:39,670
cave FreeBSD kernel FreeBSD this is a

00:11:36,100 --> 00:11:43,440
screenshot if I have my laptop I can

00:11:39,670 --> 00:11:48,339
show you a live version of that and also

00:11:43,440 --> 00:11:50,410
convert this one the third is not that

00:11:48,339 --> 00:11:53,410
that very colorful so you can but you

00:11:50,410 --> 00:12:03,399
can see this line is starting the new

00:11:53,410 --> 00:12:05,589
the new kernel and if you want to if you

00:12:03,399 --> 00:12:08,589
want to get more information about open

00:12:05,589 --> 00:12:11,920
RC you can get this tracker is already

00:12:08,589 --> 00:12:17,470
in Debian and it's easy to be installed

00:12:11,920 --> 00:12:22,199
and the popcorn graph is like this we

00:12:17,470 --> 00:12:25,870
are constantly gaining users and

00:12:22,199 --> 00:12:31,029
hopefully after his talk I can see a

00:12:25,870 --> 00:12:35,970
upward trend of this popcorn so I want

00:12:31,029 --> 00:12:40,060
to convey some messages to the audience

00:12:35,970 --> 00:12:43,930
first open RC is offers some modern

00:12:40,060 --> 00:12:48,850
features it is a feature for init system

00:12:43,930 --> 00:12:51,699
and service measure and it supports the

00:12:48,850 --> 00:12:54,870
features we take in for defaults for

00:12:51,699 --> 00:12:59,290
example the service dependencies the

00:12:54,870 --> 00:13:04,060
process of supervision and fastboot of

00:12:59,290 --> 00:13:09,480
the systems but these features are not

00:13:04,060 --> 00:13:12,040
came with a downside of not

00:13:09,480 --> 00:13:17,870
understandable system it's still keeping

00:13:12,040 --> 00:13:20,600
to be very simple and to understand and

00:13:17,870 --> 00:13:24,500
also it is driven by a friendly

00:13:20,600 --> 00:13:28,460
community and also the users have the

00:13:24,500 --> 00:13:31,700
final word of where it goes and it is

00:13:28,460 --> 00:13:34,490
easy to be installed on Debian I can

00:13:31,700 --> 00:13:39,020
give you if I like seven second

00:13:34,490 --> 00:13:42,020
demonstration of how to install it if

00:13:39,020 --> 00:13:45,650
you evolve if you want that demo talk to

00:13:42,020 --> 00:13:49,580
me after my talk so finally I like to

00:13:45,650 --> 00:13:52,880
thank the supporters of open RC

00:13:49,580 --> 00:13:56,990
it has been a long history before

00:13:52,880 --> 00:14:00,020
starting before the long debate of init

00:13:56,990 --> 00:14:03,770
system Roger who's already have been

00:14:00,020 --> 00:14:07,490
retired I I think has laid down the

00:14:03,770 --> 00:14:10,960
ground breaking work and Thomas and Adam

00:14:07,490 --> 00:14:15,380
has been supervising our work and

00:14:10,960 --> 00:14:19,400
Demetri and Bill has gave virus

00:14:15,380 --> 00:14:24,160
contributions and the hurt the third

00:14:19,400 --> 00:14:29,660
patch has not been possible if not were

00:14:24,160 --> 00:14:33,530
spent and get worried so I like to send

00:14:29,660 --> 00:14:38,810
my colleagues and that's all

00:14:33,530 --> 00:14:45,280
hopefully this has get you some interest

00:14:38,810 --> 00:14:45,280
in open RC and I'm open for questions or

00:14:47,500 --> 00:14:55,220
debates so this this is great so I

00:14:52,670 --> 00:14:57,680
should say I'm Ian Jackson I have

00:14:55,220 --> 00:15:00,140
somehow ended up being in charge of

00:14:57,680 --> 00:15:02,180
Sisyphean it in Debian I didn't really

00:15:00,140 --> 00:15:04,520
want to be in charge of it but nobody

00:15:02,180 --> 00:15:08,000
else is taking care of it this is this

00:15:04,520 --> 00:15:10,760
is cool do you have like a like a

00:15:08,000 --> 00:15:13,810
transition plan I mean obviously mmm

00:15:10,760 --> 00:15:16,850
like realistically it's not likely to

00:15:13,810 --> 00:15:19,670
become the default any time soon

00:15:16,850 --> 00:15:22,370
bars because you have these service

00:15:19,670 --> 00:15:24,860
files we need packages to have these

00:15:22,370 --> 00:15:26,720
service files in is there a way to is

00:15:24,860 --> 00:15:29,930
there a way to do that like compatibly

00:15:26,720 --> 00:15:32,720
to like transition from

00:15:29,930 --> 00:15:35,060
to say let us start easy um can we

00:15:32,720 --> 00:15:37,130
transition to a situation where sis

00:15:35,060 --> 00:15:39,080
pianets support and open RC support is

00:15:37,130 --> 00:15:41,060
somehow done in the same way these

00:15:39,080 --> 00:15:43,910
little shell scripts seem quite nice

00:15:41,060 --> 00:15:45,500
maybe we could make did it is it's

00:15:43,910 --> 00:15:47,290
possible to interpret these shell

00:15:45,500 --> 00:15:52,459
scripts with with with sis V in it

00:15:47,290 --> 00:15:56,990
sure I think it's doable in a similar

00:15:52,459 --> 00:16:00,529
way as the LSB scripts and the LSB

00:15:56,990 --> 00:16:04,580
stress took I think one afternoon to

00:16:00,529 --> 00:16:08,420
hike up so I expect and most assistant

00:16:04,580 --> 00:16:12,800
the unit's Cantabria would take one

00:16:08,420 --> 00:16:17,420
week's work Ryan um so I I don't think

00:16:12,800 --> 00:16:20,930
that's a very nice way to go for it so I

00:16:17,420 --> 00:16:24,230
mean I'm I don't like we like sis V in

00:16:20,930 --> 00:16:25,520
it very much I I'm I would like do

00:16:24,230 --> 00:16:27,230
something with better service

00:16:25,520 --> 00:16:29,510
supervision and there are reasons why

00:16:27,230 --> 00:16:33,050
I'm not using the competition which you

00:16:29,510 --> 00:16:37,640
have like deployed in your slides very

00:16:33,050 --> 00:16:38,870
very well yes here yeah all of these no

00:16:37,640 --> 00:16:41,060
no at the bottom of the slides we have

00:16:38,870 --> 00:16:43,250
all the anti patterns are yes then this

00:16:41,060 --> 00:16:48,400
is why I'm not using using their the

00:16:43,250 --> 00:16:51,200
competition that we shall not name so

00:16:48,400 --> 00:16:52,370
but but you know I have all these like I

00:16:51,200 --> 00:16:53,690
currently have a lot of Sisyphean it

00:16:52,370 --> 00:16:56,209
scripts obviously who they come in all

00:16:53,690 --> 00:16:58,970
the packages we are we going to be

00:16:56,209 --> 00:17:00,709
sending are you gonna be sending patches

00:16:58,970 --> 00:17:04,189
to package maintainer have you tried

00:17:00,709 --> 00:17:06,740
that is that is that working well um I I

00:17:04,189 --> 00:17:11,839
haven't because I'm using daily unstable

00:17:06,740 --> 00:17:15,790
so the trend has not came to me yet but

00:17:11,839 --> 00:17:19,040
I believe in posture I will be made some

00:17:15,790 --> 00:17:23,660
packages that I like that doesn't ship

00:17:19,040 --> 00:17:25,520
the inner scripts anymore right so so

00:17:23,660 --> 00:17:27,800
there are employment using the init

00:17:25,520 --> 00:17:30,410
scripts that's that as write using this

00:17:27,800 --> 00:17:35,059
VN experience yes so so far all the

00:17:30,410 --> 00:17:39,860
services I use ships the ASP scripts

00:17:35,059 --> 00:17:42,170
which works perfectly okay so but the

00:17:39,860 --> 00:17:45,500
upcoming trend is that

00:17:42,170 --> 00:17:48,530
maintained as a are removing those

00:17:45,500 --> 00:17:50,420
scripts have you seen that anywhere if

00:17:48,530 --> 00:17:54,110
you have examples talk to me afterwards

00:17:50,420 --> 00:17:58,190
okay okay I I've saw some bug bug

00:17:54,110 --> 00:18:02,390
reports but I I can't remember it

00:17:58,190 --> 00:18:04,520
okay immediately but but I do say

00:18:02,390 --> 00:18:06,590
somebody else sorry you know but I do

00:18:04,520 --> 00:18:09,320
think the compatible layer for system

00:18:06,590 --> 00:18:14,720
the unit is a superior way to move

00:18:09,320 --> 00:18:18,220
forward right quite possibly does

00:18:14,720 --> 00:18:18,220
anybody else have any more questions

00:18:18,580 --> 00:18:30,960
short question well thank you thank you

00:18:25,230 --> 00:18:30,960

YouTube URL: https://www.youtube.com/watch?v=YQtKAk01c0U


