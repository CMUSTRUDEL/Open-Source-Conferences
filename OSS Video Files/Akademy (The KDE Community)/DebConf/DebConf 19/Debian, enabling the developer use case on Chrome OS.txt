Title: Debian, enabling the developer use case on Chrome OS
Publication date: 2019-08-07
Playlist: DebConf 19
Description: 
	by Guido Trotter

At: DebConf19
https://debconf19.debconf.org/talks/45-debian-enabling-the-developer-use-case-on-chrome-os/

Chrome OS is Google’s Linux-based operating system that focuses on speed, simplicity and security. From the beginning Chrome OS computers could run Chrome, and a few specially made applications, but since 2016 they also fully support Google Play, enabling users to access millions of Android apps. Chrome OS devices are readily available from many manufacturers.

Since version 69 of Chrome OS, released in the fall of 2018, users can run a Debian GNU/Linux operating system inside a VM and container. This opens the option of running any Linux desktop app on a Chrome OS device, instantly making Chrome OS devices the most easily available Linux computer for a consumer to get.

In this talk we will discuss:
- The architecture of Linux on Chrome OS (aka Crostini), and its rationale
- Its current features and functionality
- Personalizing and configuring your container
- Enterprise features to control linux deployments on Chrome OS
- Roadmap plans, and best ways to ship Linux applications on Chrome OS

Room: Miniauditório
Scheduled start: 2019-07-22 14:30:00
Captions: 
	00:00:05,740 --> 00:00:12,440
all right last tokenization we welcome

00:00:09,410 --> 00:00:14,840
Guido Trotter he's working at Google

00:00:12,440 --> 00:00:17,029
apparently and he's speaking about Devin

00:00:14,840 --> 00:00:21,020
Darian enabling the developer use case

00:00:17,029 --> 00:00:23,720
on Chrome OS hi how are you

00:00:21,020 --> 00:00:26,450
my name is Guido I work at Google I'm

00:00:23,720 --> 00:00:30,740
also a longtime Debian developer I came

00:00:26,450 --> 00:00:33,770
to present some way in which Debian is

00:00:30,740 --> 00:00:36,350
used on the chrome operating system and

00:00:33,770 --> 00:00:41,120
hopefully it will be also Debian

00:00:36,350 --> 00:00:44,899
relevant in various ways we'll see um so

00:00:41,120 --> 00:00:47,659
let's start a bit from what is Chrome OS

00:00:44,899 --> 00:00:49,699
right chrome OS is a Linux based

00:00:47,659 --> 00:00:52,940
operating system with most advanced

00:00:49,699 --> 00:00:54,469
chrome it is not probably the operating

00:00:52,940 --> 00:00:57,949
system most people in this audience

00:00:54,469 --> 00:01:00,319
would use but hopefully we will discuss

00:00:57,949 --> 00:01:03,319
things that can be applied to Debian as

00:01:00,319 --> 00:01:06,260
well as well as like Debian related

00:01:03,319 --> 00:01:08,390
things in Chrome OS Chrome OS is also

00:01:06,260 --> 00:01:11,479
very readily available operating system

00:01:08,390 --> 00:01:13,130
right and it is a bit easier to get than

00:01:11,479 --> 00:01:15,079
Debian like you can just go in a shop

00:01:13,130 --> 00:01:17,600
and buy it which helps for some

00:01:15,079 --> 00:01:19,820
audiences and the fact that now you can

00:01:17,600 --> 00:01:22,549
run a full Debian system on Chrome OS is

00:01:19,820 --> 00:01:25,280
in my opinion a good news in another

00:01:22,549 --> 00:01:31,759
great way that more people can access to

00:01:25,280 --> 00:01:34,219
Debian that couldn't before so let's see

00:01:31,759 --> 00:01:37,729
how it is what we're going to do today

00:01:34,219 --> 00:01:40,340
is first of all just go a bit into how

00:01:37,729 --> 00:01:41,840
it works and how it looks like on Chrome

00:01:40,340 --> 00:01:44,210
OS because most people here probably

00:01:41,840 --> 00:01:47,780
wouldn't have seen that then we go into

00:01:44,210 --> 00:01:50,270
a bit of architectural talk about how it

00:01:47,780 --> 00:01:53,090
is implemented what security measures we

00:01:50,270 --> 00:01:55,310
took and maybe some of these things can

00:01:53,090 --> 00:01:57,469
be applied outside and have actually

00:01:55,310 --> 00:01:59,450
been applied outside so that might be

00:01:57,469 --> 00:02:03,229
interesting outside of the Chrome OS

00:01:59,450 --> 00:02:06,109
world and finally we're going to do some

00:02:03,229 --> 00:02:09,410
advanced usage over what other things

00:02:06,109 --> 00:02:12,650
you can get done in this type of system

00:02:09,410 --> 00:02:15,080
that is not exactly of a normal use case

00:02:12,650 --> 00:02:20,870
and maybe we'll try a demo

00:02:15,080 --> 00:02:23,030
or if that face I have slides cool so

00:02:20,870 --> 00:02:26,270
getting started once you're on Chrome OS

00:02:23,030 --> 00:02:31,100
which as I said normally long runs just

00:02:26,270 --> 00:02:33,160
chrome and Android apps but you can just

00:02:31,100 --> 00:02:35,540
go either in the settings and like

00:02:33,160 --> 00:02:38,420
enable Linux better or look for V

00:02:35,540 --> 00:02:42,260
terminal click it right and then you

00:02:38,420 --> 00:02:45,800
just get an installer right that just

00:02:42,260 --> 00:02:48,170
sets up Linux progress bar terminal

00:02:45,800 --> 00:02:49,760
right so this is just debian getting

00:02:48,170 --> 00:02:51,710
installed and then you have a debian

00:02:49,760 --> 00:02:54,320
system on the on your Chrome OS device

00:02:51,710 --> 00:02:57,860
and you can use it like your normal

00:02:54,320 --> 00:03:00,260
Debian you can opt install things once

00:02:57,860 --> 00:03:04,100
you have upped install them the icons

00:03:00,260 --> 00:03:06,620
for at least the non terminal program so

00:03:04,100 --> 00:03:09,680
everything that has goo in as a dot

00:03:06,620 --> 00:03:13,520
desktop will appear inside the chrome OS

00:03:09,680 --> 00:03:15,770
menu and this is an example with the

00:03:13,520 --> 00:03:17,990
clips and that means and so on one thing

00:03:15,770 --> 00:03:20,959
I should mention is the reason in

00:03:17,990 --> 00:03:23,200
rationale for this feature is to enable

00:03:20,959 --> 00:03:26,690
developers to use Chrome OS right so

00:03:23,200 --> 00:03:29,780
Chrome OS is used by companies and other

00:03:26,690 --> 00:03:31,580
places and we want to allow people that

00:03:29,780 --> 00:03:32,840
for example do web development or

00:03:31,580 --> 00:03:35,750
Android development or other type of

00:03:32,840 --> 00:03:39,170
development to use Chrome OS it can be

00:03:35,750 --> 00:03:42,190
used for any up really but we we gear it

00:03:39,170 --> 00:03:44,630
at the developer experience right so

00:03:42,190 --> 00:03:48,200
after you have your icons you can just

00:03:44,630 --> 00:03:50,480
start your compiler GUI ID and that just

00:03:48,200 --> 00:03:52,850
works right of course it's a full Debian

00:03:50,480 --> 00:03:54,620
system you can do anything you can you

00:03:52,850 --> 00:03:56,930
can do almost anything you can do with

00:03:54,620 --> 00:04:01,130
Debian on it and we'll see what the

00:03:56,930 --> 00:04:04,040
limitations are and why other things

00:04:01,130 --> 00:04:07,010
that we have natively you can share

00:04:04,040 --> 00:04:09,580
drive so anything like Chrome OS axis

00:04:07,010 --> 00:04:12,290
natively Google Drive and you can share

00:04:09,580 --> 00:04:15,709
folder with Linux right and then it's

00:04:12,290 --> 00:04:21,049
mounted in your filesystem and then you

00:04:15,709 --> 00:04:23,000
can save things inside with like either

00:04:21,049 --> 00:04:25,600
from Chrome you can save it'll access it

00:04:23,000 --> 00:04:28,120
from your Docs or vice versa right

00:04:25,600 --> 00:04:30,760
and this is supplies both to drive and

00:04:28,120 --> 00:04:32,410
your local file system of course and we

00:04:30,760 --> 00:04:36,000
have networking right so if you develop

00:04:32,410 --> 00:04:39,160
something related to web right you can

00:04:36,000 --> 00:04:42,040
totally connect from Chrome to your

00:04:39,160 --> 00:04:44,830
container and test how it works and set

00:04:42,040 --> 00:04:48,420
it up plans on this is just the debian

00:04:44,830 --> 00:04:48,420
standard apache running on it

00:04:49,620 --> 00:04:55,960
reachability we have a network is there

00:04:53,800 --> 00:04:58,950
is this host name penguin linux test

00:04:55,960 --> 00:05:01,930
which you can reach it on we will do

00:04:58,950 --> 00:05:05,470
dynamic for port forwarding from local

00:05:01,930 --> 00:05:07,630
hosts what happens now is that if some

00:05:05,470 --> 00:05:09,220
application on the terminal shows a URL

00:05:07,630 --> 00:05:12,640
and you click it it opens it in chrome

00:05:09,220 --> 00:05:14,740
but if it's localhost something that

00:05:12,640 --> 00:05:16,720
might confuse chrome unless it's unknown

00:05:14,740 --> 00:05:19,060
port that gets forwarded automatically

00:05:16,720 --> 00:05:23,980
from close to crostini which is like the

00:05:19,060 --> 00:05:27,250
codename for what will happen after is

00:05:23,980 --> 00:05:29,530
that as soon as you open a port on the

00:05:27,250 --> 00:05:31,240
linux side it will be automatically

00:05:29,530 --> 00:05:35,500
forwarded to localhost on the other side

00:05:31,240 --> 00:05:37,060
and we're also working on enabling port

00:05:35,500 --> 00:05:38,710
forwarding completely so that you know

00:05:37,060 --> 00:05:40,900
on your Chrome OS you can export the

00:05:38,710 --> 00:05:42,670
port externally I don't recommend using

00:05:40,900 --> 00:05:49,030
this is a server it's more really for

00:05:42,670 --> 00:05:50,680
the test case and finally in settings

00:05:49,030 --> 00:05:53,320
like you can manage your shared files

00:05:50,680 --> 00:05:56,500
and folders and share something that you

00:05:53,320 --> 00:05:59,170
shared before there are USB devices that

00:05:56,500 --> 00:06:00,970
you can share with the Chrome OS so that

00:05:59,170 --> 00:06:01,210
if you plug something then Linux can see

00:06:00,970 --> 00:06:04,180
it

00:06:01,210 --> 00:06:06,190
and you can just delete everything and

00:06:04,180 --> 00:06:08,490
start from scratch if you break it you

00:06:06,190 --> 00:06:13,600
get a new one very easy

00:06:08,490 --> 00:06:16,330
so things that work we recently released

00:06:13,600 --> 00:06:18,130
the USB pass-through it doesn't work as

00:06:16,330 --> 00:06:20,290
a general case but we're working on a

00:06:18,130 --> 00:06:21,580
general case but right now at least like

00:06:20,290 --> 00:06:22,930
Android devices and a few hundred

00:06:21,580 --> 00:06:25,630
devices you can just pass through to

00:06:22,930 --> 00:06:26,800
Linux automatic local host port

00:06:25,630 --> 00:06:29,620
forwarding is something that we're

00:06:26,800 --> 00:06:32,890
working on as well all your support now

00:06:29,620 --> 00:06:35,110
works fuse now works it didn't used to

00:06:32,890 --> 00:06:36,750
and we'll see why this limitation is

00:06:35,110 --> 00:06:39,430
very right

00:06:36,750 --> 00:06:42,070
finally another thing that we worked on

00:06:39,430 --> 00:06:46,870
is manageability feature so Chrome OS

00:06:42,070 --> 00:06:50,680
has an enterprise world where you buy a

00:06:46,870 --> 00:06:52,270
fleet of these you give them to 100

00:06:50,680 --> 00:06:53,980
developers a thousand developers right

00:06:52,270 --> 00:06:56,680
and then you manage them centrally with

00:06:53,980 --> 00:06:59,050
policies and then we have policies to

00:06:56,680 --> 00:07:02,290
control whether the device is allowed to

00:06:59,050 --> 00:07:04,570
use Linux or not and if it is allowed

00:07:02,290 --> 00:07:07,810
whether the single user is allowed or

00:07:04,570 --> 00:07:10,300
not or whether the user who is the guest

00:07:07,810 --> 00:07:12,130
user like not a user of your

00:07:10,300 --> 00:07:14,560
organization but just like someone

00:07:12,130 --> 00:07:16,960
logging in with a gmail account can use

00:07:14,560 --> 00:07:18,910
Linux or not if it is an enterprise

00:07:16,960 --> 00:07:22,200
device if you buy a consumer device you

00:07:18,910 --> 00:07:25,230
can just use it and it's yours of course

00:07:22,200 --> 00:07:28,390
so things that we're working on and are

00:07:25,230 --> 00:07:29,860
you can already use in some cases but

00:07:28,390 --> 00:07:34,840
are not completely polished and finished

00:07:29,860 --> 00:07:39,250
our GPU integration which is useful even

00:07:34,840 --> 00:07:41,230
like a lot of tools for developing like

00:07:39,250 --> 00:07:44,020
have menus with might be slow otherwise

00:07:41,230 --> 00:07:46,290
and if you want you can play some games

00:07:44,020 --> 00:07:50,470
on it like you can do basically anything

00:07:46,290 --> 00:07:52,900
related to GPU full USB support for any

00:07:50,470 --> 00:07:54,490
sort of device I manage upgrade to

00:07:52,900 --> 00:07:59,430
bastard I mean Western we'll just

00:07:54,490 --> 00:08:04,510
released it used to install bus terminal

00:07:59,430 --> 00:08:07,960
anyway old stable or like previous table

00:08:04,510 --> 00:08:10,360
right and finally the full / forward in

00:08:07,960 --> 00:08:12,100
from outside is also something we're

00:08:10,360 --> 00:08:14,350
doing so the manager free to master

00:08:12,100 --> 00:08:16,480
basically is just going to look like you

00:08:14,350 --> 00:08:18,730
don't have to get in the container and

00:08:16,480 --> 00:08:20,650
know what to do after and so on you'll

00:08:18,730 --> 00:08:22,540
just get a screen saying hey you want

00:08:20,650 --> 00:08:26,440
upgrade to bastard it's time you click

00:08:22,540 --> 00:08:29,020
and hopefully everything will see so

00:08:26,440 --> 00:08:31,420
let's go a bit into how this is

00:08:29,020 --> 00:08:33,220
implemented and the insides because the

00:08:31,420 --> 00:08:35,590
previous part was just like a bunch of

00:08:33,220 --> 00:08:37,240
screenshots right so maybe a bit boring

00:08:35,590 --> 00:08:39,940
but hopefully this part is a bit more

00:08:37,240 --> 00:08:42,099
interesting so it's a bit of a

00:08:39,940 --> 00:08:45,160
matryoshka style we'll see that we're

00:08:42,099 --> 00:08:49,110
unlike VMs inside containers inside VMs

00:08:45,160 --> 00:08:51,970
inside containers and we'll also see why

00:08:49,110 --> 00:08:54,310
the general architecture is this one

00:08:51,970 --> 00:08:55,690
right so we have the normal Linux

00:08:54,310 --> 00:08:56,290
operating system which is Chrome OS

00:08:55,690 --> 00:08:59,769
right

00:08:56,290 --> 00:09:02,230
it runs Chrome and it runs this virtual

00:08:59,769 --> 00:09:04,630
machine manager which is based on KVM

00:09:02,230 --> 00:09:07,899
but replaces Linux with something called

00:09:04,630 --> 00:09:09,940
cross VM and we'll go into that on top

00:09:07,899 --> 00:09:13,089
of that we have a guest VM called

00:09:09,940 --> 00:09:17,680
termina where of course a guest kernel

00:09:13,089 --> 00:09:20,050
is run and via lxd we run debian inside

00:09:17,680 --> 00:09:22,660
an unprivileged container this is

00:09:20,050 --> 00:09:24,130
basically like full sandboxing and we'll

00:09:22,660 --> 00:09:26,500
see that cross VM is actually

00:09:24,130 --> 00:09:29,410
implemented with other containers under

00:09:26,500 --> 00:09:32,079
it so it's really containers he'll cross

00:09:29,410 --> 00:09:35,410
VM Linux Alex Lee and the container on

00:09:32,079 --> 00:09:38,410
top of it and this is done basically to

00:09:35,410 --> 00:09:40,829
guarantee that whatever happens inside

00:09:38,410 --> 00:09:45,130
the Debian system it will not affect

00:09:40,829 --> 00:09:47,500
chrome and the Linux outside so that you

00:09:45,130 --> 00:09:50,500
keep the security guarantees of Chrome

00:09:47,500 --> 00:09:53,949
OS intact even if you install something

00:09:50,500 --> 00:09:55,449
inside Debian that might be compromised

00:09:53,949 --> 00:09:57,699
we don't know exactly what happens where

00:09:55,449 --> 00:10:02,680
but we know that your chrome shouldn't

00:09:57,699 --> 00:10:06,759
be reached by there so let's go a bit

00:10:02,680 --> 00:10:09,189
inside cross VM right it's basically a

00:10:06,759 --> 00:10:13,800
replacement of kamo that is written in

00:10:09,189 --> 00:10:16,779
rust so that we have memory safety and

00:10:13,800 --> 00:10:20,170
the various device drivers that they

00:10:16,779 --> 00:10:22,839
have run inside a software called mini

00:10:20,170 --> 00:10:25,569
jail which is basically a container with

00:10:22,839 --> 00:10:29,829
Cisco filtering and access filtering and

00:10:25,569 --> 00:10:32,560
so on still like only Linux on Linux

00:10:29,829 --> 00:10:35,740
right and it was created originally just

00:10:32,560 --> 00:10:37,779
for Chrome OS but Amazon started using

00:10:35,740 --> 00:10:41,319
it on their cloud interestingly enough

00:10:37,779 --> 00:10:45,250
and now we have this common code base

00:10:41,319 --> 00:10:47,980
that we started at rust vmm which is

00:10:45,250 --> 00:10:50,860
basically like cross VM but with generic

00:10:47,980 --> 00:10:53,230
parts that are shared between the two of

00:10:50,860 --> 00:10:56,769
us right and if more people want to use

00:10:53,230 --> 00:10:59,470
it inside Debian to run this kind of

00:10:56,769 --> 00:11:02,019
architecture for other purposes very

00:10:59,470 --> 00:11:02,649
welcome to use the code it's all open

00:11:02,019 --> 00:11:05,259
source

00:11:02,649 --> 00:11:07,930
right so it's all free software feel

00:11:05,259 --> 00:11:11,829
free to use it contributed package it

00:11:07,930 --> 00:11:14,079
for Debian anything right so let's see a

00:11:11,829 --> 00:11:16,839
bit more how this works right so we have

00:11:14,079 --> 00:11:20,649
this cross VM process and cross VM

00:11:16,839 --> 00:11:23,439
process Forks a single process for each

00:11:20,649 --> 00:11:26,470
device it has two access and all these

00:11:23,439 --> 00:11:29,309
processes are jailed singularly to a

00:11:26,470 --> 00:11:33,069
container that can only access that

00:11:29,309 --> 00:11:34,629
single device so for example where the

00:11:33,069 --> 00:11:38,679
root filesystem right is exported

00:11:34,629 --> 00:11:42,309
through a file to a container that sees

00:11:38,679 --> 00:11:44,559
only that and there's a process that

00:11:42,309 --> 00:11:46,990
implements that device and gets accessed

00:11:44,559 --> 00:11:50,170
by the general across VM so it should be

00:11:46,990 --> 00:11:51,970
a tiny bit more insulated and secure

00:11:50,170 --> 00:11:55,029
that cam recording to our security

00:11:51,970 --> 00:11:57,790
people you can of course double check it

00:11:55,029 --> 00:12:00,129
and verify the security characteristics

00:11:57,790 --> 00:12:03,850
and see if it works for you and of

00:12:00,129 --> 00:12:05,499
course it's then a standard like a VM

00:12:03,850 --> 00:12:09,279
operating system servers and external

00:12:05,499 --> 00:12:12,249
write that calls into cross VM to access

00:12:09,279 --> 00:12:15,550
various devices right so very simple

00:12:12,249 --> 00:12:20,860
very standard kayvyun except that can

00:12:15,550 --> 00:12:24,519
replace by cross here other things that

00:12:20,860 --> 00:12:30,399
we did so on the host so inside Chrome

00:12:24,519 --> 00:12:33,579
OS we use Chrome to generally just draw

00:12:30,399 --> 00:12:36,279
Windows right so it's your window

00:12:33,579 --> 00:12:38,769
manager on the chrome side of course you

00:12:36,279 --> 00:12:41,050
don't run like X inside a window we

00:12:38,769 --> 00:12:42,970
wanted everything to work very

00:12:41,050 --> 00:12:45,970
transparently as part of the same

00:12:42,970 --> 00:12:48,040
operating system right then we have a

00:12:45,970 --> 00:12:51,579
way to manage the lifecycle of these VMs

00:12:48,040 --> 00:12:54,040
that we call concern and then we have a

00:12:51,579 --> 00:12:57,699
way to manage the containers that run

00:12:54,040 --> 00:12:58,899
into these VMs so what we saw here right

00:12:57,699 --> 00:13:00,850
is that we have them privileged

00:12:58,899 --> 00:13:02,860
containers in reality you can have as

00:13:00,850 --> 00:13:05,470
many of these as you want and there's

00:13:02,860 --> 00:13:08,060
many VMs as you want and we manage the

00:13:05,470 --> 00:13:12,209
lifecycle of box

00:13:08,060 --> 00:13:23,690
and then finally we export file system

00:13:12,209 --> 00:13:23,690
via 9p or via another demon that okay

00:13:23,839 --> 00:13:28,410
cool

00:13:25,110 --> 00:13:30,720
then let's go into this Linux VM we call

00:13:28,410 --> 00:13:33,510
it tool Mina it's basically another

00:13:30,720 --> 00:13:35,149
Chrome OS very slim down and stripped

00:13:33,510 --> 00:13:40,560
off pretty much anything

00:13:35,149 --> 00:13:43,680
runs Linux 419 and it is completely

00:13:40,560 --> 00:13:45,480
read-only so even if you get root in

00:13:43,680 --> 00:13:47,100
terminal you cannot go through the inter

00:13:45,480 --> 00:13:49,769
Mina you get like an unprivileged user

00:13:47,100 --> 00:13:52,829
there that can control lxd and a few

00:13:49,769 --> 00:13:54,269
things and termina is a complete

00:13:52,829 --> 00:13:59,430
read-only file system that cannot be

00:13:54,269 --> 00:14:02,160
changed and is just used to run a file

00:13:59,430 --> 00:14:07,620
that is read write that then contains

00:14:02,160 --> 00:14:09,300
the file system of your VM so there are

00:14:07,620 --> 00:14:10,680
some demons basically they are

00:14:09,300 --> 00:14:13,829
controlled by GRDC

00:14:10,680 --> 00:14:17,040
so from Chrome OS you talk to their Mina

00:14:13,829 --> 00:14:20,279
to do things to lxd you can use Alexa

00:14:17,040 --> 00:14:21,720
directly and we'll see that but in the

00:14:20,279 --> 00:14:25,260
normal case when you click through the

00:14:21,720 --> 00:14:27,660
menus to do things Chrome OS talk to

00:14:25,260 --> 00:14:35,550
these demons inside their Mina that

00:14:27,660 --> 00:14:38,310
start the containers that work inside in

00:14:35,550 --> 00:14:43,829
Debian we had also a couple of changes

00:14:38,310 --> 00:14:47,699
but it's literally just like two extra

00:14:43,829 --> 00:14:49,529
pieces of software right one is this

00:14:47,699 --> 00:14:53,610
Wayland compositor that will draw

00:14:49,529 --> 00:14:56,760
windows passing them on to the Chrome OS

00:14:53,610 --> 00:14:59,339
side and then we have a guest agent that

00:14:56,760 --> 00:15:02,640
is helpful for us to call in to it and

00:14:59,339 --> 00:15:04,170
for example it can install a DAB so that

00:15:02,640 --> 00:15:06,420
if you downloaded I mean Chrome OS and

00:15:04,170 --> 00:15:08,519
double-click on it to just send it to

00:15:06,420 --> 00:15:11,490
Christine and install it and all these

00:15:08,519 --> 00:15:12,930
kind of things right and this is what is

00:15:11,490 --> 00:15:15,329
going to be used for example for very

00:15:12,930 --> 00:15:16,260
upgrade right so Chrome OS will call

00:15:15,329 --> 00:15:18,569
into Garcon

00:15:16,260 --> 00:15:22,550
that will say you're a great time I'll

00:15:18,569 --> 00:15:22,550
upgrade to Buster I'm done

00:15:22,709 --> 00:15:28,870
and this is very similar to what you see

00:15:26,470 --> 00:15:30,430
basically in clown right so when you

00:15:28,870 --> 00:15:33,339
install cloudiness and all this and of

00:15:30,430 --> 00:15:35,980
stuff right then the cloud can control

00:15:33,339 --> 00:15:38,259
things inside the container same things

00:15:35,980 --> 00:15:43,990
here Chrome OS can control things inside

00:15:38,259 --> 00:15:46,839
the Debian system and that's pretty much

00:15:43,990 --> 00:15:50,050
it from how it works

00:15:46,839 --> 00:15:55,120
architecturally right now what we can do

00:15:50,050 --> 00:15:58,660
is try a small advanced usage type of

00:15:55,120 --> 00:16:00,129
thing in which we see a bit like for

00:15:58,660 --> 00:16:02,499
example how to run multiple containers

00:16:00,129 --> 00:16:05,110
and how to interact with the system in a

00:16:02,499 --> 00:16:08,379
way that is not the boring like click

00:16:05,110 --> 00:16:14,680
through and so on so let's see if it

00:16:08,379 --> 00:16:18,279
works otherwise there are slides so what

00:16:14,680 --> 00:16:21,610
I can do is I'm inside chrome now so if

00:16:18,279 --> 00:16:24,490
I just type ctrl T I access the chrome

00:16:21,610 --> 00:16:30,220
shell can you see enough or should I

00:16:24,490 --> 00:16:35,230
increase this phone okay how about now

00:16:30,220 --> 00:16:39,550
bit more okay cool so things we can do

00:16:35,230 --> 00:16:44,529
is just call for example VMC right and

00:16:39,550 --> 00:16:47,920
this just shows you like that we have

00:16:44,529 --> 00:16:51,009
one VM whole termina and these are the

00:16:47,920 --> 00:16:53,829
things that we can do to it the SH

00:16:51,009 --> 00:16:56,529
allows us to just come back to it so if

00:16:53,829 --> 00:16:58,089
I do SH to Romina now it either works or

00:16:56,529 --> 00:17:04,089
doesn't work it doesn't work because it

00:16:58,089 --> 00:17:10,390
was not started so I can do PMC start

00:17:04,089 --> 00:17:13,829
start I can enable GPU I think it's at

00:17:10,390 --> 00:17:13,829
this point in this version very much

00:17:16,339 --> 00:17:21,780
so I started now should be a relatively

00:17:18,929 --> 00:17:23,610
fast time I'm already inside but if it

00:17:21,780 --> 00:17:26,850
was already started in dubious nature

00:17:23,610 --> 00:17:29,760
meaner and I'm inside right at this

00:17:26,850 --> 00:17:32,250
point I'm just inside a Linux system I

00:17:29,760 --> 00:17:34,740
can type a Lexie right and do most

00:17:32,250 --> 00:17:37,740
things that I can actually get down here

00:17:34,740 --> 00:17:39,960
so Alexia list shows me what kind of

00:17:37,740 --> 00:17:42,330
machines I have I was playing with it a

00:17:39,960 --> 00:17:44,070
bit normally you would see just penguin

00:17:42,330 --> 00:17:47,460
penguin is the name of a debian

00:17:44,070 --> 00:17:49,020
container but at this point I was

00:17:47,460 --> 00:17:51,750
already playing with it so you see that

00:17:49,020 --> 00:17:56,970
I have another couple of machines that

00:17:51,750 --> 00:17:59,040
are all stopped so I could do Alexis our

00:17:56,970 --> 00:18:00,330
penguin but at the moment it stopped if

00:17:59,040 --> 00:18:03,240
I just click on the terminal as you

00:18:00,330 --> 00:18:10,110
start itself so there's no point let's

00:18:03,240 --> 00:18:11,820
see it here I'm inside and here now it's

00:18:10,110 --> 00:18:14,250
running right but if I want to start

00:18:11,820 --> 00:18:16,710
some other one I can just do a Lexie

00:18:14,250 --> 00:18:21,870
start or a taxi launch and an image

00:18:16,710 --> 00:18:23,580
right and you have a pretty much

00:18:21,870 --> 00:18:25,620
completely Lexie installation right so

00:18:23,580 --> 00:18:27,150
you can see these are very remote lists

00:18:25,620 --> 00:18:29,730
these are the ones that are very by

00:18:27,150 --> 00:18:32,070
default where's the local one pretty

00:18:29,730 --> 00:18:34,020
empty and there's images that just is

00:18:32,070 --> 00:18:37,440
like anything with is only no containers

00:18:34,020 --> 00:18:44,299
dot-org so that's what I where I got my

00:18:37,440 --> 00:18:54,110
images from right so let's try these

00:18:44,299 --> 00:18:54,110
images for if I remember syntax

00:19:02,570 --> 00:19:10,100
so here I will see all the amd64

00:19:04,760 --> 00:19:16,240
Debian's right like few of them and then

00:19:10,100 --> 00:19:16,240
I can easily go let's see which copy

00:19:16,600 --> 00:19:33,050
images and then it should be super fast

00:19:31,730 --> 00:19:34,580
because I copied it before because

00:19:33,050 --> 00:19:42,710
otherwise we would stare at it

00:19:34,580 --> 00:19:44,330
downloading it for a while yeah copied

00:19:42,710 --> 00:19:48,560
successfully because it was already

00:19:44,330 --> 00:19:51,500
company before I mean it works like but

00:19:48,560 --> 00:19:55,910
you know otherwise these stairs with

00:19:51,500 --> 00:20:01,640
downloader cool so once we have them

00:19:55,910 --> 00:20:03,140
right we have it here in local right and

00:20:01,640 --> 00:20:04,210
then I can launch a completely new one

00:20:03,140 --> 00:20:14,260
right so if I do

00:20:04,210 --> 00:20:16,610
Aleksey launch debian 10 master - I

00:20:14,260 --> 00:20:20,750
didn't have a pastor - before this well

00:20:16,610 --> 00:20:24,790
it's creating it starting done and at

00:20:20,750 --> 00:20:24,790
this point I can do well let's see exact

00:20:27,010 --> 00:20:35,480
Bosch I'm rooting sorry Victor

00:20:31,660 --> 00:20:38,470
and at this point I haven't any investor

00:20:35,480 --> 00:20:43,610
inside it again the Thunder penguin is

00:20:38,470 --> 00:20:52,780
bastard - one stretch thank you thank

00:20:43,610 --> 00:20:52,780
you it's just a standard 1x table so

00:20:55,140 --> 00:21:07,860
it's just try early stopping in the sage

00:20:59,370 --> 00:21:11,340
server why not because I don't want to

00:21:07,860 --> 00:21:14,390
keep of course accessing it beyond exact

00:21:11,340 --> 00:21:14,390
call inside

00:21:25,270 --> 00:21:30,050
but I mean already here in the meantime

00:21:27,680 --> 00:21:32,750
world installs I should be able to

00:21:30,050 --> 00:21:34,730
access already after - right and then if

00:21:32,750 --> 00:21:39,640
it installs I should be able to SSH it

00:21:34,730 --> 00:21:39,640
after I configure it very improperly

00:21:51,310 --> 00:22:00,640
okay it's done so change the password

00:21:56,260 --> 00:22:01,900
for wrote to something unsecure it's not

00:22:00,640 --> 00:22:03,670
scolding me interesting

00:22:01,900 --> 00:22:10,810
the average solution I was using was

00:22:03,670 --> 00:22:12,100
scolding last time I did this demo I use

00:22:10,810 --> 00:22:13,690
it with another one because master was

00:22:12,100 --> 00:22:15,190
not out so there was not much point in

00:22:13,690 --> 00:22:16,360
installing another debian since that

00:22:15,190 --> 00:22:20,370
bean is the one that it gives you by

00:22:16,360 --> 00:22:20,370
default but now

00:22:42,580 --> 00:22:48,010
of course we should just like you know

00:22:45,240 --> 00:22:51,990
on camera do all the things that we

00:22:48,010 --> 00:22:51,990
shouldn't be doing yes

00:23:00,950 --> 00:23:07,270
I'm sure they should have used some

00:23:02,860 --> 00:23:07,270
system D command to do this sorry

00:23:12,809 --> 00:23:22,770
of course it's just anything cool

00:23:23,600 --> 00:23:27,080
so now I can access it from my normal

00:23:25,309 --> 00:23:29,960
container and this is my normal

00:23:27,080 --> 00:23:31,489
container reader I can install all the

00:23:29,960 --> 00:23:34,519
applications and have them showing

00:23:31,489 --> 00:23:38,929
Chrome OS other ones you can do like I

00:23:34,519 --> 00:23:41,359
guess mostly useful for non graphical

00:23:38,929 --> 00:23:43,279
stuff if well if you want to run graphic

00:23:41,359 --> 00:23:45,649
ups the best place is really the

00:23:43,279 --> 00:23:49,129
standard container that we give you that

00:23:45,649 --> 00:23:51,679
one is fully integrated and so on in

00:23:49,129 --> 00:23:53,119
theory you can swap them around as well

00:23:51,679 --> 00:23:54,859
so if you're a named penguin to

00:23:53,119 --> 00:23:57,349
something else then you can rename

00:23:54,859 --> 00:23:59,269
master zero to penguin and then it will

00:23:57,349 --> 00:24:03,379
act as with Thunder container

00:23:59,269 --> 00:24:07,999
you should probably if you do that try

00:24:03,379 --> 00:24:10,099
to make sure that all the various demos

00:24:07,999 --> 00:24:12,739
are installed inside it so that it can

00:24:10,099 --> 00:24:15,739
communicate with it it can get your apps

00:24:12,739 --> 00:24:20,479
from that container and so on and I

00:24:15,739 --> 00:24:24,769
think that's pretty much it that's what

00:24:20,479 --> 00:24:34,359
I wanted to cover thank you you have

00:24:24,769 --> 00:24:34,359
questions any questions

00:24:39,250 --> 00:24:46,630
ask me something that I cannot answer

00:24:42,659 --> 00:24:52,450
ipv6 support for the guests ipv6 support

00:24:46,630 --> 00:25:06,669
I think so yeah I mean it's 3019 we can

00:24:52,450 --> 00:25:11,669
check I'm pretty sure yeah yeah I mean

00:25:06,669 --> 00:25:11,669
maybe it's just not nothing tired

00:25:21,590 --> 00:25:28,070
I'm just wondering how deep did you went

00:25:24,980 --> 00:25:30,410
because you have Chrome OS then you have

00:25:28,070 --> 00:25:34,280
this terminal then you run something and

00:25:30,410 --> 00:25:38,630
then you run this a taxi so I've got

00:25:34,280 --> 00:25:44,750
lost in this inception okay I can go

00:25:38,630 --> 00:25:49,250
through it again right so inside Chrome

00:25:44,750 --> 00:25:51,370
OS we are run basically one KVM instance

00:25:49,250 --> 00:25:54,440
right that runs one virtual machine

00:25:51,370 --> 00:25:58,220
inside that when we run an unprivileged

00:25:54,440 --> 00:26:01,940
container that is what you can access

00:25:58,220 --> 00:26:06,370
and read write install applications and

00:26:01,940 --> 00:26:10,070
so on I went a bit more in details about

00:26:06,370 --> 00:26:12,470
how this hypervisor layer is implemented

00:26:10,070 --> 00:26:13,430
but you don't need to care about it too

00:26:12,470 --> 00:26:15,080
much

00:26:13,430 --> 00:26:18,140
unless you're interested in the

00:26:15,080 --> 00:26:20,420
hypervisor layer per se so it is

00:26:18,140 --> 00:26:22,520
basically an unprivileged container but

00:26:20,420 --> 00:26:24,980
instead of running directly on Chrome OS

00:26:22,520 --> 00:26:28,130
it runs inside the virtual machine right

00:26:24,980 --> 00:26:29,840
that's that's how deep we work then the

00:26:28,130 --> 00:26:32,510
security layer of a little machines

00:26:29,840 --> 00:26:34,910
includes other containers for each

00:26:32,510 --> 00:26:40,990
device driver but you don't need to see

00:26:34,910 --> 00:26:40,990
that or care about that clear yes

00:26:45,300 --> 00:26:48,530
other questions

00:26:52,460 --> 00:26:58,050
all right thank you very very much it

00:26:55,980 --> 00:27:00,360
was a pleasure to be here this is my

00:26:58,050 --> 00:27:04,520
favorite conference I'll see you again

00:27:00,360 --> 00:27:04,520

YouTube URL: https://www.youtube.com/watch?v=U-pnuG5PLfA


