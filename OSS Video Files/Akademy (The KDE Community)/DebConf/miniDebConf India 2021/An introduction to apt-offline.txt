Title: An introduction to apt-offline
Publication date: 2021-03-20
Playlist: miniDebConf India 2021
Description: 
	by Ritesh Raj Sarraf

At: MiniDebConf India 2021
https://in2021.mini.debconf.org/talks/3-an-introduction-to-apt-offline/

apt-offline is an Offline APT Package Manager.
 .
 apt-offline can fully update and upgrade an APT based distribution without
 connecting to the network, all of it transparent to APT.
 .
 apt-offline can be used to generate a signature on a machine (with no network).
 This signature contains all download information required for the APT database
 system. This signature file can be used on another machine connected to the
 internet (which need not be a Debian box and can even be running windows) to
 download the updates.
 The downloaded data will contain all updates in a format understood by APT and
 this data can be used by apt-offline to update the non-networked machine.
 .
 apt-offline can also fetch bug reports and make them available offline.

Room: Buzz
Scheduled start: 2021-01-23 11:30:00
Captions: 
	00:00:05,600 --> 00:00:10,160
hey everyone

00:00:07,040 --> 00:00:12,000
i am excited as you all are now we are

00:00:10,160 --> 00:00:15,679
having our first talk

00:00:12,000 --> 00:00:20,000
on minidupcon in the room refresh

00:00:15,679 --> 00:00:23,519
and we have raj here he's an avid linux

00:00:20,000 --> 00:00:26,000
professional and a consultant and

00:00:23,519 --> 00:00:27,359
he's been involved with the free

00:00:26,000 --> 00:00:30,800
software

00:00:27,359 --> 00:00:34,239
somewhere around since 1998

00:00:30,800 --> 00:00:37,280
and he has a website of his own

00:00:34,239 --> 00:00:37,280
research and

00:00:37,440 --> 00:00:42,160
he's been a debian developer since

00:00:39,680 --> 00:00:42,160
around

00:00:42,840 --> 00:00:47,920
00:00:44,719 --> 00:00:50,090
now we have him uh giving a talk and on

00:00:47,920 --> 00:00:53,179
an introduction to apt offline

00:00:50,090 --> 00:00:53,179
[Music]

00:00:54,239 --> 00:01:00,160
with this i hand over to

00:00:57,440 --> 00:01:00,160
ripesh raj

00:01:02,000 --> 00:01:08,880
hello and welcome to minidepconf india

00:01:05,199 --> 00:01:13,680
2021 this talk is about apt offline

00:01:08,880 --> 00:01:16,799
and offline update manager for apt

00:01:13,680 --> 00:01:19,840
in this talk i intend to give a

00:01:16,799 --> 00:01:22,240
brief background about apt offline

00:01:19,840 --> 00:01:24,720
i also intend to talk about uh the

00:01:22,240 --> 00:01:27,759
operating modes for apt offline

00:01:24,720 --> 00:01:30,000
what the different concepts are

00:01:27,759 --> 00:01:31,040
and some of the additional features that

00:01:30,000 --> 00:01:33,840
are available

00:01:31,040 --> 00:01:36,240
in knapped offline a brief introduction

00:01:33,840 --> 00:01:39,920
about me my name is ritesh

00:01:36,240 --> 00:01:41,439
i have been involved in linux in general

00:01:39,920 --> 00:01:44,880
somewhere around 98

00:01:41,439 --> 00:01:46,960
or 99 i got introduced to

00:01:44,880 --> 00:01:49,119
debian somewhere around 2002 which is

00:01:46,960 --> 00:01:52,799
when i started using it

00:01:49,119 --> 00:01:57,600
and by around 2010 i

00:01:52,799 --> 00:02:00,079
became a debian developer i'm very

00:01:57,600 --> 00:02:03,759
proud to be part of the debian project

00:02:00,079 --> 00:02:06,560
the debian project is something really

00:02:03,759 --> 00:02:08,239
amazes me for the the structure it has

00:02:06,560 --> 00:02:10,640
the policy it has

00:02:08,239 --> 00:02:14,160
the qa process in place it has and the

00:02:10,640 --> 00:02:16,239
meritocracy based system that it has

00:02:14,160 --> 00:02:17,280
on the professional front i am a

00:02:16,239 --> 00:02:23,840
consultant

00:02:17,280 --> 00:02:23,840
i work as a consultant for collaboration

00:02:25,200 --> 00:02:28,720
i work in the core technology group

00:02:27,680 --> 00:02:31,760
where we focus

00:02:28,720 --> 00:02:33,599
on custom solutions based on linux and

00:02:31,760 --> 00:02:37,840
debian in particular

00:02:33,599 --> 00:02:37,840
for a wide range of clients we have

00:02:39,920 --> 00:02:46,400
a brief history about appt offline what

00:02:43,360 --> 00:02:50,480
led to the creation of this

00:02:46,400 --> 00:02:52,720
software basically somewhere around 2004

00:02:50,480 --> 00:02:55,760
00:02:52,720 --> 00:02:56,560
my then employer had a corporate id

00:02:55,760 --> 00:02:59,680
policy which

00:02:56,560 --> 00:03:01,840
mandated only the use of microsoft

00:02:59,680 --> 00:03:05,200
windows machines

00:03:01,840 --> 00:03:08,239
but at home i had a debian box and i

00:03:05,200 --> 00:03:09,840
wanted to keep it up to date without too

00:03:08,239 --> 00:03:12,959
much of hassle

00:03:09,840 --> 00:03:15,760
basically i wanted to make use of aft of

00:03:12,959 --> 00:03:17,440
the apt package management system but

00:03:15,760 --> 00:03:20,239
apt was designed

00:03:17,440 --> 00:03:21,599
with an assumption that network would be

00:03:20,239 --> 00:03:23,599
available

00:03:21,599 --> 00:03:24,720
on all the systems which is not clearly

00:03:23,599 --> 00:03:27,760
not the case

00:03:24,720 --> 00:03:30,640
for me where at home and at work

00:03:27,760 --> 00:03:32,159
i was by corporate id policy i was

00:03:30,640 --> 00:03:35,120
required to use windows

00:03:32,159 --> 00:03:37,200
so i thought of finding a way to bridge

00:03:35,120 --> 00:03:39,200
the cap

00:03:37,200 --> 00:03:40,799
to update machines which are not

00:03:39,200 --> 00:03:43,599
connected to the network

00:03:40,799 --> 00:03:45,040
so that was the primary intent i also

00:03:43,599 --> 00:03:47,360
thought about

00:03:45,040 --> 00:03:49,599
a lot of countries where internet is not

00:03:47,360 --> 00:03:52,640
a commodity yet

00:03:49,599 --> 00:03:55,680
and where it is difficult for for people

00:03:52,640 --> 00:03:58,400
and where people usually would only have

00:03:55,680 --> 00:03:59,760
limited time going to a cyber cafe or at

00:03:58,400 --> 00:04:02,080
a workplace

00:03:59,760 --> 00:04:04,159
with limited internet connectivity over

00:04:02,080 --> 00:04:06,720
the years i realized

00:04:04,159 --> 00:04:08,720
that there were multiple additional use

00:04:06,720 --> 00:04:11,920
cases that developed

00:04:08,720 --> 00:04:13,040
i got multiple reports from apt offline

00:04:11,920 --> 00:04:14,959
users

00:04:13,040 --> 00:04:17,040
who use it for different cases like

00:04:14,959 --> 00:04:18,320
security and privacy and isolated

00:04:17,040 --> 00:04:20,239
networks wherein like

00:04:18,320 --> 00:04:21,600
military organizations or banking

00:04:20,239 --> 00:04:23,680
organizations or

00:04:21,600 --> 00:04:28,639
people who wanted to keep their networks

00:04:23,680 --> 00:04:32,160
completely isolated

00:04:28,639 --> 00:04:33,600
in app offline we have three modes of

00:04:32,160 --> 00:04:36,960
operation

00:04:33,600 --> 00:04:40,000
which are run on two different machines

00:04:36,960 --> 00:04:42,960
there is the set mode the get

00:04:40,000 --> 00:04:44,800
mode and the install mode of which set

00:04:42,960 --> 00:04:45,680
and install are run on the offline

00:04:44,800 --> 00:04:47,680
machine

00:04:45,680 --> 00:04:49,600
whereas get can be run on any machine

00:04:47,680 --> 00:04:52,479
which has a network

00:04:49,600 --> 00:04:53,919
a set has to be run on an offline

00:04:52,479 --> 00:04:57,120
machine running debian

00:04:53,919 --> 00:04:59,199
or debian derivative which is where

00:04:57,120 --> 00:05:01,199
you when using the set operation you

00:04:59,199 --> 00:05:04,400
generate a signature

00:05:01,199 --> 00:05:06,080
of the work that you intend to do

00:05:04,400 --> 00:05:09,199
a work would be something like you want

00:05:06,080 --> 00:05:12,880
to update the apt database

00:05:09,199 --> 00:05:15,520
you want to do an upgrade of of your

00:05:12,880 --> 00:05:17,680
debian distribution something equivalent

00:05:15,520 --> 00:05:17,680
to

00:05:17,840 --> 00:05:22,160
apt upgrade or you want to install a

00:05:21,440 --> 00:05:25,360
package and

00:05:22,160 --> 00:05:28,400
anything like that the get operation

00:05:25,360 --> 00:05:30,000
is uh what actually does the job of

00:05:28,400 --> 00:05:32,000
getting the actual payload that is

00:05:30,000 --> 00:05:35,440
required on the offline machine

00:05:32,000 --> 00:05:38,000
so get can be run on any machine

00:05:35,440 --> 00:05:40,000
out there which has a network it doesn't

00:05:38,000 --> 00:05:43,039
have to be running a linux machine

00:05:40,000 --> 00:05:46,000
uh apt offline has been tested well

00:05:43,039 --> 00:05:47,199
on microsoft windows mac os and

00:05:46,000 --> 00:05:50,240
obviously linux

00:05:47,199 --> 00:05:53,120
the core requirement is that the python

00:05:50,240 --> 00:05:55,919
interpreter needs to be available on the

00:05:53,120 --> 00:05:55,919
online machine

00:05:56,880 --> 00:06:01,680
same is for install once you get the

00:05:58,960 --> 00:06:03,360
data you install it back

00:06:01,680 --> 00:06:05,600
on the offline machine with the install

00:06:03,360 --> 00:06:08,080
command i'll talk more about

00:06:05,600 --> 00:06:10,560
each of these operations in detail in

00:06:08,080 --> 00:06:12,960
the next slides

00:06:10,560 --> 00:06:14,960
so as i said set is run on the offline

00:06:12,960 --> 00:06:16,800
machine its intent is to

00:06:14,960 --> 00:06:18,560
extract all the information that is

00:06:16,800 --> 00:06:21,680
requested by the user

00:06:18,560 --> 00:06:24,080
and generate it into a signature file

00:06:21,680 --> 00:06:25,680
that is what the term we call it in

00:06:24,080 --> 00:06:28,560
offline terminology

00:06:25,680 --> 00:06:30,000
it supports multiple options like i said

00:06:28,560 --> 00:06:32,639
you could use the

00:06:30,000 --> 00:06:35,520
update option if you want to update the

00:06:32,639 --> 00:06:38,080
apt database on the offline machine

00:06:35,520 --> 00:06:39,199
you could use the upgrade option if you

00:06:38,080 --> 00:06:42,319
want to

00:06:39,199 --> 00:06:42,880
upgrade the list of installed packages

00:06:42,319 --> 00:06:44,800
on your

00:06:42,880 --> 00:06:46,800
offline machine something like app

00:06:44,800 --> 00:06:49,039
upgrade

00:06:46,800 --> 00:06:51,520
you could also install new packages on

00:06:49,039 --> 00:06:54,319
the offline machine

00:06:51,520 --> 00:06:55,759
using the install packages option which

00:06:54,319 --> 00:06:59,520
is something like

00:06:55,759 --> 00:07:02,560
apt install a package name

00:06:59,520 --> 00:07:05,440
there's also some feature for

00:07:02,560 --> 00:07:07,360
developers who may want to play around

00:07:05,440 --> 00:07:07,919
with source packages so in that case you

00:07:07,360 --> 00:07:10,720
can also

00:07:07,919 --> 00:07:12,240
ask apt offline to install a source

00:07:10,720 --> 00:07:13,440
package and it will generate the

00:07:12,240 --> 00:07:16,800
necessary

00:07:13,440 --> 00:07:18,240
information it also has a build up

00:07:16,800 --> 00:07:20,720
option

00:07:18,240 --> 00:07:22,000
which basically is the equivalent of apt

00:07:20,720 --> 00:07:25,120
build a package name

00:07:22,000 --> 00:07:27,840
in which case the entire build

00:07:25,120 --> 00:07:31,280
dependency for the requested package

00:07:27,840 --> 00:07:34,080
is also made available and lastly

00:07:31,280 --> 00:07:35,280
there is a generate change log option uh

00:07:34,080 --> 00:07:38,639
it basically which is

00:07:35,280 --> 00:07:39,599
uh used uh together with the upgrade

00:07:38,639 --> 00:07:42,639
option

00:07:39,599 --> 00:07:45,840
uh where in if you have a package like

00:07:42,639 --> 00:07:47,840
bash and it is going to be upgraded from

00:07:45,840 --> 00:07:50,000
version five to version six

00:07:47,840 --> 00:07:51,120
then gen if you give the generate change

00:07:50,000 --> 00:07:55,120
log option

00:07:51,120 --> 00:07:57,759
um it will uh app offline will also

00:07:55,120 --> 00:07:59,360
extract and generate a change log for

00:07:57,759 --> 00:08:03,759
you to

00:07:59,360 --> 00:08:03,759
assess before you act on it

00:08:04,960 --> 00:08:10,560
the get operation is supposed to be run

00:08:08,000 --> 00:08:11,120
on the machine with network like i said

00:08:10,560 --> 00:08:14,240
earlier

00:08:11,120 --> 00:08:15,919
get operation can be run on any machine

00:08:14,240 --> 00:08:18,639
it doesn't have to be a linux

00:08:15,919 --> 00:08:20,240
box in fact in my use cases when i

00:08:18,639 --> 00:08:22,240
initially designed it i used to run the

00:08:20,240 --> 00:08:23,520
gate operation mostly on windows because

00:08:22,240 --> 00:08:25,599
that is what my

00:08:23,520 --> 00:08:26,879
i had access to with an internet

00:08:25,599 --> 00:08:28,879
connection

00:08:26,879 --> 00:08:30,720
uh there are a couple of options in get

00:08:28,879 --> 00:08:32,959
like you can

00:08:30,720 --> 00:08:36,640
define whether you want where you want

00:08:32,959 --> 00:08:36,640
to download the payload

00:08:38,399 --> 00:08:43,440
whether it's it's to a directory or

00:08:41,519 --> 00:08:45,040
you could also instead for simplicity

00:08:43,440 --> 00:08:48,320
use the bundle option

00:08:45,040 --> 00:08:51,360
wherein you provide a file name

00:08:48,320 --> 00:08:53,600
instead something like download.zip

00:08:51,360 --> 00:08:55,360
and apt-offline would download all the

00:08:53,600 --> 00:09:00,080
data

00:08:55,360 --> 00:09:03,680
and create it into a zip archive file

00:09:00,080 --> 00:09:04,399
for simplicity reasons there's also the

00:09:03,680 --> 00:09:08,000
cachedia

00:09:04,399 --> 00:09:10,560
option which basically is about

00:09:08,000 --> 00:09:11,440
if you have already have a machine which

00:09:10,560 --> 00:09:13,519
has

00:09:11,440 --> 00:09:14,720
uh which may have a large number of

00:09:13,519 --> 00:09:17,279
packages

00:09:14,720 --> 00:09:19,519
uh pre-downloaded and then you in that

00:09:17,279 --> 00:09:20,880
case you can pass the cachedial option

00:09:19,519 --> 00:09:23,440
with the directory

00:09:20,880 --> 00:09:25,120
and apt offline will look at the

00:09:23,440 --> 00:09:27,600
directory to see if the

00:09:25,120 --> 00:09:29,360
package that it intends to download is

00:09:27,600 --> 00:09:31,440
already available in the cache

00:09:29,360 --> 00:09:33,920
and do some validation to see if the

00:09:31,440 --> 00:09:36,800
package is intact and

00:09:33,920 --> 00:09:38,399
if it is it would skip the download

00:09:36,800 --> 00:09:41,440
there's also the bug reports

00:09:38,399 --> 00:09:44,959
option which fills the gap

00:09:41,440 --> 00:09:48,480
for making the bug reports available

00:09:44,959 --> 00:09:51,760
for the requested package this is good

00:09:48,480 --> 00:09:53,920
in cases where you request for a package

00:09:51,760 --> 00:09:55,279
and the package gets downloaded and you

00:09:53,920 --> 00:09:56,880
bring it to the offline machine but

00:09:55,279 --> 00:10:00,399
before you want to

00:09:56,880 --> 00:10:03,440
you go about installing it you get a

00:10:00,399 --> 00:10:05,279
good list of all the packages sorry all

00:10:03,440 --> 00:10:06,880
a good list of all the bug reports

00:10:05,279 --> 00:10:08,959
against the package that you are trying

00:10:06,880 --> 00:10:11,680
to install and see

00:10:08,959 --> 00:10:14,000
if any of the bug reports uh is

00:10:11,680 --> 00:10:15,920
something which is serious to you

00:10:14,000 --> 00:10:17,360
the other two options are very basic one

00:10:15,920 --> 00:10:19,200
is for proxy support

00:10:17,360 --> 00:10:21,360
and the other is for if you have a

00:10:19,200 --> 00:10:24,000
remote api repository which has

00:10:21,360 --> 00:10:25,360
uh http basic auth so app offline can

00:10:24,000 --> 00:10:28,399
even work for in

00:10:25,360 --> 00:10:28,399
in such scenarios

00:10:29,680 --> 00:10:34,560
the uh last operating mode for apt

00:10:33,440 --> 00:10:37,360
offline is the

00:10:34,560 --> 00:10:38,079
install uh operation mode which

00:10:37,360 --> 00:10:40,560
basically

00:10:38,079 --> 00:10:41,360
is about installing the downloaded

00:10:40,560 --> 00:10:43,760
downloaded

00:10:41,360 --> 00:10:45,040
payload onto the offline machine so once

00:10:43,760 --> 00:10:48,160
you have the

00:10:45,040 --> 00:10:50,800
get operation complete and a

00:10:48,160 --> 00:10:53,279
zip archive file or a directory where

00:10:50,800 --> 00:10:55,680
all your data is

00:10:53,279 --> 00:10:57,200
downloaded then you can take it back

00:10:55,680 --> 00:10:58,959
onto your offline machine

00:10:57,200 --> 00:11:01,760
and then use the apt offline install

00:10:58,959 --> 00:11:04,880
command to

00:11:01,760 --> 00:11:06,720
install that those downloaded data

00:11:04,880 --> 00:11:08,640
it has a couple of interesting options

00:11:06,720 --> 00:11:12,160
one is install source path

00:11:08,640 --> 00:11:15,120
in case you downloaded

00:11:12,160 --> 00:11:15,680
source packages and you would like to

00:11:15,120 --> 00:11:18,320
install

00:11:15,680 --> 00:11:22,399
it to a custom location you could

00:11:18,320 --> 00:11:24,399
specify it using the install source path

00:11:22,399 --> 00:11:26,240
like i mentioned earlier about change

00:11:24,399 --> 00:11:28,399
login bug reports

00:11:26,240 --> 00:11:30,800
these are options the skip change log

00:11:28,399 --> 00:11:33,680
and skip bug reports options are useful

00:11:30,800 --> 00:11:35,120
if you are using apt offline in in

00:11:33,680 --> 00:11:37,120
scripted mode

00:11:35,120 --> 00:11:39,200
wherein you don't want to look at the

00:11:37,120 --> 00:11:42,320
change log or the bug reports but rather

00:11:39,200 --> 00:11:44,480
just proceed so you can skip them

00:11:42,320 --> 00:11:45,600
even though you may have downloaded it

00:11:44,480 --> 00:11:49,360
last

00:11:45,600 --> 00:11:52,399
is the allow unauthentic

00:11:49,360 --> 00:11:54,160
authenticated option this is something i

00:11:52,399 --> 00:11:56,560
wouldn't encourage to use

00:11:54,160 --> 00:11:59,440
but if you have scenarios where you

00:11:56,560 --> 00:12:02,880
don't want apt offline to do the

00:11:59,440 --> 00:12:06,560
apt keyings

00:12:02,880 --> 00:12:09,360
gpg signature validation

00:12:06,560 --> 00:12:10,079
so in that case you can instruct offline

00:12:09,360 --> 00:12:13,760
to

00:12:10,079 --> 00:12:16,720
not validate it and just bypass the

00:12:13,760 --> 00:12:17,760
authentication but this option is

00:12:16,720 --> 00:12:19,600
something i wouldn't

00:12:17,760 --> 00:12:21,920
recommend so it is disabled by default

00:12:19,600 --> 00:12:24,959
but if there is a use case you need it

00:12:21,920 --> 00:12:27,040
you can use it the at

00:12:24,959 --> 00:12:28,480
a higher level these are the uh three

00:12:27,040 --> 00:12:32,160
modes of operation for

00:12:28,480 --> 00:12:35,200
app offline set get and install

00:12:32,160 --> 00:12:36,399
set and install are to be run on the

00:12:35,200 --> 00:12:39,600
offline machine

00:12:36,399 --> 00:12:43,760
and the get operation has to be run on a

00:12:39,600 --> 00:12:43,760
machine with the network connection

00:12:44,240 --> 00:12:47,279
some of the additional features that

00:12:46,320 --> 00:12:50,399
were added to

00:12:47,279 --> 00:12:52,320
apt offline over over time are a

00:12:50,399 --> 00:12:54,079
graphical user interface which i'll talk

00:12:52,320 --> 00:12:55,760
about in the next slides

00:12:54,079 --> 00:12:57,440
offline bug reports as i already

00:12:55,760 --> 00:12:59,279
mentioned in

00:12:57,440 --> 00:13:01,760
in the options that i was explaining

00:12:59,279 --> 00:13:04,240
earlier and the change log feature

00:13:01,760 --> 00:13:06,160
uh both offline bug reports and change

00:13:04,240 --> 00:13:09,200
log are useful

00:13:06,160 --> 00:13:09,920
to make an assessment on the package you

00:13:09,200 --> 00:13:13,200
are

00:13:09,920 --> 00:13:13,920
installing or upgrading to to have a

00:13:13,200 --> 00:13:15,760
view of what

00:13:13,920 --> 00:13:18,320
issues they may have and or what changes

00:13:15,760 --> 00:13:21,839
they bring in

00:13:18,320 --> 00:13:23,920
this is the primary user interface for

00:13:21,839 --> 00:13:26,240
uh app offline this is the main

00:13:23,920 --> 00:13:29,200
application window as i was saying

00:13:26,240 --> 00:13:29,839
uh the app offline has three modes of

00:13:29,200 --> 00:13:32,480
operations

00:13:29,839 --> 00:13:33,040
set get and install the equivalent of it

00:13:32,480 --> 00:13:36,720
in

00:13:33,040 --> 00:13:40,000
in the graphical interface is set equal

00:13:36,720 --> 00:13:41,120
equals to generate signature uh get

00:13:40,000 --> 00:13:44,639
equals to

00:13:41,120 --> 00:13:46,480
uh downloading packages or updates

00:13:44,639 --> 00:13:48,079
and install equals to installing

00:13:46,480 --> 00:13:50,480
packages or updates

00:13:48,079 --> 00:13:52,160
i'll run through the individual

00:13:50,480 --> 00:13:55,440
application window for each of those

00:13:52,160 --> 00:13:57,839
operations so in case of set

00:13:55,440 --> 00:13:59,760
or generate signature you have the

00:13:57,839 --> 00:14:02,160
installation type where you can say that

00:13:59,760 --> 00:14:03,920
you want to do an update or you want to

00:14:02,160 --> 00:14:06,959
do

00:14:03,920 --> 00:14:08,800
upgrade of the packages or you want to

00:14:06,959 --> 00:14:10,000
install binary packages or source

00:14:08,800 --> 00:14:12,480
packages and

00:14:10,000 --> 00:14:14,480
depending on the options you choose the

00:14:12,480 --> 00:14:16,880
other options would

00:14:14,480 --> 00:14:20,000
get enabled accordingly like source

00:14:16,880 --> 00:14:24,399
build dependencies change log

00:14:20,000 --> 00:14:24,880
and all that and you can also specify

00:14:24,399 --> 00:14:28,160
the

00:14:24,880 --> 00:14:28,880
uh the signature type on where you want

00:14:28,160 --> 00:14:32,800
to

00:14:28,880 --> 00:14:35,279
uh save it for the get operation

00:14:32,800 --> 00:14:36,880
it's a familiar window where you specify

00:14:35,279 --> 00:14:38,320
where your signature file is and then

00:14:36,880 --> 00:14:41,680
you specify where

00:14:38,320 --> 00:14:43,920
you'd like to save your data like i said

00:14:41,680 --> 00:14:45,760
earlier the get operation supports both

00:14:43,920 --> 00:14:48,720
a directory and a simple

00:14:45,760 --> 00:14:49,519
bundle uh zip archive so in case you you

00:14:48,720 --> 00:14:52,320
are

00:14:49,519 --> 00:14:53,920
specifying a directory uh it's better to

00:14:52,320 --> 00:14:57,519
check the is directory box

00:14:53,920 --> 00:15:00,240
to instruct that it's a it's a direct

00:14:57,519 --> 00:15:03,600
the path is a directory

00:15:00,240 --> 00:15:03,920
um there are more sub windows in it like

00:15:03,600 --> 00:15:06,079
the

00:15:03,920 --> 00:15:07,360
options window which i'll not get into

00:15:06,079 --> 00:15:10,480
in in this talk

00:15:07,360 --> 00:15:11,519
but uh you're encouraged to uh try out

00:15:10,480 --> 00:15:14,880
offline gui

00:15:11,519 --> 00:15:18,079
and go through all the available

00:15:14,880 --> 00:15:20,880
features in case of

00:15:18,079 --> 00:15:22,720
the install operation which is about

00:15:20,880 --> 00:15:26,240
installing packages

00:15:22,720 --> 00:15:29,519
you specify the path or a folder

00:15:26,240 --> 00:15:31,440
as i said earlier and then before you

00:15:29,519 --> 00:15:33,839
click on install you can look at the bug

00:15:31,440 --> 00:15:37,120
reports and the change log

00:15:33,839 --> 00:15:39,839
and as such these are the main three

00:15:37,120 --> 00:15:41,040
major operations of apt offline now

00:15:39,839 --> 00:15:44,320
we'll move next to

00:15:41,040 --> 00:15:47,440
the debug reports and the change log

00:15:44,320 --> 00:15:50,320
window interface this is what

00:15:47,440 --> 00:15:53,600
offline bug reports window looks like

00:15:50,320 --> 00:15:55,519
this is a live example of

00:15:53,600 --> 00:15:56,959
bug reports that i extracted today for

00:15:55,519 --> 00:16:00,560
gnome to do package

00:15:56,959 --> 00:16:03,920
as an example and

00:16:00,560 --> 00:16:06,320
it had three bug reports and this is all

00:16:03,920 --> 00:16:09,360
made available on the offline machine

00:16:06,320 --> 00:16:12,800
with the entire bug report

00:16:09,360 --> 00:16:12,800
same goes for the change log

00:16:13,279 --> 00:16:17,759
in case of change log you get a window

00:16:15,440 --> 00:16:20,480
where with the entire change log that

00:16:17,759 --> 00:16:21,519
added to it and you can have an

00:16:20,480 --> 00:16:25,839
assessment of

00:16:21,519 --> 00:16:28,959
what the package update brings in

00:16:25,839 --> 00:16:28,959
and act accordingly

00:16:30,320 --> 00:16:37,279
that is pretty much about act offline

00:16:34,079 --> 00:16:39,199
i encourage you to have a look at it the

00:16:37,279 --> 00:16:40,480
package is already packaged and

00:16:39,199 --> 00:16:43,279
available in

00:16:40,480 --> 00:16:43,920
debian which is where i uh take care of

00:16:43,279 --> 00:16:47,519
maintaining

00:16:43,920 --> 00:16:48,880
it it is also it should also be

00:16:47,519 --> 00:16:51,519
available in the

00:16:48,880 --> 00:16:53,440
all the major derivatives of debian i

00:16:51,519 --> 00:16:56,720
believe ubuntu has it and

00:16:53,440 --> 00:16:56,720
a lot of other

00:16:56,880 --> 00:16:59,920
debian derivatives also ship above

00:16:58,880 --> 00:17:02,839
tapped offline

00:16:59,920 --> 00:17:04,160
there's also how to i prepared about

00:17:02,839 --> 00:17:07,199
offline

00:17:04,160 --> 00:17:08,319
which talks mostly about what i have

00:17:07,199 --> 00:17:10,559
talked in this

00:17:08,319 --> 00:17:11,520
presentation it gives a good good how to

00:17:10,559 --> 00:17:17,039
about

00:17:11,520 --> 00:17:19,439
how apt offline works and what all the

00:17:17,039 --> 00:17:20,559
features of it are there's also the app

00:17:19,439 --> 00:17:23,199
offline man page

00:17:20,559 --> 00:17:24,319
uh which i keep up to date at all times

00:17:23,199 --> 00:17:26,079
so

00:17:24,319 --> 00:17:27,760
you are encouraged to have a look at apt

00:17:26,079 --> 00:17:30,960
offline manual page also

00:17:27,760 --> 00:17:31,600
and let me know in case you run into any

00:17:30,960 --> 00:17:35,760
problems

00:17:31,600 --> 00:17:39,280
apt offline has developed at github

00:17:35,760 --> 00:17:41,760
please feel free to have a look

00:17:39,280 --> 00:17:43,440
report issues or feature requests out

00:17:41,760 --> 00:17:45,760
there

00:17:43,440 --> 00:17:47,760
that is pretty much about this talk i

00:17:45,760 --> 00:17:51,039
will now quickly switch on to

00:17:47,760 --> 00:17:54,720
the demo

00:17:51,039 --> 00:17:54,720
section of this talk

00:17:57,520 --> 00:18:04,080
in for this demo i have prepared

00:18:01,039 --> 00:18:06,400
two environments this is a tab

00:18:04,080 --> 00:18:07,280
wherein i i have named it as online

00:18:06,400 --> 00:18:10,400
machine

00:18:07,280 --> 00:18:12,080
and the other one is offline machine

00:18:10,400 --> 00:18:13,520
so we'll first get to the offline

00:18:12,080 --> 00:18:16,400
machine for the

00:18:13,520 --> 00:18:17,440
set operation so on the uh offline

00:18:16,400 --> 00:18:20,720
machine basically

00:18:17,440 --> 00:18:24,400
to showcase this demo i have created an

00:18:20,720 --> 00:18:28,240
app offline demo uh container

00:18:24,400 --> 00:18:28,240
and let's boot into it

00:18:29,280 --> 00:18:36,559
i'll just start the container and then

00:18:33,200 --> 00:18:36,559
login into the container

00:18:39,600 --> 00:18:45,120
and this is pretty much it i

00:18:43,120 --> 00:18:46,960
am on a machine and let's see what

00:18:45,120 --> 00:18:48,480
version of app top line we already have

00:18:46,960 --> 00:18:52,160
1.8.2 here

00:18:48,480 --> 00:18:55,039
this machine right now has access to the

00:18:52,160 --> 00:18:56,880
internet uh we will just simply for the

00:18:55,039 --> 00:19:00,559
sake of this

00:18:56,880 --> 00:19:02,559
demo we will disable the name server

00:19:00,559 --> 00:19:03,919
and we should not have access the

00:19:02,559 --> 00:19:07,120
internet now

00:19:03,919 --> 00:19:10,480
this machine this container machine

00:19:07,120 --> 00:19:14,240
also has access to the host file system

00:19:10,480 --> 00:19:16,240
so that i can the signature file that i

00:19:14,240 --> 00:19:18,720
generate over here

00:19:16,240 --> 00:19:19,520
is accessible on the online machine so

00:19:18,720 --> 00:19:24,559
that app

00:19:19,520 --> 00:19:28,480
is handled through the

00:19:24,559 --> 00:19:31,840
uh tmp

00:19:28,480 --> 00:19:33,039
and debian build and containers folder

00:19:31,840 --> 00:19:34,640
which the same folder would be

00:19:33,039 --> 00:19:37,760
accessible on

00:19:34,640 --> 00:19:38,480
uh on the host machine so for this

00:19:37,760 --> 00:19:40,640
example

00:19:38,480 --> 00:19:42,559
we will try to install a package called

00:19:40,640 --> 00:19:45,600
fish fish is a shell

00:19:42,559 --> 00:19:47,919
similar to bash so uh

00:19:45,600 --> 00:19:48,880
i'll first do is i'll make clean so i

00:19:47,919 --> 00:19:51,200
don't have any

00:19:48,880 --> 00:19:53,360
package in my cache and if i say apt

00:19:51,200 --> 00:19:56,320
install fish

00:19:53,360 --> 00:19:57,200
this is going to ask and request six

00:19:56,320 --> 00:19:58,559
thousand six

00:19:57,200 --> 00:20:01,039
seven thousand six hundred forty two

00:19:58,559 --> 00:20:02,559
kilobytes of uh

00:20:01,039 --> 00:20:04,480
data to be downloaded these are the

00:20:02,559 --> 00:20:06,320
packages that needs to be downloaded

00:20:04,480 --> 00:20:08,000
and but i do not have a network

00:20:06,320 --> 00:20:09,360
connection on this machine so everything

00:20:08,000 --> 00:20:12,640
fails apart

00:20:09,360 --> 00:20:16,400
so in this case we will now

00:20:12,640 --> 00:20:20,559
use apt offline set

00:20:16,400 --> 00:20:23,679
as in fish dot uris

00:20:20,559 --> 00:20:25,360
and we'll give the install packages

00:20:23,679 --> 00:20:28,480
option and say that we would like to

00:20:25,360 --> 00:20:28,480
install package fish

00:20:29,840 --> 00:20:35,360
the command succeeded proper and now you

00:20:32,240 --> 00:20:38,240
have a file called fish.uris

00:20:35,360 --> 00:20:40,000
this is basically the signature file now

00:20:38,240 --> 00:20:42,240
let's switch back to the

00:20:40,000 --> 00:20:43,280
online machine this is an assumption now

00:20:42,240 --> 00:20:45,280
you when you have generated the

00:20:43,280 --> 00:20:48,400
signature file on your offline machine

00:20:45,280 --> 00:20:49,200
you carry it over over a usb stick or

00:20:48,400 --> 00:20:52,400
something like

00:20:49,200 --> 00:20:54,720
some movable storage media now

00:20:52,400 --> 00:20:56,240
you take the storage media and attach it

00:20:54,720 --> 00:20:57,200
to the online machine which could be

00:20:56,240 --> 00:20:59,280
running windows

00:20:57,200 --> 00:21:00,880
linux or mac or anything which has the

00:20:59,280 --> 00:21:03,760
python interpreter

00:21:00,880 --> 00:21:05,520
so in this case i am running it on the

00:21:03,760 --> 00:21:08,880
same machine but on the

00:21:05,520 --> 00:21:13,039
host side of it not inside the container

00:21:08,880 --> 00:21:14,880
so on the host machine

00:21:13,039 --> 00:21:17,440
before i run the command i would just

00:21:14,880 --> 00:21:20,440
validate that i have

00:21:17,440 --> 00:21:22,960
the same file over here which is

00:21:20,440 --> 00:21:24,400
fish.uris which we generated on the

00:21:22,960 --> 00:21:28,240
offline machine

00:21:24,400 --> 00:21:28,240
and now we will simply

00:21:28,400 --> 00:21:34,480
try to run this command

00:21:32,400 --> 00:21:36,480
i will just run you through what this

00:21:34,480 --> 00:21:38,960
command is supposed to do

00:21:36,480 --> 00:21:40,559
uh basically offline we are saying it

00:21:38,960 --> 00:21:42,840
the get operation to get

00:21:40,559 --> 00:21:45,360
data which is from the signature file

00:21:42,840 --> 00:21:46,480
fetch.uris for simplicity i've asked it

00:21:45,360 --> 00:21:49,520
to

00:21:46,480 --> 00:21:53,600
bundle it into a file which is called

00:21:49,520 --> 00:21:56,480
fish.zip and in my case

00:21:53,600 --> 00:21:58,000
since i in my home network i for

00:21:56,480 --> 00:21:58,960
efficiency reasons i have a proxy

00:21:58,000 --> 00:22:02,640
configured i have

00:21:58,960 --> 00:22:05,760
asked offline to make use of the proxy

00:22:02,640 --> 00:22:08,799
uh hostname and the port and uh

00:22:05,760 --> 00:22:11,679
to make the connections downloads faster

00:22:08,799 --> 00:22:12,799
i have just instructed it to spawn five

00:22:11,679 --> 00:22:16,080
connections

00:22:12,799 --> 00:22:20,080
uh at this time with that let's run the

00:22:16,080 --> 00:22:23,280
uh command the get operation

00:22:20,080 --> 00:22:25,679
and uh it all got downloaded thanks to

00:22:23,280 --> 00:22:29,760
the proxy everything was in the

00:22:25,679 --> 00:22:33,440
proxy cache on a remote machine

00:22:29,760 --> 00:22:35,840
so like if you can i just briefly run

00:22:33,440 --> 00:22:39,360
you through it fetches the apt data

00:22:35,840 --> 00:22:41,600
it downloads all the packages

00:22:39,360 --> 00:22:42,720
with five connections and download when

00:22:41,600 --> 00:22:44,720
once it completes it does some

00:22:42,720 --> 00:22:45,919
validation and done done done and at the

00:22:44,720 --> 00:22:49,440
end of the day

00:22:45,919 --> 00:22:51,520
uh operation you get one single file uh

00:22:49,440 --> 00:22:55,200
fist. which has all the necessary

00:22:51,520 --> 00:22:58,960
information in this archive file

00:22:55,200 --> 00:23:01,840
to install on the offline machine

00:22:58,960 --> 00:23:03,120
let's now switch back to the offline

00:23:01,840 --> 00:23:06,159
machine again

00:23:03,120 --> 00:23:07,200
to validate whether we have that file we

00:23:06,159 --> 00:23:09,520
simply look here

00:23:07,200 --> 00:23:12,320
and we do have the fish.file now over

00:23:09,520 --> 00:23:13,919
here so now we are going to simply do is

00:23:12,320 --> 00:23:15,840
aptus offline

00:23:13,919 --> 00:23:17,919
the install operation and we are going

00:23:15,840 --> 00:23:21,039
to say that install this file

00:23:17,919 --> 00:23:24,799
fish.zip that is pretty much

00:23:21,039 --> 00:23:26,559
it you save this and apt offline

00:23:24,799 --> 00:23:28,000
did all the necessary checks in the

00:23:26,559 --> 00:23:29,679
background and it

00:23:28,000 --> 00:23:31,679
found everything intact and proceeded

00:23:29,679 --> 00:23:33,760
with the installation and installed all

00:23:31,679 --> 00:23:36,799
those files into the apt cache

00:23:33,760 --> 00:23:38,799
at this moment the apt offline has done

00:23:36,799 --> 00:23:40,320
the job of bridging the gap

00:23:38,799 --> 00:23:42,799
in between the offline and online

00:23:40,320 --> 00:23:44,559
machine that of the network

00:23:42,799 --> 00:23:46,159
so on the offline machine without the

00:23:44,559 --> 00:23:48,400
network we have all

00:23:46,159 --> 00:23:51,120
the data available now when you go back

00:23:48,400 --> 00:23:53,760
and say apt install

00:23:51,120 --> 00:23:56,480
fish this is the actual command that we

00:23:53,760 --> 00:23:58,640
intended to run

00:23:56,480 --> 00:23:59,760
when you do that you'll see the same

00:23:58,640 --> 00:24:02,559
familiar

00:23:59,760 --> 00:24:03,120
prompt that apt provided the only big

00:24:02,559 --> 00:24:06,559
difference

00:24:03,120 --> 00:24:06,559
is this

00:24:07,120 --> 00:24:10,960
you have zero bytes to download from the

00:24:10,159 --> 00:24:13,760
internet

00:24:10,960 --> 00:24:14,480
so apt offline did the job in the

00:24:13,760 --> 00:24:17,919
background

00:24:14,480 --> 00:24:18,320
of letting apt have all the data in

00:24:17,919 --> 00:24:21,919
place

00:24:18,320 --> 00:24:21,919
so if you proceed further now

00:24:22,480 --> 00:24:27,200
your packages ipt will install your

00:24:24,880 --> 00:24:33,840
packages as if everything just

00:24:27,200 --> 00:24:33,840
magically came back and is available

00:24:40,799 --> 00:24:44,960
the installation is complete to validate

00:24:43,600 --> 00:24:48,240
you can

00:24:44,960 --> 00:24:50,159
check the status of

00:24:48,240 --> 00:24:51,279
the first package it says that the

00:24:50,159 --> 00:24:54,320
package is

00:24:51,279 --> 00:24:56,640
installed the candidate was 3.1.2 and

00:24:54,320 --> 00:24:58,000
the installed package is 3.1.2 you can

00:24:56,640 --> 00:25:00,960
also verify it with

00:24:58,000 --> 00:25:02,080
dpkgs giving it the package name and it

00:25:00,960 --> 00:25:04,240
says that all the

00:25:02,080 --> 00:25:07,039
files are available you can look at the

00:25:04,240 --> 00:25:07,039
binary file

00:25:07,360 --> 00:25:13,200
and everything is intact

00:25:11,120 --> 00:25:14,480
that is pretty much about apt offline i

00:25:13,200 --> 00:25:16,960
hope you like this talk

00:25:14,480 --> 00:25:18,240
yeah if you like apt offline please feel

00:25:16,960 --> 00:25:20,400
free to

00:25:18,240 --> 00:25:21,840
install it it's pre-packaged in debian

00:25:20,400 --> 00:25:25,840
and as i mentioned

00:25:21,840 --> 00:25:27,279
it is available in the

00:25:25,840 --> 00:25:36,640
in the project page that i mentioned

00:25:27,279 --> 00:25:36,640

YouTube URL: https://www.youtube.com/watch?v=3Z7s-8vsWsw


