Title: Hijacking packages for fun and profit
Publication date: 2017-11-28
Playlist: DebConf 12
Description: 
	by Steve McIntyre

At: DebConf12
https://debconf12.debconf.org/
Room: Roberto TerÃ¡n
Scheduled start: 2012-07-12 11:00:00
Captions: 
	00:00:00,170 --> 00:00:10,290
okay cool right hi folks hijacking this

00:00:08,069 --> 00:00:12,599
is very much above I'll reiterate what

00:00:10,290 --> 00:00:14,309
I've said in other sessions this is not

00:00:12,599 --> 00:00:15,859
worth something well I'm gonna tell

00:00:14,309 --> 00:00:18,420
everybody what I think should happen

00:00:15,859 --> 00:00:19,800
this is a session I think we should be

00:00:18,420 --> 00:00:24,720
having for the sake of having a

00:00:19,800 --> 00:00:26,550
discussion so please speak up

00:00:24,720 --> 00:00:28,289
especially there's gonna be a whole load

00:00:26,550 --> 00:00:29,849
of people who were not not going to be

00:00:28,289 --> 00:00:32,790
here but I'm hoping you're gonna be an

00:00:29,849 --> 00:00:35,280
IRC if people can relay questions as

00:00:32,790 --> 00:00:37,890
well we've also as you can see we've got

00:00:35,280 --> 00:00:41,430
a gobby document please somebody or

00:00:37,890 --> 00:00:43,140
multiple people take notes I'm hoping we

00:00:41,430 --> 00:00:44,700
can get some useful discussion here and

00:00:43,140 --> 00:00:49,620
not just have a flame war let's see how

00:00:44,700 --> 00:00:54,110
it goes so as I'm guessing a number of

00:00:49,620 --> 00:00:58,289
people have noticed we've had several

00:00:54,110 --> 00:00:59,969
heated discussions on Debbie and Duvall

00:00:58,289 --> 00:01:03,090
and elsewhere in the last few months

00:00:59,969 --> 00:01:06,119
about the topic of hijacking whether you

00:01:03,090 --> 00:01:09,960
describe its hijacking or aggressive

00:01:06,119 --> 00:01:14,189
enemy Ewing or orphanage and taking over

00:01:09,960 --> 00:01:17,189
packages there's there's a whole

00:01:14,189 --> 00:01:18,930
continuum of describing basically taking

00:01:17,189 --> 00:01:24,080
over maintenance of a package from an

00:01:18,930 --> 00:01:28,020
existing maintainer is that ever white

00:01:24,080 --> 00:01:30,990
is it ever something we should do I've

00:01:28,020 --> 00:01:34,740
seen some people suggest no not at all

00:01:30,990 --> 00:01:39,079
ever no way or hundred percent I've seen

00:01:34,740 --> 00:01:39,079
other people saying yeah fine go for it

00:01:39,290 --> 00:01:45,689
so what do we mean by hijacking you know

00:01:42,930 --> 00:01:48,240
do we take a package is it acceptable to

00:01:45,689 --> 00:01:50,610
take a package if a maintainer is

00:01:48,240 --> 00:01:52,229
basically missing in action if they

00:01:50,610 --> 00:01:54,360
haven't been around for five years and

00:01:52,229 --> 00:01:57,270
you know mails of them yet never get

00:01:54,360 --> 00:01:59,009
responses is it okay if you think that a

00:01:57,270 --> 00:02:01,799
packages on maintains or not we're not

00:01:59,009 --> 00:02:03,659
loaded for three years or so is it okay

00:02:01,799 --> 00:02:06,060
her package is badly maintained and it's

00:02:03,659 --> 00:02:09,209
RC buggy as hell and the maintainer

00:02:06,060 --> 00:02:11,970
isn't doing anything is it okay to take

00:02:09,209 --> 00:02:13,480
over a package if the maintainer isn't

00:02:11,970 --> 00:02:19,120
doing something that matches

00:02:13,480 --> 00:02:24,099
what you want is it okay if the

00:02:19,120 --> 00:02:34,750
Technical Committee say it's okay what

00:02:24,099 --> 00:02:36,879
do we think anyone I think sometimes we

00:02:34,750 --> 00:02:38,890
will use the word hijack to mean to

00:02:36,879 --> 00:02:41,769
include situations where the maintainer

00:02:38,890 --> 00:02:46,829
seems to be absent or anyway isn't

00:02:41,769 --> 00:02:49,780
resisting I'm not sure that that's

00:02:46,829 --> 00:02:54,220
that's quite the best way to define the

00:02:49,780 --> 00:02:56,260
problem problem comes surely when the

00:02:54,220 --> 00:03:00,340
existing maintain or maintainer czar

00:02:56,260 --> 00:03:02,950
clearly unwilling rather than just not

00:03:00,340 --> 00:03:07,810
cooperating or or failing to exist

00:03:02,950 --> 00:03:10,540
entirely and exactly what to do about a

00:03:07,810 --> 00:03:12,069
situation is something that we have

00:03:10,540 --> 00:03:20,169
struggled with for a long time I don't

00:03:12,069 --> 00:03:22,780
have any good answers Salvage he's

00:03:20,169 --> 00:03:25,630
suggesting for a situation for where the

00:03:22,780 --> 00:03:29,769
maintainer is is just not apparently

00:03:25,630 --> 00:03:32,769
there yeah as a reminder to there are

00:03:29,769 --> 00:03:35,709
some situations in which the maintainer

00:03:32,769 --> 00:03:38,459
himself is not necessarily a my a but is

00:03:35,709 --> 00:03:41,440
effectively a my a for some packages and

00:03:38,459 --> 00:03:44,200
I personally think that waiting for a

00:03:41,440 --> 00:03:46,780
maintainer to be fully mi a on 100% of

00:03:44,200 --> 00:03:49,180
his packages might be too late when some

00:03:46,780 --> 00:03:51,130
packages need to help before that and

00:03:49,180 --> 00:03:53,290
it's perfectly perfectly reasonable for

00:03:51,130 --> 00:03:55,180
one to have lost interest in parts of

00:03:53,290 --> 00:03:58,750
the archive or his packages somewhere

00:03:55,180 --> 00:04:01,989
and we currently lack a clear way to

00:03:58,750 --> 00:04:06,790
just take over packages take away

00:04:01,989 --> 00:04:08,500
packages from a maintained I don't think

00:04:06,790 --> 00:04:09,819
we entirely like a clear way to may take

00:04:08,500 --> 00:04:12,940
away maintain its package maintainer

00:04:09,819 --> 00:04:14,680
some a package there is the QA often in

00:04:12,940 --> 00:04:17,199
process which I have done to a few

00:04:14,680 --> 00:04:18,970
packages where you file a bug saying

00:04:17,199 --> 00:04:20,769
this package appears not to be

00:04:18,970 --> 00:04:23,950
maintained I proposed offering it since

00:04:20,769 --> 00:04:25,390
three months later orphan it it's a

00:04:23,950 --> 00:04:26,590
really long wait if no one replies to

00:04:25,390 --> 00:04:29,099
the bug I don't see what possible harm

00:04:26,590 --> 00:04:29,099
it could have

00:04:31,050 --> 00:04:35,500
right that's always what I was getting

00:04:33,190 --> 00:04:38,830
on with when if the maintainer is absent

00:04:35,500 --> 00:04:40,930
in that sense that's not it's certainly

00:04:38,830 --> 00:04:42,190
not controversial and you can see that

00:04:40,930 --> 00:04:44,230
it's not controversial because by

00:04:42,190 --> 00:04:46,480
definition there's nobody who's opposing

00:04:44,230 --> 00:04:51,520
it the question is under what

00:04:46,480 --> 00:04:53,560
circumstances should we grasp the

00:04:51,520 --> 00:04:58,170
package and full seat out of the may

00:04:53,560 --> 00:04:58,170
existing maintained is death-grip and

00:04:58,740 --> 00:05:04,750
historically Debian has had a very

00:05:00,580 --> 00:05:06,940
strong maintained a culture but we seem

00:05:04,750 --> 00:05:09,880
to be moving away from that there's also

00:05:06,940 --> 00:05:12,130
the difficulty that our nominal system

00:05:09,880 --> 00:05:15,340
for taking packages away from maintainer

00:05:12,130 --> 00:05:18,190
x' is the technical committee you

00:05:15,340 --> 00:05:20,800
haven't never done that and frankly i

00:05:18,190 --> 00:05:25,150
don't think they are very likely to in

00:05:20,800 --> 00:05:27,730
the future so maybe we you know it can't

00:05:25,150 --> 00:05:31,390
possibly be right that no package in

00:05:27,730 --> 00:05:32,919
debian has ever been wrestled away from

00:05:31,390 --> 00:05:34,720
an unwilling maintainer there must have

00:05:32,919 --> 00:05:37,120
been cases where that was the right

00:05:34,720 --> 00:05:39,970
thing to do we obviously lack a way to

00:05:37,120 --> 00:05:42,460
do it and an idea of when that should

00:05:39,970 --> 00:05:45,250
happen and who should decide sure I mean

00:05:42,460 --> 00:05:47,290
it's clearly in a motor topic I mean

00:05:45,250 --> 00:05:49,690
it's one of the strengths of Debian that

00:05:47,290 --> 00:05:51,370
I see is that we allow maintain as

00:05:49,690 --> 00:05:53,560
control over their packages it's one of

00:05:51,370 --> 00:05:54,640
the ways that debian scales well but we

00:05:53,560 --> 00:05:57,460
don't have to have group discussions

00:05:54,640 --> 00:06:00,280
over everything that we do but it's also

00:05:57,460 --> 00:06:02,020
one of our weaknesses that you know the

00:06:00,280 --> 00:06:04,150
whole number of maintainer that I've

00:06:02,020 --> 00:06:05,890
seen who are very territorial about

00:06:04,150 --> 00:06:08,560
their packages and don't want to accept

00:06:05,890 --> 00:06:10,210
help there are people out there who will

00:06:08,560 --> 00:06:12,669
respond very aggressively

00:06:10,210 --> 00:06:17,490
if you ever deign to NMU their package

00:06:12,669 --> 00:06:19,660
for nasty bug for example which is

00:06:17,490 --> 00:06:21,250
unfortunate you know we're trying to

00:06:19,660 --> 00:06:26,650
work together as a team to produce the

00:06:21,250 --> 00:06:28,510
best operating system we can so okay you

00:06:26,650 --> 00:06:31,090
know as pointed out that the Technical

00:06:28,510 --> 00:06:34,840
Committee have never I have never handed

00:06:31,090 --> 00:06:35,680
over in maintenance of a package do we

00:06:34,840 --> 00:06:37,419
think that's correct

00:06:35,680 --> 00:06:40,390
should we explicitly ask the tech

00:06:37,419 --> 00:06:41,199
committee tip2 to step in in these

00:06:40,390 --> 00:06:50,889
situations

00:06:41,199 --> 00:06:53,580
should we have another mechanism anyone

00:06:50,889 --> 00:06:53,580
yeah

00:06:56,120 --> 00:07:01,110
when I said we don't have a proper

00:06:58,710 --> 00:07:03,720
procedure I think it's right that we

00:07:01,110 --> 00:07:06,150
have some guidelines or it's somehow

00:07:03,720 --> 00:07:08,550
widely known that we should go to that

00:07:06,150 --> 00:07:10,740
bin level with some delay something like

00:07:08,550 --> 00:07:13,410
that maybe having a multiple steps

00:07:10,740 --> 00:07:15,090
written down in developers reference

00:07:13,410 --> 00:07:16,800
saying if you think a package is

00:07:15,090 --> 00:07:19,920
outdated too much or that it should

00:07:16,800 --> 00:07:22,830
change maintainer this is the procedure

00:07:19,920 --> 00:07:25,140
should follow step one send that type of

00:07:22,830 --> 00:07:26,880
mail wait that amount of days and step

00:07:25,140 --> 00:07:29,880
two go to the bin level with that type

00:07:26,880 --> 00:07:31,830
of mail with that amount of days etc and

00:07:29,880 --> 00:07:34,350
then everybody is aware of what the

00:07:31,830 --> 00:07:36,330
procedure is in which step we are for

00:07:34,350 --> 00:07:38,820
which package and then it's also more

00:07:36,330 --> 00:07:41,070
clear I don't know just throwing out the

00:07:38,820 --> 00:07:45,150
idea I mean what people have said so far

00:07:41,070 --> 00:07:47,130
about going through the QA process and

00:07:45,150 --> 00:07:48,720
checking on things and often in a

00:07:47,130 --> 00:07:50,880
package if the maintainer doesn't seem

00:07:48,720 --> 00:07:53,520
to be around I mean of course the weird

00:07:50,880 --> 00:07:55,890
thing about that is it's not like there

00:07:53,520 --> 00:07:57,930
is a defined QA team every developer is

00:07:55,890 --> 00:08:02,280
a member of QA when they we know when

00:07:57,930 --> 00:08:04,230
they feel like so it's if we go for that

00:08:02,280 --> 00:08:06,540
way as a method then yeah you could just

00:08:04,230 --> 00:08:08,580
say right as a member of QA I'm saying

00:08:06,540 --> 00:08:10,440
this this package is orphaned and then

00:08:08,580 --> 00:08:12,300
potentially 10 minutes later say white

00:08:10,440 --> 00:08:15,510
I'm gonna I'm gonna take this package

00:08:12,300 --> 00:08:17,760
which clearly is not within the spirit

00:08:15,510 --> 00:08:21,710
but you know technically is correct from

00:08:17,760 --> 00:08:21,710
from what some people have suggested I

00:08:24,110 --> 00:08:30,690
think that document the process is you

00:08:28,080 --> 00:08:32,340
are willing to hijack the package or if

00:08:30,690 --> 00:08:34,980
you are noticing something you can go

00:08:32,340 --> 00:08:37,020
directly to the to the missing-in-action

00:08:34,980 --> 00:08:37,560
database and the commander process by

00:08:37,020 --> 00:08:39,750
yourself

00:08:37,560 --> 00:08:43,890
I mean it's public and you just need to

00:08:39,750 --> 00:08:46,530
read and put a tag for it and that way

00:08:43,890 --> 00:08:52,260
the maintainer will be also keep on the

00:08:46,530 --> 00:08:54,960
missing-in-action team rather so we seem

00:08:52,260 --> 00:08:56,250
to have focused on packages that are

00:08:54,960 --> 00:08:59,730
effectively orphaned

00:08:56,250 --> 00:09:02,340
I think stave you were also talking

00:08:59,730 --> 00:09:05,370
about packages that are maintained

00:09:02,340 --> 00:09:11,100
maintain possibly in a bad way

00:09:05,370 --> 00:09:12,720
yeah well hm I'm looking to stimulate

00:09:11,100 --> 00:09:15,390
discussion about all of these that these

00:09:12,720 --> 00:09:19,170
places I mean there was a particular

00:09:15,390 --> 00:09:21,240
example that we've had recently and I

00:09:19,170 --> 00:09:23,100
don't wish to pick on individual people

00:09:21,240 --> 00:09:25,980
but I've got I'm gonna pick an example

00:09:23,100 --> 00:09:29,070
of the wine packages where we've had a

00:09:25,980 --> 00:09:31,710
maintainer who doesn't have the time to

00:09:29,070 --> 00:09:33,990
do the maintenance yet still wants the

00:09:31,710 --> 00:09:40,320
maintenance to happen in the way that

00:09:33,990 --> 00:09:42,690
they want while I understand obviously

00:09:40,320 --> 00:09:44,520
must be on Debian is full of people with

00:09:42,690 --> 00:09:48,300
strong technical opinions who are always

00:09:44,520 --> 00:09:50,910
gonna want things for their own way the

00:09:48,300 --> 00:09:53,190
also for my in my opinion that should

00:09:50,910 --> 00:09:55,080
always be a time when look if you're not

00:09:53,190 --> 00:09:57,450
doing the work you don't get to dictate

00:09:55,080 --> 00:09:59,040
how it's done you know again you know I

00:09:57,450 --> 00:10:00,450
mean it works that way of course that

00:09:59,040 --> 00:10:02,370
when you are doing the work you get to

00:10:00,450 --> 00:10:05,160
dictate it at what point do we say

00:10:02,370 --> 00:10:11,550
actually no here's a cut-off you've gone

00:10:05,160 --> 00:10:14,280
too far so I'd like to agree with with

00:10:11,550 --> 00:10:17,490
what you just said there and suggest to

00:10:14,280 --> 00:10:20,070
Steve that we should try to narrow the

00:10:17,490 --> 00:10:22,560
scope of this both to situations where

00:10:20,070 --> 00:10:26,550
there is an existing maintainer and they

00:10:22,560 --> 00:10:29,250
are actively resisting the package to

00:10:26,550 --> 00:10:30,480
transfer to a new maintainer even if

00:10:29,250 --> 00:10:35,130
that only means that they're answering

00:10:30,480 --> 00:10:36,990
email saying no yeah in the other

00:10:35,130 --> 00:10:38,850
situation it's not controversial we

00:10:36,990 --> 00:10:41,190
already have processes that deal with

00:10:38,850 --> 00:10:43,680
that they may or may not be too fast or

00:10:41,190 --> 00:10:46,640
too slow but that's that's not the

00:10:43,680 --> 00:10:49,560
really difficult question we solve the I

00:10:46,640 --> 00:10:51,720
think I think the bad problem we have is

00:10:49,560 --> 00:10:54,540
we don't have a good answer the

00:10:51,720 --> 00:10:59,880
difficult question of when is somebody

00:10:54,540 --> 00:11:05,160
not being a good enough maintainer does

00:10:59,880 --> 00:11:07,529
anybody have any ideas about how well

00:11:05,160 --> 00:11:10,709
firstly how badly maintained a package

00:11:07,529 --> 00:11:13,320
has to be before you want to depose an

00:11:10,709 --> 00:11:16,910
unwilling maintainer and secondly who

00:11:13,320 --> 00:11:22,020
should be making that decision

00:11:16,910 --> 00:11:23,670
Leo it has to have some kind of context

00:11:22,020 --> 00:11:25,110
of the package itself and its role

00:11:23,670 --> 00:11:27,480
within Debian if you're talking about a

00:11:25,110 --> 00:11:29,730
leaf package that only a small number of

00:11:27,480 --> 00:11:32,670
people use then so if you're talking

00:11:29,730 --> 00:11:34,920
about changing the maintainer of one of

00:11:32,670 --> 00:11:36,660
the base packages or something involved

00:11:34,920 --> 00:11:38,690
in the tool chain you've got to have a

00:11:36,660 --> 00:11:42,720
much wider approval for that how do we

00:11:38,690 --> 00:11:44,760
bring the type of package into the

00:11:42,720 --> 00:11:47,460
equation as well it's not just about how

00:11:44,760 --> 00:11:49,740
actively the existing maintainer fights

00:11:47,460 --> 00:11:52,170
it's also about how important is that

00:11:49,740 --> 00:11:57,990
package and probably it's the Wyatt

00:11:52,170 --> 00:12:00,510
project yep can we come up with a

00:11:57,990 --> 00:12:03,450
reasonable set of guidelines over you

00:12:00,510 --> 00:12:06,060
know to give us help you know to give us

00:12:03,450 --> 00:12:08,160
a process you know should we should we

00:12:06,060 --> 00:12:10,170
have to wait for five or the Debian

00:12:08,160 --> 00:12:12,330
developers to complain that this package

00:12:10,170 --> 00:12:14,430
is is clearly not being maintained well

00:12:12,330 --> 00:12:17,340
enough should it be ten is that a valid

00:12:14,430 --> 00:12:20,580
thing to count you know should we say

00:12:17,340 --> 00:12:22,680
you know that this package is X releases

00:12:20,580 --> 00:12:24,750
behind upstream as well should we say

00:12:22,680 --> 00:12:28,260
you know does it have this many RC bugs

00:12:24,750 --> 00:12:30,510
I mean in some cases that may not be RC

00:12:28,260 --> 00:12:33,390
bugs but a package is clearly not being

00:12:30,510 --> 00:12:39,780
maintained adequately it's a difficult

00:12:33,390 --> 00:12:41,340
one to call what do we think okay I'm

00:12:39,780 --> 00:12:49,680
seeing half of the room not saying

00:12:41,340 --> 00:12:52,730
anything at all is email important Neil

00:12:49,680 --> 00:12:52,730
tell the Neil

00:12:58,360 --> 00:13:05,410
one of the things that we've been

00:13:00,529 --> 00:13:09,350
considering for a number of releases is

00:13:05,410 --> 00:13:12,050
essentially blocking and removing from

00:13:09,350 --> 00:13:15,380
testing at freeze time any orphaned

00:13:12,050 --> 00:13:17,630
packages because if there isn't a

00:13:15,380 --> 00:13:21,860
maintainer then then that's just going

00:13:17,630 --> 00:13:23,810
to create a problem short of Xena

00:13:21,860 --> 00:13:27,800
essentially treating orphan being

00:13:23,810 --> 00:13:30,830
orphaned as an Aussie bug yeah it would

00:13:27,800 --> 00:13:35,540
be interesting to get a view on if

00:13:30,830 --> 00:13:38,720
people would like the release team to

00:13:35,540 --> 00:13:41,089
take other factors into account on what

00:13:38,720 --> 00:13:44,000
we should do around releases including

00:13:41,089 --> 00:13:45,950
maintainer ship I'm quite keen not to

00:13:44,000 --> 00:13:47,720
have the release team essentially

00:13:45,950 --> 00:13:51,020
deciding who should be maintained as a

00:13:47,720 --> 00:13:53,360
packaging so what or directing maintains

00:13:51,020 --> 00:13:54,770
do stuff in that way you mean people you

00:13:53,360 --> 00:13:58,610
know you don't have enough people hating

00:13:54,770 --> 00:14:00,650
you already yeah but it would be useful

00:13:58,610 --> 00:14:01,880
to get some feedback if there's

00:14:00,650 --> 00:14:04,100
something they want to say the release

00:14:01,880 --> 00:14:06,620
thing to do at specific people release

00:14:04,100 --> 00:14:09,670
time that doesn't help unstable which we

00:14:06,620 --> 00:14:12,170
try not to touch as much as possible but

00:14:09,670 --> 00:14:14,620
but that might be another thing which

00:14:12,170 --> 00:14:17,620
you might be able to look at as well

00:14:14,620 --> 00:14:17,620
sure

00:14:21,020 --> 00:14:26,280
well one other thing I'm in the thing

00:14:24,390 --> 00:14:28,080
that Neel just said there about the

00:14:26,280 --> 00:14:29,880
release seem not wanting to decide who's

00:14:28,080 --> 00:14:31,920
the maintainer of a package I think

00:14:29,880 --> 00:14:34,560
that's sort of hitting the nail on the

00:14:31,920 --> 00:14:37,020
head there really because nobody wants

00:14:34,560 --> 00:14:38,790
to be making these decisions apart from

00:14:37,020 --> 00:14:41,280
the person who wants to take over the

00:14:38,790 --> 00:14:47,840
package and everybody else is just going

00:14:41,280 --> 00:14:50,190
oh my god and the effect of that is that

00:14:47,840 --> 00:14:51,600
really very bad situations the

00:14:50,190 --> 00:14:54,810
maintainer shape of package can go on

00:14:51,600 --> 00:14:56,820
for a very long time and everybody gets

00:14:54,810 --> 00:14:59,880
really embittered and nobody is willing

00:14:56,820 --> 00:15:03,360
to make a decision and the result is

00:14:59,880 --> 00:15:05,580
eventually maybe somebody gets beaten

00:15:03,360 --> 00:15:07,730
down and moves away from the package or

00:15:05,580 --> 00:15:10,320
maybe they don't and that's not really

00:15:07,730 --> 00:15:12,570
that's that's kind of all by attrition

00:15:10,320 --> 00:15:13,860
and not yeah the best way to do things

00:15:12,570 --> 00:15:15,900
or maybe they bouncer to the tech

00:15:13,860 --> 00:15:31,350
committee who then only get only get it

00:15:15,900 --> 00:15:33,330
wanted to already a flame war it's a

00:15:31,350 --> 00:15:36,050
it's an emotive decision people really

00:15:33,330 --> 00:15:40,320
do feel strongly about this I mean

00:15:36,050 --> 00:15:42,030
actually we have the low threshold and a

00:15:40,320 --> 00:15:44,550
new page you're ready to show for those

00:15:42,030 --> 00:15:47,100
people who are happy to accept help on

00:15:44,550 --> 00:15:49,320
their packages quick show of hands how

00:15:47,100 --> 00:15:53,070
many people here maintain Debian

00:15:49,320 --> 00:15:55,170
packages what take right leave your

00:15:53,070 --> 00:16:02,730
hands up if you're not in the low

00:15:55,170 --> 00:16:06,660
threshold and a new page okay next

00:16:02,730 --> 00:16:07,830
question is obvious why not Adams just

00:16:06,660 --> 00:16:12,680
said he's not work because he's never

00:16:07,830 --> 00:16:12,680
been bothered to go and do it yet in

00:16:12,760 --> 00:16:19,640
hmm I prefer you know there are certain

00:16:18,440 --> 00:16:22,910
mistakes that people could make my

00:16:19,640 --> 00:16:24,830
packages and I prefer them to ask me in

00:16:22,910 --> 00:16:27,050
advance and I every time anybody has

00:16:24,830 --> 00:16:29,360
emailed me saying I propose do this NMU

00:16:27,050 --> 00:16:33,200
I've replied very promptly in general

00:16:29,360 --> 00:16:34,520
yes sometimes yes but watch out for this

00:16:33,200 --> 00:16:39,550
ok cool

00:16:34,520 --> 00:16:43,790
Neal I don't think just quick point

00:16:39,550 --> 00:16:51,230
perhaps we should give people one hijack

00:16:43,790 --> 00:16:52,400
that they could they're allowed to do as

00:16:51,230 --> 00:16:54,650
much as everybody else yeah

00:16:52,400 --> 00:16:58,250
so you get to do one hijack if you

00:16:54,650 --> 00:16:59,360
really under all the same circumstances

00:16:58,250 --> 00:17:02,480
but you're only allowed to do it once

00:16:59,360 --> 00:17:04,340
and then whether it was a success gets

00:17:02,480 --> 00:17:08,200
reviewed at some point and you'll never

00:17:04,340 --> 00:17:12,260
allowed to do it again if if you did it

00:17:08,200 --> 00:17:23,510
so people have this value and they're

00:17:12,260 --> 00:17:28,070
not gonna waste it on just a cute idea

00:17:23,510 --> 00:17:32,660
who we've used it oh I think the public

00:17:28,070 --> 00:17:34,070
opinion decided at some point later fair

00:17:32,660 --> 00:17:37,010
also what happens with that if you've

00:17:34,070 --> 00:17:39,290
actually got a hijack that involves a

00:17:37,010 --> 00:17:41,540
chain of packages you go take over two

00:17:39,290 --> 00:17:45,310
or three and it becomes a number of

00:17:41,540 --> 00:17:47,330
packages overall for one hijack then or

00:17:45,310 --> 00:17:52,280
sometimes you actually may be in your

00:17:47,330 --> 00:17:56,210
friends oh it's clearly doomed to

00:17:52,280 --> 00:17:58,100
failure then with us which one made in

00:17:56,210 --> 00:17:59,180
the instant team packaging thing which

00:17:58,100 --> 00:18:01,370
yes we be better than the previous

00:17:59,180 --> 00:18:03,080
situation that's one of the reasons why

00:18:01,370 --> 00:18:05,990
I'm not on the low threshold n mu is

00:18:03,080 --> 00:18:08,230
actually I've got the vast majority of

00:18:05,990 --> 00:18:10,940
the packages are already team maintained

00:18:08,230 --> 00:18:12,290
and if one of the team doesn't get back

00:18:10,940 --> 00:18:15,580
to them then that's a problem with the

00:18:12,290 --> 00:18:15,580
team and we need to sort that out

00:18:17,090 --> 00:18:24,000
I'm on the low Trenholm you page but

00:18:20,550 --> 00:18:26,040
also with comments I mean that if it's

00:18:24,000 --> 00:18:27,930
steam maintained go there first and I

00:18:26,040 --> 00:18:30,480
mean it's also protected by the fact

00:18:27,930 --> 00:18:32,040
that normally enemies mean that you fix

00:18:30,480 --> 00:18:32,610
the bug and they spoke has not been

00:18:32,040 --> 00:18:36,210
answered

00:18:32,610 --> 00:18:38,460
yeah so I mean it's it's mostly for the

00:18:36,210 --> 00:18:40,290
case where I'm a way for some reason or

00:18:38,460 --> 00:18:42,330
just out of internet for some time in

00:18:40,290 --> 00:18:44,370
that it's better to have maintained

00:18:42,330 --> 00:18:46,350
packages than just me maintaining

00:18:44,370 --> 00:18:46,920
maintaining my packages I mean that's

00:18:46,350 --> 00:18:49,140
personal

00:18:46,920 --> 00:18:53,790
yeah agreed it's related it's not key to

00:18:49,140 --> 00:18:57,210
the problem that would turn a selfie and

00:18:53,790 --> 00:19:00,030
I see yes we're talking about aussie

00:18:57,210 --> 00:19:01,470
buggy packages were a bug is closed

00:19:00,030 --> 00:19:03,300
without comment on the book for example

00:19:01,470 --> 00:19:08,130
i'm not gonna go looking at the bug

00:19:03,300 --> 00:19:08,730
number i mean let's not I've already

00:19:08,130 --> 00:19:10,320
done it myself

00:19:08,730 --> 00:19:12,570
let's not pick particular on particular

00:19:10,320 --> 00:19:13,950
maintain as particular packages here you

00:19:12,570 --> 00:19:17,300
know there were lots of examples out

00:19:13,950 --> 00:19:17,300
there I'm sure we're all aware of that

00:19:17,520 --> 00:19:20,609
[Music]

00:19:21,830 --> 00:19:26,210
quick show of hands as a metric should

00:19:24,230 --> 00:19:33,110
it just be done with the least critical

00:19:26,210 --> 00:19:35,600
bugs yes no hands up for yes okay

00:19:33,110 --> 00:19:37,879
should we just describe that it's a that

00:19:35,600 --> 00:19:40,460
a bug that up so that a package should

00:19:37,879 --> 00:19:45,529
be hijacked solely if it has released

00:19:40,460 --> 00:19:51,619
critical bugs that are not fixed I see

00:19:45,529 --> 00:19:55,850
two hands out of a room of 20-odd shield

00:19:51,619 --> 00:19:57,590
it depend on yeah sorry that package

00:19:55,850 --> 00:20:04,460
question was really ambiguous yes thank

00:19:57,590 --> 00:20:08,029
you fell should should we define whether

00:20:04,460 --> 00:20:10,429
or not a package should is available for

00:20:08,029 --> 00:20:12,830
hijacking depending on whether or not

00:20:10,429 --> 00:20:21,049
you know it's it's behind upstream

00:20:12,830 --> 00:20:26,259
releases no sure that you know yeah and

00:20:21,049 --> 00:20:26,259
we're not frozen yes right vents

00:20:29,440 --> 00:20:37,039
currently if you're behind upstream you

00:20:33,139 --> 00:20:39,679
just get a wishlist bug yes yeah do we

00:20:37,039 --> 00:20:43,759
want to look at perhaps say using a

00:20:39,679 --> 00:20:48,649
metric to go if you are 20 releases

00:20:43,759 --> 00:20:53,409
behind or releases behind mainline then

00:20:48,649 --> 00:20:56,059
that becomes our see yeah maybe

00:20:53,409 --> 00:20:58,460
well doesn't say 20 releases say is a

00:20:56,059 --> 00:21:02,090
year behind all that kind of thing yeah

00:20:58,460 --> 00:21:04,249
it it might be reminded that an amuse

00:21:02,090 --> 00:21:05,989
can be done for wishlist wishlist bugs

00:21:04,249 --> 00:21:08,330
I mean the developer reference

00:21:05,989 --> 00:21:10,580
explicitly does not does not say that

00:21:08,330 --> 00:21:13,609
you cannot do it so you can do it given

00:21:10,580 --> 00:21:16,960
reasonable explanation and time yeah of

00:21:13,609 --> 00:21:20,409
course who defines what's reasonable nil

00:21:16,960 --> 00:21:23,179
so quick comment about the RC nurse of

00:21:20,409 --> 00:21:25,970
new upstream version bugs if there's

00:21:23,179 --> 00:21:28,279
something out sufficiently behind then

00:21:25,970 --> 00:21:30,679
that it's like really really out a day

00:21:28,279 --> 00:21:32,539
to then just talk to the reefs team and

00:21:30,679 --> 00:21:34,549
if we think it's writing its regional

00:21:32,539 --> 00:21:36,680
I'll just make it are see that's

00:21:34,549 --> 00:21:40,070
probably the easiest way

00:21:36,680 --> 00:21:42,230
in general I think each one of these are

00:21:40,070 --> 00:21:44,480
are indications of a package being

00:21:42,230 --> 00:21:46,340
unmaintained rather than a stock out

00:21:44,480 --> 00:21:48,380
entry off of things we should do for

00:21:46,340 --> 00:21:50,510
four for each of them so certainly a

00:21:48,380 --> 00:21:52,670
combination again it's a fuzzy logic

00:21:50,510 --> 00:21:54,350
human eventually thing that has to be

00:21:52,670 --> 00:21:58,370
done you can write things that might

00:21:54,350 --> 00:22:00,140
find candidates for this but in the end

00:21:58,370 --> 00:22:02,780
I think it's something that the project

00:22:00,140 --> 00:22:05,870
of people as a whole have to say that

00:22:02,780 --> 00:22:08,810
one there in my judgment is unmaintained

00:22:05,870 --> 00:22:11,740
that what is it and trying to get some

00:22:08,810 --> 00:22:13,370
criteria for for that fuzziness is it's

00:22:11,740 --> 00:22:15,410
shouldn't be hard

00:22:13,370 --> 00:22:17,990
well quite I know someone in this room

00:22:15,410 --> 00:22:23,000
has came up with not that long ago his

00:22:17,990 --> 00:22:26,470
own equation for describing how badly

00:22:23,000 --> 00:22:29,210
maintained a packages didn't you Neal um

00:22:26,470 --> 00:22:36,890
would it be helpful to actually have an

00:22:29,210 --> 00:22:42,050
even semi official check on every

00:22:36,890 --> 00:22:44,300
package so the QA team I think Lucas

00:22:42,050 --> 00:22:46,640
implemented this there's a package

00:22:44,300 --> 00:22:48,890
called bypass no I'm not a package of

00:22:46,640 --> 00:22:51,190
page called bypass and it's mostly about

00:22:48,890 --> 00:23:00,740
packages that are poorly maintained

00:22:51,190 --> 00:23:02,750
using various metrics okay I it's very

00:23:00,740 --> 00:23:04,250
tempting isn't it do you think we can

00:23:02,750 --> 00:23:06,830
only come up with some kind of formula

00:23:04,250 --> 00:23:07,790
some kind of objective criterion there

00:23:06,830 --> 00:23:10,100
none of us would have to make these

00:23:07,790 --> 00:23:13,910
difficult decisions yeah absolutely

00:23:10,100 --> 00:23:17,210
what's going on here but it's a

00:23:13,910 --> 00:23:20,420
difficult decision and if we have these

00:23:17,210 --> 00:23:22,820
kind of criteria you can guarantee that

00:23:20,420 --> 00:23:24,320
people will gain them yes and there will

00:23:22,820 --> 00:23:27,380
be arguments over whether something's

00:23:24,320 --> 00:23:31,070
released critical the things that we put

00:23:27,380 --> 00:23:32,630
on the list for you might be hijacked if

00:23:31,070 --> 00:23:34,970
you don't do them we'll get done and

00:23:32,630 --> 00:23:37,040
everything else will be left alone sure

00:23:34,970 --> 00:23:38,870
all of these things will go wrong we

00:23:37,040 --> 00:23:44,180
will end up with rules lowering what we

00:23:38,870 --> 00:23:47,020
need is a way to use the existing social

00:23:44,180 --> 00:23:49,390
mechanisms that we have and

00:23:47,020 --> 00:23:54,520
somehow get enough weight of opinion

00:23:49,390 --> 00:23:56,140
behind a decision without getting the

00:23:54,520 --> 00:23:59,980
whole thing into a nightmarish flame

00:23:56,140 --> 00:24:05,200
wall on the way there and how do we do

00:23:59,980 --> 00:24:08,020
that well it's almost like we need a low

00:24:05,200 --> 00:24:15,190
hijacker page where you say that I'm

00:24:08,020 --> 00:24:17,380
okay to be hijacked and it almost feels

00:24:15,190 --> 00:24:19,960
like I'm gonna file it in email to

00:24:17,380 --> 00:24:22,840
whatever pts such that on my package

00:24:19,960 --> 00:24:24,910
page it gets that little nice box saying

00:24:22,840 --> 00:24:27,130
lo n mu if you want to just do one takes

00:24:24,910 --> 00:24:30,010
or lo hijack if you want to continue

00:24:27,130 --> 00:24:33,280
maintaining it sure good luck but how I

00:24:30,010 --> 00:24:35,320
mean the ofa tag is is it already some

00:24:33,280 --> 00:24:37,720
part of the way though isn't it no I

00:24:35,320 --> 00:24:40,030
don't want to orphan it or request for

00:24:37,720 --> 00:24:42,280
adoption cuz you know I'm still

00:24:40,030 --> 00:24:44,470
maintaining it but if I fall out of the

00:24:42,280 --> 00:24:46,540
earth go ahead and hijack it

00:24:44,470 --> 00:24:49,390
yeah that's that's fair if you have

00:24:46,540 --> 00:24:50,830
better agenda whatever but look I

00:24:49,390 --> 00:24:52,960
suppose of course the only people who

00:24:50,830 --> 00:24:56,800
were ever gonna sign up for that or the

00:24:52,960 --> 00:24:59,050
well-behaved maintain as well well for

00:24:56,800 --> 00:25:01,510
me I'm like you know if I put that up I

00:24:59,050 --> 00:25:03,250
wonder if anyone will ever hijack my

00:25:01,510 --> 00:25:06,070
package because I don't think so because

00:25:03,250 --> 00:25:11,800
I'm like leaf and unimportant sure

00:25:06,070 --> 00:25:13,480
watching and I think that the idea of

00:25:11,800 --> 00:25:17,309
having this kind of formula is quite

00:25:13,480 --> 00:25:22,440
interesting maybe adding some kind of

00:25:17,309 --> 00:25:24,910
more subjective data and not making it

00:25:22,440 --> 00:25:27,910
authoritative but may be an indication

00:25:24,910 --> 00:25:33,010
would be useful because maybe you don't

00:25:27,910 --> 00:25:36,040
know that you package it so and maybe as

00:25:33,010 --> 00:25:38,740
a repository for packages that need help

00:25:36,040 --> 00:25:41,590
and maybe some something less drastic

00:25:38,740 --> 00:25:44,110
that just saying hijack but maybe offer

00:25:41,590 --> 00:25:48,370
help or whatever it could be a nice way

00:25:44,110 --> 00:25:50,440
to help to get the social fix done I

00:25:48,370 --> 00:25:50,800
mean a technical aid for a social

00:25:50,440 --> 00:25:55,160
problem

00:25:50,800 --> 00:26:00,830
yeah the first parts are Hector

00:25:55,160 --> 00:26:01,400
a lot of question the human takes a

00:26:00,830 --> 00:26:04,100
package

00:26:01,400 --> 00:26:07,640
I think teams teams should take

00:26:04,100 --> 00:26:09,980
preference over individuals like the

00:26:07,640 --> 00:26:12,080
idea of teams maintaining packages of

00:26:09,980 --> 00:26:14,210
course then the teams have to organize

00:26:12,080 --> 00:26:19,210
themselves and who leads that team and

00:26:14,210 --> 00:26:22,910
who has to make important decisions and

00:26:19,210 --> 00:26:26,900
that was one thing and I have hijack few

00:26:22,910 --> 00:26:29,990
packages and I have filed wish list box

00:26:26,900 --> 00:26:32,150
to up to update the packages to never

00:26:29,990 --> 00:26:36,410
release to newer releases absolutely

00:26:32,150 --> 00:26:38,210
says the maintainer haven't replied I've

00:26:36,410 --> 00:26:40,690
been working with upstream trying to fix

00:26:38,210 --> 00:26:43,610
box you know in in these packages and

00:26:40,690 --> 00:26:45,530
after a year waiting for a reply from

00:26:43,610 --> 00:26:48,350
the maintainer I just changed the

00:26:45,530 --> 00:26:50,240
maintainer upload and there was no

00:26:48,350 --> 00:26:51,380
complaint at all I mean those guys were

00:26:50,240 --> 00:26:53,300
lost

00:26:51,380 --> 00:26:56,240
sure so you've hijacked and you've got

00:26:53,300 --> 00:26:58,160
away with it well nobody's well it's how

00:26:56,240 --> 00:27:00,980
I describe it the existing maintainer

00:26:58,160 --> 00:27:04,310
hasn't complained there have been sorry

00:27:00,980 --> 00:27:05,960
salvaged yes I mean I it's in the vagary

00:27:04,310 --> 00:27:12,050
board and I'd really explicit that I

00:27:05,960 --> 00:27:14,810
wasn't then to to hijack the back yeah I

00:27:12,050 --> 00:27:17,660
mean again I'm but you talk about teams

00:27:14,810 --> 00:27:18,190
two teams are typically better but not

00:27:17,660 --> 00:27:21,350
always

00:27:18,190 --> 00:27:23,120
I've seen some packages maintained you

00:27:21,350 --> 00:27:24,800
know what were the maintenance have been

00:27:23,120 --> 00:27:28,610
switched to a team and the team has been

00:27:24,800 --> 00:27:30,410
essentially one person or even worse you

00:27:28,610 --> 00:27:32,720
end up with it with her team maintaining

00:27:30,410 --> 00:27:34,460
a package and actually if you look at

00:27:32,720 --> 00:27:37,700
the team there's only one person really

00:27:34,460 --> 00:27:39,410
active all the other the other problem

00:27:37,700 --> 00:27:41,450
there's three people potentially active

00:27:39,410 --> 00:27:42,980
but when they get a really hard bug they

00:27:41,450 --> 00:27:45,440
all sit back and hope that somebody else

00:27:42,980 --> 00:27:47,900
is going to deal with it we've all been

00:27:45,440 --> 00:27:50,030
there surely maybe put some lighters so

00:27:47,900 --> 00:27:52,310
I have also been or hijacking or

00:27:50,030 --> 00:27:55,520
salvaging packages and the way I did is

00:27:52,310 --> 00:27:58,370
I sent a mail to Devon levels of saying

00:27:55,520 --> 00:28:01,550
and seeing explicitly saying the

00:27:58,370 --> 00:28:04,160
maintainer saying I intend to hijack

00:28:01,550 --> 00:28:06,680
this package and I Tennant I intends to

00:28:04,160 --> 00:28:08,990
do this in one month's time please any

00:28:06,680 --> 00:28:12,140
one including that

00:28:08,990 --> 00:28:14,750
Reza's hand and I got zero answer so it

00:28:12,140 --> 00:28:16,610
just went away and I think if we codify

00:28:14,750 --> 00:28:19,070
something like that in some sort of

00:28:16,610 --> 00:28:21,260
procedure to hijack I mean that's quite

00:28:19,070 --> 00:28:23,270
sane because we rise the red flag

00:28:21,260 --> 00:28:25,070
publicly before doing it with a

00:28:23,270 --> 00:28:27,920
reasonable time frame I mean one month

00:28:25,070 --> 00:28:29,809
is reasonable for almost anyone and then

00:28:27,920 --> 00:28:32,090
it's also in a public place where anyone

00:28:29,809 --> 00:28:34,880
can command and if no one comments then

00:28:32,090 --> 00:28:39,320
we just go ahead sure that sounds very

00:28:34,880 --> 00:28:46,610
reasonable I mean II so intent to hijack

00:28:39,320 --> 00:28:48,860
a month it's a salvage definitely what

00:28:46,610 --> 00:28:50,900
at what point does it switchover of them

00:28:48,860 --> 00:28:52,790
from a former hijacking or Salvage this

00:28:50,900 --> 00:28:55,429
is a very important well I think we need

00:28:52,790 --> 00:28:58,280
to concentrate on this distinction yes

00:28:55,429 --> 00:28:59,990
salvaging and hijacking salvaging occurs

00:28:58,280 --> 00:29:02,690
when the original maintainer is not

00:28:59,990 --> 00:29:04,970
resisting hijacking occurs when the

00:29:02,690 --> 00:29:06,770
original maintainer is resisting even if

00:29:04,970 --> 00:29:09,440
that resistance consists only of sending

00:29:06,770 --> 00:29:11,540
email saying none right and this is a

00:29:09,440 --> 00:29:12,830
perfectly clear distinction and this

00:29:11,540 --> 00:29:14,840
means that you could basically always

00:29:12,830 --> 00:29:17,679
get away with salvaging because nobody

00:29:14,840 --> 00:29:19,910
is going to object yes and that's the

00:29:17,679 --> 00:29:22,280
basic way this has been going on and I

00:29:19,910 --> 00:29:24,320
don't think that's even well the idea of

00:29:22,280 --> 00:29:26,450
doing that as a rule isn't controversial

00:29:24,320 --> 00:29:31,700
either correct a difficult question is

00:29:26,450 --> 00:29:35,179
hijacking yeah I think that's a good

00:29:31,700 --> 00:29:38,780
point in but doesn't policy currently

00:29:35,179 --> 00:29:41,090
forbid hijacking in the way it's some

00:29:38,780 --> 00:29:42,650
people seem to think so all right

00:29:41,090 --> 00:29:46,160
because I've been told that repeatedly

00:29:42,650 --> 00:29:48,429
so perhaps it would be an action from

00:29:46,160 --> 00:29:52,340
this meeting to actually put in the

00:29:48,429 --> 00:29:56,570
premise of Salvage into policy is an

00:29:52,340 --> 00:29:58,130
actual actionable thing so it's clear so

00:29:56,570 --> 00:30:00,640
when this kind of thing comes along well

00:29:58,130 --> 00:30:00,640
volunteered

00:30:01,890 --> 00:30:07,449
[Laughter]

00:30:03,900 --> 00:30:07,449
[Applause]

00:30:11,530 --> 00:30:17,480
right so maybe we could just do a

00:30:15,500 --> 00:30:19,610
difference between salvaging and

00:30:17,480 --> 00:30:23,240
hijacking with salvaging being like

00:30:19,610 --> 00:30:25,250
between common sense human humans and

00:30:23,240 --> 00:30:27,370
with no resistance and then if there is

00:30:25,250 --> 00:30:29,240
a resistance refer that to whatever

00:30:27,370 --> 00:30:30,860
probably Technical Committee because

00:30:29,240 --> 00:30:33,140
there is a disagreement on some

00:30:30,860 --> 00:30:41,330
technical question achieves maintainer

00:30:33,140 --> 00:30:43,700
ship so okay so I was very interested in

00:30:41,330 --> 00:30:46,880
in Steve had this crazy suggestion of

00:30:43,700 --> 00:30:49,010
the the sort of magic hijacked token no

00:30:46,880 --> 00:30:53,960
film it well I thought that was really

00:30:49,010 --> 00:30:55,210
interesting something like that might

00:30:53,960 --> 00:31:01,640
actually work

00:30:55,210 --> 00:31:04,130
on the grounds that it doesn't depend so

00:31:01,640 --> 00:31:05,210
much or having to persuade some other

00:31:04,130 --> 00:31:08,150
bunch of people who haven't been

00:31:05,210 --> 00:31:11,000
involved in the previous history of the

00:31:08,150 --> 00:31:14,950
package that there's a problem and

00:31:11,000 --> 00:31:17,240
making a huge public flame war over it

00:31:14,950 --> 00:31:20,060
another possibility is that the

00:31:17,240 --> 00:31:22,190
Technical Committee might be somehow

00:31:20,060 --> 00:31:24,770
encouraged to take a more active role in

00:31:22,190 --> 00:31:30,500
this now at the moment the Technical

00:31:24,770 --> 00:31:31,790
Committee is that would be fill suggests

00:31:30,500 --> 00:31:33,200
yes maybe the Technical Committee should

00:31:31,790 --> 00:31:35,690
give out the tokens that would be a

00:31:33,200 --> 00:31:39,640
possibility or it could decide to

00:31:35,690 --> 00:31:39,640
restore the tokens afterwards Oh

00:31:46,870 --> 00:31:51,860
interesting idea now all of these things

00:31:49,430 --> 00:31:53,600
are possibilities and now interestingly

00:31:51,860 --> 00:31:56,540
the Technical Committee is currently in

00:31:53,600 --> 00:31:59,840
the process of work we're going to start

00:31:56,540 --> 00:32:02,000
a number of ers mostly kind of

00:31:59,840 --> 00:32:04,070
constitutional bug fixes but one of them

00:32:02,000 --> 00:32:07,520
is a thing that I invented which is a

00:32:04,070 --> 00:32:10,640
piece of advice from the developers to

00:32:07,520 --> 00:32:14,150
the TC saying we would like you to be

00:32:10,640 --> 00:32:15,680
more or less aggressive and that kind of

00:32:14,150 --> 00:32:18,050
thing will be very influential the

00:32:15,680 --> 00:32:20,200
Technical Committee and if

00:32:18,050 --> 00:32:23,929
you know I would encourage everybody to

00:32:20,200 --> 00:32:25,370
participate in that discussion and if

00:32:23,929 --> 00:32:29,390
you think that the Technical Committee

00:32:25,370 --> 00:32:32,000
should be more willing to hand over

00:32:29,390 --> 00:32:34,700
packages away from existing maintained

00:32:32,000 --> 00:32:37,820
errs then that's something that we need

00:32:34,700 --> 00:32:42,740
to know about do we have any questions

00:32:37,820 --> 00:32:48,920
from IRC at all is anyone following no

00:32:42,740 --> 00:32:50,840
okay no actually I think going through

00:32:48,920 --> 00:32:52,610
with that it sounds like a reasonable

00:32:50,840 --> 00:32:56,179
place maybe the Technical Committee

00:32:52,610 --> 00:32:57,740
would be the white body to give people

00:32:56,179 --> 00:32:59,600
back their tokens after they've been

00:32:57,740 --> 00:33:00,220
used that sounds like like a good way to

00:32:59,600 --> 00:33:03,020
go

00:33:00,220 --> 00:33:05,510
the only comment from IRC is that the

00:33:03,020 --> 00:33:15,740
people think that W n P P is easy to

00:33:05,510 --> 00:33:24,200
miss so that's it's interesting to see

00:33:15,740 --> 00:33:27,980
why people think that the downside of

00:33:24,200 --> 00:33:30,620
the w NP P of course is that the bugs

00:33:27,980 --> 00:33:33,440
don't actually appear on the packages

00:33:30,620 --> 00:33:35,870
own bug listing page that I'm aware of

00:33:33,440 --> 00:33:40,790
and it will be much much nicer if they

00:33:35,870 --> 00:33:45,110
did maybe I guess we have a solution for

00:33:40,790 --> 00:33:50,600
that yeah we have the effects yes roll

00:33:45,110 --> 00:33:52,850
message that you can use to sure I mean

00:33:50,600 --> 00:33:55,010
would it be useful actually just to add

00:33:52,850 --> 00:33:57,080
an extra extra piece of code on it you

00:33:55,010 --> 00:34:01,700
know the BTS is clearly easy to hack on

00:33:57,080 --> 00:34:05,420
you know to you know to add specifically

00:34:01,700 --> 00:34:07,550
any RFA's orphans whatever request for

00:34:05,420 --> 00:34:10,760
helps into the bug listing for the

00:34:07,550 --> 00:34:16,840
package itself or not just in the W n PP

00:34:10,760 --> 00:34:16,840
bug listing maybe just a thought

00:34:19,209 --> 00:34:28,849
so we have what sounds like a reasonable

00:34:22,519 --> 00:34:32,029
solution for salvaging how long should

00:34:28,849 --> 00:34:38,450
we leave a package before we consider it

00:34:32,029 --> 00:34:41,539
that is in need of Salvage MPP bugs

00:34:38,450 --> 00:34:45,889
maybe it's a good idea to start moving

00:34:41,539 --> 00:34:47,839
there all the workers for help request

00:34:45,889 --> 00:34:49,759
for adoption whatever locks into the

00:34:47,839 --> 00:34:52,969
package itself instead of Torrio MPP and

00:34:49,759 --> 00:34:54,979
use user tax to find them stuff like

00:34:52,969 --> 00:35:01,039
that instead of collecting everything in

00:34:54,979 --> 00:35:06,229
wmp yeah baby please I hope people are

00:35:01,039 --> 00:35:08,690
taking notes and all this so salvaging

00:35:06,229 --> 00:35:10,700
how long should we leave something just

00:35:08,690 --> 00:35:13,009
a question about salvaging if a package

00:35:10,700 --> 00:35:15,650
is removed from testing or a package is

00:35:13,009 --> 00:35:18,289
removed from CID and you reintroduce it

00:35:15,650 --> 00:35:20,499
that salvaging and you fix all the bugs

00:35:18,289 --> 00:35:23,449
and make it transition and that's fine

00:35:20,499 --> 00:35:27,259
yeah ow any weight periods before we

00:35:23,449 --> 00:35:30,380
start discussing weight periods maybe

00:35:27,259 --> 00:35:32,390
again it's really quite quite easy to

00:35:30,380 --> 00:35:36,650
get something removed believe me I've

00:35:32,390 --> 00:35:38,509
done it a lot if you then immediately

00:35:36,650 --> 00:35:40,640
upload there's nothing stopping you

00:35:38,509 --> 00:35:46,039
basically hijacking any package that way

00:35:40,640 --> 00:35:48,199
and again that isn't salvaging you know

00:35:46,039 --> 00:35:49,670
should we wait for the bit to the

00:35:48,199 --> 00:35:52,219
feather to be a nasty bug open for a

00:35:49,670 --> 00:35:54,589
month should we wait for it clearly to

00:35:52,219 --> 00:35:57,380
be not to be not maintained but how do

00:35:54,589 --> 00:36:00,049
we sell it clearly not maintained what I

00:35:57,380 --> 00:36:02,989
would put in in an eventual reference

00:36:00,049 --> 00:36:07,549
would be whatever discussed us with

00:36:02,989 --> 00:36:09,619
people and if you or anyone else think

00:36:07,549 --> 00:36:12,019
it's reasonable to just salvage this

00:36:09,619 --> 00:36:13,609
back then this package then just go

00:36:12,019 --> 00:36:15,890
ahead with the rest of the procedures

00:36:13,609 --> 00:36:18,349
that right that might be one month delay

00:36:15,890 --> 00:36:22,369
yeah announced on Debian level and I

00:36:18,349 --> 00:36:24,199
mean not codifying what's what leads to

00:36:22,369 --> 00:36:26,150
this situation might be just insane

00:36:24,199 --> 00:36:28,609
enough if we have the rest of the

00:36:26,150 --> 00:36:32,030
procedure reasonably written down

00:36:28,609 --> 00:36:35,540
I think sure right absolutely

00:36:32,030 --> 00:36:37,760
and it's it's important that if we get

00:36:35,540 --> 00:36:39,020
we don't have to say why somebody wants

00:36:37,760 --> 00:36:40,670
to salvage the package all we have to

00:36:39,020 --> 00:36:43,610
say is the existing maintainer is not

00:36:40,670 --> 00:36:45,290
resisting and that will avoid us get

00:36:43,610 --> 00:36:47,690
into the situation where people claim to

00:36:45,290 --> 00:36:48,620
be salvaging something but actually they

00:36:47,690 --> 00:36:59,030
want to hijack it

00:36:48,620 --> 00:37:02,270
correct so okay we have a salvaging

00:36:59,030 --> 00:37:03,950
process when the maintainer does argue

00:37:02,270 --> 00:37:07,670
because there are some who will always

00:37:03,950 --> 00:37:08,650
and then it becomes a hijack what do we

00:37:07,670 --> 00:37:11,140
do then

00:37:08,650 --> 00:37:14,870
do we let an existing maintainer

00:37:11,140 --> 00:37:16,220
essentially poison the well and make

00:37:14,870 --> 00:37:18,440
sure that the package is never going to

00:37:16,220 --> 00:37:21,920
be effectively maintained or at what

00:37:18,440 --> 00:37:23,180
point do we overrule them do we just at

00:37:21,920 --> 00:37:25,190
that point bounce it straight to the

00:37:23,180 --> 00:37:34,820
tech committee before we have the flame

00:37:25,190 --> 00:37:36,050
war I have been trying to persuade my

00:37:34,820 --> 00:37:38,090
colleagues on the Technical Committee

00:37:36,050 --> 00:37:41,000
that this is something that we should be

00:37:38,090 --> 00:37:44,630
doing there I think not all entirely

00:37:41,000 --> 00:37:47,570
convinced that they may want to do it or

00:37:44,630 --> 00:37:49,070
and be could do it and one of the GRS

00:37:47,570 --> 00:37:50,180
that we are proposing is to make it

00:37:49,070 --> 00:37:52,070
clearer that the Technical Committee

00:37:50,180 --> 00:37:54,500
should be allowed to have private

00:37:52,070 --> 00:37:56,260
conversations with people who are

00:37:54,500 --> 00:37:58,550
raising an issue and that will make it

00:37:56,260 --> 00:38:01,450
hopefully a lot easier you will be able

00:37:58,550 --> 00:38:04,100
to go to the bt and say well I sent a

00:38:01,450 --> 00:38:05,750
salvage request for this package but the

00:38:04,100 --> 00:38:08,240
maintainer objected and actually look

00:38:05,750 --> 00:38:10,070
it's not really maintained at all you

00:38:08,240 --> 00:38:11,570
know what do you advise can you help and

00:38:10,070 --> 00:38:13,130
then the technical committee might look

00:38:11,570 --> 00:38:14,450
at the bugs and might email the

00:38:13,130 --> 00:38:15,950
maintainer and have a conversation with

00:38:14,450 --> 00:38:18,020
the maintainer and hopefully it will

00:38:15,950 --> 00:38:20,120
either the problem will be sorted out or

00:38:18,020 --> 00:38:22,070
the technical committee will become

00:38:20,120 --> 00:38:25,100
convinced that the hijack was actually

00:38:22,070 --> 00:38:29,000
necessary in some kind of marvelous

00:38:25,100 --> 00:38:32,990
ideal world okay cool I think we have

00:38:29,000 --> 00:38:37,540
answers do we have any more opinions any

00:38:32,990 --> 00:38:37,540
more questions I'll see

00:38:38,730 --> 00:38:43,770
I guess not I would like to say thank

00:38:41,640 --> 00:38:45,930
you Ian for coming up with salvaging

00:38:43,770 --> 00:38:49,260
which is something I've not so it was

00:38:45,930 --> 00:38:51,180
you so it film we're very very sorry

00:38:49,260 --> 00:38:55,950
we've stolen all your ideas he's the

00:38:51,180 --> 00:39:04,200
father name of apologies yes corrected

00:38:55,950 --> 00:39:05,700
me I assume it was his film so yes thank

00:39:04,200 --> 00:39:07,800
you to Phil for coming up with salvaging

00:39:05,700 --> 00:39:12,329
it is a it's a very descriptive useful

00:39:07,800 --> 00:39:13,740
term and so yes I think we have

00:39:12,329 --> 00:39:16,640
reasonable guidelines if you think

00:39:13,740 --> 00:39:19,950
something needs salvaging say so and

00:39:16,640 --> 00:39:23,630
described it as salvaging in in your

00:39:19,950 --> 00:39:26,490
mail to Debian devil and see seeing

00:39:23,630 --> 00:39:28,829
ideally the team maintained errs the

00:39:26,490 --> 00:39:31,920
maintained is individually any uploaders

00:39:28,829 --> 00:39:34,170
and let them respond if there is a real

00:39:31,920 --> 00:39:36,450
argument and people really don't want to

00:39:34,170 --> 00:39:38,609
either fix the bugs that they've been

00:39:36,450 --> 00:39:40,589
neglecting all that you take it over

00:39:38,609 --> 00:39:42,030
that's the point to take it straight to

00:39:40,589 --> 00:39:45,950
the tech committee and we'll keep them

00:39:42,030 --> 00:39:48,900
busy now now that they're having monthly

00:39:45,950 --> 00:39:50,250
IRC meetings that you know hopefully a

00:39:48,900 --> 00:39:53,339
lot of this should happen more rapidly

00:39:50,250 --> 00:39:58,200
because again um a month is a reasonable

00:39:53,339 --> 00:40:01,040
time period I think okay thank you

00:39:58,200 --> 00:40:01,040
everybody for coming

00:40:02,490 --> 00:40:05,820
[Music]

00:40:03,200 --> 00:40:05,820

YouTube URL: https://www.youtube.com/watch?v=bQq1nNhsujY


