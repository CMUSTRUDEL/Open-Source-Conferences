Title: Integrating Emdebian into Debian
Publication date: 2017-11-28
Playlist: DebConf 12
Description: 
	by Neil Williams

At: DebConf12
https://debconf12.debconf.org/
Room: Aula Magna
Scheduled start: 2012-07-10 18:00:00
Captions: 
	00:00:02,270 --> 00:00:07,290
how many people know a little bit about

00:00:04,770 --> 00:00:13,650
em Debian or this know what we've been

00:00:07,290 --> 00:00:15,540
doing yes I know Nick does so I've got

00:00:13,650 --> 00:00:19,410
the the main picture up there trying to

00:00:15,540 --> 00:00:22,949
give some idea of the Eva's of

00:00:19,410 --> 00:00:24,830
everything that we have the names are

00:00:22,949 --> 00:00:28,109
based

00:00:24,830 --> 00:00:29,820
the names are based on squeeze but we've

00:00:28,109 --> 00:00:33,570
kept the names and we're going to keep

00:00:29,820 --> 00:00:37,260
these names then for releases alongside

00:00:33,570 --> 00:00:40,379
Debian so grip is the the lighter touch

00:00:37,260 --> 00:00:45,510
we keep the binary compatibility but we

00:00:40,379 --> 00:00:47,730
take out about 40% of the actual files

00:00:45,510 --> 00:00:49,649
within packages we don't recompile the

00:00:47,730 --> 00:00:52,199
packages we don't change them at all it

00:00:49,649 --> 00:00:58,070
just means that you get a smaller basic

00:00:52,199 --> 00:00:58,070
system the

00:01:29,140 --> 00:01:33,070
okay that's better

00:01:33,550 --> 00:01:38,150
so that diagram and the information we

00:01:36,410 --> 00:01:41,810
need from that is all on the em Debian

00:01:38,150 --> 00:01:45,290
website the main thing about this talk

00:01:41,810 --> 00:01:47,660
is going to be based on a gobby document

00:01:45,290 --> 00:01:52,970
so if you've got a chance to load up

00:01:47,660 --> 00:01:55,030
that go be Debbie underdog we're gonna

00:01:52,970 --> 00:01:57,560
be going through some of the

00:01:55,030 --> 00:01:58,820
expectations where people have I'm not

00:01:57,560 --> 00:02:01,940
going to spend most of the time actually

00:01:58,820 --> 00:02:06,740
talking from here I want to find out

00:02:01,940 --> 00:02:08,330
what people expect from them Debbie and

00:02:06,740 --> 00:02:09,920
what we can do for them what we can

00:02:08,330 --> 00:02:16,130
actually provide already where you want

00:02:09,920 --> 00:02:18,400
us to go from here on so if we go

00:02:16,130 --> 00:02:23,470
through just the first part of the

00:02:18,400 --> 00:02:25,850
that's the brief summary of the grip

00:02:23,470 --> 00:02:28,100
it's a question of also what we mean by

00:02:25,850 --> 00:02:32,330
embedded we don't just mean another

00:02:28,100 --> 00:02:34,820
smartphone another tablet I a big use

00:02:32,330 --> 00:02:36,709
case for particularly M Debian grip and

00:02:34,820 --> 00:02:39,050
one of the main reasons for trying to

00:02:36,709 --> 00:02:42,260
push it to go into the main Debian

00:02:39,050 --> 00:02:45,110
archive is these custom embedded devices

00:02:42,260 --> 00:02:47,269
that have a single purpose and the

00:02:45,110 --> 00:02:52,700
actual system itself is hidden away from

00:02:47,269 --> 00:02:55,400
the user you don't you don't offer the

00:02:52,700 --> 00:02:58,640
main Debian UI to the user at all you

00:02:55,400 --> 00:03:00,709
have a completely all-inclusive system

00:02:58,640 --> 00:03:02,570
that does all the power management it

00:03:00,709 --> 00:03:05,090
does all these suspend and the does the

00:03:02,570 --> 00:03:07,250
main operations the user wants but it

00:03:05,090 --> 00:03:09,530
doesn't actually offer any of the

00:03:07,250 --> 00:03:11,269
underlying are parts of the system which

00:03:09,530 --> 00:03:14,750
means that you can get rid of the all

00:03:11,269 --> 00:03:16,519
the interactivity of the base system and

00:03:14,750 --> 00:03:18,680
just let it do its main job you don't

00:03:16,519 --> 00:03:20,150
need the man pages for deep package and

00:03:18,680 --> 00:03:22,880
also I think you'll never see the

00:03:20,150 --> 00:03:25,730
command line as a user so you get this

00:03:22,880 --> 00:03:28,250
whole idea of a locked-in system it can

00:03:25,730 --> 00:03:31,850
be in our case a communication aid it

00:03:28,250 --> 00:03:33,500
could be a unit controlling a production

00:03:31,850 --> 00:03:39,820
line and a factory it could be all these

00:03:33,500 --> 00:03:39,820
kinds of static systems question

00:03:41,450 --> 00:03:48,200
if you got a question at any time just

00:03:45,080 --> 00:03:48,200
jump in

00:03:54,290 --> 00:03:58,010
so if someone's got the GABAA document

00:03:56,510 --> 00:03:59,540
open if you can actually start making

00:03:58,010 --> 00:04:02,030
notes particular of questions that come

00:03:59,540 --> 00:04:03,860
up and yeah and the answers yeah I just

00:04:02,030 --> 00:04:11,590
was wondering if you could talk a little

00:04:03,860 --> 00:04:11,590
bit about being used now okay

00:04:12,459 --> 00:04:17,000
particularly with them Debian grip we

00:04:14,540 --> 00:04:21,229
use it in devices like communication

00:04:17,000 --> 00:04:24,380
aids so we have a system that just make

00:04:21,229 --> 00:04:27,410
sure that MD we can provide enough space

00:04:24,380 --> 00:04:29,810
on the device the actual available space

00:04:27,410 --> 00:04:31,370
is very limited if we have to actually

00:04:29,810 --> 00:04:33,139
put another chip on the board we have to

00:04:31,370 --> 00:04:35,889
take something off so we need to make

00:04:33,139 --> 00:04:42,460
the Debian system smaller but still

00:04:35,889 --> 00:04:42,460
suitable for what we need to do so right

00:04:43,360 --> 00:04:49,430
are there any commercial uses but that

00:04:48,050 --> 00:04:51,260
is a commercial that is a commercial

00:04:49,430 --> 00:04:52,729
product though three commercial products

00:04:51,260 --> 00:04:58,900
already based on this in the market

00:04:52,729 --> 00:05:01,820
there's also I so working on there's a

00:04:58,900 --> 00:05:04,729
point using em Debian yeah so there's

00:05:01,820 --> 00:05:08,210
the electrical car recharging systems

00:05:04,729 --> 00:05:09,979
again that's a static unit it minimal

00:05:08,210 --> 00:05:11,930
interactivity with the user but it's

00:05:09,979 --> 00:05:14,030
just there to make sure it runs it keeps

00:05:11,930 --> 00:05:15,979
on going it logs things are going on it

00:05:14,030 --> 00:05:19,010
keeps in contact with this base station

00:05:15,979 --> 00:05:20,900
and it just manages that one little part

00:05:19,010 --> 00:05:24,470
in combination with another one so you

00:05:20,900 --> 00:05:28,070
have got these fixed installations

00:05:24,470 --> 00:05:30,919
minimal interactivity or full

00:05:28,070 --> 00:05:34,310
functionality but the key point is that

00:05:30,919 --> 00:05:36,199
the software on that individual unit is

00:05:34,310 --> 00:05:38,360
binary compatible with what the

00:05:36,199 --> 00:05:40,310
developers are using back in-house to

00:05:38,360 --> 00:05:42,260
actually write the software and debug it

00:05:40,310 --> 00:05:46,599
and get all the problems out you've got

00:05:42,260 --> 00:05:46,599
this match all the way down the stack

00:05:53,039 --> 00:05:56,550
so I was trying to cover that in the

00:05:54,809 --> 00:06:01,649
first part of the gobby document there

00:05:56,550 --> 00:06:04,139
and again in our use case we do have a

00:06:01,649 --> 00:06:06,869
limited amount of space on the board we

00:06:04,139 --> 00:06:09,659
want to try and pack in as much usable

00:06:06,869 --> 00:06:12,149
data that the user can actually access

00:06:09,659 --> 00:06:13,680
rather than adding it out with the

00:06:12,149 --> 00:06:15,569
Debian system we want for our own

00:06:13,680 --> 00:06:18,059
reasons but we want to have as many of

00:06:15,569 --> 00:06:19,949
these big good voice synthesizer files

00:06:18,059 --> 00:06:21,719
that we have to use we want to get as

00:06:19,949 --> 00:06:24,089
many of them onto the device as we can

00:06:21,719 --> 00:06:31,860
without sacrificing actual physical

00:06:24,089 --> 00:06:35,520
space on the circuit board so grip has

00:06:31,860 --> 00:06:38,039
been going now since Lenny

00:06:35,520 --> 00:06:41,089
we made a parallel release with Lenny

00:06:38,039 --> 00:06:44,129
we've made it release alongside squeeze

00:06:41,089 --> 00:06:47,279
we are in line to make another release

00:06:44,129 --> 00:06:50,159
exactly parallel with wheezy when wheezy

00:06:47,279 --> 00:06:52,229
comes out so we've got this track record

00:06:50,159 --> 00:06:56,159
going back through that and we've

00:06:52,229 --> 00:06:58,649
managed to now persuade teams like wanna

00:06:56,159 --> 00:07:02,189
build after he mastered es a release

00:06:58,649 --> 00:07:05,039
team that we have a sufficient backing

00:07:02,189 --> 00:07:07,169
within the community within Debian

00:07:05,039 --> 00:07:11,459
within the users that we can actually

00:07:07,169 --> 00:07:13,259
push to have our packages in parallel

00:07:11,459 --> 00:07:15,809
across the main archive it'll make it

00:07:13,259 --> 00:07:18,089
easier for commercial companies to see

00:07:15,809 --> 00:07:20,339
the packages and get used to use them

00:07:18,089 --> 00:07:22,289
and it will get us more feedback about

00:07:20,339 --> 00:07:23,819
whether we're missing a few packages

00:07:22,289 --> 00:07:26,039
whether we need to take some packages

00:07:23,819 --> 00:07:28,069
out of our selection and all those kinds

00:07:26,039 --> 00:07:29,999
of processes so I've been working with

00:07:28,069 --> 00:07:32,759
particularly the eff to be master

00:07:29,999 --> 00:07:36,769
recently trying to work out exactly what

00:07:32,759 --> 00:07:39,899
we need in DAC to allow us to have a

00:07:36,769 --> 00:07:42,599
parallel suite so we'll have something

00:07:39,899 --> 00:07:48,120
like CID grip wheezy grip

00:07:42,599 --> 00:07:50,669
they are binary only upload and the the

00:07:48,120 --> 00:07:55,110
back software will actually that they

00:07:50,669 --> 00:07:58,949
change sources to be copied across all

00:07:55,110 --> 00:08:02,610
displayed within the sources GZ as there

00:07:58,949 --> 00:08:06,120
were in main archive so we're running

00:08:02,610 --> 00:08:07,110
that through a DSA managed bill box it

00:08:06,120 --> 00:08:10,080
gets

00:08:07,110 --> 00:08:11,580
directly from back it builds the the

00:08:10,080 --> 00:08:14,520
updated version puts it straight back

00:08:11,580 --> 00:08:17,930
into the archive so within a very short

00:08:14,520 --> 00:08:20,430
space of time we can process the daily

00:08:17,930 --> 00:08:22,650
churn within unstable for seven

00:08:20,430 --> 00:08:24,900
architectures the actual processing

00:08:22,650 --> 00:08:27,870
program is very fast all we're doing is

00:08:24,900 --> 00:08:32,310
deep package unpack remove some files to

00:08:27,870 --> 00:08:33,690
a package repack so there's a lot that

00:08:32,310 --> 00:08:35,850
we can I should do with that its

00:08:33,690 --> 00:08:38,010
architecture neutral we can run the

00:08:35,850 --> 00:08:41,790
server on any architectures we have a

00:08:38,010 --> 00:08:44,580
nice fast amd64 boxes doing the work we

00:08:41,790 --> 00:08:46,860
have a local mirror mounted on there so

00:08:44,580 --> 00:08:52,620
the whole thing just turn churn through

00:08:46,860 --> 00:08:54,360
very and thanks to Steve we are

00:08:52,620 --> 00:08:56,820
expecting to see the image support as

00:08:54,360 --> 00:08:59,010
well we had a we had a first go with it

00:08:56,820 --> 00:09:00,900
with squeeze there were a few problems

00:08:59,010 --> 00:09:03,810
we picked up and so we'll try and build

00:09:00,900 --> 00:09:05,490
those into the into the process in from

00:09:03,810 --> 00:09:08,370
then on and we're looking to make

00:09:05,490 --> 00:09:16,020
another go through with the CD images

00:09:08,370 --> 00:09:19,560
with Weezy now if there's any questions

00:09:16,020 --> 00:09:21,450
on what we're trying to do with the the

00:09:19,560 --> 00:09:23,970
integration what its gonna mean for you

00:09:21,450 --> 00:09:27,330
as maintainer x' because you're gonna

00:09:23,970 --> 00:09:29,730
have your package listed now in two

00:09:27,330 --> 00:09:32,550
suites you'll upload the state and

00:09:29,730 --> 00:09:36,360
within hopefully within the day you'll

00:09:32,550 --> 00:09:38,040
have your package once it shows up on

00:09:36,360 --> 00:09:40,970
the bill DS it'll show up on our ability

00:09:38,040 --> 00:09:45,030
and they'll be uploaded to said grip

00:09:40,970 --> 00:09:47,190
we'll give it a version suffix so you

00:09:45,030 --> 00:09:49,260
can tell us actually being changes the

00:09:47,190 --> 00:09:53,790
binary it'll end up with whatever your

00:09:49,260 --> 00:09:55,890
version is suffix with em1 but the

00:09:53,790 --> 00:09:59,850
source is completely unchanged your

00:09:55,890 --> 00:10:02,220
signature on the DSC will be valid on

00:09:59,850 --> 00:10:04,920
the signature in the sources that you

00:10:02,220 --> 00:10:07,740
download from cid grip and the release

00:10:04,920 --> 00:10:10,230
team will be working on allowing the

00:10:07,740 --> 00:10:12,870
package to migrate from cid grip into

00:10:10,230 --> 00:10:18,480
easy grip at the same time as it moves

00:10:12,870 --> 00:10:20,100
from sid into easing it'll be we've lost

00:10:18,480 --> 00:10:20,910
one by that point we were hoping to

00:10:20,100 --> 00:10:23,550
actually have the

00:10:20,910 --> 00:10:29,340
a lot of this integration in place by

00:10:23,550 --> 00:10:32,700
then so what are the questions on what

00:10:29,340 --> 00:10:40,580
it means as a maintainer to have this

00:10:32,700 --> 00:10:40,580
parallel versioning in the archive okay

00:10:48,760 --> 00:10:55,430
yeah if I have a debian system and then

00:10:52,640 --> 00:10:58,279
I find some bugs should I file the box

00:10:55,430 --> 00:11:01,070
against the Debian packages or or

00:10:58,279 --> 00:11:02,149
currently we were using bill vetoed and

00:11:01,070 --> 00:11:04,910
Debian the dork

00:11:02,149 --> 00:11:08,600
as I said with a package or how far this

00:11:04,910 --> 00:11:10,760
integration is going to the full Debian

00:11:08,600 --> 00:11:12,709
in the initial stages particularly when

00:11:10,760 --> 00:11:14,690
we're putting into the main archive for

00:11:12,709 --> 00:11:17,450
the first probably for the first stable

00:11:14,690 --> 00:11:19,040
release will we are working with

00:11:17,450 --> 00:11:21,260
reportbug maintainer as to allow that

00:11:19,040 --> 00:11:24,200
when report though picks up to be

00:11:21,260 --> 00:11:26,839
reporting against the version that is

00:11:24,200 --> 00:11:29,209
em1 the first place it'll go is Bill

00:11:26,839 --> 00:11:32,649
diem Debian the dog because although

00:11:29,209 --> 00:11:35,990
policy says that no packages should

00:11:32,649 --> 00:11:37,790
misbehave if their user share docx files

00:11:35,990 --> 00:11:39,470
are removed and their copyright file is

00:11:37,790 --> 00:11:41,660
compressed and various other changes

00:11:39,470 --> 00:11:45,829
that we make to really reduce the size

00:11:41,660 --> 00:11:47,990
of the way of the the doc Deb then we're

00:11:45,829 --> 00:11:50,120
just being cautious making sure that

00:11:47,990 --> 00:11:51,950
there's no knock-on effects from those

00:11:50,120 --> 00:11:53,300
we haven't seen any knock-on effects

00:11:51,950 --> 00:11:56,390
from the packages we've been looking at

00:11:53,300 --> 00:12:00,579
and we do have a limited selection of

00:11:56,390 --> 00:12:05,750
packages we only take 10% okay currently

00:12:00,579 --> 00:12:11,720
we will there be tools available to do

00:12:05,750 --> 00:12:14,269
these procedures with derivatives if

00:12:11,720 --> 00:12:16,459
tribulus want em debian is a derivative

00:12:14,269 --> 00:12:18,649
of a kind already but if derivatives

00:12:16,459 --> 00:12:20,690
want to take our packages on to another

00:12:18,649 --> 00:12:25,250
level that is fine that's just gonna

00:12:20,690 --> 00:12:28,790
work through Paul didn't you think it's

00:12:25,250 --> 00:12:33,970
gonna be any particular call on that IV

00:12:28,790 --> 00:12:37,370
heard anybody I haven't heard any

00:12:33,970 --> 00:12:41,380
derivatives interested in this sort of

00:12:37,370 --> 00:12:41,380
thing no okay

00:12:43,150 --> 00:12:50,840
and so when you say that you're going to

00:12:46,940 --> 00:12:53,000
have bugs filed against em Debian is

00:12:50,840 --> 00:12:56,030
there anything planned for changing and

00:12:53,000 --> 00:12:58,000
in the future because I think if Debian

00:12:56,030 --> 00:13:00,700
is indeed going to be part of Debian

00:12:58,000 --> 00:13:02,990
much as sports are part of Debian

00:13:00,700 --> 00:13:04,790
maintenance are responsible making sure

00:13:02,990 --> 00:13:07,610
that their packages work in every

00:13:04,790 --> 00:13:09,680
situation in Debian and if they be in is

00:13:07,610 --> 00:13:12,110
part of Debian then that is also part of

00:13:09,680 --> 00:13:13,190
their responsibility so maybe in the

00:13:12,110 --> 00:13:14,540
short term that might be a good thing

00:13:13,190 --> 00:13:16,490
but you have plans in a long time to

00:13:14,540 --> 00:13:18,500
change that long term yes long term

00:13:16,490 --> 00:13:21,920
would be the goal to actually move but

00:13:18,500 --> 00:13:27,410
for example one of the subs we have a

00:13:21,920 --> 00:13:30,830
few little bugs in - for one which seems

00:13:27,410 --> 00:13:33,590
to insist that usage a man one exists

00:13:30,830 --> 00:13:36,260
before it runs it pre insta compiled

00:13:33,590 --> 00:13:37,940
binary maintainer script so there are

00:13:36,260 --> 00:13:40,310
lots of little bugs like that that we

00:13:37,940 --> 00:13:42,530
have to work around currently so we just

00:13:40,310 --> 00:13:44,630
making sure that those kinds of things

00:13:42,530 --> 00:13:48,710
can get ironed out between a normal

00:13:44,630 --> 00:13:52,910
release cycle there's a minor annoyance

00:13:48,710 --> 00:13:56,480
with xorg I think it's the X server or

00:13:52,910 --> 00:14:01,100
core package it expects a file doing

00:13:56,480 --> 00:14:02,840
exist invalid x11 and little things like

00:14:01,100 --> 00:14:04,880
that it's just making sure that we've

00:14:02,840 --> 00:14:07,700
got time to push those through the

00:14:04,880 --> 00:14:10,730
system but yes the aim would be then you

00:14:07,700 --> 00:14:13,610
can just have a quick check through the

00:14:10,730 --> 00:14:15,680
md5 sums because the checksums have not

00:14:13,610 --> 00:14:17,270
changed or anything you've compiled so

00:14:15,680 --> 00:14:19,430
you can just say well that is the same

00:14:17,270 --> 00:14:23,990
checksum therefore it's likely to be a

00:14:19,430 --> 00:14:28,510
bug in binary itself and then get that

00:14:23,990 --> 00:14:28,510
reassigned Nick deliver

00:14:38,110 --> 00:14:45,390
a font I'll just clarify as well how

00:14:42,100 --> 00:14:48,459
your packages get into em Debian grip

00:14:45,390 --> 00:14:50,200
core packages yes we have to have them

00:14:48,459 --> 00:14:52,750
in there so anything that is priority

00:14:50,200 --> 00:14:54,459
required important like that the

00:14:52,750 --> 00:14:57,070
majority of those will end up be

00:14:54,459 --> 00:15:00,370
imported into em Debian grip but the

00:14:57,070 --> 00:15:03,730
optional and extra packages they'll be

00:15:00,370 --> 00:15:05,380
brought in if they are asked for if

00:15:03,730 --> 00:15:07,149
they're not or they're already we're

00:15:05,380 --> 00:15:11,430
looking for packages that have some kind

00:15:07,149 --> 00:15:14,500
of embedded purpose so we tend to go for

00:15:11,430 --> 00:15:16,209
the smaller implementations of a

00:15:14,500 --> 00:15:19,450
particular protocol will tend to go for

00:15:16,209 --> 00:15:23,380
it with the if we go for a graphical

00:15:19,450 --> 00:15:25,480
desktop it'll be LXDE xfce will pull in

00:15:23,380 --> 00:15:29,440
little bits from here and there as

00:15:25,480 --> 00:15:31,360
people asked for them but it'll be the

00:15:29,440 --> 00:15:33,940
libraries that the maintain is look

00:15:31,360 --> 00:15:37,510
after they'll be brought in as automatic

00:15:33,940 --> 00:15:39,220
dependency checks via the the buildi as

00:15:37,510 --> 00:15:41,290
we do it so you'll if you're maintaining

00:15:39,220 --> 00:15:44,790
a library you may suddenly notice that

00:15:41,290 --> 00:15:49,149
it's been brought in because a

00:15:44,790 --> 00:15:51,310
application we've had in for some time

00:15:49,149 --> 00:15:54,730
has gained that dependency through some

00:15:51,310 --> 00:15:57,370
other means so I know that the primary

00:15:54,730 --> 00:16:00,130
focus has been on trying to reduce the

00:15:57,370 --> 00:16:02,589
on disk footprint of the install

00:16:00,130 --> 00:16:04,779
packages one of the things I've run into

00:16:02,589 --> 00:16:08,529
a couple times again recently playing

00:16:04,779 --> 00:16:12,190
around with very small systems with you

00:16:08,529 --> 00:16:14,860
know constrain Ram in particular is how

00:16:12,190 --> 00:16:19,000
badly some of Debian's

00:16:14,860 --> 00:16:21,760
core tools behave in small memory small

00:16:19,000 --> 00:16:23,170
ramp systems these days has there been

00:16:21,760 --> 00:16:25,350
any attention paid to that have you

00:16:23,170 --> 00:16:28,990
thought about it at all I mean obviously

00:16:25,350 --> 00:16:31,510
if you if you can deliver a subset of

00:16:28,990 --> 00:16:33,220
all packages in Debian represented by a

00:16:31,510 --> 00:16:36,670
different packages file you immediately

00:16:33,220 --> 00:16:39,699
relieve a lot of the pressure that dpkg

00:16:36,670 --> 00:16:41,860
and apt yes you know cause when you try

00:16:39,699 --> 00:16:43,600
to use them on a really small system but

00:16:41,860 --> 00:16:44,430
I was just wondering if you or anyone

00:16:43,600 --> 00:16:46,260
else hears

00:16:44,430 --> 00:16:49,800
given much thought recently to sort of

00:16:46,260 --> 00:16:52,920
the the executing memory footprint of

00:16:49,800 --> 00:16:56,790
core Debian tools important to maintain

00:16:52,920 --> 00:17:01,110
a dot based system the only real way you

00:16:56,790 --> 00:17:04,439
can deal with memory footprint is to

00:17:01,110 --> 00:17:07,319
change the binary functionality of that

00:17:04,439 --> 00:17:11,100
particular package so that isn't going

00:17:07,319 --> 00:17:13,199
to be grip but we are trying once we get

00:17:11,100 --> 00:17:15,449
multi arch cross building back in place

00:17:13,199 --> 00:17:17,850
and we can actually have a another

00:17:15,449 --> 00:17:19,559
buildi processing these kinds of

00:17:17,850 --> 00:17:22,319
applause on our regular basis cross

00:17:19,559 --> 00:17:23,600
building a number of packages then one

00:17:22,319 --> 00:17:26,699
of the things we're looking at there is

00:17:23,600 --> 00:17:29,580
dropping big dependency chains turning

00:17:26,699 --> 00:17:33,450
off a lot of functions in core libraries

00:17:29,580 --> 00:17:35,670
so the default in Debian is that if it

00:17:33,450 --> 00:17:37,890
works you enable that switch in the

00:17:35,670 --> 00:17:40,740
configure options the default with M

00:17:37,890 --> 00:17:43,800
Debian crush will be do we need it do we

00:17:40,740 --> 00:17:45,450
want it can we get rid of it and what

00:17:43,800 --> 00:17:47,580
the system's they'll work if we turn it

00:17:45,450 --> 00:17:50,370
off so we will be turned that on its

00:17:47,580 --> 00:17:53,100
head and that should deliver at least in

00:17:50,370 --> 00:17:55,920
the in the packages of half that kind of

00:17:53,100 --> 00:17:57,420
support already upstream the difficulty

00:17:55,920 --> 00:17:58,740
with that and the bugs they'll come out

00:17:57,420 --> 00:18:01,620
of that is that that particular

00:17:58,740 --> 00:18:05,120
combination of options is probably going

00:18:01,620 --> 00:18:07,860
to be only activated in our distribution

00:18:05,120 --> 00:18:10,050
most testing of these kind of up streams

00:18:07,860 --> 00:18:13,140
will be in the Debian model turn

00:18:10,050 --> 00:18:15,720
everything on until it breaks the actual

00:18:13,140 --> 00:18:19,830
limited role of oh that's not were there

00:18:15,720 --> 00:18:22,620
anymore and getting strange breakage to

00:18:19,830 --> 00:18:24,660
at the later point I was insane in

00:18:22,620 --> 00:18:27,030
addition to that it also could cause

00:18:24,660 --> 00:18:28,860
weird dependency problems you've got

00:18:27,030 --> 00:18:29,429
something what assumes functionality

00:18:28,860 --> 00:18:32,250
yeah

00:18:29,429 --> 00:18:34,500
yeah so what part of the crush process

00:18:32,250 --> 00:18:36,120
will have to be right now we've changed

00:18:34,500 --> 00:18:38,610
that bida library we've got to rebuild

00:18:36,120 --> 00:18:42,480
everything that grew and reverse depends

00:18:38,610 --> 00:18:44,670
on it and get them all to look for the

00:18:42,480 --> 00:18:47,460
new symbols yep one of the advantages of

00:18:44,670 --> 00:18:51,080
having a reduced package set available

00:18:47,460 --> 00:18:53,120
in Grif is it's become much smaller

00:18:51,080 --> 00:18:54,740
the package lists become much smaller on

00:18:53,120 --> 00:18:56,840
the ice and so when you run out for

00:18:54,740 --> 00:18:58,010
example you don't find them that you're

00:18:56,840 --> 00:19:01,340
on a round to memory just when

00:18:58,010 --> 00:19:03,050
processing also if if anyone's worried

00:19:01,340 --> 00:19:04,370
that you haven't got the full access to

00:19:03,050 --> 00:19:08,480
the repository you can of course just

00:19:04,370 --> 00:19:15,260
mix it with the full Debian Suites as

00:19:08,480 --> 00:19:17,630
well so you you can't have when you mix

00:19:15,260 --> 00:19:20,810
em Debian and Debian there are a couple

00:19:17,630 --> 00:19:23,480
of things you want to think about em

00:19:20,810 --> 00:19:25,510
Debian version suffixes mean that um

00:19:23,480 --> 00:19:29,060
Debian package is always a newer version

00:19:25,510 --> 00:19:32,080
so but there is a delay particularly if

00:19:29,060 --> 00:19:35,270
you are using one of the main

00:19:32,080 --> 00:19:37,460
architectures AMD 64 or i386 which

00:19:35,270 --> 00:19:38,930
maintain errs upload as binaries if you

00:19:37,460 --> 00:19:42,320
had source or only uploads this would

00:19:38,930 --> 00:19:44,870
change but we have to wait for the

00:19:42,320 --> 00:19:46,790
package to arrive off the build DS and

00:19:44,870 --> 00:19:48,710
onto the local mirror before we get

00:19:46,790 --> 00:19:50,150
chance to process that out that package

00:19:48,710 --> 00:19:51,320
and put it back into the archive and

00:19:50,150 --> 00:19:52,820
then there's a wait for the next D

00:19:51,320 --> 00:19:55,400
install before it appears on the mirror

00:19:52,820 --> 00:19:58,970
so you will get these particularly and

00:19:55,400 --> 00:20:02,060
in an unstable you will get these jumps

00:19:58,970 --> 00:20:04,070
where if you update regularly you'll

00:20:02,060 --> 00:20:06,800
have the Debian package suddenly

00:20:04,070 --> 00:20:08,960
appearing and then at the next update

00:20:06,800 --> 00:20:12,200
being replaced for the M Debian package

00:20:08,960 --> 00:20:13,870
and that can it can cause a bit of flux

00:20:12,200 --> 00:20:16,430
particularly if it's a develop a

00:20:13,870 --> 00:20:19,460
developer machine because then you've

00:20:16,430 --> 00:20:21,590
got a you'll have the the library and

00:20:19,460 --> 00:20:25,390
the dev package constantly switching

00:20:21,590 --> 00:20:28,070
over so that kind of churn is

00:20:25,390 --> 00:20:30,320
unavoidable and if it starts affecting

00:20:28,070 --> 00:20:32,560
you in that kind of situation you can

00:20:30,320 --> 00:20:35,960
start looking at whether you use a

00:20:32,560 --> 00:20:37,850
testing and testing grip as your base

00:20:35,960 --> 00:20:40,910
because then the packages will migrate

00:20:37,850 --> 00:20:43,130
together and that's all done so just a

00:20:40,910 --> 00:20:44,720
comment on the memory think you're

00:20:43,130 --> 00:20:49,340
presumably basically talking about the

00:20:44,720 --> 00:20:50,660
package management stuff and yeah by far

00:20:49,340 --> 00:20:53,000
the biggest difference is just having a

00:20:50,660 --> 00:20:54,170
shorter list yeah and the problem is

00:20:53,000 --> 00:20:55,940
that then if you do want something from

00:20:54,170 --> 00:20:57,580
Debian C but the big list back in now

00:20:55,940 --> 00:21:00,830
you lost all the advantage again yes

00:20:57,580 --> 00:21:03,470
such is life and I'm not sure there's

00:21:00,830 --> 00:21:05,270
things we can do an act to reduce the

00:21:03,470 --> 00:21:07,160
amount of space storage space it takes

00:21:05,270 --> 00:21:08,570
up by gzipping lists and things that

00:21:07,160 --> 00:21:11,030
your options you can turn I don't know

00:21:08,570 --> 00:21:13,430
if there's any options it's got for use

00:21:11,030 --> 00:21:15,170
less memory because there was a there

00:21:13,430 --> 00:21:17,120
was a thing about doing it does run out

00:21:15,170 --> 00:21:21,110
of memory and complain very loudly if it

00:21:17,120 --> 00:21:25,010
does yeah and that is highly predicated

00:21:21,110 --> 00:21:26,690
on the size of the bin package cache or

00:21:25,010 --> 00:21:29,120
package cache not bin and

00:21:26,690 --> 00:21:32,360
SRC package and you can turn that open

00:21:29,120 --> 00:21:35,090
so you just don't have those files each

00:21:32,360 --> 00:21:37,130
time you ask cache data it goes back

00:21:35,090 --> 00:21:38,420
over there all the lists so the short

00:21:37,130 --> 00:21:40,010
answer is no we haven't done much and

00:21:38,420 --> 00:21:42,230
I'm not sure offhand there's much we can

00:21:40,010 --> 00:21:51,170
do about my list sure unless anyone's

00:21:42,230 --> 00:21:53,330
got any bright ideas yeah yeah since you

00:21:51,170 --> 00:21:56,390
were saying or mentioning about the fact

00:21:53,330 --> 00:21:56,900
that it would take a while between the

00:21:56,390 --> 00:21:59,240
uploads

00:21:56,900 --> 00:22:01,670
then the bills and then you're doing it

00:21:59,240 --> 00:22:02,990
because it has to go to mirrors it

00:22:01,670 --> 00:22:04,820
occurs to me that that's the problem

00:22:02,990 --> 00:22:07,190
which has been solved really because

00:22:04,820 --> 00:22:09,560
Bill Dee's already built before it goes

00:22:07,190 --> 00:22:11,510
to the mirrors so why can't you be just

00:22:09,560 --> 00:22:13,670
another kind of building and that builds

00:22:11,510 --> 00:22:16,310
out of incoming and it's because we're

00:22:13,670 --> 00:22:19,520
not actually getting a source package to

00:22:16,310 --> 00:22:24,230
build from wanna build we're not not a

00:22:19,520 --> 00:22:27,770
not completely ability a normal build II

00:22:24,230 --> 00:22:29,840
will be given the DSC I say build it and

00:22:27,770 --> 00:22:32,870
upload it that's not right that's not

00:22:29,840 --> 00:22:36,320
true what happens for Bill daemon is

00:22:32,870 --> 00:22:38,540
that they there's this script Queen diff

00:22:36,320 --> 00:22:41,420
which gets the source packages yes

00:22:38,540 --> 00:22:44,150
actually gets cracked is sourced into a

00:22:41,420 --> 00:22:46,280
database and built each X okay which

00:22:44,150 --> 00:22:49,190
package is ready to build and it can

00:22:46,280 --> 00:22:50,480
download it from incoming free on a

00:22:49,190 --> 00:22:52,040
specific archive which is only available

00:22:50,480 --> 00:22:54,920
to build image but there's no reason why

00:22:52,040 --> 00:22:56,660
you also wouldn't be allowed to download

00:22:54,920 --> 00:23:00,380
from that currently after we master

00:22:56,660 --> 00:23:02,390
aren't quite willing to give us

00:23:00,380 --> 00:23:04,700
download access to incoming in the

00:23:02,390 --> 00:23:07,040
moment so this would be something we

00:23:04,700 --> 00:23:09,620
were we could look at after integration

00:23:07,040 --> 00:23:11,060
if users complain a lot and say look

00:23:09,620 --> 00:23:14,560
this is really causing a lot of turn

00:23:11,060 --> 00:23:17,120
then we could look at that but currently

00:23:14,560 --> 00:23:21,020
it isn't something that Gareth wants to

00:23:17,120 --> 00:23:25,010
give us access to directly and the other

00:23:21,020 --> 00:23:27,050
thing is that you've still got the delay

00:23:25,010 --> 00:23:29,120
because we have to wait for the buildi

00:23:27,050 --> 00:23:31,990
to upload our miel before we can

00:23:29,120 --> 00:23:35,810
download our miellyn put up our me LEM 1

00:23:31,990 --> 00:23:37,310
but the that if if that was the wrong

00:23:35,810 --> 00:23:40,130
side of a deinstall run well that's

00:23:37,310 --> 00:23:43,850
gonna be as bad luck but the actual

00:23:40,130 --> 00:23:48,230
processing of each package even a kernel

00:23:43,850 --> 00:23:51,020
package takes us barely more than a

00:23:48,230 --> 00:23:53,690
minute so Ashley unpack repack upload

00:23:51,020 --> 00:23:57,110
and a lot the time of that is actually

00:23:53,690 --> 00:23:59,450
the upload again so it's the blob ed is

00:23:57,110 --> 00:24:02,530
a very decent box and they can do this

00:23:59,450 --> 00:24:02,530
kind of processing very easily

00:24:07,410 --> 00:24:11,490
[Music]

00:24:08,690 --> 00:24:14,130
just a question about the Adobe document

00:24:11,490 --> 00:24:15,530
here what's this thing about enhancers

00:24:14,130 --> 00:24:24,240
what's that about

00:24:15,530 --> 00:24:26,250
that's got to cover up a deck basically

00:24:24,240 --> 00:24:29,220
requests that for every binary package

00:24:26,250 --> 00:24:32,670
in a suit the source is also the suit

00:24:29,220 --> 00:24:34,830
and enhances basically allows to upload

00:24:32,670 --> 00:24:37,440
binaries when this source is not yet

00:24:34,830 --> 00:24:43,830
there and it will copy it from somewhere

00:24:37,440 --> 00:24:49,230
else so when the upload comes up from

00:24:43,830 --> 00:24:51,660
blobbit then the DAC will actually check

00:24:49,230 --> 00:24:54,150
to see whether the source package for

00:24:51,660 --> 00:24:58,320
that upload already exists in said grip

00:24:54,150 --> 00:25:01,260
and if it doesn't it'll list it so

00:24:58,320 --> 00:25:04,440
because we're only making binary uploads

00:25:01,260 --> 00:25:07,290
we are and we actually uploading the one

00:25:04,440 --> 00:25:11,430
other thing I need to mention do your

00:25:07,290 --> 00:25:14,190
source packages might build 715 however

00:25:11,430 --> 00:25:15,840
many binary packages not all of the

00:25:14,190 --> 00:25:18,000
binary packages that come from your

00:25:15,840 --> 00:25:21,300
source package will show up in M Debian

00:25:18,000 --> 00:25:23,210
grip we are very selective we don't take

00:25:21,300 --> 00:25:26,730
every binary package you build because

00:25:23,210 --> 00:25:29,070
we need to do addictiveness e check in

00:25:26,730 --> 00:25:31,410
on all the binaries we have and one of

00:25:29,070 --> 00:25:34,500
the main reasons we are in the main

00:25:31,410 --> 00:25:37,470
methods we have of keeping the MW

00:25:34,500 --> 00:25:40,290
archives small is by lopping off

00:25:37,470 --> 00:25:42,060
particular the binary packages that

00:25:40,290 --> 00:25:44,130
would otherwise bring in long dependency

00:25:42,060 --> 00:25:48,570
chains that we don't actually have a use

00:25:44,130 --> 00:25:51,090
case for in within them Debian so we do

00:25:48,570 --> 00:25:52,740
cherry-pick the binary packages that

00:25:51,090 --> 00:25:54,330
come from a source package it's one of

00:25:52,740 --> 00:25:58,830
the reasons why the DAC changes have to

00:25:54,330 --> 00:26:01,530
be a little bit carefully done to make

00:25:58,830 --> 00:26:07,200
sure that the the source package always

00:26:01,530 --> 00:26:11,850
matches up who decides about the

00:26:07,200 --> 00:26:13,280
packages at least its selection has been

00:26:11,850 --> 00:26:16,490
done

00:26:13,280 --> 00:26:19,430
fairly arbitrarily by up until now we'll

00:26:16,490 --> 00:26:21,530
be pushing a more orthodox method of bug

00:26:19,430 --> 00:26:24,380
reports against Bill diem Deb in the dog

00:26:21,530 --> 00:26:27,890
and then as long as as long as there's

00:26:24,380 --> 00:26:29,570
some kind of reasonable cause for having

00:26:27,890 --> 00:26:32,660
those in them Debian there will those

00:26:29,570 --> 00:26:34,460
was packages in but it's just having a

00:26:32,660 --> 00:26:36,880
chance to make sure that they would not

00:26:34,460 --> 00:26:40,070
just randomly add in packages

00:26:36,880 --> 00:26:42,710
so again maintainer z' won't be expected

00:26:40,070 --> 00:26:47,090
to make any kind of uploads of term

00:26:42,710 --> 00:26:52,460
debian grip if you want to you just make

00:26:47,090 --> 00:26:54,800
the the VOC report yourself so in terms

00:26:52,460 --> 00:26:56,030
of as you just said you're not

00:26:54,800 --> 00:26:57,590
necessarily going to take all of the

00:26:56,030 --> 00:27:00,830
binary packages from that source upload

00:26:57,590 --> 00:27:02,690
so how do people find out which ones I

00:27:00,830 --> 00:27:04,700
mean where's it stored obviously you got

00:27:02,690 --> 00:27:05,330
an over wide database of some sort tell

00:27:04,700 --> 00:27:09,410
us about that

00:27:05,330 --> 00:27:11,780
okay the the list will be kept actually

00:27:09,410 --> 00:27:14,540
within back it'll be part of project B

00:27:11,780 --> 00:27:16,640
so any developer can look it up on rice

00:27:14,540 --> 00:27:19,070
but they're also there's also already a

00:27:16,640 --> 00:27:21,470
search engine on them Deb in the dog

00:27:19,070 --> 00:27:22,700
which you can look at if you want to

00:27:21,470 --> 00:27:24,200
look at particular packages and see

00:27:22,700 --> 00:27:26,420
what's there once it's in the main

00:27:24,200 --> 00:27:29,150
archive it'll show up in packages Debbie

00:27:26,420 --> 00:27:30,860
underdog we're hoping that the web team

00:27:29,150 --> 00:27:33,620
will pick up on this in due course and

00:27:30,860 --> 00:27:35,000
actually listed in the pts so that again

00:27:33,620 --> 00:27:38,510
there'll be a little box on one side

00:27:35,000 --> 00:27:41,320
that says these are MDB inversions of of

00:27:38,510 --> 00:27:44,450
your binaries all those kinds of

00:27:41,320 --> 00:27:45,680
assistance methods DDP Oh things I

00:27:44,450 --> 00:27:49,130
thought that they can all have these

00:27:45,680 --> 00:27:51,500
little listings it's a question of once

00:27:49,130 --> 00:27:53,210
the packages start arriving in the main

00:27:51,500 --> 00:27:55,370
archive if we can talk to these teams

00:27:53,210 --> 00:27:57,890
and say look there's your packages file

00:27:55,370 --> 00:28:00,740
that's what's in it how can you show

00:27:57,890 --> 00:28:02,630
that kind of information one of the

00:28:00,740 --> 00:28:06,440
things I'd like to have in particular in

00:28:02,630 --> 00:28:10,040
packages Debian org is when you users

00:28:06,440 --> 00:28:11,720
view you really got squeezed Weezie grip

00:28:10,040 --> 00:28:13,850
in the top corner there they'll be

00:28:11,720 --> 00:28:16,250
squeezed busy and said you'll have

00:28:13,850 --> 00:28:19,460
wheezy grip and CID grip next to it I

00:28:16,250 --> 00:28:21,590
mean the package description on the page

00:28:19,460 --> 00:28:23,540
will be similar to experimental it does

00:28:21,590 --> 00:28:26,030
have a little banner that says this is

00:28:23,540 --> 00:28:27,049
the M Debian package I mean it doesn't

00:28:26,030 --> 00:28:28,850
contain files that

00:28:27,049 --> 00:28:31,129
but finding the debt in the main Debian

00:28:28,850 --> 00:28:38,210
package so something along those lines

00:28:31,129 --> 00:28:41,119
could be added to the the PDO page so

00:28:38,210 --> 00:28:45,440
that's that's covered gripped fairly

00:28:41,119 --> 00:28:49,279
well crush is something that we want to

00:28:45,440 --> 00:28:53,090
put back into discussion once we have

00:28:49,279 --> 00:28:55,190
multi Arch in place crush is changing

00:28:53,090 --> 00:28:58,309
binary compatibility is changing the

00:28:55,190 --> 00:29:00,590
functional behavior of packages it's not

00:28:58,309 --> 00:29:05,299
going into the Debian archive as a first

00:29:00,590 --> 00:29:07,309
stop it might be once a couple of really

00:29:05,299 --> 00:29:10,999
releases in the future we have some kind

00:29:07,309 --> 00:29:15,529
of secondary archive arrangements or we

00:29:10,999 --> 00:29:17,299
depending on agreement within the within

00:29:15,529 --> 00:29:19,460
the community as a whole but certainly

00:29:17,299 --> 00:29:21,350
we're not expecting crushed to follow

00:29:19,460 --> 00:29:24,070
grip just automatically that's not going

00:29:21,350 --> 00:29:26,149
to happen it's too complex to put

00:29:24,070 --> 00:29:28,609
functional changes into the archive

00:29:26,149 --> 00:29:30,350
along those ways but we are looking to

00:29:28,609 --> 00:29:33,289
restart development on that and it would

00:29:30,350 --> 00:29:34,909
be multiple architectures betwee the

00:29:33,289 --> 00:29:38,059
problem with the first release of crush

00:29:34,909 --> 00:29:40,190
was it was um only and no v4 arm at that

00:29:38,059 --> 00:29:42,679
time so we really wanted to broaden that

00:29:40,190 --> 00:29:45,619
out and try and make crush it almost as

00:29:42,679 --> 00:29:48,109
broad as grip can be if we can do it

00:29:45,619 --> 00:29:50,509
that way so one of the things that's

00:29:48,109 --> 00:29:54,529
changed since last time we did all this

00:29:50,509 --> 00:29:58,039
a few years ago is the bootstrapping

00:29:54,529 --> 00:29:59,119
stuff in deep package where it's not in

00:29:58,039 --> 00:30:01,070
deep package yet we're still arguing

00:29:59,119 --> 00:30:05,590
about it but the deep package maintainer

00:30:01,070 --> 00:30:11,090
z' preferred method is in fact profiles

00:30:05,590 --> 00:30:13,070
so that might be you know that providers

00:30:11,090 --> 00:30:15,499
with a nice integratable mechanism in

00:30:13,070 --> 00:30:18,350
debian to be able to say build this

00:30:15,499 --> 00:30:20,330
stuff with reduced dependencies yep so

00:30:18,350 --> 00:30:22,460
we can have an EM Debian profile as well

00:30:20,330 --> 00:30:25,009
as a bootstrap stage-one profile yeah

00:30:22,460 --> 00:30:27,559
and that's looking to me like quite

00:30:25,009 --> 00:30:29,330
sensible schemes so it's been borrowed

00:30:27,559 --> 00:30:31,789
by Linton as well Linton to have this

00:30:29,330 --> 00:30:35,210
kind of profile matching as well so

00:30:31,789 --> 00:30:39,080
we've got that kind of behavior because

00:30:35,210 --> 00:30:40,310
we even with with a grip if you're

00:30:39,080 --> 00:30:42,650
building packages

00:30:40,310 --> 00:30:44,870
on grip you want to have a different

00:30:42,650 --> 00:30:47,180
Linton profile because there are things

00:30:44,870 --> 00:30:49,790
that Linton is checking for that are not

00:30:47,180 --> 00:30:53,030
gonna be there so there is there is

00:30:49,790 --> 00:30:56,000
support for that already the similar

00:30:53,030 --> 00:30:59,030
profile support for D package vendor has

00:30:56,000 --> 00:31:01,130
been in for quite some time now it's

00:30:59,030 --> 00:31:05,210
been available there it needs updating

00:31:01,130 --> 00:31:05,720
it needs widening but yes the mechanism

00:31:05,210 --> 00:31:09,320
is there

00:31:05,720 --> 00:31:14,770
oh these kinds of systems go to go

00:31:09,320 --> 00:31:14,770
through and to roll it through which is

00:31:18,440 --> 00:31:26,090
so what do people want from grip from

00:31:22,730 --> 00:31:29,180
crush from em Debian as a whole from our

00:31:26,090 --> 00:31:32,240
tool chains what kind of what are we not

00:31:29,180 --> 00:31:37,880
doing on what we knew not doing enough

00:31:32,240 --> 00:31:43,250
of poor multi arts cross no chains

00:31:37,880 --> 00:31:46,430
ring one the only way is a google Summer

00:31:43,250 --> 00:31:47,360
of Code and yeah there are some already

00:31:46,430 --> 00:31:53,630
available

00:31:47,360 --> 00:31:56,360
multi across tool chains in Debian this

00:31:53,630 --> 00:31:57,910
team are the bolts

00:31:56,360 --> 00:32:05,210
[Music]

00:31:57,910 --> 00:32:07,640
slash repo you can look at the boss well

00:32:05,210 --> 00:32:12,050
you you have somebody in the audience

00:32:07,640 --> 00:32:14,630
yeah I wanna have a look just search for

00:32:12,050 --> 00:32:16,670
the Tebow's blog yeah he has a full

00:32:14,630 --> 00:32:26,990
explanation you can how can you test the

00:32:16,670 --> 00:32:28,310
tool change and everything yeah I don't

00:32:26,990 --> 00:32:31,400
remember in the past you've spoken about

00:32:28,310 --> 00:32:32,900
a reduced base system you know trying to

00:32:31,400 --> 00:32:35,390
get again a system that say it doesn't

00:32:32,900 --> 00:32:37,880
depend on Perl or Python yeah I kind of

00:32:35,390 --> 00:32:39,380
think that's that's something we did

00:32:37,880 --> 00:32:42,620
with the first crush Emma

00:32:39,380 --> 00:32:45,080
it depends I'm assuming that people will

00:32:42,620 --> 00:32:47,540
want that kind of thing again it got us

00:32:45,080 --> 00:32:50,620
down to a very small base in store

00:32:47,540 --> 00:32:53,750
system but it is a lot of work to take

00:32:50,620 --> 00:32:56,030
coils out and put busybox in because

00:32:53,750 --> 00:33:00,710
there are a lot of men Debbi maintainer

00:32:56,030 --> 00:33:03,080
scripts that expect particular tools to

00:33:00,710 --> 00:33:06,080
have particularly particular options i

00:33:03,080 --> 00:33:07,880
think it was sick rep - x was one of the

00:33:06,080 --> 00:33:12,860
strange ones the grep supports and

00:33:07,880 --> 00:33:14,690
busybox grep just can't do so that's the

00:33:12,860 --> 00:33:16,520
those kinds of things then need to

00:33:14,690 --> 00:33:18,920
spread out through a whole range of

00:33:16,520 --> 00:33:20,900
other packages so when you start looking

00:33:18,920 --> 00:33:22,490
at that problem you the number of

00:33:20,900 --> 00:33:24,470
packages you're having to cross build

00:33:22,490 --> 00:33:27,860
and maintain cross bills of suddenly

00:33:24,470 --> 00:33:29,480
goes up exponentially equally were with

00:33:27,860 --> 00:33:30,980
taking out pearl it's a very good idea

00:33:29,480 --> 00:33:34,760
it does

00:33:30,980 --> 00:33:39,200
a shrink the the crush installation by a

00:33:34,760 --> 00:33:40,549
lot it so it takes out a huge chunk but

00:33:39,200 --> 00:33:43,159
again there are maintainer scripts that

00:33:40,549 --> 00:33:45,289
expect some kind of pill behavior you

00:33:43,159 --> 00:33:48,799
have to try and re-implement or make

00:33:45,289 --> 00:33:51,440
certain scripts no ups all that kind of

00:33:48,799 --> 00:33:54,320
work was done for M Debian crash against

00:33:51,440 --> 00:33:57,080
Lenny a lot of package changes have gone

00:33:54,320 --> 00:34:00,380
through by then so we need to really ask

00:33:57,080 --> 00:34:03,080
the community do you want to have that

00:34:00,380 --> 00:34:06,710
level of work applied do you need to get

00:34:03,080 --> 00:34:09,770
below say 32 megabytes for a Debian

00:34:06,710 --> 00:34:12,619
install and ask the community as at

00:34:09,770 --> 00:34:16,760
large if we take out that level of

00:34:12,619 --> 00:34:19,159
support is it still Debian you are you

00:34:16,760 --> 00:34:22,099
looking at actually changing the the

00:34:19,159 --> 00:34:25,250
nature of the distributions look not way

00:34:22,099 --> 00:34:27,020
so can you give us some examples of the

00:34:25,250 --> 00:34:31,190
sizes that you were able to get grip and

00:34:27,020 --> 00:34:35,000
crush down to you with arm and you know

00:34:31,190 --> 00:34:37,159
maybe what something like a radical

00:34:35,000 --> 00:34:38,300
replacement using busybox would mind get

00:34:37,159 --> 00:34:40,579
down to oh you've got numbers that are

00:34:38,300 --> 00:34:52,280
great there we go

00:34:40,579 --> 00:34:54,889
so and begot yeah minimal installation

00:34:52,280 --> 00:34:58,910
of M Debian crush as as we had it for

00:34:54,889 --> 00:35:04,520
Lenny got to about 24 megabytes without

00:34:58,910 --> 00:35:06,170
X and we pushed it to about 38 I think I

00:35:04,520 --> 00:35:11,780
got it down to on a balloon three board

00:35:06,170 --> 00:35:13,880
with X actually running things was 38 or

00:35:11,780 --> 00:35:15,770
40 odd Meg by the Sun we finished

00:35:13,880 --> 00:35:17,359
there was someone very disappointed we

00:35:15,770 --> 00:35:21,200
couldn't fit the listed 2 megabyte

00:35:17,359 --> 00:35:23,150
combat flash card but we couldn't

00:35:21,200 --> 00:35:26,390
actually do that we couldn't get X that

00:35:23,150 --> 00:35:31,010
low even even taking out coils and pearl

00:35:26,390 --> 00:35:32,930
and put in busy box it is true than an

00:35:31,010 --> 00:35:33,510
awful lot of other things that happened

00:35:32,930 --> 00:35:36,180
in the

00:35:33,510 --> 00:35:38,220
yes then you know the work that Intel

00:35:36,180 --> 00:35:39,840
and others have done on Yocto and tools

00:35:38,220 --> 00:35:41,760
like that and the amount of attention

00:35:39,840 --> 00:35:43,560
they're getting it does mean that when

00:35:41,760 --> 00:35:46,109
you get the systems that are that small

00:35:43,560 --> 00:35:49,380
and you're having to perform that amount

00:35:46,109 --> 00:35:51,510
of surgery and are changing that many of

00:35:49,380 --> 00:35:54,210
the sort of basic expectations people

00:35:51,510 --> 00:35:57,630
have about what is there if you call it

00:35:54,210 --> 00:36:00,680
a debian or a w anxiety system and you

00:35:57,630 --> 00:36:04,680
know I I would I would really encourage

00:36:00,680 --> 00:36:07,980
you know if if my opinion is someone who

00:36:04,680 --> 00:36:09,690
doesn't currently use any of grip or

00:36:07,980 --> 00:36:11,760
crush or any of the other pieces is

00:36:09,690 --> 00:36:13,800
relevant at all I would really encourage

00:36:11,760 --> 00:36:16,080
you to stay focused on grip because I

00:36:13,800 --> 00:36:18,090
think that's the place where the

00:36:16,080 --> 00:36:20,609
potential for for having something that

00:36:18,090 --> 00:36:22,260
feels almost as good as Debian but it's

00:36:20,609 --> 00:36:24,540
just you know missing some of the fat

00:36:22,260 --> 00:36:26,250
around the edges is potentially really

00:36:24,540 --> 00:36:28,260
valuable and on some of these other

00:36:26,250 --> 00:36:28,530
things if it's really a lot of work like

00:36:28,260 --> 00:36:33,320
that

00:36:28,530 --> 00:36:36,270
there are a lot of other ways to yeah

00:36:33,320 --> 00:36:38,520
that's useful feedback because you know

00:36:36,270 --> 00:36:39,660
we we need to think about these kinds of

00:36:38,520 --> 00:36:42,000
things and how much work we set

00:36:39,660 --> 00:36:45,300
ourselves out to do the one thing that

00:36:42,000 --> 00:36:47,250
occurs to me since Lenny is a lot of

00:36:45,300 --> 00:36:50,040
this G object introspection stuff has

00:36:47,250 --> 00:36:53,250
come through that's really complicated

00:36:50,040 --> 00:36:55,380
that dependency chains for all all of

00:36:53,250 --> 00:36:59,640
those packages all the clutter stuff for

00:36:55,380 --> 00:37:02,310
the the gir packages trying to work out

00:36:59,640 --> 00:37:05,100
a new path through those dependencies to

00:37:02,310 --> 00:37:08,250
get down to the site the kind of sizes

00:37:05,100 --> 00:37:15,510
we had to crush we need to mean to work

00:37:08,250 --> 00:37:17,100
out is it is it worth doing yeah to be

00:37:15,510 --> 00:37:20,580
honest I'd have to whack her retail I

00:37:17,100 --> 00:37:23,450
mean grit sounds very very awesome for

00:37:20,580 --> 00:37:27,090
not zero effort but much reduced effort

00:37:23,450 --> 00:37:31,170
I can see a really really good use case

00:37:27,090 --> 00:37:32,640
for it already Debian live with grip you

00:37:31,170 --> 00:37:34,859
know reduce the memory footprint get

00:37:32,640 --> 00:37:36,540
more on CD well exactly are people just

00:37:34,859 --> 00:37:38,460
testing Debian correctly they're not

00:37:36,540 --> 00:37:40,599
going to care about copyrights and

00:37:38,460 --> 00:37:43,179
things

00:37:40,599 --> 00:37:47,979
I don't know how much Debian live relies

00:37:43,179 --> 00:37:50,589
on the content being put up being

00:37:47,979 --> 00:37:52,599
translated that might be a an issue

00:37:50,589 --> 00:37:53,949
because we do remove all the

00:37:52,599 --> 00:37:57,900
translations as well as all the man

00:37:53,949 --> 00:37:59,919
pages so in live yeah we might after

00:37:57,900 --> 00:38:02,049
look at exactly what's happening with

00:37:59,919 --> 00:38:05,019
that but yet there are lots of other

00:38:02,049 --> 00:38:07,869
situations where you you don't need the

00:38:05,019 --> 00:38:10,179
extra stuff that's in these different

00:38:07,869 --> 00:38:12,640
packages I just want to say that the

00:38:10,179 --> 00:38:14,679
copyrights are kept yeah why's it so

00:38:12,640 --> 00:38:16,329
vile I clean violated they are they're

00:38:14,679 --> 00:38:21,160
compressed with gzip nine but they are

00:38:16,329 --> 00:38:22,900
retained yeah so yes of course can we

00:38:21,160 --> 00:38:27,130
have a half grip with the translations

00:38:22,900 --> 00:38:28,989
kept that's that's something you've

00:38:27,130 --> 00:38:31,529
asked before a long time ago when I was

00:38:28,989 --> 00:38:35,229
still thinking they're doing T dibs

00:38:31,529 --> 00:38:38,890
there are problems with with that me

00:38:35,229 --> 00:38:40,630
down to how the the translation workflow

00:38:38,890 --> 00:38:43,299
would need to work with the rest of

00:38:40,630 --> 00:38:46,209
Debian so that's a different issue but

00:38:43,299 --> 00:38:49,199
yes there was dis always this idea that

00:38:46,209 --> 00:38:52,479
you could again cherry-pick which

00:38:49,199 --> 00:38:54,579
packages and which languages you brought

00:38:52,479 --> 00:38:56,979
in the translations folks in Debian at

00:38:54,579 --> 00:38:59,859
the moment one of my packages drivel

00:38:56,979 --> 00:39:03,640
it's got 34 different translations and

00:38:59,859 --> 00:39:05,799
they're all 30 kilobytes and you can't

00:39:03,640 --> 00:39:09,069
think of a single system out there that

00:39:05,799 --> 00:39:13,569
would have all 34 locales in use by a

00:39:09,069 --> 00:39:16,059
user so why are we bundling entire wrap

00:39:13,569 --> 00:39:20,499
of an extra two or three megabytes to

00:39:16,059 --> 00:39:26,289
the to the download of translation files

00:39:20,499 --> 00:39:28,900
and then tries edges as well yes as we

00:39:26,289 --> 00:39:31,150
all observed there's a lot more storage

00:39:28,900 --> 00:39:33,519
available these days and you don't

00:39:31,150 --> 00:39:36,239
really care about tiny images anymore

00:39:33,519 --> 00:39:39,609
just sort of not ridiculous images yeah

00:39:36,239 --> 00:39:41,679
but on the other hand we do also making

00:39:39,609 --> 00:39:43,869
it read images out of stuff we make it

00:39:41,679 --> 00:39:46,329
store images or we make live CD images

00:39:43,869 --> 00:39:47,930
and there's all these sort of somewhat

00:39:46,329 --> 00:39:51,740
reduced and we have machines

00:39:47,930 --> 00:39:53,870
memory so we do have various aspects of

00:39:51,740 --> 00:39:57,170
reduced nurse that are usefully

00:39:53,870 --> 00:39:59,180
targetable yeah and I think the most

00:39:57,170 --> 00:40:03,320
useful work we've done by a long way is

00:39:59,180 --> 00:40:06,470
stuff that ends up actually in Debian

00:40:03,320 --> 00:40:08,450
properly and it so it's it's working on

00:40:06,470 --> 00:40:12,230
often mechanism rather than necessarily

00:40:08,450 --> 00:40:14,660
yester oh yeah to make stuff possible

00:40:12,230 --> 00:40:16,910
you know and I'm not quite sure how our

00:40:14,660 --> 00:40:19,280
magic in it Redfoo works and maybe we

00:40:16,910 --> 00:40:24,440
should look at that that seems to me the

00:40:19,280 --> 00:40:26,960
only case for a busybox based something

00:40:24,440 --> 00:40:30,860
that might be called debian does anyone

00:40:26,960 --> 00:40:32,600
I can think of and that's quite a small

00:40:30,860 --> 00:40:34,550
targeted set of packages so there's a

00:40:32,600 --> 00:40:36,080
fairly small amount of stuff that you

00:40:34,550 --> 00:40:39,110
would have to make work and say yes

00:40:36,080 --> 00:40:41,810
these things are small and ought to work

00:40:39,110 --> 00:40:43,280
on busy box as well what I'd like to

00:40:41,810 --> 00:40:44,750
because we already do it in fact yes

00:40:43,280 --> 00:40:47,270
just do it with some jiggery-pokery in

00:40:44,750 --> 00:40:48,620
higher e in the initramfs packages yeah

00:40:47,270 --> 00:40:50,180
maybe we should do something a bit more

00:40:48,620 --> 00:40:52,340
structured I dunno

00:40:50,180 --> 00:40:56,320
well what I'd like to do with crush when

00:40:52,340 --> 00:41:00,110
we get to that point is think about not

00:40:56,320 --> 00:41:01,730
preparing a suite that is one entire

00:41:00,110 --> 00:41:05,330
distribution but it's actually a

00:41:01,730 --> 00:41:07,340
collection of modified packages critical

00:41:05,330 --> 00:41:09,500
little points within the dependency

00:41:07,340 --> 00:41:11,840
chain and you can superimpose that on

00:41:09,500 --> 00:41:14,780
your other package selections from grip

00:41:11,840 --> 00:41:18,230
and you can just trimmed out big areas

00:41:14,780 --> 00:41:21,830
so it makes it easy to drop LDAP from a

00:41:18,230 --> 00:41:24,290
huge range of things but also to be able

00:41:21,830 --> 00:41:27,590
to do exactly that to have different

00:41:24,290 --> 00:41:29,690
versions of busybox crush in an archive

00:41:27,590 --> 00:41:31,580
and just pick that one according to its

00:41:29,690 --> 00:41:32,480
functionality owner body what do you

00:41:31,580 --> 00:41:35,180
want to do with it

00:41:32,480 --> 00:41:37,010
you don't have to take we don't try and

00:41:35,180 --> 00:41:39,770
build an expectation we're building an

00:41:37,010 --> 00:41:41,630
entire single package set but we're

00:41:39,770 --> 00:41:44,680
actually building components that you

00:41:41,630 --> 00:41:44,680
can rearrange yourselves

00:41:46,410 --> 00:41:49,530
[Music]

00:41:54,910 --> 00:42:03,570
times nearly up are there any other

00:41:56,890 --> 00:42:03,570
questions rookie

00:42:07,440 --> 00:42:11,950
yeah the question was when the

00:42:09,940 --> 00:42:15,850
integration integrations gonna be ready

00:42:11,950 --> 00:42:20,170
I was hoping to get a lot of this worked

00:42:15,850 --> 00:42:22,360
into easy it's it became too late

00:42:20,170 --> 00:42:24,010
there's a lot of stuff to do in back

00:42:22,360 --> 00:42:26,260
there's a lot of stuff to rush there was

00:42:24,010 --> 00:42:28,510
a big change had to go in how we

00:42:26,260 --> 00:42:31,270
actually process grip in the first place

00:42:28,510 --> 00:42:33,220
to get the new mechanisms working on the

00:42:31,270 --> 00:42:34,630
DSA host and used in the local mirror

00:42:33,220 --> 00:42:38,560
and all these kinds of things we had to

00:42:34,630 --> 00:42:42,340
do so the ideas came up at Def Con last

00:42:38,560 --> 00:42:44,080
year it was January February before the

00:42:42,340 --> 00:42:47,440
packages really started to move through

00:42:44,080 --> 00:42:49,960
that new mechanism so yeah we've missed

00:42:47,440 --> 00:42:51,790
Weezie but certainly I can't see any

00:42:49,960 --> 00:42:53,800
reason why we still got the support at

00:42:51,790 --> 00:42:56,650
the FTP team we still gotta support the

00:42:53,800 --> 00:42:59,050
release team and wanna build and the

00:42:56,650 --> 00:43:01,180
other core teams in in Debian so there's

00:42:59,050 --> 00:43:03,730
no good reason why this won't be crazy

00:43:01,180 --> 00:43:06,810
plus one I can't see anything blocking

00:43:03,730 --> 00:43:06,810
it at that point

00:43:12,460 --> 00:43:17,840
so effective we'll carry on with our

00:43:14,630 --> 00:43:20,110
sort of semi unofficial wheezy drip yes

00:43:17,840 --> 00:43:22,670
that will exist because it's basically I

00:43:20,110 --> 00:43:25,400
will be making a wheezy grip release

00:43:22,670 --> 00:43:29,000
alongside wheezy at the end of this

00:43:25,400 --> 00:43:31,310
freeze cycle yeah it's it's more

00:43:29,000 --> 00:43:33,230
difficult than it would have been with

00:43:31,310 --> 00:43:34,730
either of the two mechanisms either the

00:43:33,230 --> 00:43:36,530
fully integrate one or the one we had

00:43:34,730 --> 00:43:39,380
before we started the integration but it

00:43:36,530 --> 00:43:41,620
is possible to do and it will it will

00:43:39,380 --> 00:43:41,620
happen

00:43:47,850 --> 00:43:52,780

YouTube URL: https://www.youtube.com/watch?v=9KClSlGBtUU


