Title: Extrepo
Publication date: 2020-06-02
Playlist: MiniDebConf Online 2020
Description: 
	by Wouter Verhelst

At: MiniDebConfOnline 2020
https://wiki.debian.org/DebianEvents/internet/2020/MiniDebConfOnline
Room: main
Scheduled start: 2020-05-30 11:30:00
Captions: 
	00:00:04,600 --> 00:00:11,710
all right welcome to the first talk of

00:00:07,300 --> 00:00:13,930
mini Def Con for online day one it is

00:00:11,710 --> 00:00:21,929
managing external repositories with

00:00:13,930 --> 00:00:25,179
extra power by voter alright thank you

00:00:21,929 --> 00:00:26,859
and good afternoon good morning good

00:00:25,179 --> 00:00:29,019
evening or good night wherever you might

00:00:26,859 --> 00:00:30,910
be on the world and that's the

00:00:29,019 --> 00:00:34,210
interesting part about being on the

00:00:30,910 --> 00:00:37,660
Internet my name is rotifer host I've

00:00:34,210 --> 00:00:40,440
been dealing with being being I've been

00:00:37,660 --> 00:00:45,190
a Debian developer since about 2001

00:00:40,440 --> 00:00:47,829
since actually exactly 2001 and since

00:00:45,190 --> 00:00:50,829
2014 I've also been involved with this

00:00:47,829 --> 00:00:52,809
other thing in my day job which is

00:00:50,829 --> 00:00:55,930
called the Belgian electronic ID

00:00:52,809 --> 00:00:58,269
software we maintain software there for

00:00:55,930 --> 00:01:01,239
Debian as an external repository and

00:00:58,269 --> 00:01:02,559
that actually showed to me that the way

00:01:01,239 --> 00:01:04,720
we do external repositories in that mean

00:01:02,559 --> 00:01:07,920
isn't ideal and I wanted to do something

00:01:04,720 --> 00:01:07,920
about that so here we go

00:01:13,130 --> 00:01:16,899
you

00:01:14,840 --> 00:01:16,899
you

00:01:40,670 --> 00:01:48,740
Vasiliy you have muted yourself this

00:01:47,270 --> 00:01:53,330
should be better okay I'll start from

00:01:48,740 --> 00:01:58,729
scratch sorry about that um so yeah my

00:01:53,330 --> 00:02:00,320
my damn it so yeah what I was saying is

00:01:58,729 --> 00:02:04,880
my name is Rotem host I've been

00:02:00,320 --> 00:02:07,250
developer since 2001 and since 2014 I've

00:02:04,880 --> 00:02:10,970
also been involved in the external

00:02:07,250 --> 00:02:13,340
repository the a ID software software

00:02:10,970 --> 00:02:17,360
meant to help the Belgian electronic ID

00:02:13,340 --> 00:02:18,620
card and which is shipped through an

00:02:17,360 --> 00:02:20,330
external repository and export

00:02:18,620 --> 00:02:23,000
repository that is not Debian software

00:02:20,330 --> 00:02:26,450
repository and through this experience I

00:02:23,000 --> 00:02:28,209
noticed that third-party developers with

00:02:26,450 --> 00:02:31,459
third-party repositories are not really

00:02:28,209 --> 00:02:33,860
handled very well in Debian and that

00:02:31,459 --> 00:02:35,900
inspires me to create something called

00:02:33,860 --> 00:02:38,690
ex-stripper which is what this talk is

00:02:35,900 --> 00:02:41,480
about before X jeepers what what's

00:02:38,690 --> 00:02:46,670
available what are the things that we

00:02:41,480 --> 00:02:49,100
have well people are commonly will do

00:02:46,670 --> 00:02:50,690
something like curl and then for a

00:02:49,100 --> 00:02:53,930
special script and then pry that into

00:02:50,690 --> 00:02:56,450
into a shell run as root which then

00:02:53,930 --> 00:02:59,510
downloads the repository creates apt

00:02:56,450 --> 00:03:02,450
configuration at cetera et cetera and it

00:02:59,510 --> 00:03:05,000
works but it is directly opposite to

00:03:02,450 --> 00:03:06,500
what we tell people to G which is don't

00:03:05,000 --> 00:03:09,470
just run any random shell scripts off

00:03:06,500 --> 00:03:11,660
the internet especially not as root and

00:03:09,470 --> 00:03:13,100
to kind of mitigate that they didn't go

00:03:11,660 --> 00:03:15,140
like well please read ourselves our

00:03:13,100 --> 00:03:18,680
script but most the shell scripts if you

00:03:15,140 --> 00:03:21,380
look at them are long and complicated

00:03:18,680 --> 00:03:22,940
and you can't really read them it's you

00:03:21,380 --> 00:03:24,290
can't expect everybody to understand

00:03:22,940 --> 00:03:26,329
that so it's not really an ideal

00:03:24,290 --> 00:03:31,070
situation author adoptions are things

00:03:26,329 --> 00:03:33,140
like where people run D packaged or just

00:03:31,070 --> 00:03:36,190
install a single unsigned package this

00:03:33,140 --> 00:03:38,690
is the system that for Instagram uses

00:03:36,190 --> 00:03:40,970
which then contains the software but

00:03:38,690 --> 00:03:42,950
also the repository key and after

00:03:40,970 --> 00:03:44,959
configuration so that your package will

00:03:42,950 --> 00:03:47,120
be automatically updated this kind of

00:03:44,959 --> 00:03:48,800
works but has a downside that first of

00:03:47,120 --> 00:03:50,860
all this package isn't signed so it

00:03:48,800 --> 00:03:57,560
could be replaced by something else and

00:03:50,860 --> 00:04:00,019
excuse me second of all and you this way

00:03:57,560 --> 00:04:01,790
the repository is is always written and

00:04:00,019 --> 00:04:02,690
has it has a downside that if people

00:04:01,790 --> 00:04:04,820
want

00:04:02,690 --> 00:04:07,490
use that want to install it in a

00:04:04,820 --> 00:04:10,430
different way all things can go wrong

00:04:07,490 --> 00:04:13,760
that way um as I've actually noticed

00:04:10,430 --> 00:04:15,350
through x-ray Pro there are also places

00:04:13,760 --> 00:04:17,420
where people will just run manual

00:04:15,350 --> 00:04:18,830
instructions like here is the key that

00:04:17,420 --> 00:04:20,690
you need to install this is the config

00:04:18,830 --> 00:04:22,460
file that you need to add there for the

00:04:20,690 --> 00:04:24,050
deep rapport is and that works but

00:04:22,460 --> 00:04:27,050
sometimes a bit it's a bit more than we

00:04:24,050 --> 00:04:29,420
can expect in experienced users to

00:04:27,050 --> 00:04:32,210
understand how to do and it's not ideal

00:04:29,420 --> 00:04:34,280
for that reason and this is not all I've

00:04:32,210 --> 00:04:36,440
seen worst cases people where they just

00:04:34,280 --> 00:04:38,690
don't give any of the above and just

00:04:36,440 --> 00:04:41,140
expect you to figure that this is the

00:04:38,690 --> 00:04:46,340
URL and just do what you need to do

00:04:41,140 --> 00:04:48,440
those are even worse I mean to summarize

00:04:46,340 --> 00:04:51,770
everything it's really it's really a

00:04:48,440 --> 00:04:53,240
mist the way things are are configured

00:04:51,770 --> 00:04:55,030
the way things are done for three

00:04:53,240 --> 00:04:59,480
parties repositories it's a mess and it

00:04:55,030 --> 00:05:01,570
it should be better and you might think

00:04:59,480 --> 00:05:04,670
well it's not possible to do it better

00:05:01,570 --> 00:05:06,080
because this is how it works we don't

00:05:04,670 --> 00:05:07,190
have a relationship with a third party

00:05:06,080 --> 00:05:08,780
developers how we're going to do that

00:05:07,190 --> 00:05:11,000
well maybe you're right but then again

00:05:08,780 --> 00:05:12,410
if you look at other operating systems

00:05:11,000 --> 00:05:14,120
and I'm talking about non free operating

00:05:12,410 --> 00:05:16,730
systems use they do have solutions for

00:05:14,120 --> 00:05:18,800
that if you look at this is the wrong

00:05:16,730 --> 00:05:20,900
button if you look at a macro is for

00:05:18,800 --> 00:05:24,380
instance they have their own certificate

00:05:20,900 --> 00:05:27,260
authority and and if you want to provide

00:05:24,380 --> 00:05:29,690
some apple software that needs to be

00:05:27,260 --> 00:05:32,510
signed by this certificate authority

00:05:29,690 --> 00:05:35,450
they even make it difficult on a

00:05:32,510 --> 00:05:37,460
standard Apple installation to install a

00:05:35,450 --> 00:05:39,890
software that is not shipped through

00:05:37,460 --> 00:05:42,500
their own App Store and we don't do that

00:05:39,890 --> 00:05:47,030
and I think we shouldn't do that but

00:05:42,500 --> 00:05:48,950
still um and it's it's it's it's yeah

00:05:47,030 --> 00:05:52,910
it's a limitation that I mean it's a way

00:05:48,950 --> 00:05:55,160
of making sure that the software is

00:05:52,910 --> 00:05:56,660
always sank when you install it Windows

00:05:55,160 --> 00:05:58,490
does something very similar to you they

00:05:56,660 --> 00:06:00,440
have a number of of proof commercial

00:05:58,490 --> 00:06:02,480
space with various restrictions on the

00:06:00,440 --> 00:06:03,860
on the CA and they encourage

00:06:02,480 --> 00:06:05,930
installation in the Windows Store but

00:06:03,860 --> 00:06:08,660
your your software is always signed so

00:06:05,930 --> 00:06:11,720
it is possible to do this um in the

00:06:08,660 --> 00:06:13,850
linux and bsd world this is usually

00:06:11,720 --> 00:06:15,760
there is some sign a way of signing but

00:06:13,850 --> 00:06:17,320
there isn't a way to

00:06:15,760 --> 00:06:19,420
signing beyond the initial installation

00:06:17,320 --> 00:06:20,770
with that I mean you can't easily on

00:06:19,420 --> 00:06:23,670
most distributions you can't easily

00:06:20,770 --> 00:06:26,320
install software from a third party

00:06:23,670 --> 00:06:28,450
without breaking the trespass summary I

00:06:26,320 --> 00:06:30,670
think that's wrong and I think we should

00:06:28,450 --> 00:06:31,750
do better and even if you say well this

00:06:30,670 --> 00:06:33,940
this is what known for your pretty

00:06:31,750 --> 00:06:35,800
systems do with the free software world

00:06:33,940 --> 00:06:36,430
is different well a buncha has their

00:06:35,800 --> 00:06:40,180
ppas

00:06:36,430 --> 00:06:41,770
which also has a complete chain of trust

00:06:40,180 --> 00:06:43,270
from the initial installation to the

00:06:41,770 --> 00:06:46,660
third-party repositories as long as it

00:06:43,270 --> 00:06:49,930
is this ship three Ubuntu's PPA system

00:06:46,660 --> 00:06:51,370
so it's not right it's not correct I

00:06:49,930 --> 00:06:52,840
think you say that we don't need this at

00:06:51,370 --> 00:06:57,570
all it is definitely useful and it can

00:06:52,840 --> 00:07:00,720
be helpful so enter x3 / x3 / is my

00:06:57,570 --> 00:07:03,190
answer - how do we fix this for Debian

00:07:00,720 --> 00:07:05,710
the idea of x3 / is that we have a

00:07:03,190 --> 00:07:07,720
central source of truth regarding app

00:07:05,710 --> 00:07:10,000
configuration within an interruption

00:07:07,720 --> 00:07:12,580
sign chain from the initial installation

00:07:10,000 --> 00:07:14,380
all the way to your external repository

00:07:12,580 --> 00:07:16,570
so if you trust your Debian installation

00:07:14,380 --> 00:07:20,110
disk you can also just the third-party

00:07:16,570 --> 00:07:22,360
repository that that you want to install

00:07:20,110 --> 00:07:24,970
later on that's what I want to go to and

00:07:22,360 --> 00:07:28,230
so how do we do this well basically have

00:07:24,970 --> 00:07:31,300
a signed metadata repository with

00:07:28,230 --> 00:07:32,830
metadata on known third-party

00:07:31,300 --> 00:07:34,990
repositories obviously if a third-party

00:07:32,830 --> 00:07:36,340
repository is not in the x3 / the

00:07:34,990 --> 00:07:38,680
metadata repository then you can't

00:07:36,340 --> 00:07:41,350
enable it or manage it through x3 / but

00:07:38,680 --> 00:07:43,450
as long as it is you can do that

00:07:41,350 --> 00:07:45,640
extreme poo itself is the command it's

00:07:43,450 --> 00:07:47,050
fairly simple I'm just going to switch

00:07:45,640 --> 00:07:50,110
off my camera here for a moment so you

00:07:47,050 --> 00:07:52,300
can read the whole text x3 / itself the

00:07:50,110 --> 00:07:55,030
command is fairly simple there's

00:07:52,300 --> 00:07:57,820
basically only four commands that exists

00:07:55,030 --> 00:08:00,340
the enable command enables a known

00:07:57,820 --> 00:08:02,320
repository if it hasn't been enabled yet

00:08:00,340 --> 00:08:04,660
if it has been enabled it just renamed

00:08:02,320 --> 00:08:06,100
it if it is disabled with the next

00:08:04,660 --> 00:08:08,740
command which is extra code disabled

00:08:06,100 --> 00:08:11,140
then this one called x3 post search and

00:08:08,740 --> 00:08:13,630
an x3 / updates

00:08:11,140 --> 00:08:15,580
search is to search for repositories in

00:08:13,630 --> 00:08:16,780
the metadata you can just read the ELMO

00:08:15,580 --> 00:08:20,310
file itself but it's easier to use

00:08:16,780 --> 00:08:22,630
search and an update will resync the

00:08:20,310 --> 00:08:24,610
configuration with the current metadata

00:08:22,630 --> 00:08:26,740
which is useful if keys change or

00:08:24,610 --> 00:08:29,350
configuration changes or whatever

00:08:26,740 --> 00:08:31,330
x3 / also implies enabled because I

00:08:29,350 --> 00:08:33,160
answer update also implies enable

00:08:31,330 --> 00:08:35,590
because I can't see wanting to update

00:08:33,160 --> 00:08:38,919
something without having it enabled at

00:08:35,590 --> 00:08:43,990
all so oops

00:08:38,919 --> 00:08:45,850
yeah maybe a demo let's see how that

00:08:43,990 --> 00:08:53,970
works in practice

00:08:45,850 --> 00:08:53,970
uh let's go here so basically if I G I

00:08:56,040 --> 00:09:02,560
have a few repositories enabled 3x3 per

00:09:00,400 --> 00:09:06,430
on my system let's say I want to enable

00:09:02,560 --> 00:09:08,920
something else I would like to run vs ko

00:09:06,430 --> 00:09:23,050
diem which is the free software version

00:09:08,920 --> 00:09:25,690
of Microsoft vs code so let's see I'm

00:09:23,050 --> 00:09:28,330
not sure if that is readable let me

00:09:25,690 --> 00:09:29,860
actually see if it is not readable let

00:09:28,330 --> 00:09:32,850
me know

00:09:29,860 --> 00:09:43,180
but essentially actually might just

00:09:32,850 --> 00:09:45,570
resize things just to make sure that

00:09:43,180 --> 00:09:45,570
should be better

00:09:47,130 --> 00:09:55,300
basically what you should see now is

00:09:52,050 --> 00:09:56,740
that I have enabled a repository it

00:09:55,300 --> 00:10:01,090
doesn't produce any output but that's

00:09:56,740 --> 00:10:04,030
expected and you can see the vs code iam

00:10:01,090 --> 00:10:06,070
repository right there it has been

00:10:04,030 --> 00:10:08,500
enabled so it wasn't enabled before and

00:10:06,070 --> 00:10:13,990
it has been enabled now if I run x3 /

00:10:08,500 --> 00:10:18,360
disable fiesque odium then the file is

00:10:13,990 --> 00:10:18,360
still there but

00:10:24,180 --> 00:10:30,120
you can see that key enable to know has

00:10:26,730 --> 00:10:31,920
been added to disable the key the

00:10:30,120 --> 00:10:34,050
repository that way this is basically

00:10:31,920 --> 00:10:36,990
everything that that is there if I run

00:10:34,050 --> 00:10:39,000
app XP Pro update for a particular

00:10:36,990 --> 00:10:41,459
repositories and it will redownload the

00:10:39,000 --> 00:10:43,350
key and rewrite the configuration and

00:10:41,459 --> 00:10:46,980
that should be everything that is needed

00:10:43,350 --> 00:10:51,420
it also uses signed by with a particular

00:10:46,980 --> 00:10:54,000
file name for the key so that only that

00:10:51,420 --> 00:10:55,800
repository allows that key this is what

00:10:54,000 --> 00:10:57,660
I did this after some feedback that I

00:10:55,800 --> 00:10:59,029
received on Debian the fill mailing list

00:10:57,660 --> 00:11:02,700
and I think it made sense to do so

00:10:59,029 --> 00:11:05,670
all right data file format look like

00:11:02,700 --> 00:11:07,350
it's a simple Yama format all the

00:11:05,670 --> 00:11:10,950
processors are configured through

00:11:07,350 --> 00:11:13,980
through llamo in a file that is meant to

00:11:10,950 --> 00:11:15,860
be easy to understand it might not be if

00:11:13,980 --> 00:11:18,959
that's the case I always accept patches

00:11:15,860 --> 00:11:21,120
the input format is somewhat related to

00:11:18,959 --> 00:11:22,649
the output format we can always change

00:11:21,120 --> 00:11:23,940
it if necessary so people think well it

00:11:22,649 --> 00:11:26,670
would be easy to do it this way then

00:11:23,940 --> 00:11:28,650
that is always welcome there is a

00:11:26,670 --> 00:11:30,420
template of the ELMO file with some

00:11:28,650 --> 00:11:32,850
comments in there that should explain

00:11:30,420 --> 00:11:36,900
how to write your own repository

00:11:32,850 --> 00:11:39,390
metadata if you want you and all this

00:11:36,900 --> 00:11:41,670
repository metadata is post processed by

00:11:39,390 --> 00:11:45,360
some perl scripts into per code named

00:11:41,670 --> 00:11:48,000
variants and then signed by a good lap

00:11:45,360 --> 00:11:50,310
runner that runs on my own server and it

00:11:48,000 --> 00:11:52,490
is hardly locked down so people can't

00:11:50,310 --> 00:11:56,630
abuse it so it's only allowing

00:11:52,490 --> 00:12:00,720
signatures on this particular repository

00:11:56,630 --> 00:12:04,110
the named variants because if you say I

00:12:00,720 --> 00:12:06,300
have a repository that supports Buster

00:12:04,110 --> 00:12:08,790
and those I and set for instance then we

00:12:06,300 --> 00:12:10,950
get a yama files one for Buster one for

00:12:08,790 --> 00:12:11,520
bullseye and once it's it if you're an

00:12:10,950 --> 00:12:13,500
ex-stripper

00:12:11,520 --> 00:12:15,779
enable on bustard it will only download

00:12:13,500 --> 00:12:16,890
the Buster index file and not the

00:12:15,779 --> 00:12:18,959
bullseye on cellphones because it

00:12:16,890 --> 00:12:20,670
doesn't scare about those and so that's

00:12:18,959 --> 00:12:23,670
why we put it in in two separate code

00:12:20,670 --> 00:12:25,980
name variants it is served through get

00:12:23,670 --> 00:12:28,589
locked pages on salsa which might not be

00:12:25,980 --> 00:12:33,120
the best idea long term but it was the

00:12:28,589 --> 00:12:34,860
easiest way to get started me updates

00:12:33,120 --> 00:12:36,420
are done through merge requests I do it

00:12:34,860 --> 00:12:38,140
this way so that I can also ensure that

00:12:36,420 --> 00:12:41,740
the files remain valid this one

00:12:38,140 --> 00:12:43,960
on the github CI pipelines preferably I

00:12:41,740 --> 00:12:46,540
have I would prefer if we post your

00:12:43,960 --> 00:12:49,150
owner's send the request because that

00:12:46,540 --> 00:12:51,250
way I'm also sure that the metadata is

00:12:49,150 --> 00:12:53,680
kept up to date if the depository owner

00:12:51,250 --> 00:12:55,770
commits to that but I don't insist on

00:12:53,680 --> 00:12:58,890
that especially not in this early stage

00:12:55,770 --> 00:13:01,390
because I want people to use it right

00:12:58,890 --> 00:13:04,420
there is also separate repository for

00:13:01,390 --> 00:13:11,890
the packaging and let me show you what

00:13:04,420 --> 00:13:16,240
is metadata looks like but this is the

00:13:11,890 --> 00:13:19,030
metadata repository basically there's a

00:13:16,240 --> 00:13:21,640
template llamo file here which looks

00:13:19,030 --> 00:13:23,560
like that and there's some comments in

00:13:21,640 --> 00:13:25,480
there there is a description

00:13:23,560 --> 00:13:31,080
maybe I should soo-min again as well can

00:13:25,480 --> 00:13:31,080
make bean yeah sorry I just realized

00:13:31,260 --> 00:13:37,210
this should be better

00:13:32,920 --> 00:13:38,800
sorry about that so the comments

00:13:37,210 --> 00:13:41,110
explained give instructions to people

00:13:38,800 --> 00:13:44,560
how to use it you add a description

00:13:41,110 --> 00:13:48,400
the source is these keys are copied

00:13:44,560 --> 00:13:50,350
directly into the dot source file take

00:13:48,400 --> 00:13:53,320
note that a dot source file and a dot

00:13:50,350 --> 00:13:57,550
list file are both used by apt the

00:13:53,320 --> 00:13:59,350
source file is a depth 8 a 22 file which

00:13:57,550 --> 00:14:01,090
is not the same as that list file I'm

00:13:59,350 --> 00:14:04,450
not the same syntax it's similar but

00:14:01,090 --> 00:14:06,100
it's not exactly the same thing there

00:14:04,450 --> 00:14:09,760
are some keys like the sweetened

00:14:06,100 --> 00:14:13,690
components one that are replaced by the

00:14:09,760 --> 00:14:16,330
Perl code that mangles the input to into

00:14:13,690 --> 00:14:18,700
the output and based on some keys that

00:14:16,330 --> 00:14:20,440
are used later like the sweets here for

00:14:18,700 --> 00:14:24,370
instance we say sweets bullseye embosser

00:14:20,440 --> 00:14:27,190
so the it buster index file will have

00:14:24,370 --> 00:14:29,800
sweets just Buster here rather than the

00:14:27,190 --> 00:14:37,990
sweet that we see here we also list

00:14:29,800 --> 00:14:41,350
whether a repository is DFS V free so we

00:14:37,990 --> 00:14:43,360
say if the policy here for instance it

00:14:41,350 --> 00:14:46,990
can be mein kampf or non free and they

00:14:43,360 --> 00:14:49,090
should be DFS V free software and or

00:14:46,990 --> 00:14:50,250
basically the way it works for Debian

00:14:49,090 --> 00:14:53,430
itself

00:14:50,250 --> 00:14:55,529
you can either have it per component or

00:14:53,430 --> 00:14:57,449
you can have one for the entire

00:14:55,529 --> 00:14:59,399
repository wages say policy main if you

00:14:57,449 --> 00:15:02,190
only have main components or only have

00:14:59,399 --> 00:15:05,009
non free components to keep it simple

00:15:02,190 --> 00:15:07,110
finally we have some keys for contact

00:15:05,009 --> 00:15:08,759
and bugs there's currently no code the

00:15:07,110 --> 00:15:10,889
next report that uses this but it can be

00:15:08,759 --> 00:15:12,480
useful for the user or if I need to

00:15:10,889 --> 00:15:14,699
contact you for some reason whatever and

00:15:12,480 --> 00:15:17,850
then finally we need to add the gbg key

00:15:14,699 --> 00:15:20,519
and this is required you can use some

00:15:17,850 --> 00:15:22,170
templating etc etc how does that work in

00:15:20,519 --> 00:15:23,850
practice let's look at the one that I

00:15:22,170 --> 00:15:26,279
created for the Belgian Eid repository

00:15:23,850 --> 00:15:28,529
and so we create Belgium VI D so

00:15:26,279 --> 00:15:32,009
basically if I want to enable the Eid '

00:15:28,529 --> 00:15:34,889
I just say x3 / enable Belgium Eid so a

00:15:32,009 --> 00:15:38,160
description this is the URIs that we use

00:15:34,889 --> 00:15:41,160
for Belgium Eid we used a sweet sweet

00:15:38,160 --> 00:15:44,430
stretch and Buster and policies main

00:15:41,160 --> 00:15:45,290
because the Eid suffer is gplv3 sorry l

00:15:44,430 --> 00:15:47,850
gplv3

00:15:45,290 --> 00:15:51,089
and then finally the d PG key that we

00:15:47,850 --> 00:15:54,800
used to sign with and a few more

00:15:51,089 --> 00:15:54,800
repositories that's how that works

00:15:56,120 --> 00:16:02,550
let's go back to the slides

00:15:59,480 --> 00:16:03,689
why do I wanted is in the future well

00:16:02,550 --> 00:16:05,160
first of all I wanna have some more

00:16:03,689 --> 00:16:06,480
repositories but do you already have

00:16:05,160 --> 00:16:08,639
quite a bit but I think you can never

00:16:06,480 --> 00:16:10,529
have enough of them it would be nice if

00:16:08,639 --> 00:16:12,779
people would who are interested in this

00:16:10,529 --> 00:16:14,850
would would join but right now it's

00:16:12,779 --> 00:16:16,290
looking to handle everything it's just

00:16:14,850 --> 00:16:18,420
that a long term I definitely would like

00:16:16,290 --> 00:16:20,220
some some more volunteers if anybody's

00:16:18,420 --> 00:16:23,970
interested definitely would like more

00:16:20,220 --> 00:16:26,069
repositories I have received some

00:16:23,970 --> 00:16:27,600
suggestion about installer support the

00:16:26,069 --> 00:16:28,769
idea being that you could proceed hey I

00:16:27,600 --> 00:16:30,630
want to enable these external

00:16:28,769 --> 00:16:33,209
repositories that that happens just

00:16:30,630 --> 00:16:34,860
before the apt step and then you can

00:16:33,209 --> 00:16:36,750
also install software from external

00:16:34,860 --> 00:16:38,399
repositories proceeding which would be

00:16:36,750 --> 00:16:43,350
cool but then we would need more

00:16:38,399 --> 00:16:45,540
repositories because almost at the end

00:16:43,350 --> 00:16:48,300
we also need an inbound distribution

00:16:45,540 --> 00:16:51,180
system right now we use github pages

00:16:48,300 --> 00:16:52,769
which works but the SAF has already told

00:16:51,180 --> 00:16:55,079
me that they would be for something that

00:16:52,769 --> 00:16:56,939
uses packages rather than something else

00:16:55,079 --> 00:17:00,029
I'm going to look into that but I just

00:16:56,939 --> 00:17:03,319
don't know exactly how to do it best but

00:17:00,029 --> 00:17:03,319
it's definitely something we can look at

00:17:03,340 --> 00:17:09,100
maybe more repositories and it might be

00:17:06,880 --> 00:17:10,930
nice to also add this to some software

00:17:09,100 --> 00:17:13,240
front ends like no software so you can

00:17:10,930 --> 00:17:16,450
just enable an expository directly from

00:17:13,240 --> 00:17:19,690
a GUI application oh and yeah we really

00:17:16,450 --> 00:17:21,580
need more repositories that's all I have

00:17:19,690 --> 00:17:35,590
to say if there are any questions I'll

00:17:21,580 --> 00:17:38,950
be happy to signal ok yes or no yes in

00:17:35,590 --> 00:17:43,360
the in the sense that Ubuntu packages

00:17:38,950 --> 00:17:45,310
extra power and therefore it would that

00:17:43,360 --> 00:17:48,730
you can run x3 Pro on a bun would

00:17:45,310 --> 00:17:52,840
install a Debian repository so it would

00:17:48,730 --> 00:17:55,270
work that way I have put up and made the

00:17:52,840 --> 00:17:59,440
the the yama formats in such ways that

00:17:55,270 --> 00:18:00,700
if it wouldn't were to you can agree

00:17:59,440 --> 00:18:02,650
that this is a good idea and they wanted

00:18:00,700 --> 00:18:04,720
to use it as well then we can just have

00:18:02,650 --> 00:18:06,790
an ubuntu URL and and and and that way

00:18:04,720 --> 00:18:08,830
but that hasn't been implemented yet and

00:18:06,790 --> 00:18:22,120
so right now I wouldn't do it but

00:18:08,830 --> 00:18:24,010
technically it's possible so I set up a

00:18:22,120 --> 00:18:26,110
get ma proneural of en that runs on my

00:18:24,010 --> 00:18:28,410
personal server and that is the only

00:18:26,110 --> 00:18:31,120
location where the sizing at your key is

00:18:28,410 --> 00:18:36,130
it is not a docker runner it is a shell

00:18:31,120 --> 00:18:39,870
runner so the get lop CI when run on

00:18:36,130 --> 00:18:44,820
master only whenever on the master will

00:18:39,870 --> 00:18:47,380
just mangle the stuff there and then

00:18:44,820 --> 00:18:49,330
sign it from get maps yeah you can look

00:18:47,380 --> 00:18:51,400
at the get lop CI config it's basically

00:18:49,330 --> 00:18:55,120
just DP g p-- sign with this key and

00:18:51,400 --> 00:18:57,520
that's it this is maybe not an ideal

00:18:55,120 --> 00:19:01,360
solution long term but it should be safe

00:18:57,520 --> 00:19:03,610
enough and I definitely intend to review

00:19:01,360 --> 00:19:09,190
any changes to get lop CI convict with a

00:19:03,610 --> 00:19:11,590
with a with a microscope okay then emo

00:19:09,190 --> 00:19:15,600
one asks cannot override oddities like

00:19:11,590 --> 00:19:15,600
slack using Jessie for everything

00:19:16,110 --> 00:19:24,000
yeah absolutely right now so let me just

00:19:20,880 --> 00:19:27,060
go back to you the method data template

00:19:24,000 --> 00:19:30,120
file so basically here we have sweets

00:19:27,060 --> 00:19:32,550
sweet which means we place the sweet in

00:19:30,120 --> 00:19:36,990
this location with the sweets that we

00:19:32,550 --> 00:19:38,430
have here but if the method if they need

00:19:36,990 --> 00:19:40,700
slack users just see everything you know

00:19:38,430 --> 00:19:43,530
then you just say sweets Jessie here and

00:19:40,700 --> 00:19:45,360
then it doesn't get overwritten

00:19:43,530 --> 00:19:47,130
what's also possible is for instance if

00:19:45,360 --> 00:19:48,510
you say while we use Jessie for Jessie

00:19:47,130 --> 00:19:50,520
and we used stretch for everything

00:19:48,510 --> 00:19:52,680
following stretch you can just say sweet

00:19:50,520 --> 00:19:55,950
just see sweets and it's is Jessie and

00:19:52,680 --> 00:19:59,420
then sweets stretch so you can overwrite

00:19:55,950 --> 00:20:02,280
I'll let me just go back to the llamó

00:19:59,420 --> 00:20:04,200
documentation so this block explains

00:20:02,280 --> 00:20:08,220
that if there are differences in a purse

00:20:04,200 --> 00:20:10,260
read basis you can do sweet this Buster

00:20:08,220 --> 00:20:12,150
architectures to say Buster we have

00:20:10,260 --> 00:20:13,440
those architectures and you can do that

00:20:12,150 --> 00:20:15,780
for sweets to you so we can

00:20:13,440 --> 00:20:19,320
it's definitely flexible enough to allow

00:20:15,780 --> 00:20:21,770
for that kind of oddities yes cool well

00:20:19,320 --> 00:20:21,770

YouTube URL: https://www.youtube.com/watch?v=it4BeyqFN1s


