Title: FreedomBox: The Home Server Appliance
Publication date: 2020-10-23
Playlist: DebConf 20
Description: 
	by Sunil Mohan Adapa
by James Valleroy

At: DebConf20
https://debconf20.debconf.org/talks/64-freedombox-the-home-server-appliance/

FreedomBox, the pure blend to bring Debian to home servers, has had a productive year. In collaboration with Olimex, an OSHW manufacturer, we have launched FreedomBox home server kits that users can buy and set up at home. This move saw a significant increase in user participation in the project.

We have made a lot of progress so far in FreedomBox - simplified user experience, easy to acquire hardware, automatic configuration, well-managed security and a sizeable number of apps to wean us off of the proprietary surveillance-based cloud services we have come to depend on.

We have quite a few plans for the coming year. We want to improve our hardware offering by working with Olimex and also reach out to potential new partners. We will try to add some features such as Audio/Video conferencing, crucial missing apps and even prepare FreedomBox for NAS use cases at home while getting ready for a solid Bullseye release.

This talk discusses the progress of the project over the last year, what has been achieved as part of the bigger picture, our plans for the coming year and how the larger Debian community can contribute to the effort.

Room: Talks
Scheduled start: 2020-08-26 19:00:00
Captions: 
	00:00:07,200 --> 00:00:10,800
this talk

00:00:07,919 --> 00:00:12,240
is about freedom box the home server

00:00:10,800 --> 00:00:14,960
appliance

00:00:12,240 --> 00:00:16,960
my name is james valeroy i've

00:00:14,960 --> 00:00:18,880
contributed to the freedom box project

00:00:16,960 --> 00:00:21,680
for many years

00:00:18,880 --> 00:00:24,160
and i'm also the release manager for the

00:00:21,680 --> 00:00:24,160
project

00:00:24,320 --> 00:00:29,279
hi i'm sunil mohan nadapa

00:00:27,680 --> 00:00:30,800
i've been a core contributor to the

00:00:29,279 --> 00:00:33,600
freedom box project since

00:00:30,800 --> 00:00:35,520
2013 and before that i worked on

00:00:33,600 --> 00:00:37,600
independent consulting and contributed

00:00:35,520 --> 00:00:39,920
to various free software projects

00:00:37,600 --> 00:00:41,200
i'm currently employed at thoughtworks

00:00:39,920 --> 00:00:44,640
who are sponsoring

00:00:41,200 --> 00:00:46,719
my work on freedom box today

00:00:44,640 --> 00:00:48,320
james and i would like to share with you

00:00:46,719 --> 00:00:51,280
all the exciting changes

00:00:48,320 --> 00:00:52,800
that we did in the freedom box project

00:00:51,280 --> 00:00:53,840
but first we'll give a quick

00:00:52,800 --> 00:00:56,640
introduction

00:00:53,840 --> 00:00:57,680
on what the freedom box project is after

00:00:56,640 --> 00:01:00,079
that we'd like to

00:00:57,680 --> 00:01:00,800
put everything into perspective and talk

00:01:00,079 --> 00:01:03,440
about

00:01:00,800 --> 00:01:06,560
how much progress we made against the

00:01:03,440 --> 00:01:09,520
goals of the freedom box project

00:01:06,560 --> 00:01:11,280
uh finally we'll talk about uh how you

00:01:09,520 --> 00:01:13,360
as a contributor to the debian

00:01:11,280 --> 00:01:15,119
can contribute to the freedom box

00:01:13,360 --> 00:01:17,600
project

00:01:15,119 --> 00:01:20,720
and we'll have some time for questions

00:01:17,600 --> 00:01:20,720
and answers after that

00:01:22,159 --> 00:01:26,080
so what is freedom box well it's a

00:01:25,520 --> 00:01:29,360
server

00:01:26,080 --> 00:01:30,799
that lives in your home and it keeps all

00:01:29,360 --> 00:01:33,360
of your data private

00:01:30,799 --> 00:01:33,360
in your home

00:01:34,000 --> 00:01:38,320
freedom box is for non-experts this

00:01:36,799 --> 00:01:42,479
means you don't need

00:01:38,320 --> 00:01:44,320
any special technical skills to use it

00:01:42,479 --> 00:01:46,880
it makes it easy to install an

00:01:44,320 --> 00:01:50,799
application with just one click

00:01:46,880 --> 00:01:52,640
everything from a wiki to a chat server

00:01:50,799 --> 00:01:55,840
and it doesn't require a lot of time and

00:01:52,640 --> 00:01:55,840
energy to keep it running

00:01:56,640 --> 00:02:00,079
all of the freedom box software is a

00:01:58,479 --> 00:02:03,360
part of debian it's packaged

00:02:00,079 --> 00:02:08,560
and maintained in debian and we don't

00:02:03,360 --> 00:02:10,879
have use any external repository

00:02:08,560 --> 00:02:11,599
freedom box runs on a lot of different

00:02:10,879 --> 00:02:15,520
hardware

00:02:11,599 --> 00:02:17,520
including cheap and low power boards

00:02:15,520 --> 00:02:19,040
and we expect people can use these in

00:02:17,520 --> 00:02:21,360
their homes and keep them running all

00:02:19,040 --> 00:02:24,400
the time

00:02:21,360 --> 00:02:27,599
and today freedom box is an appliance

00:02:24,400 --> 00:02:30,800
this means you can purchase it online

00:02:27,599 --> 00:02:30,800
and have it delivered to you

00:02:31,120 --> 00:02:34,720
last year has been a great year for

00:02:33,360 --> 00:02:36,239
freedom box

00:02:34,720 --> 00:02:37,920
not just in terms of the software

00:02:36,239 --> 00:02:40,160
changes we have implemented

00:02:37,920 --> 00:02:44,319
but also we took a great leap in

00:02:40,160 --> 00:02:45,920
popularity and user participation

00:02:44,319 --> 00:02:47,760
and the biggest change that happened to

00:02:45,920 --> 00:02:50,959
the project over the past

00:02:47,760 --> 00:02:52,800
year uh is the launch of the home server

00:02:50,959 --> 00:02:56,400
kit

00:02:52,800 --> 00:02:58,319
we announced this in devconf last year

00:02:56,400 --> 00:02:59,599
but it has been a great success since

00:02:58,319 --> 00:03:01,519
then

00:02:59,599 --> 00:03:02,640
we essentially teamed up with the

00:03:01,519 --> 00:03:04,720
olympics

00:03:02,640 --> 00:03:07,920
who are open source hardware

00:03:04,720 --> 00:03:11,120
manufacturer based out of bulgaria

00:03:07,920 --> 00:03:14,720
they sell a single board computer called

00:03:11,120 --> 00:03:17,040
lime2 and this single board computer

00:03:14,720 --> 00:03:18,480
is what went into the freedom box home

00:03:17,040 --> 00:03:22,400
server kit

00:03:18,480 --> 00:03:26,239
essentially a metal casing

00:03:22,400 --> 00:03:29,360
an sd card loaded with freedom box

00:03:26,239 --> 00:03:30,400
then a battery pack and power supply put

00:03:29,360 --> 00:03:33,440
together

00:03:30,400 --> 00:03:34,159
turned it into a an appliance that users

00:03:33,440 --> 00:03:37,200
can order

00:03:34,159 --> 00:03:37,920
online so users do not have to worry

00:03:37,200 --> 00:03:40,720
about

00:03:37,920 --> 00:03:41,920
choosing the right hardware and setting

00:03:40,720 --> 00:03:44,480
it up themselves

00:03:41,920 --> 00:03:45,200
they instead can order a hardware from

00:03:44,480 --> 00:03:48,879
the

00:03:45,200 --> 00:03:53,360
store and easily set it up

00:03:48,879 --> 00:03:53,360
as simple as a wi-fi router at home

00:03:54,799 --> 00:03:58,720
and since the launch of the hardware

00:03:56,400 --> 00:04:01,280
kits we have seen a significant increase

00:03:58,720 --> 00:04:04,560
in user participation

00:04:01,280 --> 00:04:07,760
early max also seems happy

00:04:04,560 --> 00:04:10,720
about the launch as

00:04:07,760 --> 00:04:11,439
they have followed it up with a decrease

00:04:10,720 --> 00:04:15,200
in

00:04:11,439 --> 00:04:17,199
a drop in price for the kids

00:04:15,200 --> 00:04:18,799
as well as launching a new hardware

00:04:17,199 --> 00:04:22,079
attachment

00:04:18,799 --> 00:04:24,080
to host a sata drive that can that can

00:04:22,079 --> 00:04:26,479
handle up to two terabytes

00:04:24,080 --> 00:04:27,600
hard drive this hard drive can be used

00:04:26,479 --> 00:04:30,639
to

00:04:27,600 --> 00:04:34,560
store media and serve media

00:04:30,639 --> 00:04:38,320
on the network they've also made the

00:04:34,560 --> 00:04:41,360
made the kits available to direct

00:04:38,320 --> 00:04:43,840
purchase for the user users

00:04:41,360 --> 00:04:43,840
in the us

00:04:44,400 --> 00:04:48,560
we've also added support for other

00:04:46,320 --> 00:04:53,040
hardware two very low cost

00:04:48,560 --> 00:04:54,639
boards from pine 64. one

00:04:53,040 --> 00:04:56,160
hardware board that has multiple

00:04:54,639 --> 00:04:58,880
ethernet ports that can be used

00:04:56,160 --> 00:05:01,039
as a router and one of the cheapest

00:04:58,880 --> 00:05:04,880
hardware boards out there

00:05:01,039 --> 00:05:08,720
yet capable the orange pi is zero

00:05:04,880 --> 00:05:11,919
we've also started building images with

00:05:08,720 --> 00:05:13,840
back ports enabled um so that

00:05:11,919 --> 00:05:15,919
freedom box latest changes of freedom

00:05:13,840 --> 00:05:18,560
box can be made available

00:05:15,919 --> 00:05:19,600
uh along with other changes such as

00:05:18,560 --> 00:05:23,039
matrix and apps

00:05:19,600 --> 00:05:26,400
uh being available for federating with

00:05:23,039 --> 00:05:28,639
all other matrix and apps instances out

00:05:26,400 --> 00:05:28,639
there

00:05:30,400 --> 00:05:34,400
recently we started experimenting with a

00:05:33,440 --> 00:05:38,560
new approach

00:05:34,400 --> 00:05:41,360
for building our hardware images for um

00:05:38,560 --> 00:05:42,000
single board computers that is to build

00:05:41,360 --> 00:05:44,960
a

00:05:42,000 --> 00:05:46,240
uefi based generic image earlier we were

00:05:44,960 --> 00:05:48,000
building a

00:05:46,240 --> 00:05:49,680
an image for each of the single board

00:05:48,000 --> 00:05:52,560
computers which is obviously

00:05:49,680 --> 00:05:56,240
not a scalable approach but with this

00:05:52,560 --> 00:05:57,919
new approach we're really hopeful that

00:05:56,240 --> 00:06:00,240
all of our future hardware can be

00:05:57,919 --> 00:06:02,800
supported with very little effort from

00:06:00,240 --> 00:06:04,639
our project essentially any debian

00:06:02,800 --> 00:06:07,600
kernel

00:06:04,639 --> 00:06:09,759
any single board computer with support

00:06:07,600 --> 00:06:12,639
from debian kernel will be supported by

00:06:09,759 --> 00:06:13,600
freedom box as well automatically this

00:06:12,639 --> 00:06:16,479
is an approach

00:06:13,600 --> 00:06:17,360
first used by open source a project i

00:06:16,479 --> 00:06:20,080
believe

00:06:17,360 --> 00:06:23,039
but others probably are also using it

00:06:20,080 --> 00:06:27,280
the idea is to use an external uef5

00:06:23,039 --> 00:06:30,080
uh based firmware such as u-boot

00:06:27,280 --> 00:06:31,360
and keep the operating system image

00:06:30,080 --> 00:06:34,319
separate

00:06:31,360 --> 00:06:34,800
and that image in our case is freedom

00:06:34,319 --> 00:06:38,240
box

00:06:34,800 --> 00:06:40,960
and it and uh depending upon how the

00:06:38,240 --> 00:06:42,000
uh firmware is procured uh we can

00:06:40,960 --> 00:06:43,680
support uh

00:06:42,000 --> 00:06:45,759
uh various boards without having to

00:06:43,680 --> 00:06:47,600
change the operating system image

00:06:45,759 --> 00:06:48,800
uh with this approach we have already

00:06:47,600 --> 00:06:51,120
tested uh

00:06:48,800 --> 00:06:52,400
a newer version of the lime to board uh

00:06:51,120 --> 00:06:55,680
two very powerful

00:06:52,400 --> 00:06:58,639
boards from uh pine 64 and also

00:06:55,680 --> 00:06:59,440
uh the latest raspberry pi 4. the one

00:06:58,639 --> 00:07:02,960
advantage

00:06:59,440 --> 00:07:06,000
uh with this approach is that this

00:07:02,960 --> 00:07:08,720
uh these images are fully free

00:07:06,000 --> 00:07:12,319
in the sense that they do not contain um

00:07:08,720 --> 00:07:15,919
proprietary firmware from raspberry pi

00:07:12,319 --> 00:07:18,479
uh and so we are now thinking about uh

00:07:15,919 --> 00:07:20,160
treating raspberry pi is as similar to

00:07:18,479 --> 00:07:23,360
how we treat

00:07:20,160 --> 00:07:26,560
uh amd and other intel hardware where

00:07:23,360 --> 00:07:28,960
the firmware is uh proprietary

00:07:26,560 --> 00:07:31,840
and typically the os is completely free

00:07:28,960 --> 00:07:31,840
software

00:07:32,400 --> 00:07:36,400
on the software side we are now focusing

00:07:35,680 --> 00:07:40,319
on

00:07:36,400 --> 00:07:42,800
new use cases network data storage

00:07:40,319 --> 00:07:43,680
is not a primary goal of the freedom box

00:07:42,800 --> 00:07:46,400
project but

00:07:43,680 --> 00:07:47,280
since debian can do a lot already we

00:07:46,400 --> 00:07:49,199
thought that with

00:07:47,280 --> 00:07:51,360
very little effort we can provide

00:07:49,199 --> 00:07:54,319
capabilities to

00:07:51,360 --> 00:07:55,199
take backups of your of all your devices

00:07:54,319 --> 00:07:58,319
at home

00:07:55,199 --> 00:08:00,080
uh also host some of the media that you

00:07:58,319 --> 00:08:01,360
have on freedom box and then stream it

00:08:00,080 --> 00:08:05,120
to appliances like

00:08:01,360 --> 00:08:09,440
televisions um and also

00:08:05,120 --> 00:08:09,440
share large files

00:08:10,080 --> 00:08:15,680
using freedombox

00:08:13,199 --> 00:08:18,160
uh so we've made a lot of changes in

00:08:15,680 --> 00:08:23,520
this area and we will soon be making

00:08:18,160 --> 00:08:23,520
announcements about our nas capabilities

00:08:24,240 --> 00:08:30,479
with the rise of uh online video

00:08:27,360 --> 00:08:32,000
uh calling uh we started to uh we

00:08:30,479 --> 00:08:33,279
started to provide those features in

00:08:32,000 --> 00:08:35,760
freedom box as well

00:08:33,279 --> 00:08:36,959
uh the first one being uh integrating

00:08:35,760 --> 00:08:40,159
the corton app

00:08:36,959 --> 00:08:43,440
in freedom box uh to provide a turn uh

00:08:40,159 --> 00:08:45,279
as well as stun server uh we've

00:08:43,440 --> 00:08:48,800
tested this successfully with matrix

00:08:45,279 --> 00:08:53,519
synapse uh and egypt people can now make

00:08:48,800 --> 00:08:57,200
end-to-end video audio calls

00:08:53,519 --> 00:08:57,200
using these two services

00:08:57,760 --> 00:09:03,440
this year we also focused on improving

00:09:00,560 --> 00:09:06,000
the security of freedom box

00:09:03,440 --> 00:09:08,800
one way we did this is through systemd

00:09:06,000 --> 00:09:10,720
sandboxing features which can be enabled

00:09:08,800 --> 00:09:13,200
for each service

00:09:10,720 --> 00:09:14,160
and it limits the capabilities of what

00:09:13,200 --> 00:09:17,440
that service

00:09:14,160 --> 00:09:20,720
can do for example prevent it from

00:09:17,440 --> 00:09:24,800
changing users on this system

00:09:20,720 --> 00:09:27,200
or have it use a private temp folder

00:09:24,800 --> 00:09:29,200
we've only enabled this for a few

00:09:27,200 --> 00:09:32,160
services so far

00:09:29,200 --> 00:09:33,920
so we still have a long ways to go and

00:09:32,160 --> 00:09:35,120
we will contribute patches to those

00:09:33,920 --> 00:09:38,160
packages

00:09:35,120 --> 00:09:38,160
so they can do the same

00:09:38,240 --> 00:09:42,880
another item is that we have enabled

00:09:40,240 --> 00:09:45,440
strict content security policy

00:09:42,880 --> 00:09:47,920
this prevents certain types of attacks

00:09:45,440 --> 00:09:51,839
in the user's browser

00:09:47,920 --> 00:09:53,839
and client-side sandboxing this is for

00:09:51,839 --> 00:09:55,040
any javascript which is served by the

00:09:53,839 --> 00:09:59,920
freedom box

00:09:55,040 --> 00:09:59,920
to limit what it can do in the browser

00:10:00,000 --> 00:10:05,200
this year we also incorporated need

00:10:02,160 --> 00:10:07,519
restart into freedom box

00:10:05,200 --> 00:10:08,399
this will check whenever a package is

00:10:07,519 --> 00:10:10,800
upgraded

00:10:08,399 --> 00:10:12,160
if its files are being used by some

00:10:10,800 --> 00:10:14,000
service

00:10:12,160 --> 00:10:15,519
and then restart that service to ensure

00:10:14,000 --> 00:10:18,880
that it has

00:10:15,519 --> 00:10:22,560
the latest security fixes

00:10:18,880 --> 00:10:24,560
and also when a kernel is upgraded

00:10:22,560 --> 00:10:26,880
we will schedule a system restart so

00:10:24,560 --> 00:10:29,760
that you can be sure that you are using

00:10:26,880 --> 00:10:29,760
the latest kernel

00:10:30,000 --> 00:10:33,600
we've also improved our update

00:10:31,680 --> 00:10:35,760
mechanisms

00:10:33,600 --> 00:10:37,040
we have a manual update button and we

00:10:35,760 --> 00:10:41,600
ensure that the

00:10:37,040 --> 00:10:45,680
apt cache is up to date when it's run

00:10:41,600 --> 00:10:47,839
we also fixed an issue where the

00:10:45,680 --> 00:10:49,120
freedom box interface being upgraded

00:10:47,839 --> 00:10:52,480
would interrupt

00:10:49,120 --> 00:10:54,240
the upgrade process itself and we've

00:10:52,480 --> 00:10:56,320
enabled

00:10:54,240 --> 00:11:01,839
an apt option so it can automatically

00:10:56,320 --> 00:11:01,839
recover from certain errors

00:11:02,000 --> 00:11:05,120
some more new apps were added to freedom

00:11:04,079 --> 00:11:08,079
box this year

00:11:05,120 --> 00:11:11,200
including wireguard vpn this is a higher

00:11:08,079 --> 00:11:11,200
performance vpn

00:11:11,920 --> 00:11:16,720
and it also fits into our reachability

00:11:14,399 --> 00:11:16,720
goals

00:11:19,680 --> 00:11:26,560
it's wireguard is available in backports

00:11:23,360 --> 00:11:29,360
but for freedombox to configure it it

00:11:26,560 --> 00:11:31,200
needs a newer version of network manager

00:11:29,360 --> 00:11:32,959
so for freedom box it can only be used

00:11:31,200 --> 00:11:34,720
through testing

00:11:32,959 --> 00:11:36,720
but it will be part of our bullseye

00:11:34,720 --> 00:11:38,959
release

00:11:36,720 --> 00:11:40,640
a git web is an app that allows you to

00:11:38,959 --> 00:11:43,680
create or clone

00:11:40,640 --> 00:11:46,000
a git repository push commits to that

00:11:43,680 --> 00:11:48,560
repository and then have it displayed in

00:11:46,000 --> 00:11:50,480
a web interface

00:11:48,560 --> 00:11:54,079
and performance is an app that adds

00:11:50,480 --> 00:11:56,800
several system monitoring services

00:11:54,079 --> 00:11:57,760
and these can be viewed through

00:11:56,800 --> 00:12:01,760
dashboards

00:11:57,760 --> 00:12:03,120
in cockpit i want to mention both gitweb

00:12:01,760 --> 00:12:04,720
and performance were not

00:12:03,120 --> 00:12:08,560
on our roadmap for this year but they

00:12:04,720 --> 00:12:08,560
were just contributed by members of the

00:12:08,839 --> 00:12:12,079
community

00:12:10,240 --> 00:12:14,480
we also had a number of updates to the

00:12:12,079 --> 00:12:16,959
user interface

00:12:14,480 --> 00:12:17,680
for example we show the logo for each

00:12:16,959 --> 00:12:22,000
application

00:12:17,680 --> 00:12:22,560
on its page we also flattened the app

00:12:22,000 --> 00:12:25,200
pages

00:12:22,560 --> 00:12:27,120
by removing the tabs and replacing them

00:12:25,200 --> 00:12:29,600
with action buttons that are shown in a

00:12:27,120 --> 00:12:29,600
toolbar

00:12:30,720 --> 00:12:35,440
to enable or disable the applications we

00:12:32,959 --> 00:12:39,839
now have a toggle switch which replaces

00:12:35,440 --> 00:12:39,839
the checkbox that we had before

00:12:40,639 --> 00:12:44,320
and also when you click a button it will

00:12:42,800 --> 00:12:46,160
show a

00:12:44,320 --> 00:12:47,580
spinner animation so that you know

00:12:46,160 --> 00:12:50,000
something is happening

00:12:47,580 --> 00:12:52,000
[Music]

00:12:50,000 --> 00:12:54,079
altogether this i think gives a much

00:12:52,000 --> 00:12:56,880
more fresh and modern look

00:12:54,079 --> 00:12:57,519
to freedom box and that is something

00:12:56,880 --> 00:12:59,760
that

00:12:57,519 --> 00:13:02,000
users expect especially if they're most

00:12:59,760 --> 00:13:07,760
used to most familiar with

00:13:02,000 --> 00:13:09,760
a mobile phone interface

00:13:07,760 --> 00:13:11,040
some other changes that happened this

00:13:09,760 --> 00:13:13,440
year

00:13:11,040 --> 00:13:14,240
uh freedom box is in buster back ports

00:13:13,440 --> 00:13:16,959
and we have

00:13:14,240 --> 00:13:18,880
release it we have updates usually every

00:13:16,959 --> 00:13:20,880
two weeks

00:13:18,880 --> 00:13:23,040
and this is what we recommend for the

00:13:20,880 --> 00:13:26,800
vast majority of freedombox users to be

00:13:23,040 --> 00:13:26,800
unstable and to have the back ports

00:13:27,200 --> 00:13:30,720
we added a container for development and

00:13:29,760 --> 00:13:33,279
test

00:13:30,720 --> 00:13:35,279
this is based on the systemd container

00:13:33,279 --> 00:13:38,959
features

00:13:35,279 --> 00:13:42,079
and it is a alternative to the virtual

00:13:38,959 --> 00:13:42,079
machine that we had before

00:13:42,160 --> 00:13:46,800
our manual has been updated to

00:13:45,199 --> 00:13:48,800
our manual has been translated to

00:13:46,800 --> 00:13:49,920
spanish and it's available in the

00:13:48,800 --> 00:13:52,959
freedom box doc

00:13:49,920 --> 00:13:54,800
es package if you switch freedom box to

00:13:52,959 --> 00:13:55,360
spanish and you click on a manual page

00:13:54,800 --> 00:13:57,680
you'll

00:13:55,360 --> 00:14:00,160
be shown the spanish page if it is

00:13:57,680 --> 00:14:00,160
available

00:14:00,399 --> 00:14:04,560
we've added more components to our

00:14:02,959 --> 00:14:08,399
component-based api

00:14:04,560 --> 00:14:11,199
to cover diagnostic tests user groups

00:14:08,399 --> 00:14:11,199
notifications

00:14:11,519 --> 00:14:15,600
these are components that any

00:14:13,680 --> 00:14:16,079
application on freedom box can take

00:14:15,600 --> 00:14:19,279
advantage

00:14:16,079 --> 00:14:20,959
of for example we're using notifications

00:14:19,279 --> 00:14:23,360
to warn the user if there's low disk

00:14:20,959 --> 00:14:23,360
space

00:14:23,519 --> 00:14:27,600
we are also renaming the package from

00:14:25,920 --> 00:14:30,160
plinth to freedom box

00:14:27,600 --> 00:14:31,760
this is the main package used in freedom

00:14:30,160 --> 00:14:33,839
box

00:14:31,760 --> 00:14:35,360
and we've already already renamed the

00:14:33,839 --> 00:14:37,519
binary package

00:14:35,360 --> 00:14:41,199
the source rename is still in progress

00:14:37,519 --> 00:14:41,199
and that's currently in the new queue

00:14:43,040 --> 00:14:47,600
a couple new languages were added to the

00:14:44,800 --> 00:14:49,760
interface serbian and arabic

00:14:47,600 --> 00:14:51,839
and we saw a lot of activity in our

00:14:49,760 --> 00:14:54,399
translations overall

00:14:51,839 --> 00:14:57,760
we also launched a new discussion forum

00:14:54,399 --> 00:15:00,880
which is at discuss.freedombox.org

00:14:57,760 --> 00:15:03,440
this is an instance of discourse and

00:15:00,880 --> 00:15:05,120
what we found is that we have a lot more

00:15:03,440 --> 00:15:06,240
interaction with our users through this

00:15:05,120 --> 00:15:08,800
forum

00:15:06,240 --> 00:15:09,680
so for example periodically users will

00:15:08,800 --> 00:15:13,120
show up

00:15:09,680 --> 00:15:14,480
and will report an issue or request a

00:15:13,120 --> 00:15:16,000
new feature

00:15:14,480 --> 00:15:17,680
or just give us feedback about the

00:15:16,000 --> 00:15:19,519
project and

00:15:17,680 --> 00:15:22,079
uh we never saw this before when we just

00:15:19,519 --> 00:15:26,480
had the mailing list in the irc channel

00:15:22,079 --> 00:15:29,920
so i think this has really improved um

00:15:26,480 --> 00:15:29,920
our interactions with the users

00:15:32,160 --> 00:15:35,360
we also made a number of changes and a

00:15:33,920 --> 00:15:39,279
complete redesign of our

00:15:35,360 --> 00:15:41,199
website at freedombox.org

00:15:39,279 --> 00:15:42,880
this kind of helps all the information

00:15:41,199 --> 00:15:44,720
flow together you can scroll from one

00:15:42,880 --> 00:15:47,279
section to the next

00:15:44,720 --> 00:15:50,800
and we have a separate page for each

00:15:47,279 --> 00:15:50,800
hardware device that is supported

00:15:52,079 --> 00:15:56,639
beside that to support our growing

00:15:54,240 --> 00:15:58,639
community we've added a code of conduct

00:15:56,639 --> 00:16:00,160
and also the community governance page

00:15:58,639 --> 00:16:03,600
this covers how

00:16:00,160 --> 00:16:05,199
decisions are made in the project

00:16:03,600 --> 00:16:07,040
and we also have translations of the

00:16:05,199 --> 00:16:09,199
website currently

00:16:07,040 --> 00:16:10,480
czech and spanish are the most complete

00:16:09,199 --> 00:16:13,519
so those are

00:16:10,480 --> 00:16:15,040
enabled on the live site right now

00:16:13,519 --> 00:16:17,920
and we have a couple more languages

00:16:15,040 --> 00:16:17,920
which are on the way

00:16:20,320 --> 00:16:27,120
so some statistics for last year

00:16:24,880 --> 00:16:28,000
we had approximately one release every

00:16:27,120 --> 00:16:31,279
two weeks

00:16:28,000 --> 00:16:34,399
a couple more releases were to handle uh

00:16:31,279 --> 00:16:34,399
unexpected issues

00:16:34,880 --> 00:16:38,880
a total of 66 contributors to the git

00:16:37,440 --> 00:16:41,360
repository

00:16:38,880 --> 00:16:45,120
and 13 of those were regular

00:16:41,360 --> 00:16:45,120
contributors who made multiple commits

00:16:46,320 --> 00:16:49,759
we had a total of 50 people contributing

00:16:48,399 --> 00:16:52,160
to translations

00:16:49,759 --> 00:16:54,880
and so we have five languages that are

00:16:52,160 --> 00:16:57,519
nearly complete for the interface

00:16:54,880 --> 00:17:00,079
six four languages that are over 70

00:16:57,519 --> 00:17:00,079
translated

00:17:02,639 --> 00:17:06,720
so we had a great year uh for freedom

00:17:04,880 --> 00:17:09,360
box with all of the progress and

00:17:06,720 --> 00:17:10,559
uh also in the previous years so how

00:17:09,360 --> 00:17:12,480
does this all stand

00:17:10,559 --> 00:17:14,240
uh against the overall objectives of the

00:17:12,480 --> 00:17:16,240
project after all the freedom box

00:17:14,240 --> 00:17:20,799
project is very

00:17:16,240 --> 00:17:22,720
uh ambitious we we want to provide a

00:17:20,799 --> 00:17:24,559
suitable replacement for all of the

00:17:22,720 --> 00:17:25,520
online services that people are using

00:17:24,559 --> 00:17:27,919
out there

00:17:25,520 --> 00:17:28,640
so where do we stand uh in terms of what

00:17:27,919 --> 00:17:33,520
we have done

00:17:28,640 --> 00:17:36,720
so far we have a very respectable set of

00:17:33,520 --> 00:17:38,799
25 or so applications um that can do a

00:17:36,720 --> 00:17:42,240
whole

00:17:38,799 --> 00:17:46,320
bunch of things for users we have tar

00:17:42,240 --> 00:17:49,760
and i2p to handle anonymity networks

00:17:46,320 --> 00:17:52,480
we have matrix and ejobert

00:17:49,760 --> 00:17:54,320
to do instant messaging we have we can

00:17:52,480 --> 00:17:58,080
host a wiki or a blog

00:17:54,320 --> 00:17:59,200
on freedombox wireguard and openvpn can

00:17:58,080 --> 00:18:02,400
be used for

00:17:59,200 --> 00:18:03,919
turning a freedom box into a vpn server

00:18:02,400 --> 00:18:06,320
or a vpn client

00:18:03,919 --> 00:18:07,200
we further can download torrents read

00:18:06,320 --> 00:18:11,120
news

00:18:07,200 --> 00:18:13,280
perform collaborative editing exchange

00:18:11,120 --> 00:18:16,720
perform file synchronization across

00:18:13,280 --> 00:18:20,400
multiple devices in an encrypted way

00:18:16,720 --> 00:18:23,919
um have an anonymity and not enhancing

00:18:20,400 --> 00:18:27,760
proxy server and also do

00:18:23,919 --> 00:18:31,120
audio conferencing at a large scale um

00:18:27,760 --> 00:18:32,320
now what what is glaringly missing from

00:18:31,120 --> 00:18:35,760
all of these

00:18:32,320 --> 00:18:36,320
are three often asked for applications

00:18:35,760 --> 00:18:38,960
which are

00:18:36,320 --> 00:18:39,760
next cloud then social networking

00:18:38,960 --> 00:18:43,360
especially

00:18:39,760 --> 00:18:47,280
using activity pop applications such as

00:18:43,360 --> 00:18:47,280
mastodon or

00:18:47,679 --> 00:18:52,960
or peer tube and also an email server

00:18:53,840 --> 00:18:57,919
if we look at various use cases

00:18:56,240 --> 00:19:01,200
satisfied by freedom box

00:18:57,919 --> 00:19:02,880
for anonymity and privacy we have some

00:19:01,200 --> 00:19:07,280
reasonable set of applications but we

00:19:02,880 --> 00:19:09,039
still need a lot more focus in that area

00:19:07,280 --> 00:19:10,400
in terms of self-hosting we're very

00:19:09,039 --> 00:19:12,559
strong with

00:19:10,400 --> 00:19:14,080
with so many applications available but

00:19:12,559 --> 00:19:14,480
some of the important applications that

00:19:14,080 --> 00:19:17,200
i've

00:19:14,480 --> 00:19:19,120
already talked about are missing we

00:19:17,200 --> 00:19:20,240
started focusing on the nas area and

00:19:19,120 --> 00:19:22,640
we're almost

00:19:20,240 --> 00:19:24,000
already there because most of the

00:19:22,640 --> 00:19:27,039
software is already available

00:19:24,000 --> 00:19:28,400
in debian uh we also because we are

00:19:27,039 --> 00:19:30,960
using network manager

00:19:28,400 --> 00:19:32,160
and some of its capabilities we've also

00:19:30,960 --> 00:19:35,360
been able to add

00:19:32,160 --> 00:19:38,720
features needed for a wi-fi router but

00:19:35,360 --> 00:19:41,760
uh we still need a long way to go

00:19:38,720 --> 00:19:45,280
in that area before a freedom box can be

00:19:41,760 --> 00:19:46,240
set up as a wi-fi router as easily as a

00:19:45,280 --> 00:19:49,520
regular

00:19:46,240 --> 00:19:49,520
commercial wi-fi router

00:19:50,480 --> 00:19:54,880
in case of uh video conferencing uh we

00:19:53,039 --> 00:19:56,000
are able to do audio video calls with

00:19:54,880 --> 00:19:59,280
matrix and uh

00:19:56,000 --> 00:20:00,080
each everyday but uh uh two of the very

00:19:59,280 --> 00:20:03,200
popular

00:20:00,080 --> 00:20:07,120
uh uh conferencing solutions

00:20:03,200 --> 00:20:09,200
uh such as jitsi and big blue button

00:20:07,120 --> 00:20:11,120
are missing from this we would

00:20:09,200 --> 00:20:13,840
definitely love to see these in debian

00:20:11,120 --> 00:20:16,559
so that freedom box can add

00:20:13,840 --> 00:20:16,559
support for them

00:20:17,919 --> 00:20:22,400
another big area for freedom box is the

00:20:20,960 --> 00:20:25,600
reachability

00:20:22,400 --> 00:20:28,880
uh an area we call reachability

00:20:25,600 --> 00:20:31,039
uh the essential problem being uh how do

00:20:28,880 --> 00:20:32,080
you host a server at home and make it

00:20:31,039 --> 00:20:34,720
behave as if

00:20:32,080 --> 00:20:36,880
it's it's on a it's sitting somewhere on

00:20:34,720 --> 00:20:36,880
a

00:20:37,919 --> 00:20:44,559
on a hosting provider's setup uh

00:20:41,280 --> 00:20:46,880
some people do not have a static

00:20:44,559 --> 00:20:49,120
address some people do not even have a

00:20:46,880 --> 00:20:52,240
public ip address

00:20:49,120 --> 00:20:55,760
in such cases how do you host

00:20:52,240 --> 00:20:58,480
servers at home in this area what we

00:20:55,760 --> 00:20:59,760
don't have is a is a solution that works

00:20:58,480 --> 00:21:02,960
in all cases

00:20:59,760 --> 00:21:04,799
in a perfect manner we have smaller

00:21:02,960 --> 00:21:09,360
solutions that work in certain

00:21:04,799 --> 00:21:11,600
cases for example dynamic dns can work

00:21:09,360 --> 00:21:11,600
when

00:21:12,720 --> 00:21:18,080
when the user has a public ip address

00:21:15,280 --> 00:21:21,760
but it keeps on changing

00:21:18,080 --> 00:21:24,320
one area of hope is that ipv6

00:21:21,760 --> 00:21:26,240
becoming more and more popular each year

00:21:24,320 --> 00:21:29,679
in future we might have

00:21:26,240 --> 00:21:31,600
uh ip ipv6 addresses for all home

00:21:29,679 --> 00:21:33,919
servers so that they can

00:21:31,600 --> 00:21:35,760
they can be set up as nicely as a

00:21:33,919 --> 00:21:39,440
hosting provider setup

00:21:35,760 --> 00:21:42,559
we also need to set up mx records and

00:21:39,440 --> 00:21:45,919
dkim records and so many other things

00:21:42,559 --> 00:21:48,880
yrdns server we need solid

00:21:45,919 --> 00:21:50,559
tls certificates a lot of these

00:21:48,880 --> 00:21:54,080
solutions we already have in

00:21:50,559 --> 00:21:55,120
freedom box but they but a recent

00:21:54,080 --> 00:21:56,960
analysis of

00:21:55,120 --> 00:21:58,799
how we're doing in that area revealed

00:21:56,960 --> 00:22:01,919
that we need

00:21:58,799 --> 00:22:03,280
a lot better user experience trying to

00:22:01,919 --> 00:22:04,799
hint users of

00:22:03,280 --> 00:22:07,039
what solutions they would they should be

00:22:04,799 --> 00:22:08,080
approaching trying to automate a lot of

00:22:07,039 --> 00:22:10,559
those steps

00:22:08,080 --> 00:22:11,520
reducing the technical burden on the

00:22:10,559 --> 00:22:15,200
users

00:22:11,520 --> 00:22:17,200
uh and and so on so we are um

00:22:15,200 --> 00:22:18,559
we now have a plan for improving the

00:22:17,200 --> 00:22:20,480
user experience uh

00:22:18,559 --> 00:22:24,159
for users in this area suggesting to

00:22:20,480 --> 00:22:24,159
them what solutions they should be using

00:22:24,960 --> 00:22:31,440
in terms of hardware support uh uh

00:22:28,400 --> 00:22:33,360
we don't believe that uh you know going

00:22:31,440 --> 00:22:35,440
through the debian installer steps

00:22:33,360 --> 00:22:36,400
and then doing an apt-get install

00:22:35,440 --> 00:22:40,000
freedom boxes

00:22:36,400 --> 00:22:41,360
is the easiest way uh uh for users to

00:22:40,000 --> 00:22:44,080
set up home servers

00:22:41,360 --> 00:22:45,840
so what we've been doing is uh producing

00:22:44,080 --> 00:22:47,039
images for various single board

00:22:45,840 --> 00:22:49,360
computers

00:22:47,039 --> 00:22:50,240
uh that they can directly put onto an sd

00:22:49,360 --> 00:22:52,840
card and

00:22:50,240 --> 00:22:55,039
and plug in the sd card to get things

00:22:52,840 --> 00:22:57,120
done

00:22:55,039 --> 00:22:58,480
so we already have support for 20 plus

00:22:57,120 --> 00:23:00,080
single board computers

00:22:58,480 --> 00:23:02,080
and because of the recent progress we've

00:23:00,080 --> 00:23:05,600
done with generic

00:23:02,080 --> 00:23:07,600
images we hope that a lot more boards

00:23:05,600 --> 00:23:11,600
will be supported in the future

00:23:07,600 --> 00:23:14,400
and and without a lot of effort for the

00:23:11,600 --> 00:23:14,400
project itself

00:23:15,440 --> 00:23:21,440
talking about some of the uh core areas

00:23:18,559 --> 00:23:22,880
where hosting servers are supposed to be

00:23:21,440 --> 00:23:27,120
strong

00:23:22,880 --> 00:23:30,799
we now have uh we started doing at least

00:23:27,120 --> 00:23:33,760
application sandboxing using systemd

00:23:30,799 --> 00:23:35,600
we already have automatic upgrades using

00:23:33,760 --> 00:23:38,799
unattended upgrades

00:23:35,600 --> 00:23:39,200
we also have a solution in freedom box

00:23:38,799 --> 00:23:42,240
now

00:23:39,200 --> 00:23:44,559
for dealing with changes to

00:23:42,240 --> 00:23:46,720
configuration files that prevent

00:23:44,559 --> 00:23:48,080
automatic updates from happening now

00:23:46,720 --> 00:23:51,200
this solution is

00:23:48,080 --> 00:23:53,520
is not a great solution in terms of

00:23:51,200 --> 00:23:55,440
it being a little bit hacky but this

00:23:53,520 --> 00:23:59,200
solution currently works uh

00:23:55,440 --> 00:23:59,919
very well for um for situations where

00:23:59,200 --> 00:24:02,720
user

00:23:59,919 --> 00:24:04,320
uh does not have to care about editing

00:24:02,720 --> 00:24:05,360
configuration files or answering

00:24:04,320 --> 00:24:08,159
questions about

00:24:05,360 --> 00:24:09,360
three-way mergers and so on so we are

00:24:08,159 --> 00:24:11,200
able to upgrade

00:24:09,360 --> 00:24:13,919
all of the packages in freedom box

00:24:11,200 --> 00:24:17,279
without ever asking a question

00:24:13,919 --> 00:24:20,240
to the user we also handle

00:24:17,279 --> 00:24:21,200
uh automatic restarts uh using need

00:24:20,240 --> 00:24:24,240
restart

00:24:21,200 --> 00:24:26,080
we handle firewall automatically obtain

00:24:24,240 --> 00:24:28,159
tls certificates automatically using

00:24:26,080 --> 00:24:30,640
let's encrypt

00:24:28,159 --> 00:24:32,080
but what we are lacking in this area is

00:24:30,640 --> 00:24:33,919
better sandboxing especially

00:24:32,080 --> 00:24:35,279
when compared to some of the other

00:24:33,919 --> 00:24:39,600
projects out there using

00:24:35,279 --> 00:24:39,600
containers for hosting applications

00:24:41,200 --> 00:24:46,480
another area is infrastructure we're

00:24:44,559 --> 00:24:49,200
taking backups of all of the application

00:24:46,480 --> 00:24:52,960
data uh in a nice manner we've

00:24:49,200 --> 00:24:55,919
um implemented a robust solution there

00:24:52,960 --> 00:24:58,480
then um we're also taking automatic disk

00:24:55,919 --> 00:25:01,360
snapshots uh using butterfs file system

00:24:58,480 --> 00:25:04,400
and the snapper tool

00:25:01,360 --> 00:25:06,960
we have very decent networking

00:25:04,400 --> 00:25:07,600
provided by network manager even for

00:25:06,960 --> 00:25:11,279
some of the

00:25:07,600 --> 00:25:11,279
advanced networking cases

00:25:11,520 --> 00:25:14,720
freedom box provide in general provides

00:25:14,000 --> 00:25:17,360
a very

00:25:14,720 --> 00:25:18,400
simplified user interface and it doesn't

00:25:17,360 --> 00:25:21,919
does not want to

00:25:18,400 --> 00:25:25,039
implement advanced system administration

00:25:21,919 --> 00:25:26,880
for those cases where users might want

00:25:25,039 --> 00:25:28,400
to do advanced system administration we

00:25:26,880 --> 00:25:29,440
are referring them to the cockpit

00:25:28,400 --> 00:25:32,640
application

00:25:29,440 --> 00:25:33,919
um cockpit is now a required dependency

00:25:32,640 --> 00:25:37,440
of freedom box

00:25:33,919 --> 00:25:40,400
um and users who have to do

00:25:37,440 --> 00:25:40,960
uh advanced management like setting up

00:25:40,400 --> 00:25:44,320
raid

00:25:40,960 --> 00:25:45,120
disks and vlans and so on they can

00:25:44,320 --> 00:25:47,600
always

00:25:45,120 --> 00:25:48,159
jump to the cockpit application and do

00:25:47,600 --> 00:25:51,279
uh

00:25:48,159 --> 00:25:53,039
advanced operations there we also have a

00:25:51,279 --> 00:25:55,360
decent solution for

00:25:53,039 --> 00:25:56,159
single sign-ons but that can be improved

00:25:55,360 --> 00:25:59,440
quite a bit

00:25:56,159 --> 00:26:00,799
further we also want freedom box to turn

00:25:59,440 --> 00:26:04,559
into a

00:26:00,799 --> 00:26:08,720
identity provider by providing

00:26:04,559 --> 00:26:08,720
oauth and open id connect based

00:26:08,960 --> 00:26:12,480
sign-ons for various other applications

00:26:11,440 --> 00:26:15,600
uh but that

00:26:12,480 --> 00:26:18,799
is still ahead for us

00:26:15,600 --> 00:26:20,480
uh we also have one

00:26:18,799 --> 00:26:22,799
important feature missing from backups

00:26:20,480 --> 00:26:24,880
which is automating all the backups

00:26:22,799 --> 00:26:26,720
to take them regularly to a remote

00:26:24,880 --> 00:26:29,760
location we already can take

00:26:26,720 --> 00:26:30,880
backups to a remote location so that's

00:26:29,760 --> 00:26:33,840
where we are with

00:26:30,880 --> 00:26:34,880
infrastructure and on the overall status

00:26:33,840 --> 00:26:37,360
of the project

00:26:34,880 --> 00:26:39,279
so i i would say on the overall we're in

00:26:37,360 --> 00:26:44,159
a pretty good shape but we have

00:26:39,279 --> 00:26:44,159
a few significant missing blocks

00:26:46,320 --> 00:26:50,880
let's discuss our plans for the coming

00:26:48,559 --> 00:26:50,880
year

00:26:51,600 --> 00:26:55,039
there are a number of major features

00:26:53,600 --> 00:26:58,640
that we want to add

00:26:55,039 --> 00:26:59,440
or improve in freedom box this includes

00:26:58,640 --> 00:27:02,320
the nas

00:26:59,440 --> 00:27:04,240
and audio video conferencing which have

00:27:02,320 --> 00:27:06,159
already been discussed

00:27:04,240 --> 00:27:07,520
we want to make sure that we can meet

00:27:06,159 --> 00:27:11,440
all of these use cases

00:27:07,520 --> 00:27:12,480
with freedom box also we want to package

00:27:11,440 --> 00:27:14,720
next cloud

00:27:12,480 --> 00:27:17,600
in debian and make it available through

00:27:14,720 --> 00:27:20,399
debian fast track

00:27:17,600 --> 00:27:21,039
we want to improve our reachability to

00:27:20,399 --> 00:27:23,520
work

00:27:21,039 --> 00:27:26,640
for users with all kinds of different

00:27:23,520 --> 00:27:28,720
network situations

00:27:26,640 --> 00:27:30,480
we will implement an automatic upgrade

00:27:28,720 --> 00:27:32,399
to the next stable release

00:27:30,480 --> 00:27:34,320
so users who are currently running

00:27:32,399 --> 00:27:35,840
buster with back ports

00:27:34,320 --> 00:27:38,000
will be automatically upgraded to

00:27:35,840 --> 00:27:41,039
bullseye

00:27:38,000 --> 00:27:43,520
we will package charlie which is a

00:27:41,039 --> 00:27:46,840
bookmarking application

00:27:43,520 --> 00:27:49,360
which was in debian before but got

00:27:46,840 --> 00:27:51,440
removed

00:27:49,360 --> 00:27:53,520
mail server is another feature that so

00:27:51,440 --> 00:27:55,600
many users have asked about

00:27:53,520 --> 00:27:56,640
we have a detailed plan on how to

00:27:55,600 --> 00:27:58,320
implement it

00:27:56,640 --> 00:28:01,120
so we just need to put the effort in and

00:27:58,320 --> 00:28:01,120
actually get it done

00:28:01,600 --> 00:28:05,200
and finally we would like to have a

00:28:03,600 --> 00:28:09,440
fetiverse application

00:28:05,200 --> 00:28:12,720
this is for federated social networking

00:28:09,440 --> 00:28:14,799
based on the activity protocol

00:28:12,720 --> 00:28:17,520
so some of the most popular applications

00:28:14,799 --> 00:28:20,720
out there are mastodon and floroma

00:28:17,520 --> 00:28:21,279
but we will also consider how it can be

00:28:20,720 --> 00:28:24,159
packaged

00:28:21,279 --> 00:28:27,120
and maintained in debian and how it runs

00:28:24,159 --> 00:28:27,120
on our lower power

00:28:28,840 --> 00:28:32,640
devices

00:28:30,720 --> 00:28:34,640
we're also improving our developer

00:28:32,640 --> 00:28:36,960
framework

00:28:34,640 --> 00:28:38,000
we're moving towards declarative apps

00:28:36,960 --> 00:28:40,960
this means that

00:28:38,000 --> 00:28:42,720
each application doesn't need to write a

00:28:40,960 --> 00:28:45,200
lot of python functions

00:28:42,720 --> 00:28:47,200
and have a lot of boilerplate inside the

00:28:45,200 --> 00:28:49,279
app will simply describe itself

00:28:47,200 --> 00:28:51,520
and what it needs and the components

00:28:49,279 --> 00:28:53,440
that it wants to use

00:28:51,520 --> 00:28:55,200
we have some cleanups planned for the

00:28:53,440 --> 00:28:57,840
bullseye release

00:28:55,200 --> 00:28:59,360
including properly building all of the

00:28:57,840 --> 00:29:02,480
manual pages

00:28:59,360 --> 00:29:04,240
from the wiki source files

00:29:02,480 --> 00:29:06,399
and we want to add functional tests to

00:29:04,240 --> 00:29:09,279
our ci pipeline

00:29:06,399 --> 00:29:10,960
along with the unit tests and building

00:29:09,279 --> 00:29:13,679
the package

00:29:10,960 --> 00:29:16,399
this will functional tests will start a

00:29:13,679 --> 00:29:19,279
freedom box in a container

00:29:16,399 --> 00:29:20,000
and control a web browser have it

00:29:19,279 --> 00:29:22,240
connect to the

00:29:20,000 --> 00:29:26,640
to the freedom box and check that

00:29:22,240 --> 00:29:28,240
everything is working

00:29:26,640 --> 00:29:30,320
for hardware of course we want to

00:29:28,240 --> 00:29:32,159
support many more boards including

00:29:30,320 --> 00:29:34,000
64-bit boards

00:29:32,159 --> 00:29:36,559
and this will be possible through our

00:29:34,000 --> 00:29:38,799
generic images

00:29:36,559 --> 00:29:40,080
and we also want to have cheaper boards

00:29:38,799 --> 00:29:43,200
so that everyone can

00:29:40,080 --> 00:29:43,200
afford a freedom box

00:29:43,840 --> 00:29:47,440
there are other projects similar to

00:29:45,600 --> 00:29:51,679
freedom box that try to

00:29:47,440 --> 00:29:53,919
achieve similar goals these projects

00:29:51,679 --> 00:29:55,520
at least some of them they take a

00:29:53,919 --> 00:29:57,600
different different approach

00:29:55,520 --> 00:29:59,200
to installing applications instead of

00:29:57,600 --> 00:30:02,240
installing debian packages

00:29:59,200 --> 00:30:04,559
for an app they try to install

00:30:02,240 --> 00:30:06,159
containers these containers come with

00:30:04,559 --> 00:30:08,559
the app as well as

00:30:06,159 --> 00:30:09,679
some of the libraries that many of the

00:30:08,559 --> 00:30:13,840
libraries that it

00:30:09,679 --> 00:30:16,159
it requires now there are two main

00:30:13,840 --> 00:30:17,279
advantages with taking such an approach

00:30:16,159 --> 00:30:20,080
one

00:30:17,279 --> 00:30:21,520
somebody trying to package an

00:30:20,080 --> 00:30:24,720
application

00:30:21,520 --> 00:30:26,320
for this particular software they do not

00:30:24,720 --> 00:30:28,320
need to

00:30:26,320 --> 00:30:29,360
wait for the application to be packaged

00:30:28,320 --> 00:30:30,960
as a debian package

00:30:29,360 --> 00:30:32,640
instead they can write a small script

00:30:30,960 --> 00:30:36,240
and make sure that from

00:30:32,640 --> 00:30:36,240
from the upstream they grab all the

00:30:36,320 --> 00:30:40,000
application sources as well as libraries

00:30:38,640 --> 00:30:42,399
required

00:30:40,000 --> 00:30:44,000
and then put them in inside a container

00:30:42,399 --> 00:30:48,320
the second approach is

00:30:44,000 --> 00:30:51,919
is sandboxing provided by the containers

00:30:48,320 --> 00:30:55,279
now this approach has um

00:30:51,919 --> 00:30:56,080
problems as well um it bypasses some of

00:30:55,279 --> 00:30:59,440
the main

00:30:56,080 --> 00:31:02,799
guarantees that debian provides

00:30:59,440 --> 00:31:06,640
for an application to that is

00:31:02,799 --> 00:31:09,760
working at home as a home server

00:31:06,640 --> 00:31:11,200
to contact a centralized server and

00:31:09,760 --> 00:31:12,720
report on the user would be a

00:31:11,200 --> 00:31:16,159
catastrophic failure

00:31:12,720 --> 00:31:19,279
in privacy also we cannot have

00:31:16,159 --> 00:31:20,880
any binary blobs running in that

00:31:19,279 --> 00:31:22,399
application

00:31:20,880 --> 00:31:24,399
when an application goes through the

00:31:22,399 --> 00:31:28,720
debian's new queue

00:31:24,399 --> 00:31:31,840
or and gets

00:31:28,720 --> 00:31:33,919
sponsored by a debian developer and ends

00:31:31,840 --> 00:31:35,760
up in the debian main repository we can

00:31:33,919 --> 00:31:38,799
reasonably assume

00:31:35,760 --> 00:31:42,559
that it will not phone home on the user

00:31:38,799 --> 00:31:46,000
when it is running also

00:31:42,559 --> 00:31:47,440
it can be assumed that binary blobs

00:31:46,000 --> 00:31:49,679
will not be present inside that

00:31:47,440 --> 00:31:51,679
application security

00:31:49,679 --> 00:31:52,720
updates will be provided as part of

00:31:51,679 --> 00:31:56,720
stable updates

00:31:52,720 --> 00:31:58,720
uh and also testing

00:31:56,720 --> 00:32:00,799
debian most dividend packages also

00:31:58,720 --> 00:32:02,559
provide a reasonable upgrade mechanism

00:32:00,799 --> 00:32:04,559
at least from one stable version to

00:32:02,559 --> 00:32:08,880
another stable version

00:32:04,559 --> 00:32:12,320
and uh this is what freedom box does

00:32:08,880 --> 00:32:14,000
so instead of uh installing from within

00:32:12,320 --> 00:32:16,480
the containers

00:32:14,000 --> 00:32:17,679
freedom box always relies on debian

00:32:16,480 --> 00:32:20,960
packages

00:32:17,679 --> 00:32:23,880
so here's how you can help in the self

00:32:20,960 --> 00:32:25,840
hosting application category there is a

00:32:23,880 --> 00:32:27,840
disproportionately large number of

00:32:25,840 --> 00:32:29,120
applications that have not been packaged

00:32:27,840 --> 00:32:31,440
for debian yet

00:32:29,120 --> 00:32:32,240
and this is also the reason why freedom

00:32:31,440 --> 00:32:34,159
box has

00:32:32,240 --> 00:32:36,559
fewer applications compared to some of

00:32:34,159 --> 00:32:39,760
the other solutions out there

00:32:36,559 --> 00:32:41,360
so you can help by picking up a

00:32:39,760 --> 00:32:44,159
self-hosting application

00:32:41,360 --> 00:32:45,360
and packaging it for debian now making

00:32:44,159 --> 00:32:48,000
that available

00:32:45,360 --> 00:32:48,640
any debian package uh can be made

00:32:48,000 --> 00:32:51,039
available

00:32:48,640 --> 00:32:52,960
in firebox with very little effort after

00:32:51,039 --> 00:32:55,519
that

00:32:52,960 --> 00:32:56,080
take a look at the list of self-hosting

00:32:55,519 --> 00:32:59,440
applications

00:32:56,080 --> 00:33:02,799
that we have compiled on the debian wiki

00:32:59,440 --> 00:33:06,240
uh as our special mention is the

00:33:02,799 --> 00:33:08,480
lack of federers and activity pub

00:33:06,240 --> 00:33:10,640
related applications such as macedon and

00:33:08,480 --> 00:33:12,880
peertube missing from

00:33:10,640 --> 00:33:16,720
debian we would love to see those

00:33:12,880 --> 00:33:16,720
applications available in debian

00:33:18,240 --> 00:33:23,600
so another area we'd love to see is

00:33:21,279 --> 00:33:24,720
debian installer there's a lot of talk

00:33:23,600 --> 00:33:26,480
about

00:33:24,720 --> 00:33:27,919
providing an option in the debian

00:33:26,480 --> 00:33:30,720
installer

00:33:27,919 --> 00:33:32,240
to allow blends to be installed during

00:33:30,720 --> 00:33:34,480
installation

00:33:32,240 --> 00:33:36,159
and if freedom box is installable in

00:33:34,480 --> 00:33:37,679
that way it would bring a lot of

00:33:36,159 --> 00:33:40,080
exposure

00:33:37,679 --> 00:33:42,559
to all the deviant users out there

00:33:40,080 --> 00:33:44,799
regarding freedom box and other blends

00:33:42,559 --> 00:33:46,480
we hope to be able to help out the

00:33:44,799 --> 00:33:47,200
developers working on this issue in the

00:33:46,480 --> 00:33:50,840
coming

00:33:47,200 --> 00:33:52,080
weeks or months whatever our time

00:33:50,840 --> 00:33:55,120
permits

00:33:52,080 --> 00:33:56,960
um you can also help

00:33:55,120 --> 00:33:59,519
freedom box project by translating the

00:33:56,960 --> 00:34:01,840
freedom box interface freedom box manual

00:33:59,519 --> 00:34:07,840
freedombox.org website into the la into

00:34:01,840 --> 00:34:07,840
your own language

00:34:08,240 --> 00:34:14,320
chances are um if you're if

00:34:11,440 --> 00:34:15,359
you're a debian developer chances are uh

00:34:14,320 --> 00:34:17,679
you already

00:34:15,359 --> 00:34:18,560
uh helped out the freedom box project in

00:34:17,679 --> 00:34:21,760
a certain way

00:34:18,560 --> 00:34:24,800
in in one way or the other because we

00:34:21,760 --> 00:34:27,760
depend on a lot of debian core

00:34:24,800 --> 00:34:28,720
uh features and for that a heartfelt

00:34:27,760 --> 00:34:32,000
thank you from

00:34:28,720 --> 00:34:32,000
all of us at freedom box

00:34:32,159 --> 00:34:37,839
we have plenty of time for our q a

00:34:35,599 --> 00:34:41,280
or a few links to the freedom box

00:34:37,839 --> 00:34:41,280
project thank you very much

00:34:42,159 --> 00:34:46,879
thank you very much for the fine talk uh

00:34:44,560 --> 00:34:50,879
sunil

00:34:46,879 --> 00:34:54,079
and james

00:34:50,879 --> 00:34:56,960
so i saw in the irc during the talk that

00:34:54,079 --> 00:34:58,240
uh many of us are interested to try it

00:34:56,960 --> 00:35:01,520
out if we were not

00:34:58,240 --> 00:35:04,560
using it already so it's a great project

00:35:01,520 --> 00:35:07,599
thanks so by way of questions

00:35:04,560 --> 00:35:09,920
we we see that some of

00:35:07,599 --> 00:35:12,160
many of them have already been answered

00:35:09,920 --> 00:35:14,640
the questions that are on the pad

00:35:12,160 --> 00:35:17,440
let's just quickly check here but for

00:35:14,640 --> 00:35:21,200
some reason

00:35:17,440 --> 00:35:24,240
the pad on the string

00:35:21,200 --> 00:35:27,680
doesn't seem to be

00:35:24,240 --> 00:35:32,240
behaving okay while we try and

00:35:27,680 --> 00:35:33,200
fix that let me just check if there are

00:35:32,240 --> 00:35:35,760
any questions on

00:35:33,200 --> 00:35:35,760
rc

00:35:36,720 --> 00:35:44,880
okay it looks like on rc there are

00:35:40,079 --> 00:35:47,599
no unanswered questions

00:35:44,880 --> 00:35:47,599
and in the

00:35:48,240 --> 00:35:54,960
in the head nearly everything has

00:35:51,839 --> 00:35:59,680
already been

00:35:54,960 --> 00:36:01,920
uh as far as i can see

00:35:59,680 --> 00:36:03,760
okay so for the benefit of those who are

00:36:01,920 --> 00:36:07,200
just watching the stream and

00:36:03,760 --> 00:36:10,320
maybe not able to access the pad

00:36:07,200 --> 00:36:12,400
since it has a couple of restrictions

00:36:10,320 --> 00:36:13,520
we can just quickly cover some of the

00:36:12,400 --> 00:36:15,599
questions

00:36:13,520 --> 00:36:17,040
um so there was a question if there are

00:36:15,599 --> 00:36:20,720
any plans to integrate

00:36:17,040 --> 00:36:24,800
federated clients into freedom books

00:36:20,720 --> 00:36:28,240
and the answer is yes

00:36:24,800 --> 00:36:28,240
there are such plans but

00:36:28,480 --> 00:36:32,160
the challenge is that some of the

00:36:30,240 --> 00:36:33,680
packages are not in the best shape

00:36:32,160 --> 00:36:36,800
currency in debian

00:36:33,680 --> 00:36:41,790
but they use work

00:36:36,800 --> 00:36:43,200
along that line

00:36:41,790 --> 00:36:45,359
[Music]

00:36:43,200 --> 00:36:46,880
okay so there is a new question coming

00:36:45,359 --> 00:36:49,839
up

00:36:46,880 --> 00:36:49,839
which is

00:36:49,920 --> 00:36:53,200
has it been considered to implement a

00:36:51,920 --> 00:36:56,079
ship server

00:36:53,200 --> 00:36:56,079
in freedom box

00:36:59,440 --> 00:37:02,880
perhaps yes

00:37:03,520 --> 00:37:09,839
yes we did consider a sip server but the

00:37:10,880 --> 00:37:18,720
we did have uh repro as a sip server

00:37:15,280 --> 00:37:22,320
earlier but repro got removed from

00:37:18,720 --> 00:37:24,480
debian a few months maybe a year

00:37:22,320 --> 00:37:26,640
more than a year back and so we had to

00:37:24,480 --> 00:37:29,040
remove it from freedom box as well

00:37:26,640 --> 00:37:30,480
but uh if there's a good uh

00:37:29,040 --> 00:37:33,200
implementation

00:37:30,480 --> 00:37:34,800
available and if there is some interest

00:37:33,200 --> 00:37:38,320
we would definitely like to

00:37:34,800 --> 00:37:38,320
add a server back

00:37:38,800 --> 00:37:41,920
all right thank you very much we hope

00:37:41,359 --> 00:37:44,960
that

00:37:41,920 --> 00:37:47,599
answers the question

00:37:44,960 --> 00:37:48,880
at the end of the page i'm sorry i can't

00:37:47,599 --> 00:37:53,680
scroll the page

00:37:48,880 --> 00:37:53,680
the paid for some reason

00:37:53,839 --> 00:37:59,440
okay so someone is also asking i use a

00:37:56,880 --> 00:38:02,839
containerized setup to deploy most of my

00:37:59,440 --> 00:38:06,560
services using docker compose

00:38:02,839 --> 00:38:09,760
containers which are isolated

00:38:06,560 --> 00:38:12,880
and they are present behind the reverse

00:38:09,760 --> 00:38:16,560
proxy can a similar setup be achieved

00:38:12,880 --> 00:38:16,560
with freedom box on servers

00:38:17,280 --> 00:38:22,000
uh yes uh a lot of freedom box users

00:38:20,320 --> 00:38:25,760
have deployed freedom box

00:38:22,000 --> 00:38:27,680
um and uh used freedom box to

00:38:25,760 --> 00:38:29,359
set up some of their applications and

00:38:27,680 --> 00:38:30,960
some of the applications that

00:38:29,359 --> 00:38:32,960
they were missing from freedom box they

00:38:30,960 --> 00:38:36,720
deployed using containers

00:38:32,960 --> 00:38:39,119
and freedom box then provides

00:38:36,720 --> 00:38:42,160
let's encrypt certificates and firewall

00:38:39,119 --> 00:38:42,160
and a few other things

00:38:42,400 --> 00:38:46,079
at the host level then forwards the

00:38:45,119 --> 00:38:48,480
traffic to

00:38:46,079 --> 00:38:51,119
the container that is certainly a

00:38:48,480 --> 00:38:51,119
possibility

00:38:52,240 --> 00:38:56,240
all right thank you very much

00:38:58,079 --> 00:39:01,520
okay so someone else is asking a

00:39:00,240 --> 00:39:05,040
question

00:39:01,520 --> 00:39:07,359
is there is there a good self

00:39:05,040 --> 00:39:08,079
hosting service available for freedom

00:39:07,359 --> 00:39:10,880
box

00:39:08,079 --> 00:39:15,839
to share file for firefox bookmarks

00:39:10,880 --> 00:39:15,839
between devices and users

00:39:18,400 --> 00:39:22,480
james uh i assume the best option here

00:39:21,599 --> 00:39:25,599
would be

00:39:22,480 --> 00:39:27,280
the firefox sync service to get that

00:39:25,599 --> 00:39:28,560
actually packaged into debian

00:39:27,280 --> 00:39:30,960
i'm not really sure how many

00:39:28,560 --> 00:39:35,440
requirements or dependencies it has

00:39:30,960 --> 00:39:35,440
um so other than that

00:39:35,839 --> 00:39:40,160
possibly you could store your bookmarks

00:39:38,800 --> 00:39:42,400
in a file that's

00:39:40,160 --> 00:39:43,839
shared through syncthing and you use

00:39:42,400 --> 00:39:44,640
think thing to synchronize it between

00:39:43,839 --> 00:39:47,119
different devices

00:39:44,640 --> 00:39:50,480
but that might not be as well integrated

00:39:47,119 --> 00:39:50,480
as as firefox sync

00:39:50,880 --> 00:39:54,720
i am going to work on packaging charlie

00:39:53,119 --> 00:39:56,079
as well but that's

00:39:54,720 --> 00:39:58,320
maybe something different than what you

00:39:56,079 --> 00:40:02,800
want that's more of a a web app

00:39:58,320 --> 00:40:02,800
that can store and share bookmarks

00:40:04,560 --> 00:40:09,119
all right thank you let me just check if

00:40:08,640 --> 00:40:13,920
there's

00:40:09,119 --> 00:40:13,920
any other question that has come up

00:40:22,839 --> 00:40:26,480
okay

00:40:24,160 --> 00:40:28,640
okay so in connection with the raspberry

00:40:26,480 --> 00:40:32,319
pi

00:40:28,640 --> 00:40:36,319
um you did answer that the

00:40:32,319 --> 00:40:38,000
the image is fully free but then

00:40:36,319 --> 00:40:39,839
in the answer you mentioned that the

00:40:38,000 --> 00:40:41,359
user might have to fetch firmware

00:40:39,839 --> 00:40:43,680
separately

00:40:41,359 --> 00:40:45,280
so the question the follow-up question

00:40:43,680 --> 00:40:52,880
is what would need

00:40:45,280 --> 00:40:54,880
the private blobs to work

00:40:52,880 --> 00:40:56,800
in connection with the raspberry pi i

00:40:54,880 --> 00:40:59,040
don't know if you

00:40:56,800 --> 00:40:59,040
uh

00:41:00,640 --> 00:41:08,160
so um so a raspberry pi boot process

00:41:05,119 --> 00:41:11,520
requires a

00:41:08,160 --> 00:41:14,640
a binary blob which for which no

00:41:11,520 --> 00:41:18,000
free software equivalent

00:41:14,640 --> 00:41:21,839
exists as far as i understand so this uh

00:41:18,000 --> 00:41:24,560
this blob actually first runs on the gpu

00:41:21,839 --> 00:41:25,040
and then starts the arm processor and

00:41:24,560 --> 00:41:28,800
then

00:41:25,040 --> 00:41:28,800
a few a few other things happen

00:41:29,040 --> 00:41:34,960
so most of the raspberry pi images

00:41:32,880 --> 00:41:37,680
that are they're being shipped out there

00:41:34,960 --> 00:41:40,319
contain this these proprietary blobs

00:41:37,680 --> 00:41:42,240
and infrabox project we've been uh

00:41:40,319 --> 00:41:46,160
unhappy with it for a while

00:41:42,240 --> 00:41:46,960
um and now we are adopting a solution

00:41:46,160 --> 00:41:50,720
where

00:41:46,960 --> 00:41:53,839
the os images themselves do not have to

00:41:50,720 --> 00:41:56,160
contain these proprietary blobs

00:41:53,839 --> 00:41:56,960
what we are now recommending users is to

00:41:56,160 --> 00:41:59,040
obtain

00:41:56,960 --> 00:42:00,839
the firmware separately there is a

00:41:59,040 --> 00:42:03,520
project called

00:42:00,839 --> 00:42:06,640
um pi

00:42:03,520 --> 00:42:10,079
firmware task force and

00:42:06,640 --> 00:42:12,720
this particular project

00:42:10,079 --> 00:42:15,200
forks the tiana core project and

00:42:12,720 --> 00:42:18,079
provides a uefi firmware

00:42:15,200 --> 00:42:20,000
it also comes shipped with the raspberry

00:42:18,079 --> 00:42:23,920
pi's boot blobs

00:42:20,000 --> 00:42:25,599
the proprietary blobs so all of that in

00:42:23,920 --> 00:42:29,760
one package

00:42:25,599 --> 00:42:32,240
user can obtain and put it on an sd card

00:42:29,760 --> 00:42:34,160
whereas the primary operating system

00:42:32,240 --> 00:42:39,599
which is freedom box can

00:42:34,160 --> 00:42:39,599
can be put on a usb disk

00:42:40,000 --> 00:42:46,560
and that way raspberry pi first

00:42:43,440 --> 00:42:47,599
boots the um proprietary blobs which

00:42:46,560 --> 00:42:51,200
then start the

00:42:47,599 --> 00:42:54,800
tiano core based uh uefi firmware

00:42:51,200 --> 00:42:58,319
which then starts a freedom box uefi

00:42:54,800 --> 00:43:00,319
image um so when we are shipping uh

00:42:58,319 --> 00:43:02,000
raspberry pi images this way we don't

00:43:00,319 --> 00:43:04,560
have to

00:43:02,000 --> 00:43:05,760
include proprietary blobs uh in the os

00:43:04,560 --> 00:43:09,359
image itself

00:43:05,760 --> 00:43:12,640
we can request uh uh

00:43:09,359 --> 00:43:13,359
users to obtain the firmware separately

00:43:12,640 --> 00:43:16,240
even though

00:43:13,359 --> 00:43:17,920
it is a propriet some parts of the

00:43:16,240 --> 00:43:19,920
firmware are proprietary

00:43:17,920 --> 00:43:21,040
hopefully in future versions of

00:43:19,920 --> 00:43:24,560
raspberry pi

00:43:21,040 --> 00:43:26,480
um the spi flash will be larger

00:43:24,560 --> 00:43:29,040
and would contain this sort of a

00:43:26,480 --> 00:43:30,160
firmware already so that the os images

00:43:29,040 --> 00:43:33,200
don't need to have

00:43:30,160 --> 00:43:34,240
proprietary blobs anymore so at that

00:43:33,200 --> 00:43:37,839
point it would be

00:43:34,240 --> 00:43:39,920
pretty much similar to amd and intel

00:43:37,839 --> 00:43:41,839
uh hardware which have proprietary

00:43:39,920 --> 00:43:46,400
biases

00:43:41,839 --> 00:43:46,400
while the os images are entirely free

00:43:46,640 --> 00:43:52,480
okay thank you very much uh sunil

00:43:49,920 --> 00:43:54,640
and james for your work and also of

00:43:52,480 --> 00:43:58,160
course for the entire freedom box

00:43:54,640 --> 00:44:01,280
project um there are a couple of

00:43:58,160 --> 00:44:03,119
other questions on the pad but we no

00:44:01,280 --> 00:44:04,480
longer have time for that for those so

00:44:03,119 --> 00:44:08,880
perhaps you'll

00:44:04,480 --> 00:44:11,040
be able to continue answering them there

00:44:08,880 --> 00:44:14,000
so but thank you very much for the talk

00:44:11,040 --> 00:44:16,480
and delivery

00:44:14,000 --> 00:44:18,000
we have a discussion forum you can co

00:44:16,480 --> 00:44:19,119
post your questions there as well we

00:44:18,000 --> 00:44:21,839
will of course continue

00:44:19,119 --> 00:44:23,760
uh answering the questions here we also

00:44:21,839 --> 00:44:25,280
have provided our email addresses if you

00:44:23,760 --> 00:44:27,599
want to reach us for any further

00:44:25,280 --> 00:44:27,599
questions

00:44:27,680 --> 00:44:36,160

YouTube URL: https://www.youtube.com/watch?v=j8T7uWZUoJk


