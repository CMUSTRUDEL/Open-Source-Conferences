Title: status update on autopkgtest and friends
Publication date: 2020-10-23
Playlist: DebConf 20
Description: 
	by Paul Gevers
by Antonio Terceiro

At: DebConf20
https://debconf20.debconf.org/talks/40-status-update-on-autopkgtest-and-friends/

We want to give you an update on the current status of the autopkgtest, autodep8 and debci packages and the ci.debian.net infrastructure.

Room: Talks
Scheduled start: 2020-08-25 15:30:00
Captions: 
	00:00:07,759 --> 00:00:11,599
hello

00:00:08,400 --> 00:00:14,639
and welcome at the status update talk on

00:00:11,599 --> 00:00:17,840
auto package tester and friends

00:00:14,639 --> 00:00:20,960
i'm paul gevers or albrus

00:00:17,840 --> 00:00:22,080
and uh one of the maintainers behind the

00:00:20,960 --> 00:00:25,439
uh

00:00:22,080 --> 00:00:28,960
ci deviant.net infrastructure and i

00:00:25,439 --> 00:00:29,439
have been implementing how to package

00:00:28,960 --> 00:00:32,559
test

00:00:29,439 --> 00:00:36,480
in uh migration

00:00:32,559 --> 00:00:39,040
software in debian i'll be giving this

00:00:36,480 --> 00:00:42,840
talk together with antonio we'll do

00:00:39,040 --> 00:00:45,600
a couple of the subjects

00:00:42,840 --> 00:00:48,800
um let me

00:00:45,600 --> 00:00:51,360
start with the first item

00:00:48,800 --> 00:00:52,640
that we want to update you on and that's

00:00:51,360 --> 00:00:56,239
the auto package test

00:00:52,640 --> 00:01:00,000
package itself uh the last year

00:00:56,239 --> 00:01:03,120
we've added a couple of restrictions

00:01:00,000 --> 00:01:06,400
which enable the maintainers of packages

00:01:03,120 --> 00:01:10,080
to fine-tune

00:01:06,400 --> 00:01:13,439
the use of the other package test

00:01:10,080 --> 00:01:15,920
and they're the there's the flaky

00:01:13,439 --> 00:01:17,200
restriction which can be used for

00:01:15,920 --> 00:01:19,920
out-of-package tests that

00:01:17,200 --> 00:01:21,920
don't always succeed but a failure of

00:01:19,920 --> 00:01:23,520
the test doesn't necessarily mean that

00:01:21,920 --> 00:01:27,360
there's something

00:01:23,520 --> 00:01:29,840
very much wrong so you can still get

00:01:27,360 --> 00:01:32,960
results except there will be used by the

00:01:29,840 --> 00:01:35,600
migration software

00:01:32,960 --> 00:01:35,600
a similar

00:01:36,479 --> 00:01:42,159
result can be obtained with a

00:01:40,159 --> 00:01:44,240
slightly different there's the

00:01:42,159 --> 00:01:47,040
superficial restriction

00:01:44,240 --> 00:01:47,920
which is basically to tell that your

00:01:47,040 --> 00:01:51,439
test is

00:01:47,920 --> 00:01:54,640
not doing a hell of a lot it's basically

00:01:51,439 --> 00:01:57,680
just a smoke test

00:01:54,640 --> 00:02:00,399
and if it succeed it uh

00:01:57,680 --> 00:02:01,840
it tells you that there's not much wrong

00:02:00,399 --> 00:02:03,600
but it also doesn't say that

00:02:01,840 --> 00:02:07,119
everything's right

00:02:03,600 --> 00:02:10,160
in britney will use this the so the

00:02:07,119 --> 00:02:14,239
migration software will use this uh

00:02:10,160 --> 00:02:17,440
by not giving it a reduction in the time

00:02:14,239 --> 00:02:22,560
to migrate but still it will flag

00:02:17,440 --> 00:02:27,920
failing tests as regressions

00:02:22,560 --> 00:02:30,480
now um the legacy support on

00:02:27,920 --> 00:02:31,760
the ci debian.net infrastructure is that

00:02:30,480 --> 00:02:36,720
you had

00:02:31,760 --> 00:02:39,440
basically unlimited and internet access

00:02:36,720 --> 00:02:41,280
but we've been we had to change that

00:02:39,440 --> 00:02:42,560
recently because we got a couple of

00:02:41,280 --> 00:02:45,200
workers behind the

00:02:42,560 --> 00:02:46,879
firewall so there's now the needs

00:02:45,200 --> 00:02:49,360
internet

00:02:46,879 --> 00:02:51,200
restriction which is also something that

00:02:49,360 --> 00:02:54,560
ftp master

00:02:51,200 --> 00:02:58,000
considers a thing so

00:02:54,560 --> 00:03:00,159
if you need a real internet connection

00:02:58,000 --> 00:03:04,080
so resources that have to be found

00:03:00,159 --> 00:03:06,480
on the internet you must add

00:03:04,080 --> 00:03:08,480
the needs internet restriction to your

00:03:06,480 --> 00:03:10,319
auto package test

00:03:08,480 --> 00:03:12,159
such that we can skip it on

00:03:10,319 --> 00:03:14,720
infrastructure where that's not

00:03:12,159 --> 00:03:14,720
available

00:03:15,920 --> 00:03:22,800
and then there's a skip not installable

00:03:19,680 --> 00:03:25,360
restriction which is a not

00:03:22,800 --> 00:03:26,000
extremely pretty restriction but

00:03:25,360 --> 00:03:30,239
basically

00:03:26,000 --> 00:03:33,040
it is there to skip a test if

00:03:30,239 --> 00:03:35,680
for instance your package you depend on

00:03:33,040 --> 00:03:38,159
a package that's

00:03:35,680 --> 00:03:38,959
not available for instance it is

00:03:38,159 --> 00:03:42,000
available in

00:03:38,959 --> 00:03:45,519
stable but not in testing

00:03:42,000 --> 00:03:46,000
or you want to have a test for ubuntu

00:03:45,519 --> 00:03:48,959
and not

00:03:46,000 --> 00:03:51,040
in debian you can mark it by skip note

00:03:48,959 --> 00:03:53,840
installable and will be skipped on

00:03:51,040 --> 00:03:56,640
debian infrastructure

00:03:53,840 --> 00:03:57,519
um and then the last restriction that we

00:03:56,640 --> 00:04:01,200
added was

00:03:57,519 --> 00:04:04,239
skippable which basically means that

00:04:01,200 --> 00:04:05,120
inside of your test you can check for

00:04:04,239 --> 00:04:08,879
conditions

00:04:05,120 --> 00:04:12,319
and if the proper conditions are not met

00:04:08,879 --> 00:04:16,079
you can exit with code 77

00:04:12,319 --> 00:04:17,280
and then the test will be marked and

00:04:16,079 --> 00:04:20,799
skipped

00:04:17,280 --> 00:04:22,479
so it will not be counted as a pass or a

00:04:20,799 --> 00:04:26,880
failure

00:04:22,479 --> 00:04:26,880
and rather have a neutral uh result

00:04:27,280 --> 00:04:31,919
something which is not directly provided

00:04:28,960 --> 00:04:34,880
by us but we we want to mention here

00:04:31,919 --> 00:04:36,639
is the salsa ci pipeline it's been in

00:04:34,880 --> 00:04:40,639
place since 2018

00:04:36,639 --> 00:04:42,560
it's very easy to use it's just

00:04:40,639 --> 00:04:44,880
three lines of code that you copy paste

00:04:42,560 --> 00:04:47,840
into your package

00:04:44,880 --> 00:04:48,560
uh it provides auto package test runs as

00:04:47,840 --> 00:04:52,080
well as

00:04:48,560 --> 00:04:53,680
a host of other things like building the

00:04:52,080 --> 00:04:57,120
package running linchen doing

00:04:53,680 --> 00:04:59,040
reproducibility checks etc

00:04:57,120 --> 00:05:01,199
their auto package test setup is

00:04:59,040 --> 00:05:03,520
reasonably similar to what we do in ci

00:05:01,199 --> 00:05:06,880
dot device dot net

00:05:03,520 --> 00:05:08,639
it lets you know really early when you

00:05:06,880 --> 00:05:11,520
are working on the packages there

00:05:08,639 --> 00:05:12,320
are auto package dash problem so you

00:05:11,520 --> 00:05:16,000
don't wait

00:05:12,320 --> 00:05:18,479
until after the upload to find out that

00:05:16,000 --> 00:05:21,360
your auto package has now failed because

00:05:18,479 --> 00:05:25,199
there was a change in dependency

00:05:21,360 --> 00:05:27,120
or a change you've made by mistake

00:05:25,199 --> 00:05:28,400
and then makes a lot of package that

00:05:27,120 --> 00:05:30,240
fails

00:05:28,400 --> 00:05:32,160
we really recommend you to use some of

00:05:30,240 --> 00:05:35,199
the software ci pipeline

00:05:32,160 --> 00:05:37,360
and you can check out the salsa ci

00:05:35,199 --> 00:05:38,639
team pipeline project to see more

00:05:37,360 --> 00:05:42,160
details and

00:05:38,639 --> 00:05:42,160
instructions on how to use it

00:05:46,880 --> 00:05:53,280
on the autodesk 8 front of the page is

00:05:50,560 --> 00:05:56,479
our helper for producing

00:05:53,280 --> 00:05:59,600
test control files

00:05:56,479 --> 00:06:02,720
you can now provide some configuration

00:05:59,600 --> 00:06:05,960
for the degeneration of the console file

00:06:02,720 --> 00:06:08,319
in auto package dash package

00:06:05,960 --> 00:06:10,319
package.type.com inside the devianttest

00:06:08,319 --> 00:06:13,759
directory

00:06:10,319 --> 00:06:15,600
so package type is the the supported

00:06:13,759 --> 00:06:19,840
package types so it can be pro

00:06:15,600 --> 00:06:23,039
ruby r etc

00:06:19,840 --> 00:06:25,360
for for all types of packages we support

00:06:23,039 --> 00:06:26,479
uh two configurations one is extra

00:06:25,360 --> 00:06:29,520
defense which

00:06:26,479 --> 00:06:31,520
adds new uh defense to your test you can

00:06:29,520 --> 00:06:34,319
use this to include

00:06:31,520 --> 00:06:35,360
uh packages from recommends and also to

00:06:34,319 --> 00:06:37,280
include the extra

00:06:35,360 --> 00:06:39,039
optional test dependencies that you want

00:06:37,280 --> 00:06:40,960
in your test

00:06:39,039 --> 00:06:44,479
you can also use excel restrictions to

00:06:40,960 --> 00:06:48,720
add restrictions to the generated tests

00:06:44,479 --> 00:06:51,599
and for python packages you can control

00:06:48,720 --> 00:06:52,960
the python module name that's using used

00:06:51,599 --> 00:06:56,000
in the

00:06:52,960 --> 00:06:57,280
default import test provided by alphabet

00:06:56,000 --> 00:06:59,360
page

00:06:57,280 --> 00:07:03,840
you can see more about that in the

00:06:59,360 --> 00:07:03,840
autodesk h main page

00:07:06,240 --> 00:07:10,800
devci is the package behind the

00:07:08,599 --> 00:07:14,840
ci.debian.net service

00:07:10,800 --> 00:07:17,759
it has received a major overhaul since

00:07:14,840 --> 00:07:21,440
2018 first that year

00:07:17,759 --> 00:07:25,120
we had candid psy as our outreach intern

00:07:21,440 --> 00:07:29,840
she worked on creating a self-service

00:07:25,120 --> 00:07:31,599
interface for authenticated users

00:07:29,840 --> 00:07:34,160
using that interface you can both

00:07:31,599 --> 00:07:37,199
request tests

00:07:34,160 --> 00:07:40,639
for arbitrary packages and you can

00:07:37,199 --> 00:07:45,120
include dependencies from

00:07:40,639 --> 00:07:48,000
different suites so you can run tests

00:07:45,120 --> 00:07:50,240
on a package from testing with a

00:07:48,000 --> 00:07:51,680
dependencies from unstable which is what

00:07:50,240 --> 00:07:53,759
britney does

00:07:51,680 --> 00:07:56,639
but if you can trigger your own with

00:07:53,759 --> 00:07:59,599
different combinations

00:07:56,639 --> 00:08:00,879
and you can also list your past test uh

00:07:59,599 --> 00:08:02,800
submissions so

00:08:00,879 --> 00:08:04,400
you you see a history of all the classes

00:08:02,800 --> 00:08:08,479
submitted

00:08:04,400 --> 00:08:12,720
and you can and that's how we use it for

00:08:08,479 --> 00:08:13,360
uh listing the britney submission so

00:08:12,720 --> 00:08:16,560
breaching

00:08:13,360 --> 00:08:19,680
for ci.devin.net is just another user

00:08:16,560 --> 00:08:21,039
it's just a special one because it also

00:08:19,680 --> 00:08:24,319
has access to control the

00:08:21,039 --> 00:08:27,520
migration of packages uh

00:08:24,319 --> 00:08:29,759
our web pages are more up to date now so

00:08:27,520 --> 00:08:30,960
in the past it used to be the case that

00:08:29,759 --> 00:08:33,440
you had

00:08:30,960 --> 00:08:34,479
for instance the package tracker saying

00:08:33,440 --> 00:08:37,039
that the package

00:08:34,479 --> 00:08:38,959
uh test failed and then you didn't have

00:08:37,039 --> 00:08:44,640
the test listed in the web interface

00:08:38,959 --> 00:08:47,519
yet so now we have reworked the

00:08:44,640 --> 00:08:49,040
web page generation to be done as soon

00:08:47,519 --> 00:08:50,080
as there are new test results for a

00:08:49,040 --> 00:08:52,800
package

00:08:50,080 --> 00:08:53,519
so now you don't have outdated package

00:08:52,800 --> 00:08:56,880
anymore

00:08:53,519 --> 00:08:59,360
and in general the updating of the user

00:08:56,880 --> 00:09:03,279
interface is a lot better now and

00:08:59,360 --> 00:09:04,959
faster we we have also solved several

00:09:03,279 --> 00:09:08,480
infrastructure issues

00:09:04,959 --> 00:09:09,920
in the in the service uh i won't bother

00:09:08,480 --> 00:09:13,760
you with the details but

00:09:09,920 --> 00:09:15,519
uh it surfaced to say that um

00:09:13,760 --> 00:09:16,800
the service is a lot more reliable now

00:09:15,519 --> 00:09:20,720
and we have less

00:09:16,800 --> 00:09:24,160
emergency maintenance to do that's that

00:09:20,720 --> 00:09:24,160
overall win for the project

00:09:24,240 --> 00:09:31,519
so the ci.debian.net infrastructure

00:09:27,920 --> 00:09:35,440
currently has workers for three

00:09:31,519 --> 00:09:39,600
architectures which are the classical

00:09:35,440 --> 00:09:44,080
amd 64 where we have

00:09:39,600 --> 00:09:47,760
12 worker instances distributed over 12

00:09:44,080 --> 00:09:51,360
workers we have

00:09:47,760 --> 00:09:51,839
arm 64 workers we have quite a bunch of

00:09:51,360 --> 00:09:54,959
those

00:09:51,839 --> 00:09:59,440
most of them are running

00:09:54,959 --> 00:10:03,440
either eight or two workers

00:09:59,440 --> 00:10:06,959
instances to run auto package tests

00:10:03,440 --> 00:10:10,000
and we have ppc64el

00:10:06,959 --> 00:10:15,920
where we have two workers this last

00:10:10,000 --> 00:10:15,920
infrastruc architecture is not

00:10:16,800 --> 00:10:20,959
keeping up with the uh the work that

00:10:19,519 --> 00:10:22,880
needs to be done for

00:10:20,959 --> 00:10:25,120
testing integration so we're not using

00:10:22,880 --> 00:10:28,959
that yet

00:10:25,120 --> 00:10:33,279
we are using it for stable

00:10:28,959 --> 00:10:36,320
or proposed updates reviews

00:10:33,279 --> 00:10:37,200
the other two architectures so amd 64

00:10:36,320 --> 00:10:40,800
and iron

00:10:37,200 --> 00:10:43,760
64 are fully integrated into

00:10:40,800 --> 00:10:45,440
unstable to testing migration and the

00:10:43,760 --> 00:10:48,480
results of these tests are

00:10:45,440 --> 00:10:50,800
used to

00:10:48,480 --> 00:10:53,519
block packages that introduce

00:10:50,800 --> 00:10:53,519
regressions

00:10:56,079 --> 00:11:03,120
and the

00:10:59,120 --> 00:11:07,120
the same software that is used to

00:11:03,120 --> 00:11:07,839
check the uh unstable to testing

00:11:07,120 --> 00:11:11,760
migration

00:11:07,839 --> 00:11:14,800
is used uh also for uh stable

00:11:11,760 --> 00:11:17,600
and uh well until the retirement on

00:11:14,800 --> 00:11:19,839
old stable to check that everything that

00:11:17,600 --> 00:11:23,360
these improposed updates is uh

00:11:19,839 --> 00:11:25,519
is also not causing regressions

00:11:23,360 --> 00:11:26,399
and a couple of issues have been found

00:11:25,519 --> 00:11:29,920
that way already

00:11:26,399 --> 00:11:33,120
so that's uh that's good

00:11:29,920 --> 00:11:35,920
uh as a service for people that

00:11:33,120 --> 00:11:38,320
upload rather big changes we're also

00:11:35,920 --> 00:11:42,079
running

00:11:38,320 --> 00:11:45,120
an instance on experimental so

00:11:42,079 --> 00:11:46,079
for every upload to experimental the

00:11:45,120 --> 00:11:48,640
tests are

00:11:46,079 --> 00:11:50,160
scheduled in the same way as uploads to

00:11:48,640 --> 00:11:53,839
unstable

00:11:50,160 --> 00:11:58,079
tested in testing we test

00:11:53,839 --> 00:12:00,880
uploads from experimental in unstable

00:11:58,079 --> 00:12:03,360
and the results can be found on the

00:12:00,880 --> 00:12:05,680
photo exclusives

00:12:03,360 --> 00:12:05,680
page

00:12:06,180 --> 00:12:11,680
[Music]

00:12:09,200 --> 00:12:12,560
and i want to stress that for people

00:12:11,680 --> 00:12:15,839
that are

00:12:12,560 --> 00:12:19,760
using experimental uh

00:12:15,839 --> 00:12:20,800
it it helps to detect items early before

00:12:19,760 --> 00:12:24,320
they actually

00:12:20,800 --> 00:12:27,600
are uploaded to unstable

00:12:24,320 --> 00:12:30,399
and just to show

00:12:27,600 --> 00:12:30,399
how much we

00:12:31,519 --> 00:12:34,880
this integration has

00:12:35,360 --> 00:12:42,560
has resulted in so far

00:12:38,800 --> 00:12:44,720
up to the mid of august there have been

00:12:42,560 --> 00:12:45,839
eleven hundred and thirty six bucks

00:12:44,720 --> 00:12:49,760
found with

00:12:45,839 --> 00:12:53,279
the user tags of the seattle debian

00:12:49,760 --> 00:12:56,320
tottenham team

00:12:53,279 --> 00:13:00,079
which are mostly regressions either

00:12:56,320 --> 00:13:04,800
in a package itself or a package causing

00:13:00,079 --> 00:13:04,800
failure in outer packs tests of other

00:13:04,839 --> 00:13:07,839
packages

00:13:09,120 --> 00:13:12,480
and that's all we had for today thank

00:13:10,880 --> 00:13:14,160
you for watching and if you have

00:13:12,480 --> 00:13:17,279
questions now we will be

00:13:14,160 --> 00:13:17,279
happy to answer them

00:13:18,639 --> 00:13:26,240
there was a question i see about um

00:13:22,720 --> 00:13:29,279
the connection to internet

00:13:26,240 --> 00:13:33,680
and i can explain a tiny bit about that

00:13:29,279 --> 00:13:36,240
so historically there has been a lot of

00:13:33,680 --> 00:13:39,160
access to well basically the access to

00:13:36,240 --> 00:13:41,920
the internet was unrestricted on the

00:13:39,160 --> 00:13:45,360
ci.debian.net infrastructure

00:13:41,920 --> 00:13:47,600
but because with a couple of workers in

00:13:45,360 --> 00:13:50,880
china now

00:13:47,600 --> 00:13:50,880
that doesn't always work

00:13:51,040 --> 00:13:56,399
so the needs internet restriction was

00:13:54,240 --> 00:14:00,639
added for that

00:13:56,399 --> 00:14:00,639
and on top of that also the

00:14:01,279 --> 00:14:09,040
i believe that ftp master

00:14:04,480 --> 00:14:13,839
also prefer that auto package tests

00:14:09,040 --> 00:14:13,839
for our archive actually work

00:14:14,240 --> 00:14:18,480
basically self-contained i'm not totally

00:14:16,639 --> 00:14:20,959
sure if that also holds for data

00:14:18,480 --> 00:14:22,160
but uh at least it shouldn't run any

00:14:20,959 --> 00:14:24,720
software

00:14:22,160 --> 00:14:26,399
uh in your test from not inside of

00:14:24,720 --> 00:14:29,519
debian

00:14:26,399 --> 00:14:32,560
yeah we actually found some some other

00:14:29,519 --> 00:14:33,519
tests that download the random software

00:14:32,560 --> 00:14:36,639
on the internet

00:14:33,519 --> 00:14:40,079
and run data tests and

00:14:36,639 --> 00:14:41,120
you should not do this if we find that

00:14:40,079 --> 00:14:46,079
we

00:14:41,120 --> 00:14:46,079
will block a package until you fix it

00:14:46,959 --> 00:14:53,120
yeah so i'm seeing the uh itapat

00:14:50,079 --> 00:14:55,360
the first question about ci on

00:14:53,120 --> 00:14:57,839
experimental

00:14:55,360 --> 00:14:59,040
depends a bit on what you mean with ci

00:14:57,839 --> 00:15:02,000
so

00:14:59,040 --> 00:15:02,000
we do trigger

00:15:03,279 --> 00:15:09,040
the test but obviously there's no

00:15:06,720 --> 00:15:11,120
migration from experiment anywhere so

00:15:09,040 --> 00:15:13,279
it's not dating in that sense

00:15:11,120 --> 00:15:14,959
but you can see the results on the

00:15:13,279 --> 00:15:18,639
britney page that

00:15:14,959 --> 00:15:22,480
was in the in the presentation and it's

00:15:18,639 --> 00:15:22,480
that's very useful for people doing

00:15:23,440 --> 00:15:28,000
transitions so you can upload the new

00:15:26,320 --> 00:15:31,360
version for library

00:15:28,000 --> 00:15:33,440
or your interface to experiment and have

00:15:31,360 --> 00:15:35,360
the reverse that means tested on

00:15:33,440 --> 00:15:37,040
unstable with that

00:15:35,360 --> 00:15:39,279
new version experiment so it's very

00:15:37,040 --> 00:15:41,759
useful so you you have an idea what

00:15:39,279 --> 00:15:43,920
bricks and what you have to fix

00:15:41,759 --> 00:15:44,959
actually for proper c libraries it

00:15:43,920 --> 00:15:46,959
doesn't work

00:15:44,959 --> 00:15:48,959
very well because obviously you need to

00:15:46,959 --> 00:15:52,000
have stuff rebuilt

00:15:48,959 --> 00:15:54,480
yeah but for a lot of other

00:15:52,000 --> 00:15:55,279
stuff that doesn't need the rebuilds it

00:15:54,480 --> 00:15:58,000
works

00:15:55,279 --> 00:16:00,880
relatively well yeah so it has some

00:15:58,000 --> 00:16:00,880
profits but

00:16:03,920 --> 00:16:07,600
the next question is

00:16:07,680 --> 00:16:11,279
not really a question thank you

00:16:17,279 --> 00:16:24,079
he plans to implement isolation machine

00:16:20,480 --> 00:16:27,839
uh yes it's on an hour to do this for

00:16:24,079 --> 00:16:31,279
forever i guess and we will get there

00:16:27,839 --> 00:16:34,720
at some point but one problem we have

00:16:31,279 --> 00:16:37,920
is that our amd 64 workers

00:16:34,720 --> 00:16:42,399
are on amazon and that doesn't support

00:16:37,920 --> 00:16:44,880
um nested visualization so

00:16:42,399 --> 00:16:47,279
qm would be pretty useful there and we

00:16:44,880 --> 00:16:50,000
need to

00:16:47,279 --> 00:16:50,720
to find some new work i mean we we can

00:16:50,000 --> 00:16:52,639
just

00:16:50,720 --> 00:16:54,000
ask the dpo for money and get some

00:16:52,639 --> 00:16:57,199
workers to do support

00:16:54,000 --> 00:17:00,720
visualization so it's not the

00:16:57,199 --> 00:17:04,000
matter of not having resources

00:17:00,720 --> 00:17:06,640
just uh the most precious resource

00:17:04,000 --> 00:17:06,640
which is fine

00:17:07,280 --> 00:17:11,600
and next question

00:17:13,120 --> 00:17:17,360
do you want to take the next one for

00:17:15,280 --> 00:17:18,319
yeah so the question is what's your plan

00:17:17,360 --> 00:17:21,679
concerning the

00:17:18,319 --> 00:17:25,120
pressure from ubuntu for using amd64

00:17:21,679 --> 00:17:25,120
testbeds for testing

00:17:25,640 --> 00:17:30,720
i386 packages

00:17:28,559 --> 00:17:32,400
i'm not having any pressure i'm not

00:17:30,720 --> 00:17:36,799
seeing it so

00:17:32,400 --> 00:17:36,799
um of uh

00:17:37,200 --> 00:17:40,480
i guess nobody's working on it but we'll

00:17:39,200 --> 00:17:43,840
also not uh

00:17:40,480 --> 00:17:46,720
really hold it back i think there was

00:17:43,840 --> 00:17:49,120
there is a branch that steve is

00:17:46,720 --> 00:17:51,919
maintaining i think

00:17:49,120 --> 00:17:52,880
it's i think it will not propose a

00:17:51,919 --> 00:17:54,960
string yet but

00:17:52,880 --> 00:17:56,720
the they are doing it in ubuntu but

00:17:54,960 --> 00:17:57,919
there is not really any pressure on the

00:17:56,720 --> 00:18:00,160
debian side

00:17:57,919 --> 00:18:03,679
yeah maybe there's a merge request open

00:18:00,160 --> 00:18:03,679
uh to support it a bit

00:18:05,600 --> 00:18:12,240
next question is not a question

00:18:09,440 --> 00:18:12,240
not a question

00:18:12,880 --> 00:18:19,440
okay any material on how to package the

00:18:16,080 --> 00:18:23,520
integration into transitions

00:18:19,440 --> 00:18:23,520
uh still being typed

00:18:24,799 --> 00:18:33,919
no yeah it's i have it

00:18:28,720 --> 00:18:33,919
i'm not sure what you mean there but um

00:18:34,400 --> 00:18:40,320
oh so the the i don't think we have any

00:18:37,760 --> 00:18:43,200
reading documentation there so the point

00:18:40,320 --> 00:18:46,720
is just that we schedule tests

00:18:43,200 --> 00:18:49,760
on uploads for reverse dependencies

00:18:46,720 --> 00:18:52,960
that work for testing

00:18:49,760 --> 00:18:56,000
packages from unstable to testing

00:18:52,960 --> 00:18:58,400
and it doesn't perfectly work

00:18:56,000 --> 00:18:59,520
during decisions maybe britney could be

00:18:58,400 --> 00:19:02,799
improved there but

00:18:59,520 --> 00:19:06,400
uh usually uh

00:19:02,799 --> 00:19:06,799
stuff itself obviously from experimental

00:19:06,400 --> 00:19:09,760
to

00:19:06,799 --> 00:19:12,240
unstable it's more of a thing because

00:19:09,760 --> 00:19:16,240
bin and news don't work there

00:19:12,240 --> 00:19:16,240
yeah uh the same way

00:19:16,880 --> 00:19:21,039
um i take the question about service in

00:19:19,679 --> 00:19:24,000
china that's interesting

00:19:21,039 --> 00:19:25,280
well that happens to be uh the

00:19:24,000 --> 00:19:27,760
background of the

00:19:25,280 --> 00:19:30,240
sponsor of those workers so that's why

00:19:27,760 --> 00:19:30,240
they're there

00:19:31,919 --> 00:19:37,760
yes i think

00:19:35,200 --> 00:19:38,559
the time okay i just want to plug some

00:19:37,760 --> 00:19:40,960
things

00:19:38,559 --> 00:19:43,039
before we finish for good so we we have

00:19:40,960 --> 00:19:45,039
about on friday

00:19:43,039 --> 00:19:47,360
so we'll be discussing all these issues

00:19:45,039 --> 00:19:48,559
and if you have questions or any other

00:19:47,360 --> 00:19:51,039
suggestions for

00:19:48,559 --> 00:19:52,000
this whole infrastructure you can show

00:19:51,039 --> 00:19:54,640
up you can talk

00:19:52,000 --> 00:19:55,039
to me or to phone irc and get the gt

00:19:54,640 --> 00:19:58,640
link

00:19:55,039 --> 00:20:02,720
for taking part in above

00:19:58,640 --> 00:20:02,720
and that's what we have for now i think

00:20:05,440 --> 00:20:07,840
thank you

00:20:08,480 --> 00:20:17,280

YouTube URL: https://www.youtube.com/watch?v=R3hLQyiy8yo


