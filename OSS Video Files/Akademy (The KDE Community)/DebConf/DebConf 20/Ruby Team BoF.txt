Title: Ruby Team BoF
Publication date: 2020-10-23
Playlist: DebConf 20
Description: 
	by Utkarsh Gupta
by Lucas Kanashiro

At: DebConf20
https://debconf20.debconf.org/talks/17-ruby-team-bof/

Like previous years, the Debian Ruby team would gather together to discuss the work they've done so far and the work that needs to be done for Ruby 3.0.

Besides that, this meeting will be used to discuss other activities that are going within the team, like new workflows, what's working and what's not, etcetera.

And lastly, we'd decide the logistics of the next possible sprints :)

Room: Talks
Scheduled start: 2020-08-25 16:00:00
Captions: 
	00:00:06,640 --> 00:00:11,200
okay hello everyone

00:00:08,080 --> 00:00:13,040
uh i'll be the top master for this one

00:00:11,200 --> 00:00:14,920
but i will also participate in the

00:00:13,040 --> 00:00:17,840
discussion

00:00:14,920 --> 00:00:20,080
so this is the ruby buff

00:00:17,840 --> 00:00:21,119
it's a meeting we try to have on every

00:00:20,080 --> 00:00:24,240
deadpool

00:00:21,119 --> 00:00:27,359
uh for the ruby team to discuss

00:00:24,240 --> 00:00:29,519
the past in the future so it is going to

00:00:27,359 --> 00:00:31,760
be facilitated by

00:00:29,519 --> 00:00:34,719
lukas kanashiro in cars so you guys can

00:00:31,760 --> 00:00:34,719
take it up from here

00:00:34,880 --> 00:00:38,800
thank you tesero so welcome everyone to

00:00:38,000 --> 00:00:42,079
our

00:00:38,800 --> 00:00:42,079
ruby symbol section

00:00:42,320 --> 00:00:45,440
i also have my friend here if you don't

00:00:44,239 --> 00:00:48,559
know him from

00:00:45,440 --> 00:00:50,079
les depp this is linguado so say hi trev

00:00:48,559 --> 00:00:51,760
running water

00:00:50,079 --> 00:00:54,000
you will help me he decided to join the

00:00:51,760 --> 00:00:57,199
ruby team this this year

00:00:54,000 --> 00:00:58,160
uh so i'd like to welcome everyone who

00:00:57,199 --> 00:01:01,440
is here as well

00:00:58,160 --> 00:01:03,359
uh utkarsh and i decided to skip all the

00:01:01,440 --> 00:01:06,560
presentation and everything

00:01:03,359 --> 00:01:08,560
because we have a lot to discuss so

00:01:06,560 --> 00:01:09,840
if if you are here if you are following

00:01:08,560 --> 00:01:12,320
our buff

00:01:09,840 --> 00:01:12,880
please put your name in our bed there is

00:01:12,320 --> 00:01:15,920
a

00:01:12,880 --> 00:01:17,600
section uh for the

00:01:15,920 --> 00:01:19,040
people who is present here so please add

00:01:17,600 --> 00:01:22,159
your name there so our

00:01:19,040 --> 00:01:23,600
our agenda is basically uh

00:01:22,159 --> 00:01:25,200
this welcoming session we will talk

00:01:23,600 --> 00:01:28,960
about uh

00:01:25,200 --> 00:01:29,600
some statistics that we have uh from our

00:01:28,960 --> 00:01:32,640
team

00:01:29,600 --> 00:01:35,840
what what happened since our last

00:01:32,640 --> 00:01:38,159
buff in that conf 19 uh

00:01:35,840 --> 00:01:40,320
some kind of a retrospective about the

00:01:38,159 --> 00:01:43,680
ruby 2.7 transition

00:01:40,320 --> 00:01:46,799
uh what we should improve what went

00:01:43,680 --> 00:01:48,240
well and all those things the radio 6

00:01:46,799 --> 00:01:52,079
transition

00:01:48,240 --> 00:01:53,360
and the same thing and also what we want

00:01:52,079 --> 00:01:56,960
to achieve for the next

00:01:53,360 --> 00:02:00,159
release if you want to discuss about the

00:01:56,960 --> 00:02:01,520
ruby 3.0 that will release release it at

00:02:00,159 --> 00:02:05,439
the end of the year

00:02:01,520 --> 00:02:08,000
and also discuss about possible sprints

00:02:05,439 --> 00:02:08,560
and we don't know an online one this

00:02:08,000 --> 00:02:11,680
year

00:02:08,560 --> 00:02:14,239
or maybe next year and some other

00:02:11,680 --> 00:02:14,239
topics

00:02:14,879 --> 00:02:20,560
okay so oh yeah we forgot one

00:02:18,080 --> 00:02:22,800
topic it's about the g-sub project that

00:02:20,560 --> 00:02:25,200
dude car she's working on

00:02:22,800 --> 00:02:26,560
he will talk about it when the time

00:02:25,200 --> 00:02:29,760
comes

00:02:26,560 --> 00:02:32,879
uh so let's go to this

00:02:29,760 --> 00:02:35,440
some statistics about our team uh

00:02:32,879 --> 00:02:36,560
last year i tried to gather some data to

00:02:35,440 --> 00:02:39,360
present in our

00:02:36,560 --> 00:02:40,480
buff but i was not it was not possible

00:02:39,360 --> 00:02:42,959
because

00:02:40,480 --> 00:02:43,920
uh i didn't have enough time to do that

00:02:42,959 --> 00:02:46,800
so

00:02:43,920 --> 00:02:47,760
after some digging i found the t-metrics

00:02:46,800 --> 00:02:50,879
project

00:02:47,760 --> 00:02:54,239
which under uh maintains and it

00:02:50,879 --> 00:02:57,920
is which is great uh so i talked to him

00:02:54,239 --> 00:03:00,480
and he also added the ruby team

00:02:57,920 --> 00:03:02,560
uh to this project and now it's live and

00:03:00,480 --> 00:03:04,480
we have some data that we can discuss so

00:03:02,560 --> 00:03:08,879
thank you andreas for that

00:03:04,480 --> 00:03:12,480
uh so let me share uh

00:03:08,879 --> 00:03:15,519
some graphics that i have here for you

00:03:12,480 --> 00:03:19,760
don't freeze please nah it will not

00:03:15,519 --> 00:03:23,440
don't worry yeah can you see it

00:03:19,760 --> 00:03:25,680
yes great so okay

00:03:23,440 --> 00:03:28,319
uh the first thing that we have here is

00:03:25,680 --> 00:03:32,239
an ah

00:03:28,319 --> 00:03:36,080
number of uploads done by each person

00:03:32,239 --> 00:03:40,000
so here we have data since 2005

00:03:36,080 --> 00:03:42,080
until this year uh

00:03:40,000 --> 00:03:44,000
the thing that i want to mention here is

00:03:42,080 --> 00:03:48,879
that uh

00:03:44,000 --> 00:03:51,440
in 2000 2015 2016 we have this peak here

00:03:48,879 --> 00:03:52,799
which is praveen doing many uploads so

00:03:51,440 --> 00:03:54,959
it's decreasing

00:03:52,799 --> 00:03:56,000
uh over the time which is great which

00:03:54,959 --> 00:03:59,439
seems that we are

00:03:56,000 --> 00:04:00,400
helping praveen and he's not doing all

00:03:59,439 --> 00:04:03,599
the work

00:04:00,400 --> 00:04:05,439
so i think that's a good thing we can

00:04:03,599 --> 00:04:08,400
discuss more things here but i we want

00:04:05,439 --> 00:04:10,400
to just show general data for you

00:04:08,400 --> 00:04:11,680
i think i just changed my name if you

00:04:10,400 --> 00:04:15,040
see them

00:04:11,680 --> 00:04:18,479
now really oh man

00:04:15,040 --> 00:04:18,479
okay we should check that

00:04:20,239 --> 00:04:26,479
right so we should uh file a bug report

00:04:23,520 --> 00:04:28,479
against methods and you are introducing

00:04:26,479 --> 00:04:30,800
bad data into the

00:04:28,479 --> 00:04:30,800
system

00:04:32,639 --> 00:04:36,160
great the other thing that we have here

00:04:35,040 --> 00:04:39,919
is about

00:04:36,160 --> 00:04:39,919
vcs comets the answer

00:04:40,840 --> 00:04:45,199
yeah uh

00:04:42,639 --> 00:04:47,040
as you see i think something happened to

00:04:45,199 --> 00:04:50,240
cedric in 2016.

00:04:47,040 --> 00:04:53,280
um so uh he just

00:04:50,240 --> 00:04:55,919
did more than five thousand the sprint

00:04:53,280 --> 00:04:56,560
during the sprint in brazil where i made

00:04:55,919 --> 00:05:00,320
a lot of

00:04:56,560 --> 00:05:03,520
commits to oh well i mean the reason

00:05:00,320 --> 00:05:06,000
he's the guy i mean he's like more than

00:05:03,520 --> 00:05:07,039
five thousand six thousand comments and

00:05:06,000 --> 00:05:10,240
uh then you see

00:05:07,039 --> 00:05:13,120
after after yes last year's sport uh

00:05:10,240 --> 00:05:13,680
since brazil we did some nice changes

00:05:13,120 --> 00:05:16,800
which is

00:05:13,680 --> 00:05:18,639
pretty visible in 2019 that is

00:05:16,800 --> 00:05:20,320
around three thousand three thousand

00:05:18,639 --> 00:05:23,440
five hundred commits by me

00:05:20,320 --> 00:05:27,120
uh where i essentially broke salsa by

00:05:23,440 --> 00:05:30,080
introducing stars of the pipelines

00:05:27,120 --> 00:05:31,199
so uh well yeah we did a lot of work uh

00:05:30,080 --> 00:05:34,160
even in 2020

00:05:31,199 --> 00:05:35,039
janitor's uh doing a lot of great stuff

00:05:34,160 --> 00:05:36,960
and

00:05:35,039 --> 00:05:38,960
the rest of the statistics are visible

00:05:36,960 --> 00:05:41,199
and we'll just go over them quickly for

00:05:38,960 --> 00:05:41,199
now

00:05:47,520 --> 00:05:53,919
yeah so um i think it's the same thing

00:05:51,120 --> 00:05:54,479
um 2015. praveen praveen is just

00:05:53,919 --> 00:05:57,199
creating

00:05:54,479 --> 00:05:57,919
a lot of packages he's doing great stuff

00:05:57,199 --> 00:06:00,160
um

00:05:57,919 --> 00:06:01,440
which has gone down i think because he

00:06:00,160 --> 00:06:03,840
changed his name again

00:06:01,440 --> 00:06:04,880
but uh but i think it's good that more

00:06:03,840 --> 00:06:08,639
people are you know

00:06:04,880 --> 00:06:10,960
uh you see um a lot of newcomers are

00:06:08,639 --> 00:06:12,560
you know helping the derbium team here

00:06:10,960 --> 00:06:14,560
which is which is kind of great

00:06:12,560 --> 00:06:16,560
uh because we're just sharing the

00:06:14,560 --> 00:06:18,400
workload uh

00:06:16,560 --> 00:06:20,479
so yeah that's that's essentially a good

00:06:18,400 --> 00:06:24,479
thing i think

00:06:20,479 --> 00:06:29,199
we hope that more people after this pof

00:06:24,479 --> 00:06:29,199
you know come and join us here

00:06:32,000 --> 00:06:37,039
next the next thing is uh the list

00:06:34,880 --> 00:06:41,440
activities for the debian uh ruby list

00:06:37,039 --> 00:06:43,520
um i'll not talk about pre-2018 so i'll

00:06:41,440 --> 00:06:48,400
just talk about post 2018

00:06:43,520 --> 00:06:51,759
um well essentially in 2019 and 20 after

00:06:48,400 --> 00:06:53,199
last year's pof uh well it looks like me

00:06:51,759 --> 00:06:54,240
and praveen have been sending a lot of

00:06:53,199 --> 00:06:57,039
rfh

00:06:54,240 --> 00:06:58,400
help help requests for a lot of things

00:06:57,039 --> 00:07:01,599
so we are just

00:06:58,400 --> 00:07:03,840
like there on the top and um

00:07:01,599 --> 00:07:04,800
well it has you know the important thing

00:07:03,840 --> 00:07:08,720
is that

00:07:04,800 --> 00:07:09,199
since 2011 uh until now we have been the

00:07:08,720 --> 00:07:11,599
list

00:07:09,199 --> 00:07:13,120
i mean the activities um have been

00:07:11,599 --> 00:07:15,759
decreasing so far

00:07:13,120 --> 00:07:18,000
so um which is which is kind of

00:07:15,759 --> 00:07:20,080
interesting because

00:07:18,000 --> 00:07:21,280
because it also points us that you know

00:07:20,080 --> 00:07:24,479
um we are

00:07:21,280 --> 00:07:28,080
maybe not using the list more or that

00:07:24,479 --> 00:07:31,360
we have um uh control

00:07:28,080 --> 00:07:33,520
we started communicating via irc so

00:07:31,360 --> 00:07:34,639
um that's that's kind of interesting

00:07:33,520 --> 00:07:39,440
thing to note the

00:07:34,639 --> 00:07:41,360
decreasing number of uh males per year

00:07:39,440 --> 00:07:42,880
so i think that's that from this this

00:07:41,360 --> 00:07:46,479
that

00:07:42,880 --> 00:07:47,759
yeah so another another garage that we

00:07:46,479 --> 00:07:51,919
have here is this

00:07:47,759 --> 00:07:55,919
one uh which we have uh bugs closed

00:07:51,919 --> 00:07:58,240
by team member so

00:07:55,919 --> 00:07:59,360
we can notice here that the number of

00:07:58,240 --> 00:08:02,720
bugs

00:07:59,360 --> 00:08:05,520
uh closed are decreasing so

00:08:02,720 --> 00:08:06,080
we can infer some some stuff from this

00:08:05,520 --> 00:08:09,120
data

00:08:06,080 --> 00:08:12,400
but i'm not sure uh that can that

00:08:09,120 --> 00:08:15,520
i don't know we have less bug reports

00:08:12,400 --> 00:08:18,960
we are not fixing all the bugs

00:08:15,520 --> 00:08:21,759
or maybe the quality of our packages are

00:08:18,960 --> 00:08:25,520
increasing and we don't have bug reports

00:08:21,759 --> 00:08:27,520
so i'm not sure how to analyze this

00:08:25,520 --> 00:08:29,360
if you can get any insight from from

00:08:27,520 --> 00:08:31,599
this data but the fact is

00:08:29,360 --> 00:08:33,120
the number of uh bugs close they are

00:08:31,599 --> 00:08:36,880
decreasing over the years

00:08:33,120 --> 00:08:38,080
so uh i think one reason could be

00:08:36,880 --> 00:08:41,919
because the gitlab

00:08:38,080 --> 00:08:44,800
and the diaspora had a lot of itps

00:08:41,919 --> 00:08:46,320
which now kind of stabilized there are

00:08:44,800 --> 00:08:48,399
not many new packages

00:08:46,320 --> 00:08:50,240
so each of them would be one bug at

00:08:48,399 --> 00:08:53,440
least

00:08:50,240 --> 00:08:56,880
yeah but the the itps are bugs on the

00:08:53,440 --> 00:09:01,200
wnpp package so i don't

00:08:56,880 --> 00:09:01,200
think they counter as team bug

00:09:03,279 --> 00:09:08,560
yeah today to look at

00:09:06,399 --> 00:09:10,480
aging bugs i don't know if we could have

00:09:08,560 --> 00:09:12,320
this kind of view

00:09:10,480 --> 00:09:14,240
because sometimes we we have a lot of

00:09:12,320 --> 00:09:17,440
bugs that piles on but

00:09:14,240 --> 00:09:20,000
if we do a bug tree edge which is very

00:09:17,440 --> 00:09:20,640
annoying but then we can remove a lot of

00:09:20,000 --> 00:09:24,399
bugs that

00:09:20,640 --> 00:09:27,760
are just for all versions

00:09:24,399 --> 00:09:28,240
and not applicable anymore so i do that

00:09:27,760 --> 00:09:31,120
from my

00:09:28,240 --> 00:09:31,120
packages sometimes

00:09:31,600 --> 00:09:36,959
yeah yeah we can keep discussing this on

00:09:34,800 --> 00:09:38,880
the mailing list i guess if you want to

00:09:36,959 --> 00:09:40,480
find out what's the root cause of these

00:09:38,880 --> 00:09:42,800
or whatever yeah but i think it's

00:09:40,480 --> 00:09:46,000
interesting too

00:09:42,800 --> 00:09:47,920
no word yeah

00:09:46,000 --> 00:09:50,320
some interesting data that we have here

00:09:47,920 --> 00:09:53,440
so just want to show you

00:09:50,320 --> 00:09:54,800
that uh other thing that we have is the

00:09:53,440 --> 00:09:57,680
number of maintainers

00:09:54,800 --> 00:09:59,920
per package so this is this graph

00:09:57,680 --> 00:10:03,360
represents the data from the elliot

00:09:59,920 --> 00:10:06,560
so it's it's old so

00:10:03,360 --> 00:10:09,760
most of the package has like two

00:10:06,560 --> 00:10:10,320
uh uploaders per package this data from

00:10:09,760 --> 00:10:13,360
valid

00:10:10,320 --> 00:10:16,320
in out from salsa we we have

00:10:13,360 --> 00:10:16,839
like four uploaders per package which is

00:10:16,320 --> 00:10:19,959
great

00:10:16,839 --> 00:10:21,600
because we are sharing the workload and

00:10:19,959 --> 00:10:24,480
responsibilities

00:10:21,600 --> 00:10:25,839
and we don't have a bottleneck someone

00:10:24,480 --> 00:10:28,160
that

00:10:25,839 --> 00:10:29,120
does all the work and so i think it's

00:10:28,160 --> 00:10:33,839
great something

00:10:29,120 --> 00:10:33,839
right we are doing great

00:10:36,160 --> 00:10:41,200
any comment about those things that's

00:10:38,640 --> 00:10:41,200
really nice

00:10:42,480 --> 00:10:50,399
yeah i think we're doing great work uh

00:10:46,720 --> 00:10:53,839
so should we move on yeah yeah i think

00:10:50,399 --> 00:10:55,440
okay so we have okay

00:10:53,839 --> 00:10:57,040
yeah you could probably unshare your

00:10:55,440 --> 00:11:01,839
screen right now

00:10:57,040 --> 00:11:01,839
yeah you're right yeah let me do it

00:11:12,839 --> 00:11:17,200
great

00:11:15,120 --> 00:11:19,040
all right so uh what else happened since

00:11:17,200 --> 00:11:22,720
the since the boss last year

00:11:19,040 --> 00:11:23,760
we did a lot of stuff um we did ruby 2.7

00:11:22,720 --> 00:11:26,880
transition

00:11:23,760 --> 00:11:28,000
i think that was really amazing um and

00:11:26,880 --> 00:11:30,240
we also derail six

00:11:28,000 --> 00:11:32,160
transition thanks to praveen more about

00:11:30,240 --> 00:11:32,640
these two are going to be discussed

00:11:32,160 --> 00:11:35,360
later

00:11:32,640 --> 00:11:36,800
so i'm just going to just um cover the

00:11:35,360 --> 00:11:39,440
cover the main topics

00:11:36,800 --> 00:11:40,959
and uh the best thing about the sprints

00:11:39,440 --> 00:11:42,320
is that we got in touch with an upstream

00:11:40,959 --> 00:11:44,959
maintainer

00:11:42,320 --> 00:11:46,480
thanks thanks a lot to david uh it was

00:11:44,959 --> 00:11:49,839
really important for us and

00:11:46,480 --> 00:11:53,120
it was it was pretty nice um but

00:11:49,839 --> 00:11:54,880
that we got to know a lot of things

00:11:53,120 --> 00:11:57,200
so yeah and we also started monthly

00:11:54,880 --> 00:12:00,160
hours meetings so that is nice

00:11:57,200 --> 00:12:00,880
too had it hadn't been for the spring

00:12:00,160 --> 00:12:04,079
sprints

00:12:00,880 --> 00:12:06,880
i think we would not be doing so so

00:12:04,079 --> 00:12:07,760
it's kind of nice that uh we talked

00:12:06,880 --> 00:12:11,200
about this and

00:12:07,760 --> 00:12:14,880
we made it happen um so also we also

00:12:11,200 --> 00:12:17,680
defined a policy for micro transitions

00:12:14,880 --> 00:12:19,200
right so these are these are some good

00:12:17,680 --> 00:12:21,600
things that has happened since

00:12:19,200 --> 00:12:22,560
last pof and we're going to talk about

00:12:21,600 --> 00:12:27,360
them in detail

00:12:22,560 --> 00:12:27,360
in the upcoming sections

00:12:28,000 --> 00:12:32,880
yeah great so let's start with ruby 2.7

00:12:31,200 --> 00:12:35,760
transition so this is like

00:12:32,880 --> 00:12:37,279
retrospective so it would be great if

00:12:35,760 --> 00:12:41,279
you could

00:12:37,279 --> 00:12:41,519
give your inputs and let's discuss about

00:12:41,279 --> 00:12:44,800
it

00:12:41,519 --> 00:12:47,200
so in our opinion good question in mind

00:12:44,800 --> 00:12:48,639
so we think that it was great this ruby

00:12:47,200 --> 00:12:50,720
2.7 transition

00:12:48,639 --> 00:12:52,000
uh more is mostly than the previous

00:12:50,720 --> 00:12:55,279
transition so

00:12:52,000 --> 00:12:58,160
uh mostly because we did a lot of work

00:12:55,279 --> 00:12:59,680
during the sprint in paris so we think

00:12:58,160 --> 00:13:02,320
that it was a great idea

00:12:59,680 --> 00:13:03,040
it was a five-day sprint not just two or

00:13:02,320 --> 00:13:06,800
three so

00:13:03,040 --> 00:13:08,560
we were able to to fix a bunch of stuff

00:13:06,800 --> 00:13:09,440
and have many discussions around those

00:13:08,560 --> 00:13:12,240
things

00:13:09,440 --> 00:13:13,519
so we think that it was really great and

00:13:12,240 --> 00:13:17,519
the other thing is that

00:13:13,519 --> 00:13:20,240
uh we started to share the workload

00:13:17,519 --> 00:13:22,240
about the ruby interpreter so the 0 was

00:13:20,240 --> 00:13:26,000
doing all of that and i know

00:13:22,240 --> 00:13:27,680
he also wants to spend some time doing

00:13:26,000 --> 00:13:30,959
other stuff like wci

00:13:27,680 --> 00:13:33,839
and auto package test so i try to help

00:13:30,959 --> 00:13:36,000
him with this rubin temperature

00:13:33,839 --> 00:13:37,760
thing so i think that that was great and

00:13:36,000 --> 00:13:40,800
the next time i

00:13:37,760 --> 00:13:44,079
i might be able to do it

00:13:40,800 --> 00:13:44,399
not i will need his help but i think i

00:13:44,079 --> 00:13:47,839
will

00:13:44,399 --> 00:13:49,519
it will be smoothly i'll just run away

00:13:47,839 --> 00:13:52,240
and you you won't see my face during the

00:13:49,519 --> 00:13:52,240
next transition

00:13:54,560 --> 00:13:57,680
yeah so the fan also says that kaneshiro

00:13:56,800 --> 00:14:00,160
is the guy

00:13:57,680 --> 00:14:01,279
uh he's you can help enter zero so he

00:14:00,160 --> 00:14:03,519
can have maybe he can

00:14:01,279 --> 00:14:05,279
also run for dpi you know there's zero

00:14:03,519 --> 00:14:08,240
you can maybe

00:14:05,279 --> 00:14:08,240
you've got more time now

00:14:08,720 --> 00:14:12,639
so um the next next topic on agenda is

00:14:11,279 --> 00:14:15,120
grade six transition

00:14:12,639 --> 00:14:15,120
uh

00:14:19,440 --> 00:14:23,920
precisely yeah maybe shred wants to

00:14:23,120 --> 00:14:26,399
continue that

00:14:23,920 --> 00:14:26,399
further

00:14:28,839 --> 00:14:31,839
no

00:14:34,160 --> 00:14:38,560
um i think you're not audible you are

00:14:37,279 --> 00:14:43,279
muted

00:14:38,560 --> 00:14:43,279
yeah let's see what happens

00:14:43,519 --> 00:14:46,800
um you'll be applying for for the next

00:14:46,320 --> 00:14:50,639
dp

00:14:46,800 --> 00:14:53,040
right so you're going to carry on

00:14:50,639 --> 00:14:54,320
yeah you're going to carry on the legacy

00:14:53,040 --> 00:14:56,839
um

00:14:54,320 --> 00:14:58,560
and then approve all the sprints please

00:14:56,839 --> 00:15:02,880
yeah that's that's the main thing

00:14:58,560 --> 00:15:04,800
sure never mind so moving on to

00:15:02,880 --> 00:15:06,560
the next topic there's real six

00:15:04,800 --> 00:15:07,360
transition a big thanks to praveen and

00:15:06,560 --> 00:15:10,560
shruti for

00:15:07,360 --> 00:15:11,199
for doing all the work um so incredibly

00:15:10,560 --> 00:15:14,000
well

00:15:11,199 --> 00:15:14,880
and it was very nicely done i'm very

00:15:14,000 --> 00:15:18,639
sorry that

00:15:14,880 --> 00:15:21,120
nobody was able to help uh but

00:15:18,639 --> 00:15:22,880
but it's it was really carried out in a

00:15:21,120 --> 00:15:23,920
very very nice way so praveen you want

00:15:22,880 --> 00:15:26,720
to talk about this

00:15:23,920 --> 00:15:27,519
more yeah i think the starting initial

00:15:26,720 --> 00:15:31,040
work was

00:15:27,519 --> 00:15:33,360
done by our uh his name

00:15:31,040 --> 00:15:35,120
jungmin kim yong wing kim yeah he

00:15:33,360 --> 00:15:37,440
started the initial work game

00:15:35,120 --> 00:15:39,279
he put the range six into experimental

00:15:37,440 --> 00:15:43,360
and stuff like that

00:15:39,279 --> 00:15:46,560
and i think i got some help from

00:15:43,360 --> 00:15:48,880
this particular journey and also

00:15:46,560 --> 00:15:52,079
recently abraham raji

00:15:48,880 --> 00:15:54,240
to complete some of the right six fixes

00:15:52,079 --> 00:15:55,120
and i think we still have some of those

00:15:54,240 --> 00:15:58,160
left

00:15:55,120 --> 00:15:59,920
we need to finish that to get but i

00:15:58,160 --> 00:16:01,440
think the important one blocker is the

00:15:59,920 --> 00:16:04,959
yarn package

00:16:01,440 --> 00:16:07,440
because now the rails

00:16:04,959 --> 00:16:10,240
has integration with webpack and node.js

00:16:07,440 --> 00:16:13,440
so it has a dependency on

00:16:10,240 --> 00:16:14,880
the ant package it's a recommence but it

00:16:13,440 --> 00:16:18,240
still blocks

00:16:14,880 --> 00:16:21,440
i think it's not recommend it's still

00:16:18,240 --> 00:16:23,600
a direct dependency for the rails meta

00:16:21,440 --> 00:16:25,120
package so it still blocks the rails

00:16:23,600 --> 00:16:28,320
transition

00:16:25,120 --> 00:16:31,600
and the unpackage is stuck because of

00:16:28,320 --> 00:16:34,480
the barbell six to seven transition so

00:16:31,600 --> 00:16:35,360
it's going to take some time to unbreak

00:16:34,480 --> 00:16:38,720
that

00:16:35,360 --> 00:16:39,839
so i think it will take some time before

00:16:38,720 --> 00:16:43,519
the rails

00:16:39,839 --> 00:16:45,839
moves to bullseye i have a question

00:16:43,519 --> 00:16:46,800
on the earliest transition ravine maybe

00:16:45,839 --> 00:16:49,519
you can

00:16:46,800 --> 00:16:50,160
you know how to answer it what's the

00:16:49,519 --> 00:16:53,360
most

00:16:50,160 --> 00:16:56,399
common uh cause of problems

00:16:53,360 --> 00:16:59,839
in a rail transition is it like just

00:16:56,399 --> 00:17:04,480
radius changing api stuff breaking or

00:16:59,839 --> 00:17:07,520
is it that packages are

00:17:04,480 --> 00:17:09,120
the reverse apprentices are uh using

00:17:07,520 --> 00:17:11,600
rails the wrong way and then they break

00:17:09,120 --> 00:17:13,919
when rails upgrades

00:17:11,600 --> 00:17:15,919
i think one of the very common one was

00:17:13,919 --> 00:17:18,720
the auto package this the new app

00:17:15,919 --> 00:17:19,679
kind of the smog test wherein you know

00:17:18,720 --> 00:17:23,120
earlier it

00:17:19,679 --> 00:17:24,640
was using sprockets mainly now

00:17:23,120 --> 00:17:26,480
they've switched to web pack so the

00:17:24,640 --> 00:17:28,240
layout has changed so a lot of auto

00:17:26,480 --> 00:17:32,080
packages breakage was

00:17:28,240 --> 00:17:35,440
caused by that and

00:17:32,080 --> 00:17:37,280
in general i think

00:17:35,440 --> 00:17:39,039
some of the api changes maybe

00:17:37,280 --> 00:17:42,240
duplications

00:17:39,039 --> 00:17:45,039
i did not uh try to fix

00:17:42,240 --> 00:17:47,520
many of them i just filed bugs for most

00:17:45,039 --> 00:17:50,240
of the other failures

00:17:47,520 --> 00:17:51,919
so the most common one was the auto

00:17:50,240 --> 00:17:54,480
package this failure

00:17:51,919 --> 00:17:56,720
of course by switch from sprockets to

00:17:54,480 --> 00:17:59,600
webpack by default

00:17:56,720 --> 00:18:00,240
but those were simple fixes i think but

00:17:59,600 --> 00:18:05,200
it just was

00:18:00,240 --> 00:18:08,640
there is too many of them right

00:18:05,200 --> 00:18:11,520
yeah maybe you can try um

00:18:08,640 --> 00:18:12,880
loki if we have too many rails reverse

00:18:11,520 --> 00:18:15,679
dependencies

00:18:12,880 --> 00:18:17,039
maybe there are stuff there that was

00:18:15,679 --> 00:18:19,520
used by gitlab or

00:18:17,039 --> 00:18:20,640
redmine in the past but it's not used

00:18:19,520 --> 00:18:23,919
anymore and it's

00:18:20,640 --> 00:18:26,840
just stay there uh

00:18:23,919 --> 00:18:28,880
yeah i think i flagged some packages for

00:18:26,840 --> 00:18:31,840
removal

00:18:28,880 --> 00:18:33,520
which could be i think uh like i think i

00:18:31,840 --> 00:18:36,880
don't know some of the

00:18:33,520 --> 00:18:36,880
rails are such things

00:18:37,039 --> 00:18:42,160
and the diaspora upstream itself is now

00:18:39,840 --> 00:18:44,320
very slow to update so i don't know when

00:18:42,160 --> 00:18:48,320
they are going to catch up to rail six

00:18:44,320 --> 00:18:48,320
they don't have any plans as such

00:18:49,520 --> 00:18:53,919
yeah so so many of those uh like

00:18:51,600 --> 00:18:57,039
dependencies for diaspora it could be

00:18:53,919 --> 00:18:59,440
simply removed from testing

00:18:57,039 --> 00:19:00,559
probably we could get them in bullseye

00:18:59,440 --> 00:19:03,520
back ports

00:19:00,559 --> 00:19:06,320
i don't think we'll get the diaspora

00:19:03,520 --> 00:19:06,320
into bullseye

00:19:06,799 --> 00:19:11,120
well there are also many more reversed i

00:19:09,520 --> 00:19:13,120
mean dependencies of lumio

00:19:11,120 --> 00:19:14,480
and lumia is not in the archives so it

00:19:13,120 --> 00:19:16,559
might seem that

00:19:14,480 --> 00:19:17,919
uh they have they don't have any reverse

00:19:16,559 --> 00:19:21,039
dependencies but

00:19:17,919 --> 00:19:24,240
in reality they are actually uh

00:19:21,039 --> 00:19:27,679
being worked upon because of romeo so um

00:19:24,240 --> 00:19:29,600
yeah yes but we we want rails in testing

00:19:27,679 --> 00:19:31,120
and we don't need the dependencies for

00:19:29,600 --> 00:19:32,240
stuff that's not in the archive

00:19:31,120 --> 00:19:35,039
intestine as well so

00:19:32,240 --> 00:19:38,720
they can be at least removed from

00:19:35,039 --> 00:19:38,720
fashion so that rayons can migrate

00:19:48,640 --> 00:19:53,200
is blocked because node request is being

00:19:51,679 --> 00:19:56,320
passed out

00:19:53,200 --> 00:20:00,080
but still many packages are still

00:19:56,320 --> 00:20:03,600
using it so there is a grave bug on it

00:20:00,080 --> 00:20:05,760
and since it's a dependency on ruby

00:20:03,600 --> 00:20:07,440
realities we have a dependency to yam

00:20:05,760 --> 00:20:09,440
package

00:20:07,440 --> 00:20:12,000
so you talked about requirements you

00:20:09,440 --> 00:20:15,280
started with a recommendation currently

00:20:12,000 --> 00:20:18,400
could it be lower to recommend

00:20:15,280 --> 00:20:21,840
is it needed for everything to to

00:20:18,400 --> 00:20:21,840
move wheels on rails

00:20:22,559 --> 00:20:28,080
to walk properly i think if it's if

00:20:26,159 --> 00:20:32,240
somebody is using rails as a

00:20:28,080 --> 00:20:34,960
development uh like directly using

00:20:32,240 --> 00:20:37,039
rails as a you know instead of as a

00:20:34,960 --> 00:20:39,280
dependency someone wants to develop

00:20:37,039 --> 00:20:41,840
rails applications and if they install

00:20:39,280 --> 00:20:45,120
the debian's range package

00:20:41,840 --> 00:20:48,159
when does somebody do a rails new foo

00:20:45,120 --> 00:20:50,400
you know some rails

00:20:48,159 --> 00:20:52,960
default application it expects the

00:20:50,400 --> 00:20:54,880
unpackage to be there

00:20:52,960 --> 00:20:56,640
okay but a recommend switch surface for

00:20:54,880 --> 00:20:59,200
that for example

00:20:56,640 --> 00:21:00,960
redmine doesn't choose it it has been

00:20:59,200 --> 00:21:02,080
blocked for a long time because of this

00:21:00,960 --> 00:21:03,919
program

00:21:02,080 --> 00:21:06,000
and that's probably not going to be

00:21:03,919 --> 00:21:08,880
solved anytime soon because it's

00:21:06,000 --> 00:21:08,880
it's not easy

00:21:09,520 --> 00:21:13,679
maybe we should not optimize for

00:21:14,320 --> 00:21:17,679
using arrays from debian for development

00:21:17,120 --> 00:21:20,080
because

00:21:17,679 --> 00:21:22,480
that that's the first thing we we hear

00:21:20,080 --> 00:21:25,520
from upstream people when we talk about

00:21:22,480 --> 00:21:27,760
packaging ruby stuff in them is that

00:21:25,520 --> 00:21:29,039
no rails developer will ever use our

00:21:27,760 --> 00:21:31,440
packages which

00:21:29,039 --> 00:21:32,799
not true i did use that for a long time

00:21:31,440 --> 00:21:35,760
but it's

00:21:32,799 --> 00:21:36,240
it's the majority so maybe we should not

00:21:35,760 --> 00:21:38,880
wait

00:21:36,240 --> 00:21:40,720
forever like to have a perfect razor

00:21:38,880 --> 00:21:42,159
stack before being able to have rails

00:21:40,720 --> 00:21:45,679
and testing

00:21:42,159 --> 00:21:49,440
because uh developing

00:21:45,679 --> 00:21:52,799
rails apps is not really uh

00:21:49,440 --> 00:21:55,440
our main use case right here

00:21:52,799 --> 00:21:57,760
so i would suggest that we we lower to

00:21:55,440 --> 00:21:59,520
recommend

00:21:57,760 --> 00:22:02,000
and if you really want it to have a

00:21:59,520 --> 00:22:03,039
difference when it's when yarn package

00:22:02,000 --> 00:22:06,400
is fixed

00:22:03,039 --> 00:22:08,960
then maybe we can switch back if you

00:22:06,400 --> 00:22:10,559
really want to keep it at a dependency

00:22:08,960 --> 00:22:13,760
because that's blocking a lot of

00:22:10,559 --> 00:22:17,280
packages using ruby royalties so

00:22:13,760 --> 00:22:19,760
i suggest can you um

00:22:17,280 --> 00:22:20,400
create a summary of what's spending on

00:22:19,760 --> 00:22:23,120
reuse

00:22:20,400 --> 00:22:24,840
and then we try to organize in the

00:22:23,120 --> 00:22:26,799
mailing list the best way of going

00:22:24,840 --> 00:22:29,840
forward so that we don't

00:22:26,799 --> 00:22:32,080
stay forever waiting for other stuff

00:22:29,840 --> 00:22:33,440
yeah i think yeah i'll send somebody to

00:22:32,080 --> 00:22:36,799
the mailing list

00:22:33,440 --> 00:22:38,640
nice thank you

00:22:36,799 --> 00:22:40,480
perfect i think let's move on because

00:22:38,640 --> 00:22:42,159
we're running shot of time

00:22:40,480 --> 00:22:44,480
not really but we've got a lot of things

00:22:42,159 --> 00:22:45,200
to discuss uh like unsure wants to step

00:22:44,480 --> 00:22:47,760
down

00:22:45,200 --> 00:22:49,360
from obvious maintenance i think he'll

00:22:47,760 --> 00:22:52,960
probably talk about it

00:22:49,360 --> 00:22:56,000
yeah yeah i had a note there because

00:22:52,960 --> 00:22:59,120
as we have discussed in our latest rc

00:22:56,000 --> 00:23:03,600
monthly meetings uh some maps

00:22:59,120 --> 00:23:06,080
delayed the rails transitions and

00:23:03,600 --> 00:23:06,880
if i i think if you are not interested

00:23:06,080 --> 00:23:09,840
in some

00:23:06,880 --> 00:23:09,840
apps we should

00:23:10,480 --> 00:23:15,919
not work on them anymore because

00:23:13,520 --> 00:23:17,520
andrew lee and actor is also a container

00:23:15,919 --> 00:23:18,640
of this package so i don't know their

00:23:17,520 --> 00:23:21,840
plans

00:23:18,640 --> 00:23:22,480
for obs but i'm not interested on it

00:23:21,840 --> 00:23:26,000
anymore

00:23:22,480 --> 00:23:29,840
so if someone is willing to

00:23:26,000 --> 00:23:33,200
keep this package updated and healthy

00:23:29,840 --> 00:23:37,840
i would be happy to mentor someone

00:23:33,200 --> 00:23:37,840
i just want to mention that

00:23:39,679 --> 00:23:43,039
all right uh do you want to continue

00:23:42,080 --> 00:23:44,559
next for

00:23:43,039 --> 00:23:46,640
what we want to achieve for the next

00:23:44,559 --> 00:23:50,159
release probably

00:23:46,640 --> 00:23:52,880
okay so let's go uh

00:23:50,159 --> 00:23:55,440
so i think as i mentioned the main thing

00:23:52,880 --> 00:23:55,440
that we can

00:23:55,520 --> 00:24:00,000
uh do for bullseye release if you decide

00:23:58,559 --> 00:24:03,120
to do that is the ruby

00:24:00,000 --> 00:24:05,760
3.0 uh which will release

00:24:03,120 --> 00:24:06,799
will be released at the end of december

00:24:05,760 --> 00:24:10,559
probably

00:24:06,799 --> 00:24:11,520
so we could the the release candidate

00:24:10,559 --> 00:24:14,480
should be released

00:24:11,520 --> 00:24:16,000
like before that i don't know october or

00:24:14,480 --> 00:24:18,480
november i don't know

00:24:16,000 --> 00:24:20,720
so i don't know if you want to take that

00:24:18,480 --> 00:24:23,360
risk because it's a major bump

00:24:20,720 --> 00:24:24,320
so it will probably break a lot of stuff

00:24:23,360 --> 00:24:26,960
i don't really

00:24:24,320 --> 00:24:28,080
know there's enough time for doing a

00:24:26,960 --> 00:24:30,480
transition

00:24:28,080 --> 00:24:32,640
yeah it's like two months we can have it

00:24:30,480 --> 00:24:35,919
like a preview

00:24:32,640 --> 00:24:38,960
they usually release a preview really

00:24:35,919 --> 00:24:39,919
by this time of the year yes and rc

00:24:38,960 --> 00:24:43,200
should be out

00:24:39,919 --> 00:24:46,159
and at the next month or so yeah

00:24:43,200 --> 00:24:47,760
we can start playing with it do you know

00:24:46,159 --> 00:24:51,200
if there are any

00:24:47,760 --> 00:24:54,400
like very big change

00:24:51,200 --> 00:24:56,000
in terms of backwards compatibility

00:24:54,400 --> 00:24:57,679
yeah i think there are some breaking

00:24:56,000 --> 00:24:59,039
chains so uh

00:24:57,679 --> 00:25:01,279
they're definitely a lot of breaking

00:24:59,039 --> 00:25:04,559
changes like actually yeah that's

00:25:01,279 --> 00:25:07,120
some threat so if we get to once like

00:25:04,559 --> 00:25:08,880
experimental we would now automatically

00:25:07,120 --> 00:25:12,880
run all the auto packages

00:25:08,880 --> 00:25:14,640
we could just yeah

00:25:12,880 --> 00:25:16,000
yeah i can try to do the same that i did

00:25:14,640 --> 00:25:17,919
for the

00:25:16,000 --> 00:25:19,760
last transition so i can stage this new

00:25:17,919 --> 00:25:23,200
version in experimental

00:25:19,760 --> 00:25:27,360
and run try to rebuild the

00:25:23,200 --> 00:25:30,640
reverse dependencies and publish this

00:25:27,360 --> 00:25:32,400
uh this outcome should some

00:25:30,640 --> 00:25:34,720
probably somewhere and send a link to

00:25:32,400 --> 00:25:37,919
the mailing list and you can

00:25:34,720 --> 00:25:41,600
start to think about it for the other

00:25:37,919 --> 00:25:43,840
uh release cycle yeah i think that's

00:25:41,600 --> 00:25:46,159
that's probably the best way forward uh

00:25:43,840 --> 00:25:49,440
it will give us a broad picture about

00:25:46,159 --> 00:25:51,360
what's coming coming for us

00:25:49,440 --> 00:25:53,600
and how we should go about it i think

00:25:51,360 --> 00:25:56,720
that's probably the right thing to do

00:25:53,600 --> 00:25:59,039
yeah i i want to add i think the auto

00:25:56,720 --> 00:26:00,559
packet test part will be already handled

00:25:59,039 --> 00:26:03,679
by i think the

00:26:00,559 --> 00:26:05,520
official web ci only the rebuilds

00:26:03,679 --> 00:26:09,120
probably we need to handle

00:26:05,520 --> 00:26:13,120
uh okay okay

00:26:09,120 --> 00:26:13,120
yeah but then we will see

00:26:13,840 --> 00:26:20,400
well because to

00:26:17,279 --> 00:26:21,520
test against a new ruby you have to

00:26:20,400 --> 00:26:25,200
change

00:26:21,520 --> 00:26:29,679
ruby defaults then you have to have

00:26:25,200 --> 00:26:33,679
that experimental as well i'm not sure

00:26:29,679 --> 00:26:36,960
that the out of package that we

00:26:33,679 --> 00:26:40,640
will use that version because

00:26:36,960 --> 00:26:44,159
it's going to run against the

00:26:40,640 --> 00:26:47,440
the the rubio dev package

00:26:44,159 --> 00:26:49,520
from unstable anyway so it won't test

00:26:47,440 --> 00:26:51,679
against ruby 3.

00:26:49,520 --> 00:26:54,000
can you can't we set some specific

00:26:51,679 --> 00:26:54,000
trigger

00:26:54,080 --> 00:26:57,600
yeah we can run the test by ourselves

00:26:57,039 --> 00:26:59,600
like

00:26:57,600 --> 00:27:01,039
do the the submissions ourselves then we

00:26:59,600 --> 00:27:03,360
can pin

00:27:01,039 --> 00:27:06,720
the exact set of package that we need

00:27:03,360 --> 00:27:08,960
but they automated

00:27:06,720 --> 00:27:10,320
experimental testing that paul mentioned

00:27:08,960 --> 00:27:12,880
in the

00:27:10,320 --> 00:27:14,559
in his part of our talk is not going to

00:27:12,880 --> 00:27:16,320
work because we need

00:27:14,559 --> 00:27:17,760
both the new interpreter in the new

00:27:16,320 --> 00:27:20,960
version of ruby

00:27:17,760 --> 00:27:22,159
defaults that enables testing against

00:27:20,960 --> 00:27:25,200
ruby 3

00:27:22,159 --> 00:27:28,240
so we can write a script and

00:27:25,200 --> 00:27:31,279
to submit those requests to the website

00:27:28,240 --> 00:27:34,960
api right okay yeah

00:27:31,279 --> 00:27:38,880
i i can work on that

00:27:34,960 --> 00:27:42,399
perfect i think let's move on

00:27:38,880 --> 00:27:45,919
uh for now um so the next next topic on

00:27:42,399 --> 00:27:48,240
agenda is possible sprints in 2021

00:27:45,919 --> 00:27:48,960
uh well spins i'm pretty sure spins

00:27:48,240 --> 00:27:51,520
would be a

00:27:48,960 --> 00:27:53,200
great idea to have either for ruby to

00:27:51,520 --> 00:27:56,000
ruby 3.0 or otherwise

00:27:53,200 --> 00:27:57,279
um we did a lot of nice things in the

00:27:56,000 --> 00:27:59,840
sprints last year

00:27:57,279 --> 00:28:00,720
it was really worth it so i think having

00:27:59,840 --> 00:28:03,279
a sprint again

00:28:00,720 --> 00:28:04,000
would probably be a good idea i'm not

00:28:03,279 --> 00:28:07,200
sure

00:28:04,000 --> 00:28:09,679
how um or when uh

00:28:07,200 --> 00:28:10,640
rather can we have an in-person sprint

00:28:09,679 --> 00:28:13,279
and when

00:28:10,640 --> 00:28:14,640
i mean when the world would be a great

00:28:13,279 --> 00:28:17,279
better place to have

00:28:14,640 --> 00:28:17,919
such a sprint but i think we can sure

00:28:17,279 --> 00:28:21,200
have

00:28:17,919 --> 00:28:24,640
an online sprint uh sometime like in

00:28:21,200 --> 00:28:27,760
next month or so if we plan for um

00:28:24,640 --> 00:28:30,799
staging the rc release in experimental

00:28:27,760 --> 00:28:31,760
and probably i think we should plan plan

00:28:30,799 --> 00:28:34,240
for a sprint

00:28:31,760 --> 00:28:34,880
ahead of time and in case uh things

00:28:34,240 --> 00:28:38,320
improve for

00:28:34,880 --> 00:28:40,559
2021 i think uh jorge was

00:28:38,320 --> 00:28:41,679
uh willing to host uh sprint in germany

00:28:40,559 --> 00:28:45,039
i'm not sure if it's

00:28:41,679 --> 00:28:47,600
still uh the same or

00:28:45,039 --> 00:28:48,799
are there any changes so probably it's

00:28:47,600 --> 00:28:52,480
better we discussed this

00:28:48,799 --> 00:28:54,240
on the list i think yeah to be honest

00:28:52,480 --> 00:28:57,120
i'm not sure you'll be able to do an

00:28:54,240 --> 00:28:59,279
in-person sprint anytime soon so

00:28:57,120 --> 00:29:01,760
we should probably target an online one

00:28:59,279 --> 00:29:05,039
to be honest

00:29:01,760 --> 00:29:08,480
yeah right um so um

00:29:05,039 --> 00:29:11,679
probably i will send a

00:29:08,480 --> 00:29:15,120
more detailed mail

00:29:11,679 --> 00:29:26,720
to the list about the sprints and

00:29:15,120 --> 00:29:29,760
let's see how it goes should we move on

00:29:26,720 --> 00:29:32,880
so the next topic is uh my gsoc project

00:29:29,760 --> 00:29:35,679
uh okay so uh well the goal

00:29:32,880 --> 00:29:37,279
was of this project i mean first of all

00:29:35,679 --> 00:29:41,039
uh thanks to terzero

00:29:37,279 --> 00:29:44,000
and david uh he they did a great job

00:29:41,039 --> 00:29:45,360
and i mean of course i bugged them a lot

00:29:44,000 --> 00:29:48,640
you know

00:29:45,360 --> 00:29:51,039
i um i i kind of always

00:29:48,640 --> 00:29:51,760
keep thanking them for anything and

00:29:51,039 --> 00:29:54,799
they've been

00:29:51,760 --> 00:29:56,240
they've been very kind to me during the

00:29:54,799 --> 00:29:59,360
time

00:29:56,240 --> 00:30:02,159
and pair programming with me so

00:29:59,360 --> 00:30:02,960
a really big thanks to them and so yeah

00:30:02,159 --> 00:30:04,559
the goal was

00:30:02,960 --> 00:30:06,480
the goal of the project was to write

00:30:04,559 --> 00:30:08,720
some kind of tooling that can help

00:30:06,480 --> 00:30:09,520
detect some basic issues that we face

00:30:08,720 --> 00:30:11,919
for instance

00:30:09,520 --> 00:30:13,279
having getting the gem spec file or

00:30:11,919 --> 00:30:17,360
using record relative

00:30:13,279 --> 00:30:20,320
from test to lib or using relative

00:30:17,360 --> 00:30:20,960
using required relative path and maybe

00:30:20,320 --> 00:30:24,320
having

00:30:20,960 --> 00:30:27,520
bundler setup calls inside the tests so

00:30:24,320 --> 00:30:29,600
these are some some problems that

00:30:27,520 --> 00:30:31,600
these are some problems that we face uh

00:30:29,600 --> 00:30:34,640
regularly so

00:30:31,600 --> 00:30:35,440
uh we worked on writing a linter it's an

00:30:34,640 --> 00:30:38,480
extension

00:30:35,440 --> 00:30:41,440
to rupalcop so

00:30:38,480 --> 00:30:43,039
as for now uh i'll just talk about the

00:30:41,440 --> 00:30:45,840
things that we have achieved so

00:30:43,039 --> 00:30:46,399
uh at at the time right now at the

00:30:45,840 --> 00:30:48,960
moment

00:30:46,399 --> 00:30:50,399
we have i've written for cops and there

00:30:48,960 --> 00:30:52,640
have been four releases

00:30:50,399 --> 00:30:53,679
uh one more release will be rolled out

00:30:52,640 --> 00:30:56,720
probably next week

00:30:53,679 --> 00:31:00,240
uh so it detects

00:30:56,720 --> 00:31:01,200
a kit in gem spec file using recorders

00:31:00,240 --> 00:31:04,640
that calls from

00:31:01,200 --> 00:31:07,039
latest from specs to lib

00:31:04,640 --> 00:31:07,919
uh then using require call split

00:31:07,039 --> 00:31:10,559
relative path

00:31:07,919 --> 00:31:12,159
and using bundler setup called inside

00:31:10,559 --> 00:31:13,440
the spec directory inside the test

00:31:12,159 --> 00:31:16,880
directory in general

00:31:13,440 --> 00:31:18,960
so it detects all these code

00:31:16,880 --> 00:31:20,320
pieces of code and flex them as an

00:31:18,960 --> 00:31:22,880
offense so

00:31:20,320 --> 00:31:24,799
um they're also in the debian archives

00:31:22,880 --> 00:31:26,640
so either you can jam installed it or

00:31:24,799 --> 00:31:29,840
you can sue that install it

00:31:26,640 --> 00:31:32,080
um so it is the best part

00:31:29,840 --> 00:31:34,720
it's also integrated with the upstream

00:31:32,080 --> 00:31:35,440
so uh upstream robocop so you can find

00:31:34,720 --> 00:31:39,360
the docs

00:31:35,440 --> 00:31:41,519
at packaging.rubystyle.guide and

00:31:39,360 --> 00:31:42,720
this is the ruby this is the packaging

00:31:41,519 --> 00:31:44,880
style guide

00:31:42,720 --> 00:31:46,000
about explaining about what we want to

00:31:44,880 --> 00:31:49,200
change i mean

00:31:46,000 --> 00:31:52,080
um yeah about how we want to change how

00:31:49,200 --> 00:31:53,360
how we want uh certain pieces of code to

00:31:52,080 --> 00:31:57,440
look like for instance

00:31:53,360 --> 00:31:58,240
um require dot dot slash dot dot slash

00:31:57,440 --> 00:32:00,960
who should

00:31:58,240 --> 00:32:02,799
change to require foo instead of i mean

00:32:00,960 --> 00:32:04,320
record relative dot dot special dot

00:32:02,799 --> 00:32:05,200
slash who should change your car for and

00:32:04,320 --> 00:32:08,159
so on

00:32:05,200 --> 00:32:08,880
uh so it suggests uh changes that we

00:32:08,159 --> 00:32:12,880
want to bring

00:32:08,880 --> 00:32:14,880
bring in and uh another uh

00:32:12,880 --> 00:32:17,440
part is that they've also got docs the

00:32:14,880 --> 00:32:20,000
ruby group robocopter org slash

00:32:17,440 --> 00:32:22,159
rubric packaging uh this is the name of

00:32:20,000 --> 00:32:23,039
the library robocop packaging that i've

00:32:22,159 --> 00:32:26,799
written

00:32:23,039 --> 00:32:30,399
um so right now it's just a scaffold but

00:32:26,799 --> 00:32:32,799
i've almost covered all the

00:32:30,399 --> 00:32:35,279
information documentation and rationale

00:32:32,799 --> 00:32:38,320
inside the packaging style guide itself

00:32:35,279 --> 00:32:38,799
so um that is there and the best part

00:32:38,320 --> 00:32:41,600
also

00:32:38,799 --> 00:32:42,720
is that you know 24 upstream uh

00:32:41,600 --> 00:32:45,360
libraries have been

00:32:42,720 --> 00:32:46,159
using robocop packaging so far so it's

00:32:45,360 --> 00:32:49,440
like uh

00:32:46,159 --> 00:32:51,679
entire cucumber toolchain has uh

00:32:49,440 --> 00:32:54,159
has been using room called packaging and

00:32:51,679 --> 00:32:57,440
there are lots of other gems that we

00:32:54,159 --> 00:32:59,519
use i have been using roku packaging and

00:32:57,440 --> 00:33:01,440
probably soon gitlab will also be using

00:32:59,519 --> 00:33:01,840
aurocho packaging i mean i just talked

00:33:01,440 --> 00:33:03,840
to

00:33:01,840 --> 00:33:05,279
some people there they'd be they'd be

00:33:03,840 --> 00:33:08,399
interested sure

00:33:05,279 --> 00:33:11,440
so that is that is a nice thing

00:33:08,399 --> 00:33:15,120
um and lastly well

00:33:11,440 --> 00:33:19,279
um there there's some stuff remaining

00:33:15,120 --> 00:33:22,799
uh so this is more like an rfh

00:33:19,279 --> 00:33:24,960
request for help here um

00:33:22,799 --> 00:33:26,559
so what we want to do now is that in

00:33:24,960 --> 00:33:27,600
case while packaging or while

00:33:26,559 --> 00:33:30,320
maintaining

00:33:27,600 --> 00:33:30,880
uh the the libraries that we do in

00:33:30,320 --> 00:33:34,159
debian

00:33:30,880 --> 00:33:37,200
in case we we find all these uh offenses

00:33:34,159 --> 00:33:37,919
uh like using git or required calls et

00:33:37,200 --> 00:33:40,000
cetera

00:33:37,919 --> 00:33:41,600
please forward those upstream patches i

00:33:40,000 --> 00:33:43,039
mean it's it's a bit of manual work at

00:33:41,600 --> 00:33:43,600
the start but i'm sure it's it's going

00:33:43,039 --> 00:33:45,600
to work

00:33:43,600 --> 00:33:47,039
it's going to be worth it so forward

00:33:45,600 --> 00:33:50,399
some patches um

00:33:47,039 --> 00:33:53,120
including uh including probably a

00:33:50,399 --> 00:33:53,760
dependency development dependency on

00:33:53,120 --> 00:33:56,880
group of

00:33:53,760 --> 00:33:59,760
packaging and

00:33:56,880 --> 00:34:02,320
of course uh just don't submit a pull

00:33:59,760 --> 00:34:05,760
request doing so or an issue doing so

00:34:02,320 --> 00:34:07,919
just explain why we want to do that and

00:34:05,760 --> 00:34:10,000
you can use the link that is uh

00:34:07,919 --> 00:34:13,919
packaging the rubystyle.guys

00:34:10,000 --> 00:34:16,480
or docs.org slash book called packaging

00:34:13,919 --> 00:34:17,760
as the explanation it has been uh very

00:34:16,480 --> 00:34:20,639
well documented

00:34:17,760 --> 00:34:22,800
and you can be a little more nicer so i

00:34:20,639 --> 00:34:25,440
think i've raised around 15 to

00:34:22,800 --> 00:34:26,560
16 per request and different uh upstream

00:34:25,440 --> 00:34:28,320
dropping kit

00:34:26,560 --> 00:34:30,480
and they've been so kind to me and

00:34:28,320 --> 00:34:32,960
they've liked what we're doing here

00:34:30,480 --> 00:34:34,879
and all of them have been merged no pull

00:34:32,960 --> 00:34:37,440
requests have been closed so far so

00:34:34,879 --> 00:34:38,000
it's just that i've been more nice to uh

00:34:37,440 --> 00:34:40,159
to them

00:34:38,000 --> 00:34:41,520
and i've been explaining politely very

00:34:40,159 --> 00:34:43,359
politely and gently about

00:34:41,520 --> 00:34:45,679
why they're doing that it takes some

00:34:43,359 --> 00:34:46,960
time in studying but i'm pretty sure

00:34:45,679 --> 00:34:50,079
it's going to be worth it because you

00:34:46,960 --> 00:34:53,679
know um yeah also that i want to mention

00:34:50,079 --> 00:34:55,839
that not only i am um

00:34:53,679 --> 00:34:57,599
adding robocop packaging as a dependency

00:34:55,839 --> 00:34:59,359
and asking people to do that now

00:34:57,599 --> 00:35:00,720
people have themselves starting doing

00:34:59,359 --> 00:35:03,520
that so it's just that

00:35:00,720 --> 00:35:04,160
i kick-started this thing and people are

00:35:03,520 --> 00:35:06,960
following

00:35:04,160 --> 00:35:07,359
with that and that's kind of nice so all

00:35:06,960 --> 00:35:09,440
it

00:35:07,359 --> 00:35:10,480
needs is a little bit of your support so

00:35:09,440 --> 00:35:12,560
in case you find

00:35:10,480 --> 00:35:13,599
such things um during the maintenance of

00:35:12,560 --> 00:35:16,560
ruby packages

00:35:13,599 --> 00:35:17,359
please just forward the patches and um

00:35:16,560 --> 00:35:18,960
and just

00:35:17,359 --> 00:35:21,040
link to the docks at reboot core

00:35:18,960 --> 00:35:23,119
packaging probably as a dependency

00:35:21,040 --> 00:35:24,560
uh i'm pretty sure they'll be like kind

00:35:23,119 --> 00:35:27,440
enough to do so

00:35:24,560 --> 00:35:30,240
um and if you feel they're like more

00:35:27,440 --> 00:35:32,640
generic issues that we can

00:35:30,240 --> 00:35:34,400
incorporate in the tool please feel free

00:35:32,640 --> 00:35:37,599
to open issues

00:35:34,400 --> 00:35:40,640
and we can probably add another cop

00:35:37,599 --> 00:35:43,119
a linter i mean inside the linter and we

00:35:40,640 --> 00:35:46,240
can flag those open offenses and we can

00:35:43,119 --> 00:35:48,640
work with upstream to you know um

00:35:46,240 --> 00:35:50,640
in some kind of way that can benefit us

00:35:48,640 --> 00:35:53,760
both so

00:35:50,640 --> 00:35:56,960
besides us lastly um there's

00:35:53,760 --> 00:35:59,680
more documentation to come and

00:35:56,960 --> 00:36:01,680
where where i need your help uh in

00:35:59,680 --> 00:36:04,720
incubating a

00:36:01,680 --> 00:36:07,200
pack probably um faq where

00:36:04,720 --> 00:36:09,280
we mentioned uh who are the targeted

00:36:07,200 --> 00:36:11,040
audience and why are we doing that

00:36:09,280 --> 00:36:12,720
i've done most of the documentation but

00:36:11,040 --> 00:36:14,800
some parts of it are left

00:36:12,720 --> 00:36:16,560
so yeah we need to spread a little but a

00:36:14,800 --> 00:36:19,040
little bit more awareness i

00:36:16,560 --> 00:36:20,079
i'll continue to do so with my dd hat on

00:36:19,040 --> 00:36:22,800
and probably

00:36:20,079 --> 00:36:24,800
uh since i started this thing but uh i

00:36:22,800 --> 00:36:26,720
cannot do it alone of course so

00:36:24,800 --> 00:36:29,119
it needs a bit of your support and

00:36:26,720 --> 00:36:32,560
there's more awesomeness to come

00:36:29,119 --> 00:36:35,599
so that's it from the part of this is

00:36:32,560 --> 00:36:37,119
um maintaining an up-to-date version of

00:36:35,599 --> 00:36:39,359
our

00:36:37,119 --> 00:36:40,400
recommendations to upstream you know so

00:36:39,359 --> 00:36:42,320
the the the

00:36:40,400 --> 00:36:44,960
the issues that the tool that would

00:36:42,320 --> 00:36:46,480
cache wrote is

00:36:44,960 --> 00:36:48,400
the point of it is through the text that

00:36:46,480 --> 00:36:48,960
the issues the the type of things we

00:36:48,400 --> 00:36:51,920
also

00:36:48,960 --> 00:36:54,160
always have to patch from our packages

00:36:51,920 --> 00:36:55,440
like to make the alpha package test work

00:36:54,160 --> 00:36:57,839
and and

00:36:55,440 --> 00:36:58,640
to make it build without having it or

00:36:57,839 --> 00:37:01,839
without being

00:36:58,640 --> 00:37:06,800
in a repository so

00:37:01,839 --> 00:37:10,160
we tried to so at the beginning we did

00:37:06,800 --> 00:37:12,800
we went on code search and tried to

00:37:10,160 --> 00:37:13,839
to find common types of things we

00:37:12,800 --> 00:37:17,359
usually patch

00:37:13,839 --> 00:37:18,640
maybe we missed some so we can add new

00:37:17,359 --> 00:37:21,599
checkers

00:37:18,640 --> 00:37:22,000
and that would be nice but then i think

00:37:21,599 --> 00:37:24,320
going

00:37:22,000 --> 00:37:25,760
forward the most important thing is uh

00:37:24,320 --> 00:37:28,320
we keeping

00:37:25,760 --> 00:37:29,760
this documentation up to date so at some

00:37:28,320 --> 00:37:32,880
point with cash point uh

00:37:29,760 --> 00:37:35,680
linked uh our old

00:37:32,880 --> 00:37:36,960
upstream recommendations page and it was

00:37:35,680 --> 00:37:40,560
mentioning

00:37:36,960 --> 00:37:44,000
uh you should be using setup.rb which is

00:37:40,560 --> 00:37:46,480
like 10 years behind

00:37:44,000 --> 00:37:47,440
so we we need to keep this documentation

00:37:46,480 --> 00:37:50,560
so that

00:37:47,440 --> 00:37:53,920
upstreams need why

00:37:50,560 --> 00:37:56,880
so that upstream knows why we need them

00:37:53,920 --> 00:37:56,880
to make those changes

00:37:57,359 --> 00:38:00,800
and as this is the instruction then

00:37:59,280 --> 00:38:03,200
maybe

00:38:00,800 --> 00:38:06,240
uh we will have to patch less things in

00:38:03,200 --> 00:38:09,760
the in the future

00:38:06,240 --> 00:38:12,320
yeah and we love your head

00:38:09,760 --> 00:38:13,440
in the documentation you can you can

00:38:12,320 --> 00:38:16,720
raise issues

00:38:13,440 --> 00:38:19,839
and brownie points for um

00:38:16,720 --> 00:38:23,119
submitting patches

00:38:19,839 --> 00:38:23,920
so i think i want to just mention one uh

00:38:23,119 --> 00:38:26,240
probably

00:38:23,920 --> 00:38:27,040
a common issue that is similar to the

00:38:26,240 --> 00:38:30,400
relative

00:38:27,040 --> 00:38:31,040
required uh it's not as common but i

00:38:30,400 --> 00:38:34,640
think it's

00:38:31,040 --> 00:38:38,160
common among uh packages

00:38:34,640 --> 00:38:40,160
that they use a gem file where they

00:38:38,160 --> 00:38:41,280
you know reference jump spec from the

00:38:40,160 --> 00:38:43,119
jump file

00:38:41,280 --> 00:38:47,839
but if you remove the leap directory

00:38:43,119 --> 00:38:50,079
then jump spec won't find that library

00:38:47,839 --> 00:38:50,960
so i don't know whether yeah yeah

00:38:50,079 --> 00:38:55,200
there's the

00:38:50,960 --> 00:38:59,839
you using bundler slash setup in the

00:38:55,200 --> 00:39:02,240
uh the tests so that's one of the

00:38:59,839 --> 00:39:03,119
uh utkash has been working on this in

00:39:02,240 --> 00:39:05,440
the last days

00:39:03,119 --> 00:39:06,960
so it's it's something that's going to

00:39:05,440 --> 00:39:08,800
be there

00:39:06,960 --> 00:39:10,560
yeah it's it's already done about vendor

00:39:08,800 --> 00:39:12,079
setup cop is ready it's just going to be

00:39:10,560 --> 00:39:15,760
released next week

00:39:12,079 --> 00:39:18,560
um so yeah that is that is

00:39:15,760 --> 00:39:18,560
well taken care of

00:39:21,359 --> 00:39:26,400
okay let's go ahead oh there will be the

00:39:24,320 --> 00:39:28,240
bundler thing and also i think another

00:39:26,400 --> 00:39:33,599
issue is because the gem spec

00:39:28,240 --> 00:39:33,599
references relative uh to limb

00:39:35,920 --> 00:39:39,359
usually okay because they use that to

00:39:37,920 --> 00:39:42,640
like to get the

00:39:39,359 --> 00:39:46,160
library version number and that kind of

00:39:42,640 --> 00:39:46,720
thing and no i think he's not referring

00:39:46,160 --> 00:39:49,599
to that

00:39:46,720 --> 00:39:51,839
uh using regard that they live for okay

00:39:49,599 --> 00:39:53,839
so

00:39:51,839 --> 00:39:55,599
if the gym spec tries to load something

00:39:53,839 --> 00:40:00,079
from lib and it's not there

00:39:55,599 --> 00:40:00,079
when running okay yeah

00:40:00,720 --> 00:40:06,160
yeah so if you can find a a list of

00:40:04,319 --> 00:40:07,760
make maybe two or three packages that do

00:40:06,160 --> 00:40:11,040
that

00:40:07,760 --> 00:40:13,599
and point to us then we can try to

00:40:11,040 --> 00:40:14,640
i remember ruby cumberston is one that

00:40:13,599 --> 00:40:16,480
is

00:40:14,640 --> 00:40:18,240
because earlier i was not able to find

00:40:16,480 --> 00:40:19,119
out how to fix it but i think finally

00:40:18,240 --> 00:40:21,680
daniel

00:40:19,119 --> 00:40:24,400
fixed it for ruby combustion and then by

00:40:21,680 --> 00:40:27,920
the string to use for other packages

00:40:24,400 --> 00:40:31,040
okay uh

00:40:27,920 --> 00:40:33,040
maybe you can open an issue uh

00:40:31,040 --> 00:40:34,240
in the revocable packaging repositories

00:40:33,040 --> 00:40:36,800
so we have

00:40:34,240 --> 00:40:38,000
all these things there and maybe uh once

00:40:36,800 --> 00:40:39,680
i make the release

00:40:38,000 --> 00:40:41,520
next week i'll have time to work on that

00:40:39,680 --> 00:40:45,839
as well

00:40:41,520 --> 00:40:48,079
okay perfect thank you

00:40:45,839 --> 00:40:50,240
um we have one item left and five

00:40:48,079 --> 00:40:53,280
minutes so maybe we should move on

00:40:50,240 --> 00:40:54,480
yeah so the next next part is um any

00:40:53,280 --> 00:40:56,800
other business

00:40:54,480 --> 00:40:58,720
so first of all that i wanted to talk

00:40:56,800 --> 00:41:01,520
about is do we want to continue the

00:40:58,720 --> 00:41:01,920
monthly meetings because it looks to me

00:41:01,520 --> 00:41:03,760
that

00:41:01,920 --> 00:41:06,480
we've been kind of revolving around the

00:41:03,760 --> 00:41:09,839
same topics that is rails

00:41:06,480 --> 00:41:12,319
for a while now and and

00:41:09,839 --> 00:41:12,960
surprisingly that you know people aren't

00:41:12,319 --> 00:41:15,200
uh

00:41:12,960 --> 00:41:17,359
there generally during during the time

00:41:15,200 --> 00:41:20,000
the meeting i mean that's okay

00:41:17,359 --> 00:41:21,280
uh but it's just that it's been less

00:41:20,000 --> 00:41:23,920
engaging

00:41:21,280 --> 00:41:25,680
and we just keep on running in circles

00:41:23,920 --> 00:41:28,800
around rails and stuff

00:41:25,680 --> 00:41:31,280
um which is also not

00:41:28,800 --> 00:41:34,000
i mean a lot of people don't really care

00:41:31,280 --> 00:41:36,720
about the rails maintenance so

00:41:34,000 --> 00:41:37,359
which is all right i mean which is okay

00:41:36,720 --> 00:41:40,000
uh

00:41:37,359 --> 00:41:41,040
so probably we need to make uh these

00:41:40,000 --> 00:41:44,160
meetings more

00:41:41,040 --> 00:41:44,960
uh engaging and also we need to talk

00:41:44,160 --> 00:41:46,880
about if we

00:41:44,960 --> 00:41:48,400
want to continue these monthly meetings

00:41:46,880 --> 00:41:51,280
or make it bi-monthly

00:41:48,400 --> 00:41:53,760
so that we have more diverse content to

00:41:51,280 --> 00:41:53,760
talk about

00:41:55,440 --> 00:42:01,520
yeah i think monthly is okay we just

00:41:58,240 --> 00:42:04,560
need to make it more interesting

00:42:01,520 --> 00:42:05,760
like why not make a video call like we

00:42:04,560 --> 00:42:08,640
do today

00:42:05,760 --> 00:42:09,599
it seems more lively that we do we don't

00:42:08,640 --> 00:42:12,640
have the

00:42:09,599 --> 00:42:14,800
irc boat to take the notes for us but we

00:42:12,640 --> 00:42:16,640
can find another way

00:42:14,800 --> 00:42:20,160
that's a great suggestion sure i'm open

00:42:16,640 --> 00:42:23,280
to it we can always try

00:42:20,160 --> 00:42:24,160
yeah i also mentioned uh toothbrush that

00:42:23,280 --> 00:42:25,760
we can

00:42:24,160 --> 00:42:27,599
when we don't have an agenda for a

00:42:25,760 --> 00:42:31,520
meeting we can use that as

00:42:27,599 --> 00:42:34,720
lhf so we can do some hands-on work

00:42:31,520 --> 00:42:35,599
and because in the last i don't know the

00:42:34,720 --> 00:42:39,200
last meeting

00:42:35,599 --> 00:42:42,720
we didn't have any agenda so people

00:42:39,200 --> 00:42:44,319
didn't show up yeah

00:42:42,720 --> 00:42:46,960
absolutely i think that would that's

00:42:44,319 --> 00:42:50,880
nice yeah i think the issue is

00:42:46,960 --> 00:42:51,599
uh we need someone to mobilize everyone

00:42:50,880 --> 00:42:55,359
else

00:42:51,599 --> 00:42:57,680
like to collect the lhfs

00:42:55,359 --> 00:42:59,200
and post it to the mailing list i think

00:42:57,680 --> 00:43:02,880
woodcut is doing this

00:42:59,200 --> 00:43:06,560
anyway for the teaching so maybe

00:43:02,880 --> 00:43:09,760
yeah we just need a way of um

00:43:06,560 --> 00:43:10,319
i think you can use tracker to get stuff

00:43:09,760 --> 00:43:13,839
to do

00:43:10,319 --> 00:43:18,240
or or maybe udd yeah sure

00:43:13,839 --> 00:43:19,440
then are you do you volunteer to do that

00:43:18,240 --> 00:43:23,200
i mean

00:43:19,440 --> 00:43:26,160
is it yeah i think so

00:43:23,200 --> 00:43:27,520
in the initial months i can basis that

00:43:26,160 --> 00:43:30,079
if people are responsible

00:43:27,520 --> 00:43:31,760
responsive towards it if you're getting

00:43:30,079 --> 00:43:32,800
more traction if you're doing some good

00:43:31,760 --> 00:43:37,359
work i'm sure i can

00:43:32,800 --> 00:43:39,599
help it's just that we've been um

00:43:37,359 --> 00:43:42,560
been very less active for the meetings

00:43:39,599 --> 00:43:42,560
lately so yeah

00:43:42,880 --> 00:43:49,280
yeah sounds a good plan

00:43:46,240 --> 00:43:52,880
okay so do you want to meet next friday

00:43:49,280 --> 00:43:57,680
the first week yeah the next friday

00:43:52,880 --> 00:43:57,680
yeah next to next would be i think

00:43:59,359 --> 00:44:05,200
okay we have two more minutes

00:44:02,560 --> 00:44:06,160
so uh two more minutes two more quick

00:44:05,200 --> 00:44:08,800
things uh

00:44:06,160 --> 00:44:10,319
so from the depconf19 there was an

00:44:08,800 --> 00:44:12,319
action needed section

00:44:10,319 --> 00:44:14,000
uh where you're supposed to create a

00:44:12,319 --> 00:44:16,160
page for the newcomers

00:44:14,000 --> 00:44:17,040
uh and improve the documentation and

00:44:16,160 --> 00:44:19,520
probably

00:44:17,040 --> 00:44:20,240
host it on gitlab pages we already have

00:44:19,520 --> 00:44:22,880
i think

00:44:20,240 --> 00:44:23,520
ruby will ruby.pages.net something like

00:44:22,880 --> 00:44:26,560
that

00:44:23,520 --> 00:44:28,800
um davey how how far have we come on

00:44:26,560 --> 00:44:28,800
there

00:44:29,280 --> 00:44:34,160
uh we have a blog there where danielle

00:44:33,280 --> 00:44:37,200
posted the

00:44:34,160 --> 00:44:38,800
reports from the screen i guess we can

00:44:37,200 --> 00:44:40,720
we can use that same page to add the

00:44:38,800 --> 00:44:43,920
documentation i mean

00:44:40,720 --> 00:44:45,440
uh yeah yeah i think kanoshiro at this

00:44:43,920 --> 00:44:49,280
point so he might have more

00:44:45,440 --> 00:44:51,599
to chip in no i i was just checking the

00:44:49,280 --> 00:44:53,760
actual needed items from the last buff

00:44:51,599 --> 00:44:56,319
just

00:44:53,760 --> 00:44:57,200
okay so maybe someone needs to work on

00:44:56,319 --> 00:45:00,079
um

00:44:57,200 --> 00:45:00,560
writing documentation there as well so

00:45:00,079 --> 00:45:03,520
this is

00:45:00,560 --> 00:45:04,240
something we can do all of this together

00:45:03,520 --> 00:45:07,119
during uh

00:45:04,240 --> 00:45:07,839
during some elective or something um so

00:45:07,119 --> 00:45:10,720
this might

00:45:07,839 --> 00:45:11,119
just keep it more engaging and i think

00:45:10,720 --> 00:45:13,760
we're

00:45:11,119 --> 00:45:14,640
we're running out of time we are out of

00:45:13,760 --> 00:45:18,720
time

00:45:14,640 --> 00:45:21,680
yeah so let's just wrap it up

00:45:18,720 --> 00:45:23,920
and thank you so much for joining in

00:45:21,680 --> 00:45:26,240
it's it's nice to see all of you again

00:45:23,920 --> 00:45:28,560
and i hope someday sometimes we'll all

00:45:26,240 --> 00:45:31,599
be there in person as well

00:45:28,560 --> 00:45:34,960
yeah thank you everyone in

00:45:31,599 --> 00:45:43,359
here bye-bye hi folks thank you

00:45:34,960 --> 00:45:43,359

YouTube URL: https://www.youtube.com/watch?v=tsg8Oj4-n5I


