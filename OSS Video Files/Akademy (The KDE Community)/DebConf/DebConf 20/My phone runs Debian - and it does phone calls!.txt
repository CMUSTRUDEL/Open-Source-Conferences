Title: My phone runs Debian - and it does phone calls!
Publication date: 2020-10-23
Playlist: DebConf 20
Description: 
	by Guido GÃ¼nther

At: DebConf20
https://debconf20.debconf.org/talks/13-my-phone-runs-debian-and-it-does-phone-calls/

There were devices like the N900 and the Ubuntu phone running Debian based distributions before but now we have phones without proprietary software components (maybe except firmware) and mainline kernel support is emerging. Needed software is already in Debian or on it's way in.

This talk gives an overview about the Phosh/GNOME based software stack. Where we are heading, what is still left to do to make it every day usable for hackers but also people that just want control over their devices back.

Room: Talks
Scheduled start: 2020-08-26 11:00:00
Captions: 
	00:00:07,279 --> 00:00:10,800
hello everyone

00:00:08,960 --> 00:00:12,799
welcome to my talk my phone runs debbie

00:00:10,800 --> 00:00:14,320
and it does phone calls

00:00:12,799 --> 00:00:15,679
this is where devcon somewhat unusual

00:00:14,320 --> 00:00:16,160
setting but i'm very happy that devconf

00:00:15,679 --> 00:00:18,240
is

00:00:16,160 --> 00:00:19,760
still possible actually thanks a lot to

00:00:18,240 --> 00:00:24,000
the devconf team for

00:00:19,760 --> 00:00:25,680
for making this possible so about myself

00:00:24,000 --> 00:00:28,400
since not everybody might know me um i'm

00:00:25,680 --> 00:00:30,000
a debit developer since some time

00:00:28,400 --> 00:00:31,679
besides the phone related packages i'm

00:00:30,000 --> 00:00:32,559
going to talk about and which are rather

00:00:31,679 --> 00:00:33,920
new and debian

00:00:32,559 --> 00:00:35,840
i've been working on lipboard and ready

00:00:33,920 --> 00:00:37,920
packaging and get the package mostly

00:00:35,840 --> 00:00:39,600
during the last years

00:00:37,920 --> 00:00:41,440
and as a spoiler i'm working with purism

00:00:39,600 --> 00:00:43,360
on the library phone

00:00:41,440 --> 00:00:44,480
and this is the device i'm using so i'll

00:00:43,360 --> 00:00:46,079
talk about that device

00:00:44,480 --> 00:00:48,079
quite a bit since its design goals

00:00:46,079 --> 00:00:50,559
influence the software stack i'm running

00:00:48,079 --> 00:00:51,360
um but no worries this is not going to

00:00:50,559 --> 00:00:54,239
be a marketing

00:00:51,360 --> 00:00:55,120
talk by any means i had used debian on

00:00:54,239 --> 00:00:57,360
the open moco

00:00:55,120 --> 00:00:59,840
before and maybe on which is also debian

00:00:57,360 --> 00:01:01,359
based on nokia's n900

00:00:59,840 --> 00:01:02,879
so before switching to the ribbon 5

00:01:01,359 --> 00:01:04,640
recently i've

00:01:02,879 --> 00:01:06,000
used debian based distributions on my

00:01:04,640 --> 00:01:08,159
phones as well

00:01:06,000 --> 00:01:09,040
and i'm really looking forward to see

00:01:08,159 --> 00:01:13,840
debian on

00:01:09,040 --> 00:01:13,840
running on recent devices

00:01:14,240 --> 00:01:17,360
so as an overview what to expect from

00:01:15,680 --> 00:01:19,040
this talk i'm first going to talk about

00:01:17,360 --> 00:01:20,640
how the mobile second running looks like

00:01:19,040 --> 00:01:23,040
and why it looks like that

00:01:20,640 --> 00:01:24,640
what of that is in debian already and

00:01:23,040 --> 00:01:26,320
what it's still left to do to make it

00:01:24,640 --> 00:01:30,320
run smoothly and to

00:01:26,320 --> 00:01:30,320
work on more devices

00:01:30,479 --> 00:01:34,000
since we can't have an on stage demo

00:01:32,880 --> 00:01:36,240
here's a screenshot of the calls

00:01:34,000 --> 00:01:40,320
application which is surprisingly also

00:01:36,240 --> 00:01:42,479
cold called

00:01:40,320 --> 00:01:44,799
as an introduction let's go back to

00:01:42,479 --> 00:01:47,520
several debcons so at depth con 17

00:01:44,799 --> 00:01:48,720
i attended debacle's buff which was

00:01:47,520 --> 00:01:51,439
called pushing forward

00:01:48,720 --> 00:01:52,720
debian on mobile you find the link to

00:01:51,439 --> 00:01:55,680
this and other stuff

00:01:52,720 --> 00:01:57,040
at the very end of the slide set there

00:01:55,680 --> 00:01:57,600
was quite some discussion going on on

00:01:57,040 --> 00:02:00,240
how to get

00:01:57,600 --> 00:02:01,439
debian on the mobile devices the room

00:02:00,240 --> 00:02:04,240
was pretty crowded with

00:02:01,439 --> 00:02:04,719
50 plus people and lots of ideas ranging

00:02:04,240 --> 00:02:06,320
from

00:02:04,719 --> 00:02:08,399
using the open moco stack to get

00:02:06,320 --> 00:02:09,440
something going up to building a debian

00:02:08,399 --> 00:02:12,480
user space on

00:02:09,440 --> 00:02:14,239
android devices were tossed around also

00:02:12,480 --> 00:02:18,160
there was some talk about why

00:02:14,239 --> 00:02:19,840
we want mobile devices to run debian

00:02:18,160 --> 00:02:20,160
except for that we want everything to

00:02:19,840 --> 00:02:22,800
run

00:02:20,160 --> 00:02:24,319
debian like software freedom proper

00:02:22,800 --> 00:02:28,319
security updates

00:02:24,319 --> 00:02:28,319
and user instead of vendor control

00:02:28,480 --> 00:02:32,239
so basically all things we take for

00:02:30,239 --> 00:02:32,720
granted on our laptops and maybe our

00:02:32,239 --> 00:02:36,560
servers

00:02:32,720 --> 00:02:38,319
and workstations but we don't have that

00:02:36,560 --> 00:02:40,239
on the mobile devices we carry around

00:02:38,319 --> 00:02:42,879
all day so what are

00:02:40,239 --> 00:02:43,840
the actual obstacles to get debbie and

00:02:42,879 --> 00:02:47,519
running on

00:02:43,840 --> 00:02:47,519
on mobile devices like smartphones

00:02:48,480 --> 00:02:52,400
the obstacles on the device side are

00:02:51,120 --> 00:02:54,840
lack of hardware support

00:02:52,400 --> 00:02:56,160
for current devices so chip

00:02:54,840 --> 00:02:58,560
documentation is

00:02:56,160 --> 00:03:00,080
often very scarce and makes right that

00:02:58,560 --> 00:03:01,280
makes writing functional drivers very

00:03:00,080 --> 00:03:03,040
difficult

00:03:01,280 --> 00:03:04,959
although postmarket os did a very great

00:03:03,040 --> 00:03:08,000
job here to get it

00:03:04,959 --> 00:03:09,680
getting boot on more devices

00:03:08,000 --> 00:03:11,200
and maybe except for the pixel phones

00:03:09,680 --> 00:03:12,080
you're very often locked out of your

00:03:11,200 --> 00:03:13,599
device

00:03:12,080 --> 00:03:16,239
and have to root in order to install

00:03:13,599 --> 00:03:18,239
another operating system so vendors

00:03:16,239 --> 00:03:21,120
make it pretty hard for you to run

00:03:18,239 --> 00:03:23,040
something else than what they shipped

00:03:21,120 --> 00:03:24,159
there's usually proprietary user space

00:03:23,040 --> 00:03:26,239
bits very

00:03:24,159 --> 00:03:27,200
prominently the opengl and welcome

00:03:26,239 --> 00:03:29,280
drivers

00:03:27,200 --> 00:03:31,599
which are usually needed for fast and

00:03:29,280 --> 00:03:34,239
energy efficient rendering

00:03:31,599 --> 00:03:35,440
devices run heavily forked android

00:03:34,239 --> 00:03:38,239
kernels

00:03:35,440 --> 00:03:40,159
with non-mainline interfaces and tons of

00:03:38,239 --> 00:03:43,840
vendor drivers of very

00:03:40,159 --> 00:03:45,840
different quality user space

00:03:43,840 --> 00:03:48,000
looks pretty much different from what we

00:03:45,840 --> 00:03:50,239
are used on our laptops and servers

00:03:48,000 --> 00:03:52,480
using a bionic lip city surface flinger

00:03:50,239 --> 00:03:55,680
and these kind of things

00:03:52,480 --> 00:03:56,879
so not very easy to get debian going as

00:03:55,680 --> 00:03:59,599
a start

00:03:56,879 --> 00:04:00,400
and on the debian side one of the issues

00:03:59,599 --> 00:04:03,840
is

00:04:00,400 --> 00:04:05,920
that we are lacking adaptable user

00:04:03,840 --> 00:04:08,400
interfaces and apps that

00:04:05,920 --> 00:04:11,200
probably work on small screen sizes and

00:04:08,400 --> 00:04:14,480
then just to the small screen sizes

00:04:11,200 --> 00:04:17,199
a key takeaway from that

00:04:14,480 --> 00:04:19,199
buff for me was that having a few

00:04:17,199 --> 00:04:21,680
devices that are affordable and current

00:04:19,199 --> 00:04:22,400
like the openmocca was like many years

00:04:21,680 --> 00:04:23,840
ago

00:04:22,400 --> 00:04:29,840
would give us a very good start for

00:04:23,840 --> 00:04:29,840
developers to hack on it

00:04:31,280 --> 00:04:34,560
a couple of weeks later purism announced

00:04:32,880 --> 00:04:35,680
the crowdfunding campaign for a linux

00:04:34,560 --> 00:04:38,479
based smartphone

00:04:35,680 --> 00:04:39,680
named libra5 named after its five-inch

00:04:38,479 --> 00:04:41,440
screen size

00:04:39,680 --> 00:04:43,040
many things it identified as problematic

00:04:41,440 --> 00:04:44,560
and in the depth conf above

00:04:43,040 --> 00:04:46,720
looked as if they could just be ticked

00:04:44,560 --> 00:04:48,479
off with this device like the soc

00:04:46,720 --> 00:04:50,160
using the advantage gpus so we could use

00:04:48,479 --> 00:04:52,160
the existing already reverse

00:04:50,160 --> 00:04:53,919
engineered edna with driver to avoid

00:04:52,160 --> 00:04:55,520
user space open jailblocks

00:04:53,919 --> 00:04:57,199
or that the device should be running a

00:04:55,520 --> 00:05:00,000
mainline linux kernel so

00:04:57,199 --> 00:05:01,440
i went ahead and backed the campaign

00:05:00,000 --> 00:05:04,160
again a couple of weeks later

00:05:01,440 --> 00:05:06,000
it was near the end of 2017 already

00:05:04,160 --> 00:05:07,840
through some very lucky circumstances

00:05:06,000 --> 00:05:09,199
i found myself actually working on

00:05:07,840 --> 00:05:12,320
peterson's themes that

00:05:09,199 --> 00:05:13,680
would build the library five besides

00:05:12,320 --> 00:05:15,280
many more things the library five

00:05:13,680 --> 00:05:17,360
campaign announced there was

00:05:15,280 --> 00:05:18,800
one additional campaign goal coin

00:05:17,360 --> 00:05:19,840
convergence which will be important

00:05:18,800 --> 00:05:22,000
later

00:05:19,840 --> 00:05:23,759
that means that users should be able to

00:05:22,000 --> 00:05:24,320
run the same applications on the phone

00:05:23,759 --> 00:05:26,240
as on the

00:05:24,320 --> 00:05:27,919
laptops but it also means that one

00:05:26,240 --> 00:05:29,280
should be able to connect an external

00:05:27,919 --> 00:05:31,039
screen and keyboard

00:05:29,280 --> 00:05:32,960
to turn the phone into a workstation

00:05:31,039 --> 00:05:34,560
since beerus and laptops run the gnome

00:05:32,960 --> 00:05:36,800
desktop environment by default

00:05:34,560 --> 00:05:38,560
the mission statement for the software

00:05:36,800 --> 00:05:41,440
side of the library 5

00:05:38,560 --> 00:05:42,639
it could be summarized like let's build

00:05:41,440 --> 00:05:44,400
a modern smartphone

00:05:42,639 --> 00:05:46,560
running a pure weyland canon bay

00:05:44,400 --> 00:05:48,320
software stack with a main linux kernel

00:05:46,560 --> 00:05:50,000
a debian based operating system and no

00:05:48,320 --> 00:05:53,840
binary blobs that user space needs to

00:05:50,000 --> 00:05:57,199
mess with

00:05:53,840 --> 00:06:00,160
now how hard can that be well

00:05:57,199 --> 00:06:00,720
quite hard as it turned out so there

00:06:00,160 --> 00:06:03,199
were some

00:06:00,720 --> 00:06:04,720
obstacles to overcome so first of all

00:06:03,199 --> 00:06:05,440
since this was like completely new

00:06:04,720 --> 00:06:08,160
design

00:06:05,440 --> 00:06:09,520
the hardware wasn't designed yet the soc

00:06:08,160 --> 00:06:12,880
so the main chip used

00:06:09,520 --> 00:06:14,560
in the phone and imx8 from nxp had no

00:06:12,880 --> 00:06:16,639
linux mainland support yet

00:06:14,560 --> 00:06:17,919
even the evk so the basically the

00:06:16,639 --> 00:06:20,319
reference board

00:06:17,919 --> 00:06:21,039
that was the chip's capabilities wasn't

00:06:20,319 --> 00:06:22,639
even public

00:06:21,039 --> 00:06:25,360
publicly available at that point when we

00:06:22,639 --> 00:06:27,440
started and gnome was not suitable for

00:06:25,360 --> 00:06:29,520
mobile devices and small screen sizes as

00:06:27,440 --> 00:06:32,000
is

00:06:29,520 --> 00:06:33,440
but gnome had some mobile background

00:06:32,000 --> 00:06:34,000
since some of the hidden parts of the

00:06:33,440 --> 00:06:36,880
n900

00:06:34,000 --> 00:06:38,400
went into gdk3 so it is already

00:06:36,880 --> 00:06:40,560
touchwear for example

00:06:38,400 --> 00:06:42,160
and it has great integration into debian

00:06:40,560 --> 00:06:44,960
making new releases

00:06:42,160 --> 00:06:46,160
very easy to integrate so to start with

00:06:44,960 --> 00:06:49,280
software development

00:06:46,160 --> 00:06:51,680
we used um boards with earlier socs from

00:06:49,280 --> 00:06:52,080
nxp as a stopgap until amx 8 parts

00:06:51,680 --> 00:06:53,840
became

00:06:52,080 --> 00:06:55,759
available and thankfully debian was

00:06:53,840 --> 00:06:58,319
already there as a base

00:06:55,759 --> 00:07:00,479
to build on i'll leave all all the

00:06:58,319 --> 00:07:02,880
hardware related bits from here on

00:07:00,479 --> 00:07:03,599
for details please check nicole's cc cam

00:07:02,880 --> 00:07:05,599
talk

00:07:03,599 --> 00:07:07,759
a mobile phone that respects user

00:07:05,599 --> 00:07:10,080
freedom which i can only like recommend

00:07:07,759 --> 00:07:10,080
watching

00:07:10,960 --> 00:07:14,160
but for the software side if we wanted

00:07:12,400 --> 00:07:16,960
to have something workable soon

00:07:14,160 --> 00:07:18,160
it was clear that we didn't want to

00:07:16,960 --> 00:07:20,880
reinvent the wheel but

00:07:18,160 --> 00:07:22,160
use as many existing parts as possible

00:07:20,880 --> 00:07:23,039
this should also help long-term

00:07:22,160 --> 00:07:25,919
maintainability

00:07:23,039 --> 00:07:26,479
but like only time will tell so that's

00:07:25,919 --> 00:07:30,560
what we

00:07:26,479 --> 00:07:32,479
what we came up with

00:07:30,560 --> 00:07:34,319
let's start with the apps apps remain

00:07:32,479 --> 00:07:34,880
regular gnome apps of course there was

00:07:34,319 --> 00:07:37,520
no

00:07:34,880 --> 00:07:38,560
point and no way to rewrite existing

00:07:37,520 --> 00:07:40,960
applications

00:07:38,560 --> 00:07:42,479
like a calendar using a mobile framework

00:07:40,960 --> 00:07:45,199
from scratch

00:07:42,479 --> 00:07:45,520
also having is mobile like scattered all

00:07:45,199 --> 00:07:47,280
over

00:07:45,520 --> 00:07:48,720
existing code bases is out of the

00:07:47,280 --> 00:07:51,520
question if this should

00:07:48,720 --> 00:07:52,960
ever go upstream but only if the code

00:07:51,520 --> 00:07:54,240
can live upstream actually the

00:07:52,960 --> 00:07:55,919
developers and designers

00:07:54,240 --> 00:07:57,759
can care about size constraints and

00:07:55,919 --> 00:07:58,800
mobile patterns so we can get a

00:07:57,759 --> 00:08:01,520
consistent design

00:07:58,800 --> 00:08:04,160
and well working apps for desktop and

00:08:01,520 --> 00:08:04,160
mobile

00:08:04,800 --> 00:08:12,000
see the convergence argument above

00:08:09,360 --> 00:08:13,680
so le pen was born this is spearheaded

00:08:12,000 --> 00:08:16,560
by adrian alexander

00:08:13,680 --> 00:08:18,479
um le pen is a widget set to support

00:08:16,560 --> 00:08:19,759
adaptive apps and mobile patterns

00:08:18,479 --> 00:08:22,879
written in gtk

00:08:19,759 --> 00:08:23,599
it's regular gtk widgets that just do

00:08:22,879 --> 00:08:25,919
the right thing

00:08:23,599 --> 00:08:28,160
according to the window size so they

00:08:25,919 --> 00:08:29,840
hide content when the window is small

00:08:28,160 --> 00:08:31,280
and show more content when the window is

00:08:29,840 --> 00:08:34,399
bigger it

00:08:31,280 --> 00:08:36,159
also cares about touch-based mobile

00:08:34,399 --> 00:08:38,000
input patterns

00:08:36,159 --> 00:08:39,680
the size thing makes it not only useful

00:08:38,000 --> 00:08:41,839
on mobile but also on desktop

00:08:39,680 --> 00:08:43,599
to show relevant content on different

00:08:41,839 --> 00:08:45,279
window sizes

00:08:43,599 --> 00:08:48,080
lipendy moved to gnome infrastructure

00:08:45,279 --> 00:08:50,160
recently and is being used by quite some

00:08:48,080 --> 00:08:51,120
gnome apps already like control center

00:08:50,160 --> 00:08:54,000
epiphany

00:08:51,120 --> 00:08:55,920
gnome usage geary and gnome clocks for

00:08:54,000 --> 00:08:57,680
example

00:08:55,920 --> 00:08:59,360
these will mostly come into debian with

00:08:57,680 --> 00:09:01,040
gnome 338

00:08:59,360 --> 00:09:02,560
which is already shaping up in

00:09:01,040 --> 00:09:05,680
experimental

00:09:02,560 --> 00:09:09,200
but there's more to come with gnome 340.

00:09:05,680 --> 00:09:13,519
some bits are in debian already and i

00:09:09,200 --> 00:09:13,519
try to demo that a little bit

00:09:15,120 --> 00:09:21,519
so um

00:09:18,160 --> 00:09:23,279
this demos the adaptive header bar

00:09:21,519 --> 00:09:26,640
so you have the header bar here and if i

00:09:23,279 --> 00:09:26,640
just start the demo you see

00:09:30,480 --> 00:09:34,560
you see how it adapts to the size

00:09:33,360 --> 00:09:38,560
constraints so it first

00:09:34,560 --> 00:09:41,680
moves the text below the icons and

00:09:38,560 --> 00:09:42,560
if things get even smaller then it moves

00:09:41,680 --> 00:09:44,320
to the bottom

00:09:42,560 --> 00:09:50,720
so the header box stays free for the

00:09:44,320 --> 00:09:54,640
menu and other things

00:09:50,720 --> 00:09:57,760
and as the app grows in size the

00:09:54,640 --> 00:09:57,760
space is being used again

00:09:59,519 --> 00:10:03,440
the other thing is the leaflet this is

00:10:01,760 --> 00:10:04,880
like with clone control center

00:10:03,440 --> 00:10:07,279
you see that when the window gets

00:10:04,880 --> 00:10:08,800
smaller

00:10:07,279 --> 00:10:11,040
then the selection area is being hidden

00:10:08,800 --> 00:10:15,360
and only the content area is being shown

00:10:11,040 --> 00:10:18,959
then you can go back select tab

00:10:15,360 --> 00:10:19,920
and then make the window wider and it

00:10:18,959 --> 00:10:33,839
will

00:10:19,920 --> 00:10:33,839
use the space again

00:10:35,040 --> 00:10:39,279
so for for the session side the

00:10:37,600 --> 00:10:41,680
applications are running in an almost

00:10:39,279 --> 00:10:43,279
like regular gnome session with gnome

00:10:41,680 --> 00:10:46,160
session itself being responsible for

00:10:43,279 --> 00:10:46,800
maintaining the session gnome settings

00:10:46,160 --> 00:10:48,320
on the desktop

00:10:46,800 --> 00:10:50,240
is responsible for brightness control

00:10:48,320 --> 00:10:52,560
power management etc

00:10:50,240 --> 00:10:54,880
there are the usual so to say lower

00:10:52,560 --> 00:10:57,200
layers with policy kit you power for

00:10:54,880 --> 00:10:58,959
battery monitoring new disks network

00:10:57,200 --> 00:11:01,279
manager to handle wi-fi and mobile data

00:10:58,959 --> 00:11:03,440
connections and modem manager to handle

00:11:01,279 --> 00:11:05,200
modem integration sms and voice calls on

00:11:03,440 --> 00:11:07,600
these things

00:11:05,200 --> 00:11:08,399
there's one additional component named

00:11:07,600 --> 00:11:10,800
feedback d

00:11:08,399 --> 00:11:11,519
responsible for haptic and led feedback

00:11:10,800 --> 00:11:13,920
depending

00:11:11,519 --> 00:11:14,800
on the user's loudness settings so to

00:11:13,920 --> 00:11:17,040
say

00:11:14,800 --> 00:11:18,160
it's somewhat modeled like the sound

00:11:17,040 --> 00:11:20,880
event system so when an

00:11:18,160 --> 00:11:21,519
app received an email the app just tells

00:11:20,880 --> 00:11:23,920
feedback d

00:11:21,519 --> 00:11:24,880
to provide feedback for messaging you

00:11:23,920 --> 00:11:27,279
email

00:11:24,880 --> 00:11:28,079
and feedback would the jeep like

00:11:27,279 --> 00:11:30,160
feedback you would

00:11:28,079 --> 00:11:33,360
for example blink led or whatever is

00:11:30,160 --> 00:11:34,880
configured in the current feedback theme

00:11:33,360 --> 00:11:36,720
it's a new component since desktops

00:11:34,880 --> 00:11:38,720
usually don't need to worry about this

00:11:36,720 --> 00:11:40,880
but it will be useful on tablets for

00:11:38,720 --> 00:11:42,560
example too

00:11:40,880 --> 00:11:44,000
the major difference is that there's no

00:11:42,560 --> 00:11:46,720
gnome shell

00:11:44,000 --> 00:11:48,320
running but fosh which is like short for

00:11:46,720 --> 00:11:52,240
normal shell

00:11:48,320 --> 00:11:53,920
plus some other components um

00:11:52,240 --> 00:11:56,000
so why is that why not just like use

00:11:53,920 --> 00:11:58,240
gnome shell

00:11:56,000 --> 00:12:00,160
we wanted to build a pure violent shell

00:11:58,240 --> 00:12:02,399
since we couldn't imagine doing

00:12:00,160 --> 00:12:03,519
um the work twice like for wayland and

00:12:02,399 --> 00:12:05,040
for x11

00:12:03,519 --> 00:12:06,720
um also we wanted to investigate a

00:12:05,040 --> 00:12:09,839
separation between the compositor

00:12:06,720 --> 00:12:11,519
the keyboard and the graphical shell

00:12:09,839 --> 00:12:12,880
ideally we wanted to use the same tool

00:12:11,519 --> 00:12:15,120
kit for shell and application

00:12:12,880 --> 00:12:17,120
development so we can for example

00:12:15,120 --> 00:12:18,800
just use depending widgets to have the

00:12:17,120 --> 00:12:22,720
same patterns

00:12:18,800 --> 00:12:24,480
we'd use for the shell and

00:12:22,720 --> 00:12:25,839
for the desktop otherwise we kind of

00:12:24,480 --> 00:12:28,560
like have two tool

00:12:25,839 --> 00:12:30,160
kits one for shell development once for

00:12:28,560 --> 00:12:32,000
application development

00:12:30,160 --> 00:12:33,440
and we kind of like discussed all this

00:12:32,000 --> 00:12:36,560
um with gnome developers

00:12:33,440 --> 00:12:38,480
and when one core developers said

00:12:36,560 --> 00:12:39,680
please don't try to shrink the shell it

00:12:38,480 --> 00:12:41,839
was basically

00:12:39,680 --> 00:12:45,120
set but again we didn't want to

00:12:41,839 --> 00:12:45,120
re-invent the wheel

00:12:45,839 --> 00:12:53,519
so this is what we came up with

00:12:49,760 --> 00:12:55,760
it's basically three components so flush

00:12:53,519 --> 00:12:57,680
the shell fog the compositor and squig

00:12:55,760 --> 00:13:01,279
port on the on-screen keyboard

00:12:57,680 --> 00:13:01,279
so flush is the graphical shell

00:13:01,519 --> 00:13:06,800
um that handles all

00:13:04,800 --> 00:13:09,279
of the debuffs interaction and talking

00:13:06,800 --> 00:13:11,519
to um

00:13:09,279 --> 00:13:12,480
to to device demons it also has the user

00:13:11,519 --> 00:13:15,440
interaction

00:13:12,480 --> 00:13:17,200
sort of the bottom bar and the overview

00:13:15,440 --> 00:13:20,160
for launching available apps the quick

00:13:17,200 --> 00:13:26,000
settings and all these kind of things

00:13:20,160 --> 00:13:26,000
the compositor handles graphics output

00:13:26,399 --> 00:13:30,160
and touch mouse and keyboard input

00:13:28,880 --> 00:13:31,600
handling while talking

00:13:30,160 --> 00:13:33,519
basically the wheel and protocol to the

00:13:31,600 --> 00:13:35,680
applications this is

00:13:33,519 --> 00:13:36,560
comparable to other welding compositors

00:13:35,680 --> 00:13:39,760
like quinn

00:13:36,560 --> 00:13:40,560
or sway one difference is that by

00:13:39,760 --> 00:13:43,600
default

00:13:40,560 --> 00:13:45,040
it just like maximizes all applications

00:13:43,600 --> 00:13:47,279
since they should usually fill the whole

00:13:45,040 --> 00:13:48,800
screen on mobile that we

00:13:47,279 --> 00:13:51,519
can that can be turned off when running

00:13:48,800 --> 00:13:53,600
in desktop mode maybe also noteworthy

00:13:51,519 --> 00:13:55,760
it can downscale apps that don't fit the

00:13:53,600 --> 00:13:57,440
screen so um

00:13:55,760 --> 00:13:59,440
this can be turned on but per

00:13:57,440 --> 00:14:01,120
application so for example like the

00:13:59,440 --> 00:14:03,440
fireworks firefox window is

00:14:01,120 --> 00:14:05,519
like a tiny bit too wide you can kind of

00:14:03,440 --> 00:14:06,240
like make it shrink down so it so it

00:14:05,519 --> 00:14:08,880
fits on the phone

00:14:06,240 --> 00:14:10,079
screen that obviously has its limits

00:14:08,880 --> 00:14:12,000
when ui elements get

00:14:10,079 --> 00:14:13,920
too small but it can be a usable work

00:14:12,000 --> 00:14:17,839
around to get an application

00:14:13,920 --> 00:14:17,839
going right now

00:14:20,480 --> 00:14:23,760
as for the shell um as we wanted it to

00:14:23,440 --> 00:14:26,560
be

00:14:23,760 --> 00:14:27,920
it uses the same toolkit as the desktop

00:14:26,560 --> 00:14:30,639
applications so it's

00:14:27,920 --> 00:14:32,560
written in gtk and uses lipendy for for

00:14:30,639 --> 00:14:34,399
their adaptiveness

00:14:32,560 --> 00:14:36,079
and hence we can use the same debugging

00:14:34,399 --> 00:14:37,920
and programming techniques

00:14:36,079 --> 00:14:40,160
um that we use for the regular

00:14:37,920 --> 00:14:42,240
applications for shell-like behavior

00:14:40,160 --> 00:14:44,000
it uses a protocol called layer shell

00:14:42,240 --> 00:14:46,880
which was invented

00:14:44,000 --> 00:14:47,519
by the double roots guys um double roots

00:14:46,880 --> 00:14:49,360
is the

00:14:47,519 --> 00:14:50,959
compositor library here at the very

00:14:49,360 --> 00:14:53,760
bottom that is used by

00:14:50,959 --> 00:14:54,720
fog to build up the the compositor and

00:14:53,760 --> 00:14:56,639
squeakbot

00:14:54,720 --> 00:14:58,880
is the on-screen keyboard basically

00:14:56,639 --> 00:15:00,000
converting touch presses

00:14:58,880 --> 00:15:02,000
on the on-screen keyboard into

00:15:00,000 --> 00:15:03,839
keypresses seen by an application

00:15:02,000 --> 00:15:05,040
this allows the three components to

00:15:03,839 --> 00:15:07,120
evolve independently

00:15:05,040 --> 00:15:08,160
and only a compositor crash takes the

00:15:07,120 --> 00:15:11,360
session down all

00:15:08,160 --> 00:15:13,040
other components are restartable

00:15:11,360 --> 00:15:14,399
um here's the screenshot from an actual

00:15:13,040 --> 00:15:18,320
device so

00:15:14,399 --> 00:15:20,240
on on the very left you see the

00:15:18,320 --> 00:15:21,600
the application launcher with some

00:15:20,240 --> 00:15:23,120
favorites over here and all the other

00:15:21,600 --> 00:15:26,800
apps below that

00:15:23,120 --> 00:15:30,160
um you see a running application like

00:15:26,800 --> 00:15:30,160
here and um

00:15:30,720 --> 00:15:34,560
this is the quick settings so you have

00:15:32,959 --> 00:15:35,920
quick access to the wi-fi settings it

00:15:34,560 --> 00:15:37,279
also has some more details like the

00:15:35,920 --> 00:15:38,160
wi-fi network and all these kind of

00:15:37,279 --> 00:15:40,959
things

00:15:38,160 --> 00:15:41,519
um quick access to the music player

00:15:40,959 --> 00:15:42,880
another

00:15:41,519 --> 00:15:44,639
on the right side you see a running

00:15:42,880 --> 00:15:47,920
application which is in this case the

00:15:44,639 --> 00:15:48,720
terminal and um see the on screen

00:15:47,920 --> 00:15:51,440
keyboard for

00:15:48,720 --> 00:15:51,440
for the input

00:15:53,360 --> 00:15:57,279
finally at the bottom of the stack are

00:15:55,279 --> 00:15:58,480
the linux kernel u-boot and arm trusted

00:15:57,279 --> 00:16:01,519
firmware

00:15:58,480 --> 00:16:03,279
um top of this sits um a regular glc so

00:16:01,519 --> 00:16:06,560
we don't have to worry about like

00:16:03,279 --> 00:16:07,040
bio bionic lipsy or helium as an android

00:16:06,560 --> 00:16:09,519
or

00:16:07,040 --> 00:16:11,040
similar things as already noted the

00:16:09,519 --> 00:16:12,800
kernel is like a major issue

00:16:11,040 --> 00:16:14,720
with most modern phones since they

00:16:12,800 --> 00:16:15,600
usually build off a heavily forked

00:16:14,720 --> 00:16:18,240
android kernel

00:16:15,600 --> 00:16:19,519
or board support package so is it

00:16:18,240 --> 00:16:20,320
actually possible to have a device

00:16:19,519 --> 00:16:23,040
putting plain

00:16:20,320 --> 00:16:23,759
debian in say bullseye or bullseye plus

00:16:23,040 --> 00:16:26,720
one

00:16:23,759 --> 00:16:27,199
and being actually usable um we'll see

00:16:26,720 --> 00:16:31,040
that

00:16:27,199 --> 00:16:32,959
in a moment now what is left to do

00:16:31,040 --> 00:16:34,560
first of all you might have noticed that

00:16:32,959 --> 00:16:36,320
i've not talked at all about the actual

00:16:34,560 --> 00:16:38,000
applications during the phone calls or

00:16:36,320 --> 00:16:39,279
the sms handling

00:16:38,000 --> 00:16:41,040
um that's mostly due to the time

00:16:39,279 --> 00:16:42,240
constraints of this talk so calls and

00:16:41,040 --> 00:16:43,759
chatty how they are named

00:16:42,240 --> 00:16:45,600
are doing that job pretty well but

00:16:43,759 --> 00:16:46,160
there's certainly also lots of things

00:16:45,600 --> 00:16:48,800
that

00:16:46,160 --> 00:16:50,800
could be added for example mms support

00:16:48,800 --> 00:16:52,480
or similar things

00:16:50,800 --> 00:16:54,320
what we also obviously need in this

00:16:52,480 --> 00:16:55,839
stack is a lot of polishing

00:16:54,320 --> 00:16:57,360
so we want to improve gesture support in

00:16:55,839 --> 00:16:59,759
the shell

00:16:57,360 --> 00:17:00,399
and we want to without some flickering

00:16:59,759 --> 00:17:03,040
when hiding

00:17:00,399 --> 00:17:03,600
and unhiding the the on-screen keyboard

00:17:03,040 --> 00:17:05,679
um

00:17:03,600 --> 00:17:07,919
we need to improve on exhale and support

00:17:05,679 --> 00:17:09,199
for convergence so x 11 apps have a

00:17:07,919 --> 00:17:12,240
chance of working as well as

00:17:09,199 --> 00:17:13,439
well and apps do and um we need to

00:17:12,240 --> 00:17:16,720
figure out desktop

00:17:13,439 --> 00:17:18,640
versus mobile so currently if you

00:17:16,720 --> 00:17:19,280
install an application it puts a desktop

00:17:18,640 --> 00:17:22,240
file there

00:17:19,280 --> 00:17:23,760
and it will be always in your menu um

00:17:22,240 --> 00:17:24,400
independent of the screen size and if

00:17:23,760 --> 00:17:26,880
the

00:17:24,400 --> 00:17:27,839
application can actually fit the screen

00:17:26,880 --> 00:17:29,600
or not so if you

00:17:27,839 --> 00:17:32,400
install for example keycard it will

00:17:29,600 --> 00:17:34,000
never fit the phone screen

00:17:32,400 --> 00:17:36,080
you can scale it down but then it will

00:17:34,000 --> 00:17:38,240
become pretty much unusable so you

00:17:36,080 --> 00:17:40,799
usually want to hide it by default

00:17:38,240 --> 00:17:42,320
in a mobile setting but once you connect

00:17:40,799 --> 00:17:44,720
an external monitor

00:17:42,320 --> 00:17:46,400
you wanna see it in the menu and start

00:17:44,720 --> 00:17:48,240
it as usual

00:17:46,400 --> 00:17:49,840
that's something where we have to come

00:17:48,240 --> 00:17:52,480
up with an extension to the desktop file

00:17:49,840 --> 00:17:55,039
to something similar

00:17:52,480 --> 00:17:55,840
but i think we have enough in place to

00:17:55,039 --> 00:17:59,520
go

00:17:55,840 --> 00:18:01,120
back by back now so as a summary

00:17:59,520 --> 00:18:02,799
overall we're pretty close to regular

00:18:01,120 --> 00:18:04,559
gnome linux system

00:18:02,799 --> 00:18:06,320
this allows us to use the patterns known

00:18:04,559 --> 00:18:07,120
there and inherit the stability of the

00:18:06,320 --> 00:18:08,720
stack

00:18:07,120 --> 00:18:10,640
um the above is supposed to work on

00:18:08,720 --> 00:18:13,120
mobile and desktop

00:18:10,640 --> 00:18:14,080
currently focusing on mobile and the

00:18:13,120 --> 00:18:15,760
idea is to extend

00:18:14,080 --> 00:18:18,400
existing programs and services when

00:18:15,760 --> 00:18:20,400
available rather than rewriting from

00:18:18,400 --> 00:18:29,840
scratch

00:18:20,400 --> 00:18:29,840
so what is the state in debian

00:18:32,320 --> 00:18:35,520
so while the pentium double roots

00:18:34,880 --> 00:18:37,919
libraries

00:18:35,520 --> 00:18:39,600
were in debian since some time the whole

00:18:37,919 --> 00:18:41,360
packaging effort got a major boost when

00:18:39,600 --> 00:18:43,919
the mobian project started

00:18:41,360 --> 00:18:46,720
i'll explain some more what mobian is in

00:18:43,919 --> 00:18:50,720
a couple of minutes

00:18:46,720 --> 00:18:53,280
since then many parts of this deck

00:18:50,720 --> 00:18:54,720
went into testing and unstable some more

00:18:53,280 --> 00:18:57,280
are sitting in you

00:18:54,720 --> 00:18:58,880
so um we have the pandy we have fosh we

00:18:57,280 --> 00:19:01,200
have fog the compositor we have double

00:18:58,880 --> 00:19:04,080
roots we have feedback d

00:19:01,200 --> 00:19:05,760
and um many thanks to arnold nicola and

00:19:04,080 --> 00:19:07,440
evangelos for this

00:19:05,760 --> 00:19:09,200
most notably missing at the moment is

00:19:07,440 --> 00:19:10,799
the on-screen keyboard which is

00:19:09,200 --> 00:19:13,440
currently blocking on the rust

00:19:10,799 --> 00:19:16,480
dependency and also the calls and

00:19:13,440 --> 00:19:20,640
sms applications are currently in new

00:19:16,480 --> 00:19:22,640
um and need to be processed genome 338

00:19:20,640 --> 00:19:24,080
will be bring in more adaptive

00:19:22,640 --> 00:19:25,840
application

00:19:24,080 --> 00:19:28,080
and the gnome team is currently

00:19:25,840 --> 00:19:31,520
preparing that in experimental

00:19:28,080 --> 00:19:34,799
which is totally great

00:19:31,520 --> 00:19:38,000
so what is left to do

00:19:34,799 --> 00:19:41,039
we have some apps that

00:19:38,000 --> 00:19:41,520
have non-mainlineable patches because

00:19:41,039 --> 00:19:43,760
they

00:19:41,520 --> 00:19:44,720
basically make the app fit a small

00:19:43,760 --> 00:19:47,760
screen but

00:19:44,720 --> 00:19:50,640
break some behavior on a large screen

00:19:47,760 --> 00:19:52,799
and we have some gpd case patches which

00:19:50,640 --> 00:19:56,080
we need to um worry about

00:19:52,799 --> 00:19:58,000
um they improve working on on mobile

00:19:56,080 --> 00:20:00,880
like making the fight user adaptive or

00:19:58,000 --> 00:20:01,919
making the about dialog adaptive but um

00:20:00,880 --> 00:20:04,400
they also break the

00:20:01,919 --> 00:20:06,159
the desktop use case that is not so much

00:20:04,400 --> 00:20:08,559
of a problem at the moment um

00:20:06,159 --> 00:20:10,240
for mobile focused downstreams of debian

00:20:08,559 --> 00:20:13,360
but of course it is a problem

00:20:10,240 --> 00:20:14,000
um for debian itself that needs to be

00:20:13,360 --> 00:20:15,919
fixed

00:20:14,000 --> 00:20:17,600
um the path here actually at the moment

00:20:15,919 --> 00:20:19,840
is kind of like to try to mainline

00:20:17,600 --> 00:20:22,799
what is mainlineable into gtk3 which is

00:20:19,840 --> 00:20:25,440
pretty much frozen fix things for gtk4

00:20:22,799 --> 00:20:26,559
and make the rest toggleable and then

00:20:25,440 --> 00:20:29,280
check with the gate

00:20:26,559 --> 00:20:32,640
with a gnome team at some point if it is

00:20:29,280 --> 00:20:32,640
if that is workable for debian

00:20:32,840 --> 00:20:38,880
um also as a to do

00:20:36,960 --> 00:20:40,799
we obviously need a functional kernel

00:20:38,880 --> 00:20:43,840
u-boot and

00:20:40,799 --> 00:20:43,840
untrusted firmware

00:20:45,280 --> 00:20:52,159
so is this realistic um i

00:20:48,880 --> 00:20:52,159
pulled out some of the

00:20:52,320 --> 00:20:56,720
libra five numbers to see

00:20:55,360 --> 00:20:58,880
where the whole thing is going and if

00:20:56,720 --> 00:21:01,039
it's possible to have like a mainline

00:20:58,880 --> 00:21:02,480
kernel that is supported by by debian in

00:21:01,039 --> 00:21:05,600
bullseye or

00:21:02,480 --> 00:21:08,640
um both i plus one

00:21:05,600 --> 00:21:11,760
so um in the table above i've um

00:21:08,640 --> 00:21:13,280
i've looked at the kernel sources and um

00:21:11,760 --> 00:21:14,960
the the diff from the library five

00:21:13,280 --> 00:21:16,720
kernel to the mainline kernel

00:21:14,960 --> 00:21:18,640
and i've excluded changes to board

00:21:16,720 --> 00:21:19,679
configurations device tree and occlude

00:21:18,640 --> 00:21:21,600
directories

00:21:19,679 --> 00:21:23,120
for one to make the diving a little bit

00:21:21,600 --> 00:21:26,159
simpler and

00:21:23,120 --> 00:21:28,000
um since if the device drivers itself

00:21:26,159 --> 00:21:30,720
are in basically the includes are just

00:21:28,000 --> 00:21:32,400
something that that goes along with them

00:21:30,720 --> 00:21:33,919
so um when we started to look into the

00:21:32,400 --> 00:21:37,120
imx 8 support

00:21:33,919 --> 00:21:40,320
that was in mid 2018 um and the next

00:21:37,120 --> 00:21:43,840
journal release would be 4.18

00:21:40,320 --> 00:21:44,240
so we took about 100k lines of patches

00:21:43,840 --> 00:21:47,840
from

00:21:44,240 --> 00:21:50,320
an xp's older board support package

00:21:47,840 --> 00:21:52,400
so basically the the code that ship that

00:21:50,320 --> 00:21:54,480
they ship in their evaluation kit

00:21:52,400 --> 00:21:56,320
and um upgrade it to current kernel

00:21:54,480 --> 00:21:59,520
interfaces and edit support

00:21:56,320 --> 00:22:00,559
um for our device and the result was

00:21:59,520 --> 00:22:03,200
actually like a

00:22:00,559 --> 00:22:03,679
real franken kernel and the delta was

00:22:03,200 --> 00:22:07,360
like

00:22:03,679 --> 00:22:08,799
just frightening um we then

00:22:07,360 --> 00:22:10,400
just started to cut out things we don't

00:22:08,799 --> 00:22:12,559
necessarily need at the moment

00:22:10,400 --> 00:22:13,840
so like the video acceleration or the

00:22:12,559 --> 00:22:16,960
camera support

00:22:13,840 --> 00:22:19,600
and um rebased the patches

00:22:16,960 --> 00:22:21,840
on patches posted by lucas um for

00:22:19,600 --> 00:22:24,480
initial imx mainland support

00:22:21,840 --> 00:22:25,679
and also started to rework things to

00:22:24,480 --> 00:22:29,120
maintainable form

00:22:25,679 --> 00:22:31,200
and also started submitting first um

00:22:29,120 --> 00:22:33,120
bits upstream and thankfully we weren't

00:22:31,200 --> 00:22:33,679
the only ones but there were more people

00:22:33,120 --> 00:22:36,799
working on

00:22:33,679 --> 00:22:37,360
imax 8 upstream support and so um the

00:22:36,799 --> 00:22:41,120
delta

00:22:37,360 --> 00:22:44,320
shrunk quite a bit um with 5.3

00:22:41,120 --> 00:22:48,320
so there were only like um 38 000 lines

00:22:44,320 --> 00:22:52,159
of diff left between like the five

00:22:48,320 --> 00:22:55,200
kernel tree and the mainland kernel tree

00:22:52,159 --> 00:22:57,360
um with 5.7 this

00:22:55,200 --> 00:22:58,559
reduced even further especially the

00:22:57,360 --> 00:22:59,919
number of files changed

00:22:58,559 --> 00:23:01,840
which is kind of like an indicator how

00:22:59,919 --> 00:23:05,039
many device drivers need fixes

00:23:01,840 --> 00:23:08,240
um reduced quite a lot and um

00:23:05,039 --> 00:23:09,039
we there went down to about 35 000 lines

00:23:08,240 --> 00:23:11,679
of code

00:23:09,039 --> 00:23:13,120
to the my mainland kernel that still

00:23:11,679 --> 00:23:16,159
looks like a lot

00:23:13,120 --> 00:23:17,600
so um i broke down the numbers a little

00:23:16,159 --> 00:23:20,799
bit more

00:23:17,600 --> 00:23:21,200
and of the 35 000 lines 25 000 lines of

00:23:20,799 --> 00:23:24,000
code

00:23:21,200 --> 00:23:25,039
are the wi-fi driver and this one

00:23:24,000 --> 00:23:27,520
thankfully um

00:23:25,039 --> 00:23:28,880
has a replacement in the mainline linux

00:23:27,520 --> 00:23:31,679
kernel already

00:23:28,880 --> 00:23:34,320
um unfortunately there's some bugs with

00:23:31,679 --> 00:23:35,280
mac randomization so we're not switching

00:23:34,320 --> 00:23:38,320
to the

00:23:35,280 --> 00:23:38,960
mainline driver just yet but soonish we

00:23:38,320 --> 00:23:40,720
can just

00:23:38,960 --> 00:23:42,080
drop the whole 20 000 lines of that

00:23:40,720 --> 00:23:46,080
driver and

00:23:42,080 --> 00:23:46,720
use use the main one the dcss which is

00:23:46,080 --> 00:23:48,559
one of the

00:23:46,720 --> 00:23:50,159
display controllers in the library 5 the

00:23:48,559 --> 00:23:51,840
one we're using

00:23:50,159 --> 00:23:53,840
to drive external displays not for the

00:23:51,840 --> 00:23:56,240
internal one

00:23:53,840 --> 00:23:58,880
um it's very close to being merged and

00:23:56,240 --> 00:24:00,799
this is work done by nxp itself

00:23:58,880 --> 00:24:02,320
the mhtp driver is basically the

00:24:00,799 --> 00:24:05,360
displayport output side

00:24:02,320 --> 00:24:09,200
of that thing and um there were also

00:24:05,360 --> 00:24:12,080
patches posted to the kernel list and

00:24:09,200 --> 00:24:13,600
but they need some more work because

00:24:12,080 --> 00:24:16,400
they need some more work before

00:24:13,600 --> 00:24:17,279
they can be applied then the rest of

00:24:16,400 --> 00:24:19,679
this list

00:24:17,279 --> 00:24:22,000
um like the libra fibers lcd panel

00:24:19,679 --> 00:24:22,960
driver or the dsi host controller are

00:24:22,000 --> 00:24:26,240
either already

00:24:22,960 --> 00:24:28,240
part of 5.8 or will be part of the 5.10

00:24:26,240 --> 00:24:30,320
so once this is out of the way this

00:24:28,240 --> 00:24:30,960
leaves us with about like 2 000 lines of

00:24:30,320 --> 00:24:33,200
code

00:24:30,960 --> 00:24:35,520
um as a delta to the to the mainline

00:24:33,200 --> 00:24:35,520
kernel

00:24:36,240 --> 00:24:39,760
which is not that much um by kernel

00:24:38,720 --> 00:24:42,320
standards

00:24:39,760 --> 00:24:43,600
the five device tree is also part of

00:24:42,320 --> 00:24:46,799
linux next already

00:24:43,600 --> 00:24:48,480
this will see further patches to enable

00:24:46,799 --> 00:24:50,400
more hardware um in the upcoming

00:24:48,480 --> 00:24:52,880
releases

00:24:50,400 --> 00:24:54,480
so while this will likely not work out

00:24:52,880 --> 00:24:57,440
of the box in bullseye

00:24:54,480 --> 00:24:58,000
it looks doable in the bomb cycle so

00:24:57,440 --> 00:25:01,840
we're

00:24:58,000 --> 00:25:01,840
not too far off

00:25:04,640 --> 00:25:09,600
um we've upstreamed about like 125

00:25:07,760 --> 00:25:11,039
patches so far which i don't think is

00:25:09,600 --> 00:25:15,120
which is not that bad

00:25:11,039 --> 00:25:18,559
um bigger to do is you boot and atf

00:25:15,120 --> 00:25:21,279
we have patches for mainland

00:25:18,559 --> 00:25:21,760
u-boot which which we um which we need

00:25:21,279 --> 00:25:24,159
to

00:25:21,760 --> 00:25:25,919
feed upstream this is but this is main

00:25:24,159 --> 00:25:28,720
mostly board support

00:25:25,919 --> 00:25:29,200
and so i don't hope that there's like um

00:25:28,720 --> 00:25:31,600
much

00:25:29,200 --> 00:25:32,320
controversy with atf it's a little bit

00:25:31,600 --> 00:25:35,520
different

00:25:32,320 --> 00:25:37,039
um nxp is using an older branch there

00:25:35,520 --> 00:25:38,720
for some power management features and

00:25:37,039 --> 00:25:40,880
that will require some more work to

00:25:38,720 --> 00:25:42,080
to forward upstream and and to get

00:25:40,880 --> 00:25:45,679
integrated but it

00:25:42,080 --> 00:25:45,679
still looks pretty much doable

00:25:48,320 --> 00:25:52,880
so further to do's on the debian side is

00:25:51,200 --> 00:25:54,840
we obviously need some

00:25:52,880 --> 00:25:56,559
official installer and and image

00:25:54,840 --> 00:25:58,159
generation

00:25:56,559 --> 00:25:59,840
we need way better out of the box

00:25:58,159 --> 00:26:01,520
support so

00:25:59,840 --> 00:26:03,919
per device you'd have rules that make

00:26:01,520 --> 00:26:05,760
sure um devices suspend quickly to save

00:26:03,919 --> 00:26:08,799
the maximum amount of power

00:26:05,760 --> 00:26:09,360
we need some mobile tweaks um package

00:26:08,799 --> 00:26:11,919
like

00:26:09,360 --> 00:26:12,640
using a mobile browser agent by default

00:26:11,919 --> 00:26:14,000
using

00:26:12,640 --> 00:26:15,919
faster screen blank and these kind of

00:26:14,000 --> 00:26:18,159
things um

00:26:15,919 --> 00:26:19,039
this will be part of parts of this will

00:26:18,159 --> 00:26:22,400
be um

00:26:19,039 --> 00:26:24,640
part of the next fresh release um

00:26:22,400 --> 00:26:26,240
and we need a meter package and task to

00:26:24,640 --> 00:26:27,840
pull in all the necessary components

00:26:26,240 --> 00:26:29,520
i've prepared something for that on

00:26:27,840 --> 00:26:30,799
salsa already

00:26:29,520 --> 00:26:33,919
but there's currently some naming

00:26:30,799 --> 00:26:35,520
discussion going on but once that is in

00:26:33,919 --> 00:26:39,039
installing a default set of packages

00:26:35,520 --> 00:26:42,559
will will become much simpler

00:26:39,039 --> 00:26:44,720
so but what if you want to run

00:26:42,559 --> 00:26:47,279
a distribution very close to debian

00:26:44,720 --> 00:26:47,279
right now

00:26:51,360 --> 00:26:54,559
there's mobion mobius the debian

00:26:53,120 --> 00:26:56,960
derivative that aims to make

00:26:54,559 --> 00:26:58,480
mobile debian possible right now it

00:26:56,960 --> 00:26:58,960
currently builds images for the pine

00:26:58,480 --> 00:27:00,159
phone

00:26:58,960 --> 00:27:02,400
and it also wants to support the

00:27:00,159 --> 00:27:04,400
lieberman five later on the project

00:27:02,400 --> 00:27:06,000
isn't was also a primary driver in

00:27:04,400 --> 00:27:07,600
getting the gnome for space stack i

00:27:06,000 --> 00:27:10,559
described the buff into debian

00:27:07,600 --> 00:27:11,200
as it runs that by default for more

00:27:10,559 --> 00:27:13,840
details on

00:27:11,200 --> 00:27:15,760
mobian crno's talk from this year's

00:27:13,840 --> 00:27:18,799
online minidab conf

00:27:15,760 --> 00:27:20,880
there's a link at the end of the slides

00:27:18,799 --> 00:27:21,919
and then there's purest of course

00:27:20,880 --> 00:27:23,600
developed by purism

00:27:21,919 --> 00:27:24,880
where large parts of the stack i

00:27:23,600 --> 00:27:26,159
described above are currently being

00:27:24,880 --> 00:27:28,080
developed upstream

00:27:26,159 --> 00:27:29,520
we built images for the library five but

00:27:28,080 --> 00:27:31,360
there's also people running these on the

00:27:29,520 --> 00:27:32,960
pine phone by swapping out you would and

00:27:31,360 --> 00:27:35,200
kernel

00:27:32,960 --> 00:27:36,880
and of course there's also not debian

00:27:35,200 --> 00:27:38,880
based phone distributions

00:27:36,880 --> 00:27:41,520
like post market os which are worth to

00:27:38,880 --> 00:27:41,520
check out too

00:27:43,279 --> 00:27:48,080
so how to help um you can help packaging

00:27:47,120 --> 00:27:50,720
other mobile stacks

00:27:48,080 --> 00:27:53,840
there's uv ports there's plasma mobile

00:27:50,720 --> 00:27:56,880
and more that could be in debian

00:27:53,840 --> 00:27:58,640
you can join debian on mobile that's the

00:27:56,880 --> 00:27:59,840
salsa group that gathers mobile related

00:27:58,640 --> 00:28:02,159
packages

00:27:59,840 --> 00:28:03,760
um if they don't fit into language

00:28:02,159 --> 00:28:05,279
specific groups like the python group or

00:28:03,760 --> 00:28:06,960
the rust group then they go there but

00:28:05,279 --> 00:28:10,640
all the rest we kind of like gather at

00:28:06,960 --> 00:28:13,679
you know mobile at the moment um

00:28:10,640 --> 00:28:16,320
you can join the mobile project or

00:28:13,679 --> 00:28:17,440
pures you can help making more apps

00:28:16,320 --> 00:28:20,640
adaptive

00:28:17,440 --> 00:28:22,159
one up at the time so we

00:28:20,640 --> 00:28:24,799
a lot of them are around that already

00:28:22,159 --> 00:28:27,440
have patches that need to clean up and

00:28:24,799 --> 00:28:30,000
move upstream and there's others that

00:28:27,440 --> 00:28:32,159
still want to be patched

00:28:30,000 --> 00:28:33,200
or you can just package more apps so if

00:28:32,159 --> 00:28:35,360
you join the prs

00:28:33,200 --> 00:28:37,039
or the mobian channels you see new apps

00:28:35,360 --> 00:28:39,679
announcements which would be great to

00:28:37,039 --> 00:28:39,679
have in deviant

00:28:41,279 --> 00:28:45,840
so to sum up

00:28:47,039 --> 00:28:50,399
and at least from my perspective debian

00:28:49,120 --> 00:28:52,240
on mobile devices is

00:28:50,399 --> 00:28:53,760
becoming a thing in debian and it's

00:28:52,240 --> 00:28:58,240
becoming suitable for

00:28:53,760 --> 00:29:02,559
everyday usage um

00:28:58,240 --> 00:29:02,559
here's the links i talked about

00:29:04,960 --> 00:29:08,720
here's the links to here's a link to the

00:29:06,720 --> 00:29:11,919
slides

00:29:08,720 --> 00:29:13,039
and if you want to provide feedback then

00:29:11,919 --> 00:29:16,159
um

00:29:13,039 --> 00:29:19,760
just mail me or reach me on the

00:29:16,159 --> 00:29:23,760
fetiverse at agx atleaver1 elibram.one

00:29:19,760 --> 00:29:25,520
or reach out on oftc

00:29:23,760 --> 00:29:27,200
thank you very much for your attention

00:29:25,520 --> 00:29:29,840
and i'm happy to take

00:29:27,200 --> 00:29:29,840
any questions

00:29:30,320 --> 00:29:36,080
thank you guido for the talk so we have

00:29:33,039 --> 00:29:41,360
a quite a few questions on the ether pad

00:29:36,080 --> 00:29:44,720
so let's begin dido

00:29:41,360 --> 00:29:46,240
okay let's try so uh let's start with

00:29:44,720 --> 00:29:49,120
the first question which says

00:29:46,240 --> 00:29:49,600
uh which hardware does it run on so it

00:29:49,120 --> 00:29:52,960
says

00:29:49,600 --> 00:29:55,520
does it run an open moco free runner

00:29:52,960 --> 00:29:56,480
does it run on iphone purism librium

00:29:55,520 --> 00:29:59,440
five nexus

00:29:56,480 --> 00:30:02,720
pixel and have you tried python so i

00:29:59,440 --> 00:30:02,720
have just combined the questions

00:30:04,640 --> 00:30:09,840
um yeah so for the questions from the

00:30:10,080 --> 00:30:14,880
uh you can just i can repeat the

00:30:12,080 --> 00:30:14,880
question if you want

00:30:16,399 --> 00:30:21,679
yeah so um regarding supported hardware

00:30:20,000 --> 00:30:23,919
it's basically

00:30:21,679 --> 00:30:26,080
when you can can run a mainline kernel

00:30:23,919 --> 00:30:27,360
and do some opengl then you can

00:30:26,080 --> 00:30:29,760
should basically be able to run the

00:30:27,360 --> 00:30:31,679
stack so once the compositor runs

00:30:29,760 --> 00:30:32,960
and the shell runs then things should

00:30:31,679 --> 00:30:36,159
work um hardware

00:30:32,960 --> 00:30:38,640
expectations aren't um that dramatic

00:30:36,159 --> 00:30:39,200
and if the modem is supported by a motor

00:30:38,640 --> 00:30:41,120
manager

00:30:39,200 --> 00:30:42,240
um with the different interfaces then

00:30:41,120 --> 00:30:46,640
you should also be able to

00:30:42,240 --> 00:30:48,640
send sms or do phone calls so um

00:30:46,640 --> 00:30:51,039
so it was definitely tested successfully

00:30:48,640 --> 00:30:54,159
on the lieberman five obviously which is

00:30:51,039 --> 00:30:56,080
the device i'm using um

00:30:54,159 --> 00:30:57,279
it's voice yes it was tested on the pine

00:30:56,080 --> 00:30:59,440
phone um

00:30:57,279 --> 00:31:01,360
i think it should run without any major

00:30:59,440 --> 00:31:04,080
problems on a recent raspberry pi if you

00:31:01,360 --> 00:31:07,360
have a gsm modem attached um

00:31:04,080 --> 00:31:09,360
i for the samsung devices and and others

00:31:07,360 --> 00:31:10,559
it really depends on the mainline kernel

00:31:09,360 --> 00:31:13,519
support

00:31:10,559 --> 00:31:15,600
oh cool uh so let's move on to the

00:31:13,519 --> 00:31:19,200
second question which says

00:31:15,600 --> 00:31:22,000
uh can your phone interact with the

00:31:19,200 --> 00:31:22,640
icon id or any similar framework in the

00:31:22,000 --> 00:31:26,480
debian

00:31:22,640 --> 00:31:29,039
over a different machine um so

00:31:26,480 --> 00:31:30,960
and i'd say not at the moment um as far

00:31:29,039 --> 00:31:33,519
as i know

00:31:30,960 --> 00:31:34,399
um but you can basically just ssh into

00:31:33,519 --> 00:31:36,000
the device so

00:31:34,399 --> 00:31:37,679
um you have like quite some

00:31:36,000 --> 00:31:39,519
possibilities but for a canary like for

00:31:37,679 --> 00:31:41,679
the nice desktop integration where you

00:31:39,519 --> 00:31:43,039
plug in your phone and it um kind of

00:31:41,679 --> 00:31:44,320
like gives you the contacts and other

00:31:43,039 --> 00:31:46,000
stuff right away there's more work

00:31:44,320 --> 00:31:49,600
needed obviously

00:31:46,000 --> 00:31:53,120
okay so the next question is about

00:31:49,600 --> 00:31:53,679
sms and mms so it says do you have a way

00:31:53,120 --> 00:31:56,880
to

00:31:53,679 --> 00:31:59,840
export and import your sms and mms

00:31:56,880 --> 00:32:00,399
into your regular debian system yeah so

00:31:59,840 --> 00:32:02,720
there's

00:32:00,399 --> 00:32:04,240
two things to that i think um one is you

00:32:02,720 --> 00:32:05,760
can basically run the same app on your

00:32:04,240 --> 00:32:07,039
desktop then you run on your phone so

00:32:05,760 --> 00:32:08,559
you basically copy over

00:32:07,039 --> 00:32:10,399
the folder that has the things and then

00:32:08,559 --> 00:32:12,159
you have the things available

00:32:10,399 --> 00:32:14,320
and the other thing is it's in an sqlite

00:32:12,159 --> 00:32:17,440
database the sms so you can also use

00:32:14,320 --> 00:32:18,080
export means there but there's and i

00:32:17,440 --> 00:32:20,320
think people

00:32:18,080 --> 00:32:21,840
also wrote export scripts um already but

00:32:20,320 --> 00:32:23,200
there's no tool in debian at the moment

00:32:21,840 --> 00:32:26,480
that handles that

00:32:23,200 --> 00:32:29,840
so that's nice so again

00:32:26,480 --> 00:32:31,600
uh does your phone support making calls

00:32:29,840 --> 00:32:34,240
directly from the contact app

00:32:31,600 --> 00:32:36,480
so anything about the contact app yeah

00:32:34,240 --> 00:32:37,600
so um we have patches for gnome contacts

00:32:36,480 --> 00:32:39,279
that do that so you

00:32:37,600 --> 00:32:41,679
basically just bring up a contact and

00:32:39,279 --> 00:32:43,840
then call out

00:32:41,679 --> 00:32:45,120
these are not an upstream gnome yet as

00:32:43,840 --> 00:32:45,679
far as i know so that's one of the

00:32:45,120 --> 00:32:47,519
topics

00:32:45,679 --> 00:32:49,600
i or one of the points i mentioned

00:32:47,519 --> 00:32:50,799
earlier that we have patches that need

00:32:49,600 --> 00:32:54,000
to go upstream

00:32:50,799 --> 00:32:58,000
and i think that's among them okay

00:32:54,000 --> 00:33:00,799
that's cool uh so another question basic

00:32:58,000 --> 00:33:02,080
i believe it merges with the hardware

00:33:00,799 --> 00:33:04,640
question but i'll say

00:33:02,080 --> 00:33:06,240
it says does it support voice over lte

00:33:04,640 --> 00:33:08,399
calls

00:33:06,240 --> 00:33:09,760
not yet that's there's no support i

00:33:08,399 --> 00:33:11,279
think on um

00:33:09,760 --> 00:33:13,039
in motor manager for that at the moment

00:33:11,279 --> 00:33:15,919
and that needs needs to be added

00:33:13,039 --> 00:33:17,120
yeah so the next question is about ecm i

00:33:15,919 --> 00:33:19,760
believe

00:33:17,120 --> 00:33:21,279
yeah yeah so i i read that i have no

00:33:19,760 --> 00:33:24,559
idea how easy works so i

00:33:21,279 --> 00:33:27,760
can't answer sorry so we'll

00:33:24,559 --> 00:33:30,480
answer that a little later so it says

00:33:27,760 --> 00:33:32,640
uh can a regular debian running device

00:33:30,480 --> 00:33:34,159
use the phone as a gateway to the lte

00:33:32,640 --> 00:33:37,440
network

00:33:34,159 --> 00:33:41,120
to do call on plasma glow map using

00:33:37,440 --> 00:33:44,399
send new ssd commands from send messages

00:33:41,120 --> 00:33:47,440
and get pws alerts yes

00:33:44,399 --> 00:33:49,840
support so you can

00:33:47,440 --> 00:33:51,200
definitely do ussd with the device so

00:33:49,840 --> 00:33:53,840
we're doing this for like

00:33:51,200 --> 00:33:55,360
i don't know um balance account um if

00:33:53,840 --> 00:33:57,760
you have a pre-k card to top up the

00:33:55,360 --> 00:33:59,919
balance and all these kind of things

00:33:57,760 --> 00:34:01,039
but you can't currently do that directly

00:33:59,919 --> 00:34:03,279
from your laptop

00:34:01,039 --> 00:34:04,960
so you basically would either ssh into

00:34:03,279 --> 00:34:06,159
the device or forward the session at the

00:34:04,960 --> 00:34:09,599
moment

00:34:06,159 --> 00:34:12,320
oh that's cool uh so

00:34:09,599 --> 00:34:12,800
another question says will regular gnome

00:34:12,320 --> 00:34:15,200
have an

00:34:12,800 --> 00:34:16,240
app to send and receive sms calls

00:34:15,200 --> 00:34:20,879
natively

00:34:16,240 --> 00:34:24,000
and store them locally on the device um

00:34:20,879 --> 00:34:25,280
so there is some talk what happens to

00:34:24,000 --> 00:34:27,119
chatty so if it's going to go to

00:34:25,280 --> 00:34:27,919
upstream gnome or if it's going to stay

00:34:27,119 --> 00:34:31,040
outside that's

00:34:27,919 --> 00:34:32,480
basically not totally decided yet um i

00:34:31,040 --> 00:34:35,839
hope that it kind of like gets moved to

00:34:32,480 --> 00:34:35,839
gnome at some point

00:34:35,919 --> 00:34:40,639
so uh does the phone expose lte 3g modem

00:34:38,960 --> 00:34:43,679
internal command set

00:34:40,639 --> 00:34:44,240
for instance so you can use socad to

00:34:43,679 --> 00:34:47,599
send an

00:34:44,240 --> 00:34:50,800
sms over slash dev dt by

00:34:47,599 --> 00:34:53,919
xsx um so you can

00:34:50,800 --> 00:34:54,480
um access the 80 commands on the device

00:34:53,919 --> 00:34:55,919
so if you

00:34:54,480 --> 00:34:57,599
kind of like connect into it then you

00:34:55,919 --> 00:35:00,640
can do that

00:34:57,599 --> 00:35:02,960
um but you can it doesn't

00:35:00,640 --> 00:35:04,560
kind of like forward the device again

00:35:02,960 --> 00:35:05,440
like you connected via usb to your

00:35:04,560 --> 00:35:07,680
laptop and the

00:35:05,440 --> 00:35:09,119
modem directly it's not forwarded yet um

00:35:07,680 --> 00:35:10,320
there would be like some usb gadget

00:35:09,119 --> 00:35:13,760
support or something like that

00:35:10,320 --> 00:35:15,599
um needed and i just noticed um

00:35:13,760 --> 00:35:17,520
that i didn't mention i didn't answer

00:35:15,599 --> 00:35:20,560
the pws alerts question

00:35:17,520 --> 00:35:21,920
um so pws alerts aren't supported yet

00:35:20,560 --> 00:35:22,640
either i just had a look at that

00:35:21,920 --> 00:35:25,839
yesterday

00:35:22,640 --> 00:35:27,440
um or the day before that um and there's

00:35:25,839 --> 00:35:28,079
some code missing in modem manager but

00:35:27,440 --> 00:35:30,560
that's

00:35:28,079 --> 00:35:31,920
not terribly complicated but it's still

00:35:30,560 --> 00:35:35,680
work that needs to be done

00:35:31,920 --> 00:35:36,320
okay so the next question with the wink

00:35:35,680 --> 00:35:39,599
says

00:35:36,320 --> 00:35:43,040
system mdr init um is

00:35:39,599 --> 00:35:45,280
systemd but since it's debian

00:35:43,040 --> 00:35:46,320
you can make it work within it um as

00:35:45,280 --> 00:35:49,200
well but we are

00:35:46,320 --> 00:35:49,920
currently using and testing systemd but

00:35:49,200 --> 00:35:51,520
um i

00:35:49,920 --> 00:35:53,200
can't currently see a reason why init

00:35:51,520 --> 00:35:56,880
wouldn't work

00:35:53,200 --> 00:35:58,000
oh that's good uh so are the battery

00:35:56,880 --> 00:36:00,560
charging firmware

00:35:58,000 --> 00:36:02,320
is open for the debian xs or is that a

00:36:00,560 --> 00:36:05,599
closed box

00:36:02,320 --> 00:36:07,119
um i'm not so i there's no firmware in

00:36:05,599 --> 00:36:10,880
the battery charger so

00:36:07,119 --> 00:36:12,560
um at least on the library so um i

00:36:10,880 --> 00:36:14,640
think that's so that doesn't look like a

00:36:12,560 --> 00:36:17,440
closed box

00:36:14,640 --> 00:36:19,200
there is um the usbc controller and

00:36:17,440 --> 00:36:21,040
these usually do have firmware

00:36:19,200 --> 00:36:22,640
which interact with the charging but the

00:36:21,040 --> 00:36:23,440
charging process itself isn't a closed

00:36:22,640 --> 00:36:25,760
box you can

00:36:23,440 --> 00:36:27,359
regulate things that's chip which you

00:36:25,760 --> 00:36:30,800
can program

00:36:27,359 --> 00:36:31,920
uh so another hardware question uh can

00:36:30,800 --> 00:36:35,119
it be used with

00:36:31,920 --> 00:36:36,560
nfc and contact rape or tracking with

00:36:35,119 --> 00:36:38,560
the state run systems

00:36:36,560 --> 00:36:39,680
like it says in corona tracking system

00:36:38,560 --> 00:36:43,200
paying in the bus

00:36:39,680 --> 00:36:43,920
and stuff so usual stuff yeah so that's

00:36:43,200 --> 00:36:45,599
um nfc

00:36:43,920 --> 00:36:47,119
so on the library 5 we don't have nfc

00:36:45,599 --> 00:36:49,040
support um i

00:36:47,119 --> 00:36:50,160
don't know about other devices for sure

00:36:49,040 --> 00:36:51,920
but at least i don't know of any

00:36:50,160 --> 00:36:52,880
applications that do that at the moment

00:36:51,920 --> 00:36:56,000
so that's

00:36:52,880 --> 00:36:59,599
missing hello so work in progress

00:36:56,000 --> 00:37:03,760
so uh next is are

00:36:59,599 --> 00:37:06,960
kirigami kde apps usable on posh

00:37:03,760 --> 00:37:10,400
um it should be there were people um

00:37:06,960 --> 00:37:12,640
doing that i've not run terribly much um

00:37:10,400 --> 00:37:13,520
kde stuff myself on the phone but there

00:37:12,640 --> 00:37:15,760
were people

00:37:13,520 --> 00:37:17,520
um running these um and it should be

00:37:15,760 --> 00:37:19,200
supported so if it isn't support support

00:37:17,520 --> 00:37:21,440
we should like work on integrating that

00:37:19,200 --> 00:37:21,440
um

00:37:21,599 --> 00:37:28,000
so there is another it says

00:37:24,720 --> 00:37:31,200
is osk sdl keyboard for unlocking

00:37:28,000 --> 00:37:34,880
loops on boot in pure os

00:37:31,200 --> 00:37:37,839
so it's it's given a link also if you

00:37:34,880 --> 00:37:37,839
like to check that out

00:37:45,680 --> 00:37:49,040
oh and and no it isn't so i had a look

00:37:48,240 --> 00:37:50,880
at it and

00:37:49,040 --> 00:37:53,920
we certainly want to work on the look

00:37:50,880 --> 00:37:57,440
support um but it's not there yet

00:37:53,920 --> 00:37:57,839
so so then there is people thanking you

00:37:57,440 --> 00:37:59,760
for

00:37:57,839 --> 00:38:01,040
all the efforts on the debian mobile and

00:37:59,760 --> 00:38:04,400
the librarian five

00:38:01,040 --> 00:38:07,839
and there are many plus one for that

00:38:04,400 --> 00:38:07,839
yeah that makes you very happy

00:38:08,079 --> 00:38:11,359
so next we have a question from perry

00:38:10,320 --> 00:38:14,960
from the irc

00:38:11,359 --> 00:38:17,760
chart it says is it all interesting

00:38:14,960 --> 00:38:19,280
to support and no one phone device like

00:38:17,760 --> 00:38:21,599
n810

00:38:19,280 --> 00:38:23,520
i would love to run a more recent debian

00:38:21,599 --> 00:38:24,400
on mine with apps made for smaller

00:38:23,520 --> 00:38:27,520
screens

00:38:24,400 --> 00:38:30,079
with a smiley yeah that should work so

00:38:27,520 --> 00:38:32,079
um as long as like you have the main

00:38:30,079 --> 00:38:33,520
linux kernel as i said it works it

00:38:32,079 --> 00:38:35,920
that you might have like kind of like a

00:38:33,520 --> 00:38:36,640
modem um quick setting which is grayed

00:38:35,920 --> 00:38:38,160
out but

00:38:36,640 --> 00:38:39,680
otherwise it detects if there's a modem

00:38:38,160 --> 00:38:41,200
if there's no modem it doesn't show

00:38:39,680 --> 00:38:43,520
anything in the top bar so you can run

00:38:41,200 --> 00:38:46,880
without motion as well

00:38:43,520 --> 00:38:48,880
that's an interesting thing uh another

00:38:46,880 --> 00:38:50,320
question says is there any cooperation

00:38:48,880 --> 00:38:52,960
or plan to cooperate with

00:38:50,320 --> 00:38:55,680
google's for shacia maybe running their

00:38:52,960 --> 00:38:59,040
kernel in favor of a linux kernel

00:38:55,680 --> 00:38:59,040
um nothing that i would know of

00:38:59,119 --> 00:39:03,920
that was a quick answer uh what about

00:39:02,000 --> 00:39:04,400
android apps is there a plan to get them

00:39:03,920 --> 00:39:07,359
running

00:39:04,400 --> 00:39:09,440
here um so i know that in the mobium

00:39:07,359 --> 00:39:12,720
project people were looking at nbox for

00:39:09,440 --> 00:39:15,920
um emulating um android apps

00:39:12,720 --> 00:39:17,760
and i actually i i see that people might

00:39:15,920 --> 00:39:18,560
need some certain apps um for the daily

00:39:17,760 --> 00:39:21,119
use so this is

00:39:18,560 --> 00:39:22,880
um actually something we we want to care

00:39:21,119 --> 00:39:24,960
about

00:39:22,880 --> 00:39:27,119
it's a little bit problematic so i'd say

00:39:24,960 --> 00:39:29,440
if there is a web application then you

00:39:27,119 --> 00:39:32,160
really want to use that one so if it's

00:39:29,440 --> 00:39:34,160
like an a web page that that works then

00:39:32,160 --> 00:39:35,760
that's probably the better choice

00:39:34,160 --> 00:39:38,000
because um you

00:39:35,760 --> 00:39:39,599
otherwise get into problems quickly with

00:39:38,000 --> 00:39:40,320
google play services on all these kind

00:39:39,599 --> 00:39:42,160
of things so

00:39:40,320 --> 00:39:43,520
um it's not just like emulating the app

00:39:42,160 --> 00:39:46,560
you also need access to

00:39:43,520 --> 00:39:48,480
proprietary services um that's like a

00:39:46,560 --> 00:39:49,920
different field so i'm i'm concerned

00:39:48,480 --> 00:39:50,640
about the free software side and i try

00:39:49,920 --> 00:39:54,560
to get around

00:39:50,640 --> 00:39:57,040
without these at the moment so

00:39:54,560 --> 00:39:59,839
that's all the question we have any last

00:39:57,040 --> 00:40:02,000
thoughts before parting

00:39:59,839 --> 00:40:02,880
uh oh thank you very much um for your

00:40:02,000 --> 00:40:06,319
attention and

00:40:02,880 --> 00:40:07,280
talk to you soon thanks so thank you you

00:40:06,319 --> 00:40:10,160
do for the talk

00:40:07,280 --> 00:40:10,960
and uh phil for the behind the camera

00:40:10,160 --> 00:40:19,440
direction

00:40:10,960 --> 00:40:19,440

YouTube URL: https://www.youtube.com/watch?v=4Xm3wRrJWNw


