Title: Laniakea - An approach at making building Debian derivatives easy
Publication date: 2017-12-06
Playlist: DebConf 17
Description: 
	by Matthias Klumpp

At: DebConf17
https://debconf17.debconf.org/
Room: Rex
Scheduled start: 2017-08-07 12:30:00
Captions: 
	00:00:05,150 --> 00:00:11,760
okay so welcome this is a talk about

00:00:08,700 --> 00:00:14,430
Lana Kia a system developed to make

00:00:11,760 --> 00:00:17,760
building debian derivatives easier so

00:00:14,430 --> 00:00:20,279
first starting with what what debian

00:00:17,760 --> 00:00:22,950
derivative I'm actually building the

00:00:20,279 --> 00:00:26,279
first thing that the first actual

00:00:22,950 --> 00:00:28,950
derivative I made was tan glue which was

00:00:26,279 --> 00:00:31,200
created in 2013 to embrace technologies

00:00:28,950 --> 00:00:34,440
and also processes that weren't possible

00:00:31,200 --> 00:00:37,230
in debian at that time it uses system D

00:00:34,440 --> 00:00:39,660
which is a right now it's not it's a

00:00:37,230 --> 00:00:42,990
really boring fact but back then in 2013

00:00:39,660 --> 00:00:45,660
when we had this large system D flamewar

00:00:42,990 --> 00:00:48,690
this was actually something remarkable

00:00:45,660 --> 00:00:51,150
and we thought we just built a system

00:00:48,690 --> 00:00:53,610
based around system D in order to show

00:00:51,150 --> 00:00:57,990
how it works and give us a data point an

00:00:53,610 --> 00:01:00,090
example for debian on Anja how to how it

00:00:57,990 --> 00:01:01,890
can work in a Debian based system

00:01:00,090 --> 00:01:03,329
because back then many people were

00:01:01,890 --> 00:01:05,159
asking for example somewhere and sure

00:01:03,329 --> 00:01:08,220
how whether this is the right path to

00:01:05,159 --> 00:01:10,679
forge so yeah we we did that we also had

00:01:08,220 --> 00:01:12,509
aimed for timed releases which is

00:01:10,679 --> 00:01:15,450
difficult with a strong with a small

00:01:12,509 --> 00:01:17,460
team as later turnout and we wanted to

00:01:15,450 --> 00:01:21,389
focus on workstations and desktops

00:01:17,460 --> 00:01:23,369
mainly also one idea was to be as close

00:01:21,389 --> 00:01:25,289
to upstream and Debian as possible which

00:01:23,369 --> 00:01:27,359
also meant that we basically try to

00:01:25,289 --> 00:01:29,609
replicate Debian's infrastructure inside

00:01:27,359 --> 00:01:37,039
Changu itself which did lead to some

00:01:29,609 --> 00:01:37,039
problems where's the next slide

00:01:39,759 --> 00:01:55,630
uh-oh well sorry I don't know why the

00:01:53,049 --> 00:01:57,799
why the sideshow is slow at this point

00:01:55,630 --> 00:02:01,009
okay I will just talk about the next

00:01:57,799 --> 00:02:03,259
slide until it's appears there is what

00:02:01,009 --> 00:02:04,909
you need for building a derivative is

00:02:03,259 --> 00:02:06,649
mainly repository management which is

00:02:04,909 --> 00:02:08,330
the Debian archive kit in this case for

00:02:06,649 --> 00:02:11,060
tan glue we need built infrastructure to

00:02:08,330 --> 00:02:12,230
make packages we originally thought that

00:02:11,060 --> 00:02:14,510
we wouldn't need to do transition

00:02:12,230 --> 00:02:16,340
tracking but if you base on Debian

00:02:14,510 --> 00:02:19,099
testing you actually require that in

00:02:16,340 --> 00:02:20,780
order to to do uploads in the right

00:02:19,099 --> 00:02:22,370
order in order to rebuild things in the

00:02:20,780 --> 00:02:24,799
right order because if you just think

00:02:22,370 --> 00:02:27,500
them in batch you will rebuilt them in

00:02:24,799 --> 00:02:31,010
any and arbitrary orders and actually

00:02:27,500 --> 00:02:33,440
testing turned out to be not as as I

00:02:31,010 --> 00:02:35,629
easily buildable then we originally

00:02:33,440 --> 00:02:37,310
thought this is also the reason why we

00:02:35,629 --> 00:02:39,110
need Brittany to do package migration

00:02:37,310 --> 00:02:41,780
and we also need to synchronize packages

00:02:39,110 --> 00:02:43,190
with Debian which also means that which

00:02:41,780 --> 00:02:45,019
it not only means that we need to fetch

00:02:43,190 --> 00:02:46,579
stuff from Debian and get it into our

00:02:45,019 --> 00:02:49,130
distribution but we also need to merge

00:02:46,579 --> 00:02:51,079
patch this we apply it downstream we

00:02:49,130 --> 00:02:53,329
also need to build ISO images track bugs

00:02:51,079 --> 00:02:55,670
have a wiki generated upstream metadata

00:02:53,329 --> 00:02:57,769
so stuff shows up in Gnome software and

00:02:55,670 --> 00:03:02,389
other tools and also we need a lot of

00:02:57,769 --> 00:03:06,560
misaligns tools to to do various other

00:03:02,389 --> 00:03:08,690
smaller tasks so a short excursion into

00:03:06,560 --> 00:03:10,549
building things we are a distribution

00:03:08,690 --> 00:03:14,150
which rebuilds all packages that Debian

00:03:10,549 --> 00:03:16,910
has and it bases upon testing so we had

00:03:14,150 --> 00:03:19,280
the task of building at 28,000 source

00:03:16,910 --> 00:03:21,500
packages on two architectures which is

00:03:19,280 --> 00:03:23,630
quite a lot of stuff so we originally

00:03:21,500 --> 00:03:27,349
thought that we should use one able

00:03:23,630 --> 00:03:28,970
because that's what Debian uses and yeah

00:03:27,349 --> 00:03:31,190
this is turned out to be a really hard

00:03:28,970 --> 00:03:33,650
task because one durable was developed

00:03:31,190 --> 00:03:35,630
in the origins of Debian and it's almost

00:03:33,650 --> 00:03:37,579
impossible to set up for any derivative

00:03:35,630 --> 00:03:41,120
which basically brings us to the first

00:03:37,579 --> 00:03:42,950
and only cat picture in this talk yeah I

00:03:41,120 --> 00:03:44,720
would just quickly go through this if

00:03:42,950 --> 00:03:46,700
you have questions on why one of all

00:03:44,720 --> 00:03:48,439
those difficult ask me later about it

00:03:46,700 --> 00:03:50,860
the next thing we thought about using

00:03:48,439 --> 00:03:53,020
open built service back then this wasn't

00:03:50,860 --> 00:03:55,150
especially not if we also want to use

00:03:53,020 --> 00:03:57,070
the Debian archive kit because of the

00:03:55,150 --> 00:03:58,870
open build servers by openSUSE wants to

00:03:57,070 --> 00:04:02,230
take off were also repository management

00:03:58,870 --> 00:04:04,990
which was which we explicitly didn't

00:04:02,230 --> 00:04:06,700
want meanwhile collabora did put a lot

00:04:04,990 --> 00:04:09,280
of work into making it work for Debian

00:04:06,700 --> 00:04:11,770
and for derivatives which is awesome but

00:04:09,280 --> 00:04:14,220
back then this unfortunately wasn't an

00:04:11,770 --> 00:04:17,709
option so we went with jenkins and

00:04:14,220 --> 00:04:20,440
created 28,000 jobs with the matrix in

00:04:17,709 --> 00:04:22,330
it which led to a I don't know I think

00:04:20,440 --> 00:04:24,910
it was about a gigabyte XML

00:04:22,330 --> 00:04:27,280
configuration file for Jenkins which was

00:04:24,910 --> 00:04:29,500
actually pretty terrible it worked for

00:04:27,280 --> 00:04:31,720
was a small while but even just

00:04:29,500 --> 00:04:34,480
rebooting Jenkins took about 40 minutes

00:04:31,720 --> 00:04:36,280
so while Jenkins is great for CI it's

00:04:34,480 --> 00:04:42,450
not great for building a massive amount

00:04:36,280 --> 00:04:45,970
of packages and yeah so in the end we

00:04:42,450 --> 00:04:47,770
went with debbye which is a system

00:04:45,970 --> 00:04:49,900
written by Paul Takeo Monty and made

00:04:47,770 --> 00:04:52,690
some custom glue for tango in order to

00:04:49,900 --> 00:04:55,419
build a lot of these packages but this

00:04:52,690 --> 00:04:56,950
also had its own problems so actually

00:04:55,419 --> 00:04:59,680
package management into something we

00:04:56,950 --> 00:05:03,390
weren't really happy with initially we

00:04:59,680 --> 00:05:05,470
also had other problems with with

00:05:03,390 --> 00:05:08,230
actually replicating Debian

00:05:05,470 --> 00:05:10,360
infrastructure which is for example that

00:05:08,230 --> 00:05:13,090
there are tons of cron jobs which are

00:05:10,360 --> 00:05:15,040
run on a time pay on up free obviously

00:05:13,090 --> 00:05:16,600
which are runtime based which means that

00:05:15,040 --> 00:05:18,430
as soon as we upload the package we

00:05:16,600 --> 00:05:19,570
generate packages files and then

00:05:18,430 --> 00:05:21,580
something else which might actually

00:05:19,570 --> 00:05:22,750
immediately run afterwards because this

00:05:21,580 --> 00:05:26,590
package first has to be rented I

00:05:22,750 --> 00:05:28,630
generated just runs later and this

00:05:26,590 --> 00:05:32,080
causes huge delays for example to get

00:05:28,630 --> 00:05:34,000
one package into the the distribution a

00:05:32,080 --> 00:05:36,010
lot of steps need to happen and yeah

00:05:34,000 --> 00:05:38,380
this is this is not ideal if you want to

00:05:36,010 --> 00:05:40,900
do fast development of course you can

00:05:38,380 --> 00:05:43,419
can tune the cron jobs to run in the

00:05:40,900 --> 00:05:46,960
right order to make it less annoying but

00:05:43,419 --> 00:05:48,370
this is some work and it's a bit yeah it

00:05:46,960 --> 00:05:50,560
actually doesn't really solve the

00:05:48,370 --> 00:05:52,300
problem it just makes it's just

00:05:50,560 --> 00:05:55,000
mitigated slightly

00:05:52,300 --> 00:05:56,320
also it's if you don't if you aren't

00:05:55,000 --> 00:05:57,640
part of a debian infrastructure team is

00:05:56,320 --> 00:05:59,590
unclear how these tools work together

00:05:57,640 --> 00:06:01,840
for example I didn't know that a

00:05:59,590 --> 00:06:03,340
Brittnay throws out a text file which is

00:06:01,840 --> 00:06:04,630
then directly imported into the doc

00:06:03,340 --> 00:06:06,640
database project axed

00:06:04,630 --> 00:06:10,000
overrides tables and testing with

00:06:06,640 --> 00:06:12,910
contents from this text file and I asked

00:06:10,000 --> 00:06:14,470
of the FTP masters and nobody knew how

00:06:12,910 --> 00:06:16,780
they actually how stuff actually

00:06:14,470 --> 00:06:18,520
migrates from testing so it took a while

00:06:16,780 --> 00:06:20,140
to figure this out and it's actually

00:06:18,520 --> 00:06:22,450
it's actually a well-known thing now but

00:06:20,140 --> 00:06:24,490
yeah if you're new it's not really

00:06:22,450 --> 00:06:25,780
something something you know so in

00:06:24,490 --> 00:06:28,570
general it's really hard to set

00:06:25,780 --> 00:06:31,990
something up that resembles that the

00:06:28,570 --> 00:06:34,090
infrastructure Debian uses fortunately

00:06:31,990 --> 00:06:35,890
DAC and especially Brittany got a lot

00:06:34,090 --> 00:06:38,980
better Brittany is now really easy to

00:06:35,890 --> 00:06:41,050
use and DAC is also also in the process

00:06:38,980 --> 00:06:43,330
of being easier to use for for Debian

00:06:41,050 --> 00:06:45,190
derivatives for example while writing

00:06:43,330 --> 00:06:48,850
tangler we got rid of a lot of hard

00:06:45,190 --> 00:06:51,970
coding of the unstable name and and

00:06:48,850 --> 00:06:54,250
Devon isms in it so yeah this is this is

00:06:51,970 --> 00:06:57,940
pretty great by now there are also

00:06:54,250 --> 00:06:59,680
maintenance issues because as much as

00:06:57,940 --> 00:07:01,420
teams complain and say Debian that they

00:06:59,680 --> 00:07:02,920
don't have enough manpower they actually

00:07:01,420 --> 00:07:04,840
have a lot more manpower compared to a

00:07:02,920 --> 00:07:08,710
derivative that's just started and has

00:07:04,840 --> 00:07:10,300
about four members so they have a lot of

00:07:08,710 --> 00:07:12,460
teams which maintain separate parts of

00:07:10,300 --> 00:07:15,040
the infrastructure so every team which

00:07:12,460 --> 00:07:16,990
is dedicated to to maintaining birthday

00:07:15,040 --> 00:07:19,180
and doing transition tracking and the

00:07:16,990 --> 00:07:20,860
FTP masters who only deal with DAC so

00:07:19,180 --> 00:07:22,990
they are experts in their field while

00:07:20,860 --> 00:07:24,730
you as if you start a derivative need to

00:07:22,990 --> 00:07:26,530
basically know everything and also

00:07:24,730 --> 00:07:29,110
maintain everything which is which is

00:07:26,530 --> 00:07:31,570
difficult especially since every tool is

00:07:29,110 --> 00:07:35,950
configured in some way and since tango

00:07:31,570 --> 00:07:38,040
was doing doing a lot of dr. felices we

00:07:35,950 --> 00:07:40,660
had to like basically override things

00:07:38,040 --> 00:07:42,310
basically adjust every configuration for

00:07:40,660 --> 00:07:44,620
every single time which is annoying so

00:07:42,310 --> 00:07:46,300
since I'm running out of time I just go

00:07:44,620 --> 00:07:47,950
through a few solutions who tried to

00:07:46,300 --> 00:07:51,220
mitigate this which is fed message which

00:07:47,950 --> 00:07:53,020
is a system to make parts communicate

00:07:51,220 --> 00:07:54,220
with each other as developed by fedora

00:07:53,020 --> 00:07:55,960
but it didn't solve the problem

00:07:54,220 --> 00:07:57,880
completely because we still had the

00:07:55,960 --> 00:08:02,410
configuration management problem we also

00:07:57,880 --> 00:08:04,390
had rapid uma which is a large

00:08:02,410 --> 00:08:06,280
collection of Python scripts we

00:08:04,390 --> 00:08:07,870
developed in order to glue the different

00:08:06,280 --> 00:08:10,930
parts of the infrastructure together

00:08:07,870 --> 00:08:13,960
which this was kind of well it worked

00:08:10,930 --> 00:08:15,640
but it wasn't great so we had something

00:08:13,960 --> 00:08:17,160
working in the end based on these things

00:08:15,640 --> 00:08:18,540
and also good posit ori with all

00:08:17,160 --> 00:08:21,210
configuration files that it wasn't

00:08:18,540 --> 00:08:23,100
awesome then a pure s happened where

00:08:21,210 --> 00:08:25,590
purism approached me to help with

00:08:23,100 --> 00:08:27,510
developing their puris and I thought do

00:08:25,590 --> 00:08:29,880
we really want to use this for for this

00:08:27,510 --> 00:08:32,460
new thing and meanwhile I was already

00:08:29,880 --> 00:08:34,440
working on some integrated solution to

00:08:32,460 --> 00:08:38,580
resolve the problems we were facing

00:08:34,440 --> 00:08:41,220
which ya are listed here again and yet

00:08:38,580 --> 00:08:43,080
surprisingly also the tools for tangler

00:08:41,220 --> 00:08:44,430
didn't actually work for pure s because

00:08:43,080 --> 00:08:45,720
we thought we would have made them

00:08:44,430 --> 00:08:48,240
generic enough to be used by other

00:08:45,720 --> 00:08:51,680
derivatives but in in fact this was not

00:08:48,240 --> 00:08:54,530
the case so I developed a Nakia which is

00:08:51,680 --> 00:08:58,080
has a massive scope hence the name of

00:08:54,530 --> 00:09:00,480
Allah Nakia supercluster which is say

00:08:58,080 --> 00:09:02,730
basically the home of allah galaxy it's

00:09:00,480 --> 00:09:04,740
a galaxy cluster and yeah you I could

00:09:02,730 --> 00:09:06,900
could go on and explain the name but it

00:09:04,740 --> 00:09:08,190
was skipped that now so the basic

00:09:06,900 --> 00:09:10,020
fundamentals of this that we have one

00:09:08,190 --> 00:09:12,420
source for all configuration which is a

00:09:10,020 --> 00:09:14,220
central database we have a tightly

00:09:12,420 --> 00:09:16,680
integrated components which only talk to

00:09:14,220 --> 00:09:18,690
the database we want to minimize human

00:09:16,680 --> 00:09:21,270
intervention so as soon as something can

00:09:18,690 --> 00:09:23,130
be done by module instead of Nakia we

00:09:21,270 --> 00:09:25,860
don't want any human to like upload a

00:09:23,130 --> 00:09:27,210
package for rebuilding but for example

00:09:25,860 --> 00:09:28,920
we want to upload the package to have

00:09:27,210 --> 00:09:31,290
Lanica also detected what needs to be

00:09:28,920 --> 00:09:33,750
rebuilt and have it done without like

00:09:31,290 --> 00:09:35,640
having to intervene we also want a web

00:09:33,750 --> 00:09:37,500
interface because that's actually how

00:09:35,640 --> 00:09:40,260
things are managed by now and not having

00:09:37,500 --> 00:09:44,010
users to login into into or ssh into

00:09:40,260 --> 00:09:46,370
machines and it's also nice for

00:09:44,010 --> 00:09:49,380
permission control so we can have users

00:09:46,370 --> 00:09:51,450
give individual permissions to to users

00:09:49,380 --> 00:09:53,220
to perform certain tasks which was the

00:09:51,450 --> 00:09:54,960
problem for tangle because they always

00:09:53,220 --> 00:09:56,610
had to go through me or someone else who

00:09:54,960 --> 00:09:58,680
had permission if they want to something

00:09:56,610 --> 00:10:00,000
migrated or something done and as soon

00:09:58,680 --> 00:10:02,160
as you had permission you were basically

00:10:00,000 --> 00:10:05,340
able to do a lot of things which we

00:10:02,160 --> 00:10:07,350
didn't want to want to give to new

00:10:05,340 --> 00:10:09,300
cameras to the distribution already we

00:10:07,350 --> 00:10:12,510
also want to support fat pack and I was

00:10:09,300 --> 00:10:15,330
tree natively and awesome a snappy which

00:10:12,510 --> 00:10:17,370
is emerging technology and playing

00:10:15,330 --> 00:10:19,460
around with that for a while so yeah and

00:10:17,370 --> 00:10:22,890
also share work with other distributions

00:10:19,460 --> 00:10:23,910
yeah shell scripts are terrible so this

00:10:22,890 --> 00:10:25,890
shouldn't be have shouldn't happen

00:10:23,910 --> 00:10:27,690
because it's basically a sign that that

00:10:25,890 --> 00:10:29,250
we did something wrong this is the basic

00:10:27,690 --> 00:10:30,410
architecture of a thing I would quickly

00:10:29,250 --> 00:10:32,480
go through it

00:10:30,410 --> 00:10:35,150
some things aren't ready yet I will talk

00:10:32,480 --> 00:10:37,940
about I will mention that when I talk

00:10:35,150 --> 00:10:40,580
about them so what we have in latakia is

00:10:37,940 --> 00:10:41,810
adapters to existing projects which for

00:10:40,580 --> 00:10:44,510
example for the Brittany package

00:10:41,810 --> 00:10:46,490
migration the spears module and for

00:10:44,510 --> 00:10:48,290
germinator which is generating meta

00:10:46,490 --> 00:10:50,330
packages and for checking the

00:10:48,290 --> 00:10:53,780
availability of packages which is those

00:10:50,330 --> 00:10:55,310
we have these things which basically set

00:10:53,780 --> 00:10:56,330
up these tools so we don't need to care

00:10:55,310 --> 00:10:58,280
about that when you make a new

00:10:56,330 --> 00:10:59,840
derivative they write the configuration

00:10:58,280 --> 00:11:02,090
for them based on information they found

00:10:59,840 --> 00:11:04,040
in the central database they read data

00:11:02,090 --> 00:11:05,540
that's generated by these tools into the

00:11:04,040 --> 00:11:07,460
database so it is available for other

00:11:05,540 --> 00:11:10,970
tools immediately and they receive

00:11:07,460 --> 00:11:14,320
triggers via 0 mq communication in order

00:11:10,970 --> 00:11:16,820
to run so we also have modules which are

00:11:14,320 --> 00:11:19,220
doing tasks like synchronizing packages

00:11:16,820 --> 00:11:21,290
building iso images managing build

00:11:19,220 --> 00:11:24,520
queues in order to build things and they

00:11:21,290 --> 00:11:29,180
share in general share a lot of code to

00:11:24,520 --> 00:11:31,550
well to execute actions faster the build

00:11:29,180 --> 00:11:33,800
stuff isn't quite there yet it's

00:11:31,550 --> 00:11:35,420
currently a work in progress for long

00:11:33,800 --> 00:11:38,290
running tasks we also have a job runner

00:11:35,420 --> 00:11:40,670
which is a pool of stuff a pool of

00:11:38,290 --> 00:11:44,210
machines that can perform arbitrary

00:11:40,670 --> 00:11:45,740
tasks ranging from from building images

00:11:44,210 --> 00:11:48,710
for the distribution or building

00:11:45,740 --> 00:11:51,650
packages importing git repositories and

00:11:48,710 --> 00:11:54,530
and doing all kinds of things they use

00:11:51,650 --> 00:11:57,680
encrypted connections because as this in

00:11:54,530 --> 00:12:00,620
tango we don't have we don't have a like

00:11:57,680 --> 00:12:02,870
a central built forum where only trusted

00:12:00,620 --> 00:12:05,150
communication is happening but Jango

00:12:02,870 --> 00:12:07,150
packages are built sometimes on servers

00:12:05,150 --> 00:12:10,610
someone else in their basement so yeah

00:12:07,150 --> 00:12:12,950
we also have user interfaces which

00:12:10,610 --> 00:12:14,060
contains CI tools to administer the

00:12:12,950 --> 00:12:15,890
services right now

00:12:14,060 --> 00:12:19,910
so we still have to SSH into a machine

00:12:15,890 --> 00:12:21,680
in order to to get things done but there

00:12:19,910 --> 00:12:23,840
are also web front-ends and development

00:12:21,680 --> 00:12:26,300
some of them are already working in

00:12:23,840 --> 00:12:27,710
order to view QA information and a

00:12:26,300 --> 00:12:29,780
central location instead of going

00:12:27,710 --> 00:12:32,620
through many places in order to view

00:12:29,780 --> 00:12:35,360
what's happening in the distribution

00:12:32,620 --> 00:12:37,550
there's also an IRC back-end evil air

00:12:35,360 --> 00:12:37,940
sea but its development in order to

00:12:37,550 --> 00:12:39,860
announce

00:12:37,940 --> 00:12:41,540
certain changes that are interesting

00:12:39,860 --> 00:12:44,169
like a new image was built please test

00:12:41,540 --> 00:12:46,399
it in the IRC Channel

00:12:44,169 --> 00:12:48,410
most of the user interfaces though are

00:12:46,399 --> 00:12:50,929
very early work because I'm actually not

00:12:48,410 --> 00:12:55,100
a web developer so this is a kind of new

00:12:50,929 --> 00:12:57,169
territory for me yeah

00:12:55,100 --> 00:12:59,299
in general these things are really easy

00:12:57,169 --> 00:13:02,089
to to set up on a self-assembling

00:12:59,299 --> 00:13:04,939
because they communicate via the

00:13:02,089 --> 00:13:07,790
database or vy0 mq2 in order to pass

00:13:04,939 --> 00:13:10,309
messages amongst each other so as soon

00:13:07,790 --> 00:13:11,569
as you have one and connected to to the

00:13:10,309 --> 00:13:14,480
central instance it will immediately

00:13:11,569 --> 00:13:17,660
detect the other modules and and work

00:13:14,480 --> 00:13:20,059
with them technology uses basically as

00:13:17,660 --> 00:13:21,799
boring I guess except for the fact that

00:13:20,059 --> 00:13:24,519
we use a deep programming language for

00:13:21,799 --> 00:13:27,230
for most things and Python for the rest

00:13:24,519 --> 00:13:29,149
and also at the moment but I'm

00:13:27,230 --> 00:13:31,959
pretty sure that this will changed at

00:13:29,149 --> 00:13:34,399
least in terms of using a database

00:13:31,959 --> 00:13:36,829
quickly for future plans

00:13:34,399 --> 00:13:39,439
first things first priority is to make

00:13:36,829 --> 00:13:40,999
package build work properly and

00:13:39,439 --> 00:13:43,189
integrate the transition tracking module

00:13:40,999 --> 00:13:46,129
and basically write a lot more modules

00:13:43,189 --> 00:13:49,009
to do perform more tasks in silent

00:13:46,129 --> 00:13:51,230
archaea also one on a pretty important

00:13:49,009 --> 00:13:53,059
point is to use open QA which is the

00:13:51,230 --> 00:13:54,949
service but a developer openSUSE in

00:13:53,059 --> 00:13:58,249
order to do testing on the final image

00:13:54,949 --> 00:14:00,230
and two tests to automatically check

00:13:58,249 --> 00:14:02,209
whether the image we ship to our users

00:14:00,230 --> 00:14:05,239
is working and the solution is working

00:14:02,209 --> 00:14:06,980
and things like that and yeah packaging

00:14:05,239 --> 00:14:10,009
when I care for Debian is something I'm

00:14:06,980 --> 00:14:11,929
working on it's except for the few

00:14:10,009 --> 00:14:15,139
JavaScript things it's relatively simple

00:14:11,929 --> 00:14:16,939
and as soon as it's as it has more

00:14:15,139 --> 00:14:18,980
documentation is actually easy to set up

00:14:16,939 --> 00:14:21,709
for other derivatives you can just

00:14:18,980 --> 00:14:23,749
install it from Debian it's use it at

00:14:21,709 --> 00:14:25,009
the moment if you are developing a

00:14:23,749 --> 00:14:25,669
derivative and have existing

00:14:25,009 --> 00:14:28,039
infrastructure

00:14:25,669 --> 00:14:30,019
I wouldn't recommend using a ki just yet

00:14:28,039 --> 00:14:32,869
but why it's bits because it's the very

00:14:30,019 --> 00:14:34,339
early development and there are a lot of

00:14:32,869 --> 00:14:39,350
things that were changed and a lot of

00:14:34,339 --> 00:14:41,619
modules on development so yeah do you

00:14:39,350 --> 00:14:41,619
have questions

00:14:51,410 --> 00:14:56,639
one of the problems that I've run into

00:14:54,300 --> 00:15:00,089
like dealing with like many derivatives

00:14:56,639 --> 00:15:03,779
and stuff like that is if you what is

00:15:00,089 --> 00:15:05,639
the best tool for things like a

00:15:03,779 --> 00:15:07,079
replacement of her packages that Deb

00:15:05,639 --> 00:15:08,910
unit or like a web interface that

00:15:07,079 --> 00:15:13,589
actually lets users take a look at

00:15:08,910 --> 00:15:16,199
what's in your repositories at the

00:15:13,589 --> 00:15:17,910
moment we are in tango using packages

00:15:16,199 --> 00:15:20,759
that they've in delorca so the packages

00:15:17,910 --> 00:15:23,879
web application for this but let me a

00:15:20,759 --> 00:15:25,889
Kia has because we have this information

00:15:23,879 --> 00:15:30,480
already and we can make use of it it has

00:15:25,889 --> 00:15:32,850
this Web SW view thing which is not only

00:15:30,480 --> 00:15:34,470
showing packages but will also in some

00:15:32,850 --> 00:15:37,379
future be able to show flat packs

00:15:34,470 --> 00:15:40,199
alongside so this is the thing I would

00:15:37,379 --> 00:15:44,569
replace it with long term short term I

00:15:40,199 --> 00:15:44,569
think packages web is the thing to go to

00:15:48,799 --> 00:15:52,739
take the packages that Debbie nuraghe

00:15:51,269 --> 00:15:56,040
sources and actually go set up your an

00:15:52,739 --> 00:15:58,230
instance yeah it's ok it's open source

00:15:56,040 --> 00:16:00,779
so no I'm sure it's open sorry I just I

00:15:58,230 --> 00:16:03,749
hadn't looked at how easy you like how

00:16:00,779 --> 00:16:05,990
easy it was to do it's a bit tricky

00:16:03,749 --> 00:16:08,639
because you need to regenerate the

00:16:05,990 --> 00:16:10,559
database for it internally and it also

00:16:08,639 --> 00:16:12,839
runs with the patches so if your system

00:16:10,559 --> 00:16:15,480
is round about endings yeah you need to

00:16:12,839 --> 00:16:17,939
well work around that or write something

00:16:15,480 --> 00:16:19,920
to run the Perl script without Apache so

00:16:17,939 --> 00:16:23,029
but it's possible it's actually one of

00:16:19,920 --> 00:16:23,029
the nicer things to set up

00:16:42,419 --> 00:16:46,569
is the intention to run it only for

00:16:44,949 --> 00:16:48,249
derivative distributions or can you run

00:16:46,569 --> 00:16:49,419
it as a for a partial distribution as

00:16:48,249 --> 00:16:51,309
well where you have you know you use

00:16:49,419 --> 00:16:53,349
stretch and then you have your own

00:16:51,309 --> 00:16:55,179
depositor with 100 packages that you

00:16:53,349 --> 00:16:58,059
need to build and sink and continue

00:16:55,179 --> 00:17:01,239
working in blackboard maybe right now

00:16:58,059 --> 00:17:03,879
most modules assume that repository is

00:17:01,239 --> 00:17:06,579
complete so if you you could mirror it

00:17:03,879 --> 00:17:08,289
which is what we do in pure s right now

00:17:06,579 --> 00:17:11,799
we just mirror all binary package and

00:17:08,289 --> 00:17:15,339
don't rebuild them so that would work

00:17:11,799 --> 00:17:17,709
but actually the modules that actually

00:17:15,339 --> 00:17:19,360
assume that the distribution is complete

00:17:17,709 --> 00:17:21,549
was just the depth check thing you could

00:17:19,360 --> 00:17:23,740
just not use them or fix them in order

00:17:21,549 --> 00:17:26,679
to to work for partial estivation

00:17:23,740 --> 00:17:28,149
so right now I'm focusing on partial

00:17:26,679 --> 00:17:30,460
distributions because I have no partial

00:17:28,149 --> 00:17:36,759
distribution to work with but it's

00:17:30,460 --> 00:17:39,129
definitely possible to use it also most

00:17:36,759 --> 00:17:41,230
modules so the depth check module will

00:17:39,129 --> 00:17:43,659
rent your problems I think because

00:17:41,230 --> 00:17:46,710
myself because we are here in the blend

00:17:43,659 --> 00:17:49,659
tract and blends are actually not

00:17:46,710 --> 00:17:52,690
creating derivatives how often do you

00:17:49,659 --> 00:17:54,809
think well you're too used and for what

00:17:52,690 --> 00:17:57,159
purpose

00:17:54,809 --> 00:17:59,139
when I create this angle I thought I

00:17:57,159 --> 00:18:00,850
would only do this once and actually

00:17:59,139 --> 00:18:03,009
nobody would ever create debian

00:18:00,850 --> 00:18:04,809
derivatives and I actually meanwhile

00:18:03,009 --> 00:18:07,929
learned that a lot of people do create a

00:18:04,809 --> 00:18:10,000
vendor it is mostly internally so they

00:18:07,929 --> 00:18:12,809
can be used that company and inside the

00:18:10,000 --> 00:18:14,830
company but also PRS happened so I think

00:18:12,809 --> 00:18:16,720
creating laboratory of debian

00:18:14,830 --> 00:18:19,119
derivatives is quite common task

00:18:16,720 --> 00:18:22,379
meanwhile there was also recently a talk

00:18:19,119 --> 00:18:26,169
by the endless people who makes

00:18:22,379 --> 00:18:27,730
derivative dedicated for well people who

00:18:26,169 --> 00:18:30,879
have less stable internet connections

00:18:27,730 --> 00:18:33,029
and yeah basically in the third world so

00:18:30,879 --> 00:18:35,769
I think for these specialized

00:18:33,029 --> 00:18:37,419
specialized niches creating debian

00:18:35,769 --> 00:18:40,509
derivatives is quite common because you

00:18:37,419 --> 00:18:42,159
can ship one iso image for users to just

00:18:40,509 --> 00:18:44,200
install instead of telling them install

00:18:42,159 --> 00:18:46,119
debian and then perform these additional

00:18:44,200 --> 00:18:49,360
steps in order to get the thing working

00:18:46,119 --> 00:18:51,950
I always think that the tweaking debian

00:18:49,360 --> 00:18:52,940
in itself it's more sustainable because

00:18:51,950 --> 00:18:54,679
these people are creating their

00:18:52,940 --> 00:18:57,740
derivatives and all in a place of the

00:18:54,679 --> 00:19:01,880
world and reinventing the wheel as

00:18:57,740 --> 00:19:04,279
Michael just told us before yet to make

00:19:01,880 --> 00:19:07,309
the case for derivatives in case of Tang

00:19:04,279 --> 00:19:09,289
Wu just saying let's go for system D it

00:19:07,309 --> 00:19:11,600
wasn't possible and also saying let's go

00:19:09,289 --> 00:19:13,490
for a timed releases isn't possible so

00:19:11,600 --> 00:19:15,559
there are some things which Debian can't

00:19:13,490 --> 00:19:18,230
do and Debian shouldn't do even I would

00:19:15,559 --> 00:19:28,490
say and these are the niches that can be

00:19:18,230 --> 00:19:31,070
filled by derivatives oh yeah for

00:19:28,490 --> 00:19:33,380
example pure asses a 100 percent free

00:19:31,070 --> 00:19:35,120
software and is trying to get endorsed

00:19:33,380 --> 00:19:38,120
by the Free Software Foundation which is

00:19:35,120 --> 00:19:42,080
something Debian which has the non free

00:19:38,120 --> 00:19:47,210
branch also cannot do so those are cases

00:19:42,080 --> 00:19:52,669
for example so you mentioned OBS and the

00:19:47,210 --> 00:19:55,580
endless guys were using OBS talking

00:19:52,669 --> 00:19:57,950
about oh yes so for a new project

00:19:55,580 --> 00:19:59,899
starting today how would you contrast

00:19:57,950 --> 00:20:05,120
what you're doing with what OBS is

00:19:59,899 --> 00:20:08,510
capable of doing today that's a good

00:20:05,120 --> 00:20:10,429
question so um I haven't used OBS so I

00:20:08,510 --> 00:20:12,470
can't really comment on this because I

00:20:10,429 --> 00:20:15,320
used obvious about three years ago the

00:20:12,470 --> 00:20:18,230
last time and back then it wasn't really

00:20:15,320 --> 00:20:21,350
really nice to work with and but

00:20:18,230 --> 00:20:23,149
meanwhile a collaborative there's a ton

00:20:21,350 --> 00:20:25,730
of work and it's even packaged in Debian

00:20:23,149 --> 00:20:28,460
meanwhile so I would need to see how

00:20:25,730 --> 00:20:31,070
well it works so I think if your

00:20:28,460 --> 00:20:33,139
objective is to just build things and

00:20:31,070 --> 00:20:35,990
have some basic repository management

00:20:33,139 --> 00:20:37,940
then using OBS is a good idea if you

00:20:35,990 --> 00:20:39,889
want more like the whole transition

00:20:37,940 --> 00:20:44,149
tracking or automatic rebuilds then

00:20:39,889 --> 00:20:46,010
using this as better idea I think one of

00:20:44,149 --> 00:20:48,409
the ideas is to maybe get rid of dark

00:20:46,010 --> 00:20:50,360
and to absorb the repository management

00:20:48,409 --> 00:20:52,970
inside Laniakea which is something and I

00:20:50,360 --> 00:20:55,100
think might need to happen at some point

00:20:52,970 --> 00:20:58,399
because stack is a real bottleneck at

00:20:55,100 --> 00:21:00,230
the moment but prior to that I would

00:20:58,399 --> 00:21:01,940
also see if I can somehow interface

00:21:00,230 --> 00:21:03,770
Laniakea with the open build servers

00:21:01,940 --> 00:21:05,810
instead which would would have

00:21:03,770 --> 00:21:07,940
some some synergies in that area or just

00:21:05,810 --> 00:21:10,610
make it pluggable so you can use stack

00:21:07,940 --> 00:21:13,340
and open build service and anything else

00:21:10,610 --> 00:21:15,770
you want so yeah this is just a fabric

00:21:13,340 --> 00:21:17,900
where you can put in other services and

00:21:15,770 --> 00:21:22,060
have them share code and information

00:21:17,900 --> 00:21:22,060
that's the basic idea behind it

00:21:36,500 --> 00:21:40,510
so okay thanks for the talk and

00:21:41,370 --> 00:21:49,990

YouTube URL: https://www.youtube.com/watch?v=IIWx7RM5mWs


