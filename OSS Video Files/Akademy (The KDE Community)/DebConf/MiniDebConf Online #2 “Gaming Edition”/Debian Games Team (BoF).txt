Title: Debian Games Team (BoF)
Publication date: 2020-11-24
Playlist: MiniDebConf Online #2 “Gaming Edition”
Description: 
	by Jonathan Carter
by Phil Morrell

At: MiniDebConf Online #2 "Gaming Edition"
https://mdco2.mini.debconf.org/talks/18-debian-games-team-bof/

Interested in joining the Debian Games Team?
Want to meet the Debian Games Team?
What's the current issues in the Debian Games Team that needs solving?

Join us in this session to find out!

Room: Main
Scheduled start: 2020-11-21 15:30:00
Captions: 
	                              well welcome to the                               debian games buff um for those who are                               new to debian joining this weekend above                               stands for birds of                               feather it ideas that people of a                               similar interest come together to work                               on certain problems or specific areas in                               debian                               so we don't have many people from the                                gaming team here today                                who do we have we have uh um for morale                                and uh that's basically the two of us in                                the school at the moment if anyone else                                wants to join                                uh spoke me high voltage on rsc and i'll                                send you a                                link to the jitsi call if anyone else                                wants to join as well it's completely                                open                                uh if you have any questions you can ask                                on the ether pad                                or an rsc just prepend your question                                with                                question in capital letters and                                and we should be able to answer your                                question so                                since we don't have many people of the                                governing team in this call yet maybe                                someone will join that and maybe they                                won't                                i thought in the meantime we'll just                                talk about uh what the games team is                                about                                and how it works in debian how you can                                get involved if you want to                                because what we've seen this morning so                                far already is that there's quite a lot                                of work to do in debian                                and lots of things still needing to be                                packaged                                that's not packaged yet i'm just doing a                                quick check that my sound is okay yes                                okay                                um so let's start with what we have in                                the pad                                so the purpose of a debian games team is                                to coordinate                                and share common problems and                                collaborate on maintaining the packages                                in debian so we do that in a system                                called gitlab                                which hosts a whole lot of git                                git repositories for us our get                                git instance is called salsa so you get                                that salsa.debian.org                                and here you can find all our our                                projects there's quite a lot of them                                we have about                                                           about                                                            mailing list or at least with during the                                last year                                and can i see how many packages we have                                in here not but                                i think i have a q                                                and yeah we can see how many actual                                packages we have                                so that's                                             inside the debian games team                                they're in various shape statements just                                maximize this window a bit so that it                                fits                                and we can see that um actually the the                                games team are doing pretty okay there's                                very few rc bugs                                most games are actually up to date with                                upstream versions there are a few that                                are minor version or two behind but for                                the most part the debian games team                                keeps up quite well with their package                                load                                but more contributors is definitely                                welcome and it would be nice to work on                                you know                                the smaller bugs that exist in the                                packages too                                and obviously get all the huge pool of                                extra software out there packaged in                                debian properly                                uh what else did i have in the pad                                so yes if you want to get involved um                                there's also the                                hash debian games rsc channel                                also on the same network that we're                                doing the the                                um the conferencing channel on                                and let me get the wiki page up                                i think all the contact details are on                                there too so you can                                bookmark this if you want to find out                                 how to join it                                 there's a few other details there as                                 well                                 so what else can i tell you right now                                 oh discussions and questions okay cool                                 um let's see                                 i think phil added that some stats                                 ah these were the stats for the mailing                                 list i guess right                                 cool and i pressed                                 a wrong button                                 so yeah let's talk about back ports so                                 in debian we have a backboard repository                                 so we can also                                 take games that are not yet in a stable                                 release and once they make it into                                 testing                                 we can also upload them to back ports so                                 that users of                                 stable debian systems can use those                                 so this is also a nice area to work in                                 to make sure that that users of stable                                 desktop releases can also play                                 games that have freshly been packaged in                                 debian                                 okay                                 okay so there's a question that is just                                 uh do you want to take that one okay                                 should i read the q yes go ahead okay                                 um so the question is can you talk a                                 little bit about packaging                                 games with non-free artwork but free                                 source code                                 and so that's basically how i got                                 started                                 in the games team so i found it really                                 helpful for                                 the um i found it really supportive                                 basically because                                 games it was kind of like an odd little                                 side bit of debian that                                 doesn't seem to see a lot of attention                                 and but                                 i i enjoy it so um                                 yeah so as as the question said the                                 there's a section                                 in the repositories for contrib um and                                 that's for                                 games where there's an engine available                                 and but there's not really                                 free assets yet so for example a couple                                 of examples there                                 are corsex th a theme hospital                                 reimplementation                                 and a bunch of different game clones                                 like um gem rb                                 um which is a um the implementation of                                 boulder's gate and again                                 most of these have the                                 requirement for you to go off and                                 download                                 download your own um                                 uh art assets so for example by copying                                 them from the original                                 cds that you buy                                                                                        so yeah in terms of how you actually                                 start patching that it's                                 um quite a lot of it is                                 tracking down the copyright file                                 information so making sure that                                 um no one's accidentally included                                 anything in the git history from                                 um uh from the actual                                 proprietary game that it's it's it's                                 cloning really                                 and but that's usually okay these days                                 and get helps with that and there's                                 various tools like license check that                                 will                                 check those for you and                                 when a new release comes around just uh                                 upload                                 update the list of people who have                                 contributed to it                                 yeah so it's been dropping in and out                                 so also more about contrib contributes                                 for software dell free software                                 but it can't run without non-free bits                                 so maybe it depends on other non-free                                 software                                 or non-free content so there's this uh                                 game engine called scumvm that runs all                                 the sierra games                                 and for a long time that was in contrib                                 because                                 you could only run the old proprietary                                 sierra games with it                                 so because it was a piece of free                                 software that relied on                                 non-free software to be useful it was in                                 contrib                                 but then let me share this tab this is                                 part of the amazon queen                                 someone wrote a free game for scheme                                 engine                                 so therefore scum vm became useful                                 on its own using any other free software                                 and then it could be migrated to main so                                 that distinction between contrib main                                 contribute non-free comes with                                 with those levels so um contrab                                 is for free software but that relies                                 on non-free software to be able to work                                 i think that i think between the two of                                 us will cover that question                                 and if there's any more questions you                                 can just pop it up                                 um and so yeah i popped a question there                                 from                                 uh well um stefan in his talk was                                 talking about uh the isn't a                                 standardized category                                 for highlighting utilities in the                                 desktop files                                 and so yeah he mentioned maybe we could                                 have a                                 utilities section under the subsection                                 of the games                                 or i was thinking some of them would fit                                 into settings                                 because they're all around like your                                 mouse configuration tools and things                                 and so yeah i guess it                                 what what do people think it should                                 should be                                 the mouse one is interesting because                                 it's not even that game specific you                                 might have that house and use it in the                                 office                                 and have a completely and still still                                 need that                                 package okay so i'm going to look at the                                 sponsorship request section for a bit um                                 because uh we have a bit of a backlog                                 for                                 stuff that needs needs sponsoring                                 sponsoring is a process of                                 if someone is working on a package but                                 did not hit a debian developer                                 then they can file a request for                                 sponsors bug and someone who is a debian                                 developer can                                 review the package and upload it so                                 that's also why we want more                                 contributors in the gaming team so that                                 they can eventually become a debian                                 developer                                 and then sponsor more of these packages                                 so i think                                 stefan lachnet is probably the one on                                 his way to becoming a debate developer                                 next within a team                                 maybe he can help out with these as well                                 so uh i saw starfighter on the list                                 before as well                                 uh you can actually open up one of these                                 maybe we can actually review a package                                 or two                                 i don't know because the g over g                                 overlays are new packages                                 oh you mentioned the hardening no price                                 so i see this with a few of my packages                                 too even though you have the hardening                                 enabled                                 i think some some packages give                                 false positives in lentil with this                                 because um                                 it can't be hardened and all there's                                 nothing too hard in the function                                 and then um lenten detects it as                                 that the hardening was not done but i'd                                 actually want to double check that                                 before                                 actually sponsoring this package so um                                 i'll come back to this one another time                                 lutress is a big and complicated one                                 i'll do that author                                 let's look at mango hud                                 it's nice that uh mentors actually                                 gives you a overview of the lenten um                                 results of the package so also to give                                 you an idea if you're not                                 familiar with debian we have this                                 website mentors.apn.net                                 it's a place where contributors can                                 upload packages                                 and then debian developers can give it a                                 review                                 and and say whether it looks good or not                                 or give some feedback of things that                                 needs to be fixed                                 and we have this tool called lentien                                 that analyzes your package                                 that tells you about things that need to                                 be improved or things that need to be                                 fixed inside it                                 and this is kind of the some of the                                 outputs that you that you get from it                                 so all of this actually looks good on                                 the surface                                 usually i do this in a terminal but                                 since we're                                 streaming and it's probably                                 and i'm sharing only this window at the                                 moment let me open this in                                 on salsa so that we can actually take a                                 little bit                                 of the deeper dive inside what is                                 packaging                                 so usually i'd start taking a look at                                 the debian directory because that's                                 where all the interesting stuff is                                 uh we check that everything is actually                                 compliant                                 i just look at literally every file and                                 see that it's fine um                                 we usually want three qualities of patch                                 system that we use                                 and version three is the debian package                                 formats that we do all new packages in                                 there's some older ones too but we're                                 trying to move away from them                                 upstream contents excuse me some                                 metadata                                 and i don't usually go check these i'll                                 just check that they look more less                                 right                                 which they do                                 there's a readman.debian which can be a                                 bit of a red flag because that                                 sometimes means you had to do something                                 weird in the packaging so let's see what                                 they say upstream includes a file                                 include nvmelda dates which is probably                                 not free oops however upstream offers                                 two tables one with this file and one                                 without it                                 in debian we will use a dfst variant of                                 the upstream totals okay that sounds                                 good                                 if one wants to use nvidia's machine                                 learning library                                 it's as simple as adding the                                 dev package to the bulb dependencies and                                 change okay                                 that seems all very reasonable enough                                 so dfsg stands for debian free software                                 guidelines                                 it's uh it's kind of our                                 whole philosophy and way that we do                                 things in debian                                 so also if you're new to debian this is                                 a an interesting page to                                 another one i was looking for                                 uh social contract i think yeah social                                 contract will give it to me                                 in a long week i can't even talk anymore                                 and i should obviously say debian social                                 contract because we're not the only ones                                 who have invented                                 something called that so yeah i'm not                                 i'm not going to read to this now but                                 also if you're new to debian and                                 interested this is uh kind of important                                 so                                 um where most projects or most products                                 have doulas end users license agreement                                 that                                 add more restrictions to the software                                 what debian does is we have a contract                                 we will make some promises to                                 to our users because we actually really                                 care about our users                                 not just some marketing thing                                 and there's some some items here that                                 that we're governed by and this is a                                 dfsg part that stands for debian free                                 software guidelines                                 so usually if a piece of work has some                                 parts that                                 don't comply to this we take it out of                                 the upstream tables and                                 append dfsg to it to indicate that we                                 had to make that upstream turbo                                 dfsg compliant so                                 these were written a few years ago with                                 the idea to work around some practical                                 problems that existed in the software                                 world at the time                                 and um amazingly it's to the test of                                 time i think the biggest thing that                                 probably                                 got added or complicated about this is                                 patents                                 which we don't actually cover quite well                                 in this but                                 it's still a very relevant document and                                 worth reading sometimes just to be                                 familiar with it                                 if you'd like to get involved with                                 debian                                 okay                                 yeah so that was that file                                 change log should be basic just one                                 entry specify initial release                                 which itp is closing so uh itp stands                                 for                                 intent to package so in debian when you                                 want to package a new package                                 you have to file an itp bug in our bug                                 tracker                                 and the idea with that is so that two                                 people don't work on the same package                                 and duplicates work                                 so before you want to go ahead and                                 package something you should ideally go                                 look                                 if there's an existing itp for that and                                 if someone else has already started to                                 work                                 so let me see what one of those looks                                 like there's a thing                                 there am i sharing this yes i just                                 wanted to double check                                 [Music]                                 so this is what the itp bug looks like                                 you specify who                                 who's going ahead with the work what the                                 package name is the intended version                                 who wrote the original software where to                                 get it from what the licenses                                 programming language is written in and                                 you give a short description and a long                                 description                                 and usually towards the end of it you                                 say where you want to maintain it                                 as well like for example in the you want                                 to do it to the team                                 or by yourself                                 go back a bit                                 so then the actual the biggest one is                                 the control file that's well control and                                 copyrights are usually the big                                 um things where files where things can                                 go wrong because this is where all the                                 magic happens                                 so in debian we have this concept of                                 source packages                                 and binary packages so the source                                 package                                 is what we're actually looking at at the                                 moment it's the                                 it's a source upstream source code and                                 the debian packaging together that                                 actually generates the dem files that                                 gets included                                 in the archives and that you would                                 typically install in your system                                 so this section above here is called the                                 source section                                 which explains how to build it what's                                 needed to build a package                                 and then after that you'll see                                 the binary packages listed so this is                                 what's called a single                                 um single binary package it only builds                                 this one                                 binary package called mango hud but one                                 source package can also build                                 multiple binary packages because                                 sometimes you want the data to be in a                                 separate package                                 sometimes you want the documentation to                                 be in a different package                                 so um                                 that is how you do it you'd add more                                 binary package sections here                                 so section is games that looks good                                 product is optional we pretty much use                                 optional for everything these days in                                 the past we also used                                 extra but that distinction has got it                                 gone away so                                 maintainers david games team updated                                 stephen lucknett                                 sometimes we do it the other way around                                 the uploaders will be                                 stephen with pentana being debian games                                 i don't think we do this in games team                                 but                                 sometimes the idea is that you want to                                 show that                                 you actually want to maintain it                                 yourself and do all the uploads and now                                 and again if the team wants to help out                                 or if it's necessary they can upload                                 or they can ask permission if they want                                 to upload the package                                 and uh other times if                                 the team is in um maintainer then they                                 don't have to ask to get involved with                                 the package                                 so here's all the bolt dependencies                                 these are dependencies needed to build                                 the package                                 so these aren't necessarily what will be                                 installed um                                 when you install the package on an                                 eventual system                                 these are just needed in the build                                 system to actually generate the binary                                 packages                                 and often the build system might infer                                 which binary packages are needed from                                 the                                 build depends as well rules requires                                 roots this                                 is a line that tells us whether this                                 package actually needs fruits to be                                 built                                 because one more we don't want to do                                 stuff as root                                 so this makes it nice for for both                                 systems that are able to                                 um to build as a regular user without                                 having to escalate to it                                 then there's debian standards version                                 so in debian we have this thing called                                 debian policy                                 and we just                                 bumped up to debian policy                                             two days ago i think                                 um so um                                 debian has a huge amount of rules and                                 policies                                 and guides on how to our package should                                 work                                 these seem a bit cumbersome when you                                 first start out packaging                                 but they actually are very helpful and                                 ensure a lot of quality within                                 debian because we don't want upgrades to                                 break we don't want cases where you                                 install a new package and it tries to                                 overwrite a file from another package                                 there's there's a lot of things hundreds                                 of things that we try to take care about                                 to make sure that the package is good                                 quality                                 uh when you install the debian package                                 on your computer                                 and these policies keep changing                                 slightly now and again uh so you can see                                 uh                                                                       and                                       in november this is kind of actually                                 quite a big gap between two versions i                                 think last year we had                                 a bunch shortly after each other and we                                 had to keep bumping it but                                 this checklist is quite useful because                                 when a new version comes when                                 when you update the package from say                                 version                                            you can use this checklist to to check                                 if there's anything in that package that                                 needed to change                                 to actually make it standard compliant                                 with the newest uh standards version and                                 usually there's a few of these that are                                 actually always                                 relevant to you start picking them up                                 after you've updated a few packages you                                 remember yes i                                 updated this for that package i should                                 do that for this one too so uh                                 it becomes easy to follow once you've                                 got enough policy in your head to build                                 that                                 uh that pool of knowledge so that's what                                 that                                 line is about then you specify where                                 the upstream homepage is often it's a                                 github book at that lab                                 repo um site or page                                 and then where to get the where to                                 browse the source um                                 and where to browse but this is not the                                 source this is the packaging so this is                                 exactly what we're browsing now in the                                 web browser and where to                                 get clown it from a public repository uh                                 usually we'd use to get uri                                 um when working with the packaging                                 because then you can push easily as well                                 i don't think we can http push                                 to salsa okay and then to the binary                                 package details we'll build a package                                 called mango heart it will go into                                 section mask                                 um architecture is any                                 so there's uh you can specify whether it                                 should be                                 both for one specific architects like                                 amd                                   or i                                                                   it will be                                 built for all the individual                                 architectures                                 but this is a confusing part as well                                 because if something is architecture                                 independent                                 you would call it all so sometimes as a                                 new packager you do get confused between                                 any and all um we know that this is any                                 because                                 that and that it will be have to be                                 built for specific                                 architectures we can kind of glimpse                                 that from the                                 um dependencies that's needed                                 so uh                                 usually that usually that's uh                                 determined by what language it's written                                 in so often a                                 game that's compiled from c will be                                 architecture any but if it's just                                 written in java you can get away with                                 architecture or                                 yeah um yeah that's that's true although                                 there's some                                 python packages that i maintain that                                 have some c                                 code with them as well and because they                                 ship some c code as well they get that                                 get okay                                 because it's a mixed package and that                                 can get confusing really quickly                                 but but yeah and in the description                                 um there's i think it the the biggest                                 thing of description is the extended one                                 that's separated by space after the                                 description field                                 um it it has i think it has to be more                                 than two lines i can't remember but i                                 know this is good enough that lentian                                 won't complain about it                                 so this this control file looks good to                                 me                                 let's go let's go to the copyright                                 that's the scary one                                 because this is usually where things go                                 wrong and when you upload the package                                 the ftp masters say no no                                 no no you missed a whole bunch of stuff                                 in the copyright file and there's a                                 bunch of copyright information in the                                 source                                 that's not in your copyright file so                                 usually what i do is i do a                                 in a shell i do a grep minus ri                                 copyright and that picks up a lot of                                 files that have copyright declarations                                 in them but                                 just from seeing this file already                                 it looks pretty good because you can see                                 that that he                                 listed the individual headers and                                 c plus plus files um copywriting their                                 license so                                 just off the bat this looks like it will                                 be a fairly complete                                 uh um copyright file i'll go check it                                 again                                 offline before i upload i'm not going to                                 upload during this                                 session but um                                 tvp so you just get the get                                 why i must said battlefields get build                                 package to                                 um maintain this source in um                                 so this just gives a hint to gbp of                                 where to get                                 the the upstream and debian branch from                                 so into different branches                                 not much to review there debian rules                                 so this can get quite complicated of                                 some packaging                                 usually as a minimum you can get away                                 with with these                                 that will automatically just call all                                 the developer scripts                                 that put the package together and                                 usually it does a good job at guessing                                 what you need sometimes you need to                                 specify a build system afterwards                                 this section this export over here is                                 because uh                                 we want because it's a compiled program                                 so we want to do some hardening                                 functions on there                                 and here to do the edge auto configure                                 you to i will use system vulcan                                 and this is where you decide where                                 that's where the debian comment came in                                 from so because we read it                                 we know that this is to enable the                                 nvidia machine learning stuff because of                                 the extra non-free stuff it would depend                                 on                                 and uh to enable violin as well                                 so this packaging looks really good i                                 would sponsor this                                 i'm just going to check that uh check it                                 offline too before i do that                                 this is just some socio stuff that's not                                 really                                 too interesting and i usually check that                                 the debian watch file works as well so                                 what did they been watch for all weeks                                 this is kind of a                                 it contains the url of where you can                                 find                                 the releases for the upstream source                                 let me open that in a new tab                                 so here you can see                                 the upstream tables for for mango heads                                 and mangoes                                       if you scroll down this should be                                 lots of text lots of text ah maybe                                 that's the first release stage could                                 that be                                 uh let me see                                 no there are more but how it works is it                                 looks at that page                                 and then it has some uh rule and that                                 i'm not sure if that's even a regular                                 expression or just some kind of glob                                 but it what it has some recipe to go                                 pull all of those lines that contain the                                 tar dot                                 cheesy and then it can calculate which                                 version                                 um it can download the latest version or                                 tell you when it's not the latest                                 version that's                                 um that you have installed at the moment                                 and this is also where                                 this column comes from in the debian qa                                 team and how                                 this page knows that some um                                 some packages might be out of date                                 within debian                                 so that's a quick overview of                                 what i usually do when i review a debian                                 package i would also then                                 build a source package out of this and                                 build it within a clean through it to                                 make sure that all the right                                 dependencies are installed                                 and then i'd run an ntn on it just one                                 more time before uploading to make sure                                 that this package is actually in good                                 condition but this particular package                                 does look quite good                                 i think later tonight                                 during a break i'll go ahead and review                                 it again and upload it                                 let's see if there's any more questions                                 in the meantime                                 uh yes there's been a question uh about                                 joining the team                                 so as far as you can tell basically you                                 just uh start                                 doing some packaging work um usually on                                 salsa so if you                                 uh want to interact with one of the                                 existing                                 packages then just clone fork the repo                                 and make your changes under your salsa                                 account                                 um and then just set uh send a mailing                                 list to                                 send an email to the main list and say                                 hey i've done this and                                 please sponsor it essentially and you                                 don't need to be a                                 debian maintainer or developer to join                                 the team so                                 just any contributor and obviously once                                 you've got a sales account it's a lot                                 easier for                                 someone who is in the team um to just                                 give you full access to the get                                 history and so you can just make your                                 changes in git and then say                                 hi i've got a new version please can                                 someone review it for me                                 so yeah anyone yeah like you said anyone                                 of the salsa account can uh                                 can can start contributing you can also                                 do what's called an edge request it's                                 like a pull request in github                                 and anyone can sign up for for salsa you                                 can just search salsa.debian.org                                 and then you can start contributing and                                 submitting patches to                                 packages or even completely new packages                                 as well                                 and this is also a good way to become a                                 dm or debian developer this is ours                                 stefan mcnet for example became a dm                                 recently                                 i'm just checking i'll see i see a bunch                                 of highlights and                                 no questions there yet so yeah                                 um so this is what all these rfs's is                                 about these old packages                                 that need to be reviewed and sponsored                                 and uploaded                                 not sure if there's anything game team                                 games team we need to discuss at the                                 moment but if there's any questions on                                 how to get involved or anything about                                 what i mentioned so far                                 now is probably a good time to ask                                 unless there's anything else you want to                                 also cut it                                 doesn't seem like there's any more                                 questions so can it what's this one                                 who is gamecodes.com ah okay yeah so                                 that relates to the contrib uh                                 let's see what that is about                                 so tries to gather open source remakes                                 of great old games                                 in one place oh yeah this sounds like a                                 great project oh and they also mentions                                 common vm that i talked about earlier                                 there's so many game engines                                 i mean this is just the letter a in an                                 alphabetical listing of                                 of game engines it's crazy                                 um last night i was looking for a few                                 example game engines and then there's                                 like                                 sites with the top                                                                                                          what obviously not all of them are                                 necessarily playable                                 yeah but it takes time for the projects                                 to get that far                                 can you imagine getting all of this                                 package for debian this is quite                                 it should be an insane amount of work i                                 guess most of them are free                                 do they mention it here are these                                 licenses                                 yeah so you should be able to search the                                 list for an open                                 transport tycoon for example okay yeah i                                 see most of it my mit                                 gpl                                                               um three yeah so many many many free                                 so this also something for someone to do                                 to get involved with the gaming team                                 start                                 start getting more of these packaged up                                 well also it's good work because                                 it's how you can preserve games for                                 future use                                 because some of the older games just get                                 harder and harder to run                                 and the way you work around that is to                                 to to run them under some sort of an                                 emulator                                 but even that can become quite                                 cumbersome after a while so                                 having free engines to run all these old                                 games                                 and is really nice for future                                 generations so that they can also enjoy                                 these games                                 is any free game welcome to be team                                 maintained by the devin games team as                                 far as i know yes                                 i used to ask permission every time i                                 add a new game but                                 or a piece of software but lately i                                 can't remember what                                 was the last one i added i just added it                                 and no one complained                                 and even i think even non-free games are                                 also okay                                 they just have to go into the non-free                                 section or into contrib                                 if they depend on                                 non-free bits um what was i just going                                 to say about this                                 i guess the the the main question there                                 is is trying to get someone interested                                 in sponsoring your upload                                 yeah so it's obviously easier to do that                                 if it's a well-known game that that they                                 can go oh yeah i                                 i i recognize that someone would benefit                                 from that being in debut                                 oh yes what i was going to mention is                                 sometimes people start with games                                 because they think                                 game is easier than other types of                                 software but                                 sometimes games can get extremely                                 complex and                                 also games tend to have more issues with                                 i mean the upstream maintainers usually                                 have the best of intentions to make it                                 an open source game                                 but sometimes they accidentally include                                 a                                 non-free font or a piece of graphics                                 that comes from someone else that they                                 aren't actually supposed to be using and                                 then you have some choices you can                                 either patch those out which                                 can be a lot of work because maybe in                                 the case of a font you have to find a                                 free font that looks similar and fits in                                 the same dimensions as that non-free                                 font                                 or find alternate graphics to use what                                 we usually do                                 is we patch that out and then we file a                                 bug on the upstream bug tracker saying                                 look we know you want to re release this                                 game as a free game                                 but you accidentally included these                                 assets that you really shouldn't be                                 distributing                                 we found this that looks like a good                                 replacement maybe you should consider                                 replacing that in the upstream                                 repository as well and usually                                 with nedo too depending on how active                                 the upstream is                                 that gets fixed quite quickly                                 uh yeah so uh just on that uh                                 point i wanted to highlight a recent                                 game that i i would like to                                 get uh into debian uh called ministry                                 um but it turns out that                                 just as uh jonathan was saying that um                                 there's quite a lot of accidental                                 complexity there                                 so the first step i did was say oh hi                                 i would like this to be available in                                 debian and you can do that                                 you can check for that at wnpp                                 debian.net and you can just search for a                                 package name                                 to see if someone is interested                                 in it being available in debian and                                 so as a as a debian contributor i                                 went ahead and said yep i will look in i                                 would like to look into this                                 um but so the very first so the very                                 first thing you do                                 is try and compile it on debian and                                 obviously i couldn't compile it because                                 it needs                                 all of these different java uh packages                                 that are not yet available in debian                                 so if you scroll to the top of the um                                 rfp there means request for package                                 so it's just it's not necessary                                 so quite a lot of uh people just kind of                                 ignore them                                 um but i find them quite useful for for                                 documenting any                                 kind of small things like small progress                                 i've made towards packaging even if i'm                                 not actually                                 able to package the game yet so here you                                 can see                                 it's a fix that's blocked by a different                                 uh package so that means that in order                                 to                                 get industry into debian we need this                                 lib gdx                                 in debian which is kind of a middleware                                  that the                                  game developer has chosen to use uh and                                  you can do the same dance again                                  and you can see i i registered this and                                  said                                  um hey we need this for from industry um                                  and go but that one itself is blocked                                  so you go to there and you find                                  ultimately it ends up being                                  uh depending on what turns out to be a                                  new programming language                                  which is exactly what you don't want to                                  find and so                                  uh just it's just an example of the                                  uh complexity that can be involved in                                  packaging games                                  um hopefully at some point soon uh                                  kotlin will be available in debian                                  because other people will work on it and                                  then we can                                  start then we can go back and start work                                  on packaging the java middleware                                  and working back through the list and                                  then finally we'll be able to have                                  things like                                  industry or shattered pixel dungeon                                  yeah it's quite amazing sometimes you                                  look at a piece of upstream code                                  and you see oh it's just it's just tiny                                  little program it's like a few thousand                                  lines how hard could it be to possibly                                  package this                                  and and then you also go down this chain                                  and it turns out before you know it                                  you're maintaining                                  you know like you said an entire                                  programming language that you never                                  intended to maintain                                  and end up getting thousands of bugs for                                  it and it just                                  escalates so quickly it's amazing but                                  that's also what i like about the games                                  team                                  so unlike quite a lot of the other teams                                  it's not focused on just one language                                  so you get introduced to all sorts of                                  different fun                                  things                                  ah brian yes i've seen that on                                  on f droid                                  okay so any final questions before                                  we go it seems like we can just about                                  wrap up                                  oh uh i'm upstream other than license                                  check dependency check what can i do to                                  make packaging easier                                  ah that's a good question yeah i think                                  um having a clear license file                                  and making sure that all the assets you                                  said are actually free and that your                                  license                                  is actually correct that's that's                                  already a big                                  step because as debian developers we                                  hate doing work just to find out that                                  there was some                                  licensing gotcha and uh and                                  and you know we have to go another                                  through another round of submitting a                                  package again                                  uh and that link is also good the                                  upstream guide i think                                  paul wise works on that a lot or did i                                  at least                                  it i think it's one of these projects so                                  it used to be a bit                                  i forgot how comprehensive this is okay                                  so this is a very                                  comprehensive guide on what                                  upstream can do to uh and                                  the first um line already is what i                                  mentioned so yeah that is important                                  um releasing a top i think                                  using um tools like github                                  and similar the last few years made made                                  creating a tag and a table for that                                  quite a natural thing for developers                                  these days this is far less                                  an issue than it used to be um because                                  we had to explain in the past to                                  developers you know how to release an                                  upstream table                                  and it's just so easy and natural these                                  days so this has become a lot easier                                  um so yeah i'm not going to go through                                  all of this but                                  it does seem to be a good guide for what                                  you can do as an upstream                                  to make your software as                                  releasable in the distribution as                                  possible                                  and all of these apply to fedora and                                  arts linux and other distributions as                                  well so it's a good idea if you're                                  enough stream to                                  to follow these and it's mostly sensible                                  as well but sometimes it helps reading                                  it and                                  getting some tips and making sure that                                  um you actually do                                  or are a good citizen on the internet                                  when it comes to software                                  what would you consider more potentially                                  complicated to package a game                                  or a library easy question libraries are                                  difficult there                                  even when i see simple there's some                                  gotcha and                                  um for for many of them you have to care                                  about symbol files                                  um which i don't like working with i                                  don't like working on symbol files at                                  all                                  there's some helpers from the kde team                                  to help you with symbol files but                                  i still don't enjoy it and also with                                  libraries you have to care about                                  transitions                                  um so that means when you update the                                  library all the packages that depend on                                  the library also needs to get                                  uploaded again to be rebuilt against a                                  new                                  library so um i would say library                                  packaging is definitely for                                  at least a little bit more advanced                                  packages so if you're just getting                                  started with with packaging                                  i would not suggest starting with a                                  library because it's not necessarily                                  extremely complicated                                  but um it just makes stuff a bit                                  more complicated for you when you're                                  just getting started out i would advise                                  starting with um any other kind of                                  package than the library to begin with                                  obviously there's exceptions but for the                                  bigger part they're not                                  all that fun um                                  not to derail the discussion but i've                                  been through that i was struggling                                  with the certain software for packaging                                  and ended up going down a rabbit hole of                                  requirements                                  yep you're not derailing the discussion                                  don't worry about that                                  you're just agreeing with us are they                                  objective criteria on splitting binary                                  packages data extra etc                                  hmm good question do you have any ideas                                  on that                                  um um i think optional parts                                  are nice to split off um because then                                  you know if you can let's say um                                  let's take tux paint for example because                                  someone has actually found a bug against                                  my package there to split it up into                                  smaller pieces like                                  at the moment it installs an uh an                                  artwork                                  like like it does stamps that you can                                  place inside of your painting                                  and all the stamps are huge i think it's                                  something like                                                 so some teachers have asked that it gets                                  split off                                  because they have old computers with a                                  small amount of disk space in the lab                                  so they asked that it gets split off                                  into the the butterflies and the birds                                  and the animals and the flowers so that                                  they can install just the specific                                  stamps that they actually want to use in                                  their class                                  and uh yeah on that note some teachers                                  also said that it never it's the                                  creativity                                  if there's too many stamps because they                                  they use those instead of actually                                  painting something themselves                                  i'm going a bit off the rail but but                                  yeah that's                                  uh every package is different and                                  sometimes you just have to just                                  decide on what the technical how much                                  can you actually split it on a technical                                  level                                  and how much would actually be for the                                  user a common                                  separation there with um games                                  particularly                                  is that you'll find even within uh even                                  if you follow the recommendation to                                  set aside compiled um architecture                                  specific um                                  files from the generic can be installed                                  anywhere                                  which we said was any versus or earlier                                  even within those                                  data files that can that can just be                                  installed anywhere as jonathan says you                                  can split it up based on                                  the architecture and the common one in                                  gaming is obviously                                  you'll have um often for network games                                  you'll have                                  a client and a server                                  and also some fire most files which will                                  be used by either                                  so you'll end up with for example uh                                  something                                  i don't think stupid scar does this but                                  you you would end up with supertux cart                                  super talks card data super tux cart um                                  common supertux cart client and super                                  cart server                                  or making uh your work as a maintainer                                  more interesting                                  so that the user doesn't have to                                  download the bits that they don't care                                  about                                  cool it's like we've we've covered quite                                  a bit of                                  of what the gaming team is and a bunch                                  of introductory                                  stuff for debian and maybe how to get                                  involved for some people                                  um please join us yeah please join us                                  we'd like that and                                  we would be nice we'll help you we'll                                  help you get started                                  um like francesco and i think stephen                                  said earlier                                  sometimes you wait a bit for package to                                  get sponsored we know                                  it's kind of boring when you do a lot of                                  work and then it sits and waits                                  somewhere for someone to review it                                  but the idea is also to grow the team                                  get more debian developers involved                                  and hopefully over time we can just get                                  all these                                  these sponsorships getting moved faster                                  but with your help                                  it will happen                                  as i said before it's quite easy to just                                  contribute even without                                  going through any of the formal                                  maintainership processes just                                  find a bug and fix it in salsa yeah                                  that sounds good okay i guess that's it                                  from us did                                  yeah thanks a lot for listening and                                  enjoy the rest of the conference
YouTube URL: https://www.youtube.com/watch?v=TvKokvYzXg0


