Title: Community Game Development in Rust: A Biopsy
Publication date: 2020-11-24
Playlist: MiniDebConf Online #2 “Gaming Edition”
Description: 
	by Forest Anderson

At: MiniDebConf Online #2 "Gaming Edition"
https://mdco2.mini.debconf.org/talks/8-community-game-development-in-rust-a-biopsy/

Veloren is an open-world, open-source multiplayer voxel RPG written completely in Rustlang. It has similar aesthetics to Minecraft, and is inspired by other games like Cube World and Dwarf Fortress. The project was started in the summer of 2018, and has since seen over 100 unique contributors. Veloren has first-class Linux support, and also targets Mac and Windows. A majority of the developers also work from Linux-based systems.

This talk will be geared towards open-source game developers, developers interested in Rust, and those interested in complex engine systems. It will focus on many lessons that have been learned from the Veloren project. Some main points include building a diverse community, why Rust works so well for the project, and interesting concepts from engine development. The talk will also highlight some interesting optimizations we've found, and how we diagnosed them.

Veloren has contributors from all around the world, and has gone through many organizational transitions to build a healthy community. Novel and cutting-edge research has been implemented in Veloren. Many people from different backgrounds have added their flair to Veloren, creating a unique visual experience. This talk will examine how it was all built.

Room: Main
Scheduled start: 2020-11-22 18:30:00
Captions: 
	                              welcome to our next talk                               community game development in ross a                               biopsy                               with forest anderson forest is a student                               who enjoys making games and running                               security competitions                               he is currently a four-year student at                               carleton university in                               taiwan canada he is a student in                                computer science with honors in game                                development                                forest is the metallic on the bellerin                                project                                in which he focuses on ci and community                                development                                he also writes a weekly dev blog                                that highlights the project's forrest                                has done research in the graphics                                images and games lab at carleton                                his research focuses our image                                processing and web                                security please welcome him and enjoy                                his talk hello everybody                                my name is forest anderson today i'm                                going to be talking about community game                                development and rust from an open source                                perspective                                so a little bit about me i am a student                                at carleton university in ottawa canada                                where i'm studying                                uh computer science with honors in game                                development um                                i work on a ton of open source projects                                and i have been doing so for about the                                last three years                                and i also enjoy doing a lot of game                                development and computer security                                the game i'm going to be talking about                                today is called valoren                                uh valoren started around                                            came from                                a group of people who got together and                                were inspired by                                a game that they had played previously                                but was closed source and wasn't getting                                that many updates                                and this game was called cube world you                                can think of it as very similar to                                minecraft in a way with the voxel sort                                of aesthetic                                but a lot of the gameplay is different                                and so                                valoren is an open world open source                                multiplayer voxel rpg                                so in minecraft you go around and create                                many things in a voxel world whereas                                this one's more                                about exploration and character                                development and the world around you                                but the interesting thing about valoren                                is it's built by an open source                                community from                                around the world and so                                uh with valoren the project has been                                going for approximately two years now                                and we've learned a lot about open                                source development and                                the language that we are using to build                                it                                and so i'm going to be going through a                                lot of that in the talk today                                so the layout of the talk we'll start by                                with talking about the community uh                                and we'll go in depth on some tips and                                tricks that we've learned                                we'll then go into the engine where                                we'll discuss what we've learned while                                working with the rust language                                third of all we'll talk about the                                research and development so some                                interesting systems that have come                                from our development and finally we'll                                discuss the future of velourin                                in regards to how we financially sustain                                ourselves                                as well as some ideas we're hoping to                                move towards in the future                                so to start off let's talk about the                                community                                so veloren has over                                             contributors who have                                added a little bit of code to the game                                plus many other artists                                and composers and designers and writers                                that have also helped with the process                                we use a working group structure and we                                focus on                                                                                               try to keep the hierarchy very flat in                                 the sense that each team lead                                 their purpose is to work on the ground                                 level with any beginners or anybody                                 who needs help we also use discord as                                 our main                                 form of communication and we're able to                                 very easily discuss with the players                                 their thoughts but also                                 keep in touch with our developers                                 so velourin itself is an open source                                 project is released under the gpl                                  license                                 it was built in rust line from the                                 ground up and from the beginning                                 as well when we started the project                                 in                                                                    sense of game development                                 and so we'll kind of take a look at how                                 we've dealt with the ecosystem                                 veloren targets linux as a first class                                 operating system                                 and uh we build for windows and mac os                                 however since most of the developers                                 work on linux in the first place                                 um it's a high priority for us to make                                 sure that                                 it's supported very well                                 so as i mentioned we're using the                                 working group structure to manage                                 our teams and so we have approximately                                 i think                                                          focuses on a specific domain so each                                 group lead                                 their purpose is to be able to be a                                 point of contact for many of these                                 ideas to be able to help beginners um                                 and to be able to discuss what they are                                 working on                                 in team meetings and so                                 the working groups that we have i've                                 kind of split them up into four                                 different categories here                                 and so we have the core                                 which deals a lot with the engine itself                                 and so we have a lot of stuff like the                                 rendering                                 how the combat is done world generation                                 and multiplayer                                 support which is where i focus most of                                 my time we have the meta team testing in                                 ux                                 uh under content we have many people who                                 are contributing to the project who                                 might not know a ton about code but are                                 amazing artists and                                 composers and designers we have people                                 who can even contribute                                 if they are from a different country and                                 speak a different language we have a                                 translation uh system that will allow                                 any language to be put into villaran and                                 we're also kind of experimenting                                 with modding it's been on and off for                                 quite a while                                 but i'll discuss that a little bit more                                 in the engine section                                 so the first one of the groups that we                                 have is the meta group and                                 this is the group that i am the lead of                                 and so this group focuses on many of the                                 intermediate                                 sort of problems that come up in the                                 project and so                                 whether it be reaching out to                                 either do interviews or to write                                 articles i                                 also write the weekly dev blog and this                                 is like a really great way to                                 get contributors work noticed uh                                 i work on making sure that the community                                 is doing well and is quite healthy                                 and i do a lot of stuff with our get our                                 uh see a continuous integration and                                 continuous deployment as well as a lot                                 of                                 pretty fun rust compiler stuff to try                                 and optimize our workflow                                 so with the blog this is a                                 some content that i put out each week                                 and this really allows                                 our community to be able to understand                                 what's happening on the project we want                                 to be very transparent with it                                 but it also allows developers to talk                                 about what they've been working on                                 because for developers who have been                                 taking time out of their day to                                 contribute                                 and volunteer to a project once they                                 have a feature that is ready                                 it's incredibly important to share that                                 with the community so that they know                                 that their work is being recognized                                 but also so that the community can see                                 all of the cool stuff that is going on                                 and how they might be able to get                                 involved as well                                 and we're almost at our hundredth                                 uh dev blog                                 and i'm pretty excited for that because                                 i started writing the dev blog when i                                 started the project in january                                                                       so throughout this talk we're going to                                 also hear from a couple other team leads                                 on the project                                 and so to start off uh we're going to                                 hear from the game design lead selenium                                 i'm selenitium i'm the game design                                 working group lead                                 and i've been working on the project                                 since uh late                                      i live in the u.s and it's been a crazy                                 fun experience so some of the coolest                                 things that we've managed to achieve                                 with our design it feels more like an                                 improvement on an idea that's come                                 before                                 so a good example of this is we decided                                 to have                                 the skills and abilities that the player                                 uses                                 come from the specific weapons being                                 used rather than a class and                                 as was pointed out this is kind of like                                 a class system                                 because you're choosing your class based                                 on which weapon you're equipping but                                 it keeps you from being locked into a                                 certain                                 role without being able to change too                                 much                                 so the structure of getting us together                                 is essentially on the discord channel i                                 will make a                                 game design meeting announcement and                                 then people will show up as they want to                                 and we typically end up bringing up more                                 people                                 to the meetings than are actually part                                 of the game design working group which i                                 really like there are people who are                                 just listening in because they want to                                 know                                 what's going on they see people sitting                                 in chat and they pop in and they just                                 listen                                 so we end up with                                                     and                                 organizing ideas is everybody talking                                 about what                                 they think is a good design and then we                                 all talk about                                 ways in which that could inhibit certain                                 other elements                                 uh cause problems in certain other areas                                 and we and we try to                                 regardless of what the idea is talk                                 about it in its entirety before making a                                 decision whether we like it or not                                 a good example is the last time we had a                                 meeting we were trying to decide                                 if boats and exploring water was going                                 to be                                 just as easy as walking around on the                                 land and whether or not the player would                                 need to                                 put more time and effort into accruing a                                 boat and all of the                                 exploration consequences of what that                                 would mean                                 to the player and where they can go all                                 of these things need to be discussed                                 before we make a decision about it so                                 having this many minds thinking about                                 the same                                 system or idea for game design is                                 probably our strongest                                 asset is that we have so many people                                 saying and considering and thinking in                                 ways that                                 the rest aren't because we're all                                 different it's taught me a lot about how                                 to share ideas and how to perfect them                                 because somebody will probably come to                                 the meeting with an idea                                 and then we'll leave that meeting with a                                 version of that idea that doesn't look                                 too much like it did when it came into                                 the meeting but                                 that is a better version of itself                                 so next let's go over a little bit of                                 the timeline of valorem                                 so in summer                                                         reddit asking if anybody would be                                 interested in working on an open source                                 project                                 that took inspiration from cubeworld                                 and many people were interested and                                 so they started working on the first                                 iteration of the velouran engine                                 um they worked on this for approximately                                 six months until the end of                                      in which they accrued a lot of technical                                 debt and                                 issues that i work that                                 were not foreseen and so they started                                 working on the                                 groundwork for a new engine and at the                                 beginning of                                                       joined the project as well                                 and so with this new engine it featured                                 many new things uh                                 the architecture was a lot uh more                                 thought out for what the purpose was                                 and it removed a lot of the issues that                                 were found in the first                                 legacy engine throughout                                            versions were released and it started                                 with                                 uh valoren being a very simplistic world                                 where you could sort of do a little bit                                 of multiplayer you could sort of do                                 a little bit of terrain generation um                                 but it moved up to a point where there's                                 a lot more terrain features                                 and content at the end of                                      and throughout                                                         were also released                                 and in fact we're going to be releasing                                                                               so with voloran being an open source                                 project we've learned a lot of                                 very cool things about developing in an                                 open source community                                 so first and foremost uh open source is                                 not a company                                 and so there are many things that we can                                 accomplish because we are an open source                                 project                                 that you wouldn't see at larger                                 companies                                 and so one of the biggest things is that                                 we do not experience the same deadlines                                 and we are not held accountable to the                                 same clients                                 this means that when someone wants to                                 come in and work on the project                                 they can work on whatever feature they                                 want for as long as they want and                                 because of that we've gotten some very                                 cool systems                                 implemented in valorem and i'll talk                                 about a little bit about that later                                 we also focus a lot on making sure that                                 we have sustainable development                                 and so the idea behind this is if                                 someone is unable to work on their                                 project for                                 a period of time there needs to be an                                 easy transition for them to stop working                                 on the product and then come back later                                 when they need to                                 and so this can often be because people                                 are having like a lot of work to do or                                 they have                                 a school to worry about or anything like                                 that and so                                 having a very welcoming community that                                 makes sure that we're not                                 forcing people to work on the project is                                 essential to us                                 also sustainable development and                                 sustainable                                 sustainable development means that we                                 can have beginners come and work on the                                 project                                 without overhead of having to go through                                 the process of hiring them                                 and make sure that they're the only one                                 that is able to work on it                                 because of this we want to make sure                                 that it's very easy for beginners to get                                 up and running on the project                                 and so many of our team leads work very                                 closely with new developers to make sure                                 that they're able to accomplish what                                 they like                                 also not everything needs to be perfect                                 in an open source project                                 as i mentioned we don't necessarily need                                 to hit the same deadlines and if a                                 feature isn't ready for one version it's                                 okay it can be pushed back to the next                                 version                                 we also make sure that our um when                                 having discussions                                 uh it's okay to be wrong it's okay for                                 people to change their mind                                 and it's okay to go in different                                 directions if we find that something                                 isn't working                                 so from the management perspective some                                 of the ways that we accomplish these                                 uh pillars is uh                                 first of all making sure that when                                 people come to the project                                 uh they get where they need to be and so                                 for example if an                                 expert in a specific domain comes and                                 works on the project                                 they need to be able to talk to the team                                 leads that are able to                                 get them where they need to be right                                 away so we've had some experiences where                                 some                                 people who are very well versed in                                 graphical debugging have come                                 come into the project and we've gotten                                 them set up as quickly as possible                                 with the tools that they need so that                                 they can give us a lot of information                                 with their specific domain we've also                                 found that collaborating with other                                 products in the ecosystem has helped us                                 out significantly                                 there are a lot of rust gamedev products                                 on the go right now                                 and hearing from people in the community                                 not only helps us                                 know about other technologies that we                                 could potentially use but also get ideas                                 of ways that we could be doing things                                 better within the rust language                                 we create a strong like entry level for                                 beginners by tasking many of our issues                                 as                                 or rather labeling them as beginner                                 issues or as easy issues                                 and the purpose behind this is that we                                 want beginners to come on and start                                 working and getting small wins right                                 away                                 they don't need to be working on the                                 hardest tasks and getting stuck and then                                 leaving                                 but instead if we can help them get past                                 the entry point                                 then oftentimes we've seen them                                 contribute significantly more                                 and one of the biggest things is that we                                 need to make sure that beginners                                 are not only getting the help that they                                 need but also getting their work shown                                 off                                 because when they come in and work on                                 a small task it's very important for the                                 experienced core developers to also                                 understand                                 what the process is like for them so                                 hearing from the beginners what kinds of                                 stuff that they got stuck on                                 and what's the kinds of stuff that they                                 found very cool about the engine i                                 and so what i do is i whenever i can i                                 reach out to beginners and i                                 get them to write a section for the dev                                 blog                                 and this is a very valuable write-up for                                 everybody                                 uh next we also work very hard to uh                                 continuously                                 improve the community and so there's a                                 couple of things that we really have to                                 keep in mind                                 there are when you're working with                                 people from around the world                                 there's a lot of barriers that you have                                 to overcome so for example one of the                                 biggest ones is the language barrier                                 you also have time zones but                                 specifically when communicating often                                 we're communicating over text                                 and so for someone who isn't a native                                 english speaker it can often be                                 difficult to convey                                 the idea exactly as you intend and                                 because of that it might be                                 misinterpreted                                 and that can often lead to tension and                                 so                                 keeping an eye on the community and                                 making sure that                                 things don't get heated is something                                 that all of our core team and admins                                 take very seriously                                 we also keep in mind that good skill                                 does not override toxicity and so what                                 this means is that if someone                                 is an expert in something on valorin if                                 they                                 are having difficulty uh                                 like staying positive in the community                                 and if they are bringing the community                                 as an over                                 like in as an entirely down um then it's                                 much more important to make sure                                 that they are not part of the project if                                 they can't abide by the rules and the                                 code of conduct                                 so next up let's hear from the assessed                                 visual design lead                                 val hi i'm fao i'm                                 currently taking the role of the lead                                 artist for veteran i'm living in germany                                 and joined the project in                                               mostly consists of coordinating all the                                 people                                 wanting to contribute hired to our                                 project another                                 role i have to fulfill is to have like                                 an oversight of                                 all the assets we have and that's not                                 only art that's                                 also audio and um things like documents                                 and spreadsheets                                 and organizing our google drive folder                                 where contributors can just                                 upload things they think might help us                                 so it's                                 lots of assets management and file                                 management but not only that it's                                 also reviewing a piece of art people                                 hand into us                                 and send in to the various discord                                 channels we have                                 and it's all about this open process                                 of showing pieces of art openly to                                 everyone and making everyone able to                                 give feedback                                 onto it and and then combining all this                                 feedback                                 into like something usable for the game                                 that                                 fits our overall theme and the quality                                 we want to achieve with                                 the pieces of art we include into the                                 game so what tools am i using well when                                 i started off i didn't have any                                 professional                                 tools but the free tool magical voxel                                 which is                                 closed sewers but still open source                                 friendly                                 piece of software um it runs on all                                 platforms so                                 how is the our style determined to talk                                 about this i have to go back to our                                 origins how this all started and i think                                 it's very clear that we're coming from                                 the minecraft                                 cube world style with the voxels all                                 around i personally call it a cheap                                 clone visually of these games                                 which is totally okay because you have                                 to like start from                                 somewhere at this time in                                               where we came from and                                 while the engine advanced in features we                                 were able                                 to apply more and more um visual details                                 to our characters and we kind of                                 developed a feeling for what we wanted                                 bellerin to look like it's more about                                 creating this                                 maybe something like high fantasy                                 medieval feeling                                 you'd find in games like world of                                 warcraft                                 so we'd be able to do things that are                                 also                                 maybe a little bit more creepy like                                 zombies                                 and undeads and ghosts and demons and                                 all this kind of stuff and you would                                 take them more serious                                 because they would end up looking like                                 something that could                                 hurt your character very badly and i                                 think yeah that's                                 that's our style                                 all right next up let's take a look at                                 the volarin engine                                 the valerian engine is built in rust                                 rust is a programming language that came                                 out in                                                                  but it offers us a lot of benefits that                                 older systems languages cannot                                 so there's something else known as a                                 rust trifecta and this is the idea that                                 rust provides                                 three pillars um the first one is that                                 it's fast and so it operates at the same                                 speed as c and c plus plus                                 the second is that it's safe and so from                                 rust's memory safety guarantees you can                                 be sure that an entire suite of possible                                 problems                                 will be completely eradicated and this                                 is especially important in game                                 development because                                 when you are running your game at                                    frames per second it becomes                                 very very difficult to debug potential                                 memory issues or race conditions that                                 might be happening on different threads                                 third of all rust is incredibly                                 concurrent because of its memory safety                                 when you are running code in different                                 threads you can be sure                                 that the memory safety guarantees are                                 going to make sure that when your                                 threads come back                                 they're not going to be overlapping with                                 one another and fourth of all                                 rust is incredibly ergonomic and so when                                 you're working on larger teams                                 it makes it very easy to do parallel                                 development without being scared that                                 someone else might mess up something                                 that will then be difficult to debug                                 now another great part about rust is                                 that instead of it being object oriented                                 in game development you focus on an                                 empty component system in rust                                 and an entity component system is sort                                 of a different paradigm from                                 object oriented in which you focus on                                 entities uh                                 and the memory that they they take up                                 but because of this                                 you can get tasks to                                 in an incredibly parallel way across                                 different threads                                 and so we use an entity component system                                 with vlarin and then                                 this is one of the key factors that                                 allows us to                                 run the game and run the server in an                                 incredibly                                 uh parallel environment                                 rust also has a great crate ecosystem                                 and what a crate is is                                 um it's rust version of a library or a                                 package and so                                 with other systems languages often you'd                                 have to install library on your computer                                 and make sure that your compiler linked                                 it                                 but with rust on the other hand it has a                                 very strong patch packaging system that                                 takes care of all of this leg work for                                 you                                 this means that in the game development                                 world when you want to import a whole                                 bunch of math crates and graphics crates                                 and windowing crates                                 you're able to do so in such an easy way                                 and so                                 there's this website are we game yet                                 that tracks how far rust has gone                                 in the game development ecosystem um and                                 what problems you might run into                                 and then you're actually able to look by                                 category and see                                 if you're looking for example for some                                 type of ai                                 package then you're able to go and see                                 what options are out there for you                                 next up let's hear a little bit from our                                 networking and multiplayer lead                                 xmac hi my name is marcel mertens i am                                 from germany                                 and i am leader of the soviet                                 multiplayer working group in velon                                 i started with the project around one or                                 two weeks after                                 zestawa initially announced it i am                                 personally i'm a guy who is really                                 interested                                 in programming like back-end stuff                                 and like this is something which makes                                 physics simulation or networking coding                                 especially interesting for me velon uses                                 the rust language                                 it was totally new to me when i first                                 got in contact with                                 lowen but it's super easy to learn                                 there's a book                                 so for a custom build engine we ask                                 ourselves how to do networking best                                 and we looked at other protocols and are                                 a bit inspired by what is http                                                                                                        connection but they can have multiple                                 streams of data                                 and this is interesting because when we                                 are running a game                                 and there are multiple clients connected                                 to it there are different kinds of data                                 which need to be                                 sent to the clients or back to the                                 server the easiest                                 thing you can think of sending on one                                 side terra data                                 like big worlds which can be millions of                                 blocks and you can send like entity                                 update data                                 or for example if you are in a fight and                                 want to know the position                                 of your enemy and what is important for                                 server is that                                 if you are in gameplay and you are                                 fighting for example                                 that you are getting the current                                 position of the enemy to the point and                                 you're getting it as fast as possible                                 so the low end engine is using an ecs                                 or entity component system to structure                                 our                                 in-game entities the ecs allows us to                                 assign different components                                 eg health physics states if it is                                 invincible                                 two entities and the entity can be                                 everything which appears in the world                                 we are using the entity component system                                 on both the server and the client                                 this makes our coding very easy because                                 we can just                                 take the whole state compress it and                                 send it over the data is                                 very compact and easily compressible                                 we build our engine from ground up for                                 multiplayer                                 so what we are doing is even a single                                 player game is basically just a                                 multiplayer server                                 with only one client connected to it                                 which makes it super easy                                 to introduce a feature for single player                                 as well as multiplayer so we don't have                                 to                                 double the coding when you introduce a                                 feature into the server then it's also                                 automatically                                 introduced into the client for valoren                                 we use gitlab as our                                 git platform this provides us with many                                 benefits not only for                                 the version control side of things but                                 we also use it to track all of our                                 issues                                 and this allows it to be a really great                                 place to be able to refer anybody if                                 they need to look at the code if they                                 need to see issues if they need to see                                 any merge requests that are coming in                                 and one of the really                                 important things that we do is we label                                 issues uh further priority                                 for the working group that it affects                                 but also for their difficulty                                 this means that if someone comes to the                                 project who wants to start contributing                                 then it's much easier for them to find                                 something that they can work on that                                 doesn't necessarily touch                                 all systems and so it can be quite well                                 scoped and quite easy to take care of as                                 a first task                                 we also use a continuous integration                                 system that is built into gitlab's                                 pipeline                                 pipeline this system allows us to do                                 checks to make sure that                                 before code is merged into master that                                 it is verified                                 that the tests run that benchmarks pass                                 and also that                                 well more specifically if there's uh                                 some code that was added that slows down                                 one of those systems in velourin                                 we can find that ahead of time we also                                 make sure that there's no                                 major linting issues as well as the code                                 is formatted nicely                                 next up let's hear from our animations                                 lead slipped                                 alright so uh my name is justin or                                 slipped in the discord i'm from the east                                 coast                                 of the us and i work primarily on                                 animation                                 and velerin so i joined the project                                 right about the time that it started                                 when i did a lot of work with like art                                 and assets and things like that and then                                 when we                                 were able to build the animation engine                                 into the game i took over                                 working on a lot of that and so we've                                 gotten to a point where we                                 animated humanoids and then from there                                 we took that into animating different                                 kind of quadrupeds and things like that                                 we're starting to get into animating                                 like bosses and a lot of exciting stuff                                 like that                                 we don't work in any outside program                                 like blender or something like that that                                 i think people would be used to                                 we do everything in engine and so                                 everything is hard-coded which is kind                                 of                                 a blessing and a curse for us what it                                 means is that we                                 first off we're able to do hot loading                                 animations which gives us this really                                 nice setup where we can just                                 save our files and then instantly see                                 the results of that in-game and so we                                 can instantly                                 see the animation that we're doing in                                 real time which is a lot better than you                                 know what you would get if you're                                 working in an outside program                                 um the downside to it of course is that                                 we we do code everything which i think a                                 lot of people would not be super                                 familiar with right away but once you                                 once you really get into it you                                 understand what you're doing i think                                 it does become very intuitive and so                                 bullarin has                                 a lot of nicer aspects of it doing                                 things the way we do it we can work with                                 things like velocities                                 and orientations of entities in a way                                 that's very advantageous you know we can                                 bring those right in                                 and see the results of it on screen and                                 use those to to alter the animations in                                 a procedural way                                 and generate a lot of nice results from                                 that but i would say                                 the main thing i've learned about                                 animation since i kind of get into it                                 because i hadn't really animated                                 anything before is about just how much                                 of an iterative process it is and so if                                 you                                 look at the game through you know                                                                                                     most of the progress is not so much                                 expansive but just within each animation                                 like a very slow progression                                 to where they get to where they are                                 today and we're we're not perfect i mean                                 we're going to continue to                                 to develop the same animations i'm sorry                                 in a pretty big way but just                                 adding on to everything as we go has                                 been has been really exciting and like                                 just learning different bits about                                 things like you know orientation tilting                                 and velocity tilting has been very                                 exciting and                                 um you know throwing in different tools                                 to to make things work in different ways                                 that are really unique                                 recently we added a paste system into                                 our quadrupeds and so now they go                                 through like a full                                 series of gates from like a gal up into                                 a sprint into trot and things like that                                 and so they are looking getting to a                                 point where they look fairly finalized                                 with with a lot more still to come there                                 next we'll take a look at some of the                                 research and development that have gone                                 into the systems in valorem                                 one of our biggest systems is our world                                 gen system                                 and this is built up from many different                                 uh sort of                                 subsystems the idea behind the world gen                                 system is that it sort of                                 decides how the world is built before                                 the player will start playing on it                                 one of the systems that really gives it                                 a lot                                 of what it is is the erosion and river                                 system                                 this is something that is simulated                                 during the                                 map creation and it allows for actual                                 realistic water paths                                 throughout the map and so the idea is                                 when you have rivers eventually they'll                                 get fed into a larger basin of water and                                 so it simulates a lot of different                                 uh techniques in uh computer research                                 on how a rover erosion should be done                                 and then we get some really interesting                                 results we get valleys that have rivers                                 in the center                                 and the rivers sort of cut their own way                                 through and                                 so this kind of just shows that the                                 river will take the least path of                                 resistance where it can                                 we also get really nice sort of winding                                 rivers and finally we also get                                 split sid rivers and where rivers will                                 run into one another                                 and so this system adds not only the                                 rivers and the                                 water to the world to make them very                                 realistic but also how                                 a lot of the mountains are generated                                 because the erosion                                 from the mountains will run off and sort                                 of                                 come down to the bottom and then the                                 mountains will look a lot more realistic                                 as well                                 another uh subsection of velourn is                                 our launcher so we have our launcher is                                 called airshipper                                 it allows us to ship to any platform                                 very easily and keep people updated                                 they can easily download the most recent                                 nightly uh they can                                 see what has been happening in velourin                                 as well                                 as the most recent change log                                 another really big thing that adds to                                 how veloren looks                                 is the changes that have been recently                                 made to the landscape                                 and so one of the biggest ones is the                                 level of detail and the idea behind this                                 is when you have                                 mountains very far off in the distance                                 you don't want to render every single                                 cube and in fact you you can't just                                 because there's so many of them                                 and so when you put them all together                                 you can                                 build a mesh that describes what the                                 terrain looks like                                 and then you can see mountains very far                                 off the distance that are very low cost                                 on the computer there have also been                                 recent changes to how clouds are                                 rendered                                 and lighting and shadows have been                                 overhauled so that                                 mountains off in the distance throughout                                 the day you can see shadows                                 hitting them differently and from this                                 we get some new                                 breathtaking views with fog on the                                 ground                                 clouds in the sky and very nice lighting                                 on the mountains                                 this was one of the biggest changes that                                 we made to velourin because                                 historically voxel games similar to this                                 have had a view distance that is capped                                 at a certain length                                 but in valerian when you see a mountain                                 off in the distance it's not fake it's                                 not just a backdrop you are able to go                                 up to it                                 and explore the mountain as it looks to                                 you                                 next we're going to hear from zester                                 about the process behind world gen                                  and world simulation i'm josh                                  i'm a computer science graduate and in                                  my free time i thought i'd take up                                  a little project which has since grown                                  far larger than i ever thought it would                                  during velour's development we were                                  quite inspired by certain other games                                  notable examples that we list are                                  minecraft legend of zelda                                  and also dwarf fortress the last of                                  those is one that i'm particularly                                  interested in                                  i've always really enjoyed dwarf                                  fortress i admit i've often found it                                  hard to get into but                                  that's not for lack of enjoying the                                  gameplay once i'm there and                                  one thing i wanted to emphasize in                                  velourin was the extent of which the                                  world was alive                                  uh one particularly interesting thing                                  about dwarf fortress is that the                                  characters in the world are not just                                  phony they don't appear as and when the                                  player gets near and so on the world                                  actually simulates the characters                                  even when you're not around and along                                  with this they'll each have a history                                  so that history may go back maybe                                                                                                                 will go back                                  further and further and all in all you                                  end up with a few hundred years of                                  history that uh simulated in this world                                  it's it's quite interesting because this                                  sort of systemic approach                                  to game development because you have all                                  of these interacting                                  systems you have the economy you have                                  battles and wars and monsters and                                  alliances between different groups and                                  so on diplomacy and all of these things                                  work together to create a world that                                  really feels authentic                                  when you play the game you know a                                  typical trope is to have                                  a quote-unquote procedurally generated                                  world where                                  things just pop into view and there's no                                  sort of                                  cohesion between everything if you see a                                  mountain the only reason for that                                  mountain being there is that                                  the noise function that generated gave a                                  particularly high output at that moment                                  and there's a certain amount of                                  dissatisfaction that comes with that                                  right because you've not got a                                  justification for that mountain being                                  there whereas in dwarf fortress                                  the game simulates things like corrosion                                  and so on and so you have a                                  justification for that mountain being                                  there                                  and it will cast a shadow on other pits                                  of the ground and so on and you'll get                                  trees                                  nearby in the shadow and it'll have a                                  rain shadow even and things like that                                  and then that might then influence the                                  civilizations that appear around the                                  area right because you have one side of                                  the mountain that has more trees                                  so it's going to be better economically                                  for civilizations that                                  need trees to survive so you're more                                  likely to get elves on that side for                                  example                                  and all of these links between different                                  seemingly independent things within the                                  game                                  produce a result that feels believable                                  and feels like when you're exploring                                  you're exploring something that's                                  tangible                                  and you're able to reason about the                                  world                                  next we're going to take a look at some                                  of the future of velourin                                  so first off let's take a look at                                  funding voloran                                  started as a side product for many                                  people and                                  the point of it was that would be open                                  source anybody could play it for free                                  um however over time we found that there                                  are costs that we have to accrue                                  and so one of the primary ones is the                                  server costs for the game as well as for                                  our continuous integration and other                                  services um                                  we've been using our own home servers to                                  handle most of it                                  but in the future we do need to make                                  sure these can be sustained                                  and so we found a couple different ways                                  to do this um the first one that we've                                  implemented is an open                                  open collective page and so even though                                  this is a side project for all of us and                                  we aren't expecting anything out of it                                  there are a lot of people who want to                                  contribute and help with the project                                  and some of them are able to donate                                  their time but a lot of other people are                                  more incentivized to donate their money                                  and so um this is because they know that                                  they can help the project out if they                                  donate a little bit and so um we've                                  given them the avenue to do so                                  and currently this is uh just being used                                  for                                  server costs and other costs that uh                                  valoren is using                                  we also have many of our developers many                                  of our core developers they have their                                  own patreon page                                  and we make sure to link out to them                                  wherever we can                                  because uh for the developers if there                                  is someone who sees that                                  perhaps our lead artist is working on                                  something that they really like                                  then it makes a lot of sense to support                                  that person                                  on their own but it also makes sense and                                  we've seen this                                  paradigm sort of happen in many other                                  open source projects such as godot                                  many of the core team members are                                  starting to be hired on by                                  the revenue that the product is able to                                  generate                                  through their open collective and so                                  although the project always stays free                                  many people are willing to donate so                                  that the engine can go further                                  and then they can hire core contributors                                  and so this is an approach that we've                                  sort of looked at going towards in the                                  future                                  especially if uh we are able to                                  uh uh gather more interest in our open                                  collective                                  however we've also sort of considered                                  the potential of                                  releasing the game on steam for a small                                  price anybody can still play the game                                  for free through our launcher                                  however to get it on steam uh there                                  might be a five or ten dollar                                  charge and then this would help a lot                                  not only with the server costs                                  but also uh making sure that                                  we can offer a little bit back to the                                  core developers who have                                  spent so much time on the project                                  we distribute velourin of course you can                                  download the executable                                  directly to your operating system                                  however we quite a few package managers                                  um we make sure to keep them up to date                                  and so                                  with nyx we have someone who came in and                                  wrote                                  the package file that nix needs                                  and so it's available in nyx we also                                  have it available on                                  flat pack in the aur and finally                                  gamer os has packaged valoren i believe                                  it was in august into                                  their base operating system                                  valoren also does a decent amount of                                  outreach as i mentioned we have                                  our blog post that we put out every week                                  but                                  we sometimes make youtube videos with                                  some development updates                                  or showing off the new version of lauren                                  um                                  a couple of months ago i did an                                  interview with gaming on linux in which                                  i talked about a lot of the concepts                                  behind the development of                                  lauren and uh this was a lot of fun to                                  do and it was super cool to be able to                                  then link to this and show many of my                                  friends what i've been working on                                  in the future we hope to keep doing this                                  type of outreach because it's very                                  important not only to                                  show off what the product is doing                                  project is doing but also                                  the accomplishment accomplishments we've                                  made within the rust language                                  and be able to show off people's work                                  that they've been putting into the                                  project                                  and finally we've also seen some                                  presence on reddit we have                                  of course our own subreddit where we                                  show off a lot of our own content                                  however                                  many people have uh been posting to                                  other subreddits about                                  velourin and so we have uh two posts                                  here that went uh                                  pretty viral relative to our other posts                                  that were                                  by um uh random members of the community                                  and it's very cool to see that many of                                  the                                  uh other subreddits and other gamers are                                  becoming interested in this type of                                  project because it started out as a very                                  small open source project                                  but it has grown to something that we                                  think a lot of people will                                  enjoy when we release a more final                                  version                                  and that is it for my talk uh thank you                                  very much for everybody                                  for listening i will i think i have a                                  few minutes for questions so i'll take                                  those now                                  two one go                                  thanks a lot for your wonderful talk for                                  now let's see the questions we have                                  okay the first one what made you decide                                  on the current org structure and do you                                  have any recommendations for new free                                  software projects                                  starting off yeah so i think this is a                                  pretty great question because especially                                  when it comes to                                  game development in the open source                                  sense you kind of have to look at it                                  from a different perspective than you                                  would                                  other projects a lot of people have come                                  to work on velouring because they're                                  quite interested                                  in what they can contribute to it and                                  certain systems that they find very cool                                  and so for them their motivation                                  is sort of building off um the game as                                  it continues to expand                                  now if we compare that to many other                                  open source projects people might be                                  contributing to five or ten open source                                  projects and so they don't have the same                                  um amount of like connectedness to the                                  project now i think further one of the                                  big things that we've also done                                  is um we follow sort of an iterative                                  process on how                                  we go about organization and so at the                                  beginning when i started                                  um i'm pretty sure we didn't have like a                                  sense of teams we had some core                                  developers but that was about it                                  we brought in the working groups a                                  little bit later i think probably                                  late                                                          um maybe somewhere in between i'm not                                  entirely sure but the idea is that we                                  need to keep improving                                  uh on how we do it because we don't have                                  one person up top managing every single                                  team and making sure that everything is                                  okay                                  and so when someone comes in and talks                                  about how they think that the product                                  can use                                  this extra group or they think that it                                  can go in this direction we definitely                                  need to listen to them and work with                                  them on these ideas                                  okay the next one those valorian support                                  ray tracing yeah so this is definitely a                                  pretty                                  great question um it does not uh however                                  we do currently raycast our clouds and                                  so                                  um there are some areas in which uh                                  uh like like ideas like this are used                                  however when it comes to the graphical                                  side um we're doing everything uh                                  uh of course like with like lighting                                  we're like looking at like new research                                  papers and implementing it and i think                                  like                                  that's not my domain but i know that the                                  guy who implemented it is like a legend                                  and                                  he does all this crazy stuff that i                                  would never comprehend but um                                  i think in the future uh since it is                                  open source and since um there's new                                  crates coming up for us all the time it                                  is possible that                                  it might be easy for us to sub in some                                  support for ray tracing but that being                                  said i i                                  can't speak to it too much myself                                  okay how much does the server hosting                                  cost for hosting the server for                                  the players yeah                                  so uh when we host the servers                                  currently we're hosting it in hetzner in                                  germany and i think per month                                  is something like six euros um and so i                                  think more importantly                                  the uh the specs that are needed to host                                  a certain amount of players is what we                                  need to care about because                                  we kind of want to expand out further                                  than just a simple co-op game and so                                  if you want to have say                                             playing on one server interacting with                                  one another in the same region                                  then we need to be able to come up with                                  benchmarks on what that will need                                  and so uh recently in our                                                think we had about                                  a maximum of                                                        online at one time and our server has                                  four gigabytes of ram                                  um there were a lot of points in the                                  release party in which we crashed                                  because we ran out of ram and so that                                  wasn't great                                  but we have done a lot of stretch                                  testing to try and learn more about this                                  now also for cpus um we i                                  think we're currently using uh a uh                                  two virtual cpus on our server and so                                  this is important because we need the                                  main thread to be doing a lot of the                                  uh tick work every frame and then also                                  an extra thread to be able to                                  handle a lot of the asynchronous tasks                                  so                                  players connecting and disconnecting                                  from the server handling the tcp on that                                  side                                  also making sure that when we're saving                                  uh saving the game                                  to the sql light file that that's able                                  to be managed                                  and then since as i mentioned we're                                  using an ecs system                                  lots of the calculations are done                                  concurrently                                  in different threads and so that being                                  said um we want to do research and to do                                  testing to see the uh                                  see if say a a pretty strong server of                                                                                                                                                                  like                                                                  that                                  there is a possibility for that but                                  there's a couple places that we're                                  currently                                  um hitting a wall a little bit so one of                                  the big ones is network bandwidth                                  we've been doing a lot to improve it and                                  change the compression rate of                                  um for example the chunks that we're                                  sending over network the player                                  information that we're sending over the                                  network                                  but there's still a lot of work to be                                  done in optimizing what types of                                  messages we're sending and                                  how can we maybe more efficiently cache                                  some stuff on the client                                  um and so there's a lot of work that's                                  going into the networking and                                  multiplayer side so xmac                                  our networking lead is doing a lot of                                  work and sort of testing in research to                                  find out what's the best way                                  to handle multiplayer so that we don't                                  have to worry about that bandwidth too                                  much                                  then so so that's like the multiplayer                                  side now if we think on                                  the framework side and the uh                                  sort of game engine side there's a lot                                  of optimizations that have to be done                                  in how we're doing a lot of stuff like                                  our world generation our world                                  simulation                                  um and our compression of information in                                  the entity component system                                  and so with world generation and world                                  simulation a lot of world generation                                  happens before the server starts uh so                                  making sure that your server doesn't                                  have to spend like two hours creating a                                  new map or something like that                                  that's a big one because as i mentioned                                  with the erosion and the rivers there's                                  a lot of simulation that has to happen                                  ahead of time                                  now when the game is running there's the                                  world simulation and so                                  we're currently working on some new                                  systems that will allow for                                  characters or rather npcs around the map                                  to be simulated in real time                                  when they are out of uh the view of                                  players and so                                  um if the whole world is alive and stuff                                  is happening and calculations are being                                  made we need to make sure that this                                  isn't putting too much of a toll                                  on the server that needs to run uh                                     ticks per second                                  and that the server's not getting bogged                                  down and then                                  finally the last thing is making sure                                  that our entity component system and how                                  we                                  uh manage memory and how we represent                                  all of our data                                  in memory um isn't too overburdening on                                  a server                                  and so um i think one of the big things                                  is we want to make sure that                                  say someone wants to host their own                                  voloran server that they don't                                  necessarily need incredibly powerful                                  hardware                                  especially if they just want to play                                  co-op with a couple of friends um it                                  would be great to simulate all of these                                  grandiose things and if we can that                                  would be amazing but also making sure                                  that we come back down to                                  uh sort of the uh                                  the the smallest player who wants to                                  play with a few friends and so                                  uh with this we need to make sure that                                  they can easily                                  uh get stuff up and running they don't                                  have to worry about                                  uh having a really super strong computer                                  that come in everything                                  um and then this also further expands                                  out to the client making sure that                                  if you're playing on a computer from                                  like                                                                      we do have the options                                  um in graphics that you can go you can                                  go down you can turn a lot of stuff down                                  and still                                  get the core experience without maybe                                  all of the extra stuff that we have                                  running on our                                  on our much larger servers okay                                  and finally also do you have different                                  realms                                  or people can host their own world                                  servers                                  yeah so that's really a great question                                  we've explored                                  well i think we've more discussed this                                  idea a lot like it would be really cool                                  to be able to have a velouring world                                  that interacts with other valorian                                  worlds                                  um in the sense that i could take my                                  character from one world then move it to                                  another                                  or um how the world is created right now                                  is this a discreet world it                                  you're essentially playing on an island                                  with an infinite ocean um                                  and so that that's needed because our                                  world simulation process can only like                                  has to have bounds to it                                  um but say you would go go to like the                                  edge of one of the islands and then you                                  start like sailing to                                  somewhere and maybe um as you're sailing                                  uh it switches you from                                  uh one realm to another realm or one                                  shard to another shard and that idea is                                  really cool from like a distributed                                  standpoint each server can be managing                                  its own uh                                  small island of velourin which i i mean                                  is still very large i'm not sure about                                  the kilometers square but it's much                                  it's quite large to explore the entire                                  island um                                  so i think that there's a lot of work to                                  be done but we haven't necessarily seen                                  the direction that we want to go                                  uh we can also expand it in many                                  different ways and so                                  um for again for that player who wants                                  to just play on their computer with                                  three friends                                  it needs to be very easy that you just                                  have one world and you                                  when you have like your sword that you                                  acquired on this server you can't carry                                  it to other ones but that's okay because                                  you can still play with your friends now                                  on larger servers um it'd be awesome to                                  have a cluster of                                                                                                            to make sure that they can handle as                                  many players as possible and                                  very epic things can happen and so                                  getting those uh player experiences to                                  really                                  um uh build as far as we can and not                                  make the technology be a restriction and                                  so have                                                               sure that                                  get that to be our max but then have                                  thousand player servers where players                                  are actually on different shards but                                  kind of interacting together so i think                                  there's a lot of                                  area here that would be really cool to                                  explore we don't exactly know the answer                                  yet but i think that we don't                                  necessarily also want to knock anything                                  off the table                                  great for us thanks a lot for sharing                                  your                                  great talk yeah thank you very much                                  see you bye
YouTube URL: https://www.youtube.com/watch?v=_d2RXwB_sio


