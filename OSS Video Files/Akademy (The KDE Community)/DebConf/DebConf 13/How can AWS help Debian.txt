Title: How can AWS help Debian
Publication date: 2017-11-29
Playlist: DebConf 13
Description: 
	by James Bromberger

At: DebConf13
https://debconf13.debconf.org/
Room: Second talk room
Scheduled start: 2013-08-12 16:30:00
Captions: 
	00:00:03,799 --> 00:00:07,830
you were working the cloud track earlier

00:00:05,910 --> 00:00:10,110
he's gonna talk a little bit more about

00:00:07,830 --> 00:00:12,030
how a SS can help Debian and perhaps

00:00:10,110 --> 00:00:13,530
maybe expand a little more about what

00:00:12,030 --> 00:00:16,170
you talked earlier about for those who

00:00:13,530 --> 00:00:17,850
work sure so um hello everyone I'm James

00:00:16,170 --> 00:00:20,039
and there are precisely two slides for

00:00:17,850 --> 00:00:22,920
this this is supposed to be an informal

00:00:20,039 --> 00:00:25,740
meeting so let's be informal I've been

00:00:22,920 --> 00:00:27,900
looking at ways to see how Amazon can

00:00:25,740 --> 00:00:29,039
further help Debian and I guess one of

00:00:27,900 --> 00:00:31,140
the first things that I've done since

00:00:29,039 --> 00:00:33,590
I've gotten to the ability to do this

00:00:31,140 --> 00:00:36,930
was to get the am eyes up for easy too

00:00:33,590 --> 00:00:38,579
and then beyond that uh you may have

00:00:36,930 --> 00:00:40,290
remembered we had a release recently and

00:00:38,579 --> 00:00:41,460
so around that I think it was the

00:00:40,290 --> 00:00:43,050
weekend before I thought well we should

00:00:41,460 --> 00:00:45,090
really see if we can get the cloud front

00:00:43,050 --> 00:00:46,559
CDN up and running to be able to assist

00:00:45,090 --> 00:00:48,539
this and that was a part of my talk this

00:00:46,559 --> 00:00:51,360
morning showing how you can access cloud

00:00:48,539 --> 00:00:52,980
front Debian net and you can get the CD

00:00:51,360 --> 00:00:56,219
images through that and you can get your

00:00:52,980 --> 00:00:58,050
regular archive access through that and

00:00:56,219 --> 00:01:00,270
so this became a hey let's throw this

00:00:58,050 --> 00:01:02,129
open to the floor and see what else we

00:01:00,270 --> 00:01:04,019
can do now at the moment Lucas also has

00:01:02,129 --> 00:01:07,290
a project he's been running where he's

00:01:04,019 --> 00:01:09,270
been recompiling binaries on ec2 now

00:01:07,290 --> 00:01:10,320
that could be just testing I can't

00:01:09,270 --> 00:01:12,030
remember the rest of the details around

00:01:10,320 --> 00:01:14,280
it those binaries might not actually end

00:01:12,030 --> 00:01:17,460
up in the distribution but at least a

00:01:14,280 --> 00:01:20,850
vast amount of testing can be done but

00:01:17,460 --> 00:01:24,720
we can do lots of stuff and so um I was

00:01:20,850 --> 00:01:28,080
after ideas requests any kind of

00:01:24,720 --> 00:01:29,220
information anybody wants let me I'm

00:01:28,080 --> 00:01:29,939
pretty much gonna throw this open to the

00:01:29,220 --> 00:01:32,040
floor right now

00:01:29,939 --> 00:01:33,180
so let's have some ideas who's got an

00:01:32,040 --> 00:01:35,070
idea of something they want to do and

00:01:33,180 --> 00:01:38,759
use a vast amount of compute and storage

00:01:35,070 --> 00:01:43,799
to do something interesting with come on

00:01:38,759 --> 00:01:45,119
okay if you're still if you're still cut

00:01:43,799 --> 00:01:47,220
first you guys come further forward

00:01:45,119 --> 00:01:48,090
please this is this is a small group and

00:01:47,220 --> 00:01:49,770
it looks like an empty room on the

00:01:48,090 --> 00:01:54,799
cameras right now so please come right I

00:01:49,770 --> 00:01:57,479
don't come on yes please

00:01:54,799 --> 00:02:00,479
now let's turn that one on okay there we

00:01:57,479 --> 00:02:05,189
go I'm managing why couldn't I open

00:02:00,479 --> 00:02:10,530
sealed packages which deal with GPU

00:02:05,189 --> 00:02:12,750
computing yes so I think I could I'm not

00:02:10,530 --> 00:02:13,860
using auto testing while building those

00:02:12,750 --> 00:02:16,050
packages because

00:02:13,860 --> 00:02:19,350
usually Debian machines don't have any

00:02:16,050 --> 00:02:22,590
GPUs on them so would it be possible for

00:02:19,350 --> 00:02:25,680
example to use Amazon for testing them

00:02:22,590 --> 00:02:27,990
yes so this way I know whether this is

00:02:25,680 --> 00:02:30,240
coincidence that I could just work on

00:02:27,990 --> 00:02:32,580
him on my machine or only whether they

00:02:30,240 --> 00:02:34,200
were more machines perfect so we have

00:02:32,580 --> 00:02:35,130
one instance type which has GPUs on it

00:02:34,200 --> 00:02:37,950
which you would be able to test on

00:02:35,130 --> 00:02:44,370
here's $1,000 to test it with whoa next

00:02:37,950 --> 00:02:47,730
person any other questions now so that

00:02:44,370 --> 00:02:50,190
credit is valid for a year and that's

00:02:47,730 --> 00:02:52,200
that's a brilliant use of using the AWS

00:02:50,190 --> 00:02:53,520
resources there's one instance types

00:02:52,200 --> 00:02:55,950
which has GPUs at the moment they're the

00:02:53,520 --> 00:02:57,900
nvidia tesla GPUs there will be some

00:02:55,950 --> 00:03:00,930
more coming at some stage soon so more

00:02:57,900 --> 00:03:11,490
modern gpo GPUs on the instances so for

00:03:00,930 --> 00:03:12,660
harvesting bitcoins yes but but but I

00:03:11,490 --> 00:03:13,770
was gonna say which country you're in

00:03:12,660 --> 00:03:14,760
because depending on which country you

00:03:13,770 --> 00:03:17,480
reside in and I think they're now

00:03:14,760 --> 00:03:19,250
illegal in some countries like Vietnam

00:03:17,480 --> 00:03:20,760
so yes

00:03:19,250 --> 00:03:21,930
anyone else got anything else

00:03:20,760 --> 00:03:24,420
interesting they're thinking of doing we

00:03:21,930 --> 00:03:25,769
would like to try surely I'm I'm

00:03:24,420 --> 00:03:29,010
greasing the wheels here he's got

00:03:25,769 --> 00:03:31,590
something I have actually personally no

00:03:29,010 --> 00:03:35,670
use but I could imagine that we could

00:03:31,590 --> 00:03:39,330
build some some images for for Debian

00:03:35,670 --> 00:03:43,050
and for Debian made which is doing some

00:03:39,330 --> 00:03:45,410
medical informatics calculations and

00:03:43,050 --> 00:03:47,220
running

00:03:45,410 --> 00:03:48,300
that's something actually I'm really

00:03:47,220 --> 00:03:50,780
interested in doing because I've got a

00:03:48,300 --> 00:03:53,700
bunch of customers who have sequences

00:03:50,780 --> 00:03:55,380
and some of these sequences have the

00:03:53,700 --> 00:03:57,060
computers in them and some of these

00:03:55,380 --> 00:03:58,560
different computers have plugins which

00:03:57,060 --> 00:04:00,500
instead of storing all of the sequence

00:03:58,560 --> 00:04:03,810
data locally they throw it into s3

00:04:00,500 --> 00:04:05,250
because of the storage so we have large

00:04:03,810 --> 00:04:06,870
numbers of sequences throwing that

00:04:05,250 --> 00:04:08,519
others so what should they analyze that

00:04:06,870 --> 00:04:11,190
with well I think they should analyze it

00:04:08,519 --> 00:04:12,570
with Debian mid so yeah one of the

00:04:11,190 --> 00:04:13,739
things I've been thinking of is and this

00:04:12,570 --> 00:04:16,859
was part of the discussion we've just

00:04:13,739 --> 00:04:19,260
come out of was what other images should

00:04:16,859 --> 00:04:21,000
we master and have ready to run on the

00:04:19,260 --> 00:04:23,550
cloud and this is not an Amazon thing

00:04:21,000 --> 00:04:25,289
but this is this is all our clouds we

00:04:23,550 --> 00:04:27,720
currently have a base image and

00:04:25,289 --> 00:04:29,220
customers users of those images

00:04:27,720 --> 00:04:30,510
actually then instruct those those

00:04:29,220 --> 00:04:34,050
servers when they start to go and

00:04:30,510 --> 00:04:36,180
install the Debian med or Debian Sai

00:04:34,050 --> 00:04:37,710
blend or whatever you want but should we

00:04:36,180 --> 00:04:40,470
have them prepared and ready to go

00:04:37,710 --> 00:04:41,520
without having that extra step yeah we

00:04:40,470 --> 00:04:44,520
can automate all of this this is just

00:04:41,520 --> 00:04:47,120
scripting but that's that's an

00:04:44,520 --> 00:04:50,150
interesting one for us to think about

00:04:47,120 --> 00:04:52,370
yeah if you'd like that we can do that

00:04:50,150 --> 00:04:54,360
we should talk about this

00:04:52,370 --> 00:04:57,150
are there any other requirements I mean

00:04:54,360 --> 00:04:59,040
what would would you need I don't

00:04:57,150 --> 00:05:05,520
understand gene sequencing that much or

00:04:59,040 --> 00:05:09,810
or anything but me too I voted as the

00:05:05,520 --> 00:05:14,970
expert around the world people think I'm

00:05:09,810 --> 00:05:17,640
doing I'm just building the packages and

00:05:14,970 --> 00:05:20,070
I trust on the users and if they report

00:05:17,640 --> 00:05:24,090
this is all that is wrong yeah I think

00:05:20,070 --> 00:05:28,560
it's wrong but it's not so I was happy

00:05:24,090 --> 00:05:31,380
with this yeah but yeah we should ask

00:05:28,560 --> 00:05:33,390
our users to use Amazon Cloud - well

00:05:31,380 --> 00:05:34,290
maybe it won't say in sequencing any of

00:05:33,390 --> 00:05:36,030
them and I think that's one of the

00:05:34,290 --> 00:05:37,740
advantages that we've got I mean this is

00:05:36,030 --> 00:05:39,180
a pretty awesome operating system that

00:05:37,740 --> 00:05:43,470
we've managed to cultivate here over the

00:05:39,180 --> 00:05:45,150
last 19.99 years and I think a lot of

00:05:43,470 --> 00:05:46,830
the packages that people in in the

00:05:45,150 --> 00:05:49,410
scientific community and made

00:05:46,830 --> 00:05:57,060
communities and and others we have

00:05:49,410 --> 00:05:58,590
packages which a lot of so GPU testing I

00:05:57,060 --> 00:06:00,600
think I was a brilliant one I really do

00:05:58,590 --> 00:06:01,620
because yes that's that's a piece of

00:06:00,600 --> 00:06:03,690
hardware that sometimes a little bit

00:06:01,620 --> 00:06:04,800
difficult to get hold of to do that

00:06:03,690 --> 00:06:11,610
testing on especially if you wanted to

00:06:04,800 --> 00:06:13,650
do it at scale analytics any other

00:06:11,610 --> 00:06:19,229
storage I had Zack come to me and say

00:06:13,650 --> 00:06:20,400
what about CDN for WWE org so that's one

00:06:19,229 --> 00:06:22,320
of the things that we could do to try

00:06:20,400 --> 00:06:23,700
and reduce some of the load on on the

00:06:22,320 --> 00:06:27,750
current website and obviously distribute

00:06:23,700 --> 00:06:30,300
that globally hosting snapshots Debian

00:06:27,750 --> 00:06:33,000
dork so on a familiar with snapshots

00:06:30,300 --> 00:06:37,800
yeah and the bigger archive dr. bender

00:06:33,000 --> 00:06:41,160
log yes that's a question if you might

00:06:37,800 --> 00:06:43,890
host snapshots on Amazon Cloud and

00:06:41,160 --> 00:06:45,530
your credits are running out so you are

00:06:43,890 --> 00:06:49,230
bound to the Amazon Cloud and to

00:06:45,530 --> 00:06:50,220
snapshot so for those initiatives I'll

00:06:49,230 --> 00:06:53,760
probably take a different route and not

00:06:50,220 --> 00:06:55,440
be using the credits so credits are just

00:06:53,760 --> 00:06:56,700
one option that I've got I've got to

00:06:55,440 --> 00:06:58,290
speak with other teams to work out

00:06:56,700 --> 00:07:01,200
longer term things for bigger things

00:06:58,290 --> 00:07:04,830
have we thought about a QA anything to

00:07:01,200 --> 00:07:06,690
do with QA tell me about it I don't know

00:07:04,830 --> 00:07:11,550
I just know that our customers dev test

00:07:06,690 --> 00:07:13,830
is one of their big thing no how a team

00:07:11,550 --> 00:07:15,840
works well my understanding is that's

00:07:13,830 --> 00:07:18,300
some of what Lucas is doing now but it's

00:07:15,840 --> 00:07:21,650
only some of what Debian does I thought

00:07:18,300 --> 00:07:24,120
he was doing more of the build cycle

00:07:21,650 --> 00:07:27,000
especially server related packages could

00:07:24,120 --> 00:07:28,650
be tested imagine porting packages so

00:07:27,000 --> 00:07:29,520
unfortunately he's not here but one of

00:07:28,650 --> 00:07:32,100
the things I was thinking about was what

00:07:29,520 --> 00:07:35,520
if we've had an arm 64 emulator and we

00:07:32,100 --> 00:07:39,690
wanted to rebuild every package you know

00:07:35,520 --> 00:07:42,030
how many packages have we got 37 30 39

00:07:39,690 --> 00:07:43,110
thousands like that this isn't something

00:07:42,030 --> 00:07:44,100
you're gonna do on one machine or two

00:07:43,110 --> 00:07:46,680
machines this is something you gonna do

00:07:44,100 --> 00:07:48,830
one you know a thousand machines for

00:07:46,680 --> 00:07:51,600
four hours or something like that

00:07:48,830 --> 00:07:54,030
so these are things that I think would

00:07:51,600 --> 00:07:56,460
be useful to do we are all going to

00:07:54,030 --> 00:07:57,990
benefit from that and it's probably been

00:07:56,460 --> 00:08:00,980
brought up a hundred times already but

00:07:57,990 --> 00:08:03,480
just for one-off development you know

00:08:00,980 --> 00:08:05,940
that's what got me an Amazon Cloud was

00:08:03,480 --> 00:08:08,250
you know I've got crappy DSL at my house

00:08:05,940 --> 00:08:09,960
I need to pull down massive amounts of

00:08:08,250 --> 00:08:11,610
data do something with it maybe upload

00:08:09,960 --> 00:08:14,340
it somewhere else yeah

00:08:11,610 --> 00:08:15,870
just access to maybe and I know you've

00:08:14,340 --> 00:08:17,700
got these credits now but in a general

00:08:15,870 --> 00:08:19,740
sense if a Debian developer wants to hop

00:08:17,700 --> 00:08:25,980
on and do something Debian related

00:08:19,740 --> 00:08:31,200
contact me yeah yeah that's pretty much

00:08:25,980 --> 00:08:34,289
it and I'm I want to see Amazon continue

00:08:31,200 --> 00:08:35,460
to assist this this community because it

00:08:34,289 --> 00:08:38,099
is a very important community to me

00:08:35,460 --> 00:08:39,240
personally but I think to Amazon's

00:08:38,099 --> 00:08:40,789
customers as well when I think you'd

00:08:39,240 --> 00:08:42,930
probably say the same thing about GCE

00:08:40,789 --> 00:08:44,610
because we basically want to start a war

00:08:42,930 --> 00:08:46,320
between you guys so that everything

00:08:44,610 --> 00:08:48,870
becomes free we're resisting that

00:08:46,320 --> 00:08:50,100
completely we're mostly thing positive

00:08:48,870 --> 00:08:53,100
things which other the whole conference

00:08:50,100 --> 00:08:55,940
supporting each other are you on blood

00:08:53,100 --> 00:08:55,940
you got to go to other

00:08:58,260 --> 00:09:01,930
anything I mean we're going to end up

00:09:00,580 --> 00:09:03,460
with a pretty short session here has

00:09:01,930 --> 00:09:05,290
anybody else in the room got ideas of

00:09:03,460 --> 00:09:17,410
things they want to do or get Amazon to

00:09:05,290 --> 00:09:19,450
do to help debian test upstart versus

00:09:17,410 --> 00:09:21,820
System z performance that was what Steve

00:09:19,450 --> 00:09:24,430
came in I decided instead of Leonard and

00:09:21,820 --> 00:09:25,720
and everyone in that session so what do

00:09:24,430 --> 00:09:27,250
we think should we do system D and just

00:09:25,720 --> 00:09:27,490
not worry about what's happening up

00:09:27,250 --> 00:09:29,380
there

00:09:27,490 --> 00:09:31,630
let's make that decision here and go for

00:09:29,380 --> 00:09:40,000
it for all iPad images we could define a

00:09:31,630 --> 00:09:42,700
hundred processes for them to manage yes

00:09:40,000 --> 00:09:44,260
so on a serious note this is what Steve

00:09:42,700 --> 00:09:47,080
Blank came up and said look can we make

00:09:44,260 --> 00:09:48,820
a system D image in a standard imaging

00:09:47,080 --> 00:09:50,860
and test them and let other people test

00:09:48,820 --> 00:09:58,630
them not just Debian but let how users

00:09:50,860 --> 00:09:59,890
test them and experiment with them so we

00:09:58,630 --> 00:10:01,630
should find those issues we should fix

00:09:59,890 --> 00:10:02,650
them and we should fix them on mass we

00:10:01,630 --> 00:10:04,990
shouldn't be fixing them one at a time

00:10:02,650 --> 00:10:06,160
we should have you know almost the

00:10:04,990 --> 00:10:11,790
crowd-sourced effort to find all those

00:10:06,160 --> 00:10:16,690
bugs and get them reported anything else

00:10:11,790 --> 00:10:20,230
yes place magnified I have not slightly

00:10:16,690 --> 00:10:23,350
questions but are there command-line

00:10:20,230 --> 00:10:25,660
tools in Debian main for Amazon or not

00:10:23,350 --> 00:10:26,530
yet not yet not Carney I think we're

00:10:25,660 --> 00:10:29,820
probably going to come up with the same

00:10:26,530 --> 00:10:32,740
thing on this is that your remark I

00:10:29,820 --> 00:10:35,620
think there are out-of-date yeah

00:10:32,740 --> 00:10:38,050
third part or the eucalyptus tools have

00:10:35,620 --> 00:10:39,880
out-of-date versions which may not work

00:10:38,050 --> 00:10:42,820
in the ideal ways for the current Amazon

00:10:39,880 --> 00:10:45,190
Cloud there's a bunch of third-party

00:10:42,820 --> 00:10:48,730
tunity so I don't believe the Amazon

00:10:45,190 --> 00:10:50,370
produced SDKs so for Python novels that

00:10:48,730 --> 00:10:52,630
includes boto

00:10:50,370 --> 00:10:54,490
installed they're not packaged currently

00:10:52,630 --> 00:10:56,500
this is something that moto is but it's

00:10:54,490 --> 00:10:58,270
an older version of I - I think I don't

00:10:56,500 --> 00:10:59,680
think it's coined as old as you guys

00:10:58,270 --> 00:11:02,650
think it is I'm gonna have to double

00:10:59,680 --> 00:11:03,880
that Charles Plessy maintains it with

00:11:02,650 --> 00:11:05,170
unfortunately when they moved me from

00:11:03,880 --> 00:11:06,880
the release team to the sales side I've

00:11:05,170 --> 00:11:08,110
kind of lost track of a little bit he

00:11:06,880 --> 00:11:10,329
updated it

00:11:08,110 --> 00:11:11,529
I understand they were the weazy

00:11:10,329 --> 00:11:13,269
releases that the point is actually

00:11:11,529 --> 00:11:14,709
really interesting that the the rate of

00:11:13,269 --> 00:11:16,510
which the improvements of the

00:11:14,709 --> 00:11:18,100
environment is happening now one of

00:11:16,510 --> 00:11:20,829
those improvements is that the current

00:11:18,100 --> 00:11:25,060
round of SDKs support the idea of

00:11:20,829 --> 00:11:28,060
getting time-based security tokens for

00:11:25,060 --> 00:11:30,010
secure access to api's and I think this

00:11:28,060 --> 00:11:31,329
is something that that mandy was talking

00:11:30,010 --> 00:11:33,070
about this morning is that similar the

00:11:31,329 --> 00:11:35,110
normal way to access most google api is

00:11:33,070 --> 00:11:38,950
including the third one is a similar

00:11:35,110 --> 00:11:41,620
it's an oauth2 thing right yeah and I

00:11:38,950 --> 00:11:43,360
don't think that the tools or SDKs that

00:11:41,620 --> 00:11:46,000
are currently in main or even in

00:11:43,360 --> 00:11:48,100
unstable or testing support that

00:11:46,000 --> 00:11:50,110
unstable issue because I believe Charles

00:11:48,100 --> 00:11:52,420
pushed three oh there recently if not

00:11:50,110 --> 00:11:54,160
he's going to because there was a Python

00:11:52,420 --> 00:11:56,079
dependency that was missing it's been

00:11:54,160 --> 00:12:01,810
packaged but then we took part in and

00:11:56,079 --> 00:12:03,760
we've also got Java node yeah the secret

00:12:01,810 --> 00:12:05,649
item and we're also talking unstable not

00:12:03,760 --> 00:12:10,899
not stable yeah so we've got another two

00:12:05,649 --> 00:12:13,660
years to go what was the question I was

00:12:10,899 --> 00:12:15,880
asking specifically about the two common

00:12:13,660 --> 00:12:18,220
right tools because I know that bottle

00:12:15,880 --> 00:12:22,510
is quite recent is nine point two

00:12:18,220 --> 00:12:25,510
something so it's already includes no no

00:12:22,510 --> 00:12:27,579
it's unstable stable contains rather old

00:12:25,510 --> 00:12:29,769
version of Botto unstable contains

00:12:27,579 --> 00:12:32,860
version of with greater support for

00:12:29,769 --> 00:12:35,470
example is important to me yes so but I

00:12:32,860 --> 00:12:39,040
was asking about command-line tools so

00:12:35,470 --> 00:12:40,329
too many instances from the basic stuff

00:12:39,040 --> 00:12:42,970
you can do with the yuca tools that's

00:12:40,329 --> 00:12:44,980
there yeah I mean our command line tools

00:12:42,970 --> 00:12:46,540
there's two other motion the older

00:12:44,980 --> 00:12:48,040
command-line tools the Java based I

00:12:46,540 --> 00:12:49,120
don't believe they're packaged and I

00:12:48,040 --> 00:12:51,029
can't remember the license off the top

00:12:49,120 --> 00:12:53,260
of my head I do know that our newer

00:12:51,029 --> 00:12:55,839
unified command line tools which are

00:12:53,260 --> 00:12:56,589
hosted on github currently it's an open

00:12:55,839 --> 00:13:00,699
source project

00:12:56,589 --> 00:13:02,709
it's run by Mitch who did boto that

00:13:00,699 --> 00:13:04,480
isn't currently packaged but I would

00:13:02,709 --> 00:13:06,040
love it to be packaged because you just

00:13:04,480 --> 00:13:07,630
want these tools to work now they might

00:13:06,040 --> 00:13:08,860
not be installed by default and that's a

00:13:07,630 --> 00:13:09,940
separate argument that we've just had

00:13:08,860 --> 00:13:11,470
and I think it's going to percolate for

00:13:09,940 --> 00:13:13,600
some time whether or not we install

00:13:11,470 --> 00:13:16,709
tools by default declared a.m. eyes but

00:13:13,600 --> 00:13:19,600
into base debian this is a pack I think

00:13:16,709 --> 00:13:22,149
what the license is it is definitely DFS

00:13:19,600 --> 00:13:22,450
G compatible and I'm sure Jess util is

00:13:22,149 --> 00:13:25,060
probably

00:13:22,450 --> 00:13:26,530
also similar we would love these to be

00:13:25,060 --> 00:13:28,630
in Maine we would love them to be

00:13:26,530 --> 00:13:30,520
available to everybody

00:13:28,630 --> 00:13:32,800
the same concerns come up over the

00:13:30,520 --> 00:13:35,160
lifecycle and timing of this but an

00:13:32,800 --> 00:13:37,780
older version is better than no version

00:13:35,160 --> 00:13:44,860
you should put those over to our team

00:13:37,780 --> 00:13:46,650
actually we'd be happy to awl I want is

00:13:44,860 --> 00:13:49,330
under heavy heavy development right now

00:13:46,650 --> 00:13:51,130
and I've got a wrap

00:13:49,330 --> 00:13:53,080
I have it running on this other

00:13:51,130 --> 00:13:55,690
alternate operating system that's that's

00:13:53,080 --> 00:14:00,310
on here and it's just Python and it's

00:13:55,690 --> 00:14:02,320
it's it's nice called JSON goodness and

00:14:00,310 --> 00:14:03,400
loosely company and all that so come on

00:14:02,320 --> 00:14:07,390
some more ideas what else oh do we want

00:14:03,400 --> 00:14:08,920
Amazon to do for for Debian does it use

00:14:07,390 --> 00:14:10,720
both by the way I assume it does of its

00:14:08,920 --> 00:14:12,580
Mitch yes yeah it is newsagent advice I

00:14:10,720 --> 00:14:14,590
it's pretty pretty up to date version of

00:14:12,580 --> 00:14:18,610
boto I think he's a little bit here did

00:14:14,590 --> 00:14:20,800
we hear yeah that's very good very good

00:14:18,610 --> 00:14:23,980
it's just hard to packages stuff

00:14:20,800 --> 00:14:25,360
sometimes he's good developer latest and

00:14:23,980 --> 00:14:27,460
greatest doesn't give a crap about how

00:14:25,360 --> 00:14:29,740
hard it is to actually push it onto a

00:14:27,460 --> 00:14:34,510
machine sometimes well that's that's

00:14:29,740 --> 00:14:44,530
bleeding edge software isn't it please

00:14:34,510 --> 00:14:46,660
someone else so from a QA point of view

00:14:44,530 --> 00:14:54,580
as we've talked about I'm interested in

00:14:46,660 --> 00:14:56,380
anything else that we can do to help but

00:14:54,580 --> 00:15:02,320
any kind of automation that we can do

00:14:56,380 --> 00:15:06,660
self at scale let me know cool we go up

00:15:02,320 --> 00:15:08,860
and watch the the discussions next

00:15:06,660 --> 00:15:10,060
excellent all right please help yourself

00:15:08,860 --> 00:15:12,940
to t-shirts because there's no way I'm

00:15:10,060 --> 00:15:16,330
carrying these back to Australia so over

00:15:12,940 --> 00:15:19,300
this room for each uh-huh and we'll just

00:15:16,330 --> 00:15:21,450
pass them around or whatever cool take a

00:15:19,300 --> 00:15:21,450

YouTube URL: https://www.youtube.com/watch?v=hT8llolAOsA


