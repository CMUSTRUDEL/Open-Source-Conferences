Title: Building a private cloud on Debian using Eucalyptus
Publication date: 2017-11-29
Playlist: DebConf 13
Description: 
	by Brian Thomason

At: DebConf13
https://debconf13.debconf.org/
Room: Second talk room
Scheduled start: 2013-08-13 11:30:00
Captions: 
	00:00:00,030 --> 00:00:06,210
all right so today I was going to give a

00:00:02,669 --> 00:00:08,490
talk about eucalyptus and Debian and I

00:00:06,210 --> 00:00:11,610
was going to do a a bit of a

00:00:08,490 --> 00:00:13,530
demonstration as I did with OpenStack

00:00:11,610 --> 00:00:15,139
yesterday but unfortunately as a Jimmy

00:00:13,530 --> 00:00:17,279
pointed out to me earlier at breakfast

00:00:15,139 --> 00:00:21,689
eucalyptus was removed from Debian

00:00:17,279 --> 00:00:25,439
yesterday so instead I'm going to give a

00:00:21,689 --> 00:00:27,390
little history on what what the reason

00:00:25,439 --> 00:00:29,279
behind that was why I'm here

00:00:27,390 --> 00:00:33,239
where eucalyptus and Debian are going

00:00:29,279 --> 00:00:34,469
forward so about three years ago four

00:00:33,239 --> 00:00:36,450
years ago those of you familiar with

00:00:34,469 --> 00:00:38,399
Ubuntu and canonical they decided to

00:00:36,450 --> 00:00:41,100
rebrand eucalyptus as a boon to

00:00:38,399 --> 00:00:43,440
enterprise cloud so they made Debian

00:00:41,100 --> 00:00:45,360
packages out of it and they maintain

00:00:43,440 --> 00:00:47,700
them and then when their relationship

00:00:45,360 --> 00:00:51,329
kind of went awry with the eucalyptus

00:00:47,700 --> 00:00:52,890
company of canonical eucalyptus excuse

00:00:51,329 --> 00:00:54,420
me canonical decide to abandon it move

00:00:52,890 --> 00:00:56,070
with OpenStack so now they rebrand

00:00:54,420 --> 00:00:58,609
OpenStack another been to enterprise

00:00:56,070 --> 00:01:00,510
cloud so eucalyptus was left to hustle

00:00:58,609 --> 00:01:02,520
trying to figure out who they were gonna

00:01:00,510 --> 00:01:05,850
get the package eucalyptus for debian so

00:01:02,520 --> 00:01:08,490
they hired me so last year I finished

00:01:05,850 --> 00:01:10,350
packaging eucalyptus for Debian and you

00:01:08,490 --> 00:01:12,540
got an unstable just after the freeze

00:01:10,350 --> 00:01:14,040
for wheezy which in this case might turn

00:01:12,540 --> 00:01:16,409
out to be a good thing because there's

00:01:14,040 --> 00:01:17,909
off about a year ago they decided you

00:01:16,409 --> 00:01:20,640
know what we just don't have enough QA

00:01:17,909 --> 00:01:23,340
resources both the Debian and sent off

00:01:20,640 --> 00:01:24,630
so they dumped Debian again so I spent

00:01:23,340 --> 00:01:26,759
the last year trying to convince them

00:01:24,630 --> 00:01:28,259
you know Debian support it I'm a Debian

00:01:26,759 --> 00:01:29,880
developer you know it's kind of a black

00:01:28,259 --> 00:01:31,200
guy that we keep doing this craziness

00:01:29,880 --> 00:01:34,650
and screwing with people in Deming

00:01:31,200 --> 00:01:37,439
community so we've decided I've decided

00:01:34,650 --> 00:01:42,150
to devote getting the next version into

00:01:37,439 --> 00:01:43,979
Jessie so in lieu of that and instead of

00:01:42,150 --> 00:01:47,759
giving a talk and the demonstration on

00:01:43,979 --> 00:01:49,170
in Debian since it's not there I decided

00:01:47,759 --> 00:01:52,640
to give a demo today and if the network

00:01:49,170 --> 00:01:55,439
will cooperate I will happily do that

00:01:52,640 --> 00:01:58,170
but it looks like my VPN is down so we

00:01:55,439 --> 00:01:59,520
may just have to have a quick little

00:01:58,170 --> 00:02:01,530
talk and you'll enjoy that cuz you'll

00:01:59,520 --> 00:02:03,890
get a lunch much sooner than you would

00:02:01,530 --> 00:02:03,890
have otherwise

00:02:06,690 --> 00:02:11,060
oh my god networking

00:02:23,620 --> 00:02:27,720
alright let's just go a little slow

00:02:37,599 --> 00:02:43,640
so as some of you may know some of you

00:02:40,010 --> 00:02:49,459
may not eucalyptus is an official

00:02:43,640 --> 00:02:50,930
partner of AWS and and eucalyptus was

00:02:49,459 --> 00:02:52,489
basically the first ever private cloud

00:02:50,930 --> 00:02:54,079
they basically took Amazon's web

00:02:52,489 --> 00:02:57,920
services at the time about five or six

00:02:54,079 --> 00:02:59,959
years ago when they were nascent ec2 s3

00:02:57,920 --> 00:03:01,730
which is the blog store excuse me the

00:02:59,959 --> 00:03:03,920
object storage and EBS which is the blog

00:03:01,730 --> 00:03:06,459
storage and they reinvented on the

00:03:03,920 --> 00:03:08,870
private side so the customers such as

00:03:06,459 --> 00:03:10,129
government institutions banks whoever

00:03:08,870 --> 00:03:11,540
wants to keep their data private they

00:03:10,129 --> 00:03:13,430
don't want to on a public cloud they can

00:03:11,540 --> 00:03:15,579
out use the same set of api's there and

00:03:13,430 --> 00:03:17,900
it's expanded in the companies who

00:03:15,579 --> 00:03:21,680
develop on AWS they've run up a large

00:03:17,900 --> 00:03:23,299
bill on AWS come to us to kind of

00:03:21,680 --> 00:03:24,590
retract some of their services off of

00:03:23,299 --> 00:03:26,329
the public cloud onto the private cloud

00:03:24,590 --> 00:03:30,859
and then they burst when they need to

00:03:26,329 --> 00:03:33,079
onto the public cloud so we basically

00:03:30,859 --> 00:03:35,750
re-implemented their their main services

00:03:33,079 --> 00:03:36,980
eat like I said II see 2 s 3 and II BBS

00:03:35,750 --> 00:03:39,980
which is their blog storage we've also

00:03:36,980 --> 00:03:44,049
recently done their elastic load

00:03:39,980 --> 00:03:49,310
balancing auto scaling and cloud watch

00:03:44,049 --> 00:03:52,989
and finally I think I might be able to

00:03:49,310 --> 00:03:52,989
show you something and quit yanking here

00:03:59,050 --> 00:04:05,890
evil little thing and some of you must

00:04:04,750 --> 00:04:08,380
of you who aren't even familiar with

00:04:05,890 --> 00:04:09,820
eucalyptus might have used us anyway on

00:04:08,380 --> 00:04:11,410
the client side we also have a set of

00:04:09,820 --> 00:04:13,390
tools called Yuka tools which are

00:04:11,410 --> 00:04:15,400
command-line utilities that access boto

00:04:13,390 --> 00:04:18,160
which is the python implementation of

00:04:15,400 --> 00:04:21,790
the library to access AWS api's it works

00:04:18,160 --> 00:04:23,140
with those eucalyptus hand Amazon and I

00:04:21,790 --> 00:04:24,790
believe that James pointed out he

00:04:23,140 --> 00:04:28,200
actually uses some of its functionality

00:04:24,790 --> 00:04:30,640
to build the the Debian image for Amazon

00:04:28,200 --> 00:04:33,340
and please forgive me here over VPN in

00:04:30,640 --> 00:04:34,600
California so it's not really this slow

00:04:33,340 --> 00:04:37,030
usually I promise

00:04:34,600 --> 00:04:40,840
so this is our user interface if it's

00:04:37,030 --> 00:04:42,940
showing up and I'm gonna compare and

00:04:40,840 --> 00:04:44,830
contrast that to the Amazon user

00:04:42,940 --> 00:04:47,050
interface which in all of its massive

00:04:44,830 --> 00:04:51,120
glory today here in a second and then

00:04:47,050 --> 00:04:55,150
show how you could tolls can be used to

00:04:51,120 --> 00:04:57,160
to operate on both clouds so here's the

00:04:55,150 --> 00:04:59,500
dashboard basically gives you an

00:04:57,160 --> 00:05:01,450
overview of your cloud these are your

00:04:59,500 --> 00:05:03,610
instances which is the equivalent ec2

00:05:01,450 --> 00:05:06,160
except we use KVM instead as Ian on the

00:05:03,610 --> 00:05:07,960
back end for our virtualization here

00:05:06,160 --> 00:05:10,390
your volumes which are your EBS volumes

00:05:07,960 --> 00:05:13,930
which is your block storage snapshots

00:05:10,390 --> 00:05:15,910
which are backups of volumes that can

00:05:13,930 --> 00:05:18,820
that are stored in our s3 storage called

00:05:15,910 --> 00:05:20,080
walrus security groups key pairs IP

00:05:18,820 --> 00:05:24,240
addresses the same thing you would find

00:05:20,080 --> 00:05:27,820
in Amazon for managing elastic IPS

00:05:24,240 --> 00:05:30,640
accessing your instances and determining

00:05:27,820 --> 00:05:31,900
the routing rules on those instances so

00:05:30,640 --> 00:05:34,690
without further ado let's do a demo

00:05:31,900 --> 00:05:36,130
instead of yakking so as you can see now

00:05:34,690 --> 00:05:37,360
we've got a big launch new instance

00:05:36,130 --> 00:05:39,810
button so we'll start with that as

00:05:37,360 --> 00:05:42,190
that's what most people want to do

00:05:39,810 --> 00:05:44,500
you'll notice here I have only a precise

00:05:42,190 --> 00:05:46,090
image don't boo because later I'm going

00:05:44,500 --> 00:05:50,260
to show you how to import your Debian 7

00:05:46,090 --> 00:05:51,370
image so you click on the the type of

00:05:50,260 --> 00:05:53,110
instance you'd like to launch we have

00:05:51,370 --> 00:05:55,630
just one here for the demonstration but

00:05:53,110 --> 00:05:59,560
we support all variants of Linux as well

00:05:55,630 --> 00:06:03,400
as Windows you then select your instance

00:05:59,560 --> 00:06:05,410
type which I've limited a few here but

00:06:03,400 --> 00:06:08,500
we mapped to Amazon's nomenclature there

00:06:05,410 --> 00:06:11,620
as well in 1 micro t1 micro so on and so

00:06:08,500 --> 00:06:12,880
forth you then select your security

00:06:11,620 --> 00:06:16,570
group and your keeper

00:06:12,880 --> 00:06:18,100
your security group defines which ports

00:06:16,570 --> 00:06:20,620
are open by default as you can see here

00:06:18,100 --> 00:06:24,180
and I've opened 84 web traffic and 22

00:06:20,620 --> 00:06:27,180
for SSH and you select your key pair

00:06:24,180 --> 00:06:30,280
this allows you to SSH into the machine

00:06:27,180 --> 00:06:32,740
much like Google does we inject the keys

00:06:30,280 --> 00:06:37,120
on instantiation so that there's no

00:06:32,740 --> 00:06:41,110
access via password and then you launch

00:06:37,120 --> 00:06:47,440
the instance and if all goes well within

00:06:41,110 --> 00:06:49,590
a little bit that should pop up and then

00:06:47,440 --> 00:06:52,900
[Music]

00:06:49,590 --> 00:06:55,270
so that's just a instance store image

00:06:52,900 --> 00:06:57,130
which means it just has ephemeral

00:06:55,270 --> 00:06:58,990
storage which means when you write

00:06:57,130 --> 00:07:00,340
anything to it and you shut it down it's

00:06:58,990 --> 00:07:04,450
gonna die daddy's gonna go away

00:07:00,340 --> 00:07:07,270
so a lot of people like to create boot

00:07:04,450 --> 00:07:11,650
from EBS images or you can just create a

00:07:07,270 --> 00:07:13,360
volume to store your extra data on which

00:07:11,650 --> 00:07:18,190
uses our block storage mechanism much

00:07:13,360 --> 00:07:21,670
like EBS you just specify the size we

00:07:18,190 --> 00:07:23,080
will make one of two gigabytes and I

00:07:21,670 --> 00:07:28,870
pre-canned one here in case my cloud

00:07:23,080 --> 00:07:31,900
doesn't wish to cooperate and then you

00:07:28,870 --> 00:07:36,610
can attach that volume as you see it

00:07:31,900 --> 00:07:40,990
created here it just popped up we can

00:07:36,610 --> 00:07:49,590
then select that volume and attach it to

00:07:40,990 --> 00:07:49,590
an instance such

00:07:52,780 --> 00:07:58,820
those instants not up yet what's up with

00:07:57,440 --> 00:08:01,540
my chromium here

00:07:58,820 --> 00:08:01,540
come on chromium

00:08:07,010 --> 00:08:14,090
there we go and so as you can see it

00:08:12,530 --> 00:08:18,800
changed the state has changed over here

00:08:14,090 --> 00:08:22,330
to attaching and it is now attached to

00:08:18,800 --> 00:08:26,000
that instance as block storage so if we

00:08:22,330 --> 00:08:30,670
drop back to our command line here I can

00:08:26,000 --> 00:08:32,870
show you how you can interact with that

00:08:30,670 --> 00:08:34,880
so these are the command line tools I

00:08:32,870 --> 00:08:36,140
was talking about before so if your more

00:08:34,880 --> 00:08:39,650
command line oriented like a lot of

00:08:36,140 --> 00:08:47,920
Debian people are instead of using the

00:08:39,650 --> 00:08:47,920
UI would help if I source my credentials

00:09:01,900 --> 00:09:07,910
and unfortunately the the date against

00:09:04,520 --> 00:09:09,050
kind of munge together but if you look

00:09:07,910 --> 00:09:11,750
closely you can see that there's two

00:09:09,050 --> 00:09:14,600
instances running one with the idea of I

00:09:11,750 --> 00:09:18,520
ate nine yada yada we use the same type

00:09:14,600 --> 00:09:23,000
of nomenclature 8ms does there as well

00:09:18,520 --> 00:09:24,740
and you can SSH into these instances by

00:09:23,000 --> 00:09:31,970
using the key pair you chose at lunch

00:09:24,740 --> 00:09:33,890
time I used Deb Kampf and in this

00:09:31,970 --> 00:09:36,350
particular image we have root enabled by

00:09:33,890 --> 00:09:39,790
default but you obviously likely would

00:09:36,350 --> 00:09:39,790
want to do something with your image

00:09:46,910 --> 00:09:50,250
[Music]

00:09:50,320 --> 00:09:58,490
would help if I gave it the right you'll

00:09:56,600 --> 00:09:59,900
obviously probably want to the default

00:09:58,490 --> 00:10:01,760
of boot two images obviously use the

00:09:59,900 --> 00:10:05,320
event to user not the rig user this is

00:10:01,760 --> 00:10:05,320
just woman in our testing environment

00:10:09,180 --> 00:10:19,200
well it must have attached it to the

00:10:10,830 --> 00:10:21,750
other instance okay so there she is so

00:10:19,200 --> 00:10:24,390
the the volume I created and then

00:10:21,750 --> 00:10:27,180
attached to the instance now shows up as

00:10:24,390 --> 00:10:30,110
a block device and you can treat it like

00:10:27,180 --> 00:10:37,050
any block device and we'll go ahead and

00:10:30,110 --> 00:10:40,040
format it extend it for format and then

00:10:37,050 --> 00:10:40,040
we'll mount her

00:10:47,050 --> 00:10:51,220
then we're gonna go into that mount

00:10:49,060 --> 00:11:03,450
point and show you that it is an empty

00:10:51,220 --> 00:11:03,450
volume and we will echo a file here

00:11:05,970 --> 00:11:12,910
mount it then we will go back in our

00:11:11,890 --> 00:11:14,110
interface here you can do it on the

00:11:12,910 --> 00:11:17,709
command line as well I'm just trying to

00:11:14,110 --> 00:11:28,089
show do as much as possible click on the

00:11:17,709 --> 00:11:30,250
volume and detach it so now that file is

00:11:28,089 --> 00:11:31,839
permanently stored in that volume so if

00:11:30,250 --> 00:11:37,750
you ever need to access that data again

00:11:31,839 --> 00:11:39,100
you can simply reattach it to any other

00:11:37,750 --> 00:11:40,329
instance you'd like you can only attach

00:11:39,100 --> 00:11:45,339
the one instance at a time obviously

00:11:40,329 --> 00:11:47,079
though then we can go into our snapshots

00:11:45,339 --> 00:11:49,720
section we already have one created here

00:11:47,079 --> 00:11:53,290
but we can create a new snapshot based

00:11:49,720 --> 00:12:00,670
on what we just made there in the volume

00:11:53,290 --> 00:12:03,310
so you choose your volume and then you

00:12:00,670 --> 00:12:05,070
click create and what that does is takes

00:12:03,310 --> 00:12:09,040
that entire two gigabyte volume and

00:12:05,070 --> 00:12:11,140
saves at that point in time in your s3

00:12:09,040 --> 00:12:12,399
object storage so that if you make

00:12:11,140 --> 00:12:14,680
further changes and you want to go back

00:12:12,399 --> 00:12:17,829
in time you can make a new volume based

00:12:14,680 --> 00:12:19,540
on that snapshot and I'll show you how

00:12:17,829 --> 00:12:23,110
to do that here it's very simple you

00:12:19,540 --> 00:12:26,220
just go back into your volumes again as

00:12:23,110 --> 00:12:29,980
you can see that other ones now detached

00:12:26,220 --> 00:12:31,420
you got to create new volume you choose

00:12:29,980 --> 00:12:36,399
the snapshot you'd like to create it

00:12:31,420 --> 00:12:39,790
from and you just click create volume

00:12:36,399 --> 00:12:41,620
well looks like my ran out of disk space

00:12:39,790 --> 00:12:47,440
on this test machine but that's the

00:12:41,620 --> 00:12:49,660
general general way to do it so that's

00:12:47,440 --> 00:12:51,550
basically the the three major services

00:12:49,660 --> 00:12:52,899
of eucalyptus in a nutshell obviously it

00:12:51,550 --> 00:12:54,970
gets much deeper than that when you go

00:12:52,899 --> 00:12:56,440
into auto-scaling setting up your

00:12:54,970 --> 00:12:58,720
monitoring services with cloud watch

00:12:56,440 --> 00:13:01,259
last load balancing but as far as the

00:12:58,720 --> 00:13:03,120
simple dev test you

00:13:01,259 --> 00:13:05,550
you can lift us as much like that of a

00:13:03,120 --> 00:13:07,139
WSU launched an instance you attach your

00:13:05,550 --> 00:13:08,930
storage you do your thing you create

00:13:07,139 --> 00:13:11,040
your snapshots to back them up and

00:13:08,930 --> 00:13:15,300
everybody's happy using the cloud at the

00:13:11,040 --> 00:13:17,610
end of the day so as opposed to Amazon

00:13:15,300 --> 00:13:18,810
now in our future release I should say

00:13:17,610 --> 00:13:20,639
that our interface will actually work

00:13:18,810 --> 00:13:22,500
with Amazon as well so it's gonna be

00:13:20,639 --> 00:13:24,180
like a hybridization UI you'll be able

00:13:22,500 --> 00:13:25,379
to select from a drop-down box whether

00:13:24,180 --> 00:13:26,939
you'd like to spawn your instances in

00:13:25,379 --> 00:13:28,410
your local cloud or if you'd like to

00:13:26,939 --> 00:13:31,050
spawn them in AWS unfortunately right

00:13:28,410 --> 00:13:37,980
now doesn't work so you have to use

00:13:31,050 --> 00:13:39,569
Amazon's interface which is seven years

00:13:37,980 --> 00:13:43,470
headstart a few thousand more employees

00:13:39,569 --> 00:13:45,509
but and here's their interface for

00:13:43,470 --> 00:13:48,629
launching instances we can click on

00:13:45,509 --> 00:13:51,120
instances and see that uh I should have

00:13:48,629 --> 00:13:57,000
one running here already and I do Debian

00:13:51,120 --> 00:13:58,800
7 image writing and well the only reason

00:13:57,000 --> 00:14:12,750
I wanted to highlight that is with yuka

00:13:58,800 --> 00:14:16,170
tools I can very quickly switch here

00:14:12,750 --> 00:14:18,509
alright I can easily switch with between

00:14:16,170 --> 00:14:19,800
my Amazon credentials and my eucalyptus

00:14:18,509 --> 00:14:22,139
credentials I can easily switch between

00:14:19,800 --> 00:14:24,329
the clouds and launched an instance in

00:14:22,139 --> 00:14:26,779
either/or so I'm going to show that now

00:14:24,329 --> 00:14:30,329
so I'm gonna source my eucalyptus file

00:14:26,779 --> 00:14:34,949
and I'm gonna run I'm gonna run an

00:14:30,329 --> 00:14:36,750
instance and eucalyptus first so I'm

00:14:34,949 --> 00:14:39,149
gonna describe my images and as you see

00:14:36,750 --> 00:14:42,600
here here's that same precise image that

00:14:39,149 --> 00:14:44,939
we saw in the UI and instead of the ami

00:14:42,600 --> 00:14:48,389
nomenclature for ami we use EMI for

00:14:44,939 --> 00:14:53,250
eucalyptus machine image otherwise it's

00:14:48,389 --> 00:14:54,959
pretty much the same the command this is

00:14:53,250 --> 00:14:56,189
the most common community by users if

00:14:54,959 --> 00:14:58,579
they're using either of our clouds you

00:14:56,189 --> 00:15:03,990
can run instances you simply give it the

00:14:58,579 --> 00:15:10,860
the ID and the key name you would like

00:15:03,990 --> 00:15:13,089
to use and off she goes if we'd like to

00:15:10,860 --> 00:15:17,769
then run one an AWS

00:15:13,089 --> 00:15:19,479
we just source iws credentials and I

00:15:17,769 --> 00:15:24,849
forget that my name just let me look

00:15:19,479 --> 00:15:28,629
that up well I guess I'd to go look it

00:15:24,849 --> 00:15:30,669
up with their lovely interface so first

00:15:28,629 --> 00:15:32,019
you need a my ID obviously which I have

00:15:30,669 --> 00:15:33,429
one before I don't know where it went

00:15:32,019 --> 00:15:36,099
I tried using the one from your

00:15:33,429 --> 00:15:38,559
marketplace and it gave me a URL to

00:15:36,099 --> 00:15:42,599
click on and I accept it and it still

00:15:38,559 --> 00:15:45,909
won't let me launch the darn thing so so

00:15:42,599 --> 00:15:47,169
it looks like it unfortunately so let me

00:15:45,909 --> 00:15:48,669
go find another here luckily y'all's

00:15:47,169 --> 00:15:50,979
enter your search interface has improved

00:15:48,669 --> 00:15:53,369
immensely it's much quicker they used to

00:15:50,979 --> 00:15:53,369
take forever

00:16:05,860 --> 00:16:12,670
so we will use this guy which is

00:16:10,210 --> 00:16:19,020
apparently a community provided Debian

00:16:12,670 --> 00:16:19,020
7.1 image and just like we did before

00:16:22,980 --> 00:16:33,550
simply specify the ami name and it will

00:16:30,040 --> 00:16:36,220
launch an image in AWS so the benefit to

00:16:33,550 --> 00:16:37,180
this that probably isn't readily

00:16:36,220 --> 00:16:40,720
apparent from a simple demonstration

00:16:37,180 --> 00:16:43,630
like this is you can also pass both

00:16:40,720 --> 00:16:45,520
Amazon and you can live this user data

00:16:43,630 --> 00:16:47,590
which I believe you touched on yesterday

00:16:45,520 --> 00:16:49,630
which is basically a script you can pass

00:16:47,590 --> 00:16:51,670
it so you can test your same workload

00:16:49,630 --> 00:16:53,590
and you can live this locally and then

00:16:51,670 --> 00:16:55,540
deploy it later into Amazon which is

00:16:53,590 --> 00:16:58,120
what most of our customers do so instead

00:16:55,540 --> 00:17:00,220
of burning the bill the Amazon charges

00:16:58,120 --> 00:17:02,560
to test internally people use you can

00:17:00,220 --> 00:17:04,540
live this to do development testing and

00:17:02,560 --> 00:17:07,000
then when they're ready they provision

00:17:04,540 --> 00:17:08,950
into the the public cloud using the same

00:17:07,000 --> 00:17:10,930
set of tools in the same API we also

00:17:08,950 --> 00:17:12,730
provide the same metadata service API

00:17:10,930 --> 00:17:16,390
within the instance so if you need to

00:17:12,730 --> 00:17:17,650
query your IP or your instance ID the

00:17:16,390 --> 00:17:21,910
same script can be used within

00:17:17,650 --> 00:17:23,470
eucalyptus and in Amazon and that's

00:17:21,910 --> 00:17:25,870
really the selling point of eucalyptus

00:17:23,470 --> 00:17:28,000
obviously you've got OpenStack now which

00:17:25,870 --> 00:17:29,740
is a massive force you know with HP and

00:17:28,000 --> 00:17:32,380
Rackspace behind it but they've made it

00:17:29,740 --> 00:17:35,560
very clear that Amazon API support is

00:17:32,380 --> 00:17:37,390
not gonna be part of their status quo

00:17:35,560 --> 00:17:38,320
and with Google I'm fairly I don't want

00:17:37,390 --> 00:17:39,790
to speak out of turn but I believe

00:17:38,320 --> 00:17:42,600
that's not really a focus of yours as

00:17:39,790 --> 00:17:45,040
well either so basically we wish to be

00:17:42,600 --> 00:17:47,620
in the niche of the private cloud

00:17:45,040 --> 00:17:49,630
provider for those who either use Amazon

00:17:47,620 --> 00:17:53,020
heavily now or wish to use Amazon in the

00:17:49,630 --> 00:17:54,850
future so I wish I could have done a

00:17:53,020 --> 00:17:56,290
more Debian centric thing for you David

00:17:54,850 --> 00:17:58,990
unfortunately my packages got removed

00:17:56,290 --> 00:18:01,990
yesterday so it is what it is one other

00:17:58,990 --> 00:18:05,050
thing I can show you is in Amazon the

00:18:01,990 --> 00:18:07,080
way image management works you can

00:18:05,050 --> 00:18:09,430
either upload your own image I believe

00:18:07,080 --> 00:18:10,480
but most people simply choose to use

00:18:09,430 --> 00:18:12,670
images that are already out there

00:18:10,480 --> 00:18:14,050
provided by Amazon in our case you don't

00:18:12,670 --> 00:18:17,110
have that because you've built your own

00:18:14,050 --> 00:18:18,760
cloud right so you need to you need to

00:18:17,110 --> 00:18:19,420
get an image from somewhere now that's

00:18:18,760 --> 00:18:20,890
where a

00:18:19,420 --> 00:18:23,800
totally we have called you store comes

00:18:20,890 --> 00:18:27,130
in so let me switch back to eucalyptus

00:18:23,800 --> 00:18:31,000
from Amazon here and we provided a very

00:18:27,130 --> 00:18:36,280
simple client called you store and we

00:18:31,000 --> 00:18:38,500
provide a set of default images and EMIs

00:18:36,280 --> 00:18:39,610
dot eucalyptus com2 where if you're just

00:18:38,500 --> 00:18:40,690
getting started with a cloud you don't

00:18:39,610 --> 00:18:41,650
feel like building your own image ever

00:18:40,690 --> 00:18:48,040
you know you don't even know how to

00:18:41,650 --> 00:18:53,230
build your own image yet in here you can

00:18:48,040 --> 00:18:55,210
just start with one of ours so you do

00:18:53,230 --> 00:19:00,610
you store described images to list them

00:18:55,210 --> 00:19:04,900
and then you store install image pass it

00:19:00,610 --> 00:19:07,740
the ID the hypervisor type which is

00:19:04,900 --> 00:19:10,300
usually a VM we also support

00:19:07,740 --> 00:19:12,880
zena's officially is not officially

00:19:10,300 --> 00:19:16,570
supported but it works and we officially

00:19:12,880 --> 00:19:19,630
support vmware as well and then you

00:19:16,570 --> 00:19:21,250
specify where which bucket which is our

00:19:19,630 --> 00:19:23,350
object storage where you'd like it to be

00:19:21,250 --> 00:19:25,470
stored in your cloud and we'll just

00:19:23,350 --> 00:19:27,430
store in a bucket called debian and

00:19:25,470 --> 00:19:30,100
it'll automatically as you can see

00:19:27,430 --> 00:19:31,870
retrieve the image for you unbundle it

00:19:30,100 --> 00:19:32,890
upload it to eucalyptus cloud and

00:19:31,870 --> 00:19:36,430
register it so you can immediately

00:19:32,890 --> 00:19:38,670
launch it so i'm obviously not gonna

00:19:36,430 --> 00:19:41,110
make you wait 30 minutes to see it but

00:19:38,670 --> 00:19:43,510
if you do that that's what happens and

00:19:41,110 --> 00:19:46,360
obviously you can host your own EMIs as

00:19:43,510 --> 00:19:48,760
well on your own emi server we've it's

00:19:46,360 --> 00:19:50,380
open source software and that way you

00:19:48,760 --> 00:19:51,670
don't have to retrieve them publicly

00:19:50,380 --> 00:19:53,590
from a slow connection you can retrieve

00:19:51,670 --> 00:19:56,610
them internally from your own network so

00:19:53,590 --> 00:19:59,110
that is eucalyptus in a nutshell and

00:19:56,610 --> 00:20:03,970
i'll open the floor for questions now if

00:19:59,110 --> 00:20:06,700
you have any we have a anywhere any

00:20:03,970 --> 00:20:10,710
questions from anybody on eucalyptus you

00:20:06,700 --> 00:20:10,710
could tools anything how release date is

00:20:13,830 --> 00:20:21,310
and am i wrong the kernel there is three

00:20:17,620 --> 00:20:27,070
point nine in seven point one correct

00:20:21,310 --> 00:20:28,990
this is our own homegrown ramage okay um

00:20:27,070 --> 00:20:31,720
what else goes into your images that are

00:20:28,990 --> 00:20:32,830
not in the standard debian still believe

00:20:31,720 --> 00:20:36,159
we put a seal

00:20:32,830 --> 00:20:37,929
this right I think a parmer that you can

00:20:36,159 --> 00:20:41,620
switch over to I didn't make this

00:20:37,929 --> 00:20:45,130
particular one but I think clowning it's

00:20:41,620 --> 00:20:51,159
in this one I believe that's it okay

00:20:45,130 --> 00:20:52,690
well alright but normally we don't

00:20:51,159 --> 00:20:54,519
deviate even that much it's usually just

00:20:52,690 --> 00:20:58,809
clouding it we always that clouding it

00:20:54,519 --> 00:20:59,919
yeah and oh and SELinux cuz a lot of

00:20:58,809 --> 00:21:14,049
customers requests have been able to

00:20:59,919 --> 00:21:25,720
lock down their their instances correct

00:21:14,049 --> 00:21:27,519
not in the Bass Strait from Debian like

00:21:25,720 --> 00:21:29,080
I said the kernel is a malady we

00:21:27,519 --> 00:21:30,519
wouldn't even usually do that most of

00:21:29,080 --> 00:21:33,880
the time we there's just stock installs

00:21:30,519 --> 00:21:36,580
with a default user like you did with

00:21:33,880 --> 00:21:39,100
admin we usually do very little to

00:21:36,580 --> 00:21:41,649
augment the we don't want to we just

00:21:39,100 --> 00:21:43,090
want to provide base images and if you

00:21:41,649 --> 00:21:46,539
need to customize do it on your own with

00:21:43,090 --> 00:21:48,610
puppet or chef or whatever so well

00:21:46,539 --> 00:21:50,049
rather any other questions it looks like

00:21:48,610 --> 00:21:51,820
everybody's getting ready for food so

00:21:50,049 --> 00:21:58,269
I'm gonna hold that against you I

00:21:51,820 --> 00:22:02,070
appreciate you coming and oh is it that

00:21:58,269 --> 00:22:05,970
long oh no no I'm upset

00:22:02,070 --> 00:22:05,970
well alrighty guys thanks for coming

00:22:06,450 --> 00:22:10,819

YouTube URL: https://www.youtube.com/watch?v=vB6vRUJaHO4


