Title: use Perl;
Publication date: 2017-11-29
Playlist: DebConf 13
Description: 
	by gregor herrmann

At: DebConf13
https://debconf13.debconf.org/
Room: Second talk room
Scheduled start: 2013-08-15 15:30:00
Captions: 
	00:00:00,000 --> 00:00:07,890
welcome everybody I'm very happy to have

00:00:03,449 --> 00:00:12,059
yet another girl buffeted kept calm I'm

00:00:07,890 --> 00:00:14,219
happy to see so many faces here some of

00:00:12,059 --> 00:00:19,590
which I know for quite some time some of

00:00:14,219 --> 00:00:22,650
which I know for only some days yeah I'm

00:00:19,590 --> 00:00:25,080
a go as you probably know I have guests

00:00:22,650 --> 00:00:27,449
from the description or something we

00:00:25,080 --> 00:00:32,340
have prepared over the last days some

00:00:27,449 --> 00:00:35,820
kind of agenda which is now projected on

00:00:32,340 --> 00:00:38,430
the screen as usual I would like to

00:00:35,820 --> 00:00:41,370
start with a very short introduction

00:00:38,430 --> 00:00:42,660
round so that we all know each others

00:00:41,370 --> 00:00:45,800
and that those are the people who are

00:00:42,660 --> 00:00:49,110
following along over the video stream

00:00:45,800 --> 00:00:53,280
can match the faces to the names so

00:00:49,110 --> 00:00:57,510
everyone who feels like it might want to

00:00:53,280 --> 00:00:59,149
say their name and half a sentence where

00:00:57,510 --> 00:01:02,250
they are here something like that

00:00:59,149 --> 00:01:27,950
Salvadori can you begin please if you

00:01:02,250 --> 00:01:31,380
want to some news packaging helping and

00:01:27,950 --> 00:01:34,020
maintain some modules inside and outside

00:01:31,380 --> 00:01:37,100
the group and I also play maintain the

00:01:34,020 --> 00:01:37,100
Perl interpreter package

00:01:57,510 --> 00:02:05,670
I'm luminous and I'm part of the team

00:02:01,790 --> 00:02:08,070
and a bunch of other teams mainly dollar

00:02:05,670 --> 00:02:09,509
is main di year I get say the RDF

00:02:08,070 --> 00:02:12,750
related spell

00:02:09,509 --> 00:02:18,660
it says and remove things but anything

00:02:12,750 --> 00:02:21,840
that is dependencies of errand so I'm

00:02:18,660 --> 00:02:23,640
David I'm also on the team although I

00:02:21,840 --> 00:02:26,580
think the amount of packaging I do these

00:02:23,640 --> 00:02:29,250
days is quite small I guess I have a

00:02:26,580 --> 00:02:37,670
standing offer as team get consultant so

00:02:29,250 --> 00:02:37,670
that's my excuse I think we have a noise

00:02:39,570 --> 00:02:42,699
[Music]

00:02:46,070 --> 00:02:52,650
I'm axel packet I'm in the protein for I

00:02:49,740 --> 00:02:54,870
don't know four years maybe not that

00:02:52,650 --> 00:02:57,230
very active but usually present in an

00:02:54,870 --> 00:02:57,230
IRC channel

00:02:57,770 --> 00:03:06,510
yeah well occasional pack fixing and

00:03:01,530 --> 00:03:10,170
reporting hi i'm florian my IC make his

00:03:06,510 --> 00:03:12,239
ffs ffs' I joined the protein like two

00:03:10,170 --> 00:03:14,760
years ago and it was also my entrance to

00:03:12,239 --> 00:03:16,080
Debian development and half a year ago

00:03:14,760 --> 00:03:18,300
I've been I was lucky to become a

00:03:16,080 --> 00:03:19,860
developer and I'm very happy about so

00:03:18,300 --> 00:03:39,030
this is my first step to say hello to

00:03:19,860 --> 00:03:43,760
everybody and hello and try to do some

00:03:39,030 --> 00:03:46,760
more general team work sometimes - I'm

00:03:43,760 --> 00:03:46,760
Tomas

00:03:54,050 --> 00:03:58,190
the packages the virtual resource packet

00:03:55,970 --> 00:04:01,390
reset which I mean interested in was a

00:03:58,190 --> 00:04:01,390
bit out of date

00:04:27,460 --> 00:04:32,750
okay thank you

00:04:29,300 --> 00:04:35,650
so before we really start the technical

00:04:32,750 --> 00:04:39,020
aspects who's writing to take notes and

00:04:35,650 --> 00:04:42,470
send sent nice minutes afterwards and

00:04:39,020 --> 00:04:51,230
who is monitoring IRC okay

00:04:42,470 --> 00:04:53,260
cool I'd be happy to take notes along

00:04:51,230 --> 00:04:57,280
with the know someone else and Gabby

00:04:53,260 --> 00:05:01,030
okay so someone else helping out and

00:04:57,280 --> 00:05:01,030
okay then thanks

00:05:01,420 --> 00:05:10,670
bienvenidos okay so the first point we

00:05:08,360 --> 00:05:12,200
have here I'm just going from the top

00:05:10,670 --> 00:05:18,200
down if someone wants to change the

00:05:12,200 --> 00:05:22,750
order please just say so there has been

00:05:18,200 --> 00:05:24,440
this Lancaster consensus paper written

00:05:22,750 --> 00:05:28,520
I'm not sure

00:05:24,440 --> 00:05:32,450
some months ago but Perl upstream tool

00:05:28,520 --> 00:05:37,880
chain gang esta call themselves where

00:05:32,450 --> 00:05:41,780
they try to well write down some current

00:05:37,880 --> 00:05:44,000
and future ideas for well distributions

00:05:41,780 --> 00:05:45,560
and I thought it what would be

00:05:44,000 --> 00:05:47,270
interesting to have a short look at it

00:05:45,560 --> 00:05:49,850
to see if there's something relevant in

00:05:47,270 --> 00:05:54,650
it for us as a as a group as a

00:05:49,850 --> 00:06:00,830
downstream and entry has already taken a

00:05:54,650 --> 00:06:02,660
look at it and edit is it to copy so I

00:06:00,830 --> 00:06:08,200
guess it's the quickest thing if you

00:06:02,660 --> 00:06:08,200
just run us through it quickly

00:06:28,439 --> 00:06:39,480
amia

00:06:31,080 --> 00:06:42,120
looks fancy okay would you would you

00:06:39,480 --> 00:06:51,350
mind walking us through the Lancaster

00:06:42,120 --> 00:06:51,350
concerns as quickly okay

00:06:53,360 --> 00:07:00,360
yeah point one and let's try to

00:06:56,760 --> 00:07:02,880
improvise part one was the minimum

00:07:00,360 --> 00:07:06,030
supported supported Perl version which

00:07:02,880 --> 00:07:08,760
is five eight one according to them now

00:07:06,030 --> 00:07:12,420
so we don't have to care for it since

00:07:08,760 --> 00:07:14,340
even old stable has five ten one then

00:07:12,420 --> 00:07:17,760
there were some ideas about specifying

00:07:14,340 --> 00:07:20,250
pure world builds without compiled

00:07:17,760 --> 00:07:23,850
excess stuff which we probably also

00:07:20,250 --> 00:07:27,450
don't care about since we can compile

00:07:23,850 --> 00:07:30,540
stuff and all architectures the next one

00:07:27,450 --> 00:07:34,320
is probably the most interesting for us

00:07:30,540 --> 00:07:36,480
it was about clarifying some of the

00:07:34,320 --> 00:07:40,890
those environment variables which are

00:07:36,480 --> 00:07:47,430
used in the test Suites the the meaning

00:07:40,890 --> 00:07:50,130
and who should use which one my

00:07:47,430 --> 00:07:52,140
understanding is that is that their

00:07:50,130 --> 00:07:58,010
results are quite similar to what we

00:07:52,140 --> 00:08:01,290
already have in our in our team policy

00:07:58,010 --> 00:08:04,380
where we don't know two years ago three

00:08:01,290 --> 00:08:08,310
years ago wrote down that we want to set

00:08:04,380 --> 00:08:11,670
this automated testing variable because

00:08:08,310 --> 00:08:14,270
this is supposed to be used for tests

00:08:11,670 --> 00:08:17,190
which are here run automated

00:08:14,270 --> 00:08:21,660
automatically and that we don't want to

00:08:17,190 --> 00:08:24,120
use the variables that are meant to be

00:08:21,660 --> 00:08:26,760
run only by the author at release time

00:08:24,120 --> 00:08:30,540
which is either release testing or auto

00:08:26,760 --> 00:08:34,380
testing or something like that what's

00:08:30,540 --> 00:08:39,720
new in this Lancaster consensus is a

00:08:34,380 --> 00:08:42,360
variable called extended testing which

00:08:39,720 --> 00:08:45,510
as far as I understood it is

00:08:42,360 --> 00:08:49,130
supposed to be used for tested may may

00:08:45,510 --> 00:08:53,579
take extra time extra resources and

00:08:49,130 --> 00:08:57,420
where we might want to discuss if we

00:08:53,579 --> 00:09:06,269
want to set this always most of the time

00:08:57,420 --> 00:09:10,440
or not whatever it sounds to me that

00:09:06,269 --> 00:09:12,180
this is better bounced off to to as

00:09:10,440 --> 00:09:14,640
you're also mentioned in current cases

00:09:12,180 --> 00:09:17,730
first off to see dps and their purposes

00:09:14,640 --> 00:09:20,399
we always use either CVS or developer in

00:09:17,730 --> 00:09:22,769
the protein so it's just telling

00:09:20,399 --> 00:09:27,180
informing these teams one of them being

00:09:22,769 --> 00:09:29,130
me that whatever it is what it what make

00:09:27,180 --> 00:09:32,250
sense these groupings at the Lancaster

00:09:29,130 --> 00:09:34,980
it sounds very sensible and it sounds

00:09:32,250 --> 00:09:37,410
actually more well-structured than most

00:09:34,980 --> 00:09:40,769
of the other areas in Debian is doing so

00:09:37,410 --> 00:09:43,470
this could be a perfect invitation for

00:09:40,769 --> 00:09:45,480
more tools to who go into this I know

00:09:43,470 --> 00:09:47,399
from the JavaScript team that it would

00:09:45,480 --> 00:09:49,110
be lovely to if we had a hook if we had

00:09:47,399 --> 00:09:51,690
a way to express this takes a long time

00:09:49,110 --> 00:09:55,529
to do regression testing of then we

00:09:51,690 --> 00:09:57,660
could include in rapid inside a hint so

00:09:55,529 --> 00:10:00,480
that it's only done work for these

00:09:57,660 --> 00:10:02,519
testers test machines instead of the

00:10:00,480 --> 00:10:04,160
standard tools I know the doc who is

00:10:02,519 --> 00:10:06,240
interested in exactly the same about

00:10:04,160 --> 00:10:09,810
when he is comparing for slow

00:10:06,240 --> 00:10:13,230
architectures then he wants to skip some

00:10:09,810 --> 00:10:16,019
parts and if we couldn't tell that help

00:10:13,230 --> 00:10:18,839
on CBS this is the kind of grouping that

00:10:16,019 --> 00:10:23,760
makes sense to do and Bill it might very

00:10:18,839 --> 00:10:25,170
well make sense to the whole lot do you

00:10:23,760 --> 00:10:27,000
mean that that help and see repairs

00:10:25,170 --> 00:10:30,449
should just set the variable or

00:10:27,000 --> 00:10:33,199
something more sophisticated because I

00:10:30,449 --> 00:10:33,199
said hook in

00:10:34,240 --> 00:10:41,649
I mean I mean that the thing that we but

00:10:39,089 --> 00:10:43,810
extended testing sounds to me like this

00:10:41,649 --> 00:10:45,339
is something we shouldn't set always in

00:10:43,810 --> 00:10:48,880
Debian because it's the kind of thing

00:10:45,339 --> 00:10:50,290
that will kill small architectures so

00:10:48,880 --> 00:10:54,640
it's the kind of thing that we actively

00:10:50,290 --> 00:10:56,770
try to avoid in other places so if there

00:10:54,640 --> 00:10:58,870
is something that is extreme testing in

00:10:56,770 --> 00:11:02,230
the perl modules we shouldn't set this

00:10:58,870 --> 00:11:03,850
flag here as I see it but maybe I'm just

00:11:02,230 --> 00:11:05,290
assuming that the things are there

00:11:03,850 --> 00:11:08,580
obvious here that that isn't so obvious

00:11:05,290 --> 00:11:11,140
after all well I think all three but

00:11:08,580 --> 00:11:12,910
should be set by both tools by default

00:11:11,140 --> 00:11:15,459
and then there should be way for the

00:11:12,910 --> 00:11:16,720
maintainer to override this and say no

00:11:15,459 --> 00:11:19,120
for this package I don't want the

00:11:16,720 --> 00:11:21,070
extended tests after experience I'm

00:11:19,120 --> 00:11:23,350
thinking of it even pushing it further

00:11:21,070 --> 00:11:25,930
out to their built options or something

00:11:23,350 --> 00:11:28,089
like that because I don't think Deb

00:11:25,930 --> 00:11:31,149
helper see DBS is the place for that

00:11:28,089 --> 00:11:33,610
kind of heuristics I would actually

00:11:31,149 --> 00:11:38,220
expect even build team maintain us to

00:11:33,610 --> 00:11:38,220
set it globally for their abilities

00:11:46,970 --> 00:11:53,300
I think I'm lousy at expressing myself

00:11:49,970 --> 00:11:56,810
Adam please agree with you I just see it

00:11:53,300 --> 00:11:59,569
as the pearl pearl upstream has

00:11:56,810 --> 00:12:02,449
formulated some very distinct arrivals

00:11:59,569 --> 00:12:06,230
for these things and in other way areas

00:12:02,449 --> 00:12:09,189
of other kinds of the code it is more up

00:12:06,230 --> 00:12:11,509
in the air how to express is this very

00:12:09,189 --> 00:12:13,490
extensive testing or is it simple

00:12:11,509 --> 00:12:16,120
testing or is it whatever it's for what

00:12:13,490 --> 00:12:20,209
purpose testing is it where and these

00:12:16,120 --> 00:12:23,000
groupings is very sensible in Debian we

00:12:20,209 --> 00:12:25,100
cannot just say that up that the bill

00:12:23,000 --> 00:12:27,439
tees should set these flags because then

00:12:25,100 --> 00:12:29,120
bps you've set flags for specific things

00:12:27,439 --> 00:12:31,339
and for JavaScript's was everything than

00:12:29,120 --> 00:12:35,209
a hell of a lot of different things the

00:12:31,339 --> 00:12:38,600
the point of these Debian specific flags

00:12:35,209 --> 00:12:43,060
is that it is then up to each team or to

00:12:38,600 --> 00:12:45,949
its area to them tie these the built a

00:12:43,060 --> 00:12:49,399
specific players to the table deeper get

00:12:45,949 --> 00:12:55,399
specifics but place that also didn't

00:12:49,399 --> 00:13:00,559
make any sense I think so if I can in

00:12:55,399 --> 00:13:05,439
try and interpret for Jonas so you seem

00:13:00,559 --> 00:13:08,300
to propose some kind of project wide

00:13:05,439 --> 00:13:12,379
standard ish like thing for these

00:13:08,300 --> 00:13:14,059
testing environment variables so maybe

00:13:12,379 --> 00:13:15,850
we can just try and follow up with that

00:13:14,059 --> 00:13:21,980
with a few of the people who are

00:13:15,850 --> 00:13:25,699
interested in the testing like the auto

00:13:21,980 --> 00:13:26,680
testing and so forth I don't know who he

00:13:25,699 --> 00:13:30,009
is Jonas

00:13:26,680 --> 00:13:30,009
maybe you

00:13:30,950 --> 00:13:41,880
me Joey whoever is working on auto

00:13:35,279 --> 00:13:44,790
testing could be a hiker and then dokgo

00:13:41,880 --> 00:13:47,850
or someone whatever someone who is into

00:13:44,790 --> 00:13:50,880
the ability done some few people sit

00:13:47,850 --> 00:13:54,060
down I just see don't year it seems very

00:13:50,880 --> 00:13:55,589
nicely wrapped together in peril area we

00:13:54,060 --> 00:13:57,720
don't even need to discuss that I think

00:13:55,589 --> 00:13:59,760
and then we just bounce it off to this

00:13:57,720 --> 00:14:02,010
higher level Debian higher level and

00:13:59,760 --> 00:14:04,020
then we go back here when the higher

00:14:02,010 --> 00:14:06,240
level Debian folks have figure out

00:14:04,020 --> 00:14:08,850
something that is cool for all of Abyan

00:14:06,240 --> 00:14:12,180
and link those two together that make

00:14:08,850 --> 00:14:15,210
sense okay that means we don't do

00:14:12,180 --> 00:14:16,890
anything specific now that's what we

00:14:15,210 --> 00:14:18,870
have been doing you try to get some

00:14:16,890 --> 00:14:24,680
people together and then tell us if this

00:14:18,870 --> 00:14:31,140
effects the purl group in some way cool

00:14:24,680 --> 00:14:34,140
thank you okay trying to quickly go to

00:14:31,140 --> 00:14:37,710
the other things something about the

00:14:34,140 --> 00:14:40,170
build PLL's back which should not affect

00:14:37,710 --> 00:14:42,650
us this install distribution start a

00:14:40,170 --> 00:14:45,420
base I have to admit that I don't really

00:14:42,650 --> 00:14:45,960
understand it completely what this is

00:14:45,420 --> 00:14:51,000
about

00:14:45,960 --> 00:14:56,100
has someone else read their proposal or

00:14:51,000 --> 00:14:58,820
whoever edit this purple comments seem

00:14:56,100 --> 00:14:58,820
to have read it

00:15:00,760 --> 00:15:06,490
ah it's two comments actually no there's

00:15:03,730 --> 00:15:08,110
the second one is by me but I was

00:15:06,490 --> 00:15:10,630
wondering what this is actually for and

00:15:08,110 --> 00:15:11,470
how this should interface with what

00:15:10,630 --> 00:15:14,470
we're doing anyway

00:15:11,470 --> 00:15:16,389
I was thinking of pack lists which we're

00:15:14,470 --> 00:15:22,750
currently deleting from the per package

00:15:16,389 --> 00:15:26,079
I believe and well because duplicating

00:15:22,750 --> 00:15:30,399
information which we usually manage with

00:15:26,079 --> 00:15:31,690
the dpkg and because it's putting stuff

00:15:30,399 --> 00:15:34,329
in locations where we don't want to have

00:15:31,690 --> 00:15:36,220
it I think so I think we should wait and

00:15:34,329 --> 00:15:40,570
see how this is going to be implemented

00:15:36,220 --> 00:15:44,290
and yeah how we perhaps can make our

00:15:40,570 --> 00:15:46,660
tools work with this but unless we know

00:15:44,290 --> 00:15:47,760
more exactly what's happening I don't

00:15:46,660 --> 00:15:52,779
think we can do anything

00:15:47,760 --> 00:15:54,490
yeah yeah it reads in inventory of

00:15:52,779 --> 00:15:56,170
installed distributions and install

00:15:54,490 --> 00:15:58,029
tools and tracking of dependency graphs

00:15:56,170 --> 00:16:00,940
I mean actually we have the package and

00:15:58,029 --> 00:16:04,180
apt and whatever well the way this could

00:16:00,940 --> 00:16:06,430
be used is when a module isn't packaged

00:16:04,180 --> 00:16:08,139
and I use CP n plus or something to

00:16:06,430 --> 00:16:11,399
install it locally in my own home and

00:16:08,139 --> 00:16:15,670
one two minutes those locally user

00:16:11,399 --> 00:16:17,050
install modules mm-hmm but then the tool

00:16:15,670 --> 00:16:19,569
would need to know that there's some

00:16:17,050 --> 00:16:21,069
distribution it can uninstall others

00:16:19,569 --> 00:16:23,220
which it can't even though though

00:16:21,069 --> 00:16:25,480
they're there and stuff so I'm not sure

00:16:23,220 --> 00:16:28,449
it depends a lot on how this turns out

00:16:25,480 --> 00:16:30,370
to work right in the last sentences

00:16:28,449 --> 00:16:33,519
implementations details are left to the

00:16:30,370 --> 00:16:37,120
one implementing it so we probably have

00:16:33,519 --> 00:16:39,839
to wait anyway there are some ideas

00:16:37,120 --> 00:16:41,589
about past installation testing which

00:16:39,839 --> 00:16:43,750
interesting curse there's also

00:16:41,589 --> 00:16:46,029
discussion about this auto packaged test

00:16:43,750 --> 00:16:49,269
and type aid and there was just this

00:16:46,029 --> 00:16:50,949
talked about about the Ubuntu testing

00:16:49,269 --> 00:16:56,050
and someone already wrote here if this

00:16:50,949 --> 00:16:58,389
exists it would be useful to use it but

00:16:56,050 --> 00:17:00,819
I guess if I remember correctly at all

00:16:58,389 --> 00:17:02,709
it also says the implementations that

00:17:00,819 --> 00:17:06,579
details are left ribbon implementing it

00:17:02,709 --> 00:17:09,850
so we probably have to wait for it and

00:17:06,579 --> 00:17:11,339
keep our eyes open and then try to make

00:17:09,850 --> 00:17:14,949
use of it

00:17:11,339 --> 00:17:16,509
does this sound the pink stuff there's

00:17:14,949 --> 00:17:17,859
again me and I wanted to ask if I've

00:17:16,509 --> 00:17:19,929
understood this correctly that it's

00:17:17,859 --> 00:17:22,119
really just about running the usual

00:17:19,929 --> 00:17:23,829
package tests again

00:17:22,119 --> 00:17:25,689
the build time tests again after a

00:17:23,829 --> 00:17:27,909
separate module another module was

00:17:25,689 --> 00:17:30,580
installed to make sure my package keeps

00:17:27,909 --> 00:17:33,269
working so the result would be the same

00:17:30,580 --> 00:17:35,590
as the archive for e-boats

00:17:33,269 --> 00:17:41,799
it's not correct is that everybody's

00:17:35,590 --> 00:17:46,059
understanding I suppose it would be the

00:17:41,799 --> 00:17:48,549
same yes but it's kind of a more

00:17:46,059 --> 00:17:51,639
continuous process where you you can

00:17:48,549 --> 00:17:53,859
keep on testing that may be a bit more

00:17:51,639 --> 00:17:56,619
easily I was thinking that it would be

00:17:53,859 --> 00:18:00,159
gonna be easy probably for most

00:17:56,619 --> 00:18:02,230
paramedic module set anyway to implement

00:18:00,159 --> 00:18:05,350
this just install Target or whatever

00:18:02,230 --> 00:18:08,470
because well it's basically just running

00:18:05,350 --> 00:18:14,259
probe on on the test so it without the

00:18:08,470 --> 00:18:17,919
DES B option so it might be quite easy

00:18:14,259 --> 00:18:20,109
for us to implement Auto pick eg tests

00:18:17,919 --> 00:18:22,509
for just about all of our parking

00:18:20,109 --> 00:18:23,609
packages sure somebody should look into

00:18:22,509 --> 00:18:27,609
that

00:18:23,609 --> 00:18:29,999
mmhmm yeah also thought about this this

00:18:27,609 --> 00:18:33,389
might been a nice a nice mess commit

00:18:29,999 --> 00:18:39,570
just dropping this debian tests control

00:18:33,389 --> 00:18:42,429
somewhere relate to this auto rebuilding

00:18:39,570 --> 00:18:46,210
auto rebuilding the whole archive still

00:18:42,429 --> 00:18:49,330
only tests with the least possible build

00:18:46,210 --> 00:18:51,659
dependencies satisfied and what we I

00:18:49,330 --> 00:18:53,980
seem to see as being the goal of this is

00:18:51,659 --> 00:18:56,200
covering a situation where they will

00:18:53,980 --> 00:18:59,289
have too much so bloated systems and

00:18:56,200 --> 00:19:02,179
that is a kind of test that is not not

00:18:59,289 --> 00:19:05,360
done with Debian at the moment

00:19:02,179 --> 00:19:08,360
but it is less that really an issue for

00:19:05,360 --> 00:19:14,600
us because on the built is you also have

00:19:08,360 --> 00:19:17,269
the least I don't see this as being an

00:19:14,600 --> 00:19:19,429
issue for us I see this as big what I as

00:19:17,269 --> 00:19:21,740
I read this this suggestion is a

00:19:19,429 --> 00:19:23,450
mechanism so that people who are using

00:19:21,740 --> 00:19:26,659
Libyan people who are using different

00:19:23,450 --> 00:19:31,070
kind of distributions can can hook into

00:19:26,659 --> 00:19:33,139
this and do these tests on a system so

00:19:31,070 --> 00:19:35,450
it's somehow making the test available

00:19:33,139 --> 00:19:37,580
after you have installed and then those

00:19:35,450 --> 00:19:39,710
testing it could then do bloated systems

00:19:37,580 --> 00:19:42,139
in different ways so it's it's a

00:19:39,710 --> 00:19:45,230
different kind of testing vector that we

00:19:42,139 --> 00:19:47,470
would allow for others to do and for

00:19:45,230 --> 00:19:50,899
ourselves if those others could be our

00:19:47,470 --> 00:19:53,960
testers those doing these system tests

00:19:50,899 --> 00:19:57,679
run some tests it could be a valid way

00:19:53,960 --> 00:19:59,779
to do run some tests also in Debian to

00:19:57,679 --> 00:20:04,309
implode it it's something we don't do it

00:19:59,779 --> 00:20:06,909
now I guess there there are two things

00:20:04,309 --> 00:20:09,679
that this could be used for one is

00:20:06,909 --> 00:20:12,889
hooking directly into the auto package

00:20:09,679 --> 00:20:17,029
test which is designed for well mainly

00:20:12,889 --> 00:20:20,299
automated testing within Debian and then

00:20:17,029 --> 00:20:22,340
their separate lace is giving users the

00:20:20,299 --> 00:20:26,149
ability to run those tests I mean

00:20:22,340 --> 00:20:30,440
they're related but I'd like to see if

00:20:26,149 --> 00:20:32,720
we did enable auto package tests in perl

00:20:30,440 --> 00:20:35,990
modules that they be that it be done in

00:20:32,720 --> 00:20:38,419
harmony with this so I mean it would be

00:20:35,990 --> 00:20:41,869
probably better to again unfortunately

00:20:38,419 --> 00:20:46,639
wait and see what or even you know help

00:20:41,869 --> 00:20:50,600
contribute I had a side note away

00:20:46,639 --> 00:20:52,759
somebody or are we planning to respond

00:20:50,600 --> 00:20:54,320
in some way to or get involved in a

00:20:52,759 --> 00:20:59,629
discussion in general discussions about

00:20:54,320 --> 00:21:03,350
the consensus the lancaster consensus do

00:20:59,629 --> 00:21:06,669
we know who do we have contacts with the

00:21:03,350 --> 00:21:22,059
people that wrote it at the moment

00:21:06,669 --> 00:21:25,899
anybody involved anybody in contact okay

00:21:22,059 --> 00:21:28,989
so a conclusion again is yes make sense

00:21:25,899 --> 00:21:33,999
but let's wait so that we can fit it

00:21:28,989 --> 00:21:41,529
together and not invent something that's

00:21:33,999 --> 00:21:45,789
right okay yeah I think that was more or

00:21:41,529 --> 00:21:48,609
less okay then for the meter file

00:21:45,789 --> 00:21:53,169
specification there are some ideas about

00:21:48,609 --> 00:21:55,980
improving the the conflicts field which

00:21:53,169 --> 00:22:00,239
we might then use in huge mega Perl

00:21:55,980 --> 00:22:03,759
maybe it sounds reasonable

00:22:00,239 --> 00:22:07,419
yeah and the rest is about about the C

00:22:03,759 --> 00:22:10,809
pennant and pause about permissions

00:22:07,419 --> 00:22:14,909
names for distributions and and stuff

00:22:10,809 --> 00:22:18,129
like that which should not affect us

00:22:14,909 --> 00:22:28,419
except this this users who may maybe

00:22:18,129 --> 00:22:33,070
profit by some improvement okay so is

00:22:28,419 --> 00:22:39,489
this enough the lancaster consensus want

00:22:33,070 --> 00:22:42,489
to say something to enjoy good luckily

00:22:39,489 --> 00:22:46,779
we have a kit expert here so maybe he

00:22:42,489 --> 00:22:50,320
can start with the next point the the

00:22:46,779 --> 00:22:52,359
idea was just we switched from s we

00:22:50,320 --> 00:22:56,919
enter get two years ago two years is a

00:22:52,359 --> 00:23:02,759
nice time span so we might want to use

00:22:56,919 --> 00:23:05,440
some minutes for just sharing exchanges

00:23:02,759 --> 00:23:08,499
exchanging how we feel about it if there

00:23:05,440 --> 00:23:11,619
are some some problems we have or if

00:23:08,499 --> 00:23:14,440
some corners where we could improve our

00:23:11,619 --> 00:23:16,330
workflows or we can also just say we are

00:23:14,440 --> 00:23:20,340
everybody happy and go to the next point

00:23:16,330 --> 00:23:20,340
it's it's an offer

00:23:20,720 --> 00:23:26,130
yeah I think I didn't have much to do

00:23:23,640 --> 00:23:28,980
with the actual workflow which is mainly

00:23:26,130 --> 00:23:32,550
mr right so whoever set up the mr rules

00:23:28,980 --> 00:23:37,790
and and so on but I think it's worth

00:23:32,550 --> 00:23:41,220
just maybe anybody who has a particular

00:23:37,790 --> 00:23:44,370
pet peeve that that they want to ask

00:23:41,220 --> 00:23:46,980
about it depends whether you think it

00:23:44,370 --> 00:23:50,100
says well let's just say anybody who has

00:23:46,980 --> 00:23:54,930
a something that's annoying them about

00:23:50,100 --> 00:24:02,340
the team workflow I'll pass the mic to

00:23:54,930 --> 00:24:04,980
them Jonas I hope it's also okay I'm not

00:24:02,340 --> 00:24:08,840
annoyed I was more the opposite asking

00:24:04,980 --> 00:24:13,110
is anybody annoyed that I have started

00:24:08,840 --> 00:24:15,330
adding the upstream gets into the things

00:24:13,110 --> 00:24:17,010
I find it pretty cool to have a

00:24:15,330 --> 00:24:22,610
synchronization with upstream gates and

00:24:17,010 --> 00:24:26,310
but it bloated the rse channel but some

00:24:22,610 --> 00:24:29,550
cool people then fix the these hooks so

00:24:26,310 --> 00:24:34,260
other than that is anybody okay you in

00:24:29,550 --> 00:24:36,770
favor I usually do that with my own

00:24:34,260 --> 00:24:39,600
packages outside although I don't

00:24:36,770 --> 00:24:42,270
automatically sync it I don't find that

00:24:39,600 --> 00:24:45,150
too useful but I do often keep upstream

00:24:42,270 --> 00:24:47,700
history as a branch in the packaging

00:24:45,150 --> 00:24:51,750
repo so I think it's a general principle

00:24:47,700 --> 00:24:53,520
it's a good thing what I do is is that

00:24:51,750 --> 00:24:56,850
every time they have a release and they

00:24:53,520 --> 00:24:59,940
have a corresponding release tag then I

00:24:56,850 --> 00:25:02,010
think they'll release tag so that in

00:24:59,940 --> 00:25:04,800
practice that will build packets our

00:25:02,010 --> 00:25:07,440
current general structure that means

00:25:04,800 --> 00:25:09,540
that it's all getting pulled in but it's

00:25:07,440 --> 00:25:11,310
tied together these two threads every

00:25:09,540 --> 00:25:12,930
time there's a release and I contact

00:25:11,310 --> 00:25:15,600
upstream and remind them if they forgot

00:25:12,930 --> 00:25:18,530
to tag their releases and they thank me

00:25:15,600 --> 00:25:18,530
for that at a couple times

00:25:18,669 --> 00:25:27,799
so go ahead

00:25:23,119 --> 00:25:30,460
another thing generally I don't like the

00:25:27,799 --> 00:25:33,379
system whether we're the master branch

00:25:30,460 --> 00:25:35,389
doesn't have the Patsy supplied so

00:25:33,379 --> 00:25:38,599
that's kind of a pet peeve of mine but

00:25:35,389 --> 00:25:41,179
uh I always forget to actually apply

00:25:38,599 --> 00:25:43,700
them when I'm testing something wrong so

00:25:41,179 --> 00:25:46,700
but I don't really have a good solution

00:25:43,700 --> 00:25:49,249
we're using get DPM for Pearl itself

00:25:46,700 --> 00:25:52,309
there was a presentation on that this

00:25:49,249 --> 00:25:55,029
morning amaura it might be a bit too

00:25:52,309 --> 00:26:00,169
complex for this group I mean there's

00:25:55,029 --> 00:26:02,570
lots of newcomers every no no no I think

00:26:00,169 --> 00:26:07,099
was it trust all Barry who said that uh

00:26:02,570 --> 00:26:12,619
it's kind of a dangerously sharp means

00:26:07,099 --> 00:26:16,159
to enter something like this yeah um so

00:26:12,619 --> 00:26:18,950
maybe I'm happy to sit down and play a

00:26:16,159 --> 00:26:20,899
bit with patches applied versus patches

00:26:18,950 --> 00:26:25,279
not applied in our current workflow

00:26:20,899 --> 00:26:27,499
maybe well I'm at DEFCON and it might

00:26:25,279 --> 00:26:29,269
not be such a big change for us so

00:26:27,499 --> 00:26:30,589
that's something we can think about it's

00:26:29,269 --> 00:26:34,179
something I've been thinking about in

00:26:30,589 --> 00:26:34,179
other contexts as well

00:26:39,380 --> 00:26:46,910
shall we move on then yeah okay so the

00:26:43,669 --> 00:26:51,410
summary is maybe someone has a more

00:26:46,910 --> 00:26:54,110
concrete idea can around patches and

00:26:51,410 --> 00:26:57,070
then we can discuss it again but yeah I

00:26:54,110 --> 00:27:00,830
think I volunteered to at least try and

00:26:57,070 --> 00:27:02,450
examine the current situation and what

00:27:00,830 --> 00:27:08,390
it would mean for us to change to have

00:27:02,450 --> 00:27:09,620
patches applied you know right and Jonas

00:27:08,390 --> 00:27:11,390
could you please document how you're

00:27:09,620 --> 00:27:17,419
pulling the upstream and gate revisions

00:27:11,390 --> 00:27:19,669
on our website in the yeah please even

00:27:17,419 --> 00:27:26,409
better send em a script to include in

00:27:19,669 --> 00:27:26,409
our tools to do this okay

00:27:32,870 --> 00:27:43,030
what experience I have with malicious

00:27:36,549 --> 00:27:46,520
the upstream get repository is

00:27:43,030 --> 00:27:49,669
there need some work to make the release

00:27:46,520 --> 00:27:51,890
actually happen and that's what they do

00:27:49,669 --> 00:27:55,570
when they project produce the table was

00:27:51,890 --> 00:27:55,570
so maybe something

00:28:06,340 --> 00:28:12,470
I'm not sure I understand the question

00:28:09,350 --> 00:28:36,399
so are you saying you don't know how to

00:28:12,470 --> 00:28:38,659
work with upstream history or a or I

00:28:36,399 --> 00:28:41,029
think what what you what you're

00:28:38,659 --> 00:28:43,520
wondering is if we may if you might lose

00:28:41,029 --> 00:28:46,370
some information by linking with

00:28:43,520 --> 00:28:47,559
upstream instead of using turbos is that

00:28:46,370 --> 00:28:49,610
what you're talking about

00:28:47,559 --> 00:28:52,570
that we are missing something that

00:28:49,610 --> 00:28:52,570
upstream is doing that we

00:28:55,900 --> 00:29:00,430
so for the people watching and didn't

00:28:58,570 --> 00:29:03,490
see into Jerry's laptop

00:29:00,430 --> 00:29:05,920
he points out an option to get import

00:29:03,490 --> 00:29:10,809
orig which is in the get build package

00:29:05,920 --> 00:29:13,180
suite entry kiri just took over the job

00:29:10,809 --> 00:29:14,530
because you already answered the thing

00:29:13,180 --> 00:29:17,080
that's good that they should be passed

00:29:14,530 --> 00:29:19,390
on to them there's no more this is the

00:29:17,080 --> 00:29:21,610
thing I do I don't do anything more one

00:29:19,390 --> 00:29:24,850
more thing I do is I do both you both

00:29:21,610 --> 00:29:26,380
check the upstream I get tech and the

00:29:24,850 --> 00:29:29,140
upstream shop or both of them at the

00:29:26,380 --> 00:29:33,820
same time that's very important okay

00:29:29,140 --> 00:29:35,830
maybe we just one edition actually the

00:29:33,820 --> 00:29:38,140
same discussion came up on deputies

00:29:35,830 --> 00:29:42,100
discuss on the mining list in the gate

00:29:38,140 --> 00:29:44,410
bill package threat and I explained how

00:29:42,100 --> 00:29:46,510
that works in a little bit more detail

00:29:44,410 --> 00:29:50,170
just without the actual comment because

00:29:46,510 --> 00:29:52,480
I had even had that in mind so there's a

00:29:50,170 --> 00:30:00,940
skid package workshop or boss somewhere

00:29:52,480 --> 00:30:06,330
sometime wiki page which wiki page ok

00:30:00,940 --> 00:30:11,880
well I actually I have some thing which

00:30:06,330 --> 00:30:16,690
i think is missing in the on the gate

00:30:11,880 --> 00:30:18,850
guitar - because mr it's only mentioned

00:30:16,690 --> 00:30:21,429
in the working with existing packages

00:30:18,850 --> 00:30:23,559
but not in the starting a new package

00:30:21,429 --> 00:30:26,590
and the addition of the new package to

00:30:23,559 --> 00:30:30,570
our global mr config it seems missing

00:30:26,590 --> 00:30:32,740
there it's run but it is alias script

00:30:30,570 --> 00:30:36,640
okay so I don't have to do anything

00:30:32,740 --> 00:30:42,850
there and maybe that should maybe that's

00:30:36,640 --> 00:30:44,650
the missing piece yeah um yeah okay so

00:30:42,850 --> 00:30:47,350
the next comment would have been the th

00:30:44,650 --> 00:30:51,120
make call me we need to do that but

00:30:47,350 --> 00:30:57,640
that's not needed anymore

00:30:51,120 --> 00:30:58,360
okay it's one minute past four so let's

00:30:57,640 --> 00:30:59,650
continue

00:30:58,360 --> 00:31:01,600
they've been maintaining us there is

00:30:59,650 --> 00:31:04,270
this nice category of Debian maintained

00:31:01,600 --> 00:31:06,100
as the people who have upload rights for

00:31:04,270 --> 00:31:08,500
specific packages when this was

00:31:06,100 --> 00:31:09,890
introduced some don't know six years ago

00:31:08,500 --> 00:31:12,740
whatever

00:31:09,890 --> 00:31:14,870
some sharp mind realized that this does

00:31:12,740 --> 00:31:16,310
not to work for teams because at this

00:31:14,870 --> 00:31:18,710
time there was no relationship between

00:31:16,310 --> 00:31:21,710
there's no one to one relationship

00:31:18,710 --> 00:31:26,180
between person and and package just some

00:31:21,710 --> 00:31:28,580
general allowing and allowing everyone

00:31:26,180 --> 00:31:30,170
so we said at this time no we we're not

00:31:28,580 --> 00:31:34,100
using this concept in the Debian pearl

00:31:30,170 --> 00:31:36,140
group now an ska has fixed this Debian

00:31:34,100 --> 00:31:40,460
maintenance thing an scaring his

00:31:36,140 --> 00:31:47,180
capacity of FTP team member so in theory

00:31:40,460 --> 00:31:50,390
it might be possible to use it now I

00:31:47,180 --> 00:31:53,690
just thought we should take a short look

00:31:50,390 --> 00:31:56,210
at it if this change in the

00:31:53,690 --> 00:31:58,580
implementation changes anything for us

00:31:56,210 --> 00:32:01,160
if we want to revisit a decision from

00:31:58,580 --> 00:32:05,960
back then or if we are still fine with

00:32:01,160 --> 00:32:09,440
not using diem at all so can I ask if

00:32:05,960 --> 00:32:12,860
there's any Debian maintainer z-- here

00:32:09,440 --> 00:32:15,170
who would like to have upload rights on

00:32:12,860 --> 00:32:18,770
some packages and that this would

00:32:15,170 --> 00:32:21,310
somehow make life better for you or or

00:32:18,770 --> 00:32:21,310
for the team

00:32:30,520 --> 00:32:34,610
right I guess I volunteered to forward

00:32:33,080 --> 00:32:36,620
those remarks too didn't I um

00:32:34,610 --> 00:32:42,740
Ansgar says there are some packages that

00:32:36,620 --> 00:32:47,750
have diem set and my addition to that is

00:32:42,740 --> 00:32:50,180
that that's about currently I mean we

00:32:47,750 --> 00:32:53,030
could change the team policy then it

00:32:50,180 --> 00:32:57,320
would stop being a bug but I guess I'm

00:32:53,030 --> 00:33:01,070
not sure what problem we're would be

00:32:57,320 --> 00:33:02,870
trying to solve by by starting to use

00:33:01,070 --> 00:33:04,190
diem permissions on individual packages

00:33:02,870 --> 00:33:07,930
but I guess it doesn't seem like it

00:33:04,190 --> 00:33:10,040
would create a crisis either yeah

00:33:07,930 --> 00:33:11,510
correct from the people who are

00:33:10,040 --> 00:33:13,850
attending this meeting but maybe just

00:33:11,510 --> 00:33:17,030
say that the next step to do in that era

00:33:13,850 --> 00:33:18,830
is drop a mail to the Pearl to e mailing

00:33:17,030 --> 00:33:22,610
list and say if everybody responds to

00:33:18,830 --> 00:33:26,900
that and if no one then that's the

00:33:22,610 --> 00:33:29,540
answer to the question well we could

00:33:26,900 --> 00:33:32,030
also say we wait for people who think

00:33:29,540 --> 00:33:38,690
they might profit from it to chest raise

00:33:32,030 --> 00:33:40,610
their hand someone just summarized what

00:33:38,690 --> 00:33:48,440
the change is in what the proposal is

00:33:40,610 --> 00:33:50,330
that we would so the change is that the

00:33:48,440 --> 00:33:52,460
debian maintainer permissions are now

00:33:50,330 --> 00:33:54,380
managed in a more or less same way in

00:33:52,460 --> 00:33:58,010
the sense that there's a database which

00:33:54,380 --> 00:34:02,990
keeps pairs of maintainer packaged in it

00:33:58,010 --> 00:34:07,340
previously any package in which you were

00:34:02,990 --> 00:34:10,940
in the uploaders and had the DM upload

00:34:07,340 --> 00:34:14,090
okay set you could upload but we

00:34:10,940 --> 00:34:17,500
generally have been using the uploaders

00:34:14,090 --> 00:34:21,020
field more as a way of tracking who is

00:34:17,500 --> 00:34:23,929
interested in a package so it would have

00:34:21,020 --> 00:34:27,280
required changing that that's by then

00:34:23,929 --> 00:34:27,280
that seemed like a fair summary

00:34:27,530 --> 00:34:30,609
[Music]

00:34:30,740 --> 00:34:37,370
cause if they'd been developer decides

00:34:34,280 --> 00:34:42,530
that this package can be maintained but

00:34:37,370 --> 00:34:45,860
this person that's something that the

00:34:42,530 --> 00:34:48,400
Debian developer decides anyway so he

00:34:45,860 --> 00:34:48,400
can always

00:34:53,790 --> 00:35:02,310
what it seems a little bit uncooperative

00:34:57,900 --> 00:35:04,620
for individuals to to decide who can

00:35:02,310 --> 00:35:07,230
upload the team's packages without any

00:35:04,620 --> 00:35:08,850
consensus in the team or I mean I don't

00:35:07,230 --> 00:35:10,860
know it's necessarily like I say it's

00:35:08,850 --> 00:35:13,770
not a big crisis but it's odd for

00:35:10,860 --> 00:35:17,070
somebody say who it's not in the team

00:35:13,770 --> 00:35:25,290
and doesn't interact to say well you

00:35:17,070 --> 00:35:27,990
know this package you can upload it yeah

00:35:25,290 --> 00:35:31,550
sure we can develop the mechanism if we

00:35:27,990 --> 00:35:31,550
think we want to somehow support it

00:35:33,620 --> 00:35:38,250
spinning already a lot of time and we

00:35:36,180 --> 00:35:41,430
have no one raising the issue as being a

00:35:38,250 --> 00:35:43,440
problem so okay so let's keep the

00:35:41,430 --> 00:35:46,440
sentence in policy we don't use it as a

00:35:43,440 --> 00:35:49,820
group which is still true and if the

00:35:46,440 --> 00:35:49,820
question arises yeah fine

00:35:52,900 --> 00:35:59,920
okay low-hanging fruits meetings was an

00:35:56,540 --> 00:35:59,920
idea per entry

00:36:01,990 --> 00:36:08,450
so these proposal results from quite

00:36:05,930 --> 00:36:11,420
interesting experience in other projects

00:36:08,450 --> 00:36:16,430
about having low hanging fruit sessions

00:36:11,420 --> 00:36:20,450
as a way mainly to get newcomers feel

00:36:16,430 --> 00:36:24,230
welcome and find ways to help and also

00:36:20,450 --> 00:36:28,910
to clean up our plates by getting read

00:36:24,230 --> 00:36:33,350
together of easy things that we can kill

00:36:28,910 --> 00:36:39,560
in a lot at a time in small a mood out

00:36:33,350 --> 00:36:44,240
amount of time which helps getting the

00:36:39,560 --> 00:36:47,540
backlog short and so I propose we well

00:36:44,240 --> 00:36:49,460
we could try to have this like every two

00:36:47,540 --> 00:36:51,680
months or something like that or at

00:36:49,460 --> 00:36:56,230
least try it once and see how it goes

00:36:51,680 --> 00:36:59,930
I'm happy to organize some some

00:36:56,230 --> 00:37:04,340
appointment and suggest this suggested

00:36:59,930 --> 00:37:13,190
tasks we live meetings or IOC meeting

00:37:04,340 --> 00:37:17,390
saucy okay yeah I mean it already

00:37:13,190 --> 00:37:19,910
happens an IRC everyday but what produce

00:37:17,390 --> 00:37:22,880
we are not an IRC so much it makes sense

00:37:19,910 --> 00:37:26,060
to have some agreed-upon time when we

00:37:22,880 --> 00:37:28,190
can meet and perfectly welcome new

00:37:26,060 --> 00:37:30,620
contributors same at this specific time

00:37:28,190 --> 00:37:35,270
will be available to help you I think

00:37:30,620 --> 00:37:39,500
there's a consensus to do that okay so

00:37:35,270 --> 00:37:42,160
great idea next action you propose the

00:37:39,500 --> 00:37:46,630
first meeting or something like this

00:37:42,160 --> 00:37:46,630
Irene cool thanks

00:37:47,220 --> 00:37:55,140
okay then well I actually like to change

00:37:52,770 --> 00:37:57,650
the order a bit so that we don't skip

00:37:55,140 --> 00:38:00,329
the purl 5:18 migration which is kind of

00:37:57,650 --> 00:38:03,540
important I thought it might be nice if

00:38:00,329 --> 00:38:05,280
you could just in some sentences

00:38:03,540 --> 00:38:08,369
summarize this data so that everyone

00:38:05,280 --> 00:38:13,589
knows where we are and what everyone can

00:38:08,369 --> 00:38:16,619
contribute okay so we Nick Cohen I met

00:38:13,589 --> 00:38:19,619
with Julien the day before yesterday and

00:38:16,619 --> 00:38:23,460
it seems there's no particular barrier

00:38:19,619 --> 00:38:26,400
to completing or kicking off the

00:38:23,460 --> 00:38:28,609
migration by uploading 5:18 to unstable

00:38:26,400 --> 00:38:33,619
in the next couple of weeks

00:38:28,609 --> 00:38:36,030
the main blocker as far as the rebuild

00:38:33,619 --> 00:38:39,560
rebuilds go is the subversion package

00:38:36,030 --> 00:38:44,970
which is not a package PKG pill package

00:38:39,560 --> 00:38:47,520
and it's not clear how that could be

00:38:44,970 --> 00:38:48,780
resolved because it failed fails to

00:38:47,520 --> 00:38:53,609
build on some architectures at the

00:38:48,780 --> 00:38:57,119
moment apart from that there's a handful

00:38:53,609 --> 00:38:59,310
of other blockers which are mostly being

00:38:57,119 --> 00:39:06,450
worked on by various people around the

00:38:59,310 --> 00:39:09,690
room and another 30 or so RC bugs which

00:39:06,450 --> 00:39:11,550
on blockers but which will cause

00:39:09,690 --> 00:39:17,040
breakage once the upload happens and

00:39:11,550 --> 00:39:20,069
that list there and really it's just a

00:39:17,040 --> 00:39:24,359
question of picking things up as we can

00:39:20,069 --> 00:39:27,200
but quite a few of the the issues are

00:39:24,359 --> 00:39:32,190
unsolved upstream so it's a from scratch

00:39:27,200 --> 00:39:36,180
working out what to do for each one okay

00:39:32,190 --> 00:39:37,859
so and I could at the URLs to the copy

00:39:36,180 --> 00:39:40,290
file so that everyone has a starting

00:39:37,859 --> 00:39:42,030
point yeah this is the transition Park

00:39:40,290 --> 00:39:45,810
with the blocking parks these are the

00:39:42,030 --> 00:39:52,440
user tech packs and there's also some

00:39:45,810 --> 00:39:55,079
where this page and influen calculated

00:39:52,440 --> 00:39:59,250
the reverse dependencies of the packages

00:39:55,079 --> 00:40:00,090
which have backs to to show the priority

00:39:59,250 --> 00:40:05,190
and

00:40:00,090 --> 00:40:07,080
I don't know yeah and which packages can

00:40:05,190 --> 00:40:08,520
be removed because they have no reverse

00:40:07,080 --> 00:40:10,890
dependency so it's maybe not worth

00:40:08,520 --> 00:40:12,900
spending time on them the only other

00:40:10,890 --> 00:40:15,960
thing I would always say is that I'm

00:40:12,900 --> 00:40:19,050
currently rebuilding all the packages

00:40:15,960 --> 00:40:22,880
which build depend on Perl or Perl

00:40:19,050 --> 00:40:25,650
libraries which may throw out some more

00:40:22,880 --> 00:40:30,620
it's we've never done quite this test

00:40:25,650 --> 00:40:34,310
before but it's just getting things in a

00:40:30,620 --> 00:40:37,110
good state in advance of the transition

00:40:34,310 --> 00:40:43,620
okay cool

00:40:37,110 --> 00:40:47,460
five more minutes oh cool

00:40:43,620 --> 00:41:11,040
yeah packaged pearl tools package Tammy

00:40:47,460 --> 00:41:15,050
on one sentence we hope that this will

00:41:11,040 --> 00:41:15,050
make you

00:41:17,380 --> 00:41:27,400
I really like that idea and I want to

00:41:19,860 --> 00:41:28,660
join you in the effort cool yeah I think

00:41:27,400 --> 00:41:33,060
correctly we are waiting for one

00:41:28,660 --> 00:41:35,470
licensed statement but besides that

00:41:33,060 --> 00:41:37,990
besides that the package should be fine

00:41:35,470 --> 00:41:41,890
soon okay

00:41:37,990 --> 00:41:44,770
jumping around in our gender damage is

00:41:41,890 --> 00:41:54,100
there something you wanted to add from

00:41:44,770 --> 00:41:56,680
your personal list to the meeting some

00:41:54,100 --> 00:42:00,370
of them are my ideas because I'm not

00:41:56,680 --> 00:42:02,860
that really involved yet but some of

00:42:00,370 --> 00:42:07,570
them which might be interesting for

00:42:02,860 --> 00:42:10,540
others what I want to do is know the pet

00:42:07,570 --> 00:42:13,930
was better which are used in the Debian

00:42:10,540 --> 00:42:16,660
infrastructure because many parts of the

00:42:13,930 --> 00:42:21,220
Debian infrastructure heavily depends on

00:42:16,660 --> 00:42:22,330
her and its needs there are places when

00:42:21,220 --> 00:42:25,990
some help is needed

00:42:22,330 --> 00:42:29,250
I want to keep mojolicious in debian as

00:42:25,990 --> 00:42:32,370
up-to-date as possible and promote I

00:42:29,250 --> 00:42:38,500
want to promote ease its use in Debian

00:42:32,370 --> 00:42:42,130
maybe even replacing older or maybe not

00:42:38,500 --> 00:42:47,220
that better-suited tools because this is

00:42:42,130 --> 00:42:47,220
some kind of part of the modern pair

00:42:49,110 --> 00:43:02,530
yeah my idea I had an idea of making a

00:42:57,340 --> 00:43:06,270
list where and collecting best practices

00:43:02,530 --> 00:43:09,550
and things like that and then me and

00:43:06,270 --> 00:43:12,460
encouraged me to just do it make the

00:43:09,550 --> 00:43:15,670
changes so I think that's that's the

00:43:12,460 --> 00:43:19,730
thing but I will do there are some work

00:43:15,670 --> 00:43:23,480
going on with packages Debian org

00:43:19,730 --> 00:43:27,710
and it goes in the right direction I

00:43:23,480 --> 00:43:32,890
hope in a maybe a few days or weeks it

00:43:27,710 --> 00:43:35,390
depends when I get access most

00:43:32,890 --> 00:43:37,730
infrastructure will be replaced with

00:43:35,390 --> 00:43:40,390
fancy GI which is better suited for the

00:43:37,730 --> 00:43:40,390
DSA team

00:43:44,120 --> 00:44:14,610
okay cool and yeah you know that you can

00:43:49,250 --> 00:44:15,900
always good so we have a half minute

00:44:14,610 --> 00:44:18,540
left something like that

00:44:15,900 --> 00:44:21,450
okay so Lin cien profile is just the

00:44:18,540 --> 00:44:24,090
ideal engine supports specific

00:44:21,450 --> 00:44:28,290
additional checks and it might be useful

00:44:24,090 --> 00:44:32,580
to have some in a group to point to

00:44:28,290 --> 00:44:35,760
specific group policy thingies Jenkins

00:44:32,580 --> 00:44:37,980
yoga is running Jenkins instances

00:44:35,760 --> 00:44:40,830
everywhere and he also told us if we

00:44:37,980 --> 00:44:42,450
have some well Jenkins jobs then we

00:44:40,830 --> 00:44:46,440
should ask him

00:44:42,450 --> 00:44:49,140
well there's Jenkins Jenkins Debian glue

00:44:46,440 --> 00:44:51,930
from makup woke up

00:44:49,140 --> 00:44:56,240
I think it's not that in Debian but will

00:44:51,930 --> 00:44:59,520
likely be at some time I guess oh that

00:44:56,240 --> 00:45:02,880
tool makes it very easy to automatically

00:44:59,520 --> 00:45:06,360
build Debian packages out of get a check

00:45:02,880 --> 00:45:10,790
of git repositories upon commit or push

00:45:06,360 --> 00:45:16,050
and it can even export the build package

00:45:10,790 --> 00:45:19,080
and packages into a rebel repository so

00:45:16,050 --> 00:45:22,290
you can up get install and test the just

00:45:19,080 --> 00:45:24,810
build package very easy and I would be

00:45:22,290 --> 00:45:27,660
really happy to see something like that

00:45:24,810 --> 00:45:31,260
for our infrastructure we use it in a

00:45:27,660 --> 00:45:34,380
satchel team and it's very convenient

00:45:31,260 --> 00:45:37,590
your changes and half an hour later well

00:45:34,380 --> 00:45:39,240
satchel takes a while you can up get

00:45:37,590 --> 00:45:41,640
install these packages on two

00:45:39,240 --> 00:45:43,520
architectures and just play one with

00:45:41,640 --> 00:45:46,410
them and see if you broke anything

00:45:43,520 --> 00:45:47,970
that's very comfortable and I really

00:45:46,410 --> 00:45:50,040
would like to see that for the Debian

00:45:47,970 --> 00:45:54,630
pearl group to despite I think it's a

00:45:50,040 --> 00:45:56,150
resource issue maybe can you help with

00:45:54,630 --> 00:45:57,890
the implementation

00:45:56,150 --> 00:46:00,940
huh can you help with the implementation

00:45:57,890 --> 00:46:03,650
I can try

00:46:00,940 --> 00:46:05,570
okay so we can take a note that axel

00:46:03,650 --> 00:46:10,820
knows more about Jenkins than everyone

00:46:05,570 --> 00:46:14,270
else in the room right okay I'm afraid

00:46:10,820 --> 00:46:17,660
we're running out of time so I think we

00:46:14,270 --> 00:46:21,980
have to finish the official part I think

00:46:17,660 --> 00:46:23,630
we should thank Gregor again for running

00:46:21,980 --> 00:46:26,540
the bath and also lots of other things

00:46:23,630 --> 00:46:34,829
that he did for the team last year

00:46:26,540 --> 00:46:34,829

YouTube URL: https://www.youtube.com/watch?v=XqKcw6VPB-U


