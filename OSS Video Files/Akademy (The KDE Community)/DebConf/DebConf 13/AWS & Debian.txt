Title: AWS & Debian
Publication date: 2017-11-29
Playlist: DebConf 13
Description: 
	by James Bromberger

At: DebConf13
https://debconf13.debconf.org/
Room: Main talk room
Scheduled start: 2013-08-12 10:30:00
Captions: 
	00:00:00,410 --> 00:00:04,920
all righty everybody we're about ready

00:00:02,669 --> 00:00:08,820
to kick off our next talk we're going

00:00:04,920 --> 00:00:12,090
from Google to the other leader in the

00:00:08,820 --> 00:00:13,740
public cloud AWS and his shirt pretty

00:00:12,090 --> 00:00:15,630
much says it off you can see it just

00:00:13,740 --> 00:00:17,160
keep calm and launched the debian mi

00:00:15,630 --> 00:00:19,410
without further ado this is a James

00:00:17,160 --> 00:00:20,150
bromberger good morning everybody can

00:00:19,410 --> 00:00:24,000
everyone hear me

00:00:20,150 --> 00:00:25,260
yay feel free to move closer feel pretty

00:00:24,000 --> 00:00:28,080
much closer so my name is James

00:00:25,260 --> 00:00:29,760
bromberger and technically RI my day job

00:00:28,080 --> 00:00:31,740
is I'm a solution architect for Amazon

00:00:29,760 --> 00:00:33,899
Web Services which is something I've

00:00:31,740 --> 00:00:35,280
been doing for just on a year now but

00:00:33,899 --> 00:00:36,930
let me take you through first we're

00:00:35,280 --> 00:00:38,489
going to cover today firstly a bit more

00:00:36,930 --> 00:00:41,640
about Who I am so you've got some

00:00:38,489 --> 00:00:43,410
background what is AWS which I'm gonna

00:00:41,640 --> 00:00:44,940
be pretty quick on because I'm thinking

00:00:43,410 --> 00:00:46,860
most people here have probably come

00:00:44,940 --> 00:00:48,360
across it at some stage and then

00:00:46,860 --> 00:00:49,890
generally go through what Debian is

00:00:48,360 --> 00:00:51,390
doing with AWS so most of this talk is

00:00:49,890 --> 00:00:53,250
actually gonna be given from my

00:00:51,390 --> 00:00:59,190
perspective as a Debian developer for

00:00:53,250 --> 00:01:00,180
the last 12 years or so and and

00:00:59,190 --> 00:01:01,859
obviously the things that I've been

00:01:00,180 --> 00:01:03,359
trying to do from from the Amazon

00:01:01,859 --> 00:01:05,850
perspective to try and help Debian and

00:01:03,359 --> 00:01:08,520
obviously what what Amazon is getting

00:01:05,850 --> 00:01:10,260
out of it we've got a buff that I'm

00:01:08,520 --> 00:01:12,750
doing tomorrow future of the Debian am

00:01:10,260 --> 00:01:13,799
ice so this will probably overlap a bit

00:01:12,750 --> 00:01:17,850
with what some of the stuff we're doing

00:01:13,799 --> 00:01:19,080
with Jimmy and the guys and I've got a

00:01:17,850 --> 00:01:21,810
meeting coming up tomorrow for things

00:01:19,080 --> 00:01:23,189
that I'm at AWS can actually do for for

00:01:21,810 --> 00:01:25,350
Debian so if you've got an idea of

00:01:23,189 --> 00:01:26,909
something you want to do come along and

00:01:25,350 --> 00:01:29,100
I'll see if I can help you we'll find

00:01:26,909 --> 00:01:31,170
the right people and you can take

00:01:29,100 --> 00:01:34,430
advantage of whatever AWS pieces you

00:01:31,170 --> 00:01:37,590
want to play with so anyway who is Jeb

00:01:34,430 --> 00:01:39,180
and obviously that's a TLA most people

00:01:37,590 --> 00:01:41,759
here I would imagine have had TLS over

00:01:39,180 --> 00:01:45,329
time I've been a debian years since

00:01:41,759 --> 00:01:46,829
about 95 a developer since 2000 I ran

00:01:45,329 --> 00:01:49,290
Linux confer you anyone here been to

00:01:46,829 --> 00:01:52,320
Linux confer you the Australian National

00:01:49,290 --> 00:01:54,750
Conference Zac yes ok so the next one

00:01:52,320 --> 00:01:57,180
coming up in January if you're looking

00:01:54,750 --> 00:01:58,680
for some warm weather in January come to

00:01:57,180 --> 00:02:00,719
Australia it's in Perth in my home city

00:01:58,680 --> 00:02:03,810
I'm not running it because I run it in

00:02:00,719 --> 00:02:05,909
2003 once bitten but please come on down

00:02:03,810 --> 00:02:07,259
I went to DEFCON 1 I've got some proof

00:02:05,909 --> 00:02:08,970
coming up of that and I went to

00:02:07,259 --> 00:02:13,909
Edinburgh

00:02:08,970 --> 00:02:20,700
so yeah the proof who here is in there

00:02:13,909 --> 00:02:27,890
one okay where are you where are you

00:02:20,700 --> 00:02:30,239
Zack in there somewhere

00:02:27,890 --> 00:02:32,790
okay I mean there are a bunch of people

00:02:30,239 --> 00:02:33,780
still here who were here I I do this for

00:02:32,790 --> 00:02:36,269
my own embarrassment more than anyone

00:02:33,780 --> 00:02:39,480
elses we will know and love Colin Watson

00:02:36,269 --> 00:02:41,879
on the right and Thomas Langer is

00:02:39,480 --> 00:02:43,230
somewhere around here as well and then

00:02:41,879 --> 00:02:43,620
Martin Michael Mayer who's not here this

00:02:43,230 --> 00:02:47,489
year

00:02:43,620 --> 00:02:53,239
christabella mentor and a bunch of other

00:02:47,489 --> 00:02:56,730
people is that and race scale D and

00:02:53,239 --> 00:02:59,190
Direction D yes so a long long time ago

00:02:56,730 --> 00:03:00,390
many memories but anyway so let me skip

00:02:59,190 --> 00:03:01,680
through the bit about waters Amazon Web

00:03:00,390 --> 00:03:03,269
Services because hopefully a lot of

00:03:01,680 --> 00:03:05,069
people have have already come across

00:03:03,269 --> 00:03:08,690
this so it's a collection of remote

00:03:05,069 --> 00:03:12,450
computing services so that's easy to

00:03:08,690 --> 00:03:15,079
anyone here actually used ec2 yeah but a

00:03:12,450 --> 00:03:18,930
quarter of the room brilliant bit less

00:03:15,079 --> 00:03:20,160
its virtual service you install whatever

00:03:18,930 --> 00:03:22,260
you want on it you do whatever you want

00:03:20,160 --> 00:03:23,819
with it pay for it by the hour shut it

00:03:22,260 --> 00:03:27,389
down when you don't want it so similar

00:03:23,819 --> 00:03:29,549
kind of thing storage so s3 as a storage

00:03:27,389 --> 00:03:31,859
service object storage whereby the

00:03:29,549 --> 00:03:34,349
amount of data that you upload is the

00:03:31,859 --> 00:03:35,849
exact amount that you pay for unlike for

00:03:34,349 --> 00:03:38,340
example block storage if you go and buy

00:03:35,849 --> 00:03:40,680
a SAN you typically pay for the entire

00:03:38,340 --> 00:03:42,560
San you put five megabytes onto it

00:03:40,680 --> 00:03:44,879
you're still paying for the entire San

00:03:42,560 --> 00:03:45,959
with block object storage you're only

00:03:44,879 --> 00:03:48,269
paying for the amount of storage you're

00:03:45,959 --> 00:03:50,549
actually consuming prorated I think it's

00:03:48,269 --> 00:03:51,690
done over the hour or day or so so it's

00:03:50,549 --> 00:03:55,169
it's pretty accurate to what you're

00:03:51,690 --> 00:03:56,669
using networking obviously storage

00:03:55,169 --> 00:03:58,560
compute is pretty useless without a bit

00:03:56,669 --> 00:03:59,879
of networking you want to be able to

00:03:58,560 --> 00:04:01,560
connect to stuff so we do a hell of a

00:03:59,879 --> 00:04:02,669
lot of networking and one of the more

00:04:01,560 --> 00:04:05,430
recent things that we've been working on

00:04:02,669 --> 00:04:09,150
has been virtual private cloud so public

00:04:05,430 --> 00:04:11,269
cloud has been around for or was at 2006

00:04:09,150 --> 00:04:13,530
late 2006 when Amazon start of this

00:04:11,269 --> 00:04:14,790
virtual private cloud is an extension to

00:04:13,530 --> 00:04:17,070
that to allow you to define your own

00:04:14,790 --> 00:04:19,349
private network potentially with no

00:04:17,070 --> 00:04:21,109
public internet access to it that you'd

00:04:19,349 --> 00:04:23,150
connect to using IPSec

00:04:21,109 --> 00:04:26,720
or potentially OpenVPN or any other VPN

00:04:23,150 --> 00:04:28,340
technology you want or private fiber if

00:04:26,720 --> 00:04:31,699
you so wish to connect into your private

00:04:28,340 --> 00:04:33,680
resources and load balancing and other

00:04:31,699 --> 00:04:36,139
stuff in there as well and there's over

00:04:33,680 --> 00:04:38,750
30 services that the AWS offers so easy

00:04:36,139 --> 00:04:40,729
to compute is just one of them s3 is one

00:04:38,750 --> 00:04:42,440
of them low balancing is another service

00:04:40,729 --> 00:04:44,360
over 30 including things like gum

00:04:42,440 --> 00:04:46,099
hardware security modules one of my

00:04:44,360 --> 00:04:48,080
favorite ones are the last sort of nine

00:04:46,099 --> 00:04:51,860
months or so anyone ever used the

00:04:48,080 --> 00:04:53,710
hardware security module yeah nice so we

00:04:51,860 --> 00:04:55,970
have these available in AWS now

00:04:53,710 --> 00:04:58,550
basically for those that aren't familiar

00:04:55,970 --> 00:05:00,409
with them if you've seen Mission

00:04:58,550 --> 00:05:01,759
Impossible how this message will

00:05:00,409 --> 00:05:02,900
self-destruct in five seconds these are

00:05:01,759 --> 00:05:03,949
the devices that if you try and attack

00:05:02,900 --> 00:05:05,360
them with a screwdriver

00:05:03,949 --> 00:05:08,090
they will zero themselves it's for

00:05:05,360 --> 00:05:11,419
managing your crypto keys securely and

00:05:08,090 --> 00:05:14,270
so I think it's a the safe net lunar SI

00:05:11,419 --> 00:05:17,270
devices that we've got and you basically

00:05:14,270 --> 00:05:19,039
have them by the month if you want yeah

00:05:17,270 --> 00:05:21,520
Security's an important thing everyone

00:05:19,039 --> 00:05:23,210
here agrees secure it's important yeah

00:05:21,520 --> 00:05:25,310
brilliant

00:05:23,210 --> 00:05:26,840
but also on top of all of those kind of

00:05:25,310 --> 00:05:28,969
services it's also supply chain

00:05:26,840 --> 00:05:30,979
logistics and operational excellence and

00:05:28,969 --> 00:05:32,719
certifications and audits and operating

00:05:30,979 --> 00:05:34,909
at massive scale and and trying to drop

00:05:32,719 --> 00:05:36,949
those prices all the time and and living

00:05:34,909 --> 00:05:39,949
up to what we feel is going to be a good

00:05:36,949 --> 00:05:41,810
experience for our customers and making

00:05:39,949 --> 00:05:46,270
compute work for people as effectively

00:05:41,810 --> 00:05:48,020
as possible but more importantly for ec2

00:05:46,270 --> 00:05:50,210
customers get to choose the software

00:05:48,020 --> 00:05:52,009
they're going to run there's a whole

00:05:50,210 --> 00:05:54,650
bunch of Amazon machine images or AM

00:05:52,009 --> 00:05:56,389
eyes that you can choose and for a long

00:05:54,650 --> 00:05:57,919
time there's not been official Debian

00:05:56,389 --> 00:05:59,389
images on there it's been pretty

00:05:57,919 --> 00:06:03,050
straightforward to make your own one

00:05:59,389 --> 00:06:04,279
customers can can master their own but

00:06:03,050 --> 00:06:05,330
this was one of the things that as a

00:06:04,279 --> 00:06:06,949
Debian developer I've been sitting there

00:06:05,330 --> 00:06:09,169
going we should answer this we should

00:06:06,949 --> 00:06:13,009
have a Debian image which people can

00:06:09,169 --> 00:06:15,289
trust and run as opposed to finding some

00:06:13,009 --> 00:06:17,509
unknown ami that they may not know of or

00:06:15,289 --> 00:06:19,190
may not trust or having to make their

00:06:17,509 --> 00:06:20,389
own which yeah I've spoken to a couple

00:06:19,190 --> 00:06:22,580
of people here said they don't know how

00:06:20,389 --> 00:06:23,840
to do it that's fine it's it's not

00:06:22,580 --> 00:06:26,479
straightforward to begin with if it's

00:06:23,840 --> 00:06:28,729
your first time using ec2 it does get

00:06:26,479 --> 00:06:32,330
pretty easy and I'll demonstrate how we

00:06:28,729 --> 00:06:33,529
do it in a second so let's start with

00:06:32,330 --> 00:06:34,760
some of the other things that the Debian

00:06:33,529 --> 00:06:37,510
is doing with AWS

00:06:34,760 --> 00:06:40,070
firstly I don't steal his thunder but

00:06:37,510 --> 00:06:44,330
massive distributed Debian package

00:06:40,070 --> 00:06:47,780
recompilation this is not my project

00:06:44,330 --> 00:06:49,280
this is Lucas's project so Lucas has

00:06:47,780 --> 00:06:52,640
been recompiling is everything archived

00:06:49,280 --> 00:06:55,310
on ec2 I organized the a grant for him

00:06:52,640 --> 00:06:58,400
since I've been at AWS so there was one

00:06:55,310 --> 00:06:59,600
given the year before and effectively

00:06:58,400 --> 00:07:00,890
it's just reek implying it now I'm sure

00:06:59,600 --> 00:07:03,170
the Lucas could you could talk about

00:07:00,890 --> 00:07:04,940
this at length on this kind of stuff

00:07:03,170 --> 00:07:06,770
but what's been interesting for me is

00:07:04,940 --> 00:07:08,360
that that Lucas chose to use our spot

00:07:06,770 --> 00:07:13,490
market for actually provisioning the

00:07:08,360 --> 00:07:14,780
compute power the spot market is a very

00:07:13,490 --> 00:07:17,240
interesting place where you can get very

00:07:14,780 --> 00:07:19,370
cheap compute it's basically putting in

00:07:17,240 --> 00:07:22,580
a bid on the unused capacity on the

00:07:19,370 --> 00:07:24,380
cloud so we have a couple of pricing

00:07:22,580 --> 00:07:27,110
models the on-demand model for pricing

00:07:24,380 --> 00:07:28,880
is it's this much per hour turn it on

00:07:27,110 --> 00:07:30,710
for as many hours as you want you turn

00:07:28,880 --> 00:07:31,910
it off you stop paying but of course if

00:07:30,710 --> 00:07:33,470
we've got all this equipment up and

00:07:31,910 --> 00:07:35,630
running then why not give us a bid and

00:07:33,470 --> 00:07:38,210
pay a price for what you think is a fair

00:07:35,630 --> 00:07:41,330
amount and if nobody else is using it's

00:07:38,210 --> 00:07:42,800
yours if the market price goes up then

00:07:41,330 --> 00:07:44,000
you'll lose your instance you lose your

00:07:42,800 --> 00:07:45,650
compute so obviously you wouldn't do

00:07:44,000 --> 00:07:47,840
this for all kinds of compute processing

00:07:45,650 --> 00:07:49,670
but for things like recompilation of

00:07:47,840 --> 00:07:53,360
binaries you could restart that pretty

00:07:49,670 --> 00:07:54,920
easily and so it becomes a very

00:07:53,360 --> 00:07:57,080
interesting and very cheap way of

00:07:54,920 --> 00:08:00,020
getting large amounts of compute and so

00:07:57,080 --> 00:08:02,090
Lucas has a post on his blog about what

00:08:00,020 --> 00:08:04,280
he's done for this and it's a great

00:08:02,090 --> 00:08:07,760
example of using that that spot market

00:08:04,280 --> 00:08:10,220
furfle compute um the price does change

00:08:07,760 --> 00:08:13,520
over time and so you can actually see

00:08:10,220 --> 00:08:16,490
the history per availability zone for

00:08:13,520 --> 00:08:17,840
Amazon and per instance size so there's

00:08:16,490 --> 00:08:20,540
two to interesting concepts we need to

00:08:17,840 --> 00:08:23,330
talk about Amazon has a whole bunch of

00:08:20,540 --> 00:08:26,150
global infrastructure we generally talk

00:08:23,330 --> 00:08:28,370
about a region as being a geographic

00:08:26,150 --> 00:08:31,130
location where customers can use compute

00:08:28,370 --> 00:08:34,010
and storage and so we have nine of these

00:08:31,130 --> 00:08:36,729
worldwide one is reserved exclusively

00:08:34,010 --> 00:08:40,250
for the US government but the others of

00:08:36,729 --> 00:08:43,219
Dublin Sydney Singapore Tokyo Sao Paulo

00:08:40,250 --> 00:08:46,320
in South America u.s. East our original

00:08:43,219 --> 00:08:48,570
one and California and Oregon

00:08:46,320 --> 00:08:50,639
now each of those regions has multiple

00:08:48,570 --> 00:08:51,959
availability zones at least two you can

00:08:50,639 --> 00:08:54,779
think of an available zone as being a

00:08:51,959 --> 00:08:56,579
cluster of data centers and we

00:08:54,779 --> 00:08:58,290
transparently add and remove data center

00:08:56,579 --> 00:09:02,550
halls to those availability zones over

00:08:58,290 --> 00:09:04,769
time generally add and then the demand

00:09:02,550 --> 00:09:06,000
for each size of instance and a size of

00:09:04,769 --> 00:09:07,620
an instance is an amount of compute

00:09:06,000 --> 00:09:11,399
power and memory that's being allocated

00:09:07,620 --> 00:09:13,350
to your hosts the demand does change

00:09:11,399 --> 00:09:14,790
over time and so we've graphed it so you

00:09:13,350 --> 00:09:16,829
can see what is the current spot bit and

00:09:14,790 --> 00:09:18,959
as you can see from this graph the

00:09:16,829 --> 00:09:21,149
on-demand price for a medium which i

00:09:18,959 --> 00:09:24,120
think is about seven and a half gig of

00:09:21,149 --> 00:09:25,680
memory and an amount of compute power of

00:09:24,120 --> 00:09:26,970
which we have our own metric for compute

00:09:25,680 --> 00:09:29,490
power because if you you know one here

00:09:26,970 --> 00:09:32,370
bought a CPU before anyone yeah

00:09:29,490 --> 00:09:34,110
everyone's bought a CPU before you

00:09:32,370 --> 00:09:38,329
probably can't buy the same CPUs today

00:09:34,110 --> 00:09:41,430
that you were buying in 2005 or 2006

00:09:38,329 --> 00:09:43,019
that we've come up with to give a a kind

00:09:41,430 --> 00:09:45,870
of quantitative feel to how much power

00:09:43,019 --> 00:09:48,870
is against an instance and so a medium

00:09:45,870 --> 00:09:51,690
has got to compute units worth of power

00:09:48,870 --> 00:09:53,790
a small has got one a large it's got

00:09:51,690 --> 00:09:57,149
four so obviously that's kind of

00:09:53,790 --> 00:09:58,889
doubling each time so the spot pricing

00:09:57,149 --> 00:10:01,319
on here was between one point eight

00:09:58,889 --> 00:10:03,569
cents to three cents an hour with the

00:10:01,319 --> 00:10:06,449
yellow line dropping around so that's

00:10:03,569 --> 00:10:08,190
between 80% to 88 percent cheaper than

00:10:06,449 --> 00:10:11,690
the standard pricing so this is a

00:10:08,190 --> 00:10:14,069
perfect use for the lucas' project

00:10:11,690 --> 00:10:16,620
second thing we've been doing and this

00:10:14,069 --> 00:10:19,139
has kind of been an experiment that I've

00:10:16,620 --> 00:10:22,880
been doing for about five six months

00:10:19,139 --> 00:10:26,550
working with Raphael on HTTP Debian net

00:10:22,880 --> 00:10:28,560
to give us a little bit of help on

00:10:26,550 --> 00:10:31,620
getting the package archives available

00:10:28,560 --> 00:10:32,760
within AWS regions but also making it

00:10:31,620 --> 00:10:35,519
available to customers outside of those

00:10:32,760 --> 00:10:37,170
regions and so we've been using cloud

00:10:35,519 --> 00:10:39,029
front which I've set up as cloud front

00:10:37,170 --> 00:10:40,560
or Debian net you're more than welcome

00:10:39,029 --> 00:10:41,760
to hit that web page and it'll tell you

00:10:40,560 --> 00:10:45,660
hey why don't you try and add this to

00:10:41,760 --> 00:10:46,500
your sources and it'll actually HTTP I

00:10:45,660 --> 00:10:48,000
mean it

00:10:46,500 --> 00:10:49,620
for certain regions will redirect you to

00:10:48,000 --> 00:10:50,880
cloud front or Debian didn't it you

00:10:49,620 --> 00:10:53,579
can't use it directly if you want um

00:10:50,880 --> 00:10:56,279
cloud front is our global CDN currently

00:10:53,579 --> 00:10:58,410
has 42 points of presence the last two

00:10:56,279 --> 00:11:00,690
opened about two weeks ago in Chennai

00:10:58,410 --> 00:11:02,610
and Mumbai in India

00:11:00,690 --> 00:11:04,140
and we're constantly expanding that and

00:11:02,610 --> 00:11:06,570
it looks like you can't see could anyone

00:11:04,140 --> 00:11:11,580
see the map behind that yeah

00:11:06,570 --> 00:11:13,140
never use grey excellent so the idea is

00:11:11,580 --> 00:11:15,150
that it will accelerate it so it's a

00:11:13,140 --> 00:11:16,670
caching network so it'll accelerate it

00:11:15,150 --> 00:11:18,510
after the first hit for all of those

00:11:16,670 --> 00:11:21,630
files that are out there and to reduce

00:11:18,510 --> 00:11:22,770
the load on as Jimmy said reduce the

00:11:21,630 --> 00:11:26,970
load on the Debian archive

00:11:22,770 --> 00:11:28,470
infrastructure that we have so you can

00:11:26,970 --> 00:11:31,260
use it nap sources we can use it via the

00:11:28,470 --> 00:11:34,380
redirector so one of the things that I

00:11:31,260 --> 00:11:37,950
found is that um most objects are fine

00:11:34,380 --> 00:11:39,600
with the default caching of 24 hours so

00:11:37,950 --> 00:11:41,880
this is cloud fronts default if there

00:11:39,600 --> 00:11:43,710
are no preferences set by our HTTP

00:11:41,880 --> 00:11:46,620
headers and HTTP headers are the correct

00:11:43,710 --> 00:11:50,690
way to do this then we'll try and cache

00:11:46,620 --> 00:11:53,880
stuff for 24 hours using a LRU cache

00:11:50,690 --> 00:11:57,540
effectively but obviously some of those

00:11:53,880 --> 00:12:00,840
files need to be quite volatile index

00:11:57,540 --> 00:12:02,280
files translation files trace files we

00:12:00,840 --> 00:12:03,060
want to force them to be a little bit

00:12:02,280 --> 00:12:04,950
quicker

00:12:03,060 --> 00:12:06,330
and I've put a call out to say hey can

00:12:04,950 --> 00:12:09,120
we get some of these cache control

00:12:06,330 --> 00:12:13,860
headers added to FTP Debian org over

00:12:09,120 --> 00:12:14,820
HTTP and given the timing I mean ok I'll

00:12:13,860 --> 00:12:17,070
actually have to try and implement

00:12:14,820 --> 00:12:19,470
something so I've got for certain paths

00:12:17,070 --> 00:12:21,330
an interstitial web server which is

00:12:19,470 --> 00:12:24,570
effectively intercepting some paths and

00:12:21,330 --> 00:12:26,880
adding the relevant cache headers to

00:12:24,570 --> 00:12:29,610
ensure that we are pretty fresh on these

00:12:26,880 --> 00:12:31,470
files I'm talking seconds instead of 24

00:12:29,610 --> 00:12:33,420
hours and so it's going to give you a

00:12:31,470 --> 00:12:34,620
bit of a view of how this works and give

00:12:33,420 --> 00:12:37,410
you some idea of what actually you can

00:12:34,620 --> 00:12:41,430
access via cloud front Debian net today

00:12:37,410 --> 00:12:44,040
and this may actually expand so Debian

00:12:41,430 --> 00:12:46,740
CD if you're after CD images if you hit

00:12:44,040 --> 00:12:49,410
cloud front Debian net slash Debian dash

00:12:46,740 --> 00:12:51,540
CD you'll be actually getting a cached

00:12:49,410 --> 00:12:54,480
copy of the the CD distribution

00:12:51,540 --> 00:12:55,770
including with blu-ray images back ports

00:12:54,480 --> 00:12:57,180
the old back ports obviously now

00:12:55,770 --> 00:13:00,570
deprecated given the back waters moved

00:12:57,180 --> 00:13:02,730
into the main archives is there but the

00:13:00,570 --> 00:13:05,220
interesting bits come when the project

00:13:02,730 --> 00:13:06,720
file and the discs as she goes off to

00:13:05,220 --> 00:13:08,580
this little server of mine that I've set

00:13:06,720 --> 00:13:10,890
up on ec2 which is that interstitial

00:13:08,580 --> 00:13:13,379
server just adding on those extra cache

00:13:10,890 --> 00:13:14,970
control headers and the

00:13:13,379 --> 00:13:16,769
default page the Pater that some of you

00:13:14,970 --> 00:13:17,849
may have just seen is coming from an s3

00:13:16,769 --> 00:13:20,099
storage bucket

00:13:17,849 --> 00:13:23,789
it's what about four kilobytes worth of

00:13:20,099 --> 00:13:26,429
data and so what happens is from each of

00:13:23,789 --> 00:13:28,889
our let edge locations for the CDN the

00:13:26,429 --> 00:13:29,999
path mapping looks like if you ask for

00:13:28,889 --> 00:13:31,679
anything under stash then it goes

00:13:29,999 --> 00:13:33,449
straight to that storage bucket which is

00:13:31,679 --> 00:13:36,029
why you've got that that web page with

00:13:33,449 --> 00:13:37,289
the little logos on it if it's anything

00:13:36,029 --> 00:13:39,089
like slash Debbie and then it goes

00:13:37,289 --> 00:13:41,009
directly off to FTP dot Debian org

00:13:39,089 --> 00:13:44,819
caching it for 24 hours by default

00:13:41,009 --> 00:13:47,159
you're wrong with me so far beyond that

00:13:44,819 --> 00:13:48,899
if it's looking at Debian disks then

00:13:47,159 --> 00:13:51,089
that goes off to my ec2 instance which

00:13:48,899 --> 00:13:52,919
adds these extra headers on saying well

00:13:51,089 --> 00:13:54,629
instead of the default 24 hours because

00:13:52,919 --> 00:13:57,359
there's no headers being returned from

00:13:54,629 --> 00:13:59,669
our upstream let's work on I think I

00:13:57,359 --> 00:14:03,149
made at a default of 15 minutes expiry

00:13:59,669 --> 00:14:04,979
so the cache is pretty fresh

00:14:03,149 --> 00:14:07,649
and then for certain other pars like

00:14:04,979 --> 00:14:09,899
Debian CD and Debbie an archive goes

00:14:07,649 --> 00:14:14,279
directly off to those because archive

00:14:09,899 --> 00:14:16,319
generally doesn't change that much and

00:14:14,279 --> 00:14:19,619
of course this happens times 42

00:14:16,319 --> 00:14:21,209
locations worldwide these locations do

00:14:19,619 --> 00:14:22,229
do collapsed forwarding their Weaver on

00:14:21,209 --> 00:14:26,149
anyone familiar with collapsed

00:14:22,229 --> 00:14:28,529
forwarding so anyone runs squid before

00:14:26,149 --> 00:14:30,869
squid 2 6 used to have a brilliant

00:14:28,529 --> 00:14:33,239
feature that if you came to your squid

00:14:30,869 --> 00:14:35,699
server with like 20 result really

00:14:33,239 --> 00:14:38,459
requests for the same URL at the same

00:14:35,699 --> 00:14:40,559
time it would actually pause all 20

00:14:38,459 --> 00:14:42,149
requests do one request the origin and

00:14:40,559 --> 00:14:46,019
then service all requests simultaneously

00:14:42,149 --> 00:14:48,229
as opposed to hmm I want you I want you

00:14:46,019 --> 00:14:50,519
I want you I want you and basically just

00:14:48,229 --> 00:14:53,220
channeling all 20 requests in parallel

00:14:50,519 --> 00:14:55,559
um cloud front edge locations do that

00:14:53,220 --> 00:14:57,539
same kind of collapsed forwarding so

00:14:55,559 --> 00:14:59,069
that if we do get a stampede of traffic

00:14:57,539 --> 00:15:02,399
it's not going to be propagated to the

00:14:59,069 --> 00:15:04,019
upstream origin servers but each edge

00:15:02,399 --> 00:15:06,600
location does operate independently so

00:15:04,019 --> 00:15:08,939
we will get 42 times number of requests

00:15:06,600 --> 00:15:10,679
times work 24 hour our TTL on those

00:15:08,939 --> 00:15:12,329
objects which is perfect for packages

00:15:10,679 --> 00:15:17,510
packages don't change once they've been

00:15:12,329 --> 00:15:20,180
uploaded do they go

00:15:17,510 --> 00:15:22,639
so that interstitial server is basically

00:15:20,180 --> 00:15:25,459
running Apache with that kind of config

00:15:22,639 --> 00:15:26,779
certain paths I've decided and I kind of

00:15:25,459 --> 00:15:28,910
put this on the cloud list and asked

00:15:26,779 --> 00:15:30,889
around and this is kind of what we've

00:15:28,910 --> 00:15:32,420
ended up on I'll go through the the

00:15:30,889 --> 00:15:34,790
individual paths and the timeouts that

00:15:32,420 --> 00:15:37,160
I've whacked on there and this is not

00:15:34,790 --> 00:15:38,570
set in stone if there's a path that you

00:15:37,160 --> 00:15:41,870
see that you want fresher through the

00:15:38,570 --> 00:15:43,790
CDN let me know if you want to jump onto

00:15:41,870 --> 00:15:45,949
that box then give me your SSH key it's

00:15:43,790 --> 00:15:48,079
it's being run from the Debian account

00:15:45,949 --> 00:15:49,850
on Amazon I will give access to any

00:15:48,079 --> 00:15:53,720
Debian developer who wants access just

00:15:49,850 --> 00:15:55,910
come and talk to me so that's kind of

00:15:53,720 --> 00:15:57,709
the Apache config summarizing it into a

00:15:55,910 --> 00:16:00,160
table we've got those kind of paths and

00:15:57,709 --> 00:16:02,870
those kind of timeouts so things like

00:16:00,160 --> 00:16:05,300
where is it the Debian project trace

00:16:02,870 --> 00:16:06,740
files ten-second timeouts you can see

00:16:05,300 --> 00:16:08,389
that they're pretty fresh that's kind of

00:16:06,740 --> 00:16:10,220
what I was thinking was going to be an

00:16:08,389 --> 00:16:12,399
appropriate level of caching versus an

00:16:10,220 --> 00:16:14,660
appropriate load on the upstream service

00:16:12,399 --> 00:16:16,399
any questions on any of that feel free

00:16:14,660 --> 00:16:21,290
to jump in at any time if anyone it's

00:16:16,399 --> 00:16:23,089
got anything cool so next thing and this

00:16:21,290 --> 00:16:25,910
is I guess the more bigger thing the

00:16:23,089 --> 00:16:28,610
official images on on ec2 and I'll start

00:16:25,910 --> 00:16:31,670
by saying Anders in German is absolutely

00:16:28,610 --> 00:16:33,470
the legend that we and and the HP guys

00:16:31,670 --> 00:16:34,819
and everyone else is is kind of putting

00:16:33,470 --> 00:16:36,440
all of our patches into one place that

00:16:34,819 --> 00:16:40,430
there's a uniform place for us to go and

00:16:36,440 --> 00:16:43,100
get our image generation done so we have

00:16:40,430 --> 00:16:45,139
a official eight back official easy to

00:16:43,100 --> 00:16:46,550
am eyes for Debian generated by Debian

00:16:45,139 --> 00:16:48,350
developers and that was the key thing is

00:16:46,550 --> 00:16:51,649
that it is this community that has

00:16:48,350 --> 00:16:53,660
generated them on ec2 they're available

00:16:51,649 --> 00:16:55,880
in two ways firstly it's around

00:16:53,660 --> 00:16:57,740
marketplace so Amazon has a a

00:16:55,880 --> 00:17:00,319
marketplace where independent software

00:16:57,740 --> 00:17:02,540
vendors are putting their software and

00:17:00,319 --> 00:17:04,640
potentially adding a cost of how much it

00:17:02,540 --> 00:17:08,059
is per month and obviously houses at

00:17:04,640 --> 00:17:10,160
dollar zero and it's also from our AWS

00:17:08,059 --> 00:17:11,120
account directly so if you don't want to

00:17:10,160 --> 00:17:14,179
go through the marketplace you've got

00:17:11,120 --> 00:17:15,890
two routes to get to it it's available

00:17:14,179 --> 00:17:18,230
in all regions and it's even now

00:17:15,890 --> 00:17:19,910
available in Gulf Cloud however I don't

00:17:18,230 --> 00:17:21,169
have access to the Gulf card because

00:17:19,910 --> 00:17:23,449
cough cloud requires you to be a US

00:17:21,169 --> 00:17:24,679
citizen etc etc so I have to go with my

00:17:23,449 --> 00:17:27,230
software and say would someone please

00:17:24,679 --> 00:17:30,049
bless this and it goes into cough cloud

00:17:27,230 --> 00:17:31,400
and is available and in fact you'll find

00:17:30,049 --> 00:17:33,890
that most of this is actually

00:17:31,400 --> 00:17:36,500
it on the the Debian wiki with all of

00:17:33,890 --> 00:17:38,480
the a.m. is every AMA has an identifier

00:17:36,500 --> 00:17:41,060
it's different in each region because

00:17:38,480 --> 00:17:42,530
each region operates independently so

00:17:41,060 --> 00:17:44,450
the list is all there and there are

00:17:42,530 --> 00:17:47,510
templates that go and launch stuff and

00:17:44,450 --> 00:17:49,700
all of that this is what the marketplace

00:17:47,510 --> 00:17:51,380
front page looks like so you can see all

00:17:49,700 --> 00:17:53,780
of those vendors that are on there some

00:17:51,380 --> 00:17:55,100
have very high reputation I'd say the

00:17:53,780 --> 00:17:58,190
one with the swirl has a very high

00:17:55,100 --> 00:18:01,070
reputation it's great that I get to see

00:17:58,190 --> 00:18:03,980
that being presented at conferences with

00:18:01,070 --> 00:18:05,900
you know four or five 7,000 people and

00:18:03,980 --> 00:18:08,240
they'll show the marketplace and I'm

00:18:05,900 --> 00:18:09,680
personally very glad that we've managed

00:18:08,240 --> 00:18:12,710
to get our Debian logo actually showing

00:18:09,680 --> 00:18:13,880
up on there and that's what it looks

00:18:12,710 --> 00:18:14,990
like when you go to the product page if

00:18:13,880 --> 00:18:20,540
you're going through the marketplace

00:18:14,990 --> 00:18:22,340
route of getting your your am i so and

00:18:20,540 --> 00:18:23,480
directly from our account if you search

00:18:22,340 --> 00:18:24,920
for our account number that we've got

00:18:23,480 --> 00:18:28,460
there then you'll find everything we've

00:18:24,920 --> 00:18:30,760
got there so debian 607 7.1 a we had a

00:18:28,460 --> 00:18:34,310
slightly release after we noticed that

00:18:30,760 --> 00:18:37,220
new SSH in wheezy has got a cryptic

00:18:34,310 --> 00:18:38,000
curve cryptography keys in there come

00:18:37,220 --> 00:18:42,170
and talk to me if you want to find out

00:18:38,000 --> 00:18:43,940
about that and so you can awesome so as

00:18:42,170 --> 00:18:45,770
I said they're all built from and as

00:18:43,940 --> 00:18:48,650
Ingram ins initial script this was a

00:18:45,770 --> 00:18:50,930
shell script which basically did

00:18:48,650 --> 00:18:52,430
everything there was very little that I

00:18:50,930 --> 00:18:54,230
had to do I found it went hey that

00:18:52,430 --> 00:18:57,050
that's kind of looks like a nice model

00:18:54,230 --> 00:18:59,360
as Jimmy said they are and as is now

00:18:57,050 --> 00:19:01,100
refactoring this to a Python script and

00:18:59,360 --> 00:19:02,510
supporting basically all of the cloud

00:19:01,100 --> 00:19:04,930
vendors in here with all of our

00:19:02,510 --> 00:19:07,040
extensions and pieces that we need to do

00:19:04,930 --> 00:19:09,200
so there are some scripts that that does

00:19:07,040 --> 00:19:10,190
actually inject into your easy to image

00:19:09,200 --> 00:19:11,870
if you were to use it and you're more

00:19:10,190 --> 00:19:13,880
than welcome to generate your own debian

00:19:11,870 --> 00:19:17,300
ami or you can use the ones that myself

00:19:13,880 --> 00:19:19,810
and others have prepared here are the

00:19:17,300 --> 00:19:23,060
things that does one grab the ssh keys

00:19:19,810 --> 00:19:25,880
you upload previously an SSH key into

00:19:23,060 --> 00:19:27,320
your your account at the public key and

00:19:25,880 --> 00:19:29,150
obviously it needs to be put onto that

00:19:27,320 --> 00:19:31,070
that instance when you launch it

00:19:29,150 --> 00:19:32,780
potentially resize the root filesystem

00:19:31,070 --> 00:19:35,030
if you decided to launch your ec2

00:19:32,780 --> 00:19:36,860
instance with a 10 gig file system

00:19:35,030 --> 00:19:38,470
instead of the default 8 gig then on

00:19:36,860 --> 00:19:41,480
boat it'll resize it to the right size

00:19:38,470 --> 00:19:43,640
and then execute any initialization or

00:19:41,480 --> 00:19:44,840
bootstrap code that you may have given

00:19:43,640 --> 00:19:47,900
to your instance

00:19:44,840 --> 00:19:50,960
run on launch and it's very very simple

00:19:47,900 --> 00:19:53,570
it looks at this web server this private

00:19:50,960 --> 00:19:55,429
web server gets this user data blob of

00:19:53,570 --> 00:19:58,010
text and if the blob of text starts with

00:19:55,429 --> 00:20:00,169
hash bang smells like a script we should

00:19:58,010 --> 00:20:01,279
probably execute it so it's a nice way

00:20:00,169 --> 00:20:03,860
that you can actually do all of your

00:20:01,279 --> 00:20:05,690
bootstrap at launch time and start with

00:20:03,860 --> 00:20:07,520
a base a mile and your base am I might

00:20:05,690 --> 00:20:09,080
then start to do a few interesting

00:20:07,520 --> 00:20:10,130
things like unattended upgrades and

00:20:09,080 --> 00:20:15,260
things like that you might want to set

00:20:10,130 --> 00:20:17,570
up optionally again the build scripts

00:20:15,260 --> 00:20:20,360
are all under Apache Software license it

00:20:17,570 --> 00:20:22,250
uses eucalyptus to do that build so

00:20:20,360 --> 00:20:24,070
everything in there has tried to be as

00:20:22,250 --> 00:20:26,919
open source as possible where we can

00:20:24,070 --> 00:20:30,409
there are no call home or updates

00:20:26,919 --> 00:20:32,779
nothing currently the Debian am eyes

00:20:30,409 --> 00:20:35,210
don't fall back or use the cloud front

00:20:32,779 --> 00:20:38,450
Debian it it actually uses directly HTTP

00:20:35,210 --> 00:20:39,950
Debian net it doesn't actually give any

00:20:38,450 --> 00:20:42,950
other information that it's being used

00:20:39,950 --> 00:20:44,809
so you can launch it and in fact if

00:20:42,950 --> 00:20:46,190
you've launched it from the Debian ami

00:20:44,809 --> 00:20:47,480
account not through the marketplace I

00:20:46,190 --> 00:20:49,730
have no idea how many people are using

00:20:47,480 --> 00:20:56,600
it and that's great for our users

00:20:49,730 --> 00:20:58,789
privacy said that to access the instance

00:20:56,600 --> 00:21:01,340
you SSH history you add the default user

00:20:58,789 --> 00:21:02,929
admin which was I think when we launched

00:21:01,340 --> 00:21:04,580
the Debian cloud mailing list about nine

00:21:02,929 --> 00:21:07,429
months ago and one of the first thing

00:21:04,580 --> 00:21:10,279
was what user name are we going to SSH s

00:21:07,429 --> 00:21:12,470
because some AC choose default Linux

00:21:10,279 --> 00:21:14,990
that Amazon Linux the user is called ec2

00:21:12,470 --> 00:21:17,390
user the boon to images the user that's

00:21:14,990 --> 00:21:18,919
initially credits called Ubuntu and

00:21:17,390 --> 00:21:20,210
every distribution seems to have their

00:21:18,919 --> 00:21:22,340
own name and we thought well should we

00:21:20,210 --> 00:21:24,890
make it Debian and everyone went no

00:21:22,340 --> 00:21:25,940
because we've got blends and derivatives

00:21:24,890 --> 00:21:28,070
and things like that let's make it

00:21:25,940 --> 00:21:32,809
something that's generically useful so

00:21:28,070 --> 00:21:34,899
admin and then sudo to get root I am

00:21:32,809 --> 00:21:37,929
repeating this because this is an FAQ

00:21:34,899 --> 00:21:42,320
once you start your Debi an image on ec2

00:21:37,929 --> 00:21:43,370
SSH is admin not as root of course once

00:21:42,320 --> 00:21:45,169
you've got onto that machine you could

00:21:43,370 --> 00:21:47,330
change that you're free to enable root

00:21:45,169 --> 00:21:49,460
SSH you're free to enable passwords if

00:21:47,330 --> 00:21:50,840
you want this is completely at your

00:21:49,460 --> 00:21:56,299
choice because it's your machine once it

00:21:50,840 --> 00:21:57,970
started so no remote root SSH and a

00:21:56,299 --> 00:22:00,630
password authentication but

00:21:57,970 --> 00:22:02,890
change it you have full root privileges

00:22:00,630 --> 00:22:05,560
Amazon does not we can't tell how much

00:22:02,890 --> 00:22:07,990
memories in use on your instances it's

00:22:05,560 --> 00:22:09,850
all completely a black box to us and if

00:22:07,990 --> 00:22:11,470
you wanted to track any of that you'd

00:22:09,850 --> 00:22:14,470
have to instrument ways to push that

00:22:11,470 --> 00:22:16,000
into our monitoring systems obviously

00:22:14,470 --> 00:22:17,650
you run whatever you want subject

00:22:16,000 --> 00:22:19,360
obviously to as we all have acceptable

00:22:17,650 --> 00:22:20,230
usage policies and one of the

00:22:19,360 --> 00:22:22,420
interesting things I've found has been

00:22:20,230 --> 00:22:27,780
no broadcast multicast or promiscuous

00:22:22,420 --> 00:22:31,030
mode on your network interfaces cool

00:22:27,780 --> 00:22:32,500
so the snapshots for the Debian am eyes

00:22:31,030 --> 00:22:34,330
are marked as public which means anyone

00:22:32,500 --> 00:22:38,230
else with an alias account can go and

00:22:34,330 --> 00:22:39,790
inspect them the the idea of trust of

00:22:38,230 --> 00:22:43,000
our images was a very important concept

00:22:39,790 --> 00:22:44,350
to me and I think to all of us so you

00:22:43,000 --> 00:22:47,080
can go and inspect them before you

00:22:44,350 --> 00:22:49,060
launch any of them you might want to

00:22:47,080 --> 00:22:50,860
create your own ami which you can create

00:22:49,060 --> 00:22:52,870
by launching one of the original AM eyes

00:22:50,860 --> 00:22:56,080
doing your modifications and then saving

00:22:52,870 --> 00:22:57,670
it back as your golden master there's no

00:22:56,080 --> 00:23:02,470
problem with that or you can use the

00:22:57,670 --> 00:23:03,460
script that's quite straightforward one

00:23:02,470 --> 00:23:04,800
of the questions that came up was why

00:23:03,460 --> 00:23:07,240
did we put this into the marketplace

00:23:04,800 --> 00:23:08,850
that sounds a rather commercial for a

00:23:07,240 --> 00:23:11,560
non-profit

00:23:08,850 --> 00:23:12,940
distribution like Debian well

00:23:11,560 --> 00:23:14,830
discoverability was actually one of the

00:23:12,940 --> 00:23:15,940
ideas that came up a lot of people go

00:23:14,830 --> 00:23:20,050
looking for software and they go looking

00:23:15,940 --> 00:23:23,250
for it in a marketplace why would you go

00:23:20,050 --> 00:23:25,810
direct from our account because we can

00:23:23,250 --> 00:23:27,910
you can choose exactly the same stuff

00:23:25,810 --> 00:23:29,350
but it'll have different am i identify

00:23:27,910 --> 00:23:31,540
as because it's cloned into the

00:23:29,350 --> 00:23:33,130
marketplace account but the software is

00:23:31,540 --> 00:23:37,660
is just a clone there's there's no

00:23:33,130 --> 00:23:40,450
difference between it so what are

00:23:37,660 --> 00:23:42,280
customers doing with them as I said

00:23:40,450 --> 00:23:44,410
before from the AWS account I don't have

00:23:42,280 --> 00:23:46,300
any idea it's not tracked its public

00:23:44,410 --> 00:23:48,130
it's marked as public people can see it

00:23:46,300 --> 00:23:50,410
launch it and there's no love family

00:23:48,130 --> 00:23:52,510
launchers that I've I've seen that let

00:23:50,410 --> 00:23:54,070
me know what's happened but from the

00:23:52,510 --> 00:23:57,040
marketplace I can see some stats now we

00:23:54,070 --> 00:24:00,190
did this starting end of last year with

00:23:57,040 --> 00:24:02,200
squeeze and basically it's been a top

00:24:00,190 --> 00:24:04,660
ten product across all independent

00:24:02,200 --> 00:24:06,490
software vendors of the thousands I

00:24:04,660 --> 00:24:08,470
think that we have in there and it's

00:24:06,490 --> 00:24:11,270
seen a five percent week on week growth

00:24:08,470 --> 00:24:15,500
which if you track over time

00:24:11,270 --> 00:24:16,700
that's roughly a graph like that so

00:24:15,500 --> 00:24:18,800
we're seeing a lot of a lot of

00:24:16,700 --> 00:24:23,990
popularity of the debian a.m. eyes on

00:24:18,800 --> 00:24:25,340
ec2 but then there's a other questions

00:24:23,990 --> 00:24:27,230
that come up why should we care about

00:24:25,340 --> 00:24:28,970
having a.m. eyes on there and this comes

00:24:27,230 --> 00:24:30,860
back to I guess we didn't have official

00:24:28,970 --> 00:24:31,910
a.m. eyes for a long time for some

00:24:30,860 --> 00:24:34,220
people it's the first place that they're

00:24:31,910 --> 00:24:37,220
gonna find Debian obviously no for no

00:24:34,220 --> 00:24:38,120
one in this room but for a lot of people

00:24:37,220 --> 00:24:39,679
they'll be looking for an operating

00:24:38,120 --> 00:24:41,030
system they'll want a Linux and there's

00:24:39,679 --> 00:24:42,710
a whole bunch out there

00:24:41,030 --> 00:24:44,720
and so having a presence there means

00:24:42,710 --> 00:24:48,200
we've lowered that barrier of entry to a

00:24:44,720 --> 00:24:50,179
lot of people and yes they can if they

00:24:48,200 --> 00:24:51,770
want sign up for a new account on AWS

00:24:50,179 --> 00:24:53,840
and you can use a micro instance for

00:24:51,770 --> 00:24:56,690
free for the first year details are on

00:24:53,840 --> 00:24:58,790
that URL but obviously existing Debian

00:24:56,690 --> 00:25:00,230
users wanted to use Debian because well

00:24:58,790 --> 00:25:05,750
it's a pretty good operating system I

00:25:00,230 --> 00:25:06,950
found we have a lot of users who want to

00:25:05,750 --> 00:25:08,179
use obviously our vast number of

00:25:06,950 --> 00:25:11,120
packages we've got that might not be

00:25:08,179 --> 00:25:12,380
there in every other distribution and so

00:25:11,120 --> 00:25:16,130
we're trying to obviously lower that

00:25:12,380 --> 00:25:17,120
barrier for experienced users as well so

00:25:16,130 --> 00:25:19,280
this is some of the comments that we've

00:25:17,120 --> 00:25:21,710
had come out from some of our users that

00:25:19,280 --> 00:25:23,480
have logged it through the marketplace

00:25:21,710 --> 00:25:25,179
place to see the team is created

00:25:23,480 --> 00:25:27,410
official a.m. eyes that you trust

00:25:25,179 --> 00:25:28,910
upgraded to wheezy servers it was in the

00:25:27,410 --> 00:25:30,110
marketplace it was all there I use this

00:25:28,910 --> 00:25:31,490
image and it did everything I needed to

00:25:30,110 --> 00:25:32,840
and there's an underlying message it

00:25:31,490 --> 00:25:35,780
comes back from all of the comments and

00:25:32,840 --> 00:25:37,760
it's basically that people trust it and

00:25:35,780 --> 00:25:40,240
I think that that is a core thing for us

00:25:37,760 --> 00:25:44,540
to provide that level of trust and and

00:25:40,240 --> 00:25:45,679
and reliability so I'm one of the

00:25:44,540 --> 00:25:48,020
questions that has come up is being the

00:25:45,679 --> 00:25:52,910
lifecycle of images so we've generated

00:25:48,020 --> 00:25:54,860
point releases since 6.0 point 6 and I

00:25:52,910 --> 00:25:56,630
have just deprecated 6.0 point 6 and

00:25:54,860 --> 00:26:00,530
release obviously we had six point seven

00:25:56,630 --> 00:26:02,330
since the day it was released and what

00:26:00,530 --> 00:26:04,130
are the things that we as Debian need to

00:26:02,330 --> 00:26:07,700
decide is what's our policy on keeping

00:26:04,130 --> 00:26:09,500
old releases now I think I personally

00:26:07,700 --> 00:26:11,540
have felt that we should keep the last

00:26:09,500 --> 00:26:13,640
point release of every release that we

00:26:11,540 --> 00:26:16,670
have and would be great to go back and

00:26:13,640 --> 00:26:20,260
see if we can get I don't know beau Hamm

00:26:16,670 --> 00:26:22,610
slink it might be a little bit too old

00:26:20,260 --> 00:26:23,419
but whatever we can keep on there I

00:26:22,610 --> 00:26:24,930
think it's a great place for us to

00:26:23,419 --> 00:26:27,540
archive it because you never know in

00:26:24,930 --> 00:26:29,190
in six years time 10 years time 12 years

00:26:27,540 --> 00:26:31,400
time we might come back and go well what

00:26:29,190 --> 00:26:34,050
a fire / squeeze where will I find one

00:26:31,400 --> 00:26:37,800
and Archives may have moved on and

00:26:34,050 --> 00:26:39,450
timers has bit rotted things so I think

00:26:37,800 --> 00:26:42,000
we if we do keep that out it'll be nice

00:26:39,450 --> 00:26:44,040
but obviously this is our choices Debian

00:26:42,000 --> 00:26:46,650
and so please come along to the boffin

00:26:44,040 --> 00:26:47,880
and give us your 5 cents of what you

00:26:46,650 --> 00:26:49,470
think or two cents of what you think is

00:26:47,880 --> 00:26:53,700
it's going to be appropriate for us to

00:26:49,470 --> 00:26:54,810
do over time creating the images so to

00:26:53,700 --> 00:26:56,670
create these images we start with an

00:26:54,810 --> 00:27:00,230
existing ami and we launch an instance

00:26:56,670 --> 00:27:02,790
yeh we have a machine we can work with

00:27:00,230 --> 00:27:04,820
we then create an EBS volume a block

00:27:02,790 --> 00:27:07,620
storage volume of whatever size

00:27:04,820 --> 00:27:09,540
typically I've chosen 8 key 8 gig seems

00:27:07,620 --> 00:27:11,640
to give everybody enough room it's kind

00:27:09,540 --> 00:27:14,160
of become a default for ec2 instance

00:27:11,640 --> 00:27:16,410
sizes on the cloud and then of course

00:27:14,160 --> 00:27:17,760
you're gonna do to bootstrap into it do

00:27:16,410 --> 00:27:19,230
all of your software installs anything

00:27:17,760 --> 00:27:23,040
else you want to put into there and the

00:27:19,230 --> 00:27:25,890
volume is got data on it then according

00:27:23,040 --> 00:27:27,480
the API you then unmount it and snapshot

00:27:25,890 --> 00:27:30,780
it so you have a snapshot that is stored

00:27:27,480 --> 00:27:33,900
into s3 really important distinction

00:27:30,780 --> 00:27:37,140
between EBS and s 3 s @ s3 is replicated

00:27:33,900 --> 00:27:39,180
into at least three locations so it's

00:27:37,140 --> 00:27:41,040
incredibly durable

00:27:39,180 --> 00:27:43,560
whereas EBS volumes only exists within

00:27:41,040 --> 00:27:46,410
the same availability zone as your ec2

00:27:43,560 --> 00:27:48,090
instances running in and from their

00:27:46,410 --> 00:27:50,430
snapshot we've then got a nice little

00:27:48,090 --> 00:27:53,970
call which is called basically register

00:27:50,430 --> 00:27:55,260
image and that API call will result in

00:27:53,970 --> 00:27:56,970
an ami entry is basically a

00:27:55,260 --> 00:27:59,010
configuration setting I'm referencing

00:27:56,970 --> 00:28:00,450
that snapshot and then what you can do

00:27:59,010 --> 00:28:01,920
is get rid of your volume and instance

00:28:00,450 --> 00:28:07,310
and you've just kept a snapshot and the

00:28:01,920 --> 00:28:07,310
ami entry any questions on that so far

00:28:08,780 --> 00:28:13,460
so one of the interesting things that's

00:28:11,700 --> 00:28:16,110
recently happened

00:28:13,460 --> 00:28:18,120
has been that the API for doing that

00:28:16,110 --> 00:28:20,370
register image has just been improved a

00:28:18,120 --> 00:28:21,540
new parameter was added back on the

00:28:20,370 --> 00:28:23,520
second of August I was at about a week

00:28:21,540 --> 00:28:26,640
and a half ago I'm called virtualization

00:28:23,520 --> 00:28:29,520
type up until now this idea of having an

00:28:26,640 --> 00:28:30,720
eps volume and doing a bootstrap into it

00:28:29,520 --> 00:28:33,030
and registering it when she could only

00:28:30,720 --> 00:28:35,940
register para virtualization machines

00:28:33,030 --> 00:28:37,490
PVM which for amazon has typically been

00:28:35,940 --> 00:28:41,330
the smaller

00:28:37,490 --> 00:28:43,370
instance sizes this new parameter which

00:28:41,330 --> 00:28:44,360
obviously we look into eucalyptus to see

00:28:43,370 --> 00:28:46,550
about getting a support for that

00:28:44,360 --> 00:28:49,790
parameter in there as well will let us

00:28:46,550 --> 00:28:52,670
register the image as hardware

00:28:49,790 --> 00:28:55,400
virtualization HP M which is the larger

00:28:52,670 --> 00:28:57,290
cluster compute instances the instances

00:28:55,400 --> 00:28:59,630
with the nvidia tesla graphics cards on

00:28:57,290 --> 00:29:05,179
them and other larger stuff which is

00:28:59,630 --> 00:29:07,070
coming down the pipeline as well so

00:29:05,179 --> 00:29:09,380
that's a quick summary i put together

00:29:07,070 --> 00:29:10,970
the other night of some of the smaller

00:29:09,380 --> 00:29:13,610
instances you can see the amount of

00:29:10,970 --> 00:29:15,140
compute power they've got the number of

00:29:13,610 --> 00:29:16,790
virtual calls that are presented the

00:29:15,140 --> 00:29:18,170
amount of memory and whether it's para

00:29:16,790 --> 00:29:19,550
virtualization or hardware

00:29:18,170 --> 00:29:20,570
virtualization so you can see at the

00:29:19,550 --> 00:29:24,260
moment the images that we've currently

00:29:20,570 --> 00:29:26,660
got there EVS backed so block storage

00:29:24,260 --> 00:29:29,150
backed and they're using para

00:29:26,660 --> 00:29:31,340
virtualization and so our goal is to

00:29:29,150 --> 00:29:33,400
bring up these h vm images as quickly as

00:29:31,340 --> 00:29:35,840
we can and also looking at things like

00:29:33,400 --> 00:29:37,460
s3 backed a.m. eyes which are the ones

00:29:35,840 --> 00:29:39,559
which don't use block storage for the

00:29:37,460 --> 00:29:43,660
root filesystem but use temporary or

00:29:39,559 --> 00:29:43,660
ephemeral storage for that as well now

00:29:45,610 --> 00:29:49,340
currently the images that we've got I

00:29:47,390 --> 00:29:51,380
consider as being base images it is

00:29:49,340 --> 00:29:52,940
basically standard Debian install as you

00:29:51,380 --> 00:29:54,650
would get without using any tasks or

00:29:52,940 --> 00:29:55,640
anything like that but one of the things

00:29:54,650 --> 00:29:57,770
that as a community we should probably

00:29:55,640 --> 00:30:00,350
think about is which blends do we want

00:29:57,770 --> 00:30:03,020
to add in potentially as their own am

00:30:00,350 --> 00:30:04,309
eyes so I was looking to address this

00:30:03,020 --> 00:30:05,809
morning who's talking unfortunately I'm

00:30:04,309 --> 00:30:08,840
missing right now because he's in the

00:30:05,809 --> 00:30:11,630
next room about getting sort of Debian

00:30:08,840 --> 00:30:14,360
med images up there or the biology

00:30:11,630 --> 00:30:15,470
images or scientific images ready to

00:30:14,360 --> 00:30:16,460
roll because obviously there's large

00:30:15,470 --> 00:30:18,020
numbers of people that want to be able

00:30:16,460 --> 00:30:20,920
to run those and maybe they don't want

00:30:18,020 --> 00:30:23,840
to wait for the base image to install

00:30:20,920 --> 00:30:25,809
400 scientific packages so we could

00:30:23,840 --> 00:30:27,800
actually master those images up for them

00:30:25,809 --> 00:30:30,380
so yeah please come to the buff on

00:30:27,800 --> 00:30:35,120
Tuesday and talk about whatever you want

00:30:30,380 --> 00:30:37,550
to see future directions so summarizing

00:30:35,120 --> 00:30:39,860
up those route file systems we've got

00:30:37,550 --> 00:30:41,570
32-bit and 64-bit images at the moment I

00:30:39,860 --> 00:30:44,809
don't know how long 32-bit is going to

00:30:41,570 --> 00:30:49,669
persist for but we've got both these are

00:30:44,809 --> 00:30:51,110
all questions for us to answer one of

00:30:49,669 --> 00:30:52,700
the obviously we have

00:30:51,110 --> 00:30:54,640
since the images times the number of

00:30:52,700 --> 00:30:56,510
flavors times the nine regions worldwide

00:30:54,640 --> 00:30:58,970
obviously there's a vast amount of

00:30:56,510 --> 00:31:01,640
storage we starting to accumulate across

00:30:58,970 --> 00:31:02,900
all of this and obviously place said

00:31:01,640 --> 00:31:06,740
Amazon is picking up all of that because

00:31:02,900 --> 00:31:08,000
it's obviously good for Amazon more

00:31:06,740 --> 00:31:09,530
information is on that wiki I've been

00:31:08,000 --> 00:31:11,830
documenting stuff potentially not well

00:31:09,530 --> 00:31:13,880
enough but attempting to on the wiki

00:31:11,830 --> 00:31:15,740
contributions obviously gladly welcomed

00:31:13,880 --> 00:31:17,000
on there it's a great legal resource and

00:31:15,740 --> 00:31:19,760
it's obviously the the Debian resource

00:31:17,000 --> 00:31:20,630
to talk about all this kind of stuff one

00:31:19,760 --> 00:31:22,580
of the interesting things that are was

00:31:20,630 --> 00:31:27,049
passed about a week ago was actually

00:31:22,580 --> 00:31:28,400
this white paper which is someone who's

00:31:27,049 --> 00:31:32,330
actually made their own am ice for doing

00:31:28,400 --> 00:31:34,040
protein sequencing on ec2 and there's

00:31:32,330 --> 00:31:35,510
more and more of this as I keep getting

00:31:34,040 --> 00:31:37,250
my name known as hey you're the Debian

00:31:35,510 --> 00:31:39,500
guy in Amazon people saying have you

00:31:37,250 --> 00:31:40,760
seen this have you seen this and it's

00:31:39,500 --> 00:31:43,760
great stuff that that you know we are

00:31:40,760 --> 00:31:46,960
enabling as the Debian community for

00:31:43,760 --> 00:31:46,960
people to be able to do pretty quickly

00:31:47,169 --> 00:31:51,799
obviously goes without saying that we

00:31:49,070 --> 00:31:53,240
are hiring we've got a whole bunch of

00:31:51,799 --> 00:31:54,320
roles I've spoken to the managers and

00:31:53,240 --> 00:31:56,660
most of these teams in the last couple

00:31:54,320 --> 00:31:58,240
of weeks so if you care about anyone

00:31:56,660 --> 00:32:00,860
here care about operating system design

00:31:58,240 --> 00:32:03,799
come on everyone here cares about

00:32:00,860 --> 00:32:05,809
operating system design brilliant if you

00:32:03,799 --> 00:32:07,640
want we've got jobs going in in Seattle

00:32:05,809 --> 00:32:09,200
without kernel and operating system team

00:32:07,640 --> 00:32:11,480
that's not a get smart reference that's

00:32:09,200 --> 00:32:13,929
the kind of operating system team if you

00:32:11,480 --> 00:32:17,600
care about packaging in general yeah

00:32:13,929 --> 00:32:19,850
we've we want you try and help make

00:32:17,600 --> 00:32:22,490
we've already spoken I guess about

00:32:19,850 --> 00:32:24,290
packaging cloud specific stuff but come

00:32:22,490 --> 00:32:26,600
work with us and and and and help us get

00:32:24,290 --> 00:32:29,150
that done if you care about CD ends and

00:32:26,600 --> 00:32:30,530
HTTP and and that kind of stuff the

00:32:29,150 --> 00:32:31,390
manager of that team also reached out to

00:32:30,530 --> 00:32:33,440
me it said yes

00:32:31,390 --> 00:32:35,750
anyone who's likely to be here is likely

00:32:33,440 --> 00:32:38,990
to know their stuff so again another

00:32:35,750 --> 00:32:40,940
area and even outside of Seattle rolls

00:32:38,990 --> 00:32:43,190
like the role that I mean if you like

00:32:40,940 --> 00:32:46,610
talking to people about technology and

00:32:43,190 --> 00:32:50,570
and cloud then all languages are clearly

00:32:46,610 --> 00:32:51,919
welcomed so other resources we've got

00:32:50,570 --> 00:32:55,090
surrenders the script is obviously one

00:32:51,919 --> 00:32:58,130
the cloud front of Debian net site or

00:32:55,090 --> 00:33:01,610
reference feel free to use it as much as

00:32:58,130 --> 00:33:02,960
you want here at Deb conference a cut

00:33:01,610 --> 00:33:04,580
bunch of interesting sessions so today

00:33:02,960 --> 00:33:06,799
Jimmy session on public

00:33:04,580 --> 00:33:08,659
an official Debbie an image status so we

00:33:06,799 --> 00:33:12,200
definitely definitely gonna be there

00:33:08,659 --> 00:33:13,880
that also this afternoon how can a WS

00:33:12,200 --> 00:33:15,950
help Debbie and so if you've got an idea

00:33:13,880 --> 00:33:18,140
for something you want to do come along

00:33:15,950 --> 00:33:19,640
talk to me I can give you some credits

00:33:18,140 --> 00:33:20,330
and you can be on your way and do

00:33:19,640 --> 00:33:22,760
whatever you want

00:33:20,330 --> 00:33:23,659
abuse it as much as you want and try and

00:33:22,760 --> 00:33:26,360
make something useful and interesting

00:33:23,659 --> 00:33:29,510
out of it tomorrow challenges and

00:33:26,360 --> 00:33:34,309
questions so David's talk at 9:30 and

00:33:29,510 --> 00:33:35,899
then the Boff tomorrow for me and that's

00:33:34,309 --> 00:33:38,750
it so there's a bunch of people who I do

00:33:35,899 --> 00:33:41,059
want to thank obviously in DES and as

00:33:38,750 --> 00:33:42,409
and as needs so much thanks because he's

00:33:41,059 --> 00:33:44,720
basically put up with all of us coming

00:33:42,409 --> 00:33:46,789
along and bothering him and merging very

00:33:44,720 --> 00:33:48,230
very quickly and then reinventing and

00:33:46,789 --> 00:33:51,970
and basically being awesome

00:33:48,230 --> 00:33:55,460
so obviously huge amount of thanks

00:33:51,970 --> 00:33:56,720
Charles McGill Julian and Thomas because

00:33:55,460 --> 00:33:58,159
the cloud and it package is finally

00:33:56,720 --> 00:33:59,899
coming together

00:33:58,159 --> 00:34:02,000
cloud and it is a way of structuring

00:33:59,899 --> 00:34:03,380
your initialization data for an ec2 or

00:34:02,000 --> 00:34:06,529
in fact a general cloud image so I

00:34:03,380 --> 00:34:08,450
should say and we haven't had that

00:34:06,529 --> 00:34:10,839
packaged in in Debian it's a basically

00:34:08,450 --> 00:34:12,980
was a mastermind came out of a bun to

00:34:10,839 --> 00:34:16,909
but now we have that in I believe has

00:34:12,980 --> 00:34:20,089
made backwater yeah I think it has yes

00:34:16,909 --> 00:34:21,740
so now we have another thing that we as

00:34:20,089 --> 00:34:23,629
Debian need to think about is do we have

00:34:21,740 --> 00:34:24,980
a base image which pulls from back ports

00:34:23,629 --> 00:34:26,690
as opposed to just pulling from Maine

00:34:24,980 --> 00:34:27,919
and these are the things that I'm not

00:34:26,690 --> 00:34:29,060
going to sit here and say we should do I

00:34:27,919 --> 00:34:31,730
think this is something that we as a

00:34:29,060 --> 00:34:33,109
community need to decide because I don't

00:34:31,730 --> 00:34:34,669
want to put any software in there that

00:34:33,109 --> 00:34:36,649
not a single person in this room

00:34:34,669 --> 00:34:38,589
believes should be there it should be

00:34:36,649 --> 00:34:41,570
stuff that you trust

00:34:38,589 --> 00:34:43,700
so it's cloud knit blah and Lucas and

00:34:41,570 --> 00:34:45,139
Stephano for your support that you give

00:34:43,700 --> 00:34:46,460
me of hey yes you look like you're in

00:34:45,139 --> 00:34:48,500
the right position just put this

00:34:46,460 --> 00:34:52,280
together and make it happen so thank you

00:34:48,500 --> 00:34:53,839
very much that's basically me so let me

00:34:52,280 --> 00:35:01,330
throw it open to questions and see what

00:34:53,839 --> 00:35:05,380
I can answer Steve microphones are there

00:35:01,330 --> 00:35:05,380
you can stand and dance if you want

00:35:10,710 --> 00:35:17,080
so you talked to quite a bit about the

00:35:13,150 --> 00:35:18,700
cache headers regarding HTTP and the apt

00:35:17,080 --> 00:35:22,690
sources one of the things that the abun

00:35:18,700 --> 00:35:24,400
- server team has found is that so we've

00:35:22,690 --> 00:35:26,410
done some work well it work has been

00:35:24,400 --> 00:35:28,840
done in the past on apt to make it more

00:35:26,410 --> 00:35:30,640
reliable we have the in release thing

00:35:28,840 --> 00:35:32,800
now where the GPG signatures are in line

00:35:30,640 --> 00:35:35,140
in the the releases file to reduce

00:35:32,800 --> 00:35:36,580
inconsistencies there but one of the

00:35:35,140 --> 00:35:39,480
problems still is that even if you're

00:35:36,580 --> 00:35:43,330
caching the individual debs you have

00:35:39,480 --> 00:35:45,670
your indices are mutable over time and

00:35:43,330 --> 00:35:48,340
there is you do not have an atomic

00:35:45,670 --> 00:35:49,930
update of your server and so when you're

00:35:48,340 --> 00:35:51,070
talking about cloud scale kind of things

00:35:49,930 --> 00:35:53,350
where you're talking about tens of

00:35:51,070 --> 00:35:56,350
thousands or millions of machines that

00:35:53,350 --> 00:35:58,570
are using apt the fact that you have a

00:35:56,350 --> 00:35:59,880
few second window where one file is

00:35:58,570 --> 00:36:01,780
updated on the server and not the other

00:35:59,880 --> 00:36:03,370
becomes a problem and you have the

00:36:01,780 --> 00:36:05,290
reliability if you want if you want your

00:36:03,370 --> 00:36:06,820
10,000 machines to reliably apt-get

00:36:05,290 --> 00:36:08,410
update every time without any manual

00:36:06,820 --> 00:36:09,610
intervention the fact that you don't

00:36:08,410 --> 00:36:12,010
have a consistent mirror becomes a

00:36:09,610 --> 00:36:13,360
problem absolutely and that's one of the

00:36:12,010 --> 00:36:14,770
things that that rough owl and I have

00:36:13,360 --> 00:36:15,850
seen and I've been looking at which is

00:36:14,770 --> 00:36:18,130
why I haven't made many public

00:36:15,850 --> 00:36:19,660
statements about it so far I've been

00:36:18,130 --> 00:36:22,870
actively using this for about 6 or 9

00:36:19,660 --> 00:36:24,460
months or my half a dozen instances I

00:36:22,870 --> 00:36:25,660
don't know a couple of hundred actually

00:36:24,460 --> 00:36:29,320
when I've been doing a couple of fun

00:36:25,660 --> 00:36:30,580
jobs with some customers and I've seen

00:36:29,320 --> 00:36:32,290
that since I've tuned this down for the

00:36:30,580 --> 00:36:34,660
10-second mark I've not seen that

00:36:32,290 --> 00:36:36,250
problem since but ten seconds was just

00:36:34,660 --> 00:36:38,080
an arbitrary number yeah we could make

00:36:36,250 --> 00:36:39,850
it zero and every request would be live

00:36:38,080 --> 00:36:41,170
but obviously that wouldn't be taking

00:36:39,850 --> 00:36:42,700
advantage of any of that cache ability

00:36:41,170 --> 00:36:44,230
right well I mean the problem is no

00:36:42,700 --> 00:36:46,210
matter what where you draw that line

00:36:44,230 --> 00:36:48,460
your your files at some point during the

00:36:46,210 --> 00:36:49,660
day you're updating and and because

00:36:48,460 --> 00:36:50,860
you're your package is filing your

00:36:49,660 --> 00:36:52,570
releases file cannot be updated

00:36:50,860 --> 00:36:54,820
atomically at some point you have

00:36:52,570 --> 00:36:55,990
inconsistency on the mirror so the

00:36:54,820 --> 00:36:58,090
Abunda server team have worked on a

00:36:55,990 --> 00:37:01,270
solution for this which is basically

00:36:58,090 --> 00:37:03,310
using an s3 mirroring in with in AWS

00:37:01,270 --> 00:37:05,290
address this by having unique

00:37:03,310 --> 00:37:06,670
identifiers for each packages file which

00:37:05,290 --> 00:37:07,840
is what you have to do in order to make

00:37:06,670 --> 00:37:09,730
sure you you you're always getting the

00:37:07,840 --> 00:37:11,230
right index file support for this has

00:37:09,730 --> 00:37:12,220
not landed upstream in apt yet so I

00:37:11,230 --> 00:37:13,540
think I'm just throwing it out there

00:37:12,220 --> 00:37:15,250
that if people are interested in this

00:37:13,540 --> 00:37:17,800
problem of mirror consistency in the

00:37:15,250 --> 00:37:19,360
cloud there are potential patches out

00:37:17,800 --> 00:37:20,500
there that would be great too

00:37:19,360 --> 00:37:22,240
have some help on getting that up

00:37:20,500 --> 00:37:24,400
streamed into into apt and Debian which

00:37:22,240 --> 00:37:26,890
as I understand it is has stalled out

00:37:24,400 --> 00:37:29,560
over the past year or so yeah getting

00:37:26,890 --> 00:37:30,070
that up there so yeah no that's that's

00:37:29,560 --> 00:37:31,660
really good

00:37:30,070 --> 00:37:33,580
obviously I'm interested in seeing if we

00:37:31,660 --> 00:37:36,580
can improve that over time as well and

00:37:33,580 --> 00:37:38,680
if we want to put s3 mirrors then we can

00:37:36,580 --> 00:37:42,220
do that I started actually by by

00:37:38,680 --> 00:37:45,190
creating eight independent s3 based

00:37:42,220 --> 00:37:46,630
Debian archive mirrors and then when I

00:37:45,190 --> 00:37:47,890
was looking at the the complexity and

00:37:46,630 --> 00:37:49,330
the jury-rigging going on I thought well

00:37:47,890 --> 00:37:51,910
this would be just much easier to set it

00:37:49,330 --> 00:37:55,090
up as a CDN and I think within about 15

00:37:51,910 --> 00:37:56,860
minutes I was done but you know either

00:37:55,090 --> 00:37:58,630
way more than happy in fact there's

00:37:56,860 --> 00:38:00,640
there's talks now that since I've spoken

00:37:58,630 --> 00:38:02,290
to DSA in the last 24 hours

00:38:00,640 --> 00:38:05,680
about putting some more stuff through

00:38:02,290 --> 00:38:09,490
cloud front and an s3 to further help so

00:38:05,680 --> 00:38:13,590
yeah whatever we can do anyone else yes

00:38:09,490 --> 00:38:18,490
yeah you said there's no multicast and

00:38:13,590 --> 00:38:21,310
and no premiere squad in AWS why sorry

00:38:18,490 --> 00:38:23,590
no multicast multicast yes correct

00:38:21,310 --> 00:38:24,640
um you can't do multicast one thing some

00:38:23,590 --> 00:38:27,010
people have done is they've built

00:38:24,640 --> 00:38:29,290
layered networks on top of our internal

00:38:27,010 --> 00:38:32,310
ipv4 network and then they've done

00:38:29,290 --> 00:38:34,870
multicast broadcast and even ipv6 on top

00:38:32,310 --> 00:38:36,430
but by default our network doesn't allow

00:38:34,870 --> 00:38:38,850
you to do broadcast multicast or

00:38:36,430 --> 00:38:43,360
promiscuous mode on network interfaces

00:38:38,850 --> 00:38:46,300
why so going going back historically

00:38:43,360 --> 00:38:47,800
when it was all public cloud that would

00:38:46,300 --> 00:38:49,660
basically cut off I believe a large

00:38:47,800 --> 00:38:52,090
number of potential routes that for

00:38:49,660 --> 00:38:53,350
exploit and the number of workloads that

00:38:52,090 --> 00:38:56,230
actually natively required that was

00:38:53,350 --> 00:38:59,140
quite low and so that was the choice

00:38:56,230 --> 00:39:01,300
that was taken then now with the advent

00:38:59,140 --> 00:39:03,010
of virtual private cloud where you

00:39:01,300 --> 00:39:05,320
basically carve out your own IP address

00:39:03,010 --> 00:39:08,200
space and you may or may not connect it

00:39:05,320 --> 00:39:09,910
to public gateways or not that becomes

00:39:08,200 --> 00:39:11,950
less of an issue I don't know if that's

00:39:09,910 --> 00:39:15,460
going to change in future but that's the

00:39:11,950 --> 00:39:16,630
current rules as to how it does work if

00:39:15,460 --> 00:39:20,110
it's something that you're passionate

00:39:16,630 --> 00:39:21,730
about come see me I actually have been

00:39:20,110 --> 00:39:24,550
rather intrigued that I can put in

00:39:21,730 --> 00:39:26,260
feature requests so if you if you've got

00:39:24,550 --> 00:39:27,490
a feature that you'd like to request or

00:39:26,260 --> 00:39:28,810
something has been bugging you come and

00:39:27,490 --> 00:39:30,190
see me and I can I can put that on the

00:39:28,810 --> 00:39:31,510
list and it obviously these things go

00:39:30,190 --> 00:39:32,120
into heat maps and get addressed in

00:39:31,510 --> 00:39:34,970
there the

00:39:32,120 --> 00:39:39,770
of time all right we got about five

00:39:34,970 --> 00:39:41,240
minutes with more question here so I was

00:39:39,770 --> 00:39:42,560
gonna ask the question Steve asked but

00:39:41,240 --> 00:39:45,080
he's dealt with that but there was

00:39:42,560 --> 00:39:47,600
another similar problem that Linares run

00:39:45,080 --> 00:39:50,390
into a lot where if you've got so they

00:39:47,600 --> 00:39:53,660
use been using ec2 phages to build lots

00:39:50,390 --> 00:39:54,980
of stuff and we the problem you hit the

00:39:53,660 --> 00:39:57,890
problem if you try and run more than one

00:39:54,980 --> 00:40:00,230
job on a particular instance apt assumed

00:39:57,890 --> 00:40:01,670
serialized access and basically the

00:40:00,230 --> 00:40:04,100
second one explodes because out is

00:40:01,670 --> 00:40:05,570
currently locked yes database and we hit

00:40:04,100 --> 00:40:07,130
that allows the problem and I think

00:40:05,570 --> 00:40:10,490
that's something else that you know

00:40:07,130 --> 00:40:12,170
basically having lots of if you do only

00:40:10,490 --> 00:40:13,520
ever do one thing on each instance then

00:40:12,170 --> 00:40:14,720
it's okay but as soon as you try and do

00:40:13,520 --> 00:40:15,320
more than one thing on instance then it

00:40:14,720 --> 00:40:16,460
all explodes

00:40:15,320 --> 00:40:18,530
so you're saying happen it's a more

00:40:16,460 --> 00:40:20,030
attention yeah it's another problem to

00:40:18,530 --> 00:40:23,060
think about in the context of running

00:40:20,030 --> 00:40:25,250
loads of stuff yeah you know that wasn't

00:40:23,060 --> 00:40:26,630
designed for all this and we need to

00:40:25,250 --> 00:40:28,400
think about that as well I don't if

00:40:26,630 --> 00:40:30,590
anyone's thought of how to fix it or if

00:40:28,400 --> 00:40:32,390
you just just don't do that is in fact

00:40:30,590 --> 00:40:40,090
the only answer oh well do stuff into

00:40:32,390 --> 00:40:40,090
roots which also work yeah yeah stadion

00:40:45,490 --> 00:40:48,410
yeah I guess nobody else has any

00:40:47,390 --> 00:40:50,770
question so I'll go ahead and burn the

00:40:48,410 --> 00:40:52,880
rest of time talking about these days

00:40:50,770 --> 00:40:56,060
let's see what was I gonna say oh right

00:40:52,880 --> 00:40:57,890
so have you looked into using juju at

00:40:56,060 --> 00:40:59,870
all for Debian are you feeling what juju

00:40:57,890 --> 00:41:01,400
is I can't get him confused cuz to me

00:40:59,870 --> 00:41:03,770
Gigi was always the fire why stack it

00:41:01,400 --> 00:41:05,240
replace the old fire why stack now what

00:41:03,770 --> 00:41:08,330
is the new juju that's that's packaged

00:41:05,240 --> 00:41:10,880
um sorry that's juju is service

00:41:08,330 --> 00:41:13,190
orchestration in the clouds yes putting

00:41:10,880 --> 00:41:16,220
Debian images together from separate

00:41:13,190 --> 00:41:18,110
pieces wasn't that dude you as well jig

00:41:16,220 --> 00:41:20,600
dough was done

00:41:18,110 --> 00:41:23,540
Hey right yes no GG okay sorry go ahead

00:41:20,600 --> 00:41:26,180
juju so juju is is Canonical's solution

00:41:23,540 --> 00:41:28,940
for providing a friendly you know client

00:41:26,180 --> 00:41:30,470
front-end for declaring service

00:41:28,940 --> 00:41:32,450
relationships between nodes in the cloud

00:41:30,470 --> 00:41:34,070
and and automating that the the

00:41:32,450 --> 00:41:36,740
orchestration of the deployment of

00:41:34,070 --> 00:41:38,450
services and everything I'd be

00:41:36,740 --> 00:41:40,220
interested to know if Debian is

00:41:38,450 --> 00:41:42,440
interested in having that capability

00:41:40,220 --> 00:41:43,820
both both having the client packaged in

00:41:42,440 --> 00:41:46,329
Debian which I don't think is done yet

00:41:43,820 --> 00:41:50,450
as well as having

00:41:46,329 --> 00:41:52,190
having juju able to deploy Debian

00:41:50,450 --> 00:41:54,410
instances and not just uber in two

00:41:52,190 --> 00:41:55,670
instances I think currently I'm given to

00:41:54,410 --> 00:41:58,700
understand that currently you can deploy

00:41:55,670 --> 00:42:00,859
Ubuntu and CentOS instances using juju

00:41:58,700 --> 00:42:02,089
but not Debian so there's a there's a

00:42:00,859 --> 00:42:03,890
gap there that I would be nice if

00:42:02,089 --> 00:42:05,150
somebody would and so that some of that

00:42:03,890 --> 00:42:06,619
gap that that has been there in that

00:42:05,150 --> 00:42:09,140
orchestration is the fact that you guys

00:42:06,619 --> 00:42:10,910
didn't win to have had cloud in it and a

00:42:09,140 --> 00:42:12,650
lot of the pieces have plugged into that

00:42:10,910 --> 00:42:13,880
as opposed to just a well it looks like

00:42:12,650 --> 00:42:16,309
a shell script it smells like a shell

00:42:13,880 --> 00:42:17,599
script so let's just execute it and so

00:42:16,309 --> 00:42:19,339
that's I think one of the next things we

00:42:17,599 --> 00:42:21,079
need to decide is is for our next

00:42:19,339 --> 00:42:22,970
revision of you know 72

00:42:21,079 --> 00:42:24,319
do we pull in cloud on it from back

00:42:22,970 --> 00:42:26,270
ports as it currently stands for Debian

00:42:24,319 --> 00:42:29,210
or do we wait until it's in the main

00:42:26,270 --> 00:42:32,119
archive these are policies not not

00:42:29,210 --> 00:42:33,770
technical limitations and I want to get

00:42:32,119 --> 00:42:38,300
obviously run here on consensus that

00:42:33,770 --> 00:42:42,470
we'd you know what we're gonna do about

00:42:38,300 --> 00:42:44,569
using cloud in it I've asked the release

00:42:42,470 --> 00:42:48,140
team about having cloud in it and

00:42:44,569 --> 00:42:51,319
Claudia Schrom efis tools in in stable

00:42:48,140 --> 00:42:53,480
and they still didn't reply but I guess

00:42:51,319 --> 00:42:56,900
it's easier to have it in blackboard yes

00:42:53,480 --> 00:42:59,089
the only problem is that this it's the

00:42:56,900 --> 00:43:01,970
only packages we need from back party is

00:42:59,089 --> 00:43:04,579
these three and that's it so it's a bit

00:43:01,970 --> 00:43:07,970
of shame to just have the one excels in

00:43:04,579 --> 00:43:10,040
a sauce list yeah and we have no choice

00:43:07,970 --> 00:43:11,359
for the moment I guess you mentioned

00:43:10,040 --> 00:43:12,589
actually is a very important point that

00:43:11,359 --> 00:43:14,960
we talked about on the mailing list

00:43:12,589 --> 00:43:16,579
which was yes we could go and grab cloud

00:43:14,960 --> 00:43:18,770
on it from backports but how are we

00:43:16,579 --> 00:43:20,210
gonna get security updates for that does

00:43:18,770 --> 00:43:22,549
that mean that we then need to add back

00:43:20,210 --> 00:43:24,200
ports to apt sources do we agree with

00:43:22,549 --> 00:43:27,140
having apt sources containing back ports

00:43:24,200 --> 00:43:30,790
for the default distribution anyone have

00:43:27,140 --> 00:43:36,740
a feeling on that those in favor say yes

00:43:30,790 --> 00:43:42,440
those not in favor say oh no I broke I

00:43:36,740 --> 00:43:43,150
have one no thank you wiki cool any

00:43:42,440 --> 00:43:46,760
other questions

00:43:43,150 --> 00:43:50,000
Steve again no one take my two minutes

00:43:46,760 --> 00:43:51,109
do I think we're gonna find a bar

00:43:50,000 --> 00:43:52,819
somewhere

00:43:51,109 --> 00:43:54,380
so this is actually just a comment

00:43:52,819 --> 00:43:56,209
rather than a question and I it made

00:43:54,380 --> 00:43:57,380
hopefully somebody has a question after

00:43:56,209 --> 00:43:58,609
this because it's kind of a sour note to

00:43:57,380 --> 00:44:01,099
end it on but I did want to point out

00:43:58,609 --> 00:44:02,630
it's great that we have the the rebuild

00:44:01,099 --> 00:44:03,769
the archived rebuild stuff going in the

00:44:02,630 --> 00:44:06,979
cloud and I think that's a great use for

00:44:03,769 --> 00:44:09,140
ec2 but although you asserted in your

00:44:06,979 --> 00:44:11,529
talk that Amazon has no visibility into

00:44:09,140 --> 00:44:13,940
the instances as a consumer of the cloud

00:44:11,529 --> 00:44:15,440
we will not rely on that and I think

00:44:13,940 --> 00:44:17,599
that's probably the Debian policy that

00:44:15,440 --> 00:44:18,920
we don't we cannot trust the results for

00:44:17,599 --> 00:44:21,170
anything that goes into the archive so

00:44:18,920 --> 00:44:22,489
you know there's just something that you

00:44:21,170 --> 00:44:23,900
know in fact that's that's one of the

00:44:22,489 --> 00:44:25,430
things we always said our customers is

00:44:23,900 --> 00:44:27,049
is feel free to encrypt your data before

00:44:25,430 --> 00:44:28,789
you give it to us more than happy with

00:44:27,049 --> 00:44:31,549
everything being pre encrypted if you

00:44:28,789 --> 00:44:35,509
want us to encrypt it again we can but

00:44:31,549 --> 00:44:36,619
to AWS it's just a bunch of bits yes

00:44:35,509 --> 00:44:38,089
there's a there's a lot of interesting

00:44:36,619 --> 00:44:41,299
discussions that Jimmy and I have had on

00:44:38,089 --> 00:44:43,789
this so far but yeah more than happy to

00:44:41,299 --> 00:44:45,529
talk to anyone that wants to do that all

00:44:43,789 --> 00:44:48,650
righty well thank you James that does it

00:44:45,529 --> 00:44:53,820
for our time thank you Ron

00:44:48,650 --> 00:44:53,820

YouTube URL: https://www.youtube.com/watch?v=9f_3Dtt-km8


