Title: DebiChem
Publication date: 2017-11-29
Playlist: DebConf 13
Description: 
	by Michael Banck

At: DebConf13
https://debconf13.debconf.org/
Room: Second talk room
Scheduled start: 2013-08-12 15:30:00
Captions: 
	00:00:00,030 --> 00:00:08,360
my name is Michelle Bank and I've been a

00:00:03,810 --> 00:00:13,170
driving developer since 2001 I think and

00:00:08,360 --> 00:00:17,609
one of my main motivations to become one

00:00:13,170 --> 00:00:20,640
was that I studied chemistry and there

00:00:17,609 --> 00:00:23,310
were not a lot of free software packages

00:00:20,640 --> 00:00:25,890
around back then and there was almost

00:00:23,310 --> 00:00:28,590
nothing in Debian Debian itself there

00:00:25,890 --> 00:00:30,869
was one guy called dr. green Tibet Li I

00:00:28,590 --> 00:00:33,570
think who was doing some chemistry and

00:00:30,869 --> 00:00:35,040
biology stuff so when I wanted to

00:00:33,570 --> 00:00:39,600
package my first package he already

00:00:35,040 --> 00:00:41,850
packaged it some weeks before but he

00:00:39,600 --> 00:00:49,739
gave up half year later so he dropped

00:00:41,850 --> 00:00:52,070
out of Debian and then he had 100

00:00:49,739 --> 00:00:54,120
packages he was the record holder right

00:00:52,070 --> 00:00:56,850
yeah back then I wasn't that much

00:00:54,120 --> 00:01:01,710
involved so I just noticed that he had

00:00:56,850 --> 00:01:03,359
packaged one of them and yeah so and

00:01:01,710 --> 00:01:07,439
then I decided to become a Debian

00:01:03,359 --> 00:01:10,710
developer and also packaged chemistry

00:01:07,439 --> 00:01:15,270
stuff so generally what is chemistry and

00:01:10,710 --> 00:01:18,570
maybe I mean we're here back home so we

00:01:15,270 --> 00:01:20,610
are between the atoms

00:01:18,570 --> 00:01:24,869
yeah that's physics that's the physics

00:01:20,610 --> 00:01:28,470
team I guess and solids that's nano

00:01:24,869 --> 00:01:30,570
scale physics which is not so chemistry

00:01:28,470 --> 00:01:32,700
is between a very very small items and

00:01:30,570 --> 00:01:35,000
then when it gets really large in terms

00:01:32,700 --> 00:01:38,520
of solids or metals or semiconductors

00:01:35,000 --> 00:01:42,720
and all the molecules in between that's

00:01:38,520 --> 00:01:44,369
chemistry and also from from what

00:01:42,720 --> 00:01:46,170
scientific point of view chemistry is

00:01:44,369 --> 00:01:50,610
always then when the electrons and the

00:01:46,170 --> 00:01:53,220
atoms interact with other electrons and

00:01:50,610 --> 00:01:55,200
other atoms or molecules and so bonds

00:01:53,220 --> 00:01:58,049
are broken ones that changed

00:01:55,200 --> 00:02:01,649
that's where chemistry is and the other

00:01:58,049 --> 00:02:04,670
frontier is also biology so proteins

00:02:01,649 --> 00:02:06,960
enzymes DNA that kind of stuff that's

00:02:04,670 --> 00:02:11,560
biochemistry and then it blends into

00:02:06,960 --> 00:02:14,020
biology so as soon as as soon as

00:02:11,560 --> 00:02:16,630
you could say you don't really look at

00:02:14,020 --> 00:02:20,020
particular molecules anymore but only oh

00:02:16,630 --> 00:02:21,550
we have this DNA base here and we have

00:02:20,020 --> 00:02:24,580
this DNA base there then it's probably

00:02:21,550 --> 00:02:27,010
biology but if you look at oh this DNA

00:02:24,580 --> 00:02:28,780
base type interacts with some for some

00:02:27,010 --> 00:02:30,400
reason with this or that enzyme and you

00:02:28,780 --> 00:02:33,010
could still model that stuff with

00:02:30,400 --> 00:02:35,019
chemistry that interaction so there it

00:02:33,010 --> 00:02:37,360
goes to the Debian made team which under

00:02:35,019 --> 00:02:39,370
else is doing so there there's a lot of

00:02:37,360 --> 00:02:41,670
overlap I mean not so much in the atom

00:02:39,370 --> 00:02:44,650
stuff because that's a very clear

00:02:41,670 --> 00:02:46,120
distinction there I mean that's high

00:02:44,650 --> 00:02:49,000
energy physics or whatever that's

00:02:46,120 --> 00:02:50,830
totally different but as we get to

00:02:49,000 --> 00:02:53,140
larger systems there's lots of overlap

00:02:50,830 --> 00:02:55,450
towards nanoscale physics and Debian

00:02:53,140 --> 00:02:58,030
made and that's why also people are in

00:02:55,450 --> 00:03:00,819
the same team or interchangeably in the

00:02:58,030 --> 00:03:02,620
team so we had also a couple of packages

00:03:00,819 --> 00:03:04,660
for example that the nanoscale physics

00:03:02,620 --> 00:03:08,260
team said they would package but it

00:03:04,660 --> 00:03:13,630
didn't happen so far so we decided to to

00:03:08,260 --> 00:03:15,760
go ahead and do it now awesome one could

00:03:13,630 --> 00:03:20,980
say that chemistry is right on the tech

00:03:15,760 --> 00:03:25,480
when were divided so physics was always

00:03:20,980 --> 00:03:28,630
more of a UNIX tech and that kind of

00:03:25,480 --> 00:03:30,280
logic environment so physicists will

00:03:28,630 --> 00:03:33,640
probably write most of their papers in

00:03:30,280 --> 00:03:36,100
latte or mathematicians and chemists

00:03:33,640 --> 00:03:40,269
actually write most of the papers in

00:03:36,100 --> 00:03:43,269
word and they use Windows and then you

00:03:40,269 --> 00:03:45,430
have physical chemistry or theoretical

00:03:43,269 --> 00:03:46,780
chemistry that's what I did in the end

00:03:45,430 --> 00:03:49,480
that's where actually physics and

00:03:46,780 --> 00:03:50,620
chemistry come together so maybe 50% of

00:03:49,480 --> 00:03:52,840
the people in theoretical chemistry

00:03:50,620 --> 00:03:54,250
actually physicists and depending on

00:03:52,840 --> 00:03:56,920
where you come from you might use check

00:03:54,250 --> 00:03:58,269
or you might not and that's also

00:03:56,920 --> 00:04:00,340
difficult if you have to interact with

00:03:58,269 --> 00:04:01,810
other groups writing papers and stuff so

00:04:00,340 --> 00:04:05,019
sometimes you get word papers sometimes

00:04:01,810 --> 00:04:07,000
you get tension and also due to that

00:04:05,019 --> 00:04:10,049
there's I guess a little slow uptake of

00:04:07,000 --> 00:04:15,310
free software and in chemistry because

00:04:10,049 --> 00:04:18,220
historically was used Windows and only

00:04:15,310 --> 00:04:20,080
only some research groups in theoretical

00:04:18,220 --> 00:04:23,770
chemistry where already it came from

00:04:20,080 --> 00:04:24,850
physics we're using UNIX of course you

00:04:23,770 --> 00:04:28,600
see it more

00:04:24,850 --> 00:04:29,740
but it really started slow and and also

00:04:28,600 --> 00:04:32,500
I have to add the theoretical chemistry

00:04:29,740 --> 00:04:35,500
as a field basically got started by

00:04:32,500 --> 00:04:38,350
physics and there were almost no

00:04:35,500 --> 00:04:39,910
chemists doing it because it's sort of

00:04:38,350 --> 00:04:42,270
like started out from atoms and got from

00:04:39,910 --> 00:04:46,260
very small molecules the bigger ones

00:04:42,270 --> 00:04:52,600
right so that's that's what chemistry is

00:04:46,260 --> 00:04:55,900
and Debbie chem is a pure plan so we

00:04:52,600 --> 00:04:59,980
have everything in in Debian um it was

00:04:55,900 --> 00:05:01,780
started in around 2004 by me but so for

00:04:59,980 --> 00:05:07,930
a while it was mostly only guy doing it

00:05:01,780 --> 00:05:10,000
and then there was leader Bing for a

00:05:07,930 --> 00:05:11,800
while but he stopped doing chemistry

00:05:10,000 --> 00:05:13,840
apparently so he dropped out again and

00:05:11,800 --> 00:05:18,220
and Daniel I turd it's the other guy

00:05:13,840 --> 00:05:21,460
also Jim who does a lot of work for

00:05:18,220 --> 00:05:23,080
Debbie cam we have though still a couple

00:05:21,460 --> 00:05:25,630
of people doing specific stuff so

00:05:23,080 --> 00:05:29,490
Nicholas brain is packaging grow max

00:05:25,630 --> 00:05:32,500
which is pretty popular package and

00:05:29,490 --> 00:05:36,820
filippo rose Kony is I hope I pronounced

00:05:32,500 --> 00:05:38,980
it right is doing a lot of the mass

00:05:36,820 --> 00:05:42,700
spectrometry and then pulling our stuff

00:05:38,980 --> 00:05:46,570
but she's mostly working on on his own

00:05:42,700 --> 00:05:48,400
with couple of people on it so I have to

00:05:46,570 --> 00:05:50,110
say to me and Daniel I'm mostly

00:05:48,400 --> 00:05:52,840
maintaining most of the packages and

00:05:50,110 --> 00:05:55,000
there's some people doing very stuff but

00:05:52,840 --> 00:05:57,190
right so as we say we have 20 project

00:05:55,000 --> 00:06:00,850
members on alia but only handful are

00:05:57,190 --> 00:06:05,020
really obviously um active at all time

00:06:00,850 --> 00:06:10,180
we have over 50 packages maintain team

00:06:05,020 --> 00:06:13,630
maintained and yeah that's roughly at

00:06:10,180 --> 00:06:15,310
about it so these are the nice mailing

00:06:13,630 --> 00:06:17,830
list statistics from from andreas so

00:06:15,310 --> 00:06:21,520
there you can concede so Daniel is the

00:06:17,830 --> 00:06:24,850
the red column and I am the blue one so

00:06:21,520 --> 00:06:27,700
and then you had leader Bing in 2007

00:06:24,850 --> 00:06:30,100
quite active and then dropping out and

00:06:27,700 --> 00:06:33,130
other people like andreas who is

00:06:30,100 --> 00:06:34,330
somewhat active or others but as you can

00:06:33,130 --> 00:06:36,310
see the from

00:06:34,330 --> 00:06:38,229
development list this is the Debbie kam

00:06:36,310 --> 00:06:40,830
development list it's mostly me and

00:06:38,229 --> 00:06:44,889
Tanya

00:06:40,830 --> 00:06:47,050
well posting there also I think all the

00:06:44,889 --> 00:06:49,479
package uploads get filtered there so

00:06:47,050 --> 00:06:55,720
that comes in there as well and if you

00:06:49,479 --> 00:06:59,410
look at the the commits to the oh that

00:06:55,720 --> 00:07:09,669
what that's unfortunately wrong thing

00:06:59,410 --> 00:07:12,460
when wait a second what was the name

00:07:09,669 --> 00:07:14,729
officer tim right there was a copy paste

00:07:12,460 --> 00:07:14,729
error

00:07:30,559 --> 00:07:36,969
right that's it sorry these are the

00:07:33,559 --> 00:07:39,349
commits to the I guess subversion

00:07:36,969 --> 00:07:40,789
repository I mean under Esther you know

00:07:39,349 --> 00:07:42,979
whether this is also tracking the good

00:07:40,789 --> 00:07:44,449
stuff but probably not well it's a

00:07:42,979 --> 00:07:49,729
friendly mailing list so what is it no

00:07:44,449 --> 00:07:51,019
it's also good okay all right also there

00:07:49,729 --> 00:07:54,649
you can see that most of the commits

00:07:51,019 --> 00:07:59,419
have been done by me or Daniel getting

00:07:54,649 --> 00:08:01,639
more or less active I don't really see

00:07:59,419 --> 00:08:03,849
the people from who were doing it there

00:08:01,639 --> 00:08:07,219
so I'm not super sure it's actually

00:08:03,849 --> 00:08:08,989
maybe not so many yeah okay but that's

00:08:07,219 --> 00:08:11,329
just stress so you got an idea what

00:08:08,989 --> 00:08:15,319
who's actually um mostly working on this

00:08:11,329 --> 00:08:16,899
and yeah in general we we would

00:08:15,319 --> 00:08:19,279
certainly like to have more people

00:08:16,899 --> 00:08:21,379
involved but you have to say that

00:08:19,279 --> 00:08:24,349
chemistry as a field it's not super

00:08:21,379 --> 00:08:26,169
popular and compared to biochemistry for

00:08:24,349 --> 00:08:29,029
example which a lot of people are doing

00:08:26,169 --> 00:08:31,729
there's not a lot of free software while

00:08:29,029 --> 00:08:35,329
there was not and it's rather difficult

00:08:31,729 --> 00:08:37,430
to find motivated people who really are

00:08:35,329 --> 00:08:39,110
interested in packaging I mean if

00:08:37,430 --> 00:08:43,610
somebody's interested of course talk to

00:08:39,110 --> 00:08:48,259
me but it has been shown that it's not

00:08:43,610 --> 00:08:50,600
super easy to get people so the original

00:08:48,259 --> 00:08:54,439
mission when around 2000 when I started

00:08:50,600 --> 00:08:55,819
it there was chem tool um which was the

00:08:54,439 --> 00:08:57,889
thing that grant I basically I had

00:08:55,819 --> 00:09:01,250
already up there uploaded I think and I

00:08:57,889 --> 00:09:04,009
took over shortly afterwards and I used

00:09:01,250 --> 00:09:07,040
that actually during my studies when I

00:09:04,009 --> 00:09:11,329
was studying chemistry and in France

00:09:07,040 --> 00:09:14,360
back then and there was a couple of

00:09:11,329 --> 00:09:16,550
other packages like MP QC massively

00:09:14,360 --> 00:09:18,679
parallel quantum chemistry and SCI 3

00:09:16,550 --> 00:09:22,610
which is also an op initial program to

00:09:18,679 --> 00:09:24,019
compute molecules but that was about it

00:09:22,610 --> 00:09:26,569
I would say I mean I'm I didn't do a

00:09:24,019 --> 00:09:29,809
huge analysis on this but there was not

00:09:26,569 --> 00:09:32,240
very much chemistry free software back

00:09:29,809 --> 00:09:33,949
then probably I'm missing some but so

00:09:32,240 --> 00:09:35,509
the initial mission was package all

00:09:33,949 --> 00:09:37,009
chemistry related free software project

00:09:35,509 --> 00:09:42,470
because anyway there's only three or

00:09:37,009 --> 00:09:44,330
four and but today if there's a new

00:09:42,470 --> 00:09:45,710
paper out and one

00:09:44,330 --> 00:09:47,960
Street Journal's and somebody says hey

00:09:45,710 --> 00:09:49,940
we have a new project then there's at

00:09:47,960 --> 00:09:52,490
least a 50% chance that it's open source

00:09:49,940 --> 00:09:55,400
so everybody's doing it has been it

00:09:52,490 --> 00:09:57,560
seems like every PhD student is stamping

00:09:55,400 --> 00:09:59,780
their stuff somewhere and there has also

00:09:57,560 --> 00:10:03,530
been a lot of code Tom's by groups which

00:09:59,780 --> 00:10:07,070
decided to open-source their projects so

00:10:03,530 --> 00:10:08,450
right now you get well you always have

00:10:07,070 --> 00:10:09,890
the problem there right there's one PhD

00:10:08,450 --> 00:10:11,750
student working on it and he's doing

00:10:09,890 --> 00:10:12,980
this and then the next one comes and he

00:10:11,750 --> 00:10:14,360
does something else so what to do with

00:10:12,980 --> 00:10:16,220
the code sometimes they just dump it on

00:10:14,360 --> 00:10:18,770
the net sometime it just gets lost or

00:10:16,220 --> 00:10:20,930
sometimes the whole working group these

00:10:18,770 --> 00:10:23,630
souls because the professor is retiring

00:10:20,930 --> 00:10:25,480
and then also the the code is

00:10:23,630 --> 00:10:28,130
unmaintained so you have lots of these

00:10:25,480 --> 00:10:32,750
travels some things and this down here

00:10:28,130 --> 00:10:34,580
is just the current content of we have

00:10:32,750 --> 00:10:36,640
one file called prospective packages and

00:10:34,580 --> 00:10:40,460
now a subversion where I keep track of

00:10:36,640 --> 00:10:41,990
free software projects which I'm fine on

00:10:40,460 --> 00:10:44,180
the net or while looking through

00:10:41,990 --> 00:10:46,490
journals and these are not packaged yet

00:10:44,180 --> 00:10:49,190
right so there's I don't know 30 or 40

00:10:46,490 --> 00:10:51,860
of them prospectively

00:10:49,190 --> 00:10:53,840
to be to be packaged but we just don't

00:10:51,860 --> 00:10:57,350
really have the time and also it's not

00:10:53,840 --> 00:10:59,090
always my field of expertise so it's

00:10:57,350 --> 00:11:01,190
very hard sometimes hard for me to

00:10:59,090 --> 00:11:04,700
figure out whether one package is really

00:11:01,190 --> 00:11:07,700
useful to package or not so the current

00:11:04,700 --> 00:11:09,860
mission I would rather say is package

00:11:07,700 --> 00:11:11,600
the most appropriate chemistry related

00:11:09,860 --> 00:11:15,020
free software projects because now there

00:11:11,600 --> 00:11:18,080
are so many so we should pick out the

00:11:15,020 --> 00:11:21,860
ones which are useful which are good

00:11:18,080 --> 00:11:24,880
which makes sense and we should probably

00:11:21,860 --> 00:11:27,080
remove also we should start removing

00:11:24,880 --> 00:11:28,790
packages which are no longer maintained

00:11:27,080 --> 00:11:30,530
or which have been superseded basically

00:11:28,790 --> 00:11:32,600
there's a new package which has the same

00:11:30,530 --> 00:11:36,040
functionality but it's better or works

00:11:32,600 --> 00:11:38,600
better or it's nicer so we should start

00:11:36,040 --> 00:11:40,010
removing them for example chem 2 would

00:11:38,600 --> 00:11:43,160
probably be a prime example it's still

00:11:40,010 --> 00:11:46,880
there it hasn't been updated by the guy

00:11:43,160 --> 00:11:51,910
Martine Crocker who who did upstream

00:11:46,880 --> 00:11:55,010
mostly since 2008 I guess or so and now

00:11:51,910 --> 00:11:57,030
there's various other packages so chem

00:11:55,010 --> 00:12:00,660
tool is a is one too

00:11:57,030 --> 00:12:01,260
sketch molecules organic chemists do

00:12:00,660 --> 00:12:04,530
that a lot

00:12:01,260 --> 00:12:07,020
two four four papers so you have a

00:12:04,530 --> 00:12:09,360
molecule and you sketch the carbon chain

00:12:07,020 --> 00:12:12,270
basically and then you get a nice image

00:12:09,360 --> 00:12:14,160
of it like a 2d image and we have five

00:12:12,270 --> 00:12:15,810
or six of these packages now in Debian

00:12:14,160 --> 00:12:18,180
and probably we should really say okay

00:12:15,810 --> 00:12:21,750
this one is really good and the others

00:12:18,180 --> 00:12:23,340
should be dropped or decommission or

00:12:21,750 --> 00:12:26,220
whatever there that that's something we

00:12:23,340 --> 00:12:27,690
have to look into and also we have to

00:12:26,220 --> 00:12:29,610
figure out what read the target is so

00:12:27,690 --> 00:12:31,770
there's also quite a few packages like

00:12:29,610 --> 00:12:33,990
already mpq seeds it's called massively

00:12:31,770 --> 00:12:37,680
parallel but of course that was 15 years

00:12:33,990 --> 00:12:40,440
ago so it's not really that appropriate

00:12:37,680 --> 00:12:42,960
anymore but there's quite a few packages

00:12:40,440 --> 00:12:47,010
of switch or projects which targets

00:12:42,960 --> 00:12:49,800
supercomputers so they work really rail

00:12:47,010 --> 00:12:53,220
from 10,000 cores on maybe not so great

00:12:49,800 --> 00:12:56,130
for workstations so we have to also see

00:12:53,220 --> 00:12:58,230
what our target is so my current target

00:12:56,130 --> 00:12:59,970
is my notebook but probably it would

00:12:58,230 --> 00:13:03,000
better to to say well we want to target

00:12:59,970 --> 00:13:06,390
a 16 core workstations or really small

00:13:03,000 --> 00:13:08,430
compute clusters because honestly all

00:13:06,390 --> 00:13:09,630
the really big clusters run right at the

00:13:08,430 --> 00:13:12,660
enterprise I guess I don't know whether

00:13:09,630 --> 00:13:14,880
anybody knows the Debian well chemistry

00:13:12,660 --> 00:13:17,310
related debian class where people

00:13:14,880 --> 00:13:18,930
actually use we use this so it's

00:13:17,310 --> 00:13:22,590
difficult to get some feedback from

00:13:18,930 --> 00:13:25,020
users so we should probably start

00:13:22,590 --> 00:13:26,610
looking at small compute clusters and

00:13:25,020 --> 00:13:28,800
workstations are really nicely supported

00:13:26,610 --> 00:13:34,710
and then look to support the really big

00:13:28,800 --> 00:13:38,670
clusters so to give an overview of where

00:13:34,710 --> 00:13:42,320
what Debbie Kem does this current fields

00:13:38,670 --> 00:13:47,520
in chemistry that we're actually putting

00:13:42,320 --> 00:13:50,180
packages on so maybe the in one of the

00:13:47,520 --> 00:13:53,610
interesting stuff is visualization of

00:13:50,180 --> 00:13:57,030
molecules or also with a visualization

00:13:53,610 --> 00:13:58,620
of biomolecules and also the electronic

00:13:57,030 --> 00:14:01,410
structure that means the molecular

00:13:58,620 --> 00:14:04,620
orbitals if you know what I mean so you

00:14:01,410 --> 00:14:07,770
you run a you run a computer up for for

00:14:04,620 --> 00:14:09,750
a molecule and then what traditionally

00:14:07,770 --> 00:14:10,830
has been the case is you you have to

00:14:09,750 --> 00:14:12,690
write an input file and

00:14:10,830 --> 00:14:14,220
text which says well this is the

00:14:12,690 --> 00:14:17,460
molecule this is the method I want to

00:14:14,220 --> 00:14:18,870
use please PLEASE computed and then you

00:14:17,460 --> 00:14:20,580
run it on some compute cluster and you

00:14:18,870 --> 00:14:22,830
get an output and you have to parse the

00:14:20,580 --> 00:14:26,340
output for interesting stuff like what's

00:14:22,830 --> 00:14:27,630
the optimized geometry or what how many

00:14:26,340 --> 00:14:29,940
electrons are there what's the energy

00:14:27,630 --> 00:14:31,950
and that kind of stuff and after passing

00:14:29,940 --> 00:14:33,540
it you want to visualize it so because

00:14:31,950 --> 00:14:37,050
looking at text files is not really nice

00:14:33,540 --> 00:14:40,830
and there's a couple of nice

00:14:37,050 --> 00:14:42,720
visualization projects for that and the

00:14:40,830 --> 00:14:45,270
task is called they became visualization

00:14:42,720 --> 00:14:47,720
then we have the structure drawing which

00:14:45,270 --> 00:14:52,350
I already mentioned with a chem tool and

00:14:47,720 --> 00:14:53,790
that's mostly it is view/edit 2d I think

00:14:52,350 --> 00:14:56,640
there's a couple of others BK chem I

00:14:53,790 --> 00:14:58,860
think is rather nice and then a huge

00:14:56,640 --> 00:15:04,190
field is cheminformatics actually and

00:14:58,860 --> 00:15:08,100
that's two kids which look at the

00:15:04,190 --> 00:15:09,960
structure or the chemical of the

00:15:08,100 --> 00:15:12,000
molecules and vacant for example

00:15:09,960 --> 00:15:15,540
superimpose one molecule with another or

00:15:12,000 --> 00:15:17,400
they can do things on some databases and

00:15:15,540 --> 00:15:19,890
that's that's actually one of the fields

00:15:17,400 --> 00:15:20,880
which is also used in industry a lot so

00:15:19,890 --> 00:15:23,340
there's a couple of really good

00:15:20,880 --> 00:15:25,800
cheminformatics packages I will go get

00:15:23,340 --> 00:15:29,180
to that later on and they could use or

00:15:25,800 --> 00:15:32,820
even get open source by big companies

00:15:29,180 --> 00:15:34,620
for example you have a protein or

00:15:32,820 --> 00:15:38,250
something and then you want to see well

00:15:34,620 --> 00:15:40,380
which of my Pharma core targets might

00:15:38,250 --> 00:15:45,000
actually be useful for this thing so we

00:15:40,380 --> 00:15:47,550
can have a new new pharmaceutical and

00:15:45,000 --> 00:15:50,340
instead of doing this for ten thousand

00:15:47,550 --> 00:15:52,350
molecules you know within a lab which

00:15:50,340 --> 00:15:54,270
takes ages to figure out you just run it

00:15:52,350 --> 00:15:56,580
over the chem informatics toolkit and

00:15:54,270 --> 00:15:59,460
they they give you the molecules which

00:15:56,580 --> 00:16:03,660
fit best into this or so so there's

00:15:59,460 --> 00:16:07,980
there's some huge applications there and

00:16:03,660 --> 00:16:10,470
then molecule modeling is another field

00:16:07,980 --> 00:16:13,560
where it's usually you use a graphical

00:16:10,470 --> 00:16:16,290
workstation to come up with molecules

00:16:13,560 --> 00:16:19,260
that you want to study maybe later on in

00:16:16,290 --> 00:16:21,180
the lab or generally and you don't

00:16:19,260 --> 00:16:22,440
really run huge computations on it but

00:16:21,180 --> 00:16:24,480
you want to have you want to know

00:16:22,440 --> 00:16:27,629
roughly the the geometry

00:16:24,480 --> 00:16:29,879
any kind of things and use that so we

00:16:27,629 --> 00:16:34,399
have a couple of packages there and a

00:16:29,879 --> 00:16:36,660
Debbie cam modeling task and then a huge

00:16:34,399 --> 00:16:38,069
thing is computational chemistry as I

00:16:36,660 --> 00:16:40,829
said that's basically these programs

00:16:38,069 --> 00:16:43,980
which take input run this input on some

00:16:40,829 --> 00:16:46,769
quantum chemistry methods and then

00:16:43,980 --> 00:16:49,519
produce some output and there is

00:16:46,769 --> 00:16:52,230
actually three of them up initio

00:16:49,519 --> 00:16:57,119
semi-empirical their differences how

00:16:52,230 --> 00:16:58,949
much how much you actually how much

00:16:57,119 --> 00:17:01,619
information you put in so semi empirical

00:16:58,949 --> 00:17:03,569
methods mean that for every atom or

00:17:01,619 --> 00:17:04,740
every element you you say well this

00:17:03,569 --> 00:17:07,470
element if it interacts with that

00:17:04,740 --> 00:17:10,679
element on an other atom there's roughly

00:17:07,470 --> 00:17:12,929
this energy level to be very precise

00:17:10,679 --> 00:17:14,760
whereas a Benicia basically all you'd

00:17:12,929 --> 00:17:15,929
say well this is my molecule it has

00:17:14,760 --> 00:17:18,779
thrown so many electrons

00:17:15,929 --> 00:17:21,959
please compute it and then it's totally

00:17:18,779 --> 00:17:23,279
from from first principles and of course

00:17:21,959 --> 00:17:26,279
it also takes much longer because

00:17:23,279 --> 00:17:28,679
everything has to be calculated from the

00:17:26,279 --> 00:17:31,260
beginning and mole mech is pretty bad

00:17:28,679 --> 00:17:34,559
name for molecular dynamics that means

00:17:31,260 --> 00:17:37,470
you run you run a simulation on maybe a

00:17:34,559 --> 00:17:39,690
molecule or maybe a protein or some

00:17:37,470 --> 00:17:44,159
other big structure and you see how over

00:17:39,690 --> 00:17:45,899
time the structure changes maybe you put

00:17:44,159 --> 00:17:49,080
some pressure on it or you just want to

00:17:45,899 --> 00:17:52,080
see how it how it evolves over time for

00:17:49,080 --> 00:17:57,600
example proteins usually are structured

00:17:52,080 --> 00:17:58,799
from solid phase x-ray structure and if

00:17:57,600 --> 00:18:01,260
you want to have see how that really

00:17:58,799 --> 00:18:03,480
works in in in water or some useful

00:18:01,260 --> 00:18:06,690
liquid then you can run a molecular

00:18:03,480 --> 00:18:08,220
dynamics simulation on it and see how

00:18:06,690 --> 00:18:11,870
how that works because the structure is

00:18:08,220 --> 00:18:14,429
usually different in in a crystallized

00:18:11,870 --> 00:18:17,809
solid-state thing which you use for

00:18:14,429 --> 00:18:21,090
x-ray or in the in a water environment

00:18:17,809 --> 00:18:23,309
and finally we have mass spectrometry as

00:18:21,090 --> 00:18:28,080
I said that's right now Debbie Campo

00:18:23,309 --> 00:18:33,360
Lumi also a pretty bad name which is

00:18:28,080 --> 00:18:35,250
about I think well Philippe Orozco need

00:18:33,360 --> 00:18:38,460
use does it so I'm not an expert there

00:18:35,250 --> 00:18:41,730
but I think you either use it too

00:18:38,460 --> 00:18:45,150
run spectrometry simulations and to also

00:18:41,730 --> 00:18:47,520
analyze the the spectrometry simulations

00:18:45,150 --> 00:18:48,810
by looking you get huge of huge amounts

00:18:47,520 --> 00:18:53,220
of data for example for mass

00:18:48,810 --> 00:18:55,350
spectrometry you usually bombard on a

00:18:53,220 --> 00:18:57,360
big atom a big molecule with some energy

00:18:55,350 --> 00:18:58,980
and then you see which fragments are

00:18:57,360 --> 00:19:01,530
evolving and then you have to model

00:18:58,980 --> 00:19:03,420
somehow and figure out what the what the

00:19:01,530 --> 00:19:07,950
specific molecule was if you don't know

00:19:03,420 --> 00:19:09,360
what it was before there's yeah we I'm

00:19:07,950 --> 00:19:11,670
not super happy with the names of the

00:19:09,360 --> 00:19:15,870
trans it was we had a discussion with

00:19:11,670 --> 00:19:18,390
andreas before the weazy release we I

00:19:15,870 --> 00:19:20,760
would like to rename them at least a bit

00:19:18,390 --> 00:19:24,480
or maybe we can just not expose the

00:19:20,760 --> 00:19:26,160
package name so much and use make the

00:19:24,480 --> 00:19:30,300
description more useful for these

00:19:26,160 --> 00:19:34,230
because I said mole MEK is not really

00:19:30,300 --> 00:19:38,130
that that get interesting and there's

00:19:34,230 --> 00:19:39,780
better things so I'm mostly a

00:19:38,130 --> 00:19:42,660
computational chemist so that's what I

00:19:39,780 --> 00:19:45,120
do mostly um so my field is mostly

00:19:42,660 --> 00:19:47,850
computation chemistry and I'd also do

00:19:45,120 --> 00:19:50,490
some cuz I'm cheminformatics so I'm just

00:19:47,850 --> 00:19:52,050
showing what kind of projects now there

00:19:50,490 --> 00:19:54,540
are right so many some of them are

00:19:52,050 --> 00:19:56,190
segments some of them are doubled but as

00:19:54,540 --> 00:20:01,140
I said in the beginning there was mostly

00:19:56,190 --> 00:20:03,150
mpq seed and and sigh both in Virginia

00:20:01,140 --> 00:20:04,950
Tech but besides and Georgia Tech but

00:20:03,150 --> 00:20:07,560
nowadays you have quite a few others if

00:20:04,950 --> 00:20:10,100
and W chem which is a very generic

00:20:07,560 --> 00:20:12,270
program and has been open sourced

00:20:10,100 --> 00:20:15,180
recently three or four years ago and

00:20:12,270 --> 00:20:17,220
it's extremely mature it's from Pacific

00:20:15,180 --> 00:20:21,180
Northwest National Laboratory I guess

00:20:17,220 --> 00:20:23,340
and in the West Coast and this is

00:20:21,180 --> 00:20:26,790
basically a really really general

00:20:23,340 --> 00:20:32,640
purpose quantum chemistry application

00:20:26,790 --> 00:20:36,810
and and then you have local so to say CP

00:20:32,640 --> 00:20:39,420
2k which is developed mostly at ETH

00:20:36,810 --> 00:20:42,600
Zurich and University of Missouri but

00:20:39,420 --> 00:20:45,840
also by some other people and this this

00:20:42,600 --> 00:20:47,730
is an ab initio molecule dynamics code

00:20:45,840 --> 00:20:50,640
mostly but it works extremely well for

00:20:47,730 --> 00:20:51,809
all kinds of things it's also extremely

00:20:50,640 --> 00:20:54,779
well right

00:20:51,809 --> 00:20:58,139
and done and well there's a couple of

00:20:54,779 --> 00:21:00,179
others so CP to K for example was

00:20:58,139 --> 00:21:03,450
started from scratch as an open source

00:21:00,179 --> 00:21:04,440
project whereas NW chem and Asus have

00:21:03,450 --> 00:21:06,509
been open source later

00:21:04,440 --> 00:21:08,399
I think recycle would also has been Sai

00:21:06,509 --> 00:21:10,019
has also been open source later and I'm

00:21:08,399 --> 00:21:12,749
not quite sure about quantum Express or

00:21:10,019 --> 00:21:14,609
that it used to be PW SCF I think also

00:21:12,749 --> 00:21:17,460
it was open source later so you also see

00:21:14,609 --> 00:21:20,759
there a difference and how people

00:21:17,460 --> 00:21:22,739
approach it and grow max down there is a

00:21:20,759 --> 00:21:25,409
molecular dynamics code as I said that's

00:21:22,739 --> 00:21:28,080
Nikolas brain is doing that has always

00:21:25,409 --> 00:21:31,940
been open source project and multi s is

00:21:28,080 --> 00:21:34,229
rather new code from Japan which is also

00:21:31,940 --> 00:21:37,979
completely new where's for example Mopac

00:21:34,229 --> 00:21:40,499
7 is unmaintained these days and it's

00:21:37,979 --> 00:21:43,710
really really I think it's so Fortran 60

00:21:40,499 --> 00:21:45,529
code for example so nobody really wants

00:21:43,710 --> 00:21:48,089
to touch it anymore

00:21:45,529 --> 00:21:50,580
and and then we have molecule modeling

00:21:48,089 --> 00:21:53,309
so this is for example ever Gaudreau and

00:21:50,580 --> 00:21:57,239
then you see the the orbitals of I think

00:21:53,309 --> 00:21:59,279
it's a benzene molecule I took there

00:21:57,239 --> 00:22:01,440
from screenshots that mean that and

00:21:59,279 --> 00:22:04,109
there we see how the so this was pro

00:22:01,440 --> 00:22:06,029
this was calculated by some quantum

00:22:04,109 --> 00:22:08,729
chemistry application and then fed into

00:22:06,029 --> 00:22:10,710
a forgot row which actually uses open

00:22:08,729 --> 00:22:13,489
bubble it's a chemical matrix toolkit

00:22:10,710 --> 00:22:16,259
which also does these kind of things to

00:22:13,489 --> 00:22:18,419
look at the molecular orbitals and the

00:22:16,259 --> 00:22:20,159
output and then visualize it so you can

00:22:18,419 --> 00:22:22,259
see how where the electrons are where

00:22:20,159 --> 00:22:25,229
the molecule orbitals are related and

00:22:22,259 --> 00:22:26,700
also see what a joke the geometry is but

00:22:25,229 --> 00:22:28,940
you can also for example change the

00:22:26,700 --> 00:22:32,909
atoms in here you have this drawing tool

00:22:28,940 --> 00:22:35,119
and you can can do other stuff with the

00:22:32,909 --> 00:22:37,200
molecule it's it's a really nice program

00:22:35,119 --> 00:22:39,539
unfortunately right now it's getting

00:22:37,200 --> 00:22:40,739
rewritten because the main developer

00:22:39,539 --> 00:22:43,109
started to work at kitware

00:22:40,739 --> 00:22:46,200
the people who also beat UK so they're

00:22:43,109 --> 00:22:48,419
trying to rewrite it for Wii TK and the

00:22:46,200 --> 00:22:50,879
new version is not yet really stable so

00:22:48,419 --> 00:22:53,549
it's not super clear what what will

00:22:50,879 --> 00:22:56,399
happen with that we'll see and the other

00:22:53,549 --> 00:22:59,159
one which is also Morioka molecular

00:22:56,399 --> 00:23:01,559
modeling is PI mold which as you see is

00:22:59,159 --> 00:23:05,010
more for biochemistry applications the

00:23:01,559 --> 00:23:06,720
other one abogado is maybe more for

00:23:05,010 --> 00:23:09,420
or computational chemistry applications

00:23:06,720 --> 00:23:12,750
but it can also visualize proteins but

00:23:09,420 --> 00:23:15,000
primal is really really good for from

00:23:12,750 --> 00:23:17,660
for biochemical stuff so here you see a

00:23:15,000 --> 00:23:20,310
protein and you see a lots of water

00:23:17,660 --> 00:23:24,570
dissolved into some water molecules it's

00:23:20,310 --> 00:23:26,100
the blue ones it has a rather bad

00:23:24,570 --> 00:23:29,280
looking so the other one I forgot her as

00:23:26,100 --> 00:23:31,980
a QT application has been it's not very

00:23:29,280 --> 00:23:33,750
old it's nice nicely structured from a

00:23:31,980 --> 00:23:37,410
GUI point of view and this one is a very

00:23:33,750 --> 00:23:39,630
old GK tcl/tk application with OpenGL

00:23:37,410 --> 00:23:42,540
and sort of the graphical user interface

00:23:39,630 --> 00:23:44,040
is not so great but it's it makes really

00:23:42,540 --> 00:23:45,900
nice pictures I mean there but you have

00:23:44,040 --> 00:23:49,560
to say that this is a ray traced so it

00:23:45,900 --> 00:23:52,410
has an internal a ray tracer so this is

00:23:49,560 --> 00:23:56,760
not well it takes a while to - ray trace

00:23:52,410 --> 00:23:58,160
this it's not an actual output and then

00:23:56,760 --> 00:24:01,890
as I said there is a cheminformatics

00:23:58,160 --> 00:24:04,620
there's various good um - kids open

00:24:01,890 --> 00:24:07,800
babel is the one and i was also involved

00:24:04,620 --> 00:24:09,840
in for a while this was started by a

00:24:07,800 --> 00:24:13,500
company called open high as the open eye

00:24:09,840 --> 00:24:15,090
toolkit and it was and they did it

00:24:13,500 --> 00:24:18,150
another GPL until they wanted to have a

00:24:15,090 --> 00:24:20,580
real rewrite of it or they finally I

00:24:18,150 --> 00:24:23,850
decided to take it proprietary so me and

00:24:20,580 --> 00:24:27,210
Jeff Jeffrey Hutchison a professor from

00:24:23,850 --> 00:24:29,940
Pittsburgh decided to start the open

00:24:27,210 --> 00:24:32,940
Baba project and the problem is that the

00:24:29,940 --> 00:24:35,760
licenses GPL version 2 only and that's

00:24:32,940 --> 00:24:36,930
pretty bad for a library so for example

00:24:35,760 --> 00:24:39,390
that's also one of the reasons that

00:24:36,930 --> 00:24:40,200
Avogadro is not using open Babel that

00:24:39,390 --> 00:24:42,900
much anymore

00:24:40,200 --> 00:24:44,480
I've got four - is BSD license and they

00:24:42,900 --> 00:24:48,660
don't want to link to open Babel and

00:24:44,480 --> 00:24:50,250
become tainted with GPL that's that's a

00:24:48,660 --> 00:24:52,650
bit of a shame but otherwise it's it's a

00:24:50,250 --> 00:24:54,780
nice thing over 40 projects user there

00:24:52,650 --> 00:24:58,440
has been a lot of downloads quite a few

00:24:54,780 --> 00:25:00,840
papers and also other other projects

00:24:58,440 --> 00:25:04,950
interfacing with it and or using it for

00:25:00,840 --> 00:25:08,280
it as a informatics toolkit and then

00:25:04,950 --> 00:25:11,100
there is our D kit which is I think

00:25:08,280 --> 00:25:13,380
partly at least written by a guy by

00:25:11,100 --> 00:25:16,020
people from Novartis company but it's

00:25:13,380 --> 00:25:18,960
also it's a very nice amateur toolkit

00:25:16,020 --> 00:25:20,399
and and cdk CD

00:25:18,960 --> 00:25:22,590
kay is the other one this is actually C

00:25:20,399 --> 00:25:25,470
DK is not maintained by the Debbie cam

00:25:22,590 --> 00:25:28,799
project but the Java people but it is

00:25:25,470 --> 00:25:30,480
also long-running toolkit which can do

00:25:28,799 --> 00:25:32,789
lots of interesting things with

00:25:30,480 --> 00:25:37,950
molecules and the last one is indigo

00:25:32,789 --> 00:25:39,990
which is rather new but also mature and

00:25:37,950 --> 00:25:40,679
then I would just wanted to show down

00:25:39,990 --> 00:25:43,200
sit down

00:25:40,679 --> 00:25:46,200
the to its symphony which is a major

00:25:43,200 --> 00:25:49,919
Python library where you can which

00:25:46,200 --> 00:25:53,549
integrates all the four two kids on top

00:25:49,919 --> 00:25:55,890
and four for every step you can always

00:25:53,549 --> 00:25:57,360
use the most appropriate toolkit and you

00:25:55,890 --> 00:26:00,090
have a nice Python interface to it so

00:25:57,360 --> 00:26:02,130
that's that's a very nice way to handle

00:26:00,090 --> 00:26:04,320
all these different toolkits and if

00:26:02,130 --> 00:26:06,149
there's a method implemented in both in

00:26:04,320 --> 00:26:07,289
all of them or more of them then you can

00:26:06,149 --> 00:26:09,029
choose which one you take but otherwise

00:26:07,289 --> 00:26:10,860
it will take a nice one and the same

00:26:09,029 --> 00:26:15,059
with the chem FP which is called

00:26:10,860 --> 00:26:16,409
fingerprint so fingerprinting is if you

00:26:15,059 --> 00:26:18,149
have a molecule or you have lots of

00:26:16,409 --> 00:26:20,220
molecules then you basically generate a

00:26:18,149 --> 00:26:21,840
hash of the molecule or a smaller

00:26:20,220 --> 00:26:23,490
fingerprint with the interesting parts

00:26:21,840 --> 00:26:25,950
of a molecule so you can more easily

00:26:23,490 --> 00:26:28,919
query a database for example for it

00:26:25,950 --> 00:26:31,559
because otherwise the 3d information or

00:26:28,919 --> 00:26:34,640
even the otherwise structure information

00:26:31,559 --> 00:26:37,200
of the molecule is way too big to really

00:26:34,640 --> 00:26:39,270
have it for hundreds of thousands or

00:26:37,200 --> 00:26:42,360
millions of rather millions of atoms or

00:26:39,270 --> 00:26:45,330
molecules so there's a various

00:26:42,360 --> 00:26:48,779
fingerprints being invented by people to

00:26:45,330 --> 00:26:50,130
do that and chem FP is also integrating

00:26:48,779 --> 00:26:53,100
all the fingerprints done in these

00:26:50,130 --> 00:26:57,240
command formatic packages above so you

00:26:53,100 --> 00:27:01,020
have a distinctive you have a

00:26:57,240 --> 00:27:03,059
distinctive interface to it so just to

00:27:01,020 --> 00:27:05,460
show how good this or how some of these

00:27:03,059 --> 00:27:08,330
things can can be can be done this is

00:27:05,460 --> 00:27:10,710
the one CP 2k I told before from Zurich

00:27:08,330 --> 00:27:13,529
ETH Zurich and University of Zurich so

00:27:10,710 --> 00:27:15,179
they recently released the papers saying

00:27:13,529 --> 00:27:17,730
linear scaling self-consistent field

00:27:15,179 --> 00:27:20,460
calculations with millions of atoms and

00:27:17,730 --> 00:27:22,649
yet in the condensed phase so this is

00:27:20,460 --> 00:27:25,559
something that hasn't been done with any

00:27:22,649 --> 00:27:27,899
proprietary code for example there's

00:27:25,559 --> 00:27:31,679
various proprietary ones but this is

00:27:27,899 --> 00:27:32,880
state-of-the-art research and they they

00:27:31,679 --> 00:27:36,269
are really able to

00:27:32,880 --> 00:27:38,190
scale extremely well in a parallel face

00:27:36,269 --> 00:27:41,299
of course this doesn't make sense to run

00:27:38,190 --> 00:27:45,809
on an ambien notebook but the code runs

00:27:41,299 --> 00:27:49,470
generally extremely good and another one

00:27:45,809 --> 00:27:51,570
is size 4 which has not been uploaded

00:27:49,470 --> 00:27:55,320
yet but probably will be during DEFCON

00:27:51,570 --> 00:27:58,169
and they were able to calculate on a

00:27:55,320 --> 00:28:02,460
very high level this DNA complex and for

00:27:58,169 --> 00:28:05,700
example this is a well I don't know some

00:28:02,460 --> 00:28:08,850
website citing that free software to

00:28:05,700 --> 00:28:13,049
speed drug development so there they

00:28:08,850 --> 00:28:15,090
have some nice publicity as well and

00:28:13,049 --> 00:28:17,220
this is also I mean this method has been

00:28:15,090 --> 00:28:19,620
in has been implemented and one other

00:28:17,220 --> 00:28:22,529
proprietary code but basically this is

00:28:19,620 --> 00:28:24,870
also state-of-the-art research the other

00:28:22,529 --> 00:28:27,600
thing which is really nice as I showed

00:28:24,870 --> 00:28:29,850
you primal before and it's really been

00:28:27,600 --> 00:28:31,500
used for a lot of journal covers so do

00:28:29,850 --> 00:28:33,870
you have a journal and then well back

00:28:31,500 --> 00:28:35,309
then when they were still printed every

00:28:33,870 --> 00:28:37,649
journal had a nice cover with a nice

00:28:35,309 --> 00:28:39,299
picture so usually you would really take

00:28:37,649 --> 00:28:41,759
a long time to prepare a nice picture

00:28:39,299 --> 00:28:44,879
and primal has been really on a lot of

00:28:41,759 --> 00:28:46,200
science or a penis or whatever picture

00:28:44,879 --> 00:28:48,029
so there's this wiki page with all the

00:28:46,200 --> 00:28:50,399
covers so you can see that people are

00:28:48,029 --> 00:28:53,370
really really using it for to display

00:28:50,399 --> 00:28:55,980
their their science when they want to

00:28:53,370 --> 00:29:01,289
show off how how nice whatever they did

00:28:55,980 --> 00:29:03,990
was whoops and last one is Asus 3 which

00:29:01,289 --> 00:29:05,399
is a code from from University of

00:29:03,990 --> 00:29:07,620
Florida and I just want to highlight

00:29:05,399 --> 00:29:10,710
that it says the main customer inside

00:29:07,620 --> 00:29:12,809
Department of Defense started to use the

00:29:10,710 --> 00:29:15,779
new parallel code in 2007 with a

00:29:12,809 --> 00:29:17,549
parallel method in Asus 3 their

00:29:15,779 --> 00:29:19,399
productivity increased dramatically with

00:29:17,549 --> 00:29:21,600
the serial Asus - that's the one before

00:29:19,399 --> 00:29:23,490
they could investigate one transition

00:29:21,600 --> 00:29:26,820
stay per month so basically one reaction

00:29:23,490 --> 00:29:29,250
with asus 3 running on 128 to 256

00:29:26,820 --> 00:29:32,940
processors they could do one per day and

00:29:29,250 --> 00:29:36,809
down here you see how it how does things

00:29:32,940 --> 00:29:38,929
scales and this is per 10,000 processors

00:29:36,809 --> 00:29:43,379
so I think they they run it on up to

00:29:38,929 --> 00:29:45,130
60,000 of course so it's also massively

00:29:43,379 --> 00:29:47,070
parallel thing

00:29:45,130 --> 00:29:49,630
so this is real useful or a

00:29:47,070 --> 00:29:51,880
state-of-the-art software that we have

00:29:49,630 --> 00:29:54,370
and they are all in in Debian except for

00:29:51,880 --> 00:29:56,590
Sai for which Sai 3 is in Debian psi4

00:29:54,370 --> 00:29:59,440
has recently been released as a beta

00:29:56,590 --> 00:30:01,360
better version and I didn't get around

00:29:59,440 --> 00:30:04,570
to upload it but I will probably do that

00:30:01,360 --> 00:30:05,950
during DEFCON 4 hope and then the other

00:30:04,570 --> 00:30:09,490
thing that we are doing is having

00:30:05,950 --> 00:30:12,390
package into dependencies so a lot of

00:30:09,490 --> 00:30:15,700
the libraries depend on each other and

00:30:12,390 --> 00:30:19,559
can be used from one or the other MP QC

00:30:15,700 --> 00:30:22,120
version 2 or 3 for example and we have

00:30:19,559 --> 00:30:24,900
one thing which is important is the

00:30:22,120 --> 00:30:27,400
generation of these text files for the

00:30:24,900 --> 00:30:28,870
computational chemistry packages because

00:30:27,400 --> 00:30:30,309
this is very tedious so it's nice to

00:30:28,870 --> 00:30:32,500
have a nice graphical user interface

00:30:30,309 --> 00:30:34,419
which generates it and you just have to

00:30:32,500 --> 00:30:36,220
run it on a computer cluster so for NW

00:30:34,419 --> 00:30:38,850
chem and mopac 7 we can do that already

00:30:36,220 --> 00:30:41,080
we want to do it also for others but

00:30:38,850 --> 00:30:42,850
well we probably have to implement that

00:30:41,080 --> 00:30:44,650
ourselves the office don't seem to be

00:30:42,850 --> 00:30:46,570
interested in that right now and the

00:30:44,650 --> 00:30:47,980
other thing is parsing of the outputs

00:30:46,570 --> 00:30:49,750
and visualization so there's also a

00:30:47,980 --> 00:30:52,720
vogue a draw which mostly does that for

00:30:49,750 --> 00:30:57,870
a lot of these packages but gap edit is

00:30:52,720 --> 00:31:01,539
another one of the 50s we do right so

00:30:57,870 --> 00:31:04,059
just want to come quickly to the what

00:31:01,539 --> 00:31:05,980
what we are doing in Debian so right now

00:31:04,059 --> 00:31:07,900
we are mostly having all our packages in

00:31:05,980 --> 00:31:09,490
subversion or gate so I'm mostly using

00:31:07,900 --> 00:31:12,760
this abortion still and Phillip Orosco

00:31:09,490 --> 00:31:14,950
knee is using it and we're using well

00:31:12,760 --> 00:31:17,409
3-0 quill format which is the standard

00:31:14,950 --> 00:31:19,510
nowadays what we try to do is have a

00:31:17,409 --> 00:31:22,030
more at least what I try to do is have

00:31:19,510 --> 00:31:25,299
them as good as possible longer scripts

00:31:22,030 --> 00:31:27,730
or people can really see what the

00:31:25,299 --> 00:31:31,270
package does so include all the main

00:31:27,730 --> 00:31:34,450
features and also for example if it's if

00:31:31,270 --> 00:31:36,429
it's something which does file format

00:31:34,450 --> 00:31:38,500
interconversion or is able to parse

00:31:36,429 --> 00:31:41,200
outputs then we want to write down which

00:31:38,500 --> 00:31:44,289
which packages or output formats are

00:31:41,200 --> 00:31:46,419
useful and be done or also the supported

00:31:44,289 --> 00:31:48,010
DFG functional density functional theory

00:31:46,419 --> 00:31:51,159
there's a lot of different functionals

00:31:48,010 --> 00:31:52,960
and to do that and and the other thing

00:31:51,159 --> 00:31:57,059
is the way it's parallelized so whether

00:31:52,960 --> 00:31:59,050
it's MPI or OpenMP or a hybrid version

00:31:57,059 --> 00:32:00,670
we always

00:31:59,050 --> 00:32:01,750
and except for grow max I guess we

00:32:00,670 --> 00:32:03,550
always use the default MPI

00:32:01,750 --> 00:32:07,000
implementation MPI default def that's

00:32:03,550 --> 00:32:08,260
very nice it works quite well and we're

00:32:07,000 --> 00:32:10,780
using this upstream meta data that

00:32:08,260 --> 00:32:14,530
andreas was talking about before in the

00:32:10,780 --> 00:32:17,220
way to have a citation or as I also try

00:32:14,530 --> 00:32:19,600
to put in the principal publications so

00:32:17,220 --> 00:32:21,880
people can have a look at the journal

00:32:19,600 --> 00:32:23,650
papers and the upstream registration

00:32:21,880 --> 00:32:26,320
site if applicable I think we have two

00:32:23,650 --> 00:32:30,790
or three of them and the upstream source

00:32:26,320 --> 00:32:32,830
code repository if there is one so we

00:32:30,790 --> 00:32:34,840
also do try to do some quality assurance

00:32:32,830 --> 00:32:36,310
we have some peer review which basically

00:32:34,840 --> 00:32:38,200
means that daniel is going through all

00:32:36,310 --> 00:32:41,440
the packages and fixing whatever he

00:32:38,200 --> 00:32:43,390
thinks he should fix so maybe some

00:32:41,440 --> 00:32:46,090
sometimes he find stuff so he's very

00:32:43,390 --> 00:32:49,180
very focused on details so packages are

00:32:46,090 --> 00:32:50,740
usually in a pretty good shape and we

00:32:49,180 --> 00:32:56,470
always run the upstream test suit if

00:32:50,740 --> 00:32:58,480
possible if there's one we well we have

00:32:56,470 --> 00:33:00,010
usually support to bypass the test with

00:32:58,480 --> 00:33:02,950
no check if that takes it so long and

00:33:00,010 --> 00:33:05,770
what I also did at least for wheezy is

00:33:02,950 --> 00:33:08,890
to not put so much strain on the auto

00:33:05,770 --> 00:33:11,770
builder so we only we try to pick useful

00:33:08,890 --> 00:33:13,420
test suits from upstream which cover

00:33:11,770 --> 00:33:15,460
most of the functionality we think is

00:33:13,420 --> 00:33:16,900
useful to our users and not run the

00:33:15,460 --> 00:33:19,090
whole upstream tester because they can

00:33:16,900 --> 00:33:21,940
take hours or and MIPS auto builder

00:33:19,090 --> 00:33:24,670
would take maybe days so but what we

00:33:21,940 --> 00:33:26,740
also try to add now and probably should

00:33:24,670 --> 00:33:28,990
have a discussion and a bigger thing is

00:33:26,740 --> 00:33:30,250
Telus full check a dead build option

00:33:28,990 --> 00:33:32,130
which will then really run the whole

00:33:30,250 --> 00:33:35,080
tester if you want to do it locally and

00:33:32,130 --> 00:33:37,750
check that and one problem we have with

00:33:35,080 --> 00:33:39,460
that is some packages are really bad

00:33:37,750 --> 00:33:41,830
because they just run diff on the

00:33:39,460 --> 00:33:44,050
reference output and on the generated

00:33:41,830 --> 00:33:46,180
output and if there is some numerical

00:33:44,050 --> 00:33:47,530
noise then they say well this test fit

00:33:46,180 --> 00:33:49,600
has failed some are really good and

00:33:47,530 --> 00:33:52,270
saying well the tolerance is 10 to the

00:33:49,600 --> 00:33:53,650
minus 12 or 10 to the minus 10 and then

00:33:52,270 --> 00:33:55,450
they're good at figuring that out and

00:33:53,650 --> 00:33:57,850
only if the tolerance is bigger then

00:33:55,450 --> 00:34:01,000
it's actually a failed test so we have

00:33:57,850 --> 00:34:03,760
some some trouble there and we have

00:34:01,000 --> 00:34:05,500
watch files also Daniel is very good at

00:34:03,760 --> 00:34:07,720
doing that so we can always see whether

00:34:05,500 --> 00:34:10,300
there is a new upstream version he's

00:34:07,720 --> 00:34:12,790
he's doing that all over the field

00:34:10,300 --> 00:34:15,100
because I'm I never looked into

00:34:12,790 --> 00:34:17,350
in that detail but she just knows how it

00:34:15,100 --> 00:34:19,179
works and so we can always see where

00:34:17,350 --> 00:34:20,470
there's a new option version and what I

00:34:19,179 --> 00:34:22,240
would like to do but we haven't done so

00:34:20,470 --> 00:34:24,310
far is install time chess to it so that

00:34:22,240 --> 00:34:26,380
when people install it on their machine

00:34:24,310 --> 00:34:28,060
they can still run a small test suit to

00:34:26,380 --> 00:34:31,780
see whether the packages installed

00:34:28,060 --> 00:34:33,490
successfully we frequently have to

00:34:31,780 --> 00:34:35,919
change things in upstream because as I

00:34:33,490 --> 00:34:38,200
said the lot of this code has been

00:34:35,919 --> 00:34:40,540
dumped on the community or was not

00:34:38,200 --> 00:34:44,679
really engineered from scratch an open

00:34:40,540 --> 00:34:47,140
source project so what we probably use

00:34:44,679 --> 00:34:50,590
or a need a lot is hard-coded data file

00:34:47,140 --> 00:34:54,040
locations because we put our data files

00:34:50,590 --> 00:34:57,850
and user share some essential data that

00:34:54,040 --> 00:35:01,570
the program needs to run and this is

00:34:57,850 --> 00:35:03,790
usually not thought of or either you

00:35:01,570 --> 00:35:07,210
have to have a configuration file for

00:35:03,790 --> 00:35:09,700
every user or you just put in that's

00:35:07,210 --> 00:35:11,620
also very popular as having environment

00:35:09,700 --> 00:35:15,340
variables and we want to have the

00:35:11,620 --> 00:35:17,110
program run without that so we add we

00:35:15,340 --> 00:35:20,350
additionally hard code the user share

00:35:17,110 --> 00:35:22,090
whatever data file location into the

00:35:20,350 --> 00:35:25,330
program so it always at least finds this

00:35:22,090 --> 00:35:26,800
the data files that we supply also

00:35:25,330 --> 00:35:30,400
frequent we have to fix the build system

00:35:26,800 --> 00:35:33,610
because it might not even be done for

00:35:30,400 --> 00:35:35,320
installation or other stuff

00:35:33,610 --> 00:35:37,510
des dear it's a lot of thing but I guess

00:35:35,320 --> 00:35:40,060
that's that's a regular thing but with

00:35:37,510 --> 00:35:42,250
all these scientific work it's usually

00:35:40,060 --> 00:35:45,640
not computer scientists but physicists

00:35:42,250 --> 00:35:48,880
or and so they are slightly more sloppy

00:35:45,640 --> 00:35:51,310
with build systems and stuff also Daniel

00:35:48,880 --> 00:35:53,170
is very good at writing main pages so he

00:35:51,310 --> 00:35:55,690
either fixes up the upstream ones or he

00:35:53,170 --> 00:35:58,080
even writes manage pages from scratch

00:35:55,690 --> 00:36:01,480
that's also very helpful

00:35:58,080 --> 00:36:03,340
and we we help with license copyright

00:36:01,480 --> 00:36:05,350
and license clear up if there's some

00:36:03,340 --> 00:36:09,460
trouble and it's also not not too

00:36:05,350 --> 00:36:12,340
uncommon so there is a couple of

00:36:09,460 --> 00:36:16,210
upstream horror stories I wanted to well

00:36:12,340 --> 00:36:19,690
just put together we have a lot of

00:36:16,210 --> 00:36:21,040
things where people that's also part of

00:36:19,690 --> 00:36:22,720
the registration stuff that they're

00:36:21,040 --> 00:36:25,540
intereste talked about so in order to

00:36:22,720 --> 00:36:26,470
for them to really be able to tell

00:36:25,540 --> 00:36:28,390
they're found

00:36:26,470 --> 00:36:30,580
founders said ok we have so many users

00:36:28,390 --> 00:36:34,330
they require you to register as a user

00:36:30,580 --> 00:36:36,160
and and then sometimes they just put you

00:36:34,330 --> 00:36:37,330
on this also download page afterwards so

00:36:36,160 --> 00:36:40,240
you really have to register with your

00:36:37,330 --> 00:36:42,190
whole name email address Institute and

00:36:40,240 --> 00:36:45,880
then they say ok thanks now here's the

00:36:42,190 --> 00:36:47,320
down SourceForge download page or users

00:36:45,880 --> 00:36:51,910
have to register at a website I mean you

00:36:47,320 --> 00:36:53,830
can show this one for example I don't

00:36:51,910 --> 00:36:55,690
know whether you can see it in order to

00:36:53,830 --> 00:37:00,940
download Berkeley GW it's not packaged

00:36:55,690 --> 00:37:02,200
right now but um you also acknowledge

00:37:00,940 --> 00:37:03,820
that you're expected to decide the

00:37:02,200 --> 00:37:05,260
following papers and you must create a

00:37:03,820 --> 00:37:06,640
user account on its website and I think

00:37:05,260 --> 00:37:08,859
that even after you create the account

00:37:06,640 --> 00:37:10,330
the even back then when I first

00:37:08,859 --> 00:37:13,720
downloaded that they asks you a question

00:37:10,330 --> 00:37:15,160
like what does GW mean in Berkeley GW so

00:37:13,720 --> 00:37:17,320
only people who really know what they

00:37:15,160 --> 00:37:20,080
they know what they're doing can

00:37:17,320 --> 00:37:23,619
download this stuff that's quite quite

00:37:20,080 --> 00:37:27,190
difficult already another story is the

00:37:23,619 --> 00:37:29,290
ALPA package which has a has a good

00:37:27,190 --> 00:37:32,230
repository but you have to ask for

00:37:29,290 --> 00:37:39,010
access it's not it's not public RS is

00:37:32,230 --> 00:37:40,960
bad I cannot really see it so you have

00:37:39,010 --> 00:37:42,520
to ask for get access registration and

00:37:40,960 --> 00:37:43,780
then you get a password and then you

00:37:42,520 --> 00:37:46,750
have to always use the password for a

00:37:43,780 --> 00:37:49,180
good interface also just to make things

00:37:46,750 --> 00:37:53,160
more difficult for everybody that's the

00:37:49,180 --> 00:37:55,599
severe public password login ok I will

00:37:53,160 --> 00:37:59,920
go to some of the challenges we have

00:37:55,599 --> 00:38:01,060
which is fort and 77 code so I guess not

00:37:59,920 --> 00:38:03,910
a lot of people have to deal with that

00:38:01,060 --> 00:38:08,349
all the time we have quite a few of that

00:38:03,910 --> 00:38:10,330
packages and that it's not not very nice

00:38:08,349 --> 00:38:13,420
to even change if you want to change

00:38:10,330 --> 00:38:14,619
something or fix bugs in luckily most of

00:38:13,420 --> 00:38:16,000
the codes are rather mature and are not

00:38:14,619 --> 00:38:18,880
getting changed a lot so we don't have

00:38:16,000 --> 00:38:21,700
to dive into fort and 77 or even 40 and

00:38:18,880 --> 00:38:23,730
60 code a lot but it happens there's

00:38:21,700 --> 00:38:26,500
also a lot of handmade make files around

00:38:23,730 --> 00:38:28,210
which is not very helpful so they don't

00:38:26,500 --> 00:38:30,160
use auto tools or see make or anything

00:38:28,210 --> 00:38:31,900
we always have to dive into these

00:38:30,160 --> 00:38:34,480
handmade make files they're quite proud

00:38:31,900 --> 00:38:36,490
of it but it's not it's not really the

00:38:34,480 --> 00:38:38,349
best way to address this and some of

00:38:36,490 --> 00:38:40,360
these packages have never been intended

00:38:38,349 --> 00:38:44,150
to be installed at all

00:38:40,360 --> 00:38:45,770
so they don't have an install target for

00:38:44,150 --> 00:38:48,680
example because they assume that you run

00:38:45,770 --> 00:38:50,900
them out of your out of your home

00:38:48,680 --> 00:38:52,400
directory over ever and some of them I

00:38:50,900 --> 00:38:54,140
might only be useful for supercomputer

00:38:52,400 --> 00:38:57,710
so these aces three that I showed

00:38:54,140 --> 00:38:59,420
earlier which runs on 70,000 course it

00:38:57,710 --> 00:39:02,090
doesn't run on one core so if you run it

00:38:59,420 --> 00:39:04,160
on one core its SEC fault so it took me

00:39:02,090 --> 00:39:07,190
really long time to fix this before we

00:39:04,160 --> 00:39:08,990
see that you can run it just on one core

00:39:07,190 --> 00:39:11,360
and not and not in a parallel fashion

00:39:08,990 --> 00:39:17,210
and the authors never thought about this

00:39:11,360 --> 00:39:20,000
apparently so okay

00:39:17,210 --> 00:39:22,520
and just to give you an idea of these

00:39:20,000 --> 00:39:26,210
upstream things I put together a table

00:39:22,520 --> 00:39:28,820
showing the different different things

00:39:26,210 --> 00:39:32,120
they have weather so this is for some of

00:39:28,820 --> 00:39:34,370
the computational chemistry packages you

00:39:32,120 --> 00:39:36,410
see the license most of them are GPL

00:39:34,370 --> 00:39:38,720
that's nice you see the language well

00:39:36,410 --> 00:39:43,130
some of them are C++ but some of them

00:39:38,720 --> 00:39:45,590
are f-14 and 77 code and CP 2 K is 455

00:39:43,130 --> 00:39:49,520
at least so it's it's rather nicely

00:39:45,590 --> 00:39:51,260
engineered the project hosting you can

00:39:49,520 --> 00:39:54,050
see here I mean the main point I want to

00:39:51,260 --> 00:39:56,120
want to give it with that table is well

00:39:54,050 --> 00:39:57,650
there are they are open source but are

00:39:56,120 --> 00:40:00,950
they open source projects right so

00:39:57,650 --> 00:40:02,540
there's a there's this I think there was

00:40:00,950 --> 00:40:04,460
a strategy question thing like do you

00:40:02,540 --> 00:40:07,150
have a public back tracker or something

00:40:04,460 --> 00:40:09,440
and if you don't then you get 10 10

00:40:07,150 --> 00:40:11,840
minus points and then in the end you can

00:40:09,440 --> 00:40:14,210
see if you're at at less than minus 100

00:40:11,840 --> 00:40:16,940
and you were maybe a open source project

00:40:14,210 --> 00:40:18,290
so for example NW chem which has been

00:40:16,940 --> 00:40:23,330
open source like four years ago it's

00:40:18,290 --> 00:40:24,820
still only only developed at Pacific

00:40:23,330 --> 00:40:28,070
National Laboratory

00:40:24,820 --> 00:40:29,420
it only has a private code repositories

00:40:28,070 --> 00:40:31,100
are the only thing they ever do is that

00:40:29,420 --> 00:40:34,610
actually they have a release table all

00:40:31,100 --> 00:40:36,110
and then sometimes they dump development

00:40:34,610 --> 00:40:37,820
snapshots of the tarballs

00:40:36,110 --> 00:40:39,200
that's that's it they don't have a pop

00:40:37,820 --> 00:40:40,760
need you don't even have a bug tracker

00:40:39,200 --> 00:40:42,940
they don't have a developer mailing list

00:40:40,760 --> 00:40:46,790
they just have a user mailing list and

00:40:42,940 --> 00:40:50,090
and yeah and they don't really have

00:40:46,790 --> 00:40:51,470
project hosting whereas for example grow

00:40:50,090 --> 00:40:53,060
max is really nice it has a backtrack

00:40:51,470 --> 00:40:54,260
our developer list user list and it also

00:40:53,060 --> 00:40:55,640
seems that all the devel

00:40:54,260 --> 00:41:00,220
and it's actually on the list and not on

00:40:55,640 --> 00:41:02,510
some hidden list and it uses redmine and

00:41:00,220 --> 00:41:05,390
gives us get and everything so that's

00:41:02,510 --> 00:41:07,340
that's nice um yeah so you could say

00:41:05,390 --> 00:41:10,040
that romex is a really nice open source

00:41:07,340 --> 00:41:13,040
project CP to K is also rather good

00:41:10,040 --> 00:41:15,970
except that it seems like the developers

00:41:13,040 --> 00:41:19,369
are mostly mostly developing their stuff

00:41:15,970 --> 00:41:20,330
in a hidden fashion so you get you get

00:41:19,369 --> 00:41:21,800
everything in there subversion

00:41:20,330 --> 00:41:23,960
repository that's not the problem but

00:41:21,800 --> 00:41:25,550
there is no real discussion about what

00:41:23,960 --> 00:41:26,930
features should be done or what method

00:41:25,550 --> 00:41:29,000
should be implemented next that all

00:41:26,930 --> 00:41:30,710
seems to happen either because

00:41:29,000 --> 00:41:34,400
everybody's in Zurich they just meet up

00:41:30,710 --> 00:41:36,290
every I don't know month or there's some

00:41:34,400 --> 00:41:38,119
hidden list and I don't know if but

00:41:36,290 --> 00:41:40,910
otherwise it's it's a rather nice

00:41:38,119 --> 00:41:43,520
project and also the side project is not

00:41:40,910 --> 00:41:44,240
super great it has it has a bug tracker

00:41:43,520 --> 00:41:46,940
and that's about it

00:41:44,240 --> 00:41:49,460
and and then they dump they dump the

00:41:46,940 --> 00:41:52,220
ever they have a they have a private

00:41:49,460 --> 00:41:54,560
repository on github so they just dump

00:41:52,220 --> 00:41:56,060
the tarballs but if you look at

00:41:54,560 --> 00:41:59,060
cheminformatics two kids it looks I am

00:41:56,060 --> 00:42:01,700
actually much better so again most of it

00:41:59,060 --> 00:42:03,220
is GPL but it's all C++ or Java

00:42:01,700 --> 00:42:04,970
everything has been written from scratch

00:42:03,220 --> 00:42:07,100
it's nice

00:42:04,970 --> 00:42:10,640
almost every everybody's using it these

00:42:07,100 --> 00:42:12,980
days Muslim github cdk is using a

00:42:10,640 --> 00:42:14,690
SourceForge for some reason and they all

00:42:12,980 --> 00:42:17,180
have bug tracker developer this user

00:42:14,690 --> 00:42:18,650
list and all that kind of stuff the one

00:42:17,180 --> 00:42:21,230
thing which is not so great sometimes as

00:42:18,650 --> 00:42:23,630
there is no stable point releases so we

00:42:21,230 --> 00:42:26,180
cannot really use that for to to improve

00:42:23,630 --> 00:42:27,710
maybe also Debian stable at some point I

00:42:26,180 --> 00:42:29,869
mean it's very difficult to figure out

00:42:27,710 --> 00:42:30,460
which changes are useful and which are

00:42:29,869 --> 00:42:34,400
not

00:42:30,460 --> 00:42:36,500
so just to defined to come to an end

00:42:34,400 --> 00:42:38,780
um this is some of the stuff that we

00:42:36,500 --> 00:42:41,000
want to do or I want to do is sort our

00:42:38,780 --> 00:42:42,650
tasks so this is not so great right now

00:42:41,000 --> 00:42:44,630
as I said names are not so great we

00:42:42,650 --> 00:42:47,720
should also split up maybe some tests or

00:42:44,630 --> 00:42:49,970
make some new tests we should package

00:42:47,720 --> 00:42:51,859
some more projects so these quantum

00:42:49,970 --> 00:42:56,119
Monte Carlo ones are also very important

00:42:51,859 --> 00:42:58,100
but not our package yet maybe quantum

00:42:56,119 --> 00:43:00,650
dynamics but there is not a lot they are

00:42:58,100 --> 00:43:03,050
unfortunately and complete auto docking

00:43:00,650 --> 00:43:04,430
this is also probably in collaboration

00:43:03,050 --> 00:43:06,800
with Debian meter so Auto docking means

00:43:04,430 --> 00:43:08,190
they have a protein and you try to find

00:43:06,800 --> 00:43:09,990
with a molecule where

00:43:08,190 --> 00:43:11,970
where that where it fits on the protein

00:43:09,990 --> 00:43:14,460
so you can have these interactions

00:43:11,970 --> 00:43:17,040
between the protein and possible

00:43:14,460 --> 00:43:18,450
pharmaceutical package bundle

00:43:17,040 --> 00:43:20,310
parallelization library so there's a

00:43:18,450 --> 00:43:22,470
couple of libraries bundled inside his

00:43:20,310 --> 00:43:24,060
pack these projects we would like to if

00:43:22,470 --> 00:43:26,790
possible split them out so they can be

00:43:24,060 --> 00:43:29,720
used for a wider application or pecola

00:43:26,790 --> 00:43:32,700
some of those matrix computation stuff

00:43:29,720 --> 00:43:35,339
one of the things that I was really

00:43:32,700 --> 00:43:37,440
interested is hybrid MPI OpenMP because

00:43:35,339 --> 00:43:40,020
that's probably what most people would

00:43:37,440 --> 00:43:42,630
be using on on a cluster so you have

00:43:40,020 --> 00:43:44,579
openmp for shared memory on one node and

00:43:42,630 --> 00:43:48,569
then you have MPI if you have more than

00:43:44,579 --> 00:43:50,099
one node one more than one computer to

00:43:48,569 --> 00:43:53,460
use and then you can paralyze easily

00:43:50,099 --> 00:43:56,069
over from one to many computers and

00:43:53,460 --> 00:43:58,140
OpenCL support there's a lot of there's

00:43:56,069 --> 00:44:01,800
a lot of computational chemistry things

00:43:58,140 --> 00:44:03,119
not trying to do CUDA or well OpenCL but

00:44:01,800 --> 00:44:05,130
I'm not sure whether there is still or

00:44:03,119 --> 00:44:06,540
already a really free free

00:44:05,130 --> 00:44:09,300
implementation I talked to somebody

00:44:06,540 --> 00:44:12,329
recently who said that for I think

00:44:09,300 --> 00:44:15,060
Radeon HD i'h'm things there should now

00:44:12,329 --> 00:44:16,500
be something free but NVIDIA is doing

00:44:15,060 --> 00:44:18,480
this CUDA stuff and in shell is also

00:44:16,500 --> 00:44:21,990
doing something so that that's mostly

00:44:18,480 --> 00:44:25,619
proprietary unfortunately there's some

00:44:21,990 --> 00:44:28,290
things as Atlas is doing for so we would

00:44:25,619 --> 00:44:30,329
like to be the user be able to recompile

00:44:28,290 --> 00:44:31,859
a package with a DEP build options

00:44:30,329 --> 00:44:35,880
custom thing and then it gets us

00:44:31,859 --> 00:44:37,740
auto-tuned and better thing for for the

00:44:35,880 --> 00:44:40,490
users so the package is optimized for

00:44:37,740 --> 00:44:42,720
the particular system that a user has

00:44:40,490 --> 00:44:43,770
more correctness testing is always nice

00:44:42,720 --> 00:44:46,950
then they we have this problem with a

00:44:43,770 --> 00:44:48,450
Fortran 90 module files which I just try

00:44:46,950 --> 00:44:51,089
to discuss on a Dem in science mailing

00:44:48,450 --> 00:44:52,890
list because Fortran 90 projects need

00:44:51,089 --> 00:44:56,670
think head of us but unfortunately those

00:44:52,890 --> 00:44:58,680
are their binary or one a really compile

00:44:56,670 --> 00:45:00,030
but binaries so that that's rather

00:44:58,680 --> 00:45:02,819
troublesome to figure out and also

00:45:00,030 --> 00:45:05,099
gfortran seems to change the api every

00:45:02,819 --> 00:45:07,109
time it releases so there is some

00:45:05,099 --> 00:45:10,730
trouble there may be multiple compiler

00:45:07,109 --> 00:45:15,000
support that's not so bad and um yeah

00:45:10,730 --> 00:45:16,770
well that's that's basically it so the

00:45:15,000 --> 00:45:19,440
other stuff yeah we would always try to

00:45:16,770 --> 00:45:21,180
suppose it read okay is there no time

00:45:19,440 --> 00:45:22,320
for questions no okay well there is a

00:45:21,180 --> 00:45:24,850
Debbie Campbell

00:45:22,320 --> 00:45:26,890
right as the next I guess in the

00:45:24,850 --> 00:45:29,950
bathroom so if somebody's interested in

00:45:26,890 --> 00:45:34,080
it we can meet there and discuss and or

00:45:29,950 --> 00:45:34,080

YouTube URL: https://www.youtube.com/watch?v=G1D25OjM5Ko


