Title: WebID BoF
Publication date: 2017-11-29
Playlist: DebConf 13
Description: 
	by Jonas Smedegaard

At: DebConf13
https://debconf13.debconf.org/
Room: Second talk room
Scheduled start: 2013-08-13 16:30:00
Captions: 
	00:00:00,000 --> 00:00:05,130
this is a buff which means that I have

00:00:03,060 --> 00:00:08,580
no responsibility whatsoever what is

00:00:05,130 --> 00:00:10,740
happening in the next 45 minutes it is a

00:00:08,580 --> 00:00:13,080
collective effort meaning that it's

00:00:10,740 --> 00:00:16,710
everybody else I hope others take more

00:00:13,080 --> 00:00:20,420
responsibility than me and one thing you

00:00:16,710 --> 00:00:25,820
can do is you can join the gobby and

00:00:20,420 --> 00:00:31,669
write what we are finding out here so

00:00:25,820 --> 00:00:34,829
how many of you know what web ID is or

00:00:31,669 --> 00:00:38,640
maybe the opposite how many of you have

00:00:34,829 --> 00:00:41,850
no clue what everybody is fair enough no

00:00:38,640 --> 00:00:44,910
it's it's it's perfectly fine so maybe I

00:00:41,850 --> 00:00:47,730
should just try and give a short summary

00:00:44,910 --> 00:00:53,219
I was exercising that just the 15

00:00:47,730 --> 00:00:55,710
minutes ago also so web ID is is one one

00:00:53,219 --> 00:01:00,930
piece of a larger puzzle that is called

00:00:55,710 --> 00:01:06,150
the semantic web web ID is the ability

00:01:00,930 --> 00:01:08,820
to authenticate on what has exercised

00:01:06,150 --> 00:01:11,040
but there's two levels of this that the

00:01:08,820 --> 00:01:12,479
the water has been practiced the most at

00:01:11,040 --> 00:01:14,250
the moment and then there's the

00:01:12,479 --> 00:01:17,790
possibilities technicalities details

00:01:14,250 --> 00:01:19,110
later so I will tell the simple story of

00:01:17,790 --> 00:01:24,689
what has been practiced in the most

00:01:19,110 --> 00:01:26,930
which is you have an in a client-side

00:01:24,689 --> 00:01:30,240
certificate on your web browser and you

00:01:26,930 --> 00:01:34,700
access a web server that and the web

00:01:30,240 --> 00:01:36,960
server is verifying you not by the

00:01:34,700 --> 00:01:39,420
certifier of your certificate but

00:01:36,960 --> 00:01:41,189
instead by a hints that you also include

00:01:39,420 --> 00:01:44,759
on the client-side certificate that

00:01:41,189 --> 00:01:50,340
points to another web page that you own

00:01:44,759 --> 00:01:52,439
which has more information about you so

00:01:50,340 --> 00:01:54,960
that's the very short version of what

00:01:52,439 --> 00:02:01,829
web ID is anybody who still has no clue

00:01:54,960 --> 00:02:04,259
what I've just said do any of you know

00:02:01,829 --> 00:02:07,700
about the the the underlaying thing

00:02:04,259 --> 00:02:10,879
called foaf friend of a friend Network

00:02:07,700 --> 00:02:12,720
someone is nodding one was nodding

00:02:10,879 --> 00:02:14,030
anybody heard about the thing called

00:02:12,720 --> 00:02:17,640
Facebook

00:02:14,030 --> 00:02:23,160
okay someone is laughing Facebook is

00:02:17,640 --> 00:02:26,280
trying to combine the the knowledge of

00:02:23,160 --> 00:02:28,500
who who are your friends by who are your

00:02:26,280 --> 00:02:30,090
friends friends so when you log into

00:02:28,500 --> 00:02:32,490
Facebook the first time if you only know

00:02:30,090 --> 00:02:34,080
tell one of your friends then instantly

00:02:32,490 --> 00:02:35,340
it can pop up and say oh if you know

00:02:34,080 --> 00:02:38,550
that person maybe you will know this

00:02:35,340 --> 00:02:41,480
person also that is part of this logic

00:02:38,550 --> 00:02:43,620
of graphing your relationships and

00:02:41,480 --> 00:02:45,780
relationships can not only be about

00:02:43,620 --> 00:02:49,020
friends it can also be about knowledge

00:02:45,780 --> 00:02:51,330
in other ways so the thing that I have a

00:02:49,020 --> 00:02:54,420
passport and this passport is issued by

00:02:51,330 --> 00:02:57,030
this government and someone trusts this

00:02:54,420 --> 00:02:59,900
government to issue passports this is

00:02:57,030 --> 00:03:03,710
also a graph of relationship about facts

00:02:59,900 --> 00:03:06,990
so one of the things that have been

00:03:03,710 --> 00:03:10,770
tested the most in in relation to web ID

00:03:06,990 --> 00:03:13,740
info is this playing with friendships

00:03:10,770 --> 00:03:16,170
and how you can build trust based on

00:03:13,740 --> 00:03:18,120
friendships now most of us in this room

00:03:16,170 --> 00:03:20,000
probably know that that is pure evil

00:03:18,120 --> 00:03:22,950
because that is what Facebook is doing

00:03:20,000 --> 00:03:26,010
but it's it might not be the only way

00:03:22,950 --> 00:03:29,880
that you are reasoning on verifying on

00:03:26,010 --> 00:03:32,070
facts it could be other chains of facts

00:03:29,880 --> 00:03:34,140
chasing that you are doing then it's

00:03:32,070 --> 00:03:35,520
fact chasing of who are your friends if

00:03:34,140 --> 00:03:38,010
you know you if I know your friends I

00:03:35,520 --> 00:03:39,660
know who you are in bed with a court

00:03:38,010 --> 00:03:42,660
could also be things like what we are

00:03:39,660 --> 00:03:45,120
actually doing practicing with PTP by

00:03:42,660 --> 00:03:47,270
showing a passport and then reasoning

00:03:45,120 --> 00:03:50,790
that well if this passport looks pretty

00:03:47,270 --> 00:03:54,140
nice then it probably is issued from the

00:03:50,790 --> 00:03:54,140
government that is printed on the paper

00:03:56,000 --> 00:04:09,510
this path is spawned by by the interest

00:04:04,350 --> 00:04:13,320
by to choose to have debian use web ID

00:04:09,510 --> 00:04:15,690
as a way to identify the the users if

00:04:13,320 --> 00:04:17,459
the developers and the maintainer sub in

00:04:15,690 --> 00:04:19,440
the in Debian against the Debian

00:04:17,459 --> 00:04:23,490
services which could also be used for

00:04:19,440 --> 00:04:25,680
outside services it's a little tricky if

00:04:23,490 --> 00:04:27,630
if we're starting from completely from

00:04:25,680 --> 00:04:31,530
scratch with what is web ID person

00:04:27,630 --> 00:04:33,660
maybe we we cannot reach the point of

00:04:31,530 --> 00:04:39,270
discussing how how we actually are going

00:04:33,660 --> 00:04:41,700
to use it is anybody in the room you you

00:04:39,270 --> 00:04:45,060
knew about whether it's anybody else

00:04:41,700 --> 00:04:47,400
it's someone knowledgeable about

00:04:45,060 --> 00:04:50,670
Semantic Web in here or am I the only

00:04:47,400 --> 00:04:51,030
one you know something about Semantic

00:04:50,670 --> 00:04:57,440
Web

00:04:51,030 --> 00:05:00,390
you also could could you maybe help me

00:04:57,440 --> 00:05:02,670
in explaining this I've tried one angle

00:05:00,390 --> 00:05:04,260
of this and I have a feeling that I was

00:05:02,670 --> 00:05:08,040
a little confusing in the way I was

00:05:04,260 --> 00:05:09,510
explaining it okay could I with a

00:05:08,040 --> 00:05:12,980
microphone just turn your head around

00:05:09,510 --> 00:05:12,980
that's a microphone button thank you

00:05:15,290 --> 00:05:20,960
hello

00:05:16,550 --> 00:05:23,550
does anyone hear we okay basically you

00:05:20,960 --> 00:05:25,380
separated the semantic information that

00:05:23,550 --> 00:05:30,710
you want to publish make it machine

00:05:25,380 --> 00:05:34,140
readable so that other instances like

00:05:30,710 --> 00:05:36,630
semantic web browsers can read this

00:05:34,140 --> 00:05:40,260
information and graph them to the user

00:05:36,630 --> 00:05:42,450
as he wants it displayed so basically as

00:05:40,260 --> 00:05:44,730
I understood it you make remember seen

00:05:42,450 --> 00:05:47,280
readable information as a replacement

00:05:44,730 --> 00:05:52,050
for what we do these days with HTML

00:05:47,280 --> 00:05:58,940
documents and do the presentation at a

00:05:52,050 --> 00:06:02,240
user at a client-side yeah that's what I

00:05:58,940 --> 00:06:02,240
wanted to say

00:06:03,120 --> 00:06:06,259
[Music]

00:06:15,599 --> 00:06:17,960
so

00:06:22,360 --> 00:06:28,120
I'm not quite sure how to how to move on

00:06:24,550 --> 00:06:29,909
from here if we can we can try to talk

00:06:28,120 --> 00:06:32,050
about web ID without people really

00:06:29,909 --> 00:06:38,650
certain about what what we're talking

00:06:32,050 --> 00:06:42,159
about here how many of you oh no no way

00:06:38,650 --> 00:06:45,039
open ID as a mechanism to to separate

00:06:42,159 --> 00:06:48,840
the authentication from the services

00:06:45,039 --> 00:06:48,840
okay that was that was a little better

00:06:49,919 --> 00:06:55,300
so one of the ideas of open ideas is

00:06:53,349 --> 00:06:57,490
this that you separate your the service

00:06:55,300 --> 00:06:58,900
itself shouldn't contain your didn't

00:06:57,490 --> 00:07:00,819
remember your passwords you should be

00:06:58,900 --> 00:07:04,449
able to separate that and have the

00:07:00,819 --> 00:07:06,849
passwords in a trusted place and so you

00:07:04,449 --> 00:07:10,030
have a third party saying go or no go

00:07:06,849 --> 00:07:15,969
for is this person saying who he is he

00:07:10,030 --> 00:07:18,069
claims he is saying Wepa is similar in

00:07:15,969 --> 00:07:20,440
that fashion but with the difference is

00:07:18,069 --> 00:07:22,949
that that the way that you are

00:07:20,440 --> 00:07:26,080
expressing this verification process is

00:07:22,949 --> 00:07:29,440
done using this these technology of

00:07:26,080 --> 00:07:33,599
Semantic Web so what is the power of

00:07:29,440 --> 00:07:36,340
that as far as I understand it is that

00:07:33,599 --> 00:07:40,029
you are in control of this third party

00:07:36,340 --> 00:07:44,400
you can set up your own service that

00:07:40,029 --> 00:07:48,940
provides this this verification process

00:07:44,400 --> 00:07:51,340
where open ID is you this the two

00:07:48,940 --> 00:07:52,930
services the service the press is the

00:07:51,340 --> 00:07:55,330
webmail service and and the open ID

00:07:52,930 --> 00:07:57,550
service these the authentication service

00:07:55,330 --> 00:07:59,440
and and the actual service you want to

00:07:57,550 --> 00:08:01,150
reach they need to exchange some

00:07:59,440 --> 00:08:03,190
information with each other in order to

00:08:01,150 --> 00:08:06,479
have this verification process work and

00:08:03,190 --> 00:08:10,779
as far as I understand the web ID ID

00:08:06,479 --> 00:08:14,590
design avoids revealing some of the

00:08:10,779 --> 00:08:17,409
information to the well for instance the

00:08:14,590 --> 00:08:20,319
way email service the web web mail

00:08:17,409 --> 00:08:23,650
service you can you can you can separate

00:08:20,319 --> 00:08:26,319
this more strong another stronger

00:08:23,650 --> 00:08:29,710
separation is also in the approach from

00:08:26,319 --> 00:08:33,399
Mozilla code called browser ID now it's

00:08:29,710 --> 00:08:35,890
been renamed to persona one of the one

00:08:33,399 --> 00:08:37,959
of the weaknesses of persona

00:08:35,890 --> 00:08:40,269
and browser idea is that it's tied to

00:08:37,959 --> 00:08:43,089
the browser that means it is when you

00:08:40,269 --> 00:08:45,579
are interactively on your web browser

00:08:43,089 --> 00:08:47,170
you can let your browser you could pass

00:08:45,579 --> 00:08:49,510
on the verification process to your

00:08:47,170 --> 00:08:51,339
browser and it has it contains the the

00:08:49,510 --> 00:08:55,029
identify it has something similar to the

00:08:51,339 --> 00:08:59,019
certificates but a new design that that

00:08:55,029 --> 00:09:01,149
stays within the browser the the flow of

00:08:59,019 --> 00:09:03,339
that or the weakness of that is that you

00:09:01,149 --> 00:09:06,339
can only do it as a user sitting next to

00:09:03,339 --> 00:09:09,579
your browser you cannot pass on a the

00:09:06,339 --> 00:09:14,440
task to an agent working on your behalf

00:09:09,579 --> 00:09:18,130
if you for instance have a if you want

00:09:14,440 --> 00:09:20,620
to tell one of your robots to figure out

00:09:18,130 --> 00:09:22,660
what is the cheapest price for flying to

00:09:20,620 --> 00:09:25,300
Hong Kong then you cannot have this

00:09:22,660 --> 00:09:27,579
robot acting on your behalf on your

00:09:25,300 --> 00:09:29,950
behalf for instance if you had a extra

00:09:27,579 --> 00:09:33,160
cheap tickets if you identify who you

00:09:29,950 --> 00:09:37,300
are you cannot pass it on to a different

00:09:33,160 --> 00:09:41,380
machine a different identity and web ID

00:09:37,300 --> 00:09:44,079
as is it's machine readable it's machine

00:09:41,380 --> 00:09:47,470
operated oh it's not tied to it must be

00:09:44,079 --> 00:09:50,790
a human operated may services run yes

00:09:47,470 --> 00:09:50,790
with the microphone

00:09:57,269 --> 00:10:02,739
so if I would like to test one of these

00:10:00,160 --> 00:10:05,999
technologies today are there any bigger

00:10:02,739 --> 00:10:05,999
sites using them

00:10:06,989 --> 00:10:14,559
there is only test size there's only

00:10:09,309 --> 00:10:16,299
demo sites using using web ID today but

00:10:14,559 --> 00:10:19,660
some of the demo sites is also

00:10:16,299 --> 00:10:21,910
functioning as open ID sites you can you

00:10:19,660 --> 00:10:24,939
can set up a web ID authentication which

00:10:21,910 --> 00:10:32,129
is then providing a service that is open

00:10:24,939 --> 00:10:34,509
ID open ID with its weakness of

00:10:32,129 --> 00:10:37,209
revealing too much information is a

00:10:34,509 --> 00:10:40,119
weaker form of authentication and then

00:10:37,209 --> 00:10:42,850
web ID but you can weaken your web ID

00:10:40,119 --> 00:10:44,739
service and have it also act as an open

00:10:42,850 --> 00:10:47,410
IT service if you like so if you want to

00:10:44,739 --> 00:10:49,059
interact with the larger world today and

00:10:47,410 --> 00:10:51,160
play with whatever can what can you do

00:10:49,059 --> 00:10:54,429
with you if I have a web ID then you can

00:10:51,160 --> 00:10:57,459
set up or you can use if you trust a an

00:10:54,429 --> 00:11:02,049
open ID service that authenticates using

00:10:57,459 --> 00:11:04,329
web ID I mean some look some web ID some

00:11:02,049 --> 00:11:06,610
open IDs the most open IDs I know of

00:11:04,329 --> 00:11:07,749
when you log into those you have to type

00:11:06,610 --> 00:11:10,329
in a password so you have to memorize

00:11:07,749 --> 00:11:12,759
the password if you imagine that they

00:11:10,329 --> 00:11:16,110
use a side of that instead of replacing

00:11:12,759 --> 00:11:18,939
the having to show a password with

00:11:16,110 --> 00:11:22,329
having to present a client-side

00:11:18,939 --> 00:11:26,049
certificate which it then verifies using

00:11:22,329 --> 00:11:27,819
your profile ID on running on your

00:11:26,049 --> 00:11:30,999
server so you can have you can chain

00:11:27,819 --> 00:11:33,399
load and open ID with web ID okay okay I

00:11:30,999 --> 00:11:36,220
was just asking because would be nice to

00:11:33,399 --> 00:11:38,829
see the usability with normal users so

00:11:36,220 --> 00:11:40,540
if I would send a few lines of

00:11:38,829 --> 00:11:42,490
instructions to few people with

00:11:40,540 --> 00:11:46,059
different platforms to see if they

00:11:42,490 --> 00:11:48,790
managed to log in ah yeah so that's why

00:11:46,059 --> 00:11:52,029
I was asking for actual real-life usage

00:11:48,790 --> 00:11:54,429
off of web ID or browser ID because I

00:11:52,029 --> 00:11:58,119
don't know either of those I have used

00:11:54,429 --> 00:11:59,860
open ID myself yeah the browser ID I

00:11:58,119 --> 00:12:02,589
haven't I haven't played with it myself

00:11:59,860 --> 00:12:05,049
I believe that it works in recent

00:12:02,589 --> 00:12:07,149
versions of Mozilla obviously is that

00:12:05,049 --> 00:12:09,890
that's the ones that driving this I'm

00:12:07,149 --> 00:12:14,269
not even sure if it if it exists in

00:12:09,890 --> 00:12:16,490
in chromium and others yet so so this in

00:12:14,269 --> 00:12:19,220
mind I just wonder if it's too early for

00:12:16,490 --> 00:12:22,070
Debian to start using this technology if

00:12:19,220 --> 00:12:24,890
it's not widely used or you think that

00:12:22,070 --> 00:12:30,680
by having Debian use it it could become

00:12:24,890 --> 00:12:34,490
more accepted what I think is that the

00:12:30,680 --> 00:12:36,019
way I see it is web ID is working now

00:12:34,490 --> 00:12:39,620
and has been working for quite some time

00:12:36,019 --> 00:12:42,380
because the the structure of web ID is

00:12:39,620 --> 00:12:47,560
that it's standardizing different use

00:12:42,380 --> 00:12:50,329
cases of existing certificate with TLS

00:12:47,560 --> 00:12:51,890
so there's no new invention in the

00:12:50,329 --> 00:12:53,690
technical parts of this it's already

00:12:51,890 --> 00:12:56,149
used in the browsers there are some

00:12:53,690 --> 00:12:57,500
weaknesses in the user experience of

00:12:56,149 --> 00:13:00,440
exception handling

00:12:57,500 --> 00:13:03,320
certificates and there are some works

00:13:00,440 --> 00:13:05,089
and some of some of the things that

00:13:03,320 --> 00:13:06,980
makes it more user friendly if you if

00:13:05,089 --> 00:13:09,560
you do some extra work today is that you

00:13:06,980 --> 00:13:12,110
sidestep a little bit and run a

00:13:09,560 --> 00:13:17,029
JavaScript based certificate generation

00:13:12,110 --> 00:13:18,740
that is security wise bad because you

00:13:17,029 --> 00:13:20,300
don't you then have a chunk of code that

00:13:18,740 --> 00:13:22,550
you don't really wear Phi because you

00:13:20,300 --> 00:13:24,290
loaded it from a web server yeah I think

00:13:22,550 --> 00:13:26,449
these are exactly the issues but yes

00:13:24,290 --> 00:13:28,339
I've never seen mobile users use

00:13:26,449 --> 00:13:31,250
client-side certificates with the

00:13:28,339 --> 00:13:34,940
browser's no they won't even recognize

00:13:31,250 --> 00:13:37,250
the term and I only seen people in

00:13:34,940 --> 00:13:39,649
companies using these on company laptops

00:13:37,250 --> 00:13:41,420
and they haven't installed them but the

00:13:39,649 --> 00:13:45,079
staff of the company has installed them

00:13:41,420 --> 00:13:49,579
so I wonder what sort of usability

00:13:45,079 --> 00:13:52,730
issues we are going to run into well the

00:13:49,579 --> 00:13:55,670
reason that happens is companies

00:13:52,730 --> 00:13:59,240
typically have some kind of CA and so

00:13:55,670 --> 00:14:00,829
the pKa is taken care of whereas if it's

00:13:59,240 --> 00:14:06,079
not a hierarchical organization that's

00:14:00,829 --> 00:14:11,449
that tends to be a problem okay there

00:14:06,079 --> 00:14:18,260
was a question on an IRC whether web ID

00:14:11,449 --> 00:14:20,720
is related to Oh off yeah no it is not

00:14:18,260 --> 00:14:22,490
oh oh of is

00:14:20,720 --> 00:14:25,640
[Music]

00:14:22,490 --> 00:14:28,910
I understand it is Oh F is tied to the

00:14:25,640 --> 00:14:36,100
open ID way of doing things

00:14:28,910 --> 00:14:36,100
web ID is independent from this okay

00:14:48,879 --> 00:14:55,059
some of the well this this question of

00:14:52,839 --> 00:14:59,649
whether it's it's it's usable right now

00:14:55,059 --> 00:15:02,919
it's this this let's just chicken and

00:14:59,649 --> 00:15:05,589
egg problem of web browsers don't really

00:15:02,919 --> 00:15:07,389
see the the relevancy of improving the

00:15:05,589 --> 00:15:09,009
client-side certificates because well

00:15:07,389 --> 00:15:10,959
it's dead in the water that's just not

00:15:09,009 --> 00:15:13,660
really used anymore but the point is

00:15:10,959 --> 00:15:16,079
that well it could be used if it is used

00:15:13,660 --> 00:15:18,429
in a different way than the hierarchical

00:15:16,079 --> 00:15:21,489
certification that it was intended for

00:15:18,429 --> 00:15:23,739
well it was promoted for for a long time

00:15:21,489 --> 00:15:26,139
but is it true that mobile browsers

00:15:23,739 --> 00:15:29,079
don't support client authentic client

00:15:26,139 --> 00:15:30,939
certificates not that as far as I know

00:15:29,079 --> 00:15:32,289
that would be news for me I don't I

00:15:30,939 --> 00:15:33,639
don't know I don't think that it that

00:15:32,289 --> 00:15:35,499
it's a case that they don't support

00:15:33,639 --> 00:15:38,289
client-side certificates I think that

00:15:35,499 --> 00:15:41,589
it's the case that they don't have a the

00:15:38,289 --> 00:15:45,069
kind of user interface for managing

00:15:41,589 --> 00:15:47,079
importing from outside maybe they don't

00:15:45,069 --> 00:15:48,369
have the external storage if you don't

00:15:47,079 --> 00:15:52,439
have a file system yet you cannot say

00:15:48,369 --> 00:15:54,429
open up and import this pkas 12 file

00:15:52,439 --> 00:15:56,259
because you don't have a file system to

00:15:54,429 --> 00:15:58,839
install it from so that might be the

00:15:56,259 --> 00:16:01,239
situation that it had cut some wings so

00:15:58,839 --> 00:16:07,479
you need to operate only within the

00:16:01,239 --> 00:16:09,879
browser okay so as I understand it that

00:16:07,479 --> 00:16:12,039
what is what is usable now and is

00:16:09,879 --> 00:16:15,399
claimed to actually even be user

00:16:12,039 --> 00:16:18,669
friendly now is to do it by loading Java

00:16:15,399 --> 00:16:25,029
scripts that then makes a shim over the

00:16:18,669 --> 00:16:28,359
things that the web browsers do not the

00:16:25,029 --> 00:16:30,699
web browser do not do elegantly yes and

00:16:28,359 --> 00:16:32,109
the weakness of that obviously is that

00:16:30,699 --> 00:16:33,819
well if you're doing security that you

00:16:32,109 --> 00:16:38,039
are loading off the internet then what

00:16:33,819 --> 00:16:42,669
secure is that is that so another

00:16:38,039 --> 00:16:46,749
stronger argument of a skepticism about

00:16:42,669 --> 00:16:49,689
about web body is that the test case is

00:16:46,749 --> 00:16:52,899
done now until now is test cases both

00:16:49,689 --> 00:16:56,549
about tied to this ontology called the

00:16:52,899 --> 00:17:00,639
the full friend of a friend which is

00:16:56,549 --> 00:17:02,190
which is exposing your information about

00:17:00,639 --> 00:17:05,670
your friendships

00:17:02,190 --> 00:17:07,530
publicly you didn't you don't need in

00:17:05,670 --> 00:17:09,030
principal you don't need to publish your

00:17:07,530 --> 00:17:11,130
information you could just share sarin

00:17:09,030 --> 00:17:12,360
in secret circles but that has not been

00:17:11,130 --> 00:17:14,339
practiced that has not been tested

00:17:12,360 --> 00:17:16,500
because that is more complex to do you

00:17:14,339 --> 00:17:18,390
need to run some interactive servers

00:17:16,500 --> 00:17:21,510
instead of static web pages you need to

00:17:18,390 --> 00:17:25,130
publish so it's more complex to set up a

00:17:21,510 --> 00:17:28,010
test environment for doing that and also

00:17:25,130 --> 00:17:30,810
when doing the actual verification

00:17:28,010 --> 00:17:33,480
triangle with web ID what has been

00:17:30,810 --> 00:17:35,130
tested the most is using what I've been

00:17:33,480 --> 00:17:40,740
talking about all the time also now this

00:17:35,130 --> 00:17:44,910
these certificates of TLS transport but

00:17:40,740 --> 00:17:47,610
really the web ID design don't need to

00:17:44,910 --> 00:17:50,810
use certificates it could use other

00:17:47,610 --> 00:17:56,580
means of ensuring that the transport is

00:17:50,810 --> 00:18:00,900
it's established say it safely so in the

00:17:56,580 --> 00:18:10,110
most recent draft of the webs of the web

00:18:00,900 --> 00:18:12,270
ID specifications yeah here no there's

00:18:10,110 --> 00:18:15,420
the web ID specification and then

00:18:12,270 --> 00:18:17,370
there's the recent draft of it in the

00:18:15,420 --> 00:18:19,860
recent draft they have split it up in

00:18:17,370 --> 00:18:22,800
two different specifications one called

00:18:19,860 --> 00:18:25,530
web ID and one called web body TLS so

00:18:22,800 --> 00:18:29,990
emphasize that well web ID itself need

00:18:25,530 --> 00:18:33,680
not use TLS for its establishing the

00:18:29,990 --> 00:18:35,850
secure exchange between these endpoints

00:18:33,680 --> 00:18:37,200
it's just the one that has been

00:18:35,850 --> 00:18:38,910
practiced the most it's not the one that

00:18:37,200 --> 00:18:42,030
has been tested the most there are other

00:18:38,910 --> 00:18:47,130
ways to do it one of them might be using

00:18:42,030 --> 00:18:49,760
tor so onion URLs the only thing that

00:18:47,130 --> 00:18:52,950
that the web ID that the core design

00:18:49,760 --> 00:18:56,340
requires is that it is using you our

00:18:52,950 --> 00:19:01,890
eyes so you can use different you are

00:18:56,340 --> 00:19:05,520
eyes than HTTP or HTTPS your eyes it

00:19:01,890 --> 00:19:08,250
could also use PGP your eye if you want

00:19:05,520 --> 00:19:10,860
to then you need to define that PGP UI

00:19:08,250 --> 00:19:13,860
and you need to exercise how to interact

00:19:10,860 --> 00:19:15,780
with these PDP your eyes but in

00:19:13,860 --> 00:19:19,620
principle there is no nothing

00:19:15,780 --> 00:19:22,260
in the longer term - - against having a

00:19:19,620 --> 00:19:24,270
different kind of security structure

00:19:22,260 --> 00:19:27,120
than the one which is tied to the domain

00:19:24,270 --> 00:19:30,960
name system that some team as being

00:19:27,120 --> 00:19:34,740
completely useless and floor and tied to

00:19:30,960 --> 00:19:37,740
this web ID sidesteps from the hierarchy

00:19:34,740 --> 00:19:39,870
of certificate issuing but it does not

00:19:37,740 --> 00:19:43,590
side step from it's tied to domain names

00:19:39,870 --> 00:19:47,070
in the web ID plus TLS implementation

00:19:43,590 --> 00:19:48,390
but that can also be avoided by other

00:19:47,070 --> 00:19:54,960
implementations although sub-weapons

00:19:48,390 --> 00:19:57,900
implementations and the TLS one so one

00:19:54,960 --> 00:20:00,060
of the one of the things that that I see

00:19:57,900 --> 00:20:04,290
could be relevant in Debian now is not

00:20:00,060 --> 00:20:07,050
to have Debian provide services that our

00:20:04,290 --> 00:20:11,100
mothers and our sisters and and and and

00:20:07,050 --> 00:20:14,130
friends can use similar to Open ID what

00:20:11,100 --> 00:20:15,930
I imagined that we could do is the some

00:20:14,130 --> 00:20:19,650
of the services that we now provide that

00:20:15,930 --> 00:20:22,740
we need held up access to inject a PGP

00:20:19,650 --> 00:20:27,810
key to issue a temporary or and a

00:20:22,740 --> 00:20:29,970
different single simple key phrase for a

00:20:27,810 --> 00:20:32,070
service instead of having a key phrase

00:20:29,970 --> 00:20:35,670
we can have it spit out as a certificate

00:20:32,070 --> 00:20:39,390
that we could use so that we could have

00:20:35,670 --> 00:20:43,080
our interactions with our services being

00:20:39,390 --> 00:20:46,110
possible to do with web services we

00:20:43,080 --> 00:20:49,050
could pass on to our agents individually

00:20:46,110 --> 00:20:52,830
without it having to being hard coding a

00:20:49,050 --> 00:20:56,730
simple number that is then used stored

00:20:52,830 --> 00:20:58,230
in clear text on our machines so we

00:20:56,730 --> 00:21:00,360
could start using these structures that

00:20:58,230 --> 00:21:03,750
are standardized and then on the back

00:21:00,360 --> 00:21:07,290
end we can use Semantic Web tools to to

00:21:03,750 --> 00:21:11,910
juggle with the data that we are

00:21:07,290 --> 00:21:14,370
fetching that way so but if most of the

00:21:11,910 --> 00:21:15,570
crowd here is more interested in hearing

00:21:14,370 --> 00:21:20,090
what this could be

00:21:15,570 --> 00:21:22,260
instead of discussing it then I don't

00:21:20,090 --> 00:21:24,800
this was not this is not what I had

00:21:22,260 --> 00:21:24,800
prepared for

00:21:39,770 --> 00:21:45,520
okay I can see that there's a lot of

00:21:41,360 --> 00:21:45,520
things filled in on the Gabby

00:22:04,110 --> 00:22:11,159
so one of one of the what are the

00:22:08,340 --> 00:22:14,279
benefits that I could see in in moving

00:22:11,159 --> 00:22:16,200
from this current LDAP bastes activation

00:22:14,279 --> 00:22:20,340
aware of having a an account on a

00:22:16,200 --> 00:22:23,519
service to using web ID is that we could

00:22:20,340 --> 00:22:25,409
decide that from the beginning we could

00:22:23,519 --> 00:22:27,000
we would bootstrap it with all of the

00:22:25,409 --> 00:22:29,820
Debian maintained Azure Debian

00:22:27,000 --> 00:22:32,730
developers that already have an account

00:22:29,820 --> 00:22:35,640
on our systems but it would be quite

00:22:32,730 --> 00:22:37,500
easy to then extend a network for

00:22:35,640 --> 00:22:41,250
instance some of the Debian 8 machines

00:22:37,500 --> 00:22:43,260
might want to say well we want to we

00:22:41,250 --> 00:22:44,880
want to trust and give access to all of

00:22:43,260 --> 00:22:47,490
the people that have an account on

00:22:44,880 --> 00:22:50,700
Debian and all of the people in this

00:22:47,490 --> 00:22:52,409
other circle that is some in some other

00:22:50,700 --> 00:22:56,549
way is bootstrapping and setting up

00:22:52,409 --> 00:22:58,200
their web ID authentication so you could

00:22:56,549 --> 00:23:00,210
have other you're gonna have you can

00:22:58,200 --> 00:23:01,980
join multiple networks in that way and

00:23:00,210 --> 00:23:05,279
that means that we could easily expand

00:23:01,980 --> 00:23:08,279
services to include more people it could

00:23:05,279 --> 00:23:11,490
be that one of our big derivatives is

00:23:08,279 --> 00:23:13,169
setting up web ID the similar way what

00:23:11,490 --> 00:23:14,220
Boudreaux is doing at the moment as I

00:23:13,169 --> 00:23:16,409
understand it is that they're running

00:23:14,220 --> 00:23:19,190
things on a centralized server attribute

00:23:16,409 --> 00:23:21,899
to where they authenticate against they

00:23:19,190 --> 00:23:24,059
identify based services but that is

00:23:21,899 --> 00:23:26,130
tight that is centralized and we cannot

00:23:24,059 --> 00:23:30,000
really collaborate with those and step

00:23:26,130 --> 00:23:31,919
except if we use maybe Olaf which means

00:23:30,000 --> 00:23:37,320
that then they are tracking every time

00:23:31,919 --> 00:23:40,340
we are doing things there's another

00:23:37,320 --> 00:23:44,370
question from from IRC or rather

00:23:40,340 --> 00:23:47,720
suggestion to check HTTP colon slash

00:23:44,370 --> 00:23:51,779
slash web ID Debian net slash as a start

00:23:47,720 --> 00:24:01,340
yes I have been there and that site just

00:23:51,779 --> 00:24:06,830
redirects to the to the wiki page okay

00:24:01,340 --> 00:24:09,690
which is introducing that a Debian

00:24:06,830 --> 00:24:11,909
Debian now has full profiles

00:24:09,690 --> 00:24:16,480
auto-generated for all Debian developers

00:24:11,909 --> 00:24:18,400
all packets maintain us both for

00:24:16,480 --> 00:24:20,410
people in Debian and for people that are

00:24:18,400 --> 00:24:24,520
not don't have an account in Debian I

00:24:20,410 --> 00:24:26,530
have this odd situation myself that the

00:24:24,520 --> 00:24:28,540
way it's generated is from your email

00:24:26,530 --> 00:24:32,320
address and I don't use my Debian email

00:24:28,540 --> 00:24:33,910
address so I have no full a profile for

00:24:32,320 --> 00:24:35,919
my account in Debian I only have a full

00:24:33,910 --> 00:24:41,860
profile for as being I'm treating it

00:24:35,919 --> 00:24:44,559
treated as an external person so so an

00:24:41,860 --> 00:24:46,510
example of what you can do now it's just

00:24:44,559 --> 00:24:48,640
not web ID fully this is not there's no

00:24:46,510 --> 00:24:51,270
authentication service anywhere this is

00:24:48,640 --> 00:24:56,200
only the part of having some profile

00:24:51,270 --> 00:24:57,970
that can then be the the third thing

00:24:56,200 --> 00:25:00,040
that you reference against as you make

00:24:57,970 --> 00:25:02,049
the look up against if you come come

00:25:00,040 --> 00:25:03,940
with your certificate and say well I am

00:25:02,049 --> 00:25:06,130
this person you can just go here and

00:25:03,940 --> 00:25:09,130
verify that it's true then it's the

00:25:06,130 --> 00:25:11,260
third power Third Point the little funny

00:25:09,130 --> 00:25:14,230
thing about that is well the Third Point

00:25:11,260 --> 00:25:17,530
is supposed to be in your control and

00:25:14,230 --> 00:25:19,000
this Third Point is in Debian control

00:25:17,530 --> 00:25:24,490
this is a dip in service generating

00:25:19,000 --> 00:25:25,780
profiles so something that works on a

00:25:24,490 --> 00:25:27,450
global scale or do you want to build

00:25:25,780 --> 00:25:30,090
something for Debian and sort of

00:25:27,450 --> 00:25:32,350
assorted trust at other organizations

00:25:30,090 --> 00:25:34,690
because then one thing you could do is

00:25:32,350 --> 00:25:39,480
Debian has take the Debian keyring which

00:25:34,690 --> 00:25:41,830
is strongly connected a paean hassle so

00:25:39,480 --> 00:25:46,110
you could use the key fingerprint as

00:25:41,830 --> 00:25:49,570
your web ID URL and then look that up

00:25:46,110 --> 00:25:53,440
and if it if the GPG key is sufficiently

00:25:49,570 --> 00:25:56,980
or authenticated so it's the right

00:25:53,440 --> 00:25:59,460
person something like that yeah whereby

00:25:56,980 --> 00:26:03,490
the Debian already has ways to

00:25:59,460 --> 00:26:04,780
authenticate Debian members maybe an

00:26:03,490 --> 00:26:07,360
account members you want to get rid of

00:26:04,780 --> 00:26:08,830
the central server but and using the

00:26:07,360 --> 00:26:11,679
keyring would do that because you could

00:26:08,830 --> 00:26:13,150
put the keyring on each machine so you

00:26:11,679 --> 00:26:14,410
wouldn't require trust relationships

00:26:13,150 --> 00:26:16,630
between the machines and you wouldn't

00:26:14,410 --> 00:26:20,470
even require active network connections

00:26:16,630 --> 00:26:23,320
between the machines how would I verify

00:26:20,470 --> 00:26:24,760
that it's the right person anybody could

00:26:23,320 --> 00:26:26,260
claim that they have the my email

00:26:24,760 --> 00:26:28,750
address and you could look up at that

00:26:26,260 --> 00:26:30,279
it's the key so then I would be using

00:26:28,750 --> 00:26:36,789
signed emails

00:26:30,279 --> 00:26:38,799
to verification Oh what I mean okay let

00:26:36,789 --> 00:26:43,659
me let me try to answer your question

00:26:38,799 --> 00:26:48,070
stead of bouncing it back and as I see

00:26:43,659 --> 00:26:50,799
it it makes sense to have debian provide

00:26:48,070 --> 00:26:53,229
a service for the same people that it

00:26:50,799 --> 00:26:56,710
already provides other services for the

00:26:53,229 --> 00:26:58,090
benefit of using web ID instead of using

00:26:56,710 --> 00:27:01,239
the current services the current

00:26:58,090 --> 00:27:04,509
mechanisms of authenticating it users is

00:27:01,239 --> 00:27:06,450
that this new service is a standardized

00:27:04,509 --> 00:27:10,269
format for service for decent sized

00:27:06,450 --> 00:27:14,559
authentication which means that a Debian

00:27:10,269 --> 00:27:17,710
+ Fedora service some third party or a

00:27:14,559 --> 00:27:20,679
debian service that is meant to be for

00:27:17,710 --> 00:27:22,450
Debian people and for fedora people can

00:27:20,679 --> 00:27:24,279
then say oh great we have this

00:27:22,450 --> 00:27:25,929
standardized way of doing things we

00:27:24,279 --> 00:27:28,179
don't want a copy of all your passwords

00:27:25,929 --> 00:27:30,700
to your logins and we also don't want to

00:27:28,179 --> 00:27:33,779
have a pipeline to to your DPG keys in

00:27:30,700 --> 00:27:35,589
fedora land we just want you to run this

00:27:33,779 --> 00:27:37,299
standardized service just as we are

00:27:35,589 --> 00:27:39,549
running a standardized service and then

00:27:37,299 --> 00:27:43,029
we can every time people log in it will

00:27:39,549 --> 00:27:45,309
resolve that it will verify it at our

00:27:43,029 --> 00:27:49,869
end or it will refer at your end because

00:27:45,309 --> 00:27:55,379
it's verified at each user's own end the

00:27:49,869 --> 00:27:59,529
thing is what has what Oba geeks has

00:27:55,379 --> 00:28:02,169
provided until now is a demo of it is

00:27:59,529 --> 00:28:05,859
possible to generate a profile for each

00:28:02,169 --> 00:28:08,349
user at the Debian server and a service

00:28:05,859 --> 00:28:11,799
as he's running but really what to make

00:28:08,349 --> 00:28:14,830
this really work I should not have my

00:28:11,799 --> 00:28:18,820
certificate point to his service because

00:28:14,830 --> 00:28:22,289
his service is no proof that I am me if

00:28:18,820 --> 00:28:27,369
I'm pointing to a server that I own

00:28:22,289 --> 00:28:29,409
then I prove that I am me so if I point

00:28:27,369 --> 00:28:33,429
to a server and the server certificate

00:28:29,409 --> 00:28:36,190
on my server is also tied to me then I

00:28:33,429 --> 00:28:38,289
have identified that then I approve in

00:28:36,190 --> 00:28:40,869
that the the identifier that is running

00:28:38,289 --> 00:28:42,710
around under some web browser is tied to

00:28:40,869 --> 00:28:45,140
some server

00:28:42,710 --> 00:28:47,360
the owner of the server so sure if my

00:28:45,140 --> 00:28:49,700
server is hacked but then it's the same

00:28:47,360 --> 00:28:52,010
thing as if I if I lose my key ring it's

00:28:49,700 --> 00:28:54,920
my key to lock myself in this the the

00:28:52,010 --> 00:28:57,380
the core idea of web ID is to separate

00:28:54,920 --> 00:29:00,020
to have the authentication process being

00:28:57,380 --> 00:29:02,930
multiple points instead of being

00:29:00,020 --> 00:29:04,130
everything contained within one point so

00:29:02,930 --> 00:29:07,850
you're not running around with a key

00:29:04,130 --> 00:29:09,680
that contains every valuable details for

00:29:07,850 --> 00:29:11,930
you to lock into a keyhole because you

00:29:09,680 --> 00:29:14,300
maybe don't trust the keyhole and it

00:29:11,930 --> 00:29:16,280
might be a complex thing to verify if

00:29:14,300 --> 00:29:18,800
the keyhole is trusted and if the key is

00:29:16,280 --> 00:29:20,720
trusted and if we trust to reach each

00:29:18,800 --> 00:29:22,900
other and verify each other so that's

00:29:20,720 --> 00:29:25,730
the way it's a chain loading of things

00:29:22,900 --> 00:29:28,610
the server that does the complex things

00:29:25,730 --> 00:29:29,960
you're running itself but you're running

00:29:28,610 --> 00:29:32,000
it somewhere else so you don't need to

00:29:29,960 --> 00:29:39,080
run around with all the complex stuff I

00:29:32,000 --> 00:29:42,040
said oh the topic of exploiting the new

00:29:39,080 --> 00:29:44,360
PG web of trust and I'm sorry if you

00:29:42,040 --> 00:29:50,810
covered this before

00:29:44,360 --> 00:29:54,980
possibly one of the criticisms that I

00:29:50,810 --> 00:30:00,860
read when our party idea was discussed

00:29:54,980 --> 00:30:06,590
is that this reliance on an existing say

00:30:00,860 --> 00:30:10,400
infrastructure and I'm aware that there

00:30:06,590 --> 00:30:15,040
was some work from the new PG maintainer

00:30:10,400 --> 00:30:18,440
swen new PG to started out of generating

00:30:15,040 --> 00:30:21,140
x.509 certificates from the same key

00:30:18,440 --> 00:30:24,800
pairs that you used for the g PG stuff

00:30:21,140 --> 00:30:27,800
so I wanted to know if anybody is knows

00:30:24,800 --> 00:30:31,870
of that of the status of this and if

00:30:27,800 --> 00:30:35,090
this is so a thing that we could use for

00:30:31,870 --> 00:30:39,110
migrating people or not migrating but

00:30:35,090 --> 00:30:42,870
but exploiting the web of trust and

00:30:39,110 --> 00:30:48,440
creating x.509 certificates for a web ID

00:30:42,870 --> 00:30:48,440
does anybody know about this possibly

00:30:49,040 --> 00:30:57,450
well okay do I parcel things or is that

00:30:54,480 --> 00:31:02,460
some what direction that monkeys fee is

00:30:57,450 --> 00:31:07,590
going doesn't it works also based on

00:31:02,460 --> 00:31:09,710
canopy chi-chi's and someone might kill

00:31:07,590 --> 00:31:11,970
me because I don't really really

00:31:09,710 --> 00:31:14,680
understand monkeys fear but as I

00:31:11,970 --> 00:31:16,100
understand monkeys fear it is about

00:31:14,680 --> 00:31:18,420
[Music]

00:31:16,100 --> 00:31:22,110
bridging between different technologies

00:31:18,420 --> 00:31:24,330
different protocols so when when

00:31:22,110 --> 00:31:25,850
certificates are here etiquette

00:31:24,330 --> 00:31:28,560
certificate certification is

00:31:25,850 --> 00:31:30,630
fundamentally broken we don't trust the

00:31:28,560 --> 00:31:35,780
kind of trust that they want us to trust

00:31:30,630 --> 00:31:40,770
then monkeys fear is bypassing that by a

00:31:35,780 --> 00:31:43,890
by linking up to the PDP web of trust so

00:31:40,770 --> 00:31:47,310
if using the PDP whoever trusts to

00:31:43,890 --> 00:31:49,110
verify certificates the issuer the one

00:31:47,310 --> 00:31:50,610
in control of the certificate might have

00:31:49,110 --> 00:31:52,590
gotten it so from somewhere it doesn't

00:31:50,610 --> 00:31:55,290
matter because there was this same

00:31:52,590 --> 00:31:58,740
person signs the certificate with a PGP

00:31:55,290 --> 00:32:01,140
key and then all of the users then look

00:31:58,740 --> 00:32:03,420
up in PDP is it a person in the PDP

00:32:01,140 --> 00:32:06,690
where the trust that I trust myself that

00:32:03,420 --> 00:32:19,620
has signed this certificate so it's hard

00:32:06,690 --> 00:32:21,960
steps this using PDP monkey sphere is

00:32:19,620 --> 00:32:24,300
rather about presenting a human friendly

00:32:21,960 --> 00:32:31,560
and human meaningful face to GPG key

00:32:24,300 --> 00:32:33,470
signatures and so on thank you could you

00:32:31,560 --> 00:32:36,060
send them back for me

00:32:33,470 --> 00:32:39,390
thank you I really liked the idea of my

00:32:36,060 --> 00:32:43,080
body turn out but there are problems the

00:32:39,390 --> 00:32:45,860
rollout to the user how are you expect

00:32:43,080 --> 00:32:50,220
do you expect this to happen

00:32:45,860 --> 00:32:52,140
sure we all our tests we all probably

00:32:50,220 --> 00:32:55,230
run our own service at home

00:32:52,140 --> 00:32:58,620
to set the rap ID part for ourselves up

00:32:55,230 --> 00:33:01,500
but as it goes to non-cash people most

00:32:58,620 --> 00:33:03,000
of them don't have any service hanging

00:33:01,500 --> 00:33:06,059
around would it be acceptable for the

00:33:03,000 --> 00:33:09,200
principle for a concept of web ID to

00:33:06,059 --> 00:33:13,040
have little clusters of friends that

00:33:09,200 --> 00:33:17,480
everyone has a techie in his and his

00:33:13,040 --> 00:33:22,170
area of friends so that one does like

00:33:17,480 --> 00:33:26,160
one stores the web IDs of a group of

00:33:22,170 --> 00:33:29,370
people well that it's the same as asking

00:33:26,160 --> 00:33:32,370
me is it acceptable for four teenagers

00:33:29,370 --> 00:33:35,309
that their parents have a key to their

00:33:32,370 --> 00:33:37,950
retirees well that depends on each

00:33:35,309 --> 00:33:39,770
circle of the policies are different

00:33:37,950 --> 00:33:44,460
what I'm what I just wanted to emphasize

00:33:39,770 --> 00:33:48,530
was that yes these security issues that

00:33:44,460 --> 00:33:53,220
I have heard being raised is possible to

00:33:48,530 --> 00:33:55,650
to avoid the so but that makes things

00:33:53,220 --> 00:33:59,250
more complicated it might mean if you're

00:33:55,650 --> 00:34:01,500
not using DNS then you are not using DNS

00:33:59,250 --> 00:34:04,470
and that makes things not very user

00:34:01,500 --> 00:34:07,350
friendly for a long time forward because

00:34:04,470 --> 00:34:09,359
then you need to have builds tour into

00:34:07,350 --> 00:34:09,750
your web browser and that is a different

00:34:09,359 --> 00:34:12,149
task

00:34:09,750 --> 00:34:14,909
but that's not saying that's not an

00:34:12,149 --> 00:34:17,460
argument to say that well web ID is not

00:34:14,909 --> 00:34:21,090
user friendly no web ID if you insist

00:34:17,460 --> 00:34:23,520
that it must reimplemented web that as

00:34:21,090 --> 00:34:28,230
we know it then it is not user friendly

00:34:23,520 --> 00:34:31,560
yet so so so similarly what is what has

00:34:28,230 --> 00:34:36,720
been tested and and played with until

00:34:31,560 --> 00:34:39,960
now is web ID using TLS and TLS has some

00:34:36,720 --> 00:34:42,540
quirks in its user friendliness that is

00:34:39,960 --> 00:34:44,700
currently worked around by running some

00:34:42,540 --> 00:34:47,609
java scripts all of this makes it less

00:34:44,700 --> 00:34:49,710
and less secure meaning we should all

00:34:47,609 --> 00:34:52,050
drop web ID and use Facebook as

00:34:49,710 --> 00:34:53,820
authentication mechanism because that is

00:34:52,050 --> 00:34:56,429
 user friendly everybody has a

00:34:53,820 --> 00:34:58,560
Facebook ID anyway so we just all of us

00:34:56,429 --> 00:35:00,900
log in there that I mean I'm not joking

00:34:58,560 --> 00:35:03,090
here I'm saying that is what you the

00:35:00,900 --> 00:35:05,700
people are doing now and I've done for

00:35:03,090 --> 00:35:06,090
many years not many couple of years at

00:35:05,700 --> 00:35:09,510
least

00:35:06,090 --> 00:35:11,400
I mean independent service is not tied

00:35:09,510 --> 00:35:14,400
to Facebook are using Facebook as

00:35:11,400 --> 00:35:18,540
identifiers as authentication mechanism

00:35:14,400 --> 00:35:19,920
which is completely insane so compared

00:35:18,540 --> 00:35:22,860
to that it is much better that I

00:35:19,920 --> 00:35:24,690
personally set up some mechanism that

00:35:22,860 --> 00:35:27,150
people can offload some JavaScript they

00:35:24,690 --> 00:35:29,730
don't know about so that they can

00:35:27,150 --> 00:35:31,590
magically have some access because

00:35:29,730 --> 00:35:34,620
that's what they care about let's use of

00:35:31,590 --> 00:35:36,510
friendliness is user friendliness is not

00:35:34,620 --> 00:35:37,500
caring about the security not caring

00:35:36,510 --> 00:35:39,300
about what's going on

00:35:37,500 --> 00:35:42,600
I just want my access to my

00:35:39,300 --> 00:35:44,760
thing whatever it is and looking from

00:35:42,600 --> 00:35:47,220
that perspective it's better that I set

00:35:44,760 --> 00:35:48,780
up a service or uber geeks who are

00:35:47,220 --> 00:35:51,240
already set up a service for Debian

00:35:48,780 --> 00:35:54,390
people that's much much better than they

00:35:51,240 --> 00:35:55,350
being using Facebook now so we're

00:35:54,390 --> 00:35:57,000
talking about different kinds of

00:35:55,350 --> 00:35:58,440
situation here if you're talking about

00:35:57,000 --> 00:36:00,900
the use of friendliness you're not

00:35:58,440 --> 00:36:03,150
talking about Debian developers if

00:36:00,900 --> 00:36:05,880
you're talking about security you're not

00:36:03,150 --> 00:36:09,050
talking about you're not talking about

00:36:05,880 --> 00:36:12,330
the need for independence I mean so

00:36:09,050 --> 00:36:15,420
Debian developers trusts Debian to some

00:36:12,330 --> 00:36:18,180
extent already we are running all of the

00:36:15,420 --> 00:36:20,460
code via Debian so we should trust

00:36:18,180 --> 00:36:22,410
Debian so we don't have the same kind of

00:36:20,460 --> 00:36:26,520
trust issue with the service running at

00:36:22,410 --> 00:36:28,920
Debian but if you are judging web ID as

00:36:26,520 --> 00:36:31,050
a technology then it's very interesting

00:36:28,920 --> 00:36:32,910
to look at is it possible to make it

00:36:31,050 --> 00:36:35,640
more user friendly is it possible to

00:36:32,910 --> 00:36:38,850
make it more secure if both things are

00:36:35,640 --> 00:36:41,460
possible then those things combined

00:36:38,850 --> 00:36:44,400
might also be possible over time if we

00:36:41,460 --> 00:36:47,340
develop the things to do it both things

00:36:44,400 --> 00:36:50,190
are not medically done over time and we

00:36:47,340 --> 00:36:52,380
need to work towards that but but as I

00:36:50,190 --> 00:36:53,400
see that you can kill web web by deeper

00:36:52,380 --> 00:36:55,910
saying it's not user friendly you can

00:36:53,400 --> 00:36:58,260
kill it by saying it's not secure enough

00:36:55,910 --> 00:36:59,670
but both of them is like then you're not

00:36:58,260 --> 00:37:03,360
looking at web are you are looking at

00:36:59,670 --> 00:37:07,050
web IT as its implemented in a buggy way

00:37:03,360 --> 00:37:07,980
using the current world bugginess so

00:37:07,050 --> 00:37:09,990
it's the current world that it's

00:37:07,980 --> 00:37:12,680
probably it's not web ID in principle it

00:37:09,990 --> 00:37:12,680
does that make sense

00:37:15,640 --> 00:37:20,180
there's another question

00:37:17,660 --> 00:37:23,830
oh but people want to see what would be

00:37:20,180 --> 00:37:23,830
the follow-up for this both discussion

00:37:25,630 --> 00:37:32,450
Oba Keeks has already implemented some

00:37:29,300 --> 00:37:34,300
steps he's asking or oboe kicks is

00:37:32,450 --> 00:37:40,010
asking over Geeks is ask haha

00:37:34,300 --> 00:37:45,350
 well I can hello oppa geeks that's

00:37:40,010 --> 00:37:48,470
for you to decide now there's some

00:37:45,350 --> 00:37:51,200
people jotting down what we're talking

00:37:48,470 --> 00:37:53,780
about here I hope that could be helpful

00:37:51,200 --> 00:37:56,690
for oboe geeks and me at least and for

00:37:53,780 --> 00:37:59,890
anyone else who might not be scared by

00:37:56,690 --> 00:38:04,100
this but by being excited by this so far

00:37:59,890 --> 00:38:05,600
to try work further on putting the

00:38:04,100 --> 00:38:08,120
pieces together so that we can have some

00:38:05,600 --> 00:38:14,740
maybe more understandable

00:38:08,120 --> 00:38:14,740
proof-of-concept demo for use by Debian

00:38:15,220 --> 00:38:23,210
but Omega axis asking who's in charge of

00:38:18,830 --> 00:38:32,570
SSO dot Debian org if the PIA mater P is

00:38:23,210 --> 00:38:35,660
a DJ my judgement my my guess is that

00:38:32,570 --> 00:38:37,130
from the current stand of the dialogue

00:38:35,660 --> 00:38:42,230
that this discussion we have had in

00:38:37,130 --> 00:38:45,380
Debian de Ville DSA is not currently

00:38:42,230 --> 00:38:48,800
interested in activating any web ID on

00:38:45,380 --> 00:38:52,520
Debian systems because there has been

00:38:48,800 --> 00:38:55,010
raised some skepticism about the

00:38:52,520 --> 00:38:57,370
security and the and also the sanity of

00:38:55,010 --> 00:39:00,470
even playing with web ID at all because

00:38:57,370 --> 00:39:03,770
it has been argued that it is looping

00:39:00,470 --> 00:39:05,780
around TLS problems so like even if you

00:39:03,770 --> 00:39:06,950
start out with it with the problems and

00:39:05,780 --> 00:39:09,770
then you try to solve it then you're

00:39:06,950 --> 00:39:14,260
ending up with the server side TLS still

00:39:09,770 --> 00:39:18,710
being needing the hierarchical trusts I

00:39:14,260 --> 00:39:24,370
was bouncing those that's criticism to

00:39:18,710 --> 00:39:27,380
the developers at the w3c dog and was

00:39:24,370 --> 00:39:28,220
encouraging them to respond in Debian

00:39:27,380 --> 00:39:30,410
because

00:39:28,220 --> 00:39:33,920
doesn't need any authentication - I mean

00:39:30,410 --> 00:39:36,109
any subscription supposed to Debian

00:39:33,920 --> 00:39:40,630
develop but unfortunately none of them

00:39:36,109 --> 00:39:42,710
didn't do that they brought very long

00:39:40,630 --> 00:39:44,930
arguments back and forth about why this

00:39:42,710 --> 00:39:48,740
is not the case and the Debian has

00:39:44,930 --> 00:39:51,740
misunderstood completely and but they

00:39:48,740 --> 00:39:53,930
are the people in developing this way

00:39:51,740 --> 00:39:59,180
buddy is also some of them philosophers

00:39:53,930 --> 00:40:02,570
and they are complex to digest at least

00:39:59,180 --> 00:40:04,910
for me so what I was hoping for was that

00:40:02,570 --> 00:40:07,490
they would like condensing their

00:40:04,910 --> 00:40:09,380
argument why way buddy is just perfect

00:40:07,490 --> 00:40:11,270
and then they could throw that at Debian

00:40:09,380 --> 00:40:14,420
and we could have a continued discussion

00:40:11,270 --> 00:40:17,349
in Debian develop so at the moment the

00:40:14,420 --> 00:40:20,840
status right now for Debian as a as a

00:40:17,349 --> 00:40:24,849
and the larger scale and DSA is as I

00:40:20,840 --> 00:40:30,730
feel is that well is it's unsolved if

00:40:24,849 --> 00:40:30,730
web ID is trustworthy and insane to do

00:40:31,330 --> 00:40:39,410
it's also linked from the from the wiki

00:40:35,240 --> 00:40:43,460
page when you go to web ID Debian net

00:40:39,410 --> 00:40:49,000
the web ID Debian net has a link to the

00:40:43,460 --> 00:40:49,000
wiki page the wiki page has a link to

00:40:50,680 --> 00:40:55,190
what's supposed to have a link to the

00:40:52,790 --> 00:41:00,349
email also email that no it doesn't i

00:40:55,190 --> 00:41:07,160
remember wrongly this session has a link

00:41:00,349 --> 00:41:09,920
to the threat and debian devil the

00:41:07,160 --> 00:41:11,900
threat on debian well was was some one

00:41:09,920 --> 00:41:14,030
way I think maybe it was me mentioning

00:41:11,900 --> 00:41:16,070
web party what about we're body and over

00:41:14,030 --> 00:41:18,589
gig says well we already have a sort of

00:41:16,070 --> 00:41:22,640
web body we have foaf and then someone

00:41:18,589 --> 00:41:25,119
else says what is all this and then

00:41:22,640 --> 00:41:28,430
nobody could really answer this that's

00:41:25,119 --> 00:41:30,140
Russell Russell Berrie is coming with a

00:41:28,430 --> 00:41:31,880
lengthy one with that never heard about

00:41:30,140 --> 00:41:35,599
it before and now I looked at it and it

00:41:31,880 --> 00:41:38,420
it seems not good and then there's a

00:41:35,599 --> 00:41:40,099
thread about me trying to defend it not

00:41:38,420 --> 00:41:42,080
really understanding how to defend

00:41:40,099 --> 00:41:48,170
myself against Russ or burry

00:41:42,080 --> 00:41:49,970
and calling for help by DK DK T and T KT

00:41:48,170 --> 00:41:53,260
is saying yeah he agrees Lord

00:41:49,970 --> 00:41:53,260
damn so

00:42:28,400 --> 00:42:33,079
so someone has written here on the Gabby

00:42:31,519 --> 00:42:34,970
why don't we use distributed

00:42:33,079 --> 00:42:38,180
authentication like the web of trusts

00:42:34,970 --> 00:42:42,499
meaning the DPD the PT PT whoever trusts

00:42:38,180 --> 00:42:45,259
that we already have well that is what

00:42:42,499 --> 00:42:50,890
we're doing now so to speak in that we

00:42:45,259 --> 00:42:54,200
are we have the LDAP service that is

00:42:50,890 --> 00:42:56,059
well we're doing it some ways now and

00:42:54,200 --> 00:42:59,119
yes we could do it in other ways one way

00:42:56,059 --> 00:43:00,039
could do would be to to link this to

00:42:59,119 --> 00:43:02,329
Maggie sphere

00:43:00,039 --> 00:43:04,700
maybe if I understand Branka Syria

00:43:02,329 --> 00:43:07,339
correctly but one of one of the powers

00:43:04,700 --> 00:43:11,720
of web ID is that it is designed around

00:43:07,339 --> 00:43:15,829
web web II objects meaning all of the

00:43:11,720 --> 00:43:18,650
things that is linked can be linked on

00:43:15,829 --> 00:43:21,470
the open data world which is the open

00:43:18,650 --> 00:43:23,990
world world whip public data and all the

00:43:21,470 --> 00:43:25,640
things that can be linked in similar

00:43:23,990 --> 00:43:27,710
fashion but in closed networks I'm

00:43:25,640 --> 00:43:29,960
emphasizing this other parts so that

00:43:27,710 --> 00:43:31,970
it's it's not only about if you publish

00:43:29,960 --> 00:43:34,339
all your data to the open world to the

00:43:31,970 --> 00:43:36,259
whole world then it is exciting it is

00:43:34,339 --> 00:43:38,359
also exciting if you lock all your

00:43:36,259 --> 00:43:39,410
things up but then you link and think

00:43:38,359 --> 00:43:41,749
the game is the things against each

00:43:39,410 --> 00:43:44,329
other the same way as the world wide web

00:43:41,749 --> 00:43:46,039
is doing things what I see as powerful

00:43:44,329 --> 00:43:49,730
in that is that there's a lot of tools

00:43:46,039 --> 00:43:53,480
to handle web resources there's less

00:43:49,730 --> 00:43:55,460
tools to handle custom resources and

00:43:53,480 --> 00:43:58,309
whatever data format that you invent

00:43:55,460 --> 00:44:01,309
yourself and then you tie it to GPT

00:43:58,309 --> 00:44:03,279
directly so yes it to me it could be

00:44:01,309 --> 00:44:06,769
very interesting to have web ID

00:44:03,279 --> 00:44:09,940
piggyback extend web ID with an web ID

00:44:06,769 --> 00:44:09,940
test the PTP

00:44:10,029 --> 00:44:15,529
authentication mechanism instead of a

00:44:11,900 --> 00:44:17,480
web ID TLS mechanism but saying that oh

00:44:15,529 --> 00:44:20,480
we don't even need web ID we could just

00:44:17,480 --> 00:44:22,880
use PGP directly that would be inventing

00:44:20,480 --> 00:44:24,529
something we hacked together which is

00:44:22,880 --> 00:44:27,470
not really scalable to other things so

00:44:24,529 --> 00:44:29,720
we couldn't reuse such a design across

00:44:27,470 --> 00:44:33,319
the board to fedora or any other free

00:44:29,720 --> 00:44:35,900
software or other project there's

00:44:33,319 --> 00:44:37,369
another question from IRC how can one

00:44:35,900 --> 00:44:41,000
experiment and use the metadata

00:44:37,369 --> 00:44:46,880
published at web ID Debian net

00:44:41,000 --> 00:44:50,930
oh we're okay mm-hmm could you repeat

00:44:46,880 --> 00:44:53,000
the question how can one experiment and

00:44:50,930 --> 00:44:59,930
use the metadata published at web ID'd

00:44:53,000 --> 00:45:02,840
Debian net if you follow there's there's

00:44:59,930 --> 00:45:06,290
a website web ID dot info that generally

00:45:02,840 --> 00:45:09,380
introduces to web ID and through that

00:45:06,290 --> 00:45:11,390
and yes it's confusing you can also dr.

00:45:09,380 --> 00:45:13,670
go or Google or whatever you prefer for

00:45:11,390 --> 00:45:16,220
web ID and some of the information there

00:45:13,670 --> 00:45:20,570
but web ID dot info and then follow that

00:45:16,220 --> 00:45:22,760
to some of the example pages some of the

00:45:20,570 --> 00:45:24,470
more reason to example pages that is

00:45:22,760 --> 00:45:28,190
still working

00:45:24,470 --> 00:45:30,590
then the places where it says oh and now

00:45:28,190 --> 00:45:33,290
you should use your so file then you can

00:45:30,590 --> 00:45:35,780
actually point to this page what is

00:45:33,290 --> 00:45:38,000
called web ID Debian it really

00:45:35,780 --> 00:45:40,880
essentially now is what others call a

00:45:38,000 --> 00:45:43,849
full profile web ID is the whole

00:45:40,880 --> 00:45:46,490
triangle the whole process protocol to

00:45:43,849 --> 00:45:49,130
exchange data where what both profiles

00:45:46,490 --> 00:45:51,410
is one key element and what is produced

00:45:49,130 --> 00:45:54,530
now is both profiles for all Debian

00:45:51,410 --> 00:45:56,900
developers gathering the data that is

00:45:54,530 --> 00:46:00,200
already public and expressing it machine

00:45:56,900 --> 00:46:03,950
readable grouped by each identifier each

00:46:00,200 --> 00:46:06,230
eye each person so every time that in

00:46:03,950 --> 00:46:07,910
whereby the context that it says oh now

00:46:06,230 --> 00:46:11,089
you should use you a full profile you

00:46:07,910 --> 00:46:13,609
don't need to write one yourself from

00:46:11,089 --> 00:46:20,660
scratch you can take this profile and

00:46:13,609 --> 00:46:27,290
didn't start out from that one a we are

00:46:20,660 --> 00:46:31,040
Oh time or okay oh okay thanks a lot for

00:46:27,290 --> 00:46:33,770
for joining and for your patience here I

00:46:31,040 --> 00:46:35,960
was I'm sorry I didn't prepare

00:46:33,770 --> 00:46:40,310
presentation about this so it was a

00:46:35,960 --> 00:46:43,550
little a little faster here but that's

00:46:40,310 --> 00:46:46,760
the copy now I believe that me or over

00:46:43,550 --> 00:46:49,400
geeks will try to look through the gobby

00:46:46,760 --> 00:46:51,230
and then post an email to I guess step

00:46:49,400 --> 00:46:53,570
in the well or wherever the other threat

00:46:51,230 --> 00:46:53,850
was also going on and then we'll see

00:46:53,570 --> 00:46:56,390
what

00:46:53,850 --> 00:47:01,820
comes out of this

00:46:56,390 --> 00:47:01,820

YouTube URL: https://www.youtube.com/watch?v=cv_G0O3C7iU


