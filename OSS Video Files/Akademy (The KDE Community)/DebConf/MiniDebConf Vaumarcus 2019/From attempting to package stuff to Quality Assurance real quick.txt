Title: From attempting to package stuff to Quality Assurance real quick
Publication date: 2020-02-24
Playlist: MiniDebConf Vaumarcus 2019
Description: 
	by Pierre-Elliott BÃ©cue

At: MiniDebConf Vaumarcus 2019
https://wiki.debian.org/DebianEvents/ch/2019/Vaumarcus

I started to contribute to the project with the desire to get mailman3 in the archive. Then, I became hooked to Quality Assurance and Team Packaging (to me it's part of a QA effort to do Team Packaging). I'll try to show why but mostly I'll try to emphasize why we should all care about it.

Room: main
Scheduled start: 2019-10-26 15:45:00
Captions: 
	00:00:04,580 --> 00:00:10,970
oh hi so actually it's it's a

00:00:07,820 --> 00:00:15,440
presentation I wanted to entitle my life

00:00:10,970 --> 00:00:17,930
but it's quite kind of self-centered so

00:00:15,440 --> 00:00:20,090
I decided to call it that way so the

00:00:17,930 --> 00:00:23,599
main idea is to tell about how I came

00:00:20,090 --> 00:00:27,680
into debian and what interests I found

00:00:23,599 --> 00:00:29,900
in the project first of all I will speak

00:00:27,680 --> 00:00:34,870
a little about myself so I'm quite new

00:00:29,900 --> 00:00:38,329
to the project I'm system and network

00:00:34,870 --> 00:00:40,730
engineer / architects at NC which is the

00:00:38,329 --> 00:00:42,559
French national authority regarding IT

00:00:40,730 --> 00:00:43,640
security in the in the public

00:00:42,559 --> 00:00:48,289
infrastructures

00:00:43,640 --> 00:00:51,320
I became a developer one year ago in

00:00:48,289 --> 00:00:56,059
October 2018 before that I was a

00:00:51,320 --> 00:00:58,730
maintainer for less than a year and i'm

00:00:56,059 --> 00:01:02,539
a contributor since i don't even really

00:00:58,730 --> 00:01:04,309
know when and before i was a user and

00:01:02,539 --> 00:01:08,420
I'll come to that right now

00:01:04,309 --> 00:01:12,200
so how I came to Debian when I arrived

00:01:08,420 --> 00:01:14,210
at when SK I entered into a non-profit

00:01:12,200 --> 00:01:17,510
association which is called crass and

00:01:14,210 --> 00:01:20,360
which provides network to around a

00:01:17,510 --> 00:01:22,850
thousand and three hundred users this

00:01:20,360 --> 00:01:26,120
photo is actually perfectly non accurate

00:01:22,850 --> 00:01:29,450
but it's it's it's really a technical

00:01:26,120 --> 00:01:35,750
loop place for France it was at least

00:01:29,450 --> 00:01:38,690
now we have better places and so it was

00:01:35,750 --> 00:01:42,350
a spring morning in national this one is

00:01:38,690 --> 00:01:44,300
not accurate ever and I was like okay I

00:01:42,350 --> 00:01:46,610
should do something in the Associated

00:01:44,300 --> 00:01:50,720
life because my stories are quite nice

00:01:46,610 --> 00:01:52,220
but I want to do other things and if I

00:01:50,720 --> 00:01:55,370
remove the trolling part when I came to

00:01:52,220 --> 00:01:58,490
cross there's a lot of things to do

00:01:55,370 --> 00:02:02,060
first thing is to exchange with all

00:01:58,490 --> 00:02:05,090
subscribers or members to help them to

00:02:02,060 --> 00:02:08,140
solve their internet issues but there is

00:02:05,090 --> 00:02:11,540
also a big technical infrastructure and

00:02:08,140 --> 00:02:14,330
currents in production uses exclusively

00:02:11,540 --> 00:02:16,940
Debian for vectorization we also use

00:02:14,330 --> 00:02:18,290
proxmox as the previous talk was

00:02:16,940 --> 00:02:21,140
speaking about

00:02:18,290 --> 00:02:25,939
but it's debian-based so we can say that

00:02:21,140 --> 00:02:27,739
we only use Debian right now and many

00:02:25,939 --> 00:02:30,859
members of grants become Debian

00:02:27,739 --> 00:02:33,019
developers at some point in the life so

00:02:30,859 --> 00:02:36,349
various nuclei which was actually here

00:02:33,019 --> 00:02:40,239
and is the guy who gave me interest to

00:02:36,349 --> 00:02:44,150
the project so I couldn't not drop him

00:02:40,239 --> 00:02:46,040
and many other supers but I will speak

00:02:44,150 --> 00:02:48,109
about van stomm Briana and Stefan only

00:02:46,040 --> 00:02:51,200
because they also gave me some interest

00:02:48,109 --> 00:02:53,269
to specific topics Stefan is the first

00:02:51,200 --> 00:02:55,939
one we introduced me to packaging when I

00:02:53,269 --> 00:02:57,799
saw the first Debian rules file of my

00:02:55,939 --> 00:02:58,760
life I was like I don't want to live in

00:02:57,799 --> 00:03:01,310
this planet anymore

00:02:58,760 --> 00:03:06,099
but since then I came back and right now

00:03:01,310 --> 00:03:08,870
I contribute to make people feel awful

00:03:06,099 --> 00:03:15,470
yeah you welcome I'm really happy with

00:03:08,870 --> 00:03:16,939
that this organization created in in my

00:03:15,470 --> 00:03:19,189
opinion an incentive for me to

00:03:16,939 --> 00:03:22,159
contribute to Debian it took me some

00:03:19,189 --> 00:03:24,319
time I wanted to understand well the way

00:03:22,159 --> 00:03:26,510
the user space was working to know a

00:03:24,319 --> 00:03:29,120
little about the ecosystem before trying

00:03:26,510 --> 00:03:32,540
to dive in and it took me some time

00:03:29,120 --> 00:03:35,870
actually I arrived at cons in 2010 and I

00:03:32,540 --> 00:03:39,079
think the first time I tried to backport

00:03:35,870 --> 00:03:43,060
something for all local mirror it was we

00:03:39,079 --> 00:03:45,319
were already in 2012 so two years later

00:03:43,060 --> 00:03:48,079
one of the things I tried to do at the

00:03:45,319 --> 00:03:49,579
beginning was reporting bugs I realized

00:03:48,079 --> 00:03:52,879
that it's not as simple as I thought

00:03:49,579 --> 00:03:54,919
because as an in you do as a user you

00:03:52,879 --> 00:03:56,659
can say this thing doesn't work but it's

00:03:54,919 --> 00:03:59,090
not really useful if you doesn't if you

00:03:56,659 --> 00:04:02,030
don't provide a lot of insight to the

00:03:59,090 --> 00:04:02,689
maintainer to help him find out what is

00:04:02,030 --> 00:04:05,959
the real issue

00:04:02,689 --> 00:04:08,269
so actually reporting bugs is is a place

00:04:05,959 --> 00:04:10,489
to stop many people find not really

00:04:08,269 --> 00:04:12,560
interesting but it's quite the center of

00:04:10,489 --> 00:04:14,540
the activity when you are Anand user and

00:04:12,560 --> 00:04:16,579
you want to give feedback to develop to

00:04:14,540 --> 00:04:18,409
the developers I think I did that for

00:04:16,579 --> 00:04:20,269
two or three years before actually

00:04:18,409 --> 00:04:22,909
submitting a real contribution to the

00:04:20,269 --> 00:04:26,000
project in sense of packaging or fixing

00:04:22,909 --> 00:04:28,039
bugs of his eyelids and I was also doing

00:04:26,000 --> 00:04:30,560
tweaking some packages also for Krantz

00:04:28,039 --> 00:04:32,030
and it was really an interesting

00:04:30,560 --> 00:04:34,250
activity but

00:04:32,030 --> 00:04:37,070
it also forced me to learn about kilts

00:04:34,250 --> 00:04:39,770
and the way we include patches in the

00:04:37,070 --> 00:04:44,770
packages and I must admit that at the

00:04:39,770 --> 00:04:48,110
beginning is it's kind of disturbing in

00:04:44,770 --> 00:04:50,780
2015 as a mailman user I realized that

00:04:48,110 --> 00:04:53,450
men men free was coming out of a box it

00:04:50,780 --> 00:04:56,000
was really nice to see that later I

00:04:53,450 --> 00:04:59,510
realized that willing to package it was

00:04:56,000 --> 00:05:01,900
kind of a big thing for a first real

00:04:59,510 --> 00:05:05,150
contribution to the project but still I

00:05:01,900 --> 00:05:07,820
managed to do it so I'm happy with that

00:05:05,150 --> 00:05:11,480
I send first emails to ask from for

00:05:07,820 --> 00:05:15,860
advices people to who would be motivated

00:05:11,480 --> 00:05:19,780
to help me at least to review my work in

00:05:15,860 --> 00:05:23,060
September 2015 it took me some time to

00:05:19,780 --> 00:05:25,970
succeed at making something but I

00:05:23,060 --> 00:05:31,670
finally six months later asked for some

00:05:25,970 --> 00:05:34,390
review in March 2016 and I will come to

00:05:31,670 --> 00:05:37,880
that turbit I had a lot of issues that

00:05:34,390 --> 00:05:41,300
reported a lot that we delayed a lot the

00:05:37,880 --> 00:05:45,620
the arrival of mailman into devient

00:05:41,300 --> 00:05:48,290
archive first I had troubles to get help

00:05:45,620 --> 00:05:50,300
on packaging the hyper kitties

00:05:48,290 --> 00:05:52,700
missing dependencies into the project I

00:05:50,300 --> 00:05:55,970
purchased the archival aquiver parts of

00:05:52,700 --> 00:05:59,780
mailman it's also a website which allows

00:05:55,970 --> 00:06:03,320
people to dive into these archives and

00:05:59,780 --> 00:06:05,570
mailman free was not ready to be in the

00:06:03,320 --> 00:06:08,720
archive because it was not compatible

00:06:05,570 --> 00:06:11,810
with Python 3.5 which was the actual

00:06:08,720 --> 00:06:17,710
version of testing when I tried to

00:06:11,810 --> 00:06:17,710
package it so actually it kind of

00:06:17,890 --> 00:06:24,440
delayed the thing for one year between

00:06:20,930 --> 00:06:26,750
late 2016 and when Yanis mother with who

00:06:24,440 --> 00:06:29,690
is not here right now but who helped me

00:06:26,750 --> 00:06:33,470
a lot arrived and offer me his help to

00:06:29,690 --> 00:06:37,430
try to finish the work what's good is

00:06:33,470 --> 00:06:40,340
that in 2017 finally man developers were

00:06:37,430 --> 00:06:45,889
able to release a Python 3.5 compatible

00:06:40,340 --> 00:06:48,319
version so roughly in October 2007

00:06:45,889 --> 00:06:50,689
we got the first version of the main man

00:06:48,319 --> 00:06:52,819
server into the archive and two months

00:06:50,689 --> 00:06:59,259
later the whole suite suit of man man

00:06:52,819 --> 00:07:01,699
was in the indie archive from that I

00:06:59,259 --> 00:07:04,550
discovered a very funny thing it's when

00:07:01,699 --> 00:07:06,620
it's written out ORM under you package

00:07:04,550 --> 00:07:09,289
in your GDP Oh page and was like okay

00:07:06,620 --> 00:07:12,460
what's happening right now and so I

00:07:09,289 --> 00:07:15,139
discovered the joy of having to help

00:07:12,460 --> 00:07:17,389
people maintaining the dependencies to

00:07:15,139 --> 00:07:18,949
fix the dependencies in order to not get

00:07:17,389 --> 00:07:24,439
your own package removed because a

00:07:18,949 --> 00:07:28,310
dependency was flowing and it made me

00:07:24,439 --> 00:07:32,960
come from 6 min 10 packages to actually

00:07:28,310 --> 00:07:35,150
46 mostly because of that some because

00:07:32,960 --> 00:07:36,710
of Alexa free but it's the next alt

00:07:35,150 --> 00:07:37,219
because you will have to suffer with me

00:07:36,710 --> 00:07:39,259
for an hour

00:07:37,219 --> 00:07:44,349
I'll speak you will listen and you will

00:07:39,259 --> 00:07:47,569
get bored so the idea is I joined the

00:07:44,349 --> 00:07:50,419
Piven Python teams both applications and

00:07:47,569 --> 00:07:56,349
model teams the idea was to contribute

00:07:50,419 --> 00:08:00,469
to fixing release critical and version

00:07:56,349 --> 00:08:02,599
missing Russian bugs for packages as for

00:08:00,469 --> 00:08:07,789
an example I had to work on Python blast

00:08:02,599 --> 00:08:09,409
I had to work on ai ai OS m CPD and

00:08:07,789 --> 00:08:11,479
things like that to to get these

00:08:09,409 --> 00:08:13,819
packages in a good shape so that main

00:08:11,479 --> 00:08:16,279
man doesn't get out of the archive

00:08:13,819 --> 00:08:18,080
because of these packages it's it's

00:08:16,279 --> 00:08:20,029
really a good incentive when you when

00:08:18,080 --> 00:08:21,889
you spend many a lot of time on a

00:08:20,029 --> 00:08:24,500
package it's really a good incentive to

00:08:21,889 --> 00:08:26,569
contribute maintaining all the things it

00:08:24,500 --> 00:08:33,050
depends on because you don't want to see

00:08:26,569 --> 00:08:35,449
you work getting outside and this led me

00:08:33,050 --> 00:08:39,890
to care about quality assurance why

00:08:35,449 --> 00:08:41,719
because in the real life quality

00:08:39,890 --> 00:08:46,029
assurance is the best way to make sure

00:08:41,719 --> 00:08:50,480
that a package has a good chance of not

00:08:46,029 --> 00:08:52,970
falling down unexpectedly the first tool

00:08:50,480 --> 00:08:56,120
I met his nation is probably the oldest

00:08:52,970 --> 00:08:59,139
QA tool in Debian I didn't find any

00:08:56,120 --> 00:09:02,339
older to the first

00:08:59,139 --> 00:09:06,309
thing in the mailing list is dating from

00:09:02,339 --> 00:09:08,859
1998 which is actually quite old it's

00:09:06,309 --> 00:09:12,009
essentially a policy checker tool it can

00:09:08,859 --> 00:09:14,410
do more stuff but its main usage usage

00:09:12,009 --> 00:09:16,989
and it's written in terms so I cannot

00:09:14,410 --> 00:09:19,119
comment on it because my skills in Perl

00:09:16,989 --> 00:09:22,389
are like okay I open this file I know

00:09:19,119 --> 00:09:24,549
it's power I want to close it but

00:09:22,389 --> 00:09:26,169
actually I really really really

00:09:24,549 --> 00:09:29,290
sympathize with people maintaining it

00:09:26,169 --> 00:09:33,309
because it's it's a nice tool it really

00:09:29,290 --> 00:09:35,919
helps to avoid some common mistakes that

00:09:33,309 --> 00:09:38,829
can explode in your heads later like oh

00:09:35,919 --> 00:09:41,350
I included some files in my usually

00:09:38,829 --> 00:09:43,689
Python directory which which are not

00:09:41,350 --> 00:09:49,149
Python files but that can mess with the

00:09:43,689 --> 00:09:51,399
library you packaged I tried to follow

00:09:49,149 --> 00:09:53,019
each and every advice I was finding in

00:09:51,399 --> 00:09:55,329
the package also reporting bugs when

00:09:53,019 --> 00:09:59,439
some issues were reported by lingshan

00:09:55,329 --> 00:10:01,389
which were not legitimate it's sometimes

00:09:59,439 --> 00:10:03,519
hard because sometimes following

00:10:01,389 --> 00:10:05,709
Vivian's policy is hard but it's a good

00:10:03,519 --> 00:10:08,769
thing because it helps to avoid some

00:10:05,709 --> 00:10:10,389
issues so please check your Lynch on

00:10:08,769 --> 00:10:13,089
outputs when you package something run

00:10:10,389 --> 00:10:15,579
engine it takes like less than a minute

00:10:13,089 --> 00:10:20,169
and it gives you some Intel about things

00:10:15,579 --> 00:10:21,939
that can be messy and don't know is it a

00:10:20,169 --> 00:10:23,470
to a solution to be pedantic you will

00:10:21,939 --> 00:10:27,429
you will feel like you are speaking to a

00:10:23,470 --> 00:10:28,660
real developer it's really nice the

00:10:27,429 --> 00:10:31,629
second thing I want to talk about is

00:10:28,660 --> 00:10:34,239
continuous integration I guess it's not

00:10:31,629 --> 00:10:35,889
new for anybody but the fact is that in

00:10:34,239 --> 00:10:38,169
Debian we have a nice continuous

00:10:35,889 --> 00:10:41,049
integration a fresh structure I guess it

00:10:38,169 --> 00:10:46,049
takes some time to maintain it I spoke a

00:10:41,049 --> 00:10:48,759
little with Antonio Tesoro about it many

00:10:46,049 --> 00:10:51,369
release critical bugs on the

00:10:48,759 --> 00:10:53,439
dependencies of Milman free where some

00:10:51,369 --> 00:10:55,089
things that I could have spotted with

00:10:53,439 --> 00:10:57,910
continuous integration properly

00:10:55,089 --> 00:10:59,919
implemented so quickly I was like ok I

00:10:57,910 --> 00:11:02,289
should really implement ships with

00:10:59,919 --> 00:11:04,269
upstream tests in auto package tests for

00:11:02,289 --> 00:11:07,329
all my packages and all dependencies I

00:11:04,269 --> 00:11:09,039
try to maintain it takes

00:11:07,329 --> 00:11:11,439
compared to Legion it takes a lot of

00:11:09,039 --> 00:11:12,610
time because having tests working

00:11:11,439 --> 00:11:15,880
properly

00:11:12,610 --> 00:11:18,579
not as easy as just writing a deviant

00:11:15,880 --> 00:11:23,200
desk control file and send it away and

00:11:18,579 --> 00:11:26,950
see it work but it really helps to spot

00:11:23,200 --> 00:11:29,740
issues quickly and despite it taking

00:11:26,950 --> 00:11:32,850
some time the the time it saves you

00:11:29,740 --> 00:11:36,640
afterwards is quite bigger in my opinion

00:11:32,850 --> 00:11:38,230
many packages I had to fix were not

00:11:36,640 --> 00:11:42,490
properly implementing Auto packaged

00:11:38,230 --> 00:11:46,630
tests and so I tried to do it and it

00:11:42,490 --> 00:11:48,399
helps a lot and the first third thing I

00:11:46,630 --> 00:11:50,519
want to talk about after that I will

00:11:48,399 --> 00:11:53,589
speak about lead tin packaging is

00:11:50,519 --> 00:11:59,350
reproducibility so the first ideas came

00:11:53,589 --> 00:12:04,240
in the 2010 first year 2000 but with any

00:11:59,350 --> 00:12:08,529
implementation the kickoff started was

00:12:04,240 --> 00:12:13,060
when Luna held talked about it in a

00:12:08,529 --> 00:12:14,680
DEFCON 13 which if I'm good in memories

00:12:13,060 --> 00:12:16,600
was kind of here

00:12:14,680 --> 00:12:21,190
not in that room because it's too small

00:12:16,600 --> 00:12:24,060
but you get the idea and so first routes

00:12:21,190 --> 00:12:27,040
were drafted on the wiki after that and

00:12:24,060 --> 00:12:30,880
the first three bill was kind of done in

00:12:27,040 --> 00:12:32,800
2013 showing that's more or less 60% of

00:12:30,880 --> 00:12:35,470
the packages were reproducible which

00:12:32,800 --> 00:12:39,010
means that 40% were not it's the

00:12:35,470 --> 00:12:42,550
important part and a second one was done

00:12:39,010 --> 00:12:49,029
before first in 2014 in in the in the

00:12:42,550 --> 00:12:50,500
idea of making it advertised in less

00:12:49,029 --> 00:12:52,810
than a year a custom tool chain was

00:12:50,500 --> 00:12:54,399
working for every package built with

00:12:52,810 --> 00:12:56,649
developer which is actually quite nice

00:12:54,399 --> 00:12:59,560
to see that it took only one year for

00:12:56,649 --> 00:13:03,130
such a project to emerge from the from

00:12:59,560 --> 00:13:07,660
from the floor and become something not

00:13:03,130 --> 00:13:10,209
fully reliable but working and the

00:13:07,660 --> 00:13:13,870
project was really democratized in 2015

00:13:10,209 --> 00:13:18,370
at FOSDEM it was included in the tracker

00:13:13,870 --> 00:13:22,569
in the DDP page and now it is what we

00:13:18,370 --> 00:13:24,850
know about it many issue I met where

00:13:22,569 --> 00:13:26,050
about packages failing to build from

00:13:24,850 --> 00:13:28,600
sources

00:13:26,050 --> 00:13:33,720
is feeling failing to build reproducibly

00:13:28,600 --> 00:13:36,580
and sometimes is due to some updates of

00:13:33,720 --> 00:13:39,130
dependencies either direct dependencies

00:13:36,580 --> 00:13:42,040
or transitive dependencies and many

00:13:39,130 --> 00:13:43,959
times it's it's a matter of integration

00:13:42,040 --> 00:13:46,089
so it takes some time to fix these

00:13:43,959 --> 00:13:48,160
issues but having reproducible packages

00:13:46,089 --> 00:13:51,579
today is it's really something needed

00:13:48,160 --> 00:13:53,769
actually I think at some point probably

00:13:51,579 --> 00:13:58,660
it will become really critical to have

00:13:53,769 --> 00:14:01,329
no reproducible packages it helped me to

00:13:58,660 --> 00:14:02,829
fix another set of issues once where

00:14:01,329 --> 00:14:07,390
that were not fixed by continuous

00:14:02,829 --> 00:14:09,519
integration so that's for the main

00:14:07,390 --> 00:14:13,720
examples I wanted to talk about QA ice

00:14:09,519 --> 00:14:15,519
in QA team so you can go on the wiki to

00:14:13,720 --> 00:14:18,100
see where a lot of projects about

00:14:15,519 --> 00:14:22,110
Quality Assurance and I just scratched

00:14:18,100 --> 00:14:24,490
the the surface of the topic and that

00:14:22,110 --> 00:14:27,399
leads me to the most important part for

00:14:24,490 --> 00:14:30,610
me which is that TBN is a collection of

00:14:27,399 --> 00:14:33,910
people trying to package stuff work

00:14:30,610 --> 00:14:38,890
together design policies and in-home

00:14:33,910 --> 00:14:41,020
making a good operatic system we have a

00:14:38,890 --> 00:14:43,930
lot of things but in the way debian is

00:14:41,020 --> 00:14:45,610
structured today the idea is that it's a

00:14:43,930 --> 00:14:48,100
dual Cressy when you package something

00:14:45,610 --> 00:14:49,810
you you hold the package it's yours it's

00:14:48,100 --> 00:14:50,110
your baby you can do whatever you want

00:14:49,810 --> 00:14:52,149
with it

00:14:50,110 --> 00:14:54,459
and nobody else is supposed to take it

00:14:52,149 --> 00:14:57,310
over from you even though some

00:14:54,459 --> 00:14:59,709
processors exist to do to take over some

00:14:57,310 --> 00:15:01,870
things when things are not going well we

00:14:59,709 --> 00:15:03,310
could talk about CCT ctt or things like

00:15:01,870 --> 00:15:07,930
that but it's not it's not the main

00:15:03,310 --> 00:15:11,410
purpose it's hard to take over a package

00:15:07,930 --> 00:15:14,050
last year first draft of the salvaging

00:15:11,410 --> 00:15:16,540
process was designed by DMI a team it's

00:15:14,050 --> 00:15:19,180
now in the developer guidelines so it's

00:15:16,540 --> 00:15:21,040
one process that allows someone to take

00:15:19,180 --> 00:15:23,350
over a package when its maintainer is

00:15:21,040 --> 00:15:28,209
not doing this is not giving it the love

00:15:23,350 --> 00:15:30,160
the package needs needs but what works

00:15:28,209 --> 00:15:32,050
well is to have teams people that

00:15:30,160 --> 00:15:37,149
assembles in groups to take care about

00:15:32,050 --> 00:15:39,850
packages that respect common material

00:15:37,149 --> 00:15:46,110
example Python team Perl

00:15:39,850 --> 00:15:49,180
him effects like that so the MIAA team

00:15:46,110 --> 00:15:50,980
which I remember off tries to facilitate

00:15:49,180 --> 00:15:54,160
package transmission when the maintainer

00:15:50,980 --> 00:15:56,230
failed to do his work it's something

00:15:54,160 --> 00:15:58,329
that is needed as is needed as soon as

00:15:56,230 --> 00:16:03,279
the maintainer of a case a package is a

00:15:58,329 --> 00:16:05,709
person and not a team it can be a pain

00:16:03,279 --> 00:16:07,329
when somebody is just making the bare

00:16:05,709 --> 00:16:09,339
minimum to take care about this package

00:16:07,329 --> 00:16:11,440
but it's still active so you cannot say

00:16:09,339 --> 00:16:20,279
okay this package is not maintained we

00:16:11,440 --> 00:16:23,529
have to take it over and in my opinion

00:16:20,279 --> 00:16:25,300
teams are good and so to that the best

00:16:23,529 --> 00:16:27,279
example I know is the pro team as I'm

00:16:25,300 --> 00:16:28,870
stuck at Pearl I didn't join the team

00:16:27,279 --> 00:16:30,519
and I'm not contributing at it but I

00:16:28,870 --> 00:16:33,250
think it's it's the one that functions

00:16:30,519 --> 00:16:35,649
in the best in the best way

00:16:33,250 --> 00:16:37,480
in Python team or go team as one example

00:16:35,649 --> 00:16:38,980
we have a policy that I don't really

00:16:37,480 --> 00:16:42,220
like which is the maintainer uploader

00:16:38,980 --> 00:16:44,079
field policy when the package is on the

00:16:42,220 --> 00:16:45,850
maintainer field everybody is supposed

00:16:44,079 --> 00:16:47,860
to be able to maintain the package and

00:16:45,850 --> 00:16:50,889
upload it without asking to anybody else

00:16:47,860 --> 00:16:53,740
when it's in the uploader field the name

00:16:50,889 --> 00:16:57,040
of the team the main maintainer still

00:16:53,740 --> 00:16:59,680
has a way to decide whether or not we

00:16:57,040 --> 00:17:02,470
upload a package so it still maintain

00:16:59,680 --> 00:17:04,390
but not really and I don't like that

00:17:02,470 --> 00:17:06,130
it's something I didn't see in the per

00:17:04,390 --> 00:17:12,100
team maybe I'm wrong but I think there

00:17:06,130 --> 00:17:14,890
is no such policy so very some progress

00:17:12,100 --> 00:17:16,870
because many many teams emerge and

00:17:14,890 --> 00:17:18,699
people are working in this so many

00:17:16,870 --> 00:17:23,949
packages are right now team my inside

00:17:18,699 --> 00:17:27,760
but we still have some progress to do

00:17:23,949 --> 00:17:30,610
the positive thing is as I'd never saw

00:17:27,760 --> 00:17:32,789
team really go m.i.a I think it exists

00:17:30,610 --> 00:17:35,380
but I didn't see it for now

00:17:32,789 --> 00:17:41,679
generally you have less than two paper

00:17:35,380 --> 00:17:44,679
packages when you are in a team many RC

00:17:41,679 --> 00:17:47,049
bugs I met with my man for me man free

00:17:44,679 --> 00:17:48,730
dependency dependencies were easy to fix

00:17:47,049 --> 00:17:50,440
because by joining pythons him I was

00:17:48,730 --> 00:17:53,200
able to maintain the packages and get

00:17:50,440 --> 00:17:55,120
uploads done really quickly in

00:17:53,200 --> 00:17:57,340
of having to send a mate to somebody you

00:17:55,120 --> 00:17:59,590
probably wouldn't answer quickly and to

00:17:57,340 --> 00:18:02,279
depend on someone yes to get the

00:17:59,590 --> 00:18:05,440
packages fixed

00:18:02,279 --> 00:18:07,450
an alternative want to mention even

00:18:05,440 --> 00:18:10,120
though I don't advocate for it is the

00:18:07,450 --> 00:18:11,980
low freshen n mu which is a wiki page

00:18:10,120 --> 00:18:13,600
where people can register and say okay

00:18:11,980 --> 00:18:16,269
you can maintain my packages within my

00:18:13,600 --> 00:18:18,309
weave up my agreements with such with

00:18:16,269 --> 00:18:22,149
some conditions criterions you have to

00:18:18,309 --> 00:18:24,340
respect you have to know about this page

00:18:22,149 --> 00:18:27,130
I know many developers that don't know

00:18:24,340 --> 00:18:30,190
about this page so I guess it's a first

00:18:27,130 --> 00:18:34,690
issue and it's less efficient and

00:18:30,190 --> 00:18:37,720
nothing in my opinion so what what could

00:18:34,690 --> 00:18:40,090
we improve in my opinion a good thing

00:18:37,720 --> 00:18:41,679
would be to go on our maintainer pages

00:18:40,090 --> 00:18:43,809
and see how many packages will

00:18:41,679 --> 00:18:46,899
personally maintain and maybe find a

00:18:43,809 --> 00:18:50,409
theme where it could go that's something

00:18:46,899 --> 00:18:51,909
I try to I try to do I have one package

00:18:50,409 --> 00:18:53,529
that doesn't follow this rule and I'm

00:18:51,909 --> 00:18:57,010
really sad with it but I don't know

00:18:53,529 --> 00:18:59,769
where to put it right now the teams are

00:18:57,010 --> 00:19:02,649
really good to make Debian contributor

00:18:59,769 --> 00:19:05,830
stats contributing because there are a

00:19:02,649 --> 00:19:07,480
space where they can commit the changes

00:19:05,830 --> 00:19:09,429
they can't upload by the Suns by

00:19:07,480 --> 00:19:11,320
themselves but they can do the work and

00:19:09,429 --> 00:19:12,940
test the work and asked for somebody

00:19:11,320 --> 00:19:15,429
else in the team to sponsor their work

00:19:12,940 --> 00:19:17,230
it's quite easy to start in when you try

00:19:15,429 --> 00:19:19,600
to maintain your own package in you in

00:19:17,230 --> 00:19:22,299
you in your new corner it's really

00:19:19,600 --> 00:19:24,250
harder to to to ask for some help

00:19:22,299 --> 00:19:26,500
still there is mentors that debian

00:19:24,250 --> 00:19:27,220
dotnet which is very useful as a project

00:19:26,500 --> 00:19:29,919
and a team

00:19:27,220 --> 00:19:33,279
but team maintaining is really efficient

00:19:29,919 --> 00:19:36,100
for Debian contributors to starting and

00:19:33,279 --> 00:19:37,809
in my opinion regarding pythons him as

00:19:36,100 --> 00:19:39,519
one example the policy regarding

00:19:37,809 --> 00:19:43,029
maintainer and the thought if it should

00:19:39,519 --> 00:19:45,460
disappear and a team maintain package

00:19:43,029 --> 00:19:47,320
just be maintainable back by each and

00:19:45,460 --> 00:19:48,340
every member of the team River asking to

00:19:47,320 --> 00:19:50,049
the original packager

00:19:48,340 --> 00:19:52,480
it doesn't mean that we don't have to

00:19:50,049 --> 00:19:54,760
respect the fact that somebody worked on

00:19:52,480 --> 00:19:57,010
a package and if we see that he's active

00:19:54,760 --> 00:20:00,880
it's better to not work on his work on

00:19:57,010 --> 00:20:02,529
his feet but it's not the same to be

00:20:00,880 --> 00:20:05,139
respectful because you think it's

00:20:02,529 --> 00:20:06,650
important and to have to ask to somebody

00:20:05,139 --> 00:20:12,230
else before uploading a fix

00:20:06,650 --> 00:20:14,000
package so I tried to have with that I

00:20:12,230 --> 00:20:16,160
joined the queue effort I joined the maa

00:20:14,000 --> 00:20:20,120
team I try to to maintain my packages

00:20:16,160 --> 00:20:22,040
and in in a hole in the to last year's

00:20:20,120 --> 00:20:23,660
becoming a Debian developer was not the

00:20:22,040 --> 00:20:26,600
most important part for me it was really

00:20:23,660 --> 00:20:29,630
to try to have good packages maintained

00:20:26,600 --> 00:20:32,080
probably with nice people and to try to

00:20:29,630 --> 00:20:35,390
interact properly with people when

00:20:32,080 --> 00:20:38,809
packages they are maintaining we're

00:20:35,390 --> 00:20:41,690
faulty regarding my needs or really

00:20:38,809 --> 00:20:44,030
critical bugs a finger that I also tried

00:20:41,690 --> 00:20:47,720
to sponsor contributors it's not really

00:20:44,030 --> 00:20:49,610
easy because they tend to always submit

00:20:47,720 --> 00:20:51,470
requests for sponsorship sponsorship

00:20:49,610 --> 00:20:54,350
instead of coming back to somebody who

00:20:51,470 --> 00:20:55,910
already sponsored them so I try to tell

00:20:54,350 --> 00:20:57,350
to the people I sponsor yes you can come

00:20:55,910 --> 00:21:00,350
back whenever you want to ask me to help

00:20:57,350 --> 00:21:03,200
you for some packages and I also try to

00:21:00,350 --> 00:21:05,330
do application management to help adding

00:21:03,200 --> 00:21:09,790
new people in Debian because actually

00:21:05,330 --> 00:21:13,940
the VN is essentially about people and

00:21:09,790 --> 00:21:16,670
you can help too please try to cement

00:21:13,940 --> 00:21:18,320
the new packages try to be welcoming

00:21:16,670 --> 00:21:21,650
with contributors where they want to

00:21:18,320 --> 00:21:23,630
join a team try to use the different QA

00:21:21,650 --> 00:21:28,059
tools that exist and that are really

00:21:23,630 --> 00:21:31,059
good and don't hesitate to ask questions

00:21:28,059 --> 00:21:31,059
thanks

00:21:32,320 --> 00:21:37,109

YouTube URL: https://www.youtube.com/watch?v=C0cv3UULuzA


