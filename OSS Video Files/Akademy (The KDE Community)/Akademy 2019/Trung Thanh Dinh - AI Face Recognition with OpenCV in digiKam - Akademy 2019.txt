Title: Trung Thanh Dinh - AI Face Recognition with OpenCV in digiKam - Akademy 2019
Publication date: 2020-05-25
Playlist: Akademy 2019
Description: 
	Currently, we are observing an incredible development in technologies, especially in Artificial Intelligence field. Indeed, by learning from massive data, AI is particularly good at some tasks that normal algorithms cannot achieve as good level of performance, such as: image classification, speech recognition, object detection, tendency prediction, feature extraction, etc. Moreover, new AI algorithms with the emergence of neural networks and deep learning even makes AI models more robust, so that they can now give better prediction without any limitation in improving themselves.

Being aware of those assets, digiKam team has considered using deep learning in digiKam. Thus, this presentation aims to introduce a new implementation of facial recognition in digiKam, based on deep learning models and OpenCV DNN module, so as to improve the performance of facial recognition module.
Captions: 
	00:00:00,170 --> 00:00:12,889
okay yeah so hello everybody I'm Jim

00:00:08,189 --> 00:00:19,199
Dundee and this is ego and torque curve

00:00:12,889 --> 00:00:23,910
so we are contributor at digicam I've

00:00:19,199 --> 00:00:26,400
started for years and anthropic just any

00:00:23,910 --> 00:00:31,230
or just this year from google Summer of

00:00:26,400 --> 00:00:34,469
Code and so we are this is our first

00:00:31,230 --> 00:00:37,530
Academy and we are quite new and today

00:00:34,469 --> 00:00:40,230
we are going to present the face

00:00:37,530 --> 00:00:45,539
recognition and management in digicam

00:00:40,230 --> 00:00:46,469
and the presentation is normally under

00:00:45,539 --> 00:00:49,920
my name

00:00:46,469 --> 00:00:52,230
but since we are both worked on this

00:00:49,920 --> 00:00:55,110
project for the google Summer of Code I

00:00:52,230 --> 00:00:57,510
worked on the backend and ego on the

00:00:55,110 --> 00:01:01,730
front end so it's much more complete

00:00:57,510 --> 00:01:13,470
that we present together there's no job

00:01:01,730 --> 00:01:16,470
okay so let's begin okay so just a quick

00:01:13,470 --> 00:01:20,299
summary for our presentation we will

00:01:16,470 --> 00:01:23,100
firstly introduced out the module and

00:01:20,299 --> 00:01:26,850
the module the face management

00:01:23,100 --> 00:01:29,340
organization not doing digicam next the

00:01:26,850 --> 00:01:33,329
work that I've done for this prison for

00:01:29,340 --> 00:01:36,600
this module the improvement on face

00:01:33,329 --> 00:01:41,970
reconnection and then the improvement of

00:01:36,600 --> 00:01:45,990
Igor that he did on the face management

00:01:41,970 --> 00:01:48,450
workflow on the UI and finally a small

00:01:45,990 --> 00:01:51,439
conclusion for our work and the future

00:01:48,450 --> 00:01:51,439
of the module so

00:01:52,440 --> 00:01:58,750
as I said we worked for the google

00:01:55,780 --> 00:02:01,900
Summer of Code just if anybody he hasn't

00:01:58,750 --> 00:02:06,460
know about this is a program for student

00:02:01,900 --> 00:02:09,009
working on a prototype for open source

00:02:06,460 --> 00:02:11,830
organization and this is a chance for

00:02:09,009 --> 00:02:17,230
open source to promote themselves to

00:02:11,830 --> 00:02:22,959
student and and to and to have a more

00:02:17,230 --> 00:02:25,870
contributor and for our work is on the

00:02:22,959 --> 00:02:28,959
motor in DG cam 4 facial rec and for

00:02:25,870 --> 00:02:33,100
facial management simply that we can

00:02:28,959 --> 00:02:36,070
tack a person by detecting their facing

00:02:33,100 --> 00:02:39,760
photos and with the name on that time

00:02:36,070 --> 00:02:42,820
and that helps to organize faces and

00:02:39,760 --> 00:02:48,489
pictures and we can later sort with the

00:02:42,820 --> 00:02:51,269
name of people or display picture that

00:02:48,489 --> 00:02:56,200
have that name on that picture

00:02:51,269 --> 00:02:59,380
so for my work in detail I improve the

00:02:56,200 --> 00:03:04,750
speed and the accuracy of the module and

00:02:59,380 --> 00:03:06,670
he or he will he worked on a user

00:03:04,750 --> 00:03:12,400
interface which is more natural and more

00:03:06,670 --> 00:03:14,980
informative so why why do we need a face

00:03:12,400 --> 00:03:18,100
recognition indeed you can actually in

00:03:14,980 --> 00:03:20,799
our when we use DG can we have our

00:03:18,100 --> 00:03:25,450
albums with a lot of pictures that have

00:03:20,799 --> 00:03:28,239
faces and we need to tag the faces like

00:03:25,450 --> 00:03:31,390
what we did in Facebook just don't know

00:03:28,239 --> 00:03:36,549
that who is who are the person in that

00:03:31,390 --> 00:03:40,090
picture and if we if we have hundreds of

00:03:36,549 --> 00:03:44,609
faces they will be difficult for us to

00:03:40,090 --> 00:03:47,970
do all that manually so the module is

00:03:44,609 --> 00:03:52,060
intended to replace that part and

00:03:47,970 --> 00:03:57,060
automatically aside the tag based on the

00:03:52,060 --> 00:03:57,060
known faces that we have already did

00:03:58,000 --> 00:04:03,980
so why do I choose deep learning for

00:04:01,489 --> 00:04:10,450
that actually in digicam the module is

00:04:03,980 --> 00:04:16,549
already implemented using an algorithm

00:04:10,450 --> 00:04:19,070
as you can see here we have a nd chica

00:04:16,549 --> 00:04:22,610
actually the module is implemented used

00:04:19,070 --> 00:04:28,639
akin phase and Fisher phase and there's

00:04:22,610 --> 00:04:31,639
another algorithm LPP h-line Ebro like a

00:04:28,639 --> 00:04:34,930
binary something I there's no it's not

00:04:31,639 --> 00:04:38,210
here but actually they are algorithm and

00:04:34,930 --> 00:04:43,190
they are not accurate so the module

00:04:38,210 --> 00:04:45,830
actually was deactivated so the idea is

00:04:43,190 --> 00:04:49,490
that I used deep learning which is more

00:04:45,830 --> 00:04:52,190
robust and has a flow in this graph has

00:04:49,490 --> 00:04:57,919
more accuracy in order to improve this

00:04:52,190 --> 00:05:02,409
module and yeah so I got this picture

00:04:57,919 --> 00:05:05,150
from a paper so can she sure about this

00:05:02,409 --> 00:05:11,060
that killed the the certainty of that

00:05:05,150 --> 00:05:13,310
graph so okay so why how can do planning

00:05:11,060 --> 00:05:16,220
have to improve the accuracy of the

00:05:13,310 --> 00:05:18,919
module I will just talk a little bit

00:05:16,220 --> 00:05:21,860
about how does it work and I should

00:05:18,919 --> 00:05:26,710
ensure that anybody here knows much

00:05:21,860 --> 00:05:31,490
better about than me but yeah just will

00:05:26,710 --> 00:05:34,310
mention it again so here you have a an

00:05:31,490 --> 00:05:38,570
architecture of neural network it has

00:05:34,310 --> 00:05:41,210
many layer and just seen that I know

00:05:38,570 --> 00:05:46,880
were a neural network my function like

00:05:41,210 --> 00:05:50,000
our brain and each layer represent each

00:05:46,880 --> 00:05:54,530
step when we do some tasks like we do it

00:05:50,000 --> 00:05:57,169
with step 1 step 2 step 3 and in order

00:05:54,530 --> 00:05:59,599
to have a functional modern at neural

00:05:57,169 --> 00:06:04,939
network we need to train it

00:05:59,599 --> 00:06:07,219
and training when we train it we have to

00:06:04,939 --> 00:06:11,300
do the forward operation or the

00:06:07,219 --> 00:06:15,259
inference to predict and then based on

00:06:11,300 --> 00:06:19,009
the the no label of that data we can

00:06:15,259 --> 00:06:23,389
compute an error or how close our

00:06:19,009 --> 00:06:25,849
prediction to the real result and then

00:06:23,389 --> 00:06:28,969
we do a backward operation where we back

00:06:25,849 --> 00:06:33,139
to operation where we change the model

00:06:28,969 --> 00:06:37,629
in the way that it will perform much

00:06:33,139 --> 00:06:42,830
better and closer to the results okay so

00:06:37,629 --> 00:06:45,889
after training with many data and after

00:06:42,830 --> 00:06:47,599
many iteration we will have a model that

00:06:45,889 --> 00:06:55,729
is functional and we can use it to

00:06:47,599 --> 00:06:58,159
predict precise predict yeah so how why

00:06:55,729 --> 00:07:01,999
why the deep learning is so good in

00:06:58,159 --> 00:07:05,029
phase recollection because we have so

00:07:01,999 --> 00:07:09,430
many an architecture with so many like

00:07:05,029 --> 00:07:12,589
year and for each like year we can like

00:07:09,430 --> 00:07:14,599
recognize some part of the face for

00:07:12,589 --> 00:07:17,300
example for the first for first layer

00:07:14,599 --> 00:07:20,209
you can recognize edge curves something

00:07:17,300 --> 00:07:23,119
like that non face with faces region and

00:07:20,209 --> 00:07:25,969
then from the next we can recognize the

00:07:23,119 --> 00:07:28,999
eye nose and some other features on the

00:07:25,969 --> 00:07:35,469
face and finally a picture that is more

00:07:28,999 --> 00:07:38,839
complete other face so so for my work

00:07:35,469 --> 00:07:42,829
this is a pipeline of facial recognition

00:07:38,839 --> 00:07:44,990
as you can and yeah I took it from

00:07:42,829 --> 00:07:49,729
medium because it's a very good and

00:07:44,990 --> 00:07:52,879
informative give for the pipeline we

00:07:49,729 --> 00:07:56,779
begin with an input image and then we do

00:07:52,879 --> 00:07:58,759
the detection where we detect where is

00:07:56,779 --> 00:08:01,579
the face and then we extract the line

00:07:58,759 --> 00:08:04,899
mark and we probably need to prepare it

00:08:01,579 --> 00:08:07,759
for the neural network then we compute

00:08:04,899 --> 00:08:09,320
representation of faces and from that

00:08:07,759 --> 00:08:11,360
results we can

00:08:09,320 --> 00:08:15,650
do clustering we can compute the

00:08:11,360 --> 00:08:21,260
similarity with known faces and do to

00:08:15,650 --> 00:08:25,730
predict to recognize that face and the

00:08:21,260 --> 00:08:28,790
is a pair of cute and simplified and ke

00:08:25,730 --> 00:08:30,680
the most important the mo the core

00:08:28,790 --> 00:08:35,860
component of my work is

00:08:30,680 --> 00:08:40,130
OpenCV DN n moto and it has to do a fast

00:08:35,860 --> 00:08:43,210
inference or for operation on the whole

00:08:40,130 --> 00:08:46,670
neural network it's very fast and

00:08:43,210 --> 00:08:49,430
modulized it has to separate the the

00:08:46,670 --> 00:08:51,650
neural network and core the the

00:08:49,430 --> 00:08:54,290
functional code so that we can upgrade

00:08:51,650 --> 00:09:00,260
the neural network apart from the

00:08:54,290 --> 00:09:04,180
functional the code and continue with

00:09:00,260 --> 00:09:07,580
the pipeline here is the results of my

00:09:04,180 --> 00:09:09,790
when running the face detection it's

00:09:07,580 --> 00:09:13,610
very robust as you can see with

00:09:09,790 --> 00:09:18,380
orientation like this even the arcs are

00:09:13,610 --> 00:09:21,350
recognized because it is face to even up

00:09:18,380 --> 00:09:23,300
work like this and anything that risk

00:09:21,350 --> 00:09:27,440
that our similar to faces can be

00:09:23,300 --> 00:09:29,780
detected right and finally if you have a

00:09:27,440 --> 00:09:33,290
picture with so many faces and they are

00:09:29,780 --> 00:09:38,540
small it's made small very small faces

00:09:33,290 --> 00:09:41,630
you can be tactic to next for the

00:09:38,540 --> 00:09:45,740
landmark extraction actually this

00:09:41,630 --> 00:09:49,250
depends on the neural network and here

00:09:45,740 --> 00:09:53,300
we extract a line mark this the point of

00:09:49,250 --> 00:09:56,540
the important important region of the on

00:09:53,300 --> 00:09:59,750
the face and for example for the neuron

00:09:56,540 --> 00:10:02,030
I work but I used it required it is

00:09:59,750 --> 00:10:06,020
required that the outer face at the

00:10:02,030 --> 00:10:09,370
outer eyes and then top notes are at the

00:10:06,020 --> 00:10:12,650
special position so actually this part

00:10:09,370 --> 00:10:14,210
depends on the neural network and can be

00:10:12,650 --> 00:10:17,839
and being blamed I

00:10:14,210 --> 00:10:21,500
am i implemented model arise so that we

00:10:17,839 --> 00:10:25,790
can use it for different architecture of

00:10:21,500 --> 00:10:29,740
neural network and for the final part we

00:10:25,790 --> 00:10:32,420
have a new image we compute the

00:10:29,740 --> 00:10:35,630
representation and we can compute the

00:10:32,420 --> 00:10:39,529
similarity with the group of know faces

00:10:35,630 --> 00:10:43,149
and then we can decide the tag based on

00:10:39,529 --> 00:10:47,089
the similarity with that group of faces

00:10:43,149 --> 00:10:48,860
so for a small demonstration it will

00:10:47,089 --> 00:10:51,800
like this I have a two picture of

00:10:48,860 --> 00:10:57,589
private and it can find all the picture

00:10:51,800 --> 00:11:02,360
that are similar to that faces spices so

00:10:57,589 --> 00:11:06,589
for the next part I will let the I will

00:11:02,360 --> 00:11:09,790
like to Igor any presenter the ID you I

00:11:06,589 --> 00:11:09,790
offer mojo

00:11:14,220 --> 00:11:23,500
okay good day everyone and so my part of

00:11:21,550 --> 00:11:28,210
the work was kind of boring because you

00:11:23,500 --> 00:11:32,110
know it's your ing weeks and you're just

00:11:28,210 --> 00:11:39,040
asking yourself why why didn't DJ cam

00:11:32,110 --> 00:11:41,140
helped already and one word if you are

00:11:39,040 --> 00:11:43,870
using digicam and have some issues or

00:11:41,140 --> 00:11:48,310
some suggestions please contact me I

00:11:43,870 --> 00:11:53,200
will work for waste management Volvo for

00:11:48,310 --> 00:11:57,330
a long time I think so we had a lot of

00:11:53,200 --> 00:12:00,250
feedback from users about issues about

00:11:57,330 --> 00:12:03,610
features they want to see in next

00:12:00,250 --> 00:12:07,590
digicam releases and this feedback can

00:12:03,610 --> 00:12:11,790
be divided in two parts one of them is

00:12:07,590 --> 00:12:14,290
some strange misunderstanding of

00:12:11,790 --> 00:12:18,780
difference between face tagging and

00:12:14,290 --> 00:12:23,260
normal taking because face tagging is

00:12:18,780 --> 00:12:26,140
not a normal tag it's more like I don't

00:12:23,260 --> 00:12:28,690
know how to say but you can't use face

00:12:26,140 --> 00:12:32,130
take instead of normal tech face Tech

00:12:28,690 --> 00:12:36,060
has to be with the area it's for

00:12:32,130 --> 00:12:42,010
detection and the recognition for

00:12:36,060 --> 00:12:46,270
internal usages and so on and there is

00:12:42,010 --> 00:12:51,280
some problems why did you cam have this

00:12:46,270 --> 00:12:59,710
problem face tags was added after the

00:12:51,280 --> 00:13:03,880
digicam had already made have made a tag

00:12:59,710 --> 00:13:06,190
engine so users said that it's hard to

00:13:03,880 --> 00:13:08,050
tell the difference between face tags

00:13:06,190 --> 00:13:12,820
and normal tags when you are looking at

00:13:08,050 --> 00:13:14,510
a tech panel it's they're using it like

00:13:12,820 --> 00:13:19,700
normal tags and

00:13:14,510 --> 00:13:22,940
the big problem with the same names as a

00:13:19,700 --> 00:13:29,779
part is about some random improvements

00:13:22,940 --> 00:13:33,380
to do so one of the solution was to

00:13:29,779 --> 00:13:39,050
start separation of the tags and normal

00:13:33,380 --> 00:13:41,209
text entirely so what did we made we

00:13:39,050 --> 00:13:46,579
removed face tags from normal tags list

00:13:41,209 --> 00:13:50,449
and from context menus this this removes

00:13:46,579 --> 00:13:53,120
the way for users to use first act as

00:13:50,449 --> 00:13:56,540
normal tags and to see it from this list

00:13:53,120 --> 00:13:59,120
of course the next one we removed some

00:13:56,540 --> 00:14:02,120
various strange functionality to convert

00:13:59,120 --> 00:14:05,000
waste X into normal text and the

00:14:02,120 --> 00:14:10,130
server's I don't know why this was so

00:14:05,000 --> 00:14:12,050
but not anymore I remove possibility to

00:14:10,130 --> 00:14:13,750
create a first acts outside of people

00:14:12,050 --> 00:14:20,449
this is a very tricky question because

00:14:13,750 --> 00:14:23,920
first X was helped like the same tree

00:14:20,449 --> 00:14:27,019
architecture as the normal text so and

00:14:23,920 --> 00:14:31,519
the tricky part is if the parent is

00:14:27,019 --> 00:14:35,540
normal tag and child is a face tag that

00:14:31,519 --> 00:14:38,449
won't be shown in any panels at all

00:14:35,540 --> 00:14:43,760
because parent notified tech it's not a

00:14:38,449 --> 00:14:49,370
face tag 3 branch the leaf is face tag

00:14:43,760 --> 00:14:53,390
it's not normal Tech so what do we

00:14:49,370 --> 00:14:57,470
propose it all face Tech has to be under

00:14:53,390 --> 00:14:59,649
the people node people's internal face

00:14:57,470 --> 00:14:59,649
tag

00:15:00,559 --> 00:15:05,279
people top-level tech is now hidden

00:15:02,819 --> 00:15:08,879
because it's no really point in that and

00:15:05,279 --> 00:15:12,029
I think it's better to rename it to

00:15:08,879 --> 00:15:14,790
something like face tag internal sounds

00:15:12,029 --> 00:15:17,610
like that and of course we removes all

00:15:14,790 --> 00:15:20,490
faced removes all face tags from all the

00:15:17,610 --> 00:15:24,449
list of text so we need to add some

00:15:20,490 --> 00:15:28,709
filters we already did that and some

00:15:24,449 --> 00:15:33,829
more places where they should be like an

00:15:28,709 --> 00:15:33,829
algorithm of detection and recognition

00:15:35,629 --> 00:15:44,610
so about other changes now you can see

00:15:41,040 --> 00:15:47,490
that if you said some photo as a sub

00:15:44,610 --> 00:15:49,379
nail the face will be the sub mail

00:15:47,490 --> 00:15:51,360
not a full photo this is a really

00:15:49,379 --> 00:15:52,980
important one on photos there are so

00:15:51,360 --> 00:16:00,749
many people that you can't understand

00:15:52,980 --> 00:16:04,519
can see actually like before was it now

00:16:00,749 --> 00:16:07,319
an announcement of recognized persons

00:16:04,519 --> 00:16:10,860
after running through the algorithm or

00:16:07,319 --> 00:16:13,220
detection and recognition there wasn't

00:16:10,860 --> 00:16:17,399
any announcement as well no perhaps

00:16:13,220 --> 00:16:21,059
nothing and if you have like really

00:16:17,399 --> 00:16:24,509
large collection of photos it would be

00:16:21,059 --> 00:16:28,949
paying to hover your mouse on each face

00:16:24,509 --> 00:16:31,939
and to find this faces so now in

00:16:28,949 --> 00:16:36,410
brackets you can see the sum of

00:16:31,939 --> 00:16:39,839
recognized but not digicam not decided

00:16:36,410 --> 00:16:47,509
GM suggested your name but can't really

00:16:39,839 --> 00:16:47,509
make a decision green borders around

00:16:48,199 --> 00:16:52,170
unconfirmed faces it's really helpful if

00:16:51,600 --> 00:16:55,139
you're early

00:16:52,170 --> 00:17:01,639
if you same have a huge collection of

00:16:55,139 --> 00:17:04,140
faces one person some three improvements

00:17:01,639 --> 00:17:09,580
Adnan Erica

00:17:04,140 --> 00:17:14,589
face tax they alike again internal

00:17:09,580 --> 00:17:17,470
digicam attacks but some I don't know

00:17:14,589 --> 00:17:20,500
why but some users especially newcomers

00:17:17,470 --> 00:17:22,540
was confused with them because if you

00:17:20,500 --> 00:17:28,180
install did you come they already here

00:17:22,540 --> 00:17:30,660
there and I don't know why but users

00:17:28,180 --> 00:17:33,250
could just delete them or rename and

00:17:30,660 --> 00:17:37,990
ruin half of the recognition and

00:17:33,250 --> 00:17:41,200
detection process so now you can't move

00:17:37,990 --> 00:17:45,010
but you can't remove it and you can't

00:17:41,200 --> 00:17:47,080
rename it and there will be always on

00:17:45,010 --> 00:17:49,960
top of the list

00:17:47,080 --> 00:17:51,970
I think zero saying there were some

00:17:49,960 --> 00:17:55,930
problems is that because this tree can

00:17:51,970 --> 00:17:57,730
be really messy and as I said top-level

00:17:55,930 --> 00:18:05,530
tag is now hidden because there is no

00:17:57,730 --> 00:18:08,080
pointer and final small feature is you

00:18:05,530 --> 00:18:10,740
can drag and drop face tax on to faces

00:18:08,080 --> 00:18:14,380
is like in normal way because before you

00:18:10,740 --> 00:18:17,620
you can't do it but it won't change the

00:18:14,380 --> 00:18:21,790
face target will be it will assign a new

00:18:17,620 --> 00:18:24,370
tag using the face tag as I said you can

00:18:21,790 --> 00:18:29,110
use face tax you could use face tax and

00:18:24,370 --> 00:18:32,110
there's a normal text so not anymore so

00:18:29,110 --> 00:18:37,030
this has some problems with separation

00:18:32,110 --> 00:18:40,570
as especially because there is a reason

00:18:37,030 --> 00:18:43,060
there are some places where face tax I

00:18:40,570 --> 00:18:47,920
removed from tags but there is no menu

00:18:43,060 --> 00:18:50,350
from face tags yet and compatibility

00:18:47,920 --> 00:18:53,320
with our owls of other softwares like

00:18:50,350 --> 00:18:56,830
Picasa as it's really pain because it's

00:18:53,320 --> 00:19:01,390
one more way to create the branch one is

00:18:56,830 --> 00:19:07,130
not a face tag and face neck and I can't

00:19:01,390 --> 00:19:08,710
change database that's all thank you

00:19:07,130 --> 00:19:12,039
you

00:19:08,710 --> 00:19:12,039

YouTube URL: https://www.youtube.com/watch?v=ysfQSZw5x48


