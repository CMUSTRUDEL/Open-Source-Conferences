Title: Lessons in Apache Software integration
Publication date: 2013-10-17
Playlist: Apachecon NA 2013 - day 3
Description: 
	Roman Shaposhnik, Bruno MahÃ©
ApacheCon NA 2013
Big Data
Captions: 
	00:00:01,199 --> 00:00:05,680
so hello my name is roman and

00:00:03,199 --> 00:00:07,120
uh before i jump into the presentation i

00:00:05,680 --> 00:00:08,800
actually have to

00:00:07,120 --> 00:00:10,240
warn you about a couple of things well

00:00:08,800 --> 00:00:12,880
first of all this has

00:00:10,240 --> 00:00:13,280
probably very little to do with big data

00:00:12,880 --> 00:00:15,360
so

00:00:13,280 --> 00:00:16,560
i try to convince organizers that it

00:00:15,360 --> 00:00:17,680
actually belongs to the community talk

00:00:16,560 --> 00:00:19,920
but they told me no you

00:00:17,680 --> 00:00:21,119
get way better attendance if it belongs

00:00:19,920 --> 00:00:24,480
to big data so

00:00:21,119 --> 00:00:25,439
here it is um second of all it's kind of

00:00:24,480 --> 00:00:27,119
an interesting

00:00:25,439 --> 00:00:28,560
uh talk because it was supposed to be

00:00:27,119 --> 00:00:30,320
delivered by three people two of them

00:00:28,560 --> 00:00:31,760
bailed so like it's just me so it was

00:00:30,320 --> 00:00:32,480
supposed to be three times bigger but

00:00:31,760 --> 00:00:35,120
you know

00:00:32,480 --> 00:00:36,559
you'll see and then it's it's kind of

00:00:35,120 --> 00:00:37,760
like an open conversation really not

00:00:36,559 --> 00:00:39,760
even a talk so i'll

00:00:37,760 --> 00:00:40,879
try to you know provide some common

00:00:39,760 --> 00:00:42,640
themes but i really

00:00:40,879 --> 00:00:44,800
i'm what i'm really interested in is

00:00:42,640 --> 00:00:46,160
your feedback i'm really interested in

00:00:44,800 --> 00:00:47,920
you know turning it into a little bit of

00:00:46,160 --> 00:00:50,800
a powwow because

00:00:47,920 --> 00:00:52,239
it is i'm promising you lessons i'm i do

00:00:50,800 --> 00:00:54,000
not promise you any

00:00:52,239 --> 00:00:55,360
solutions i don't promise you any sort

00:00:54,000 --> 00:00:57,280
of lessons

00:00:55,360 --> 00:00:59,120
learned see it's not doesn't say that we

00:00:57,280 --> 00:01:02,239
learned any lessons

00:00:59,120 --> 00:01:04,640
uh so a little bit about myself i'm

00:01:02,239 --> 00:01:06,320
sort of a pretty old-school unique

00:01:04,640 --> 00:01:06,560
software developer you know participated

00:01:06,320 --> 00:01:08,159
in

00:01:06,560 --> 00:01:11,360
you know a couple of open source

00:01:08,159 --> 00:01:16,240
projects hadoop guy you know since 2009

00:01:11,360 --> 00:01:17,040
um apache software foundation incubator

00:01:16,240 --> 00:01:18,799
pmc

00:01:17,040 --> 00:01:20,320
you know so big top it was the first

00:01:18,799 --> 00:01:21,119
project that you know i sort of took

00:01:20,320 --> 00:01:23,360
through the pmc

00:01:21,119 --> 00:01:24,880
through the uh incubator and i kind of

00:01:23,360 --> 00:01:25,439
like that experience so much that you

00:01:24,880 --> 00:01:26,799
know i'm

00:01:25,439 --> 00:01:28,720
now trying to help all the other

00:01:26,799 --> 00:01:29,840
projects so if you have cool awesome

00:01:28,720 --> 00:01:31,360
ideas in

00:01:29,840 --> 00:01:33,520
the area of big data that you would like

00:01:31,360 --> 00:01:36,400
to bring to the sf please talk to me

00:01:33,520 --> 00:01:38,000
uh and i'm vp of big top apache big top

00:01:36,400 --> 00:01:39,439
now that the big top is the top level

00:01:38,000 --> 00:01:41,439
project

00:01:39,439 --> 00:01:42,640
uh what is apache big top so before i

00:01:41,439 --> 00:01:44,960
actually jump into

00:01:42,640 --> 00:01:46,479
all these things that i wanted to talk

00:01:44,960 --> 00:01:49,360
about uh

00:01:46,479 --> 00:01:50,640
let me give you what's what's on the

00:01:49,360 --> 00:01:51,520
resolution of the board when we

00:01:50,640 --> 00:01:54,079
graduated

00:01:51,520 --> 00:01:55,920
it's kind of mouthful when open source

00:01:54,079 --> 00:01:57,439
software related to a system for

00:01:55,920 --> 00:01:58,880
integration packaging deployment and

00:01:57,439 --> 00:01:59,439
validation of big data management

00:01:58,880 --> 00:02:02,079
software

00:01:59,439 --> 00:02:03,280
distribution based on apache hadoop so

00:02:02,079 --> 00:02:06,880
what does it really mean

00:02:03,280 --> 00:02:08,800
well what it really means is

00:02:06,880 --> 00:02:10,479
that you know those of us who remember

00:02:08,800 --> 00:02:12,239
how linux distributions used to be would

00:02:10,479 --> 00:02:13,920
recognize this picture right

00:02:12,239 --> 00:02:15,840
because if you remember like you know i

00:02:13,920 --> 00:02:20,840
i think i discovered linux

00:02:15,840 --> 00:02:23,440
in let me think so that was

00:02:20,840 --> 00:02:26,560
95 i think

00:02:23,440 --> 00:02:28,640
94 maybe and it was cool because it was

00:02:26,560 --> 00:02:29,120
basically a bunch of floppy disks right

00:02:28,640 --> 00:02:30,879
you know

00:02:29,120 --> 00:02:32,319
and at the time i had an access to a

00:02:30,879 --> 00:02:34,400
spark machine you know in my

00:02:32,319 --> 00:02:35,519
at my university and like i cross

00:02:34,400 --> 00:02:37,760
compiled my

00:02:35,519 --> 00:02:39,280
kernel that was my thing you know i

00:02:37,760 --> 00:02:40,239
actually wasn't two compilers you know

00:02:39,280 --> 00:02:41,760
to begin with

00:02:40,239 --> 00:02:43,120
and so i you know made a cross compile

00:02:41,760 --> 00:02:44,640
and cross come and it didn't didn't work

00:02:43,120 --> 00:02:45,920
and then i put it on the flop and it's

00:02:44,640 --> 00:02:47,760
like it's so cool

00:02:45,920 --> 00:02:48,959
and i actually almost built my own

00:02:47,760 --> 00:02:50,080
distribution because that's what

00:02:48,959 --> 00:02:51,680
everybody did at the time

00:02:50,080 --> 00:02:53,440
you know you compile your kernel you

00:02:51,680 --> 00:02:54,959
compile your dynamic linker you compile

00:02:53,440 --> 00:02:57,120
your glibc

00:02:54,959 --> 00:02:58,879
all of a sudden you can have bash and

00:02:57,120 --> 00:03:00,319
nothing else but at least there is bash

00:02:58,879 --> 00:03:01,840
and you know you go from there

00:03:00,319 --> 00:03:04,480
but then it was kind of interesting

00:03:01,840 --> 00:03:07,440
because i sort of discovered

00:03:04,480 --> 00:03:10,319
slackware but immediately somehow at the

00:03:07,440 --> 00:03:12,239
same time i also discovered debian

00:03:10,319 --> 00:03:14,080
and debian was super cool because all of

00:03:12,239 --> 00:03:17,200
a sudden i realized that

00:03:14,080 --> 00:03:20,640
you know this nicely packaged software

00:03:17,200 --> 00:03:22,239
uh that i used to love because sound was

00:03:20,640 --> 00:03:23,840
everywhere you know at the time at my

00:03:22,239 --> 00:03:25,680
university

00:03:23,840 --> 00:03:27,519
it can also be done on linux i mean

00:03:25,680 --> 00:03:27,920
there's these are the guys who actually

00:03:27,519 --> 00:03:29,440
have

00:03:27,920 --> 00:03:31,200
there's like no commercial support i

00:03:29,440 --> 00:03:34,239
mean it's like

00:03:31,200 --> 00:03:37,280
uh ian murdock and his wife

00:03:34,239 --> 00:03:38,720
debian deb and ian right and they've

00:03:37,280 --> 00:03:40,319
done it right you know they essentially

00:03:38,720 --> 00:03:42,159
took all of the new software

00:03:40,319 --> 00:03:44,159
you know paired up with the linux kernel

00:03:42,159 --> 00:03:46,400
which is an idea that somehow escaped

00:03:44,159 --> 00:03:48,319
richard stallman for so long uh put it

00:03:46,400 --> 00:03:50,799
into debian and all of a sudden this you

00:03:48,319 --> 00:03:52,560
know panopticon this plethora of

00:03:50,799 --> 00:03:54,159
linux distributions you know appeared

00:03:52,560 --> 00:03:56,640
right now we have like

00:03:54,159 --> 00:03:58,480
ubuntu we have not picks we have you

00:03:56,640 --> 00:04:00,879
know damn small linux if you look at

00:03:58,480 --> 00:04:01,760
into the derivatives of debian it's a

00:04:00,879 --> 00:04:03,599
huge list

00:04:01,760 --> 00:04:05,360
and again i only giving debian as an

00:04:03,599 --> 00:04:07,120
example because it's my personal

00:04:05,360 --> 00:04:08,400
story but you know the same thing could

00:04:07,120 --> 00:04:10,000
be traced you know through

00:04:08,400 --> 00:04:12,400
fedora i mean it's essentially the very

00:04:10,000 --> 00:04:12,720
same effect so what big top is trying to

00:04:12,400 --> 00:04:14,319
do

00:04:12,720 --> 00:04:16,160
big top is trying to do to hadoop what

00:04:14,319 --> 00:04:16,959
debian or fedora for that matter did to

00:04:16,160 --> 00:04:18,479
linux

00:04:16,959 --> 00:04:22,160
uh we're essentially trying to define

00:04:18,479 --> 00:04:24,240
100 community driven open source

00:04:22,160 --> 00:04:25,759
you know apache through and through uh

00:04:24,240 --> 00:04:26,560
distribution of big data management

00:04:25,759 --> 00:04:28,400
software

00:04:26,560 --> 00:04:30,160
and we're hoping that first of all all

00:04:28,400 --> 00:04:32,080
of the efforts that are now you know

00:04:30,160 --> 00:04:33,520
spread through community of making it

00:04:32,080 --> 00:04:36,080
possible making it happen

00:04:33,520 --> 00:04:36,720
would be focused on big top and it will

00:04:36,080 --> 00:04:38,960
mean that

00:04:36,720 --> 00:04:39,919
vendors you know cloudera hortonworks

00:04:38,960 --> 00:04:42,560
you know

00:04:39,919 --> 00:04:44,400
emc greenplum uh will actually have a

00:04:42,560 --> 00:04:44,880
much easier job to do they will only

00:04:44,400 --> 00:04:46,479
have to

00:04:44,880 --> 00:04:48,240
focus on the use cases that are

00:04:46,479 --> 00:04:49,759
important to their customer base

00:04:48,240 --> 00:04:51,520
because let's face it i mean vendors are

00:04:49,759 --> 00:04:53,199
really efficient at knowing what they

00:04:51,520 --> 00:04:54,840
custom what their customers want i mean

00:04:53,199 --> 00:04:57,840
that's why customers typically pay them

00:04:54,840 --> 00:04:59,440
money uh

00:04:57,840 --> 00:05:01,360
and it doesn't make any sense to

00:04:59,440 --> 00:05:02,800
reinvent that wheel every single time

00:05:01,360 --> 00:05:04,320
right you know like coming up with your

00:05:02,800 --> 00:05:04,800
own distribution just because you can

00:05:04,320 --> 00:05:06,639
like

00:05:04,800 --> 00:05:08,639
you're essentially fracturing yourself

00:05:06,639 --> 00:05:11,680
you know the community is not that big

00:05:08,639 --> 00:05:14,479
and it's again it's it's not great

00:05:11,680 --> 00:05:14,479
so um

00:05:14,800 --> 00:05:18,400
if you think about you know what big top

00:05:17,120 --> 00:05:19,759
is trying to provide what is really

00:05:18,400 --> 00:05:21,360
missing right you know what was really

00:05:19,759 --> 00:05:22,880
missing back then you know in the good

00:05:21,360 --> 00:05:24,560
old sort of linux days

00:05:22,880 --> 00:05:26,479
what is missing today well what is

00:05:24,560 --> 00:05:27,440
missing really is a platform view right

00:05:26,479 --> 00:05:29,520
you know

00:05:27,440 --> 00:05:31,120
and apache software is great about you

00:05:29,520 --> 00:05:32,400
know providing you with really cool

00:05:31,120 --> 00:05:35,440
building blocks

00:05:32,400 --> 00:05:36,400
uh but there is not necessarily an

00:05:35,440 --> 00:05:38,160
agenda

00:05:36,400 --> 00:05:39,759
in the asf to provide you with a

00:05:38,160 --> 00:05:42,560
platform view right

00:05:39,759 --> 00:05:43,919
uh and i put it you know sort of a

00:05:42,560 --> 00:05:46,080
little bit maybe whimsically

00:05:43,919 --> 00:05:47,840
it's a generalist team to for a

00:05:46,080 --> 00:05:48,240
specialist yang right you know like we

00:05:47,840 --> 00:05:50,240
all

00:05:48,240 --> 00:05:51,919
developers will like being specialists

00:05:50,240 --> 00:05:53,360
because that's what drives us you know

00:05:51,919 --> 00:05:53,680
that's what makes it so cool right you

00:05:53,360 --> 00:05:55,759
know

00:05:53,680 --> 00:05:58,000
we go to our next job interview and like

00:05:55,759 --> 00:06:01,360
we are hive developer right

00:05:58,000 --> 00:06:03,280
we really know our stuff well but what's

00:06:01,360 --> 00:06:04,560
missing is you know this generalist view

00:06:03,280 --> 00:06:06,639
that is typically present

00:06:04,560 --> 00:06:07,840
in the you know devops communities or

00:06:06,639 --> 00:06:08,560
you know system administration

00:06:07,840 --> 00:06:09,919
communities

00:06:08,560 --> 00:06:11,919
it is typically missing and again it's

00:06:09,919 --> 00:06:15,039
not something that asf is actively

00:06:11,919 --> 00:06:17,600
uh fostering uh also

00:06:15,039 --> 00:06:19,360
shared community driven use cases again

00:06:17,600 --> 00:06:21,600
you know how do people kind of sort of

00:06:19,360 --> 00:06:24,080
know how hdfs and mapreduce are used

00:06:21,600 --> 00:06:26,080
but they really have no clue what things

00:06:24,080 --> 00:06:27,840
giraffe guys are struggling with them

00:06:26,080 --> 00:06:29,759
when they're trying to use hadoop or

00:06:27,840 --> 00:06:31,840
you know uzi is a great example because

00:06:29,759 --> 00:06:33,520
uzi has like 11 fingers and you know

00:06:31,840 --> 00:06:35,360
each finger in every pi so

00:06:33,520 --> 00:06:38,240
you know uzi can drive pig and you know

00:06:35,360 --> 00:06:40,160
hive and talk to hdfs and like

00:06:38,240 --> 00:06:42,080
the kind of troubles that these guys

00:06:40,160 --> 00:06:43,280
have go through they're just enormous

00:06:42,080 --> 00:06:44,960
and there is no place for that to be

00:06:43,280 --> 00:06:46,400
shared right so we need to we need that

00:06:44,960 --> 00:06:48,960
shared repository almost

00:06:46,400 --> 00:06:50,080
uh of use cases best practices and

00:06:48,960 --> 00:06:52,560
upcoming standards

00:06:50,080 --> 00:06:53,840
to some extent right again i keep coming

00:06:52,560 --> 00:06:57,680
back to this

00:06:53,840 --> 00:07:00,080
linux example if you look into linux

00:06:57,680 --> 00:07:00,960
linux wasn't really laid out the way it

00:07:00,080 --> 00:07:02,800
is today

00:07:00,960 --> 00:07:05,120
from the day one but at some point there

00:07:02,800 --> 00:07:07,120
was file system hierarchy standard

00:07:05,120 --> 00:07:08,720
that appeared you know there was a linux

00:07:07,120 --> 00:07:10,639
standard based lsb

00:07:08,720 --> 00:07:12,720
is it perfect no absolutely not you know

00:07:10,639 --> 00:07:14,560
i i cry every single time i need to like

00:07:12,720 --> 00:07:15,840
depend on an lsb component and then i

00:07:14,560 --> 00:07:17,120
discover that you know a particular

00:07:15,840 --> 00:07:18,560
distribution would like

00:07:17,120 --> 00:07:20,400
drag you know the entire printing

00:07:18,560 --> 00:07:21,680
subsystem you know just for me to depend

00:07:20,400 --> 00:07:22,319
on something that has to do with like

00:07:21,680 --> 00:07:24,080
you know you need

00:07:22,319 --> 00:07:26,160
management scripts and like oh why did

00:07:24,080 --> 00:07:27,759
you do that but at least you know at

00:07:26,160 --> 00:07:28,560
least there is some kind of a standard i

00:07:27,759 --> 00:07:31,680
mean at least

00:07:28,560 --> 00:07:34,960
i can depend like yes it drags tons of

00:07:31,680 --> 00:07:38,400
crap but like i can depend on it uh

00:07:34,960 --> 00:07:41,680
and it actually has to be integrated

00:07:38,400 --> 00:07:43,680
with just about anything right so

00:07:41,680 --> 00:07:45,360
again apache software is nice in the

00:07:43,680 --> 00:07:47,039
sense that it kind of gives you a

00:07:45,360 --> 00:07:49,919
building block but it doesn't give you

00:07:47,039 --> 00:07:51,520
a lot of uh understanding right away of

00:07:49,919 --> 00:07:52,960
how to integrate with the base operating

00:07:51,520 --> 00:07:54,080
system right so like if you're running

00:07:52,960 --> 00:07:56,160
linux well maybe

00:07:54,080 --> 00:07:58,479
there is upstart and systemd if you're

00:07:56,160 --> 00:08:00,000
running solaris well there is system you

00:07:58,479 --> 00:08:00,800
know it's a service management facility

00:08:00,000 --> 00:08:02,160
smf

00:08:00,800 --> 00:08:04,080
if you're running on windows well god

00:08:02,160 --> 00:08:06,479
knows what they do there right so

00:08:04,080 --> 00:08:08,319
it's like there is no that view where

00:08:06,479 --> 00:08:10,080
does that functionality belong

00:08:08,319 --> 00:08:11,280
and i would argue through this talk that

00:08:10,080 --> 00:08:12,879
it actually belongs to something like

00:08:11,280 --> 00:08:15,520
big toe

00:08:12,879 --> 00:08:17,360
so when i when i think about asf i mean

00:08:15,520 --> 00:08:18,240
sf community that's what i have in mind

00:08:17,360 --> 00:08:20,319
right it's like

00:08:18,240 --> 00:08:23,599
it's not just bizarre it's bizarre

00:08:20,319 --> 00:08:23,599
bazaar it's like

00:08:23,840 --> 00:08:26,879
it's like you know you have like you

00:08:25,759 --> 00:08:28,960
know this would be

00:08:26,879 --> 00:08:30,879
like i don't know this is like a hadoop

00:08:28,960 --> 00:08:32,479
tent right and you know near hadoop tent

00:08:30,879 --> 00:08:34,240
like it's not really hadooptem because

00:08:32,479 --> 00:08:35,599
it's like you know hdfs and mapreduce

00:08:34,240 --> 00:08:37,680
and common and you cannot really

00:08:35,599 --> 00:08:39,200
separate them because you know you can't

00:08:37,680 --> 00:08:41,039
but they're really separate so like

00:08:39,200 --> 00:08:42,719
somebody needs to like drag them apart

00:08:41,039 --> 00:08:44,159
but the crowd is so large against you

00:08:42,719 --> 00:08:44,640
know like surrounding them that you can

00:08:44,159 --> 00:08:46,399
feel

00:08:44,640 --> 00:08:48,240
so like this is this is what i have in

00:08:46,399 --> 00:08:49,839
mind

00:08:48,240 --> 00:08:51,680
what i'm trying to argue is you know we

00:08:49,839 --> 00:08:53,519
don't have to turn it into a cathedral

00:08:51,680 --> 00:08:54,959
but maybe we can turn that loose into

00:08:53,519 --> 00:08:56,399
something like this i mean

00:08:54,959 --> 00:08:57,839
it's a little bit like more structure i

00:08:56,399 --> 00:08:59,920
mean people understand you know that

00:08:57,839 --> 00:09:01,600
there is an alleyway where you can like

00:08:59,920 --> 00:09:03,200
get vegetables and there is another way

00:09:01,600 --> 00:09:04,959
that when you know you can get bitten

00:09:03,200 --> 00:09:07,600
and you don't go there

00:09:04,959 --> 00:09:08,399
we can try maybe something like this

00:09:07,600 --> 00:09:10,080
right

00:09:08,399 --> 00:09:11,680
uh it's even better because you know

00:09:10,080 --> 00:09:12,720
everybody understand that it's open on

00:09:11,680 --> 00:09:15,360
sundays

00:09:12,720 --> 00:09:17,360
it's uh you know it's working from like

00:09:15,360 --> 00:09:18,959
you know 10 a.m to 2 p.m so

00:09:17,360 --> 00:09:20,560
there is a predictable release schedule

00:09:18,959 --> 00:09:22,000
so you know vegetables get released on a

00:09:20,560 --> 00:09:23,600
schedule and it's a train model so

00:09:22,000 --> 00:09:25,440
you know like you know nobody's wait you

00:09:23,600 --> 00:09:27,040
know for carrot to you know

00:09:25,440 --> 00:09:29,440
mature it actually gets delivered on

00:09:27,040 --> 00:09:31,519
time you know every single time

00:09:29,440 --> 00:09:32,720
but some people say that maybe we need

00:09:31,519 --> 00:09:36,080
to go to this model

00:09:32,720 --> 00:09:38,080
uh well the difference actually here

00:09:36,080 --> 00:09:39,600
you know it's not that great and you

00:09:38,080 --> 00:09:41,519
know to a casual observer

00:09:39,600 --> 00:09:43,200
it seems like it's almost the same but

00:09:41,519 --> 00:09:45,839
to me it's not

00:09:43,200 --> 00:09:46,399
so to me and i i love whole foods i mean

00:09:45,839 --> 00:09:48,640
i'm like

00:09:46,399 --> 00:09:50,399
i shop there every single time you know

00:09:48,640 --> 00:09:53,120
trader joe's doesn't have my item but

00:09:50,399 --> 00:09:53,120
you know uh

00:09:53,519 --> 00:09:58,959
uh the difference between this one

00:09:57,200 --> 00:10:00,640
and this one is that this is a

00:09:58,959 --> 00:10:02,720
vendor-driven business right you know

00:10:00,640 --> 00:10:04,480
these guys kind of have an agenda

00:10:02,720 --> 00:10:06,880
and john mack is actually pretty open

00:10:04,480 --> 00:10:07,519
about his agenda he wants to influence

00:10:06,880 --> 00:10:09,360
the world

00:10:07,519 --> 00:10:11,680
through me right you know like he has

00:10:09,360 --> 00:10:14,800
that agenda and you know like

00:10:11,680 --> 00:10:15,760
today uh i am a happy customer tomorrow

00:10:14,800 --> 00:10:17,440
who knows

00:10:15,760 --> 00:10:18,800
i do not have any participation like

00:10:17,440 --> 00:10:20,640
there is no you know

00:10:18,800 --> 00:10:22,800
form that i can fill out and tell john

00:10:20,640 --> 00:10:24,640
mc like here's how you need to run your

00:10:22,800 --> 00:10:26,000
whole food business i can vote with my

00:10:24,640 --> 00:10:26,720
feet you know i can spend my money

00:10:26,000 --> 00:10:28,399
elsewhere

00:10:26,720 --> 00:10:30,160
but i think you know we really should

00:10:28,399 --> 00:10:30,880
stop here and we shouldn't be really

00:10:30,160 --> 00:10:32,640
even

00:10:30,880 --> 00:10:33,680
tempted by the idea that there will be

00:10:32,640 --> 00:10:35,839
all these guys you know all these

00:10:33,680 --> 00:10:38,640
vendors who will fix this problem for us

00:10:35,839 --> 00:10:40,000
and turn these you know bazaar from the

00:10:38,640 --> 00:10:42,079
you know picture number one

00:10:40,000 --> 00:10:43,279
into whole foods because it's not really

00:10:42,079 --> 00:10:46,320
great for our community

00:10:43,279 --> 00:10:48,399
we actually have to build that place

00:10:46,320 --> 00:10:49,200
that sort of like marketplace of ideas

00:10:48,399 --> 00:10:50,640
ourselves

00:10:49,200 --> 00:10:52,480
and then vendors absolutely should

00:10:50,640 --> 00:10:53,120
profit from it right you know without

00:10:52,480 --> 00:10:54,720
vendors

00:10:53,120 --> 00:10:56,560
uh it won't be a complete picture

00:10:54,720 --> 00:10:57,519
vendors are as part of the vendors are

00:10:56,560 --> 00:10:58,959
people too right

00:10:57,519 --> 00:11:01,360
they're as part of our community as

00:10:58,959 --> 00:11:03,360
anybody else

00:11:01,360 --> 00:11:04,640
so i keep i keep bringing up this point

00:11:03,360 --> 00:11:07,760
of you know using

00:11:04,640 --> 00:11:08,480
asf software well if you think about it

00:11:07,760 --> 00:11:12,160
then i think

00:11:08,480 --> 00:11:14,000
even if you go back to the uh

00:11:12,160 --> 00:11:16,000
formal definition of what asf is a

00:11:14,000 --> 00:11:17,440
nonprofit organization

00:11:16,000 --> 00:11:19,040
at the end of the day asf in the

00:11:17,440 --> 00:11:22,160
business of producing tar bolts

00:11:19,040 --> 00:11:23,839
that's what asf does we can be misled by

00:11:22,160 --> 00:11:25,519
the fact that you know sometimes there

00:11:23,839 --> 00:11:27,200
are like binary you know things in the

00:11:25,519 --> 00:11:28,800
tarball and those would be called binary

00:11:27,200 --> 00:11:31,440
convenience artifacts

00:11:28,800 --> 00:11:33,279
but really what asf does and it was set

00:11:31,440 --> 00:11:35,200
up for is producing a tarball

00:11:33,279 --> 00:11:37,120
so one way of using actually the only

00:11:35,200 --> 00:11:38,720
way of using an asf software would be

00:11:37,120 --> 00:11:41,279
this right you know like

00:11:38,720 --> 00:11:43,120
imagine that you wanted to have httpd so

00:11:41,279 --> 00:11:44,079
well you get a tarball over the release

00:11:43,120 --> 00:11:46,079
hopefully

00:11:44,079 --> 00:11:47,600
you untour it you know you configure it

00:11:46,079 --> 00:11:48,640
you make it you try to install it you

00:11:47,600 --> 00:11:51,680
get an error

00:11:48,640 --> 00:11:53,680
nothing works you know you're frustrated

00:11:51,680 --> 00:11:55,120
and you finally uh screw it you know i

00:11:53,680 --> 00:11:57,279
don't care about the version i'll just

00:11:55,120 --> 00:11:57,920
type you know sudo apt-get install httpd

00:11:57,279 --> 00:12:00,560
at least it's

00:11:57,920 --> 00:12:01,760
well integrated with my ubuntu system

00:12:00,560 --> 00:12:04,160
and it's kind of easy

00:12:01,760 --> 00:12:05,920
because when you do that it actually

00:12:04,160 --> 00:12:08,000
nicely asks you about like

00:12:05,920 --> 00:12:10,000
gee i noticed some configuration files

00:12:08,000 --> 00:12:11,440
in your file system would you like to

00:12:10,000 --> 00:12:13,120
keep them or would you like to get the

00:12:11,440 --> 00:12:14,560
ones that are coming from upstream you

00:12:13,120 --> 00:12:15,040
feel like you're being taken care of

00:12:14,560 --> 00:12:18,079
right

00:12:15,040 --> 00:12:20,160
and again it's not really an asf's fault

00:12:18,079 --> 00:12:21,600
there is nothing fundamentally that asf

00:12:20,160 --> 00:12:23,839
even could have done

00:12:21,600 --> 00:12:25,440
it gave you the set of building blocks

00:12:23,839 --> 00:12:27,120
and it happens to be that there was a

00:12:25,440 --> 00:12:28,720
vendor who was willing to take that set

00:12:27,120 --> 00:12:29,519
of building blocks at turning you know

00:12:28,720 --> 00:12:34,079
to

00:12:29,519 --> 00:12:35,920
turn it into a distribution uh but

00:12:34,079 --> 00:12:38,720
asf fundamentally is not in the business

00:12:35,920 --> 00:12:42,000
of producing a distribution

00:12:38,720 --> 00:12:43,920
so an ultimate way for me uh

00:12:42,000 --> 00:12:45,600
to use hadoop would be something like

00:12:43,920 --> 00:12:47,440
this right so there is

00:12:45,600 --> 00:12:49,680
uh hadoop after all is a distributed

00:12:47,440 --> 00:12:52,399
application right so i mean

00:12:49,680 --> 00:12:54,079
you can get installed something but it's

00:12:52,399 --> 00:12:55,920
not really what it's all about

00:12:54,079 --> 00:12:57,760
so i would actually like to be able to

00:12:55,920 --> 00:12:58,720
like big top launch cluster you know

00:12:57,760 --> 00:13:01,200
dash dash config

00:12:58,720 --> 00:13:02,160
you know hbs and get a fully functioning

00:13:01,200 --> 00:13:04,240
hbase cluster

00:13:02,160 --> 00:13:06,000
oh and by the way in that template i

00:13:04,240 --> 00:13:07,600
would also specify what kind of like

00:13:06,000 --> 00:13:09,120
operating system you know it would be

00:13:07,600 --> 00:13:11,200
right you know and that

00:13:09,120 --> 00:13:12,800
integration between the hbase packages

00:13:11,200 --> 00:13:14,160
and all the rest of the hadoop ecosystem

00:13:12,800 --> 00:13:15,839
would be you know and the operating

00:13:14,160 --> 00:13:18,320
system would be taken care of

00:13:15,839 --> 00:13:18,320
uh

00:13:19,360 --> 00:13:25,200
people actually ask me maybe i'm

00:13:22,720 --> 00:13:27,600
misled maybe we're there already i mean

00:13:25,200 --> 00:13:31,040
work kind of does that right

00:13:27,600 --> 00:13:32,720
well yes it does uh but not really

00:13:31,040 --> 00:13:34,240
that it's not what really i'm talking

00:13:32,720 --> 00:13:36,399
about right because what

00:13:34,240 --> 00:13:37,920
war really helps you with i mean war is

00:13:36,399 --> 00:13:38,240
essentially a development tool right you

00:13:37,920 --> 00:13:40,480
know

00:13:38,240 --> 00:13:42,000
it's again it's part of that ethos of

00:13:40,480 --> 00:13:43,839
asf to

00:13:42,000 --> 00:13:45,360
you know provide you with as many useful

00:13:43,839 --> 00:13:45,760
building blocks as possible and where is

00:13:45,360 --> 00:13:48,399
the

00:13:45,760 --> 00:13:49,839
absolutely cool useful building block

00:13:48,399 --> 00:13:50,399
it's just it's not a building block that

00:13:49,839 --> 00:13:52,320
i can

00:13:50,399 --> 00:13:54,880
you know successfully give to a devops

00:13:52,320 --> 00:13:56,639
person right a devops guy fundamentally

00:13:54,880 --> 00:13:58,079
has a very different view of the system

00:13:56,639 --> 00:13:58,959
it's a system view it's a sort of

00:13:58,079 --> 00:14:01,120
generalist view

00:13:58,959 --> 00:14:02,240
where worth slings you know jar files

00:14:01,120 --> 00:14:04,079
you know back and forth

00:14:02,240 --> 00:14:05,519
war really knows like you know where

00:14:04,079 --> 00:14:07,680
tarballs are you know

00:14:05,519 --> 00:14:09,519
it's all these developer oriented

00:14:07,680 --> 00:14:11,279
details that we take for granted but

00:14:09,519 --> 00:14:12,959
anybody who is coming to our community

00:14:11,279 --> 00:14:14,800
you know from from elsewhere

00:14:12,959 --> 00:14:16,560
it would be as silly as you know

00:14:14,800 --> 00:14:17,920
expecting anybody who is running a linux

00:14:16,560 --> 00:14:19,600
system understanding what dynamic

00:14:17,920 --> 00:14:21,120
linking is right you know like you just

00:14:19,600 --> 00:14:24,000
i mean you have to abstract it away if

00:14:21,120 --> 00:14:25,600
you want people to use your system

00:14:24,000 --> 00:14:27,440
so what are the key challenges i mean

00:14:25,600 --> 00:14:29,120
what separates us from what we have

00:14:27,440 --> 00:14:31,680
today

00:14:29,120 --> 00:14:33,199
uh and you know this ultimate ideal

00:14:31,680 --> 00:14:34,720
picture of just running a big top

00:14:33,199 --> 00:14:35,600
command a single big dom command and

00:14:34,720 --> 00:14:39,120
getting a cluster

00:14:35,600 --> 00:14:40,800
well i'll go

00:14:39,120 --> 00:14:42,480
you know through these things one by one

00:14:40,800 --> 00:14:43,920
but essentially

00:14:42,480 --> 00:14:45,519
it's a pretty it's a pretty big list

00:14:43,920 --> 00:14:47,760
right you know we are dealing with a

00:14:45,519 --> 00:14:49,440
really diverse set of components

00:14:47,760 --> 00:14:50,959
and i'll go into that in a minute but

00:14:49,440 --> 00:14:53,920
let me cover the other ones first

00:14:50,959 --> 00:14:55,600
so it's a high churn apis you know linux

00:14:53,920 --> 00:14:56,399
is a good example but to a point because

00:14:55,600 --> 00:14:59,040
with linux

00:14:56,399 --> 00:14:59,680
uh at least the apis you know arguably

00:14:59,040 --> 00:15:02,000
uh

00:14:59,680 --> 00:15:03,040
were fixed long before linux even

00:15:02,000 --> 00:15:04,880
appeared right

00:15:03,040 --> 00:15:06,959
so we had posix you know long before

00:15:04,880 --> 00:15:08,639
linux appeared and no linux is not a

00:15:06,959 --> 00:15:10,160
posix strictly speaking you know fully

00:15:08,639 --> 00:15:12,160
posix compliance system

00:15:10,160 --> 00:15:13,680
but these ipis were laid out and you

00:15:12,160 --> 00:15:15,600
know applications were developed to work

00:15:13,680 --> 00:15:18,800
against those apis and

00:15:15,600 --> 00:15:19,120
that reinforced you know how linux ended

00:15:18,800 --> 00:15:22,160
up

00:15:19,120 --> 00:15:23,839
evolving with hadoop we have no clue i

00:15:22,160 --> 00:15:25,680
mean with all this big data

00:15:23,839 --> 00:15:27,600
business we have no clue what the

00:15:25,680 --> 00:15:28,240
ultimate apis will end up being right

00:15:27,600 --> 00:15:29,839
you know

00:15:28,240 --> 00:15:31,600
we have some understanding but it's

00:15:29,839 --> 00:15:32,079
evolution it's not perfection right we

00:15:31,600 --> 00:15:34,160
don't

00:15:32,079 --> 00:15:35,440
we don't have a template for the system

00:15:34,160 --> 00:15:37,360
that we're building

00:15:35,440 --> 00:15:39,120
and what it means is in order to be part

00:15:37,360 --> 00:15:40,800
of this community you actually

00:15:39,120 --> 00:15:42,560
you really have to invest right you know

00:15:40,800 --> 00:15:45,279
you really have to invest time

00:15:42,560 --> 00:15:46,959
because you can just say well uh i have

00:15:45,279 --> 00:15:48,560
this application that i would like to

00:15:46,959 --> 00:15:50,160
develop for hadoop and i will

00:15:48,560 --> 00:15:51,920
never ever talk to the community hadoop

00:15:50,160 --> 00:15:53,519
community just like if i have an

00:15:51,920 --> 00:15:55,279
application that runs on linux i

00:15:53,519 --> 00:15:56,800
rarely talk to the linux kernel guys

00:15:55,279 --> 00:15:58,399
right you know unless i'm really into

00:15:56,800 --> 00:15:59,120
some heavy you know device drivers or

00:15:58,399 --> 00:16:01,440
whatnot like

00:15:59,120 --> 00:16:02,959
there's no really much need for me to

00:16:01,440 --> 00:16:04,639
talk to the linux kernel guys because i

00:16:02,959 --> 00:16:06,480
kind of know that they won't break me

00:16:04,639 --> 00:16:08,079
like the apis that i'm using are safe in

00:16:06,480 --> 00:16:10,160
the sense that you know

00:16:08,079 --> 00:16:11,839
it's so pervasive that if it breaks i

00:16:10,160 --> 00:16:13,279
mean like the whole world will end or

00:16:11,839 --> 00:16:15,279
something so there is a presumption that

00:16:13,279 --> 00:16:17,040
the apis are more or less stable

00:16:15,279 --> 00:16:18,480
uh hadoop is also asynchronous

00:16:17,040 --> 00:16:19,759
development cycles with all of the

00:16:18,480 --> 00:16:21,040
components but that's again that's not

00:16:19,759 --> 00:16:22,480
new i mean every single linux

00:16:21,040 --> 00:16:23,120
distribution has to deal with the same

00:16:22,480 --> 00:16:24,560
issue

00:16:23,120 --> 00:16:26,240
you know your linux kernel gets released

00:16:24,560 --> 00:16:27,120
on a different schedule from your gcc

00:16:26,240 --> 00:16:28,959
from your x

00:16:27,120 --> 00:16:30,880
from you know just about anything in the

00:16:28,959 --> 00:16:32,880
system uh

00:16:30,880 --> 00:16:35,279
combinatoric explosion of dependencies

00:16:32,880 --> 00:16:37,759
it also is not new in the linux

00:16:35,279 --> 00:16:39,040
uh but it's even worse with java because

00:16:37,759 --> 00:16:41,040
with linux it's a

00:16:39,040 --> 00:16:42,160
you know traditional unix operating

00:16:41,040 --> 00:16:43,920
system so

00:16:42,160 --> 00:16:45,920
it's a little bit more difficult to

00:16:43,920 --> 00:16:47,120
really go hog wild with your

00:16:45,920 --> 00:16:48,399
dependencies because you kind of like

00:16:47,120 --> 00:16:49,199
depend on what's installed on your

00:16:48,399 --> 00:16:52,079
system

00:16:49,199 --> 00:16:53,600
uh with java it's one may even download

00:16:52,079 --> 00:16:55,680
the way right you know you declare any

00:16:53,600 --> 00:16:57,519
kind of dependency and voila you get it

00:16:55,680 --> 00:16:58,800
the trouble is that you don't know what

00:16:57,519 --> 00:17:00,560
else you would be breaking because you

00:16:58,800 --> 00:17:02,160
know with java anything that you get on

00:17:00,560 --> 00:17:03,040
a class path you know through your

00:17:02,160 --> 00:17:05,839
dependency

00:17:03,040 --> 00:17:07,039
will also get on a class path of the guy

00:17:05,839 --> 00:17:09,039
who depends on you

00:17:07,039 --> 00:17:10,160
and then you would figure out like oh

00:17:09,039 --> 00:17:13,760
gee i

00:17:10,160 --> 00:17:15,520
want guava x and that guy wants guava y

00:17:13,760 --> 00:17:16,959
and by the way when i put x and y on the

00:17:15,520 --> 00:17:19,199
same class path

00:17:16,959 --> 00:17:20,400
it just breaks so all these things i

00:17:19,199 --> 00:17:22,240
mean

00:17:20,400 --> 00:17:23,760
you really have to have a single view of

00:17:22,240 --> 00:17:25,199
the system to

00:17:23,760 --> 00:17:26,880
harmonize all of these types of

00:17:25,199 --> 00:17:29,039
dependencies well

00:17:26,880 --> 00:17:29,919
i mentioned a couple times you know like

00:17:29,039 --> 00:17:32,080
maven java

00:17:29,919 --> 00:17:33,840
it is after all java based in a sense

00:17:32,080 --> 00:17:35,679
that even for that

00:17:33,840 --> 00:17:37,280
we don't have a good template of how the

00:17:35,679 --> 00:17:40,080
system should be

00:17:37,280 --> 00:17:41,760
managed if you look into linux and unix

00:17:40,080 --> 00:17:44,240
distributions today

00:17:41,760 --> 00:17:45,679
not a single agreement on how java

00:17:44,240 --> 00:17:47,120
software should be managed and java

00:17:45,679 --> 00:17:49,280
community by the way didn't help us

00:17:47,120 --> 00:17:51,760
either i mean all this like osgi

00:17:49,280 --> 00:17:52,400
nonsense i mean didn't help a single bit

00:17:51,760 --> 00:17:54,880
uh

00:17:52,400 --> 00:17:56,640
but it's only now it's like in 2013 it's

00:17:54,880 --> 00:17:58,320
only now that linux vendors finally are

00:17:56,640 --> 00:17:59,679
like oh gee

00:17:58,320 --> 00:18:01,200
looks like we have to deal with java

00:17:59,679 --> 00:18:02,559
after all we thought it would die but

00:18:01,200 --> 00:18:04,080
you know it didn't so now we have to

00:18:02,559 --> 00:18:05,600
deal with it so let's figure out where

00:18:04,080 --> 00:18:07,280
to put all of the jar files let's figure

00:18:05,600 --> 00:18:09,679
out how to construct a class path let's

00:18:07,280 --> 00:18:11,280
figure out how to have a system that can

00:18:09,679 --> 00:18:12,960
you know interface with maven so you

00:18:11,280 --> 00:18:13,679
don't just drag random bits from the

00:18:12,960 --> 00:18:15,360
internet

00:18:13,679 --> 00:18:17,440
you actually have a system view it's

00:18:15,360 --> 00:18:18,720
only now and again through big top i'm

00:18:17,440 --> 00:18:22,240
actually engaged in

00:18:18,720 --> 00:18:24,080
uh debian sort of ubuntu communities you

00:18:22,240 --> 00:18:25,360
know fedora communities a little bit

00:18:24,080 --> 00:18:27,600
and these are the questions that they're

00:18:25,360 --> 00:18:29,520
trying to answer the cool thing is

00:18:27,600 --> 00:18:31,440
we actually have a lot of a lot of

00:18:29,520 --> 00:18:33,280
advice or a lot of you know at least you

00:18:31,440 --> 00:18:34,720
know scars to show right so

00:18:33,280 --> 00:18:36,400
we can actually help them in a lot of

00:18:34,720 --> 00:18:38,080
ways and by the way

00:18:36,400 --> 00:18:39,679
that's the way that open source works

00:18:38,080 --> 00:18:41,039
right you know you cannot expect them to

00:18:39,679 --> 00:18:42,640
solve it for you like you can actually

00:18:41,039 --> 00:18:44,240
come to them and tell them like here are

00:18:42,640 --> 00:18:46,080
my use cases and here's what i expect to

00:18:44,240 --> 00:18:47,840
be happening

00:18:46,080 --> 00:18:49,200
but ultimately the biggest challenge

00:18:47,840 --> 00:18:51,360
that i see in hadoop is that it's a

00:18:49,200 --> 00:18:54,320
fundamentally distributed application

00:18:51,360 --> 00:18:57,360
and what i mean by that is uh it's a new

00:18:54,320 --> 00:18:59,520
breed of an application uh

00:18:57,360 --> 00:19:01,360
people tell me well httpd is kind of

00:18:59,520 --> 00:19:02,240
distributed as well i mean you throw

00:19:01,360 --> 00:19:03,760
like

00:19:02,240 --> 00:19:04,960
you know a couple dozen of them behind

00:19:03,760 --> 00:19:05,919
the load balancer and here's your

00:19:04,960 --> 00:19:08,000
distribution

00:19:05,919 --> 00:19:10,160
no it's not like you know it's a you

00:19:08,000 --> 00:19:12,000
know it's an embarrassingly distributed

00:19:10,160 --> 00:19:13,919
application that's what i call it http

00:19:12,000 --> 00:19:15,919
right you know it is unaware of its

00:19:13,919 --> 00:19:16,640
surroundings yet it functions like it's

00:19:15,919 --> 00:19:18,240
perfect

00:19:16,640 --> 00:19:20,320
it's not like hadoop is right you know

00:19:18,240 --> 00:19:21,200
in hadoop every component knows about

00:19:20,320 --> 00:19:23,919
everything else

00:19:21,200 --> 00:19:26,799
which is a perfect segue into what do we

00:19:23,919 --> 00:19:29,760
actually have to deal with

00:19:26,799 --> 00:19:30,799
so this is a very rough outline of

00:19:29,760 --> 00:19:32,480
components

00:19:30,799 --> 00:19:35,120
uh it's actually like have the

00:19:32,480 --> 00:19:36,799
components that we manage in big top

00:19:35,120 --> 00:19:38,160
but it gives you some idea right so like

00:19:36,799 --> 00:19:39,679
this this pervasive

00:19:38,160 --> 00:19:41,600
you know coordination service called

00:19:39,679 --> 00:19:44,799
zookeeper you know there is obviously

00:19:41,600 --> 00:19:45,679
hdfs on top of hdfs we have hbase yarn

00:19:44,799 --> 00:19:47,760
uzi

00:19:45,679 --> 00:19:49,600
big hive you know kind of sit you know

00:19:47,760 --> 00:19:52,559
slightly in between you know

00:19:49,600 --> 00:19:54,080
impala hugh is a you know overall ui on

00:19:52,559 --> 00:19:57,760
top of everything

00:19:54,080 --> 00:19:59,280
um people look at it and say well gee

00:19:57,760 --> 00:20:00,080
it's kind of like a lot but you know it

00:19:59,280 --> 00:20:01,840
looks simple

00:20:00,080 --> 00:20:03,679
like we understand what dependencies are

00:20:01,840 --> 00:20:05,520
so let's manage it

00:20:03,679 --> 00:20:07,360
no you don't that's about how

00:20:05,520 --> 00:20:10,880
dependencies look like

00:20:07,360 --> 00:20:12,640
uh why well because it happened

00:20:10,880 --> 00:20:14,640
and we're in the business of harmonizing

00:20:12,640 --> 00:20:17,280
it um

00:20:14,640 --> 00:20:18,640
but it's a jungle out there i mean this

00:20:17,280 --> 00:20:20,400
is the complete list of things that we

00:20:18,640 --> 00:20:22,080
actually manage in big top now

00:20:20,400 --> 00:20:23,919
that actually starts to look like a

00:20:22,080 --> 00:20:26,799
miniature linux distribution

00:20:23,919 --> 00:20:27,840
you know back in 95 right you know it's

00:20:26,799 --> 00:20:31,919
a pretty hefty list

00:20:27,840 --> 00:20:31,919
and if you look and uh look into this

00:20:32,840 --> 00:20:35,840
list

00:20:36,000 --> 00:20:41,840
look at it um there's all the apache

00:20:39,919 --> 00:20:45,280
software right you know

00:20:41,840 --> 00:20:47,520
it's great because apache is so so

00:20:45,280 --> 00:20:49,760
perfect that it actually provides us

00:20:47,520 --> 00:20:51,520
with all these components

00:20:49,760 --> 00:20:52,960
all we have to do is just integrate them

00:20:51,520 --> 00:20:53,919
now the trouble is that these components

00:20:52,960 --> 00:20:55,600
again like these

00:20:53,919 --> 00:20:57,200
these guys are just you know roaming

00:20:55,600 --> 00:20:58,799
through this you know flea market bazaar

00:20:57,200 --> 00:21:01,520
type of situation

00:20:58,799 --> 00:21:03,039
you know throwing you know f-bombs you

00:21:01,520 --> 00:21:03,600
know left and right you know not really

00:21:03,039 --> 00:21:05,520
like

00:21:03,600 --> 00:21:07,280
you know but there is there is some hope

00:21:05,520 --> 00:21:10,400
in there uh

00:21:07,280 --> 00:21:11,760
but before i actually jump into the you

00:21:10,400 --> 00:21:13,600
know content of my talk because

00:21:11,760 --> 00:21:14,960
it's all a preamble you know up to this

00:21:13,600 --> 00:21:16,480
point let me actually talk about

00:21:14,960 --> 00:21:17,919
dependencies because dependencies really

00:21:16,480 --> 00:21:20,880
get my blood boiling

00:21:17,919 --> 00:21:23,039
i mean it's an inferno i mean it's not

00:21:20,880 --> 00:21:24,159
even a jungle it's an inferno and my

00:21:23,039 --> 00:21:26,320
favorite example is

00:21:24,159 --> 00:21:28,720
hive i mean hive you will see would be

00:21:26,320 --> 00:21:30,559
my favorite example in a lot of these

00:21:28,720 --> 00:21:32,400
uh because it exemplifies the things

00:21:30,559 --> 00:21:35,679
that you know

00:21:32,400 --> 00:21:36,559
we have expertise in um not in the sense

00:21:35,679 --> 00:21:38,559
that hive is

00:21:36,559 --> 00:21:40,480
you know particularly bad citizen of the

00:21:38,559 --> 00:21:42,240
hadoop community it's just that it

00:21:40,480 --> 00:21:44,000
has to be integrated with quite a bit

00:21:42,240 --> 00:21:47,360
and the developers actually have a very

00:21:44,000 --> 00:21:49,840
sort of specialized view of their

00:21:47,360 --> 00:21:51,200
agenda which is great because it means

00:21:49,840 --> 00:21:54,400
that i don't have to

00:21:51,200 --> 00:21:55,039
solve a problem of sql engine on top of

00:21:54,400 --> 00:21:58,080
hadoop

00:21:55,039 --> 00:22:00,159
i know squad about it i mean like i know

00:21:58,080 --> 00:22:02,080
my sequel but how does it translate into

00:22:00,159 --> 00:22:03,679
mapreduce jobs i do not want to know

00:22:02,080 --> 00:22:05,840
what i do know is how to integrate it

00:22:03,679 --> 00:22:09,120
with the rest of the system

00:22:05,840 --> 00:22:10,559
now hive depends on hbase because it has

00:22:09,120 --> 00:22:13,120
this ability to you know

00:22:10,559 --> 00:22:14,880
use hbase as a backing store uh for

00:22:13,120 --> 00:22:16,640
tables not just you know hdf but

00:22:14,880 --> 00:22:18,159
obviously it depends on hdfs you know it

00:22:16,640 --> 00:22:21,440
also depends on my produce

00:22:18,159 --> 00:22:23,919
and if you download hive 0.8.1

00:22:21,440 --> 00:22:24,960
um applies to any hive i mean it's just

00:22:23,919 --> 00:22:27,840
a pretty good example

00:22:24,960 --> 00:22:28,640
uh in this version uh you will get a

00:22:27,840 --> 00:22:30,880
tarball

00:22:28,640 --> 00:22:33,520
and inside of that tarble you will get a

00:22:30,880 --> 00:22:35,840
couple of binary convenience artifacts

00:22:33,520 --> 00:22:37,120
and there will be a lib sub directory

00:22:35,840 --> 00:22:39,760
that is supposed to have

00:22:37,120 --> 00:22:41,600
jar files for things that have depend on

00:22:39,760 --> 00:22:43,039
so here's a million dollar question if i

00:22:41,600 --> 00:22:45,280
do ls on that

00:22:43,039 --> 00:22:46,720
stuff and by the way this is what hive

00:22:45,280 --> 00:22:49,679
declares is dependencies

00:22:46,720 --> 00:22:51,520
so like if you look at its uh build

00:22:49,679 --> 00:22:53,039
infrastructure which is iv based so you

00:22:51,520 --> 00:22:55,120
would have to look into iv files

00:22:53,039 --> 00:22:57,840
like that's the things that it actually

00:22:55,120 --> 00:23:01,600
wants to have as dependencies

00:22:57,840 --> 00:23:05,840
if i less i get this

00:23:01,600 --> 00:23:08,400
well first of all it's hbase 09089

00:23:05,840 --> 00:23:09,520
like that hbase didn't exist i mean i'm

00:23:08,400 --> 00:23:11,440
pretty sure like

00:23:09,520 --> 00:23:13,760
that was that was i don't know first of

00:23:11,440 --> 00:23:15,600
april fool's joke that you know stack

00:23:13,760 --> 00:23:18,480
put together because like that hb

00:23:15,600 --> 00:23:19,440
i i'm not aware of that hbase but the

00:23:18,480 --> 00:23:22,240
kicker is

00:23:19,440 --> 00:23:24,000
it's not just one log for j it's two for

00:23:22,240 --> 00:23:25,360
the price of one

00:23:24,000 --> 00:23:27,200
do you know what will happen when they

00:23:25,360 --> 00:23:29,039
appear on the class path no you don't

00:23:27,200 --> 00:23:31,039
neither do i but that's how the binary

00:23:29,039 --> 00:23:34,080
convenience artifact of hive looks like

00:23:31,039 --> 00:23:36,320
again nothing like it's like

00:23:34,080 --> 00:23:38,000
you could download any hadoop component

00:23:36,320 --> 00:23:39,600
and chances are these days by the way

00:23:38,000 --> 00:23:41,039
they would like ah screw it we're not

00:23:39,600 --> 00:23:42,159
providing binary convenience artifacts

00:23:41,039 --> 00:23:43,919
because it's too difficult

00:23:42,159 --> 00:23:46,320
but if they actually try to do that they

00:23:43,919 --> 00:23:49,520
will end up with something like this

00:23:46,320 --> 00:23:49,520
and the reason for that is

00:23:49,600 --> 00:23:54,559
we don't really have a good way

00:23:52,640 --> 00:23:56,559
of assuming a system's view we really

00:23:54,559 --> 00:23:57,600
don't know what our hive will be used

00:23:56,559 --> 00:24:01,279
with

00:23:57,600 --> 00:24:04,880
so i think by now

00:24:01,279 --> 00:24:06,480
i hope i success

00:24:04,880 --> 00:24:08,320
and effective enough to convince you

00:24:06,480 --> 00:24:10,080
that we at least have a problem so

00:24:08,320 --> 00:24:12,559
by the show of hands how many of you do

00:24:10,080 --> 00:24:18,559
think that we have a problem

00:24:12,559 --> 00:24:22,240
yes my my mission here is complete uh

00:24:18,559 --> 00:24:23,360
lessons so we've been doing big tall for

00:24:22,240 --> 00:24:27,200
about

00:24:23,360 --> 00:24:29,840
uh for about a year and a half by now

00:24:27,200 --> 00:24:31,039
actually you know we'll be pretty close

00:24:29,840 --> 00:24:34,240
to two years

00:24:31,039 --> 00:24:35,440
uh come this summer so big top went

00:24:34,240 --> 00:24:37,600
through the incubation period

00:24:35,440 --> 00:24:38,480
you know we are on a pretty rigorous

00:24:37,600 --> 00:24:39,840
release schedule

00:24:38,480 --> 00:24:42,000
like i told you i mean i want my

00:24:39,840 --> 00:24:43,919
marketplace to open you know 8 a.m and

00:24:42,000 --> 00:24:44,799
close to p.m so when a train release

00:24:43,919 --> 00:24:46,960
schedule

00:24:44,799 --> 00:24:48,640
we release every quarter you know what

00:24:46,960 --> 00:24:49,919
gets into a release gets into a release

00:24:48,640 --> 00:24:52,159
if it doesn't get into a release there

00:24:49,919 --> 00:24:54,799
will be next sunday it will open 8 a.m

00:24:52,159 --> 00:24:54,799
as scheduled

00:24:55,279 --> 00:24:59,520
we found out a bunch of stuff about

00:24:58,080 --> 00:25:01,520
hadoop communities

00:24:59,520 --> 00:25:02,960
about apache communities about open

00:25:01,520 --> 00:25:05,919
source in general

00:25:02,960 --> 00:25:07,120
uh that i thought i like yeah i was part

00:25:05,919 --> 00:25:09,840
of the linux

00:25:07,120 --> 00:25:11,919
movement i know how it's done like i i

00:25:09,840 --> 00:25:13,760
you know i contributed to debian so like

00:25:11,919 --> 00:25:16,880
yeah i know no i didn't

00:25:13,760 --> 00:25:19,120
so i'll share some of that now my first

00:25:16,880 --> 00:25:21,440
lesson is on origins of suffering

00:25:19,120 --> 00:25:23,200
and the origin of suffering i kid you

00:25:21,440 --> 00:25:25,679
not is attachment

00:25:23,200 --> 00:25:27,200
i mean it's it is because you get

00:25:25,679 --> 00:25:28,480
attached to your code and all of a

00:25:27,200 --> 00:25:32,720
sudden

00:25:28,480 --> 00:25:33,600
uh apache guys are actually very very

00:25:32,720 --> 00:25:35,679
nice guys

00:25:33,600 --> 00:25:37,360
in the sense that they want to help you

00:25:35,679 --> 00:25:38,240
like you get a project let's say it's

00:25:37,360 --> 00:25:40,480
hadoop right

00:25:38,240 --> 00:25:41,360
uh and they kind of provide you these

00:25:40,480 --> 00:25:42,880
scripts

00:25:41,360 --> 00:25:44,640
for managing relationships to the

00:25:42,880 --> 00:25:46,400
operating system you can kind of start

00:25:44,640 --> 00:25:47,919
the demons stop the demons you know get

00:25:46,400 --> 00:25:50,080
the status of the demons

00:25:47,919 --> 00:25:51,200
the trouble is that these scripts have

00:25:50,080 --> 00:25:53,520
been tested on

00:25:51,200 --> 00:25:55,120
one particular system that was a laptop

00:25:53,520 --> 00:25:57,120
a developer who actually committed the

00:25:55,120 --> 00:25:59,120
code nobody else tested it

00:25:57,120 --> 00:26:00,480
anywhere and if you try to like hook it

00:25:59,120 --> 00:26:01,919
up to the rest of the system it kind of

00:26:00,480 --> 00:26:03,440
breaks and all of a sudden you're like

00:26:01,919 --> 00:26:05,279
yeah well it was a good starting point

00:26:03,440 --> 00:26:06,720
but now let me improve it let me

00:26:05,279 --> 00:26:08,480
actually make it better

00:26:06,720 --> 00:26:09,600
uh you go back to the respective

00:26:08,480 --> 00:26:10,080
community and say you know in a very

00:26:09,600 --> 00:26:12,720
very

00:26:10,080 --> 00:26:14,320
friendly way you say like hey gee i mean

00:26:12,720 --> 00:26:15,039
the things that you're doing with pid

00:26:14,320 --> 00:26:17,120
files

00:26:15,039 --> 00:26:18,559
you really shouldn't be doing or the

00:26:17,120 --> 00:26:20,400
things that you're doing with log

00:26:18,559 --> 00:26:21,760
rotation like you're doing log rotation

00:26:20,400 --> 00:26:23,520
from inside the script that actually

00:26:21,760 --> 00:26:25,279
starts the daemons

00:26:23,520 --> 00:26:26,720
not the best idea because typically

00:26:25,279 --> 00:26:27,039
system administrators want to control

00:26:26,720 --> 00:26:28,640
their

00:26:27,039 --> 00:26:30,640
log rotation you know through system

00:26:28,640 --> 00:26:31,840
level means and what you get back is

00:26:30,640 --> 00:26:33,600
like

00:26:31,840 --> 00:26:35,600
don't tell me how to write my code i

00:26:33,600 --> 00:26:37,039
know how to write my code like that code

00:26:35,600 --> 00:26:38,000
is good i've been you telling me that

00:26:37,039 --> 00:26:39,919
that code is crap

00:26:38,000 --> 00:26:41,600
no way that code is crap and i think

00:26:39,919 --> 00:26:43,279
it's like you really shouldn't be

00:26:41,600 --> 00:26:46,240
attached to your code

00:26:43,279 --> 00:26:47,600
worse yet you don't get to you you don't

00:26:46,240 --> 00:26:49,120
want to be attached to the ill

00:26:47,600 --> 00:26:50,880
maintained code or the code that the

00:26:49,120 --> 00:26:53,039
community in general has no interest

00:26:50,880 --> 00:26:54,720
in so there was this big hoopla like you

00:26:53,039 --> 00:26:55,760
know hadoop doesn't have packaging

00:26:54,720 --> 00:26:57,760
infrastructure

00:26:55,760 --> 00:26:59,200
so developers again apache guys very

00:26:57,760 --> 00:27:01,120
nice guys you know they got together and

00:26:59,200 --> 00:27:02,559
it's like well let's provide packaging

00:27:01,120 --> 00:27:04,400
infrastructure you know so we can build

00:27:02,559 --> 00:27:06,559
debian and rpm packages from within the

00:27:04,400 --> 00:27:08,080
hadoop build the trouble with that

00:27:06,559 --> 00:27:10,159
approach is that there is like one

00:27:08,080 --> 00:27:11,279
dude in the community who got frustrated

00:27:10,159 --> 00:27:13,919
and all of a sudden you know there is

00:27:11,279 --> 00:27:15,679
this patch that now can build packages

00:27:13,919 --> 00:27:17,919
nobody else in the community has a

00:27:15,679 --> 00:27:18,799
slightest vested interest in maintaining

00:27:17,919 --> 00:27:21,200
that code

00:27:18,799 --> 00:27:23,279
that is just not how hadoop that is just

00:27:21,200 --> 00:27:24,799
not how the asf communities are even

00:27:23,279 --> 00:27:27,919
supposed to operate right you know

00:27:24,799 --> 00:27:29,840
it's like if your code doesn't have a

00:27:27,919 --> 00:27:31,919
vested interest in the community

00:27:29,840 --> 00:27:33,760
you might as well take it out of the

00:27:31,919 --> 00:27:36,320
project now because it will bitrate i

00:27:33,760 --> 00:27:38,240
can guarantee you it will bitrate

00:27:36,320 --> 00:27:40,320
but what i don't really understand is

00:27:38,240 --> 00:27:42,080
like why would anybody

00:27:40,320 --> 00:27:43,919
have attachments to that piece of code

00:27:42,080 --> 00:27:45,679
like i could understand me criticizing

00:27:43,919 --> 00:27:47,200
the guts of the hdfs like

00:27:45,679 --> 00:27:49,120
you know don't get me wrong like you

00:27:47,200 --> 00:27:51,120
know there's some attachment right

00:27:49,120 --> 00:27:53,039
but that code like that code that will

00:27:51,120 --> 00:27:53,760
bitrot anyway why would you get attached

00:27:53,039 --> 00:27:55,600
to it you know

00:27:53,760 --> 00:27:57,919
offload it to somebody like big top

00:27:55,600 --> 00:27:59,360
offload it to the guys who actually

00:27:57,919 --> 00:28:01,279
you know we kind of like run on

00:27:59,360 --> 00:28:02,240
gazillion of different linuxes today you

00:28:01,279 --> 00:28:04,240
know we run

00:28:02,240 --> 00:28:05,520
integration tests you know at least

00:28:04,240 --> 00:28:07,039
chances are that if

00:28:05,520 --> 00:28:09,279
anything breaks we will know this at

00:28:07,039 --> 00:28:09,279
least

00:28:09,440 --> 00:28:12,799
another good lesson was you really

00:28:11,679 --> 00:28:14,240
shouldn't second guess you

00:28:12,799 --> 00:28:16,000
second guess your users and there's a

00:28:14,240 --> 00:28:18,559
lot of tendency i mean like where all

00:28:16,000 --> 00:28:20,720
opinions are us right you know we know

00:28:18,559 --> 00:28:22,399
how the software is supposed to be used

00:28:20,720 --> 00:28:24,720
but what you discover when you make

00:28:22,399 --> 00:28:28,840
software easier to be used

00:28:24,720 --> 00:28:30,799
uh is you just dramatically expand your

00:28:28,840 --> 00:28:33,440
community

00:28:30,799 --> 00:28:34,159
and when that happens all sorts of

00:28:33,440 --> 00:28:35,600
people

00:28:34,159 --> 00:28:38,159
who are not really programmers i mean

00:28:35,600 --> 00:28:39,360
they're not really guys who write code

00:28:38,159 --> 00:28:41,760
day in and day out

00:28:39,360 --> 00:28:42,960
they now have a way of using your

00:28:41,760 --> 00:28:44,399
software which is great by the way

00:28:42,960 --> 00:28:46,960
because you want as big community as

00:28:44,399 --> 00:28:49,200
possible i mean that what helps you

00:28:46,960 --> 00:28:50,720
but then you get into a situation where

00:28:49,200 --> 00:28:52,559
they are starting to use your software

00:28:50,720 --> 00:28:55,200
in a way that you were not really

00:28:52,559 --> 00:28:56,240
prepared to deal with and you get kind

00:28:55,200 --> 00:28:58,399
of like you you get

00:28:56,240 --> 00:29:00,080
attached to the fact that you had this

00:28:58,399 --> 00:29:00,960
perfect idea of how the software was

00:29:00,080 --> 00:29:02,399
supposed to use

00:29:00,960 --> 00:29:03,840
and now somebody else is coming to you

00:29:02,399 --> 00:29:05,440
with the use case that is completely out

00:29:03,840 --> 00:29:09,520
of the left field it's like just

00:29:05,440 --> 00:29:09,520
dude what are you doing with my software

00:29:09,600 --> 00:29:12,960
if we don't embrace all these dudes who

00:29:11,440 --> 00:29:15,760
are doing weird weird stuff

00:29:12,960 --> 00:29:15,760
with the software

00:29:20,960 --> 00:29:23,840
we don't have a chance of growing the

00:29:22,320 --> 00:29:24,960
community to the size of let's say a

00:29:23,840 --> 00:29:26,799
linux community or

00:29:24,960 --> 00:29:28,640
you know for that matter even open

00:29:26,799 --> 00:29:29,279
office community right we actually have

00:29:28,640 --> 00:29:31,360
to

00:29:29,279 --> 00:29:34,080
allow people use software in a way

00:29:31,360 --> 00:29:36,159
that's relevant to them

00:29:34,080 --> 00:29:37,120
we also have to allow them to have a

00:29:36,159 --> 00:29:39,200
voice

00:29:37,120 --> 00:29:40,320
in some type of a community that would

00:29:39,200 --> 00:29:42,480
be in charge of

00:29:40,320 --> 00:29:43,760
curating their use cases that would be

00:29:42,480 --> 00:29:46,000
in charge of sort of

00:29:43,760 --> 00:29:47,840
helping them to get to know each other

00:29:46,000 --> 00:29:49,440
right and again i would argue that

00:29:47,840 --> 00:29:50,240
something like big top would be such a

00:29:49,440 --> 00:29:53,120
community

00:29:50,240 --> 00:29:53,600
you don't really want to burden hadoop

00:29:53,120 --> 00:29:55,520
guys

00:29:53,600 --> 00:29:56,640
with every little detail of how you're

00:29:55,520 --> 00:29:59,120
hooking hadoop to

00:29:56,640 --> 00:30:01,360
windows or you know solaris right there

00:29:59,120 --> 00:30:04,880
has to be a place where that agenda gets

00:30:01,360 --> 00:30:06,080
gets served another idea that we

00:30:04,880 --> 00:30:09,039
discovered was

00:30:06,080 --> 00:30:10,000
it really is very very uh sort of easy

00:30:09,039 --> 00:30:13,120
to say

00:30:10,000 --> 00:30:14,720
but not necessarily easy to follow you

00:30:13,120 --> 00:30:17,039
want to provide capabilities

00:30:14,720 --> 00:30:18,080
not policies right you want to basically

00:30:17,039 --> 00:30:20,240
and that's actually where apache

00:30:18,080 --> 00:30:22,399
software in general is really good

00:30:20,240 --> 00:30:24,240
uh it gives you building blocks but we

00:30:22,399 --> 00:30:25,200
should make it even more explicit right

00:30:24,240 --> 00:30:27,200
you know we should

00:30:25,200 --> 00:30:28,880
admit that what we are what we are

00:30:27,200 --> 00:30:31,360
releasing what we are putting out

00:30:28,880 --> 00:30:32,799
is a building block that will be used in

00:30:31,360 --> 00:30:36,000
all sorts of different ways

00:30:32,799 --> 00:30:38,159
and as flexible as we can make it

00:30:36,000 --> 00:30:40,399
you know all the hadoop guys all the

00:30:38,159 --> 00:30:41,679
hive guys all the hbase guys if they can

00:30:40,399 --> 00:30:43,360
put enough hooks

00:30:41,679 --> 00:30:45,679
in place to make it as flexible as

00:30:43,360 --> 00:30:48,080
possible it means that

00:30:45,679 --> 00:30:50,799
there will be less pressure on them to

00:30:48,080 --> 00:30:52,640
fix things that break when the software

00:30:50,799 --> 00:30:55,760
gets used not in quite the way that they

00:30:52,640 --> 00:30:59,279
envisioned it to be used uh and finally

00:30:55,760 --> 00:31:02,399
very you know easy advice uh i think it

00:30:59,279 --> 00:31:03,840
makes sense and pays off for the

00:31:02,399 --> 00:31:05,760
upstream communities to focus on

00:31:03,840 --> 00:31:08,159
specialization

00:31:05,760 --> 00:31:11,120
uh but to allow customization right it's

00:31:08,159 --> 00:31:14,399
like be a specialist but realize that

00:31:11,120 --> 00:31:14,399
you don't know your users

00:31:15,919 --> 00:31:20,799
next it kind of comes you to you as a

00:31:19,039 --> 00:31:21,360
surprise when you are trying to do good

00:31:20,799 --> 00:31:24,240
things

00:31:21,360 --> 00:31:25,679
but they don't quite pay off you know

00:31:24,240 --> 00:31:28,000
people basically tell you go away

00:31:25,679 --> 00:31:29,600
we know it better and at some point you

00:31:28,000 --> 00:31:30,000
kind of have to admit you cannot really

00:31:29,600 --> 00:31:32,880
make

00:31:30,000 --> 00:31:34,320
them do it whatever them means and

00:31:32,880 --> 00:31:35,760
whatever it is

00:31:34,320 --> 00:31:37,840
so first of all don't expect common

00:31:35,760 --> 00:31:38,799
dependencies you remember that example

00:31:37,840 --> 00:31:41,200
that i gave you

00:31:38,799 --> 00:31:42,640
about log4j right you can come to the

00:31:41,200 --> 00:31:44,080
respective community and say like let's

00:31:42,640 --> 00:31:46,960
harmonize it

00:31:44,080 --> 00:31:48,080
uh you can be sort of a little sneaky

00:31:46,960 --> 00:31:49,519
about it and say like

00:31:48,080 --> 00:31:50,880
here's a particular version that i'm

00:31:49,519 --> 00:31:52,159
interested in right you know you don't

00:31:50,880 --> 00:31:53,120
have to disclose like all of your

00:31:52,159 --> 00:31:55,279
reasoning

00:31:53,120 --> 00:31:56,880
and if they're fine with it well you win

00:31:55,279 --> 00:31:57,600
i mean like that's that's fine but if

00:31:56,880 --> 00:31:59,840
they are not

00:31:57,600 --> 00:32:01,679
don't try to convince them that that is

00:31:59,840 --> 00:32:02,799
indeed the version that needs to be used

00:32:01,679 --> 00:32:04,960
because it's not

00:32:02,799 --> 00:32:06,480
i could bet you money that there will be

00:32:04,960 --> 00:32:07,840
as many versions as there are people

00:32:06,480 --> 00:32:09,840
trying to use software

00:32:07,840 --> 00:32:11,600
so the version that you arguing for is

00:32:09,840 --> 00:32:14,799
just the one that's useful to you but

00:32:11,600 --> 00:32:16,640
may not necessarily be useful to them

00:32:14,799 --> 00:32:18,159
and don't expect agreement on use cases

00:32:16,640 --> 00:32:21,200
even if you tell them that you know

00:32:18,159 --> 00:32:23,039
gee let's not use log4j let's use some

00:32:21,200 --> 00:32:24,480
other logging facility right you know

00:32:23,039 --> 00:32:25,760
because again like you have that agenda

00:32:24,480 --> 00:32:27,200
that it will integrate better with the

00:32:25,760 --> 00:32:29,840
rest of the system

00:32:27,200 --> 00:32:31,679
all you can ask them is for plugability

00:32:29,840 --> 00:32:32,960
i mean that's how open software works

00:32:31,679 --> 00:32:34,799
right you know you can

00:32:32,960 --> 00:32:36,159
ask them nicely or better yet submit a

00:32:34,799 --> 00:32:38,399
patch to make it pluggable

00:32:36,159 --> 00:32:40,320
you can't really tell them how to use it

00:32:38,399 --> 00:32:42,080
right their community is their community

00:32:40,320 --> 00:32:44,399
just as much as they can hotels

00:32:42,080 --> 00:32:46,080
you know the guys in big top that you

00:32:44,399 --> 00:32:47,519
know there has to be a certain way of

00:32:46,080 --> 00:32:50,720
using hyphen that's it

00:32:47,519 --> 00:32:51,120
the reverse is true as well and as i

00:32:50,720 --> 00:32:53,840
said

00:32:51,120 --> 00:32:56,159
don't ask offer i mean offer patches

00:32:53,840 --> 00:32:58,240
patches are way easier to argue with

00:32:56,159 --> 00:33:00,480
than ideas random ideas on the mailing

00:32:58,240 --> 00:33:00,480
list

00:33:02,159 --> 00:33:06,240
and patches i mean by and large the kind

00:33:04,880 --> 00:33:08,720
of patches i'm talking about they don't

00:33:06,240 --> 00:33:10,640
take that much time to produce

00:33:08,720 --> 00:33:12,159
so my favorite example is you know a

00:33:10,640 --> 00:33:13,760
silly thing a build system right you

00:33:12,159 --> 00:33:15,600
know most of the projects in hadoop

00:33:13,760 --> 00:33:19,360
system are maven based projects

00:33:15,600 --> 00:33:22,640
uh so when they start

00:33:19,360 --> 00:33:25,120
they typically are very sort of

00:33:22,640 --> 00:33:26,640
uh rigid in the dependencies and

00:33:25,120 --> 00:33:29,440
versioning and everything else in the

00:33:26,640 --> 00:33:31,039
um pawn file so i'm giving you an

00:33:29,440 --> 00:33:32,559
example of a maven based you know sort

00:33:31,039 --> 00:33:34,080
of project that uses a font file and

00:33:32,559 --> 00:33:35,120
declares dependency in this particular

00:33:34,080 --> 00:33:36,720
way

00:33:35,120 --> 00:33:39,279
uh first of all you know first thing

00:33:36,720 --> 00:33:42,480
that you can do you can at least

00:33:39,279 --> 00:33:42,480
make it uh

00:33:43,440 --> 00:33:47,279
tweakable so you can put this dollar

00:33:46,320 --> 00:33:48,960
sign in here right

00:33:47,279 --> 00:33:50,880
and you know it's a trivial change so

00:33:48,960 --> 00:33:52,320
people would be like it's a dollar sign

00:33:50,880 --> 00:33:53,279
you know we have a property that is

00:33:52,320 --> 00:33:57,120
defaults to the

00:33:53,279 --> 00:33:58,960
you know uh value that we expect

00:33:57,120 --> 00:34:00,159
and if people want to tweak it so it's

00:33:58,960 --> 00:34:03,519
fine yeah

00:34:00,159 --> 00:34:07,039
not a big deal uh

00:34:03,519 --> 00:34:09,040
next line optional is true it means that

00:34:07,039 --> 00:34:11,119
yes you want this dependency for your

00:34:09,040 --> 00:34:12,480
project but you really don't

00:34:11,119 --> 00:34:14,159
because you know the reason the

00:34:12,480 --> 00:34:15,919
dependency is there is because you want

00:34:14,159 --> 00:34:17,839
to be as self-contained as possible for

00:34:15,919 --> 00:34:20,800
things like let's say unit tests right

00:34:17,839 --> 00:34:22,079
so age base just to give you an example

00:34:20,800 --> 00:34:24,079
depends on hdfs

00:34:22,079 --> 00:34:26,240
so hbase obviously needs to run unit

00:34:24,079 --> 00:34:27,200
tests on top of hdfs and needs a

00:34:26,240 --> 00:34:30,720
particular version of

00:34:27,200 --> 00:34:32,159
hdfs but anybody who depends on age base

00:34:30,720 --> 00:34:33,679
might not necessarily need the exact

00:34:32,159 --> 00:34:37,119
same version of hbase

00:34:33,679 --> 00:34:39,040
hdfs even hbase itself sort of like that

00:34:37,119 --> 00:34:40,560
particular version

00:34:39,040 --> 00:34:43,359
could be different it's just what they

00:34:40,560 --> 00:34:47,280
use in their project

00:34:43,359 --> 00:34:50,320
if you want to build artifacts that are

00:34:47,280 --> 00:34:52,240
specifically designed to work with

00:34:50,320 --> 00:34:54,240
certain versions of you know components

00:34:52,240 --> 00:34:55,440
underneath so again a good example here

00:34:54,240 --> 00:34:59,760
is

00:34:55,440 --> 00:35:02,160
hbase hbase depends on hdfs

00:34:59,760 --> 00:35:03,920
but hdfs these days come from two

00:35:02,160 --> 00:35:04,880
flavors of hadoop hadoop one and hadoop

00:35:03,920 --> 00:35:07,440
two

00:35:04,880 --> 00:35:08,880
there are slight sort of i wouldn't call

00:35:07,440 --> 00:35:10,640
it incompatibilities but there are

00:35:08,880 --> 00:35:11,359
slight differences that are relevant to

00:35:10,640 --> 00:35:13,280
hbase

00:35:11,359 --> 00:35:15,599
so you actually have to recompile hbase

00:35:13,280 --> 00:35:17,359
two times one you know to work with

00:35:15,599 --> 00:35:19,680
and want to work with hadoop too and

00:35:17,359 --> 00:35:21,440
today if you go to maven central the

00:35:19,680 --> 00:35:22,720
only version of age-based artifact that

00:35:21,440 --> 00:35:23,520
you would find has been compiled with

00:35:22,720 --> 00:35:25,520
hadoop one

00:35:23,520 --> 00:35:26,640
if you were to pull that artifact you

00:35:25,520 --> 00:35:28,160
know from maven

00:35:26,640 --> 00:35:30,720
and use it in a project that depends on

00:35:28,160 --> 00:35:32,800
hadoop 2 you will fail so the way to go

00:35:30,720 --> 00:35:34,480
around it is well produce two

00:35:32,800 --> 00:35:36,320
versions of hbase right you know help

00:35:34,480 --> 00:35:37,920
them help their respective community

00:35:36,320 --> 00:35:39,520
be flexible enough and that's where this

00:35:37,920 --> 00:35:41,760
idea of a classifier might come

00:35:39,520 --> 00:35:43,119
come in handy help them publish as many

00:35:41,760 --> 00:35:45,520
artifacts as you can

00:35:43,119 --> 00:35:46,960
don't tell them like don't don't just

00:35:45,520 --> 00:35:50,160
you know go and tell them

00:35:46,960 --> 00:35:51,599
offer them something so embrace

00:35:50,160 --> 00:35:52,880
asynchronous nature of the software

00:35:51,599 --> 00:35:55,040
development cycle

00:35:52,880 --> 00:35:56,800
uh don't expect flag days don't expect

00:35:55,040 --> 00:35:58,160
that everybody will catch on to the next

00:35:56,800 --> 00:36:00,320
version of hadoop

00:35:58,160 --> 00:36:01,599
you know every single component that

00:36:00,320 --> 00:36:02,960
sits on top of hadoop will have a

00:36:01,599 --> 00:36:04,000
release just in time you know for the

00:36:02,960 --> 00:36:06,079
next hadoop guys

00:36:04,000 --> 00:36:08,160
you know for the next release of hadoop

00:36:06,079 --> 00:36:10,480
don't expect agreement on releases

00:36:08,160 --> 00:36:12,000
and do practice what we've come to know

00:36:10,480 --> 00:36:14,480
as last known good

00:36:12,000 --> 00:36:16,079
build which tells you that there were a

00:36:14,480 --> 00:36:17,280
lot of russians involved if you look at

00:36:16,079 --> 00:36:20,880
the acronym

00:36:17,280 --> 00:36:23,119
but it essentially means that you start

00:36:20,880 --> 00:36:24,839
with a stable version of

00:36:23,119 --> 00:36:26,800
a set of components that's what big top

00:36:24,839 --> 00:36:29,440
manages

00:36:26,800 --> 00:36:31,920
and then what you do next is for the

00:36:29,440 --> 00:36:33,040
next upcoming release of every single

00:36:31,920 --> 00:36:36,240
component

00:36:33,040 --> 00:36:38,720
you take a stable core

00:36:36,240 --> 00:36:38,720
right here

00:36:39,599 --> 00:36:45,200
and you replace just one component in it

00:36:42,640 --> 00:36:47,359
because you know that this thing was

00:36:45,200 --> 00:36:50,240
tested the hell out of

00:36:47,359 --> 00:36:51,680
so if anything breaks in that picture on

00:36:50,240 --> 00:36:55,280
the right

00:36:51,680 --> 00:36:56,079
you it probably at least gives you a

00:36:55,280 --> 00:36:58,560
hint

00:36:56,079 --> 00:37:00,480
that you need to start uh looking into

00:36:58,560 --> 00:37:01,920
the component b

00:37:00,480 --> 00:37:03,839
and maybe it will just you know you will

00:37:01,920 --> 00:37:05,119
discover through the process of you know

00:37:03,839 --> 00:37:06,880
elimination that it is actually

00:37:05,119 --> 00:37:08,560
incompatibility in something else but at

00:37:06,880 --> 00:37:11,599
least you know the entry point

00:37:08,560 --> 00:37:13,520
so if you have a stable stack or a

00:37:11,599 --> 00:37:15,200
stable distribution

00:37:13,520 --> 00:37:17,040
and you want to rev up a single

00:37:15,200 --> 00:37:17,920
component just rev up a single component

00:37:17,040 --> 00:37:20,320
even though you

00:37:17,920 --> 00:37:21,680
yourself know that by the end of the day

00:37:20,320 --> 00:37:23,359
there will be a flag day

00:37:21,680 --> 00:37:24,800
where all of these guys will have to rev

00:37:23,359 --> 00:37:26,160
up so you will end up having a

00:37:24,800 --> 00:37:29,520
distribution with b

00:37:26,160 --> 00:37:32,640
22 d 44 c 3 33 a

00:37:29,520 --> 00:37:34,720
uh 11. do it independently

00:37:32,640 --> 00:37:36,400
uh practice a less known good build

00:37:34,720 --> 00:37:37,440
change of the you know change of the one

00:37:36,400 --> 00:37:39,760
component and you can pull that

00:37:37,440 --> 00:37:42,000
component out of a trunk or a branch

00:37:39,760 --> 00:37:43,520
of the stuff that the guys upstream are

00:37:42,000 --> 00:37:44,240
working on you don't even have to tell

00:37:43,520 --> 00:37:46,480
them

00:37:44,240 --> 00:37:48,000
you will tell them through the magic of

00:37:46,480 --> 00:37:49,839
jira you would be like

00:37:48,000 --> 00:37:51,839
gee guys you know all of a sudden this

00:37:49,839 --> 00:37:52,480
stuff breaks and it was like thank you

00:37:51,839 --> 00:37:54,000
because

00:37:52,480 --> 00:37:56,960
you know that's a feedback that they can

00:37:54,000 --> 00:37:58,480
actually do something with

00:37:56,960 --> 00:38:00,240
and finally that's that's that's the

00:37:58,480 --> 00:38:02,240
final lesson that i would

00:38:00,240 --> 00:38:04,079
like to share with you make yourself

00:38:02,240 --> 00:38:05,040
indispensable you know first of all be

00:38:04,079 --> 00:38:07,520
nice i mean like

00:38:05,040 --> 00:38:09,200
we're all here to work on the apache

00:38:07,520 --> 00:38:10,560
software let's just admit it i mean like

00:38:09,200 --> 00:38:12,240
yes we have you know certain

00:38:10,560 --> 00:38:13,440
affiliations and certain likes and

00:38:12,240 --> 00:38:15,440
dislikes but let's

00:38:13,440 --> 00:38:18,400
check it out you know at the door let's

00:38:15,440 --> 00:38:19,280
just be nice to each other uh do provide

00:38:18,400 --> 00:38:20,560
glue code

00:38:19,280 --> 00:38:22,160
so if you're working on an

00:38:20,560 --> 00:38:23,520
infrastructure or you know integration

00:38:22,160 --> 00:38:25,359
projects such as big top

00:38:23,520 --> 00:38:26,800
a glucose is really important because

00:38:25,359 --> 00:38:27,359
there is something that you can give to

00:38:26,800 --> 00:38:29,599
other people

00:38:27,359 --> 00:38:31,520
and say like gee i just made your life

00:38:29,599 --> 00:38:33,119
easier all of a sudden you can launch a

00:38:31,520 --> 00:38:35,520
cluster with a single command because my

00:38:33,119 --> 00:38:37,680
glue code makes it possible

00:38:35,520 --> 00:38:39,440
do provide tons of automation and i'll

00:38:37,680 --> 00:38:42,480
give you a little bit of a demo

00:38:39,440 --> 00:38:44,000
uh you know on that and do provide

00:38:42,480 --> 00:38:46,640
missing testing i mean these are

00:38:44,000 --> 00:38:47,119
very very crucial ideas because testing

00:38:46,640 --> 00:38:49,359
is

00:38:47,119 --> 00:38:50,800
the currency in the open source that you

00:38:49,359 --> 00:38:54,000
can bribe other peoples with

00:38:50,800 --> 00:38:56,560
right you know all of us

00:38:54,000 --> 00:38:57,119
we all are developers we hate testing

00:38:56,560 --> 00:38:58,960
yet

00:38:57,119 --> 00:39:00,240
we love the feedback that we get from

00:38:58,960 --> 00:39:02,400
testing so there's this

00:39:00,240 --> 00:39:04,480
dissonance right you know like we we we

00:39:02,400 --> 00:39:06,720
don't really like to do it but we'll

00:39:04,480 --> 00:39:07,760
love when somebody else do it so the

00:39:06,720 --> 00:39:09,599
best thing that an

00:39:07,760 --> 00:39:12,720
uh integration project can bribe

00:39:09,599 --> 00:39:16,000
upstream with is integration testing

00:39:12,720 --> 00:39:17,599
uh and by all means

00:39:16,000 --> 00:39:18,960
it doesn't mean when i say that you

00:39:17,599 --> 00:39:19,520
don't have to tell them about the fact

00:39:18,960 --> 00:39:21,839
that you're

00:39:19,520 --> 00:39:23,359
you know testing them it doesn't mean

00:39:21,839 --> 00:39:24,560
that you really don't have to talk to

00:39:23,359 --> 00:39:25,839
them ever

00:39:24,560 --> 00:39:28,160
do participate in the upstream

00:39:25,839 --> 00:39:29,599
communities because that's how you can

00:39:28,160 --> 00:39:31,200
influence what happens in there you

00:39:29,599 --> 00:39:33,839
cannot guarantee that it will but at

00:39:31,200 --> 00:39:36,560
least you will have a voice

00:39:33,839 --> 00:39:37,359
so on the note of uh testing on

00:39:36,560 --> 00:39:40,079
automation

00:39:37,359 --> 00:39:41,119
let me actually show you uh what we do

00:39:40,079 --> 00:39:43,200
in big top

00:39:41,119 --> 00:39:44,400
so in big top we have a jenkins which is

00:39:43,200 --> 00:39:46,079
you know continuous

00:39:44,400 --> 00:39:47,839
integration infrastructure that

00:39:46,079 --> 00:39:49,440
essentially builds the next release of

00:39:47,839 --> 00:39:50,720
big top you know continuously so it's

00:39:49,440 --> 00:39:53,839
called big top trunk

00:39:50,720 --> 00:39:57,760
it builds all of the components uh

00:39:53,839 --> 00:39:59,680
finally it produces the repositories for

00:39:57,760 --> 00:40:00,880
uh all of the linux operating systems

00:39:59,680 --> 00:40:02,640
that we depend on

00:40:00,880 --> 00:40:04,800
so these are actual repositories that

00:40:02,640 --> 00:40:06,560
you can yum install from apt-get install

00:40:04,800 --> 00:40:11,599
from zipper install from

00:40:06,560 --> 00:40:14,319
you know just about anything yes

00:40:11,599 --> 00:40:14,319
oh okay sure

00:40:15,839 --> 00:40:22,640
it's better uh

00:40:20,480 --> 00:40:24,560
better yet we actually use those

00:40:22,640 --> 00:40:26,319
repositories ourselves

00:40:24,560 --> 00:40:27,839
so you will see that we run you know

00:40:26,319 --> 00:40:30,720
package tests uh

00:40:27,839 --> 00:40:31,680
so these are tests that are designed to

00:40:30,720 --> 00:40:34,960
you know

00:40:31,680 --> 00:40:36,400
uh exercise the entire distribution of

00:40:34,960 --> 00:40:37,680
big top that we've just built every

00:40:36,400 --> 00:40:39,040
single night and you would see that you

00:40:37,680 --> 00:40:39,760
know we have a few of them failing right

00:40:39,040 --> 00:40:43,200
now

00:40:39,760 --> 00:40:46,000
uh which we will fix hopefully uh

00:40:43,200 --> 00:40:46,000
we also

00:40:46,319 --> 00:40:53,680
we also provide uh things like vms

00:40:50,839 --> 00:40:58,000
um let me see

00:40:53,680 --> 00:40:58,000
the keeper yes right here

00:40:58,480 --> 00:41:03,040
so again because it's all automated it

00:41:01,280 --> 00:41:04,640
doesn't cost us anything right the only

00:41:03,040 --> 00:41:08,000
cost there is involved

00:41:04,640 --> 00:41:09,760
is actually we are running it on ec2 and

00:41:08,000 --> 00:41:11,200
that's a you know sticking point between

00:41:09,760 --> 00:41:12,480
sort of like what i would like to do

00:41:11,200 --> 00:41:13,200
with apache infrastructure and apache

00:41:12,480 --> 00:41:14,720
infra team

00:41:13,200 --> 00:41:16,800
because we are very special in the sense

00:41:14,720 --> 00:41:17,920
that we are in the business of spinning

00:41:16,800 --> 00:41:19,520
vms constantly

00:41:17,920 --> 00:41:21,200
and you know getting different linux

00:41:19,520 --> 00:41:23,119
distributions available to us

00:41:21,200 --> 00:41:24,800
apache info team is just not staffed

00:41:23,119 --> 00:41:25,680
adequately to provide that level of

00:41:24,800 --> 00:41:28,560
flexibility

00:41:25,680 --> 00:41:30,079
my only hope is that uh now since you

00:41:28,560 --> 00:41:32,319
know cloud stack is part of the

00:41:30,079 --> 00:41:33,680
apache family we can sort of eat our own

00:41:32,319 --> 00:41:34,079
dog food and maybe have you know the

00:41:33,680 --> 00:41:36,079
same

00:41:34,079 --> 00:41:37,599
sort of deployment of cloud stack uh

00:41:36,079 --> 00:41:38,640
that would mimic what we are getting

00:41:37,599 --> 00:41:40,720
from ec2

00:41:38,640 --> 00:41:42,000
but again because it's all on ec2 and

00:41:40,720 --> 00:41:43,680
the only cost involved

00:41:42,000 --> 00:41:45,680
is you know cloudera being sort of nice

00:41:43,680 --> 00:41:47,359
enough to point out bucks for paying you

00:41:45,680 --> 00:41:49,760
know for ec2 time

00:41:47,359 --> 00:41:51,920
uh we can automate just about anything

00:41:49,760 --> 00:41:54,720
so we automate creation of the vms

00:41:51,920 --> 00:41:56,480
so if you're a developer who don't even

00:41:54,720 --> 00:41:58,240
like you don't even have a linux system

00:41:56,480 --> 00:41:59,680
you have let's say windows laptop well

00:41:58,240 --> 00:42:02,240
at least you can get our

00:41:59,680 --> 00:42:03,760
vm and test you know the hadoop or

00:42:02,240 --> 00:42:05,920
whatever it is that you're interested in

00:42:03,760 --> 00:42:07,280
we're making it easier for you to get

00:42:05,920 --> 00:42:09,599
the hands on the software that we're

00:42:07,280 --> 00:42:09,599
building

00:42:13,119 --> 00:42:19,040
uh so that's actually pretty much it

00:42:16,400 --> 00:42:20,800
um i had a couple more slides but let me

00:42:19,040 --> 00:42:24,240
let me focus yeah let me focus on

00:42:20,800 --> 00:42:25,440
uh the one that is really important to

00:42:24,240 --> 00:42:27,280
me

00:42:25,440 --> 00:42:30,400
so if you think that something like big

00:42:27,280 --> 00:42:33,200
top should be possible in the asf if you

00:42:30,400 --> 00:42:35,520
think that it would be useful to you

00:42:33,200 --> 00:42:36,880
get involved so if you happen to be in

00:42:35,520 --> 00:42:38,800
silicon valley we run

00:42:36,880 --> 00:42:40,640
meet ups we constantly run sort of these

00:42:38,800 --> 00:42:43,760
classes where people come to us and you

00:42:40,640 --> 00:42:46,079
know bring us their use cases

00:42:43,760 --> 00:42:47,760
get involved if you have a you know uh

00:42:46,079 --> 00:42:50,079
employer who has you know

00:42:47,760 --> 00:42:51,200
free compute cycles available you know

00:42:50,079 --> 00:42:52,960
if you guys work for

00:42:51,200 --> 00:42:54,319
amazon and you can like sponsor us that

00:42:52,960 --> 00:42:57,440
would be great

00:42:54,319 --> 00:42:59,040
uh we need way more intelligent tests

00:42:57,440 --> 00:43:00,480
and again like i'm not talking about

00:42:59,040 --> 00:43:02,720
unit tests i'm talking about

00:43:00,480 --> 00:43:04,319
you let's say using hadoop and having a

00:43:02,720 --> 00:43:05,760
particular data pipeline in your

00:43:04,319 --> 00:43:07,200
organization

00:43:05,760 --> 00:43:09,119
which you can look at and say well there

00:43:07,200 --> 00:43:09,760
is not really much sort of proprietary

00:43:09,119 --> 00:43:12,400
information

00:43:09,760 --> 00:43:12,880
in there or at least i can scrub it away

00:43:12,400 --> 00:43:14,800
bring

00:43:12,880 --> 00:43:16,560
that data pipeline to us right you know

00:43:14,800 --> 00:43:18,160
we would automate the heck out of it we

00:43:16,560 --> 00:43:19,040
will run it continuously now jenkins

00:43:18,160 --> 00:43:21,280
server

00:43:19,040 --> 00:43:22,079
and you the next time that the software

00:43:21,280 --> 00:43:24,240
gets released

00:43:22,079 --> 00:43:25,359
you will know that your data pipeline

00:43:24,240 --> 00:43:27,119
was actually tested

00:43:25,359 --> 00:43:29,119
how cool is that you don't have to like

00:43:27,119 --> 00:43:30,240
you know guess like would they break me

00:43:29,119 --> 00:43:31,680
would they not break me

00:43:30,240 --> 00:43:33,359
you would actually know that your data

00:43:31,680 --> 00:43:34,960
pipeline is now part of the

00:43:33,359 --> 00:43:37,839
test that continuously run on the big

00:43:34,960 --> 00:43:37,839
top infrastructure

00:43:38,319 --> 00:43:41,359
and because we have all these

00:43:40,240 --> 00:43:44,000
organizations now

00:43:41,359 --> 00:43:45,280
building on top of big top so cloudera

00:43:44,000 --> 00:43:48,640
cdh4 is 100

00:43:45,280 --> 00:43:50,640
based on big top uh when disco is 100

00:43:48,640 --> 00:43:51,839
based on big top trend micro has a

00:43:50,640 --> 00:43:52,800
proprietary distribution it's a

00:43:51,839 --> 00:43:55,040
different type of a

00:43:52,800 --> 00:43:56,960
sort of big top user they don't actually

00:43:55,040 --> 00:43:58,640
sell the distribution to you they manage

00:43:56,960 --> 00:44:00,960
the distribution internally for their

00:43:58,640 --> 00:44:03,440
own needs that it's based on big top

00:44:00,960 --> 00:44:06,480
hortonworks emc ebay intel they're

00:44:03,440 --> 00:44:10,640
partially based on big top

00:44:06,480 --> 00:44:13,839
yet different class of users canonical

00:44:10,640 --> 00:44:16,079
and uh soon hopefully illumos

00:44:13,839 --> 00:44:17,599
they will be trying to integrate big top

00:44:16,079 --> 00:44:18,800
sort of packaging into their own

00:44:17,599 --> 00:44:21,599
distribution so

00:44:18,800 --> 00:44:23,200
you can then up gets whatever it is and

00:44:21,599 --> 00:44:24,800
canonical is there today

00:44:23,200 --> 00:44:26,560
so canonical is in the business of

00:44:24,800 --> 00:44:28,960
providing this uh

00:44:26,560 --> 00:44:29,680
deployment automation software uh called

00:44:28,960 --> 00:44:31,359
juju

00:44:29,680 --> 00:44:33,520
so juju is actually integrated with big

00:44:31,359 --> 00:44:36,160
top that that's that's how it works

00:44:33,520 --> 00:44:38,160
uh because of that i think you know now

00:44:36,160 --> 00:44:38,480
big top kind of like represents it sort

00:44:38,160 --> 00:44:40,400
of

00:44:38,480 --> 00:44:42,720
slowly happens to be that common ground

00:44:40,400 --> 00:44:44,800
it's also slowly turns into a debian

00:44:42,720 --> 00:44:46,480
so it's pretty safe bet as far as i'm

00:44:44,800 --> 00:44:47,839
concerned but of course the choice is

00:44:46,480 --> 00:44:50,640
yours

00:44:47,839 --> 00:44:51,359
so here's how to reach me out i'll be

00:44:50,640 --> 00:44:52,880
roaming the

00:44:51,359 --> 00:44:54,800
you know halls of patrick on for a

00:44:52,880 --> 00:44:56,720
little while longer uh with that

00:44:54,800 --> 00:44:58,240
thank you and hopefully that was an

00:44:56,720 --> 00:44:58,800
engaging presentation i think we ran out

00:44:58,240 --> 00:45:02,319
of time

00:44:58,800 --> 00:45:03,680
right uh so again if you

00:45:02,319 --> 00:45:05,520
feel like these are the things that we

00:45:03,680 --> 00:45:07,119
need to discuss we can

00:45:05,520 --> 00:45:08,480
you know discuss it in the hallways we

00:45:07,119 --> 00:45:09,760
can actually you know stay a little bit

00:45:08,480 --> 00:45:10,480
later and have like a meetup or

00:45:09,760 --> 00:45:12,480
something

00:45:10,480 --> 00:45:14,160
but i'm really interested in how we can

00:45:12,480 --> 00:45:15,839
pull it off like you know these are the

00:45:14,160 --> 00:45:17,440
lessons that we learned so far

00:45:15,839 --> 00:45:18,880
if you have things that you would like

00:45:17,440 --> 00:45:24,800
to bring to the table please please

00:45:18,880 --> 00:45:24,800

YouTube URL: https://www.youtube.com/watch?v=MVrt0Ie95dc


