Title: Flexible Topologies: Scaling your CDN to N tiers
Publication date: 2020-10-15
Playlist: ApacheCon @Home 2020: Content Delivery
Description: 
	Flexible Topologies: Scaling your CDN to N tiers
Zach Hoffman, Robert O Butts, Jeremy Mitchell

A presentation from ApacheCon @Home 2020
https://apachecon.com/acah2020/

Until recently, any CDN built using Apache Traffic Control would be limited to at most 2 tiersâ€”an Edge Tier and a Mid Tierâ€”which limits the CDN's ability to scale as needed. A recent project allows a CDN to be broken into Topologies, each of which can span any number of tiers. This talk explores the changes to the project this initiative has involved, the capabilities of Flexible Topologies, and the steps involved to adapt an existing CDN to use Flexible Topologies.

Zach Hoffman lives in Denver, Colorado and is a software engineer at Comcast. They spend their spare time contributing to online puzzle game communities and playing the piano. When working on Apache Traffic Control, they focus on its Go and Java components.

Robert O Butts is a software engineer who works on Apache Traffic Control for the Comcast CDN. Rob is a Principal Engineer at Comcast with a Masters in Computer Science focusing on Parallel Processing. Rob has worked on nearly every component of the Apache Traffic Control CDN. He is the primary author of Traffic Monitor, was the initial primary author of the Golang Traffic Ops, and wrote the Grove HTTP Caching Proxy. He is currently working on extending Apache Traffic Server for Traffic Control's needs.

Jeremy has been an Apache Traffic Control contributor for over 5 years with a primary focus on the Traffic Portal (UI) and Traffic Ops API components. During that time, he has witnessed exponential growth of the Comcast CDN enabled by the power, flexibility and reliability of ATC.
Captions: 
	00:00:06,420 --> 00:00:10,640
[Music]

00:00:14,160 --> 00:00:17,230
[Music]

00:00:26,240 --> 00:00:30,240
so

00:00:26,800 --> 00:00:33,360
hey everyone my name is zach hoffman

00:00:30,240 --> 00:00:35,760
um i'm i'm presenting about

00:00:33,360 --> 00:00:36,640
the new flexible topologies who feature

00:00:35,760 --> 00:00:39,440
in uh

00:00:36,640 --> 00:00:40,239
apache traffic control um with jeremy

00:00:39,440 --> 00:00:43,360
mitchell and

00:00:40,239 --> 00:00:45,440
rob um jeremy is

00:00:43,360 --> 00:00:47,600
going to present with the traffic portal

00:00:45,440 --> 00:00:49,760
session while he's getting that setup

00:00:47,600 --> 00:00:51,120
um i will talk about the flexible

00:00:49,760 --> 00:00:54,320
qualities features

00:00:51,120 --> 00:00:58,160
in on a traffic ops and traffic monitor

00:00:54,320 --> 00:01:00,960
and traffic router and um if

00:00:58,160 --> 00:01:02,879
if you um want to download the slides

00:01:00,960 --> 00:01:05,280
there's a link here or

00:01:02,879 --> 00:01:06,560
you can just follow along um just a

00:01:05,280 --> 00:01:09,840
couple notes about me

00:01:06,560 --> 00:01:12,880
um i am a software engineer 3a comcast

00:01:09,840 --> 00:01:14,000
i've been with the comcast viper cdn

00:01:12,880 --> 00:01:18,400
team since december of

00:01:14,000 --> 00:01:18,400
2019 and

00:01:18,799 --> 00:01:22,640
i was a full-stack developer supporting

00:01:20,640 --> 00:01:25,759
higher education before that

00:01:22,640 --> 00:01:27,680
i've been a committed for 26 days and um

00:01:25,759 --> 00:01:29,439
if you ever want to play tetris i will

00:01:27,680 --> 00:01:32,560
take you up on that and um

00:01:29,439 --> 00:01:35,600
if you ever want to find me on github or

00:01:32,560 --> 00:01:38,640
apache anything those are my usernames

00:01:35,600 --> 00:01:42,720
okay so um a topology

00:01:38,640 --> 00:01:45,439
so jeremy is going to um

00:01:42,720 --> 00:01:45,840
to go into this a little more in detail

00:01:45,439 --> 00:01:48,320
but

00:01:45,840 --> 00:01:49,280
okay so you see that the the red here

00:01:48,320 --> 00:01:52,640
this is an

00:01:49,280 --> 00:01:55,759
edge and then the blue ones the

00:01:52,640 --> 00:01:58,880
teal ones these are our mids right

00:01:55,759 --> 00:02:01,680
so um if

00:01:58,880 --> 00:02:03,520
we we have a um a test environment in

00:02:01,680 --> 00:02:07,920
the project called cdn in a box

00:02:03,520 --> 00:02:08,560
um and this is the topology that is um

00:02:07,920 --> 00:02:11,760
there

00:02:08,560 --> 00:02:13,200
so um notice there's two mids there's

00:02:11,760 --> 00:02:16,239
three tiers here that's

00:02:13,200 --> 00:02:19,200
just one thing that um you can do

00:02:16,239 --> 00:02:20,400
with with topologies and so as far as

00:02:19,200 --> 00:02:22,000
what the actual structure

00:02:20,400 --> 00:02:23,599
of that is when you're creating a

00:02:22,000 --> 00:02:27,680
topology

00:02:23,599 --> 00:02:30,239
um you is so it's zero indexed

00:02:27,680 --> 00:02:32,239
so um when this says that the parent is

00:02:30,239 --> 00:02:34,080
one that refers to mid-zero one

00:02:32,239 --> 00:02:35,680
when it says that the parent of mid-zero

00:02:34,080 --> 00:02:38,920
one is 2

00:02:35,680 --> 00:02:40,160
then that's mid-002 so pretty

00:02:38,920 --> 00:02:43,280
self-explanatory

00:02:40,160 --> 00:02:44,879
there notice that they're you're not

00:02:43,280 --> 00:02:48,480
going to get any id

00:02:44,879 --> 00:02:51,599
or anything in in the response um the

00:02:48,480 --> 00:02:54,640
the name is is the

00:02:51,599 --> 00:02:56,800
primary key okay so

00:02:54,640 --> 00:02:58,800
as far as what you can and cannot make

00:02:56,800 --> 00:03:01,519
for a topology

00:02:58,800 --> 00:03:03,360
um you cannot use the same cash group

00:03:01,519 --> 00:03:06,080
twice in a topology

00:03:03,360 --> 00:03:07,120
first off so if you try to do that it

00:03:06,080 --> 00:03:10,159
will say no

00:03:07,120 --> 00:03:13,360
um if you if for some reason

00:03:10,159 --> 00:03:16,640
you you want to make your cdn

00:03:13,360 --> 00:03:18,480
out of like all reverse proxies

00:03:16,640 --> 00:03:20,159
which it which isn't a bad idea robin

00:03:18,480 --> 00:03:23,680
butts was talking about that

00:03:20,159 --> 00:03:26,480
um you you can just make it

00:03:23,680 --> 00:03:27,200
all edges if you want um or if you just

00:03:26,480 --> 00:03:30,799
want

00:03:27,200 --> 00:03:31,680
the last two last two tiers to be edge

00:03:30,799 --> 00:03:33,519
cache groups

00:03:31,680 --> 00:03:35,519
you can do that so edge cash groups can

00:03:33,519 --> 00:03:37,360
parent at other edge cash groups

00:03:35,519 --> 00:03:39,519
but what edge cash groups cannot do is

00:03:37,360 --> 00:03:42,720
parent mid cash groups which are

00:03:39,519 --> 00:03:44,480
forward proxies and then

00:03:42,720 --> 00:03:46,159
a med cash group and a topology must

00:03:44,480 --> 00:03:47,120
have at least one child node which is

00:03:46,159 --> 00:03:50,879
one way of saying

00:03:47,120 --> 00:03:53,840
which is another way of saying that mid

00:03:50,879 --> 00:03:55,200
cache groups cannot have cannot be leaf

00:03:53,840 --> 00:03:58,239
nodes

00:03:55,200 --> 00:04:00,239
okay and then this part so

00:03:58,239 --> 00:04:02,799
um well let's see does does everyone

00:04:00,239 --> 00:04:05,840
know what i mean when i say a cycle

00:04:02,799 --> 00:04:06,640
that a topology is a cache group or

00:04:05,840 --> 00:04:08,000
topology

00:04:06,640 --> 00:04:10,400
nodes you can use those terms

00:04:08,000 --> 00:04:11,280
interchangeably um it cannot form a

00:04:10,400 --> 00:04:14,159
cycle

00:04:11,280 --> 00:04:15,120
so you you see this like circularly that

00:04:14,159 --> 00:04:18,560
um that

00:04:15,120 --> 00:04:22,000
that's a that's a cycle here okay so

00:04:18,560 --> 00:04:24,560
so you've got the cycle um and

00:04:22,000 --> 00:04:25,040
if you if if we were to allow that then

00:04:24,560 --> 00:04:28,080
it would

00:04:25,040 --> 00:04:30,639
just be like queuing updates in in a

00:04:28,080 --> 00:04:33,759
circle it would never finish

00:04:30,639 --> 00:04:37,520
so um we don't let you do that

00:04:33,759 --> 00:04:41,120
um and um and actually i can

00:04:37,520 --> 00:04:44,479
show that what that looks like um

00:04:41,120 --> 00:04:48,560
okay so

00:04:44,479 --> 00:04:48,560
so i've got this topology here

00:04:54,840 --> 00:04:57,840
um

00:04:57,919 --> 00:05:04,400
okay so um

00:05:01,039 --> 00:05:07,680
and it says no you cannot have cycles

00:05:04,400 --> 00:05:08,479
um it detects the cycles and it tells

00:05:07,680 --> 00:05:12,960
you

00:05:08,479 --> 00:05:15,039
which cash groups are involved um so

00:05:12,960 --> 00:05:17,120
so that's part of the validation there

00:05:15,039 --> 00:05:18,479
um

00:05:17,120 --> 00:05:21,120
but another thing that we have in

00:05:18,479 --> 00:05:23,360
topologies um we have this concept of

00:05:21,120 --> 00:05:24,960
static topology if you were to combine

00:05:23,360 --> 00:05:29,680
all of the topologies

00:05:24,960 --> 00:05:32,160
so um for that uh you've got

00:05:29,680 --> 00:05:33,840
um so here we've got our first topology

00:05:32,160 --> 00:05:34,960
and here we've got the the second

00:05:33,840 --> 00:05:38,880
topology

00:05:34,960 --> 00:05:42,000
right and um so can can anyone

00:05:38,880 --> 00:05:46,320
um can anyone in chat tell me

00:05:42,000 --> 00:05:49,680
which uh cache groups um have the cycle

00:05:46,320 --> 00:05:52,880
um anyone so just like

00:05:49,680 --> 00:05:56,080
if we have e1 e2 m1 m2 and

00:05:52,880 --> 00:05:59,440
m3 all right five

00:05:56,080 --> 00:06:03,120
four three two um

00:05:59,440 --> 00:06:06,720
so okay the cycle is um

00:06:03,120 --> 00:06:10,080
one m2 and m3

00:06:06,720 --> 00:06:14,479
and so i i can show what um

00:06:10,080 --> 00:06:17,440
that looks like so um in this case

00:06:14,479 --> 00:06:18,400
um i i've already posted this first

00:06:17,440 --> 00:06:21,440
topology

00:06:18,400 --> 00:06:24,960
so see on the on the left hand side

00:06:21,440 --> 00:06:28,000
that is a representation of

00:06:24,960 --> 00:06:29,440
that first topology but then on the

00:06:28,000 --> 00:06:31,840
right hand side that's the

00:06:29,440 --> 00:06:32,479
second topology so the first topology

00:06:31,840 --> 00:06:35,280
will post

00:06:32,479 --> 00:06:37,440
just fine but as soon as you try to post

00:06:35,280 --> 00:06:41,120
that second topology

00:06:37,440 --> 00:06:41,120
that's where the cycle will come in

00:06:41,680 --> 00:06:48,240
and it says no there is this cycle

00:06:44,720 --> 00:06:50,800
in the super topology static topology

00:06:48,240 --> 00:06:51,680
and it and tells you to the cache groups

00:06:50,800 --> 00:06:54,800
involved

00:06:51,680 --> 00:06:56,319
so if if you were to take either of

00:06:54,800 --> 00:06:57,599
those cache groups out then the cycle

00:06:56,319 --> 00:07:01,680
would no longer exist

00:06:57,599 --> 00:07:04,720
so there's that's what you got with

00:07:01,680 --> 00:07:08,400
cycles um

00:07:04,720 --> 00:07:11,520
so next um let's talk about

00:07:08,400 --> 00:07:12,080
snapshots when i say snapshot i mean the

00:07:11,520 --> 00:07:15,680
traffic

00:07:12,080 --> 00:07:19,759
writer config so

00:07:15,680 --> 00:07:22,960
it which is um what traffic monitor gets

00:07:19,759 --> 00:07:23,759
and um what traffic router looks for in

00:07:22,960 --> 00:07:25,599
order to

00:07:23,759 --> 00:07:26,880
know which servers are involved in which

00:07:25,599 --> 00:07:30,800
delivery service

00:07:26,880 --> 00:07:32,720
um so we've got a new topology section

00:07:30,800 --> 00:07:34,160
previously the content server section

00:07:32,720 --> 00:07:38,800
did not say anything

00:07:34,160 --> 00:07:41,919
about server capabilities now it does

00:07:38,800 --> 00:07:43,520
previously it didn't say anything about

00:07:41,919 --> 00:07:46,639
required capabilities in the delivery

00:07:43,520 --> 00:07:50,160
service section now it does

00:07:46,639 --> 00:07:53,919
and using that information

00:07:50,160 --> 00:07:57,120
you're able to um you're able to

00:07:53,919 --> 00:07:58,800
um everything there you're able to

00:07:57,120 --> 00:08:00,960
calculate which servers

00:07:58,800 --> 00:08:02,000
are associated with which delivery

00:08:00,960 --> 00:08:04,800
services

00:08:02,000 --> 00:08:06,080
and there's going to be an example

00:08:04,800 --> 00:08:08,960
coming up of that

00:08:06,080 --> 00:08:09,520
so when i say server capabilities for

00:08:08,960 --> 00:08:11,919
example

00:08:09,520 --> 00:08:12,879
let's say there's a ram capability

00:08:11,919 --> 00:08:14,879
meaning that

00:08:12,879 --> 00:08:16,319
the servers with that capability have

00:08:14,879 --> 00:08:19,199
like a ram disk and

00:08:16,319 --> 00:08:20,319
let's say there's a hdd hard disk drive

00:08:19,199 --> 00:08:22,720
capability

00:08:20,319 --> 00:08:23,759
so any service with that capability just

00:08:22,720 --> 00:08:25,759
have a

00:08:23,759 --> 00:08:28,160
hard disk drive right and our delivery

00:08:25,759 --> 00:08:30,319
service is called small files

00:08:28,160 --> 00:08:32,240
and let's say our delivery service

00:08:30,319 --> 00:08:35,519
called small files

00:08:32,240 --> 00:08:38,959
requires the ram capability okay so here

00:08:35,519 --> 00:08:41,599
is my topology over here

00:08:38,959 --> 00:08:42,880
so we've got these two edges right here

00:08:41,599 --> 00:08:44,480
there's the mounting cache group the

00:08:42,880 --> 00:08:45,440
colorado cache group the new mexico

00:08:44,480 --> 00:08:48,560
cache group

00:08:45,440 --> 00:08:50,800
and and then

00:08:48,560 --> 00:08:53,519
let's put some servers in here so we've

00:08:50,800 --> 00:08:56,600
got ca1 c2 c3

00:08:53,519 --> 00:09:00,560
nm1 m2 and m3 and mp1

00:08:56,600 --> 00:09:00,880
mp2 and mp3 and let's say that only some

00:09:00,560 --> 00:09:04,399
of

00:09:00,880 --> 00:09:07,760
those servers have that capability okay

00:09:04,399 --> 00:09:11,120
so only c1 c2 and m2

00:09:07,760 --> 00:09:13,680
mt1 and mt3 have

00:09:11,120 --> 00:09:14,640
the ram capability so if you did that

00:09:13,680 --> 00:09:17,600
then this is

00:09:14,640 --> 00:09:18,480
what um the snapshot would look like and

00:09:17,600 --> 00:09:22,080
i

00:09:18,480 --> 00:09:25,279
kind of um i i i kind of commented

00:09:22,080 --> 00:09:27,279
at all the um i'm only focusing on

00:09:25,279 --> 00:09:28,640
the the sections that are relevant here

00:09:27,279 --> 00:09:30,800
so first notice

00:09:28,640 --> 00:09:31,839
that um it includes all of the servers

00:09:30,800 --> 00:09:34,480
not just the ones

00:09:31,839 --> 00:09:36,000
with the ram capability um and that's

00:09:34,480 --> 00:09:38,640
because traffic router and traffic

00:09:36,000 --> 00:09:39,519
monitor are going to need to calculate

00:09:38,640 --> 00:09:42,560
which servers

00:09:39,519 --> 00:09:44,640
are involved here and then

00:09:42,560 --> 00:09:45,920
um and then over here in our topology

00:09:44,640 --> 00:09:47,839
section

00:09:45,920 --> 00:09:49,519
you see it says that the nodes are the

00:09:47,839 --> 00:09:50,160
colorado cache group in the new mexico

00:09:49,519 --> 00:09:52,000
cache group

00:09:50,160 --> 00:09:54,000
notice that it does not say anything

00:09:52,000 --> 00:09:56,000
about the mounting cache

00:09:54,000 --> 00:09:57,920
we only need to tell traffic writer

00:09:56,000 --> 00:10:00,320
about the edges

00:09:57,920 --> 00:10:03,120
and then up here in our delivery service

00:10:00,320 --> 00:10:04,880
we require the ram capability

00:10:03,120 --> 00:10:06,800
and all these servers it says which

00:10:04,880 --> 00:10:09,519
capabilities the servers have

00:10:06,800 --> 00:10:10,240
um and then also in the delivery service

00:10:09,519 --> 00:10:13,440
services

00:10:10,240 --> 00:10:16,880
section um we have our mountain

00:10:13,440 --> 00:10:18,240
top topology over here which we've

00:10:16,880 --> 00:10:21,440
already described

00:10:18,240 --> 00:10:23,440
um so so

00:10:21,440 --> 00:10:25,680
this is a nice thing you no longer have

00:10:23,440 --> 00:10:28,480
to talk about the structure of

00:10:25,680 --> 00:10:29,200
your delivery service when um making it

00:10:28,480 --> 00:10:32,320
that's all

00:10:29,200 --> 00:10:36,720
um abstracted out to the topology now

00:10:32,320 --> 00:10:38,959
um and and so yep that that's uh

00:10:36,720 --> 00:10:40,720
that that's pretty much an ever view of

00:10:38,959 --> 00:10:43,200
what you've got there

00:10:40,720 --> 00:10:44,640
so as far as what traffic monitor does

00:10:43,200 --> 00:10:47,760
um there weren't very many

00:10:44,640 --> 00:10:49,680
changes previously

00:10:47,760 --> 00:10:51,040
we had this concept of delivery service

00:10:49,680 --> 00:10:53,440
servers which are servers that were

00:10:51,040 --> 00:10:54,720
assigned to delivery service

00:10:53,440 --> 00:10:56,880
since that's something the traffic

00:10:54,720 --> 00:10:58,560
monitor calculates now traffic monitor

00:10:56,880 --> 00:10:59,360
can still talk about delivery service

00:10:58,560 --> 00:11:02,000
servers

00:10:59,360 --> 00:11:02,399
but that's something that it calculates

00:11:02,000 --> 00:11:05,360
from

00:11:02,399 --> 00:11:06,079
the snapshot and based on that

00:11:05,360 --> 00:11:09,920
information

00:11:06,079 --> 00:11:13,760
it it pulls all of the servers

00:11:09,920 --> 00:11:15,760
it figures out which if any edges are

00:11:13,760 --> 00:11:19,040
not associated with any delivery service

00:11:15,760 --> 00:11:20,880
and then it also lets traffic monitor

00:11:19,040 --> 00:11:23,440
market the entire delivery service

00:11:20,880 --> 00:11:25,519
as healthy or not based on the results

00:11:23,440 --> 00:11:28,560
of that polling

00:11:25,519 --> 00:11:32,640
then in traffic router

00:11:28,560 --> 00:11:35,680
so again we're only looking at the

00:11:32,640 --> 00:11:35,680
at the edges here

00:11:35,839 --> 00:11:40,000
it doesn't know anything about the mids

00:11:37,839 --> 00:11:42,000
in the topology

00:11:40,000 --> 00:11:44,000
and so it's going to go through that

00:11:42,000 --> 00:11:47,839
snapshot and it'll add

00:11:44,000 --> 00:11:50,399
um a server in

00:11:47,839 --> 00:11:52,160
each topology to the delivery service

00:11:50,399 --> 00:11:55,200
that it's associated with

00:11:52,160 --> 00:11:57,360
if and only if um the

00:11:55,200 --> 00:11:59,200
server capabilities for that server

00:11:57,360 --> 00:12:00,639
contain all of the delivery services

00:11:59,200 --> 00:12:03,920
required capabilities

00:12:00,639 --> 00:12:06,160
which is another way of saying that

00:12:03,920 --> 00:12:08,720
the required capabilities must be a

00:12:06,160 --> 00:12:12,160
subset of that server's

00:12:08,720 --> 00:12:14,399
server capabilities and then again

00:12:12,160 --> 00:12:17,440
traffic monitor must mark the delivery

00:12:14,399 --> 00:12:21,120
services as healthy for traffic rider to

00:12:17,440 --> 00:12:23,600
actually use it um yeah so

00:12:21,120 --> 00:12:24,880
um does anyone have any questions about

00:12:23,600 --> 00:12:27,839
a traffic ops uh

00:12:24,880 --> 00:12:29,120
traffic rider or uh traffic monitor

00:12:27,839 --> 00:12:32,720
anything that we've discussed

00:12:29,120 --> 00:12:35,760
so far um

00:12:32,720 --> 00:12:40,720
uh if if not then

00:12:35,760 --> 00:12:42,959
let's see if jeremy is ready to share

00:12:40,720 --> 00:12:45,120
again in the slides uh i've got some

00:12:42,959 --> 00:12:47,600
links to

00:12:45,120 --> 00:12:48,160
various topology related stuff so you

00:12:47,600 --> 00:12:50,839
can

00:12:48,160 --> 00:12:53,120
check all of that out thanks you guys

00:12:50,839 --> 00:12:56,880
and

00:12:53,120 --> 00:12:56,880
and i'm going to throw it over to rob

00:12:57,040 --> 00:12:59,519
let's see

00:13:04,839 --> 00:13:07,839
yes

00:13:27,680 --> 00:13:30,959
hey rob i think you're muted

00:13:32,000 --> 00:13:38,240
thanks yeah uh

00:13:35,200 --> 00:13:39,279
uh so uh i'm rob butts uh i'm a

00:13:38,240 --> 00:13:42,560
principal engineer

00:13:39,279 --> 00:13:43,839
on the comcast cdn team and i've been on

00:13:42,560 --> 00:13:46,320
traffic control since before it was

00:13:43,839 --> 00:13:48,720
apache traffic control um and i've

00:13:46,320 --> 00:13:51,440
worked on most of the components we have

00:13:48,720 --> 00:13:52,560
so i'm going to kind of demo these

00:13:51,440 --> 00:13:56,240
topologies

00:13:52,560 --> 00:13:58,800
and show you what it looks like

00:13:56,240 --> 00:14:00,959
especially in the config gen so i i did

00:13:58,800 --> 00:14:02,800
most of the config gen

00:14:00,959 --> 00:14:04,240
but it's not really interesting to look

00:14:02,800 --> 00:14:07,360
at

00:14:04,240 --> 00:14:08,720
the config generation in the code um

00:14:07,360 --> 00:14:10,880
and if anyone's interested in that you

00:14:08,720 --> 00:14:13,360
know don't hesitate to look at github

00:14:10,880 --> 00:14:15,839
ping me i don't have any slides but my

00:14:13,360 --> 00:14:17,760
email is rob apache.org

00:14:15,839 --> 00:14:19,360
or i'll i'm in our slack you know

00:14:17,760 --> 00:14:20,320
anybody in our slack is more than happy

00:14:19,360 --> 00:14:24,480
to help

00:14:20,320 --> 00:14:26,160
so to begin with uh

00:14:24,480 --> 00:14:27,920
this is this is traffic portal if you're

00:14:26,160 --> 00:14:31,440
not familiar with it it's how we config

00:14:27,920 --> 00:14:35,760
the cdn and

00:14:31,440 --> 00:14:35,760
i have a docker machine here

00:14:37,040 --> 00:14:45,839
just to double check can everyone see my

00:14:38,560 --> 00:14:45,839
screen just fine

00:14:46,480 --> 00:14:50,800
uh yes takes forever to come back and

00:14:50,240 --> 00:14:53,760
leave

00:14:50,800 --> 00:14:55,760
yeah sorry okay um so i have a daca

00:14:53,760 --> 00:14:58,560
machine here and and i have a

00:14:55,760 --> 00:14:59,040
traffic ops and a traffic portal running

00:14:58,560 --> 00:15:01,839
a

00:14:59,040 --> 00:15:02,480
and a traffic vault react on on docker

00:15:01,839 --> 00:15:04,480
on my

00:15:02,480 --> 00:15:05,600
my laptop here and i've just got a

00:15:04,480 --> 00:15:07,600
machine here

00:15:05,600 --> 00:15:08,880
that is just a centos machine and i'm

00:15:07,600 --> 00:15:12,000
going to be running ort

00:15:08,880 --> 00:15:15,120
which is our config generation uh tool

00:15:12,000 --> 00:15:19,120
to generate config for apache traffic uh

00:15:15,120 --> 00:15:22,399
server and i've actually already run it

00:15:19,120 --> 00:15:24,560
and i have a a standard config here

00:15:22,399 --> 00:15:25,839
i mean we can we can look at this so if

00:15:24,560 --> 00:15:27,440
you're familiar with apache traffic

00:15:25,839 --> 00:15:27,760
server this is a standard config we've

00:15:27,440 --> 00:15:29,759
got

00:15:27,760 --> 00:15:31,759
remaps from a to b for all the delivery

00:15:29,759 --> 00:15:34,639
services we have

00:15:31,759 --> 00:15:36,480
and this is the one we're going to be

00:15:34,639 --> 00:15:40,160
interested in it's a

00:15:36,480 --> 00:15:41,759
simple http mkga it's it's just a simple

00:15:40,160 --> 00:15:44,079
htv delivery service and you can see

00:15:41,759 --> 00:15:45,920
this is a standard remap line

00:15:44,079 --> 00:15:47,199
and this is without topology so this is

00:15:45,920 --> 00:15:49,759
pre-topologies

00:15:47,199 --> 00:15:52,800
everything is using typical delivery

00:15:49,759 --> 00:15:54,639
service server assignments

00:15:52,800 --> 00:15:56,720
so to begin with we've got this delivery

00:15:54,639 --> 00:15:57,360
service here and we're going to change

00:15:56,720 --> 00:15:59,920
it to

00:15:57,360 --> 00:16:01,920
topologies so i've got a topology here

00:15:59,920 --> 00:16:04,720
um we can look at that

00:16:01,920 --> 00:16:05,440
um so this is my topology i set up i

00:16:04,720 --> 00:16:08,720
just

00:16:05,440 --> 00:16:11,839
have two mid groups in this

00:16:08,720 --> 00:16:14,320
little demo set of data and then edge

00:16:11,839 --> 00:16:16,480
groups in florida and new york and an

00:16:14,320 --> 00:16:18,720
edge group in california on the west

00:16:16,480 --> 00:16:20,320
and the server that we're going to be

00:16:18,720 --> 00:16:23,759
pretending to be

00:16:20,320 --> 00:16:26,880
is this server right here and it's in

00:16:23,759 --> 00:16:27,519
new york so we have this delivery

00:16:26,880 --> 00:16:29,600
service

00:16:27,519 --> 00:16:32,240
i'm going to change it to use topologies

00:16:29,600 --> 00:16:34,160
so it's now using this main topology

00:16:32,240 --> 00:16:36,800
um the one other thing you might have to

00:16:34,160 --> 00:16:38,399
do if you're migrating your system from

00:16:36,800 --> 00:16:40,720
the old delivery service servers to

00:16:38,399 --> 00:16:41,680
topologies is if you have an edge header

00:16:40,720 --> 00:16:44,079
rewrite rule

00:16:41,680 --> 00:16:46,480
you can't use that same with mid for

00:16:44,079 --> 00:16:48,320
topologies and that's because

00:16:46,480 --> 00:16:49,920
we really can't do an automatic

00:16:48,320 --> 00:16:51,759
migration here because these are so

00:16:49,920 --> 00:16:53,120
custom for edges and mids as you're

00:16:51,759 --> 00:16:54,800
moving towards

00:16:53,120 --> 00:16:57,120
topologies that are an arbitrary number

00:16:54,800 --> 00:16:59,519
of tiers we now have

00:16:57,120 --> 00:17:01,440
you essentially have your first tier

00:16:59,519 --> 00:17:04,079
whatever inner servers you might have

00:17:01,440 --> 00:17:06,000
and the last tier and so you'll have to

00:17:04,079 --> 00:17:07,600
migrate any custom rules you have

00:17:06,000 --> 00:17:09,280
because these edge rules might apply

00:17:07,600 --> 00:17:10,959
only to the first in fact they probably

00:17:09,280 --> 00:17:13,360
usually apply only to the first

00:17:10,959 --> 00:17:15,439
but maybe they're also on the inner and

00:17:13,360 --> 00:17:17,039
in fact your mid rules will typically be

00:17:15,439 --> 00:17:17,760
enter and last and again you'll have to

00:17:17,039 --> 00:17:20,240
do some

00:17:17,760 --> 00:17:22,000
conversion here from for example

00:17:20,240 --> 00:17:22,640
timeouts probably want to go on both

00:17:22,000 --> 00:17:25,919
inner and

00:17:22,640 --> 00:17:27,839
last servers in your inner topologies

00:17:25,919 --> 00:17:29,360
in the middle and your final one but

00:17:27,839 --> 00:17:31,120
maybe you have a

00:17:29,360 --> 00:17:32,880
header rewrite that adds a header the

00:17:31,120 --> 00:17:33,760
origin needs and that would only go on

00:17:32,880 --> 00:17:35,679
the last

00:17:33,760 --> 00:17:36,799
so so that's a conversion you might have

00:17:35,679 --> 00:17:38,480
to do um

00:17:36,799 --> 00:17:39,840
or you will have to do for any custom

00:17:38,480 --> 00:17:41,520
rewrite rules you have

00:17:39,840 --> 00:17:43,520
but this this test server didn't have

00:17:41,520 --> 00:17:47,280
any so i just converted it to a main

00:17:43,520 --> 00:17:48,880
main topology and i'll save that

00:17:47,280 --> 00:17:50,559
and one thing i'm going to do here is

00:17:48,880 --> 00:17:51,600
i'm going to unassign the servers this

00:17:50,559 --> 00:17:54,559
is a

00:17:51,600 --> 00:17:56,160
this is capabilities this is essentially

00:17:54,559 --> 00:17:59,039
a bug we're going to fix

00:17:56,160 --> 00:18:01,280
soon but i need to unassign this to make

00:17:59,039 --> 00:18:03,520
some things in this demo work

00:18:01,280 --> 00:18:05,280
actually i can't assign them because

00:18:03,520 --> 00:18:06,799
it's a topology now

00:18:05,280 --> 00:18:08,799
again you wouldn't normally have to do

00:18:06,799 --> 00:18:12,480
this i'm just working around

00:18:08,799 --> 00:18:12,480
something that isn't yet fixed

00:18:13,280 --> 00:18:18,799
so i'm going to unassign this server

00:18:16,799 --> 00:18:20,240
specifically it'll be some capability

00:18:18,799 --> 00:18:22,400
stuff i do in a minute that

00:18:20,240 --> 00:18:23,280
that needs to have that unassigned

00:18:22,400 --> 00:18:24,559
because the ui

00:18:23,280 --> 00:18:26,480
is going to demand it so now i change it

00:18:24,559 --> 00:18:29,280
back to use the topology

00:18:26,480 --> 00:18:30,559
and update and now so now this delivery

00:18:29,280 --> 00:18:31,280
service is configured to use this

00:18:30,559 --> 00:18:33,200
topology

00:18:31,280 --> 00:18:35,440
and again refreshing this is the

00:18:33,200 --> 00:18:38,080
topology it's got two mids

00:18:35,440 --> 00:18:38,720
um two edge groups on the east and one

00:18:38,080 --> 00:18:41,039
on the west

00:18:38,720 --> 00:18:42,160
and the server i'm going to be emulating

00:18:41,039 --> 00:18:44,240
is in new york

00:18:42,160 --> 00:18:45,919
and so what we would expect here is the

00:18:44,240 --> 00:18:49,200
config should not change

00:18:45,919 --> 00:18:51,840
right so our server is in the topology

00:18:49,200 --> 00:18:52,960
um it's no longer a manual assignment

00:18:51,840 --> 00:18:55,600
it's in the topology

00:18:52,960 --> 00:18:56,400
the config for apache traffic server

00:18:55,600 --> 00:18:59,440
should be

00:18:56,400 --> 00:19:02,480
exactly the same as it always was um

00:18:59,440 --> 00:19:04,559
now real quick i most of

00:19:02,480 --> 00:19:06,640
the work and discussion i want to have

00:19:04,559 --> 00:19:10,080
is around

00:19:06,640 --> 00:19:12,320
apache traffic server but this

00:19:10,080 --> 00:19:14,559
topologies do i also go to the router so

00:19:12,320 --> 00:19:16,960
if you're new to apache traffic control

00:19:14,559 --> 00:19:18,480
in a nutshell we have the router and the

00:19:16,960 --> 00:19:19,280
edges and when you make configuration

00:19:18,480 --> 00:19:21,200
changes

00:19:19,280 --> 00:19:23,280
you have to send new things to the

00:19:21,200 --> 00:19:24,880
router and then you also have to send

00:19:23,280 --> 00:19:26,160
configuration to the edge and for

00:19:24,880 --> 00:19:27,840
example if you're adding a new thing it

00:19:26,160 --> 00:19:30,400
needs to go the router first

00:19:27,840 --> 00:19:32,080
uh new if you're removing something it

00:19:30,400 --> 00:19:33,440
i'm sorry i have that backwards

00:19:32,080 --> 00:19:34,960
you're adding something it needs to go

00:19:33,440 --> 00:19:36,720
to the edges first so that the config

00:19:34,960 --> 00:19:38,720
will be there before you start routing

00:19:36,720 --> 00:19:40,640
and vice versa and so we send things to

00:19:38,720 --> 00:19:41,840
the router by what we call snapshotting

00:19:40,640 --> 00:19:44,000
the cdn

00:19:41,840 --> 00:19:45,520
we send things to the edge by what we

00:19:44,000 --> 00:19:47,200
call queuing updates and those are these

00:19:45,520 --> 00:19:48,799
buttons here on the cdn

00:19:47,200 --> 00:19:50,480
and so i just want to show you real

00:19:48,799 --> 00:19:54,400
quick what the

00:19:50,480 --> 00:19:54,400
changes will look like in

00:19:55,840 --> 00:19:59,600
the snapshot for topologies

00:20:05,760 --> 00:20:08,000
see

00:20:11,440 --> 00:20:14,640
my local host

00:20:16,240 --> 00:20:21,840
and i don't know what this

00:20:19,440 --> 00:20:21,840
was

00:20:23,280 --> 00:20:27,919
cable town so

00:20:26,320 --> 00:20:29,840
one of the benefits is a number of

00:20:27,919 --> 00:20:31,919
reasons we're moving towards topologies

00:20:29,840 --> 00:20:34,960
one of the big ones is those delivery

00:20:31,919 --> 00:20:37,200
service servers don't scale

00:20:34,960 --> 00:20:39,200
it's an it's an outer join

00:20:37,200 --> 00:20:42,320
mathematically of delivery services time

00:20:39,200 --> 00:20:42,880
servers uh in in our ci config the the

00:20:42,320 --> 00:20:45,280
config

00:20:42,880 --> 00:20:46,799
that goes to the router it's well over

00:20:45,280 --> 00:20:49,039
00:20:46,799 --> 00:20:50,000
for a large cdn it's going from

00:20:49,039 --> 00:20:53,440
something like

00:20:50,000 --> 00:20:56,559
like half a megabyte to 10 12 megabytes

00:20:53,440 --> 00:20:58,159
um and so moving to topologies gets rid

00:20:56,559 --> 00:21:02,400
of that mathematical outer join

00:20:58,159 --> 00:21:07,120
and you're no longer growing n times in

00:21:02,400 --> 00:21:07,120
um so if we search here

00:21:10,720 --> 00:21:15,200
we can see this is the delivery service

00:21:13,280 --> 00:21:18,799
i just changed and it now has

00:21:15,200 --> 00:21:20,240
topology main um

00:21:18,799 --> 00:21:22,080
and that's all there is to say this

00:21:20,240 --> 00:21:24,640
service is now in this topology

00:21:22,080 --> 00:21:26,159
all of the topology of which server goes

00:21:24,640 --> 00:21:27,840
to which cash group which is in that

00:21:26,159 --> 00:21:29,600
topology that's all in the cash group

00:21:27,840 --> 00:21:31,840
that didn't change from the old

00:21:29,600 --> 00:21:31,840
value

00:21:32,880 --> 00:21:36,320
and there should be a yeah here at the

00:21:34,880 --> 00:21:38,000
bottom of the cr config

00:21:36,320 --> 00:21:39,520
there's now here's the topologies and

00:21:38,000 --> 00:21:41,760
this is telling you

00:21:39,520 --> 00:21:42,960
what the nodes are and the order they're

00:21:41,760 --> 00:21:44,720
in and that's how

00:21:42,960 --> 00:21:46,080
that's how the traffic router will

00:21:44,720 --> 00:21:47,520
figure that out and

00:21:46,080 --> 00:21:49,360
of course traffic router is part of

00:21:47,520 --> 00:21:50,960
traffic control so it just takes this

00:21:49,360 --> 00:21:52,080
config directly and that's really all

00:21:50,960 --> 00:21:56,840
there is to it

00:21:52,080 --> 00:21:59,360
um and again if you're not familiar

00:21:56,840 --> 00:22:01,120
with the cdn

00:21:59,360 --> 00:22:02,799
this is what it looks like before

00:22:01,120 --> 00:22:04,159
topologies again this is

00:22:02,799 --> 00:22:06,240
this is a server and this is all the

00:22:04,159 --> 00:22:08,320
delivery services are assigned to

00:22:06,240 --> 00:22:10,480
again it's end times end every single

00:22:08,320 --> 00:22:13,039
server has this and it's massive

00:22:10,480 --> 00:22:14,240
and so that goes away with topologies

00:22:13,039 --> 00:22:16,000
and again that's pretty much all there

00:22:14,240 --> 00:22:18,000
is from from this config it goes to the

00:22:16,000 --> 00:22:20,000
router and the router directly parses it

00:22:18,000 --> 00:22:22,159
but for the cache we have to generate

00:22:20,000 --> 00:22:23,440
apache traffic servers config

00:22:22,159 --> 00:22:25,440
and so that's what i'm going to look at

00:22:23,440 --> 00:22:28,000
now so again if you're

00:22:25,440 --> 00:22:29,840
if you're familiar with traffic server

00:22:28,000 --> 00:22:30,400
this is the remap.config this is what it

00:22:29,840 --> 00:22:33,200
looks like

00:22:30,400 --> 00:22:34,559
mapping a to b and this is our config

00:22:33,200 --> 00:22:36,880
that we care about

00:22:34,559 --> 00:22:37,919
now again i changed the server to use

00:22:36,880 --> 00:22:40,320
topologies

00:22:37,919 --> 00:22:42,320
and now if i run the config generation

00:22:40,320 --> 00:22:43,919
again this will take a couple minutes

00:22:42,320 --> 00:22:45,280
again normally you have to snapshot

00:22:43,919 --> 00:22:46,000
which i just did and then you have to

00:22:45,280 --> 00:22:48,559
queue

00:22:46,000 --> 00:22:49,760
i'm actually running um in badass modes

00:22:48,559 --> 00:22:51,679
that i don't have to queue every time

00:22:49,760 --> 00:22:53,520
for this demo

00:22:51,679 --> 00:22:55,120
um and so it's just going to forcibly

00:22:53,520 --> 00:22:57,280
apply all the config

00:22:55,120 --> 00:22:58,559
for my server and it just did that took

00:22:57,280 --> 00:22:59,840
13 seconds

00:22:58,559 --> 00:23:01,919
which if you're familiar with traffic

00:22:59,840 --> 00:23:02,799
control that's also way faster than it

00:23:01,919 --> 00:23:05,280
used to be

00:23:02,799 --> 00:23:06,159
um and if i grab again it shouldn't

00:23:05,280 --> 00:23:08,320
change

00:23:06,159 --> 00:23:09,840
and so we see here it didn't this is

00:23:08,320 --> 00:23:11,520
exactly what it was before

00:23:09,840 --> 00:23:13,200
the only difference is now we have a

00:23:11,520 --> 00:23:14,080
comment that the config generation put

00:23:13,200 --> 00:23:17,520
in that says

00:23:14,080 --> 00:23:19,600
topology main um

00:23:17,520 --> 00:23:21,679
again it's a whole lot of code behind

00:23:19,600 --> 00:23:23,919
the config gen but as a user

00:23:21,679 --> 00:23:25,840
generally this shouldn't change your

00:23:23,919 --> 00:23:26,480
user experience or an operator

00:23:25,840 --> 00:23:28,320
experience

00:23:26,480 --> 00:23:30,000
operating apache traffic control

00:23:28,320 --> 00:23:33,120
shouldn't change with topologies

00:23:30,000 --> 00:23:34,320
once you assign them in the ui and

00:23:33,120 --> 00:23:37,200
snapshot

00:23:34,320 --> 00:23:38,000
everything should essentially just work

00:23:37,200 --> 00:23:40,400
so

00:23:38,000 --> 00:23:41,440
um i'll show a couple other things here

00:23:40,400 --> 00:23:43,840
real quick let's

00:23:41,440 --> 00:23:46,000
let's go ahead and remove this server

00:23:43,840 --> 00:23:46,480
from the topology so that again we want

00:23:46,000 --> 00:23:48,480
to see

00:23:46,480 --> 00:23:50,480
that if it's not in the topology we

00:23:48,480 --> 00:23:53,360
don't get the configuration

00:23:50,480 --> 00:23:55,360
so let's do that let's go to um the

00:23:53,360 --> 00:23:56,080
topology and remember our server was in

00:23:55,360 --> 00:23:57,679
new york

00:23:56,080 --> 00:23:59,919
so i'm just going to remove new york

00:23:57,679 --> 00:24:02,799
from the topology easiest way

00:23:59,919 --> 00:24:04,000
to do it topology was updated again

00:24:02,799 --> 00:24:06,400
normally you'd have to queue

00:24:04,000 --> 00:24:08,159
i'm not going to do that for the sake of

00:24:06,400 --> 00:24:11,200
the demo i'm just going to run

00:24:08,159 --> 00:24:12,080
the ort tool that places the config on

00:24:11,200 --> 00:24:14,799
the caches

00:24:12,080 --> 00:24:16,400
in badass mode and so again we remove

00:24:14,799 --> 00:24:18,159
that topology what we're expecting to

00:24:16,400 --> 00:24:20,159
see now is this server

00:24:18,159 --> 00:24:22,159
which i'm generating you can see the

00:24:20,159 --> 00:24:22,799
host you can see the host name short

00:24:22,159 --> 00:24:27,039
here

00:24:22,799 --> 00:24:28,080
um overall atscc osch2g this is just the

00:24:27,039 --> 00:24:29,679
name of the server

00:24:28,080 --> 00:24:31,279
this server should no longer be in that

00:24:29,679 --> 00:24:32,960
topology because it's in new york and

00:24:31,279 --> 00:24:36,320
the topology no longer has

00:24:32,960 --> 00:24:38,559
new york um and so if i grep

00:24:36,320 --> 00:24:40,400
i can see it's gone um that's not in

00:24:38,559 --> 00:24:42,080
there if i just look at part of the

00:24:40,400 --> 00:24:42,880
remap.config i can see all these other

00:24:42,080 --> 00:24:44,880
services

00:24:42,880 --> 00:24:47,200
that are these old legacy services still

00:24:44,880 --> 00:24:50,320
using delivery service servers

00:24:47,200 --> 00:24:54,000
and on block hdb live live nat

00:24:50,320 --> 00:24:57,360
no cache hdb to https there's no

00:24:54,000 --> 00:24:59,120
simple http because we removed it from

00:24:57,360 --> 00:25:01,440
the topology

00:24:59,120 --> 00:25:02,640
that's really it for topologies again

00:25:01,440 --> 00:25:04,400
hopefully it's a

00:25:02,640 --> 00:25:05,679
fairly straightforward migration to

00:25:04,400 --> 00:25:08,880
convert your

00:25:05,679 --> 00:25:11,039
cdn to topologies i do want to show one

00:25:08,880 --> 00:25:13,760
last thing so i'm going to i'm going to

00:25:11,039 --> 00:25:15,679
assign this back

00:25:13,760 --> 00:25:17,360
so we'll put new york back in the

00:25:15,679 --> 00:25:21,039
topology

00:25:17,360 --> 00:25:23,919
and i want to show the capabilities

00:25:21,039 --> 00:25:25,760
so the one of the limitations of

00:25:23,919 --> 00:25:27,520
topology is again because you don't have

00:25:25,760 --> 00:25:28,240
that direct assignment that doesn't

00:25:27,520 --> 00:25:30,000
scale

00:25:28,240 --> 00:25:31,679
what happens if you say well i have this

00:25:30,000 --> 00:25:33,120
server in this cash group

00:25:31,679 --> 00:25:34,880
and it needs to be in the cash group for

00:25:33,120 --> 00:25:35,840
the router reasons the way our traffic

00:25:34,880 --> 00:25:39,039
router works

00:25:35,840 --> 00:25:40,320
you you assign cash groups are how we do

00:25:39,039 --> 00:25:42,400
the locality it's it's

00:25:40,320 --> 00:25:44,240
it's again if you're new to traffic

00:25:42,400 --> 00:25:45,120
control a cache group is essentially a

00:25:44,240 --> 00:25:46,960
data center

00:25:45,120 --> 00:25:48,960
it doesn't have to be one to one but

00:25:46,960 --> 00:25:50,880
what if i have this one server in this

00:25:48,960 --> 00:25:52,960
group or this data center but and i need

00:25:50,880 --> 00:25:53,679
to not send this one particular delivery

00:25:52,960 --> 00:25:55,760
service

00:25:53,679 --> 00:25:56,960
we've kind of lost that with topologies

00:25:55,760 --> 00:26:00,880
by not having that

00:25:56,960 --> 00:26:03,600
in end times and mapping capabilities

00:26:00,880 --> 00:26:05,039
are the way that you can now do that so

00:26:03,600 --> 00:26:07,600
again we've

00:26:05,039 --> 00:26:08,880
we've assigned uh new york back to the

00:26:07,600 --> 00:26:10,320
topology

00:26:08,880 --> 00:26:12,720
and i've updated it so the server is

00:26:10,320 --> 00:26:14,960
back in the topology but i want to say

00:26:12,720 --> 00:26:17,039
this particular server i need to not be

00:26:14,960 --> 00:26:17,600
on this service it's a one-off case i've

00:26:17,039 --> 00:26:19,919
got

00:26:17,600 --> 00:26:20,799
an edge case it can't do something that

00:26:19,919 --> 00:26:23,760
needs to be done

00:26:20,799 --> 00:26:25,120
it's a test server something like that

00:26:23,760 --> 00:26:27,360
and so what i'm going to do

00:26:25,120 --> 00:26:29,919
is i'm going to use capabilities to do

00:26:27,360 --> 00:26:32,159
that so servers have capabilities

00:26:29,919 --> 00:26:33,919
and they're essentially something the

00:26:32,159 --> 00:26:35,039
server can do again you can name these

00:26:33,919 --> 00:26:38,799
anything you want

00:26:35,039 --> 00:26:38,799
you can make a capability named foo

00:26:40,000 --> 00:26:44,320
that's over here on the server

00:26:41,279 --> 00:26:45,840
capabilities page

00:26:44,320 --> 00:26:47,520
so again these you just go to server

00:26:45,840 --> 00:26:49,760
capabilities and it can be anything you

00:26:47,520 --> 00:26:49,760
want

00:26:50,720 --> 00:26:54,640
and then you say this is what my server

00:26:52,640 --> 00:26:56,400
is capable of so this server actually

00:26:54,640 --> 00:26:58,960
was able to do these things already

00:26:56,400 --> 00:27:00,559
i'm going to remove these um so now my

00:26:58,960 --> 00:27:01,760
servers starting from scratch no

00:27:00,559 --> 00:27:04,320
capabilities

00:27:01,760 --> 00:27:06,640
i'm going to say this server can it has

00:27:04,320 --> 00:27:09,039
a disk cache that's a capability

00:27:06,640 --> 00:27:10,559
now i go to the delivery service and i

00:27:09,039 --> 00:27:12,400
go to

00:27:10,559 --> 00:27:13,760
manage required capabilities and i'm

00:27:12,400 --> 00:27:14,640
going to say this delivery service

00:27:13,760 --> 00:27:16,400
requires

00:27:14,640 --> 00:27:17,760
i actually already had one but i'm going

00:27:16,400 --> 00:27:20,080
to add it

00:27:17,760 --> 00:27:22,000
this delivery service requires lua we

00:27:20,080 --> 00:27:24,799
have an ats lua plugin

00:27:22,000 --> 00:27:27,039
and we can't this delivery service needs

00:27:24,799 --> 00:27:27,600
it so any ats servers that don't have

00:27:27,039 --> 00:27:29,360
that

00:27:27,600 --> 00:27:30,880
i need to not route to i need to not

00:27:29,360 --> 00:27:32,720
send config to

00:27:30,880 --> 00:27:34,240
and so our server has disk but it

00:27:32,720 --> 00:27:36,399
doesn't have lua so now

00:27:34,240 --> 00:27:37,440
with this configured i would expect this

00:27:36,399 --> 00:27:40,000
server to not

00:27:37,440 --> 00:27:41,600
generate config and not be routed to by

00:27:40,000 --> 00:27:43,279
traffic router

00:27:41,600 --> 00:27:45,120
because it doesn't have lua it doesn't

00:27:43,279 --> 00:27:46,240
have something this delivery service

00:27:45,120 --> 00:27:50,320
needs

00:27:46,240 --> 00:27:51,919
so actually well actually let's remove

00:27:50,320 --> 00:27:54,399
it because the last thing i did when i

00:27:51,919 --> 00:27:54,399
generated

00:27:56,480 --> 00:28:00,880
the last thing i did when i generated

00:27:58,159 --> 00:28:00,880
the config

00:28:01,279 --> 00:28:03,840
was

00:28:04,559 --> 00:28:07,600
why is it taking me here

00:28:10,559 --> 00:28:13,520
hang on i'm trying to unlink and it

00:28:12,320 --> 00:28:14,799
doesn't want to take the button there we

00:28:13,520 --> 00:28:15,919
go

00:28:14,799 --> 00:28:17,440
i just wasn't clicking on the right

00:28:15,919 --> 00:28:19,279
place so the last thing i did when i

00:28:17,440 --> 00:28:20,720
generated the config was i removed it

00:28:19,279 --> 00:28:22,799
let's add it back so now it's in the

00:28:20,720 --> 00:28:23,840
topology the delivery service has no

00:28:22,799 --> 00:28:26,080
required

00:28:23,840 --> 00:28:27,279
capabilities and so let's generate

00:28:26,080 --> 00:28:28,880
config again

00:28:27,279 --> 00:28:30,799
and we should see it get added back

00:28:28,880 --> 00:28:32,480
we're in the topology

00:28:30,799 --> 00:28:34,720
we have all the requirements which are

00:28:32,480 --> 00:28:34,720
none

00:28:35,120 --> 00:28:38,720
so we'll wait 13 seconds

00:28:38,960 --> 00:28:41,279
and we

00:28:42,720 --> 00:28:46,159
we grab and okay so now we're back we

00:28:44,960 --> 00:28:47,919
have our server

00:28:46,159 --> 00:28:50,399
now i'm going to add a required

00:28:47,919 --> 00:28:53,679
capability here um

00:28:50,399 --> 00:28:54,720
that this server does not have does not

00:28:53,679 --> 00:28:56,399
have the lua

00:28:54,720 --> 00:28:58,240
capability the server doesn't have the

00:28:56,399 --> 00:28:59,360
lure plugin and i'm going to generate

00:28:58,240 --> 00:29:01,360
config again

00:28:59,360 --> 00:29:03,919
and so again i should see this server

00:29:01,360 --> 00:29:05,679
should now be removed

00:29:03,919 --> 00:29:07,200
from this delivery service because even

00:29:05,679 --> 00:29:09,360
though it's in the topology

00:29:07,200 --> 00:29:11,039
it can't do something the server needs

00:29:09,360 --> 00:29:13,279
and again it this will generally be

00:29:11,039 --> 00:29:14,640
things that the server can't do like lua

00:29:13,279 --> 00:29:17,919
plugins or disk

00:29:14,640 --> 00:29:19,679
but it could be uh just

00:29:17,919 --> 00:29:21,360
say i have a test server so i'll make a

00:29:19,679 --> 00:29:23,520
capability named test

00:29:21,360 --> 00:29:24,720
to prevent it from being assigned and we

00:29:23,520 --> 00:29:29,200
see that now it's gone

00:29:24,720 --> 00:29:29,200
so again it's in the topology now but

00:29:31,919 --> 00:29:37,679
it hang on it's in the topology

00:29:35,200 --> 00:29:39,279
but it doesn't have a capability that

00:29:37,679 --> 00:29:41,200
delivery service needs

00:29:39,279 --> 00:29:43,120
so that's how you can do one-off cases

00:29:41,200 --> 00:29:45,520
now now that we no longer have direct

00:29:43,120 --> 00:29:48,880
assignments as you move to topologies

00:29:45,520 --> 00:29:50,480
um you can say i i need to do a one-off

00:29:48,880 --> 00:29:51,120
and have this one particular thing not

00:29:50,480 --> 00:29:55,120
assigned

00:29:51,120 --> 00:29:57,919
right now it's just a capability or not

00:29:55,120 --> 00:30:00,640
um just to to note one of the things

00:29:57,919 --> 00:30:04,240
that is on our list at some point to add

00:30:00,640 --> 00:30:05,919
is uh basic boolean expressions

00:30:04,240 --> 00:30:09,279
that will make these much simpler so for

00:30:05,919 --> 00:30:12,559
example if you needed to say um

00:30:09,279 --> 00:30:14,880
i want to have this delivery service not

00:30:12,559 --> 00:30:15,919
have any server that has this capability

00:30:14,880 --> 00:30:17,919
maybe i want to not

00:30:15,919 --> 00:30:19,200
assign servers that have disk cache so

00:30:17,919 --> 00:30:21,360
they only get ram

00:30:19,200 --> 00:30:23,039
so i want to say the required

00:30:21,360 --> 00:30:25,120
capabilities are not disk

00:30:23,039 --> 00:30:26,480
um that is on our list to do at some

00:30:25,120 --> 00:30:29,440
point to have things like not

00:30:26,480 --> 00:30:30,960
and or um but it's not there today and

00:30:29,440 --> 00:30:32,000
you can technically do it right you

00:30:30,960 --> 00:30:33,919
could make a

00:30:32,000 --> 00:30:35,120
not disk capability and assign that to

00:30:33,919 --> 00:30:36,960
all the other servers

00:30:35,120 --> 00:30:38,480
so it's technically possible it's just a

00:30:36,960 --> 00:30:39,520
little bit messy or if you need

00:30:38,480 --> 00:30:43,600
complicated things

00:30:39,520 --> 00:30:45,520
today i think that's really all i had to

00:30:43,600 --> 00:30:49,679
show

00:30:45,520 --> 00:30:53,679
does anybody have any questions about

00:30:49,679 --> 00:30:53,679
topologies and and configuration

00:30:57,039 --> 00:31:00,880
yeah if we have questions let's ask him

00:30:58,799 --> 00:31:02,000
in the chat rob i haven't seen any yet

00:31:00,880 --> 00:31:05,840
well there was one but

00:31:02,000 --> 00:31:05,840
uh roland answered it already

00:31:16,240 --> 00:31:20,240
all right um well looks like we've got

00:31:19,679 --> 00:31:24,240
about

00:31:20,240 --> 00:31:25,760
10 minutes five minutes left

00:31:24,240 --> 00:31:28,480
i was gonna say if jeremy could get his

00:31:25,760 --> 00:31:30,399
video up i talked to him he said it was

00:31:28,480 --> 00:31:32,000
uh

00:31:30,399 --> 00:31:34,480
it's too late now it was sort of like

00:31:32,000 --> 00:31:36,480
the intro to all of this

00:31:34,480 --> 00:31:40,000
what version is that slated for handcast

00:31:36,480 --> 00:31:40,000
this should all be in 5.0

00:31:42,720 --> 00:31:46,000
yeah and again so i've so when i was

00:31:45,360 --> 00:31:48,159
working on this

00:31:46,000 --> 00:31:49,840
by the way on the cr config at some

00:31:48,159 --> 00:31:51,360
point i've told some people this at some

00:31:49,840 --> 00:31:53,360
point i accidentally

00:31:51,360 --> 00:31:55,679
uh in the code just messing with the

00:31:53,360 --> 00:31:57,840
code i accidentally

00:31:55,679 --> 00:32:00,320
omitted the delivery service servers and

00:31:57,840 --> 00:32:03,039
like i said our production configs are

00:32:00,320 --> 00:32:05,039
like 12 or so megabytes and if you just

00:32:03,039 --> 00:32:06,159
if you just remove that delivery service

00:32:05,039 --> 00:32:08,960
service key from

00:32:06,159 --> 00:32:09,519
the entire cr config that's 12 megs it's

00:32:08,960 --> 00:32:12,000
like

00:32:09,519 --> 00:32:13,440
less than half of a meg it's like 500

00:32:12,000 --> 00:32:15,919
400 kilobytes

00:32:13,440 --> 00:32:17,760
so we're really hoping this topology's

00:32:15,919 --> 00:32:18,559
move will will help with scalability

00:32:17,760 --> 00:32:20,080
right that

00:32:18,559 --> 00:32:21,600
that that config is constantly

00:32:20,080 --> 00:32:22,559
transmitted to the routers to the

00:32:21,600 --> 00:32:26,000
monitors

00:32:22,559 --> 00:32:28,640
so the this should get rid of that

00:32:26,000 --> 00:32:29,679
end times n and then suddenly we we can

00:32:28,640 --> 00:32:32,240
scale uh

00:32:29,679 --> 00:32:32,799
in terms of configuring million servers

00:32:32,240 --> 00:32:35,760
and your

00:32:32,799 --> 00:32:36,720
config wouldn't would only grow o of n

00:32:35,760 --> 00:32:43,840
instead of o of

00:32:36,720 --> 00:32:43,840
n squared

00:32:48,720 --> 00:32:53,279
very cool very cool um all processing

00:32:52,080 --> 00:32:56,559
done in the router

00:32:53,279 --> 00:32:58,159
off bound correct so when you say

00:32:56,559 --> 00:33:01,840
processing

00:32:58,159 --> 00:33:05,760
you mean processing that cr config

00:33:01,840 --> 00:33:09,279
yeah i think that's what near means yeah

00:33:05,760 --> 00:33:12,559
um during the ds times cache yeah

00:33:09,279 --> 00:33:15,840
the the ds cache mapping yeah so

00:33:12,559 --> 00:33:17,360
so that's all done in in the router and

00:33:15,840 --> 00:33:18,960
i believe the monitor has to do it as

00:33:17,360 --> 00:33:20,240
well because the monitor has to figure

00:33:18,960 --> 00:33:23,840
out for health

00:33:20,240 --> 00:33:26,159
um what services have on what's what uh

00:33:23,840 --> 00:33:27,519
what what servers are on what services

00:33:26,159 --> 00:33:29,279
and it's not difficult it's not

00:33:27,519 --> 00:33:30,559
computationally expensive right you just

00:33:29,279 --> 00:33:32,559
look at the topology

00:33:30,559 --> 00:33:33,919
and you do some some calculations and

00:33:32,559 --> 00:33:35,919
say okay these are the cash groups

00:33:33,919 --> 00:33:38,320
here's my servers in the cash group

00:33:35,919 --> 00:33:40,080
check capabilities it's it's not an

00:33:38,320 --> 00:33:42,799
expensive slow thing

00:33:40,080 --> 00:33:44,159
um and then also as a side note

00:33:42,799 --> 00:33:46,960
something i kind of glossed over

00:33:44,159 --> 00:33:47,760
something else coming in 5.0 um i don't

00:33:46,960 --> 00:33:50,159
think is in

00:33:47,760 --> 00:33:52,399
four maybe it's in four is the the cash

00:33:50,159 --> 00:33:53,039
side config gen so that is fairly new as

00:33:52,399 --> 00:33:55,120
well

00:33:53,039 --> 00:33:56,559
um that this is all happening on the

00:33:55,120 --> 00:33:58,240
cache side when the when the

00:33:56,559 --> 00:34:00,159
cache config gen what i was just showing

00:33:58,240 --> 00:34:02,640
off in the terminal

00:34:00,159 --> 00:34:04,640
um that's all on the cache side so so

00:34:02,640 --> 00:34:05,679
the config gen for the caches used to be

00:34:04,640 --> 00:34:07,519
in traffic ops

00:34:05,679 --> 00:34:08,720
we're trying to break up that monolith

00:34:07,519 --> 00:34:11,520
and make things

00:34:08,720 --> 00:34:12,960
more canariable um and just not you know

00:34:11,520 --> 00:34:14,879
have single points of failure

00:34:12,960 --> 00:34:16,560
and so everything i was showing that it

00:34:14,879 --> 00:34:17,520
was figuring out for that particular

00:34:16,560 --> 00:34:19,280
cache

00:34:17,520 --> 00:34:20,879
do i have this server am i in this

00:34:19,280 --> 00:34:22,720
topology capabilities

00:34:20,879 --> 00:34:24,079
that's all done on the on the client

00:34:22,720 --> 00:34:26,320
side um

00:34:24,079 --> 00:34:27,599
so again for large cdns you can canary

00:34:26,320 --> 00:34:29,440
one cache at a time

00:34:27,599 --> 00:34:30,960
to make sure your config works um to

00:34:29,440 --> 00:34:31,760
make sure a new version of the cache

00:34:30,960 --> 00:34:35,440
config

00:34:31,760 --> 00:34:37,919
generator rot um it's it's all on the

00:34:35,440 --> 00:34:37,919
cache now

00:34:40,639 --> 00:34:44,399
um one other feature of flexible

00:34:43,679 --> 00:34:48,000
topologies

00:34:44,399 --> 00:34:51,119
that we haven't talked about is that the

00:34:48,000 --> 00:34:53,679
does anyone else have an echo no it

00:34:51,119 --> 00:34:57,119
sounds like you

00:34:53,679 --> 00:34:59,359
uh okay well it in any case

00:34:57,119 --> 00:34:59,359
um

00:35:01,040 --> 00:35:04,960
i can't talk like this um but what but

00:35:04,079 --> 00:35:08,000
but what i was

00:35:04,960 --> 00:35:09,359
gonna say is that previously um a cash

00:35:08,000 --> 00:35:12,640
group could only have

00:35:09,359 --> 00:35:14,720
uh one parent cash group or one a

00:35:12,640 --> 00:35:18,000
secondary parent and cash group

00:35:14,720 --> 00:35:19,839
um and one thing that you can do with

00:35:18,000 --> 00:35:20,320
flexible topologies now as you can have

00:35:19,839 --> 00:35:23,040
is

00:35:20,320 --> 00:35:25,119
um as many parent cache groups um

00:35:23,040 --> 00:35:28,720
parenting a catchphrase that you want

00:35:25,119 --> 00:35:32,160
so um this is so

00:35:28,720 --> 00:35:34,720
uh yeah that's just a restriction that's

00:35:32,160 --> 00:35:37,760
removed there

00:35:34,720 --> 00:35:39,119
yeah and i don't know so even with the

00:35:37,760 --> 00:35:42,880
new topology stuff

00:35:39,119 --> 00:35:45,760
servers are still edge or mid type um

00:35:42,880 --> 00:35:47,839
there's also some limitations around the

00:35:45,760 --> 00:35:50,720
the levels of topology you can do

00:35:47,839 --> 00:35:52,400
and and other details like that um we're

00:35:50,720 --> 00:35:54,880
moving towards getting rid of those

00:35:52,400 --> 00:35:56,720
so so if you hit those limitations

00:35:54,880 --> 00:35:58,960
you're trying to set up topologies

00:35:56,720 --> 00:36:00,079
um just bear that in mind and you know

00:35:58,960 --> 00:36:01,599
talk with us you know

00:36:00,079 --> 00:36:03,839
ping us on slack hang us on the dev

00:36:01,599 --> 00:36:06,160
channel and say hey i need this or what

00:36:03,839 --> 00:36:07,920
and we'll you know we'll we'll talk with

00:36:06,160 --> 00:36:08,480
you about that but we're looking to

00:36:07,920 --> 00:36:10,720
remove

00:36:08,480 --> 00:36:12,640
more and more of those limitations and

00:36:10,720 --> 00:36:14,480
also eventually we'd like to get rid of

00:36:12,640 --> 00:36:15,920
the edge versus mid classification

00:36:14,480 --> 00:36:17,920
altogether and you would just have

00:36:15,920 --> 00:36:19,920
caches and they're in the topology in

00:36:17,920 --> 00:36:21,440
whatever order you you set them up

00:36:19,920 --> 00:36:23,280
and again for things like custom

00:36:21,440 --> 00:36:24,240
rewrites you'll have your first inner

00:36:23,280 --> 00:36:26,880
and outer

00:36:24,240 --> 00:36:27,599
um rewrite that applies to whatever

00:36:26,880 --> 00:36:29,920
caches

00:36:27,599 --> 00:36:31,359
wherever that cache happens to be and

00:36:29,920 --> 00:36:33,839
and maybe a cache is

00:36:31,359 --> 00:36:34,720
inner on one topology but it's the edge

00:36:33,839 --> 00:36:37,920
on another one

00:36:34,720 --> 00:36:41,839
um so so as time goes on we're looking

00:36:37,920 --> 00:36:41,839
to remove more of those limitations

00:36:45,520 --> 00:36:49,920
cool all right um i don't see any more

00:36:48,240 --> 00:36:53,040
questions coming in

00:36:49,920 --> 00:36:56,640
and we are 30 seconds away from time so

00:36:53,040 --> 00:36:59,520
thanks rob and zach um sorry

00:36:56,640 --> 00:37:01,119
jeremy that you're that it didn't work

00:36:59,520 --> 00:37:02,800
for you i know you were probably the

00:37:01,119 --> 00:37:06,079
most prepared out of anyone

00:37:02,800 --> 00:37:23,839
uh which is the ironic part

00:37:06,079 --> 00:37:23,839
but anyway cool thanks guys

00:37:26,560 --> 00:37:28,640

YouTube URL: https://www.youtube.com/watch?v=-L8lwHtN1Og


