Title: CCCNA18 - Khosrow Moossavi - CloudStack integration with Vault by HashiCorp
Publication date: 2018-11-20
Playlist: Cloudstack Collaboration Conference North America 2018
Description: 
	Khosrow Moossavi - CloudStack integration with Vault by HashiCorp

A presentation from the Cloudstack Collaboration Conference, a part of ApacheCon North America 2018 in Montreal

http://ca.cloudstackcollab.org/
http://apachecon.com/acna18
Captions: 
	00:00:04,609 --> 00:00:11,430
everyone my name is Cosmo Mousavi I'm

00:00:08,190 --> 00:00:17,299
going to present an integration of a

00:00:11,430 --> 00:00:17,299
cloud stack with Hoshi core walk today

00:00:17,529 --> 00:00:24,060
so stem of an agenda I'm going to since

00:00:21,070 --> 00:00:27,880
this is a very first integration between

00:00:24,060 --> 00:00:31,090
these two software's I'm going to talk a

00:00:27,880 --> 00:00:33,430
little bit about the vault itself what

00:00:31,090 --> 00:00:36,820
it does what is why is it useful to have

00:00:33,430 --> 00:00:38,559
a boss in the infrastructure and a

00:00:36,820 --> 00:00:41,680
little bit of basic introduction about

00:00:38,559 --> 00:00:45,610
the all different components in the

00:00:41,680 --> 00:00:51,460
vault itself and then I'm going to go

00:00:45,610 --> 00:00:53,860
back to the cloud side and describe the

00:00:51,460 --> 00:00:56,920
different integration points that we

00:00:53,860 --> 00:00:58,750
already have in place such as we can

00:00:56,920 --> 00:01:02,070
agree to that has been mentioned couple

00:00:58,750 --> 00:01:05,799
of times water and key notes and such

00:01:02,070 --> 00:01:08,200
the second one is secure and hidden

00:01:05,799 --> 00:01:11,439
configuration that currently exist in

00:01:08,200 --> 00:01:14,799
the cloud stack it's going to be handled

00:01:11,439 --> 00:01:17,110
different way as it has a as it is now

00:01:14,799 --> 00:01:20,049
at the moment and at the end I'm going

00:01:17,110 --> 00:01:21,579
to describe what's coming what should be

00:01:20,049 --> 00:01:25,119
coming next what's what are the other

00:01:21,579 --> 00:01:28,500
enhancing enhancement points that can be

00:01:25,119 --> 00:01:30,850
feasible to look at or stop implementing

00:01:28,500 --> 00:01:33,640
so a little bit about myself

00:01:30,850 --> 00:01:37,179
I'm cloudy for a circuit there works at

00:01:33,640 --> 00:01:39,609
cloud ops working at the claudette CA

00:01:37,179 --> 00:01:42,759
infrastructure I've been part of the

00:01:39,609 --> 00:01:44,890
cloud stack community since November

00:01:42,759 --> 00:01:48,640
last year at the same time I joined the

00:01:44,890 --> 00:01:55,380
cloud up s-- company so I'm a relatively

00:01:48,640 --> 00:01:58,920
new member of the community so about the

00:01:55,380 --> 00:01:58,920
wharf itself

00:02:03,060 --> 00:02:11,920
so what walk does essentially its stores

00:02:08,190 --> 00:02:15,340
and secures and tightly controls access

00:02:11,920 --> 00:02:18,460
to different type of things that's

00:02:15,340 --> 00:02:20,800
supposed to be secure or sensitive we

00:02:18,460 --> 00:02:23,800
already has a sensitive nature such as

00:02:20,800 --> 00:02:26,350
tokens password certificates API key is

00:02:23,800 --> 00:02:29,290
credential to the database anything's

00:02:26,350 --> 00:02:33,400
that considered to be sensitive to your

00:02:29,290 --> 00:02:35,410
business in your infrastructure both can

00:02:33,400 --> 00:02:39,970
stores them and have it can have access

00:02:35,410 --> 00:02:44,170
kind of defined and granularly define

00:02:39,970 --> 00:02:48,760
access control to those different type

00:02:44,170 --> 00:02:52,990
of sensitive data it also had handles

00:02:48,760 --> 00:02:55,810
missing cube lubrication key rotation

00:02:52,990 --> 00:02:57,970
almost kind of stuff that most of the

00:02:55,810 --> 00:03:00,490
time if if you are going to do it

00:02:57,970 --> 00:03:03,190
yourself it takes time vault has a

00:03:00,490 --> 00:03:05,230
capability out of the pod two supporters

00:03:03,190 --> 00:03:07,750
and a handle that it's part of the whole

00:03:05,230 --> 00:03:13,860
workflow and process inside the vault

00:03:07,750 --> 00:03:17,230
itself it also one of the important and

00:03:13,860 --> 00:03:21,959
good functionality from the walls

00:03:17,230 --> 00:03:25,300
it has encryption and decryption of the

00:03:21,959 --> 00:03:28,720
data or whatever sensitive information

00:03:25,300 --> 00:03:33,700
on the fly without restoring them so you

00:03:28,720 --> 00:03:37,540
can you have a let's say password you

00:03:33,700 --> 00:03:39,670
can ask Walt to encrypt it give it back

00:03:37,540 --> 00:03:42,010
without storing it anywhere in it's back

00:03:39,670 --> 00:03:43,300
in the storage you know you can do

00:03:42,010 --> 00:03:45,890
whatever you want with that

00:03:43,300 --> 00:03:47,810
encrypted value such as storing in the

00:03:45,890 --> 00:03:50,270
database store that in their Redis or

00:03:47,810 --> 00:03:52,460
whatever and if the time comes that you

00:03:50,270 --> 00:03:55,820
need to access the actual value of that

00:03:52,460 --> 00:03:58,850
encrypted value you grab that again say

00:03:55,820 --> 00:04:00,950
from a simple database query give it

00:03:58,850 --> 00:04:04,010
back to valve ask you to decrypt it and

00:04:00,950 --> 00:04:07,070
it gives you back the actual unencrypted

00:04:04,010 --> 00:04:09,700
value there is a gotcha point here which

00:04:07,070 --> 00:04:15,670
I'm going to discuss a little bit later

00:04:09,700 --> 00:04:19,500
in the following slides so I guess it's

00:04:15,670 --> 00:04:24,430
pretty obvious why what is useful

00:04:19,500 --> 00:04:28,300
because we need to secure data that's

00:04:24,430 --> 00:04:31,780
the thing it's one set of tool that is

00:04:28,300 --> 00:04:34,690
specifically designed for storing and

00:04:31,780 --> 00:04:37,150
managing the secrets so it means that we

00:04:34,690 --> 00:04:40,330
don't V as a developer or operations we

00:04:37,150 --> 00:04:43,630
don't need to think about it or

00:04:40,330 --> 00:04:46,060
implemented there is actually a piece of

00:04:43,630 --> 00:04:49,330
software with a whole community around a

00:04:46,060 --> 00:04:51,190
that does that for us so it's a good

00:04:49,330 --> 00:04:56,110
thing to actually for us to take

00:04:51,190 --> 00:04:58,990
leverage of the existing tool it's it's

00:04:56,110 --> 00:05:02,110
open source it's part of the Muslim

00:04:58,990 --> 00:05:05,320
public license and it has a very very

00:05:02,110 --> 00:05:08,139
active community around it it's backed

00:05:05,320 --> 00:05:12,490
by hash reform but the community's

00:05:08,139 --> 00:05:15,039
really active and there is another

00:05:12,490 --> 00:05:18,550
important part here that we should use

00:05:15,039 --> 00:05:21,550
volved for basically everything not a

00:05:18,550 --> 00:05:23,800
cloud site integration itself so I don't

00:05:21,550 --> 00:05:30,310
know if I show of hands who uses warmth

00:05:23,800 --> 00:05:34,180
in some shape of the form so not a lot

00:05:30,310 --> 00:05:37,560
it it's it's it's not an integration

00:05:34,180 --> 00:05:40,240
point only for cloud style if you have

00:05:37,560 --> 00:05:42,880
sequence and password and sensitive data

00:05:40,240 --> 00:05:45,580
all over our infrastructure it doesn't

00:05:42,880 --> 00:05:48,910
matter it if you are on the development

00:05:45,580 --> 00:05:52,979
side RC ICD provisioning infrastructure

00:05:48,910 --> 00:05:55,930
running application so we as a

00:05:52,979 --> 00:05:57,430
developers or operation that manage the

00:05:55,930 --> 00:06:00,130
whole infrastructure or on different

00:05:57,430 --> 00:06:02,500
stacks of the infrastructure we need to

00:06:00,130 --> 00:06:04,360
have a ball cluster some part of the

00:06:02,500 --> 00:06:07,479
organization might use the

00:06:04,360 --> 00:06:10,090
Walt for integration with the chef

00:06:07,479 --> 00:06:13,210
instability provision the infrastructure

00:06:10,090 --> 00:06:16,719
another product organization might use

00:06:13,210 --> 00:06:19,060
the same walked master for for the CICE

00:06:16,719 --> 00:06:23,219
pipeline to provision and actually

00:06:19,060 --> 00:06:26,520
deploy on production staging whatever in

00:06:23,219 --> 00:06:29,039
infrastructure or eventually the

00:06:26,520 --> 00:06:33,180
application the applications that can

00:06:29,039 --> 00:06:37,900
can talk to evolve to do some kind of a

00:06:33,180 --> 00:06:39,550
secret management further stack but it's

00:06:37,900 --> 00:06:41,680
all is the application is a web

00:06:39,550 --> 00:06:43,599
application it does something on an

00:06:41,680 --> 00:06:46,569
infrastructure level but at the end of

00:06:43,599 --> 00:06:50,530
the day it's a web application so it can

00:06:46,569 --> 00:06:54,430
use both to do all sort of the secret

00:06:50,530 --> 00:06:58,090
management so it is a vault is a really

00:06:54,430 --> 00:07:00,400
useful tool and the integration of that

00:06:58,090 --> 00:07:03,039
any piece of application or

00:07:00,400 --> 00:07:08,110
infrastructure pieces is a good thing to

00:07:03,039 --> 00:07:11,229
have anyway at the end of the day I'm

00:07:08,110 --> 00:07:17,169
not going to go to all the details

00:07:11,229 --> 00:07:21,129
around here so this is the high level

00:07:17,169 --> 00:07:24,849
architecture of the wall the only couple

00:07:21,129 --> 00:07:26,860
of parts is important it's fully API

00:07:24,849 --> 00:07:30,219
driven with the rest Akkad's

00:07:26,860 --> 00:07:33,879
it has extensive list of REST API that

00:07:30,219 --> 00:07:37,810
can be that can be used it's all sort of

00:07:33,879 --> 00:07:39,669
the works so that's that's really cool

00:07:37,810 --> 00:07:44,050
you can predict it you can automate it

00:07:39,669 --> 00:07:48,110
in all sorts of way it's fully secure

00:07:44,050 --> 00:07:51,180
the barrier here you can just

00:07:48,110 --> 00:07:54,540
read about it but essentially whatever

00:07:51,180 --> 00:07:58,800
comes inside the vault as application

00:07:54,540 --> 00:08:01,889
goes through goes to what it's called

00:07:58,800 --> 00:08:02,639
barrier so it's a secure way of

00:08:01,889 --> 00:08:06,030
communication

00:08:02,639 --> 00:08:08,669
whatever was needs to talk to different

00:08:06,030 --> 00:08:11,370
components of itself inside it goes

00:08:08,669 --> 00:08:15,450
securely encrypted inside what is called

00:08:11,370 --> 00:08:18,060
barrier this so it ensures essentially

00:08:15,450 --> 00:08:20,460
the integrity and security of the data

00:08:18,060 --> 00:08:23,100
inside the walls because wall white zone

00:08:20,460 --> 00:08:27,840
needs to be secure it provides security

00:08:23,100 --> 00:08:30,540
but it needs to be secure anyway the

00:08:27,840 --> 00:08:32,940
talkingest stores and policy store which

00:08:30,540 --> 00:08:36,750
I'm going to talk a little bit later

00:08:32,940 --> 00:08:38,479
about them the thing is everything every

00:08:36,750 --> 00:08:41,400
communication with the wall as a

00:08:38,479 --> 00:08:45,390
scientist and point of view if it's a

00:08:41,400 --> 00:08:49,529
lie if it's a rustic alcohol or whatever

00:08:45,390 --> 00:08:52,380
else mechanism go false to a token based

00:08:49,529 --> 00:08:54,530
communication so that's something that

00:08:52,380 --> 00:08:58,350
it's really important that we need to

00:08:54,530 --> 00:09:00,780
know about it another thing is policy

00:08:58,350 --> 00:09:02,550
story I'm going to discuss about this

00:09:00,780 --> 00:09:04,680
but keep in mind at the moment that

00:09:02,550 --> 00:09:08,190
policy is to define a fine grain

00:09:04,680 --> 00:09:10,860
application level less specific it's to

00:09:08,190 --> 00:09:12,570
not fully open the dwarf cluster for for

00:09:10,860 --> 00:09:14,550
the whole infrastructure all the

00:09:12,570 --> 00:09:17,910
different pieces of infrastructure we

00:09:14,550 --> 00:09:22,200
define policy for some specific part of

00:09:17,910 --> 00:09:24,720
the vault usage essentially what is it

00:09:22,200 --> 00:09:27,900
really important for us is secret

00:09:24,720 --> 00:09:31,170
patents there's all the different sort

00:09:27,900 --> 00:09:33,450
of the different backends from the vault

00:09:31,170 --> 00:09:36,720
that we need to define that ok I want to

00:09:33,450 --> 00:09:38,760
use for example database credential I

00:09:36,720 --> 00:09:42,390
need to use database secret back-end

00:09:38,760 --> 00:09:44,520
from the vault and so on this will come

00:09:42,390 --> 00:09:47,400
up later and essentially we need to have

00:09:44,520 --> 00:09:48,350
a storage back-end everything on both

00:09:47,400 --> 00:09:49,970
essentially

00:09:48,350 --> 00:09:53,060
at the end of the day will be a sword

00:09:49,970 --> 00:09:55,520
somewhere it can be fine system it can

00:09:53,060 --> 00:09:58,250
be a console it can be exceeded are all

00:09:55,520 --> 00:10:01,070
sort of different storage back-end which

00:09:58,250 --> 00:10:04,120
can be configured for us for a vault

00:10:01,070 --> 00:10:06,650
server installation I'm not going to

00:10:04,120 --> 00:10:09,530
talk about storage backends in this

00:10:06,650 --> 00:10:11,720
presentation because this is not a full

00:10:09,530 --> 00:10:15,170
presentation but there are so many

00:10:11,720 --> 00:10:17,150
different tutorial and guides and which

00:10:15,170 --> 00:10:19,970
type of the storage patterns you need to

00:10:17,150 --> 00:10:22,670
this but essentially you need to have an

00:10:19,970 --> 00:10:26,570
hae storage back-end for the vault if

00:10:22,670 --> 00:10:30,290
your storage is gone the whole vault is

00:10:26,570 --> 00:10:34,720
not usable that's basically an important

00:10:30,290 --> 00:10:37,460
piece that you need to get money so

00:10:34,720 --> 00:10:41,020
there are there are multiple

00:10:37,460 --> 00:10:43,700
authentication method that you need to

00:10:41,020 --> 00:10:48,250
when you want to use Walter multiple

00:10:43,700 --> 00:10:52,160
different authentication these two are

00:10:48,250 --> 00:10:54,620
basically the the most important one in

00:10:52,160 --> 00:10:57,050
terms of the Club integration with the

00:10:54,620 --> 00:11:00,880
cloud stack but all sort of different

00:10:57,050 --> 00:11:02,120
things there are it is LDAP AWS ami

00:11:00,880 --> 00:11:04,460
github

00:11:02,120 --> 00:11:06,830
whatever so you can define by one our

00:11:04,460 --> 00:11:17,480
login to evolved with my github account

00:11:06,830 --> 00:11:21,350
or LDAP account or whatever the app will

00:11:17,480 --> 00:11:24,680
here is particularly important for us or

00:11:21,350 --> 00:11:28,960
for any other application usage because

00:11:24,680 --> 00:11:34,570
we define a role for application and

00:11:28,960 --> 00:11:37,180
narrow the narrow down to the way that

00:11:34,570 --> 00:11:40,150
walking if someone asks that I want to

00:11:37,180 --> 00:11:42,550
use I have this token for the Apple ID

00:11:40,150 --> 00:11:45,220
this is my Apple ID this is my password

00:11:42,550 --> 00:11:48,210
I want to use what what only

00:11:45,220 --> 00:11:51,370
specifically give access to specify the

00:11:48,210 --> 00:11:55,150
role that defines somewhere else with

00:11:51,370 --> 00:11:57,460
the policy so with this approach we can

00:11:55,150 --> 00:12:00,700
have one more cluster for the whole

00:11:57,460 --> 00:12:04,470
organization we only we are not giving

00:12:00,700 --> 00:12:07,510
up token to the clients of the walk

00:12:04,470 --> 00:12:11,140
developers operations whatever we define

00:12:07,510 --> 00:12:13,180
roles apples and give access to the okay

00:12:11,140 --> 00:12:15,220
you are on the loudest acting this is

00:12:13,180 --> 00:12:18,070
your app code that you can use to talk

00:12:15,220 --> 00:12:21,520
to wall which has access to the cloud

00:12:18,070 --> 00:12:24,550
stack related part of the vault your

00:12:21,520 --> 00:12:28,180
honor dev team this is your role that

00:12:24,550 --> 00:12:32,890
can access to the I don't know my sequel

00:12:28,180 --> 00:12:35,380
part of the vault back-end but at the

00:12:32,890 --> 00:12:38,170
end of the day every type of

00:12:35,380 --> 00:12:41,410
authentication will be translated and

00:12:38,170 --> 00:12:43,360
eventually generates a token the

00:12:41,410 --> 00:12:46,200
different is if you generate a token and

00:12:43,360 --> 00:12:51,460
give it out to your clients

00:12:46,200 --> 00:12:55,750
what client essentially it's up to you

00:12:51,460 --> 00:12:58,450
as a vault at me to make them secure to

00:12:55,750 --> 00:13:02,620
rotate them to revoke them but with the

00:12:58,450 --> 00:13:07,060
app role you give your client a role ID

00:13:02,620 --> 00:13:10,330
and a secret ID and if the vault job

00:13:07,060 --> 00:13:14,230
whenever it receives them it generates a

00:13:10,330 --> 00:13:17,590
token with you with a provided TTL that

00:13:14,230 --> 00:13:20,770
you define in a policy that has access

00:13:17,590 --> 00:13:24,070
that it that specifically generated

00:13:20,770 --> 00:13:27,100
token has for example life cycle of 15

00:13:24,070 --> 00:13:29,980
second that 15 seconds is more than

00:13:27,100 --> 00:13:32,680
enough for a cloudy start to talk to

00:13:29,980 --> 00:13:33,220
vault to grab information get it back

00:13:32,680 --> 00:13:35,980
and that's

00:13:33,220 --> 00:13:38,199
it's not usable again that token so if

00:13:35,980 --> 00:13:41,319
if an attack happens in the in-between

00:13:38,199 --> 00:13:44,740
and someone get a hold of that token

00:13:41,319 --> 00:13:48,220
there is no TTL if the life cycle ends

00:13:44,740 --> 00:13:54,129
in ten seconds later thirty seconds

00:13:48,220 --> 00:13:57,129
later so the use of token should be

00:13:54,129 --> 00:13:59,439
should not be done unless you have a

00:13:57,129 --> 00:14:03,750
very good reason that you want to use

00:13:59,439 --> 00:14:03,750
token-based authentication I

00:14:03,990 --> 00:14:11,620
specifically put best practices I just

00:14:07,899 --> 00:14:12,129
got it from the official website of the

00:14:11,620 --> 00:14:17,410
world

00:14:12,129 --> 00:14:20,430
so this basically says exactly what I

00:14:17,410 --> 00:14:22,540
call that you should not use token

00:14:20,430 --> 00:14:24,699
unless you have a very good reason that

00:14:22,540 --> 00:14:31,120
you need to use the token for the sake

00:14:24,699 --> 00:14:34,990
of the authentication what essentially

00:14:31,120 --> 00:14:37,449
then the secret engines of the ball is

00:14:34,990 --> 00:14:39,910
the whole purpose of the using the ball

00:14:37,449 --> 00:14:44,350
there are all sort of different secret

00:14:39,910 --> 00:14:47,379
engines use or for different purposes

00:14:44,350 --> 00:14:52,029
and defined in different things because

00:14:47,379 --> 00:14:54,189
they do different things so you cannot

00:14:52,029 --> 00:14:56,949
mix and match than that okay I'm going

00:14:54,189 --> 00:15:01,509
to use secret engine let's say key value

00:14:56,949 --> 00:15:03,639
to store my database credential you can

00:15:01,509 --> 00:15:05,740
do that but the thing is if you are

00:15:03,639 --> 00:15:09,040
using proper secret back and then gene

00:15:05,740 --> 00:15:11,319
both does something is special on top of

00:15:09,040 --> 00:15:14,680
those secret engine that you didn't you

00:15:11,319 --> 00:15:19,750
don't need to manually and do couple of

00:15:14,680 --> 00:15:23,920
more steps to get the end result on that

00:15:19,750 --> 00:15:27,129
note so the simplest form of the secret

00:15:23,920 --> 00:15:30,660
engine is key value it's essentially you

00:15:27,129 --> 00:15:34,560
define a back-end that you you ask okay

00:15:30,660 --> 00:15:37,860
this is my pair of key value

00:15:34,560 --> 00:15:41,610
items store them securely

00:15:37,860 --> 00:15:45,779
and you can retweet them later on with

00:15:41,610 --> 00:15:49,350
the same key value the second one which

00:15:45,779 --> 00:15:51,900
is one of the biggest in the integration

00:15:49,350 --> 00:15:56,400
point in the for the clutter stack at

00:15:51,900 --> 00:16:00,990
the moment is the PKI engine it's a it

00:15:56,400 --> 00:16:06,600
it can act as a CA as a certificate

00:16:00,990 --> 00:16:11,550
authority for folio infrastructure so it

00:16:06,600 --> 00:16:13,500
can generate Reeboks certificate you can

00:16:11,550 --> 00:16:15,960
define a root certificate it's signed

00:16:13,500 --> 00:16:23,430
another certificate with that see a root

00:16:15,960 --> 00:16:28,050
CA you can define CRS CLR to revoke the

00:16:23,430 --> 00:16:29,880
certificate to define a revocation list

00:16:28,050 --> 00:16:32,190
of the IPS you want to block almost

00:16:29,880 --> 00:16:34,910
random stuff that you would normally for

00:16:32,190 --> 00:16:38,310
example see in a lesson and encrypt

00:16:34,910 --> 00:16:42,560
infrastructure you can have it in a

00:16:38,310 --> 00:16:44,780
smaller scale in a pic like an engine

00:16:42,560 --> 00:16:47,820
databases is going to be used for

00:16:44,780 --> 00:16:50,040
database credentials so let's say you

00:16:47,820 --> 00:16:53,160
have a application web application that

00:16:50,040 --> 00:16:56,040
needs to connect to Postgres or my

00:16:53,160 --> 00:17:00,240
sequel or whatever instead of defining

00:16:56,040 --> 00:17:02,100
the your connection swing to the

00:17:00,240 --> 00:17:05,240
database from the application point of

00:17:02,100 --> 00:17:08,339
view you go ahead in the boss and define

00:17:05,240 --> 00:17:11,819
database back-end engine and work it

00:17:08,339 --> 00:17:15,000
backward so you define your database

00:17:11,819 --> 00:17:18,000
back-end engine in in the wall in in the

00:17:15,000 --> 00:17:20,870
vault you point that to our application

00:17:18,000 --> 00:17:24,339
and essentially what happens is that

00:17:20,870 --> 00:17:28,209
whenever you need a connection from

00:17:24,339 --> 00:17:29,529
Jason it sees that the the connectionist

00:17:28,209 --> 00:17:31,929
thing will be generated on the world

00:17:29,529 --> 00:17:34,120
soil it goes through volved asks about

00:17:31,929 --> 00:17:36,760
the connection with the connection a

00:17:34,120 --> 00:17:40,779
thing define in the world it is going to

00:17:36,760 --> 00:17:44,860
generate a connection stream it can be a

00:17:40,779 --> 00:17:47,080
fixed user random password random users

00:17:44,860 --> 00:17:50,730
random facts of any combination but the

00:17:47,080 --> 00:17:55,240
thing is essentially you don't need any

00:17:50,730 --> 00:17:57,190
particular user define in your database

00:17:55,240 --> 00:18:00,210
to be for your application to be able to

00:17:57,190 --> 00:18:03,120
talk to your database everything is

00:18:00,210 --> 00:18:07,330
generated and keep track boyd evolved

00:18:03,120 --> 00:18:09,970
and you can again have a vocation

00:18:07,330 --> 00:18:15,600
rotation almost kind of stuff for all

00:18:09,970 --> 00:18:20,980
the backends and away another one is ssh

00:18:15,600 --> 00:18:23,860
it's it's going to there are two

00:18:20,980 --> 00:18:27,929
different types of ssh packin engine

00:18:23,860 --> 00:18:31,169
it's one of them is you can ask you can

00:18:27,929 --> 00:18:34,210
integrate volved with your

00:18:31,169 --> 00:18:38,559
infrastructure nodes it means that if

00:18:34,210 --> 00:18:41,740
you wanna SSH into a VM you don't

00:18:38,559 --> 00:18:48,190
directly ssh into it you can you can ask

00:18:41,740 --> 00:18:51,789
volved ok what's the what's the public

00:18:48,190 --> 00:18:54,809
key and private key that by only that

00:18:51,789 --> 00:18:58,559
that we can use to assess it into the

00:18:54,809 --> 00:19:02,950
machine beforehand you already

00:18:58,559 --> 00:19:05,380
configured this integration so you would

00:19:02,950 --> 00:19:08,740
tell what that ok that's why machine

00:19:05,380 --> 00:19:12,520
managed the ssh key configuration the

00:19:08,740 --> 00:19:15,970
authorized keys and the public key of

00:19:12,520 --> 00:19:20,500
the users every time we try to login you

00:19:15,970 --> 00:19:23,389
ask what that what's the SS private key

00:19:20,500 --> 00:19:27,079
that I can use it provides u1 and u2

00:19:23,389 --> 00:19:30,529
use it on the on the machine that you

00:19:27,079 --> 00:19:33,739
wanna login another one

00:19:30,529 --> 00:19:37,820
another type of the SSH engine is that

00:19:33,739 --> 00:19:41,379
it can provide you one time password SSH

00:19:37,820 --> 00:19:44,359
so it's nothing fully key base

00:19:41,379 --> 00:19:46,579
essentially you try to accession to

00:19:44,359 --> 00:19:49,700
something it asks you for a password but

00:19:46,579 --> 00:19:52,700
password keeps changing it's only every

00:19:49,700 --> 00:19:54,950
time it's going to change and for each

00:19:52,700 --> 00:19:57,889
time you need to ask for what's the

00:19:54,950 --> 00:20:02,349
current password to assistance to my

00:19:57,889 --> 00:20:06,289
machine and for for that specific

00:20:02,349 --> 00:20:09,499
back-end instead of you use SSH as a

00:20:06,289 --> 00:20:15,440
command was actually vote Sierra

00:20:09,499 --> 00:20:19,279
actually implemented an SSH integrated

00:20:15,440 --> 00:20:23,419
as such capability so you use vault CLI

00:20:19,279 --> 00:20:25,249
to ssh to some vacuum with some actual

00:20:23,419 --> 00:20:26,899
configuration and at the same time it

00:20:25,249 --> 00:20:28,609
already knows about the password it

00:20:26,899 --> 00:20:33,259
gives you one you talk the password and

00:20:28,609 --> 00:20:38,659
message into the to the machine that you

00:20:33,259 --> 00:20:46,190
wanna research into there is another one

00:20:38,659 --> 00:20:50,749
that has been deprecated that that it's

00:20:46,190 --> 00:20:53,139
it originally it was doing the story SSH

00:20:50,749 --> 00:20:57,709
key and generating SSH case so let's say

00:20:53,139 --> 00:20:59,869
in terms of a cloudy start we have all

00:20:57,709 --> 00:21:01,909
sort of different SSH keys all over the

00:20:59,869 --> 00:21:04,639
place to be used either by the system

00:21:01,909 --> 00:21:06,079
already but a customer that using C and

00:21:04,639 --> 00:21:09,169
sitting on top of the global

00:21:06,079 --> 00:21:12,379
infrastructure we could have stored them

00:21:09,169 --> 00:21:16,609
the SSH key or generate them with the

00:21:12,379 --> 00:21:19,999
vault or inside the vault but recently

00:21:16,609 --> 00:21:22,309
they have found serious problem and

00:21:19,999 --> 00:21:25,549
security issues with this specific

00:21:22,309 --> 00:21:28,050
storage back-end so they deprecated and

00:21:25,549 --> 00:21:30,300
we drop the implementation so

00:21:28,050 --> 00:21:32,610
need to revisit everything how do we

00:21:30,300 --> 00:21:37,770
want to proceed with this part of the

00:21:32,610 --> 00:21:42,290
integration with cloud aside so that we

00:21:37,770 --> 00:21:44,610
can manage and handles SSH key from the

00:21:42,290 --> 00:21:50,040
point of view of cloud a second store

00:21:44,610 --> 00:21:51,780
them or offload them to Walt that's to

00:21:50,040 --> 00:21:55,820
be discussed in mailing list and you

00:21:51,780 --> 00:21:58,640
talk to see what are the new option

00:21:55,820 --> 00:22:03,530
transit is the one that I mentioned that

00:21:58,640 --> 00:22:09,830
Walt does not store the transit back in

00:22:03,530 --> 00:22:12,870
anywhere you just asked what this is my

00:22:09,830 --> 00:22:15,750
my sling it doesn't have to be a strain

00:22:12,870 --> 00:22:18,660
it can be a block you can you can give

00:22:15,750 --> 00:22:21,630
it a PDF it's it's going to encrypt it

00:22:18,660 --> 00:22:25,110
and give you that the encrypted value

00:22:21,630 --> 00:22:27,650
whatever you need to encrypt on the fly

00:22:25,110 --> 00:22:30,510
you give it to a you need to create a

00:22:27,650 --> 00:22:33,870
transit back-end engine on the board

00:22:30,510 --> 00:22:36,780
with correct combination of the key and

00:22:33,870 --> 00:22:39,420
rotation are always kind of stuff then

00:22:36,780 --> 00:22:43,200
you can start using that you give it

00:22:39,420 --> 00:22:45,780
something asks it to be encrypted it's

00:22:43,200 --> 00:22:49,170
going to encrypt it interpreter with a

00:22:45,780 --> 00:22:51,360
key internal to the vault you receive it

00:22:49,170 --> 00:22:53,790
you do whatever you want really and

00:22:51,360 --> 00:22:56,190
when you enter the time comes to decrypt

00:22:53,790 --> 00:22:58,530
it again you give it back to the same

00:22:56,190 --> 00:23:03,049
back in Nanjing you do you don't need to

00:22:58,530 --> 00:23:05,820
provide anything else of the required

00:23:03,049 --> 00:23:08,100
private key for the decryptions all that

00:23:05,820 --> 00:23:10,380
is sitting inside the vault so it's

00:23:08,100 --> 00:23:12,510
going to decrypt it and give it you back

00:23:10,380 --> 00:23:15,450
the only thing that means you need to

00:23:12,510 --> 00:23:19,470
consider for reducing the transit back

00:23:15,450 --> 00:23:25,230
and engine it's that it's since the

00:23:19,470 --> 00:23:27,630
design was was done that it can encrypt

00:23:25,230 --> 00:23:31,010
anything it's not as soon as I mentioned

00:23:27,630 --> 00:23:34,890
it can encrypt the blog as well whatever

00:23:31,010 --> 00:23:37,530
you need to base64 whatever you are

00:23:34,890 --> 00:23:40,140
passing to it then what is going to

00:23:37,530 --> 00:23:41,730
encrypt the place 64 version and when it

00:23:40,140 --> 00:23:45,240
decrease it's going to give you back the

00:23:41,730 --> 00:23:50,220
page 64 version of it so it has you need

00:23:45,240 --> 00:23:52,200
to have two extra steps on one extract

00:23:50,220 --> 00:23:54,330
on each encryption and decryption which

00:23:52,200 --> 00:24:00,290
is not a really big deal and it's not to

00:23:54,330 --> 00:24:03,270
any resource extensive for basics foring

00:24:00,290 --> 00:24:07,020
something and then basics for decoding

00:24:03,270 --> 00:24:09,390
something but that's the only thing that

00:24:07,020 --> 00:24:14,360
you need to consider that everything on

00:24:09,390 --> 00:24:20,250
the transit is base64 encoded in and out

00:24:14,360 --> 00:24:24,630
the other one is TOTP it's time-based

00:24:20,250 --> 00:24:28,110
one-time password the same as what do

00:24:24,630 --> 00:24:32,760
you provide or what will authenticate or

00:24:28,110 --> 00:24:36,350
provide so you can ask what to generate

00:24:32,760 --> 00:24:38,760
a one-time password for a duration of

00:24:36,350 --> 00:24:41,760
the value that you provide for 10

00:24:38,760 --> 00:24:45,809
seconds at the second whatever so then

00:24:41,760 --> 00:24:48,450
you can have some kind of a - FA -

00:24:45,809 --> 00:24:51,360
two-factor authentication build it

00:24:48,450 --> 00:24:55,140
yourself with evolve instead of using G

00:24:51,360 --> 00:24:56,100
Authenticator or do or whatever maybe in

00:24:55,140 --> 00:24:58,260
some cases makes

00:24:56,100 --> 00:24:59,760
to use them or maybe in some cases it

00:24:58,260 --> 00:25:03,020
doesn't make sense

00:24:59,760 --> 00:25:06,750
anyway the the functionality is there

00:25:03,020 --> 00:25:09,270
it's fully working it's off to the use

00:25:06,750 --> 00:25:11,880
case that you can find that okay I'm

00:25:09,270 --> 00:25:14,730
going to use the TOTP that walls provide

00:25:11,880 --> 00:25:19,140
to a bunch of more secret packing

00:25:14,730 --> 00:25:23,039
engines that I'm not going to mention

00:25:19,140 --> 00:25:28,650
them because you know there are two CP

00:25:23,039 --> 00:25:31,020
or not really relevant to the cloud as

00:25:28,650 --> 00:25:39,980
that intervention in the future it might

00:25:31,020 --> 00:25:44,090
but not at the moment we cannot Lucia so

00:25:39,980 --> 00:25:47,850
in terms of the actual integration with

00:25:44,090 --> 00:25:53,340
with a cloud stack the the very first

00:25:47,850 --> 00:25:57,799
thing that we did is we implementing the

00:25:53,340 --> 00:26:02,100
remote manager VPN it was originally

00:25:57,799 --> 00:26:06,950
lttp what the itv2 is going to replace

00:26:02,100 --> 00:26:11,250
elfin TP because it's more secure

00:26:06,950 --> 00:26:15,890
relatively faster than lttp and one more

00:26:11,250 --> 00:26:18,630
important thing it the LTP on a

00:26:15,890 --> 00:26:22,020
unclutter stack when you define a V PC

00:26:18,630 --> 00:26:24,570
you enable the remote management on top

00:26:22,020 --> 00:26:27,120
of that and you are let's say you are an

00:26:24,570 --> 00:26:29,909
organization you are all behind one

00:26:27,120 --> 00:26:35,159
corporate firewall and essentially

00:26:29,909 --> 00:26:37,409
everybody wants to work with with with

00:26:35,159 --> 00:26:39,000
that weekend connected a VPN to work on

00:26:37,409 --> 00:26:42,929
something on some part of the

00:26:39,000 --> 00:26:46,110
infrastructure with l2tp you cannot

00:26:42,929 --> 00:26:50,880
connect to more with more than one user

00:26:46,110 --> 00:26:55,039
from one IP to the to the VPN or at

00:26:50,880 --> 00:26:58,200
least that that's one of the main

00:26:55,039 --> 00:27:01,020
situation that we constantly kept

00:26:58,200 --> 00:27:04,260
running into so what

00:27:01,020 --> 00:27:07,770
with the IQ VPN this is not a case you

00:27:04,260 --> 00:27:11,010
can have multiple users even on single

00:27:07,770 --> 00:27:14,060
machine connecting to the to the same

00:27:11,010 --> 00:27:17,960
between infrastructure let alone the one

00:27:14,060 --> 00:27:20,460
everyone behind one corporate for a wall

00:27:17,960 --> 00:27:26,510
so these are the main reasons that we

00:27:20,460 --> 00:27:30,600
decided to to replace lttp with the ike

00:27:26,510 --> 00:27:32,340
i could be to not we want because we

00:27:30,600 --> 00:27:35,760
want to have so many different flaws

00:27:32,340 --> 00:27:39,060
that we to actually fix almost all of

00:27:35,760 --> 00:27:42,780
them so that's that's the decision that

00:27:39,060 --> 00:27:46,500
we made and it's actually really working

00:27:42,780 --> 00:27:50,280
really well the only things that needs

00:27:46,500 --> 00:27:53,370
to be done this is the new configuration

00:27:50,280 --> 00:27:58,440
is added in the cloud stack so you only

00:27:53,370 --> 00:28:00,390
need to specify what type of the VPN you

00:27:58,440 --> 00:28:03,240
want to enable for this specific

00:28:00,390 --> 00:28:05,460
installation of the cloud style and it

00:28:03,240 --> 00:28:10,710
works kind of like a switch over you

00:28:05,460 --> 00:28:13,860
cannot have different type of VPN

00:28:10,710 --> 00:28:18,800
implementation per cloud a sec

00:28:13,860 --> 00:28:21,540
installation it's either or the and

00:28:18,800 --> 00:28:26,720
essentially it needs to have a caught

00:28:21,540 --> 00:28:31,050
overt going from the lttp to itv2

00:28:26,720 --> 00:28:34,680
but let's say we decided to go and

00:28:31,050 --> 00:28:38,790
switch over at v2 today if you want to

00:28:34,680 --> 00:28:41,910
enable it you need to reuse recreate the

00:28:38,790 --> 00:28:44,370
vr4 VPC for the configuration of the rp2

00:28:41,910 --> 00:28:46,800
to be applied on top of that so as long

00:28:44,370 --> 00:28:49,950
as you don't destroy the fear of data

00:28:46,800 --> 00:28:52,170
specific VPC it's not going to be you

00:28:49,950 --> 00:28:54,690
the itv2 is not going to be implemented

00:28:52,170 --> 00:28:56,630
on that dr so you can end up in a

00:28:54,690 --> 00:28:59,700
situation that what we do is enable

00:28:56,630 --> 00:29:03,350
globally in the in the infrastructure

00:28:59,700 --> 00:29:08,100
but there are still some part of the

00:29:03,350 --> 00:29:11,220
DPC's and viewers which still uses the

00:29:08,100 --> 00:29:12,960
lttp you need to just keep that in mind

00:29:11,220 --> 00:29:15,560
that whatever you want to switch over

00:29:12,960 --> 00:29:19,320
you need to recreate all those viewers

00:29:15,560 --> 00:29:27,540
wherever you see fit and the maintenance

00:29:19,320 --> 00:29:29,610
schedules allows you to do that as part

00:29:27,540 --> 00:29:40,860
of this there are all sorts of different

00:29:29,610 --> 00:29:43,620
configuration were added this is this is

00:29:40,860 --> 00:29:48,180
going to be again discussed in the

00:29:43,620 --> 00:29:54,570
mailing list because the way we designed

00:29:48,180 --> 00:29:58,710
it you can have both enabled you can

00:29:54,570 --> 00:30:00,630
have cut over from FTTP - I quit - but

00:29:58,710 --> 00:30:02,550
not use volved as a back-end engine

00:30:00,630 --> 00:30:07,350
because we already exist have existing

00:30:02,550 --> 00:30:09,870
CF framework inside the cloud a star x

00:30:07,350 --> 00:30:15,740
to go hit with for this amazing job on

00:30:09,870 --> 00:30:18,390
that front but it can be cut over with

00:30:15,740 --> 00:30:21,920
with this configuration the local

00:30:18,390 --> 00:30:26,010
setting as well that we are going to use

00:30:21,920 --> 00:30:29,060
vault as a back-end engine for might be

00:30:26,010 --> 00:30:32,280
- weekend implementation so you need to

00:30:29,060 --> 00:30:36,780
switch over to what we - then enable

00:30:32,280 --> 00:30:39,390
wolf as a back-end engine then the rest

00:30:36,780 --> 00:30:41,620
of them are basically the configuration

00:30:39,390 --> 00:30:50,139
for how do we do

00:30:41,620 --> 00:30:53,559
define your vault setup so if this goes

00:30:50,139 --> 00:30:58,870
away yeah okay I cannot point to it you

00:30:53,559 --> 00:31:00,700
need to provide the evolved you are 11

00:30:58,870 --> 00:31:03,220
points or voice you mentioned all these

00:31:00,700 --> 00:31:08,080
items in the third column or the default

00:31:03,220 --> 00:31:09,880
values so there is no default URL for

00:31:08,080 --> 00:31:13,299
wall you need to provide it that that's

00:31:09,880 --> 00:31:17,320
the IP and port of or that is listening

00:31:13,299 --> 00:31:21,279
to the token I mentioned here there are

00:31:17,320 --> 00:31:26,340
two different authentication method

00:31:21,279 --> 00:31:30,519
either you can use the token globally or

00:31:26,340 --> 00:31:33,370
you define your approach ID and secret

00:31:30,519 --> 00:31:35,529
ID there these are the prayer that you

00:31:33,370 --> 00:31:41,019
need to whenever you you are going to

00:31:35,529 --> 00:31:44,889
generate a robot after all you need to

00:31:41,019 --> 00:31:46,750
create a bunch of different steps in

00:31:44,889 --> 00:31:49,269
between one of them is to create a

00:31:46,750 --> 00:31:51,490
secret ID and the other one is to

00:31:49,269 --> 00:31:53,019
actually generate to your role ID based

00:31:51,490 --> 00:31:55,510
on that secret ID so you need to have

00:31:53,019 --> 00:31:58,230
both of them in this the combination of

00:31:55,510 --> 00:32:01,860
the two will provide you access to

00:31:58,230 --> 00:32:05,399
authenticate yourself with the vaulters

00:32:01,860 --> 00:32:09,789
and these are actually mutually

00:32:05,399 --> 00:32:13,889
exclusive if you let's say you fill all

00:32:09,789 --> 00:32:17,169
the three of them only token will be

00:32:13,889 --> 00:32:20,470
used because it takes precedence so if

00:32:17,169 --> 00:32:23,769
you specifically want to not use token

00:32:20,470 --> 00:32:28,529
you need to remember to leave it empty

00:32:23,769 --> 00:32:34,480
otherwise it takes precedence of the

00:32:28,529 --> 00:32:37,659
approve mechanism venerable also that

00:32:34,480 --> 00:32:40,539
idea that these are all involved

00:32:37,659 --> 00:32:42,310
back-end configuration for the PKI

00:32:40,539 --> 00:32:44,260
how long do you want you

00:32:42,310 --> 00:32:47,260
root certificate to live how long you

00:32:44,260 --> 00:32:51,040
want to your signed certificate with to

00:32:47,260 --> 00:32:57,670
live all the kind of TTL that you can

00:32:51,040 --> 00:33:00,160
tweak based on your requirement that the

00:32:57,670 --> 00:33:08,890
makes sense for your organizational

00:33:00,160 --> 00:33:10,540
infrastructure then this is you can

00:33:08,890 --> 00:33:12,250
change it or you can leave it this is

00:33:10,540 --> 00:33:15,970
this is not really important whenever

00:33:12,250 --> 00:33:18,910
you want to sign a certificate with the

00:33:15,970 --> 00:33:21,880
with the vault you need to provide a a

00:33:18,910 --> 00:33:25,110
role name to it that world name is going

00:33:21,880 --> 00:33:31,480
to be used internally the process of the

00:33:25,110 --> 00:33:33,910
generating certificate so you need to

00:33:31,480 --> 00:33:36,610
have a root certificate it's going to

00:33:33,910 --> 00:33:39,190
use a role name don't confuse that with

00:33:36,610 --> 00:33:41,560
the actual this is a specifically PKI

00:33:39,190 --> 00:33:45,520
role name so it can literally be

00:33:41,560 --> 00:33:47,560
anything it only whenever you generate

00:33:45,520 --> 00:33:50,710
your root certificate with whatever

00:33:47,560 --> 00:33:56,610
world name both kept keeps track of it

00:33:50,710 --> 00:33:59,920
so it's a one-time-only per domain so

00:33:56,610 --> 00:34:03,130
you can name it whatever it's not going

00:33:59,920 --> 00:34:05,740
to be mattered that much because it's

00:34:03,130 --> 00:34:10,480
going to be separated between the

00:34:05,740 --> 00:34:12,520
different sort of the root CA on another

00:34:10,480 --> 00:34:15,310
level on top of that it's not it's going

00:34:12,520 --> 00:34:19,510
to be separated by the domain level on

00:34:15,310 --> 00:34:22,510
the only cloud stack itself one of the

00:34:19,510 --> 00:34:29,200
most important part is the mount pad

00:34:22,510 --> 00:34:33,100
everything in in the in the world all

00:34:29,200 --> 00:34:39,070
those secrets back ends will be mounted

00:34:33,100 --> 00:34:42,640
on a specific path they are most of them

00:34:39,070 --> 00:34:45,160
starts with the name of the engine so if

00:34:42,640 --> 00:34:46,109
you are if you want to work with the PTO

00:34:45,160 --> 00:34:49,279
back energy

00:34:46,109 --> 00:34:52,909
start with picking oil whatever or

00:34:49,279 --> 00:34:52,909
databases whatever

00:34:53,839 --> 00:34:58,859
the only things and one of the best

00:34:56,549 --> 00:35:02,869
practices to work with Walt essentially

00:34:58,859 --> 00:35:07,349
to prevent collision between different

00:35:02,869 --> 00:35:10,980
mount points is to essentially disable

00:35:07,349 --> 00:35:14,940
all the default ones if you ask for okay

00:35:10,980 --> 00:35:17,369
I want to use PKA it's automatically as

00:35:14,940 --> 00:35:20,309
a default is going to mount it as a PK

00:35:17,369 --> 00:35:22,410
only slash and if you want to use

00:35:20,309 --> 00:35:26,160
another mount point for the pecan gene

00:35:22,410 --> 00:35:28,079
so let's say PK loudest at since the

00:35:26,160 --> 00:35:30,900
mount point of the higher level already

00:35:28,079 --> 00:35:33,739
exists it cannot mount another thing on

00:35:30,900 --> 00:35:36,960
top of an underweight so specifically

00:35:33,739 --> 00:35:39,119
whenever you first install and configure

00:35:36,960 --> 00:35:41,970
the wall for the very first time you can

00:35:39,119 --> 00:35:46,309
just go ahead and disable peaking or

00:35:41,970 --> 00:35:48,960
route the PK by default mount pad

00:35:46,309 --> 00:35:52,220
because to prevent collision then you

00:35:48,960 --> 00:35:56,309
are forced to a specifically provide

00:35:52,220 --> 00:35:56,489
subsequent path for the mount point such

00:35:56,309 --> 00:35:58,680
as

00:35:56,489 --> 00:36:00,900
PKR loudest and maybe another part of

00:35:58,680 --> 00:36:03,499
your organization want to use the same

00:36:00,900 --> 00:36:07,529
sort of the certificate generation for I

00:36:03,499 --> 00:36:12,239
don't know for your chef answer the

00:36:07,529 --> 00:36:15,299
whatever so instead of having having

00:36:12,239 --> 00:36:17,940
them all falls in the under one specific

00:36:15,299 --> 00:36:22,559
path you can separate them logically

00:36:17,940 --> 00:36:23,819
under different mount points another so

00:36:22,559 --> 00:36:26,819
this is the default when you pick a

00:36:23,819 --> 00:36:29,819
notice type but most of the time of all

00:36:26,819 --> 00:36:33,720
the closu seconds installation we don't

00:36:29,819 --> 00:36:36,989
have so we don't have only one

00:36:33,720 --> 00:36:41,630
installation or one availability zone or

00:36:36,989 --> 00:36:44,249
one region so it kind of makes sense to

00:36:41,630 --> 00:36:46,819
suffix that with more information so

00:36:44,249 --> 00:36:50,780
pick a louder start

00:36:46,819 --> 00:36:52,430
Canada West Quebec

00:36:50,780 --> 00:36:55,940
maybe you have two different data

00:36:52,430 --> 00:36:57,680
centers in Quebec maybe you have two

00:36:55,940 --> 00:36:59,330
different availability zone in each of

00:36:57,680 --> 00:37:02,900
those data centers in Quebec

00:36:59,330 --> 00:37:06,770
so whatever makes sense to you for each

00:37:02,900 --> 00:37:09,590
installation all this mount point is

00:37:06,770 --> 00:37:11,390
essentially to prevent collision between

00:37:09,590 --> 00:37:14,810
different installation of the cloud

00:37:11,390 --> 00:37:18,110
start on from the wall point of view so

00:37:14,810 --> 00:37:19,730
just configure it as deep as you want as

00:37:18,110 --> 00:37:25,430
specific as you want on different

00:37:19,730 --> 00:37:30,920
Kelowna SEC installation and the first

00:37:25,430 --> 00:37:33,410
tool is just formatting essentially if

00:37:30,920 --> 00:37:35,690
you if you grabbed a certificate and you

00:37:33,410 --> 00:37:39,110
try to reverse Percy and get the

00:37:35,690 --> 00:37:41,840
metadata out of that certificate if it

00:37:39,110 --> 00:37:48,010
show you that the description of the

00:37:41,840 --> 00:37:51,050
certificate it has this this plug-in is

00:37:48,010 --> 00:37:53,030
constructing a specific format that is

00:37:51,050 --> 00:37:57,920
going to use the brand so let's say you

00:37:53,030 --> 00:38:00,650
are in your own company you give it your

00:37:57,920 --> 00:38:02,180
own name instead of a general Travis tag

00:38:00,650 --> 00:38:06,880
so it's going to be used

00:38:02,180 --> 00:38:09,440
Travis tag this is the format CloudStack

00:38:06,880 --> 00:38:12,230
whatever brand name you are going to use

00:38:09,440 --> 00:38:16,670
this going to go to place here VPN name

00:38:12,230 --> 00:38:18,380
of the CloudStack domain then CA so for

00:38:16,670 --> 00:38:20,960
a root locus and domain general

00:38:18,380 --> 00:38:24,560
installation it becomes Travis time VPN

00:38:20,960 --> 00:38:26,930
root CA for your domain

00:38:24,560 --> 00:38:31,820
I don't know cloud Ofcom if it's under

00:38:26,930 --> 00:38:33,920
another part of the domain inside the

00:38:31,820 --> 00:38:37,220
cloud stack so this will become Vivian

00:38:33,920 --> 00:38:40,670
cloud cloud ops comment ca this gives

00:38:37,220 --> 00:38:45,260
you this gives the customer a sense of

00:38:40,670 --> 00:38:48,110
kind of ownership of the VPN because the

00:38:45,260 --> 00:38:50,740
customers see most probably if if you

00:38:48,110 --> 00:38:53,660
are doing the multi-tenancy with the

00:38:50,740 --> 00:38:54,390
domain inside the cloud start each of

00:38:53,660 --> 00:38:58,140
them

00:38:54,390 --> 00:39:01,890
sits in a some kind of informative to my

00:38:58,140 --> 00:39:04,170
name so in that case you would when they

00:39:01,890 --> 00:39:09,720
receive the certificate and downloaded

00:39:04,170 --> 00:39:12,390
to to to use them essentially they would

00:39:09,720 --> 00:39:17,299
see that the own name in the title of

00:39:12,390 --> 00:39:28,589
the certificate so it's some kind of

00:39:17,299 --> 00:39:30,690
maybe give them good feeling so this is

00:39:28,589 --> 00:39:39,210
the one that I mentioned so when you

00:39:30,690 --> 00:39:42,690
wanna create a CRO you need to you need

00:39:39,210 --> 00:39:46,049
to generate the apple provider

00:39:42,690 --> 00:39:48,450
certificate for what is our provider

00:39:46,049 --> 00:39:50,839
secret and secure toilet we essentially

00:39:48,450 --> 00:39:55,049
then you generate a pro at the same time

00:39:50,839 --> 00:39:59,210
we can expect file use these policies on

00:39:55,049 --> 00:40:03,059
top of that app roll to to narrow down

00:39:59,210 --> 00:40:06,299
the access that that specific app room

00:40:03,059 --> 00:40:10,259
has inside of all this is the way to do

00:40:06,299 --> 00:40:12,779
it these are the the sample policies the

00:40:10,259 --> 00:40:16,769
policies in the in the world that there

00:40:12,779 --> 00:40:20,759
are another another internal back-end

00:40:16,769 --> 00:40:21,930
engine of its own with internal mount

00:40:20,759 --> 00:40:25,049
point of its own

00:40:21,930 --> 00:40:27,839
we are not necessarily use them outside

00:40:25,049 --> 00:40:32,130
of the world but internally they were

00:40:27,839 --> 00:40:34,380
being used so again so let's say we have

00:40:32,130 --> 00:40:37,849
a ball cluster which is going to be used

00:40:34,380 --> 00:40:43,650
all over the place and then we can

00:40:37,849 --> 00:40:50,180
define an suffix however you want to to

00:40:43,650 --> 00:40:52,380
make this policy specific to some

00:40:50,180 --> 00:40:54,650
availability zone region whatever

00:40:52,380 --> 00:41:00,079
whatever

00:40:54,650 --> 00:41:02,480
Keynesian again we tested a couple of

00:41:00,079 --> 00:41:06,619
different scenario and essentially we

00:41:02,480 --> 00:41:09,400
need for the PK engine integration we

00:41:06,619 --> 00:41:14,359
need to have these two mounts because

00:41:09,400 --> 00:41:17,960
the first one is going to I should

00:41:14,359 --> 00:41:20,599
remember to mention whatever so whatever

00:41:17,960 --> 00:41:24,650
name you are giving in this slide

00:41:20,599 --> 00:41:28,339
whatever path you need to replicate it

00:41:24,650 --> 00:41:31,549
and repeat it here what happens is that

00:41:28,339 --> 00:41:34,849
in a wall that you are saying this role

00:41:31,549 --> 00:41:39,829
and should have access to PKA glottis

00:41:34,849 --> 00:41:41,960
tactic dc1 let's say so we defined that

00:41:39,829 --> 00:41:46,420
in the configuration settings at the

00:41:41,960 --> 00:41:49,460
same time you are going to define the

00:41:46,420 --> 00:41:52,999
capability of the read and update for

00:41:49,460 --> 00:41:56,240
that specific mount point what happens

00:41:52,999 --> 00:42:01,640
is the first time that we asked as a

00:41:56,240 --> 00:42:03,650
client to enable remote management it it

00:42:01,640 --> 00:42:05,660
talks to walls or to give me a root

00:42:03,650 --> 00:42:06,799
certificate and sign a certificate for

00:42:05,660 --> 00:42:09,499
that and give me back the information

00:42:06,799 --> 00:42:13,519
that I can pass it along to the user

00:42:09,499 --> 00:42:17,720
do you default do you see the amount

00:42:13,519 --> 00:42:21,890
point no so mount it for us do whatever

00:42:17,720 --> 00:42:24,730
you need to do then give it us back to

00:42:21,890 --> 00:42:27,079
to prevent a manual operation from the

00:42:24,730 --> 00:42:29,299
from the operation team because

00:42:27,079 --> 00:42:31,160
otherwise whenever you create a new

00:42:29,299 --> 00:42:33,230
domain inside the clutters that you need

00:42:31,160 --> 00:42:35,869
to remember that go to wall and create a

00:42:33,230 --> 00:42:38,480
mountain for it to prevent that and make

00:42:35,869 --> 00:42:43,400
everything automated you need to give

00:42:38,480 --> 00:42:47,599
that a specific role has access to mount

00:42:43,400 --> 00:42:52,700
something on a specific pkas - whatever

00:42:47,599 --> 00:42:54,499
and after that and this is the this is

00:42:52,700 --> 00:42:57,349
going to be used internally evolved

00:42:54,499 --> 00:42:59,749
again to actually generate all the

00:42:57,349 --> 00:43:01,029
certificate generated certificates

00:42:59,749 --> 00:43:05,729
signed a certificate

00:43:01,029 --> 00:43:08,799
revokes users or IPS from the

00:43:05,729 --> 00:43:11,019
certificate handles and manage the CSR

00:43:08,799 --> 00:43:14,169
almost kind of stuff everything happens

00:43:11,019 --> 00:43:16,089
under that back end and Jane Deepika

00:43:14,169 --> 00:43:21,130
backing and Jane and so everything needs

00:43:16,089 --> 00:43:23,609
to be done with an update so if you need

00:43:21,130 --> 00:43:28,269
to if you want to use the app roll

00:43:23,609 --> 00:43:31,539
you can keep these two sample policies

00:43:28,269 --> 00:43:38,709
to the air pro and from the integration

00:43:31,539 --> 00:43:42,630
point of view everything is no the

00:43:38,709 --> 00:43:45,939
second integration point that we did is

00:43:42,630 --> 00:43:48,039
changing the behavior of how secret and

00:43:45,939 --> 00:43:50,919
hidden configuration from the global

00:43:48,039 --> 00:43:54,189
settings works essentially up to now

00:43:50,919 --> 00:44:00,489
everything was implemented everything

00:43:54,189 --> 00:44:03,929
was encrypted and decrypted with the DVD

00:44:00,489 --> 00:44:08,499
encryption utils that internally use the

00:44:03,929 --> 00:44:11,709
encryption of the PP with md5 and DES

00:44:08,499 --> 00:44:14,679
which is secure enough which works but

00:44:11,709 --> 00:44:17,349
the thing is if for whatever reason the

00:44:14,679 --> 00:44:19,989
database is compromised some attack

00:44:17,349 --> 00:44:23,849
happened and someone has access to them

00:44:19,989 --> 00:44:27,909
to our own database what can be done is

00:44:23,849 --> 00:44:29,890
they can reverse engineer because this

00:44:27,909 --> 00:44:32,259
is a the cloud-like is open source

00:44:29,890 --> 00:44:34,839
someone can easily find VPN connection

00:44:32,259 --> 00:44:37,829
details and see them however how we are

00:44:34,839 --> 00:44:41,289
encrypting the items in inside the

00:44:37,829 --> 00:44:47,799
database and it's Java based encryption

00:44:41,289 --> 00:44:51,519
so an decryption is just as easy and the

00:44:47,799 --> 00:44:53,709
thing is the chance of the database

00:44:51,519 --> 00:44:57,969
being compromised is low but the thing

00:44:53,709 --> 00:45:00,880
is it could happen but if we are using

00:44:57,969 --> 00:45:03,519
both as a back imaging so we detect an

00:45:00,880 --> 00:45:04,680
attack this happened the only the

00:45:03,519 --> 00:45:08,460
absolute only thing that

00:45:04,680 --> 00:45:10,200
need to do is seeing the world oh I

00:45:08,460 --> 00:45:14,359
should mention I should have mentioned

00:45:10,200 --> 00:45:18,540
that earlier so when the men involved is

00:45:14,359 --> 00:45:20,309
still it means it absolutely cannot do

00:45:18,540 --> 00:45:23,040
anything you as a client

00:45:20,309 --> 00:45:26,010
talk to wall it doesn't do anything

00:45:23,040 --> 00:45:28,230
because it's literally sealed you

00:45:26,010 --> 00:45:30,660
whenever you install the vault as a

00:45:28,230 --> 00:45:33,000
first installation or first second

00:45:30,660 --> 00:45:35,309
cluster or whatever or after attack

00:45:33,000 --> 00:45:38,430
after maintenance after crash you need

00:45:35,309 --> 00:45:42,500
to unseal it on C it means that vault is

00:45:38,430 --> 00:45:47,790
now open for communication and

00:45:42,500 --> 00:45:50,670
connection with the client so when and

00:45:47,790 --> 00:45:52,980
when an attack happens all the only

00:45:50,670 --> 00:45:55,800
thing you need to do is just go ahead

00:45:52,980 --> 00:45:58,050
and see the ball that's it they have the

00:45:55,800 --> 00:46:00,720
code in a github repository they have

00:45:58,050 --> 00:46:03,480
the database everything is there but

00:46:00,720 --> 00:46:05,760
let's say even if they are on the net

00:46:03,480 --> 00:46:08,700
they are on the network they can not

00:46:05,760 --> 00:46:11,819
talk to Walt on increment to decrease

00:46:08,700 --> 00:46:15,750
the whatever secret you have any in your

00:46:11,819 --> 00:46:18,240
database you need to unseal it to be

00:46:15,750 --> 00:46:22,380
able to talk to so it gives another

00:46:18,240 --> 00:46:28,770
layer security by some sense of the

00:46:22,380 --> 00:46:31,650
world I guess so it's in our opinion

00:46:28,770 --> 00:46:34,680
it's a it's a better implementation as

00:46:31,650 --> 00:46:37,770
well as that it's going to offload the

00:46:34,680 --> 00:46:40,589
CPU usage for encryption and decryption

00:46:37,770 --> 00:46:43,410
because these are CPU extensive maybe

00:46:40,589 --> 00:46:45,089
they are taking I don't know ten

00:46:43,410 --> 00:46:48,690
milliseconds but they are taking some

00:46:45,089 --> 00:46:51,329
time instead of putting the load on the

00:46:48,690 --> 00:46:55,559
management server itself to encrypt and

00:46:51,329 --> 00:46:57,270
decrypt all those sort of values that

00:46:55,559 --> 00:47:00,359
were reading and writing to the database

00:46:57,270 --> 00:47:04,859
you can offload it to the vault there is

00:47:00,359 --> 00:47:06,089
a another part for network latency and

00:47:04,859 --> 00:47:11,920
back and forth

00:47:06,089 --> 00:47:14,140
ATL calls but generally it's way faster

00:47:11,920 --> 00:47:17,860
in the long run it's very it's very

00:47:14,140 --> 00:47:20,770
faster than leaving kind of computation

00:47:17,860 --> 00:47:24,010
sitting inside the management server

00:47:20,770 --> 00:47:28,420
itself which has tons of other things to

00:47:24,010 --> 00:47:31,810
do anyway for that there's another

00:47:28,420 --> 00:47:33,670
conflict other than or leave it disabled

00:47:31,810 --> 00:47:38,640
to switch basically back and forth

00:47:33,670 --> 00:47:41,680
between the vault configuration of the

00:47:38,640 --> 00:47:44,530
vault encryption and decryption of the

00:47:41,680 --> 00:47:46,480
secret values or limited cloud asset

00:47:44,530 --> 00:47:49,750
management server itself included and

00:47:46,480 --> 00:47:54,190
approved the values this is going to use

00:47:49,750 --> 00:47:56,800
a dimension that transit so the transit

00:47:54,190 --> 00:48:00,040
packing engine so wall doesn't store any

00:47:56,800 --> 00:48:03,010
of these anywhere except whatever both

00:48:00,040 --> 00:48:05,800
needs to the store namely the the key of

00:48:03,010 --> 00:48:08,110
the the key that is going to be used for

00:48:05,800 --> 00:48:10,840
encryption and decryption it's not going

00:48:08,110 --> 00:48:14,680
to be passed that anywhere it's sitting

00:48:10,840 --> 00:48:16,600
inside the vault itself so you just give

00:48:14,680 --> 00:48:18,850
the value it encrypts it it gives you

00:48:16,600 --> 00:48:22,030
back you store it in the database the

00:48:18,850 --> 00:48:23,470
next time you need it you query the same

00:48:22,030 --> 00:48:25,900
field in the database

00:48:23,470 --> 00:48:29,290
you can't do that you give it back to

00:48:25,900 --> 00:48:33,480
the wall it decrypts it if then you use

00:48:29,290 --> 00:48:36,720
it somewhere else inside the cloud like

00:48:33,480 --> 00:48:41,770
magic down bro

00:48:36,720 --> 00:48:45,670
so the same goes here we have a there is

00:48:41,770 --> 00:48:49,690
a discussion that we are going to maybe

00:48:45,670 --> 00:48:52,090
change the URL in a in a higher level to

00:48:49,690 --> 00:48:55,480
prevent duplicate because what now we

00:48:52,090 --> 00:48:58,540
need to define a URL for what endpoint

00:48:55,480 --> 00:49:02,020
twice for two different plugins which

00:48:58,540 --> 00:49:06,430
point to the same vault which we did

00:49:02,020 --> 00:49:09,190
which is redundant but the and the token

00:49:06,430 --> 00:49:14,050
token is the same thing because one

00:49:09,190 --> 00:49:16,330
token rule them all what the thing is

00:49:14,050 --> 00:49:19,060
the Aperol and secret ID is a specific

00:49:16,330 --> 00:49:22,920
so these two are not with on them from

00:49:19,060 --> 00:49:25,780
the itv2 plugin and secure contact logon

00:49:22,920 --> 00:49:27,160
what the both rural and token is the

00:49:25,780 --> 00:49:29,020
same exact same thing that I mentioned

00:49:27,160 --> 00:49:33,510
before even these two but four different

00:49:29,020 --> 00:49:33,510
Apple that you need to define for the

00:49:33,960 --> 00:49:42,040
transit back-end engine the same point

00:49:38,470 --> 00:49:45,040
two effects that you need to readjust or

00:49:42,040 --> 00:49:49,080
add more item at the end of it to make

00:49:45,040 --> 00:49:53,710
it absolutely unique per your whole

00:49:49,080 --> 00:49:54,820
infrastructure all over the already to

00:49:53,710 --> 00:49:58,060
board whatever you have the

00:49:54,820 --> 00:50:01,450
infrastructure this is the this is the

00:49:58,060 --> 00:50:05,190
key name that when you want to use the

00:50:01,450 --> 00:50:09,870
transit as a back-end engine you need to

00:50:05,190 --> 00:50:13,060
provide a key name that's the only

00:50:09,870 --> 00:50:15,640
that's the only the name of the key

00:50:13,060 --> 00:50:18,250
that's going to be generated Boyd

00:50:15,640 --> 00:50:21,070
evolved internally and keep track of it

00:50:18,250 --> 00:50:23,320
then the next time you need to when you

00:50:21,070 --> 00:50:26,710
want to decrypt the value we just asked

00:50:23,320 --> 00:50:31,630
Walt that okay decrypt the value for me

00:50:26,710 --> 00:50:34,540
with that chain you already have so you

00:50:31,630 --> 00:50:39,790
can this is just a sample name you can

00:50:34,540 --> 00:50:42,280
give it whatever name you want you and

00:50:39,790 --> 00:50:45,490
that that name who is going to be used

00:50:42,280 --> 00:50:48,460
for for encryption and decryption of the

00:50:45,490 --> 00:50:50,860
values and essentially you need to

00:50:48,460 --> 00:50:58,330
either enable it and disable it as I

00:50:50,860 --> 00:51:01,510
mentioned and the same policies samples

00:50:58,330 --> 00:51:06,070
that that can be used for defining and

00:51:01,510 --> 00:51:09,250
generating the Apple to connect to to

00:51:06,070 --> 00:51:11,890
talk to transit back-end engine again

00:51:09,250 --> 00:51:15,370
the most important one is that these

00:51:11,890 --> 00:51:15,760
names per vault installation needs to be

00:51:15,370 --> 00:51:21,480
unique

00:51:15,760 --> 00:51:23,760
so if we have multiple regions zones

00:51:21,480 --> 00:51:26,340
installation you need to have have

00:51:23,760 --> 00:51:31,340
something at the surface at the end of

00:51:26,340 --> 00:51:34,890
them but the name of the policies and

00:51:31,340 --> 00:51:38,660
actual mount point of the policies so

00:51:34,890 --> 00:51:44,369
here yeah but essentially these are the

00:51:38,660 --> 00:51:48,140
same thing as before so these are up to

00:51:44,369 --> 00:51:51,330
now implemented but there are more

00:51:48,140 --> 00:51:54,330
integration points that make sense that

00:51:51,330 --> 00:51:57,869
to go towards that path the first one is

00:51:54,330 --> 00:52:02,220
to actually offload database credential

00:51:57,869 --> 00:52:05,250
management from the classic itself to to

00:52:02,220 --> 00:52:07,650
the both so right now out of the box for

00:52:05,250 --> 00:52:11,760
installation we have the cloud cycle

00:52:07,650 --> 00:52:14,030
which has two predefined user and

00:52:11,760 --> 00:52:16,590
password route cloud and cloud and cloud

00:52:14,030 --> 00:52:18,869
these are really good for the

00:52:16,590 --> 00:52:24,740
environment or demo environment or maybe

00:52:18,869 --> 00:52:28,230
a CI CD pipeline but for an actual

00:52:24,740 --> 00:52:30,960
production we don't necessarily need to

00:52:28,230 --> 00:52:32,700
use route as a user let alone photon

00:52:30,960 --> 00:52:36,930
cloud or manually change the password of

00:52:32,700 --> 00:52:39,720
it we can create an integration that

00:52:36,930 --> 00:52:42,660
whenever the management server starts it

00:52:39,720 --> 00:52:44,580
goes and talks to evolve and receives

00:52:42,660 --> 00:52:46,320
its credential for the user it can be

00:52:44,580 --> 00:52:49,920
absolutely anything it actually starts

00:52:46,320 --> 00:52:52,290
with a valve - if I remember correctly

00:52:49,920 --> 00:52:55,680
DB - something this is the actual name

00:52:52,290 --> 00:52:58,740
of the user so the name of the user is

00:52:55,680 --> 00:53:00,060
actually is really obfuscated let alone

00:52:58,740 --> 00:53:04,320
the password the password is driven

00:53:00,060 --> 00:53:07,470
sitting the was itself so it adds

00:53:04,320 --> 00:53:10,380
another level layer of security because

00:53:07,470 --> 00:53:14,400
it's not predictable the username is

00:53:10,380 --> 00:53:20,369
even not predictable - to do a brute

00:53:14,400 --> 00:53:23,890
force attack or whatever another good

00:53:20,369 --> 00:53:27,279
integration point in our opinion is that

00:53:23,890 --> 00:53:32,079
HK for system BM instead of with evolve

00:53:27,279 --> 00:53:33,480
and send them back either directly to

00:53:32,079 --> 00:53:36,339
management server to be shipped to

00:53:33,480 --> 00:53:40,210
sustain p.m. or the system VM itself can

00:53:36,339 --> 00:53:42,130
talk to Walt and asked for SSH key

00:53:40,210 --> 00:53:44,619
because right now we are building them

00:53:42,130 --> 00:53:48,630
and injecting them locally in the

00:53:44,619 --> 00:53:53,319
management server that can be loaded to

00:53:48,630 --> 00:53:58,150
evolved installation another good point

00:53:53,319 --> 00:54:02,019
could be that we can use OTS one-time

00:53:58,150 --> 00:54:05,980
password for one SS password for

00:54:02,019 --> 00:54:09,220
connecting to system V and right now the

00:54:05,980 --> 00:54:12,400
only thing that we can do make the

00:54:09,220 --> 00:54:16,329
password of the system VMs randomized so

00:54:12,400 --> 00:54:18,670
to add to make them more secure so it

00:54:16,329 --> 00:54:20,680
means that we enable that we sodomized

00:54:18,670 --> 00:54:23,220
your server then we don't know the

00:54:20,680 --> 00:54:26,529
password of the management server the

00:54:23,220 --> 00:54:29,920
password of the system BMS it is good

00:54:26,529 --> 00:54:34,240
but why not we can make a one-time

00:54:29,920 --> 00:54:36,490
password instead of directly using so we

00:54:34,240 --> 00:54:40,329
need to SSH into the hypervisor then use

00:54:36,490 --> 00:54:42,400
a predefined key in the hypervisor to

00:54:40,329 --> 00:54:44,769
establishing the system p.m. but that

00:54:42,400 --> 00:54:49,329
can be done with a one-time password

00:54:44,769 --> 00:54:53,160
it's because the death that private key

00:54:49,329 --> 00:54:55,839
sees forever in the hypervisor but

00:54:53,160 --> 00:54:58,539
connecting to what asking for a one-time

00:54:55,839 --> 00:55:02,049
password is one-time only for the meter

00:54:58,539 --> 00:55:03,880
time of limited amount of time 10

00:55:02,049 --> 00:55:09,039
seconds 15 seconds 1 minute something

00:55:03,880 --> 00:55:12,990
like that so even it's kind of more

00:55:09,039 --> 00:55:17,109
secure than randomizing password maybe

00:55:12,990 --> 00:55:19,779
because because we are not using the

00:55:17,109 --> 00:55:25,480
private key which sits for over at

00:55:19,779 --> 00:55:28,269
sunburn and any other thing that we

00:55:25,480 --> 00:55:30,279
might not be think of because opening up

00:55:28,269 --> 00:55:33,079
the integration with both open

00:55:30,279 --> 00:55:36,170
the whole door to so many different

00:55:33,079 --> 00:55:39,619
possibilities we can do we can offer so

00:55:36,170 --> 00:55:41,779
many things to the world that we might

00:55:39,619 --> 00:55:48,789
not have think about it at the moment

00:55:41,779 --> 00:55:48,789
yeah yeah sure it was the last one

00:56:02,870 --> 00:56:08,270
so the question was if I understand

00:56:05,480 --> 00:56:11,060
quickly they're the both plug in is it

00:56:08,270 --> 00:56:17,900
implemented for only CA or generally

00:56:11,060 --> 00:56:20,720
correct so as of now I'm working on a

00:56:17,900 --> 00:56:23,510
pure - this is all these guys are going

00:56:20,720 --> 00:56:27,860
to be released and we are aiming for

00:56:23,510 --> 00:56:30,410
four to twelve release so it's it's

00:56:27,860 --> 00:56:33,260
going to sit alongside the cfrm work

00:56:30,410 --> 00:56:35,240
inside the cloud stack so as I mentioned

00:56:33,260 --> 00:56:38,810
earlier that you can switch between the

00:56:35,240 --> 00:56:43,280
two we can enable LP - but ask not to

00:56:38,810 --> 00:56:46,250
use both use internal see a framework

00:56:43,280 --> 00:56:49,480
that we already have or instead of using

00:56:46,250 --> 00:56:54,320
that CFL work internally use PK the

00:56:49,480 --> 00:56:57,670
packaging of evolved to do all kind of

00:56:54,320 --> 00:57:01,390
the certificate CA work essentially

00:56:57,670 --> 00:57:06,820
generating signing and retaining backed

00:57:01,390 --> 00:57:06,820
the certificate and CSRs erm

00:57:15,599 --> 00:57:21,900
the integration wasn't done yet

00:57:19,220 --> 00:57:26,549
actually we haven't started it at all

00:57:21,900 --> 00:57:32,009
what potentially yes because the way we

00:57:26,549 --> 00:57:34,739
implemented a it's there is a there's a

00:57:32,009 --> 00:57:41,039
service layer for either that you can

00:57:34,739 --> 00:57:44,640
inject it anywhere in the code that can

00:57:41,039 --> 00:57:48,059
be it can be used for any any part of

00:57:44,640 --> 00:57:50,489
the reason so yeah that's correct if it

00:57:48,059 --> 00:57:53,430
can't be done it needs to be discussed

00:57:50,489 --> 00:57:57,140
in making this if everybody is offering

00:57:53,430 --> 00:58:01,410
yeah because the the whole point of is

00:57:57,140 --> 00:58:05,130
the integration processing and basically

00:58:01,410 --> 00:58:07,019
encapsulation of the working with volved

00:58:05,130 --> 00:58:10,349
is already implemented so it's a matter

00:58:07,019 --> 00:58:14,029
of the when and where and how we use it

00:58:10,349 --> 00:58:14,029
inside the rest of the code base

00:58:18,200 --> 00:58:21,910
any other questions

00:58:25,260 --> 00:58:32,889
thank you

00:58:27,040 --> 00:58:32,889

YouTube URL: https://www.youtube.com/watch?v=1-KygMGO-P8


