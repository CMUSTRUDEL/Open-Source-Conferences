Title: Apache Streams : Enterprise Social Integration
Publication date: 2013-10-17
Playlist: Apachecon NA 2013 - day 1
Description: 
	Craig McClanahan, Matt Franklin ApacheCon NA 2013
Tapping the Stream
Captions: 
	00:00:05,899 --> 00:00:12,210
thank you guys can hear me like to

00:00:09,300 --> 00:00:14,250
welcome you to Apache con us for this

00:00:12,210 --> 00:00:16,289
year also it gives me a lot of pleasure

00:00:14,250 --> 00:00:17,730
to invite you to my hometown I work

00:00:16,289 --> 00:00:19,859
about six blocks from here at drive

00:00:17,730 --> 00:00:23,070
software so it's kind of wonderful not

00:00:19,859 --> 00:00:25,109
to have to travel once so unlike several

00:00:23,070 --> 00:00:27,330
of the the talks on this track which are

00:00:25,109 --> 00:00:29,300
talking about low-level messaging and

00:00:27,330 --> 00:00:31,529
how you put scalable system together

00:00:29,300 --> 00:00:33,540
we're going to talk today about a

00:00:31,529 --> 00:00:35,430
particular data format and how it is

00:00:33,540 --> 00:00:37,230
becoming more and more popular and then

00:00:35,430 --> 00:00:38,700
how the Apache streams project which is

00:00:37,230 --> 00:00:40,890
in the incubator right now can address

00:00:38,700 --> 00:00:43,410
putting together a server that focuses

00:00:40,890 --> 00:00:45,629
on that so we'll talk a little bit about

00:00:43,410 --> 00:00:48,420
an activity or interview of the world

00:00:45,629 --> 00:00:50,070
that is kind of evolving and and it's

00:00:48,420 --> 00:00:52,289
become very popular because of what's

00:00:50,070 --> 00:00:54,989
going on in the in the social consumer

00:00:52,289 --> 00:00:57,170
software world but it also applies to

00:00:54,989 --> 00:01:00,149
business and enterprise problems as well

00:00:57,170 --> 00:01:02,520
we'll talk about the standardized format

00:01:00,149 --> 00:01:04,650
that is coming from the activity streams

00:01:02,520 --> 00:01:08,010
organization talk about the Apache

00:01:04,650 --> 00:01:10,920
streams project itself a little bit do a

00:01:08,010 --> 00:01:13,770
quick quote unquote devil demos have

00:01:10,920 --> 00:01:15,960
been aware not sexy sorry but will at

00:01:13,770 --> 00:01:19,830
least see the the basic steps involved

00:01:15,960 --> 00:01:22,350
in what's going on and then wrap up so

00:01:19,830 --> 00:01:24,780
taking back a couple of decades over how

00:01:22,350 --> 00:01:26,939
people have learned to interact on the

00:01:24,780 --> 00:01:29,610
Internet one of the earlier popular ways

00:01:26,939 --> 00:01:32,390
was blog posts and comments on them but

00:01:29,610 --> 00:01:35,790
I had to go to each individual site and

00:01:32,390 --> 00:01:37,380
make and read the blogs make my comments

00:01:35,790 --> 00:01:40,229
and I had to go back and see if other

00:01:37,380 --> 00:01:42,509
people commented on them for me or we

00:01:40,229 --> 00:01:44,460
had huge documents and treatises and

00:01:42,509 --> 00:01:46,799
things like that people were measured on

00:01:44,460 --> 00:01:50,040
the number of words they wrote but there

00:01:46,799 --> 00:01:51,869
would be very time separated sorts of

00:01:50,040 --> 00:01:55,200
things that I went my write write a blog

00:01:51,869 --> 00:01:56,790
post once a week activities are kind of

00:01:55,200 --> 00:01:58,920
in a different world they tell a story

00:01:56,790 --> 00:02:01,259
there that are much more fine-grained

00:01:58,920 --> 00:02:04,530
like Geraldine posted a photo on her

00:02:01,259 --> 00:02:07,110
blog or John shared a video with mark so

00:02:04,530 --> 00:02:09,509
they kind of have the idea of this is

00:02:07,110 --> 00:02:12,569
what just happened as opposed to being

00:02:09,509 --> 00:02:15,209
an event that happens once a week

00:02:12,569 --> 00:02:17,280
and so an activity stream then is an

00:02:15,209 --> 00:02:18,989
ordered list of these things typically

00:02:17,280 --> 00:02:22,469
in reverse chronological order is the

00:02:18,989 --> 00:02:25,799
way that the most of the world presents

00:02:22,469 --> 00:02:28,409
such things and we really see this in

00:02:25,799 --> 00:02:30,299
things like Facebook Timeline and pretty

00:02:28,409 --> 00:02:33,000
much every social web site has an

00:02:30,299 --> 00:02:36,750
activity stream many applications are

00:02:33,000 --> 00:02:38,700
starting to have streams as well so it's

00:02:36,750 --> 00:02:41,519
it's become so popular but it had

00:02:38,700 --> 00:02:43,499
different features the format of the

00:02:41,519 --> 00:02:46,200
data was different on every system and

00:02:43,499 --> 00:02:49,919
it made it difficult for us to aggregate

00:02:46,200 --> 00:02:51,959
those things together so like for me I

00:02:49,919 --> 00:02:54,419
have a pet peeve of having to go to blog

00:02:51,959 --> 00:02:56,069
post sites and message forums that have

00:02:54,419 --> 00:02:58,739
to go back and back and back I want the

00:02:56,069 --> 00:03:00,209
information to flow to me and the way

00:02:58,739 --> 00:03:03,419
that people like me got what we wanted

00:03:00,209 --> 00:03:05,219
in the past was through email we used

00:03:03,419 --> 00:03:06,540
email as an aggregation tool because it

00:03:05,219 --> 00:03:08,519
could take any format you wanted

00:03:06,540 --> 00:03:10,500
intermix it you could reply to it and do

00:03:08,519 --> 00:03:12,599
all of those things but it doesn't work

00:03:10,500 --> 00:03:15,060
very efficiently at structured

00:03:12,599 --> 00:03:18,090
information because you have to actually

00:03:15,060 --> 00:03:21,479
go apply filters to it but it does serve

00:03:18,090 --> 00:03:23,310
the aggregation problem so now i would i

00:03:21,479 --> 00:03:25,439
want the activities from all of the

00:03:23,310 --> 00:03:27,359
things I deal with to be aggregated

00:03:25,439 --> 00:03:29,519
together but I also want to be able to

00:03:27,359 --> 00:03:31,560
integrate and interoperate activities

00:03:29,519 --> 00:03:33,750
from different systems so a lot of us

00:03:31,560 --> 00:03:36,629
here are software developers so let's

00:03:33,750 --> 00:03:38,970
take a very selfish example of what I'm

00:03:36,629 --> 00:03:40,379
talking about at work I interact with

00:03:38,970 --> 00:03:42,150
several systems we've got a project

00:03:40,379 --> 00:03:45,299
management environment we got issue

00:03:42,150 --> 00:03:48,859
tracking we've got get for source code

00:03:45,299 --> 00:03:51,569
repository and we've got our internal

00:03:48,859 --> 00:03:54,090
communication system each of those

00:03:51,569 --> 00:03:56,849
systems generates activity when I do

00:03:54,090 --> 00:03:58,859
things each and also one of my

00:03:56,849 --> 00:04:01,500
colleagues do things I would like to be

00:03:58,859 --> 00:04:03,030
able to follow all of the activities

00:04:01,500 --> 00:04:05,579
related to a particular chunk of our

00:04:03,030 --> 00:04:08,189
source code base in any of those systems

00:04:05,579 --> 00:04:10,289
and filter just the ones that I care

00:04:08,189 --> 00:04:13,079
about all together that's the kind of

00:04:10,289 --> 00:04:15,359
the selfish view I've got that is

00:04:13,079 --> 00:04:17,430
difficult to do when the activity stream

00:04:15,359 --> 00:04:19,019
formats of those different apps are all

00:04:17,430 --> 00:04:21,740
different I have to start writing

00:04:19,019 --> 00:04:25,690
integration software so the idea of

00:04:21,740 --> 00:04:27,340
having a standard data format both

00:04:25,690 --> 00:04:29,620
solve what has been known as the friend

00:04:27,340 --> 00:04:31,780
Pete problem so friendfeed before they

00:04:29,620 --> 00:04:34,420
got too tired by acquired by Twitter in

00:04:31,780 --> 00:04:36,040
2009 one of the features that they

00:04:34,420 --> 00:04:38,110
offered was interact interoperation

00:04:36,040 --> 00:04:41,920
between all sorts of different data

00:04:38,110 --> 00:04:44,710
systems 59 of them and they had to do a

00:04:41,920 --> 00:04:47,110
lot of work to make that possible what

00:04:44,710 --> 00:04:48,550
if instead of having to solve the

00:04:47,110 --> 00:04:51,790
problem that way we solved it with a

00:04:48,550 --> 00:04:53,470
common data format instead at an

00:04:51,790 --> 00:04:57,150
activity format that is generalized

00:04:53,470 --> 00:05:00,070
enough to meet all sorts of needs but is

00:04:57,150 --> 00:05:01,390
capable of being a standard format so

00:05:00,070 --> 00:05:04,690
that i can write one piece of software

00:05:01,390 --> 00:05:07,000
that knows how to read it instead going

00:05:04,690 --> 00:05:08,910
beyond the social aspects of this now I

00:05:07,000 --> 00:05:11,020
can start thinking of an activity as a

00:05:08,910 --> 00:05:13,210
semantic model or what's actually

00:05:11,020 --> 00:05:15,100
happening in my business so i can

00:05:13,210 --> 00:05:17,890
describe information like a purchase

00:05:15,100 --> 00:05:19,930
order or a customer support call that is

00:05:17,890 --> 00:05:22,930
relevant to actually my business

00:05:19,930 --> 00:05:25,000
survival but do it at the fine grain

00:05:22,930 --> 00:05:27,310
this event just happened sort of level

00:05:25,000 --> 00:05:29,500
so that if I have needs to respond

00:05:27,310 --> 00:05:32,020
quickly I can do that or I can

00:05:29,500 --> 00:05:35,050
accumulate these and do data mining and

00:05:32,020 --> 00:05:36,940
analysis and that sort of thing so the

00:05:35,050 --> 00:05:40,690
this concept is started to be adopted by

00:05:36,940 --> 00:05:42,580
a few enterprise-scale applications and

00:05:40,690 --> 00:05:43,930
then the standardization effort I'm

00:05:42,580 --> 00:05:46,570
talking about it's actually taken place

00:05:43,930 --> 00:05:48,460
over the last few years and a website

00:05:46,570 --> 00:05:50,770
called activity streams was an open

00:05:48,460 --> 00:05:52,720
project that it was oriented around

00:05:50,770 --> 00:05:55,750
defining a standard data format that

00:05:52,720 --> 00:05:58,330
we're going to look at so like

00:05:55,750 --> 00:05:59,860
everything in computing we'd like to

00:05:58,330 --> 00:06:02,500
give people choices and so you can

00:05:59,860 --> 00:06:05,680
serialize either in JSON or XML as an

00:06:02,500 --> 00:06:07,810
atom feed or an RSS feed but the the

00:06:05,680 --> 00:06:10,600
emphasis is talking about common object

00:06:07,810 --> 00:06:12,910
types that make up the pieces of an

00:06:10,600 --> 00:06:17,620
activity so here's a very simple example

00:06:12,910 --> 00:06:19,840
of one that was created by an actor the

00:06:17,620 --> 00:06:21,550
person who typically person but it could

00:06:19,840 --> 00:06:26,350
be an application that is generating the

00:06:21,550 --> 00:06:29,800
event what they did is they poops posted

00:06:26,350 --> 00:06:33,190
a blog post the blog posts that they

00:06:29,800 --> 00:06:35,930
posted is the object and then where they

00:06:33,190 --> 00:06:38,750
posted it would be the target

00:06:35,930 --> 00:06:41,660
so when you put it together the the

00:06:38,750 --> 00:06:44,509
common activity street format has five

00:06:41,660 --> 00:06:46,610
different objects that are these are all

00:06:44,509 --> 00:06:49,880
optional except for object but they are

00:06:46,610 --> 00:06:52,430
commonly used for who did it what

00:06:49,880 --> 00:06:54,020
application generated it what is the

00:06:52,430 --> 00:06:57,800
object that this activity was actually

00:06:54,020 --> 00:06:59,750
about what is the application or service

00:06:57,800 --> 00:07:02,000
that is providing the activity for us

00:06:59,750 --> 00:07:05,030
and then the target is typically a where

00:07:02,000 --> 00:07:07,310
did it happen so if I commented on a

00:07:05,030 --> 00:07:09,400
blog post the object would be my comment

00:07:07,310 --> 00:07:11,840
the target would be the blog post itself

00:07:09,400 --> 00:07:14,240
then there's also extra fields that are

00:07:11,840 --> 00:07:16,009
just simple strings or dates that can

00:07:14,240 --> 00:07:18,050
add additional information like when it

00:07:16,009 --> 00:07:22,610
was published and then the verb is the

00:07:18,050 --> 00:07:24,470
action that actually took place and then

00:07:22,610 --> 00:07:27,500
within each of the objects you have a

00:07:24,470 --> 00:07:29,840
set of optional fields as well like the

00:07:27,500 --> 00:07:31,550
author of this particular object the

00:07:29,840 --> 00:07:33,590
details of the content or a summary

00:07:31,550 --> 00:07:35,630
depends on what your application wants

00:07:33,590 --> 00:07:39,590
to do a display nning that you can

00:07:35,630 --> 00:07:41,630
actually show in a user interface most

00:07:39,590 --> 00:07:44,419
objects to be useful will have a URL

00:07:41,630 --> 00:07:46,340
that points at the HTML representation

00:07:44,419 --> 00:07:48,320
of this object somewhere on the web in

00:07:46,340 --> 00:07:50,360
an ID which is a globally unique

00:07:48,320 --> 00:07:54,560
identifier so that I can refer back to

00:07:50,360 --> 00:07:57,020
this object later on so if we go back to

00:07:54,560 --> 00:08:00,080
our common example then we can see that

00:07:57,020 --> 00:08:02,510
the actor has a URL pointing at the

00:08:00,080 --> 00:08:06,320
profile users profile has a unique

00:08:02,510 --> 00:08:08,090
identifier that says who he is a profile

00:08:06,320 --> 00:08:11,449
image so that you can show this in your

00:08:08,090 --> 00:08:14,419
in your UI the object that was posted

00:08:11,449 --> 00:08:16,070
has a URL on an ID it could have had the

00:08:14,419 --> 00:08:17,659
content or it could be just pointing

00:08:16,070 --> 00:08:19,789
back to the content depends on what your

00:08:17,659 --> 00:08:24,710
system wants to do with it and then the

00:08:19,789 --> 00:08:27,949
target was where the post happened so

00:08:24,710 --> 00:08:29,389
the standard itself became finalized the

00:08:27,949 --> 00:08:31,340
one dot 0 standard for this format

00:08:29,389 --> 00:08:33,349
became finalized that it was 2011 right

00:08:31,340 --> 00:08:35,649
at the end of 2011 there's some ongoing

00:08:33,349 --> 00:08:38,659
efforts to now do extension

00:08:35,649 --> 00:08:40,190
standardization efforts around verbs so

00:08:38,659 --> 00:08:42,440
that you can have a common understanding

00:08:40,190 --> 00:08:45,620
of what's something like create means or

00:08:42,440 --> 00:08:47,900
delete or an invite and then also of a

00:08:45,620 --> 00:08:49,610
wide variety of object types that have

00:08:47,900 --> 00:08:51,680
some standard fields

00:08:49,610 --> 00:08:53,510
that are special to that object type the

00:08:51,680 --> 00:08:56,329
goal of this of course is to increase

00:08:53,510 --> 00:08:59,209
the interoperability there's also

00:08:56,329 --> 00:09:01,160
discussions around being able to let the

00:08:59,209 --> 00:09:03,860
sender of an activity target who should

00:09:01,160 --> 00:09:05,839
receive it as opposed to letting the the

00:09:03,860 --> 00:09:08,269
system you're sending to do that wit

00:09:05,839 --> 00:09:11,930
being able to say to carbon copy just

00:09:08,269 --> 00:09:13,339
like you can an email and then if I if

00:09:11,930 --> 00:09:16,160
I've received an activity I don't want

00:09:13,339 --> 00:09:18,260
to do something up to it I can refer to

00:09:16,160 --> 00:09:21,019
it I'm replying to that particular

00:09:18,260 --> 00:09:23,029
combat or that particular blog post as I

00:09:21,019 --> 00:09:28,010
go so these standardization efforts are

00:09:23,029 --> 00:09:29,570
ongoing so just a few of the companies

00:09:28,010 --> 00:09:30,769
that are using the standard activity

00:09:29,570 --> 00:09:32,450
streams format as opposed to just

00:09:30,769 --> 00:09:35,079
general purpose things there everybody

00:09:32,450 --> 00:09:36,649
from four different Apache projects

00:09:35,079 --> 00:09:40,160
including one we're going to hear about

00:09:36,649 --> 00:09:43,250
later on with rave atlassian actually

00:09:40,160 --> 00:09:45,649
has Activity Stream plugins for both

00:09:43,250 --> 00:09:48,529
confluence and JIRA so that you can

00:09:45,649 --> 00:09:50,110
receive in this standard format the

00:09:48,529 --> 00:09:52,940
events that happen in those two systems

00:09:50,110 --> 00:09:55,399
IBM uses it in their connections social

00:09:52,940 --> 00:09:56,930
product I work for jive and so we use

00:09:55,399 --> 00:09:57,980
this quite a bit that's some more

00:09:56,930 --> 00:10:00,279
familiar with that I just want to take a

00:09:57,980 --> 00:10:04,160
couple seconds to say what we do with it

00:10:00,279 --> 00:10:06,110
so jive is all about letting people

00:10:04,160 --> 00:10:09,620
create content and collaborate on a

00:10:06,110 --> 00:10:11,779
share it like it and then listen to the

00:10:09,620 --> 00:10:14,029
events that happen on that content that

00:10:11,779 --> 00:10:16,579
I'm interested in you can optionally

00:10:14,029 --> 00:10:17,750
sort where the content is in social

00:10:16,579 --> 00:10:20,690
groups that are relevant to your

00:10:17,750 --> 00:10:22,940
particular purpose so we use activity

00:10:20,690 --> 00:10:25,850
streams to drive our entire mobile or

00:10:22,940 --> 00:10:28,910
infrastructure in it it is sufficiently

00:10:25,850 --> 00:10:32,120
rich in its data carrying capacity that

00:10:28,910 --> 00:10:33,740
I can send an activity stream version of

00:10:32,120 --> 00:10:36,890
my inbox or a particular stream on

00:10:33,740 --> 00:10:39,050
listening to and produce a UI that's

00:10:36,890 --> 00:10:42,290
faithful to our online product as well

00:10:39,050 --> 00:10:44,540
so it's a very capable format to be able

00:10:42,290 --> 00:10:46,399
to carry information without having to

00:10:44,540 --> 00:10:48,589
make the mobile client go back to the

00:10:46,399 --> 00:10:50,360
server for everything that needs and

00:10:48,589 --> 00:10:51,800
then the last one is also interesting

00:10:50,360 --> 00:10:53,870
the OpenSocial Foundation has

00:10:51,800 --> 00:10:57,320
standardized on the activity strange

00:10:53,870 --> 00:10:59,290
formats in the OpenSocial API s so there

00:10:57,320 --> 00:11:02,029
is a standard rest and a standard

00:10:59,290 --> 00:11:03,580
JavaScript API for producing and

00:11:02,029 --> 00:11:05,350
consuming activities

00:11:03,580 --> 00:11:07,210
that can be built into widgets that can

00:11:05,350 --> 00:11:09,220
be installed in lots of different

00:11:07,210 --> 00:11:11,890
projects including jive including the

00:11:09,220 --> 00:11:13,390
rave project but we'll see later so

00:11:11,890 --> 00:11:16,150
they're starting to be some adoption of

00:11:13,390 --> 00:11:17,770
the format that is a very useful that

00:11:16,150 --> 00:11:19,360
solves the front feed problem because

00:11:17,770 --> 00:11:24,670
the fundamental structure of the

00:11:19,360 --> 00:11:26,470
activity stays the same so turning from

00:11:24,670 --> 00:11:29,290
the format let's talk a little bit about

00:11:26,470 --> 00:11:31,720
the the software project Apache streams

00:11:29,290 --> 00:11:34,660
was introduced into the incubator last

00:11:31,720 --> 00:11:36,430
November we've got several of us who

00:11:34,660 --> 00:11:38,050
have not had as much time once we would

00:11:36,430 --> 00:11:39,550
like and so we're always looking for

00:11:38,050 --> 00:11:42,970
volunteers that are interested in

00:11:39,550 --> 00:11:44,920
expanding the capabilities of it but

00:11:42,970 --> 00:11:47,520
some of the sorts of things that Apache

00:11:44,920 --> 00:11:49,660
streams is about is being a centralized

00:11:47,520 --> 00:11:53,260
essentially an activity stream broker

00:11:49,660 --> 00:11:55,290
for aggregating from multiple publishers

00:11:53,260 --> 00:11:58,270
and distributing to multiple subscribers

00:11:55,290 --> 00:12:00,700
activities in the standard format so

00:11:58,270 --> 00:12:05,020
this is going to let me when we have it

00:12:00,700 --> 00:12:06,610
finished do my egg regaling all of the

00:12:05,020 --> 00:12:08,380
input sources I care about and getting

00:12:06,610 --> 00:12:11,370
them into one stream and federating

00:12:08,380 --> 00:12:13,900
those responses I can do filtering

00:12:11,370 --> 00:12:15,220
because I can plug in a piece of code

00:12:13,900 --> 00:12:16,900
that says I don't like hear about these

00:12:15,220 --> 00:12:18,990
kinds of messages or that have these

00:12:16,900 --> 00:12:21,850
lucene keywords or something like that I

00:12:18,990 --> 00:12:23,920
can query against it because it will

00:12:21,850 --> 00:12:25,660
have a persistent database of the

00:12:23,920 --> 00:12:27,220
messages that have been sent over the

00:12:25,660 --> 00:12:29,350
last amount of time whatever you want to

00:12:27,220 --> 00:12:31,720
save I can do data mining and in

00:12:29,350 --> 00:12:34,030
analytics how many of these kinds of

00:12:31,720 --> 00:12:36,400
messages are happening at what rate

00:12:34,030 --> 00:12:38,860
that's everything from how many bugs did

00:12:36,400 --> 00:12:40,900
I record in JIRA to how many commits I

00:12:38,860 --> 00:12:43,900
made all of the different categories can

00:12:40,900 --> 00:12:46,090
be you can watch the activity streams to

00:12:43,900 --> 00:12:47,290
do the data mining for that and the one

00:12:46,090 --> 00:12:50,470
that came up as I was preparing this

00:12:47,290 --> 00:12:52,330
talk I noticed that the atlassian data

00:12:50,470 --> 00:12:55,480
formats are used the xml serialization

00:12:52,330 --> 00:12:57,700
so we should look at as adding a feature

00:12:55,480 --> 00:13:01,510
to pachi streams to do the JSON to XML

00:12:57,700 --> 00:13:05,980
or back transliteration so I can achieve

00:13:01,510 --> 00:13:07,480
some value out of this we're not going

00:13:05,980 --> 00:13:10,030
to go through the entire architecture

00:13:07,480 --> 00:13:13,380
would even fit on one slide but the

00:13:10,030 --> 00:13:16,810
basic idea is that an activity publisher

00:13:13,380 --> 00:13:17,320
subscribes and receives a URL endpoint

00:13:16,810 --> 00:13:19,870
that they can

00:13:17,320 --> 00:13:22,960
host to or you can put data across the

00:13:19,870 --> 00:13:25,480
message bus as well and then internally

00:13:22,960 --> 00:13:26,650
we're building routing capabilities that

00:13:25,480 --> 00:13:28,990
say who should receive this information

00:13:26,650 --> 00:13:31,870
so you can put in filters like are you

00:13:28,990 --> 00:13:33,310
allowed to see that particular stream or

00:13:31,870 --> 00:13:37,420
are you allowed to see that particular

00:13:33,310 --> 00:13:39,820
activity ends up splitting things out

00:13:37,420 --> 00:13:42,640
storing them in activity queues which

00:13:39,820 --> 00:13:44,350
are then consumed by a subscriber that

00:13:42,640 --> 00:13:47,020
does essentially the same process in

00:13:44,350 --> 00:13:48,790
Reverse I want to register myself I want

00:13:47,020 --> 00:13:51,340
to build my own filtering and routing on

00:13:48,790 --> 00:13:53,920
what I receive from the aggregation

00:13:51,340 --> 00:13:56,440
service so that I have control over

00:13:53,920 --> 00:13:58,660
who's the sender's can have as many

00:13:56,440 --> 00:14:00,760
streams as I want sending I can have as

00:13:58,660 --> 00:14:02,980
many streams as I want subscribed to

00:14:00,760 --> 00:14:07,000
receive just the kinds of information I

00:14:02,980 --> 00:14:09,790
want on a particular stream so as I said

00:14:07,000 --> 00:14:12,730
it's not very sexy and I don't want to

00:14:09,790 --> 00:14:15,310
tempt the demo gods so I actually did

00:14:12,730 --> 00:14:19,210
this this morning itch just left my rest

00:14:15,310 --> 00:14:22,630
client examples up here so the the

00:14:19,210 --> 00:14:25,360
streams server has a register endpoint

00:14:22,630 --> 00:14:26,770
that I send a block of code that

00:14:25,360 --> 00:14:28,210
essentially describes the

00:14:26,770 --> 00:14:31,240
characteristics of how I want to send

00:14:28,210 --> 00:14:34,120
the data in so in my case I'm going to

00:14:31,240 --> 00:14:35,500
use HTTP posts I'm going to say that the

00:14:34,120 --> 00:14:37,660
source of these things is a particular

00:14:35,500 --> 00:14:39,250
URL and if I have authentic Asian

00:14:37,660 --> 00:14:42,340
characteristics I can enter those and

00:14:39,250 --> 00:14:47,050
then what I get any response to that is

00:14:42,340 --> 00:14:49,060
a URL that I can post to that will post

00:14:47,050 --> 00:14:54,370
or publish activities to this particular

00:14:49,060 --> 00:14:58,060
endpoint on the way in likewise there's

00:14:54,370 --> 00:15:03,610
a similar flow for subscribing that I

00:14:58,060 --> 00:15:07,330
register as a subscriber I say what do I

00:15:03,610 --> 00:15:09,010
want to get using the internal

00:15:07,330 --> 00:15:11,170
technologies because we can customize

00:15:09,010 --> 00:15:13,270
all of the stuff what filters do I want

00:15:11,170 --> 00:15:15,400
to apply to which messages I receive so

00:15:13,270 --> 00:15:17,050
I can do things like the leucine keyword

00:15:15,400 --> 00:15:19,360
matching what's we implement the right

00:15:17,050 --> 00:15:21,910
filters for that and then how do I want

00:15:19,360 --> 00:15:24,100
to get it out so in this case I'm going

00:15:21,910 --> 00:15:26,380
to receive it by polling an HTTP

00:15:24,100 --> 00:15:28,660
endpoint I can see us do things like web

00:15:26,380 --> 00:15:30,370
sockets and message buses it all sorts

00:15:28,660 --> 00:15:31,150
of stuff in the future because it's a

00:15:30,370 --> 00:15:35,290
very extensible

00:15:31,150 --> 00:15:39,570
platform again I receive oops I received

00:15:35,290 --> 00:15:46,570
back a URL that I can pull to receive

00:15:39,570 --> 00:15:47,980
messages when I send one I'm on the now

00:15:46,570 --> 00:15:50,550
the publisher again I'm using the URL

00:15:47,980 --> 00:15:53,290
that we received back again and sending

00:15:50,550 --> 00:15:56,920
anything that's in the standard activity

00:15:53,290 --> 00:16:00,490
streams format and then I got a

00:15:56,920 --> 00:16:04,360
confirmation back that i sent it and

00:16:00,490 --> 00:16:06,280
then when you receive we have a lot of

00:16:04,360 --> 00:16:09,490
to do's in the code yet and this is one

00:16:06,280 --> 00:16:10,990
of them it's got a standard message

00:16:09,490 --> 00:16:12,900
return value this actually got patched

00:16:10,990 --> 00:16:15,130
yesterday but I wasn't going to risk

00:16:12,900 --> 00:16:17,290
downloading a new version right before

00:16:15,130 --> 00:16:21,400
the damn law will do it afterwards it

00:16:17,290 --> 00:16:22,840
now Richards you the actual message but

00:16:21,400 --> 00:16:26,590
these are the basic mechanics of

00:16:22,840 --> 00:16:28,420
actually using apache streams so we

00:16:26,590 --> 00:16:30,580
could have implemented this thing using

00:16:28,420 --> 00:16:32,860
just a simple web app but one of the

00:16:30,580 --> 00:16:35,560
goals we have is high scalability and

00:16:32,860 --> 00:16:38,980
high customizability so we're actually

00:16:35,560 --> 00:16:43,570
using a fair number of apache projects

00:16:38,980 --> 00:16:46,210
as the technological foundation so where

00:16:43,570 --> 00:16:48,010
the messages go is a implement or

00:16:46,210 --> 00:16:51,040
running implementation of apache service

00:16:48,010 --> 00:16:53,590
mix which is an ESB container it uses

00:16:51,040 --> 00:16:56,590
apache mq for the messaging back and

00:16:53,590 --> 00:16:57,970
forth across host patchy camel provides

00:16:56,590 --> 00:16:59,970
integration enterprise integration

00:16:57,970 --> 00:17:03,540
patterns that you can apply for

00:16:59,970 --> 00:17:06,820
filtering and sorting and publishing

00:17:03,540 --> 00:17:09,790
internally uses CSF for the HTTP traffic

00:17:06,820 --> 00:17:12,610
and then you've got the option to you to

00:17:09,790 --> 00:17:14,320
interoperate with biffle oriented

00:17:12,610 --> 00:17:16,900
business processes if you want as well

00:17:14,320 --> 00:17:20,260
and then underneath all of that is the

00:17:16,900 --> 00:17:22,959
carafe library which lets us plug osgi

00:17:20,260 --> 00:17:25,420
compatible components in on the fly if

00:17:22,959 --> 00:17:30,060
you want to so you can highly customized

00:17:25,420 --> 00:17:30,060
what we're providing in Apache extremes

00:17:30,450 --> 00:17:35,770
so as I mentioned we entered in

00:17:32,650 --> 00:17:37,540
incubation in November 2012 or some

00:17:35,770 --> 00:17:38,860
experienced Apache folks that have been

00:17:37,540 --> 00:17:40,830
around a while plus some additional

00:17:38,860 --> 00:17:43,090
committers we're always looking for more

00:17:40,830 --> 00:17:47,310
the developer mailing list subscription

00:17:43,090 --> 00:17:49,540
is there the excuse me the website is

00:17:47,310 --> 00:17:51,280
still in the incubator will graduate

00:17:49,540 --> 00:17:56,170
when you follow all the steps of the

00:17:51,280 --> 00:18:05,850
apache process for that and it's time

00:17:56,170 --> 00:18:05,850
for questions if you have any and sorry

00:18:08,520 --> 00:18:13,120
it's probably similar conceptually yeah

00:18:11,620 --> 00:18:15,630
but it's focused on the Activity Stream

00:18:13,120 --> 00:18:15,630
format

00:18:33,030 --> 00:18:58,980
so let me cook but you have these

00:18:55,950 --> 00:19:03,110
explores the support of every

00:18:58,980 --> 00:19:03,110
publication qualities these different

00:19:05,010 --> 00:19:12,179
aggregated score some undated over so

00:19:09,370 --> 00:19:12,179
that this is very

00:19:18,470 --> 00:19:25,640
we're going to be for supporting

00:19:20,790 --> 00:19:25,640
Federico location also those 200 tools

00:19:29,150 --> 00:19:33,530
or clarity here

00:19:47,580 --> 00:19:55,470
so we provide software allows for other

00:19:53,230 --> 00:19:55,470
day

00:19:56,690 --> 00:20:02,399
duplication aggregation so if everybody

00:20:00,269 --> 00:20:04,620
in this side of the room comments on

00:20:02,399 --> 00:20:08,070
blog post and our blogs which I don't

00:20:04,620 --> 00:20:15,529
want 25 different activities to go to

00:20:08,070 --> 00:20:15,529
Craig that's just too could also lose

00:20:16,760 --> 00:20:21,320
what you want told my people

00:20:39,240 --> 00:20:42,540
what is that

00:20:54,230 --> 00:20:58,370
we talk about failure modes is that

00:20:56,299 --> 00:21:00,799
we're asking well you've got a service

00:20:58,370 --> 00:21:02,419
misc is the the base platform for this

00:21:00,799 --> 00:21:04,460
and so it's going to be running all the

00:21:02,419 --> 00:21:06,110
time but the particular failure mode of

00:21:04,460 --> 00:21:09,320
any individual component is part of that

00:21:06,110 --> 00:21:10,940
components design so typically if a an

00:21:09,320 --> 00:21:12,740
authorization component finds that it's

00:21:10,940 --> 00:21:14,299
ldap database is down that's going to

00:21:12,740 --> 00:21:16,220
say I'm sorry you can't log in right now

00:21:14,299 --> 00:21:17,840
sort of but the system will still stay

00:21:16,220 --> 00:21:19,580
running but it's really up to the

00:21:17,840 --> 00:21:46,970
individual components to design their

00:21:19,580 --> 00:21:50,179
own failure modes so they're going to

00:21:46,970 --> 00:21:53,200
need that redundancy there are

00:21:50,179 --> 00:21:56,050
connections stable across mobile systems

00:21:53,200 --> 00:21:58,300
probably my dog

00:21:56,050 --> 00:22:07,020
so that it's gonna be part of the effort

00:21:58,300 --> 00:22:07,020
in this this project is to the final

00:22:09,000 --> 00:22:19,600
characteristic of the correct but also

00:22:12,910 --> 00:22:22,510
scale yeah so the message bus for the

00:22:19,600 --> 00:22:27,610
activity Q is across multiple machines

00:22:22,510 --> 00:22:29,730
for the redundancy needs as well I'm

00:22:27,610 --> 00:22:29,730
sorry

00:22:44,940 --> 00:23:02,440
but even for four games went directly to

00:22:58,690 --> 00:23:08,169
my facebook or I 32 nanometer strategies

00:23:02,440 --> 00:23:10,330
for you tomorrow vision to dance so go

00:23:08,169 --> 00:23:13,269
ahead and it so I think that what we see

00:23:10,330 --> 00:23:15,219
is that would be maybe not natively

00:23:13,269 --> 00:23:17,409
supported not have an extension line

00:23:15,219 --> 00:23:24,279
races for that what you can see so

00:23:17,409 --> 00:23:27,719
there's a surgical they do that so what

00:23:24,279 --> 00:23:32,080
we would do is support their efforts

00:23:27,719 --> 00:23:34,149
according to the party you're probably

00:23:32,080 --> 00:23:36,940
finding the specific implementation of

00:23:34,149 --> 00:23:39,299
that project maybe some supporting

00:23:36,940 --> 00:23:39,299
library

00:23:42,460 --> 00:24:00,980
yeah it definitely can be yeah if the

00:23:58,970 --> 00:24:03,920
verbs are total extensible the

00:24:00,980 --> 00:24:05,810
standardized one is post but you what we

00:24:03,920 --> 00:24:08,510
do is created for creating a document

00:24:05,810 --> 00:24:13,160
liked shared other verbs that are

00:24:08,510 --> 00:24:15,770
relevant in our business experience yeah

00:24:13,160 --> 00:24:17,390
yes so i restarted a server it's having

00:24:15,770 --> 00:24:31,930
failures that sort of thing yeah that

00:24:17,390 --> 00:24:31,930
would make sense no not

00:24:42,029 --> 00:24:50,759
you've read spouts and bolts yeah it's

00:24:48,899 --> 00:25:00,899
the names common that's about it to go

00:24:50,759 --> 00:25:03,619
to space well I don't know it's your

00:25:00,899 --> 00:25:08,869
question but I mean to me this is

00:25:03,619 --> 00:25:08,869
dealing a different solution story

00:25:09,799 --> 00:25:21,769
specific emphasis that is set work aside

00:25:12,629 --> 00:25:21,769
from the addition

00:25:27,260 --> 00:25:29,320
Oh

00:25:47,909 --> 00:25:52,269
so our focus so far is bet on the server

00:25:50,440 --> 00:25:54,100
side as opposed to the client side but

00:25:52,269 --> 00:25:56,470
there's no reason that it wouldn't make

00:25:54,100 --> 00:25:57,730
sense to have client libraries in all

00:25:56,470 --> 00:26:01,570
the various languages that know how to

00:25:57,730 --> 00:26:02,919
consume or activity streams it's where

00:26:01,570 --> 00:26:33,519
we have it now for JavaScript with

00:26:02,919 --> 00:26:38,039
OpenSocial foundation for sure you'd

00:26:33,519 --> 00:26:38,039
like to be able to create

00:26:47,190 --> 00:27:22,830
it's just a plug-in for take advantage

00:27:16,960 --> 00:27:22,830
of this yeah all in one place

00:27:36,830 --> 00:27:43,260
understand the process it provide

00:27:39,720 --> 00:27:46,279
infrastructure so if you want to use

00:27:43,260 --> 00:27:50,870
that data format for anything else

00:27:46,279 --> 00:27:50,870
digital focus be more reliable

00:28:03,420 --> 00:28:13,559
reliable service there's a lot of it is

00:28:07,660 --> 00:28:13,559
depends on the continent adapter patient

00:28:16,610 --> 00:28:30,870
there's a lot of message

00:28:19,590 --> 00:28:32,220
I would say if you have two apps you

00:28:30,870 --> 00:28:34,350
probably don't really need this you

00:28:32,220 --> 00:28:35,940
could just use the messaging below it if

00:28:34,350 --> 00:28:37,320
you have 20 apps it starts to become a

00:28:35,940 --> 00:28:39,120
little more interesting to integrate

00:28:37,320 --> 00:28:41,190
from different sources if you have 200

00:28:39,120 --> 00:28:42,480
apps or 2,000 apps it becomes really

00:28:41,190 --> 00:28:44,820
critical to have an aggregation

00:28:42,480 --> 00:28:47,340
integration tool so it's a it's about

00:28:44,820 --> 00:28:48,960
the scale of the number of inputs and

00:28:47,340 --> 00:28:57,659
the number of outputs more than it is

00:28:48,960 --> 00:29:00,120
how many individual apps it is the

00:28:57,659 --> 00:29:02,880
framework will support that we haven't

00:29:00,120 --> 00:29:04,860
built any out-of-the-box modules yet but

00:29:02,880 --> 00:29:06,299
certainly you will you want permissions

00:29:04,860 --> 00:29:07,950
at two levels really you want

00:29:06,299 --> 00:29:10,260
authentication are you allowed to get

00:29:07,950 --> 00:29:12,419
into the system at all but then you need

00:29:10,260 --> 00:29:15,120
security on the individual activities

00:29:12,419 --> 00:29:17,700
that you can see and so that there's a

00:29:15,120 --> 00:29:19,590
filtering mechanism that lets you build

00:29:17,700 --> 00:29:21,480
plugins into your installation of Apache

00:29:19,590 --> 00:29:26,059
streams that customizes that for

00:29:21,480 --> 00:29:26,059
whatever you need to do that

00:29:28,160 --> 00:29:34,620
so let's let's assume that I've got

00:29:31,160 --> 00:29:36,390
secure messages the little sees the

00:29:34,620 --> 00:29:37,920
example of I'm doing system monitoring

00:29:36,390 --> 00:29:40,190
but I'm not allowed to know about

00:29:37,920 --> 00:29:44,190
particular servers that are in this

00:29:40,190 --> 00:29:46,140
confidential area that the IT staff

00:29:44,190 --> 00:29:48,300
should be able to see those messages but

00:29:46,140 --> 00:29:51,030
I shouldn't so i can write a filter that

00:29:48,300 --> 00:29:53,340
says is craig allowed to see the message

00:29:51,030 --> 00:29:55,790
from that particular server as a filter

00:29:53,340 --> 00:29:57,690
and that's sort of a domain-specific

00:29:55,790 --> 00:29:59,400
environment that you'd have to build

00:29:57,690 --> 00:30:01,440
that module and plug it in and then

00:29:59,400 --> 00:30:04,110
we'll have standardized filters on

00:30:01,440 --> 00:30:07,530
things like keyword matching in the

00:30:04,110 --> 00:30:09,330
content or something like that but

00:30:07,530 --> 00:30:32,730
you'll have the ability to use the

00:30:09,330 --> 00:30:33,900
standard ones or build your own yeah you

00:30:32,730 --> 00:30:36,030
can do it in the other direction too i

00:30:33,900 --> 00:30:37,380
can say i'm part of a social tree i'm

00:30:36,030 --> 00:30:39,840
part of a work group I want to see all

00:30:37,380 --> 00:30:41,130
the activities from my colleagues but

00:30:39,840 --> 00:30:43,110
not all the activities of our sales

00:30:41,130 --> 00:30:46,610
group because that that's all sales

00:30:43,110 --> 00:30:46,610
that's not important stuff

00:30:56,929 --> 00:31:00,720
subscribers offline come back you know

00:30:59,460 --> 00:31:04,530
or you're building a website where you

00:31:00,720 --> 00:31:08,549
watch the last days it up the

00:31:04,530 --> 00:31:09,870
subscribers I'm real like I'm Matt

00:31:08,549 --> 00:31:23,549
because he was involved in the initial

00:31:09,870 --> 00:31:24,809
development of us I in my mind right so

00:31:23,549 --> 00:31:27,059
I think this is something we haven't

00:31:24,809 --> 00:31:29,160
really defined yet as we're trying to

00:31:27,059 --> 00:31:30,690
get something together why your test you

00:31:29,160 --> 00:31:32,460
get something like this architecture up

00:31:30,690 --> 00:31:35,010
and running and then in all but I do

00:31:32,460 --> 00:31:37,110
think it is persistence if it as an in

00:31:35,010 --> 00:31:38,850
this is like an intermediate or right so

00:31:37,110 --> 00:31:40,919
some so primitive persistence is

00:31:38,850 --> 00:31:43,440
critical to this being successful but

00:31:40,919 --> 00:31:46,470
you don't want in my mind none of the

00:31:43,440 --> 00:31:48,710
subscribe you should have to persist the

00:31:46,470 --> 00:31:48,710
data

00:31:48,830 --> 00:31:54,880
they should be able to always go back

00:31:50,299 --> 00:31:54,880
something for something to apply how we

00:31:55,840 --> 00:32:05,720
would figure that one out okay I think

00:32:04,490 --> 00:32:10,220
we have time for one last question if

00:32:05,720 --> 00:32:12,490
there is one if not I think it's time

00:32:10,220 --> 00:32:12,490

YouTube URL: https://www.youtube.com/watch?v=48KJYCs-NqY


