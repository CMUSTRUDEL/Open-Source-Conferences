Title: Secure your Big Data Cloud cluster with SDX (Ranger, Atlas, Knox, HMS)
Publication date: 2020-10-21
Playlist: ApacheCon @Home 2020: Big Data (Track 2)
Description: 
	Secure your Big Data Cloud cluster with SDX (Ranger, Atlas, Knox, HMS)
Deepak Sharma

A presentation from ApacheCon @Home 2020
https://apachecon.com/acah2020/

Security is very important aspect whether it is onprem or cloud infrastructure. we are here to discuss about how can we secure our DWX/Data science/Data mart cluster with SDX/Data lake. Data Lake security and governance is managed by a shared set of services referred to as a Data Lake cluster. A Data Lake cluster includes the following services: Hive MetaStore (HMS) -- table metadata Apache Ranger -- fine-grained authorization policies, auditing Apache Atlas -- metadata management and governance: lineage, analytics, attributes Apache Knox: Authenticating Proxy for Web UIs and HTTP APIs -- SSO IDBroker -- identity federation; cloud credentials this talk will explain how can we secure multiple workload using single/shared datalake and what are the configuration we need to take care, and how each of the apache open source component like Ranger, atlas, knox helps in this case.

Deepak Sharma, Apache Ranger Committer Senior Software Engineer, Cloudera.
Captions: 
	00:00:06,420 --> 00:00:10,640
[Music]

00:00:14,160 --> 00:00:17,230
[Music]

00:00:29,199 --> 00:00:33,280
so today's topic is secure big data

00:00:31,279 --> 00:00:36,640
cloud cluster with sdx

00:00:33,280 --> 00:00:38,480
and uh so as everyone know like security

00:00:36,640 --> 00:00:39,120
plays very important role in the cloud

00:00:38,480 --> 00:00:41,520
cluster

00:00:39,120 --> 00:00:42,480
and everyone in the organization are

00:00:41,520 --> 00:00:46,160
moving their

00:00:42,480 --> 00:00:49,280
uh data to the cloud so how important

00:00:46,160 --> 00:00:50,559
stx is with big data cloud cluster that

00:00:49,280 --> 00:00:53,760
we will talk about

00:00:50,559 --> 00:00:55,680
so let's move to the uh presentation so

00:00:53,760 --> 00:00:58,480
just quick introduction about myself

00:00:55,680 --> 00:00:59,039
i am deepak and i am apache ranger

00:00:58,480 --> 00:01:02,559
committer

00:00:59,039 --> 00:01:05,680
and software engineer at cloudera

00:01:02,559 --> 00:01:06,960
so today's agenda is we will talk about

00:01:05,680 --> 00:01:10,799
enterprise data cloud

00:01:06,960 --> 00:01:14,720
and htx in enterprise data cloud

00:01:10,799 --> 00:01:17,280
and what role security plays uh in sdx

00:01:14,720 --> 00:01:18,479
then what is the contribution of open

00:01:17,280 --> 00:01:21,520
source project like

00:01:18,479 --> 00:01:24,880
ranger atlas knox today's

00:01:21,520 --> 00:01:27,759
security aspect and then we will go for

00:01:24,880 --> 00:01:30,400
a quick demo

00:01:27,759 --> 00:01:31,840
so if you talk about uh some uh

00:01:30,400 --> 00:01:33,520
important trends in the cloud

00:01:31,840 --> 00:01:34,479
technologies so first is cloud

00:01:33,520 --> 00:01:37,759
experience

00:01:34,479 --> 00:01:41,280
everyone in the market they want

00:01:37,759 --> 00:01:44,399
one good cloud which is on demand and

00:01:41,280 --> 00:01:47,040
very flexible then everyone want their

00:01:44,399 --> 00:01:49,119
compute and storage to be isolated

00:01:47,040 --> 00:01:50,880
so they want their compute separately

00:01:49,119 --> 00:01:53,280
their storage separately

00:01:50,880 --> 00:01:54,640
and then they want to use kubernetes

00:01:53,280 --> 00:01:57,680
based container

00:01:54,640 --> 00:01:58,000
in those cloud based environment and

00:01:57,680 --> 00:02:00,719
then

00:01:58,000 --> 00:02:01,280
uh everyone want to use a streaming and

00:02:00,719 --> 00:02:06,799
ml

00:02:01,280 --> 00:02:06,799
uh or ai-based real-time data streaming

00:02:07,119 --> 00:02:10,560
so uh we'll talk about uh enterprise

00:02:10,080 --> 00:02:13,840
data

00:02:10,560 --> 00:02:17,920
cloud architecture quickly so uh

00:02:13,840 --> 00:02:21,120
the this edc helpers

00:02:17,920 --> 00:02:23,360
in both like public cloud compute

00:02:21,120 --> 00:02:24,080
storage and even in data center compute

00:02:23,360 --> 00:02:27,200
storage

00:02:24,080 --> 00:02:30,000
whether your uh your cloud

00:02:27,200 --> 00:02:31,680
environment is running on uh on hybrid

00:02:30,000 --> 00:02:33,519
cloud or multi-cloud

00:02:31,680 --> 00:02:36,000
or whether it is private cloud or

00:02:33,519 --> 00:02:37,760
whether it is on-prem cluster

00:02:36,000 --> 00:02:40,239
it can help us in both whether it is

00:02:37,760 --> 00:02:43,360
provided by any of the cloud provider

00:02:40,239 --> 00:02:46,480
so uh and another uh layer which

00:02:43,360 --> 00:02:47,599
we get with edc is security and

00:02:46,480 --> 00:02:50,000
governance

00:02:47,599 --> 00:02:50,800
so uh with security and governance uh we

00:02:50,000 --> 00:02:54,400
can uh

00:02:50,800 --> 00:02:56,800
get uh shared uh shared policies and

00:02:54,400 --> 00:02:58,480
shared governance uh thing applied uh

00:02:56,800 --> 00:03:00,959
through all this workflow

00:02:58,480 --> 00:03:02,800
and with this multi-function analytics

00:03:00,959 --> 00:03:05,599
we get iot ingest

00:03:02,800 --> 00:03:06,480
iot based data and that gets processed

00:03:05,599 --> 00:03:09,440
and ingested

00:03:06,480 --> 00:03:11,040
uh and stream uh and we get data

00:03:09,440 --> 00:03:13,920
warehouse workload and

00:03:11,040 --> 00:03:16,239
mlr ai workload too and these all

00:03:13,920 --> 00:03:19,120
workload can share

00:03:16,239 --> 00:03:20,159
common security policies and common uh

00:03:19,120 --> 00:03:24,000
governance

00:03:20,159 --> 00:03:27,120
or classification so uh

00:03:24,000 --> 00:03:29,040
one good thing is the this adc works on

00:03:27,120 --> 00:03:32,480
open platform like aws

00:03:29,040 --> 00:03:35,040
or dct or azure and some of the common

00:03:32,480 --> 00:03:37,360
uh apache open source product that we

00:03:35,040 --> 00:03:40,239
work on like apache range or

00:03:37,360 --> 00:03:42,239
atlas so one of the cloud error products

00:03:40,239 --> 00:03:47,440
cdp is based on uh

00:03:42,239 --> 00:03:50,239
this enterprise data cloud architecture

00:03:47,440 --> 00:03:51,200
so if if we talk about high level cloud

00:03:50,239 --> 00:03:54,480
deployment

00:03:51,200 --> 00:03:57,120
so first and bottom layer is hdfs

00:03:54,480 --> 00:03:57,599
s3 or adls this is the storage layer and

00:03:57,120 --> 00:04:00,879
we can

00:03:57,599 --> 00:04:04,480
store our data on any of these

00:04:00,879 --> 00:04:06,159
environment and the compute cluster that

00:04:04,480 --> 00:04:07,760
we have

00:04:06,159 --> 00:04:09,360
these are data hub cluster data

00:04:07,760 --> 00:04:10,480
warehouse crystal machine learning

00:04:09,360 --> 00:04:13,439
workspace

00:04:10,480 --> 00:04:14,000
so these all compute clusters here the

00:04:13,439 --> 00:04:17,680
common

00:04:14,000 --> 00:04:20,560
uh storage so that way uh

00:04:17,680 --> 00:04:21,120
we can we can uh spawn any number of

00:04:20,560 --> 00:04:24,000
compute

00:04:21,120 --> 00:04:26,160
as per our users as per the demand and

00:04:24,000 --> 00:04:28,880
so let's say

00:04:26,160 --> 00:04:29,919
some data scientists want to run any

00:04:28,880 --> 00:04:32,639
spark job

00:04:29,919 --> 00:04:33,680
so they can uh spawn data engineering uh

00:04:32,639 --> 00:04:36,240
compute cluster

00:04:33,680 --> 00:04:37,759
and uh after the users they can simply

00:04:36,240 --> 00:04:42,080
delete it so we

00:04:37,759 --> 00:04:44,720
uh we can just pay based on our users

00:04:42,080 --> 00:04:46,639
and then we have a shared data link here

00:04:44,720 --> 00:04:50,160
we have hms for

00:04:46,639 --> 00:04:52,080
meta store management then ranger for

00:04:50,160 --> 00:04:53,520
for authorization of the policies

00:04:52,080 --> 00:04:55,840
authorization and we can do

00:04:53,520 --> 00:04:58,160
authorization through range of

00:04:55,840 --> 00:05:00,080
then we have atlas for uh governance

00:04:58,160 --> 00:05:03,600
then we have id broker

00:05:00,080 --> 00:05:06,479
too so this id broker or nox is for uh

00:05:03,600 --> 00:05:07,759
for authenticating with this cloud

00:05:06,479 --> 00:05:11,280
deployment

00:05:07,759 --> 00:05:14,240
then we have us we have centralized uh

00:05:11,280 --> 00:05:16,160
user-based management for using free ipa

00:05:14,240 --> 00:05:19,440
ips again and open source

00:05:16,160 --> 00:05:21,360
and uh so these all are mostly here we

00:05:19,440 --> 00:05:22,240
have hms ranger atlas these are open

00:05:21,360 --> 00:05:25,840
source products

00:05:22,240 --> 00:05:25,840
we can use of them and

00:05:26,639 --> 00:05:31,120
make real use of in the cloud deployment

00:05:31,600 --> 00:05:38,160
so this is how it works

00:05:35,120 --> 00:05:38,800
so we in the environment we have user

00:05:38,160 --> 00:05:41,440
directory

00:05:38,800 --> 00:05:43,360
authentication and certificate services

00:05:41,440 --> 00:05:45,680
and this is by a free ipa

00:05:43,360 --> 00:05:46,400
then we have data link services and here

00:05:45,680 --> 00:05:48,960
we have

00:05:46,400 --> 00:05:50,840
cloud error manager ranger atlas imet

00:05:48,960 --> 00:05:53,919
store and id broker

00:05:50,840 --> 00:05:57,199
so uh what we do is we create uh

00:05:53,919 --> 00:05:58,960
common policies in the ranger and

00:05:57,199 --> 00:06:00,560
here we have high meta store running it

00:05:58,960 --> 00:06:03,680
talks with the uh

00:06:00,560 --> 00:06:07,520
bottom layer of storage and

00:06:03,680 --> 00:06:10,880
this is metadata about the high

00:06:07,520 --> 00:06:12,080
any hype table then this data gets

00:06:10,880 --> 00:06:14,560
shared across the

00:06:12,080 --> 00:06:15,199
multiple compute cluster and this can be

00:06:14,560 --> 00:06:18,880
data hub

00:06:15,199 --> 00:06:20,800
or data warehouses so this

00:06:18,880 --> 00:06:22,000
virtual private clusters share this

00:06:20,800 --> 00:06:25,280
common data

00:06:22,000 --> 00:06:28,960
and download the policies or

00:06:25,280 --> 00:06:32,240
run the workload on this uh

00:06:28,960 --> 00:06:35,039
uh after the query uh they can get

00:06:32,240 --> 00:06:37,759
deleted so these are transient uh

00:06:35,039 --> 00:06:38,800
complete cluster whereas this data lake

00:06:37,759 --> 00:06:41,759
services are

00:06:38,800 --> 00:06:41,759
persistent ones

00:06:41,919 --> 00:06:49,039
so this is the complete sdx architecture

00:06:45,520 --> 00:06:52,319
how security is uh uh

00:06:49,039 --> 00:06:52,639
available in this stx uh architecture we

00:06:52,319 --> 00:06:55,199
will

00:06:52,639 --> 00:06:57,599
discuss next so these are the basic

00:06:55,199 --> 00:07:01,440
plural of the security first is identity

00:06:57,599 --> 00:07:04,800
access then visibility data protection

00:07:01,440 --> 00:07:08,400
is nothing but the authentication part

00:07:04,800 --> 00:07:10,479
so how uh how if

00:07:08,400 --> 00:07:12,479
if any user comes and authenticate with

00:07:10,479 --> 00:07:15,599
this cloud system

00:07:12,479 --> 00:07:19,520
and whether that user is

00:07:15,599 --> 00:07:21,520
is authorized one or not so that part is

00:07:19,520 --> 00:07:24,560
taken care by the identity

00:07:21,520 --> 00:07:27,199
then okay you got authenticated

00:07:24,560 --> 00:07:28,840
to the system now it comes to

00:07:27,199 --> 00:07:32,160
authorization

00:07:28,840 --> 00:07:33,919
then if if any user

00:07:32,160 --> 00:07:35,199
or application who is trying to access

00:07:33,919 --> 00:07:38,479
the system whether they are

00:07:35,199 --> 00:07:39,199
allowed to uh access the data so let's

00:07:38,479 --> 00:07:42,240
say

00:07:39,199 --> 00:07:43,120
any hive user try to access some

00:07:42,240 --> 00:07:47,039
particular

00:07:43,120 --> 00:07:49,840
table let's say employee table and

00:07:47,039 --> 00:07:51,120
if if that that user has authenticated

00:07:49,840 --> 00:07:54,479
successfully using

00:07:51,120 --> 00:07:57,280
credential or any kernels authentication

00:07:54,479 --> 00:07:58,080
now in that user is allowed to access

00:07:57,280 --> 00:08:01,680
which resource

00:07:58,080 --> 00:08:05,120
so that part is taken care by access

00:08:01,680 --> 00:08:07,919
then it comes to visibility and

00:08:05,120 --> 00:08:09,759
it could do reporting on where data came

00:08:07,919 --> 00:08:11,919
from and where it is being used

00:08:09,759 --> 00:08:13,840
so in technical language you can say

00:08:11,919 --> 00:08:17,440
like it is auditing and

00:08:13,840 --> 00:08:21,120
lineage let's say if any particular user

00:08:17,440 --> 00:08:24,720
access the uh employee table at uh

00:08:21,120 --> 00:08:27,360
time is time one then those all

00:08:24,720 --> 00:08:28,000
details are locked in as part of

00:08:27,360 --> 00:08:30,240
auditing

00:08:28,000 --> 00:08:32,719
or if you have created any view from any

00:08:30,240 --> 00:08:36,159
table so how that view is created

00:08:32,719 --> 00:08:38,399
so that part goes in the lineage

00:08:36,159 --> 00:08:40,800
then they have a data protection so when

00:08:38,399 --> 00:08:43,760
data is on rest uh

00:08:40,800 --> 00:08:45,279
so uh ideally it should be encrypted or

00:08:43,760 --> 00:08:46,240
whenever you are trying to access the

00:08:45,279 --> 00:08:49,839
data

00:08:46,240 --> 00:08:51,440
uh what kind of data visibility you have

00:08:49,839 --> 00:08:53,920
that part is taken care by data

00:08:51,440 --> 00:08:56,880
protection so you can have a

00:08:53,920 --> 00:08:58,800
classification uh or a classification

00:08:56,880 --> 00:08:59,519
based security where you can mask some

00:08:58,800 --> 00:09:01,360
data

00:08:59,519 --> 00:09:03,040
or when data is unrest you can encrypt

00:09:01,360 --> 00:09:06,839
it waste with the keys

00:09:03,040 --> 00:09:09,839
so that part is taken care in the data

00:09:06,839 --> 00:09:09,839
protection

00:09:10,560 --> 00:09:14,880
so first we will talk about in detail on

00:09:12,720 --> 00:09:16,480
identity and parameter security so this

00:09:14,880 --> 00:09:19,839
part is taken care by

00:09:16,480 --> 00:09:21,920
apache nov apache knox welded

00:09:19,839 --> 00:09:22,880
user by membership in enterprise

00:09:21,920 --> 00:09:25,600
directory

00:09:22,880 --> 00:09:27,040
so technically uh this this takes cares

00:09:25,600 --> 00:09:29,680
of authentication

00:09:27,040 --> 00:09:30,560
so it provides consistent uh user

00:09:29,680 --> 00:09:33,279
experience on

00:09:30,560 --> 00:09:34,000
all the infrastructure then libraries

00:09:33,279 --> 00:09:35,440
existing

00:09:34,000 --> 00:09:38,320
and directory and protocol we can

00:09:35,440 --> 00:09:39,200
integrate apache nox with the ldap or ad

00:09:38,320 --> 00:09:40,880
also

00:09:39,200 --> 00:09:43,279
then there is consistent authentication

00:09:40,880 --> 00:09:46,480
with sso approach all the interfaces

00:09:43,279 --> 00:09:47,360
because we we can integrate this free

00:09:46,480 --> 00:09:51,279
ipa

00:09:47,360 --> 00:09:53,760
so there is single sign-on available on

00:09:51,279 --> 00:09:55,920
for most of the services and there is

00:09:53,760 --> 00:09:59,519
minimal port exposure because

00:09:55,920 --> 00:10:02,079
uh this knocks work as a gateway

00:09:59,519 --> 00:10:03,120
whenever a service or any user is trying

00:10:02,079 --> 00:10:06,560
to access

00:10:03,120 --> 00:10:09,680
any other service like ranger atlas then

00:10:06,560 --> 00:10:11,200
uh it it will have to go via apache knox

00:10:09,680 --> 00:10:14,399
so apache knox

00:10:11,200 --> 00:10:16,880
works as a proxy between user and

00:10:14,399 --> 00:10:18,320
other services or between uh between any

00:10:16,880 --> 00:10:21,519
external services

00:10:18,320 --> 00:10:21,839
or any other service but that is part of

00:10:21,519 --> 00:10:25,279
the

00:10:21,839 --> 00:10:27,600
cluster which so this

00:10:25,279 --> 00:10:28,480
apache knox enhance the perimeter

00:10:27,600 --> 00:10:31,360
security

00:10:28,480 --> 00:10:32,320
because uh because we are not exposing

00:10:31,360 --> 00:10:35,440
any port

00:10:32,320 --> 00:10:37,040
um and we are proxying uh all other

00:10:35,440 --> 00:10:40,560
services by a knock

00:10:37,040 --> 00:10:41,279
so this reduces our port exposure and uh

00:10:40,560 --> 00:10:45,680
helps in

00:10:41,279 --> 00:10:48,720
uh uh embed vulnerability filter

00:10:45,680 --> 00:10:49,680
then we have uh we can use this as api

00:10:48,720 --> 00:10:51,920
gateway

00:10:49,680 --> 00:10:52,800
and this is a this worked as centralized

00:10:51,920 --> 00:10:57,120
access and

00:10:52,800 --> 00:10:57,120
used for enterprise authentication tool

00:10:59,440 --> 00:11:08,000
then we comes to access security pillar

00:11:04,240 --> 00:11:11,200
so for access security pillar

00:11:08,000 --> 00:11:13,680
apache ranger helps really well and it

00:11:11,200 --> 00:11:15,200
it helps us to defining what user and

00:11:13,680 --> 00:11:18,480
application can do with the

00:11:15,200 --> 00:11:19,360
data so we we maintain one logical copy

00:11:18,480 --> 00:11:21,920
of the data

00:11:19,360 --> 00:11:22,880
at a central place and there we define

00:11:21,920 --> 00:11:25,760
all the

00:11:22,880 --> 00:11:26,160
policies uh for for most of the users

00:11:25,760 --> 00:11:28,959
and

00:11:26,160 --> 00:11:29,360
this one set of permission is defined

00:11:28,959 --> 00:11:31,440
for

00:11:29,360 --> 00:11:33,440
across all the access path so this

00:11:31,440 --> 00:11:34,959
defined fine grain permission down to

00:11:33,440 --> 00:11:37,279
column and row level we have

00:11:34,959 --> 00:11:39,120
dynamic column uh masking dynamic row

00:11:37,279 --> 00:11:42,640
filtering and classification-based

00:11:39,120 --> 00:11:45,120
security through apache atlas 2.

00:11:42,640 --> 00:11:46,560
so this is apache ranger architecture

00:11:45,120 --> 00:11:49,839
and

00:11:46,560 --> 00:11:51,839
here we have ranger administrator portal

00:11:49,839 --> 00:11:53,440
through this portal any administrator

00:11:51,839 --> 00:11:55,760
can create the policies

00:11:53,440 --> 00:11:57,040
and this policy is later used by the

00:11:55,760 --> 00:12:00,639
rangers plugin

00:11:57,040 --> 00:12:03,680
for for for authorizing

00:12:00,639 --> 00:12:06,639
any uh incoming client call that

00:12:03,680 --> 00:12:08,079
comes for these plugins so let's take

00:12:06,639 --> 00:12:10,800
example of kafka

00:12:08,079 --> 00:12:12,079
if any user is trying to access any

00:12:10,800 --> 00:12:15,680
topic

00:12:12,079 --> 00:12:19,279
then uh it will talk to kava for

00:12:15,680 --> 00:12:21,440
for accessing the resources

00:12:19,279 --> 00:12:22,959
then ranger plugin talks to back to

00:12:21,440 --> 00:12:25,519
ranger admin portal

00:12:22,959 --> 00:12:27,120
and download the ranger policies so this

00:12:25,519 --> 00:12:30,000
uh polling happens

00:12:27,120 --> 00:12:31,440
every 30 seconds and uh after

00:12:30,000 --> 00:12:35,040
downloading the policy

00:12:31,440 --> 00:12:38,160
it authorizes the uh that incoming call

00:12:35,040 --> 00:12:40,160
using the policy and for

00:12:38,160 --> 00:12:41,360
after uh authorizing that call it

00:12:40,160 --> 00:12:44,160
publish the audit

00:12:41,360 --> 00:12:44,560
information to the ranger audit server

00:12:44,160 --> 00:12:47,120
and

00:12:44,560 --> 00:12:47,920
this audit server audit information goes

00:12:47,120 --> 00:12:51,360
to solar

00:12:47,920 --> 00:12:53,279
and external uh persistent data storage

00:12:51,360 --> 00:12:55,360
too

00:12:53,279 --> 00:12:57,120
and these uh users are maintained in the

00:12:55,360 --> 00:13:01,360
external user ready based

00:12:57,120 --> 00:13:03,360
uh server like it can be ld or free ipa

00:13:01,360 --> 00:13:05,120
so ranger directly talks to the server

00:13:03,360 --> 00:13:07,279
and maintain the user information

00:13:05,120 --> 00:13:09,680
and those users can be used for

00:13:07,279 --> 00:13:12,320
computing the range of policies

00:13:09,680 --> 00:13:14,000
then we have a legacy tool and data

00:13:12,320 --> 00:13:19,360
governance to here we use

00:13:14,000 --> 00:13:21,600
atlas and there are integration api

00:13:19,360 --> 00:13:23,120
and for that we use ranger taxing server

00:13:21,600 --> 00:13:26,560
ranger texting server

00:13:23,120 --> 00:13:28,000
sync sync the tags and entity

00:13:26,560 --> 00:13:31,279
information from the

00:13:28,000 --> 00:13:32,000
uh atlas and push it back to ringer

00:13:31,279 --> 00:13:35,680
administ

00:13:32,000 --> 00:13:38,399
portal then uh we can create

00:13:35,680 --> 00:13:38,959
ranger policy on these tags also and uh

00:13:38,399 --> 00:13:41,360
this tag

00:13:38,959 --> 00:13:42,320
keep on downloading uh on the rangers

00:13:41,360 --> 00:13:45,839
plugin site

00:13:42,320 --> 00:13:49,199
and uh whenever a client call comes

00:13:45,839 --> 00:13:52,079
on the plugin side range of plug-in mac

00:13:49,199 --> 00:13:54,079
it checks if uh if user is allowed to

00:13:52,079 --> 00:13:56,320
access this tag

00:13:54,079 --> 00:13:57,600
that tag can be associated with any

00:13:56,320 --> 00:14:00,480
sensitive data

00:13:57,600 --> 00:14:03,839
and based on that we can allow or deny

00:14:00,480 --> 00:14:03,839
it all

00:14:06,880 --> 00:14:10,079
so these are the apache ranger

00:14:08,320 --> 00:14:12,399
capabilities first is

00:14:10,079 --> 00:14:14,240
authorization like centralized this is

00:14:12,399 --> 00:14:14,959
centralized platform to define and

00:14:14,240 --> 00:14:17,199
manage

00:14:14,959 --> 00:14:18,399
security policies consistently across

00:14:17,199 --> 00:14:21,680
hadoop ecosystem

00:14:18,399 --> 00:14:23,519
and these are the uh components

00:14:21,680 --> 00:14:27,600
supported

00:14:23,519 --> 00:14:31,040
by a ranger one good thing is we can

00:14:27,600 --> 00:14:32,800
we can extend that part easily because

00:14:31,040 --> 00:14:34,959
if in let's say tomorrow if new

00:14:32,800 --> 00:14:35,519
component wants to come and use ranger

00:14:34,959 --> 00:14:37,360
for the

00:14:35,519 --> 00:14:39,760
authorization they can easily implement

00:14:37,360 --> 00:14:42,639
the plug-in architecture and

00:14:39,760 --> 00:14:44,240
support their component for optimization

00:14:42,639 --> 00:14:47,120
then there is key management

00:14:44,240 --> 00:14:49,120
uh part also we store and manage

00:14:47,120 --> 00:14:51,760
encryption key policies

00:14:49,120 --> 00:14:52,240
and uh using those key we encrypt the

00:14:51,760 --> 00:14:54,160
data

00:14:52,240 --> 00:14:55,279
and again we can create a range of

00:14:54,160 --> 00:14:57,600
policies uh

00:14:55,279 --> 00:14:58,720
on the case then there is a central

00:14:57,600 --> 00:15:01,040
audit location for

00:14:58,720 --> 00:15:03,360
all the access requests uh we support

00:15:01,040 --> 00:15:04,720
multiple destination sources like htfs

00:15:03,360 --> 00:15:08,320
solar rs3 and

00:15:04,720 --> 00:15:11,120
adidas 102 and there is real time

00:15:08,320 --> 00:15:12,480
visual query interface for audit on the

00:15:11,120 --> 00:15:15,120
ranger ui we can

00:15:12,480 --> 00:15:16,800
press this audit from the solar and see

00:15:15,120 --> 00:15:19,199
like uh what happened

00:15:16,800 --> 00:15:22,399
last time and which user try to access

00:15:19,199 --> 00:15:22,399
this particular resource

00:15:22,800 --> 00:15:26,720
so apache ranger follows uh attribute

00:15:25,360 --> 00:15:29,360
access control

00:15:26,720 --> 00:15:30,079
and this is what happens here talks to

00:15:29,360 --> 00:15:32,560
the

00:15:30,079 --> 00:15:33,199
authorization service so let's say

00:15:32,560 --> 00:15:35,600
resources

00:15:33,199 --> 00:15:37,680
are this is combination of subject

00:15:35,600 --> 00:15:40,959
action resources and environment

00:15:37,680 --> 00:15:41,759
so let's say if a user joe which is the

00:15:40,959 --> 00:15:44,720
subject and

00:15:41,759 --> 00:15:46,240
it is authorized to uh access u.s

00:15:44,720 --> 00:15:49,360
customer table

00:15:46,240 --> 00:15:52,480
and object from eu address

00:15:49,360 --> 00:15:53,440
so this information will go in the

00:15:52,480 --> 00:15:56,560
request

00:15:53,440 --> 00:15:59,440
and authorization service will

00:15:56,560 --> 00:16:01,120
check this request it will check allow

00:15:59,440 --> 00:16:04,480
only u.s employee group to

00:16:01,120 --> 00:16:06,959
access u.s customer data

00:16:04,480 --> 00:16:08,959
from domestic ip address so this all

00:16:06,959 --> 00:16:11,360
information goes as part of request and

00:16:08,959 --> 00:16:12,880
and this is part of policy rules and

00:16:11,360 --> 00:16:15,600
based on policy rules

00:16:12,880 --> 00:16:18,480
this access can this request can be

00:16:15,600 --> 00:16:18,480
allowed or denied

00:16:20,800 --> 00:16:24,959
then there are dynamic row filtering and

00:16:23,120 --> 00:16:27,440
column masking

00:16:24,959 --> 00:16:28,480
services also available with uh apache

00:16:27,440 --> 00:16:32,079
ranger

00:16:28,480 --> 00:16:32,079
for quick example let's say we have

00:16:32,720 --> 00:16:37,279
employee data or public data are

00:16:36,079 --> 00:16:40,560
available here

00:16:37,279 --> 00:16:42,560
and here we have country national id and

00:16:40,560 --> 00:16:45,360
credit card number data over

00:16:42,560 --> 00:16:47,040
so we we can see these two are sensitive

00:16:45,360 --> 00:16:48,480
data like national id and credit card

00:16:47,040 --> 00:16:51,680
number are very

00:16:48,480 --> 00:16:53,920
sensitive data and a so

00:16:51,680 --> 00:16:56,079
we and we let's say we have three group

00:16:53,920 --> 00:16:56,880
hr group analyst group and marketing

00:16:56,079 --> 00:17:00,240
group

00:16:56,880 --> 00:17:03,040
so we can configure like uh hr group

00:17:00,240 --> 00:17:03,839
uh for hr policy admin can see unmarked

00:17:03,040 --> 00:17:06,000
but

00:17:03,839 --> 00:17:07,039
are restricted by row filtering policies

00:17:06,000 --> 00:17:10,400
to see data

00:17:07,039 --> 00:17:11,039
for eu person only so we we can filter

00:17:10,400 --> 00:17:14,640
based on

00:17:11,039 --> 00:17:18,480
this like location is equals to germany

00:17:14,640 --> 00:17:19,039
then only uh then this group can access

00:17:18,480 --> 00:17:22,400
the

00:17:19,039 --> 00:17:23,199
germany related data and it will not be

00:17:22,400 --> 00:17:26,720
able to access

00:17:23,199 --> 00:17:29,520
us related data then here uh

00:17:26,720 --> 00:17:30,799
u.s user uh who are from analyst group

00:17:29,520 --> 00:17:33,760
they can see data from

00:17:30,799 --> 00:17:34,160
u.s person but credit card and national

00:17:33,760 --> 00:17:38,480
id

00:17:34,160 --> 00:17:41,280
ssn are marked so if you can see here

00:17:38,480 --> 00:17:42,720
this data is masked because there are

00:17:41,280 --> 00:17:46,080
ranger policy defined

00:17:42,720 --> 00:17:49,600
ranger masking policy defined and when

00:17:46,080 --> 00:17:53,200
this analyst group contacted high

00:17:49,600 --> 00:17:56,480
hype will be masking the data using the

00:17:53,200 --> 00:17:56,480
apache ranger policies

00:17:57,919 --> 00:18:01,840
then there is a dynamic uh security

00:18:00,080 --> 00:18:03,440
policies with apache ranger we can

00:18:01,840 --> 00:18:05,840
configure there is a

00:18:03,440 --> 00:18:06,640
classification based access and masking

00:18:05,840 --> 00:18:11,039
policies

00:18:06,640 --> 00:18:13,200
so so there is a high meta store atlas

00:18:11,039 --> 00:18:14,880
whenever we create any table or any

00:18:13,200 --> 00:18:18,080
database or

00:18:14,880 --> 00:18:18,799
anything any entity on the hive or hp

00:18:18,080 --> 00:18:21,520
site

00:18:18,799 --> 00:18:22,559
and that those entities get synced on

00:18:21,520 --> 00:18:26,080
the atlas

00:18:22,559 --> 00:18:28,559
and we can create any tag

00:18:26,080 --> 00:18:30,000
on the atlas side and associate those

00:18:28,559 --> 00:18:31,679
tag with the entity

00:18:30,000 --> 00:18:34,240
and that information gets synced to the

00:18:31,679 --> 00:18:37,600
ranger and on ranger we

00:18:34,240 --> 00:18:40,960
create uh the pulses on this text

00:18:37,600 --> 00:18:43,600
so let's say if you want to tag

00:18:40,960 --> 00:18:45,280
all the sensitive data with pi attack

00:18:43,600 --> 00:18:46,720
then we can create range of policy on

00:18:45,280 --> 00:18:50,000
the pii tag

00:18:46,720 --> 00:18:52,799
and uh and using those classification

00:18:50,000 --> 00:18:55,039
based policies uh we can restrict uh

00:18:52,799 --> 00:18:56,400
we can restrict user even we can create

00:18:55,039 --> 00:18:58,880
a masking policy

00:18:56,400 --> 00:19:01,600
on those classification then we can

00:18:58,880 --> 00:19:01,600
create time based

00:19:02,160 --> 00:19:05,520
user 8 am to 5 pm those kind of policies

00:19:05,120 --> 00:19:07,520
can be

00:19:05,520 --> 00:19:09,440
created then location-based policies

00:19:07,520 --> 00:19:12,559
also can be created where

00:19:09,440 --> 00:19:15,600
we will be restricted based on their uh

00:19:12,559 --> 00:19:15,600
based on their address

00:19:17,360 --> 00:19:24,240
then ranger has audit capability here uh

00:19:21,600 --> 00:19:26,160
we can filter audit from solar and there

00:19:24,240 --> 00:19:28,880
is very easy filtering we can filter

00:19:26,160 --> 00:19:29,679
uh audit rates on user group policy id

00:19:28,880 --> 00:19:32,480
resources

00:19:29,679 --> 00:19:32,960
services or even based on the result

00:19:32,480 --> 00:19:35,440
whether

00:19:32,960 --> 00:19:37,679
this was allowed or denied and this

00:19:35,440 --> 00:19:42,240
audit information goes to

00:19:37,679 --> 00:19:42,240
s3 and adlas 102

00:19:43,919 --> 00:19:48,080
now if you talk about visibility pillar

00:19:47,120 --> 00:19:50,559
of the security

00:19:48,080 --> 00:19:51,120
then there is self-service availability

00:19:50,559 --> 00:19:53,200
to

00:19:51,120 --> 00:19:55,360
understand where data is coming from how

00:19:53,200 --> 00:19:58,080
it is used where to find

00:19:55,360 --> 00:20:00,320
more like it so this go and this is all

00:19:58,080 --> 00:20:03,200
about the lineage part i will

00:20:00,320 --> 00:20:04,880
explain in my demo so let's see if you

00:20:03,200 --> 00:20:08,080
are creating a view from the table

00:20:04,880 --> 00:20:09,360
then on the atlas you can see this is

00:20:08,080 --> 00:20:12,559
the lineage this

00:20:09,360 --> 00:20:14,559
view was created from the table and

00:20:12,559 --> 00:20:15,919
very good information is available on

00:20:14,559 --> 00:20:18,480
the atlas side

00:20:15,919 --> 00:20:19,360
then we have comprehensive auditability

00:20:18,480 --> 00:20:22,400
on who

00:20:19,360 --> 00:20:24,240
access what this access event are from

00:20:22,400 --> 00:20:27,360
apache ranger and

00:20:24,240 --> 00:20:29,919
we can easily do this authenticated

00:20:27,360 --> 00:20:29,919
information

00:20:30,320 --> 00:20:34,480
then there is a data protection part

00:20:33,120 --> 00:20:37,919
where we can encrypt

00:20:34,480 --> 00:20:39,840
data based on the keys and

00:20:37,919 --> 00:20:41,440
on those keys also we can create uh

00:20:39,840 --> 00:20:44,960
ranger management uh

00:20:41,440 --> 00:20:46,000
uh key management policies and even from

00:20:44,960 --> 00:20:48,559
the ranger itself

00:20:46,000 --> 00:20:50,559
we can view the keys we can perform

00:20:48,559 --> 00:20:53,600
various options on those keys so

00:20:50,559 --> 00:20:58,159
this provide data protection for

00:20:53,600 --> 00:20:58,159
data on the rest even data on the motion

00:20:58,640 --> 00:21:02,720
i will quickly uh move to the demo and

00:21:00,960 --> 00:21:05,760
then we can take the

00:21:02,720 --> 00:21:08,640
question and answer and

00:21:05,760 --> 00:21:17,840
i'll just stop sharing my screen and

00:21:08,640 --> 00:21:17,840
move to the demo

00:21:28,840 --> 00:21:31,840
so

00:21:42,840 --> 00:21:45,840
okay

00:21:52,000 --> 00:21:57,200
so this is one of the cdp cluster and

00:21:57,520 --> 00:22:04,640
if we have uh environment details

00:22:01,600 --> 00:22:07,919
it's loading so uh

00:22:04,640 --> 00:22:10,640
this is the environment and uh

00:22:07,919 --> 00:22:12,480
we have data lake one data lake and we

00:22:10,640 --> 00:22:15,840
have one data hub

00:22:12,480 --> 00:22:18,720
so this data lake cluster has uh atlas

00:22:15,840 --> 00:22:20,240
cm hvac name node ranger so these are

00:22:18,720 --> 00:22:23,280
the shared services

00:22:20,240 --> 00:22:25,280
which will be used across the multiple

00:22:23,280 --> 00:22:27,200
data hub though i have only one data

00:22:25,280 --> 00:22:30,720
present here

00:22:27,200 --> 00:22:30,720
so if i go to this cm

00:22:37,039 --> 00:22:42,720
and then i have one data hub cluster

00:22:42,799 --> 00:22:47,679
i can go to the cm so this is data lake

00:22:45,919 --> 00:22:50,480
cluster if you see these services these

00:22:47,679 --> 00:22:53,200
are the shared services

00:22:50,480 --> 00:22:53,600
and this data hub cluster is wired with

00:22:53,200 --> 00:22:56,559
the

00:22:53,600 --> 00:22:56,559
data link cluster

00:22:57,200 --> 00:23:01,679
when we talk about identity part so you

00:23:00,080 --> 00:23:04,400
can see i'm easily able to

00:23:01,679 --> 00:23:05,200
navigate through multiple services using

00:23:04,400 --> 00:23:08,880
one

00:23:05,200 --> 00:23:12,159
uh one uh single sign-on

00:23:08,880 --> 00:23:15,360
so uh that is provided by the knobs

00:23:12,159 --> 00:23:18,559
and we we are not exposing any port or

00:23:15,360 --> 00:23:21,760
any service detail this is all uh

00:23:18,559 --> 00:23:25,760
uh you know side of information

00:23:21,760 --> 00:23:29,760
exposed so if you go to this

00:23:25,760 --> 00:23:29,760
data hub cluster or compute cluster

00:23:30,000 --> 00:23:34,320
here we can see this is wired with the

00:23:32,400 --> 00:23:35,120
data lake cluster so this is the data

00:23:34,320 --> 00:23:37,280
context

00:23:35,120 --> 00:23:38,960
we are using and this is the compute

00:23:37,280 --> 00:23:41,279
cluster

00:23:38,960 --> 00:23:42,320
okay so let's say if you want to use

00:23:41,279 --> 00:23:44,559
hive service

00:23:42,320 --> 00:23:45,440
i will download the ranger related

00:23:44,559 --> 00:23:50,640
information

00:23:45,440 --> 00:23:53,760
and make use of that so i can go to uh

00:23:50,640 --> 00:24:05,840
ranger from this same

00:23:53,760 --> 00:24:05,840
data lake cluster

00:24:16,400 --> 00:24:19,760
so here we can uh specify the range of

00:24:18,799 --> 00:24:23,760
policies

00:24:19,760 --> 00:24:28,960
uh i can uh specify the policy like

00:24:23,760 --> 00:24:28,960
this is the policy for employee table

00:24:29,279 --> 00:24:37,279
okay so let's say this is demo database

00:24:33,120 --> 00:24:41,120
and we have employee table

00:24:37,279 --> 00:24:45,120
and i can give permission for all the

00:24:41,120 --> 00:24:48,880
columns and here i can specify the user

00:24:45,120 --> 00:24:48,880
let's say i want to specify user

00:24:49,039 --> 00:24:55,360
serma and i can give this

00:24:52,720 --> 00:24:55,360
permission

00:24:56,159 --> 00:25:00,320
similarly i can specify the masking

00:24:58,559 --> 00:25:02,720
policies too

00:25:00,320 --> 00:25:03,919
so there are different kind of masking

00:25:02,720 --> 00:25:07,120
option available

00:25:03,919 --> 00:25:10,240
like s or unmasked or

00:25:07,120 --> 00:25:13,520
so only here and here

00:25:10,240 --> 00:25:28,640
we can create any masking policy on the

00:25:13,520 --> 00:25:32,080
same table

00:25:28,640 --> 00:25:36,000
and i can let's say if i want to specify

00:25:32,080 --> 00:25:39,919
credit card number as a masking ball

00:25:36,000 --> 00:25:44,080
then i can use hash marking here

00:25:39,919 --> 00:25:46,880
and which user i want to mask that i can

00:25:44,080 --> 00:25:46,880
specify here

00:25:49,200 --> 00:25:54,159
so for this user uh

00:25:52,240 --> 00:25:56,480
credit card number will be masked for

00:25:54,159 --> 00:25:59,679
other user they will be able to access

00:25:56,480 --> 00:26:03,520
complete detail then we can

00:25:59,679 --> 00:26:06,880
create tag-based policies also here

00:26:03,520 --> 00:26:11,840
we can define so first i'll go to

00:26:06,880 --> 00:26:11,840
atlas and

00:26:21,440 --> 00:26:29,120
yeah so here we can filter out

00:26:24,960 --> 00:26:29,120
hype table and

00:26:31,840 --> 00:26:39,840
so let's say if i want to

00:26:34,960 --> 00:26:39,840
use demo table

00:26:45,440 --> 00:26:53,840
so i can create a new classification too

00:26:48,559 --> 00:26:53,840
and let's say it is pii

00:26:57,600 --> 00:27:07,840
and now i want to type that pii tag

00:27:01,039 --> 00:27:07,840
on this table

00:27:18,840 --> 00:27:21,840
so

00:27:27,360 --> 00:27:32,399
i can type this entity with the pi tag

00:27:32,799 --> 00:27:35,919
and i can see the lineage also so how

00:27:35,279 --> 00:27:39,279
this

00:27:35,919 --> 00:27:40,480
this table is created uh this demo table

00:27:39,279 --> 00:27:43,279
is used to create

00:27:40,480 --> 00:27:44,159
apache view i can go to this apache view

00:27:43,279 --> 00:27:46,240
too

00:27:44,159 --> 00:27:47,200
so this is the operation perform and i

00:27:46,240 --> 00:27:49,840
can see this

00:27:47,200 --> 00:27:49,840
lineage too

00:27:50,320 --> 00:27:54,799
and then there is audit functionality

00:27:52,559 --> 00:27:57,279
too i can filter the audits based on

00:27:54,799 --> 00:28:03,840
user so let's say if i filter based on

00:27:57,279 --> 00:28:03,840
user h322

00:28:13,679 --> 00:28:17,039
so i i'm filtering user based on my

00:28:16,000 --> 00:28:20,240
username

00:28:17,039 --> 00:28:23,679
and it recently tried to perform some

00:28:20,240 --> 00:28:24,080
atlas operation so that information i

00:28:23,679 --> 00:28:27,679
can

00:28:24,080 --> 00:28:30,799
get here this user tries to perform

00:28:27,679 --> 00:28:31,760
entity read on the atlas which was

00:28:30,799 --> 00:28:34,080
allowed

00:28:31,760 --> 00:28:35,360
if any we can filter out this

00:28:34,080 --> 00:28:37,679
information based on

00:28:35,360 --> 00:28:40,559
the result like whether this operation

00:28:37,679 --> 00:28:40,559
was denied

00:28:41,440 --> 00:28:47,360
or allowed so we can see in the denied

00:28:44,640 --> 00:28:47,360
operations too

00:28:47,520 --> 00:28:50,559
then there is security zone feature also

00:28:49,520 --> 00:28:54,559
available in

00:28:50,559 --> 00:28:57,120
ranger uh like you can create jones and

00:28:54,559 --> 00:28:59,039
the particular resources as part of june

00:28:57,120 --> 00:29:02,960
is some other resources

00:28:59,039 --> 00:29:02,960
as part of zone b

00:29:03,919 --> 00:29:10,559
so yeah that's it uh from the demo side

00:29:07,919 --> 00:29:12,480
uh i think we have only 10 minutes left

00:29:10,559 --> 00:29:27,840
so we can take up the questions

00:29:12,480 --> 00:29:27,840
if any of you have any questions

00:29:37,919 --> 00:29:41,120
can ranger policy be used with query

00:29:40,480 --> 00:29:44,240
engine

00:29:41,120 --> 00:29:47,279
example form spark so

00:29:44,240 --> 00:29:51,279
i would say yes i know because uh

00:29:47,279 --> 00:29:54,480
it can be used uh by a high route so

00:29:51,279 --> 00:29:58,000
so there is a hms available

00:29:54,480 --> 00:30:01,360
so uh that works on high meta store

00:29:58,000 --> 00:30:04,559
so as far as i know spark can directly

00:30:01,360 --> 00:30:08,720
uh contract to high meta store and

00:30:04,559 --> 00:30:11,120
let's say user spark is contacting to uh

00:30:08,720 --> 00:30:12,000
to high meta store and trying to fetch

00:30:11,120 --> 00:30:15,360
employee

00:30:12,000 --> 00:30:18,960
table rated information right so

00:30:15,360 --> 00:30:22,480
hms policies will be applied there and

00:30:18,960 --> 00:30:24,880
that based on those hms policies

00:30:22,480 --> 00:30:25,840
uh this operation will be allowed or

00:30:24,880 --> 00:30:29,120
tonight

00:30:25,840 --> 00:30:32,000
now uh now height policy

00:30:29,120 --> 00:30:32,799
high hms impala three of them share the

00:30:32,000 --> 00:30:34,799
same repo

00:30:32,799 --> 00:30:36,799
which is a hadoop high school rep or you

00:30:34,799 --> 00:30:40,080
can say hi repo

00:30:36,799 --> 00:30:42,080
so uh this is uh

00:30:40,080 --> 00:30:43,279
he you will not feel any difference so

00:30:42,080 --> 00:30:47,039
let's say if you have created

00:30:43,279 --> 00:30:49,360
any table from the hive site and

00:30:47,039 --> 00:30:50,799
you've created some policies on on the

00:30:49,360 --> 00:30:53,120
on that high table

00:30:50,799 --> 00:30:54,640
so even those policies get applied when

00:30:53,120 --> 00:30:56,720
you are trying to access the table from

00:30:54,640 --> 00:31:05,840
the spark site

00:30:56,720 --> 00:31:05,840
i i hope i have answered your question

00:31:11,840 --> 00:31:19,840
anyone else

00:31:20,480 --> 00:31:28,000
yeah so ah for high

00:31:23,919 --> 00:31:31,440
uh this has been very uh old feature

00:31:28,000 --> 00:31:34,720
uh high authorization i think since uh

00:31:31,440 --> 00:31:36,559
high two or high one uh because

00:31:34,720 --> 00:31:38,960
ranger height plugin is supported for

00:31:36,559 --> 00:31:41,519
last three to four years i i'm not sure

00:31:38,960 --> 00:31:42,159
uh from which version this support was

00:31:41,519 --> 00:31:45,039
started

00:31:42,159 --> 00:31:46,000
but all the recent version will have uh

00:31:45,039 --> 00:31:49,519
high ranger

00:31:46,000 --> 00:31:52,880
plugin support so yes

00:31:49,519 --> 00:31:54,080
most of the from hype 2.0 obviously you

00:31:52,880 --> 00:31:56,480
will find the support but

00:31:54,080 --> 00:31:57,519
high 1.0 i think there also support is

00:31:56,480 --> 00:32:01,279
available

00:31:57,519 --> 00:32:01,840
so if you see any last any three or four

00:32:01,279 --> 00:32:03,360
year

00:32:01,840 --> 00:32:05,600
older version you will find the support

00:32:03,360 --> 00:32:05,600
there

00:32:06,480 --> 00:32:14,240
as your adls

00:32:09,840 --> 00:32:17,360
yes so this has been uh

00:32:14,240 --> 00:32:20,480
recently being bulked upon so this

00:32:17,360 --> 00:32:20,480
this we have not uh

00:32:20,720 --> 00:32:24,559
there is only very less information

00:32:23,519 --> 00:32:29,120
available on this

00:32:24,559 --> 00:32:32,720
so we have ranger res supported for adls

00:32:29,120 --> 00:32:36,320
and which is recently

00:32:32,720 --> 00:32:36,320
gone for ga so

00:32:36,480 --> 00:32:42,720
yeah i think you will hear a lot about

00:32:39,840 --> 00:32:44,960
azure radialis support in upcoming

00:32:42,720 --> 00:32:44,960
months

00:32:49,000 --> 00:32:57,840
is that is supported by a ranger

00:33:01,360 --> 00:33:04,799
so using height this ranger is just a

00:33:03,600 --> 00:33:09,120
matter of having

00:33:04,799 --> 00:33:12,720
plugin installed yes so

00:33:09,120 --> 00:33:13,760
yes so uh this plug-in by default goes

00:33:12,720 --> 00:33:16,000
with the

00:33:13,760 --> 00:33:18,240
height so in height you can configure

00:33:16,000 --> 00:33:21,679
the oxidizers whether you want to use a

00:33:18,240 --> 00:33:24,480
native hive organizer or you want to use

00:33:21,679 --> 00:33:26,320
ranger hive authorizer that you can you

00:33:24,480 --> 00:33:29,120
can set configuration

00:33:26,320 --> 00:33:31,120
on the hive site and uh in the height

00:33:29,120 --> 00:33:33,279
configuration you can

00:33:31,120 --> 00:33:35,440
select the hybrid for that you want to

00:33:33,279 --> 00:33:38,640
use if you want i can quickly

00:33:35,440 --> 00:33:41,200
show you that part one i'll project my

00:33:38,640 --> 00:33:41,200
screen again

00:33:45,519 --> 00:33:52,799
so if you go to this hype service

00:33:48,720 --> 00:33:55,039
here we have configurations

00:33:52,799 --> 00:33:55,039
and

00:33:59,120 --> 00:34:04,840
yes so here you can choose the ranger

00:34:01,120 --> 00:34:07,519
service and that you want to use

00:34:04,840 --> 00:34:09,520
and uh

00:34:07,519 --> 00:34:10,879
on this node when you go and see the

00:34:09,520 --> 00:34:13,760
conversation this will be

00:34:10,879 --> 00:34:14,960
referring to the ranger repo and ranger

00:34:13,760 --> 00:34:18,399
repo is nothing but

00:34:14,960 --> 00:34:21,440
uh this hadoop esquire and here we have

00:34:18,399 --> 00:34:24,000
uh raffle name cm underscore height

00:34:21,440 --> 00:34:25,200
so this repo name will be configured on

00:34:24,000 --> 00:34:27,760
the hive site

00:34:25,200 --> 00:34:28,320
and height will start downloading the

00:34:27,760 --> 00:34:31,200
policy

00:34:28,320 --> 00:34:32,159
every 30 second from the ranger and

00:34:31,200 --> 00:34:35,200
whenever

00:34:32,159 --> 00:34:37,440
any any user contact to hide

00:34:35,200 --> 00:34:39,520
that policy will get evaluated and based

00:34:37,440 --> 00:34:49,839
on that operation will be

00:34:39,520 --> 00:34:49,839
allowed or denied

00:34:53,359 --> 00:35:03,839
any other question

00:35:07,920 --> 00:35:12,880
okay okay thank you so much everyone for

00:35:12,079 --> 00:35:17,839
joining this

00:35:12,880 --> 00:35:17,839

YouTube URL: https://www.youtube.com/watch?v=P7mZks7zSvs


