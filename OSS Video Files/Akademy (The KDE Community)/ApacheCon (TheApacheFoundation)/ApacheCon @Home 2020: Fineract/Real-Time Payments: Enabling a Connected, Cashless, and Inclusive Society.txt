Title: Real-Time Payments: Enabling a Connected, Cashless, and Inclusive Society
Publication date: 2020-10-17
Playlist: ApacheCon @Home 2020: Fineract
Description: 
	Real-Time Payments: Enabling a Connected, Cashless, and Inclusive Society
Istvan Molnar, Godfrey Kutumela

A presentation from ApacheCon @Home 2020
https://apachecon.com/acah2020/

Across the globe, real-time payment systems are being rolled out providing a higher degree of convenience, transparency, and efficiency enabling secure, cashless, and more inclusive economies transforming commerce at all levels - consumers, business, and governments. The Apache Fineract architecture will need to continue to evolve and keep pace with how value is exchanged. The Mifos Initiative has been aligning its development on Apache Fineract and Mifos to equip governments and institutions to effectively participate in the real-time systems being built in accordance with emerging standards like the Gates Foundation’s Level One Principles and complementary open source systems like Mojaloop enabling real-time interoperable payments. This session will explore the emerging trends and standards around real-time payment systems including a closer look at the ecosystems in a couple of countries, an overview of these guiding principles illustrated by Mojaloop as a reference implementation and a showcase and roadmap of the Payment Hub EE - the open source bridge and microservices orchestration layer Mifos is building to seamlessly enable accounts and wallets managed on Fineract to initiate transactions over modern real-time payment rails via mobile channels and Open APIs.

Istvan is Partner and Architect for DPC Consulting, an enterprise Java consultancy from Budapest, Hungary that has decades of experience implementing banking and real-time payment solutions at scale. Istvan has led the deployment of Mifos and Fineract at a bank in Germany as well as banks in SE Asia. Building off of the experience implementing real-time payment systems for Singapore and Hungary, Istvan has lead the design and architecture of Payment Hub EE, a powerful bridge and microservices workflow orchestration tool spearheaded by the Mifos Initiative, for integrating Fineract with real-time payment systems like Mojaloop

Godfrey has 20 years of Technology Consulting experience specializing in Fintech, Cybersecurity, DevSecOps\BizSecOps, Cloud Native and General Solution Architect. Extensive background working with large scale, high-profile systems integration and development projects that span a customer’s organization, and experience designing robust solutions that bring together multiple platforms. He is passionate about the use of technology and its applications in every aspect of humanity in order to advance the livelihood and economic conditions of the under developed world. My interests lie in helping businesses create and deliver value through innovative application of information and communication technologies with an outside-in approach, focusing on consumer and market needs
Captions: 
	00:00:06,420 --> 00:00:10,640
[Music]

00:00:14,160 --> 00:00:17,230
[Music]

00:00:24,400 --> 00:00:27,680
so

00:00:25,439 --> 00:00:29,439
welcome everybody to our session on

00:00:27,680 --> 00:00:31,679
real-time payments

00:00:29,439 --> 00:00:32,480
like this is being spearheaded by

00:00:31,679 --> 00:00:35,360
godfrey and

00:00:32,480 --> 00:00:35,840
ishbon they're both active members of

00:00:35,360 --> 00:00:38,079
the

00:00:35,840 --> 00:00:39,440
miphos and pinteract and mojolup

00:00:38,079 --> 00:00:41,600
communities

00:00:39,440 --> 00:00:42,719
so ishvan is going to focus on some of

00:00:41,600 --> 00:00:45,200
the efforts that

00:00:42,719 --> 00:00:46,079
miphos has been helping to lead around

00:00:45,200 --> 00:00:48,960
the payment hub

00:00:46,079 --> 00:00:50,640
to provide a engine to integrate with

00:00:48,960 --> 00:00:52,559
real-time payment systems focus

00:00:50,640 --> 00:00:53,920
initially around mojo loop

00:00:52,559 --> 00:00:56,480
and then godfrey is really going to

00:00:53,920 --> 00:00:58,320
focus on the emergence of real-time

00:00:56,480 --> 00:01:00,399
payment systems around the world

00:00:58,320 --> 00:01:02,160
the guiding principles of the level one

00:01:00,399 --> 00:01:04,400
project and touch on

00:01:02,160 --> 00:01:05,519
modulo so i'll pass it on to them but

00:01:04,400 --> 00:01:07,520
this is a very

00:01:05,519 --> 00:01:09,040
you know interesting and pertinent topic

00:01:07,520 --> 00:01:11,200
as we believe

00:01:09,040 --> 00:01:12,640
aligning finrac as an open source

00:01:11,200 --> 00:01:15,119
account management

00:01:12,640 --> 00:01:16,479
along with an open source payment system

00:01:15,119 --> 00:01:19,439
like mojo loop can really

00:01:16,479 --> 00:01:20,560
power a full end-to-end architecture for

00:01:19,439 --> 00:01:22,720
financial services

00:01:20,560 --> 00:01:24,320
so really looking forward to getting

00:01:22,720 --> 00:01:26,880
more of our finrac community

00:01:24,320 --> 00:01:28,640
involved with the open source community

00:01:26,880 --> 00:01:29,119
around real-time payments and hope this

00:01:28,640 --> 00:01:31,600
can be

00:01:29,119 --> 00:01:33,040
a launch pad for that so thank you spawn

00:01:31,600 --> 00:01:34,560
and godfrey for

00:01:33,040 --> 00:01:37,040
taking time to lead the presentation

00:01:34,560 --> 00:01:39,920
today looking forward to it

00:01:37,040 --> 00:01:40,560
thank you thank you thank you and yeah

00:01:39,920 --> 00:01:43,600
welcome

00:01:40,560 --> 00:01:46,240
everybody on the call it has been quite

00:01:43,600 --> 00:01:47,360
an exciting sessions from the beginning

00:01:46,240 --> 00:01:49,600
and

00:01:47,360 --> 00:01:51,759
in this sessions really what we're going

00:01:49,600 --> 00:01:54,560
to be liking to do here

00:01:51,759 --> 00:01:56,159
is really to incorporate much of what

00:01:54,560 --> 00:01:58,719
has been discussed

00:01:56,159 --> 00:02:00,640
and wrap it up in terms of you know

00:01:58,719 --> 00:02:03,680
where real-time payments

00:02:00,640 --> 00:02:04,479
can help us connect all the disparate

00:02:03,680 --> 00:02:06,640
efforts

00:02:04,479 --> 00:02:07,759
that we we have within the the financial

00:02:06,640 --> 00:02:09,759
ecosystem

00:02:07,759 --> 00:02:11,360
so what i'll do is i'll i'll be there

00:02:09,759 --> 00:02:13,680
the first one to introduce

00:02:11,360 --> 00:02:15,440
and i will i'll run with couple of

00:02:13,680 --> 00:02:16,800
slides and i'll hand over to

00:02:15,440 --> 00:02:19,200
eastman later just for quick

00:02:16,800 --> 00:02:20,239
introduction of both i'm based in south

00:02:19,200 --> 00:02:23,440
africa

00:02:20,239 --> 00:02:25,440
and my focus is really consulting in the

00:02:23,440 --> 00:02:27,840
fintech space and i'm being

00:02:25,440 --> 00:02:30,560
a contributor of you know some of the

00:02:27,840 --> 00:02:33,040
real-time payment initiatives such as

00:02:30,560 --> 00:02:33,760
moja lope and moali started with more

00:02:33,040 --> 00:02:36,480
ali from

00:02:33,760 --> 00:02:38,239
from inception when i was actually doing

00:02:36,480 --> 00:02:40,080
consulting at mtn

00:02:38,239 --> 00:02:41,440
i've been part of the mtn mobile money

00:02:40,080 --> 00:02:43,760
group you know

00:02:41,440 --> 00:02:44,720
roll out mobile money in 14 countries in

00:02:43,760 --> 00:02:47,920
africa

00:02:44,720 --> 00:02:49,680
and that's where in my interest really

00:02:47,920 --> 00:02:52,080
in participation

00:02:49,680 --> 00:02:53,120
in open source project deepened because

00:02:52,080 --> 00:02:55,920
of access

00:02:53,120 --> 00:02:59,200
in terms of you know how much we need to

00:02:55,920 --> 00:03:02,319
do to close much of the gap in the space

00:02:59,200 --> 00:03:02,800
so just quickly go on to the agenda for

00:03:02,319 --> 00:03:04,400
the day

00:03:02,800 --> 00:03:06,159
i'm not sure if my slide will be

00:03:04,400 --> 00:03:08,640
changing let me know and

00:03:06,159 --> 00:03:08,640
lisbon

00:03:13,360 --> 00:03:19,840
is is it changing

00:03:20,400 --> 00:03:24,480
hopefully openly yeah yeah so okay now

00:03:23,120 --> 00:03:26,239
it's fine so

00:03:24,480 --> 00:03:28,080
okay perfect so basically what would you

00:03:26,239 --> 00:03:29,280
like to do like to compress this into

00:03:28,080 --> 00:03:32,000
two sessions

00:03:29,280 --> 00:03:33,680
and the the first session is really for

00:03:32,000 --> 00:03:36,799
for me to position

00:03:33,680 --> 00:03:37,440
where real-time payments are in today's

00:03:36,799 --> 00:03:39,840
world

00:03:37,440 --> 00:03:42,560
but studying a little bit by making sure

00:03:39,840 --> 00:03:43,280
that we we've got common definition of

00:03:42,560 --> 00:03:46,319
it and we've got

00:03:43,280 --> 00:03:49,280
common understanding of what are

00:03:46,319 --> 00:03:51,440
our real-time payments and what are the

00:03:49,280 --> 00:03:54,319
key benefits that we we have

00:03:51,440 --> 00:03:56,159
with real-time and payments in terms of

00:03:54,319 --> 00:04:00,080
looking at the current cash

00:03:56,159 --> 00:04:02,560
society and converting it slowly into a

00:04:00,080 --> 00:04:04,080
more reliable you know model of offering

00:04:02,560 --> 00:04:06,080
services to to the poor

00:04:04,080 --> 00:04:08,080
so i'll touch a little bit in terms of

00:04:06,080 --> 00:04:09,360
the the inside and the outside of

00:04:08,080 --> 00:04:13,040
real-time payments

00:04:09,360 --> 00:04:16,479
and i'll spend a large degree of my time

00:04:13,040 --> 00:04:17,840
really looking at what we see as the

00:04:16,479 --> 00:04:18,560
biggest accelerators of the

00:04:17,840 --> 00:04:21,680
entertainment

00:04:18,560 --> 00:04:24,800
real-time payments with reference to

00:04:21,680 --> 00:04:26,080
what you know level one for a project

00:04:24,800 --> 00:04:27,680
foundation is doing

00:04:26,080 --> 00:04:29,680
which is actually billion million the

00:04:27,680 --> 00:04:32,320
case you know funded and as well

00:04:29,680 --> 00:04:33,759
as the resultant you know product of

00:04:32,320 --> 00:04:35,680
level one initiative

00:04:33,759 --> 00:04:37,120
which is mojo loop you know around

00:04:35,680 --> 00:04:40,639
building a highly

00:04:37,120 --> 00:04:42,400
interable and a very inclusive scheme

00:04:40,639 --> 00:04:43,840
that is meant to really connect all the

00:04:42,400 --> 00:04:45,600
the disparate system

00:04:43,840 --> 00:04:47,600
and and they have to hand over for

00:04:45,600 --> 00:04:49,520
instance to really take us through

00:04:47,600 --> 00:04:51,520
the experience that we have with me

00:04:49,520 --> 00:04:53,919
force integrated into finrac

00:04:51,520 --> 00:04:55,520
as well as mojo loop as a live

00:04:53,919 --> 00:04:58,639
implementation that anybody

00:04:55,520 --> 00:05:00,800
can tap into right now just quickly

00:04:58,639 --> 00:05:02,639
for a quick introduction of me first i

00:05:00,800 --> 00:05:04,479
think much of the audience

00:05:02,639 --> 00:05:06,320
you've already been introduced to this

00:05:04,479 --> 00:05:08,560
really you know the the

00:05:06,320 --> 00:05:09,680
the idea of you know you know open

00:05:08,560 --> 00:05:11,919
source for good

00:05:09,680 --> 00:05:14,320
is much more kind of like a prevalence

00:05:11,919 --> 00:05:15,840
today and memphis has really positioned

00:05:14,320 --> 00:05:17,600
itself you know from the beginning at

00:05:15,840 --> 00:05:19,840
the center of much of

00:05:17,600 --> 00:05:21,360
what activities is happening and at this

00:05:19,840 --> 00:05:23,680
point in time i would say

00:05:21,360 --> 00:05:25,520
if you look at the finance community if

00:05:23,680 --> 00:05:26,960
you look at the major loop community and

00:05:25,520 --> 00:05:29,600
more other communities

00:05:26,960 --> 00:05:30,639
we're slowly collapsing and we're slowly

00:05:29,600 --> 00:05:33,680
looking at

00:05:30,639 --> 00:05:34,720
common use cases and that is really what

00:05:33,680 --> 00:05:38,240
has been driving

00:05:34,720 --> 00:05:40,240
the mufos openness dna wherein

00:05:38,240 --> 00:05:42,160
we want to touch base with anything else

00:05:40,240 --> 00:05:43,520
that is expecting outside our space

00:05:42,160 --> 00:05:46,160
and we want to make sure that we are

00:05:43,520 --> 00:05:48,720
focused on the the key use cases

00:05:46,160 --> 00:05:50,880
that can really really advance financial

00:05:48,720 --> 00:05:52,639
inclusion

00:05:50,880 --> 00:05:53,919
going a little bit in terms of the the

00:05:52,639 --> 00:05:55,280
end-to-end stack and

00:05:53,919 --> 00:05:57,039
you know you might have seen this you

00:05:55,280 --> 00:06:00,080
know from a different view

00:05:57,039 --> 00:06:02,240
but this has actually evolved from you

00:06:00,080 --> 00:06:03,840
know just focusing on the account base

00:06:02,240 --> 00:06:06,880
from the first perspective

00:06:03,840 --> 00:06:09,120
to to really be the clue between

00:06:06,880 --> 00:06:10,160
what we see as the the rules and the

00:06:09,120 --> 00:06:12,080
rails well

00:06:10,160 --> 00:06:14,560
which is where the real-time payment

00:06:12,080 --> 00:06:15,120
sits as well as the accounts and the up

00:06:14,560 --> 00:06:17,280
world

00:06:15,120 --> 00:06:18,800
and memphis is really strongly

00:06:17,280 --> 00:06:21,440
positioned itself

00:06:18,800 --> 00:06:22,240
as a kind of like a glue between all the

00:06:21,440 --> 00:06:24,240
components

00:06:22,240 --> 00:06:25,360
but very very important we're not

00:06:24,240 --> 00:06:28,720
leaving you know

00:06:25,360 --> 00:06:31,120
you know very specific to any specific

00:06:28,720 --> 00:06:32,479
solutions or technology we're just using

00:06:31,120 --> 00:06:36,080
in this instance

00:06:32,479 --> 00:06:38,400
mojo loop real-time payment system

00:06:36,080 --> 00:06:39,280
example and as well as on the app we've

00:06:38,400 --> 00:06:42,240
got kind of like

00:06:39,280 --> 00:06:43,360
open flexible apis that really can

00:06:42,240 --> 00:06:45,120
expand into

00:06:43,360 --> 00:06:47,840
either the app that you adopt in our

00:06:45,120 --> 00:06:48,319
stack or any other app in that world so

00:06:47,840 --> 00:06:50,880
what

00:06:48,319 --> 00:06:51,360
really this ecosystem does is bringing

00:06:50,880 --> 00:06:54,000
in

00:06:51,360 --> 00:06:54,479
very slowly the clue that is needed

00:06:54,000 --> 00:06:57,039
amongst

00:06:54,479 --> 00:06:58,560
all the different disparate projects

00:06:57,039 --> 00:07:02,160
that we've been talking about

00:06:58,560 --> 00:07:04,400
in the open source digital landscape

00:07:02,160 --> 00:07:05,440
a little bit forward just to very

00:07:04,400 --> 00:07:09,120
specific to

00:07:05,440 --> 00:07:11,599
to try and you know give a very basic

00:07:09,120 --> 00:07:13,120
kind of like definition of this you know

00:07:11,599 --> 00:07:15,680
the the clearest part

00:07:13,120 --> 00:07:17,680
of this is when we talk about real-time

00:07:15,680 --> 00:07:20,639
payments from a service perspective from

00:07:17,680 --> 00:07:21,599
what the end user feels it will be

00:07:20,639 --> 00:07:24,240
something that

00:07:21,599 --> 00:07:25,840
will look like cash wedding if you give

00:07:24,240 --> 00:07:27,199
it to somebody if you send it today it

00:07:25,840 --> 00:07:29,840
gets received today

00:07:27,199 --> 00:07:31,280
it gets cleared immediately and it goes

00:07:29,840 --> 00:07:34,319
even beyond

00:07:31,280 --> 00:07:36,080
the the the parameters where case

00:07:34,319 --> 00:07:36,800
doesn't go away and it supports various

00:07:36,080 --> 00:07:39,440
model

00:07:36,800 --> 00:07:39,919
and you can send this payment via this

00:07:39,440 --> 00:07:42,880
channel

00:07:39,919 --> 00:07:43,520
and a quick example of what will that

00:07:42,880 --> 00:07:46,080
look like

00:07:43,520 --> 00:07:48,400
and then why should we we look at this

00:07:46,080 --> 00:07:51,039
as a service to the end users really

00:07:48,400 --> 00:07:51,919
to you know better the ecosystem that

00:07:51,039 --> 00:07:54,400
the current

00:07:51,919 --> 00:07:56,080
cache ecosystem has limitation that you

00:07:54,400 --> 00:07:57,360
can only send it within certain

00:07:56,080 --> 00:07:59,840
geographic boundaries

00:07:57,360 --> 00:08:00,560
and you can only send it in one model

00:07:59,840 --> 00:08:03,039
with

00:08:00,560 --> 00:08:04,400
real-time digital payment service will

00:08:03,039 --> 00:08:06,639
be able to send

00:08:04,400 --> 00:08:07,759
you know near real time and then and

00:08:06,639 --> 00:08:10,160
there's a lot of

00:08:07,759 --> 00:08:12,000
definition of what that is means and in

00:08:10,160 --> 00:08:13,759
most cases you know israel and i were

00:08:12,000 --> 00:08:16,400
talking about it and saying

00:08:13,759 --> 00:08:18,319
what we mean by real-time clearing and

00:08:16,400 --> 00:08:20,000
in most competitive market we can say

00:08:18,319 --> 00:08:22,240
the highest we can think of

00:08:20,000 --> 00:08:23,440
it is about 30 seconds it has to be less

00:08:22,240 --> 00:08:26,160
than 30 seconds

00:08:23,440 --> 00:08:27,280
certain countries are even defining it

00:08:26,160 --> 00:08:29,520
to the point that

00:08:27,280 --> 00:08:30,800
it has to happen within couple of

00:08:29,520 --> 00:08:33,200
seconds five seconds

00:08:30,800 --> 00:08:34,399
but for the mobile money platform which

00:08:33,200 --> 00:08:36,560
is one of the

00:08:34,399 --> 00:08:38,479
the biggest example of real-time you

00:08:36,560 --> 00:08:40,080
know service it that happened within

00:08:38,479 --> 00:08:41,760
some seconds just depending on the

00:08:40,080 --> 00:08:44,560
network details and everything else

00:08:41,760 --> 00:08:45,760
and with this type of a setup we're able

00:08:44,560 --> 00:08:48,160
to enable

00:08:45,760 --> 00:08:49,600
you know people to send money to their

00:08:48,160 --> 00:08:52,480
children for studies

00:08:49,600 --> 00:08:54,880
or to pay for formations or bills or

00:08:52,480 --> 00:08:57,760
even to to go to the doctor waiting

00:08:54,880 --> 00:08:59,920
you need an intervention now and if you

00:08:57,760 --> 00:09:01,680
go to a service provider and you still

00:08:59,920 --> 00:09:03,440
need to tell him that the money is still

00:09:01,680 --> 00:09:05,120
hooked up somewhere in the card network

00:09:03,440 --> 00:09:07,440
you'll come later on you will not be

00:09:05,120 --> 00:09:09,279
able to receive service so this is how

00:09:07,440 --> 00:09:11,680
really the real-time payments are

00:09:09,279 --> 00:09:12,720
connected to improving the lives of

00:09:11,680 --> 00:09:15,200
society

00:09:12,720 --> 00:09:16,160
and in really solving you know the

00:09:15,200 --> 00:09:19,440
problem financial

00:09:16,160 --> 00:09:20,880
inclusion at its roots and going a

00:09:19,440 --> 00:09:23,279
little bit in terms of

00:09:20,880 --> 00:09:25,279
you know what what are what are this

00:09:23,279 --> 00:09:26,720
ecosystem built off so what i've done

00:09:25,279 --> 00:09:29,680
here is really to

00:09:26,720 --> 00:09:31,360
to show you the the infrastructure

00:09:29,680 --> 00:09:33,680
element and the rail element

00:09:31,360 --> 00:09:35,200
and as well as the consumable element

00:09:33,680 --> 00:09:37,360
that is facing the users

00:09:35,200 --> 00:09:38,240
and and typically this is the stack that

00:09:37,360 --> 00:09:41,040
we we

00:09:38,240 --> 00:09:42,080
actually took from a financial services

00:09:41,040 --> 00:09:44,880
for the poor

00:09:42,080 --> 00:09:46,959
wherein they define it in two areas

00:09:44,880 --> 00:09:49,360
which are really distinctly

00:09:46,959 --> 00:09:50,800
categorized as the the infrastructure

00:09:49,360 --> 00:09:52,399
slash rule area

00:09:50,800 --> 00:09:54,240
which is made predominantly the

00:09:52,399 --> 00:09:56,480
collaboration space across

00:09:54,240 --> 00:09:59,120
you know various entities as well as the

00:09:56,480 --> 00:10:01,600
competition space which is really where

00:09:59,120 --> 00:10:02,880
most kind of like a commercial entities

00:10:01,600 --> 00:10:05,200
commercial interests

00:10:02,880 --> 00:10:06,000
will jump in and provide the services

00:10:05,200 --> 00:10:08,160
and also

00:10:06,000 --> 00:10:10,720
in terms of what we have seen in the

00:10:08,160 --> 00:10:13,839
market you know the frontiers of

00:10:10,720 --> 00:10:15,600
of the the upspace and the account space

00:10:13,839 --> 00:10:16,399
has been predominantly mobile mining

00:10:15,600 --> 00:10:18,800
operators

00:10:16,399 --> 00:10:19,680
who have actually done very well in

00:10:18,800 --> 00:10:23,200
making sure that

00:10:19,680 --> 00:10:25,440
within their own ecosystem they provide

00:10:23,200 --> 00:10:27,200
the service as real time as possible

00:10:25,440 --> 00:10:28,399
across all the different services they

00:10:27,200 --> 00:10:30,640
offer whether it be

00:10:28,399 --> 00:10:32,560
mission payments percent of percent you

00:10:30,640 --> 00:10:35,600
know you know transfer they've done

00:10:32,560 --> 00:10:37,680
very well in really being consistent and

00:10:35,600 --> 00:10:39,680
also with the help of gsma

00:10:37,680 --> 00:10:41,600
is helping that space to really be

00:10:39,680 --> 00:10:44,000
driven on common standards

00:10:41,600 --> 00:10:45,120
that can be you know adhered by all and

00:10:44,000 --> 00:10:48,000
also

00:10:45,120 --> 00:10:49,600
on the swiss side which is really you

00:10:48,000 --> 00:10:51,120
know the engine room where

00:10:49,600 --> 00:10:53,120
money is actually being moved from one

00:10:51,120 --> 00:10:55,440
party to another this is where the

00:10:53,120 --> 00:10:57,600
supplement happens you know after

00:10:55,440 --> 00:10:58,880
a day or two after the clearing has

00:10:57,600 --> 00:11:00,880
happened on the top layer

00:10:58,880 --> 00:11:02,480
this is where you know eastman has

00:11:00,880 --> 00:11:03,440
mentioned from his experience with

00:11:02,480 --> 00:11:05,519
faster payment

00:11:03,440 --> 00:11:07,040
and as well as i was part of the the

00:11:05,519 --> 00:11:09,680
moai kind of like

00:11:07,040 --> 00:11:10,320
implementation so this is really where

00:11:09,680 --> 00:11:12,640
you know

00:11:10,320 --> 00:11:14,720
much of the intervention for mojo loop

00:11:12,640 --> 00:11:16,399
sits and a whole lot of other

00:11:14,720 --> 00:11:18,480
kind of like commercial players in the

00:11:16,399 --> 00:11:20,000
real time you know processing space

00:11:18,480 --> 00:11:20,399
there's a processing space and then

00:11:20,000 --> 00:11:22,640
they're

00:11:20,399 --> 00:11:25,040
in the consumable space in terms of the

00:11:22,640 --> 00:11:27,519
layout

00:11:25,040 --> 00:11:28,320
just moving to one step in terms of just

00:11:27,519 --> 00:11:29,920
trying to

00:11:28,320 --> 00:11:31,360
you know i could get this for the sake

00:11:29,920 --> 00:11:34,640
of time i was just trying to put this

00:11:31,360 --> 00:11:36,240
in one slide and and and at very high

00:11:34,640 --> 00:11:38,800
level and aggregate

00:11:36,240 --> 00:11:40,160
what is really needed as the key

00:11:38,800 --> 00:11:43,040
challenges for us to

00:11:40,160 --> 00:11:44,399
confront as you know money you know

00:11:43,040 --> 00:11:46,800
movement through cash

00:11:44,399 --> 00:11:48,560
has been with us for over over decades

00:11:46,800 --> 00:11:51,360
you know he started you know in

00:11:48,560 --> 00:11:53,200
in 1664 with the bank of england when

00:11:51,360 --> 00:11:56,320
the first bank service was introduced

00:11:53,200 --> 00:11:57,440
and today is still you know part of over

00:11:56,320 --> 00:12:00,160
00:11:57,440 --> 00:12:01,040
of the cash movement in most developing

00:12:00,160 --> 00:12:03,760
countries

00:12:01,040 --> 00:12:05,440
and and really here is what people are

00:12:03,760 --> 00:12:07,839
used to so when you talk about

00:12:05,440 --> 00:12:08,959
a case as a service this is really what

00:12:07,839 --> 00:12:10,880
people are used to

00:12:08,959 --> 00:12:12,160
it is it is really immediate to them

00:12:10,880 --> 00:12:14,480
it's irrevocable

00:12:12,160 --> 00:12:16,000
and very important it is you know

00:12:14,480 --> 00:12:17,839
accessible to all

00:12:16,000 --> 00:12:19,440
everybody can have case and no rules

00:12:17,839 --> 00:12:21,680
around that and also

00:12:19,440 --> 00:12:22,880
from a kind of like a acceptability of

00:12:21,680 --> 00:12:25,279
payment it is

00:12:22,880 --> 00:12:27,120
accepted by all so that is actually a

00:12:25,279 --> 00:12:29,680
base foundation

00:12:27,120 --> 00:12:30,560
which a real-time payment service needs

00:12:29,680 --> 00:12:34,320
to address so

00:12:30,560 --> 00:12:36,720
if we equate cash on those four elements

00:12:34,320 --> 00:12:37,760
then we've got the the right you know

00:12:36,720 --> 00:12:41,279
starting point

00:12:37,760 --> 00:12:43,360
to be able to go and then slowly reduce

00:12:41,279 --> 00:12:44,959
you know the reliance on cash with

00:12:43,360 --> 00:12:48,160
real-time digital payments

00:12:44,959 --> 00:12:50,000
and going further it will be to look at

00:12:48,160 --> 00:12:51,600
the opportunities and the opportunities

00:12:50,000 --> 00:12:52,480
that digital payments brings in to

00:12:51,600 --> 00:12:55,600
really

00:12:52,480 --> 00:12:58,000
negate all the short forms of case

00:12:55,600 --> 00:12:58,720
you know from security you know fraud

00:12:58,000 --> 00:13:01,360
and corruption

00:12:58,720 --> 00:13:02,079
in the sense that there's no kind of

00:13:01,360 --> 00:13:05,040
like a

00:13:02,079 --> 00:13:05,519
you know level of knowing who's moving

00:13:05,040 --> 00:13:08,079
trees

00:13:05,519 --> 00:13:09,200
there is kind of like a large degree of

00:13:08,079 --> 00:13:10,560
anonymity

00:13:09,200 --> 00:13:12,639
in the case space and as well as

00:13:10,560 --> 00:13:14,480
transparency and accountability

00:13:12,639 --> 00:13:16,560
you know in terms of the usage of funds

00:13:14,480 --> 00:13:19,279
especially from public entities

00:13:16,560 --> 00:13:20,160
and from a central bank perspective and

00:13:19,279 --> 00:13:21,600
as well as from

00:13:20,160 --> 00:13:23,839
you know financial accounting

00:13:21,600 --> 00:13:24,399
perspective there's very little we could

00:13:23,839 --> 00:13:26,800
do

00:13:24,399 --> 00:13:28,880
to have a view of the cash moving so the

00:13:26,800 --> 00:13:29,839
amount of time it takes to do financial

00:13:28,880 --> 00:13:31,680
reporting

00:13:29,839 --> 00:13:33,440
on the cash flows it takes you know

00:13:31,680 --> 00:13:34,240
month and month for central bank to

00:13:33,440 --> 00:13:37,279
aggregate that

00:13:34,240 --> 00:13:40,160
so those are the the real benefits that

00:13:37,279 --> 00:13:41,279
we will derive from negating the

00:13:40,160 --> 00:13:43,360
shortcoming of guests

00:13:41,279 --> 00:13:45,360
and and different stakeholders have

00:13:43,360 --> 00:13:49,120
different interests in all those

00:13:45,360 --> 00:13:50,800
and moving beyond just resolving those

00:13:49,120 --> 00:13:53,199
is really to bring in

00:13:50,800 --> 00:13:54,240
an innovation you know powered by the

00:13:53,199 --> 00:13:56,639
digital

00:13:54,240 --> 00:13:58,639
you know means that we're using so if we

00:13:56,639 --> 00:14:00,800
look at user experience

00:13:58,639 --> 00:14:02,800
you know through the apps and the ussd

00:14:00,800 --> 00:14:05,120
channel from a mobile money perspective

00:14:02,800 --> 00:14:06,240
really that is actually a space for us

00:14:05,120 --> 00:14:09,040
to accelerate

00:14:06,240 --> 00:14:09,440
and actually buy more acceptance from

00:14:09,040 --> 00:14:11,519
the

00:14:09,440 --> 00:14:12,720
from the users of the of the real-time

00:14:11,519 --> 00:14:16,000
system so yeah

00:14:12,720 --> 00:14:18,639
also you know addressing a question

00:14:16,000 --> 00:14:19,680
of inclusiveness of the ecosystem this

00:14:18,639 --> 00:14:21,519
is really

00:14:19,680 --> 00:14:23,760
a real game change and a cornerstone

00:14:21,519 --> 00:14:25,680
because as long as you are you playing

00:14:23,760 --> 00:14:27,440
in the digital financial services space

00:14:25,680 --> 00:14:30,160
you can play a part as part of the

00:14:27,440 --> 00:14:32,399
ecosystem members and even beyond a

00:14:30,160 --> 00:14:34,480
local boundaries which is a

00:14:32,399 --> 00:14:37,600
country-specific solution

00:14:34,480 --> 00:14:38,079
now we can safely say we will be able to

00:14:37,600 --> 00:14:41,279
build

00:14:38,079 --> 00:14:43,760
this network of real-time payment system

00:14:41,279 --> 00:14:44,800
beyond one border so we can have you

00:14:43,760 --> 00:14:46,639
know two

00:14:44,800 --> 00:14:48,079
you know you know you know regional

00:14:46,639 --> 00:14:50,800
banks talking together

00:14:48,079 --> 00:14:52,560
and in case of africa where regional

00:14:50,800 --> 00:14:53,519
banks are shared based on the same

00:14:52,560 --> 00:14:56,560
currency

00:14:53,519 --> 00:14:58,320
this really can be a real game changer

00:14:56,560 --> 00:14:59,680
on a very very large space and in some

00:14:58,320 --> 00:15:02,079
of the research that we have seen

00:14:59,680 --> 00:15:03,519
is the fact that should we move away

00:15:02,079 --> 00:15:05,360
from a cache model

00:15:03,519 --> 00:15:07,360
you know there will be much more

00:15:05,360 --> 00:15:10,000
improvement from a gdp perspective

00:15:07,360 --> 00:15:10,720
i mean this is quite you know you know

00:15:10,000 --> 00:15:12,560
you know

00:15:10,720 --> 00:15:14,959
thoughtful for emerging countries to

00:15:12,560 --> 00:15:17,120
actually all gain up to three percent

00:15:14,959 --> 00:15:18,240
of the gdp cross just from moving from a

00:15:17,120 --> 00:15:20,800
cash-based society

00:15:18,240 --> 00:15:22,000
so really the challenges are solvable

00:15:20,800 --> 00:15:22,959
there's nothing on the challenge that

00:15:22,000 --> 00:15:25,600
you can solve

00:15:22,959 --> 00:15:26,560
it is just the the models that we put

00:15:25,600 --> 00:15:28,240
together

00:15:26,560 --> 00:15:30,160
and the stakeholder engagement that we

00:15:28,240 --> 00:15:32,320
need to do to resolve those challenges

00:15:30,160 --> 00:15:33,680
and move forward and fast forwarding and

00:15:32,320 --> 00:15:35,920
create a more

00:15:33,680 --> 00:15:37,680
openness society to be able to solve

00:15:35,920 --> 00:15:41,040
this thing together

00:15:37,680 --> 00:15:42,880
just to quickly move on to what i've

00:15:41,040 --> 00:15:45,360
picked up as the trends in the space

00:15:42,880 --> 00:15:47,759
really this is actually kick-started in

00:15:45,360 --> 00:15:50,800
the mid 2014 2015

00:15:47,759 --> 00:15:52,880
and to date as you can see the the map

00:15:50,800 --> 00:15:54,639
that they've been lots of initiative

00:15:52,880 --> 00:15:55,519
from central bank and commercial

00:15:54,639 --> 00:15:57,759
entities

00:15:55,519 --> 00:15:59,279
around building the backbone of the

00:15:57,759 --> 00:16:02,079
system building

00:15:59,279 --> 00:16:03,279
a real-time you know payment you know

00:16:02,079 --> 00:16:05,360
backbone network

00:16:03,279 --> 00:16:06,560
infrastructure getting the rules in

00:16:05,360 --> 00:16:09,360
place and the scheme

00:16:06,560 --> 00:16:11,040
so that you know more players can come

00:16:09,360 --> 00:16:12,800
on top be it banks

00:16:11,040 --> 00:16:15,120
you know non-banks as well a third party

00:16:12,800 --> 00:16:18,160
payment providers can come on top

00:16:15,120 --> 00:16:19,360
and really accelerate the penetration of

00:16:18,160 --> 00:16:21,839
this real-time payments

00:16:19,360 --> 00:16:22,639
and india is actually one of the the

00:16:21,839 --> 00:16:26,240
example

00:16:22,639 --> 00:16:28,639
where in today's they're doing over 1.6

00:16:26,240 --> 00:16:29,839
billion transaction per month which is

00:16:28,639 --> 00:16:31,839
which is one of the most

00:16:29,839 --> 00:16:33,440
kind of like use and part of those

00:16:31,839 --> 00:16:35,920
transactions is really

00:16:33,440 --> 00:16:36,800
you know harnessing and also hovering

00:16:35,920 --> 00:16:39,759
over the

00:16:36,800 --> 00:16:41,920
the cut network they take from largely

00:16:39,759 --> 00:16:42,720
bangs and cut network and they bring it

00:16:41,920 --> 00:16:44,639
into

00:16:42,720 --> 00:16:46,959
this ecosystem that they've built which

00:16:44,639 --> 00:16:47,759
is actually very very successful model

00:16:46,959 --> 00:16:49,680
that anybody

00:16:47,759 --> 00:16:51,440
any country in the world can really you

00:16:49,680 --> 00:16:52,800
know take from and in terms of the

00:16:51,440 --> 00:16:54,880
countries that are doing this

00:16:52,800 --> 00:16:56,000
we're looking at about 70 countries they

00:16:54,880 --> 00:16:58,480
have it live

00:16:56,000 --> 00:17:00,000
and in the next two years we've got 40

00:16:58,480 --> 00:17:04,319
more in the planning space

00:17:00,000 --> 00:17:05,760
across the globe in time quickly

00:17:04,319 --> 00:17:08,079
switching over to

00:17:05,760 --> 00:17:08,880
yes we've seen the the global market

00:17:08,079 --> 00:17:10,880
trends you know

00:17:08,880 --> 00:17:13,520
what people are doing all over but we're

00:17:10,880 --> 00:17:15,439
looking at at this point in time

00:17:13,520 --> 00:17:16,559
what are the accelerators of this and

00:17:15,439 --> 00:17:18,400
one of the

00:17:16,559 --> 00:17:20,240
the biggest accelerators of this is

00:17:18,400 --> 00:17:22,079
really an initiative that is

00:17:20,240 --> 00:17:23,919
being led by the billion millions

00:17:22,079 --> 00:17:26,079
foundation wherein

00:17:23,919 --> 00:17:28,400
they're looking at what are the

00:17:26,079 --> 00:17:28,960
extraordinary intervention to ensure

00:17:28,400 --> 00:17:31,280
that

00:17:28,960 --> 00:17:32,240
you know the population at large

00:17:31,280 --> 00:17:34,480
especially

00:17:32,240 --> 00:17:35,919
in impoverished countries can have a

00:17:34,480 --> 00:17:38,320
very fair access

00:17:35,919 --> 00:17:39,440
to digital financial means and in india

00:17:38,320 --> 00:17:42,559
is really

00:17:39,440 --> 00:17:45,280
a set of rules and guiding principles

00:17:42,559 --> 00:17:46,240
for anybody to build kind of like an

00:17:45,280 --> 00:17:49,039
interoperable

00:17:46,240 --> 00:17:50,320
national payment system and much of this

00:17:49,039 --> 00:17:53,039
is really done

00:17:50,320 --> 00:17:54,400
through an extensive research so a lot

00:17:53,039 --> 00:17:57,520
has been done in the past

00:17:54,400 --> 00:18:00,400
so that you know success was actually

00:17:57,520 --> 00:18:00,799
incorporated into this principles to say

00:18:00,400 --> 00:18:04,559
if

00:18:00,799 --> 00:18:06,480
anybody be it a national central bank

00:18:04,559 --> 00:18:08,640
be it kind of like a regional central

00:18:06,480 --> 00:18:10,960
bank or any financial institution

00:18:08,640 --> 00:18:12,480
with interest of creating an

00:18:10,960 --> 00:18:14,480
interoperable society

00:18:12,480 --> 00:18:16,559
these are really the base building block

00:18:14,480 --> 00:18:19,679
that anybody can really reference

00:18:16,559 --> 00:18:22,080
and what what this really are made of

00:18:19,679 --> 00:18:23,919
is this couple of principles that have

00:18:22,080 --> 00:18:26,000
been kind of like you know designed

00:18:23,919 --> 00:18:28,799
across all different areas from

00:18:26,000 --> 00:18:29,360
how do you go and create a scheme rule

00:18:28,799 --> 00:18:31,280
from the

00:18:29,360 --> 00:18:33,280
the fraud and risk management you know

00:18:31,280 --> 00:18:35,120
mechanism you put into the design part

00:18:33,280 --> 00:18:37,600
but i just wanted to take

00:18:35,120 --> 00:18:38,559
what i believe is the four key ones that

00:18:37,600 --> 00:18:40,480
are really

00:18:38,559 --> 00:18:43,520
the the level one principle is

00:18:40,480 --> 00:18:45,840
advocating from an open loop perspective

00:18:43,520 --> 00:18:48,000
which is really very very very very cool

00:18:45,840 --> 00:18:50,799
because in the past we had

00:18:48,000 --> 00:18:53,039
you know various financial services

00:18:50,799 --> 00:18:55,280
being categorized differently so

00:18:53,039 --> 00:18:56,160
with this system is really to create an

00:18:55,280 --> 00:18:58,480
openness

00:18:56,160 --> 00:18:59,760
whether is it licensed banks you know

00:18:58,480 --> 00:19:02,080
non-licensed banks

00:18:59,760 --> 00:19:04,000
and everybody else that is participating

00:19:02,080 --> 00:19:06,960
in a country or a regional level

00:19:04,000 --> 00:19:08,240
can participate in this one you know

00:19:06,960 --> 00:19:11,039
open loop system

00:19:08,240 --> 00:19:11,919
and and second is really to promote the

00:19:11,039 --> 00:19:14,480
push-only

00:19:11,919 --> 00:19:15,120
real-time payments so that we can do

00:19:14,480 --> 00:19:18,559
this thing

00:19:15,120 --> 00:19:20,960
as risk-free as as possible and also at

00:19:18,559 --> 00:19:22,000
the best available cost so that we avoid

00:19:20,960 --> 00:19:24,480
having to have

00:19:22,000 --> 00:19:26,559
you know batches of bulk payments

00:19:24,480 --> 00:19:27,440
processing dining at night at central

00:19:26,559 --> 00:19:29,679
banks and so on

00:19:27,440 --> 00:19:31,360
and very important and connected to to

00:19:29,679 --> 00:19:33,760
the push payment mechanism

00:19:31,360 --> 00:19:34,640
is really just to make it same day

00:19:33,760 --> 00:19:38,080
settlement

00:19:34,640 --> 00:19:40,240
make it irrevocable as possible

00:19:38,080 --> 00:19:42,400
so that it can actually be easier to run

00:19:40,240 --> 00:19:45,919
and then very important and lastly

00:19:42,400 --> 00:19:48,799
is really the rules around that you know

00:19:45,919 --> 00:19:50,799
the fact that everybody has a fair share

00:19:48,799 --> 00:19:52,799
in terms of contributing to

00:19:50,799 --> 00:19:54,720
the rules that govern the scheme which

00:19:52,799 --> 00:19:55,679
is actually has the blessing of most of

00:19:54,720 --> 00:19:57,919
the same sobbing

00:19:55,679 --> 00:19:59,840
and because this is really being put in

00:19:57,919 --> 00:20:01,919
front of everybody to look at

00:19:59,840 --> 00:20:03,520
there is a reasonable degree of

00:20:01,919 --> 00:20:05,600
acceptance that we have witnessed

00:20:03,520 --> 00:20:07,280
with lots of engagement that james and

00:20:05,600 --> 00:20:09,120
the team at

00:20:07,280 --> 00:20:10,720
financial services for the poor has been

00:20:09,120 --> 00:20:13,840
doing around us so

00:20:10,720 --> 00:20:16,000
in closing there are additional

00:20:13,840 --> 00:20:16,960
kind of like design principles that have

00:20:16,000 --> 00:20:18,799
been put in there

00:20:16,960 --> 00:20:20,159
but all in all they work together to

00:20:18,799 --> 00:20:22,400
make sure that you know

00:20:20,159 --> 00:20:23,919
real-time payments integrability to the

00:20:22,400 --> 00:20:26,880
robot systems

00:20:23,919 --> 00:20:27,760
are really available and affordable to

00:20:26,880 --> 00:20:31,440
serve the needs

00:20:27,760 --> 00:20:34,080
and also in terms of the the use cases

00:20:31,440 --> 00:20:35,360
there's a couple of key use cases that

00:20:34,080 --> 00:20:37,840
has been fast-tracked

00:20:35,360 --> 00:20:39,520
in many of the engagement that we do and

00:20:37,840 --> 00:20:40,080
as you can see one of the biggest use

00:20:39,520 --> 00:20:41,280
case

00:20:40,080 --> 00:20:44,720
connected to the mobile money

00:20:41,280 --> 00:20:48,559
perspective will be the p2p use cases

00:20:44,720 --> 00:20:50,880
ed you're saying something sorry

00:20:48,559 --> 00:20:51,919
okay let me just quickly move on so in

00:20:50,880 --> 00:20:54,640
in terms of

00:20:51,919 --> 00:20:56,320
where these principles have been applied

00:20:54,640 --> 00:20:57,039
and this will be one of my last two

00:20:56,320 --> 00:20:59,919
slides just

00:20:57,039 --> 00:21:00,799
before i move over to easement to really

00:20:59,919 --> 00:21:02,720
showcase

00:21:00,799 --> 00:21:05,120
you know from a from a payment

00:21:02,720 --> 00:21:08,080
perspective moralia is being

00:21:05,120 --> 00:21:08,799
one of the the flagship and the the

00:21:08,080 --> 00:21:10,720
blueprint

00:21:08,799 --> 00:21:12,640
implementation of this level one

00:21:10,720 --> 00:21:13,440
principle from an interability

00:21:12,640 --> 00:21:16,559
perspective

00:21:13,440 --> 00:21:19,440
and also looking at how best can

00:21:16,559 --> 00:21:21,600
this been done how how cheap can this be

00:21:19,440 --> 00:21:23,280
by providing it as an open source

00:21:21,600 --> 00:21:26,080
solutions for us to participate

00:21:23,280 --> 00:21:27,760
more only as a concept we really build

00:21:26,080 --> 00:21:28,559
the building blocks that people will

00:21:27,760 --> 00:21:30,400
adopt

00:21:28,559 --> 00:21:31,760
we don't create it as a service so it

00:21:30,400 --> 00:21:34,080
will be up to

00:21:31,760 --> 00:21:35,840
the individual central banks and as well

00:21:34,080 --> 00:21:38,799
as the fintech to adopt this

00:21:35,840 --> 00:21:39,520
as a free er for good open source

00:21:38,799 --> 00:21:41,520
software

00:21:39,520 --> 00:21:44,240
and run it on whatever scheme they can

00:21:41,520 --> 00:21:46,320
do so compare with the world of the past

00:21:44,240 --> 00:21:47,520
this will actually you know be a game

00:21:46,320 --> 00:21:50,080
changer in the fact that

00:21:47,520 --> 00:21:51,200
we will be moving from systems that are

00:21:50,080 --> 00:21:53,200
not interable

00:21:51,200 --> 00:21:55,120
systems that were bilateral that takes

00:21:53,200 --> 00:21:57,120
time to to really set up

00:21:55,120 --> 00:21:58,480
and rules that are actually meant for

00:21:57,120 --> 00:22:01,440
two or three parties

00:21:58,480 --> 00:22:02,240
to a really well inclusive interability

00:22:01,440 --> 00:22:05,039
switch

00:22:02,240 --> 00:22:05,600
and in terms of what we have actually

00:22:05,039 --> 00:22:07,600
done

00:22:05,600 --> 00:22:08,720
to date you know in terms of the

00:22:07,600 --> 00:22:10,880
functions that

00:22:08,720 --> 00:22:12,400
are supported this is really kind of

00:22:10,880 --> 00:22:15,280
like at a high level

00:22:12,400 --> 00:22:16,240
the the water has been built but a lot

00:22:15,280 --> 00:22:18,559
has really

00:22:16,240 --> 00:22:20,400
been pushed into what actually is

00:22:18,559 --> 00:22:21,200
connected to an interability switch so

00:22:20,400 --> 00:22:23,200
we've got

00:22:21,200 --> 00:22:24,240
the main part of it is really p2p

00:22:23,200 --> 00:22:26,960
transfer

00:22:24,240 --> 00:22:27,600
and as well as the the pay initiative

00:22:26,960 --> 00:22:29,360
initiative

00:22:27,600 --> 00:22:30,960
so much of this is in the production

00:22:29,360 --> 00:22:33,120
ready stage and

00:22:30,960 --> 00:22:35,440
and a little bit israel is still in a

00:22:33,120 --> 00:22:38,559
kind of like a developed stage

00:22:35,440 --> 00:22:41,120
as well as kind of like a testing phase

00:22:38,559 --> 00:22:41,840
so just at a high level architectural

00:22:41,120 --> 00:22:43,840
view

00:22:41,840 --> 00:22:45,760
this is really based on the the the

00:22:43,840 --> 00:22:49,440
initial p2p transfer

00:22:45,760 --> 00:22:51,840
you know using a mobile money native api

00:22:49,440 --> 00:22:53,520
as a start and as well as a scheme

00:22:51,840 --> 00:22:56,080
adapter which is an sdk

00:22:53,520 --> 00:22:57,520
just to really adopt you know make sure

00:22:56,080 --> 00:22:59,840
that it's actually adopted

00:22:57,520 --> 00:23:02,080
much more easier for mobile money

00:22:59,840 --> 00:23:04,159
providers that can really support the

00:23:02,080 --> 00:23:06,400
the parking native api this has really

00:23:04,159 --> 00:23:08,320
been running at muali as is

00:23:06,400 --> 00:23:10,240
and more and more services have been

00:23:08,320 --> 00:23:10,559
added to to this overall architecture

00:23:10,240 --> 00:23:13,679
but

00:23:10,559 --> 00:23:15,919
at the core of this is really an

00:23:13,679 --> 00:23:17,919
intellectual protocol that sits in the

00:23:15,919 --> 00:23:20,400
hub this is really where

00:23:17,919 --> 00:23:22,400
all the the different movements of money

00:23:20,400 --> 00:23:24,480
and the recording get kept and as well

00:23:22,400 --> 00:23:26,400
as you know a supplement and central

00:23:24,480 --> 00:23:28,559
reporting services attached to the

00:23:26,400 --> 00:23:32,000
central ledger

00:23:28,559 --> 00:23:33,280
and in closing and i i just want to make

00:23:32,000 --> 00:23:35,360
sure that you know

00:23:33,280 --> 00:23:36,320
you you'll have a very good basis to

00:23:35,360 --> 00:23:37,679
understand

00:23:36,320 --> 00:23:40,720
you know what we're doing around the

00:23:37,679 --> 00:23:42,960
payment hub so the payment up is really

00:23:40,720 --> 00:23:44,000
an initiative that was done between me

00:23:42,960 --> 00:23:46,640
force and mojo loop

00:23:44,000 --> 00:23:47,440
to really close the gaps and be the clue

00:23:46,640 --> 00:23:49,760
between

00:23:47,440 --> 00:23:51,200
you know the accounts and the apps as

00:23:49,760 --> 00:23:53,440
well as the rails and the apps

00:23:51,200 --> 00:23:54,480
and much of what uh israel will take us

00:23:53,440 --> 00:23:56,960
through is

00:23:54,480 --> 00:23:57,919
to to to show that we've made much more

00:23:56,960 --> 00:23:59,919
progress in this

00:23:57,919 --> 00:24:02,799
we've got it live in the lab and is

00:23:59,919 --> 00:24:05,200
ready for the mephosan funeral community

00:24:02,799 --> 00:24:06,880
to really go in and take advantage of it

00:24:05,200 --> 00:24:10,320
and with that i'll quickly

00:24:06,880 --> 00:24:13,760
you know hand over to you israel

00:24:10,320 --> 00:24:16,080
okay thank you godfrey

00:24:13,760 --> 00:24:17,440
it seems that we both of us like to talk

00:24:16,080 --> 00:24:19,360
a lot so

00:24:17,440 --> 00:24:21,360
we need to be squeezed into the

00:24:19,360 --> 00:24:23,600
available time slot but

00:24:21,360 --> 00:24:24,640
let let me try to go through this

00:24:23,600 --> 00:24:27,760
material

00:24:24,640 --> 00:24:29,840
so you could uh think that the payment

00:24:27,760 --> 00:24:30,640
hub was one bullet point on the list but

00:24:29,840 --> 00:24:34,400
actually i

00:24:30,640 --> 00:24:36,159
breaking it up to a couple of that ones

00:24:34,400 --> 00:24:37,520
so what i'd like to talk about that what

00:24:36,159 --> 00:24:40,320
is this then

00:24:37,520 --> 00:24:42,880
what type of architectural decisions or

00:24:40,320 --> 00:24:45,279
concentrations we have done

00:24:42,880 --> 00:24:47,760
then how to deploy this whole solution

00:24:45,279 --> 00:24:50,159
what processes we already implemented

00:24:47,760 --> 00:24:52,799
and how to extend the whole system

00:24:50,159 --> 00:24:55,120
uh how to utilize it with finrac with

00:24:52,799 --> 00:24:58,320
the multi-tenancy capability

00:24:55,120 --> 00:25:00,000
what additional control centers we built

00:24:58,320 --> 00:25:02,000
as part what laboratory

00:25:00,000 --> 00:25:04,320
environment we have available and a

00:25:02,000 --> 00:25:06,559
couple of ideas on the road maps

00:25:04,320 --> 00:25:08,000
and what documentation and resources are

00:25:06,559 --> 00:25:11,279
available

00:25:08,000 --> 00:25:13,600
and so um

00:25:11,279 --> 00:25:14,480
there is ed of course probably everyone

00:25:13,600 --> 00:25:16,640
knows him

00:25:14,480 --> 00:25:18,000
and there are a couple of us who were

00:25:16,640 --> 00:25:20,080
working on this project

00:25:18,000 --> 00:25:21,520
uh dpc consulting to bring this

00:25:20,080 --> 00:25:25,679
technology together with

00:25:21,520 --> 00:25:26,640
krishnam adam zoltan uh zoltan's i would

00:25:25,679 --> 00:25:30,480
say

00:25:26,640 --> 00:25:31,039
so that's uh we have built this payment

00:25:30,480 --> 00:25:34,720
up

00:25:31,039 --> 00:25:37,760
the concept is kind of

00:25:34,720 --> 00:25:38,799
i could even say straightforward uh what

00:25:37,760 --> 00:25:41,760
you need to do

00:25:38,799 --> 00:25:43,600
to transfer money from a digital

00:25:41,760 --> 00:25:47,279
financial service

00:25:43,600 --> 00:25:48,640
provider a menism that you give an

00:25:47,279 --> 00:25:51,520
instruction

00:25:48,640 --> 00:25:52,000
like one of the channels of the banks

00:25:51,520 --> 00:25:54,960
that

00:25:52,000 --> 00:25:56,640
what you want to do then a system who

00:25:54,960 --> 00:26:00,000
takes this instruction

00:25:56,640 --> 00:26:02,400
and orchestrates this whole process

00:26:00,000 --> 00:26:04,000
obviously you have some kind of account

00:26:02,400 --> 00:26:06,400
management system that the

00:26:04,000 --> 00:26:07,919
accounts are sitting so you need to talk

00:26:06,400 --> 00:26:10,080
with that system

00:26:07,919 --> 00:26:11,760
then potentially you want to check that

00:26:10,080 --> 00:26:13,760
is this affordable and transactions

00:26:11,760 --> 00:26:17,600
before you sending out this

00:26:13,760 --> 00:26:22,000
money and then ultimately you go out to

00:26:17,600 --> 00:26:25,760
one of the payment schemas um

00:26:22,000 --> 00:26:28,320
sorry that you want to talk with um

00:26:25,760 --> 00:26:28,320
and um

00:26:28,799 --> 00:26:33,760
and get the response and like complete

00:26:32,400 --> 00:26:36,559
this transaction

00:26:33,760 --> 00:26:38,400
by actually booking the amount on the

00:26:36,559 --> 00:26:38,880
transaction the whole flow supposed to

00:26:38,400 --> 00:26:42,400
take

00:26:38,880 --> 00:26:43,679
a couple of seconds um being it a

00:26:42,400 --> 00:26:47,679
real-time

00:26:43,679 --> 00:26:50,159
solution what we have done we built this

00:26:47,679 --> 00:26:52,480
tool as a prototype first and now the

00:26:50,159 --> 00:26:54,480
second generation i would say ready for

00:26:52,480 --> 00:26:56,799
the enterprise to be used

00:26:54,480 --> 00:26:59,120
uh technology is what we used it's it's

00:26:56,799 --> 00:27:01,360
on a java stack spring boot

00:26:59,120 --> 00:27:03,200
and a couple of components are used

00:27:01,360 --> 00:27:04,320
probably one of the important ones is

00:27:03,200 --> 00:27:05,520
the cb

00:27:04,320 --> 00:27:07,919
which sits in the middle of this

00:27:05,520 --> 00:27:10,559
solution now how to place this

00:27:07,919 --> 00:27:12,080
payment up into the big picture so the

00:27:10,559 --> 00:27:14,559
big picture that you have

00:27:12,080 --> 00:27:15,600
some for example mojo loop as the

00:27:14,559 --> 00:27:17,760
payment network

00:27:15,600 --> 00:27:19,360
but clearly the idea that there could be

00:27:17,760 --> 00:27:22,559
multiple connectors here

00:27:19,360 --> 00:27:25,840
for different networks and then you

00:27:22,559 --> 00:27:27,440
are the dfsp or the bank or or the one

00:27:25,840 --> 00:27:28,720
who wants to communicate and do

00:27:27,440 --> 00:27:30,480
real-time payments

00:27:28,720 --> 00:27:33,360
you have some kind of channels meaning

00:27:30,480 --> 00:27:36,480
mobile bank atms or other systems

00:27:33,360 --> 00:27:37,840
you have one or more of these account

00:27:36,480 --> 00:27:39,840
management systems

00:27:37,840 --> 00:27:42,080
potentially some fraud monitoring system

00:27:39,840 --> 00:27:44,159
already and then you're supposed to take

00:27:42,080 --> 00:27:47,120
this payment of what we have built

00:27:44,159 --> 00:27:48,559
uh deploy it to your environment you can

00:27:47,120 --> 00:27:50,960
deploy on premises

00:27:48,559 --> 00:27:52,480
you could deploy in the cloud or you

00:27:50,960 --> 00:27:55,440
could have an aggregator

00:27:52,480 --> 00:27:56,240
to have with all of that uh the but the

00:27:55,440 --> 00:27:58,640
idea

00:27:56,240 --> 00:28:00,960
that in a fully blown solution you have

00:27:58,640 --> 00:28:02,080
a couple of engines across multiple data

00:28:00,960 --> 00:28:04,880
centers

00:28:02,080 --> 00:28:06,640
which do the real-time part of the flow

00:28:04,880 --> 00:28:07,520
and all the data is collected to an

00:28:06,640 --> 00:28:10,640
operations

00:28:07,520 --> 00:28:13,440
uh part of the application which is

00:28:10,640 --> 00:28:14,240
the payment operators of the institution

00:28:13,440 --> 00:28:16,880
are

00:28:14,240 --> 00:28:18,720
dealing with and then capable to monitor

00:28:16,880 --> 00:28:21,679
what's going on in the systems

00:28:18,720 --> 00:28:23,600
so that's the this complete solution is

00:28:21,679 --> 00:28:25,600
the payment of enterprise edition

00:28:23,600 --> 00:28:26,640
which has these uh different parts

00:28:25,600 --> 00:28:28,840
inside

00:28:26,640 --> 00:28:30,000
and now what are the different parts

00:28:28,840 --> 00:28:33,120
inside

00:28:30,000 --> 00:28:36,159
the i would say the heart is the zbe

00:28:33,120 --> 00:28:38,000
orchestration engine um which is the

00:28:36,159 --> 00:28:41,919
stateful part of this solution

00:28:38,000 --> 00:28:43,520
orchestrates that how the flows

00:28:41,919 --> 00:28:46,640
communicating with the different

00:28:43,520 --> 00:28:49,520
participants the greenish boxes

00:28:46,640 --> 00:28:51,520
are the connectors or workers who

00:28:49,520 --> 00:28:53,919
communicate with the channels

00:28:51,520 --> 00:28:55,520
with the payment schemas and with the

00:28:53,919 --> 00:28:57,520
account management

00:28:55,520 --> 00:28:59,279
implementations of course you could

00:28:57,520 --> 00:29:01,440
deploy many of these

00:28:59,279 --> 00:29:03,440
components connecting to multiple

00:29:01,440 --> 00:29:04,880
schemas connecting to multiple account

00:29:03,440 --> 00:29:08,480
management systems

00:29:04,880 --> 00:29:09,679
uh what we have built is the mojo loop

00:29:08,480 --> 00:29:12,320
connector

00:29:09,679 --> 00:29:14,480
for the modulo network and the finra

00:29:12,320 --> 00:29:16,159
connector both for one point x and four

00:29:14,480 --> 00:29:19,039
cn

00:29:16,159 --> 00:29:19,840
and this could be extended easily and

00:29:19,039 --> 00:29:22,480
below the

00:29:19,840 --> 00:29:24,640
heart below the real-time engine you

00:29:22,480 --> 00:29:27,200
collect all this information somewhere

00:29:24,640 --> 00:29:29,360
you put it to a kibana kind of solution

00:29:27,200 --> 00:29:31,919
to show what's happening real time

00:29:29,360 --> 00:29:33,600
but you could also and we decided to

00:29:31,919 --> 00:29:36,480
push this to a long-term

00:29:33,600 --> 00:29:38,240
data storage that the operators could

00:29:36,480 --> 00:29:40,720
interact with

00:29:38,240 --> 00:29:41,279
and could take this transactions and

00:29:40,720 --> 00:29:44,399
could

00:29:41,279 --> 00:29:47,600
do certain actions with those uh things

00:29:44,399 --> 00:29:51,760
like refunding a transaction if it was

00:29:47,600 --> 00:29:54,159
uh done by mistake and identified

00:29:51,760 --> 00:29:55,200
through other processes so that's the

00:29:54,159 --> 00:29:57,440
idea

00:29:55,200 --> 00:29:59,360
that that how this payment of engine

00:29:57,440 --> 00:30:02,640
looks like

00:29:59,360 --> 00:30:04,880
internally now to get this together

00:30:02,640 --> 00:30:06,640
there were a couple of decisions i just

00:30:04,880 --> 00:30:09,520
want to go through them

00:30:06,640 --> 00:30:11,520
quickly one of them was that this needs

00:30:09,520 --> 00:30:14,399
to run on premises also we

00:30:11,520 --> 00:30:15,919
all love cloud but many of the financial

00:30:14,399 --> 00:30:18,320
institutions still have their data

00:30:15,919 --> 00:30:21,360
centers and they insist that they want

00:30:18,320 --> 00:30:24,240
the system on premises so the

00:30:21,360 --> 00:30:25,600
bridge is like a kubernetes cluster that

00:30:24,240 --> 00:30:28,640
if they could provide that

00:30:25,600 --> 00:30:30,720
then our engine is capable to to run

00:30:28,640 --> 00:30:32,640
another consideration was that there is

00:30:30,720 --> 00:30:35,440
a real-time part as i said

00:30:32,640 --> 00:30:36,559
and the operations back end is kind of a

00:30:35,440 --> 00:30:39,840
different beast

00:30:36,559 --> 00:30:41,039
and we could separate them in this whole

00:30:39,840 --> 00:30:43,360
solution

00:30:41,039 --> 00:30:45,120
the real-time engine it's kind of a

00:30:43,360 --> 00:30:46,960
self-contained highly available

00:30:45,120 --> 00:30:49,440
unfortunate solution

00:30:46,960 --> 00:30:50,000
and and we could have multiple of these

00:30:49,440 --> 00:30:54,159
real-time

00:30:50,000 --> 00:30:57,760
engines really in a fully blown

00:30:54,159 --> 00:31:00,000
solution one of the

00:30:57,760 --> 00:31:02,720
things that we are orchestrating the

00:31:00,000 --> 00:31:04,640
flow that we need to handle timeouts

00:31:02,720 --> 00:31:06,720
and we need to correlate asynchronous

00:31:04,640 --> 00:31:08,799
events many of these solutions including

00:31:06,720 --> 00:31:11,600
modulo and all the other

00:31:08,799 --> 00:31:11,919
ones they're using messaging queues or

00:31:11,600 --> 00:31:13,840
even

00:31:11,919 --> 00:31:15,600
using http protocol but there are

00:31:13,840 --> 00:31:18,240
callbacks so

00:31:15,600 --> 00:31:18,960
it's actually an asynchronous even based

00:31:18,240 --> 00:31:20,799
mechanism

00:31:18,960 --> 00:31:22,320
so we need to correlate all what is

00:31:20,799 --> 00:31:24,880
coming back from the

00:31:22,320 --> 00:31:25,360
in this case the modulo hub and of

00:31:24,880 --> 00:31:28,799
course

00:31:25,360 --> 00:31:32,640
errors could happen um need to

00:31:28,799 --> 00:31:34,960
act on them some schemas allows retries

00:31:32,640 --> 00:31:37,760
others needs human interactions

00:31:34,960 --> 00:31:39,200
that's what we need to cater for and

00:31:37,760 --> 00:31:41,279
obviously you want to see that what's

00:31:39,200 --> 00:31:44,080
going on in the system

00:31:41,279 --> 00:31:45,679
where are the money flowing and and what

00:31:44,080 --> 00:31:46,960
what happens so you need that type of

00:31:45,679 --> 00:31:50,720
capabilities

00:31:46,960 --> 00:31:53,760
um and for that statement and statement

00:31:50,720 --> 00:31:55,840
engine state machine makes sense um

00:31:53,760 --> 00:31:57,279
and instead of relying on a relational

00:31:55,840 --> 00:31:59,919
database go for

00:31:57,279 --> 00:32:00,880
something that use consensus using rough

00:31:59,919 --> 00:32:03,120
protocol

00:32:00,880 --> 00:32:04,880
and using rogue's db embedded for a key

00:32:03,120 --> 00:32:09,600
value store to manage these

00:32:04,880 --> 00:32:12,640
states um the idea also

00:32:09,600 --> 00:32:14,080
that one engine is typically put into a

00:32:12,640 --> 00:32:16,080
single data center

00:32:14,080 --> 00:32:18,000
and another real-time engine could be

00:32:16,080 --> 00:32:20,399
put in another data center

00:32:18,000 --> 00:32:22,000
again for a full-blown solution and the

00:32:20,399 --> 00:32:24,799
two engines could interact with

00:32:22,000 --> 00:32:27,440
each other as long as everything is fine

00:32:24,799 --> 00:32:30,320
but if one data center fails

00:32:27,440 --> 00:32:31,360
then we still have at least half a

00:32:30,320 --> 00:32:34,399
capacity

00:32:31,360 --> 00:32:36,640
but we need to scale accordingly but we

00:32:34,399 --> 00:32:39,039
are continuously available to handle the

00:32:36,640 --> 00:32:40,480
transactions yes the idea that with a

00:32:39,039 --> 00:32:43,679
full-blown solution you

00:32:40,480 --> 00:32:47,360
must do 24 by 7 4

00:32:43,679 --> 00:32:49,679
5 9-ish availability um

00:32:47,360 --> 00:32:50,399
including version upgrades and hardware

00:32:49,679 --> 00:32:52,960
replacement

00:32:50,399 --> 00:32:53,679
and so on and so on if you really go for

00:32:52,960 --> 00:32:56,960
the

00:32:53,679 --> 00:33:00,320
enterprises of course smaller players

00:32:56,960 --> 00:33:00,880
could could do less and that's what we

00:33:00,320 --> 00:33:03,440
also

00:33:00,880 --> 00:33:04,000
cater for and we just mentioned a couple

00:33:03,440 --> 00:33:06,960
of

00:33:04,000 --> 00:33:07,919
seconds later back office operations and

00:33:06,960 --> 00:33:10,480
that's the

00:33:07,919 --> 00:33:12,320
different part which could be detached

00:33:10,480 --> 00:33:15,440
could be run separately

00:33:12,320 --> 00:33:16,399
um if which has different availability

00:33:15,440 --> 00:33:19,519
requirements

00:33:16,399 --> 00:33:23,200
and tolerates outages

00:33:19,519 --> 00:33:26,720
more easily and now what we have

00:33:23,200 --> 00:33:30,159
uh chosen to orchestrate these processes

00:33:26,720 --> 00:33:33,600
is an open source um

00:33:30,159 --> 00:33:36,559
workflow engine or bpm and engine

00:33:33,600 --> 00:33:38,559
uh that that is using raft using rogue's

00:33:36,559 --> 00:33:41,679
db4 stick for

00:33:38,559 --> 00:33:43,760
storing the state of those processes and

00:33:41,679 --> 00:33:46,640
these are all replicated across the

00:33:43,760 --> 00:33:47,279
cluster and all the information that

00:33:46,640 --> 00:33:50,159
what happens

00:33:47,279 --> 00:33:51,600
is pushed out via exporters that we

00:33:50,159 --> 00:33:54,320
could

00:33:51,600 --> 00:33:54,880
store and we could use for complete

00:33:54,320 --> 00:33:57,600
audit

00:33:54,880 --> 00:33:58,000
uh trace what happened inside the system

00:33:57,600 --> 00:33:59,679
and

00:33:58,000 --> 00:34:02,000
for this engine who orchestrates the

00:33:59,679 --> 00:34:03,600
process we could have clients who are

00:34:02,000 --> 00:34:07,200
connected via

00:34:03,600 --> 00:34:10,000
grpc and getting the task to execute

00:34:07,200 --> 00:34:12,639
a couple of ideas on this engine that

00:34:10,000 --> 00:34:14,720
you could use bpmn or yaml to provide

00:34:12,639 --> 00:34:16,720
the definition of the flows

00:34:14,720 --> 00:34:18,320
there is visual representation of those

00:34:16,720 --> 00:34:21,440
ones um

00:34:18,320 --> 00:34:23,280
and the multiple clients can be used

00:34:21,440 --> 00:34:26,000
probably what is important

00:34:23,280 --> 00:34:27,040
because if this engine gonna be used by

00:34:26,000 --> 00:34:30,079
the community

00:34:27,040 --> 00:34:32,159
and or system integrators that

00:34:30,079 --> 00:34:34,560
obviously the knowledge could be

00:34:32,159 --> 00:34:36,960
different with different languages

00:34:34,560 --> 00:34:38,159
but that's the good point that having

00:34:36,960 --> 00:34:40,639
this engine

00:34:38,159 --> 00:34:42,079
the different connectors to your own

00:34:40,639 --> 00:34:44,159
account management system

00:34:42,079 --> 00:34:45,440
or to the payment scheme could be

00:34:44,159 --> 00:34:48,639
implemented in

00:34:45,440 --> 00:34:51,280
multiple languages okay

00:34:48,639 --> 00:34:52,000
four turns yes horizontal scalability

00:34:51,280 --> 00:34:55,679
that's also

00:34:52,000 --> 00:34:58,800
kind of important and integrators

00:34:55,679 --> 00:34:59,440
so the configuration for an integrator

00:34:58,800 --> 00:35:02,800
would be

00:34:59,440 --> 00:35:05,440
to redraw the bpm and flow i would say

00:35:02,800 --> 00:35:06,079
all the payment or all the dfsp's all

00:35:05,440 --> 00:35:08,400
the banks

00:35:06,079 --> 00:35:09,839
would have some specialties they have

00:35:08,400 --> 00:35:12,079
multiple different

00:35:09,839 --> 00:35:15,200
uh account management system they do

00:35:12,079 --> 00:35:17,599
have fraud detection or they do not have

00:35:15,200 --> 00:35:18,480
and so the flows typically going to be

00:35:17,599 --> 00:35:20,720
different

00:35:18,480 --> 00:35:21,839
and the customization could happen

00:35:20,720 --> 00:35:24,320
easily with

00:35:21,839 --> 00:35:26,560
modifying this ppm and model and just

00:35:24,320 --> 00:35:30,000
implementing the stateless connector

00:35:26,560 --> 00:35:33,359
to connect with the actual systems

00:35:30,000 --> 00:35:35,680
uh what is working so the idea that for

00:35:33,359 --> 00:35:38,640
an integrator this whole payment hub

00:35:35,680 --> 00:35:39,599
is a tool that could be used quite

00:35:38,640 --> 00:35:42,720
easily

00:35:39,599 --> 00:35:44,800
um to accommodate the

00:35:42,720 --> 00:35:45,650
particular requirements of an

00:35:44,800 --> 00:35:47,200
implementation

00:35:45,650 --> 00:35:50,000
[Music]

00:35:47,200 --> 00:35:50,800
a couple of ideas that is i believe

00:35:50,000 --> 00:35:54,079
important

00:35:50,800 --> 00:35:55,760
for the solution that we we need timers

00:35:54,079 --> 00:35:57,760
and those times needs to survive

00:35:55,760 --> 00:36:00,160
failures

00:35:57,760 --> 00:36:01,200
because we need to retry certain

00:36:00,160 --> 00:36:03,119
transactions

00:36:01,200 --> 00:36:06,000
in those given time frames so that's

00:36:03,119 --> 00:36:09,520
something that we could get from this

00:36:06,000 --> 00:36:12,320
system a correlation of

00:36:09,520 --> 00:36:13,200
asynchronous messages that coming in

00:36:12,320 --> 00:36:16,320
that's also an

00:36:13,200 --> 00:36:17,440
important uh feature if we have multiple

00:36:16,320 --> 00:36:19,680
real-time engines

00:36:17,440 --> 00:36:21,760
then also important that the

00:36:19,680 --> 00:36:23,839
non-correlating case is to be handed

00:36:21,760 --> 00:36:27,040
over to the other engine

00:36:23,839 --> 00:36:28,880
depending on the flow and obviously the

00:36:27,040 --> 00:36:30,079
failover situation handling is very

00:36:28,880 --> 00:36:32,560
important that

00:36:30,079 --> 00:36:33,200
that how many nodes how could they fail

00:36:32,560 --> 00:36:35,280
over

00:36:33,200 --> 00:36:36,240
uh what's the redundancy in the system

00:36:35,280 --> 00:36:40,240
so that's

00:36:36,240 --> 00:36:43,599
uh why we have uh stick with this

00:36:40,240 --> 00:36:46,400
solution now deployment models

00:36:43,599 --> 00:36:48,880
uh based on all of this that what could

00:36:46,400 --> 00:36:50,960
we do we already know that on-premises

00:36:48,880 --> 00:36:52,720
and cloud is possible but there's also a

00:36:50,960 --> 00:36:54,800
couple of other options

00:36:52,720 --> 00:36:56,960
and also what makes a difference that

00:36:54,800 --> 00:36:59,200
you are a tier one and two institutions

00:36:56,960 --> 00:37:02,240
so you need really the enterprise gate

00:36:59,200 --> 00:37:05,440
grid uh solution um

00:37:02,240 --> 00:37:08,079
and really like multiple data centers

00:37:05,440 --> 00:37:09,119
or you are a smaller player and

00:37:08,079 --> 00:37:12,800
satisfied with

00:37:09,119 --> 00:37:13,520
a less highly available solution on a

00:37:12,800 --> 00:37:16,720
single

00:37:13,520 --> 00:37:19,920
computer or in a single node for example

00:37:16,720 --> 00:37:22,320
and so the idea here that there's

00:37:19,920 --> 00:37:23,520
something that we call bare bone

00:37:22,320 --> 00:37:25,440
implementation

00:37:23,520 --> 00:37:26,800
it's i could say that this is for

00:37:25,440 --> 00:37:28,880
developers or

00:37:26,800 --> 00:37:30,400
for smaller institutions that into the

00:37:28,880 --> 00:37:32,800
single kubernetes node

00:37:30,400 --> 00:37:33,680
everything is a single node of these

00:37:32,800 --> 00:37:36,000
components

00:37:33,680 --> 00:37:37,599
functionality is complete all it's

00:37:36,000 --> 00:37:40,880
working as required

00:37:37,599 --> 00:37:42,079
uh obviously the reliability and full

00:37:40,880 --> 00:37:44,560
tolerance of the

00:37:42,079 --> 00:37:45,280
implementation is affected by this type

00:37:44,560 --> 00:37:47,760
of setup

00:37:45,280 --> 00:37:48,960
but definitely saving costs and saving

00:37:47,760 --> 00:37:52,160
infrastructure

00:37:48,960 --> 00:37:55,520
and also on complexity i would say and

00:37:52,160 --> 00:37:57,599
we have two additional models that the

00:37:55,520 --> 00:37:58,870
medium or fully scaled as we

00:37:57,599 --> 00:38:01,359
name them um

00:37:58,870 --> 00:38:03,520
[Music]

00:38:01,359 --> 00:38:04,800
that's how you deploy the solution

00:38:03,520 --> 00:38:07,040
before jumping there

00:38:04,800 --> 00:38:09,119
i would also say that there's another

00:38:07,040 --> 00:38:12,079
dimension of the deployment

00:38:09,119 --> 00:38:14,240
and it can be yours meaning that the

00:38:12,079 --> 00:38:17,440
bank or the dfsp is owned

00:38:14,240 --> 00:38:18,480
or we could imagine a situation that an

00:38:17,440 --> 00:38:22,320
aggregator

00:38:18,480 --> 00:38:26,079
step up on the on the

00:38:22,320 --> 00:38:30,480
screen on scene and

00:38:26,079 --> 00:38:33,599
cause the different dfsp's

00:38:30,480 --> 00:38:35,520
with a single payment hub deployment i

00:38:33,599 --> 00:38:38,079
will have some more details on this one

00:38:35,520 --> 00:38:40,160
uh so the medium deployment i would say

00:38:38,079 --> 00:38:42,480
it's still a single kubernetes cluster

00:38:40,160 --> 00:38:44,400
but at least we have multiple nodes and

00:38:42,480 --> 00:38:47,119
all of the components are redundant

00:38:44,400 --> 00:38:49,040
and we have multiple instances of them

00:38:47,119 --> 00:38:52,160
connected to a cluster

00:38:49,040 --> 00:38:54,720
zb is the persistent one and also kafka

00:38:52,160 --> 00:38:55,839
which stores the all the audit trays and

00:38:54,720 --> 00:38:58,079
all the logs which is

00:38:55,839 --> 00:38:59,440
heading to the long term uh storage

00:38:58,079 --> 00:39:02,720
database

00:38:59,440 --> 00:39:06,079
so that's i would say a decent

00:39:02,720 --> 00:39:08,400
deployment with uh with a single

00:39:06,079 --> 00:39:10,160
implementation obviously if you need to

00:39:08,400 --> 00:39:11,839
replace all the hardware all the

00:39:10,160 --> 00:39:14,320
operating systems

00:39:11,839 --> 00:39:15,040
or update the components this might not

00:39:14,320 --> 00:39:18,800
be

00:39:15,040 --> 00:39:21,839
really 24 by 7 but then

00:39:18,800 --> 00:39:24,240
if you really need that type of

00:39:21,839 --> 00:39:25,119
solution then here's a fully blown

00:39:24,240 --> 00:39:26,880
solution

00:39:25,119 --> 00:39:30,079
that from the real-time engine there are

00:39:26,880 --> 00:39:33,359
multiple independent setups

00:39:30,079 --> 00:39:34,560
this also scales meaning handling more

00:39:33,359 --> 00:39:38,280
transactions

00:39:34,560 --> 00:39:40,480
but it's also importantly

00:39:38,280 --> 00:39:42,320
[Music]

00:39:40,480 --> 00:39:44,160
could support those cases then you need

00:39:42,320 --> 00:39:48,240
to replace a complete

00:39:44,160 --> 00:39:49,920
system now supported process flows i

00:39:48,240 --> 00:39:53,280
know that time is

00:39:49,920 --> 00:39:56,480
tough here so let me just

00:39:53,280 --> 00:39:58,960
go through that for example what you

00:39:56,480 --> 00:40:01,599
need an account registration process

00:39:58,960 --> 00:40:02,960
uh like a payer initiated transaction so

00:40:01,599 --> 00:40:05,839
the peer-to-peer

00:40:02,960 --> 00:40:06,480
peer-to-peer transaction or the request

00:40:05,839 --> 00:40:08,880
to pay

00:40:06,480 --> 00:40:10,240
kind of transactions then let's say a

00:40:08,880 --> 00:40:13,359
merchant initiates

00:40:10,240 --> 00:40:14,400
a request that please uh pay me this and

00:40:13,359 --> 00:40:17,280
that amount

00:40:14,400 --> 00:40:19,040
uh so couple of diagrams here i don't

00:40:17,280 --> 00:40:22,560
want to get into the details

00:40:19,040 --> 00:40:23,760
how party identifier registration looks

00:40:22,560 --> 00:40:25,920
like in bpm

00:40:23,760 --> 00:40:27,359
this is the actual runtime model so this

00:40:25,920 --> 00:40:29,440
is what the system is

00:40:27,359 --> 00:40:30,640
actually executing you just need the

00:40:29,440 --> 00:40:34,560
actual tasks

00:40:30,640 --> 00:40:36,160
who who who call responsible for the

00:40:34,560 --> 00:40:38,560
individual boxes

00:40:36,160 --> 00:40:40,400
to execute now this is a bit bigger one

00:40:38,560 --> 00:40:43,200
this is the payer process

00:40:40,400 --> 00:40:45,040
uh with the necessary timeouts just want

00:40:43,200 --> 00:40:48,079
to highlight a couple of things

00:40:45,040 --> 00:40:50,880
so if there is no response coming back

00:40:48,079 --> 00:40:52,400
then you retry to a certain amount of

00:40:50,880 --> 00:40:54,720
times after you gave up

00:40:52,400 --> 00:40:55,920
and you finished the transaction or

00:40:54,720 --> 00:40:58,720
another way

00:40:55,920 --> 00:40:59,680
that if you gave up and no response

00:40:58,720 --> 00:41:03,520
coming back

00:40:59,680 --> 00:41:05,920
then you notify a human you notify

00:41:03,520 --> 00:41:07,839
a payment operator that we need to

00:41:05,920 --> 00:41:09,440
interact because we sent the money but

00:41:07,839 --> 00:41:11,599
we don't know the result

00:41:09,440 --> 00:41:12,800
of that transaction so we need to

00:41:11,599 --> 00:41:15,680
interact we need to

00:41:12,800 --> 00:41:16,240
figure this out get a report or or get

00:41:15,680 --> 00:41:18,960
something

00:41:16,240 --> 00:41:20,480
and finalize the decision that we really

00:41:18,960 --> 00:41:23,599
received or sent

00:41:20,480 --> 00:41:24,400
the funds successfully or it failed so

00:41:23,599 --> 00:41:26,240
we need

00:41:24,400 --> 00:41:28,079
to give it back to the customer so he

00:41:26,240 --> 00:41:28,720
could do another transaction with that

00:41:28,079 --> 00:41:30,960
amount

00:41:28,720 --> 00:41:32,880
so that's kind of the concept and now

00:41:30,960 --> 00:41:34,720
this is the real-time monitoring part

00:41:32,880 --> 00:41:36,319
you see that there are transactions

00:41:34,720 --> 00:41:38,960
there are these boxes there are the

00:41:36,319 --> 00:41:40,640
process steps and times and variables

00:41:38,960 --> 00:41:42,480
what you could see in the system now

00:41:40,640 --> 00:41:44,240
this is the other part pay

00:41:42,480 --> 00:41:45,599
then you receive what you what could

00:41:44,240 --> 00:41:49,040
happen with that one

00:41:45,599 --> 00:41:51,520
again you could see that now it executes

00:41:49,040 --> 00:41:52,880
timings and and all the relevant

00:41:51,520 --> 00:41:55,359
information

00:41:52,880 --> 00:41:58,000
and then i can go on that there's the

00:41:55,359 --> 00:41:59,040
pay initiated flow as you see it's a bit

00:41:58,000 --> 00:42:02,240
different

00:41:59,040 --> 00:42:04,400
because it's like request to pay

00:42:02,240 --> 00:42:06,720
then if you accept this request to pay

00:42:04,400 --> 00:42:07,280
then you do a normal transfer so there's

00:42:06,720 --> 00:42:10,160
the

00:42:07,280 --> 00:42:11,760
sub task which is becomes a normal

00:42:10,160 --> 00:42:13,920
transfer in the process

00:42:11,760 --> 00:42:16,079
and then there's a payer fund transfer

00:42:13,920 --> 00:42:16,800
flow that how this goes through to the

00:42:16,079 --> 00:42:20,000
other

00:42:16,800 --> 00:42:22,560
side um so that's kind of the

00:42:20,000 --> 00:42:23,839
ideas then i jump to the operational

00:42:22,560 --> 00:42:27,920
control center

00:42:23,839 --> 00:42:29,760
uh part so what does a payment operator

00:42:27,920 --> 00:42:32,960
see from all of this lovely

00:42:29,760 --> 00:42:36,079
processes on this

00:42:32,960 --> 00:42:40,319
control center you login

00:42:36,079 --> 00:42:43,359
obviously multiple tenants are supported

00:42:40,319 --> 00:42:45,359
as multiple dfsp is most probably going

00:42:43,359 --> 00:42:48,000
to insist that their data is

00:42:45,359 --> 00:42:49,119
segregated so the archives also become

00:42:48,000 --> 00:42:51,119
segregated

00:42:49,119 --> 00:42:52,160
um and then you can search for the

00:42:51,119 --> 00:42:55,119
transactions

00:42:52,160 --> 00:42:56,240
you can do certain actions based on your

00:42:55,119 --> 00:42:58,210
privileges

00:42:56,240 --> 00:42:59,680
um and um

00:42:58,210 --> 00:43:02,960
[Music]

00:42:59,680 --> 00:43:04,880
and like refunding or or make a final

00:43:02,960 --> 00:43:06,240
decision on a particular transaction

00:43:04,880 --> 00:43:08,000
couple of screenshots from this

00:43:06,240 --> 00:43:09,040
application how you search for incoming

00:43:08,000 --> 00:43:10,960
transactions

00:43:09,040 --> 00:43:12,720
uh how to search for outgoing

00:43:10,960 --> 00:43:15,119
transactions and so on and so on

00:43:12,720 --> 00:43:17,359
here's the screenshot that you see that

00:43:15,119 --> 00:43:18,160
the completed transaction taken place at

00:43:17,359 --> 00:43:21,599
the time

00:43:18,160 --> 00:43:22,240
this time and the search fields what you

00:43:21,599 --> 00:43:24,640
could

00:43:22,240 --> 00:43:26,400
look for then here's the details what

00:43:24,640 --> 00:43:28,480
happened with this transaction

00:43:26,400 --> 00:43:30,640
and there are even additional details on

00:43:28,480 --> 00:43:32,480
the variables and the different timings

00:43:30,640 --> 00:43:33,520
and the exact process through what taken

00:43:32,480 --> 00:43:36,319
place

00:43:33,520 --> 00:43:36,880
on the detail page you could decide that

00:43:36,319 --> 00:43:39,680
you could

00:43:36,880 --> 00:43:40,319
initiate a refund transaction and then

00:43:39,680 --> 00:43:42,800
you could

00:43:40,319 --> 00:43:44,720
search for the refund transaction so

00:43:42,800 --> 00:43:46,160
this is becomes a normal outgoing

00:43:44,720 --> 00:43:49,200
transaction that is

00:43:46,160 --> 00:43:53,040
completed and that's roughly

00:43:49,200 --> 00:43:53,520
what you could see in on on this control

00:43:53,040 --> 00:43:57,200
center

00:43:53,520 --> 00:44:00,560
so that's the user interface uh for the

00:43:57,200 --> 00:44:02,960
operators now there's another topic the

00:44:00,560 --> 00:44:05,119
multi-tenancy of this payment hub as

00:44:02,960 --> 00:44:06,240
we all know that finrac is already a

00:44:05,119 --> 00:44:09,040
multi-tenant

00:44:06,240 --> 00:44:10,400
system capable to handle multiple dfsps

00:44:09,040 --> 00:44:13,040
with a single installation

00:44:10,400 --> 00:44:13,839
so the payment hub should follow this

00:44:13,040 --> 00:44:17,520
lead

00:44:13,839 --> 00:44:18,720
and let users to have a single

00:44:17,520 --> 00:44:21,359
installation

00:44:18,720 --> 00:44:22,319
and providing multiple institutions this

00:44:21,359 --> 00:44:24,480
is definitely

00:44:22,319 --> 00:44:25,359
important for smaller institutions tier

00:44:24,480 --> 00:44:27,760
three and

00:44:25,359 --> 00:44:28,640
uh four institutions that simply

00:44:27,760 --> 00:44:30,720
aggregation

00:44:28,640 --> 00:44:32,160
saves a lot of costs a lot of effort and

00:44:30,720 --> 00:44:35,599
the technical

00:44:32,160 --> 00:44:37,680
uh knowledge could be also concentrated

00:44:35,599 --> 00:44:39,760
now the idea here that there are two

00:44:37,680 --> 00:44:43,040
methods of this multi-tenancy

00:44:39,760 --> 00:44:46,079
one that you really go for an aggregator

00:44:43,040 --> 00:44:48,400
model meaning an independent entity

00:44:46,079 --> 00:44:49,680
deploys the payment hub and then the

00:44:48,400 --> 00:44:52,800
different dfsp

00:44:49,680 --> 00:44:56,240
simply take this as a service

00:44:52,800 --> 00:44:59,440
from the cloud or from whatever solution

00:44:56,240 --> 00:45:02,480
and that's one model and the other one

00:44:59,440 --> 00:45:04,800
that the dfsp is already

00:45:02,480 --> 00:45:07,040
concentrated or aggregated let's say to

00:45:04,800 --> 00:45:09,599
a single finrak instance which has

00:45:07,040 --> 00:45:11,119
multiple tenants inside then the payment

00:45:09,599 --> 00:45:13,280
hub could behave

00:45:11,119 --> 00:45:14,880
as multiple tenants for the payment

00:45:13,280 --> 00:45:17,200
networks

00:45:14,880 --> 00:45:19,119
but internally it directs all the flows

00:45:17,200 --> 00:45:21,200
to the same infinite instance

00:45:19,119 --> 00:45:23,599
just identifying the corresponding

00:45:21,200 --> 00:45:24,560
tenant so we build the capability that

00:45:23,599 --> 00:45:27,359
both of these

00:45:24,560 --> 00:45:29,839
deployments are supported and that's

00:45:27,359 --> 00:45:32,720
what we are using in our lab environment

00:45:29,839 --> 00:45:33,680
regarding the lab environment what we

00:45:32,720 --> 00:45:37,200
have done

00:45:33,680 --> 00:45:40,079
come up with um a sandbox

00:45:37,200 --> 00:45:41,680
which is up and running and i would say

00:45:40,079 --> 00:45:44,960
logically what it does

00:45:41,680 --> 00:45:47,920
it has finra cn and one point

00:45:44,960 --> 00:45:48,880
x the actual version then it has the

00:45:47,920 --> 00:45:51,839
payment hub

00:45:48,880 --> 00:45:53,760
in both of these deployments uh all of

00:45:51,839 --> 00:45:56,480
the deployments having

00:45:53,760 --> 00:45:59,440
two different tenants make sure that the

00:45:56,480 --> 00:46:02,400
whole solution supports multiple tenants

00:45:59,440 --> 00:46:04,240
and and using this mechanism you could

00:46:02,400 --> 00:46:07,760
already start transacting

00:46:04,240 --> 00:46:11,040
plus what we done um added an

00:46:07,760 --> 00:46:12,000
api gateway and opened up some of the

00:46:11,040 --> 00:46:14,400
services

00:46:12,000 --> 00:46:16,160
from the open banking api so the

00:46:14,400 --> 00:46:19,280
transact account

00:46:16,160 --> 00:46:21,680
information the account history and the

00:46:19,280 --> 00:46:22,240
payment initiation services available

00:46:21,680 --> 00:46:24,800
here

00:46:22,240 --> 00:46:25,680
so the customers could log into a

00:46:24,800 --> 00:46:29,839
fintech

00:46:25,680 --> 00:46:30,800
which access those tenants via these api

00:46:29,839 --> 00:46:33,599
gateways

00:46:30,800 --> 00:46:34,880
and could get account information or

00:46:33,599 --> 00:46:37,599
initiate a payment

00:46:34,880 --> 00:46:39,040
which goes to the payment hub and all

00:46:37,599 --> 00:46:43,200
these flows what i mentioned

00:46:39,040 --> 00:46:46,319
gets executed so that's uh what is there

00:46:43,200 --> 00:46:48,880
and also in the slab environment we are

00:46:46,319 --> 00:46:51,359
trying to introduce new connectors

00:46:48,880 --> 00:46:52,720
like the mobile money adapter or or

00:46:51,359 --> 00:46:55,599
additional waste to connect

00:46:52,720 --> 00:46:56,000
module or actually we are thinking about

00:46:55,599 --> 00:47:00,160
getting

00:46:56,000 --> 00:47:03,119
the iso 20 or 22 adapter that we have

00:47:00,160 --> 00:47:04,960
quite a lot of uh practice if in this

00:47:03,119 --> 00:47:08,000
lab environment what we are having

00:47:04,960 --> 00:47:11,040
three independent deployments um

00:47:08,000 --> 00:47:11,520
two my first one point x and one cn both

00:47:11,040 --> 00:47:15,440
of

00:47:11,520 --> 00:47:17,760
all of them having two dfsps deployed

00:47:15,440 --> 00:47:19,200
um and they have a couple of accounts

00:47:17,760 --> 00:47:21,520
then transactions could go

00:47:19,200 --> 00:47:22,800
through there is one modulo instance to

00:47:21,520 --> 00:47:26,400
connect all of these six

00:47:22,800 --> 00:47:26,960
dfsps together plus we have an api

00:47:26,400 --> 00:47:30,800
gateway

00:47:26,960 --> 00:47:32,640
open banking apis opened up and a simple

00:47:30,800 --> 00:47:34,000
really proof of concept fintech

00:47:32,640 --> 00:47:37,520
application

00:47:34,000 --> 00:47:40,400
that could utilize those this this

00:47:37,520 --> 00:47:41,599
environment plus the ci cd service so

00:47:40,400 --> 00:47:45,520
the deployment could go

00:47:41,599 --> 00:47:48,480
quite smoothly to this environment um

00:47:45,520 --> 00:47:49,920
access can be granted so if you join the

00:47:48,480 --> 00:47:53,599
my for slack

00:47:49,920 --> 00:47:56,480
and reach out to admi then then we could

00:47:53,599 --> 00:47:58,240
uh get some we could provide some access

00:47:56,480 --> 00:47:59,839
to all of these lovely computers what

00:47:58,240 --> 00:48:02,960
you see on the diagram

00:47:59,839 --> 00:48:06,480
uh so so it's on azure

00:48:02,960 --> 00:48:09,680
environment um and these are the free

00:48:06,480 --> 00:48:11,920
deployments i would say the

00:48:09,680 --> 00:48:13,920
these are the tenants the rhino and

00:48:11,920 --> 00:48:16,000
elephant the buffalo and the lion and

00:48:13,920 --> 00:48:19,200
the leopard and gorilla tenants

00:48:16,000 --> 00:48:20,240
who's existing these systems and there's

00:48:19,200 --> 00:48:23,440
the

00:48:20,240 --> 00:48:25,440
finrak instance there's api gateway

00:48:23,440 --> 00:48:27,359
and there's the payment of itself which

00:48:25,440 --> 00:48:29,440
is capable to connect all of these

00:48:27,359 --> 00:48:30,000
systems together with the module problem

00:48:29,440 --> 00:48:32,720
to

00:48:30,000 --> 00:48:33,520
communicate which also deployed in this

00:48:32,720 --> 00:48:36,400
environment

00:48:33,520 --> 00:48:37,200
and then we have a fintech uh to to test

00:48:36,400 --> 00:48:40,319
out the

00:48:37,200 --> 00:48:43,839
epi cause now

00:48:40,319 --> 00:48:44,400
if you want to get deeper not today i

00:48:43,839 --> 00:48:47,440
believe

00:48:44,400 --> 00:48:50,480
then there's um there's a slide

00:48:47,440 --> 00:48:52,640
showing that what is inside the box

00:48:50,480 --> 00:48:53,599
and as you see that we discussed finrak

00:48:52,640 --> 00:48:57,200
should we have

00:48:53,599 --> 00:49:00,960
um microservice based

00:48:57,200 --> 00:49:03,520
uh solution as you see if you take a

00:49:00,960 --> 00:49:04,240
broader picture and you pull the api

00:49:03,520 --> 00:49:07,119
gateway

00:49:04,240 --> 00:49:08,880
the open banking adapter finra the other

00:49:07,119 --> 00:49:12,079
components and the payment of

00:49:08,880 --> 00:49:12,800
its own components we the bank itself is

00:49:12,079 --> 00:49:14,720
already

00:49:12,800 --> 00:49:16,559
contains a lot of services which are

00:49:14,720 --> 00:49:17,760
stitched together to provide all of

00:49:16,559 --> 00:49:21,119
these services

00:49:17,760 --> 00:49:25,040
um another initiative one word on this

00:49:21,119 --> 00:49:28,240
that there's an the mojo loop hub

00:49:25,040 --> 00:49:31,040
intends to introduce a new api that the

00:49:28,240 --> 00:49:33,440
third parties could interact and one of

00:49:31,040 --> 00:49:35,680
these third parties who wish to

00:49:33,440 --> 00:49:36,800
to open up this solution is google

00:49:35,680 --> 00:49:40,559
itself

00:49:36,800 --> 00:49:43,200
because then google pay could come and

00:49:40,559 --> 00:49:44,640
in those jurisdictions their modulo pub

00:49:43,200 --> 00:49:46,480
is available

00:49:44,640 --> 00:49:47,839
they could reach out to all the

00:49:46,480 --> 00:49:51,200
connected banks

00:49:47,839 --> 00:49:53,359
and get a payment initiated via their

00:49:51,200 --> 00:49:54,559
application and so there are

00:49:53,359 --> 00:49:58,000
developments in this

00:49:54,559 --> 00:50:00,880
direction um couple of

00:49:58,000 --> 00:50:02,960
ideas on the roadmap uh bulk payments

00:50:00,880 --> 00:50:04,640
it's still an interesting topic despite

00:50:02,960 --> 00:50:05,520
we are talking about real-time payments

00:50:04,640 --> 00:50:09,040
all the time

00:50:05,520 --> 00:50:10,960
um performance tuning what we have

00:50:09,040 --> 00:50:12,640
started and or i would say even

00:50:10,960 --> 00:50:14,720
completed um

00:50:12,640 --> 00:50:17,280
a cross network payments is an

00:50:14,720 --> 00:50:20,880
interesting topic iso 2022

00:50:17,280 --> 00:50:22,480
support the pisp as i mentioned

00:50:20,880 --> 00:50:24,000
and there's another concept called

00:50:22,480 --> 00:50:27,359
standing that

00:50:24,000 --> 00:50:30,400
that big institutions could play with uh

00:50:27,359 --> 00:50:31,960
okay a couple of ideas bulk payment in

00:50:30,400 --> 00:50:33,359
this case we could do some

00:50:31,960 --> 00:50:35,680
pre-processing

00:50:33,359 --> 00:50:36,640
uh so the bulk file could be received by

00:50:35,680 --> 00:50:39,119
the payment hub

00:50:36,640 --> 00:50:40,160
and could be split to either individual

00:50:39,119 --> 00:50:43,040
transactions

00:50:40,160 --> 00:50:44,960
or with the mojo loop they also support

00:50:43,040 --> 00:50:45,760
some kind of batches but you need to

00:50:44,960 --> 00:50:48,319
pre-process

00:50:45,760 --> 00:50:49,760
you need to identify the target dfsp's

00:50:48,319 --> 00:50:53,520
and one bulk for one

00:50:49,760 --> 00:50:54,319
target dfsp and stand in two words about

00:50:53,520 --> 00:50:57,359
this

00:50:54,319 --> 00:50:58,160
that the capability that if your core

00:50:57,359 --> 00:51:01,040
banking is

00:50:58,160 --> 00:51:01,440
unavailable but you still want to at

00:51:01,040 --> 00:51:04,319
least

00:51:01,440 --> 00:51:06,240
receive funds from other institutions

00:51:04,319 --> 00:51:08,960
probably that's very important

00:51:06,240 --> 00:51:11,440
uh especially for larger institutions

00:51:08,960 --> 00:51:14,480
and we all know that these core bankings

00:51:11,440 --> 00:51:16,800
uh require some down times even as we

00:51:14,480 --> 00:51:18,640
discussed with finra one point x certain

00:51:16,800 --> 00:51:20,079
transactions could not go by the batch

00:51:18,640 --> 00:51:23,599
processes are running

00:51:20,079 --> 00:51:26,160
uh so so in this case we could apply a

00:51:23,599 --> 00:51:28,079
stand-in system who's capable to receive

00:51:26,160 --> 00:51:29,760
those incoming funds and whenever the

00:51:28,079 --> 00:51:32,640
core bank becomes available

00:51:29,760 --> 00:51:34,880
pass it on uh to update the accounts the

00:51:32,640 --> 00:51:36,079
more sophisticated way that the standing

00:51:34,880 --> 00:51:39,680
is capable to handle

00:51:36,079 --> 00:51:41,520
outgoing transactions and standing um

00:51:39,680 --> 00:51:42,960
instead of the core bank but that

00:51:41,520 --> 00:51:45,040
requires a bit more

00:51:42,960 --> 00:51:47,680
complicated synchronization and

00:51:45,040 --> 00:51:50,800
obviously some risk of overdraft

00:51:47,680 --> 00:51:54,240
comes into the picture um

00:51:50,800 --> 00:51:57,680
performance tuning um

00:51:54,240 --> 00:52:00,400
we have done an extensive test

00:51:57,680 --> 00:52:01,760
on the system that like driving it from

00:52:00,400 --> 00:52:04,640
geometer

00:52:01,760 --> 00:52:06,240
see that how the workflow instances are

00:52:04,640 --> 00:52:08,640
increasing so you see that

00:52:06,240 --> 00:52:09,920
that we pushed a couple of minutes a

00:52:08,640 --> 00:52:14,319
hundred thousand

00:52:09,920 --> 00:52:16,720
transactions over the system and so

00:52:14,319 --> 00:52:18,079
the response time is pretty decent the

00:52:16,720 --> 00:52:21,200
processing latency is

00:52:18,079 --> 00:52:23,599
quite good and it depends on how we

00:52:21,200 --> 00:52:27,119
model the solution

00:52:23,599 --> 00:52:31,520
we could say that with a

00:52:27,119 --> 00:52:33,520
normal setup we can go up to 250

00:52:31,520 --> 00:52:35,359
let's say transactions per seconds but

00:52:33,520 --> 00:52:36,960
then we need to check these bpm and

00:52:35,359 --> 00:52:40,319
flows that what exactly we

00:52:36,960 --> 00:52:42,400
might mean by that so but but definitely

00:52:40,319 --> 00:52:44,319
there was a lot of effort and all of

00:52:42,400 --> 00:52:46,880
this effort is documented

00:52:44,319 --> 00:52:48,400
on the resources page so in git book

00:52:46,880 --> 00:52:51,599
there's a documentation

00:52:48,400 --> 00:52:52,400
it's all all there accessible so you see

00:52:51,599 --> 00:52:54,160
that

00:52:52,400 --> 00:52:55,839
the overall documents what i just

00:52:54,160 --> 00:52:58,240
presented plus

00:52:55,839 --> 00:52:59,359
also the tuning and performance is added

00:52:58,240 --> 00:53:02,319
recently

00:52:59,359 --> 00:53:02,960
to the deck that how to approach this

00:53:02,319 --> 00:53:05,520
yeah

00:53:02,960 --> 00:53:08,240
thank you very much for your interest

00:53:05,520 --> 00:53:15,839
and thank you very much for the

00:53:08,240 --> 00:53:15,839
for for listening

00:53:16,079 --> 00:53:18,160

YouTube URL: https://www.youtube.com/watch?v=8jQ-5Xpj5wc


