Title: Backup and Recovery in CloudStack
Publication date: 2019-09-20
Playlist: ApacheCon North America 2019
Description: 
	This presentation will demonstrate the long awaited Backup & Recovery Framework feature. The presentation will feature a real-world demonstration as well explain the design philosophy and how the feature has been built to be agnostic of the backend Backup and Recovery software in use.
Captions: 
	00:00:04,970 --> 00:00:09,559
I've got a bit a little bit of

00:00:06,590 --> 00:00:12,320
housekeeping first I just remind to

00:00:09,559 --> 00:00:16,160
everyone there's a hackathon tomorrow so

00:00:12,320 --> 00:00:18,290
that's in this room from about I think

00:00:16,160 --> 00:00:22,009
technically 11 but maybe you have to get

00:00:18,290 --> 00:00:24,169
in here earlier so that's people come

00:00:22,009 --> 00:00:26,119
along is very it said to talk about that

00:00:24,169 --> 00:00:29,720
route to staff anything else you've seen

00:00:26,119 --> 00:00:32,599
I think the UI ideas know he would like

00:00:29,720 --> 00:00:35,000
people to talk about a few remaining

00:00:32,599 --> 00:00:37,670
list a few people have had other ideas

00:00:35,000 --> 00:00:39,469
of subjects I'd like to get people's

00:00:37,670 --> 00:00:43,789
feedback on and try and get consensus

00:00:39,469 --> 00:00:46,550
around we've also got a community video

00:00:43,789 --> 00:00:49,489
project we're asking people to do a

00:00:46,550 --> 00:00:52,609
10-minute interview probably be video

00:00:49,489 --> 00:00:54,170
doing that to get back on them why they

00:00:52,609 --> 00:00:57,320
use towel stack how they use cloud

00:00:54,170 --> 00:01:00,289
stacks for putting on the cloud stack

00:00:57,320 --> 00:01:03,199
YouTube channel just get people saying

00:01:00,289 --> 00:01:04,909
the more details about that so if you're

00:01:03,199 --> 00:01:07,790
interested in doing that if you could

00:01:04,909 --> 00:01:09,080
find Andrea or Steve or Giles from shale

00:01:07,790 --> 00:01:11,630
or grab me either

00:01:09,080 --> 00:01:17,380
and we'll make sure someone gets to

00:01:11,630 --> 00:01:17,380
speak to you about that okay stop okay

00:01:17,920 --> 00:01:25,310
so the backup recovery frameworks is

00:01:20,960 --> 00:01:26,810
going to talk to you about it's almost

00:01:25,310 --> 00:01:28,490
here we have to kind of do a bit of a

00:01:26,810 --> 00:01:30,050
pause on it because one of the people

00:01:28,490 --> 00:01:32,330
were working to wanted to pivot and do

00:01:30,050 --> 00:01:34,790
something else but then we thought this

00:01:32,330 --> 00:01:37,330
is too good too important to just leave

00:01:34,790 --> 00:01:40,670
on a shelf so we went back to it and

00:01:37,330 --> 00:01:43,220
carried on working on it and so I'll

00:01:40,670 --> 00:01:45,620
give you more intro of where we are I

00:01:43,220 --> 00:01:49,400
think by now you probably all figured

00:01:45,620 --> 00:01:52,580
out who I am vice president and chair of

00:01:49,400 --> 00:01:55,880
the cloud step project also CTO for

00:01:52,580 --> 00:01:58,790
shape blue and I just spent an awful lot

00:01:55,880 --> 00:02:01,450
of time doing clouds a key things I

00:01:58,790 --> 00:02:04,850
think probably it was around January

00:02:01,450 --> 00:02:07,130
2012 that I got involved with Cal SEC so

00:02:04,850 --> 00:02:10,789
I'm probably among Rohit and only a few

00:02:07,130 --> 00:02:12,800
others that are still around so actively

00:02:10,789 --> 00:02:15,760
in the project from those early days of

00:02:12,800 --> 00:02:15,760
Citrix

00:02:16,209 --> 00:02:21,579
so what we're going to talk about is a

00:02:18,099 --> 00:02:24,519
bit of background to the back backup and

00:02:21,579 --> 00:02:26,799
recovery framework what it's about and

00:02:24,519 --> 00:02:28,629
what it's going to do and and show you

00:02:26,799 --> 00:02:33,909
kinda how that's all now going to fit

00:02:28,629 --> 00:02:38,709
together so if I start off by rewinding

00:02:33,909 --> 00:02:41,560
a bit to where this all came from and it

00:02:38,709 --> 00:02:45,189
comes from a lot of talk and people will

00:02:41,560 --> 00:02:49,209
have a lot of pain around snapshots be

00:02:45,189 --> 00:02:52,569
public or private clouds people are you

00:02:49,209 --> 00:02:56,739
snapshots as basically a backup but when

00:02:52,569 --> 00:02:58,720
we look at what I should also do is give

00:02:56,739 --> 00:03:01,239
kind of anyone it doesn't there is

00:02:58,720 --> 00:03:04,060
really new new to this what we're

00:03:01,239 --> 00:03:06,730
talking about when we have snapshots so

00:03:04,060 --> 00:03:09,730
we've got two types one is just a VM

00:03:06,730 --> 00:03:11,439
snapshot the kind of thing that most

00:03:09,730 --> 00:03:13,689
people who are used to virtualization

00:03:11,439 --> 00:03:16,030
and hypervisors would think of when we

00:03:13,689 --> 00:03:19,030
use the term snapshot that just kind of

00:03:16,030 --> 00:03:20,919
point in time image of the VM and then

00:03:19,030 --> 00:03:23,280
it carries on from there and if you want

00:03:20,919 --> 00:03:26,410
you can roll back to that point in time

00:03:23,280 --> 00:03:29,500
but it's stored with and alongside your

00:03:26,410 --> 00:03:32,049
virtual machine that you've got then you

00:03:29,500 --> 00:03:35,829
have or clouds that also causes a

00:03:32,049 --> 00:03:37,840
snapshot is the volume snapshot and we

00:03:35,829 --> 00:03:39,879
use part the same idea in that we take

00:03:37,840 --> 00:03:42,989
this point in time snapshot but then we

00:03:39,879 --> 00:03:45,819
copy that from the hypervisor to

00:03:42,989 --> 00:03:48,430
secondary storage then we delete the lot

00:03:45,819 --> 00:03:54,250
snapshot we took on the host so that now

00:03:48,430 --> 00:03:57,879
you have a copy at that point and the

00:03:54,250 --> 00:04:02,549
reason the rewind to snapshots is

00:03:57,879 --> 00:04:05,109
because pretty much everyone uses

00:04:02,549 --> 00:04:08,889
snapshots as some form of backup is

00:04:05,109 --> 00:04:10,690
really what the only in cloud stack

00:04:08,889 --> 00:04:13,840
option you've got the other ones of the

00:04:10,690 --> 00:04:16,630
installing agents as users into virtual

00:04:13,840 --> 00:04:19,000
machines and doing backups that way but

00:04:16,630 --> 00:04:23,250
the only way really provided by cloud

00:04:19,000 --> 00:04:23,250
stack are the snapshot

00:04:23,530 --> 00:04:30,740
good the thing is there's a there's a

00:04:26,300 --> 00:04:32,450
some issues around doing that and the

00:04:30,740 --> 00:04:36,110
first thing really is it's about

00:04:32,450 --> 00:04:37,910
consistency they're not going to be

00:04:36,110 --> 00:04:41,000
consistent across volumes because in

00:04:37,910 --> 00:04:43,010
fact a lot of times Klaus that can't

00:04:41,000 --> 00:04:45,350
take more than one snapshot volume

00:04:43,010 --> 00:04:48,950
snapshot of a VM at the same time so if

00:04:45,350 --> 00:04:50,690
you have multiple discs say one with

00:04:48,950 --> 00:04:52,700
logs on if you go back to your like

00:04:50,690 --> 00:04:55,040
sequel server with where you're

00:04:52,700 --> 00:04:57,020
recommending to have a disk for data at

00:04:55,040 --> 00:04:59,540
disk for logs or distance for the OS

00:04:57,020 --> 00:05:01,280
you're going to take those snapshots one

00:04:59,540 --> 00:05:04,040
after another and if they're large there

00:05:01,280 --> 00:05:06,950
could be hours of difference between the

00:05:04,040 --> 00:05:08,030
OS at the logs and the data and then

00:05:06,950 --> 00:05:11,030
when you try and put that back together

00:05:08,030 --> 00:05:13,730
to roll back it's gonna be a huge mess

00:05:11,030 --> 00:05:15,980
and if you look closely at what's wrong

00:05:13,730 --> 00:05:18,169
with this picture is you've got the

00:05:15,980 --> 00:05:22,220
baby's head over here and what looks

00:05:18,169 --> 00:05:23,720
like two puppies they just don't match

00:05:22,220 --> 00:05:26,750
up and when you put them back together

00:05:23,720 --> 00:05:28,640
if you end up with that an unholy mess

00:05:26,750 --> 00:05:31,610
that's probably on sortable is going to

00:05:28,640 --> 00:05:34,669
happen there's also the fact you know

00:05:31,610 --> 00:05:36,830
this is a very sledgehammer approach to

00:05:34,669 --> 00:05:39,410
doing this backup it is taking a

00:05:36,830 --> 00:05:41,110
snapshot of exactly how something is at

00:05:39,410 --> 00:05:44,300
one second

00:05:41,110 --> 00:05:47,540
so if you've got databases those logs

00:05:44,300 --> 00:05:49,190
aren't going to be quick quiesce they're

00:05:47,540 --> 00:05:51,169
not going to be flushing databases and

00:05:49,190 --> 00:05:55,280
making sure everything is nice for you

00:05:51,169 --> 00:05:57,020
when you start up it will be possibly

00:05:55,280 --> 00:06:00,710
crash consistent within the scope of a

00:05:57,020 --> 00:06:03,770
volume but that still crashed and not in

00:06:00,710 --> 00:06:05,930
a nice state and so you're gonna have

00:06:03,770 --> 00:06:10,120
work on your hands trying to put

00:06:05,930 --> 00:06:12,950
together back together whatever you had

00:06:10,120 --> 00:06:17,680
the real pain for then the people

00:06:12,950 --> 00:06:20,390
operating the cloud is often it's slow

00:06:17,680 --> 00:06:23,500
it's limited by the span which you've

00:06:20,390 --> 00:06:26,630
got available to you it's limited by the

00:06:23,500 --> 00:06:31,310
storage you have if you don't have many

00:06:26,630 --> 00:06:33,140
safe storage pools everything has to get

00:06:31,310 --> 00:06:35,270
into there and if you have a lot of

00:06:33,140 --> 00:06:38,030
virtual machines and everyone

00:06:35,270 --> 00:06:40,880
that's having mesh snapshots scheduled

00:06:38,030 --> 00:06:43,010
for say 11:30 at night then suddenly

00:06:40,880 --> 00:06:44,720
there's a lot of data that's got to get

00:06:43,010 --> 00:06:47,260
onto that secretary storage all at the

00:06:44,720 --> 00:06:50,690
same time creating massive bottlenecks

00:06:47,260 --> 00:06:55,430
and also in vSphere we have the case of

00:06:50,690 --> 00:06:58,160
the fact that the SS VM acts as a client

00:06:55,430 --> 00:07:01,010
it's doing the compressing of the data

00:06:58,160 --> 00:07:03,440
into the OVA to be then stored on the

00:07:01,010 --> 00:07:05,180
secondary storage that compressing

00:07:03,440 --> 00:07:07,820
anything takes time correct

00:07:05,180 --> 00:07:09,710
compressing a terabyte disks to be then

00:07:07,820 --> 00:07:12,130
put on to secondary storage is going to

00:07:09,710 --> 00:07:15,710
take a lot of time and a lot of resource

00:07:12,130 --> 00:07:17,900
and so you're going to get a lot of

00:07:15,710 --> 00:07:21,280
contention it's almost all you would

00:07:17,900 --> 00:07:24,410
almost mean one of those SS PM's per

00:07:21,280 --> 00:07:28,330
snapshot job to try and get decent fruit

00:07:24,410 --> 00:07:31,700
so it's there's a lot of problems there

00:07:28,330 --> 00:07:33,650
and now obviously as I say clouds that

00:07:31,700 --> 00:07:37,520
locks out a lot of other actions while

00:07:33,650 --> 00:07:39,170
that snapshots taking place there are

00:07:37,520 --> 00:07:43,400
some workarounds if people have put in

00:07:39,170 --> 00:07:45,050
things like asynchronous snapshots but

00:07:43,400 --> 00:07:46,790
they have their own issues because you

00:07:45,050 --> 00:07:49,610
tell clouds back oh I want to take a

00:07:46,790 --> 00:07:52,550
snapshot of this do asynchronously so

00:07:49,610 --> 00:07:55,030
you tell me yes I've done it as soon as

00:07:52,550 --> 00:07:56,900
the first snapshots taken and then

00:07:55,030 --> 00:08:00,980
asynchronously that gets door to

00:07:56,900 --> 00:08:02,780
secondary storage if you are wanting to

00:08:00,980 --> 00:08:05,870
create a template from that snapshot

00:08:02,780 --> 00:08:07,790
you're now hanging around thinking well

00:08:05,870 --> 00:08:09,230
you've told me you've finished this

00:08:07,790 --> 00:08:10,070
snapshot but I can't actually do it

00:08:09,230 --> 00:08:12,020
because you're telling me you're now

00:08:10,070 --> 00:08:13,460
backing up the snapshot well I'm

00:08:12,020 --> 00:08:14,810
matching no better off in fact I'm

00:08:13,460 --> 00:08:16,250
slightly worse because now I'm not sure

00:08:14,810 --> 00:08:18,980
what's going on I have to eat holding

00:08:16,250 --> 00:08:21,680
myself to find out that the backing up

00:08:18,980 --> 00:08:23,840
of that snapshots finished so you've

00:08:21,680 --> 00:08:28,700
kind of just in some cases just moved

00:08:23,840 --> 00:08:30,680
the problem somewhat and then there's

00:08:28,700 --> 00:08:34,669
the restoration of a virtual machine

00:08:30,680 --> 00:08:36,140
that you have created a snapshot from if

00:08:34,669 --> 00:08:38,479
that's what you're trying to do you take

00:08:36,140 --> 00:08:41,120
pray to this snapshot for the purposes

00:08:38,479 --> 00:08:42,800
of it being a backup oh well that

00:08:41,120 --> 00:08:45,950
presupposes at some point you're gonna

00:08:42,800 --> 00:08:46,940
want it back for some reason you can't

00:08:45,950 --> 00:08:49,220
under

00:08:46,940 --> 00:08:51,890
most circumstances just say I want that

00:08:49,220 --> 00:08:53,480
snapshot back as my VM and most of the

00:08:51,890 --> 00:08:55,730
time you're going to have to create a VM

00:08:53,480 --> 00:08:58,790
from that to snapshot I saw a template

00:08:55,730 --> 00:09:00,650
from that snapshot and then create a

00:08:58,790 --> 00:09:02,900
virtual machine from that template and

00:09:00,650 --> 00:09:04,640
when you start adding up how many times

00:09:02,900 --> 00:09:07,670
you have to move data around to do that

00:09:04,640 --> 00:09:09,800
it takes an awful lot of moving data

00:09:07,670 --> 00:09:11,570
bearing in mind it was slow enough the

00:09:09,800 --> 00:09:13,190
first time when you only did it once

00:09:11,570 --> 00:09:15,710
if you've got to move the data around

00:09:13,190 --> 00:09:20,210
three times it's gonna take there's

00:09:15,710 --> 00:09:22,520
three times as long and even then it's

00:09:20,210 --> 00:09:23,960
not the same VM because it will have

00:09:22,520 --> 00:09:26,330
different MAC addresses on its NICs

00:09:23,960 --> 00:09:30,040
because now it is a VM created from a

00:09:26,330 --> 00:09:35,300
template printed from that disk

00:09:30,040 --> 00:09:38,750
um so way back as you can see a couple

00:09:35,300 --> 00:09:41,090
of years ago this was annoying me enough

00:09:38,750 --> 00:09:43,760
that I actually created a wiki page and

00:09:41,090 --> 00:09:46,880
said these are the things I think we

00:09:43,760 --> 00:09:49,340
should be trying to achieve and rather

00:09:46,880 --> 00:09:51,710
than trying to make Baptist snapshots

00:09:49,340 --> 00:09:53,930
better we should just kind of pivot and

00:09:51,710 --> 00:09:55,910
say right we need backups we actually

00:09:53,930 --> 00:09:59,450
need backups to do what backups are

00:09:55,910 --> 00:10:01,580
supposed to do and then traded a listing

00:09:59,450 --> 00:10:05,600
for things I thought were required

00:10:01,580 --> 00:10:08,030
around that what I thought we needed and

00:10:05,600 --> 00:10:11,360
then we work with a couple of vendors

00:10:08,030 --> 00:10:13,160
and actually cloud providers to find out

00:10:11,360 --> 00:10:15,110
what they thought of that what they

00:10:13,160 --> 00:10:18,110
would like to see how they would try and

00:10:15,110 --> 00:10:20,750
drive these things and came up with that

00:10:18,110 --> 00:10:25,040
they are document which we then started

00:10:20,750 --> 00:10:26,890
work on so I keep calling it and the

00:10:25,040 --> 00:10:31,360
title keep saying backup recovery

00:10:26,890 --> 00:10:33,860
framework and the reason for that is

00:10:31,360 --> 00:10:35,300
there are a lot of different vendors out

00:10:33,860 --> 00:10:37,870
there and have different ways of doing

00:10:35,300 --> 00:10:42,140
things so what we're trying to do here

00:10:37,870 --> 00:10:44,540
initially is extract those those things

00:10:42,140 --> 00:10:47,330
take all the things that you would

00:10:44,540 --> 00:10:49,910
expect your backup solution to do and

00:10:47,330 --> 00:10:53,000
you would ask it to do extract that out

00:10:49,910 --> 00:10:57,920
and then create effectively the api's to

00:10:53,000 --> 00:11:00,829
do that so come on to what those api's

00:10:57,920 --> 00:11:03,290
but then behind that create the

00:11:00,829 --> 00:11:07,009
framework for plugins which would then

00:11:03,290 --> 00:11:10,670
interpret those api's into however any

00:11:07,009 --> 00:11:13,399
third-party backup solution is going to

00:11:10,670 --> 00:11:14,959
work so you've got the api's that are

00:11:13,399 --> 00:11:17,119
going to be completely consistent and

00:11:14,959 --> 00:11:20,389
abstracted from what the solution is in

00:11:17,119 --> 00:11:23,569
the background and the drivers to

00:11:20,389 --> 00:11:29,569
plugins to actually do that on what have

00:11:23,569 --> 00:11:33,009
you so operations are trying to do well

00:11:29,569 --> 00:11:35,480
as I say the challenge you've got is

00:11:33,009 --> 00:11:38,809
terminology tends to be very vendor

00:11:35,480 --> 00:11:41,149
specific so one vendor will call a

00:11:38,809 --> 00:11:44,509
backup is a job or someone will call it

00:11:41,149 --> 00:11:46,720
a chain it will have different names it

00:11:44,509 --> 00:11:49,699
gets that they've all got their own

00:11:46,720 --> 00:11:51,910
terminology and also different models of

00:11:49,699 --> 00:11:54,499
how they think backups are going to work

00:11:51,910 --> 00:11:58,519
what it's going to look like how you go

00:11:54,499 --> 00:12:02,600
about doing it and some of the vendors

00:11:58,519 --> 00:12:04,989
products are especially unfriendly to

00:12:02,600 --> 00:12:08,600
try and work with they come from real

00:12:04,989 --> 00:12:11,720
old-fashioned enterprise type constructs

00:12:08,600 --> 00:12:18,199
and don't play nicely with some of the

00:12:11,720 --> 00:12:22,629
api's with the concepts of what we want

00:12:18,199 --> 00:12:22,629
the multi-tenancy you need in in clouds

00:12:23,919 --> 00:12:29,540
another concept an idea look at is the

00:12:27,709 --> 00:12:34,129
idea of scheduled backups will that

00:12:29,540 --> 00:12:35,480
we've had that with snapshots ad hoc we

00:12:34,129 --> 00:12:38,779
have those with snapshots were just

00:12:35,480 --> 00:12:41,480
everywhere but also SLA based backups

00:12:38,779 --> 00:12:47,449
which is a whole kind of different

00:12:41,480 --> 00:12:51,829
concept that came in as particular when

00:12:47,449 --> 00:12:53,959
with this idea say the kind of the two

00:12:51,829 --> 00:12:55,399
don't really work together that they

00:12:53,959 --> 00:12:58,419
have a different contract and different

00:12:55,399 --> 00:13:02,419
idea and it's best to keep them separate

00:12:58,419 --> 00:13:05,629
but what is an SLA based backup

00:13:02,419 --> 00:13:09,440
well it's instead of saying I'm going to

00:13:05,629 --> 00:13:12,050
do a backup of my virtual machine ever

00:13:09,440 --> 00:13:14,330
11:30 every night

00:13:12,050 --> 00:13:15,920
you'll take turn around say well what

00:13:14,330 --> 00:13:18,620
I'm really saying is I don't want to

00:13:15,920 --> 00:13:21,680
lose more than 24 hours of data that is

00:13:18,620 --> 00:13:24,140
your restore point objectives 24 hours

00:13:21,680 --> 00:13:26,000
or less and it might be 8 hours it might

00:13:24,140 --> 00:13:29,810
be a week it depends what the virtual

00:13:26,000 --> 00:13:34,160
machine is dependable use cases so you

00:13:29,810 --> 00:13:36,170
create this policy or SLA or offering or

00:13:34,160 --> 00:13:38,150
whatever you want to call that and you

00:13:36,170 --> 00:13:40,820
say right so I have a restore point

00:13:38,150 --> 00:13:43,430
objective how how much they charge can

00:13:40,820 --> 00:13:45,020
afford to lose basically how long I'm

00:13:43,430 --> 00:13:48,070
going to keep that before it's just

00:13:45,020 --> 00:13:50,600
expired or expunged or retired and

00:13:48,070 --> 00:13:53,240
potentially a backup window that says

00:13:50,600 --> 00:13:56,270
well I have a lot of busy stuff going on

00:13:53,240 --> 00:13:58,340
in this particular time I know all the

00:13:56,270 --> 00:14:01,340
backups we have happening then I don't

00:13:58,340 --> 00:14:04,370
know that don't happening then but

00:14:01,340 --> 00:14:05,420
anytime between when I say obviou you

00:14:04,370 --> 00:14:08,720
know wants to do most people are gonna

00:14:05,420 --> 00:14:11,060
say ok well anytime between 8 o'clock in

00:14:08,720 --> 00:14:12,830
the evening and probably 6 a.m. in the

00:14:11,060 --> 00:14:14,060
morning I don't really care and that

00:14:12,830 --> 00:14:19,210
happens because nothing really happens

00:14:14,060 --> 00:14:22,220
in that window and it has some specific

00:14:19,210 --> 00:14:25,250
advantages the first one is for the

00:14:22,220 --> 00:14:27,380
operators themselves because rather than

00:14:25,250 --> 00:14:30,170
having thousands of jobs all being

00:14:27,380 --> 00:14:32,870
started at exactly the same time what

00:14:30,170 --> 00:14:34,850
you've now have is the ability to now

00:14:32,870 --> 00:14:37,010
schedule when them has happened yourself

00:14:34,850 --> 00:14:38,990
or hopefully your software's going to do

00:14:37,010 --> 00:14:40,280
that for you your backup software is

00:14:38,990 --> 00:14:42,980
going to say well I've got this amount

00:14:40,280 --> 00:14:45,290
the best what fit to get as much done as

00:14:42,980 --> 00:14:47,000
possible it's that one on there maybe

00:14:45,290 --> 00:14:48,440
it's looking across your state to say

00:14:47,000 --> 00:14:49,910
well this is going to that storage

00:14:48,440 --> 00:14:53,300
that's going to that so I can you those

00:14:49,910 --> 00:14:55,580
in parallel so all I could do each host

00:14:53,300 --> 00:14:57,500
one job at the time and then the next

00:14:55,580 --> 00:15:00,230
job and so you're getting proper

00:14:57,500 --> 00:15:01,490
powerless parallelism rather than a kind

00:15:00,230 --> 00:15:03,890
of well it's all over the place and

00:15:01,490 --> 00:15:07,940
actually I'm completely logged on locked

00:15:03,890 --> 00:15:12,080
up on this one the other advantage is a

00:15:07,940 --> 00:15:15,380
much simpler backup offering to

00:15:12,080 --> 00:15:17,120
customers your end users where instead

00:15:15,380 --> 00:15:17,630
you just say you can have gold silver or

00:15:17,120 --> 00:15:18,800
bronze

00:15:17,630 --> 00:15:20,660
take your pick we'll take

00:15:18,800 --> 00:15:23,450
care of everything else you just pick

00:15:20,660 --> 00:15:24,980
what it was and this is what it will

00:15:23,450 --> 00:15:28,220
cost you for that is question for that

00:15:24,980 --> 00:15:30,850
prostitute for that and say that is it

00:15:28,220 --> 00:15:33,800
that's it that that's the way this works

00:15:30,850 --> 00:15:35,810
certainly I know some of the cloud

00:15:33,800 --> 00:15:37,459
providers would like to go that way so

00:15:35,810 --> 00:15:39,769
you can't do your schedule you've got

00:15:37,459 --> 00:15:45,290
this is the option you've got and now

00:15:39,769 --> 00:15:48,579
everyone knows where they stand and I

00:15:45,290 --> 00:15:52,720
think lastly in the terminology stakes

00:15:48,579 --> 00:15:56,149
for people are kind of used to this it's

00:15:52,720 --> 00:15:59,209
fairly well known but basically as a VM

00:15:56,149 --> 00:16:01,250
has it has a life you create your do

00:15:59,209 --> 00:16:06,829
your backups and you're creating restore

00:16:01,250 --> 00:16:09,350
points and V equals that job and you

00:16:06,829 --> 00:16:10,880
just keep me running good job to create

00:16:09,350 --> 00:16:13,550
the restore points this is where we

00:16:10,880 --> 00:16:15,050
start getting into terminology if we

00:16:13,550 --> 00:16:17,260
started calling things jobs in the cloud

00:16:15,050 --> 00:16:20,410
stack Nolen

00:16:17,260 --> 00:16:23,600
DB as other things don't call them that

00:16:20,410 --> 00:16:27,200
so taking up backup as it creates that

00:16:23,600 --> 00:16:31,100
store point all just runs the job then

00:16:27,200 --> 00:16:33,790
you have a chain and you've got to think

00:16:31,100 --> 00:16:36,110
about containment for the score points

00:16:33,790 --> 00:16:41,990
for instance when I talk about the

00:16:36,110 --> 00:16:44,390
vagaries of different providers really

00:16:41,990 --> 00:16:46,160
doesn't have the idea of deleting a

00:16:44,390 --> 00:16:48,260
particular restore point and then

00:16:46,160 --> 00:16:50,839
frankly training a chain if you're going

00:16:48,260 --> 00:16:53,270
to delete something you you either tell

00:16:50,839 --> 00:16:54,770
us well I only want to keep two store

00:16:53,270 --> 00:16:56,480
points at which point the next time the

00:16:54,770 --> 00:16:59,060
job will go it will get me at the rest

00:16:56,480 --> 00:17:01,250
or you say I just want to do in Val

00:16:59,060 --> 00:17:01,959
Chang but you can't do something in the

00:17:01,250 --> 00:17:05,540
middle

00:17:01,959 --> 00:17:07,970
that's just healthy works and so that's

00:17:05,540 --> 00:17:10,040
why we especially why you kind of look

00:17:07,970 --> 00:17:11,990
at what terminology makes sense in

00:17:10,040 --> 00:17:14,870
general and don't have to do mapping in

00:17:11,990 --> 00:17:17,569
between and for delete that restore

00:17:14,870 --> 00:17:20,630
point basically we'd have to return that

00:17:17,569 --> 00:17:23,990
you can't do that actually what's nice

00:17:20,630 --> 00:17:26,839
is if you look into is on say the API

00:17:23,990 --> 00:17:28,079
discovery that Rohit been talking about

00:17:26,839 --> 00:17:31,740
if you have

00:17:28,079 --> 00:17:34,279
the plug-in we would have that well this

00:17:31,740 --> 00:17:36,840
delete restore point delete a particular

00:17:34,279 --> 00:17:38,610
backup wouldn't be available you just

00:17:36,840 --> 00:17:40,980
wouldn't see in the UI and she tried a

00:17:38,610 --> 00:17:43,200
new API you just get told you come so

00:17:40,980 --> 00:17:46,200
you know that's the way we'll have to

00:17:43,200 --> 00:17:49,830
work with that one other backup vendors

00:17:46,200 --> 00:17:51,870
will allow it and so it will be there so

00:17:49,830 --> 00:17:54,630
that's why it's a framework we're trying

00:17:51,870 --> 00:17:56,820
to separate the logical these are the

00:17:54,630 --> 00:17:58,260
things you're going to do from these are

00:17:56,820 --> 00:18:05,159
the things that the backup you've got

00:17:58,260 --> 00:18:09,360
can actually do so some practicalities

00:18:05,159 --> 00:18:12,269
said the I've kind of almost got that

00:18:09,360 --> 00:18:14,700
slide at the end in one place this has

00:18:12,269 --> 00:18:18,120
been designed to work with vim so we've

00:18:14,700 --> 00:18:20,370
done a V plugin we've also got a dummy

00:18:18,120 --> 00:18:25,049
plug-in so the testing the API can work

00:18:20,370 --> 00:18:28,200
but theme plug-in and that's the first

00:18:25,049 --> 00:18:29,539
the vendors will cover I think there are

00:18:28,200 --> 00:18:31,470
a few other bins that interest in

00:18:29,539 --> 00:18:34,110
basically they wait to see what this

00:18:31,470 --> 00:18:36,899
looks like before dumping in hopefully

00:18:34,110 --> 00:18:39,059
what will actually follow is cloud

00:18:36,899 --> 00:18:42,450
operators will say oh well it wasn't

00:18:39,059 --> 00:18:44,429
being we want to use X and then someone

00:18:42,450 --> 00:18:46,919
asks someone else will then develop the

00:18:44,429 --> 00:18:49,820
plug-in that does the same for that and

00:18:46,919 --> 00:18:53,039
then you'll have a whole suite of ways

00:18:49,820 --> 00:18:56,700
we were talking to the guys at store

00:18:53,039 --> 00:19:01,830
pool now they were actually from n

00:18:56,700 --> 00:19:05,519
storage safe like type storage idea but

00:19:01,830 --> 00:19:08,190
they can copy data pot off their storage

00:19:05,519 --> 00:19:11,010
into second there's some other form of

00:19:08,190 --> 00:19:12,690
strings well that's basically a backup

00:19:11,010 --> 00:19:14,760
and talking to them about well they can

00:19:12,690 --> 00:19:16,740
create their own plugin that will

00:19:14,760 --> 00:19:18,809
leverage all this and we say do about it

00:19:16,740 --> 00:19:22,100
back back up it's actually doing it

00:19:18,809 --> 00:19:25,980
entirely in their own storage back-end

00:19:22,100 --> 00:19:28,860
it was not really a store a backup

00:19:25,980 --> 00:19:32,940
vendor involved at all well that that's

00:19:28,860 --> 00:19:34,860
the Westin is designed to work so the

00:19:32,940 --> 00:19:41,059
first kind of thing we have to do here

00:19:34,860 --> 00:19:41,059
is you create the template jobs

00:19:41,419 --> 00:19:45,729
that's got a store stop actually I think

00:19:43,279 --> 00:19:48,559
I show what their store in a second and

00:19:45,729 --> 00:19:50,119
what we do on the class that side is

00:19:48,559 --> 00:19:53,210
linked to that job

00:19:50,119 --> 00:19:55,399
so in clouds that you may have actually

00:19:53,210 --> 00:19:57,919
on here given it a really long name that

00:19:55,399 --> 00:20:00,559
describes exactly what it is on cloud

00:19:57,919 --> 00:20:02,330
stack you could call it God and then

00:20:00,559 --> 00:20:04,869
it's linked to that job sometimes I want

00:20:02,330 --> 00:20:07,700
to use the gold policy in this case

00:20:04,869 --> 00:20:11,450
offering is going to be linked to that

00:20:07,700 --> 00:20:16,940
job and when using gold on this it will

00:20:11,450 --> 00:20:19,070
work from there it's the template so

00:20:16,940 --> 00:20:21,409
what you're doing in this template is

00:20:19,070 --> 00:20:23,659
for instance specifying right so this is

00:20:21,409 --> 00:20:26,450
but it's gonna do it every six hours

00:20:23,659 --> 00:20:28,789
some stuff about winning my new try and

00:20:26,450 --> 00:20:31,249
here's the kind of schedule bit so you

00:20:28,789 --> 00:20:32,749
might actually say between these hours

00:20:31,249 --> 00:20:33,649
you're not allowed to do it maybe

00:20:32,749 --> 00:20:35,809
there's a particular time when

00:20:33,649 --> 00:20:39,249
everyone's logging on so every six hours

00:20:35,809 --> 00:20:42,889
but not between the hours of 8:00 and

00:20:39,249 --> 00:20:44,450
10:00 so if you're the only ten thumb

00:20:42,889 --> 00:20:45,919
dick backups because everyone's logging

00:20:44,450 --> 00:20:46,849
on the system is going to be hit pretty

00:20:45,919 --> 00:20:48,499
hard

00:20:46,849 --> 00:20:50,210
I don't you're doing anything on back

00:20:48,499 --> 00:20:52,690
and then but the rest of the time knock

00:20:50,210 --> 00:20:52,690
yourself out

00:20:52,789 --> 00:21:02,059
and then anything else you're going to

00:20:56,090 --> 00:21:03,859
do now in terms of fees part of the job

00:21:02,059 --> 00:21:07,340
specifies where the data is going to be

00:21:03,859 --> 00:21:11,389
backed up to to supports a whole load of

00:21:07,340 --> 00:21:12,769
different things for me but obviously

00:21:11,389 --> 00:21:14,809
needs though and that's going to be

00:21:12,769 --> 00:21:18,859
different so they don't be a different

00:21:14,809 --> 00:21:21,649
template for each zone so that you don't

00:21:18,859 --> 00:21:24,769
start trying to back up from your system

00:21:21,649 --> 00:21:25,999
here to s3 storage here on the other

00:21:24,769 --> 00:21:27,889
side of the world because then you've

00:21:25,999 --> 00:21:31,309
kind of lost the advantage of trying to

00:21:27,889 --> 00:21:33,559
get so they're going to be specific to

00:21:31,309 --> 00:21:36,099
each zone most likely unless you have a

00:21:33,559 --> 00:21:39,499
nice cleverly global induced to be

00:21:36,099 --> 00:21:45,200
distributed s3 that makes it a little

00:21:39,499 --> 00:21:47,029
easy you can and there's some other

00:21:45,200 --> 00:21:48,740
little features that are in here and get

00:21:47,029 --> 00:21:52,610
consistency

00:21:48,740 --> 00:21:54,500
the application we're doing getting the

00:21:52,610 --> 00:21:57,020
file system to ultimately allow you to

00:21:54,500 --> 00:21:58,820
pull individual files back so actually

00:21:57,020 --> 00:22:00,740
inserting on this on this back and said

00:21:58,820 --> 00:22:05,230
well I want that file that was in there

00:22:00,740 --> 00:22:08,420
in the backup I did six weeks ago

00:22:05,230 --> 00:22:10,549
because it's extracted from clouds back

00:22:08,420 --> 00:22:12,890
this stuff trans fats are released know

00:22:10,549 --> 00:22:14,900
about all it knows is it's running that

00:22:12,890 --> 00:22:17,540
gold job and maybe the gold job includes

00:22:14,900 --> 00:22:19,790
this and the bronze job doesn't that

00:22:17,540 --> 00:22:25,370
that they're pretty doesn't matter to

00:22:19,790 --> 00:22:27,230
cloud stack that's been separated out in

00:22:25,370 --> 00:22:30,770
terms of the ad hoc and scheduled

00:22:27,230 --> 00:22:32,240
backups that's the case of clouds that

00:22:30,770 --> 00:22:34,490
just keep farming

00:22:32,240 --> 00:22:36,799
the job gets created and sits there

00:22:34,490 --> 00:22:38,990
cloud stacks just going to say right run

00:22:36,799 --> 00:22:42,650
that job and obviously in the same way

00:22:38,990 --> 00:22:43,940
as it does for scheduled snapshots when

00:22:42,650 --> 00:22:45,470
it hits that scheduled time for a

00:22:43,940 --> 00:22:48,620
snapshot instead it's gonna hit children

00:22:45,470 --> 00:22:52,700
time for a backup and fire that job and

00:22:48,620 --> 00:22:55,910
you get a nice timeline the reason go

00:22:52,700 --> 00:22:58,309
back to here the reason that you kind of

00:22:55,910 --> 00:23:03,530
have to keep ad hoc scheduled separate

00:22:58,309 --> 00:23:05,860
from the idea of policy is if you

00:23:03,530 --> 00:23:09,350
imagine another copy of this timeline

00:23:05,860 --> 00:23:10,970
yeah if you haven't loved the thing with

00:23:09,350 --> 00:23:15,049
sort of sore points in different place

00:23:10,970 --> 00:23:19,580
as soon as you restore back to so the

00:23:15,049 --> 00:23:22,250
one for your schedules here this doesn't

00:23:19,580 --> 00:23:23,750
make sense anymore because you're kind

00:23:22,250 --> 00:23:27,710
of midway between your store points and

00:23:23,750 --> 00:23:30,200
how can you get back the next backup it

00:23:27,710 --> 00:23:33,080
takes will go to here and it's it's not

00:23:30,200 --> 00:23:36,340
a logical link so that's why you have to

00:23:33,080 --> 00:23:36,340
keep on separate

00:23:37,640 --> 00:23:43,280
we've said in this case we will have a

00:23:41,060 --> 00:23:46,070
list of VM backups and beam things of

00:23:43,280 --> 00:23:49,670
these in terms of restore points of the

00:23:46,070 --> 00:23:52,040
VM image so using the API will basically

00:23:49,670 --> 00:24:00,730
be listening the restore points for any

00:23:52,040 --> 00:24:03,110
given VM and lastly in this bit bit

00:24:00,730 --> 00:24:05,960
restoration which is also again why you

00:24:03,110 --> 00:24:10,790
do the backup in the first place

00:24:05,960 --> 00:24:17,180
a vagary of vm with v restoring vm is

00:24:10,790 --> 00:24:24,580
that it's in place restoration is not in

00:24:17,180 --> 00:24:27,980
place of the original it's so you don't

00:24:24,580 --> 00:24:31,070
write over the original vm which will

00:24:27,980 --> 00:24:35,840
restore throught using vm v it creates a

00:24:31,070 --> 00:24:38,300
new vm which is of the from the back up

00:24:35,840 --> 00:24:40,040
and then destroys the original one and

00:24:38,300 --> 00:24:42,470
gives the new on the same name as the

00:24:40,040 --> 00:24:43,970
old which does mess around with a few

00:24:42,470 --> 00:24:46,700
bits and clouds that gets very upset

00:24:43,970 --> 00:24:48,710
about this VM has actually disappeared

00:24:46,700 --> 00:24:51,910
and I do have a new one with a new UID

00:24:48,710 --> 00:24:54,890
under the backup and that it can't find

00:24:51,910 --> 00:24:57,110
so then we have to ask cloud stack to go

00:24:54,890 --> 00:25:01,430
find it again and bring it back in and

00:24:57,110 --> 00:25:03,370
call it the same known fortunately this

00:25:01,430 --> 00:25:07,040
segues nicely into the idea of

00:25:03,370 --> 00:25:09,500
discovering a vm and bringing into cloud

00:25:07,040 --> 00:25:11,000
stack because effectively a new vm has

00:25:09,500 --> 00:25:15,650
appeared that we didn't know was there

00:25:11,000 --> 00:25:19,150
before so we had to write something to

00:25:15,650 --> 00:25:21,380
do that we then and it should be means

00:25:19,150 --> 00:25:24,410
if we do something at Christmas

00:25:21,380 --> 00:25:26,690
the next major release a vm ingestion

00:25:24,410 --> 00:25:29,720
feature which will have general purpose

00:25:26,690 --> 00:25:31,490
use for discovering on vmware at the

00:25:29,720 --> 00:25:36,290
moment but it's been written

00:25:31,490 --> 00:25:38,510
agnostically discovering VMs that are in

00:25:36,290 --> 00:25:40,790
the infrastructure that cloud stack

00:25:38,510 --> 00:25:42,980
isn't managing and bringing them into

00:25:40,790 --> 00:25:46,400
cloud stack so that you can now manage

00:25:42,980 --> 00:25:47,850
it so that was I kind of we could see

00:25:46,400 --> 00:25:49,830
that that was going to be

00:25:47,850 --> 00:25:51,570
90% we're going to have to do for this

00:25:49,830 --> 00:25:55,200
feature and we should roll it out as an

00:25:51,570 --> 00:25:57,140
individual feature as well and already

00:25:55,200 --> 00:26:01,679
in the current implementation you have

00:25:57,140 --> 00:26:03,630
restore volume and attach it to a VM so

00:26:01,679 --> 00:26:05,429
that if you've got a whole load of data

00:26:03,630 --> 00:26:08,520
you want to get back you said actually

00:26:05,429 --> 00:26:10,650
I'm going to recreate my my sequel

00:26:08,520 --> 00:26:13,410
server I just want to get the data out

00:26:10,650 --> 00:26:16,440
of the old one that died you can then

00:26:13,410 --> 00:26:19,650
get the backup map mounted into your new

00:26:16,440 --> 00:26:21,120
VM and then just copy which is the

00:26:19,650 --> 00:26:23,280
fastest way to get that data from one

00:26:21,120 --> 00:26:27,510
place to another just copy that data off

00:26:23,280 --> 00:26:33,179
because the the volume of restored is

00:26:27,510 --> 00:26:37,500
just mounted in the new VM so the actual

00:26:33,179 --> 00:26:40,049
api's have got so the configuration so

00:26:37,500 --> 00:26:42,330
from the operational side you're going

00:26:40,049 --> 00:26:45,390
to be able to list the backup providers

00:26:42,330 --> 00:26:47,340
and they're going to be the plugins

00:26:45,390 --> 00:26:50,370
basically that's been added into cloud

00:26:47,340 --> 00:26:52,380
stack you then we'll go up to go to

00:26:50,370 --> 00:26:56,580
those providers and list the offerings

00:26:52,380 --> 00:27:00,030
that they have in them so they're

00:26:56,580 --> 00:27:01,799
basically those templates then you want

00:27:00,030 --> 00:27:05,070
to import those offerings which is

00:27:01,799 --> 00:27:07,020
making the link between what cloud

00:27:05,070 --> 00:27:11,669
stacks going to call let's say gold and

00:27:07,020 --> 00:27:15,240
the zone one super great backup that

00:27:11,669 --> 00:27:17,909
runs every six hours and gives you an

00:27:15,240 --> 00:27:20,100
indexed filesystem and then we'll call

00:27:17,909 --> 00:27:21,299
it God in cloud stat but there's

00:27:20,100 --> 00:27:26,549
something that needs to make that link

00:27:21,299 --> 00:27:27,929
and that's how we do that then we also

00:27:26,549 --> 00:27:29,640
you need to be able to list those

00:27:27,929 --> 00:27:34,200
offerings you've created in cloud stack

00:27:29,640 --> 00:27:36,299
and delete that mapping if you need to

00:27:34,200 --> 00:27:39,840
so that's what they're kind of back in

00:27:36,299 --> 00:27:45,120
initial configuration would be operator

00:27:39,840 --> 00:27:49,320
side the user will have scheduled things

00:27:45,120 --> 00:27:51,510
that we have already as snapshots but

00:27:49,320 --> 00:27:54,290
we'll be able to create a standard lead

00:27:51,510 --> 00:27:57,030
and list your schedules you've got there

00:27:54,290 --> 00:28:00,350
then obviously the actual creation of a

00:27:57,030 --> 00:28:03,540
VM backup the listing and deleting

00:28:00,350 --> 00:28:06,120
remembering will have to do more special

00:28:03,540 --> 00:28:07,530
things around deleting for feed so for

00:28:06,120 --> 00:28:10,620
instance you won't be allowed to delete

00:28:07,530 --> 00:28:12,780
a anything other than basically the

00:28:10,620 --> 00:28:15,570
first backup which will delete the job

00:28:12,780 --> 00:28:19,080
you can't be an interim one because

00:28:15,570 --> 00:28:21,660
doesn't do that and that'll be the job

00:28:19,080 --> 00:28:23,280
of the plug-in to return that that when

00:28:21,660 --> 00:28:27,360
it sees we're trying to do something it

00:28:23,280 --> 00:28:29,580
can't do then you have these offerings

00:28:27,360 --> 00:28:32,220
these policies would have you want to

00:28:29,580 --> 00:28:34,020
call them the SLA based ideas you need

00:28:32,220 --> 00:28:36,210
to be able to assign a virtual machine

00:28:34,020 --> 00:28:39,030
to that and say I want that to have the

00:28:36,210 --> 00:28:41,820
gold offering and you want to be able to

00:28:39,030 --> 00:28:44,910
remove a VM from having that offering as

00:28:41,820 --> 00:28:47,550
well and then finally the storing your

00:28:44,910 --> 00:28:49,230
VM that's been backed up so that's just

00:28:47,550 --> 00:28:52,530
bringing the whole thing back and either

00:28:49,230 --> 00:28:55,170
replacing a VM that you have still but

00:28:52,530 --> 00:28:57,180
then these will be first-class citizens

00:28:55,170 --> 00:28:59,670
so if you've deleted the virtual machine

00:28:57,180 --> 00:29:02,730
but not deleted the backups you can

00:28:59,670 --> 00:29:05,480
still restore from the backup so until

00:29:02,730 --> 00:29:07,200
you delete that backup that will stay

00:29:05,480 --> 00:29:09,900
regardless of whether they need to

00:29:07,200 --> 00:29:11,580
determine that especially because it's a

00:29:09,900 --> 00:29:13,770
backup you deleted the family didn't

00:29:11,580 --> 00:29:16,800
mean to you and I still have the backup

00:29:13,770 --> 00:29:20,580
there and then restoring the volume from

00:29:16,800 --> 00:29:22,530
backup currently restores and connects

00:29:20,580 --> 00:29:25,440
to a VM and ask you which VM you want to

00:29:22,530 --> 00:29:27,450
mount it on we'll probably add something

00:29:25,440 --> 00:29:29,660
we can restore volume and put it in

00:29:27,450 --> 00:29:32,220
secondary storage where you can then

00:29:29,660 --> 00:29:34,020
move around copy it mount it on

00:29:32,220 --> 00:29:36,390
something if you want or just leave it

00:29:34,020 --> 00:29:45,390
there and delete the rest of the backups

00:29:36,390 --> 00:29:47,280
potentially so what it's working with we

00:29:45,390 --> 00:29:49,770
wrote it also there's a dummy plug-in

00:29:47,280 --> 00:29:52,380
that's just useful testing but the

00:29:49,770 --> 00:29:56,670
plug-in we've got was tested in VMware

00:29:52,380 --> 00:29:59,700
six the five annals written against that

00:29:56,670 --> 00:30:02,520
veem backup and replication I think it

00:29:59,700 --> 00:30:03,600
was the enterprise plus version to be

00:30:02,520 --> 00:30:08,040
able to duel

00:30:03,600 --> 00:30:10,350
you want and at a time it is for 12 or

00:30:08,040 --> 00:30:13,590
so you have for 13 coming so you may

00:30:10,350 --> 00:30:16,740
have to make sure test that there's no

00:30:13,590 --> 00:30:19,770
problem with that yeah these are the

00:30:16,740 --> 00:30:22,620
parts of being that requires the

00:30:19,770 --> 00:30:24,720
enterprise backup manager and the backup

00:30:22,620 --> 00:30:27,630
and replication console which are all

00:30:24,720 --> 00:30:30,000
part of enterprise plus I think rule

00:30:27,630 --> 00:30:33,090
setting should install OpenSSH and

00:30:30,000 --> 00:30:35,670
PowerShell on the VM server because

00:30:33,090 --> 00:30:38,880
there are some things you can't do over

00:30:35,670 --> 00:30:42,450
what there is of an API for the you

00:30:38,880 --> 00:30:45,330
actually have to PowerShell in and tell

00:30:42,450 --> 00:30:47,400
it to do things as I say some of that

00:30:45,330 --> 00:30:48,960
some of the vendors are not especially

00:30:47,400 --> 00:30:55,350
cloud friendly when you've got to do

00:30:48,960 --> 00:30:57,840
that and so finally where is it well

00:30:55,350 --> 00:31:01,740
there's a pull request there now what we

00:30:57,840 --> 00:31:03,120
found is this is an out front and when

00:31:01,740 --> 00:31:04,830
we put it together and then look today

00:31:03,120 --> 00:31:07,080
and start working with it we found out a

00:31:04,830 --> 00:31:11,340
load of things go that doesn't feel nice

00:31:07,080 --> 00:31:13,230
that kind of feels a bit clunky doesn't

00:31:11,340 --> 00:31:15,990
make sense for us to do that and do that

00:31:13,230 --> 00:31:21,480
some of the api's were a little found

00:31:15,990 --> 00:31:24,900
little too ravine centric so it's there

00:31:21,480 --> 00:31:27,480
and it physically works you can help VMs

00:31:24,900 --> 00:31:28,980
and get them back using it but we still

00:31:27,480 --> 00:31:33,270
wanna do some more work around that at

00:31:28,980 --> 00:31:36,440
the moment so I think our current plan

00:31:33,270 --> 00:31:40,410
we're going to separate those UI and API

00:31:36,440 --> 00:31:43,260
bits of the PR and work largely on the

00:31:40,410 --> 00:31:45,840
API bit to get back into the next

00:31:43,260 --> 00:31:48,480
release so we'll refactor those API

00:31:45,840 --> 00:31:52,410
parts from the lessons we've kind of

00:31:48,480 --> 00:31:55,680
learned by having a working it's a bit

00:31:52,410 --> 00:31:58,260
more than a PMC actually doing up doing

00:31:55,680 --> 00:32:03,000
everything but we'll take the lessons we

00:31:58,260 --> 00:32:05,160
learned there and apply those we've got

00:32:03,000 --> 00:32:07,350
finished settling it back up so you can

00:32:05,160 --> 00:32:10,680
do ad hoc ones you can do policy based

00:32:07,350 --> 00:32:14,490
ones I'm going to finish the scheduling

00:32:10,680 --> 00:32:15,680
ones and at some point figure people

00:32:14,490 --> 00:32:17,570
might want to change

00:32:15,680 --> 00:32:20,480
they had a gold back up and realize ah

00:32:17,570 --> 00:32:24,410
now I want a bronze back up instead and

00:32:20,480 --> 00:32:26,270
how we handled that transition from one

00:32:24,410 --> 00:32:29,420
type of job to another effectively a

00:32:26,270 --> 00:32:33,200
different job and the completion of the

00:32:29,420 --> 00:32:34,910
UI will kind of see if we raced through

00:32:33,200 --> 00:32:37,850
this maybe get UI stuff in the new

00:32:34,910 --> 00:32:39,980
version next version maybe not

00:32:37,850 --> 00:32:42,980
but our target is that make sure the API

00:32:39,980 --> 00:32:47,030
bit is merged in for the next version so

00:32:42,980 --> 00:32:49,130
it's all there a lot of cloud when they

00:32:47,030 --> 00:32:51,080
have their own portals so they wouldn't

00:32:49,130 --> 00:32:58,250
be worried about the UI piece and my

00:32:51,080 --> 00:33:00,890
genuinely but having a kind of rough UI

00:32:58,250 --> 00:33:03,620
as a separately up people can then still

00:33:00,890 --> 00:33:05,540
merge and do their own merging of that

00:33:03,620 --> 00:33:08,000
and have a package that has it in and

00:33:05,540 --> 00:33:10,610
then play that as a something that's not

00:33:08,000 --> 00:33:14,270
finished but we didn't want a partly

00:33:10,610 --> 00:33:16,730
finished UI for back and recovery going

00:33:14,270 --> 00:33:19,600
into a proper release it just you can't

00:33:16,730 --> 00:33:19,600
can't do that

00:33:19,660 --> 00:33:27,950
so we sort through that are there any

00:33:24,170 --> 00:33:47,630
questions I can answer around now way

00:33:27,950 --> 00:33:52,070
too keen yes Marcus themes for example

00:33:47,630 --> 00:33:54,590
agents and backup service and you not

00:33:52,070 --> 00:33:56,150
you can use to trigger you know an agent

00:33:54,590 --> 00:33:59,690
based backup so maybe you only care

00:33:56,150 --> 00:34:04,610
about certain files did you kind of go

00:33:59,690 --> 00:34:07,520
through the exercise like would would it

00:34:04,610 --> 00:34:09,710
work with the Provost yeah or do you

00:34:07,520 --> 00:34:11,710
thought about those abstractions there's

00:34:09,710 --> 00:34:15,590
no reason there's nothing to stop it

00:34:11,710 --> 00:34:19,820
doing anything so the API will be backup

00:34:15,590 --> 00:34:22,010
VM what that does after that is down to

00:34:19,820 --> 00:34:22,870
the plug-in so it could do absolutely

00:34:22,010 --> 00:34:26,230
anything

00:34:22,870 --> 00:34:29,650
yeah it could be really horrible SSH

00:34:26,230 --> 00:34:31,420
into the VM that you gave and pull stuff

00:34:29,650 --> 00:34:36,340
out you could have the most naughty

00:34:31,420 --> 00:34:37,750
horrible thing and yet you can use the

00:34:36,340 --> 00:34:39,940
expression bastard I'm not sure I don't

00:34:37,750 --> 00:34:42,790
have to say that you could mock up

00:34:39,940 --> 00:34:53,770
almost anything from behind that that's

00:34:42,790 --> 00:34:58,540
the idea it could create a new virtual

00:34:53,770 --> 00:35:02,860
machine and cloud stacking and yeah I

00:34:58,540 --> 00:35:05,080
was curious with the specific example

00:35:02,860 --> 00:35:07,720
you gave you mentioned this thing makes

00:35:05,080 --> 00:35:11,650
it in the air now yet learn why can't

00:35:07,720 --> 00:35:13,630
the plug-in implementation see that and

00:35:11,650 --> 00:35:16,750
then rename it to a cloud spec expensive

00:35:13,630 --> 00:35:17,890
or or just detective because you

00:35:16,750 --> 00:35:20,740
mentioned that you have some sort of

00:35:17,890 --> 00:35:22,630
discovery general discovery and haven't

00:35:20,740 --> 00:35:26,890
solved a bomb there I was wondering why

00:35:22,630 --> 00:35:30,220
can't restore a limitation that it could

00:35:26,890 --> 00:35:33,630
but it was and what effect early it is

00:35:30,220 --> 00:35:36,940
it's just leveraging a bigger you think

00:35:33,630 --> 00:35:39,370
yeah I think as I recall the main thing

00:35:36,940 --> 00:35:43,000
it's doing is finding the disk and so

00:35:39,370 --> 00:35:46,390
actually this disk has appeared it's in

00:35:43,000 --> 00:35:49,720
this storage pool and it's this size and

00:35:46,390 --> 00:35:53,320
basically creates those entries in the

00:35:49,720 --> 00:35:56,650
volumes table and then links that to the

00:35:53,320 --> 00:35:58,450
VM and takes out the old one so it's

00:35:56,650 --> 00:36:00,640
just remapping where the volume is

00:35:58,450 --> 00:36:03,940
effectively but it's got to do that it's

00:36:00,640 --> 00:36:06,190
got to create the v8 the volume in cloud

00:36:03,940 --> 00:36:09,250
stack and that's a concept that's never

00:36:06,190 --> 00:36:12,250
been there before of something exists

00:36:09,250 --> 00:36:14,110
outside a cloud stack and it's now in

00:36:12,250 --> 00:36:18,220
cloud stack as opposed to cloud stack

00:36:14,110 --> 00:36:19,990
creating itself and that's being

00:36:18,220 --> 00:36:22,870
abstracted out Abhishek's has been

00:36:19,990 --> 00:36:25,450
working on it I think the PRS pretty

00:36:22,870 --> 00:36:28,960
much ready to go we're in that we'll do

00:36:25,450 --> 00:36:30,610
that for the entire VM VM it has this

00:36:28,960 --> 00:36:32,250
many NICs this type of disk controller

00:36:30,610 --> 00:36:35,250
these

00:36:32,250 --> 00:36:37,200
many disks and then populates the cloud

00:36:35,250 --> 00:36:42,180
state database to match what was there

00:36:37,200 --> 00:36:45,060
and someone can start it stop it it's

00:36:42,180 --> 00:36:47,430
written it's been tested against VMware

00:36:45,060 --> 00:36:51,450
because and because it has to go read

00:36:47,430 --> 00:36:53,099
from V Center what things are they move

00:36:51,450 --> 00:36:56,369
to then write it for something else

00:36:53,099 --> 00:37:00,270
which is now only the ability to go read

00:36:56,369 --> 00:37:04,290
kvms you know virtually and get that

00:37:00,270 --> 00:37:06,329
domain X and out and populate that yeah

00:37:04,290 --> 00:37:08,760
but the actual putting into cloud stacks

00:37:06,329 --> 00:37:10,619
done it's now then just going reading

00:37:08,760 --> 00:37:15,720
those things that's what it's left to do

00:37:10,619 --> 00:37:18,089
for KVM then it's relatively small about

00:37:15,720 --> 00:37:20,579
work left to do that we'll get one in

00:37:18,089 --> 00:37:23,550
and then I soon will see a lot of

00:37:20,579 --> 00:37:26,270
appetite for KVM and others I'm the cool

00:37:23,550 --> 00:37:29,250
bit ver is where you start talking about

00:37:26,270 --> 00:37:31,260
shutting within down and then converting

00:37:29,250 --> 00:37:35,280
the disk and then bringing it in and

00:37:31,260 --> 00:37:38,310
then you've got all sorts of things

00:37:35,280 --> 00:37:39,750
another interesting V thing Venus it has

00:37:38,310 --> 00:37:42,000
it's Cloud Connect

00:37:39,750 --> 00:37:44,130
and basically what there you do is you

00:37:42,000 --> 00:37:46,740
take a whole load people have their for

00:37:44,130 --> 00:37:50,579
onboarding VMs if they happen to be

00:37:46,740 --> 00:37:54,030
using vim they can upload their backups

00:37:50,579 --> 00:37:55,410
to central place that clouds that would

00:37:54,030 --> 00:37:58,770
be able to see that the classic beam

00:37:55,410 --> 00:38:02,280
would see and then you can by doing that

00:37:58,770 --> 00:38:03,990
you've got a you know you only need to

00:38:02,280 --> 00:38:07,609
do it your final diff your final

00:38:03,990 --> 00:38:10,950
incremental update shut that one off and

00:38:07,609 --> 00:38:13,740
flex restore it into cloud stack and now

00:38:10,950 --> 00:38:16,290
you're onboarding from anywhere and it

00:38:13,740 --> 00:38:18,359
doesn't have to be geographically in the

00:38:16,290 --> 00:38:30,089
same place because you ain't doing these

00:38:18,359 --> 00:38:31,650
tiny little elementals wherever it came

00:38:30,089 --> 00:38:36,599
from and we'll just read the data of

00:38:31,650 --> 00:38:38,760
what it was so that the whole thing is a

00:38:36,599 --> 00:38:42,349
you know it kind of snowballs out you go

00:38:38,760 --> 00:38:42,349
out we do so much with this now

00:38:43,079 --> 00:39:09,460
yes yeah I mean what we're doing there

00:39:07,630 --> 00:39:11,230
you can use the same construct for

00:39:09,460 --> 00:39:13,030
anything with we've passed all the hard

00:39:11,230 --> 00:39:14,530
work and the thinking off

00:39:13,030 --> 00:39:18,270
we've offloaded that off cloud cloud

00:39:14,530 --> 00:39:20,200
stack is linking this offering to

00:39:18,270 --> 00:39:22,569
something else which then it will run

00:39:20,200 --> 00:39:24,670
and it's saying and it's linking on see

00:39:22,569 --> 00:39:26,410
the offering to the virtual machine and

00:39:24,670 --> 00:39:29,050
something else there's yeah there's no

00:39:26,410 --> 00:39:31,690
way you if you no problem with I guess

00:39:29,050 --> 00:39:34,089
you for the mountain virus that has I

00:39:31,690 --> 00:39:37,180
guess it needs to already have the agent

00:39:34,089 --> 00:39:40,839
honor on a VM but yes you could then

00:39:37,180 --> 00:39:44,770
attach that VM to the policy and then

00:39:40,839 --> 00:39:48,339
that pot and then it's up to the backend

00:39:44,770 --> 00:39:51,579
the plug-in to tell the antivirus now

00:39:48,339 --> 00:39:53,290
run here but we've offloaded that so the

00:39:51,579 --> 00:40:10,510
clever bit of deciding when would have

00:39:53,290 --> 00:40:12,579
to be in the third party thing which

00:40:10,510 --> 00:40:19,290
what in this yes where's the comes the

00:40:12,579 --> 00:40:21,430
construct of policies rather than solid

00:40:19,290 --> 00:40:24,369
specific schedules to be applied to

00:40:21,430 --> 00:40:28,089
anything we've Lim lived on his link the

00:40:24,369 --> 00:40:31,119
virtual machine to this policy and then

00:40:28,089 --> 00:40:34,119
the plugins told the backend right this

00:40:31,119 --> 00:40:36,579
VM need to have that policy applied to

00:40:34,119 --> 00:40:40,950
it whatever it is and that policy might

00:40:36,579 --> 00:40:44,520
be on the you might be telling antivirus

00:40:40,950 --> 00:40:47,010
system right it now has this antivirus

00:40:44,520 --> 00:40:49,630
although I want you to be running or

00:40:47,010 --> 00:40:52,830
whatever the thing you want to run is

00:40:49,630 --> 00:40:57,110
you've linked that be into it so the

00:40:52,830 --> 00:40:57,110
the construct the idea can be apply

00:40:58,070 --> 00:41:08,850
anyone else cool thank you very much

00:41:02,730 --> 00:41:11,570
everyone and obviously I should say as

00:41:08,850 --> 00:41:11,570

YouTube URL: https://www.youtube.com/watch?v=O6o8NmFRgMo


