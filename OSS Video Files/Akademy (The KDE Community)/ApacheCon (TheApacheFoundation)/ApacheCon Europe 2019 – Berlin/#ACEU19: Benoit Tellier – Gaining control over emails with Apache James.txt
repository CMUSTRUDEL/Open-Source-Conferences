Title: #ACEU19: Benoit Tellier – Gaining control over emails with Apache James
Publication date: 2019-10-29
Playlist: ApacheCon Europe 2019 – Berlin
Description: 
	More: https://aceu19.apachecon.com/session/gaining-control-over-emails-apache-james

Apache James is a highly customizable email server.

As part of this hands on workshop, we will cover how it can be used to not only perform inbound but also how it enables MDA advanced customization.

Discover the Mailet architecture and the potential of MailboxListeners.
Captions: 
	00:00:05,060 --> 00:00:11,879
okay so hi everyone my name is Benoit

00:00:09,780 --> 00:00:17,119
Turia and today we're gonna see together

00:00:11,879 --> 00:00:23,609
how we can get control of our email with

00:00:17,119 --> 00:00:28,380
Apache James so what is Apache James

00:00:23,609 --> 00:00:32,989
Apache James is email server developed

00:00:28,380 --> 00:00:37,320
within the Apache foundation it also

00:00:32,989 --> 00:00:40,250
hosts several libraries for working with

00:00:37,320 --> 00:00:45,390
email for example passing subscribes

00:00:40,250 --> 00:00:47,550
tossings on SPF for the King Records the

00:00:45,390 --> 00:00:49,410
inception year was in 2006

00:00:47,550 --> 00:00:52,470
I didn't need a mistake on the side I'm

00:00:49,410 --> 00:00:54,870
sorry around over the last year we had

00:00:52,470 --> 00:00:57,990
40 contributor on more than 2,000

00:00:54,870 --> 00:01:01,620
commits as part of Apache James we

00:00:57,990 --> 00:01:09,600
shipped some standard mail protocol like

00:01:01,620 --> 00:01:14,490
IMAP smtp LM TP pop3 manage SIV so James

00:01:09,600 --> 00:01:16,979
is intended to be highly customizable in

00:01:14,490 --> 00:01:18,840
mail server to offer you all the

00:01:16,979 --> 00:01:22,020
building blocks to be efficiently

00:01:18,840 --> 00:01:24,749
working with email so I'm gonna be

00:01:22,020 --> 00:01:31,829
covering in that talk all the mechanisms

00:01:24,749 --> 00:01:34,079
that allow us to achieve that target so

00:01:31,829 --> 00:01:39,259
something that I'm very proud about is

00:01:34,079 --> 00:01:42,060
also that we participated in the

00:01:39,259 --> 00:01:46,499
specification of the Jaina protocol

00:01:42,060 --> 00:01:49,499
within the IETF so gin up is a new

00:01:46,499 --> 00:01:55,229
protocol for doing kind of odd things

00:01:49,499 --> 00:01:57,780
over HTTP and JSON I'm not going to

00:01:55,229 --> 00:02:00,749
speak about it today but vast might be

00:01:57,780 --> 00:02:04,529
relevant for giving a bit of context

00:02:00,749 --> 00:02:08,910
about the project but the reason why I

00:02:04,529 --> 00:02:11,130
started working on James is because

00:02:08,910 --> 00:02:14,519
everything is based on api's and

00:02:11,130 --> 00:02:17,590
especially storage API s and we can

00:02:14,519 --> 00:02:21,019
easily implement

00:02:17,590 --> 00:02:25,069
there's AP is with the technologies we

00:02:21,019 --> 00:02:28,159
wanted and one target of the PMC is to

00:02:25,069 --> 00:02:30,349
provide a highly distributed email

00:02:28,159 --> 00:02:35,030
server that overcome the classic

00:02:30,349 --> 00:02:40,040
limitations of shouted email server we

00:02:35,030 --> 00:02:42,890
did that by implementing a mailbox and

00:02:40,040 --> 00:02:45,379
over storage API have a James relies on

00:02:42,890 --> 00:02:49,099
with distributed technologies like

00:02:45,379 --> 00:02:55,390
Cassandra object storage elasticsearch

00:02:49,099 --> 00:02:58,849
and RabbitMQ basically that is for

00:02:55,390 --> 00:03:05,530
context around the project so let's look

00:02:58,849 --> 00:03:08,420
a bit inside the guts of Apache James so

00:03:05,530 --> 00:03:12,440
we got protocol

00:03:08,420 --> 00:03:16,090
so James provides various protocol

00:03:12,440 --> 00:03:20,060
libraries that are agnostic so taking

00:03:16,090 --> 00:03:24,530
texting and text out and interacting

00:03:20,060 --> 00:03:28,849
with internal API of the Apache gem

00:03:24,530 --> 00:03:33,109
server so I receive an email it goes

00:03:28,849 --> 00:03:36,019
through the SMTP layer then we get it in

00:03:33,109 --> 00:03:39,470
the mail queue the mail spooler will get

00:03:36,019 --> 00:03:43,250
we made out of made queue and apply mail

00:03:39,470 --> 00:03:45,650
processing to it after that depending on

00:03:43,250 --> 00:03:50,090
the outcome of the mail processing

00:03:45,650 --> 00:03:52,400
pipeline we will apply an action to it

00:03:50,090 --> 00:03:55,549
which could be for example local

00:03:52,400 --> 00:03:59,450
deliveries which will store it into the

00:03:55,549 --> 00:04:01,849
user mailbox or for example remote

00:03:59,450 --> 00:04:05,510
delivery which resounded to another mail

00:04:01,849 --> 00:04:08,120
server and then after that another set

00:04:05,510 --> 00:04:10,639
of protocol will be interacting with the

00:04:08,120 --> 00:04:13,579
user mailbox so for example the IMAP

00:04:10,639 --> 00:04:20,630
service of a gem up service to allow the

00:04:13,579 --> 00:04:24,289
user reading his emails so the first

00:04:20,630 --> 00:04:26,870
thing that we have in James is that

00:04:24,289 --> 00:04:30,980
we've got a completely configurable and

00:04:26,870 --> 00:04:33,860
I hope understandable

00:04:30,980 --> 00:04:38,650
definition of the mail-processing so

00:04:33,860 --> 00:04:42,890
this is done through the mail at API so

00:04:38,650 --> 00:04:47,630
there's basically two entities when we

00:04:42,890 --> 00:04:50,750
are writing components for the mail at

00:04:47,630 --> 00:04:53,900
mail processing in James first one is

00:04:50,750 --> 00:04:57,470
mail ads which can be think as an action

00:04:53,900 --> 00:05:01,010
or modification of an email the matter

00:04:57,470 --> 00:05:09,800
which is the condition at which we apply

00:05:01,010 --> 00:05:13,130
the given action so the strength of it

00:05:09,800 --> 00:05:17,180
is that you've got a single XML file

00:05:13,130 --> 00:05:22,340
where you can define the order of the

00:05:17,180 --> 00:05:25,700
mail ads so it's a bit of a bunch of XML

00:05:22,340 --> 00:05:28,850
so you start the processing at the base

00:05:25,700 --> 00:05:32,720
of the root processor you will go from a

00:05:28,850 --> 00:05:39,710
letter to mail at playing there action

00:05:32,720 --> 00:05:46,160
if the matter is if the condition

00:05:39,710 --> 00:05:49,550
shipped in the matter is met so for

00:05:46,160 --> 00:05:52,850
example here we see for example in case

00:05:49,550 --> 00:05:55,130
of arrow we increment a metric for

00:05:52,850 --> 00:05:57,770
reporting that arrow so that we have

00:05:55,130 --> 00:06:00,650
some monitoring related to this we

00:05:57,770 --> 00:06:04,330
bounce back to the people that send via

00:06:00,650 --> 00:06:08,570
email and finally we will store it into

00:06:04,330 --> 00:06:11,510
a mail repository for later accessing it

00:06:08,570 --> 00:06:16,250
for example for debugging purposes or

00:06:11,510 --> 00:06:19,250
reprocessing purposes all the mail ads

00:06:16,250 --> 00:06:22,670
and mature so mail at and match Rocco by

00:06:19,250 --> 00:06:25,150
pair and they are organized in processor

00:06:22,670 --> 00:06:32,000
so you go from one pair to the next one

00:06:25,150 --> 00:06:34,190
until you meet a final operation so

00:06:32,000 --> 00:06:38,930
you've got complete control on the way

00:06:34,190 --> 00:06:41,720
you define your email processing

00:06:38,930 --> 00:06:43,790
where it starts being powerful it's that

00:06:41,720 --> 00:06:47,810
you can define your own mail ads and

00:06:43,790 --> 00:06:51,260
mattress bundle it's in a jar put it in

00:06:47,810 --> 00:06:55,220
the extension jar directory load it and

00:06:51,260 --> 00:06:58,070
have access for example you can call for

00:06:55,220 --> 00:07:00,320
example your beloved REST API for

00:06:58,070 --> 00:07:05,240
interacting with a separate system or

00:07:00,320 --> 00:07:08,270
you can have whatever you can implement

00:07:05,240 --> 00:07:12,490
whatever business logic interacting with

00:07:08,270 --> 00:07:12,490
mail processing with that framework

00:07:13,480 --> 00:07:21,260
inside your own components you can

00:07:16,840 --> 00:07:25,630
inject for example some API is defined

00:07:21,260 --> 00:07:25,630
by gems for example if I want to have

00:07:25,900 --> 00:07:31,790
mail add that is interacting with the

00:07:28,550 --> 00:07:37,730
mailbox I can just inject myself a

00:07:31,790 --> 00:07:43,870
mailbox manager in it so speaking about

00:07:37,730 --> 00:07:47,510
code the mail that is composed of one

00:07:43,870 --> 00:07:50,540
method that is very important it's the

00:07:47,510 --> 00:07:53,960
service method the service method takes

00:07:50,540 --> 00:07:57,410
an email and apply an action on it so

00:07:53,960 --> 00:07:59,930
the mail at is a side-effect you can

00:07:57,410 --> 00:08:03,860
modify the email that was passed as a

00:07:59,930 --> 00:08:06,800
parameter or you can do some other side

00:08:03,860 --> 00:08:13,520
effects for example here we are saying

00:08:06,800 --> 00:08:15,470
hello out to the system console so of

00:08:13,520 --> 00:08:18,080
course you can pass configuration

00:08:15,470 --> 00:08:20,300
parameter through the mail at here we

00:08:18,080 --> 00:08:26,570
pass the language in which we say hello

00:08:20,300 --> 00:08:29,030
to the user regarding matter so I just

00:08:26,570 --> 00:08:34,789
choose one of the most simple matter

00:08:29,030 --> 00:08:37,940
ever the matcher given an email will

00:08:34,789 --> 00:08:42,200
tell you the collection of recipients

00:08:37,940 --> 00:08:46,850
the action should be applied to so you

00:08:42,200 --> 00:08:49,730
can apply condition for only half of

00:08:46,850 --> 00:08:51,650
recipients of the email the way this is

00:08:49,730 --> 00:08:52,320
handled in the mail at pipeline is

00:08:51,650 --> 00:08:56,100
that's actually

00:08:52,320 --> 00:08:57,870
the mail will be split into one mail for

00:08:56,100 --> 00:09:00,300
which the action is applied and one over

00:08:57,870 --> 00:09:05,510
mail with the other half of a recipient

00:09:00,300 --> 00:09:05,510
for which the action is not applied

00:09:07,400 --> 00:09:17,520
so one thing we recently working on and

00:09:12,450 --> 00:09:23,520
that will be part of the next 3.5 James

00:09:17,520 --> 00:09:26,730
realism is custom injections so if I've

00:09:23,520 --> 00:09:29,790
got a custom API and the custom

00:09:26,730 --> 00:09:32,490
implementation on it can I be telling

00:09:29,790 --> 00:09:36,390
James to be binding my custom

00:09:32,490 --> 00:09:41,370
implementation make some interface with

00:09:36,390 --> 00:09:45,560
my custom implementation so that is

00:09:41,370 --> 00:09:48,300
something that we support currently

00:09:45,560 --> 00:09:51,510
maybe the mechanism is not clear or

00:09:48,300 --> 00:09:53,700
maybe the feature the NGO itself is

00:09:51,510 --> 00:09:58,020
really not clear that going to be more

00:09:53,700 --> 00:09:59,370
clear with the coding left coding that

00:09:58,020 --> 00:10:03,840
we cannot be having later

00:09:59,370 --> 00:10:08,370
so the injection framework that we are

00:10:03,840 --> 00:10:11,120
using in James is jusa so you can define

00:10:08,370 --> 00:10:14,340
a juice module where you buy an

00:10:11,120 --> 00:10:16,560
implementation to an interface and then

00:10:14,340 --> 00:10:19,080
in the configuration you just say that

00:10:16,560 --> 00:10:22,050
for your extensions you're going to be

00:10:19,080 --> 00:10:26,160
using that very module and when

00:10:22,050 --> 00:10:29,670
instantiating your implementation James

00:10:26,160 --> 00:10:32,730
will be creating a child injector with

00:10:29,670 --> 00:10:35,130
your extension loaded in it so you have

00:10:32,730 --> 00:10:38,130
no control on the component that are

00:10:35,130 --> 00:10:40,410
shipped inside James so you cannot

00:10:38,130 --> 00:10:45,270
overload for example the mailbox manager

00:10:40,410 --> 00:10:48,960
feature just for safety but you can very

00:10:45,270 --> 00:10:51,450
well define some additional interfaces

00:10:48,960 --> 00:10:55,730
and additional implementations that

00:10:51,450 --> 00:11:00,750
going to be used by your your custom

00:10:55,730 --> 00:11:03,480
extensions and then I can inject my

00:11:00,750 --> 00:11:07,850
interface in my mallet and we're going

00:11:03,480 --> 00:11:14,240
to be able to resolve the injection

00:11:07,850 --> 00:11:18,180
so recently we've been working on

00:11:14,240 --> 00:11:23,180
supporting more extensions one thing

00:11:18,180 --> 00:11:27,180
that we developed is extending the rest

00:11:23,180 --> 00:11:30,630
administration api for apache james so

00:11:27,180 --> 00:11:36,480
you can simply define your own endpoints

00:11:30,630 --> 00:11:43,889
in the web and rest web admin interface

00:11:36,480 --> 00:11:47,940
that james is defining another thing

00:11:43,889 --> 00:11:53,970
so until then great we've been doing

00:11:47,940 --> 00:11:57,329
inbound lot of private provider allow

00:11:53,970 --> 00:12:00,779
you to be doing inbound where we start

00:11:57,329 --> 00:12:03,740
being powerful is that we also allow at

00:12:00,779 --> 00:12:09,290
standing the mail delivery agent

00:12:03,740 --> 00:12:14,100
behavior so we are able to react to the

00:12:09,290 --> 00:12:16,500
user action in his mailbox the way this

00:12:14,100 --> 00:12:19,079
is do done is when you have an action

00:12:16,500 --> 00:12:21,720
for example storing an email you will

00:12:19,079 --> 00:12:25,290
synchronously modify the mailbox storage

00:12:21,720 --> 00:12:29,639
and a synchronously sending an event

00:12:25,290 --> 00:12:33,180
that will go on an even bus and you have

00:12:29,639 --> 00:12:37,949
mailbox listeners that receive the event

00:12:33,180 --> 00:12:43,800
and act upon it so here you have a quick

00:12:37,949 --> 00:12:45,240
list of events that you can use for an

00:12:43,800 --> 00:12:48,540
example of feature that can be

00:12:45,240 --> 00:12:51,209
implemented in with it we did

00:12:48,540 --> 00:12:54,180
spamassassin feedback when the user

00:12:51,209 --> 00:12:56,970
moves email in the spam mailbox when we

00:12:54,180 --> 00:13:00,209
report we give an email as spam to spam

00:12:56,970 --> 00:13:02,850
assassin and then the spam assassin

00:13:00,209 --> 00:13:05,279
melet's gonna be able to access the

00:13:02,850 --> 00:13:09,649
database of that very user and use his

00:13:05,279 --> 00:13:09,649
custom AI model

00:13:12,440 --> 00:13:20,820
and there is much much more AP is

00:13:17,090 --> 00:13:23,520
waiting for christen implementation so

00:13:20,820 --> 00:13:27,180
for example you have Mariposa Therese

00:13:23,520 --> 00:13:29,880
how do you store emails within the mail

00:13:27,180 --> 00:13:33,510
processing pipeline for example for spam

00:13:29,880 --> 00:13:36,090
for error that kind of thing

00:13:33,510 --> 00:13:38,880
we've got traditional hooks for taking

00:13:36,090 --> 00:13:40,980
actions synchronously before removal in

00:13:38,880 --> 00:13:42,660
case you want to copy v-mail somewhere

00:13:40,980 --> 00:13:46,080
that's better or not to do it in an even

00:13:42,660 --> 00:13:46,710
system that happens after email is

00:13:46,080 --> 00:13:51,000
deleted

00:13:46,710 --> 00:13:55,580
you have protocol hooks that allow you

00:13:51,000 --> 00:13:59,370
to define behaviors and the extent the

00:13:55,580 --> 00:14:02,760
set of command used by for example the

00:13:59,370 --> 00:14:06,740
SMTP and the pop3 protocol the IMAP

00:14:02,760 --> 00:14:11,820
implementation is not using the internal

00:14:06,740 --> 00:14:15,000
protocol server that we we've been

00:14:11,820 --> 00:14:18,300
shipping so you cannot crystallized IMAP

00:14:15,000 --> 00:14:21,300
that's the limitation and I'm really

00:14:18,300 --> 00:14:27,270
sure that I forgot plenty of little

00:14:21,300 --> 00:14:31,890
things that you can customize so here we

00:14:27,270 --> 00:14:34,980
are speaking of getting an Apache James

00:14:31,890 --> 00:14:41,510
and marginally modified is behavior by

00:14:34,980 --> 00:14:44,070
loading additional additional extensions

00:14:41,510 --> 00:14:47,910
James comes with an orthogonal

00:14:44,070 --> 00:14:50,660
architecture and the set of juice

00:14:47,910 --> 00:14:53,670
modules you can very well imagine

00:14:50,660 --> 00:14:56,040
defining your own product by combining

00:14:53,670 --> 00:15:01,290
the different juice module together I'm

00:14:56,040 --> 00:15:04,890
not going to cover that today but we are

00:15:01,290 --> 00:15:08,180
exposing to our user all of the building

00:15:04,890 --> 00:15:12,390
blocks to write their own mail server

00:15:08,180 --> 00:15:14,339
I've can for example take one proof of

00:15:12,390 --> 00:15:17,550
concept that we have in an integration

00:15:14,339 --> 00:15:20,550
test is a distributed SMTP server so you

00:15:17,550 --> 00:15:22,800
don't have a mailbox you don't have the

00:15:20,550 --> 00:15:25,500
mailbox listener event system etc etc

00:15:22,800 --> 00:15:29,460
you just get SMTP

00:15:25,500 --> 00:15:32,280
the core of user management and the maid

00:15:29,460 --> 00:15:35,990
processing and that's it so you are able

00:15:32,280 --> 00:15:43,200
to create your own main server using the

00:15:35,990 --> 00:15:48,360
various modules so here comes with

00:15:43,200 --> 00:15:50,370
practice so I've been thinking a lot

00:15:48,360 --> 00:15:57,540
about what we're going to be doing

00:15:50,370 --> 00:16:04,590
together and I thought that we need

00:15:57,540 --> 00:16:10,080
something that allows us to view many

00:16:04,590 --> 00:16:12,570
different interface in Apache James so

00:16:10,080 --> 00:16:18,750
the use case that I propose is a

00:16:12,570 --> 00:16:22,950
blacklist I say that for example spammer

00:16:18,750 --> 00:16:28,380
at any comm cannot send email to the

00:16:22,950 --> 00:16:33,390
user of my domains so basically what we

00:16:28,380 --> 00:16:37,140
gonna do is write an extension that will

00:16:33,390 --> 00:16:38,970
be composed of a matcher

00:16:37,140 --> 00:16:43,110
but they're going to be able to plug

00:16:38,970 --> 00:16:47,460
into the mail processing we do in Apache

00:16:43,110 --> 00:16:52,530
gems that matter will be interacting

00:16:47,460 --> 00:16:55,910
with per domain address blacklist API

00:16:52,530 --> 00:17:00,510
but for a given domain we'll say which

00:16:55,910 --> 00:17:03,090
addresses are blacklisted or not then

00:17:00,510 --> 00:17:05,790
we're going to need to implement our API

00:17:03,090 --> 00:17:07,530
and because we're going to be doing a

00:17:05,790 --> 00:17:11,010
quick proof of concept we're going to be

00:17:07,530 --> 00:17:13,800
using the memory gems server where all

00:17:11,010 --> 00:17:15,840
the storage is done in memory so we're

00:17:13,800 --> 00:17:19,230
gonna provide a memory proto main

00:17:15,840 --> 00:17:22,710
address blacklist and finally we're

00:17:19,230 --> 00:17:24,930
gonna need one other component for

00:17:22,710 --> 00:17:27,960
adding the entries we want in that

00:17:24,930 --> 00:17:32,490
blacklist so we're going to create a web

00:17:27,960 --> 00:17:38,470
Amin route for adding things in the in

00:17:32,490 --> 00:17:47,830
that blacklist are you in

00:17:38,470 --> 00:17:51,450
alright go for it so let's go to step

00:17:47,830 --> 00:17:54,970
one so I'm going to switch back in

00:17:51,450 --> 00:17:56,889
window mode sorry for the recording but

00:17:54,970 --> 00:18:01,500
we're gonna need to be writing a bit of

00:17:56,889 --> 00:18:05,169
code so here you have the github project

00:18:01,500 --> 00:18:07,210
so it puts all the example for this

00:18:05,169 --> 00:18:10,570
extension on github so that you can

00:18:07,210 --> 00:18:12,639
review it and you've got one branch per

00:18:10,570 --> 00:18:15,190
implementation step so if you don't

00:18:12,639 --> 00:18:21,220
succeed to do it at one step you can

00:18:15,190 --> 00:18:27,370
catch up the example later on so step

00:18:21,220 --> 00:18:34,379
one is given the API we're going to be

00:18:27,370 --> 00:18:34,379
writing a memory implementation of it so

00:18:35,159 --> 00:18:51,429
let's go and do that sorry wrong one up

00:18:47,730 --> 00:18:53,710
so what do we have here do you succeed

00:18:51,429 --> 00:19:00,899
to read on the screen what do I need to

00:18:53,710 --> 00:19:18,549
put a bigger front size you get bigger

00:19:00,899 --> 00:19:20,830
so it's window maybe of you sorry I

00:19:18,549 --> 00:19:23,860
gonna need to be looking a bit at my

00:19:20,830 --> 00:19:27,330
screen setting I gonna clone the screen

00:19:23,860 --> 00:19:27,330
so that's gonna be easier for me

00:19:29,260 --> 00:19:45,510
okay so you sorry view appearance

00:19:47,640 --> 00:19:55,540
appearance interpretation mode whoo

00:19:53,160 --> 00:20:01,870
thank you very much I was not aware of

00:19:55,540 --> 00:20:05,049
that so basically we're gonna need an

00:20:01,870 --> 00:20:07,150
interface that given a domain and an

00:20:05,049 --> 00:20:10,240
address we reference the address as

00:20:07,150 --> 00:20:13,630
blacklisted we unreferenced V address as

00:20:10,240 --> 00:20:16,210
blacklisted and so on and so on so we

00:20:13,630 --> 00:20:21,400
are able to add remove clear and list

00:20:16,210 --> 00:20:25,049
pretty easy so when I jump back here

00:20:21,400 --> 00:20:31,390
first thing that we need is to have

00:20:25,049 --> 00:20:36,910
private Milton app that is taking a

00:20:31,390 --> 00:20:44,620
domain and for a domain give us the set

00:20:36,910 --> 00:20:48,280
of addresses that that are actually

00:20:44,620 --> 00:20:52,980
blacklisted for that domain we need to

00:20:48,280 --> 00:20:59,100
have a constructor for this of course I

00:20:52,980 --> 00:20:59,100
need to initialize it's being and ante I

00:20:59,340 --> 00:21:15,360
can have a list multi maps maybe five I

00:21:05,200 --> 00:21:15,360
always forgot about quaver api melty map

00:21:15,690 --> 00:21:23,400
so new list multi map okay

00:21:27,330 --> 00:21:46,350
basically what we're gonna be doing is

00:21:37,480 --> 00:21:53,320
just add put the domain and the address

00:21:46,350 --> 00:22:05,130
into the multi map we're gonna do remove

00:21:53,320 --> 00:22:11,470
also remove the domain and the address

00:22:05,130 --> 00:22:18,580
up for clearing it when you just remove

00:22:11,470 --> 00:22:22,240
the domain key so remove all the entry

00:22:18,580 --> 00:22:31,680
for the domain that is specified and for

00:22:22,240 --> 00:22:31,680
the lists we just return the contents of

00:22:31,800 --> 00:22:38,910
the domain and because we like

00:22:35,530 --> 00:22:47,760
immutability we're gonna do an immutable

00:22:38,910 --> 00:22:51,040
copy of it okay and just have one little

00:22:47,760 --> 00:22:57,000
detail to be solving it's V initial is

00:22:51,040 --> 00:22:57,000
asian of this map I think

00:23:01,940 --> 00:23:13,290
it's matching up what is taking as a map

00:23:10,530 --> 00:23:20,550
of domains so we're gonna be passing it

00:23:13,290 --> 00:23:39,650
an immutable map that is empty it's

00:23:20,550 --> 00:23:48,690
taking us player so sorry how to be

00:23:39,650 --> 00:24:00,990
exciting this chick cheat mode so let's

00:23:48,690 --> 00:24:04,820
be not the right one to multi map

00:24:00,990 --> 00:24:09,140
synchronize multi map and ash multi map

00:24:04,820 --> 00:24:09,140
okay very sorry about that

00:24:10,370 --> 00:24:16,920
here we go - and they need to import

00:24:13,380 --> 00:24:20,990
that and then I can switch to my chest

00:24:16,920 --> 00:24:20,990
that I can run

00:24:29,219 --> 00:24:32,849
it's compelling

00:24:34,140 --> 00:24:46,380
and everything is working fine so from

00:24:39,450 --> 00:24:49,880
there we can go to our step two step two

00:24:46,380 --> 00:24:54,810
is we're gonna need to write a module

00:24:49,880 --> 00:24:57,930
saying that we bind our implementation

00:24:54,810 --> 00:25:02,790
to the memory implementation that we

00:24:57,930 --> 00:25:06,900
have just been writing so why do we need

00:25:02,790 --> 00:25:11,130
to bother here well very simple I want

00:25:06,900 --> 00:25:14,940
to be using my extension with all the

00:25:11,130 --> 00:25:18,690
backends that exist in Apache James thus

00:25:14,940 --> 00:25:22,740
I need to be doing it in a dynamic way

00:25:18,690 --> 00:25:25,410
so basically I want to be able to have

00:25:22,740 --> 00:25:27,990
the GPI implementation of it and

00:25:25,410 --> 00:25:31,560
Cassandra implementation of it and just

00:25:27,990 --> 00:25:34,770
choose the backend that I actually use

00:25:31,560 --> 00:25:40,140
for the extensions so that's why we need

00:25:34,770 --> 00:25:48,090
a generic binding for that so how do we

00:25:40,140 --> 00:25:50,640
do that we go in the memory blacklist

00:25:48,090 --> 00:25:57,000
module and we will just define the

00:25:50,640 --> 00:25:59,700
bindings for juice that we need so we're

00:25:57,000 --> 00:26:08,250
gonna invent in the memory predominant

00:25:59,700 --> 00:26:10,710
blacklist on as a singleton we do that

00:26:08,250 --> 00:26:12,780
because of course we need to have a

00:26:10,710 --> 00:26:16,440
single instance because it's in memory

00:26:12,780 --> 00:26:23,520
and then we just say that we bind the

00:26:16,440 --> 00:26:28,130
per domain address blacklister to the

00:26:23,520 --> 00:26:32,940
memory address blacklist implementation

00:26:28,130 --> 00:26:37,140
so from there I gonna be able to say in

00:26:32,940 --> 00:26:42,030
my configuration to James to be relying

00:26:37,140 --> 00:26:45,800
on this module for resolving if a Perl

00:26:42,030 --> 00:26:45,800
domain address blacklist class

00:26:48,830 --> 00:26:56,490
and here we go to step three which is

00:26:53,360 --> 00:27:04,130
the interesting one where we actually

00:26:56,490 --> 00:27:09,030
write the business logic of the Metro so

00:27:04,130 --> 00:27:11,640
it's not in blacklist mature which means

00:27:09,030 --> 00:27:15,690
that we're going to take all of the

00:27:11,640 --> 00:27:18,000
recipients and for their domain actually

00:27:15,690 --> 00:27:20,240
see if the center of the male is

00:27:18,000 --> 00:27:25,980
blacklisted or not

00:27:20,240 --> 00:27:28,680
so let's go so the male objects have a

00:27:25,980 --> 00:27:32,730
very convenient method allowing it to

00:27:28,680 --> 00:27:36,590
get the recipients they're gonna string

00:27:32,730 --> 00:27:45,180
the recipients and I gonna filter

00:27:36,590 --> 00:27:55,800
recipients so for recipients I'm gonna

00:27:45,180 --> 00:28:08,220
be looking at if the sender is

00:27:55,800 --> 00:28:11,640
blacklisted so I need to access the

00:28:08,220 --> 00:28:17,930
center so I can of course do that

00:28:11,640 --> 00:28:23,910
by the get center here we have a little

00:28:17,930 --> 00:28:28,980
design and legacy and API concern it's

00:28:23,910 --> 00:28:31,590
that in SMTP you can very well specify a

00:28:28,980 --> 00:28:34,710
center that is no so you just have

00:28:31,590 --> 00:28:39,510
double bracket and nothing inside you

00:28:34,710 --> 00:28:41,520
know that nu is the root of all evil the

00:28:39,510 --> 00:28:45,300
billion dollar dollar mistake and we did

00:28:41,520 --> 00:28:48,960
that here so we never knew in when

00:28:45,300 --> 00:28:52,190
interacting with an email address if it

00:28:48,960 --> 00:28:55,560
was possible to get the new Center case

00:28:52,190 --> 00:29:08,810
so basically we just strong typed it so

00:28:55,560 --> 00:29:08,810
that's why we get the maybe Center class

00:29:12,460 --> 00:29:29,649
so first thing is if the maybe sender is

00:29:22,200 --> 00:29:33,820
not here then I can return directly

00:29:29,649 --> 00:29:37,450
I will return directly the recipient of

00:29:33,820 --> 00:29:40,480
the mails so very likely this is

00:29:37,450 --> 00:29:43,419
postmaster or some local addresses

00:29:40,480 --> 00:29:46,200
because you can configure some mail adds

00:29:43,419 --> 00:29:50,320
higher in the pipeline that reject

00:29:46,200 --> 00:29:54,249
remote no server and then I am able to

00:29:50,320 --> 00:30:00,269
be having a mail address that is the

00:29:54,249 --> 00:30:05,649
sender and I can do maybe Center dot get

00:30:00,269 --> 00:30:13,210
not the most beautiful up and I will

00:30:05,649 --> 00:30:26,980
create a method let's take a recipient

00:30:13,210 --> 00:30:30,909
and the sender okay and that tells me if

00:30:26,980 --> 00:30:35,619
the sender is blacklisted at that point

00:30:30,909 --> 00:30:42,820
I will need to have access to my proto

00:30:35,619 --> 00:30:46,480
main address blacklist and I will need

00:30:42,820 --> 00:30:54,690
to resolve to injected so I had the

00:30:46,480 --> 00:30:54,690
construct of parameter for it and I

00:30:54,809 --> 00:31:04,840
gonna inject it simply like that so here

00:31:00,159 --> 00:31:09,249
are going to be able to take my black

00:31:04,840 --> 00:31:13,240
list list the entries that are removed

00:31:09,249 --> 00:31:17,980
for the given domain and are going to be

00:31:13,240 --> 00:31:23,700
using the domain of recipients and are

00:31:17,980 --> 00:31:23,700
going to see if it contains the sender

00:31:26,490 --> 00:31:31,720
maybe not the most optimized

00:31:29,559 --> 00:31:35,769
implementation but let's keep things

00:31:31,720 --> 00:31:39,669
simple so now I've got my recipients and

00:31:35,769 --> 00:31:45,129
I want to keep the ones that are not

00:31:39,669 --> 00:31:59,850
blacklisted then from there I collect

00:31:45,129 --> 00:31:59,850
them and they just return them okay

00:32:00,430 --> 00:32:11,490
is that clear good following not falling

00:32:04,870 --> 00:32:15,250
asleep looking at some code nice so then

00:32:11,490 --> 00:32:19,950
I'm gonna see if we pass the tests

00:32:15,250 --> 00:32:21,809
regarding that so there's our unit tests

00:32:19,950 --> 00:32:25,720
awesome

00:32:21,809 --> 00:32:29,970
so basically we are instance eating a

00:32:25,720 --> 00:32:33,700
fake context for our matcher and we just

00:32:29,970 --> 00:32:44,140
run some unit tests on top of that

00:32:33,700 --> 00:32:46,270
matter okay let's get to step four we

00:32:44,140 --> 00:32:50,679
still get 20 minutes so hopefully I will

00:32:46,270 --> 00:32:59,110
be able to make it so in step four we

00:32:50,679 --> 00:33:03,910
write our own administration API so then

00:32:59,110 --> 00:33:09,370
I will go in the blackest routes so I've

00:33:03,910 --> 00:33:15,280
got an HTTP service that is defined I'm

00:33:09,370 --> 00:33:21,400
able for example to define a get on base

00:33:15,280 --> 00:33:28,750
path plus I want to get things for a

00:33:21,400 --> 00:33:33,070
given domain so I've got a request and a

00:33:28,750 --> 00:33:36,630
response okay and I'm able to write

00:33:33,070 --> 00:33:37,750
what's actually gonna be happening oh

00:33:36,630 --> 00:33:41,130
here

00:33:37,750 --> 00:33:45,720
of course I'm gonna need to have access

00:33:41,130 --> 00:33:45,720
to my API

00:33:52,909 --> 00:34:02,390
but they can inject and

00:34:05,600 --> 00:34:16,410
there are going to be able to get the

00:34:08,190 --> 00:34:21,690
requests and going to get the domain

00:34:16,410 --> 00:34:37,940
parameter so I need to have a domain out

00:34:21,690 --> 00:34:49,170
of it and now I go I can return the

00:34:37,940 --> 00:34:51,990
black list of that domain what else do

00:34:49,170 --> 00:34:57,380
you need we need we need to be able to

00:34:51,990 --> 00:35:01,140
put some things in our black lists so

00:34:57,380 --> 00:35:04,280
I'm going to put a domain and a black

00:35:01,140 --> 00:35:04,280
listed recipients

00:35:11,269 --> 00:35:14,269
okay

00:35:23,140 --> 00:35:47,420
so it can get forums of the recipients

00:35:34,700 --> 00:35:58,130
and then in there I just put the

00:35:47,420 --> 00:36:00,530
recipients into the blacklist and return

00:35:58,130 --> 00:36:03,800
nothing sorry this is a bit dirty but

00:36:00,530 --> 00:36:05,990
I'm coping with the time time schedule

00:36:03,800 --> 00:36:10,490
in here okay

00:36:05,990 --> 00:36:16,390
so let's see if we pass the tests so I

00:36:10,490 --> 00:36:28,160
did not implemented some of some of the

00:36:16,390 --> 00:36:33,280
functionalities okay so I think that so

00:36:28,160 --> 00:36:33,280
I did not implement DITA I did not

00:36:36,100 --> 00:36:48,520
what is going on here the implemented we

00:36:42,230 --> 00:36:59,900
put and we are returning if the wrong

00:36:48,520 --> 00:37:03,770
content type of a wrong code okay we

00:36:59,900 --> 00:37:08,300
have a JSON generation issue let's solve

00:37:03,770 --> 00:37:10,670
that that looks like problem so here I'm

00:37:08,300 --> 00:37:16,400
returning a list of email address James

00:37:10,670 --> 00:37:18,770
don't know how to be defining it in JSON

00:37:16,400 --> 00:37:21,710
so you can define your own response

00:37:18,770 --> 00:37:23,750
object with a JSON annotation in that I

00:37:21,710 --> 00:37:28,340
don't have time so we aren't going to do

00:37:23,750 --> 00:37:32,390
that we just gonna simply map that into

00:37:28,340 --> 00:37:34,030
string so we're going to be using the a

00:37:32,390 --> 00:37:41,310
string and we gonna call

00:37:34,030 --> 00:37:41,310
like that into a list that should be

00:37:44,100 --> 00:37:48,270
solving our issue

00:37:55,750 --> 00:37:58,950
oh here we go

00:38:03,690 --> 00:38:15,660
apparently not look sorry sorry sorry so

00:38:12,660 --> 00:38:15,660
okay

00:38:23,829 --> 00:38:29,800
everyone I'm sorry I'm using always

00:38:26,940 --> 00:38:31,960
buttons when I'm coding so and must be

00:38:29,800 --> 00:38:34,480
hopeful to be following that let's

00:38:31,960 --> 00:38:36,369
switch back to the test if I don't

00:38:34,480 --> 00:38:40,030
succeed to solve it that time then I

00:38:36,369 --> 00:38:46,480
gonna just copy and paste some stuff

00:38:40,030 --> 00:38:48,250
okay we just have the status code being

00:38:46,480 --> 00:38:51,640
wrong I'm not gonna fix that I don't

00:38:48,250 --> 00:38:55,810
think that it is essential so let's

00:38:51,640 --> 00:38:59,890
switch to the next step of our awesome

00:38:55,810 --> 00:39:05,200
life coding which is considering its

00:38:59,890 --> 00:39:06,970
inside James so for that I'm gonna going

00:39:05,200 --> 00:39:11,230
to be cheating a bit because I've got a

00:39:06,970 --> 00:39:13,570
configuration that saver somewhere but

00:39:11,230 --> 00:39:16,450
I'm gonna explain you various part of

00:39:13,570 --> 00:39:24,839
the configuration because that's what is

00:39:16,450 --> 00:39:28,150
important to us so it's way too small

00:39:24,839 --> 00:39:32,160
sorry and keep switching windows of the

00:39:28,150 --> 00:39:38,440
time don't know how to be exiting that

00:39:32,160 --> 00:39:42,460
presentation mode P runs up exit

00:39:38,440 --> 00:39:49,990
presentation mode cool we still keep the

00:39:42,460 --> 00:39:55,270
big okay so the first thing that I gonna

00:39:49,990 --> 00:39:57,460
do is I gonna compile on things I'm

00:39:55,270 --> 00:39:59,260
gonna skip the test because I know that

00:39:57,460 --> 00:40:03,180
I've got some tests that are not working

00:39:59,260 --> 00:40:06,660
in web admin because I did that way too

00:40:03,180 --> 00:40:06,660
way too fast

00:40:12,690 --> 00:40:18,180
if I run that in the root of a project

00:40:15,569 --> 00:40:21,630
that going to be better and from there I

00:40:18,180 --> 00:40:24,510
gonna generate free JA with dependencies

00:40:21,630 --> 00:40:27,200
one jar with dependency containing the

00:40:24,510 --> 00:40:30,480
matter one jar with dependency

00:40:27,200 --> 00:40:33,150
containing the memory implementation and

00:40:30,480 --> 00:40:36,450
the module for the binding and one job

00:40:33,150 --> 00:40:39,480
with dependency containing the web and

00:40:36,450 --> 00:40:41,299
min declaration by putting those three

00:40:39,480 --> 00:40:47,490
things together

00:40:41,299 --> 00:41:01,940
textile by putting these three things

00:40:47,490 --> 00:41:01,940
together gonna be able to fix that so

00:41:02,359 --> 00:41:16,710
let's look at the configuration while we

00:41:13,049 --> 00:41:22,010
are at it so you're gonna create in the

00:41:16,710 --> 00:41:31,559
demo folder a configuration folder and

00:41:22,010 --> 00:41:32,750
somewhere I should have confidence a I

00:41:31,559 --> 00:41:39,779
don't have it

00:41:32,750 --> 00:41:42,650
all right you're gonna be switching to

00:41:39,779 --> 00:41:53,210
the branch which is not done in a hurry

00:41:42,650 --> 00:41:53,210
I ask you for forbidding me about that

00:41:54,740 --> 00:42:09,390
and let's be switching to the branch

00:41:58,200 --> 00:42:11,190
that is working so I've got here we come

00:42:09,390 --> 00:42:14,569
back to the same issue that's way too

00:42:11,190 --> 00:42:14,569
small for you to see that

00:42:20,680 --> 00:42:40,040
in window you give you view window

00:42:32,570 --> 00:42:42,680
active okay view appearance but I don't

00:42:40,040 --> 00:42:59,750
have access to the side though if I'm in

00:42:42,680 --> 00:43:01,070
presentation mode and okay let's try to

00:42:59,750 --> 00:43:04,790
do it with that

00:43:01,070 --> 00:43:11,060
so the first configuration file that we

00:43:04,790 --> 00:43:14,420
got here is the binding definition we

00:43:11,060 --> 00:43:20,990
say that we want to be using the memory

00:43:14,420 --> 00:43:24,980
blacklist module inside our gen server

00:43:20,990 --> 00:43:29,270
for creating our extensions so that's

00:43:24,980 --> 00:43:35,300
how we register it and the interesting

00:43:29,270 --> 00:43:37,730
part happens in the mail at container

00:43:35,300 --> 00:43:41,420
dot XML file

00:43:37,730 --> 00:43:44,020
so basically when we receive an email it

00:43:41,420 --> 00:43:49,450
gonna be starting at the beginning of

00:43:44,020 --> 00:43:53,630
the route processor so we're gonna check

00:43:49,450 --> 00:43:56,210
advert postmaster alias if needed check

00:43:53,630 --> 00:43:59,030
the relay limit so seeing that we are

00:43:56,210 --> 00:44:03,200
not looping on an email in the mail

00:43:59,030 --> 00:44:07,280
processing and after that we gonna apply

00:44:03,200 --> 00:44:10,310
for males that are not in the blacklist

00:44:07,280 --> 00:44:12,860
we're gonna send them to the transport

00:44:10,310 --> 00:44:17,090
protocol where all the delivery logic

00:44:12,860 --> 00:44:19,780
actually happened for emails that are in

00:44:17,090 --> 00:44:24,470
the blacklist we will be able to pass

00:44:19,780 --> 00:44:30,430
skip that go to instruction and we're

00:44:24,470 --> 00:44:30,430
gonna send them to the black listed

00:44:31,140 --> 00:44:37,650
mail repository so that we are able to

00:44:34,539 --> 00:44:40,650
see the emails that were blacklisted is

00:44:37,650 --> 00:44:42,940
that clear

00:44:40,650 --> 00:44:48,400
awesome

00:44:42,940 --> 00:45:04,690
and finally we register our extension

00:44:48,400 --> 00:45:07,530
root for web and min so when I use we

00:45:04,690 --> 00:45:11,619
remain five minutes of presentation

00:45:07,530 --> 00:45:15,369
let's try to do that so I gonna start

00:45:11,619 --> 00:45:20,020
yeah and I forgot to tell you I got in

00:45:15,369 --> 00:45:21,510
the extension jaws folder the three jars

00:45:20,020 --> 00:45:27,450
with dependencies

00:45:21,510 --> 00:45:32,980
that correspond to the three part of my

00:45:27,450 --> 00:45:35,770
extension though I start a docker

00:45:32,980 --> 00:45:37,720
container so I added to volume one for

00:45:35,770 --> 00:45:48,779
the configuration one for the extension

00:45:37,720 --> 00:45:48,779
jars so we just look at blogs loud

00:45:52,910 --> 00:46:04,490
and not in the demo folder so of course

00:45:59,360 --> 00:46:12,710
I don't have my configuration if I go in

00:46:04,490 --> 00:46:19,850
the demo folder and relaunch that and I

00:46:12,710 --> 00:46:24,440
look at the logs I've got everything

00:46:19,850 --> 00:46:29,000
that is started normally from there are

00:46:24,440 --> 00:46:33,760
going to be adding a domain so I'm going

00:46:29,000 --> 00:46:33,760
to be managing the domain that TLD

00:46:35,260 --> 00:46:47,690
domain are going to be adding user

00:46:40,450 --> 00:46:52,160
through the CLI and I gonna put someone

00:46:47,690 --> 00:46:59,380
in the black list so Center at spammer

00:46:52,160 --> 00:47:08,870
comm will go in the black list and then

00:46:59,380 --> 00:47:11,120
if I look at the black list content it

00:47:08,870 --> 00:47:11,860
contains my spammer come this is

00:47:11,120 --> 00:47:17,030
expected

00:47:11,860 --> 00:47:18,910
ok around them we've got a recipient

00:47:17,030 --> 00:47:23,180
we've got a center that is blacklisted

00:47:18,910 --> 00:47:30,430
let's be sending some email so I'm

00:47:23,180 --> 00:47:43,490
sending email for spanner calm so it's a

00:47:30,430 --> 00:47:52,540
mail from Center at spammer calm I'm

00:47:43,490 --> 00:47:55,540
sending it to the recipient at domain

00:47:52,540 --> 00:47:55,540
that's

00:47:58,300 --> 00:48:04,259
going to be sending a very simple email

00:48:01,550 --> 00:48:11,940
with a subject

00:48:04,259 --> 00:48:14,789
that is black listed and here goes the

00:48:11,940 --> 00:48:19,769
body this is an email is in its most

00:48:14,789 --> 00:48:23,729
simple form and let's send it the data

00:48:19,769 --> 00:48:31,769
is received I can quit and I will be

00:48:23,729 --> 00:48:37,999
sending an over email from spanner calm

00:48:31,769 --> 00:48:37,999
at this time that will be a mail from

00:48:38,690 --> 00:48:54,140
someone else at spinner.com are gonna be

00:48:46,440 --> 00:49:00,150
sending it also to recipients at

00:48:54,140 --> 00:49:03,949
spinner.com let's be sending some data

00:49:00,150 --> 00:49:03,949
so this one

00:49:05,549 --> 00:49:14,130
no recipients relaying it denied I'm

00:49:11,569 --> 00:49:16,859
stupid and very sorry are gonna quit

00:49:14,130 --> 00:49:19,349
that SMTP session and start again and

00:49:16,859 --> 00:49:24,079
put the right domain so it's because

00:49:19,349 --> 00:49:28,559
we've got SMTP hook that is rejecting

00:49:24,079 --> 00:49:32,999
recipients for non-local Center so some

00:49:28,559 --> 00:49:38,489
security against relaying so let's go

00:49:32,999 --> 00:49:47,640
against sound from tomorrow calm it's a

00:49:38,489 --> 00:49:53,130
mail from and over at spanner dot-com up

00:49:47,640 --> 00:50:00,390
I'm writing it this time to recipients

00:49:53,130 --> 00:50:06,630
at the main dot TLD up system it's valid

00:50:00,390 --> 00:50:10,949
sending some data so in the subject this

00:50:06,630 --> 00:50:16,640
may should not be blocked and it

00:50:10,949 --> 00:50:16,640
contains some data poof here we go

00:50:16,700 --> 00:50:31,170
so now let's first check the blacklisted

00:50:25,710 --> 00:50:34,410
mail repository we see that we have one

00:50:31,170 --> 00:50:35,520
email in the main repository so I'm

00:50:34,410 --> 00:50:38,100
sorry I'm a bit late for the

00:50:35,520 --> 00:50:41,130
presentation so it just need one more

00:50:38,100 --> 00:50:43,970
minute to be doing a telnet exchange

00:50:41,130 --> 00:50:49,470
that we're gonna check the Mail's for

00:50:43,970 --> 00:50:55,140
recipients at domaine de TI D so I log

00:50:49,470 --> 00:50:59,520
in I select VIN box and I fetch the

00:50:55,140 --> 00:51:07,130
headers and I see that I've got to not

00:50:59,520 --> 00:51:07,130
blocked message so here we are for the

00:51:09,050 --> 00:51:15,180
live coding we did virtual time maybe

00:51:13,320 --> 00:51:17,280
not with what I just developed but

00:51:15,180 --> 00:51:18,840
that's supposed to be very close I'm

00:51:17,280 --> 00:51:20,400
sorry that's the first time I do some

00:51:18,840 --> 00:51:23,820
live coding so that's a bunch of

00:51:20,400 --> 00:51:26,430
pressure if you've got any question I

00:51:23,820 --> 00:51:28,859
can answer it during the few time until

00:51:26,430 --> 00:51:31,380
the next speaker come I guess

00:51:28,859 --> 00:51:34,880
otherwise don't hesitate to ask me

00:51:31,380 --> 00:51:38,430
anything you want about Apache James

00:51:34,880 --> 00:51:44,370
will be here this afternoon but I will

00:51:38,430 --> 00:51:50,170
not be able to be here tomorrow yeah

00:51:44,370 --> 00:51:50,170
[Applause]

00:51:52,520 --> 00:51:56,900
anytime

00:51:53,790 --> 00:51:56,900
yeah we're answering

00:52:01,230 --> 00:52:06,960
okay thank you very much for your

00:52:03,840 --> 00:52:09,530
patience and your attention that was a

00:52:06,960 --> 00:52:09,530
real pleasure

00:52:10,870 --> 00:52:14,260

YouTube URL: https://www.youtube.com/watch?v=zr8qpNkL6U4


