Title: #ACEU19: Mark Thomas – State of the Cat
Publication date: 2019-10-31
Playlist: ApacheCon Europe 2019 – Berlin
Description: 
	More: https://aceu19.apachecon.com/session/state-cat

A review of the past year or so for Apache Tomcat and a look forward to what is expected in the coming 12 months.
Captions: 
	00:00:05,660 --> 00:00:09,840
good morning everyone welcome to the

00:00:07,920 --> 00:00:12,750
state of the cat presentation here of

00:00:09,840 --> 00:00:15,719
the start of the Apache Tomcat tract at

00:00:12,750 --> 00:00:18,180
Apache Tony you in Berlin for those of

00:00:15,719 --> 00:00:20,580
you who don't know me my name is Mark

00:00:18,180 --> 00:00:23,220
Thomas I'm a committer on the Tomcat

00:00:20,580 --> 00:00:25,529
project where I've been involved over 15

00:00:23,220 --> 00:00:27,269
years now it's where I spend the

00:00:25,529 --> 00:00:28,949
majority of my time at the SS but you'll

00:00:27,269 --> 00:00:32,369
also find me doing various other bits

00:00:28,949 --> 00:00:34,770
and pieces around as well the main

00:00:32,369 --> 00:00:36,660
purpose of today is retrospective so

00:00:34,770 --> 00:00:37,860
I'll be looking back at the important

00:00:36,660 --> 00:00:40,230
things that have happened over the last

00:00:37,860 --> 00:00:41,880
12 months talking a bit about those but

00:00:40,230 --> 00:00:44,700
I will look a little bit towards the

00:00:41,880 --> 00:00:49,440
future and what Tomcat 10 might bring

00:00:44,700 --> 00:00:51,000
and possibly even when looking back the

00:00:49,440 --> 00:00:53,460
first thing to talk about is the fact

00:00:51,000 --> 00:00:55,710
that Tomcats been around 20 years the

00:00:53,460 --> 00:00:58,230
apache jakarta project which was the

00:00:55,710 --> 00:01:00,740
original home of all Java projects and

00:00:58,230 --> 00:01:03,090
apache that was formed in august 99 and

00:01:00,740 --> 00:01:06,180
one of the early contributions into that

00:01:03,090 --> 00:01:09,299
project was the Tomcat code base and the

00:01:06,180 --> 00:01:10,859
Jasper code base which then was slightly

00:01:09,299 --> 00:01:12,840
more separate than it is these days

00:01:10,859 --> 00:01:13,920
separately enough that I was building

00:01:12,840 --> 00:01:15,329
the wrong version of it for about the

00:01:13,920 --> 00:01:18,630
first six months I was working on the

00:01:15,329 --> 00:01:20,609
project fortunately nobody noticed but

00:01:18,630 --> 00:01:21,960
that was donated in September and the

00:01:20,609 --> 00:01:25,560
first release followed in December

00:01:21,960 --> 00:01:27,329
alongside that work was starting on

00:01:25,560 --> 00:01:30,329
what's known as Catalina which became

00:01:27,329 --> 00:01:32,579
Tomcat for and that architectural work

00:01:30,329 --> 00:01:35,130
you can still see in the Tomcat codebase

00:01:32,579 --> 00:01:38,399
today so the design work that was done

00:01:35,130 --> 00:01:40,829
then to introduce the idea of the engine

00:01:38,399 --> 00:01:44,039
the host the context the valves the

00:01:40,829 --> 00:01:46,079
pipelines all of that is pretty much

00:01:44,039 --> 00:01:47,639
where it's certainly recognizable and a

00:01:46,079 --> 00:01:49,380
lot of it is almost exactly the same as

00:01:47,639 --> 00:01:52,709
it was back when it was was first

00:01:49,380 --> 00:01:54,659
designed up say 20 years ago so I think

00:01:52,709 --> 00:01:56,670
that is just a testament to just how

00:01:54,659 --> 00:01:58,439
good a design that is it is stood the

00:01:56,670 --> 00:02:00,869
test of time yes absolutely we've

00:01:58,439 --> 00:02:05,490
tweaked it but fundamentally it hasn't

00:02:00,869 --> 00:02:06,869
really changed community-wise on people

00:02:05,490 --> 00:02:09,450
joining the community it's been a fairly

00:02:06,869 --> 00:02:11,940
quiet year Iying ELLs now joined the PMC

00:02:09,450 --> 00:02:13,890
that means his votes now count

00:02:11,940 --> 00:02:15,810
officially when we have release votes

00:02:13,890 --> 00:02:18,090
but I think it's worth pointing out that

00:02:15,810 --> 00:02:20,129
this here that we

00:02:18,090 --> 00:02:22,110
welcome anybody testing releases and we

00:02:20,129 --> 00:02:23,970
welcome anybody voting on releases if

00:02:22,110 --> 00:02:26,010
you find a problem in a release the

00:02:23,970 --> 00:02:28,019
chances are whether your vote officially

00:02:26,010 --> 00:02:28,800
counts or not with certainly going to

00:02:28,019 --> 00:02:30,540
listen to you

00:02:28,800 --> 00:02:31,830
and there's a reasonable chance we'll

00:02:30,540 --> 00:02:35,160
actually stop the release fix the

00:02:31,830 --> 00:02:36,629
problem and re-roll the release so if

00:02:35,160 --> 00:02:38,129
you're looking for a way to get involved

00:02:36,629 --> 00:02:39,510
in Tomcat that's just one of the many

00:02:38,129 --> 00:02:42,120
ways and I'll try and keep mentioning

00:02:39,510 --> 00:02:43,500
them as I go through but downloading the

00:02:42,120 --> 00:02:45,090
release candidates when they made

00:02:43,500 --> 00:02:47,250
available testing them and giving us

00:02:45,090 --> 00:02:49,200
feedback letting us know yep I ran this

00:02:47,250 --> 00:02:52,200
in my test environment and my app works

00:02:49,200 --> 00:02:54,180
or actually no this doesn't work you

00:02:52,200 --> 00:02:55,950
appear to have broken it please fix it

00:02:54,180 --> 00:02:59,250
that's good feedback we want to hear

00:02:55,950 --> 00:03:02,310
that do let us know we've had a number

00:02:59,250 --> 00:03:04,739
of events a year ago we were in Montreal

00:03:02,310 --> 00:03:06,480
last month we were in Vegas we've also

00:03:04,739 --> 00:03:08,040
had the hackathon that's already be

00:03:06,480 --> 00:03:11,819
talked about in various other sessions

00:03:08,040 --> 00:03:14,640
in the spring at plans for future events

00:03:11,819 --> 00:03:17,610
we've just heard today about plans for

00:03:14,640 --> 00:03:20,489
New Orleans next year tommcatt wise were

00:03:17,610 --> 00:03:22,920
starting to think about another Tomcats

00:03:20,489 --> 00:03:25,109
specific event late this year early next

00:03:22,920 --> 00:03:27,780
but that hasn't got any further than a

00:03:25,109 --> 00:03:29,280
discussion over beer last night so we'll

00:03:27,780 --> 00:03:30,780
talk about a little bit more about that

00:03:29,280 --> 00:03:36,060
on the list and see what we can put in

00:03:30,780 --> 00:03:37,650
place one of the big things that we've

00:03:36,060 --> 00:03:39,720
introduced and there's been a couple in

00:03:37,650 --> 00:03:42,840
the last 12 months is better support for

00:03:39,720 --> 00:03:45,930
translations so we've set up an account

00:03:42,840 --> 00:03:48,359
on pio editor comm who very kindly give

00:03:45,930 --> 00:03:50,430
open source projects like tomcat free

00:03:48,359 --> 00:03:52,349
unlimited accounts and it's set up so

00:03:50,430 --> 00:03:55,230
absolutely anybody could contribute

00:03:52,349 --> 00:03:56,549
anybody to can create a language anybody

00:03:55,230 --> 00:03:59,730
can add translations and actually

00:03:56,549 --> 00:04:00,810
anybody can delete stuff too but as an

00:03:59,730 --> 00:04:04,739
administrator I've got the magic

00:04:00,810 --> 00:04:06,690
undelete button so that's okay so the

00:04:04,739 --> 00:04:09,870
way it's been very successful we had a

00:04:06,690 --> 00:04:11,370
massive increase in people contributing

00:04:09,870 --> 00:04:13,650
to the translations so that seems like

00:04:11,370 --> 00:04:16,169
error message log messages all of those

00:04:13,650 --> 00:04:17,910
sorts of things so to give you some

00:04:16,169 --> 00:04:21,690
numbers French moved from 20 cent

00:04:17,910 --> 00:04:23,250
coverage to 100 percent okay most of

00:04:21,690 --> 00:04:25,770
that was done by an existing committer

00:04:23,250 --> 00:04:27,479
but it was made easier because we have

00:04:25,770 --> 00:04:30,539
PR editor and other people did

00:04:27,479 --> 00:04:31,710
contribute as well Korean has been added

00:04:30,539 --> 00:04:33,030
and has reached 100%

00:04:31,710 --> 00:04:36,120
from scratch that's all new

00:04:33,030 --> 00:04:39,030
contributions simplified Chinese added

00:04:36,120 --> 00:04:43,260
that's reached up to over 40% German

00:04:39,030 --> 00:04:46,230
Spanish Japanese they've all improved so

00:04:43,260 --> 00:04:47,490
that that's makes it a lot easier for

00:04:46,230 --> 00:04:48,840
people to contribute translations

00:04:47,490 --> 00:04:50,010
because you can look at the English

00:04:48,840 --> 00:04:51,330
version you can look at all the

00:04:50,010 --> 00:04:53,040
different translations and then you can

00:04:51,330 --> 00:04:55,440
either tweak them at once the language

00:04:53,040 --> 00:04:56,190
you know or add additional languages as

00:04:55,440 --> 00:04:57,810
you wish

00:04:56,190 --> 00:04:59,760
generally what I've been doing what

00:04:57,810 --> 00:05:01,770
we've been doing is when a language

00:04:59,760 --> 00:05:03,060
reaches somewhere between five and ten

00:05:01,770 --> 00:05:04,650
percent coverage we then actually add

00:05:03,060 --> 00:05:06,420
that to the official distribution as

00:05:04,650 --> 00:05:08,040
well so there's a couple that have only

00:05:06,420 --> 00:05:09,240
got sort of three translations so we

00:05:08,040 --> 00:05:11,220
haven't added those it doesn't really

00:05:09,240 --> 00:05:14,430
seem worth it but once it reaches a

00:05:11,220 --> 00:05:15,930
critical mass they get added and I say

00:05:14,430 --> 00:05:17,220
that's open for anybody to contribute

00:05:15,930 --> 00:05:19,950
you just set yourself up in an account

00:05:17,220 --> 00:05:22,830
and start editing so if you if you use

00:05:19,950 --> 00:05:24,360
Tomcats in a language isn't English will

00:05:22,830 --> 00:05:26,880
affect even if it is English and you

00:05:24,360 --> 00:05:29,160
spot a typo or poor grammar or something

00:05:26,880 --> 00:05:31,320
that just doesn't quite make sense feel

00:05:29,160 --> 00:05:32,640
free to jump on to peer editor and you

00:05:31,320 --> 00:05:34,170
know update the messages update the

00:05:32,640 --> 00:05:35,580
translations and you know help out the

00:05:34,170 --> 00:05:39,680
project so that's another way that you

00:05:35,580 --> 00:05:43,650
can contribute we've migrated to get

00:05:39,680 --> 00:05:45,510
finally some people might say we've

00:05:43,650 --> 00:05:47,220
originally had three subversion

00:05:45,510 --> 00:05:49,500
repositories four nine eight five and

00:05:47,220 --> 00:05:51,030
seven okay technically it's one

00:05:49,500 --> 00:05:53,460
repository but there were three separate

00:05:51,030 --> 00:05:55,500
trees within this vsf subversion

00:05:53,460 --> 00:05:58,440
repository that's all moved across to

00:05:55,500 --> 00:06:01,620
get we've also moved tomcat native

00:05:58,440 --> 00:06:05,250
across mod JK is in the process of

00:06:01,620 --> 00:06:07,830
moving generally these get migrated when

00:06:05,250 --> 00:06:09,090
there's a impetus to do so and generally

00:06:07,830 --> 00:06:11,340
that means when we've got changes to

00:06:09,090 --> 00:06:12,690
make more JK has been quiet for the last

00:06:11,340 --> 00:06:14,430
twelve months there hasn't really been

00:06:12,690 --> 00:06:16,560
an opportunity to do anything with it no

00:06:14,430 --> 00:06:18,330
desire we've got a couple of bug fixes

00:06:16,560 --> 00:06:19,710
in there now that when we need to do a

00:06:18,330 --> 00:06:22,650
release so it seems like the right sort

00:06:19,710 --> 00:06:25,650
of time to do that migration as well the

00:06:22,650 --> 00:06:26,970
website is still in SVN I'm not sure

00:06:25,650 --> 00:06:29,340
that there's ever really going to be

00:06:26,970 --> 00:06:31,050
much motivation to move it to get if

00:06:29,340 --> 00:06:34,050
somebody wants to I don't think anybody

00:06:31,050 --> 00:06:35,850
all get in their way but unlike the code

00:06:34,050 --> 00:06:37,830
where you get quite a few advantages

00:06:35,850 --> 00:06:39,840
with git particular be able to work on

00:06:37,830 --> 00:06:41,910
things locally have local branches all

00:06:39,840 --> 00:06:45,600
of those sorts of things those features

00:06:41,910 --> 00:06:48,180
are really as useful for the website

00:06:45,600 --> 00:06:51,120
I'm not so sure that that's going to all

00:06:48,180 --> 00:06:52,530
there is ideally as much desire to move

00:06:51,120 --> 00:06:55,280
that across to get but equally if

00:06:52,530 --> 00:06:58,440
somebody wants to then that's available

00:06:55,280 --> 00:06:59,700
tank nibs is essentially amateur project

00:06:58,440 --> 00:07:02,180
there's not really much happening there

00:06:59,700 --> 00:07:05,220
so I suspect it will just stay in SVN

00:07:02,180 --> 00:07:07,230
the maven plug-in is currently dormant

00:07:05,220 --> 00:07:10,080
but again that's another area where the

00:07:07,230 --> 00:07:11,340
scope to get involved maven isn't

00:07:10,080 --> 00:07:13,710
something that there's a great deal of

00:07:11,340 --> 00:07:16,020
knowledge off within the tomcat team so

00:07:13,710 --> 00:07:17,910
if you use the maven Tomcat maven

00:07:16,020 --> 00:07:19,740
plug-in and it's there so when you're

00:07:17,910 --> 00:07:21,360
writing web apps you can within mave and

00:07:19,740 --> 00:07:23,490
deploy them to Tomcat and test them and

00:07:21,360 --> 00:07:25,830
try them out if you want to help

00:07:23,490 --> 00:07:28,260
maintain that plugin update it add new

00:07:25,830 --> 00:07:29,870
features then another great way to get

00:07:28,260 --> 00:07:31,680
involved in the project and that one

00:07:29,870 --> 00:07:33,360
submit a couple of what look like

00:07:31,680 --> 00:07:35,160
reasonable packages and I'm pretty sure

00:07:33,360 --> 00:07:37,590
you'll be on the fast track to commit to

00:07:35,160 --> 00:07:38,940
status because as I say there's not much

00:07:37,590 --> 00:07:40,110
maven knowledge within the Tomcat

00:07:38,940 --> 00:07:42,030
community so if you look like you know

00:07:40,110 --> 00:07:43,650
what you're doing you're going to get

00:07:42,030 --> 00:07:46,350
given what you need to get on and do it

00:07:43,650 --> 00:07:49,310
so again looking for places to get

00:07:46,350 --> 00:07:53,970
involved that's another opportunity

00:07:49,310 --> 00:07:55,770
release wise Tomcat 8 5 and 9 of pretty

00:07:53,970 --> 00:07:58,230
much stuck to their monthly release

00:07:55,770 --> 00:08:00,210
cycle there's occasional gaps usually

00:07:58,230 --> 00:08:02,850
caused by holidays of one form or

00:08:00,210 --> 00:08:06,000
another but otherwise it's been pretty

00:08:02,850 --> 00:08:07,920
consistently once a month Tomcat 7 isn't

00:08:06,000 --> 00:08:10,050
releasing about once a quarter that's a

00:08:07,920 --> 00:08:11,670
little bit slower having 12 months ago

00:08:10,050 --> 00:08:14,960
as mote once every 2 to 3 months now

00:08:11,670 --> 00:08:18,120
it's more like every 3 we do have

00:08:14,960 --> 00:08:20,010
another sort of Tomcat 7 releases well

00:08:18,120 --> 00:08:21,630
we started one but that we found an

00:08:20,010 --> 00:08:22,980
issue so we need to redo it and the

00:08:21,630 --> 00:08:25,050
release manager's been busy with

00:08:22,980 --> 00:08:27,680
conferences and stuff so I imagine

00:08:25,050 --> 00:08:31,650
they'll be starting that again next week

00:08:27,680 --> 00:08:33,330
native typically releases once every six

00:08:31,650 --> 00:08:36,360
months or so we've had a few more

00:08:33,330 --> 00:08:38,849
releases this year because or in this

00:08:36,360 --> 00:08:42,419
previous 12 months rather because we

00:08:38,849 --> 00:08:44,640
were fixing some online certificate

00:08:42,419 --> 00:08:46,110
status protocol bugs and it took us a

00:08:44,640 --> 00:08:48,240
couple of iterations to get that right

00:08:46,110 --> 00:08:50,910
so that's why we had a few more releases

00:08:48,240 --> 00:08:53,280
around December and January and mod JK

00:08:50,910 --> 00:08:55,560
has been pretty quiet both native and

00:08:53,280 --> 00:08:57,540
mod JK are at the point where releases

00:08:55,560 --> 00:08:59,070
tend to get driven by bug fixes rather

00:08:57,540 --> 00:09:02,250
than new features

00:08:59,070 --> 00:09:04,139
so mod JK said not much has been

00:09:02,250 --> 00:09:05,910
happening for the last 12 months in the

00:09:04,139 --> 00:09:08,759
last few weeks we've had a couple of bug

00:09:05,910 --> 00:09:11,190
reports they've we've fixed one we've

00:09:08,759 --> 00:09:13,350
got the patch ready for the other and

00:09:11,190 --> 00:09:14,790
they're both sufficiently serious if

00:09:13,350 --> 00:09:16,380
they justify release so we are going to

00:09:14,790 --> 00:09:18,060
be doing that say we just need to get

00:09:16,380 --> 00:09:19,560
the get migration sorted out and then

00:09:18,060 --> 00:09:20,970
we'll we'll move that forward so I

00:09:19,560 --> 00:09:24,149
didn't mention they'll be in mod JK

00:09:20,970 --> 00:09:25,949
release early November best yes mom

00:09:24,149 --> 00:09:29,310
maybe mid November the time we vote for

00:09:25,949 --> 00:09:33,930
it we've also been continuing our work

00:09:29,310 --> 00:09:36,569
with the open JDK project ever since

00:09:33,930 --> 00:09:38,639
Java 9 and they started to reach out to

00:09:36,569 --> 00:09:39,420
projects like tomcat for us to test it

00:09:38,639 --> 00:09:40,529
and make sure everything was working

00:09:39,420 --> 00:09:43,500
we've had a really good relationship

00:09:40,529 --> 00:09:46,199
with them so we test stuff we find bugs

00:09:43,500 --> 00:09:47,759
we tell them they fix them which

00:09:46,199 --> 00:09:50,240
compared to how what things worked

00:09:47,759 --> 00:09:52,639
before Java 9 that's a huge improvement

00:09:50,240 --> 00:09:55,769
it's actually been a pretty quiet year

00:09:52,639 --> 00:09:58,980
really two things that we've talked to

00:09:55,769 --> 00:10:01,170
them about one was the TLS 1.3

00:09:58,980 --> 00:10:04,709
implementations I think came in in Java

00:10:01,170 --> 00:10:06,199
11 it doesn't implement something called

00:10:04,709 --> 00:10:09,089
post handshake authentication

00:10:06,199 --> 00:10:11,519
essentially what that means is once

00:10:09,089 --> 00:10:14,639
you've established a TLS connection if

00:10:11,519 --> 00:10:17,399
you want to add a client certificate to

00:10:14,639 --> 00:10:18,630
that connection until s 1.3 you have to

00:10:17,399 --> 00:10:21,180
do something called post handshake

00:10:18,630 --> 00:10:22,980
authentication and G SSE doesn't support

00:10:21,180 --> 00:10:24,870
it yet and that's a problem because

00:10:22,980 --> 00:10:27,360
essentially the servlet specification

00:10:24,870 --> 00:10:29,130
requires that to be supported in order

00:10:27,360 --> 00:10:30,779
for you to meet all the requirements of

00:10:29,130 --> 00:10:32,519
the servlet spec now that's not a

00:10:30,779 --> 00:10:34,560
problem for Tomcat because we can just

00:10:32,519 --> 00:10:36,899
switch the open SSL implementation for

00:10:34,560 --> 00:10:39,510
TLS and that does support post handshake

00:10:36,899 --> 00:10:42,389
authentication so we're fine but what we

00:10:39,510 --> 00:10:44,189
highlighted to them was yet down the

00:10:42,389 --> 00:10:45,449
line people are going to be asking for

00:10:44,189 --> 00:10:49,139
this you might want to put it on your

00:10:45,449 --> 00:10:51,269
own map have a think about it so we left

00:10:49,139 --> 00:10:55,889
that one with them the other issue was

00:10:51,269 --> 00:10:57,569
around pkcs12 file handling because of

00:10:55,889 --> 00:10:58,860
the work we've done in tomcat I think

00:10:57,569 --> 00:11:01,230
Remy is going to talk a little bit more

00:10:58,860 --> 00:11:04,259
about later in making it easy to switch

00:11:01,230 --> 00:11:06,420
between open SSL and Jess I see we've

00:11:04,259 --> 00:11:08,279
done more work on converting different

00:11:06,420 --> 00:11:10,500
certificate formats to a common format

00:11:08,279 --> 00:11:12,170
that we can use internally and as part

00:11:10,500 --> 00:11:14,389
of that we basically stumbled

00:11:12,170 --> 00:11:17,269
this long-standing bug that issue Java

00:11:14,389 --> 00:11:19,399
didn't read all of the file in one go it

00:11:17,269 --> 00:11:21,649
couldn't pass it properly so it gets so

00:11:19,399 --> 00:11:23,180
far through the file and say oh I've run

00:11:21,649 --> 00:11:25,190
out of data and it doesn't make sense

00:11:23,180 --> 00:11:26,540
error rather than I've run out of data

00:11:25,190 --> 00:11:29,540
I'd better go and see if I've got any

00:11:26,540 --> 00:11:32,389
more and that was causing problems but

00:11:29,540 --> 00:11:34,430
we highlighted that to the open JDK team

00:11:32,389 --> 00:11:37,339
and it got fixed pretty probably so

00:11:34,430 --> 00:11:39,230
that's been good so another year of

00:11:37,339 --> 00:11:42,529
successful collaboration with them we

00:11:39,230 --> 00:11:44,870
also receive notification from them

00:11:42,529 --> 00:11:46,850
whenever there's a new early access that

00:11:44,870 --> 00:11:47,930
needs testing and we run our unit tests

00:11:46,850 --> 00:11:49,730
against it just to make sure that

00:11:47,930 --> 00:11:51,649
everything's okay and that's been

00:11:49,730 --> 00:11:53,750
working well too we occasionally find

00:11:51,649 --> 00:11:55,399
little edge case things but it's been of

00:11:53,750 --> 00:11:57,079
the order of oh yeah there's a nasty

00:11:55,399 --> 00:11:58,430
snap trace with Tomcat stars

00:11:57,079 --> 00:12:00,320
doesn't stop and I think working it's

00:11:58,430 --> 00:12:02,630
just an ugly stack trace but that got

00:12:00,320 --> 00:12:04,670
fixed early on in the early access

00:12:02,630 --> 00:12:06,440
process so that never actually got to a

00:12:04,670 --> 00:12:10,610
GE release about again is also working

00:12:06,440 --> 00:12:12,920
very well in terms of those JRE releases

00:12:10,610 --> 00:12:15,050
it's bit of quite a bit a year so Java

00:12:12,920 --> 00:12:16,490
tends reached end-of-life Java 11

00:12:15,050 --> 00:12:19,370
Longton support has arrived

00:12:16,490 --> 00:12:23,420
12 has been and gone 13 is just arrived

00:12:19,370 --> 00:12:25,640
14s in progress from a tomcat

00:12:23,420 --> 00:12:27,860
perspective that hasn't been

00:12:25,640 --> 00:12:29,899
particularly problematic there hasn't

00:12:27,860 --> 00:12:31,490
really been any significant changes in

00:12:29,899 --> 00:12:34,820
those releases that has caused us real

00:12:31,490 --> 00:12:37,130
problems Java 9 was the big change for

00:12:34,820 --> 00:12:38,870
us because we do a lot of class faster

00:12:37,130 --> 00:12:41,029
cat scanning looking for things like

00:12:38,870 --> 00:12:42,920
annotated servlets annotated WebSocket

00:12:41,029 --> 00:12:45,410
endpoints and all of a sudden we had to

00:12:42,920 --> 00:12:46,820
handle the module class path as well so

00:12:45,410 --> 00:12:48,920
that was quite a big piece of work but

00:12:46,820 --> 00:12:51,980
from 10 onwards it's been relatively

00:12:48,920 --> 00:12:54,290
quiet there hasn't been anything really

00:12:51,980 --> 00:12:56,360
significant that this caused us a large

00:12:54,290 --> 00:12:58,339
amount of work and it it's been

00:12:56,360 --> 00:13:00,680
relatively painless to say there's been

00:12:58,339 --> 00:13:05,390
these old edge cases but otherwise not

00:13:00,680 --> 00:13:08,180
too bad so a few metrics on the last 12

00:13:05,390 --> 00:13:12,019
months we've fixed about 130 bugs this

00:13:08,180 --> 00:13:13,790
is just in tomcat and when I say we

00:13:12,019 --> 00:13:16,339
fixed a bug I'm not triple counting if

00:13:13,790 --> 00:13:18,769
we fixed it in 9 8 5 and 7 I've only

00:13:16,339 --> 00:13:22,100
counted it once here so we fixed about

00:13:18,769 --> 00:13:25,370
130 we resolved another 90 so those will

00:13:22,100 --> 00:13:26,300
either have been duplicates of existing

00:13:25,370 --> 00:13:27,650
bugs or they will

00:13:26,300 --> 00:13:30,980
in configuration issues that we've

00:13:27,650 --> 00:13:32,960
resolved as invalid what we don't do as

00:13:30,980 --> 00:13:34,940
a community is say oh that bugs been

00:13:32,960 --> 00:13:36,200
open for three months nobody said I

00:13:34,940 --> 00:13:39,460
think I would just close it and forget

00:13:36,200 --> 00:13:42,890
about it we absolutely don't do that

00:13:39,460 --> 00:13:45,110
what we do do is we aim to fix every

00:13:42,890 --> 00:13:47,120
open bug before we do a release so every

00:13:45,110 --> 00:13:48,920
the beginning of every month when I as a

00:13:47,120 --> 00:13:50,690
release managers look at tagging the

00:13:48,920 --> 00:13:52,640
first thing I check is what bugs inner

00:13:50,690 --> 00:13:54,410
issues are still open and then we look

00:13:52,640 --> 00:13:56,150
at fixing those then we do the release

00:13:54,410 --> 00:13:58,700
now that's not enhancements it's just

00:13:56,150 --> 00:14:00,860
the bugs and they're okay there are a

00:13:58,700 --> 00:14:03,850
couple of exceptions around things like

00:14:00,860 --> 00:14:06,170
if we have a bug report that looks

00:14:03,850 --> 00:14:08,870
reasonable it looks genuine it looks

00:14:06,170 --> 00:14:10,490
plausible but what we haven't got is the

00:14:08,870 --> 00:14:12,500
steps to reproduce it because it's a

00:14:10,490 --> 00:14:14,480
difficult to reproduce tiny error or

00:14:12,500 --> 00:14:16,280
some form they they stay open but we

00:14:14,480 --> 00:14:18,320
leave them open as long as it takes to

00:14:16,280 --> 00:14:20,870
get the information that we need to fix

00:14:18,320 --> 00:14:23,750
it and if that's three months six months

00:14:20,870 --> 00:14:24,980
a year that's fine it stays open until

00:14:23,750 --> 00:14:28,600
we're able to fix it everything else

00:14:24,980 --> 00:14:30,920
gets fixed so at the minute we've got

00:14:28,600 --> 00:14:33,710
typically when we do release about five

00:14:30,920 --> 00:14:35,270
open bugs because there's a couple that

00:14:33,710 --> 00:14:37,220
we just have to wait for the spec group

00:14:35,270 --> 00:14:41,270
to give us a definitive answer on

00:14:37,220 --> 00:14:42,440
there's a couple that look flaws of all

00:14:41,270 --> 00:14:44,180
but say we're waiting to be able to

00:14:42,440 --> 00:14:46,940
reproduce it and that's it

00:14:44,180 --> 00:14:49,550
and enhancement requests there's about

00:14:46,940 --> 00:14:51,560
90 open and again we don't close those

00:14:49,550 --> 00:14:53,630
open that have it just because if it

00:14:51,560 --> 00:14:55,490
open for a really long time we might

00:14:53,630 --> 00:14:59,570
look at one and say well that's been

00:14:55,490 --> 00:15:00,950
open for six seven years now and it

00:14:59,570 --> 00:15:03,860
really does look like it was really only

00:15:00,950 --> 00:15:06,410
that user that wanted it it's not really

00:15:03,860 --> 00:15:08,600
relevant now so yes we are going to

00:15:06,410 --> 00:15:11,990
close that week it takes us quite a

00:15:08,600 --> 00:15:15,110
while to get to that point so we do keep

00:15:11,990 --> 00:15:16,700
leave stuff open deliberately until we

00:15:15,110 --> 00:15:18,230
are absolutely genuinely ready to close

00:15:16,700 --> 00:15:21,290
it we don't just close stuff to keep the

00:15:18,230 --> 00:15:23,570
stats down but with that in mind we

00:15:21,290 --> 00:15:24,950
still have all of the open bugs fixed

00:15:23,570 --> 00:15:27,050
before we do release which for a

00:15:24,950 --> 00:15:29,300
software project that is one hundred

00:15:27,050 --> 00:15:32,210
thirty thousand lines of code 20 plus

00:15:29,300 --> 00:15:34,670
years old open source that's actually a

00:15:32,210 --> 00:15:37,520
pretty good place to be in to have such

00:15:34,670 --> 00:15:39,430
a low bug count and it's something that

00:15:37,520 --> 00:15:41,920
we work pretty hard to

00:15:39,430 --> 00:15:43,290
to maintain but it helps us in terms of

00:15:41,920 --> 00:15:46,120
reliability

00:15:43,290 --> 00:15:49,350
Tomcats a pretty stable product in some

00:15:46,120 --> 00:15:54,240
part because we keep the bug countdown

00:15:49,350 --> 00:15:57,340
security-wise then moving on again not

00:15:54,240 --> 00:16:01,000
not that exciting a year we had a couple

00:15:57,340 --> 00:16:04,240
of http/2 denial-of-service issues those

00:16:01,000 --> 00:16:07,840
were generally around the process that

00:16:04,240 --> 00:16:09,400
http/2 has for one side telling the

00:16:07,840 --> 00:16:12,550
other side how many bytes it's prepared

00:16:09,400 --> 00:16:14,380
to accept we had issues we're safe if

00:16:12,550 --> 00:16:15,760
the server had sent all the bytes

00:16:14,380 --> 00:16:17,140
the client has said it was prepared to

00:16:15,760 --> 00:16:18,970
accept the server then waits for the

00:16:17,140 --> 00:16:21,130
next message from the client say ok said

00:16:18,970 --> 00:16:23,170
to be more data and sometimes we were

00:16:21,130 --> 00:16:24,820
missing that message so the server would

00:16:23,170 --> 00:16:26,050
sit there waiting for the message that

00:16:24,820 --> 00:16:28,090
the client had already sent and

00:16:26,050 --> 00:16:29,530
effectively you had a blocked thread and

00:16:28,090 --> 00:16:31,840
if you could trigger that enough times

00:16:29,530 --> 00:16:33,820
you'd have a denial of service so we had

00:16:31,840 --> 00:16:36,280
a couple of those which we fixed what

00:16:33,820 --> 00:16:39,430
was nice was that over the summer there

00:16:36,280 --> 00:16:41,830
was a whole batch of denial of service

00:16:39,430 --> 00:16:44,800
issues with HTTP 2 and they were all

00:16:41,830 --> 00:16:48,190
generally around clients maliciously

00:16:44,800 --> 00:16:51,340
using the protocol so for example if a

00:16:48,190 --> 00:16:53,680
client wanted to send an 8k request body

00:16:51,340 --> 00:16:55,210
up to the server what I'd expect that to

00:16:53,680 --> 00:16:58,600
be happened I'd expect that to be in one

00:16:55,210 --> 00:17:01,960
HTTP for up to frame 8k boom there you

00:16:58,600 --> 00:17:05,830
go however if a client said well

00:17:01,960 --> 00:17:08,350
actually I can send that in 8000 one

00:17:05,830 --> 00:17:11,500
byte frames let's see how the server

00:17:08,350 --> 00:17:15,010
treats that some servers were not happy

00:17:11,500 --> 00:17:16,720
at all to the extent that it didn't take

00:17:15,010 --> 00:17:18,700
many requests like that to essentially

00:17:16,720 --> 00:17:20,800
bring the server to its knees Tomcat

00:17:18,700 --> 00:17:24,310
fortunately said yeah fine is pretty

00:17:20,800 --> 00:17:26,890
silly Burton okay and processed it quite

00:17:24,310 --> 00:17:30,460
happily so there was a whole bunch of

00:17:26,890 --> 00:17:33,190
denial of service CVS all around that

00:17:30,460 --> 00:17:35,890
general idea and it was quite pleasing

00:17:33,190 --> 00:17:38,770
to see that Tomcat was known fine no no

00:17:35,890 --> 00:17:40,330
no well we don't handle that quite as

00:17:38,770 --> 00:17:42,190
well as we would a normal request but

00:17:40,330 --> 00:17:45,400
it's still well within normal note sign

00:17:42,190 --> 00:17:47,560
it was as I say reassuring to see that

00:17:45,400 --> 00:17:50,500
it was in we were actually pretty robust

00:17:47,560 --> 00:17:52,990
to that what we did do though was we

00:17:50,500 --> 00:17:55,960
recognized that these requests are

00:17:52,990 --> 00:17:59,020
nearly malicious no legitimate client is

00:17:55,960 --> 00:18:01,600
going to send request body one byte at a

00:17:59,020 --> 00:18:03,940
time that's just not not a legitimate

00:18:01,600 --> 00:18:06,100
way of behaving so now what we've done

00:18:03,940 --> 00:18:07,870
is we've added some detection to Tomcat

00:18:06,100 --> 00:18:09,070
to detect those sorts of behaviors and

00:18:07,870 --> 00:18:12,040
if we spot it we just killed a

00:18:09,070 --> 00:18:13,990
connection now it's possible we might

00:18:12,040 --> 00:18:15,730
still be a little bit overly aggressive

00:18:13,990 --> 00:18:17,770
certainly the first iteration was

00:18:15,730 --> 00:18:19,120
because we broke Chrome or at least we

00:18:17,770 --> 00:18:21,730
broke Chrome's ability to upload to

00:18:19,120 --> 00:18:23,590
tomcat chrome because of the way it does

00:18:21,730 --> 00:18:26,170
internal buffering will occasionally

00:18:23,590 --> 00:18:29,110
send a one byte frame in the middle of a

00:18:26,170 --> 00:18:31,630
request body and Tomcat so that that's

00:18:29,110 --> 00:18:34,270
not legitimate bull killed it and of

00:18:31,630 --> 00:18:35,770
course it was legitimate chrome wasn't

00:18:34,270 --> 00:18:37,360
being malicious it was just the way the

00:18:35,770 --> 00:18:39,490
buffering worked the buses didn't quite

00:18:37,360 --> 00:18:41,559
line up there's this one byte left so it

00:18:39,490 --> 00:18:44,800
got sent on its own so we've adjusted

00:18:41,559 --> 00:18:47,050
the protection so that sort of thing

00:18:44,800 --> 00:18:48,670
doesn't trip it up but there might still

00:18:47,050 --> 00:18:50,559
be clients out there that are behaving

00:18:48,670 --> 00:18:52,420
them differently that do trip over it if

00:18:50,559 --> 00:18:55,360
you have one of those let us know and

00:18:52,420 --> 00:18:56,950
we'll look at what we can do to fix it

00:18:55,360 --> 00:18:58,540
though we haven't had any reports the

00:18:56,950 --> 00:19:02,350
last couple of months so I think we're

00:18:58,540 --> 00:19:04,510
probably okay you've probably heard

00:19:02,350 --> 00:19:07,750
several times already this week about

00:19:04,510 --> 00:19:10,300
the bug bounty program that the EU frost

00:19:07,750 --> 00:19:12,429
program is running well this next one

00:19:10,300 --> 00:19:16,179
that came through that we had a couple

00:19:12,429 --> 00:19:18,760
that were related to SSI and they were

00:19:16,179 --> 00:19:20,950
pretty much edged cases the CGI one

00:19:18,760 --> 00:19:22,270
though that was remote code execution so

00:19:20,950 --> 00:19:23,580
from one point of view that's about as

00:19:22,270 --> 00:19:27,400
bad as it gets

00:19:23,580 --> 00:19:29,080
for a web server the mitigation tower

00:19:27,400 --> 00:19:32,380
well first of all it only affected

00:19:29,080 --> 00:19:33,970
Windows so that cuts out a proportion of

00:19:32,380 --> 00:19:35,740
the user base actually even before that

00:19:33,970 --> 00:19:36,910
it only affects you if you're using CGI

00:19:35,740 --> 00:19:39,400
so that cuts out an even bigger

00:19:36,910 --> 00:19:40,990
proportion of the user base and then you

00:19:39,400 --> 00:19:43,809
have to be using a non-default

00:19:40,990 --> 00:19:46,090
configuration that essentially takes all

00:19:43,809 --> 00:19:48,490
of the query string strips out all of

00:19:46,090 --> 00:19:50,830
the separators and just presents it as

00:19:48,490 --> 00:19:56,740
is on the command line hence you could

00:19:50,830 --> 00:19:58,690
inject stuff so and there are issues to

00:19:56,740 --> 00:20:00,850
do with quoting and how Java and Windows

00:19:58,690 --> 00:20:02,800
interacted with quoting but essentially

00:20:00,850 --> 00:20:04,600
it was pretty unlikely you're going to

00:20:02,800 --> 00:20:06,789
get impacted by it but if you were

00:20:04,600 --> 00:20:08,460
impacted it was going to be as bad as

00:20:06,789 --> 00:20:11,139
as it's one of those were thinking well

00:20:08,460 --> 00:20:11,740
is it critical while it's remote code

00:20:11,139 --> 00:20:13,529
execution

00:20:11,740 --> 00:20:15,850
yeah but hardly anybody's impacted so

00:20:13,529 --> 00:20:17,499
where'd where do we stand on criticality

00:20:15,850 --> 00:20:20,559
I think we ended up calling it important

00:20:17,499 --> 00:20:22,840
like we do most things like that but it

00:20:20,559 --> 00:20:25,450
was good to get it fixed and yeah it was

00:20:22,840 --> 00:20:27,220
a good example of the EU foster program

00:20:25,450 --> 00:20:29,230
and how their but bounty program works

00:20:27,220 --> 00:20:32,860
the thing I really like about that

00:20:29,230 --> 00:20:35,019
program is part of the it might even be

00:20:32,860 --> 00:20:36,399
contractual between the EU and the

00:20:35,019 --> 00:20:38,830
provider it's certainly something that

00:20:36,399 --> 00:20:42,070
we made clear is that the people running

00:20:38,830 --> 00:20:43,990
it they do all the filtering of all of

00:20:42,070 --> 00:20:46,119
the script kiddies that are trying to

00:20:43,990 --> 00:20:49,690
find the slightest little bug with some

00:20:46,119 --> 00:20:51,249
sort of vague security impact to try and

00:20:49,690 --> 00:20:53,950
get a bounty we don't have to deal with

00:20:51,249 --> 00:20:55,779
any of that noise the company running it

00:20:53,950 --> 00:20:57,070
they filter all of that out and the

00:20:55,779 --> 00:20:59,440
stuff they send to us is just the

00:20:57,070 --> 00:21:02,499
genuine stuff so it makes our life a lot

00:20:59,440 --> 00:21:04,090
easier to work with those and overall I

00:21:02,499 --> 00:21:09,249
would say that for us that program has

00:21:04,090 --> 00:21:10,960
been a success I'm only going to very

00:21:09,249 --> 00:21:13,509
briefly mention the new features because

00:21:10,960 --> 00:21:15,970
the next session is all about them I

00:21:13,509 --> 00:21:18,789
already mentioned the work we've done on

00:21:15,970 --> 00:21:20,559
JSOC and open SSL interoperability we've

00:21:18,789 --> 00:21:22,539
improved on that more even more this

00:21:20,559 --> 00:21:25,110
year so we really are at the point now

00:21:22,539 --> 00:21:27,039
where you can set up Tomcat with

00:21:25,110 --> 00:21:29,230
certificates in pretty much any format

00:21:27,039 --> 00:21:31,600
you like you can get tomcat to use

00:21:29,230 --> 00:21:33,369
either open ssl or DSS ii and it will

00:21:31,600 --> 00:21:34,869
just flatly flip between the two without

00:21:33,369 --> 00:21:37,240
you having to jump through all of those

00:21:34,869 --> 00:21:39,429
hoops to convert the certificate from

00:21:37,240 --> 00:21:41,019
well open ssl needs it in pen format and

00:21:39,429 --> 00:21:44,169
i've got to get down to a java key store

00:21:41,019 --> 00:21:45,610
and that's really painful unless you

00:21:44,169 --> 00:21:47,799
find the magic code on the internet that

00:21:45,610 --> 00:21:49,450
does it for you so all of that's just

00:21:47,799 --> 00:21:51,600
gone away you just flip between the two

00:21:49,450 --> 00:21:53,679
and tomcat will do it all internally

00:21:51,600 --> 00:21:55,899
another improvements as well in growl

00:21:53,679 --> 00:21:59,799
containers and cloud fostering but I'll

00:21:55,899 --> 00:22:01,899
let Remy talk about those probably the

00:21:59,799 --> 00:22:03,610
the biggest thing that has happened

00:22:01,899 --> 00:22:04,779
although from a certain point of view

00:22:03,610 --> 00:22:08,619
the biggest thing when nothing's

00:22:04,779 --> 00:22:11,169
happened at all is Jakarta EE so you're

00:22:08,619 --> 00:22:13,570
probably aware that Oracle donated Java

00:22:11,169 --> 00:22:15,879
EE to the Eclipse Foundation that

00:22:13,570 --> 00:22:18,789
happened when it's officially announced

00:22:15,879 --> 00:22:19,640
I believe in September 2017 or it might

00:22:18,789 --> 00:22:21,980
have been October is

00:22:19,640 --> 00:22:26,120
JavaOne was that year whatever that

00:22:21,980 --> 00:22:28,160
conference is called this week and the

00:22:26,120 --> 00:22:29,780
announcement was that oracle is donating

00:22:28,160 --> 00:22:33,680
it to eclipse he's going to be open

00:22:29,780 --> 00:22:36,320
source the original timetable that was

00:22:33,680 --> 00:22:39,110
being discussed was that there would be

00:22:36,320 --> 00:22:41,330
a Jakarta EE released from eclipse would

00:22:39,110 --> 00:22:43,490
which would essentially be Java EE

00:22:41,330 --> 00:22:45,650
rebadged that was going to happen in

00:22:43,490 --> 00:22:47,870
June 2018 and then there'd be an

00:22:45,650 --> 00:22:49,700
iteration of the specs and we'd have a

00:22:47,870 --> 00:22:51,830
new round of specs of the new set of

00:22:49,700 --> 00:22:57,710
features around December 2018

00:22:51,830 --> 00:22:59,210
now that was wildly optimistic and we

00:22:57,710 --> 00:23:02,030
haven't got even close to those

00:22:59,210 --> 00:23:05,960
timescales but I'm not really surprised

00:23:02,030 --> 00:23:08,660
it is a non-trivial task to take a large

00:23:05,960 --> 00:23:10,280
body of code and donate it to an open

00:23:08,660 --> 00:23:13,130
source foundation and get it to a point

00:23:10,280 --> 00:23:15,410
where you can release it it is a huge

00:23:13,130 --> 00:23:16,910
amount of work even though what you end

00:23:15,410 --> 00:23:18,860
up with is essentially exactly what you

00:23:16,910 --> 00:23:21,970
had before but just converting all

00:23:18,860 --> 00:23:25,100
across doing all of the IP checks

00:23:21,970 --> 00:23:27,680
getting all of the CI pipeline set up

00:23:25,100 --> 00:23:29,180
getting all of that up and getting it

00:23:27,680 --> 00:23:31,700
through the release process is a huge

00:23:29,180 --> 00:23:35,780
amount of work so it actually took until

00:23:31,700 --> 00:23:39,050
January 20 this year 2019 before e4j was

00:23:35,780 --> 00:23:41,930
released and that was essentially a

00:23:39,050 --> 00:23:43,670
rebadged Java EE ain't released through

00:23:41,930 --> 00:23:45,470
the Eclipse release process fully

00:23:43,670 --> 00:23:50,180
eclipsed licensed fully eclipsed type II

00:23:45,470 --> 00:23:53,450
but it was tested against the Jakarta so

00:23:50,180 --> 00:23:55,220
the Java EE 8 tcks because one of the

00:23:53,450 --> 00:23:57,110
things that hadn't quite been donated at

00:23:55,220 --> 00:24:02,000
that point and got sorted out was the TC

00:23:57,110 --> 00:24:04,100
case we then had in September Jakarta

00:24:02,000 --> 00:24:06,110
ee8 and that was essentially the same

00:24:04,100 --> 00:24:09,230
thing again but this time it passed the

00:24:06,110 --> 00:24:10,940
tcks the Eclipse version of them there

00:24:09,230 --> 00:24:13,130
they are essentially identical they are

00:24:10,940 --> 00:24:16,550
just rebadged versions as Java EE 8 ones

00:24:13,130 --> 00:24:18,560
but it's now sort of a fully eclipsed

00:24:16,550 --> 00:24:19,990
releases so it's eclipse code Eclipse

00:24:18,560 --> 00:24:23,000
license passing the Eclipse

00:24:19,990 --> 00:24:26,750
compatibility tests so that came out in

00:24:23,000 --> 00:24:28,070
September and the plan for Java EE next

00:24:26,750 --> 00:24:32,270
is still under discussion

00:24:28,070 --> 00:24:33,500
so judge akuto jakarta IE 9 there is a

00:24:32,270 --> 00:24:35,060
small ring

00:24:33,500 --> 00:24:38,690
that emerged during this donation

00:24:35,060 --> 00:24:42,290
process and that is at some point arson

00:24:38,690 --> 00:24:46,520
oh by the way you can't make any changes

00:24:42,290 --> 00:24:50,000
in the jar 4x namespace that's ours you

00:24:46,520 --> 00:24:53,840
need to change packages and that's huge

00:24:50,000 --> 00:24:55,940
that will have a massive impact on end

00:24:53,840 --> 00:24:58,160
users particularly because all of a

00:24:55,940 --> 00:25:00,320
sudden it's not Java X sermon it'll be

00:24:58,160 --> 00:25:07,760
Jakarta servlet and that will be the say

00:25:00,320 --> 00:25:10,820
for all of the specs so the next release

00:25:07,760 --> 00:25:13,460
of Jakarta ee the current plan is that

00:25:10,820 --> 00:25:16,510
it will just do that package name change

00:25:13,460 --> 00:25:20,270
and it's expected to take about a year

00:25:16,510 --> 00:25:23,000
so September 2020 there will be

00:25:20,270 --> 00:25:24,980
hopefully Jakarta 89 would have done

00:25:23,000 --> 00:25:27,830
that renaming what it won't be doing

00:25:24,980 --> 00:25:29,690
unless they are very minor very feel is

00:25:27,830 --> 00:25:33,730
making any behavioral changes at any

00:25:29,690 --> 00:25:33,730
other API changes any new features

00:25:34,030 --> 00:25:38,060
what is also being discussed right is

00:25:36,530 --> 00:25:41,990
well how do we maintain backwards

00:25:38,060 --> 00:25:46,010
compatibility and the short answer is we

00:25:41,990 --> 00:25:47,630
don't know yet we have some ideas and we

00:25:46,010 --> 00:25:51,050
were discussing these over dinner the

00:25:47,630 --> 00:25:53,600
other evening one idea that's been

00:25:51,050 --> 00:25:55,100
suggested is half the container at

00:25:53,600 --> 00:25:57,410
runtime it's actually do a dynamic

00:25:55,100 --> 00:26:00,080
translation so if the app asks for

00:25:57,410 --> 00:26:01,820
Jakarta X server that got HTTP servlet

00:26:00,080 --> 00:26:04,640
will give it the Java the Jakarta

00:26:01,820 --> 00:26:06,520
version instead and do that do that in

00:26:04,640 --> 00:26:10,310
the class loader do it at runtime and

00:26:06,520 --> 00:26:15,260
let's see if that works don't know

00:26:10,310 --> 00:26:17,360
whether it will work it might it's

00:26:15,260 --> 00:26:20,150
certainly not going to help performance

00:26:17,360 --> 00:26:21,950
whether it or hinder it don't know again

00:26:20,150 --> 00:26:24,170
we need to actually code it up and test

00:26:21,950 --> 00:26:25,760
it now other people said no show me the

00:26:24,170 --> 00:26:27,110
code and that's definitely case where we

00:26:25,760 --> 00:26:27,910
need to get some code running and see

00:26:27,110 --> 00:26:31,070
what it looks like

00:26:27,910 --> 00:26:33,500
another option is why don't we try to do

00:26:31,070 --> 00:26:35,600
something at deploy time so if somebody

00:26:33,500 --> 00:26:39,140
presents something to Tomcat that uses

00:26:35,600 --> 00:26:41,060
the Java X version of the API is at

00:26:39,140 --> 00:26:43,160
before time we take that we run it

00:26:41,060 --> 00:26:45,500
through something yet to be written

00:26:43,160 --> 00:26:46,179
created defined or anything but that's

00:26:45,500 --> 00:26:48,369
something

00:26:46,179 --> 00:26:50,619
effectively changes the bytecode so it

00:26:48,369 --> 00:26:52,749
switches it to Jakarta exactly does the

00:26:50,619 --> 00:26:54,369
rename on the bytecode before the

00:26:52,749 --> 00:26:55,509
application is deployed and there are

00:26:54,369 --> 00:26:57,970
tools out there that we can use to do

00:26:55,509 --> 00:27:02,440
that ASM bytecode engineering library

00:26:57,970 --> 00:27:04,720
that's certainly doable again how

00:27:02,440 --> 00:27:06,490
successful it will be don't know we need

00:27:04,720 --> 00:27:08,369
to try it we need to see what works but

00:27:06,490 --> 00:27:12,850
those are the sorts of ideas with wind

00:27:08,369 --> 00:27:15,610
looking at to help with that backwards

00:27:12,850 --> 00:27:20,049
compatibility when that big bang name

00:27:15,610 --> 00:27:21,700
change happens so I want to go through

00:27:20,049 --> 00:27:23,110
and talk a little bit more about the two

00:27:21,700 --> 00:27:24,759
releases we've had and just sort of my

00:27:23,110 --> 00:27:28,629
experience of being involved in them I

00:27:24,759 --> 00:27:32,470
was previously on the JCP expert groups

00:27:28,629 --> 00:27:36,360
for servlet JSP WebSocket and expression

00:27:32,470 --> 00:27:40,629
language and I'm in the equivalent

00:27:36,360 --> 00:27:43,539
project groups at eclipse so with E for

00:27:40,629 --> 00:27:45,309
j8 what was good was we immediately

00:27:43,539 --> 00:27:47,440
started to see some wider community

00:27:45,309 --> 00:27:49,480
engagement one of the things I've

00:27:47,440 --> 00:27:51,220
noticed with the JCP was that there was

00:27:49,480 --> 00:27:52,990
a fairly simple rule about whether a

00:27:51,220 --> 00:27:53,889
change was going to be included if I

00:27:52,990 --> 00:27:57,009
Rahul liked it

00:27:53,889 --> 00:27:59,409
it went in viroqua didn't like it it was

00:27:57,009 --> 00:28:01,749
never going in if I record didn't care

00:27:59,409 --> 00:28:03,309
one way or the other well it depended

00:28:01,749 --> 00:28:04,840
how busy the spec lead was and whether

00:28:03,309 --> 00:28:08,019
you could twist their arm into including

00:28:04,840 --> 00:28:09,399
it but it was very much Oracle the spec

00:28:08,019 --> 00:28:10,840
lead which was normally Oracle were in

00:28:09,399 --> 00:28:13,509
charge they got to make all the

00:28:10,840 --> 00:28:15,519
decisions right at the beginning of the

00:28:13,509 --> 00:28:17,350
e4j eight you started to see a broader

00:28:15,519 --> 00:28:19,659
community coming together from lots of

00:28:17,350 --> 00:28:21,190
different places to make those community

00:28:19,659 --> 00:28:23,980
wide decisions and that was definitely a

00:28:21,190 --> 00:28:27,039
good thing cross project coordination

00:28:23,980 --> 00:28:28,749
was tricky we've gone from the situation

00:28:27,039 --> 00:28:30,340
where there was one corporate entity in

00:28:28,749 --> 00:28:33,100
charge setting the rules setting the

00:28:30,340 --> 00:28:36,850
boundaries deciding how everything was

00:28:33,100 --> 00:28:39,279
going to work to a bunch of largely

00:28:36,850 --> 00:28:40,960
separate projects with some overlap but

00:28:39,279 --> 00:28:45,610
we still needed some decisions to be

00:28:40,960 --> 00:28:47,230
made centrally so the process of working

00:28:45,610 --> 00:28:48,039
out exactly how those decisions were

00:28:47,230 --> 00:28:50,049
going to be made and what those

00:28:48,039 --> 00:28:51,610
decisions were that took a little bit of

00:28:50,049 --> 00:28:52,840
time it was a it was a little bit

00:28:51,610 --> 00:28:55,359
difficult to work out but again that's

00:28:52,840 --> 00:28:57,730
not a surprise that's fairly typical of

00:28:55,359 --> 00:28:59,389
that bit migration from purely

00:28:57,730 --> 00:29:02,359
corporately driven to an open

00:28:59,389 --> 00:29:04,729
environment to again not particularly

00:29:02,359 --> 00:29:08,719
problematic the conversations of cells

00:29:04,729 --> 00:29:11,059
were were respectful they were polite we

00:29:08,719 --> 00:29:12,859
ended up in a good in a good place it

00:29:11,059 --> 00:29:15,919
just took us a while to get there but as

00:29:12,859 --> 00:29:18,440
I said that was entirely expected I did

00:29:15,919 --> 00:29:20,299
a few times get a sense that hang on a

00:29:18,440 --> 00:29:22,820
minute something's happening here and

00:29:20,299 --> 00:29:24,440
I've missed something that a decision

00:29:22,820 --> 00:29:28,159
has been made there's been a discussion

00:29:24,440 --> 00:29:29,779
somewhere and I haven't seen it how I

00:29:28,159 --> 00:29:31,159
miss I might not subscribe to the right

00:29:29,779 --> 00:29:32,419
mailing lists and we're not reading

00:29:31,159 --> 00:29:34,190
there I think something's going on here

00:29:32,419 --> 00:29:35,839
so I subscribed a few more mailing lists

00:29:34,190 --> 00:29:37,849
and that helped a bit but there was

00:29:35,839 --> 00:29:39,469
still a sense that things were happening

00:29:37,849 --> 00:29:41,899
elsewhere things were happening off nest

00:29:39,469 --> 00:29:43,669
but that was diminishing over time it

00:29:41,899 --> 00:29:44,779
was it was better at the end than it was

00:29:43,669 --> 00:29:46,519
at the beginning so that was heading in

00:29:44,779 --> 00:29:48,649
the right direction again that's a

00:29:46,519 --> 00:29:50,119
fairly typical thing to happen with a

00:29:48,649 --> 00:29:51,409
large donation into an open source

00:29:50,119 --> 00:29:54,229
project so again I wasn't particularly

00:29:51,409 --> 00:29:56,839
concerned it was fantastic to have

00:29:54,229 --> 00:29:59,359
access to the T CK's again Apache lost

00:29:56,839 --> 00:30:01,639
access to those quite a few years ago

00:29:59,359 --> 00:30:02,899
long story behind it come and find me at

00:30:01,639 --> 00:30:05,539
the break you feel me to bore you about

00:30:02,899 --> 00:30:07,609
what the details behind that but we got

00:30:05,539 --> 00:30:09,739
access to them again now the T CK's

00:30:07,609 --> 00:30:12,259
aren't perfect they're a long way from

00:30:09,739 --> 00:30:14,509
perfect but they are still a large

00:30:12,259 --> 00:30:16,849
number of tests that we can apply to

00:30:14,509 --> 00:30:18,079
Tomcat and if it fails that normally

00:30:16,849 --> 00:30:19,609
means there's something wrong so it

00:30:18,079 --> 00:30:24,409
gives us an opportunity to find more

00:30:19,609 --> 00:30:26,389
bugs and in having access to the tcks it

00:30:24,409 --> 00:30:27,769
was good that we were actually did

00:30:26,389 --> 00:30:29,539
actually find some tomcat bugs and got

00:30:27,769 --> 00:30:31,549
them fixed so that that was a very much

00:30:29,539 --> 00:30:34,669
a positive we also actually found some

00:30:31,549 --> 00:30:36,829
bugs in the tcks and got that great

00:30:34,669 --> 00:30:38,599
feeling where I found a bug at the last

00:30:36,829 --> 00:30:40,999
it's open source I can actually figure

00:30:38,599 --> 00:30:43,789
out what's gone wrong and contribute a

00:30:40,999 --> 00:30:46,549
pull request back to get it fixed so we

00:30:43,789 --> 00:30:48,139
starting to see there both sides

00:30:46,549 --> 00:30:50,749
benefits benefiting Tomcat was

00:30:48,139 --> 00:30:53,119
benefiting from having access into tcks

00:30:50,749 --> 00:30:55,579
the T CK's were benefiting from us from

00:30:53,119 --> 00:30:56,570
using them finding bugs and reporting

00:30:55,579 --> 00:30:58,219
them back with fixes you know that's

00:30:56,570 --> 00:31:01,579
kind of how open-source is meant to work

00:30:58,219 --> 00:31:06,589
in yet things were good there were a

00:31:01,579 --> 00:31:08,450
couple of minor frustrations the service

00:31:06,589 --> 00:31:10,039
back and it's probably only people like

00:31:08,450 --> 00:31:12,019
me who are down in the weeds with it all

00:31:10,039 --> 00:31:12,780
the time notice these things but there's

00:31:12,019 --> 00:31:15,360
a couple of mess

00:31:12,780 --> 00:31:18,390
that are deprecated in the Javadoc that

00:31:15,360 --> 00:31:19,710
aren't deprecated with the annotation so

00:31:18,390 --> 00:31:21,570
they're not immediately obvious to

00:31:19,710 --> 00:31:22,920
programmers unless they go looking at

00:31:21,570 --> 00:31:24,210
the Javadoc that the methods are

00:31:22,920 --> 00:31:26,880
deprecated and they're not meant to be

00:31:24,210 --> 00:31:29,070
using them we wanted to fix that and the

00:31:26,880 --> 00:31:30,780
ease for j8 release seemed like a great

00:31:29,070 --> 00:31:35,370
time to do it because we could change

00:31:30,780 --> 00:31:37,530
the code now yes and the good thing is

00:31:35,370 --> 00:31:40,950
this this particular annotation had

00:31:37,530 --> 00:31:42,660
absolutely no impact at all on binary

00:31:40,950 --> 00:31:47,100
compatibility so it was a safe thing to

00:31:42,660 --> 00:31:48,630
do unfortunately the TCK wasn't smart

00:31:47,100 --> 00:31:50,580
enough to spot that when it was checking

00:31:48,630 --> 00:31:51,960
binary compatibility so it's a no

00:31:50,580 --> 00:31:54,750
there's a new annotation here that's not

00:31:51,960 --> 00:31:56,940
compatible you can't do it now we could

00:31:54,750 --> 00:31:58,560
have tried changing the TCK but bear in

00:31:56,940 --> 00:32:00,720
mind this release was against the oracle

00:31:58,560 --> 00:32:03,300
TCK is the java re' 8 1 so they weren't

00:32:00,720 --> 00:32:06,330
going to change so today I will have to

00:32:03,300 --> 00:32:08,550
roll that change back then but it was it

00:32:06,330 --> 00:32:10,560
was only rolled back in the EU 4 j 8

00:32:08,550 --> 00:32:11,910
branch it was still in master we would

00:32:10,560 --> 00:32:13,680
have picked it up in the next release so

00:32:11,910 --> 00:32:15,480
it was a minor frustration we can get it

00:32:13,680 --> 00:32:19,920
as early as we wanted but it was going

00:32:15,480 --> 00:32:23,700
to be there in the next one Jakarta ee 8

00:32:19,920 --> 00:32:25,920
frankly caught me by surprise I was on

00:32:23,700 --> 00:32:28,020
two weeks holiday over the summer sat by

00:32:25,920 --> 00:32:29,730
the pool checking my email as I usually

00:32:28,020 --> 00:32:32,430
do yeah I know I'm meant to be on the

00:32:29,730 --> 00:32:34,770
holiday but I prefer just to keep on top

00:32:32,430 --> 00:32:36,240
of it so I know rather than have 2000

00:32:34,770 --> 00:32:38,100
emails that I need to read when I come

00:32:36,240 --> 00:32:39,870
back I prefer to just know which six I

00:32:38,100 --> 00:32:41,040
need to do something about don't

00:32:39,870 --> 00:32:42,180
necessarily do anything with him when

00:32:41,040 --> 00:32:43,680
I'm on holiday but at least I know

00:32:42,180 --> 00:32:45,780
they're there so it's just spinning

00:32:43,680 --> 00:32:48,390
through those and I find an email on one

00:32:45,780 --> 00:32:51,450
of the after no it's personal to me I

00:32:48,390 --> 00:32:52,710
think saying right yes Jakarta here's a

00:32:51,450 --> 00:32:56,250
list of things to do you need to do it

00:32:52,710 --> 00:32:59,520
in the next 5 days go didn't go down

00:32:56,250 --> 00:33:00,830
very well I don't react well to things

00:32:59,520 --> 00:33:02,730
like that at the best of times

00:33:00,830 --> 00:33:04,950
particularly not when I'm volunteering

00:33:02,730 --> 00:33:07,010
on an open source project so big

00:33:04,950 --> 00:33:09,210
surprise I didn't actually do any of it

00:33:07,010 --> 00:33:11,570
but by the time I got back off holiday

00:33:09,210 --> 00:33:14,640
somebody else had already done it

00:33:11,570 --> 00:33:16,320
my sense with Jakarta e8 was there was

00:33:14,640 --> 00:33:18,030
less community involvement there seemed

00:33:16,320 --> 00:33:19,650
to be more people being added to the

00:33:18,030 --> 00:33:22,340
projects to do the work for Joe Carter

00:33:19,650 --> 00:33:24,420
e8 and then disappearing again things

00:33:22,340 --> 00:33:25,460
seem to be sort of taking a bit of a

00:33:24,420 --> 00:33:27,410
step back

00:33:25,460 --> 00:33:28,850
and there was definitely a greater sense

00:33:27,410 --> 00:33:30,500
of conversations happening we're not

00:33:28,850 --> 00:33:32,810
least of which all let's have Jakarta

00:33:30,500 --> 00:33:34,220
ee8 I missed that one now that might be

00:33:32,810 --> 00:33:38,120
down to me again not being on the right

00:33:34,220 --> 00:33:40,460
mailing lists but my sense of things

00:33:38,120 --> 00:33:42,200
that cause me to think this isn't quite

00:33:40,460 --> 00:33:44,090
as community-led as it should be

00:33:42,200 --> 00:33:49,580
they were ticking upwards rather than

00:33:44,090 --> 00:33:51,140
downwards the cleanup I talked about

00:33:49,580 --> 00:33:54,170
with the deprecation markers that we

00:33:51,140 --> 00:33:58,250
left in master this one I really don't

00:33:54,170 --> 00:33:59,480
get but at some point a decision seems

00:33:58,250 --> 00:34:01,670
to have taken the owner we only do

00:33:59,480 --> 00:34:05,210
releases off master so all of those got

00:34:01,670 --> 00:34:07,850
reverted as well which I why we do still

00:34:05,210 --> 00:34:10,010
just take a branch from the e4 j8

00:34:07,850 --> 00:34:14,060
tagging cat note just didn't seem to

00:34:10,010 --> 00:34:17,750
happen what really wanked me up was what

00:34:14,060 --> 00:34:19,430
happened again sees me very personally

00:34:17,750 --> 00:34:21,160
not necessarily a huge problem but all

00:34:19,430 --> 00:34:23,600
those fixes we reported to the tea

00:34:21,160 --> 00:34:25,640
provided to the te CK's and the P ours

00:34:23,600 --> 00:34:28,490
they'd all been applied which is great

00:34:25,640 --> 00:34:31,880
and it was all ticking along nicely and

00:34:28,490 --> 00:34:34,070
then about three months in I get

00:34:31,880 --> 00:34:37,070
forwarded in emails as mere IBM has been

00:34:34,070 --> 00:34:39,050
testing a some server container against

00:34:37,070 --> 00:34:42,680
a TCK and they've got this failure it

00:34:39,050 --> 00:34:44,810
looks like the fix you've made isn't

00:34:42,680 --> 00:34:46,460
quite right could you go back and you

00:34:44,810 --> 00:34:49,430
know fix your foot you know get your fix

00:34:46,460 --> 00:34:51,110
right I think it's certainly possible

00:34:49,430 --> 00:34:55,160
well okay we'll gonna have a look at it

00:34:51,110 --> 00:34:57,620
look it looks okay fortunately what they

00:34:55,160 --> 00:35:00,110
provided was the trace of the TCK run

00:34:57,620 --> 00:35:02,650
where it failed so I was able to look at

00:35:00,110 --> 00:35:02,650
that thing ah

00:35:02,860 --> 00:35:08,930
so this some date in the expires field

00:35:07,310 --> 00:35:11,960
for the cookie header that your service

00:35:08,930 --> 00:35:14,690
generating it's meant to be four digits

00:35:11,960 --> 00:35:17,360
not two so as far as the clients

00:35:14,690 --> 00:35:21,020
concerned that's ad 19 about 2000 years

00:35:17,360 --> 00:35:23,390
ago not ad 2019 no it's alright no

00:35:21,020 --> 00:35:25,010
problem it's okay the server IBM it's at

00:35:23,390 --> 00:35:26,360
now it's a server bug not our problem

00:35:25,010 --> 00:35:28,700
everything's fine we can carry on I

00:35:26,360 --> 00:35:31,640
thought that would be the end of it it

00:35:28,700 --> 00:35:34,450
wasn't no no no no no no no you've got

00:35:31,640 --> 00:35:37,310
to revert it sorry what what hey and

00:35:34,450 --> 00:35:39,680
know if that server

00:35:37,310 --> 00:35:44,570
past the Java EE eight TCK it has to

00:35:39,680 --> 00:35:46,970
pass the Jakarta ei TCK so you've got to

00:35:44,570 --> 00:35:50,390
revert the fix that's crazy

00:35:46,970 --> 00:35:52,040
the T CK's wrong Tom the reason I knew

00:35:50,390 --> 00:35:54,980
no it's wrong because Tomcat can't pass

00:35:52,040 --> 00:35:57,470
it unless we could fix it okay why don't

00:35:54,980 --> 00:35:59,300
we just exclude the test and that's the

00:35:57,470 --> 00:36:00,500
standard way within the TC case if

00:35:59,300 --> 00:36:02,630
there's a problem with the test it's

00:36:00,500 --> 00:36:04,580
found to be faulty you just exclude it

00:36:02,630 --> 00:36:06,620
and then people can run it if they want

00:36:04,580 --> 00:36:08,960
to see what's going on or nots but as

00:36:06,620 --> 00:36:10,250
long as you pass all of the tests except

00:36:08,960 --> 00:36:12,590
the excluded ones you can still pass

00:36:10,250 --> 00:36:15,370
let's do that no we're going to roll

00:36:12,590 --> 00:36:18,380
back we're going to revert the fix

00:36:15,370 --> 00:36:21,290
that's crazy so we're now in a situation

00:36:18,380 --> 00:36:23,960
where this server over here that is not

00:36:21,290 --> 00:36:26,360
spec compliant can pass the TCK and

00:36:23,960 --> 00:36:29,330
tadka over here that is spectrum client

00:36:26,360 --> 00:36:31,490
can't pass the TC it's bonkers but I

00:36:29,330 --> 00:36:34,670
lost that argument as you can tell I was

00:36:31,490 --> 00:36:36,140
a little bit annoyed I got more annoyed

00:36:34,670 --> 00:36:39,500
when they then reverted all of the other

00:36:36,140 --> 00:36:41,420
TCK fixes we'd have Clyde as well and

00:36:39,500 --> 00:36:43,640
then the last month or so let me see if

00:36:41,420 --> 00:36:46,490
I can get this right so there was a fix

00:36:43,640 --> 00:36:48,470
then they reverted the fix then they

00:36:46,490 --> 00:36:51,170
reverted the fit they reverted the

00:36:48,470 --> 00:36:53,420
revert of effects then they reverted the

00:36:51,170 --> 00:36:56,330
revert of the revert of the FEC's and

00:36:53,420 --> 00:36:58,040
now they've reverted the revert of the

00:36:56,330 --> 00:36:59,480
revert of the revert of the fixed if

00:36:58,040 --> 00:37:02,090
you're keeping track of all that the fix

00:36:59,480 --> 00:37:05,240
is now back in the code base which is

00:37:02,090 --> 00:37:07,310
good the the not so good thing from my

00:37:05,240 --> 00:37:10,190
point of view is there was no discussion

00:37:07,310 --> 00:37:12,200
about most of those reversions on any

00:37:10,190 --> 00:37:13,820
mailing list that I could find somebody

00:37:12,200 --> 00:37:15,140
somewhere was just making a decision and

00:37:13,820 --> 00:37:18,260
it was just happening and that's not

00:37:15,140 --> 00:37:22,040
really how it's meant to be so again I I

00:37:18,260 --> 00:37:24,620
am concerned about so the way things are

00:37:22,040 --> 00:37:27,530
heading up and the community isn't

00:37:24,620 --> 00:37:29,030
evolved I think was making a good start

00:37:27,530 --> 00:37:30,350
with uj8 and it's heading in the right

00:37:29,030 --> 00:37:32,720
direction I think it's taken a bit of a

00:37:30,350 --> 00:37:35,360
step back I hope that it now takes a

00:37:32,720 --> 00:37:37,390
step forward from this point what

00:37:35,360 --> 00:37:40,070
actually happens remains to be seen

00:37:37,390 --> 00:37:43,760
so in terms of what's happening at jakar

00:37:40,070 --> 00:37:45,350
3e we sort of got scheduled for server

00:37:43,760 --> 00:37:47,240
next but that's just going to be the

00:37:45,350 --> 00:37:49,370
package rename there isn't really a

00:37:47,240 --> 00:37:50,460
scheduled first servlet next with new

00:37:49,370 --> 00:37:53,220
features that's

00:37:50,460 --> 00:37:54,630
up in the air when I wrote these slides

00:37:53,220 --> 00:37:56,790
the package renaming was very much

00:37:54,630 --> 00:37:58,020
unresolved there was one group of people

00:37:56,790 --> 00:37:58,500
that saying we should do it all in one

00:37:58,020 --> 00:38:00,150
go

00:37:58,500 --> 00:38:02,040
another group saying well we should just

00:38:00,150 --> 00:38:04,980
change the ones we need to change as we

00:38:02,040 --> 00:38:07,109
need to change them don't plus side of

00:38:04,980 --> 00:38:09,660
that well it's it's less impact but the

00:38:07,109 --> 00:38:11,309
all the upside it's less impact but it's

00:38:09,660 --> 00:38:13,410
lots of little impacts again and again

00:38:11,309 --> 00:38:15,569
and again and again and again person I

00:38:13,410 --> 00:38:17,220
think Big Bang is the way to go if we

00:38:15,569 --> 00:38:19,559
have to do this as much as I don't like

00:38:17,220 --> 00:38:22,770
like the fact that we do Big Bang's a

00:38:19,559 --> 00:38:25,079
better approach and I think that's the

00:38:22,770 --> 00:38:26,520
way consensus is heading but there

00:38:25,079 --> 00:38:29,190
hasn't been a definitive this is what

00:38:26,520 --> 00:38:30,720
we're going to do yet and there is the

00:38:29,190 --> 00:38:33,900
small matter that the donation of Java

00:38:30,720 --> 00:38:36,059
EE isn't quite complete yet the spec

00:38:33,900 --> 00:38:40,050
texts still haven't come all the way

00:38:36,059 --> 00:38:41,970
across last time I looked about half of

00:38:40,050 --> 00:38:43,770
them had got as far as they've been

00:38:41,970 --> 00:38:45,809
donated now going through IP clearance

00:38:43,770 --> 00:38:47,880
so they're getting there but we don't

00:38:45,809 --> 00:38:49,770
actually have specs that we can edit yet

00:38:47,880 --> 00:38:51,270
so even if we were at a point where we

00:38:49,770 --> 00:38:52,710
wanted to do servlet dot next and we

00:38:51,270 --> 00:38:54,599
wanted to update the specification

00:38:52,710 --> 00:38:55,799
document we can't the Java doc no

00:38:54,599 --> 00:38:57,059
problem because that's in the code and

00:38:55,799 --> 00:38:58,799
we've got the code that's through IP

00:38:57,059 --> 00:39:01,410
clearance we can edit that to our hearts

00:38:58,799 --> 00:39:03,210
content we don't yet have the text of

00:39:01,410 --> 00:39:04,950
the server spec for us to work on and

00:39:03,210 --> 00:39:06,990
that's still going through Oracle's and

00:39:04,950 --> 00:39:11,010
eclipses process the intent is to get it

00:39:06,990 --> 00:39:14,490
across it's just not here yet so future

00:39:11,010 --> 00:39:16,500
plans for tomcat then tomcat 10 is going

00:39:14,490 --> 00:39:18,240
to be serve the next major release of

00:39:16,500 --> 00:39:19,980
the server that spec generally every

00:39:18,240 --> 00:39:21,540
major release of tomcat is aligned to

00:39:19,980 --> 00:39:23,760
major releases of this or releases of

00:39:21,540 --> 00:39:24,750
the servlet spec so tomcat 10 will be

00:39:23,760 --> 00:39:25,770
aligned to the next one which is

00:39:24,750 --> 00:39:28,079
probably going through the package

00:39:25,770 --> 00:39:32,010
renaming we want to remove the AP our

00:39:28,079 --> 00:39:34,650
native connector that's because that

00:39:32,010 --> 00:39:37,680
connector does io and encryption in

00:39:34,650 --> 00:39:39,630
native code and we the io bit of that is

00:39:37,680 --> 00:39:41,640
not as stable as we'd like it to be so

00:39:39,630 --> 00:39:43,230
we want to just use the native code to

00:39:41,640 --> 00:39:46,920
doing the encryption so we're

00:39:43,230 --> 00:39:49,380
essentially had to rework that openness

00:39:46,920 --> 00:39:51,030
we currently currently raps open SSL

00:39:49,380 --> 00:39:53,640
we're hoping that by reworking it we can

00:39:51,030 --> 00:39:55,799
open it wrap open SSL and other clones

00:39:53,640 --> 00:39:58,109
and it gives us a chance to update the

00:39:55,799 --> 00:40:01,369
code that is a little dated there's

00:39:58,109 --> 00:40:03,960
actually a open JDK project called

00:40:01,369 --> 00:40:05,369
Panama I think it's the one

00:40:03,960 --> 00:40:07,920
it confused with Valhalla I think it's

00:40:05,369 --> 00:40:09,660
Panama but essentially it's a project

00:40:07,920 --> 00:40:12,839
that allows you to take a native library

00:40:09,660 --> 00:40:14,550
and the tool will create a Java wrapper

00:40:12,839 --> 00:40:15,960
around that so you just have a jar

00:40:14,550 --> 00:40:18,270
that's got the native library embedded

00:40:15,960 --> 00:40:21,300
in it and you just use it as you would a

00:40:18,270 --> 00:40:23,070
normal Java API it might be that that

00:40:21,300 --> 00:40:25,500
basically does all of that work for us

00:40:23,070 --> 00:40:26,970
and it will be lovely I suspect I'm

00:40:25,500 --> 00:40:28,560
being overly optimistic with that and

00:40:26,970 --> 00:40:30,869
nobody some manual work will need to do

00:40:28,560 --> 00:40:33,240
but we're certainly going to be looking

00:40:30,869 --> 00:40:35,580
in that direction and with that I'm only

00:40:33,240 --> 00:40:38,540
slightly over my time which is

00:40:35,580 --> 00:40:40,980
miraculous for me so we've got about

00:40:38,540 --> 00:40:42,599
eight or nine minutes of questions so

00:40:40,980 --> 00:40:46,910
I'll open up the floor if you've got any

00:40:42,599 --> 00:40:46,910
questions now's the time to ask them

00:40:47,270 --> 00:40:58,380
deathly silence come on there's got to

00:40:49,440 --> 00:41:00,210
be one somewhere yes Rayna when you were

00:40:58,380 --> 00:41:01,710
talking about the fixes to the tzk being

00:41:00,210 --> 00:41:05,460
applied and then removed and applied

00:41:01,710 --> 00:41:08,430
again he said they who were they is it

00:41:05,460 --> 00:41:09,930
specific people companies or what what

00:41:08,430 --> 00:41:14,369
is the difference between we and they

00:41:09,930 --> 00:41:16,020
they're however say an Oracle employee

00:41:14,369 --> 00:41:19,170
who was an eclipse committer

00:41:16,020 --> 00:41:21,450
and it looked and I said I only say

00:41:19,170 --> 00:41:27,030
looked as if it was being directed by

00:41:21,450 --> 00:41:29,760
Oracle that was the sense I got it's an

00:41:27,030 --> 00:41:33,390
eclipse is a is a different beast to

00:41:29,760 --> 00:41:35,700
Apache and the more I spend time there

00:41:33,390 --> 00:41:38,609
the more I notice the differences at

00:41:35,700 --> 00:41:39,960
Apache I'm we used to yeah it's the pmc

00:41:38,609 --> 00:41:42,630
that decides things it's done on the

00:41:39,960 --> 00:41:44,970
basis of an individual and I thought I

00:41:42,630 --> 00:41:47,390
can't remember who most of the employers

00:41:44,970 --> 00:41:50,609
are for most of my fellow committers

00:41:47,390 --> 00:41:53,250
whereas that Eclipse employer is much

00:41:50,609 --> 00:41:54,780
more front and center and they they have

00:41:53,250 --> 00:41:56,430
a say and they have a say in the

00:41:54,780 --> 00:41:58,890
technical direction and there are I

00:41:56,430 --> 00:42:00,500
forget the exact structure but there are

00:41:58,890 --> 00:42:03,690
sort of management committees within

00:42:00,500 --> 00:42:06,330
Jakarta area that are primarily

00:42:03,690 --> 00:42:08,339
populated by company nominated

00:42:06,330 --> 00:42:10,830
representatives and they help set the

00:42:08,339 --> 00:42:14,970
direction so as there is much more of a

00:42:10,830 --> 00:42:16,069
corporate input into how things are

00:42:14,970 --> 00:42:18,509
organized

00:42:16,069 --> 00:42:21,749
rather than sort of a more grassroots

00:42:18,509 --> 00:42:26,640
approach that that I'm used to but that

00:42:21,749 --> 00:42:29,309
looks as if and it it's difficult to say

00:42:26,640 --> 00:42:31,650
it yes they were Oracle employees was it

00:42:29,309 --> 00:42:34,410
an hour definitely Oracle it's hard to

00:42:31,650 --> 00:42:36,599
say because I can't really draw the

00:42:34,410 --> 00:42:38,609
distinction between well were they

00:42:36,599 --> 00:42:40,559
coming at it from a well we've always

00:42:38,609 --> 00:42:42,809
guarded the TCK and these are the rules

00:42:40,559 --> 00:42:45,150
we've worked to therefore this stuff has

00:42:42,809 --> 00:42:49,230
to be reverted and was that more of sort

00:42:45,150 --> 00:42:54,299
of a TCK JCP kind of mentality or is it

00:42:49,230 --> 00:42:56,160
an Oracle I can't I can't tell but it

00:42:54,299 --> 00:42:57,420
would be fair it was the people that

00:42:56,160 --> 00:42:59,249
were working on it before it came to

00:42:57,420 --> 00:43:01,380
eclipse were the people making those

00:42:59,249 --> 00:43:04,470
decisions and making those changes what

00:43:01,380 --> 00:43:11,869
exactly their motivations were I can't

00:43:04,470 --> 00:43:11,869
read minds any other questions

00:43:13,400 --> 00:43:22,619
okay questions see all of you if if

00:43:17,249 --> 00:43:25,380
Tomcat 10 is essentially Tomcat 9 with

00:43:22,619 --> 00:43:27,539
all of the Java X packages renamed to do

00:43:25,380 --> 00:43:33,420
cart or something how many of you get to

00:43:27,539 --> 00:43:36,660
be motivated to upgrade one two okay

00:43:33,420 --> 00:43:37,739
Babette a few maybe that that's that's

00:43:36,660 --> 00:43:46,440
better than I feared

00:43:37,739 --> 00:43:49,489
yes how many people actually plan to

00:43:46,440 --> 00:43:52,049
migrate to the checkout a star packages

00:43:49,489 --> 00:43:55,589
instead of sting trying to stay forever

00:43:52,049 --> 00:43:56,940
on to the jeddak's packages if so how

00:43:55,589 --> 00:44:00,450
many people would actually actively

00:43:56,940 --> 00:44:04,920
migrate to the Jakarta packages yeah

00:44:00,450 --> 00:44:10,200
about the same again okay that's that's

00:44:04,920 --> 00:44:11,430
better than I hoped so I'm the fear is

00:44:10,200 --> 00:44:13,859
that people will just stay on the old

00:44:11,430 --> 00:44:16,529
ones and until there's that there's a

00:44:13,859 --> 00:44:18,509
stronger motivation change it's actually

00:44:16,529 --> 00:44:20,579
quite positive that people are looking

00:44:18,509 --> 00:44:24,170
forward to stick to the to use the new

00:44:20,579 --> 00:44:24,170
ones so excellent

00:44:28,790 --> 00:44:33,690
drop the mic fine

00:44:30,480 --> 00:44:36,420
yeah booking at a commercial company so

00:44:33,690 --> 00:44:38,010
auntie people say that we must at some

00:44:36,420 --> 00:44:41,160
point in time change we want to change

00:44:38,010 --> 00:44:42,780
we need three months to do that after

00:44:41,160 --> 00:44:45,480
three months is not finished and the

00:44:42,780 --> 00:44:48,170
project is dead and sale what's what's

00:44:45,480 --> 00:44:51,810
the advantage project management comes

00:44:48,170 --> 00:44:53,550
no customer need said yeah so then it's

00:44:51,810 --> 00:44:56,460
dead again so that might happen at

00:44:53,550 --> 00:44:58,530
software for example started that at

00:44:56,460 --> 00:45:00,900
some point in time took much much longer

00:44:58,530 --> 00:45:05,520
brings no well you what's about to be

00:45:00,900 --> 00:45:06,810
killed yeah I certainly do Carter II I

00:45:05,520 --> 00:45:12,630
see it's going to be around for the long

00:45:06,810 --> 00:45:16,560
term the the interesting one is going to

00:45:12,630 --> 00:45:18,510
be in theory migration should just be a

00:45:16,560 --> 00:45:21,980
straight patent rename in the IDE and

00:45:18,510 --> 00:45:24,510
it'll be Italy take five minutes to do

00:45:21,980 --> 00:45:25,770
it's going to be all the edge cases that

00:45:24,510 --> 00:45:28,800
trip people up where people have used

00:45:25,770 --> 00:45:30,080
reflection or stuff like that where it's

00:45:28,800 --> 00:45:36,030
going to be in a bit more problematic

00:45:30,080 --> 00:45:37,650
but certainly from from a tomcat point

00:45:36,030 --> 00:45:41,250
of view I think we're gonna be spending

00:45:37,650 --> 00:45:44,220
more time working on the making sure of

00:45:41,250 --> 00:45:46,380
people still using the Java X api's can

00:45:44,220 --> 00:45:47,220
still run on Tomcat 10 in some form I

00:45:46,380 --> 00:45:49,290
think that's going to be the biggest

00:45:47,220 --> 00:45:51,680
piece of work for us she's why I think

00:45:49,290 --> 00:45:54,780
it'll take as long as it's going to take

00:45:51,680 --> 00:45:59,310
okay any more questions

00:45:54,780 --> 00:46:01,560
oh don't appear to any if you know if

00:45:59,310 --> 00:46:03,540
you do think of one then I'm around for

00:46:01,560 --> 00:46:06,390
the rest of the day do come and find me

00:46:03,540 --> 00:46:07,650
feel free to ask those questions then

00:46:06,390 --> 00:46:09,920
otherwise thank you very much for your

00:46:07,650 --> 00:46:09,920
attention

00:46:10,900 --> 00:46:12,960

YouTube URL: https://www.youtube.com/watch?v=hfgO6R9o5Tw


