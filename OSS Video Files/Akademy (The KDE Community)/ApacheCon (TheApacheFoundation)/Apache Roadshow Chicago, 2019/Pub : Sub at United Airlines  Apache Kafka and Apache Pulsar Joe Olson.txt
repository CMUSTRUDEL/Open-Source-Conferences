Title: Pub : Sub at United Airlines  Apache Kafka and Apache Pulsar Joe Olson
Publication date: 2019-07-08
Playlist: Apache Roadshow Chicago, 2019
Description: 
	Apache Pulsar and Apache Kafka are two top level pub-sub messaging system projects. This talk will explain how the two platforms implement the pub-sub model, and similarities and differences in their architectures and production deployment models, and what the current state of open source pub-sub is at Chicago based United Airlines.
Captions: 
	00:00:09,650 --> 00:00:20,220
so deserve the title this talk is so

00:00:17,970 --> 00:00:29,519
pigmented our lines but a little bit

00:00:20,220 --> 00:00:31,230
about the airline holster so agenda may

00:00:29,519 --> 00:00:37,309
Jacobi that it is headquartered in

00:00:31,230 --> 00:00:37,309
Chicago that's one Medicare on industry

00:00:37,760 --> 00:00:42,690
model because it's opportunity for an

00:00:40,290 --> 00:00:46,200
airline a little bit about vegetables

00:00:42,690 --> 00:00:51,410
are in keeper and we'll throw in a use

00:00:46,200 --> 00:00:56,600
case that any I'm not just another girls

00:00:51,410 --> 00:00:59,280
so I'm just a quick word about United

00:00:56,600 --> 00:01:02,460
you know the currently a thirty nine

00:00:59,280 --> 00:01:04,760
aircraft split between main learning

00:01:02,460 --> 00:01:07,500
whichever one supply longer routes and

00:01:04,760 --> 00:01:11,040
regional return little Wayne's and jump

00:01:07,500 --> 00:01:12,840
from here up those kinds of that they

00:01:11,040 --> 00:01:15,540
got order 50 planes on order so right

00:01:12,840 --> 00:01:17,310
there we have got the one of the first

00:01:15,540 --> 00:01:20,460
game owns any airline has any kind of

00:01:17,310 --> 00:01:23,360
supply chain we've got 1300 aircraft you

00:01:20,460 --> 00:01:27,090
got to do all the maintenance on them

00:01:23,360 --> 00:01:33,140
any maintenance large fleet type

00:01:27,090 --> 00:01:36,810
operation any gate problems we have

00:01:33,140 --> 00:01:40,079
united moved 150 passengers 28 that's

00:01:36,810 --> 00:01:43,229
lecture in order to do that we have to

00:01:40,079 --> 00:01:46,590
have a public facing websites selling

00:01:43,229 --> 00:01:48,479
2aq public that inventory obviously

00:01:46,590 --> 00:01:51,149
seats and so your sales seems like that

00:01:48,479 --> 00:01:55,470
the biggest part of the sales obviously

00:01:51,149 --> 00:01:57,210
a seat that a unique company unique sale

00:01:55,470 --> 00:02:00,840
because that's got a time component to

00:01:57,210 --> 00:02:02,700
it flying the man so it's not something

00:02:00,840 --> 00:02:06,329
he has a fixed place something the price

00:02:02,700 --> 00:02:08,479
varies based on demand it also has a

00:02:06,329 --> 00:02:11,009
geospatial component to it so I'll see

00:02:08,479 --> 00:02:13,440
I'll see you know window seat might be

00:02:11,009 --> 00:02:16,620
more fitted north in the middle C so

00:02:13,440 --> 00:02:18,410
sails the simple sales that airline have

00:02:16,620 --> 00:02:20,850
to actually quite complex

00:02:18,410 --> 00:02:22,320
you know it also has a mobile app see of

00:02:20,850 --> 00:02:24,060
all the problems solving problems that

00:02:22,320 --> 00:02:29,330
go on with a mobile app again people

00:02:24,060 --> 00:02:31,890
check in from world at any time to be

00:02:29,330 --> 00:02:34,080
one of the Royal key program so you've

00:02:31,890 --> 00:02:35,220
got a hundred fifty leave passengers a

00:02:34,080 --> 00:02:38,640
lot of those ones are part of the

00:02:35,220 --> 00:02:40,380
loyalty program so you have and all the

00:02:38,640 --> 00:02:43,910
problems you have maintaining custom

00:02:40,380 --> 00:02:46,710
grips all the surveys the loyalty

00:02:43,910 --> 00:02:47,880
campaigns anything you do to retain your

00:02:46,710 --> 00:02:51,750
customers you know I guess that

00:02:47,880 --> 00:02:52,410
compensate there's forty nine hundred

00:02:51,750 --> 00:02:55,290
daily departures

00:02:52,410 --> 00:02:57,150
so that's scheduling on the operations

00:02:55,290 --> 00:02:58,260
all the weather all about planning all

00:02:57,150 --> 00:03:03,720
those data problems that come with

00:02:58,260 --> 00:03:06,000
managing a network they also have thirty

00:03:03,720 --> 00:03:08,130
five or ten or fifty five networks in 28

00:03:06,000 --> 00:03:10,050
countries baggage claim while check-in

00:03:08,130 --> 00:03:12,920
things you do an airport to get through

00:03:10,050 --> 00:03:16,350
off the street onboard the plane and

00:03:12,920 --> 00:03:18,090
again 18,000 employees worldwide so they

00:03:16,350 --> 00:03:19,620
all need to be scheduled to aircraft and

00:03:18,090 --> 00:03:22,470
some may not get paid

00:03:19,620 --> 00:03:26,220
so ordinarily everything is constantly

00:03:22,470 --> 00:03:28,950
in motion a lot of the analytics we do

00:03:26,220 --> 00:03:31,170
is not only real path looking it's also

00:03:28,950 --> 00:03:32,760
forward-looking so with all these

00:03:31,170 --> 00:03:34,620
problems and the fact that the futures

00:03:32,760 --> 00:03:37,590
constantly in flux changing everyone's

00:03:34,620 --> 00:03:40,650
looking planes open seats and KT seats

00:03:37,590 --> 00:03:43,980
and finding Wi-Fi and adding that stuff

00:03:40,650 --> 00:03:45,840
to their their trip the place an airline

00:03:43,980 --> 00:03:47,160
is really a data scientist trained data

00:03:45,840 --> 00:03:48,720
engineer biggest ninth Street they've

00:03:47,160 --> 00:03:50,880
got every problem there is and it's very

00:03:48,720 --> 00:03:56,130
complex about it's been a career working

00:03:50,880 --> 00:03:57,570
at any one of them so in their line the

00:03:56,130 --> 00:04:02,550
business clothes for any analytics team

00:03:57,570 --> 00:04:03,810
it is 1001 for four ones obviously

00:04:02,550 --> 00:04:06,500
improve the customer experience that's

00:04:03,810 --> 00:04:08,520
number one you wanna reduce friction

00:04:06,500 --> 00:04:10,050
booking reservation getting through

00:04:08,520 --> 00:04:11,970
airports you want to make the customer

00:04:10,050 --> 00:04:16,320
experience better so that though

00:04:11,970 --> 00:04:17,730
actually joint how do you deliver a

00:04:16,320 --> 00:04:22,459
consistent message across all the

00:04:17,730 --> 00:04:22,459
channels you we won't so I'm mobile

00:04:22,610 --> 00:04:26,490
Travel Agency study to keep a consistent

00:04:24,720 --> 00:04:30,150
message across all those complex

00:04:26,490 --> 00:04:33,570
channels to volunteers the second thing

00:04:30,150 --> 00:04:36,150
is Ruby play experience so what we said

00:04:33,570 --> 00:04:37,890
maybe 8,000 employees that are out in

00:04:36,150 --> 00:04:41,250
front line come to make their jobs

00:04:37,890 --> 00:04:44,490
easier and so seconds they don't let any

00:04:41,250 --> 00:04:46,830
analytics live in an airline hands the

00:04:44,490 --> 00:04:48,390
employees are people on the front line

00:04:46,830 --> 00:04:51,060
to make the decisions how can you use

00:04:48,390 --> 00:04:52,980
technology to support that mode we need

00:04:51,060 --> 00:04:56,640
one from the surveys how are you using

00:04:52,980 --> 00:04:57,720
that to to make their life better then

00:04:56,640 --> 00:04:59,310
the third is obviously revenue

00:04:57,720 --> 00:05:03,330
generation you're trying to maximize

00:04:59,310 --> 00:05:07,230
revenue and then fourth is to

00:05:03,330 --> 00:05:09,390
operational reliability so that is what

00:05:07,230 --> 00:05:11,250
bad whether it's a maintenance situation

00:05:09,390 --> 00:05:15,210
comes down how do you reactively as

00:05:11,250 --> 00:05:17,520
efficiently and but the customers under

00:05:15,210 --> 00:05:20,190
the least much stress so all of these

00:05:17,520 --> 00:05:24,120
are compute problems we deal with day to

00:05:20,190 --> 00:05:27,090
day and then there's just some industry

00:05:24,120 --> 00:05:28,680
ideas I've seen past and user different

00:05:27,090 --> 00:05:32,310
airlines different ways to improve

00:05:28,680 --> 00:05:36,840
customer experience all in lines to have

00:05:32,310 --> 00:05:40,760
some kind of data analytics group that's

00:05:36,840 --> 00:05:48,900
trying to use the emergent technology to

00:05:40,760 --> 00:05:54,419
solve these problems in Airlines yeah ok

00:05:48,900 --> 00:05:55,560
so now we'll talk about puffs up so one

00:05:54,419 --> 00:05:57,150
of the reasons I wanted to do this talk

00:05:55,560 --> 00:05:59,760
was pretty much I didn't know anything

00:05:57,150 --> 00:06:02,910
about Becky bars Pulsar until a few

00:05:59,760 --> 00:06:04,979
weeks ago I learned very quickly at

00:06:02,910 --> 00:06:07,620
weight forward and San Francisco all

00:06:04,979 --> 00:06:10,110
about it and they got him I ran out very

00:06:07,620 --> 00:06:11,669
quickly and I'm here to make sure that

00:06:10,110 --> 00:06:14,250
on anyone elses radar because I think

00:06:11,669 --> 00:06:16,620
this is very interesting to keep model

00:06:14,250 --> 00:06:20,180
and I think it's going to get bigger as

00:06:16,620 --> 00:06:23,669
time goes on I think they saw a lot of a

00:06:20,180 --> 00:06:25,110
lot of times correctly and I want to

00:06:23,669 --> 00:06:26,790
just make sure that everyone who comes

00:06:25,110 --> 00:06:28,680
at this understands what this this

00:06:26,790 --> 00:06:32,880
framework does and how it differs from

00:06:28,680 --> 00:06:34,919
some of the secret our surrounding ok so

00:06:32,880 --> 00:06:36,780
what is vegetables are

00:06:34,919 --> 00:06:38,759
and I ripped most of the stuff right out

00:06:36,780 --> 00:06:42,150
the websites or mobile presentations

00:06:38,759 --> 00:06:44,610
I've seen so I try to keep their the

00:06:42,150 --> 00:06:47,189
point sign level not get to keep it down

00:06:44,610 --> 00:06:49,650
you believe so but just go through what

00:06:47,189 --> 00:06:54,210
this platform does and how it does it

00:06:49,650 --> 00:06:57,000
and obviously want more the website the

00:06:54,210 --> 00:06:59,490
manuals the framework is all out there

00:06:57,000 --> 00:07:04,259
you can tinker with it see see what you

00:06:59,490 --> 00:07:06,780
need to do so we'll pension file Sarah's

00:07:04,259 --> 00:07:08,069
open source distributed up sub messaging

00:07:06,780 --> 00:07:09,599
system originally created a guy who

00:07:08,069 --> 00:07:12,300
would not part of the Apache Software

00:07:09,599 --> 00:07:14,460
Foundation so the goals that they tried

00:07:12,300 --> 00:07:18,810
to meet with this framework is designed

00:07:14,460 --> 00:07:22,139
her Global Knowledge things so obviously

00:07:18,810 --> 00:07:26,189
any messaging system out there has to be

00:07:22,139 --> 00:07:27,900
somewhat low latency in order to get

00:07:26,189 --> 00:07:29,400
messages from point A to point B and

00:07:27,900 --> 00:07:31,439
reason a lot of time

00:07:29,400 --> 00:07:33,180
the trade-off on that is you also want

00:07:31,439 --> 00:07:35,580
to make things from durability obviously

00:07:33,180 --> 00:07:36,960
you have all the time in the world get

00:07:35,580 --> 00:07:38,250
message there you can make sure it's

00:07:36,960 --> 00:07:43,080
there but the trade-off there is

00:07:38,250 --> 00:07:45,449
Honeywell it alone latency and strong

00:07:43,080 --> 00:07:50,060
your ability you'll see you just like

00:07:45,449 --> 00:07:52,529
how they actually accomplish that

00:07:50,060 --> 00:07:55,229
they also provide a persistent message

00:07:52,529 --> 00:07:58,979
storage so this is one of the other key

00:07:55,229 --> 00:08:00,449
points that this framework is storage

00:07:58,979 --> 00:08:02,250
and this framework is not designed to be

00:08:00,449 --> 00:08:04,800
translated designed to be permanent so

00:08:02,250 --> 00:08:06,810
if you add data to this platform they

00:08:04,800 --> 00:08:08,699
give you several options to actually

00:08:06,810 --> 00:08:11,909
persists the data permanently in this

00:08:08,699 --> 00:08:14,819
class and one of the ways they do that

00:08:11,909 --> 00:08:16,740
is by setting up tiered storage so the

00:08:14,819 --> 00:08:20,400
tier of storage allows you to rapidly

00:08:16,740 --> 00:08:23,490
respond to mrs. Travis and also stored

00:08:20,400 --> 00:08:24,719
for long term and it's a matter of how

00:08:23,490 --> 00:08:26,039
far off the two years you know where how

00:08:24,719 --> 00:08:30,659
far down to tears you go the trade-off

00:08:26,039 --> 00:08:32,279
between latency cost it was built from

00:08:30,659 --> 00:08:34,800
the ground up as a multi-tenant system

00:08:32,279 --> 00:08:38,180
so unlike from the other plumps up

00:08:34,800 --> 00:08:41,640
systems out there it was designed as

00:08:38,180 --> 00:08:44,010
system so as Enterprise we've got a lot

00:08:41,640 --> 00:08:44,690
of tenants because also two different

00:08:44,010 --> 00:08:48,290
businesses

00:08:44,690 --> 00:08:52,389
as cases it's nice to be able to take

00:08:48,290 --> 00:08:54,940
those and Isis I can partition them into

00:08:52,389 --> 00:08:57,949
parts of the cluster parts of the

00:08:54,940 --> 00:09:00,980
infrastructure society so Vietnam rather

00:08:57,949 --> 00:09:07,579
than mixing and matching across rather

00:09:00,980 --> 00:09:09,110
open primary algae replication this is

00:09:07,579 --> 00:09:11,509
another important thing the ability to

00:09:09,110 --> 00:09:13,519
replicate data out of one area into

00:09:11,509 --> 00:09:17,420
another this was designed include

00:09:13,519 --> 00:09:22,100
roundup as well the framework obviously

00:09:17,420 --> 00:09:24,410
adds to durability and resiliency Pulsar

00:09:22,100 --> 00:09:26,120
zoning it's in production Yahoo it's

00:09:24,410 --> 00:09:28,189
been there for three years they are once

00:09:26,120 --> 00:09:29,569
came up with it they've got millions of

00:09:28,189 --> 00:09:34,220
messages per second point through this

00:09:29,569 --> 00:09:36,110
thing sometimes it's got a lot to her to

00:09:34,220 --> 00:09:38,480
know so the difference here is the

00:09:36,110 --> 00:09:41,959
millions of times this framework allows

00:09:38,480 --> 00:09:44,420
you to have a whole lot of topics rather

00:09:41,959 --> 00:09:49,329
than performance doesn't degrade with

00:09:44,420 --> 00:09:52,250
more tactics and to the implementation

00:09:49,329 --> 00:09:53,779
you can easily just deploy lightweight

00:09:52,250 --> 00:09:55,490
compute logic got out of it so instead

00:09:53,779 --> 00:09:59,689
of going with a secondary framework to

00:09:55,490 --> 00:10:01,310
do processing you can they give you a

00:09:59,689 --> 00:10:05,380
lightweight framework you can use it's

00:10:01,310 --> 00:10:07,339
native to the framework can you solve

00:10:05,380 --> 00:10:11,000
lightweight to meeting weight

00:10:07,339 --> 00:10:13,430
transmission problems and then finally

00:10:11,000 --> 00:10:16,850
the box deploy design communities and

00:10:13,430 --> 00:10:21,250
website your evil deployment deployment

00:10:16,850 --> 00:10:24,199
notes they'll give you some little shift

00:10:21,250 --> 00:10:33,559
Remedios AWS who names the instructions

00:10:24,199 --> 00:10:35,870
how to deploy this equality so this was

00:10:33,559 --> 00:10:40,790
this multi-tenancy

00:10:35,870 --> 00:10:42,889
diagram they had on the website it's for

00:10:40,790 --> 00:10:45,470
a given cluster you can split it up into

00:10:42,889 --> 00:10:48,199
one example this case they've got three

00:10:45,470 --> 00:10:51,439
pennants each tenant underneath them and

00:10:48,199 --> 00:10:55,490
a namespace belong so it allows you to

00:10:51,439 --> 00:10:57,020
plan and a peasant plan or different use

00:10:55,490 --> 00:11:01,040
cases that an enterprise

00:10:57,020 --> 00:11:06,440
we're painting we weren't to be able to

00:11:01,040 --> 00:11:09,470
in this capacity in this case is

00:11:06,440 --> 00:11:12,740
assigned to attendance and namespaces to

00:11:09,470 --> 00:11:14,210
administrative units for time so this

00:11:12,740 --> 00:11:16,760
gives you placed hierarchy so you can

00:11:14,210 --> 00:11:18,530
start planning out how you design your

00:11:16,760 --> 00:11:25,370
cluster and how you want to work behind

00:11:18,530 --> 00:11:27,440
it expanding as it arises there's three

00:11:25,370 --> 00:11:32,320
different subscription models with puffs

00:11:27,440 --> 00:11:37,990
up these are annotated here the first is

00:11:32,320 --> 00:11:40,730
exclusive so I got an exclusive

00:11:37,990 --> 00:11:43,820
subscriber then it's company the most

00:11:40,730 --> 00:11:45,850
kind of all the guarantees in the

00:11:43,820 --> 00:11:48,650
framework are guaranteed in this model

00:11:45,850 --> 00:11:51,410
the second one is shares you can have

00:11:48,650 --> 00:11:53,090
multiple pump our single publisher

00:11:51,410 --> 00:11:57,860
multiple subscriber that's very common

00:11:53,090 --> 00:12:01,490
people right now in the framework if

00:11:57,860 --> 00:12:03,080
your initiator or the thing is not

00:12:01,490 --> 00:12:04,400
guaranteed yes they're working on that

00:12:03,080 --> 00:12:08,720
pump might not be loaded that you're on

00:12:04,400 --> 00:12:12,830
see their put me infrastructure together

00:12:08,720 --> 00:12:17,830
to make that more nicely and durable so

00:12:12,830 --> 00:12:22,280
that will be going for that one it

00:12:17,830 --> 00:12:24,770
usually means that probably soft then

00:12:22,280 --> 00:12:27,080
the final security model is failover so

00:12:24,770 --> 00:12:29,030
thanks you have someone subscribing and

00:12:27,080 --> 00:12:33,170
they found they you know provide

00:12:29,030 --> 00:12:34,010
somebody the subscriber of the fans so

00:12:33,170 --> 00:12:37,430
that's very simple

00:12:34,010 --> 00:12:43,810
those are the three subscription models

00:12:37,430 --> 00:12:48,890
that they the reference architecture the

00:12:43,810 --> 00:12:50,330
core elements of engine pulsar is so

00:12:48,890 --> 00:12:53,210
vulgar does a couple things

00:12:50,330 --> 00:12:56,870
it sits between the publishers and

00:12:53,210 --> 00:12:59,930
subscribers and sorts chair so in this

00:12:56,870 --> 00:13:02,660
case the broker if you look at it

00:12:59,930 --> 00:13:05,360
consists of pretty much a dispatcher and

00:13:02,660 --> 00:13:08,540
he managed resides in RAM so this is one

00:13:05,360 --> 00:13:10,340
of the ways they can get low latency and

00:13:08,540 --> 00:13:14,960
reads as power

00:13:10,340 --> 00:13:17,720
the message flaw is stored an order

00:13:14,960 --> 00:13:19,870
kashkin worker in this lecture and as

00:13:17,720 --> 00:13:23,000
we'll see in the future slides the whole

00:13:19,870 --> 00:13:25,940
territory should be a matter of getting

00:13:23,000 --> 00:13:30,410
stuff out of the motor out of activism

00:13:25,940 --> 00:13:33,440
towards persistent the other moments

00:13:30,410 --> 00:13:35,779
here are the loci which we'll talk about

00:13:33,440 --> 00:13:38,210
that means the storage components that's

00:13:35,779 --> 00:13:40,570
part of me that you will keep her

00:13:38,210 --> 00:13:43,850
framework we can talk about a minute and

00:13:40,570 --> 00:13:46,940
then the president keeper which is

00:13:43,850 --> 00:13:48,880
always used for metadata for any kind of

00:13:46,940 --> 00:13:51,770
lackluster operation so in this case

00:13:48,880 --> 00:13:54,680
there's two types of zookeeper ones for

00:13:51,770 --> 00:13:56,210
a cluster and that one where the clone

00:13:54,680 --> 00:14:00,710
will install it to your unit using

00:13:56,210 --> 00:14:03,680
volunteer from the patient so this is

00:14:00,710 --> 00:14:09,230
the building blocks which they're gonna

00:14:03,680 --> 00:14:14,000
build the framework on them so one of

00:14:09,230 --> 00:14:15,530
the key points on the terminology scale

00:14:14,000 --> 00:14:17,150
will fall down on the low latency block

00:14:15,530 --> 00:14:18,710
storage service so the reader ability

00:14:17,150 --> 00:14:21,500
consistency guarantees that can provide

00:14:18,710 --> 00:14:22,880
access to both historic and real time so

00:14:21,500 --> 00:14:24,380
wait there

00:14:22,880 --> 00:14:26,000
what they're trying to do is a trying to

00:14:24,380 --> 00:14:30,020
reach storage is part of the framework

00:14:26,000 --> 00:14:31,310
so I'm gonna copy does the after they're

00:14:30,020 --> 00:14:33,470
moving that direction they're trying to

00:14:31,310 --> 00:14:36,920
do that this was designed as a ground up

00:14:33,470 --> 00:14:42,100
to be funded storage it's part of the

00:14:36,920 --> 00:14:45,980
framework so the atomic unit of this

00:14:42,100 --> 00:14:47,120
framework is that entry so if you take a

00:14:45,980 --> 00:14:53,510
bunch of entries and put them together

00:14:47,120 --> 00:14:56,630
that becomes a ledger the stream is an

00:14:53,510 --> 00:14:59,140
unbounded full of ledger so you've got

00:14:56,630 --> 00:15:02,870
there's two concepts in this one is

00:14:59,140 --> 00:15:04,820
about ledger and the other is an extreme

00:15:02,870 --> 00:15:07,180
embodied screen was just Ledger's that

00:15:04,820 --> 00:15:07,180
never end

00:15:08,470 --> 00:15:13,910
the usual servers storing Ledger's are

00:15:11,450 --> 00:15:16,190
publicans that's part of the National

00:15:13,910 --> 00:15:21,020
Creek keeper infrastructure that serves

00:15:16,190 --> 00:15:22,490
as the backend or call sign and she's

00:15:21,020 --> 00:15:23,270
are written to the ledger sequentially

00:15:22,490 --> 00:15:26,360
and at most

00:15:23,270 --> 00:15:30,380
what so it's basically pet only but the

00:15:26,360 --> 00:15:32,800
ones on the end once a ledger is closed

00:15:30,380 --> 00:15:36,950
it can't be able to get it available so

00:15:32,800 --> 00:15:38,779
that's the energy by having these ledger

00:15:36,950 --> 00:15:42,230
segments in the back a few more slides

00:15:38,779 --> 00:15:44,980
but each cookie will handle eight

00:15:42,230 --> 00:15:48,310
segments of letters as part of the

00:15:44,980 --> 00:15:51,860
stream so if the state is broken up into

00:15:48,310 --> 00:15:55,220
Street components he will manage a

00:15:51,860 --> 00:15:58,000
different part of that street and that

00:15:55,220 --> 00:16:04,880
will help with the resiliency in the

00:15:58,000 --> 00:16:09,140
stable so there are what keep records

00:16:04,880 --> 00:16:11,000
architecture but basically to make the

00:16:09,140 --> 00:16:15,080
islands that will keep with it pulsar

00:16:11,000 --> 00:16:19,580
leverages one is a level blender makes

00:16:15,080 --> 00:16:22,100
API allows you to actually there's a

00:16:19,580 --> 00:16:24,740
higher level which is the velocity API

00:16:22,100 --> 00:16:29,540
which you can use if you don't need to

00:16:24,740 --> 00:16:32,360
manipulate the ledgers specifically so

00:16:29,540 --> 00:16:33,500
again this is how the storage back-end

00:16:32,360 --> 00:16:37,130
that posts artworks

00:16:33,500 --> 00:16:40,430
the zookeeper cluster is also used to

00:16:37,130 --> 00:16:46,240
manage the metadata for the four

00:16:40,430 --> 00:16:48,880
clusters well so the sort of departments

00:16:46,240 --> 00:16:51,980
keeper or framework is trying to solve

00:16:48,880 --> 00:16:56,410
but basic lines should be able to write

00:16:51,980 --> 00:16:59,810
and read speeds of entries under publish

00:16:56,410 --> 00:17:03,320
believe they have do you want to buy any

00:16:59,810 --> 00:17:08,140
stock so pulsar is actually durability

00:17:03,320 --> 00:17:08,140
requirements are actually mess

00:17:08,380 --> 00:17:13,160
they have sorted should be durable

00:17:10,400 --> 00:17:16,280
consistent well balanced system should

00:17:13,160 --> 00:17:18,709
be able to enable planks stream or tail

00:17:16,280 --> 00:17:20,540
injures or propagate Tommy hit is it

00:17:18,709 --> 00:17:22,339
written so and he got up some model

00:17:20,540 --> 00:17:27,550
warrior published something to subscribe

00:17:22,339 --> 00:17:29,990
to it is a table and Jesus isn't written

00:17:27,550 --> 00:17:33,590
and his system she be able to start my

00:17:29,990 --> 00:17:35,120
taxes historic the storage is part of

00:17:33,590 --> 00:17:36,690
the framework they should be able to

00:17:35,120 --> 00:17:39,600
leverage

00:17:36,690 --> 00:17:41,870
they started it's been stored are you

00:17:39,600 --> 00:17:41,870
Frank

00:17:42,740 --> 00:17:46,260
so I just do the how does it meet the

00:17:45,029 --> 00:17:49,730
durability requirements

00:17:46,260 --> 00:17:51,539
so basically works on that basis where

00:17:49,730 --> 00:17:53,370
when I do whites

00:17:51,539 --> 00:17:56,549
I will specify what the application

00:17:53,370 --> 00:18:00,059
factor is next to represent how many

00:17:56,549 --> 00:18:03,450
different storage I know it's different

00:18:00,059 --> 00:18:06,240
and then as a part of acts I know you

00:18:03,450 --> 00:18:08,880
have to wait for acknowledgement back or

00:18:06,240 --> 00:18:10,710
forum that is also configured long how

00:18:08,880 --> 00:18:15,270
many are they respond to that right so

00:18:10,710 --> 00:18:17,279
in this example and B right well this

00:18:15,270 --> 00:18:21,539
case is three so a larger seven two

00:18:17,279 --> 00:18:25,169
three three quotas restore journals and

00:18:21,539 --> 00:18:26,970
the act is to in this case two of them

00:18:25,169 --> 00:18:30,929
at the transaction is considered

00:18:26,970 --> 00:18:34,470
complete and it has them to be following

00:18:30,929 --> 00:18:37,289
but player that the storage was

00:18:34,470 --> 00:18:39,570
successful so you can see from this

00:18:37,289 --> 00:18:41,010
bottle how does one scale a lot it's

00:18:39,570 --> 00:18:46,320
just a matter of adding storage nodes

00:18:41,010 --> 00:18:49,590
and optimizing right form and an

00:18:46,320 --> 00:18:53,190
optimizing the baculum and you can see

00:18:49,590 --> 00:18:56,600
right there how you can trade off

00:18:53,190 --> 00:18:56,600
they're willing and late

00:18:57,919 --> 00:19:07,789
and then consistency and availability

00:19:02,330 --> 00:19:09,929
consistency for water ease and entropy

00:19:07,789 --> 00:19:11,370
it successfully written if it's

00:19:09,929 --> 00:19:12,659
immediately readable so that's that's

00:19:11,370 --> 00:19:14,809
the goal you want to switch one way

00:19:12,659 --> 00:19:17,880
something you want to be able to read

00:19:14,809 --> 00:19:20,220
energy read once is always readable

00:19:17,880 --> 00:19:25,500
that's the second part of the guarantee

00:19:20,220 --> 00:19:27,179
and the framework it's once it's once

00:19:25,500 --> 00:19:30,630
it's red it's not going away it's

00:19:27,179 --> 00:19:32,279
immutable all the traces will previously

00:19:30,630 --> 00:19:36,179
obsession that is all entries that the

00:19:32,279 --> 00:19:39,330
previously been really are always

00:19:36,179 --> 00:19:44,100
readable and then the consistency

00:19:39,330 --> 00:19:46,409
guarantee is a less bad algorithm which

00:19:44,100 --> 00:19:47,640
is several pages of documentation of

00:19:46,409 --> 00:19:50,390
their website how they

00:19:47,640 --> 00:19:53,640
it's an optimized version earlier

00:19:50,390 --> 00:19:56,549
basically so it's certain death probably

00:19:53,640 --> 00:19:59,070
a document how we do this how it does

00:19:56,549 --> 00:20:02,929
give me the guarantee of consistency

00:19:59,070 --> 00:20:05,220
it's on there it's pretty detailed

00:20:02,929 --> 00:20:07,830
availability or from this you can see

00:20:05,220 --> 00:20:10,620
that obviously if you've got storage

00:20:07,830 --> 00:20:14,880
nodes if you sent our available response

00:20:10,620 --> 00:20:16,530
you want availability so availability

00:20:14,880 --> 00:20:17,660
guaranteed availability just matter

00:20:16,530 --> 00:20:20,250
anymore

00:20:17,660 --> 00:20:24,000
Bogey's more large notes to be to the

00:20:20,250 --> 00:20:29,220
cluster and it can be done still

00:20:24,000 --> 00:20:32,370
horizontally or not any other thing to

00:20:29,220 --> 00:20:33,990
know here is anyone can read the data so

00:20:32,370 --> 00:20:38,640
it's not just a matter of going to

00:20:33,990 --> 00:20:46,169
leader or designated read note anybody

00:20:38,640 --> 00:20:48,929
in the cluster can service agree in

00:20:46,169 --> 00:20:52,590
isolation so this was a core topic a

00:20:48,929 --> 00:20:55,590
there's really three ways to access a

00:20:52,590 --> 00:20:57,000
suite obviously the first was right when

00:20:55,590 --> 00:21:00,360
you write you always write to the end of

00:20:57,000 --> 00:21:03,690
the string that's beautiful

00:21:00,360 --> 00:21:06,390
so that's is the let me wait operation

00:21:03,690 --> 00:21:10,230
the de Madrid is when you not the back

00:21:06,390 --> 00:21:11,910
end of the queue and as we saw reference

00:21:10,230 --> 00:21:14,700
architecture if you're reading off the

00:21:11,910 --> 00:21:17,520
back end of the street you're going to

00:21:14,700 --> 00:21:21,150
most likely hitting the cache itself Ram

00:21:17,520 --> 00:21:24,240
not hitting what's on this from one of

00:21:21,150 --> 00:21:29,250
the lower levels and start stairs the

00:21:24,240 --> 00:21:31,230
final I know operation is a catch-up so

00:21:29,250 --> 00:21:33,750
that is where you're reading somewhere

00:21:31,230 --> 00:21:35,940
other than the tail you're going back

00:21:33,750 --> 00:21:39,330
and you're reading data in the other

00:21:35,940 --> 00:21:42,480
segments that's one of the other AP ads

00:21:39,330 --> 00:21:45,690
that you go back in stream and data that

00:21:42,480 --> 00:21:48,210
has been previously assorted and then I

00:21:45,690 --> 00:21:50,580
think that differentiates us from which

00:21:48,210 --> 00:21:54,390
is the other frameworks out there that

00:21:50,580 --> 00:21:56,160
you can go back get data out of the

00:21:54,390 --> 00:22:02,929
store pool that maybe whatever works

00:21:56,160 --> 00:22:02,929
here and not in the rewrite capability

00:22:03,960 --> 00:22:11,200
so the data distribution this explains

00:22:07,660 --> 00:22:13,300
how any segment extremist across the

00:22:11,200 --> 00:22:16,720
cluster so each one of these storage

00:22:13,300 --> 00:22:22,270
nodes is in charge of different segments

00:22:16,720 --> 00:22:24,070
of the industry and the source capacity

00:22:22,270 --> 00:22:25,690
per state lock screen is constrained

00:22:24,070 --> 00:22:29,100
really about best feeding of the cluster

00:22:25,690 --> 00:22:31,780
number of single single number

00:22:29,100 --> 00:22:33,880
there's no stream rebalancing aren't

00:22:31,780 --> 00:22:35,860
really in capacitance we added another

00:22:33,880 --> 00:22:37,330
looking to this and it would be

00:22:35,860 --> 00:22:38,980
advertised itself it's open for business

00:22:37,330 --> 00:22:41,710
and then we will starting something

00:22:38,980 --> 00:22:44,730
whites or segments though there's no

00:22:41,710 --> 00:22:49,810
rebalancing that's going on between

00:22:44,730 --> 00:22:52,000
different numbers of cluster nominal

00:22:49,810 --> 00:22:54,640
repair and that will obviously require

00:22:52,000 --> 00:22:58,180
traffic between cluster if one moves

00:22:54,640 --> 00:23:06,820
down into place it will have known which

00:22:58,180 --> 00:23:08,920
segments to low it were to get segments

00:23:06,820 --> 00:23:11,640
from somebody so that's the only time

00:23:08,920 --> 00:23:14,470
that these guys are going to be

00:23:11,640 --> 00:23:20,560
shuffling data back important is in the

00:23:14,470 --> 00:23:31,980
event of failure mental anything is it

00:23:20,560 --> 00:23:31,980
is awesome because saying okay so also

00:23:33,300 --> 00:23:40,630
given to BC as a bunch of discrete

00:23:37,570 --> 00:23:42,070
segments of string and the different

00:23:40,630 --> 00:23:44,550
operations that we talked about on there

00:23:42,070 --> 00:23:51,550
the right the 10-degree independently

00:23:44,550 --> 00:23:54,160
that is the main building blocks are

00:23:51,550 --> 00:23:58,470
because that's how things are

00:23:54,160 --> 00:24:00,940
implemented in what - lookie

00:23:58,470 --> 00:24:02,680
so there's your storage that allows the

00:24:00,940 --> 00:24:07,030
ability to take segments off more than

00:24:02,680 --> 00:24:09,790
from the cluster store on to manage

00:24:07,030 --> 00:24:13,000
storage so if you've got any backup

00:24:09,790 --> 00:24:15,000
discreet nartz

00:24:13,000 --> 00:24:16,890
we saw order to take second

00:24:15,000 --> 00:24:18,750
out of the cluster and put them on that

00:24:16,890 --> 00:24:20,789
Street put them under I do put them

00:24:18,750 --> 00:24:23,760
somewhere lower value on cluster you

00:24:20,789 --> 00:24:28,260
know you're not going to access them or

00:24:23,760 --> 00:24:33,720
need look even latency latency to to

00:24:28,260 --> 00:24:36,559
access the ability to maybe I'd actually

00:24:33,720 --> 00:24:40,370
access segments and that necessarily

00:24:36,559 --> 00:24:43,320
rated segments themselves again they

00:24:40,370 --> 00:24:50,220
catch up really not affecting the i/o of

00:24:43,320 --> 00:24:55,110
the tail region so bringing it all

00:24:50,220 --> 00:24:59,370
together this is in fact how integrals

00:24:55,110 --> 00:25:02,370
are stable the segment screening the

00:24:59,370 --> 00:25:04,860
ability to tear the storage and not let

00:25:02,370 --> 00:25:10,460
the small tears that be all the latency

00:25:04,860 --> 00:25:14,130
tears but that can scale out with the

00:25:10,460 --> 00:25:15,720
users of the consumers and it manages to

00:25:14,130 --> 00:25:19,740
the mountain stream the number ends by

00:25:15,720 --> 00:25:21,870
managing storage levels is really what

00:25:19,740 --> 00:25:28,500
what this framework does how it improves

00:25:21,870 --> 00:25:33,299
on the existing members so what this

00:25:28,500 --> 00:25:35,100
movie allows is a little framework that

00:25:33,299 --> 00:25:38,850
allows at constant sequence to pass this

00:25:35,100 --> 00:25:41,340
example Taney's it's rather unique

00:25:38,850 --> 00:25:43,919
because you can use the streaming

00:25:41,340 --> 00:25:46,740
processing API also to see if you have

00:25:43,919 --> 00:25:48,690
to do the most part of the problem some

00:25:46,740 --> 00:25:51,150
folks the problem and then your Hamilton

00:25:48,690 --> 00:25:53,340
scenario problem can be solved using gas

00:25:51,150 --> 00:25:54,720
processing that would allow both

00:25:53,340 --> 00:25:57,510
analytics and real-time

00:25:54,720 --> 00:26:01,100
cases eventually sort of ourselves and

00:25:57,510 --> 00:26:01,100
say let's say for anyone the same place

00:26:01,490 --> 00:26:07,890
so for an airline this is important

00:26:04,980 --> 00:26:11,900
because we've got a lot of student use

00:26:07,890 --> 00:26:16,320
cases and what I'll talk about here is

00:26:11,900 --> 00:26:18,360
some stuff use case it's used to improve

00:26:16,320 --> 00:26:22,470
operation wide so talked earlier about

00:26:18,360 --> 00:26:23,909
airline having to understand when the

00:26:22,470 --> 00:26:26,010
environments like in ordered scheduled

00:26:23,909 --> 00:26:28,500
aircraft in order to react to weather in

00:26:26,010 --> 00:26:32,550
order to be activating those problems

00:26:28,500 --> 00:26:36,360
comes there or things like that the FAA

00:26:32,550 --> 00:26:39,180
is put out a real-time messaging pulse

00:26:36,360 --> 00:26:43,230
went this is one information this is

00:26:39,180 --> 00:26:45,450
their future way the FAA is can

00:26:43,230 --> 00:26:49,050
communicate the state of the airspace

00:26:45,450 --> 00:26:52,560
that can be the state of airports to

00:26:49,050 --> 00:26:54,660
consumers so the thinking here is all

00:26:52,560 --> 00:26:55,590
the airlines with all their information

00:26:54,660 --> 00:26:59,070
they yeah

00:26:55,590 --> 00:27:00,600
via screen to the FAA they ever gates it

00:26:59,070 --> 00:27:05,790
and then distributes all the other

00:27:00,600 --> 00:27:08,100
airline subscribers so this is a very

00:27:05,790 --> 00:27:09,510
progressive framework the FAA is

00:27:08,100 --> 00:27:14,400
proposing and it's actually operating

00:27:09,510 --> 00:27:18,090
right now in this case the airlines are

00:27:14,400 --> 00:27:19,530
gonna need to do two things actually you

00:27:18,090 --> 00:27:21,720
know submit their data as it's happening

00:27:19,530 --> 00:27:24,600
and be able to see what the other

00:27:21,720 --> 00:27:28,650
airlines are going lower capacity of

00:27:24,600 --> 00:27:31,860
this is offering so not only attend

00:27:28,650 --> 00:27:35,760
operational stuff as the family lives as

00:27:31,860 --> 00:27:38,160
well if you've got all of us in traffic

00:27:35,760 --> 00:27:40,650
at all the airspace is being operated on

00:27:38,160 --> 00:27:43,020
all the airports are reacting to changes

00:27:40,650 --> 00:27:44,940
in the airspace you can do some pretty

00:27:43,020 --> 00:27:50,070
powerful analytics so I should be the

00:27:44,940 --> 00:27:54,630
Pendleton Sutton so this is the overview

00:27:50,070 --> 00:27:56,280
of this would be basically this big is

00:27:54,630 --> 00:27:58,020
chopped up the watch different

00:27:56,280 --> 00:28:00,890
components each component represents

00:27:58,020 --> 00:28:04,740
different things flying so there's

00:28:00,890 --> 00:28:08,040
messages occur on the ground writing

00:28:04,740 --> 00:28:09,570
plane pulls back ground traffic when the

00:28:08,040 --> 00:28:11,370
plane is cleared to take off on plane

00:28:09,570 --> 00:28:13,320
its climate its cruising altitude that's

00:28:11,370 --> 00:28:15,450
going through the transition airspace

00:28:13,320 --> 00:28:18,120
when he gets over there koozie altitude

00:28:15,450 --> 00:28:25,290
and then when it comes back down lands

00:28:18,120 --> 00:28:28,500
back the target field all those parts of

00:28:25,290 --> 00:28:32,210
the plane things are part of the bay is

00:28:28,500 --> 00:28:32,210
getting out so every part of the movie

00:28:32,630 --> 00:28:37,320
so another sample message out there is

00:28:35,820 --> 00:28:40,380
probably hard to read but this was not

00:28:37,320 --> 00:28:42,299
one of the messages that's the idea of

00:28:40,380 --> 00:28:45,659
what information that

00:28:42,299 --> 00:28:47,489
is actually published so this was like

00:28:45,659 --> 00:28:51,389
work to Los Angeles

00:28:47,489 --> 00:28:54,570
I took police ago and you can see some

00:28:51,389 --> 00:28:57,269
of the information is conveyed in speed

00:28:54,570 --> 00:29:00,659
so estimated time of arrival estimated

00:28:57,269 --> 00:29:05,099
heavy ones wouldn't a some fixes when

00:29:00,659 --> 00:29:06,899
it's the flight plan when things are

00:29:05,099 --> 00:29:08,599
changing all these are extremely

00:29:06,899 --> 00:29:11,549
important information to an interlocking

00:29:08,599 --> 00:29:13,229
publish a point plan in FAA that makes

00:29:11,549 --> 00:29:15,389
something different there all I need to

00:29:13,229 --> 00:29:17,820
know about them the value they react to

00:29:15,389 --> 00:29:23,609
that more efficiently they can operate

00:29:17,820 --> 00:29:25,979
the aircraft or hybrid airline so right

00:29:23,609 --> 00:29:27,599
now the current implementation before

00:29:25,979 --> 00:29:29,639
the slim thing came along for the

00:29:27,599 --> 00:29:31,709
standard message system came along I

00:29:29,639 --> 00:29:33,389
think that they this is basically what

00:29:31,709 --> 00:29:35,339
things look like we had a bunch of other

00:29:33,389 --> 00:29:38,369
things and they a system spotty too much

00:29:35,339 --> 00:29:41,509
they're all in systems I just put some

00:29:38,369 --> 00:29:44,779
of the major ones that we were not

00:29:41,509 --> 00:29:47,009
scheduling planning airport operations

00:29:44,779 --> 00:29:50,519
interfaced operations whether these are

00:29:47,009 --> 00:29:52,440
all things that FAA publishing

00:29:50,519 --> 00:29:54,599
information to the Airlines point point

00:29:52,440 --> 00:30:02,729
or expect an airline to send them

00:29:54,599 --> 00:30:04,259
information on so obviously this call be

00:30:02,729 --> 00:30:06,899
cleaned up with one or framework puffs

00:30:04,259 --> 00:30:08,489
so plan framework then it really nicely

00:30:06,899 --> 00:30:11,029
or everyone publishes their information

00:30:08,489 --> 00:30:14,749
and what subscribe to a great Cleveland

00:30:11,029 --> 00:30:17,039
the question is scalability in this case

00:30:14,749 --> 00:30:19,409
obviously with all these different

00:30:17,039 --> 00:30:22,489
components this feat of number times

00:30:19,409 --> 00:30:26,429
coming behind that's how you manage this

00:30:22,489 --> 00:30:29,009
but the sources was in the party systems

00:30:26,429 --> 00:30:34,379
all benefit from warranty models similar

00:30:29,009 --> 00:30:38,969
to this Picabo an airline side in

00:30:34,379 --> 00:30:42,179
society is a lot of is operational

00:30:38,969 --> 00:30:44,249
systems that do these things are tough

00:30:42,179 --> 00:30:47,909
sell right they're not these are old

00:30:44,249 --> 00:30:50,700
systems they may have very poor

00:30:47,909 --> 00:30:52,559
interfaces event so three interfaces we

00:30:50,700 --> 00:30:52,950
deal with most of these systems all

00:30:52,559 --> 00:30:55,980
right

00:30:52,950 --> 00:30:57,690
so most of narcotics so the way you get

00:30:55,980 --> 00:31:03,300
information on our offices through these

00:30:57,690 --> 00:31:06,630
two files another way higher level way

00:31:03,300 --> 00:31:09,390
JDBC these are built around relational

00:31:06,630 --> 00:31:11,490
databases and they allow connectivity on

00:31:09,390 --> 00:31:14,820
the database a lot of times data in and

00:31:11,490 --> 00:31:16,290
out coffee systems using JDBC and then

00:31:14,820 --> 00:31:19,620
finally some of the more recent ones

00:31:16,290 --> 00:31:22,470
will have it yes that's the system

00:31:19,620 --> 00:31:24,990
that's my are the exception rather than

00:31:22,470 --> 00:31:26,730
the rule so if you're going to rewrite

00:31:24,990 --> 00:31:28,740
all this stuff to one off a pub cell

00:31:26,730 --> 00:31:31,440
type model they have to figure out how

00:31:28,740 --> 00:31:35,580
to something between the puffs up and

00:31:31,440 --> 00:31:39,480
these airline systems until this allows

00:31:35,580 --> 00:31:41,220
the point where the operational systems

00:31:39,480 --> 00:31:43,980
manufacture to software many ventures

00:31:41,220 --> 00:31:45,450
start taking to accomplish this the dev

00:31:43,980 --> 00:31:49,520
a is putting out and start putting in

00:31:45,450 --> 00:31:49,520
more progressive progressive interfaces

00:31:49,940 --> 00:31:55,020
so the pulse aren't playing here why

00:31:52,590 --> 00:32:00,870
this grabbed my attention is initially

00:31:55,020 --> 00:32:05,730
the producer and the consumer it as you

00:32:00,870 --> 00:32:08,460
also have the historical read API so

00:32:05,730 --> 00:32:11,070
that in and of itself doesn't make sense

00:32:08,460 --> 00:32:13,410
to necessarily go through a real-time

00:32:11,070 --> 00:32:16,140
student API or just a batch something

00:32:13,410 --> 00:32:20,850
profile to consent way another system

00:32:16,140 --> 00:32:23,880
the option here would be take they

00:32:20,850 --> 00:32:26,160
coming in as a stream treated as batch

00:32:23,880 --> 00:32:27,630
that systems they're going to deal with

00:32:26,160 --> 00:32:30,510
a batch to and facing them about

00:32:27,630 --> 00:32:33,030
connection JDC until they're mature

00:32:30,510 --> 00:32:37,890
enough to cut over to the spinning

00:32:33,030 --> 00:32:39,300
interface so that's me is why we're

00:32:37,890 --> 00:32:41,670
looking at pulsar right now to see

00:32:39,300 --> 00:32:43,380
that's up just solution is battle is to

00:32:41,670 --> 00:32:44,880
see if we can start out using the

00:32:43,380 --> 00:32:47,870
advanced interface that pulsar

00:32:44,880 --> 00:32:49,890
historical stuff to deal with that

00:32:47,870 --> 00:32:51,780
concerns we have under the operation

00:32:49,890 --> 00:32:54,540
systems and then as time goes on start

00:32:51,780 --> 00:32:56,310
phasing out the batch and speeding data

00:32:54,540 --> 00:33:02,280
into the operational systems real time

00:32:56,310 --> 00:33:04,860
as they as an integer okay and then the

00:33:02,280 --> 00:33:06,510
two frameworks to talk about I'll start

00:33:04,860 --> 00:33:08,490
looking

00:33:06,510 --> 00:33:11,540
at the information on the slide here on

00:33:08,490 --> 00:33:14,309
Twitter of men once all that stuff

00:33:11,540 --> 00:33:18,809
the communities are responding to

00:33:14,309 --> 00:33:20,190
inquiries and helping you out so they

00:33:18,809 --> 00:33:23,640
don't look closely look at these matters

00:33:20,190 --> 00:33:25,770
because I think they're going to be very

00:33:23,640 --> 00:34:06,740
important time for testing scale outings

00:33:25,770 --> 00:34:10,040
people discovered that's right you know

00:34:06,740 --> 00:34:12,540
we have a benchmark in the short term

00:34:10,040 --> 00:34:16,889
actual benchmark see if it is didn't

00:34:12,540 --> 00:34:19,770
places right now we have some enolates I

00:34:16,889 --> 00:34:23,510
think most enterprises have one if not

00:34:19,770 --> 00:34:26,220
more utilized the question comes is now

00:34:23,510 --> 00:34:28,080
in something like this is we begin with

00:34:26,220 --> 00:34:31,050
screaming and match the same framework

00:34:28,080 --> 00:34:34,290
and it's a viable storm in terms of

00:34:31,050 --> 00:34:37,040
serving bowl wait does that mean Italy

00:34:34,290 --> 00:34:40,080
to become more fragmented most certainly

00:34:37,040 --> 00:34:41,490
the data market type of you learn what's

00:34:40,080 --> 00:34:44,280
got their own giggling it's a matter of

00:34:41,490 --> 00:34:45,540
PBIS backing them up so that's the

00:34:44,280 --> 00:34:48,149
question I think that's the know we're

00:34:45,540 --> 00:34:49,649
going to see how this involves and when

00:34:48,149 --> 00:34:51,419
people can actually talk about this and

00:34:49,649 --> 00:35:06,359
get something in question that's the

00:34:51,419 --> 00:35:08,700
best way yeah they're working with a

00:35:06,359 --> 00:35:10,410
service provider to be available

00:35:08,700 --> 00:35:11,760
it's not quite there yet I just seen

00:35:10,410 --> 00:35:13,320
them this morning to see the status was

00:35:11,760 --> 00:35:18,500
and they never got back to himself

00:35:13,320 --> 00:35:18,500
so cation is a awesome

00:35:25,290 --> 00:35:28,360
[Music]

00:36:56,420 --> 00:36:59,420
so

00:37:26,840 --> 00:37:34,140
so the question is is staple screaming

00:37:31,020 --> 00:37:36,000
what's the you know how does this affect

00:37:34,140 --> 00:37:40,140
the stables great model the police that

00:37:36,000 --> 00:37:42,240
brutality was training on them this is

00:37:40,140 --> 00:37:45,060
much later than that is this taking

00:37:42,240 --> 00:37:46,890
place you're actually being around so we

00:37:45,060 --> 00:37:49,220
can introspect currently I don't want to

00:37:46,890 --> 00:37:58,290
see how columns but it is there are

00:37:49,220 --> 00:38:01,350
networking or really temperature versus

00:37:58,290 --> 00:38:03,690
problem so I think the takeaway on this

00:38:01,350 --> 00:38:07,320
is the IO isolation it's got other

00:38:03,690 --> 00:38:10,350
things when you read or write for the

00:38:07,320 --> 00:38:13,830
same place and then includes the the

00:38:10,350 --> 00:38:17,220
higher latency reasons it was framed

00:38:13,830 --> 00:38:20,070
mortgage split up the without one I know

00:38:17,220 --> 00:38:23,100
channel two different channels and then

00:38:20,070 --> 00:38:24,930
the higher latency you know third

00:38:23,100 --> 00:38:29,070
different one and then can go actually

00:38:24,930 --> 00:38:32,280
to me I guess say the structure usually

00:38:29,070 --> 00:38:37,100
do the weights go straight to either the

00:38:32,280 --> 00:38:39,660
permanent storage Roberts also the

00:38:37,100 --> 00:38:43,520
that's not these difference effective

00:38:39,660 --> 00:38:47,070
they've got read wait miles difference

00:38:43,520 --> 00:38:49,350
the tenancy won't agency is enterprise

00:38:47,070 --> 00:38:52,109
that's very crisis lightning to be able

00:38:49,350 --> 00:38:52,850
to assign resources as possible certain

00:38:52,109 --> 00:38:55,350
penance

00:38:52,850 --> 00:38:59,670
that's the other big ones so I close to

00:38:55,350 --> 00:39:02,280
right there should be really hurt you

00:38:59,670 --> 00:39:04,850
have found that scale look at those two

00:39:02,280 --> 00:39:04,850
things first

00:40:39,020 --> 00:40:53,730
so require operation systems act you

00:40:46,740 --> 00:40:57,510
know if the system starts the way they

00:40:53,730 --> 00:41:01,760
communicate then should become operation

00:40:57,510 --> 00:41:06,150
especially if they push Airlines

00:41:01,760 --> 00:41:08,370
information in your systems you then the

00:41:06,150 --> 00:41:11,520
internal systems any airline start

00:41:08,370 --> 00:41:12,900
drifting that direction is also you know

00:41:11,520 --> 00:41:17,270
maybe not today maybe not tomorrow but

00:41:12,900 --> 00:41:19,860
down the world you can see the rough

00:41:17,270 --> 00:41:22,640
they a snake and you see that there are

00:41:19,860 --> 00:41:22,640
two or one

00:41:35,220 --> 00:41:40,369

YouTube URL: https://www.youtube.com/watch?v=Yig1qbMjv7g


