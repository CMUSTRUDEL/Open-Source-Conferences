Title: Transparent HTTP proxying with Apache Traffic Server
Publication date: 2013-10-17
Playlist: Apachecon NA 2013 - day 2
Description: 
	Alan Carroll
ApacheCon NA 2013
A Patchy Web
Captions: 
	00:00:00,410 --> 00:00:05,670
next up we have Aaron Carroll with

00:00:02,909 --> 00:00:10,860
transparent HTTP with Apache traffic

00:00:05,670 --> 00:00:12,059
server thank you good afternoon so yes

00:00:10,860 --> 00:00:14,130
we're going to talk about transparent

00:00:12,059 --> 00:00:18,210
htp with that using apache traffic

00:00:14,130 --> 00:00:19,920
server I'm Alan Carol I'm a PSC on the

00:00:18,210 --> 00:00:23,189
traffic server project i started working

00:00:19,920 --> 00:00:26,369
on traffic server or a while ago done

00:00:23,189 --> 00:00:28,320
some various works work for a company

00:00:26,369 --> 00:00:33,180
called network Geographics that does 80s

00:00:28,320 --> 00:00:35,250
and other development services so what

00:00:33,180 --> 00:00:37,110
are we trying to do here what I've found

00:00:35,250 --> 00:00:38,280
when I work with people and transparency

00:00:37,110 --> 00:00:40,680
is that you have two types of people

00:00:38,280 --> 00:00:42,450
people who say I have no idea where to

00:00:40,680 --> 00:00:44,309
start and people say I don't know how to

00:00:42,450 --> 00:00:46,410
make it work so we're going to try to

00:00:44,309 --> 00:00:47,850
address both of those so my main goal

00:00:46,410 --> 00:00:50,399
here is to give you a starting point for

00:00:47,850 --> 00:00:52,289
deploying traffic server and transparent

00:00:50,399 --> 00:00:54,420
mode to give you basic tools basic

00:00:52,289 --> 00:00:56,489
strips get started a full implementation

00:00:54,420 --> 00:00:58,680
and getting it deployed is way beyond

00:00:56,489 --> 00:00:59,850
the scope that we can do in an hour so

00:00:58,680 --> 00:01:02,280
I'm going to providing some sample

00:00:59,850 --> 00:01:04,379
scripts what I'm going to talk about in

00:01:02,280 --> 00:01:05,549
the talk mainly is what those commands

00:01:04,379 --> 00:01:07,159
and those scripts are actually supposed

00:01:05,549 --> 00:01:09,390
to do what you're trying to accomplish

00:01:07,159 --> 00:01:11,100
if you want to look ahead at the scripts

00:01:09,390 --> 00:01:12,299
to ask me questions about them that's

00:01:11,100 --> 00:01:15,600
fine we're not really going to cover

00:01:12,299 --> 00:01:17,250
them in here and I'm five try to fight

00:01:15,600 --> 00:01:19,680
some guides some useful tools that you

00:01:17,250 --> 00:01:21,180
can use both to bring up traffic server

00:01:19,680 --> 00:01:22,380
in this mode and to help figure out

00:01:21,180 --> 00:01:26,040
what's going on when things are going

00:01:22,380 --> 00:01:27,299
wrong so the basic outline of the talk

00:01:26,040 --> 00:01:29,790
is we're gonna talk about some basic

00:01:27,299 --> 00:01:32,220
theory you know what is a proxy what is

00:01:29,790 --> 00:01:34,259
transparency from there we're going to

00:01:32,220 --> 00:01:35,490
drill down into increasing detail

00:01:34,259 --> 00:01:38,729
because I want to help you try to

00:01:35,490 --> 00:01:40,229
actually get this deployed so one of the

00:01:38,729 --> 00:01:41,850
main goals is get you the place where

00:01:40,229 --> 00:01:44,189
you can start on this and get it out in

00:01:41,850 --> 00:01:46,829
the field so we're going to cover cover

00:01:44,189 --> 00:01:48,450
troubleshooting as well when you try to

00:01:46,829 --> 00:01:49,649
get out there the odds are it's not

00:01:48,450 --> 00:01:52,140
going to work as some of this is pretty

00:01:49,649 --> 00:01:54,299
tricky stuff so what can you do to try

00:01:52,140 --> 00:01:56,130
to fix it after you're out there and I

00:01:54,299 --> 00:01:58,229
notice we're not going to talk about the

00:01:56,130 --> 00:01:59,820
commands very much directly I've got the

00:01:58,229 --> 00:02:03,090
scripts it really just bogs down the

00:01:59,820 --> 00:02:04,590
talk if I bring that up what's important

00:02:03,090 --> 00:02:08,520
here is that you understand what these

00:02:04,590 --> 00:02:11,160
commands are trying to do so let's start

00:02:08,520 --> 00:02:12,450
with the basic theory so what are we

00:02:11,160 --> 00:02:13,170
trying to do why do we want to put

00:02:12,450 --> 00:02:16,830
trance

00:02:13,170 --> 00:02:19,050
HTTP up so let's are some basics so that

00:02:16,830 --> 00:02:20,459
we not all on the same page I'm going to

00:02:19,050 --> 00:02:22,560
go through this material this beginning

00:02:20,459 --> 00:02:23,910
material fairly quickly it's you have to

00:02:22,560 --> 00:02:25,590
understand this to understand the later

00:02:23,910 --> 00:02:28,610
slides but we already all know this we

00:02:25,590 --> 00:02:30,450
can just go through this at a high speed

00:02:28,610 --> 00:02:32,130
siragusa standard client-server

00:02:30,450 --> 00:02:34,470
terminology of a client it makes

00:02:32,130 --> 00:02:35,940
connection to the server and this is how

00:02:34,470 --> 00:02:37,080
the users thinks it works they don't

00:02:35,940 --> 00:02:40,860
understand why the IT people have

00:02:37,080 --> 00:02:42,090
problems this is so simple and

00:02:40,860 --> 00:02:43,769
transparency what's going to help it

00:02:42,090 --> 00:02:45,390
with is maintaining this illusion for

00:02:43,769 --> 00:02:47,010
our users right because really they

00:02:45,390 --> 00:02:50,640
shouldn't know any more than that if

00:02:47,010 --> 00:02:52,230
we're doing our jobs okay but we're

00:02:50,640 --> 00:02:53,519
we're going to be responsible for

00:02:52,230 --> 00:02:54,330
actually putting this out there so we

00:02:53,519 --> 00:02:56,310
have to take a slightly more

00:02:54,330 --> 00:02:57,540
sophisticated view and understand look

00:02:56,310 --> 00:02:58,920
at these connections as to half

00:02:57,540 --> 00:03:00,840
connections we have a connection in

00:02:58,920 --> 00:03:03,840
effect from the client to the server and

00:03:00,840 --> 00:03:06,090
then back these are identified in a peel

00:03:03,840 --> 00:03:08,280
and by a fight ubel but we're hdb which

00:03:06,090 --> 00:03:11,160
is TCP so in effect we always have a

00:03:08,280 --> 00:03:12,870
four tuple which is local address port

00:03:11,160 --> 00:03:14,430
and the remote address and port we're

00:03:12,870 --> 00:03:16,560
using local and remote in a viewpoint

00:03:14,430 --> 00:03:18,480
based way so if I'm in the client side

00:03:16,560 --> 00:03:20,190
my local address the address that's on

00:03:18,480 --> 00:03:23,640
me and the remote addresses the address

00:03:20,190 --> 00:03:25,380
of them the other side okay if we mean

00:03:23,640 --> 00:03:30,239
client address and we'll say explicitly

00:03:25,380 --> 00:03:32,040
client address so what's a proxy so

00:03:30,239 --> 00:03:34,019
eager cover this already but we'll go

00:03:32,040 --> 00:03:35,609
through it again what the point of

00:03:34,019 --> 00:03:37,410
proxies you want to modify the network

00:03:35,609 --> 00:03:39,030
traffic we've got traffic going through

00:03:37,410 --> 00:03:41,640
from client to server and when it change

00:03:39,030 --> 00:03:43,920
it somehow so we need to intercept the

00:03:41,640 --> 00:03:45,570
connections and make changes in it these

00:03:43,920 --> 00:03:47,340
changes are all a wide variety of things

00:03:45,570 --> 00:03:49,230
some people do filtering if you're

00:03:47,340 --> 00:03:50,519
serving out of a cache use modified the

00:03:49,230 --> 00:03:52,320
traffic because it's going to your cash

00:03:50,519 --> 00:03:54,900
instead of the origin server you need

00:03:52,320 --> 00:03:56,730
add or remove headers redirect you that

00:03:54,900 --> 00:04:00,150
people trying to go to one website end

00:03:56,730 --> 00:04:01,769
up at a different one if you just want

00:04:00,150 --> 00:04:03,000
to monitor and track the traffic which

00:04:01,769 --> 00:04:04,680
I've seen ten people try to do you

00:04:03,000 --> 00:04:06,269
should just use the sniffer if you're

00:04:04,680 --> 00:04:08,190
not going to actually change the traffic

00:04:06,269 --> 00:04:10,380
going through you shouldn't go to the

00:04:08,190 --> 00:04:13,049
effort of a proxy and so this is

00:04:10,380 --> 00:04:15,030
basically how a proxy works we have a

00:04:13,049 --> 00:04:16,560
way it use my pointer now you just take

00:04:15,030 --> 00:04:21,120
the original connection and put a proxy

00:04:16,560 --> 00:04:22,019
right in the middle so the important

00:04:21,120 --> 00:04:23,669
thing we're gonna come back to again and

00:04:22,019 --> 00:04:25,380
again the proxy connection is two

00:04:23,669 --> 00:04:26,170
connections we've taken one original

00:04:25,380 --> 00:04:27,520
connection from

00:04:26,170 --> 00:04:29,590
punch server and we pre endure it into

00:04:27,520 --> 00:04:31,030
two different connections one of the

00:04:29,590 --> 00:04:33,430
client proxy and one of the proxy server

00:04:31,030 --> 00:04:35,560
they look like related people think they

00:04:33,430 --> 00:04:37,210
are because the proxies are clever but

00:04:35,560 --> 00:04:38,860
they're not in fact in any way really

00:04:37,210 --> 00:04:41,500
related to each other you have to keep

00:04:38,860 --> 00:04:43,600
that mind because a lot of the stuff

00:04:41,500 --> 00:04:44,740
that makes sense and so since there are

00:04:43,600 --> 00:04:47,260
separate connections we have two more

00:04:44,740 --> 00:04:49,630
port address port pairs which if you

00:04:47,260 --> 00:04:51,190
look in the previous diagram labeled P Q

00:04:49,630 --> 00:04:54,310
and a be just because I like those

00:04:51,190 --> 00:04:56,860
letters and you say well what are those

00:04:54,310 --> 00:04:58,390
those depend on how what proxy type you

00:04:56,860 --> 00:05:00,580
pick and the proxy types will talk about

00:04:58,390 --> 00:05:02,560
or directly related to this they're

00:05:00,580 --> 00:05:05,770
determined entirely by what address we

00:05:02,560 --> 00:05:09,970
pick to use for these this pukey key P Q

00:05:05,770 --> 00:05:12,880
and a be so here's our table so we have

00:05:09,970 --> 00:05:15,040
four choices we have the explicit proxy

00:05:12,880 --> 00:05:16,060
choice which is the old-style very old I

00:05:15,040 --> 00:05:19,060
don't know I'm probably only one old

00:05:16,060 --> 00:05:20,500
enough to remember this anymore where

00:05:19,060 --> 00:05:22,240
the client connects to the proxy address

00:05:20,500 --> 00:05:23,530
and when the server gets a connection it

00:05:22,240 --> 00:05:26,620
looks like comes from proxy address

00:05:23,530 --> 00:05:28,630
that's the post approximant at all we

00:05:26,620 --> 00:05:30,850
can do what we call inbound transparent

00:05:28,630 --> 00:05:32,920
that's where the client from its point

00:05:30,850 --> 00:05:34,210
of view it's inbound to the proxy and it

00:05:32,920 --> 00:05:37,330
thinks it's connecting to the server

00:05:34,210 --> 00:05:38,500
does not see the proxy we can do that on

00:05:37,330 --> 00:05:40,300
the other side we can say well the

00:05:38,500 --> 00:05:42,580
server gets a connection it thinks it's

00:05:40,300 --> 00:05:43,570
coming directly from the client and we

00:05:42,580 --> 00:05:45,310
can treat these in a penalty because

00:05:43,570 --> 00:05:47,020
again we have two different connections

00:05:45,310 --> 00:05:49,030
are all related because our proxy makes

00:05:47,020 --> 00:05:51,580
them related and then we can combine

00:05:49,030 --> 00:05:52,870
them and be fully transparent where the

00:05:51,580 --> 00:05:54,100
client thinks is connecting the server

00:05:52,870 --> 00:05:58,000
and the server thinks it's being

00:05:54,100 --> 00:06:01,510
connected to directly from the client so

00:05:58,000 --> 00:06:03,760
let's talk about HTTP proxy so 80s after

00:06:01,510 --> 00:06:07,930
catchy traffic server is an HTTP proxy

00:06:03,760 --> 00:06:09,850
and it's also a cache so in order to

00:06:07,930 --> 00:06:11,440
modify track if they were proxy and it's

00:06:09,850 --> 00:06:12,820
modifying achraf it has to understand

00:06:11,440 --> 00:06:15,010
the track it has to know the protocol

00:06:12,820 --> 00:06:16,690
that is going over there remains yes

00:06:15,010 --> 00:06:18,640
point of view that means we really can

00:06:16,690 --> 00:06:21,310
only proxy in cash HTTP the other

00:06:18,640 --> 00:06:22,780
traffic basically 80s handles by making

00:06:21,310 --> 00:06:26,080
it opaque it just says I've got a chunk

00:06:22,780 --> 00:06:28,660
of bytes i'll just forward that on so

00:06:26,080 --> 00:06:31,630
HDD sorry 80's has a deep understanding

00:06:28,660 --> 00:06:33,130
of HTTP and understands HTTP headers it

00:06:31,630 --> 00:06:35,080
can go and it can modify them it can

00:06:33,130 --> 00:06:38,440
analyze and make decisions based on

00:06:35,080 --> 00:06:39,289
those headers things that does can rely

00:06:38,440 --> 00:06:42,259
on data

00:06:39,289 --> 00:06:45,559
in those headers this this comes up but

00:06:42,259 --> 00:06:47,149
80s does not understand HTML that's a

00:06:45,559 --> 00:06:48,860
completely different language completely

00:06:47,149 --> 00:06:50,479
different protocol you can write plugins

00:06:48,860 --> 00:06:53,539
that do that and in fact some people

00:06:50,479 --> 00:06:55,219
have that's not a fundamental we had to

00:06:53,539 --> 00:06:59,210
do just want to mention that that does

00:06:55,219 --> 00:07:00,649
come up all right so we have a proxy we

00:06:59,210 --> 00:07:02,979
have a network went up with the proxy in

00:07:00,649 --> 00:07:05,180
the network so this is our most generic

00:07:02,979 --> 00:07:06,680
description of what a proxy in your

00:07:05,180 --> 00:07:08,689
network looks like you got a client you

00:07:06,680 --> 00:07:11,029
have some sort of networking stuff here

00:07:08,689 --> 00:07:12,649
you come to finding some segments which

00:07:11,029 --> 00:07:14,209
connects directly the proxy it connects

00:07:12,649 --> 00:07:17,089
directly some other segment it goes

00:07:14,209 --> 00:07:20,659
through some other cloudy stuff and hits

00:07:17,089 --> 00:07:23,029
a server somewhere okay so that's that's

00:07:20,659 --> 00:07:24,529
just completely abstract but that's

00:07:23,029 --> 00:07:25,909
that's the what we're going to use when

00:07:24,529 --> 00:07:28,069
we talk about putting the proxy in

00:07:25,909 --> 00:07:32,180
notice it's in line we'll talk about

00:07:28,069 --> 00:07:34,309
that again in a bit so we can talk about

00:07:32,180 --> 00:07:37,189
the network topology that we use when we

00:07:34,309 --> 00:07:38,659
put a routed proxy in the most common

00:07:37,189 --> 00:07:40,789
one that I've seen in practice is the

00:07:38,659 --> 00:07:43,339
routed topology that means when we look

00:07:40,789 --> 00:07:44,719
these two segments here with my little

00:07:43,339 --> 00:07:46,610
button go there we go these two segments

00:07:44,719 --> 00:07:48,499
they're on different networks so the

00:07:46,610 --> 00:07:51,139
proxy also serves as a router to move

00:07:48,499 --> 00:07:54,680
packets between the two networks another

00:07:51,139 --> 00:07:56,569
topology which comes up is bridged and

00:07:54,680 --> 00:07:58,519
in that case with the same network on

00:07:56,569 --> 00:08:00,860
those two segments and the proxy in

00:07:58,519 --> 00:08:02,300
addition accident a route doesn't act as

00:08:00,860 --> 00:08:04,849
a router bit act as a bridge to move the

00:08:02,300 --> 00:08:07,639
package between the networks okay a

00:08:04,849 --> 00:08:10,099
third option which we will probably not

00:08:07,639 --> 00:08:13,550
talk about very much is wccp has anyone

00:08:10,099 --> 00:08:16,490
here ever used wccp okay we got a couple

00:08:13,550 --> 00:08:19,129
of people this is a cisco protocol it

00:08:16,490 --> 00:08:21,649
lets you set up a router to do the

00:08:19,129 --> 00:08:23,919
interception for you and pass stuff over

00:08:21,649 --> 00:08:27,229
to a web cache or proxy someplace else

00:08:23,919 --> 00:08:30,050
it has a main main nice feature is that

00:08:27,229 --> 00:08:31,580
using cisco router it enables pass

00:08:30,050 --> 00:08:34,130
through failover so if your 80s goes

00:08:31,580 --> 00:08:35,659
down it'll just not proxy at all so you

00:08:34,130 --> 00:08:39,349
still have connectivity it is however

00:08:35,659 --> 00:08:43,310
ipv4 only so the utility is somewhat

00:08:39,349 --> 00:08:44,420
limited there so we know what a proxy is

00:08:43,310 --> 00:08:46,850
we want to put it in our creative side

00:08:44,420 --> 00:08:49,370
well we want to be transparent right

00:08:46,850 --> 00:08:51,319
what's the advantage of transparency so

00:08:49,370 --> 00:08:52,120
the essential issue here is that

00:08:51,319 --> 00:08:54,850
transparency

00:08:52,120 --> 00:08:56,950
makes a proxy topology where you put the

00:08:54,850 --> 00:08:59,080
proximate look like it's not there you

00:08:56,950 --> 00:09:00,640
see through it it's transparent so it

00:08:59,080 --> 00:09:03,040
looks like that original diagram or the

00:09:00,640 --> 00:09:04,540
client just next to the server and you

00:09:03,040 --> 00:09:06,880
want to use transparency when you want

00:09:04,540 --> 00:09:09,190
to hide the proxy from either the

00:09:06,880 --> 00:09:10,270
clients or the servers okay and hide has

00:09:09,190 --> 00:09:11,380
a bunch of their thing it means you

00:09:10,270 --> 00:09:12,670
don't want them to know that's doing it

00:09:11,380 --> 00:09:16,870
it's because you don't want to have to

00:09:12,670 --> 00:09:18,279
reconfigure the client right which is

00:09:16,870 --> 00:09:19,360
actually probably the bigger reason so

00:09:18,279 --> 00:09:20,620
they don't approximately air they don't

00:09:19,360 --> 00:09:22,960
have to reconfigure you don't have to

00:09:20,620 --> 00:09:26,710
tweak their browser data or they can or

00:09:22,960 --> 00:09:27,970
anything like that it can sometimes we

00:09:26,710 --> 00:09:29,920
can you to hide it from the server as

00:09:27,970 --> 00:09:31,150
well so these are the two questions you

00:09:29,920 --> 00:09:32,320
need to ask me saying I want to be

00:09:31,150 --> 00:09:34,360
transparent why don't want to be

00:09:32,320 --> 00:09:36,010
transparent who do I want to hide it

00:09:34,360 --> 00:09:37,480
from and based on that we can pick one

00:09:36,010 --> 00:09:40,779
of our four types so here's our chart

00:09:37,480 --> 00:09:43,150
again and now you've added our hidden

00:09:40,779 --> 00:09:44,440
stuff to say which type so if you're an

00:09:43,150 --> 00:09:46,450
explosive porosity it's not hidden at

00:09:44,440 --> 00:09:48,279
all inbound transparent Heights from the

00:09:46,450 --> 00:09:50,339
clients outbound from the servers and

00:09:48,279 --> 00:09:54,430
fully transparent hides from both sides

00:09:50,339 --> 00:09:56,050
you decide what you want the your

00:09:54,430 --> 00:09:57,820
network to look like once you put the

00:09:56,050 --> 00:09:59,560
proxy and make your decision based on

00:09:57,820 --> 00:10:04,300
that HTS of course supports all these

00:09:59,560 --> 00:10:07,660
modes so let's go through a few example

00:10:04,300 --> 00:10:08,860
use cases you can get some idea of why

00:10:07,660 --> 00:10:12,010
you'd want to do these so we've talked

00:10:08,860 --> 00:10:13,630
about the explicit proxy pretty much no

00:10:12,010 --> 00:10:15,010
one really uses anymore this was done

00:10:13,630 --> 00:10:16,600
initially because we didn't have

00:10:15,010 --> 00:10:20,500
transparency it was the best you could

00:10:16,600 --> 00:10:22,959
do now we can do a lot better one

00:10:20,500 --> 00:10:25,750
example outbound transplant is for a CDN

00:10:22,959 --> 00:10:28,330
so in this case the proxy is close to

00:10:25,750 --> 00:10:30,850
the origin servers and what you want to

00:10:28,330 --> 00:10:32,200
do is the you want it you want the

00:10:30,850 --> 00:10:33,070
client sting connect to the proxy

00:10:32,200 --> 00:10:34,450
address because you don't learn to

00:10:33,070 --> 00:10:35,860
connecting directly to your to your

00:10:34,450 --> 00:10:37,810
origin servers you want to go through

00:10:35,860 --> 00:10:39,070
the proxy but you want the servers to

00:10:37,810 --> 00:10:41,830
think that they're talking directly to

00:10:39,070 --> 00:10:43,900
the clients so that you don't have to

00:10:41,830 --> 00:10:45,670
ever since manipulate HTTP headers so

00:10:43,900 --> 00:10:47,860
the server's know which address the

00:10:45,670 --> 00:10:49,390
clients really coming from so that's

00:10:47,860 --> 00:10:53,310
outbound transparent the server's don't

00:10:49,390 --> 00:10:55,420
see the proxy right only the clients do

00:10:53,310 --> 00:10:56,680
some you can also use this for instance

00:10:55,420 --> 00:10:58,600
to put your servers on non-routable

00:10:56,680 --> 00:11:01,390
addresses or ipv6 when you're outside

00:10:58,600 --> 00:11:03,280
network is ipv4 because the the clients

00:11:01,390 --> 00:11:04,910
can't see the actual servers they see

00:11:03,280 --> 00:11:07,589
the proxy

00:11:04,910 --> 00:11:10,110
inbound transparent this is not a very

00:11:07,589 --> 00:11:11,850
common use case there's a few few uses

00:11:10,110 --> 00:11:13,320
of this main one is you want to hide

00:11:11,850 --> 00:11:15,209
your internal address is behind a proxy

00:11:13,320 --> 00:11:17,279
so your corporation you've got a network

00:11:15,209 --> 00:11:18,750
you don't people seeing what addresses

00:11:17,279 --> 00:11:21,029
on your network but you don't want to

00:11:18,750 --> 00:11:22,560
have to reconfigure all the clients in

00:11:21,029 --> 00:11:24,120
your corporate net so you can make

00:11:22,560 --> 00:11:25,889
inbound transparent the clients don't

00:11:24,120 --> 00:11:28,019
see the proxy they just connect out to

00:11:25,889 --> 00:11:30,180
the servers as just as I do without the

00:11:28,019 --> 00:11:31,680
proxy but anyone on the other side the

00:11:30,180 --> 00:11:34,110
origin servers outside your corporate

00:11:31,680 --> 00:11:38,639
net will see the proxy address not your

00:11:34,110 --> 00:11:40,560
client address if you just if that's the

00:11:38,639 --> 00:11:43,889
only thing you want to do then you'd use

00:11:40,560 --> 00:11:45,209
NAT you do you use inbound transparent

00:11:43,889 --> 00:11:48,120
when you want to do that and you also

00:11:45,209 --> 00:11:49,940
want to modify the traffic so you want

00:11:48,120 --> 00:11:52,410
to do caching and you want to do that

00:11:49,940 --> 00:11:54,509
the most common case probably is fully

00:11:52,410 --> 00:11:57,000
transparent the proxy isn't visible to

00:11:54,509 --> 00:11:58,860
client or servers this means you don't

00:11:57,000 --> 00:12:02,610
have any need any changes on the client

00:11:58,860 --> 00:12:04,199
side or the server side this is the most

00:12:02,610 --> 00:12:06,540
common corporate use where the

00:12:04,199 --> 00:12:08,009
corporation sides we need to proxy we

00:12:06,540 --> 00:12:10,019
need to have the server see the client

00:12:08,009 --> 00:12:11,579
addresses because there's things on the

00:12:10,019 --> 00:12:14,660
server that upends on the client address

00:12:11,579 --> 00:12:16,920
like you know google mail for instance

00:12:14,660 --> 00:12:18,720
we don't want to reconfigure all the

00:12:16,920 --> 00:12:21,510
clients for an explicit proxy we just

00:12:18,720 --> 00:12:23,010
want to drop it and have it work so if

00:12:21,510 --> 00:12:27,240
that's what you want to do that's the

00:12:23,010 --> 00:12:30,860
fully transparent case alright so that's

00:12:27,240 --> 00:12:32,790
a basic theory I have some interrogation

00:12:30,860 --> 00:12:34,829
enhancements over here a little little

00:12:32,790 --> 00:12:38,130
corporate advertising unit so anyone

00:12:34,829 --> 00:12:42,089
asks a question can have one of those so

00:12:38,130 --> 00:12:48,329
there any questions okay I need to get

00:12:42,089 --> 00:12:49,410
better debtor swag okay so we have the

00:12:48,329 --> 00:12:50,880
basic theater where you know we're

00:12:49,410 --> 00:12:52,500
trying to do so now the next up of

00:12:50,880 --> 00:12:54,810
course if you to actually put a TS out

00:12:52,500 --> 00:12:58,860
in your network so let's talk a little

00:12:54,810 --> 00:13:02,819
bit about how we do some deployment all

00:12:58,860 --> 00:13:05,130
right the main thing here so 80s will

00:13:02,819 --> 00:13:07,259
work in routed bridge and wccp modes

00:13:05,130 --> 00:13:09,060
I've actually tested all of these myself

00:13:07,259 --> 00:13:10,920
we actually have clients running in all

00:13:09,060 --> 00:13:13,500
three of these modes out in production

00:13:10,920 --> 00:13:16,079
the most important lesson from all of

00:13:13,500 --> 00:13:17,579
this slide well let's first say this is

00:13:16,079 --> 00:13:17,810
your simplified topology remember from

00:13:17,579 --> 00:13:20,000
the

00:13:17,810 --> 00:13:20,990
this diagram we've just stuck a traffic

00:13:20,000 --> 00:13:23,779
server in the middle it's not just a

00:13:20,990 --> 00:13:27,800
proxy now it's traffic server so we've

00:13:23,779 --> 00:13:29,960
improved the key most key point here is

00:13:27,800 --> 00:13:32,480
that the traffic server the proxy has to

00:13:29,960 --> 00:13:33,529
be in line the packets both ways have to

00:13:32,480 --> 00:13:35,779
pass through it we actually had a

00:13:33,529 --> 00:13:37,520
problem where the packets were going out

00:13:35,779 --> 00:13:39,830
traffic server and coming back in

00:13:37,520 --> 00:13:42,740
through another path and that's just not

00:13:39,830 --> 00:13:45,880
going to work so it has to go packets

00:13:42,740 --> 00:13:48,200
both ways through the traffic server

00:13:45,880 --> 00:13:53,120
okay so you have to make sure topology

00:13:48,200 --> 00:13:54,620
is going to support that now we said 80s

00:13:53,120 --> 00:13:56,240
works and all these different modes and

00:13:54,620 --> 00:13:58,070
that's so that you can adapt traffic

00:13:56,240 --> 00:13:59,480
server to your network so you need look

00:13:58,070 --> 00:14:01,610
at your network decide wearing of a

00:13:59,480 --> 00:14:03,560
traffic server decide what to pology

00:14:01,610 --> 00:14:05,900
works best there and then you can adapt

00:14:03,560 --> 00:14:07,430
traffic server to suit that okay so

00:14:05,900 --> 00:14:08,870
don't start with traffic server and say

00:14:07,430 --> 00:14:11,240
oh I think I want to go bridge I want to

00:14:08,870 --> 00:14:13,910
go out of look at your network I think

00:14:11,240 --> 00:14:15,140
what how can I fit into my network 80s

00:14:13,910 --> 00:14:17,390
will adapt to you so the none of these

00:14:15,140 --> 00:14:19,700
is better right they're just more less

00:14:17,390 --> 00:14:21,320
appropriate for your network so I want

00:14:19,700 --> 00:14:22,880
to emphasize that that's why we have all

00:14:21,320 --> 00:14:24,350
these different capabilities not just to

00:14:22,880 --> 00:14:28,430
confuse you and make you hire

00:14:24,350 --> 00:14:31,040
consultants like me but to help you make

00:14:28,430 --> 00:14:32,720
it work in your network so let's talk

00:14:31,040 --> 00:14:33,800
about some generic deployment issues

00:14:32,720 --> 00:14:36,410
that are going to come up you know how

00:14:33,800 --> 00:14:38,000
you deploy it so your normal packet flow

00:14:36,410 --> 00:14:39,410
is through the 80s box we talked about

00:14:38,000 --> 00:14:40,640
that what we're going to do is so all

00:14:39,410 --> 00:14:43,460
the traffic is going to pass through the

00:14:40,640 --> 00:14:45,530
80s box and we need to divert certain of

00:14:43,460 --> 00:14:46,940
those flows up to 80 s while the rest go

00:14:45,530 --> 00:14:49,190
ahead and pass through so for instance

00:14:46,940 --> 00:14:51,230
pings or telnet will keep going on

00:14:49,190 --> 00:14:53,240
through the boxes if 80s isn't there

00:14:51,230 --> 00:14:55,190
what we're going to divert those flows

00:14:53,240 --> 00:14:57,100
that we want to modify yeah that's point

00:14:55,190 --> 00:14:59,750
of the proxy is changing traffic flows

00:14:57,100 --> 00:15:01,730
so what we're going to do is we use IP

00:14:59,750 --> 00:15:03,350
tables and eb tables to mark the pack as

00:15:01,730 --> 00:15:06,230
to say which ones are of interest to us

00:15:03,350 --> 00:15:08,270
for intercepting we use routing IP

00:15:06,230 --> 00:15:09,770
tables and routing to put those rear out

00:15:08,270 --> 00:15:12,290
those packets from seb going through as

00:15:09,770 --> 00:15:14,540
a normally they comped 80s we can figure

00:15:12,290 --> 00:15:16,640
80s to grab those packets and do the

00:15:14,540 --> 00:15:18,560
work with them create the two

00:15:16,640 --> 00:15:20,180
connections out of one and do any

00:15:18,560 --> 00:15:21,380
modifications we want and there's a few

00:15:20,180 --> 00:15:23,890
tweaks we have to do on the host

00:15:21,380 --> 00:15:26,450
operating system to make it work as well

00:15:23,890 --> 00:15:29,750
so again there's some embassies on the

00:15:26,450 --> 00:15:30,810
slides the sides are out out on the

00:15:29,750 --> 00:15:32,700
network

00:15:30,810 --> 00:15:33,960
and other copies are around you can look

00:15:32,700 --> 00:15:35,070
through those to see how it is we're

00:15:33,960 --> 00:15:38,550
going to go through some more detail on

00:15:35,070 --> 00:15:40,710
this okay so here's the simplified

00:15:38,550 --> 00:15:43,230
line-x packet handling that we're

00:15:40,710 --> 00:15:45,000
running on top of and this is in fact

00:15:43,230 --> 00:15:47,790
simplified there are some pieces that

00:15:45,000 --> 00:15:50,490
are lighted out of this but now that

00:15:47,790 --> 00:15:51,690
I've scared you we're going to we're

00:15:50,490 --> 00:15:53,040
going to simplify this and really look

00:15:51,690 --> 00:15:54,390
at only the things that we need for

00:15:53,040 --> 00:15:55,650
traffic server but I want you to

00:15:54,390 --> 00:15:57,360
understand that we're just touching the

00:15:55,650 --> 00:15:59,430
surface when we work with traffic server

00:15:57,360 --> 00:16:01,550
to do this we are only scratching the

00:15:59,430 --> 00:16:04,710
surface was actually going onto the hood

00:16:01,550 --> 00:16:07,110
okay so that's why there's so much scope

00:16:04,710 --> 00:16:08,220
for going wrong you can go get all sorts

00:16:07,110 --> 00:16:10,050
of different places here so you don't

00:16:08,220 --> 00:16:13,740
really need to know that you just need

00:16:10,050 --> 00:16:15,180
to know it's out there so the main

00:16:13,740 --> 00:16:16,830
feature we're going to use is called p

00:16:15,180 --> 00:16:19,080
proxy which is sort for transparent

00:16:16,830 --> 00:16:22,350
proxy it was put into linux specifically

00:16:19,080 --> 00:16:24,960
to support this kind of operation and

00:16:22,350 --> 00:16:26,820
what essentially does is lets you create

00:16:24,960 --> 00:16:28,560
a socket on the local box that's bound

00:16:26,820 --> 00:16:32,060
to a foreign address an address that is

00:16:28,560 --> 00:16:35,220
not normally associated with the host

00:16:32,060 --> 00:16:37,920
and you can access it both your IP

00:16:35,220 --> 00:16:39,150
tables and socket options we'll talk

00:16:37,920 --> 00:16:42,750
about that a little bit and it should be

00:16:39,150 --> 00:16:44,760
present all my modern linux kernel's so

00:16:42,750 --> 00:16:46,140
you shouldn't use when we first start

00:16:44,760 --> 00:16:49,770
working this or you sometimes had to

00:16:46,140 --> 00:16:53,070
patch the colonel to get this you also

00:16:49,770 --> 00:16:54,390
need to build a TS if things work

00:16:53,070 --> 00:16:57,450
correctly and have a modern linings

00:16:54,390 --> 00:16:59,580
transparency just be turned on there's

00:16:57,450 --> 00:17:01,500
some fancy stuff here if you have old

00:16:59,580 --> 00:17:03,390
Colonels want to fiddle with it but we

00:17:01,500 --> 00:17:05,490
don't really need to talk about that I

00:17:03,390 --> 00:17:07,650
need Colonel if you're more recent than

00:17:05,490 --> 00:17:10,230
this you should be ok this is the one

00:17:07,650 --> 00:17:12,540
gotchu gotcha that comes up most

00:17:10,230 --> 00:17:15,030
commonly when people can't build the

00:17:12,540 --> 00:17:16,740
transparency feature requires also POSIX

00:17:15,030 --> 00:17:19,500
capabilities which are provided by lib

00:17:16,740 --> 00:17:22,679
cap devil well actually provided by lib

00:17:19,500 --> 00:17:24,660
cappuccini devil to build with it we'll

00:17:22,679 --> 00:17:26,100
talk about why that is later because

00:17:24,660 --> 00:17:29,130
well transparency is a privilege

00:17:26,100 --> 00:17:30,360
operations so we have to do that so if

00:17:29,130 --> 00:17:31,770
you can't build you'll get an error

00:17:30,360 --> 00:17:33,240
message that that's the problem you get

00:17:31,770 --> 00:17:35,100
a nice error message saying I didn't

00:17:33,240 --> 00:17:36,830
turn on transparency because I didn't

00:17:35,100 --> 00:17:39,510
have posix capabilities and it says that

00:17:36,830 --> 00:17:42,030
install that package it's some distros

00:17:39,510 --> 00:17:43,260
have it and some don't

00:17:42,030 --> 00:17:46,140
alright so we're going to get ready to

00:17:43,260 --> 00:17:47,880
deploy the more you sweat pre-deployment

00:17:46,140 --> 00:17:49,740
the less you'll you'll scream while

00:17:47,880 --> 00:17:51,690
you're actually deploying so i recommend

00:17:49,740 --> 00:17:53,580
prepping so some of the things you need

00:17:51,690 --> 00:17:55,140
to prep for you decide how you're going

00:17:53,580 --> 00:17:56,670
to set up a TS so what type of

00:17:55,140 --> 00:18:00,090
transparent you're going to use or use

00:17:56,670 --> 00:18:01,770
routed bridge wccp you Donora the server

00:18:00,090 --> 00:18:03,180
intercept ports this is we talked about

00:18:01,770 --> 00:18:05,070
you're going to vert flows you want to

00:18:03,180 --> 00:18:07,080
say well what flows to the origin

00:18:05,070 --> 00:18:09,060
servers out there do I want to modify

00:18:07,080 --> 00:18:11,160
which one's one a proxy pick those ports

00:18:09,060 --> 00:18:13,020
and those are the ports on the servers

00:18:11,160 --> 00:18:14,040
the origin server is outside and that's

00:18:13,020 --> 00:18:15,660
important to remember because we're

00:18:14,040 --> 00:18:17,610
going to talk about a bunch of different

00:18:15,660 --> 00:18:18,660
ports here going to be very clear which

00:18:17,610 --> 00:18:20,370
ones are talking about those are the

00:18:18,660 --> 00:18:23,910
services out there so if you're doing

00:18:20,370 --> 00:18:25,470
htp of the port 80 we're going to pick a

00:18:23,910 --> 00:18:28,260
firewall mark we'll talk about that more

00:18:25,470 --> 00:18:31,770
later this is part of the IP tables set

00:18:28,260 --> 00:18:33,720
up you need to select your inbound and

00:18:31,770 --> 00:18:35,430
outbound interfaces this requires you

00:18:33,720 --> 00:18:37,440
understanding which interfaces face the

00:18:35,430 --> 00:18:39,900
client which interfaces face the servers

00:18:37,440 --> 00:18:42,150
and we have fact had some really nasty

00:18:39,900 --> 00:18:45,000
problems we eventually discovered oh we

00:18:42,150 --> 00:18:47,280
had our interfaces reverse they went the

00:18:45,000 --> 00:18:48,630
other way than we thought so you want to

00:18:47,280 --> 00:18:50,550
think carefully about that make sure you

00:18:48,630 --> 00:18:53,610
know which interfaces are on the client

00:18:50,550 --> 00:18:55,440
side which on the outside ATS has to sit

00:18:53,610 --> 00:18:57,840
on a port that's called the 80s proxy

00:18:55,440 --> 00:18:59,970
port you need to pick which one that and

00:18:57,840 --> 00:19:01,530
this is I'm going to hit this again and

00:18:59,970 --> 00:19:04,020
again and again because this is so

00:19:01,530 --> 00:19:06,300
important verify your clients can

00:19:04,020 --> 00:19:09,360
connect your sirs before you put a TS

00:19:06,300 --> 00:19:10,800
out there ok we're going to do too we're

00:19:09,360 --> 00:19:12,150
going to be doing two very complex

00:19:10,800 --> 00:19:13,590
things one is setting up all the

00:19:12,150 --> 00:19:15,420
internal operating system stuff the

00:19:13,590 --> 00:19:17,190
iptables eb tables and all of that the

00:19:15,420 --> 00:19:18,810
routing the bridging to make it work and

00:19:17,190 --> 00:19:21,090
i'm going to put any 80s on top of that

00:19:18,810 --> 00:19:24,960
make sure the bottom half works before

00:19:21,090 --> 00:19:26,490
you start messing with 80s because the

00:19:24,960 --> 00:19:28,560
getting the bridge and router stuff

00:19:26,490 --> 00:19:31,350
working is not the simplest tasks in the

00:19:28,560 --> 00:19:33,330
world now here's my fun fun chart I had

00:19:31,350 --> 00:19:36,750
fun with this chart this is our generic

00:19:33,330 --> 00:19:38,820
set up here we have a client comes in

00:19:36,750 --> 00:19:41,640
through some port it goes into eb tables

00:19:38,820 --> 00:19:43,800
night p tables some of that that traffic

00:19:41,640 --> 00:19:45,390
goes up to the routing table selected

00:19:43,800 --> 00:19:47,850
parts of it you can see because I've

00:19:45,390 --> 00:19:49,410
changed the color go up through the

00:19:47,850 --> 00:19:51,570
loopback interface up to traffic server

00:19:49,410 --> 00:19:53,700
here which is listening on its 80s ports

00:19:51,570 --> 00:19:55,080
they'll have these boxes here so if you

00:19:53,700 --> 00:19:55,530
want to copy this when you're doing pre

00:19:55,080 --> 00:19:59,220
deployment

00:19:55,530 --> 00:20:01,560
fiddlin the numbers and the data you can

00:19:59,220 --> 00:20:03,420
do that so that you can refer back to

00:20:01,560 --> 00:20:05,580
this later when things go wrong and

00:20:03,420 --> 00:20:07,080
someone says oh well what's your what

00:20:05,580 --> 00:20:10,290
are your client interfaces you can look

00:20:07,080 --> 00:20:11,910
at your chart say yes this is one so

00:20:10,290 --> 00:20:14,340
we're going to we're going to keep this

00:20:11,910 --> 00:20:16,380
in mind I may just pop back to this but

00:20:14,340 --> 00:20:20,970
this is basically what it looks like

00:20:16,380 --> 00:20:23,700
when you're set up so some cautions

00:20:20,970 --> 00:20:25,110
thing to keep in mind it is in line so

00:20:23,700 --> 00:20:26,670
other traffic's can go through it so

00:20:25,110 --> 00:20:29,490
make sure that our traffic is going

00:20:26,670 --> 00:20:32,220
through it the faro mark in the 80s

00:20:29,490 --> 00:20:35,370
proxy port you pip pic or arbitrary and

00:20:32,220 --> 00:20:37,080
local so that you have to pick something

00:20:35,370 --> 00:20:38,130
that doesn't really matter much what you

00:20:37,080 --> 00:20:39,990
pick you want to pick it to avoid

00:20:38,130 --> 00:20:41,550
colliding with other things on your box

00:20:39,990 --> 00:20:44,220
so if you're writing something at port

00:20:41,550 --> 00:20:48,750
8080 don't use that for the 80's proxy

00:20:44,220 --> 00:20:50,190
port so now we're going to talk about

00:20:48,750 --> 00:20:51,690
the various layers you're going to go

00:20:50,190 --> 00:20:54,810
through we'll start with eb tables is

00:20:51,690 --> 00:20:57,060
anyone ever played with eb tables won't

00:20:54,810 --> 00:21:00,210
oh we got two people play with eb tables

00:20:57,060 --> 00:21:02,250
so this is layer 2 and all we really

00:21:00,210 --> 00:21:03,990
need this for for traffic server is to

00:21:02,250 --> 00:21:05,820
keep packets from zipping on through on

00:21:03,990 --> 00:21:07,320
layer 2 so we can get them up into the

00:21:05,820 --> 00:21:10,140
routing table and do routing type stuff

00:21:07,320 --> 00:21:13,980
with them other than that everything

00:21:10,140 --> 00:21:16,440
happens exactly the other cases the big

00:21:13,980 --> 00:21:17,460
one here is IP tables this is fun I'm

00:21:16,440 --> 00:21:22,320
sure all of you have played with

00:21:17,460 --> 00:21:23,850
iptables right yes so lots of fun stuff

00:21:22,320 --> 00:21:25,710
goes on here this is where we set a

00:21:23,850 --> 00:21:28,470
firewall mark and that's going to be

00:21:25,710 --> 00:21:30,480
used later by routing so the viral

00:21:28,470 --> 00:21:31,920
markers did you to that's why ATS only

00:21:30,480 --> 00:21:33,120
needs one bit if you don't do anything

00:21:31,920 --> 00:21:35,040
else you might as well just use the

00:21:33,120 --> 00:21:36,990
whole thing and most of the environments

00:21:35,040 --> 00:21:41,490
I've deployed there is in fact other

00:21:36,990 --> 00:21:43,230
stuff going on using iptables so we had

00:21:41,490 --> 00:21:45,770
to be careful so you can just pick one

00:21:43,230 --> 00:21:48,120
bit out of it 32 bits to make it work

00:21:45,770 --> 00:21:49,980
marking is based on the server port

00:21:48,120 --> 00:21:51,540
again not on the ets proxy port on the

00:21:49,980 --> 00:21:53,960
server port that you're going to sew the

00:21:51,540 --> 00:21:56,010
bike port 80 and the host interface

00:21:53,960 --> 00:21:57,750
that's why we have to be careful about

00:21:56,010 --> 00:21:59,220
which is the inbound interface which is

00:21:57,750 --> 00:22:00,360
the outbound interface because that's

00:21:59,220 --> 00:22:03,030
going to show up again here in the

00:22:00,360 --> 00:22:04,320
iptables so what we do for things that

00:22:03,030 --> 00:22:06,660
are coming inbound want to be

00:22:04,320 --> 00:22:08,920
transparent we mark them with T proxy

00:22:06,660 --> 00:22:10,150
which is a required so the 80s

00:22:08,920 --> 00:22:13,120
that connection even though it's going

00:22:10,150 --> 00:22:15,670
to an address that's not on the box we

00:22:13,120 --> 00:22:18,460
redirect the traffic up to the ATX proxy

00:22:15,670 --> 00:22:21,940
port and this is all for ipv4 you get to

00:22:18,460 --> 00:22:25,980
do it all again for IP 6 ipv6 using IP

00:22:21,940 --> 00:22:25,980
six tables if you want to support ipv6

00:22:27,000 --> 00:22:33,520
okay so a big word of warning here I got

00:22:31,240 --> 00:22:36,070
accelerate here I be able to do it for a

00:22:33,520 --> 00:22:37,420
whole lot of things online X so this is

00:22:36,070 --> 00:22:39,520
the place where you can really collide

00:22:37,420 --> 00:22:41,110
with other stuff on the box so all the

00:22:39,520 --> 00:22:42,760
firewalling if you're lying student any

00:22:41,110 --> 00:22:45,370
sort of firewalling it's doing that by

00:22:42,760 --> 00:22:48,280
using iptables so you've got to be very

00:22:45,370 --> 00:22:50,770
careful a lot colliding so lots of

00:22:48,280 --> 00:22:52,930
potential across interference 80s itself

00:22:50,770 --> 00:22:54,400
only uses the mangled table I love

00:22:52,930 --> 00:22:59,860
product things that have a table called

00:22:54,400 --> 00:23:01,600
angle fires confidence so you've that

00:22:59,860 --> 00:23:03,250
another thing to watch out for the very

00:23:01,600 --> 00:23:05,470
careful is by default of you just boot

00:23:03,250 --> 00:23:07,530
up install Linux most distros will not

00:23:05,470 --> 00:23:09,400
allow the traffic through the 80s needs

00:23:07,530 --> 00:23:11,440
so you're probably going to have to

00:23:09,400 --> 00:23:14,410
modify the filter table either directly

00:23:11,440 --> 00:23:16,840
or use the firewalling GUI interface to

00:23:14,410 --> 00:23:18,460
change that that's another reason to

00:23:16,840 --> 00:23:22,600
test client to server connectivity

00:23:18,460 --> 00:23:24,130
before you put 80s on the box okay this

00:23:22,600 --> 00:23:25,780
is a big hang-up and it can be really

00:23:24,130 --> 00:23:27,100
frustrating trying to figure out why

00:23:25,780 --> 00:23:28,750
it's not happening because you look at

00:23:27,100 --> 00:23:30,460
the mangle table and it's right but your

00:23:28,750 --> 00:23:35,020
filtered table is stopping all the

00:23:30,460 --> 00:23:36,910
traffic we also use the routing table we

00:23:35,020 --> 00:23:39,760
use policy routing to force the packets

00:23:36,910 --> 00:23:42,160
for the 80s the reading some pure 80s up

00:23:39,760 --> 00:23:45,370
to 80 s that's what the firewall Marcus

00:23:42,160 --> 00:23:46,720
for so but we put a table on the side

00:23:45,370 --> 00:23:47,800
this is actually in the simple part we

00:23:46,720 --> 00:23:49,810
put an extra for adding table in the

00:23:47,800 --> 00:23:51,490
side rizal if it's got the mark use this

00:23:49,810 --> 00:23:54,490
routing table instead so it interferes

00:23:51,490 --> 00:23:57,540
less with your existing routing so

00:23:54,490 --> 00:24:01,630
that's it usually pretty easy to get in

00:23:57,540 --> 00:24:03,880
we have to configure 80s an 80s you

00:24:01,630 --> 00:24:05,650
create your proxy ports you mark them as

00:24:03,880 --> 00:24:06,790
transparent in the appropriate way so if

00:24:05,650 --> 00:24:10,300
your inbound transparent you mark them

00:24:06,790 --> 00:24:11,800
in brown transparent the proxy port has

00:24:10,300 --> 00:24:13,330
to agree with the iptables we've

00:24:11,800 --> 00:24:14,890
embedded the proxy port in the iptables

00:24:13,330 --> 00:24:17,230
command so it has you have to make sure

00:24:14,890 --> 00:24:18,610
it agrees when you configure 80s because

00:24:17,230 --> 00:24:21,330
you filled it on a little chart so you

00:24:18,610 --> 00:24:21,330
can just look there

00:24:21,530 --> 00:24:27,419
the various transparency options that

00:24:23,880 --> 00:24:29,159
you use up an 80s 80s land transferring

00:24:27,419 --> 00:24:31,140
and transparent out transparent full

00:24:29,159 --> 00:24:33,120
which is really just transparent and

00:24:31,140 --> 00:24:34,559
then transparent out there's a trend

00:24:33,120 --> 00:24:36,299
pant passed through now we'll talk about

00:24:34,559 --> 00:24:38,039
that a little later you want to be very

00:24:36,299 --> 00:24:39,510
careful about using any other options on

00:24:38,039 --> 00:24:41,780
transparent ports that's because they

00:24:39,510 --> 00:24:44,730
can easily conflict with transparency

00:24:41,780 --> 00:24:48,690
most of them just simply don't work so

00:24:44,730 --> 00:24:50,309
like for instance SSL doesn't work so

00:24:48,690 --> 00:24:52,590
you're pretty much just going to have

00:24:50,309 --> 00:24:55,679
those on the transparent ports now

00:24:52,590 --> 00:24:57,720
remember this is per port so if you have

00:24:55,679 --> 00:24:59,370
you can have transparent inbound ports

00:24:57,720 --> 00:25:01,650
transparent outbound ports explicit

00:24:59,370 --> 00:25:05,010
proxy porks ssl ports all running on 80s

00:25:01,650 --> 00:25:06,390
at the same time in the same instance so

00:25:05,010 --> 00:25:08,820
you don't have to commit to all of these

00:25:06,390 --> 00:25:10,110
in fact i see that done sometimes well

00:25:08,820 --> 00:25:13,140
they both have explicit proxy in a

00:25:10,110 --> 00:25:14,760
transparent proxy we have to configure

00:25:13,140 --> 00:25:16,350
the host operating system this is too

00:25:14,760 --> 00:25:17,880
bad basically have to enable packet

00:25:16,350 --> 00:25:20,669
forwarding and you have to disable the

00:25:17,880 --> 00:25:22,380
reverse path check it doesn't make any

00:25:20,669 --> 00:25:24,570
sense to me frankly why in the world you

00:25:22,380 --> 00:25:26,730
have to reverse turn off RP filter

00:25:24,570 --> 00:25:29,640
because the packet should look the same

00:25:26,730 --> 00:25:32,909
but you have to it just will not work if

00:25:29,640 --> 00:25:34,200
you don't do that and you can do the

00:25:32,909 --> 00:25:36,179
routing and you have to set up your

00:25:34,200 --> 00:25:40,350
routing your bridge configuration but of

00:25:36,179 --> 00:25:42,059
course you've already done that so

00:25:40,350 --> 00:25:43,860
specific deploying cases so there's an

00:25:42,059 --> 00:25:45,240
appendix and also online you'll be able

00:25:43,860 --> 00:25:46,890
to download the script this is the

00:25:45,240 --> 00:25:49,260
script I use when I do testing so I

00:25:46,890 --> 00:25:51,090
actually use this on a well not quite

00:25:49,260 --> 00:25:53,490
daily basis but very frequently to set

00:25:51,090 --> 00:25:56,159
up my own test systems to test

00:25:53,490 --> 00:25:58,380
transparency this will handle all the

00:25:56,159 --> 00:26:00,809
routed and bridged cases either the full

00:25:58,380 --> 00:26:02,250
case of the half case there's another

00:26:00,809 --> 00:26:04,140
example script that's going to be

00:26:02,250 --> 00:26:05,309
available it uses natsot of T proxy

00:26:04,140 --> 00:26:09,630
we'll talk about that a little bit more

00:26:05,309 --> 00:26:12,210
and there's some support files for using

00:26:09,630 --> 00:26:13,950
wccp which we rolling in a very touch on

00:26:12,210 --> 00:26:18,690
because that's that's a whole talk right

00:26:13,950 --> 00:26:20,820
there oops I went too fast so actually

00:26:18,690 --> 00:26:24,539
let's just talk very briefly about wccp

00:26:20,820 --> 00:26:26,610
this is your basic setup for wccp you

00:26:24,539 --> 00:26:28,650
have a router it diverts a package down

00:26:26,610 --> 00:26:30,809
to 80 s and goes out the configuration

00:26:28,650 --> 00:26:34,130
here is really affect almost identical

00:26:30,809 --> 00:26:34,130
to the routed case

00:26:34,260 --> 00:26:39,450
you have to play games with the router

00:26:35,970 --> 00:26:41,940
there it's a end-of-life Cisco protocol

00:26:39,450 --> 00:26:43,460
so Cisco and help you with it basically

00:26:41,940 --> 00:26:45,870
gives you remote patrol policy routing

00:26:43,460 --> 00:26:47,250
and if you're not in mountain parents

00:26:45,870 --> 00:26:50,010
transparent it's really kind of

00:26:47,250 --> 00:26:53,880
pointless okay we're just going to we're

00:26:50,010 --> 00:26:55,440
just going to nobody cares ATS plugins

00:26:53,880 --> 00:26:57,230
80s poison can get a hold of the

00:26:55,440 --> 00:26:58,890
outbound transparency / connection

00:26:57,230 --> 00:27:00,420
obviously you can't get a hold the

00:26:58,890 --> 00:27:01,890
inbound bit because the time the

00:27:00,420 --> 00:27:03,930
connection is there it's inbound

00:27:01,890 --> 00:27:05,370
transparent or it's not there's nothing

00:27:03,930 --> 00:27:07,890
you can do at that point on that side

00:27:05,370 --> 00:27:11,130
but you can flip the trans out bound

00:27:07,890 --> 00:27:12,690
transparency on and off you can tweak

00:27:11,130 --> 00:27:13,980
with the server address you can turn on

00:27:12,690 --> 00:27:18,180
transparency and then change the server

00:27:13,980 --> 00:27:19,440
address under your users which is fun or

00:27:18,180 --> 00:27:22,080
there's still a few little bugs on some

00:27:19,440 --> 00:27:23,640
of the URLs because the the header gets

00:27:22,080 --> 00:27:28,620
split and is differently on a

00:27:23,640 --> 00:27:30,810
transparent posse than on a proxy proxy

00:27:28,620 --> 00:27:31,740
we added we're still still working that

00:27:30,810 --> 00:27:34,710
out so you want to be a little careful

00:27:31,740 --> 00:27:36,390
with that all right now the fun part

00:27:34,710 --> 00:27:37,980
you've got it up there so now you know

00:27:36,390 --> 00:27:39,270
have a basic start you have a script

00:27:37,980 --> 00:27:40,620
with the basic commands you have the

00:27:39,270 --> 00:27:42,540
basic idea of what you're trying to do

00:27:40,620 --> 00:27:44,670
so you can try to get started then you

00:27:42,540 --> 00:27:47,400
try it and it doesn't really quite work

00:27:44,670 --> 00:27:50,220
so troubleshooting so you want to try to

00:27:47,400 --> 00:27:54,240
fix things Oh is there any questions on

00:27:50,220 --> 00:27:57,840
the first part wow I am a great speaker

00:27:54,240 --> 00:28:01,020
this is awesome I troubleshooting let's

00:27:57,840 --> 00:28:05,580
see step one make it work without 80s

00:28:01,020 --> 00:28:07,590
yes see step one yes I could you know

00:28:05,580 --> 00:28:11,100
people you're gonna you're gonna say AHA

00:28:07,590 --> 00:28:12,900
I wouldn't do that yes you will so think

00:28:11,100 --> 00:28:14,910
about that so let's talk about some

00:28:12,900 --> 00:28:17,340
tools that you can use when it's not

00:28:14,910 --> 00:28:19,980
quite working so we'll start with TCP

00:28:17,340 --> 00:28:21,900
dump I don't use it much myself other

00:28:19,980 --> 00:28:23,190
people do its main advantages are it's

00:28:21,900 --> 00:28:24,960
almost always installed so you don't

00:28:23,190 --> 00:28:26,550
have to find anywhere there's very few

00:28:24,960 --> 00:28:28,890
line it's just rose it don't have this

00:28:26,550 --> 00:28:33,480
it only requires a text interface so you

00:28:28,890 --> 00:28:35,310
can ssh in and play with it you can use

00:28:33,480 --> 00:28:37,440
it directly to dump TCP traffic you can

00:28:35,310 --> 00:28:38,850
make capture files so you can look at

00:28:37,440 --> 00:28:40,310
them laters you can make capture file

00:28:38,850 --> 00:28:42,720
and bring it off and examine it later

00:28:40,310 --> 00:28:45,300
one great thing to examine which is my

00:28:42,720 --> 00:28:47,520
favorite tool here is Wireshark you guys

00:28:45,300 --> 00:28:49,890
someone's use wireshark here surely

00:28:47,520 --> 00:28:52,440
I love this tool I could not have never

00:28:49,890 --> 00:28:55,470
have made transparency work without this

00:28:52,440 --> 00:28:57,900
thing if I use TCP dump I used to make

00:28:55,470 --> 00:28:59,490
capture files and look at Wireshark it's

00:28:57,900 --> 00:29:02,760
wonderful if you're doing any sort of

00:28:59,490 --> 00:29:04,620
TCP work or UDP work and you want to see

00:29:02,760 --> 00:29:08,900
what's going on Wireshark it's just it's

00:29:04,620 --> 00:29:12,600
awesome so I strongly recommend that

00:29:08,900 --> 00:29:14,250
there's iptables amy tables you can go

00:29:12,600 --> 00:29:16,050
and there's extra commands on the to say

00:29:14,250 --> 00:29:19,350
well show me how many times these

00:29:16,050 --> 00:29:21,480
particular rules have been hit and this

00:29:19,350 --> 00:29:23,280
is really an excellent debugging tool so

00:29:21,480 --> 00:29:24,810
you put the IP table rules in it doesn't

00:29:23,280 --> 00:29:27,150
look like they're working you can act I

00:29:24,810 --> 00:29:28,890
PT both well how often is f and hit I'll

00:29:27,150 --> 00:29:32,010
tell you how many total bytes have gone

00:29:28,890 --> 00:29:33,990
through and how many hits and so you can

00:29:32,010 --> 00:29:35,250
look at that run your tests and see if

00:29:33,990 --> 00:29:36,990
those numbers have changed and tell

00:29:35,250 --> 00:29:39,180
whether your rules are in fact actually

00:29:36,990 --> 00:29:43,320
working or not because otherwise there's

00:29:39,180 --> 00:29:44,580
really no way to know so that's those

00:29:43,320 --> 00:29:46,620
are in the man pages nothing to go

00:29:44,580 --> 00:29:48,510
through that just knowing that's there I

00:29:46,620 --> 00:29:49,770
I did quite a lot of debugging before

00:29:48,510 --> 00:29:52,680
someone told me about that and I was

00:29:49,770 --> 00:29:54,060
like I only had known earlier netstat of

00:29:52,680 --> 00:29:55,890
course this is really handy this is

00:29:54,060 --> 00:29:57,690
actually the only next I command i

00:29:55,890 --> 00:29:59,790
actually ever used just tells me all the

00:29:57,690 --> 00:30:02,100
tcp listening ports so one of the things

00:29:59,790 --> 00:30:03,780
is if I i think i have 80 s up and I

00:30:02,100 --> 00:30:07,890
think it's listening on this proxy port

00:30:03,780 --> 00:30:09,060
but is it really so or shut it down and

00:30:07,890 --> 00:30:11,340
then look and see if there is something

00:30:09,060 --> 00:30:13,740
else on that port right if you're 180 s

00:30:11,340 --> 00:30:15,780
in port 8080 shut down 80 s run this you

00:30:13,740 --> 00:30:22,500
see something on port 8080 there's your

00:30:15,780 --> 00:30:24,360
problem so next at you can do a lot of

00:30:22,500 --> 00:30:27,120
trouble shooting with a TS logging 80s

00:30:24,360 --> 00:30:30,030
has a very excellent logging system to

00:30:27,120 --> 00:30:31,620
generate a lot of debug messages you

00:30:30,030 --> 00:30:34,770
need to turn on you go into the records

00:30:31,620 --> 00:30:37,830
da config file and you flip that switch

00:30:34,770 --> 00:30:39,450
their to one from zero that just makes

00:30:37,830 --> 00:30:42,120
it possible to get any bugging tags not

00:30:39,450 --> 00:30:44,070
by itself created of a pegs any output

00:30:42,120 --> 00:30:45,420
which you have two ways to do it if

00:30:44,070 --> 00:30:47,340
you're firing up traffic server directly

00:30:45,420 --> 00:30:49,470
from the command line the actual traffic

00:30:47,340 --> 00:30:52,500
server process you can use st option and

00:30:49,470 --> 00:30:54,330
put tags in if you want to do it from

00:30:52,500 --> 00:30:56,880
the records app config there's the

00:30:54,330 --> 00:30:59,540
config string you put a string same

00:30:56,880 --> 00:30:59,540
format as the

00:30:59,700 --> 00:31:05,260
t option and so these are actually this

00:31:03,549 --> 00:31:07,059
is actually a regular expression so if

00:31:05,260 --> 00:31:09,580
you put host it'll match host animal

00:31:07,059 --> 00:31:13,960
mash hosts TB and this will match tag

00:31:09,580 --> 00:31:15,640
one tag to or tag 12 or tag 21 because

00:31:13,960 --> 00:31:19,230
there's a little pipe there which is an

00:31:15,640 --> 00:31:22,559
or so this can generate a lot of output

00:31:19,230 --> 00:31:25,090
will talk about some of the more handy

00:31:22,559 --> 00:31:43,799
tags when we go through our checklist so

00:31:25,090 --> 00:31:46,450
any other no questions all right what if

00:31:43,799 --> 00:31:50,290
you're acting as a prouder if and you

00:31:46,450 --> 00:31:53,260
have multiple VLAN tags on your on your

00:31:50,290 --> 00:31:56,040
trunk line they can't deploy

00:31:53,260 --> 00:31:59,370
transparency but if you have only one

00:31:56,040 --> 00:32:02,710
specific tag then it's easy to configure

00:31:59,370 --> 00:32:07,000
using the interfaces not really a

00:32:02,710 --> 00:32:11,049
question but well no you should say did

00:32:07,000 --> 00:32:14,290
you know that then it's a question ok so

00:32:11,049 --> 00:32:15,970
I put up a troubleshooting checklist

00:32:14,290 --> 00:32:17,740
just this is not the only things you do

00:32:15,970 --> 00:32:20,080
but it's a it's a night again a nice

00:32:17,740 --> 00:32:22,510
start for things you can do when you

00:32:20,080 --> 00:32:25,120
want to try to fix it so you know remove

00:32:22,510 --> 00:32:27,520
all the 80s eb tables IV table all that

00:32:25,120 --> 00:32:30,190
do you have connectivity fire pts

00:32:27,520 --> 00:32:32,260
checking your processes here's some

00:32:30,190 --> 00:32:35,740
error message places you should look at

00:32:32,260 --> 00:32:37,960
traffic that out is over in the Varla a

00:32:35,740 --> 00:32:40,000
VAR log traffic server area that's where

00:32:37,960 --> 00:32:42,160
all the debugging output will go even if

00:32:40,000 --> 00:32:43,480
you don't have debugging turned on ATS

00:32:42,160 --> 00:32:44,860
does a lot of checks when it fires up

00:32:43,480 --> 00:32:47,230
parents parenting will generate error

00:32:44,860 --> 00:32:48,100
messages if something's gone wrong like

00:32:47,230 --> 00:32:49,809
for instance you've turned on

00:32:48,100 --> 00:32:51,640
transparency and it didn't actually

00:32:49,809 --> 00:32:54,100
compile transparency will in fact get an

00:32:51,640 --> 00:32:55,890
error message saying yo that's not going

00:32:54,100 --> 00:32:58,750
to work it's not built with transparency

00:32:55,890 --> 00:33:00,580
there's an error log where other metal

00:32:58,750 --> 00:33:03,040
show up sometimes you need to look in D

00:33:00,580 --> 00:33:05,320
message because very early on the 80s

00:33:03,040 --> 00:33:07,400
process it doesn't hasn't figured itself

00:33:05,320 --> 00:33:09,750
enough to actually put out to the

00:33:07,400 --> 00:33:12,390
normal error logs and it will do some

00:33:09,750 --> 00:33:13,500
sis logging so that's something you

00:33:12,390 --> 00:33:16,320
might check to make sure everything's

00:33:13,500 --> 00:33:18,840
coming up correctly review your

00:33:16,320 --> 00:33:21,960
configuration I know that sound silly

00:33:18,840 --> 00:33:23,840
but you know just make sure check you

00:33:21,960 --> 00:33:27,690
know especially do cross checks on this

00:33:23,840 --> 00:33:30,630
make sure you the values agree that's a

00:33:27,690 --> 00:33:32,310
great way to get lost there then start

00:33:30,630 --> 00:33:34,290
capturing I usually start capturing from

00:33:32,310 --> 00:33:35,820
the client side so i get my TCP dump I

00:33:34,290 --> 00:33:37,980
get my wire shark and go to the client

00:33:35,820 --> 00:33:39,930
side I say the client connections even

00:33:37,980 --> 00:33:42,390
showing up here am I getting it sends in

00:33:39,930 --> 00:33:44,720
am I getting syntax back am I seeing the

00:33:42,390 --> 00:33:46,650
actual HTTP connection requests come in

00:33:44,720 --> 00:33:48,330
80s is always going to live on the

00:33:46,650 --> 00:33:49,800
loopback because of the transparency

00:33:48,330 --> 00:33:52,620
issue if you're transparent it's going

00:33:49,800 --> 00:33:55,890
to be on the loopback are you seeing

00:33:52,620 --> 00:33:58,020
that the clients in packets go up to the

00:33:55,890 --> 00:34:00,390
loopback is 80s even seeing the sins at

00:33:58,020 --> 00:34:02,160
all is it sending syntax back then look

00:34:00,390 --> 00:34:03,930
at the server side are you seeing any

00:34:02,160 --> 00:34:06,210
any sense in acts coming out on that

00:34:03,930 --> 00:34:07,620
side using your request come out you can

00:34:06,210 --> 00:34:11,190
check the 80s logs to see if it's

00:34:07,620 --> 00:34:13,080
recording connections that's actually

00:34:11,190 --> 00:34:15,090
kind of hand you do if it looks like

00:34:13,080 --> 00:34:16,620
it's working but the proxy insane to be

00:34:15,090 --> 00:34:17,550
working it might be that the connections

00:34:16,620 --> 00:34:20,100
are going straight through without

00:34:17,550 --> 00:34:21,929
hitting 80s at all so you want to check

00:34:20,100 --> 00:34:24,770
the 80s logs in that case to say well

00:34:21,929 --> 00:34:26,909
does 80s actually see the connections

00:34:24,770 --> 00:34:29,040
alright some additional notes of things

00:34:26,909 --> 00:34:30,480
to watch out for be very careful using

00:34:29,040 --> 00:34:33,000
IP addresses to figure out where these

00:34:30,480 --> 00:34:34,560
packets are who can ah ok thanks all

00:34:33,000 --> 00:34:38,540
right I'll speed up here I'm going to

00:34:34,560 --> 00:34:40,800
slow because we're messing with the IP

00:34:38,540 --> 00:34:42,810
source and destination address the whole

00:34:40,800 --> 00:34:44,399
point of transparency when you look at

00:34:42,810 --> 00:34:47,820
those packets you can no longer be sure

00:34:44,399 --> 00:34:49,409
we're actually they came from ok there's

00:34:47,820 --> 00:34:52,140
you the exact same pad or the exact same

00:34:49,409 --> 00:34:53,760
for tuple on both the clients line and

00:34:52,140 --> 00:34:55,919
the source side just be a little careful

00:34:53,760 --> 00:34:58,020
there's mac addresses these are handy

00:34:55,919 --> 00:35:00,570
we're trying to figure out where these

00:34:58,020 --> 00:35:02,580
packets are actually originating some of

00:35:00,570 --> 00:35:03,750
the tool will show you an IP ID as part

00:35:02,580 --> 00:35:05,190
of the trace and they'll match that up

00:35:03,750 --> 00:35:07,380
for you so you can look at that and make

00:35:05,190 --> 00:35:09,180
sure you just be very careful when you

00:35:07,380 --> 00:35:11,010
all those packets you you explicitly

00:35:09,180 --> 00:35:13,860
check which connection there from

00:35:11,010 --> 00:35:15,780
because it can get very confusing you

00:35:13,860 --> 00:35:19,050
just have to be an easy way to get lost

00:35:15,780 --> 00:35:20,870
looking at stuff alright so we talked

00:35:19,050 --> 00:35:23,000
about this so we're talking about won't

00:35:20,870 --> 00:35:24,980
and again here's some useful tags these

00:35:23,000 --> 00:35:27,260
the ones I find most useful the host DB

00:35:24,980 --> 00:35:30,500
and the DNS tags will let you see how

00:35:27,260 --> 00:35:31,820
80s is trying to look up origin server

00:35:30,500 --> 00:35:33,050
so you can see if 80s is seeing the

00:35:31,820 --> 00:35:35,720
connections that trying to find the

00:35:33,050 --> 00:35:37,580
origin servers HTTP accept is on the

00:35:35,720 --> 00:35:39,710
inbound side it tells you whether 80s is

00:35:37,580 --> 00:35:41,180
actually accepting connections there's a

00:35:39,710 --> 00:35:43,070
tea proxy cab which just gives you some

00:35:41,180 --> 00:35:45,650
extra data about tea proxy operations

00:35:43,070 --> 00:35:48,110
and all this goes out to traffic dot out

00:35:45,650 --> 00:35:49,640
so there's a few other ones going to be

00:35:48,110 --> 00:35:51,380
a little careful you want to avoid just

00:35:49,640 --> 00:35:55,490
the HTTP tagg because that generates

00:35:51,380 --> 00:35:56,750
just unreal amounts of output because it

00:35:55,490 --> 00:35:59,270
gives you every little thing it happens

00:35:56,750 --> 00:36:00,440
in every single HTTP transaction don't

00:35:59,270 --> 00:36:03,680
want to go there unless you really need

00:36:00,440 --> 00:36:05,600
to look into that whoops wccp

00:36:03,680 --> 00:36:10,040
troubleshooting one person said don't

00:36:05,600 --> 00:36:12,680
just just replace it but you can look at

00:36:10,040 --> 00:36:14,780
that if you really want to talk to a WC

00:36:12,680 --> 00:36:17,090
GP bug me elsewhere we don't really have

00:36:14,780 --> 00:36:18,740
time to deal with that let's go really

00:36:17,090 --> 00:36:20,120
quickly through some potential issues

00:36:18,740 --> 00:36:22,160
that we've gotten all of these have

00:36:20,120 --> 00:36:24,800
happened out in the field from real

00:36:22,160 --> 00:36:28,730
people that I've talked to or try to get

00:36:24,800 --> 00:36:33,290
help from me so this is all its field

00:36:28,730 --> 00:36:35,240
experience origin server address one

00:36:33,290 --> 00:36:36,740
thing you can do is the origin server

00:36:35,240 --> 00:36:38,000
gets resolved twice the client resolves

00:36:36,740 --> 00:36:40,400
when the original sets up connection the

00:36:38,000 --> 00:36:42,350
80s reads the header and resolves it you

00:36:40,400 --> 00:36:45,260
can get around that by setting this

00:36:42,350 --> 00:36:47,000
config parameter you lose some control

00:36:45,260 --> 00:36:50,230
because the client gets to decide what

00:36:47,000 --> 00:36:52,790
the address is something to be aware of

00:36:50,230 --> 00:36:53,990
one of the people use this said they

00:36:52,790 --> 00:36:54,980
they turn this on all the time because

00:36:53,990 --> 00:36:57,320
then they don't want to configure good

00:36:54,980 --> 00:37:01,970
DNS around 80 s the clients already got

00:36:57,320 --> 00:37:04,550
the address just use it you can also do

00:37:01,970 --> 00:37:06,170
this with the port by default when 80s

00:37:04,550 --> 00:37:08,030
binds the outgoing port on the

00:37:06,170 --> 00:37:10,210
client-side connection on the server

00:37:08,030 --> 00:37:14,420
side connection just use a random port

00:37:10,210 --> 00:37:15,920
but you can tell it to use the same

00:37:14,420 --> 00:37:17,510
source port that the client is so

00:37:15,920 --> 00:37:22,940
there's origin server not only same

00:37:17,510 --> 00:37:23,960
address but the same port no that's

00:37:22,940 --> 00:37:27,380
completely wrong i'm looking at a

00:37:23,960 --> 00:37:29,030
different slide address binding one of

00:37:27,380 --> 00:37:31,520
the things 80s lets you do is bind

00:37:29,030 --> 00:37:34,050
addresses to your proxy ports this

00:37:31,520 --> 00:37:35,490
doesn't work with transparency because

00:37:34,050 --> 00:37:36,960
address the binding address is

00:37:35,490 --> 00:37:40,950
determined by the client in the server

00:37:36,960 --> 00:37:43,290
not by what's on the the proxy so the IP

00:37:40,950 --> 00:37:45,030
and IP out at options reviews to do this

00:37:43,290 --> 00:37:47,010
just don't work that's why it's always

00:37:45,030 --> 00:37:49,560
on the loopback because it doesn't it's

00:37:47,010 --> 00:37:51,060
not going to have any local address well

00:37:49,560 --> 00:37:53,640
there's support transparency slide and

00:37:51,060 --> 00:37:54,870
it was here somewhere so we talked about

00:37:53,640 --> 00:37:56,610
this there's actually some issues here

00:37:54,870 --> 00:37:59,280
there's a there's actually a line X

00:37:56,610 --> 00:38:00,930
problem where if you bind to foreign

00:37:59,280 --> 00:38:03,510
addresses and use a port 0 to say give

00:38:00,930 --> 00:38:06,210
me any port it only has one pool for

00:38:03,510 --> 00:38:07,820
that only 64 K ports so if you're trying

00:38:06,210 --> 00:38:10,200
to push out fifty sixty thousand

00:38:07,820 --> 00:38:11,580
simultaneously outbound connections you

00:38:10,200 --> 00:38:13,100
can run out a port even though you're

00:38:11,580 --> 00:38:15,360
connecting to several hundred different

00:38:13,100 --> 00:38:17,880
origin server addresses and you think

00:38:15,360 --> 00:38:19,590
well I shouldn't have a problem if you

00:38:17,880 --> 00:38:22,260
explicitly bind it then this doesn't

00:38:19,590 --> 00:38:29,130
happen not sure why that's just way

00:38:22,260 --> 00:38:31,200
hynix is keep-alive there's a 80s tries

00:38:29,130 --> 00:38:32,760
to keep the server side alive as much as

00:38:31,200 --> 00:38:34,740
possible you know if the client side

00:38:32,760 --> 00:38:37,260
goes down if you're doing comparison

00:38:34,740 --> 00:38:38,880
this can lead to some odd effects the

00:38:37,260 --> 00:38:42,690
client can shift its poor around without

00:38:38,880 --> 00:38:44,490
the traffic server side seeing that

00:38:42,690 --> 00:38:46,080
change in the port it doesn't even

00:38:44,490 --> 00:38:48,450
matter very often I haven't heard a lot

00:38:46,080 --> 00:38:50,580
of complaints about this but there are

00:38:48,450 --> 00:38:52,590
we did put the you source port in

00:38:50,580 --> 00:38:59,250
precisely because some were a couple

00:38:52,590 --> 00:39:01,170
people who who didn't like this hcps if

00:38:59,250 --> 00:39:02,760
you're going to proxy HCBS it can be

00:39:01,170 --> 00:39:03,930
done you have to have certificates or

00:39:02,760 --> 00:39:05,370
convince the clients that your

00:39:03,930 --> 00:39:07,140
certificates are valid you want to be

00:39:05,370 --> 00:39:08,190
careful of that it's not a big deal if

00:39:07,140 --> 00:39:10,920
your CDN you know in all the

00:39:08,190 --> 00:39:12,930
certificates anyway but you can't just

00:39:10,920 --> 00:39:14,880
slap an ssl and the proxy port option

00:39:12,930 --> 00:39:17,460
and expect that to work you can blind

00:39:14,880 --> 00:39:19,260
tunnel it I check the IP addresses

00:39:17,460 --> 00:39:21,090
generally I don't see the point of that

00:39:19,260 --> 00:39:22,170
you might just not even intercept them

00:39:21,090 --> 00:39:26,070
if you're just if you're not going to

00:39:22,170 --> 00:39:28,020
proxy them this is an option was put in

00:39:26,070 --> 00:39:29,550
recently so that there's a protocol is

00:39:28,020 --> 00:39:32,040
out there that used port 80 and look

00:39:29,550 --> 00:39:33,750
like HP that aren't really 80s will barf

00:39:32,040 --> 00:39:35,610
on those because that's an HTTP header

00:39:33,750 --> 00:39:38,820
and I don't accept invalid headers

00:39:35,610 --> 00:39:40,320
there's a patchy now on trunk that you

00:39:38,820 --> 00:39:42,810
can set this to say well if the header

00:39:40,320 --> 00:39:45,390
doesn't parse just blind tunnel it from

00:39:42,810 --> 00:39:46,980
there on and going out so that's a

00:39:45,390 --> 00:39:47,880
little dangerous when you use with

00:39:46,980 --> 00:39:51,660
caution but

00:39:47,880 --> 00:39:54,809
might be used necessary this is kind of

00:39:51,660 --> 00:39:57,329
an odd thing by default of you doing

00:39:54,809 --> 00:40:00,000
explicit proxying there's no you can

00:39:57,329 --> 00:40:01,619
have an ipv4 inbound ipv6 outbound

00:40:00,000 --> 00:40:03,119
they're just separate connections so

00:40:01,619 --> 00:40:04,950
there's no reason for EM use the same IP

00:40:03,119 --> 00:40:06,539
address or your friends parents you

00:40:04,950 --> 00:40:08,099
can't do that because you you're

00:40:06,539 --> 00:40:10,470
preserving address so naturally also

00:40:08,099 --> 00:40:13,349
preserving the family so inside it'll

00:40:10,470 --> 00:40:14,910
it'll force it to always use the client

00:40:13,349 --> 00:40:16,980
family because there's well there's

00:40:14,910 --> 00:40:20,039
nothing else you can do something to

00:40:16,980 --> 00:40:21,809
keep in mind so in general you can story

00:40:20,039 --> 00:40:24,569
map even while you're transparent this

00:40:21,809 --> 00:40:26,880
can get a little dangerous because the

00:40:24,569 --> 00:40:30,049
client and the server will think that

00:40:26,880 --> 00:40:32,460
the servers are different IP address I

00:40:30,049 --> 00:40:34,500
have code in there that if you're if

00:40:32,460 --> 00:40:36,630
you're using the server address if you

00:40:34,500 --> 00:40:39,180
use a client so if you're not doing the

00:40:36,630 --> 00:40:41,700
desk abass an 80s us using the client

00:40:39,180 --> 00:40:43,680
one it does it does it prevents that

00:40:41,700 --> 00:40:47,099
after you map I don't know why did that

00:40:43,680 --> 00:40:48,420
I've got a request to change that and if

00:40:47,099 --> 00:40:51,750
you're doing plugins and you can do

00:40:48,420 --> 00:40:53,430
really sophisticated things but just

00:40:51,750 --> 00:40:55,380
keep my if you are doing wrapping then

00:40:53,430 --> 00:40:58,529
you can have this IP address divergence

00:40:55,380 --> 00:41:03,450
which can cause problems windows update

00:40:58,529 --> 00:41:04,829
for instance won't work in that case the

00:41:03,450 --> 00:41:06,779
biggest drawback I'd say at this point

00:41:04,829 --> 00:41:08,339
is that line inks is really required it

00:41:06,779 --> 00:41:11,400
doesn't it doesn't really work on other

00:41:08,339 --> 00:41:13,200
operating systems turns out oddly that

00:41:11,400 --> 00:41:15,420
it's not the T proxy eat stuff that you

00:41:13,200 --> 00:41:17,880
need so much but the poses capabilities

00:41:15,420 --> 00:41:19,289
and the issue is that transparent

00:41:17,880 --> 00:41:20,549
binding the privilege operation so

00:41:19,289 --> 00:41:22,380
either we need that or we have to run

00:41:20,549 --> 00:41:25,230
traffic server process itself is root

00:41:22,380 --> 00:41:27,450
and we really don't want to do that

00:41:25,230 --> 00:41:29,869
that's just that's just too dangerous

00:41:27,450 --> 00:41:31,980
for us to recommend in any circumstances

00:41:29,869 --> 00:41:35,160
but you know if you want to work in

00:41:31,980 --> 00:41:37,109
other operating systems volunteer we're

00:41:35,160 --> 00:41:40,460
happy to happy to take patches or any

00:41:37,109 --> 00:41:43,079
help on that that you want to put up

00:41:40,460 --> 00:41:45,690
this is a fun one I found this out from

00:41:43,079 --> 00:41:49,559
one of our clients script kiddies so

00:41:45,690 --> 00:41:52,099
this client has does is P type stuff so

00:41:49,559 --> 00:41:54,269
they're trying to boost their bandwidth

00:41:52,099 --> 00:41:57,839
improve client experience without having

00:41:54,269 --> 00:42:00,930
to buy more bandwidth on the outside so

00:41:57,839 --> 00:42:02,550
but if you have a TS up and you

00:42:00,930 --> 00:42:05,369
captured intercepted port 80 then port

00:42:02,550 --> 00:42:08,520
80 works for any outbound address right

00:42:05,369 --> 00:42:10,079
80s has no way of knowing that there's

00:42:08,520 --> 00:42:11,760
no server on their side till after its

00:42:10,079 --> 00:42:14,220
accept the connection so the script keys

00:42:11,760 --> 00:42:15,510
out there trying to do port probing will

00:42:14,220 --> 00:42:19,079
find success in every single address

00:42:15,510 --> 00:42:20,280
they try now yeah this is script keys to

00:42:19,079 --> 00:42:22,890
the professionals will figure this out

00:42:20,280 --> 00:42:24,210
very quickly and move on it's the it's

00:42:22,890 --> 00:42:25,470
the college students who think they're

00:42:24,210 --> 00:42:27,869
clever with some pearl stuff that

00:42:25,470 --> 00:42:30,869
downloaded that the problem it's not a

00:42:27,869 --> 00:42:33,599
big deal something to keep in mind if

00:42:30,869 --> 00:42:35,160
you see just all these massive port 80

00:42:33,599 --> 00:42:39,720
things coming in with that don't ever

00:42:35,160 --> 00:42:41,700
actually go anywhere okay all right so i

00:42:39,720 --> 00:42:43,500
think we're oh yeah we're doing good on

00:42:41,700 --> 00:42:46,349
time so let me go one last slide some

00:42:43,500 --> 00:42:48,450
resources you have ats has on

00:42:46,349 --> 00:42:51,210
documentation wiki nameless yadda yadda

00:42:48,450 --> 00:42:52,500
yadda go to that address all you can get

00:42:51,210 --> 00:42:55,050
every one of those things from that

00:42:52,500 --> 00:42:57,480
address or all listed there i provide

00:42:55,050 --> 00:42:59,760
consulting services there and we have a

00:42:57,480 --> 00:43:02,160
very large contingent by peanut gallery

00:42:59,760 --> 00:43:03,690
of traffic server people here at the

00:43:02,160 --> 00:43:04,920
conference that's a real bonus if you're

00:43:03,690 --> 00:43:06,000
actually here there's a bunch of them

00:43:04,920 --> 00:43:08,730
there and there's some more over here

00:43:06,000 --> 00:43:11,970
it's like what 15 16 traffic server

00:43:08,730 --> 00:43:14,309
developers users community members meet

00:43:11,970 --> 00:43:15,510
them greet them buy them beer it's not

00:43:14,309 --> 00:43:20,400
getting them talking that's a promise

00:43:15,510 --> 00:43:21,630
getting in the shut up so i would if

00:43:20,400 --> 00:43:23,309
you're going to do transparent showed

00:43:21,630 --> 00:43:25,170
strong and commend meeting at least some

00:43:23,309 --> 00:43:28,589
of them to get involved with some of

00:43:25,170 --> 00:43:34,619
those so yeah the scripts they're just

00:43:28,589 --> 00:43:36,569
starting points and those are well you

00:43:34,619 --> 00:43:39,990
these are going to be online this is

00:43:36,569 --> 00:43:42,150
just a some example configuration

00:43:39,990 --> 00:43:44,040
example so this is this is what you'd

00:43:42,150 --> 00:43:45,990
look like here this would be in the

00:43:44,040 --> 00:43:49,619
records a config in 80's we've set up

00:43:45,990 --> 00:43:52,619
port 8080 v4 fully transparent and then

00:43:49,619 --> 00:43:54,809
the same thing on port 80 for ipv6

00:43:52,619 --> 00:43:56,849
there's the pastor option which says if

00:43:54,809 --> 00:44:00,059
you have a parse failure just pass it on

00:43:56,849 --> 00:44:03,540
through on port ninety 90 so these

00:44:00,059 --> 00:44:05,040
scripts are intended to work from a cold

00:44:03,540 --> 00:44:06,809
start so you bring up the system you run

00:44:05,040 --> 00:44:08,190
it you want to pick out the pieces if

00:44:06,809 --> 00:44:13,190
you don't want to do it always from a

00:44:08,190 --> 00:44:13,190
cold start so that's not so bad

00:44:13,319 --> 00:44:16,380
again that's going to be that's online

00:44:14,910 --> 00:44:21,299
so you can just download you don't have

00:44:16,380 --> 00:44:23,400
to type it in from the from the the

00:44:21,299 --> 00:44:26,969
thing you can do it with that read the

00:44:23,400 --> 00:44:28,949
slides if you want to see that it's

00:44:26,969 --> 00:44:31,440
pretty simple actually this is the fun

00:44:28,949 --> 00:44:33,269
part of Matt that's it that's your

00:44:31,440 --> 00:44:35,849
iptables stuff for nat of course you

00:44:33,269 --> 00:44:38,869
don't you can't use the client address

00:44:35,849 --> 00:44:43,140
because it gets destroyed by the nat

00:44:38,869 --> 00:44:45,150
wccp yeah all right there we go okay we

00:44:43,140 --> 00:44:51,140
got swag so are there any questions now

00:44:45,150 --> 00:44:51,140
oh there we got one

00:45:11,270 --> 00:45:20,040
well no because you've put them okay

00:45:18,510 --> 00:45:21,540
what he's asking about is if you have

00:45:20,040 --> 00:45:23,100
outbound transparent you're in forward

00:45:21,540 --> 00:45:25,080
proxy mode your outbound transparent how

00:45:23,100 --> 00:45:30,030
do the package get back through 80s to

00:45:25,080 --> 00:45:31,530
the client right okay well we've put the

00:45:30,030 --> 00:45:34,260
proxy between the client and the server

00:45:31,530 --> 00:45:35,700
and so when the cert with an outbound

00:45:34,260 --> 00:45:36,870
turn spent the server thinks is talking

00:45:35,700 --> 00:45:38,820
directly to the client so it's going to

00:45:36,870 --> 00:45:40,170
use the client address so the writing is

00:45:38,820 --> 00:45:42,720
going to take the packet back toward the

00:45:40,170 --> 00:45:44,430
client and you simply have to make sure

00:45:42,720 --> 00:45:47,730
your network topology is such that

00:45:44,430 --> 00:45:49,500
packets coming back from outside with

00:45:47,730 --> 00:45:52,050
the client address will go through the

00:45:49,500 --> 00:45:53,490
80s box that's part of a whole topology

00:45:52,050 --> 00:45:55,710
set up to make sure that your packets

00:45:53,490 --> 00:45:57,690
are going through it both ways and yes

00:45:55,710 --> 00:46:00,360
we've had an instance where that wasn't

00:45:57,690 --> 00:46:02,490
the case and it doesn't work so the

00:46:00,360 --> 00:46:04,920
outbound turn span is used more often on

00:46:02,490 --> 00:46:07,500
that I would think on the CDN side so

00:46:04,920 --> 00:46:09,030
the 80s is close to the servers and you

00:46:07,500 --> 00:46:10,350
don't want to muck about you might make

00:46:09,030 --> 00:46:13,650
it easier for your origin servers to

00:46:10,350 --> 00:46:17,460
look at the the clients address so

00:46:13,650 --> 00:46:22,580
that's a more normal use case you get

00:46:17,460 --> 00:46:22,580
you get that okay any other questions

00:46:24,290 --> 00:46:33,080
I have a question so about six months

00:46:29,660 --> 00:46:35,720
ago cisco announced or or made it

00:46:33,080 --> 00:46:38,690
official an update to the wccp protocol

00:46:35,720 --> 00:46:43,340
is that official yes it's on the IETF

00:46:38,690 --> 00:46:45,710
list and it includes a change to the

00:46:43,340 --> 00:46:48,380
protocol adds multiple address families

00:46:45,710 --> 00:46:50,960
including ipv6 how come traffic server

00:46:48,380 --> 00:46:54,410
doesn't have this yet because I haven't

00:46:50,960 --> 00:47:04,160
seen this back i wasn't i sent it to you

00:46:54,410 --> 00:47:06,910
six months ago the real question is is

00:47:04,160 --> 00:47:09,200
cisco going to an end of life it though

00:47:06,910 --> 00:47:11,270
they'll up two relations back but they

00:47:09,200 --> 00:47:12,980
still won't support it because one of

00:47:11,270 --> 00:47:14,780
the problems with the end of life is

00:47:12,980 --> 00:47:16,190
that I can actually get there's parts of

00:47:14,780 --> 00:47:18,560
the protocol I had to pack at level

00:47:16,190 --> 00:47:21,170
debug to make it work with transparency

00:47:18,560 --> 00:47:22,250
at all because they wouldn't it's not

00:47:21,170 --> 00:47:26,230
documented and they wouldn't tell me no

00:47:22,250 --> 00:47:29,150
that's end of life go away all right

00:47:26,230 --> 00:47:34,550
well I guess I'll let you go then oh do

00:47:29,150 --> 00:47:35,750
we have another question clustered well

00:47:34,550 --> 00:47:38,390
I think clustering works with

00:47:35,750 --> 00:47:41,360
transparent wings in here you guys run

00:47:38,390 --> 00:47:42,410
transparent at all I don't see any

00:47:41,360 --> 00:47:44,420
reason why it wouldn't work with

00:47:42,410 --> 00:47:52,820
clustering I don't know if anyone's

00:47:44,420 --> 00:47:59,020
actually tried that I think the pasta is

00:47:52,820 --> 00:48:03,650
working most of errands on a release

00:47:59,020 --> 00:48:07,670
Master tree but if you want to run for

00:48:03,650 --> 00:48:17,170
the dallas ccp i'm not sure it will work

00:48:07,670 --> 00:48:22,130
for you you may try it yes I'm the

00:48:17,170 --> 00:48:23,900
committee yeah it's kind of independent

00:48:22,130 --> 00:48:25,400
because that communication goes through

00:48:23,900 --> 00:48:28,420
different mechanisms and the

00:48:25,400 --> 00:48:28,420
client-server traffic

00:48:31,090 --> 00:48:37,940
all right well then thank Oh does anyone

00:48:35,450 --> 00:48:43,010
here know as cell sniff of fiddler or

00:48:37,940 --> 00:48:44,870
any of those tools it would seem could

00:48:43,010 --> 00:48:46,730
be a pretty cool feature if we could

00:48:44,870 --> 00:48:49,370
implement something like that as either

00:48:46,730 --> 00:48:50,800
as a plug-in or feature in the

00:48:49,370 --> 00:48:54,410
transparent proxy so it would

00:48:50,800 --> 00:49:00,290
automatically sign certificates that are

00:48:54,410 --> 00:49:02,840
trusted inside alarm yeah yeah I am

00:49:00,290 --> 00:49:05,240
there's some serious issues with with

00:49:02,840 --> 00:49:06,710
fiddling with certificates and I we

00:49:05,240 --> 00:49:12,880
don't have the scope to go into them

00:49:06,710 --> 00:49:12,880
here so I'd be very cautious with that

00:49:14,590 --> 00:49:31,960
you've got something like that are you

00:49:19,190 --> 00:49:31,960
going to release it as plugin all right

00:49:33,250 --> 00:49:37,360

YouTube URL: https://www.youtube.com/watch?v=hYn6VkjEGZs


