Title: Adventures with ASC and ODL - Schuberg Philis
Publication date: 2014-04-24
Playlist: CloudStack Collaboration Conference North America 2014
Description: 
	CloudStack Collaboration Conference North America 2014
Captions: 
	00:00:00,000 --> 00:00:05,819
okay welcome everybody great to see

00:00:03,179 --> 00:00:07,259
there's still people here unfortunately

00:00:05,819 --> 00:00:08,730
I'm on this side and all you guys are on

00:00:07,259 --> 00:00:10,950
that side but yeah it shouldn't matter

00:00:08,730 --> 00:00:14,070
the audios amplified show you should be

00:00:10,950 --> 00:00:16,109
able to hear me quite okay over there so

00:00:14,070 --> 00:00:18,300
this talk is going to be about apache

00:00:16,109 --> 00:00:20,250
cloudstack and open daylight and it's

00:00:18,300 --> 00:00:21,810
going to be a short talk we have like 30

00:00:20,250 --> 00:00:24,390
minutes and you guys are probably

00:00:21,810 --> 00:00:25,529
obviously all waiting to go home now so

00:00:24,390 --> 00:00:27,689
I'm going to really make it like 30

00:00:25,529 --> 00:00:30,269
minutes and it's going to be about a lot

00:00:27,689 --> 00:00:32,700
of diverse things it's going to be a

00:00:30,269 --> 00:00:33,930
little bit about community about how to

00:00:32,700 --> 00:00:35,430
deal with different communities and

00:00:33,930 --> 00:00:37,860
different projects it's going to be a

00:00:35,430 --> 00:00:39,120
little bit about technology and it's

00:00:37,860 --> 00:00:40,920
going to be a little bit about me

00:00:39,120 --> 00:00:44,579
because I actually had this weird idea

00:00:40,920 --> 00:00:46,500
of doing this so first of all let's get

00:00:44,579 --> 00:00:48,600
started with open daylight what's open

00:00:46,500 --> 00:00:50,340
daylight opendaylight there's an

00:00:48,600 --> 00:00:52,680
interesting project they got

00:00:50,340 --> 00:00:55,350
kick-started well I think just about

00:00:52,680 --> 00:00:56,910
over two years ago and they really

00:00:55,350 --> 00:00:58,620
rapidly gained a lot of traction and

00:00:56,910 --> 00:00:59,640
they said we want to be the

00:00:58,620 --> 00:01:02,489
software-defined networking controller

00:00:59,640 --> 00:01:03,870
of also verify networking controllers

00:01:02,489 --> 00:01:06,119
actually so they set up a foundation

00:01:03,870 --> 00:01:08,340
they said it would be a development

00:01:06,119 --> 00:01:10,470
model and that got a lot of traction

00:01:08,340 --> 00:01:12,689
within the industry donating bits and

00:01:10,470 --> 00:01:15,720
pieces so we have a pretty mature stable

00:01:12,689 --> 00:01:17,340
controller core there's and various sub

00:01:15,720 --> 00:01:19,350
projects like virtual tenant networking

00:01:17,340 --> 00:01:20,670
all donated by various vendors and a lot

00:01:19,350 --> 00:01:22,770
of open source people who are now

00:01:20,670 --> 00:01:25,350
working on the code base so a very

00:01:22,770 --> 00:01:27,810
interesting project in terms a day don't

00:01:25,350 --> 00:01:29,970
have a really clear set goal that I was

00:01:27,810 --> 00:01:31,170
able to determine they think they want

00:01:29,970 --> 00:01:33,570
to do a lot with sort of a networking

00:01:31,170 --> 00:01:35,100
but like another like the other vendors

00:01:33,570 --> 00:01:37,799
where we have support for in Apache

00:01:35,100 --> 00:01:40,200
CloudStack like mirror net and juniper

00:01:37,799 --> 00:01:42,060
control they have a very clear idea

00:01:40,200 --> 00:01:43,409
about this is the type of servers that

00:01:42,060 --> 00:01:45,390
we are going to offer whereas

00:01:43,409 --> 00:01:46,920
opendaylight has a more broad view like

00:01:45,390 --> 00:01:49,409
we just going to support everything I

00:01:46,920 --> 00:01:51,270
mean gonna leave it up to our API

00:01:49,409 --> 00:01:53,250
consumers and our product consumers to

00:01:51,270 --> 00:01:57,719
actually determine what it is I want to

00:01:53,250 --> 00:01:59,520
use so here we are with the patchy cloud

00:01:57,719 --> 00:02:01,619
stack well I see most of the same faces

00:01:59,520 --> 00:02:03,320
I saw during post doc so i think i'm not

00:02:01,619 --> 00:02:06,060
going to go into the networking details

00:02:03,320 --> 00:02:08,789
but with just a little bit of background

00:02:06,060 --> 00:02:10,830
the thing we're interested in here is

00:02:08,789 --> 00:02:12,610
virtual networking that's basically the

00:02:10,830 --> 00:02:16,060
stuff w with Software Defined Networking

00:02:12,610 --> 00:02:17,320
cloudstack so first of all networking is

00:02:16,060 --> 00:02:20,230
mainly interested in what we call

00:02:17,320 --> 00:02:22,570
advanced advanced mode networks so it's

00:02:20,230 --> 00:02:24,070
used to isolate networks it used to

00:02:22,570 --> 00:02:25,420
provide some additional services on the

00:02:24,070 --> 00:02:27,460
network layer which are mainly

00:02:25,420 --> 00:02:29,680
interesting interesting if you use the

00:02:27,460 --> 00:02:31,290
layer to segregation or the tenant

00:02:29,680 --> 00:02:33,550
isolation we have in advanced networking

00:02:31,290 --> 00:02:35,980
there's actually no real reason not to

00:02:33,550 --> 00:02:38,350
use it with basic networking actually

00:02:35,980 --> 00:02:40,690
nobody really works on it yet because of

00:02:38,350 --> 00:02:42,250
the way the traffic is separated using

00:02:40,690 --> 00:02:43,570
these security groups it's more

00:02:42,250 --> 00:02:47,200
difficult to actually implement it in

00:02:43,570 --> 00:02:49,900
sort of a network and the real isolation

00:02:47,200 --> 00:02:55,390
suits itself pretty well for use by

00:02:49,900 --> 00:02:57,610
software-defined networking so why we

00:02:55,390 --> 00:02:59,020
want to integrate with a project like to

00:02:57,610 --> 00:03:01,900
open daylight and especially at a time

00:02:59,020 --> 00:03:03,820
when they didn't he have their first

00:03:01,900 --> 00:03:05,230
release out I mean at the moment we have

00:03:03,820 --> 00:03:07,450
the hydrogen release of open daylight

00:03:05,230 --> 00:03:08,890
which is pretty much a stable release

00:03:07,450 --> 00:03:10,810
although it is their first release but

00:03:08,890 --> 00:03:12,580
at the time I started looking into open

00:03:10,810 --> 00:03:16,390
daylight we didn't really have any

00:03:12,580 --> 00:03:18,100
release out of the door yet so but the

00:03:16,390 --> 00:03:20,730
point here is if there's this new

00:03:18,100 --> 00:03:24,040
project is gaining a lot of traction and

00:03:20,730 --> 00:03:26,350
apache cloudstack is an orchestration

00:03:24,040 --> 00:03:28,870
platform that means that we don't

00:03:26,350 --> 00:03:30,549
actually do anything ourselves we only

00:03:28,870 --> 00:03:32,739
just make sure that whatever it is you

00:03:30,549 --> 00:03:34,930
want by clicking on the UI or sending an

00:03:32,739 --> 00:03:36,790
API call it's something we can actually

00:03:34,930 --> 00:03:38,380
hand down to somebody else and say okay

00:03:36,790 --> 00:03:40,180
this is what the guy really wants in

00:03:38,380 --> 00:03:41,920
terms of technology or in terms of

00:03:40,180 --> 00:03:44,290
actions you guys you go and figure it

00:03:41,920 --> 00:03:47,799
out so the viability of such a project

00:03:44,290 --> 00:03:49,540
is really in the ability to have an

00:03:47,799 --> 00:03:51,730
ecosystem to have support from multiple

00:03:49,540 --> 00:03:53,440
vendors multiple projects etc so

00:03:51,730 --> 00:03:55,600
especially with the startup project like

00:03:53,440 --> 00:03:57,040
open daylight that's very interesting to

00:03:55,600 --> 00:03:58,600
really get traction going and really

00:03:57,040 --> 00:04:00,970
integrate with the community right away

00:03:58,600 --> 00:04:02,230
to make sure that they actually know

00:04:00,970 --> 00:04:05,049
that there's another cloud orchestration

00:04:02,230 --> 00:04:07,180
system out there it gives a lot of the

00:04:05,049 --> 00:04:09,010
folks working on the opendaylight work

00:04:07,180 --> 00:04:13,660
on the other open project that we know

00:04:09,010 --> 00:04:15,190
so much about and getting some getting

00:04:13,660 --> 00:04:16,660
some knowledge and some attraction

00:04:15,190 --> 00:04:18,790
inside the opendaylight community to

00:04:16,660 --> 00:04:20,799
support apache cloudstack it's actually

00:04:18,790 --> 00:04:23,500
a lot of work you have to go meet

00:04:20,799 --> 00:04:25,870
developers etc so that's why it was an

00:04:23,500 --> 00:04:26,370
interesting project for me to actually

00:04:25,870 --> 00:04:27,840
go out

00:04:26,370 --> 00:04:29,340
into the open daily life community and

00:04:27,840 --> 00:04:37,590
see what we could do for a banshee

00:04:29,340 --> 00:04:39,479
cloudstack so the first thing I had to

00:04:37,590 --> 00:04:42,000
do was actually try and figure out what

00:04:39,479 --> 00:04:44,850
opened island actually was was so like I

00:04:42,000 --> 00:04:47,250
explained it does a multitude of things

00:04:44,850 --> 00:04:50,880
it does virtual tenant networking at the

00:04:47,250 --> 00:04:52,470
sum ov sdb stuff it is pretty well

00:04:50,880 --> 00:04:55,710
usable with real physical switches for

00:04:52,470 --> 00:04:58,139
data center management etc etc so for me

00:04:55,710 --> 00:05:03,240
I was mainly interested in doing the

00:04:58,139 --> 00:05:04,889
yeah virtual networking bit at the time

00:05:03,240 --> 00:05:06,990
there were a couple of solutions to do

00:05:04,889 --> 00:05:08,760
virtual networking there's the virtual

00:05:06,990 --> 00:05:11,160
tenant networking bit but I was mainly

00:05:08,760 --> 00:05:13,260
interested in the obsd be part of the

00:05:11,160 --> 00:05:17,310
system the reason I'm interested in the

00:05:13,260 --> 00:05:18,600
opiate DB portion of the network is

00:05:17,310 --> 00:05:20,639
actually because we already have some

00:05:18,600 --> 00:05:22,530
support for it in club second so we

00:05:20,639 --> 00:05:24,479
already know a bit about how to deal

00:05:22,530 --> 00:05:27,300
with OTS DB we already know a bit about

00:05:24,479 --> 00:05:28,949
how to deal with the tunnels so that

00:05:27,300 --> 00:05:31,169
made it very easy for us to say okay

00:05:28,949 --> 00:05:32,280
this is something we already know let's

00:05:31,169 --> 00:05:34,139
see how we can translate that knowledge

00:05:32,280 --> 00:05:37,380
into something we can do with the open

00:05:34,139 --> 00:05:39,690
Taylor project so we selected the

00:05:37,380 --> 00:05:41,849
basically the two projects in open

00:05:39,690 --> 00:05:43,380
daylight that deal with virtual

00:05:41,849 --> 00:05:45,889
networking on the open feasts which

00:05:43,380 --> 00:05:47,760
layer that's the OpenFlow stuff which is

00:05:45,889 --> 00:05:50,370
actually part of the core of open

00:05:47,760 --> 00:05:52,530
daylight almost which deals with pushing

00:05:50,370 --> 00:05:54,180
inflows into tables and basically

00:05:52,530 --> 00:05:56,639
telling your switches your virtual

00:05:54,180 --> 00:05:59,580
switches its data to send where and to

00:05:56,639 --> 00:06:01,530
create tunnels etc and the oviously beep

00:05:59,580 --> 00:06:04,139
it bid now for those of you are not

00:06:01,530 --> 00:06:06,750
really familiar with open V switch those

00:06:04,139 --> 00:06:08,610
two projects actually work together to

00:06:06,750 --> 00:06:10,349
create a remotely controllable switch

00:06:08,610 --> 00:06:12,720
out of open please switch so there's the

00:06:10,349 --> 00:06:15,120
ov openflow bit which makes sure that

00:06:12,720 --> 00:06:17,010
you can send traffic from somewhere to

00:06:15,120 --> 00:06:19,620
somewhere else using a set of rules like

00:06:17,010 --> 00:06:21,990
if the mac address is this sent it to

00:06:19,620 --> 00:06:24,750
that port if the bracket is coming in in

00:06:21,990 --> 00:06:26,910
port a send it to poor be etc and the

00:06:24,750 --> 00:06:29,220
obsd be part is actually the database

00:06:26,910 --> 00:06:30,479
part it deals with controlling the

00:06:29,220 --> 00:06:32,729
switch are actually in the metadata of

00:06:30,479 --> 00:06:34,950
the switch because if you look at open

00:06:32,729 --> 00:06:36,719
fees which in its pretty difficult to

00:06:34,950 --> 00:06:38,490
say okay this is a 24 port switch

00:06:36,719 --> 00:06:40,560
because it isn't it's a software

00:06:38,490 --> 00:06:41,639
construct so in the physical world is

00:06:40,560 --> 00:06:43,710
to say okay the only thing we can

00:06:41,639 --> 00:06:45,600
actually manage the sport 1 24 24 and

00:06:43,710 --> 00:06:47,100
that's it but in a software switch it's

00:06:45,600 --> 00:06:49,380
basically up to us late software so we

00:06:47,100 --> 00:06:52,080
can create it so the OTS DB part was

00:06:49,380 --> 00:06:54,419
actually designed to say we can use this

00:06:52,080 --> 00:06:56,850
to create tunnels to create boards etc

00:06:54,419 --> 00:07:00,540
it's the thing that both the hypervisor

00:06:56,850 --> 00:07:01,590
talks to and the open any

00:07:00,540 --> 00:07:06,450
software-defined networking controller

00:07:01,590 --> 00:07:09,090
talks to and like I said we over already

00:07:06,450 --> 00:07:11,520
had some support in it so we have now at

00:07:09,090 --> 00:07:13,740
the moment we have GRE support in Apache

00:07:11,520 --> 00:07:15,810
CloudStack we have the excellent support

00:07:13,740 --> 00:07:17,520
in Apache CloudStack and basically they

00:07:15,810 --> 00:07:20,040
already do what it is that we want to do

00:07:17,520 --> 00:07:21,450
here because creating virtual networking

00:07:20,040 --> 00:07:23,940
is nothing more than setting up some

00:07:21,450 --> 00:07:33,690
tunnels like VX LAN or GRE tunnels and

00:07:23,940 --> 00:07:35,550
then setting up the proper ports so the

00:07:33,690 --> 00:07:38,970
end point at the end point here is that

00:07:35,550 --> 00:07:41,669
we said ok let's go and head and yeah

00:07:38,970 --> 00:07:44,640
build a virtual network using open

00:07:41,669 --> 00:07:47,220
daylight with the technologies of GRE VX

00:07:44,640 --> 00:07:51,390
land and 0 vs DB which are at the time

00:07:47,220 --> 00:07:52,620
already supported so that's one stuff

00:07:51,390 --> 00:07:54,150
actually became really interesting

00:07:52,620 --> 00:07:55,140
because we selected projects it's like

00:07:54,150 --> 00:07:57,539
okay this is what we're going to do

00:07:55,140 --> 00:08:00,960
there we selected the right projects in

00:07:57,539 --> 00:08:02,820
the community to work with and then we

00:08:00,960 --> 00:08:05,070
ran into trouble because then we started

00:08:02,820 --> 00:08:06,539
looking on the APA website like okay

00:08:05,070 --> 00:08:10,710
what's the API so I have to consume and

00:08:06,539 --> 00:08:12,539
the page was empty okay not being

00:08:10,710 --> 00:08:14,039
hindered by not having a wiki page I

00:08:12,539 --> 00:08:15,630
opened up the source code and I just

00:08:14,039 --> 00:08:17,039
said okay if I can figure out from the

00:08:15,630 --> 00:08:19,139
documentation I'm going to figure it out

00:08:17,039 --> 00:08:22,919
with the source code and that page was

00:08:19,139 --> 00:08:24,479
pretty much empty as well so that was

00:08:22,919 --> 00:08:25,950
really there was a little bit of a

00:08:24,479 --> 00:08:27,660
problem and a problem I didn't really

00:08:25,950 --> 00:08:28,800
anticipate because yeah we used to

00:08:27,660 --> 00:08:30,060
working with pretty much enterprise

00:08:28,800 --> 00:08:32,099
great software and suddenly here's a

00:08:30,060 --> 00:08:34,110
project that promise or something but

00:08:32,099 --> 00:08:36,510
they don't actually have it well I knew

00:08:34,110 --> 00:08:38,159
it was like a pre-release version but

00:08:36,510 --> 00:08:41,969
here we had to do something really

00:08:38,159 --> 00:08:42,990
special and that's something that is one

00:08:41,969 --> 00:08:45,180
of the important points to take away

00:08:42,990 --> 00:08:48,209
from this presentation we had to talk to

00:08:45,180 --> 00:08:49,440
a human being and that scary its first

00:08:48,209 --> 00:08:51,360
because you're suddenly you're there

00:08:49,440 --> 00:08:52,860
you're like in a classic developer and

00:08:51,360 --> 00:08:54,480
there's this big beast out there which

00:08:52,860 --> 00:08:57,620
is the opendaylight project and

00:08:54,480 --> 00:09:00,029
try to figure out who to talk to and

00:08:57,620 --> 00:09:02,940
what lucky for us or lucky for me in

00:09:00,029 --> 00:09:05,070
this case is that the LVS DB community

00:09:02,940 --> 00:09:06,720
was a really young new community pretty

00:09:05,070 --> 00:09:09,149
small group and they're actually really

00:09:06,720 --> 00:09:10,740
enthusiastic the moment I jumped on the

00:09:09,149 --> 00:09:12,510
IRC channel I think within five minutes

00:09:10,740 --> 00:09:14,519
I had the first few hellos like hey how

00:09:12,510 --> 00:09:16,470
are you welcome what can we do for you

00:09:14,519 --> 00:09:18,420
and instead of talking about well I'm

00:09:16,470 --> 00:09:19,529
I'm this guy from CloudStack and I want

00:09:18,420 --> 00:09:21,839
to do some integration what are you guys

00:09:19,529 --> 00:09:23,790
working on and suddenly you get a whole

00:09:21,839 --> 00:09:26,670
conversation going and within 20 minutes

00:09:23,790 --> 00:09:29,220
I was in a web in a web meeting with a

00:09:26,670 --> 00:09:31,760
lot of lot of guys I got invited fighter

00:09:29,220 --> 00:09:33,839
to their weekly previous meetings and

00:09:31,760 --> 00:09:35,490
before I knew it I was actually part of

00:09:33,839 --> 00:09:37,290
the opendaylight obsd be development

00:09:35,490 --> 00:09:38,940
community and was actively trying to

00:09:37,290 --> 00:09:40,920
help them to get okay guys I need this

00:09:38,940 --> 00:09:43,920
it's yeah we don't have it yet ok I'll

00:09:40,920 --> 00:09:46,740
build it so that was really for me a

00:09:43,920 --> 00:09:48,990
friend experience about reaching out to

00:09:46,740 --> 00:09:50,910
other people and saying hey this is how

00:09:48,990 --> 00:09:53,820
it works and open source I mean we are a

00:09:50,910 --> 00:09:55,709
pretty cool community as Apache

00:09:53,820 --> 00:09:56,820
CloudStack but there's actually a lot of

00:09:55,709 --> 00:09:58,560
communities out there and they're pretty

00:09:56,820 --> 00:10:00,360
cool as well and it's nice to go talk to

00:09:58,560 --> 00:10:05,940
those people meet those people and see

00:10:00,360 --> 00:10:12,000
what we can learn from them but I didn't

00:10:05,940 --> 00:10:16,019
really solve all the problems the

00:10:12,000 --> 00:10:18,089
interesting bit here is that when we set

00:10:16,019 --> 00:10:20,459
up the obviously be project or actually

00:10:18,089 --> 00:10:22,230
when it was when I got involved they

00:10:20,459 --> 00:10:24,899
were already having some clear clear

00:10:22,230 --> 00:10:27,149
ideas about where they wanted to go some

00:10:24,899 --> 00:10:30,000
of them were inspired by that other

00:10:27,149 --> 00:10:32,670
stack some of them were inspired by the

00:10:30,000 --> 00:10:34,260
way they thought about OVS DB and here I

00:10:32,670 --> 00:10:35,550
came in with a different type of

00:10:34,260 --> 00:10:37,769
orchestration platform with some

00:10:35,550 --> 00:10:39,540
different ideas about what I thought

00:10:37,769 --> 00:10:41,730
would be the right way to go and the

00:10:39,540 --> 00:10:43,800
most interesting discussion we had was

00:10:41,730 --> 00:10:47,699
what is expected of a software-defined

00:10:43,800 --> 00:10:48,690
networking controller I expected having

00:10:47,699 --> 00:10:50,760
worked with some of the commercial

00:10:48,690 --> 00:10:52,920
implementations a very high level

00:10:50,760 --> 00:10:56,399
abstraction API that would allow me just

00:10:52,920 --> 00:10:58,980
to say create network create port and

00:10:56,399 --> 00:11:01,079
have everything else be done by the

00:10:58,980 --> 00:11:03,180
controller and their idea at the time

00:11:01,079 --> 00:11:04,980
was mainly like okay yeah we just can

00:11:03,180 --> 00:11:07,649
provide some kind of structured

00:11:04,980 --> 00:11:10,350
rest-based rapper 20 vs DB and we cannot

00:11:07,649 --> 00:11:11,790
you figure out everything so there were

00:11:10,350 --> 00:11:14,670
some interesting debates we had about

00:11:11,790 --> 00:11:17,339
okay how how can we resolve this what

00:11:14,670 --> 00:11:18,869
what wisdom in the end in through open

00:11:17,339 --> 00:11:20,519
source fashion we probably ended up with

00:11:18,869 --> 00:11:22,860
both so we have a pretty much a direct

00:11:20,519 --> 00:11:24,779
layer in 20 PSDB that you can use if

00:11:22,860 --> 00:11:26,189
you're interested in directly

00:11:24,779 --> 00:11:28,499
manipulating the switches on your

00:11:26,189 --> 00:11:31,860
hypervisor and there's the abstraction

00:11:28,499 --> 00:11:33,689
layer and I'm probably going to see a

00:11:31,860 --> 00:11:34,860
smile and a couple of faces here but the

00:11:33,689 --> 00:11:39,199
abstraction layer is now called the

00:11:34,860 --> 00:11:39,199
neutral nor about API for some reason

00:11:43,790 --> 00:11:50,459
that also put in a point about where are

00:11:47,339 --> 00:11:52,740
the brains there's always some states

00:11:50,459 --> 00:11:55,350
that you need to keep in your internet

00:11:52,740 --> 00:11:57,149
working decade for example which

00:11:55,350 --> 00:11:59,160
hypervisors are connected to this

00:11:57,149 --> 00:12:03,149
particular network which ports do I have

00:11:59,160 --> 00:12:06,089
configured which virtual machines are

00:12:03,149 --> 00:12:07,679
already there on the network with

00:12:06,089 --> 00:12:10,079
CloudStack we have pretty much the model

00:12:07,679 --> 00:12:12,600
like we own the world so we always say

00:12:10,079 --> 00:12:14,449
if it is state based information we have

00:12:12,600 --> 00:12:17,309
it and we put it into my sequel database

00:12:14,449 --> 00:12:19,079
you don't worry about it if you want

00:12:17,309 --> 00:12:21,420
some new state information we were push

00:12:19,079 --> 00:12:23,850
it to you but we do expect you to

00:12:21,420 --> 00:12:25,350
actually can retain the things you

00:12:23,850 --> 00:12:27,420
promised us to do so if we tell you to

00:12:25,350 --> 00:12:29,339
create a network we expect our

00:12:27,420 --> 00:12:31,740
underlying infrastructure like our

00:12:29,339 --> 00:12:34,019
hypothesis or a source to actually keep

00:12:31,740 --> 00:12:35,610
that information and that was something

00:12:34,019 --> 00:12:38,009
that open daily I didn't have a time at

00:12:35,610 --> 00:12:40,920
that time I mean they were keeping state

00:12:38,009 --> 00:12:43,170
like in memory for hypervisors for

00:12:40,920 --> 00:12:44,699
network for tunnels etc so the moment

00:12:43,170 --> 00:12:46,019
and it worked really well but a moment

00:12:44,699 --> 00:12:49,470
you actually had to restart one of your

00:12:46,019 --> 00:12:51,449
open your open daylight nodes the entire

00:12:49,470 --> 00:12:53,790
state would be lost and with the state

00:12:51,449 --> 00:12:57,240
obviously the entire setup of your

00:12:53,790 --> 00:13:00,269
virtual network at that time again a lot

00:12:57,240 --> 00:13:01,589
of discussion so we figured out okay we

00:13:00,269 --> 00:13:03,360
can do this two ways we can build some

00:13:01,589 --> 00:13:05,339
kind of scheduling system into

00:13:03,360 --> 00:13:08,069
cloudstack that will periodically check

00:13:05,339 --> 00:13:10,049
if your controller state is still saying

00:13:08,069 --> 00:13:14,639
knows about the stuff we care about and

00:13:10,049 --> 00:13:17,040
then reprovision it and we could say

00:13:14,639 --> 00:13:19,499
okay opendaylight actually saves the

00:13:17,040 --> 00:13:20,730
state for us and when you restart make

00:13:19,499 --> 00:13:21,510
sure that everything is restored to

00:13:20,730 --> 00:13:24,190
working order

00:13:21,510 --> 00:13:26,140
that debate was really interesting

00:13:24,190 --> 00:13:28,480
because we had to do that debate over

00:13:26,140 --> 00:13:30,430
three projects we have to do it with

00:13:28,480 --> 00:13:32,350
CloudStack obviously we have to do it

00:13:30,430 --> 00:13:33,610
with open daylight but actually we have

00:13:32,350 --> 00:13:36,399
to do it with the neutron people as well

00:13:33,610 --> 00:13:37,839
because they were on the same IRC

00:13:36,399 --> 00:13:40,089
channel they were dealing with the same

00:13:37,839 --> 00:13:42,399
issue so actually we had to sit down

00:13:40,089 --> 00:13:44,140
with the other guys with the

00:13:42,399 --> 00:13:45,790
opendaylight guys and just work out okay

00:13:44,140 --> 00:13:47,380
how can we find something that is

00:13:45,790 --> 00:13:49,750
workable within the OpenStack framework

00:13:47,380 --> 00:13:51,580
in their Neutron plugin that is workable

00:13:49,750 --> 00:13:53,020
within the cloud stack and software and

00:13:51,580 --> 00:13:56,050
what worked well within the opendaylight

00:13:53,020 --> 00:13:58,899
software in the end we chickened out and

00:13:56,050 --> 00:14:00,040
just put it in open daylight but it was

00:13:58,899 --> 00:14:05,020
an interesting it was an interesting

00:14:00,040 --> 00:14:07,540
debate for a time and then obviously you

00:14:05,020 --> 00:14:10,300
yeah we were planning to do this in a

00:14:07,540 --> 00:14:11,649
cloud stack any classic we have a pretty

00:14:10,300 --> 00:14:14,350
much a fixed release schedule so we

00:14:11,649 --> 00:14:17,110
propose a feature you add a feature to

00:14:14,350 --> 00:14:18,690
master and once it's a mastery pretty

00:14:17,110 --> 00:14:21,880
much get shipped with the next release

00:14:18,690 --> 00:14:23,589
so we were already working on the 43

00:14:21,880 --> 00:14:25,750
release so i wasn't in time for the 43

00:14:23,589 --> 00:14:28,630
release but basically i got my entire

00:14:25,750 --> 00:14:30,670
piece of code working and submitted it

00:14:28,630 --> 00:14:33,070
into master because it was perfectly

00:14:30,670 --> 00:14:35,370
inside the feature period it was a new

00:14:33,070 --> 00:14:39,190
feature it was pretty much well tested

00:14:35,370 --> 00:14:40,620
and ready the only downside is those

00:14:39,190 --> 00:14:42,910
guys were actually not ready

00:14:40,620 --> 00:14:44,170
opendaylight wasn't in no position at

00:14:42,910 --> 00:14:48,070
that time to actually release any

00:14:44,170 --> 00:14:48,970
software so premier was like what am I

00:14:48,070 --> 00:14:50,800
going to do with this piece of software

00:14:48,970 --> 00:14:53,830
here I have a feature that I want to get

00:14:50,800 --> 00:14:55,930
out there to my development community to

00:14:53,830 --> 00:14:57,730
act as a technology p of view and maybe

00:14:55,930 --> 00:14:59,170
get some feedback from other guys in the

00:14:57,730 --> 00:15:00,910
collapse the community to say how can we

00:14:59,170 --> 00:15:03,130
leverage this and how can we make it

00:15:00,910 --> 00:15:05,440
work even better by submitting it to

00:15:03,130 --> 00:15:07,570
master but on the other hand there's a

00:15:05,440 --> 00:15:10,660
big risk that I some somehow submitted

00:15:07,570 --> 00:15:12,610
something to master that might not even

00:15:10,660 --> 00:15:13,630
be a release I mean we were pretty sure

00:15:12,610 --> 00:15:15,430
that the opendaylight we're actually

00:15:13,630 --> 00:15:18,399
going in the direction of a release but

00:15:15,430 --> 00:15:20,529
yeah you never know there might not be a

00:15:18,399 --> 00:15:21,970
release so we took the save option so we

00:15:20,529 --> 00:15:24,700
added to master and we actually added

00:15:21,970 --> 00:15:25,990
the tag in the network service providers

00:15:24,700 --> 00:15:28,810
of clouds director Mark II there's an

00:15:25,990 --> 00:15:31,060
experimental feature and as of today I

00:15:28,810 --> 00:15:32,770
actually don't know the state of the

00:15:31,060 --> 00:15:34,769
plugin because they keep changing so

00:15:32,770 --> 00:15:36,209
much that actually has a revisit it and

00:15:34,769 --> 00:15:42,629
it's still working with the current way

00:15:36,209 --> 00:15:44,939
of obvious DB is working but we actually

00:15:42,629 --> 00:15:47,959
have a plug-in and that's a good thing

00:15:44,939 --> 00:15:50,699
and it's good thing for two reasons

00:15:47,959 --> 00:15:52,529
first of all it means that there's a

00:15:50,699 --> 00:15:53,579
sort of permanent line of communication

00:15:52,529 --> 00:15:56,970
between us and the opendaylight

00:15:53,579 --> 00:15:58,709
community I mean we have to plug in we

00:15:56,970 --> 00:15:59,879
have committed to supporting it because

00:15:58,709 --> 00:16:01,889
it's part of a part of our mainline

00:15:59,879 --> 00:16:04,230
branch so that means we have to keep

00:16:01,889 --> 00:16:06,170
talking to the and to the people in open

00:16:04,230 --> 00:16:09,989
daylight and the reverse is also true

00:16:06,170 --> 00:16:12,540
even though they're pretty much working

00:16:09,989 --> 00:16:15,959
on supporting OpenStack and supporting

00:16:12,540 --> 00:16:18,449
what their commercial backers find

00:16:15,959 --> 00:16:19,679
important I regularly get pings from

00:16:18,449 --> 00:16:21,449
those guys working in that community

00:16:19,679 --> 00:16:23,790
like hey how you doing over the top

00:16:21,449 --> 00:16:25,290
stack how do you think about what we're

00:16:23,790 --> 00:16:27,779
doing now how is it going to affect your

00:16:25,290 --> 00:16:29,759
plug-in so by simply having this plugin

00:16:27,779 --> 00:16:32,369
I created a link between the two

00:16:29,759 --> 00:16:34,079
communities that if done correctly will

00:16:32,369 --> 00:16:36,089
make sure that we've for now and for

00:16:34,079 --> 00:16:37,679
always have some yeah have some friends

00:16:36,089 --> 00:16:38,939
inside the opendaylight community and

00:16:37,679 --> 00:16:40,589
there's always a way of communicating

00:16:38,939 --> 00:16:42,540
and saying hey we already have this

00:16:40,589 --> 00:16:45,059
plug-in we were the first one with a

00:16:42,540 --> 00:16:47,009
sort of stable release in the community

00:16:45,059 --> 00:16:53,309
so let's make sure it's always properly

00:16:47,009 --> 00:16:54,509
supported so let's get out to the

00:16:53,309 --> 00:16:56,779
technical details how does it actually

00:16:54,509 --> 00:16:56,779
work

00:17:01,220 --> 00:17:04,829
it works like pretty much all the other

00:17:03,600 --> 00:17:08,190
software-defined networking vendors that

00:17:04,829 --> 00:17:09,630
we have in in Apache CloudStack you

00:17:08,190 --> 00:17:11,100
start by adding a network service

00:17:09,630 --> 00:17:13,579
provider so it's implemented as a

00:17:11,100 --> 00:17:15,540
network servers providing cloudstack and

00:17:13,579 --> 00:17:16,800
you can see the question marks there

00:17:15,540 --> 00:17:18,870
that's my ability to actually do

00:17:16,800 --> 00:17:21,540
javascript in clouds collapse like so is

00:17:18,870 --> 00:17:25,350
anybody is more in the JavaScript a bit

00:17:21,540 --> 00:17:27,030
I could use some help here but it is a

00:17:25,350 --> 00:17:28,650
network service provider so we pretty

00:17:27,030 --> 00:17:30,240
much follow the model that we have for

00:17:28,650 --> 00:17:31,710
all our networking kit so you're able to

00:17:30,240 --> 00:17:34,500
edit this provider you're able to

00:17:31,710 --> 00:17:38,880
configure as it does never guru element

00:17:34,500 --> 00:17:40,350
etcetera by adding it as an element you

00:17:38,880 --> 00:17:42,600
can add it to any of your network

00:17:40,350 --> 00:17:44,280
service service offerings so we created

00:17:42,600 --> 00:17:46,050
a new type of servers or actually a new

00:17:44,280 --> 00:17:47,430
provider so now we have virtual

00:17:46,050 --> 00:17:49,560
networking support you can select the

00:17:47,430 --> 00:17:51,510
opendaylight as a provider for virtual

00:17:49,560 --> 00:17:53,070
networking and by setting this in your

00:17:51,510 --> 00:17:54,180
network offering for those of you are

00:17:53,070 --> 00:17:55,830
not too familiar so for the fun

00:17:54,180 --> 00:17:58,410
networking it basically triggers the

00:17:55,830 --> 00:17:59,790
back end code that says hey there's

00:17:58,410 --> 00:18:01,470
something special i need to do to create

00:17:59,790 --> 00:18:03,480
this network on the lower layer so i

00:18:01,470 --> 00:18:05,250
need to trigger a particular guru in the

00:18:03,480 --> 00:18:09,750
code and make sure that it actually

00:18:05,250 --> 00:18:12,300
works when you create a new network

00:18:09,750 --> 00:18:14,220
based on this offering the interesting

00:18:12,300 --> 00:18:15,870
make magic starts happening by

00:18:14,220 --> 00:18:17,190
triggering the virtual networking and by

00:18:15,870 --> 00:18:19,050
creating a network using a particular

00:18:17,190 --> 00:18:21,930
network offering based on virtual

00:18:19,050 --> 00:18:24,450
networking it will send out API calls to

00:18:21,930 --> 00:18:26,310
the opendaylight system the opendaylight

00:18:24,450 --> 00:18:28,740
would system will then do a few things

00:18:26,310 --> 00:18:30,810
so first of all we have to create a

00:18:28,740 --> 00:18:33,030
network that's a simple setting of the

00:18:30,810 --> 00:18:36,180
Union unique identifier and sending a

00:18:33,030 --> 00:18:37,740
few parameters but this is the first

00:18:36,180 --> 00:18:39,960
sort of our networking where he actually

00:18:37,740 --> 00:18:41,930
had to provision the hypervisors in the

00:18:39,960 --> 00:18:44,790
virtual network from within cloudstack

00:18:41,930 --> 00:18:46,560
so we didn't only have to see ok this is

00:18:44,790 --> 00:18:47,820
the network we're working on or in any

00:18:46,560 --> 00:18:50,070
event reports but actually we had to

00:18:47,820 --> 00:18:53,280
check how can we get the hosts that are

00:18:50,070 --> 00:18:54,930
part of this network into this system so

00:18:53,280 --> 00:18:57,780
what we're doing at the moment the

00:18:54,930 --> 00:18:59,700
moment we create the network we do

00:18:57,780 --> 00:19:01,710
practically nothing in a moment we

00:18:59,700 --> 00:19:03,180
actually start provisioning host we say

00:19:01,710 --> 00:19:05,130
ok we know which virtual machine we're

00:19:03,180 --> 00:19:08,280
gonna provision as part of the virtual

00:19:05,130 --> 00:19:09,840
machine we get some extra data among it

00:19:08,280 --> 00:19:11,580
we get the host where the virtual

00:19:09,840 --> 00:19:13,470
machine is actually being proficient so

00:19:11,580 --> 00:19:13,920
we just at that moment send a call to

00:19:13,470 --> 00:19:16,800
open

00:19:13,920 --> 00:19:18,330
by saying hey I need I need this host to

00:19:16,800 --> 00:19:19,650
be part of your set up basically

00:19:18,330 --> 00:19:22,380
configuring the host in open daylight

00:19:19,650 --> 00:19:27,630
and then after I've configured it I can

00:19:22,380 --> 00:19:28,740
make it part of the system the second

00:19:27,630 --> 00:19:32,220
host is meant the interesting stuff

00:19:28,740 --> 00:19:33,480
starts happening and that was part of

00:19:32,220 --> 00:19:36,780
the debate would help me open daylight

00:19:33,480 --> 00:19:39,810
people what should happen here so at

00:19:36,780 --> 00:19:41,760
first they said well let's just push the

00:19:39,810 --> 00:19:43,800
entire hosts all the hosts that you have

00:19:41,760 --> 00:19:46,440
out of the system pre-configured them

00:19:43,800 --> 00:19:48,120
into open daylight and then when you

00:19:46,440 --> 00:19:49,350
actually start using cloudstack you can

00:19:48,120 --> 00:19:51,660
provision their networks in the host and

00:19:49,350 --> 00:19:53,700
like it just that we didn't do it so

00:19:51,660 --> 00:19:57,030
here we had to make a number of changes

00:19:53,700 --> 00:20:00,930
to actually more dynamically deal with

00:19:57,030 --> 00:20:03,650
hosts be existing a non-existing so

00:20:00,930 --> 00:20:05,250
whenever we add the second host and

00:20:03,650 --> 00:20:07,110
hopefully it will land on another

00:20:05,250 --> 00:20:11,640
hypervisor because I will make the

00:20:07,110 --> 00:20:14,070
example much more interesting the system

00:20:11,640 --> 00:20:15,770
will add will basically send the same

00:20:14,070 --> 00:20:18,270
call to add the host to the network

00:20:15,770 --> 00:20:20,250
activating the house plugins with in

00:20:18,270 --> 00:20:21,780
open daylight open daylight will connect

00:20:20,250 --> 00:20:24,720
to the open fee switch on that

00:20:21,780 --> 00:20:26,220
particular host configure it and then

00:20:24,720 --> 00:20:27,780
lucky for us part of the magic of open

00:20:26,220 --> 00:20:29,300
daylight is the moment I figure out that

00:20:27,780 --> 00:20:32,130
we have a network configuration that

00:20:29,300 --> 00:20:34,080
spans multiple hosts it will start

00:20:32,130 --> 00:20:35,250
building bridges automatically so we

00:20:34,080 --> 00:20:36,930
didn't have to do anything to actually

00:20:35,250 --> 00:20:39,630
create the bridges that's all bacon

00:20:36,930 --> 00:20:45,630
being been taken care of by open

00:20:39,630 --> 00:20:50,160
daylight and we were pretty lucky it

00:20:45,630 --> 00:20:51,540
actually worked but even though we can

00:20:50,160 --> 00:20:54,420
set them pink tutu house it isn't

00:20:51,540 --> 00:20:55,800
telling you that much so again I'm going

00:20:54,420 --> 00:20:58,170
to have to reiterate this is the

00:20:55,800 --> 00:21:00,830
technology preview and that means that

00:20:58,170 --> 00:21:03,290
there's a lot of work to be done we're

00:21:00,830 --> 00:21:06,810
just in a phase where we can like add

00:21:03,290 --> 00:21:08,610
machines and basically set up a virtual

00:21:06,810 --> 00:21:10,740
network between several host and several

00:21:08,610 --> 00:21:12,150
virtual machines running but there's

00:21:10,740 --> 00:21:13,980
obviously a lot of things that were

00:21:12,150 --> 00:21:15,960
lacking for example what happens every

00:21:13,980 --> 00:21:18,840
remove a cluster from the data center in

00:21:15,960 --> 00:21:22,290
cloudstack nothing happens on an open

00:21:18,840 --> 00:21:23,830
day like yet what happens if we ever

00:21:22,290 --> 00:21:26,409
host goes down

00:21:23,830 --> 00:21:27,730
we actually don't know yet it's pretty

00:21:26,409 --> 00:21:29,289
difficult to test we have some test

00:21:27,730 --> 00:21:31,980
cases where it comes back some test case

00:21:29,289 --> 00:21:35,950
or exome keeps on losing connectivity

00:21:31,980 --> 00:21:38,769
but again the the point to take a home

00:21:35,950 --> 00:21:40,740
here is by doing this we gain the

00:21:38,769 --> 00:21:43,179
insight in how open daily lives works

00:21:40,740 --> 00:21:45,510
we've made links in the community about

00:21:43,179 --> 00:21:48,789
how to deal with various projects and

00:21:45,510 --> 00:21:50,559
actually we have something to work on so

00:21:48,789 --> 00:21:51,640
this is also an open invitation so I

00:21:50,559 --> 00:21:54,039
know that there's a lot of people

00:21:51,640 --> 00:21:56,559
interested in working with open daylight

00:21:54,039 --> 00:21:58,090
working with CloudStack and by having

00:21:56,559 --> 00:22:00,220
this plug-in in the code as we have now

00:21:58,090 --> 00:22:03,070
there's actually an opportunity to go in

00:22:00,220 --> 00:22:04,120
and do stuff make the plug-in work

00:22:03,070 --> 00:22:06,880
better make it work with other

00:22:04,120 --> 00:22:08,440
hypervisors but also follow follow up

00:22:06,880 --> 00:22:11,169
and what's going on in the opendaylight

00:22:08,440 --> 00:22:12,850
community I mean there might not be the

00:22:11,169 --> 00:22:14,289
most stable the most reliable and the

00:22:12,850 --> 00:22:15,730
best software-defined networking vendor

00:22:14,289 --> 00:22:17,950
out there so maybe not ready for

00:22:15,730 --> 00:22:19,809
production use but it is an open source

00:22:17,950 --> 00:22:21,880
project and they have some quite

00:22:19,809 --> 00:22:24,279
interesting ideas so for me personally

00:22:21,880 --> 00:22:26,559
it's really interesting to see where

00:22:24,279 --> 00:22:29,200
this is going in the near future for

00:22:26,559 --> 00:22:30,309
example one of the reasons one of the

00:22:29,200 --> 00:22:31,480
things they're now working on the one of

00:22:30,309 --> 00:22:33,070
the reasons there's a lot of activity

00:22:31,480 --> 00:22:35,860
going on is that they're looking at the

00:22:33,070 --> 00:22:37,480
network function virtualization which is

00:22:35,860 --> 00:22:39,610
for me the next step in so for Defined

00:22:37,480 --> 00:22:41,110
Networking I mean even though we have

00:22:39,610 --> 00:22:43,690
some troubles with a plug in at the

00:22:41,110 --> 00:22:46,269
moment the whole network virtualization

00:22:43,690 --> 00:22:48,279
bit is pretty much fixed I mean it's

00:22:46,269 --> 00:22:49,929
it's no longer spectacular there's no

00:22:48,279 --> 00:22:52,330
longer people tweeting about hey I did

00:22:49,929 --> 00:22:53,740
network virtualization I mean any kid

00:22:52,330 --> 00:22:55,480
with an open feed switch and little

00:22:53,740 --> 00:22:56,679
scripting can do it the interesting

00:22:55,480 --> 00:22:58,480
thing now in the sort of our networking

00:22:56,679 --> 00:23:01,450
world is to be the network function

00:22:58,480 --> 00:23:02,590
virtualization and if team can mean

00:23:01,450 --> 00:23:05,620
different things for different people

00:23:02,590 --> 00:23:07,539
but for me it means like let's do let's

00:23:05,620 --> 00:23:08,950
talk about and distributed routing let's

00:23:07,539 --> 00:23:10,539
talk about in distributed firewalling

00:23:08,950 --> 00:23:12,909
let's talk about distributed load

00:23:10,539 --> 00:23:14,169
balancing etc and I know that there's a

00:23:12,909 --> 00:23:16,029
lot of guys working for a lot of the

00:23:14,169 --> 00:23:18,100
networking vendors also involved with

00:23:16,029 --> 00:23:19,990
the open data project so it's not only

00:23:18,100 --> 00:23:21,850
that it's interesting to follow what

00:23:19,990 --> 00:23:22,929
they are doing in their project but it's

00:23:21,850 --> 00:23:24,130
actually very interesting to keep

00:23:22,929 --> 00:23:26,139
talking to those people and see where

00:23:24,130 --> 00:23:27,519
they get their ideas and what we can do

00:23:26,139 --> 00:23:30,399
to support those models in Apache

00:23:27,519 --> 00:23:32,230
CloudStack and by having a dialogue we

00:23:30,399 --> 00:23:34,630
can actually think about our models and

00:23:32,230 --> 00:23:36,460
provided knowledge we have about our

00:23:34,630 --> 00:23:37,270
networking into the open Taylor

00:23:36,460 --> 00:23:39,640
community

00:23:37,270 --> 00:23:41,800
because we do have a lot of production

00:23:39,640 --> 00:23:44,200
deployments we do have a lot of people

00:23:41,800 --> 00:23:46,030
running Apache CloudStack in for daily

00:23:44,200 --> 00:23:47,740
operations and they have experienced

00:23:46,030 --> 00:23:49,240
about what works in production they have

00:23:47,740 --> 00:23:51,490
experienced about what it is we can do

00:23:49,240 --> 00:23:53,110
if we can put that experience and

00:23:51,490 --> 00:23:55,090
deliver it to people like the people

00:23:53,110 --> 00:23:57,790
work on the opendaylight project we gain

00:23:55,090 --> 00:23:59,950
there we get in return we get their

00:23:57,790 --> 00:24:01,450
experiences with networking and we can

00:23:59,950 --> 00:24:04,120
create a better software in both places

00:24:01,450 --> 00:24:06,370
and I mean that's partially of what open

00:24:04,120 --> 00:24:07,510
source is all about so I'm hoping that

00:24:06,370 --> 00:24:10,150
there's more people who are willing to

00:24:07,510 --> 00:24:11,530
pick up on open daylight I'm sure for

00:24:10,150 --> 00:24:14,050
sure going to be working on it in the

00:24:11,530 --> 00:24:18,330
near future and yeah just last remark

00:24:14,050 --> 00:24:24,910
don't use it in production yet thank you

00:24:18,330 --> 00:24:29,020
there's any questions everybody just

00:24:24,910 --> 00:24:31,410
wants to go home right okay thanks a lot

00:24:29,020 --> 00:24:31,410

YouTube URL: https://www.youtube.com/watch?v=MFo8gm15UMs


