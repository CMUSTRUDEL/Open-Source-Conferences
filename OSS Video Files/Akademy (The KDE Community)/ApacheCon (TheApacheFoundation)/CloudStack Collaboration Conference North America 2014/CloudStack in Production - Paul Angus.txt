Title: CloudStack in Production - Paul Angus
Publication date: 2014-04-24
Playlist: CloudStack Collaboration Conference North America 2014
Description: 
	CloudStack Collaboration Conference North America 2014
Captions: 
	00:00:00,140 --> 00:00:06,660
my name is Paul Angus from shape blue

00:00:03,210 --> 00:00:09,960
Pepsi blue and today I'm going to have

00:00:06,660 --> 00:00:13,679
talked to you about CloudStack in

00:00:09,960 --> 00:00:16,020
production and specifically some of our

00:00:13,679 --> 00:00:18,840
customers what they're doing with clouds

00:00:16,020 --> 00:00:21,300
dark and a bit about CloudStack

00:00:18,840 --> 00:00:23,279
infrastructure so some of the hardware

00:00:21,300 --> 00:00:26,369
kind of trends we're starting to see

00:00:23,279 --> 00:00:27,960
just to give an idea of what we see

00:00:26,369 --> 00:00:33,050
happening out there with with our

00:00:27,960 --> 00:00:37,680
clients so self quick bit on Who I am

00:00:33,050 --> 00:00:39,180
hopefully cloud architect shaped blue if

00:00:37,680 --> 00:00:41,850
anyone see me taught you can get bored

00:00:39,180 --> 00:00:44,850
with these slides soon I specialize in

00:00:41,850 --> 00:00:46,469
the actual deployments of CloudStack and

00:00:44,850 --> 00:00:48,660
the design around that and the

00:00:46,469 --> 00:00:51,300
infrastructure supporting infrastructure

00:00:48,660 --> 00:00:52,940
around CloudStack and then work with

00:00:51,300 --> 00:00:56,010
clients afterwards for them to

00:00:52,940 --> 00:00:57,570
understand how today and get the best if

00:00:56,010 --> 00:01:02,250
you like out CloudStack using the tools

00:00:57,570 --> 00:01:04,229
that they're used to using we can see so

00:01:02,250 --> 00:01:05,820
so if you see me on the mailing lists

00:01:04,229 --> 00:01:07,740
and all the rest of it what you kind of

00:01:05,820 --> 00:01:10,799
will see is the direction I'm coming

00:01:07,740 --> 00:01:12,330
from is great but how is a client going

00:01:10,799 --> 00:01:14,850
to use that how is the consumer of the

00:01:12,330 --> 00:01:19,619
CloudStack going to get whatever they

00:01:14,850 --> 00:01:23,340
need out of out of this feature and so

00:01:19,619 --> 00:01:25,890
here's a slide on the kind of kind of

00:01:23,340 --> 00:01:27,689
clients that I've worked with so to give

00:01:25,890 --> 00:01:30,180
you a feel of where I'm coming from in

00:01:27,689 --> 00:01:33,329
terms of the scale size of those clients

00:01:30,180 --> 00:01:35,280
we talked about and in finally I've kind

00:01:33,329 --> 00:01:38,850
of shaped blue Scott slide about who we

00:01:35,280 --> 00:01:40,500
are from a kind of personal side I guess

00:01:38,850 --> 00:01:42,960
where you can take from this about me it

00:01:40,500 --> 00:01:45,259
is that this is what I do kind of for a

00:01:42,960 --> 00:01:49,380
living so this is my bread and butter

00:01:45,259 --> 00:01:52,770
and hopefully a good enough at it that I

00:01:49,380 --> 00:01:56,119
can earn a living ones are the real

00:01:52,770 --> 00:01:58,770
stuff so the first thing I look at is

00:01:56,119 --> 00:02:02,570
kind of use cases we kind of talked

00:01:58,770 --> 00:02:06,630
about the use cases but what are they so

00:02:02,570 --> 00:02:09,330
test and Dev we kind of throw that out a

00:02:06,630 --> 00:02:11,700
lot that's I kind of go to use case

00:02:09,330 --> 00:02:12,540
certainly for private clouds but we are

00:02:11,700 --> 00:02:14,340
seeing a lot of move

00:02:12,540 --> 00:02:16,260
in terms of what those private clouds

00:02:14,340 --> 00:02:20,730
are doing now it's not just testin dev

00:02:16,260 --> 00:02:25,459
anymore the highly scalable public

00:02:20,730 --> 00:02:28,200
facing kind of cloud so where the

00:02:25,459 --> 00:02:30,359
private enterprises enterprises a using

00:02:28,200 --> 00:02:33,239
CloudStack to then form the backend

00:02:30,359 --> 00:02:35,489
systems so they're not that the public

00:02:33,239 --> 00:02:37,439
would be accessing so it might be some

00:02:35,489 --> 00:02:39,030
billing system that you use with your

00:02:37,439 --> 00:02:42,450
mobile phone or something that's

00:02:39,030 --> 00:02:44,730
actually powered by CloudStack something

00:02:42,450 --> 00:02:46,769
like Spotify it's bridging go it's not

00:02:44,730 --> 00:02:48,569
just internal you guys all using it

00:02:46,769 --> 00:02:51,480
you'll see getting streaming stuff from

00:02:48,569 --> 00:02:54,419
it but it's still if you like a private

00:02:51,480 --> 00:02:58,310
enterprise cloud rather than that what

00:02:54,419 --> 00:03:00,989
we call a public cloud highspeed server

00:02:58,310 --> 00:03:02,549
resource deployment I mean you we've

00:03:00,989 --> 00:03:04,709
seen CloudStack in once you press the

00:03:02,549 --> 00:03:08,129
button or use the API you know just

00:03:04,709 --> 00:03:12,780
spins up instances as quickly as you as

00:03:08,129 --> 00:03:14,099
your hardware enables you to the reduced

00:03:12,780 --> 00:03:16,620
reliance on corporate infrastructure

00:03:14,099 --> 00:03:19,709
teams I won't name names but I can I

00:03:16,620 --> 00:03:23,400
could name at least half a dozen of top

00:03:19,709 --> 00:03:25,799
of my head corporation but people we've

00:03:23,400 --> 00:03:27,989
gone to interested in cloudstack and one

00:03:25,799 --> 00:03:30,239
of their main aims as though they'll

00:03:27,989 --> 00:03:32,790
never write it down is they'd want to

00:03:30,239 --> 00:03:35,310
cut out the networking team just pretty

00:03:32,790 --> 00:03:37,109
much almost on one of their unstated

00:03:35,310 --> 00:03:39,690
goals is to cut out networking team

00:03:37,109 --> 00:03:45,139
because they want to produce think so

00:03:39,690 --> 00:03:47,370
and even the sometimes the vm teams i

00:03:45,139 --> 00:03:50,400
won't say which one because i talk about

00:03:47,370 --> 00:03:55,229
later they said that traditionally it

00:03:50,400 --> 00:03:56,430
used to take 15 days to get a server if

00:03:55,229 --> 00:03:58,620
they wanted the server then

00:03:56,430 --> 00:04:02,099
virtualization came in and somehow it

00:03:58,620 --> 00:04:04,049
went up to 17 days because because it

00:04:02,099 --> 00:04:05,970
was all virtualization in a bit where

00:04:04,049 --> 00:04:07,349
there was a load more forms to sign and

00:04:05,970 --> 00:04:09,989
load more stuff there to go through

00:04:07,349 --> 00:04:11,250
because virtualization menu could do

00:04:09,989 --> 00:04:12,479
anything and connect anything to

00:04:11,250 --> 00:04:15,870
anything whereas at least when there was

00:04:12,479 --> 00:04:17,880
a bit sat in may you what the kind of

00:04:15,870 --> 00:04:19,049
networking teams and the hardware teams

00:04:17,880 --> 00:04:20,609
knew what they plugged in so you

00:04:19,049 --> 00:04:21,930
couldn't do anything else when

00:04:20,609 --> 00:04:26,250
virtualization came along then and

00:04:21,930 --> 00:04:26,510
suddenly those teams saw as being the

00:04:26,250 --> 00:04:32,090
world

00:04:26,510 --> 00:04:33,740
West so obviously then when cloud if you

00:04:32,090 --> 00:04:36,050
then British clouds that you can then

00:04:33,740 --> 00:04:41,750
create all these in matter of seconds

00:04:36,050 --> 00:04:43,250
rather than quite literally days at the

00:04:41,750 --> 00:04:45,170
Overland imagine there's even just

00:04:43,250 --> 00:04:48,020
firewall changes changing loop firewall

00:04:45,170 --> 00:04:49,640
rules can quite easily have a week long

00:04:48,020 --> 00:04:52,310
lead time because it's got to be done in

00:04:49,640 --> 00:04:54,890
a certain time slot and it's got to gone

00:04:52,310 --> 00:04:56,990
through all the QA processes before it's

00:04:54,890 --> 00:05:03,140
done regardless of how you know

00:04:56,990 --> 00:05:06,650
innocuous that might really be so in

00:05:03,140 --> 00:05:07,610
terms of real real world deployments go

00:05:06,650 --> 00:05:11,300
through some of the companies we work

00:05:07,610 --> 00:05:12,410
with boost gap busca paid it seems to be

00:05:11,300 --> 00:05:19,100
whoever I ask it's pronounced

00:05:12,410 --> 00:05:22,730
differently very big brazilian telecoms

00:05:19,100 --> 00:05:25,220
company and you see they they get 60

00:05:22,730 --> 00:05:27,920
million visits a month and presence in

00:05:25,220 --> 00:05:32,180
28 countries so their butt and they run

00:05:27,920 --> 00:05:35,120
that on CloudStack they're the kind of

00:05:32,180 --> 00:05:37,550
e-procurement type services the sort of

00:05:35,120 --> 00:05:40,190
a big central place to go to all these

00:05:37,550 --> 00:05:43,100
kind of things this actually comes back

00:05:40,190 --> 00:05:45,890
to a lot of what there's been a hot

00:05:43,100 --> 00:05:47,630
topic through the through the conference

00:05:45,890 --> 00:05:49,400
of people not shouting about what they

00:05:47,630 --> 00:05:51,650
do because this is the these guys are

00:05:49,400 --> 00:05:54,800
massive but it's but we don't

00:05:51,650 --> 00:05:57,110
necessarily not as much as we should I

00:05:54,800 --> 00:05:58,490
know we obviously put our press release

00:05:57,110 --> 00:06:02,660
is out saying it's happening but we need

00:05:58,490 --> 00:06:04,460
to get a wider audience to them so this

00:06:02,660 --> 00:06:06,290
is still going to be internal because

00:06:04,460 --> 00:06:16,090
they use AWS but they still wanted to

00:06:06,290 --> 00:06:16,090
use AWS to fulfill as in some internal

00:06:16,240 --> 00:06:23,870
some internal use cases so they wanted

00:06:20,300 --> 00:06:27,890
largely migrated all their internal

00:06:23,870 --> 00:06:30,200
infrastructure to an AWS like private

00:06:27,890 --> 00:06:32,180
cloud they wanted to use all the things

00:06:30,200 --> 00:06:35,770
they could do in AWS but they said right

00:06:32,180 --> 00:06:39,380
we want to do this internally as well

00:06:35,770 --> 00:06:40,020
and you see the kind of stated goal was

00:06:39,380 --> 00:06:41,910
they want to

00:06:40,020 --> 00:06:43,229
the test and development but also they

00:06:41,910 --> 00:06:46,110
wanted to put their own corporate

00:06:43,229 --> 00:06:49,470
services on there so all their Exchange

00:06:46,110 --> 00:06:52,470
SharePoint all their internal services

00:06:49,470 --> 00:06:56,520
they wanted on cloudstack but also run

00:06:52,470 --> 00:06:58,889
it for their test dev as well so they

00:06:56,520 --> 00:07:01,440
used to kind of networking models to do

00:06:58,889 --> 00:07:04,050
this they use the shared networking

00:07:01,440 --> 00:07:09,240
model within the advanced networks for

00:07:04,050 --> 00:07:12,479
their corporate type functions so they

00:07:09,240 --> 00:07:14,669
created multiple networks but they all

00:07:12,479 --> 00:07:16,139
shared one so they were sort of they

00:07:14,669 --> 00:07:17,729
didn't want to have a lots of virtual

00:07:16,139 --> 00:07:20,729
Reuters and lots of natick networks they

00:07:17,729 --> 00:07:22,440
just wanted it pretty flat but then in

00:07:20,729 --> 00:07:24,330
their test dev they wanted to be able to

00:07:22,440 --> 00:07:27,539
create multiple matching networks which

00:07:24,330 --> 00:07:29,190
are isolated so that one dev test wasn't

00:07:27,539 --> 00:07:32,280
going to blow up their entire

00:07:29,190 --> 00:07:33,659
infrastructure so here they're actually

00:07:32,280 --> 00:07:35,610
looking for the best of both worlds if

00:07:33,659 --> 00:07:38,190
you like the ultimate automation that

00:07:35,610 --> 00:07:40,889
comes from cloud sac but also the

00:07:38,190 --> 00:07:48,150
separation that comes from the advanced

00:07:40,889 --> 00:07:51,300
networking so we talked about traded

00:07:48,150 --> 00:07:53,000
media they started they were going to

00:07:51,300 --> 00:07:56,340
shout a lot more about it but they

00:07:53,000 --> 00:07:58,620
they've not recently you can see in

00:07:56,340 --> 00:08:02,159
terms of their site which runs on clouds

00:07:58,620 --> 00:08:07,319
that 20 million unique users per month

00:08:02,159 --> 00:08:09,120
and 833 million pageviews per month now

00:08:07,319 --> 00:08:12,120
that's some pretty hefty stuff they're

00:08:09,120 --> 00:08:14,340
running on that in the UK and they're

00:08:12,120 --> 00:08:15,979
moving this was from about last year

00:08:14,340 --> 00:08:19,440
they were moving that over into their

00:08:15,979 --> 00:08:21,419
production so one of the interesting

00:08:19,440 --> 00:08:25,500
things they do it is they do a lot of

00:08:21,419 --> 00:08:29,430
what you'd call cloud bursting they use

00:08:25,500 --> 00:08:33,959
right scale and what they do is they

00:08:29,430 --> 00:08:36,209
said well actually to run on AWS all the

00:08:33,959 --> 00:08:38,820
time means there's a base load which is

00:08:36,209 --> 00:08:40,680
actually very expensive AWS gives you

00:08:38,820 --> 00:08:42,120
lots of flexibility whether if you

00:08:40,680 --> 00:08:45,540
compare it to actually just having your

00:08:42,120 --> 00:08:47,250
own tin is relatively expensive so what

00:08:45,540 --> 00:08:50,630
they wanted to do was bring all their

00:08:47,250 --> 00:08:52,709
base load in-house have all of the

00:08:50,630 --> 00:08:53,529
automation and everything else staying

00:08:52,709 --> 00:08:55,060
oh

00:08:53,529 --> 00:08:57,939
pretty much exactly the same as it was

00:08:55,060 --> 00:09:01,870
when they were just using AWS but then

00:08:57,939 --> 00:09:03,490
when they hit certain Peaks that would

00:09:01,870 --> 00:09:05,290
go into AWS because it was cheaper than

00:09:03,490 --> 00:09:10,629
having their own tin just lying around

00:09:05,290 --> 00:09:13,240
doing nothing most of the day but then

00:09:10,629 --> 00:09:15,189
in the evenings he would burst to Amazon

00:09:13,240 --> 00:09:16,899
you can see from this we're talking

00:09:15,189 --> 00:09:18,670
about doing this on a daily basis is a

00:09:16,899 --> 00:09:20,949
kind of end of the month oh it's a

00:09:18,670 --> 00:09:22,749
billing cycle we're going to when you

00:09:20,949 --> 00:09:24,879
get we need a bit more compute this is

00:09:22,749 --> 00:09:30,790
all day every day going up and down up

00:09:24,879 --> 00:09:35,889
and down on a cycle so it's we have to

00:09:30,790 --> 00:09:39,309
be very reactive if you like the other

00:09:35,889 --> 00:09:43,149
interesting thing they looked at was if

00:09:39,309 --> 00:09:47,589
you like you've got here yo hello I'm

00:09:43,149 --> 00:09:54,339
going off the end of the screen can we

00:09:47,589 --> 00:09:57,449
make the oh no that's me sorry I'm just

00:09:54,339 --> 00:09:59,740
looking at four from an angle pick up on

00:09:57,449 --> 00:10:01,029
your standard deployment would look

00:09:59,740 --> 00:10:05,620
something like this and then you connect

00:10:01,029 --> 00:10:07,689
to a separate demamp secret data center

00:10:05,620 --> 00:10:11,319
and you've got a link that's running

00:10:07,689 --> 00:10:13,990
across to all of those hosts and they

00:10:11,319 --> 00:10:20,410
weren't happy with having that kind of

00:10:13,990 --> 00:10:24,100
setup so hello what I'm in there where's

00:10:20,410 --> 00:10:26,220
all this so let's just jump right to the

00:10:24,100 --> 00:10:26,220
end

00:10:37,600 --> 00:10:44,690
so they moved to using galera so glarus

00:10:41,600 --> 00:10:47,690
it's under my sequel is a clustering

00:10:44,690 --> 00:10:50,180
technology the way that works is you

00:10:47,690 --> 00:10:52,940
need a very high speed or low latency

00:10:50,180 --> 00:10:54,890
links between your two sites but what it

00:10:52,940 --> 00:10:58,779
enables you to do is have effectively

00:10:54,890 --> 00:11:02,000
all six of those mice equals as masters

00:10:58,779 --> 00:11:04,970
you need the very low latency because a

00:11:02,000 --> 00:11:06,920
right isn't committed or isn't seen as

00:11:04,970 --> 00:11:11,000
committed until it's been written to all

00:11:06,920 --> 00:11:12,410
of my sequel cluster but by doing this

00:11:11,000 --> 00:11:14,240
it meant if they had a loss of

00:11:12,410 --> 00:11:17,990
connection between their data centers

00:11:14,240 --> 00:11:20,870
the other one could just carry on and

00:11:17,990 --> 00:11:24,740
then they'd have to obviously be careful

00:11:20,870 --> 00:11:28,700
when they brought the link back but you

00:11:24,740 --> 00:11:30,320
see you can it's a very curve we haven't

00:11:28,700 --> 00:11:32,089
seen a lot of people using glare I think

00:11:30,320 --> 00:11:34,730
I can think of one other company but

00:11:32,089 --> 00:11:36,260
it's the fact that people are finding

00:11:34,730 --> 00:11:38,570
interesting in new ways of connecting

00:11:36,260 --> 00:11:40,310
these things together well that's

00:11:38,570 --> 00:11:43,190
another use case you can look at and

00:11:40,310 --> 00:11:46,040
also i mentioned earlier they use right

00:11:43,190 --> 00:11:48,110
scale for their balancing if you like so

00:11:46,040 --> 00:11:51,680
they use the right scale templates which

00:11:48,110 --> 00:11:53,690
are in amazon and they're using a cloud

00:11:51,680 --> 00:11:56,630
stack so that if they say i want web

00:11:53,690 --> 00:11:58,520
server type a it knows which type of

00:11:56,630 --> 00:12:01,520
template that is in amazon and which

00:11:58,520 --> 00:12:03,709
type of template that is in cloudstack

00:12:01,520 --> 00:12:06,310
and so it can just keep them all in line

00:12:03,709 --> 00:12:09,260
so if you say i want to web server a in

00:12:06,310 --> 00:12:10,970
amazon it knows which one to spin up and

00:12:09,260 --> 00:12:15,410
it will be exactly the same as the one

00:12:10,970 --> 00:12:16,430
in cloudstack but obviously the build a

00:12:15,410 --> 00:12:19,600
bit slightly different for the two

00:12:16,430 --> 00:12:19,600
different clouds

00:12:22,720 --> 00:12:28,250
so another one of our customers paddy

00:12:25,760 --> 00:12:32,060
power and if you saw them in Amsterdam

00:12:28,250 --> 00:12:37,279
and a very interesting talk on killing

00:12:32,060 --> 00:12:40,540
dinosaurs Paddy Power are a bit

00:12:37,279 --> 00:12:40,540
different in their approach to things

00:12:40,990 --> 00:12:47,060
but to give you an idea of what they're

00:12:44,050 --> 00:12:50,660
what kind of usage they look at we've

00:12:47,060 --> 00:12:54,110
got a couple of years ago 1.6 million

00:12:50,660 --> 00:12:56,600
users and generating a half a billion

00:12:54,110 --> 00:13:02,420
dollars from their online sales a year

00:12:56,600 --> 00:13:05,000
so again this is like the high end stuff

00:13:02,420 --> 00:13:07,880
that they're then using cloudstack we're

00:13:05,000 --> 00:13:09,709
going to use cloudstack to help get to

00:13:07,880 --> 00:13:11,990
so this class that wouldn't go into

00:13:09,709 --> 00:13:14,329
their actual production as yet this

00:13:11,990 --> 00:13:17,149
would be in there all the pre-production

00:13:14,329 --> 00:13:19,459
work and a lot of it was all about

00:13:17,149 --> 00:13:22,660
getting from pre-production to

00:13:19,459 --> 00:13:25,010
production faster and more efficiently

00:13:22,660 --> 00:13:29,260
so one of the things they were doing for

00:13:25,010 --> 00:13:33,050
their guys was basically creating

00:13:29,260 --> 00:13:35,390
environment templates so that a

00:13:33,050 --> 00:13:37,610
developer could have an idea and I'm

00:13:35,390 --> 00:13:40,399
really big on if you've got an idea just

00:13:37,610 --> 00:13:43,029
go and have a go at it and then if it

00:13:40,399 --> 00:13:45,290
works great if it doesn't no big deal

00:13:43,029 --> 00:13:47,779
but by creating their environment

00:13:45,290 --> 00:13:49,550
templates weren't able to do is very

00:13:47,779 --> 00:13:52,220
quickly just create an environment a

00:13:49,550 --> 00:13:54,560
developer could try out their idea and

00:13:52,220 --> 00:13:57,410
if you didn't work blow it away and if

00:13:54,560 --> 00:13:58,790
it did then they could go shout about it

00:13:57,410 --> 00:14:02,269
tell everyone else and they could then

00:13:58,790 --> 00:14:04,370
start developing it and they're the very

00:14:02,269 --> 00:14:05,959
proud and big on that kind of way of

00:14:04,370 --> 00:14:07,699
developing delap developers just have

00:14:05,959 --> 00:14:11,630
their ideas give them somewhere they can

00:14:07,699 --> 00:14:14,089
try them out quickly and easily and then

00:14:11,630 --> 00:14:17,089
with no kind of repercussions and no big

00:14:14,089 --> 00:14:18,560
financial cost if you had taken weeks to

00:14:17,089 --> 00:14:20,810
get the whole environment setup for them

00:14:18,560 --> 00:14:25,279
to spend half a day to so actually

00:14:20,810 --> 00:14:29,209
didn't work obviously I'd be more

00:14:25,279 --> 00:14:31,640
problematic they're also a big fan of

00:14:29,209 --> 00:14:34,910
the netflix kind of chaos monkey and

00:14:31,640 --> 00:14:35,970
simian army so if you don't know what

00:14:34,910 --> 00:14:37,800
that's about

00:14:35,970 --> 00:14:40,110
there's a whole set of tools but the

00:14:37,800 --> 00:14:42,120
idea is that largely you're trying to

00:14:40,110 --> 00:14:45,620
deliberately disrupt your architecture

00:14:42,120 --> 00:14:48,180
you're trying to deliberately break

00:14:45,620 --> 00:14:51,660
sections of your architecture to prove

00:14:48,180 --> 00:14:53,339
that it will still work so where we talk

00:14:51,660 --> 00:14:55,079
about cloud design and the ideas you're

00:14:53,339 --> 00:14:57,779
designing for failure designing that if

00:14:55,079 --> 00:15:01,199
you lose this host or that data center

00:14:57,779 --> 00:15:03,540
or that application server the bigger

00:15:01,199 --> 00:15:05,550
application will work its way around

00:15:03,540 --> 00:15:09,899
that problem itself it's designed to do

00:15:05,550 --> 00:15:12,480
that where the simian army comes in as I

00:15:09,899 --> 00:15:14,819
call pointed problems as a service it's

00:15:12,480 --> 00:15:17,730
literally trying to kill bits of that

00:15:14,819 --> 00:15:20,009
infrastructure to overload it with

00:15:17,730 --> 00:15:22,350
loathed hosts to cause Network storms

00:15:20,009 --> 00:15:26,160
and make sure that the rest of the

00:15:22,350 --> 00:15:27,930
violent in fact the the product they're

00:15:26,160 --> 00:15:31,019
trying to give to the end user remains

00:15:27,930 --> 00:15:32,310
unchanged so the end user would not know

00:15:31,019 --> 00:15:33,480
that a whole chunk of their

00:15:32,310 --> 00:15:35,160
infrastructure had suddenly stopped

00:15:33,480 --> 00:15:36,360
working and by running that all the time

00:15:35,160 --> 00:15:43,139
they can prove to themselves that

00:15:36,360 --> 00:15:45,300
actually that that is the case and I

00:15:43,139 --> 00:15:48,769
said about the faster transition from

00:15:45,300 --> 00:15:51,839
development actually to production so

00:15:48,769 --> 00:15:54,959
one of the kind of things that always

00:15:51,839 --> 00:15:58,050
happens is the developers will come up

00:15:54,959 --> 00:16:00,000
with something and they will get thrown

00:15:58,050 --> 00:16:01,319
over to production and suddenly they'll

00:16:00,000 --> 00:16:03,420
find that actually there was a load of

00:16:01,319 --> 00:16:04,980
firewall rules or imports that needed

00:16:03,420 --> 00:16:08,399
opening and things that needs setting up

00:16:04,980 --> 00:16:10,470
that they hadn't realized were actually

00:16:08,399 --> 00:16:12,680
required in their design they just

00:16:10,470 --> 00:16:14,189
obviously opened up every port

00:16:12,680 --> 00:16:16,259
everything was allowed to talk to

00:16:14,189 --> 00:16:17,670
everything and it will work great soon

00:16:16,259 --> 00:16:19,589
as he went to production and production

00:16:17,670 --> 00:16:20,819
rules started coming in and I said we'll

00:16:19,589 --> 00:16:22,620
give us a list of the ports and they

00:16:20,819 --> 00:16:25,079
said oh it's that one and that one and

00:16:22,620 --> 00:16:26,360
then it didn't work and they said I

00:16:25,079 --> 00:16:29,129
didn't know there were any others and

00:16:26,360 --> 00:16:31,860
then they have to go back and find out

00:16:29,129 --> 00:16:33,420
what they've missed by doing something

00:16:31,860 --> 00:16:37,199
like this where you'd use for instance

00:16:33,420 --> 00:16:38,939
of virtual appliance which would be the

00:16:37,199 --> 00:16:40,410
same as the physical one more or less

00:16:38,939 --> 00:16:42,180
we're certainly the your dear

00:16:40,410 --> 00:16:43,620
configuration files would be what they

00:16:42,180 --> 00:16:45,809
could do is design their application

00:16:43,620 --> 00:16:49,139
knock it down make sure it still worked

00:16:45,809 --> 00:16:49,750
and take literally the configuration

00:16:49,139 --> 00:16:51,460
file and give

00:16:49,750 --> 00:16:52,900
to production and say there you go this

00:16:51,460 --> 00:16:56,260
is the configuration that will make it

00:16:52,900 --> 00:16:59,100
work the production guys be honest look

00:16:56,260 --> 00:17:02,560
at that go and you're not doing that or

00:16:59,100 --> 00:17:05,530
say great and if they want just copy and

00:17:02,560 --> 00:17:07,209
paste it edens they go so it the idea

00:17:05,530 --> 00:17:09,520
was to basically be able to make that

00:17:07,209 --> 00:17:14,170
transition from a development platform

00:17:09,520 --> 00:17:17,020
to the production platform much much

00:17:14,170 --> 00:17:19,000
slicker and a lot less of the basically

00:17:17,020 --> 00:17:25,569
faffing around trying to figure out how

00:17:19,000 --> 00:17:27,160
everything was supposed to work the name

00:17:25,569 --> 00:17:30,520
of this company was mentioned I think in

00:17:27,160 --> 00:17:32,560
the keynote of Apache Khan so who they

00:17:30,520 --> 00:17:35,110
are is in the public domain but I'm not

00:17:32,560 --> 00:17:39,100
allowed to mention their name directly

00:17:35,110 --> 00:17:43,450
here as a client but to give you an idea

00:17:39,100 --> 00:17:46,300
of what they do if you probably can work

00:17:43,450 --> 00:17:50,530
out who they are again we're talking

00:17:46,300 --> 00:17:52,240
about a huge number of people accessing

00:17:50,530 --> 00:17:55,210
their services and certainly I would

00:17:52,240 --> 00:18:01,620
I'll be complaining if it goes down as

00:17:55,210 --> 00:18:05,440
much as anyone else now the first thing

00:18:01,620 --> 00:18:08,290
they'd like didn't like was the idea

00:18:05,440 --> 00:18:10,690
that they needed an n-tier like kind of

00:18:08,290 --> 00:18:14,280
structure but didn't like having a

00:18:10,690 --> 00:18:18,280
single or even in a pair virtual router

00:18:14,280 --> 00:18:19,990
we came to the age-old well what's the

00:18:18,280 --> 00:18:24,070
performance characteristics of a virtual

00:18:19,990 --> 00:18:25,180
router and it just depends depends what

00:18:24,070 --> 00:18:26,590
you're trying to put through it depends

00:18:25,180 --> 00:18:28,480
on the hardware because it's a virtual

00:18:26,590 --> 00:18:29,740
router depends how much memory he gave

00:18:28,480 --> 00:18:32,230
you it depends how many cause you gave

00:18:29,740 --> 00:18:36,010
it and it say depends on the quality of

00:18:32,230 --> 00:18:39,690
the process that's underneath it so

00:18:36,010 --> 00:18:39,690
because no one could actually really say

00:18:39,840 --> 00:18:47,080
we went to using security groups so we

00:18:43,900 --> 00:18:49,840
were running beta versions if you like

00:18:47,080 --> 00:18:51,730
the pre-release versions of 4.2 because

00:18:49,840 --> 00:18:56,080
we needed the security groups in the

00:18:51,730 --> 00:18:57,940
advanced zones so you can see here they

00:18:56,080 --> 00:19:01,300
were using the security groups to create

00:18:57,940 --> 00:19:02,250
effectively their tears so you still had

00:19:01,300 --> 00:19:04,980
that

00:19:02,250 --> 00:19:07,820
ering kind of idea with only certain

00:19:04,980 --> 00:19:11,040
ports allowed through between them

00:19:07,820 --> 00:19:13,020
whilst not having any bottlenecks

00:19:11,040 --> 00:19:15,990
because it was all direct communications

00:19:13,020 --> 00:19:19,140
when it was allowed so that kind of

00:19:15,990 --> 00:19:27,060
distributed security worked really well

00:19:19,140 --> 00:19:30,570
for them they also use Amazon they use

00:19:27,060 --> 00:19:33,980
Akamai to decide which will then steer

00:19:30,570 --> 00:19:38,420
the traffic between the two different

00:19:33,980 --> 00:19:43,350
locations even their data centers or AWS

00:19:38,420 --> 00:19:46,170
the majority of the traffic would go to

00:19:43,350 --> 00:19:50,310
their data center with the was where the

00:19:46,170 --> 00:19:53,460
plan is and obviously that means you've

00:19:50,310 --> 00:19:56,070
got to create a VPN or have the direct

00:19:53,460 --> 00:20:00,540
link so they obviously ran both for it

00:19:56,070 --> 00:20:02,550
for resilience but to maintain their

00:20:00,540 --> 00:20:04,860
database consistency across the to their

00:20:02,550 --> 00:20:07,770
at a direct linked in from their data

00:20:04,860 --> 00:20:10,050
centers to Amazon but also our VPNs for

00:20:07,770 --> 00:20:11,790
backup I can tell you from their

00:20:10,050 --> 00:20:15,840
experience setting up the VPNs is not

00:20:11,790 --> 00:20:18,990
simple job if you need multiple points

00:20:15,840 --> 00:20:21,030
going backwards and forwards but again

00:20:18,990 --> 00:20:23,610
you see what I'm trying to get across is

00:20:21,030 --> 00:20:24,840
the different ideas that people are

00:20:23,610 --> 00:20:31,710
coming up with and the different things

00:20:24,840 --> 00:20:36,540
you can do and use cloud step 4 so in

00:20:31,710 --> 00:20:38,850
terms of actual infrastructures still

00:20:36,540 --> 00:20:41,880
that the vast majority of the time this

00:20:38,850 --> 00:20:44,220
is the kind of topology if you like for

00:20:41,880 --> 00:20:46,950
the management side that we see a couple

00:20:44,220 --> 00:20:49,140
of load balancers in an H a pair of a

00:20:46,950 --> 00:20:52,970
couple of Management Service behind that

00:20:49,140 --> 00:20:55,650
and then my sequel still in master-slave

00:20:52,970 --> 00:20:59,160
talked about galera there's my sequel

00:20:55,650 --> 00:21:02,160
clustering seeing people playing with

00:20:59,160 --> 00:21:05,550
using a dr DB to get the replication of

00:21:02,160 --> 00:21:08,760
the my sequel a file level now having a

00:21:05,550 --> 00:21:10,770
database level as yet I don't think as

00:21:08,760 --> 00:21:14,120
any sort of bullet that just makes

00:21:10,770 --> 00:21:14,120
everything just work and is

00:21:14,490 --> 00:21:20,760
all warm and fluffy and fuzzy but

00:21:17,760 --> 00:21:22,679
basically the vast majority of bills we

00:21:20,760 --> 00:21:26,130
see would work like this and a lot of

00:21:22,679 --> 00:21:28,020
these then would run multiple zones all

00:21:26,130 --> 00:21:34,640
from the central location one of our

00:21:28,020 --> 00:21:38,400
clients has CloudStack zones in India

00:21:34,640 --> 00:21:41,490
China and their Europe and it's all run

00:21:38,400 --> 00:21:43,650
from just a European class that

00:21:41,490 --> 00:21:49,770
management service just to pair of them

00:21:43,650 --> 00:21:51,510
behind their load balancers so in terms

00:21:49,770 --> 00:21:53,670
of the typical hardware but we're

00:21:51,510 --> 00:21:58,290
actually seeing at the moment this

00:21:53,670 --> 00:22:01,530
doesn't read across it reads down like

00:21:58,290 --> 00:22:03,600
the vast majority have been netapp but

00:22:01,530 --> 00:22:05,850
we have had some that use a little bit

00:22:03,600 --> 00:22:09,240
of Nick Center hitoshi happened to be

00:22:05,850 --> 00:22:10,679
the fibre channel over ethernet and

00:22:09,240 --> 00:22:14,240
obviously a few SolidFire as well as

00:22:10,679 --> 00:22:17,580
becoming popular in some places

00:22:14,240 --> 00:22:21,270
protocols are overwhelmingly still NFS

00:22:17,580 --> 00:22:23,010
and so we had the one customer who

00:22:21,270 --> 00:22:25,770
already had their fibre channel over

00:22:23,010 --> 00:22:27,660
ethernet to their tachi stuff so that's

00:22:25,770 --> 00:22:28,770
what they wanted us to carry on using

00:22:27,660 --> 00:22:32,070
because that's what they used in their

00:22:28,770 --> 00:22:35,660
infrastructure generally and a very

00:22:32,070 --> 00:22:35,660
little bit of ice guzzi but not a lot

00:22:35,840 --> 00:22:44,220
networking still what mostly one gig and

00:22:40,760 --> 00:22:47,850
throwing a load of interfaces at it to

00:22:44,220 --> 00:22:50,700
bomb them and get through but a few

00:22:47,850 --> 00:22:55,350
people are starting to use the 10 mostly

00:22:50,700 --> 00:23:00,090
for storage and 40 gig if they're using

00:22:55,350 --> 00:23:02,400
blades and stuff there is a where we

00:23:00,090 --> 00:23:05,820
used to separate out all of our traffic

00:23:02,400 --> 00:23:07,290
over individual links there's now we're

00:23:05,820 --> 00:23:10,080
seeing a lot of people looking at that

00:23:07,290 --> 00:23:12,390
game where I just put some redundant

00:23:10,080 --> 00:23:14,370
redundant 10 gig links in and then pipe

00:23:12,390 --> 00:23:16,790
all the traffic in vlans through that

00:23:14,370 --> 00:23:19,320
that gives me pretty much a load of

00:23:16,790 --> 00:23:21,300
bandwidth that I couldn't get with just

00:23:19,320 --> 00:23:24,200
having one gig nicks and basically we'll

00:23:21,300 --> 00:23:26,220
just we will assume we won't have a

00:23:24,200 --> 00:23:29,360
contention problem between different

00:23:26,220 --> 00:23:29,360
network traffic types

00:23:29,600 --> 00:23:37,100
in terms of the storage now which is

00:23:34,380 --> 00:23:40,799
definitely seeing a move at the moment

00:23:37,100 --> 00:23:42,840
away from the more traditional cloudy

00:23:40,799 --> 00:23:45,179
idea that we can all started with where

00:23:42,840 --> 00:23:47,640
you'd have if you could one a raper

00:23:45,179 --> 00:23:49,020
cluster and if that failed then just

00:23:47,640 --> 00:23:52,230
that cluster found nothing else left

00:23:49,020 --> 00:23:54,840
field then we went that's a bit this is

00:23:52,230 --> 00:23:57,480
so inefficient it's almost unusable so

00:23:54,840 --> 00:24:01,740
one or a raper pod and that seemed kind

00:23:57,480 --> 00:24:05,250
of acceptable but we're seeing a move to

00:24:01,740 --> 00:24:09,720
people just having huge kind of arrays

00:24:05,250 --> 00:24:12,960
which then run the entire zone and a

00:24:09,720 --> 00:24:15,090
thorough it kinda is outside of our kind

00:24:12,960 --> 00:24:16,559
of cloudy ideas we see more and more

00:24:15,090 --> 00:24:20,490
customers that's what they've got and

00:24:16,559 --> 00:24:22,260
that's what they want so you the end of

00:24:20,490 --> 00:24:24,929
day there the customer so we are seeing

00:24:22,260 --> 00:24:28,260
a different move from the storage

00:24:24,929 --> 00:24:33,860
looking a lot less cloudy then we

00:24:28,260 --> 00:24:37,650
possibly have like terms of compute

00:24:33,860 --> 00:24:40,169
overwhelmingly HP at the moment seeing

00:24:37,650 --> 00:24:41,490
more cisco that's definitely coming in

00:24:40,169 --> 00:24:45,990
mourn with those clients when working

00:24:41,490 --> 00:24:49,740
with a bit of Dell and in the sort of

00:24:45,990 --> 00:24:54,120
super micro stuff a tiny bit but not so

00:24:49,740 --> 00:24:55,650
much there we've just picked out the

00:24:54,120 --> 00:24:58,289
kind of number of cores we're seeing per

00:24:55,650 --> 00:25:01,169
server there is again at this move to

00:24:58,289 --> 00:25:03,059
having just black actually using bleach

00:25:01,169 --> 00:25:06,120
a cease and having that as a cluster for

00:25:03,059 --> 00:25:07,980
instance there's different move to where

00:25:06,120 --> 00:25:10,470
we would have originally said oh you

00:25:07,980 --> 00:25:13,679
just want lots of little pizza boxes and

00:25:10,470 --> 00:25:15,840
then your failure domain is as small as

00:25:13,679 --> 00:25:17,640
possible so if you lose one of these

00:25:15,840 --> 00:25:20,580
boxes it's not the end of the world

00:25:17,640 --> 00:25:23,190
because you've got a hundred others so

00:25:20,580 --> 00:25:25,860
you've lost a hundredth of your of your

00:25:23,190 --> 00:25:27,360
infrastructure but certainly is so

00:25:25,860 --> 00:25:30,080
there's this move to actually using

00:25:27,360 --> 00:25:32,820
bigger and beer single boxes because the

00:25:30,080 --> 00:25:34,710
counter argument that the clients tend

00:25:32,820 --> 00:25:36,630
to come up with is yeah but if I've got

00:25:34,710 --> 00:25:40,860
a hundred boxes that's 100 hypervisors

00:25:36,630 --> 00:25:44,070
I've got to look after I'd rather have

00:25:40,860 --> 00:25:45,330
I'd rather have big massive boxes and

00:25:44,070 --> 00:25:51,000
not have to look after so many

00:25:45,330 --> 00:25:54,179
hypervisors again not so cloudy but

00:25:51,000 --> 00:25:56,190
that's definitely a trend we're seeing a

00:25:54,179 --> 00:26:03,020
lot of and having to where we can argue

00:25:56,190 --> 00:26:05,610
against the good old hypervisor argument

00:26:03,020 --> 00:26:09,360
mostly I think we're seeing xenserver

00:26:05,610 --> 00:26:12,650
going in and then probably kvm and then

00:26:09,360 --> 00:26:14,790
esxi and the esxi guys are usually

00:26:12,650 --> 00:26:16,559
enterprises and that's what they've got

00:26:14,790 --> 00:26:17,880
that's what they've always used and you

00:26:16,559 --> 00:26:21,179
know you're never going to pry them away

00:26:17,880 --> 00:26:24,510
from it and particularly service

00:26:21,179 --> 00:26:25,770
providers they don't they've spoken to

00:26:24,510 --> 00:26:27,660
their customers and their customers

00:26:25,770 --> 00:26:32,429
won't be happy if they move them away to

00:26:27,660 --> 00:26:33,960
something else after then VMware so that

00:26:32,429 --> 00:26:36,990
was usually what happens with there but

00:26:33,960 --> 00:26:39,630
otherwise kvm xenserver the ones we've

00:26:36,990 --> 00:26:45,210
seen getting deployed from a greenfield

00:26:39,630 --> 00:26:49,410
kind of idea first I'm finally here on

00:26:45,210 --> 00:26:51,480
the networking sis it's like Cisco Cisco

00:26:49,410 --> 00:26:54,900
Cisco were pretty much in terms of what

00:26:51,480 --> 00:26:57,500
you'll see is network hardware a little

00:26:54,900 --> 00:27:02,220
bit more juniper coming in at the moment

00:26:57,500 --> 00:27:05,880
I've seen I've seen one company using a

00:27:02,220 --> 00:27:08,549
wrister but it's pretty much the vast

00:27:05,880 --> 00:27:11,070
majority Cisco and say that obviously

00:27:08,549 --> 00:27:13,350
the networking speeds avoids kind of

00:27:11,070 --> 00:27:17,400
covered on that's what we'd see coding

00:27:13,350 --> 00:27:19,049
through as I think giggy's has been

00:27:17,400 --> 00:27:20,850
traditionally only used for storage but

00:27:19,049 --> 00:27:22,980
we're seeing more people trying to

00:27:20,850 --> 00:27:25,740
basically just have to 10 gigs and put

00:27:22,980 --> 00:27:28,860
everything through that usually we're

00:27:25,740 --> 00:27:31,590
stacking in some kind of way but the kvm

00:27:28,860 --> 00:27:32,940
guys and xenserver if you're using

00:27:31,590 --> 00:27:34,830
advanced networks of see now you can

00:27:32,940 --> 00:27:38,790
lacp so that's where you might still

00:27:34,830 --> 00:27:44,880
stick with one gig and have four to six

00:27:38,790 --> 00:27:47,160
say interfaces to get that through the

00:27:44,880 --> 00:27:51,240
biggest number of one gig ports I've

00:27:47,160 --> 00:27:54,390
seen in a client server is 12 so they

00:27:51,240 --> 00:27:54,759
were using lacp and then separating

00:27:54,390 --> 00:27:59,609
these

00:27:54,759 --> 00:28:02,199
to have 64 guests traffic for for

00:27:59,609 --> 00:28:04,119
storage traffic and then to for the

00:28:02,199 --> 00:28:06,999
management and then each of those were

00:28:04,119 --> 00:28:13,299
using lacp is to give you four gig six

00:28:06,999 --> 00:28:19,899
gig'em and two so is there any questions

00:28:13,299 --> 00:28:21,489
Oh comment on the use of virtual routers

00:28:19,899 --> 00:28:24,190
versus the hardware that you just went

00:28:21,489 --> 00:28:25,929
over in terms of production I mean are

00:28:24,190 --> 00:28:29,769
people using the virtual router is

00:28:25,929 --> 00:28:32,049
typically so the question is are people

00:28:29,769 --> 00:28:33,639
using virtual routers are they just

00:28:32,049 --> 00:28:37,629
doing it to the hardware yes people are

00:28:33,639 --> 00:28:41,769
using virtual routers but they are a bit

00:28:37,629 --> 00:28:43,269
nervous about it it's not popular and

00:28:41,769 --> 00:28:46,029
certainly I think of some of the SDN

00:28:43,269 --> 00:28:47,709
solutions that do away with it that

00:28:46,029 --> 00:28:50,469
might be the thing that really pushes

00:28:47,709 --> 00:28:52,509
people to wards sdn even more than the

00:28:50,469 --> 00:28:53,859
extra flexibility over vlans is the fact

00:28:52,509 --> 00:29:05,109
that you can have this kind of

00:28:53,859 --> 00:29:07,269
distributed routing just ocean of a

00:29:05,109 --> 00:29:10,899
virtual I think the notion of a little

00:29:07,269 --> 00:29:19,659
Linux VM is just gives people the

00:29:10,899 --> 00:29:21,549
shivers yeah I mean and and you could

00:29:19,659 --> 00:29:23,289
replace it as people looking at

00:29:21,549 --> 00:29:27,399
replacing virtual radizen being able to

00:29:23,289 --> 00:29:30,509
use virtual appliances so a cisco

00:29:27,399 --> 00:29:32,409
virtual and putting that in instead i

00:29:30,509 --> 00:29:35,109
think we've got some clients that are

00:29:32,409 --> 00:29:37,569
talking to us too can we if we if they

00:29:35,109 --> 00:29:40,509
give us like their virtual router that

00:29:37,569 --> 00:29:43,749
they actually use be a viator cisco and

00:29:40,509 --> 00:29:45,279
can we then orchestrate that or get the

00:29:43,749 --> 00:29:48,279
code in so that can be orchestrated that

00:29:45,279 --> 00:29:54,429
can be the virtual router as it kind of

00:29:48,279 --> 00:29:56,860
says well what's the difference the

00:29:54,429 --> 00:30:04,390
automation or cast

00:29:56,860 --> 00:30:08,710
for what movie to virtual well the

00:30:04,390 --> 00:30:10,720
motivation for moving to using these

00:30:08,710 --> 00:30:13,420
virtual ones is because it's it then

00:30:10,720 --> 00:30:19,679
part of the cloudstack build so you're

00:30:13,420 --> 00:30:23,500
all you you're going to create 30 40 50

00:30:19,679 --> 00:30:26,230
102,000 networks and if each one needs a

00:30:23,500 --> 00:30:29,260
its own router then you really go in one

00:30:26,230 --> 00:30:31,390
virtual routers doing that it depends on

00:30:29,260 --> 00:30:33,280
the use case obviously in a more more

00:30:31,390 --> 00:30:35,429
public clouds of far more likely to have

00:30:33,280 --> 00:30:38,410
lots and lots and lots of networks

00:30:35,429 --> 00:30:42,220
enterprises may or may not it depends

00:30:38,410 --> 00:30:45,040
their use case so we just got one minute

00:30:42,220 --> 00:30:47,200
left so you mentioned Paddy Power

00:30:45,040 --> 00:30:49,960
creating those software templates so we

00:30:47,200 --> 00:30:52,570
know them as we help them orchestrate

00:30:49,960 --> 00:30:54,640
that automation can you tell us about

00:30:52,570 --> 00:30:56,740
other customers or they're using any

00:30:54,640 --> 00:31:01,660
kind of information frameworks what what

00:30:56,740 --> 00:31:03,280
do you see in the field yeah we don

00:31:01,660 --> 00:31:08,410
remember which customer names like a

00:31:03,280 --> 00:31:12,790
name we've seen we have plant uses Cloud

00:31:08,410 --> 00:31:14,669
Foundry ortho they are now actually

00:31:12,790 --> 00:31:16,840
preferred to move to using ansible as a

00:31:14,669 --> 00:31:18,580
configuration management and automation

00:31:16,840 --> 00:31:21,190
tool and they're preferring to actually

00:31:18,580 --> 00:31:24,760
move to actually using that to create

00:31:21,190 --> 00:31:28,419
their paths if you like so Cloud Foundry

00:31:24,760 --> 00:31:30,760
is the main other one that we kind of

00:31:28,419 --> 00:31:33,010
see or hear of as a platform that's

00:31:30,760 --> 00:31:37,720
already pre-made I'm sure I think of

00:31:33,010 --> 00:31:42,400
other ones are you thinking period of

00:31:37,720 --> 00:31:46,330
creating the template type templated

00:31:42,400 --> 00:31:48,650
environments if you like more than

00:31:46,330 --> 00:31:51,600
making

00:31:48,650 --> 00:31:53,790
visioning and installation and gluing of

00:31:51,600 --> 00:31:58,520
everything together to create a whole

00:31:53,790 --> 00:32:01,890
application as as Perry D Peri party I

00:31:58,520 --> 00:32:03,690
seen something like that in another with

00:32:01,890 --> 00:32:06,480
another with other customers of noise I

00:32:03,690 --> 00:32:08,760
think you think a large number of them

00:32:06,480 --> 00:32:11,220
are doing it that way so the question is

00:32:08,760 --> 00:32:13,740
it's our people automating the creation

00:32:11,220 --> 00:32:16,470
of these environments and young the easy

00:32:13,740 --> 00:32:18,600
answer is yes they're usually doing it

00:32:16,470 --> 00:32:22,260
with their own kind of tooling I think

00:32:18,600 --> 00:32:24,600
more than using a prepackaged thing to

00:32:22,260 --> 00:32:30,450
do that with like you're Claire ups

00:32:24,600 --> 00:32:32,340
governed or cloud foundry oh I think

00:32:30,450 --> 00:32:34,250
we're now without time because someone

00:32:32,340 --> 00:32:37,230
else that wants to come and talk so

00:32:34,250 --> 00:32:40,560
there's some resources obviously I will

00:32:37,230 --> 00:32:42,090
be up on our slide share so you can read

00:32:40,560 --> 00:32:44,970
up on any of this or just come and find

00:32:42,090 --> 00:32:47,450
us in a booth upstairs so thank you very

00:32:44,970 --> 00:32:47,450

YouTube URL: https://www.youtube.com/watch?v=B0iEpUrl3Ks


