Title: Virtual Router in CloudStack 4.4 - Sheng Yang
Publication date: 2014-04-29
Playlist: CloudStack Collaboration Conference North America 2014
Description: 
	CloudStack Collaboration Conference North America 2014
Captions: 
	00:00:00,060 --> 00:00:05,910
good afternoon welcome to this session

00:00:02,780 --> 00:00:08,400
my name is jr. I'm working for series I

00:00:05,910 --> 00:00:09,300
have been working on cloud stack since

00:00:08,400 --> 00:00:12,630
00:00:09,300 --> 00:00:15,750
many folks on the network and the watch

00:00:12,630 --> 00:00:18,900
were out apart and today I will talk

00:00:15,750 --> 00:00:21,150
about written about a virtual router in

00:00:18,900 --> 00:00:23,400
a cloud stack especially for our

00:00:21,150 --> 00:00:27,930
recently improvements on the upcoming

00:00:23,400 --> 00:00:30,900
release for Davo I will drive a little

00:00:27,930 --> 00:00:33,690
more detail on the the current code flow

00:00:30,900 --> 00:00:38,210
of the which router and some problems we

00:00:33,690 --> 00:00:41,100
faced during our customer deployment and

00:00:38,210 --> 00:00:44,219
what we have on the photo for to fix

00:00:41,100 --> 00:00:46,590
these issues also I will propose what we

00:00:44,219 --> 00:00:50,180
playing and discussed about what's the

00:00:46,590 --> 00:00:50,180
future improvement of the virtual router

00:00:54,530 --> 00:00:59,160
here's the typical diagram of the

00:00:57,480 --> 00:01:02,280
virtual router I take the example of the

00:00:59,160 --> 00:01:05,040
V PC because is the if you see is the

00:01:02,280 --> 00:01:07,830
the most sophisticated Okamoto the

00:01:05,040 --> 00:01:10,979
crosstrack supporting right now but that

00:01:07,830 --> 00:01:12,840
the the magnet is the basically the same

00:01:10,979 --> 00:01:16,290
with the basically network and isolate

00:01:12,840 --> 00:01:18,720
network on the Wii PC every time when

00:01:16,290 --> 00:01:21,600
you try to create we PC you crazy PC

00:01:18,720 --> 00:01:24,450
router first then the router bring up

00:01:21,600 --> 00:01:27,840
and that you want to add tear to that

00:01:24,450 --> 00:01:31,170
and every time when you add one VM to

00:01:27,840 --> 00:01:33,090
that here the planning server we are

00:01:31,170 --> 00:01:35,430
programming the VP's if you are to add

00:01:33,090 --> 00:01:39,860
that the edges in DHCP entry and we also

00:01:35,430 --> 00:01:43,110
VM data for the this for this VM and

00:01:39,860 --> 00:01:45,810
when you try to do the public a lot of

00:01:43,110 --> 00:01:47,490
balance do the remote access which the

00:01:45,810 --> 00:01:50,700
inside you side with E and every kind of

00:01:47,490 --> 00:01:52,950
these rules we're programming on this V

00:01:50,700 --> 00:01:56,189
PC we are and in the case of the basic

00:01:52,950 --> 00:02:00,240
network every for the basic network is

00:01:56,189 --> 00:02:02,340
basically every time the the normal vm

00:02:00,240 --> 00:02:04,770
you start up the programming and the

00:02:02,340 --> 00:02:06,450
DHCP and the rampage and the VR and the

00:02:04,770 --> 00:02:07,860
full isolated network is probably two

00:02:06,450 --> 00:02:09,989
and a half with the side to side with

00:02:07,860 --> 00:02:12,930
p.m. but osteo are the rules up to the

00:02:09,989 --> 00:02:13,890
VR so as you see here the virtual router

00:02:12,930 --> 00:02:16,410
is basically

00:02:13,890 --> 00:02:21,660
the central part of the network model of

00:02:16,410 --> 00:02:23,790
the CloudStack mr. browning and we see

00:02:21,660 --> 00:02:27,150
that virtual router itself is the more

00:02:23,790 --> 00:02:29,340
or less just a one VM running on Debian

00:02:27,150 --> 00:02:31,770
release is well utilized all kinds of

00:02:29,340 --> 00:02:43,950
other software out you provide the

00:02:31,770 --> 00:02:45,989
functionality to this network here at

00:02:43,950 --> 00:02:48,870
least the some key point you may

00:02:45,989 --> 00:02:52,800
interesting if you want to further in

00:02:48,870 --> 00:02:54,330
wins the which arouses code for the the

00:02:52,800 --> 00:02:57,239
first one is the virtual router element

00:02:54,330 --> 00:02:58,800
is basically the interface for the neck

00:02:57,239 --> 00:03:01,290
illustration which would call the

00:02:58,800 --> 00:03:03,660
network manage before so every time when

00:03:01,290 --> 00:03:06,110
you try to apply the firewall rule

00:03:03,660 --> 00:03:09,989
portfolio a rule to one network or

00:03:06,110 --> 00:03:13,830
public to one VMs the network Auto

00:03:09,989 --> 00:03:15,660
Treasurer will call 2005 which elements

00:03:13,830 --> 00:03:18,870
in this network well read well be

00:03:15,660 --> 00:03:21,630
responsible for this rule and the after

00:03:18,870 --> 00:03:24,299
is Phi the water router which is well be

00:03:21,630 --> 00:03:26,519
show at the network offering after final

00:03:24,299 --> 00:03:28,200
way to router email called API in the

00:03:26,519 --> 00:03:34,260
world router to do the corresponds more

00:03:28,200 --> 00:03:35,760
jobs to make your rule work and the

00:03:34,260 --> 00:03:38,190
virtual router element is the only

00:03:35,760 --> 00:03:40,620
interface and that the real code the

00:03:38,190 --> 00:03:42,630
real logic behind that is in the virtual

00:03:40,620 --> 00:03:45,750
network applies the manager is the is

00:03:42,630 --> 00:03:48,660
the it's basically everything we have

00:03:45,750 --> 00:03:51,269
the real rule programming and how to

00:03:48,660 --> 00:03:55,410
generate to the command to the to the

00:03:51,269 --> 00:03:56,820
backend and this kind of things will be

00:03:55,410 --> 00:03:57,510
in the which would network appliance

00:03:56,820 --> 00:04:00,600
manager

00:03:57,510 --> 00:04:02,459
so there's three key functioning at one

00:04:00,600 --> 00:04:05,519
point out here that was first one apply

00:04:02,459 --> 00:04:07,110
rules of course it's basically until

00:04:05,519 --> 00:04:09,810
everything for the forwarding gscp

00:04:07,110 --> 00:04:12,900
industry vamp data we apply this to the

00:04:09,810 --> 00:04:17,700
this function well cool very cold that

00:04:12,900 --> 00:04:19,950
you revise the entry to the which router

00:04:17,700 --> 00:04:22,460
in the backhand through the later steps

00:04:19,950 --> 00:04:25,919
and the second thing is a finalized

00:04:22,460 --> 00:04:27,840
virtual machine profile this one's a

00:04:25,919 --> 00:04:31,680
little a little special

00:04:27,840 --> 00:04:34,680
the system VMs because every time when

00:04:31,680 --> 00:04:36,720
one system via is booting up we need to

00:04:34,680 --> 00:04:39,150
know what's this VM is about what's his

00:04:36,720 --> 00:04:42,570
role as it was it a configuration for

00:04:39,150 --> 00:04:45,150
example we how many needs do we have do

00:04:42,570 --> 00:04:48,479
they have was the theater of the was the

00:04:45,150 --> 00:04:50,639
sitter of the guest network in behind

00:04:48,479 --> 00:04:55,380
the witch router all these kind of

00:04:50,639 --> 00:04:58,080
information will be passed through some

00:04:55,380 --> 00:05:02,550
way sometimes these command line in the

00:04:58,080 --> 00:05:06,360
kernel sometimes is the pv some pv info

00:05:02,550 --> 00:05:09,030
inside hypervisor and the finalize the

00:05:06,360 --> 00:05:11,400
virtual merging profile will just we

00:05:09,030 --> 00:05:13,950
established this virtual routers every

00:05:11,400 --> 00:05:16,320
perspective these parameters and makes

00:05:13,950 --> 00:05:20,280
it when it's booting up we all know was

00:05:16,320 --> 00:05:23,700
how kaikan figma environment to fit my

00:05:20,280 --> 00:05:25,860
role and the third one is a finance

00:05:23,700 --> 00:05:29,490
command on start this was different from

00:05:25,860 --> 00:05:31,830
the fairness which were machine profile

00:05:29,490 --> 00:05:34,320
because the finance which much in

00:05:31,830 --> 00:05:37,800
profile is cool it's basically in action

00:05:34,320 --> 00:05:39,930
when the VR is the other system vm in

00:05:37,800 --> 00:05:41,970
fact is booting up and the during

00:05:39,930 --> 00:05:44,520
configuration at that time and the

00:05:41,970 --> 00:05:47,360
finance command now starts will send out

00:05:44,520 --> 00:05:50,639
all the commands you as necessary to

00:05:47,360 --> 00:05:53,039
programming the rules in fact the

00:05:50,639 --> 00:05:56,400
firewall rule DHCP increased whenever

00:05:53,039 --> 00:05:59,220
you restart or recreate this virtual

00:05:56,400 --> 00:06:01,470
router you will you'll see that a lot of

00:05:59,220 --> 00:06:04,560
command were generated according to our

00:06:01,470 --> 00:06:06,630
database entry to see what is current

00:06:04,560 --> 00:06:10,200
status of our router and that that's one

00:06:06,630 --> 00:06:11,639
well performing to all commands putting

00:06:10,200 --> 00:06:14,250
the finance command now style and this

00:06:11,639 --> 00:06:15,990
one every comment in here will be sent

00:06:14,250 --> 00:06:17,430
to the virtual router after we found

00:06:15,990 --> 00:06:21,210
that which route is completely is the

00:06:17,430 --> 00:06:24,150
initializer is putting a process and the

00:06:21,210 --> 00:06:27,419
this other pieces in the memory server

00:06:24,150 --> 00:06:29,729
Java code and for the which router is

00:06:27,419 --> 00:06:32,280
basically it's not running on the agent

00:06:29,729 --> 00:06:35,550
is we are not running Java agent of that

00:06:32,280 --> 00:06:38,130
it's basically running all kinds of

00:06:35,550 --> 00:06:41,720
scripts and the utilizing the software

00:06:38,130 --> 00:06:43,670
inside it the first one the

00:06:41,720 --> 00:06:46,400
I point out here the clouds early config

00:06:43,670 --> 00:06:48,740
is mapped to its much from the finalize

00:06:46,400 --> 00:06:52,310
which were machine profile is well press

00:06:48,740 --> 00:06:55,610
the parameters and also here is well you

00:06:52,310 --> 00:06:57,860
hear a check if they had a new version

00:06:55,610 --> 00:07:01,580
of which were outer image available and

00:06:57,860 --> 00:07:04,760
if so here just replace the replace the

00:07:01,580 --> 00:07:06,710
ISO in fact to replace the scripts in

00:07:04,760 --> 00:07:09,170
the virtual router and the reboot again

00:07:06,710 --> 00:07:11,060
make sure that the virtual router will

00:07:09,170 --> 00:07:13,790
be always think with the memory service

00:07:11,060 --> 00:07:16,040
version and also here we are just three

00:07:13,790 --> 00:07:17,960
of you all kinds of plugging leaks in

00:07:16,040 --> 00:07:21,650
the virtual router setting initial IP

00:07:17,960 --> 00:07:24,860
address this kind of walk and another

00:07:21,650 --> 00:07:28,580
one is the every pro every scripts in

00:07:24,860 --> 00:07:31,880
the opt cloud being it's probably 30 40

00:07:28,580 --> 00:07:33,320
of them they are doing a detail works

00:07:31,880 --> 00:07:35,570
for the old kind of rule your

00:07:33,320 --> 00:07:37,100
programming into the virtual router for

00:07:35,570 --> 00:07:43,190
our rural network I call all these

00:07:37,100 --> 00:07:45,710
things probably this kind of to abstract

00:07:43,190 --> 00:07:59,120
but if you have any question you can

00:07:45,710 --> 00:08:00,200
just ask yeah raishin come from the

00:07:59,120 --> 00:08:02,390
command line

00:08:00,200 --> 00:08:05,450
in fact because every time we you stop

00:08:02,390 --> 00:08:08,660
the VM you can say that's you can put a

00:08:05,450 --> 00:08:12,080
lot of in the same case you can put a

00:08:08,660 --> 00:08:14,720
string in the kernel booting parameter

00:08:12,080 --> 00:08:18,229
and that one will be catch to the then

00:08:14,720 --> 00:08:20,810
and then the cloud early config we all

00:08:18,229 --> 00:08:23,240
see that string and to see okay I equal

00:08:20,810 --> 00:08:25,820
P and the Nix was the theater was the

00:08:23,240 --> 00:08:27,830
nickname is kind of the scenes they are

00:08:25,820 --> 00:08:30,080
make no sense to the kernel itself but

00:08:27,830 --> 00:08:31,930
they we use that you transfer the

00:08:30,080 --> 00:08:35,690
parameter from the main server to the

00:08:31,930 --> 00:08:37,370
Chilika to the VR I think in the thing

00:08:35,690 --> 00:08:42,589
in the veil mail case we use them not

00:08:37,370 --> 00:08:43,909
specified some summary information file

00:08:42,589 --> 00:08:46,430
on the virtual router and we'll use

00:08:43,909 --> 00:08:48,350
probably high pocos things to get that

00:08:46,430 --> 00:08:49,760
information I'm not well sure about the

00:08:48,350 --> 00:08:51,350
VM well but for the general came here

00:08:49,760 --> 00:08:53,770
and basically we do this from the

00:08:51,350 --> 00:08:53,770
command line

00:08:54,350 --> 00:08:57,350
okay

00:09:04,779 --> 00:09:11,180
so here's some things before the photo

00:09:09,139 --> 00:09:15,019
for release which is what we have right

00:09:11,180 --> 00:09:17,509
now the photo sorry the the first thing

00:09:15,019 --> 00:09:20,420
is when you try to working on which

00:09:17,509 --> 00:09:24,529
browser is worried annoying you well fly

00:09:20,420 --> 00:09:27,350
that in fact you have the same most the

00:09:24,529 --> 00:09:31,430
same code implement in the different

00:09:27,350 --> 00:09:33,680
hypervisor resources the prop that why

00:09:31,430 --> 00:09:35,930
we have this is why we design this way

00:09:33,680 --> 00:09:39,769
it's not it's not intentional of course

00:09:35,930 --> 00:09:42,709
but the scissor is which router is not a

00:09:39,769 --> 00:09:44,089
host in a cloud stack it's not running

00:09:42,709 --> 00:09:46,160
the geographies of a code and the

00:09:44,089 --> 00:09:49,430
communicate which manager directly so

00:09:46,160 --> 00:09:52,040
it's not regarding as a host as the CPM

00:09:49,430 --> 00:09:54,889
or seconds to DBMS or as a KVM agent

00:09:52,040 --> 00:09:58,009
it's just a bunch of a script it's

00:09:54,889 --> 00:10:01,250
because there is not a host we cannot

00:09:58,009 --> 00:10:03,100
say that we want one resource file which

00:10:01,250 --> 00:10:06,709
those dedicated to this which router

00:10:03,100 --> 00:10:08,810
this basically that's because there's no

00:10:06,709 --> 00:10:11,959
connection and disconnection these kind

00:10:08,810 --> 00:10:14,810
of actions which only host have and

00:10:11,959 --> 00:10:16,850
which is not to be a host is the worry

00:10:14,810 --> 00:10:19,190
realistically reason because the way to

00:10:16,850 --> 00:10:23,060
router is wrong impervia put network

00:10:19,190 --> 00:10:24,380
basically but it can be for example you

00:10:23,060 --> 00:10:27,110
have 10 calls about the probably you

00:10:24,380 --> 00:10:29,930
have a 1000 VM running at it for

00:10:27,110 --> 00:10:32,540
probably 100 we are on that you you

00:10:29,930 --> 00:10:35,269
won't like to cut all these kind of

00:10:32,540 --> 00:10:40,220
things probably meadow is that a real

00:10:35,269 --> 00:10:41,449
holes that we have and there are some

00:10:40,220 --> 00:10:43,579
there's some also there are some

00:10:41,449 --> 00:10:46,399
difference if you want to say that

00:10:43,579 --> 00:10:48,709
compelled how comment like shooting in

00:10:46,399 --> 00:10:52,250
then come to the cow come at the extreme

00:10:48,709 --> 00:10:55,600
very well in then in thin case

00:10:52,250 --> 00:10:59,870
previously we use exactly to call some

00:10:55,600 --> 00:11:01,730
sound some plug in to the same host we

00:10:59,870 --> 00:11:03,649
stay that's the main server coaches the

00:11:01,730 --> 00:11:05,750
hosts the first and it's in host the

00:11:03,649 --> 00:11:08,180
world you the attach to execution

00:11:05,750 --> 00:11:12,339
through that the host through the link

00:11:08,180 --> 00:11:15,829
local address to the virtual router and

00:11:12,339 --> 00:11:17,089
the part for the webmail case because we

00:11:15,829 --> 00:11:21,319
cannot gain in a

00:11:17,089 --> 00:11:25,040
says to the to the host of wind wellness

00:11:21,319 --> 00:11:27,649
so we in fact we put another leak in the

00:11:25,040 --> 00:11:29,389
virtual router in the control network so

00:11:27,649 --> 00:11:31,430
the manager can well be able to

00:11:29,389 --> 00:11:34,309
communicate with which were routed

00:11:31,430 --> 00:11:37,209
directly so this this thing's a

00:11:34,309 --> 00:11:39,889
different and also the KVM case is

00:11:37,209 --> 00:11:42,050
similar to the Zen we need to get to the

00:11:39,889 --> 00:11:45,379
KVM host the first and the execute

00:11:42,050 --> 00:11:48,980
command through the link local address

00:11:45,379 --> 00:11:51,050
to the to the virtual router that you

00:11:48,980 --> 00:11:55,790
there are different ways to execute this

00:11:51,050 --> 00:11:57,769
command and so there are some like are

00:11:55,790 --> 00:12:02,089
some a challenge to how to make this

00:11:57,769 --> 00:12:04,879
working in same way but as you see that

00:12:02,089 --> 00:12:06,709
the virtual router is oh the command

00:12:04,879 --> 00:12:09,199
execution is basically on the script

00:12:06,709 --> 00:12:11,480
around so the most important thing is

00:12:09,199 --> 00:12:14,029
how to can generate the parameter for

00:12:11,480 --> 00:12:16,189
this group of scripts but this part is

00:12:14,029 --> 00:12:19,579
the most the same across the every

00:12:16,189 --> 00:12:22,790
hypervisor so we got something

00:12:19,579 --> 00:12:24,800
I work out some hypervisor space fix

00:12:22,790 --> 00:12:28,519
things here and we call somewhere common

00:12:24,800 --> 00:12:31,129
code we probably can use here we haven't

00:12:28,519 --> 00:12:33,379
made the standing change to this before

00:12:31,129 --> 00:12:35,240
the philosophy released but do we have a

00:12:33,379 --> 00:12:37,850
bouncer we have down something and the

00:12:35,240 --> 00:12:40,160
photo for release to get people when

00:12:37,850 --> 00:12:41,929
they try to fix one bug in the which

00:12:40,160 --> 00:12:43,370
router script he won't just a drive and

00:12:41,929 --> 00:12:46,459
manage it has to all the hypervisor and

00:12:43,370 --> 00:12:48,970
the modified every saying I read lines

00:12:46,459 --> 00:12:53,079
into each hypervisor to get this work

00:12:48,970 --> 00:12:53,079
and now yes

00:13:00,920 --> 00:13:09,160
no no no of course the the command when

00:13:07,190 --> 00:13:11,660
you apply one rule the rule will be

00:13:09,160 --> 00:13:14,330
represented as the parameter to the bash

00:13:11,660 --> 00:13:17,420
script and then transferred to which are

00:13:14,330 --> 00:13:20,120
out of the institution but as we as we

00:13:17,420 --> 00:13:22,070
put here we won't we made some

00:13:20,120 --> 00:13:24,470
improvement on this part but this only

00:13:22,070 --> 00:13:25,940
for the shamrock hold we didn't do

00:13:24,470 --> 00:13:27,710
anything

00:13:25,940 --> 00:13:29,990
there is the something there's something

00:13:27,710 --> 00:13:36,410
we modified but it's very minor compared

00:13:29,990 --> 00:13:37,940
to what we know basically not there's

00:13:36,410 --> 00:13:41,870
some there's some there I think they're

00:13:37,940 --> 00:13:46,610
one more to case because sometimes they

00:13:41,870 --> 00:13:49,940
are for example for the VM data the web

00:13:46,610 --> 00:13:52,460
data from Xen and KVM they probably

00:13:49,940 --> 00:13:55,160
generated web data in the hook in the

00:13:52,460 --> 00:13:57,530
host then copied to the wish router but

00:13:55,160 --> 00:13:59,180
the firmware world they'd use some they

00:13:57,530 --> 00:14:02,150
just regenerated fire directing the

00:13:59,180 --> 00:14:04,310
water router so we changed this way we

00:14:02,150 --> 00:14:05,930
make is unified to just the generator

00:14:04,310 --> 00:14:09,970
file in the virtual world and make is

00:14:05,930 --> 00:14:13,820
more easier first unified interface and

00:14:09,970 --> 00:14:17,030
another issue is the traditional network

00:14:13,820 --> 00:14:20,390
developed commands in the cloud stack

00:14:17,030 --> 00:14:22,850
I'm going to exclude one by one you just

00:14:20,390 --> 00:14:25,490
down one institution as a way for this

00:14:22,850 --> 00:14:28,160
result and the process with another one

00:14:25,490 --> 00:14:31,450
so that's the way that's the way we

00:14:28,160 --> 00:14:34,790
process with all others some extra

00:14:31,450 --> 00:14:36,290
commands and network element commands

00:14:34,790 --> 00:14:38,060
for the virtual router or some storage

00:14:36,290 --> 00:14:43,130
command every command will process this

00:14:38,060 --> 00:14:47,510
way but this will give us a much

00:14:43,130 --> 00:14:49,760
headache when you have some say 1000 VMs

00:14:47,510 --> 00:14:50,240
running on this network of course the

00:14:49,760 --> 00:14:52,580
birch

00:14:50,240 --> 00:14:55,100
davell means the 1000 th to the entry

00:14:52,580 --> 00:14:57,950
and the 1000 vm data and probably more

00:14:55,100 --> 00:15:01,670
of our rules apply on this switch router

00:14:57,950 --> 00:15:04,250
so when you try to upgrade this virtual

00:15:01,670 --> 00:15:06,080
router to a new version in the folks for

00:15:04,250 --> 00:15:08,570
example upgrade photostory to falafel

00:15:06,080 --> 00:15:11,450
you all need to recreate this virtual

00:15:08,570 --> 00:15:12,890
router and it well the Bannister

00:15:11,450 --> 00:15:13,610
roberson command one by one to watch for

00:15:12,890 --> 00:15:14,990
the new

00:15:13,610 --> 00:15:18,560
creative which router and there will

00:15:14,990 --> 00:15:22,970
take large significant significant

00:15:18,560 --> 00:15:25,010
amount of time sometime I think before

00:15:22,970 --> 00:15:28,579
the people change sometime our customer

00:15:25,010 --> 00:15:31,430
reports half an hour and even more for

00:15:28,579 --> 00:15:33,200
just a starting one which router so of

00:15:31,430 --> 00:15:35,660
course that's because which roughly is

00:15:33,200 --> 00:15:37,970
being used in a much larger scale the

00:15:35,660 --> 00:15:49,760
poor deployment but that's still

00:15:37,970 --> 00:15:52,839
something we need to we need to fix so

00:15:49,760 --> 00:15:55,850
finally in the photo for we unified out

00:15:52,839 --> 00:15:58,610
Java logic of the how to program to what

00:15:55,850 --> 00:16:01,430
router into one resource

00:15:58,610 --> 00:16:05,079
this one's called which routing resource

00:16:01,430 --> 00:16:07,490
is in a passage using uninvited KVM so I

00:16:05,079 --> 00:16:09,380
think back to the two or three years ago

00:16:07,490 --> 00:16:12,800
we already have the intention to make it

00:16:09,380 --> 00:16:14,630
one unified but we didn't do it at that

00:16:12,800 --> 00:16:16,910
time so finally in the photo for

00:16:14,630 --> 00:16:18,410
released we make it one place so now if

00:16:16,910 --> 00:16:20,420
you want to add one feature to the

00:16:18,410 --> 00:16:22,670
virtual router you don't need to cross

00:16:20,420 --> 00:16:25,070
hold hypervisor that has to hold of all

00:16:22,670 --> 00:16:27,860
the hypervisor one by one to just make

00:16:25,070 --> 00:16:30,110
sure that you was form of this parameter

00:16:27,860 --> 00:16:32,240
books in the old one in every

00:16:30,110 --> 00:16:34,670
hypervisors you can just modify an added

00:16:32,240 --> 00:16:40,100
feature in the switch routing resources

00:16:34,670 --> 00:16:42,680
and one every host resource well why the

00:16:40,100 --> 00:16:45,680
resource representing the host well gets

00:16:42,680 --> 00:16:48,980
one instance of this which were routing

00:16:45,680 --> 00:16:51,680
resource and another thing is as I said

00:16:48,980 --> 00:16:54,949
as in the people in the before sometimes

00:16:51,680 --> 00:16:57,290
we have to we have different way of the

00:16:54,949 --> 00:16:58,940
execution somehow we execute it directly

00:16:57,290 --> 00:17:00,019
on the virtual router for example for

00:16:58,940 --> 00:17:01,730
the realm where everything we need to

00:17:00,019 --> 00:17:03,980
gather on a virtual router because we

00:17:01,730 --> 00:17:06,949
have no way to access the host we had

00:17:03,980 --> 00:17:09,079
behind under end but for the Katie

00:17:06,949 --> 00:17:12,829
Hamlin's and some time we just do things

00:17:09,079 --> 00:17:15,169
on the host and then copy scene so just

00:17:12,829 --> 00:17:20,270
use other remote code to virtual router

00:17:15,169 --> 00:17:22,339
we also described we also scrapped all

00:17:20,270 --> 00:17:24,290
this kind of operation on the holes that

00:17:22,339 --> 00:17:27,410
we just assumed that every command you'd

00:17:24,290 --> 00:17:29,150
be running under which router and

00:17:27,410 --> 00:17:34,010
every state you get from which route

00:17:29,150 --> 00:17:35,660
will be running out can well be running

00:17:34,010 --> 00:17:37,550
under which were out instead of running

00:17:35,660 --> 00:17:41,330
on the host and put something from the

00:17:37,550 --> 00:17:43,940
water router and in order to achieve

00:17:41,330 --> 00:17:46,220
this we introduced a new way to router

00:17:43,940 --> 00:17:48,530
deployer interface which means if you

00:17:46,220 --> 00:17:51,170
want to have your hypervisor support the

00:17:48,530 --> 00:17:54,070
creating a virtual area which router you

00:17:51,170 --> 00:17:57,410
need to implement this interface and

00:17:54,070 --> 00:18:01,790
here the prepare command and the cleanup

00:17:57,410 --> 00:18:04,160
command is basically used for the NIC

00:18:01,790 --> 00:18:06,140
plugin because the different headlights

00:18:04,160 --> 00:18:08,570
have different ways to plug in a

00:18:06,140 --> 00:18:11,540
of course they coined the defender it of

00:18:08,570 --> 00:18:13,190
course and different api's and the

00:18:11,540 --> 00:18:15,730
prepare commander clean up command is

00:18:13,190 --> 00:18:18,200
based and mostly using for this Nick

00:18:15,730 --> 00:18:20,240
hypervisor dependence Nick plugging

00:18:18,200 --> 00:18:22,850
things and also you can use it for the

00:18:20,240 --> 00:18:25,010
other purposes because for example the

00:18:22,850 --> 00:18:27,080
access IP of the worm well it's

00:18:25,010 --> 00:18:28,910
different France and amphibian which is

00:18:27,080 --> 00:18:31,730
a link-local the worm we all were just

00:18:28,910 --> 00:18:34,010
use one IP rolled upon the management

00:18:31,730 --> 00:18:36,560
network so that's why you can also

00:18:34,010 --> 00:18:40,160
fixing this prepare command interface

00:18:36,560 --> 00:18:43,790
and another two common things is

00:18:40,160 --> 00:18:46,370
excluding we are is very obviously we

00:18:43,790 --> 00:18:49,280
just want to execute this script with

00:18:46,370 --> 00:18:53,750
this parameter and this VR and the copy

00:18:49,280 --> 00:18:55,130
of i2 we are is more of a three and the

00:18:53,750 --> 00:18:57,680
copy to for a copy fight we are

00:18:55,130 --> 00:18:59,330
currently only used with load balancer

00:18:57,680 --> 00:19:00,860
which goes for the load event so we

00:18:59,330 --> 00:19:03,800
generate a coffee configuration file

00:19:00,860 --> 00:19:05,540
then copy to to be are for use and the

00:19:03,800 --> 00:19:10,460
aggregate command will talk about later

00:19:05,540 --> 00:19:12,880
to to speed up the command execution for

00:19:10,460 --> 00:19:12,880
the virtual router

00:19:20,820 --> 00:19:26,500
and now we introduce the aggregate

00:19:24,160 --> 00:19:30,820
magazine to accelerate to the command

00:19:26,500 --> 00:19:32,860
execution this this new interface where

00:19:30,820 --> 00:19:35,530
only the new commands we're earning

00:19:32,860 --> 00:19:38,640
involved when you reboot router or the

00:19:35,530 --> 00:19:40,960
router recreating so you probably

00:19:38,640 --> 00:19:43,870
remember that I talked about the

00:19:40,960 --> 00:19:46,240
finalize commands and start so this

00:19:43,870 --> 00:19:49,900
command were mostly to only involved in

00:19:46,240 --> 00:19:52,450
that part because the first thing is

00:19:49,900 --> 00:19:55,780
when you programming VR is possible to

00:19:52,450 --> 00:19:59,770
fail but if you are applying something

00:19:55,780 --> 00:20:02,650
already working before it's more likely

00:19:59,770 --> 00:20:06,370
to fail second things we want to

00:20:02,650 --> 00:20:09,190
maintain the order of this other command

00:20:06,370 --> 00:20:13,360
send it to the we are we don't want to

00:20:09,190 --> 00:20:16,390
say that you send some command which is

00:20:13,360 --> 00:20:18,970
aggregating haven't been executed yet

00:20:16,390 --> 00:20:21,039
but a later you want to some state pool

00:20:18,970 --> 00:20:25,059
to try to get the latest results we

00:20:21,039 --> 00:20:26,860
didn't consider this situation so for

00:20:25,059 --> 00:20:29,620
now the aggregation command is only

00:20:26,860 --> 00:20:33,130
involving the booty and crating process

00:20:29,620 --> 00:20:35,289
and what keeps down is basically you can

00:20:33,130 --> 00:20:38,409
in fact you can guess is the delayed

00:20:35,289 --> 00:20:40,780
it's real exclusion of the command until

00:20:38,409 --> 00:20:45,820
you say that I am finished just that

00:20:40,780 --> 00:20:48,780
execute all these command I send and the

00:20:45,820 --> 00:20:51,909
result is you don't need to travel

00:20:48,780 --> 00:20:56,980
100,000 times to the virtual router just

00:20:51,909 --> 00:20:58,240
for executed 1000 1000 HDD entries you

00:20:56,980 --> 00:21:01,570
can just do it once

00:20:58,240 --> 00:21:03,840
so that's safe a significant amount of

00:21:01,570 --> 00:21:03,840
time

00:21:06,680 --> 00:21:16,430
yeah sorry yeah yeah it's down on the

00:21:14,630 --> 00:21:19,220
other demand the server is basically

00:21:16,430 --> 00:21:23,510
dung in the SCOTUS which routing

00:21:19,220 --> 00:21:26,660
resources anything on the VR site was

00:21:23,510 --> 00:21:29,390
not being impacted except we are we had

00:21:26,660 --> 00:21:32,860
one script of course to deal with this

00:21:29,390 --> 00:21:32,860
new command in the men sir

00:21:40,299 --> 00:21:45,700
here's some details about aggregation

00:21:43,259 --> 00:21:49,869
mechanism we introduced the aggregated

00:21:45,700 --> 00:21:54,580
control command three actions staff

00:21:49,869 --> 00:21:57,070
finished cleanup and when you say when

00:21:54,580 --> 00:21:59,919
you start a location command you have

00:21:57,070 --> 00:22:01,989
the Ares command you send a later to the

00:21:59,919 --> 00:22:05,559
same virtual router well be putting the

00:22:01,989 --> 00:22:07,269
queue and the execution request into

00:22:05,559 --> 00:22:10,179
resource well immediately returns

00:22:07,269 --> 00:22:14,019
success to the caller but command has

00:22:10,179 --> 00:22:18,339
been executed until you say that you

00:22:14,019 --> 00:22:21,219
send that finish irrigation command at

00:22:18,339 --> 00:22:24,159
that time the aggregate command will

00:22:21,219 --> 00:22:25,869
generate one single configuration file

00:22:24,159 --> 00:22:28,389
based on the waters commands in the

00:22:25,869 --> 00:22:31,599
queue and the copy that configuring file

00:22:28,389 --> 00:22:33,339
to the virtual router and then execute

00:22:31,599 --> 00:22:36,099
that's applied to configuration file

00:22:33,339 --> 00:22:36,999
under which router it's a one copy to

00:22:36,099 --> 00:22:40,529
the virtual router and otherwise

00:22:36,999 --> 00:22:46,209
suggests execution so to SSH instead of

00:22:40,529 --> 00:22:49,269
what we can match and the coming up just

00:22:46,209 --> 00:22:52,899
in case something goes wrong you will

00:22:49,269 --> 00:22:56,249
need this command to clean up the

00:22:52,899 --> 00:23:00,759
command the current command Q but

00:22:56,249 --> 00:23:03,190
basically as no sting can go very wrong

00:23:00,759 --> 00:23:05,709
at this time otherwise is coding error

00:23:03,190 --> 00:23:07,749
because it's everything happening at a

00:23:05,709 --> 00:23:09,759
menu server it's doesn't involve the

00:23:07,749 --> 00:23:11,499
active two stage of this host for

00:23:09,759 --> 00:23:13,209
example the stay that is connected in

00:23:11,499 --> 00:23:16,059
the in the past where say that's this

00:23:13,209 --> 00:23:18,489
command fail but now its own we are just

00:23:16,059 --> 00:23:21,459
at that one where the failure will only

00:23:18,489 --> 00:23:23,969
show as the finance commences and the

00:23:21,459 --> 00:23:26,950
final finish command execution

00:23:23,969 --> 00:23:29,769
so basically doing the generative

00:23:26,950 --> 00:23:32,559
process will generate all commands you

00:23:29,769 --> 00:23:38,820
want to refute it is very hard to get

00:23:32,559 --> 00:23:38,820
wrong yes

00:23:40,450 --> 00:23:49,550
yeah okay that well how about dress a

00:23:47,660 --> 00:23:50,810
little later I've got sizing everybody

00:23:49,550 --> 00:23:56,260
cares about what's the performance

00:23:50,810 --> 00:24:11,600
really like just a big little patient

00:23:56,260 --> 00:24:14,210
yes yes for now we wait for now we do it

00:24:11,600 --> 00:24:16,490
that way but so this is mechanism as I

00:24:14,210 --> 00:24:18,710
talk I were talking later where him in

00:24:16,490 --> 00:24:20,210
able the possibility of doing that in

00:24:18,710 --> 00:24:21,980
the more etiquette and way just around

00:24:20,210 --> 00:24:24,260
the square but for now yes we're doing

00:24:21,980 --> 00:24:25,700
that's just a whole bunch of first

00:24:24,260 --> 00:24:34,970
configuration there and we run our

00:24:25,700 --> 00:24:37,310
script yes but I said well okay that's

00:24:34,970 --> 00:24:46,040
the current situation but as you may see

00:24:37,310 --> 00:24:47,720
a term is already worried pressed some

00:24:46,040 --> 00:24:51,740
more details about application control

00:24:47,720 --> 00:24:55,670
command because when we put a command

00:24:51,740 --> 00:24:57,410
into cue we um we only say that we are

00:24:55,670 --> 00:25:00,800
the only supported us say you are

00:24:57,410 --> 00:25:04,610
treating true for everything of force so

00:25:00,800 --> 00:25:05,960
we cannot support any Puri command so if

00:25:04,610 --> 00:25:07,700
you want to get a version of the virtual

00:25:05,960 --> 00:25:10,970
router don't use this and in fact we

00:25:07,700 --> 00:25:13,970
will prohibit use this and of course

00:25:10,970 --> 00:25:17,600
automation is sounding only used to when

00:25:13,970 --> 00:25:19,640
putting up or recreating and there's no

00:25:17,600 --> 00:25:23,810
flow back there's no road back magnetism

00:25:19,640 --> 00:25:25,250
for now and every one coffee one script

00:25:23,810 --> 00:25:26,900
extrusion failure well resulting

00:25:25,250 --> 00:25:29,720
everything following failure and

00:25:26,900 --> 00:25:33,290
probably at that time because it is the

00:25:29,720 --> 00:25:37,580
doing the we are creating process so I

00:25:33,290 --> 00:25:40,430
think basically you stock and should

00:25:37,580 --> 00:25:44,060
exist - we put a word detail logins we

00:25:40,430 --> 00:25:46,940
are we are ver clock cloud dialogue this

00:25:44,060 --> 00:25:49,070
one is rotated and the well just have

00:25:46,940 --> 00:25:53,530
the every information you probably need

00:25:49,070 --> 00:25:53,530
to bring doing the script is the is to

00:25:58,360 --> 00:26:01,870
performance management cases describe

00:26:00,370 --> 00:26:04,170
how I measure the performance I

00:26:01,870 --> 00:26:07,240
basically wrote one unit test and

00:26:04,170 --> 00:26:09,340
implement this which will router deploy

00:26:07,240 --> 00:26:10,990
interface and I created one we are and

00:26:09,340 --> 00:26:11,380
the translated directly against that we

00:26:10,990 --> 00:26:13,720
are

00:26:11,380 --> 00:26:15,220
I also Emir ate the two different ways

00:26:13,720 --> 00:26:17,710
to run in which were out to commence

00:26:15,220 --> 00:26:20,110
when he's on the whole jump and the host

00:26:17,710 --> 00:26:22,990
first hold on the host and then assess

00:26:20,110 --> 00:26:24,190
you through the local name link below go

00:26:22,990 --> 00:26:26,110
to the virtual router and other way is

00:26:24,190 --> 00:26:28,450
the direct command of dueling local

00:26:26,110 --> 00:26:34,600
which reflect the way after Zen and worm

00:26:28,450 --> 00:26:39,400
well here's the result everybody cares

00:26:34,600 --> 00:26:43,450
for so the yellow one is for the Zen the

00:26:39,400 --> 00:26:45,430
blue one is the VMware result and the

00:26:43,450 --> 00:26:49,360
green one is that aggregate reach out as

00:26:45,430 --> 00:26:51,520
you see that the Delta of this applied

00:26:49,360 --> 00:26:54,850
to the one thousand rules basically I

00:26:51,520 --> 00:26:56,830
think need to very large scale and that

00:26:54,850 --> 00:27:00,480
they are pitching you can see that it's

00:26:56,830 --> 00:27:03,850
basically the time because that you SSH

00:27:00,480 --> 00:27:08,770
so that then basically takes the two

00:27:03,850 --> 00:27:12,640
time prizes the as time as well to

00:27:08,770 --> 00:27:15,100
assess you intruder into the virtual

00:27:12,640 --> 00:27:17,860
router and you see that the polyphony

00:27:15,100 --> 00:27:19,630
rule is basically once the aggregator is

00:27:17,860 --> 00:27:22,540
about half of the women well that

00:27:19,630 --> 00:27:26,170
one-third of them and the ICP and the

00:27:22,540 --> 00:27:28,900
web data is about I think it tends about

00:27:26,170 --> 00:27:31,930
after Zen and fifth about where mail

00:27:28,900 --> 00:27:35,740
somehow so you can see that how many

00:27:31,930 --> 00:27:37,450
times we spend on just as a edge and

00:27:35,740 --> 00:27:42,340
they're also pretty sure these kind of

00:27:37,450 --> 00:27:44,890
things so only this I think is not where

00:27:42,340 --> 00:27:47,320
we even if you can change but it's not

00:27:44,890 --> 00:27:48,640
it's worth straightforward I'm this kind

00:27:47,320 --> 00:27:51,610
of straightforward shanty well make a

00:27:48,640 --> 00:27:53,230
large difference and then you can see

00:27:51,610 --> 00:27:56,890
that's the one thousand port forwarding

00:27:53,230 --> 00:27:58,210
rules that the real time to is true to

00:27:56,890 --> 00:28:01,530
the truth is basically what you see

00:27:58,210 --> 00:28:01,530
there's a greater command

00:28:05,480 --> 00:28:09,950
and the questions yes

00:28:17,419 --> 00:28:22,940
every hypervisor will be operated in

00:28:20,119 --> 00:28:26,090
doing the process so the Sten and

00:28:22,940 --> 00:28:28,159
William well because I think it's just

00:28:26,090 --> 00:28:29,749
compared to full-time assets as due to

00:28:28,159 --> 00:28:32,749
time as I said which is in a cable in

00:28:29,749 --> 00:28:34,820
the into this case but a 1000 or 2000 s

00:28:32,749 --> 00:28:38,090
that's a big difference but the one had

00:28:34,820 --> 00:28:39,889
the 204 that's I think this is really

00:28:38,090 --> 00:28:42,769
hard to tell difference so the aggregate

00:28:39,889 --> 00:28:52,249
result here is shown on the post have

00:28:42,769 --> 00:28:58,129
Weiser's okay we are running very fast

00:28:52,249 --> 00:29:01,820
and sewers was playing so by this way we

00:28:58,129 --> 00:29:03,740
know we still excluding the script one

00:29:01,820 --> 00:29:05,419
by one into virtual router but is to

00:29:03,740 --> 00:29:07,369
enable the possibility that we can do

00:29:05,419 --> 00:29:09,470
this more elegant in the future because

00:29:07,369 --> 00:29:12,499
we know what we have what we want and

00:29:09,470 --> 00:29:14,480
this which were out configuration so we

00:29:12,499 --> 00:29:16,220
can probably do say that we generally

00:29:14,480 --> 00:29:18,649
configure a file from the menu server

00:29:16,220 --> 00:29:20,840
that coffee to the I really just do the

00:29:18,649 --> 00:29:23,990
text replacement in the virtual router

00:29:20,840 --> 00:29:25,759
restarted service there that's the sound

00:29:23,990 --> 00:29:27,649
of discussion touched this involved a

00:29:25,759 --> 00:29:29,809
lot more things about what's the status

00:29:27,649 --> 00:29:32,360
softer which route is a consistent with

00:29:29,809 --> 00:29:34,659
the menu server but that's make the

00:29:32,360 --> 00:29:39,080
aggregate command makes the doable

00:29:34,659 --> 00:29:40,309
another thing another thing I want to

00:29:39,080 --> 00:29:45,259
mention about is that we're still

00:29:40,309 --> 00:29:47,210
working on another up to further to

00:29:45,259 --> 00:29:49,970
provide the baton better mechanism to

00:29:47,210 --> 00:29:52,549
customer to upgrade this virtual router

00:29:49,970 --> 00:29:53,690
because for now every time we want to

00:29:52,549 --> 00:29:57,110
upgrade which we rather we need to

00:29:53,690 --> 00:29:59,389
generate a new template and ISO and that

00:29:57,110 --> 00:30:03,679
we need to copy that and probably every

00:29:59,389 --> 00:30:06,110
time when you have some security bugs

00:30:03,679 --> 00:30:09,529
for example the recent one you know

00:30:06,110 --> 00:30:11,869
that's the open SSL use you don't need

00:30:09,529 --> 00:30:13,879
to generate all the template and replace

00:30:11,869 --> 00:30:17,779
all the ways worried worried

00:30:13,879 --> 00:30:19,639
it's very hurt so I'm we are discussing

00:30:17,779 --> 00:30:23,659
on one way just use the Debian

00:30:19,639 --> 00:30:26,240
repository to use the Debian way to just

00:30:23,659 --> 00:30:28,399
upgrade the switch router and you

00:30:26,240 --> 00:30:30,140
probably need to set up wiling well

00:30:28,399 --> 00:30:33,140
local repository and

00:30:30,140 --> 00:30:35,000
the Arabic router can get the get the

00:30:33,140 --> 00:30:36,980
latest upgrade security upgrade to front

00:30:35,000 --> 00:30:39,650
a B&O the upgrade front crawl stack from

00:30:36,980 --> 00:30:42,290
there's a triple and and that you the

00:30:39,650 --> 00:30:45,080
Decatur the latest status and be secure

00:30:42,290 --> 00:30:46,429
this - out the post item is under

00:30:45,080 --> 00:30:48,890
discussion that we have we don't have

00:30:46,429 --> 00:30:53,780
the any plan for this now but this is

00:30:48,890 --> 00:30:58,450
what we have in mind okay I think that's

00:30:53,780 --> 00:30:58,450

YouTube URL: https://www.youtube.com/watch?v=0lxaYOjvghQ


