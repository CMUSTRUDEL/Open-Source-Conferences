Title: Make Your First CloudStack Cloud Successful - Tim Mackey
Publication date: 2014-04-23
Playlist: CloudStack Collaboration Conference North America 2014
Description: 
	CloudStack Collaboration Conference North America 2014
Captions: 
	00:00:00,000 --> 00:00:05,250
so my name is my name is Tim Mackey I'm

00:00:03,720 --> 00:00:07,410
with citrix I'm in the citrix open

00:00:05,250 --> 00:00:09,570
source business office I'm the community

00:00:07,410 --> 00:00:12,980
manager for xenserver one bits

00:00:09,570 --> 00:00:16,199
evangelist an occasional coder did a

00:00:12,980 --> 00:00:18,470
little small patch for CloudStack

00:00:16,199 --> 00:00:20,369
yesterday there's about 17,000 lines

00:00:18,470 --> 00:00:22,890
it's pretty good way to start things

00:00:20,369 --> 00:00:23,939
I've done a bunch of cool things that

00:00:22,890 --> 00:00:25,140
you can see up there and I thought I

00:00:23,939 --> 00:00:26,699
describe any of them in great gory

00:00:25,140 --> 00:00:28,439
detail but it's always nice when you can

00:00:26,699 --> 00:00:31,170
use relativity and a problem make

00:00:28,439 --> 00:00:35,280
product out of it if you want to find me

00:00:31,170 --> 00:00:37,649
i'm at sensor berar me on twitter this

00:00:35,280 --> 00:00:39,530
deck along with various versions of this

00:00:37,649 --> 00:00:43,770
will also be up in my SlideShare

00:00:39,530 --> 00:00:47,100
probably by tomorrow evening or so just

00:00:43,770 --> 00:00:48,899
depending on my mood so that's that's my

00:00:47,100 --> 00:00:50,309
basic background I've actually been with

00:00:48,899 --> 00:00:53,430
citrix now for a little over 10 years

00:00:50,309 --> 00:00:58,039
which makes me a lifer and various

00:00:53,430 --> 00:01:00,809
technology rules architect consultant se

00:00:58,039 --> 00:01:02,940
guy who talks guy who makes things and

00:01:00,809 --> 00:01:05,369
breaks things so today we're going to

00:01:02,940 --> 00:01:07,380
talk about making your CloudStack cloud

00:01:05,369 --> 00:01:09,150
successful being out of the box and

00:01:07,380 --> 00:01:11,430
internally we have a lot of teams that

00:01:09,150 --> 00:01:12,840
go and take CloudStack because we're

00:01:11,430 --> 00:01:14,909
building clouds back into things like

00:01:12,840 --> 00:01:16,470
xendesktop we're building cloud as part

00:01:14,909 --> 00:01:17,880
of citrix cloud platform and they want

00:01:16,470 --> 00:01:19,860
to understand the technologies but they

00:01:17,880 --> 00:01:22,860
come from a traditional data center

00:01:19,860 --> 00:01:23,939
management mindset and when they go and

00:01:22,860 --> 00:01:25,909
look at cloud site for the first time

00:01:23,939 --> 00:01:27,840
one of the things that they run into is

00:01:25,909 --> 00:01:29,759
but it doesn't work the way that I want

00:01:27,840 --> 00:01:30,659
it to work because the way that I want

00:01:29,759 --> 00:01:32,759
it to work is based on the best

00:01:30,659 --> 00:01:34,770
practices that i already have not

00:01:32,759 --> 00:01:36,150
necessarily the way the clouds designed

00:01:34,770 --> 00:01:37,380
to work which is kind of what erin was

00:01:36,150 --> 00:01:39,780
talking about in the last session about

00:01:37,380 --> 00:01:41,520
being able to have essentially native

00:01:39,780 --> 00:01:42,750
applications designed for cloud versus

00:01:41,520 --> 00:01:45,180
enterprise applications which are

00:01:42,750 --> 00:01:47,990
enterprise applications so the first

00:01:45,180 --> 00:01:50,850
thing is understanding who owns what

00:01:47,990 --> 00:01:55,649
which I'd like to refer to as beware the

00:01:50,850 --> 00:01:58,380
Kraken first thing when i went and built

00:01:55,649 --> 00:01:59,579
my first cloudstack cloud it took me six

00:01:58,380 --> 00:02:02,729
weeks to get my head around the fact

00:01:59,579 --> 00:02:04,619
that i didn't go into vcenter and manage

00:02:02,729 --> 00:02:06,329
it I did not go into zen center and

00:02:04,619 --> 00:02:08,009
management I did not go and do all the

00:02:06,329 --> 00:02:09,929
things that I used to do before I did

00:02:08,009 --> 00:02:12,750
not go and create an NF

00:02:09,929 --> 00:02:14,819
SSR and have it just work I did not go

00:02:12,750 --> 00:02:16,230
and bind ISIL libraries my templates

00:02:14,819 --> 00:02:17,909
weren't the same as templates within

00:02:16,230 --> 00:02:21,659
xenserver all of these things are just

00:02:17,909 --> 00:02:23,549
different not worse not anything else

00:02:21,659 --> 00:02:25,319
they're just different I see continually

00:02:23,549 --> 00:02:27,540
people struggling over well how do I do

00:02:25,319 --> 00:02:28,620
this oh I managed my network by going

00:02:27,540 --> 00:02:30,659
into the network tab and I go and I

00:02:28,620 --> 00:02:32,040
create new networks and no you don't do

00:02:30,659 --> 00:02:34,139
that in CloudStack because cloudstack

00:02:32,040 --> 00:02:35,670
takes care of these things for it it's a

00:02:34,139 --> 00:02:38,219
scalability improvements another

00:02:35,670 --> 00:02:40,769
management paradigm so who owns what

00:02:38,219 --> 00:02:43,590
who's mine mine mine mine mine mine mine

00:02:40,769 --> 00:02:47,129
the end of the day that's one of the

00:02:43,590 --> 00:02:49,200
pieces of success understanding what the

00:02:47,129 --> 00:02:51,629
as a service component really means is

00:02:49,200 --> 00:02:53,280
part of the problem what are we

00:02:51,629 --> 00:02:54,810
provisioning our provisioning

00:02:53,280 --> 00:02:56,519
infrastructure we provisioning apps are

00:02:54,810 --> 00:03:00,930
we provisioning both are we what exactly

00:02:56,519 --> 00:03:02,519
are we provisioning and who owns it from

00:03:00,930 --> 00:03:04,980
a management tool set I already

00:03:02,519 --> 00:03:08,750
mentioned about the overlap between the

00:03:04,980 --> 00:03:11,340
something center and cloud stack itself

00:03:08,750 --> 00:03:12,419
the most important piece though is if

00:03:11,340 --> 00:03:14,699
you're successful you're truly

00:03:12,419 --> 00:03:17,970
successful you've built it people want

00:03:14,699 --> 00:03:21,959
to use it so who owns what so this is

00:03:17,970 --> 00:03:24,870
this is the the fuzzy part of things and

00:03:21,959 --> 00:03:26,729
so that's the fuzzy part of things

00:03:24,870 --> 00:03:29,489
that's the backdrop I'm now going to go

00:03:26,729 --> 00:03:31,349
into some moderately deep things that

00:03:29,489 --> 00:03:33,840
most people don't think about when

00:03:31,349 --> 00:03:34,889
they're trying to design for cloud so if

00:03:33,840 --> 00:03:36,209
I look at traditional server

00:03:34,889 --> 00:03:37,409
virtualization which is where a lot of

00:03:36,209 --> 00:03:38,970
these people are coming from they're

00:03:37,409 --> 00:03:41,970
used to things like vm densities in the

00:03:38,970 --> 00:03:43,650
teens single digits teens they're loose

00:03:41,970 --> 00:03:45,689
used to doing things like not

00:03:43,650 --> 00:03:47,729
necessarily over-committing memory not

00:03:45,689 --> 00:03:48,870
necessarily over-committing CPU I want

00:03:47,729 --> 00:03:50,579
to make certain that I'd get guaranteed

00:03:48,870 --> 00:03:52,530
performance out of the thing that I'm

00:03:50,579 --> 00:03:53,970
provisioning I have whatever my

00:03:52,530 --> 00:03:56,879
management paradigm is on top of this

00:03:53,970 --> 00:03:59,430
the things like I oh they're relatively

00:03:56,879 --> 00:04:00,569
low there's really no templates are

00:03:59,430 --> 00:04:01,799
going to do whatever they wanted to do

00:04:00,569 --> 00:04:04,290
and it'll be whatever that they've built

00:04:01,799 --> 00:04:06,030
and so that's the traditional world

00:04:04,290 --> 00:04:09,030
that's what they're usually thinking

00:04:06,030 --> 00:04:11,129
about next step up very citric see

00:04:09,030 --> 00:04:12,509
desktop virtualization and desktop

00:04:11,129 --> 00:04:14,099
virtualization environment you're doing

00:04:12,509 --> 00:04:15,959
a lot of overcommit you've introduced

00:04:14,099 --> 00:04:20,190
the concept of templates there is one

00:04:15,959 --> 00:04:21,040
windows XP one windows 71 windows 7 with

00:04:20,190 --> 00:04:22,570
these apps over

00:04:21,040 --> 00:04:25,300
built into it that you're doing is your

00:04:22,570 --> 00:04:28,030
deployment you have now concepts of boot

00:04:25,300 --> 00:04:30,070
storms you have I Oh constraints you

00:04:28,030 --> 00:04:31,840
have overcommitted resources and your vm

00:04:30,070 --> 00:04:34,180
density is now jumped up I put up there

00:04:31,840 --> 00:04:37,150
50 to 100 VMs / host and that's kind of

00:04:34,180 --> 00:04:38,620
the average mark that we see and when

00:04:37,150 --> 00:04:44,050
you start to throw things in like

00:04:38,620 --> 00:04:44,980
graphics and higher CPU requirement for

00:04:44,050 --> 00:04:47,890
different types of were closed it will

00:04:44,980 --> 00:04:50,230
go down and that's where the templated

00:04:47,890 --> 00:04:52,900
model starts to play out where you want

00:04:50,230 --> 00:04:54,460
to say this type of cluster is going to

00:04:52,900 --> 00:04:56,140
behave this way because it has that type

00:04:54,460 --> 00:04:58,950
of hardware in it which also means that

00:04:56,140 --> 00:05:01,810
it has well that type of usage profile

00:04:58,950 --> 00:05:04,060
mapping that into CloudStack that could

00:05:01,810 --> 00:05:05,530
be a zone where you now have the

00:05:04,060 --> 00:05:09,220
templates or gun provision for that and

00:05:05,530 --> 00:05:11,350
so map into things I but myself up to

00:05:09,220 --> 00:05:14,890
cloud services the vm density jumps

00:05:11,350 --> 00:05:16,450
again i could be looking at 5250 BMS

00:05:14,890 --> 00:05:19,650
with the latest sense server were up to

00:05:16,450 --> 00:05:24,160
650 VMs we can support on a host

00:05:19,650 --> 00:05:26,920
VMware's had 512 for ages microsoft has

00:05:24,160 --> 00:05:29,470
now 1024 VMS / host as their stated

00:05:26,920 --> 00:05:32,140
maximum so the densities have gone way

00:05:29,470 --> 00:05:35,740
up but this is also a largely templated

00:05:32,140 --> 00:05:38,320
environment indeterminate network

00:05:35,740 --> 00:05:39,820
profiles who knows exactly what's going

00:05:38,320 --> 00:05:41,440
to be running at what point in time how

00:05:39,820 --> 00:05:44,740
am i going to separate this is all part

00:05:41,440 --> 00:05:47,290
of the puzzle so that's the vm density

00:05:44,740 --> 00:05:49,300
part and so that's again a paradigm

00:05:47,290 --> 00:05:52,090
shift if i want to take a look at

00:05:49,300 --> 00:05:53,500
network operations well i first have to

00:05:52,090 --> 00:05:55,510
go all the way back to the beginning in

00:05:53,500 --> 00:05:57,550
the world before virtualization

00:05:55,510 --> 00:05:59,830
everything was nice and simple you had a

00:05:57,550 --> 00:06:01,480
physical host you had a physical switch

00:05:59,830 --> 00:06:03,760
it had a wire the one between the two of

00:06:01,480 --> 00:06:08,110
them and it did something what it did it

00:06:03,760 --> 00:06:09,640
did and if I wanted to do say port

00:06:08,110 --> 00:06:12,040
mirroring or I wanted to monitor it I

00:06:09,640 --> 00:06:13,540
wanted to define some policies on it it

00:06:12,040 --> 00:06:15,280
was very simple because i had that

00:06:13,540 --> 00:06:17,200
machine I had that switch port I could

00:06:15,280 --> 00:06:18,760
do whatever I needed to do but along

00:06:17,200 --> 00:06:20,830
comes virtualization now jammed a whole

00:06:18,760 --> 00:06:23,410
bunch of things on top of a single host

00:06:20,830 --> 00:06:26,230
so if i wanted to filter traffic for a

00:06:23,410 --> 00:06:28,180
specific service well that's a little

00:06:26,230 --> 00:06:30,820
bit harder because well i have to filter

00:06:28,180 --> 00:06:31,780
as opposed to I just know and it

00:06:30,820 --> 00:06:32,390
actually becomes a little bit more

00:06:31,780 --> 00:06:33,920
complicated

00:06:32,390 --> 00:06:35,870
a vm moves from one host to another

00:06:33,920 --> 00:06:37,160
because everything that I've defined the

00:06:35,870 --> 00:06:38,420
physical layer all it doesn't work

00:06:37,160 --> 00:06:40,010
because it's now on a different physical

00:06:38,420 --> 00:06:42,560
host and the ports are matching and so

00:06:40,010 --> 00:06:46,310
forth so that's a simple mirroring

00:06:42,560 --> 00:06:47,690
traffic problem if i look at the skip

00:06:46,310 --> 00:06:51,800
over that part i look at network

00:06:47,690 --> 00:06:54,860
policies i have as a virtual machine as

00:06:51,800 --> 00:06:57,140
a as a workload administrator i have the

00:06:54,860 --> 00:06:58,430
ability to control the IP address and

00:06:57,140 --> 00:07:00,590
the ports and the applications that are

00:06:58,430 --> 00:07:01,700
running in it as a virtualization

00:07:00,590 --> 00:07:04,100
administrator have the ability to

00:07:01,700 --> 00:07:06,140
control the mac address which means that

00:07:04,100 --> 00:07:08,480
if someone's going to co-opt a system

00:07:06,140 --> 00:07:10,820
they have admin rights on the service

00:07:08,480 --> 00:07:13,070
well they can go and do whatever if they

00:07:10,820 --> 00:07:15,890
have virtualization admin rights they

00:07:13,070 --> 00:07:17,210
can now define things that can go and

00:07:15,890 --> 00:07:19,430
subvert the policies that have been

00:07:17,210 --> 00:07:21,380
defined so by going directly at a

00:07:19,430 --> 00:07:23,000
virtual switch I can go and say this

00:07:21,380 --> 00:07:24,950
service is bound to this MAC address

00:07:23,000 --> 00:07:27,020
which has this port which has this

00:07:24,950 --> 00:07:30,140
protocol which has these IP addresses

00:07:27,020 --> 00:07:32,390
and now wherever that vm happens to live

00:07:30,140 --> 00:07:36,110
in my environment those policies are

00:07:32,390 --> 00:07:38,300
applied to the thing the vm and even if

00:07:36,110 --> 00:07:42,440
it's subverted you can't go and mess

00:07:38,300 --> 00:07:44,780
with it on the network but when you take

00:07:42,440 --> 00:07:47,720
a look at network tools they have a

00:07:44,780 --> 00:07:51,350
certain philosophy the philosophy is i

00:07:47,720 --> 00:07:54,410
have a physical environment i have 24 48

00:07:51,350 --> 00:07:55,850
port switches I'm not dynamically

00:07:54,410 --> 00:07:57,320
creating things I'm not having people

00:07:55,850 --> 00:07:58,490
randomly running out there and plugging

00:07:57,320 --> 00:08:01,040
things in and unplugging things in

00:07:58,490 --> 00:08:04,280
random orders but in virtualized world

00:08:01,040 --> 00:08:07,160
you do have that you start up one vm

00:08:04,280 --> 00:08:09,260
well that might have port one second one

00:08:07,160 --> 00:08:11,450
core two and so forth you move the

00:08:09,260 --> 00:08:14,120
machine that had poor to from one host

00:08:11,450 --> 00:08:17,630
to another well that part two is now

00:08:14,120 --> 00:08:20,270
poor 16 on new host and port 2 is now

00:08:17,630 --> 00:08:22,340
vacant and the new vm that gets created

00:08:20,270 --> 00:08:24,230
on the first dose might get port 2 so

00:08:22,340 --> 00:08:26,330
all of these things start to play into

00:08:24,230 --> 00:08:28,220
how the tools work and most of the tools

00:08:26,330 --> 00:08:30,260
today still and this slides actually

00:08:28,220 --> 00:08:32,780
three years old most tools today are

00:08:30,260 --> 00:08:34,670
still pulled they still assume that

00:08:32,780 --> 00:08:36,500
you're have this largely static

00:08:34,670 --> 00:08:39,229
environment so in a cloud operations

00:08:36,500 --> 00:08:41,599
world being able to understand what you

00:08:39,229 --> 00:08:42,860
have is very difficult if using

00:08:41,599 --> 00:08:45,500
traditional management tools because the

00:08:42,860 --> 00:08:46,350
topology is always changing things are

00:08:45,500 --> 00:08:47,640
always coming up and going

00:08:46,350 --> 00:08:49,230
because after all we have a successful

00:08:47,640 --> 00:08:56,610
cloud and what am I going to do to

00:08:49,230 --> 00:08:58,550
manage a monitoring so that my most

00:08:56,610 --> 00:09:04,920
favorite and most insidious of problems

00:08:58,550 --> 00:09:07,890
so when I have a high dense highly dense

00:09:04,920 --> 00:09:10,830
hyper dense environment and I have say

00:09:07,890 --> 00:09:15,030
xenserver 62 of 500 VMs or vsphere with

00:09:10,830 --> 00:09:17,250
500 or so forth and I want to run all

00:09:15,030 --> 00:09:19,830
those VMs and I want to run them in a

00:09:17,250 --> 00:09:21,330
rack that contains whatever number of

00:09:19,830 --> 00:09:23,790
hosts that I can cram in that rack and

00:09:21,330 --> 00:09:29,190
I've got a top of racks which it should

00:09:23,790 --> 00:09:36,300
all just work you're laughing what's the

00:09:29,190 --> 00:09:40,620
problem so if I take a legacy switch say

00:09:36,300 --> 00:09:43,320
like a catalyst 3570 v2 that has an art

00:09:40,620 --> 00:09:44,490
table depth of between six thousand and

00:09:43,320 --> 00:09:48,290
twelve thousand depending on how you set

00:09:44,490 --> 00:09:50,640
it up do the math off of any of these

00:09:48,290 --> 00:09:55,500
virtual machine densities and what

00:09:50,640 --> 00:09:59,040
happens when you create that plus one vm

00:09:55,500 --> 00:10:01,470
the vm starts the VMS working from its

00:09:59,040 --> 00:10:04,710
perspective but it can't connect to the

00:10:01,470 --> 00:10:06,990
network because of an art limitation ok

00:10:04,710 --> 00:10:08,190
so that's an older switch it's probably

00:10:06,990 --> 00:10:10,020
one of the ones that you might have is

00:10:08,190 --> 00:10:11,160
your first cloud too but let's just say

00:10:10,020 --> 00:10:14,190
that you've got a lot of money and you

00:10:11,160 --> 00:10:15,540
can go buy some UCS well the same

00:10:14,190 --> 00:10:18,360
constraints exist in the fabric

00:10:15,540 --> 00:10:20,760
extenders they have the same 6,000 to

00:10:18,360 --> 00:10:22,470
12,000 our table so all you've done is

00:10:20,760 --> 00:10:24,990
you shrink the problem in terms of book

00:10:22,470 --> 00:10:26,610
the host but you still have that problem

00:10:24,990 --> 00:10:28,230
and as virtual machine densities

00:10:26,610 --> 00:10:29,430
increase you start to end up with

00:10:28,230 --> 00:10:30,840
smaller vm is trying to do more

00:10:29,430 --> 00:10:32,640
interesting things you can actually

00:10:30,840 --> 00:10:34,530
create a problem where things start and

00:10:32,640 --> 00:10:38,010
they don't necessarily work the way that

00:10:34,530 --> 00:10:41,100
you expect them to so those guys don't

00:10:38,010 --> 00:10:44,400
start so that's the networking we got

00:10:41,100 --> 00:10:45,780
density we've got network now on for

00:10:44,400 --> 00:10:50,880
storage because after all these things

00:10:45,780 --> 00:10:54,540
need to live someplace so I'm designing

00:10:50,880 --> 00:10:57,660
a new cloud service and I want to have

00:10:54,540 --> 00:11:00,300
that cloud service be able to host say

00:10:57,660 --> 00:11:01,860
500 BMS and this is actually just

00:11:00,300 --> 00:11:03,480
random arbitrary units down here it's

00:11:01,860 --> 00:11:05,100
not so many one's pointed out to me that

00:11:03,480 --> 00:11:09,510
looks an awful lot like australian

00:11:05,100 --> 00:11:12,690
dollars as you progress up the the chart

00:11:09,510 --> 00:11:16,140
the provisioning efficiency is going to

00:11:12,690 --> 00:11:17,370
drop and when you hit 500 okay it's

00:11:16,140 --> 00:11:20,010
going to be at its worst possible

00:11:17,370 --> 00:11:21,810
performance design-wise I want to be

00:11:20,010 --> 00:11:24,080
able to go step five hundred thousand

00:11:21,810 --> 00:11:26,580
and so forth to scale out my environment

00:11:24,080 --> 00:11:28,830
but if I have a traditional storage

00:11:26,580 --> 00:11:32,550
system behind this what I actually see

00:11:28,830 --> 00:11:34,050
as I go 500 maybe I get to 750 maybe I

00:11:32,550 --> 00:11:38,340
get to a thousand now I got to do a

00:11:34,050 --> 00:11:39,810
redesign so what's my alternative where

00:11:38,340 --> 00:11:43,980
are my bottlenecks how do I actually

00:11:39,810 --> 00:11:46,710
scale this thing out so we can have

00:11:43,980 --> 00:11:48,870
storage per pod so now if I storage for

00:11:46,710 --> 00:11:50,880
pot I can have controllers that are

00:11:48,870 --> 00:11:53,490
doing the right things that have an i/o

00:11:50,880 --> 00:11:55,020
performance envelope that we understand

00:11:53,490 --> 00:11:57,810
and we can actually design against and

00:11:55,020 --> 00:12:01,230
so I can go and scale that and do the

00:11:57,810 --> 00:12:04,530
right things however that can be pretty

00:12:01,230 --> 00:12:07,530
expensive in time so there is actually a

00:12:04,530 --> 00:12:11,640
better way what if instead of doing this

00:12:07,530 --> 00:12:14,250
in 500 vm chunks what if i was doing it

00:12:11,640 --> 00:12:16,830
and say 50 BM and using local storage

00:12:14,250 --> 00:12:19,320
instead now i don't have the shared

00:12:16,830 --> 00:12:22,290
storage limitations of controller i/o

00:12:19,320 --> 00:12:25,650
envelopes and so forth I don't have the

00:12:22,290 --> 00:12:27,330
benefit of live migration but I'm

00:12:25,650 --> 00:12:30,540
trading it off in terms of a more

00:12:27,330 --> 00:12:35,280
deterministic design so where is my cost

00:12:30,540 --> 00:12:36,750
versus my scalability and I see a

00:12:35,280 --> 00:12:38,430
puzzled look on your face and I will

00:12:36,750 --> 00:12:41,070
fill that puzzled look in about four

00:12:38,430 --> 00:12:43,740
slides so if i look at the cost

00:12:41,070 --> 00:12:46,740
performance trend I'm seeing this is

00:12:43,740 --> 00:12:50,160
where my redesign occurs here so I can

00:12:46,740 --> 00:12:51,450
go into a pods and that's cool or I can

00:12:50,160 --> 00:12:52,560
go and take a look at local storage I

00:12:51,450 --> 00:12:55,770
can get something that looks an awful

00:12:52,560 --> 00:12:57,660
lot like this and that's why a lot of

00:12:55,770 --> 00:13:00,210
people when they start looking at how

00:12:57,660 --> 00:13:01,830
I'm going to do cloud go towards the

00:13:00,210 --> 00:13:03,870
local storage based solution because

00:13:01,830 --> 00:13:06,240
when you buy the server you probably

00:13:03,870 --> 00:13:09,000
have some amount of local storage in it

00:13:06,240 --> 00:13:12,330
and today it's probably a lot of local

00:13:09,000 --> 00:13:14,100
storage which can hold a lot of dms but

00:13:12,330 --> 00:13:15,360
a lot of storage does

00:13:14,100 --> 00:13:18,300
necessarily mean that it's going to

00:13:15,360 --> 00:13:21,269
perform well so we have to understand

00:13:18,300 --> 00:13:22,589
how the disk usage is in place so see

00:13:21,269 --> 00:13:24,480
how the colors turned out when I reform

00:13:22,589 --> 00:13:27,360
out of this okay so user data is purple

00:13:24,480 --> 00:13:29,339
the OS partition is blue the individual

00:13:27,360 --> 00:13:30,509
BMS disk is the combination of the tune

00:13:29,339 --> 00:13:33,209
you get some amount of swap for the

00:13:30,509 --> 00:13:36,360
hypervisor to do its thing and that's

00:13:33,209 --> 00:13:38,220
your total disk so if I'm looking at the

00:13:36,360 --> 00:13:40,470
amount of VMs that I can fit on there I

00:13:38,220 --> 00:13:43,199
know the size of the disk I know what

00:13:40,470 --> 00:13:45,240
the OS partition plus the user data is I

00:13:43,199 --> 00:13:47,670
can build out a formula says this is how

00:13:45,240 --> 00:13:50,339
many VMS I can fit on here that's

00:13:47,670 --> 00:13:52,380
assuming a fully inflated underlying

00:13:50,339 --> 00:13:54,389
disk image which is fine that actually

00:13:52,380 --> 00:13:56,970
makes life very simple but it's not

00:13:54,389 --> 00:13:59,130
overly efficient so if I take a look at

00:13:56,970 --> 00:14:01,079
this instead with thin provisioning or

00:13:59,130 --> 00:14:02,670
for that matter even sparse allocation I

00:14:01,079 --> 00:14:05,430
come back with i still have my swap

00:14:02,670 --> 00:14:06,540
space I have an OS partition I use your

00:14:05,430 --> 00:14:08,339
data is going to be whatever it's going

00:14:06,540 --> 00:14:10,769
to be but because it's then provisioned

00:14:08,339 --> 00:14:13,199
i can now clone off of all of these

00:14:10,769 --> 00:14:16,529
things that end up with a very small OS

00:14:13,199 --> 00:14:17,819
partition tremendous benefit when you're

00:14:16,529 --> 00:14:19,800
talking about templated environments

00:14:17,819 --> 00:14:21,750
like what we have in cloud because now

00:14:19,800 --> 00:14:25,459
the data is what's consuming the disc

00:14:21,750 --> 00:14:29,130
not all this relatively constant OS crap

00:14:25,459 --> 00:14:32,160
gives me a vm count if i look at the

00:14:29,130 --> 00:14:33,959
performance i can go and take a look at

00:14:32,160 --> 00:14:36,839
what type of disk do i have in the

00:14:33,959 --> 00:14:40,170
system SSDs obviously have an incredible

00:14:36,839 --> 00:14:42,870
amount of I ops behind them what is the

00:14:40,170 --> 00:14:45,319
right penalty associated with it this is

00:14:42,870 --> 00:14:48,029
put your values in here that makes sense

00:14:45,319 --> 00:14:51,509
these make sense for a little bit more

00:14:48,029 --> 00:14:53,550
of a desktop II windows type world plug

00:14:51,509 --> 00:14:56,310
all of that in and you now end up with a

00:14:53,550 --> 00:14:59,480
vm count that is I ops / iOS per diem

00:14:56,310 --> 00:15:02,370
what is the constraint for your storage

00:14:59,480 --> 00:15:03,329
what do you need to have one of those

00:15:02,370 --> 00:15:05,670
three things is going to be your

00:15:03,329 --> 00:15:08,220
limiting factor and that's going to be a

00:15:05,670 --> 00:15:12,269
lot closer to what you actually want to

00:15:08,220 --> 00:15:14,730
have for your type of storage SSD local

00:15:12,269 --> 00:15:17,370
storage okay cool spinning disk local

00:15:14,730 --> 00:15:21,120
storage cool shared disk local stores

00:15:17,370 --> 00:15:25,730
shared disk with SSD back caches what

00:15:21,120 --> 00:15:30,360
have you that'll all play into this so

00:15:25,730 --> 00:15:32,910
those are three big things now we really

00:15:30,360 --> 00:15:34,620
do want to have a successful cloud so

00:15:32,910 --> 00:15:35,940
the first thing to do is take a look at

00:15:34,620 --> 00:15:38,990
some of the other clouds that are out

00:15:35,940 --> 00:15:42,930
there and I really do like the zynga one

00:15:38,990 --> 00:15:45,780
because the analogy here is that a

00:15:42,930 --> 00:15:47,640
public cloud is a minivan any vans can

00:15:45,780 --> 00:15:49,350
hold lots of things they go a reasonable

00:15:47,640 --> 00:15:52,010
speed they have lots of little features

00:15:49,350 --> 00:15:54,390
that maybe you use or you don't use and

00:15:52,010 --> 00:15:56,340
there's nothing really sexy about them

00:15:54,390 --> 00:15:57,450
they're not tuned for your applications

00:15:56,340 --> 00:15:59,250
they're not going to do everything that

00:15:57,450 --> 00:16:01,320
you want to do so the Z cloud within

00:15:59,250 --> 00:16:03,690
sing good that they have the analogy

00:16:01,320 --> 00:16:06,060
that this is a race car it is purpose

00:16:03,690 --> 00:16:09,540
built and tuned for their application

00:16:06,060 --> 00:16:11,610
set built awful CloudStack optimized for

00:16:09,540 --> 00:16:13,350
social gaming and built around the

00:16:11,610 --> 00:16:15,300
requirements of their application so

00:16:13,350 --> 00:16:17,280
things like in-memory databases

00:16:15,300 --> 00:16:18,840
single-digit latency between compute

00:16:17,280 --> 00:16:21,120
nodes all of these things that they

00:16:18,840 --> 00:16:24,540
wanted to control that they couldn't

00:16:21,120 --> 00:16:26,070
control in a public cloud scenario they

00:16:24,540 --> 00:16:28,800
looked at it from a costing perspective

00:16:26,070 --> 00:16:31,590
why should i rent what I can own for

00:16:28,800 --> 00:16:32,730
less but if you're going to own it for

00:16:31,590 --> 00:16:35,160
less you actually have to know what

00:16:32,730 --> 00:16:37,680
owning it means I was talking to a

00:16:35,160 --> 00:16:39,690
customer about two and a half months ago

00:16:37,680 --> 00:16:42,120
that they went on this grand public

00:16:39,690 --> 00:16:45,300
cloud this grand cloud initiative and

00:16:42,120 --> 00:16:49,710
what they ended up with was a cost per

00:16:45,300 --> 00:16:52,230
vm of one thousand dollars per month and

00:16:49,710 --> 00:16:54,000
that was because they looked at it from

00:16:52,230 --> 00:16:56,340
I have the enterprise data center

00:16:54,000 --> 00:16:58,140
requirements to have servers that look

00:16:56,340 --> 00:16:59,550
like this storage that looks like that

00:16:58,140 --> 00:17:01,530
and a network that looks like this other

00:16:59,550 --> 00:17:05,310
thing so they bundled it all together

00:17:01,530 --> 00:17:08,220
and they ended up with storage that made

00:17:05,310 --> 00:17:10,020
no sense in a cloud network management

00:17:08,220 --> 00:17:12,690
overhead that made no sense in a cloud

00:17:10,020 --> 00:17:15,209
and a vm density that made no sense in a

00:17:12,690 --> 00:17:16,740
cloud they ran that for about six months

00:17:15,209 --> 00:17:20,160
before some audit came along and said

00:17:16,740 --> 00:17:21,570
guys you can do better and they went

00:17:20,160 --> 00:17:23,010
back and they we architected this and

00:17:21,570 --> 00:17:25,410
they're now looking at something closer

00:17:23,010 --> 00:17:27,180
to about 150 dollars per vm and in their

00:17:25,410 --> 00:17:28,500
case they actually had to just change

00:17:27,180 --> 00:17:29,850
out what they were doing for storage

00:17:28,500 --> 00:17:31,590
because it was a storage component that

00:17:29,850 --> 00:17:33,120
was the big cost it wasn't something

00:17:31,590 --> 00:17:36,810
like say vSphere licenses or something

00:17:33,120 --> 00:17:38,540
like that optimizing applications might

00:17:36,810 --> 00:17:40,920
be part of it

00:17:38,540 --> 00:17:42,360
understanding how the usage profile is

00:17:40,920 --> 00:17:44,820
going to be when somebody wants a new

00:17:42,360 --> 00:17:46,740
something so you get an open enrollment

00:17:44,820 --> 00:17:48,300
you get very popular website you get or

00:17:46,740 --> 00:17:49,800
whatever what's the spike look like and

00:17:48,300 --> 00:17:53,100
who's going to actually own that and

00:17:49,800 --> 00:17:54,030
then look at how to just do work and

00:17:53,100 --> 00:17:56,850
what you're going to do when they do

00:17:54,030 --> 00:17:57,690
happen telcos they look at things a

00:17:56,850 --> 00:17:59,580
little bit differently they have a

00:17:57,690 --> 00:18:01,410
utility computing model at the outset

00:17:59,580 --> 00:18:03,720
you go and you want to sign up for a new

00:18:01,410 --> 00:18:05,700
cell phone plan you can get that

00:18:03,720 --> 00:18:07,980
cellphone pretty quick you can add all

00:18:05,700 --> 00:18:10,110
your data plans you can add your voice

00:18:07,980 --> 00:18:11,670
elements to it you can subscribe to any

00:18:10,110 --> 00:18:13,710
number of features and they have this

00:18:11,670 --> 00:18:15,840
laundry list of menu that you can go and

00:18:13,710 --> 00:18:17,040
say i won i want i want cool oops wait a

00:18:15,840 --> 00:18:19,550
min i don't want to spend that kind of

00:18:17,040 --> 00:18:21,900
money so let's get rid of a few things

00:18:19,550 --> 00:18:25,080
they have that whole self service

00:18:21,900 --> 00:18:29,310
flexibility piece as a core tenant they

00:18:25,080 --> 00:18:31,590
understand that all of these things cost

00:18:29,310 --> 00:18:34,980
money and that when you spend more money

00:18:31,590 --> 00:18:37,800
you should have more feature function as

00:18:34,980 --> 00:18:39,540
a result of it and so that's one of the

00:18:37,800 --> 00:18:42,000
the tenants that if you had that

00:18:39,540 --> 00:18:43,230
thousand-dollar of diem well you had to

00:18:42,000 --> 00:18:44,430
have a good reason for it and the guy

00:18:43,230 --> 00:18:46,530
who was deciding that they wanted to

00:18:44,430 --> 00:18:48,570
provision that vm should have a sense of

00:18:46,530 --> 00:18:51,680
the cost that that was going to have so

00:18:48,570 --> 00:18:54,300
they can make that informed decision

00:18:51,680 --> 00:18:55,740
things like provisioning agility fully

00:18:54,300 --> 00:19:00,260
expected in detailed billing and so

00:18:55,740 --> 00:19:04,230
forth so if I bring this all together

00:19:00,260 --> 00:19:06,800
thing number one decide what it is that

00:19:04,230 --> 00:19:09,660
you want to do with your first cloud is

00:19:06,800 --> 00:19:12,870
your first cloud an essay p

00:19:09,660 --> 00:19:14,190
virtualization project probably not

00:19:12,870 --> 00:19:16,860
going to be a successful one out at the

00:19:14,190 --> 00:19:18,330
outset is your first cloud something

00:19:16,860 --> 00:19:21,990
that's looking at say web services or

00:19:18,330 --> 00:19:23,370
maybe it's going to take some simpler

00:19:21,990 --> 00:19:25,230
applications like save file print

00:19:23,370 --> 00:19:27,300
servers or whatever what did we learn

00:19:25,230 --> 00:19:29,760
from virtualization we took the simple

00:19:27,300 --> 00:19:30,690
things first we were successful what are

00:19:29,760 --> 00:19:34,520
the things that we can be successful

00:19:30,690 --> 00:19:36,990
with first because at the end of the day

00:19:34,520 --> 00:19:39,810
this whole idea of fail fast and fail

00:19:36,990 --> 00:19:40,860
often doesn't work with your boss he

00:19:39,810 --> 00:19:42,780
does want to hear yeah it didn't work

00:19:40,860 --> 00:19:44,010
this time yeah we tried and still didn't

00:19:42,780 --> 00:19:46,620
work and it still didn't work I see he

00:19:44,010 --> 00:19:48,930
wants to see this thing works because he

00:19:46,620 --> 00:19:50,130
wants to have a cloud he wants a cloud

00:19:48,930 --> 00:19:51,810
because all this golfing buddies have

00:19:50,130 --> 00:19:55,410
clouds and he needs to have a

00:19:51,810 --> 00:19:56,820
and so when he has a successful cloud

00:19:55,410 --> 00:19:58,440
then he can brag about this cloud that

00:19:56,820 --> 00:19:59,790
he's got and you can build more cloud

00:19:58,440 --> 00:20:03,300
services in and it becomes a

00:19:59,790 --> 00:20:05,370
self-perpetuating truism so who's going

00:20:03,300 --> 00:20:08,400
to have access to it how are they going

00:20:05,370 --> 00:20:10,110
to manage it and when what types of

00:20:08,400 --> 00:20:12,660
operating systems you want to support at

00:20:10,110 --> 00:20:15,750
the outset not five years down the road

00:20:12,660 --> 00:20:17,070
with the lap the next 6-12 months do you

00:20:15,750 --> 00:20:18,150
want to make it only Linux do you want

00:20:17,070 --> 00:20:19,350
to throw some windows in there you want

00:20:18,150 --> 00:20:21,420
to throw some windows in it is a server

00:20:19,350 --> 00:20:23,160
as a desktop this is a specific version

00:20:21,420 --> 00:20:25,350
what type of applications how is this

00:20:23,160 --> 00:20:27,480
all going to be played together who owns

00:20:25,350 --> 00:20:29,610
backup and monitoring what is compliance

00:20:27,480 --> 00:20:30,930
look like do you want to even touch the

00:20:29,610 --> 00:20:35,910
third rail of compliance with your first

00:20:30,930 --> 00:20:37,770
cloud most people say probably not from

00:20:35,910 --> 00:20:39,060
there define what your tenancy

00:20:37,770 --> 00:20:40,920
requirements are if you're building a

00:20:39,060 --> 00:20:43,950
private cloud that probably translates

00:20:40,920 --> 00:20:45,930
into who you are the business units what

00:20:43,950 --> 00:20:46,740
are their real requirements for uses and

00:20:45,930 --> 00:20:48,330
you might start out with a single

00:20:46,740 --> 00:20:50,520
business unit but you have to design

00:20:48,330 --> 00:20:51,510
that tendency in place so Aaron and the

00:20:50,520 --> 00:20:53,700
last session was talking about

00:20:51,510 --> 00:20:55,230
enterprise apps versus cloud apps and he

00:20:53,700 --> 00:20:56,220
had segmentation for production

00:20:55,230 --> 00:20:57,480
environments and development

00:20:56,220 --> 00:20:59,490
environments those are tendency

00:20:57,480 --> 00:21:01,080
requirements those tendency requirements

00:20:59,490 --> 00:21:03,390
translate into how you're going to

00:21:01,080 --> 00:21:05,460
provide the segmentation in here do you

00:21:03,390 --> 00:21:06,930
need vm migration well if you need vm

00:21:05,460 --> 00:21:08,550
migration well you're probably in a

00:21:06,930 --> 00:21:10,800
pooled environment you may need to have

00:21:08,550 --> 00:21:12,240
a che what does that actually mean in

00:21:10,800 --> 00:21:15,870
terms of the architecture that you're

00:21:12,240 --> 00:21:19,440
putting together what does the network

00:21:15,870 --> 00:21:20,940
look like what do keys look like if I

00:21:19,440 --> 00:21:22,680
have my keys stored in a central

00:21:20,940 --> 00:21:24,030
location that everybody has access to do

00:21:22,680 --> 00:21:27,570
I really have an isolated tenant

00:21:24,030 --> 00:21:29,550
environment do I have a scenario where

00:21:27,570 --> 00:21:31,830
someone could subvert the key management

00:21:29,550 --> 00:21:35,910
system and gain access to something else

00:21:31,830 --> 00:21:38,010
that they should not have access to what

00:21:35,910 --> 00:21:40,020
about proving that this thing is going

00:21:38,010 --> 00:21:42,270
to work do you need some form of show

00:21:40,020 --> 00:21:44,310
back do you need some form of

00:21:42,270 --> 00:21:47,130
understanding and communication back to

00:21:44,310 --> 00:21:49,860
the CIO or director of IT or what not

00:21:47,130 --> 00:21:52,170
saying that you know we spent X amount

00:21:49,860 --> 00:21:55,310
of dollars on this thing and yet we're

00:21:52,170 --> 00:21:57,780
actually getting some benefit out of it

00:21:55,310 --> 00:22:00,179
and of course always the great fun of

00:21:57,780 --> 00:22:02,190
compliance and audits

00:22:00,179 --> 00:22:04,529
at no point in time well except for that

00:22:02,190 --> 00:22:07,440
whole catalyst piece that I really talk

00:22:04,529 --> 00:22:09,749
about the hardware because the hardware

00:22:07,440 --> 00:22:12,179
itself the virtualization components

00:22:09,749 --> 00:22:16,950
themselves they should not be your first

00:22:12,179 --> 00:22:18,749
priority who here is running a VMware

00:22:16,950 --> 00:22:24,119
shop or works with customers with VMware

00:22:18,749 --> 00:22:28,320
shops how about KBM based solutions zend

00:22:24,119 --> 00:22:30,899
server based solutions cool so if you're

00:22:28,320 --> 00:22:32,129
a VMware shop and you've always been a

00:22:30,899 --> 00:22:33,659
VMware shop because vmware's done

00:22:32,129 --> 00:22:36,179
everything that you need it to do and

00:22:33,659 --> 00:22:37,409
your first inclination is well I just

00:22:36,179 --> 00:22:39,749
want to put this all on top of game

00:22:37,409 --> 00:22:42,090
where you may not end up with the kind

00:22:39,749 --> 00:22:43,590
of cloud that you want because you're

00:22:42,090 --> 00:22:45,659
starting with the infrastructure first

00:22:43,590 --> 00:22:49,019
instead of what the people want to use

00:22:45,659 --> 00:22:51,360
it let the the rationale that comes down

00:22:49,019 --> 00:22:52,769
that says this is what I want to deliver

00:22:51,360 --> 00:22:54,629
this is how I want to deliver this is

00:22:52,769 --> 00:22:56,990
the constraints that I have dictate that

00:22:54,629 --> 00:22:58,830
yes feature is the correct answer

00:22:56,990 --> 00:23:01,289
because the correct answer might

00:22:58,830 --> 00:23:03,960
actually be these years okay for this

00:23:01,289 --> 00:23:05,039
part of my cloud and cloud sacks really

00:23:03,960 --> 00:23:07,080
cool in that you can have multiple

00:23:05,039 --> 00:23:08,399
hypervisors and they can all be tied

00:23:07,080 --> 00:23:10,049
together in the demo environment that

00:23:08,399 --> 00:23:11,820
Aaron was using in the last session has

00:23:10,049 --> 00:23:14,429
exactly that it's got deseos end servers

00:23:11,820 --> 00:23:16,379
got KBM all in the same zone all nicely

00:23:14,429 --> 00:23:17,999
tied together so that some applications

00:23:16,379 --> 00:23:20,369
can deploy on top of these fearsome on

00:23:17,999 --> 00:23:22,080
top of xenserver as appropriate cost it

00:23:20,369 --> 00:23:24,240
out the way that it needs it makes sense

00:23:22,080 --> 00:23:25,889
to cost it out because from the

00:23:24,240 --> 00:23:28,559
provisioning perspective the user

00:23:25,889 --> 00:23:30,600
shouldn't know and shouldn't care what

00:23:28,559 --> 00:23:32,190
you've got underneath the covers because

00:23:30,600 --> 00:23:36,990
you might change your mind a year from

00:23:32,190 --> 00:23:39,240
now and they shouldn't know multiple

00:23:36,990 --> 00:23:40,889
hypervisors are completely okay bare

00:23:39,240 --> 00:23:44,759
metal as a hypervisor is actually

00:23:40,889 --> 00:23:47,159
perfectly acceptable it's talking to one

00:23:44,759 --> 00:23:50,039
of the consultants and they were telling

00:23:47,159 --> 00:23:51,330
me about a customer that needed to have

00:23:50,039 --> 00:23:54,929
bare metal because virtualization

00:23:51,330 --> 00:23:56,429
scheduling between VMs got in the way of

00:23:54,929 --> 00:23:58,379
what they wanted to do they were doing

00:23:56,429 --> 00:24:00,419
audio video transcoding and they didn't

00:23:58,379 --> 00:24:02,159
want to have the 1970s kung fu movie

00:24:00,419 --> 00:24:04,289
syndrome where the mouth is moving and

00:24:02,159 --> 00:24:06,029
the the actual audio was way out of sync

00:24:04,289 --> 00:24:07,440
because that required someone to

00:24:06,029 --> 00:24:09,240
actually watch the movie and QA the

00:24:07,440 --> 00:24:11,909
movie when they just wanted to shove it

00:24:09,240 --> 00:24:13,129
through this codec system in pop a movie

00:24:11,909 --> 00:24:16,019
out at the end

00:24:13,129 --> 00:24:17,759
do I want to pool resources or not if

00:24:16,019 --> 00:24:19,489
you want to pull the resources you're

00:24:17,759 --> 00:24:23,549
probably looking at shared storage

00:24:19,489 --> 00:24:27,029
that's an extra cost if you want if you

00:24:23,549 --> 00:24:28,830
don't care local storage is fine what

00:24:27,029 --> 00:24:31,139
about cluster size sensor probe is a

00:24:28,830 --> 00:24:34,889
cluster limit of 16 VMware's has cluster

00:24:31,139 --> 00:24:36,330
limit of 32 well four years as his end

00:24:34,889 --> 00:24:37,259
sober guy I've gotten beaten up over the

00:24:36,330 --> 00:24:39,480
fact that their number is bigger than

00:24:37,259 --> 00:24:41,220
our number and we need to have our

00:24:39,480 --> 00:24:44,429
number be bigger because well the number

00:24:41,220 --> 00:24:46,409
is bigger in a cloud environment it

00:24:44,429 --> 00:24:48,359
doesn't matter because if your cloud is

00:24:46,409 --> 00:24:50,909
successful you're going to blow past the

00:24:48,359 --> 00:24:54,029
intrinsic sir limits of your hypervisor

00:24:50,909 --> 00:24:56,009
before you run out of the capabilities

00:24:54,029 --> 00:24:57,690
of your orchestration layer so decide

00:24:56,009 --> 00:24:59,669
something that makes sense for you are

00:24:57,690 --> 00:25:04,080
you talking hosts of one or clusters of

00:24:59,669 --> 00:25:05,519
1 2 3 4 5 10 what makes sense for your

00:25:04,080 --> 00:25:09,359
environment and how do you want to

00:25:05,519 --> 00:25:10,739
manage it primary storage is defined by

00:25:09,359 --> 00:25:11,909
the hypervisor and I had a session

00:25:10,739 --> 00:25:13,080
yesterday that we talked about the

00:25:11,909 --> 00:25:14,190
intersect of all the features and

00:25:13,080 --> 00:25:15,629
functions that you could come out with

00:25:14,190 --> 00:25:19,019
the best hypervisor being the coolest

00:25:15,629 --> 00:25:22,139
one template definition and how storage

00:25:19,019 --> 00:25:23,399
is going to work NFS Swift s3 but you

00:25:22,139 --> 00:25:28,100
have to be aware of how those pieces

00:25:23,399 --> 00:25:31,590
played together and most importantly

00:25:28,100 --> 00:25:37,159
designed for maintainability outages do

00:25:31,590 --> 00:25:39,450
happen things do break things do go down

00:25:37,159 --> 00:25:41,159
system VMS are kind of important about

00:25:39,450 --> 00:25:43,320
sac and so if they go down you might not

00:25:41,159 --> 00:25:44,820
have the access that you expected if

00:25:43,320 --> 00:25:47,009
it's something like say the console

00:25:44,820 --> 00:25:48,359
proxy everyone in that zone suddenly

00:25:47,009 --> 00:25:51,629
can't access their vm is the way that

00:25:48,359 --> 00:25:54,629
they used to stand what it means to have

00:25:51,629 --> 00:25:56,190
a failure in the hypervisor host or the

00:25:54,629 --> 00:25:58,769
storage underneath it and how you're

00:25:56,190 --> 00:26:00,119
going to rectify that both within

00:25:58,769 --> 00:26:01,649
cloudstack from a management perspective

00:26:00,119 --> 00:26:05,549
but also for the instances that are

00:26:01,649 --> 00:26:08,399
running on it and what does it mean to

00:26:05,549 --> 00:26:10,139
support the end-users environment maybe

00:26:08,399 --> 00:26:11,820
your answer is I'm not going to support

00:26:10,139 --> 00:26:13,649
them it's their stuff they're

00:26:11,820 --> 00:26:16,220
responsible but what does that mean when

00:26:13,649 --> 00:26:18,299
they say but I can't access the Internet

00:26:16,220 --> 00:26:22,679
what piece of your stuff could have

00:26:18,299 --> 00:26:24,150
broken the best quote best quote of two

00:26:22,679 --> 00:26:26,170
years ago

00:26:24,150 --> 00:26:28,990
everyone in enterprise has maintenance

00:26:26,170 --> 00:26:29,860
windows Citrix has them every month the

00:26:28,990 --> 00:26:31,390
kind of annoying because it means

00:26:29,860 --> 00:26:32,800
something broke and now I can't access

00:26:31,390 --> 00:26:35,050
my email or can't put an expense report

00:26:32,800 --> 00:26:36,960
in but if your cloud has a maintenance

00:26:35,050 --> 00:26:40,480
window you've probably done it wrong

00:26:36,960 --> 00:26:44,470
because your users don't know and don't

00:26:40,480 --> 00:26:46,240
care they just want their stuff now they

00:26:44,470 --> 00:26:49,470
want their stuff to work now and then

00:26:46,240 --> 00:26:51,580
want their stuff to keep working now and

00:26:49,470 --> 00:26:54,730
Amazon's kind of set the bar that it

00:26:51,580 --> 00:26:56,710
sort of just does work that way so

00:26:54,730 --> 00:26:59,320
that's it for my presentation this deck

00:26:56,710 --> 00:27:05,740
will be up on SlideShare probably by

00:26:59,320 --> 00:27:10,710
tomorrow any questions cool thanks

00:27:05,740 --> 00:27:10,710

YouTube URL: https://www.youtube.com/watch?v=Vf1rWPTE_qk


