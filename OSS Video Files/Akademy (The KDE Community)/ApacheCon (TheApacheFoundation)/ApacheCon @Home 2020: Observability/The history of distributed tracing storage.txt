Title: The history of distributed tracing storage
Publication date: 2020-10-16
Playlist: ApacheCon @Home 2020: Observability
Description: 
	The history of distributed tracing storage
Hongtao Gao

A presentation from ApacheCon @Home 2020
https://apachecon.com/acah2020/

Over the past few years, and coupled with the growing adoption of microservices, distributed tracing has emerged as one of the most commonly used monitoring and troubleshooting methodologies. New tracing tools are increasingly being introduced, driving adoption even further. One of these tools is Apache SkyWalking, a popular open-source tracing, and APM platform. This talk explores the history of the SkyWalking storage module, shows the evolution of distributed tracing storage layers, from the traditional relational database to document-based search engine. I hope that this talk contributes to the understanding of history and also that it helps to clarify the different types of storage that are available to organizations today.

Hongtao Gao is the engineer of tetrate.io and the former Huawei Cloud expert. One of PMC members of Apache SkyWalking and participates in some popular open-source projects such as Apache ShardingSphere and Elastic-Job. He has an in-depth understanding of distributed databases, container scheduling, microservices, ServicMesh, and other technologies.
Captions: 
	00:00:06,420 --> 00:00:10,640
[Music]

00:00:14,160 --> 00:00:17,230
[Music]

00:00:24,960 --> 00:00:28,720
it's great to be here

00:00:26,160 --> 00:00:29,439
with you today in the track i will um

00:00:28,720 --> 00:00:32,079
talk about

00:00:29,439 --> 00:00:33,040
the observability topics in my

00:00:32,079 --> 00:00:45,840
presentation

00:00:33,040 --> 00:00:45,840
i will focus on the storyline

00:00:46,399 --> 00:00:50,960
uh as most of the people know that over

00:00:49,440 --> 00:00:53,360
the past few years

00:00:50,960 --> 00:00:55,199
when the couple is growing under

00:00:53,360 --> 00:00:57,360
adoption of the macro service

00:00:55,199 --> 00:00:58,879
being believed as one of the most

00:00:57,360 --> 00:01:01,760
important monitoring

00:00:58,879 --> 00:01:02,399
and the troubleshooting method in this

00:01:01,760 --> 00:01:04,559
talk

00:01:02,399 --> 00:01:06,560
in this talk i will show you the

00:01:04,559 --> 00:01:07,840
evolution of the distributed tracing

00:01:06,560 --> 00:01:10,000
solid layers

00:01:07,840 --> 00:01:12,560
from the classic because of big data

00:01:10,000 --> 00:01:14,880
basis database to a modern

00:01:12,560 --> 00:01:15,680
document basis search engine and the

00:01:14,880 --> 00:01:19,280
time series

00:01:15,680 --> 00:01:22,320
database that's all be used

00:01:19,280 --> 00:01:25,360
in varied uh environment

00:01:22,320 --> 00:01:28,479
for our continuing so finally

00:01:25,360 --> 00:01:32,000
i will explore apache scout workings

00:01:28,479 --> 00:01:32,479
storage layer as an example to discuss

00:01:32,000 --> 00:01:35,119
about

00:01:32,479 --> 00:01:36,640
how to combinate the various storage

00:01:35,119 --> 00:01:39,840
engines together

00:01:36,640 --> 00:01:42,159
uh skywalking some people will know that

00:01:39,840 --> 00:01:43,680
it's a popular open source tracing and

00:01:42,159 --> 00:01:45,920
api platform

00:01:43,680 --> 00:01:48,159
okay i hope that this talk will

00:01:45,920 --> 00:01:51,840
contribute to

00:01:48,159 --> 00:01:52,640
our audience uh to give to help them to

00:01:51,840 --> 00:01:55,439
understand

00:01:52,640 --> 00:01:56,799
the history and all the history of the

00:01:55,439 --> 00:02:00,159
distributed

00:01:56,799 --> 00:02:02,240
storage layer and it helps to clarify

00:02:00,159 --> 00:02:03,600
the different types between the

00:02:02,240 --> 00:02:06,320
different stories

00:02:03,600 --> 00:02:08,239
and help them to make some decisions how

00:02:06,320 --> 00:02:12,000
to opt to appropriate

00:02:08,239 --> 00:02:14,879
solid layer that's

00:02:12,000 --> 00:02:16,239
oh let me briefly introduce myself uh

00:02:14,879 --> 00:02:19,360
i'm from detroit

00:02:16,239 --> 00:02:22,000
i'm the engineer of the trader the io

00:02:19,360 --> 00:02:23,920
the trade is under company provides a

00:02:22,000 --> 00:02:26,400
practice on the playbooks

00:02:23,920 --> 00:02:28,000
that enterprise can use to modernize

00:02:26,400 --> 00:02:31,120
their people and persist

00:02:28,000 --> 00:02:34,640
based on an alloy the customer

00:02:31,120 --> 00:02:36,720
also can get observability empowered

00:02:34,640 --> 00:02:38,480
by the opportunities are working i'm the

00:02:36,720 --> 00:02:41,760
one of the pmc members

00:02:38,480 --> 00:02:46,800
of opposition working at meantime

00:02:41,760 --> 00:02:50,160
i'm also a pmc member of another rpg

00:02:46,800 --> 00:02:53,040
top project genesphere which

00:02:50,160 --> 00:02:54,319
is a distributed middleware of this

00:02:53,040 --> 00:02:57,280
database so

00:02:54,319 --> 00:02:58,959
that's why i'm really interested in the

00:02:57,280 --> 00:03:01,680
tracing and the storage

00:02:58,959 --> 00:03:02,319
so i want to put them together to show

00:03:01,680 --> 00:03:05,360
you

00:03:02,319 --> 00:03:07,599
uh how they can work how well they can

00:03:05,360 --> 00:03:07,599
work

00:03:08,239 --> 00:03:12,400
okay this is our agent and the first

00:03:11,920 --> 00:03:15,280
part

00:03:12,400 --> 00:03:16,959
we will introduce the tracing to give

00:03:15,280 --> 00:03:20,000
our

00:03:16,959 --> 00:03:22,239
we uh a basic background on the context

00:03:20,000 --> 00:03:23,680
what's the tracing how to storage the

00:03:22,239 --> 00:03:25,760
tracing date

00:03:23,680 --> 00:03:27,680
the second part will focus on the

00:03:25,760 --> 00:03:31,040
classic storage in this

00:03:27,680 --> 00:03:34,400
section we will see the epic table

00:03:31,040 --> 00:03:36,640
the first distributing system

00:03:34,400 --> 00:03:39,519
from google is dapper he used a big

00:03:36,640 --> 00:03:47,840
table as a storage

00:03:39,519 --> 00:03:47,840
layer so

00:04:02,400 --> 00:04:06,159
the king point so this section will

00:04:05,120 --> 00:04:08,959
focus on

00:04:06,159 --> 00:04:09,920
the last part we will show you some

00:04:08,959 --> 00:04:12,480
example

00:04:09,920 --> 00:04:13,200
how sky working to store is his tracing

00:04:12,480 --> 00:04:16,320
date

00:04:13,200 --> 00:04:20,239
how to choose the storage layers

00:04:16,320 --> 00:04:23,840
the process accounts and how to make

00:04:20,239 --> 00:04:26,880
the difference already together

00:04:23,840 --> 00:04:26,880
okay let's start it

00:04:27,120 --> 00:04:31,199
the first one was the tracing we

00:04:28,960 --> 00:04:35,680
introduced the distributed chasing

00:04:31,199 --> 00:04:37,360
storage distributing makes things

00:04:35,680 --> 00:04:39,360
easier we know that we already know

00:04:37,360 --> 00:04:42,240
inside but it makes it

00:04:39,360 --> 00:04:43,360
more harder this applies a lot your

00:04:42,240 --> 00:04:45,759
hearing is allowed

00:04:43,360 --> 00:04:46,479
in the cloud and the internet world but

00:04:45,759 --> 00:04:48,880
in fact

00:04:46,479 --> 00:04:51,280
the original phase is a cloud makes

00:04:48,880 --> 00:04:54,320
things easier which makes things harder

00:04:51,280 --> 00:04:56,639
as we abstracts are always pieces of

00:04:54,320 --> 00:04:58,000
i don't think and any additional

00:04:56,639 --> 00:05:01,039
abstraction

00:04:58,000 --> 00:05:02,800
we create more distributed models under

00:05:01,039 --> 00:05:05,680
distributed system

00:05:02,800 --> 00:05:07,360
we have more places for seeing like the

00:05:05,680 --> 00:05:10,400
latency will come up and

00:05:07,360 --> 00:05:11,360
beat ourselves as also properly said the

00:05:10,400 --> 00:05:15,919
latency is

00:05:11,360 --> 00:05:18,320
one of these things so quota culture

00:05:15,919 --> 00:05:19,120
brand wise cause money we know we all

00:05:18,320 --> 00:05:22,080
know that

00:05:19,120 --> 00:05:23,680
latency lives for arrival so if you can

00:05:22,080 --> 00:05:26,639
can choose latency

00:05:23,680 --> 00:05:27,440
and not how to limit the speed of light

00:05:26,639 --> 00:05:30,880
or

00:05:27,440 --> 00:05:33,919
just keeping light no no one can limit

00:05:30,880 --> 00:05:36,960
the speed of light but you

00:05:33,919 --> 00:05:37,759
you want to get close as possible if you

00:05:36,960 --> 00:05:40,400
want

00:05:37,759 --> 00:05:41,440
so abstraction makes things harder the

00:05:40,400 --> 00:05:43,280
question is like

00:05:41,440 --> 00:05:47,440
where is the things that went wrong and

00:05:43,280 --> 00:05:47,440
the what went wrong inside of light

00:05:47,759 --> 00:05:52,000
yeah this is the real world so we're not

00:05:50,840 --> 00:05:54,880
getting

00:05:52,000 --> 00:05:55,919
that simpler this is generous because

00:05:54,880 --> 00:05:58,639
the front-end

00:05:55,919 --> 00:05:59,600
is a commercial system attached to the

00:05:58,639 --> 00:06:02,160
back-end of

00:05:59,600 --> 00:06:03,840
e-commerce emotional system and there's

00:06:02,160 --> 00:06:07,600
a number of different pieces and

00:06:03,840 --> 00:06:21,840
stories in society that you properly

00:06:07,600 --> 00:06:21,840
familiar with the concept

00:06:54,479 --> 00:06:59,520
is right so opportunity is one of the

00:06:57,919 --> 00:07:03,520
tools you can do with

00:06:59,520 --> 00:07:04,080
this scanner today so how to localize

00:07:03,520 --> 00:07:07,280
the piece of

00:07:04,080 --> 00:07:10,479
insight here the reason it is up to here

00:07:07,280 --> 00:07:13,360
is an observability railroading cooling

00:07:10,479 --> 00:07:14,400
glues what are called four golden

00:07:13,360 --> 00:07:17,840
signals

00:07:14,400 --> 00:07:20,880
and the first as you win second laws

00:07:17,840 --> 00:07:24,960
the third treatises and the

00:07:20,880 --> 00:07:28,160
capacity to describe how to contain them

00:07:24,960 --> 00:07:31,199
small you need to able to look like

00:07:28,160 --> 00:07:31,840
all for them to truly be looking at the

00:07:31,199 --> 00:07:34,720
system

00:07:31,840 --> 00:07:37,280
otherwise you're gonna be able to do

00:07:34,720 --> 00:07:40,880
this my favorite is called from someone

00:07:37,280 --> 00:07:44,000
i really don't know now but besides

00:07:40,880 --> 00:07:44,639
you see but you do know the option for

00:07:44,000 --> 00:07:47,680
here

00:07:44,639 --> 00:07:49,199
and if you are looking at one of those

00:07:47,680 --> 00:07:51,360
things you have no idea

00:07:49,199 --> 00:07:53,599
what's going on inside so you look at

00:07:51,360 --> 00:07:56,720
the map or it is a mesh

00:07:53,599 --> 00:07:59,759
it looks like the uh treasures you can

00:07:56,720 --> 00:08:02,400
find onto a single

00:07:59,759 --> 00:08:04,040
contacts or single meaningful point from

00:08:02,400 --> 00:08:07,039
this map

00:08:04,040 --> 00:08:09,120
[Music]

00:08:07,039 --> 00:08:11,599
this leg lights down into the pool

00:08:09,120 --> 00:08:12,240
without knowing how deep it is so be

00:08:11,599 --> 00:08:14,879
sure

00:08:12,240 --> 00:08:17,680
that you actually looking like all of

00:08:14,879 --> 00:08:17,680
these pieces

00:08:17,840 --> 00:08:27,840
so let's talk about the twisting date

00:08:20,720 --> 00:08:27,840
data model

00:08:30,080 --> 00:08:33,839
your choices have a unique identifier to

00:08:33,120 --> 00:08:36,320
it

00:08:33,839 --> 00:08:37,760
it can be as something as simple as a

00:08:36,320 --> 00:08:40,159
projection id

00:08:37,760 --> 00:08:41,360
it could be as complex as one of the

00:08:40,159 --> 00:08:45,120
emerging standards

00:08:41,360 --> 00:08:48,320
just like opengc even the uuid or some

00:08:45,120 --> 00:08:51,279
like skywalking cheese mode id

00:08:48,320 --> 00:08:52,800
but it has to be unique once you have a

00:08:51,279 --> 00:08:56,560
unique identifier as

00:08:52,800 --> 00:08:59,519
all sorts of three rich religious dates

00:08:56,560 --> 00:09:00,560
you can do without having necessary to

00:08:59,519 --> 00:09:03,839
reinstrument

00:09:00,560 --> 00:09:07,120
everything in the world so chasing

00:09:03,839 --> 00:09:08,000
do fade together but chasing as a high

00:09:07,120 --> 00:09:11,040
volume

00:09:08,000 --> 00:09:13,839
high i cannot date

00:09:11,040 --> 00:09:14,240
so tracing will tell you when things are

00:09:13,839 --> 00:09:16,720
not

00:09:14,240 --> 00:09:17,839
running correctly in a painted mesh

00:09:16,720 --> 00:09:20,160
environment

00:09:17,839 --> 00:09:21,360
treating can tell you something wrong

00:09:20,160 --> 00:09:24,399
and at that time

00:09:21,360 --> 00:09:28,880
point at that point in time

00:09:24,399 --> 00:09:28,880
down into what will what went wrong

00:09:29,519 --> 00:09:33,600
so when you have a distributed choice

00:09:32,560 --> 00:09:36,320
environment

00:09:33,600 --> 00:09:36,720
um you're actually looking like all of

00:09:36,320 --> 00:09:39,279
the

00:09:36,720 --> 00:09:40,640
later in ones that happened with all of

00:09:39,279 --> 00:09:42,320
the little segments

00:09:40,640 --> 00:09:44,320
so you want to put something into a

00:09:42,320 --> 00:09:47,839
performance order and you

00:09:44,320 --> 00:09:49,760
uh the anchor with the length of time

00:09:47,839 --> 00:09:51,440
you wanted to know when something is

00:09:49,760 --> 00:09:54,000
slow or what

00:09:51,440 --> 00:09:55,200
when slow not only inside of a large

00:09:54,000 --> 00:09:58,160
picture of the service

00:09:55,200 --> 00:10:00,000
but actually inside the service itself

00:09:58,160 --> 00:10:00,800
you still want to know what's going on

00:10:00,000 --> 00:10:03,760
inside

00:10:00,800 --> 00:10:04,880
i know then you want to put you in a

00:10:03,760 --> 00:10:07,519
sense just like

00:10:04,880 --> 00:10:08,640
look like a job actually and then you

00:10:07,519 --> 00:10:12,240
wanted to be able

00:10:08,640 --> 00:10:12,880
in a sense look at it visually this is a

00:10:12,240 --> 00:10:16,320
water

00:10:12,880 --> 00:10:18,640
a full blow because that's all from

00:10:16,320 --> 00:10:19,839
top here so a slightly different little

00:10:18,640 --> 00:10:22,560
wavelength of sight

00:10:19,839 --> 00:10:23,440
i will even find out the root cause of

00:10:22,560 --> 00:10:25,440
analyze

00:10:23,440 --> 00:10:27,360
can be my site a lot of what i talk

00:10:25,440 --> 00:10:28,079
about is building on the concept of

00:10:27,360 --> 00:10:30,399
scale

00:10:28,079 --> 00:10:31,600
around the surface while there is a

00:10:30,399 --> 00:10:35,040
service environment

00:10:31,600 --> 00:10:37,920
somebody else is providing the service

00:10:35,040 --> 00:10:38,480
when whether it's a service or home mesh

00:10:37,920 --> 00:10:40,720
environment

00:10:38,480 --> 00:10:41,600
such like working with the east home

00:10:40,720 --> 00:10:44,480
just like

00:10:41,600 --> 00:10:46,240
we always do in for our company but

00:10:44,480 --> 00:10:48,560
there is a macro service

00:10:46,240 --> 00:10:49,839
that will be the complete uh completed

00:10:48,560 --> 00:10:52,480
by yourself

00:10:49,839 --> 00:10:53,120
and that's all really important if your

00:10:52,480 --> 00:10:56,399
problem

00:10:53,120 --> 00:10:59,760
is a single thread on the monolithic

00:10:56,399 --> 00:11:03,040
system you properly don't need to

00:10:59,760 --> 00:11:06,320
is cheesy you can do some old

00:11:03,040 --> 00:11:10,000
tech tours to analyze your performance

00:11:06,320 --> 00:11:12,560
issues when lifeguard complex

00:11:10,000 --> 00:11:14,000
when you are going to actually look at

00:11:12,560 --> 00:11:16,880
the distributing tracing

00:11:14,000 --> 00:11:17,920
that's the ones the important tips for

00:11:16,880 --> 00:11:19,839
for you

00:11:17,920 --> 00:11:21,839
what you are looking at is the end of

00:11:19,839 --> 00:11:22,480
the point you are now looking at the

00:11:21,839 --> 00:11:28,240
parts of

00:11:22,480 --> 00:11:31,519
times in the middle of these two pieces

00:11:28,240 --> 00:11:34,079
the first thing you hear is a span

00:11:31,519 --> 00:11:35,120
span is the shortest and the smallest

00:11:34,079 --> 00:11:38,800
interval

00:11:35,120 --> 00:11:41,519
spans are the scenes that measure from

00:11:38,800 --> 00:11:44,240
instrumented point and the span can be a

00:11:41,519 --> 00:11:47,680
http requires a could be a

00:11:44,240 --> 00:11:50,240
base query let's come here for instance

00:11:47,680 --> 00:11:51,920
in database you will see a query you

00:11:50,240 --> 00:11:54,160
will see a fetch you will see

00:11:51,920 --> 00:11:55,200
a complete you will see all of the

00:11:54,160 --> 00:11:58,240
different pieces

00:11:55,200 --> 00:11:58,800
and then one of these is our unique

00:11:58,240 --> 00:12:02,079
spine

00:11:58,800 --> 00:12:04,959
inside of us here and each one

00:12:02,079 --> 00:12:06,320
how the mutable side of doing this there

00:12:04,959 --> 00:12:08,880
are a lot of ways of

00:12:06,320 --> 00:12:11,120
doing distributed tracing there are

00:12:08,880 --> 00:12:12,959
companies that are building

00:12:11,120 --> 00:12:15,279
all distributed chasing models for

00:12:12,959 --> 00:12:17,760
themselves but most of our users

00:12:15,279 --> 00:12:20,160
adapt to open source on the commercial

00:12:17,760 --> 00:12:24,399
solutions such like skywalking the king

00:12:20,160 --> 00:12:27,519
and other apm provider to the provider

00:12:24,399 --> 00:12:27,519
productions to them

00:12:29,200 --> 00:12:36,240
okay here's uh choose identifier as well

00:12:33,200 --> 00:12:39,760
let's start to finish of the request

00:12:36,240 --> 00:12:40,320
i retrieve id is unique but ids are only

00:12:39,760 --> 00:12:43,200
unique

00:12:40,320 --> 00:12:43,680
within your choice id you can do b you

00:12:43,200 --> 00:12:47,519
can be

00:12:43,680 --> 00:12:49,760
real reason in different ways

00:12:47,519 --> 00:12:51,440
there are pairs that correspond to two

00:12:49,760 --> 00:12:53,839
things there are para

00:12:51,440 --> 00:12:54,639
we just sat out to where the call comes

00:12:53,839 --> 00:12:58,320
from

00:12:54,639 --> 00:13:01,040
and what descending order looks like

00:12:58,320 --> 00:13:01,360
unless there is a lot of the labels

00:13:01,040 --> 00:13:04,160
which

00:13:01,360 --> 00:13:04,480
can be the key in white pairs and could

00:13:04,160 --> 00:13:08,079
be

00:13:04,480 --> 00:13:10,079
whatever you want to inside of jco we

00:13:08,079 --> 00:13:12,800
how the things called the span contacts

00:13:10,079 --> 00:13:16,160
button has a set of values that get

00:13:12,800 --> 00:13:19,440
the ships a long way for the right so

00:13:16,160 --> 00:13:22,160
but combinating this together you can

00:13:19,440 --> 00:13:23,600
go from the identification to the root

00:13:22,160 --> 00:13:26,639
cause analysis

00:13:23,600 --> 00:13:29,200
as fast as we possibly can

00:13:26,639 --> 00:13:30,639
but basically service one called the

00:13:29,200 --> 00:13:33,279
service

00:13:30,639 --> 00:13:34,240
conservancy too so we too record

00:13:33,279 --> 00:13:37,120
solution three

00:13:34,240 --> 00:13:38,240
and the source four uh up here is a

00:13:37,120 --> 00:13:41,760
starting core

00:13:38,240 --> 00:13:44,560
this is no parent id uh it

00:13:41,760 --> 00:13:46,480
calls on parent id reference to the to

00:13:44,560 --> 00:13:49,519
the background the source one

00:13:46,480 --> 00:13:50,560
uh id2 references the uh back to the

00:13:49,519 --> 00:13:53,760
psoas

00:13:50,560 --> 00:13:56,320
that start just shape your point

00:13:53,760 --> 00:13:57,519
here is if you notice that the trace id

00:13:56,320 --> 00:14:00,480
stays the same

00:13:57,519 --> 00:14:02,720
and the spine id change in each one of

00:14:00,480 --> 00:14:05,920
this very simple you know instances

00:14:02,720 --> 00:14:09,440
very simple model of doing things

00:14:05,920 --> 00:14:12,240
multiple the time something like

00:14:09,440 --> 00:14:13,600
what's the new date service or microsoft

00:14:12,240 --> 00:14:16,160
surveys

00:14:13,600 --> 00:14:16,880
about 2000 a running for signal

00:14:16,160 --> 00:14:19,199
transaction

00:14:16,880 --> 00:14:21,519
as a pinpoint how to select a story

00:14:19,199 --> 00:14:25,120
layer for trace and spine to

00:14:21,519 --> 00:14:25,120
guess such amount of dates

00:14:25,360 --> 00:14:29,199
okay let's move on the second part we

00:14:28,240 --> 00:14:32,800
will talk about

00:14:29,199 --> 00:14:35,199
the classic stories

00:14:32,800 --> 00:14:36,480
we will talk about the dapper big table

00:14:35,199 --> 00:14:40,240
and the cassandra

00:14:36,480 --> 00:14:42,839
concerto for the open source solutions

00:14:40,240 --> 00:14:44,160
okay dapper doppler is a good trading

00:14:42,839 --> 00:14:46,480
system that

00:14:44,160 --> 00:14:48,000
was already located to understand the

00:14:46,480 --> 00:14:50,240
system behind from

00:14:48,000 --> 00:14:51,600
search requests now google's a

00:14:50,240 --> 00:14:54,720
production cluster

00:14:51,600 --> 00:14:55,680
generates more than one tb of simple

00:14:54,720 --> 00:14:59,040
trees per day

00:14:55,680 --> 00:15:01,920
from kids open the representation

00:14:59,040 --> 00:15:02,880
that is described uh you know where

00:15:01,920 --> 00:15:05,600
while right and

00:15:02,880 --> 00:15:06,160
under detailed papers uh japanese is a

00:15:05,600 --> 00:15:09,120
double

00:15:06,160 --> 00:15:10,839
a large scale distributed system tracing

00:15:09,120 --> 00:15:14,800
infrastructure

00:15:10,839 --> 00:15:18,000
uh sigma and arjun now amazing guys

00:15:14,800 --> 00:15:19,199
and dub ops um as a similar uh cheese

00:15:18,000 --> 00:15:22,560
model just like

00:15:19,199 --> 00:15:27,279
i explained in the previous section

00:15:22,560 --> 00:15:30,399
double user anal tension based scammer

00:15:27,279 --> 00:15:32,959
just like uh i also talked about uh

00:15:30,399 --> 00:15:34,079
the label system image application on

00:15:32,959 --> 00:15:37,040
the middleware

00:15:34,079 --> 00:15:38,320
acceptor tag every record with a global

00:15:37,040 --> 00:15:40,880
identifier

00:15:38,320 --> 00:15:42,560
the linksys message record back to the

00:15:40,880 --> 00:15:46,880
original

00:15:42,560 --> 00:15:50,800
oh okay sorry for right will disappear

00:15:46,880 --> 00:15:52,880
so i'm back okay and

00:15:50,800 --> 00:15:54,720
so i don't know how to stick where i

00:15:52,880 --> 00:15:56,800
will

00:15:54,720 --> 00:15:59,120
do some summaries about what i have

00:15:56,800 --> 00:16:02,000
signed i have said the big table

00:15:59,120 --> 00:16:03,040
and i was a keen feature of them it's no

00:16:02,000 --> 00:16:06,320
circuit database

00:16:03,040 --> 00:16:09,440
logitech site and the high throughput

00:16:06,320 --> 00:16:13,040
and i gave some uh

00:16:09,440 --> 00:16:16,399
uh we'll dab into how big table works

00:16:13,040 --> 00:16:20,480
like a load balancer hey how are jf

00:16:16,399 --> 00:16:22,800
systems to handle this uh highest report

00:16:20,480 --> 00:16:23,680
other way i also mentioned that crystal

00:16:22,800 --> 00:16:28,079
proof

00:16:23,680 --> 00:16:31,920
can be a linear upward scale

00:16:28,079 --> 00:16:35,440
so um that's a key point for

00:16:31,920 --> 00:16:35,440
chasing storage

00:16:35,600 --> 00:16:42,240
so the last section we will talk about

00:16:38,720 --> 00:16:45,440
uh how

00:16:42,240 --> 00:16:49,680
data can be stored into the

00:16:45,440 --> 00:16:52,320
uh big table uh it shows

00:16:49,680 --> 00:16:53,519
this store a single chase and the each

00:16:52,320 --> 00:16:56,720
column will start

00:16:53,519 --> 00:16:59,120
a spine because um

00:16:56,720 --> 00:16:59,920
it's a column based database so so you

00:16:59,120 --> 00:17:03,600
can

00:16:59,920 --> 00:17:04,319
store uh several irony numbers of the

00:17:03,600 --> 00:17:08,720
spawns

00:17:04,319 --> 00:17:11,679
in one single row so some uh for the

00:17:08,720 --> 00:17:13,199
uh uh just like i i had mentioned right

00:17:11,679 --> 00:17:16,559
uh songs for the big table

00:17:13,199 --> 00:17:21,280
is a column database uh we can

00:17:16,559 --> 00:17:22,319
write and uh a bitterly expansion into

00:17:21,280 --> 00:17:25,679
one single row

00:17:22,319 --> 00:17:26,880
because we can't make the numbers bonds

00:17:25,679 --> 00:17:29,280
in one single

00:17:26,880 --> 00:17:30,240
choice now please remember this is a key

00:17:29,280 --> 00:17:34,799
feature for

00:17:30,240 --> 00:17:34,799
freezing system so

00:17:35,440 --> 00:17:39,520
let's uh give some conclude conclusion

00:17:39,039 --> 00:17:42,640
about

00:17:39,520 --> 00:17:45,840
how our what's the choosing stories

00:17:42,640 --> 00:17:47,600
should be look like from the function of

00:17:45,840 --> 00:17:48,320
the big table i summarize some of the

00:17:47,600 --> 00:17:50,559
key points

00:17:48,320 --> 00:17:52,080
on the principles of classic treating

00:17:50,559 --> 00:17:55,840
storage first

00:17:52,080 --> 00:17:59,280
it should be uh increasing

00:17:55,840 --> 00:18:00,240
high support date it might have a lot of

00:17:59,280 --> 00:18:03,200
balancer to

00:18:00,240 --> 00:18:04,160
reload incoming tracing data under

00:18:03,200 --> 00:18:07,440
distributed

00:18:04,160 --> 00:18:08,960
storage engine to spread out some across

00:18:07,440 --> 00:18:12,240
a number of search nodes

00:18:08,960 --> 00:18:14,559
even more a distributed field system

00:18:12,240 --> 00:18:15,679
the second line the story system acute

00:18:14,559 --> 00:18:18,880
is a skill up

00:18:15,679 --> 00:18:19,760
linearly especially the shoot the scale

00:18:18,880 --> 00:18:21,760
at the wrong time

00:18:19,760 --> 00:18:23,280
a tracing system is a central

00:18:21,760 --> 00:18:26,320
observability

00:18:23,280 --> 00:18:29,120
of temperature and the effect varies the

00:18:26,320 --> 00:18:32,080
monitor under analyze system

00:18:29,120 --> 00:18:33,600
and the amount of the two-state varies

00:18:32,080 --> 00:18:37,480
in different time

00:18:33,600 --> 00:18:40,160
based on some requirement a sky

00:18:37,480 --> 00:18:41,840
scalability is necessary for the kinds

00:18:40,160 --> 00:18:44,400
of storage

00:18:41,840 --> 00:18:46,880
finally because of the ambitious

00:18:44,400 --> 00:18:50,160
structure of the twisting date

00:18:46,880 --> 00:18:53,280
we have to talk and i have to talk

00:18:50,160 --> 00:18:55,200
about that earlier trace stories should

00:18:53,280 --> 00:18:58,640
process the same structure

00:18:55,200 --> 00:19:01,600
unstructured date into this tech world

00:18:58,640 --> 00:19:02,640
it's a maybe either a distributed

00:19:01,600 --> 00:19:06,640
database

00:19:02,640 --> 00:19:10,080
or could be a cloud database

00:19:06,640 --> 00:19:13,440
so there's a some open source

00:19:10,080 --> 00:19:14,160
uh options so we can use the canson

00:19:13,440 --> 00:19:17,919
drawer

00:19:14,160 --> 00:19:19,760
and all the ohps to store razer

00:19:17,919 --> 00:19:21,200
to store our tracing data just like a

00:19:19,760 --> 00:19:24,799
big table the different

00:19:21,200 --> 00:19:28,320
viewing changes database enzymes

00:19:24,799 --> 00:19:31,600
uh if we need a central metadata

00:19:28,320 --> 00:19:35,039
uh metadata system

00:19:31,600 --> 00:19:37,919
to tell the client which node

00:19:35,039 --> 00:19:39,120
data should be right-handed on the

00:19:37,919 --> 00:19:41,360
cancel door you

00:19:39,120 --> 00:19:42,240
uh just simply to connect the one level

00:19:41,360 --> 00:19:45,440
his node to

00:19:42,240 --> 00:19:46,080
just send your choosing data hey we just

00:19:45,440 --> 00:19:49,520
know the

00:19:46,080 --> 00:19:53,440
as a coordinates node to have

00:19:49,520 --> 00:19:57,840
to remove your data to a specific

00:19:53,440 --> 00:20:01,520
node so in next section i will

00:19:57,840 --> 00:20:04,960
give you more options about how to

00:20:01,520 --> 00:20:04,960
storage the tracing data

00:20:05,120 --> 00:20:09,760
the three section is the modal hybrid

00:20:08,159 --> 00:20:13,200
database

00:20:09,760 --> 00:20:15,520
uh my circle on the other uh uh

00:20:13,200 --> 00:20:16,400
religion database uh traditionally no my

00:20:15,520 --> 00:20:18,799
circle

00:20:16,400 --> 00:20:20,159
don't appropriate the tracing on the

00:20:18,799 --> 00:20:23,360
launch general but

00:20:20,159 --> 00:20:26,720
due to the population in the world

00:20:23,360 --> 00:20:29,039
they can do this work just like the

00:20:26,720 --> 00:20:29,919
testing environment understanding

00:20:29,039 --> 00:20:33,280
environment

00:20:29,919 --> 00:20:35,440
so i don't want wants

00:20:33,280 --> 00:20:37,919
people to use the means production

00:20:35,440 --> 00:20:37,919
environment

00:20:38,159 --> 00:20:42,159
there we need some other tools to help

00:20:41,520 --> 00:20:44,640
the

00:20:42,159 --> 00:20:45,679
mexico to do the things the first we

00:20:44,640 --> 00:20:47,520
should have a

00:20:45,679 --> 00:20:49,039
data shutting codes just like a chat

00:20:47,520 --> 00:20:52,240
sphere and the other

00:20:49,039 --> 00:20:53,840
data the malware to empower mexico to

00:20:52,240 --> 00:20:56,960
store the trading date

00:20:53,840 --> 00:21:00,640
and exactly she should manageable

00:20:56,960 --> 00:21:03,440
carefully so the dba and the operators

00:21:00,640 --> 00:21:03,840
should be familiar with the mexico to

00:21:03,440 --> 00:21:06,880
give

00:21:03,840 --> 00:21:10,000
some professional sightings

00:21:06,880 --> 00:21:14,720
uh to in turn at the turn in the

00:21:10,000 --> 00:21:17,360
massacre performance there are some

00:21:14,720 --> 00:21:18,960
steps steps we should to to tweak the

00:21:17,360 --> 00:21:20,960
message to fix the tracing data the

00:21:18,960 --> 00:21:21,919
first one we should use as a buffer

00:21:20,960 --> 00:21:24,559
writing

00:21:21,919 --> 00:21:25,679
the second one we should use the the

00:21:24,559 --> 00:21:28,320
engineer turning

00:21:25,679 --> 00:21:29,280
now including we should increase the

00:21:28,320 --> 00:21:33,120
buffer pool

00:21:29,280 --> 00:21:35,600
and use a cracks flashing mixer

00:21:33,120 --> 00:21:36,480
and use the rotation storage for my

00:21:35,600 --> 00:21:39,360
circuit

00:21:36,480 --> 00:21:40,080
the third will separate the traffic so

00:21:39,360 --> 00:21:43,679
like i read

00:21:40,080 --> 00:21:44,640
right the separation and going to make

00:21:43,679 --> 00:21:48,240
the uh

00:21:44,640 --> 00:21:50,799
the tracing uh traffic with oit traffic

00:21:48,240 --> 00:21:53,840
it will separate the format

00:21:50,799 --> 00:21:56,400
the third redundancy in columns because

00:21:53,840 --> 00:21:57,679
the mexico we will predefine some of the

00:21:56,400 --> 00:22:00,080
columns

00:21:57,679 --> 00:22:01,360
to slow the annotation on the label so

00:22:00,080 --> 00:22:04,720
we

00:22:01,360 --> 00:22:07,919
we should add some more

00:22:04,720 --> 00:22:13,200
redundant sage callings for

00:22:07,919 --> 00:22:16,640
one single line

00:22:13,200 --> 00:22:19,760
okay next is the light search uh unless

00:22:16,640 --> 00:22:22,799
is the uh the main story

00:22:19,760 --> 00:22:26,080
the sky working is using

00:22:22,799 --> 00:22:27,200
uh there's a two advantage of the united

00:22:26,080 --> 00:22:30,240
states the first

00:22:27,200 --> 00:22:33,520
hair handles how our warning

00:22:30,240 --> 00:22:35,120
nurse date uh

00:22:33,520 --> 00:22:38,000
that's by larry engineer has a

00:22:35,120 --> 00:22:41,520
disbuilding chart

00:22:38,000 --> 00:22:43,840
and he has a uh

00:22:41,520 --> 00:22:45,360
lesser support distributing search out

00:22:43,840 --> 00:22:47,679
the box uh you know that

00:22:45,360 --> 00:22:50,240
using concept of shard a sure is a

00:22:47,679 --> 00:22:54,240
single losing incidence as manageable

00:22:50,240 --> 00:22:56,000
like search uh unilaterally have two

00:22:54,240 --> 00:22:58,559
type of cells uh

00:22:56,000 --> 00:23:00,240
namely is the first shot uh the primary

00:22:58,559 --> 00:23:03,760
shot and the replica side

00:23:00,240 --> 00:23:06,559
shadow 24 uh a document the first

00:23:03,760 --> 00:23:07,200
index on the premier shadow gen replay

00:23:06,559 --> 00:23:10,240
how to

00:23:07,200 --> 00:23:12,559
uh then to transfer to the replace side

00:23:10,240 --> 00:23:14,000
the number the premier shot that can be

00:23:12,559 --> 00:23:17,440
specific

00:23:14,000 --> 00:23:20,080
uh before um uh they are working

00:23:17,440 --> 00:23:20,720
usually to set the number of the shutter

00:23:20,080 --> 00:23:22,960
to

00:23:20,720 --> 00:23:24,320
one only one so actually saying that we

00:23:22,960 --> 00:23:27,679
don't need to replica

00:23:24,320 --> 00:23:30,480
eight while the performance

00:23:27,679 --> 00:23:31,120
uh across the date can be handled by

00:23:30,480 --> 00:23:33,919
shading

00:23:31,120 --> 00:23:34,400
it is important to like the chart was

00:23:33,919 --> 00:23:37,440
great

00:23:34,400 --> 00:23:39,679
for index cannot be changed the short

00:23:37,440 --> 00:23:40,320
strategy for the date have to be decided

00:23:39,679 --> 00:23:43,600
to the

00:23:40,320 --> 00:23:46,880
advantage of the assessment of the date

00:23:43,600 --> 00:23:49,440
and the extermination of its growth

00:23:46,880 --> 00:23:50,559
in that case application treating data

00:23:49,440 --> 00:23:52,480
shouting strategy

00:23:50,559 --> 00:23:53,679
can be based on the choice id as

00:23:52,480 --> 00:23:56,240
validity

00:23:53,679 --> 00:23:57,120
by storing data in a structure the

00:23:56,240 --> 00:23:59,919
analysis

00:23:57,120 --> 00:24:00,480
can be nimble on the date not only can

00:23:59,919 --> 00:24:03,120
be

00:24:00,480 --> 00:24:05,520
application performance a simple search

00:24:03,120 --> 00:24:08,640
it's also possible for registered

00:24:05,520 --> 00:24:11,760
tracing search for the special term

00:24:08,640 --> 00:24:14,640
on the overall specific time period

00:24:11,760 --> 00:24:15,679
uh structural stories also make it

00:24:14,640 --> 00:24:17,760
easier

00:24:15,679 --> 00:24:20,000
to develop reports which is a

00:24:17,760 --> 00:24:22,080
well-defunded virtualization

00:24:20,000 --> 00:24:23,840
you see in turn makes it easier to

00:24:22,080 --> 00:24:26,880
understand the current state of

00:24:23,840 --> 00:24:28,640
application it is also possible to

00:24:26,880 --> 00:24:31,520
perform the worry

00:24:28,640 --> 00:24:32,559
the worries analyze this operation just

00:24:31,520 --> 00:24:35,600
like a temperature

00:24:32,559 --> 00:24:38,159
series lamination using temp step

00:24:35,600 --> 00:24:39,039
so electric does not provide the

00:24:38,159 --> 00:24:42,240
building support

00:24:39,039 --> 00:24:44,080
for analyzer so our tracing system

00:24:42,240 --> 00:24:45,200
geological orientation provides the

00:24:44,080 --> 00:24:48,799
analyzes

00:24:45,200 --> 00:24:51,600
capability to this system

00:24:48,799 --> 00:24:52,080
so to set some tapes on how to use the

00:24:51,600 --> 00:24:55,520
let's

00:24:52,080 --> 00:24:58,400
store in the choosing data the first

00:24:55,520 --> 00:24:59,840
you should always monitoring these as a

00:24:58,400 --> 00:25:02,880
watermark

00:24:59,840 --> 00:25:06,240
you should be careful take care because

00:25:02,880 --> 00:25:07,360
all the work marks all of the in index

00:25:06,240 --> 00:25:10,159
of the unit size

00:25:07,360 --> 00:25:11,279
will be marked as read only you can

00:25:10,159 --> 00:25:13,919
write a single

00:25:11,279 --> 00:25:15,039
candidate into the right search the

00:25:13,919 --> 00:25:17,360
secondly

00:25:15,039 --> 00:25:18,240
are the writing queen the default rating

00:25:17,360 --> 00:25:22,240
queen

00:25:18,240 --> 00:25:24,720
about the 200 you must the all right

00:25:22,240 --> 00:25:25,360
that means that the requests are being

00:25:24,720 --> 00:25:28,559
accessed

00:25:25,360 --> 00:25:29,760
faster than they can be precise so you

00:25:28,559 --> 00:25:33,679
already for the

00:25:29,760 --> 00:25:34,400
queue size the third is to reduce the

00:25:33,679 --> 00:25:37,679
replay

00:25:34,400 --> 00:25:38,080
as i mentioned earlier uh we usually set

00:25:37,679 --> 00:25:41,120
it

00:25:38,080 --> 00:25:44,720
to only one so if the data

00:25:41,120 --> 00:25:47,600
is writing to electron they will not be

00:25:44,720 --> 00:25:49,200
transferred to another node so i will

00:25:47,600 --> 00:25:52,240
reduce the uh

00:25:49,200 --> 00:25:55,360
otherwise of the whole set timer

00:25:52,240 --> 00:25:58,000
will be used the uh

00:25:55,360 --> 00:25:58,559
the fourth one is a cleanup by the crew

00:25:58,000 --> 00:26:00,559
cutter

00:25:58,559 --> 00:26:02,240
and because it lasted time now to the

00:26:00,559 --> 00:26:05,520
cleanup the old days

00:26:02,240 --> 00:26:09,760
of the the tendering date so

00:26:05,520 --> 00:26:10,799
you must come you must set up a

00:26:09,760 --> 00:26:13,840
cricketer

00:26:10,799 --> 00:26:18,159
daemon to clean uh the old

00:26:13,840 --> 00:26:18,159
index if you don't want to use it

00:26:18,799 --> 00:26:23,120
finally we will talk about the new time

00:26:21,679 --> 00:26:26,559
series

00:26:23,120 --> 00:26:30,240
database they have some

00:26:26,559 --> 00:26:33,360
pro on the count point we should uh

00:26:30,240 --> 00:26:36,480
to measure here uh for the

00:26:33,360 --> 00:26:37,120
advantage uh the writing under reading

00:26:36,480 --> 00:26:38,640
patients

00:26:37,120 --> 00:26:40,960
is the most suitable for the

00:26:38,640 --> 00:26:44,559
distributing system

00:26:40,960 --> 00:26:48,240
because it's a have more

00:26:44,559 --> 00:26:50,320
rise than raise about

00:26:48,240 --> 00:26:51,840
90 percent of the operation on term

00:26:50,320 --> 00:26:53,840
survey data arrives

00:26:51,840 --> 00:26:56,320
this is determining about the data

00:26:53,840 --> 00:26:58,080
calculator for tracing data you may have

00:26:56,320 --> 00:27:00,320
a lot of cheater span

00:26:58,080 --> 00:27:01,520
but you are only concerned about the

00:27:00,320 --> 00:27:04,480
field of the

00:27:01,520 --> 00:27:05,679
array we only read the data of several

00:27:04,480 --> 00:27:08,880
key metrics are

00:27:05,679 --> 00:27:11,919
in the specific time range the modular

00:27:08,880 --> 00:27:14,960
receiving data is generated in real time

00:27:11,919 --> 00:27:17,120
and it's not update update

00:27:14,960 --> 00:27:18,159
time theory data is writing in the real

00:27:17,120 --> 00:27:21,440
time and

00:27:18,159 --> 00:27:24,480
the data writing each time is the most

00:27:21,440 --> 00:27:27,039
recent time and then determined by the

00:27:24,480 --> 00:27:29,279
tracing data generation calculator

00:27:27,039 --> 00:27:31,679
right because such data is generated

00:27:29,279 --> 00:27:34,720
over time on the new data already in

00:27:31,679 --> 00:27:38,880
real time this is written and

00:27:34,720 --> 00:27:42,080
it's not updated in the time dimension

00:27:38,880 --> 00:27:44,240
uh the reason they'd have a higher

00:27:42,080 --> 00:27:45,919
possibility to raise the more recent

00:27:44,240 --> 00:27:49,039
date on the hair

00:27:45,919 --> 00:27:51,679
they'd rate the possibility uh

00:27:49,039 --> 00:27:53,520
uh taking monitoring data as an example

00:27:51,679 --> 00:27:56,000
we already only take care of what

00:27:53,520 --> 00:27:56,720
happened in the last few hours of the

00:27:56,000 --> 00:27:58,720
few days

00:27:56,720 --> 00:28:00,320
it wasn't what happened one month or

00:27:58,720 --> 00:28:03,039
years ago

00:28:00,320 --> 00:28:03,440
and the timelines the time series data

00:28:03,039 --> 00:28:06,799
is a

00:28:03,440 --> 00:28:09,120
time city tail uh time series database

00:28:06,799 --> 00:28:11,360
urani have the retention window

00:28:09,120 --> 00:28:12,640
uh that beyond the retention window can

00:28:11,360 --> 00:28:15,679
be considered

00:28:12,640 --> 00:28:17,600
inaudible and can be removed literally

00:28:15,679 --> 00:28:19,440
that's a the big difference from the

00:28:17,600 --> 00:28:22,960
lesser elixir muscle

00:28:19,440 --> 00:28:23,679
the walkways is a crucial demand to

00:28:22,960 --> 00:28:26,720
clean

00:28:23,679 --> 00:28:30,640
as a old date so temperature is

00:28:26,720 --> 00:28:33,600
uh by a timeline about better

00:28:30,640 --> 00:28:34,080
to prepare the retention window to clean

00:28:33,600 --> 00:28:36,799
up

00:28:34,080 --> 00:28:36,799
the old days

00:28:38,880 --> 00:28:42,240
they also have some disa advantage of

00:28:41,760 --> 00:28:46,240
time

00:28:42,240 --> 00:28:49,360
series the first because all of the time

00:28:46,240 --> 00:28:52,159
series database is very new so

00:28:49,360 --> 00:28:52,880
we may face that the lack of support

00:28:52,159 --> 00:28:56,559
from the

00:28:52,880 --> 00:28:59,200
operating teams the second way

00:28:56,559 --> 00:29:00,320
because the timer series database was

00:28:59,200 --> 00:29:04,320
designed

00:29:00,320 --> 00:29:06,480
to uh increases the linear data

00:29:04,320 --> 00:29:08,399
but the choosing data is non-linear it's

00:29:06,480 --> 00:29:11,520
also very easy

00:29:08,399 --> 00:29:14,480
it depends on the really uh

00:29:11,520 --> 00:29:15,279
incorrect requires from the real world

00:29:14,480 --> 00:29:18,399
so

00:29:15,279 --> 00:29:20,960
uh that so

00:29:18,399 --> 00:29:21,600
when you use the time series databases

00:29:20,960 --> 00:29:24,640
to

00:29:21,600 --> 00:29:26,799
uh say are choosing that you may face

00:29:24,640 --> 00:29:29,919
some performance issues

00:29:26,799 --> 00:29:32,960
the last one is the high

00:29:29,919 --> 00:29:36,559
can generally

00:29:32,960 --> 00:29:40,159
the high continuity

00:29:36,559 --> 00:29:43,840
because some temperature databases

00:29:40,159 --> 00:29:47,279
not so to see the scanner also

00:29:43,840 --> 00:29:50,640
hey okay but when

00:29:47,279 --> 00:29:53,600
the canon everything can relate to

00:29:50,640 --> 00:29:54,320
just select the labels annotations it's

00:29:53,600 --> 00:29:59,200
too much

00:29:54,320 --> 00:29:59,200
we will cause the whole system to crash

00:30:02,880 --> 00:30:08,080
okay the final part will talking about

00:30:05,919 --> 00:30:12,640
the skywalking storage model

00:30:08,080 --> 00:30:16,159
okay the number of time we will speed up

00:30:12,640 --> 00:30:18,640
first uh we introduce a segment

00:30:16,159 --> 00:30:19,279
a segment of collection of the spines

00:30:18,640 --> 00:30:22,000
general

00:30:19,279 --> 00:30:23,520
rated in one single instance of our

00:30:22,000 --> 00:30:27,440
surveys

00:30:23,520 --> 00:30:30,240
it is the atomic unique of the storage

00:30:27,440 --> 00:30:31,440
and we are reducing the candidates of

00:30:30,240 --> 00:30:34,720
the data center so

00:30:31,440 --> 00:30:37,279
we will well

00:30:34,720 --> 00:30:38,080
very better we will get the better

00:30:37,279 --> 00:30:40,720
performance

00:30:38,080 --> 00:30:43,120
than the traditional tracing data just

00:30:40,720 --> 00:30:46,159
like i mentioned in the first part

00:30:43,120 --> 00:30:46,159
as a segment

00:30:46,559 --> 00:30:50,559
next skywalking supports a mutual

00:30:49,919 --> 00:30:54,000
stories

00:30:50,559 --> 00:30:57,039
you can switch between them depends on

00:30:54,000 --> 00:30:57,039
how you uh

00:30:57,519 --> 00:31:03,679
because some companies and some groups

00:31:01,679 --> 00:31:06,960
usually use the master code you can use

00:31:03,679 --> 00:31:10,159
master code if you have a

00:31:06,960 --> 00:31:12,080
suit you have needed uh you need

00:31:10,159 --> 00:31:13,200
search surveys so you may have the

00:31:12,080 --> 00:31:16,720
research

00:31:13,200 --> 00:31:18,799
and every operation team is

00:31:16,720 --> 00:31:20,080
familiar with the important db you can

00:31:18,799 --> 00:31:23,440
use them

00:31:20,080 --> 00:31:26,480
so you'll have a lot of choice uh

00:31:23,440 --> 00:31:30,080
to select one appropriate storage

00:31:26,480 --> 00:31:30,080
engine from them

00:31:30,799 --> 00:31:37,360
okay there are other features uh how

00:31:34,159 --> 00:31:39,760
uh the story module can uh

00:31:37,360 --> 00:31:40,880
improve the performance of the storage

00:31:39,760 --> 00:31:43,679
the first one

00:31:40,880 --> 00:31:45,440
uh sky working house batch writing

00:31:43,679 --> 00:31:47,279
features

00:31:45,440 --> 00:31:48,960
you can improve some of the performance

00:31:47,279 --> 00:31:52,000
that just like my circle and the

00:31:48,960 --> 00:31:55,120
research and hey how uh

00:31:52,000 --> 00:31:57,919
a data retention or feature

00:31:55,120 --> 00:31:59,200
you can give a different strategy on the

00:31:57,919 --> 00:32:02,399
implant

00:31:59,200 --> 00:32:05,440
for different stock layers

00:32:02,399 --> 00:32:07,760
so uh some storage

00:32:05,440 --> 00:32:10,159
services like electronic circle don't

00:32:07,760 --> 00:32:13,679
have this feature

00:32:10,159 --> 00:32:14,159
so you you can by leveraging the feature

00:32:13,679 --> 00:32:17,120
to

00:32:14,159 --> 00:32:19,200
a storage as a choosing date the final

00:32:17,120 --> 00:32:22,480
layer is the downside pulling

00:32:19,200 --> 00:32:27,679
different data different

00:32:22,480 --> 00:32:30,720
retention strategy so you can

00:32:27,679 --> 00:32:34,159
but uh from this feature you can query

00:32:30,720 --> 00:32:34,640
uh some metrics about one year circle

00:32:34,159 --> 00:32:37,440
but

00:32:34,640 --> 00:32:38,399
you don't need the storage original

00:32:37,440 --> 00:32:41,120
tracing date

00:32:38,399 --> 00:32:43,840
so you can clean up the original gallery

00:32:41,120 --> 00:32:43,840

YouTube URL: https://www.youtube.com/watch?v=iQ0tODBoh1k


