Title: Yahoo's Adventure with Apache Traffic Server - Shu Kit Chan, Vijay Prashanth Hosahithlu
Publication date: 2014-04-25
Playlist: ApacheCon North America 2014
Description: 
	ApacheCon North America 2014
Captions: 
	00:00:00,380 --> 00:00:05,160
good afternoon gentlemen

00:00:03,030 --> 00:00:07,890
it gives me great pleasure to talk about

00:00:05,160 --> 00:00:12,210
Apache traffic server and Yahoo's

00:00:07,890 --> 00:00:14,219
relationship with it over the years my

00:00:12,210 --> 00:00:17,279
name is Vijay and I'm a product manager

00:00:14,219 --> 00:00:20,100
with the edge services in Yahoo and my

00:00:17,279 --> 00:00:23,310
colleague here is KITT whose principal

00:00:20,100 --> 00:00:26,279
engineer with the media group I'm going

00:00:23,310 --> 00:00:28,439
to talk about some of the history of

00:00:26,279 --> 00:00:30,420
hepatic traffic server and the a whose

00:00:28,439 --> 00:00:32,250
involvement over the years and KITT is

00:00:30,420 --> 00:00:34,710
going to focus on the business aspects

00:00:32,250 --> 00:00:38,190
of working with the open source what

00:00:34,710 --> 00:00:40,530
we've learned over the years so as you

00:00:38,190 --> 00:00:43,440
can see Yahoo's relationship has been

00:00:40,530 --> 00:00:46,170
more like a rollercoaster ride we've had

00:00:43,440 --> 00:00:50,129
some ups and downs and hopefully we are

00:00:46,170 --> 00:00:53,670
at the top back again right now so it

00:00:50,129 --> 00:00:56,239
all started back in the late 90s when

00:00:53,670 --> 00:00:59,070
Inktomi created the traffic server and

00:00:56,239 --> 00:01:02,250
there was some rapid adoption and

00:00:59,070 --> 00:01:04,439
development in those initial years when

00:01:02,250 --> 00:01:07,500
there are big customers like AOL and at

00:01:04,439 --> 00:01:09,210
home adopting traffic server there are

00:01:07,500 --> 00:01:11,939
some interesting use cases for which

00:01:09,210 --> 00:01:14,430
traffic server was used transcoding

00:01:11,939 --> 00:01:16,590
images into smaller sizes for dial-up

00:01:14,430 --> 00:01:21,689
users so some of you may remember those

00:01:16,590 --> 00:01:26,040
stories from back then subsequently in

00:01:21,689 --> 00:01:28,619
to me was acquired by Yahoo in 2002 but

00:01:26,040 --> 00:01:31,590
we did not do anything with it for a

00:01:28,619 --> 00:01:37,049
couple of years so it was gathering dust

00:01:31,590 --> 00:01:39,360
and then in around 2005 it was renamed

00:01:37,049 --> 00:01:43,170
as why TS or yahoo traffic server and

00:01:39,360 --> 00:01:45,299
efforts around it resumed and it gained

00:01:43,170 --> 00:01:49,530
the rapid traction and adoption within

00:01:45,299 --> 00:01:52,860
the company and by 2010 30 billion

00:01:49,530 --> 00:01:55,610
objects 400 terabytes a day was kind of

00:01:52,860 --> 00:02:01,200
getting served through traffic server

00:01:55,610 --> 00:02:04,380
and in 2009 a bunch of gentlemen who are

00:02:01,200 --> 00:02:07,209
here in this room along with some others

00:02:04,380 --> 00:02:11,480
decided to open source

00:02:07,209 --> 00:02:13,640
80s I mean traffic server and - and they

00:02:11,480 --> 00:02:15,830
actually it was a lot of effort it took

00:02:13,640 --> 00:02:17,890
about seven hundred thousand lines of

00:02:15,830 --> 00:02:21,680
code change or a period of nine months

00:02:17,890 --> 00:02:23,480
most of it I understand was related to

00:02:21,680 --> 00:02:26,959
ripping out a bunch of code to support

00:02:23,480 --> 00:02:30,080
multiple operating systems and it became

00:02:26,959 --> 00:02:32,090
an Apache Incubator in July 2009 and

00:02:30,080 --> 00:02:39,410
finally I accepted as a top-level

00:02:32,090 --> 00:02:42,230
project in April 2010 so when we when we

00:02:39,410 --> 00:02:45,560
open sourced traffic server there were

00:02:42,230 --> 00:02:47,599
certain areas where it could further be

00:02:45,560 --> 00:02:49,400
improved some of the areas of

00:02:47,599 --> 00:02:53,000
improvement that were identified

00:02:49,400 --> 00:02:55,700
included performance related areas like

00:02:53,000 --> 00:02:58,760
being able to handle hundreds of

00:02:55,700 --> 00:03:00,799
thousands of concurrent connections the

00:02:58,760 --> 00:03:04,519
inherent lock design caused problems

00:03:00,799 --> 00:03:08,000
with longtail Layton sees state machine

00:03:04,519 --> 00:03:09,640
was fixed and that prevented some of the

00:03:08,000 --> 00:03:14,269
extensibility that certain use cases

00:03:09,640 --> 00:03:18,079
demanded programmability was considered

00:03:14,269 --> 00:03:21,139
as not too great given the a synchronous

00:03:18,079 --> 00:03:23,000
model and the plug-in architecture and

00:03:21,139 --> 00:03:24,709
not too many people understood the

00:03:23,000 --> 00:03:26,690
continuation based model so it was not

00:03:24,709 --> 00:03:29,299
very developer friendly especially for

00:03:26,690 --> 00:03:36,380
those without sufficient experience on

00:03:29,299 --> 00:03:38,780
it so at that particular point a bunch

00:03:36,380 --> 00:03:41,810
of folks within the company also tried

00:03:38,780 --> 00:03:44,389
an another experiment based on user

00:03:41,810 --> 00:03:48,200
fibers basically using concept of

00:03:44,389 --> 00:03:49,819
co-routines where instead of relying on

00:03:48,200 --> 00:03:56,209
threats and pre-emptive context

00:03:49,819 --> 00:03:59,090
switching they were doing function call

00:03:56,209 --> 00:04:02,720
based in the user space context

00:03:59,090 --> 00:04:05,569
switching and this basically allowed

00:04:02,720 --> 00:04:07,810
kind of a synchronous programming model

00:04:05,569 --> 00:04:11,000
and also a lock free environment so that

00:04:07,810 --> 00:04:13,329
longtail Layton sees could be addressed

00:04:11,000 --> 00:04:17,630
so these were the objectives or the

00:04:13,329 --> 00:04:20,630
motivations for the experiment but then

00:04:17,630 --> 00:04:23,330
on the other hand both the

00:04:20,630 --> 00:04:26,900
whiteysd yahoo traffic server as well as

00:04:23,330 --> 00:04:29,510
the just how open sourced apache traffic

00:04:26,900 --> 00:04:34,160
server was gaining a lot of traction so

00:04:29,510 --> 00:04:36,280
in the period between 2010 to 2013 there

00:04:34,160 --> 00:04:39,650
were about six thousand nodes running

00:04:36,280 --> 00:04:43,970
why TS and and a bunch of small

00:04:39,650 --> 00:04:47,480
properties running kts in parallel so

00:04:43,970 --> 00:04:49,520
Yahoo was never out of running 80s and

00:04:47,480 --> 00:04:53,000
it was sustained by the activities of a

00:04:49,520 --> 00:04:55,160
few people during those period a lot of

00:04:53,000 --> 00:04:58,130
different use cases were covered given

00:04:55,160 --> 00:05:01,580
the range of businesses that Yahoo was

00:04:58,130 --> 00:05:04,060
in to reverse proxy for a proxy caching

00:05:01,580 --> 00:05:06,410
SSL termination each site includes

00:05:04,060 --> 00:05:09,530
denial of service protection these were

00:05:06,410 --> 00:05:11,060
some of the things that we were doing we

00:05:09,530 --> 00:05:13,040
were truly heterogeneous in the sense

00:05:11,060 --> 00:05:16,610
there were pockets of the company using

00:05:13,040 --> 00:05:19,720
squared and nginx as well this led to a

00:05:16,610 --> 00:05:22,340
lot of Technology fragmentation and

00:05:19,720 --> 00:05:23,780
support was becoming a problem because

00:05:22,340 --> 00:05:25,610
there were not too many people who are

00:05:23,780 --> 00:05:29,420
experts in all these and having to

00:05:25,610 --> 00:05:31,250
manage such a vast different set of

00:05:29,420 --> 00:05:35,000
technologies for caching and proxying

00:05:31,250 --> 00:05:37,610
was posing to be difficult so here I'm

00:05:35,000 --> 00:05:39,710
going to briefly talk about one of the

00:05:37,610 --> 00:05:42,740
use cases that that we were using

00:05:39,710 --> 00:05:48,020
traffic servo for called each side

00:05:42,740 --> 00:05:51,080
includes or ESI so basically in a larger

00:05:48,020 --> 00:05:53,360
property like Yahoo each page is made up

00:05:51,080 --> 00:05:55,220
of multiple assets some of them static

00:05:53,360 --> 00:05:58,220
some of them are dynamic and

00:05:55,220 --> 00:06:00,890
personalized the static objects are more

00:05:58,220 --> 00:06:04,130
cashable whereas the dynamic ones are

00:06:00,890 --> 00:06:06,650
typically not so if you need to assemble

00:06:04,130 --> 00:06:08,690
them one at one after the other serially

00:06:06,650 --> 00:06:12,860
that would increase the page load time

00:06:08,690 --> 00:06:16,310
so each side includes enables us to

00:06:12,860 --> 00:06:17,780
switch the page on the edge by making

00:06:16,310 --> 00:06:21,710
parallel calls and then caching the

00:06:17,780 --> 00:06:26,330
static objects on the edge and this was

00:06:21,710 --> 00:06:28,970
made possible by traffic server another

00:06:26,330 --> 00:06:31,370
use case that brand touched upon in the

00:06:28,970 --> 00:06:33,290
morning is about SSL termination where

00:06:31,370 --> 00:06:33,980
typically all the end user facing

00:06:33,290 --> 00:06:36,950
communication

00:06:33,980 --> 00:06:38,750
happens over ssl and internally within

00:06:36,950 --> 00:06:42,920
the data center communication happens

00:06:38,750 --> 00:06:47,000
over HTTP that way all user-facing

00:06:42,920 --> 00:06:50,060
communication is encrypted and another

00:06:47,000 --> 00:06:52,460
advantage of doing this is a whole bunch

00:06:50,060 --> 00:06:54,740
of properties behind the scenes which

00:06:52,460 --> 00:06:57,470
actually owned the origin servers they

00:06:54,740 --> 00:07:00,740
do not need to do the work to terminate

00:06:57,470 --> 00:07:05,140
SSL it can happen by a small with just a

00:07:00,740 --> 00:07:05,140
small team working on this a TS layer

00:07:05,380 --> 00:07:10,910
meanwhile in the open-source community

00:07:07,850 --> 00:07:15,460
there are giant strides being made in

00:07:10,910 --> 00:07:19,130
terms of features and performance so

00:07:15,460 --> 00:07:21,830
leveraging the rl6 that is a 64-bit

00:07:19,130 --> 00:07:27,380
architecture compression SSL session

00:07:21,830 --> 00:07:30,050
tickets initially the traffic server did

00:07:27,380 --> 00:07:33,230
have some stability related problems

00:07:30,050 --> 00:07:35,210
segmentation faults core dumps so over a

00:07:33,230 --> 00:07:37,040
period of time lot of this has has

00:07:35,210 --> 00:07:40,010
improved through good memory management

00:07:37,040 --> 00:07:42,680
custom logging enhancements cache

00:07:40,010 --> 00:07:45,290
related work clustering support for

00:07:42,680 --> 00:07:47,840
solid-state devices protocol supports

00:07:45,290 --> 00:07:49,520
recently we've had WebSockets being

00:07:47,840 --> 00:07:52,880
supported and we are moving towards

00:07:49,520 --> 00:07:54,770
speedy security enhancements perfect

00:07:52,880 --> 00:07:57,020
forward secrecy HTTP strict Transport

00:07:54,770 --> 00:08:01,550
Security

00:07:57,020 --> 00:08:05,020
so basically ATS is kind of now very

00:08:01,550 --> 00:08:11,630
mature and being used at scale across

00:08:05,020 --> 00:08:13,430
large companies and the technology

00:08:11,630 --> 00:08:16,520
fragmentation that I spoke about that

00:08:13,430 --> 00:08:19,370
percepted in this decision in August

00:08:16,520 --> 00:08:23,000
2013 where the company came together and

00:08:19,370 --> 00:08:27,170
decided that we need one caching proxy

00:08:23,000 --> 00:08:33,950
solution and 80s was chosen to be that

00:08:27,170 --> 00:08:35,990
one and what this enabled is a bunch of

00:08:33,950 --> 00:08:37,400
developers within Yahoo we are now free

00:08:35,990 --> 00:08:40,640
to collaborate with the open source

00:08:37,400 --> 00:08:42,440
community and both gain from their

00:08:40,640 --> 00:08:44,270
expertise as well as contribute back

00:08:42,440 --> 00:08:46,700
some of the things we worked with the

00:08:44,270 --> 00:08:47,720
open source community on further

00:08:46,700 --> 00:08:49,670
enhancing

00:08:47,720 --> 00:08:53,319
load the scale while revalidate plug-in

00:08:49,670 --> 00:08:56,089
Stella Ferrer cashier a routing protocol

00:08:53,319 --> 00:09:00,410
related plug-in and the SSL session

00:08:56,089 --> 00:09:03,170
reuse so some of these existed but they

00:09:00,410 --> 00:09:07,069
had certain shortcomings for example the

00:09:03,170 --> 00:09:09,889
RFC 58 60 one plug-in had issues with

00:09:07,069 --> 00:09:13,069
supporting connection collapsing the

00:09:09,889 --> 00:09:17,329
carp plug-in had issues with generating

00:09:13,069 --> 00:09:20,689
hot spots so we tried to overcome some

00:09:17,329 --> 00:09:23,269
of these things the code is ready and is

00:09:20,689 --> 00:09:25,699
getting tested and is going to be tested

00:09:23,269 --> 00:09:27,290
at scale very soon and hopefully we will

00:09:25,699 --> 00:09:32,019
be contributing these changes back to

00:09:27,290 --> 00:09:36,920
the open source community so in the last

00:09:32,019 --> 00:09:39,740
six months the usage of YT s legacy

00:09:36,920 --> 00:09:41,240
traffic server has reduced by about 25

00:09:39,740 --> 00:09:44,839
percent and it's going down steeply

00:09:41,240 --> 00:09:45,740
whereas ATS has increased by 30x and

00:09:44,839 --> 00:09:50,980
it's still growing

00:09:45,740 --> 00:09:50,980
the recent initiative to encrypt all of

00:10:01,239 --> 00:10:08,769
thanks kid the recent effort to encrypt

00:10:04,929 --> 00:10:11,100
all of user traffic that actually got a

00:10:08,769 --> 00:10:14,470
lot of properties to adopt the 80s and

00:10:11,100 --> 00:10:18,040
we are kind of converging on 80s across

00:10:14,470 --> 00:10:20,290
the company now one of the use cases

00:10:18,040 --> 00:10:24,480
that I spoke about was stale while

00:10:20,290 --> 00:10:27,189
revalidate and Steely Ferrer basically

00:10:24,480 --> 00:10:29,230
when an object is still in the cache you

00:10:27,189 --> 00:10:31,749
typically sent the request all the way

00:10:29,230 --> 00:10:35,499
to the origin and then let the user wait

00:10:31,749 --> 00:10:37,329
to serve it back in order to award this

00:10:35,499 --> 00:10:39,699
and provide a better experience to the

00:10:37,329 --> 00:10:42,100
user which still while revalidate what

00:10:39,699 --> 00:10:43,779
you can do is you can actually serve the

00:10:42,100 --> 00:10:45,669
stale object from the cache while you

00:10:43,779 --> 00:10:47,439
make Ana synchronous requests back to

00:10:45,669 --> 00:10:50,949
the origin and refresh the cache

00:10:47,439 --> 00:10:54,839
similarly Staley Ferrer can be used to

00:10:50,949 --> 00:11:00,160
serve a steel object while the origin

00:10:54,839 --> 00:11:02,470
returns an error so some of these kind

00:11:00,160 --> 00:11:04,689
of reduces the along with connection

00:11:02,470 --> 00:11:06,970
collapsing it reduces the burden on the

00:11:04,689 --> 00:11:13,569
origins as well as improving the user

00:11:06,970 --> 00:11:15,939
first latency so like I briefly told you

00:11:13,569 --> 00:11:19,149
before 80s is now used very widely in

00:11:15,939 --> 00:11:21,279
Yahoo it supports like hundreds of

00:11:19,149 --> 00:11:23,559
thousands of requests per second

00:11:21,279 --> 00:11:26,290
hundreds of gigabits per second flows

00:11:23,559 --> 00:11:29,199
through it every day we have two

00:11:26,290 --> 00:11:31,389
committers brian and get contributing to

00:11:29,199 --> 00:11:34,299
the community we have six other

00:11:31,389 --> 00:11:37,720
developers who have contributed various

00:11:34,299 --> 00:11:42,399
patches and this list is growing so I'm

00:11:37,720 --> 00:11:45,660
very excited that ATS is actually doing

00:11:42,399 --> 00:11:48,519
a comeback in Yahoo in a big way and

00:11:45,660 --> 00:11:51,239
with that I will hand it over to KITT to

00:11:48,519 --> 00:11:54,009
talk about business and how open-source

00:11:51,239 --> 00:11:56,579
and business needs to work with together

00:11:54,009 --> 00:11:56,579
Thanks

00:11:58,869 --> 00:12:03,459
Thank You Vijay so that kind of

00:12:00,939 --> 00:12:07,119
concluded our attempt to trace back the

00:12:03,459 --> 00:12:10,239
history of 80s fluid of a perspective of

00:12:07,119 --> 00:12:13,059
Yahoo right as you can see we did spend

00:12:10,239 --> 00:12:15,909
a few many of interest years with

00:12:13,059 --> 00:12:19,719
yes and throughout this oddest years we

00:12:15,909 --> 00:12:22,599
have many experience many learnings and

00:12:19,719 --> 00:12:24,969
war stories of how we justify our use

00:12:22,599 --> 00:12:27,249
case or our choices over the years and

00:12:24,969 --> 00:12:30,459
those are actually very interesting and

00:12:27,249 --> 00:12:33,459
I think that's worth sharing so the next

00:12:30,459 --> 00:12:36,549
section will just be focusing on that

00:12:33,459 --> 00:12:39,519
part for that so one of the questions we

00:12:36,549 --> 00:12:42,459
get us where often this how should we

00:12:39,519 --> 00:12:45,759
that the business work with open source

00:12:42,459 --> 00:12:49,029
software right so the decision-makers

00:12:45,759 --> 00:12:51,609
are always the business leaders who have

00:12:49,029 --> 00:12:54,519
a lot of expertise in their own domain

00:12:51,609 --> 00:12:57,249
right or their own in the in the only

00:12:54,519 --> 00:12:58,779
industry but they may not have enough

00:12:57,249 --> 00:13:01,359
understandings of the open source

00:12:58,779 --> 00:13:02,979
culture on what open source software can

00:13:01,359 --> 00:13:05,379
do for them right so as open source

00:13:02,979 --> 00:13:07,839
advocates it's actually our job to try

00:13:05,379 --> 00:13:09,039
to bridge the gap of understanding here

00:13:07,839 --> 00:13:11,709
all right

00:13:09,039 --> 00:13:14,709
so the first thing we actually always

00:13:11,709 --> 00:13:18,219
want to work with the decision maker or

00:13:14,709 --> 00:13:20,079
the business leader is to actually make

00:13:18,219 --> 00:13:22,029
sure that we understand what's the

00:13:20,079 --> 00:13:24,159
business challenges and opportunities

00:13:22,029 --> 00:13:26,079
meaning that ok what kind of business we

00:13:24,159 --> 00:13:27,249
are in and what do we need to do to be

00:13:26,079 --> 00:13:29,319
successful

00:13:27,249 --> 00:13:30,609
those are opportunity opportunities and

00:13:29,319 --> 00:13:32,019
for challenges

00:13:30,609 --> 00:13:36,459
what kind of obstacle we need to

00:13:32,019 --> 00:13:41,469
overcome etc for that right so I'm going

00:13:36,459 --> 00:13:43,509
to use our recent projects in Yahoo to

00:13:41,469 --> 00:13:45,219
actually illustrate the next few points

00:13:43,509 --> 00:13:47,709
when we are talking about business

00:13:45,219 --> 00:13:51,519
challenges and opportunities so recently

00:13:47,709 --> 00:13:54,989
Yahoo actually enabled TLS encryption

00:13:51,519 --> 00:13:58,209
for all our website and our services and

00:13:54,989 --> 00:14:00,489
so this is actually a massive projects

00:13:58,209 --> 00:14:03,159
we announced our plan of doing such

00:14:00,489 --> 00:14:05,669
things late last year and we were

00:14:03,159 --> 00:14:09,549
promising our user our customer that

00:14:05,669 --> 00:14:14,199
will be enabling the TLS encryptions by

00:14:09,549 --> 00:14:16,929
the end of q1 and so this is a massive

00:14:14,199 --> 00:14:19,239
projects undertaking right so yahoo has

00:14:16,929 --> 00:14:21,849
so many surfaces that we accumulated

00:14:19,239 --> 00:14:25,180
over the years in the Media Group alone

00:14:21,849 --> 00:14:28,650
we have new sports finance entertainment

00:14:25,180 --> 00:14:32,080
and we have multiple different languages

00:14:28,650 --> 00:14:33,700
regions etc and not all of them are

00:14:32,080 --> 00:14:36,310
actually in the same stack there are

00:14:33,700 --> 00:14:39,490
multiple different legacy stack lying

00:14:36,310 --> 00:14:42,130
around serving websites for Middle East

00:14:39,490 --> 00:14:45,670
country or maybe some other European

00:14:42,130 --> 00:14:49,150
countries or for Australia etc right so

00:14:45,670 --> 00:14:52,150
each of them are on a different tack

00:14:49,150 --> 00:14:53,830
stack right so if we actually spend the

00:14:52,150 --> 00:14:56,080
time to actually go through each of

00:14:53,830 --> 00:14:58,050
those legacy systems and they enabled

00:14:56,080 --> 00:15:02,530
here as for each of them it would be a

00:14:58,050 --> 00:15:04,720
massive efforts involving quite among a

00:15:02,530 --> 00:15:06,760
number of Engineers to do that and we

00:15:04,720 --> 00:15:09,630
might not be able to make it in time for

00:15:06,760 --> 00:15:13,600
what we promised our user is right so

00:15:09,630 --> 00:15:17,080
with 80s and with the features of doing

00:15:13,600 --> 00:15:21,550
SSL termination that my colleague Vijay

00:15:17,080 --> 00:15:23,050
has just mentioned we were able to do it

00:15:21,550 --> 00:15:27,250
a little bit differently so what we

00:15:23,050 --> 00:15:29,440
would do is we put ATS in the same data

00:15:27,250 --> 00:15:33,550
center or some of these legacy systems

00:15:29,440 --> 00:15:35,830
and so we do SSL terminations so the

00:15:33,550 --> 00:15:37,330
connections between our customers and

00:15:35,830 --> 00:15:39,940
the ATS would be encrypted

00:15:37,330 --> 00:15:41,860
while the connections between the 80s

00:15:39,940 --> 00:15:44,560
and the legacy system within the data

00:15:41,860 --> 00:15:48,430
centers will stay as plain simple HTTP

00:15:44,560 --> 00:15:50,650
with that we were able to actually limit

00:15:48,430 --> 00:15:53,590
the amount of engineers involved in the

00:15:50,650 --> 00:15:56,680
projects to just a group of experts on

00:15:53,590 --> 00:16:00,330
TRS as well as ATS to help bridge the

00:15:56,680 --> 00:16:03,010
gap for that instead of evolve involving

00:16:00,330 --> 00:16:05,350
entire divisions of engineers that's

00:16:03,010 --> 00:16:10,240
actually presents a really good

00:16:05,350 --> 00:16:12,340
opportunity for us to allow us to keep

00:16:10,240 --> 00:16:14,860
our promise to do it in time as well as

00:16:12,340 --> 00:16:16,900
save a lot of cars for us so that's a

00:16:14,860 --> 00:16:19,390
perfect example that using open-source

00:16:16,900 --> 00:16:21,310
actually helped us to get our features

00:16:19,390 --> 00:16:24,550
to the market in time and with a

00:16:21,310 --> 00:16:27,750
relatively low cost right quality when

00:16:24,550 --> 00:16:30,340
we are doing the TRS encryption projects

00:16:27,750 --> 00:16:35,260
there's a lot of features that we add

00:16:30,340 --> 00:16:38,000
over the last couple months for ATS such

00:16:35,260 --> 00:16:42,800
as STS

00:16:38,000 --> 00:16:45,710
the RC 50 77 the SSL termination SSL

00:16:42,800 --> 00:16:49,810
session ticket as well as things such as

00:16:45,710 --> 00:16:54,980
PFS the perfect forward secrecy and so

00:16:49,810 --> 00:16:56,960
without the impressive communities of

00:16:54,980 --> 00:17:00,640
the 80s actually helping us to do code

00:16:56,960 --> 00:17:03,230
review and and helping us to actually

00:17:00,640 --> 00:17:07,400
provide us a lot of valuable feedbacks

00:17:03,230 --> 00:17:09,530
we may not be able to implement and

00:17:07,400 --> 00:17:12,800
enable all these features for that so

00:17:09,530 --> 00:17:14,530
one of the more important factors when

00:17:12,800 --> 00:17:17,480
we choose open source software is -

00:17:14,530 --> 00:17:20,750
based on based at decisions on the vivid

00:17:17,480 --> 00:17:23,210
vividness of the community and luckily

00:17:20,750 --> 00:17:24,890
ATS is one of the one that I've seen

00:17:23,210 --> 00:17:28,130
that is having a really friendly

00:17:24,890 --> 00:17:30,050
community as well as we're active

00:17:28,130 --> 00:17:32,990
discussions have been happening all the

00:17:30,050 --> 00:17:35,750
times on mailing lists as well as IRC

00:17:32,990 --> 00:17:38,900
for that so that's actually very helpful

00:17:35,750 --> 00:17:41,570
when we were having such a important

00:17:38,900 --> 00:17:44,450
projects that is undertaking innovations

00:17:41,570 --> 00:17:47,630
right with such with ATS providing a

00:17:44,450 --> 00:17:51,260
really solid and stable basis of doing

00:17:47,630 --> 00:17:55,460
caching proxy with high performance

00:17:51,260 --> 00:17:59,270
right we were able to keep our engineers

00:17:55,460 --> 00:18:01,820
engineers focusing on things that are

00:17:59,270 --> 00:18:03,830
actually bells and whistles on top of

00:18:01,820 --> 00:18:09,050
the TRS encryptions such as what I've

00:18:03,830 --> 00:18:12,260
mentioned HSTs PFS as well as the

00:18:09,050 --> 00:18:15,040
session tickets right so picking ATS

00:18:12,260 --> 00:18:17,630
also helped us to make sure that we can

00:18:15,040 --> 00:18:21,320
be staying ahead of the competition's

00:18:17,630 --> 00:18:24,940
and enable all this really advanced

00:18:21,320 --> 00:18:28,310
features 40s as well talent and people

00:18:24,940 --> 00:18:31,730
with ATS and this project of a

00:18:28,310 --> 00:18:35,510
neighboring TSL TRS for our web service

00:18:31,730 --> 00:18:37,510
and our websites we actually get really

00:18:35,510 --> 00:18:40,160
good feedback from our engineers and

00:18:37,510 --> 00:18:42,440
internally one of the things that

00:18:40,160 --> 00:18:44,480
businesses or business leaders or

00:18:42,440 --> 00:18:46,970
decision makers want to do is to keep on

00:18:44,480 --> 00:18:50,370
retaining and developing talents right

00:18:46,970 --> 00:18:54,390
with 80s and

00:18:50,370 --> 00:18:56,610
project like this kind of enabling TRS

00:18:54,390 --> 00:19:00,380
right engineers have a lot of chance to

00:18:56,610 --> 00:19:02,910
work with open source software experts

00:19:00,380 --> 00:19:05,700
they get valuable feedbacks and there's

00:19:02,910 --> 00:19:09,299
a lot of different communication channel

00:19:05,700 --> 00:19:11,460
that we can explore new ideas so we get

00:19:09,299 --> 00:19:14,100
really positive feedbacks from our own

00:19:11,460 --> 00:19:15,929
engineers saying that ok this is

00:19:14,100 --> 00:19:17,309
actually the right decisions and and the

00:19:15,929 --> 00:19:19,320
gain and all of knowledge and things

00:19:17,309 --> 00:19:21,450
like that so it's a good way for us to

00:19:19,320 --> 00:19:25,950
help develop our own talents internally

00:19:21,450 --> 00:19:27,990
for the company for that so besides

00:19:25,950 --> 00:19:32,100
trying to understand what you want or

00:19:27,990 --> 00:19:34,950
what yourself needs to be successful are

00:19:32,100 --> 00:19:37,710
things that we as open-source advocates

00:19:34,950 --> 00:19:39,630
want to do is to also try to educate the

00:19:37,710 --> 00:19:42,059
decision leaders are these decision

00:19:39,630 --> 00:19:46,950
makers or business leaders about the

00:19:42,059 --> 00:19:50,190
open source culture ok and so one of the

00:19:46,950 --> 00:19:53,309
things that I always tell some of my

00:19:50,190 --> 00:19:56,640
managers directors is that open source

00:19:53,309 --> 00:20:00,150
engineers are volunteers right so we

00:19:56,640 --> 00:20:02,760
don't take money right so when you need

00:20:00,150 --> 00:20:04,679
something really desperate you have

00:20:02,760 --> 00:20:06,780
features that you want to do your bugs

00:20:04,679 --> 00:20:08,820
want to fake so you have documentation

00:20:06,780 --> 00:20:10,890
missing and you want to do right yes

00:20:08,820 --> 00:20:12,090
encouraged to actually roll up your

00:20:10,890 --> 00:20:14,970
sleeve get your hands dirty and

00:20:12,090 --> 00:20:19,200
contribute and everywhere should be

00:20:14,970 --> 00:20:21,059
welcomed to contribute and if you get

00:20:19,200 --> 00:20:22,830
stuck I'm pretty sure that within the

00:20:21,059 --> 00:20:26,059
80s communities there's a lot of people

00:20:22,830 --> 00:20:28,260
willing to give a hand to help you out

00:20:26,059 --> 00:20:31,380
speaking of volunteers actually this

00:20:28,260 --> 00:20:35,370
week is the National Volunteer Week is

00:20:31,380 --> 00:20:37,590
April 6 to a pro drought and so it is a

00:20:35,370 --> 00:20:40,799
week that is dedicated to other peoples

00:20:37,590 --> 00:20:43,169
who do volunteer works take time off of

00:20:40,799 --> 00:20:47,970
their schedules and do volunteer works

00:20:43,169 --> 00:20:49,799
I'm not too sure if as a spy design or

00:20:47,970 --> 00:20:52,289
coincident that the Apache occurs in the

00:20:49,799 --> 00:20:55,650
same week but the bottom line is I do

00:20:52,289 --> 00:20:58,049
consider all of us the open-source

00:20:55,650 --> 00:21:00,990
engineers are volunteers and we are

00:20:58,049 --> 00:21:04,429
doing good works of our own times for

00:21:00,990 --> 00:21:08,350
the sake of patterning the software

00:21:04,429 --> 00:21:13,429
other things we want to inform our

00:21:08,350 --> 00:21:15,559
decision makers other changes to open

00:21:13,429 --> 00:21:17,960
source software should be incremental

00:21:15,559 --> 00:21:20,720
and the business should understand this

00:21:17,960 --> 00:21:23,539
part what it means is that you wouldn't

00:21:20,720 --> 00:21:25,940
be like shutting the door and four

00:21:23,539 --> 00:21:27,830
months and develop some features behind

00:21:25,940 --> 00:21:29,960
its doors and then some massive amount

00:21:27,830 --> 00:21:33,500
of codes at the end of it and expect a

00:21:29,960 --> 00:21:35,659
community to merge the change quickly

00:21:33,500 --> 00:21:38,149
and smoothly it's just not going to be

00:21:35,659 --> 00:21:40,580
very easy to do so because there would

00:21:38,149 --> 00:21:44,630
be so many different some it's so

00:21:40,580 --> 00:21:46,820
difficult to do code review and provide

00:21:44,630 --> 00:21:49,850
you with feedbacks and that would be

00:21:46,820 --> 00:21:52,370
easily some mistakes hidden behind such

00:21:49,850 --> 00:21:56,330
massive amount of code change for that

00:21:52,370 --> 00:21:59,980
so there are ways of course if you want

00:21:56,330 --> 00:22:02,419
to build major features or big changes

00:21:59,980 --> 00:22:04,760
for example such as having a feature

00:22:02,419 --> 00:22:06,380
branch and then continuously merging

00:22:04,760 --> 00:22:08,690
from the trunk to the feature branch

00:22:06,380 --> 00:22:11,029
during your development time during your

00:22:08,690 --> 00:22:13,340
different cycles and there's many other

00:22:11,029 --> 00:22:15,620
ways to do so but the most important

00:22:13,340 --> 00:22:17,450
things is you need to do some

00:22:15,620 --> 00:22:20,179
communication up front which next to my

00:22:17,450 --> 00:22:22,130
next point is the business leaders

00:22:20,179 --> 00:22:25,520
should understand that communication is

00:22:22,130 --> 00:22:27,669
a very important part and then we all

00:22:25,520 --> 00:22:30,590
actually work very collaboratively and

00:22:27,669 --> 00:22:36,980
constructively to to make our software

00:22:30,590 --> 00:22:38,659
better for that so after we try to

00:22:36,980 --> 00:22:40,580
breach other gaps of understanding and

00:22:38,659 --> 00:22:42,470
things like that so now it's the time to

00:22:40,580 --> 00:22:45,140
actually come up with a approach or

00:22:42,470 --> 00:22:48,200
strategy on try to use open source

00:22:45,140 --> 00:22:49,760
software in my business right so how

00:22:48,200 --> 00:22:52,279
should I do that right that's actually

00:22:49,760 --> 00:22:55,690
no fixed answer each business is unique

00:22:52,279 --> 00:22:58,940
and difference but we actually want to

00:22:55,690 --> 00:23:02,210
share with you how we were thinking of

00:22:58,940 --> 00:23:07,340
growing ourselves into this open model

00:23:02,210 --> 00:23:09,980
that we want so naturally speaking we

00:23:07,340 --> 00:23:12,860
would always want to try to see not

00:23:09,980 --> 00:23:14,600
always but you will come up with

00:23:12,860 --> 00:23:16,520
something like a centralized model in

00:23:14,600 --> 00:23:17,870
which we will set up a team within the

00:23:16,520 --> 00:23:19,220
company

00:23:17,870 --> 00:23:21,440
there's so many other teams actually

00:23:19,220 --> 00:23:24,440
within Yahoo using IDs and they will

00:23:21,440 --> 00:23:26,210
feed the requirements and features to

00:23:24,440 --> 00:23:27,950
the centralized teams so that there will

00:23:26,210 --> 00:23:30,980
be the single communication points with

00:23:27,950 --> 00:23:32,840
the open-source software community but

00:23:30,980 --> 00:23:36,110
that will quickly becomes an open a

00:23:32,840 --> 00:23:38,659
bottleneck for that so instead we want

00:23:36,110 --> 00:23:40,820
to up for a open model or we actually

00:23:38,659 --> 00:23:42,889
are trying to grow ourselves into this

00:23:40,820 --> 00:23:46,190
open models within this open models

00:23:42,889 --> 00:23:50,299
right for example in Yahoo we have so

00:23:46,190 --> 00:23:53,029
many teams using IDs mail search Flickr

00:23:50,299 --> 00:23:54,860
and a Media Group right each of them

00:23:53,029 --> 00:23:57,049
they have different uses and they have

00:23:54,860 --> 00:23:58,820
different features and they have

00:23:57,049 --> 00:24:01,070
different plans for for their business

00:23:58,820 --> 00:24:05,360
right all of them should be encouraged

00:24:01,070 --> 00:24:07,760
to contribute directly and so what would

00:24:05,360 --> 00:24:11,029
the central teams be doing is that is to

00:24:07,760 --> 00:24:13,549
actually educate and provide and and

00:24:11,029 --> 00:24:15,649
nurture a collaborative culture within

00:24:13,549 --> 00:24:18,559
the within the company for that they

00:24:15,649 --> 00:24:20,450
will also be the communication point

00:24:18,559 --> 00:24:23,809
with the open source software community

00:24:20,450 --> 00:24:25,580
so that when this new release or new

00:24:23,809 --> 00:24:27,409
features coming out they'll bring it

00:24:25,580 --> 00:24:30,200
back the company they would also serve

00:24:27,409 --> 00:24:34,610
as a communication point among teams to

00:24:30,200 --> 00:24:37,580
share best practices these patterns of

00:24:34,610 --> 00:24:41,899
usage as well as configuration tips for

00:24:37,580 --> 00:24:46,070
that other factors other tips that we

00:24:41,899 --> 00:24:48,529
have adopted in our adoptions for eight

00:24:46,070 --> 00:24:52,309
years include the fact that we

00:24:48,529 --> 00:24:55,460
discourage forking of the codes right so

00:24:52,309 --> 00:24:56,929
you can talk to Cole develop your own

00:24:55,460 --> 00:24:59,000
features and generate build that

00:24:56,929 --> 00:25:02,000
deviates on the sauce we want to become

00:24:59,000 --> 00:25:04,190
discouraged our engineers from doing so

00:25:02,000 --> 00:25:06,409
that's because it is quickly going to be

00:25:04,190 --> 00:25:09,860
very hard and difficult to maintain such

00:25:06,409 --> 00:25:12,799
changes as we observe that in the 80s

00:25:09,860 --> 00:25:14,960
case changes or improvement are coming

00:25:12,799 --> 00:25:17,029
in too fast and too often and you

00:25:14,960 --> 00:25:18,740
basically run out of your own bandwidth

00:25:17,029 --> 00:25:22,940
to actually try to merge in those

00:25:18,740 --> 00:25:25,170
changes as you go on for that so that's

00:25:22,940 --> 00:25:27,420
not a good way

00:25:25,170 --> 00:25:30,960
for you we also want to discourage

00:25:27,420 --> 00:25:34,770
people from doing hacks of quick fixes

00:25:30,960 --> 00:25:37,730
for their own deployment except when

00:25:34,770 --> 00:25:39,810
there's cases in which you need to

00:25:37,730 --> 00:25:42,630
immediately effects a live production

00:25:39,810 --> 00:25:45,630
issues but even if for those case we

00:25:42,630 --> 00:25:47,460
should we encourage our engineers to try

00:25:45,630 --> 00:25:49,470
to come up with a proper fix to replace

00:25:47,460 --> 00:25:51,060
all those quick hacks and work with the

00:25:49,470 --> 00:25:53,610
open-source community to merge in those

00:25:51,060 --> 00:25:56,340
fixes and as much as possible and as

00:25:53,610 --> 00:25:59,070
early as possible for that and at the

00:25:56,340 --> 00:26:01,590
last part we just want to keep

00:25:59,070 --> 00:26:04,230
stretching the fact that communication

00:26:01,590 --> 00:26:07,890
is actually very important in this open

00:26:04,230 --> 00:26:11,240
model of adopting ATS both internally

00:26:07,890 --> 00:26:15,480
externally for us to be successful to

00:26:11,240 --> 00:26:16,940
adopt ATS in such a large communities of

00:26:15,480 --> 00:26:19,440
itself

00:26:16,940 --> 00:26:21,890
finally I actually want to touch a

00:26:19,440 --> 00:26:26,790
little bit on the benefits of adopting

00:26:21,890 --> 00:26:30,390
open source or ATS using our open model

00:26:26,790 --> 00:26:32,910
for that once we do this we started to

00:26:30,390 --> 00:26:36,900
immediately see differences within our

00:26:32,910 --> 00:26:40,260
engineers and engineers or teams they

00:26:36,900 --> 00:26:42,120
feel more empowered to make changes they

00:26:40,260 --> 00:26:44,520
no longer things that they are blog by

00:26:42,120 --> 00:26:45,470
some other central teams or things like

00:26:44,520 --> 00:26:48,540
that

00:26:45,470 --> 00:26:50,850
they are actually entitled to unblock

00:26:48,540 --> 00:26:55,440
themselves by participating in the open

00:26:50,850 --> 00:26:58,290
source directly for that so with that we

00:26:55,440 --> 00:27:00,900
actually see a lot more participation in

00:26:58,290 --> 00:27:02,760
our discussion forums voluntary help

00:27:00,900 --> 00:27:04,770
increases and there's a lot more

00:27:02,760 --> 00:27:07,050
discussions and collaborations happening

00:27:04,770 --> 00:27:09,840
for that and that's actually really good

00:27:07,050 --> 00:27:12,930
and we also thinks that quality also

00:27:09,840 --> 00:27:15,300
improve with so many communications

00:27:12,930 --> 00:27:18,030
actual happenings and also there's a lot

00:27:15,300 --> 00:27:20,430
of reviews coming back from experienced

00:27:18,030 --> 00:27:24,420
industry expert from the open source

00:27:20,430 --> 00:27:25,770
community as well too and in turn we

00:27:24,420 --> 00:27:28,800
think that this actually really really

00:27:25,770 --> 00:27:32,040
helped us in terms of retaining and

00:27:28,800 --> 00:27:34,860
developing our own internal top talents

00:27:32,040 --> 00:27:37,770
and hopefully in the futures in a not

00:27:34,860 --> 00:27:39,930
not too distant future we will also

00:27:37,770 --> 00:27:43,740
have the chance of improving our ability

00:27:39,930 --> 00:27:46,440
to hire and recruit top talents with

00:27:43,740 --> 00:27:50,910
open source experience as well as

00:27:46,440 --> 00:27:54,350
experience in the 80s for that thank you

00:27:50,910 --> 00:27:54,350
there so any questions

00:28:02,320 --> 00:28:04,980
all right

00:28:06,930 --> 00:28:13,520
did you have any problems with your

00:28:08,610 --> 00:28:15,420
lawyers in in collaborating and sharing

00:28:13,520 --> 00:28:20,660
intellectual property with the open

00:28:15,420 --> 00:28:23,220
source community internally we have

00:28:20,660 --> 00:28:26,640
something called the open source working

00:28:23,220 --> 00:28:29,400
group so there's a bunch of experienced

00:28:26,640 --> 00:28:33,030
engineers executive actually provides

00:28:29,400 --> 00:28:35,250
advice on how to participate in open

00:28:33,030 --> 00:28:37,710
source activities so whatever we are

00:28:35,250 --> 00:28:39,930
doing actually we actually get a lot of

00:28:37,710 --> 00:28:43,790
advice from decentralized groups of

00:28:39,930 --> 00:28:43,790
people's for that matter yeah

00:28:49,300 --> 00:28:55,360
good

00:28:51,640 --> 00:28:55,360

YouTube URL: https://www.youtube.com/watch?v=Uz6XK4txCWM


