Title: Building a large scale CDN with Apache Traffic Server - Jan van Doorn
Publication date: 2014-04-25
Playlist: ApacheCon North America 2014
Description: 
	ApacheCon North America 2014
Captions: 
	00:00:00,630 --> 00:00:06,690
what I'd like to do is spend some time

00:00:02,399 --> 00:00:09,240
of talking about building a CDN with

00:00:06,690 --> 00:00:12,660
Apache traffic server us this is based

00:00:09,240 --> 00:00:17,390
on experiences that that we have at

00:00:12,660 --> 00:00:20,520
Comcast building this CDN a little bit

00:00:17,390 --> 00:00:24,560
about me I am an engineer at comcast

00:00:20,520 --> 00:00:27,510
cable I in the lead engineer of our CDN

00:00:24,560 --> 00:00:28,199
engineering group and I am in need OVS

00:00:27,510 --> 00:00:30,330
SCD

00:00:28,199 --> 00:00:35,540
CDN Eng which means I'm in the video

00:00:30,330 --> 00:00:38,600
services group I have been a longtime

00:00:35,540 --> 00:00:42,690
interactive TV geek I've been probably

00:00:38,600 --> 00:00:47,489
doing television type stuff for the last

00:00:42,690 --> 00:00:49,500
18 years now and I am a recovering

00:00:47,489 --> 00:00:51,809
unix's admin I don't think you ever

00:00:49,500 --> 00:00:54,480
leave that once you've been one you

00:00:51,809 --> 00:00:56,039
always will be a eunuch sysadmin I try

00:00:54,480 --> 00:00:58,109
to solve everything in Perl it doesn't

00:00:56,039 --> 00:01:01,859
always work but I still kind of have to

00:00:58,109 --> 00:01:03,989
do that and I'm live in Colorado but I'm

00:01:01,859 --> 00:01:05,670
originally from the Netherlands as you

00:01:03,989 --> 00:01:09,500
may have guessed from my name

00:01:05,670 --> 00:01:11,909
Yann is a very common name out there a

00:01:09,500 --> 00:01:14,549
disclaimer there's a lot of talk about

00:01:11,909 --> 00:01:16,439
Comcast and what we do and a lot of

00:01:14,549 --> 00:01:17,700
people looking at us and we're buying

00:01:16,439 --> 00:01:20,460
Time Warner and there's all this stuff

00:01:17,700 --> 00:01:22,770
going on we use CDNs in many many ways

00:01:20,460 --> 00:01:25,259
to CDN I'm going to be talking about is

00:01:22,770 --> 00:01:28,470
the CDN the next-generation CDN that we

00:01:25,259 --> 00:01:32,490
use to deliver next-generation video to

00:01:28,470 --> 00:01:33,689
our own customers and you can take all

00:01:32,490 --> 00:01:35,640
kinds of little details in this

00:01:33,689 --> 00:01:38,100
presentation and say well are scum guys

00:01:35,640 --> 00:01:39,450
doing this is comcast doing that I hope

00:01:38,100 --> 00:01:41,430
you guys are not going to be doing that

00:01:39,450 --> 00:01:45,210
because that's just going to get really

00:01:41,430 --> 00:01:49,549
really messy this is about the CDN that

00:01:45,210 --> 00:01:53,189
we built to deliver video a little bit

00:01:49,549 --> 00:01:57,119
about what what really is a CDN because

00:01:53,189 --> 00:02:00,530
you have this HTTP caching proxy and

00:01:57,119 --> 00:02:02,490
what do you need to make that into a CDN

00:02:00,530 --> 00:02:03,960
obviously you need a lot of these caches

00:02:02,490 --> 00:02:07,259
because that they're really the

00:02:03,960 --> 00:02:10,319
workhorses of any CDN but you also need

00:02:07,259 --> 00:02:12,810
a way to get your customers to the

00:02:10,319 --> 00:02:15,690
closest cache that you

00:02:12,810 --> 00:02:18,569
in a location it's all about trying to

00:02:15,690 --> 00:02:21,239
sort of get these caches deep into the

00:02:18,569 --> 00:02:23,550
network and not have this this traffic

00:02:21,239 --> 00:02:27,270
go up in your network but trying to

00:02:23,550 --> 00:02:28,830
localize it as best as possible and we

00:02:27,270 --> 00:02:30,569
and we call this thing that that does

00:02:28,830 --> 00:02:32,069
that it helps you get to the closest

00:02:30,569 --> 00:02:34,530
cache we call that the content router

00:02:32,069 --> 00:02:36,750
it's it's maybe a strange term for a lot

00:02:34,530 --> 00:02:38,700
of people but we call that content

00:02:36,750 --> 00:02:41,310
routing it's not necessary we're not

00:02:38,700 --> 00:02:44,580
really routing a content we're getting

00:02:41,310 --> 00:02:46,560
the customer to the closest cache but it

00:02:44,580 --> 00:02:50,390
has the effect of actually routing

00:02:46,560 --> 00:02:53,340
content through our network as well we

00:02:50,390 --> 00:02:55,769
we need a health protocol to see how our

00:02:53,340 --> 00:02:57,840
caches are doing you don't want to be

00:02:55,769 --> 00:03:01,319
sending customers to try to caches that

00:02:57,840 --> 00:03:04,080
are broken that are overloaded or things

00:03:01,319 --> 00:03:07,260
like that you need a management and

00:03:04,080 --> 00:03:09,269
monitoring system a CDN is kind of this

00:03:07,260 --> 00:03:10,830
whole package of all of these things we

00:03:09,269 --> 00:03:12,930
have hundreds of these caches you can't

00:03:10,830 --> 00:03:14,489
you know telnet or SSH to all of them

00:03:12,930 --> 00:03:16,530
and do configuration you need some kind

00:03:14,489 --> 00:03:19,709
of management system and you need a

00:03:16,530 --> 00:03:21,420
reporting system CDNs it's really

00:03:19,709 --> 00:03:22,500
important for CD ends to be able to show

00:03:21,420 --> 00:03:24,060
what they've been doing

00:03:22,500 --> 00:03:27,180
sometimes it's internal or external

00:03:24,060 --> 00:03:30,410
billing that's based on log formats and

00:03:27,180 --> 00:03:34,950
log lines and it sort of is kind of the

00:03:30,410 --> 00:03:39,180
it's it's how you do accounting of other

00:03:34,950 --> 00:03:44,670
CDN now why does Comcast need one and

00:03:39,180 --> 00:03:46,500
why does com can eat this this CDN we're

00:03:44,670 --> 00:03:48,870
sort of in this this transition of

00:03:46,500 --> 00:03:50,780
having you know we have a lot of legacy

00:03:48,870 --> 00:03:54,510
video out there we do a lot of legacy

00:03:50,780 --> 00:03:57,389
delivery of video right now but we're

00:03:54,510 --> 00:03:59,220
moving towards a newer way of delivering

00:03:57,389 --> 00:04:01,410
video we're moving towards a newer way

00:03:59,220 --> 00:04:03,569
of discovering video I don't know if

00:04:01,410 --> 00:04:04,500
some of you may have seen our new X 1 X

00:04:03,569 --> 00:04:06,720
2 interface

00:04:04,500 --> 00:04:07,859
it doesn't look at it like it was made

00:04:06,720 --> 00:04:10,440
in the 90s anymore

00:04:07,859 --> 00:04:12,780
it looks like it's a web style interface

00:04:10,440 --> 00:04:16,370
on your TV that allows you to discover

00:04:12,780 --> 00:04:20,760
all kinds of video all kinds of assets

00:04:16,370 --> 00:04:22,620
we have all kinds of web style images

00:04:20,760 --> 00:04:24,510
that we need to get to those set-top

00:04:22,620 --> 00:04:26,630
boxes and once you start talking set-top

00:04:24,510 --> 00:04:27,950
boxes you're easily talking million

00:04:26,630 --> 00:04:29,990
and millions and when you start ramping

00:04:27,950 --> 00:04:34,060
up there's a lot of traffic that they

00:04:29,990 --> 00:04:36,950
can be making but more importantly

00:04:34,060 --> 00:04:40,940
next-generation video is also becoming

00:04:36,950 --> 00:04:43,670
all the way IP it's currently when we

00:04:40,940 --> 00:04:46,460
deliver IP T or set-top box mostly what

00:04:43,670 --> 00:04:49,760
happens is is it's multicast in our fit

00:04:46,460 --> 00:04:52,070
in our core network at about the last

00:04:49,760 --> 00:04:56,240
mile we convert that to what we call

00:04:52,070 --> 00:04:58,160
quam and cable speak and in it's it's a

00:04:56,240 --> 00:04:59,870
proprietary protocol from there it's not

00:04:58,160 --> 00:05:02,330
necessarily proprietary but it's very

00:04:59,870 --> 00:05:05,300
cable stuff if you know what I mean

00:05:02,330 --> 00:05:07,580
we're moving to a way of delivering

00:05:05,300 --> 00:05:10,280
video to end-users all the way to

00:05:07,580 --> 00:05:12,500
end-users that is not bad anymore that's

00:05:10,280 --> 00:05:16,910
actually using IP this happened to voice

00:05:12,500 --> 00:05:19,040
in 2000 between 95 and 2000 right now if

00:05:16,910 --> 00:05:23,210
you pick up your phone it doesn't matter

00:05:19,040 --> 00:05:25,490
if you're on a traditional Potts phone

00:05:23,210 --> 00:05:27,350
provider or if you're on Comcast or if

00:05:25,490 --> 00:05:30,590
you're on your cell phone that voice

00:05:27,350 --> 00:05:32,930
signal is actually traveling across IP

00:05:30,590 --> 00:05:39,350
it's actually IP packets the same is

00:05:32,930 --> 00:05:40,610
going to happen to do video and it this

00:05:39,350 --> 00:05:43,640
is kind of important because this is

00:05:40,610 --> 00:05:46,700
mostly what we carry on our CDN and

00:05:43,640 --> 00:05:48,500
mostly what we build our CDN to what

00:05:46,700 --> 00:05:50,600
happens is you have these big video

00:05:48,500 --> 00:05:52,820
files everybody's downloaded these big

00:05:50,600 --> 00:05:55,370
old des files that you can play and it

00:05:52,820 --> 00:05:57,920
takes a very long time to deliver these

00:05:55,370 --> 00:06:00,650
to our customers and Netflix does is

00:05:57,920 --> 00:06:02,810
Hulu Amazon everybody does sort of the

00:06:00,650 --> 00:06:04,160
same thing there's three major protocols

00:06:02,810 --> 00:06:06,050
to do this but what you do is you take

00:06:04,160 --> 00:06:08,690
these big files and you chop them up in

00:06:06,050 --> 00:06:11,390
two second three seconds or six second

00:06:08,690 --> 00:06:15,320
chunks and you deliver those chunks

00:06:11,390 --> 00:06:18,560
using HTTP same HTTP that you use to

00:06:15,320 --> 00:06:20,420
browse to LinkedIn or to Facebook or

00:06:18,560 --> 00:06:23,720
it's the same protocol same everything

00:06:20,420 --> 00:06:26,690
and now these objects become kind of

00:06:23,720 --> 00:06:28,910
opaque things that you can do what you

00:06:26,690 --> 00:06:31,420
do with other web objects as well you

00:06:28,910 --> 00:06:33,490
can store them in the city and you can

00:06:31,420 --> 00:06:35,140
datem you can give them access you can

00:06:33,490 --> 00:06:37,930
do all the things that you did before

00:06:35,140 --> 00:06:42,490
with webpages you can now do that to

00:06:37,930 --> 00:06:45,600
video it still is quite high bandwidth

00:06:42,490 --> 00:06:49,240
though because you know you're talking

00:06:45,600 --> 00:06:50,650
easily four five six megabits per second

00:06:49,240 --> 00:06:54,640
that we want to be delivering to your

00:06:50,650 --> 00:06:56,440
laptop and if we're going big-screen TV

00:06:54,640 --> 00:06:58,090
you're talking seven eight megabits per

00:06:56,440 --> 00:07:00,460
second and sometimes even more if you

00:06:58,090 --> 00:07:02,230
and then they start doing 4k and you get

00:07:00,460 --> 00:07:03,790
all these other things it's sort of a

00:07:02,230 --> 00:07:06,930
rat race but it's very high bid weight

00:07:03,790 --> 00:07:12,120
compared to what what we were talking

00:07:06,930 --> 00:07:12,120
what a normal browser would be using

00:07:13,110 --> 00:07:23,800
it's also we use it for live television

00:07:18,270 --> 00:07:26,500
n44 Fahd and cloud DVR so we we have

00:07:23,800 --> 00:07:28,780
live events that are going on NBC was

00:07:26,500 --> 00:07:31,120
doing the Olympics all that stuff was

00:07:28,780 --> 00:07:34,330
using this type of technology and it

00:07:31,120 --> 00:07:37,090
also sort of adapts to what resources

00:07:34,330 --> 00:07:40,840
you have in the network between you and

00:07:37,090 --> 00:07:43,030
the CDN and on your local laptop I don't

00:07:40,840 --> 00:07:44,800
know if you guys use Netflix but usually

00:07:43,030 --> 00:07:46,479
when you start a Netflix movie you can

00:07:44,800 --> 00:07:49,120
see it's kind of fuzzy a little bit and

00:07:46,479 --> 00:07:50,530
then after do six depending on what kind

00:07:49,120 --> 00:07:53,080
of connectivity you have it actually

00:07:50,530 --> 00:07:55,419
ramps up to a higher bitrate and we call

00:07:53,080 --> 00:08:01,260
that ABR video adjustable adjustable

00:07:55,419 --> 00:08:04,210
bitrate video so about two years ago we

00:08:01,260 --> 00:08:06,520
asked Comcast we're going to heavily

00:08:04,210 --> 00:08:08,169
invest into this technology we wanted to

00:08:06,520 --> 00:08:11,620
use this technology to start delivering

00:08:08,169 --> 00:08:14,169
to second screens but also to primary

00:08:11,620 --> 00:08:18,310
screen TVs and we kind of had a decision

00:08:14,169 --> 00:08:18,880
to make back then and we could go and

00:08:18,310 --> 00:08:21,190
buy this

00:08:18,880 --> 00:08:24,520
there's vendors out there there's large

00:08:21,190 --> 00:08:26,979
vendors out there cisco is one very view

00:08:24,520 --> 00:08:29,260
is another alcatel-lucent you could go

00:08:26,979 --> 00:08:31,150
and buy this and get the technology from

00:08:29,260 --> 00:08:33,190
a vendor get support get all these good

00:08:31,150 --> 00:08:35,169
stuff that cable companies know and love

00:08:33,190 --> 00:08:37,330
and really really so that that's what we

00:08:35,169 --> 00:08:39,280
do right where cable companies we go to

00:08:37,330 --> 00:08:40,690
a vendor we give them money they give us

00:08:39,280 --> 00:08:42,550
a product and when it doesn't work we

00:08:40,690 --> 00:08:42,919
call them and if it really doesn't work

00:08:42,550 --> 00:08:44,450
then we

00:08:42,919 --> 00:08:46,490
have our boss column and it's not even

00:08:44,450 --> 00:08:49,490
worse and you know the debt that's sort

00:08:46,490 --> 00:08:52,089
of how cable used to work but I think

00:08:49,490 --> 00:08:55,130
Comcast as a company is sort of

00:08:52,089 --> 00:08:56,870
transitioning from that old guide with

00:08:55,130 --> 00:08:59,389
the blue wieners and all that old stuff

00:08:56,870 --> 00:09:01,910
that was built in the 90s where it takes

00:08:59,389 --> 00:09:03,920
us what six seven months to get a

00:09:01,910 --> 00:09:06,800
release out on a set-top box

00:09:03,920 --> 00:09:09,949
to this newer world where we have you

00:09:06,800 --> 00:09:12,170
know fast release of software for our x1

00:09:09,949 --> 00:09:15,260
platform we do it every month I think we

00:09:12,170 --> 00:09:16,430
go in agile we're moving to mpeg-4 we

00:09:15,260 --> 00:09:19,820
move to all kinds of newer technologies

00:09:16,430 --> 00:09:23,480
and Comcast is really sort of going into

00:09:19,820 --> 00:09:26,000
a new direction and my team and our the

00:09:23,480 --> 00:09:28,190
thing that we built I think is sort of

00:09:26,000 --> 00:09:32,209
spearheading that transformation inside

00:09:28,190 --> 00:09:33,980
Comcast so we decided to do it ourselves

00:09:32,209 --> 00:09:36,649
and we said we're going to build this

00:09:33,980 --> 00:09:39,769
thing ourselves and we're going to step

00:09:36,649 --> 00:09:40,910
back and sort of say okay what what do

00:09:39,769 --> 00:09:43,519
we want to do what are the most

00:09:40,910 --> 00:09:46,550
important things now being a no old

00:09:43,519 --> 00:09:48,500
cable guy like I am the two most

00:09:46,550 --> 00:09:50,300
important things are you don't want to

00:09:48,500 --> 00:09:52,550
get locked into a vendor you don't want

00:09:50,300 --> 00:09:53,959
to get locked into a vendor and actually

00:09:52,550 --> 00:09:56,300
the third thing is you don't want to get

00:09:53,959 --> 00:09:58,760
locked into a vendor because that is how

00:09:56,300 --> 00:10:00,980
cable used to be you would and it's the

00:09:58,760 --> 00:10:04,459
same for CD ends their CDN products out

00:10:00,980 --> 00:10:06,410
there even though HTTP 1.1 is an open

00:10:04,459 --> 00:10:09,620
spec and everything that travels on that

00:10:06,410 --> 00:10:12,529
CDN is totally open the control playing

00:10:09,620 --> 00:10:14,810
what makes it what gets your customer to

00:10:12,529 --> 00:10:17,029
these these local caches would have what

00:10:14,810 --> 00:10:19,130
has what have caches talking to each

00:10:17,029 --> 00:10:21,949
other what manages these caches is

00:10:19,130 --> 00:10:25,040
completely locked in so if I go to Cisco

00:10:21,949 --> 00:10:26,839
and I buy one cache for 10 gigabits per

00:10:25,040 --> 00:10:29,000
second I put it in one location if I

00:10:26,839 --> 00:10:31,190
want to expand on that I got to go to

00:10:29,000 --> 00:10:33,560
Cisco again and buy it again that was

00:10:31,190 --> 00:10:35,600
the most important reason why we didn't

00:10:33,560 --> 00:10:37,190
want to go this route and why we why we

00:10:35,600 --> 00:10:39,500
spent the time and energy to go this

00:10:37,190 --> 00:10:44,720
route obviously we wanted it to be cost

00:10:39,500 --> 00:10:46,100
effective I think it is I'm not going to

00:10:44,720 --> 00:10:48,139
go into a lot of details there but we

00:10:46,100 --> 00:10:50,630
are a lot more cost effective than some

00:10:48,139 --> 00:10:52,970
of the vendor pricing out there we

00:10:50,630 --> 00:10:54,970
wanted everything to be ipv6 and ipv4

00:10:52,970 --> 00:10:58,930
from the get Kel

00:10:54,970 --> 00:11:00,879
I know this is 2014 and ipv6 has been

00:10:58,930 --> 00:11:02,740
around for a long long time but you

00:11:00,879 --> 00:11:06,310
would be amazed how many products are

00:11:02,740 --> 00:11:08,949
out there that are not ipv6 yet because

00:11:06,310 --> 00:11:11,139
it's just not needed enough we said this

00:11:08,949 --> 00:11:12,819
this thing is going to be ipv6 from the

00:11:11,139 --> 00:11:15,879
get-go we don't want to be doing this

00:11:12,819 --> 00:11:17,980
half half so we are both we wanted it to

00:11:15,879 --> 00:11:19,420
be horizontally scalable everybody wants

00:11:17,980 --> 00:11:20,920
that but we really wanted to sort of

00:11:19,420 --> 00:11:23,829
build something that we can keep adding

00:11:20,920 --> 00:11:25,870
capacity to it and not have to worry

00:11:23,829 --> 00:11:28,870
about you know some joke points and

00:11:25,870 --> 00:11:30,939
things like that we wanted it to work

00:11:28,870 --> 00:11:34,300
really really well for this AVR video

00:11:30,939 --> 00:11:36,879
thing but we didn't exclusively want to

00:11:34,300 --> 00:11:39,220
build it for that and and and I think

00:11:36,879 --> 00:11:41,350
our CDN currently is sort of becoming

00:11:39,220 --> 00:11:44,649
almost like a mosh pit I don't know that

00:11:41,350 --> 00:11:46,240
there's any product that our product

00:11:44,649 --> 00:11:47,980
engineering or business people are

00:11:46,240 --> 00:11:50,560
coming up with that doesn't in some way

00:11:47,980 --> 00:11:53,230
or shape or form actually needs content

00:11:50,560 --> 00:11:54,879
delivery across HTTP everything seems to

00:11:53,230 --> 00:11:57,189
be going that way and we want it to be

00:11:54,879 --> 00:11:59,709
ready for that as well but we want to

00:11:57,189 --> 00:12:01,540
optimize it for this video product

00:11:59,709 --> 00:12:07,199
that's our core product as Comcast so we

00:12:01,540 --> 00:12:10,209
want to really optimize it for that I

00:12:07,199 --> 00:12:13,120
usually work for somebody who ingrained

00:12:10,209 --> 00:12:15,129
this in me that you do not want state if

00:12:13,120 --> 00:12:17,019
you can prevent it so we wanted to not

00:12:15,129 --> 00:12:18,819
have state we wanted everything to sort

00:12:17,019 --> 00:12:21,459
of be loosely coupled we didn't want to

00:12:18,819 --> 00:12:23,589
have you know clustering technology for

00:12:21,459 --> 00:12:25,990
instance we were very very shy of doing

00:12:23,589 --> 00:12:27,879
clustering even though some some caches

00:12:25,990 --> 00:12:29,920
have clustering technology is very shy

00:12:27,879 --> 00:12:32,519
that because it gets really complex

00:12:29,920 --> 00:12:35,800
really fast so we didn't want to do that

00:12:32,519 --> 00:12:39,970
we wanted to have 100% of veil ability

00:12:35,800 --> 00:12:42,759
meaning that it used to be in cable that

00:12:39,970 --> 00:12:45,459
at 2 a.m. there's a maintenance window

00:12:42,759 --> 00:12:47,980
and you pull the switch and you go and

00:12:45,459 --> 00:12:50,050
screw a new card in or you do all kinds

00:12:47,980 --> 00:12:52,449
of maintenance stuff we want maintenance

00:12:50,050 --> 00:12:55,120
to be part of normal life we want if we

00:12:52,449 --> 00:12:56,980
add a cache if something breaks if

00:12:55,120 --> 00:12:59,199
something fails everything should just

00:12:56,980 --> 00:13:02,680
route around it and customers shouldn't

00:12:59,199 --> 00:13:04,569
know nobody should be in a stressed

00:13:02,680 --> 00:13:05,920
state because they have to do

00:13:04,569 --> 00:13:08,019
maintenance on anything it should just

00:13:05,920 --> 00:13:09,399
be a normal thing of life that's what

00:13:08,019 --> 00:13:11,260
that's what we do

00:13:09,399 --> 00:13:11,830
so that they'll dose any should be

00:13:11,260 --> 00:13:13,810
simple

00:13:11,830 --> 00:13:16,960
those were sorta two design principles

00:13:13,810 --> 00:13:19,600
that we have so here's what we came up

00:13:16,960 --> 00:13:21,940
with I'll go into the cache is in the

00:13:19,600 --> 00:13:24,670
content routing a little bit more in in

00:13:21,940 --> 00:13:26,770
detail but we chose traffic server I'll

00:13:24,670 --> 00:13:29,410
go into that a little bit as well

00:13:26,770 --> 00:13:31,350
the Health's protocol is something that

00:13:29,410 --> 00:13:35,290
we built in-house it's an Apache Tomcat

00:13:31,350 --> 00:13:37,390
application that monitors all these ATS

00:13:35,290 --> 00:13:41,380
caches what we do is every eight seconds

00:13:37,390 --> 00:13:43,180
we pull a modified a stats so there's an

00:13:41,380 --> 00:13:45,399
a stats plug-in in traffic server every

00:13:43,180 --> 00:13:47,740
eight seconds we pull that and we get

00:13:45,399 --> 00:13:49,740
you know some system statistics but all

00:13:47,740 --> 00:13:52,600
also all of the traffic server status

00:13:49,740 --> 00:13:54,910
statistics we sort of get that into a

00:13:52,600 --> 00:14:03,640
server and that server assesses health

00:13:54,910 --> 00:14:05,410
of all of these caches we have a yes we

00:14:03,640 --> 00:14:07,899
have a management and monitoring system

00:14:05,410 --> 00:14:10,570
that we built in-house and like I said I

00:14:07,899 --> 00:14:12,880
like to solve every problem there is in

00:14:10,570 --> 00:14:14,500
Perl so we built that in promo delicious

00:14:12,880 --> 00:14:16,660
it's a framework web framework like

00:14:14,500 --> 00:14:18,010
anything but we had a bunch of segments

00:14:16,660 --> 00:14:21,400
and it really helped us out doing that

00:14:18,010 --> 00:14:23,050
in in Perl and more delicious and we

00:14:21,400 --> 00:14:25,450
actually bought a reporting system

00:14:23,050 --> 00:14:27,430
because if you look at the first three

00:14:25,450 --> 00:14:30,730
rules that we have no vendor locking

00:14:27,430 --> 00:14:32,410
this allowed us to just keep moving log

00:14:30,730 --> 00:14:34,240
files you can't get locked into any

00:14:32,410 --> 00:14:36,250
vendor we figured let's just not worry

00:14:34,240 --> 00:14:37,839
about that we already had some licenses

00:14:36,250 --> 00:14:43,060
with a vendor we bought spunk to do our

00:14:37,839 --> 00:14:47,230
log analysis a little bit about content

00:14:43,060 --> 00:14:49,990
routing and again I think that's the

00:14:47,230 --> 00:14:51,820
term that we use in every bit every you

00:14:49,990 --> 00:14:53,980
know to us it's kind of like normal what

00:14:51,820 --> 00:14:56,260
that is but I really want to sort of go

00:14:53,980 --> 00:14:58,959
into a little bit layer deeper as to

00:14:56,260 --> 00:15:02,650
what that really means you want to get

00:14:58,959 --> 00:15:06,579
your customer to the best cache based on

00:15:02,650 --> 00:15:09,850
distance network cost network link

00:15:06,579 --> 00:15:12,339
quality and speed and also availability

00:15:09,850 --> 00:15:15,160
of content and there's two ways that you

00:15:12,339 --> 00:15:18,790
can do that the first way is DNS content

00:15:15,160 --> 00:15:21,800
routing and that really means that your

00:15:18,790 --> 00:15:24,019
content router is going to be DNS

00:15:21,800 --> 00:15:27,740
authoritative for the domain that you

00:15:24,019 --> 00:15:31,279
want to go to so here just go through

00:15:27,740 --> 00:15:34,010
this here we have edged IMG ex

00:15:31,279 --> 00:15:36,170
comcast.net and what happens is your

00:15:34,010 --> 00:15:39,560
client is going to want to resolve that

00:15:36,170 --> 00:15:41,990
name to an IP address so it's going to

00:15:39,560 --> 00:15:44,660
go to its local DNS server or resolver

00:15:41,990 --> 00:15:47,329
and that local DNS server or resolver is

00:15:44,660 --> 00:15:49,250
going to be going to the dotnet or the

00:15:47,329 --> 00:15:52,130
dot-com or and it's going to go and

00:15:49,250 --> 00:15:54,980
eventually end up at us so it's doing

00:15:52,130 --> 00:15:57,290
that query and then it comes up at our

00:15:54,980 --> 00:15:59,570
content router and that's where we make

00:15:57,290 --> 00:16:03,070
the routing decision but because this is

00:15:59,570 --> 00:16:07,279
DNS we only have two facts here we know

00:16:03,070 --> 00:16:12,110
which resolver this client was using and

00:16:07,279 --> 00:16:13,910
we know the health of our CDN because we

00:16:12,110 --> 00:16:15,410
sort of have this rascal server telling

00:16:13,910 --> 00:16:17,180
us that I'll go do a little bit more of

00:16:15,410 --> 00:16:19,820
that as well we actually don't know

00:16:17,180 --> 00:16:23,120
where the client is at this point and if

00:16:19,820 --> 00:16:26,270
you at home set your resolver in your in

00:16:23,120 --> 00:16:29,690
your network settings if you set it to

00:16:26,270 --> 00:16:31,730
Google DNS then our CDN can't really

00:16:29,690 --> 00:16:35,270
know where you are for this type of

00:16:31,730 --> 00:16:37,279
stuff because Google DNS anybody can set

00:16:35,270 --> 00:16:40,040
that and it really is hard to target

00:16:37,279 --> 00:16:45,079
people to a closed web location for that

00:16:40,040 --> 00:16:47,360
so we we make the decision based on you

00:16:45,079 --> 00:16:49,550
know this this DNS resolver and we send

00:16:47,360 --> 00:16:52,070
you to the most local cache and we have

00:16:49,550 --> 00:16:54,560
these cache groups and over here I have

00:16:52,070 --> 00:16:57,980
Denver then I have another edge we have

00:16:54,560 --> 00:17:00,050
about 26 of these cache groups I'm not

00:16:57,980 --> 00:17:01,370
calling them clusters and I really don't

00:17:00,050 --> 00:17:04,069
want to call them clusters because we

00:17:01,370 --> 00:17:06,829
don't use the AES clustering feature but

00:17:04,069 --> 00:17:09,199
we do try and make those caches work

00:17:06,829 --> 00:17:10,520
together as one cache but for DNS we

00:17:09,199 --> 00:17:12,500
can't really do that much with that

00:17:10,520 --> 00:17:14,750
because we don't really know that this

00:17:12,500 --> 00:17:16,790
customer wants to get IMG dot B and G we

00:17:14,750 --> 00:17:19,160
just know that that customer wants to go

00:17:16,790 --> 00:17:21,140
to that host we don't know what he's

00:17:19,160 --> 00:17:22,339
actually going to be getting but anyway

00:17:21,140 --> 00:17:24,140
we're going to make that decision as

00:17:22,339 --> 00:17:25,699
best as we can at that point and we're

00:17:24,140 --> 00:17:28,550
going to send that customer to one of

00:17:25,699 --> 00:17:30,800
the caches over here we gave them the IP

00:17:28,550 --> 00:17:33,440
address of edge oh three which is one or

00:17:30,800 --> 00:17:34,960
two or three whatever and then basically

00:17:33,440 --> 00:17:38,090
we have a two-tier

00:17:34,960 --> 00:17:41,690
system where we also have a mid tier

00:17:38,090 --> 00:17:43,970
over here and we at that point make a

00:17:41,690 --> 00:17:45,710
Content routing decision inside the

00:17:43,970 --> 00:17:48,530
cache in parent selection we did a

00:17:45,710 --> 00:17:55,190
modified parent selection algorithm

00:17:48,530 --> 00:17:57,410
where we do a hash on the the image IMG

00:17:55,190 --> 00:17:59,810
dot PNG in this case and we send

00:17:57,410 --> 00:18:01,610
everybody that needs to get IMG to PNG

00:17:59,810 --> 00:18:04,580
because there's many of these edge plug

00:18:01,610 --> 00:18:07,880
edge groups pointing at that one mid

00:18:04,580 --> 00:18:10,250
it's it's a hierarchy right so there's

00:18:07,880 --> 00:18:12,500
many of them going that way and and we

00:18:10,250 --> 00:18:18,440
make that decision based on the content

00:18:12,500 --> 00:18:21,200
itself then we have 26 of these edge

00:18:18,440 --> 00:18:23,960
locations currently we have three of

00:18:21,200 --> 00:18:26,720
these mid locations it goes to the

00:18:23,960 --> 00:18:30,260
origin our edges are reverse proxies our

00:18:26,720 --> 00:18:34,820
mids are forward proxies and that's sort

00:18:30,260 --> 00:18:36,500
of how the ATS are they just parent

00:18:34,820 --> 00:18:39,200
selection now how that works right it

00:18:36,500 --> 00:18:42,980
needs a forward proxy there these myths

00:18:39,200 --> 00:18:46,160
here are protected by two kinds of ACLs

00:18:42,980 --> 00:18:47,870
one is application layer ACL and IPL

00:18:46,160 --> 00:18:52,280
outer config the other is in that

00:18:47,870 --> 00:18:53,690
network ACL because we found very fast

00:18:52,280 --> 00:18:56,000
if you don't want to have open forward

00:18:53,690 --> 00:18:57,560
proxies on the internet there's like all

00:18:56,000 --> 00:18:59,780
kinds of interesting things that will

00:18:57,560 --> 00:19:02,660
happen to your CDN fu duty if you do

00:18:59,780 --> 00:19:04,370
that so so we don't do that so the

00:19:02,660 --> 00:19:07,910
request goes to the origin we assume

00:19:04,370 --> 00:19:10,940
it's all misses and we see this request

00:19:07,910 --> 00:19:13,610
go back 200 ok 200 ok caching everybody

00:19:10,940 --> 00:19:15,590
happy there are problems with this DNS

00:19:13,610 --> 00:19:18,860
though because the next time somebody

00:19:15,590 --> 00:19:22,940
wants that I am GPMG I actually don't

00:19:18,860 --> 00:19:24,620
know to send them to hl3 I don't because

00:19:22,940 --> 00:19:26,950
I don't know that he wanted that in the

00:19:24,620 --> 00:19:29,830
first place so I can only sort of have

00:19:26,950 --> 00:19:32,090
people who are going to that hostname

00:19:29,830 --> 00:19:34,370
congregating on a group of caches but I

00:19:32,090 --> 00:19:38,750
don't really know what they have another

00:19:34,370 --> 00:19:40,790
way of doing this is by doing HTTP

00:19:38,750 --> 00:19:42,290
content routing the first D and that's

00:19:40,790 --> 00:19:43,790
what you want to do you usually want to

00:19:42,290 --> 00:19:45,560
do that when you're giving people

00:19:43,790 --> 00:19:47,810
objects for web pages and things like

00:19:45,560 --> 00:19:49,820
that so you want to just really

00:19:47,810 --> 00:19:53,570
quickly get small objects but as I said

00:19:49,820 --> 00:19:56,540
before these video things to 2 seconds

00:19:53,570 --> 00:19:59,810
of video is easily a megabyte

00:19:56,540 --> 00:20:02,120
so our objects in our caches are

00:19:59,810 --> 00:20:03,680
actually quite large and what happens

00:20:02,120 --> 00:20:07,250
when somebody starts one of these video

00:20:03,680 --> 00:20:09,980
streams they actually make a keepalive

00:20:07,250 --> 00:20:12,470
session to this cache and they stick to

00:20:09,980 --> 00:20:15,550
the cache so what we do here is we

00:20:12,470 --> 00:20:19,550
actually this did it's the same deal but

00:20:15,550 --> 00:20:21,680
right at this point the content router

00:20:19,550 --> 00:20:23,720
is not going to return the IP address of

00:20:21,680 --> 00:20:27,140
a cache but it's going to return your IP

00:20:23,720 --> 00:20:29,300
address of itself the client will then

00:20:27,140 --> 00:20:30,950
make a connection to the content router

00:20:29,300 --> 00:20:34,340
thinking it's going to get the content

00:20:30,950 --> 00:20:36,950
there and at that point the content

00:20:34,340 --> 00:20:40,340
router can make the decision to route

00:20:36,950 --> 00:20:42,950
this based on 4 things it can look at

00:20:40,340 --> 00:20:45,950
the HTTP headers it can look at the path

00:20:42,950 --> 00:20:47,840
it can look at the health and the client

00:20:45,950 --> 00:20:49,370
location and it really knows the client

00:20:47,840 --> 00:20:53,030
location now because it's the other side

00:20:49,370 --> 00:20:55,340
of the socket and we know in our network

00:20:53,030 --> 00:20:58,340
where customers are because we manage

00:20:55,340 --> 00:21:00,140
our own network so now the client can

00:20:58,340 --> 00:21:04,160
make a much better decision as to where

00:21:00,140 --> 00:21:08,750
to send this particular customer and it

00:21:04,160 --> 00:21:10,850
can sort of use these edges edge 1 2 3 4

00:21:08,750 --> 00:21:13,940
all in Denver it gets use even though

00:21:10,850 --> 00:21:16,340
they're not clustered it can use them as

00:21:13,940 --> 00:21:18,590
a clustered group of caches because

00:21:16,340 --> 00:21:20,780
every time somebody is going to get m1

00:21:18,590 --> 00:21:22,700
dot F for M we're going to send them to

00:21:20,780 --> 00:21:25,610
I don't know where we're going to send

00:21:22,700 --> 00:21:27,860
them to NGO 3 again if somebody else is

00:21:25,610 --> 00:21:30,200
going to that same movie they're going

00:21:27,860 --> 00:21:32,690
to go to that same cache I'm not I won't

00:21:30,200 --> 00:21:34,850
have that movie in any other cache in a

00:21:32,690 --> 00:21:37,120
Geo 3 until it fails or the health

00:21:34,850 --> 00:21:41,090
protocol kicks in or something like that

00:21:37,120 --> 00:21:45,050
so I now have a much more efficient way

00:21:41,090 --> 00:21:46,610
to use my caches they're still stateless

00:21:45,050 --> 00:21:47,990
they don't know about each other one

00:21:46,610 --> 00:21:51,140
doesn't know about the other if one

00:21:47,990 --> 00:21:53,180
fails we round around it it's a we

00:21:51,140 --> 00:21:55,940
actually use consistent hashing to do

00:21:53,180 --> 00:21:57,620
that and we do the same thing and going

00:21:55,940 --> 00:22:00,570
from our edge to the mid so we do a

00:21:57,620 --> 00:22:08,419
consistent hash there again

00:22:00,570 --> 00:22:08,419
so content comes back and here we go yes

00:22:11,959 --> 00:22:22,099
yes so no so what happens is um so your

00:22:18,539 --> 00:22:24,419
sign oh yeah what happens to thank you

00:22:22,099 --> 00:22:26,159
what happens when with Game of Thrones

00:22:24,419 --> 00:22:28,409
and it's actually a really good example

00:22:26,159 --> 00:22:30,690
because it happened last Sunday Game of

00:22:28,409 --> 00:22:32,489
Thrones came out and I'm going to show

00:22:30,690 --> 00:22:34,739
you some numbers later those numbers are

00:22:32,489 --> 00:22:37,019
from last Sunday because that's where we

00:22:34,739 --> 00:22:41,009
had our highest traffic and all that so

00:22:37,019 --> 00:22:43,349
so what happens is it will stick on ho3

00:22:41,009 --> 00:22:45,719
right if I can I go back I can I think

00:22:43,349 --> 00:22:47,879
look at that so it'll stick on edge Oh

00:22:45,719 --> 00:22:49,289
three but we have this rascal server

00:22:47,879 --> 00:22:51,509
this health vertical server sitting

00:22:49,289 --> 00:22:52,529
there every eight seconds asking it hey

00:22:51,509 --> 00:22:53,729
what are you doing hey what are you

00:22:52,529 --> 00:22:56,489
doing are you doing okay are you doing

00:22:53,729 --> 00:22:58,589
okay at eight and a half gigabits per

00:22:56,489 --> 00:23:01,709
second on our 10 gigabit per second box

00:22:58,589 --> 00:23:03,569
our rascal server is going to say don't

00:23:01,709 --> 00:23:05,279
send any more traffic to this guy all

00:23:03,569 --> 00:23:06,809
connections are going to be fine or

00:23:05,279 --> 00:23:09,149
customers on that cache are going to be

00:23:06,809 --> 00:23:11,119
fine but the next request that comes in

00:23:09,149 --> 00:23:14,729
we're going to do consistent hash

00:23:11,119 --> 00:23:16,799
excluding Denver o3 so now we're going

00:23:14,729 --> 00:23:18,419
to go to another cache and that's how

00:23:16,799 --> 00:23:20,729
the health broke we call it the health

00:23:18,419 --> 00:23:23,039
protocol kicks in it basically is going

00:23:20,729 --> 00:23:24,839
to smear it out if there is because yeah

00:23:23,039 --> 00:23:26,339
you're going to get hot spots but you're

00:23:24,839 --> 00:23:28,440
also going to get really high cache hit

00:23:26,339 --> 00:23:29,729
ratio on that hot spot right this that's

00:23:28,440 --> 00:23:32,909
the sort of the balance you want to

00:23:29,729 --> 00:23:35,389
strike does that answer any other

00:23:32,909 --> 00:23:35,389
questions

00:23:38,980 --> 00:23:47,540
okay so why traffic server in all

00:23:43,190 --> 00:23:51,650
reality any HTTP 1.1 caching server will

00:23:47,540 --> 00:23:55,850
work and that is one of the reasons why

00:23:51,650 --> 00:23:58,100
we sort of disqualified nginx is there's

00:23:55,850 --> 00:23:59,900
a lot of problems with them and caching

00:23:58,100 --> 00:24:02,750
that we we didn't want to go into there

00:23:59,900 --> 00:24:05,090
fast but they're not compliant is what

00:24:02,750 --> 00:24:07,309
we found and and also we sort of made

00:24:05,090 --> 00:24:08,660
this decision two years ago so it's

00:24:07,309 --> 00:24:10,940
there's there's a little bit you know

00:24:08,660 --> 00:24:12,880
we're sort of invested in traffic server

00:24:10,940 --> 00:24:14,929
now and we're not every month

00:24:12,880 --> 00:24:17,800
reevaluating is quit better it is now

00:24:14,929 --> 00:24:21,679
we're sort of infested in traffic server

00:24:17,800 --> 00:24:23,890
we looked at a lot at varnish actually

00:24:21,679 --> 00:24:27,020
and this was because of some some legacy

00:24:23,890 --> 00:24:29,630
some some legacy work that was done we

00:24:27,020 --> 00:24:31,700
were handed varnish as you know try it

00:24:29,630 --> 00:24:33,890
out it looks really good and it does

00:24:31,700 --> 00:24:36,020
look really good but it does not work

00:24:33,890 --> 00:24:38,720
when you actually have to start writing

00:24:36,020 --> 00:24:40,400
to disk it just completely we tried all

00:24:38,720 --> 00:24:46,510
kinds of things to make it work but we

00:24:40,400 --> 00:24:50,750
couldn't really make it scale also we we

00:24:46,510 --> 00:24:52,580
we found that traffic servers I did the

00:24:50,750 --> 00:24:54,260
performance out of the gate I'll get

00:24:52,580 --> 00:24:55,520
into that a little bit more was was

00:24:54,260 --> 00:24:57,620
actually really really impressive

00:24:55,520 --> 00:25:01,190
compared to other products we didn't

00:24:57,620 --> 00:25:02,900
look at squid that much because I I

00:25:01,190 --> 00:25:04,730
think we all kind of felt like it had a

00:25:02,900 --> 00:25:06,260
lot of legacy a lot of stuff that we

00:25:04,730 --> 00:25:10,850
didn't want to want to deal with at that

00:25:06,260 --> 00:25:13,850
time it it worked out of the box really

00:25:10,850 --> 00:25:17,120
really good with our way of our load the

00:25:13,850 --> 00:25:19,130
API plugins we use some plugins so that

00:25:17,120 --> 00:25:21,230
works really well for us and another

00:25:19,130 --> 00:25:23,570
thing Apache and the community of

00:25:21,230 --> 00:25:26,420
traffic server I I can't sort of stress

00:25:23,570 --> 00:25:28,309
that enough I think but the traffic

00:25:26,420 --> 00:25:31,370
server community is a very open

00:25:28,309 --> 00:25:34,220
welcoming community it's you can just go

00:25:31,370 --> 00:25:36,500
on IRC ask a question and you don't get

00:25:34,220 --> 00:25:37,700
your head bit off you don't get somebody

00:25:36,500 --> 00:25:39,140
who wants to show you that they know

00:25:37,700 --> 00:25:40,820
better and they're so better than that

00:25:39,140 --> 00:25:43,250
it's just a really good community to

00:25:40,820 --> 00:25:45,350
work with you could we were accepted

00:25:43,250 --> 00:25:47,390
pretty much from the beginning as

00:25:45,350 --> 00:25:48,679
somebody who wants to use this once to

00:25:47,390 --> 00:25:50,210
help out and

00:25:48,679 --> 00:25:52,159
you know it really is sort of working

00:25:50,210 --> 00:25:55,340
out for us I think that's that's an

00:25:52,159 --> 00:25:57,860
important part of it we use maybe a

00:25:55,340 --> 00:25:58,580
handful of plugins for very specific use

00:25:57,860 --> 00:26:03,320
cases

00:25:58,580 --> 00:26:06,350
nothing nothing fancy our generation one

00:26:03,320 --> 00:26:08,480
cache is off-the-shelf hardware and yeah

00:26:06,350 --> 00:26:10,850
that seems really logical to everybody

00:26:08,480 --> 00:26:13,070
who's sitting here but again think about

00:26:10,850 --> 00:26:14,499
my world right I'm a cable guy what we

00:26:13,070 --> 00:26:17,299
get is we get off-the-shelf hardware

00:26:14,499 --> 00:26:19,249
some vendor puts a bezel in front of it

00:26:17,299 --> 00:26:22,669
and his logo on top of it marks it up

00:26:19,249 --> 00:26:24,740
ten times and they call it a product

00:26:22,669 --> 00:26:26,360
right that's the world we came from so

00:26:24,740 --> 00:26:28,879
we really wanted off-the-shelf hardware

00:26:26,360 --> 00:26:30,769
important we went with spinning disk a

00:26:28,879 --> 00:26:32,929
lot of people are kind of like why do

00:26:30,769 --> 00:26:35,119
you do that artoo would tell me that you

00:26:32,929 --> 00:26:37,850
know you don't you don't have a life if

00:26:35,119 --> 00:26:40,340
you're not an SSD right but for us the

00:26:37,850 --> 00:26:42,619
load that we have and in the way that

00:26:40,340 --> 00:26:45,440
traffic server sort of manages that load

00:26:42,619 --> 00:26:47,720
over these disks it really is working

00:26:45,440 --> 00:26:50,480
out for us and we came from a vendor

00:26:47,720 --> 00:26:53,450
managed product that had an exceedingly

00:26:50,480 --> 00:26:56,450
high failure rate on SSDs we will be

00:26:53,450 --> 00:27:01,850
looking at SSDs soon but our first word

00:26:56,450 --> 00:27:03,409
900 gig SAS drives this thing has all

00:27:01,850 --> 00:27:07,279
these drive up front though it's it's

00:27:03,409 --> 00:27:10,159
about 222 terabyte of cashing in to our

00:27:07,279 --> 00:27:12,470
you that we use we use all the memory we

00:27:10,159 --> 00:27:16,309
can get because we have two really

00:27:12,470 --> 00:27:19,129
competing loads on this box one of them

00:27:16,309 --> 00:27:22,039
is video on-demand it's you know it's

00:27:19,129 --> 00:27:23,600
it's a fairly long tail as we call it

00:27:22,039 --> 00:27:25,669
and it's it's very spread out

00:27:23,600 --> 00:27:27,799
everybody's watching something else it's

00:27:25,669 --> 00:27:29,749
it's really sort of you know you want to

00:27:27,799 --> 00:27:31,399
have that spread across many caches your

00:27:29,749 --> 00:27:35,450
cache hit ratio is not going to be that

00:27:31,399 --> 00:27:37,369
high and we have linear TV or live TV

00:27:35,450 --> 00:27:40,850
where everybody's sort of getting the

00:27:37,369 --> 00:27:45,049
same thing in the same minute we we use

00:27:40,850 --> 00:27:47,749
memory for that live TV we use some 10

00:27:45,049 --> 00:27:50,119
Gigabit Ethernet connectivity we are

00:27:47,749 --> 00:27:54,110
planning to upgrade our boxes through 20

00:27:50,119 --> 00:27:57,470
gig II and we were the first cache to go

00:27:54,110 --> 00:27:59,330
into what we call our aggregation or

00:27:57,470 --> 00:28:00,320
first application to go in what we call

00:27:59,330 --> 00:28:02,700
our aggregate

00:28:00,320 --> 00:28:04,710
location this used to be a domain of

00:28:02,700 --> 00:28:06,720
network engineers you know million

00:28:04,710 --> 00:28:08,940
dollar router over here another million

00:28:06,720 --> 00:28:10,860
dollar router over here hundreds of

00:28:08,940 --> 00:28:12,929
gigabytes per second between the two and

00:28:10,860 --> 00:28:15,269
they would not hook up routers do tor

00:28:12,929 --> 00:28:17,159
servers do that that was just not done

00:28:15,269 --> 00:28:19,139
we were the first one that actually

00:28:17,159 --> 00:28:20,820
hooked in at that place and it was you

00:28:19,139 --> 00:28:23,970
know a learning experience for them as

00:28:20,820 --> 00:28:27,389
well it really is sort of fairly close

00:28:23,970 --> 00:28:28,980
to what what our network is a little bit

00:28:27,389 --> 00:28:32,960
about traffic server performance and

00:28:28,980 --> 00:28:35,820
Brian was talking about that earlier we

00:28:32,960 --> 00:28:39,090
our load is very very different it's

00:28:35,820 --> 00:28:41,309
almost the opposite of doing 8k blocks

00:28:39,090 --> 00:28:41,970
you know and requests it's almost the

00:28:41,309 --> 00:28:45,419
opposite right

00:28:41,970 --> 00:28:46,860
our average object size is a Meg little

00:28:45,419 --> 00:28:48,960
bit more maybe a little bit less maybe

00:28:46,860 --> 00:28:51,419
depending on what kind of thing we do

00:28:48,960 --> 00:28:53,159
but it just it really really well we

00:28:51,419 --> 00:28:57,299
were pushing 10 gigabits per second with

00:28:53,159 --> 00:28:59,279
our load from almost the get-go I don't

00:28:57,299 --> 00:29:04,889
think we did any tweaking to get there I

00:28:59,279 --> 00:29:06,779
think right so it tested very well when

00:29:04,889 --> 00:29:08,879
you get into if you don't do anything

00:29:06,779 --> 00:29:12,210
special when you get into when you start

00:29:08,879 --> 00:29:15,570
hooking up to 20 gig or 40 gig we were

00:29:12,210 --> 00:29:19,019
seeing fairly high unic low unix load at

00:29:15,570 --> 00:29:21,179
like 15 gigabits per second and I'm kind

00:29:19,019 --> 00:29:23,129
of an old guy if I see a UNIX load over

00:29:21,179 --> 00:29:24,480
30 I go like ah that's not right you got

00:29:23,129 --> 00:29:25,320
to do something this is you know and

00:29:24,480 --> 00:29:27,509
it's very freaky

00:29:25,320 --> 00:29:29,460
I guess these new servers they can do a

00:29:27,509 --> 00:29:32,519
lot I've seen them go to 150 and they

00:29:29,460 --> 00:29:34,740
still seem to be performing it's very

00:29:32,519 --> 00:29:37,159
very crazy but I don't I don't like when

00:29:34,740 --> 00:29:39,749
that's happening so one of the things

00:29:37,159 --> 00:29:42,419
one of the first contributions that I

00:29:39,749 --> 00:29:44,429
think came from Comcast was the volume

00:29:42,419 --> 00:29:47,039
patch we call it it was something what

00:29:44,429 --> 00:29:50,279
that allowed us to use RAM drives and

00:29:47,039 --> 00:29:53,009
have some traffic or linear or live TV

00:29:50,279 --> 00:29:54,929
go to that RAM drive and other traffic

00:29:53,009 --> 00:29:57,210
are bought and all the other scavenger

00:29:54,929 --> 00:29:59,399
stuff that's on the CDN go to the drives

00:29:57,210 --> 00:30:01,320
and that really helped us we've been

00:29:59,399 --> 00:30:05,369
able to test up to 40 gigabits per

00:30:01,320 --> 00:30:08,129
second with realistic traffic and we

00:30:05,369 --> 00:30:11,009
actually we built our own tools to do

00:30:08,129 --> 00:30:12,570
this testing we couldn't really find a

00:30:11,009 --> 00:30:13,410
lot of tools that would help us do the

00:30:12,570 --> 00:30:15,780
testing that we

00:30:13,410 --> 00:30:17,790
eat it so again you know hacked up a

00:30:15,780 --> 00:30:20,010
bunch of Perl got an Origin server that

00:30:17,790 --> 00:30:21,870
will serve fake video fragments and

00:30:20,010 --> 00:30:27,960
we're doing a lot of load testing with

00:30:21,870 --> 00:30:30,080
our own tools on this i I don't know

00:30:27,960 --> 00:30:33,620
that we want to push it a lot farther

00:30:30,080 --> 00:30:36,420
beyond the 40 gigabits per second

00:30:33,620 --> 00:30:38,520
there's there's all there's if you have

00:30:36,420 --> 00:30:41,100
three or four caches of these sizes

00:30:38,520 --> 00:30:43,320
doing 30 each is doing 30 gigabits per

00:30:41,100 --> 00:30:46,470
second that location failed all of a

00:30:43,320 --> 00:30:48,330
sudden you got that many customers that

00:30:46,470 --> 00:30:50,280
now need to route somewhere else that's

00:30:48,330 --> 00:30:54,090
a lot of work and we don't want to we

00:30:50,280 --> 00:30:57,170
don't want to do that so um a little bit

00:30:54,090 --> 00:31:01,200
about open source and support you know

00:30:57,170 --> 00:31:04,950
cable companies traditionally don't do

00:31:01,200 --> 00:31:07,560
this especially two years ago and I

00:31:04,950 --> 00:31:08,790
remember mark saying what am I going to

00:31:07,560 --> 00:31:10,770
do we're going to call you when it

00:31:08,790 --> 00:31:12,810
breaks right there were discussions

00:31:10,770 --> 00:31:14,880
about us getting pagers all kinds of

00:31:12,810 --> 00:31:16,470
other things yes it is scary to not have

00:31:14,880 --> 00:31:18,630
a support number but there are support

00:31:16,470 --> 00:31:21,030
options army is one of them there's

00:31:18,630 --> 00:31:25,710
other support options for people who

00:31:21,030 --> 00:31:29,250
want that there it's often more food

00:31:25,710 --> 00:31:31,440
than actual real you know something that

00:31:29,250 --> 00:31:33,870
became real in two years that we've been

00:31:31,440 --> 00:31:36,570
doing this I think we haven't had any

00:31:33,870 --> 00:31:39,030
thing really blow up in our face I think

00:31:36,570 --> 00:31:40,620
it's been quite calm and you know knock

00:31:39,030 --> 00:31:43,680
on wood I think we're doing ok on that

00:31:40,620 --> 00:31:46,860
and also if you have the source code and

00:31:43,680 --> 00:31:48,690
you have the people that are working on

00:31:46,860 --> 00:31:51,690
this source code maybe even working on

00:31:48,690 --> 00:31:53,940
your team then if you have a problem you

00:31:51,690 --> 00:31:56,190
can make a surgical patch that fixes

00:31:53,940 --> 00:31:59,250
your problem deploy it on your system

00:31:56,190 --> 00:32:01,140
while a vendor is probably still testing

00:31:59,250 --> 00:32:03,120
it for the Korean language or for this

00:32:01,140 --> 00:32:05,010
or for that right we can really just

00:32:03,120 --> 00:32:07,200
look at what our problems are fixed at

00:32:05,010 --> 00:32:09,300
and move on and then later you can work

00:32:07,200 --> 00:32:10,770
around getting an upstream getting it

00:32:09,300 --> 00:32:12,690
back into mainline all that stuff but

00:32:10,770 --> 00:32:20,460
we've really been sort of successful at

00:32:12,690 --> 00:32:24,650
that our status on an average day we

00:32:20,460 --> 00:32:27,059
serve 1.5 petabyte out of this CDN on

00:32:24,650 --> 00:32:30,629
sunday we read about two

00:32:27,059 --> 00:32:34,169
bites when Game of Thrones came out we

00:32:30,629 --> 00:32:37,110
have over 250 of these caches deployed

00:32:34,169 --> 00:32:39,570
currently and that adds up to about five

00:32:37,110 --> 00:32:42,330
petabytes of storage that we have so

00:32:39,570 --> 00:32:44,519
this is why when traffic server decides

00:32:42,330 --> 00:32:46,169
you know we're going to change the cache

00:32:44,519 --> 00:32:47,639
format and you're gonna have to rewarm

00:32:46,169 --> 00:32:49,590
all your cache it that's a big deal for

00:32:47,639 --> 00:32:52,919
us that's a lot of stuff that we need to

00:32:49,590 --> 00:32:56,700
fill right that's that's big we are

00:32:52,919 --> 00:32:59,789
currently doing single giggy's but we

00:32:56,700 --> 00:33:02,279
are going to about the second GigE we

00:32:59,789 --> 00:33:03,960
have about 25 of these cache groups that

00:33:02,279 --> 00:33:08,070
are going deeper and deeper into our

00:33:03,960 --> 00:33:10,350
network we have a total of 1.7 terabits

00:33:08,070 --> 00:33:13,679
per second capacity but our highest peak

00:33:10,350 --> 00:33:15,690
it has been about 360 gigabits per

00:33:13,679 --> 00:33:17,759
second so when you have that hockey

00:33:15,690 --> 00:33:19,799
stick curve we're still at the part with

00:33:17,759 --> 00:33:21,600
a ball where we hit the ball with with a

00:33:19,799 --> 00:33:23,759
hockey stick we are really really

00:33:21,600 --> 00:33:26,820
planning on going way bigger than what

00:33:23,759 --> 00:33:28,769
where we are now the the x1 interface

00:33:26,820 --> 00:33:31,200
the newer set-top boxes we are going to

00:33:28,769 --> 00:33:33,559
have set up boxes in people's homes that

00:33:31,200 --> 00:33:35,909
are going to be pulling these ABR things

00:33:33,559 --> 00:33:38,369
straight from our CDN that never

00:33:35,909 --> 00:33:43,110
actually get into this old legacy cable

00:33:38,369 --> 00:33:44,940
qualm world we have three mid tier cache

00:33:43,110 --> 00:33:47,129
groups our origin offloads actually

00:33:44,940 --> 00:33:48,929
probably higher than 90% right now

00:33:47,129 --> 00:33:51,929
especially because we're still in that

00:33:48,929 --> 00:33:55,049
lower curve everything is ipv6

00:33:51,929 --> 00:33:58,649
and that means that the client decides

00:33:55,049 --> 00:34:02,610
if he's going to do ipv6 or ipv4 and he

00:33:58,649 --> 00:34:07,169
does that by dns a client if a client

00:34:02,610 --> 00:34:09,329
does dns he will usually do both a

00:34:07,169 --> 00:34:13,470
request and a quat a request if the

00:34:09,329 --> 00:34:16,919
client has ipv6 connectivity and he got

00:34:13,470 --> 00:34:20,069
a response on is quite a request we will

00:34:16,919 --> 00:34:22,409
he will just go to that hostname but he

00:34:20,069 --> 00:34:26,460
will use ipv6 about 8 percent of the

00:34:22,409 --> 00:34:28,050
traffic on our CDN is currently ipv6 we

00:34:26,460 --> 00:34:30,569
hope by the end of this year is going to

00:34:28,050 --> 00:34:32,669
be in the 30 range and the cool thing

00:34:30,569 --> 00:34:35,310
about that is not geeks like you guys

00:34:32,669 --> 00:34:37,290
that are getting ipv6 its grandma

00:34:35,310 --> 00:34:38,770
grandpa don't even know it they're just

00:34:37,290 --> 00:34:49,540
getting out

00:34:38,770 --> 00:34:55,450
yeah yeah that's there's less testing

00:34:49,540 --> 00:34:55,450
yeah LACP or lack p yep yeah

00:34:57,070 --> 00:35:06,920
our plans so we want to double the size

00:35:03,530 --> 00:35:08,600
this CDN this year so you know where we

00:35:06,920 --> 00:35:09,860
were this year the numbers are pretty

00:35:08,600 --> 00:35:11,210
big we're going to even double it this

00:35:09,860 --> 00:35:12,380
year we already have the orders and

00:35:11,210 --> 00:35:14,960
we're just doing that we're rolling it

00:35:12,380 --> 00:35:17,240
out we're adding a lot of these first

00:35:14,960 --> 00:35:19,610
screeners experiences on to the city and

00:35:17,240 --> 00:35:22,160
this is sort of a lockstep between you

00:35:19,610 --> 00:35:24,320
know the group that does the engineering

00:35:22,160 --> 00:35:26,570
on that new interface and new set-top

00:35:24,320 --> 00:35:28,280
boxes and IP set-top boxes and us and

00:35:26,570 --> 00:35:30,650
the C MTS's and our infrastructure

00:35:28,280 --> 00:35:34,220
everything sort of has to roll into the

00:35:30,650 --> 00:35:36,620
same you know up the same Hill but we're

00:35:34,220 --> 00:35:39,080
but we're trying to stay ahead of that

00:35:36,620 --> 00:35:41,960
curve I think we are and we will be

00:35:39,080 --> 00:35:45,050
we're going to be looking at a new mid

00:35:41,960 --> 00:35:46,580
tier cache and this is a this is a Super

00:35:45,050 --> 00:35:49,280
Micro box that we're looking at it's

00:35:46,580 --> 00:35:51,770
John keep me honest it's for our you

00:35:49,280 --> 00:35:54,860
it's got 72 drives and each of those

00:35:51,770 --> 00:35:58,730
drives is 4 terabytes so it's 288

00:35:54,860 --> 00:36:00,530
terabyte in four are you it's amazing

00:35:58,730 --> 00:36:02,570
that you can even do that type of stuff

00:36:00,530 --> 00:36:04,070
and we're going to be using those as mid

00:36:02,570 --> 00:36:05,750
tears because our mid tier cache weight

00:36:04,070 --> 00:36:07,670
ratio is a little bit lower and we want

00:36:05,750 --> 00:36:09,440
to sort of protect our origins a little

00:36:07,670 --> 00:36:13,640
bit better we're also going to look at a

00:36:09,440 --> 00:36:15,110
next generation edge where I think we're

00:36:13,640 --> 00:36:17,870
going to probably end up with two

00:36:15,110 --> 00:36:19,580
different types of boxes one box that's

00:36:17,870 --> 00:36:23,260
really sort of going to be focusing on

00:36:19,580 --> 00:36:25,550
linear or live TV we are going to have

00:36:23,260 --> 00:36:26,930
hundreds of thousands of connections to

00:36:25,550 --> 00:36:28,820
that box there's going to be lots of

00:36:26,930 --> 00:36:30,710
people getting really really hot content

00:36:28,820 --> 00:36:32,250
there's going to be on SSDs or maybe

00:36:30,710 --> 00:36:34,380
even all of it and RAM I don't

00:36:32,250 --> 00:36:36,510
don't even know that the other box is

00:36:34,380 --> 00:36:40,110
going to be for our vote that's going to

00:36:36,510 --> 00:36:41,610
probably have more Drive and more things

00:36:40,110 --> 00:36:44,340
and we're sort of going to content route

00:36:41,610 --> 00:36:47,610
to the right places on that we're going

00:36:44,340 --> 00:36:49,920
to go deeper into our network currently

00:36:47,610 --> 00:36:51,240
we're we're fairly deep but we want

00:36:49,920 --> 00:36:53,730
we're probably going to end up at

00:36:51,240 --> 00:36:56,520
Comcast has I think six hundred and

00:36:53,730 --> 00:36:58,710
fifty hub sites that we call them you

00:36:56,520 --> 00:37:00,690
know places where we do local ad

00:36:58,710 --> 00:37:02,820
insertion and you know local where we

00:37:00,690 --> 00:37:04,290
generate local TV we're probably going

00:37:02,820 --> 00:37:07,530
to almost go into all of those in the

00:37:04,290 --> 00:37:09,330
next couple of years and we want to keep

00:37:07,530 --> 00:37:11,880
building tools for our operations our

00:37:09,330 --> 00:37:14,310
group is a DevOps group so we have you

00:37:11,880 --> 00:37:16,050
know people developing an officer really

00:37:14,310 --> 00:37:20,060
really close to each other and we want

00:37:16,050 --> 00:37:20,060
to keep sort of moving forward with that

00:37:20,300 --> 00:37:26,390
here's my my traffic server wish list

00:37:26,750 --> 00:37:31,740
restarts are hard for us because these

00:37:29,370 --> 00:37:33,450
customers they're stuck on that cache

00:37:31,740 --> 00:37:35,910
right they got content router to that

00:37:33,450 --> 00:37:38,700
one cache they're basically sitting

00:37:35,910 --> 00:37:40,950
there and some people have CNN on all

00:37:38,700 --> 00:37:43,800
day so how am I going to restart our

00:37:40,950 --> 00:37:47,870
cache it's really hard for us to be

00:37:43,800 --> 00:37:50,820
restarting caches we need to be able

00:37:47,870 --> 00:37:52,740
somehow figure out and we're going to

00:37:50,820 --> 00:37:54,270
help I mean we got we got filled with

00:37:52,740 --> 00:37:55,830
it's working on it right now we need to

00:37:54,270 --> 00:37:58,860
be able to figure out how we can make

00:37:55,830 --> 00:38:01,110
these caches run and restart them and

00:37:58,860 --> 00:38:04,140
get new plugins in them and get all new

00:38:01,110 --> 00:38:08,090
configure on them basically in a way

00:38:04,140 --> 00:38:08,090
that they keep serving customers as well

00:38:14,980 --> 00:38:20,349
so we do have provisions in the client

00:38:18,010 --> 00:38:22,390
that if they if they crash they all go

00:38:20,349 --> 00:38:23,829
to the content router the the content

00:38:22,390 --> 00:38:25,720
router then knows that that cache is

00:38:23,829 --> 00:38:27,880
crashed and it will send it to another

00:38:25,720 --> 00:38:41,829
one but we don't want to use that as a

00:38:27,880 --> 00:38:44,560
normal like what yeah it all gets pretty

00:38:41,829 --> 00:38:46,540
complicated for the one of the one of

00:38:44,560 --> 00:38:48,940
the things that I like about what we did

00:38:46,540 --> 00:38:51,160
is that it's very very simple and even I

00:38:48,940 --> 00:38:52,630
understand it those type of solutions

00:38:51,160 --> 00:38:55,780
always get me confused you know what I

00:38:52,630 --> 00:38:59,500
mean it says they did I really want to

00:38:55,780 --> 00:39:07,020
keep it stateless simple just good go

00:38:59,500 --> 00:39:07,020
that route hmm yeah

00:39:19,370 --> 00:39:23,000
but it's cash wouldn't be warmed and

00:39:21,740 --> 00:39:29,480
there's all kinds of other issues with

00:39:23,000 --> 00:39:31,310
that right so no no no so we will

00:39:29,480 --> 00:39:34,670
reroute them but we will basically do

00:39:31,310 --> 00:39:36,680
that with our content router it's it's

00:39:34,670 --> 00:39:38,390
it's the same way but what we don't like

00:39:36,680 --> 00:39:39,620
doing that because all of a sudden you

00:39:38,390 --> 00:39:43,160
got a bar in that cache and do all kinds

00:39:39,620 --> 00:39:44,950
of other stuff so stability we had some

00:39:43,160 --> 00:39:49,420
problems with stability just after our

00:39:44,950 --> 00:39:52,250
4x upgrade and it was mostly I think

00:39:49,420 --> 00:39:55,070
because we had our budget for memory too

00:39:52,250 --> 00:39:57,590
tight but it was it was kind of messy

00:39:55,070 --> 00:39:59,840
having a lot of caches for a while there

00:39:57,590 --> 00:40:01,580
it's much better now but stability is

00:39:59,840 --> 00:40:04,160
really important to us people are going

00:40:01,580 --> 00:40:06,260
to be using traffic server when they're

00:40:04,160 --> 00:40:08,840
watching their main screen when they're

00:40:06,260 --> 00:40:10,760
at home sitting and it's different and I

00:40:08,840 --> 00:40:12,800
you know don't no disrespect but if

00:40:10,760 --> 00:40:16,100
you're going to Yahoo or you know though

00:40:12,800 --> 00:40:17,630
people sort of expect internet sites or

00:40:16,100 --> 00:40:19,130
the internet oh yeah well you know

00:40:17,630 --> 00:40:21,290
sometimes it works sometimes it doesn't

00:40:19,130 --> 00:40:24,050
right it's not completely like that but

00:40:21,290 --> 00:40:25,700
you're more forgiving on an internet

00:40:24,050 --> 00:40:28,340
website then you are when you're

00:40:25,700 --> 00:40:30,410
watching the Super Bowl on TV you don't

00:40:28,340 --> 00:40:32,450
want that to go down and we need to get

00:40:30,410 --> 00:40:34,100
to the point where we can have traffic

00:40:32,450 --> 00:40:36,770
server running the Superbowl for us and

00:40:34,100 --> 00:40:39,320
nobody would be worried about it

00:40:36,770 --> 00:40:42,530
another thing configuration flexibility

00:40:39,320 --> 00:40:44,570
VCL is you know we use varnish as a

00:40:42,530 --> 00:40:46,880
layer seven load balancer because it is

00:40:44,570 --> 00:40:48,710
so flexible and you can do so much in

00:40:46,880 --> 00:40:53,150
PCL with it something like that would be

00:40:48,710 --> 00:40:54,650
really nice inside traffic's over and I

00:40:53,150 --> 00:40:56,570
think with that I'm going to open it up

00:40:54,650 --> 00:41:00,790
for questions because there's like five

00:40:56,570 --> 00:41:00,790
minutes we're almost at lunch yes

00:41:07,820 --> 00:41:13,670
it depends a little bit and it's it's

00:41:10,620 --> 00:41:16,890
one of the things that we can tweak but

00:41:13,670 --> 00:41:19,710
even if you're watching broadcast TV on

00:41:16,890 --> 00:41:22,320
your legacy set-top box with qualms we

00:41:19,710 --> 00:41:24,420
do tricks to that video a little bit

00:41:22,320 --> 00:41:25,890
it's not actually as live as you think

00:41:24,420 --> 00:41:27,780
it is maybe because we got to do add

00:41:25,890 --> 00:41:29,160
splicing and things like that the short

00:41:27,780 --> 00:41:30,960
answer is oh oh I should have said

00:41:29,160 --> 00:41:32,640
what's the buffer ie was asking what's

00:41:30,960 --> 00:41:35,790
the buffer what's the time the short

00:41:32,640 --> 00:41:43,010
answer is about eight seconds right

00:41:35,790 --> 00:41:43,010
kneel we can tweak it other questions

00:41:48,270 --> 00:41:54,300
because one of these cash groups is

00:41:52,109 --> 00:41:57,480
actually not in one location it's so II

00:41:54,300 --> 00:42:01,320
with the Denver cash group is twelve or

00:41:57,480 --> 00:42:03,900
so of these caches and six of them on

00:42:01,320 --> 00:42:06,840
are in Aurora and six of them are and

00:42:03,900 --> 00:42:10,050
mile-high I think the head end right

00:42:06,840 --> 00:42:12,540
next to Stadium and you need

00:42:10,050 --> 00:42:14,400
they almost assume like you have a local

00:42:12,540 --> 00:42:15,780
land doing this clustering stuff with

00:42:14,400 --> 00:42:17,490
multicast and all kinds of other stuff

00:42:15,780 --> 00:42:20,340
that we just didn't want to go there and

00:42:17,490 --> 00:42:22,350
the clustering also is a complexity and

00:42:20,340 --> 00:42:30,150
a state that we sort of really didn't

00:42:22,350 --> 00:42:32,369
want to go to yeah it's yeah but it

00:42:30,150 --> 00:42:34,050
solves the DNS routing problem though it

00:42:32,369 --> 00:42:36,000
does solve that we're sort of stuck with

00:42:34,050 --> 00:42:38,810
not having a good solution there so it

00:42:36,000 --> 00:42:38,810
solves that but

00:42:45,800 --> 00:42:48,800
yes

00:42:52,830 --> 00:42:58,350
huh the question is you've mentioned

00:42:55,470 --> 00:43:00,360
testing tools and any plans to open

00:42:58,350 --> 00:43:02,220
source it I have great plans so we

00:43:00,360 --> 00:43:03,720
source all of this but I need to matter

00:43:02,220 --> 00:43:06,330
I need to convince my management of

00:43:03,720 --> 00:43:09,630
doing that and I'm actually getting some

00:43:06,330 --> 00:43:13,560
traction on that we want to we'd love to

00:43:09,630 --> 00:43:15,180
open-source the control plane to seed

00:43:13,560 --> 00:43:17,640
the content browser the health protocol

00:43:15,180 --> 00:43:19,340
and the tools that we wrote to to do the

00:43:17,640 --> 00:43:22,110
testing because we actually have purel

00:43:19,340 --> 00:43:25,260
video clients that behave exactly like

00:43:22,110 --> 00:43:27,240
these video clients HLS HDS smooth

00:43:25,260 --> 00:43:28,590
they're written in Perl they don't care

00:43:27,240 --> 00:43:30,420
about the video but you can really

00:43:28,590 --> 00:43:33,150
really scale them up and do testing on

00:43:30,420 --> 00:43:34,650
these caches yeah we want to do that I'm

00:43:33,150 --> 00:43:36,410
trying to convince our management that

00:43:34,650 --> 00:43:43,970
that's a good thing

00:43:36,410 --> 00:43:47,460
other questions yes yeah yeah right

00:43:43,970 --> 00:43:51,150
and we can get these 24 drives are

00:43:47,460 --> 00:43:53,370
pretty much running at almost between 95

00:43:51,150 --> 00:43:56,790
and 100 percent utilization in whatever

00:43:53,370 --> 00:44:00,530
magic tools y'all John uses it's very

00:43:56,790 --> 00:44:00,530
evil easy yeah

00:44:04,610 --> 00:44:07,610
John

00:44:21,890 --> 00:44:27,090
other questions

00:44:24,190 --> 00:44:27,090
yes sir

00:44:31,770 --> 00:44:35,430
I don't know that we did that many

00:44:33,690 --> 00:44:38,640
question was that we do any Colonel

00:44:35,430 --> 00:44:40,890
tuning or or changes to the kernel we

00:44:38,640 --> 00:44:43,020
definitely didn't change the kernel we

00:44:40,890 --> 00:44:46,230
have some settings I think they're

00:44:43,020 --> 00:44:50,340
they're called the swoop settings we

00:44:46,230 --> 00:44:51,840
would because you had like a list of

00:44:50,340 --> 00:44:53,940
things that you changed I think we use

00:44:51,840 --> 00:44:59,060
some of them not all of them but most of

00:44:53,940 --> 00:45:06,300
it is most of it is out-of-the-box Linux

00:44:59,060 --> 00:45:14,910
other questions what yes sir

00:45:06,300 --> 00:45:16,980
oh yes yeah so one one and I don't be

00:45:14,910 --> 00:45:19,770
explaining this because I barely know

00:45:16,980 --> 00:45:22,860
what they found but we we had this one

00:45:19,770 --> 00:45:25,440
problem not too long ago where traffic

00:45:22,860 --> 00:45:28,920
civil would it almost seemed like we had

00:45:25,440 --> 00:45:30,570
a cache doing just fine serving you know

00:45:28,920 --> 00:45:32,210
any cache that we have is doing

00:45:30,570 --> 00:45:35,340
thousands of requests per second and

00:45:32,210 --> 00:45:39,270
some of them at random intervals we just

00:45:35,340 --> 00:45:42,390
seize up like not do anything for up to

00:45:39,270 --> 00:45:44,190
maybe 16 17 18 20 seconds they would

00:45:42,390 --> 00:45:47,730
just not do anything did a lot of

00:45:44,190 --> 00:45:50,460
debugging browsing LinkedIn had a really

00:45:47,730 --> 00:45:53,280
good blog post on on this and it turned

00:45:50,460 --> 00:45:54,690
out that we have these and again I don't

00:45:53,280 --> 00:45:57,390
know what I'm talking about but we have

00:45:54,690 --> 00:46:01,020
these these Numa processors and you have

00:45:57,390 --> 00:46:02,850
basically near memory and far memory and

00:46:01,020 --> 00:46:04,619
if the kernel gets into a state where

00:46:02,850 --> 00:46:06,900
there's a really big imbalance between

00:46:04,619 --> 00:46:08,820
the near memory and the farm memory and

00:46:06,900 --> 00:46:11,340
the course that are using that it's

00:46:08,820 --> 00:46:14,220
going to rebalance that and that

00:46:11,340 --> 00:46:16,680
rebalancing actually made our caches not

00:46:14,220 --> 00:46:18,119
serve traffic for dozens of seconds we

00:46:16,680 --> 00:46:20,340
were really really surprised about that

00:46:18,119 --> 00:46:23,280
so we turned that one off not recently

00:46:20,340 --> 00:46:26,730
that was a big change we made in the in

00:46:23,280 --> 00:46:30,619
the system parameters yeah any other

00:46:26,730 --> 00:46:30,619
questions yes sir

00:46:38,060 --> 00:46:45,840
it's a good question would the question

00:46:42,660 --> 00:46:47,940
was we didn't really evaluate our choice

00:46:45,840 --> 00:46:49,530
of traffic server if we were to do it

00:46:47,940 --> 00:46:52,320
now would we do anything different I

00:46:49,530 --> 00:46:54,570
don't think so I think I think the best

00:46:52,320 --> 00:46:56,970
thing we did is we built our own tools

00:46:54,570 --> 00:47:00,500
to test our own load because it really

00:46:56,970 --> 00:47:03,570
feels like because we did that we know

00:47:00,500 --> 00:47:05,640
what our load is and we've been we've

00:47:03,570 --> 00:47:07,830
proven that when we test something in

00:47:05,640 --> 00:47:09,660
the lab and we're lucky we have a really

00:47:07,830 --> 00:47:11,430
nice lab we can do these things where we

00:47:09,660 --> 00:47:12,900
go up to 40 gigabits per second on one

00:47:11,430 --> 00:47:15,570
box and you know those types of things

00:47:12,900 --> 00:47:17,550
we have the client simulators to do all

00:47:15,570 --> 00:47:19,800
that but writing it yourself really

00:47:17,550 --> 00:47:21,450
helps you understand what kind of load

00:47:19,800 --> 00:47:23,820
you're putting on it and we've proven

00:47:21,450 --> 00:47:25,980
that if if we test it in the feet in the

00:47:23,820 --> 00:47:26,460
lab actually it works like that in the

00:47:25,980 --> 00:47:28,770
field

00:47:26,460 --> 00:47:34,680
pretty close at least so I don't think

00:47:28,770 --> 00:47:37,010
we would change a lot no all right thank

00:47:34,680 --> 00:47:37,010

YouTube URL: https://www.youtube.com/watch?v=q1mndAYZlio


