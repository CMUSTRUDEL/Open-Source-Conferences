Title: An Anatomy of an Answer: Open NLP & Discourse Analysis - based Indexing
Publication date: 2020-10-17
Playlist: ApacheCon @Home 2020: Search
Description: 
	An Anatomy of an Answer: Open NLP & Discourse Analysis - based Indexing
Boris Galitsky

A presentation from ApacheCon @Home 2020
https://apachecon.com/acah2020/

Indexers usually index all text in documents. However, once we learn to "understand" the logic of a plain text, we will see how bad for a search it is to index the whole thing. Discourse analysis helps to select text fragment which should be matched with a potential query, and throw away the rest In this talk we will apply discourse linguistic to practical text search and discover that the majority of indexers which index all text perform very poorly for complex queries. Relying on standard relevance means such as TF*IDF does not alleviate this problem. We will explore how discourse analysis helps search by identifying text fragments which should be indexed and matched with potential queries, and those text fragments which would mislead the search and make its precision low. We will demonstrate how a discourse analysis - based indexer can be employed relying on Apache Open NLP project. The audience will learn how discourse analysis formalizes a logic of text to be searched and represents it as a discourse tree, a structure to represent a domain-independent logical organization of text essential for finding relevant fragments. We will also discuss how to proceed from search engines like SOLR to chatbots, where discourse analysis helps with dialogue management.

Boris Galitsky has been presenting talks on AI over last two decades and at Apache conferences over last few years. He contributed linguistic and machine learning technologies to Silicon Valley startups for last 25 years, as well as eBay and Oracle, where he is currently an architect of the Digital Assistant project. An author of three computer science books, 150+ publications and 20+ patents related to search, he is now working on a book "AI for CRM" to be published by Springer in 2021. Boris is Apache committer to OpenNLP where he created OpenNLP.Similarity component which is a basis for search engine and chatbot development.
Captions: 
	00:00:06,420 --> 00:00:10,640
[Music]

00:00:14,160 --> 00:00:17,230
[Music]

00:00:29,840 --> 00:00:31,920
you

00:01:06,880 --> 00:01:13,360
hey boris can you hear me

00:01:10,080 --> 00:01:16,479
hello can you hear me yes i can great

00:01:13,360 --> 00:01:18,799
um there are two sessions uh this is the

00:01:16,479 --> 00:01:22,880
first time that this thing has worked

00:01:18,799 --> 00:01:22,880
as expected in the first attempt um

00:01:24,240 --> 00:01:28,960
and you can see the screen right yes i

00:01:26,720 --> 00:01:28,960
can

00:01:29,439 --> 00:01:33,920
so uh this is all we're gonna go because

00:01:32,479 --> 00:01:35,360
i didn't get a chance to sync up with

00:01:33,920 --> 00:01:38,960
you i couldn't find you on snap

00:01:35,360 --> 00:01:40,640
uh so uh

00:01:38,960 --> 00:01:42,240
at the beginning i'm going to introduce

00:01:40,640 --> 00:01:44,799
you and then uh

00:01:42,240 --> 00:01:45,759
you can go ahead with your presentation

00:01:44,799 --> 00:01:48,399
uh

00:01:45,759 --> 00:01:49,680
towards the end uh you can take a look

00:01:48,399 --> 00:01:53,280
at the chat

00:01:49,680 --> 00:01:56,159
to to answer uh questions uh

00:01:53,280 --> 00:01:57,680
and also ask people to join you uh and

00:01:56,159 --> 00:01:58,960
you know if there's another channel you

00:01:57,680 --> 00:02:00,640
want to you know

00:01:58,960 --> 00:02:02,240
continue answering questions and for

00:02:00,640 --> 00:02:06,840
example slack that's what

00:02:02,240 --> 00:02:09,920
other speakers have been doing uh okay

00:02:06,840 --> 00:02:15,360
okay okay

00:02:09,920 --> 00:02:15,360
so just um let me just

00:02:17,360 --> 00:02:23,840
highlight this

00:02:52,879 --> 00:03:05,840
okay one more video

00:04:06,480 --> 00:04:10,640
okay it's 11 15. uh let's just give

00:04:08,959 --> 00:04:15,840
everyone

00:04:10,640 --> 00:04:15,840
a minute or so before we start

00:04:54,720 --> 00:04:56,960
that's

00:05:01,280 --> 00:05:11,840
specific time

00:05:38,080 --> 00:05:42,560
okay let's get started um

00:05:42,800 --> 00:05:46,000
hello everyone uh welcome to the last

00:05:45,039 --> 00:05:48,320
session for

00:05:46,000 --> 00:05:51,600
uh day one of the search track this

00:05:48,320 --> 00:05:55,280
edition of apachecon at home 2020.

00:05:51,600 --> 00:05:55,280
hope you've enjoyed the talk so far

00:05:55,360 --> 00:05:59,759
for this session we have with us boris

00:05:57,120 --> 00:06:01,680
kalitzki uh he's been an active speaker

00:05:59,759 --> 00:06:02,639
at ai conferences for the last two

00:06:01,680 --> 00:06:06,000
decades

00:06:02,639 --> 00:06:07,440
and contributed to linguistics and

00:06:06,000 --> 00:06:09,120
machine learning technologies to

00:06:07,440 --> 00:06:12,560
multiple silicon valley startups

00:06:09,120 --> 00:06:14,400
are during this time uh boris is in a

00:06:12,560 --> 00:06:16,080
project committer to the open nlp

00:06:14,400 --> 00:06:17,440
project and publisher of various

00:06:16,080 --> 00:06:20,560
publications and

00:06:17,440 --> 00:06:23,199
patterns related to search in this talk

00:06:20,560 --> 00:06:24,080
he will be talking about the anatomy of

00:06:23,199 --> 00:06:26,080
an answer

00:06:24,080 --> 00:06:27,120
and how in an open nlp and discourse

00:06:26,080 --> 00:06:30,240
analysis based

00:06:27,120 --> 00:06:35,360
indexing can be useful in improving

00:06:30,240 --> 00:06:40,800
relevance over to you boris

00:06:35,360 --> 00:06:42,800
good morning uh so this is the title

00:06:40,800 --> 00:06:45,199
uh of the talk and this is a very

00:06:42,800 --> 00:06:49,039
specific problem

00:06:45,199 --> 00:06:51,680
how to like the idea is

00:06:49,039 --> 00:06:52,880
default search engine we index

00:06:51,680 --> 00:06:56,400
everything

00:06:52,880 --> 00:06:59,120
whatever is available we index and then

00:06:56,400 --> 00:06:59,599
uh we're going to take care of relevance

00:06:59,120 --> 00:07:02,880
by

00:06:59,599 --> 00:07:05,039
keywords by location and document by

00:07:02,880 --> 00:07:07,919
whatever by frequencies

00:07:05,039 --> 00:07:10,319
this is a different approach if we take

00:07:07,919 --> 00:07:12,319
some efforts and actually understand

00:07:10,319 --> 00:07:14,960
try to understand in a demand

00:07:12,319 --> 00:07:17,360
independent way what this text is about

00:07:14,960 --> 00:07:20,000
maybe we don't need to index everything

00:07:17,360 --> 00:07:22,400
maybe only in this important part which

00:07:20,000 --> 00:07:23,440
uh directly ask and we don't index the

00:07:22,400 --> 00:07:27,120
rest

00:07:23,440 --> 00:07:29,759
so let's start with the

00:07:27,120 --> 00:07:30,240
google example research on google and we

00:07:29,759 --> 00:07:32,800
search

00:07:30,240 --> 00:07:33,759
for the issue of the main issue of this

00:07:32,800 --> 00:07:36,800
talk

00:07:33,759 --> 00:07:39,919
how does discourse analysis help uh

00:07:36,800 --> 00:07:42,160
to index important parts of text and

00:07:39,919 --> 00:07:44,000
let's look at search result and by that

00:07:42,160 --> 00:07:45,919
by the way this is not a frequent search

00:07:44,000 --> 00:07:48,720
query uh so google

00:07:45,919 --> 00:07:50,400
most likely hasn't prepared for this so

00:07:48,720 --> 00:07:53,520
we see some documents

00:07:50,400 --> 00:07:55,840
mostly uh research papers which is

00:07:53,520 --> 00:07:56,800
reasonable and then we see some

00:07:55,840 --> 00:08:00,160
occurrences

00:07:56,800 --> 00:08:02,560
uh highlighted keywords the question is

00:08:00,160 --> 00:08:03,440
ok here are the keywords from the

00:08:02,560 --> 00:08:06,160
question

00:08:03,440 --> 00:08:07,520
here's the keyword from the possible

00:08:06,160 --> 00:08:10,720
answer how do you know

00:08:07,520 --> 00:08:11,759
looking at this and what we're going to

00:08:10,720 --> 00:08:14,400
explore this course

00:08:11,759 --> 00:08:14,879
analysis actually analyzes this text

00:08:14,400 --> 00:08:18,400
process

00:08:14,879 --> 00:08:18,400
this text and tells us

00:08:18,479 --> 00:08:23,120
which occurrences are good like entity

00:08:20,560 --> 00:08:26,319
for critical discourse analysis

00:08:23,120 --> 00:08:28,720
entity is good critical not necessarily

00:08:26,319 --> 00:08:29,440
if you have uh entity occurrence is good

00:08:28,720 --> 00:08:31,759
but if it's

00:08:29,440 --> 00:08:32,800
just distributed as keywords or text is

00:08:31,759 --> 00:08:36,320
it good enough

00:08:32,800 --> 00:08:38,560
and the answer is no uh these keywords

00:08:36,320 --> 00:08:40,320
need to be somehow correlated logically

00:08:38,560 --> 00:08:42,320
connected if they're not logically

00:08:40,320 --> 00:08:43,279
connected even if they're next to each

00:08:42,320 --> 00:08:47,120
other

00:08:43,279 --> 00:08:49,839
it's not good enough and so default

00:08:47,120 --> 00:08:51,440
indexing we just take care of distance

00:08:49,839 --> 00:08:53,200
between words like

00:08:51,440 --> 00:08:54,480
some limitation between all these

00:08:53,200 --> 00:08:56,800
highlighted

00:08:54,480 --> 00:08:59,120
uh keywords they should be less than

00:08:56,800 --> 00:09:01,200
three to five keywords for example

00:08:59,120 --> 00:09:03,760
but that is not good enough that's like

00:09:01,200 --> 00:09:06,399
uh considering text as a long string

00:09:03,760 --> 00:09:09,120
token string of tokens and it's not it's

00:09:06,399 --> 00:09:11,600
uh especially logically organized

00:09:09,120 --> 00:09:13,120
so we are going to see how to take care

00:09:11,600 --> 00:09:16,160
of logical organization

00:09:13,120 --> 00:09:19,680
and then index properly uh

00:09:16,160 --> 00:09:22,800
the start we're going to start with uh

00:09:19,680 --> 00:09:25,279
open lp and then open lp similarity the

00:09:22,800 --> 00:09:28,560
component i'm working over the last

00:09:25,279 --> 00:09:32,320
nine years and this is mostly a rapper

00:09:28,560 --> 00:09:34,839
about uh different degrees technologies

00:09:32,320 --> 00:09:37,760
and applications for this part of

00:09:34,839 --> 00:09:40,480
opennlp

00:09:37,760 --> 00:09:42,320
search engines chatbot recommendations

00:09:40,480 --> 00:09:45,360
text analysis

00:09:42,320 --> 00:09:48,480
security degeneration

00:09:45,360 --> 00:09:51,360
writing in general

00:09:48,480 --> 00:09:52,959
text learner so the main objective of

00:09:51,360 --> 00:09:57,200
this component

00:09:52,959 --> 00:09:58,000
is to wrap uh linguistic parts syntactic

00:09:57,200 --> 00:10:01,200
analysis

00:09:58,000 --> 00:10:03,760
any recognition so

00:10:01,200 --> 00:10:04,320
uh for for integration you don't need to

00:10:03,760 --> 00:10:06,320
know any

00:10:04,320 --> 00:10:07,600
don't need to know much about linguistic

00:10:06,320 --> 00:10:09,920
you just

00:10:07,600 --> 00:10:12,079
uh call high level functions like do

00:10:09,920 --> 00:10:15,200
similarity assessment

00:10:12,079 --> 00:10:17,040
uh compare equation and answer it's a

00:10:15,200 --> 00:10:18,959
high level set of functions so you don't

00:10:17,040 --> 00:10:20,079
have to go into inter linguistic

00:10:18,959 --> 00:10:22,480
internals

00:10:20,079 --> 00:10:24,160
uh syntactic semantic discourse

00:10:22,480 --> 00:10:25,440
internals you just call high level

00:10:24,160 --> 00:10:28,800
functions

00:10:25,440 --> 00:10:30,800
and do uh similarity assessment and

00:10:28,800 --> 00:10:32,800
all kinds of relevance assessment and

00:10:30,800 --> 00:10:35,760
again this is from search

00:10:32,800 --> 00:10:37,600
to uh dialogues discourse analysis is

00:10:35,760 --> 00:10:39,279
very important for dialogue management

00:10:37,600 --> 00:10:42,079
for example

00:10:39,279 --> 00:10:43,519
and other applications and here is the

00:10:42,079 --> 00:10:47,360
main thing

00:10:43,519 --> 00:10:50,000
what is happening inside the main

00:10:47,360 --> 00:10:52,000
in science similarity components the

00:10:50,000 --> 00:10:54,959
idea is

00:10:52,000 --> 00:10:56,800
if we have uh want to compute

00:10:54,959 --> 00:10:58,720
similarities similarity between question

00:10:56,800 --> 00:11:00,000
and answer just keywords and their

00:10:58,720 --> 00:11:01,120
frequencies are not good enough

00:11:00,000 --> 00:11:03,279
we need to know how they are

00:11:01,120 --> 00:11:06,240
syntactically organized

00:11:03,279 --> 00:11:07,519
so we have a question for example two

00:11:06,240 --> 00:11:09,760
questions we want to

00:11:07,519 --> 00:11:12,000
compute similarity between two questions

00:11:09,760 --> 00:11:14,480
we build the parse tree with information

00:11:12,000 --> 00:11:17,040
about which word what part of speech

00:11:14,480 --> 00:11:17,600
what type of syntactic connection and

00:11:17,040 --> 00:11:21,920
then

00:11:17,600 --> 00:11:23,760
uh the size and the parameters of common

00:11:21,920 --> 00:11:27,040
maximal common subtree

00:11:23,760 --> 00:11:30,320
tells us how actually similar these

00:11:27,040 --> 00:11:32,000
two uh questions are to each other or

00:11:30,320 --> 00:11:34,160
question the question or question to

00:11:32,000 --> 00:11:37,040
answer

00:11:34,160 --> 00:11:38,320
and one application area recent

00:11:37,040 --> 00:11:41,200
development is a

00:11:38,320 --> 00:11:42,320
chat board which based on uh domain

00:11:41,200 --> 00:11:45,279
dependent use

00:11:42,320 --> 00:11:46,880
bing api to go to the web and then all

00:11:45,279 --> 00:11:49,680
kind of similarity

00:11:46,880 --> 00:11:51,680
uh to generate content on the fly uh to

00:11:49,680 --> 00:11:54,720
maintain dialogue management

00:11:51,680 --> 00:11:56,959
and have other nice chatbot features

00:11:54,720 --> 00:11:59,040
and again it's a toolkit linguistic

00:11:56,959 --> 00:12:02,639
toolkit so you don't have to do much

00:11:59,040 --> 00:12:05,519
in linguistic uh to have a reasonable

00:12:02,639 --> 00:12:07,519
uh chatbot enable these machine learning

00:12:05,519 --> 00:12:11,519
and linguistic features

00:12:07,519 --> 00:12:14,480
and this is just a jump into detail

00:12:11,519 --> 00:12:15,360
there's a lot of linguistic parameters

00:12:14,480 --> 00:12:18,560
combined

00:12:15,360 --> 00:12:20,000
inside it's not only open nlp it's

00:12:18,560 --> 00:12:21,680
stanford nlp

00:12:20,000 --> 00:12:23,360
all kind of additional features

00:12:21,680 --> 00:12:26,560
discourse parser

00:12:23,360 --> 00:12:28,399
uh some additions to openlp some

00:12:26,560 --> 00:12:29,360
linguistic resources so basically

00:12:28,399 --> 00:12:32,240
everything

00:12:29,360 --> 00:12:33,839
well a lot of stuff you need to combine

00:12:32,240 --> 00:12:34,959
so you don't have to worry they already

00:12:33,839 --> 00:12:37,920
combined

00:12:34,959 --> 00:12:39,440
and these two kits including uh tree

00:12:37,920 --> 00:12:42,639
kernel learning

00:12:39,440 --> 00:12:44,800
nearest neighbor learning so you again

00:12:42,639 --> 00:12:47,839
you have this high level functions

00:12:44,800 --> 00:12:51,760
and all these resources are already

00:12:47,839 --> 00:12:54,000
in this system okay uh now let's uh

00:12:51,760 --> 00:12:57,519
proceed to the main

00:12:54,000 --> 00:13:00,720
uh topic of this presentation

00:12:57,519 --> 00:13:02,959
what is a anatomy of answer like

00:13:00,720 --> 00:13:04,000
what do we need to understand what do we

00:13:02,959 --> 00:13:07,279
need to know about

00:13:04,000 --> 00:13:11,040
answer to index it properly

00:13:07,279 --> 00:13:13,120
question answer prayers can have content

00:13:11,040 --> 00:13:14,639
not central topic of an answer if it's

00:13:13,120 --> 00:13:16,399
not central

00:13:14,639 --> 00:13:18,160
we don't want to index it because there

00:13:16,399 --> 00:13:20,320
should be other answer

00:13:18,160 --> 00:13:21,360
where it is central and then we break

00:13:20,320 --> 00:13:24,639
the relevancy

00:13:21,360 --> 00:13:27,760
because if keywords

00:13:24,639 --> 00:13:29,200
from uh from query occurs in the answer

00:13:27,760 --> 00:13:32,320
it doesn't necessarily mean that this is

00:13:29,200 --> 00:13:35,200
a good answer and this is the main thing

00:13:32,320 --> 00:13:36,160
indexing relevant text allows the

00:13:35,200 --> 00:13:39,519
precision

00:13:36,160 --> 00:13:40,079
so instead of uh getting one good exact

00:13:39,519 --> 00:13:43,120
direct

00:13:40,079 --> 00:13:45,199
answer we get all answers

00:13:43,120 --> 00:13:47,040
uh with the keyword with the keywords

00:13:45,199 --> 00:13:48,399
from query and we know i mean we

00:13:47,040 --> 00:13:50,399
encountered this all the day

00:13:48,399 --> 00:13:51,519
all the time default search engine

00:13:50,399 --> 00:13:53,920
default

00:13:51,519 --> 00:13:56,560
uh tf idf search engine have this

00:13:53,920 --> 00:14:00,000
problem and even

00:13:56,560 --> 00:14:01,920
uh more sophisticated it's hard uh

00:14:00,000 --> 00:14:04,240
to solve this problem without discourse

00:14:01,920 --> 00:14:06,639
analysis as we understand because

00:14:04,240 --> 00:14:09,040
we either need to understand domain then

00:14:06,639 --> 00:14:12,399
with the anthology very domain dependent

00:14:09,040 --> 00:14:14,480
and very hard to adjust and only

00:14:12,399 --> 00:14:15,440
are relying on keyword statistic we

00:14:14,480 --> 00:14:18,160
cannot do it

00:14:15,440 --> 00:14:18,639
because importance of a phrase it's

00:14:18,160 --> 00:14:20,480
about

00:14:18,639 --> 00:14:22,639
logic organization of text it's not

00:14:20,480 --> 00:14:25,680
about frequency of keywords so frequency

00:14:22,639 --> 00:14:28,959
of keywords doesn't help at all here

00:14:25,680 --> 00:14:32,000
so we propose a discourse based approach

00:14:28,959 --> 00:14:34,160
and we determine informative parts

00:14:32,000 --> 00:14:35,360
and informative in terms of logical

00:14:34,160 --> 00:14:38,560
organization of text

00:14:35,360 --> 00:14:40,079
not in terms of we take entity or we

00:14:38,560 --> 00:14:43,440
just take a phrase

00:14:40,079 --> 00:14:46,720
and assess importance standalone

00:14:43,440 --> 00:14:47,440
it's logical how when when authors

00:14:46,720 --> 00:14:50,000
organize

00:14:47,440 --> 00:14:52,560
text they as we going to see they

00:14:50,000 --> 00:14:54,959
organize it in a way that important

00:14:52,560 --> 00:14:56,720
comes in one chunks and less important

00:14:54,959 --> 00:14:59,040
comes as additions

00:14:56,720 --> 00:15:00,720
in course analysis helps to recognize

00:14:59,040 --> 00:15:04,240
and then we only again

00:15:00,720 --> 00:15:06,639
the main rule for this approach

00:15:04,240 --> 00:15:07,920
we only index important what we what we

00:15:06,639 --> 00:15:12,000
recognize as important

00:15:07,920 --> 00:15:15,040
we do not index unimportant

00:15:12,000 --> 00:15:18,000
so rhetorical structure theory so we

00:15:15,040 --> 00:15:21,360
take text we split it into

00:15:18,000 --> 00:15:24,240
uh parts important part is nucleus

00:15:21,360 --> 00:15:25,680
a relative uh dependent parts called

00:15:24,240 --> 00:15:28,720
satellite

00:15:25,680 --> 00:15:30,639
called elementary and what we split a

00:15:28,720 --> 00:15:32,240
text into called elementary discourse

00:15:30,639 --> 00:15:34,800
unit discourse unit

00:15:32,240 --> 00:15:37,279
and it's about a logical organization of

00:15:34,800 --> 00:15:39,600
text for example in this presentation

00:15:37,279 --> 00:15:41,199
uh my topic is discourse analysis i

00:15:39,600 --> 00:15:43,680
first define what it is

00:15:41,199 --> 00:15:44,240
then i define another entity then i

00:15:43,680 --> 00:15:47,680
define

00:15:44,240 --> 00:15:50,240
second entity and then fourth sentence

00:15:47,680 --> 00:15:51,199
i or i define the link between it it

00:15:50,240 --> 00:15:53,279
doesn't matter the

00:15:51,199 --> 00:15:55,279
topic of my talk doesn't matter the

00:15:53,279 --> 00:15:58,480
logical organization matters

00:15:55,279 --> 00:16:00,800
and logical organization of text

00:15:58,480 --> 00:16:02,800
a logical realization of answer tells us

00:16:00,800 --> 00:16:06,560
how to index it

00:16:02,800 --> 00:16:09,759
now discourse 3 it's a main

00:16:06,560 --> 00:16:10,639
way to represent this course discourse

00:16:09,759 --> 00:16:14,880
parsers

00:16:10,639 --> 00:16:18,160
take text and produce discourse trees

00:16:14,880 --> 00:16:21,120
it's a hierarchy of rhetorical relations

00:16:18,160 --> 00:16:22,480
it's directed mostly anti-symmetric and

00:16:21,120 --> 00:16:24,240
we're going to uh

00:16:22,480 --> 00:16:25,600
the rest of the document you can see the

00:16:24,240 --> 00:16:28,780
different examples

00:16:25,600 --> 00:16:31,919
of rhetorical relations

00:16:28,780 --> 00:16:31,919
[Music]

00:16:33,519 --> 00:16:38,320
so i like this example uh from serrano's

00:16:36,240 --> 00:16:39,040
story because it's very controversial so

00:16:38,320 --> 00:16:40,800
a lot of

00:16:39,040 --> 00:16:43,199
interesting texts features like

00:16:40,800 --> 00:16:45,759
argumentation controversy

00:16:43,199 --> 00:16:45,759
and stuff

00:16:47,440 --> 00:16:51,600
relation that hold between parts once we

00:16:50,160 --> 00:16:55,279
have relation now these

00:16:51,600 --> 00:16:56,959
uh text is taken uh takes is taken split

00:16:55,279 --> 00:16:59,360
into parts

00:16:56,959 --> 00:17:00,320
and then the parts are organized in a

00:16:59,360 --> 00:17:03,839
tree

00:17:00,320 --> 00:17:04,319
and then between each leaves terminal

00:17:03,839 --> 00:17:07,360
nodes

00:17:04,319 --> 00:17:10,720
these are uh relation the default

00:17:07,360 --> 00:17:12,880
relation is liberation it means

00:17:10,720 --> 00:17:15,520
something and then something additional

00:17:12,880 --> 00:17:18,319
something and something additional

00:17:15,520 --> 00:17:19,439
and the liberation is not symmetric

00:17:18,319 --> 00:17:21,760
something is always

00:17:19,439 --> 00:17:23,120
more important than something additional

00:17:21,760 --> 00:17:25,839
joint is symmetric

00:17:23,120 --> 00:17:27,679
it means just to observation comes

00:17:25,839 --> 00:17:30,559
together

00:17:27,679 --> 00:17:33,200
background means here is the fact that

00:17:30,559 --> 00:17:36,559
here's background for this fact

00:17:33,200 --> 00:17:37,760
so rhetoric relations explain why text

00:17:36,559 --> 00:17:40,640
is coherent

00:17:37,760 --> 00:17:43,520
if you just uh take keywords and apply

00:17:40,640 --> 00:17:46,720
syntactic analysis and try to build

00:17:43,520 --> 00:17:49,280
text from it by the way this is how uh

00:17:46,720 --> 00:17:50,400
deep learning tries to generate text

00:17:49,280 --> 00:17:52,320
just learn

00:17:50,400 --> 00:17:53,520
uh sequence and words and we know it

00:17:52,320 --> 00:17:56,400
doesn't work well

00:17:53,520 --> 00:17:58,720
uh because we need to learn not just

00:17:56,400 --> 00:18:01,360
syntactic relations but also discourse

00:17:58,720 --> 00:18:04,720
relation your needs to organize logic

00:18:01,360 --> 00:18:05,760
so if you learn from text from syntactic

00:18:04,720 --> 00:18:09,679
relations and

00:18:05,760 --> 00:18:12,880
generate new text based only on syntax

00:18:09,679 --> 00:18:14,720
uh distance uh two three four probably

00:18:12,880 --> 00:18:16,880
are doing well but then

00:18:14,720 --> 00:18:18,160
the logical structure is broken that is

00:18:16,880 --> 00:18:20,080
why it's so hard

00:18:18,160 --> 00:18:22,000
to automatically generate text you need

00:18:20,080 --> 00:18:25,039
to know not just synths and semantics

00:18:22,000 --> 00:18:25,039
but also this course

00:18:25,840 --> 00:18:32,640
okay uh so this is another example

00:18:29,360 --> 00:18:34,960
of a discourse tree another

00:18:32,640 --> 00:18:36,880
uh paragraph so usually a typical

00:18:34,960 --> 00:18:38,559
discourse three is a four paragraph of

00:18:36,880 --> 00:18:41,679
two x couple of sentences

00:18:38,559 --> 00:18:45,200
maybe three five sentences

00:18:41,679 --> 00:18:46,240
but uh theoretically can be uh built for

00:18:45,200 --> 00:18:48,960
long attacks and

00:18:46,240 --> 00:18:50,480
just uh gold uh levels of hierarchy

00:18:48,960 --> 00:18:52,880
going to be much

00:18:50,480 --> 00:18:55,120
uh deeper what we are adding here in

00:18:52,880 --> 00:18:58,799
addition to rhetorical relations

00:18:55,120 --> 00:19:01,200
how text is organized

00:18:58,799 --> 00:19:03,200
again attribution here means that this

00:19:01,200 --> 00:19:06,240
part

00:19:03,200 --> 00:19:09,360
not just randomly but we observe

00:19:06,240 --> 00:19:13,120
this because according to like

00:19:09,360 --> 00:19:14,799
according to employees according to four

00:19:13,120 --> 00:19:17,520
former employees

00:19:14,799 --> 00:19:19,440
so relation between the rest of text and

00:19:17,520 --> 00:19:21,760
this phrase according to for former

00:19:19,440 --> 00:19:24,960
employees is attribution

00:19:21,760 --> 00:19:26,960
because this is the fact and this is uh

00:19:24,960 --> 00:19:28,240
how we obtain from which source we

00:19:26,960 --> 00:19:30,000
obtain this fact

00:19:28,240 --> 00:19:33,039
so that's why attribution specific

00:19:30,000 --> 00:19:36,320
relation and at the highest point

00:19:33,039 --> 00:19:36,320
there is explanation

00:19:36,799 --> 00:19:41,360
and uh there are discourse some

00:19:38,799 --> 00:19:44,160
indicators syntactic indicators is text

00:19:41,360 --> 00:19:44,160
why it is

00:19:45,440 --> 00:19:52,080
this explanation uh because

00:19:48,799 --> 00:19:55,280
there should be some fact here and then

00:19:52,080 --> 00:19:57,280
explaining another observation here

00:19:55,280 --> 00:20:00,640
what we have in addition here

00:19:57,280 --> 00:20:00,640
communicative actions

00:20:00,799 --> 00:20:05,120
there is a different word a different

00:20:02,799 --> 00:20:07,760
word we have rhetorical structure theory

00:20:05,120 --> 00:20:08,720
and now communicative actions are speech

00:20:07,760 --> 00:20:11,440
accessory

00:20:08,720 --> 00:20:12,480
like the same fact can be agreed

00:20:11,440 --> 00:20:15,200
disagreed

00:20:12,480 --> 00:20:16,880
informed disinformed disputed and so

00:20:15,200 --> 00:20:20,559
forth

00:20:16,880 --> 00:20:23,600
so now we have the same tree nodes

00:20:20,559 --> 00:20:24,320
uh no terminal nodes are pieces portions

00:20:23,600 --> 00:20:28,000
of text

00:20:24,320 --> 00:20:31,039
elementary discourse units other

00:20:28,000 --> 00:20:33,280
labels for nodes are

00:20:31,039 --> 00:20:35,679
rhetorical relations and then for arcs

00:20:33,280 --> 00:20:38,640
we have for some arts we have

00:20:35,679 --> 00:20:39,760
uh communicative actions something not

00:20:38,640 --> 00:20:42,240
just

00:20:39,760 --> 00:20:42,880
ex have excitement about technology but

00:20:42,240 --> 00:20:46,159
somebody

00:20:42,880 --> 00:20:49,600
struggle with it somebody

00:20:46,159 --> 00:20:52,720
not just do this with only friction but

00:20:49,600 --> 00:20:56,720
developed it uh so develop

00:20:52,720 --> 00:21:00,080
and struggle here is generalization of

00:20:56,720 --> 00:21:02,240
uh how information is carried out or how

00:21:00,080 --> 00:21:05,840
something is developed how

00:21:02,240 --> 00:21:08,720
some entity uh evolves

00:21:05,840 --> 00:21:10,159
are now simple another simple example of

00:21:08,720 --> 00:21:13,360
discourse three

00:21:10,159 --> 00:21:15,360
and now we approaching importance

00:21:13,360 --> 00:21:16,720
so here is the review text how we index

00:21:15,360 --> 00:21:20,480
reviews for example

00:21:16,720 --> 00:21:24,240
this camera shoots well in low light so

00:21:20,480 --> 00:21:26,000
i made a few good shots so the simple

00:21:24,240 --> 00:21:28,640
indexing rule here

00:21:26,000 --> 00:21:30,720
this is the fact or this is a claim of

00:21:28,640 --> 00:21:33,679
manufacturer or opinion

00:21:30,720 --> 00:21:35,200
main opinion of the user so this is

00:21:33,679 --> 00:21:38,799
important

00:21:35,200 --> 00:21:40,960
and nobody cares what i did so i made a

00:21:38,799 --> 00:21:43,520
few good shots on the board at night

00:21:40,960 --> 00:21:44,080
like who cares was it on the boat on a

00:21:43,520 --> 00:21:47,600
plane

00:21:44,080 --> 00:21:50,480
was it at night night might be important

00:21:47,600 --> 00:21:51,520
uh but it's already uh covered with low

00:21:50,480 --> 00:21:54,640
light

00:21:51,520 --> 00:21:56,880
uh so uh the

00:21:54,640 --> 00:21:57,679
observation here we want to index this

00:21:56,880 --> 00:22:00,240
part

00:21:57,679 --> 00:22:01,120
and we don't want to index keywords like

00:22:00,240 --> 00:22:03,120
bold

00:22:01,120 --> 00:22:04,240
or night because they can trigger very

00:22:03,120 --> 00:22:07,760
different they can

00:22:04,240 --> 00:22:09,120
uh to get this answer to answer totally

00:22:07,760 --> 00:22:10,320
different question and we don't want

00:22:09,120 --> 00:22:13,600
that

00:22:10,320 --> 00:22:14,480
and again this is two units this camera

00:22:13,600 --> 00:22:18,880
shoots well

00:22:14,480 --> 00:22:21,520
in low light so unit one is important

00:22:18,880 --> 00:22:22,000
unit two is not less important so we

00:22:21,520 --> 00:22:23,679
only

00:22:22,000 --> 00:22:25,200
index if we have important and

00:22:23,679 --> 00:22:28,240
unimportant

00:22:25,200 --> 00:22:31,679
nucleus and satellite we index nucleus

00:22:28,240 --> 00:22:31,679
and we don't index satellite

00:22:33,440 --> 00:22:38,880
and now the questions so these are for

00:22:36,640 --> 00:22:42,159
this question this is a good answer

00:22:38,880 --> 00:22:43,280
camera shoots low light shoots light low

00:22:42,159 --> 00:22:47,360
light low light

00:22:43,280 --> 00:22:47,360
every light is the focus of this text

00:22:48,080 --> 00:22:51,919
it's not a boat nightboard bought at

00:22:51,440 --> 00:22:54,240
night

00:22:51,919 --> 00:22:55,039
good shots that's are very common very

00:22:54,240 --> 00:22:58,080
broad

00:22:55,039 --> 00:22:59,600
questions we don't want these questions

00:22:58,080 --> 00:23:01,120
to trigger this answer because this is

00:22:59,600 --> 00:23:03,760
answer very specific about

00:23:01,120 --> 00:23:05,200
life that is why again we do not index

00:23:03,760 --> 00:23:09,280
this uh

00:23:05,200 --> 00:23:13,200
lower part we only index up a part

00:23:09,280 --> 00:23:18,159
we index the main thing but not

00:23:13,200 --> 00:23:18,159
the consequence not what was explained

00:23:19,039 --> 00:23:23,360
and now in terms of search engineering

00:23:21,280 --> 00:23:25,600
imagine preparers question answer

00:23:23,360 --> 00:23:26,320
parents question answer pairs we index

00:23:25,600 --> 00:23:28,240
them

00:23:26,320 --> 00:23:29,360
and then what do we do in a real life

00:23:28,240 --> 00:23:32,559
search

00:23:29,360 --> 00:23:34,720
so we have a query and if we can match

00:23:32,559 --> 00:23:36,159
it if it is query correspond available

00:23:34,720 --> 00:23:38,240
questions that is good enough we don't

00:23:36,159 --> 00:23:40,559
need this technology we just find

00:23:38,240 --> 00:23:42,480
a similar question and we do it on

00:23:40,559 --> 00:23:44,880
syntactic analysis

00:23:42,480 --> 00:23:45,600
if it's not working if it's not a few

00:23:44,880 --> 00:23:47,200
results

00:23:45,600 --> 00:23:49,120
then this is the focus of what we are

00:23:47,200 --> 00:23:52,080
doing then we

00:23:49,120 --> 00:23:53,919
have our specific index uh not

00:23:52,080 --> 00:23:56,159
completely not full index of

00:23:53,919 --> 00:23:58,559
all answers but only important parts and

00:23:56,159 --> 00:24:01,279
then we search against it

00:23:58,559 --> 00:24:01,679
if still fails then we have none of the

00:24:01,279 --> 00:24:03,360
events

00:24:01,679 --> 00:24:04,960
then we have nothing to do then do the

00:24:03,360 --> 00:24:08,159
default search

00:24:04,960 --> 00:24:11,679
so the third option our resort is

00:24:08,159 --> 00:24:15,039
what we resort to is the default search

00:24:11,679 --> 00:24:20,240
so we if we cannot find

00:24:15,039 --> 00:24:22,400
like it means the content doesn't cover

00:24:20,240 --> 00:24:24,159
the topic evenly so for some questions

00:24:22,400 --> 00:24:26,640
we don't have anything

00:24:24,159 --> 00:24:27,440
in terms of important part of answer

00:24:26,640 --> 00:24:31,440
then we just

00:24:27,440 --> 00:24:35,039
cover it by default search

00:24:31,440 --> 00:24:35,679
by the full index so we don't we still

00:24:35,039 --> 00:24:38,720
need

00:24:35,679 --> 00:24:40,880
so if we index uh documents according to

00:24:38,720 --> 00:24:43,360
this technology we still have

00:24:40,880 --> 00:24:44,559
the traditional complete index full

00:24:43,360 --> 00:24:48,320
answers

00:24:44,559 --> 00:24:51,120
uh for the third option but in addition

00:24:48,320 --> 00:24:51,440
we build additional index retry first

00:24:51,120 --> 00:24:54,799
which

00:24:51,440 --> 00:24:58,000
only uh indexes uh does indexing four

00:24:54,799 --> 00:25:01,039
important parts and that uh as we

00:24:58,000 --> 00:25:01,760
as we will see and as formerly failed by

00:25:01,039 --> 00:25:05,039
now

00:25:01,760 --> 00:25:07,760
improves precision another more

00:25:05,039 --> 00:25:10,960
complicated example of a discourse tree

00:25:07,760 --> 00:25:12,159
uh so right now we show uh this is more

00:25:10,960 --> 00:25:15,440
complicated discourse

00:25:12,159 --> 00:25:19,120
this is a question about uh tax

00:25:15,440 --> 00:25:23,279
and this is example of some financial

00:25:19,120 --> 00:25:25,760
side and the number of answers is

00:25:23,279 --> 00:25:28,159
limited we don't want again to index all

00:25:25,760 --> 00:25:30,640
keywords we only index important parts

00:25:28,159 --> 00:25:33,039
so we build the discourse tree it starts

00:25:30,640 --> 00:25:36,720
with liberation elaboration

00:25:33,039 --> 00:25:39,760
enablement by means which way we do it

00:25:36,720 --> 00:25:40,559
uh then what are the condition if

00:25:39,760 --> 00:25:45,279
something

00:25:40,559 --> 00:25:48,400
if you're under then so it's a condition

00:25:45,279 --> 00:25:50,240
and then for each uh this relation we

00:25:48,400 --> 00:25:52,320
highlight

00:25:50,240 --> 00:25:54,400
important part nucleus part and we

00:25:52,320 --> 00:25:56,720
ignore

00:25:54,400 --> 00:25:57,600
a satellite part so everything

00:25:56,720 --> 00:25:59,520
highlighted

00:25:57,600 --> 00:26:00,960
everything underscored we index

00:25:59,520 --> 00:26:02,240
everything not underscored we don't

00:26:00,960 --> 00:26:05,600
index

00:26:02,240 --> 00:26:08,400
and let's look at examples

00:26:05,600 --> 00:26:09,760
so these are the phrases uh from

00:26:08,400 --> 00:26:11,840
important parts

00:26:09,760 --> 00:26:13,679
which are the basis for questions this

00:26:11,840 --> 00:26:16,080
answer should answer

00:26:13,679 --> 00:26:17,919
maximize retirement saving proceed from

00:26:16,080 --> 00:26:20,320
conversion

00:26:17,919 --> 00:26:21,679
saving held on retirement accounts

00:26:20,320 --> 00:26:24,640
account funds

00:26:21,679 --> 00:26:25,840
funds for retirement account and these

00:26:24,640 --> 00:26:28,960
are

00:26:25,840 --> 00:26:31,120
phrases from the same text which

00:26:28,960 --> 00:26:33,600
defaults are changing would answer

00:26:31,120 --> 00:26:35,039
with this answer but it shouldn't

00:26:33,600 --> 00:26:37,760
generally good idea

00:26:35,039 --> 00:26:39,840
we don't want this text is about very

00:26:37,760 --> 00:26:41,760
specific retirement saving we don't want

00:26:39,840 --> 00:26:43,919
to index very general

00:26:41,760 --> 00:26:46,320
words one way to figure that out

00:26:43,919 --> 00:26:48,720
probably generally could an idea

00:26:46,320 --> 00:26:49,600
going to be very frequent but not

00:26:48,720 --> 00:26:51,520
necessarily

00:26:49,600 --> 00:26:53,919
so by frequency you cannot filter this

00:26:51,520 --> 00:26:55,200
out you can get to this part only by

00:26:53,919 --> 00:26:59,200
frequency

00:26:55,200 --> 00:27:01,840
resultant tax uh cost these

00:26:59,200 --> 00:27:04,080
expressions are detached from context so

00:27:01,840 --> 00:27:07,520
it's not a good idea to match

00:27:04,080 --> 00:27:09,840
question with these parts because

00:27:07,520 --> 00:27:12,000
the answer mentions this but this is not

00:27:09,840 --> 00:27:16,080
the topic of this answer

00:27:12,000 --> 00:27:19,919
so this is uh one of the most

00:27:16,080 --> 00:27:21,440
again uh coming to my introductory

00:27:19,919 --> 00:27:25,679
example that is the

00:27:21,440 --> 00:27:27,520
key reason for complicated questions uh

00:27:25,679 --> 00:27:30,240
like in this example

00:27:27,520 --> 00:27:31,760
if we search on the using verb search

00:27:30,240 --> 00:27:34,880
engine it's hard to get

00:27:31,760 --> 00:27:36,799
exact answer because some documents

00:27:34,880 --> 00:27:38,720
these parts are indexed but it shouldn't

00:27:36,799 --> 00:27:40,960
have and that is why

00:27:38,720 --> 00:27:42,960
this answer mentions like a resulting

00:27:40,960 --> 00:27:45,440
tax course but if you read this answer

00:27:42,960 --> 00:27:47,440
and learn it it doesn't really help you

00:27:45,440 --> 00:27:49,600
okay so this is the key this is very

00:27:47,440 --> 00:27:51,360
important the same answer we just

00:27:49,600 --> 00:27:54,080
uh discourse three we visualize

00:27:51,360 --> 00:27:56,399
differently now everything highlighted

00:27:54,080 --> 00:27:58,000
in green should be indexed everything

00:27:56,399 --> 00:27:59,919
which is not in green

00:27:58,000 --> 00:28:02,000
is not indexed and this is just

00:27:59,919 --> 00:28:07,039
different way

00:28:02,000 --> 00:28:07,039
to visualize to visualize this discord

00:28:10,880 --> 00:28:31,840
now how we do

00:28:14,880 --> 00:28:31,840
if you use this rule

00:28:52,640 --> 00:28:54,720

YouTube URL: https://www.youtube.com/watch?v=-0xwb7szKnQ


