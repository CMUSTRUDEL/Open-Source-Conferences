Title: The economics of vendor neutrality and vendor domination
Publication date: 2020-10-23
Playlist: ApacheCon @Home 2020: Community
Description: 
	The economics of vendor neutrality and vendor domination
Myrle Krantz

A presentation from ApacheCon @Home 2020
https://apachecon.com/acah2020/

Game theory applied to open source can be used to explain how participants profit from open source, but existing models work from the assumption that all contributors receive the same benefit from the decisions made. They do not. For example: Some may benefit more when software is faster, while others benefit when it is more configurable. It is often necessary to choose between the two. What happens to the general social welfare captured and made available by an open source project when a narrow economic interest dominates its decision making?

Myrle Krantz is currently serving as the Treasurer for the Apache Software Foundation. She is a former board member for the Apache Software Foundation, conference chair for ApacheCon Europe in 2019, a member of the Diversity and Inclusion Initiative, and the Community Development Committee. She has served as VP for the core banking open source project Fineract. Myrle has her computer science degree from Rice University in Houston, and her MBA from the Rotterdam School of Management. Myrle is an American living in the Voreifel in Germany with her two daughters, a husband, and a hunting dog. She loves to read, and plays piano badly.
Captions: 
	00:00:06,420 --> 00:00:10,640
[Music]

00:00:14,160 --> 00:00:17,230
[Music]

00:00:27,840 --> 00:00:31,679
so

00:00:28,840 --> 00:00:35,040
everybody welcome to my talk

00:00:31,679 --> 00:00:38,320
about the economics of vendor neutrality

00:00:35,040 --> 00:00:38,320
and vendor domination

00:00:39,600 --> 00:00:44,160
let me uh figure out where i'm at and

00:00:41,920 --> 00:00:46,559
then we'll get a move on

00:00:44,160 --> 00:00:47,440
so this is the topic of my master's

00:00:46,559 --> 00:00:49,200
thesis that

00:00:47,440 --> 00:00:51,360
i turned in a couple of months ago i

00:00:49,200 --> 00:00:54,160
just graduated from my master's

00:00:51,360 --> 00:00:55,520
so i'll be going into the depths of the

00:00:54,160 --> 00:00:58,239
economics

00:00:55,520 --> 00:01:00,239
what makes open source tick economically

00:00:58,239 --> 00:01:03,920
and then i'll be talking about

00:01:00,239 --> 00:01:05,280
based on that explaining what makes a

00:01:03,920 --> 00:01:07,680
project vendor neutral

00:01:05,280 --> 00:01:09,200
or vendor dominated and exploring some

00:01:07,680 --> 00:01:12,640
of the ways we can measure vendor

00:01:09,200 --> 00:01:14,320
neutrality or vendor domination

00:01:12,640 --> 00:01:16,080
if you're not already please don't

00:01:14,320 --> 00:01:18,560
forget to join us in the

00:01:16,080 --> 00:01:20,320
slack channel the community's channel is

00:01:18,560 --> 00:01:21,439
a great place to start but there's also

00:01:20,320 --> 00:01:23,200
many other

00:01:21,439 --> 00:01:24,640
topic area groups that you guys might be

00:01:23,200 --> 00:01:27,600
interested in or that you all might be

00:01:24,640 --> 00:01:29,840
interested in

00:01:27,600 --> 00:01:30,799
allow me to introduce myself my name is

00:01:29,840 --> 00:01:33,600
merle kranz

00:01:30,799 --> 00:01:35,600
i'm a former board member of the asf i

00:01:33,600 --> 00:01:38,079
was the conference chair for apachecon

00:01:35,600 --> 00:01:39,520
berlin in 2019 last year

00:01:38,079 --> 00:01:42,320
when we were still doing in-person

00:01:39,520 --> 00:01:44,479
events i'm currently the treasurer of

00:01:42,320 --> 00:01:46,720
the apache soccer foundation

00:01:44,479 --> 00:01:49,200
and i'm also a software engineer and

00:01:46,720 --> 00:01:51,439
individual contributor to several human

00:01:49,200 --> 00:01:52,240
humanitarian free and open source

00:01:51,439 --> 00:01:54,720
projects

00:01:52,240 --> 00:01:56,960
for example apache dinner act i've also

00:01:54,720 --> 00:01:58,159
made minor contributions to open mrs and

00:01:56,960 --> 00:02:00,880
mojito

00:01:58,159 --> 00:02:01,840
and i just graduated from my mba program

00:02:00,880 --> 00:02:03,520
in cologne

00:02:01,840 --> 00:02:04,960
and i'm currently on the job market so

00:02:03,520 --> 00:02:09,840
if you're looking for an open source

00:02:04,960 --> 00:02:09,840
expert do ping me

00:02:09,920 --> 00:02:13,040
before i start i do also want to thank

00:02:11,920 --> 00:02:16,239
the people who helped me

00:02:13,040 --> 00:02:17,840
with this work this is this was based on

00:02:16,239 --> 00:02:20,319
a 60 page paper

00:02:17,840 --> 00:02:22,080
my thesis advisor professor dr

00:02:20,319 --> 00:02:24,319
christophe rosenkons

00:02:22,080 --> 00:02:25,200
my early proofreader shane curcu thank

00:02:24,319 --> 00:02:26,640
you

00:02:25,200 --> 00:02:28,800
the guy who gave me the idea for the

00:02:26,640 --> 00:02:31,200
topic who has to remain anonymous

00:02:28,800 --> 00:02:32,959
my mentor at the asf greg stein and my

00:02:31,200 --> 00:02:35,360
support at home my husband

00:02:32,959 --> 00:02:36,000
christopher kranz thank you all so very

00:02:35,360 --> 00:02:38,319
much

00:02:36,000 --> 00:02:40,480
but my mistakes are my own so don't

00:02:38,319 --> 00:02:42,319
blame them

00:02:40,480 --> 00:02:45,120
so let's cover the economics of open

00:02:42,319 --> 00:02:48,560
source first we'll go through the basics

00:02:45,120 --> 00:02:50,879
first off what is a public good

00:02:48,560 --> 00:02:52,879
a public good is non-rivalrous

00:02:50,879 --> 00:02:54,160
non-rivalrous means that when one person

00:02:52,879 --> 00:02:57,200
benefits from it

00:02:54,160 --> 00:02:59,599
the total value is not reduced so

00:02:57,200 --> 00:03:01,360
software can be copied without reducing

00:02:59,599 --> 00:03:03,599
the initial value

00:03:01,360 --> 00:03:05,519
a public good is also non-excludable

00:03:03,599 --> 00:03:07,120
it's not possible to prevent others from

00:03:05,519 --> 00:03:09,280
benefiting from a public good if it were

00:03:07,120 --> 00:03:11,840
excludable then it would be a club good

00:03:09,280 --> 00:03:13,680
like a membership or you know a golf

00:03:11,840 --> 00:03:17,360
golf club entrance

00:03:13,680 --> 00:03:20,640
open source software is a public

00:03:17,360 --> 00:03:21,680
good well how do we know it's a public

00:03:20,640 --> 00:03:23,760
good

00:03:21,680 --> 00:03:25,280
well we can intuit it based on this but

00:03:23,760 --> 00:03:27,040
we can also examine

00:03:25,280 --> 00:03:30,239
the economics of open source

00:03:27,040 --> 00:03:33,519
participation a little more closely

00:03:30,239 --> 00:03:35,599
baldwin and clark in 2006 determines

00:03:33,519 --> 00:03:38,799
that open source is a strong link

00:03:35,599 --> 00:03:40,560
game well what is a strong link game

00:03:38,799 --> 00:03:42,640
well most people are more familiar with

00:03:40,560 --> 00:03:45,280
so-called weak link games

00:03:42,640 --> 00:03:46,799
such as the prisoner's dilemma so in a

00:03:45,280 --> 00:03:49,120
weak link game the person who

00:03:46,799 --> 00:03:52,000
contributes the least or who is the most

00:03:49,120 --> 00:03:53,760
selfish determines the outcome for all

00:03:52,000 --> 00:03:56,080
of the participants

00:03:53,760 --> 00:03:57,439
in a strong link game the person who is

00:03:56,080 --> 00:04:00,000
the most generous

00:03:57,439 --> 00:04:02,799
determines that the outcome for all of

00:04:00,000 --> 00:04:02,799
the participants

00:04:03,360 --> 00:04:07,439
to see this we can look at the nash

00:04:05,280 --> 00:04:10,239
equivalent equilibrium

00:04:07,439 --> 00:04:11,599
when two open source software developers

00:04:10,239 --> 00:04:15,120
come together when they

00:04:11,599 --> 00:04:19,440
meet the nash equilibrium is basically

00:04:15,120 --> 00:04:22,720
one person defined by the the x-axis

00:04:19,440 --> 00:04:24,400
decides um whether they want to work or

00:04:22,720 --> 00:04:26,320
not work and the other person defined by

00:04:24,400 --> 00:04:28,320
the y-axis also decides whether they

00:04:26,320 --> 00:04:29,840
work or don't work and each of them is

00:04:28,320 --> 00:04:31,360
going to be considering what the other

00:04:29,840 --> 00:04:33,440
person will do

00:04:31,360 --> 00:04:34,800
in order to make this decision and what

00:04:33,440 --> 00:04:36,320
their value will be

00:04:34,800 --> 00:04:38,479
depending on what they do and what the

00:04:36,320 --> 00:04:42,000
other person does

00:04:38,479 --> 00:04:44,240
so if we look at what the open source

00:04:42,000 --> 00:04:46,320
software developer is going to do well

00:04:44,240 --> 00:04:47,680
each of them is going to look at this

00:04:46,320 --> 00:04:50,639
software developer 1 is going to look at

00:04:47,680 --> 00:04:53,360
this and say well if i don't work

00:04:50,639 --> 00:04:54,639
i could either have nothing or i could

00:04:53,360 --> 00:04:56,639
have the value from what the other

00:04:54,639 --> 00:04:58,880
person will do

00:04:56,639 --> 00:05:00,639
if i do work then i'll definitely have

00:04:58,880 --> 00:05:02,240
something

00:05:00,639 --> 00:05:04,560
each software developer will look at

00:05:02,240 --> 00:05:06,639
this and make this determination

00:05:04,560 --> 00:05:08,479
and if they're being rational they will

00:05:06,639 --> 00:05:10,960
decide to work

00:05:08,479 --> 00:05:12,160
now if they both decide to work then the

00:05:10,960 --> 00:05:14,639
value they have

00:05:12,160 --> 00:05:16,400
will be the value of the product of what

00:05:14,639 --> 00:05:19,280
they produce

00:05:16,400 --> 00:05:20,320
and subtract it from that the cost of

00:05:19,280 --> 00:05:22,240
the work

00:05:20,320 --> 00:05:23,840
that they put into it so the nash

00:05:22,240 --> 00:05:24,479
equilibrium in this case we'll bring

00:05:23,840 --> 00:05:29,120
them both

00:05:24,479 --> 00:05:30,720
into the lower right corner here

00:05:29,120 --> 00:05:32,960
in which both of them if they don't

00:05:30,720 --> 00:05:35,120
coordinate in which both of them have

00:05:32,960 --> 00:05:36,639
the value of the work product minus the

00:05:35,120 --> 00:05:38,400
cost of the work and if the cost of the

00:05:36,639 --> 00:05:39,039
work is lower than the value of the word

00:05:38,400 --> 00:05:41,919
product

00:05:39,039 --> 00:05:42,960
then both of them will do the work now

00:05:41,919 --> 00:05:44,479
if they coordinate

00:05:42,960 --> 00:05:47,280
then they might divide up the work they

00:05:44,479 --> 00:05:48,410
might find modules or units on which

00:05:47,280 --> 00:05:51,039
each of them could work

00:05:48,410 --> 00:05:54,560
[Music]

00:05:51,039 --> 00:05:57,280
what's more is if they then go

00:05:54,560 --> 00:05:58,080
and accidentally because they didn't

00:05:57,280 --> 00:06:00,080
coordinate

00:05:58,080 --> 00:06:04,479
perfectly accidentally work on the same

00:06:00,080 --> 00:06:07,360
thing they still have an advantage

00:06:04,479 --> 00:06:08,240
so let's say that both of them decided

00:06:07,360 --> 00:06:10,960
independently

00:06:08,240 --> 00:06:12,400
that feature xyz is the thing that they

00:06:10,960 --> 00:06:14,000
need the most and they go off and they

00:06:12,400 --> 00:06:16,400
implement it and each of them comes back

00:06:14,000 --> 00:06:17,680
with a different implementation

00:06:16,400 --> 00:06:19,360
well we all know from software

00:06:17,680 --> 00:06:21,680
development that different feature

00:06:19,360 --> 00:06:23,440
implementations have different values

00:06:21,680 --> 00:06:26,479
maybe one is a little faster maybe it

00:06:23,440 --> 00:06:26,479
has a few less bugs

00:06:26,880 --> 00:06:30,639
now when both of them come back and say

00:06:28,639 --> 00:06:32,160
hey look at this work

00:06:30,639 --> 00:06:34,639
then they have to decide which

00:06:32,160 --> 00:06:36,319
implementation they're going to take

00:06:34,639 --> 00:06:39,840
which implementation they decide to take

00:06:36,319 --> 00:06:39,840
will be decided by the pmc

00:06:40,720 --> 00:06:44,800
so let me make that a little bigger the

00:06:42,880 --> 00:06:46,880
pmc is going to look at the value of

00:06:44,800 --> 00:06:49,280
each of these implementations

00:06:46,880 --> 00:06:51,440
and then decide which implementation to

00:06:49,280 --> 00:06:54,319
take

00:06:51,440 --> 00:06:54,960
the values in of the decision will be

00:06:54,319 --> 00:06:57,520
the

00:06:54,960 --> 00:06:59,440
value of the pmc decision minus the cost

00:06:57,520 --> 00:07:01,039
to that individual developer

00:06:59,440 --> 00:07:03,440
of that particular implementation the

00:07:01,039 --> 00:07:05,840
costs will also be different

00:07:03,440 --> 00:07:07,759
what that means is that the pmc will

00:07:05,840 --> 00:07:08,960
most likely go in and say which one is

00:07:07,759 --> 00:07:10,639
worth more

00:07:08,960 --> 00:07:12,240
and so each developer will get the

00:07:10,639 --> 00:07:14,800
maximum value

00:07:12,240 --> 00:07:17,039
of the two develo the two possible

00:07:14,800 --> 00:07:19,120
solutions together and this means that

00:07:17,039 --> 00:07:20,960
both of them actually have an advantage

00:07:19,120 --> 00:07:21,759
because they will be maximizing their

00:07:20,960 --> 00:07:23,680
value

00:07:21,759 --> 00:07:25,599
in some cases the advantage might be

00:07:23,680 --> 00:07:27,280
slight but in both cases

00:07:25,599 --> 00:07:29,440
they are better off because they have

00:07:27,280 --> 00:07:32,160
more options this is what is known as

00:07:29,440 --> 00:07:32,160
option theory

00:07:33,680 --> 00:07:37,120
so we've been talking about

00:07:35,199 --> 00:07:39,199
contributions most people when they say

00:07:37,120 --> 00:07:42,160
when i say contributions think of

00:07:39,199 --> 00:07:42,880
lines of code of course there are many

00:07:42,160 --> 00:07:44,720
many more

00:07:42,880 --> 00:07:46,639
kinds of contributions what is a

00:07:44,720 --> 00:07:49,360
contribution it's anything that adds

00:07:46,639 --> 00:07:51,199
incremental value to a project it's

00:07:49,360 --> 00:07:52,639
organizing events it's creating a

00:07:51,199 --> 00:07:55,199
project graphic

00:07:52,639 --> 00:07:56,720
it's handling a project's visual social

00:07:55,199 --> 00:07:58,639
media presence

00:07:56,720 --> 00:08:00,400
there are many many many things that are

00:07:58,639 --> 00:08:01,280
contributions to open source in an

00:08:00,400 --> 00:08:03,039
economic sense

00:08:01,280 --> 00:08:04,319
anything that creates value for the

00:08:03,039 --> 00:08:06,720
participants of that

00:08:04,319 --> 00:08:06,720
project

00:08:09,199 --> 00:08:13,840
so what else is open source open source

00:08:11,599 --> 00:08:14,960
is a two-sided marketplace and this is

00:08:13,840 --> 00:08:18,240
one of the insights

00:08:14,960 --> 00:08:19,120
that i came to in the master's thesis

00:08:18,240 --> 00:08:20,960
process

00:08:19,120 --> 00:08:23,360
a two-sided marketplace is a special

00:08:20,960 --> 00:08:26,000
kind of marketplace

00:08:23,360 --> 00:08:28,319
in which the socially op more optimal

00:08:26,000 --> 00:08:29,680
platform prices do not sum to marginal

00:08:28,319 --> 00:08:32,000
costs

00:08:29,680 --> 00:08:33,760
now some examples of two-sided

00:08:32,000 --> 00:08:34,560
marketplaces that you may already be

00:08:33,760 --> 00:08:37,519
aware of

00:08:34,560 --> 00:08:39,360
are the internet so there are people

00:08:37,519 --> 00:08:40,000
creating websites and people consuming

00:08:39,360 --> 00:08:41,200
websites

00:08:40,000 --> 00:08:43,919
and those are the two sides of that

00:08:41,200 --> 00:08:43,919
marketplace

00:08:44,640 --> 00:08:48,399
payment networks like mastercard or visa

00:08:47,040 --> 00:08:50,080
there are customers

00:08:48,399 --> 00:08:51,680
making payments there are merchants

00:08:50,080 --> 00:08:52,959
accepting payments

00:08:51,680 --> 00:08:54,880
and what happens in two-sided

00:08:52,959 --> 00:08:56,399
marketplaces is often the costs are

00:08:54,880 --> 00:08:58,080
distributed sometimes in

00:08:56,399 --> 00:08:59,440
unintuitive ways because you're trying

00:08:58,080 --> 00:09:01,760
to attract people

00:08:59,440 --> 00:09:03,279
into the market in order to create the

00:09:01,760 --> 00:09:06,399
network effects that make

00:09:03,279 --> 00:09:08,240
that create benefits for everybody the

00:09:06,399 --> 00:09:10,720
value to the participants

00:09:08,240 --> 00:09:12,000
exceeds the cost participation to those

00:09:10,720 --> 00:09:14,320
participants

00:09:12,000 --> 00:09:17,120
via these cross-platform network effects

00:09:14,320 --> 00:09:20,000
which results in a virtuous cycle

00:09:17,120 --> 00:09:20,880
so open source is a two-sided

00:09:20,000 --> 00:09:22,399
marketplace

00:09:20,880 --> 00:09:23,680
what are the sides of this two-stage

00:09:22,399 --> 00:09:25,200
marketplace well let's start with what

00:09:23,680 --> 00:09:27,120
the platform is

00:09:25,200 --> 00:09:28,720
here the platform is the open source

00:09:27,120 --> 00:09:32,240
project hosted

00:09:28,720 --> 00:09:32,240
by an open source foundation

00:09:33,360 --> 00:09:36,640
one side is the contributors

00:09:35,200 --> 00:09:39,440
contributing

00:09:36,640 --> 00:09:41,120
lines of code event organization the

00:09:39,440 --> 00:09:44,240
various things that contributors

00:09:41,120 --> 00:09:44,800
contribute into the project out of the

00:09:44,240 --> 00:09:47,600
project

00:09:44,800 --> 00:09:50,240
come release artifacts and those release

00:09:47,600 --> 00:09:54,080
artifacts are consumed by users

00:09:50,240 --> 00:09:54,959
so users are taking advantage of the

00:09:54,080 --> 00:09:59,600
contributors well

00:09:54,959 --> 00:10:01,760
why do the contributors then contribute

00:09:59,600 --> 00:10:03,440
well contributors generally contribute

00:10:01,760 --> 00:10:05,440
because they're being paid by a vendor

00:10:03,440 --> 00:10:08,079
now that vendor may be their own

00:10:05,440 --> 00:10:09,440
uh their own entrepreneurship their own

00:10:08,079 --> 00:10:12,079
consulting company

00:10:09,440 --> 00:10:13,760
but they are they are generally earning

00:10:12,079 --> 00:10:16,640
money or at least reputation

00:10:13,760 --> 00:10:18,959
in some way from their contributions to

00:10:16,640 --> 00:10:21,839
open source

00:10:18,959 --> 00:10:23,519
well why do the vendors pay them well

00:10:21,839 --> 00:10:25,519
the vendors pay them

00:10:23,519 --> 00:10:27,839
because the users pay the vendors in

00:10:25,519 --> 00:10:28,320
some cases indirectly in some cases the

00:10:27,839 --> 00:10:30,240
user

00:10:28,320 --> 00:10:32,399
in fact in many cases the user may in

00:10:30,240 --> 00:10:35,360
fact be the contributor

00:10:32,399 --> 00:10:37,440
or another programmer and they're the

00:10:35,360 --> 00:10:39,360
product which is then

00:10:37,440 --> 00:10:41,519
delivered to an end user who actually

00:10:39,360 --> 00:10:42,560
pays so this is somewhat simplified

00:10:41,519 --> 00:10:47,040
however

00:10:42,560 --> 00:10:49,760
the the general concept is correct that

00:10:47,040 --> 00:10:52,320
that a user is using the software and

00:10:49,760 --> 00:10:55,839
paying in some way either through ad fix

00:10:52,320 --> 00:10:58,240
or subscription fees or

00:10:55,839 --> 00:10:59,839
paying for consulting paying the vendor

00:10:58,240 --> 00:11:00,880
in some way and then the vendor pays the

00:10:59,839 --> 00:11:03,360
contributors

00:11:00,880 --> 00:11:04,640
what's more is you'll see that the

00:11:03,360 --> 00:11:06,320
contributors

00:11:04,640 --> 00:11:08,240
are somewhat grouped by the vendors

00:11:06,320 --> 00:11:10,079
there are multiple contributors possibly

00:11:08,240 --> 00:11:11,760
being paid by one vendor and other

00:11:10,079 --> 00:11:13,200
contributors being paid by

00:11:11,760 --> 00:11:15,200
another vendor and this grouping will

00:11:13,200 --> 00:11:17,279
become interesting

00:11:15,200 --> 00:11:20,720
when we get to the next step in this in

00:11:17,279 --> 00:11:20,720
this definitional process

00:11:22,800 --> 00:11:26,880
so what are the benefits to the vendors

00:11:25,040 --> 00:11:31,200
why do vendors then

00:11:26,880 --> 00:11:31,200
pay contributors to work on open source

00:11:32,560 --> 00:11:36,079
well for one thing they can earn money

00:11:35,519 --> 00:11:37,920
with it

00:11:36,079 --> 00:11:40,240
how do they earn money with it well they

00:11:37,920 --> 00:11:42,640
might compose products out of it

00:11:40,240 --> 00:11:44,240
they might create hosted offerings for

00:11:42,640 --> 00:11:46,240
example of

00:11:44,240 --> 00:11:48,959
database products they might create

00:11:46,240 --> 00:11:50,639
add-ons monitoring tools for example

00:11:48,959 --> 00:11:52,880
they might offer consulting they might

00:11:50,639 --> 00:11:54,399
offer training there are many many ways

00:11:52,880 --> 00:11:56,240
to earn money with an open source

00:11:54,399 --> 00:11:56,959
project and which way they want to earn

00:11:56,240 --> 00:11:59,760
money

00:11:56,959 --> 00:12:02,560
also influences their relationship to

00:11:59,760 --> 00:12:05,440
the open source project

00:12:02,560 --> 00:12:07,440
one way in which a vendor might wish to

00:12:05,440 --> 00:12:09,120
have a relationship with an open source

00:12:07,440 --> 00:12:12,639
project is because they want

00:12:09,120 --> 00:12:14,639
architectural influence architectural

00:12:12,639 --> 00:12:17,839
influence means that they can

00:12:14,639 --> 00:12:22,079
move the direction in which the features

00:12:17,839 --> 00:12:24,720
or the bug fixes or other aspects of the

00:12:22,079 --> 00:12:27,040
code itself

00:12:24,720 --> 00:12:30,160
in which those those things are are

00:12:27,040 --> 00:12:30,160
developed or produced

00:12:30,480 --> 00:12:36,480
so if we go back to option theory

00:12:34,079 --> 00:12:39,279
and think about the value of the various

00:12:36,480 --> 00:12:41,360
solutions when when multiple

00:12:39,279 --> 00:12:42,800
developers or multiple contributors come

00:12:41,360 --> 00:12:45,279
back with

00:12:42,800 --> 00:12:47,600
several solutions to the same problem

00:12:45,279 --> 00:12:51,120
how does a pmc decide

00:12:47,600 --> 00:12:51,120
which solution to accept

00:12:51,680 --> 00:12:56,000
well before we pretended and it's not

00:12:54,160 --> 00:12:58,240
true before we pretended

00:12:56,000 --> 00:12:59,680
that the value for one solution is

00:12:58,240 --> 00:13:01,600
universal that is

00:12:59,680 --> 00:13:02,800
if a if a contributor comes with a

00:13:01,600 --> 00:13:04,480
single solution

00:13:02,800 --> 00:13:06,560
the value of that solution is the same

00:13:04,480 --> 00:13:08,480
to that contributor as it is to all of

00:13:06,560 --> 00:13:10,959
the other contributors

00:13:08,480 --> 00:13:12,000
however there are cases in which that is

00:13:10,959 --> 00:13:14,079
not true

00:13:12,000 --> 00:13:15,600
so for example one contributor might be

00:13:14,079 --> 00:13:17,200
more interested in speed

00:13:15,600 --> 00:13:19,680
and another contributor might be more

00:13:17,200 --> 00:13:21,440
interested in customizability

00:13:19,680 --> 00:13:23,519
one contributor might be more interested

00:13:21,440 --> 00:13:25,040
in the stability of the project

00:13:23,519 --> 00:13:27,680
and another might be more interested in

00:13:25,040 --> 00:13:29,120
innovation and pushing the envelope

00:13:27,680 --> 00:13:31,120
somebody might be more interested in

00:13:29,120 --> 00:13:32,959
features another might be more

00:13:31,120 --> 00:13:35,040
interested in ease of use and

00:13:32,959 --> 00:13:38,079
oftentimes these things stand in

00:13:35,040 --> 00:13:41,440
conflict now we do try to find solutions

00:13:38,079 --> 00:13:42,720
in which uh in which both values can be

00:13:41,440 --> 00:13:44,560
advanced

00:13:42,720 --> 00:13:46,720
but it's not a perfect world and there

00:13:44,560 --> 00:13:48,000
are often decisions that we have to make

00:13:46,720 --> 00:13:51,440
based on values so how

00:13:48,000 --> 00:13:53,040
does the pmc decide well they can't

00:13:51,440 --> 00:13:55,040
maximize because

00:13:53,040 --> 00:13:56,720
different users will have different

00:13:55,040 --> 00:13:57,279
values and there are many things they

00:13:56,720 --> 00:14:00,320
could do

00:13:57,279 --> 00:14:03,040
so for example they might figure out

00:14:00,320 --> 00:14:03,920
this solution has negative value for

00:14:03,040 --> 00:14:06,800
some users

00:14:03,920 --> 00:14:07,600
so we'll strike that maybe because it

00:14:06,800 --> 00:14:10,720
creates api

00:14:07,600 --> 00:14:12,399
incompatibilities or they might say we

00:14:10,720 --> 00:14:15,120
look for the solution that has the

00:14:12,399 --> 00:14:16,800
the largest net social value that is it

00:14:15,120 --> 00:14:19,680
creates the most value for the largest

00:14:16,800 --> 00:14:19,680
number of users

00:14:20,399 --> 00:14:24,079
different pmcs are going to make that

00:14:22,000 --> 00:14:25,120
decision different ways and how they

00:14:24,079 --> 00:14:28,320
decide

00:14:25,120 --> 00:14:29,519
which which approach to take to that

00:14:28,320 --> 00:14:31,920
solution

00:14:29,519 --> 00:14:33,920
will be determined by who's on the pmc

00:14:31,920 --> 00:14:35,519
what values they have

00:14:33,920 --> 00:14:39,040
now that brings us back to the question

00:14:35,519 --> 00:14:39,040
of who is on the pmc

00:14:39,199 --> 00:14:44,079
as we noted in the previous slide

00:14:41,760 --> 00:14:46,320
sometimes the pnc has more

00:14:44,079 --> 00:14:48,240
or less individuals from a certain

00:14:46,320 --> 00:14:50,160
vendor and that might then

00:14:48,240 --> 00:14:52,560
make a difference into how this decision

00:14:50,160 --> 00:14:52,560
is made

00:14:53,920 --> 00:14:57,760
some evaluation strategies available as

00:14:56,480 --> 00:14:59,120
i mentioned earlier

00:14:57,760 --> 00:15:01,040
the architecture which produces the

00:14:59,120 --> 00:15:02,639
largest net value

00:15:01,040 --> 00:15:04,240
or the largest amount of value for

00:15:02,639 --> 00:15:05,600
potential users i'm not going to go

00:15:04,240 --> 00:15:08,800
through this again in too much detail

00:15:05,600 --> 00:15:08,800
but you can come back to it if you're

00:15:10,839 --> 00:15:15,519
interested

00:15:12,240 --> 00:15:16,000
so these decisions have consequences

00:15:15,519 --> 00:15:18,560
which

00:15:16,000 --> 00:15:19,920
option evaluation strategy a pnc prefers

00:15:18,560 --> 00:15:22,800
will also determine

00:15:19,920 --> 00:15:24,480
who uses the code and because it

00:15:22,800 --> 00:15:27,120
determines who uses the code it will

00:15:24,480 --> 00:15:28,399
determine who contributes to the code

00:15:27,120 --> 00:15:29,839
and because it determines who

00:15:28,399 --> 00:15:30,720
contributes to the code it will also

00:15:29,839 --> 00:15:33,519
determine

00:15:30,720 --> 00:15:36,240
who the pmc wants on their project it

00:15:33,519 --> 00:15:40,480
influences the entire community funnel

00:15:36,240 --> 00:15:42,800
into this project

00:15:40,480 --> 00:15:45,120
what else might a vendor what whether

00:15:42,800 --> 00:15:46,800
what other benefit might a vendor have

00:15:45,120 --> 00:15:50,399
from associating with an open source

00:15:46,800 --> 00:15:52,240
project well one is brand association

00:15:50,399 --> 00:15:53,839
this might be less interesting for

00:15:52,240 --> 00:15:55,440
composed products

00:15:53,839 --> 00:15:57,360
and add-ons but more interesting or

00:15:55,440 --> 00:16:00,720
useful for consultants

00:15:57,360 --> 00:16:02,160
or hosted offerings so what does brand

00:16:00,720 --> 00:16:03,839
association mean well there are right

00:16:02,160 --> 00:16:07,440
ways to do brand association

00:16:03,839 --> 00:16:08,560
for example a product a vendor can go

00:16:07,440 --> 00:16:11,040
and say

00:16:08,560 --> 00:16:11,600
this is powered by apache hadoop or

00:16:11,040 --> 00:16:14,000
apache

00:16:11,600 --> 00:16:15,839
cassandra or apache spark this is a

00:16:14,000 --> 00:16:18,880
product built on top of this

00:16:15,839 --> 00:16:19,680
or this is a an offering of a hosted

00:16:18,880 --> 00:16:22,959
version

00:16:19,680 --> 00:16:24,160
of an apache product not taking credit

00:16:22,959 --> 00:16:27,360
for it but saying

00:16:24,160 --> 00:16:29,920
we are offering this there's also a

00:16:27,360 --> 00:16:32,639
wrong way to do brand association

00:16:29,920 --> 00:16:35,519
so you could say for example we are the

00:16:32,639 --> 00:16:38,720
original developers of apache foo bar

00:16:35,519 --> 00:16:40,880
we did all the work really or this is a

00:16:38,720 --> 00:16:43,279
commercial distribution a professional

00:16:40,880 --> 00:16:44,720
distribution of apache fubar or even

00:16:43,279 --> 00:16:46,880
replace the apache

00:16:44,720 --> 00:16:49,600
with the vendor's name and say this is

00:16:46,880 --> 00:16:52,720
acme fubar

00:16:49,600 --> 00:16:54,720
all of these corrupt the the

00:16:52,720 --> 00:16:57,279
relationship between

00:16:54,720 --> 00:16:59,440
a community's brand and and that

00:16:57,279 --> 00:17:01,600
community

00:16:59,440 --> 00:17:03,279
the pmc is responsible for helping

00:17:01,600 --> 00:17:04,480
vendors to stay on the light side of the

00:17:03,279 --> 00:17:07,439
marketing force

00:17:04,480 --> 00:17:09,520
and not slip into these mistakes but

00:17:07,439 --> 00:17:11,520
whether or not a pmc

00:17:09,520 --> 00:17:13,439
executes in those responsibilities will

00:17:11,520 --> 00:17:16,400
depend on who's on the pmc

00:17:13,439 --> 00:17:16,400
and what they value

00:17:17,039 --> 00:17:22,880
another reason why a vendor might choose

00:17:20,640 --> 00:17:24,240
to participate in an open source project

00:17:22,880 --> 00:17:25,600
is because

00:17:24,240 --> 00:17:27,760
it gives them the opportunity to

00:17:25,600 --> 00:17:30,160
influence the community

00:17:27,760 --> 00:17:31,840
so why influence the community well we

00:17:30,160 --> 00:17:34,160
already determined that

00:17:31,840 --> 00:17:35,520
influencing the brand can be beneficial

00:17:34,160 --> 00:17:37,760
to a project

00:17:35,520 --> 00:17:38,799
well if you influence the community then

00:17:37,760 --> 00:17:40,720
you can also

00:17:38,799 --> 00:17:43,440
influence decisions about protecting the

00:17:40,720 --> 00:17:45,200
brand we already also determined that

00:17:43,440 --> 00:17:48,640
influencing the acceptance

00:17:45,200 --> 00:17:52,080
or the rejection of contributions

00:17:48,640 --> 00:17:54,080
can have value for a vendor so if you

00:17:52,080 --> 00:17:56,000
influence the community you can also

00:17:54,080 --> 00:17:59,280
influence decisions about accepting and

00:17:56,000 --> 00:17:59,280
rejecting contributions

00:17:59,360 --> 00:18:02,960
so if you can so those decisions about

00:18:01,520 --> 00:18:05,520
community composition have

00:18:02,960 --> 00:18:06,240
wide reaching consequences and this is

00:18:05,520 --> 00:18:09,520
why

00:18:06,240 --> 00:18:13,760
many projects or many many vendors try

00:18:09,520 --> 00:18:16,240
to get people into a pmc

00:18:13,760 --> 00:18:18,240
now what does that do it then makes it

00:18:16,240 --> 00:18:20,799
possible for the vendor to extract to

00:18:18,240 --> 00:18:22,960
produce more value hopefully for users

00:18:20,799 --> 00:18:24,320
and then to extract more value from the

00:18:22,960 --> 00:18:26,840
users

00:18:24,320 --> 00:18:29,840
and then pass that value on to the

00:18:26,840 --> 00:18:29,840
contributors

00:18:30,480 --> 00:18:34,799
in a vendor-neutral decision-making

00:18:32,720 --> 00:18:36,480
process the decisions here about

00:18:34,799 --> 00:18:39,520
community composition

00:18:36,480 --> 00:18:43,600
brands or about contributions are

00:18:39,520 --> 00:18:45,039
made based on the value to users

00:18:43,600 --> 00:18:47,039
this is the definition of vendor

00:18:45,039 --> 00:18:50,080
neutrality

00:18:47,039 --> 00:18:52,880
a vendor neutral open source project

00:18:50,080 --> 00:18:54,080
is one in which the community accepts or

00:18:52,880 --> 00:18:56,400
rejects

00:18:54,080 --> 00:18:59,039
proposed contributions and proposed

00:18:56,400 --> 00:19:01,440
changes in community composition

00:18:59,039 --> 00:19:02,160
based on the predictive value of those

00:19:01,440 --> 00:19:05,200
changes

00:19:02,160 --> 00:19:05,679
to the users rather than their predicted

00:19:05,200 --> 00:19:08,720
value

00:19:05,679 --> 00:19:11,160
to specific vendors

00:19:08,720 --> 00:19:13,520
vendor domination on the other hand

00:19:11,160 --> 00:19:17,360
[Music]

00:19:13,520 --> 00:19:20,240
replaces the value to users in that

00:19:17,360 --> 00:19:25,840
decision making process

00:19:20,240 --> 00:19:25,840
with the value to vendors

00:19:26,160 --> 00:19:31,120
in this case the vendors who have

00:19:29,120 --> 00:19:33,919
contributors on the pmc will be

00:19:31,120 --> 00:19:34,799
making decisions based solely on their

00:19:33,919 --> 00:19:36,720
advantage

00:19:34,799 --> 00:19:39,760
and not on the advantage to the users as

00:19:36,720 --> 00:19:42,880
a whole

00:19:39,760 --> 00:19:44,240
so as an example as to how vendors would

00:19:42,880 --> 00:19:47,039
would influence decisions about

00:19:44,240 --> 00:19:47,039
contributions

00:19:47,840 --> 00:19:51,200
a contributor submits a feature which

00:19:49,600 --> 00:19:52,799
competes with a feature in their like

00:19:51,200 --> 00:19:55,120
next release of a vendor's premium

00:19:52,799 --> 00:19:57,919
version the feature is never integrated

00:19:55,120 --> 00:20:00,559
and the contributor receives no feedback

00:19:57,919 --> 00:20:02,400
or a contributor submits a bug fix

00:20:00,559 --> 00:20:04,240
necessary to support hardware which

00:20:02,400 --> 00:20:07,120
competes with the hardware produced by a

00:20:04,240 --> 00:20:08,799
dominant vendor code reviewers employed

00:20:07,120 --> 00:20:10,799
by the dominant vendor

00:20:08,799 --> 00:20:13,600
nitpick minor points of style until the

00:20:10,799 --> 00:20:15,919
contributor abandons the submission

00:20:13,600 --> 00:20:18,240
so these would be negative examples

00:20:15,919 --> 00:20:19,360
neutrality means that proposed changes

00:20:18,240 --> 00:20:23,120
are evaluated

00:20:19,360 --> 00:20:27,280
based on the value to users

00:20:23,120 --> 00:20:27,280
as an example on branch

00:20:27,840 --> 00:20:31,120
a vendor might publish a free version of

00:20:30,240 --> 00:20:33,120
its product

00:20:31,120 --> 00:20:35,600
which contains upgrade hooks to a

00:20:33,120 --> 00:20:37,360
commercial version sold by the vendor

00:20:35,600 --> 00:20:39,840
and then calls it by the name of the

00:20:37,360 --> 00:20:40,960
open source project the pmc then ignores

00:20:39,840 --> 00:20:42,240
this

00:20:40,960 --> 00:20:44,960
this would be an example in which the

00:20:42,240 --> 00:20:46,720
pmc is not protecting the brand

00:20:44,960 --> 00:20:48,000
or let's say a vendor claims in its

00:20:46,720 --> 00:20:49,840
marketing materials that the core

00:20:48,000 --> 00:20:52,960
contributors for an open source project

00:20:49,840 --> 00:20:54,640
all work for them the pmc might even go

00:20:52,960 --> 00:20:57,760
so far as to publish supporting claims

00:20:54,640 --> 00:20:59,919
on the open source project's website

00:20:57,760 --> 00:21:02,240
these are all examples in which a vendor

00:20:59,919 --> 00:21:04,159
is dominating a project

00:21:02,240 --> 00:21:08,880
neutrality means that trademarks and

00:21:04,159 --> 00:21:08,880
brands are owned and enforced by the pmc

00:21:12,320 --> 00:21:15,440
and finally the community which

00:21:14,559 --> 00:21:18,799
influences

00:21:15,440 --> 00:21:18,799
the the other areas

00:21:18,880 --> 00:21:24,320
indirectly neutrality means that the pmc

00:21:22,400 --> 00:21:25,840
members represent the users who benefit

00:21:24,320 --> 00:21:27,520
from the project

00:21:25,840 --> 00:21:29,280
counter examples would be the pmc

00:21:27,520 --> 00:21:30,000
members vote to offer the role of

00:21:29,280 --> 00:21:31,760
committer

00:21:30,000 --> 00:21:33,120
to the new hire of a dominant vendor

00:21:31,760 --> 00:21:36,640
while ignoring other

00:21:33,120 --> 00:21:38,720
deserving contributors or the pmc

00:21:36,640 --> 00:21:40,480
defines promotable contributions to

00:21:38,720 --> 00:21:42,720
closely match the profile

00:21:40,480 --> 00:21:44,640
of employees of a dominant vendor this

00:21:42,720 --> 00:21:45,200
is one reason why i get very suspicious

00:21:44,640 --> 00:21:48,320
when

00:21:45,200 --> 00:21:50,320
when the pmcs start trying to define

00:21:48,320 --> 00:21:52,080
promotable contributions to the only

00:21:50,320 --> 00:21:54,480
code because this

00:21:52,080 --> 00:21:57,039
excludes people making contributions in

00:21:54,480 --> 00:22:02,240
the form of community organization

00:21:57,039 --> 00:22:02,240
that might be coming from other vendors

00:22:04,960 --> 00:22:10,159
so what are the results of vendor

00:22:06,799 --> 00:22:11,440
domination what are the consequences

00:22:10,159 --> 00:22:13,919
well one thing that could happen is

00:22:11,440 --> 00:22:14,480
people leave if people don't feel like

00:22:13,919 --> 00:22:16,960
their

00:22:14,480 --> 00:22:18,080
contributions are valued uh or even

00:22:16,960 --> 00:22:21,039
accepted

00:22:18,080 --> 00:22:22,320
then they will eventually give up or

00:22:21,039 --> 00:22:24,720
just not come

00:22:22,320 --> 00:22:26,400
if people look at a project and from the

00:22:24,720 --> 00:22:28,640
outside and say we don't believe that

00:22:26,400 --> 00:22:30,159
this project is vendor neutral

00:22:28,640 --> 00:22:32,400
then they might just never decide to

00:22:30,159 --> 00:22:35,520
take the risk of contributing code or

00:22:32,400 --> 00:22:35,520
trying to contribute code

00:22:36,960 --> 00:22:41,280
a project might fork so let's say vendor

00:22:39,679 --> 00:22:43,840
domination occurs after

00:22:41,280 --> 00:22:45,520
people have joined a project and they

00:22:43,840 --> 00:22:46,559
find that their contributions are not

00:22:45,520 --> 00:22:48,240
being accepted

00:22:46,559 --> 00:22:50,720
they might just fork the project and go

00:22:48,240 --> 00:22:50,720
elsewhere

00:22:51,280 --> 00:22:55,679
this can also happen now this isn't just

00:22:53,520 --> 00:22:58,880
a consequence of vendor domination

00:22:55,679 --> 00:23:00,720
this can also happen just because people

00:22:58,880 --> 00:23:02,960
have different values and

00:23:00,720 --> 00:23:04,080
need to go in different directions and

00:23:02,960 --> 00:23:07,120
that's okay

00:23:04,080 --> 00:23:10,000
however if if it's a

00:23:07,120 --> 00:23:11,679
minority or a minority value um that's

00:23:10,000 --> 00:23:12,240
dominating a project then the project

00:23:11,679 --> 00:23:15,200
fork

00:23:12,240 --> 00:23:16,799
can be harmful to the original home of

00:23:15,200 --> 00:23:19,280
the project the original project

00:23:16,799 --> 00:23:19,280
community

00:23:20,159 --> 00:23:24,960
and harmful means then that the net

00:23:22,400 --> 00:23:27,919
social benefit declines because

00:23:24,960 --> 00:23:29,039
people aren't collaborating anymore

00:23:27,919 --> 00:23:31,039
people aren't coming in

00:23:29,039 --> 00:23:33,039
and benefiting from the strong linked

00:23:31,039 --> 00:23:36,480
game in which everybody says hey

00:23:33,039 --> 00:23:38,960
i'll share yours you share mine

00:23:36,480 --> 00:23:41,679
and we all have more because people

00:23:38,960 --> 00:23:44,159
aren't working together anymore

00:23:41,679 --> 00:23:46,799
so how do we prevent vendor domination

00:23:44,159 --> 00:23:50,080
well first we have to identify it

00:23:46,799 --> 00:23:52,080
so how do we measure vendor domination

00:23:50,080 --> 00:23:53,760
if we look back at the model here and

00:23:52,080 --> 00:23:56,000
we'll determine that probably the

00:23:53,760 --> 00:23:57,600
easiest part of this to measure

00:23:56,000 --> 00:23:59,600
is decisions about accepting and

00:23:57,600 --> 00:24:01,440
rejecting contributions

00:23:59,600 --> 00:24:03,919
that's because these are the decisions

00:24:01,440 --> 00:24:05,919
that are made the most frequently

00:24:03,919 --> 00:24:08,400
hundreds of decisions per month

00:24:05,919 --> 00:24:08,960
possibly even hundreds per week are made

00:24:08,400 --> 00:24:12,080
and

00:24:08,960 --> 00:24:14,159
the data about who is making these

00:24:12,080 --> 00:24:15,200
these contributions and who is making

00:24:14,159 --> 00:24:18,799
the decisions

00:24:15,200 --> 00:24:21,840
is readily available

00:24:18,799 --> 00:24:24,080
so what data do we need

00:24:21,840 --> 00:24:27,039
one thing we need is the pull request

00:24:24,080 --> 00:24:30,240
data this is available via github

00:24:27,039 --> 00:24:30,960
we also need the pmc membership the pmc

00:24:30,240 --> 00:24:33,279
membership

00:24:30,960 --> 00:24:35,039
list is available via the apache

00:24:33,279 --> 00:24:36,559
software foundation website in the case

00:24:35,039 --> 00:24:38,880
of apache projects

00:24:36,559 --> 00:24:40,000
and we need employment data and

00:24:38,880 --> 00:24:42,159
employment data is

00:24:40,000 --> 00:24:44,159
often available via linkedin certainly

00:24:42,159 --> 00:24:48,320
often enough to cover

00:24:44,159 --> 00:24:48,320
80 to 90 of the contributors

00:24:48,880 --> 00:24:53,440
now from this data we can then derive is

00:24:51,200 --> 00:24:54,000
a vendor well represented on the pmc and

00:24:53,440 --> 00:24:57,200
for this

00:24:54,000 --> 00:25:00,320
i've defined well represented as uh this

00:24:57,200 --> 00:25:01,919
vendor has three members or more

00:25:00,320 --> 00:25:03,840
there's also a possibility that a vendor

00:25:01,919 --> 00:25:05,360
might be majority represented on the pmc

00:25:03,840 --> 00:25:06,080
although i didn't study any cases in

00:25:05,360 --> 00:25:09,039
which that was

00:25:06,080 --> 00:25:11,360
that was true there's just represented

00:25:09,039 --> 00:25:13,600
which means one or two

00:25:11,360 --> 00:25:15,600
pmc members associated with a particular

00:25:13,600 --> 00:25:16,080
vendor there's not represented which

00:25:15,600 --> 00:25:18,080
means

00:25:16,080 --> 00:25:19,840
none and then there's there's people

00:25:18,080 --> 00:25:23,120
whose vendor who's

00:25:19,840 --> 00:25:26,480
whose employer is unknown

00:25:23,120 --> 00:25:28,320
so is a contribution from a from an

00:25:26,480 --> 00:25:29,840
employee of a well-represented vendor we

00:25:28,320 --> 00:25:31,200
then look at the pull request

00:25:29,840 --> 00:25:33,120
we correlate it to the person who

00:25:31,200 --> 00:25:35,279
submitted it and correlate

00:25:33,120 --> 00:25:36,640
that to the to their employer on

00:25:35,279 --> 00:25:39,679
linkedin

00:25:36,640 --> 00:25:41,200
and uh what is the correlation between

00:25:39,679 --> 00:25:42,960
pull request acceptance and vendor

00:25:41,200 --> 00:25:45,679
representation

00:25:42,960 --> 00:25:46,320
so if you look at the url there i wrote

00:25:45,679 --> 00:25:48,799
a first

00:25:46,320 --> 00:25:50,320
fairly primitive this is first draft

00:25:48,799 --> 00:25:52,480
primitive tool to

00:25:50,320 --> 00:25:54,480
draw down the pull request data from

00:25:52,480 --> 00:25:57,600
github

00:25:54,480 --> 00:26:00,720
and match it up with the pmc data and

00:25:57,600 --> 00:26:02,000
i put in the the footwork to go to two

00:26:00,720 --> 00:26:04,640
different projects

00:26:02,000 --> 00:26:06,799
and pull down their pmc membership and

00:26:04,640 --> 00:26:08,400
the employers of all of the people who

00:26:06,799 --> 00:26:10,320
who submitted pull requests within a

00:26:08,400 --> 00:26:13,760
certain time period and

00:26:10,320 --> 00:26:13,760
all of the people on the pmc

00:26:14,559 --> 00:26:18,159
so the first example here is apache

00:26:16,880 --> 00:26:20,320
airflow

00:26:18,159 --> 00:26:22,000
if we look at this we see that there's a

00:26:20,320 --> 00:26:25,440
negative correlation between

00:26:22,000 --> 00:26:27,279
people whose employer status is unknown

00:26:25,440 --> 00:26:28,880
and whether or not their contribution

00:26:27,279 --> 00:26:30,159
was accepted

00:26:28,880 --> 00:26:31,919
and we see that there's a slight

00:26:30,159 --> 00:26:32,480
positive correlation between people

00:26:31,919 --> 00:26:36,159
whose

00:26:32,480 --> 00:26:39,200
employer status is well represented and

00:26:36,159 --> 00:26:40,880
their their submission was accepted now

00:26:39,200 --> 00:26:42,799
what we don't see in this particular

00:26:40,880 --> 00:26:46,080
date is any starvations

00:26:42,799 --> 00:26:50,080
so clearly apaches so a starvation is

00:26:46,080 --> 00:26:52,640
when a contribution is left

00:26:50,080 --> 00:26:53,440
open for a month or more and the reason

00:26:52,640 --> 00:26:55,760
we don't see any

00:26:53,440 --> 00:26:57,520
any starvations here is because the time

00:26:55,760 --> 00:27:01,440
period that i was able to

00:26:57,520 --> 00:27:04,559
to capture was shorter than a month

00:27:01,440 --> 00:27:08,240
why was it shorter than a month well

00:27:04,559 --> 00:27:10,000
in order to keep the data about employer

00:27:08,240 --> 00:27:13,120
and community stable

00:27:10,000 --> 00:27:15,279
i used the period from the last

00:27:13,120 --> 00:27:17,120
community change the last pmc member

00:27:15,279 --> 00:27:18,320
admission to the time period when i

00:27:17,120 --> 00:27:20,559
pulled down the data and i pulled the

00:27:18,320 --> 00:27:23,840
data down on july 29th so

00:27:20,559 --> 00:27:25,520
it was like three weeks which means that

00:27:23,840 --> 00:27:28,080
i couldn't study starvations in this

00:27:25,520 --> 00:27:28,080
dataset

00:27:28,640 --> 00:27:32,000
now what we see also is that people who

00:27:31,679 --> 00:27:34,960
are

00:27:32,000 --> 00:27:36,399
well represented are less likely to have

00:27:34,960 --> 00:27:38,640
have pull requests that remain

00:27:36,399 --> 00:27:40,799
open they're also less likely to have

00:27:38,640 --> 00:27:42,640
pull requests get rejected

00:27:40,799 --> 00:27:44,000
um people who are represented it seems

00:27:42,640 --> 00:27:47,360
to be about even

00:27:44,000 --> 00:27:49,600
as to whether like roughly as to whether

00:27:47,360 --> 00:27:53,039
or not their pull requests are accepted

00:27:49,600 --> 00:27:54,240
um or rejected and people who are not

00:27:53,039 --> 00:27:57,120
represented

00:27:54,240 --> 00:27:58,720
uh whose employer is not representative

00:27:57,120 --> 00:28:00,159
their pull request is more likely to

00:27:58,720 --> 00:28:01,919
still be open

00:28:00,159 --> 00:28:03,760
it's also more likely to be rejected and

00:28:01,919 --> 00:28:05,520
there's a negative correlation to

00:28:03,760 --> 00:28:08,880
acceptance

00:28:05,520 --> 00:28:10,799
so these are indications and uh

00:28:08,880 --> 00:28:12,640
gender domination versus vendor

00:28:10,799 --> 00:28:13,760
neutrality is not a black or white it's

00:28:12,640 --> 00:28:16,799
a continuum

00:28:13,760 --> 00:28:18,960
so these are indications that

00:28:16,799 --> 00:28:20,000
apache airflow is somewhere on the the

00:28:18,960 --> 00:28:21,919
continuum

00:28:20,000 --> 00:28:25,039
between vendor domination and vendor

00:28:21,919 --> 00:28:26,399
neutrality it's not perfectly neutral

00:28:25,039 --> 00:28:28,399
none of these projects are going to be

00:28:26,399 --> 00:28:30,399
perfectly neutral

00:28:28,399 --> 00:28:31,679
so apache cassandra is one where i was

00:28:30,399 --> 00:28:34,480
able to capture a slightly

00:28:31,679 --> 00:28:35,840
longer period and here we'll see because

00:28:34,480 --> 00:28:37,760
i captured a longer period we'll see

00:28:35,840 --> 00:28:40,480
some starvations

00:28:37,760 --> 00:28:44,640
um in this case it was 128 pull requests

00:28:40,480 --> 00:28:47,039
between april 29th and july 29th

00:28:44,640 --> 00:28:48,320
for and you can see i'm not going to

00:28:47,039 --> 00:28:49,679
read the data out loud to you but you

00:28:48,320 --> 00:28:52,000
can see that the data are

00:28:49,679 --> 00:28:54,159
rather similar to apache airflow there

00:28:52,000 --> 00:28:57,039
are correlations between

00:28:54,159 --> 00:28:57,360
people being unrepresented and having

00:28:57,039 --> 00:29:00,880
their

00:28:57,360 --> 00:29:03,520
their contributions starved

00:29:00,880 --> 00:29:04,880
or well-represented and in this case

00:29:03,520 --> 00:29:06,480
actually the correlations are somewhat

00:29:04,880 --> 00:29:07,760
smaller which is an indication that

00:29:06,480 --> 00:29:10,240
apache cassandra is

00:29:07,760 --> 00:29:11,679
currently possibly more vendor-neutral

00:29:10,240 --> 00:29:12,000
than apache airflow which would make

00:29:11,679 --> 00:29:13,600
sense

00:29:12,000 --> 00:29:15,200
because apache airflow is a somewhat

00:29:13,600 --> 00:29:17,600
newer project and cassandra is an older

00:29:15,200 --> 00:29:17,600
project

00:29:18,399 --> 00:29:21,840
now one thing that's interesting if you

00:29:20,159 --> 00:29:23,840
look at this data is that apache

00:29:21,840 --> 00:29:24,720
cassandra if you just look at the number

00:29:23,840 --> 00:29:27,120
of people

00:29:24,720 --> 00:29:28,559
working for a certain employer apache

00:29:27,120 --> 00:29:29,279
cassandra looks like it's more vendor

00:29:28,559 --> 00:29:30,799
dominated

00:29:29,279 --> 00:29:33,600
there's lots of people at a cassandra

00:29:30,799 --> 00:29:35,440
working for data stacks in apple

00:29:33,600 --> 00:29:37,120
but if you then start looking at the way

00:29:35,440 --> 00:29:38,559
this seems to affect

00:29:37,120 --> 00:29:40,720
how pull requests are accepted or

00:29:38,559 --> 00:29:44,080
rejected apache cassandra actually looks

00:29:40,720 --> 00:29:47,520
more neutral so it's important to notice

00:29:44,080 --> 00:29:50,640
that the number of people on a pmc

00:29:47,520 --> 00:29:52,840
from a certain vendor is not alone an

00:29:50,640 --> 00:29:55,679
indicator of vendor domination or vendor

00:29:52,840 --> 00:29:57,600
neutrality

00:29:55,679 --> 00:29:59,520
so what are the next steps well it would

00:29:57,600 --> 00:30:00,640
be great to draw some comparison data

00:29:59,520 --> 00:30:03,200
especially

00:30:00,640 --> 00:30:04,559
apache cassandra had an incident in 2016

00:30:03,200 --> 00:30:06,559
was judged by the

00:30:04,559 --> 00:30:08,080
board to be vendor dominated it would be

00:30:06,559 --> 00:30:08,960
good to go and pull down the data from

00:30:08,080 --> 00:30:10,480
that period

00:30:08,960 --> 00:30:12,480
and compare it to the data from this

00:30:10,480 --> 00:30:14,640
period and see if

00:30:12,480 --> 00:30:16,720
this indicates vendor domination as a

00:30:14,640 --> 00:30:18,399
way to test this measure

00:30:16,720 --> 00:30:20,880
we could also try out pull request

00:30:18,399 --> 00:30:23,520
weightings so for example

00:30:20,880 --> 00:30:25,360
to wait a pull request by the the code

00:30:23,520 --> 00:30:26,960
line count

00:30:25,360 --> 00:30:28,559
currently i'm just doing one pull

00:30:26,960 --> 00:30:30,240
request has the same value as any other

00:30:28,559 --> 00:30:31,919
pull request whether it's two lines or

00:30:30,240 --> 00:30:33,520
200 lines

00:30:31,919 --> 00:30:35,200
um it would also be great to draw data

00:30:33,520 --> 00:30:36,399
from our projects it does require a lot

00:30:35,200 --> 00:30:38,960
of footwork to

00:30:36,399 --> 00:30:40,880
pull down the vendor for for each of the

00:30:38,960 --> 00:30:42,640
contributors

00:30:40,880 --> 00:30:44,640
and then it would be great to also test

00:30:42,640 --> 00:30:46,320
the correlation between current

00:30:44,640 --> 00:30:47,760
project community and newly announced

00:30:46,320 --> 00:30:50,880
pmc members so

00:30:47,760 --> 00:30:52,880
maybe pmc members are more likely

00:30:50,880 --> 00:30:54,320
new pmc members are more likely to come

00:30:52,880 --> 00:30:56,640
from

00:30:54,320 --> 00:31:00,559
vendors who are already participating

00:30:56,640 --> 00:31:00,559
via other pmc members in the project

00:31:01,120 --> 00:31:07,919
so that has me coming up on the end here

00:31:04,399 --> 00:31:11,679
does anybody have any questions

00:31:07,919 --> 00:31:11,679
let me look through the chat

00:31:14,000 --> 00:31:18,240
so lawrence architectural influence is

00:31:16,159 --> 00:31:18,960
why companies get involved with the cncf

00:31:18,240 --> 00:31:22,000
projects

00:31:18,960 --> 00:31:24,640
yes definitely what architectural

00:31:22,000 --> 00:31:26,559
influence companies

00:31:24,640 --> 00:31:29,279
see i don't think that's question

00:31:26,559 --> 00:31:29,279
directed at me

00:31:29,519 --> 00:31:33,200
tactically some companies believe they

00:31:31,120 --> 00:31:35,840
can

00:31:33,200 --> 00:31:37,840
can exclude competitors by using the

00:31:35,840 --> 00:31:40,880
cloud native

00:31:37,840 --> 00:31:40,880
computing foundation

00:31:42,399 --> 00:31:46,000
have you talked to the people involved

00:31:43,760 --> 00:31:47,519
with chaos yes but not in depth

00:31:46,000 --> 00:31:49,120
actually this would be something i i

00:31:47,519 --> 00:31:52,559
would love to do and connect up with

00:31:49,120 --> 00:31:52,559
them because they have more data

00:31:54,000 --> 00:31:58,080
and i rich points out that this is

00:31:56,240 --> 00:32:00,480
related to what kibble's doing

00:31:58,080 --> 00:32:01,440
uh yes uh i'm actually a subscriber to

00:32:00,480 --> 00:32:03,600
the kibble list

00:32:01,440 --> 00:32:05,600
i wasn't this is this is really basic

00:32:03,600 --> 00:32:07,279
compared to what cable's doing i'm

00:32:05,600 --> 00:32:09,279
was working more on a theoretical level

00:32:07,279 --> 00:32:11,039
than on than on the data level but

00:32:09,279 --> 00:32:15,600
moving into the analysis phase it really

00:32:11,039 --> 00:32:19,279
should be drawn into kibble

00:32:15,600 --> 00:32:19,279
oh and sharon asked the same things

00:32:19,600 --> 00:32:32,960
so any other questions

00:32:29,279 --> 00:32:32,960
all right then i'm done a little early

00:32:35,440 --> 00:32:40,000
oh wait thomas has another question

00:32:38,240 --> 00:32:40,480
should we take into account correlation

00:32:40,000 --> 00:32:42,960
between

00:32:40,480 --> 00:32:44,320
quality of the pr well that's a good

00:32:42,960 --> 00:32:45,360
question how are we going to judge

00:32:44,320 --> 00:32:48,240
quality of the pr

00:32:45,360 --> 00:32:48,640
i was trying to stay away from things

00:32:48,240 --> 00:32:51,840
that

00:32:48,640 --> 00:32:54,880
are um that are not objective from so so

00:32:51,840 --> 00:32:56,559
the quality of a pr might be

00:32:54,880 --> 00:32:58,640
see lawrence says there are ways to do

00:32:56,559 --> 00:32:58,640
it

00:32:58,720 --> 00:33:02,320
but you don't want to try all right

00:33:06,880 --> 00:33:11,679
yeah all right so if you guys want to

00:33:09,279 --> 00:33:14,080
continue the conversation i will be in

00:33:11,679 --> 00:33:17,120
the community channel in slack

00:33:14,080 --> 00:33:20,159
and thank you very much uh

00:33:17,120 --> 00:33:25,840
i very much enjoyed presenting to you

00:33:20,159 --> 00:33:25,840
and have a great day

00:33:36,960 --> 00:33:39,039

YouTube URL: https://www.youtube.com/watch?v=C3XbrZWGn4E


