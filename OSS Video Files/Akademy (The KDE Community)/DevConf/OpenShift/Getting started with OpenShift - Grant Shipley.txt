Title: Getting started with OpenShift - Grant Shipley
Publication date: 2016-02-12
Playlist: OpenShift
Description: 
	Get started with OpenShift! In this workshop Grant is going to walk you through deploying application and containers using OpenShift. You will be using Docker containers, Source To Image (S2I) and other tools. This is an introductory workshop, you do not need any knowledge of OpenShift. Laptops required!
Captions: 
	00:00:00,020 --> 00:00:03,020
ok

00:00:35,820 --> 00:00:39,660
some guys done menu

00:00:59,510 --> 00:01:03,290
did you buy the pillory

00:01:05,940 --> 00:01:09,350
until they control

00:01:15,869 --> 00:01:18,869
varsity

00:02:04,710 --> 00:02:08,280
that will make her leave

00:02:12,870 --> 00:02:16,680
hey listen

00:02:26,170 --> 00:02:51,830
alright Tom gets card all right mrs. o

00:02:48,670 --> 00:02:58,100
welcome to getting started with

00:02:51,830 --> 00:03:06,550
openshift I am frantically I work on a

00:02:58,100 --> 00:03:09,740
open 15 I mainly manage the developer

00:03:06,550 --> 00:03:14,210
the field marketing and open shift

00:03:09,740 --> 00:03:16,880
common community but I used to be a

00:03:14,210 --> 00:03:18,830
software engineer for many years I was a

00:03:16,880 --> 00:03:21,170
principal software in here that have

00:03:18,830 --> 00:03:23,780
been here about just over 10 years

00:03:21,170 --> 00:03:27,380
something like that how many people have

00:03:23,780 --> 00:03:32,180
actually used open ship I mean people

00:03:27,380 --> 00:03:35,240
have used open shift three before I mean

00:03:32,180 --> 00:03:40,700
people have used doctor before okay

00:03:35,240 --> 00:03:43,100
there we go how about rocket no no

00:03:40,700 --> 00:03:49,820
rocket doctors dead rockets the new

00:03:43,100 --> 00:03:53,530
hutton by on SpaceX so which one rocket

00:03:49,820 --> 00:03:56,120
is core OS is so rock or core OS got

00:03:53,530 --> 00:03:59,000
angry with docker just like everyone

00:03:56,120 --> 00:04:01,220
else in the world and so they created

00:03:59,000 --> 00:04:07,090
their own container system called rocket

00:04:01,220 --> 00:04:10,700
rkt that actually aligns more with what

00:04:07,090 --> 00:04:14,860
Red Hat's trying to do and so they

00:04:10,700 --> 00:04:17,930
released version 1.0 a couple days ago

00:04:14,860 --> 00:04:20,870
so it's just a competing container

00:04:17,930 --> 00:04:22,790
format it probably won't ever take off

00:04:20,870 --> 00:04:25,310
but it's kind of cool if you like lying

00:04:22,790 --> 00:04:28,850
around stuff

00:04:25,310 --> 00:04:30,830
alright so I'm just going to give a few

00:04:28,850 --> 00:04:32,450
slides at the beginning and then most of

00:04:30,830 --> 00:04:36,350
this morning is actually going to be

00:04:32,450 --> 00:04:38,540
hands-on stuff okay i have a lab that

00:04:36,350 --> 00:04:41,660
will work through so if you have your

00:04:38,540 --> 00:04:43,790
own laptop it's good just to run through

00:04:41,660 --> 00:04:48,380
it i created user accounts for everyone

00:04:43,790 --> 00:04:51,260
on an open shift three instance if I

00:04:48,380 --> 00:04:52,730
talk too fast let me know but give you

00:04:51,260 --> 00:04:56,480
some background on what we're trying to

00:04:52,730 --> 00:04:58,970
do with open chip three is you guys have

00:04:56,480 --> 00:05:02,030
probably all seen this but the world has

00:04:58,970 --> 00:05:04,280
been changing especially in the last 15

00:05:02,030 --> 00:05:08,120
years we're going through one of the

00:05:04,280 --> 00:05:12,470
most disruptive times and the human race

00:05:08,120 --> 00:05:15,650
believe it or not okay more techno

00:05:12,470 --> 00:05:18,919
technology is changing everything about

00:05:15,650 --> 00:05:22,240
our lives okay more so than any other

00:05:18,919 --> 00:05:25,729
thing in the past except maybe fire and

00:05:22,240 --> 00:05:28,280
perhaps the will I don't know anything

00:05:25,729 --> 00:05:33,800
else you guys can think of that has

00:05:28,280 --> 00:05:35,600
changed population so much all right so

00:05:33,800 --> 00:05:38,979
just to illustrate this this is a

00:05:35,600 --> 00:05:42,669
picture from 2005 it's a group of people

00:05:38,979 --> 00:05:45,260
and you can see this is ten years ago

00:05:42,669 --> 00:05:47,570
just over ten years ago what's

00:05:45,260 --> 00:05:51,620
interesting about this picture is this

00:05:47,570 --> 00:05:54,080
guy down here as a flip phone you guys

00:05:51,620 --> 00:05:57,250
remember these I don't know what we did

00:05:54,080 --> 00:05:59,479
on flip phones I guess we called people

00:05:57,250 --> 00:06:03,050
imagine that talking to people on the

00:05:59,479 --> 00:06:05,630
phone I used to when I had a flip phone

00:06:03,050 --> 00:06:07,370
somebody would text me you know you'd

00:06:05,630 --> 00:06:09,110
have to hit the two button three times

00:06:07,370 --> 00:06:11,270
to get to see or whatever you guys

00:06:09,110 --> 00:06:12,740
remember this right and someone who

00:06:11,270 --> 00:06:14,990
would text me an appeal what the

00:06:12,740 --> 00:06:16,729
are you doing don't text me like just

00:06:14,990 --> 00:06:19,940
call me if you want to talk to me and

00:06:16,729 --> 00:06:22,280
now if someone calls me I reject the

00:06:19,940 --> 00:06:23,139
call and say why don't you just text me

00:06:22,280 --> 00:06:26,710
I

00:06:23,139 --> 00:06:29,169
to you and so things are changed right

00:06:26,710 --> 00:06:30,849
here's another one and up here's another

00:06:29,169 --> 00:06:31,990
one I have no idea what you're doing on

00:06:30,849 --> 00:06:35,199
these things because it looks like

00:06:31,990 --> 00:06:37,389
they're taking a picture maybe I don't

00:06:35,199 --> 00:06:39,009
know she's got our hand on the middle

00:06:37,389 --> 00:06:42,879
and none of them so let's fast forward

00:06:39,009 --> 00:06:47,289
eight years to 2013 this is what the

00:06:42,879 --> 00:06:50,110
scene looks like and so everyone is

00:06:47,289 --> 00:06:53,520
using these connected devices now and

00:06:50,110 --> 00:06:58,659
living their life through their screen

00:06:53,520 --> 00:07:00,400
my kids play soccer and they're on teams

00:06:58,659 --> 00:07:03,009
with soccer and I go and I watch their

00:07:00,400 --> 00:07:04,659
soccer games on the sidelines and I just

00:07:03,009 --> 00:07:05,800
turn around I look at all the parents

00:07:04,659 --> 00:07:07,930
and they're watching the game through

00:07:05,800 --> 00:07:09,490
their phone and it drives me

00:07:07,930 --> 00:07:12,490
crazy right i just put your phone down

00:07:09,490 --> 00:07:15,789
and watch the game but that's kind of

00:07:12,490 --> 00:07:18,279
the world we live in now this guy this

00:07:15,789 --> 00:07:21,339
guy he's even got a tablet out he's

00:07:18,279 --> 00:07:22,900
pretty cool right and so so things are

00:07:21,339 --> 00:07:26,699
changing we're going through a digital

00:07:22,900 --> 00:07:29,969
disruption in the entire world now and

00:07:26,699 --> 00:07:32,229
today you guys are pricing this but the

00:07:29,969 --> 00:07:34,180
maybe not so much in check I don't know

00:07:32,229 --> 00:07:37,089
if you guys have this or not but the

00:07:34,180 --> 00:07:42,310
world's largest taxi provider doesn't

00:07:37,089 --> 00:07:45,520
actually own any taxis who's that uber

00:07:42,310 --> 00:07:49,210
that's right the world's largest media

00:07:45,520 --> 00:07:52,659
company today doesn't actually create or

00:07:49,210 --> 00:07:55,089
own content who would that be with

00:07:52,659 --> 00:07:57,039
facebook that's exactly right but I have

00:07:55,089 --> 00:07:59,439
prizes mama not giving up prizes I

00:07:57,039 --> 00:08:01,779
should get some fresh stuff these things

00:07:59,439 --> 00:08:07,180
are pretty cool I said I don't know

00:08:01,779 --> 00:08:12,629
where they are your little so they got

00:08:07,180 --> 00:08:16,120
to be cool what is it hey Jimmy key

00:08:12,629 --> 00:08:19,419
that's a USP grab this is not gonna

00:08:16,120 --> 00:08:22,180
explode is pretty good are you running

00:08:19,419 --> 00:08:24,680
windows yes I'm then it's loaded with

00:08:22,180 --> 00:08:27,169
viruses for you

00:08:24,680 --> 00:08:31,250
you're very back to that all right so it

00:08:27,169 --> 00:08:34,399
is facebook yeah I don't think you are

00:08:31,250 --> 00:08:36,649
supposed to answer questions because

00:08:34,399 --> 00:08:39,890
they are for the worship day contains

00:08:36,649 --> 00:08:44,120
the images but you have scars there is

00:08:39,890 --> 00:08:50,540
that what it is giving her a bad do we

00:08:44,120 --> 00:08:57,950
have everything on the images healthy ah

00:08:50,540 --> 00:08:59,540
nice cars there we go it is well thank

00:08:57,950 --> 00:09:04,630
you everybody would have screwed up

00:08:59,540 --> 00:09:07,850
someone's workshop later today all right

00:09:04,630 --> 00:09:11,870
the world's most valuable retailer

00:09:07,850 --> 00:09:17,930
doesn't actually own the products they

00:09:11,870 --> 00:09:20,390
sell whose f who nope amazon actually

00:09:17,930 --> 00:09:26,839
owns and have warehouses of all others

00:09:20,390 --> 00:09:28,910
ebay nope Alibaba from China is a bigger

00:09:26,839 --> 00:09:33,670
than ebay it is bigger than ebay and

00:09:28,910 --> 00:09:35,839
amazon really yep the world's largest

00:09:33,670 --> 00:09:41,410
accommodation provider doesn't actually

00:09:35,839 --> 00:09:47,630
own any real estate anyone know this one

00:09:41,410 --> 00:09:52,279
that's right was that Li Li Ching yep

00:09:47,630 --> 00:09:55,040
Airbnb 61 and so we are going through

00:09:52,279 --> 00:10:00,520
this digital disruption where all of

00:09:55,040 --> 00:10:03,920
these traditional industries are getting

00:10:00,520 --> 00:10:06,290
disrupted by software companies so the

00:10:03,920 --> 00:10:10,610
price are you guys familiar what a taxi

00:10:06,290 --> 00:10:12,890
medallion is ok so to drive a taxi in

00:10:10,610 --> 00:10:16,700
say New York City you have to buy this

00:10:12,890 --> 00:10:19,310
medallion that hangs from your mirror

00:10:16,700 --> 00:10:21,740
that lets you know you're certified taxi

00:10:19,310 --> 00:10:24,920
drivers and the price of those since

00:10:21,740 --> 00:10:26,360
uber has came on the scene has been

00:10:24,920 --> 00:10:28,940
reduced I think they used to be a

00:10:26,360 --> 00:10:29,730
million dollars just to drive a taxi

00:10:28,940 --> 00:10:31,709
right

00:10:29,730 --> 00:10:33,600
really and then you pay it off over time

00:10:31,709 --> 00:10:35,870
so you don't have to pay the money up

00:10:33,600 --> 00:10:38,639
front but those have reduced in price

00:10:35,870 --> 00:10:42,240
dramatically until software companies

00:10:38,639 --> 00:10:44,310
are able to compete in any industry just

00:10:42,240 --> 00:10:47,850
with a few guys who have this great idea

00:10:44,310 --> 00:10:49,470
and can develop software faster than

00:10:47,850 --> 00:10:53,699
traditional enterprises how many people

00:10:49,470 --> 00:10:55,860
work at Red Hat do you feel like

00:10:53,699 --> 00:10:57,750
sometimes it takes us forever to get

00:10:55,860 --> 00:11:00,000
something out to production after it's

00:10:57,750 --> 00:11:02,760
coated like we struggle with this as

00:11:00,000 --> 00:11:05,250
well when I used to manage IT at Red Hat

00:11:02,760 --> 00:11:07,980
if we wanted to update the website it

00:11:05,250 --> 00:11:10,079
would literally take us from code finish

00:11:07,980 --> 00:11:12,240
about two and a half to three months to

00:11:10,079 --> 00:11:14,790
actually get it out live just because of

00:11:12,240 --> 00:11:17,610
all the process of that all this stuff

00:11:14,790 --> 00:11:18,899
that large companies do and so a lot of

00:11:17,610 --> 00:11:21,089
large companies are being disrupted

00:11:18,899 --> 00:11:22,860
because they can't compete with the

00:11:21,089 --> 00:11:26,279
speed at which smaller companies can

00:11:22,860 --> 00:11:28,350
release things to production and so what

00:11:26,279 --> 00:11:30,860
these large companies are saying now or

00:11:28,350 --> 00:11:32,699
believing which is not true is that

00:11:30,860 --> 00:11:35,220
containers are going to solve all of

00:11:32,699 --> 00:11:37,260
their problems all we have to do is

00:11:35,220 --> 00:11:38,940
start using docker containers and

00:11:37,260 --> 00:11:41,760
everything is magically going to be

00:11:38,940 --> 00:11:46,170
better well it's not right it's doctor

00:11:41,760 --> 00:11:51,300
and containers are just a tool and they

00:11:46,170 --> 00:11:53,880
will help you deploy software faster but

00:11:51,300 --> 00:11:57,180
the problem comes in with the

00:11:53,880 --> 00:12:00,810
orchestration of this container right

00:11:57,180 --> 00:12:04,230
and so what we see and what I see a lot

00:12:00,810 --> 00:12:07,769
is a group of developers learn docker

00:12:04,230 --> 00:12:09,630
and they understand the power of it but

00:12:07,769 --> 00:12:11,430
then they start to realize they need to

00:12:09,630 --> 00:12:13,649
actually deploy these containers into

00:12:11,430 --> 00:12:15,750
production and so they begin to develop

00:12:13,649 --> 00:12:18,480
their own container orchestration system

00:12:15,750 --> 00:12:21,029
okay the result of that is their

00:12:18,480 --> 00:12:24,810
container does get deployed out to

00:12:21,029 --> 00:12:26,940
production right but their data center

00:12:24,810 --> 00:12:28,829
end up kind of looking like this if

00:12:26,940 --> 00:12:30,810
container is thrown around everywhere

00:12:28,829 --> 00:12:33,209
they're hard to manage they don't have

00:12:30,810 --> 00:12:35,160
visibility into them they don't know how

00:12:33,209 --> 00:12:37,709
long the containers been running or what

00:12:35,160 --> 00:12:41,050
it's used for where is that picture from

00:12:37,709 --> 00:12:43,180
this one not only this one

00:12:41,050 --> 00:12:45,370
I have no idea I stole it from the

00:12:43,180 --> 00:12:51,399
internet wow that's my pictures from the

00:12:45,370 --> 00:12:53,019
internet and so you know eventually if

00:12:51,399 --> 00:12:55,240
you're developing your own orchestration

00:12:53,019 --> 00:12:57,670
system there's a lot of really smart

00:12:55,240 --> 00:13:00,070
engineers out there who can do this

00:12:57,670 --> 00:13:03,820
inside their company and get their

00:13:00,070 --> 00:13:05,649
containers deployed correctly but it's

00:13:03,820 --> 00:13:08,950
not their core competency right there's

00:13:05,649 --> 00:13:12,070
no need for us as an industry to write

00:13:08,950 --> 00:13:14,440
our own custom orchestration engines

00:13:12,070 --> 00:13:16,240
when some you know industry standards

00:13:14,440 --> 00:13:18,579
out there exist and so what I see with

00:13:16,240 --> 00:13:20,649
companies who develop their own is their

00:13:18,579 --> 00:13:24,130
infrastructure eventually reaches this

00:13:20,649 --> 00:13:25,720
tipping point right to where they deploy

00:13:24,130 --> 00:13:27,130
all of their containers and orchestrate

00:13:25,720 --> 00:13:32,380
them to their environment but they lose

00:13:27,130 --> 00:13:35,140
control at some point until what we

00:13:32,380 --> 00:13:37,660
wanted to do on open ship is partner

00:13:35,140 --> 00:13:40,620
with Google on the Cooper Nettie's

00:13:37,660 --> 00:13:43,540
project which is their orchestration

00:13:40,620 --> 00:13:46,270
project that they created and so on

00:13:43,540 --> 00:13:48,310
openshift we actually contribute heavily

00:13:46,270 --> 00:13:52,270
to the kubernetes project to their goal

00:13:48,310 --> 00:13:55,870
is to develop deliver your containers in

00:13:52,270 --> 00:13:57,190
the same manner to your data center so

00:13:55,870 --> 00:13:59,950
that it ends up looking like this

00:13:57,190 --> 00:14:01,329
instead you have visibility into where

00:13:59,950 --> 00:14:03,459
your containers are what they're

00:14:01,329 --> 00:14:06,370
actually running so you can manage them

00:14:03,459 --> 00:14:09,160
get some statistics on them and that's

00:14:06,370 --> 00:14:11,380
you know two pieces of the puzzle right

00:14:09,160 --> 00:14:14,140
when you think about development

00:14:11,380 --> 00:14:16,000
workflows in the container world you

00:14:14,140 --> 00:14:19,360
have the actual container system itself

00:14:16,000 --> 00:14:21,579
which in our case is dr. then you have

00:14:19,360 --> 00:14:25,360
the orchestration engine which is coover

00:14:21,579 --> 00:14:27,520
Nettie's but that's only two pieces of

00:14:25,360 --> 00:14:30,760
the puzzle what we actually wanted to do

00:14:27,520 --> 00:14:32,709
was create a new platform that adds on

00:14:30,760 --> 00:14:36,399
top of those to make docker in coover

00:14:32,709 --> 00:14:38,769
Nettie's easy to use from a developer's

00:14:36,399 --> 00:14:40,630
perspective and so when we started doing

00:14:38,769 --> 00:14:41,940
this we had to change our development

00:14:40,630 --> 00:14:47,920
model we've actually been working on

00:14:41,940 --> 00:14:49,839
openshift 34 about really two years year

00:14:47,920 --> 00:14:51,110
and a half two years but most of that

00:14:49,839 --> 00:14:54,019
time has been

00:14:51,110 --> 00:14:56,300
been working on the doctor upstream

00:14:54,019 --> 00:14:58,550
project the Cooper Nettie's upstream

00:14:56,300 --> 00:15:00,440
project so we did actually change our

00:14:58,550 --> 00:15:04,010
development model to work all in the

00:15:00,440 --> 00:15:06,470
upstream projects which is why it's

00:15:04,010 --> 00:15:09,620
taken us a quite a while to get the

00:15:06,470 --> 00:15:12,079
first version out because we don't want

00:15:09,620 --> 00:15:14,570
developers to be using containers and

00:15:12,079 --> 00:15:17,240
deploy things out there but then just

00:15:14,570 --> 00:15:19,279
leaving them laying around and not

00:15:17,240 --> 00:15:21,950
actually using them on a daily basis

00:15:19,279 --> 00:15:24,140
because that's a no benefit what we

00:15:21,950 --> 00:15:26,870
actually want developers to do is to be

00:15:24,140 --> 00:15:30,110
able to create great things with

00:15:26,870 --> 00:15:31,579
containers and this is my favorite one

00:15:30,110 --> 00:15:35,600
because it's a bar made out of the

00:15:31,579 --> 00:15:37,970
container so so that's what we're going

00:15:35,600 --> 00:15:40,370
to learn today is the platform we've

00:15:37,970 --> 00:15:43,910
created it is all open source it's

00:15:40,370 --> 00:15:46,519
called openshift origin and the real

00:15:43,910 --> 00:15:49,760
goal honestly is kind of summed up with

00:15:46,519 --> 00:15:54,730
this picture and then one familiar with

00:15:49,760 --> 00:15:59,329
these two guys this represents a

00:15:54,730 --> 00:16:03,230
development and operations and who

00:15:59,329 --> 00:16:09,290
that's a very good question what do you

00:16:03,230 --> 00:16:16,790
guys think he's Darth Vader yeah develop

00:16:09,290 --> 00:16:20,959
good wall decorations so operations is

00:16:16,790 --> 00:16:22,610
absolutely Darth Vader development is

00:16:20,959 --> 00:16:27,199
Luke Skywalker because we're the nice

00:16:22,610 --> 00:16:28,910
guys I'm just kidding it is this tool

00:16:27,199 --> 00:16:31,730
that will allow these two groups to get

00:16:28,910 --> 00:16:34,070
along better meaning that operations

00:16:31,730 --> 00:16:36,620
maintains the platform they have full

00:16:34,070 --> 00:16:40,220
control over it they get to decide your

00:16:36,620 --> 00:16:42,279
quotas what languages you can use but

00:16:40,220 --> 00:16:44,620
then after they set these rules in place

00:16:42,279 --> 00:16:46,850
developers are free to self-service

00:16:44,620 --> 00:16:49,370
within those rules so if they want to

00:16:46,850 --> 00:16:51,500
spin up you know 10 containers all

00:16:49,370 --> 00:16:53,089
running nodejs they can do so without

00:16:51,500 --> 00:16:56,660
having to call the operations team

00:16:53,089 --> 00:17:00,050
because what I realized when I manage

00:16:56,660 --> 00:17:03,960
the operations team nit at Red Hat is

00:17:00,050 --> 00:17:05,280
that sis admins have more

00:17:03,960 --> 00:17:07,530
certain things to worry about than

00:17:05,280 --> 00:17:10,380
spinning up development environments and

00:17:07,530 --> 00:17:12,480
that's why it always takes them so long

00:17:10,380 --> 00:17:14,790
to do it is because they're actually

00:17:12,480 --> 00:17:16,380
working on real things right and so

00:17:14,790 --> 00:17:19,020
development environments kind of get

00:17:16,380 --> 00:17:21,660
pushed down their priority list and so

00:17:19,020 --> 00:17:23,850
with a project like open shift they're

00:17:21,660 --> 00:17:25,530
able to set it up initially and then let

00:17:23,850 --> 00:17:27,750
developers do it themselves without

00:17:25,530 --> 00:17:30,690
having to to call us in the middle of

00:17:27,750 --> 00:17:35,210
the night okay so that's enough of me

00:17:30,690 --> 00:17:39,030
talking so now what we're going to do is

00:17:35,210 --> 00:17:42,840
start the workshop and so everyone does

00:17:39,030 --> 00:17:51,020
need to be on Wi-Fi for this and I want

00:17:42,840 --> 00:17:51,020
everyone to go to lets me open a console

00:17:56,320 --> 00:18:00,870
ah wrong screen

00:18:10,190 --> 00:18:13,090
go to this URL

00:18:23,700 --> 00:18:30,790
and I'll pull it back up in just a

00:18:26,500 --> 00:18:33,960
second I screwed up my zoom level here

00:18:30,790 --> 00:18:33,960
there we go

00:18:41,590 --> 00:18:49,820
and it should look like this Ron Club

00:18:46,039 --> 00:18:53,390
rum run club rom-com training run cloud

00:18:49,820 --> 00:19:00,010
rug calm / dev top yeah because in the

00:18:53,390 --> 00:19:00,010
console that's just grunt boat mmm sorry

00:19:00,640 --> 00:19:11,000
Ron cloud Bronco thank you sir it is

00:19:07,789 --> 00:19:21,919
also 319 a.m. for me so you got cut me

00:19:11,000 --> 00:19:27,460
some slack okay so a little bit about

00:19:21,919 --> 00:19:27,460
this environment is let me switch here

00:19:27,850 --> 00:19:40,100
maybe my internet died um this is

00:19:32,840 --> 00:19:42,409
running openshift 3 11 11 11 or whatever

00:19:40,100 --> 00:19:45,049
the latest version is and we installed

00:19:42,409 --> 00:19:50,750
this cluster couple days ago it is

00:19:45,049 --> 00:19:54,320
running in open or in Amazon ec2 ireland

00:19:50,750 --> 00:19:57,409
i believe was the closest one it has one

00:19:54,320 --> 00:20:00,559
master which is the Cooper Nettie's

00:19:57,409 --> 00:20:02,630
master one what we call infrastructure

00:20:00,559 --> 00:20:06,470
node that contains things like the

00:20:02,630 --> 00:20:10,030
doctor registry any other packages that

00:20:06,470 --> 00:20:12,590
we need to install and then we have five

00:20:10,030 --> 00:20:16,250
openshift nodes which you can also think

00:20:12,590 --> 00:20:17,720
of as Cooper Nettie's minions okay don't

00:20:16,250 --> 00:20:19,789
worry if you don't understand what these

00:20:17,720 --> 00:20:23,480
terms are we're going to get into it a

00:20:19,789 --> 00:20:26,270
little bit so does everyone been able to

00:20:23,480 --> 00:20:30,039
get to the side before okay so the first

00:20:26,270 --> 00:20:33,200
thing we want to do is install the OC

00:20:30,039 --> 00:20:35,690
client tool this is lab one you can read

00:20:33,200 --> 00:20:37,460
through it and so the way I like to

00:20:35,690 --> 00:20:39,860
normally do things is just have you guys

00:20:37,460 --> 00:20:42,320
work through it and then if when you

00:20:39,860 --> 00:20:44,480
have questions just yell at me but I'll

00:20:42,320 --> 00:20:46,100
walk through each lab and then give

00:20:44,480 --> 00:20:47,870
everyone five or ten minutes to do it

00:20:46,100 --> 00:20:51,260
okay so you're actually learning how to

00:20:47,870 --> 00:20:53,620
do things the OC command line tool i

00:20:51,260 --> 00:20:56,040
linked out to github so you can get the

00:20:53,620 --> 00:20:59,590
latest version here the only requirement

00:20:56,040 --> 00:21:02,080
for the OC tool set is a 64-bit

00:20:59,590 --> 00:21:07,900
operating system if you're running a

00:21:02,080 --> 00:21:12,309
32-bit operating system let me know are

00:21:07,900 --> 00:21:21,309
you in the linux bedroom oh no we know

00:21:12,309 --> 00:21:23,500
this too all right that's because we

00:21:21,309 --> 00:21:27,340
changed our repo servers let me get the

00:21:23,500 --> 00:21:32,580
new number google scholar and let me get

00:21:27,340 --> 00:21:36,670
the new if you go to blog openshift calm

00:21:32,580 --> 00:21:40,590
the first post you see i wrote whatever

00:21:36,670 --> 00:21:44,230
yesterday or the day before two days ago

00:21:40,590 --> 00:21:46,150
click on that link and I link to the

00:21:44,230 --> 00:21:48,670
github version down here in the middle

00:21:46,150 --> 00:21:51,970
right here these same links will go to

00:21:48,670 --> 00:21:55,240
github okay and so this you can download

00:21:51,970 --> 00:22:01,390
the latest version here that make sense

00:21:55,240 --> 00:22:04,240
blog openshift calm so go here click on

00:22:01,390 --> 00:22:08,140
the first link using open ship 3 on your

00:22:04,240 --> 00:22:10,450
local environment scroll down till you

00:22:08,140 --> 00:22:13,090
see the microsoft windows linux and OSX

00:22:10,450 --> 00:22:15,400
and download the correct one ok so this

00:22:13,090 --> 00:22:18,460
binary is written in the go programming

00:22:15,400 --> 00:22:20,309
language the previous version of open

00:22:18,460 --> 00:22:23,230
shift everything was written in Ruby

00:22:20,309 --> 00:22:25,600
which we called open shift too we

00:22:23,230 --> 00:22:29,950
basically through all of that code away

00:22:25,600 --> 00:22:31,809
and rewrote it entirely in go so we

00:22:29,950 --> 00:22:34,720
didn't save a single line of code

00:22:31,809 --> 00:22:37,600
actually one of the benefits of that is

00:22:34,720 --> 00:22:39,940
that to install the client tools on the

00:22:37,600 --> 00:22:42,550
previous version of open shift you it

00:22:39,940 --> 00:22:45,190
required like Ruby and and all these

00:22:42,550 --> 00:22:48,280
other dependencies so we got a rid of

00:22:45,190 --> 00:22:50,470
that by using go and so it on our drink

00:22:48,280 --> 00:22:54,100
wise go and all of it it doesn't require

00:22:50,470 --> 00:22:55,809
anything it's a self-contained binary

00:22:54,100 --> 00:22:58,210
for your operating system so there's

00:22:55,809 --> 00:23:00,060
actually nothing to install in this lab

00:22:58,210 --> 00:23:02,850
we're just going to download that by

00:23:00,060 --> 00:23:06,840
and then add it to your path okay for

00:23:02,850 --> 00:23:10,920
windows are sorry for linux and OSX it's

00:23:06,840 --> 00:23:13,040
very easy you just change the path if i

00:23:10,920 --> 00:23:16,620
go back here to the roadshow document

00:23:13,040 --> 00:23:19,200
you just add it to your path on windows

00:23:16,620 --> 00:23:22,860
changing your path is considered an

00:23:19,200 --> 00:23:25,080
advanced topic okay according to

00:23:22,860 --> 00:23:27,300
Microsoft and more of course it is and

00:23:25,080 --> 00:23:30,270
so I gave instructions on how to do it

00:23:27,300 --> 00:23:32,040
for Windows 10 but for other versions of

00:23:30,270 --> 00:23:35,370
Windows it's different so I just link

00:23:32,040 --> 00:23:38,970
out to blog post on how to do that okay

00:23:35,370 --> 00:23:42,000
so to verify that you have this lab

00:23:38,970 --> 00:23:48,840
completed what you can do is come to

00:23:42,000 --> 00:23:53,310
your command line and type 0 c dash

00:23:48,840 --> 00:23:54,960
version and if you get this doesn't have

00:23:53,310 --> 00:23:57,090
to be the same version cheers will be

00:23:54,960 --> 00:24:00,420
slightly newer than mine you know that

00:23:57,090 --> 00:24:02,850
you have the OC tools ready to go okay

00:24:00,420 --> 00:24:04,920
so I'm going to give every 15 minutes to

00:24:02,850 --> 00:24:08,130
do this when you have problems just

00:24:04,920 --> 00:24:11,960
raise your hand and me or gram or Jorge

00:24:08,130 --> 00:24:11,960
will come around and help you okay

00:24:33,830 --> 00:24:37,220
black rose

00:24:47,669 --> 00:24:50,669
ok

00:25:46,419 --> 00:26:28,429
doesn't matter yeah yeahs ago we are

00:26:25,400 --> 00:26:36,450
complaining as a home without our stash

00:26:28,429 --> 00:26:40,030
a cute story

00:26:36,450 --> 00:26:47,520
it's something you have a simple man all

00:26:40,030 --> 00:26:47,520
the planning the poker game I tell you

00:27:40,120 --> 00:27:45,860
I'm going to use the same let me

00:27:42,740 --> 00:27:50,960
download the same client tools I just

00:27:45,860 --> 00:27:53,920
want to make sure that i'm using the

00:27:50,960 --> 00:27:53,920
same one you guys are

00:28:24,640 --> 00:28:28,090
so most uh

00:28:37,570 --> 00:28:41,080
we're good put it

00:28:49,169 --> 00:28:56,830
alright just what everyone's seen the

00:28:52,179 --> 00:28:58,840
state version okay now disclaimer I've

00:28:56,830 --> 00:29:01,780
never tested these new versions of the

00:28:58,840 --> 00:29:03,370
quiet tools these are the open shift

00:29:01,780 --> 00:29:05,200
origin client tools and we're actually

00:29:03,370 --> 00:29:08,650
going to be using them against openshift

00:29:05,200 --> 00:29:10,299
enterprise so this will be fun but it

00:29:08,650 --> 00:29:12,309
should work because it's the exact same

00:29:10,299 --> 00:29:15,400
code base right there's no difference

00:29:12,309 --> 00:29:17,830
between the open source origin and the

00:29:15,400 --> 00:29:21,340
one that read have cells absolutely no

00:29:17,830 --> 00:29:25,929
difference okay all right everyone have

00:29:21,340 --> 00:29:30,700
this working if so let's move on here to

00:29:25,929 --> 00:29:35,350
the lab number wait did we do everything

00:29:30,700 --> 00:29:36,970
here yes we get okay it's a lab to smoke

00:29:35,350 --> 00:29:39,090
testing the environment okay this is

00:29:36,970 --> 00:29:43,270
where we're actually going to login to

00:29:39,090 --> 00:29:46,630
open shift for the first time ok this is

00:29:43,270 --> 00:29:56,340
the URL 0 whiteboard in here there's

00:29:46,630 --> 00:29:56,340
your whiteboard markers nope no more try

00:30:23,670 --> 00:30:29,290
free short URL right sorry I didn't make

00:30:27,100 --> 00:30:31,060
it ok so in this lab we're actually

00:30:29,290 --> 00:30:33,610
going to log in for the first time but

00:30:31,060 --> 00:30:37,810
in order to do that you're going to need

00:30:33,610 --> 00:30:40,360
usernames and passwords ok I created one

00:30:37,810 --> 00:30:43,450
for everybody and this is going to take

00:30:40,360 --> 00:30:46,210
us five minutes to get through so what

00:30:43,450 --> 00:30:48,700
I'm going to do is this point and tell

00:30:46,210 --> 00:30:51,250
you your username ok I tried to print

00:30:48,700 --> 00:30:54,750
some stuff up but it didn't work ok so

00:30:51,250 --> 00:30:57,820
is anyone not going to be doing the labs

00:30:54,750 --> 00:30:59,740
ok so if you're not doing them when i

00:30:57,820 --> 00:31:06,130
get to you just tell me and I'll skip

00:30:59,740 --> 00:31:09,850
past you okay so you user user all

00:31:06,130 --> 00:31:16,590
lowercase and then a number so you will

00:31:09,850 --> 00:31:34,300
be user 0 1 is you're ok you're 0 20 30

00:31:16,590 --> 00:31:44,490
40 50 60 70 80 90 9 10 11 12 13 14 15 16

00:31:34,300 --> 00:31:44,490
17 linking your 18 19 20 was too

00:31:48,330 --> 00:32:26,710
2122 425 yeah 30 and your password is

00:32:16,470 --> 00:32:29,320
getting one guest password no no dad pop

00:32:26,710 --> 00:32:35,400
who said that your password is def com

00:32:29,320 --> 00:32:35,400
you get a scarf very secure password

00:32:40,770 --> 00:32:45,310
okay so in this life we're just going to

00:32:42,970 --> 00:32:47,830
check and make sure that the environment

00:32:45,310 --> 00:32:49,990
is working for you and so i'll show you

00:32:47,830 --> 00:32:54,610
how to do this real quick now let me

00:32:49,990 --> 00:33:01,950
make this larger here i'm going to say

00:32:54,610 --> 00:33:07,750
OC loggia dash dash server equals https

00:33:01,950 --> 00:33:15,100
openshift master dev com open shift

00:33:07,750 --> 00:33:19,810
three roadshow calm just got asked me

00:33:15,100 --> 00:33:21,460
for my username I am user 0 0 this guy

00:33:19,810 --> 00:33:25,600
asked me for my password and i'm going

00:33:21,460 --> 00:33:28,600
to say dev com and you should see one

00:33:25,600 --> 00:33:31,030
project user and then your user number

00:33:28,600 --> 00:33:34,540
and smoke it's called a smoke test it's

00:33:31,030 --> 00:33:39,340
a saying that we have it now why did I

00:33:34,540 --> 00:33:41,710
create your user names with a 00 and why

00:33:39,340 --> 00:33:44,710
is your smoke project different than

00:33:41,710 --> 00:33:47,470
mine yours will be user 0 1 dash smoke

00:33:44,710 --> 00:33:50,560
and so on that's because in openshift

00:33:47,470 --> 00:33:52,450
project names have to be unique across

00:33:50,560 --> 00:33:55,690
the entire environment

00:33:52,450 --> 00:33:58,570
so there can't be two projects named you

00:33:55,690 --> 00:34:00,970
know my project there can only be one so

00:33:58,570 --> 00:34:03,910
each project name has to be unique every

00:34:00,970 --> 00:34:05,740
project we create make sure to start it

00:34:03,910 --> 00:34:09,490
with your user name like this example

00:34:05,740 --> 00:34:11,620
okay so in this lab we're going to log

00:34:09,490 --> 00:34:14,400
in and let me know when you have

00:34:11,620 --> 00:34:16,810
problems you may be asked to accept a

00:34:14,400 --> 00:34:21,010
self-signed certificate if you do just

00:34:16,810 --> 00:34:24,610
say yes if you trust me this is wrong

00:34:21,010 --> 00:34:27,750
right here anytime you see this URL it

00:34:24,610 --> 00:34:32,170
is the one that's on the board okay

00:34:27,750 --> 00:34:36,340
we're going to look at the web console

00:34:32,170 --> 00:34:40,480
so the web console is that URL so if I

00:34:36,340 --> 00:34:43,630
go to open shift dash master dev com

00:34:40,480 --> 00:34:46,120
open chip three road show you will be

00:34:43,630 --> 00:34:48,220
presented with the login screen same

00:34:46,120 --> 00:34:49,900
username and password and what I want

00:34:48,220 --> 00:34:52,870
you to do once you get into the web

00:34:49,900 --> 00:34:57,660
console is actually just poke around you

00:34:52,870 --> 00:35:00,880
should have two containers running okay

00:34:57,660 --> 00:35:02,770
and you can go into browse and you know

00:35:00,880 --> 00:35:05,470
look at the pods or whatever you want to

00:35:02,770 --> 00:35:07,750
do just spend you know ten minutes just

00:35:05,470 --> 00:35:11,290
poking around the you I don't delete

00:35:07,750 --> 00:35:16,480
anything but just you can open up a

00:35:11,290 --> 00:35:21,250
terminal on the pot itself and do some

00:35:16,480 --> 00:35:28,630
stuff here don't do anything and I'm

00:35:21,250 --> 00:35:31,570
user ID 1000 sixes and so that's all

00:35:28,630 --> 00:35:34,060
we're trying to do during this lab is

00:35:31,570 --> 00:35:36,600
just make sure your account works and

00:35:34,060 --> 00:35:39,010
the environments working for you okay

00:35:36,600 --> 00:35:40,300
I'll give everyone 10 minutes on this

00:35:39,010 --> 00:35:41,210
just because I do want you to play

00:35:40,300 --> 00:35:43,869
around in the web

00:35:41,210 --> 00:35:43,869
so a little bit

00:35:56,519 --> 00:36:01,900
and while you guys are doing this I am

00:36:00,099 --> 00:36:04,929
going to talk through come to some of

00:36:01,900 --> 00:36:07,630
the core concepts that you need to

00:36:04,929 --> 00:36:09,849
understand to know the internals of the

00:36:07,630 --> 00:36:12,699
platform so you can pay attention or not

00:36:09,849 --> 00:36:15,489
I think it's in the lab guide as well so

00:36:12,699 --> 00:36:19,539
you can just read it later if I go to

00:36:15,489 --> 00:36:23,140
the overview page this has a couple of

00:36:19,539 --> 00:36:27,519
things on it okay the first one is the

00:36:23,140 --> 00:36:30,459
default route for my application the

00:36:27,519 --> 00:36:33,099
entry point into the load balancer for

00:36:30,459 --> 00:36:34,900
my code so if I click this link it is

00:36:33,099 --> 00:36:37,929
public on the Internet it actually

00:36:34,900 --> 00:36:41,910
routes through the load balancer to one

00:36:37,929 --> 00:36:44,709
of my paws okay so what what is a pod

00:36:41,910 --> 00:36:47,859
these are pods right now we have two of

00:36:44,709 --> 00:36:50,769
them okay a pod is a Cooper Nattie's

00:36:47,859 --> 00:36:53,829
concept that basically just means a

00:36:50,769 --> 00:36:56,439
docker container okay so Cooper Nettie's

00:36:53,829 --> 00:37:00,069
takes a docker container or an image and

00:36:56,439 --> 00:37:01,689
wraps it inside of a pod and so instead

00:37:00,069 --> 00:37:03,969
of talking about you know how many

00:37:01,689 --> 00:37:06,669
containers are running we always say how

00:37:03,969 --> 00:37:09,809
many pods are running to get a little

00:37:06,669 --> 00:37:13,229
complicated you can have more than one

00:37:09,809 --> 00:37:16,900
docker container running in the same pod

00:37:13,229 --> 00:37:20,380
so if you wanted like an Apache server

00:37:16,900 --> 00:37:23,979
and mysql database you can do that in

00:37:20,380 --> 00:37:27,009
the same pod but we say that is a bad

00:37:23,979 --> 00:37:29,259
practice and not to do that okay the

00:37:27,009 --> 00:37:33,009
reason we say that's bad practice is

00:37:29,259 --> 00:37:35,739
because one of the benefits of running a

00:37:33,009 --> 00:37:37,599
container platform like open shift is

00:37:35,739 --> 00:37:40,539
the ability to scale pieces

00:37:37,599 --> 00:37:43,359
independently and you scale based on the

00:37:40,539 --> 00:37:46,089
pod level so if i had my web server and

00:37:43,359 --> 00:37:48,130
my database in the same pod and i only

00:37:46,089 --> 00:37:49,959
wanted to scale my web server I would

00:37:48,130 --> 00:37:52,209
have to scale them both does that make

00:37:49,959 --> 00:37:54,459
sense so if you separate your database

00:37:52,209 --> 00:37:56,769
into a pod and your web server in a pod

00:37:54,459 --> 00:37:59,319
you can scale independently they do you

00:37:56,769 --> 00:38:01,179
have a heavy computations in the

00:37:59,319 --> 00:38:01,910
database and you want to scale that up

00:38:01,179 --> 00:38:03,740
and

00:38:01,910 --> 00:38:08,030
replicas then you can do it that way

00:38:03,740 --> 00:38:11,180
okay this route this entry point into

00:38:08,030 --> 00:38:12,980
the load balancer gets created for you

00:38:11,180 --> 00:38:17,000
by openshift when you create something

00:38:12,980 --> 00:38:22,549
we'll get into that let's see it uses

00:38:17,000 --> 00:38:24,470
this docker image user 00 smoke so we'll

00:38:22,549 --> 00:38:26,869
get into this as well every time you

00:38:24,470 --> 00:38:29,960
create something in openshift we build

00:38:26,869 --> 00:38:31,849
docker images on the fly for you and

00:38:29,960 --> 00:38:36,200
push them to the registry these are just

00:38:31,849 --> 00:38:38,630
standard docker images we have builds in

00:38:36,200 --> 00:38:40,339
the port's okay so that's all I'm going

00:38:38,630 --> 00:38:42,020
to talk about right now we're going to

00:38:40,339 --> 00:38:44,030
get into all of this stuff in more

00:38:42,020 --> 00:38:45,829
detail in just a few minutes so we'll

00:38:44,030 --> 00:38:47,690
give everybody in another five minutes

00:38:45,829 --> 00:38:58,579
here do you want having problems logging

00:38:47,690 --> 00:39:02,690
in I know this sucks there's nothing I

00:38:58,579 --> 00:39:05,150
can do I have a hard line you can come

00:39:02,690 --> 00:39:09,230
up and use the hard-luck yeah yeah come

00:39:05,150 --> 00:39:14,329
on up and just plug into this one it

00:39:09,230 --> 00:39:18,140
sucks i'm actually using my phone I gave

00:39:14,329 --> 00:39:21,529
up on the conference Wi-Fi isn't cloud

00:39:18,140 --> 00:39:24,279
awesome right it's it's a all dependent

00:39:21,529 --> 00:39:29,059
on the network connection I love it

00:39:24,279 --> 00:39:31,369
especially on a trade yeah I will say

00:39:29,059 --> 00:39:33,440
this though one of even though using

00:39:31,369 --> 00:39:37,910
stuff like this you are dependent on the

00:39:33,440 --> 00:39:40,369
internet sucks I kicked off a build of a

00:39:37,910 --> 00:39:41,900
java ee application the other night as

00:39:40,369 --> 00:39:43,579
soon as the build started I just shut my

00:39:41,900 --> 00:39:45,730
screen right because I didn't need to

00:39:43,579 --> 00:39:49,029
like watch it so that's pretty cool

00:39:45,730 --> 00:39:49,029
here's a check

00:40:19,610 --> 00:40:24,600
now now that you're on the hardline you

00:40:22,110 --> 00:40:35,520
have to set up a Wi-Fi connection for

00:40:24,600 --> 00:40:38,280
everyone basically your laptop ok ok so

00:40:35,520 --> 00:40:40,890
the applications but no you didn't

00:40:38,280 --> 00:40:45,150
finish him what you were is suppose I

00:40:40,890 --> 00:40:47,160
said about starting the build of Java EE

00:40:45,150 --> 00:40:49,470
oh so I started to build and then I just

00:40:47,160 --> 00:40:51,120
shut my laptop which disconnected

00:40:49,470 --> 00:40:52,710
internet and my build was still going

00:40:51,120 --> 00:40:55,920
because it didn't have to be connected

00:40:52,710 --> 00:41:00,950
follows happening okays anyone need more

00:40:55,920 --> 00:41:04,050
time on this check oh this is gonna be

00:41:00,950 --> 00:41:12,800
I'm gonna have to go like this ok so

00:41:04,050 --> 00:41:12,800
let's go to the next lab here

00:41:16,890 --> 00:41:27,140
yeah alright so the next lab is

00:41:24,990 --> 00:41:29,940
deploying your first docker image okay

00:41:27,140 --> 00:41:33,330
how many people have employed a docker

00:41:29,940 --> 00:41:35,670
container before okay after this lab you

00:41:33,330 --> 00:41:38,100
will be red hat certified docker

00:41:35,670 --> 00:41:43,260
deployment engineer child specialist

00:41:38,100 --> 00:41:44,910
11-7 okay hanging seven level seven and

00:41:43,260 --> 00:41:48,330
I'll bring you up a certificate do you

00:41:44,910 --> 00:41:50,850
want to be possible did you really set

00:41:48,330 --> 00:41:55,580
up this yeah it's so hot he did really

00:41:50,850 --> 00:41:55,580
set up a hot spot so you can connect

00:42:05,480 --> 00:42:13,760
okay moving on we haven't heard that

00:42:14,000 --> 00:42:21,030
this guy I can't give away USB sticks we

00:42:17,400 --> 00:42:25,680
can't set up buzz buzz but ok tornado

00:42:21,030 --> 00:42:27,300
yeah okay so in this lab one of the cool

00:42:25,680 --> 00:42:30,780
things about open shift is you can

00:42:27,300 --> 00:42:33,210
deploy any docker container or dr. image

00:42:30,780 --> 00:42:36,090
if you're not familiar with this thing

00:42:33,210 --> 00:42:38,940
called docker hub it's basically kind of

00:42:36,090 --> 00:42:40,950
like github but for docker images okay

00:42:38,940 --> 00:42:42,930
so anything you would want in the world

00:42:40,950 --> 00:42:45,600
is probably already being created out

00:42:42,930 --> 00:42:49,040
there and so we do support the ability

00:42:45,600 --> 00:42:52,170
to run images straight from docker hub

00:42:49,040 --> 00:42:55,500
with some restrictions ok so the

00:42:52,170 --> 00:42:59,240
environment that I created I set a

00:42:55,500 --> 00:43:01,700
setting that does not allow docker

00:42:59,240 --> 00:43:04,230
containers to be run from external

00:43:01,700 --> 00:43:07,440
repositories if they run as the root

00:43:04,230 --> 00:43:10,620
user okay so unfortunately that's quite

00:43:07,440 --> 00:43:14,070
a few docker images today around his

00:43:10,620 --> 00:43:15,930
privileged users if you do want to allow

00:43:14,070 --> 00:43:17,730
that you just turn it off there's a just

00:43:15,930 --> 00:43:22,770
a little setting the reason we don't

00:43:17,730 --> 00:43:24,810
allow it by default is because a study

00:43:22,770 --> 00:43:28,620
was done by a company called Banyan

00:43:24,810 --> 00:43:30,210
research that found that just over forty

00:43:28,620 --> 00:43:35,540
percent of the official

00:43:30,210 --> 00:43:38,190
images so official meaning mongodb from

00:43:35,540 --> 00:43:40,710
MongoDB the company itself or fedora

00:43:38,190 --> 00:43:42,810
from red hat over forty percent of the

00:43:40,710 --> 00:43:45,150
official images had known security

00:43:42,810 --> 00:43:47,160
vulnerabilities in them and they run as

00:43:45,150 --> 00:43:49,710
the root user so we just decided to by

00:43:47,160 --> 00:43:52,260
default not to allow that and then to

00:43:49,710 --> 00:43:54,540
let the users or the administrators make

00:43:52,260 --> 00:43:56,880
the decision whether they want it to

00:43:54,540 --> 00:44:00,500
allow that or not so that being said we

00:43:56,880 --> 00:44:07,349
are going to run a docker container

00:44:00,500 --> 00:44:09,960
straight from dr. hub down here towards

00:44:07,349 --> 00:44:11,940
the bottom and we're going to deploy the

00:44:09,960 --> 00:44:14,700
famous Cooper Nettie's guestbook

00:44:11,940 --> 00:44:16,560
application so we're going to say OC new

00:44:14,700 --> 00:44:20,520
dash project remember to use your

00:44:16,560 --> 00:44:23,730
username here call it guest book and

00:44:20,520 --> 00:44:26,250
then all we're going to do is say OC new

00:44:23,730 --> 00:44:28,640
app kuber Nettie's guest book and what

00:44:26,250 --> 00:44:30,839
this is going to do is it specifies the

00:44:28,640 --> 00:44:32,609
namespace you can think of that we're

00:44:30,839 --> 00:44:34,440
going to pull this dr. image from and

00:44:32,609 --> 00:44:38,099
the name of the doctor image kuber

00:44:34,440 --> 00:44:40,410
Nettie's is the docker hub user ID of

00:44:38,099 --> 00:44:41,970
the cuban Eddie's project and so we're

00:44:40,410 --> 00:44:44,280
going to know that we don't have this

00:44:41,970 --> 00:44:46,380
image in our registry so we're going to

00:44:44,280 --> 00:44:48,570
go out to the public docker hub registry

00:44:46,380 --> 00:44:53,369
look for this user and then pull down

00:44:48,570 --> 00:44:56,400
this image and then run okay and at the

00:44:53,369 --> 00:44:59,970
once you get this ram i believe i have

00:44:56,400 --> 00:45:01,380
this docker image cached so we're not

00:44:59,970 --> 00:45:03,210
going to actually hit the public

00:45:01,380 --> 00:45:07,830
internet to pull this down otherwise

00:45:03,210 --> 00:45:12,690
it'd be too slow you can see that down

00:45:07,830 --> 00:45:14,940
towards the bottom let's see what i'm

00:45:12,690 --> 00:45:17,240
doing here that we're going to have this

00:45:14,940 --> 00:45:19,619
guestbook application running okay

00:45:17,240 --> 00:45:22,080
however it's not going to be accessible

00:45:19,619 --> 00:45:25,320
yet because we're not going to create a

00:45:22,080 --> 00:45:26,369
default route okay it's going to be

00:45:25,320 --> 00:45:28,230
running but it's not going to be

00:45:26,369 --> 00:45:31,440
accessible on the public Internet until

00:45:28,230 --> 00:45:34,680
the next lab okay so give every 15

00:45:31,440 --> 00:45:36,620
minutes to do this lab and all I'll try

00:45:34,680 --> 00:45:41,350
to do it here as well

00:45:36,620 --> 00:45:44,480
terrorists so I'm going to say OC new

00:45:41,350 --> 00:45:58,000
project I'm user 0 0 and i'm going to

00:45:44,480 --> 00:45:58,000
say guest book what happen network

00:46:04,990 --> 00:46:11,510
yep ok so now I have this user 00 guest

00:46:09,380 --> 00:46:14,270
book which i should be using now I can

00:46:11,510 --> 00:46:18,530
just say OC new app pass in Coober

00:46:14,270 --> 00:46:29,720
Neddy's dash guest book this is going to

00:46:18,530 --> 00:46:34,540
pull that image down and run it ok so

00:46:29,720 --> 00:46:34,540
now I have this thing running OC status

00:46:36,760 --> 00:46:43,900
and I have a deployment running if I go

00:46:39,860 --> 00:46:43,900
to the web console here

00:46:49,950 --> 00:46:58,529
and go into my guest book project I can

00:46:54,279 --> 00:46:58,529
see that I have a deployment goes i

00:47:04,739 --> 00:47:12,359
guess it's also possible to make it

00:47:07,299 --> 00:47:16,059
using the the web console is yeah it is

00:47:12,359 --> 00:47:22,599
yeah you just go to add the project

00:47:16,059 --> 00:47:26,440
click that button actually actually you

00:47:22,599 --> 00:47:30,430
in this version that i have deployed you

00:47:26,440 --> 00:47:32,470
cannot deploy a docker image from dr.

00:47:30,430 --> 00:47:35,200
hub on the web console in this fortunate

00:47:32,470 --> 00:47:37,650
tonight you can in the the most recent

00:47:35,200 --> 00:47:37,650
one

00:48:06,900 --> 00:48:14,640
does anyone need more time on this one

00:48:09,270 --> 00:48:18,150
it's fairly quick okay let's move on so

00:48:14,640 --> 00:48:20,130
now we have this guestbook application

00:48:18,150 --> 00:48:22,680
running but we see right here that

00:48:20,130 --> 00:48:25,410
there's no public URL it just lists the

00:48:22,680 --> 00:48:29,700
service and so what we need to do is

00:48:25,410 --> 00:48:33,589
expose this service as a route so to do

00:48:29,700 --> 00:48:38,880
that what you can do on the command line

00:48:33,589 --> 00:48:42,690
is do OC get services or SDC for short

00:48:38,880 --> 00:48:45,059
and this will list all the services you

00:48:42,690 --> 00:48:47,880
can think of a service as the load

00:48:45,059 --> 00:48:51,150
balancer okay it's the entry point to

00:48:47,880 --> 00:48:53,970
your application and we want to expose

00:48:51,150 --> 00:48:56,069
this as a route so to do that all you

00:48:53,970 --> 00:48:58,740
have to do is this is the name of the

00:48:56,069 --> 00:49:03,119
service as exposed this service so you

00:48:58,740 --> 00:49:06,510
say OC expose service or you can use SDC

00:49:03,119 --> 00:49:08,670
for short and say guest book and this

00:49:06,510 --> 00:49:10,740
will create a route for us and if i go

00:49:08,670 --> 00:49:14,339
back to the web console you'll see that

00:49:10,740 --> 00:49:18,809
it automatically updates with a publicly

00:49:14,339 --> 00:49:22,260
accessible URL so if i click that we can

00:49:18,809 --> 00:49:23,430
see the guestbook application now it's

00:49:22,260 --> 00:49:25,890
not going to actually work right now

00:49:23,430 --> 00:49:28,020
because the guestbook application is

00:49:25,890 --> 00:49:31,760
uses a Redis database which we don't

00:49:28,020 --> 00:49:31,760
have yet okay

00:49:40,320 --> 00:49:45,160
so I'll let everyone get that working

00:49:42,940 --> 00:49:47,080
just to make sure that you're finished

00:49:45,160 --> 00:49:49,290
with this lab you can see this page in

00:49:47,080 --> 00:49:49,290
the browser

00:49:58,810 --> 00:50:11,560
I know it's a beginner question but you

00:50:08,740 --> 00:50:14,320
already mentioned openshift origin which

00:50:11,560 --> 00:50:19,980
is the source code for the open shift

00:50:14,320 --> 00:50:25,390
platform and the open shift and price I

00:50:19,980 --> 00:50:29,500
mean like is there any the openshift

00:50:25,390 --> 00:50:32,080
enterprise is it just the cloud so the

00:50:29,500 --> 00:50:34,210
point already deployed what's the

00:50:32,080 --> 00:50:37,270
difference between openshift origin and

00:50:34,210 --> 00:50:39,820
enterprise but yeah yeah maybe are there

00:50:37,270 --> 00:50:42,070
any other open ships yes so there's

00:50:39,820 --> 00:50:44,770
three actually three versions of open

00:50:42,070 --> 00:50:47,110
shift there's open shift origin which is

00:50:44,770 --> 00:50:49,360
the upstream open ship project and

00:50:47,110 --> 00:50:55,660
openshift enterprise those two are

00:50:49,360 --> 00:50:57,670
exactly the same except for this this

00:50:55,660 --> 00:50:59,470
says openshift enterprise and the open

00:50:57,670 --> 00:51:01,990
source version says open shift origin

00:50:59,470 --> 00:51:04,060
okay other than that they are exactly

00:51:01,990 --> 00:51:07,150
the same the only difference is

00:51:04,060 --> 00:51:09,790
openshift enterprise when you purchase

00:51:07,150 --> 00:51:12,040
it comes with support oh I see yeah yeah

00:51:09,790 --> 00:51:14,410
Fred with that but I still have to sieve

00:51:12,040 --> 00:51:17,500
young date and I'll have to deploy to

00:51:14,410 --> 00:51:19,630
Amazon all my local creator or whatever

00:51:17,500 --> 00:51:21,880
you still have to run it yourself you

00:51:19,630 --> 00:51:24,220
also have what's called open when she

00:51:21,880 --> 00:51:28,990
ran online online now that makes sense

00:51:24,220 --> 00:51:33,580
ok thanks oh if you go to open shift com

00:51:28,990 --> 00:51:36,250
this is open shift online this is where

00:51:33,580 --> 00:51:39,040
we provide the hardware as well and host

00:51:36,250 --> 00:51:42,190
it this is version 2 right now then

00:51:39,040 --> 00:51:44,110
still version to version 2 we have open

00:51:42,190 --> 00:51:46,900
shift online if you're not familiar with

00:51:44,110 --> 00:51:52,930
it the reason it's still version 2 is we

00:51:46,900 --> 00:51:56,350
have what's our latest number two

00:51:52,930 --> 00:51:57,430
million applications running on it yeah

00:51:56,350 --> 00:52:00,610
one point eight to two million

00:51:57,430 --> 00:52:04,270
applications running on it we process

00:52:00,610 --> 00:52:06,400
over a billion requests per day just to

00:52:04,270 --> 00:52:09,820
the public Red Hat cloud through open

00:52:06,400 --> 00:52:10,360
shift and to migrate all of those users

00:52:09,820 --> 00:52:15,790
over

00:52:10,360 --> 00:52:17,650
it's not an easy task right and so what

00:52:15,790 --> 00:52:20,650
we are going to do is just stand up a

00:52:17,650 --> 00:52:24,730
separate environment called open shift

00:52:20,650 --> 00:52:26,650
on line three and we're going to what

00:52:24,730 --> 00:52:30,390
can I say about this it's going to be

00:52:26,650 --> 00:52:33,010
coming very soon in a developer preview

00:52:30,390 --> 00:52:36,310
but we're not going to sell my great

00:52:33,010 --> 00:52:38,440
people over we're going to let them do

00:52:36,310 --> 00:52:41,530
it on their own time and then we'll

00:52:38,440 --> 00:52:43,360
eventually turn off the current open

00:52:41,530 --> 00:52:46,780
shift online in like a year or two from

00:52:43,360 --> 00:52:50,050
now once everyone is migrated but it

00:52:46,780 --> 00:52:54,070
still will be free to use quickly can we

00:52:50,050 --> 00:52:57,100
push it out there and then open shift

00:52:54,070 --> 00:52:58,870
dedicated is if you're a company that

00:52:57,100 --> 00:53:03,670
doesn't want to run your own Hardware

00:52:58,870 --> 00:53:05,320
Red Hat's sysadmin manages your open

00:53:03,670 --> 00:53:08,230
shift environment for you so there's

00:53:05,320 --> 00:53:11,110
actually four different but it's all

00:53:08,230 --> 00:53:16,000
it's all the same code exactly except

00:53:11,110 --> 00:53:18,520
openshift online will not have an

00:53:16,000 --> 00:53:21,400
authentication mechanism it will require

00:53:18,520 --> 00:53:24,880
developers authenticate with github or

00:53:21,400 --> 00:53:26,850
Twitter okay these recent news that you

00:53:24,880 --> 00:53:29,890
will somehow work with Google their

00:53:26,850 --> 00:53:31,660
platform cause it won't work on okay so

00:53:29,890 --> 00:53:34,150
the question was we just had a

00:53:31,660 --> 00:53:37,480
announcement with Google that we're

00:53:34,150 --> 00:53:41,530
partnering to run open shift on Google

00:53:37,480 --> 00:53:43,390
compute engine there GCE cloud so

00:53:41,530 --> 00:53:45,820
that'll mean that perhaps the next

00:53:43,390 --> 00:53:48,580
version of open shift online the version

00:53:45,820 --> 00:53:50,620
3 will be running on Google's cloud and

00:53:48,580 --> 00:53:53,620
not Amazon's today it's on amazon and

00:53:50,620 --> 00:53:57,310
then if you want to use open shift

00:53:53,620 --> 00:54:00,010
dedicated you'll have your choice of AWS

00:53:57,310 --> 00:54:01,640
google compute engine or microsoft azure

00:54:00,010 --> 00:54:06,019
will run in

00:54:01,640 --> 00:54:09,700
three of those and currently does that

00:54:06,019 --> 00:54:13,640
mean that if i use the open shift online

00:54:09,700 --> 00:54:18,140
the free version you're actually paying

00:54:13,640 --> 00:54:19,970
for me the amazon yeah so you could hear

00:54:18,140 --> 00:54:21,920
is like if i use the free version of

00:54:19,970 --> 00:54:25,460
open shift online which anyone can use

00:54:21,920 --> 00:54:27,890
you get up to three gears or kick and a

00:54:25,460 --> 00:54:30,230
half a memory do we actually have to pay

00:54:27,890 --> 00:54:34,640
amazon for that yes we do Plus about

00:54:30,230 --> 00:54:37,099
seven dollars a month per user thank you

00:54:34,640 --> 00:54:42,049
very much that yes you can pay me

00:54:37,099 --> 00:54:43,970
afterwards get reimbursed so a lot of

00:54:42,049 --> 00:54:47,180
people ask why we do it why we play

00:54:43,970 --> 00:54:49,640
because we have you know a million 1.8

00:54:47,180 --> 00:54:51,589
it probably is 22 million now

00:54:49,640 --> 00:54:55,150
applications running out there why do we

00:54:51,589 --> 00:54:57,619
do it there's a lot of money for us I

00:54:55,150 --> 00:55:00,470
don't I know we're not one of the top

00:54:57,619 --> 00:55:03,049
amazon ec2 users Netflix probably kills

00:55:00,470 --> 00:55:05,059
us on that but it is a it's a

00:55:03,049 --> 00:55:08,960
significant amount of money that Red Hat

00:55:05,059 --> 00:55:11,539
just pays for free hosting for people i

00:55:08,960 --> 00:55:15,920
like to think we do it because it

00:55:11,539 --> 00:55:17,299
encourages developers to work on open

00:55:15,920 --> 00:55:20,750
source software and be able to publish

00:55:17,299 --> 00:55:23,119
their stuff quickly in reality though a

00:55:20,750 --> 00:55:24,890
lot of its Bitcoin mining and stuff like

00:55:23,119 --> 00:55:27,589
that that people install on it that we

00:55:24,890 --> 00:55:29,900
have to turn off but what we really hope

00:55:27,589 --> 00:55:31,579
is that developers will start to use it

00:55:29,900 --> 00:55:34,730
and they want to use it inside of their

00:55:31,579 --> 00:55:37,130
company as well and want to get

00:55:34,730 --> 00:55:44,210
something on premise like origin or

00:55:37,130 --> 00:55:47,660
enterprise around I certainly I have 57

00:55:44,210 --> 00:55:49,910
software updates they need to do all

00:55:47,660 --> 00:55:51,380
right so let's move on so we have this

00:55:49,910 --> 00:55:54,410
route now the next thing we're going to

00:55:51,380 --> 00:55:57,799
talk about is scaling and you can scale

00:55:54,410 --> 00:56:01,089
in one of two ways I show in the lab

00:55:57,799 --> 00:56:05,180
manual how to do it via the console and

00:56:01,089 --> 00:56:07,730
I am going oh and I also show how to do

00:56:05,180 --> 00:56:08,420
it in the web UI very easy to scale up

00:56:07,730 --> 00:56:11,810
and open

00:56:08,420 --> 00:56:15,980
so let me go to my guestbook application

00:56:11,810 --> 00:56:17,900
and let's scale it up to 4 and we'll see

00:56:15,980 --> 00:56:23,000
here in a second that it's starting to

00:56:17,900 --> 00:56:25,460
scale and now we have four containers

00:56:23,000 --> 00:56:28,370
running all load balanced so pretty

00:56:25,460 --> 00:56:30,320
quick to scale these things up my only

00:56:28,370 --> 00:56:34,790
ask is that because this is a shared

00:56:30,320 --> 00:56:37,850
environment don't scale up to like 200

00:56:34,790 --> 00:56:40,280
or anything because it'll really bring

00:56:37,850 --> 00:56:42,290
the environment to a crawl because

00:56:40,280 --> 00:56:44,090
there's only five servers but play

00:56:42,290 --> 00:56:48,410
around with it scale it up scale it down

00:56:44,090 --> 00:56:55,970
I believe in the workshop I provided a

00:56:48,410 --> 00:56:59,270
command to randomly kill maybe I didn't

00:56:55,970 --> 00:57:01,880
I have a shell script that randomly

00:56:59,270 --> 00:57:04,430
kills like two or three pods and you can

00:57:01,880 --> 00:57:06,710
see them come back so here just a leet

00:57:04,430 --> 00:57:09,410
one manually and you'll watch it comes

00:57:06,710 --> 00:57:11,540
back instantaneous like because under

00:57:09,410 --> 00:57:14,360
the covers we use MCD you guys familiar

00:57:11,540 --> 00:57:17,870
have you heard of NTD pet CD is a key

00:57:14,360 --> 00:57:22,040
value database key value store and so we

00:57:17,870 --> 00:57:25,760
keep the state of what the number of

00:57:22,040 --> 00:57:28,460
pods should be a net CD and then each

00:57:25,760 --> 00:57:31,490
hope we check and if it's ever out of

00:57:28,460 --> 00:57:33,650
sync we're out of true it's not true

00:57:31,490 --> 00:57:36,500
anymore we immediately fix it it takes

00:57:33,650 --> 00:57:38,750
about a second for us to realize that

00:57:36,500 --> 00:57:40,760
something bad has happened in to recover

00:57:38,750 --> 00:57:47,800
from so you know play around with that

00:57:40,760 --> 00:57:47,800
delete a few positive pop back up yeah

00:57:48,260 --> 00:57:57,330
you say it louder rafting all originals

00:57:53,700 --> 00:58:05,010
oh it's whatever you mean for the

00:57:57,330 --> 00:58:07,590
placement it's not random it's the

00:58:05,010 --> 00:58:10,080
default to burnet a scheduler if it

00:58:07,590 --> 00:58:13,080
automatically goes if you scale up to

00:58:10,080 --> 00:58:16,620
two containers it automatically first

00:58:13,080 --> 00:58:20,000
goes to a different physical host and it

00:58:16,620 --> 00:58:23,510
does that and then it does a least used

00:58:20,000 --> 00:58:26,460
algorithm as well even if the next host

00:58:23,510 --> 00:58:28,590
even if the the next place is a another

00:58:26,460 --> 00:58:30,480
physical machine if the current host is

00:58:28,590 --> 00:58:32,610
less utilized it puts it there but it's

00:58:30,480 --> 00:58:36,810
a default to burnet a scheduler is what

00:58:32,610 --> 00:58:39,510
we use yeah I've got an error saying

00:58:36,810 --> 00:58:42,620
that deployment config guest group can

00:58:39,510 --> 00:58:46,020
be updated the object has been modified

00:58:42,620 --> 00:58:48,570
someone else move the using your yeah it

00:58:46,020 --> 00:58:54,600
seems like that here is anyone using

00:58:48,570 --> 00:58:57,120
user one yeah that's the only kind of it

00:58:54,600 --> 00:58:59,700
yeah because someone I just answers and

00:58:57,120 --> 00:59:02,640
someone scaled it up altogether 54 so

00:58:59,700 --> 00:59:06,000
yeah you can use your face ballpoint yes

00:59:02,640 --> 00:59:08,930
I see you can use user 0 0 for user 50

00:59:06,000 --> 00:59:08,930
use user 50

00:59:16,020 --> 00:59:26,400
good works man stop mine did too maybe

00:59:21,120 --> 00:59:32,490
i'm using know you using users really

00:59:26,400 --> 00:59:34,590
quickly how is that what it is oh I see

00:59:32,490 --> 00:59:37,050
okay what grandma say this makes sense

00:59:34,590 --> 00:59:40,830
if I do this it's going to six but then

00:59:37,050 --> 00:59:43,050
I do this and sometimes if the state is

00:59:40,830 --> 00:59:44,400
changing while the state has changed

00:59:43,050 --> 00:59:45,890
does that make sense it's like a race

00:59:44,400 --> 00:59:48,270
condition and oh yeah i know i

00:59:45,890 --> 00:59:52,550
understand it for me it just happened

00:59:48,270 --> 00:59:52,550
when I hit the button only once but okay

00:59:53,210 --> 01:00:05,970
that's why you should always use the

00:59:55,110 --> 01:00:07,520
command line okay so i always get asking

01:00:05,970 --> 01:00:10,410
you scale down to zero you can

01:00:07,520 --> 01:00:24,450
absolutely you can scale it 2-0 can you

01:00:10,410 --> 01:00:26,310
yep should I have zero pods revis i'm

01:00:24,450 --> 01:00:28,410
going to give everyone just a couple

01:00:26,310 --> 01:00:29,730
more minutes to play around with this to

01:00:28,410 --> 01:00:32,060
kill some buds and then we're going to

01:00:29,730 --> 01:00:32,060
move on

01:00:44,960 --> 01:00:47,960
cool

01:01:01,370 --> 01:01:09,270
so one thing I surprised should mention

01:01:03,810 --> 01:01:14,130
about scaling is in origin with the

01:01:09,270 --> 01:01:17,220
latest merge we incorporated the first

01:01:14,130 --> 01:01:19,650
code that will allow you to auto scale

01:01:17,220 --> 01:01:21,870
okay so right now it's manual skelly

01:01:19,650 --> 01:01:24,090
right you have to click the button where

01:01:21,870 --> 01:01:26,460
you have to use the command line so we

01:01:24,090 --> 01:01:29,580
do have the first auto scaling stuff in

01:01:26,460 --> 01:01:33,440
the open source repo know now that will

01:01:29,580 --> 01:01:36,810
automatically scale initially based on

01:01:33,440 --> 01:01:39,030
this is CPU utilization okay cpu

01:01:36,810 --> 01:01:41,730
utilization so you can set some rules

01:01:39,030 --> 01:01:44,520
and if your pod is using too much cpu

01:01:41,730 --> 01:01:46,110
it'll actually scale out and and start

01:01:44,520 --> 01:01:47,670
cheering it that way now the goal for

01:01:46,110 --> 01:01:50,430
that is to have it be a pluggable

01:01:47,670 --> 01:01:53,640
scaling architecture where you can write

01:01:50,430 --> 01:01:56,310
your own scaling algorithm based on HTTP

01:01:53,640 --> 01:01:58,980
requests or disk i/o or whatever the

01:01:56,310 --> 01:02:04,530
case may be so it automatically scale up

01:01:58,980 --> 01:02:11,160
and down at that point alright who in

01:02:04,530 --> 01:02:14,820
here loves Java alright so we are going

01:02:11,160 --> 01:02:16,830
to be using Java for this next part

01:02:14,820 --> 01:02:25,230
mm-hmm but you don't actually have to

01:02:16,830 --> 01:02:28,370
touch the code okay all right so what

01:02:25,230 --> 01:02:33,240
I've done is I have created a geospatial

01:02:28,370 --> 01:02:36,480
application for mapping coordinates on a

01:02:33,240 --> 01:02:37,710
map okay and I'm going to show you the

01:02:36,480 --> 01:02:43,440
application that we're going to be

01:02:37,710 --> 01:02:47,190
building so let me go to the my web

01:02:43,440 --> 01:02:52,260
console and let me go back to my

01:02:47,190 --> 01:02:55,920
projects and go to MLB parts this is a

01:02:52,260 --> 01:02:58,530
je java ee application and a MongoDB

01:02:55,920 --> 01:03:01,890
database MongoDB supports 2d spatial

01:02:58,530 --> 01:03:04,290
queries box queries via JSON so that's

01:03:01,890 --> 01:03:07,440
why we're using that so if I click on

01:03:04,290 --> 01:03:11,330
this application all it is is a map of

01:03:07,440 --> 01:03:14,340
the world and defaults the United States

01:03:11,330 --> 01:03:14,830
because what this application does is

01:03:14,340 --> 01:03:17,710
mad

01:03:14,830 --> 01:03:19,570
us all of the baseball major league

01:03:17,710 --> 01:03:21,610
baseball stadiums in the United States

01:03:19,570 --> 01:03:23,080
okay this is a very pluggable

01:03:21,610 --> 01:03:25,060
application you can put in any

01:03:23,080 --> 01:03:26,830
coordinates you want map soccer stadiums

01:03:25,060 --> 01:03:30,910
or whatever the case may be or train

01:03:26,830 --> 01:03:35,860
stops or or whatever okay so every time

01:03:30,910 --> 01:03:38,530
i zoom in or out it makes a rest call

01:03:35,860 --> 01:03:41,710
based on the longitude and latitude from

01:03:38,530 --> 01:03:44,830
the bounds of the browser so it takes

01:03:41,710 --> 01:03:47,980
the coordinates from here here here and

01:03:44,830 --> 01:03:50,080
here and does a geospatial query based

01:03:47,980 --> 01:03:52,930
on those coordinates to find what's

01:03:50,080 --> 01:03:56,470
within it and so you can you know zoom

01:03:52,930 --> 01:04:01,090
down all the way it's just like Google

01:03:56,470 --> 01:04:05,410
Maps except open source ok so this uses

01:04:01,090 --> 01:04:07,060
a tool called openstreetmap which is a

01:04:05,410 --> 01:04:11,890
map of the world that you can use it

01:04:07,060 --> 01:04:15,280
also this web UI is a leaflet leaflet

01:04:11,890 --> 01:04:17,770
j/s and then the back end is all written

01:04:15,280 --> 01:04:21,430
in Java so if i scroll all the way down

01:04:17,770 --> 01:04:25,030
to seattle again should eventually see

01:04:21,430 --> 01:04:27,400
the baseball stadium here there it is

01:04:25,030 --> 01:04:29,080
it's called Safeco Field if you click on

01:04:27,400 --> 01:04:32,190
the little pin it'll tell you the team

01:04:29,080 --> 01:04:34,600
name their payroll and Molly through it

01:04:32,190 --> 01:04:35,770
so every time I do this it's making a

01:04:34,600 --> 01:04:39,780
rest call that we're going to be

01:04:35,770 --> 01:04:42,910
creating I should have centered it on

01:04:39,780 --> 01:04:46,120
for now let's go over here we're here

01:04:42,910 --> 01:04:51,480
we've got the loads of baseball stadiums

01:04:46,120 --> 01:04:55,360
yeah I know there's nothing over here

01:04:51,480 --> 01:05:01,080
this it in Miami right stay oh right

01:04:55,360 --> 01:05:07,360
right for no move to the right through

01:05:01,080 --> 01:05:11,340
here we go down down a bit too much oh

01:05:07,360 --> 01:05:11,340
there's no no yes okay

01:05:15,510 --> 01:05:23,050
here's Bernama we're somewhere here so

01:05:20,980 --> 01:05:25,450
you can do it all over the world right

01:05:23,050 --> 01:05:27,190
so you can use this code to map whatever

01:05:25,450 --> 01:05:30,760
you want so this is what we're going to

01:05:27,190 --> 01:05:32,410
be building let's go back to the lab the

01:05:30,760 --> 01:05:34,900
first thing we're going to use is what's

01:05:32,410 --> 01:05:37,869
called source to image so source to

01:05:34,900 --> 01:05:39,730
image is another open source project

01:05:37,869 --> 01:05:43,660
that we created on the open shift team

01:05:39,730 --> 01:05:46,900
because we feel that developers like to

01:05:43,660 --> 01:05:49,150
write code this is a fair fair

01:05:46,900 --> 01:05:52,450
assumption and they don't like to do

01:05:49,150 --> 01:05:54,100
docker builds all day long ok and so

01:05:52,450 --> 01:05:56,340
what we created was a source to image

01:05:54,100 --> 01:06:01,000
project that will take a git repository

01:05:56,340 --> 01:06:05,950
or source code and a image name maybe

01:06:01,000 --> 01:06:09,520
like jboss or rails or Sinatra or nodejs

01:06:05,950 --> 01:06:11,590
or some language and runtime we then

01:06:09,520 --> 01:06:15,190
take the source code provided which is a

01:06:11,590 --> 01:06:18,130
get URL a base image we build the source

01:06:15,190 --> 01:06:20,410
code build a new docker image on the fly

01:06:18,130 --> 01:06:22,510
that has your source code in it and push

01:06:20,410 --> 01:06:24,340
that image to the registry ok so

01:06:22,510 --> 01:06:26,859
developers can actually create and

01:06:24,340 --> 01:06:28,750
deploy docker images without having to

01:06:26,859 --> 01:06:30,940
touch doctor or knowing anything about

01:06:28,750 --> 01:06:32,740
it and that's what we're going to use in

01:06:30,940 --> 01:06:36,369
this lab is the source to image stuff

01:06:32,740 --> 01:06:39,130
we're going to be using the jboss EAP 64

01:06:36,369 --> 01:06:41,619
or something base image and then

01:06:39,130 --> 01:06:44,320
layering on top our source code it's

01:06:41,619 --> 01:06:46,510
going to run a maven build which is the

01:06:44,320 --> 01:06:48,369
Java build system it's going to take the

01:06:46,510 --> 01:06:51,250
artifact of that and inject it into the

01:06:48,369 --> 01:06:52,840
new container or a new image and then

01:06:51,250 --> 01:06:56,380
we're going to run a container based off

01:06:52,840 --> 01:06:58,030
of that ok so complicated yeah how does

01:06:56,380 --> 01:06:59,680
it work when I'm dead a lopping does it

01:06:58,030 --> 01:07:01,810
picture when I'm teaching to go back to

01:06:59,680 --> 01:07:05,619
rebuild to everything I'm the effect

01:07:01,810 --> 01:07:09,330
what language you use JavaScript ok so

01:07:05,619 --> 01:07:13,420
for interpreted languages like PHP

01:07:09,330 --> 01:07:17,530
nodejs whatever we actually have our

01:07:13,420 --> 01:07:20,560
sync tool built into the platform so I

01:07:17,530 --> 01:07:22,340
like to develop in PHP and so what I do

01:07:20,560 --> 01:07:24,530
inside of my ID

01:07:22,340 --> 01:07:28,700
is when I click the Save button in my

01:07:24,530 --> 01:07:31,760
editor I have it run Oh or OCR see and

01:07:28,700 --> 01:07:34,880
that sinks my changed files over and so

01:07:31,760 --> 01:07:37,490
it's instantaneous okay for java that's

01:07:34,880 --> 01:07:39,050
not the case because in order to do

01:07:37,490 --> 01:07:40,970
something like that with a compiled

01:07:39,050 --> 01:07:42,740
language like Java you're typically

01:07:40,970 --> 01:07:44,590
wanting to use something like Jay rebel

01:07:42,740 --> 01:07:47,420
so you'd have to use something like that

01:07:44,590 --> 01:07:50,450
okay if you're not using that you will

01:07:47,420 --> 01:07:54,530
indeed have to run a new build every

01:07:50,450 --> 01:07:56,270
time okay and can you use Jay rebel with

01:07:54,530 --> 01:07:59,990
open as long as there's a docker

01:07:56,270 --> 01:08:06,380
container that they support yes we allow

01:07:59,990 --> 01:08:07,760
you to run any doctor okay so oh there's

01:08:06,380 --> 01:08:09,320
one thing before we get on this lab

01:08:07,760 --> 01:08:11,420
because we are getting into these types

01:08:09,320 --> 01:08:13,970
of questions like what do you do when

01:08:11,420 --> 01:08:18,170
you go home today so if you still want

01:08:13,970 --> 01:08:24,500
to mess around with this go to open

01:08:18,170 --> 01:08:26,750
shift dot org slash vm so Jorge in the

01:08:24,500 --> 01:08:29,420
back of the room has created this

01:08:26,750 --> 01:08:32,300
all-in-one virtual machine that runs on

01:08:29,420 --> 01:08:35,510
Windows Linux Mac that has the latest

01:08:32,300 --> 01:08:37,670
and greatest open source code that is

01:08:35,510 --> 01:08:39,440
completely open in you know how said

01:08:37,670 --> 01:08:41,630
there was some security restrictions are

01:08:39,440 --> 01:08:43,190
out running his route that's disabled by

01:08:41,630 --> 01:08:45,380
default in this so you can run any

01:08:43,190 --> 01:08:47,480
docker container on it on your local

01:08:45,380 --> 01:08:49,400
machine just with vagrant with one

01:08:47,480 --> 01:08:51,410
command okay so that's when you would

01:08:49,400 --> 01:08:53,990
want to try out like that this is how I

01:08:51,410 --> 01:08:55,910
actually develop locally now I just use

01:08:53,990 --> 01:09:00,370
this all in one image and use it as my

01:08:55,910 --> 01:09:00,370
development arm okay yeah

01:09:00,750 --> 01:09:20,590
we update it yeah with every release

01:09:05,050 --> 01:09:22,450
yeah and so if you want more detailed

01:09:20,590 --> 01:09:25,020
instructions on how to do that remember

01:09:22,450 --> 01:09:27,640
that first blog post that we went to

01:09:25,020 --> 01:09:30,490
that's what this blog post details like

01:09:27,640 --> 01:09:32,670
how to actually run this thing right and

01:09:30,490 --> 01:09:35,500
so you'd want to come here and use that

01:09:32,670 --> 01:09:38,620
so I can just download that dimension

01:09:35,500 --> 01:09:40,900
put it into the virtual box yes yeah

01:09:38,620 --> 01:09:42,220
I've been running up and ready yeah look

01:09:40,900 --> 01:09:44,980
right there you're open shoot it

01:09:42,220 --> 01:09:47,500
provides up a chip yep and the rail base

01:09:44,980 --> 01:09:49,330
image is actually i believe about as

01:09:47,500 --> 01:09:51,940
soon as you for some other whole scroll

01:09:49,330 --> 01:09:54,970
know the way the host works is we use

01:09:51,940 --> 01:09:59,380
this technology not technology this

01:09:54,970 --> 01:10:01,870
service called zip x I p dot IO and so

01:09:59,380 --> 01:10:04,300
if we're in the console here you can see

01:10:01,870 --> 01:10:07,840
I have a public URL we create one of

01:10:04,300 --> 01:10:09,490
those using xip i oh so you don't have

01:10:07,840 --> 01:10:10,630
to mess with your hosts file or anything

01:10:09,490 --> 01:10:13,120
and you'll be able to access your

01:10:10,630 --> 01:10:15,000
applications they're not it's only it'll

01:10:13,120 --> 01:10:17,800
be available to any computer on your

01:10:15,000 --> 01:10:20,830
subnet I believe it's a subnet or entire

01:10:17,800 --> 01:10:23,230
network entire network but it won't be

01:10:20,830 --> 01:10:27,340
available to users outside of your

01:10:23,230 --> 01:10:29,320
network okay all right so let's actually

01:10:27,340 --> 01:10:33,250
get to building this application we are

01:10:29,320 --> 01:10:36,820
going to use the source to image here's

01:10:33,250 --> 01:10:40,630
the repo I want everyone to use and in

01:10:36,820 --> 01:10:44,610
this lab you have a decision to make ok

01:10:40,630 --> 01:10:47,590
I would prefer that you fork this repo

01:10:44,610 --> 01:10:49,990
the reason I want you to fork it and use

01:10:47,590 --> 01:10:52,960
your version of it is because in a later

01:10:49,990 --> 01:10:55,780
lab one of the great things about source

01:10:52,960 --> 01:10:58,630
the image is once you commit a change to

01:10:55,780 --> 01:11:01,210
your repo openshift automatically can

01:10:58,630 --> 01:11:03,280
kick off a build and know that something

01:11:01,210 --> 01:11:05,670
has changed and automatically rebuild it

01:11:03,280 --> 01:11:08,400
if you want to see that functionality

01:11:05,670 --> 01:11:10,530
ork the repo and use your own version

01:11:08,400 --> 01:11:14,250
because I'm not going to accept 50 pull

01:11:10,530 --> 01:11:16,739
request to see this today and then you

01:11:14,250 --> 01:11:18,800
can change your repo at see an automatic

01:11:16,739 --> 01:11:24,350
automated build get kicked off okay

01:11:18,800 --> 01:11:32,100
report the repo and provide that as the

01:11:24,350 --> 01:11:34,110
let me go back here let me show you one

01:11:32,100 --> 01:11:38,870
thing here and I know people are going

01:11:34,110 --> 01:11:38,870
to do this but when you create your app

01:11:40,550 --> 01:11:50,880
where is it make sure to use your repo

01:11:46,620 --> 01:11:55,320
and not mine and also make sure that you

01:11:50,880 --> 01:11:58,469
replace this your user with your actual

01:11:55,320 --> 01:12:01,890
github user ID okay if you for kit this

01:11:58,469 --> 01:12:04,290
is not your openshift user ID and it's

01:12:01,890 --> 01:12:08,010
not your user it's your actual github

01:12:04,290 --> 01:12:10,140
com user ID or you can just use mine g

01:12:08,010 --> 01:12:11,640
Sibley ok if you don't want to fork to

01:12:10,140 --> 01:12:13,980
repose that makes sense then one

01:12:11,640 --> 01:12:15,840
familiar with github I normally teach

01:12:13,980 --> 01:12:18,030
this to like corporate developers who

01:12:15,840 --> 01:12:22,320
like work at a bank 925 and don't

01:12:18,030 --> 01:12:24,480
understand github so hopefully you guys

01:12:22,320 --> 01:12:25,800
do but if you don't let me know and I'll

01:12:24,480 --> 01:12:27,390
help you yeah this might be a stupid

01:12:25,800 --> 01:12:30,179
question but this is all the working

01:12:27,390 --> 01:12:31,800
with do that oh yeah it works with any

01:12:30,179 --> 01:12:34,130
given repository yeah it could be a

01:12:31,800 --> 01:12:41,699
private it can be get lab bitbucket

01:12:34,130 --> 01:12:44,010
whatever yeah and if you don't one of

01:12:41,699 --> 01:12:46,320
the undocumented features of open shift

01:12:44,010 --> 01:12:50,580
if you just have code locally you can

01:12:46,320 --> 01:12:52,980
actually do OC new app this was pretty

01:12:50,580 --> 01:12:56,250
cool and let's say I was working on PHP

01:12:52,980 --> 01:12:57,840
I can pass until the dot and it'll take

01:12:56,250 --> 01:13:01,290
whatever source code is in my current

01:12:57,840 --> 01:13:02,690
directory and use that okay plus it's a

01:13:01,290 --> 01:13:06,469
prosecution

01:13:02,690 --> 01:13:10,430
at well not not secure shell what we

01:13:06,469 --> 01:13:11,989
have is this OCR sh which does a remote

01:13:10,430 --> 01:13:14,840
show but it's basically the same as

01:13:11,989 --> 01:13:17,680
absolute chuckle oh yeah yeah of course

01:13:14,840 --> 01:13:17,680
yes yeah

01:13:28,019 --> 01:13:37,229
so I'm going for it x what's your logged

01:13:34,239 --> 01:13:40,989
in yes um yeah just click that bedroom

01:13:37,229 --> 01:13:51,129
and now it's this and so this is your

01:13:40,989 --> 01:14:02,319
repo URL very good better thanks yes a

01:13:51,129 --> 01:14:03,669
solution so where does open okay so the

01:14:02,319 --> 01:14:05,379
question is where is this stuff actually

01:14:03,669 --> 01:14:09,789
getting deployed was the hardware look

01:14:05,379 --> 01:14:14,550
like for this today this workshop the

01:14:09,789 --> 01:14:20,879
hardware is five ec2 nodes that have

01:14:14,550 --> 01:14:26,619
eight gig of memory and four cpus and so

01:14:20,879 --> 01:14:28,899
we support up to every 40 pods per hose

01:14:26,619 --> 01:14:34,899
so you're getting one of those hosts and

01:14:28,899 --> 01:14:37,539
your pods are getting spread uh yeah

01:14:34,899 --> 01:14:40,149
yeah you can run over to in a virtual

01:14:37,539 --> 01:14:42,579
machine openshift actually also runs as

01:14:40,149 --> 01:14:44,379
a docker container so if you have moved

01:14:42,579 --> 01:14:47,349
to dr. you want to run open shift you

01:14:44,379 --> 01:14:49,510
can just do I I don't is it open chef /

01:14:47,349 --> 01:14:51,550
open shift is that the doctor thing and

01:14:49,510 --> 01:14:54,329
then you can run it inside of the doctor

01:14:51,550 --> 01:14:54,329
the texture

01:14:59,030 --> 01:15:12,960
this guy here is already done because

01:15:01,470 --> 01:15:15,630
he's on the harder than that right ok so

01:15:12,960 --> 01:15:18,150
the was the one thing with this lab if

01:15:15,630 --> 01:15:21,090
you're not familiar with Java why do

01:15:18,150 --> 01:15:25,470
people hate Java so much I absolutely

01:15:21,090 --> 01:15:29,160
have no idea because it takes forever to

01:15:25,470 --> 01:15:31,230
do builds ok so this build is actually

01:15:29,160 --> 01:15:33,570
going to take about five minutes because

01:15:31,230 --> 01:15:36,150
i'm using the maven system and it

01:15:33,570 --> 01:15:39,330
basically downloads the entire internet

01:15:36,150 --> 01:15:40,920
as a dependency because i have all of

01:15:39,330 --> 01:15:42,540
these dependencies that depend on other

01:15:40,920 --> 01:15:46,650
things that depends on other things and

01:15:42,540 --> 01:15:48,780
so it does take a while to build so you

01:15:46,650 --> 01:15:51,630
can look at the logs in two ways i don't

01:15:48,780 --> 01:15:53,370
believe i show the logs in this lab from

01:15:51,630 --> 01:15:57,300
the commander from the console but i

01:15:53,370 --> 01:16:01,680
really like the new logs in the console

01:15:57,300 --> 01:16:04,680
so if i once you get it deployed you can

01:16:01,680 --> 01:16:08,970
click on your pod here and you can click

01:16:04,680 --> 01:16:10,830
on logs and this will open up the log in

01:16:08,970 --> 01:16:13,050
you can follow it right so you can just

01:16:10,830 --> 01:16:15,240
click on follow and it's basically doing

01:16:13,050 --> 01:16:20,220
a tail on the logs in the console I

01:16:15,240 --> 01:16:21,930
prefer that way so it's up to you you'll

01:16:20,220 --> 01:16:25,850
know the build is finished when it says

01:16:21,930 --> 01:16:25,850
pushing to registry

01:16:40,500 --> 01:16:57,130
I thought it would then bastard talk

01:16:52,660 --> 01:17:01,890
tomorrow while the night I mean I would

01:16:57,130 --> 01:17:01,890
share a half the police's

01:17:20,159 --> 01:17:27,959
what time does this and bear sorry what

01:17:24,030 --> 01:17:43,199
time is the silver don't how long did it

01:17:27,959 --> 01:17:46,019
last 12 minutes that's it okay I'll wrap

01:17:43,199 --> 01:17:52,139
up in 10 minutes sorry we're just

01:17:46,019 --> 01:17:54,419
getting to the fun stuff yes hmm hi so

01:17:52,139 --> 01:17:56,159
the goal of this lab for this workshop

01:17:54,419 --> 01:17:59,429
is to put you guys through a bunch of

01:17:56,159 --> 01:18:02,130
pain right here and then to have

01:17:59,429 --> 01:18:04,079
everyone hate me at the end because we

01:18:02,130 --> 01:18:05,639
can basically do all of these in one

01:18:04,079 --> 01:18:08,639
command and I'll show you that in just a

01:18:05,639 --> 01:18:10,800
few minutes okay African you so can just

01:18:08,639 --> 01:18:12,959
finish up the lab so that we can see

01:18:10,800 --> 01:18:15,959
these labs will be up and running you

01:18:12,959 --> 01:18:18,239
can work on them all weekend whatever I

01:18:15,959 --> 01:18:21,840
mean like can you can you finish it off

01:18:18,239 --> 01:18:23,939
boom before our yeah so all right yeah I

01:18:21,840 --> 01:18:26,729
found it for us I understand we can see

01:18:23,939 --> 01:18:28,709
what's actually the goal of it okay so

01:18:26,729 --> 01:18:30,329
I'll just walk through this real quick

01:18:28,709 --> 01:18:32,999
what we're doing right now is we're

01:18:30,329 --> 01:18:35,610
deploying the java application but it

01:18:32,999 --> 01:18:37,860
doesn't actually have a database yet so

01:18:35,610 --> 01:18:41,519
in the next lab we're creating a

01:18:37,860 --> 01:18:43,530
database docker container and the most

01:18:41,519 --> 01:18:46,169
important thing to get out of this lab

01:18:43,530 --> 01:18:47,789
is that for authentication when you're

01:18:46,169 --> 01:18:49,769
using docker containers it uses

01:18:47,789 --> 01:18:52,409
environment variables by default as fun

01:18:49,769 --> 01:18:55,889
as the standard with dr. containers and

01:18:52,409 --> 01:18:57,269
so when you create an application we

01:18:55,889 --> 01:19:00,300
have this thing called a deployment

01:18:57,269 --> 01:19:03,360
config the deployment config is the

01:19:00,300 --> 01:19:05,249
truth of your application that's what

01:19:03,360 --> 01:19:07,439
when we scaled up and down on the web

01:19:05,249 --> 01:19:09,959
browser what is actually doing is

01:19:07,439 --> 01:19:12,269
modifying this deployment config okay

01:19:09,959 --> 01:19:14,729
all of your running pods has to match

01:19:12,269 --> 01:19:17,219
this deployment complete and so once we

01:19:14,729 --> 01:19:19,130
create the database I just sets an

01:19:17,219 --> 01:19:22,310
environment variables on the deploy

01:19:19,130 --> 01:19:25,730
config and that ensures that every pot I

01:19:22,310 --> 01:19:27,909
spin up after that has those environment

01:19:25,730 --> 01:19:31,310
variables in it so if I scale up to 5

01:19:27,909 --> 01:19:32,960
EAP servers each instance of that has

01:19:31,310 --> 01:19:34,780
these environment variables to make that

01:19:32,960 --> 01:19:38,780
database connection does that make sense

01:19:34,780 --> 01:19:41,179
ok so we link them together here we then

01:19:38,780 --> 01:19:43,040
look at the actual deployment config and

01:19:41,179 --> 01:19:47,000
this is what the environment variables

01:19:43,040 --> 01:19:48,679
look like nothing special and then I say

01:19:47,000 --> 01:19:51,940
open chef magic here and that's because

01:19:48,679 --> 01:19:54,710
once we change this deployment config

01:19:51,940 --> 01:19:57,199
openshift realizes your current running

01:19:54,710 --> 01:19:59,330
pods that we're building right now no

01:19:57,199 --> 01:20:01,190
longer matches this deployment config

01:19:59,330 --> 01:20:03,230
because it doesn't have those

01:20:01,190 --> 01:20:05,389
environment variables in it so what it

01:20:03,230 --> 01:20:07,250
does is it kills that then spins up a

01:20:05,389 --> 01:20:10,010
new one that's correct and then your

01:20:07,250 --> 01:20:12,290
application suddenly starts working ok

01:20:10,010 --> 01:20:14,920
and it loads the data in and all this

01:20:12,290 --> 01:20:18,380
stuff and it's really cool how it works

01:20:14,920 --> 01:20:20,179
but it is a pain to get all set up and I

01:20:18,380 --> 01:20:22,760
linked into the source code that shows

01:20:20,179 --> 01:20:26,300
you how that works I show you how you

01:20:22,760 --> 01:20:29,090
can SS or not SSH but get a shell on

01:20:26,300 --> 01:20:34,840
your container and actually run a month

01:20:29,090 --> 01:20:37,550
d'mongo binary client tool and lastly

01:20:34,840 --> 01:20:40,270
once you have this application all up

01:20:37,550 --> 01:20:44,060
and running which looks like this right

01:20:40,270 --> 01:20:47,449
as a developer you've now done the

01:20:44,060 --> 01:20:49,880
effort to get your project running but

01:20:47,449 --> 01:20:52,550
you want your teammate to be able to

01:20:49,880 --> 01:20:53,750
work on the same project with you but

01:20:52,550 --> 01:20:56,360
you don't want him to go through all of

01:20:53,750 --> 01:20:58,130
this paint also imagine that you're a

01:20:56,360 --> 01:21:00,650
team of like five developers and you all

01:20:58,130 --> 01:21:02,659
work on two or three projects and you

01:21:00,650 --> 01:21:04,250
hire a new developer normally it takes

01:21:02,659 --> 01:21:05,600
that new developer a couple days

01:21:04,250 --> 01:21:08,270
sometimes a week to get their

01:21:05,600 --> 01:21:10,219
environment setup and so what we provide

01:21:08,270 --> 01:21:13,340
is this thing called a template that you

01:21:10,219 --> 01:21:16,489
can create based off of the application

01:21:13,340 --> 01:21:19,969
once you have it running ok and so this

01:21:16,489 --> 01:21:25,130
template is really the real power of

01:21:19,969 --> 01:21:30,110
open shift and so instead of creating

01:21:25,130 --> 01:21:32,520
all of this java ee servers cloning 14

01:21:30,110 --> 01:21:36,960
the repositories what we could actually

01:21:32,520 --> 01:21:41,130
do is create a new project and I'll show

01:21:36,960 --> 01:21:46,580
you this go to my terminal here I can

01:21:41,130 --> 01:21:53,610
say OC new project egg user 00 template

01:21:46,580 --> 01:21:55,710
and i can paste this command in which is

01:21:53,610 --> 01:21:59,280
OC create so i'm going to create an

01:21:55,710 --> 01:22:02,220
object from a file and a file can also

01:21:59,280 --> 01:22:04,230
be a URL right and i'm passing in this

01:22:02,220 --> 01:22:06,600
JSON file that is a template that

01:22:04,230 --> 01:22:09,480
defines my application it's going to say

01:22:06,600 --> 01:22:13,200
here's the git repo that has the source

01:22:09,480 --> 01:22:16,620
code it needs MongoDB randomize the

01:22:13,200 --> 01:22:18,690
username and passwords and then modify

01:22:16,620 --> 01:22:21,570
the deployment config so it injects this

01:22:18,690 --> 01:22:27,570
password into every new pod and I'm

01:22:21,570 --> 01:22:30,600
going to hit enter here and now I have

01:22:27,570 --> 01:22:37,530
this template created ok so if I go back

01:22:30,600 --> 01:22:40,460
to the web console if i go to my project

01:22:37,530 --> 01:22:45,510
overview I'll see this template project

01:22:40,460 --> 01:22:48,000
if I click on add to project we see that

01:22:45,510 --> 01:22:50,280
my llbean parks app shows up in this

01:22:48,000 --> 01:22:56,520
list and it just got read so where did

01:22:50,280 --> 01:22:58,410
it go we might stay up here I saw it

01:22:56,520 --> 01:23:03,240
when I first loaded in your the

01:22:58,410 --> 01:23:05,730
rural-urban some school yeah here it is

01:23:03,240 --> 01:23:10,110
I just search for it so it actually adds

01:23:05,730 --> 01:23:13,580
it in the web a UI as well and so then

01:23:10,110 --> 01:23:16,140
it can be used but only in my name space

01:23:13,580 --> 01:23:19,710
okay there's there's this concept of

01:23:16,140 --> 01:23:22,440
namespaces the global name space for

01:23:19,710 --> 01:23:24,030
everyone is called open shift and so if

01:23:22,440 --> 01:23:25,830
you really wanted this to be available

01:23:24,030 --> 01:23:30,270
to anyone on the platform you would have

01:23:25,830 --> 01:23:32,700
to add it to the open shift namespace by

01:23:30,270 --> 01:23:35,820
passing in dash p.m. for namespace and

01:23:32,700 --> 01:23:39,270
say open shift this is going to give me

01:23:35,820 --> 01:23:42,730
an error because I don't have permission

01:23:39,270 --> 01:23:44,770
to do that I'm just a developer I can't

01:23:42,730 --> 01:23:46,660
things globally to the system so you

01:23:44,770 --> 01:23:49,900
need to get your sis admin to add this

01:23:46,660 --> 01:23:53,260
globally but because it's available to

01:23:49,900 --> 01:23:55,870
me in my project to create all of this

01:23:53,260 --> 01:23:57,940
nonsense that we're going to build over

01:23:55,870 --> 01:24:03,940
the next couple labs I can just say oh

01:23:57,940 --> 01:24:05,860
see new app MLB parks and it searches

01:24:03,940 --> 01:24:08,200
and sees that there's a template that

01:24:05,860 --> 01:24:10,050
I've loaded into the system and it's

01:24:08,200 --> 01:24:12,370
going to create all of this stuff and

01:24:10,050 --> 01:24:15,070
then in a couple minutes my entire

01:24:12,370 --> 01:24:17,200
project will be created and you can see

01:24:15,070 --> 01:24:21,000
that it randomized the you know

01:24:17,200 --> 01:24:23,800
passwords and all that stuff and so

01:24:21,000 --> 01:24:26,440
that's really how we envision teams

01:24:23,800 --> 01:24:28,960
using this to someone putting forth the

01:24:26,440 --> 01:24:31,030
effort to build out the project from

01:24:28,960 --> 01:24:34,690
source code then creating a template

01:24:31,030 --> 01:24:39,370
that others can use ok so we're going to

01:24:34,690 --> 01:24:41,860
end there and I'll be here all day for

01:24:39,370 --> 01:24:46,240
questions and then I think the next lab

01:24:41,860 --> 01:24:50,110
is Graham Graham is on my team he is

01:24:46,240 --> 01:24:52,600
also the author of mod whiskey the

01:24:50,110 --> 01:24:55,930
Python server and he's going to be

01:24:52,600 --> 01:24:58,990
talking about Python development in open

01:24:55,930 --> 01:25:03,490
ship which I thought it's not really

01:24:58,990 --> 01:25:06,070
good thank you sir whiskey hey ma busy

01:25:03,490 --> 01:25:08,080
he also felt that malt whiskey so there

01:25:06,070 --> 01:25:10,470
you go thanks for coming everybody every

01:25:08,080 --> 01:25:10,470
day you're free

01:25:35,690 --> 01:26:07,710
yeah oh yes we're building on all day

01:26:03,050 --> 01:26:11,640
yeah maybe the next we're always running

01:26:07,710 --> 01:26:14,150
off that's the rest of the guys repeat

01:26:11,640 --> 01:26:14,150
go and people

01:26:17,230 --> 01:26:43,210
yeah if you like Python see I forget

01:26:26,540 --> 01:26:43,210
which ok because ok is he taking matters

01:26:47,020 --> 01:26:54,800
that's yeah BB fill the van I you that

01:26:52,790 --> 01:27:00,620
that it moves me throw down on three of

01:26:54,800 --> 01:27:05,770
the final approach take a ship without

01:27:00,620 --> 01:27:05,770
HP hello

01:27:36,420 --> 01:27:53,730
10 minutes no papa

01:28:01,320 --> 01:28:19,449
Rio de la cuenta they once more question

01:28:07,510 --> 01:28:22,510
and we Bruce offended yes I do see I I

01:28:19,449 --> 01:28:30,310
got an impression that you actually have

01:28:22,510 --> 01:28:32,460
to you have to have a github or like you

01:28:30,310 --> 01:28:36,010
have to push your source code into a

01:28:32,460 --> 01:28:38,710
publicly available how's Italy to make

01:28:36,010 --> 01:28:42,580
it build with open chest online you

01:28:38,710 --> 01:28:44,920
don't fix is what i would i'm used to

01:28:42,580 --> 01:28:46,989
google app engine and you just you just

01:28:44,920 --> 01:28:49,780
filled everything locally and then you

01:28:46,989 --> 01:28:52,210
upload it yeah so your binaries with

01:28:49,780 --> 01:28:56,199
open shift online we require that you

01:28:52,210 --> 01:28:59,440
use get but we host it for you privately

01:28:56,199 --> 01:29:02,560
for to each account an open shift online

01:28:59,440 --> 01:29:05,620
has their own get server yeah yeah I was

01:29:02,560 --> 01:29:08,170
actually I meant just give not get huh

01:29:05,620 --> 01:29:11,530
okay and but that still means that I

01:29:08,170 --> 01:29:16,750
have to publish my source code to sort

01:29:11,530 --> 01:29:18,520
of your service yes we do also support

01:29:16,750 --> 01:29:21,159
binary deployments like if you have a

01:29:18,520 --> 01:29:22,270
war file yes that would be exhibited a

01:29:21,159 --> 01:29:24,430
rabbit into the

01:29:22,270 --> 01:29:27,310
climax directory is it will stand then

01:29:24,430 --> 01:29:29,680
that'll work don't be excellent yeah

01:29:27,310 --> 01:29:37,210
there's i'm sure i've written blog post

01:29:29,680 --> 01:29:40,720
on it okay did you yeah are you in a red

01:29:37,210 --> 01:29:43,930
hat and deploy never opened i was going

01:29:40,720 --> 01:29:47,740
to say we give free accounts out to

01:29:43,930 --> 01:29:49,810
employees to do like 25 containers yeah

01:29:47,740 --> 01:29:52,120
unfortunately that that was one of their

01:29:49,810 --> 01:29:57,010
business why i considered being a

01:29:52,120 --> 01:29:58,810
redhead employee changes for open shift

01:29:57,010 --> 01:30:01,780
online if you're an employee you get in

01:29:58,810 --> 01:30:04,600
a plane but i still didn't get the free

01:30:01,780 --> 01:30:07,870
version don't know yeah like the three

01:30:04,600 --> 01:30:10,900
yeah hold saw something wrong Pierce

01:30:07,870 --> 01:30:13,630
yeah his email no i have their you gave

01:30:10,900 --> 01:30:15,700
me whether the next level off the flour

01:30:13,630 --> 01:30:18,250
i enjoy whatever i change it for you

01:30:15,700 --> 01:30:21,520
exactly I just have admitted I don't

01:30:18,250 --> 01:30:23,920
either I got my personal one with sugar

01:30:21,520 --> 01:30:30,910
a cup of tea website crammed into one

01:30:23,920 --> 01:30:33,670
here yeah we do have scarves affinity

01:30:30,910 --> 01:30:37,080
with topic it

01:30:33,670 --> 01:30:37,080
yeah all right I'll be back

01:32:09,630 --> 01:32:15,490
morning you didn't workshop in this okay

01:32:12,220 --> 01:32:19,300
you probably have USBs but I'm grateful

01:32:15,490 --> 01:32:21,340
I mean that there were some questions

01:32:19,300 --> 01:32:24,010
we'll have to have more so I'm leaving

01:32:21,340 --> 01:32:25,870
you with a bag oh okay the position of

01:32:24,010 --> 01:32:29,140
times we understood that the usps with

01:32:25,870 --> 01:32:30,670
for something else yeah so whatever you

01:32:29,140 --> 01:32:33,730
need in for the season if there anything

01:32:30,670 --> 01:32:48,870
I touch if you don't don't touch them to

01:32:33,730 --> 01:32:48,870
ignore them um it's it's optional

01:33:08,610 --> 01:33:12,270
that's big enough to read

01:33:35,719 --> 01:33:39,460
okay I don't know

01:33:45,000 --> 01:33:47,090
Oh

01:34:22,280 --> 01:34:28,650
as as someone asked a minute ago it's

01:34:25,380 --> 01:34:31,140
you can follow along and try and do some

01:34:28,650 --> 01:34:32,489
of the things I'm to think you want if

01:34:31,140 --> 01:34:33,989
you don't do that it's better you were

01:34:32,489 --> 01:34:35,670
in the previous workshop and have

01:34:33,989 --> 01:34:39,000
everything set up otherwise in sort of

01:34:35,670 --> 01:34:41,250
way probably catch up happened just what

01:34:39,000 --> 01:34:44,760
you don't have to follow on upload all

01:34:41,250 --> 01:34:46,350
the information you can go and get very

01:34:44,760 --> 01:34:48,980
sink down and do it do it later if you

01:34:46,350 --> 01:34:48,980
want to dig into it

01:35:12,830 --> 01:35:20,420
I gave us more us-based with some

01:35:16,280 --> 01:35:21,800
stranger's though your skin I think it's

01:35:20,420 --> 01:35:24,400
too sherry top around except you don't

01:35:21,800 --> 01:35:24,400
mean good

01:37:24,400 --> 01:37:31,450
how many of you here were in the last

01:37:27,680 --> 01:37:34,190
work truck with graph okay we got some

01:37:31,450 --> 01:37:36,770
so that when they go to a few people

01:37:34,190 --> 01:37:39,320
came in you do not have to follow

01:37:36,770 --> 01:37:40,430
through on this one if you did the

01:37:39,320 --> 01:37:42,080
previous workshop you'll have all the

01:37:40,430 --> 01:37:45,650
environment setup so you can play if you

01:37:42,080 --> 01:37:49,340
want now is going to demonstrate a few

01:37:45,650 --> 01:37:51,890
things not a lot of hands-on stuff now

01:37:49,340 --> 01:37:54,680
just talk about a few other things but

01:37:51,890 --> 01:37:56,630
you can go back later and grab down now

01:37:54,680 --> 01:38:00,850
all in one vm which is mentioned in

01:37:56,630 --> 01:38:00,850
vitamin and play over at home to up

01:38:12,670 --> 01:38:18,420
I'm getting a connection with user and

01:38:14,949 --> 01:38:18,420
then trying to download the client

01:38:25,010 --> 01:38:33,960
okay three Chinese the links that were

01:38:29,849 --> 01:38:44,849
in yes yes yeah so the lease all right I

01:38:33,960 --> 01:38:50,239
didn't read it yeah we found that in the

01:38:44,849 --> 01:38:50,239

YouTube URL: https://www.youtube.com/watch?v=51vPOWILiIg


