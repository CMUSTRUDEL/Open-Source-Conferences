Title: A look into Network-Bound Disk Encryption - DevConf.CZ 2020
Publication date: 2020-04-09
Playlist: DevConfCZ 2020
Description: 
	Speakers: Sergio Correia

Network-Bound Disk Encryption (NBDE) is a technology that allows for the unlocking of encrypted disks upon system boot without requiring the manual entering of a passphrase.
In this session we are going to look into the current state of NBDE and learn how recent improvements have simplified the essential task of key management in the client side.

[ https://sched.co/YOxB ]

--
Recordings of talks at DevConf are a community effort. Unfortunately not everything works perfectly every time. If you're interested in helping us improve, let us know.
Captions: 
	00:00:00,710 --> 00:00:05,820
for the afternoon thanks for attending

00:00:03,050 --> 00:00:08,030
in this session we are gonna take a look

00:00:05,820 --> 00:00:10,170
at natural Bach disk encryption and

00:00:08,030 --> 00:00:13,500
highlight some of there was a bit

00:00:10,170 --> 00:00:21,150
improvements that we made to make the

00:00:13,500 --> 00:00:23,669
task of keys rotation simpler so this is

00:00:21,150 --> 00:00:26,009
a brief agenda I'm gonna give you a

00:00:23,669 --> 00:00:29,159
brief overview of the projects thing in

00:00:26,009 --> 00:00:31,349
clevis and then we will go to the key

00:00:29,159 --> 00:00:36,059
rotation procedure and they're gonna see

00:00:31,349 --> 00:00:38,670
a short demo on this so eventually

00:00:36,059 --> 00:00:41,280
people starting encrypting disks for

00:00:38,670 --> 00:00:43,920
getting more security but basically it

00:00:41,280 --> 00:00:47,489
has a trade-off that it requires you to

00:00:43,920 --> 00:00:49,260
type the password manually upon boot so

00:00:47,489 --> 00:00:51,899
that you can unlock the data in the boot

00:00:49,260 --> 00:00:56,460
procedure continues like in here is the

00:00:51,899 --> 00:00:59,070
a typical boot screen like we have a

00:00:56,460 --> 00:01:01,379
unencrypted diskettes requesting us to

00:00:59,070 --> 00:01:06,060
type the password so we can simply type

00:01:01,379 --> 00:01:07,950
it and it's okay or we can use what we

00:01:06,060 --> 00:01:10,950
call network bound using disk encryption

00:01:07,950 --> 00:01:13,290
and we did for a short diachronic

00:01:10,950 --> 00:01:17,250
basically it's gonna allow us to unlock

00:01:13,290 --> 00:01:20,190
a disk without need to manually type the

00:01:17,250 --> 00:01:22,640
password and now you're gonna see how

00:01:20,190 --> 00:01:26,330
exactly this works so we have a

00:01:22,640 --> 00:01:29,550
server-side counterpart like an a demo

00:01:26,330 --> 00:01:31,890
it is a so mature run a controlled

00:01:29,550 --> 00:01:34,050
environment for instance a data center

00:01:31,890 --> 00:01:37,380
of corporate network and we have a

00:01:34,050 --> 00:01:39,240
specific protocol that's gonna dictate

00:01:37,380 --> 00:01:40,980
how that the data is going to be

00:01:39,240 --> 00:01:43,500
transferred between the client and the

00:01:40,980 --> 00:01:47,820
server essentially it's some software

00:01:43,500 --> 00:01:50,760
JSON over HTTP and we use were this key

00:01:47,820 --> 00:01:53,160
exchange mccollum raelia with which our

00:01:50,760 --> 00:01:54,930
two hand hunters I believe with this

00:01:53,160 --> 00:01:57,360
second person is here I saw him

00:01:54,930 --> 00:02:00,600
yesterday I guess so

00:01:57,360 --> 00:02:04,710
it's based on diffie-hellman and IES and

00:02:00,600 --> 00:02:07,190
this secret does not leave the client so

00:02:04,710 --> 00:02:12,170
that's useful for do you want to do here

00:02:07,190 --> 00:02:14,270
on the client side we have Clarice

00:02:12,170 --> 00:02:17,060
this is gonna be a responsible for the

00:02:14,270 --> 00:02:20,330
Optima to decryption the configuration

00:02:17,060 --> 00:02:22,910
for it is also used in JSON and we

00:02:20,330 --> 00:02:25,370
support it for now three different

00:02:22,910 --> 00:02:29,660
cookies that we call pins like we have a

00:02:25,370 --> 00:02:32,210
pin called things in which case you can

00:02:29,660 --> 00:02:35,120
bind the disk to a specific thing

00:02:32,210 --> 00:02:39,470
servers or a set of servers we have a

00:02:35,120 --> 00:02:41,860
TPM chip in that can use the first

00:02:39,470 --> 00:02:45,500
platform module that may be available

00:02:41,860 --> 00:02:49,970
and we have we have a third pin call SSS

00:02:45,500 --> 00:02:53,390
which is changgil secret sharing so for

00:02:49,970 --> 00:02:56,570
the tag team this one allow us to blind

00:02:53,390 --> 00:02:58,970
at least to obtain server and that's

00:02:56,570 --> 00:03:00,770
over the navy network bound comes from

00:02:58,970 --> 00:03:05,290
so you have we are gonna have some sort

00:03:00,770 --> 00:03:09,410
of secret by the try specific server

00:03:05,290 --> 00:03:12,290
like the ssh protocol it's also tresor

00:03:09,410 --> 00:03:15,140
first use so we are going to see the key

00:03:12,290 --> 00:03:18,739
of the server and we are decide or not

00:03:15,140 --> 00:03:20,870
if we should accept it or not at all

00:03:18,739 --> 00:03:24,530
supports offline enrollment which means

00:03:20,870 --> 00:03:26,030
that we can previously download another

00:03:24,530 --> 00:03:28,549
word the advertisement from the server

00:03:26,030 --> 00:03:30,980
like it the keys it provides and so we

00:03:28,549 --> 00:03:33,890
can do the encryption itself offline

00:03:30,980 --> 00:03:36,549
without need to access it and here we

00:03:33,890 --> 00:03:39,920
can see on examples of how we can use it

00:03:36,549 --> 00:03:43,760
like basically we have a command Clavius

00:03:39,920 --> 00:03:47,239
locks by - dave specify the device that

00:03:43,760 --> 00:03:48,920
were interested in binding dynamic we

00:03:47,239 --> 00:03:51,350
use the specific pin that where you want

00:03:48,920 --> 00:03:55,540
to use this case tank and here is the

00:03:51,350 --> 00:03:59,810
JSON configuration we have a URL and

00:03:55,540 --> 00:04:04,940
basically the server itself like let's

00:03:59,810 --> 00:04:06,890
try to sit in this VM this VM basically

00:04:04,940 --> 00:04:10,730
has wolf cloves and turn

00:04:06,890 --> 00:04:14,060
install it locally let me see if it's

00:04:10,730 --> 00:04:17,229
working tank is gonna listen on the port

00:04:14,060 --> 00:04:19,880
number 80 so I can't check if we have a

00:04:17,229 --> 00:04:23,140
okay it gives me the advertisement which

00:04:19,880 --> 00:04:23,140
is this payload

00:04:26,560 --> 00:04:33,080
and I have our VDI 3 device which is

00:04:30,919 --> 00:04:36,409
encrypted I'm going to use this to bind

00:04:33,080 --> 00:04:37,960
to the servers to see if it works so I

00:04:36,409 --> 00:04:40,669
use a common like that one

00:04:37,960 --> 00:04:45,069
Clavius locks by the minus D by the way

00:04:40,669 --> 00:04:45,069
is there food sighs okay

00:04:46,479 --> 00:04:55,580
and then I specify the plug-in tank and

00:04:51,409 --> 00:04:59,150
the configuration basically the URL in

00:04:55,580 --> 00:05:01,580
this case it's local so local host so

00:04:59,150 --> 00:05:03,199
here I see the key from the server and I

00:05:01,580 --> 00:05:06,590
can track it or not

00:05:03,199 --> 00:05:09,530
let me trace it and at this point I'm

00:05:06,590 --> 00:05:15,080
prompted to type date an addiction looks

00:05:09,530 --> 00:05:17,319
password frog for this device what are

00:05:15,080 --> 00:05:25,460
doing here is basically creating

00:05:17,319 --> 00:05:27,830
probably made a mistake it's it's going

00:05:25,460 --> 00:05:31,639
to create a new quest prize and I had to

00:05:27,830 --> 00:05:35,000
another look slot in this device so we

00:05:31,639 --> 00:05:36,860
should have now to write one that

00:05:35,000 --> 00:05:41,300
already existed when the device was

00:05:36,860 --> 00:05:44,990
created any one that was added just now

00:05:41,300 --> 00:05:47,150
however we added it encrypted and we are

00:05:44,990 --> 00:05:49,430
gonna need this stone server to do the

00:05:47,150 --> 00:05:51,529
decryption for us at which point it can

00:05:49,430 --> 00:05:52,909
actually do the decryption of the

00:05:51,529 --> 00:05:55,849
divider unlocking on the device

00:05:52,909 --> 00:06:01,099
so just to verify that we actually have

00:05:55,849 --> 00:06:09,169
the two key slots yes so we have is what

00:06:01,099 --> 00:06:11,389
is zero and one checking you see that we

00:06:09,169 --> 00:06:17,120
actually have a token tired to key slot

00:06:11,389 --> 00:06:21,919
well that was Clarisse just did so this

00:06:17,120 --> 00:06:23,779
is the clevis pin the SSSP it implements

00:06:21,919 --> 00:06:25,639
this algorithm is secret sharing

00:06:23,779 --> 00:06:28,279
basically it allow us to divide the

00:06:25,639 --> 00:06:29,960
secret in parts different parts and we

00:06:28,279 --> 00:06:31,879
can also determine like the number of

00:06:29,960 --> 00:06:35,539
parts the minimal number of parts we

00:06:31,879 --> 00:06:37,070
need to recover the secret this also

00:06:35,539 --> 00:06:37,910
lowers in this case to mix piece

00:06:37,070 --> 00:06:40,100
together

00:06:37,910 --> 00:06:43,280
and basically you think brakes obstacles

00:06:40,100 --> 00:06:46,310
and walking policies here is a simple

00:06:43,280 --> 00:06:48,320
example of how we can reduce this like

00:06:46,310 --> 00:06:52,130
they was the same clairvius looks bind

00:06:48,320 --> 00:06:54,680
the device the P SS s we defined the

00:06:52,130 --> 00:06:56,930
threshold as one which basically means

00:06:54,680 --> 00:06:57,560
that we need only one of these to

00:06:56,930 --> 00:07:01,340
succeed

00:06:57,560 --> 00:07:03,680
you see I'm now using two ten servers so

00:07:01,340 --> 00:07:08,660
one of this one of this could be down we

00:07:03,680 --> 00:07:10,910
could steal from off the disk so it can

00:07:08,660 --> 00:07:13,460
be routed for high availability like

00:07:10,910 --> 00:07:20,080
this is the primary use case this

00:07:13,460 --> 00:07:22,010
example we also have a TPM qu ping

00:07:20,080 --> 00:07:25,490
basically it's going to use a trusted

00:07:22,010 --> 00:07:28,880
platform module that implements the veto

00:07:25,490 --> 00:07:31,400
specification 2.0 as of now we support

00:07:28,880 --> 00:07:33,830
state keep PCR policies

00:07:31,400 --> 00:07:36,650
so basically consume data based on the

00:07:33,830 --> 00:07:40,400
value of the piece yours and here is

00:07:36,650 --> 00:07:44,140
also an example similar everything the

00:07:40,400 --> 00:07:50,720
plug in this case depends you and here

00:07:44,140 --> 00:07:53,420
we are trying to the specific PCR ID and

00:07:50,720 --> 00:07:55,280
now we go to the key rotation mechanism

00:07:53,420 --> 00:07:57,530
we are mostly interested in hanging

00:07:55,280 --> 00:08:00,410
those thing is the network parcel

00:07:57,530 --> 00:08:04,580
network bound description let's focus on

00:08:00,410 --> 00:08:06,530
pain then you use cheese to cheese from

00:08:04,580 --> 00:08:09,770
the server like you we have on signing

00:08:06,530 --> 00:08:11,780
key and one encryption key and there's

00:08:09,770 --> 00:08:14,630
also like like I said use like in

00:08:11,780 --> 00:08:18,920
passwords we are supposed to rotate them

00:08:14,630 --> 00:08:21,230
like periodically like so eventually we

00:08:18,920 --> 00:08:23,990
should go to the server and do the key

00:08:21,230 --> 00:08:27,740
rotation which essentially is class

00:08:23,990 --> 00:08:30,410
generic new keys new pair of keys which

00:08:27,740 --> 00:08:34,990
we can do by using one script that is

00:08:30,410 --> 00:08:37,580
provided with tunnel and we also should

00:08:34,990 --> 00:08:39,140
tell the system that the current keys

00:08:37,580 --> 00:08:41,780
like should not be advertising anymore

00:08:39,140 --> 00:08:46,250
so okay now we have new keys they are

00:08:41,780 --> 00:08:50,540
the ones let's not advertise them in

00:08:46,250 --> 00:08:54,170
practice let's see how it works

00:08:50,540 --> 00:08:57,710
in this director VAR DB tank we have the

00:08:54,170 --> 00:09:00,140
extra keys ten guards a ciosing so here

00:08:57,710 --> 00:09:04,550
are the two keys and I'm going to create

00:09:00,140 --> 00:09:10,810
a new pair of keys to hotate lives I can

00:09:04,550 --> 00:09:18,470
use that binary tank D key chain and

00:09:10,810 --> 00:09:21,650
specify a new directory so at this point

00:09:18,470 --> 00:09:23,990
I have four so I'm going to now move the

00:09:21,650 --> 00:09:27,710
other ones basically I'm gonna rename

00:09:23,990 --> 00:09:29,480
them in perfect suite a door and from

00:09:27,710 --> 00:09:31,850
that point on Tony would not advertise

00:09:29,480 --> 00:09:34,640
them anymore they exist if you have

00:09:31,850 --> 00:09:36,740
clients using them like that device that

00:09:34,640 --> 00:09:40,850
I've bounded this to be work because

00:09:36,740 --> 00:09:43,240
they store their so let me rename these

00:09:40,850 --> 00:09:43,240
to

00:09:51,130 --> 00:09:57,280
so at this point I have tooth keys and

00:09:53,440 --> 00:10:00,000
chew keys that are now rotated from the

00:09:57,280 --> 00:10:04,210
server side that's it it is very simple

00:10:00,000 --> 00:10:06,640
however now comes the issue in the

00:10:04,210 --> 00:10:09,000
clients like I mention it since the case

00:10:06,640 --> 00:10:13,210
to exist I came to unlock the device

00:10:09,000 --> 00:10:19,140
using them which I can test for instance

00:10:13,210 --> 00:10:23,800
Clavius locks unlock I passed the device

00:10:19,140 --> 00:10:27,070
and I can specify an ami for the device

00:10:23,800 --> 00:10:29,940
once it opens so when we do this let's

00:10:27,070 --> 00:10:32,830
go to contact tank do the key exchange

00:10:29,940 --> 00:10:36,370
and unlock the device you can see the

00:10:32,830 --> 00:10:39,540
device is now open so everything worked

00:10:36,370 --> 00:10:41,740
as expected so from the client side

00:10:39,540 --> 00:10:43,570
everything is working as expected the

00:10:41,740 --> 00:10:45,040
client doesn't know that the key was

00:10:43,570 --> 00:10:47,370
actually worth taking it so that's you

00:10:45,040 --> 00:10:47,370
exist

00:10:47,550 --> 00:10:54,430
let's come back to the presentation on

00:10:51,790 --> 00:10:56,320
the client side as I said it's hard to

00:10:54,430 --> 00:10:59,380
verify that the case will rotate it was

00:10:56,320 --> 00:11:01,690
basically everything works the same so

00:10:59,380 --> 00:11:03,700
how can we actually check if the case

00:11:01,690 --> 00:11:06,960
were rotated or not like it's possible

00:11:03,700 --> 00:11:10,300
to do basically you have to manually

00:11:06,960 --> 00:11:14,170
load the dot the metadata from the locks

00:11:10,300 --> 00:11:17,020
lock the preach go through every single

00:11:14,170 --> 00:11:18,550
device every single hook and actually

00:11:17,020 --> 00:11:21,340
compare what are the keys there are

00:11:18,550 --> 00:11:22,960
market in there you can also go to the

00:11:21,340 --> 00:11:25,480
tun server and see what keys the its

00:11:22,960 --> 00:11:27,790
advertising so it's possible to do not

00:11:25,480 --> 00:11:31,600
enforce bite not trivial and very highly

00:11:27,790 --> 00:11:33,730
here every phone and actually it's hard

00:11:31,600 --> 00:11:36,430
to even know what kind of configurations

00:11:33,730 --> 00:11:38,290
we are using like assisted ministration

00:11:36,430 --> 00:11:40,240
manager is like hundreds of devices

00:11:38,290 --> 00:11:44,890
probably they have hundreds of ten

00:11:40,240 --> 00:11:47,860
servers or TPM configurations so we go

00:11:44,890 --> 00:11:50,680
to here like ok I have here what kind of

00:11:47,860 --> 00:11:53,590
configuration I use it here obviously it

00:11:50,680 --> 00:11:57,070
should be documented but there shall be

00:11:53,590 --> 00:12:00,010
an easier way for us to get this kind of

00:11:57,070 --> 00:12:02,710
information so now we have some other

00:12:00,010 --> 00:12:05,100
billing issues that we are trying now to

00:12:02,710 --> 00:12:07,960
resolve improve the situation

00:12:05,100 --> 00:12:10,000
because the client-side we need to do

00:12:07,960 --> 00:12:12,130
some things like update the keys but we

00:12:10,000 --> 00:12:14,110
don't even know if they were rotated

00:12:12,130 --> 00:12:17,740
actually don't even know what kind of

00:12:14,110 --> 00:12:20,650
configuration we are using and now we

00:12:17,740 --> 00:12:23,800
have a few new sub comments like this

00:12:20,650 --> 00:12:25,660
Clavius locks list that's gonna display

00:12:23,800 --> 00:12:29,230
basically the configuration that's being

00:12:25,660 --> 00:12:32,050
used by a particular device the user is

00:12:29,230 --> 00:12:38,320
simple like it whether one the bind

00:12:32,050 --> 00:12:39,040
baseline pass the device and here's how

00:12:38,320 --> 00:12:44,580
it works

00:12:39,040 --> 00:12:49,240
Clavius looks least u minus D del V da 3

00:12:44,580 --> 00:12:52,750
so now I see that is what number one I'm

00:12:49,240 --> 00:12:55,480
using tangled as the plug-in and here's

00:12:52,750 --> 00:12:57,370
the configuration that is being used and

00:12:55,480 --> 00:13:01,630
the configuration I see here it's

00:12:57,370 --> 00:13:04,120
actually ready to be used like in tank

00:13:01,630 --> 00:13:06,310
itself in enclave's itself I can Clavius

00:13:04,120 --> 00:13:09,670
looks by it - the induced Desmond

00:13:06,310 --> 00:13:12,250
figuration as a - here so now I have a

00:13:09,670 --> 00:13:15,100
simple way to at least know what on

00:13:12,250 --> 00:13:19,570
servers are bound to or in case of TPM

00:13:15,100 --> 00:13:22,540
or TCR divided PCR IDs were using so it

00:13:19,570 --> 00:13:25,480
now simple to do that and we also are

00:13:22,540 --> 00:13:29,380
providing two new sub comments to help

00:13:25,480 --> 00:13:33,370
you with DES key rotation we said the

00:13:29,380 --> 00:13:37,500
clevis locks report uses are similar

00:13:33,370 --> 00:13:37,500
however we need to specify the slot so

00:13:37,620 --> 00:13:44,620
it's gonna tell us whether the keys that

00:13:41,020 --> 00:13:48,030
were using this device will rotate or

00:13:44,620 --> 00:13:52,720
not so I can use it

00:13:48,030 --> 00:14:02,320
Clavius looks report specify the device

00:13:52,720 --> 00:14:05,740
and a slot in always tell me oh this

00:14:02,320 --> 00:14:08,530
particular key that we have in our

00:14:05,740 --> 00:14:12,670
metadata is not Neandertal by the server

00:14:08,530 --> 00:14:16,900
so it was probably ho dated the same one

00:14:12,670 --> 00:14:18,830
with a second key all set shows this to

00:14:16,900 --> 00:14:20,930
us it actually acts as

00:14:18,830 --> 00:14:25,310
asks whether we want to regenerate their

00:14:20,930 --> 00:14:29,270
binding like to update the keys like the

00:14:25,310 --> 00:14:30,500
ones who actually rotate them yes so

00:14:29,270 --> 00:14:35,300
it's going to use the existing

00:14:30,500 --> 00:14:38,420
configuration and at this point I can

00:14:35,300 --> 00:14:46,160
again provide the on existing looks

00:14:38,420 --> 00:14:48,200
password and it's one of basically

00:14:46,160 --> 00:14:54,470
jewelry bind like okay let's rewind now

00:14:48,200 --> 00:14:56,870
we use the curent keys that we have case

00:14:54,470 --> 00:14:59,990
where success successfully rotated so if

00:14:56,870 --> 00:15:02,660
I for instance run the common again not

00:14:59,990 --> 00:15:09,110
particles okay the keys we are using are

00:15:02,660 --> 00:15:11,270
no current so this is basically to help

00:15:09,110 --> 00:15:12,860
you will take key rotation on the client

00:15:11,270 --> 00:15:13,310
side the service side was never a

00:15:12,860 --> 00:15:15,620
problem

00:15:13,310 --> 00:15:18,940
it's a very simple operation but on the

00:15:15,620 --> 00:15:21,710
client it was complicated

00:15:18,940 --> 00:15:24,950
so the third common that we are adding

00:15:21,710 --> 00:15:27,560
is the club's looks region this one is

00:15:24,950 --> 00:15:30,080
going to the rebinding and then in our

00:15:27,560 --> 00:15:32,450
example that it is right now it was

00:15:30,080 --> 00:15:37,720
actually use it from the report it offer

00:15:32,450 --> 00:15:41,180
to run it and we accepted it and right

00:15:37,720 --> 00:15:43,750
so this now we are going to show a demo

00:15:41,180 --> 00:15:47,030
which is basically what I just showed it

00:15:43,750 --> 00:15:49,730
in this case this demo as I say there's

00:15:47,030 --> 00:15:55,720
a single here it has both cleveson thing

00:15:49,730 --> 00:15:59,360
since I'm not demonstrating an actual

00:15:55,720 --> 00:16:03,590
unlock like I'm not rebooting the VM so

00:15:59,360 --> 00:16:06,980
this is perfect for our experience and

00:16:03,590 --> 00:16:13,250
the key rotation both display server in

00:16:06,980 --> 00:16:15,920
client side so here you have some useful

00:16:13,250 --> 00:16:19,840
links like the probably the projects are

00:16:15,920 --> 00:16:22,310
open-source so everyone is welcome and

00:16:19,840 --> 00:16:26,480
encouraged to contribute so get evolve

00:16:22,310 --> 00:16:30,240
it here is tank and clevis and here are

00:16:26,480 --> 00:16:33,000
two useful touts ends lines from

00:16:30,240 --> 00:16:35,570
both Nathaniel McCollum from death

00:16:33,000 --> 00:16:38,490
called a couple a couple of years ago

00:16:35,570 --> 00:16:40,860
securing automate decryption basically

00:16:38,490 --> 00:16:42,780
in here in eighteen traders leg and

00:16:40,860 --> 00:16:46,680
clevis and all the mathematical details

00:16:42,780 --> 00:16:48,180
of that and there's a second Tao

00:16:46,680 --> 00:16:52,050
this one has more recent I believe from

00:16:48,180 --> 00:16:54,510
last week clubs and turns securing our

00:16:52,050 --> 00:16:56,820
secrets at rest so here is the actual

00:16:54,510 --> 00:17:02,430
power to the video it was a very

00:16:56,820 --> 00:17:34,110
interesting town and basically that was

00:17:02,430 --> 00:17:36,420
it so please go ahead irritation no okay

00:17:34,110 --> 00:17:44,210
so the question was if we can base now

00:17:36,420 --> 00:17:44,210
to make this yes we can me check

00:17:47,420 --> 00:17:51,680
well it looks report

00:17:55,200 --> 00:18:01,590
so basically you can specify both are

00:17:59,070 --> 00:18:04,409
quiet mode so it doesn't really prompt

00:18:01,590 --> 00:18:06,120
anything and there is also mines there

00:18:04,409 --> 00:18:09,690
like you are ready answering the

00:18:06,120 --> 00:18:19,440
question if it should regenerate so you

00:18:09,690 --> 00:18:22,080
can strip this anyway pass yeah you can

00:18:19,440 --> 00:18:24,659
you can automate this basically I mean

00:18:22,080 --> 00:18:27,510
it was total of that as a possibility

00:18:24,659 --> 00:18:42,419
and we can do it I don't remember all

00:18:27,510 --> 00:18:45,269
the details but it's fortunately yes

00:18:42,419 --> 00:18:52,320
he's asking if how we can protect the

00:18:45,269 --> 00:18:56,309
key okay in actually that's an area that

00:18:52,320 --> 00:18:58,830
I'm not an expert so basically this key

00:18:56,309 --> 00:19:01,409
exchange does that for you like it

00:18:58,830 --> 00:19:03,120
protects that for you that first talk

00:19:01,409 --> 00:19:07,710
that I mentioned is gonna answer your

00:19:03,120 --> 00:19:09,830
question yes I mean TLS is not even

00:19:07,710 --> 00:19:09,830
necessary

00:19:10,250 --> 00:19:35,519
the secret never what do you mean not a

00:19:32,880 --> 00:19:37,320
Nicky Byrne to us usually every server

00:19:35,519 --> 00:19:44,309
is gonna have unique keys I mean that's

00:19:37,320 --> 00:19:46,260
the recommended way for the point sorry

00:19:44,309 --> 00:19:49,540
okay

00:19:46,260 --> 00:19:52,450
now every time you bind a device on the

00:19:49,540 --> 00:19:54,670
client-side a new key is going to be

00:19:52,450 --> 00:19:56,980
generated with the same entropy of the

00:19:54,670 --> 00:19:59,980
master key so we are going to prove that

00:19:56,980 --> 00:20:03,130
key using the exchange and re gonna

00:19:59,980 --> 00:20:05,890
start that encrypted so when we do the

00:20:03,130 --> 00:20:09,370
exchange to retrieve the D key for

00:20:05,890 --> 00:20:11,650
decryption then we unlock but every pass

00:20:09,370 --> 00:20:15,900
phrase that is unique and aus from the

00:20:11,650 --> 00:20:33,700
server side every key of a perk is also

00:20:15,900 --> 00:20:36,400
unique migrate to hell

00:20:33,700 --> 00:20:39,430
8 since you probably have the question

00:20:36,400 --> 00:20:43,810
was how can we migrate up 10 server

00:20:39,430 --> 00:20:45,550
running on how 7 to hell 8 basically not

00:20:43,810 --> 00:20:48,310
much change in terms of semantics of

00:20:45,550 --> 00:20:51,040
configuration so I suppose if you have

00:20:48,310 --> 00:20:52,780
clients using the keys that you have you

00:20:51,040 --> 00:20:54,100
are going to be directed those like

00:20:52,780 --> 00:20:56,410
they're going to on installation hey

00:20:54,100 --> 00:21:00,490
wait and get the keys that you have

00:20:56,410 --> 00:21:04,960
available in they worthy be thanked

00:21:00,490 --> 00:21:07,690
those are the keys just hope the keys

00:21:04,960 --> 00:21:10,180
start the tongue server it should

00:21:07,690 --> 00:21:18,410
advertise this your clients you talk to

00:21:10,180 --> 00:21:27,030
them and it will work yes

00:21:18,410 --> 00:21:30,630
yes ideally ideally were gonna use like

00:21:27,030 --> 00:21:34,110
a configuration like this

00:21:30,630 --> 00:21:36,150
SSS example like it at least two or

00:21:34,110 --> 00:21:38,430
three or four servers for high

00:21:36,150 --> 00:21:40,290
availability but in terms of mega ratio

00:21:38,430 --> 00:21:53,430
just copy your keys to the new server in

00:21:40,290 --> 00:21:55,460
one okay sorry could you repeat the

00:21:53,430 --> 00:21:55,460
question

00:22:00,170 --> 00:22:07,110
no you mean two separate she found them

00:22:05,040 --> 00:22:08,550
so the question he's asking if in case

00:22:07,110 --> 00:22:11,670
of high availability you have to

00:22:08,550 --> 00:22:14,220
separate database actually they are two

00:22:11,670 --> 00:22:16,380
different machines if you are following

00:22:14,220 --> 00:22:18,210
the recommendations each of them have

00:22:16,380 --> 00:22:21,210
you need a unique pair of keys they are

00:22:18,210 --> 00:22:22,980
not the same so when you are gonna do

00:22:21,210 --> 00:22:26,040
the binding it's actually gonna ask you

00:22:22,980 --> 00:22:28,410
to trust the keys from all the server

00:22:26,040 --> 00:22:30,240
listed so you're gonna trust twice in

00:22:28,410 --> 00:22:33,920
stays like the keys from the first

00:22:30,240 --> 00:22:33,920
server and the kids from the

00:22:44,360 --> 00:22:47,770
[Music]

00:22:51,000 --> 00:23:04,170
Oh what matters in these cases that

00:23:02,220 --> 00:23:07,530
threshold one like if you can reach one

00:23:04,170 --> 00:23:11,640
of them you can decrypt the data like in

00:23:07,530 --> 00:23:13,740
terms of load policy it's not from if a

00:23:11,640 --> 00:23:15,750
difference correctly it's gonna resolve

00:23:13,740 --> 00:23:20,040
maybe a different server every time is

00:23:15,750 --> 00:23:21,600
that Oh several yeah in this case you

00:23:20,040 --> 00:23:26,310
have to make sure at least the keys are

00:23:21,600 --> 00:23:28,590
let's say I mean if you have you have to

00:23:26,310 --> 00:23:31,470
first bind two of them like this like a

00:23:28,590 --> 00:23:33,330
list of them and then when you are

00:23:31,470 --> 00:23:33,780
resolving where it basically dropped one

00:23:33,330 --> 00:23:37,800
of them

00:23:33,780 --> 00:23:39,810
oh yeah randomly if those keys are there

00:23:37,800 --> 00:23:44,520
was that it was buying to bounce you

00:23:39,810 --> 00:23:46,710
it's gonna work so it's possible to do

00:23:44,520 --> 00:23:48,990
it but you probably would have to list

00:23:46,710 --> 00:23:52,350
each individually like the ten of them

00:23:48,990 --> 00:24:11,880
will have ten you listed when you're

00:23:52,350 --> 00:24:12,600
resolving probably resolve yes that's

00:24:11,880 --> 00:24:14,460
one possibility

00:24:12,600 --> 00:24:16,140
like copy the keys it's not a really

00:24:14,460 --> 00:24:17,790
recommend at all you can be eventually

00:24:16,140 --> 00:24:21,720
like if you are adding or read those in

00:24:17,790 --> 00:24:25,100
the number you can rebind like probably

00:24:21,720 --> 00:24:25,100
it's simple but that can be automated

00:24:31,770 --> 00:25:20,160
so yes yes yes

00:25:15,650 --> 00:25:22,920
basically we could like continue the

00:25:20,160 --> 00:25:27,179
JSON array should put a comma here put

00:25:22,920 --> 00:25:29,880
the name of the order you could even use

00:25:27,179 --> 00:25:32,130
SSS recursively like in the first step

00:25:29,880 --> 00:25:34,490
you want to validate a game in a second

00:25:32,130 --> 00:25:37,410
step to unroll it a set of Tong servers

00:25:34,490 --> 00:25:42,250
so it's possible and I'm afraid we're

00:25:37,410 --> 00:25:45,010
out of time now so thank you everyone

00:25:42,250 --> 00:25:47,070
[Applause]

00:25:45,010 --> 00:25:47,070

YouTube URL: https://www.youtube.com/watch?v=d4GmJPvhjcY


