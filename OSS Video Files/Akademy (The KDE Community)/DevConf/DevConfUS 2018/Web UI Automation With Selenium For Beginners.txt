Title: Web UI Automation With Selenium For Beginners
Publication date: 2019-02-25
Playlist: DevConfUS 2018
Description: 
	This talk will cover the process of designing and developing automated tests to exercise a web-based application.

First, I will talk about Selenium IDE and Scirroco to illustrate the process of interacting with a live web browser instance and how to identify and perform actions on the web elements found within a web page.

I will then programmatically create a web browser instance which will be used to interact with a web application, all done from the comfort of a Python console.

We will graduate to writing actual test modules, exploring Python's Unittest module and PyTest, comparing and contrasting how test cases can be written in each format.

We will wrap things up with a detailed discussion about using SauceLabs and Travis to run your automated tests across different web browsers.
Captions: 
	00:00:03,640 --> 00:00:09,019
it's kind of weirdly spelled but that's

00:00:07,340 --> 00:00:11,599
how that's the pronunciation soggy

00:00:09,019 --> 00:00:13,790
Maciel I'm a senior manager of quality

00:00:11,599 --> 00:00:15,709
engineering at Red Hat for the last six

00:00:13,790 --> 00:00:17,900
plus years almost seven years now I've

00:00:15,709 --> 00:00:20,960
been building quality engineering teams

00:00:17,900 --> 00:00:23,300
responsible for testing automating tests

00:00:20,960 --> 00:00:24,950
for several different products

00:00:23,300 --> 00:00:26,810
everybody hat you can see some of them

00:00:24,950 --> 00:00:29,420
listed here such as Red Hat satellite

00:00:26,810 --> 00:00:34,640
the Pope project which is an upstream

00:00:29,420 --> 00:00:37,010
project ansible tower and I like to talk

00:00:34,640 --> 00:00:39,170
to you today about doing web UI

00:00:37,010 --> 00:00:43,010
automation specifically using selenium

00:00:39,170 --> 00:00:45,140
and Python you'll probably notice that

00:00:43,010 --> 00:00:48,110
the I don't have a slide so I'm actually

00:00:45,140 --> 00:00:50,030
using the web page to show you the data

00:00:48,110 --> 00:00:52,190
that's the reason why I chose to do that

00:00:50,030 --> 00:00:54,020
and not actually have slides from one

00:00:52,190 --> 00:00:56,000
thing you can follow along so you can

00:00:54,020 --> 00:00:58,370
either clone the git repository that's

00:00:56,000 --> 00:01:01,280
right there on the site you can visit

00:00:58,370 --> 00:01:04,339
that page which is DEFCON for USA a team

00:01:01,280 --> 00:01:06,290
that read the docs that I own and the

00:01:04,339 --> 00:01:08,659
reason why I decided to do this is

00:01:06,290 --> 00:01:10,520
because they've the whole idea about

00:01:08,659 --> 00:01:12,829
DEFCON Fizz about open source right so

00:01:10,520 --> 00:01:15,889
sharing really trying to collaborate

00:01:12,829 --> 00:01:18,439
with other people so a couple of things

00:01:15,889 --> 00:01:20,840
that you get out of if you were to clone

00:01:18,439 --> 00:01:23,270
this git repository for one thing you're

00:01:20,840 --> 00:01:25,999
gonna have all the sort of the source

00:01:23,270 --> 00:01:27,950
code for the document itself I know that

00:01:25,999 --> 00:01:30,350
sometimes people have to write documents

00:01:27,950 --> 00:01:33,170
and they want to use maybe something

00:01:30,350 --> 00:01:35,299
that is easy for you to script against

00:01:33,170 --> 00:01:38,119
or write code so restructuredtext is

00:01:35,299 --> 00:01:40,459
what i've used here it can be a little

00:01:38,119 --> 00:01:42,770
bit daunting and scary to write anything

00:01:40,459 --> 00:01:44,389
using restructure text so if anything if

00:01:42,770 --> 00:01:45,799
you don't want to do any of anything

00:01:44,389 --> 00:01:47,539
related to automation you don't want to

00:01:45,799 --> 00:01:49,490
know about Python anything at least you

00:01:47,539 --> 00:01:52,429
can use this to say well this is how you

00:01:49,490 --> 00:01:55,909
build a document with images and tables

00:01:52,429 --> 00:01:57,920
and links and that stuff so I'm hoping

00:01:55,909 --> 00:01:59,659
that you will don't want to do

00:01:57,920 --> 00:02:01,700
automation and you want to use Python

00:01:59,659 --> 00:02:03,649
and selenium but this is one of the

00:02:01,700 --> 00:02:06,139
things you can get out of the other

00:02:03,649 --> 00:02:07,270
thing that I want to also point out is

00:02:06,139 --> 00:02:09,280
that I am

00:02:07,270 --> 00:02:12,430
going to try to cover as much as I can

00:02:09,280 --> 00:02:15,010
in about 30 minutes that's a lot to

00:02:12,430 --> 00:02:17,319
unpack so I'll do my best but once again

00:02:15,010 --> 00:02:20,500
if you clone this repository if you just

00:02:17,319 --> 00:02:22,450
bookmark this page you will actually get

00:02:20,500 --> 00:02:24,160
access to all the configuration files

00:02:22,450 --> 00:02:28,090
that I'm using here I'm gonna show you

00:02:24,160 --> 00:02:30,610
how to automate stuff using Python I'm

00:02:28,090 --> 00:02:33,430
going to show you how to use PI test and

00:02:30,610 --> 00:02:35,110
then I am actually also going to show

00:02:33,430 --> 00:02:36,549
you how to plug it all in into a

00:02:35,110 --> 00:02:39,670
continuous integration continuous

00:02:36,549 --> 00:02:41,349
delivery environment so what's in this

00:02:39,670 --> 00:02:43,299
whole thing for you why am I taking so

00:02:41,349 --> 00:02:45,519
much time of the 30 minutes that I have

00:02:43,299 --> 00:02:48,640
to talk about this is that I interview

00:02:45,519 --> 00:02:50,890
people a lot for jobs and a lot of times

00:02:48,640 --> 00:02:52,599
they don't have they they come in and

00:02:50,890 --> 00:02:55,540
they say well I've done this I read this

00:02:52,599 --> 00:02:57,940
or I study this in college but I don't

00:02:55,540 --> 00:03:01,989
have anything to show for if you take

00:02:57,940 --> 00:03:04,450
this and you start modifying it at least

00:03:01,989 --> 00:03:06,670
you have some kind of program portfolio

00:03:04,450 --> 00:03:09,250
that you can bring into your interviews

00:03:06,670 --> 00:03:12,370
and say I know how to write tests I know

00:03:09,250 --> 00:03:15,010
how to use PI tests I know how to use

00:03:12,370 --> 00:03:17,139
continuous integration so I think that

00:03:15,010 --> 00:03:19,810
you know ultimately if you could use

00:03:17,139 --> 00:03:22,000
this to hopefully get your next position

00:03:19,810 --> 00:03:24,940
or you know at least to brush up on your

00:03:22,000 --> 00:03:27,310
skills right now and choose cents the

00:03:24,940 --> 00:03:30,160
true spirit of open-source what I do ask

00:03:27,310 --> 00:03:31,840
is that if you make any changes and if

00:03:30,160 --> 00:03:34,180
you make any improvements please send me

00:03:31,840 --> 00:03:35,769
a patch we'll apply it I will give you

00:03:34,180 --> 00:03:37,510
credit for it and then you can help me

00:03:35,769 --> 00:03:40,870
improve the document for anyone else who

00:03:37,510 --> 00:03:42,849
wants to use it okay so there's a lot

00:03:40,870 --> 00:03:47,140
like I said that I want to unpack here

00:03:42,849 --> 00:03:51,100
but when we talk about web UI automation

00:03:47,140 --> 00:03:53,530
your job as a quality AJ or as a tester

00:03:51,100 --> 00:03:55,990
is to actually try to identify the

00:03:53,530 --> 00:03:57,970
things there are the elements that are

00:03:55,990 --> 00:04:01,060
on the web page so that you can interact

00:03:57,970 --> 00:04:03,100
with it and I'm not gonna lie to you web

00:04:01,060 --> 00:04:07,300
UI automation is a pain too but it's

00:04:03,100 --> 00:04:10,930
hard especially I would say that writing

00:04:07,300 --> 00:04:14,080
good robust web UI tests it's really

00:04:10,930 --> 00:04:15,310
hard to do that because you have to I'm

00:04:14,080 --> 00:04:19,180
gonna show you this little picture here

00:04:15,310 --> 00:04:22,480
this is a dumb object you can think of a

00:04:19,180 --> 00:04:24,070
web page as a two ways that you can

00:04:22,480 --> 00:04:25,419
interact with a web page you can look at

00:04:24,070 --> 00:04:28,419
the source code for it which is the HTML

00:04:25,419 --> 00:04:30,730
or you can think of it as a tree

00:04:28,419 --> 00:04:32,800
representation where you have this dumb

00:04:30,730 --> 00:04:34,660
object and you can see that you have the

00:04:32,800 --> 00:04:36,370
top node that represents the entire

00:04:34,660 --> 00:04:39,130
webpage that you're working on and then

00:04:36,370 --> 00:04:41,560
for each you know that you see here it

00:04:39,130 --> 00:04:43,810
either represents a section of the page

00:04:41,560 --> 00:04:47,350
or an element that you want to interact

00:04:43,810 --> 00:04:50,290
with so why is this such a pain to

00:04:47,350 --> 00:04:52,479
actually do web UI automation is that a

00:04:50,290 --> 00:04:54,520
lot of times designers and the

00:04:52,479 --> 00:04:57,400
developers that will change the look and

00:04:54,520 --> 00:04:59,200
feel of the page and depending on how

00:04:57,400 --> 00:05:00,729
you choose I'm gonna show you some of

00:04:59,200 --> 00:05:03,310
those schemes some strategies for you to

00:05:00,729 --> 00:05:06,250
identify the elements here any which

00:05:03,310 --> 00:05:08,500
strategy to choose if you're relying on

00:05:06,250 --> 00:05:10,900
an element to be on this node here so

00:05:08,500 --> 00:05:13,990
it's like two nodes deep or three nodes

00:05:10,900 --> 00:05:16,840
deep and you build your strategy around

00:05:13,990 --> 00:05:19,750
something called XPath if that element

00:05:16,840 --> 00:05:21,880
moves to another node then your code is

00:05:19,750 --> 00:05:23,770
broken the XPath expression that you're

00:05:21,880 --> 00:05:25,960
gonna write is just it's completely

00:05:23,770 --> 00:05:28,690
useless right so you have you find

00:05:25,960 --> 00:05:31,150
yourself continuously having to rewrite

00:05:28,690 --> 00:05:33,580
your expressions your strategy the other

00:05:31,150 --> 00:05:35,440
thing that is also

00:05:33,580 --> 00:05:38,620
I guess I should point out it's not

00:05:35,440 --> 00:05:40,270
really maybe may not be obvious but the

00:05:38,620 --> 00:05:42,130
whole point is you want to automate and

00:05:40,270 --> 00:05:44,800
computers are much faster than the human

00:05:42,130 --> 00:05:46,540
beings so a lot of times when you work

00:05:44,800 --> 00:05:49,150
on a webpage people put like a lot of

00:05:46,540 --> 00:05:51,520
you know ajaxy things and there's a

00:05:49,150 --> 00:05:53,170
bunch of JavaScript of frameworks that

00:05:51,520 --> 00:05:54,400
people are using there so sometimes you

00:05:53,170 --> 00:05:56,170
have to say you know when you're

00:05:54,400 --> 00:05:58,600
devising your test I'm gonna click on

00:05:56,170 --> 00:06:00,850
something something is gonna happen I

00:05:58,600 --> 00:06:03,190
need to make sure that my code is smart

00:06:00,850 --> 00:06:06,190
enough to wait for that one thing that

00:06:03,190 --> 00:06:08,380
I'm expecting to happen so it's really

00:06:06,190 --> 00:06:12,100
an art it's a painter but so my advice

00:06:08,380 --> 00:06:14,440
is that try to keep it to you know keep

00:06:12,100 --> 00:06:16,600
your tests uiautomation as few as

00:06:14,440 --> 00:06:19,150
possible make them in robust making

00:06:16,600 --> 00:06:22,180
cover as much ground as you can to like

00:06:19,150 --> 00:06:24,340
for integration tests unless your job is

00:06:22,180 --> 00:06:25,570
actually to do web UI automation I guess

00:06:24,340 --> 00:06:28,420
at that point they don't have much of a

00:06:25,570 --> 00:06:30,310
choice but you can the way they

00:06:28,420 --> 00:06:31,870
integrated to interact with the elements

00:06:30,310 --> 00:06:36,310
and the elements like buttons menus

00:06:31,870 --> 00:06:38,770
images why not is to find a locator and

00:06:36,310 --> 00:06:40,540
if you are here earlier for an issues

00:06:38,770 --> 00:06:42,220
talk she was talking about how you can

00:06:40,540 --> 00:06:43,600
look at the source code for example of a

00:06:42,220 --> 00:06:46,150
web page and this is the you know

00:06:43,600 --> 00:06:48,700
Google's search box there I am

00:06:46,150 --> 00:06:51,100
highlighting the the specifically the

00:06:48,700 --> 00:06:54,100
search box because in there I can look

00:06:51,100 --> 00:06:55,960
at information that I can use right now

00:06:54,100 --> 00:06:59,290
it's what I have highlighted here is the

00:06:55,960 --> 00:07:01,270
ID of the box which is LST - IB and

00:06:59,290 --> 00:07:04,780
that's gonna be something that I'm gonna

00:07:01,270 --> 00:07:06,970
be using for the demo here so you can

00:07:04,780 --> 00:07:08,860
search for things by text which is what

00:07:06,970 --> 00:07:12,730
I recommend then you can search for

00:07:08,860 --> 00:07:14,670
things by their CSS IDs or CSS values

00:07:12,730 --> 00:07:18,940
and that's the list that I have here and

00:07:14,670 --> 00:07:20,740
tag names the HTML tag names I put XPath

00:07:18,940 --> 00:07:22,480
as the last option here because I'm

00:07:20,740 --> 00:07:25,000
trying to encourage people not to use it

00:07:22,480 --> 00:07:27,430
and the reason why is you know for one

00:07:25,000 --> 00:07:30,160
thing it's pretty fragile if things move

00:07:27,430 --> 00:07:32,740
around then your XPath changes and then

00:07:30,160 --> 00:07:34,510
you break a test but some XPath

00:07:32,740 --> 00:07:36,700
expressions are evil they're really

00:07:34,510 --> 00:07:37,570
really hard to understand so like this

00:07:36,700 --> 00:07:39,910
example here

00:07:37,570 --> 00:07:41,620
because I don't have a good way to get a

00:07:39,910 --> 00:07:43,480
hold of the element that I want I need

00:07:41,620 --> 00:07:46,060
to find an element and then walk

00:07:43,480 --> 00:07:48,100
backwards to find the one that I wanted

00:07:46,060 --> 00:07:49,690
because there was a no clear way direct

00:07:48,100 --> 00:07:54,690
way for me to get to the element that I

00:07:49,690 --> 00:07:54,690
wanted to to get to so that's my advice

00:07:54,990 --> 00:08:02,950
so selenium is the framework that a lot

00:08:01,180 --> 00:08:05,890
of people use so aneasha talked about

00:08:02,950 --> 00:08:07,450
protector and Jasmine earlier today but

00:08:05,890 --> 00:08:09,400
selenium is the one that I'm really used

00:08:07,450 --> 00:08:11,410
to and I think it seems to predominate

00:08:09,400 --> 00:08:14,290
around like people who are doing web UI

00:08:11,410 --> 00:08:16,300
automation but it works on it works on

00:08:14,290 --> 00:08:19,080
different platforms it's open source

00:08:16,300 --> 00:08:21,280
which is pretty cool and it also has

00:08:19,080 --> 00:08:22,900
bindings for several different

00:08:21,280 --> 00:08:25,210
programming languages we're gonna be

00:08:22,900 --> 00:08:27,340
talking about Python today but it does

00:08:25,210 --> 00:08:30,700
offer buying these for other languages

00:08:27,340 --> 00:08:33,849
and you require what you do is we saw

00:08:30,700 --> 00:08:37,030
the selenium application the framework

00:08:33,849 --> 00:08:39,790
itself for your system and then it

00:08:37,030 --> 00:08:42,640
provides you with a domain-specific

00:08:39,790 --> 00:08:45,730
language that gives you helper methods

00:08:42,640 --> 00:08:48,130
to interact with the web elements so it

00:08:45,730 --> 00:08:51,460
lets you click on things select things

00:08:48,130 --> 00:08:53,830
scroll through the web page really

00:08:51,460 --> 00:08:55,870
control like the elements of the webpage

00:08:53,830 --> 00:08:57,550
and in addition to selenium you need

00:08:55,870 --> 00:08:59,620
something called a webdriver which lets

00:08:57,550 --> 00:09:00,220
you interface with the with an actual

00:08:59,620 --> 00:09:04,090
browser

00:09:00,220 --> 00:09:06,160
okay so Firefox Chrome Microsoft edge

00:09:04,090 --> 00:09:07,750
Safari or anything like that so you need

00:09:06,160 --> 00:09:10,180
the combination of those two to actually

00:09:07,750 --> 00:09:13,540
do web UI automation

00:09:10,180 --> 00:09:15,460
one easy way that used to be really nice

00:09:13,540 --> 00:09:16,930
tool and it's still there is but this

00:09:15,460 --> 00:09:20,110
changed a little bit it's selenium ID

00:09:16,930 --> 00:09:23,230
and it's an add-on that you install in

00:09:20,110 --> 00:09:25,210
your on your browser the old version was

00:09:23,230 --> 00:09:27,970
in my opinion was a little bit easier

00:09:25,210 --> 00:09:29,950
they provided a lot more value but it

00:09:27,970 --> 00:09:31,740
was a pain to install it required an

00:09:29,950 --> 00:09:35,080
older version of Firefox

00:09:31,740 --> 00:09:37,300
one of the advantages of it is that the

00:09:35,080 --> 00:09:39,670
selenium IDE lets you record your

00:09:37,300 --> 00:09:42,250
interaction so you turn it on and you

00:09:39,670 --> 00:09:44,290
start clicking away and type in stuff

00:09:42,250 --> 00:09:46,150
and moving things around the web UI it

00:09:44,290 --> 00:09:48,100
records every step of the way everything

00:09:46,150 --> 00:09:50,230
that you've done and then when you are

00:09:48,100 --> 00:09:51,340
done you can just replay it and you

00:09:50,230 --> 00:09:52,900
could literally say this is my

00:09:51,340 --> 00:09:55,180
automation though I wouldn't go as far

00:09:52,900 --> 00:09:58,690
to say that that's automation but but

00:09:55,180 --> 00:10:01,240
you could literally do that right so the

00:09:58,690 --> 00:10:03,520
other advantage that the old version of

00:10:01,240 --> 00:10:07,510
the selenium idea head it was that it

00:10:03,520 --> 00:10:09,400
let you export things in two different

00:10:07,510 --> 00:10:11,080
languages so all the actions use the

00:10:09,400 --> 00:10:14,440
language the the main specific language

00:10:11,080 --> 00:10:16,420
click select go get stuff like that but

00:10:14,440 --> 00:10:17,950
then you translated that into Python so

00:10:16,420 --> 00:10:19,510
now you're really closer to have the

00:10:17,950 --> 00:10:22,960
full automation because you could just

00:10:19,510 --> 00:10:24,880
use this thing and then record it export

00:10:22,960 --> 00:10:27,520
it and have your Python code and then

00:10:24,880 --> 00:10:28,660
you were done the new version which is

00:10:27,520 --> 00:10:30,610
what you're seeing on the right hand

00:10:28,660 --> 00:10:32,740
side of the screen there it actually

00:10:30,610 --> 00:10:34,390
there are good things about it the bad

00:10:32,740 --> 00:10:36,520
things the good things is that it's a

00:10:34,390 --> 00:10:37,510
whole it's really easy to install so if

00:10:36,520 --> 00:10:40,060
you have the latest version of Firefox

00:10:37,510 --> 00:10:42,250
or now it supports Chrome so what

00:10:40,060 --> 00:10:44,910
whichever browser you have you can just

00:10:42,250 --> 00:10:46,800
install it through the add-ons page and

00:10:44,910 --> 00:10:48,810
there's nothing else for you to do so

00:10:46,800 --> 00:10:50,370
that's pretty cool the bad thing is

00:10:48,810 --> 00:10:52,440
about the new version is that they

00:10:50,370 --> 00:10:54,270
removed all the bells and whistles that

00:10:52,440 --> 00:10:56,070
they had and one of them is not being

00:10:54,270 --> 00:10:58,050
able to export to Python so that kind of

00:10:56,070 --> 00:10:59,490
stinks but what I want to show you here

00:10:58,050 --> 00:11:01,500
is that you know just to give you an

00:10:59,490 --> 00:11:03,180
idea what web UI automation really is

00:11:01,500 --> 00:11:06,630
all about so I'm going to hit the record

00:11:03,180 --> 00:11:11,630
button here and now I'm just going to

00:11:06,630 --> 00:11:11,630
give you an example of going to

00:11:12,950 --> 00:11:15,950
google.com

00:11:16,450 --> 00:11:20,620
and then I'm gonna click here on the

00:11:18,700 --> 00:11:22,480
search box on the right hand side you

00:11:20,620 --> 00:11:24,430
can see that there are some two steps

00:11:22,480 --> 00:11:27,540
two commands were executed and recorded

00:11:24,430 --> 00:11:30,280
there's an open slash slash is the root

00:11:27,540 --> 00:11:31,180
address that I typed right here so

00:11:30,280 --> 00:11:33,130
Google com

00:11:31,180 --> 00:11:36,610
it says that I clicked at something that

00:11:33,130 --> 00:11:38,380
has an ID equals two LST - I be to

00:11:36,610 --> 00:11:40,090
remember the screen the screen shot that

00:11:38,380 --> 00:11:43,870
I showed before that's the Google search

00:11:40,090 --> 00:11:46,840
box now I am going to you know type some

00:11:43,870 --> 00:11:50,980
text so I'm gonna gonna search for a Red

00:11:46,840 --> 00:11:54,640
Hat and then I'm going to hit the search

00:11:50,980 --> 00:11:57,460
button and it perform the search right

00:11:54,640 --> 00:12:00,420
all the steps were recorded on the right

00:11:57,460 --> 00:12:03,700
hand side so if I stop recording now I

00:12:00,420 --> 00:12:05,200
can change the speed let me make because

00:12:03,700 --> 00:12:06,490
this goes really fast and it goes back

00:12:05,200 --> 00:12:08,830
to what I said about computers being

00:12:06,490 --> 00:12:10,420
really fast but I can replay this and

00:12:08,830 --> 00:12:12,460
what you should see now is that it's

00:12:10,420 --> 00:12:14,650
going to open Google it's going to type

00:12:12,460 --> 00:12:17,470
right hand in the search box it's going

00:12:14,650 --> 00:12:19,540
to hit the Google search button and you

00:12:17,470 --> 00:12:22,210
know it's it's going to display the list

00:12:19,540 --> 00:12:24,010
so I'm running really slowly here for

00:12:22,210 --> 00:12:26,080
you guys to see it right all the steps

00:12:24,010 --> 00:12:29,530
of the way but this is I guess an

00:12:26,080 --> 00:12:31,450
example why automation right so it's too

00:12:29,530 --> 00:12:34,630
bad that the new version of the ID has

00:12:31,450 --> 00:12:36,130
changed but I recommend you play around

00:12:34,630 --> 00:12:39,820
see if you like it it gives you good

00:12:36,130 --> 00:12:41,320
ideas as you are recording your actions

00:12:39,820 --> 00:12:45,100
you can actually right click on the

00:12:41,320 --> 00:12:47,290
browser and he adds a extra menu option

00:12:45,100 --> 00:12:49,630
that gives you things for example you

00:12:47,290 --> 00:12:52,420
want to say you know verify that a

00:12:49,630 --> 00:12:54,610
certain text is present verify there's

00:12:52,420 --> 00:12:56,500
certain field is present before you move

00:12:54,610 --> 00:12:58,030
on to the next thing or a certain that

00:12:56,500 --> 00:12:59,980
the thing that I'm looking for is there

00:12:58,030 --> 00:13:02,910
so you can see all of that expose

00:12:59,980 --> 00:13:05,790
through the interface

00:13:02,910 --> 00:13:07,920
so trying to move really quickly here

00:13:05,790 --> 00:13:09,840
solanum idea is a really nice tool I

00:13:07,920 --> 00:13:11,340
hope that you read through the web page

00:13:09,840 --> 00:13:13,490
and there's some points there to talk

00:13:11,340 --> 00:13:15,840
about Vantage's and disadvantages of it

00:13:13,490 --> 00:13:17,520
Scirocco is another one it's the same

00:13:15,840 --> 00:13:20,220
exact thing that's the same exact thing

00:13:17,520 --> 00:13:24,210
as selenium IDE but it's for Chrome only

00:13:20,220 --> 00:13:26,130
it doesn't really give you the same

00:13:24,210 --> 00:13:27,570
against the same experience so a new ID

00:13:26,130 --> 00:13:30,000
does but it's still there

00:13:27,570 --> 00:13:31,470
now the selling ID supports Chrome I

00:13:30,000 --> 00:13:34,920
would recommend you to use selenium ID

00:13:31,470 --> 00:13:36,960
just to play around but the real magic

00:13:34,920 --> 00:13:39,000
happens when you start automating things

00:13:36,960 --> 00:13:40,560
using Python or some other programming

00:13:39,000 --> 00:13:42,030
language right because now we have

00:13:40,560 --> 00:13:44,340
really full control over it

00:13:42,030 --> 00:13:47,010
and the idea here is as I mentioned

00:13:44,340 --> 00:13:49,200
earlier you want to use the selenium

00:13:47,010 --> 00:13:51,720
module and expose a lot of different

00:13:49,200 --> 00:13:54,150
methods and these it might have been at

00:13:51,720 --> 00:13:55,860
the very intuitive because the name of

00:13:54,150 --> 00:13:58,200
the method tells you exactly what you're

00:13:55,860 --> 00:14:00,990
trying to accomplish so five element by

00:13:58,200 --> 00:14:02,640
ID find element by expats and then you

00:14:00,990 --> 00:14:04,500
know should be very intuitive what your

00:14:02,640 --> 00:14:06,450
what you're attempting to do and I would

00:14:04,500 --> 00:14:08,270
say that most methods are named in such

00:14:06,450 --> 00:14:11,070
a way that are very easy to follow along

00:14:08,270 --> 00:14:13,950
right so you can see for example here

00:14:11,070 --> 00:14:15,960
are some fragments of HTML and this is

00:14:13,950 --> 00:14:17,730
the this box here in the bottom you can

00:14:15,960 --> 00:14:20,100
see this is how you would use selenium

00:14:17,730 --> 00:14:22,170
to access something by ID something by

00:14:20,100 --> 00:14:24,690
the class name something by you know tag

00:14:22,170 --> 00:14:27,630
name and so on and so forth so it's

00:14:24,690 --> 00:14:29,310
pretty straightforward to install this

00:14:27,630 --> 00:14:34,110
to get it running all you have to do is

00:14:29,310 --> 00:14:36,690
if install selenium packages nowadays

00:14:34,110 --> 00:14:39,660
right and then you want to install the

00:14:36,690 --> 00:14:41,910
webdriver for the specific browser that

00:14:39,660 --> 00:14:44,430
you want to interact with control I'm

00:14:41,910 --> 00:14:47,460
gonna recommend Google Chrome only

00:14:44,430 --> 00:14:48,940
because Firefox requires something

00:14:47,460 --> 00:14:53,140
called a gecko driver

00:14:48,940 --> 00:14:56,410
and Firefox has been training out newer

00:14:53,140 --> 00:14:58,420
versions of itself quicker than the

00:14:56,410 --> 00:15:01,270
gecko driver guys can actually update

00:14:58,420 --> 00:15:03,070
their drivers so your experience is not

00:15:01,270 --> 00:15:04,690
going to be that great so I don't come

00:15:03,070 --> 00:15:07,570
and go with chrome and you're gonna be

00:15:04,690 --> 00:15:10,170
pretty safe right if you're on a Mac you

00:15:07,570 --> 00:15:12,910
can just brew cask install chrome driver

00:15:10,170 --> 00:15:15,160
but if you're on Linux just you know I

00:15:12,910 --> 00:15:16,840
guess yum installed DNF install or

00:15:15,160 --> 00:15:19,170
whatever it is the package that you use

00:15:16,840 --> 00:15:21,400
the package managed system they use

00:15:19,170 --> 00:15:23,530
here's something cool that I really

00:15:21,400 --> 00:15:26,860
liked about also using Python selenium

00:15:23,530 --> 00:15:28,690
is as you start doing UI automation you

00:15:26,860 --> 00:15:30,220
probably don't know what to do you

00:15:28,690 --> 00:15:31,960
probably don't know like what am i what

00:15:30,220 --> 00:15:33,610
strategy am I going to use here right I

00:15:31,960 --> 00:15:37,120
don't even know what I'm trying to find

00:15:33,610 --> 00:15:39,700
so I have an example here that is

00:15:37,120 --> 00:15:41,170
basically going to do two things one and

00:15:39,700 --> 00:15:44,350
if you were to run this and pythons

00:15:41,170 --> 00:15:47,890
gotta be really quick but it's going to

00:15:44,350 --> 00:15:50,890
basically open google.com it's going to

00:15:47,890 --> 00:15:53,140
assert that the title of the page says

00:15:50,890 --> 00:15:54,850
Google and then what I'm gonna do is I'm

00:15:53,140 --> 00:15:56,800
gonna open Google again and now I'm

00:15:54,850 --> 00:15:59,200
gonna modify Google's logo I'm gonna

00:15:56,800 --> 00:16:01,090
eject my own images in there so this

00:15:59,200 --> 00:16:03,910
shows you that you can interact with the

00:16:01,090 --> 00:16:05,830
browser elements and it also shows that

00:16:03,910 --> 00:16:08,170
you have a really powerful way to really

00:16:05,830 --> 00:16:10,690
eject anything to the page so it's

00:16:08,170 --> 00:16:12,790
really really powerful this creature

00:16:10,690 --> 00:16:14,950
shows on the bottom you have the code

00:16:12,790 --> 00:16:19,180
that I just showed you I added a

00:16:14,950 --> 00:16:21,820
breakpoint so if you were to when you if

00:16:19,180 --> 00:16:24,190
you are to clone my repository just mind

00:16:21,820 --> 00:16:25,720
that I'm using Python 3.7 so breakpoint

00:16:24,190 --> 00:16:27,460
is something that it's only available in

00:16:25,720 --> 00:16:29,350
the Python 2.7

00:16:27,460 --> 00:16:31,600
there are other ways to reserved break

00:16:29,350 --> 00:16:33,460
points this break point would not be

00:16:31,600 --> 00:16:34,899
found on the source code so you're not

00:16:33,460 --> 00:16:36,430
gonna have any trouble but if you want

00:16:34,899 --> 00:16:38,380
to follow along if you're watching the

00:16:36,430 --> 00:16:40,690
video later on just be aware the break

00:16:38,380 --> 00:16:43,089
point works only in 3.7 so what I'm

00:16:40,690 --> 00:16:46,510
gonna do here is I'm going to basically

00:16:43,089 --> 00:16:47,050
I'm gonna load this script on a Python

00:16:46,510 --> 00:16:49,950
wrapper

00:16:47,050 --> 00:16:52,209
I'm using something called ipython and

00:16:49,950 --> 00:16:54,790
because of the breakpoint you can see

00:16:52,209 --> 00:16:55,959
that I am at the line that says you

00:16:54,790 --> 00:16:58,089
start Google Chrome

00:16:55,959 --> 00:17:00,399
it says browser equals webdriver Chrome

00:16:58,089 --> 00:17:01,540
so I'm just going to walk through it and

00:17:00,399 --> 00:17:03,970
the reason why I want to do is because I

00:17:01,540 --> 00:17:07,449
want to show you how you can interact

00:17:03,970 --> 00:17:10,569
and why this is a useful idea because if

00:17:07,449 --> 00:17:12,730
you are starting out doing web UI it's a

00:17:10,569 --> 00:17:14,199
good idea for you to be able to interact

00:17:12,730 --> 00:17:17,350
with it not have to write a script to

00:17:14,199 --> 00:17:19,179
run it fail try it again fail again run

00:17:17,350 --> 00:17:21,880
it you don't want to do that so you can

00:17:19,179 --> 00:17:24,069
actually do this really interactively

00:17:21,880 --> 00:17:27,010
and slowly so we're just gonna hit the

00:17:24,069 --> 00:17:29,860
next thing so here is opening Google and

00:17:27,010 --> 00:17:32,260
then I am actually doing a couple of

00:17:29,860 --> 00:17:34,330
things I am going to find the element so

00:17:32,260 --> 00:17:36,700
I'm using element equals browser dot

00:17:34,330 --> 00:17:39,940
find element by ID I passed the search

00:17:36,700 --> 00:17:41,410
box ID to it and then because I am in

00:17:39,940 --> 00:17:43,840
the testing business I want to make sure

00:17:41,410 --> 00:17:46,150
that I got my element back and that's

00:17:43,840 --> 00:17:48,880
what the assert there is for it says

00:17:46,150 --> 00:17:51,790
please make sure that I found the thing

00:17:48,880 --> 00:17:53,650
that I want to interact with if you

00:17:51,790 --> 00:17:55,000
don't find the thing that you're trying

00:17:53,650 --> 00:17:56,260
to interact with then you won't be able

00:17:55,000 --> 00:17:56,890
to do anything with it right so that's

00:17:56,260 --> 00:18:00,640
the whole idea

00:17:56,890 --> 00:18:03,580
so now you know we're going to type you

00:18:00,640 --> 00:18:06,760
know Red Hat each of the search box it's

00:18:03,580 --> 00:18:08,830
going to perform the search and that's

00:18:06,760 --> 00:18:12,490
the end of that that part of the code

00:18:08,830 --> 00:18:15,039
I'm going to browse to Google again

00:18:12,490 --> 00:18:18,100
I am going to now I'm going to make sure

00:18:15,039 --> 00:18:20,169
that I got my box and now is where the

00:18:18,100 --> 00:18:22,659
fun begins because I'm going to inject

00:18:20,169 --> 00:18:24,549
some code and that's me that's my

00:18:22,659 --> 00:18:27,639
picture I just replaced it it looks

00:18:24,549 --> 00:18:29,919
squashed so I'm going to change it so

00:18:27,639 --> 00:18:32,110
that and is it looks a little bit better

00:18:29,919 --> 00:18:34,029
right but that's a little hole idea is

00:18:32,110 --> 00:18:35,919
so interact with it if you had more

00:18:34,029 --> 00:18:37,419
elements here so you want to say you

00:18:35,919 --> 00:18:39,909
want to search that you know the about

00:18:37,419 --> 00:18:40,509
link works so you could actually do it

00:18:39,909 --> 00:18:42,850
right here

00:18:40,509 --> 00:18:43,899
test it when you get to the point where

00:18:42,850 --> 00:18:45,789
you think that you got everything that

00:18:43,899 --> 00:18:47,860
you needed then write the code

00:18:45,789 --> 00:18:49,179
you got your script right so that's the

00:18:47,860 --> 00:18:50,409
whole idea the last thing that you

00:18:49,179 --> 00:18:51,759
probably want to remember is that you

00:18:50,409 --> 00:18:53,320
want to quit you want to close your

00:18:51,759 --> 00:18:54,909
browser all right so that it doesn't

00:18:53,320 --> 00:18:56,919
just especially if you're running this

00:18:54,909 --> 00:18:58,600
locally which I wouldn't recommend for a

00:18:56,919 --> 00:19:00,309
real scenario you don't want to have

00:18:58,600 --> 00:19:03,519
like a million web browsers open on your

00:19:00,309 --> 00:19:06,009
on your system right so that's the whole

00:19:03,519 --> 00:19:08,529
idea of using Python and selenium but

00:19:06,009 --> 00:19:10,119
you don't want to sit there and pipe all

00:19:08,529 --> 00:19:12,629
this stuff you want to automate it and

00:19:10,119 --> 00:19:16,929
that's where if we start talking about

00:19:12,629 --> 00:19:19,269
using Python to write your tests the

00:19:16,929 --> 00:19:21,490
idea here is that you don't want to sit

00:19:19,269 --> 00:19:23,230
around and type stuff you want to be

00:19:21,490 --> 00:19:25,600
able to have something that can be run

00:19:23,230 --> 00:19:28,029
executed anytime you want as many times

00:19:25,600 --> 00:19:29,110
as you want especially I would recommend

00:19:28,029 --> 00:19:30,429
that you want to do it through some kind

00:19:29,110 --> 00:19:33,309
of continuous integration environment

00:19:30,429 --> 00:19:36,249
right and what I have here is that you

00:19:33,309 --> 00:19:37,659
know because we already have all the web

00:19:36,249 --> 00:19:40,179
shalini installed we'll have a web drive

00:19:37,659 --> 00:19:42,639
installed what I have here is what is

00:19:40,179 --> 00:19:46,690
referred to as unit test Python unit

00:19:42,639 --> 00:19:49,269
tests like tests it relies on pythons

00:19:46,690 --> 00:19:51,850
built-in unit test module and the idea

00:19:49,269 --> 00:19:55,899
here is that you create a class for

00:19:51,850 --> 00:19:57,580
every it's a Python class for every test

00:19:55,899 --> 00:19:59,499
that you want to run right so like a

00:19:57,580 --> 00:20:00,789
test suite I'm gonna speed it up really

00:19:59,499 --> 00:20:02,860
quickly because I got my 10 minutes

00:20:00,789 --> 00:20:04,029
there but basically you can see a couple

00:20:02,860 --> 00:20:06,460
things I want to highlight there's a

00:20:04,029 --> 00:20:08,529
setup here which takes care of creating

00:20:06,460 --> 00:20:10,450
the browser instance and then there's a

00:20:08,529 --> 00:20:12,159
cleanup method which takes care of

00:20:10,450 --> 00:20:14,080
closing your browser so that's going to

00:20:12,159 --> 00:20:16,419
be very important this is also referred

00:20:14,080 --> 00:20:17,740
to as a fixture for your test and that's

00:20:16,419 --> 00:20:17,920
something that you want to happen every

00:20:17,740 --> 00:20:20,320
time

00:20:17,920 --> 00:20:21,820
we run a test there's some little

00:20:20,320 --> 00:20:24,160
there's more control over this so you

00:20:21,820 --> 00:20:26,920
can have this happen for every test it

00:20:24,160 --> 00:20:29,140
could be for the entire module ecobee

00:20:26,920 --> 00:20:31,480
for the class for the class itself so

00:20:29,140 --> 00:20:33,640
there's some ways that you can control

00:20:31,480 --> 00:20:35,860
but the interesting thing is that that

00:20:33,640 --> 00:20:37,420
the first line that line the 11 line 12

00:20:35,860 --> 00:20:39,040
takes care of creating the browser for

00:20:37,420 --> 00:20:41,380
you and closing it up and then the rest

00:20:39,040 --> 00:20:43,420
of the code now is just basically please

00:20:41,380 --> 00:20:44,950
open Google and a certain things for me

00:20:43,420 --> 00:20:47,140
right so make sure that the first test

00:20:44,950 --> 00:20:49,180
make sure the pyro is present the next

00:20:47,140 --> 00:20:51,190
one is I'm gonna type read Hatton in the

00:20:49,180 --> 00:20:54,040
search box and then I want to make sure

00:20:51,190 --> 00:20:56,380
the Red Hat shows up in the in the title

00:20:54,040 --> 00:21:00,040
of the window itself so this is the

00:20:56,380 --> 00:21:01,930
whole idea because we are you know I

00:21:00,040 --> 00:21:03,460
don't have a lot of a lot of time I have

00:21:01,930 --> 00:21:05,290
the actual code here this is how you

00:21:03,460 --> 00:21:07,060
actually run it so if you clone again if

00:21:05,290 --> 00:21:09,130
you clone the repository you just run

00:21:07,060 --> 00:21:10,810
Python put the entire path there and

00:21:09,130 --> 00:21:12,700
you're gonna see your browsers start

00:21:10,810 --> 00:21:16,480
popping up and running things it's gotta

00:21:12,700 --> 00:21:20,140
be really really quick okay so that's

00:21:16,480 --> 00:21:23,500
Python unit test stop but if you really

00:21:20,140 --> 00:21:25,180
want to learn the coolest thing the

00:21:23,500 --> 00:21:26,920
newest technology out there if you

00:21:25,180 --> 00:21:28,720
really want to impress people and say

00:21:26,920 --> 00:21:31,600
hey I want to work as an automation

00:21:28,720 --> 00:21:33,340
person to test their Python bless you so

00:21:31,600 --> 00:21:36,250
I would recommend that you looking to PI

00:21:33,340 --> 00:21:38,020
test and pikas has a lot of really cool

00:21:36,250 --> 00:21:39,160
features I'm not gonna go through it

00:21:38,020 --> 00:21:40,570
right now because I don't have the time

00:21:39,160 --> 00:21:43,120
but I will highlight that there are

00:21:40,570 --> 00:21:45,640
plugins which are really really cool and

00:21:43,120 --> 00:21:47,920
then you have fixtures which have really

00:21:45,640 --> 00:21:49,840
like fine grained control you can really

00:21:47,920 --> 00:21:51,670
tell like you know give it a name and

00:21:49,840 --> 00:21:53,470
you can specify when do you want the

00:21:51,670 --> 00:21:55,720
fixture to be applied what should happen

00:21:53,470 --> 00:21:58,120
what should happen when you use the

00:21:55,720 --> 00:22:01,360
fixture there's some cool things called

00:21:58,120 --> 00:22:03,790
parametrize which lets you do passive

00:22:01,360 --> 00:22:06,250
data to your task so you might test once

00:22:03,790 --> 00:22:09,389
and you change the data value and then

00:22:06,250 --> 00:22:12,299
it gives you the you know the

00:22:09,389 --> 00:22:14,639
the different variations of the tests

00:22:12,299 --> 00:22:16,559
right so what I'm gonna do here I'm

00:22:14,639 --> 00:22:19,049
going to show you is I am installing a

00:22:16,559 --> 00:22:20,789
plug-in called Python selenium and the

00:22:19,049 --> 00:22:23,279
reason why I chose to put that in here

00:22:20,789 --> 00:22:25,320
is because when you install Python

00:22:23,279 --> 00:22:26,999
something like this if you remember that

00:22:25,320 --> 00:22:28,590
the previous code I had to create my own

00:22:26,999 --> 00:22:29,940
setup and I had to say please make sure

00:22:28,590 --> 00:22:33,360
to create my browser and then please

00:22:29,940 --> 00:22:36,840
shut it down this plug-in automatically

00:22:33,360 --> 00:22:39,659
gives you that fixture for free for all

00:22:36,840 --> 00:22:43,049
of your tests right so the way that you

00:22:39,659 --> 00:22:45,330
tell your tests which driver which I

00:22:43,049 --> 00:22:48,059
guess the browser you want to use is by

00:22:45,330 --> 00:22:50,549
specifying the command line so you say

00:22:48,059 --> 00:22:52,499
that's test driver chrome and if you

00:22:50,549 --> 00:22:54,330
look at the code above there's no setup

00:22:52,499 --> 00:22:56,369
there's no pair down I just wrote my

00:22:54,330 --> 00:22:59,009
test using just plain Python there's no

00:22:56,369 --> 00:23:01,950
magic here but there the magic I guess

00:22:59,009 --> 00:23:03,419
there is is this selenium object here

00:23:01,950 --> 00:23:05,549
right this is this argument that's being

00:23:03,419 --> 00:23:06,869
passed to it and this is the fixture

00:23:05,549 --> 00:23:08,340
that you get for free there's no

00:23:06,869 --> 00:23:10,470
declaration you don't need to report

00:23:08,340 --> 00:23:12,809
anything is automatically available for

00:23:10,470 --> 00:23:15,179
you right so I think this is really

00:23:12,809 --> 00:23:18,869
really really cool some other plug-in

00:23:15,179 --> 00:23:20,399
that I have here is X dist and this

00:23:18,869 --> 00:23:22,590
allows you imagine that you have like a

00:23:20,399 --> 00:23:24,330
thousand tests you don't want to run

00:23:22,590 --> 00:23:26,039
your tests sequentially unless you have

00:23:24,330 --> 00:23:28,080
to you want paralyze it right you want

00:23:26,039 --> 00:23:31,109
to get your tests really quickly so by

00:23:28,080 --> 00:23:33,720
installing this Python dash X this you

00:23:31,109 --> 00:23:36,480
can pass the and flag and then you can

00:23:33,720 --> 00:23:37,830
specify if you just pass pass - and auto

00:23:36,480 --> 00:23:39,809
I think you will figure out how many

00:23:37,830 --> 00:23:40,859
cores are available in your system and

00:23:39,809 --> 00:23:42,330
then we'll figure out like how many

00:23:40,859 --> 00:23:44,249
threads I'm gonna speed up and I'm gonna

00:23:42,330 --> 00:23:46,230
split your tests is acute them in

00:23:44,249 --> 00:23:48,600
parallel and then return all the test

00:23:46,230 --> 00:23:51,029
results back to you right so that's

00:23:48,600 --> 00:23:52,049
really really powerful here and that's

00:23:51,029 --> 00:23:53,759
why I wanted to show you that you

00:23:52,049 --> 00:23:55,420
definitely want to play with with this

00:23:53,759 --> 00:23:59,150
plugin

00:23:55,420 --> 00:24:00,500
then what I want to show you is that the

00:23:59,150 --> 00:24:02,840
next thing that I want to show you is

00:24:00,500 --> 00:24:04,400
there's something called sauce labs I'm

00:24:02,840 --> 00:24:06,410
gonna try to get back to it

00:24:04,400 --> 00:24:07,340
because I want to if I run out of time

00:24:06,410 --> 00:24:09,710
at least I'm going to get to the

00:24:07,340 --> 00:24:11,120
continuous integration part and if I

00:24:09,710 --> 00:24:13,280
have time I'll come back and I'll talk

00:24:11,120 --> 00:24:14,990
about sauce if I don't have time then if

00:24:13,280 --> 00:24:17,000
you want to ask me about sauce labs just

00:24:14,990 --> 00:24:18,560
about ping me on you know outside of the

00:24:17,000 --> 00:24:21,980
room and I'll let you know

00:24:18,560 --> 00:24:24,860
but the final guest piece of of this

00:24:21,980 --> 00:24:26,540
presentation is about CI so what's the

00:24:24,860 --> 00:24:28,280
use of you having written like a

00:24:26,540 --> 00:24:29,870
thousand automated tests and they're

00:24:28,280 --> 00:24:31,790
just sitting there and it requires

00:24:29,870 --> 00:24:33,860
someone to automatically go in there and

00:24:31,790 --> 00:24:36,470
and run something or click on something

00:24:33,860 --> 00:24:38,270
but so the idea here is that you don't

00:24:36,470 --> 00:24:39,980
want to be bothered right you want to be

00:24:38,270 --> 00:24:41,900
drinking on a drink of coffee you want

00:24:39,980 --> 00:24:43,370
to you know check the news online while

00:24:41,900 --> 00:24:44,630
your tests are being is acute that's

00:24:43,370 --> 00:24:47,690
really the truth you don't want to be

00:24:44,630 --> 00:24:51,290
bothered with by anyone so get lab is

00:24:47,690 --> 00:24:54,020
just one free service out there it's

00:24:51,290 --> 00:24:57,320
completely free okay that will give you

00:24:54,020 --> 00:24:59,390
AC I do CB so it's continuous continuous

00:24:57,320 --> 00:25:02,090
integration continuous delivery method

00:24:59,390 --> 00:25:04,520
press S environment that it's completely

00:25:02,090 --> 00:25:06,740
free and what I have here when you look

00:25:04,520 --> 00:25:08,840
at the source code for this repository

00:25:06,740 --> 00:25:11,960
you see that there's a file called diet

00:25:08,840 --> 00:25:14,150
lab - CI and what I've done here

00:25:11,960 --> 00:25:17,830
really to show what you can do the power

00:25:14,150 --> 00:25:20,470
of CI is that I created three stages and

00:25:17,830 --> 00:25:23,780
these are the things that must be

00:25:20,470 --> 00:25:26,390
executed in a certain order and for each

00:25:23,780 --> 00:25:28,160
stage that I have here what I'm doing is

00:25:26,390 --> 00:25:30,170
I have different jobs that will be

00:25:28,160 --> 00:25:32,360
executed right so I have a generate

00:25:30,170 --> 00:25:34,640
Doc's I have a test flight test and I

00:25:32,360 --> 00:25:37,550
have test sauce labs and then you know

00:25:34,640 --> 00:25:39,680
for each stage for each job I have all

00:25:37,550 --> 00:25:41,930
the commands everything that I that I

00:25:39,680 --> 00:25:44,450
need to happen here but the coolest

00:25:41,930 --> 00:25:47,330
thing is this so some of these tests

00:25:44,450 --> 00:25:48,230
will require running my automated tests

00:25:47,330 --> 00:25:51,260
the ones that I showed you before

00:25:48,230 --> 00:25:53,620
running on Chrome or running on Firefox

00:25:51,260 --> 00:25:57,050
I don't want to run this on my system so

00:25:53,620 --> 00:25:59,780
using good lab pipelines what he does is

00:25:57,050 --> 00:26:01,290
he uses a docker eyes and I hope you

00:25:59,780 --> 00:26:02,790
know if you know

00:26:01,290 --> 00:26:03,840
you familiar with docker but you know

00:26:02,790 --> 00:26:06,570
talking about containers of

00:26:03,840 --> 00:26:09,780
virtualization right so what he does is

00:26:06,570 --> 00:26:11,610
it will spin up a docker eyes Firefox

00:26:09,780 --> 00:26:14,060
and Chrome for you and your tests will

00:26:11,610 --> 00:26:16,080
be executed against it so there's no

00:26:14,060 --> 00:26:16,710
infrastructure that you've required on

00:26:16,080 --> 00:26:18,510
your end

00:26:16,710 --> 00:26:20,910
right so that's really really powerful

00:26:18,510 --> 00:26:22,200
that you have I think that a picture

00:26:20,910 --> 00:26:24,720
would probably be a better way to

00:26:22,200 --> 00:26:26,310
represent here but this is what if you

00:26:24,720 --> 00:26:29,640
go to get labs and you look at the CI

00:26:26,310 --> 00:26:32,580
pipeline page you'll see that the three

00:26:29,640 --> 00:26:34,260
stages so what happens here is that this

00:26:32,580 --> 00:26:36,810
document that I'm using for this

00:26:34,260 --> 00:26:38,640
presentation is generating there are

00:26:36,810 --> 00:26:40,470
some steps involved in the job so I do

00:26:38,640 --> 00:26:42,120
some linking which means I want to make

00:26:40,470 --> 00:26:44,220
sure that the restructured

00:26:42,120 --> 00:26:46,620
text syntax that I'm using is properly

00:26:44,220 --> 00:26:48,900
formatted and if it's not the job fails

00:26:46,620 --> 00:26:51,000
I don't get my document there's no new

00:26:48,900 --> 00:26:52,830
version of the document for me right but

00:26:51,000 --> 00:26:54,720
what I do is I generate the document and

00:26:52,830 --> 00:26:57,390
show me the document is actually

00:26:54,720 --> 00:26:59,760
finished and has no issues it gets

00:26:57,390 --> 00:27:01,740
published to read the docs which is that

00:26:59,760 --> 00:27:04,830
site that you see over there on the URL

00:27:01,740 --> 00:27:07,560
address bar and then once that is done

00:27:04,830 --> 00:27:09,750
I've run my tests in parallel all right

00:27:07,560 --> 00:27:12,570
so I've run my tests on Chrome I run my

00:27:09,750 --> 00:27:15,810
tests on Firefox and assuming that these

00:27:12,570 --> 00:27:18,870
run then I run my tests on sauce labs

00:27:15,810 --> 00:27:22,710
how many more minutes do I have got

00:27:18,870 --> 00:27:24,870
three Suites all right so let me go back

00:27:22,710 --> 00:27:26,730
to sauce labs so what is sauce labs

00:27:24,870 --> 00:27:28,260
first of all I work for Red Hat I don't

00:27:26,730 --> 00:27:30,990
work for sauce labs so I make no money

00:27:28,260 --> 00:27:33,060
out of this I just want to make sure but

00:27:30,990 --> 00:27:34,890
I really use it internally and the hope

00:27:33,060 --> 00:27:37,470
the whole point of using sauce labs is

00:27:34,890 --> 00:27:39,780
that you don't want to host your own

00:27:37,470 --> 00:27:42,330
infrastructure what if you are in the

00:27:39,780 --> 00:27:45,630
business of testing web UI applications

00:27:42,330 --> 00:27:47,460
for phones for devices right or you have

00:27:45,630 --> 00:27:51,060
you have a requirement you have to

00:27:47,460 --> 00:27:53,190
support Microsoft right are you going to

00:27:51,060 --> 00:27:54,780
have a Windows box laying around and

00:27:53,190 --> 00:27:56,550
install everything and maintain it and

00:27:54,780 --> 00:27:58,980
keep updating and whenever new versions

00:27:56,550 --> 00:28:00,180
of the browser come out I don't think

00:27:58,980 --> 00:28:02,490
you want to do that

00:28:00,180 --> 00:28:04,650
you could but I wouldn't recommend it so

00:28:02,490 --> 00:28:06,630
using the same exact things that I was

00:28:04,650 --> 00:28:08,520
using before so using PI test using

00:28:06,630 --> 00:28:11,580
Python using Python selenium plug-in

00:28:08,520 --> 00:28:13,830
what I can do here is I can create my

00:28:11,580 --> 00:28:16,290
matrix of support and that's what you

00:28:13,830 --> 00:28:18,510
see here so I have chrome running on the

00:28:16,290 --> 00:28:21,510
Mac as a specific version of the Mac I

00:28:18,510 --> 00:28:23,940
have Windows 10 and Microsoft edge I

00:28:21,510 --> 00:28:27,270
have Firefox on Linux I have Safari on

00:28:23,940 --> 00:28:29,910
the Mac and that's some magic here also

00:28:27,270 --> 00:28:32,070
that you will see that when you run the

00:28:29,910 --> 00:28:33,510
test itself it does some really cool

00:28:32,070 --> 00:28:36,210
things it gives you it gives like

00:28:33,510 --> 00:28:39,900
specific names for the job so that you

00:28:36,210 --> 00:28:40,500
know you know like I got a little ahead

00:28:39,900 --> 00:28:42,540
of myself

00:28:40,500 --> 00:28:45,510
here's the test right so I only have two

00:28:42,540 --> 00:28:48,360
tests my matrix has four different

00:28:45,510 --> 00:28:50,820
elements so the outcome is that these

00:28:48,360 --> 00:28:53,100
two tests will be executed against those

00:28:50,820 --> 00:28:55,500
browser operating system combinations

00:28:53,100 --> 00:28:57,960
right so will be a total of eight tests

00:28:55,500 --> 00:29:00,090
automated in the end for you

00:28:57,960 --> 00:29:02,430
the way the PI test works and when used

00:29:00,090 --> 00:29:04,050
the the exodus plug-in is that the name

00:29:02,430 --> 00:29:06,900
of the tests are not gonna be it's gonna

00:29:04,050 --> 00:29:08,340
be all like garbage you're not gonna be

00:29:06,900 --> 00:29:10,680
able to tell which which is which so

00:29:08,340 --> 00:29:13,080
there's some really cool examples here

00:29:10,680 --> 00:29:15,570
on this file that I that I have to run

00:29:13,080 --> 00:29:17,760
on the repository that shows you how you

00:29:15,570 --> 00:29:18,990
can override the ID so you can give it a

00:29:17,760 --> 00:29:20,730
like a name that makes a little more

00:29:18,990 --> 00:29:22,440
sense so you can see for example that

00:29:20,730 --> 00:29:24,840
I'm running a test called tests on the

00:29:22,440 --> 00:29:28,650
score page title in chrome then the same

00:29:24,840 --> 00:29:30,660
one on Microsoft edge right so you know

00:29:28,650 --> 00:29:33,300
it is really cool to use sauce labs

00:29:30,660 --> 00:29:35,280
because you using their infrastructure

00:29:33,300 --> 00:29:36,960
you're not paying what we pay for it but

00:29:35,280 --> 00:29:38,760
you're not paying for the in terms of

00:29:36,960 --> 00:29:40,770
the you know like the sense of you have

00:29:38,760 --> 00:29:42,600
to maintain it right because that week

00:29:40,770 --> 00:29:44,730
that's time and money and people that

00:29:42,600 --> 00:29:47,130
requires and there's also labs also let

00:29:44,730 --> 00:29:50,130
you you can actually watch the video of

00:29:47,130 --> 00:29:52,470
the of the test the recording of it

00:29:50,130 --> 00:29:54,810
right so you can look that's what we're

00:29:52,470 --> 00:29:58,830
seeing here on the screen for example I

00:29:54,810 --> 00:30:00,690
actually have 50 VMs available to to the

00:29:58,830 --> 00:30:03,450
projects that I work on so I can have my

00:30:00,690 --> 00:30:05,610
tests running 50 testing parallel which

00:30:03,450 --> 00:30:08,490
is pretty powerful thing to have to

00:30:05,610 --> 00:30:11,700
right so I've been told that that's the

00:30:08,490 --> 00:30:12,480
end of my presentation so that won't no

00:30:11,700 --> 00:30:14,490
time for questions

00:30:12,480 --> 00:30:17,040
five minutes regression alright cool so

00:30:14,490 --> 00:30:18,450
I hope this was useful like I said

00:30:17,040 --> 00:30:20,490
please if you could if you clone the

00:30:18,450 --> 00:30:22,350
repository if you make any improvements

00:30:20,490 --> 00:30:24,780
if you have any feedback please let me

00:30:22,350 --> 00:30:27,540
know at the end of the schedule for the

00:30:24,780 --> 00:30:29,610
f-cove you find a nice little link that

00:30:27,540 --> 00:30:31,140
says hey vote for this presentation tell

00:30:29,610 --> 00:30:33,480
all you how awesome it was so please do

00:30:31,140 --> 00:30:35,850
that because then then we write me back

00:30:33,480 --> 00:30:38,970
and I'd love to be back next year here

00:30:35,850 --> 00:30:56,669
so with that I'll take any questions

00:30:38,970 --> 00:30:59,309
from anyone anyone yes correct so the

00:30:56,669 --> 00:31:01,470
question is I think that in Java using

00:30:59,309 --> 00:31:03,690
the third safe thing but I don't know

00:31:01,470 --> 00:31:06,750
whether there is some utility in Python

00:31:03,690 --> 00:31:09,450
for that yeah I mean I would say that I

00:31:06,750 --> 00:31:11,580
believe that the plug-in will handle

00:31:09,450 --> 00:31:14,520
that the question was running tests in

00:31:11,580 --> 00:31:16,860
parallel being thread safe right I

00:31:14,520 --> 00:31:19,799
believe that the plug-in will handle all

00:31:16,860 --> 00:31:21,870
that for you but I think the other

00:31:19,799 --> 00:31:23,760
factor that is important for you to keep

00:31:21,870 --> 00:31:25,740
in mind is that it's if you have a

00:31:23,760 --> 00:31:27,720
specific setup or teardown let's just

00:31:25,740 --> 00:31:30,270
say for example the your tests require a

00:31:27,720 --> 00:31:33,540
database right so you don't want your

00:31:30,270 --> 00:31:35,580
tests relying on the same database if

00:31:33,540 --> 00:31:37,200
they're gonna be changing the data so

00:31:35,580 --> 00:31:39,540
that's something they're gonna have to

00:31:37,200 --> 00:31:41,429
to handle also so not just being thread

00:31:39,540 --> 00:31:43,000
safe but also the content that you're

00:31:41,429 --> 00:31:46,240
gonna use

00:31:43,000 --> 00:31:46,240
you're welcome

00:31:47,790 --> 00:31:54,630
yes question is there like a is there

00:31:51,810 --> 00:31:57,690
like a repo of any like standard sample

00:31:54,630 --> 00:32:01,410
tests I may have missed it

00:31:57,690 --> 00:32:03,270
it's there that's a good question so yes

00:32:01,410 --> 00:32:05,400
there is but it wouldn't be intuitive

00:32:03,270 --> 00:32:06,960
because for example I'm gonna put a link

00:32:05,400 --> 00:32:10,500
here and I hope that you have time to

00:32:06,960 --> 00:32:14,700
jot it down but for example I work I

00:32:10,500 --> 00:32:19,230
work at Red Hat and we actually have all

00:32:14,700 --> 00:32:21,570
of our tests are fully open sourced ok

00:32:19,230 --> 00:32:23,790
so you can actually go if you look on

00:32:21,570 --> 00:32:27,120
github.com

00:32:23,790 --> 00:32:28,890
and you look for satellite qe under

00:32:27,120 --> 00:32:30,900
settle IQ you're gonna find all the

00:32:28,890 --> 00:32:33,060
repositories everything that we that we

00:32:30,900 --> 00:32:35,940
write for the automation that we execute

00:32:33,060 --> 00:32:39,750
at Red Hat Robo Telo is something that I

00:32:35,940 --> 00:32:41,850
wrote 2011 it's still been around but

00:32:39,750 --> 00:32:45,440
when you go to Robo Tello and then you

00:32:41,850 --> 00:32:48,600
look under the tests folder there then

00:32:45,440 --> 00:32:50,190
there's some couple of different folders

00:32:48,600 --> 00:32:51,180
but this one over here you can see for

00:32:50,190 --> 00:32:55,110
example like how do I do

00:32:51,180 --> 00:32:57,570
API tests how do i do CLI tests so yes

00:32:55,110 --> 00:32:59,040
there's there are many repositories out

00:32:57,570 --> 00:33:01,020
there but I don't think that there's

00:32:59,040 --> 00:33:02,850
anything that is like the definite

00:33:01,020 --> 00:33:05,820
source of truth for that so you have to

00:33:02,850 --> 00:33:07,860
look around so you can look at this and

00:33:05,820 --> 00:33:10,430
you know feel free to ping me email me

00:33:07,860 --> 00:33:12,410
and I'll point you to something

00:33:10,430 --> 00:33:15,320
interesting

00:33:12,410 --> 00:33:18,130
you're welcome one more question perhaps

00:33:15,320 --> 00:33:18,130
anyone

00:33:18,850 --> 00:33:22,740
I'm preventing you from getting lunch

00:33:20,380 --> 00:33:22,740
yes

00:33:25,530 --> 00:33:30,539
you mentioned that the documentation is

00:33:27,720 --> 00:33:34,140
autumn with the change of tests how do

00:33:30,539 --> 00:33:36,510
you like for your stakeholders and just

00:33:34,140 --> 00:33:38,880
for legacy way referring to how do you

00:33:36,510 --> 00:33:42,179
look at the history like is there a way

00:33:38,880 --> 00:33:45,270
to like what does that look like yeah so

00:33:42,179 --> 00:33:48,030
I mean this specific document wouldn't I

00:33:45,270 --> 00:33:49,440
guess wouldn't match I guess the the

00:33:48,030 --> 00:33:51,600
scenario they put it out because this is

00:33:49,440 --> 00:33:54,150
just for an example but I would say that

00:33:51,600 --> 00:33:56,909
you know what you have to do is anyone

00:33:54,150 --> 00:33:59,190
who would like to see what the changes

00:33:56,909 --> 00:34:01,409
were in you go to either github or in

00:33:59,190 --> 00:34:03,840
this case you go to get lab and then you

00:34:01,409 --> 00:34:06,179
can look at the at the repository you

00:34:03,840 --> 00:34:07,830
can look at all the commits so this is

00:34:06,179 --> 00:34:11,070
where we're gonna see the history of the

00:34:07,830 --> 00:34:12,780
changes that went in right and if you if

00:34:11,070 --> 00:34:15,060
in the business of writing documents

00:34:12,780 --> 00:34:17,250
right so then you probably submit your

00:34:15,060 --> 00:34:19,109
your changes and have someone review

00:34:17,250 --> 00:34:21,840
them before they get merged so they'll

00:34:19,109 --> 00:34:23,940
have a review process before anything

00:34:21,840 --> 00:34:26,580
happens right so the pipeline is

00:34:23,940 --> 00:34:31,139
executed every time there's code changes

00:34:26,580 --> 00:34:32,429
here all right all right cool thank you

00:34:31,139 --> 00:34:34,730
very much for your time I appreciate it

00:34:32,429 --> 00:34:34,730

YouTube URL: https://www.youtube.com/watch?v=TlBuwd1mUdc


