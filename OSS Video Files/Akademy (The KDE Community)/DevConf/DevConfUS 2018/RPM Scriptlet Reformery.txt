Title: RPM Scriptlet Reformery
Publication date: 2019-02-25
Playlist: DevConfUS 2018
Description: 
	RPM scriptlets are still pretty awful - but they're getting better! This talk will discuss the problems with package scriptlets and the progress of our efforts in the Fedora Project to fix things, so package installs and image builds can be faster and more reliable.

Anyone who is familiar with package scriptlets in Fedora is welcome, and anyone who works on packaging tools and policies is encouraged to attend.
Captions: 
	00:00:04,029 --> 00:00:07,920
every wants to watch me log into things

00:00:08,700 --> 00:00:20,250
yeah there's a work review if you want

00:00:18,010 --> 00:00:24,150
oh great thank you it's up there and

00:00:20,250 --> 00:00:24,150
you're a lifesaver thank you very much

00:00:24,810 --> 00:00:27,960
that's right

00:00:29,540 --> 00:00:33,530
I'm just gonna use the same slides

00:00:31,430 --> 00:00:35,810
because I don't have a new stuff it's

00:00:33,530 --> 00:00:54,680
been a while so yeah you're you're

00:00:35,810 --> 00:00:55,820
implicated here Steve I'm sorry I don't

00:00:54,680 --> 00:00:58,640
know if you have updates or anything for

00:00:55,820 --> 00:01:07,659
on a and the stuff that I might Oh we'll

00:00:58,640 --> 00:01:07,659
find out sorry

00:01:10,220 --> 00:01:22,430
yeah yeah all right oh man Louisville

00:01:22,190 --> 00:01:25,160
here

00:01:22,430 --> 00:01:29,650
Nelda fine thank you though possible the

00:01:25,160 --> 00:01:29,650
one thing I do want is to differently

00:01:34,540 --> 00:01:44,010
have you that can I do that

00:01:37,490 --> 00:01:52,660
[Music]

00:01:44,010 --> 00:01:57,370
that's that's good okay if you're using

00:01:52,660 --> 00:01:58,930
the comers it's gonna try to get it so I

00:01:57,370 --> 00:02:05,740
have my mic because my notes are all in

00:01:58,930 --> 00:02:07,540
them start recording oh sorry yeah I'm

00:02:05,740 --> 00:02:09,100
alright sorry gotta go set another

00:02:07,540 --> 00:02:10,510
global scream look I'm sorry I was

00:02:09,100 --> 00:02:12,190
trying to switch it over so I could have

00:02:10,510 --> 00:02:13,570
my have speaker notes instead of having

00:02:12,190 --> 00:02:16,000
those on screen for other folks that I

00:02:13,570 --> 00:02:18,250
don't know we could do that oh you know

00:02:16,000 --> 00:02:19,890
it's your I shouldn't do it through well

00:02:18,250 --> 00:02:28,120
unless you're doing it offline I you

00:02:19,890 --> 00:02:29,470
know it's mirroring and like you know if

00:02:28,120 --> 00:02:30,670
you do is kiss dentistry it doesn't

00:02:29,470 --> 00:02:32,140
record because having a higher

00:02:30,670 --> 00:02:35,620
resolution than it actually does you

00:02:32,140 --> 00:02:37,780
know so we are recording the desktop

00:02:35,620 --> 00:02:45,490
also so if you do extend the screen that

00:02:37,780 --> 00:02:48,510
doesn't record no and you can well okay

00:02:45,490 --> 00:02:52,500
alright I'll go my memory is fine I

00:02:48,510 --> 00:02:52,500
present and see what happens

00:02:52,650 --> 00:02:57,569
yeah yeah but then if I do that then

00:02:54,810 --> 00:02:59,610
that's on the screen I don't see is that

00:02:57,569 --> 00:03:01,439
gonna show that it's my fun or this I

00:02:59,610 --> 00:03:04,319
mean I said you were gonna play this on

00:03:01,439 --> 00:03:06,569
your left or just open your laptop you

00:03:04,319 --> 00:03:09,000
know yeah sure we'll do that it'll be

00:03:06,569 --> 00:03:17,730
fun I don't have Wi-Fi my laptop yeah I

00:03:09,000 --> 00:03:19,379
haven't said that I don't know you know

00:03:17,730 --> 00:03:21,120
I'm just gonna wing it it's fine I

00:03:19,379 --> 00:03:25,200
remember scriptlets if you all here

00:03:21,120 --> 00:03:33,209
he'll be here to hear me because ladies

00:03:25,200 --> 00:03:36,569
and gentlemen will woods absolutely not

00:03:33,209 --> 00:03:38,970
Adam please leave hi I'm will woods I

00:03:36,569 --> 00:03:41,280
I'm by senior software engineer hey I

00:03:38,970 --> 00:03:44,939
should update that I'm senior now Red

00:03:41,280 --> 00:03:49,319
Hat and I work on things involving

00:03:44,939 --> 00:03:51,450
installations and packaging and seeing a

00:03:49,319 --> 00:03:53,040
lot of cusses about rpm and half people

00:03:51,450 --> 00:03:54,540
in this room have heard hammy rants

00:03:53,040 --> 00:03:55,859
about these things for and you're

00:03:54,540 --> 00:04:01,590
probably tired of it and too bad I'm

00:03:55,859 --> 00:04:02,730
doing it again so this is this is rpm

00:04:01,590 --> 00:04:06,769
scriptlet perform because I think we

00:04:02,730 --> 00:04:09,209
need to oh is it

00:04:06,769 --> 00:04:11,569
do I just need to actually talk about it

00:04:09,209 --> 00:04:11,569
Oh

00:04:12,100 --> 00:04:26,940
fine too much too much will is this an

00:04:23,470 --> 00:04:31,030
appropriate amount of will am i audible

00:04:26,940 --> 00:04:35,820
hello yeah okay if I talk normally you

00:04:31,030 --> 00:04:37,930
can know I have a boy your lower lip oh

00:04:35,820 --> 00:04:41,260
okay all right cool

00:04:37,930 --> 00:04:43,750
yes good okay technical difficulties are

00:04:41,260 --> 00:04:46,360
now solved so I'm talking about rpm

00:04:43,750 --> 00:04:47,230
scriptlets because they're an enormous

00:04:46,360 --> 00:04:52,090
pain in the ass and make everything

00:04:47,230 --> 00:04:54,760
terrible I want them all to die well if

00:04:52,090 --> 00:04:58,000
we're being kind we they do stuff and

00:04:54,760 --> 00:04:59,380
like we all if you have worked with rpm

00:04:58,000 --> 00:05:01,870
and the RPM eco system and all you have

00:04:59,380 --> 00:05:04,270
a sense that yes grip lips do important

00:05:01,870 --> 00:05:05,890
things and without them you know I don't

00:05:04,270 --> 00:05:07,270
know exactly what they do but they are

00:05:05,890 --> 00:05:10,600
really important and if we didn't have

00:05:07,270 --> 00:05:14,410
them things wouldn't work which is kind

00:05:10,600 --> 00:05:17,610
of true in that they do stuff and if you

00:05:14,410 --> 00:05:20,320
don't do them things break but like we

00:05:17,610 --> 00:05:21,990
have some problems with that they do all

00:05:20,320 --> 00:05:24,730
sorts of things that aren't great

00:05:21,990 --> 00:05:27,070
everything runs this route that's not my

00:05:24,730 --> 00:05:29,290
favorite thing about them every package

00:05:27,070 --> 00:05:31,420
has its own unique skip lists and every

00:05:29,290 --> 00:05:32,980
package is its own little fiefdom and so

00:05:31,420 --> 00:05:34,150
like the script lips for any given

00:05:32,980 --> 00:05:38,350
package are written by somebody who

00:05:34,150 --> 00:05:40,930
might not like use shells grab as much

00:05:38,350 --> 00:05:43,240
might not even be and then vinick's

00:05:40,930 --> 00:05:45,850
programmer at all might not have ever

00:05:43,240 --> 00:05:47,670
you can use linux there's at least one

00:05:45,850 --> 00:05:49,630
package that i can think of where

00:05:47,670 --> 00:05:51,460
scriptlets are all written in lua

00:05:49,630 --> 00:05:53,620
because the author doesn't know any

00:05:51,460 --> 00:05:56,670
shell but could figure out lua

00:05:53,620 --> 00:05:58,450
a lot easier so just wrote them and lua

00:05:56,670 --> 00:06:00,580
and that's fine

00:05:58,450 --> 00:06:03,480
under you know the the guidelines and

00:06:00,580 --> 00:06:06,490
everything like get it done i guess but

00:06:03,480 --> 00:06:08,320
this makes doing all of that makes

00:06:06,490 --> 00:06:10,210
installs and upgrades really really slow

00:06:08,320 --> 00:06:12,580
my background is mostly on the installer

00:06:10,210 --> 00:06:16,960
team and doing system upgrades

00:06:12,580 --> 00:06:19,000
and system upgrades are real slow but

00:06:16,960 --> 00:06:20,080
slower than you think when it's really

00:06:19,000 --> 00:06:21,280
just like they're making a bunch of

00:06:20,080 --> 00:06:23,500
small changes to every package on your

00:06:21,280 --> 00:06:25,270
system part of the reason for that is

00:06:23,500 --> 00:06:26,949
every time because we don't know what's

00:06:25,270 --> 00:06:28,990
good let's do right it's a black box

00:06:26,949 --> 00:06:31,930
it's we run some shell script here who

00:06:28,990 --> 00:06:35,740
knows what it does magic there's no

00:06:31,930 --> 00:06:37,449
magic it's hilarious it's dark magic but

00:06:35,740 --> 00:06:38,979
we know we don't know what's going to

00:06:37,449 --> 00:06:40,449
happen in there and we don't know

00:06:38,979 --> 00:06:42,069
whether or not the next package is going

00:06:40,449 --> 00:06:43,900
to need something from it or whatever so

00:06:42,069 --> 00:06:46,419
every time a scriptlet runs and there

00:06:43,900 --> 00:06:48,190
are what eleven different ways that they

00:06:46,419 --> 00:06:51,460
run you can run like pre transaction

00:06:48,190 --> 00:06:54,340
free pre install post install post post

00:06:51,460 --> 00:06:57,550
install post rock gypsy rock gypsy funk

00:06:54,340 --> 00:06:59,199
I don't know there's a lot I forget I

00:06:57,550 --> 00:07:01,060
used to know them on top of my head

00:06:59,199 --> 00:07:02,830
there's like 14 different places that

00:07:01,060 --> 00:07:03,940
scriptlets run and so they get run

00:07:02,830 --> 00:07:06,490
before and after pretty much every

00:07:03,940 --> 00:07:07,900
package and we have to run like we have

00:07:06,490 --> 00:07:09,610
to run F sync and wait for everything

00:07:07,900 --> 00:07:12,310
get written to the disk and then and

00:07:09,610 --> 00:07:14,229
then we install the files and then and

00:07:12,310 --> 00:07:15,550
then we do an F sync again and then we

00:07:14,229 --> 00:07:17,080
were in the next triplet and we'd run

00:07:15,550 --> 00:07:19,690
another F sync and then we start the

00:07:17,080 --> 00:07:21,820
next package and you know it all evolves

00:07:19,690 --> 00:07:23,770
forking and exactly and all that it it

00:07:21,820 --> 00:07:26,800
makes everything painfully slow compared

00:07:23,770 --> 00:07:29,169
to how much it could be under designs

00:07:26,800 --> 00:07:30,580
another thing about scriptlets like one

00:07:29,169 --> 00:07:32,530
of the things that happens a lot during

00:07:30,580 --> 00:07:33,849
system upgrades and I always feel bad

00:07:32,530 --> 00:07:37,719
about this because I've written like

00:07:33,849 --> 00:07:39,699
three upgrade tools at this point is it

00:07:37,719 --> 00:07:41,560
at some point somebody will be watching

00:07:39,699 --> 00:07:43,539
like very intently very excitedly

00:07:41,560 --> 00:07:44,830
watching their upgrade happen and little

00:07:43,539 --> 00:07:47,159
partition is going to leave doodly-doo

00:07:44,830 --> 00:07:50,289
and then it stops and they're like oh no

00:07:47,159 --> 00:07:51,490
why did this stop and they wait like 30

00:07:50,289 --> 00:07:53,469
seconds and it's still sitting there

00:07:51,490 --> 00:07:55,840
nothing is happening in their dark Oh No

00:07:53,469 --> 00:07:58,259
the upgrade is broken or something that

00:07:55,840 --> 00:08:01,419
is happening in they pull the plug

00:07:58,259 --> 00:08:03,699
usually what's happening is like it's

00:08:01,419 --> 00:08:04,719
relabeling the SELinux policy on the

00:08:03,699 --> 00:08:06,250
system or something like that but

00:08:04,719 --> 00:08:07,539
because there's no progress reporting

00:08:06,250 --> 00:08:08,390
from swiftlets because they're like

00:08:07,539 --> 00:08:09,980
can't be

00:08:08,390 --> 00:08:12,140
have you never really figured out how to

00:08:09,980 --> 00:08:13,820
do that there's no way of knowing that's

00:08:12,140 --> 00:08:15,470
what's happening so your system just

00:08:13,820 --> 00:08:16,850
kind of sits there this is why I'm DNF

00:08:15,470 --> 00:08:19,250
now sighs like I'm running scriptlets

00:08:16,850 --> 00:08:21,800
that's something I've made them add like

00:08:19,250 --> 00:08:25,550
we argued for years yeah I'm really

00:08:21,800 --> 00:08:27,530
happy that it's there but yeah yeah it

00:08:25,550 --> 00:08:30,970
was it's been in about a cobbler it

00:08:27,530 --> 00:08:30,970
crashes when it tries to print out this

00:08:31,720 --> 00:08:35,780
oh man

00:08:33,770 --> 00:08:36,710
well yeah so there's no progress

00:08:35,780 --> 00:08:38,420
reporting there's no way of doing

00:08:36,710 --> 00:08:39,500
padding it really to the spec I mean we

00:08:38,420 --> 00:08:40,550
could we haven't figured out how to do

00:08:39,500 --> 00:08:42,230
it then it would break all backwards

00:08:40,550 --> 00:08:43,700
compatibility so like you just don't

00:08:42,230 --> 00:08:45,290
know what's happening in there and you

00:08:43,700 --> 00:08:46,250
think it's heavy stuck and you pull the

00:08:45,290 --> 00:08:49,640
plug and you know you just completely

00:08:46,250 --> 00:08:51,020
destroyed your system sorry you should

00:08:49,640 --> 00:08:54,860
have gone and like I don't um for a walk

00:08:51,020 --> 00:08:56,660
so we don't the bottom one is the thing

00:08:54,860 --> 00:08:58,430
that bothers me like at an existential

00:08:56,660 --> 00:09:02,180
level we do not know what's happening in

00:08:58,430 --> 00:09:04,340
there and so for example like what's

00:09:02,180 --> 00:09:05,990
that do that turns out to be a way to

00:09:04,340 --> 00:09:08,990
touch your to just create a file

00:09:05,990 --> 00:09:10,400
it's a clever way of creating a file at

00:09:08,990 --> 00:09:11,720
the same time and also making sure you

00:09:10,400 --> 00:09:13,280
set it to the right mode rather than

00:09:11,720 --> 00:09:14,900
doing that in to operations so if you

00:09:13,280 --> 00:09:16,910
want to atomically create a file with

00:09:14,900 --> 00:09:18,500
the correct mode somebody I don't

00:09:16,910 --> 00:09:20,960
remember what file is or what package

00:09:18,500 --> 00:09:22,870
this is even from that you can do that I

00:09:20,960 --> 00:09:27,670
had no idea that's what that was doing

00:09:22,870 --> 00:09:30,970
but yeah you can install dev no great oh

00:09:27,670 --> 00:09:33,220
here's another fun thing

00:09:30,970 --> 00:09:36,020
Stephens gonna have to remind me what

00:09:33,220 --> 00:09:41,090
what this fixed because it's something

00:09:36,020 --> 00:09:43,940
absurd it was like if you installed do

00:09:41,090 --> 00:09:46,130
you remember her so so what was

00:09:43,940 --> 00:09:47,660
happening here was

00:09:46,130 --> 00:09:51,079
this was actually cleaning up to make

00:09:47,660 --> 00:09:53,570
sure that we only had one addition

00:09:51,079 --> 00:09:55,459
instead of Fedora installed so your

00:09:53,570 --> 00:09:58,250
server Edition your workstation Edition

00:09:55,459 --> 00:09:59,329
or your non Edition Fedora and it was

00:09:58,250 --> 00:10:00,920
designed to make sure that we didn't

00:09:59,329 --> 00:10:02,540
that we only had the correct presets for

00:10:00,920 --> 00:10:05,660
that version and we had reserved the 80

00:10:02,540 --> 00:10:07,610
- range for that in the on the file

00:10:05,660 --> 00:10:09,529
system for that and this was the design

00:10:07,610 --> 00:10:11,209
that if we were changing the size of the

00:10:09,529 --> 00:10:13,940
the addition or assigning the addition

00:10:11,209 --> 00:10:17,800
we would remove any others however in

00:10:13,940 --> 00:10:21,319
Lua that that that change is adding a %

00:10:17,800 --> 00:10:23,209
% means that previously it just treated

00:10:21,319 --> 00:10:28,100
as effectively anything that starts with

00:10:23,209 --> 00:10:30,380
the word it with an eighth and a and

00:10:28,100 --> 00:10:33,350
then the range of 0 to dot which was all

00:10:30,380 --> 00:10:35,029
alpha numerics right and then ended in

00:10:33,350 --> 00:10:36,410
preset so I was deleting everything that

00:10:35,029 --> 00:10:39,290
start with an eighth which included all

00:10:36,410 --> 00:10:41,060
of the reserved presets whereas only 80

00:10:39,290 --> 00:10:42,980
was reserved for the insurance and what

00:10:41,060 --> 00:10:45,680
if this caused this one character change

00:10:42,980 --> 00:10:50,449
this is how did the tester fix it cause

00:10:45,680 --> 00:10:53,389
people were basically we had upgrades

00:10:50,449 --> 00:10:54,649
where sort of where none of these

00:10:53,389 --> 00:10:56,529
services they should be running on the

00:10:54,649 --> 00:10:59,690
system we're running on the system right

00:10:56,529 --> 00:11:01,190
yeah like this one line in something

00:10:59,690 --> 00:11:02,779
made it so that people would install

00:11:01,190 --> 00:11:04,399
their sis or upgrade their systems and

00:11:02,779 --> 00:11:06,529
then suddenly nothing worked at all

00:11:04,399 --> 00:11:09,470
because of that and like tracing it back

00:11:06,529 --> 00:11:11,860
to that was a really shitty week for

00:11:09,470 --> 00:11:11,860
somebody

00:11:12,120 --> 00:11:18,240
and oh it's his friend oh here it is

00:11:15,569 --> 00:11:20,670
here's the big list yeah so that's these

00:11:18,240 --> 00:11:22,050
are all the places scriptlets run and

00:11:20,670 --> 00:11:25,860
you remember if you're doing a system

00:11:22,050 --> 00:11:29,040
upgrade there's 1500 packages so you got

00:11:25,860 --> 00:11:31,559
to do all of these steps 1500 times well

00:11:29,040 --> 00:11:32,970
no the the posts the pre transparent

00:11:31,559 --> 00:11:36,509
open but only happen once but the middle

00:11:32,970 --> 00:11:39,029
parts those happen 1500 times it's slow

00:11:36,509 --> 00:11:42,689
and bad and the question is do we

00:11:39,029 --> 00:11:44,670
actually need to do all of that and so

00:11:42,689 --> 00:11:47,220
well okay by way of a demo gosh is this

00:11:44,670 --> 00:11:51,870
actually gonna work we sort of put

00:11:47,220 --> 00:11:56,370
together a little thing where yes you're

00:11:51,870 --> 00:12:00,110
all let it run so we put together thing

00:11:56,370 --> 00:12:03,059
and that it's not a spectacular demo but

00:12:00,110 --> 00:12:05,069
you see some text happening and now it's

00:12:03,059 --> 00:12:07,769
did it and now something is booting

00:12:05,069 --> 00:12:09,689
that's six seconds right there was us

00:12:07,769 --> 00:12:11,819
constructing an entire file system image

00:12:09,689 --> 00:12:14,749
from like a kickstart and then booting

00:12:11,819 --> 00:12:17,910
it in the cave in KPM and it works fine

00:12:14,749 --> 00:12:19,350
in six seconds usually it takes like I

00:12:17,910 --> 00:12:21,839
forgot six to ten minutes was what we

00:12:19,350 --> 00:12:24,870
were looking at before and the way that

00:12:21,839 --> 00:12:27,660
we did that was just essentially not do

00:12:24,870 --> 00:12:29,009
script let's that's about it it was I

00:12:27,660 --> 00:12:30,449
mean there's some other stuff we skip

00:12:29,009 --> 00:12:31,379
the decompression of all the package

00:12:30,449 --> 00:12:33,899
headers and stuff like that but we just

00:12:31,379 --> 00:12:35,490
take all the package contents don't put

00:12:33,899 --> 00:12:36,929
them into the file system and do a

00:12:35,490 --> 00:12:38,879
little bit of tweaking at the end to

00:12:36,929 --> 00:12:40,769
make sure it actually works

00:12:38,879 --> 00:12:43,709
I wonder if that's gonna keep running it

00:12:40,769 --> 00:12:49,670
doesn't smart all right so here's the

00:12:43,709 --> 00:12:52,740
thing the way that we did this was

00:12:49,670 --> 00:12:55,800
combining these two so the way that that

00:12:52,740 --> 00:12:57,509
magic works is that I went through and

00:12:55,800 --> 00:13:00,430
read every single script late in every

00:12:57,509 --> 00:13:04,510
single package in row seven

00:13:00,430 --> 00:13:08,080
and uh wait thank you and what I found

00:13:04,510 --> 00:13:10,840
out was that they're all kind of weird

00:13:08,080 --> 00:13:12,760
and clumsy and strange but they only do

00:13:10,840 --> 00:13:14,410
these six things this is everything that

00:13:12,760 --> 00:13:16,920
happens in every strictly in Oliver oh

00:13:14,410 --> 00:13:19,240
it's just that

00:13:16,920 --> 00:13:22,330
which means we really don't need to be

00:13:19,240 --> 00:13:25,630
run like allowing the system to run

00:13:22,330 --> 00:13:27,790
arbitrary code 1,600 1,500 1,600 times

00:13:25,630 --> 00:13:30,790
during an upgrade at all of that we just

00:13:27,790 --> 00:13:34,750
need some stuff that does these things

00:13:30,790 --> 00:13:36,070
which is I know big but we already have

00:13:34,750 --> 00:13:38,470
solutions for a lot of these things and

00:13:36,070 --> 00:13:40,990
we could have basically equivalently

00:13:38,470 --> 00:13:43,690
powerful stuff that does what you need

00:13:40,990 --> 00:13:44,980
to do and isn't isn't respectable we can

00:13:43,690 --> 00:13:47,620
look at your package and say oh this

00:13:44,980 --> 00:13:49,180
one's gonna create a user and you know

00:13:47,620 --> 00:13:53,380
if two packet is want to create the same

00:13:49,180 --> 00:13:55,120
user we can skip one hey we can do it

00:13:53,380 --> 00:13:56,290
once we could wait till the end because

00:13:55,120 --> 00:13:58,660
we know that nobody's gonna actually

00:13:56,290 --> 00:14:00,340
need that user if we're if we're not

00:13:58,660 --> 00:14:01,720
building in a live system let's say if

00:14:00,340 --> 00:14:02,920
we're building some sort of container

00:14:01,720 --> 00:14:04,780
image we don't need to create the user

00:14:02,920 --> 00:14:08,050
in the middle if we're not running

00:14:04,780 --> 00:14:09,820
script lists that assume that the user

00:14:08,050 --> 00:14:12,940
will be there which they don't need to

00:14:09,820 --> 00:14:14,470
because why would they but this is what

00:14:12,940 --> 00:14:16,120
this is basically everything that

00:14:14,470 --> 00:14:17,350
happens in the script list so we have

00:14:16,120 --> 00:14:19,570
stuff for a lot of this for users and

00:14:17,350 --> 00:14:21,730
groups well you we have sis users

00:14:19,570 --> 00:14:24,370
there's a thing that comes with system D

00:14:21,730 --> 00:14:25,870
that just like makes users for you you

00:14:24,370 --> 00:14:27,100
can just drop a file into place you

00:14:25,870 --> 00:14:28,630
don't need to run random code just drop

00:14:27,100 --> 00:14:32,070
a file in place your user will get

00:14:28,630 --> 00:14:34,810
created when it is appropriate to do so

00:14:32,070 --> 00:14:36,640
now there's also system for control

00:14:34,810 --> 00:14:39,400
people like to become services on and

00:14:36,640 --> 00:14:41,140
off in their packages don't do that and

00:14:39,400 --> 00:14:43,570
then what if we're trying to build like

00:14:41,140 --> 00:14:45,940
I don't know a container image or a

00:14:43,570 --> 00:14:48,340
virtual machine image for somebody else

00:14:45,940 --> 00:14:50,670
don't turn my services don't within my

00:14:48,340 --> 00:14:52,770
light switches that actually forbid

00:14:50,670 --> 00:14:53,940
this is this is yeah this is actually

00:14:52,770 --> 00:14:55,560
forbidden inferred or now but this

00:14:53,940 --> 00:14:57,000
happens a lot in rel luckily that one's

00:14:55,560 --> 00:14:58,740
going away so these are all things that

00:14:57,000 --> 00:15:00,420
are mercifully going away that I'm going

00:14:58,740 --> 00:15:02,490
to need help and sort of you know

00:15:00,420 --> 00:15:04,320
discussion on how to get rid of some of

00:15:02,490 --> 00:15:06,060
them there's some things that are like

00:15:04,320 --> 00:15:08,310
creating empty or default files moving

00:15:06,060 --> 00:15:11,610
default configs into place things like

00:15:08,310 --> 00:15:13,260
that again systemd handles this for us

00:15:11,610 --> 00:15:16,710
use temp files up d it handles

00:15:13,260 --> 00:15:19,860
everything except I think one case my

00:15:16,710 --> 00:15:21,450
camera what it was oh that's right there

00:15:19,860 --> 00:15:22,920
was one part of systems that he where

00:15:21,450 --> 00:15:25,410
you couldn't very viously you couldn't

00:15:22,920 --> 00:15:27,030
give a user a different shell and in

00:15:25,410 --> 00:15:28,110
fixed in response to yeah a previous

00:15:27,030 --> 00:15:29,190
version of the talk they've actually

00:15:28,110 --> 00:15:30,600
fixed that so great

00:15:29,190 --> 00:15:34,320
people actually want to fix these things

00:15:30,600 --> 00:15:36,120
join us won't you temp files at these

00:15:34,320 --> 00:15:37,860
snippets for every case I've ever seen

00:15:36,120 --> 00:15:38,850
if you're trying if you're installing a

00:15:37,860 --> 00:15:40,110
package then you're like oh I need to

00:15:38,850 --> 00:15:41,730
create a file I need to set up some

00:15:40,110 --> 00:15:43,110
default stuff every time everything I've

00:15:41,730 --> 00:15:45,420
ever seen can be handled with the temp

00:15:43,110 --> 00:15:47,370
files snippet and if you have a use case

00:15:45,420 --> 00:15:48,480
that wouldn't work please come talk to

00:15:47,370 --> 00:15:52,440
me and we'll try and figure out of a

00:15:48,480 --> 00:15:55,590
better way system specific data and this

00:15:52,440 --> 00:15:57,840
is something that Steven did if you're

00:15:55,590 --> 00:15:59,520
generating keys or certificates or a

00:15:57,840 --> 00:16:01,710
machine ID something is specific to the

00:15:59,520 --> 00:16:02,790
hardware that you are running on or the

00:16:01,710 --> 00:16:05,220
system that you're running on if it's

00:16:02,790 --> 00:16:07,230
not bare hardware there's a

00:16:05,220 --> 00:16:09,360
specification in the Fedora project for

00:16:07,230 --> 00:16:12,900
how you do that how you handle initial

00:16:09,360 --> 00:16:14,640
service set up so like don't go handling

00:16:12,900 --> 00:16:18,360
that in packaged scriptlets it's not

00:16:14,640 --> 00:16:21,300
necessary system configuration yeah just

00:16:18,360 --> 00:16:23,580
don't mess with this stuff like there's

00:16:21,300 --> 00:16:25,380
no reason we have we have the presets

00:16:23,580 --> 00:16:29,130
for some of these things for I mean

00:16:25,380 --> 00:16:30,330
that's more for services on and off but

00:16:29,130 --> 00:16:31,740
like you shouldn't be twiddling the

00:16:30,330 --> 00:16:33,510
firewall you shouldn't be inserting

00:16:31,740 --> 00:16:35,220
kernel modules when your packet get

00:16:33,510 --> 00:16:36,480
installed I know you have a cool kernel

00:16:35,220 --> 00:16:38,340
module and you really think it should be

00:16:36,480 --> 00:16:40,200
installed if applicable but like just

00:16:38,340 --> 00:16:43,320
don't there's other ways of handling

00:16:40,200 --> 00:16:45,590
that I'm sure but generally that's not

00:16:43,320 --> 00:16:47,820
applicable when we're building images

00:16:45,590 --> 00:16:49,260
one of the big things about the product

00:16:47,820 --> 00:16:51,059
I'm working on which is well if there's

00:16:49,260 --> 00:16:53,339
Composer and there's welder

00:16:51,059 --> 00:16:55,019
there is the upstream part and that was

00:16:53,339 --> 00:16:57,839
what we're doing a six second image Phil

00:16:55,019 --> 00:16:59,789
is that we're building images from the

00:16:57,839 --> 00:17:02,399
outside in normally when you're building

00:16:59,789 --> 00:17:04,379
a system what we you know we solve it

00:17:02,399 --> 00:17:05,579
packages into it and I don't know if you

00:17:04,379 --> 00:17:07,259
if you were here for my previous talk I

00:17:05,579 --> 00:17:09,269
basically was like we basically open up

00:17:07,259 --> 00:17:10,499
your hard drive and it's not like we're

00:17:09,269 --> 00:17:12,089
laying a bunch of bricks down to make a

00:17:10,499 --> 00:17:14,189
wall it's like we've got all these

00:17:12,089 --> 00:17:15,870
little robots that have like chainsaws

00:17:14,189 --> 00:17:17,429
and arms and whatnot attached to them

00:17:15,870 --> 00:17:19,860
and we throw them all into this lake

00:17:17,429 --> 00:17:21,029
arena and they battle and they clamp on

00:17:19,860 --> 00:17:23,850
to each other and eventually they

00:17:21,029 --> 00:17:26,329
construct like Voltron and that's super

00:17:23,850 --> 00:17:28,860
cool that it works but it's really

00:17:26,329 --> 00:17:30,299
insanely complicated for what when you

00:17:28,860 --> 00:17:31,649
really just want to lay down all the

00:17:30,299 --> 00:17:32,940
files that are in these packages and

00:17:31,649 --> 00:17:35,190
then do the tweaks at the end they're

00:17:32,940 --> 00:17:36,570
necessary the whole point here is to

00:17:35,190 --> 00:17:41,100
figure out the tweaks that are necessary

00:17:36,570 --> 00:17:42,690
and do them when necessary this stuff is

00:17:41,100 --> 00:17:44,340
not necessary especially if you're

00:17:42,690 --> 00:17:45,470
building your package from the out or

00:17:44,340 --> 00:17:47,490
building a system from the outside

00:17:45,470 --> 00:17:49,740
because you're going to be doing it on

00:17:47,490 --> 00:17:51,539
the outside system and like I don't need

00:17:49,740 --> 00:17:54,629
your super cool eternal module installed

00:17:51,539 --> 00:17:56,549
on my laptop and then there's things

00:17:54,629 --> 00:17:59,039
like caches and catalogs this is the

00:17:56,549 --> 00:18:01,679
this is like running LD config after

00:17:59,039 --> 00:18:03,990
every library gets installed we're

00:18:01,679 --> 00:18:05,399
running you know the update desktop our

00:18:03,990 --> 00:18:07,409
update icon CAPTCHAs and all those

00:18:05,399 --> 00:18:09,749
update whatever things that people need

00:18:07,409 --> 00:18:12,299
to run those should be done handled with

00:18:09,749 --> 00:18:14,309
final triggers we've been transitioning

00:18:12,299 --> 00:18:16,230
stuff apparently G Lipsy has finally

00:18:14,309 --> 00:18:18,539
like it took a while for us yeah that's

00:18:16,230 --> 00:18:20,700
that's happening so like you no longer

00:18:18,539 --> 00:18:22,559
have QLD config and we're getting rid of

00:18:20,700 --> 00:18:24,600
that stuff on a case-by-case basis when

00:18:22,559 --> 00:18:25,860
we can figure out when the people who

00:18:24,600 --> 00:18:27,389
own this stuff are willing to do it

00:18:25,860 --> 00:18:31,350
because this is all you know Fedora it's

00:18:27,389 --> 00:18:33,330
volunteer work but it's a good idea if

00:18:31,350 --> 00:18:35,460
anything I hope that I can convince you

00:18:33,330 --> 00:18:37,889
all that like I'm not just up here like

00:18:35,460 --> 00:18:40,590
herd destroy all software I'm like well

00:18:37,889 --> 00:18:42,149
let's try and do stuff like smarter and

00:18:40,590 --> 00:18:46,019
one of the things we could be doing is

00:18:42,149 --> 00:18:47,429
putting control of tricky things like

00:18:46,019 --> 00:18:49,559
when do you actually have to run this

00:18:47,429 --> 00:18:50,100
update script will let the guy who had

00:18:49,559 --> 00:18:52,290
with the

00:18:50,100 --> 00:18:54,090
guy handle that the guy who runs the

00:18:52,290 --> 00:18:55,830
main package that handles the tool that

00:18:54,090 --> 00:18:58,800
does the update you drop down your files

00:18:55,830 --> 00:19:01,020
and you just walk away that's how it

00:18:58,800 --> 00:19:02,970
should be if you maintain any sort of

00:19:01,020 --> 00:19:05,070
tools or any packages that contain that

00:19:02,970 --> 00:19:06,720
sort of tooling please come talk to me

00:19:05,070 --> 00:19:09,660
and we'll figure out some sort of way of

00:19:06,720 --> 00:19:12,330
making sure that your stuff gets handled

00:19:09,660 --> 00:19:14,040
automatically that's really sort of my

00:19:12,330 --> 00:19:19,020
pitch for why would you get rid of

00:19:14,040 --> 00:19:20,130
script lips and that's about it do we

00:19:19,020 --> 00:19:28,170
have any questions and do we have

00:19:20,130 --> 00:19:29,820
somebody with a microphone it's a simple

00:19:28,170 --> 00:19:33,660
question have we solved the problem yet

00:19:29,820 --> 00:19:35,550
where you won a file in a package to be

00:19:33,660 --> 00:19:37,230
owned by a user that is created by that

00:19:35,550 --> 00:19:39,900
package because I recall that was a

00:19:37,230 --> 00:19:44,070
problem before him oh yeah

00:19:39,900 --> 00:19:45,930
if memory serves the RPM guys are

00:19:44,070 --> 00:19:47,400
talking about finally adding I have been

00:19:45,930 --> 00:19:49,140
talking about adding user and group

00:19:47,400 --> 00:19:53,040
support because like packages don't

00:19:49,140 --> 00:19:55,830
really work unless packages have to so

00:19:53,040 --> 00:19:57,660
you install correctly rpms do they have

00:19:55,830 --> 00:19:59,160
user names they don't have user IDs they

00:19:57,660 --> 00:20:00,420
expect you know I'm gonna create this

00:19:59,160 --> 00:20:01,860
user or I'm gonna create all these files

00:20:00,420 --> 00:20:03,240
and I'm going to make them owned by this

00:20:01,860 --> 00:20:05,700
user and so if that user doesn't exist

00:20:03,240 --> 00:20:07,650
it breaks so obviously if the RPM

00:20:05,700 --> 00:20:10,230
depends on that being there RPM should

00:20:07,650 --> 00:20:12,900
be handling that but like 15 years ago

00:20:10,230 --> 00:20:15,080
over there is like okay so we're trying

00:20:12,900 --> 00:20:18,170
to give them that fun Hey

00:20:15,080 --> 00:20:23,610
and at present rpm itself does not

00:20:18,170 --> 00:20:25,140
handle this however as one of the bits

00:20:23,610 --> 00:20:26,700
that we got from the systemd folks when

00:20:25,140 --> 00:20:28,620
we talked to them about this users T was

00:20:26,700 --> 00:20:30,870
that they didn't have now provided an

00:20:28,620 --> 00:20:34,140
upstream a then RPM macro that can be

00:20:30,870 --> 00:20:36,440
used for percent free essentially to do

00:20:34,140 --> 00:20:38,760
that to do this for us oh yeah sorry

00:20:36,440 --> 00:20:41,280
so we have a we have what is effectively

00:20:38,760 --> 00:20:42,960
a workaround but it's a nice handy macro

00:20:41,280 --> 00:20:44,550
that once we actually figure out how to

00:20:42,960 --> 00:20:46,590
get rid of the script let the proper or

00:20:44,550 --> 00:20:48,790
the descriptor that's proper the macro

00:20:46,590 --> 00:20:50,140
can just be replaced

00:20:48,790 --> 00:20:51,460
yeah one backs the macro can just be

00:20:50,140 --> 00:20:54,400
replaced with a little unit okay so

00:20:51,460 --> 00:20:56,770
there is a and I can use this in a blue

00:20:54,400 --> 00:20:58,690
respect that it will be guiding when I'm

00:20:56,770 --> 00:21:00,490
just could I use this workaround

00:20:58,690 --> 00:21:02,230
mechanism in a fedora spec and that

00:21:00,490 --> 00:21:09,460
would be sort of guideline compliant as

00:21:02,230 --> 00:21:11,080
of now no and that is specifically my

00:21:09,460 --> 00:21:13,450
fault I have been promising that to

00:21:11,080 --> 00:21:16,420
write that spec for FEC to approve for

00:21:13,450 --> 00:21:19,810
four months and I have been dragging my

00:21:16,420 --> 00:21:23,560
heels on it yes III oh yeah I owe you

00:21:19,810 --> 00:21:25,660
that spec okay so that's not fixed but

00:21:23,560 --> 00:21:29,110
will be soon I have a question about the

00:21:25,660 --> 00:21:31,930
same topic so and my medium size Linux

00:21:29,110 --> 00:21:35,650
environment which has some legacy

00:21:31,930 --> 00:21:37,300
baggage many groups like postfix exists

00:21:35,650 --> 00:21:40,960
in the directory service with the same

00:21:37,300 --> 00:21:42,700
GID in the same name spelling and when a

00:21:40,960 --> 00:21:46,780
scribbler tries to run that says add a

00:21:42,700 --> 00:21:48,760
group host fix it you know it fails with

00:21:46,780 --> 00:21:51,580
this handled with the case of another

00:21:48,760 --> 00:21:53,500
name service switching service already

00:21:51,580 --> 00:21:56,560
providing the same group the same GID

00:21:53,500 --> 00:21:57,520
god I would hope so it's supposed to I

00:21:56,560 --> 00:21:59,500
don't remember what their solution was

00:21:57,520 --> 00:22:02,380
going to be for that my solution is the

00:21:59,500 --> 00:22:04,450
sort of scorched-earth like nobody gets

00:22:02,380 --> 00:22:06,640
assigned to you ID or GID that's silly

00:22:04,450 --> 00:22:08,260
they all get assigned dynamically a

00:22:06,640 --> 00:22:10,030
start up and there's support for that in

00:22:08,260 --> 00:22:12,070
system D now where if you need a user

00:22:10,030 --> 00:22:13,240
you know it can just be created at the

00:22:12,070 --> 00:22:16,330
time that your service starts or

00:22:13,240 --> 00:22:18,460
whatever but that's new school if you're

00:22:16,330 --> 00:22:19,990
dealing with legacy stuff my

00:22:18,460 --> 00:22:21,430
understanding is that I don't know what

00:22:19,990 --> 00:22:23,140
the current macros look like that there

00:22:21,430 --> 00:22:24,280
are definitely the the currently

00:22:23,140 --> 00:22:26,590
approved like snippet that you're

00:22:24,280 --> 00:22:28,660
supposed to use is always like if this

00:22:26,590 --> 00:22:30,880
user doesn't exist then create it with

00:22:28,660 --> 00:22:33,520
this UID and GID otherwise leave it

00:22:30,880 --> 00:22:35,830
alone does that you know I'm not sure if

00:22:33,520 --> 00:22:39,220
they if that check works for you know

00:22:35,830 --> 00:22:41,620
non-local groups but thank you Oh nan I

00:22:39,220 --> 00:22:43,450
can't answer that because I wrote the

00:22:41,620 --> 00:22:45,130
fix for that specific problem so I know

00:22:43,450 --> 00:22:47,260
that that actually is actually fixed in

00:22:45,130 --> 00:22:48,990
fedora it used to be that it would just

00:22:47,260 --> 00:22:50,190
check at C password

00:22:48,990 --> 00:22:54,030
the proper approach now is they will

00:22:50,190 --> 00:22:55,620
call get PW UID to see you or get PWM

00:22:54,030 --> 00:22:57,210
whichever is appropriate and figure out

00:22:55,620 --> 00:22:58,800
if it's already if it's available to

00:22:57,210 --> 00:22:59,370
anything within a switch it's awesome

00:22:58,800 --> 00:23:13,290
thank you very much

00:22:59,370 --> 00:23:16,800
yeah all right no computers were harmed

00:23:13,290 --> 00:23:18,090
during that question on that item that

00:23:16,800 --> 00:23:21,330
you mentioned towards the end he said

00:23:18,090 --> 00:23:23,640
instead of updating caches and catalogs

00:23:21,330 --> 00:23:26,850
using file triggers instead would that

00:23:23,640 --> 00:23:27,870
be something like a system D pass unit

00:23:26,850 --> 00:23:31,590
or something like that

00:23:27,870 --> 00:23:34,080
tor um there is a there capability in in

00:23:31,590 --> 00:23:37,860
rpm there I think it's just called like

00:23:34,080 --> 00:23:40,140
percent file trigger where the Packers

00:23:37,860 --> 00:23:42,120
write the upstream package that owns the

00:23:40,140 --> 00:23:43,520
thing that actually maintains the cache

00:23:42,120 --> 00:23:45,510
or catalog

00:23:43,520 --> 00:23:47,970
watches have half so it works

00:23:45,510 --> 00:23:49,559
conceptually the same way I think that

00:23:47,970 --> 00:23:50,280
the system D units are actually a little

00:23:49,559 --> 00:23:52,380
more flexible

00:23:50,280 --> 00:23:54,660
I think the rpm file triggers can only

00:23:52,380 --> 00:23:56,880
work for like a directory kind of path

00:23:54,660 --> 00:23:59,280
or and there glob but it should be

00:23:56,880 --> 00:24:01,679
roughly equivalent where it's basically

00:23:59,280 --> 00:24:04,830
when rpm sees that a file has appeared

00:24:01,679 --> 00:24:06,929
here it'll run a script so if you so you

00:24:04,830 --> 00:24:08,370
as the packager of something that needs

00:24:06,929 --> 00:24:09,840
to be injected into that cache or

00:24:08,370 --> 00:24:11,040
catalog shouldn't have to worry about it

00:24:09,840 --> 00:24:12,960
and if you are currently worrying about

00:24:11,040 --> 00:24:15,090
it find the person who owns the tool

00:24:12,960 --> 00:24:17,460
that you're using and tell them to fix

00:24:15,090 --> 00:24:18,780
their stuff or come talk to me and I'll

00:24:17,460 --> 00:24:20,820
tell them to fix their stuff

00:24:18,780 --> 00:24:23,480
it shouldn't have to sounded like a

00:24:20,820 --> 00:24:23,480
threat right

00:24:25,620 --> 00:24:30,090
[Music]

00:24:27,080 --> 00:24:32,070
so one of the packages I maintain you

00:24:30,090 --> 00:24:35,730
know for my work as a third-party

00:24:32,070 --> 00:24:37,860
packager in various ecosystems is a tool

00:24:35,730 --> 00:24:38,580
that needs to have network communication

00:24:37,860 --> 00:24:40,380
open

00:24:38,580 --> 00:24:42,659
so it's a listening daemon so it needs

00:24:40,380 --> 00:24:44,820
to have a firewall port opened and you

00:24:42,659 --> 00:24:47,789
said earlier in the top to just not do

00:24:44,820 --> 00:24:49,889
it but if in the case where it's running

00:24:47,789 --> 00:24:51,960
how would I do it and in the case where

00:24:49,889 --> 00:24:53,399
it's being preloaded like I don't I

00:24:51,960 --> 00:24:57,690
don't really know how to deal with that

00:24:53,399 --> 00:24:58,740
particular case all that well I think

00:24:57,690 --> 00:25:01,799
Sivan might have something to say about

00:24:58,740 --> 00:25:03,889
that yeah I can take some of that in the

00:25:01,799 --> 00:25:06,419
case of fire of firewall

00:25:03,889 --> 00:25:10,139
Fedora's general answer to firewalls

00:25:06,419 --> 00:25:12,059
firewall D which as of two years ago now

00:25:10,139 --> 00:25:14,549
I think can handle a it has a the

00:25:12,059 --> 00:25:16,649
ability to just drop a file and tell it

00:25:14,549 --> 00:25:18,240
that this should be enabled so Innes so

00:25:16,649 --> 00:25:19,980
it won't take effect okay effect

00:25:18,240 --> 00:25:21,659
immediately but it'll be on next boot so

00:25:19,980 --> 00:25:24,179
that is the preferred approach for a

00:25:21,659 --> 00:25:26,490
service that that we shouldn't do that

00:25:24,179 --> 00:25:28,830
that being said this is also forbidden

00:25:26,490 --> 00:25:29,340
in main packages that are approved for

00:25:28,830 --> 00:25:31,620
fedora

00:25:29,340 --> 00:25:32,970
because the working groups on the end

00:25:31,620 --> 00:25:35,639
fest go make the decisions on what is

00:25:32,970 --> 00:25:37,379
allowed to be open by default right but

00:25:35,639 --> 00:25:40,440
for a third party package there is a

00:25:37,379 --> 00:25:42,720
there's a firewall the upstream feature

00:25:40,440 --> 00:25:44,129
that allows you to set that because it

00:25:42,720 --> 00:25:47,580
with it'll do nice things even if I'm

00:25:44,129 --> 00:25:49,630
not in ignore package yeah and so for

00:25:47,580 --> 00:25:53,600
that

00:25:49,630 --> 00:25:56,299
does that answer your question yeah yeah

00:25:53,600 --> 00:26:00,020
I think the general sort of lesson there

00:25:56,299 --> 00:26:02,270
is that activating changes to the system

00:26:00,020 --> 00:26:04,490
immediately is a policy decision that

00:26:02,270 --> 00:26:05,750
isn't necessarily up to your package but

00:26:04,490 --> 00:26:07,520
we have pushed it on to packagers

00:26:05,750 --> 00:26:10,190
historically and we should stop doing

00:26:07,520 --> 00:26:11,539
that one would hope that all you would

00:26:10,190 --> 00:26:13,010
do as a packager is drop files into

00:26:11,539 --> 00:26:14,240
place and then things would happen and

00:26:13,010 --> 00:26:16,429
so every time that you have to as a

00:26:14,240 --> 00:26:17,899
packager like go to crank some knob or

00:26:16,429 --> 00:26:21,470
flip some switch to make the right thing

00:26:17,899 --> 00:26:23,750
happen it was probably a good idea if

00:26:21,470 --> 00:26:25,520
you figure out who owns that knob or

00:26:23,750 --> 00:26:27,320
switch and talk to them about why it is

00:26:25,520 --> 00:26:29,929
you had to turn it manually because like

00:26:27,320 --> 00:26:31,039
that's crappy experience for you and a

00:26:29,929 --> 00:26:32,659
waste of your time and then you have to

00:26:31,039 --> 00:26:34,399
manage you know maintain that script

00:26:32,659 --> 00:26:37,460
forever and that should just be part of

00:26:34,399 --> 00:26:38,990
the system so that's a general sort of

00:26:37,460 --> 00:26:41,059
hey if this is how I think that you

00:26:38,990 --> 00:26:42,470
encounter frequently talk to your

00:26:41,059 --> 00:26:43,850
upstreams or talk to me and I'll talk to

00:26:42,470 --> 00:26:45,679
your upstreams or something like that

00:26:43,850 --> 00:26:48,710
but we can fix all of this it's all open

00:26:45,679 --> 00:26:50,919
source we have the power and there's any

00:26:48,710 --> 00:26:50,919
other questions

00:26:52,360 --> 00:26:57,730
oh yeah no of you

00:26:58,960 --> 00:27:03,700
or you can just holler and I'll love

00:27:01,290 --> 00:27:05,650
this is a sort of a theoretical question

00:27:03,700 --> 00:27:07,330
but if you're rethinking as you're

00:27:05,650 --> 00:27:09,040
rethinking you know packaging and all

00:27:07,330 --> 00:27:11,350
the installation stuff what are your

00:27:09,040 --> 00:27:13,480
thoughts around things like pip and gems

00:27:11,350 --> 00:27:14,710
and all the other sort of things out

00:27:13,480 --> 00:27:17,140
there well let's that's the thing right

00:27:14,710 --> 00:27:19,420
it is the year of our Lord 2018 and

00:27:17,140 --> 00:27:21,460
every package every programming language

00:27:19,420 --> 00:27:23,710
comes with a seven packaging system so

00:27:21,460 --> 00:27:25,750
like why do we insist that everybody use

00:27:23,710 --> 00:27:28,840
our packaging system which is like way

00:27:25,750 --> 00:27:30,790
harder and gnarlier to use this is a

00:27:28,840 --> 00:27:33,610
much bigger problem than solving Seldon

00:27:30,790 --> 00:27:36,160
rpm especially the way we use our p.m.

00:27:33,610 --> 00:27:37,660
today we end up having to wrap every

00:27:36,160 --> 00:27:40,120
other packaging system which is why we

00:27:37,660 --> 00:27:42,550
have so many gnarly gnarly things in our

00:27:40,120 --> 00:27:44,440
dependency database now the most common

00:27:42,550 --> 00:27:45,610
or uncommon words if you split apart

00:27:44,440 --> 00:27:47,890
every package name one of most common

00:27:45,610 --> 00:27:51,880
words that comes up is github because

00:27:47,890 --> 00:27:54,490
like every go module is hosted on github

00:27:51,880 --> 00:27:58,150
and so the word github shows up like 15

00:27:54,490 --> 00:28:00,580
million times it's ridiculous that's a

00:27:58,150 --> 00:28:01,750
weird abuse of a system that was never

00:28:00,580 --> 00:28:03,520
designed for that sort of thing and we

00:28:01,750 --> 00:28:07,480
need to work on designing a system that

00:28:03,520 --> 00:28:10,450
like handles existing packaging tools

00:28:07,480 --> 00:28:14,230
without there being that sort of

00:28:10,450 --> 00:28:15,670
impedance mismatch so I have general big

00:28:14,230 --> 00:28:17,650
hand-wavy ideas about how we should

00:28:15,670 --> 00:28:19,810
handle that but I don't have anything to

00:28:17,650 --> 00:28:22,990
tell you about right now what we're what

00:28:19,810 --> 00:28:24,400
we should do with it like today I had my

00:28:22,990 --> 00:28:26,470
big hand wavey talk was earlier in the

00:28:24,400 --> 00:28:31,000
day and I'm happy to yeah find me a beer

00:28:26,470 --> 00:28:33,919
and I'll tell you all about it but

00:28:31,000 --> 00:28:35,360
yes I probably will anyway yeah if you

00:28:33,919 --> 00:28:37,250
can't find me yelling about scriptlets

00:28:35,360 --> 00:28:39,890
that the at a tree later in the evening

00:28:37,250 --> 00:28:44,480
then I'll remind you of my hotel is you

00:28:39,890 --> 00:28:48,650
can send me home yeah no I think that in

00:28:44,480 --> 00:28:50,960
the longer term we as a community will

00:28:48,650 --> 00:28:52,850
need to accept it like people do their

00:28:50,960 --> 00:28:55,179
own packaging and we need a system that

00:28:52,850 --> 00:28:57,440
works with that instead of against it

00:28:55,179 --> 00:29:00,380
and what that looks like is a really

00:28:57,440 --> 00:29:02,330
interesting conversation but it's not

00:29:00,380 --> 00:29:03,490
one for this moment not because I don't

00:29:02,330 --> 00:29:08,559
want to have it but because you know

00:29:03,490 --> 00:29:08,559
triplets time so yeah in Belsen

00:29:11,970 --> 00:29:16,200
this is part of my whole leg practically

00:29:14,610 --> 00:29:18,330
how do we get from the world we have

00:29:16,200 --> 00:29:19,919
right now to the glorious future that I

00:29:18,330 --> 00:29:21,929
someday envisioned I'd like us all to

00:29:19,919 --> 00:29:24,120
share and dance and thus sing in the

00:29:21,929 --> 00:29:26,519
fields of wonder but right now we got to

00:29:24,120 --> 00:29:32,370
dig out from a huge pile of crap that is

00:29:26,519 --> 00:29:34,440
scriptlets anyway yes so during the

00:29:32,370 --> 00:29:36,629
center west doto I gave an unplanned

00:29:34,440 --> 00:29:38,809
lightning talk about how I sped up the

00:29:36,629 --> 00:29:43,009
prison of scientific workstations with a

00:29:38,809 --> 00:29:47,190
unravel 7 with about 4,000 binary rpms

00:29:43,009 --> 00:29:49,649
from 6 hours to one hour the other

00:29:47,190 --> 00:29:51,419
change in command so hopelessly I'm

00:29:49,649 --> 00:29:53,190
D'Angelo's TNF is outside the scope of

00:29:51,419 --> 00:29:54,809
this conversation it's a limitation of

00:29:53,190 --> 00:29:57,450
the integration between the two as

00:29:54,809 --> 00:29:59,850
opposed to the current but the other

00:29:57,450 --> 00:30:01,320
change was at provision time I'm like

00:29:59,850 --> 00:30:03,870
before people are keysto using the

00:30:01,320 --> 00:30:07,740
machine or running applications using no

00:30:03,870 --> 00:30:10,799
sync no sync is a small like hundreds

00:30:07,740 --> 00:30:14,789
Locker library that surprises f sync

00:30:10,799 --> 00:30:15,960
sync and similar function calls the idea

00:30:14,789 --> 00:30:21,240
is that the end of a provision you

00:30:15,960 --> 00:30:22,830
reboot anyway which forces F sync that's

00:30:21,240 --> 00:30:24,419
the Debian package version whereas no

00:30:22,830 --> 00:30:27,389
sanga's package for the right a threat

00:30:24,419 --> 00:30:30,929
for the redhead family that is a clever

00:30:27,389 --> 00:30:32,729
unsurprising and completely filthy yeah

00:30:30,929 --> 00:30:35,129
but I mean I'm glad to hear that you're

00:30:32,729 --> 00:30:37,859
doing these these post transactions

00:30:35,129 --> 00:30:41,039
scriptlets like to eliminate the amount

00:30:37,859 --> 00:30:42,299
of sinks but has anybody some people are

00:30:41,039 --> 00:30:44,129
trying to integrate new sink with

00:30:42,299 --> 00:30:45,929
anaconda because we boots at the end and

00:30:44,129 --> 00:30:48,599
just sink at the ending anyway has

00:30:45,929 --> 00:30:52,289
anybody like ever consider just like oh

00:30:48,599 --> 00:30:56,190
I want to do a quick revision only one F

00:30:52,289 --> 00:31:01,259
sink at the end of the of the entire

00:30:56,190 --> 00:31:03,089
transaction I don't if you yeah if you

00:31:01,259 --> 00:31:05,039
tried to get them to add a flag for that

00:31:03,089 --> 00:31:06,779
at their feet anger

00:31:05,039 --> 00:31:08,549
obviously disabled by default but you

00:31:06,779 --> 00:31:10,649
know yeah I mean it's a tough question

00:31:08,549 --> 00:31:13,019
cuz it like it doesn't really those

00:31:10,649 --> 00:31:14,849
things don't help anything the problem

00:31:13,019 --> 00:31:16,469
is we can't prove they aren't necessary

00:31:14,849 --> 00:31:17,729
that's the whole problem with grip list

00:31:16,469 --> 00:31:19,589
is there a black box and there might be

00:31:17,729 --> 00:31:21,629
a case where it is necessary and we've

00:31:19,589 --> 00:31:23,940
always been working that way and so we

00:31:21,629 --> 00:31:25,229
can't safely turn it off we could let

00:31:23,940 --> 00:31:29,279
you safely turn it off and there might

00:31:25,229 --> 00:31:31,320
be switch to do that somewhere but we

00:31:29,279 --> 00:31:32,999
can never be like you should use that

00:31:31,320 --> 00:31:34,259
it'll make your stuff faster because as

00:31:32,999 --> 00:31:37,769
soon as somebody's house catches fire

00:31:34,259 --> 00:31:39,179
then we end up paying the bill oh yeah

00:31:37,769 --> 00:31:40,469
I'm sure that people would use the top

00:31:39,179 --> 00:31:43,200
date existing systems but for

00:31:40,469 --> 00:31:44,399
provisioning time it's useful yeah cuz

00:31:43,200 --> 00:31:46,950
if you fail in the middle person you

00:31:44,399 --> 00:31:50,039
just repeat division well my goals for

00:31:46,950 --> 00:31:52,080
provisioning are to have it be that

00:31:50,039 --> 00:31:54,450
you're just laying down this and not

00:31:52,080 --> 00:31:55,889
like dealing with rpm in that process at

00:31:54,450 --> 00:31:58,200
all you should just have the pelas that

00:31:55,889 --> 00:32:00,269
you want to lay it down ready to go and

00:31:58,200 --> 00:32:04,349
you can do that with the Installer as

00:32:00,269 --> 00:32:06,450
well but that's more long-term goal yeah

00:32:04,349 --> 00:32:08,680
no that's that's a clever and awful hack

00:32:06,450 --> 00:32:10,900
I commend you

00:32:08,680 --> 00:32:12,730
it's worked it over 200 times reliably

00:32:10,900 --> 00:32:20,410
though oh yeah pressure control

00:32:12,730 --> 00:32:22,630
conditions all right anything else no

00:32:20,410 --> 00:32:25,020
all right then thank you for your time

00:32:22,630 --> 00:32:25,020
detention

00:32:32,690 --> 00:32:37,799
[Music]

00:32:34,259 --> 00:32:37,799
doesn't paint it red

00:32:46,320 --> 00:32:53,259
I love to debbie's me but no a

00:32:50,820 --> 00:32:56,279
affiliations the vibrations are severe

00:32:53,259 --> 00:32:56,279
in every movie

00:32:57,059 --> 00:33:03,539
yeah there's all kinds of good night I

00:33:00,789 --> 00:33:03,539
said so

00:33:25,530 --> 00:33:28,619

YouTube URL: https://www.youtube.com/watch?v=1m6Fqw_OvQ8


