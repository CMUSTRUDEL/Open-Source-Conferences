Title: QE is Dead: Why Quality is Everyone's Job
Publication date: 2019-02-25
Playlist: DevConfUS 2018
Description: 
	
Captions: 
	00:00:03,740 --> 00:00:08,420
so we're doing something right I guess

00:00:22,810 --> 00:00:29,310
all right

00:00:25,360 --> 00:00:29,310
those from Union

00:00:37,530 --> 00:00:41,480
I've started okay

00:02:47,670 --> 00:02:52,200
we never would have a pottery there so

00:02:50,880 --> 00:02:54,380
whatever gonna have a moderator for this

00:02:52,200 --> 00:02:54,380
dog

00:03:34,370 --> 00:03:38,330
all right well no one's no one's

00:03:36,830 --> 00:03:40,489
moderating so I'm just gonna get get

00:03:38,330 --> 00:03:42,140
started thanks everyone for coming I

00:03:40,489 --> 00:03:44,959
know it's early

00:03:42,140 --> 00:03:46,280
apparently the attendance shows that my

00:03:44,959 --> 00:03:48,769
name is Micah Abbott I'm a senior

00:03:46,280 --> 00:03:50,660
quality engineer but had I worked on the

00:03:48,769 --> 00:03:53,060
Red Hat atomic host product and the Red

00:03:50,660 --> 00:03:55,420
Hat core OS product I'm here to talk

00:03:53,060 --> 00:03:57,799
about white quality is everyone's job

00:03:55,420 --> 00:04:01,220
I'll give a quick disclaimer though when

00:03:57,799 --> 00:04:03,260
I proposed my abstract I had a idea of

00:04:01,220 --> 00:04:05,030
what I wanted to talk about in terms of

00:04:03,260 --> 00:04:07,549
Claudia's everyone's job but when I just

00:04:05,030 --> 00:04:10,610
develop the slides it transformed more

00:04:07,549 --> 00:04:12,019
into building how to build a culture

00:04:10,610 --> 00:04:15,260
around that how to build a team that

00:04:12,019 --> 00:04:17,479
that respects that so I will still touch

00:04:15,260 --> 00:04:20,989
upon what how quality is everyone's job

00:04:17,479 --> 00:04:24,680
but there might not be as much focus as

00:04:20,989 --> 00:04:26,780
I planned so first some bad news I'm not

00:04:24,680 --> 00:04:28,660
an expert in this there's probably

00:04:26,780 --> 00:04:33,530
people who could speak to this more

00:04:28,660 --> 00:04:34,850
intelligently and profoundly none of the

00:04:33,530 --> 00:04:38,060
advice I'm going to give is particularly

00:04:34,850 --> 00:04:40,070
novel if you were to Google some

00:04:38,060 --> 00:04:41,120
software development practices and

00:04:40,070 --> 00:04:42,050
quality practices you could probably

00:04:41,120 --> 00:04:44,450
come up with a lot of the stuff I'm

00:04:42,050 --> 00:04:45,889
gonna tell you about I'm also really bad

00:04:44,450 --> 00:04:48,080
at following my own advice so there's

00:04:45,889 --> 00:04:49,610
lots of things I haven't put into

00:04:48,080 --> 00:04:52,400
practice in my own day-to-day job my own

00:04:49,610 --> 00:04:54,020
organization and there's no guarantee

00:04:52,400 --> 00:04:55,340
that any advice I'm going to give you is

00:04:54,020 --> 00:04:57,349
gonna work for your team

00:04:55,340 --> 00:05:01,610
software development especially quality

00:04:57,349 --> 00:05:02,930
is really complicated and it really you

00:05:01,610 --> 00:05:04,430
really have to know your own team to

00:05:02,930 --> 00:05:07,460
figure out what's gonna work what's not

00:05:04,430 --> 00:05:09,590
gonna work but I do have good news I've

00:05:07,460 --> 00:05:11,930
been doing this for almost 20 years so I

00:05:09,590 --> 00:05:13,479
have what I think is a good amount of

00:05:11,930 --> 00:05:16,159
experience to make some observations

00:05:13,479 --> 00:05:19,429
give some opinions on a matter

00:05:16,159 --> 00:05:21,199
I'm is tqb certified for those of you

00:05:19,429 --> 00:05:23,349
who don't know what is tqv is it's the

00:05:21,199 --> 00:05:25,699
internet international software testing

00:05:23,349 --> 00:05:28,249
qualification board they're trying to

00:05:25,699 --> 00:05:30,080
promote standardized QE practices and

00:05:28,249 --> 00:05:32,360
best values I went through their

00:05:30,080 --> 00:05:34,699
foundation level course passed their

00:05:32,360 --> 00:05:36,319
test got the certification I've been

00:05:34,699 --> 00:05:38,809
participating an agile and an agile team

00:05:36,319 --> 00:05:41,619
for almost four years now this talk will

00:05:38,809 --> 00:05:44,929
be pretty heavy on the agile methodology

00:05:41,619 --> 00:05:47,899
down the line I'm a big fan of it having

00:05:44,929 --> 00:05:50,209
lived both sides of agile and other ways

00:05:47,899 --> 00:05:51,529
of doing development and I've got a

00:05:50,209 --> 00:05:54,619
psychology degree in the only reason I

00:05:51,529 --> 00:05:56,029
mentioned that is because a lot of what

00:05:54,619 --> 00:05:57,979
I want to talk about is building teams

00:05:56,029 --> 00:05:59,839
how to form relationships within teams

00:05:57,979 --> 00:06:02,779
and I think the background in psychology

00:05:59,839 --> 00:06:06,439
really is helpful in navigating those

00:06:02,779 --> 00:06:09,409
waters so first I want to talk about how

00:06:06,439 --> 00:06:11,329
we did Kiwi in the past I'm sure most of

00:06:09,409 --> 00:06:14,649
you are familiar with the waterfall

00:06:11,329 --> 00:06:16,489
model it looks like this you got

00:06:14,649 --> 00:06:17,959
requirements that are made that fall

00:06:16,489 --> 00:06:21,649
down a design implementation

00:06:17,959 --> 00:06:23,149
verification etc there's a lot of

00:06:21,649 --> 00:06:25,249
problems with this model in my opinion

00:06:23,149 --> 00:06:27,110
and I'm gonna start going through them

00:06:25,249 --> 00:06:29,689
number one you end up with multiple

00:06:27,110 --> 00:06:31,719
silos or responsibilities like product

00:06:29,689 --> 00:06:34,189
management development Quality Assurance

00:06:31,719 --> 00:06:36,319
everyone tends to own that their little

00:06:34,189 --> 00:06:37,819
piece of work and doesn't necessarily

00:06:36,319 --> 00:06:40,360
pay attention to what other people are

00:06:37,819 --> 00:06:42,949
doing that in the whole chain and

00:06:40,360 --> 00:06:46,490
sometimes that generates silos and silos

00:06:42,949 --> 00:06:48,589
for example you sometimes end up in a

00:06:46,490 --> 00:06:50,179
quality organization where one team is

00:06:48,589 --> 00:06:50,800
doing test automation development and

00:06:50,179 --> 00:06:52,690
then the other key

00:06:50,800 --> 00:06:54,610
is doing the execution and they may not

00:06:52,690 --> 00:06:56,680
even be communicating very well or

00:06:54,610 --> 00:06:58,750
communicating outside of that that

00:06:56,680 --> 00:07:00,460
larger silo

00:06:58,750 --> 00:07:01,840
I guess seven for everyone tends to stay

00:07:00,460 --> 00:07:03,849
in their own land they own their piece

00:07:01,840 --> 00:07:06,400
at work until we get to the end and then

00:07:03,849 --> 00:07:07,569
they pitch it off to the next group and

00:07:06,400 --> 00:07:11,099
then the next group has to deal with

00:07:07,569 --> 00:07:12,940
whatever output was given was generated

00:07:11,099 --> 00:07:14,919
and it doesn't really encourage

00:07:12,940 --> 00:07:17,949
communication between the groups you

00:07:14,919 --> 00:07:21,849
like I said when you are so singularly

00:07:17,949 --> 00:07:25,150
focused on your output you aren't really

00:07:21,849 --> 00:07:27,159
going back up the chain to talks about

00:07:25,150 --> 00:07:29,139
how they did something what they did or

00:07:27,159 --> 00:07:33,520
getting involved in that process earlier

00:07:29,139 --> 00:07:35,469
on and the one thing I noticed in these

00:07:33,520 --> 00:07:37,330
models explicitly missing from our

00:07:35,469 --> 00:07:39,490
groups like support and documentation

00:07:37,330 --> 00:07:41,440
there's no box on that that chain that

00:07:39,490 --> 00:07:43,539
says you know support should be

00:07:41,440 --> 00:07:45,400
providing input here unless you have a

00:07:43,539 --> 00:07:46,810
really good product manager a program

00:07:45,400 --> 00:07:49,960
program manager who might be pulling

00:07:46,810 --> 00:07:52,060
people in like that typically support

00:07:49,960 --> 00:07:53,319
and documentation are those and those

00:07:52,060 --> 00:07:57,370
types of organizations are left out of

00:07:53,319 --> 00:08:00,520
the discussion when we're owning the own

00:07:57,370 --> 00:08:01,930
work in each stage is when the output of

00:08:00,520 --> 00:08:03,699
each stage is if owned by a certain

00:08:01,930 --> 00:08:05,529
group any mistakes or then just passed

00:08:03,699 --> 00:08:07,380
on to the next group and this encourages

00:08:05,529 --> 00:08:11,139
things like throwing code over the wall

00:08:07,380 --> 00:08:13,150
which you end up like I assure you maybe

00:08:11,139 --> 00:08:14,710
you see a Monty Python where the code

00:08:13,150 --> 00:08:17,380
comes over the wall Keeley has to take

00:08:14,710 --> 00:08:19,240
it and oftentimes you end up in a

00:08:17,380 --> 00:08:21,099
situation like this where the code

00:08:19,240 --> 00:08:22,779
doesn't compile it doesn't build or you

00:08:21,099 --> 00:08:24,639
have a kernel panic and QE is just

00:08:22,779 --> 00:08:28,710
frustrated because clearly the

00:08:24,639 --> 00:08:28,710
developers didn't test their code

00:08:28,860 --> 00:08:32,190
and I touched one before isn't really

00:08:30,870 --> 00:08:35,010
conducive to having teams work together

00:08:32,190 --> 00:08:36,930
yeah when you're just throwing code over

00:08:35,010 --> 00:08:40,530
the wall you're not really in a good

00:08:36,930 --> 00:08:43,919
relationship to collaborate on on the

00:08:40,530 --> 00:08:45,750
the product itself and I found in my

00:08:43,919 --> 00:08:47,880
experience it's a poor model for

00:08:45,750 --> 00:08:52,860
providing feedback to other teams

00:08:47,880 --> 00:08:54,150
engineers in my experience when working

00:08:52,860 --> 00:08:57,480
with other development teams in this

00:08:54,150 --> 00:08:59,250
model you rarely get the hey thanks for

00:08:57,480 --> 00:09:01,440
testing this feature hey thanks for

00:08:59,250 --> 00:09:03,150
finding that bug it's just sort of like

00:09:01,440 --> 00:09:05,850
everyone's doing their job and focused

00:09:03,150 --> 00:09:08,550
on the next the next bit of output they

00:09:05,850 --> 00:09:09,960
have to generate and there's really

00:09:08,550 --> 00:09:12,300
little to no effort to improve this

00:09:09,960 --> 00:09:14,190
process you everyone just keeps doing

00:09:12,300 --> 00:09:17,040
the same thing over and over again and

00:09:14,190 --> 00:09:20,780
the same mistakes are made often and no

00:09:17,040 --> 00:09:20,780
little to no improvement is made

00:09:22,190 --> 00:09:27,240
additionally these interactions that you

00:09:24,240 --> 00:09:28,470
do have with other groups is when

00:09:27,240 --> 00:09:31,110
something is typically when something's

00:09:28,470 --> 00:09:33,120
on fire like there's a deadline that's

00:09:31,110 --> 00:09:34,650
been missed there's a bug that's been

00:09:33,120 --> 00:09:37,440
found and you have to release the

00:09:34,650 --> 00:09:40,160
product and it tends up to be ends up

00:09:37,440 --> 00:09:42,150
being like a high stakes lots of emotion

00:09:40,160 --> 00:09:46,350
environment where everyone's trying to

00:09:42,150 --> 00:09:48,410
place blame on the other person or the

00:09:46,350 --> 00:09:51,200
other group I should say

00:09:48,410 --> 00:09:52,730
so moving to the present we're starting

00:09:51,200 --> 00:09:54,740
to see waterfall models get phased out

00:09:52,730 --> 00:09:56,210
when an agile is getting phased in at

00:09:54,740 --> 00:09:58,850
Red Hat in particular where we have a

00:09:56,210 --> 00:10:01,100
strong commitment to doing agile in as

00:09:58,850 --> 00:10:03,110
many places as possible we have an agile

00:10:01,100 --> 00:10:04,700
architect actually who helps drive that

00:10:03,110 --> 00:10:07,640
message across all the Grif all the

00:10:04,700 --> 00:10:09,140
teams and this you know we end up with

00:10:07,640 --> 00:10:11,030
in this model we end up with QA and

00:10:09,140 --> 00:10:15,470
development under the same umbrella and

00:10:11,030 --> 00:10:16,810
the same team so we end up succeeding or

00:10:15,470 --> 00:10:19,460
failing together so everyone's

00:10:16,810 --> 00:10:23,750
intrinsically linked to the outcome of

00:10:19,460 --> 00:10:24,890
the product if QE does a bad job or if

00:10:23,750 --> 00:10:26,720
dev does a bad job

00:10:24,890 --> 00:10:29,270
there is no QE in dev anymore it's just

00:10:26,720 --> 00:10:32,450
one team that team year 16 succeeds or

00:10:29,270 --> 00:10:34,220
fails and at this model I think it

00:10:32,450 --> 00:10:36,260
promotes professional growth because

00:10:34,220 --> 00:10:37,700
you're allowed to work on things that

00:10:36,260 --> 00:10:41,060
wouldn't typically fall under your

00:10:37,700 --> 00:10:44,240
purview like Q we can work on dev tasks

00:10:41,060 --> 00:10:45,830
deaths can work on QB tasks and in some

00:10:44,240 --> 00:10:47,270
cases you might own some of the rel ends

00:10:45,830 --> 00:10:50,870
process you get to work on some of the

00:10:47,270 --> 00:10:52,700
relic self as well and also agile allows

00:10:50,870 --> 00:10:54,410
you to constantly improve the process so

00:10:52,700 --> 00:10:57,260
you can look at what happened in the

00:10:54,410 --> 00:10:59,960
past make an analysis suggest changes

00:10:57,260 --> 00:11:03,460
try those changes and then go forward

00:10:59,960 --> 00:11:03,460
hopefully for the better

00:11:04,140 --> 00:11:08,770
now when you start practicing agile you

00:11:06,610 --> 00:11:11,050
usually end up practicing DevOps as well

00:11:08,770 --> 00:11:12,670
and that's when you know a team the team

00:11:11,050 --> 00:11:15,400
owns all the phases of development our

00:11:12,670 --> 00:11:17,290
multiple phases of the development like

00:11:15,400 --> 00:11:19,720
for example the actual development tests

00:11:17,290 --> 00:11:22,210
release and monitoring there could be

00:11:19,720 --> 00:11:23,440
other phases of development in your

00:11:22,210 --> 00:11:24,700
model

00:11:23,440 --> 00:11:27,270
but these are the ones that kind of

00:11:24,700 --> 00:11:30,070
stick out to me and this again this

00:11:27,270 --> 00:11:31,630
model of owning all the phases you need

00:11:30,070 --> 00:11:33,160
to have excellent communication and your

00:11:31,630 --> 00:11:36,390
team and you've got to work well

00:11:33,160 --> 00:11:38,710
together in a team and this becomes your

00:11:36,390 --> 00:11:40,480
this is like the key point like you have

00:11:38,710 --> 00:11:43,450
to have great teamwork in order to

00:11:40,480 --> 00:11:45,130
succeed in this model so going in the

00:11:43,450 --> 00:11:46,390
future looking to the future we're

00:11:45,130 --> 00:11:49,090
probably gonna see more agile the

00:11:46,390 --> 00:11:50,530
adoption more DevOps adoption we're

00:11:49,090 --> 00:11:52,810
gonna see more automation automate

00:11:50,530 --> 00:11:54,220
obviously things like continuing to get

00:11:52,810 --> 00:11:56,560
the integration delivery become really

00:11:54,220 --> 00:11:57,790
important even more important than they

00:11:56,560 --> 00:12:00,310
are now because we want to be able to

00:11:57,790 --> 00:12:02,460
move faster and produce software that's

00:12:00,310 --> 00:12:06,370
a higher quality at the same same time

00:12:02,460 --> 00:12:07,780
and I threw in this because everyone's

00:12:06,370 --> 00:12:12,010
talking about it artificial intelligence

00:12:07,780 --> 00:12:14,680
machine learning I haven't seen this in

00:12:12,010 --> 00:12:16,600
practice yet in the QE space but it's

00:12:14,680 --> 00:12:18,460
probably gonna happen I can imagine

00:12:16,600 --> 00:12:21,010
someone writing something that would

00:12:18,460 --> 00:12:23,830
analyze test results and can figure out

00:12:21,010 --> 00:12:24,810
commonly commonly found bugs or errors

00:12:23,830 --> 00:12:28,390
or whatnot

00:12:24,810 --> 00:12:30,040
and obviously when I'm here to emphasize

00:12:28,390 --> 00:12:31,870
it's gonna be a lot more teamwork you've

00:12:30,040 --> 00:12:34,930
got to have good teamwork to be

00:12:31,870 --> 00:12:36,700
successful going forward much like they

00:12:34,930 --> 00:12:40,940
didn't income in

00:12:36,700 --> 00:12:42,649
so I'm going to talk about what I think

00:12:40,940 --> 00:12:45,050
what I describe is a highly functional

00:12:42,649 --> 00:12:46,940
team I don't know if I read this or I

00:12:45,050 --> 00:12:48,529
made it up myself but it's a team that

00:12:46,940 --> 00:12:50,300
works well together it's able to solve

00:12:48,529 --> 00:12:52,160
problems together and achieve your goals

00:12:50,300 --> 00:12:53,630
together consistently you're not going

00:12:52,160 --> 00:12:56,720
to do that every week or every day or

00:12:53,630 --> 00:13:02,089
whatever but overall you have a really

00:12:56,720 --> 00:13:03,709
highly functional unit of people and one

00:13:02,089 --> 00:13:06,680
of the cornerstones of this I think is

00:13:03,709 --> 00:13:09,260
open communication you need to be able

00:13:06,680 --> 00:13:11,870
to talk to your team members completely

00:13:09,260 --> 00:13:14,149
honestly and let them know what's

00:13:11,870 --> 00:13:17,149
happening in inside the team and with

00:13:14,149 --> 00:13:18,620
the product itself and to do that you

00:13:17,149 --> 00:13:20,540
should really everyone the team should

00:13:18,620 --> 00:13:22,610
feel respected and show respect to the

00:13:20,540 --> 00:13:26,060
other people on the team and this breeds

00:13:22,610 --> 00:13:29,750
a an environment where no one's afraid

00:13:26,060 --> 00:13:31,100
to share an opinion or share some

00:13:29,750 --> 00:13:32,300
feedback that might be controversial

00:13:31,100 --> 00:13:35,779
because they know they're not going to

00:13:32,300 --> 00:13:38,810
get judged when they make that that that

00:13:35,779 --> 00:13:40,100
statement I also think everyone on the

00:13:38,810 --> 00:13:41,810
team should have a confidant because

00:13:40,100 --> 00:13:43,820
you're not always gonna want to just go

00:13:41,810 --> 00:13:45,620
to your team of eight or ten people and

00:13:43,820 --> 00:13:47,630
say hey this is what I think we should

00:13:45,620 --> 00:13:49,550
do because maybe you're a little we're

00:13:47,630 --> 00:13:50,959
how it's gonna sound you should be able

00:13:49,550 --> 00:13:53,060
to go to somebody on your team whether

00:13:50,959 --> 00:13:56,540
it's a architect or a senior team lead

00:13:53,060 --> 00:13:58,910
or a scrum master for example and say

00:13:56,540 --> 00:14:00,260
here's the idea I have how do you think

00:13:58,910 --> 00:14:02,449
I should phrase it how do you think I

00:14:00,260 --> 00:14:04,279
should present it to the team and that

00:14:02,449 --> 00:14:07,040
just having that person to bounce ideas

00:14:04,279 --> 00:14:08,870
off of like can really help boost your

00:14:07,040 --> 00:14:12,339
confidence and like get over the hump of

00:14:08,870 --> 00:14:15,240
feeling scared to talk to your team with

00:14:12,339 --> 00:14:17,200
controversial opinion

00:14:15,240 --> 00:14:19,690
another cornerstone I think is

00:14:17,200 --> 00:14:21,100
appreciation I think overall in this

00:14:19,690 --> 00:14:24,399
industry we do a really bad job of

00:14:21,100 --> 00:14:27,910
showing appreciation for each other we

00:14:24,399 --> 00:14:29,980
should be able to tell people that hey

00:14:27,910 --> 00:14:32,500
what you did is important what you did

00:14:29,980 --> 00:14:34,209
has value and again that breeds that

00:14:32,500 --> 00:14:35,560
environment where everyone's starting to

00:14:34,209 --> 00:14:37,209
feel like they're part of the overall

00:14:35,560 --> 00:14:39,700
team and they're there they're part of

00:14:37,209 --> 00:14:42,490
the overall success of the product of

00:14:39,700 --> 00:14:44,410
the software development process even a

00:14:42,490 --> 00:14:47,170
simple thing like thanks for fun on that

00:14:44,410 --> 00:14:49,690
bug or thanks for you know updating the

00:14:47,170 --> 00:14:52,750
JIRA ticket like that's just like common

00:14:49,690 --> 00:14:55,839
courtesy but we seem to to forget to do

00:14:52,750 --> 00:14:56,920
that in our day to day jobs and when you

00:14:55,839 --> 00:14:59,709
get that kind of feedback especially

00:14:56,920 --> 00:15:01,240
from someone in a senior position like

00:14:59,709 --> 00:15:02,800
an architect or someone that's above you

00:15:01,240 --> 00:15:05,740
or someone you have more respect for

00:15:02,800 --> 00:15:07,360
like that can really improve your day

00:15:05,740 --> 00:15:10,890
and improve your whole experience on the

00:15:07,360 --> 00:15:13,300
team and this kind of goes into this

00:15:10,890 --> 00:15:15,520
this picture which if you haven't seen

00:15:13,300 --> 00:15:18,220
before it's called Maslow's hierarchy of

00:15:15,520 --> 00:15:20,529
needs it was proposed by psychologist

00:15:18,220 --> 00:15:23,980
Abraham Maslow in 1943 in a book he

00:15:20,529 --> 00:15:26,140
wrote and it it shows that we can to

00:15:23,980 --> 00:15:27,520
reach self-actualization and that in

00:15:26,140 --> 00:15:32,980
software development terms this means

00:15:27,520 --> 00:15:34,390
like being able to take it be creative

00:15:32,980 --> 00:15:36,550
with your solutions be creative with

00:15:34,390 --> 00:15:38,980
your problem-solving and taking rest

00:15:36,550 --> 00:15:41,709
exact etc so in software development we

00:15:38,980 --> 00:15:44,220
probably mostly have our basic needs

00:15:41,709 --> 00:15:46,300
covered food water security safety

00:15:44,220 --> 00:15:48,700
hopefully those are covered when you're

00:15:46,300 --> 00:15:52,000
working like if not then reevaluate what

00:15:48,700 --> 00:15:53,920
you're doing oh well you know the food

00:15:52,000 --> 00:15:55,840
courts closed there's new breeds or

00:15:53,920 --> 00:15:58,120
something you know

00:15:55,840 --> 00:16:00,310
but when I talk about when I talked

00:15:58,120 --> 00:16:02,410
about everyone feeling value to being

00:16:00,310 --> 00:16:03,700
respectful and whatnot that really keys

00:16:02,410 --> 00:16:06,790
that call it falls into the

00:16:03,700 --> 00:16:08,560
psychological needs so the person's like

00:16:06,790 --> 00:16:09,820
it says here esteem needs prestige and

00:16:08,560 --> 00:16:11,200
feeling accomplishment like when you get

00:16:09,820 --> 00:16:13,120
that feedback from your team saying

00:16:11,200 --> 00:16:16,060
you're doing a great job thank you for

00:16:13,120 --> 00:16:18,190
doing that like that that helps you fill

00:16:16,060 --> 00:16:20,350
that that hierarchy and then the

00:16:18,190 --> 00:16:22,300
relationships that you build on your

00:16:20,350 --> 00:16:23,740
team fills that piece of the hierarchy

00:16:22,300 --> 00:16:27,940
so then you can go once you have those

00:16:23,740 --> 00:16:29,950
those those needs addressed in your team

00:16:27,940 --> 00:16:32,589
then you can go and take those risks

00:16:29,950 --> 00:16:36,220
offer those controversial opinions take

00:16:32,589 --> 00:16:39,250
some creative chances with the software

00:16:36,220 --> 00:16:40,360
that you're working with so how do we

00:16:39,250 --> 00:16:43,060
get it there how do we get to this

00:16:40,360 --> 00:16:44,860
highly functional team where everyone's

00:16:43,060 --> 00:16:47,500
owning the process everyone's concerned

00:16:44,860 --> 00:16:48,670
with software quality number one you

00:16:47,500 --> 00:16:51,070
have to nurture the creation in

00:16:48,670 --> 00:16:52,360
relationships within your team you don't

00:16:51,070 --> 00:16:54,250
have to be best friends with everyone

00:16:52,360 --> 00:16:56,500
but you should be friendly with them you

00:16:54,250 --> 00:16:57,850
should feel like they're up here that

00:16:56,500 --> 00:17:00,460
you can talk to that you can interact

00:16:57,850 --> 00:17:03,430
with and treat them with the respect and

00:17:00,460 --> 00:17:05,260
value that I mentioned earlier I think

00:17:03,430 --> 00:17:08,439
it's also important to meet in person at

00:17:05,260 --> 00:17:11,980
least once a year especially here at Red

00:17:08,439 --> 00:17:13,209
Hat one here but at Red Hat we have we

00:17:11,980 --> 00:17:15,480
have a lot of teams that have remote

00:17:13,209 --> 00:17:18,040
workers on the team I have for example

00:17:15,480 --> 00:17:22,000
there's people in Westford Massachusetts

00:17:18,040 --> 00:17:25,030
in Raleigh in San Francisco Toronto and

00:17:22,000 --> 00:17:26,829
then all some folks even in Europe so

00:17:25,030 --> 00:17:30,280
it's really difficult to get everyone in

00:17:26,829 --> 00:17:32,200
place once a year but if you can it

00:17:30,280 --> 00:17:35,500
allows you to build those relationships

00:17:32,200 --> 00:17:38,980
I talked about in such a much more

00:17:35,500 --> 00:17:40,750
deeper and more meaningful way because

00:17:38,980 --> 00:17:43,990
you've just just the value of human

00:17:40,750 --> 00:17:45,930
interaction is like I mean I can't I

00:17:43,990 --> 00:17:48,330
can't put more emphasis on

00:17:45,930 --> 00:17:49,770
and that's just in the workplace itself

00:17:48,330 --> 00:17:51,210
but once you're done with the work then

00:17:49,770 --> 00:17:53,280
you go out to dinner then you go and

00:17:51,210 --> 00:17:55,710
have drinks and you get to figure out

00:17:53,280 --> 00:17:57,120
more about the persons that you're

00:17:55,710 --> 00:18:00,690
working with and I think that is going

00:17:57,120 --> 00:18:04,500
to help you in the long term have a more

00:18:00,690 --> 00:18:06,210
successful team if you're practicing

00:18:04,500 --> 00:18:08,190
agile I think you should utilize those

00:18:06,210 --> 00:18:11,450
agile activities like in-person

00:18:08,190 --> 00:18:14,070
stand-ups or video stand-ups I find that

00:18:11,450 --> 00:18:15,780
just seeing the faces the people I work

00:18:14,070 --> 00:18:17,910
with on video conference because we are

00:18:15,780 --> 00:18:19,200
all remote is you know reinforces like

00:18:17,910 --> 00:18:21,390
hey there's another person on the other

00:18:19,200 --> 00:18:24,059
side of the world that is depending on

00:18:21,390 --> 00:18:26,520
me to do my job correctly and vice versa

00:18:24,059 --> 00:18:29,220
they're depending on me to do my job as

00:18:26,520 --> 00:18:30,600
well if you can do in-person stand-ups

00:18:29,220 --> 00:18:32,850
like that's even better because you do

00:18:30,600 --> 00:18:35,820
get that immediate face-to-face feedback

00:18:32,850 --> 00:18:38,160
and in agile we have the concept of

00:18:35,820 --> 00:18:39,480
retrospectives where we talk about what

00:18:38,160 --> 00:18:42,420
we did in the last sprint in the last

00:18:39,480 --> 00:18:44,429
period of time and we talk about what

00:18:42,420 --> 00:18:46,230
went well what didn't go well and figure

00:18:44,429 --> 00:18:49,140
we figure out how we can improve the

00:18:46,230 --> 00:18:50,940
process to get closer to I got really

00:18:49,140 --> 00:18:52,920
the the best we can be

00:18:50,940 --> 00:18:55,350
and the closer we get to the best we can

00:18:52,920 --> 00:18:59,190
be clearly we're gonna get better

00:18:55,350 --> 00:19:00,980
quality software out of it and like I

00:18:59,190 --> 00:19:02,940
said before I give feedback to your team

00:19:00,980 --> 00:19:04,350
celebrate your achievements that your

00:19:02,940 --> 00:19:06,929
team has made you know whether it's on

00:19:04,350 --> 00:19:09,960
social media or on email or whatever say

00:19:06,929 --> 00:19:11,400
talk about how what this person did and

00:19:09,960 --> 00:19:13,860
they're doing their job and the Sprint

00:19:11,400 --> 00:19:15,360
or whatnot suggests your improvements

00:19:13,860 --> 00:19:17,580
when things don't work out don't don't

00:19:15,360 --> 00:19:20,429
hold back me do it respectfully clearly

00:19:17,580 --> 00:19:22,650
but you need to keep giving that

00:19:20,429 --> 00:19:25,110
feedback to improve the team as a whole

00:19:22,650 --> 00:19:27,330
and show gratitude I mentioned before

00:19:25,110 --> 00:19:30,240
like just saying thank you for things

00:19:27,330 --> 00:19:31,559
that happen every day really go the

00:19:30,240 --> 00:19:34,100
different go the distance I think

00:19:31,559 --> 00:19:36,680
especially if you do it consistently

00:19:34,100 --> 00:19:39,530
and finally remember we're all human and

00:19:36,680 --> 00:19:41,780
we all have the same not the same but we

00:19:39,530 --> 00:19:44,480
all have similar dreams hopes feelings

00:19:41,780 --> 00:19:46,700
desires treat other people like they're

00:19:44,480 --> 00:19:48,860
human they're not just another face on

00:19:46,700 --> 00:19:52,580
the screen or whatnot or a you know

00:19:48,860 --> 00:19:54,710
email address on you in your inbox so

00:19:52,580 --> 00:19:56,450
once you have let's say you have your

00:19:54,710 --> 00:19:58,160
highly functional team and it's finished

00:19:56,450 --> 00:19:59,900
running well now you need to start

00:19:58,160 --> 00:20:03,470
putting your feelers out beyond your

00:19:59,900 --> 00:20:05,510
team to again to spread the word of how

00:20:03,470 --> 00:20:07,250
software quality is important to

00:20:05,510 --> 00:20:07,880
everybody and how it's all there their

00:20:07,250 --> 00:20:09,530
sponsibility

00:20:07,880 --> 00:20:11,870
so this is when you need to get the non

00:20:09,530 --> 00:20:13,670
development non QB people involved bring

00:20:11,870 --> 00:20:15,620
in people like tech writers program

00:20:13,670 --> 00:20:18,050
managers support engineers community

00:20:15,620 --> 00:20:20,330
managers get them to participate in your

00:20:18,050 --> 00:20:23,060
development process let them provide

00:20:20,330 --> 00:20:25,130
feedback to you and let and let it

00:20:23,060 --> 00:20:28,970
provide feedback to them as well maybe

00:20:25,130 --> 00:20:31,340
the support engineers aren't as timely

00:20:28,970 --> 00:20:32,780
with contacting you with critical

00:20:31,340 --> 00:20:34,520
information of the need for critical

00:20:32,780 --> 00:20:38,050
information so we can talk to them about

00:20:34,520 --> 00:20:40,250
that how can we improve that process or

00:20:38,050 --> 00:20:42,110
forgiving program manager if we can talk

00:20:40,250 --> 00:20:44,120
about how maybe they're not generating

00:20:42,110 --> 00:20:46,400
requirements that are specific enough or

00:20:44,120 --> 00:20:50,060
or whatnot but get everyone

00:20:46,400 --> 00:20:51,830
participating on the process and again

00:20:50,060 --> 00:20:53,240
use the same guidelines I've talked

00:20:51,830 --> 00:20:57,020
about before with in terms of respect

00:20:53,240 --> 00:20:59,060
and gratitude and what not so now you've

00:20:57,020 --> 00:21:01,130
got a highly functional team core team

00:20:59,060 --> 00:21:03,410
you've started to build relationships

00:21:01,130 --> 00:21:05,120
with external teams now we can start to

00:21:03,410 --> 00:21:07,850
leverage the strengths that we've built

00:21:05,120 --> 00:21:10,880
with the core team and the external

00:21:07,850 --> 00:21:14,690
teams this is when you can really start

00:21:10,880 --> 00:21:17,030
to talk about making quality everyone's

00:21:14,690 --> 00:21:18,940
job so you get involved in the

00:21:17,030 --> 00:21:22,909
development process as soon as possible

00:21:18,940 --> 00:21:24,169
in the waterfall model you saw how the

00:21:22,909 --> 00:21:26,119
requirements planning happens at the

00:21:24,169 --> 00:21:27,739
very beginning how many people have

00:21:26,119 --> 00:21:29,720
participating requirements planning as a

00:21:27,739 --> 00:21:32,989
cuba engineer for some piece of software

00:21:29,720 --> 00:21:35,210
I mean I know I haven't honestly I don't

00:21:32,989 --> 00:21:38,679
know if you have then you're doing the

00:21:35,210 --> 00:21:41,509
good you're doing a good job well done

00:21:38,679 --> 00:21:44,330
but I think that that we're missing that

00:21:41,509 --> 00:21:46,220
alive from the from the industry and

00:21:44,330 --> 00:21:48,409
this kind of goes into the this.v model

00:21:46,220 --> 00:21:50,509
so the V model shows on the left hand

00:21:48,409 --> 00:21:52,879
side we've got the software development

00:21:50,509 --> 00:21:54,979
process starting with the requirements

00:21:52,879 --> 00:21:56,629
planning down to architecture designed

00:21:54,979 --> 00:22:00,129
and implementation and on the right side

00:21:56,629 --> 00:22:02,779
we have the testing and validation

00:22:00,129 --> 00:22:06,440
portion of the model and you can notice

00:22:02,779 --> 00:22:08,960
that each for each piece of development

00:22:06,440 --> 00:22:11,619
whether it's requirements architecture

00:22:08,960 --> 00:22:14,570
design we have a test

00:22:11,619 --> 00:22:16,909
corollary so each one of these testing

00:22:14,570 --> 00:22:19,879
pieces has the ability to validate what

00:22:16,909 --> 00:22:21,529
was generated on the other side and

00:22:19,879 --> 00:22:23,299
again like I said I don't follow my

00:22:21,529 --> 00:22:25,609
advice I'm very bad at following my own

00:22:23,299 --> 00:22:27,769
advice so I have not even close to being

00:22:25,609 --> 00:22:30,440
this this good if you're if you're

00:22:27,769 --> 00:22:31,909
operating at this level my hats off to

00:22:30,440 --> 00:22:33,139
you because it does require a lot of

00:22:31,909 --> 00:22:36,619
work it does require a lot of teamwork

00:22:33,139 --> 00:22:38,690
and but this should be the goal we're

00:22:36,619 --> 00:22:41,269
striving for you should be striving to

00:22:38,690 --> 00:22:43,970
have tests that are able to validate

00:22:41,269 --> 00:22:45,150
each piece of the left-hand side of the

00:22:43,970 --> 00:22:49,650
model

00:22:45,150 --> 00:22:51,480
ah what didn't work okay so I wanted all

00:22:49,650 --> 00:22:56,550
those to come out sequentially but I

00:22:51,480 --> 00:22:59,570
guess my edit was wrong so yeah well I

00:22:56,550 --> 00:23:01,770
guess I'm doing a bad job so like I said

00:22:59,570 --> 00:23:03,809
so in terms of getting involved

00:23:01,770 --> 00:23:05,670
attendees decision making problem is

00:23:03,809 --> 00:23:08,190
that if you can if they'll allow you to

00:23:05,670 --> 00:23:10,680
go in there and even if you can just get

00:23:08,190 --> 00:23:13,110
in there and listen you can get a feel

00:23:10,680 --> 00:23:16,230
for you know where the direction of the

00:23:13,110 --> 00:23:17,700
products going and then alter your year

00:23:16,230 --> 00:23:21,030
how you figure out how you're gonna test

00:23:17,700 --> 00:23:22,020
this product down the line understand

00:23:21,030 --> 00:23:23,460
the business ease of being that

00:23:22,020 --> 00:23:25,620
understand the use cases and start

00:23:23,460 --> 00:23:27,330
asking questions about how this software

00:23:25,620 --> 00:23:29,460
is going tested if you could do that at

00:23:27,330 --> 00:23:32,160
these early stages at the planning

00:23:29,460 --> 00:23:34,860
stages the requirements stages then you

00:23:32,160 --> 00:23:36,660
can maybe uncover problems in the

00:23:34,860 --> 00:23:40,080
requirements that will be impossible to

00:23:36,660 --> 00:23:41,970
test I don't have a good example of it

00:23:40,080 --> 00:23:43,740
but you can imagine what our requirement

00:23:41,970 --> 00:23:45,600
that would be come down from product

00:23:43,740 --> 00:23:47,130
management and then when QE gets it

00:23:45,600 --> 00:23:48,179
finally at the end of it you know at the

00:23:47,130 --> 00:23:49,920
bottom of the model if they're not

00:23:48,179 --> 00:23:51,210
involved they're like I I don't know how

00:23:49,920 --> 00:23:53,040
to test this like there's no possible

00:23:51,210 --> 00:23:56,970
way I don't have a million man-hours to

00:23:53,040 --> 00:23:58,470
do this and strive to plan your

00:23:56,970 --> 00:24:02,340
development test task together and this

00:23:58,470 --> 00:24:04,650
is one is another point where I'm not

00:24:02,340 --> 00:24:08,580
doing as good a job as I should in our

00:24:04,650 --> 00:24:11,340
team but if you can plan that that

00:24:08,580 --> 00:24:13,080
development piece of work and then side

00:24:11,340 --> 00:24:15,720
by side plan how you're gonna test that

00:24:13,080 --> 00:24:18,270
and develop them in parallel then you're

00:24:15,720 --> 00:24:20,880
gonna be able to pick out the bugs in

00:24:18,270 --> 00:24:22,320
the software a lot earlier then if the

00:24:20,880 --> 00:24:24,210
development finishes first and then

00:24:22,320 --> 00:24:26,030
three weeks later QE picks it up and

00:24:24,210 --> 00:24:28,679
says I'm gonna write some tests for it

00:24:26,030 --> 00:24:30,900
you're gonna miss bugs and then when you

00:24:28,679 --> 00:24:32,309
get involved with development to fix

00:24:30,900 --> 00:24:34,840
these bugs they're gonna say well why

00:24:32,309 --> 00:24:37,330
didn't you catch this earlier

00:24:34,840 --> 00:24:41,139
poor thing and if you do that you'll

00:24:37,330 --> 00:24:44,110
have success kid to show for it so it's

00:24:41,139 --> 00:24:47,639
a rap club Waterfall model is bad agile

00:24:44,110 --> 00:24:50,080
is better if you're doing it properly

00:24:47,639 --> 00:24:52,659
you got to live or die together a team

00:24:50,080 --> 00:24:56,590
like that's the whole I think that's one

00:24:52,659 --> 00:24:58,870
of the key points of the agile model to

00:24:56,590 --> 00:25:00,850
practice that open communication be be

00:24:58,870 --> 00:25:04,840
open with your feedback be honest with

00:25:00,850 --> 00:25:08,139
your feedback that goes right into my

00:25:04,840 --> 00:25:10,240
next point honest feedback and strive to

00:25:08,139 --> 00:25:11,679
include those external teams get their

00:25:10,240 --> 00:25:12,909
feedback because they have a different

00:25:11,679 --> 00:25:14,919
perspective on the software development

00:25:12,909 --> 00:25:18,399
process they than you might and that's

00:25:14,919 --> 00:25:21,279
gonna ultimately grow your team as a to

00:25:18,399 --> 00:25:23,559
be more successful and like I said get

00:25:21,279 --> 00:25:26,259
involved early on often ask questions

00:25:23,559 --> 00:25:29,820
and try to catch the problems that we're

00:25:26,259 --> 00:25:33,669
gonna face as QE as early as possible

00:25:29,820 --> 00:25:36,539
that's it so anybody have any questions

00:25:33,669 --> 00:25:36,539
comments

00:25:37,440 --> 00:25:44,450
no great go go do good thank you

00:25:42,210 --> 00:25:44,450
everybody

00:25:47,010 --> 00:25:54,210
I have a question actually I admitted to

00:25:52,140 --> 00:25:56,760
think about it 10 over then devotes

00:25:54,210 --> 00:25:58,500
curious to give thoughts so just so my

00:25:56,760 --> 00:26:00,870
situation I work on Fedora right the

00:25:58,500 --> 00:26:02,669
applicants it's it's interesting because

00:26:00,870 --> 00:26:04,890
it's not a product it doesn't have a

00:26:02,669 --> 00:26:06,660
developer's process right so yeah I hope

00:26:04,890 --> 00:26:11,120
people think about hey how do we make

00:26:06,660 --> 00:26:13,740
that already do a job it's yeah I was

00:26:11,120 --> 00:26:15,690
thinking about situations like operating

00:26:13,740 --> 00:26:17,340
systems Fedora rail whichever you're

00:26:15,690 --> 00:26:18,870
working on very complex interlocking

00:26:17,340 --> 00:26:20,340
products which don't have a single

00:26:18,870 --> 00:26:23,100
development team a single development

00:26:20,340 --> 00:26:26,610
model how do you apply these practices

00:26:23,100 --> 00:26:28,350
to those do you think yeah that's so in

00:26:26,610 --> 00:26:31,350
case I'll repeat just for the record Inc

00:26:28,350 --> 00:26:33,210
is the one caught by Adams asking in the

00:26:31,350 --> 00:26:34,350
Fedora ecosystem you know there's many

00:26:33,210 --> 00:26:36,240
different development teams many

00:26:34,350 --> 00:26:41,160
different developers how do you prep I

00:26:36,240 --> 00:26:43,919
these tactics to that model you know I

00:26:41,160 --> 00:26:46,559
think it kind of goes hand in hand with

00:26:43,919 --> 00:26:48,780
the Halford or operates now like you

00:26:46,559 --> 00:26:50,610
just gotta I mean I know you Adam you

00:26:48,780 --> 00:26:52,530
reached out to everybody right you try

00:26:50,610 --> 00:26:54,000
to be respectful yeah you try you try

00:26:52,530 --> 00:26:55,740
you're trying to do the right thing

00:26:54,000 --> 00:26:57,570
you're trying to talk to them and get

00:26:55,740 --> 00:26:59,840
them involved you're obviously not going

00:26:57,570 --> 00:27:03,750
to deploy agile across the entire fedora

00:26:59,840 --> 00:27:05,850
yes system but I think just trying to

00:27:03,750 --> 00:27:08,970
get to that that that personal side of

00:27:05,850 --> 00:27:11,190
things like being honest and respectful

00:27:08,970 --> 00:27:13,200
and showing gratitude towards these

00:27:11,190 --> 00:27:15,330
these developers they're gonna start to

00:27:13,200 --> 00:27:17,309
come around and start to interact with

00:27:15,330 --> 00:27:19,410
you more and then you can have a better

00:27:17,309 --> 00:27:21,270
dialogue of like well you know your code

00:27:19,410 --> 00:27:22,610
sucks and whatnot that we shouldn't say

00:27:21,270 --> 00:27:26,510
that but you know

00:27:22,610 --> 00:27:28,770
your code has some issues let's say

00:27:26,510 --> 00:27:30,120
maybe we could talk about how to improve

00:27:28,770 --> 00:27:31,710
that or we could talk about what kind of

00:27:30,120 --> 00:27:33,179
tests we can write to catch the

00:27:31,710 --> 00:27:35,520
regressions we've seen or the problems

00:27:33,179 --> 00:27:37,789
we've seen I don't think there's a

00:27:35,520 --> 00:27:40,650
really good answer to that because it's

00:27:37,789 --> 00:27:43,799
number one I'm not an expert I said that

00:27:40,650 --> 00:27:46,919
earlier but I think I bet you if you

00:27:43,799 --> 00:27:48,929
talk to one of the agile practitioners

00:27:46,919 --> 00:27:52,169
in Red Hat they might have some ideas

00:27:48,929 --> 00:27:54,270
for you yes since you work for ahead you

00:27:52,169 --> 00:27:57,450
could talk to Jen Krieger she's the

00:27:54,270 --> 00:28:00,210
architect she might have an idea so yeah

00:27:57,450 --> 00:28:04,789
I'd like to say there isn't an easy and

00:28:00,210 --> 00:28:08,039
just big thing about it yeah yeah I

00:28:04,789 --> 00:28:10,409
would just start would be like that

00:28:08,039 --> 00:28:13,559
starts a bit at the bottom might just be

00:28:10,409 --> 00:28:15,659
nice be a good person you know and

00:28:13,559 --> 00:28:17,970
encourage that sort of that that sort of

00:28:15,659 --> 00:28:20,010
behavior I think you know as humans when

00:28:17,970 --> 00:28:21,900
we see you we tend to mirror the

00:28:20,010 --> 00:28:24,120
behavior we see I mean I have two kids I

00:28:21,900 --> 00:28:26,130
know that they're basically a mirror of

00:28:24,120 --> 00:28:28,890
every mistake I've made and every good

00:28:26,130 --> 00:28:30,539
thing I've done so it's sort of a human

00:28:28,890 --> 00:28:32,100
nature thing even as adults where we

00:28:30,539 --> 00:28:33,690
mirror what we see so if you're being

00:28:32,100 --> 00:28:35,340
nice to somebody they're more likely to

00:28:33,690 --> 00:28:41,180
be nice to you and then you can

00:28:35,340 --> 00:28:44,400
certainly have those dialogues yep

00:28:41,180 --> 00:28:48,960
the questions are yes yes so I mean I

00:28:44,400 --> 00:28:50,730
really thought that you said and I try

00:28:48,960 --> 00:28:53,490
great with I agree with everything that

00:28:50,730 --> 00:28:56,580
you said but I noticed that a lot of

00:28:53,490 --> 00:28:58,710
times it seems that the success rate is

00:28:56,580 --> 00:29:01,200
much higher when you have QE and

00:28:58,710 --> 00:29:03,750
development together but the other teams

00:29:01,200 --> 00:29:06,420
especially p.m. for example it's really

00:29:03,750 --> 00:29:11,490
hard to get them on board yeah so do you

00:29:06,420 --> 00:29:13,440
have any advice for improving that yeah

00:29:11,490 --> 00:29:15,360
I mean you need I think in those types

00:29:13,440 --> 00:29:17,190
of in that sort of scenario where you

00:29:15,360 --> 00:29:19,770
have those external teams that haven't

00:29:17,190 --> 00:29:21,420
bought in you need to get I would

00:29:19,770 --> 00:29:23,670
suggest probably getting your management

00:29:21,420 --> 00:29:26,010
involved and having them reach out to

00:29:23,670 --> 00:29:27,450
the other side and say this is what

00:29:26,010 --> 00:29:29,660
we're driving towards this is what we

00:29:27,450 --> 00:29:33,300
wanted we want everyone on board with

00:29:29,660 --> 00:29:35,070
insuring software quality and outside of

00:29:33,300 --> 00:29:36,540
that like I said maybe you can drop in

00:29:35,070 --> 00:29:38,490
on our meetings you know reach out to

00:29:36,540 --> 00:29:40,410
them I know for example on my team my

00:29:38,490 --> 00:29:42,330
program manager is been Briard

00:29:40,410 --> 00:29:44,070
and I've got a pretty decent

00:29:42,330 --> 00:29:46,110
relationship with him like I can reach

00:29:44,070 --> 00:29:47,820
out to him and ask questions and the

00:29:46,110 --> 00:29:49,830
only reason I in the only way we did

00:29:47,820 --> 00:29:52,260
that is that he dropped in the office I

00:29:49,830 --> 00:29:53,190
was in the same place we said who L we

00:29:52,260 --> 00:29:54,930
introduced each other and we just

00:29:53,190 --> 00:29:56,730
started talking like people you know and

00:29:54,930 --> 00:29:58,140
then now I've got this open line of

00:29:56,730 --> 00:30:00,510
communication to him where I can say

00:29:58,140 --> 00:30:01,800
like what does this product requirement

00:30:00,510 --> 00:30:04,050
mean like what are you intending for

00:30:01,800 --> 00:30:05,880
this you know or do you think we're

00:30:04,050 --> 00:30:07,590
going in the right direction with the

00:30:05,880 --> 00:30:11,100
development choices we made that kind of

00:30:07,590 --> 00:30:12,960
thing so like I said it really starts

00:30:11,100 --> 00:30:15,090
with just those personal relationships

00:30:12,960 --> 00:30:16,230
and if you can't establish that person

00:30:15,090 --> 00:30:17,970
already ship then I think you have to

00:30:16,230 --> 00:30:22,740
involve your management and get your

00:30:17,970 --> 00:30:23,620
management to bridge that gap ahead of

00:30:22,740 --> 00:30:26,650
time

00:30:23,620 --> 00:30:28,059
easier said than done I know but that's

00:30:26,650 --> 00:30:31,710
the best is the best advice I can give

00:30:28,059 --> 00:30:31,710
you thank you you're welcome

00:30:34,300 --> 00:30:36,960
everything else

00:30:37,900 --> 00:30:43,360
No all right well thank you all for

00:30:39,940 --> 00:30:45,990
coming I know it's early and have a good

00:30:43,360 --> 00:30:45,990

YouTube URL: https://www.youtube.com/watch?v=iezaC4mpFnE


