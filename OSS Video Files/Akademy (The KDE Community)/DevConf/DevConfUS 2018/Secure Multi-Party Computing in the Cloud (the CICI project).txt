Title: Secure Multi-Party Computing in the Cloud (the CICI project)
Publication date: 2019-02-22
Playlist: DevConfUS 2018
Description: 
	Data is important, sharing and collaboration are important, but so is protecting the data, even from collaborators. We will present how we are combining a multi-party computation system (Conclave) and a dataset repository solution (Dataverse) on The Massachusetts Open Cloud (MOC) to enable “paranoid” parties to collaborate on joint computations over the public cloud. Using this framework some (or all) parties’ datasets will remain confidential, but the parties can run specific analytics over their collective data. This is crucial because 40 years of encryption history shows that crypto solutions only achieve widespread adoption once they are frictionless to users.
Captions: 
	00:00:03,290 --> 00:00:08,149
Oh informed person you know like a nut

00:00:05,390 --> 00:00:11,299
dumb but I had no idea you could do any

00:00:08,149 --> 00:00:13,789
of this this talk is about secure

00:00:11,299 --> 00:00:18,470
multi-party computing in the cloud also

00:00:13,789 --> 00:00:21,410
known as the CC project and these lovely

00:00:18,470 --> 00:00:27,259
folks out of Turk my Acharya

00:00:21,410 --> 00:00:30,019
Aurel Singh yes are gonna come talk to

00:00:27,259 --> 00:00:34,250
you about all of that the possibilities

00:00:30,019 --> 00:00:38,559
for this expands to things like we can

00:00:34,250 --> 00:00:41,750
start doing actual statistics across

00:00:38,559 --> 00:00:42,649
medical data that we can't share I mean

00:00:41,750 --> 00:00:44,480
it's really amazing

00:00:42,649 --> 00:00:58,460
all right so without further ado out of

00:00:44,480 --> 00:01:00,980
Turkey thank you so I'll talk about C to

00:00:58,460 --> 00:01:03,980
D our privacy-preserving scientific data

00:01:00,980 --> 00:01:06,590
analytics environment framework that we

00:01:03,980 --> 00:01:07,520
are building on an open cloud and this

00:01:06,590 --> 00:01:10,010
is a collaboration between the

00:01:07,520 --> 00:01:13,310
Massachusetts open cloud the sail team

00:01:10,010 --> 00:01:15,590
of already Institute of the Boston

00:01:13,310 --> 00:01:19,400
University the dataverse team at Harvard

00:01:15,590 --> 00:01:21,650
and the Red Hat my name is Ataturk I'm a

00:01:19,400 --> 00:01:23,060
research scientist at MOC and and I'm

00:01:21,650 --> 00:01:23,890
gonna be presenting together with my

00:01:23,060 --> 00:01:28,520
enquirer

00:01:23,890 --> 00:01:30,650
Ben get chill and perusing so I'm gonna

00:01:28,520 --> 00:01:34,040
start at the top with talking about some

00:01:30,650 --> 00:01:35,480
of our use cases so that you understand

00:01:34,040 --> 00:01:36,680
what they are what kind of problems we

00:01:35,480 --> 00:01:39,170
are trying to solve and these use cases

00:01:36,680 --> 00:01:42,560
are relatively the use cases that are

00:01:39,170 --> 00:01:44,680
coming to us for addressing in in our

00:01:42,560 --> 00:01:47,060
own platform the first use cases

00:01:44,680 --> 00:01:48,590
companies in Massachusetts want to

00:01:47,060 --> 00:01:52,510
compute average seller differences

00:01:48,590 --> 00:01:55,700
across gender ethnicity different groups

00:01:52,510 --> 00:01:58,850
within the state but they want to do it

00:01:55,700 --> 00:02:01,220
while not exposing the average Sri of

00:01:58,850 --> 00:02:03,440
any company any individual company or

00:02:01,220 --> 00:02:06,010
any individual group within a single

00:02:03,440 --> 00:02:07,930
company so they want to keep

00:02:06,010 --> 00:02:10,840
data private but they want to have the

00:02:07,930 --> 00:02:13,360
aggregate average a similar use case

00:02:10,840 --> 00:02:15,010
again from the Boston area is here on

00:02:13,360 --> 00:02:17,530
trauma centers in Boston they want to

00:02:15,010 --> 00:02:19,840
generate aggregate reports about cases

00:02:17,530 --> 00:02:22,000
they service without revealing any

00:02:19,840 --> 00:02:24,070
patient data they are governed by very

00:02:22,000 --> 00:02:26,890
heavy regulations they are not allowed

00:02:24,070 --> 00:02:28,990
to share data with each other but they

00:02:26,890 --> 00:02:31,000
want to be able to say for example how

00:02:28,990 --> 00:02:32,470
many trauma cases they service during

00:02:31,000 --> 00:02:36,220
the Boston Marathon bombing

00:02:32,470 --> 00:02:38,080
so another use case we have currently

00:02:36,220 --> 00:02:41,050
hidden again in the Boston region as

00:02:38,080 --> 00:02:42,970
researchers and hospitals want to

00:02:41,050 --> 00:02:45,490
generate aggregate statistics about rare

00:02:42,970 --> 00:02:48,430
diseases that they they take care they

00:02:45,490 --> 00:02:50,470
cure across multiple hospitals they have

00:02:48,430 --> 00:02:52,750
so many few cases of these rare diseases

00:02:50,470 --> 00:02:54,640
that they cannot do generalizations that

00:02:52,750 --> 00:02:57,280
they want to do so they want to have

00:02:54,640 --> 00:02:58,870
more examples across different hospitals

00:02:57,280 --> 00:03:01,330
but because of regulations like HIPAA

00:02:58,870 --> 00:03:03,070
they cannot share this data with each

00:03:01,330 --> 00:03:05,650
other and they want to be able to do

00:03:03,070 --> 00:03:07,900
this aggregation the statistical

00:03:05,650 --> 00:03:08,550
analysis without revealing any patient

00:03:07,900 --> 00:03:11,890
data

00:03:08,550 --> 00:03:15,760
similarly companies organizations run

00:03:11,890 --> 00:03:18,790
away run want to run data analytics jobs

00:03:15,760 --> 00:03:21,519
in the public cloud especially for for

00:03:18,790 --> 00:03:23,920
for data analytics jobs that require

00:03:21,519 --> 00:03:25,480
more computing resources than they

00:03:23,920 --> 00:03:28,750
currently have in their private data

00:03:25,480 --> 00:03:31,180
centers but they do not simply trust a

00:03:28,750 --> 00:03:34,540
single cloud vendor so they are looking

00:03:31,180 --> 00:03:36,720
for jobs where they could divide the

00:03:34,540 --> 00:03:39,700
arrays have partitioned a their data

00:03:36,720 --> 00:03:42,040
into multiple clouds and run their

00:03:39,700 --> 00:03:45,280
attics across multiple clouds without

00:03:42,040 --> 00:03:47,380
revealing any one particular cloud any

00:03:45,280 --> 00:03:49,570
meaningful data so the chartered data

00:03:47,380 --> 00:03:51,519
that they have do not make any sense

00:03:49,570 --> 00:03:54,040
trainee public cloud even affect the

00:03:51,519 --> 00:03:54,430
public cloud decides to go behind their

00:03:54,040 --> 00:03:56,650
back

00:03:54,430 --> 00:03:59,680
look at their data they won't lose any

00:03:56,650 --> 00:04:02,590
critical information the the assumption

00:03:59,680 --> 00:04:06,969
is both multiple public clouds will not

00:04:02,590 --> 00:04:10,629
collude and combine the chartered data

00:04:06,969 --> 00:04:12,069
into a single data so so most kind of

00:04:10,629 --> 00:04:13,510
use cases are the cases that we are

00:04:12,069 --> 00:04:17,680
trying to address in this framework that

00:04:13,510 --> 00:04:21,000
we are building so this this framework

00:04:17,680 --> 00:04:24,190
depends on multiple tools out there

00:04:21,000 --> 00:04:26,410
available and also an infrastructure as

00:04:24,190 --> 00:04:28,360
a service solution which is the one that

00:04:26,410 --> 00:04:30,460
Massachusetts open cloud is providing

00:04:28,360 --> 00:04:33,039
and then moc is very important in this

00:04:30,460 --> 00:04:35,169
aspect because it allows different

00:04:33,039 --> 00:04:38,770
parties to own their trusted enclaves

00:04:35,169 --> 00:04:42,669
within within within a single public

00:04:38,770 --> 00:04:44,830
cloud without needing to trust the

00:04:42,669 --> 00:04:48,130
public cloud providers so mo sees role

00:04:44,830 --> 00:04:50,590
and hears is practically that we are

00:04:48,130 --> 00:04:52,780
using data IRS's our data center poster

00:04:50,590 --> 00:04:54,820
solution because they Traverse is one of

00:04:52,780 --> 00:04:56,590
the well-established dataverse the data

00:04:54,820 --> 00:04:58,389
center postal solutions at their open

00:04:56,590 --> 00:05:00,659
source data center postal solutions up

00:04:58,389 --> 00:05:03,520
there and it hosts a lot of a

00:05:00,659 --> 00:05:05,349
significant number of scientific data

00:05:03,520 --> 00:05:08,620
sets especially in the social sciences

00:05:05,349 --> 00:05:10,150
area and we are using conclave as our

00:05:08,620 --> 00:05:13,289
multi-party computation framework

00:05:10,150 --> 00:05:17,349
beckoned to provide privacy preserving

00:05:13,289 --> 00:05:18,820
scientific data analysis I will break it

00:05:17,349 --> 00:05:21,310
talk about these components

00:05:18,820 --> 00:05:24,009
Massachusetts token cloud hopefully some

00:05:21,310 --> 00:05:25,570
of you know is a very very unique entity

00:05:24,009 --> 00:05:28,000
it's a collaboration between academia

00:05:25,570 --> 00:05:32,430
the government and industry which you do

00:05:28,000 --> 00:05:34,320
not see own right and the most important

00:05:32,430 --> 00:05:36,900
Specter from acidity make use of in this

00:05:34,320 --> 00:05:39,870
framework his MOC tries to disrupt a

00:05:36,900 --> 00:05:43,050
single vendor cloud model we wanna offer

00:05:39,870 --> 00:05:44,850
a multi vendor cloud model and what this

00:05:43,050 --> 00:05:48,300
means is business single data center you

00:05:44,850 --> 00:05:50,520
will have multiple cloud offerings that

00:05:48,300 --> 00:05:52,650
you can mix and match and create your

00:05:50,520 --> 00:05:54,840
own cloud from those offerings

00:05:52,650 --> 00:05:57,510
that's what mo she is trying to enable

00:05:54,840 --> 00:05:59,610
and also Massey is not trying to do this

00:05:57,510 --> 00:06:03,020
in an academic setting we are really

00:05:59,610 --> 00:06:08,070
trying to do this in a real data center

00:06:03,020 --> 00:06:10,050
on a production scale public solution so

00:06:08,070 --> 00:06:12,690
we have we are operating over 15

00:06:10,050 --> 00:06:15,630
megawatt datacenter and investment so

00:06:12,690 --> 00:06:17,340
she set in Holyoke our our cloud

00:06:15,630 --> 00:06:21,840
solution is mostly backed by OpenStack

00:06:17,340 --> 00:06:23,400
on apprecia dataverse is an open source

00:06:21,840 --> 00:06:26,160
of a platform for building data

00:06:23,400 --> 00:06:29,190
repositories it provides incentives to

00:06:26,160 --> 00:06:32,100
share data and also it provides

00:06:29,190 --> 00:06:35,280
mechanisms for controlling the access to

00:06:32,100 --> 00:06:37,050
the data sets are loaded there and it

00:06:35,280 --> 00:06:39,000
has a very large community it's that

00:06:37,050 --> 00:06:40,800
well established software it has been in

00:06:39,000 --> 00:06:44,010
development for the last 10 years and

00:06:40,800 --> 00:06:45,570
especially for social science data the

00:06:44,010 --> 00:06:48,060
chances are if you have a paper in

00:06:45,570 --> 00:06:51,180
science that your data set will be

00:06:48,060 --> 00:06:52,650
available in and in natures so it's it's

00:06:51,180 --> 00:06:54,990
installed in more than 20 in

00:06:52,650 --> 00:06:58,440
upholsteries worldwide and let me give

00:06:54,990 --> 00:07:00,390
you an example beta version Solomon the

00:06:58,440 --> 00:07:03,150
Harvard data were super say for example

00:07:00,390 --> 00:07:06,360
hosts more than 70 thousand social

00:07:03,150 --> 00:07:09,960
science data sets so these are data sets

00:07:06,360 --> 00:07:12,450
that researchers have published papers

00:07:09,960 --> 00:07:14,610
and utilize these data sets or created

00:07:12,450 --> 00:07:17,010
these data sets and decided to upload

00:07:14,610 --> 00:07:19,110
these data sets to native earth so that

00:07:17,010 --> 00:07:19,610
other researchers can download and use

00:07:19,110 --> 00:07:22,770
them

00:07:19,610 --> 00:07:24,660
MOC inators is now in collaboration to

00:07:22,770 --> 00:07:27,870
build a new software that we call cloud

00:07:24,660 --> 00:07:28,569
pitchers that not only allows you to

00:07:27,870 --> 00:07:30,279
demote the

00:07:28,569 --> 00:07:32,830
data sets but also enables you to

00:07:30,279 --> 00:07:34,899
compute over these data sets so cloud

00:07:32,830 --> 00:07:37,689
daters extends the terrors to support

00:07:34,899 --> 00:07:40,149
much much larger data sets then there

00:07:37,689 --> 00:07:43,240
are mostly available social sciences we

00:07:40,149 --> 00:07:46,449
achieve this by storing the data sets in

00:07:43,240 --> 00:07:50,259
an object stores and in our case this is

00:07:46,449 --> 00:07:52,449
backed by neck by self and we had a

00:07:50,259 --> 00:07:54,580
complete button next to each data set so

00:07:52,449 --> 00:07:58,889
that you don't have to download these

00:07:54,580 --> 00:07:58,889
data sets you can do on-site computation

00:08:03,009 --> 00:08:05,219
it

00:08:05,370 --> 00:08:08,370
Thanks

00:08:08,410 --> 00:08:12,160
I'm a software engineer at a software

00:08:10,570 --> 00:08:15,910
application innovation lab and here to

00:08:12,160 --> 00:08:18,250
you for a second so it's a bit of

00:08:15,910 --> 00:08:19,930
background MPC allows a group of

00:08:18,250 --> 00:08:21,160
individuals to compute you know

00:08:19,930 --> 00:08:22,990
aggregate functions over sets of data

00:08:21,160 --> 00:08:24,790
without revealing any of that data to

00:08:22,990 --> 00:08:27,190
one another so they can more or less

00:08:24,790 --> 00:08:30,100
compute over it like as though or in the

00:08:27,190 --> 00:08:31,960
clear but nobody but nobody um reveals

00:08:30,100 --> 00:08:33,550
anything that they want to so it's

00:08:31,960 --> 00:08:36,520
really powerful protocol but it's

00:08:33,550 --> 00:08:38,790
difficult to implement because most

00:08:36,520 --> 00:08:40,630
existing frameworks either required

00:08:38,790 --> 00:08:42,760
domain-specific languages their

00:08:40,630 --> 00:08:44,530
knowledge of cryptography which is hard

00:08:42,760 --> 00:08:46,870
for people without knowledge how could

00:08:44,530 --> 00:08:49,030
you do Khan cleese different because it

00:08:46,870 --> 00:08:50,470
uh interprets sequel like statements and

00:08:49,030 --> 00:08:53,830
automatically generates and dispatches

00:08:50,470 --> 00:08:58,840
code from NPC backends so you don't need

00:08:53,830 --> 00:09:01,750
to understand NPC in order to use it so

00:08:58,840 --> 00:09:03,400
as an example if you wanted to perform

00:09:01,750 --> 00:09:06,580
an aggregation over a bunch of

00:09:03,400 --> 00:09:08,850
individual data bunch of log files you

00:09:06,580 --> 00:09:11,110
could either just do one large

00:09:08,850 --> 00:09:14,290
aggregation concatenate all the data and

00:09:11,110 --> 00:09:15,940
aggregate it or you could locally pre

00:09:14,290 --> 00:09:17,140
compute an aggregation using some

00:09:15,940 --> 00:09:18,370
distributed back in like spark or

00:09:17,140 --> 00:09:22,870
something like that and then just submit

00:09:18,370 --> 00:09:23,740
the account to an NPC computation here

00:09:22,870 --> 00:09:26,050
we go

00:09:23,740 --> 00:09:32,140
so concave integrates seamlessly with

00:09:26,050 --> 00:09:33,400
our existing infrastructure and supports

00:09:32,140 --> 00:09:35,760
a pluggable back-end structure so you

00:09:33,400 --> 00:09:38,170
don't like if you want to integrate some

00:09:35,760 --> 00:09:39,760
new framework for NPC that just came out

00:09:38,170 --> 00:09:42,150
you can do so with with relatively

00:09:39,760 --> 00:09:42,150
little ease

00:09:47,379 --> 00:09:51,620
so we've we've described to you that

00:09:50,180 --> 00:09:58,970
three different types of technologies

00:09:51,620 --> 00:10:00,949
that are involved in yeah so we've we've

00:09:58,970 --> 00:10:02,509
just this is good yeah so we've

00:10:00,949 --> 00:10:04,160
described the three different types of

00:10:02,509 --> 00:10:06,199
technologies that are involved in our

00:10:04,160 --> 00:10:08,420
project Conclave dataverse and the MOC

00:10:06,199 --> 00:10:09,860
and I want to describe to you now why

00:10:08,420 --> 00:10:11,180
we're trying to combine them together

00:10:09,860 --> 00:10:13,579
and why we think it's such a powerful

00:10:11,180 --> 00:10:15,050
combination so first I want to describe

00:10:13,579 --> 00:10:17,600
the integration of Conclave and

00:10:15,050 --> 00:10:19,850
dataverse so Conclave is a technology

00:10:17,600 --> 00:10:21,800
that allows you in principle to protect

00:10:19,850 --> 00:10:23,180
any kind of computing over any kind of

00:10:21,800 --> 00:10:25,730
data in theory it can allow you to

00:10:23,180 --> 00:10:28,279
perform anything securely so that nobody

00:10:25,730 --> 00:10:30,410
knows to compute over data that one

00:10:28,279 --> 00:10:32,180
cannot read but data verses where the

00:10:30,410 --> 00:10:33,529
data actually live that has tens of

00:10:32,180 --> 00:10:35,990
thousands of data sets that are already

00:10:33,529 --> 00:10:38,240
indexed and curated and available for

00:10:35,990 --> 00:10:40,430
use and so the idea is to make it so

00:10:38,240 --> 00:10:42,439
that all of that data is available for

00:10:40,430 --> 00:10:45,050
the research community to analyze to try

00:10:42,439 --> 00:10:48,220
to extend to try to reproduce results

00:10:45,050 --> 00:10:50,660
etc all without even needing any real

00:10:48,220 --> 00:10:53,059
involvement by the owners of that data

00:10:50,660 --> 00:10:55,100
on dataverse indeed the owners benefit

00:10:53,059 --> 00:10:58,100
from having their data be more available

00:10:55,100 --> 00:10:59,959
and more reusable and conversely

00:10:58,100 --> 00:11:02,300
dataverse has an extensive access

00:10:59,959 --> 00:11:04,490
control mechanism that allows us when

00:11:02,300 --> 00:11:06,589
when we produce new data products as a

00:11:04,490 --> 00:11:08,749
result of any kind of secure analysis

00:11:06,589 --> 00:11:10,939
over existing data any newly derived

00:11:08,749 --> 00:11:12,769
data products can also be stored back

00:11:10,939 --> 00:11:14,329
within the dataverse repository and

00:11:12,769 --> 00:11:17,389
tagged appropriately and it gets good

00:11:14,329 --> 00:11:19,610
strong access controls from it a second

00:11:17,389 --> 00:11:22,220
the integration of conclave within the

00:11:19,610 --> 00:11:23,689
MOC these are two very natural things to

00:11:22,220 --> 00:11:25,249
play nicely together because they're

00:11:23,689 --> 00:11:27,259
both built upon the same kind of

00:11:25,249 --> 00:11:29,360
principle the idea that you want to

00:11:27,259 --> 00:11:31,639
federate Trust rather than centralizing

00:11:29,360 --> 00:11:34,519
it the idea being that you don't want to

00:11:31,639 --> 00:11:36,949
have to have people who use the cloud or

00:11:34,519 --> 00:11:38,990
people who do analytics to have to trust

00:11:36,949 --> 00:11:41,110
jointly any single computer or any

00:11:38,990 --> 00:11:43,939
single organization to hold their data

00:11:41,110 --> 00:11:46,670
instead they can sort of they can they

00:11:43,939 --> 00:11:48,860
can on-the-fly choose where they want to

00:11:46,670 --> 00:11:51,500
trust or even not have to trust any and

00:11:48,860 --> 00:11:52,820
vidual entity but instead no that just a

00:11:51,500 --> 00:11:55,610
collection of one out of an

00:11:52,820 --> 00:11:58,850
organization's is doing a good job of

00:11:55,610 --> 00:12:00,290
protecting their information furthermore

00:11:58,850 --> 00:12:01,820
in addition to sort of their

00:12:00,290 --> 00:12:03,860
compatibility from a trust point of view

00:12:01,820 --> 00:12:06,050
they're also very synergistic from a

00:12:03,860 --> 00:12:07,850
from a performance point of view secure

00:12:06,050 --> 00:12:09,290
multi-party computation as an idea that

00:12:07,850 --> 00:12:11,450
we've described and also Andre and the

00:12:09,290 --> 00:12:13,070
keynote it tends to be very network

00:12:11,450 --> 00:12:16,430
bound and in particular latency bound

00:12:13,070 --> 00:12:18,320
and whereas you know the internet is

00:12:16,430 --> 00:12:21,170
designed for sort of high bandwidth

00:12:18,320 --> 00:12:22,970
communication it's not so great from a

00:12:21,170 --> 00:12:24,890
latency standpoint and so putting all of

00:12:22,970 --> 00:12:27,050
the work to do secure multi-party

00:12:24,890 --> 00:12:28,640
computation within the moc within a

00:12:27,050 --> 00:12:30,920
single data center really helps us out

00:12:28,640 --> 00:12:32,270
from a performance point of view and

00:12:30,920 --> 00:12:34,100
sort of bringing all of these three

00:12:32,270 --> 00:12:35,390
pieces together we think introduces

00:12:34,100 --> 00:12:38,090
something really powerful where

00:12:35,390 --> 00:12:39,800
basically you know right now nowadays in

00:12:38,090 --> 00:12:41,390
the world we live in the hope is if you

00:12:39,800 --> 00:12:42,770
jet if you're a data scientist and you

00:12:41,390 --> 00:12:44,870
do some sort of research and you gather

00:12:42,770 --> 00:12:47,150
a data set your hope is that you did one

00:12:44,870 --> 00:12:48,980
large amount of effort to gather a bunch

00:12:47,150 --> 00:12:50,480
of data so that then the whole rest of

00:12:48,980 --> 00:12:52,010
the world can benefit from it but

00:12:50,480 --> 00:12:53,900
usually due to security and privacy

00:12:52,010 --> 00:12:55,340
concerns that's not the case you end up

00:12:53,900 --> 00:12:57,320
styling your data you end up isolating

00:12:55,340 --> 00:12:58,970
it and anybody else who wants to do

00:12:57,320 --> 00:13:01,760
something of a similar nature has to go

00:12:58,970 --> 00:13:04,880
reproduce the information over again so

00:13:01,760 --> 00:13:06,290
so with this sort of combination of

00:13:04,880 --> 00:13:09,500
services we believe that we've designed

00:13:06,290 --> 00:13:11,360
a system so that when somebody makes the

00:13:09,500 --> 00:13:13,100
data set creates a data set they can

00:13:11,360 --> 00:13:14,930
make it available without making it

00:13:13,100 --> 00:13:17,060
readable so that other people can

00:13:14,930 --> 00:13:19,430
analyze data that they cannot even see

00:13:17,060 --> 00:13:22,130
and that that way your data your effort

00:13:19,430 --> 00:13:24,230
that came into providing and curating

00:13:22,130 --> 00:13:26,750
etc a data set gets huge value

00:13:24,230 --> 00:13:28,160
throughout the entire community so there

00:13:26,750 --> 00:13:29,750
are a variety of examples of this many

00:13:28,160 --> 00:13:31,730
of which I described on the first slide

00:13:29,750 --> 00:13:33,770
let me just sort of give you a notional

00:13:31,730 --> 00:13:36,500
conceptual overview of one of them the

00:13:33,770 --> 00:13:38,660
application to medicine so we can think

00:13:36,500 --> 00:13:40,520
about in this example there's two

00:13:38,660 --> 00:13:42,440
hospitals Boston Children's Hospital and

00:13:40,520 --> 00:13:43,820
Mass General Hospital and you know let's

00:13:42,440 --> 00:13:45,740
think about some of the in immense

00:13:43,820 --> 00:13:48,050
datasets that they have and it would

00:13:45,740 --> 00:13:49,630
wouldn't it be great if the information

00:13:48,050 --> 00:13:51,640
that they had about AP

00:13:49,630 --> 00:13:53,770
and outcomes or anything else were made

00:13:51,640 --> 00:13:56,230
available to a larger group of medical

00:13:53,770 --> 00:13:57,940
researchers to really see any kinds of

00:13:56,230 --> 00:13:59,470
correlations or anything that they can

00:13:57,940 --> 00:14:02,410
find about sort of what can produce

00:13:59,470 --> 00:14:04,120
better health outcomes but of course

00:14:02,410 --> 00:14:05,340
this data is very very sensitive for a

00:14:04,120 --> 00:14:08,290
variety of reasons

00:14:05,340 --> 00:14:09,370
so these hospitals don't just make it

00:14:08,290 --> 00:14:12,250
readily available for the entire

00:14:09,370 --> 00:14:13,660
research community to view so using sort

00:14:12,250 --> 00:14:15,790
of the way we envision our workflow

00:14:13,660 --> 00:14:17,830
going and then parole will NEX describe

00:14:15,790 --> 00:14:19,870
in more detail how this works in depth

00:14:17,830 --> 00:14:21,670
but sort of at a notional level the idea

00:14:19,870 --> 00:14:23,770
would be that these hospitals could then

00:14:21,670 --> 00:14:26,110
put their data in the Massachusetts open

00:14:23,770 --> 00:14:28,720
cloud but but always encrypted using

00:14:26,110 --> 00:14:32,170
just standard cryptography protections

00:14:28,720 --> 00:14:34,180
and make it and register it within

00:14:32,170 --> 00:14:36,280
dataverse so that the knowledge of the

00:14:34,180 --> 00:14:37,840
data sets existence is public knowledge

00:14:36,280 --> 00:14:40,240
and available so that people know that

00:14:37,840 --> 00:14:42,340
these datasets exist even if they cannot

00:14:40,240 --> 00:14:43,990
read them and then suppose there's a

00:14:42,340 --> 00:14:45,700
medical researcher who wants to do some

00:14:43,990 --> 00:14:47,380
sort of joint analysis so like ophtho

00:14:45,700 --> 00:14:48,910
was describing earlier say maybe they

00:14:47,380 --> 00:14:50,290
want to analyze some sort of rare

00:14:48,910 --> 00:14:52,090
disease where neither Hospital

00:14:50,290 --> 00:14:54,100
individually no single employee at any

00:14:52,090 --> 00:14:56,200
of the hospitals has enough data to make

00:14:54,100 --> 00:14:57,370
enough understanding of what's going on

00:14:56,200 --> 00:14:59,710
with this rare disease but together

00:14:57,370 --> 00:15:01,750
maybe there's over two or three or more

00:14:59,710 --> 00:15:04,210
hospitals there's enough data to do some

00:15:01,750 --> 00:15:05,500
sort of sophisticated analysis the way

00:15:04,210 --> 00:15:07,120
that it would work in our system is that

00:15:05,500 --> 00:15:08,890
the researcher would submit some sort of

00:15:07,120 --> 00:15:11,230
query you can think of it as a sequel

00:15:08,890 --> 00:15:13,810
query or something like this that then

00:15:11,230 --> 00:15:16,420
would get transformed using into this

00:15:13,810 --> 00:15:19,690
cryptographic system and using conclave

00:15:16,420 --> 00:15:23,620
into this way to compute this system

00:15:19,690 --> 00:15:25,960
privately so that basically yeah so that

00:15:23,620 --> 00:15:28,030
even though the data says the raw data

00:15:25,960 --> 00:15:29,950
from the individual hospitals lives on

00:15:28,030 --> 00:15:32,310
different machines and they never share

00:15:29,950 --> 00:15:34,530
the data with each other's machines that

00:15:32,310 --> 00:15:36,670
collectively they can do some sort of

00:15:34,530 --> 00:15:38,860
communication between these two machines

00:15:36,670 --> 00:15:40,150
to send information that looks like

00:15:38,860 --> 00:15:42,310
gobbledygook it doesn't look like

00:15:40,150 --> 00:15:44,050
they're sharing any actual data but

00:15:42,310 --> 00:15:45,670
somehow in this process following the

00:15:44,050 --> 00:15:48,070
script a graphic procedure that conclave

00:15:45,670 --> 00:15:51,170
enables it would allow the researcher to

00:15:48,070 --> 00:15:53,810
get somehow the result of the

00:15:51,170 --> 00:15:58,029
the sequel query or the analysis that

00:15:53,810 --> 00:16:00,589
that the researcher wanted all without

00:15:58,029 --> 00:16:03,680
without any of the sensitive data ever

00:16:00,589 --> 00:16:05,180
leaving the the pods that the hospitals

00:16:03,680 --> 00:16:07,760
chose to entrust with their data and

00:16:05,180 --> 00:16:09,170
furthermore not only could this result

00:16:07,760 --> 00:16:10,850
of the analytic be useful to the

00:16:09,170 --> 00:16:12,620
researcher who actually submitted the

00:16:10,850 --> 00:16:14,480
query it could actually furthermore get

00:16:12,620 --> 00:16:16,339
pushback into up into dataverse with

00:16:14,480 --> 00:16:18,140
whatever access permissions were derived

00:16:16,339 --> 00:16:20,329
from the original whatever the original

00:16:18,140 --> 00:16:22,310
owners of the data would have wanted for

00:16:20,329 --> 00:16:23,899
their derived data products so that even

00:16:22,310 --> 00:16:25,760
in addition to the original researcher

00:16:23,899 --> 00:16:28,250
who made the query anybody else could

00:16:25,760 --> 00:16:29,540
could benefit from the results anybody

00:16:28,250 --> 00:16:31,550
else consistent with the wishes of the

00:16:29,540 --> 00:16:43,730
owners could benefit from the results of

00:16:31,550 --> 00:16:45,680
that as well my name is parul.singh I'm

00:16:43,730 --> 00:16:48,470
a graduate student at Northeastern and

00:16:45,680 --> 00:16:50,690
I'm working on MOC as a research

00:16:48,470 --> 00:16:54,550
assistant I would be explaining how we

00:16:50,690 --> 00:16:57,620
implemented c2d framework on MOC a

00:16:54,550 --> 00:16:59,990
choice was to run C to D on containers

00:16:57,620 --> 00:17:02,420
and we needed a container orchestrating

00:16:59,990 --> 00:17:04,250
platform so we moved to with openshift

00:17:02,420 --> 00:17:06,290
and kubernetes because it gives the

00:17:04,250 --> 00:17:08,329
powerful Java framework and it also

00:17:06,290 --> 00:17:10,939
gives the capability to manage slack

00:17:08,329 --> 00:17:12,350
resources on MOC right now we have a

00:17:10,939 --> 00:17:14,390
single openshift

00:17:12,350 --> 00:17:15,949
cluster with multiple projects and

00:17:14,390 --> 00:17:18,049
parties but down the line we are

00:17:15,949 --> 00:17:20,929
planning to integrate trusted elastic

00:17:18,049 --> 00:17:26,120
infrastructure to build trusted secure

00:17:20,929 --> 00:17:28,100
bare metal in place for parties C 2 the

00:17:26,120 --> 00:17:31,040
framework runs on open ship which is on

00:17:28,100 --> 00:17:32,630
top of MOC the conclave web is the app

00:17:31,040 --> 00:17:36,500
through which the user interacts with

00:17:32,630 --> 00:17:39,080
the C to D framework and for each party

00:17:36,500 --> 00:17:41,510
we would have an open ship project when

00:17:39,080 --> 00:17:44,510
a user submits a workflow conclave wave

00:17:41,510 --> 00:17:46,549
generates an organization part with all

00:17:44,510 --> 00:17:48,620
the kubernetes components like the

00:17:46,549 --> 00:17:51,410
conclave container which have the

00:17:48,620 --> 00:17:53,620
backend as well we use a config map to

00:17:51,410 --> 00:17:56,320
load the protocol and the input data and

00:17:53,620 --> 00:17:58,630
conflict the reason we use for conflict

00:17:56,320 --> 00:18:00,250
map is like we want to segregate or we

00:17:58,630 --> 00:18:03,250
want to decouple the configuration

00:18:00,250 --> 00:18:05,050
artifact from the image and we use empty

00:18:03,250 --> 00:18:08,230
derp which is a scratch based on the

00:18:05,050 --> 00:18:10,809
part to get data from Swift and also to

00:18:08,230 --> 00:18:13,090
store the intermediate results this is

00:18:10,809 --> 00:18:14,559
how a single organization part would

00:18:13,090 --> 00:18:16,390
look like but for multi-party

00:18:14,559 --> 00:18:20,650
computation to happen we need more than

00:18:16,390 --> 00:18:23,490
one pod so each organization will have

00:18:20,650 --> 00:18:25,450
their own pod on OpenShift environment

00:18:23,490 --> 00:18:27,429
definitely they would need to interact

00:18:25,450 --> 00:18:28,960
to each other because MPC computation

00:18:27,429 --> 00:18:31,179
needs to interact between two

00:18:28,960 --> 00:18:33,610
organization and we do that using the

00:18:31,179 --> 00:18:35,440
service expose on each of the pod once

00:18:33,610 --> 00:18:37,840
the computation is done the result is

00:18:35,440 --> 00:18:40,240
stored on Swift which is an object store

00:18:37,840 --> 00:18:45,160
and the analyst can use the result from

00:18:40,240 --> 00:18:47,620
the Swift is going to talk about a video

00:18:45,160 --> 00:18:53,410
demonstration of how the c2g framework

00:18:47,620 --> 00:18:55,179
works okay so all of our codes are

00:18:53,410 --> 00:18:57,670
hosted publicly on github another

00:18:55,179 --> 00:19:03,429
organization of that name but we also

00:18:57,670 --> 00:19:07,500
made a short demo video or how you're

00:19:03,429 --> 00:19:07,500
going open okay let's do that

00:19:07,840 --> 00:19:17,140
girl Oh 31 five right that's great okay

00:19:14,050 --> 00:19:18,850
so we have a command-line tool that we

00:19:17,140 --> 00:19:22,330
made so developers can launch jobs

00:19:18,850 --> 00:19:24,130
however we also threw together a wet UI

00:19:22,330 --> 00:19:26,200
I mean this is the open ship what do I

00:19:24,130 --> 00:19:28,150
play so if you look on the side there on

00:19:26,200 --> 00:19:29,740
the right there there's the protocol

00:19:28,150 --> 00:19:30,820
that the analyst would have written up

00:19:29,740 --> 00:19:33,100
on the computer which is just like a

00:19:30,820 --> 00:19:35,530
short Python file in the top right

00:19:33,100 --> 00:19:37,810
corner there's two data sets stored on

00:19:35,530 --> 00:19:40,930
Swift but I just have it into there this

00:19:37,810 --> 00:19:45,220
is called a1 and a2 dot CSV then we go

00:19:40,930 --> 00:19:48,760
to UI you can enter in a fast board

00:19:45,220 --> 00:19:50,140
until there there oh yeah so you can

00:19:48,760 --> 00:19:52,480
turn the swift endpoint and container

00:19:50,140 --> 00:19:55,980
name and the data sets that you want to

00:19:52,480 --> 00:20:01,420
compute over upload your protocol and

00:19:55,980 --> 00:20:02,890
hit compute and then in the open ship

00:20:01,420 --> 00:20:05,140
dashboard you see there's a server which

00:20:02,890 --> 00:20:08,020
is handling the so Jeff is the NPC that

00:20:05,140 --> 00:20:09,810
Kennedy's in this computation and it

00:20:08,020 --> 00:20:12,649
handles all NPC traffic which is all

00:20:09,810 --> 00:20:16,440
encrypted using

00:20:12,649 --> 00:20:18,929
about listening a pastor in these pods

00:20:16,440 --> 00:20:21,799
are just waiting to start for them to

00:20:18,929 --> 00:20:24,719
start out once they start out they will

00:20:21,799 --> 00:20:29,940
perform that protocol so it looks like

00:20:24,719 --> 00:20:32,729
they start up and finished and then we

00:20:29,940 --> 00:20:36,029
check on Swift and the output of data

00:20:32,729 --> 00:20:40,219
set or da CSV is stored there and that

00:20:36,029 --> 00:20:40,219
is it again

00:20:44,510 --> 00:20:57,620
no is this next one oh thanks

00:20:49,310 --> 00:20:58,740
[Applause]

00:20:57,620 --> 00:21:00,720
chintz

00:20:58,740 --> 00:21:03,560
if you have questions for for the team

00:21:00,720 --> 00:21:03,560
I'll bring you a mic

00:21:08,820 --> 00:21:15,300
when when you do the analysis what is to

00:21:12,360 --> 00:21:19,670
prevent the analysis being constructed

00:21:15,300 --> 00:21:27,600
in a way that kind of inherently exposes

00:21:19,670 --> 00:21:30,450
sensitive data so so by you mites nature

00:21:27,600 --> 00:21:33,000
the system doesn't control that we are

00:21:30,450 --> 00:21:36,060
building a policy mechanism but the idea

00:21:33,000 --> 00:21:37,950
is the data owners have data tags and

00:21:36,060 --> 00:21:39,540
algo tags associated with each data set

00:21:37,950 --> 00:21:41,310
that identifies what kind of

00:21:39,540 --> 00:21:43,770
computations can be computed over the

00:21:41,310 --> 00:21:46,380
data set itself so if the data owner

00:21:43,770 --> 00:21:48,150
allows a computation which eventually

00:21:46,380 --> 00:21:53,640
reveals that they any information that

00:21:48,150 --> 00:21:55,560
they did not want expose this system by

00:21:53,640 --> 00:21:57,810
its nature is not controlling that it's

00:21:55,560 --> 00:22:00,270
only making sure that if all that even

00:21:57,810 --> 00:22:03,990
if all the data that is exchanged across

00:22:00,270 --> 00:22:07,800
different parties is exposed somebody

00:22:03,990 --> 00:22:12,170
gets that data still not no information

00:22:07,800 --> 00:22:21,510
is revealed even or even if one party

00:22:12,170 --> 00:22:22,950
yeah I think that's it just because I

00:22:21,510 --> 00:22:24,030
had the same question you did so I just

00:22:22,950 --> 00:22:27,560
want to make sure I understand the

00:22:24,030 --> 00:22:30,600
answer so if I'm the researcher and I

00:22:27,560 --> 00:22:32,960
craft a malicious query there's not a

00:22:30,600 --> 00:22:36,690
safeguard but the safe guard prevents

00:22:32,960 --> 00:22:38,820
third parties like AWS or the cloud

00:22:36,690 --> 00:22:41,880
hoster from putting that data together

00:22:38,820 --> 00:22:44,520
so is the researcher I could as a third

00:22:41,880 --> 00:22:49,820
party observing packets on the wire I

00:22:44,520 --> 00:22:52,530
could not so there's there's not yet a

00:22:49,820 --> 00:22:53,910
protection the the policy pieces are

00:22:52,530 --> 00:22:55,890
work in progress it does not exist in

00:22:53,910 --> 00:22:59,360
the software at the moment but it will

00:22:55,890 --> 00:23:02,550
and the idea is as I said that when the

00:22:59,360 --> 00:23:05,070
data owners specify how I provide their

00:23:02,550 --> 00:23:07,530
data sets they will once we build this

00:23:05,070 --> 00:23:09,780
part they will specify a policy for how

00:23:07,530 --> 00:23:12,120
their data may be used and then when a

00:23:09,780 --> 00:23:14,520
researcher submits an analytic if it's

00:23:12,120 --> 00:23:16,770
not compatible with the wishes of what

00:23:14,520 --> 00:23:18,840
the owners specified then it would be

00:23:16,770 --> 00:23:20,820
rejected so then like the point is that

00:23:18,840 --> 00:23:22,860
the data owners would not be willing to

00:23:20,820 --> 00:23:24,419
while their data to be used to be

00:23:22,860 --> 00:23:26,220
contributed towards an analysis that

00:23:24,419 --> 00:23:28,860
they were not okay with you can imagine

00:23:26,220 --> 00:23:30,090
that part of this will be like partially

00:23:28,860 --> 00:23:33,809
mechanized ahead of time they could

00:23:30,090 --> 00:23:35,850
prescribe the the kinds of analytics

00:23:33,809 --> 00:23:37,620
they're comfortable with and also there

00:23:35,850 --> 00:23:40,679
could be a method that if it's something

00:23:37,620 --> 00:23:42,990
that is not already in the whitelist of

00:23:40,679 --> 00:23:45,360
what the policy prescribes that also the

00:23:42,990 --> 00:23:47,370
owners could sort of manually override

00:23:45,360 --> 00:23:49,169
and allow things that were not initially

00:23:47,370 --> 00:23:50,519
part of the set so so some things that

00:23:49,169 --> 00:23:52,769
are decided ahead of time and then for

00:23:50,519 --> 00:23:55,350
sort of things that might have been

00:23:52,769 --> 00:23:57,360
rejected ahead of time then the data

00:23:55,350 --> 00:24:00,090
owners could go approve it later if they

00:23:57,360 --> 00:24:05,129
wanted but it's not there yet that's our

00:24:00,090 --> 00:24:11,100
plan for the next year okay just a quick

00:24:05,129 --> 00:24:15,840
clarification if a person writes a query

00:24:11,100 --> 00:24:18,990
that only one that will only pull out

00:24:15,840 --> 00:24:20,820
one individual within a data set would

00:24:18,990 --> 00:24:23,490
it be sent as a could it be set as a

00:24:20,820 --> 00:24:26,279
policy so that the owner of the data set

00:24:23,490 --> 00:24:30,330
says any query using this data must have

00:24:26,279 --> 00:24:34,710
at least five individuals would that be

00:24:30,330 --> 00:24:36,570
an example of a policy sure but it would

00:24:34,710 --> 00:24:38,279
probably be so so first of all anything

00:24:36,570 --> 00:24:40,289
that would pull out subsets of the data

00:24:38,279 --> 00:24:42,120
set no matter how large or small would

00:24:40,289 --> 00:24:44,429
presumably be forbidden by most people

00:24:42,120 --> 00:24:46,679
the idea would be to do things that are

00:24:44,429 --> 00:24:49,220
sort of information lossy metrics things

00:24:46,679 --> 00:24:51,929
like finding aggregate trends or

00:24:49,220 --> 00:24:53,460
analysis over time like a time series

00:24:51,929 --> 00:24:55,919
thing or something like this that isn't

00:24:53,460 --> 00:24:59,129
about pulling out individual data from

00:24:55,919 --> 00:25:01,019
within any of the data owners datasets

00:24:59,129 --> 00:25:03,299
but about analyzing trends between them

00:25:01,019 --> 00:25:05,100
and one could specify not just that it

00:25:03,299 --> 00:25:06,509
would involve a large fraction of your

00:25:05,100 --> 00:25:08,730
own dataset but that it also must

00:25:06,509 --> 00:25:10,409
involve you know a large number of other

00:25:08,730 --> 00:25:12,779
people's data sets in conjunction with

00:25:10,409 --> 00:25:14,340
your own ie you may not even want people

00:25:12,779 --> 00:25:17,750
to see trends over just your own data

00:25:14,340 --> 00:25:17,750
but also together with others

00:25:22,899 --> 00:25:29,210
so how is receptive companies like you

00:25:26,990 --> 00:25:34,600
know Messier hospital and Jones Hospital

00:25:29,210 --> 00:25:43,850
then to to to this new paradigm here and

00:25:34,600 --> 00:25:46,700
what is the uptake yes so we re in talks

00:25:43,850 --> 00:25:47,990
with the tier one trauma centers Mass

00:25:46,700 --> 00:25:50,480
General Hospital Boston Children's

00:25:47,990 --> 00:25:51,830
Hospital in using this framework past a

00:25:50,480 --> 00:25:55,669
Children's Hospital is very much

00:25:51,830 --> 00:25:58,269
interested in it Tier one trauma centers

00:25:55,669 --> 00:26:03,080
are also very much interested in it they

00:25:58,269 --> 00:26:05,210
actually like to you one hospitals Tier

00:26:03,080 --> 00:26:08,029
one trauma centers request is one of the

00:26:05,210 --> 00:26:13,340
driving forces of this building this

00:26:08,029 --> 00:26:18,940
framework in general in general how is

00:26:13,340 --> 00:26:21,440
that community of businesses overall

00:26:18,940 --> 00:26:25,600
adopting this or accepting this what

00:26:21,440 --> 00:26:28,519
what is your biggest hurdle of an

00:26:25,600 --> 00:26:32,679
implementation of MPC by the sale team

00:26:28,519 --> 00:26:36,139
is in use by the businesses or

00:26:32,679 --> 00:26:40,730
Massachusetts and maybe Miami want to

00:26:36,139 --> 00:26:42,019
talk about it short so so secure

00:26:40,730 --> 00:26:43,970
multi-party computation this

00:26:42,019 --> 00:26:46,639
cryptographic technology generally is in

00:26:43,970 --> 00:26:48,110
use by a lot of entities throughout the

00:26:46,639 --> 00:26:51,139
city and state there's a lot of folks in

00:26:48,110 --> 00:26:52,399
the room right now who work in sale who

00:26:51,139 --> 00:26:54,409
could tell you more about it than me but

00:26:52,399 --> 00:26:55,850
for instance the pay equity project that

00:26:54,409 --> 00:26:57,380
ought to described at the very beginning

00:26:55,850 --> 00:27:01,070
is an actual thing that the city of

00:26:57,380 --> 00:27:02,450
Boston used to calculate overall pay

00:27:01,070 --> 00:27:03,860
disparity between men and women

00:27:02,450 --> 00:27:06,139
throughout the city without learning

00:27:03,860 --> 00:27:08,360
individual information about payrolls at

00:27:06,139 --> 00:27:10,549
any individual employer they collected

00:27:08,360 --> 00:27:13,360
data for about one-sixth of the the

00:27:10,549 --> 00:27:15,740
Greater Boston workforce using this

00:27:13,360 --> 00:27:17,480
there are other applications of this and

00:27:15,740 --> 00:27:18,900
used by the Greater Boston Chamber of

00:27:17,480 --> 00:27:21,660
Commerce etc

00:27:18,900 --> 00:27:23,250
so generally speaking the the secure

00:27:21,660 --> 00:27:25,440
multi-party computation stuff we at BU

00:27:23,250 --> 00:27:26,760
have done a lot to to try to generate

00:27:25,440 --> 00:27:29,040
interest of that within the business

00:27:26,760 --> 00:27:30,690
community this specific talk though this

00:27:29,040 --> 00:27:31,740
specific Conclave system in the

00:27:30,690 --> 00:27:33,480
integration with the universe

00:27:31,740 --> 00:27:35,490
so far we've mostly just done the

00:27:33,480 --> 00:27:38,450
discussions with the medical community

00:27:35,490 --> 00:27:38,450
that ought to described

00:27:44,149 --> 00:27:50,639
so I've got two questions so so what are

00:27:48,509 --> 00:27:52,470
the operations supported by this by your

00:27:50,639 --> 00:27:56,340
MPC for example addition or

00:27:52,470 --> 00:27:58,889
multiplication or whatever so second

00:27:56,340 --> 00:28:01,080
question is do you just use the regular

00:27:58,889 --> 00:28:05,820
MPC or MPC with

00:28:01,080 --> 00:28:08,220
cheater tolerance sites what was the

00:28:05,820 --> 00:28:10,559
second question and what so with the

00:28:08,220 --> 00:28:12,929
cheater tolerance meaning that if one of

00:28:10,559 --> 00:28:14,879
or a few of the data uploaders are

00:28:12,929 --> 00:28:17,610
dishonest in the computation okay yeah

00:28:14,879 --> 00:28:21,029
good questions and so the first question

00:28:17,610 --> 00:28:22,230
is the complex system okay so maybe to

00:28:21,029 --> 00:28:25,070
vote for the questions the complex

00:28:22,230 --> 00:28:27,389
system itself can integrate with any

00:28:25,070 --> 00:28:29,669
back-end that does secure multi-party

00:28:27,389 --> 00:28:31,019
computation in principle that you want I

00:28:29,669 --> 00:28:32,700
mean there's a few number of them that

00:28:31,019 --> 00:28:35,070
have actually been programmed in thus

00:28:32,700 --> 00:28:37,110
far but in principle so so so what

00:28:35,070 --> 00:28:38,369
conclave does is it takes any existing

00:28:37,110 --> 00:28:39,990
piece of software that does

00:28:38,369 --> 00:28:42,629
cryptographically secure computing and

00:28:39,990 --> 00:28:44,879
it sort of lifts it so that input

00:28:42,629 --> 00:28:46,080
programs can be specified so you don't

00:28:44,879 --> 00:28:47,700
you have to specify that the level of

00:28:46,080 --> 00:28:50,070
addition or multiplication to your

00:28:47,700 --> 00:28:53,490
question it was that you specify it as

00:28:50,070 --> 00:28:55,230
sort of sequel like query so so you

00:28:53,490 --> 00:28:57,629
specify an analytic and then it gets

00:28:55,230 --> 00:28:59,129
translated into any existing MPC engine

00:28:57,629 --> 00:29:00,899
to your second question the different

00:28:59,129 --> 00:29:02,850
NPC engines that we have integrated in

00:29:00,899 --> 00:29:04,950
the background have different kinds of

00:29:02,850 --> 00:29:06,749
trust profiles in general they're sort

00:29:04,950 --> 00:29:08,879
of honest majority systems so you need

00:29:06,749 --> 00:29:12,450
half of the machines at the moment to be

00:29:08,879 --> 00:29:14,399
honest but but the system is pluggable

00:29:12,450 --> 00:29:15,960
you can extend it connected to other

00:29:14,399 --> 00:29:18,179
ones as well that's just the stuff that

00:29:15,960 --> 00:29:19,499
we've like operationally connected it to

00:29:18,179 --> 00:29:22,799
from a software point of view at the

00:29:19,499 --> 00:29:24,389
moment but but that's not a rigid choice

00:29:22,799 --> 00:29:28,950
I'm saying like you could do other

00:29:24,389 --> 00:29:32,820
things yeah so I apologize I'm not very

00:29:28,950 --> 00:29:34,710
familiar with the multi-party

00:29:32,820 --> 00:29:37,830
communications maybe there was an

00:29:34,710 --> 00:29:39,360
earlier talk that I missed but it

00:29:37,830 --> 00:29:41,549
sounded like in response to one of the

00:29:39,360 --> 00:29:43,470
earlier questions that basically each

00:29:41,549 --> 00:29:47,279
you know individual provider for example

00:29:43,470 --> 00:29:48,929
like Harvard or MGH you know they're the

00:29:47,279 --> 00:29:50,290
only ones able to decrypt their data but

00:29:48,929 --> 00:29:51,730
the operations that

00:29:50,290 --> 00:29:54,970
you can perform on that is basically

00:29:51,730 --> 00:29:57,820
like you know they have a given set of

00:29:54,970 --> 00:30:00,190
operations they allow you to perform and

00:29:57,820 --> 00:30:02,380
you had said earlier that the encryption

00:30:00,190 --> 00:30:04,930
like the encrypted data was just

00:30:02,380 --> 00:30:08,710
standard you know standard encryption

00:30:04,930 --> 00:30:10,900
algorithms so I'm curious if this is

00:30:08,710 --> 00:30:12,580
using any kind of like a fancy homem

00:30:10,900 --> 00:30:14,350
homomorphic encryption or anything like

00:30:12,580 --> 00:30:17,550
that or if it's really just you know

00:30:14,350 --> 00:30:19,960
restricting which aggregate operations

00:30:17,550 --> 00:30:22,060
people can perform on that and allowing

00:30:19,960 --> 00:30:23,680
each individual organization to define

00:30:22,060 --> 00:30:26,710
which aggregate algorithms they allow

00:30:23,680 --> 00:30:28,660
people to perform on their data and then

00:30:26,710 --> 00:30:33,640
you so then you're like Conclave or

00:30:28,660 --> 00:30:35,350
musketeer back-end then is able to knows

00:30:33,640 --> 00:30:37,210
how to combine those accurate aggregate

00:30:35,350 --> 00:30:39,790
operations across the different data

00:30:37,210 --> 00:30:45,220
providers is that effectively how it

00:30:39,790 --> 00:30:47,350
works it says so sort of to the first

00:30:45,220 --> 00:30:49,360
part of your question it's kind of

00:30:47,350 --> 00:30:52,420
neither of the two things you said it's

00:30:49,360 --> 00:30:54,010
not just like encrypted data plus you

00:30:52,420 --> 00:30:56,260
know just some sort of white list of

00:30:54,010 --> 00:30:57,070
operations nor is it the full power of

00:30:56,260 --> 00:30:59,140
something called fully homomorphic

00:30:57,070 --> 00:31:02,770
encryption it's something in the middle

00:30:59,140 --> 00:31:04,180
and if you want to think of it as if it

00:31:02,770 --> 00:31:06,490
were fully homomorphic encryption is

00:31:04,180 --> 00:31:09,040
that's the style of the guarantee that

00:31:06,490 --> 00:31:11,440
we achieve but we do it a little bit

00:31:09,040 --> 00:31:13,270
differently than what literally the term

00:31:11,440 --> 00:31:15,550
fully homomorphic encryption is which

00:31:13,270 --> 00:31:17,560
fully homomorphic encryption tends to be

00:31:15,550 --> 00:31:18,940
computationally intensive but non

00:31:17,560 --> 00:31:20,260
interactive you don't have to be much in

00:31:18,940 --> 00:31:22,240
the way of communication between the

00:31:20,260 --> 00:31:23,710
parties multi-party computation is the

00:31:22,240 --> 00:31:25,330
other way it's not nearly as

00:31:23,710 --> 00:31:26,650
computationally burdensome but it

00:31:25,330 --> 00:31:28,960
involves a lot of communication between

00:31:26,650 --> 00:31:31,600
parties so basically all of the parties

00:31:28,960 --> 00:31:34,000
locally store encrypted versions of the

00:31:31,600 --> 00:31:36,280
information but also they have to do

00:31:34,000 --> 00:31:37,750
work between them in order to understand

00:31:36,280 --> 00:31:40,420
the trends in between the different

00:31:37,750 --> 00:31:42,640
parties datasets and that communication

00:31:40,420 --> 00:31:43,620
involves it's not encrypted data but you

00:31:42,640 --> 00:31:45,360
can think of it as that

00:31:43,620 --> 00:31:47,610
that helps it some sort of encoding of

00:31:45,360 --> 00:31:49,950
the information that allows you to

00:31:47,610 --> 00:31:52,020
compute the actual you know sequel query

00:31:49,950 --> 00:31:53,910
that you want but without actually

00:31:52,020 --> 00:31:55,860
learning anything other than the answer

00:31:53,910 --> 00:31:57,630
to the sequel query so the work that

00:31:55,860 --> 00:31:59,309
they do while trying to process the

00:31:57,630 --> 00:32:00,450
query together these machines are trying

00:31:59,309 --> 00:32:02,280
to process the results of the query

00:32:00,450 --> 00:32:04,740
together because it's a query over all

00:32:02,280 --> 00:32:06,570
of their data and so while they're

00:32:04,740 --> 00:32:08,790
trying to process this data they send in

00:32:06,570 --> 00:32:11,580
coded information of a particular type

00:32:08,790 --> 00:32:14,580
that is of a type that facilitates

00:32:11,580 --> 00:32:17,340
actually doing the analysis but that

00:32:14,580 --> 00:32:18,660
does not any allow anyone to view any of

00:32:17,340 --> 00:32:21,390
the intermediate state while the

00:32:18,660 --> 00:32:22,980
analysis is being done and somehow kind

00:32:21,390 --> 00:32:25,470
of magically through the way that the

00:32:22,980 --> 00:32:27,570
crypto works that the answer Falls like

00:32:25,470 --> 00:32:30,270
the output of the query falls out of the

00:32:27,570 --> 00:32:32,370
system in the clear but but without any

00:32:30,270 --> 00:32:34,679
of the other like byproducts while

00:32:32,370 --> 00:32:37,850
computing that being available for use I

00:32:34,679 --> 00:32:37,850
don't know if that answer your question

00:32:42,780 --> 00:32:45,830
other questions

00:32:51,210 --> 00:32:57,530
can you explain how the protocol works

00:32:53,280 --> 00:32:57,530
to share like the encrypted data

00:33:07,419 --> 00:33:09,450
Oh

00:33:15,720 --> 00:33:20,190
sorry we're trying to find the slides

00:33:17,650 --> 00:33:20,190
that show that

00:33:22,830 --> 00:33:26,960
which isn't a kickoff

00:33:39,540 --> 00:33:45,469
yes 10 points

00:33:42,469 --> 00:33:45,469
okay

00:33:46,080 --> 00:33:51,150
so yeah sure I'll give a simple example

00:33:48,420 --> 00:33:53,550
of how to do this thing called secure

00:33:51,150 --> 00:33:55,470
multi-party computation for this example

00:33:53,550 --> 00:33:57,600
it will just cover suppose there are

00:33:55,470 --> 00:34:00,000
three participants the green blue and

00:33:57,600 --> 00:34:01,830
red parties and all they want to compute

00:34:00,000 --> 00:34:03,900
is the sum of their three numbers okay

00:34:01,830 --> 00:34:06,120
it's like a super simple analytic yeah

00:34:03,900 --> 00:34:07,830
it can get more complicated than this of

00:34:06,120 --> 00:34:09,330
course but you know just to keep things

00:34:07,830 --> 00:34:10,590
simple all they want to do is they want

00:34:09,330 --> 00:34:12,750
to compute the sum of their three

00:34:10,590 --> 00:34:14,580
numbers and so I've sort of visually

00:34:12,750 --> 00:34:16,620
depicted the numbers think of like the

00:34:14,580 --> 00:34:19,530
size of this green box is like the

00:34:16,620 --> 00:34:22,140
actual number X like like the length of

00:34:19,530 --> 00:34:23,610
it is actually the the number itself and

00:34:22,140 --> 00:34:24,960
so the way that they do this okay so

00:34:23,610 --> 00:34:26,550
they want to compute the sum of their

00:34:24,960 --> 00:34:27,870
three numbers but nobody is willing to

00:34:26,550 --> 00:34:29,730
share their number with anybody else

00:34:27,870 --> 00:34:32,190
right that's the point so what they do

00:34:29,730 --> 00:34:34,320
is locally on their own computers they

00:34:32,190 --> 00:34:37,200
split their number into three pieces so

00:34:34,320 --> 00:34:38,310
part of this green party party s splits

00:34:37,200 --> 00:34:40,710
their number into three different

00:34:38,310 --> 00:34:43,050
numbers that have nothing to do with X

00:34:40,710 --> 00:34:45,150
modulo the fact that the sum of these

00:34:43,050 --> 00:34:47,310
three numbers actually equals x okay so

00:34:45,150 --> 00:34:50,280
so think like this is visually like X 1

00:34:47,310 --> 00:34:51,750
plus X 2 plus X 3 is X but otherwise the

00:34:50,280 --> 00:34:53,490
three numbers individually mean nothing

00:34:51,750 --> 00:34:56,280
and the other parties did the exact same

00:34:53,490 --> 00:34:58,470
thing and then what they do is basically

00:34:56,280 --> 00:35:00,600
they share one out of three you know

00:34:58,470 --> 00:35:02,730
each of these three tiny things like X 1

00:35:00,600 --> 00:35:05,010
X 2 X 3 they give one of these things to

00:35:02,730 --> 00:35:06,690
each of the parties so X 1 gives a party

00:35:05,010 --> 00:35:07,290
the green party gives X 1 to itself it

00:35:06,690 --> 00:35:09,150
doesn't go anywhere

00:35:07,290 --> 00:35:10,620
the second piece goes to the blue party

00:35:09,150 --> 00:35:12,270
and the third piece goes to the red

00:35:10,620 --> 00:35:13,500
party so they've just shared numbers

00:35:12,270 --> 00:35:15,240
that have nothing to do with their

00:35:13,500 --> 00:35:17,310
actual secret number right like that

00:35:15,240 --> 00:35:20,400
they they're just you know useless junk

00:35:17,310 --> 00:35:21,900
and so this is sort of my picture that

00:35:20,400 --> 00:35:24,330
like just from seeing one of these

00:35:21,900 --> 00:35:26,160
pieces you have no idea how big the

00:35:24,330 --> 00:35:27,120
actual X was right it could be like a

00:35:26,160 --> 00:35:29,790
little bit bigger it could be a lot

00:35:27,120 --> 00:35:30,900
bigger but this number could even be

00:35:29,790 --> 00:35:32,780
negative so it could actually be the

00:35:30,900 --> 00:35:35,340
like X is smaller than X 3 whatever

00:35:32,780 --> 00:35:36,630
limitation of the picture and so

00:35:35,340 --> 00:35:38,940
everybody does the same thing so

00:35:36,630 --> 00:35:41,130
everybody sort of receives as part of

00:35:38,940 --> 00:35:43,680
this like one piece from each of the

00:35:41,130 --> 00:35:45,330
other participants right with the

00:35:43,680 --> 00:35:47,280
property that remember the sum of

00:35:45,330 --> 00:35:49,290
the three green pieces really was X the

00:35:47,280 --> 00:35:50,880
some of the blue pieces really was why

00:35:49,290 --> 00:35:52,950
the some of the Greta pieces really was

00:35:50,880 --> 00:35:54,810
the which means that the sum of all nine

00:35:52,950 --> 00:35:57,000
of these pieces really is still the

00:35:54,810 --> 00:35:58,680
answer we're looking for even though no

00:35:57,000 --> 00:36:00,480
individual person has learned anything

00:35:58,680 --> 00:36:03,120
in this process about what anybody

00:36:00,480 --> 00:36:05,370
else's member was they can sort of

00:36:03,120 --> 00:36:07,260
locally now each participant can just

00:36:05,370 --> 00:36:09,360
take the sum of the three numbers they

00:36:07,260 --> 00:36:11,160
received right so now this person has

00:36:09,360 --> 00:36:13,020
one number here this person has one

00:36:11,160 --> 00:36:14,610
number here this person has one number

00:36:13,020 --> 00:36:17,220
here and the sum of those three numbers

00:36:14,610 --> 00:36:19,080
is the sum of XY and Z even though they

00:36:17,220 --> 00:36:21,330
like they themselves have nothing to do

00:36:19,080 --> 00:36:23,100
with XY and Z and now let's say suppose

00:36:21,330 --> 00:36:24,810
that the Green Party was supposed to

00:36:23,100 --> 00:36:27,000
learn the answer let's I don't know just

00:36:24,810 --> 00:36:28,800
because then everybody could just simply

00:36:27,000 --> 00:36:30,510
give to the Green Party like whatever

00:36:28,800 --> 00:36:32,040
the sum of these numbers were like not

00:36:30,510 --> 00:36:34,410
the individual pieces but just the sum

00:36:32,040 --> 00:36:36,300
and like the sum here and so like the

00:36:34,410 --> 00:36:38,910
sum of these three pieces is the answer

00:36:36,300 --> 00:36:41,250
to the question but in the process

00:36:38,910 --> 00:36:43,020
nobody has learned anybody else's

00:36:41,250 --> 00:36:45,450
information this is what I meant by sort

00:36:43,020 --> 00:36:47,130
of an encoding of X is sort of splitting

00:36:45,450 --> 00:36:49,620
X into these pieces and sending these

00:36:47,130 --> 00:36:51,450
pieces off to these other parties note

00:36:49,620 --> 00:36:53,220
that to do this addition we did a decent

00:36:51,450 --> 00:36:55,260
amount of networking right we sense all

00:36:53,220 --> 00:36:56,790
these like little encoded pieces to the

00:36:55,260 --> 00:36:58,830
other participants this is why I said at

00:36:56,790 --> 00:37:01,200
the beginning but of my part that that

00:36:58,830 --> 00:37:03,210
this process is very network bound and

00:37:01,200 --> 00:37:06,860
why doing it inside of isn't co-located

00:37:03,210 --> 00:37:06,860
inside of a single data center is useful

00:37:09,910 --> 00:37:12,510
yeah

00:37:13,800 --> 00:37:22,110
so my question was how this works for

00:37:16,120 --> 00:37:26,290
noncommutative operations right so so

00:37:22,110 --> 00:37:27,250
okay so so differently I don't I don't

00:37:26,290 --> 00:37:31,180
have a short answer to that

00:37:27,250 --> 00:37:33,280
unfortunately differently like like the

00:37:31,180 --> 00:37:35,380
the basic principle I want to argue is

00:37:33,280 --> 00:37:37,120
the same in the sense of you come up

00:37:35,380 --> 00:37:40,120
with a way of encoding the information

00:37:37,120 --> 00:37:41,680
such that the encoding so the key

00:37:40,120 --> 00:37:43,870
properties of this we're not the

00:37:41,680 --> 00:37:45,490
community I argue of the operation but

00:37:43,870 --> 00:37:47,410
the fact that there was an encoding of

00:37:45,490 --> 00:37:49,660
this system that was conducive to

00:37:47,410 --> 00:37:51,970
performing the computation but this

00:37:49,660 --> 00:37:53,680
encoding any individuals piece of the

00:37:51,970 --> 00:37:55,630
encoding was not conducive to learning

00:37:53,680 --> 00:37:57,760
the information those were the operative

00:37:55,630 --> 00:37:59,380
pieces the commutativity made edition

00:37:57,760 --> 00:38:01,420
quite simple I agree and other

00:37:59,380 --> 00:38:04,120
operations are gonna be less less going

00:38:01,420 --> 00:38:05,560
from a performance point of view but but

00:38:04,120 --> 00:38:06,700
those are the operative pieces and I

00:38:05,560 --> 00:38:10,500
claim you can do this for other

00:38:06,700 --> 00:38:13,930
operations as well claim without proof

00:38:10,500 --> 00:38:16,330
so quickly here only one party needed to

00:38:13,930 --> 00:38:18,460
know the final answer in the situation

00:38:16,330 --> 00:38:21,160
where our three parties need to know the

00:38:18,460 --> 00:38:22,690
final answer it would be you would start

00:38:21,160 --> 00:38:25,930
from scratch again with different

00:38:22,690 --> 00:38:27,220
numbers or distribute the same now it

00:38:25,930 --> 00:38:29,980
depends on the assumptions you're making

00:38:27,220 --> 00:38:31,450
about these three parties so for what it

00:38:29,980 --> 00:38:33,700
depends on if you're concerned about the

00:38:31,450 --> 00:38:35,710
parties from a confidentiality point or

00:38:33,700 --> 00:38:36,880
all its only or also from an integrity

00:38:35,710 --> 00:38:38,920
point of view so if you're concerned

00:38:36,880 --> 00:38:40,330
about the three parties learning it more

00:38:38,920 --> 00:38:41,860
information than they should but you're

00:38:40,330 --> 00:38:44,770
not concerned with them messing with the

00:38:41,860 --> 00:38:45,910
state of the computation if you trust

00:38:44,770 --> 00:38:48,160
them from an integrity point of view

00:38:45,910 --> 00:38:49,270
then once one person learns the answer

00:38:48,160 --> 00:38:51,460
they could simply tell the other people

00:38:49,270 --> 00:38:53,050
if you're trusting them for that right

00:38:51,460 --> 00:38:55,570
so so for what what I've shown on this

00:38:53,050 --> 00:38:58,060
slide is all that I have shown is how to

00:38:55,570 --> 00:39:01,240
make sure that nobody learns anybody

00:38:58,060 --> 00:39:02,980
else's sensitive input if any with this

00:39:01,240 --> 00:39:04,600
picture that I've shown if somebody

00:39:02,980 --> 00:39:06,550
wants to mess with the computation in

00:39:04,600 --> 00:39:08,050
the middle right like if the if the blue

00:39:06,550 --> 00:39:09,520
party wants to make sure that like I

00:39:08,050 --> 00:39:11,080
don't get the right answer they can

00:39:09,520 --> 00:39:13,120
simply not have sent me the correct

00:39:11,080 --> 00:39:13,820
answer like like there's nothing in what

00:39:13,120 --> 00:39:16,220
I have shown

00:39:13,820 --> 00:39:18,170
that would protect against people who

00:39:16,220 --> 00:39:20,660
are cheating and violating the terms of

00:39:18,170 --> 00:39:22,730
the protocol one can do this to the

00:39:20,660 --> 00:39:24,350
actual Conclave software does not but it

00:39:22,730 --> 00:39:26,030
is it is definitely possible and there's

00:39:24,350 --> 00:39:28,280
a lot of research in multi-party

00:39:26,030 --> 00:39:30,290
computation that does also protect

00:39:28,280 --> 00:39:32,060
against integrity that basically along

00:39:30,290 --> 00:39:33,560
the way people would prove to the other

00:39:32,060 --> 00:39:35,510
participants in the system that they're

00:39:33,560 --> 00:39:37,850
doing things correctly it is possible to

00:39:35,510 --> 00:39:38,930
do that but right now we are not we're

00:39:37,850 --> 00:39:40,850
only trying to protect against

00:39:38,930 --> 00:39:42,170
confidentiality in which case the answer

00:39:40,850 --> 00:39:43,340
to your question is simple that once

00:39:42,170 --> 00:39:47,120
this person learns the answer it just

00:39:43,340 --> 00:39:49,580
tells the other two okay so say you just

00:39:47,120 --> 00:39:50,990
have two parties right and then the

00:39:49,580 --> 00:39:52,760
computation you're doing is you're

00:39:50,990 --> 00:39:55,400
calculating the mean of certain

00:39:52,760 --> 00:39:58,730
categories or something between the two

00:39:55,400 --> 00:40:00,380
parties right so then the result like if

00:39:58,730 --> 00:40:02,180
you see the result and you're not in the

00:40:00,380 --> 00:40:03,650
birbee either the two their adversarial

00:40:02,180 --> 00:40:08,000
to each other so they don't want either

00:40:03,650 --> 00:40:09,620
to know the other ones data so then if

00:40:08,000 --> 00:40:11,210
you're not a member of either of those

00:40:09,620 --> 00:40:13,520
and you don't know the data from either

00:40:11,210 --> 00:40:15,100
one of them but if you have the data

00:40:13,520 --> 00:40:17,390
from one of them that you can you can

00:40:15,100 --> 00:40:19,520
infer the data from the other one based

00:40:17,390 --> 00:40:22,400
in there so great so that's it isn't

00:40:19,520 --> 00:40:23,930
that a limitation or yeah so the this is

00:40:22,400 --> 00:40:25,940
what I was saying in an earlier question

00:40:23,930 --> 00:40:28,250
which is that a secure multi-party

00:40:25,940 --> 00:40:30,500
computation does not protect anything

00:40:28,250 --> 00:40:32,270
from alcohol what she's described sort

00:40:30,500 --> 00:40:33,680
of an inference problem that taking the

00:40:32,270 --> 00:40:35,120
sense so this is why in my example is

00:40:33,680 --> 00:40:37,010
the sum of three numbers you figured out

00:40:35,120 --> 00:40:38,090
why we did three if we had done two this

00:40:37,010 --> 00:40:39,710
whole thing would be kind of useless

00:40:38,090 --> 00:40:40,730
because if you know your own answer and

00:40:39,710 --> 00:40:42,140
you know the sum of the two than you

00:40:40,730 --> 00:40:46,370
know what the other person's answer is

00:40:42,140 --> 00:40:48,080
so this this this encoding mechanism is

00:40:46,370 --> 00:40:50,030
about protecting the intermediate

00:40:48,080 --> 00:40:52,580
information in the process of going from

00:40:50,030 --> 00:40:54,740
the inputs to the outputs it is not

00:40:52,580 --> 00:40:56,630
about ensuring that the outputs are safe

00:40:54,740 --> 00:40:58,310
to reveal that has nothing to do with

00:40:56,630 --> 00:40:59,420
this process that is an independent

00:40:58,310 --> 00:41:01,100
question and that's what I was

00:40:59,420 --> 00:41:02,930
describing earlier then one thing we

00:41:01,100 --> 00:41:04,730
want to add on top of this in the next

00:41:02,930 --> 00:41:07,070
year of the product of the program is a

00:41:04,730 --> 00:41:08,780
policy mechanism so that the owners of

00:41:07,070 --> 00:41:10,880
data sets could prescribe ahead of time

00:41:08,780 --> 00:41:14,240
which are the kinds of compare which

00:41:10,880 --> 00:41:16,790
kinds of computing would they be willing

00:41:14,240 --> 00:41:18,500
to allow their data sets to be used

00:41:16,790 --> 00:41:20,220
inside of that has nothing to do with

00:41:18,500 --> 00:41:22,829
this this is about sort of protecting

00:41:20,220 --> 00:41:24,810
how to get the answer to the analytic

00:41:22,829 --> 00:41:26,819
without reviewing other information not

00:41:24,810 --> 00:41:30,510
what's analytic you would want to have

00:41:26,819 --> 00:41:32,010
computed in the first place where we're

00:41:30,510 --> 00:41:35,339
over time but we can take one more

00:41:32,010 --> 00:41:40,500
question because now we have a short

00:41:35,339 --> 00:41:41,609
break no all right I just have a big

00:41:40,500 --> 00:41:43,940
round of applause for these guys is

00:41:41,609 --> 00:41:43,940
awesome

00:41:46,610 --> 00:41:50,070
[Applause]

00:41:56,230 --> 00:41:58,290

YouTube URL: https://www.youtube.com/watch?v=9RMCPVxbPdg


