Title: Ansible deployment and management updates for IdM - DevConf.CZ 2021
Publication date: 2021-03-19
Playlist: DevConfCZ 2021
Description: 
	Speaker: Thomas Woerner


The talk will show the additions and enhancements for the deployment and management of IdM based solutions using Ansible with the ansible-freeipa project. This includes Ansible roles and modules to automate functions related to deployment and configuration as well as maintenance of IdM. The talk will provide an overview over new modules and roles in ansible-freeipa, like for example DNS and RBAC modules and also backup and restore roles. A demo will show the deployment of a IdM cluster with server, replicas and clients and also the use of several management modules. 


Schedule: https://sched.co/gmOF
Captions: 
	00:00:02,000 --> 00:00:05,600
so welcome this is the talk ansible

00:00:04,080 --> 00:00:06,799
deployment and management updates for

00:00:05,600 --> 00:00:08,720
idm

00:00:06,799 --> 00:00:11,120
um according to the plan it changed a

00:00:08,720 --> 00:00:13,280
little bit so there will be no

00:00:11,120 --> 00:00:14,480
bigger demo if there is time left there

00:00:13,280 --> 00:00:17,680
will be a small demo

00:00:14,480 --> 00:00:20,560
but um let's start

00:00:17,680 --> 00:00:22,080
so um the again now you see there there

00:00:20,560 --> 00:00:25,039
are several things

00:00:22,080 --> 00:00:26,000
so it's more small overview over ansible

00:00:25,039 --> 00:00:29,119
free apa

00:00:26,000 --> 00:00:32,239
um and afterwards the changes

00:00:29,119 --> 00:00:34,640
so for the roles for management modules

00:00:32,239 --> 00:00:38,000
new roles and new management modules and

00:00:34,640 --> 00:00:38,000
also utilities in the end

00:00:38,320 --> 00:00:43,840
so um here you have a overview of

00:00:41,600 --> 00:00:44,800
over ansible free apa at the in the

00:00:43,840 --> 00:00:48,239
current state

00:00:44,800 --> 00:00:50,079
so all the um bold mod things are

00:00:48,239 --> 00:00:52,559
um the new stuff that has been added

00:00:50,079 --> 00:00:55,920
since last devconf

00:00:52,559 --> 00:00:57,199
so um we have an additional role this is

00:00:55,920 --> 00:00:59,840
the ipad backup role

00:00:57,199 --> 00:01:00,879
for backup and restore and for

00:00:59,840 --> 00:01:02,960
management modules

00:01:00,879 --> 00:01:05,119
according additionally to the other ones

00:01:02,960 --> 00:01:08,479
so last time we added hbac

00:01:05,119 --> 00:01:12,240
and also dns stuff and

00:01:08,479 --> 00:01:15,040
now we have several modules

00:01:12,240 --> 00:01:16,320
are rpec modules and also ipod location

00:01:15,040 --> 00:01:19,840
ipad fast

00:01:16,320 --> 00:01:21,759
i will show some um examples about this

00:01:19,840 --> 00:01:24,720
later in the demo in in this

00:01:21,759 --> 00:01:27,200
presentation i'm sorry

00:01:24,720 --> 00:01:27,840
so the availability and distribution and

00:01:27,200 --> 00:01:31,119
versions

00:01:27,840 --> 00:01:34,880
this has not changed um

00:01:31,119 --> 00:01:38,560
so we still have um rpms we have

00:01:34,880 --> 00:01:43,119
a collection galaxy and we have several

00:01:38,560 --> 00:01:46,479
supported distributions um

00:01:43,119 --> 00:01:50,240
in debian 10 i think um

00:01:46,479 --> 00:01:53,680
server is now possible but i'm not sure

00:01:50,240 --> 00:01:56,880
so this needs to be verified um

00:01:53,680 --> 00:02:00,159
and for all management modules we have a

00:01:56,880 --> 00:02:02,399
minimum requirement of ipa 4.4

00:02:00,159 --> 00:02:03,200
and for the deployment roles so for

00:02:02,399 --> 00:02:06,719
server

00:02:03,200 --> 00:02:08,959
um we have 4.5 plus

00:02:06,719 --> 00:02:11,599
for replica we have 4.6 plus and for

00:02:08,959 --> 00:02:14,640
client we have 4.4 plus

00:02:11,599 --> 00:02:18,080
um so simply let's say

00:02:14,640 --> 00:02:22,640
everything um with 4 6 up is supported

00:02:18,080 --> 00:02:25,680
by all roles and modules

00:02:22,640 --> 00:02:27,760
so the requirements um so on the

00:02:25,680 --> 00:02:31,200
controller we need an ansible version

00:02:27,760 --> 00:02:33,840
um 2.8 plus is supported for

00:02:31,200 --> 00:02:36,480
all um rpms that we are providing for

00:02:33,840 --> 00:02:38,959
answer free ipa and also upstream

00:02:36,480 --> 00:02:40,400
um we also have a collection ansible

00:02:38,959 --> 00:02:43,760
collection galaxy

00:02:40,400 --> 00:02:47,120
um right now it's fully supported in

00:02:43,760 --> 00:02:51,040
ansible 2.8 and 2.10 plus

00:02:47,120 --> 00:02:51,760
um there is an issue with 2.9 right now

00:02:51,040 --> 00:02:54,800
in the

00:02:51,760 --> 00:02:56,720
in the deployment roles um you will run

00:02:54,800 --> 00:03:00,640
into a spec is none error

00:02:56,720 --> 00:03:03,680
um because answer is

00:03:00,640 --> 00:03:08,640
importing module utils not

00:03:03,680 --> 00:03:12,239
in the really correct way so it tries to

00:03:08,640 --> 00:03:15,280
load all imports

00:03:12,239 --> 00:03:17,440
and fails because it's trying this on

00:03:15,280 --> 00:03:19,760
the controller to make sure to copy the

00:03:17,440 --> 00:03:22,720
right files to the nodes

00:03:19,760 --> 00:03:24,959
there is currently a workaround this is

00:03:22,720 --> 00:03:26,799
work in progress

00:03:24,959 --> 00:03:28,640
so this is something that we will add in

00:03:26,799 --> 00:03:31,760
the next weeks

00:03:28,640 --> 00:03:32,799
to make the ansible collection galaxy

00:03:31,760 --> 00:03:35,840
working

00:03:32,799 --> 00:03:39,280
for the deployment additionally you

00:03:35,840 --> 00:03:42,400
will need k in it so you will need

00:03:39,280 --> 00:03:45,440
covers utilities

00:03:42,400 --> 00:03:47,599
um as soon as you want to use a one-time

00:03:45,440 --> 00:03:50,480
password

00:03:47,599 --> 00:03:52,480
and python 3 gss api is required also

00:03:50,480 --> 00:03:55,200
for otp

00:03:52,480 --> 00:03:56,480
if you use a key tab for installing the

00:03:55,200 --> 00:03:59,920
client

00:03:56,480 --> 00:04:01,040
on the node you will need a supported

00:03:59,920 --> 00:04:04,319
free ipa version

00:04:01,040 --> 00:04:06,640
and a supported distribution that means

00:04:04,319 --> 00:04:08,159
you need to have the packages for free

00:04:06,640 --> 00:04:12,720
ap available

00:04:08,159 --> 00:04:13,760
and also the files and answer free apa

00:04:12,720 --> 00:04:16,560
that are defining

00:04:13,760 --> 00:04:20,479
which packages or modules need to be

00:04:16,560 --> 00:04:20,479
installed to be able to use free ipa

00:04:20,959 --> 00:04:24,000
so we have enhancement in deployment

00:04:23,360 --> 00:04:26,880
roles

00:04:24,000 --> 00:04:28,639
so um there is one thing that has been

00:04:26,880 --> 00:04:29,840
added for ipassover and hyper replica

00:04:28,639 --> 00:04:33,280
roles

00:04:29,840 --> 00:04:34,800
for the deployment so um there is a new

00:04:33,280 --> 00:04:35,360
setting that is called hypersoftware

00:04:34,800 --> 00:04:38,080
viable d

00:04:35,360 --> 00:04:40,840
zone for the server and i have a replica

00:04:38,080 --> 00:04:44,160
51d zone for the replica

00:04:40,840 --> 00:04:47,840
um up to now um

00:04:44,160 --> 00:04:50,320
firewd is um automatically

00:04:47,840 --> 00:04:51,040
enabled and also configured within

00:04:50,320 --> 00:04:54,479
within the

00:04:51,040 --> 00:04:56,080
default zone and with the setting you

00:04:54,479 --> 00:04:58,960
can define to use another

00:04:56,080 --> 00:05:00,240
zone for file for the server and replica

00:04:58,960 --> 00:05:03,919
deployment

00:05:00,240 --> 00:05:07,199
it's very important to open the firewall

00:05:03,919 --> 00:05:09,600
so for the server the firewall is opened

00:05:07,199 --> 00:05:11,440
after the deployment

00:05:09,600 --> 00:05:13,680
but for replica it needs to be opened

00:05:11,440 --> 00:05:14,639
before because there is a connection

00:05:13,680 --> 00:05:16,400
check

00:05:14,639 --> 00:05:17,919
that is making sure that the replica is

00:05:16,400 --> 00:05:19,600
able to speak to the server and the

00:05:17,919 --> 00:05:21,520
other way around

00:05:19,600 --> 00:05:22,720
so it's very important to open the

00:05:21,520 --> 00:05:26,880
firewall ports

00:05:22,720 --> 00:05:29,280
for um for free ipa for ipa

00:05:26,880 --> 00:05:30,240
before you deploy otherwise you will

00:05:29,280 --> 00:05:31,759
fail

00:05:30,240 --> 00:05:34,800
so the connection check will fail and

00:05:31,759 --> 00:05:37,360
you will see an error message

00:05:34,800 --> 00:05:39,120
and to be able to have this a little bit

00:05:37,360 --> 00:05:43,440
more

00:05:39,120 --> 00:05:46,000
tunable we have this setting now so

00:05:43,440 --> 00:05:47,280
um it simplifies life if you have more

00:05:46,000 --> 00:05:50,720
than one zone in use

00:05:47,280 --> 00:05:54,000
and want to um and want to

00:05:50,720 --> 00:05:57,919
have your server only available

00:05:54,000 --> 00:05:57,919
within your internal zone for example

00:05:59,199 --> 00:06:03,360
we have also enhancements and management

00:06:01,199 --> 00:06:05,759
modules

00:06:03,360 --> 00:06:06,800
so for ipad group the posix option has

00:06:05,759 --> 00:06:10,220
been added

00:06:06,800 --> 00:06:11,520
so now it's it's possible to

00:06:10,220 --> 00:06:13,520
[Music]

00:06:11,520 --> 00:06:16,560
ensure a group has been cha has been

00:06:13,520 --> 00:06:20,000
added with a non within

00:06:16,560 --> 00:06:22,400
a group is a non-partis group

00:06:20,000 --> 00:06:23,440
or to change from a non-politics to a

00:06:22,400 --> 00:06:27,120
posix group

00:06:23,440 --> 00:06:28,479
but the second one um yeah cannot be

00:06:27,120 --> 00:06:31,680
completely unimportant

00:06:28,479 --> 00:06:36,240
yeah because it's changing the type so

00:06:31,680 --> 00:06:39,199
um it is item party it's not failing but

00:06:36,240 --> 00:06:41,120
yeah and in the first try it will make

00:06:39,199 --> 00:06:41,440
sure that it's not posix in the second

00:06:41,120 --> 00:06:46,240
one

00:06:41,440 --> 00:06:46,240
in the second try it will not fail so

00:06:47,120 --> 00:06:53,840
um and we have new roles and

00:06:51,440 --> 00:06:54,639
this is the biggest addition to answer

00:06:53,840 --> 00:06:56,400
free ap

00:06:54,639 --> 00:06:58,400
in the latest version we have the iver

00:06:56,400 --> 00:07:01,599
beggar brawl

00:06:58,400 --> 00:07:04,639
this role is able to do a backup

00:07:01,599 --> 00:07:07,039
of ipad servers so servers and replicas

00:07:04,639 --> 00:07:09,039
you can do a server local backup and

00:07:07,039 --> 00:07:12,080
also a backup tool controller

00:07:09,039 --> 00:07:14,720
you can copy backup files existing

00:07:12,080 --> 00:07:16,479
backup files

00:07:14,720 --> 00:07:17,759
or even all backup files that are

00:07:16,479 --> 00:07:20,960
available

00:07:17,759 --> 00:07:22,080
um on the server so let's not say files

00:07:20,960 --> 00:07:24,960
it's a directory

00:07:22,080 --> 00:07:26,000
here in fact um from server to the

00:07:24,960 --> 00:07:29,039
controller

00:07:26,000 --> 00:07:31,280
you can also remove specific backups or

00:07:29,039 --> 00:07:34,720
all banners from the server

00:07:31,280 --> 00:07:38,240
you can restore a local bank app

00:07:34,720 --> 00:07:42,080
on the server and also from a controller

00:07:38,240 --> 00:07:44,560
and it will if you restore and you have

00:07:42,080 --> 00:07:45,440
a empty machine with no packages

00:07:44,560 --> 00:07:46,879
installed

00:07:45,440 --> 00:07:48,639
it will make sure that the needed

00:07:46,879 --> 00:07:50,879
packages are installed to be able to

00:07:48,639 --> 00:07:52,960
restore properly

00:07:50,879 --> 00:07:54,720
and it will fail if the packages cannot

00:07:52,960 --> 00:07:57,199
be found so

00:07:54,720 --> 00:07:59,840
it's needed to have the packages in the

00:07:57,199 --> 00:07:59,840
repository

00:07:59,919 --> 00:08:03,599
or yum configured or dnf or whatever you

00:08:03,120 --> 00:08:06,960
use

00:08:03,599 --> 00:08:10,879
to install packages on your

00:08:06,960 --> 00:08:12,319
system it can copy backups from the

00:08:10,879 --> 00:08:16,400
controller to the server

00:08:12,319 --> 00:08:18,879
and it will configure file d accordingly

00:08:16,400 --> 00:08:20,319
and there is also setting to turn file

00:08:18,879 --> 00:08:22,080
deconfiguration off

00:08:20,319 --> 00:08:24,319
the same as we have in ipad server in

00:08:22,080 --> 00:08:26,960
hyper replica row

00:08:24,319 --> 00:08:27,759
and here we have an example of iva

00:08:26,960 --> 00:08:31,120
backup

00:08:27,759 --> 00:08:34,159
role usage you see

00:08:31,120 --> 00:08:36,000
it's using ipad server and it's

00:08:34,159 --> 00:08:38,000
doing a backup to the controller so

00:08:36,000 --> 00:08:40,640
alpha backup to controller is yes

00:08:38,000 --> 00:08:42,240
this defaults to no which means there

00:08:40,640 --> 00:08:45,680
will be a local backup

00:08:42,240 --> 00:08:46,800
on the server itself um there isn't

00:08:45,680 --> 00:08:49,920
another setting

00:08:46,800 --> 00:08:53,120
um to make sure to define if

00:08:49,920 --> 00:08:54,320
um if ipad backup to controller is set

00:08:53,120 --> 00:08:57,920
to yes

00:08:54,320 --> 00:09:00,240
to keep the backup on the server

00:08:57,920 --> 00:09:02,720
this defaults to node so as soon as you

00:09:00,240 --> 00:09:04,800
say ima backup to controller yes

00:09:02,720 --> 00:09:06,160
um the backup will be will be

00:09:04,800 --> 00:09:07,360
transferred to the controller and

00:09:06,160 --> 00:09:11,120
removed from the server

00:09:07,360 --> 00:09:15,760
afterwards um

00:09:11,120 --> 00:09:17,839
so either backup keep on server um

00:09:15,760 --> 00:09:19,680
can be set to yes to keep it also on the

00:09:17,839 --> 00:09:23,839
controller beyond the server itself

00:09:19,680 --> 00:09:23,839
after copying the controller

00:09:25,279 --> 00:09:30,560
here we have another example um

00:09:28,399 --> 00:09:32,480
to restore an ipad server from

00:09:30,560 --> 00:09:36,320
controller

00:09:32,480 --> 00:09:38,720
so you see either backup name is set to

00:09:36,320 --> 00:09:40,240
to the backup name by the way if you do

00:09:38,720 --> 00:09:43,040
a backup

00:09:40,240 --> 00:09:43,040
within here

00:09:43,440 --> 00:09:48,080
it automatically renames your backup

00:09:48,160 --> 00:09:52,399
so you will have the server name as a

00:09:50,240 --> 00:09:55,519
prefix to make sure that you

00:09:52,399 --> 00:09:56,560
can um have several backups at the same

00:09:55,519 --> 00:09:58,080
time so

00:09:56,560 --> 00:10:00,640
let's say you have a server and several

00:09:58,080 --> 00:10:01,760
replicas and your credit backups of all

00:10:00,640 --> 00:10:04,880
of those

00:10:01,760 --> 00:10:07,519
um then you're not running into name

00:10:04,880 --> 00:10:09,680
issues because the server name and

00:10:07,519 --> 00:10:10,399
replica name will be the prefix of the

00:10:09,680 --> 00:10:12,480
backup

00:10:10,399 --> 00:10:14,480
of the backup directory that is created

00:10:12,480 --> 00:10:17,040
on the controller

00:10:14,480 --> 00:10:18,160
so in here we are copying we are

00:10:17,040 --> 00:10:20,560
restoring

00:10:18,160 --> 00:10:22,480
from the controller that means in the

00:10:20,560 --> 00:10:26,399
first place this

00:10:22,480 --> 00:10:30,000
backup is copied back to the server

00:10:26,399 --> 00:10:33,680
from the controller and then this backup

00:10:30,000 --> 00:10:36,880
is applied and you see you need to give

00:10:33,680 --> 00:10:39,200
this also the dm password

00:10:36,880 --> 00:10:40,959
but this is the also the case with the

00:10:39,200 --> 00:10:43,920
command line tools

00:10:40,959 --> 00:10:46,800
so this role is more or less a big

00:10:43,920 --> 00:10:51,040
wrapper around the command line tools

00:10:46,800 --> 00:10:53,279
to allow to to use the controller also

00:10:51,040 --> 00:10:53,279
and

00:10:54,480 --> 00:11:00,160
it has the same requirements as usual

00:10:58,160 --> 00:11:01,360
and you see the state is restored this

00:11:00,160 --> 00:11:05,360
means this

00:11:01,360 --> 00:11:08,880
will be restored um if you um

00:11:05,360 --> 00:11:11,920
instead use state copied it will only

00:11:08,880 --> 00:11:13,760
copy this backup to the

00:11:11,920 --> 00:11:16,240
from the controller to the server but

00:11:13,760 --> 00:11:18,240
then you don't need the password

00:11:16,240 --> 00:11:19,440
there is another example here for

00:11:18,240 --> 00:11:23,279
example

00:11:19,440 --> 00:11:25,600
um so here we are copying a backup from

00:11:23,279 --> 00:11:29,839
the ipa server

00:11:25,600 --> 00:11:29,839
several backups from the ipad server

00:11:29,920 --> 00:11:33,680
you see the ipad backup names these are

00:11:32,240 --> 00:11:37,200
the names on the controller

00:11:33,680 --> 00:11:38,959
on the server without the prefix

00:11:37,200 --> 00:11:41,600
and i have a backup to controller is set

00:11:38,959 --> 00:11:42,240
to yes and state is copied so it will

00:11:41,600 --> 00:11:45,279
make sure

00:11:42,240 --> 00:11:47,680
it will copy those um from the

00:11:45,279 --> 00:11:48,480
server to the controller by the way it

00:11:47,680 --> 00:11:50,079
will fail

00:11:48,480 --> 00:11:52,560
if you provide names that are not

00:11:50,079 --> 00:11:52,560
existing

00:11:52,720 --> 00:11:58,880
and the second one on the right um is

00:11:56,399 --> 00:11:59,760
to remove all backups from the apple

00:11:58,880 --> 00:12:03,519
server

00:11:59,760 --> 00:12:06,000
if i have a backup name here is not all

00:12:03,519 --> 00:12:07,440
um but the same as on the left side it

00:12:06,000 --> 00:12:09,519
will only remove those

00:12:07,440 --> 00:12:11,120
but if it's all it will remove all

00:12:09,519 --> 00:12:13,920
available backups

00:12:11,120 --> 00:12:16,639
on the on the server and the state here

00:12:13,920 --> 00:12:16,639
is absent

00:12:17,519 --> 00:12:24,079
so ipa backup is a fairly

00:12:20,639 --> 00:12:27,680
powerful role um

00:12:24,079 --> 00:12:31,680
and i think you will have fun with it

00:12:27,680 --> 00:12:31,680
and here's um another example

00:12:31,760 --> 00:12:36,560
we are copying a backup from the

00:12:33,440 --> 00:12:38,880
controller to the ipad server

00:12:36,560 --> 00:12:39,760
and you see here hyper backup name is

00:12:38,880 --> 00:12:43,760
the full

00:12:39,760 --> 00:12:46,079
name on the controller

00:12:43,760 --> 00:12:47,200
um it might be possible to change this

00:12:46,079 --> 00:12:50,240
in the future that

00:12:47,200 --> 00:12:52,959
um it's using the ipad server name

00:12:50,240 --> 00:12:54,160
looking for the hyper backup name with a

00:12:52,959 --> 00:12:57,279
short word

00:12:54,160 --> 00:13:00,079
with the normal um

00:12:57,279 --> 00:13:00,959
name on on the server and to

00:13:00,079 --> 00:13:03,600
automatically

00:13:00,959 --> 00:13:04,880
prepend the the name of the server but

00:13:03,600 --> 00:13:07,760
this is not there but

00:13:04,880 --> 00:13:10,800
it might be added in the future it

00:13:07,760 --> 00:13:10,800
should be simple to do

00:13:13,120 --> 00:13:21,839
so we have new management modules also

00:13:18,240 --> 00:13:24,320
in anzibar free ipa

00:13:21,839 --> 00:13:26,399
so here you see a list so there is

00:13:24,320 --> 00:13:28,079
hyperlocation and ipad trust

00:13:26,399 --> 00:13:31,519
hyperlocation has been added

00:13:28,079 --> 00:13:34,399
only as a test for

00:13:31,519 --> 00:13:37,200
a utility that i will show later on

00:13:34,399 --> 00:13:40,800
hypertrust was an external contribution

00:13:37,200 --> 00:13:43,120
um to manage domain interests

00:13:40,800 --> 00:13:44,480
and we have role-based access controls

00:13:43,120 --> 00:13:46,720
so our back modules

00:13:44,480 --> 00:13:48,720
so hyper delegation to manage delegation

00:13:46,720 --> 00:13:50,959
and delegation attributes

00:13:48,720 --> 00:13:52,399
hyper permission to manage permissions

00:13:50,959 --> 00:13:56,160
and permission attribute

00:13:52,399 --> 00:13:57,839
members hyper privilege to

00:13:56,160 --> 00:13:59,680
manage privileges and privileged

00:13:57,839 --> 00:14:02,880
permission members

00:13:59,680 --> 00:14:06,160
and ipa role to manage roles

00:14:02,880 --> 00:14:08,320
and members these are users groups hosts

00:14:06,160 --> 00:14:11,519
host groups privileges and services i

00:14:08,320 --> 00:14:15,040
will show examples about this later on

00:14:11,519 --> 00:14:17,519
and we have ipa self-service

00:14:15,040 --> 00:14:20,160
to manage cell service and self-service

00:14:17,519 --> 00:14:20,160
attributes

00:14:20,800 --> 00:14:24,480
so here we see a simple example of

00:14:22,959 --> 00:14:25,680
either location apple location is a

00:14:24,480 --> 00:14:28,720
fairly small module

00:14:25,680 --> 00:14:29,600
it cannot do really a lot so it simply

00:14:28,720 --> 00:14:32,480
makes sure

00:14:29,600 --> 00:14:33,440
that a location with the name my

00:14:32,480 --> 00:14:35,040
location one

00:14:33,440 --> 00:14:38,160
and the description my location one

00:14:35,040 --> 00:14:41,600
exists it cannot do a lot more

00:14:38,160 --> 00:14:45,440
it can also remove locations but

00:14:41,600 --> 00:14:46,880
the the only um the only thing it can do

00:14:45,440 --> 00:14:48,880
is adding and

00:14:46,880 --> 00:14:51,519
making sure that locations are present

00:14:48,880 --> 00:14:51,519
or absent

00:14:51,839 --> 00:14:58,160
so we're coming to trust ipa trust

00:14:56,839 --> 00:15:00,800
module

00:14:58,160 --> 00:15:01,600
so the first example is making sure that

00:15:00,800 --> 00:15:04,800
a one-way

00:15:01,600 --> 00:15:08,560
trust is present

00:15:04,800 --> 00:15:10,800
and um yeah i cannot

00:15:08,560 --> 00:15:12,079
even show an example for this if i want

00:15:10,800 --> 00:15:15,440
to because i do not

00:15:12,079 --> 00:15:16,959
currently have a windows machine that i

00:15:15,440 --> 00:15:20,240
can use

00:15:16,959 --> 00:15:20,240
sad trust for this

00:15:21,279 --> 00:15:27,040
and the second one is making sure that a

00:15:24,399 --> 00:15:30,079
two-way trust is existing so you see

00:15:27,040 --> 00:15:33,120
there's the additional two-way

00:15:30,079 --> 00:15:33,120
setting set to true

00:15:33,199 --> 00:15:38,839
it should be yes not true but both are

00:15:36,480 --> 00:15:41,440
working

00:15:38,839 --> 00:15:44,639
and so we're coming to

00:15:41,440 --> 00:15:44,639
the object modules

00:15:46,880 --> 00:15:50,240
so there is the hyperdelegation module

00:15:49,519 --> 00:15:52,800
um

00:15:50,240 --> 00:15:55,120
so in the first example you see it's

00:15:52,800 --> 00:15:57,120
ensuring that the delegation is present

00:15:55,120 --> 00:15:58,720
with the attributes business category

00:15:57,120 --> 00:16:00,720
and employee type

00:15:58,720 --> 00:16:03,360
and group managers and member group

00:16:00,720 --> 00:16:03,360
employees

00:16:03,759 --> 00:16:06,880
and the second example shows that you

00:16:06,000 --> 00:16:10,560
can

00:16:06,880 --> 00:16:12,880
and add attribute or make sure that

00:16:10,560 --> 00:16:15,040
attributes are present or absent with

00:16:12,880 --> 00:16:18,720
the action member

00:16:15,040 --> 00:16:19,360
so um here in this in this example you

00:16:18,720 --> 00:16:22,399
see

00:16:19,360 --> 00:16:23,920
it's making this task is making sure

00:16:22,399 --> 00:16:27,519
that employee type and

00:16:23,920 --> 00:16:30,560
employee number are absent for this

00:16:27,519 --> 00:16:34,079
um delegation

00:16:30,560 --> 00:16:36,560
with the name basic manager attributes

00:16:34,079 --> 00:16:39,040
you can also use present to make sure

00:16:36,560 --> 00:16:41,680
that attributes are present

00:16:39,040 --> 00:16:43,680
um and also you can remove delegation

00:16:41,680 --> 00:16:46,560
modules and you can

00:16:43,680 --> 00:16:47,839
or make sure that they're not existing

00:16:46,560 --> 00:16:52,240
and you can

00:16:47,839 --> 00:16:54,959
also um change groups and member groups

00:16:52,240 --> 00:16:54,959
with a task

00:16:56,480 --> 00:17:00,480
so the second one is hyper permission

00:16:58,560 --> 00:17:02,639
module

00:17:00,480 --> 00:17:03,680
so the first example ensures that the

00:17:02,639 --> 00:17:06,559
permission

00:17:03,680 --> 00:17:08,480
my permission is present with object

00:17:06,559 --> 00:17:11,520
type host

00:17:08,480 --> 00:17:14,559
and all rights and the name of this

00:17:11,520 --> 00:17:18,000
permission is my permission

00:17:14,559 --> 00:17:19,600
and in the second example you see you

00:17:18,000 --> 00:17:21,360
can also use action member for

00:17:19,600 --> 00:17:24,880
attributes here

00:17:21,360 --> 00:17:28,240
so it's making sure that geekos

00:17:24,880 --> 00:17:32,880
um is present in in

00:17:28,240 --> 00:17:35,200
my permission you can also use um

00:17:32,880 --> 00:17:38,960
state absent here to make sure that an

00:17:35,200 --> 00:17:38,960
attribute is absent in a permission

00:17:42,080 --> 00:17:47,840
so we're coming to ipad privilege module

00:17:48,960 --> 00:17:55,200
so the first example shows how to make

00:17:52,480 --> 00:17:58,400
sure that a privilege is present

00:17:55,200 --> 00:17:59,280
so it creates a privilege broad

00:17:58,400 --> 00:18:01,840
privilege

00:17:59,280 --> 00:18:03,679
with the description with the same as

00:18:01,840 --> 00:18:06,400
description

00:18:03,679 --> 00:18:08,960
um in the second part you see you can

00:18:06,400 --> 00:18:12,960
also use action member here

00:18:08,960 --> 00:18:16,000
to add permissions so this example makes

00:18:12,960 --> 00:18:18,799
sure that right ipa configuration

00:18:16,000 --> 00:18:19,360
system right dns configuration and

00:18:18,799 --> 00:18:23,039
system

00:18:19,360 --> 00:18:26,799
update dns and entries is present

00:18:23,039 --> 00:18:30,400
for this permission and additionally

00:18:26,799 --> 00:18:32,720
as before as for all modules

00:18:30,400 --> 00:18:33,520
you can use state absent also with

00:18:32,720 --> 00:18:36,000
action member

00:18:33,520 --> 00:18:38,240
to make sure that permissions are not

00:18:36,000 --> 00:18:38,240
there

00:18:41,280 --> 00:18:47,120
and we are coming to ipad roll module

00:18:45,039 --> 00:18:48,559
there's a little bit more than the

00:18:47,120 --> 00:18:52,799
others

00:18:48,559 --> 00:18:55,760
um so in the first example you see

00:18:52,799 --> 00:18:56,080
um it's ensuring that a role is present

00:18:55,760 --> 00:18:59,679
with

00:18:56,080 --> 00:19:03,039
all members so you see here a

00:18:59,679 --> 00:19:05,600
role with the name same rule there's

00:19:03,039 --> 00:19:06,400
with the user pinky with the group group

00:19:05,600 --> 00:19:09,440
zero one

00:19:06,400 --> 00:19:12,240
with a host host o1 example column

00:19:09,440 --> 00:19:14,400
with a host group and with two

00:19:12,240 --> 00:19:16,880
privileges group administrators and user

00:19:14,400 --> 00:19:20,160
administrators and a service service

00:19:16,880 --> 00:19:23,200
zero one um

00:19:20,160 --> 00:19:24,080
all parameters user group host host

00:19:23,200 --> 00:19:27,840
group privilege

00:19:24,080 --> 00:19:29,600
and service can be treated with action

00:19:27,840 --> 00:19:33,120
member

00:19:29,600 --> 00:19:36,240
that means you are you can

00:19:33,120 --> 00:19:38,880
ensure that a user

00:19:36,240 --> 00:19:39,520
group hosts host privilege or service is

00:19:38,880 --> 00:19:43,039
present

00:19:39,520 --> 00:19:45,280
within a role or absent so you see two

00:19:43,039 --> 00:19:48,160
examples for this on the right side

00:19:45,280 --> 00:19:49,520
so the first example make sure that the

00:19:48,160 --> 00:19:53,360
user pinky

00:19:49,520 --> 00:19:55,679
exists in this role

00:19:53,360 --> 00:19:58,799
and in the second one you see that the

00:19:55,679 --> 00:19:58,799
service server one

00:19:58,880 --> 00:20:02,640
exists make sure that the service server

00:20:01,600 --> 00:20:05,679
one exists in

00:20:02,640 --> 00:20:08,720
in this role you can also

00:20:05,679 --> 00:20:11,679
use state absent here

00:20:08,720 --> 00:20:11,679
to make sure that

00:20:11,840 --> 00:20:15,360
um users groups hosts host group

00:20:13,919 --> 00:20:21,840
privileges or services

00:20:15,360 --> 00:20:21,840
are absent within a row

00:20:22,240 --> 00:20:27,840
so and finally we have the ipad service

00:20:25,440 --> 00:20:27,840
module

00:20:28,159 --> 00:20:32,720
so here a self-service users can manage

00:20:30,720 --> 00:20:35,280
their own details

00:20:32,720 --> 00:20:37,520
will be created or will be ensured that

00:20:35,280 --> 00:20:40,080
it exists

00:20:37,520 --> 00:20:40,799
with permission white right and

00:20:40,080 --> 00:20:46,640
attributes

00:20:40,799 --> 00:20:50,000
title and initials in the second example

00:20:46,640 --> 00:20:51,360
you see um action member again with the

00:20:50,000 --> 00:20:54,080
attribute here

00:20:51,360 --> 00:20:55,280
so this makes sure that the initials is

00:20:54,080 --> 00:20:58,720
really present

00:20:55,280 --> 00:21:02,080
in this sub service

00:20:58,720 --> 00:21:04,159
um you can also use state absent here to

00:21:02,080 --> 00:21:07,200
make sure that attributes are

00:21:04,159 --> 00:21:10,799
not present not

00:21:07,200 --> 00:21:10,799
not present within a such service

00:21:11,039 --> 00:21:17,520
i think we are fast so

00:21:14,400 --> 00:21:20,960
we are coming to utilities

00:21:17,520 --> 00:21:22,480
so um a nice utility has been added for

00:21:20,960 --> 00:21:26,159
ansible free ap

00:21:22,480 --> 00:21:28,559
um to make it easier for people to

00:21:26,159 --> 00:21:30,640
create new modules

00:21:28,559 --> 00:21:33,039
so this is called new module it's placed

00:21:30,640 --> 00:21:36,960
in utils subdirectory

00:21:33,039 --> 00:21:40,880
in github and also um in in

00:21:36,960 --> 00:21:43,760
the display in the releases

00:21:40,880 --> 00:21:44,799
it needs a module name of the module you

00:21:43,760 --> 00:21:49,440
want to create

00:21:44,799 --> 00:21:49,440
your offer name and your email address

00:21:49,840 --> 00:21:54,960
it has three options

00:21:53,120 --> 00:21:57,360
to create a module with member support

00:21:54,960 --> 00:22:00,559
so members as you have seen before

00:21:57,360 --> 00:22:06,320
with attributes used as groups and so on

00:22:00,559 --> 00:22:06,320
and to force the creation of this module

00:22:07,360 --> 00:22:12,240
this new module was used to create

00:22:09,760 --> 00:22:15,360
hyperlocation so hyperlocation was the

00:22:12,240 --> 00:22:17,520
testbed for this script

00:22:15,360 --> 00:22:20,960
and it automatically creates several

00:22:17,520 --> 00:22:23,760
directories and files for you

00:22:20,960 --> 00:22:24,720
that so far you needed to create on your

00:22:23,760 --> 00:22:28,000
own

00:22:24,720 --> 00:22:29,840
so it will create oh there's a modules

00:22:28,000 --> 00:22:32,240
directory missing it should be plugins

00:22:29,840 --> 00:22:35,600
modules i'm sorry

00:22:32,240 --> 00:22:39,039
plugins modules hyper module pi um

00:22:35,600 --> 00:22:40,640
it will also create um playbook example

00:22:39,039 --> 00:22:43,760
playbooks for your module and

00:22:40,640 --> 00:22:45,520
playbooks my module subdirectory

00:22:43,760 --> 00:22:47,679
so these are my module absent and

00:22:45,520 --> 00:22:48,240
present and you should add more than

00:22:47,679 --> 00:22:51,120
those

00:22:48,240 --> 00:22:52,320
so these are the basic ones um to make

00:22:51,120 --> 00:22:56,000
sure that

00:22:52,320 --> 00:22:59,120
the module is doing something

00:22:56,000 --> 00:23:02,799
um and it will also create

00:22:59,120 --> 00:23:06,000
the basic test so in tests my module it

00:23:02,799 --> 00:23:09,200
will create a file test my module yaml

00:23:06,000 --> 00:23:10,880
which also contains the absent and

00:23:09,200 --> 00:23:13,440
present

00:23:10,880 --> 00:23:15,679
examples with additional tests to make

00:23:13,440 --> 00:23:19,200
sure that they are item patterned

00:23:15,679 --> 00:23:22,400
so they will be executed once um

00:23:19,200 --> 00:23:25,039
with a expected result

00:23:22,400 --> 00:23:28,400
of changed and the second one it will be

00:23:25,039 --> 00:23:30,880
executed with a result of not changed

00:23:28,400 --> 00:23:32,559
and additionally it creates the readme

00:23:30,880 --> 00:23:36,480
my module yaml file

00:23:32,559 --> 00:23:39,600
so all these are skeletons and that you

00:23:36,480 --> 00:23:42,720
need to fill with life

00:23:39,600 --> 00:23:42,720
um so

00:23:43,279 --> 00:23:51,039
but it should give a good start to

00:23:45,679 --> 00:23:54,400
create new modules for hands for free ap

00:23:51,039 --> 00:23:58,320
so i think we have time for a small demo

00:23:54,400 --> 00:24:01,360
um of a backup role

00:23:58,320 --> 00:24:01,360
um let me

00:24:02,159 --> 00:24:05,840
change to this

00:24:08,000 --> 00:24:11,440
so here

00:24:12,880 --> 00:24:15,360
come on

00:24:17,760 --> 00:24:23,039
it's not doing what it should do so this

00:24:20,640 --> 00:24:27,039
is from a colleague of mine

00:24:23,039 --> 00:24:33,840
he created that let's start again

00:24:27,039 --> 00:24:33,840
from the beginning so

00:24:37,679 --> 00:24:41,440
so on the left side you see the

00:24:39,679 --> 00:24:42,640
controller on the right side you see

00:24:41,440 --> 00:24:45,760
he's logging into

00:24:42,640 --> 00:24:48,720
you know a little bit yes

00:24:45,760 --> 00:24:51,360
he's can you zoom it up it's not legible

00:24:48,720 --> 00:24:54,480
on the recording i think

00:24:51,360 --> 00:24:57,919
if you can't yeah perfect thank you

00:24:54,480 --> 00:24:57,919
yeah awesome is it better now

00:24:58,080 --> 00:25:02,400
okay should i start it from the

00:25:00,000 --> 00:25:02,400
beginning

00:25:02,960 --> 00:25:07,760
i think you can you have five minutes

00:25:05,360 --> 00:25:07,760
easily

00:25:08,880 --> 00:25:11,200
okay

00:25:11,919 --> 00:25:16,480
ah okay now so on the left side you see

00:25:14,799 --> 00:25:16,880
the controller on the right side you see

00:25:16,480 --> 00:25:19,440
this

00:25:16,880 --> 00:25:20,960
um he's logging into the server he's

00:25:19,440 --> 00:25:24,880
checking the ipad version

00:25:20,960 --> 00:25:29,039
so this is a fedora 32 so it's for 810

00:25:24,880 --> 00:25:32,080
and you also see it's fedora release 32

00:25:29,039 --> 00:25:33,760
he's looking into the invalid ipad

00:25:32,080 --> 00:25:35,760
backup directory and it's empty right

00:25:33,760 --> 00:25:38,799
now

00:25:35,760 --> 00:25:41,279
on the left side you see the

00:25:38,799 --> 00:25:42,400
backup yaml file so a backup to the

00:25:41,279 --> 00:25:44,320
controller

00:25:42,400 --> 00:25:45,520
keep on the server is no this is the

00:25:44,320 --> 00:25:48,720
default

00:25:45,520 --> 00:25:50,640
ipad backup data so you can limit also

00:25:48,720 --> 00:25:52,240
if it's a full backup or not a full

00:25:50,640 --> 00:25:54,080
backup

00:25:52,240 --> 00:25:55,600
and in this case he's only doing the

00:25:54,080 --> 00:26:00,320
database

00:25:55,600 --> 00:26:00,880
so um ansible for ap is running now you

00:26:00,320 --> 00:26:04,000
see

00:26:00,880 --> 00:26:06,240
um it's trying to find out

00:26:04,000 --> 00:26:07,520
what kind of machine it is um

00:26:06,240 --> 00:26:10,240
information

00:26:07,520 --> 00:26:11,919
to get the backup directory from ipa

00:26:10,240 --> 00:26:14,960
platform

00:26:11,919 --> 00:26:18,320
from the installed ipad

00:26:14,960 --> 00:26:22,320
distribution release

00:26:18,320 --> 00:26:22,320
so that was a little bit fast

00:26:22,880 --> 00:26:26,240
at first it was copying the backup from

00:26:25,039 --> 00:26:28,799
the server you see

00:26:26,240 --> 00:26:30,400
in on top still and it removed the

00:26:28,799 --> 00:26:32,240
backup from the server

00:26:30,400 --> 00:26:34,799
and on the right side you see there is

00:26:32,240 --> 00:26:34,799
no backup

00:26:36,840 --> 00:26:46,559
and still ipa is working

00:26:42,159 --> 00:26:50,159
he is removing pseudo command

00:26:46,559 --> 00:26:53,279
um a pseudo command um to show

00:26:50,159 --> 00:26:57,360
that if he is replying the backup

00:26:53,279 --> 00:27:00,720
it will be back so right now you see

00:26:57,360 --> 00:27:04,880
he is replacing the backup name

00:27:00,720 --> 00:27:06,880
in in the restore yaml file

00:27:04,880 --> 00:27:08,000
so you see backup from controller yes

00:27:06,880 --> 00:27:10,559
keep on server no

00:27:08,000 --> 00:27:12,400
this is not needed in this case backup

00:27:10,559 --> 00:27:21,600
data yes and no locks

00:27:12,400 --> 00:27:23,919
yes and now he is restoring at first

00:27:21,600 --> 00:27:25,200
you see the backup has been copied to

00:27:23,919 --> 00:27:28,240
the server

00:27:25,200 --> 00:27:31,679
um and it is

00:27:28,240 --> 00:27:33,679
a plot it's applied now

00:27:31,679 --> 00:27:36,480
this normally takes some time so it's

00:27:33,679 --> 00:27:38,960
better to have it in edema

00:27:36,480 --> 00:27:40,080
and it was also ensuring that the

00:27:38,960 --> 00:27:43,200
firewall is running

00:27:40,080 --> 00:27:49,840
and the firewall is configured properly

00:27:43,200 --> 00:27:49,840
now it's restoring the backup

00:27:51,200 --> 00:27:54,640
and it's done so on the right side you

00:27:54,080 --> 00:27:58,720
see

00:27:54,640 --> 00:28:01,279
the formerly removed to the command

00:27:58,720 --> 00:28:03,840
what it exists again so the backup was

00:28:01,279 --> 00:28:03,840
working

00:28:07,360 --> 00:28:14,840
so for all the roles

00:28:11,120 --> 00:28:16,640
and the modules we have the whole

00:28:14,840 --> 00:28:19,840
documentation

00:28:16,640 --> 00:28:23,760
on an ansible free ap

00:28:19,840 --> 00:28:23,760
github source repository

00:28:23,919 --> 00:28:27,840
you can start directly there there is

00:28:26,399 --> 00:28:28,799
the whole documentation of all

00:28:27,840 --> 00:28:32,000
parameters

00:28:28,799 --> 00:28:34,320
there are lots of examples um if you

00:28:32,000 --> 00:28:36,000
look into the test subfolder you will

00:28:34,320 --> 00:28:37,919
see all the tests that we are running

00:28:36,000 --> 00:28:40,559
upstream

00:28:37,919 --> 00:28:42,399
to do the tests so these are item

00:28:40,559 --> 00:28:45,039
potency tests

00:28:42,399 --> 00:28:45,679
if you have an issue um please go to

00:28:45,039 --> 00:28:48,480
issues

00:28:45,679 --> 00:28:50,399
on this github repository and if you

00:28:48,480 --> 00:28:54,399
want to contact us on irc

00:28:50,399 --> 00:28:57,120
there is a free ipa channel on freenode

00:28:54,399 --> 00:29:00,799
this can this is also used for ansible

00:28:57,120 --> 00:29:04,080
free api not only for free ipa

00:29:00,799 --> 00:29:04,080
so do you have questions

00:29:04,159 --> 00:29:07,520
okay so we have one question in the chat

00:29:06,240 --> 00:29:10,799
a qa section

00:29:07,520 --> 00:29:13,039
um is ipa admin password clear text

00:29:10,799 --> 00:29:18,799
password for admin

00:29:13,039 --> 00:29:20,559
um no you don't need to have it clear

00:29:18,799 --> 00:29:21,840
this is only here in the example so that

00:29:20,559 --> 00:29:24,880
you see it you can use

00:29:21,840 --> 00:29:28,640
ansible vault for this but you can also

00:29:24,880 --> 00:29:28,640
use gss api for that

00:29:29,360 --> 00:29:32,559
there is an example for the gss api

00:29:31,520 --> 00:29:34,480
usage in

00:29:32,559 --> 00:29:36,080
in the documentation in answer free ap

00:29:34,480 --> 00:29:39,200
out stream

00:29:36,080 --> 00:29:41,279
and also one for volts usage with

00:29:39,200 --> 00:29:44,640
deployment

00:29:41,279 --> 00:29:47,200
in the client and replica role as far as

00:29:44,640 --> 00:29:47,200
i remember

00:29:47,440 --> 00:29:50,880
it's only here to make sure yeah you

00:29:49,919 --> 00:29:54,240
need to

00:29:50,880 --> 00:29:57,039
to provide this setting somehow but it's

00:29:54,240 --> 00:29:57,039
up to you how

00:29:57,679 --> 00:30:02,080
yes uh so the attendee i think missed

00:29:59,919 --> 00:30:03,919
some initial slides uh

00:30:02,080 --> 00:30:05,520
which ipa version these modules are

00:30:03,919 --> 00:30:09,440
compatible with uh

00:30:05,520 --> 00:30:12,480
right from the initial one so

00:30:09,440 --> 00:30:14,720
we are making sure as written here

00:30:12,480 --> 00:30:16,080
that all management modules are working

00:30:14,720 --> 00:30:22,320
with ipa 4

00:30:16,080 --> 00:30:26,000
4.4 plus this

00:30:22,320 --> 00:30:28,159
is a real seven early real set um yeah

00:30:26,000 --> 00:30:31,840
earlier well seven

00:30:28,159 --> 00:30:33,760
so real seven is now at force for six i

00:30:31,840 --> 00:30:36,799
think

00:30:33,760 --> 00:30:40,880
um in the latest versions there in

00:30:36,799 --> 00:30:44,399
real eight we have four eight

00:30:40,880 --> 00:30:47,600
so um and also in fedora we have four

00:30:44,399 --> 00:30:51,840
eight now so

00:30:47,600 --> 00:30:51,840
for nine i'm sorry um

00:30:52,799 --> 00:30:59,440
so um we cannot support ipa

00:30:56,480 --> 00:30:59,919
prior to 4.4 because there was a big api

00:30:59,440 --> 00:31:03,600
change

00:30:59,919 --> 00:31:06,080
in a in ipa i don't see any other

00:31:03,600 --> 00:31:06,080
questions

00:31:06,799 --> 00:31:12,960
okay i will give people more time

00:31:10,399 --> 00:31:14,399
opportunity to ask another question and

00:31:12,960 --> 00:31:18,240
i will ask my own

00:31:14,399 --> 00:31:20,559
so if i install free power

00:31:18,240 --> 00:31:22,080
am i supposed to then configure

00:31:20,559 --> 00:31:24,320
everything through ansible

00:31:22,080 --> 00:31:26,640
and is it possible or do i still have to

00:31:24,320 --> 00:31:29,120
edit some configuration files on the

00:31:26,640 --> 00:31:29,120
machine

00:31:30,840 --> 00:31:35,360
manually

00:31:32,480 --> 00:31:36,799
this depends heavily on what you need to

00:31:35,360 --> 00:31:40,000
configure

00:31:36,799 --> 00:31:43,120
so um if

00:31:40,000 --> 00:31:45,919
so the normal deployment this whole

00:31:43,120 --> 00:31:46,399
is completely can you can completely

00:31:45,919 --> 00:31:48,559
done

00:31:46,399 --> 00:31:50,720
can completely be done with the

00:31:48,559 --> 00:31:52,720
deployment roles in enzo free apa they

00:31:50,720 --> 00:31:55,600
support all parameters

00:31:52,720 --> 00:31:58,559
that are also um available on the

00:31:55,600 --> 00:31:58,559
command line clients

00:31:58,640 --> 00:32:05,519
for management um you see

00:32:02,080 --> 00:32:08,480
we have already a longer list

00:32:05,519 --> 00:32:10,960
of modules but we are still missing some

00:32:08,480 --> 00:32:13,679
so there are lots of ipa commands

00:32:10,960 --> 00:32:14,799
and we are still adding management

00:32:13,679 --> 00:32:18,640
modules

00:32:14,799 --> 00:32:21,279
so the list is not complete yet

00:32:18,640 --> 00:32:21,919
but you see we already have a long list

00:32:21,279 --> 00:32:24,080
but

00:32:21,919 --> 00:32:25,360
you most likely find something that is

00:32:24,080 --> 00:32:28,640
not there yet

00:32:25,360 --> 00:32:30,000
and you can use ansible free ap in the

00:32:28,640 --> 00:32:32,559
normal commands

00:32:30,000 --> 00:32:33,360
you can mix them for for for the

00:32:32,559 --> 00:32:36,640
management

00:32:33,360 --> 00:32:41,039
this is no problem um

00:32:36,640 --> 00:32:44,960
all the modules are using um

00:32:41,039 --> 00:32:47,200
the um and the free ipa api

00:32:44,960 --> 00:32:49,760
so they're not implementing things

00:32:47,200 --> 00:32:49,760
differently

00:32:51,039 --> 00:32:59,039
um not so much a question more of a

00:32:54,159 --> 00:33:02,080
caveat so uh we've been using the

00:32:59,039 --> 00:33:03,840
ansible free ipa uh roles in federal

00:33:02,080 --> 00:33:08,080
infrastructure

00:33:03,840 --> 00:33:09,279
and we've found

00:33:08,080 --> 00:33:11,140
that there's a good way to shoot

00:33:09,279 --> 00:33:12,320
yourself in the foot if you um

00:33:11,140 --> 00:33:15,279
[Music]

00:33:12,320 --> 00:33:16,000
like structure structure the logic

00:33:15,279 --> 00:33:19,200
around the

00:33:16,000 --> 00:33:22,159
the clients connected to the ipa server

00:33:19,200 --> 00:33:23,360
because if you then have a an ipa client

00:33:22,159 --> 00:33:25,120
role and they all

00:33:23,360 --> 00:33:27,440
attempt the same thing on the ipay

00:33:25,120 --> 00:33:29,279
server like you delegate that to the ipa

00:33:27,440 --> 00:33:31,600
server to

00:33:29,279 --> 00:33:33,039
ensure that a certain host group user

00:33:31,600 --> 00:33:34,720
group whatever exists so

00:33:33,039 --> 00:33:36,720
something they will step on each other's

00:33:34,720 --> 00:33:39,919
toes uh toes

00:33:36,720 --> 00:33:42,880
like there's a race condition in there

00:33:39,919 --> 00:33:45,039
and um so it's probably better to

00:33:42,880 --> 00:33:47,600
structure it from the server

00:33:45,039 --> 00:33:49,519
view like collect the information you

00:33:47,600 --> 00:33:51,440
have about all the clients

00:33:49,519 --> 00:33:52,640
that need to be connected all the users

00:33:51,440 --> 00:33:55,200
and stuff

00:33:52,640 --> 00:33:56,080
and then execute it all in one go

00:33:55,200 --> 00:33:59,840
because then

00:33:56,080 --> 00:33:59,840
you won't have these these issues

00:34:01,440 --> 00:34:04,640
um okay

00:34:05,039 --> 00:34:08,560
so you use several clients too like we

00:34:07,600 --> 00:34:11,520
we have

00:34:08,560 --> 00:34:12,399
many nodes that um hook up with the ipa

00:34:11,520 --> 00:34:15,599
server for

00:34:12,399 --> 00:34:19,359
identity management and

00:34:15,599 --> 00:34:21,119
um we have rules for

00:34:19,359 --> 00:34:22,399
who's allowed to even log into the

00:34:21,119 --> 00:34:24,960
machine

00:34:22,399 --> 00:34:26,079
uh who's allowed to use sudo to become

00:34:24,960 --> 00:34:28,879
roots stuff like that

00:34:26,079 --> 00:34:30,000
and for that we use the hbac and sudo

00:34:28,879 --> 00:34:34,240
rules

00:34:30,000 --> 00:34:37,119
and if we

00:34:34,240 --> 00:34:38,639
hook that up with with the client node

00:34:37,119 --> 00:34:40,399
in question

00:34:38,639 --> 00:34:41,760
all of these will be executed in

00:34:40,399 --> 00:34:44,720
parallel across

00:34:41,760 --> 00:34:45,280
the uh the whole set of ansible holes

00:34:44,720 --> 00:34:48,639
and then

00:34:45,280 --> 00:34:51,760
if you touch the same

00:34:48,639 --> 00:34:54,240
pseudo rule or h back rule like ensure

00:34:51,760 --> 00:34:57,760
that it's present or that some host is

00:34:54,240 --> 00:35:02,079
in it then the same ipa commands will be

00:34:57,760 --> 00:35:04,800
executed touching the same ipa

00:35:02,079 --> 00:35:05,680
objects at roughly the same time and

00:35:04,800 --> 00:35:09,520
this will

00:35:05,680 --> 00:35:12,880
lead to yeah um

00:35:09,520 --> 00:35:16,000
a small question here um how

00:35:12,880 --> 00:35:17,280
how have you used ansible free ap on for

00:35:16,000 --> 00:35:19,440
management

00:35:17,280 --> 00:35:20,880
so you use management modules like it's

00:35:19,440 --> 00:35:24,320
um

00:35:20,880 --> 00:35:27,359
we have a role ipa client

00:35:24,320 --> 00:35:30,400
that just says okay this host is a

00:35:27,359 --> 00:35:32,640
client host to the ipa server

00:35:30,400 --> 00:35:34,160
identity management is done by the by

00:35:32,640 --> 00:35:37,920
the ipa server

00:35:34,160 --> 00:35:41,359
um then when we have uh

00:35:37,920 --> 00:35:43,440
cluster-wide rules like uh this group is

00:35:41,359 --> 00:35:44,720
like the sysadmin group is allowed to do

00:35:43,440 --> 00:35:47,599
anything anywhere

00:35:44,720 --> 00:35:48,240
stuff like that and if if you have have

00:35:47,599 --> 00:35:51,040
these

00:35:48,240 --> 00:35:51,520
things that have affect multiple hosts

00:35:51,040 --> 00:35:54,240
but

00:35:51,520 --> 00:35:54,720
hooked up logically with the client side

00:35:54,240 --> 00:35:57,280
then

00:35:54,720 --> 00:35:58,000
um like you have you have a certain

00:35:57,280 --> 00:36:00,079
group of clients

00:35:58,000 --> 00:36:01,200
that you run your playbook on and all of

00:36:00,079 --> 00:36:05,200
them will try

00:36:01,200 --> 00:36:09,280
to then execute the same ipa

00:36:05,200 --> 00:36:11,200
hbac rule or ipa sudo rule statement

00:36:09,280 --> 00:36:13,680
in parallel and then step on each

00:36:11,200 --> 00:36:16,960
other's toes because

00:36:13,680 --> 00:36:19,839
one will one will uh

00:36:16,960 --> 00:36:21,680
say cr create the rule the other one

00:36:19,839 --> 00:36:23,520
will try to create the rule then fail

00:36:21,680 --> 00:36:27,839
because it already exists

00:36:23,520 --> 00:36:31,040
so um that's just a caveat uh to

00:36:27,839 --> 00:36:33,359
uh uh formulate

00:36:31,040 --> 00:36:34,960
your your uh ansible playbooks from from

00:36:33,359 --> 00:36:37,200
a server-side view

00:36:34,960 --> 00:36:38,880
because then then you you can you can

00:36:37,200 --> 00:36:41,680
just or collect oh

00:36:38,880 --> 00:36:42,320
these are the hosts in question these

00:36:41,680 --> 00:36:44,240
are the

00:36:42,320 --> 00:36:45,359
the rules that have to be applied for

00:36:44,240 --> 00:36:49,280
these hosts

00:36:45,359 --> 00:36:52,800
so that we can have the the correct

00:36:49,280 --> 00:36:54,079
access to people and services and stuff

00:36:52,800 --> 00:36:56,160
like that

00:36:54,079 --> 00:36:57,920
because then then everything will be

00:36:56,160 --> 00:37:01,760
done in order

00:36:57,920 --> 00:37:03,200
and um not step or step on

00:37:01,760 --> 00:37:05,680
like you won't have these race

00:37:03,200 --> 00:37:05,680
conditions

00:37:07,440 --> 00:37:11,359
okay but this is that there are two

00:37:09,200 --> 00:37:14,480
things here so this is a

00:37:11,359 --> 00:37:18,720
general ipa thing so this is not yeah

00:37:14,480 --> 00:37:20,560
of course of course it's cpa wow

00:37:18,720 --> 00:37:22,320
is only helping with this because it's

00:37:20,560 --> 00:37:24,640
doing this or it's

00:37:22,320 --> 00:37:27,040
it's trying to execute it on all hosts

00:37:24,640 --> 00:37:30,079
at the same time

00:37:27,040 --> 00:37:33,760
um but um there is one question

00:37:30,079 --> 00:37:36,640
um right now ansible free ap

00:37:33,760 --> 00:37:36,960
management modules are not able to be

00:37:36,640 --> 00:37:39,680
run

00:37:36,960 --> 00:37:42,240
on yes view machines but they're they're

00:37:39,680 --> 00:37:45,599
run in the context of the client machine

00:37:42,240 --> 00:37:46,320
like the ansible ansible yeah uh ansible

00:37:45,599 --> 00:37:50,160
playbook

00:37:46,320 --> 00:37:53,119
um the the uh the command

00:37:50,160 --> 00:37:54,000
execute has a couple of hosts in in the

00:37:53,119 --> 00:37:57,359
play

00:37:54,000 --> 00:38:00,480
at that point and it will

00:37:57,359 --> 00:38:03,680
want to uh execute the task on behalf

00:38:00,480 --> 00:38:06,560
of these hosts all at the same time

00:38:03,680 --> 00:38:07,200
so at first we uh we we helped ourselves

00:38:06,560 --> 00:38:10,800
with just

00:38:07,200 --> 00:38:11,119
um throttling this to one which works

00:38:10,800 --> 00:38:14,560
but

00:38:11,119 --> 00:38:17,599
is super slow and then we then we

00:38:14,560 --> 00:38:19,760
had to restructure it so that there is

00:38:17,599 --> 00:38:22,400
that that we had a decent performance

00:38:19,760 --> 00:38:25,599
but because we're talking about

00:38:22,400 --> 00:38:29,359
somewhat up of 200 hosts which could be

00:38:25,599 --> 00:38:29,359
if you do a main playbook run or

00:38:29,720 --> 00:38:32,720

YouTube URL: https://www.youtube.com/watch?v=TskvWU8OMlY


