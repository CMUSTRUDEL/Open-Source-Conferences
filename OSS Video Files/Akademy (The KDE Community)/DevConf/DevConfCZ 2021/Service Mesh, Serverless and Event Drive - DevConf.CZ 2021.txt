Title: Service Mesh, Serverless and Event Drive - DevConf.CZ 2021
Publication date: 2021-03-17
Playlist: DevConfCZ 2021
Description: 
	Speaker: Langdon White


Event Driven Architecture (EDA) is the formal name for things like Serverless and Service Meshes. Have you seen all the hype about it? Wondering whether you care? Well, this talk will walk through why an EDA is so interesting via demos of a live system.

We will also touch on the numerous upstream projects that deliver on this funcationality. Examples include Istio, Knative, Kiali, Jaeger all of which will be briefly covered but, importantly, also demo'd. 


Schedule: https://sched.co/gmMb
Captions: 
	00:00:01,120 --> 00:00:04,000
hello everyone uh yes there will be

00:00:03,280 --> 00:00:07,200
dwarves

00:00:04,000 --> 00:00:10,800
uh no not yet unfortunately i uh

00:00:07,200 --> 00:00:14,080
uh as uh mo duffy says in the chat um

00:00:10,800 --> 00:00:16,960
there is in progress a uh coloring book

00:00:14,080 --> 00:00:17,600
for a venture of an architecture from

00:00:16,960 --> 00:00:20,080
red hat

00:00:17,600 --> 00:00:20,640
and i've been participating a little bit

00:00:20,080 --> 00:00:22,960
in it

00:00:20,640 --> 00:00:24,080
obviously not in the art or in the

00:00:22,960 --> 00:00:26,560
content

00:00:24,080 --> 00:00:27,760
just in the uh kind of technical review

00:00:26,560 --> 00:00:29,840
uh smarter

00:00:27,760 --> 00:00:32,000
and more talented people than i are

00:00:29,840 --> 00:00:33,920
working on the the actual drawings and

00:00:32,000 --> 00:00:36,960
the content

00:00:33,920 --> 00:00:39,920
so this talk excuse me

00:00:36,960 --> 00:00:41,440
so this talk is about uh event-driven

00:00:39,920 --> 00:00:45,920
architecture

00:00:41,440 --> 00:00:48,399
and the way and then i realized i messed

00:00:45,920 --> 00:00:51,440
with the colors yesterday and so

00:00:48,399 --> 00:00:52,800
uh later on uh there may be some uh

00:00:51,440 --> 00:00:55,520
challenges for someone who

00:00:52,800 --> 00:00:57,120
is blue green colorblind which didn't

00:00:55,520 --> 00:00:58,000
occur to me and i don't have that

00:00:57,120 --> 00:01:00,640
affliction so

00:00:58,000 --> 00:01:01,359
i uh apologize in advance if you can't

00:01:00,640 --> 00:01:04,799
read it

00:01:01,359 --> 00:01:05,439
um but uh hopefully my pointing around

00:01:04,799 --> 00:01:08,320
will uh

00:01:05,439 --> 00:01:10,159
will help the uh solution or will help

00:01:08,320 --> 00:01:13,200
understand what the picture is

00:01:10,159 --> 00:01:14,960
um so event driven architecture under

00:01:13,200 --> 00:01:16,640
mostly the name like serverless and

00:01:14,960 --> 00:01:18,479
service mesh um

00:01:16,640 --> 00:01:19,840
and those are the two that kind of come

00:01:18,479 --> 00:01:21,600
to mind most quickly

00:01:19,840 --> 00:01:23,040
um has actually been around for a really

00:01:21,600 --> 00:01:25,439
long time um

00:01:23,040 --> 00:01:26,799
there's been uh it's kind of funny if

00:01:25,439 --> 00:01:29,600
you go back to

00:01:26,799 --> 00:01:30,640
uh old school microsoft development um

00:01:29,600 --> 00:01:33,439
into what's called

00:01:30,640 --> 00:01:34,240
com which was the component object model

00:01:33,439 --> 00:01:35,680
um

00:01:34,240 --> 00:01:37,280
it was actually an event-driven

00:01:35,680 --> 00:01:39,200
architecture the way it worked

00:01:37,280 --> 00:01:40,479
uh basically you had a thread that was

00:01:39,200 --> 00:01:42,720
kind of sitting around

00:01:40,479 --> 00:01:44,079
and it would pick up events and then

00:01:42,720 --> 00:01:45,360
respond to them and that was kind of how

00:01:44,079 --> 00:01:48,960
windows worked

00:01:45,360 --> 00:01:52,000
then they expanded it to be distributed

00:01:48,960 --> 00:01:55,040
uh with the brilliantly named dcom

00:01:52,000 --> 00:01:58,640
which was distributed com and

00:01:55,040 --> 00:02:00,960
uh uh was gonna say so uh

00:01:58,640 --> 00:02:03,040
except that distributed only meant

00:02:00,960 --> 00:02:05,040
within a windows network uh so that

00:02:03,040 --> 00:02:08,720
wasn't exactly terribly useful

00:02:05,040 --> 00:02:10,800
um for a lot of scenarios so uh

00:02:08,720 --> 00:02:12,560
actually way back in the day a friend of

00:02:10,800 --> 00:02:16,400
mine and i uh actually built

00:02:12,560 --> 00:02:18,800
a um dcom over http uh transport layer

00:02:16,400 --> 00:02:19,599
uh so that you could still use dcom uh

00:02:18,800 --> 00:02:20,879
in

00:02:19,599 --> 00:02:22,480
you know if you were a microsoft

00:02:20,879 --> 00:02:24,000
developer and you had all these tools

00:02:22,480 --> 00:02:25,280
like things like visual basic and the

00:02:24,000 --> 00:02:27,200
visual studio

00:02:25,280 --> 00:02:28,879
environment and they would still work

00:02:27,200 --> 00:02:32,080
but over http

00:02:28,879 --> 00:02:33,440
so uh yeah so keep in mind event driven

00:02:32,080 --> 00:02:34,800
architecture has been around for a very

00:02:33,440 --> 00:02:36,640
long time

00:02:34,800 --> 00:02:37,840
and we're going to talk about how it

00:02:36,640 --> 00:02:40,720
works uh

00:02:37,840 --> 00:02:42,480
mostly like today and then i'm going to

00:02:40,720 --> 00:02:44,400
try to show you some

00:02:42,480 --> 00:02:46,480
demonstrations of how it works and where

00:02:44,400 --> 00:02:48,560
it kind of fits um

00:02:46,480 --> 00:02:49,920
it's a difficult thing to demonstrate i

00:02:48,560 --> 00:02:52,480
don't know if you saw the keynote that

00:02:49,920 --> 00:02:54,560
we did a little while ago

00:02:52,480 --> 00:02:56,879
but there's not even great tools out

00:02:54,560 --> 00:02:57,280
there to kind of understand what's going

00:02:56,879 --> 00:03:00,159
on

00:02:57,280 --> 00:03:02,080
in a you know kind of a microservices

00:03:00,159 --> 00:03:04,000
architecture

00:03:02,080 --> 00:03:05,519
except like one of the code smells that

00:03:04,000 --> 00:03:07,360
was discussed for example

00:03:05,519 --> 00:03:09,280
was kind of the reduction in the use of

00:03:07,360 --> 00:03:12,319
something like a service bus

00:03:09,280 --> 00:03:13,599
um and you know the reason for that is

00:03:12,319 --> 00:03:16,159
because you want to kind of have

00:03:13,599 --> 00:03:17,680
events kind of going across uh the

00:03:16,159 --> 00:03:20,879
entire environment

00:03:17,680 --> 00:03:24,480
so that you don't have to be limited to

00:03:20,879 --> 00:03:27,519
um just the events coming across the bus

00:03:24,480 --> 00:03:29,120
so you end up with a kind of a very

00:03:27,519 --> 00:03:30,400
complex

00:03:29,120 --> 00:03:32,720
you know and somewhat difficult to

00:03:30,400 --> 00:03:35,920
understand environments

00:03:32,720 --> 00:03:38,000
and so there's a lot of rapid work

00:03:35,920 --> 00:03:40,640
going on to try to help people visualize

00:03:38,000 --> 00:03:42,720
it and understand what's going on

00:03:40,640 --> 00:03:44,640
and you know hopefully we'll get there

00:03:42,720 --> 00:03:46,319
sooner rather than later

00:03:44,640 --> 00:03:48,000
but we're gonna show a little bit of of

00:03:46,319 --> 00:03:50,400
some of that tool chain as well

00:03:48,000 --> 00:03:51,680
um and uh you know my timing is a little

00:03:50,400 --> 00:03:52,799
off i was expecting this to be a little

00:03:51,680 --> 00:03:54,640
bit longer talk

00:03:52,799 --> 00:03:56,080
uh so hopefully i'll be able to kind of

00:03:54,640 --> 00:03:57,360
fit everything in and leave some time

00:03:56,080 --> 00:04:00,560
for some questions

00:03:57,360 --> 00:04:02,000
um but long story short on this slide uh

00:04:00,560 --> 00:04:03,599
i wanted to point out that you know it's

00:04:02,000 --> 00:04:05,519
been around for a long time uh

00:04:03,599 --> 00:04:07,040
sometimes it's gone under other names so

00:04:05,519 --> 00:04:08,080
i kind of mentioned common decom it

00:04:07,040 --> 00:04:09,439
wasn't really called

00:04:08,080 --> 00:04:11,360
event it was certainly what's called an

00:04:09,439 --> 00:04:12,959
event-driven architecture it was

00:04:11,360 --> 00:04:16,320
referred to as events

00:04:12,959 --> 00:04:18,000
um and then uh you know things like uh

00:04:16,320 --> 00:04:18,639
service oriented architectures were

00:04:18,000 --> 00:04:21,919
really

00:04:18,639 --> 00:04:24,800
going in that direction uh corba also

00:04:21,919 --> 00:04:26,000
worked this way sort of um so kind of

00:04:24,800 --> 00:04:26,960
like we have a lot of things that are

00:04:26,000 --> 00:04:30,479
kind of around

00:04:26,960 --> 00:04:32,080
this problem and we really are starting

00:04:30,479 --> 00:04:33,600
to see it come to fruition

00:04:32,080 --> 00:04:35,199
uh you know there's there's not a whole

00:04:33,600 --> 00:04:36,479
lot of implementations out there like

00:04:35,199 --> 00:04:39,199
people who have it in

00:04:36,479 --> 00:04:40,320
active use but there are but the tool

00:04:39,199 --> 00:04:41,759
chains are there

00:04:40,320 --> 00:04:43,680
and it's starting to become pretty

00:04:41,759 --> 00:04:47,199
relevant um

00:04:43,680 --> 00:04:47,600
so uh just kind of i like to kind of

00:04:47,199 --> 00:04:50,240
give

00:04:47,600 --> 00:04:52,080
a broad example of uh something that has

00:04:50,240 --> 00:04:53,840
taken place that you know kind of

00:04:52,080 --> 00:04:56,080
illustrates whatever i i try to be

00:04:53,840 --> 00:04:58,960
talking about so

00:04:56,080 --> 00:05:00,800
uh and the time for a story once upon a

00:04:58,960 --> 00:05:01,520
time many years ago in my personal

00:05:00,800 --> 00:05:03,600
career

00:05:01,520 --> 00:05:04,880
obviously um all names will be held to

00:05:03,600 --> 00:05:07,919
protect the innocent

00:05:04,880 --> 00:05:09,520
um we had a project i was

00:05:07,919 --> 00:05:11,120
working as a software consultant at the

00:05:09,520 --> 00:05:15,039
time and we had a project

00:05:11,120 --> 00:05:18,479
where all our customer

00:05:15,039 --> 00:05:18,880
had a problem where their managers had

00:05:18,479 --> 00:05:20,320
to do

00:05:18,880 --> 00:05:22,800
all these different kinds of what were

00:05:20,320 --> 00:05:24,960
referred to as just approvals

00:05:22,800 --> 00:05:26,160
and if you're in a manager in basically

00:05:24,960 --> 00:05:28,160
any organization

00:05:26,160 --> 00:05:29,919
you probably have this experience right

00:05:28,160 --> 00:05:30,960
you have to approve you know vacation

00:05:29,919 --> 00:05:33,600
time you have to approve

00:05:30,960 --> 00:05:34,479
invoices you have to approve expenses um

00:05:33,600 --> 00:05:36,479
all these things

00:05:34,479 --> 00:05:38,080
and nine times out of ten they're in 40

00:05:36,479 --> 00:05:40,320
different applications

00:05:38,080 --> 00:05:43,440
or it's in you know oracle apps and it's

00:05:40,320 --> 00:05:47,039
just a horrific experience anyway

00:05:43,440 --> 00:05:50,080
so when we talk about

00:05:47,039 --> 00:05:52,240
this you know project what

00:05:50,080 --> 00:05:53,759
the challenge to us as a consulting

00:05:52,240 --> 00:05:56,880
organization was was to

00:05:53,759 --> 00:05:59,600
how can we simplify the user experience

00:05:56,880 --> 00:06:01,039
for all these managers and when i say

00:05:59,600 --> 00:06:04,240
all these managers this company

00:06:01,039 --> 00:06:05,520
um i say fortune 500 but you know i

00:06:04,240 --> 00:06:08,319
think they had

00:06:05,520 --> 00:06:09,759
in the division we worked it with uh 30

00:06:08,319 --> 00:06:14,800
000 employees give or take

00:06:09,759 --> 00:06:14,800
so pretty big company um so

00:06:15,039 --> 00:06:18,720
we went towards an event-driven

00:06:16,880 --> 00:06:21,680
architecture basically so

00:06:18,720 --> 00:06:23,199
what could we do right um and so well

00:06:21,680 --> 00:06:25,199
okay we could

00:06:23,199 --> 00:06:27,199
build a whole new application that does

00:06:25,199 --> 00:06:28,720
the approvals for all these things

00:06:27,199 --> 00:06:30,400
okay that's got a whole bunch of

00:06:28,720 --> 00:06:32,080
problems with it right so basically

00:06:30,400 --> 00:06:33,919
greenfield applications as they're

00:06:32,080 --> 00:06:35,440
referred to

00:06:33,919 --> 00:06:37,120
is when you go and like build something

00:06:35,440 --> 00:06:39,199
brand new to solve a problem

00:06:37,120 --> 00:06:41,600
greenfield applications tend to be the

00:06:39,199 --> 00:06:44,880
riskiest kinds of projects to take on

00:06:41,600 --> 00:06:47,520
because they are expensive they are

00:06:44,880 --> 00:06:48,800
often particularly pre like agile

00:06:47,520 --> 00:06:52,240
methods

00:06:48,800 --> 00:06:54,160
have a very high kind of expense curve

00:06:52,240 --> 00:06:55,440
before they actually resulted in

00:06:54,160 --> 00:06:57,199
anything

00:06:55,440 --> 00:06:58,479
and so they tend to be really really

00:06:57,199 --> 00:07:00,319
risky

00:06:58,479 --> 00:07:02,479
and consulting companies don't really

00:07:00,319 --> 00:07:04,319
like doing really really risky projects

00:07:02,479 --> 00:07:05,919
because that means you don't get more

00:07:04,319 --> 00:07:08,880
projects

00:07:05,919 --> 00:07:10,479
so we wanted to shy away from that our

00:07:08,880 --> 00:07:12,400
customer also wanted to shy away from

00:07:10,479 --> 00:07:15,520
that

00:07:12,400 --> 00:07:17,840
so another solution is to go to

00:07:15,520 --> 00:07:18,639
sso solutions and so a single sign on

00:07:17,840 --> 00:07:21,360
service

00:07:18,639 --> 00:07:21,840
would simplify at least the access to

00:07:21,360 --> 00:07:23,599
these

00:07:21,840 --> 00:07:25,759
you know literally 20 something

00:07:23,599 --> 00:07:27,919
applications um

00:07:25,759 --> 00:07:30,319
which would be nice but doesn't

00:07:27,919 --> 00:07:34,400
necessarily meet the kind of full

00:07:30,319 --> 00:07:34,400
kind of user experience needs sorry

00:07:35,680 --> 00:07:39,680
and then lastly and this is going to

00:07:37,599 --> 00:07:41,599
further date myself

00:07:39,680 --> 00:07:43,039
one of the proposals and one of the very

00:07:41,599 --> 00:07:44,240
popular solutions to this kind of

00:07:43,039 --> 00:07:47,360
problem at the time

00:07:44,240 --> 00:07:49,759
was a tool chain called a portal

00:07:47,360 --> 00:07:50,479
and what this was was basically you know

00:07:49,759 --> 00:07:52,879
imagine

00:07:50,479 --> 00:07:54,639
an application you know web application

00:07:52,879 --> 00:07:56,479
that's like just a whole bunch of square

00:07:54,639 --> 00:07:58,160
iframes right and then there's all these

00:07:56,479 --> 00:08:00,000
individual applications behind it

00:07:58,160 --> 00:08:01,840
and then you kind of go and click on one

00:08:00,000 --> 00:08:02,160
of the squares and you might be able to

00:08:01,840 --> 00:08:05,120
do

00:08:02,160 --> 00:08:06,080
one little interaction on that first

00:08:05,120 --> 00:08:08,400
square

00:08:06,080 --> 00:08:09,599
but normally you would go and click into

00:08:08,400 --> 00:08:11,280
it and then it would actually take you

00:08:09,599 --> 00:08:13,520
kind of into that application

00:08:11,280 --> 00:08:16,560
but the idea was you kind of have the

00:08:13,520 --> 00:08:19,280
sso component so it's a single sign-on

00:08:16,560 --> 00:08:19,680
but it's also kind of surfacing each app

00:08:19,280 --> 00:08:22,960
all

00:08:19,680 --> 00:08:24,479
in the same user experience lots and

00:08:22,960 --> 00:08:26,400
lots of problems with that that's why

00:08:24,479 --> 00:08:29,039
they eventually died um

00:08:26,400 --> 00:08:29,599
but you know they they you know worked

00:08:29,039 --> 00:08:32,560
um

00:08:29,599 --> 00:08:33,680
you know it's just it was kind of tough

00:08:32,560 --> 00:08:37,039
so

00:08:33,680 --> 00:08:38,000
moving on um well so we can think about

00:08:37,039 --> 00:08:40,479
using events

00:08:38,000 --> 00:08:41,919
okay well so first of all what do we

00:08:40,479 --> 00:08:44,800
mean by an event

00:08:41,919 --> 00:08:46,080
and as you can see here clearly we must

00:08:44,800 --> 00:08:49,440
be talking about a

00:08:46,080 --> 00:08:50,560
um you know a rock concert right is uh

00:08:49,440 --> 00:08:53,600
that's an event

00:08:50,560 --> 00:08:54,000
um but in fact we aren't really calling

00:08:53,600 --> 00:08:57,600
that

00:08:54,000 --> 00:08:59,600
um we are talking about

00:08:57,600 --> 00:09:01,440
things that you know kind of trigger a

00:08:59,600 --> 00:09:04,000
response and so

00:09:01,440 --> 00:09:05,279
when we say an event um you know if you

00:09:04,000 --> 00:09:06,800
think about it there's lots of events in

00:09:05,279 --> 00:09:08,959
the real world right you have

00:09:06,800 --> 00:09:10,399
lights changing you have you know

00:09:08,959 --> 00:09:11,040
turning lights which on and off is an

00:09:10,399 --> 00:09:12,720
event

00:09:11,040 --> 00:09:14,160
um you know trying to trigger the

00:09:12,720 --> 00:09:15,600
crosswalk is an event

00:09:14,160 --> 00:09:17,120
as far as i'm concerned i think hitting

00:09:15,600 --> 00:09:18,399
that button doesn't really do anything

00:09:17,120 --> 00:09:20,160
except make you feel better

00:09:18,399 --> 00:09:21,760
it's kind of like the uh closed door

00:09:20,160 --> 00:09:22,480
button in the elevator just doesn't seem

00:09:21,760 --> 00:09:26,240
to actually

00:09:22,480 --> 00:09:27,920
cause any change so

00:09:26,240 --> 00:09:30,160
we have several different types of

00:09:27,920 --> 00:09:32,399
events when we talk about technology

00:09:30,160 --> 00:09:33,760
events and there's actually some

00:09:32,399 --> 00:09:35,360
references at the end of this

00:09:33,760 --> 00:09:37,360
deck if you want to kind of go read more

00:09:35,360 --> 00:09:40,080
about it and i'll share the deck

00:09:37,360 --> 00:09:41,120
in the uh discord room after the

00:09:40,080 --> 00:09:44,160
session's over

00:09:41,120 --> 00:09:46,560
um so an event notification so this is

00:09:44,160 --> 00:09:48,560
kind of like a light switch like or how

00:09:46,560 --> 00:09:49,680
a light switch feels even though it's

00:09:48,560 --> 00:09:51,920
not actually working this way in

00:09:49,680 --> 00:09:53,920
practice but it's just

00:09:51,920 --> 00:09:56,240
the notification so this thing took

00:09:53,920 --> 00:09:57,040
place it doesn't necessarily carry any

00:09:56,240 --> 00:09:59,519
information

00:09:57,040 --> 00:10:01,279
in the event itself so it's just the

00:09:59,519 --> 00:10:03,200
notification

00:10:01,279 --> 00:10:04,720
and then another type of event is what's

00:10:03,200 --> 00:10:07,680
called an event carried state

00:10:04,720 --> 00:10:09,120
transfer and this is the trigger but

00:10:07,680 --> 00:10:11,920
also all the information

00:10:09,120 --> 00:10:13,120
about the event right so um you know so

00:10:11,920 --> 00:10:14,880
the event

00:10:13,120 --> 00:10:16,320
and so the difference between these two

00:10:14,880 --> 00:10:17,839
right is that the

00:10:16,320 --> 00:10:20,320
all of the information that you might

00:10:17,839 --> 00:10:21,519
need to process the event is carried in

00:10:20,320 --> 00:10:24,079
the event itself

00:10:21,519 --> 00:10:25,440
but obviously the event itself is then a

00:10:24,079 --> 00:10:27,200
much bigger payload

00:10:25,440 --> 00:10:28,959
so you have to have a different kind of

00:10:27,200 --> 00:10:31,040
channel to deliver it

00:10:28,959 --> 00:10:32,720
so there's trade-offs between which type

00:10:31,040 --> 00:10:36,480
you want to use

00:10:32,720 --> 00:10:39,519
and then the last kind of term is

00:10:36,480 --> 00:10:41,920
event sourcing and this is where you

00:10:39,519 --> 00:10:43,760
have a state change event

00:10:41,920 --> 00:10:46,399
but the key to this is that they're

00:10:43,760 --> 00:10:50,240
serial and so the state change events

00:10:46,399 --> 00:10:53,440
must be processed in order um as well as

00:10:50,240 --> 00:10:55,680
the they have the the benefit of if you

00:10:53,440 --> 00:10:57,360
run the same order of events again you

00:10:55,680 --> 00:10:59,680
will end up in the same state

00:10:57,360 --> 00:11:01,360
so these are i think the ones identified

00:10:59,680 --> 00:11:04,399
by martin fowler uh

00:11:01,360 --> 00:11:06,000
like like a bunch of years ago um and i

00:11:04,399 --> 00:11:08,399
referenced the article at the end

00:11:06,000 --> 00:11:10,560
um and so just to kind of give you some

00:11:08,399 --> 00:11:11,519
language to talk about uh the different

00:11:10,560 --> 00:11:15,040
events

00:11:11,519 --> 00:11:16,640
or event types really now let's talk a

00:11:15,040 --> 00:11:17,920
little bit about this kind of going back

00:11:16,640 --> 00:11:20,880
to the story of our

00:11:17,920 --> 00:11:22,240
our little example system right so when

00:11:20,880 --> 00:11:25,279
we walk in the door

00:11:22,240 --> 00:11:26,959
um we say okay

00:11:25,279 --> 00:11:28,399
you have this expense system you have

00:11:26,959 --> 00:11:29,440
this invoice system you have all these

00:11:28,399 --> 00:11:30,720
different systems

00:11:29,440 --> 00:11:32,560
so what we're going to do is we're

00:11:30,720 --> 00:11:36,160
actually going to put an interface

00:11:32,560 --> 00:11:37,920
into those systems you know somewhere

00:11:36,160 --> 00:11:39,279
in touching the business layer so if you

00:11:37,920 --> 00:11:41,680
look at this picture

00:11:39,279 --> 00:11:43,680
kind of here you know if you notice when

00:11:41,680 --> 00:11:46,079
we build that expense listener

00:11:43,680 --> 00:11:48,800
we don't build it going against that

00:11:46,079 --> 00:11:52,079
first tier of a three-tier architecture

00:11:48,800 --> 00:11:54,480
we put it instead into the business tier

00:11:52,079 --> 00:11:55,680
of that architecture so in other words

00:11:54,480 --> 00:11:57,519
all the business logic

00:11:55,680 --> 00:11:59,680
should be encapsulated right in kind of

00:11:57,519 --> 00:12:00,880
that middle layer and so if we call into

00:11:59,680 --> 00:12:02,320
that middle layer we'll have the

00:12:00,880 --> 00:12:04,079
advantage of the business logic

00:12:02,320 --> 00:12:07,519
without having to fight through things

00:12:04,079 --> 00:12:10,959
like html screen scraping etc

00:12:07,519 --> 00:12:12,720
we can do that and it's awful

00:12:10,959 --> 00:12:14,320
but when you don't have control over the

00:12:12,720 --> 00:12:15,680
system for example sometimes when you're

00:12:14,320 --> 00:12:17,360
trying to build something like this

00:12:15,680 --> 00:12:19,120
you don't actually have access to the

00:12:17,360 --> 00:12:20,079
business layer right there is no api

00:12:19,120 --> 00:12:21,760
there

00:12:20,079 --> 00:12:23,279
so in this particular case for this

00:12:21,760 --> 00:12:25,519
particular project

00:12:23,279 --> 00:12:26,320
for some of them we actually had to kind

00:12:25,519 --> 00:12:29,040
of build

00:12:26,320 --> 00:12:30,639
the business layer uh or build the api

00:12:29,040 --> 00:12:33,440
into the business layer

00:12:30,639 --> 00:12:35,519
so we did that um and then we built

00:12:33,440 --> 00:12:38,959
these listeners out in front of it

00:12:35,519 --> 00:12:42,240
so that we could fire events into

00:12:38,959 --> 00:12:43,839
the listeners and then transfer them

00:12:42,240 --> 00:12:47,279
into the appropriate system to do the

00:12:43,839 --> 00:12:50,160
appropriate thing whatever that might be

00:12:47,279 --> 00:12:50,560
the other thing what we wanted to do was

00:12:50,160 --> 00:12:53,760
as

00:12:50,560 --> 00:12:56,399
again any manager knows right um

00:12:53,760 --> 00:12:57,120
this is the what feels to be a lot of

00:12:56,399 --> 00:13:00,000
the time the

00:12:57,120 --> 00:13:01,279
least critical part of your job right

00:13:00,000 --> 00:13:02,399
nine times out of ten you're trying to

00:13:01,279 --> 00:13:04,399
put out a fire

00:13:02,399 --> 00:13:05,600
you know you are trying to maybe

00:13:04,399 --> 00:13:06,079
actually sometimes you actually have to

00:13:05,600 --> 00:13:07,440
deliver

00:13:06,079 --> 00:13:09,120
on your own kind of individual

00:13:07,440 --> 00:13:09,920
contributor work you know all these

00:13:09,120 --> 00:13:12,959
different things

00:13:09,920 --> 00:13:15,680
and so approving an expense

00:13:12,959 --> 00:13:17,200
seems like just overhead right it's such

00:13:15,680 --> 00:13:18,639
a pain in the butt to do you have to do

00:13:17,200 --> 00:13:20,560
it all the time

00:13:18,639 --> 00:13:22,240
but in fact for the person who's

00:13:20,560 --> 00:13:24,399
receiving the expense right

00:13:22,240 --> 00:13:26,320
it's very very critical so what we

00:13:24,399 --> 00:13:29,040
wanted to also build into this system

00:13:26,320 --> 00:13:29,680
was the ability to um kind of fire and

00:13:29,040 --> 00:13:32,639
forget

00:13:29,680 --> 00:13:34,880
right so uh once you clicked the button

00:13:32,639 --> 00:13:36,399
that said approve of that expense we

00:13:34,880 --> 00:13:38,959
wanted to guarantee that it would make

00:13:36,399 --> 00:13:38,959
it over there

00:13:39,199 --> 00:13:44,399
so now the thing is is that

00:13:42,880 --> 00:13:46,959
once we kind of start to build an

00:13:44,399 --> 00:13:47,360
architecture like this then we can start

00:13:46,959 --> 00:13:50,480
to

00:13:47,360 --> 00:13:51,279
extend our system in really interesting

00:13:50,480 --> 00:13:55,680
ways

00:13:51,279 --> 00:13:57,920
um by introducing new kinds of events

00:13:55,680 --> 00:13:59,839
let's say you know as your organization

00:13:57,920 --> 00:14:01,839
grows

00:13:59,839 --> 00:14:03,519
basically the the types of approvals and

00:14:01,839 --> 00:14:07,279
the number of approvals goes up

00:14:03,519 --> 00:14:08,880
right um so you know many people

00:14:07,279 --> 00:14:10,720
again kind of more in management than

00:14:08,880 --> 00:14:13,199
individual contributor levels

00:14:10,720 --> 00:14:15,040
they'll have like a budget approval uh

00:14:13,199 --> 00:14:16,800
process right they have you know five

00:14:15,040 --> 00:14:20,560
dollars that they get to spend

00:14:16,800 --> 00:14:23,760
um you know over the course of a year so

00:14:20,560 --> 00:14:25,040
that way uh they can build uh or they

00:14:23,760 --> 00:14:27,279
they may need to be able to approve that

00:14:25,040 --> 00:14:30,720
budget where it's gonna be allocated etc

00:14:27,279 --> 00:14:32,000
um and so

00:14:30,720 --> 00:14:34,240
what we can do though is that we can

00:14:32,000 --> 00:14:36,240
start to add new listeners into that

00:14:34,240 --> 00:14:38,240
same business logic system

00:14:36,240 --> 00:14:39,279
and keep them independent and hey look

00:14:38,240 --> 00:14:41,199
now we're starting to have

00:14:39,279 --> 00:14:42,480
microservices right we're starting to

00:14:41,199 --> 00:14:44,240
have um

00:14:42,480 --> 00:14:46,720
you know all these different kinds of

00:14:44,240 --> 00:14:49,839
things that we can start to

00:14:46,720 --> 00:14:51,760
then get even more interesting because

00:14:49,839 --> 00:14:54,079
what we can next do and we start to

00:14:51,760 --> 00:14:55,600
drive off of this event driven state

00:14:54,079 --> 00:14:58,560
and off of this micro service

00:14:55,600 --> 00:15:01,519
architecture we can actually throw out

00:14:58,560 --> 00:15:03,519
the user experience component of our

00:15:01,519 --> 00:15:03,839
expense system we can stop maintaining

00:15:03,519 --> 00:15:05,600
it

00:15:03,839 --> 00:15:07,760
so we have one less piece of software we

00:15:05,600 --> 00:15:09,360
have to deal with because nobody's using

00:15:07,760 --> 00:15:10,800
it right they're all going through this

00:15:09,360 --> 00:15:13,199
kind of shared front end

00:15:10,800 --> 00:15:14,240
because the user experience is better

00:15:13,199 --> 00:15:16,000
and then

00:15:14,240 --> 00:15:18,800
it's just firing the triggers into the

00:15:16,000 --> 00:15:21,839
actual system so you can slowly retire

00:15:18,800 --> 00:15:23,360
the kind of ui aspect of those systems

00:15:21,839 --> 00:15:24,639
and or at least this is what we did

00:15:23,360 --> 00:15:26,240
right but so these are some of the

00:15:24,639 --> 00:15:29,120
advantages you get to

00:15:26,240 --> 00:15:29,759
driving through into this kind of event

00:15:29,120 --> 00:15:33,279
driven

00:15:29,759 --> 00:15:36,320
architectures and so

00:15:33,279 --> 00:15:40,320
in particular i think uh servicemesh

00:15:36,320 --> 00:15:42,079
talks about this particular um uh

00:15:40,320 --> 00:15:43,680
kind of aspect or role or whatever you

00:15:42,079 --> 00:15:45,680
want to call it um you know that i'm

00:15:43,680 --> 00:15:48,079
kind of giving examples of here

00:15:45,680 --> 00:15:48,959
where what we can do is we can you know

00:15:48,079 --> 00:15:51,120
kind of

00:15:48,959 --> 00:15:52,959
make an actual application look like

00:15:51,120 --> 00:15:56,079
this picture right we can actually

00:15:52,959 --> 00:15:58,320
look at how those expenses are

00:15:56,079 --> 00:15:59,600
sorry how those events are traveling

00:15:58,320 --> 00:16:02,000
through our system

00:15:59,600 --> 00:16:02,639
um and given that we don't have a lot of

00:16:02,000 --> 00:16:03,839
time left

00:16:02,639 --> 00:16:06,160
um you know i'm just going to kind of

00:16:03,839 --> 00:16:08,320
mention you know it also

00:16:06,160 --> 00:16:09,360
encourages even more feature set when

00:16:08,320 --> 00:16:11,440
you start to think about your

00:16:09,360 --> 00:16:13,680
architecture being an event-driven one

00:16:11,440 --> 00:16:14,800
is you can start to do canary roll-outs

00:16:13,680 --> 00:16:17,920
which is when you

00:16:14,800 --> 00:16:19,759
say okay only a portion of my team

00:16:17,920 --> 00:16:21,440
is or sorry only a portion of my

00:16:19,759 --> 00:16:24,720
customers whether that's

00:16:21,440 --> 00:16:25,839
internal managers or actual customers uh

00:16:24,720 --> 00:16:27,040
would get a

00:16:25,839 --> 00:16:28,560
you know this new version of the

00:16:27,040 --> 00:16:30,399
application while you try it out and

00:16:28,560 --> 00:16:32,399
make it see if you can make it work

00:16:30,399 --> 00:16:34,560
um you know all these different kind of

00:16:32,399 --> 00:16:39,360
features that start to roll out

00:16:34,560 --> 00:16:42,320
and so assuming the demo gods will

00:16:39,360 --> 00:16:44,399
favor us um i will try to show you an

00:16:42,320 --> 00:16:47,759
example of this

00:16:44,399 --> 00:16:47,759
in um

00:16:47,839 --> 00:16:51,839
open shift

00:16:52,320 --> 00:16:55,279
this one maybe

00:16:56,480 --> 00:17:04,400
all right and so uh

00:17:00,639 --> 00:17:06,240
with the kind of so service mesh is not

00:17:04,400 --> 00:17:08,000
only a concept but it also happens to be

00:17:06,240 --> 00:17:09,839
something we ship we ship a product

00:17:08,000 --> 00:17:12,079
called openshift service mesh

00:17:09,839 --> 00:17:14,559
it is actually based on a set of

00:17:12,079 --> 00:17:18,000
upstream projects called istio

00:17:14,559 --> 00:17:21,600
and kiali and jager and

00:17:18,000 --> 00:17:23,839
while the real work in a sense is being

00:17:21,600 --> 00:17:25,839
done by istio

00:17:23,839 --> 00:17:27,760
which is what is actually allowing for

00:17:25,839 --> 00:17:29,600
this pretty picture to occur

00:17:27,760 --> 00:17:31,039
or the slides that i was showing you a

00:17:29,600 --> 00:17:33,280
minute ago to occur

00:17:31,039 --> 00:17:34,400
um it doesn't visualize it right it just

00:17:33,280 --> 00:17:35,679
says uh you know

00:17:34,400 --> 00:17:37,919
it's it's doing all the stuff in the

00:17:35,679 --> 00:17:40,320
background right um so what keali does

00:17:37,919 --> 00:17:43,440
is lets you visualize that experience

00:17:40,320 --> 00:17:45,200
um and also do some level of interaction

00:17:43,440 --> 00:17:48,080
with that experience as well

00:17:45,200 --> 00:17:48,880
but importantly um and i'm going to see

00:17:48,080 --> 00:17:52,799
if i can make this

00:17:48,880 --> 00:17:56,640
any bigger for you all um

00:17:52,799 --> 00:17:59,039
and so we can do cool things like

00:17:56,640 --> 00:18:01,200
i don't know if that helps um just a

00:17:59,039 --> 00:18:04,880
friendly reminder that you have

00:18:01,200 --> 00:18:06,960
uh seven minutes left okay

00:18:04,880 --> 00:18:08,080
okay thank you yeah i saw your 10 minute

00:18:06,960 --> 00:18:10,720
warning um

00:18:08,080 --> 00:18:12,720
i have been doing a twitch show uh for

00:18:10,720 --> 00:18:14,400
the past i don't know

00:18:12,720 --> 00:18:16,080
actually it's quite a long time now six

00:18:14,400 --> 00:18:17,679
or eight months uh and so i've gotten

00:18:16,080 --> 00:18:18,240
very good at reading the chat while

00:18:17,679 --> 00:18:21,280
talking

00:18:18,240 --> 00:18:24,880
um so yeah it's uh it's kind of funny

00:18:21,280 --> 00:18:25,840
um but uh what you can see here is we

00:18:24,880 --> 00:18:27,679
can actually do

00:18:25,840 --> 00:18:29,200
traffic animation right and i actually

00:18:27,679 --> 00:18:31,440
have traffic going through here

00:18:29,200 --> 00:18:32,720
um and i think i'm gonna run out of time

00:18:31,440 --> 00:18:35,039
on trying to uh

00:18:32,720 --> 00:18:37,679
move it around too much or whatever but

00:18:35,039 --> 00:18:40,160
you know the idea of we have all these

00:18:37,679 --> 00:18:43,039
different events that are taking place

00:18:40,160 --> 00:18:43,520
um that are passing through the system

00:18:43,039 --> 00:18:46,240
um

00:18:43,520 --> 00:18:46,960
let me s oh let me slow it down a little

00:18:46,240 --> 00:18:50,400
bit or it's

00:18:46,960 --> 00:18:52,000
it's just going pretty fast um so

00:18:50,400 --> 00:18:54,240
the events are going through the system

00:18:52,000 --> 00:18:57,520
and then we have um

00:18:54,240 --> 00:18:58,960
uh the ability to kind of rearrange how

00:18:57,520 --> 00:19:00,960
some of these different components work

00:18:58,960 --> 00:19:03,200
so if you notice there's a v1

00:19:00,960 --> 00:19:05,120
of this recommendation engine okay well

00:19:03,200 --> 00:19:06,880
what if i want to introduce v2 well i

00:19:05,120 --> 00:19:08,720
can introduce a v2

00:19:06,880 --> 00:19:10,000
and in the canary rollout that we were

00:19:08,720 --> 00:19:11,919
talking about we could say okay

00:19:10,000 --> 00:19:13,039
let's move five percent of the traffic

00:19:11,919 --> 00:19:14,480
there uh

00:19:13,039 --> 00:19:17,520
while we make sure that it actually

00:19:14,480 --> 00:19:19,280
works or we have a v2 but we're not

00:19:17,520 --> 00:19:20,160
actually sure if v2 is better than the

00:19:19,280 --> 00:19:22,400
old version

00:19:20,160 --> 00:19:24,720
so why don't we do what's called red

00:19:22,400 --> 00:19:27,760
black testing or blue green testing

00:19:24,720 --> 00:19:31,200
um and uh you know and kind of just

00:19:27,760 --> 00:19:35,200
share the uh and sorry and um see

00:19:31,200 --> 00:19:38,240
if the characteristics of the users

00:19:35,200 --> 00:19:40,400
change based on which one they land in

00:19:38,240 --> 00:19:42,240
uh one of the classic examples of this

00:19:40,400 --> 00:19:44,480
which i thought was super awesome

00:19:42,240 --> 00:19:46,960
was i think the hillary clinton campaign

00:19:44,480 --> 00:19:49,200
when she ran for president

00:19:46,960 --> 00:19:50,000
they did a system where they did an a b

00:19:49,200 --> 00:19:51,840
test

00:19:50,000 --> 00:19:53,039
or red black test they're basically all

00:19:51,840 --> 00:19:55,120
very similar

00:19:53,039 --> 00:19:56,400
but um depending on what layer they're

00:19:55,120 --> 00:19:58,480
in they get a different name

00:19:56,400 --> 00:19:59,760
sometimes um but they did different

00:19:58,480 --> 00:20:02,080
testing with different

00:19:59,760 --> 00:20:04,720
size buttons around their donation and

00:20:02,080 --> 00:20:06,640
they had a material impact in their

00:20:04,720 --> 00:20:08,320
donation dollars when they change the

00:20:06,640 --> 00:20:11,760
size of the button

00:20:08,320 --> 00:20:15,039
i think the button size increased

00:20:11,760 --> 00:20:16,880
but as you can see like i can now

00:20:15,039 --> 00:20:18,960
uh using an advent driven architecture i

00:20:16,880 --> 00:20:20,480
can introduce new things anywhere in

00:20:18,960 --> 00:20:23,520
this pipeline

00:20:20,480 --> 00:20:24,080
and like i said i i miss i was thinking

00:20:23,520 --> 00:20:26,480
we had the

00:20:24,080 --> 00:20:27,919
the longer session um so i was going to

00:20:26,480 --> 00:20:28,559
try to demo moving some of these things

00:20:27,919 --> 00:20:31,440
around

00:20:28,559 --> 00:20:33,600
um but you know this is kind of the idea

00:20:31,440 --> 00:20:35,280
you can find lots of other demos of this

00:20:33,600 --> 00:20:37,440
uh going on

00:20:35,280 --> 00:20:38,960
and so i wanted to kind of move i'll

00:20:37,440 --> 00:20:41,440
move back to the slides

00:20:38,960 --> 00:20:44,000
quickly because we are almost out of

00:20:41,440 --> 00:20:46,559
time um

00:20:44,000 --> 00:20:46,559
and

00:20:48,720 --> 00:20:53,360
sorry um

00:20:52,080 --> 00:20:55,600
just because i also like to give the

00:20:53,360 --> 00:20:57,600
attributions for the pictures i used um

00:20:55,600 --> 00:20:59,840
but then the references and kind of

00:20:57,600 --> 00:21:02,080
further reading um you know hopefully

00:20:59,840 --> 00:21:03,039
uh you know this is this is interesting

00:21:02,080 --> 00:21:06,320
enough for you to go

00:21:03,039 --> 00:21:09,039
and uh you know go and check out uh

00:21:06,320 --> 00:21:10,400
some of this background uh martin fowler

00:21:09,039 --> 00:21:14,320
if you're unfamiliar

00:21:10,400 --> 00:21:16,799
is you know a real thought leader in um

00:21:14,320 --> 00:21:18,400
you know technology in general or

00:21:16,799 --> 00:21:19,760
software development in general

00:21:18,400 --> 00:21:22,159
um and so his stuff is really

00:21:19,760 --> 00:21:25,440
interesting um but can be very dense

00:21:22,159 --> 00:21:26,799
so uh you know i i hope uh i hope you

00:21:25,440 --> 00:21:28,000
find some of these things useful

00:21:26,799 --> 00:21:29,039
like i said i'll share the slides

00:21:28,000 --> 00:21:31,360
afterwards you don't have to like take a

00:21:29,039 --> 00:21:33,600
picture or something like that

00:21:31,360 --> 00:21:35,440
and let me flip it over to say you know

00:21:33,600 --> 00:21:38,880
do we have any questions is there anyone

00:21:35,440 --> 00:21:41,600
who wanted to

00:21:38,880 --> 00:21:41,600
talk about something

00:21:42,640 --> 00:21:48,640
well i hope that gave you um you know a

00:21:46,240 --> 00:21:49,919
decent oh well i could talk a little bit

00:21:48,640 --> 00:21:54,240
more about serverless so

00:21:49,919 --> 00:21:54,240
um let me

00:21:54,480 --> 00:21:58,000
so so the serverless part of it is what

00:21:57,280 --> 00:21:59,360
we're having

00:21:58,000 --> 00:22:02,880
here and i didn't mention the kind of

00:21:59,360 --> 00:22:05,919
word but the serverless aspect is really

00:22:02,880 --> 00:22:08,080
you're just creating this thing

00:22:05,919 --> 00:22:09,360
over here right because the serverless

00:22:08,080 --> 00:22:11,840
system

00:22:09,360 --> 00:22:12,720
it's not really serverless it's a fire

00:22:11,840 --> 00:22:15,600
and forget

00:22:12,720 --> 00:22:16,559
operation that happens to take place on

00:22:15,600 --> 00:22:18,320
a server

00:22:16,559 --> 00:22:20,320
but you don't experience it you don't

00:22:18,320 --> 00:22:23,919
have to maintain it or whatever

00:22:20,320 --> 00:22:26,799
so as soon as you organize your company

00:22:23,919 --> 00:22:28,159
around kind of this expense component

00:22:26,799 --> 00:22:30,000
let's say it's the expense listener the

00:22:28,159 --> 00:22:32,559
budget listener the elite response

00:22:30,000 --> 00:22:33,120
all kind of independently um they are

00:22:32,559 --> 00:22:36,400
just

00:22:33,120 --> 00:22:38,720
triggerable events right and serverless

00:22:36,400 --> 00:22:40,559
is just kind of it you know in my

00:22:38,720 --> 00:22:41,520
opinion right a kind of a fancy way of

00:22:40,559 --> 00:22:45,600
talking about

00:22:41,520 --> 00:22:48,240
um doing a an event response

00:22:45,600 --> 00:22:49,919
in a way that you don't have to kind of

00:22:48,240 --> 00:22:51,679
manage any of the infrastructure that's

00:22:49,919 --> 00:22:54,799
behind it

00:22:51,679 --> 00:22:58,080
so while you'll see things like lambda

00:22:54,799 --> 00:23:00,960
and such as ways to um

00:22:58,080 --> 00:23:01,600
and lambda and such as ways to kind of

00:23:00,960 --> 00:23:04,320
implement

00:23:01,600 --> 00:23:05,919
this thing really it's the concept that

00:23:04,320 --> 00:23:07,120
matters right it's that you're firing

00:23:05,919 --> 00:23:09,039
off an event and it's

00:23:07,120 --> 00:23:10,640
it's causing things to happen so the

00:23:09,039 --> 00:23:12,159
next question there is uh can we have

00:23:10,640 --> 00:23:15,280
serverless with state

00:23:12,159 --> 00:23:16,480
you can it's much more expensive or it

00:23:15,280 --> 00:23:18,400
can be more expensive

00:23:16,480 --> 00:23:20,240
uh so in the current implementations

00:23:18,400 --> 00:23:21,039
that you see in things like lambda or in

00:23:20,240 --> 00:23:23,520
k native

00:23:21,039 --> 00:23:24,880
or you know any of those solutions you

00:23:23,520 --> 00:23:26,880
generally speaking

00:23:24,880 --> 00:23:28,960
are going to want to store your state in

00:23:26,880 --> 00:23:30,799
some sort of back end right so in some

00:23:28,960 --> 00:23:33,600
sort of database

00:23:30,799 --> 00:23:36,240
however using one of the methods that we

00:23:33,600 --> 00:23:38,880
talked about early on where you um

00:23:36,240 --> 00:23:40,159
you can actually carry your state along

00:23:38,880 --> 00:23:42,799
with your event

00:23:40,159 --> 00:23:44,720
um so so it depends on what you mean

00:23:42,799 --> 00:23:48,159
with having serverless with state

00:23:44,720 --> 00:23:50,559
um generally speaking uh pushing as much

00:23:48,159 --> 00:23:53,919
of that information to the client

00:23:50,559 --> 00:23:57,600
is a good idea but isn't always possible

00:23:53,919 --> 00:24:01,279
so stateless always better stateful

00:23:57,600 --> 00:24:02,320
can be done and sometimes can be pushed

00:24:01,279 --> 00:24:04,640
to the client

00:24:02,320 --> 00:24:06,240
you know if you see well executed like

00:24:04,640 --> 00:24:08,000
single page websites

00:24:06,240 --> 00:24:10,080
uh you will actually have these massive

00:24:08,000 --> 00:24:10,720
cookies or even the client-side data

00:24:10,080 --> 00:24:12,559
store

00:24:10,720 --> 00:24:14,799
uh in the browser itself which is

00:24:12,559 --> 00:24:16,159
actually usually carrying state

00:24:14,799 --> 00:24:17,840
the thing is then you also have to

00:24:16,159 --> 00:24:19,120
introduce things like encryption and

00:24:17,840 --> 00:24:19,919
security and stuff like that because you

00:24:19,120 --> 00:24:22,720
don't want to have any

00:24:19,919 --> 00:24:23,760
dangerous data there so hopefully that

00:24:22,720 --> 00:24:25,120
answers the question hopefully i gave

00:24:23,760 --> 00:24:27,120
you a brief introduction to

00:24:25,120 --> 00:24:30,240
to why you might want to take a look

00:24:27,120 --> 00:24:32,960
into event driven architectures

00:24:30,240 --> 00:24:33,919
implemented with you know service meshes

00:24:32,960 --> 00:24:36,080
or serverless

00:24:33,919 --> 00:24:37,760
uh microservices uh you know

00:24:36,080 --> 00:24:40,880
microservices in general

00:24:37,760 --> 00:24:43,200
and uh hopefully uh that uh

00:24:40,880 --> 00:24:45,039
convinced you um and we are officially i

00:24:43,200 --> 00:24:47,679
think yes you are langdon so

00:24:45,039 --> 00:24:48,320
spot on that so this is a a fascinating

00:24:47,679 --> 00:24:49,760
topic

00:24:48,320 --> 00:24:53,200
um unfortunately we didn't give you

00:24:49,760 --> 00:24:55,600
enough time i think but

00:24:53,200 --> 00:24:57,600
yeah i totally i you know honestly i i

00:24:55,600 --> 00:24:57,840
misread it originally and thought it was

00:24:57,600 --> 00:25:01,840
a

00:24:57,840 --> 00:25:01,840
one of the 40 they always

00:25:04,080 --> 00:25:07,440
exactly exactly exactly i hope so uh and

00:25:07,039 --> 00:25:09,200
uh

00:25:07,440 --> 00:25:10,880
you know like i said i'll i'll be in the

00:25:09,200 --> 00:25:12,240
discord uh probably for the rest of

00:25:10,880 --> 00:25:15,200
devconf but um

00:25:12,240 --> 00:25:15,600
i currently have session room one open

00:25:15,200 --> 00:25:18,640
um

00:25:15,600 --> 00:25:20,320
but feel free to tag me um

00:25:18,640 --> 00:25:21,600
and i do not have a longer version of

00:25:20,320 --> 00:25:22,400
this talk because this is the first time

00:25:21,600 --> 00:25:24,960
i gave it

00:25:22,400 --> 00:25:26,960
um my plan is uh to kind of keep

00:25:24,960 --> 00:25:28,000
building it out in fact uh because i

00:25:26,960 --> 00:25:30,720
have a number

00:25:28,000 --> 00:25:32,000
of internal like red hat people who i'm

00:25:30,720 --> 00:25:33,600
trying to give this talk to and i want

00:25:32,000 --> 00:25:34,320
to do both a short version and a long

00:25:33,600 --> 00:25:37,760
version

00:25:34,320 --> 00:25:38,080
so uh welcome it's a fascinating topic

00:25:37,760 --> 00:25:39,840
and

00:25:38,080 --> 00:25:41,520
you're a wealth of knowledge so thank

00:25:39,840 --> 00:25:42,240
you very much uh for the session thank

00:25:41,520 --> 00:25:44,720
you very much

00:25:42,240 --> 00:25:46,080
for uh continuing to monitor discord so

00:25:44,720 --> 00:25:48,559
people have a lot of questions

00:25:46,080 --> 00:25:49,760
they can find you there and uh i wish

00:25:48,559 --> 00:25:52,240
everyone a good day and

00:25:49,760 --> 00:25:52,960
uh stay tuned at 4 30 central european

00:25:52,240 --> 00:25:55,600
time

00:25:52,960 --> 00:25:56,320
for kubernetes native with micro profile

00:25:55,600 --> 00:26:01,520
corkus

00:25:56,320 --> 00:26:01,520

YouTube URL: https://www.youtube.com/watch?v=fu89ok_hN8w


