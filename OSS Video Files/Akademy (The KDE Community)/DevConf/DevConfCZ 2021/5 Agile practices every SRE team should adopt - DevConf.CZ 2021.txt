Title: 5 Agile practices every SRE team should adopt - DevConf.CZ 2021
Publication date: 2021-03-14
Playlist: DevConfCZ 2021
Description: 
	Speaker: Manuel Dewald
As SRE (Site Reliability Engineering) teams contain a fair portion of software development work, and get filled up by software developers, it is a natural move to also adapt agile software development practices. The right agile model depends heavily on the percentage of development work vs. operations, which may be influenced by the team size. For example, in a small team where a high percentage of people is on call during the day, it might not make too much sense to plan sprints of 2 weeks if only a few backlog items are expected to get done in that timeframe.

Audience
This talk is targeted at everyone involved in Site Reliability Engineering, wondering how much agile to adopt - team leads, product owners, software developers, SREs. If you're planning to transform your ops team into an SRE team, your SRE team just got started, or already do SRE since quite some time. As a software engineer who recently joined SRE, I will talk about which practices I found useful to take over from software engineering, which ones are better dropped, and which ones I'm still missing sorely.

Agile Practices
Retrospective
While often being the first meeting to get dropped by teams as the relation to actual work items cannot be seen easily, the retrospective meeting is the tool for teams to iterate on how they work and improve, including which of the agile practices make sense to adopt it which don't.

Planning: Estimating Backlog Items
Planning meetings help the team understand priorities of items, the overall direction a project is heading and get a common understanding of how complex work is (with estimation). However, given a (not known) number of people is on call or doing incident response makes it hard to set sprint goals or commit to a consistent number of stories.

Standups
Standup meetings are useful, especially in distributed teams, to talk about what you're working on and where you need help. Frequency of the meeting does not necessarily be daily - and that hit me as software engineer unexpectedly hard.

Testing
If your SRE team is writing software, that software should be tested. No room for discussion.

That's what the software engineer might think - but you need to discuss. You need to convince your team testing is helpful. And that's as equally hard in an SRE team as in any software engineering team.

Pair programming
It's hard to convince people pair programming is helpful, and it isn't helpful in every situation - but confidence in code as well as operations changes (in an outage for example) is so much higher when working in a pair.

Key Takeaways
During this talk, attendees should have learned (1) that SRE and software engineering likewise benefit from agile development practices, of which at least (2) some practices are worth to adopt while others may not be too helpful for SRE. (3) Which ones are and are not helpful can be the easiest spotted by iterating not only work but also how we work (practice retrospectives).



Schedule: https://sched.co/gmIO
Captions: 
	00:00:02,879 --> 00:00:05,759
i'm

00:00:03,760 --> 00:00:08,480
working as an psi reliability engineer

00:00:05,759 --> 00:00:10,400
in the openshift dedicated team

00:00:08,480 --> 00:00:11,840
and i've joined from a software

00:00:10,400 --> 00:00:12,559
engineering role one and a half years

00:00:11,840 --> 00:00:16,640
ago

00:00:12,559 --> 00:00:19,119
and since then some of the practices

00:00:16,640 --> 00:00:20,240
um have been different and i want to

00:00:19,119 --> 00:00:22,000
share today with you

00:00:20,240 --> 00:00:23,600
what i deemed most useful from the

00:00:22,000 --> 00:00:26,240
classical

00:00:23,600 --> 00:00:27,039
agile practices um like things you find

00:00:26,240 --> 00:00:30,800
in scrum

00:00:27,039 --> 00:00:34,000
for sres and what was not too

00:00:30,800 --> 00:00:34,000
helpful for us as a team

00:00:34,079 --> 00:00:37,120
so teams of site reliability engineers

00:00:36,480 --> 00:00:39,520
typically

00:00:37,120 --> 00:00:40,640
consist of people from the software

00:00:39,520 --> 00:00:42,719
engineering world

00:00:40,640 --> 00:00:45,120
as well as people with more of a

00:00:42,719 --> 00:00:47,680
operations or administration background

00:00:45,120 --> 00:00:49,280
and you put that in in a ratio of 50 50

00:00:47,680 --> 00:00:52,960
that's what usually happens

00:00:49,280 --> 00:00:55,520
and then the hope is that magically

00:00:52,960 --> 00:00:57,199
people from with more in operational

00:00:55,520 --> 00:00:59,199
background will learn from learn from

00:00:57,199 --> 00:01:01,120
the software engineers and software

00:00:59,199 --> 00:01:04,799
engineers on the other side we'll

00:01:01,120 --> 00:01:07,040
learn from the operations folks how to

00:01:04,799 --> 00:01:08,880
what it means to to maintain to run a

00:01:07,040 --> 00:01:11,840
system and then you get a

00:01:08,880 --> 00:01:14,080
that new species of engineers which is

00:01:11,840 --> 00:01:16,640
the site reliability engineer

00:01:14,080 --> 00:01:18,159
who's striving to automate all the

00:01:16,640 --> 00:01:20,720
operations tasks that you have

00:01:18,159 --> 00:01:21,680
in an environment um but when an

00:01:20,720 --> 00:01:23,920
incident happens

00:01:21,680 --> 00:01:26,799
has all the professionalism to resolve

00:01:23,920 --> 00:01:29,759
it as quickly as possible

00:01:26,799 --> 00:01:30,400
so the idea of site reliability

00:01:29,759 --> 00:01:32,320
engineering

00:01:30,400 --> 00:01:33,759
is to apply software software

00:01:32,320 --> 00:01:36,799
engineering best practices

00:01:33,759 --> 00:01:38,960
to operations tasks um

00:01:36,799 --> 00:01:40,479
some say it it is what naturally happens

00:01:38,960 --> 00:01:41,520
when you tell a software engineer to

00:01:40,479 --> 00:01:43,200
operate a system

00:01:41,520 --> 00:01:45,840
because the software engineer would then

00:01:43,200 --> 00:01:49,520
naturally try to automate things when

00:01:45,840 --> 00:01:51,680
when they do it the second or third time

00:01:49,520 --> 00:01:53,040
but what also happens is that the

00:01:51,680 --> 00:01:53,600
software engineers will bring their

00:01:53,040 --> 00:01:56,079
favorite

00:01:53,600 --> 00:01:57,280
agile framework like scrum kanban or

00:01:56,079 --> 00:01:59,680
extreme programming

00:01:57,280 --> 00:02:01,119
and try to fit that into uh into into

00:01:59,680 --> 00:02:03,200
the operations world

00:02:01,119 --> 00:02:04,960
and because of that it felt quite

00:02:03,200 --> 00:02:08,000
natural for me when i joined the

00:02:04,960 --> 00:02:10,479
the openshift sre team um

00:02:08,000 --> 00:02:11,599
that from from my previous team where we

00:02:10,479 --> 00:02:14,480
were doing

00:02:11,599 --> 00:02:15,200
um scrum it felt quite natural that we

00:02:14,480 --> 00:02:17,840
had

00:02:15,200 --> 00:02:18,959
uh three weeks sprints we had daily

00:02:17,840 --> 00:02:21,040
stand-ups

00:02:18,959 --> 00:02:22,080
and and all stuff like that so that that

00:02:21,040 --> 00:02:25,280
felt very

00:02:22,080 --> 00:02:28,239
very familiar to me um

00:02:25,280 --> 00:02:29,760
but then what happened in the probably

00:02:28,239 --> 00:02:32,959
second or third week was

00:02:29,760 --> 00:02:34,640
that we out of a sudden dropped the

00:02:32,959 --> 00:02:35,920
stand-up meetings altogether

00:02:34,640 --> 00:02:38,000
and and that was really hard for me

00:02:35,920 --> 00:02:40,080
because i think in in the six years of

00:02:38,000 --> 00:02:42,080
software development i had before

00:02:40,080 --> 00:02:43,360
um i guess in most of the days i had a

00:02:42,080 --> 00:02:46,080
stand-up meeting and that was

00:02:43,360 --> 00:02:48,080
the most natural thing to me so we

00:02:46,080 --> 00:02:50,640
removed them because it turns out

00:02:48,080 --> 00:02:52,959
um site reliability site reliability

00:02:50,640 --> 00:02:54,879
engineers are

00:02:52,959 --> 00:02:56,800
not very interested in having regular

00:02:54,879 --> 00:03:00,560
meetings on their calendar

00:02:56,800 --> 00:03:02,640
and that is because software

00:03:00,560 --> 00:03:04,159
site reliability engineers are trained

00:03:02,640 --> 00:03:05,040
and comfortable in very stressful

00:03:04,159 --> 00:03:08,080
situations

00:03:05,040 --> 00:03:09,840
and need to resolve incidents

00:03:08,080 --> 00:03:11,360
very quickly when they come up so they

00:03:09,840 --> 00:03:13,519
they are when an incident

00:03:11,360 --> 00:03:15,760
appears they work start working on it

00:03:13,519 --> 00:03:17,840
and work on it until it's fixed

00:03:15,760 --> 00:03:19,519
and that there is no meeting that will

00:03:17,840 --> 00:03:23,120
stop them from doing that

00:03:19,519 --> 00:03:25,360
and that means a meeting with

00:03:23,120 --> 00:03:27,120
with the whole team scheduling meeting

00:03:25,360 --> 00:03:28,239
with the whole team like a planning

00:03:27,120 --> 00:03:30,640
meeting which can

00:03:28,239 --> 00:03:31,280
in for three three week iterations can

00:03:30,640 --> 00:03:33,040
take

00:03:31,280 --> 00:03:34,319
one or two hours conducting such a

00:03:33,040 --> 00:03:36,720
meeting

00:03:34,319 --> 00:03:38,400
is very hard because people will just

00:03:36,720 --> 00:03:39,360
drop out or they aren't shift so they

00:03:38,400 --> 00:03:41,280
won't even show up

00:03:39,360 --> 00:03:42,480
or are working on an actually important

00:03:41,280 --> 00:03:44,560
customer ticket

00:03:42,480 --> 00:03:45,519
so scheduling something like that is

00:03:44,560 --> 00:03:47,760
very hard and you

00:03:45,519 --> 00:03:49,280
anyways need to make sure that all the

00:03:47,760 --> 00:03:50,959
information that you have in the meeting

00:03:49,280 --> 00:03:53,200
is some somewhat persisted

00:03:50,959 --> 00:03:54,959
so that whoever wasn't able to to

00:03:53,200 --> 00:03:56,480
participate can still

00:03:54,959 --> 00:03:58,799
know what what was happening in the

00:03:56,480 --> 00:03:58,799
meeting

00:03:59,599 --> 00:04:05,200
and additionally sre teams are typically

00:04:02,799 --> 00:04:06,640
spread across different time zones um

00:04:05,200 --> 00:04:10,159
because you want to

00:04:06,640 --> 00:04:11,200
have 247 someone available to work on on

00:04:10,159 --> 00:04:13,519
issues

00:04:11,200 --> 00:04:15,680
and that means it can be hard or even

00:04:13,519 --> 00:04:18,160
impossible to find a spot

00:04:15,680 --> 00:04:20,320
in in the calendar of of everybody if

00:04:18,160 --> 00:04:24,080
the team is spread across the globe

00:04:20,320 --> 00:04:24,800
and that's especially true for meetings

00:04:24,080 --> 00:04:27,440
that happen

00:04:24,800 --> 00:04:28,560
daily like stand-up meetings you can't

00:04:27,440 --> 00:04:30,560
expect people to

00:04:28,560 --> 00:04:32,560
get up at night every day to join the

00:04:30,560 --> 00:04:35,919
daily stand-up meeting of the

00:04:32,560 --> 00:04:38,800
of the team right so that's the

00:04:35,919 --> 00:04:40,160
that's here you see a calendar a typical

00:04:38,800 --> 00:04:40,880
calendar of scrum there is a lot of

00:04:40,160 --> 00:04:43,040
meetings in there

00:04:40,880 --> 00:04:44,800
stand-ups plannings grooming review

00:04:43,040 --> 00:04:48,000
retro and many of them

00:04:44,800 --> 00:04:50,560
they consume a lot of time so is this

00:04:48,000 --> 00:04:53,919
just not fitting at all to sre or

00:04:50,560 --> 00:04:56,960
what do we need to do to have a good

00:04:53,919 --> 00:04:59,680
agile practice in an sre team

00:04:56,960 --> 00:05:01,600
and we found it helpful to stick to the

00:04:59,680 --> 00:05:05,199
iterations and we still do

00:05:01,600 --> 00:05:07,120
three weeks prints um but we

00:05:05,199 --> 00:05:09,680
we dropped all the things that we that

00:05:07,120 --> 00:05:11,360
were not helpful to us or adopted them

00:05:09,680 --> 00:05:14,560
and today i want to share with you

00:05:11,360 --> 00:05:18,639
what for our specific work environment

00:05:14,560 --> 00:05:21,840
were the most helpful things to keep

00:05:18,639 --> 00:05:25,199
and now that i

00:05:21,840 --> 00:05:28,000
that i bashed about meetings that much

00:05:25,199 --> 00:05:29,280
let me say three out of those five

00:05:28,000 --> 00:05:32,800
practices that i want to share

00:05:29,280 --> 00:05:34,880
are actually meetings but all of them

00:05:32,800 --> 00:05:36,479
don't necessarily have to be meetings

00:05:34,880 --> 00:05:38,880
you can also find ways to do them

00:05:36,479 --> 00:05:39,840
in an asynchronous way and if your team

00:05:38,880 --> 00:05:42,639
is very much

00:05:39,840 --> 00:05:44,639
distributed this is um this is probably

00:05:42,639 --> 00:05:46,479
what you want to do

00:05:44,639 --> 00:05:49,039
so let me start with the first one that

00:05:46,479 --> 00:05:51,840
might be a surprising one

00:05:49,039 --> 00:05:52,880
the retrospective is often deemed not

00:05:51,840 --> 00:05:54,479
very important

00:05:52,880 --> 00:05:55,919
but for me it is one of the most

00:05:54,479 --> 00:05:58,000
important tools that you have

00:05:55,919 --> 00:05:58,960
in in the agile world and that is

00:05:58,000 --> 00:06:02,000
because

00:05:58,960 --> 00:06:03,120
the retro is the tool for the team to

00:06:02,000 --> 00:06:05,199
get together

00:06:03,120 --> 00:06:06,240
and talk about what happened during the

00:06:05,199 --> 00:06:09,280
sprint

00:06:06,240 --> 00:06:11,039
not just we finished this item and now

00:06:09,280 --> 00:06:11,680
we can support this feature and we fix

00:06:11,039 --> 00:06:15,039
that bug

00:06:11,680 --> 00:06:17,199
but also focus on how did

00:06:15,039 --> 00:06:18,400
we perform as a team what went good and

00:06:17,199 --> 00:06:21,759
what went bad

00:06:18,400 --> 00:06:24,400
and define action items how to improve

00:06:21,759 --> 00:06:24,960
how you work and also improve the agile

00:06:24,400 --> 00:06:27,759
practices

00:06:24,960 --> 00:06:28,160
themselves so for example i said we

00:06:27,759 --> 00:06:31,520
dropped

00:06:28,160 --> 00:06:33,919
the stand-up meetings at all and we

00:06:31,520 --> 00:06:35,840
utilized the retrospective meeting to

00:06:33,919 --> 00:06:37,600
bring them back in talk about how can we

00:06:35,840 --> 00:06:42,240
make stand-ups useful

00:06:37,600 --> 00:06:44,000
and evolve also our personal

00:06:42,240 --> 00:06:46,400
agile framework that we want to add up

00:06:44,000 --> 00:06:46,400
in the team

00:06:47,120 --> 00:06:50,560
often those retrospective meetings are

00:06:49,120 --> 00:06:53,919
considered very boring

00:06:50,560 --> 00:06:54,319
and not very helpful and people come up

00:06:53,919 --> 00:06:56,960
with

00:06:54,319 --> 00:06:58,240
all kinds of ideas to to make it more

00:06:56,960 --> 00:07:00,880
interesting more fun

00:06:58,240 --> 00:07:01,520
like put retrospective games in place

00:07:00,880 --> 00:07:03,520
you can

00:07:01,520 --> 00:07:04,720
look up several different games to play

00:07:03,520 --> 00:07:06,880
retrospectives

00:07:04,720 --> 00:07:07,840
but i can't recommend that because i

00:07:06,880 --> 00:07:09,680
think

00:07:07,840 --> 00:07:11,039
those retro games just make their

00:07:09,680 --> 00:07:14,479
retrospective less

00:07:11,039 --> 00:07:16,240
authentic um so i can only advise to

00:07:14,479 --> 00:07:18,240
focus on the content and that is

00:07:16,240 --> 00:07:20,639
what did what did go good and what

00:07:18,240 --> 00:07:23,440
didn't go good and then

00:07:20,639 --> 00:07:24,560
um define action items from there and

00:07:23,440 --> 00:07:25,440
improve and check in the next

00:07:24,560 --> 00:07:28,160
retrospective

00:07:25,440 --> 00:07:30,160
if things are better so really focusing

00:07:28,160 --> 00:07:34,080
on on the content instead of

00:07:30,160 --> 00:07:34,080
trying to play games to make it more fun

00:07:34,800 --> 00:07:38,720
so now we talked about the the stand up

00:07:36,639 --> 00:07:42,080
already and that we brought it back in

00:07:38,720 --> 00:07:43,440
what we had in the end had or what we

00:07:42,080 --> 00:07:45,280
are doing now is

00:07:43,440 --> 00:07:47,199
performing stand-up meetings twice a

00:07:45,280 --> 00:07:50,879
week not every day

00:07:47,199 --> 00:07:52,879
and um

00:07:50,879 --> 00:07:54,319
this is in the end an outcome of the

00:07:52,879 --> 00:07:55,840
retrospective i

00:07:54,319 --> 00:07:57,599
i brought that point up because i think

00:07:55,840 --> 00:08:00,160
it's really important to to

00:07:57,599 --> 00:08:01,840
stay in touch with a team and to have a

00:08:00,160 --> 00:08:02,479
feeling of what everybody is working on

00:08:01,840 --> 00:08:04,160
and also

00:08:02,479 --> 00:08:05,680
a forum where everybody can put

00:08:04,160 --> 00:08:07,840
questions everybody can

00:08:05,680 --> 00:08:10,400
raise concerns or tell what's blocking

00:08:07,840 --> 00:08:13,759
him and where they need help

00:08:10,400 --> 00:08:15,919
and i think it's it's very important to

00:08:13,759 --> 00:08:17,360
to have some meeting where everybody

00:08:15,919 --> 00:08:18,800
where the whole team gets together and

00:08:17,360 --> 00:08:20,080
talks about what

00:08:18,800 --> 00:08:22,160
what's going on so you have a feeling

00:08:20,080 --> 00:08:23,280
what the direction of the overall team

00:08:22,160 --> 00:08:27,759
is that you're

00:08:23,280 --> 00:08:30,720
um that you're working in

00:08:27,759 --> 00:08:31,599
so how comes you you put daily stand-ups

00:08:30,720 --> 00:08:33,200
in question

00:08:31,599 --> 00:08:34,800
and as i said before if you're spread

00:08:33,200 --> 00:08:37,440
across multiple time zones

00:08:34,800 --> 00:08:38,800
it's um it's hard to find a spot where

00:08:37,440 --> 00:08:41,440
you can meet every day

00:08:38,800 --> 00:08:43,279
and so some of the teams in the sre

00:08:41,440 --> 00:08:44,399
organization decided to do the stand-ups

00:08:43,279 --> 00:08:47,120
not in person

00:08:44,399 --> 00:08:48,720
but have a daily reminder on slack where

00:08:47,120 --> 00:08:52,160
then everybody puts the

00:08:48,720 --> 00:08:53,200
um the stand up that's what i did that's

00:08:52,160 --> 00:08:54,480
what i'm doing today that's what's

00:08:53,200 --> 00:08:56,640
locking me into that

00:08:54,480 --> 00:08:58,560
slack thread so everybody can do the

00:08:56,640 --> 00:09:01,040
stand up when when they join

00:08:58,560 --> 00:09:02,959
but for us in since we're not too

00:09:01,040 --> 00:09:06,080
scattered in this team

00:09:02,959 --> 00:09:07,519
um we do the in-person standup at the

00:09:06,080 --> 00:09:08,160
time that it's suitable for everybody on

00:09:07,519 --> 00:09:10,320
the team

00:09:08,160 --> 00:09:12,560
and do it only twice a week which was

00:09:10,320 --> 00:09:15,760
for us enough

00:09:12,560 --> 00:09:17,600
to update each other and talk about what

00:09:15,760 --> 00:09:19,600
happened

00:09:17,600 --> 00:09:21,600
and as i said i can only encourage to

00:09:19,600 --> 00:09:23,200
utilize the retrospective to figure out

00:09:21,600 --> 00:09:25,839
the right way

00:09:23,200 --> 00:09:28,640
to perform stand-ups rather than just

00:09:25,839 --> 00:09:28,640
dropping them at all

00:09:31,760 --> 00:09:36,320
the next agile practice i want to

00:09:34,880 --> 00:09:38,480
advertise here is the

00:09:36,320 --> 00:09:39,839
the planning meeting it's also something

00:09:38,480 --> 00:09:41,839
we adopted from scrum

00:09:39,839 --> 00:09:43,519
probably we should re-label it because

00:09:41,839 --> 00:09:46,399
what we do is not

00:09:43,519 --> 00:09:46,959
um what you typically have in scrum

00:09:46,399 --> 00:09:48,560
planning

00:09:46,959 --> 00:09:50,399
a long planning meeting in the beginning

00:09:48,560 --> 00:09:52,000
of the sprint of the iteration

00:09:50,399 --> 00:09:54,160
and where you commit to sprint goals

00:09:52,000 --> 00:09:57,760
estimate um

00:09:54,160 --> 00:10:00,000
and commit to a sprint goal but what we

00:09:57,760 --> 00:10:03,040
do is we conduct

00:10:00,000 --> 00:10:03,519
a meeting every week on monday which is

00:10:03,040 --> 00:10:05,440
only

00:10:03,519 --> 00:10:07,120
half an hour to talk about the backlog

00:10:05,440 --> 00:10:09,440
items which are currently in the sprint

00:10:07,120 --> 00:10:12,000
and rebalance the priorities that we

00:10:09,440 --> 00:10:16,000
have in those backlog items

00:10:12,000 --> 00:10:19,519
so what often happens in an sre team is

00:10:16,000 --> 00:10:22,000
the the the team

00:10:19,519 --> 00:10:22,959
which is on shift realizes some bug

00:10:22,000 --> 00:10:26,640
something that is

00:10:22,959 --> 00:10:29,360
creating that is a source of

00:10:26,640 --> 00:10:30,720
huge amount of toil that you want to

00:10:29,360 --> 00:10:34,240
fight immediately

00:10:30,720 --> 00:10:35,920
and by rebalancing the sprint priorities

00:10:34,240 --> 00:10:38,000
every week we can

00:10:35,920 --> 00:10:39,360
we can quickly react to such situations

00:10:38,000 --> 00:10:41,200
create new backlog items

00:10:39,360 --> 00:10:43,040
and put them into the sprint and

00:10:41,200 --> 00:10:45,120
probably at a high priority because they

00:10:43,040 --> 00:10:48,079
might be very painful to

00:10:45,120 --> 00:10:49,200
whoever is currently on shift so it's

00:10:48,079 --> 00:10:51,760
not exactly a sprint

00:10:49,200 --> 00:10:52,720
planning but it's more a rebalancing and

00:10:51,760 --> 00:10:54,160
making sure that

00:10:52,720 --> 00:10:56,240
the top priorities that a team is

00:10:54,160 --> 00:11:00,480
working on are understood by everybody

00:10:56,240 --> 00:11:02,480
so everybody is able to pick up the next

00:11:00,480 --> 00:11:04,160
top priority item when the current item

00:11:02,480 --> 00:11:06,720
is finished

00:11:04,160 --> 00:11:09,040
we even estimate those backlog items

00:11:06,720 --> 00:11:10,880
even if we don't

00:11:09,040 --> 00:11:13,200
commit to a sprint goal we still

00:11:10,880 --> 00:11:16,880
estimate them because estimating

00:11:13,200 --> 00:11:18,160
items is useful to foster discussion

00:11:16,880 --> 00:11:20,880
about the backlog items

00:11:18,160 --> 00:11:20,880
so it's not

00:11:23,279 --> 00:11:26,880
it's it's not about finding out the

00:11:25,600 --> 00:11:28,800
velocity it's more to

00:11:26,880 --> 00:11:30,560
to make sure everybody understands what

00:11:28,800 --> 00:11:32,000
what this is about and why

00:11:30,560 --> 00:11:33,360
somebody thinks it's complex and

00:11:32,000 --> 00:11:35,839
somebody else thinks it's it's less

00:11:33,360 --> 00:11:35,839
complex

00:11:39,279 --> 00:11:44,800
okay so that's enough for meetings

00:11:42,560 --> 00:11:46,160
another thing is testing and why did i

00:11:44,800 --> 00:11:49,360
put this here

00:11:46,160 --> 00:11:51,200
in in the sre world we often write

00:11:49,360 --> 00:11:53,040
software that replaces

00:11:51,200 --> 00:11:54,399
things that have have been previously

00:11:53,040 --> 00:11:57,440
manual actions or

00:11:54,399 --> 00:11:58,079
bash scripts and then sometimes you

00:11:57,440 --> 00:12:01,040
think

00:11:58,079 --> 00:12:02,720
why why should i test this rudimentary

00:12:01,040 --> 00:12:06,800
operations tasks

00:12:02,720 --> 00:12:08,959
and now that we are writing

00:12:06,800 --> 00:12:10,000
automating those operations tasks in in

00:12:08,959 --> 00:12:12,320
code we actually

00:12:10,000 --> 00:12:14,160
have the ability to write tests for it

00:12:12,320 --> 00:12:16,320
and we can make use of

00:12:14,160 --> 00:12:17,519
of tests just as in every other piece of

00:12:16,320 --> 00:12:20,480
software

00:12:17,519 --> 00:12:22,320
and what tests do everywhere else is

00:12:20,480 --> 00:12:22,800
they increase the confidence in the code

00:12:22,320 --> 00:12:24,720
that you

00:12:22,800 --> 00:12:26,320
that you write they not only ensure that

00:12:24,720 --> 00:12:26,880
there are no bugs they help structure

00:12:26,320 --> 00:12:29,760
the code

00:12:26,880 --> 00:12:30,320
make it make it better readable and they

00:12:29,760 --> 00:12:33,680
do just

00:12:30,320 --> 00:12:35,440
the same for that simple

00:12:33,680 --> 00:12:37,440
operations script that you're now

00:12:35,440 --> 00:12:39,839
automating

00:12:37,440 --> 00:12:39,839
and

00:12:40,720 --> 00:12:45,519
yeah when you have tests refactoring

00:12:44,160 --> 00:12:47,760
your code to make it more readable

00:12:45,519 --> 00:12:49,760
is much easier because you don't have to

00:12:47,760 --> 00:12:51,200
fear everything breaks because you know

00:12:49,760 --> 00:12:54,399
you have a good test suite that will

00:12:51,200 --> 00:12:56,240
ensure that the base functionality is

00:12:54,399 --> 00:12:57,680
still in place

00:12:56,240 --> 00:12:59,839
and this confidence is even more

00:12:57,680 --> 00:13:00,880
important in an sre team where the code

00:12:59,839 --> 00:13:02,880
that you're

00:13:00,880 --> 00:13:04,800
writing is running unattendedly on a

00:13:02,880 --> 00:13:08,079
number of customer

00:13:04,800 --> 00:13:11,519
systems customer clusters and

00:13:08,079 --> 00:13:12,320
performs operations in parallel on all

00:13:11,519 --> 00:13:14,399
those systems

00:13:12,320 --> 00:13:16,079
so when i push something to the

00:13:14,399 --> 00:13:17,519
production environment i want to really

00:13:16,079 --> 00:13:19,519
make sure that i don't wipe

00:13:17,519 --> 00:13:20,800
accidentally customer data so i really

00:13:19,519 --> 00:13:23,440
want to get

00:13:20,800 --> 00:13:24,480
all all the confidence that i can get

00:13:23,440 --> 00:13:27,440
into my code

00:13:24,480 --> 00:13:30,079
and that's what you get from from a good

00:13:27,440 --> 00:13:30,079
test suite

00:13:32,880 --> 00:13:36,800
okay so speaking of confidence the next

00:13:35,120 --> 00:13:39,120
um topic is as well

00:13:36,800 --> 00:13:40,240
about confidence in the code and quality

00:13:39,120 --> 00:13:43,600
of the code

00:13:40,240 --> 00:13:46,079
and but first let me share with you the

00:13:43,600 --> 00:13:47,839
my worst and best onboarding experiences

00:13:46,079 --> 00:13:48,399
i made in my carrier and the worst one

00:13:47,839 --> 00:13:51,279
was

00:13:48,399 --> 00:13:53,120
i joined the team and the my mentor gave

00:13:51,279 --> 00:13:55,199
me a book and told me read this book

00:13:53,120 --> 00:13:57,519
and we meet at the end of the week and

00:13:55,199 --> 00:13:59,760
you tell me what you learned

00:13:57,519 --> 00:14:02,320
so i spent the whole week not knowing

00:13:59,760 --> 00:14:04,560
which parts of that book are important

00:14:02,320 --> 00:14:06,160
which part of the product i'm will i'm

00:14:04,560 --> 00:14:09,199
even supposed to work on

00:14:06,160 --> 00:14:10,800
and if i should reach out to to my

00:14:09,199 --> 00:14:14,000
mentor with questions

00:14:10,800 --> 00:14:15,600
and i didn't have much confidence in

00:14:14,000 --> 00:14:17,680
what i was doing in that week because it

00:14:15,600 --> 00:14:21,199
was also my very first job that i

00:14:17,680 --> 00:14:22,560
that i ever joined right so this was

00:14:21,199 --> 00:14:24,800
not the best experience you shouldn't do

00:14:22,560 --> 00:14:25,360
that and the best onboarding experience

00:14:24,800 --> 00:14:27,760
was

00:14:25,360 --> 00:14:30,079
when i sat down with a member of the

00:14:27,760 --> 00:14:31,600
team and we worked together on

00:14:30,079 --> 00:14:34,000
on the current task that that team

00:14:31,600 --> 00:14:35,760
member was currently working on

00:14:34,000 --> 00:14:36,880
and thereby we created all the accounts

00:14:35,760 --> 00:14:38,079
that we needed you know when you join a

00:14:36,880 --> 00:14:40,399
new team you need to create

00:14:38,079 --> 00:14:41,120
i don't know gitlab accounts and an

00:14:40,399 --> 00:14:44,000
account here

00:14:41,120 --> 00:14:45,760
and generate keys distribute keys there

00:14:44,000 --> 00:14:49,279
and we did all that while working

00:14:45,760 --> 00:14:51,839
on that task so i got already used to

00:14:49,279 --> 00:14:53,600
the tools that a team

00:14:51,839 --> 00:14:55,279
was using and i built a relationship

00:14:53,600 --> 00:14:57,760
with the team with the members that i

00:14:55,279 --> 00:14:59,600
set together and at the same time

00:14:57,760 --> 00:15:02,800
automatically all my accounts get

00:14:59,600 --> 00:15:05,600
got created and i was productive

00:15:02,800 --> 00:15:08,480
and contributed content to to the

00:15:05,600 --> 00:15:10,160
teamwork on the first day

00:15:08,480 --> 00:15:11,760
so the the next practice that i want to

00:15:10,160 --> 00:15:13,680
encourage everybody to

00:15:11,760 --> 00:15:15,279
to use to make use of is pair

00:15:13,680 --> 00:15:17,440
programming and

00:15:15,279 --> 00:15:18,959
that's especially useful for onboarding

00:15:17,440 --> 00:15:20,560
new team members

00:15:18,959 --> 00:15:22,240
especially in a distributed environment

00:15:20,560 --> 00:15:24,880
where you you can easily

00:15:22,240 --> 00:15:26,399
feel lost or disconnected especially

00:15:24,880 --> 00:15:29,120
when you're new

00:15:26,399 --> 00:15:30,240
and they're sitting together with

00:15:29,120 --> 00:15:31,839
somebody to

00:15:30,240 --> 00:15:34,320
to just work on whatever you're working

00:15:31,839 --> 00:15:36,480
on is very helpful

00:15:34,320 --> 00:15:37,360
it's not only helpful for onboarding

00:15:36,480 --> 00:15:39,360
it's also

00:15:37,360 --> 00:15:40,880
useful for all the code that you develop

00:15:39,360 --> 00:15:42,880
in the in the team

00:15:40,880 --> 00:15:44,000
the code will benefit it will be about

00:15:42,880 --> 00:15:47,040
better quality

00:15:44,000 --> 00:15:48,639
because um if one developer is working

00:15:47,040 --> 00:15:52,079
alone on the code

00:15:48,639 --> 00:15:53,600
you on on one hand you get stuck easily

00:15:52,079 --> 00:15:55,839
and when you're working with another

00:15:53,600 --> 00:15:59,199
developer the other one might know

00:15:55,839 --> 00:16:02,000
um an answer to your question or

00:15:59,199 --> 00:16:02,800
might have a new idea to follow and also

00:16:02,000 --> 00:16:04,480
when you're

00:16:02,800 --> 00:16:05,920
working in a pair it's much less

00:16:04,480 --> 00:16:07,600
probable that you will

00:16:05,920 --> 00:16:09,680
take a shortcut and do the quick and

00:16:07,600 --> 00:16:12,079
dirty way then the clean way because

00:16:09,680 --> 00:16:13,920
the other one will point it out and say

00:16:12,079 --> 00:16:16,959
shouldn't we do it

00:16:13,920 --> 00:16:19,600
like this and

00:16:16,959 --> 00:16:20,959
also the the knowledge of that part of

00:16:19,600 --> 00:16:22,880
the code that you're working on that new

00:16:20,959 --> 00:16:23,360
feature that bug fix is automatically

00:16:22,880 --> 00:16:26,800
shared

00:16:23,360 --> 00:16:28,959
with um with it with a pair so

00:16:26,800 --> 00:16:30,079
you don't have to sit together and talk

00:16:28,959 --> 00:16:32,079
to it later to

00:16:30,079 --> 00:16:33,920
to describe it because you already at

00:16:32,079 --> 00:16:35,759
least in that pair know what's going on

00:16:33,920 --> 00:16:38,880
and so the knowledge is spread

00:16:35,759 --> 00:16:39,759
automatically and even the the code

00:16:38,880 --> 00:16:42,800
review as you

00:16:39,759 --> 00:16:44,959
as you have today might not be um

00:16:42,800 --> 00:16:46,800
too important because you already have a

00:16:44,959 --> 00:16:48,000
rev one review automatically that

00:16:46,800 --> 00:16:50,079
doesn't mean you shouldn't perform

00:16:48,000 --> 00:16:51,600
reviews when you do pair programming

00:16:50,079 --> 00:16:53,680
you can you can do that when you think

00:16:51,600 --> 00:16:54,959
you need something but you don't need to

00:16:53,680 --> 00:16:57,600
have

00:16:54,959 --> 00:16:59,120
a review for everything you can your

00:16:57,600 --> 00:17:02,399
code is automatically reviewed

00:16:59,120 --> 00:17:04,559
or seen by at least one other developer

00:17:02,399 --> 00:17:05,439
but not only for the development is pair

00:17:04,559 --> 00:17:08,480
programming

00:17:05,439 --> 00:17:10,880
useful it's also when when performing

00:17:08,480 --> 00:17:12,799
manual interactions with a system as

00:17:10,880 --> 00:17:14,000
sres do from time to time to resolve

00:17:12,799 --> 00:17:17,039
incidents

00:17:14,000 --> 00:17:19,679
um it's useful there as well

00:17:17,039 --> 00:17:20,640
for the confidence again that whatever

00:17:19,679 --> 00:17:22,160
you're doing

00:17:20,640 --> 00:17:23,439
your manual interaction the commands

00:17:22,160 --> 00:17:24,000
that you're entering in the command line

00:17:23,439 --> 00:17:26,240
that don't

00:17:24,000 --> 00:17:27,360
they don't break the customer system

00:17:26,240 --> 00:17:30,640
because someone else

00:17:27,360 --> 00:17:32,880
will see them so you

00:17:30,640 --> 00:17:34,640
you already know that at least two

00:17:32,880 --> 00:17:35,600
developers think it's a good idea to do

00:17:34,640 --> 00:17:38,160
what you're

00:17:35,600 --> 00:17:38,160
trying to do

00:17:40,880 --> 00:17:44,720
okay those were the the five practices i

00:17:43,360 --> 00:17:48,320
wanted to share with you

00:17:44,720 --> 00:17:50,400
and um if i can give you only one

00:17:48,320 --> 00:17:51,919
to take home i would say take the

00:17:50,400 --> 00:17:53,280
retrospective to your team

00:17:51,919 --> 00:17:55,360
and start talking about how you're

00:17:53,280 --> 00:17:56,559
performing and what do you think where

00:17:55,360 --> 00:18:00,240
you can

00:17:56,559 --> 00:18:02,559
uh where you should adopt to get to um

00:18:00,240 --> 00:18:03,679
a better place to to adopt your

00:18:02,559 --> 00:18:06,400
practices

00:18:03,679 --> 00:18:08,480
so that you all feel comfortable with

00:18:06,400 --> 00:18:12,799
and have the right amount of meetings

00:18:08,480 --> 00:18:12,799
and asynchronous ways of communication

00:18:12,880 --> 00:18:17,200
and in the end that means the agile

00:18:15,840 --> 00:18:19,039
framework that you have

00:18:17,200 --> 00:18:20,400
shouldn't be static you should evolve it

00:18:19,039 --> 00:18:22,559
over time and

00:18:20,400 --> 00:18:23,919
in every iteration after every iteration

00:18:22,559 --> 00:18:27,360
talk about how it went

00:18:23,919 --> 00:18:29,120
and improve um

00:18:27,360 --> 00:18:31,440
how you're doing and and how you're

00:18:29,120 --> 00:18:31,440
working

00:18:32,799 --> 00:18:36,160
so that's all i have for today thanks

00:18:35,280 --> 00:18:39,440
for listening

00:18:36,160 --> 00:18:41,039
um if you have any questions you can

00:18:39,440 --> 00:18:43,840
ask questions now or reach out on

00:18:41,039 --> 00:18:43,840
discord

00:18:44,160 --> 00:18:51,840
or by ml thank you manuel

00:18:48,400 --> 00:18:52,799
uh we have one more question uh in the q

00:18:51,840 --> 00:18:55,919
a

00:18:52,799 --> 00:18:58,799
uh from balash boccarade

00:18:55,919 --> 00:19:02,799
would you prefer a retrospective with or

00:18:58,799 --> 00:19:02,799
without the manager participating

00:19:04,640 --> 00:19:10,080
um so we do retrospectives without

00:19:07,120 --> 00:19:12,240
manager i think it's um

00:19:10,080 --> 00:19:13,679
it's up to the team um you can ask the

00:19:12,240 --> 00:19:16,160
team to to decide that

00:19:13,679 --> 00:19:16,720
you can even do that in a retrospective

00:19:16,160 --> 00:19:20,000
right

00:19:16,720 --> 00:19:22,160
um i've seen managers who wanted to take

00:19:20,000 --> 00:19:25,679
part of some of their retrospectives

00:19:22,160 --> 00:19:27,200
but then the content is a bit different

00:19:25,679 --> 00:19:28,000
because some people might not feel

00:19:27,200 --> 00:19:30,080
comfortable

00:19:28,000 --> 00:19:31,200
uh talking about some things while the

00:19:30,080 --> 00:19:33,440
manager is there and

00:19:31,200 --> 00:19:35,360
and think they need to look good in

00:19:33,440 --> 00:19:39,039
front of the manager or whatever

00:19:35,360 --> 00:19:41,840
that might be true or not but it's um

00:19:39,039 --> 00:19:43,200
i think you should at least have the the

00:19:41,840 --> 00:19:44,640
content of everybody on the team

00:19:43,200 --> 00:19:46,080
everybody should feel safe to talk in

00:19:44,640 --> 00:19:52,320
the retrospective that's what you need

00:19:46,080 --> 00:19:52,320

YouTube URL: https://www.youtube.com/watch?v=0krxyu1Ydjg


