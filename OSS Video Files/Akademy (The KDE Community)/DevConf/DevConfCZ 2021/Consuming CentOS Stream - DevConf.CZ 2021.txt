Title: Consuming CentOS Stream - DevConf.CZ 2021
Publication date: 2021-03-19
Playlist: DevConfCZ 2021
Description: 
	Speakers: Tomas Tomecek, Brian Stinson, Carl George

This is the place where you can try CentOS Stream. What’s that? It’s the latest development version of Red Hat Enterprise Linux 8. You have a unique opportunity now since all the CentOS Stream developers will be present and can answer your questions.

This is not just a Q&A session, we’ll show you how to get CentOS Stream, what are all the delivery mechanisms, how to migrate from CentOS Linux 8 to CentOS Stream and may also peek behind the scenes how the distribution is being made.

We suggest downloading a VM image before the workshop to save time: https://www.centos.org/centos-stream/

Here is the content for the workshop: https://github.com/CentOS/workshops/tree/main/consuming-centos-stream



Schedule: https://sched.co/gmSG
Captions: 
	00:00:01,920 --> 00:00:05,600
i'm thomas uh

00:00:03,600 --> 00:00:07,279
and i'm product owner for package

00:00:05,600 --> 00:00:10,559
project and here we have

00:00:07,279 --> 00:00:11,679
brian the late of the sentence project

00:00:10,559 --> 00:00:13,200
or like

00:00:11,679 --> 00:00:15,679
oh actually brian can you introduce

00:00:13,200 --> 00:00:17,760
yourself

00:00:15,679 --> 00:00:19,680
sure uh yeah my name is brian stinson

00:00:17,760 --> 00:00:22,720
i'm the technical lead for

00:00:19,680 --> 00:00:23,439
uh the centos stream team uh we work in

00:00:22,720 --> 00:00:25,840
the

00:00:23,439 --> 00:00:30,000
community platform engineering group uh

00:00:25,840 --> 00:00:31,359
here at red hat

00:00:30,000 --> 00:00:34,000
tomas i think you're going to start us

00:00:31,359 --> 00:00:35,520
off with uh

00:00:34,000 --> 00:00:37,360
talking a little bit about containers

00:00:35,520 --> 00:00:39,440
and all that stuff and then we'll go

00:00:37,360 --> 00:00:42,559
back and forth

00:00:39,440 --> 00:00:45,840
we'll have a few different interesting

00:00:42,559 --> 00:00:49,039
ways that you can consume center stream

00:00:45,840 --> 00:00:50,879
yeah okay i'm i'm going to share my

00:00:49,039 --> 00:00:52,879
screen and before i do that so if you

00:00:50,879 --> 00:00:56,160
want to participate yourselves

00:00:52,879 --> 00:00:56,960
uh jen posted links to the content of

00:00:56,160 --> 00:01:00,000
the workshop

00:00:56,960 --> 00:01:02,079
and also to uh

00:01:00,000 --> 00:01:04,559
like a 2a how you can download your

00:01:02,079 --> 00:01:06,720
either vm images or container images and

00:01:04,559 --> 00:01:08,960
it would be great if you did it right

00:01:06,720 --> 00:01:10,479
now for example for me it took me like

00:01:08,960 --> 00:01:12,799
five minutes to download the

00:01:10,479 --> 00:01:13,520
vagrant boxes so if you want to

00:01:12,799 --> 00:01:16,320
participate

00:01:13,520 --> 00:01:18,479
please download them now thank you jen

00:01:16,320 --> 00:01:20,720
and i'm going to share my screen right

00:01:18,479 --> 00:01:20,720
now

00:01:21,119 --> 00:01:24,479
and here you can see my terminal uh in

00:01:23,920 --> 00:01:28,159
the

00:01:24,479 --> 00:01:29,439
today like upper side the i'll have my

00:01:28,159 --> 00:01:33,200
notes

00:01:29,439 --> 00:01:35,360
and i hope that it's not too disrupting

00:01:33,200 --> 00:01:37,840
and on the bottom side that's where i'll

00:01:35,360 --> 00:01:40,479
be running my commands

00:01:37,840 --> 00:01:41,920
so one of the ways you can actually

00:01:40,479 --> 00:01:46,159
consume center stream

00:01:41,920 --> 00:01:47,680
is via container images and

00:01:46,159 --> 00:01:49,520
i hope that i don't need to introduce

00:01:47,680 --> 00:01:51,680
what container images are

00:01:49,520 --> 00:01:52,640
since we're in devconf and this is a hot

00:01:51,680 --> 00:01:56,079
topic

00:01:52,640 --> 00:01:57,920
past five years i would say

00:01:56,079 --> 00:01:59,119
so the container images for center

00:01:57,920 --> 00:02:03,360
stream i hosted

00:01:59,119 --> 00:02:07,200
at quay.io in the center's namespace

00:02:03,360 --> 00:02:08,560
you can see the link right over here

00:02:07,200 --> 00:02:10,959
they are available in three

00:02:08,560 --> 00:02:14,239
architectures uh the normal

00:02:10,959 --> 00:02:15,120
md64 which is probably what your laptop

00:02:14,239 --> 00:02:18,000
has

00:02:15,120 --> 00:02:18,720
and then the additional ones are arm 64

00:02:18,000 --> 00:02:23,360
and

00:02:18,720 --> 00:02:26,160
uh power pc 64 a little in the end

00:02:23,360 --> 00:02:26,959
and obviously i'm gonna be using the one

00:02:26,160 --> 00:02:29,599
for intel

00:02:26,959 --> 00:02:30,720
because i don't have the other hardware

00:02:29,599 --> 00:02:34,560
i have raspberry pi

00:02:30,720 --> 00:02:34,560
but it's still 32 bit so

00:02:34,640 --> 00:02:42,640
uh okay so let's let's pull the image

00:02:38,400 --> 00:02:45,760
and i already did that and

00:02:42,640 --> 00:02:46,080
so it will be very quick actually if you

00:02:45,760 --> 00:02:47,840
are

00:02:46,080 --> 00:02:49,920
familiar with podman and this is

00:02:47,840 --> 00:02:51,760
something with carl mentioned to me when

00:02:49,920 --> 00:02:55,120
we were preparing this workshop

00:02:51,760 --> 00:02:58,640
there's a feature in podman 3.0

00:02:55,120 --> 00:03:01,040
called short names so when you are in

00:02:58,640 --> 00:03:02,400
when you are using podman 3 you can

00:03:01,040 --> 00:03:05,840
actually just do

00:03:02,400 --> 00:03:05,840
old man

00:03:06,720 --> 00:03:11,519
and it will work it will figure out that

00:03:09,040 --> 00:03:15,680
the home for this centos image

00:03:11,519 --> 00:03:18,400
is quay so that's gonna be even shorter

00:03:15,680 --> 00:03:19,519
so now we have our image here i have it

00:03:18,400 --> 00:03:23,280
on my laptop

00:03:19,519 --> 00:03:27,360
and i can invoke it and try it out

00:03:23,280 --> 00:03:31,040
so let's do that so i'm doing

00:03:27,360 --> 00:03:33,120
a dash dash rm so that it's just like a

00:03:31,040 --> 00:03:34,319
throwaway container that i don't want it

00:03:33,120 --> 00:03:37,760
to linger on my

00:03:34,319 --> 00:03:38,400
host and t i are so that we can actually

00:03:37,760 --> 00:03:41,840
run

00:03:38,400 --> 00:03:44,000
uh bash inside

00:03:41,840 --> 00:03:45,040
and that's it i am running center stream

00:03:44,000 --> 00:03:48,080
right now on my

00:03:45,040 --> 00:03:51,920
federal laptop and

00:03:48,080 --> 00:03:55,760
let's see if that's actually a reality

00:03:51,920 --> 00:03:58,840
so i'm gonna scroll

00:03:55,760 --> 00:04:01,840
and look at what's inside let's see this

00:03:58,840 --> 00:04:01,840
release

00:04:02,480 --> 00:04:07,680
and you can see that this is in this in

00:04:04,560 --> 00:04:07,680
the center stream 8

00:04:07,760 --> 00:04:10,879
and for me this is actually a really

00:04:09,599 --> 00:04:12,959
great way to try

00:04:10,879 --> 00:04:14,239
different like operating systems or

00:04:12,959 --> 00:04:17,280
versions or

00:04:14,239 --> 00:04:19,759
i usually do this when i

00:04:17,280 --> 00:04:21,040
uh when i want to see like what version

00:04:19,759 --> 00:04:23,280
of a package is in

00:04:21,040 --> 00:04:24,560
this certain like centos stream or

00:04:23,280 --> 00:04:26,639
fedora 32

00:04:24,560 --> 00:04:27,600
so for me this is super convenient way

00:04:26,639 --> 00:04:29,919
to do it

00:04:27,600 --> 00:04:31,280
although it's a fresh environment so if

00:04:29,919 --> 00:04:33,759
you need to

00:04:31,280 --> 00:04:35,120
i know like test something or try

00:04:33,759 --> 00:04:37,360
something you can get

00:04:35,120 --> 00:04:38,160
fresh environment like this very easily

00:04:37,360 --> 00:04:41,280
and it's

00:04:38,160 --> 00:04:45,199
super productive for me

00:04:41,280 --> 00:04:47,759
uh one thing you can do right now uh

00:04:45,199 --> 00:04:49,040
is you can install packages or you can

00:04:47,759 --> 00:04:51,919
just update it

00:04:49,040 --> 00:04:53,759
uh because like the images and the

00:04:51,919 --> 00:04:56,479
composes or like

00:04:53,759 --> 00:04:58,479
packages have different lives so if i

00:04:56,479 --> 00:04:59,040
run the nf update there is possibility

00:04:58,479 --> 00:05:01,600
that there will

00:04:59,040 --> 00:05:04,000
be some updates so you can do that if

00:05:01,600 --> 00:05:04,000
you want

00:05:06,240 --> 00:05:10,080
and you can see that metadata is being

00:05:09,199 --> 00:05:12,960
downloaded like

00:05:10,080 --> 00:05:12,960
the usual stuff

00:05:13,919 --> 00:05:17,840
so one thing you could also notice uh is

00:05:16,880 --> 00:05:20,400
that i was

00:05:17,840 --> 00:05:21,840
using okay let's not do this right now

00:05:20,400 --> 00:05:24,479
i'm going to

00:05:21,840 --> 00:05:26,320
quit it and one final thing i wanted to

00:05:24,479 --> 00:05:27,280
mention about container images and that

00:05:26,320 --> 00:05:30,479
is that

00:05:27,280 --> 00:05:31,600
i was using the stream 8 as like the tag

00:05:30,479 --> 00:05:34,479
of the image

00:05:31,600 --> 00:05:35,840
and it's actually important to

00:05:34,479 --> 00:05:38,000
distinguish because you

00:05:35,840 --> 00:05:38,960
i could have just done this like without

00:05:38,000 --> 00:05:41,600
the eight

00:05:38,960 --> 00:05:42,160
and i would still it'll still work but

00:05:41,600 --> 00:05:46,080
since

00:05:42,160 --> 00:05:48,080
we'll have sent to steam nine soon like

00:05:46,080 --> 00:05:50,240
i i wouldn't know what exactly is inside

00:05:48,080 --> 00:05:53,199
so it's very good practice to

00:05:50,240 --> 00:05:54,800
actually like pick the actual version so

00:05:53,199 --> 00:05:56,400
that you are not surprised that suddenly

00:05:54,800 --> 00:05:58,319
there are completely different versions

00:05:56,400 --> 00:06:00,639
of things and your software breaks

00:05:58,319 --> 00:06:01,680
like always into a specific version so

00:06:00,639 --> 00:06:04,560
that you know what's

00:06:01,680 --> 00:06:04,560
exactly inside

00:06:05,120 --> 00:06:11,600
uh and that's actually how you can run

00:06:08,319 --> 00:06:14,639
center stream in containers uh

00:06:11,600 --> 00:06:15,600
i'll hand it over to brian so you should

00:06:14,639 --> 00:06:17,280
have a

00:06:15,600 --> 00:06:19,280
cockpit window and a terminal here on

00:06:17,280 --> 00:06:21,199
your screen

00:06:19,280 --> 00:06:22,560
hopefully you can see that the i think

00:06:21,199 --> 00:06:23,520
the next topic that we wanted to talk

00:06:22,560 --> 00:06:26,800
about is

00:06:23,520 --> 00:06:29,440
um what do you do if you have a

00:06:26,800 --> 00:06:30,160
centos linux 8 machine but you want to

00:06:29,440 --> 00:06:32,960
try out

00:06:30,160 --> 00:06:34,800
sent off stream i think one of the um

00:06:32,960 --> 00:06:36,479
one of the important goals that we had

00:06:34,800 --> 00:06:38,479
you know dealing with with all the

00:06:36,479 --> 00:06:39,520
things going on in in the stream world

00:06:38,479 --> 00:06:42,000
right now was

00:06:39,520 --> 00:06:43,280
uh we wanted to make it uh we wanted to

00:06:42,000 --> 00:06:45,919
make it pretty simple

00:06:43,280 --> 00:06:47,120
to take an existing santos linux 8

00:06:45,919 --> 00:06:49,680
machine and just

00:06:47,120 --> 00:06:52,000
migrated over to stream and start uh you

00:06:49,680 --> 00:06:54,240
know getting regular updates and so

00:06:52,000 --> 00:06:55,680
i think jen posted in the chat there uh

00:06:54,240 --> 00:06:57,919
a link to our github

00:06:55,680 --> 00:06:59,680
uh the that's some of the materials that

00:06:57,919 --> 00:07:02,800
we're using for this workshop today

00:06:59,680 --> 00:07:03,759
uh in that uh in that folder there you

00:07:02,800 --> 00:07:07,680
should find

00:07:03,759 --> 00:07:09,280
a vagrant sent us linux upgrade um

00:07:07,680 --> 00:07:11,199
directory that's got a vagrant file

00:07:09,280 --> 00:07:13,280
that'll take you from uh it'll start you

00:07:11,199 --> 00:07:14,880
from a centos linux machine and then

00:07:13,280 --> 00:07:16,800
we can sort of walk through the steps

00:07:14,880 --> 00:07:18,639
here really

00:07:16,800 --> 00:07:20,160
like i said we wanted to make it as easy

00:07:18,639 --> 00:07:22,240
as possible um

00:07:20,160 --> 00:07:24,800
so right now it's it's actually three

00:07:22,240 --> 00:07:26,560
steps uh there's three commands to run

00:07:24,800 --> 00:07:28,639
to take a linux machine upgraded to

00:07:26,560 --> 00:07:31,199
stream in the future

00:07:28,639 --> 00:07:32,560
uh we're kind of moving around uh some

00:07:31,199 --> 00:07:34,880
of the packages and where they live

00:07:32,560 --> 00:07:36,720
in all of the different repos we're

00:07:34,880 --> 00:07:40,000
hoping to get that down to

00:07:36,720 --> 00:07:41,599
uh just two steps uh at the end so

00:07:40,000 --> 00:07:43,120
um you can see here on the screen i've

00:07:41,599 --> 00:07:47,680
got my vagrant

00:07:43,120 --> 00:07:47,680
is up so i just need to run in and

00:07:48,240 --> 00:07:51,280
ssh into it

00:07:53,599 --> 00:07:57,680
so if you run into that if you're doing

00:07:55,280 --> 00:07:59,120
this at on your workstation at home

00:07:57,680 --> 00:08:01,199
in that directory just hit vagrant up

00:07:59,120 --> 00:08:03,280
and you'll get to uh to this stage right

00:08:01,199 --> 00:08:06,080
here

00:08:03,280 --> 00:08:06,800
so um to talk a little bit about how

00:08:06,080 --> 00:08:10,400
this works

00:08:06,800 --> 00:08:12,479
uh you know every operating system has

00:08:10,400 --> 00:08:14,160
two different release packages so

00:08:12,479 --> 00:08:16,160
there's one that specifies

00:08:14,160 --> 00:08:17,479
centos linux one that specifies centos

00:08:16,160 --> 00:08:18,960
stream and then there's a set of

00:08:17,479 --> 00:08:21,199
repositories

00:08:18,960 --> 00:08:21,199
that

00:08:22,160 --> 00:08:25,680
basically tell your system you know

00:08:23,520 --> 00:08:26,000
which how to grab the content for each

00:08:25,680 --> 00:08:27,280
of those

00:08:26,000 --> 00:08:29,919
things and that's what we're going to

00:08:27,280 --> 00:08:32,479
swap out here in order to get

00:08:29,919 --> 00:08:33,760
access to some of these uh these repo

00:08:32,479 --> 00:08:35,279
packages

00:08:33,760 --> 00:08:37,200
we're going to run this command we're

00:08:35,279 --> 00:08:41,039
going to sudo

00:08:37,200 --> 00:08:45,040
dnf install centos

00:08:41,039 --> 00:08:47,120
release stream

00:08:45,040 --> 00:08:49,040
and that's just uh this is the step that

00:08:47,120 --> 00:08:50,640
we're you know trying to eliminate in

00:08:49,040 --> 00:08:51,839
the future we're trying to get some

00:08:50,640 --> 00:08:53,760
uh some things in place so you don't

00:08:51,839 --> 00:08:56,800
have to do this but this will get you

00:08:53,760 --> 00:08:59,519
access to the repost packages

00:08:56,800 --> 00:08:59,519
so if you do that

00:09:00,800 --> 00:09:04,480
in the world of live demos where you

00:09:02,640 --> 00:09:07,519
know this always takes longer than you

00:09:04,480 --> 00:09:10,160
uh than it did when you practice

00:09:07,519 --> 00:09:11,200
you should come up with uh you know just

00:09:10,160 --> 00:09:13,680
one package

00:09:11,200 --> 00:09:15,760
that gets added here downloaded yes we

00:09:13,680 --> 00:09:19,680
accept the keys

00:09:15,760 --> 00:09:21,440
and we're good so if you look in the

00:09:19,680 --> 00:09:22,720
in the github as well the the second and

00:09:21,440 --> 00:09:25,200
third steps are there

00:09:22,720 --> 00:09:26,399
we need to run a dnf swap and what

00:09:25,200 --> 00:09:30,000
that's going to do

00:09:26,399 --> 00:09:32,959
is it's going to take um the

00:09:30,000 --> 00:09:35,120
like i said the repos package that

00:09:32,959 --> 00:09:37,440
points your system at centos linux

00:09:35,120 --> 00:09:40,160
swaps it out for a repos package that

00:09:37,440 --> 00:09:43,760
points you at centos stream content

00:09:40,160 --> 00:09:46,240
so that is sudo dnf

00:09:43,760 --> 00:09:46,240
swap

00:09:48,800 --> 00:09:54,000
there we go got it typed out right sent

00:09:50,480 --> 00:09:54,000
us linux repos for

00:09:56,000 --> 00:09:59,120
send us stream repos

00:09:59,279 --> 00:10:03,200
pretty simple and again it's got to do a

00:10:02,160 --> 00:10:07,279
little bit of

00:10:03,200 --> 00:10:07,279
magic here to find all of those packages

00:10:12,959 --> 00:10:16,399
and then it's going to tell us that

00:10:14,079 --> 00:10:19,519
we're you know swapping these things out

00:10:16,399 --> 00:10:21,839
and doing a little bit of um

00:10:19,519 --> 00:10:25,680
of work behind the scenes to get the

00:10:21,839 --> 00:10:25,680
right centos release packages in place

00:10:27,360 --> 00:10:30,880
so if you do that uh basically what we

00:10:30,240 --> 00:10:32,320
did

00:10:30,880 --> 00:10:33,839
was just dropped a whole bunch of yum

00:10:32,320 --> 00:10:36,399
repositories and you can look and see

00:10:33,839 --> 00:10:36,399
what we did

00:10:37,760 --> 00:10:41,680
in etsy yum.repos.d that's where this

00:10:40,720 --> 00:10:44,640
stuff

00:10:41,680 --> 00:10:46,320
lives and you can see the listing here

00:10:44,640 --> 00:10:47,680
those are all repo files pointing

00:10:46,320 --> 00:10:50,720
directly at

00:10:47,680 --> 00:10:51,920
the centos stream repositories we

00:10:50,720 --> 00:10:54,000
haven't quite yet

00:10:51,920 --> 00:10:55,040
migrated because we just told our system

00:10:54,000 --> 00:10:58,959
where to look

00:10:55,040 --> 00:11:03,760
so the migration is the final step here

00:10:58,959 --> 00:11:07,200
sudo dnf distro

00:11:03,760 --> 00:11:10,160
sync and that does a couple of things

00:11:07,200 --> 00:11:10,720
um it does a lot of dependency solving

00:11:10,160 --> 00:11:12,640
and

00:11:10,720 --> 00:11:14,480
things to make sure that you have the

00:11:12,640 --> 00:11:16,959
right versions of the packages

00:11:14,480 --> 00:11:18,480
as they exist in all of those repos that

00:11:16,959 --> 00:11:21,040
we looked at

00:11:18,480 --> 00:11:29,120
and if you look at this once we actually

00:11:21,040 --> 00:11:30,640
grab the metadata

00:11:29,120 --> 00:11:32,320
and do the solving there's a whole bunch

00:11:30,640 --> 00:11:34,720
of packages that it's going to download

00:11:32,320 --> 00:11:36,160
so it looks like we have um you know

00:11:34,720 --> 00:11:38,560
eight new package

00:11:36,160 --> 00:11:39,440
eight new packages 184 packages to

00:11:38,560 --> 00:11:41,760
upgrade

00:11:39,440 --> 00:11:44,720
and then once you hit yes it's going to

00:11:41,760 --> 00:11:44,720
download all of those

00:11:54,240 --> 00:11:57,680
and yeah especially um especially while

00:11:56,560 --> 00:12:00,000
this stuff is running

00:11:57,680 --> 00:12:01,120
uh like tamash said in the chat uh feel

00:12:00,000 --> 00:12:03,360
free to ask questions

00:12:01,120 --> 00:12:04,880
uh post them in the chat and we'll uh

00:12:03,360 --> 00:12:06,000
we'll handle those

00:12:04,880 --> 00:12:10,399
especially while we're looking at a

00:12:06,000 --> 00:12:12,720
little bit of um install time here

00:12:10,399 --> 00:12:14,480
ask a question in the meantime so you

00:12:12,720 --> 00:12:16,320
said that you're trying to trim it to

00:12:14,480 --> 00:12:19,360
just two commands so i'm assuming you

00:12:16,320 --> 00:12:22,399
are eliminating the first one

00:12:19,360 --> 00:12:25,760
that's right that's right so uh

00:12:22,399 --> 00:12:28,079
that first command um basically what

00:12:25,760 --> 00:12:30,880
that does is it gets you access to both

00:12:28,079 --> 00:12:31,839
um centos linux repos and set up stream

00:12:30,880 --> 00:12:34,800
repos

00:12:31,839 --> 00:12:35,920
it tells you where to get uh get those

00:12:34,800 --> 00:12:37,920
in both locations

00:12:35,920 --> 00:12:40,000
we're trying to ship those repo files

00:12:37,920 --> 00:12:41,920
repo packages a little bit differently

00:12:40,000 --> 00:12:43,600
so that you don't need that that first

00:12:41,920 --> 00:12:45,440
step there um

00:12:43,600 --> 00:12:48,079
and you know if you're following along

00:12:45,440 --> 00:12:50,079
waiting for um

00:12:48,079 --> 00:12:52,000
for that to show up we'll definitely be

00:12:50,079 --> 00:12:52,959
announcing that on the santos develop

00:12:52,000 --> 00:12:55,120
mailing lists

00:12:52,959 --> 00:12:56,320
updating our documentation and all that

00:12:55,120 --> 00:12:58,240
stuff whenever we're

00:12:56,320 --> 00:13:00,800
ready to drop that down to uh to two

00:12:58,240 --> 00:13:02,880
steps instead of three

00:13:00,800 --> 00:13:04,240
um so while this is running actually

00:13:02,880 --> 00:13:07,360
we'll

00:13:04,240 --> 00:13:08,079
maybe come back to this um because i

00:13:07,360 --> 00:13:10,720
think

00:13:08,079 --> 00:13:11,680
this may take a little bit a little bit

00:13:10,720 --> 00:13:13,279
more time to run

00:13:11,680 --> 00:13:14,720
i'm sure it's uh if you're following

00:13:13,279 --> 00:13:17,200
along at home it's still running on your

00:13:14,720 --> 00:13:18,399
system too

00:13:17,200 --> 00:13:21,600
but i want to talk a little bit about

00:13:18,399 --> 00:13:24,160
some of the other uh

00:13:21,600 --> 00:13:25,040
the other ways that you can consume

00:13:24,160 --> 00:13:27,279
centos stream

00:13:25,040 --> 00:13:28,480
in various environments because you know

00:13:27,279 --> 00:13:31,920
we had talked about

00:13:28,480 --> 00:13:32,959
doing it in containers we got a little

00:13:31,920 --> 00:13:35,120
peek right here

00:13:32,959 --> 00:13:36,639
at the vagrant boxes because that's you

00:13:35,120 --> 00:13:38,639
know we are publishing

00:13:36,639 --> 00:13:40,560
them for centos linux but i want to talk

00:13:38,639 --> 00:13:42,880
a little bit about uh

00:13:40,560 --> 00:13:44,160
some of the cloud properties that you

00:13:42,880 --> 00:13:46,839
might want to

00:13:44,160 --> 00:13:49,760
uh to use centos stream in and the first

00:13:46,839 --> 00:13:53,040
one we can talk a little bit here about

00:13:49,760 --> 00:13:55,839
uh aws and

00:13:53,040 --> 00:13:58,560
there's a page shot on the wiki um you

00:13:55,839 --> 00:14:01,279
can check it out it's wiki.centos.org

00:13:58,560 --> 00:14:02,560
cloud aws and again all of these links

00:14:01,279 --> 00:14:05,199
are in our

00:14:02,560 --> 00:14:07,120
our github repo there uh this describes

00:14:05,199 --> 00:14:10,560
a little bit about

00:14:07,120 --> 00:14:13,040
um you know all of the amazon machine

00:14:10,560 --> 00:14:15,839
images that we produce as part of our

00:14:13,040 --> 00:14:17,440
build and deliver process and there's

00:14:15,839 --> 00:14:18,800
you know a lot of good documentation in

00:14:17,440 --> 00:14:21,630
here

00:14:18,800 --> 00:14:24,399
if you've got your own ec2

00:14:21,630 --> 00:14:26,320
[Music]

00:14:24,399 --> 00:14:29,040
namespace configured set up you've got

00:14:26,320 --> 00:14:29,040
you know all of your

00:14:29,120 --> 00:14:32,480
private connections and our private

00:14:31,040 --> 00:14:35,120
clouds and all that stuff

00:14:32,480 --> 00:14:36,880
uh you can actually pull this this in we

00:14:35,120 --> 00:14:39,760
automatically keep this

00:14:36,880 --> 00:14:42,079
page up to date whenever we see new

00:14:39,760 --> 00:14:43,519
machine images into aws

00:14:42,079 --> 00:14:45,680
and so if you scroll down a little bit

00:14:43,519 --> 00:14:48,079
on that page you'll see

00:14:45,680 --> 00:14:48,800
um again this is a whole bunch of of

00:14:48,079 --> 00:14:52,720
stream

00:14:48,800 --> 00:14:53,839
eight images seated into each of the

00:14:52,720 --> 00:14:57,199
amazon regions

00:14:53,839 --> 00:14:58,880
and so like let's um

00:14:57,199 --> 00:15:00,240
you know if you do most of your work in

00:14:58,880 --> 00:15:02,720
u.s east one

00:15:00,240 --> 00:15:03,920
then you have a machine id attached to

00:15:02,720 --> 00:15:07,839
that

00:15:03,920 --> 00:15:08,639
that will um it will be best to spin up

00:15:07,839 --> 00:15:11,279
in that

00:15:08,639 --> 00:15:11,279
in that zone

00:15:11,680 --> 00:15:17,279
and even on uh you know down towards the

00:15:15,360 --> 00:15:18,560
uh towards the bottom of the list you

00:15:17,279 --> 00:15:21,600
can even see we have some

00:15:18,560 --> 00:15:22,800
air 64. uh if you want to use some of

00:15:21,600 --> 00:15:26,079
the fancy

00:15:22,800 --> 00:15:29,440
aws hardware

00:15:26,079 --> 00:15:31,279
so let's go back and check on our

00:15:29,440 --> 00:15:33,600
vagrant install looks like it's still

00:15:31,279 --> 00:15:33,600
running

00:15:36,320 --> 00:15:41,839
which is fine

00:15:42,160 --> 00:15:46,880
the other thing that we um that we also

00:15:45,360 --> 00:15:50,480
like to show off a little bit

00:15:46,880 --> 00:15:52,480
is um all of these

00:15:50,480 --> 00:15:54,720
artifacts that we work with you know

00:15:52,480 --> 00:15:57,759
whether we're seeding them into aws

00:15:54,720 --> 00:15:59,440
or you know if you come up across a you

00:15:57,759 --> 00:16:01,839
know another cloud that

00:15:59,440 --> 00:16:02,880
you know maybe we haven't put images in

00:16:01,839 --> 00:16:05,759
ourselves

00:16:02,880 --> 00:16:07,040
we don't have uh official images you

00:16:05,759 --> 00:16:09,440
know posted to

00:16:07,040 --> 00:16:10,880
uh to google compute engine or you know

00:16:09,440 --> 00:16:14,000
any of those places

00:16:10,880 --> 00:16:15,279
but you do have the ability to go out

00:16:14,000 --> 00:16:19,680
and look at our

00:16:15,279 --> 00:16:19,680
um sorry this is the wrong

00:16:20,839 --> 00:16:24,440
tab

00:16:22,720 --> 00:16:27,279
we'll get to the right place here so

00:16:24,440 --> 00:16:30,000
cloud.centos.org is where you can go

00:16:27,279 --> 00:16:31,279
to see if you can get other images for

00:16:30,000 --> 00:16:34,399
other places

00:16:31,279 --> 00:16:35,839
and we publish these on a regular basis

00:16:34,399 --> 00:16:37,600
they do have a little bit of a different

00:16:35,839 --> 00:16:39,279
life cycle than you know some of the

00:16:37,600 --> 00:16:39,920
composers they don't get generated every

00:16:39,279 --> 00:16:42,800
day

00:16:39,920 --> 00:16:44,240
but um but they do come out uh fairly

00:16:42,800 --> 00:16:47,680
frequently

00:16:44,240 --> 00:16:50,800
the uh

00:16:47,680 --> 00:16:52,800
um under the eight stream directory

00:16:50,800 --> 00:16:53,839
you can see some of the ones that we

00:16:52,800 --> 00:16:57,279
publish

00:16:53,839 --> 00:17:01,199
and we've got images for arch 64 um

00:16:57,279 --> 00:17:02,480
power pc uh and a x86 64.

00:17:01,199 --> 00:17:05,039
and so we're going to drill down into

00:17:02,480 --> 00:17:07,199
this directory a little bit

00:17:05,039 --> 00:17:09,039
and you know hint for what's coming

00:17:07,199 --> 00:17:12,000
again you can see we've got

00:17:09,039 --> 00:17:13,439
vagrant boxes for a few different

00:17:12,000 --> 00:17:18,480
versions here

00:17:13,439 --> 00:17:20,000
this is this one right here the standoff

00:17:18,480 --> 00:17:21,039
stream ec2 image

00:17:20,000 --> 00:17:23,039
is the one that we're going to take a

00:17:21,039 --> 00:17:24,959
look at here in just a minute uh

00:17:23,039 --> 00:17:26,400
about spinning that up you know directly

00:17:24,959 --> 00:17:28,400
in in aws

00:17:26,400 --> 00:17:30,000
that's the one that gets translated into

00:17:28,400 --> 00:17:33,360
each of those

00:17:30,000 --> 00:17:35,760
amis for each of the regions

00:17:33,360 --> 00:17:37,520
but then there's this generic cloud

00:17:35,760 --> 00:17:41,039
image

00:17:37,520 --> 00:17:44,080
and that's pretty useful for

00:17:41,039 --> 00:17:46,000
a couple of different uses i actually

00:17:44,080 --> 00:17:48,559
use it sometimes on my workstation when

00:17:46,000 --> 00:17:50,000
i you want to bring up a vm really quick

00:17:48,559 --> 00:17:52,640
um

00:17:50,000 --> 00:17:54,320
it's also really useful if you know you

00:17:52,640 --> 00:17:55,120
have a fairly standard cloud provider

00:17:54,320 --> 00:17:57,039
you can

00:17:55,120 --> 00:17:59,039
you know try uploading this image do

00:17:57,039 --> 00:18:01,520
your thing with cloud in it and

00:17:59,039 --> 00:18:03,520
uh you know a lot of times at all uh

00:18:01,520 --> 00:18:05,880
it'll just work in your

00:18:03,520 --> 00:18:07,840
your cloud name space there so

00:18:05,880 --> 00:18:10,320
cloud.centos.org is a good

00:18:07,840 --> 00:18:11,600
uh is a really good place to go and

00:18:10,320 --> 00:18:14,720
check out if you

00:18:11,600 --> 00:18:14,720
want to end up getting some

00:18:15,760 --> 00:18:20,000
some images to deploy in other places

00:18:21,520 --> 00:18:25,679
so while we're waiting a little bit more

00:18:23,280 --> 00:18:27,360
before we move on to aws

00:18:25,679 --> 00:18:29,039
is anyone following along at home anyone

00:18:27,360 --> 00:18:33,840
else have their

00:18:29,039 --> 00:18:35,360
uh their vagrant set up

00:18:33,840 --> 00:18:37,039
migrated yet it looks like we're just

00:18:35,360 --> 00:18:39,200
about finished

00:18:37,039 --> 00:18:41,679
so brian in the meantime we got several

00:18:39,200 --> 00:18:44,559
questions

00:18:41,679 --> 00:18:45,200
yeah and the first one is from steven

00:18:44,559 --> 00:18:48,240
gallagher

00:18:45,200 --> 00:18:50,080
and he's asking for people who are

00:18:48,240 --> 00:18:52,240
not working for redhead how they can

00:18:50,080 --> 00:18:56,240
contribute new features to stream 8 or

00:18:52,240 --> 00:18:57,760
stream 9.

00:18:56,240 --> 00:18:59,520
ah that's yeah that's a really good

00:18:57,760 --> 00:19:02,080
question um

00:18:59,520 --> 00:19:03,840
so and i think we'll get uh we'll get

00:19:02,080 --> 00:19:07,280
into some details here in just a minute

00:19:03,840 --> 00:19:08,640
um so we know for sure and this is

00:19:07,280 --> 00:19:10,320
you know talking a little bit about

00:19:08,640 --> 00:19:13,200
build processes and

00:19:10,320 --> 00:19:14,320
um and how we get things done in the in

00:19:13,200 --> 00:19:17,360
the project

00:19:14,320 --> 00:19:20,400
um we know centos stream eight

00:19:17,360 --> 00:19:23,919
you can think of it built um

00:19:20,400 --> 00:19:25,919
you know sort of we call it inside out

00:19:23,919 --> 00:19:29,360
and what we mean by that is

00:19:25,919 --> 00:19:32,080
um if you know how

00:19:29,360 --> 00:19:34,000
centos stream works in relation to rel

00:19:32,080 --> 00:19:37,200
it's meant to be a development location

00:19:34,000 --> 00:19:39,440
it represents content that's coming in a

00:19:37,200 --> 00:19:41,280
you know upcoming minor release of

00:19:39,440 --> 00:19:45,280
redhead enterprise linux

00:19:41,280 --> 00:19:48,160
um so stream 8

00:19:45,280 --> 00:19:48,640
it's uh it's consumable you can see it

00:19:48,160 --> 00:19:50,880
you know

00:19:48,640 --> 00:19:52,240
here in the artifacts that you have

00:19:50,880 --> 00:19:54,160
really

00:19:52,240 --> 00:19:55,280
this is not the contribution workflow

00:19:54,160 --> 00:19:57,200
that we're

00:19:55,280 --> 00:19:59,440
uh we're stuck with this is not the

00:19:57,200 --> 00:20:02,240
contribution workflow that we're doing

00:19:59,440 --> 00:20:02,960
that we're looking at long term because

00:20:02,240 --> 00:20:06,799
really we get

00:20:02,960 --> 00:20:09,039
source code build it and then um

00:20:06,799 --> 00:20:10,799
you know out comes the these different

00:20:09,039 --> 00:20:13,280
artifacts that we have

00:20:10,799 --> 00:20:15,360
uh and i'll talk a little bit about um

00:20:13,280 --> 00:20:17,120
the things that you can do

00:20:15,360 --> 00:20:19,919
uh you know here in just a few minutes

00:20:17,120 --> 00:20:21,679
we'll we'll go over what you can

00:20:19,919 --> 00:20:23,360
some of the things you can do with your

00:20:21,679 --> 00:20:26,320
your fancy sent off stream 8

00:20:23,360 --> 00:20:26,640
machine that you i have either migrated

00:20:26,320 --> 00:20:29,760
to

00:20:26,640 --> 00:20:33,520
or or upgraded from um

00:20:29,760 --> 00:20:36,480
but again to the to the point there

00:20:33,520 --> 00:20:37,600
the intention is for centos stream nine

00:20:36,480 --> 00:20:40,799
uh

00:20:37,600 --> 00:20:44,000
the all the package sources

00:20:40,799 --> 00:20:46,159
uh and even you know if the

00:20:44,000 --> 00:20:47,840
tomas you can chime in here a little bit

00:20:46,159 --> 00:20:48,880
about source git but

00:20:47,840 --> 00:20:51,200
those are going to be directly

00:20:48,880 --> 00:20:53,840
contributable by the public

00:20:51,200 --> 00:20:56,080
so the the intention is you'll have

00:20:53,840 --> 00:20:58,400
there will be a namespace in gitlab

00:20:56,080 --> 00:20:59,919
uh you point at the centos stream repos

00:20:58,400 --> 00:21:02,240
or the the sendoff stream

00:20:59,919 --> 00:21:04,000
uh get repositories you can make merge

00:21:02,240 --> 00:21:06,960
requests against those

00:21:04,000 --> 00:21:07,280
uh and the the real maintainers consider

00:21:06,960 --> 00:21:09,039
them

00:21:07,280 --> 00:21:11,039
and you know make sure it's it's right

00:21:09,039 --> 00:21:14,240
for the next minor release of

00:21:11,039 --> 00:21:15,440
red hat enterprise linux but um that's a

00:21:14,240 --> 00:21:17,679
big shift

00:21:15,440 --> 00:21:18,559
um you know both in terms of the work

00:21:17,679 --> 00:21:20,880
that we have to do

00:21:18,559 --> 00:21:22,240
to get the workflow up and running but

00:21:20,880 --> 00:21:25,919
also

00:21:22,240 --> 00:21:28,880
making rel development uh

00:21:25,919 --> 00:21:30,080
happen out in the public and so that's a

00:21:28,880 --> 00:21:32,240
that's a big deal about what we're

00:21:30,080 --> 00:21:34,320
looking for

00:21:32,240 --> 00:21:35,520
yeah i personally can't wait for like

00:21:34,320 --> 00:21:37,840
when we open the

00:21:35,520 --> 00:21:39,520
gates with gitlab and everyone will be

00:21:37,840 --> 00:21:41,919
able to contribute

00:21:39,520 --> 00:21:43,600
especially when all these reports will

00:21:41,919 --> 00:21:46,559
be set like hooked up with

00:21:43,600 --> 00:21:48,080
ci so that whatever you contribute to we

00:21:46,559 --> 00:21:49,760
will run all the tests

00:21:48,080 --> 00:21:51,360
on your contributions to make sure that

00:21:49,760 --> 00:21:52,960
they are not breaking like the rest of

00:21:51,360 --> 00:21:55,120
the distribution or the

00:21:52,960 --> 00:21:58,080
change is actually working it's gonna be

00:21:55,120 --> 00:22:01,760
super awesome

00:21:58,080 --> 00:22:03,440
yeah yeah and i think the the um

00:22:01,760 --> 00:22:04,880
the the key point there that you you

00:22:03,440 --> 00:22:08,320
mentioned too is

00:22:04,880 --> 00:22:10,080
uh it is really nice to treat uh tests

00:22:08,320 --> 00:22:11,840
just like we do other code

00:22:10,080 --> 00:22:13,360
uh because that's a that's a really good

00:22:11,840 --> 00:22:15,520
contribution point too

00:22:13,360 --> 00:22:15,520
so

00:22:16,720 --> 00:22:19,840
did we have uh other questions oh yeah

00:22:19,039 --> 00:22:22,640
we have

00:22:19,840 --> 00:22:23,840
zaharaki is very active in the questions

00:22:22,640 --> 00:22:25,840
so

00:22:23,840 --> 00:22:27,919
i i'll have to read this question

00:22:25,840 --> 00:22:31,440
because it's really complex

00:22:27,919 --> 00:22:32,080
so jose is asking center stream is a

00:22:31,440 --> 00:22:35,520
soon to be

00:22:32,080 --> 00:22:36,159
rel eight dot x right and are the builds

00:22:35,520 --> 00:22:38,880
rebuilt

00:22:36,159 --> 00:22:41,679
in centos infra or are those real rpms

00:22:38,880 --> 00:22:43,440
directly

00:22:41,679 --> 00:22:45,440
ah yeah that's that's a really great

00:22:43,440 --> 00:22:49,520
question actually um

00:22:45,440 --> 00:22:49,520
so those are um

00:22:49,919 --> 00:22:52,559
they're built from the same sources but

00:22:51,520 --> 00:22:53,440
they are built in different

00:22:52,559 --> 00:22:56,640
infrastructure

00:22:53,440 --> 00:22:58,480
so it's not uh it's not directly the

00:22:56,640 --> 00:23:01,440
bits that you get if you're a

00:22:58,480 --> 00:23:02,240
red hat customer you know for consuming

00:23:01,440 --> 00:23:05,440
rel

00:23:02,240 --> 00:23:07,280
it is a two different builds and that's

00:23:05,440 --> 00:23:09,200
going to continue

00:23:07,280 --> 00:23:11,039
uh you know over into streamline there's

00:23:09,200 --> 00:23:13,760
two separate build systems

00:23:11,039 --> 00:23:15,280
uh two separate composed systems you

00:23:13,760 --> 00:23:18,400
know they're they're separate that way

00:23:15,280 --> 00:23:19,840
they do consume the same sources so you

00:23:18,400 --> 00:23:21,280
know whether it's

00:23:19,840 --> 00:23:23,520
you know well first and then set up

00:23:21,280 --> 00:23:26,880
stream eight or

00:23:23,520 --> 00:23:30,159
if it's sent a stream nine into rel nine

00:23:26,880 --> 00:23:33,200
in the future workflows separate uh

00:23:30,159 --> 00:23:33,840
build systems separate workflows we can

00:23:33,200 --> 00:23:37,840
look it

00:23:33,840 --> 00:23:37,840
at one of those here real quick

00:23:39,600 --> 00:23:43,600
so koji.inbox.centus.org this is our

00:23:42,480 --> 00:23:46,720
build system for

00:23:43,600 --> 00:23:49,919
centos stream eight and you can go out

00:23:46,720 --> 00:23:51,200
and sort of follow along about uh you

00:23:49,919 --> 00:23:51,760
know what's coming through and look at

00:23:51,200 --> 00:23:55,039
the logs

00:23:51,760 --> 00:23:58,159
and and things like that uh the

00:23:55,039 --> 00:23:59,840
the rel build system is completely you

00:23:58,159 --> 00:24:00,960
know inside red hat and so it's not

00:23:59,840 --> 00:24:04,320
really

00:24:00,960 --> 00:24:05,760
uh necessarily consumable but but here's

00:24:04,320 --> 00:24:08,240
what you can

00:24:05,760 --> 00:24:10,799
look at to follow along with centaur

00:24:08,240 --> 00:24:10,799
stream 8.

00:24:13,120 --> 00:24:19,679
and another question from honza is

00:24:16,240 --> 00:24:20,320
if there is a way to see usage of centos

00:24:19,679 --> 00:24:25,039
stream

00:24:20,320 --> 00:24:25,039
8 in comparison to centos linux 8.

00:24:26,159 --> 00:24:32,400
uh yeah so the um that's a

00:24:29,600 --> 00:24:34,880
that's a tricky question especially

00:24:32,400 --> 00:24:34,880
because of

00:24:35,679 --> 00:24:39,039
you know a lot of the way that we

00:24:36,960 --> 00:24:40,880
actually deliver

00:24:39,039 --> 00:24:42,159
sent out stream and even centos linux

00:24:40,880 --> 00:24:43,919
and you know some of the previous

00:24:42,159 --> 00:24:46,960
releases

00:24:43,919 --> 00:24:47,760
we've got a pretty complex mirror

00:24:46,960 --> 00:24:50,640
network

00:24:47,760 --> 00:24:51,919
which means that anyone can go out and

00:24:50,640 --> 00:24:53,919
you know sync the content

00:24:51,919 --> 00:24:55,840
put it on their mirror and then make it

00:24:53,919 --> 00:24:58,880
available to

00:24:55,840 --> 00:25:01,600
you know tens hundreds

00:24:58,880 --> 00:25:03,279
millions of machines behind a you know

00:25:01,600 --> 00:25:05,760
behind a firewall somewhere

00:25:03,279 --> 00:25:08,400
so it's really hard to actually gather

00:25:05,760 --> 00:25:11,120
that sort of data i know there's

00:25:08,400 --> 00:25:14,400
there's a little bit of work that that

00:25:11,120 --> 00:25:16,320
happened in recent versions of dnf

00:25:14,400 --> 00:25:18,240
that the fedora project is using to help

00:25:16,320 --> 00:25:21,919
with you know some of that count

00:25:18,240 --> 00:25:23,760
uh account metadata but you know

00:25:21,919 --> 00:25:25,360
up until this point we really haven't

00:25:23,760 --> 00:25:29,200
like we don't keep

00:25:25,360 --> 00:25:31,039
uh that much in terms of logs

00:25:29,200 --> 00:25:32,400
on the mirror network and you know where

00:25:31,039 --> 00:25:33,600
you're actually downloading the content

00:25:32,400 --> 00:25:37,279
from so

00:25:33,600 --> 00:25:38,159
um yeah it's it's a little bit hard to

00:25:37,279 --> 00:25:43,840
guess about

00:25:38,159 --> 00:25:43,840
uh about things like that

00:25:44,640 --> 00:25:51,360
so uh yeah so we just finished up our

00:25:48,000 --> 00:25:52,000
um our vagrant install and you can see

00:25:51,360 --> 00:25:54,080
here

00:25:52,000 --> 00:25:56,080
uh from the centos release file we've

00:25:54,080 --> 00:26:00,080
got send up stream 8

00:25:56,080 --> 00:26:01,600
and we're all migrated so

00:26:00,080 --> 00:26:03,600
that is a great place to be let's take a

00:26:01,600 --> 00:26:06,080
look at aws

00:26:03,600 --> 00:26:06,080
oops

00:26:07,919 --> 00:26:12,640
so i'm going to copy in a snippet here

00:26:10,240 --> 00:26:14,960
and this snippet is in the notes

00:26:12,640 --> 00:26:16,480
on our github repository and then we'll

00:26:14,960 --> 00:26:19,600
talk through

00:26:16,480 --> 00:26:19,600
what's going on here

00:26:22,559 --> 00:26:30,240
maybe not that one

00:26:25,760 --> 00:26:30,240
got the wrong paste in here

00:26:37,520 --> 00:26:43,840
yeah so i've got the um

00:26:40,720 --> 00:26:45,200
the aws command line tools and you know

00:26:43,840 --> 00:26:47,600
we just looked over at

00:26:45,200 --> 00:26:49,600
uh at cloud.center.org and saw the

00:26:47,600 --> 00:26:51,919
machine images that we did

00:26:49,600 --> 00:26:54,559
and we looked at if you remember we

00:26:51,919 --> 00:26:57,840
looked at this page

00:26:54,559 --> 00:27:01,360
right here that describes the ami ids

00:26:57,840 --> 00:27:04,559
and we pulled the the right one for the

00:27:01,360 --> 00:27:04,559
the region that i'm working in

00:27:04,720 --> 00:27:08,880
and it's really as simple as this we're

00:27:06,480 --> 00:27:12,320
telling the aws command line tools

00:27:08,880 --> 00:27:17,200
to use this image

00:27:12,320 --> 00:27:20,000
uh give me one of them uh a t2.micro

00:27:17,200 --> 00:27:21,600
sized instance and then i've got some

00:27:20,000 --> 00:27:23,200
extra variables that are set here in my

00:27:21,600 --> 00:27:25,840
environment

00:27:23,200 --> 00:27:26,960
to give my subnet id and we want to tell

00:27:25,840 --> 00:27:28,960
it to

00:27:26,960 --> 00:27:30,480
give us a public ip address simple as

00:27:28,960 --> 00:27:35,120
that

00:27:30,480 --> 00:27:37,679
once we run that

00:27:35,120 --> 00:27:39,520
we've got a pending machine here and i'm

00:27:37,679 --> 00:27:42,000
going to give you a peek into my aws

00:27:39,520 --> 00:27:42,000
console

00:27:42,880 --> 00:27:49,840
let's reset this back too

00:27:50,559 --> 00:27:56,720
it's always take just a few minutes to

00:27:53,600 --> 00:27:58,240
spin up so uh looks like we might have

00:27:56,720 --> 00:28:00,399
another question while we're

00:27:58,240 --> 00:28:02,000
watching this on this on the screen oh

00:28:00,399 --> 00:28:04,720
yeah i was trying to answer it in

00:28:02,000 --> 00:28:05,279
chat in the meantime so the fourth

00:28:04,720 --> 00:28:08,880
question

00:28:05,279 --> 00:28:12,320
is from richard alway and he's asking at

00:28:08,880 --> 00:28:13,440
which point we are removing the branding

00:28:12,320 --> 00:28:16,159
of red hat

00:28:13,440 --> 00:28:18,640
in the import process for stream or

00:28:16,159 --> 00:28:18,640
centos

00:28:19,279 --> 00:28:23,760
ah yeah again so this is going to be uh

00:28:22,399 --> 00:28:24,640
sort of a tale of two different

00:28:23,760 --> 00:28:26,240
workflows

00:28:24,640 --> 00:28:28,399
um so you've got the stream eight

00:28:26,240 --> 00:28:30,399
workflow and the stream nine workflow

00:28:28,399 --> 00:28:31,600
uh and they're gonna to be you know just

00:28:30,399 --> 00:28:33,520
a little bit different

00:28:31,600 --> 00:28:34,720
um i'll talk a little bit about what

00:28:33,520 --> 00:28:36,159
we're doing for the stream eight

00:28:34,720 --> 00:28:39,200
workflow right now

00:28:36,159 --> 00:28:40,399
um and again like i said you know builds

00:28:39,200 --> 00:28:42,399
happen in rel

00:28:40,399 --> 00:28:44,640
uh we get the sources for them and then

00:28:42,399 --> 00:28:46,080
build you know then after that we build

00:28:44,640 --> 00:28:49,200
centos stream 8.

00:28:46,080 --> 00:28:50,640
um when i say build there what i

00:28:49,200 --> 00:28:52,480
basically mean is

00:28:50,640 --> 00:28:55,360
we take the sources and if it's not

00:28:52,480 --> 00:28:58,640
already branded we have some stuff that

00:28:55,360 --> 00:29:01,039
some packages that have rules that uh

00:28:58,640 --> 00:29:02,000
you know give you the the commit that

00:29:01,039 --> 00:29:03,840
landed

00:29:02,000 --> 00:29:05,200
the the source code that landed in red

00:29:03,840 --> 00:29:07,600
hat enterprise linux

00:29:05,200 --> 00:29:09,360
but then we layer on another commit that

00:29:07,600 --> 00:29:10,080
uh it makes it a little bit easier for

00:29:09,360 --> 00:29:12,000
us to

00:29:10,080 --> 00:29:13,520
strip out branding and and stuff like

00:29:12,000 --> 00:29:15,760
that um

00:29:13,520 --> 00:29:16,720
but you know there are some packages

00:29:15,760 --> 00:29:20,399
that do need uh

00:29:16,720 --> 00:29:23,200
a little bit of um of extra attention

00:29:20,399 --> 00:29:24,799
and right now uh folks on my team are

00:29:23,200 --> 00:29:26,399
handling that as they come in so we just

00:29:24,799 --> 00:29:28,159
have a list of

00:29:26,399 --> 00:29:30,480
of packages one you know one really

00:29:28,159 --> 00:29:33,520
important one is anaconda

00:29:30,480 --> 00:29:36,159
we always put a few uh different patches

00:29:33,520 --> 00:29:37,919
in that uh that spec file and then build

00:29:36,159 --> 00:29:41,200
it for

00:29:37,919 --> 00:29:44,559
uh send out stream eight for

00:29:41,200 --> 00:29:44,960
centos stream nine uh and again this is

00:29:44,559 --> 00:29:49,279
a

00:29:44,960 --> 00:29:51,760
sort of a preview to coming workflows um

00:29:49,279 --> 00:29:54,640
we're trying to get as much of that uh

00:29:51,760 --> 00:29:56,320
conditionalized as possible so you could

00:29:54,640 --> 00:29:57,760
you have flags that you

00:29:56,320 --> 00:29:59,120
know if you're building in a centos

00:29:57,760 --> 00:30:00,159
environment or if you're building in the

00:29:59,120 --> 00:30:02,240
red hat

00:30:00,159 --> 00:30:03,200
enterprise linux environment and i think

00:30:02,240 --> 00:30:07,679
there's a lot of

00:30:03,200 --> 00:30:09,279
um there's a lot of work to be done

00:30:07,679 --> 00:30:12,020
on that side just to make sure that the

00:30:09,279 --> 00:30:13,360
branding flows in the right direction

00:30:12,020 --> 00:30:14,880
[Music]

00:30:13,360 --> 00:30:18,159
i think there's there's always going to

00:30:14,880 --> 00:30:18,159
be some content that is

00:30:19,679 --> 00:30:23,120
you know never truly matched one to one

00:30:21,760 --> 00:30:25,760
between

00:30:23,120 --> 00:30:26,559
red hat enterprise linux and sent house

00:30:25,760 --> 00:30:28,000
stream on a

00:30:26,559 --> 00:30:31,600
on a branding level because we have

00:30:28,000 --> 00:30:34,240
things like our trademarks and logos and

00:30:31,600 --> 00:30:34,880
you know the index page if you visit

00:30:34,240 --> 00:30:36,559
apache

00:30:34,880 --> 00:30:39,279
and all that stuff that's going to

00:30:36,559 --> 00:30:42,399
continue to be maintained

00:30:39,279 --> 00:30:42,399
you know separately from

00:30:43,200 --> 00:30:46,960
from their counterparts in in rel

00:30:49,679 --> 00:30:55,279
so uh yeah back to um ec2 i

00:30:53,919 --> 00:30:56,960
sort of stalled for a little bit because

00:30:55,279 --> 00:30:59,039
this always takes a little bit longer

00:30:56,960 --> 00:31:02,399
than you expect for machines to

00:30:59,039 --> 00:31:06,080
show up and um

00:31:02,399 --> 00:31:08,000
be available but uh so i've got a public

00:31:06,080 --> 00:31:10,720
ip address here

00:31:08,000 --> 00:31:18,640
and the instance is running so let's run

00:31:10,720 --> 00:31:22,159
back over here

00:31:18,640 --> 00:31:32,320
and i'll give it my aws

00:31:22,159 --> 00:31:34,080
ssh key

00:31:32,320 --> 00:31:35,440
we can look at send us release we have

00:31:34,080 --> 00:31:38,480
um

00:31:35,440 --> 00:31:41,039
centos stream 8 running in

00:31:38,480 --> 00:31:41,039
aws

00:31:44,080 --> 00:31:47,600
and then of course you can do all kinds

00:31:45,519 --> 00:31:49,279
of um magic things with your own

00:31:47,600 --> 00:31:51,919
workflows and

00:31:49,279 --> 00:31:53,120
uh and all of that stuff there's plenty

00:31:51,919 --> 00:31:54,960
to do here but

00:31:53,120 --> 00:31:56,960
um the main thing that we wanted to show

00:31:54,960 --> 00:32:00,960
is it's super easy

00:31:56,960 --> 00:32:03,519
uh to get something running in ec2

00:32:00,960 --> 00:32:03,519
and of course

00:32:04,960 --> 00:32:08,399
anytime you do something with amazon you

00:32:07,360 --> 00:32:11,679
always want to make sure

00:32:08,399 --> 00:32:13,600
that you go back and

00:32:11,679 --> 00:32:15,200
terminate your instances because your

00:32:13,600 --> 00:32:17,760
credit card bill will thank you at the

00:32:15,200 --> 00:32:17,760
end of the month

00:32:22,799 --> 00:32:27,440
so moving on a little bit so we did

00:32:25,600 --> 00:32:29,519
let's see we've done container images

00:32:27,440 --> 00:32:32,000
we talked a lot about the cloud images

00:32:29,519 --> 00:32:34,640
we talked about

00:32:32,000 --> 00:32:36,480
we touched on vagrant just a little bit

00:32:34,640 --> 00:32:37,760
i want to show

00:32:36,480 --> 00:32:40,000
you know another thing if you don't want

00:32:37,760 --> 00:32:42,240
to go through that

00:32:40,000 --> 00:32:43,120
that whole migration process you know

00:32:42,240 --> 00:32:46,080
even though it's

00:32:43,120 --> 00:32:48,080
three steps right now i think uh we can

00:32:46,080 --> 00:32:50,640
make it a little bit easier

00:32:48,080 --> 00:32:51,679
um we've actually published a vagrant

00:32:50,640 --> 00:32:53,840
box for

00:32:51,679 --> 00:32:54,880
centos stream eight directly and we

00:32:53,840 --> 00:32:57,760
looked at that in

00:32:54,880 --> 00:32:58,880
cloud.org you saw the artifacts for that

00:32:57,760 --> 00:33:01,600
there's a directory

00:32:58,880 --> 00:33:01,600
in our github

00:33:03,360 --> 00:33:06,960
look at it here under vagrant setup

00:33:06,080 --> 00:33:08,799
stream

00:33:06,960 --> 00:33:10,320
and it's a really really simple vagrant

00:33:08,799 --> 00:33:12,159
file that

00:33:10,320 --> 00:33:13,840
you know it is basically the output of

00:33:12,159 --> 00:33:16,080
vagrant in it if you're familiar with

00:33:13,840 --> 00:33:16,080
that

00:33:21,600 --> 00:33:25,840
so if we look at the at the vagrant file

00:33:23,679 --> 00:33:25,840
here

00:33:26,559 --> 00:33:30,640
this is the important part we're looking

00:33:29,279 --> 00:33:33,120
at the

00:33:30,640 --> 00:33:34,080
centos stream eight box and then i gave

00:33:33,120 --> 00:33:37,840
it a version

00:33:34,080 --> 00:33:40,960
of the most recent one that

00:33:37,840 --> 00:33:44,399
that we just published but um

00:33:40,960 --> 00:33:44,399
but this is available so if you do

00:33:46,080 --> 00:33:50,080
vagrant up in this directory it's gonna

00:33:48,559 --> 00:33:51,519
pull i already have this pulled but

00:33:50,080 --> 00:33:54,240
it'll pull that image

00:33:51,519 --> 00:33:55,640
um it does a pull through to that that

00:33:54,240 --> 00:33:57,120
exact thing that we looked at on

00:33:55,640 --> 00:34:01,279
cloud.centos.org

00:33:57,120 --> 00:34:01,279
and then it'll start one for you

00:34:04,559 --> 00:34:08,560
so while we're waiting for this um we

00:34:07,679 --> 00:34:12,720
can

00:34:08,560 --> 00:34:14,879
uh talk a little bit and focus on uh

00:34:12,720 --> 00:34:16,320
you know another thing that tamashamans

00:34:14,879 --> 00:34:18,000
mentioned i think we've seen it in a

00:34:16,320 --> 00:34:21,679
whole bunch of other places

00:34:18,000 --> 00:34:26,399
um if you have interesting hardware

00:34:21,679 --> 00:34:29,119
um maybe something that's not x8664

00:34:26,399 --> 00:34:31,679
um you know if you have one of those

00:34:29,119 --> 00:34:33,599
fancy power workstations on your desk

00:34:31,679 --> 00:34:35,119
uh come talk to me because you know i'd

00:34:33,599 --> 00:34:37,040
like to say hi and all that stuff

00:34:35,119 --> 00:34:38,480
but you've got options for all of this

00:34:37,040 --> 00:34:42,560
stuff too

00:34:38,480 --> 00:34:42,560
because over here in

00:34:46,839 --> 00:34:52,879
cloud.centos.org

00:34:48,399 --> 00:34:52,879
oops i need to go 2 up

00:34:53,359 --> 00:34:56,480
if you have one of those fancy power

00:34:54,720 --> 00:34:57,760
workstations you can download and

00:34:56,480 --> 00:35:00,400
install

00:34:57,760 --> 00:35:01,440
download and use the the generic cloud

00:35:00,400 --> 00:35:04,320
image

00:35:01,440 --> 00:35:05,359
just with libvert from from this

00:35:04,320 --> 00:35:08,560
location too

00:35:05,359 --> 00:35:11,599
same thing for arc64 same and

00:35:08,560 --> 00:35:15,359
airf64 even has you know as we saw

00:35:11,599 --> 00:35:19,359
uh ami's that you can

00:35:15,359 --> 00:35:22,400
spin up in the uh amazon web services

00:35:19,359 --> 00:35:23,839
and all that stuff so

00:35:22,400 --> 00:35:26,400
definitely something to call attention

00:35:23,839 --> 00:35:29,200
to including the container images

00:35:26,400 --> 00:35:30,640
and that was a lot of fun to uh to sort

00:35:29,200 --> 00:35:32,480
of match what we had

00:35:30,640 --> 00:35:34,960
in terms of container manifests and

00:35:32,480 --> 00:35:37,599
stuff in quay makes it really nice to

00:35:34,960 --> 00:35:40,400
just be able to pull that for something

00:35:37,599 --> 00:35:40,400
on your architecture

00:35:40,720 --> 00:35:44,000
brian can this generic image be actually

00:35:43,440 --> 00:35:46,800
used to

00:35:44,000 --> 00:35:49,359
import to different clouds like azure or

00:35:46,800 --> 00:35:49,359
gcp

00:35:51,040 --> 00:35:57,040
exactly yeah so some we know that some

00:35:53,920 --> 00:36:00,240
clouds require different

00:35:57,040 --> 00:36:02,079
uh different configs and so

00:36:00,240 --> 00:36:03,520
like i know azure is one of them because

00:36:02,079 --> 00:36:05,599
you know they want you to have

00:36:03,520 --> 00:36:06,880
um like a management agent or something

00:36:05,599 --> 00:36:09,119
on top of

00:36:06,880 --> 00:36:10,480
what already exists in other places in

00:36:09,119 --> 00:36:14,560
the distribution

00:36:10,480 --> 00:36:18,400
um there's so it's kind of

00:36:14,560 --> 00:36:20,400
um we basically need some

00:36:18,400 --> 00:36:21,599
experts for each individual cloud to

00:36:20,400 --> 00:36:23,680
tell us what

00:36:21,599 --> 00:36:25,359
uh you know what needs to be on the

00:36:23,680 --> 00:36:26,000
image but the generic cloud images are a

00:36:25,359 --> 00:36:28,640
great start

00:36:26,000 --> 00:36:29,920
to getting there because a lot of in a

00:36:28,640 --> 00:36:32,800
lot of places they'll just

00:36:29,920 --> 00:36:32,800
you know boot and run

00:36:37,599 --> 00:36:44,880
so let's

00:36:41,280 --> 00:36:46,720
go back here and check on our vagrant

00:36:44,880 --> 00:36:48,800
install yeah so this is our our center

00:36:46,720 --> 00:36:51,680
stream image

00:36:48,800 --> 00:36:51,680
that has booted

00:36:52,000 --> 00:36:55,359
and so you can include this in any of

00:36:53,440 --> 00:36:57,119
your projects uh

00:36:55,359 --> 00:36:58,880
a vagrant file like this in any of your

00:36:57,119 --> 00:37:01,520
projects if you're wanting to target

00:36:58,880 --> 00:37:01,520
centos stream

00:37:06,000 --> 00:37:14,480
that's available to you uh as a box in

00:37:11,040 --> 00:37:16,240
vagrant and this is uh

00:37:14,480 --> 00:37:18,320
here's the page on on vagrant cloud you

00:37:16,240 --> 00:37:21,280
can

00:37:18,320 --> 00:37:23,040
see the uh the versions that we have and

00:37:21,280 --> 00:37:24,000
then some suggestions about how to get

00:37:23,040 --> 00:37:26,880
this

00:37:24,000 --> 00:37:26,880
on your system too

00:37:27,040 --> 00:37:34,480
we do have both uh virtualbox and live

00:37:30,160 --> 00:37:34,480
providers available for each of these

00:37:34,880 --> 00:37:42,720
so the um

00:37:39,040 --> 00:37:44,400
the question now kind of becomes

00:37:42,720 --> 00:37:46,480
you've got all these options right

00:37:44,400 --> 00:37:47,680
you've got containers you've got cloud

00:37:46,480 --> 00:37:50,560
images you can

00:37:47,680 --> 00:37:52,240
we didn't even really touch on the uh

00:37:50,560 --> 00:37:53,280
the traditional installs you know like

00:37:52,240 --> 00:37:55,359
download a dvd

00:37:53,280 --> 00:37:56,880
and put it on a on a system somewhere

00:37:55,359 --> 00:37:58,480
but that's that that's completely

00:37:56,880 --> 00:38:01,200
available to you too

00:37:58,480 --> 00:38:02,800
um that stuff is out on the on the

00:38:01,200 --> 00:38:05,200
mirror network where you would

00:38:02,800 --> 00:38:06,560
normally find these things so you've got

00:38:05,200 --> 00:38:08,480
this

00:38:06,560 --> 00:38:12,079
centos stream machine installed or

00:38:08,480 --> 00:38:15,920
you've got a container image running

00:38:12,079 --> 00:38:15,920
what can you do with it

00:38:17,200 --> 00:38:20,560
you can do a lot of things like you can

00:38:18,960 --> 00:38:21,280
put it on your laptop i'm actually

00:38:20,560 --> 00:38:23,680
running

00:38:21,280 --> 00:38:24,320
stream 8 on my laptop right here uh and

00:38:23,680 --> 00:38:26,320
it's been

00:38:24,320 --> 00:38:27,680
you know my daily driver since we we

00:38:26,320 --> 00:38:30,480
started the project

00:38:27,680 --> 00:38:32,000
um you can run a home server on it uh

00:38:30,480 --> 00:38:32,960
you know i've got my file server on it

00:38:32,000 --> 00:38:35,760
that has like

00:38:32,960 --> 00:38:37,119
i don't know maybe two or three uh

00:38:35,760 --> 00:38:40,240
containers for

00:38:37,119 --> 00:38:41,520
random services that i use um

00:38:40,240 --> 00:38:43,520
you can use it to start playing with

00:38:41,520 --> 00:38:46,960
containers so like

00:38:43,520 --> 00:38:49,520
uh tomas mentioned earlier um

00:38:46,960 --> 00:38:51,040
one of the nice things is you get one of

00:38:49,520 --> 00:38:52,800
the nice things about stream is you you

00:38:51,040 --> 00:38:54,800
get features

00:38:52,800 --> 00:38:56,079
a little bit faster than you might

00:38:54,800 --> 00:39:00,320
expect for

00:38:56,079 --> 00:39:02,000
santos linux and so podman 3.0

00:39:00,320 --> 00:39:03,760
being delivered in in santos stream

00:39:02,000 --> 00:39:06,480
right now that's

00:39:03,760 --> 00:39:07,760
uh that's a pretty cool thing and uh you

00:39:06,480 --> 00:39:09,280
know i've been playing around with it

00:39:07,760 --> 00:39:12,720
you know ever since it

00:39:09,280 --> 00:39:12,720
it dropped in the composes there

00:39:13,200 --> 00:39:20,400
but the main thing is install it

00:39:16,960 --> 00:39:23,280
run it put your workloads on it uh

00:39:20,400 --> 00:39:23,920
but the uh you know kind of an allusion

00:39:23,280 --> 00:39:25,760
to

00:39:23,920 --> 00:39:27,280
uh i think stephen's question from

00:39:25,760 --> 00:39:29,599
earlier

00:39:27,280 --> 00:39:31,200
look forward to being able to contribute

00:39:29,599 --> 00:39:34,160
in a meaningful way

00:39:31,200 --> 00:39:34,800
uh you know starting pretty soon uh

00:39:34,160 --> 00:39:36,400
we're

00:39:34,800 --> 00:39:38,400
you know tomash and i are working

00:39:36,400 --> 00:39:39,599
together on on some of those workflows

00:39:38,400 --> 00:39:41,760
and what that means

00:39:39,599 --> 00:39:42,720
for santa stream nine this is going to

00:39:41,760 --> 00:39:46,640
be

00:39:42,720 --> 00:39:49,119
a really important place to

00:39:46,640 --> 00:39:50,800
you know collaborate with people that

00:39:49,119 --> 00:39:54,480
are working on rel

00:39:50,800 --> 00:39:56,720
in a way that gets you features that are

00:39:54,480 --> 00:39:57,760
useful to you and so you can propose

00:39:56,720 --> 00:39:59,839
patches

00:39:57,760 --> 00:40:01,520
hang out with us on the mailing list but

00:39:59,839 --> 00:40:04,800
even right now

00:40:01,520 --> 00:40:07,599
if you head over to bugzilla

00:40:04,800 --> 00:40:08,480
we're treating because of the the

00:40:07,599 --> 00:40:11,839
relationship

00:40:08,480 --> 00:40:14,720
there between send us stream and rel uh

00:40:11,839 --> 00:40:16,160
we're evaluating bugs against the

00:40:14,720 --> 00:40:18,880
centaur stream version you can see that

00:40:16,160 --> 00:40:20,880
here it's there's actually a version

00:40:18,880 --> 00:40:22,400
against red hat enterprise linux eight

00:40:20,880 --> 00:40:24,560
called centos stream

00:40:22,400 --> 00:40:27,359
we're evaluating bugs that come in under

00:40:24,560 --> 00:40:29,839
this version as if they were rail bugs

00:40:27,359 --> 00:40:31,760
that doesn't mean necessarily that you

00:40:29,839 --> 00:40:34,400
know if you're asking for

00:40:31,760 --> 00:40:35,680
you know something new or you know

00:40:34,400 --> 00:40:37,760
pretty big or

00:40:35,680 --> 00:40:39,599
something like that like it's it's

00:40:37,760 --> 00:40:43,280
entirely possible that the

00:40:39,599 --> 00:40:45,200
maintainers may say no um you know no

00:40:43,280 --> 00:40:46,400
meaning this isn't really a good

00:40:45,200 --> 00:40:47,920
candidate for the next

00:40:46,400 --> 00:40:49,760
minor release of red hat enterprise

00:40:47,920 --> 00:40:52,160
linux but

00:40:49,760 --> 00:40:53,520
it's a conversation that you can have

00:40:52,160 --> 00:40:54,640
and it's a whole lot easier to have that

00:40:53,520 --> 00:40:56,480
conversation

00:40:54,640 --> 00:40:59,680
here in centos stream than it ever was

00:40:56,480 --> 00:40:59,680
in any of the previous

00:41:00,079 --> 00:41:05,040
centos distributions so you can think of

00:41:02,240 --> 00:41:08,160
centos linux if you found a bug

00:41:05,040 --> 00:41:12,800
at point release day it could have been

00:41:08,160 --> 00:41:15,520
another six-month cycle before um

00:41:12,800 --> 00:41:17,680
you know you even get an answer on a bug

00:41:15,520 --> 00:41:20,079
because

00:41:17,680 --> 00:41:21,119
the centos linux was so disconnected

00:41:20,079 --> 00:41:24,400
from

00:41:21,119 --> 00:41:26,400
where development was happening for rel

00:41:24,400 --> 00:41:28,000
and that's why that's why stream sits

00:41:26,400 --> 00:41:31,599
where it is that's why

00:41:28,000 --> 00:41:34,240
uh it's important to uh to participate

00:41:31,599 --> 00:41:36,960
here but also important to use it

00:41:34,240 --> 00:41:37,839
so i think those are the demos that we

00:41:36,960 --> 00:41:40,720
have

00:41:37,839 --> 00:41:43,040
do we have other questions or anything

00:41:40,720 --> 00:41:46,319
else coming up

00:41:43,040 --> 00:41:49,760
we have one more guys from

00:41:46,319 --> 00:41:52,319
computer kid whoever that is asks

00:41:49,760 --> 00:41:54,319
is there any good reasons to use centos

00:41:52,319 --> 00:41:56,800
stream over something like fedora on a

00:41:54,319 --> 00:41:56,800
laptop

00:42:00,319 --> 00:42:04,960
ah yeah so the um and i think it all

00:42:03,520 --> 00:42:07,440
depends on your

00:42:04,960 --> 00:42:09,280
um uh kind of your point of view and

00:42:07,440 --> 00:42:12,240
your your workload

00:42:09,280 --> 00:42:13,760
um i i'm pretty used to running

00:42:12,240 --> 00:42:17,359
enterprise linux

00:42:13,760 --> 00:42:21,040
uh and you know fedora is

00:42:17,359 --> 00:42:22,880
is one of those things where it's uh um

00:42:21,040 --> 00:42:24,400
you know it's moving pretty fast it gets

00:42:22,880 --> 00:42:25,599
a lot of features and

00:42:24,400 --> 00:42:28,640
and that's that's actually a really good

00:42:25,599 --> 00:42:30,640
thing um

00:42:28,640 --> 00:42:32,400
i've uh you know i've always ended up

00:42:30,640 --> 00:42:33,839
running enterprise linux on my laptops

00:42:32,400 --> 00:42:35,440
because i've ran them

00:42:33,839 --> 00:42:36,880
on my servers and i've just matched them

00:42:35,440 --> 00:42:41,520
up together

00:42:36,880 --> 00:42:41,520
you know i think the um the

00:42:41,599 --> 00:42:45,280
what's your what you're going to get out

00:42:43,200 --> 00:42:48,000
of the feel

00:42:45,280 --> 00:42:50,319
of running sent out stream on a laptop

00:42:48,000 --> 00:42:50,319
is more

00:42:50,720 --> 00:42:54,640
more like a workstation than say like a

00:42:53,359 --> 00:42:57,760
desktop

00:42:54,640 --> 00:43:01,920
environment or something like that and

00:42:57,760 --> 00:43:04,160
i so i come from the world of academics

00:43:01,920 --> 00:43:06,000
uh i ran a bunch of stuff for a

00:43:04,160 --> 00:43:07,839
mathematics department and

00:43:06,000 --> 00:43:10,240
you know we loved running enterprise

00:43:07,839 --> 00:43:11,280
linux on the desktop and on our laptops

00:43:10,240 --> 00:43:13,440
because

00:43:11,280 --> 00:43:15,280
that matched with our the software

00:43:13,440 --> 00:43:18,240
workloads that we were running there too

00:43:15,280 --> 00:43:19,440
so it's a it's a personal preference to

00:43:18,240 --> 00:43:23,040
be honest

00:43:19,440 --> 00:43:25,760
um but you know centos stream is is

00:43:23,040 --> 00:43:27,920
definitely usable

00:43:25,760 --> 00:43:29,680
a workstation environment so i can try a

00:43:27,920 --> 00:43:31,520
different answer

00:43:29,680 --> 00:43:33,520
i mean i i would love to run center

00:43:31,520 --> 00:43:34,319
stream on my laptop but my use case

00:43:33,520 --> 00:43:36,720
usually is

00:43:34,319 --> 00:43:37,440
i want to have the latest software

00:43:36,720 --> 00:43:39,440
possible

00:43:37,440 --> 00:43:40,960
like i want to have the latest container

00:43:39,440 --> 00:43:43,200
on time or libraries

00:43:40,960 --> 00:43:44,720
so i often ended up running fedora

00:43:43,200 --> 00:43:47,280
height on my laptops

00:43:44,720 --> 00:43:48,800
and right now i even have multiple

00:43:47,280 --> 00:43:52,079
machines with rawhide and

00:43:48,800 --> 00:43:54,720
it's just because that's what i want but

00:43:52,079 --> 00:43:55,200
uh yeah i love to stress what brian said

00:43:54,720 --> 00:43:56,640
that

00:43:55,200 --> 00:43:58,400
it really depends what you want to

00:43:56,640 --> 00:44:00,319
achieve and if you want stability

00:43:58,400 --> 00:44:01,440
definitely go for stream and if you want

00:44:00,319 --> 00:44:03,200
lightest greatest

00:44:01,440 --> 00:44:08,960
federal or even federal height might be

00:44:03,200 --> 00:44:08,960

YouTube URL: https://www.youtube.com/watch?v=HWXdIP_FRh0


