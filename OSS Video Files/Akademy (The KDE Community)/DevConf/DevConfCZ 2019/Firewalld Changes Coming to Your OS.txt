Title: Firewalld Changes Coming to Your OS
Publication date: 2019-03-04
Playlist: DevConfCZ 2019
Description: 
	Presentation name: Firewalld Changes Coming to Your OS
Speaker: Eric Garver
Description:  Firewalld has undergone a lot of change in the past year. This talk will discuss recent and future developments with an emphasis on why they are beneficial for users. Topics include; nftables, rule priorities, testsuite improvements, NetworkManager integration.
[ https://sched.co/Jo7k ]
Captions: 
	00:00:06,910 --> 00:00:10,910
all right good afternoon everyone my

00:00:09,050 --> 00:00:14,660
name is Eric Carver I am the current

00:00:10,910 --> 00:00:16,340
firewall D maintainer this talk is about

00:00:14,660 --> 00:00:19,699
firewall D and what's been going on for

00:00:16,340 --> 00:00:22,960
about the past 18 months it also covers

00:00:19,699 --> 00:00:27,110
some future plans and potential teachers

00:00:22,960 --> 00:00:29,660
so I'm gonna discuss a lot of features

00:00:27,110 --> 00:00:31,760
and I hope this doesn't make the DEF CON

00:00:29,660 --> 00:00:33,200
people mad but I'm okay with since we're

00:00:31,760 --> 00:00:34,640
going to discuss a lot of features if

00:00:33,200 --> 00:00:36,320
you have a simple question in the middle

00:00:34,640 --> 00:00:37,520
I'm gonna care with it but otherwise if

00:00:36,320 --> 00:00:41,739
it's a long question and complex

00:00:37,520 --> 00:00:45,470
question please wait till the end okay

00:00:41,739 --> 00:00:47,300
all right so a quick information here

00:00:45,470 --> 00:00:48,500
about firewall D if it's just to make

00:00:47,300 --> 00:00:51,100
sure everybody's on the same page

00:00:48,500 --> 00:00:53,329
part one is a zone based firewalled

00:00:51,100 --> 00:00:55,640
abstraction for end of tables and IP

00:00:53,329 --> 00:00:59,110
tables provides some primitives like

00:00:55,640 --> 00:01:01,460
services and ports and also adds some

00:00:59,110 --> 00:01:04,009
more network level things like port

00:01:01,460 --> 00:01:05,869
forwarding and masquerading it also

00:01:04,009 --> 00:01:08,930
contains a simple language for custom

00:01:05,869 --> 00:01:13,070
rules for more advanced use cases there

00:01:08,930 --> 00:01:15,820
are two main interfaces a CLI and a gtk

00:01:13,070 --> 00:01:18,490
GUI it also has a d-bus interface for

00:01:15,820 --> 00:01:20,810
more programmatic interface and

00:01:18,490 --> 00:01:22,430
interestingly enough both user

00:01:20,810 --> 00:01:25,190
interfaces use of the debate new bus

00:01:22,430 --> 00:01:28,280
interface so it's the default firewall

00:01:25,190 --> 00:01:29,930
for rel fedora and souza and it's an

00:01:28,280 --> 00:01:34,790
available in many many other

00:01:29,930 --> 00:01:38,060
distributions so as I said a very busy

00:01:34,790 --> 00:01:40,600
18 months here's some random statistics

00:01:38,060 --> 00:01:46,159
I pulled most Lee's come from the git

00:01:40,600 --> 00:01:49,610
git log so over 18 months we've had 40

00:01:46,159 --> 00:01:52,970
unique contributors upstream a lot of

00:01:49,610 --> 00:01:55,310
those yeah so these are actual pull

00:01:52,970 --> 00:01:57,380
requests upstream interestingly enough

00:01:55,310 --> 00:02:00,400
17 of these are repeat contributors

00:01:57,380 --> 00:02:02,780
which I thought was really cool so some

00:02:00,400 --> 00:02:06,500
dips at there if you're really

00:02:02,780 --> 00:02:09,590
interested 165 pull requests and a bunch

00:02:06,500 --> 00:02:11,629
89 plus issues I've been closed and that

00:02:09,590 --> 00:02:12,220
18 months so and lots and lots of new

00:02:11,629 --> 00:02:15,550
service that

00:02:12,220 --> 00:02:18,670
dishes that things like your one line

00:02:15,550 --> 00:02:21,570
commands add mdns SS age so a lot of a

00:02:18,670 --> 00:02:21,570
lot of new services

00:02:21,810 --> 00:02:28,060
alright so main reason we're here is to

00:02:24,730 --> 00:02:30,700
talk about features so 18 months all

00:02:28,060 --> 00:02:32,020
these these are them probably more

00:02:30,700 --> 00:02:34,440
notable things that have been added in

00:02:32,020 --> 00:02:39,160
eighteen months all of these will be in

00:02:34,440 --> 00:02:42,660
0.7 which will be released someday I'm

00:02:39,160 --> 00:02:47,380
not sure when they'll also be in rl8 and

00:02:42,660 --> 00:02:50,230
Fedora 31 these first two are very large

00:02:47,380 --> 00:02:51,400
features they have their own slide so

00:02:50,230 --> 00:02:53,920
I'll only bring some mention them right

00:02:51,400 --> 00:02:56,709
now those are enough tables back-end and

00:02:53,920 --> 00:03:00,790
ritual priorities so I'm actually gonna

00:02:56,709 --> 00:03:02,440
jump down to the third bullet so there

00:03:00,790 --> 00:03:04,590
was quite a bit of improvements with

00:03:02,440 --> 00:03:06,940
Network Manor in his integration

00:03:04,590 --> 00:03:09,840
arguably these could be called bug fixes

00:03:06,940 --> 00:03:16,269
but they're significant enough item here

00:03:09,840 --> 00:03:20,320
they were some scenarios or certain it's

00:03:16,269 --> 00:03:23,160
for example interaction with docker you

00:03:20,320 --> 00:03:25,060
know if you add a doctor interface

00:03:23,160 --> 00:03:29,440
sometimes you could reset for our wiki

00:03:25,060 --> 00:03:31,180
and it wouldn't wouldn't be reacted to

00:03:29,440 --> 00:03:35,260
the sound properly so features bugs like

00:03:31,180 --> 00:03:39,070
that have been improved next bullet here

00:03:35,260 --> 00:03:40,750
is a 64 address filtering so this is a

00:03:39,070 --> 00:03:44,489
feature that actually actually existed

00:03:40,750 --> 00:03:48,100
in network scripts it had been there for

00:03:44,489 --> 00:03:49,570
at least a decade and as you may have

00:03:48,100 --> 00:03:50,920
heard through other talks that were

00:03:49,570 --> 00:03:54,040
scripts are kind of on the out right now

00:03:50,920 --> 00:03:56,260
so this was a feature we decided it'd be

00:03:54,040 --> 00:03:59,200
nice to have a firewall D so this has

00:03:56,260 --> 00:04:01,510
been added this is basically a specific

00:03:59,200 --> 00:04:05,830
set of ipv6 address destination

00:04:01,510 --> 00:04:09,280
addresses that where we filtered next

00:04:05,830 --> 00:04:12,040
bullet point is the CLI command or CLI

00:04:09,280 --> 00:04:18,120
option check config this is basically

00:04:12,040 --> 00:04:21,400
config validation in the past users have

00:04:18,120 --> 00:04:24,910
done manual changes to XML configuration

00:04:21,400 --> 00:04:29,260
and a restart file T and Phi

00:04:24,910 --> 00:04:32,680
no it's not valid all in all that's not

00:04:29,260 --> 00:04:34,570
a bad thing but the bad thing was that's

00:04:32,680 --> 00:04:38,140
hard to figure out basically they had to

00:04:34,570 --> 00:04:39,700
go dig do logs find that so one feature

00:04:38,140 --> 00:04:40,870
that was added is a check and take

00:04:39,700 --> 00:04:45,040
option so basically can make all your

00:04:40,870 --> 00:04:48,790
changes do a firewall config and find

00:04:45,040 --> 00:04:50,710
out not only XML schema issues but some

00:04:48,790 --> 00:04:52,420
semantic changes like you're trying to

00:04:50,710 --> 00:04:55,660
use a service that just simply doesn't

00:04:52,420 --> 00:04:58,660
exist so I could you or a good use case

00:04:55,660 --> 00:05:00,430
for this is like you had a config that

00:04:58,660 --> 00:05:01,750
used on one box or a different virtual

00:05:00,430 --> 00:05:04,030
firewall date you can bring that over

00:05:01,750 --> 00:05:07,870
run a check and take make sure validates

00:05:04,030 --> 00:05:12,310
against a different version now last

00:05:07,870 --> 00:05:16,390
line here is a a new global config

00:05:12,310 --> 00:05:20,650
called flush all on reload this mostly

00:05:16,390 --> 00:05:22,720
affects users of direct rules and people

00:05:20,650 --> 00:05:24,610
that like to do runtime only changes for

00:05:22,720 --> 00:05:31,330
interface binding interface to zone

00:05:24,610 --> 00:05:34,720
bindings there was actually a mostly

00:05:31,330 --> 00:05:37,840
undocumented behavior where direct rules

00:05:34,720 --> 00:05:39,490
runtime direct role and interface

00:05:37,840 --> 00:05:43,660
bindings would actually be retained on a

00:05:39,490 --> 00:05:45,850
reload so there are a lot of times I

00:05:43,660 --> 00:05:51,640
would surprise users so basically if you

00:05:45,850 --> 00:05:53,590
can't fix it feature so so the new

00:05:51,640 --> 00:05:56,140
behavior is everything flushes as you

00:05:53,590 --> 00:05:57,310
most people many people would expect so

00:05:56,140 --> 00:05:59,020
all those direct rules interface

00:05:57,310 --> 00:06:01,750
bindings that our runtime only will

00:05:59,020 --> 00:06:04,030
fully flush but if you'd like the old

00:06:01,750 --> 00:06:08,470
behavior you can change this to no and

00:06:04,030 --> 00:06:11,470
get it back so moving on to the big ones

00:06:08,470 --> 00:06:18,790
here let's talk about the nf tables

00:06:11,470 --> 00:06:22,360
back-end so this went into the 0.6

00:06:18,790 --> 00:06:26,470
release which is a little over six

00:06:22,360 --> 00:06:31,720
months old maybe eight months old the

00:06:26,470 --> 00:06:34,850
big a big question is why there are many

00:06:31,720 --> 00:06:37,490
reasons I highlighted some here

00:06:34,850 --> 00:06:40,760
a big benefit is we can do combined

00:06:37,490 --> 00:06:44,720
processing for both ipv4 and ipv6 I

00:06:40,760 --> 00:06:46,730
don't know how familiar the other videos

00:06:44,720 --> 00:06:47,990
with the backend but previously you

00:06:46,730 --> 00:06:50,540
would have to add like if you were to

00:06:47,990 --> 00:06:52,640
enable allow SSH through you would have

00:06:50,540 --> 00:06:55,850
to add that for it would there'd be an

00:06:52,640 --> 00:06:59,390
entry for ipv4 and ipv6 both IP tables

00:06:55,850 --> 00:07:03,980
and IP 6 tables with enough tables we

00:06:59,390 --> 00:07:05,650
can handle both in the same rule alright

00:07:03,980 --> 00:07:13,630
another reason is end of tables has

00:07:05,650 --> 00:07:13,630
built-in sets so don't need IQ say and

00:07:13,870 --> 00:07:21,170
yeah we can use the N of T binary to

00:07:18,130 --> 00:07:24,440
manage all our rules all our sets ipv6

00:07:21,170 --> 00:07:30,200
and ipv4 with a single interface we want

00:07:24,440 --> 00:07:33,500
to deal with multiple tools another nice

00:07:30,200 --> 00:07:39,350
thing about Ana tables is with IP tables

00:07:33,500 --> 00:07:40,970
there was basically global Global tables

00:07:39,350 --> 00:07:43,400
and it didn't interact well or didn't

00:07:40,970 --> 00:07:44,930
cooperate well with multiple users so

00:07:43,400 --> 00:07:46,070
like if there's firewall tea and

00:07:44,930 --> 00:07:47,570
somebody else trainings out your tables

00:07:46,070 --> 00:07:51,380
a lot of times how you dealt with that

00:07:47,570 --> 00:07:54,170
is you flush and apply everything with

00:07:51,380 --> 00:07:56,450
the end of tables back-end data tables

00:07:54,170 --> 00:07:59,090
actually has what n of tables calls

00:07:56,450 --> 00:08:01,690
tables is more like a namespace so we

00:07:59,090 --> 00:08:04,460
can actually train a final LD table and

00:08:01,690 --> 00:08:06,680
not touch any other other rules that

00:08:04,460 --> 00:08:09,740
exist in other tables so I go in

00:08:06,680 --> 00:08:11,720
firewall D comes up it doesn't care

00:08:09,740 --> 00:08:14,390
there's other tools area so it's you

00:08:11,720 --> 00:08:16,220
can't in essence what this allows since

00:08:14,390 --> 00:08:19,610
you can use firewall D in combination

00:08:16,220 --> 00:08:26,600
you can use your own custom table and

00:08:19,610 --> 00:08:28,930
finally we won't touch it ok so what

00:08:26,600 --> 00:08:31,160
does kinda upgrade for you anybody users

00:08:28,930 --> 00:08:33,500
this upgrade should be seamless this

00:08:31,160 --> 00:08:36,440
what I mean by this is we still support

00:08:33,500 --> 00:08:39,050
all the features free and a table

00:08:36,440 --> 00:08:41,090
support that includes all of all the

00:08:39,050 --> 00:08:42,620
primitives all direct rules direct rules

00:08:41,090 --> 00:08:44,360
are still supported so you can still

00:08:42,620 --> 00:08:47,610
have use your end up tables back end

00:08:44,360 --> 00:08:52,149
with your ipv4 directory

00:08:47,610 --> 00:08:53,889
so last line again don't panic

00:08:52,149 --> 00:08:56,740
IQ tables back in and still supported

00:08:53,889 --> 00:08:58,300
fully supported up string if you want to

00:08:56,740 --> 00:09:02,079
use it it's still there just gotta

00:08:58,300 --> 00:09:04,149
change it thank you if you would like to

00:09:02,079 --> 00:09:07,149
know more information about this I do

00:09:04,149 --> 00:09:08,100
post regular blogs for major features so

00:09:07,149 --> 00:09:10,480
there's a link here at the bottom

00:09:08,100 --> 00:09:12,189
there's more specifics in there if you

00:09:10,480 --> 00:09:15,639
really want to get into the details or

00:09:12,189 --> 00:09:20,709
further questions or email me that's

00:09:15,639 --> 00:09:22,120
fine we're IRC in it alright so if I do

00:09:20,709 --> 00:09:27,819
any quick questionnaire it's a stop

00:09:22,120 --> 00:09:31,990
point alright next major feature would

00:09:27,819 --> 00:09:35,170
be ritual priorities so as I mentioned

00:09:31,990 --> 00:09:37,449
at the start fire what he has custom

00:09:35,170 --> 00:09:40,029
accustomed syntax for rules for more

00:09:37,449 --> 00:09:46,899
advanced users that's what we call

00:09:40,029 --> 00:09:48,970
rituals in the in the past based on what

00:09:46,899 --> 00:09:50,829
type of will you had a feeling is it the

00:09:48,970 --> 00:09:52,329
rule was allowing traffic or denying

00:09:50,829 --> 00:09:56,889
traffic they would automatically be

00:09:52,329 --> 00:09:59,620
sorted into a position in the rule set

00:09:56,889 --> 00:10:04,779
basically an allowed to allow it would

00:09:59,620 --> 00:10:06,160
yeah yeah it'd be it would you had no

00:10:04,779 --> 00:10:07,809
control of where the rule got placed

00:10:06,160 --> 00:10:09,939
apart within the fire will these rule

00:10:07,809 --> 00:10:11,589
set so that's what this feature is all

00:10:09,939 --> 00:10:14,649
about is adding a priority field

00:10:11,589 --> 00:10:17,709
allowing the user to arbitrarily order

00:10:14,649 --> 00:10:19,509
these custom rules and in one

00:10:17,709 --> 00:10:23,050
consequence is that is it allows you to

00:10:19,509 --> 00:10:25,990
freely mix your log rules your denials

00:10:23,050 --> 00:10:29,100
and your accept rules previously those

00:10:25,990 --> 00:10:31,750
were sorted by firewall Dean had no

00:10:29,100 --> 00:10:34,350
control over which order those were

00:10:31,750 --> 00:10:34,350
right

00:10:36,130 --> 00:10:41,200
this also allows you to place rituals

00:10:38,280 --> 00:10:48,100
before and after firewall these other

00:10:41,200 --> 00:10:50,350
primitives so in the past like if you

00:10:48,100 --> 00:10:52,360
were to add a service and a ritual that

00:10:50,350 --> 00:10:54,240
allowed allowed certain traffic those

00:10:52,360 --> 00:10:56,440
were treated equally that's basically

00:10:54,240 --> 00:10:58,210
which everyone got at at first

00:10:56,440 --> 00:11:00,310
that's wouldn't that's going to get

00:10:58,210 --> 00:11:04,000
executed first with priors we can

00:11:00,310 --> 00:11:05,800
actually control that order and of

00:11:04,000 --> 00:11:07,690
course we're backwards compatible you

00:11:05,800 --> 00:11:10,180
don't specify priority it's you still

00:11:07,690 --> 00:11:16,050
get the old behavior this feature also

00:11:10,180 --> 00:11:16,050
has its own blog post it goes into more

00:11:17,430 --> 00:11:22,330
low level details what it looks like

00:11:19,810 --> 00:11:25,540
actually looks like in a table so you're

00:11:22,330 --> 00:11:27,840
curious please go look at it so here's

00:11:25,540 --> 00:11:31,360
some examples of that these are fairly

00:11:27,840 --> 00:11:34,570
small ones because I it's hard to fit on

00:11:31,360 --> 00:11:36,880
a slide but here's the syntax so you'll

00:11:34,570 --> 00:11:40,210
see this is what's all been added and

00:11:36,880 --> 00:11:42,100
this is a ritual syntax and it's

00:11:40,210 --> 00:11:47,590
basically just another field like how

00:11:42,100 --> 00:11:51,430
you would specify the family in this

00:11:47,590 --> 00:11:55,030
first example it's basically a catch-all

00:11:51,430 --> 00:11:58,800
rule that you would basically write

00:11:55,030 --> 00:11:58,800
before the policy would have happened

00:12:00,780 --> 00:12:04,690
you would put this there keywords you

00:12:03,190 --> 00:12:07,060
wanted to catch - unexpected traffic

00:12:04,690 --> 00:12:10,720
basically you want to see anything that

00:12:07,060 --> 00:12:12,250
comes through that wasn't caught by any

00:12:10,720 --> 00:12:14,800
of your services you're allowing so it's

00:12:12,250 --> 00:12:21,340
a way that just kind of flag unexpected

00:12:14,800 --> 00:12:27,300
traffic on the second example do you can

00:12:21,340 --> 00:12:27,300
it's allowing allowing the service for a

00:12:29,800 --> 00:12:34,179
we ran along and rejected so allow

00:12:32,290 --> 00:12:41,110
somebody but scream loudly for everyone

00:12:34,179 --> 00:12:43,269
else so there was a handful of features

00:12:41,110 --> 00:12:47,759
that were not necessarily user facing

00:12:43,269 --> 00:12:47,759
but I think they're important highlight

00:12:47,999 --> 00:12:54,249
the biggest one and I put this on this

00:12:51,730 --> 00:12:56,529
slide because it's not user facing but

00:12:54,249 --> 00:12:58,709
heavily benefits user is there was a lot

00:12:56,529 --> 00:13:02,079
of a lot of work rewriting a test suite

00:12:58,709 --> 00:13:04,869
and adding lots and lots and lots of new

00:13:02,079 --> 00:13:06,579
tests as you can see the third bullet

00:13:04,869 --> 00:13:10,869
says we going from six test groups to

00:13:06,579 --> 00:13:15,339
well over 120 also it's part of this

00:13:10,869 --> 00:13:16,869
effort we added CI for every commit

00:13:15,339 --> 00:13:17,920
every full request so that let's try the

00:13:16,869 --> 00:13:20,679
CI up on github

00:13:17,920 --> 00:13:25,449
every time you every time someone makes

00:13:20,679 --> 00:13:28,410
a PR oh well know how good it is this

00:13:25,449 --> 00:13:33,910
last bullet here is source code checking

00:13:28,410 --> 00:13:36,939
that again runs part of CI so if anybody

00:13:33,910 --> 00:13:40,709
wants to flick fix flake eight source

00:13:36,939 --> 00:13:46,240
code contact me captions it's stuck on

00:13:40,709 --> 00:13:48,100
this for this this set of work there was

00:13:46,240 --> 00:13:51,549
enough also another blog post talking

00:13:48,100 --> 00:13:54,119
about the test suite this is useful for

00:13:51,549 --> 00:13:57,549
anybody that wants to contribute organ

00:13:54,119 --> 00:14:01,509
or just curious about how to use the

00:13:57,549 --> 00:14:02,980
test suite but this is also useful for

00:14:01,509 --> 00:14:07,329
anybody that's interested in packaging

00:14:02,980 --> 00:14:12,189
and wants to run this as part of your

00:14:07,329 --> 00:14:18,669
packaging it's also useful for anybody

00:14:12,189 --> 00:14:23,129
that works on other other projects that

00:14:18,669 --> 00:14:23,129
use audit tools so it's a fairly useful

00:14:24,510 --> 00:14:31,150
so let's talk about some future features

00:14:28,200 --> 00:14:38,470
again these are possible future features

00:14:31,150 --> 00:14:39,910
I'll emphasize that a big one so the

00:14:38,470 --> 00:14:44,560
first one I have listed here is policy

00:14:39,910 --> 00:14:46,740
objects um this is a concept that I've

00:14:44,560 --> 00:14:51,430
been thinking about for a while that

00:14:46,740 --> 00:14:52,450
would allow you to place a policy all

00:14:51,430 --> 00:14:53,080
right let me back up for a minute so

00:14:52,450 --> 00:14:56,710
right now

00:14:53,080 --> 00:15:01,020
firewall D attaches rules to a zone

00:14:56,710 --> 00:15:03,910
right this will allow you to attach

00:15:01,020 --> 00:15:06,070
rules to a policy that exists between

00:15:03,910 --> 00:15:08,760
two zones so it's more about when a

00:15:06,070 --> 00:15:12,820
traffic flows from Zone A to zombie

00:15:08,760 --> 00:15:14,440
apply a policy there and the reason

00:15:12,820 --> 00:15:18,460
that's interesting is because it allows

00:15:14,440 --> 00:15:20,650
us to implement features that have been

00:15:18,460 --> 00:15:24,870
lacking and requested for a long time

00:15:20,650 --> 00:15:24,870
namely the output in forward filtering

00:15:26,130 --> 00:15:32,560
the second second one I have listed here

00:15:30,340 --> 00:15:34,830
is live end up tables so right now the

00:15:32,560 --> 00:15:38,820
end of tables back end for firewall D is

00:15:34,830 --> 00:15:42,670
simply calling out to the D binary

00:15:38,820 --> 00:15:44,910
recently upstream got a brand new

00:15:42,670 --> 00:15:48,220
library called the no live in at tables

00:15:44,910 --> 00:15:50,290
you us part we'll be using that would

00:15:48,220 --> 00:15:53,170
allow us to do a lot of big batch

00:15:50,290 --> 00:15:59,110
updates and have a more structured

00:15:53,170 --> 00:16:02,110
interface to enna tables third item here

00:15:59,110 --> 00:16:04,240
is das protection

00:16:02,110 --> 00:16:07,750
I call it das protection but really it's

00:16:04,240 --> 00:16:10,090
this rate limiting you can the idea buta

00:16:07,750 --> 00:16:12,400
rate limit connections per second or

00:16:10,090 --> 00:16:15,730
rate limit date bandwidth data coming

00:16:12,400 --> 00:16:17,680
through again supposing that via rituals

00:16:15,730 --> 00:16:19,000
means you could rate limit a certain

00:16:17,680 --> 00:16:23,140
user you can rate limit a certain

00:16:19,000 --> 00:16:25,540
service anything of this order this

00:16:23,140 --> 00:16:29,470
fourth one here rituals inside a service

00:16:25,540 --> 00:16:32,610
definition this is actually one of those

00:16:29,470 --> 00:16:35,620
other fairly frequently requested items

00:16:32,610 --> 00:16:37,630
so right now services can have porch you

00:16:35,620 --> 00:16:39,550
can have

00:16:37,630 --> 00:16:43,589
all kinds of things but one thing they

00:16:39,550 --> 00:16:47,709
can't have inside of them is a rich rule

00:16:43,589 --> 00:16:49,440
so adding a rich rule would allow you to

00:16:47,709 --> 00:16:51,640
do some other interesting things like

00:16:49,440 --> 00:16:54,579
that so we cost

00:16:51,640 --> 00:16:57,459
we couldn't you you could almost

00:16:54,579 --> 00:16:59,920
implement like major features via a

00:16:57,459 --> 00:17:05,470
service definition so like earlier I

00:16:59,920 --> 00:17:07,959
mentioned the the 6to4 filtering if we

00:17:05,470 --> 00:17:09,610
had this rules rituals inside of a

00:17:07,959 --> 00:17:12,429
service session we can implement that

00:17:09,610 --> 00:17:16,319
entire feature simply by having rituals

00:17:12,429 --> 00:17:20,550
to a service definition and that's so

00:17:16,319 --> 00:17:23,020
it'd be very flexible users could just

00:17:20,550 --> 00:17:26,199
yeah it it'd be a way for users at a lot

00:17:23,020 --> 00:17:28,569
of arbitrary features like that so it's

00:17:26,199 --> 00:17:36,640
kind of building on the basics and

00:17:28,569 --> 00:17:39,880
adding 30 very powerful features so I

00:17:36,640 --> 00:17:41,679
listed a couple crazy ideas one of the

00:17:39,880 --> 00:17:44,620
things on the previous slide was we did

00:17:41,679 --> 00:17:48,610
a lot of lot of work refactoring to

00:17:44,620 --> 00:17:50,650
enable separate backends to add and a

00:17:48,610 --> 00:17:53,290
table support as a consequence of that

00:17:50,650 --> 00:17:55,419
that means we can support new backends

00:17:53,290 --> 00:17:58,480
fairly easily so if there ever comes

00:17:55,419 --> 00:18:03,179
time or you vpf and xcp makes sense for

00:17:58,480 --> 00:18:03,179
far wildy we're ready for it

00:18:07,330 --> 00:18:16,730
all right lastly it's uh if anybody's

00:18:12,139 --> 00:18:18,799
interested in contributing the codes all

00:18:16,730 --> 00:18:21,379
on github it's written in Python it's

00:18:18,799 --> 00:18:25,279
very easy to get involved whether you're

00:18:21,379 --> 00:18:27,830
adding services reporting issues and

00:18:25,279 --> 00:18:32,950
translations are a big one please if

00:18:27,830 --> 00:18:35,059
anybody speaks a non or at any language

00:18:32,950 --> 00:18:37,119
that's where we get all our translations

00:18:35,059 --> 00:18:41,090
so it's beneficial to all the users

00:18:37,119 --> 00:18:43,669
translations are very appreciated and as

00:18:41,090 --> 00:18:47,210
far as community there's the channel on

00:18:43,669 --> 00:18:48,889
freenode I'm always there but due to

00:18:47,210 --> 00:18:51,350
time zones I may not always reply right

00:18:48,889 --> 00:18:54,320
away so but the users that are actually

00:18:51,350 --> 00:18:56,450
very friendly and very hopeful for they

00:18:54,320 --> 00:19:01,190
I've been surprised how many users help

00:18:56,450 --> 00:19:02,989
each other and news and blog every every

00:19:01,190 --> 00:19:04,700
new feature gets a blog every release

00:19:02,989 --> 00:19:06,230
gets a blog so please check it read it

00:19:04,700 --> 00:19:10,639
that's the best way to be informed about

00:19:06,230 --> 00:19:16,149
new things and with that stop for

00:19:10,639 --> 00:19:16,149
questions yes

00:19:28,299 --> 00:19:33,860
so the question is is I mentioned track

00:19:32,270 --> 00:19:36,140
rate-limiting as a possible future

00:19:33,860 --> 00:19:37,549
future he's asking about shaping right

00:19:36,140 --> 00:19:41,049
yeah

00:19:37,549 --> 00:19:54,290
the answer is I haven't thought of a

00:19:41,049 --> 00:20:10,520
file of teacher request else interactive

00:19:54,290 --> 00:20:11,990
what I think they call it Little Snitch

00:20:10,520 --> 00:20:15,140
or that's one of those features it's

00:20:11,990 --> 00:20:19,330
basically so the question is is I think

00:20:15,140 --> 00:20:22,330
the question is is there any plan to add

00:20:19,330 --> 00:20:22,330
outputs

00:20:29,050 --> 00:20:37,390
okay um alright so the question is is

00:20:32,750 --> 00:20:39,980
there any goal or any plan to support

00:20:37,390 --> 00:20:41,420
dynamically detecting new traffic and

00:20:39,980 --> 00:20:43,780
then allowing it prompting a user to

00:20:41,420 --> 00:20:46,910
allow it okay

00:20:43,780 --> 00:20:48,860
no there's a the tune requested to add

00:20:46,910 --> 00:20:51,290
something similar like that to the

00:20:48,860 --> 00:20:53,270
output side meaning if there's some

00:20:51,290 --> 00:20:55,760
program that's sending traffic that we

00:20:53,270 --> 00:20:57,680
haven't expected you know I determined

00:20:55,760 --> 00:21:00,290
they used with Little Snitch like I'm

00:20:57,680 --> 00:21:04,750
not familiar with that software but it's

00:21:00,290 --> 00:21:08,750
been requested it'd be nice to see but

00:21:04,750 --> 00:21:12,440
yeah it'd be a cool feature I will up

00:21:08,750 --> 00:21:28,580
said any like questions got through it

00:21:12,440 --> 00:21:31,940
Stan so the question is is the diff step

00:21:28,580 --> 00:21:33,890
about the next steps here so these ones

00:21:31,940 --> 00:21:36,350
tell me I had a bunch of features but

00:21:33,890 --> 00:21:38,810
ended up with less lines of code you're

00:21:36,350 --> 00:21:41,510
right a lot of that had to do with the

00:21:38,810 --> 00:21:43,400
code refactoring there was quite a bit

00:21:41,510 --> 00:21:47,140
of redundant code removed but then we

00:21:43,400 --> 00:21:52,490
also removed a alternative CLI that was

00:21:47,140 --> 00:21:54,560
basically unknown and not reused much so

00:21:52,490 --> 00:21:58,970
that the removing that seal I was

00:21:54,560 --> 00:22:02,870
probably 6,000 and that so less

00:21:58,970 --> 00:22:10,770
maintenance I think you got time for

00:22:02,870 --> 00:22:13,200
like one or two more anyway

00:22:10,770 --> 00:22:13,820
all right I guess we're good thanks

00:22:13,200 --> 00:22:17,380
everybody

00:22:13,820 --> 00:22:17,380
[Applause]

00:22:18,800 --> 00:22:23,279
you

00:22:20,130 --> 00:22:23,279

YouTube URL: https://www.youtube.com/watch?v=yy87quTsdVw


