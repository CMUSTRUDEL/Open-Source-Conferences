Title: Russian GOST cryptography in and near OpenSSL
Publication date: 2019-03-04
Playlist: DevConfCZ 2019
Description: 
	Presentation name: Russian GOST cryptography in and near OpenSSL
Speaker: Belyavskiy Dmitry
Description:  There is a necessity to provide national cryptography in various applications. The presentation describes history, current state and future of Russian GOST support in OpenSSL and OpenSSL-based applications. 

Russian GOST support in OpenSSL is divided between modifications of OpenSSL itself and the engine (https://github.com/gost-engine/engine) implementing the low-level cryptographic primitives. The presentation describes the edge cases of using externally provided algorithms, problems of support of the national specifics in OpenSSL and adopting applications and standards to support national cryptography. 

The presentation contains history of the universal API for asymmetric cryptography in OpenSSL and provides some ideas about possible API development to make it more flexible.
[ https://sched.co/Jcd9]
Captions: 
	00:00:05,149 --> 00:00:14,490
haha they came a well okay my name is

00:00:09,750 --> 00:00:18,660
Mitra Podolski I will speak about the

00:00:14,490 --> 00:00:23,550
history of providing Russian crypto

00:00:18,660 --> 00:00:27,509
algorithms in the OpenSSL Volk it though

00:00:23,550 --> 00:00:29,909
it contains some specific details it

00:00:27,509 --> 00:00:34,560
will be useful for those who want to

00:00:29,909 --> 00:00:39,600
provide the new creep - well I think not

00:00:34,560 --> 00:00:42,660
only to open SSL but to any functional

00:00:39,600 --> 00:00:45,630
enough toolkit so first of all for my as

00:00:42,660 --> 00:00:50,250
I told my name is Michi malevsky I'm

00:00:45,630 --> 00:00:52,080
reading open SSL code since 2005

00:00:50,250 --> 00:00:53,460
sometimes I understand what happens

00:00:52,080 --> 00:00:57,630
sometimes I don't

00:00:53,460 --> 00:00:59,840
especially in stuff related to constant

00:00:57,630 --> 00:00:59,840
time

00:00:59,930 --> 00:01:08,060
my main job currently is Russian cryptic

00:01:04,949 --> 00:01:10,650
cryptographic open e cryptic um limited

00:01:08,060 --> 00:01:13,320
I'm senior developer and I also

00:01:10,650 --> 00:01:17,370
participated in various open source

00:01:13,320 --> 00:01:22,050
projects mostly related either to

00:01:17,370 --> 00:01:28,260
cryptography or to the main registration

00:01:22,050 --> 00:01:34,310
stuff so first of all what is Russian

00:01:28,260 --> 00:01:40,260
post itself it's a set of cryptographic

00:01:34,310 --> 00:01:44,670
algorithms the oldest one was approved

00:01:40,260 --> 00:01:47,490
in 1989 at Soviet Union time at that

00:01:44,670 --> 00:01:50,590
time it treated as a bit paranoid always

00:01:47,490 --> 00:01:55,720
it's very longer okay we

00:01:50,590 --> 00:02:02,039
if sky is a skill but well it's still

00:01:55,720 --> 00:02:06,130
alive and the conference who have gone

00:02:02,039 --> 00:02:08,289
Russian standards include both

00:02:06,130 --> 00:02:09,819
first-class organisms full stack of them

00:02:08,289 --> 00:02:12,849
such as block cycles

00:02:09,819 --> 00:02:16,450
message authentication of course digests

00:02:12,849 --> 00:02:19,090
of course digital signature but these

00:02:16,450 --> 00:02:21,670
algorithms themselves are almost not

00:02:19,090 --> 00:02:25,690
only are almost not usable without

00:02:21,670 --> 00:02:28,239
supplementary algorithm we need save the

00:02:25,690 --> 00:02:32,620
random function we need the derivation

00:02:28,239 --> 00:02:35,769
of the shared key we need the various

00:02:32,620 --> 00:02:43,450
functions related to K Europe and so on

00:02:35,769 --> 00:02:48,400
and so forth so the history for me

00:02:43,450 --> 00:02:51,330
begins in 2005 when the company I worked

00:02:48,400 --> 00:02:56,340
it was a cryptic home at that time - it

00:02:51,330 --> 00:03:00,730
was my previous work not on the current

00:02:56,340 --> 00:03:05,109
decided that we should provide support

00:03:00,730 --> 00:03:07,620
of Russian ghost crypto in viruses in

00:03:05,109 --> 00:03:08,940
this of that worldwide use toolkit

00:03:07,620 --> 00:03:17,590
[Music]

00:03:08,940 --> 00:03:22,599
because self design at the format's No

00:03:17,590 --> 00:03:25,540
and we wanted to use worldwide once at

00:03:22,599 --> 00:03:29,950
that moment we studied in fact three

00:03:25,540 --> 00:03:32,140
variants OpenSSL nutella's which was not

00:03:29,950 --> 00:03:35,590
made sure enough at that moment and in a

00:03:32,140 --> 00:03:39,580
sense we've chosen OpenSSL i don't

00:03:35,590 --> 00:03:42,220
remember the exact reasons and then we

00:03:39,580 --> 00:03:47,430
decided to look into the code

00:03:42,220 --> 00:03:53,830
so the first we've seen was many many

00:03:47,430 --> 00:03:56,290
case switching in the parts of code

00:03:53,830 --> 00:03:58,450
related to this is no signature it

00:03:56,290 --> 00:04:01,750
looked like case let us say we do this

00:03:58,450 --> 00:04:04,450
case we say we do that sometimes there

00:04:01,750 --> 00:04:06,160
were some cases where something was done

00:04:04,450 --> 00:04:11,910
when we had the elliptic curve

00:04:06,160 --> 00:04:15,880
cryptography it was very long ago we

00:04:11,910 --> 00:04:20,139
thought whether we have to add the case

00:04:15,880 --> 00:04:22,900
was decided not to do it and took a much

00:04:20,139 --> 00:04:28,590
closer look at the engine subsystem it

00:04:22,900 --> 00:04:32,640
was a way to provide plugins that could

00:04:28,590 --> 00:04:38,490
that could carry the implementation of

00:04:32,640 --> 00:04:40,960
ciphers of message digests and of custom

00:04:38,490 --> 00:04:45,720
for example hardware flow that

00:04:40,960 --> 00:04:53,560
implementation of worldwide algorithms

00:04:45,720 --> 00:04:56,740
or random number generations and the

00:04:53,560 --> 00:04:59,740
last but not least we've seen that the

00:04:56,740 --> 00:05:04,240
main body of code contained hard coded

00:04:59,740 --> 00:05:07,000
algorithm and well sha-1 was the king at

00:05:04,240 --> 00:05:10,720
the moment and well ok you can use any

00:05:07,000 --> 00:05:15,490
digital signature if your digest is

00:05:10,720 --> 00:05:17,050
sha-1 it did not fit our purposes

00:05:15,490 --> 00:05:21,520
because our standards

00:05:17,050 --> 00:05:23,229
why that only Russian cause the wave

00:05:21,520 --> 00:05:33,639
function should be used with Russian go

00:05:23,229 --> 00:05:36,220
signature and after we decided that the

00:05:33,639 --> 00:05:40,240
best way will be writing a custom punch

00:05:36,220 --> 00:05:43,240
that will implement callback structures

00:05:40,240 --> 00:05:47,379
for digital signature algorithm as it

00:05:43,240 --> 00:05:52,240
was already done for ciphers and digests

00:05:47,379 --> 00:05:54,879
and then we thought we when we write it

00:05:52,240 --> 00:06:01,139
we provided top stream they will accept

00:05:54,879 --> 00:06:07,650
our punch and everything will get breda

00:06:01,139 --> 00:06:10,889
so here is the very brief history in a

00:06:07,650 --> 00:06:14,710
very brief history of both

00:06:10,889 --> 00:06:19,090
implementation in open SSL in the branch

00:06:14,710 --> 00:06:24,159
zero nine eight zero nine eight we've

00:06:19,090 --> 00:06:28,210
implemented a separate page which were

00:06:24,159 --> 00:06:31,509
broken by the compatibility but well we

00:06:28,210 --> 00:06:39,909
expected that it will be a good starting

00:06:31,509 --> 00:06:42,520
point to discuss then for some time a

00:06:39,909 --> 00:06:46,629
ghost engine was a part of open a third

00:06:42,520 --> 00:06:53,529
bundle then it moved to a separate

00:06:46,629 --> 00:06:56,770
project and then there was and for now

00:06:53,529 --> 00:07:01,389
in the main stable branch 1.1.1 it's we

00:06:56,770 --> 00:07:05,310
have a chain of breaks and fixes it's a

00:07:01,389 --> 00:07:10,029
normal process for not while the user

00:07:05,310 --> 00:07:13,680
functions and there is a branch for

00:07:10,029 --> 00:07:17,610
working progress where I am

00:07:13,680 --> 00:07:22,320
the current Russian Telus tangles so

00:07:17,610 --> 00:07:26,610
when we published when we have finished

00:07:22,320 --> 00:07:30,060
that first version of patch for the zero

00:07:26,610 --> 00:07:34,020
nine eight version we were happy that we

00:07:30,060 --> 00:07:38,729
did it everything was okay with open SSL

00:07:34,020 --> 00:07:41,960
self-test and we published our patch at

00:07:38,729 --> 00:07:46,669
the OpenSSL demo mailing list and waited

00:07:41,960 --> 00:07:49,889
well not immediately

00:07:46,669 --> 00:07:51,690
not immediately accepting but at least

00:07:49,889 --> 00:07:55,949
the way we were waiting for this or that

00:07:51,690 --> 00:07:59,539
reaction as far as I remember the only

00:07:55,949 --> 00:08:02,760
comment we've got was that we should

00:07:59,539 --> 00:08:04,430
switch comments from C++ style to C

00:08:02,760 --> 00:08:10,699
style

00:08:04,430 --> 00:08:18,210
it was a rather discouraging moment so

00:08:10,699 --> 00:08:21,590
then for some well it took us about half

00:08:18,210 --> 00:08:26,340
a year to implement the patch and then

00:08:21,590 --> 00:08:29,909
for about four or five months we did not

00:08:26,340 --> 00:08:32,459
know what to do with it because there

00:08:29,909 --> 00:08:34,400
was no there was no discussion there was

00:08:32,459 --> 00:08:36,959
no public interest

00:08:34,400 --> 00:08:40,440
we made some presentations where as

00:08:36,959 --> 00:08:43,250
developer conference but it was not our

00:08:40,440 --> 00:08:46,579
aim because we

00:08:43,250 --> 00:08:51,110
had to above dispatch to the changing

00:08:46,579 --> 00:08:54,740
versions of OpenSSL itself and it was a

00:08:51,110 --> 00:09:00,620
rather time consuming so we needed to

00:08:54,740 --> 00:09:05,660
push dispatch to two main code base of

00:09:00,620 --> 00:09:08,629
the OpenSSL at that moment i've note

00:09:05,660 --> 00:09:12,290
that signature of one of the OpenSSL

00:09:08,629 --> 00:09:15,500
team members dr. Steven Hanson contained

00:09:12,290 --> 00:09:19,610
the line we need funding and we'll

00:09:15,500 --> 00:09:25,910
discuss the suggestion of and and we'll

00:09:19,610 --> 00:09:29,709
discuss the suggestion of work well our

00:09:25,910 --> 00:09:37,000
bosses have came into contact with

00:09:29,709 --> 00:09:40,220
OpenSSL team with directly and here

00:09:37,000 --> 00:09:48,290
began the process of the integration of

00:09:40,220 --> 00:09:55,939
the library to upstream it was finally

00:09:48,290 --> 00:09:58,519
added to version 1.0 and this version

00:09:55,939 --> 00:10:03,079
contained a lot of changes but I will

00:09:58,519 --> 00:10:07,370
say about those that were the most

00:10:03,079 --> 00:10:14,060
important for us they appeared a concept

00:10:07,370 --> 00:10:18,050
of public a context you will be picky

00:10:14,060 --> 00:10:22,220
speaks they appeared to come back

00:10:18,050 --> 00:10:28,730
structures one to implement the Crypt

00:10:22,220 --> 00:10:32,540
operations themselves and that to deal

00:10:28,730 --> 00:10:39,459
with I sent that one encoding/decoding

00:10:32,540 --> 00:10:41,899
and so on so forth and he was written

00:10:39,459 --> 00:10:45,800
reference implementation of Russian

00:10:41,899 --> 00:10:52,840
ghost cryptography which became the part

00:10:45,800 --> 00:10:58,990
of engine subdirectory well

00:10:52,840 --> 00:11:02,980
should mention two points wish the wall

00:10:58,990 --> 00:11:04,900
purple was white because they will be

00:11:02,980 --> 00:11:08,830
repeated again and again and again

00:11:04,900 --> 00:11:14,080
during the rest of my presentation there

00:11:08,830 --> 00:11:17,010
are a lot of peaks at the lists fixed

00:11:14,080 --> 00:11:19,390
internal is in OpenSSL enumeration of

00:11:17,010 --> 00:11:24,970
algorithms enumeration of ieads

00:11:19,390 --> 00:11:28,980
enumeration of cipher motifs on and on

00:11:24,970 --> 00:11:34,000
and on and in fact ever changes in

00:11:28,980 --> 00:11:38,160
standards requires changing in this list

00:11:34,000 --> 00:11:41,920
and open-cell team treats is as a

00:11:38,160 --> 00:11:44,110
breaking compatibility and I'm afraid

00:11:41,920 --> 00:11:53,140
they are right I'm afraid they're more

00:11:44,110 --> 00:11:57,550
right then I am the problem was we tried

00:11:53,140 --> 00:12:02,460
to implement compact structures to in

00:11:57,550 --> 00:12:08,250
the lib SSL which was perilous sssnake

00:12:02,460 --> 00:12:08,250
but in fact we didn't succeed because

00:12:09,990 --> 00:12:21,370
because of some support of legacy

00:12:15,160 --> 00:12:23,920
ciphers use and because of will at that

00:12:21,370 --> 00:12:26,830
moment more ever more irregular

00:12:23,920 --> 00:12:30,400
structure of their Liberty cell itself

00:12:26,830 --> 00:12:41,850
then the crypt was more regular at the

00:12:30,400 --> 00:12:43,970
time so it was okay till 2014 when the

00:12:41,850 --> 00:12:49,209
heart bleed

00:12:43,970 --> 00:12:52,549
it was published at that moment the

00:12:49,209 --> 00:12:54,159
OpenSSL team was significantly

00:12:52,549 --> 00:12:59,539
underfunded

00:12:54,159 --> 00:13:03,559
so when hardly the Kirk the community

00:12:59,539 --> 00:13:07,339
understood that guys we have a very

00:13:03,559 --> 00:13:10,399
important product which is developed

00:13:07,339 --> 00:13:18,289
with with that in fact without regular

00:13:10,399 --> 00:13:22,129
procedures by underfunded people so it

00:13:18,289 --> 00:13:24,529
means that such incidents will repeat

00:13:22,129 --> 00:13:30,139
again and again so something should be

00:13:24,529 --> 00:13:32,029
done and from that time the quarter they

00:13:30,139 --> 00:13:35,539
open said in the quarter team open asset

00:13:32,029 --> 00:13:39,169
management team was there formatted the

00:13:35,539 --> 00:13:41,779
processes were set up now there are

00:13:39,169 --> 00:13:46,509
strict processes of reviewing the

00:13:41,779 --> 00:13:50,299
patches now there are public road maps

00:13:46,509 --> 00:13:53,209
so in fact it means that when from the

00:13:50,299 --> 00:13:56,689
after heartbleed occurred the modern

00:13:53,209 --> 00:14:00,319
history of OpenSSL began and now it's

00:13:56,689 --> 00:14:05,229
significantly much more secure than it

00:14:00,319 --> 00:14:05,229
was before both in process and in cold

00:14:08,470 --> 00:14:18,169
[Music]

00:14:11,499 --> 00:14:20,949
2015 I met some people from the OpenSSL

00:14:18,169 --> 00:14:25,420
team during one of

00:14:20,949 --> 00:14:28,389
ATF meetings I met results who is a

00:14:25,420 --> 00:14:36,569
well-known person in ATF for

00:14:28,389 --> 00:14:38,290
cryptography community and he was very

00:14:36,569 --> 00:14:42,879
cooperative

00:14:38,290 --> 00:14:47,879
and we get an agreement how should we

00:14:42,879 --> 00:14:54,879
deal with ghost cryptography in open SSL

00:14:47,879 --> 00:14:57,040
at first the problem is that nobody in

00:14:54,879 --> 00:15:04,019
openness in main open a cell team is

00:14:57,040 --> 00:15:08,589
interested enough in was support so

00:15:04,019 --> 00:15:12,819
nobody was interested to either to

00:15:08,589 --> 00:15:18,069
provide the new algorithms or to fix

00:15:12,819 --> 00:15:21,309
something and at that moment we came to

00:15:18,069 --> 00:15:29,350
agreement that the engine should be

00:15:21,309 --> 00:15:31,269
moved to a separate world but all the

00:15:29,350 --> 00:15:33,809
other patches which are not out there is

00:15:31,269 --> 00:15:39,480
no specific but for the button protocol

00:15:33,809 --> 00:15:42,759
specific will go to the main three and

00:15:39,480 --> 00:15:49,709
so it was a process that took three

00:15:42,759 --> 00:15:55,110
months to make support operation both

00:15:49,709 --> 00:15:59,739
matching the new openness a standards

00:15:55,110 --> 00:16:05,549
they made me significantly rewrite the

00:15:59,739 --> 00:16:08,919
part in fact and I was very happy when

00:16:05,549 --> 00:16:11,850
the patch was accepted two main three at

00:16:08,919 --> 00:16:17,630
last now I'm sure it compiles

00:16:11,850 --> 00:16:20,339
at every changed of course as a new

00:16:17,630 --> 00:16:25,440
Russian ship two standards were

00:16:20,339 --> 00:16:28,800
developed during develop since 2005 to

00:16:25,440 --> 00:16:35,490
2015 there were again changes in

00:16:28,800 --> 00:16:38,970
internal lists there was a more clear

00:16:35,490 --> 00:16:43,709
design of the labor sale to that moment

00:16:38,970 --> 00:16:46,019
so various support of Russian specific

00:16:43,709 --> 00:16:51,060
age changed was moved to separate

00:16:46,019 --> 00:16:54,420
callbacks and I hope that there will be

00:16:51,060 --> 00:16:58,380
a day when these callbacks will be fully

00:16:54,420 --> 00:17:01,250
encapsulated in engine so it will

00:16:58,380 --> 00:17:08,429
significantly remove the process of the

00:17:01,250 --> 00:17:14,510
negotiation of what to do with it so it

00:17:08,429 --> 00:17:22,130
will accept and Russian nutella's became

00:17:14,510 --> 00:17:22,130
first class variations of protocol at

00:17:22,819 --> 00:17:32,419
1.10 branch currently if you download

00:17:29,340 --> 00:17:36,150
open ssl you get the support of

00:17:32,419 --> 00:17:40,340
standards that were penalized in Russia

00:17:36,150 --> 00:17:45,059
until to estimate until approximately

00:17:40,340 --> 00:17:48,000
2014 as I mentioned before there are

00:17:45,059 --> 00:17:51,140
some work-in-progress branches ghost

00:17:48,000 --> 00:17:54,150
engine became a separate patches a

00:17:51,140 --> 00:18:00,710
separate package and it's available at

00:17:54,150 --> 00:18:05,570
least in fedora in Devon in Russian

00:18:00,710 --> 00:18:05,570
widely used distribution of Linux and

00:18:06,169 --> 00:18:15,770
some other distributions less popular

00:18:11,480 --> 00:18:20,720
there there is a problem

00:18:15,770 --> 00:18:24,409
that as Russian crypto algorithms is a

00:18:20,720 --> 00:18:27,620
notable worldwide standardized we have a

00:18:24,409 --> 00:18:30,500
lack of packages containing root

00:18:27,620 --> 00:18:35,390
certificates of trusted C's it's a

00:18:30,500 --> 00:18:38,270
really big problem and last but not

00:18:35,390 --> 00:18:40,480
least we have a problem with hot

00:18:38,270 --> 00:18:44,210
specifics we scrape the police's because

00:18:40,480 --> 00:18:45,980
they because I understand why that sub

00:18:44,210 --> 00:18:49,480
people don't want to have anything with

00:18:45,980 --> 00:18:56,450
don't have anything to do with God I

00:18:49,480 --> 00:19:00,590
think that sooner or later we'll get an

00:18:56,450 --> 00:19:05,120
agreement how it can be done without

00:19:00,590 --> 00:19:10,940
breaking the compatibility and see the

00:19:05,120 --> 00:19:13,039
system in all J and well maybe go

00:19:10,940 --> 00:19:19,360
specific if the policy will become a

00:19:13,039 --> 00:19:19,360
part of for a package of cost engine a

00:19:24,820 --> 00:19:34,940
lot of minor problems and interactions

00:19:31,880 --> 00:19:40,299
because of course the process of

00:19:34,940 --> 00:19:45,110
standardization has separate bank line

00:19:40,299 --> 00:19:52,220
which has nothing to do with open sale

00:19:45,110 --> 00:19:55,340
process so the best solution we have is

00:19:52,220 --> 00:19:58,809
the solution patch to main code of open

00:19:55,340 --> 00:20:02,679
SSL together with engine for those who

00:19:58,809 --> 00:20:05,480
really wants to support brand-new

00:20:02,679 --> 00:20:09,110
variations of Russian Twitter they will

00:20:05,480 --> 00:20:11,390
have to rebuild open set sometimes but

00:20:09,110 --> 00:20:14,179
most of these patches are usually

00:20:11,390 --> 00:20:16,279
accepted to make good ways of course

00:20:14,179 --> 00:20:20,500
ghost has low priority for the world

00:20:16,279 --> 00:20:24,380
outside the Russia oh we understand it

00:20:20,500 --> 00:20:27,830
yes of course we still have a problem of

00:20:24,380 --> 00:20:28,970
extending hard calling lease and we will

00:20:27,830 --> 00:20:35,960
have it forever

00:20:28,970 --> 00:20:37,849
it's okay and we have a relatively poor

00:20:35,960 --> 00:20:40,549
state of international civilization of

00:20:37,849 --> 00:20:46,669
course algorithm so a lot of documents

00:20:40,549 --> 00:20:53,590
are published as informational C's so we

00:20:46,669 --> 00:20:57,309
are working on it here is the list of

00:20:53,590 --> 00:21:01,359
algorithms which were supported in

00:20:57,309 --> 00:21:06,320
various versions of them I don't think

00:21:01,359 --> 00:21:09,679
it is interesting it's just just to

00:21:06,320 --> 00:21:13,039
information so you see that deprecated

00:21:09,679 --> 00:21:19,539
standards are fading out and new sandals

00:21:13,039 --> 00:21:22,489
are implementing it's ok we have

00:21:19,539 --> 00:21:28,429
national standards for x5 with a

00:21:22,489 --> 00:21:31,609
national x.509 profile pig says then we

00:21:28,429 --> 00:21:34,279
have national standards for Pegasus ate

00:21:31,609 --> 00:21:38,419
and exist well of course we have

00:21:34,279 --> 00:21:41,340
standards for s/mime famous of course we

00:21:38,419 --> 00:21:42,879
have stands for tellus it's the main

00:21:41,340 --> 00:21:50,119
[Music]

00:21:42,879 --> 00:21:52,879
purpose of for for our clients but till

00:21:50,119 --> 00:21:54,679
last versions it was impossible to

00:21:52,879 --> 00:22:00,919
implement that detail as using it was

00:21:54,679 --> 00:22:04,190
because some extra protection was not

00:22:00,919 --> 00:22:08,389
details friend it requires the fixed

00:22:04,190 --> 00:22:11,389
order of packets to be deliberate ok you

00:22:08,389 --> 00:22:16,039
say Nutella specification allow using

00:22:11,389 --> 00:22:20,200
details there are of course

00:22:16,039 --> 00:22:20,200
work-in-progress specifications which

00:22:20,320 --> 00:22:26,300
apart le finalize the Russian party le

00:22:24,309 --> 00:22:32,600
implemented in

00:22:26,300 --> 00:22:37,730
code so I hope that sooner or later they

00:22:32,600 --> 00:22:40,340
will be part of openness selling at

00:22:37,730 --> 00:22:44,510
least in Telus part and some additions

00:22:40,340 --> 00:22:47,630
in CMS and it's 509 I think and of

00:22:44,510 --> 00:22:51,500
course we have standard set of

00:22:47,630 --> 00:22:58,730
supplementary others H mark PRF many of

00:22:51,500 --> 00:23:04,670
them the next one now when we have a

00:22:58,730 --> 00:23:09,800
support of the boss or any in fact any

00:23:04,670 --> 00:23:12,530
non-standard crypto in open SSL well you

00:23:09,800 --> 00:23:15,740
still need to support it in the

00:23:12,530 --> 00:23:20,450
application that you that use crypto

00:23:15,740 --> 00:23:23,990
libraries for the most cases if the

00:23:20,450 --> 00:23:26,360
application uses the modern day you can

00:23:23,990 --> 00:23:31,070
just load configuration file and show

00:23:26,360 --> 00:23:35,740
that engine providing vulgarism is

00:23:31,070 --> 00:23:39,670
loaded via the configuration file and

00:23:35,740 --> 00:23:43,370
everything will be more or less okay

00:23:39,670 --> 00:23:46,730
there are still no some legacy

00:23:43,370 --> 00:23:54,200
applications I mark them we know about

00:23:46,730 --> 00:23:58,370
our safe then it means that in most

00:23:54,200 --> 00:24:03,110
cases you have to rewrite from this or

00:23:58,370 --> 00:24:09,400
that algorithm specific API to Universal

00:24:03,110 --> 00:24:13,840
API - EVP API and sometimes for example

00:24:09,400 --> 00:24:18,310
the problem the product of yep Tacoma

00:24:13,840 --> 00:24:27,430
of a chemist we had to look into the

00:24:18,310 --> 00:24:32,560
protocol and carefully replace the basic

00:24:27,430 --> 00:24:36,280
primitives to Russian go specific and

00:24:32,560 --> 00:24:44,920
it's relatively rare case but you should

00:24:36,280 --> 00:24:49,800
take it in take out well the only

00:24:44,920 --> 00:24:55,180
problem which stays unsolved till now is

00:24:49,800 --> 00:24:59,530
support of force encrypt in Java there

00:24:55,180 --> 00:25:05,020
are at least three young implementations

00:24:59,530 --> 00:25:09,010
of Russian crypt there is a well fly

00:25:05,020 --> 00:25:14,760
open SSL Java library which uses open

00:25:09,010 --> 00:25:18,330
SSL and crypto provider I tried to

00:25:14,760 --> 00:25:22,570
provide the using to provide the ghost

00:25:18,330 --> 00:25:26,130
algorithms both sigh pursues its in this

00:25:22,570 --> 00:25:28,630
library but I did not have any success

00:25:26,130 --> 00:25:36,810
first of all because I almost don't know

00:25:28,630 --> 00:25:43,870
yeah awarding the configuration file so

00:25:36,810 --> 00:25:50,950
I hope that some when this work will be

00:25:43,870 --> 00:25:53,230
done and we will have support of in fact

00:25:50,950 --> 00:25:56,170
anyway as I told before in fact any

00:25:53,230 --> 00:26:01,810
nation any national cryptography in this

00:25:56,170 --> 00:26:08,440
script provider so okay

00:26:01,810 --> 00:26:10,690
we we took a worldwide cool kid we used

00:26:08,440 --> 00:26:16,210
a lot of

00:26:10,690 --> 00:26:18,780
code that we did not want right

00:26:16,210 --> 00:26:23,350
ourselves such as I said that one

00:26:18,780 --> 00:26:28,660
library many many other so what do we

00:26:23,350 --> 00:26:35,110
give to community first of all I think

00:26:28,660 --> 00:26:37,000
that Russian was engine using it is the

00:26:35,110 --> 00:26:43,600
most comprehensive tasting of them and

00:26:37,000 --> 00:26:46,630
subsystem in OpenSSL then I should

00:26:43,600 --> 00:26:51,480
mention I should mention two bugs found

00:26:46,630 --> 00:26:58,650
during implementation of new standards

00:26:51,480 --> 00:27:03,690
the first was a very mixed bag that when

00:26:58,650 --> 00:27:10,570
the elliptic curves matter was changing

00:27:03,690 --> 00:27:15,820
in shortly before 1.1.1 version was

00:27:10,570 --> 00:27:19,920
released we found that it does not works

00:27:15,820 --> 00:27:25,890
with some curves used in ghosts because

00:27:19,920 --> 00:27:33,990
the points on elliptic curves go to

00:27:25,890 --> 00:27:37,060
infinity and I immediately written to

00:27:33,990 --> 00:27:46,870
people who this change they agreed that

00:27:37,060 --> 00:27:50,220
it was a bug and fixed their mother bug

00:27:46,870 --> 00:27:57,040
I think relatively significant was

00:27:50,220 --> 00:28:00,900
status excursion in shake though I don't

00:27:57,040 --> 00:28:07,630
think it was exploitable outside but

00:28:00,900 --> 00:28:10,680
anyway it's better to have it fixed as

00:28:07,630 --> 00:28:14,730
Russia is

00:28:10,680 --> 00:28:17,570
country when non-latin bass the script

00:28:14,730 --> 00:28:25,220
is used of course we had a lot of

00:28:17,570 --> 00:28:33,330
problems related to implementation so

00:28:25,220 --> 00:28:36,210
some patches providing more promising

00:28:33,330 --> 00:28:39,170
better support of non-latin scripts was

00:28:36,210 --> 00:28:43,380
fixed and now i have a side project

00:28:39,170 --> 00:28:46,590
related to support the email address

00:28:43,380 --> 00:28:50,010
international in x.509 i hope it will be

00:28:46,590 --> 00:28:53,850
finalized yes many people don't like

00:28:50,010 --> 00:28:57,840
email address international i I don't

00:28:53,850 --> 00:29:02,250
like them too but as there are people in

00:28:57,840 --> 00:29:06,350
such countries as China Thailand and

00:29:02,250 --> 00:29:11,190
many others well alphabet has nothing

00:29:06,350 --> 00:29:14,930
common with leighton that we people will

00:29:11,190 --> 00:29:16,980
meet this creeps on the to deal with it

00:29:14,930 --> 00:29:25,710
in this or that way

00:29:16,980 --> 00:29:29,520
oh then i hope that sooner or later we

00:29:25,710 --> 00:29:39,270
will meet we will move some national

00:29:29,520 --> 00:29:41,340
specific structures 2 to 4 we will

00:29:39,270 --> 00:29:44,520
convert some national specific

00:29:41,340 --> 00:29:48,600
structures perform that will be

00:29:44,520 --> 00:29:53,250
mentioned the engine and it will allow

00:29:48,600 --> 00:29:59,040
to simplify the main code base of crypto

00:29:53,250 --> 00:30:04,920
library of course a lot of memory leaks

00:29:59,040 --> 00:30:06,090
a lot of small bugs were fixed and i

00:30:04,920 --> 00:30:09,140
wanna

00:30:06,090 --> 00:30:13,980
my project we made by one of

00:30:09,140 --> 00:30:18,270
participants of ghost engine development

00:30:13,980 --> 00:30:21,029
who provided support offers and fresh

00:30:18,270 --> 00:30:29,520
streebek in the Linux kernel if I'm not

00:30:21,029 --> 00:30:34,880
mistaken version 421 will continue here

00:30:29,520 --> 00:30:38,010
are relevant links to the presentation

00:30:34,880 --> 00:30:43,020
first of all the link to both tension

00:30:38,010 --> 00:30:44,850
itself then for those who basis and

00:30:43,020 --> 00:30:53,039
doesn't know we're over the sell code

00:30:44,850 --> 00:30:55,710
lives linked open cell well this may be

00:30:53,039 --> 00:30:58,470
the most important link in this

00:30:55,710 --> 00:31:01,020
presentation it's a brilliant paper

00:30:58,470 --> 00:31:04,159
described in writing custom engineer

00:31:01,020 --> 00:31:08,510
often sell and everyone who wants to

00:31:04,159 --> 00:31:11,210
write their own engine for example

00:31:08,510 --> 00:31:14,399
hardware acceleration or something else

00:31:11,210 --> 00:31:20,850
must read this article not shoot but

00:31:14,399 --> 00:31:27,419
mass then here is the link to a Russian

00:31:20,850 --> 00:31:29,659
to standard body enumeration of rough

00:31:27,419 --> 00:31:35,610
seas covering Russia crypto algorithms

00:31:29,659 --> 00:31:38,700
here is the document describing a new

00:31:35,610 --> 00:31:40,049
reference the LSI actively participate

00:31:38,700 --> 00:31:43,700
in this work

00:31:40,049 --> 00:31:48,929
and here are two mailing lists indicated

00:31:43,700 --> 00:31:50,940
first two Russian cryptography in

00:31:48,929 --> 00:31:54,240
open-source products and the second is

00:31:50,940 --> 00:31:58,590
dedicated to ghost engine itself well

00:31:54,240 --> 00:32:00,299
the language currently is Russian but if

00:31:58,590 --> 00:32:01,880
you are writing English of course noodle

00:32:00,299 --> 00:32:05,250
baths

00:32:01,880 --> 00:32:08,350
last but not least I want to make

00:32:05,250 --> 00:32:16,600
special thanks for those

00:32:08,350 --> 00:32:19,179
who cooperated with us during their well

00:32:16,600 --> 00:32:20,169
almost 15 years of development of

00:32:19,179 --> 00:32:23,860
Russian goes postal

00:32:20,169 --> 00:32:26,470
oh I should mention people from open the

00:32:23,860 --> 00:32:28,690
cell team dr. Steve Hansen mentioned

00:32:26,470 --> 00:32:32,830
before rich South's mentioned before

00:32:28,690 --> 00:32:37,929
Richard Lolita Matt Cassel they were

00:32:32,830 --> 00:32:39,909
very collaborative and did a lot to make

00:32:37,929 --> 00:32:44,019
possible to provide the Russian goes

00:32:39,909 --> 00:32:47,289
crypto in the main code base then I want

00:32:44,019 --> 00:32:49,980
to thank people from where at Camp Tim

00:32:47,289 --> 00:32:52,210
Thomas Thomas Mars Alexander Baca Bowie

00:32:49,980 --> 00:32:55,750
- thanks

00:32:52,210 --> 00:33:00,220
without the efforts it was almost

00:32:55,750 --> 00:33:04,679
impossible to implement both tension as

00:33:00,220 --> 00:33:08,289
a package in fedora oh I wanna thank

00:33:04,679 --> 00:33:10,929
some people from Russian cryptography

00:33:08,289 --> 00:33:12,850
community Vasily no matter what a

00:33:10,929 --> 00:33:17,350
statutory worst instance of smoosh

00:33:12,850 --> 00:33:22,500
laughs who actively participate in

00:33:17,350 --> 00:33:28,240
international standardization of Russian

00:33:22,500 --> 00:33:32,830
algorithms and protocols and they

00:33:28,240 --> 00:33:35,409
provide the help when it's necessary I

00:33:32,830 --> 00:33:36,940
want to thank people from Al's Linux

00:33:35,409 --> 00:33:38,679
team I like saying a lot work admit you

00:33:36,940 --> 00:33:45,009
let me let me know skip Italia chicken

00:33:38,679 --> 00:33:48,269
off for their efforts in improving and

00:33:45,009 --> 00:33:51,190
development at the engine and of course

00:33:48,269 --> 00:33:56,460
I want to

00:33:51,190 --> 00:33:59,050
thank to those who contributed in their

00:33:56,460 --> 00:34:03,180
engine code itself

00:33:59,050 --> 00:34:06,280
Victor Wagner at I'm dr. Katrina who

00:34:03,180 --> 00:34:08,730
worked in cryptochrome and provided a

00:34:06,280 --> 00:34:08,730
basic

00:34:23,170 --> 00:34:26,260
[Music]

00:34:32,330 --> 00:34:56,420
[Music]

00:34:34,940 --> 00:34:56,420
unfortunately if you

00:35:44,910 --> 00:35:54,520
well it's a very good question and

00:35:50,490 --> 00:36:00,370
unfortunately I don't know dance we we

00:35:54,520 --> 00:36:02,950
think the question is the question

00:36:00,370 --> 00:36:07,380
sorry the question is that the Chinese

00:36:02,950 --> 00:36:14,730
organisms became a part of the corner

00:36:07,380 --> 00:36:19,330
open the cell and ghost left aside yeah

00:36:14,730 --> 00:36:23,640
so they're rational regulation in sphere

00:36:19,330 --> 00:36:26,770
photography requires a certification of

00:36:23,640 --> 00:36:31,570
implementations and it's much more

00:36:26,770 --> 00:36:38,230
simple to provide the certified version

00:36:31,570 --> 00:36:41,230
of Krypton separate engine then in then

00:36:38,230 --> 00:36:42,850
publish it at the core it's impossible

00:36:41,230 --> 00:36:49,200
in fact the palace the divided version

00:36:42,850 --> 00:36:49,200
as a part of open-source project so

00:36:50,460 --> 00:37:04,710
there of course we can deal with

00:36:57,260 --> 00:37:07,430
for in the main code base replacing just

00:37:04,710 --> 00:37:15,930
replacing the kibbutz by engine it's

00:37:07,430 --> 00:37:19,680
allowed by Oh Penelope but as the ghost

00:37:15,930 --> 00:37:23,730
algorithms were first set of sub path

00:37:19,680 --> 00:37:28,110
algorithms appeared outside nobody

00:37:23,730 --> 00:37:32,040
wanted to build it in the main code base

00:37:28,110 --> 00:37:36,090
and as far as I know there are people

00:37:32,040 --> 00:37:39,440
from China who became part of opensl

00:37:36,090 --> 00:37:43,380
team or at least contributors and they

00:37:39,440 --> 00:37:47,330
support the algorithms at Lee Park at

00:37:43,380 --> 00:37:51,420
least partly I make mistake about the

00:37:47,330 --> 00:37:56,820
status but I've got something like this

00:37:51,420 --> 00:38:00,170
I don't know yes I have a dream to

00:37:56,820 --> 00:38:05,130
become a part of OpenSSL team and

00:38:00,170 --> 00:38:08,040
supporter and in that case maybe they

00:38:05,130 --> 00:38:12,690
will agree that what soccer ISM can

00:38:08,040 --> 00:38:17,340
become a part of open assignment code

00:38:12,690 --> 00:38:27,630
base but well it works as part of engine

00:38:17,340 --> 00:38:33,200
and it's no problem decimalisation has

00:38:27,630 --> 00:38:33,200
begun but not yet we will have

00:38:34,930 --> 00:38:41,690
there is a draft describing you

00:38:38,590 --> 00:38:46,810
authenticated encryption mode which

00:38:41,690 --> 00:38:51,610
differs from Java counter mode and CCM

00:38:46,810 --> 00:38:55,250
when it's when analyzed I think we will

00:38:51,610 --> 00:38:58,370
soonerlater provide the specification of

00:38:55,250 --> 00:39:09,230
using the Russian ghost to tell us one

00:38:58,370 --> 00:39:12,970
two three oh it's a pain there are no

00:39:09,230 --> 00:39:19,280
OpenSSL relate there are no browsers

00:39:12,970 --> 00:39:25,690
except maybe links who you script from

00:39:19,280 --> 00:39:31,010
OpenSSL most of them use crypto from NSS

00:39:25,690 --> 00:39:33,620
as far as I know there are two browsers

00:39:31,010 --> 00:39:36,170
which support cost but they're not

00:39:33,620 --> 00:39:40,430
widely used the first one is a lambic

00:39:36,170 --> 00:39:46,190
browser it's a fork of Chrome if I'm not

00:39:40,430 --> 00:39:52,460
mistaken and it has support of Russian

00:39:46,190 --> 00:39:55,760
ghost algorithms that one is so called

00:39:52,460 --> 00:39:58,340
Sputnik browser it's developed in one of

00:39:55,760 --> 00:40:02,540
government agencies support ghost

00:39:58,340 --> 00:40:05,000
algorithm - and where is it has an

00:40:02,540 --> 00:40:07,010
Easter Egg when established when you

00:40:05,000 --> 00:40:10,950
establish a connection a secure

00:40:07,010 --> 00:40:12,740
connection using both it shows not

00:40:10,950 --> 00:40:21,500
[Music]

00:40:12,740 --> 00:40:25,160
look but to habit eco indicator David

00:40:21,500 --> 00:40:27,609
not see is not not Jessica with Russian

00:40:25,160 --> 00:40:27,609
secours

00:40:32,110 --> 00:40:40,010
it's offensive it's offensive fishy but

00:40:36,040 --> 00:40:42,740
well if young is browser is more or less

00:40:40,010 --> 00:40:49,370
a user that's putting browser is almost

00:40:42,740 --> 00:40:51,370
not abused yes there is a commercial

00:40:49,370 --> 00:40:56,510
thank you there is a commercial

00:40:51,370 --> 00:41:00,160
implementation of Firefox implemented by

00:40:56,510 --> 00:41:00,160
Russian company named Lisi

00:41:00,760 --> 00:41:21,620
well you can try to bite sorry yes yes

00:41:18,260 --> 00:41:27,320
it's a very big problem because first of

00:41:21,620 --> 00:41:29,270
all it's political problem from time to

00:41:27,320 --> 00:41:34,000
time there appears a project of a

00:41:29,270 --> 00:41:34,000
standardizing of creating

00:41:34,230 --> 00:41:42,370
big Russian see and sanitizing and

00:41:38,770 --> 00:41:46,980
making it conforming the see browser

00:41:42,370 --> 00:41:52,050
form requirements and after that go see

00:41:46,980 --> 00:41:54,630
was root certificate can be added to

00:41:52,050 --> 00:41:59,880
various separation system bundles and

00:41:54,630 --> 00:42:05,860
most will start work out of books but

00:41:59,880 --> 00:42:08,880
unfortunately now this project is not

00:42:05,860 --> 00:42:08,880
actively developed

00:42:17,850 --> 00:42:27,450
you will cannot care for ghosts you can

00:42:24,270 --> 00:42:36,359
you cannot care focused out of Russia

00:42:27,450 --> 00:42:36,359
except very limited cases some Russian

00:42:36,540 --> 00:42:43,930
sites require goes to be connected and

00:42:41,220 --> 00:42:47,350
well I should mention about some

00:42:43,930 --> 00:42:51,490
projects of people who don't trust to

00:42:47,350 --> 00:42:55,650
MSA and decided that if they replace is

00:42:51,490 --> 00:43:01,800
with ghosts they get better security

00:42:55,650 --> 00:43:01,800
well it's all depends on your 3d models

00:43:09,090 --> 00:43:13,859
sorry I don't

00:43:14,310 --> 00:43:21,090
yes it's more or less used in Russia for

00:43:21,150 --> 00:43:33,940
let's say communication to government

00:43:27,520 --> 00:43:39,540
agencies mostly but there are a lot of

00:43:33,940 --> 00:43:39,540
project of where our most ratings both

00:43:56,510 --> 00:44:05,820
then if if there are no more questions I

00:44:02,090 --> 00:44:10,109
should mention that national white

00:44:05,820 --> 00:44:12,359
cryptography is present not only in

00:44:10,109 --> 00:44:16,470
Russia the China was mentioned already

00:44:12,359 --> 00:44:22,130
of course there is national crypto in

00:44:16,470 --> 00:44:26,550
Japan if I'm not mistaken in Korea and

00:44:22,130 --> 00:44:30,480
in some republics of the former USSR the

00:44:26,550 --> 00:44:35,340
Ukraine has Kalina algorithm bellos has

00:44:30,480 --> 00:44:40,410
their own algorithm to some Malaysian

00:44:35,340 --> 00:44:44,970
states have their algorithms so the

00:44:40,410 --> 00:44:48,240
problem of using not very worldwide

00:44:44,970 --> 00:44:50,210
standard crypto is actual for more

00:44:48,240 --> 00:44:57,470
people than

00:44:50,210 --> 00:44:59,470
you can think at first glance thank you

00:44:57,470 --> 00:45:07,090
very much

00:44:59,470 --> 00:45:07,090

YouTube URL: https://www.youtube.com/watch?v=80JvO-xjddo


