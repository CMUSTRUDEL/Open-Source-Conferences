Title: Flatpaks in Fedora - an update
Publication date: 2019-03-04
Playlist: DevConfCZ 2019
Description: 
	Presentation name: Flatpaks in Fedora - an update
Speaker: Owen Taylor
Description:  At DevConf.cz last year, Fedora's efforts to create Flatpaks in Fedora infrastructure out of Fedora Packages were presented. At that point, development was far along, but the capability was not yet deployed in Fedora infrastructure. A year later, Flatpaks are being built and are available for users to install.

This session will cover:

* What has changed in the last year?
* What progress has been made at creating a Fedora-based runtime and application Flatpaks?
* How do Fedora packagers and other interested get involved?
* How do users try out the Flatpaks?
* Automation and other things currently being worked on.
[ https://sched.co/Jcnk ]
Captions: 
	00:00:05,930 --> 00:00:14,940
okay um so I'm talking here about status

00:00:11,040 --> 00:00:17,210
update on flat packs in fedora my name

00:00:14,940 --> 00:00:19,590
is Owen Taylor I work at Red Hat I'm the

00:00:17,210 --> 00:00:21,630
architect for our desktop team I've

00:00:19,590 --> 00:00:24,119
worked on pulls every piece of the

00:00:21,630 --> 00:00:26,999
desktop but this is did my project for

00:00:24,119 --> 00:00:30,529
the last year or two to really try to

00:00:26,999 --> 00:00:34,700
improve our flat packs for you in fedora

00:00:30,529 --> 00:00:37,670
so the project that would talk about is

00:00:34,700 --> 00:00:41,010
building flat packs and classic runtimes

00:00:37,670 --> 00:00:42,750
from fedora RPMs on store infrastructure

00:00:41,010 --> 00:00:45,230
so that's sort of saying it it's a

00:00:42,750 --> 00:00:48,420
subset of the bigger flat pack problem

00:00:45,230 --> 00:00:50,940
as if you were in the last talk you you

00:00:48,420 --> 00:00:53,430
probably heard about a different way

00:00:50,940 --> 00:00:54,810
using flatten acts and building them you

00:00:53,430 --> 00:00:58,200
know building plot exactly from sores

00:00:54,810 --> 00:01:00,960
using flat hub to put your effects on

00:00:58,200 --> 00:01:02,940
I'm looking more quickly at building

00:01:00,960 --> 00:01:07,320
flat packs within the third structure

00:01:02,940 --> 00:01:09,659
and using the RPM pipeline so just so

00:01:07,320 --> 00:01:13,950
everybody is clear on what a flat pack

00:01:09,659 --> 00:01:16,289
is you know the most basic idea is that

00:01:13,950 --> 00:01:18,090
you have your operating system and then

00:01:16,289 --> 00:01:20,670
you separate graphical applications out

00:01:18,090 --> 00:01:23,549
and so like we updated separately from

00:01:20,670 --> 00:01:25,109
operating system and so that optionally

00:01:23,549 --> 00:01:26,999
you can add sandboxing there there

00:01:25,109 --> 00:01:29,789
you're wrapped up patients are in

00:01:26,999 --> 00:01:32,100
containers and flat pack additionally

00:01:29,789 --> 00:01:34,020
has the idea of our run time which is

00:01:32,100 --> 00:01:37,079
the idea that some set of libraries can

00:01:34,020 --> 00:01:38,759
also be put into a an image but then

00:01:37,079 --> 00:01:42,060
share between mobile applications so

00:01:38,759 --> 00:01:43,619
that updates those the libraries are

00:01:42,060 --> 00:01:44,880
shared between all the applications and

00:01:43,619 --> 00:01:46,259
they don't have to do every application

00:01:44,880 --> 00:01:47,219
doesn't have to keep duplicate its own

00:01:46,259 --> 00:01:49,439
copy of tlmc

00:01:47,219 --> 00:01:55,159
which is what you would see in the

00:01:49,439 --> 00:01:57,829
classic server-side container world so

00:01:55,159 --> 00:02:02,149
so I said so we're building

00:01:57,829 --> 00:02:05,329
flat back to runtimes from you know from

00:02:02,149 --> 00:02:06,530
store rpms so why do we want to do this

00:02:05,329 --> 00:02:10,190
why don't we just want to build

00:02:06,530 --> 00:02:12,019
everything from source well you know one

00:02:10,190 --> 00:02:14,299
reason is we wanted to make even more

00:02:12,019 --> 00:02:17,500
flat packs available if you went up to

00:02:14,299 --> 00:02:20,299
flat hub today you'd see about 450

00:02:17,500 --> 00:02:23,209
applications there which is a lot you

00:02:20,299 --> 00:02:25,760
might say but Fedora has about 1,000

00:02:23,209 --> 00:02:26,989
graphical application systems so we'd

00:02:25,760 --> 00:02:28,910
like to harvest some of those two-door

00:02:26,989 --> 00:02:30,739
applications with my people all the

00:02:28,910 --> 00:02:32,269
applications would be applications that

00:02:30,739 --> 00:02:34,519
nobody wants to put into cloud hog and

00:02:32,269 --> 00:02:37,069
get them into the set of plaques for

00:02:34,519 --> 00:02:40,030
everybody to use we also want the

00:02:37,069 --> 00:02:42,319
ability to ship a version of fedora

00:02:40,030 --> 00:02:44,720
particular fedora silver blue which is

00:02:42,319 --> 00:02:46,730
an image based version of fedora which

00:02:44,720 --> 00:02:48,829
only has applications as plat facts and

00:02:46,730 --> 00:02:51,380
have a big set of plaques available for

00:02:48,829 --> 00:02:54,260
that even if without the user having to

00:02:51,380 --> 00:02:56,510
go out make Explorer find fly hug buy

00:02:54,260 --> 00:02:58,069
all the places to get flat packs from so

00:02:56,510 --> 00:03:00,349
we all say these are you know out of the

00:02:58,069 --> 00:03:03,290
box fedora software in flat packs and

00:03:00,349 --> 00:03:08,720
then the final thing is that fedora T

00:03:03,290 --> 00:03:13,579
has a lot of infrastructure for checking

00:03:08,720 --> 00:03:15,859
licenses for for second security

00:03:13,579 --> 00:03:18,200
problems and building software in a way

00:03:15,859 --> 00:03:20,989
that people trust so if we can extend

00:03:18,200 --> 00:03:22,730
that to the flat back from creating and

00:03:20,989 --> 00:03:24,470
difficult of one time for creating then

00:03:22,730 --> 00:03:26,120
that gives an advantage you know people

00:03:24,470 --> 00:03:28,400
may find site to say this is a more

00:03:26,120 --> 00:03:30,440
appealing set of flat packs for me to

00:03:28,400 --> 00:03:33,380
use so those are some of the reasons why

00:03:30,440 --> 00:03:35,180
we're you know engaged in the in this

00:03:33,380 --> 00:03:37,970
exercise to go flat back this way and

00:03:35,180 --> 00:03:40,669
you know a third of fourth reason is not

00:03:37,970 --> 00:03:43,609
really reason much for much for users

00:03:40,669 --> 00:03:47,030
but for me as a developer is that yeah

00:03:43,609 --> 00:03:48,620
what we're doing in fedora is always has

00:03:47,030 --> 00:03:50,930
an Iowa where in doing around later and

00:03:48,620 --> 00:03:52,459
we saw these influx for that we're

00:03:50,930 --> 00:03:54,139
building out here some of the ways we're

00:03:52,459 --> 00:03:56,209
doing it are things we are playing to

00:03:54,139 --> 00:04:01,099
reuse when building software for for

00:03:56,209 --> 00:04:04,130
relevance um so again sort of reaping

00:04:01,099 --> 00:04:05,780
what a flat deck looks like it's when

00:04:04,130 --> 00:04:08,840
topics are running it has its own file

00:04:05,780 --> 00:04:10,010
system namespace and there are a couple

00:04:08,840 --> 00:04:11,989
little directories they

00:04:10,010 --> 00:04:14,510
that that come from different sources in

00:04:11,989 --> 00:04:17,060
that in space the slash app directory is

00:04:14,510 --> 00:04:20,600
where you have the application itself

00:04:17,060 --> 00:04:22,190
and any libraries that are bundled in

00:04:20,600 --> 00:04:25,580
that application it's the flat pack

00:04:22,190 --> 00:04:27,260
image the slash user slash Etsy on your

00:04:25,580 --> 00:04:29,240
hand come from the runtime the set of

00:04:27,260 --> 00:04:30,830
shared libraries and then you might have

00:04:29,240 --> 00:04:32,210
other directories like slash homer slash

00:04:30,830 --> 00:04:35,090
dev which income from the running system

00:04:32,210 --> 00:04:36,919
that depends a little bit on what kind

00:04:35,090 --> 00:04:39,080
of sandbox we have set off if you don't

00:04:36,919 --> 00:04:41,419
have visibility to users home then you

00:04:39,080 --> 00:04:46,850
won't have home will not be the system

00:04:41,419 --> 00:04:51,139
home directory so it with a fedora flat

00:04:46,850 --> 00:04:52,789
pack this fact this /f directory is made

00:04:51,139 --> 00:04:55,220
up of four packages but since they're

00:04:52,789 --> 00:04:57,740
locating slash app we actually have to

00:04:55,220 --> 00:04:59,270
rebuild them because Center for your

00:04:57,740 --> 00:05:02,210
packages are going to have a prefix of

00:04:59,270 --> 00:05:03,830
slash user and we have to actually

00:05:02,210 --> 00:05:05,810
rebuild the source code to change where

00:05:03,830 --> 00:05:07,370
they located the runtime on the other

00:05:05,810 --> 00:05:09,639
hand is made public absolutely standard

00:05:07,370 --> 00:05:13,990
core packages just the same ones that

00:05:09,639 --> 00:05:13,990
you would install it a normal fedora

00:05:14,979 --> 00:05:21,349
so we rebuild the packages we run a

00:05:18,470 --> 00:05:24,830
bundle we use fedora modularity for that

00:05:21,349 --> 00:05:26,419
door modularity being a way of they'll

00:05:24,830 --> 00:05:30,470
handle different sets of packages within

00:05:26,419 --> 00:05:32,630
fedora in a very structured fashion we

00:05:30,470 --> 00:05:36,289
take those and we use a floor container

00:05:32,630 --> 00:05:38,720
build service to build a no CI image so

00:05:36,289 --> 00:05:41,870
basically a doctrine of evolution with a

00:05:38,720 --> 00:05:43,430
doctor format and we really get that we

00:05:41,870 --> 00:05:45,560
do that with the authority of build

00:05:43,430 --> 00:05:49,220
servers and then we distribute via the

00:05:45,560 --> 00:05:50,720
fedora in a registry so both us um in

00:05:49,220 --> 00:05:52,130
terms of how what we're building and how

00:05:50,720 --> 00:05:53,960
we're distributing it we're trying to

00:05:52,130 --> 00:05:56,630
very close to how Fedora handles

00:05:53,960 --> 00:05:59,450
containers and this is to try to keep

00:05:56,630 --> 00:06:02,030
any sort of an essence have a necessary

00:05:59,450 --> 00:06:03,560
separation happening between what we're

00:06:02,030 --> 00:06:05,210
doing for containers on the server side

00:06:03,560 --> 00:06:09,740
on what we're doing from caner is from

00:06:05,210 --> 00:06:13,039
the desktop side so so what's the status

00:06:09,740 --> 00:06:15,229
of this well it's as I think I had a

00:06:13,039 --> 00:06:17,419
talk here last week January I said it's

00:06:15,229 --> 00:06:20,330
almost there and turned out to come till

00:06:17,419 --> 00:06:23,100
November until we actually got it fully

00:06:20,330 --> 00:06:25,430
operational but you can you know

00:06:23,100 --> 00:06:27,410
now if your user you can add the

00:06:25,430 --> 00:06:31,020
flat-pack remote for the Fedora

00:06:27,410 --> 00:06:34,250
repository there's a sort of standard

00:06:31,020 --> 00:06:37,020
one and then the testing one which adds

00:06:34,250 --> 00:06:38,160
it's basically the virtual testing

00:06:37,020 --> 00:06:39,960
versions up facing the guitar and

00:06:38,160 --> 00:06:41,850
updates testing that we're developers

00:06:39,960 --> 00:06:43,650
push them before they've been gone state

00:06:41,850 --> 00:06:45,950
you don't need both you can have one or

00:06:43,650 --> 00:06:49,020
the other

00:06:45,950 --> 00:06:52,080
and dude we have a lot of flat packs

00:06:49,020 --> 00:06:56,310
well to be honest no there are three in

00:06:52,080 --> 00:06:57,690
the repository right now we did so we're

00:06:56,310 --> 00:07:02,700
trying to jumpstart out that a little

00:06:57,690 --> 00:07:04,350
bit and we had a hackfest this this week

00:07:02,700 --> 00:07:05,610
and they ran an office to source it down

00:07:04,350 --> 00:07:07,440
for a couple hours and try to turn out

00:07:05,610 --> 00:07:09,150
some more and I think that there are

00:07:07,440 --> 00:07:12,810
I know released 14 which are almost

00:07:09,150 --> 00:07:14,910
ready to to push out to the prosper that

00:07:12,810 --> 00:07:16,950
could be built in don't right now so

00:07:14,910 --> 00:07:18,660
hopefully I'll be able say that three

00:07:16,950 --> 00:07:21,810
years twenty or thirty within a week or

00:07:18,660 --> 00:07:23,460
so but you know he'll it's still a small

00:07:21,810 --> 00:07:28,620
number if you'll get flat hop as I said

00:07:23,460 --> 00:07:30,240
there's about 450 there so you know but

00:07:28,620 --> 00:07:31,950
the good thing is that it's not like

00:07:30,240 --> 00:07:34,320
we're losing the race here because

00:07:31,950 --> 00:07:35,030
Fedora users get both of these it's not

00:07:34,320 --> 00:07:38,460
that good either

00:07:35,030 --> 00:07:41,610
the one from Fedora or the ones with

00:07:38,460 --> 00:07:43,650
flat hop ibly actually can get the

00:07:41,610 --> 00:07:44,940
intersection of what's on either one and

00:07:43,650 --> 00:07:47,520
that's I think the important thing to

00:07:44,940 --> 00:07:49,680
understand about the flat pack ecosystem

00:07:47,520 --> 00:07:51,540
is not built around the a single App

00:07:49,680 --> 00:07:54,300
Store like it has to be in the App Store

00:07:51,540 --> 00:07:57,600
to be available instead you can have any

00:07:54,300 --> 00:07:59,940
number of remotes of sources for plat

00:07:57,600 --> 00:08:01,650
packs enable in your system and they're

00:07:59,940 --> 00:08:04,650
all information from all those are also

00:08:01,650 --> 00:08:07,080
downloaded and combined so you either on

00:08:04,650 --> 00:08:14,040
the command line or engram software you

00:08:07,080 --> 00:08:15,270
see both sets of applications so I would

00:08:14,040 --> 00:08:18,590
talk a little bit of the view for a

00:08:15,270 --> 00:08:21,660
fedora packager there are some tools to

00:08:18,590 --> 00:08:23,520
create a template for your flat pack to

00:08:21,660 --> 00:08:26,280
build locally and then once you have a

00:08:23,520 --> 00:08:31,260
building locally you can build it then

00:08:26,280 --> 00:08:33,440
in Koji and I'll do a very very simple

00:08:31,260 --> 00:08:33,440
demo

00:08:35,130 --> 00:08:44,649
so so the first thing we're to do is

00:08:37,930 --> 00:08:47,920
demo was going to use the RPM to

00:08:44,649 --> 00:08:51,100
flatback thing to tool to Freight a

00:08:47,920 --> 00:08:54,490
template here and what were you a

00:08:51,100 --> 00:08:57,220
shortcut is that the our grandpa tools

00:08:54,490 --> 00:08:59,260
knows that if can God look on flat hub

00:08:57,220 --> 00:09:02,410
and say this app is already on flat hub

00:08:59,260 --> 00:09:03,880
let me use that as a template to help

00:09:02,410 --> 00:09:05,770
figure out what all the sandboxing

00:09:03,880 --> 00:09:07,510
options I need are and some of the other

00:09:05,770 --> 00:09:10,480
things that you know would have to be

00:09:07,510 --> 00:09:14,020
added manually otherwise so that's going

00:09:10,480 --> 00:09:17,230
to look at the set of rpms in the Fedora

00:09:14,020 --> 00:09:19,000
pod stories and the and hub for

00:09:17,230 --> 00:09:21,220
something called plotter classroom and

00:09:19,000 --> 00:09:28,720
then go ahead and write out the metadata

00:09:21,220 --> 00:09:31,089
files you need okay so this is this one

00:09:28,720 --> 00:09:34,660
at the module metadata file and it's

00:09:31,089 --> 00:09:36,400
actually really very small there's some

00:09:34,660 --> 00:09:38,740
sub up there's like a description here

00:09:36,400 --> 00:09:41,050
which comes from their spec file this

00:09:38,740 --> 00:09:42,850
stuff is just basically boilerplate

00:09:41,050 --> 00:09:46,270
saying that it uses a flatback runtime

00:09:42,850 --> 00:09:50,080
module and then there's a single rpm in

00:09:46,270 --> 00:09:52,180
this one just the application itself it

00:09:50,080 --> 00:09:55,750
says this MIDI phone saying pull the

00:09:52,180 --> 00:09:58,930
store 29 branch of quarter fossil the

00:09:55,750 --> 00:10:00,490
other file that you have says after you

00:09:58,930 --> 00:10:06,580
build it how do you make it into a flat

00:10:00,490 --> 00:10:10,270
pack and there's this options here say

00:10:06,580 --> 00:10:15,490
it can use was echoes 2x and a x11 o

00:10:10,270 --> 00:10:16,810
Waylon and audio and be calm and you you

00:10:15,490 --> 00:10:18,910
can do this you know if you didn't have

00:10:16,810 --> 00:10:20,050
the flat hub shortcut you'd have to

00:10:18,910 --> 00:10:25,089
create this by hand and there's some

00:10:20,050 --> 00:10:26,589
examples in the docs but the having it

00:10:25,089 --> 00:10:30,540
be able to pull it from five makes me a

00:10:26,589 --> 00:10:36,029
little faster so then I can do module

00:10:30,540 --> 00:10:36,029
build is installed and that type

00:10:39,180 --> 00:10:49,000
modularity expects you to build and

00:10:41,769 --> 00:10:52,029
darkening the same as your module that

00:10:49,000 --> 00:10:53,440
should work better so I'm going to now

00:10:52,029 --> 00:10:59,490
go back to my presentation because that

00:10:53,440 --> 00:11:02,889
will take some minutes to complete and

00:10:59,490 --> 00:11:06,310
this there is a tutorial on web on the

00:11:02,889 --> 00:11:07,959
web that goes for all this also has more

00:11:06,310 --> 00:11:09,790
detailed information about what goes

00:11:07,959 --> 00:11:20,019
into your container about Yambol and and

00:11:09,790 --> 00:11:22,050
so forth so is it easy to this apart to

00:11:20,019 --> 00:11:24,850
do this it really depends upon how many

00:11:22,050 --> 00:11:26,949
libraries need to bundle if you said not

00:11:24,850 --> 00:11:29,440
going to any like I just showed you it's

00:11:26,949 --> 00:11:31,389
easy if you have to blend all many many

00:11:29,440 --> 00:11:33,519
libraries then one of them is not gonna

00:11:31,389 --> 00:11:35,589
rebuild properly it's going to wrong and

00:11:33,519 --> 00:11:36,790
you quite been a long time friend either

00:11:35,589 --> 00:11:38,290
thing to a flat back

00:11:36,790 --> 00:11:40,720
so what we're going to address this is

00:11:38,290 --> 00:11:43,660
we have a clap at common module which

00:11:40,720 --> 00:11:45,550
has pre-built things Royal Canin - slash

00:11:43,660 --> 00:11:47,199
app they can be just pulled into a flat

00:11:45,550 --> 00:11:49,810
pack and bundled without having to

00:11:47,199 --> 00:11:53,110
rebuild them from a source and that the

00:11:49,810 --> 00:11:56,730
idea those make it easy and this is sort

00:11:53,110 --> 00:11:58,839
of showing what the fact is this is

00:11:56,730 --> 00:12:01,000
lifting the thousand applications that

00:11:58,839 --> 00:12:02,380
are in fedora how many things you have

00:12:01,000 --> 00:12:04,510
to bundle to make a flat back out of

00:12:02,380 --> 00:12:05,769
that and the Greens of the bottom here

00:12:04,510 --> 00:12:08,079
is once they don't have to bundle

00:12:05,769 --> 00:12:09,519
anything that little pinking at the top

00:12:08,079 --> 00:12:13,839
is application we have to bundle more

00:12:09,519 --> 00:12:16,779
than 100 libraries that's not gonna work

00:12:13,839 --> 00:12:19,180
so and over here we're doing is as and

00:12:16,779 --> 00:12:20,860
more things can I'm comment how does it

00:12:19,180 --> 00:12:23,819
become easier so you can see that this

00:12:20,860 --> 00:12:26,410
is currently the don't comment I made

00:12:23,819 --> 00:12:30,459
you know we've gone before under 502

00:12:26,410 --> 00:12:32,199
pretty much in the easy category so

00:12:30,459 --> 00:12:34,389
that's like you know if that helps the

00:12:32,199 --> 00:12:36,939
package are there yeah there's like okay

00:12:34,389 --> 00:12:39,339
well hanging proof for the future is a

00:12:36,939 --> 00:12:40,940
take 80 fibers and pearl to it that

00:12:39,339 --> 00:12:43,070
would have a lot more applications there

00:12:40,940 --> 00:12:45,230
that I think a lot of things that are

00:12:43,070 --> 00:12:47,540
for the pink apps like using a kitty and

00:12:45,230 --> 00:12:51,350
pearl and then they get on tons of

00:12:47,540 --> 00:12:54,320
libraries you have to bundle so what's

00:12:51,350 --> 00:12:55,310
going on the future for fedora 30 we

00:12:54,320 --> 00:12:58,430
looking at some improvements to go

00:12:55,310 --> 00:13:01,370
software to display commissions better

00:12:58,430 --> 00:13:03,410
and also handle better when their

00:13:01,370 --> 00:13:05,120
application between sources if you have

00:13:03,410 --> 00:13:08,030
an application in both flat hub and in

00:13:05,120 --> 00:13:10,010
the Fedora repositories showing it very

00:13:08,030 --> 00:13:12,350
sensible user interface that defaults to

00:13:10,010 --> 00:13:15,580
install one of them and then maybe you

00:13:12,350 --> 00:13:15,580
can select the other one if you want to

00:13:16,570 --> 00:13:21,110
looking for improvements or packagers to

00:13:18,920 --> 00:13:22,460
make a flat-pack comment better bigger

00:13:21,110 --> 00:13:26,240
to make it less things you have to

00:13:22,460 --> 00:13:32,240
install make local goals faster make any

00:13:26,240 --> 00:13:33,980
errors easy to understand and one

00:13:32,240 --> 00:13:38,840
important thing is going to be automatic

00:13:33,980 --> 00:13:41,660
rebuilds so to be able to it's so many

00:13:38,840 --> 00:13:44,060
updates a package in fedora say ah this

00:13:41,660 --> 00:13:46,010
package is bundled into these three flat

00:13:44,060 --> 00:13:49,790
packs automatically in your build with

00:13:46,010 --> 00:13:51,380
flat packs and then say total maintainer

00:13:49,790 --> 00:13:53,660
look we've got a new version of your

00:13:51,380 --> 00:13:55,220
flat pack why don't you test it out make

00:13:53,660 --> 00:13:58,390
sure it works and then you can submit

00:13:55,220 --> 00:14:00,920
the update so that that's a goal it's a

00:13:58,390 --> 00:14:03,130
require some new services running on

00:14:00,920 --> 00:14:05,630
your infrastructure so it's a little bit

00:14:03,130 --> 00:14:07,250
hey that's some simple work getting

00:14:05,630 --> 00:14:11,630
there but that's probably the next thing

00:14:07,250 --> 00:14:15,470
we have to tackle for working on flat

00:14:11,630 --> 00:14:21,440
packs in fedora another thing that we

00:14:15,470 --> 00:14:22,820
want to work on is extensions so the

00:14:21,440 --> 00:14:23,930
idea of extension is a part of the

00:14:22,820 --> 00:14:26,210
flat-pack ecosystem what they didn't

00:14:23,930 --> 00:14:29,540
like so in my initial picture is that an

00:14:26,210 --> 00:14:32,450
extension is a set of codec set of files

00:14:29,540 --> 00:14:35,900
that can be added to a flat back or one

00:14:32,450 --> 00:14:37,820
time to add Nate new capabilities it

00:14:35,900 --> 00:14:41,440
could be themes and the codex is an

00:14:37,820 --> 00:14:44,270
important part we add new media codecs

00:14:41,440 --> 00:14:45,500
application plugins sometimes we want to

00:14:44,270 --> 00:14:47,270
split off the language support for our

00:14:45,500 --> 00:14:49,880
nap patients into a separate extension

00:14:47,270 --> 00:14:51,440
you think about Weaver office including

00:14:49,880 --> 00:14:52,420
all the spelling dictionaries for every

00:14:51,440 --> 00:14:58,750
language

00:14:52,420 --> 00:15:01,690
for a very big a very big plaque to

00:14:58,750 --> 00:15:03,430
download it cannot only the what you

00:15:01,690 --> 00:15:06,430
need for your current language makes it

00:15:03,430 --> 00:15:07,570
a much smaller download so we don't

00:15:06,430 --> 00:15:09,579
currently have support for building

00:15:07,570 --> 00:15:11,709
those within the door can't build system

00:15:09,579 --> 00:15:13,959
but that's something we can tackle in

00:15:11,709 --> 00:15:18,220
the future it to really make it story

00:15:13,959 --> 00:15:23,440
complete so farther in the future some

00:15:18,220 --> 00:15:26,070
things we would like to do is to look at

00:15:23,440 --> 00:15:27,970
signature support currently when you

00:15:26,070 --> 00:15:30,370
you're installing from the floor right

00:15:27,970 --> 00:15:32,350
to the floor registry you get a it's an

00:15:30,370 --> 00:15:36,130
index which has cryptographic hashes of

00:15:32,350 --> 00:15:39,329
all the plaques to install and those

00:15:36,130 --> 00:15:41,589
were checked and you know so there's an

00:15:39,329 --> 00:15:42,970
addicted over each yeah seems a lot of

00:15:41,589 --> 00:15:45,519
directly from fedora so you have some

00:15:42,970 --> 00:15:47,470
level of safety there but having

00:15:45,519 --> 00:15:49,389
cryptographic signatures on the flat

00:15:47,470 --> 00:15:52,199
packs would give more flexibility and

00:15:49,389 --> 00:15:54,279
more resilience against tampering

00:15:52,199 --> 00:15:56,019
eventually we might want to move to be

00:15:54,279 --> 00:15:59,050
able to skip the Archaean step there

00:15:56,019 --> 00:16:01,120
bill to build a flat pack directly from

00:15:59,050 --> 00:16:03,190
source in fedora and they have something

00:16:01,120 --> 00:16:06,730
generally we're looking at in fedora is

00:16:03,190 --> 00:16:09,279
saying you know do we need spec files do

00:16:06,730 --> 00:16:12,310
we need to go tar tar ball to spec file

00:16:09,279 --> 00:16:14,350
to final result or can we make things

00:16:12,310 --> 00:16:15,790
simpler for packagers so eventually you

00:16:14,350 --> 00:16:17,350
know once we get some momentum there I

00:16:15,790 --> 00:16:19,750
think we might want to look at how we

00:16:17,350 --> 00:16:21,220
can go directly from source but within

00:16:19,750 --> 00:16:22,510
the federal infrastructure but that's

00:16:21,220 --> 00:16:24,310
not something that that's not the

00:16:22,510 --> 00:16:29,320
initial step that's a future step once

00:16:24,310 --> 00:16:36,130
we have some things going so let's see

00:16:29,320 --> 00:16:38,769
if the see how it be ok so it build it

00:16:36,130 --> 00:16:40,660
all that I had sex it install so then it

00:16:38,769 --> 00:16:43,410
installed it and it should be installed

00:16:40,660 --> 00:16:43,410
now so

00:16:44,700 --> 00:16:56,070
and there I have they can own Petrus

00:16:50,490 --> 00:17:00,210
version so okay the you know Russian

00:16:56,070 --> 00:17:07,439
game of falling blocks not which is not

00:17:00,210 --> 00:17:09,449
Tetris so that's so that's a tamekia the

00:17:07,439 --> 00:17:11,699
baby for the simplest case of creating a

00:17:09,449 --> 00:17:13,290
placard or I did not have to edit a

00:17:11,699 --> 00:17:15,720
single line of the file so that will

00:17:13,290 --> 00:17:19,170
create they were all created by rpm to a

00:17:15,720 --> 00:17:21,000
flat-pack fully correctly so and that

00:17:19,170 --> 00:17:23,550
and you know that's probably are are

00:17:21,000 --> 00:17:25,530
several 100 or more applicants that are

00:17:23,550 --> 00:17:29,200
gonna be that simple and then some which

00:17:25,530 --> 00:17:32,390
it will take more work so

00:17:29,200 --> 00:17:32,390
[Music]

00:17:36,720 --> 00:17:50,610
yes I guess I take questions now so so

00:17:46,440 --> 00:17:52,169
how did it how did it know how didn't

00:17:50,610 --> 00:17:57,000
know how to do everything just make it

00:17:52,169 --> 00:17:59,549
work so so when it it's it so when they

00:17:57,000 --> 00:18:01,549
are the RPM to clap back said okay

00:17:59,549 --> 00:18:03,899
there's a quarter puzzle or p.m. there

00:18:01,549 --> 00:18:05,730
it doesn't have any requirement on the

00:18:03,899 --> 00:18:09,539
runtime so let's create a module that

00:18:05,730 --> 00:18:11,179
just lists that that one spec file then

00:18:09,539 --> 00:18:14,909
it built it in an environment where the

00:18:11,179 --> 00:18:17,279
the RPI mackerels were changed so like

00:18:14,909 --> 00:18:20,549
bender was no longer use a pen it was a

00:18:17,279 --> 00:18:21,779
pin and where the standard percent to

00:18:20,549 --> 00:18:24,600
figure macro that you used when

00:18:21,779 --> 00:18:27,450
configuring uh configuring in a spec

00:18:24,600 --> 00:18:31,500
file path passed that's that's prefix

00:18:27,450 --> 00:18:34,320
equals slash app to automate and then

00:18:31,500 --> 00:18:37,379
that that so that so it automatically

00:18:34,320 --> 00:18:39,360
moved everything over to change to that

00:18:37,379 --> 00:18:41,340
slash path and usually when things fail

00:18:39,360 --> 00:18:43,529
is because the spec file hard-coded /

00:18:41,340 --> 00:18:44,909
Jews are somewhere in the tightest

00:18:43,529 --> 00:18:50,370
instructions and then you have to go out

00:18:44,909 --> 00:18:52,490
and fix the spec file yeah so these are

00:18:50,370 --> 00:18:54,480
things I do not yet usually these are

00:18:52,490 --> 00:18:55,559
fixes are just making things conform

00:18:54,480 --> 00:18:57,590
better to the fedora packaging

00:18:55,559 --> 00:19:00,590
guidelines

00:18:57,590 --> 00:19:00,590
yes

00:19:01,190 --> 00:19:06,570
so that ik

00:19:04,200 --> 00:19:09,299
it's a fedora that's using a fedora one

00:19:06,570 --> 00:19:11,399
time which is basically also generated

00:19:09,299 --> 00:19:14,759
in the door can build system it

00:19:11,399 --> 00:19:16,999
basically just basically installs a

00:19:14,759 --> 00:19:20,070
whole lot of lots of Fedora packages

00:19:16,999 --> 00:19:22,769
which I'd find it a module to and then

00:19:20,070 --> 00:19:23,970
builds container out of them so so

00:19:22,769 --> 00:19:26,429
that's all right now that's a runtime

00:19:23,970 --> 00:19:28,169
that's only a runtime and not an SDK so

00:19:26,429 --> 00:19:30,139
it means that you can't compile again

00:19:28,169 --> 00:19:32,820
only

00:19:30,139 --> 00:19:34,139
you only run FK codes these have uh

00:19:32,820 --> 00:19:36,600
people to dairy from through rpms

00:19:34,139 --> 00:19:40,100
against it we in the future might also

00:19:36,600 --> 00:19:40,100
darren sdk from there

00:19:46,170 --> 00:20:05,610
okay well thank you okay so I mean I

00:20:02,130 --> 00:20:07,790
think even the Fedora one on sorry the

00:20:05,610 --> 00:20:11,550
question was what was what would be the

00:20:07,790 --> 00:20:13,770
advantage of using the Fedora SDK in one

00:20:11,550 --> 00:20:15,360
time over using the free desktop runtime

00:20:13,770 --> 00:20:17,970
well I mean I think that the advantages

00:20:15,360 --> 00:20:20,660
of using a fedora SDK are completely

00:20:17,970 --> 00:20:23,640
clear but if we were to also generate

00:20:20,660 --> 00:20:24,690
Santos SDK then you could say okay this

00:20:23,640 --> 00:20:28,860
is going to be entertaining with

00:20:24,690 --> 00:20:31,400
security fixes over you know five year

00:20:28,860 --> 00:20:33,450
or seven year lifetime was to get you up

00:20:31,400 --> 00:20:34,860
you know something that pretty

00:20:33,450 --> 00:20:38,580
fraud that gives me one to be stable to

00:20:34,860 --> 00:20:40,620
be an advantage there you know I mean it

00:20:38,580 --> 00:20:42,300
also you know that would I say be the

00:20:40,620 --> 00:20:45,750
main thing it's just knowing that

00:20:42,300 --> 00:20:46,710
contained within the with with

00:20:45,750 --> 00:20:49,080
maintenance of the underlying

00:20:46,710 --> 00:20:53,130
distribution so whatever door gives you

00:20:49,080 --> 00:20:54,330
you know or whatever you know whatever

00:20:53,130 --> 00:20:55,740
whatever sento it's good to you or

00:20:54,330 --> 00:20:58,500
whatever your sourcing phone would have

00:20:55,740 --> 00:21:00,390
it would carry over to the SDK I mean

00:20:58,500 --> 00:21:02,400
also you would get the security updates

00:21:00,390 --> 00:21:05,060
from the distribution ingest in the

00:21:02,400 --> 00:21:05,060
runtime

00:21:18,320 --> 00:21:23,650
is there any plan like to distinguish

00:21:20,600 --> 00:21:23,650
before they come

00:21:26,090 --> 00:21:33,509
so so the question was if the pineapple

00:21:30,899 --> 00:21:35,820
our apostle is involved available from

00:21:33,509 --> 00:21:38,220
both as an RPM and fedora and a flat

00:21:35,820 --> 00:21:38,669
pack of fedora and a flat pack on flat

00:21:38,220 --> 00:21:41,460
hub

00:21:38,669 --> 00:21:44,850
what's experience for the user there and

00:21:41,460 --> 00:21:46,830
then you know so you only can have one

00:21:44,850 --> 00:21:50,879
installed an active at the same time

00:21:46,830 --> 00:21:52,049
that's basically because the you know it

00:21:50,879 --> 00:21:53,549
doesn't really make sense the user if

00:21:52,049 --> 00:21:55,289
there's like three different quadruple

00:21:53,549 --> 00:21:58,230
icons and with all the same name and

00:21:55,289 --> 00:22:01,559
same icon showing up in your application

00:21:58,230 --> 00:22:03,090
launcher but you know the goal but to

00:22:01,559 --> 00:22:06,119
what we're working on for the next

00:22:03,090 --> 00:22:08,700
version of genome software is that you

00:22:06,119 --> 00:22:10,559
could go to the home software click look

00:22:08,700 --> 00:22:13,019
at quantico still there and solve

00:22:10,559 --> 00:22:16,470
applications see that oh I have the

00:22:13,019 --> 00:22:18,480
fedora flat pack installed change that

00:22:16,470 --> 00:22:22,350
say I want installed the flat hub one

00:22:18,480 --> 00:22:24,450
instead and and then switch it over that

00:22:22,350 --> 00:22:25,799
way so it's something that is available

00:22:24,450 --> 00:22:27,450
to the user but it's not like you can

00:22:25,799 --> 00:22:30,389
have the choice of running where and

00:22:27,450 --> 00:22:32,480
beyond the Red Hat when you launch the

00:22:30,389 --> 00:22:32,480
application

00:22:41,940 --> 00:22:46,210
yeah I know don't think flat-pack will

00:22:44,800 --> 00:22:47,440
allow you to have two things with the

00:22:46,210 --> 00:22:49,480
same application that you installed at

00:22:47,440 --> 00:22:53,590
the same time but I'm not even sure

00:22:49,480 --> 00:22:54,430
about that if they've yeah but um maybe

00:22:53,590 --> 00:22:55,810
if they're different branches you can

00:22:54,430 --> 00:22:58,630
but you're right that it's basically the

00:22:55,810 --> 00:23:00,430
application the desktop file is the

00:22:58,630 --> 00:23:06,580
thing that limits it to only having one

00:23:00,430 --> 00:23:09,580
exposed to the operating system okay

00:23:06,580 --> 00:23:15,489
well thank you everybody

00:23:09,580 --> 00:23:15,489

YouTube URL: https://www.youtube.com/watch?v=mpCXK6PqvDk


