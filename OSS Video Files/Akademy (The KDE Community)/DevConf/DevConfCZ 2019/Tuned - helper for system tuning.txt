Title: Tuned - helper for system tuning
Publication date: 2019-03-04
Playlist: DevConfCZ 2019
Description: 
	Presentation name: Tuned - helper for system tuning
Speaker: Jaroslav Å karvada
Description:  The talk will introduce Tuned and its features. Tuned is application for system tuning. It can help system administrators to optimize their systems for various workloads (e.g. SAP, Oracle DB, MS SQL, ...) or to optimize systems for general goals like high throughput, low latency, or low power consumption. Instead of having configuration on multiple places and in custom scripts, Tuned stores all its configuration cleanly in one place - in the Tuned profile. It can do do rollback of settings, supports hot plugging of devices and can be controlled from the command line or through the D-Bus, thus it can be easily integrated into existing administering solutions like e.g. Cockpit. Project web page: https://tuned-project.org/
[ https://sched.co/JclH ]
Captions: 
	00:00:04,970 --> 00:00:11,970
hello I'm Yaroslav Scarborough a

00:00:08,430 --> 00:00:15,750
software developer at redhead and today

00:00:11,970 --> 00:00:22,619
I would like to talk about June D

00:00:15,750 --> 00:00:27,980
project and how it system tuning maybe

00:00:22,619 --> 00:00:32,239
you have already had some presentation

00:00:27,980 --> 00:00:36,270
mentioning CUNY or maybe you have

00:00:32,239 --> 00:00:41,520
already seen it in some performance

00:00:36,270 --> 00:00:45,780
tuning guide but these papers usually do

00:00:41,520 --> 00:00:49,590
not focus on the in detail so that's why

00:00:45,780 --> 00:00:55,080
I created this presentation to introduce

00:00:49,590 --> 00:00:56,900
the tool more regarding system filling

00:00:55,080 --> 00:01:02,540
if you are a system administrator

00:00:56,900 --> 00:01:06,000
usually you are you don't are okay with

00:01:02,540 --> 00:01:09,840
the tunings default with the default

00:01:06,000 --> 00:01:14,159
settings that are in linux kernel and

00:01:09,840 --> 00:01:18,300
linux system because you want to get the

00:01:14,159 --> 00:01:21,950
most from your expensive hardware so

00:01:18,300 --> 00:01:26,580
that's why usually you need to customize

00:01:21,950 --> 00:01:29,340
some tuning knobs in this system to get

00:01:26,580 --> 00:01:33,510
the best performance also it depends

00:01:29,340 --> 00:01:37,380
what performance you need for example if

00:01:33,510 --> 00:01:41,760
you are running some high-performance

00:01:37,380 --> 00:01:45,740
computing cluster you need you you want

00:01:41,760 --> 00:01:51,210
to tune your system for highest possible

00:01:45,740 --> 00:01:54,570
teapot so to be able to calculate more

00:01:51,210 --> 00:01:56,850
numbers on your system and in cases you

00:01:54,570 --> 00:01:59,610
are running some messy browser you need

00:01:56,850 --> 00:02:02,490
to tune your machine to battery for low

00:01:59,610 --> 00:02:06,310
latency if you have some backup raster

00:02:02,490 --> 00:02:13,360
you probably may want to tune it to

00:02:06,310 --> 00:02:16,690
consume low-power so usually if you need

00:02:13,360 --> 00:02:19,180
to do some tuning probably people and

00:02:16,690 --> 00:02:22,989
consult with guides and best practices

00:02:19,180 --> 00:02:25,390
forums and knowledgebase articles and

00:02:22,989 --> 00:02:28,930
there are some bunch of commands then

00:02:25,390 --> 00:02:34,410
they usually just copy and paste or if

00:02:28,930 --> 00:02:40,030
they want to repeat this they usually

00:02:34,410 --> 00:02:44,709
put it into scripts so it can very very

00:02:40,030 --> 00:02:48,790
soon get very complex and hard hard to

00:02:44,709 --> 00:02:52,030
maintain because there are many notes

00:02:48,790 --> 00:02:55,319
typical system you can even tune for

00:02:52,030 --> 00:03:00,160
example C ctrl C suffice various tools

00:02:55,319 --> 00:03:02,580
you need to call to to do the tuning the

00:03:00,160 --> 00:03:05,410
tools that configuration usually vtc

00:03:02,580 --> 00:03:10,890
also you may need to boot camera with

00:03:05,410 --> 00:03:16,600
special parameters services and also

00:03:10,890 --> 00:03:18,940
there is you may need hot lock so for

00:03:16,600 --> 00:03:21,459
example if you attach a new block

00:03:18,940 --> 00:03:23,380
devices to the system you may need to

00:03:21,459 --> 00:03:30,549
tune it according to your needs for

00:03:23,380 --> 00:03:32,380
example change the i/o scheduler or so

00:03:30,549 --> 00:03:37,239
there are some more problems you can

00:03:32,380 --> 00:03:39,100
encounter with this approach but this

00:03:37,239 --> 00:03:42,489
approach usually works because it's used

00:03:39,100 --> 00:03:44,859
for the case and the other problems are

00:03:42,489 --> 00:03:48,040
the maintainability and it's especially

00:03:44,859 --> 00:03:51,549
problem if you need to support multiple

00:03:48,040 --> 00:03:55,000
version of operating systems multiple

00:03:51,549 --> 00:03:58,780
version of kernels because even the

00:03:55,000 --> 00:04:02,739
kernel interfaces and API are stable

00:03:58,780 --> 00:04:06,160
they can evolve over time and then there

00:04:02,739 --> 00:04:09,450
can be changes and non compatibilities

00:04:06,160 --> 00:04:12,579
so usually end up with several scripts

00:04:09,450 --> 00:04:14,709
for several machines if you you know in

00:04:12,579 --> 00:04:18,729
your network if you have several

00:04:14,709 --> 00:04:19,760
relations operating system or you can do

00:04:18,729 --> 00:04:22,130
one very

00:04:19,760 --> 00:04:26,960
complex script that will handle it all

00:04:22,130 --> 00:04:30,140
and the problem is that you can very

00:04:26,960 --> 00:04:32,330
easily get lost in it because you can

00:04:30,140 --> 00:04:36,620
you can just check some line and you

00:04:32,330 --> 00:04:39,230
can't remember why is that the other

00:04:36,620 --> 00:04:42,920
problem is how to how to verify that the

00:04:39,230 --> 00:04:46,940
system is tuning the way you already

00:04:42,920 --> 00:04:50,800
want so usually you can't say that

00:04:46,940 --> 00:04:55,910
everything works as you wanted so you

00:04:50,800 --> 00:04:58,550
you probably need to run some benchmark

00:04:55,910 --> 00:05:03,320
to verify that the system behaves the

00:04:58,550 --> 00:05:06,260
way and there can be also interference

00:05:03,320 --> 00:05:11,540
with attitude because maybe you tune

00:05:06,260 --> 00:05:14,630
your CTL somehow and then some other

00:05:11,540 --> 00:05:17,330
software is on and it changed the CCT of

00:05:14,630 --> 00:05:19,250
settings and you will not notice and

00:05:17,330 --> 00:05:22,580
your system will be will be tuned

00:05:19,250 --> 00:05:24,980
differently than you want it and last

00:05:22,580 --> 00:05:28,580
but not least the rollback usually the

00:05:24,980 --> 00:05:30,950
script approaches you do not take it

00:05:28,580 --> 00:05:32,600
into account and if you need to go back

00:05:30,950 --> 00:05:35,480
with these settings you just reprovision

00:05:32,600 --> 00:05:40,460
the system install what for temporary

00:05:35,480 --> 00:05:43,190
settings just reboot so Tunde is some

00:05:40,460 --> 00:05:45,800
small project that will try to address

00:05:43,190 --> 00:05:50,120
this and help you with the system tuning

00:05:45,800 --> 00:05:54,290
it has plug-in architecture so it can be

00:05:50,120 --> 00:05:57,200
easily extended you name is centralized

00:05:54,290 --> 00:06:04,040
in one place in so-called tune the

00:05:57,200 --> 00:06:06,740
profiles so you don't need to take care

00:06:04,040 --> 00:06:09,490
of all the settings you just need to

00:06:06,740 --> 00:06:11,930
know about unity profiles to to use

00:06:09,490 --> 00:06:14,570
robot is supported what what is

00:06:11,930 --> 00:06:17,030
supported verification is supportive and

00:06:14,570 --> 00:06:19,430
also tuned we can do some outer

00:06:17,030 --> 00:06:24,350
configuration of itself it can detect

00:06:19,430 --> 00:06:26,000
the hardware or system and for all or

00:06:24,350 --> 00:06:30,080
operating

00:06:26,000 --> 00:06:32,630
versions and type and then can auto

00:06:30,080 --> 00:06:36,140
select the profile according to this

00:06:32,630 --> 00:06:40,660
detection the tool can be controlled

00:06:36,140 --> 00:06:43,610
from a command-line interface or d-bus

00:06:40,660 --> 00:06:45,860
so it can be easily integrated to

00:06:43,610 --> 00:06:49,870
existing solutions for example it's

00:06:45,860 --> 00:06:51,050
supported in cockpit we have also

00:06:49,870 --> 00:06:55,220
ansible

00:06:51,050 --> 00:07:00,919
role for it and the great thing is that

00:06:55,220 --> 00:07:04,250
it's available enterprise and Enterprise

00:07:00,919 --> 00:07:10,960
Linux 7 it's already installed and

00:07:04,250 --> 00:07:13,820
enabled so this is probably the most

00:07:10,960 --> 00:07:20,330
important slide for you if you are just

00:07:13,820 --> 00:07:23,480
ordinary people usually ask us for some

00:07:20,330 --> 00:07:26,110
magic button to just push and do not

00:07:23,480 --> 00:07:30,950
care about the details

00:07:26,110 --> 00:07:34,340
so maybe the chilli a DNA profile

00:07:30,950 --> 00:07:37,400
command is is near to it because all

00:07:34,340 --> 00:07:39,710
what you need is just to type through

00:07:37,400 --> 00:07:42,830
the ADM profile and then the profile you

00:07:39,710 --> 00:07:45,140
need and the profile will be loaded and

00:07:42,830 --> 00:07:50,660
all the system notes will be set

00:07:45,140 --> 00:07:52,850
according to this profile if is not

00:07:50,660 --> 00:07:55,370
running on your system if you don't have

00:07:52,850 --> 00:07:58,970
rated and put two by six seven or it's

00:07:55,370 --> 00:08:05,090
not enabled like in Fedora I also need

00:07:58,970 --> 00:08:09,830
to stop it or you can also enable it to

00:08:05,090 --> 00:08:12,350
auto start the other important command

00:08:09,830 --> 00:08:17,090
is tune the IDM wrist which will show

00:08:12,350 --> 00:08:19,190
you all available profiles system that

00:08:17,090 --> 00:08:23,240
you can use the data installed and

00:08:19,190 --> 00:08:26,930
available to the IDM active shows which

00:08:23,240 --> 00:08:29,690
profile is loaded and finally there is

00:08:26,930 --> 00:08:32,750
to the ADM verify command that just

00:08:29,690 --> 00:08:37,169
checks whether all the settings from the

00:08:32,750 --> 00:08:39,269
profile are applied if there is

00:08:37,169 --> 00:08:41,700
something different for example some

00:08:39,269 --> 00:08:45,149
will change some CCT or not or something

00:08:41,700 --> 00:08:49,019
it will if you show that there is

00:08:45,149 --> 00:08:50,790
difference and it will show what what

00:08:49,019 --> 00:08:53,279
different and you can use this command

00:08:50,790 --> 00:08:57,810
for example for for scripts just to

00:08:53,279 --> 00:09:03,630
check the dish ID parameter is there to

00:08:57,810 --> 00:09:07,589
ignore hardware to ignore differences

00:09:03,630 --> 00:09:09,570
that are caused by non-compatible harbor

00:09:07,589 --> 00:09:13,920
on that will harder that do not support

00:09:09,570 --> 00:09:18,149
the tuning for example if in the profile

00:09:13,920 --> 00:09:20,880
requested cpu free cover not to be set

00:09:18,149 --> 00:09:23,250
to something that is not supported on

00:09:20,880 --> 00:09:27,000
our system or CP flaky stop at all

00:09:23,250 --> 00:09:30,870
support it or assisting then the atom

00:09:27,000 --> 00:09:33,120
IDM verify will exhibit error but if you

00:09:30,870 --> 00:09:38,250
use - I parameter it will ignore it

00:09:33,120 --> 00:09:40,410
because it knows that it's caused by not

00:09:38,250 --> 00:09:43,320
support support supported feature in the

00:09:40,410 --> 00:09:45,810
hardware or software there is also

00:09:43,320 --> 00:09:50,970
hackish example on this slide how to

00:09:45,810 --> 00:09:56,010
control it pass this by using the D bus

00:09:50,970 --> 00:10:06,740
sent debug command and this do is famous

00:09:56,010 --> 00:10:11,970
as the tune the IDM active files

00:10:06,740 --> 00:10:14,570
upstream and these profiles have

00:10:11,970 --> 00:10:18,390
settings that are provided to us by

00:10:14,570 --> 00:10:21,329
performance engineers so the random

00:10:18,390 --> 00:10:26,420
benchmarks dutifully know what the

00:10:21,329 --> 00:10:30,899
customers need these links from

00:10:26,420 --> 00:10:34,350
performance tuning guides are put there

00:10:30,899 --> 00:10:36,990
are profiles for general Golz like super

00:10:34,350 --> 00:10:39,329
performance or latency performance for

00:10:36,990 --> 00:10:45,329
low latency parasite for time saving and

00:10:39,329 --> 00:10:48,070
balanced to balance in between we also

00:10:45,329 --> 00:10:51,310
have the profiles for virus drugs

00:10:48,070 --> 00:10:56,020
before sap for database servers for

00:10:51,310 --> 00:10:59,590
atomic and also there exist some

00:10:56,020 --> 00:11:03,600
third-party packages providing tune the

00:10:59,590 --> 00:11:08,080
profiles regarding profiles for products

00:11:03,600 --> 00:11:09,970
they are made from the documentation

00:11:08,080 --> 00:11:12,700
from the products and from knowledge

00:11:09,970 --> 00:11:16,900
bases and best practice practices

00:11:12,700 --> 00:11:19,570
articles so exactly if you don't need to

00:11:16,900 --> 00:11:22,000
go to the knowledge base and tune it by

00:11:19,570 --> 00:11:24,790
hand you just side the profile and

00:11:22,000 --> 00:11:27,490
everything is set up if you want to roll

00:11:24,790 --> 00:11:30,910
back and try different tuning you can do

00:11:27,490 --> 00:11:33,190
it actually can roll back the settings

00:11:30,910 --> 00:11:36,760
so this is also good for benchmarking

00:11:33,190 --> 00:11:39,010
you can just edit profile change profile

00:11:36,760 --> 00:11:42,580
and benchmark all system with different

00:11:39,010 --> 00:11:46,960
settings and you don't need to regular

00:11:42,580 --> 00:11:50,140
provision regarding the profiles there

00:11:46,960 --> 00:11:54,310
are two types of profiles factory or

00:11:50,140 --> 00:11:57,340
support system profiles and custom user

00:11:54,310 --> 00:12:04,300
profiles the system profiles are our

00:11:57,340 --> 00:12:07,510
other user user lip and usually there is

00:12:04,300 --> 00:12:10,810
problem that some people directly edit

00:12:07,510 --> 00:12:15,870
them please don't do do this because if

00:12:10,810 --> 00:12:19,390
you do it every update of system profile

00:12:15,870 --> 00:12:23,140
by rpm by new version of our pin package

00:12:19,390 --> 00:12:26,620
will override those settings so if you

00:12:23,140 --> 00:12:30,460
need to customize it the better way is

00:12:26,620 --> 00:12:33,310
to copy it to ATC 2d which takes

00:12:30,460 --> 00:12:36,100
precedence when selecting the profile

00:12:33,310 --> 00:12:38,200
and then do your changes I will talk

00:12:36,100 --> 00:12:44,490
about it more later

00:12:38,200 --> 00:12:50,020
so what's inside profile the profile is

00:12:44,490 --> 00:12:53,350
directory there could be different files

00:12:50,020 --> 00:12:57,540
used by different plugins and the main

00:12:53,350 --> 00:13:06,270
configuration file the profile is called

00:12:57,540 --> 00:13:12,350
it's if we there is some main main

00:13:06,270 --> 00:13:14,970
section in the main section their

00:13:12,350 --> 00:13:20,460
description what the profile did this is

00:13:14,970 --> 00:13:23,670
what you see in in you will see that

00:13:20,460 --> 00:13:27,779
list of profiles and description what we

00:13:23,670 --> 00:13:35,339
are good for and this is all this is

00:13:27,779 --> 00:13:45,480
optional and then they are plug-in

00:13:35,339 --> 00:13:50,490
configuration this is the same just

00:13:45,480 --> 00:13:53,790
setting CC to us so I'm setting five

00:13:50,490 --> 00:13:58,490
which is which is quite low it means

00:13:53,790 --> 00:13:58,490
that the system will not stop it if not

00:13:59,210 --> 00:14:11,370
regarding this plug-in there is set it

00:14:04,770 --> 00:14:15,930
ahead to 4000 ITC and each plug-in has a

00:14:11,370 --> 00:14:20,490
bunch of these options supported in the

00:14:15,930 --> 00:14:23,820
form written there it's just if you take

00:14:20,490 --> 00:14:25,770
all the these devices of all the block

00:14:23,820 --> 00:14:30,029
devices non-removable

00:14:25,770 --> 00:14:34,910
on your system and this way if you need

00:14:30,029 --> 00:14:38,250
some more complex settings like

00:14:34,910 --> 00:14:41,360
different discs differently there is

00:14:38,250 --> 00:14:45,750
small filter box on how to write it and

00:14:41,360 --> 00:14:48,510
this tool how it's written there are the

00:14:45,750 --> 00:14:50,880
same do the same so if you buy with more

00:14:48,510 --> 00:14:53,730
food was form you need to specify that

00:14:50,880 --> 00:14:57,020
it's a plugin like this this is the

00:14:53,730 --> 00:15:00,120
instance name it could be any arbitrary

00:14:57,020 --> 00:15:04,220
string but must be unique to describe

00:15:00,120 --> 00:15:07,380
your instance and it's

00:15:04,220 --> 00:15:14,790
there are devices the plug-in will

00:15:07,380 --> 00:15:17,700
handle so it will handle all devices on

00:15:14,790 --> 00:15:22,980
this slide you can see how to configure

00:15:17,700 --> 00:15:26,220
it for more instances so this is the

00:15:22,980 --> 00:15:29,060
more complex for me yeah and you can see

00:15:26,220 --> 00:15:33,600
I have three instances of plug-in disk

00:15:29,060 --> 00:15:38,220
one I this system the other this vector

00:15:33,600 --> 00:15:43,649
and this from accessing so oh a part of

00:15:38,220 --> 00:15:53,010
this and I want my system disk I know

00:15:43,649 --> 00:15:57,490
it's a one so I want everyone to be here

00:15:53,010 --> 00:15:59,570
you can also see some something called

00:15:57,490 --> 00:16:06,750
[Music]

00:15:59,570 --> 00:16:10,410
this this this can be read as if just I

00:16:06,750 --> 00:16:16,079
want read ahead to be at least to this

00:16:10,410 --> 00:16:18,720
number in the current row well it's set

00:16:16,079 --> 00:16:26,850
to this number it's higher it's not

00:16:18,720 --> 00:16:31,320
touched so this way different both

00:16:26,850 --> 00:16:35,550
devices also it's possible to do full

00:16:31,320 --> 00:16:41,459
you test a little expression matching on

00:16:35,550 --> 00:16:45,170
this on this slide there are two

00:16:41,459 --> 00:16:53,279
instances of the plug-in 200 all this

00:16:45,170 --> 00:16:57,180
manufactured by Samsung matched by

00:16:53,279 --> 00:17:01,380
illegal expression and this second

00:16:57,180 --> 00:17:06,360
instance will handle all SSDs also it's

00:17:01,380 --> 00:17:10,709
these devices in you deaf it can be done

00:17:06,360 --> 00:17:16,380
by just checking that there is a

00:17:10,709 --> 00:17:21,919
patientÃ­s all properties you can match

00:17:16,380 --> 00:17:28,319
can we get from the new death by this

00:17:21,919 --> 00:17:30,660
property and the device and all the

00:17:28,319 --> 00:17:54,140
profit assistant by this command can be

00:17:30,660 --> 00:18:04,590
matched by you can see that example I

00:17:54,140 --> 00:18:08,250
also and the great thing about it is

00:18:04,590 --> 00:18:10,740
that if you're not then this profile is

00:18:08,250 --> 00:18:15,150
acquired if you're not only tune your

00:18:10,740 --> 00:18:19,260
system all disks on your system but it

00:18:15,150 --> 00:18:21,809
will also track later on any will be

00:18:19,260 --> 00:18:25,950
also to write any device is the biblical

00:18:21,809 --> 00:18:30,419
plot so if you cut in new Samsung days

00:18:25,950 --> 00:18:35,780
at runtime and it will match any of this

00:18:30,419 --> 00:18:35,780
rule if you be tuned accordingly

00:18:40,489 --> 00:18:49,879
so this another concept utility all

00:18:45,119 --> 00:18:54,210
right which means you don't need to

00:18:49,879 --> 00:18:57,690
write the profile you can just base your

00:18:54,210 --> 00:18:59,820
profile on everything profile so here to

00:18:57,690 --> 00:19:02,429
include the group a performance profile

00:18:59,820 --> 00:19:10,950
it will take all the settings from it

00:19:02,429 --> 00:19:13,080
and you will just customize you plug

00:19:10,950 --> 00:19:18,419
into the user space

00:19:13,080 --> 00:19:23,609
this syntax will disable all tuning from

00:19:18,419 --> 00:19:27,749
super performance for oldest and this

00:19:23,609 --> 00:19:35,879
will cause that this is Cpl set in the

00:19:27,749 --> 00:19:38,849
tuple performance profile will be in the

00:19:35,879 --> 00:19:42,469
fence form it will use anything and just

00:19:38,849 --> 00:19:48,659
modify what's what's written here and

00:19:42,469 --> 00:19:53,129
this is good for I think profiles

00:19:48,659 --> 00:19:57,200
chaining this is example from the Afghan

00:19:53,129 --> 00:20:01,769
package from the profiles energy which

00:19:57,200 --> 00:20:03,239
it should provide this profiles so for

00:20:01,769 --> 00:20:05,279
example it starts with the latency

00:20:03,239 --> 00:20:10,139
performance profile bits which tune your

00:20:05,279 --> 00:20:12,029
system for for low latency then on top

00:20:10,139 --> 00:20:18,629
of it is based the network latency

00:20:12,029 --> 00:20:21,659
profile the network interfaces then the

00:20:18,629 --> 00:20:27,450
real-time profile is based on it with

00:20:21,659 --> 00:20:32,249
rich and finally return guest and

00:20:27,450 --> 00:20:35,669
real-time to the chill host profiles so

00:20:32,249 --> 00:20:38,940
the good thing is that different teams

00:20:35,669 --> 00:20:42,680
can work and maintain these profiles and

00:20:38,940 --> 00:20:45,560
just focus on what's important for the

00:20:42,680 --> 00:20:51,770
and then don't don't don't need to cope

00:20:45,560 --> 00:20:54,050
with the other details now how to

00:20:51,770 --> 00:20:56,990
customize new system profiles and SSI

00:20:54,050 --> 00:20:59,540
step you can just copy and under but the

00:20:56,990 --> 00:21:02,660
problem is that you get just a snapshot

00:20:59,540 --> 00:21:07,460
of the profile provided in one time by

00:21:02,660 --> 00:21:10,160
the action package each maybe you are ok

00:21:07,460 --> 00:21:13,490
with it when maybe you are so if you

00:21:10,160 --> 00:21:16,580
want the latest settings for the system

00:21:13,490 --> 00:21:19,970
profile to be in your customized profile

00:21:16,580 --> 00:21:25,150
you can the overwrite and fiction this

00:21:19,970 --> 00:21:27,680
means just create a new profile and

00:21:25,150 --> 00:21:30,980
include the profile you want to

00:21:27,680 --> 00:21:33,950
customize and customize it by all rights

00:21:30,980 --> 00:21:39,640
so this is just bad because you don't

00:21:33,950 --> 00:21:49,150
close your settings and also you do get

00:21:39,640 --> 00:21:52,100
like this from a PNP now I would like to

00:21:49,150 --> 00:21:54,740
example I'd like to show we are also

00:21:52,100 --> 00:21:59,440
trying to stop in today to provide some

00:21:54,740 --> 00:22:03,220
abstraction to the change changing

00:21:59,440 --> 00:22:07,970
interfaces so for example if you need to

00:22:03,220 --> 00:22:12,230
set transparency stage you can do it

00:22:07,970 --> 00:22:14,380
just by a shell command but the command

00:22:12,230 --> 00:22:14,380
is

00:22:14,750 --> 00:22:24,140
in 2006 the path is this seven the party

00:22:23,330 --> 00:22:27,890
is this

00:22:24,140 --> 00:22:30,890
no there is no hat so if you need to

00:22:27,890 --> 00:22:33,710
copied with straight you need to have

00:22:30,890 --> 00:22:37,040
some check there or two different clips

00:22:33,710 --> 00:22:40,820
with truly you just write this and it

00:22:37,040 --> 00:22:48,670
will take about it automatically the

00:22:40,820 --> 00:22:53,000
tour is there for nearly ten years so we

00:22:48,670 --> 00:22:55,580
are following the changes in these

00:22:53,000 --> 00:22:59,180
settings which are both needed and can

00:22:55,580 --> 00:23:02,210
provide abstraction wire for it there is

00:22:59,180 --> 00:23:06,820
another example for example if you need

00:23:02,210 --> 00:23:12,650
to change boot line boot kernel

00:23:06,820 --> 00:23:15,410
parameters if you do it by hand you will

00:23:12,650 --> 00:23:18,680
need to check whether its bootloader

00:23:15,410 --> 00:23:28,420
specification system in such case you

00:23:18,680 --> 00:23:32,270
need an able to edit patch some entries

00:23:28,420 --> 00:23:39,380
check which bootloader is there whether

00:23:32,270 --> 00:23:42,770
it's gratification and H different files

00:23:39,380 --> 00:23:45,920
whether it's via file with the CBO's it

00:23:42,770 --> 00:23:48,470
can it can be quite quite complex

00:23:45,920 --> 00:23:51,890
between D you don't appear just like

00:23:48,470 --> 00:23:58,370
this and you're set to my mind other

00:23:51,890 --> 00:24:05,960
their eyes all CPUs which means that the

00:23:58,370 --> 00:24:09,710
kernel schedule will not processes CPU

00:24:05,960 --> 00:24:15,580
should be for one so again is it

00:24:09,710 --> 00:24:15,580
extended for more complex examples

00:24:17,780 --> 00:24:27,650
in this profile variables support you

00:24:23,390 --> 00:24:30,100
can you don't need to customize the

00:24:27,650 --> 00:24:34,520
profile just for example if the user

00:24:30,100 --> 00:24:40,460
needs to isolate different course you

00:24:34,520 --> 00:24:43,000
can have one static profile and another

00:24:40,460 --> 00:24:47,960
file with with variables and then just

00:24:43,000 --> 00:24:51,590
set set them so you will just edit the

00:24:47,960 --> 00:24:54,110
variables file and you can have one one

00:24:51,590 --> 00:24:58,610
static profile

00:24:54,110 --> 00:25:04,900
there's also functions supported so you

00:24:58,610 --> 00:25:08,720
can you can for example take the CP CP u

00:25:04,900 --> 00:25:12,380
CPU cores specified by Linux but by user

00:25:08,720 --> 00:25:15,050
in the in the configuration file and by

00:25:12,380 --> 00:25:17,030
pulling this function it will do the

00:25:15,050 --> 00:25:21,200
complement so for example if you have

00:25:17,030 --> 00:25:26,330
four four four four four calls machine

00:25:21,200 --> 00:25:29,750
right and the course is set code number

00:25:26,330 --> 00:25:32,360
one this bill return codes two three

00:25:29,750 --> 00:25:36,260
four and they're more functions to put

00:25:32,360 --> 00:25:38,440
it into the out of the box and it's

00:25:36,260 --> 00:25:41,390
pagina ball so you can also write

00:25:38,440 --> 00:25:44,180
plug-ins for example you can call

00:25:41,390 --> 00:25:53,150
external helpers for example to

00:25:44,180 --> 00:26:02,570
calculate parameter another feature of

00:25:53,150 --> 00:26:05,720
to the dynamic tuning it's initially it

00:26:02,570 --> 00:26:09,650
was added to cope with things which

00:26:05,720 --> 00:26:13,160
wasn't supported in Kerrville so for

00:26:09,650 --> 00:26:16,880
example if you if there are some

00:26:13,160 --> 00:26:19,890
something governor's or policy doesn't

00:26:16,880 --> 00:26:23,750
exist in camel this

00:26:19,890 --> 00:26:28,200
can be this can be done from user space

00:26:23,750 --> 00:26:33,299
so in agility some plugins can do

00:26:28,200 --> 00:26:38,370
dynamic tuning this is done there are

00:26:33,299 --> 00:26:41,640
some performance counter counters like

00:26:38,370 --> 00:26:46,350
CPU load this load rows which I provided

00:26:41,640 --> 00:26:56,010
by monitored plugins so you can add

00:26:46,350 --> 00:26:59,850
other and then the tunic to the plugins

00:26:56,010 --> 00:27:09,350
can change this some settings in runtime

00:26:59,850 --> 00:27:13,850
according to these counters and actually

00:27:09,350 --> 00:27:19,080
Enterprise Linux because we want

00:27:13,850 --> 00:27:20,280
creative performance so this will miss

00:27:19,080 --> 00:27:24,419
can change the tunings

00:27:20,280 --> 00:27:27,960
according to external factors but if you

00:27:24,419 --> 00:27:32,700
want to play with it you can can be done

00:27:27,960 --> 00:27:40,559
in mind to new configuration files in

00:27:32,700 --> 00:27:43,860
Fedora it's actually regarding out of

00:27:40,559 --> 00:27:48,510
emulation the tune we can also check

00:27:43,860 --> 00:28:01,440
your system and preset initially preset

00:27:48,510 --> 00:28:04,200
profile that it thinks is if you just

00:28:01,440 --> 00:28:06,440
want to set want to check what you need

00:28:04,200 --> 00:28:06,440
things

00:28:11,539 --> 00:28:20,580
so for example if you have some product

00:28:15,809 --> 00:28:23,730
that needs some specific you can do the

00:28:20,580 --> 00:28:29,519
profile to Pune and provide the

00:28:23,730 --> 00:28:34,409
recommend file to automatically set here

00:28:29,519 --> 00:28:40,970
is example which which can be used for

00:28:34,409 --> 00:28:52,799
example this will set super performance

00:28:40,970 --> 00:28:56,129
15 system so no vectorization this is

00:28:52,799 --> 00:28:59,580
output from the Whitworth tool and there

00:28:56,129 --> 00:29:01,889
are no checks supportive you can you can

00:28:59,580 --> 00:29:07,379
check for running processes so for

00:29:01,889 --> 00:29:25,019
example if it's running it can assume

00:29:07,379 --> 00:29:27,690
that it's so if if you have some rules

00:29:25,019 --> 00:29:40,110
you can be dealt a PCP me recommend D

00:29:27,690 --> 00:29:43,740
and also there is a feature called no

00:29:40,110 --> 00:29:49,850
Devon because it in the actually kingly

00:29:43,740 --> 00:29:52,860
is the bus and it can improve 100 it

00:29:49,850 --> 00:29:57,779
resources system or some people just

00:29:52,860 --> 00:29:58,920
work like another demonic system so we

00:29:57,779 --> 00:30:02,640
can set

00:29:58,920 --> 00:30:02,640
[Music]

00:30:02,890 --> 00:30:10,039
zero in mind a configuration file and

00:30:06,350 --> 00:30:12,110
then tune the will behave with just one

00:30:10,039 --> 00:30:19,730
shot it will start do its job to apply

00:30:12,110 --> 00:30:22,309
to me this problem is actually there is

00:30:19,730 --> 00:30:25,490
no device control yet but it's solvable

00:30:22,309 --> 00:30:27,880
by socket activation know what what

00:30:25,490 --> 00:30:32,480
support yet it could be hacked to death

00:30:27,880 --> 00:30:37,490
just nobody write the supported no

00:30:32,480 --> 00:30:42,080
tuning of newly play to processes of

00:30:37,490 --> 00:30:52,179
course no dynamic tuning and it should

00:30:42,080 --> 00:30:55,970
be so regarding the improvements we need

00:30:52,179 --> 00:30:58,760
better documentation especially some

00:30:55,970 --> 00:31:05,950
reference manual out of the generated

00:30:58,760 --> 00:31:08,679
with all plugins and described described

00:31:05,950 --> 00:31:12,020
options and what the options mean

00:31:08,679 --> 00:31:14,840
because at the moment there are some

00:31:12,020 --> 00:31:21,649
documentation online but it's not not

00:31:14,840 --> 00:31:29,690
complete it's a bit and if you use the

00:31:21,649 --> 00:31:34,309
opportunity also we would like to

00:31:29,690 --> 00:31:38,059
improve no do not support more functions

00:31:34,309 --> 00:31:43,370
and we was asked to add sort of

00:31:38,059 --> 00:31:45,669
simulation mode to just display what

00:31:43,370 --> 00:31:50,289
will be changed by the profile and

00:31:45,669 --> 00:31:52,029
don't actually write the changes also

00:31:50,289 --> 00:31:53,429
there is a space for improvement

00:31:52,029 --> 00:32:05,139
regarding

00:31:53,429 --> 00:32:08,440
much much more if if you don't use unity

00:32:05,139 --> 00:32:10,089
before give it a try it's enabled and

00:32:08,440 --> 00:32:13,599
installed in Linux

00:32:10,089 --> 00:32:17,409
it's slowly finding its way to other

00:32:13,599 --> 00:32:20,019
distributions and if your project needs

00:32:17,409 --> 00:32:25,749
specific tuning and you are doing it by

00:32:20,019 --> 00:32:31,089
some wild scripts consider using 2d we

00:32:25,749 --> 00:32:36,519
as upstream can match your profile can

00:32:31,089 --> 00:32:42,279
maintain it to run with latest tune the

00:32:36,519 --> 00:32:48,179
Unicode tune the engine and you can just

00:32:42,279 --> 00:32:48,179
benefit from the infrastructure which

00:32:49,979 --> 00:32:59,559
also if you have some future I don't

00:32:55,299 --> 00:33:01,739
hesitate to open bug report or contact

00:32:59,559 --> 00:33:04,570
us because that there are some people

00:33:01,739 --> 00:33:07,869
saying hey this project looks

00:33:04,570 --> 00:33:11,559
interesting we might use it in our use

00:33:07,869 --> 00:33:17,950
cases but we found out that there are

00:33:11,559 --> 00:33:21,129
features we need so not just in this

00:33:17,950 --> 00:33:23,259
case is open bugzilla we are trying to

00:33:21,129 --> 00:33:42,279
implement the functionality if it's

00:33:23,259 --> 00:33:45,029
possible well we have some time left so

00:33:42,279 --> 00:33:45,029
I can

00:33:45,580 --> 00:33:56,180
which could be usual useful for desktop

00:33:49,700 --> 00:34:00,200
users to be as table top integration if

00:33:56,180 --> 00:34:04,640
you know poverty up to its to written

00:34:00,200 --> 00:34:09,320
and maintained by Intel and as the name

00:34:04,640 --> 00:34:15,760
suggests it shows you the processes that

00:34:09,320 --> 00:34:19,400
consumes most well normally it should

00:34:15,760 --> 00:34:23,200
processes we do most way cups of liquid

00:34:19,400 --> 00:34:26,930
schedule but if you calibrate the tool

00:34:23,200 --> 00:34:29,420
this is the thing that not everybody

00:34:26,930 --> 00:34:35,350
knows by running power top this -

00:34:29,420 --> 00:34:38,450
calibrate and running it will then show

00:34:35,350 --> 00:34:43,310
estimation for each process how much

00:34:38,450 --> 00:34:47,030
power it consume in watts and there is

00:34:43,310 --> 00:34:52,210
also feature imperative that can tell

00:34:47,030 --> 00:34:55,460
you what you could do for improvements

00:34:52,210 --> 00:35:00,110
and draw very public consumption of your

00:34:55,460 --> 00:35:02,780
system there are a lot of requests to

00:35:00,110 --> 00:35:04,970
have a top extreme to added some auto

00:35:02,780 --> 00:35:07,700
configuration to this tool for people

00:35:04,970 --> 00:35:10,160
just ripping the magic button and power

00:35:07,700 --> 00:35:13,190
top configuring with everything for them

00:35:10,160 --> 00:35:16,430
but the table top upstream insisted a

00:35:13,190 --> 00:35:20,210
lot but finally the feature got there

00:35:16,430 --> 00:35:23,480
and there is our top feature that will

00:35:20,210 --> 00:35:27,410
enable all tunings but it can cause

00:35:23,480 --> 00:35:29,690
problems on bios systems because there

00:35:27,410 --> 00:35:32,030
it can be incompatibility is like your

00:35:29,690 --> 00:35:36,250
mouse can die if it doesn't support

00:35:32,030 --> 00:35:51,350
proper settings correctly and alice so

00:35:36,250 --> 00:35:53,349
there is maybe better way and widening

00:35:51,350 --> 00:35:57,080
the school

00:35:53,349 --> 00:36:01,250
generating the profile that will contain

00:35:57,080 --> 00:36:06,550
all the public top suggestions turned

00:36:01,250 --> 00:36:09,859
into and you can just edit this file and

00:36:06,550 --> 00:36:12,320
select what you really need or not by

00:36:09,859 --> 00:36:15,190
commenting and to maintain it and

00:36:12,320 --> 00:36:20,720
finally by activating the profile you

00:36:15,190 --> 00:36:30,580
will you will get all suggestions your

00:36:20,720 --> 00:36:39,460
system so this is how to integrate so I

00:36:30,580 --> 00:36:43,910
have some other slides about some 2d

00:36:39,460 --> 00:36:52,609
functionalities like p.m. quality of

00:36:43,910 --> 00:36:57,410
service and real-time tuning but these

00:36:52,609 --> 00:37:06,099
are more complex examples so you can you

00:36:57,410 --> 00:37:11,920
can see in this presentation if you site

00:37:06,099 --> 00:37:11,920
so probably this is everything from me

00:37:37,589 --> 00:37:47,479
you mean the dynamic tuning function

00:37:40,979 --> 00:37:52,099
point to functionality the question was

00:37:47,479 --> 00:37:59,099
from from where it is taking the

00:37:52,099 --> 00:38:00,929
information for for dynamic tuning it's

00:37:59,099 --> 00:38:03,809
taken from the monitors plug-in you can

00:38:00,929 --> 00:38:08,429
write and currently there are plugins to

00:38:03,809 --> 00:38:11,819
collect CPU utilization or CPUs into

00:38:08,429 --> 00:38:20,999
desicions Network world for your network

00:38:11,819 --> 00:38:24,989
card interfaces and also it it you can

00:38:20,999 --> 00:38:27,289
write any monitor you need to fit your

00:38:24,989 --> 00:38:27,289
night

00:38:38,190 --> 00:38:43,230
well the question was whether it would

00:38:40,630 --> 00:38:50,800
be possible too far to write some

00:38:43,230 --> 00:38:56,410
function to fit the TCP data PCP they'd

00:38:50,800 --> 00:38:59,670
have to sue the plugin well III think

00:38:56,410 --> 00:39:03,660
input bunnies are written in Python so

00:38:59,670 --> 00:39:07,020
you can definitely write everything

00:39:03,660 --> 00:39:07,020
[Music]

00:39:16,200 --> 00:39:23,699

YouTube URL: https://www.youtube.com/watch?v=-fF3rTnjXxA


