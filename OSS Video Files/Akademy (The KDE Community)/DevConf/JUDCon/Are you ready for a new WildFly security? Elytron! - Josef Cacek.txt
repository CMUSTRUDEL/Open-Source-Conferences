Title: Are you ready for a new WildFly security? Elytron! - Josef Cacek
Publication date: 2016-02-12
Playlist: JUDCon
Description: 
	Elytron is a new security subsystem for WildFly application server. The presentation will cover its main features and differences to the original WildFly security approaches. We will focus on Elytron subsystem configuration and backward compatibility questions.

(When gods of WildFly and general gods of security give) Live demo is included.
Captions: 
	00:00:30,910 --> 00:00:41,630
thank you for staying for so long it's

00:00:36,140 --> 00:00:47,410
definitely worse of it because pepper

00:00:41,630 --> 00:00:50,989
just pop pepper Jack's top is very new

00:00:47,410 --> 00:00:58,360
it's actually a project or product

00:00:50,989 --> 00:01:05,500
actually this is still not available a

00:00:58,360 --> 00:01:09,830
commercial product surely tell us more

00:01:05,500 --> 00:01:14,420
thanks for interaction so welcome to

00:01:09,830 --> 00:01:17,690
your last presentation today it's cool

00:01:14,420 --> 00:01:22,370
to have some audience at such a late

00:01:17,690 --> 00:01:26,420
hour the presentation will be about new

00:01:22,370 --> 00:01:30,829
security subsystem in about five or four

00:01:26,420 --> 00:01:34,280
multiplied because the new and hot and

00:01:30,829 --> 00:01:37,869
awesome about 510 which was released one

00:01:34,280 --> 00:01:40,729
week before doesn't contain it editor on

00:01:37,869 --> 00:01:43,219
nevertheless it only means that you

00:01:40,729 --> 00:01:49,340
still have a time to prepare for this

00:01:43,219 --> 00:01:53,750
revolution I always laughed second slide

00:01:49,340 --> 00:01:56,180
on presentations of Oracle employees and

00:01:53,750 --> 00:01:59,750
I wanted to put disclaimer to my

00:01:56,180 --> 00:02:03,500
presentation so now is the time and you

00:01:59,750 --> 00:02:09,140
can enjoy it so information in this

00:02:03,500 --> 00:02:16,790
presentation are without any warranty so

00:02:09,140 --> 00:02:19,730
if you if you break something yeah I'm

00:02:16,790 --> 00:02:25,070
not responsible for it and not my

00:02:19,730 --> 00:02:27,590
employee employer what is the program of

00:02:25,070 --> 00:02:30,290
this presentation I will start with

00:02:27,590 --> 00:02:32,990
conclusion because I'm to catch a

00:02:30,290 --> 00:02:37,340
classical music concert at half past

00:02:32,990 --> 00:02:41,629
seven and I don't know how the demo will

00:02:37,340 --> 00:02:43,450
go then some social social stuff because

00:02:41,629 --> 00:02:46,810
I read somewhere that

00:02:43,450 --> 00:02:48,760
some icebreakers should be in every good

00:02:46,810 --> 00:02:52,450
presentation and I want this

00:02:48,760 --> 00:02:55,780
presentation to be good and then we will

00:02:52,450 --> 00:02:59,950
talk about why we are changing security

00:02:55,780 --> 00:03:03,790
subsystem in electron and what features

00:02:59,950 --> 00:03:07,810
are or already implemented and what we

00:03:03,790 --> 00:03:10,239
can expect in in the future shortly we

00:03:07,810 --> 00:03:13,900
will look into compatibility issues

00:03:10,239 --> 00:03:18,340
which we can expect and then if time

00:03:13,900 --> 00:03:24,010
allows and got God allows now we will

00:03:18,340 --> 00:03:29,310
try them all so the conclusion electron

00:03:24,010 --> 00:03:34,120
is a set of API stand SP eyes which

00:03:29,310 --> 00:03:39,430
cover whole security of the application

00:03:34,120 --> 00:03:42,400
server it unifies security configuration

00:03:39,430 --> 00:03:47,470
which is now invite fight fragmented to

00:03:42,400 --> 00:03:51,160
several places for example SSL

00:03:47,470 --> 00:03:55,209
configuration I can count at least three

00:03:51,160 --> 00:03:58,989
places Security's domain security realms

00:03:55,209 --> 00:04:07,320
and under Tao for instance where you can

00:03:58,989 --> 00:04:12,670
configure and there is also a need for

00:04:07,320 --> 00:04:18,370
strong mechanisms not only just based

00:04:12,670 --> 00:04:22,690
authentication and for for this purpose

00:04:18,370 --> 00:04:25,390
the electron was introduced when the

00:04:22,690 --> 00:04:28,660
electron was announced on about fie

00:04:25,390 --> 00:04:33,729
death mailing list about one and half

00:04:28,660 --> 00:04:36,789
year ago David Lloyd broad that it will

00:04:33,729 --> 00:04:44,220
completely replace picket box and just

00:04:36,789 --> 00:04:47,889
as Wi-Fi security solution we will see

00:04:44,220 --> 00:04:52,389
so it was something

00:04:47,889 --> 00:04:55,539
the message and now the social part I

00:04:52,389 --> 00:04:58,659
will talk about me and I will ask

00:04:55,539 --> 00:05:03,939
something about you so I work in Red Hat

00:04:58,659 --> 00:05:07,770
and my focus is on security and in last

00:05:03,939 --> 00:05:11,590
month's also containers and cloud the

00:05:07,770 --> 00:05:13,919
other roles which I play in my life more

00:05:11,590 --> 00:05:18,930
or less successfully is happy father

00:05:13,919 --> 00:05:18,930
experience hobby runner and organ player

00:05:19,080 --> 00:05:27,750
and what about you are you Java eg

00:05:23,919 --> 00:05:33,219
friends right raise your hands please

00:05:27,750 --> 00:05:35,620
yeah nice nearly everybody and have you

00:05:33,219 --> 00:05:39,779
ever tried to play with security

00:05:35,620 --> 00:05:42,279
configuration in belfry yeah

00:05:39,779 --> 00:05:47,020
security domains realms SSL

00:05:42,279 --> 00:06:02,409
configuration not so much but and do you

00:05:47,020 --> 00:06:06,099
run yeah sure enthusiasm nice so the

00:06:02,409 --> 00:06:09,520
social part is successfully completed at

00:06:06,099 --> 00:06:18,759
now let's continue it's more serious

00:06:09,520 --> 00:06:21,819
business a social part why we are

00:06:18,759 --> 00:06:27,759
replacing the current security solution

00:06:21,819 --> 00:06:34,560
which is working somehow let's dive into

00:06:27,759 --> 00:06:34,560
the history of jazz jazz is actually

00:06:34,889 --> 00:06:43,900
client-side API which predated j2e

00:06:40,020 --> 00:06:46,460
specification and originally j2ee

00:06:43,900 --> 00:06:50,970
didn't came with

00:06:46,460 --> 00:06:55,970
with some security solution and left the

00:06:50,970 --> 00:07:02,480
decisions about security on the vendors

00:06:55,970 --> 00:07:06,750
for example tables and at the times many

00:07:02,480 --> 00:07:12,000
simple security solutions were in demand

00:07:06,750 --> 00:07:17,820
and it means validating username

00:07:12,000 --> 00:07:21,720
passwords and as a result the just seen

00:07:17,820 --> 00:07:27,710
as a good solution to solve this problem

00:07:21,720 --> 00:07:34,880
this error so the vendors implemented it

00:07:27,710 --> 00:07:39,210
but not in standard way which jebus as7

00:07:34,880 --> 00:07:43,530
preference was to switch to more strong

00:07:39,210 --> 00:07:50,100
authentication mechanisms which means

00:07:43,530 --> 00:07:55,320
such mechanisms and this wasn't

00:07:50,100 --> 00:07:58,320
compatible with just as a result new

00:07:55,320 --> 00:08:02,160
solution was introduced yet the just was

00:07:58,320 --> 00:08:06,360
covered by security domains and now we

00:08:02,160 --> 00:08:14,370
have also security realms which covers

00:08:06,360 --> 00:08:17,130
this sasso and as a result we have two

00:08:14,370 --> 00:08:20,880
solutions which solved the same problem

00:08:17,130 --> 00:08:24,510
but from different perspective and it's

00:08:20,880 --> 00:08:30,180
confusing for users for administrators

00:08:24,510 --> 00:08:38,460
and this is the main purpose which led

00:08:30,180 --> 00:08:41,870
to initiation of electron project what

00:08:38,460 --> 00:08:47,190
is already implemented in Letran its

00:08:41,870 --> 00:08:52,490
base it's mainly the set of api's and SP

00:08:47,190 --> 00:08:55,630
is one of them is server

00:08:52,490 --> 00:08:59,500
password factory which provides

00:08:55,630 --> 00:09:04,180
implementation of several types of

00:08:59,500 --> 00:09:07,520
passwords and password mechanisms and

00:09:04,180 --> 00:09:12,980
representations as his password salted

00:09:07,520 --> 00:09:15,890
passwords and it provides also API to

00:09:12,980 --> 00:09:21,230
some level of transformation from one

00:09:15,890 --> 00:09:24,529
point four from one representation of

00:09:21,230 --> 00:09:26,000
passwords for example from plain I want

00:09:24,529 --> 00:09:28,850
to convert to to some other

00:09:26,000 --> 00:09:36,260
representation and when it is supported

00:09:28,850 --> 00:09:38,589
we have API for it the other area our

00:09:36,260 --> 00:09:42,320
security realms which we can compare

00:09:38,589 --> 00:09:47,170
somehow to login modules in in security

00:09:42,320 --> 00:09:47,170
domains like legacy security domains and

00:09:48,279 --> 00:10:01,339
the security rams represent integration

00:09:55,520 --> 00:10:05,060
point which user store so when your user

00:10:01,339 --> 00:10:08,930
population lists for example you have

00:10:05,060 --> 00:10:12,560
users in LDAP or in database so through

00:10:08,930 --> 00:10:19,790
security realms you can access and some

00:10:12,560 --> 00:10:24,550
time manage the users it contains as I

00:10:19,790 --> 00:10:28,510
said it contains also modifiable API so

00:10:24,550 --> 00:10:32,540
it's different to login modules you can

00:10:28,510 --> 00:10:35,300
directly change through the API the user

00:10:32,540 --> 00:10:41,839
population and for example attributes of

00:10:35,300 --> 00:10:44,720
users security domains are the points

00:10:41,839 --> 00:10:48,920
against which the authentication starts

00:10:44,720 --> 00:10:52,850
so if you have web application it can

00:10:48,920 --> 00:10:56,000
say or administrator can say yet this

00:10:52,850 --> 00:10:58,750
application will be protected by this

00:10:56,000 --> 00:11:01,510
security domain and security domain

00:10:58,750 --> 00:11:04,310
references security realms which

00:11:01,510 --> 00:11:13,639
provides users

00:11:04,310 --> 00:11:16,579
example for authentication some

00:11:13,639 --> 00:11:21,230
mechanisms are based on existing cable

00:11:16,579 --> 00:11:23,560
solution and the completely new is HTTP

00:11:21,230 --> 00:11:27,610
authentication framework which

00:11:23,560 --> 00:11:33,850
introduces something like sessile into

00:11:27,610 --> 00:11:39,259
into HTTP and everything is packaged as

00:11:33,850 --> 00:11:45,439
new java GCA security provider which is

00:11:39,259 --> 00:11:51,350
registered by by electron extension we

00:11:45,439 --> 00:11:55,399
will see it later and also there is

00:11:51,350 --> 00:11:59,480
ongoing work on integration to other

00:11:55,399 --> 00:12:03,230
subsystems like web server and ejbs also

00:11:59,480 --> 00:12:05,060
Ramon remoting and we add the other

00:12:03,230 --> 00:12:11,089
subsystem which needs to handle its

00:12:05,060 --> 00:12:14,600
security under the umbrella of electron

00:12:11,089 --> 00:12:17,889
we can also count the new website

00:12:14,600 --> 00:12:21,920
security manager which is already in

00:12:17,889 --> 00:12:26,139
already involved five versions which we

00:12:21,920 --> 00:12:31,660
have now you can try it when you start

00:12:26,139 --> 00:12:39,170
do about five it's - sec mg mg r

00:12:31,660 --> 00:12:42,649
argument if you make simple comparison

00:12:39,170 --> 00:12:46,040
of the subsistence as we have it now in

00:12:42,649 --> 00:12:50,120
the integration branch the old security

00:12:46,040 --> 00:12:53,959
subsystem has XML schema file which for

00:12:50,120 --> 00:12:55,610
400 lines and the editor own subsystem

00:12:53,959 --> 00:12:58,550
which is not completed

00:12:55,610 --> 00:13:02,329
edy for example the SSL configuration is

00:12:58,550 --> 00:13:06,740
missing there and it already had two and

00:13:02,329 --> 00:13:11,680
half thousand lines so it will be huge

00:13:06,740 --> 00:13:14,600
thing and if we look into the

00:13:11,680 --> 00:13:16,370
configuration how it looks like usually

00:13:14,600 --> 00:13:19,880
in legacy secure

00:13:16,370 --> 00:13:22,190
subsystem you have security domain which

00:13:19,880 --> 00:13:24,170
contains references to login modules

00:13:22,190 --> 00:13:27,589
with some configuration of

00:13:24,170 --> 00:13:29,900
authentication the electron subsystem

00:13:27,589 --> 00:13:33,400
has something similar it has security

00:13:29,900 --> 00:13:37,550
realms which the user population

00:13:33,400 --> 00:13:41,000
security domain which references the

00:13:37,550 --> 00:13:43,550
security realm and then for example HTTP

00:13:41,000 --> 00:13:44,890
authentication which references security

00:13:43,550 --> 00:13:47,360
domain or

00:13:44,890 --> 00:13:54,080
authentication which references security

00:13:47,360 --> 00:13:59,260
domain and what we can expect in the

00:13:54,080 --> 00:14:03,440
next days and weeks better is working on

00:13:59,260 --> 00:14:07,970
credential store API spi which will

00:14:03,440 --> 00:14:10,610
which will replace security vaults which

00:14:07,970 --> 00:14:13,279
are currently used to store sensitive

00:14:10,610 --> 00:14:16,550
information so if you don't want to

00:14:13,279 --> 00:14:18,860
store for example database password in

00:14:16,550 --> 00:14:21,770
your application server configuration

00:14:18,860 --> 00:14:24,830
you will put it or currently you put it

00:14:21,770 --> 00:14:28,250
into the vault and in the future you

00:14:24,830 --> 00:14:30,950
will use credential API SPI to store it

00:14:28,250 --> 00:14:33,050
somewhere out of the server

00:14:30,950 --> 00:14:35,089
configuration and the server

00:14:33,050 --> 00:14:39,500
configuration will hold only the

00:14:35,089 --> 00:14:44,060
reference to to the credential store the

00:14:39,500 --> 00:14:48,020
other part which it's which is expected

00:14:44,060 --> 00:14:56,839
is the single configuration of excess

00:14:48,020 --> 00:15:00,230
SSL context which which is as I said

00:14:56,839 --> 00:15:02,810
currently configuration for example in

00:15:00,230 --> 00:15:08,020
security domain security realms or under

00:15:02,810 --> 00:15:08,020
tau and there will be a need for

00:15:08,080 --> 00:15:16,610
integration in other subsystems as

00:15:11,660 --> 00:15:19,180
remoting or JMS but thanks to new

00:15:16,610 --> 00:15:23,089
feature in both Titan which is called

00:15:19,180 --> 00:15:28,519
capabilities and requirements this

00:15:23,089 --> 00:15:33,410
is not so big deal and the subsystem

00:15:28,519 --> 00:15:37,430
don't need to have dependency on a

00:15:33,410 --> 00:15:42,019
deterrent project they just will need to

00:15:37,430 --> 00:15:45,379
say yeah I want to new SSL context for

00:15:42,019 --> 00:15:48,920
example visited this name and they don't

00:15:45,379 --> 00:15:55,029
need to know that behind is electron or

00:15:48,920 --> 00:16:02,149
other provider and the cord

00:15:55,029 --> 00:16:05,689
compatibility once the electron is much

00:16:02,149 --> 00:16:10,220
involved why I think user will start to

00:16:05,689 --> 00:16:13,879
ask how do I transfer my configuration

00:16:10,220 --> 00:16:18,709
from legacy subsystem into out into

00:16:13,879 --> 00:16:22,579
electron how wiII I move from vault to

00:16:18,709 --> 00:16:26,649
credential stores and so on and this is

00:16:22,579 --> 00:16:33,639
or only guess is how it will continue

00:16:26,649 --> 00:16:33,639
I've told it better and the plan was to

00:16:34,929 --> 00:16:43,370
do have the old system and electron

00:16:38,959 --> 00:16:49,339
sometime in parallel and then cut most

00:16:43,370 --> 00:16:52,610
of the just just security and only keep

00:16:49,339 --> 00:16:58,009
login modules which which are used for

00:16:52,610 --> 00:17:01,160
example as third-party modules customers

00:16:58,009 --> 00:17:05,990
have their own implementation so only

00:17:01,160 --> 00:17:09,409
this part will be will survive and also

00:17:05,990 --> 00:17:15,890
some migration tool for for the awards

00:17:09,409 --> 00:17:21,500
should be introduced yeah

00:17:15,890 --> 00:17:26,990
and now the demo time I want to show you

00:17:21,500 --> 00:17:30,260
how to simply secure web application in

00:17:26,990 --> 00:17:32,040
bout five and at first i will show you

00:17:30,260 --> 00:17:35,790
how to do it

00:17:32,040 --> 00:17:42,300
the legacy subsystem and then how to do

00:17:35,790 --> 00:17:45,900
it with new electron for legacy

00:17:42,300 --> 00:17:50,190
subsystem I will use users and trowel

00:17:45,900 --> 00:17:56,720
stored in property files and in electron

00:17:50,190 --> 00:18:25,260
I will store them in file system Ram and

00:17:56,720 --> 00:18:29,760
yeah let's let's try we will replace the

00:18:25,260 --> 00:18:33,170
word file it's clean installation of of

00:18:29,760 --> 00:18:42,380
the version where is electron integrated

00:18:33,170 --> 00:18:42,380
and hopefully we will start it

00:18:47,249 --> 00:18:57,909
and how the test application looks like

00:18:52,899 --> 00:19:01,299
it's single JSP JSP file application and

00:18:57,909 --> 00:19:05,739
it also includes two deployment

00:19:01,299 --> 00:19:08,409
descriptor 1 is vendor specific our

00:19:05,739 --> 00:19:10,840
tables web.xml which is used to

00:19:08,409 --> 00:19:15,789
reference security domain and the second

00:19:10,840 --> 00:19:25,389
is the standard deployment descriptor

00:19:15,789 --> 00:19:29,080
from server specification web.xml and if

00:19:25,389 --> 00:19:33,220
we look into them this is the JBoss map

00:19:29,080 --> 00:19:40,769
XML we just reference where tests as

00:19:33,220 --> 00:19:44,970
name of security domain standard

00:19:40,769 --> 00:19:48,850
deployment descriptor says that all

00:19:44,970 --> 00:19:52,119
application will be protected and only

00:19:48,850 --> 00:19:54,970
users which role admin will have access

00:19:52,119 --> 00:19:59,249
and the application will be protected

00:19:54,970 --> 00:20:02,619
which basic authentication and ram name

00:19:59,249 --> 00:20:11,679
presented to user will be secured

00:20:02,619 --> 00:20:15,100
kingdom and the third file is the JSP

00:20:11,679 --> 00:20:20,009
which only prints the name of

00:20:15,100 --> 00:20:20,009
authenticated user principal name

00:20:33,480 --> 00:20:39,790
the next step before we deploy this

00:20:36,610 --> 00:20:43,660
application we will set up the legacy

00:20:39,790 --> 00:20:46,240
security domain because we reference the

00:20:43,660 --> 00:20:48,880
security domain name from from the

00:20:46,240 --> 00:20:52,540
application so we want to have it

00:20:48,880 --> 00:20:55,480
prepared before deployment so I've

00:20:52,540 --> 00:21:01,120
prepared two property files which

00:20:55,480 --> 00:21:04,060
contains users and rows if we look into

00:21:01,120 --> 00:21:07,900
users file where it's only mapping

00:21:04,060 --> 00:21:11,800
username password and property file and

00:21:07,900 --> 00:21:21,490
Roseville is mapping from user name to

00:21:11,800 --> 00:21:25,510
list of roles and how to configure the

00:21:21,490 --> 00:21:28,510
legacy security domain usually you don't

00:21:25,510 --> 00:21:32,140
need for example security RAM to

00:21:28,510 --> 00:21:34,180
configure but because I don't have the

00:21:32,140 --> 00:21:38,290
property cars on Kasbah

00:21:34,180 --> 00:21:42,460
I use the way through security Ram so

00:21:38,290 --> 00:21:45,280
the authentication comes from security

00:21:42,460 --> 00:21:48,930
realm and security domain is only used

00:21:45,280 --> 00:21:54,790
to reference security de Ram through

00:21:48,930 --> 00:22:01,150
random direct login module so this is

00:21:54,790 --> 00:22:06,810
the management operations which we will

00:22:01,150 --> 00:22:06,810
need to do so let's run it

00:22:10,660 --> 00:22:24,530
and let's deploy our application we can

00:22:18,710 --> 00:22:28,900
check it it's deployed and we can test

00:22:24,530 --> 00:22:33,860
it I will use the command line based

00:22:28,900 --> 00:22:38,420
HTTP kind Quran and it will be info box

00:22:33,860 --> 00:22:41,720
not so we will see the HTTP headers and

00:22:38,420 --> 00:22:44,960
yeah I didn't provide any authentication

00:22:41,720 --> 00:22:49,880
information and the server responses

00:22:44,960 --> 00:22:52,660
with 401 and outright so we we are not

00:22:49,880 --> 00:22:52,660
authenticated

00:23:00,760 --> 00:23:07,220
if we provide authentication information

00:23:03,710 --> 00:23:10,280
so username admin and his password

00:23:07,220 --> 00:23:16,870
the restaurants forum server is which

00:23:10,280 --> 00:23:21,309
type status okay and we we see that the

00:23:16,870 --> 00:23:26,660
we are authenticated into the JSP which

00:23:21,309 --> 00:23:29,150
which username admin so this is

00:23:26,660 --> 00:23:37,400
authentication in legacy subsystem

00:23:29,150 --> 00:23:43,340
security subsystem now in the in the

00:23:37,400 --> 00:23:48,980
return we will need to do some more

00:23:43,340 --> 00:23:51,549
steps this is man these are management

00:23:48,980 --> 00:23:54,740
operations which we'll need to do to

00:23:51,549 --> 00:23:56,120
complete the configuration so first

00:23:54,740 --> 00:23:58,159
register

00:23:56,120 --> 00:24:03,200
return subsystem in but very

00:23:58,159 --> 00:24:07,070
configuration then configure file system

00:24:03,200 --> 00:24:11,450
Ram which will be stored somewhere under

00:24:07,070 --> 00:24:15,080
the server configuration and as you can

00:24:11,450 --> 00:24:19,640
see we use direct management operations

00:24:15,080 --> 00:24:22,940
to abusers set their password and also

00:24:19,640 --> 00:24:28,760
set their attributes I use setting

00:24:22,940 --> 00:24:33,890
attributes to configure roles once we

00:24:28,760 --> 00:24:35,900
have security realm we can use it in new

00:24:33,890 --> 00:24:40,760
security domain which name test domain

00:24:35,900 --> 00:24:43,730
and then we will configure HTTP server

00:24:40,760 --> 00:24:49,280
authentication which will reference the

00:24:43,730 --> 00:24:56,299
new security domain and final step is to

00:24:49,280 --> 00:24:58,010
say to understand subsystem that if if

00:24:56,299 --> 00:25:05,140
the application requires authentication

00:24:58,010 --> 00:25:08,350
to baptists domain we will map it to the

00:25:05,140 --> 00:25:12,549
HTTP server authentication which we

00:25:08,350 --> 00:25:15,879
configured in in the previous step

00:25:12,549 --> 00:25:25,209
so it will be authenticated through

00:25:15,879 --> 00:25:28,779
electron let's run the script and check

00:25:25,209 --> 00:25:32,070
the server log file if it contains yes

00:25:28,779 --> 00:25:41,099
it should contain some message from

00:25:32,070 --> 00:25:41,099
electron that it is ready and now we can

00:25:41,609 --> 00:25:51,849
again check the authentication so first

00:25:48,339 --> 00:25:52,809
without username password and again we

00:25:51,849 --> 00:25:58,389
are not authorized

00:25:52,809 --> 00:26:01,839
but now the RAM name in authenticate

00:25:58,389 --> 00:26:04,539
header from server it's not the the name

00:26:01,839 --> 00:26:07,419
be used in deployment descriptor but

00:26:04,539 --> 00:26:18,299
it's the name we configured in electron

00:26:07,419 --> 00:26:20,309
so secured by electron if we provide

00:26:18,299 --> 00:26:24,089
username password

00:26:20,309 --> 00:26:27,129
we have own and authorize because for

00:26:24,089 --> 00:26:33,339
electron we have a little bit different

00:26:27,129 --> 00:26:36,009
password so i will provide e.honda on

00:26:33,339 --> 00:26:39,489
the end of the password and it

00:26:36,009 --> 00:26:42,849
authenticates correctly so we switch

00:26:39,489 --> 00:26:52,089
from legacy authentication to electron

00:26:42,849 --> 00:26:54,869
authentication hopefully some steps will

00:26:52,089 --> 00:26:59,950
not be necessary once the electron is

00:26:54,869 --> 00:27:04,179
ready in about Phi and I expect some

00:26:59,950 --> 00:27:09,219
reasonable default for example for the

00:27:04,179 --> 00:27:11,669
HTTP HTTP server authentication but yeah

00:27:09,219 --> 00:27:11,669
we will see

00:27:16,180 --> 00:27:26,440
as I said electron itself registers its

00:27:23,680 --> 00:27:30,940
functionality or its services as

00:27:26,440 --> 00:27:36,140
standard Java security services in

00:27:30,940 --> 00:27:42,730
security provider I have second short

00:27:36,140 --> 00:27:48,080
demo which shows how to add additional

00:27:42,730 --> 00:27:53,930
additional functionality by adding new

00:27:48,080 --> 00:28:00,730
security provider through electron so

00:27:53,930 --> 00:28:09,680
let's continue in this demo and I have

00:28:00,730 --> 00:28:13,160
simple the simple single JSP which just

00:28:09,680 --> 00:28:14,270
lists names of security providers

00:28:13,160 --> 00:28:18,650
registers

00:28:14,270 --> 00:28:22,760
registered in the JVM and/or it also

00:28:18,650 --> 00:28:31,250
lists key stores registered by these

00:28:22,760 --> 00:28:39,430
security providers let's deploy the

00:28:31,250 --> 00:28:43,760
application check if it is deployed and

00:28:39,430 --> 00:28:49,910
read the providers there is a set of

00:28:43,760 --> 00:28:55,400
standard dousset standard security

00:28:49,910 --> 00:28:58,580
providers registered by security Java

00:28:55,400 --> 00:29:01,700
security configuration file in your java

00:28:58,580 --> 00:29:04,880
runtime environment and dukey store

00:29:01,700 --> 00:29:08,150
types the last the last security

00:29:04,880 --> 00:29:12,220
provider listed here is the butterfly

00:29:08,150 --> 00:29:17,570
electron which is the one registered by

00:29:12,220 --> 00:29:21,610
extension also the password file in the

00:29:17,570 --> 00:29:24,310
Kista types comes from from the electron

00:29:21,610 --> 00:29:28,670
so

00:29:24,310 --> 00:29:36,550
it's what what is in return by default

00:29:28,670 --> 00:30:02,630
and when we want to add the peak pkcs

00:29:36,550 --> 00:30:06,160
available security provider this is the

00:30:02,630 --> 00:30:13,360
management operation for it which says

00:30:06,160 --> 00:30:18,230
in electron add new provider loader bits

00:30:13,360 --> 00:30:22,730
given provider class load it from given

00:30:18,230 --> 00:30:26,690
by PI module and we can also provide

00:30:22,730 --> 00:30:29,810
some properties for for the initial

00:30:26,690 --> 00:30:48,050
initiated provider and we will say

00:30:29,810 --> 00:30:53,480
register it on the server start up again

00:30:48,050 --> 00:30:56,450
test application and you can see some

00:30:53,480 --> 00:30:59,390
pkcs you have a security provider is

00:30:56,450 --> 00:31:04,160
registered and in key store types we

00:30:59,390 --> 00:31:08,600
have new type pkcs 11 this keysto type

00:31:04,160 --> 00:31:13,040
can be used for example to to access

00:31:08,600 --> 00:31:18,350
smart cards or keys keys stored on smart

00:31:13,040 --> 00:31:21,830
cards or USB tokens or in this demo it

00:31:18,350 --> 00:31:26,630
was used to access network security

00:31:21,830 --> 00:31:32,150
services key store so once more the

00:31:26,630 --> 00:31:33,530
conclusion electron is set of API sand

00:31:32,150 --> 00:31:37,660
SP is

00:31:33,530 --> 00:31:40,750
and it should provide unified security

00:31:37,660 --> 00:31:46,670
configuration across the whole

00:31:40,750 --> 00:31:50,560
application server and maybe it will

00:31:46,670 --> 00:31:55,340
completely replace just and pick a box

00:31:50,560 --> 00:32:01,490
so it's a done it's the next big thing

00:31:55,340 --> 00:32:03,520
in vault file and you should give it a

00:32:01,490 --> 00:32:03,520
try

00:32:04,090 --> 00:32:08,720
currently you need to build the

00:32:07,280 --> 00:32:15,260
components yourself

00:32:08,720 --> 00:32:19,250
but the integration is it's expected

00:32:15,260 --> 00:32:23,140
that now after racing well tighten some

00:32:19,250 --> 00:32:26,930
parts will be integrated into the main

00:32:23,140 --> 00:32:31,780
main branches so into the right phicorp

00:32:26,930 --> 00:32:36,530
and multi if you find any issue there's

00:32:31,780 --> 00:32:39,830
a lie project in jboss issue director so

00:32:36,530 --> 00:32:45,890
you can report it or if you have any

00:32:39,830 --> 00:32:53,630
food or ideas or comments you can talk

00:32:45,890 --> 00:33:09,290
with developers on HipChat and it's all

00:32:53,630 --> 00:33:15,740
do have questions Tico is mainly single

00:33:09,290 --> 00:33:20,590
sign-on yes so it will be I think it

00:33:15,740 --> 00:33:20,590
could be used as security realm

00:33:32,420 --> 00:33:40,070
and also there there should be there

00:33:36,530 --> 00:33:43,700
should be integration in the future but

00:33:40,070 --> 00:34:16,280
the basic literary layer in part I

00:33:43,700 --> 00:34:21,190
should be I think the key coke tries to

00:34:16,280 --> 00:34:26,270
solve another off of problems yeah

00:34:21,190 --> 00:34:29,000
if you know current solution security we

00:34:26,270 --> 00:34:32,480
have picket link and pick red box in

00:34:29,000 --> 00:34:35,300
multi and pickup box is the core of the

00:34:32,480 --> 00:34:39,710
security and picket link is mainly

00:34:35,300 --> 00:34:44,360
single sign-on summer based so in the

00:34:39,710 --> 00:34:50,870
future edit Ron will be the core and key

00:34:44,360 --> 00:34:52,480
code will provide single sign-on I don't

00:34:50,870 --> 00:34:59,920
know

00:34:52,480 --> 00:34:59,920
akiko very much so I can answer better

00:35:00,430 --> 00:35:06,730
any other questions if not Thanks

00:35:13,510 --> 00:35:21,560
as as far as I know it's not possible

00:35:17,540 --> 00:35:24,980
now but I don't know what are the plants

00:35:21,560 --> 00:35:27,920
which this provider provider loaders

00:35:24,980 --> 00:35:39,170
under the electron but I do have some

00:35:27,920 --> 00:35:40,660
mission remove and reorder so the future

00:35:39,170 --> 00:35:46,700
is bright

00:35:40,660 --> 00:35:52,150
any other questions if not thank you for

00:35:46,700 --> 00:35:52,150
your attention and have a nice evening

00:43:29,160 --> 00:43:31,160
Oh

00:49:33,240 --> 00:49:35,300

YouTube URL: https://www.youtube.com/watch?v=S_XcvV4Mbrw


