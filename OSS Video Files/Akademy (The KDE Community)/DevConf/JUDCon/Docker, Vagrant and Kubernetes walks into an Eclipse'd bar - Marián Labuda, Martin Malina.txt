Title: Docker, Vagrant and Kubernetes walks into an Eclipse'd bar - MariÃ¡n Labuda, Martin Malina
Publication date: 2016-02-12
Playlist: JUDCon
Description: 
	Todays software industry is booming with tools like Docker, Kubernetes, Vagrant and more to enable faster turnaround times via virtualization.

How does Eclipse the IDE deal with that ? Can it deal with it ? How should it and its users deal with it ?

Come to this talk and hear how and what Eclipse Linux Tools and JBoss Tools are doing in the area.

It will give a brief overview on the Docker and Vagrant tooling in Linux Tools and then how that is used and combined in Kubernetes and OpenShift Tools.

The talk will show how you can use Docker and Vagrant practically today with plain Eclipse to improve your own local development experience and then shortly cover how it all comes together in the cloud and container space.

Some basic understanding of the container and virtualization technologies are recommended, but not an absolute requirement.

Presentation: http://bit.ly/1QwKbYF
Captions: 
	00:00:39,040 --> 00:00:41,190
Oh

00:00:48,870 --> 00:00:51,870
together

00:01:27,650 --> 00:01:33,180
stay here

00:01:30,790 --> 00:01:33,180
see like this

00:01:38,930 --> 00:01:44,780
ladies and gentlemen thank you for

00:01:40,730 --> 00:01:47,830
coming a few organizational messages at

00:01:44,780 --> 00:01:51,260
the beginning please mute your phones

00:01:47,830 --> 00:01:54,800
second there's a party tomorrow as you

00:01:51,260 --> 00:01:58,520
perhaps know the tickets were available

00:01:54,800 --> 00:02:01,310
at the red haired redhead recruiting

00:01:58,520 --> 00:02:03,950
booth at the entrance as far as i know

00:02:01,310 --> 00:02:09,740
the tickets are over for today but but

00:02:03,950 --> 00:02:12,650
there should be more tickets tomorrow if

00:02:09,740 --> 00:02:19,100
you need to leave and enter please close

00:02:12,650 --> 00:02:22,790
the doors as quietly as possible you are

00:02:19,100 --> 00:02:25,190
welcome to ever well the sessions and

00:02:22,790 --> 00:02:31,670
you visit this URL this last / is

00:02:25,190 --> 00:02:35,000
important and the next session is by

00:02:31,670 --> 00:02:41,330
Martin Molina and Marianne labuda from

00:02:35,000 --> 00:02:47,350
jboss tools hello my name is Maggie

00:02:41,330 --> 00:02:51,230
Malina and today we'll talk about

00:02:47,350 --> 00:02:55,220
dueling that is available today in

00:02:51,230 --> 00:02:57,080
Eclipse 44 docker let's will be the

00:02:55,220 --> 00:03:01,150
first part of the presentation with some

00:02:57,080 --> 00:03:04,580
demo then we'll show you what we have

00:03:01,150 --> 00:03:10,510
ready for red head container development

00:03:04,580 --> 00:03:15,019
platform to get a kit just get yeah and

00:03:10,510 --> 00:03:18,920
and finally we'll show you our open

00:03:15,019 --> 00:03:21,530
shift version 32 link in Eclipse and

00:03:18,920 --> 00:03:27,470
that will be shown to by my colleague

00:03:21,530 --> 00:03:31,100
Marie on lambda so is there anybody here

00:03:27,470 --> 00:03:33,660
who hasn't heard of docker hit I guess

00:03:31,100 --> 00:03:39,480
not ok ok

00:03:33,660 --> 00:03:41,940
so this is what they say on the official

00:03:39,480 --> 00:03:43,470
website darker allows you to package an

00:03:41,940 --> 00:03:45,990
application with all of its dependencies

00:03:43,470 --> 00:03:51,270
inter standardized unit for software

00:03:45,990 --> 00:03:53,640
development so in the past when you had

00:03:51,270 --> 00:03:55,800
an application that you wanted to deploy

00:03:53,640 --> 00:03:58,260
you would you would just install it on a

00:03:55,800 --> 00:04:00,990
physical machine then we're operating

00:03:58,260 --> 00:04:04,380
systems will install all the things that

00:04:00,990 --> 00:04:09,540
you need it and then then start your

00:04:04,380 --> 00:04:14,460
application then later people can up

00:04:09,540 --> 00:04:16,380
with virtualization so it got a little

00:04:14,460 --> 00:04:20,700
bit easier because you could have

00:04:16,380 --> 00:04:23,430
multiple virtual machines on one

00:04:20,700 --> 00:04:27,090
physical machine and you could you could

00:04:23,430 --> 00:04:29,280
replicate them and so it it improved the

00:04:27,090 --> 00:04:31,740
situation and now the next step is

00:04:29,280 --> 00:04:34,800
containers where you have everything

00:04:31,740 --> 00:04:37,440
bundled together in one image and you

00:04:34,800 --> 00:04:39,750
just run it and you don't have to worry

00:04:37,440 --> 00:04:44,580
about any dependencies because it's all

00:04:39,750 --> 00:04:46,650
included so dr. is slight white is very

00:04:44,580 --> 00:04:52,620
fast it usually takes just a couple

00:04:46,650 --> 00:04:56,490
seconds to to start the container yeah

00:04:52,620 --> 00:04:58,380
you you should be able to just get the

00:04:56,490 --> 00:05:01,500
image and write everywhere where you

00:04:58,380 --> 00:05:05,070
have dr. available when you have

00:05:01,500 --> 00:05:06,570
multiple containers unless you expose

00:05:05,070 --> 00:05:09,390
some ports and allow them to communicate

00:05:06,570 --> 00:05:19,430
with one another they're isolated so

00:05:09,390 --> 00:05:23,730
it's secure and here is the typical

00:05:19,430 --> 00:05:25,680
workflow if well the pieces that you

00:05:23,730 --> 00:05:30,000
need to work with when you want to get

00:05:25,680 --> 00:05:33,030
started is that you can either maybe I

00:05:30,000 --> 00:05:34,560
can use this think you can either start

00:05:33,030 --> 00:05:38,050
with

00:05:34,560 --> 00:05:41,410
Whitaker file that you're I'll write on

00:05:38,050 --> 00:05:44,020
your own so so you define what what

00:05:41,410 --> 00:05:46,750
image to to base it on and then you let

00:05:44,020 --> 00:05:48,460
some of your own configuration and then

00:05:46,750 --> 00:05:52,000
you build it create an image then you

00:05:48,460 --> 00:05:55,600
start a container and run it on a doctor

00:05:52,000 --> 00:05:58,720
demon and it's running or you can get an

00:05:55,600 --> 00:06:02,260
image from from the registry from the

00:05:58,720 --> 00:06:04,900
docker hub or some other and then also

00:06:02,260 --> 00:06:14,830
run it or if you get our own image you

00:06:04,900 --> 00:06:18,220
can then push it to a registry so what

00:06:14,830 --> 00:06:20,890
do we have today available in Eclipse we

00:06:18,220 --> 00:06:25,060
have dr. tools that are part of Linux

00:06:20,890 --> 00:06:27,820
tools but they actually are not only for

00:06:25,060 --> 00:06:35,020
linux it's for linux OS than a windows

00:06:27,820 --> 00:06:37,000
and it's hosted at eclipse.org and it

00:06:35,020 --> 00:06:42,130
can it can connect to any of your

00:06:37,000 --> 00:06:44,290
existing doctor doctor machines or or or

00:06:42,130 --> 00:06:51,730
a doctor demon running on your linux

00:06:44,290 --> 00:06:53,710
machine and in it it helps you doing all

00:06:51,730 --> 00:06:56,470
the all the things that you would like

00:06:53,710 --> 00:06:58,660
to do with docker you know some of the

00:06:56,470 --> 00:07:00,730
comments are pretty easy like pull

00:06:58,660 --> 00:07:02,890
that's easy to do from common line but

00:07:00,730 --> 00:07:06,850
if you want to start your container and

00:07:02,890 --> 00:07:10,480
then share some bald mountain volumes

00:07:06,850 --> 00:07:12,610
and expose ports and define some

00:07:10,480 --> 00:07:18,760
variables it may be easier to do from

00:07:12,610 --> 00:07:22,750
from an ID like eclipse so I'll show you

00:07:18,760 --> 00:07:25,630
a demo and in this demo will show the

00:07:22,750 --> 00:07:30,960
all the all the basic things like how to

00:07:25,630 --> 00:07:30,960
connect to a doctor demon article images

00:07:31,140 --> 00:07:35,940
well I'll show all of this

00:07:37,580 --> 00:07:43,669
okay so so here I have tables developer

00:07:41,180 --> 00:07:49,520
studio which is based on eclipse Mars

00:07:43,669 --> 00:07:52,250
and what I have here is a docker

00:07:49,520 --> 00:07:54,740
Explorer so we have a we have a docker

00:07:52,250 --> 00:07:58,960
perspective here which includes dr. X

00:07:54,740 --> 00:08:04,879
for which shows your connections then

00:07:58,960 --> 00:08:09,099
docker images and dr. containers so if I

00:08:04,879 --> 00:08:13,599
click here will take few seconds to open

00:08:09,099 --> 00:08:16,370
and then it will it will allow me to

00:08:13,599 --> 00:08:20,690
create a connection it's actually taking

00:08:16,370 --> 00:08:23,509
way too long so yeah here here I can

00:08:20,690 --> 00:08:25,879
enter a connection name and on linux i

00:08:23,509 --> 00:08:28,879
would probably use unix circuits but

00:08:25,879 --> 00:08:30,830
here I'm using TCP connection i have a

00:08:28,879 --> 00:08:34,459
dr machine installed and running on this

00:08:30,830 --> 00:08:38,719
machine so if i use this search it will

00:08:34,459 --> 00:08:43,459
show me the doctor machine and i just

00:08:38,719 --> 00:08:46,250
finish and i have the connection here

00:08:43,459 --> 00:08:54,620
here i can see some images that i have

00:08:46,250 --> 00:09:01,550
here and and containers are empty right

00:08:54,620 --> 00:09:07,550
now and also see it here ok so what I'm

00:09:01,550 --> 00:09:10,550
gonna do is I'm gonna I'm going to start

00:09:07,550 --> 00:09:12,949
two containers one will be Postgres

00:09:10,550 --> 00:09:19,339
database the other will be multiplied

00:09:12,949 --> 00:09:21,470
and they will be linked and in wildfly i

00:09:19,339 --> 00:09:23,390
will have a data source that will be

00:09:21,470 --> 00:09:26,709
using the Postgres database and then we

00:09:23,390 --> 00:09:26,709
will deploy an application to it

00:09:31,930 --> 00:09:39,880
yeah I already have the images here but

00:09:34,910 --> 00:09:42,440
if I if I wanted to pull an image I i

00:09:39,880 --> 00:09:45,290
can use this dialogue where I can either

00:09:42,440 --> 00:09:48,110
just enter the image that I want or here

00:09:45,290 --> 00:09:52,010
I can search for images but I already

00:09:48,110 --> 00:09:56,120
have those prepared so i'm going to

00:09:52,010 --> 00:09:59,060
write it here and here you you have you

00:09:56,120 --> 00:10:02,899
know some options so we're going to

00:09:59,060 --> 00:10:05,480
expose the report five four three two of

00:10:02,899 --> 00:10:10,690
the database so that the word file

00:10:05,480 --> 00:10:19,070
container can connect it later on and

00:10:10,690 --> 00:10:33,760
here we will set our secret password for

00:10:19,070 --> 00:10:33,760
postgres thanks okay and

00:10:34,840 --> 00:10:41,900
it should be it so I can also choose a

00:10:38,990 --> 00:10:47,600
name but it has this vocabulary off of

00:10:41,900 --> 00:10:51,310
names and it will be created randomly so

00:10:47,600 --> 00:10:56,290
you can see the database we started and

00:10:51,310 --> 00:11:06,080
now I'm gonna have a modified barfly

00:10:56,290 --> 00:11:08,330
image so here i have a project and as

00:11:06,080 --> 00:11:09,980
you can see i have a docker file here so

00:11:08,330 --> 00:11:17,360
in this dr. filed I based this on

00:11:09,980 --> 00:11:21,560
wirefly and the 2i I add the module for

00:11:17,360 --> 00:11:23,180
postgres and then I i get a modified

00:11:21,560 --> 00:11:26,180
stand alone XML which is the

00:11:23,180 --> 00:11:29,230
configuration file for for bulk fly I

00:11:26,180 --> 00:11:29,230
will show

00:11:44,450 --> 00:11:52,160
yeah here it is again so this is the

00:11:48,740 --> 00:11:54,440
data source definition and here you can

00:11:52,160 --> 00:11:58,220
see it uses environmental variables

00:11:54,440 --> 00:12:02,150
let's start with DB underscore and this

00:11:58,220 --> 00:12:05,000
is the this is available because we will

00:12:02,150 --> 00:12:12,350
once we start the image we will link the

00:12:05,000 --> 00:12:14,570
postgres container okay so here on the

00:12:12,350 --> 00:12:20,740
dockerfile i can just use run run on

00:12:14,570 --> 00:12:24,290
server oh sorry docker image build and

00:12:20,740 --> 00:12:31,160
this will just build the image and then

00:12:24,290 --> 00:12:34,040
it's available here so when starting

00:12:31,160 --> 00:12:37,850
this again I will expose these ports

00:12:34,040 --> 00:12:43,390
here so that I can then show the the web

00:12:37,850 --> 00:12:46,670
page in the browser and the next page I

00:12:43,390 --> 00:12:51,470
I have a deployment directory that will

00:12:46,670 --> 00:12:54,080
be it will let's how I'm gonna sell it

00:12:51,470 --> 00:12:56,180
here it will use a directory on my

00:12:54,080 --> 00:13:00,370
machine that will be mounted on the

00:12:56,180 --> 00:13:06,190
content container when it started so I

00:13:00,370 --> 00:13:06,190
have the correct path here

00:13:09,720 --> 00:13:17,610
so I forgot one thing this is this here

00:13:14,519 --> 00:13:25,920
is to an option to link to an existing

00:13:17,610 --> 00:13:29,790
container sure I can so this is my

00:13:25,920 --> 00:13:32,689
Postgres database and i will use DP as

00:13:29,790 --> 00:13:32,689
the areas

00:13:41,860 --> 00:13:47,950
so the database is running and you here

00:13:44,560 --> 00:13:51,670
you can see that it it created the data

00:13:47,950 --> 00:13:55,660
source and hopefully it's working here

00:13:51,670 --> 00:14:03,850
in data source expire I have I have a

00:13:55,660 --> 00:14:07,720
connection configured and in tables you

00:14:03,850 --> 00:14:13,390
can see there is nothing yet but now I'm

00:14:07,720 --> 00:14:15,730
gonna have this deploy only a server

00:14:13,390 --> 00:14:19,500
adapter that will just deploy anything

00:14:15,730 --> 00:14:19,500
to the to the directory

00:14:31,380 --> 00:14:42,270
so here you can see it deployed to the

00:14:34,120 --> 00:14:47,440
application air and here in a browser

00:14:42,270 --> 00:14:50,980
this is my world fly server and this is

00:14:47,440 --> 00:14:53,220
the application and i can i can add a

00:14:50,980 --> 00:14:53,220
user

00:15:02,200 --> 00:15:11,440
and now let me check the data sources /

00:15:06,990 --> 00:15:13,590
I'll disconnect this and then connect

00:15:11,440 --> 00:15:13,590
again

00:15:17,740 --> 00:15:28,120
now now you can see the member database

00:15:20,050 --> 00:15:34,950
and also you can check here in order the

00:15:28,120 --> 00:15:34,950
content so is there seems to be working

00:15:37,490 --> 00:15:46,330
okay so so in this demo we saw two

00:15:42,230 --> 00:15:50,330
continuous running linked together and

00:15:46,330 --> 00:15:54,260
so they could the vault fly the VAT fly

00:15:50,330 --> 00:16:00,470
server was able to use the database link

00:15:54,260 --> 00:16:03,980
in a different container so maybe there

00:16:00,470 --> 00:16:06,910
is something missing for you if you want

00:16:03,980 --> 00:16:09,980
to if you want to start deploying

00:16:06,910 --> 00:16:13,300
developing and then deploying your

00:16:09,980 --> 00:16:18,050
doctoral your containerized applications

00:16:13,300 --> 00:16:23,020
on red hat enterprise linux or redhead

00:16:18,050 --> 00:16:25,550
atomic host or openshift version 3 then

00:16:23,020 --> 00:16:29,440
that's where red head container

00:16:25,550 --> 00:16:32,000
development cane kit comes into play and

00:16:29,440 --> 00:16:37,360
it's a unified development environment

00:16:32,000 --> 00:16:43,370
for building containerized apps and it's

00:16:37,360 --> 00:16:49,459
it supports linux windows OS 10 and it

00:16:43,370 --> 00:16:52,610
is basically a set of background boxes a

00:16:49,459 --> 00:16:55,180
vagrant allows you to configure your

00:16:52,610 --> 00:16:55,180
custom

00:16:59,810 --> 00:17:04,830
your custom virtual machines with with

00:17:02,970 --> 00:17:06,089
configuration so that when you start a

00:17:04,830 --> 00:17:09,480
virtual machine you have everything

00:17:06,089 --> 00:17:12,240
ready everything that you need so in in

00:17:09,480 --> 00:17:15,589
redhead cdk we have a vagrant box then

00:17:12,240 --> 00:17:18,480
there are a couple of vagrant plugins

00:17:15,589 --> 00:17:20,400
one of them is subscription manager

00:17:18,480 --> 00:17:23,130
background research registration plugin

00:17:20,400 --> 00:17:25,710
so when you start when we start the host

00:17:23,130 --> 00:17:30,870
it will automatically register to

00:17:25,710 --> 00:17:33,780
redhead customer portal and silica is

00:17:30,870 --> 00:17:39,000
available as a better from developer the

00:17:33,780 --> 00:17:44,010
redhead com so I'm just going to show

00:17:39,000 --> 00:17:48,120
you what we have in enjoyable developer

00:17:44,010 --> 00:17:51,600
studio so in we have a server adapter in

00:17:48,120 --> 00:17:55,680
the service view just like you would

00:17:51,600 --> 00:17:58,080
create a new server you can create a cdk

00:17:55,680 --> 00:18:02,280
server adapter which then will allow you

00:17:58,080 --> 00:18:06,210
to start start the machine in the host

00:18:02,280 --> 00:18:12,780
and so either I can do this manually

00:18:06,210 --> 00:18:18,830
using this or I can use the tables to

00:18:12,780 --> 00:18:18,830
run x detection plugging that we have

00:18:20,970 --> 00:18:29,110
yeah I already have to the path here so

00:18:25,570 --> 00:18:36,210
when I search the path it will find cdk

00:18:29,110 --> 00:18:39,100
version 2 and here it would appear I

00:18:36,210 --> 00:18:41,350
just I just need to set up my

00:18:39,100 --> 00:18:46,149
credentials for reddit customer portal

00:18:41,350 --> 00:18:50,649
which i already have here and then I can

00:18:46,149 --> 00:18:53,139
start this it will take a minute to

00:18:50,649 --> 00:18:56,769
start and what it does is that it

00:18:53,139 --> 00:18:59,740
basically runs vagrant up but once it

00:18:56,769 --> 00:19:03,249
started it it will create automatically

00:18:59,740 --> 00:19:06,909
connection to the docker which is inside

00:19:03,249 --> 00:19:10,389
the background box and also it will

00:19:06,909 --> 00:19:12,220
create a connection to open shift so

00:19:10,389 --> 00:19:14,440
then you can start developing developing

00:19:12,220 --> 00:19:18,840
for open shift using the open shift

00:19:14,440 --> 00:19:18,840
tools that Marion will show enemy

00:19:25,690 --> 00:19:28,690
so

00:19:29,440 --> 00:19:34,659
what I have here is the same thing that

00:19:31,960 --> 00:19:40,659
I could actually do you know from the

00:19:34,659 --> 00:19:44,769
command line and check the status and it

00:19:40,659 --> 00:19:47,350
shows up as running but but the box is

00:19:44,769 --> 00:19:50,500
started but some configuration is going

00:19:47,350 --> 00:19:53,919
on still so it takes a couple more

00:19:50,500 --> 00:19:55,980
seconds because what it also does is

00:19:53,919 --> 00:20:00,490
after boxes started it configures

00:19:55,980 --> 00:20:05,259
openshift and so that you're ready to

00:20:00,490 --> 00:20:07,600
start working with open shift right now

00:20:05,259 --> 00:20:11,440
it's yeah it's running the registration

00:20:07,600 --> 00:20:14,769
plugin and I told you about that that

00:20:11,440 --> 00:20:17,490
registers on the Internet to the redhead

00:20:14,769 --> 00:20:17,490
customer portal

00:20:38,040 --> 00:20:45,210
okay taking a little bit way too long

00:20:42,120 --> 00:20:47,900
maybe problems with the internet

00:20:45,210 --> 00:20:47,900
connection

00:21:08,769 --> 00:21:16,850
yeah so if this worked I don't know if

00:21:14,120 --> 00:21:24,649
it still go finish the restoration or

00:21:16,850 --> 00:21:26,570
not but once that's done okay now it's

00:21:24,649 --> 00:21:29,649
just a couple of seconds that was the

00:21:26,570 --> 00:21:29,649
button like right now

00:21:34,340 --> 00:21:41,960
okay so now it started now is created

00:21:37,279 --> 00:21:47,150
the cdk dr. connection here that uses

00:21:41,960 --> 00:21:49,909
the cdk box and here like with any other

00:21:47,150 --> 00:21:54,260
doctor you have you have images you can

00:21:49,909 --> 00:21:57,350
have containers around them but you can

00:21:54,260 --> 00:22:00,980
see something different here that here

00:21:57,350 --> 00:22:03,169
the images were just the repository name

00:22:00,980 --> 00:22:07,690
and then the name of the image but here

00:22:03,169 --> 00:22:11,799
also have the whole path to the registry

00:22:07,690 --> 00:22:14,510
because here you have you have red hat

00:22:11,799 --> 00:22:17,659
registry but also you can use the

00:22:14,510 --> 00:22:21,350
regular dr dot io registry for all the

00:22:17,659 --> 00:22:24,950
images that are available publicly ok so

00:22:21,350 --> 00:22:26,929
this is where I hand it over to Marion

00:22:24,950 --> 00:22:29,830
who will show a little bit about

00:22:26,929 --> 00:22:29,830
openshift

00:23:27,980 --> 00:23:34,860
okay i will continue martin finished

00:23:31,580 --> 00:23:37,740
openshift free is ready to platform as a

00:23:34,860 --> 00:23:39,750
service it's built upon the current

00:23:37,740 --> 00:23:41,100
coburn tease docker provides containers

00:23:39,750 --> 00:23:44,070
and Cooper aunties provides

00:23:41,100 --> 00:23:46,890
orchestration what approach if ads it's

00:23:44,070 --> 00:23:49,260
all screws minute sir sorry source code

00:23:46,890 --> 00:23:54,570
management builds deployments striking

00:23:49,260 --> 00:23:56,490
katstra o cdk probably by red head of

00:23:54,570 --> 00:24:00,210
the contents and opposite instance for

00:23:56,490 --> 00:24:04,950
local development now let's get to demo

00:24:00,210 --> 00:24:06,870
a smart invention to speak a server

00:24:04,950 --> 00:24:12,480
adapter creates and you open ship the

00:24:06,870 --> 00:24:18,120
connection for tested meal in open

00:24:12,480 --> 00:24:20,640
should explore you can see under a bunch

00:24:18,120 --> 00:24:24,270
of connection its projects and every

00:24:20,640 --> 00:24:27,030
project contains services or other open

00:24:24,270 --> 00:24:30,570
sources are located in properties view

00:24:27,030 --> 00:24:35,270
for example you can check what kind of

00:24:30,570 --> 00:24:35,270
boats are running on openshift etc Oh

00:24:35,480 --> 00:24:40,950
many of open sea resources come from

00:24:37,770 --> 00:24:43,140
other link technologies for example

00:24:40,950 --> 00:24:46,070
bottle from to burnet is so there are in

00:24:43,140 --> 00:24:51,930
each stream so what are private to

00:24:46,070 --> 00:24:54,800
registry for poker images etc well to

00:24:51,930 --> 00:24:58,250
create a new application what select

00:24:54,800 --> 00:25:01,260
application context manager Sam Mele oh

00:24:58,250 --> 00:25:03,440
we can create a new project for this

00:25:01,260 --> 00:25:03,440
application

00:25:11,490 --> 00:25:17,190
well project name is idea of the project

00:25:13,980 --> 00:25:20,250
and this planning is so language is

00:25:17,190 --> 00:25:25,260
displayed under open check the

00:25:20,250 --> 00:25:27,030
connection hope we shall exploit we can

00:25:25,260 --> 00:25:32,070
select either from server templates or

00:25:27,030 --> 00:25:35,070
all two templates let's use ap 6.4 basic

00:25:32,070 --> 00:25:40,440
source doing it in play so we just look

00:25:35,070 --> 00:25:42,000
at it already cdk on next wizard page we

00:25:40,440 --> 00:25:44,600
have some template parameters for

00:25:42,000 --> 00:25:49,770
example at the cache line or source

00:25:44,600 --> 00:25:51,540
source code the repository their source

00:25:49,770 --> 00:25:58,620
code for building a new application is

00:25:51,540 --> 00:26:01,530
used Oh branch etc we can also add or

00:25:58,620 --> 00:26:03,420
remove some labels libraries to group

00:26:01,530 --> 00:26:06,030
opposite resources we can manage

00:26:03,420 --> 00:26:10,970
operator sources more easily with those

00:26:06,030 --> 00:26:10,970
eyeballs for example ring them ready and

00:26:11,120 --> 00:26:15,390
so once you hit finish button a good

00:26:14,100 --> 00:26:17,100
corrosion application summary which

00:26:15,390 --> 00:26:18,690
should totally do what opportunity

00:26:17,100 --> 00:26:20,910
sources have been created whether there

00:26:18,690 --> 00:26:23,940
were some complications or some

00:26:20,910 --> 00:26:26,360
resources were not created because of

00:26:23,940 --> 00:26:26,360
some errors

00:26:30,370 --> 00:26:36,760
for Disney application i use the kitchen

00:26:32,950 --> 00:26:40,170
sink example as which is located in

00:26:36,760 --> 00:26:45,400
jboss epic quick starts repository oh

00:26:40,170 --> 00:26:48,160
and it's oh well repository is clone

00:26:45,400 --> 00:26:52,090
totally and the specific example is

00:26:48,160 --> 00:26:54,280
imported to work space Oh once

00:26:52,090 --> 00:27:06,100
application process has started you can

00:26:54,280 --> 00:27:08,650
see oh it's built or built for both

00:27:06,100 --> 00:27:10,780
creates at first dr. me choca

00:27:08,650 --> 00:27:15,070
application then this image is pushed to

00:27:10,780 --> 00:27:17,530
local mitchell repository registry and

00:27:15,070 --> 00:27:21,160
then new application poti security door

00:27:17,530 --> 00:27:27,420
application is running well we can check

00:27:21,160 --> 00:27:29,740
pots blocks it takes some time till

00:27:27,420 --> 00:27:31,990
application which is built because it

00:27:29,740 --> 00:27:34,750
down on some level dependencies and so

00:27:31,990 --> 00:27:40,840
then create image and push it to local

00:27:34,750 --> 00:27:45,429
repository to be able to see this locks

00:27:40,840 --> 00:27:51,670
you have to have set OC binary or just

00:27:45,429 --> 00:27:55,480
open shift to so command-line interface

00:27:51,670 --> 00:27:58,170
or binary two or so or to work before

00:27:55,480 --> 00:27:58,170
project server

00:28:00,230 --> 00:28:08,150
which is all containing all project our

00:28:03,390 --> 00:28:08,150
preference page involvement preferences

00:28:09,560 --> 00:28:16,700
this binary is also required for server

00:28:12,660 --> 00:28:25,380
adapter which will be used to publish

00:28:16,700 --> 00:28:28,170
source code okay which was successfully

00:28:25,380 --> 00:28:31,110
built and pushed now there is an

00:28:28,170 --> 00:28:38,820
application pole or application but we

00:28:31,110 --> 00:28:44,490
can check work and see that the server

00:28:38,820 --> 00:28:47,880
has started and it's running oh we can

00:28:44,490 --> 00:28:50,610
then show application in browser or

00:28:47,880 --> 00:28:54,060
there is a gun show in the browser for

00:28:50,610 --> 00:28:57,450
services and projects and you can see

00:28:54,060 --> 00:28:59,610
it's running but mostly when you are

00:28:57,450 --> 00:29:01,410
developing your application so you want

00:28:59,610 --> 00:29:03,750
to also change source code and push

00:29:01,410 --> 00:29:06,720
changes so back to server and see it's

00:29:03,750 --> 00:29:09,950
or change so let's carry it server

00:29:06,720 --> 00:29:09,950
adapter for open shift

00:29:19,530 --> 00:29:24,200
but select auto ship free server adapter

00:29:25,190 --> 00:29:39,260
we are using connection for cdk and not

00:29:34,520 --> 00:29:42,570
here we are we have to knock all cool

00:29:39,260 --> 00:29:45,350
project in workspace all to remote

00:29:42,570 --> 00:29:45,350
service

00:29:52,669 --> 00:29:57,980
once we server adapter can also show

00:29:55,399 --> 00:30:06,190
application we are server adept in web

00:29:57,980 --> 00:30:06,190
browser okay let's change some co

00:30:24,570 --> 00:30:37,279
and once come change is so done we can

00:30:29,130 --> 00:30:37,279
publish it to open shift this is

00:30:37,789 --> 00:30:44,309
possible thanks to our sink remote so

00:30:41,190 --> 00:30:49,460
think it could be so local fast to a

00:30:44,309 --> 00:30:49,460
remote open shift and it's really fast

00:30:49,789 --> 00:30:57,870
and now application should be changed

00:30:54,679 --> 00:31:03,690
well there's also an integration with

00:30:57,870 --> 00:31:06,179
like 30 so so we will be you won't have

00:31:03,690 --> 00:31:10,610
to every time when you will refresh your

00:31:06,179 --> 00:31:12,990
browser was fast i'll change the browser

00:31:10,610 --> 00:31:15,350
finds out it's changed and ultimately

00:31:12,990 --> 00:31:15,350
refresh

00:31:37,530 --> 00:31:43,200
and it's automatically changed also on

00:31:40,860 --> 00:31:45,480
server side once you all set up your

00:31:43,200 --> 00:31:48,450
server adapter and to publish first

00:31:45,480 --> 00:31:51,840
change or we are publishing server

00:31:48,450 --> 00:31:53,700
adapter using cars inc or alcohol so

00:31:51,840 --> 00:31:56,840
when they are changed are automatically

00:31:53,700 --> 00:31:56,840
publish to sponsor

00:32:04,960 --> 00:32:20,180
okay that's all from opposite side so we

00:32:15,320 --> 00:32:23,150
saw today or containers in eclipse which

00:32:20,180 --> 00:32:27,950
Martin said something about in our

00:32:23,150 --> 00:32:30,860
docker to link 0 0 then we had to see

00:32:27,950 --> 00:32:37,700
decay which contains open shift and the

00:32:30,860 --> 00:32:39,250
credit etc and so well finally I show

00:32:37,700 --> 00:32:41,300
you how to create a new application

00:32:39,250 --> 00:32:49,480
enjoyable double / studio before

00:32:41,300 --> 00:32:49,480
projectors do you have any question

00:33:00,590 --> 00:33:16,470
well if somebody adequate yes I in a

00:33:14,100 --> 00:33:21,809
demo you have changed the static HTML

00:33:16,470 --> 00:33:24,750
file as I saw it you have changed in a

00:33:21,809 --> 00:33:27,330
demo show that you change static file

00:33:24,750 --> 00:33:31,049
HTML and then you refresh the page and

00:33:27,330 --> 00:33:33,450
it all change that's pretty cool but how

00:33:31,049 --> 00:33:36,240
the process would work if I were to

00:33:33,450 --> 00:33:39,330
change some more sophisticated source

00:33:36,240 --> 00:33:43,220
code with your automation recompile

00:33:39,330 --> 00:33:46,320
redeploy restart the server possibly and

00:33:43,220 --> 00:33:49,769
handle all the stuff like that well at

00:33:46,320 --> 00:33:51,690
the moment only static files are

00:33:49,769 --> 00:33:54,360
possible to change and automatically

00:33:51,690 --> 00:33:57,980
have it refreshed on server side because

00:33:54,360 --> 00:34:01,230
to change java classes and or have it to

00:33:57,980 --> 00:34:04,620
synchronize with server errors debugging

00:34:01,230 --> 00:34:06,210
kong server side and more stuff but at

00:34:04,620 --> 00:34:08,399
the moment we don't have it in a blink

00:34:06,210 --> 00:34:11,220
it's more like experimental at the

00:34:08,399 --> 00:34:14,300
moment and they would like to see how it

00:34:11,220 --> 00:34:20,820
works and works out more stuff to it

00:34:14,300 --> 00:34:29,760
okay thank you anybody else wants a

00:34:20,820 --> 00:34:37,639
scarf okay so there are no more

00:34:29,760 --> 00:34:37,639
questions then this is this is thank you

00:35:12,950 --> 00:35:16,130
go figure

00:35:40,130 --> 00:35:43,340
acd gate

00:36:36,440 --> 00:36:55,310
my citation area take a video

00:37:17,590 --> 00:37:21,070
the group's help

00:37:23,400 --> 00:37:39,240
likes it listen position synthesis yeah

00:37:33,250 --> 00:37:43,150
I mean I can talk to the videos okay I

00:37:39,240 --> 00:37:46,859
was pissing out of metro station using a

00:37:43,150 --> 00:37:46,859
transition is gone for I am it's like

00:37:49,170 --> 00:37:54,100
Ruby aspect ratio this is an episode on

00:37:51,790 --> 00:37:57,220
over we almost some company there's two

00:37:54,100 --> 00:38:01,810
the receptacles are necessary coo coo

00:37:57,220 --> 00:38:03,910
coo Hostos Community College shaking

00:38:01,810 --> 00:38:07,390
Ricky tech device in the ESP for a

00:38:03,910 --> 00:38:11,100
second Santa Ana poses otosclerosis the

00:38:07,390 --> 00:38:11,100
kick to contact deposit

00:39:18,770 --> 00:39:35,150
hit that curtain yes this is how the

00:39:23,539 --> 00:39:35,150
Baltic phenomenal

00:45:17,839 --> 00:45:19,900

YouTube URL: https://www.youtube.com/watch?v=5cUaf5P46GM


