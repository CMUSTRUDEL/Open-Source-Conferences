Title: Getting to Know Fedora Silverblue
Publication date: 2019-10-02
Playlist: DevConfUS 2019
Description: 
	Speaker: Micah Abbott

Fedora Silverblue is a variant of Fedora Workstation powered by rpm-ostree, Flatpak, and container technology. It provides fearless, transactional upgrades of your OS and a clear separation of your host and applications, but still maintains the ability to customize your host as you see fit. Would you like to learn more?

This talk will discuss the background of Fedora Silverblue and its supporting technologies, while performing live demonstrations of the OS. I'll show you how to get up and running with Flatpaks, what it looks like to build and run containers using podman, and how to customize the base OS using package layering. I'll demonstrate the automatic OS update capabilities and how you can switch to a completely different ostree-based operating system.
Captions: 
	00:00:03,360 --> 00:00:09,269
everybody my name is Micah Abbott I work

00:00:06,809 --> 00:00:12,480
at Red Hat on the Red Hat core OS

00:00:09,269 --> 00:00:14,660
project I'm gonna talk about Fedora

00:00:12,480 --> 00:00:17,250
silver blue this is gonna be a very

00:00:14,660 --> 00:00:18,929
general overview for folks who have

00:00:17,250 --> 00:00:21,089
never seen it before and never heard

00:00:18,929 --> 00:00:23,429
about before you should come away with a

00:00:21,089 --> 00:00:26,659
better idea of what it is what kind of

00:00:23,429 --> 00:00:29,640
technologies go into it and why it's

00:00:26,659 --> 00:00:32,910
better than four-door workstation in my

00:00:29,640 --> 00:00:34,859
opinion so who was actually heard of

00:00:32,910 --> 00:00:38,850
Fedora will move forth who's actually

00:00:34,859 --> 00:00:41,190
using it okay good

00:00:38,850 --> 00:00:43,109
some of the technology behind Everleigh

00:00:41,190 --> 00:00:44,809
is like OS tree and RPM illustrate

00:00:43,109 --> 00:00:48,750
anybody use that heard of that

00:00:44,809 --> 00:00:50,850
containers flat packs alright great so

00:00:48,750 --> 00:00:53,670
let's start with just the basics what's

00:00:50,850 --> 00:00:54,929
silver blue it's part of fedora it's

00:00:53,670 --> 00:00:56,850
officially recognized officially

00:00:54,929 --> 00:01:01,530
supported by the Fedora community and

00:00:56,850 --> 00:01:03,659
the Fedora project Council use the same

00:01:01,530 --> 00:01:06,150
rpms that Fedora produces for all their

00:01:03,659 --> 00:01:08,970
other distributions workstation and

00:01:06,150 --> 00:01:10,800
server whatnot they usually look

00:01:08,970 --> 00:01:13,440
utilized as containers very heavily for

00:01:10,800 --> 00:01:16,350
sandbox sandbox in your applications off

00:01:13,440 --> 00:01:18,780
the host flat packs as well as a way to

00:01:16,350 --> 00:01:21,420
distribute your GUI applications in a

00:01:18,780 --> 00:01:23,430
container format it's also an immutable

00:01:21,420 --> 00:01:24,680
host I'll get into little more details

00:01:23,430 --> 00:01:27,780
about that

00:01:24,680 --> 00:01:29,220
and it could be the future I'm living

00:01:27,780 --> 00:01:36,180
the future right now just like Doc and

00:01:29,220 --> 00:01:39,060
the brownness so immutable host I made

00:01:36,180 --> 00:01:40,500
up this this quote by myself it's where

00:01:39,060 --> 00:01:42,390
the OS has delivered in such a way where

00:01:40,500 --> 00:01:44,400
modification is not expected with an

00:01:42,390 --> 00:01:47,850
asterisk because there are ways you can

00:01:44,400 --> 00:01:52,350
modify the OS but generally it's treated

00:01:47,850 --> 00:01:55,970
as a immutable object so in the server

00:01:52,350 --> 00:01:58,440
world this the immutable host is is

00:01:55,970 --> 00:02:01,230
commonly has may have been referred to

00:01:58,440 --> 00:02:04,260
as you've heard of cattle or the new

00:02:01,230 --> 00:02:07,290
paradigm is elephants they're disposable

00:02:04,260 --> 00:02:10,820
hosts we can recreate them easily

00:02:07,290 --> 00:02:12,750
because it's a fixed fixed image

00:02:10,820 --> 00:02:15,300
delivered it as an image or image like

00:02:12,750 --> 00:02:17,490
format previously we've seen

00:02:15,300 --> 00:02:20,400
things like sodon't sent OS fedora and

00:02:17,490 --> 00:02:24,510
red hair tonic host container linux from

00:02:20,400 --> 00:02:26,910
the core OS guys and then endless OS now

00:02:24,510 --> 00:02:30,810
why would we want this on the desktop

00:02:26,910 --> 00:02:32,730
well having an immutable host we get we

00:02:30,810 --> 00:02:36,420
gain things like better security because

00:02:32,730 --> 00:02:39,900
we can't easily touch the actual OS fits

00:02:36,420 --> 00:02:42,450
on the on the host in the case of atomic

00:02:39,900 --> 00:02:46,290
sorry silver blue and other OS tree

00:02:42,450 --> 00:02:48,270
based systems the way the updates the OS

00:02:46,290 --> 00:02:51,060
is delivered is transactional so you

00:02:48,270 --> 00:02:52,710
have safer upgrades I'll get into all

00:02:51,060 --> 00:02:56,850
these details looking a little further

00:02:52,710 --> 00:03:00,210
along so let's talk about how silver go

00:02:56,850 --> 00:03:02,040
is similar to workstation as I said

00:03:00,210 --> 00:03:04,530
earlier they will share the same for

00:03:02,040 --> 00:03:06,870
rpms from for the door ecosystem so you

00:03:04,530 --> 00:03:08,460
don't need any new special package

00:03:06,870 --> 00:03:11,580
format or anything our pins work just

00:03:08,460 --> 00:03:14,220
fine you can install rpms on Fedora

00:03:11,580 --> 00:03:16,590
silver-blue slightly differently than

00:03:14,220 --> 00:03:19,250
you would on workstation and both can

00:03:16,590 --> 00:03:21,450
run containers and flat packs

00:03:19,250 --> 00:03:24,750
differences start to show up in the

00:03:21,450 --> 00:03:28,170
filesystem unit ability so silver blue

00:03:24,750 --> 00:03:30,870
only bar and et Cie are writable why is

00:03:28,170 --> 00:03:32,850
this important well here's an example of

00:03:30,870 --> 00:03:36,930
why a mutable

00:03:32,850 --> 00:03:38,820
/user partition or our part of the

00:03:36,930 --> 00:03:42,060
filesystem would be bad it's is a

00:03:38,820 --> 00:03:44,850
screenshot I grabbed from a Installer

00:03:42,060 --> 00:03:47,880
for it Nvidia drivers I believe there is

00:03:44,850 --> 00:03:51,989
a one character error the space between

00:03:47,880 --> 00:03:54,860
slash user and /lib so it nukes your

00:03:51,989 --> 00:03:58,440
entire user partition which is very bad

00:03:54,860 --> 00:04:00,510
if we ran this script again silver-blue

00:03:58,440 --> 00:04:05,220
it would just fail to run because slash

00:04:00,510 --> 00:04:06,660
user is immutable silver blue has a

00:04:05,220 --> 00:04:11,070
different upgrade mechanism than

00:04:06,660 --> 00:04:14,790
workstation we have support for it

00:04:11,070 --> 00:04:17,790
atomic transactional updates via OS tree

00:04:14,790 --> 00:04:19,859
and rpms tree and during this upgrade

00:04:17,790 --> 00:04:23,130
process your running system is not

00:04:19,859 --> 00:04:25,130
touched so if something goes wrong you

00:04:23,130 --> 00:04:27,290
can it your

00:04:25,130 --> 00:04:29,030
existing deployment it's still

00:04:27,290 --> 00:04:32,750
functional and you don't have to reboot

00:04:29,030 --> 00:04:36,050
to try to bail out of the error it's so

00:04:32,750 --> 00:04:37,520
it's it's really so rugged that you can

00:04:36,050 --> 00:04:39,560
actually pull the power on a silver blue

00:04:37,520 --> 00:04:42,560
host and you can recover just by

00:04:39,560 --> 00:04:44,870
rebooting the trade-off being that to

00:04:42,560 --> 00:04:48,710
get into your upgraded version of the OS

00:04:44,870 --> 00:04:51,470
you do need to reboot the host why is

00:04:48,710 --> 00:04:54,950
this good well here's another screenshot

00:04:51,470 --> 00:04:57,500
I grabbed off Adam Williamson he's a his

00:04:54,950 --> 00:05:00,410
blog he's a fedora QA engineer and he

00:04:57,500 --> 00:05:02,510
talks about how and I think was fedora

00:05:00,410 --> 00:05:06,820
fedora 24 released there was an upgrade

00:05:02,510 --> 00:05:09,800
DNF problem where if you had a certain

00:05:06,820 --> 00:05:11,690
hybrid GPU on your system and you

00:05:09,800 --> 00:05:13,130
upgraded from the desktop it would crash

00:05:11,690 --> 00:05:17,030
X and then you wouldn't be able to get

00:05:13,130 --> 00:05:20,060
back into your X session and it's that

00:05:17,030 --> 00:05:22,400
kind of shows how when upgrades are

00:05:20,060 --> 00:05:24,550
touching your running system bad things

00:05:22,400 --> 00:05:26,600
can happen

00:05:24,550 --> 00:05:29,180
the upgrades are also delivered

00:05:26,600 --> 00:05:30,770
differently so workstation uses rpms if

00:05:29,180 --> 00:05:32,240
you are done a DNF upgrade you know that

00:05:30,770 --> 00:05:35,180
it's just pulling down rpms from here

00:05:32,240 --> 00:05:37,730
your D&F repo silver-blue delivers the

00:05:35,180 --> 00:05:40,550
up the upgrades and the OS itself the OS

00:05:37,730 --> 00:05:43,880
tree commits I know and like I said

00:05:40,550 --> 00:05:47,750
earlier both can install packages as RPM

00:05:43,880 --> 00:05:51,140
so so loose sort of threads in you'll

00:05:47,750 --> 00:05:53,990
between both of those in terms of can

00:05:51,140 --> 00:05:56,930
support rpms but mostly OS is delivered

00:05:53,990 --> 00:06:01,030
through it OS true commit so what is the

00:05:56,930 --> 00:06:03,050
history in our pmos tree so history is

00:06:01,030 --> 00:06:04,490
can be simplified as gift for an

00:06:03,050 --> 00:06:07,790
operating system or get for a file

00:06:04,490 --> 00:06:10,280
system you can you basically can write

00:06:07,790 --> 00:06:12,710
out a file system check it into an OS

00:06:10,280 --> 00:06:14,780
tree repo and then check out that that

00:06:12,710 --> 00:06:17,540
commits in a new file system tree

00:06:14,780 --> 00:06:19,250
somewhere the files have chucked some

00:06:17,540 --> 00:06:22,130
attracted a content addressable object

00:06:19,250 --> 00:06:23,180
store you do get through hard links it

00:06:22,130 --> 00:06:26,150
also handles the bootloader

00:06:23,180 --> 00:06:28,220
configuration and management of /e TC

00:06:26,150 --> 00:06:30,620
when you're when you're doing upgrades

00:06:28,220 --> 00:06:31,970
so if you have one version of a config

00:06:30,620 --> 00:06:34,310
file a TTC and there's a new version

00:06:31,970 --> 00:06:36,020
coming in as well as modifications you

00:06:34,310 --> 00:06:36,770
made there's a three great merge process

00:06:36,020 --> 00:06:41,180
that happens

00:06:36,770 --> 00:06:44,180
so everything is happy so rpm OS tree

00:06:41,180 --> 00:06:46,970
from the documentation is hybrid image

00:06:44,180 --> 00:06:49,900
package system it uses libo astray under

00:06:46,970 --> 00:06:49,900
these the covers to

00:06:50,050 --> 00:06:56,720
track the RPMs that are going into the

00:06:52,699 --> 00:06:58,220
compose the RPMs are consumed on the

00:06:56,720 --> 00:07:00,979
Surfside when you're making the OS tree

00:06:58,220 --> 00:07:02,870
commit list recompose and then unless

00:07:00,979 --> 00:07:05,900
the client side as well when you want to

00:07:02,870 --> 00:07:09,860
install packages our p MOS tree is also

00:07:05,900 --> 00:07:11,389
a CLI binary so you can that is the

00:07:09,860 --> 00:07:15,620
primary entry point for how you would

00:07:11,389 --> 00:07:17,270
manage your OS I'll show you some live

00:07:15,620 --> 00:07:18,409
demos in a little bit we'll start with

00:07:17,270 --> 00:07:20,990
this one

00:07:18,409 --> 00:07:22,460
so our PMO history status that will give

00:07:20,990 --> 00:07:25,190
you the status of the deed the RPM Allah

00:07:22,460 --> 00:07:26,979
street demon whether or not you have

00:07:25,190 --> 00:07:28,639
automatic upgrades configured

00:07:26,979 --> 00:07:31,039
information about the deployment like

00:07:28,639 --> 00:07:33,139
versions commit some check sums keep

00:07:31,039 --> 00:07:35,060
issue signatures and I can also report

00:07:33,139 --> 00:07:38,569
security advisories that have been

00:07:35,060 --> 00:07:44,419
discussed in a new version so here we go

00:07:38,569 --> 00:07:47,569
let's do it live so I already see that

00:07:44,419 --> 00:07:49,729
so there's I have this is a VM I've got

00:07:47,569 --> 00:07:52,719
booted up on my system everybody see

00:07:49,729 --> 00:08:01,219
that ok bigger please

00:07:52,719 --> 00:08:08,090
say when thanks thanks Tim put on your

00:08:01,219 --> 00:08:10,880
glasses so this is a like I said VM that

00:08:08,090 --> 00:08:13,430
I booted has a single deployment it's

00:08:10,880 --> 00:08:15,319
got an old version of silver blue it's

00:08:13,430 --> 00:08:17,840
for a log a second you can see there's a

00:08:15,319 --> 00:08:19,340
commit some attached to it it's been

00:08:17,840 --> 00:08:25,840
signed the commit itself has been signed

00:08:19,340 --> 00:08:29,199
by the Fedora release key if I upgrade

00:08:25,840 --> 00:08:29,199
hopefully this works

00:08:33,279 --> 00:08:39,250
we'll see that it's pointed out the new

00:08:37,269 --> 00:08:41,139
odd new file objects from the commit

00:08:39,250 --> 00:08:44,079
writing them in write them into the new

00:08:41,139 --> 00:08:46,420
deployment write my running system is

00:08:44,079 --> 00:08:48,459
still perfectly functional if I want you

00:08:46,420 --> 00:08:50,740
I get hard reset that VM right now but

00:08:48,459 --> 00:08:54,639
I'm not I don't wanna live dangerously

00:08:50,740 --> 00:08:58,750
right now and afterwards that prints out

00:08:54,639 --> 00:09:02,709
a big summary of all the packages that

00:08:58,750 --> 00:09:04,360
changed what have been upgraded any

00:09:02,709 --> 00:09:07,329
patches have been added or removes or

00:09:04,360 --> 00:09:11,620
even downgraded if we do our panelist

00:09:07,329 --> 00:09:13,449
tree status - hey you should see all

00:09:11,620 --> 00:09:16,329
right I don't have package layers that's

00:09:13,449 --> 00:09:17,769
why I was thing well if I had prepped

00:09:16,329 --> 00:09:20,649
this demo correctly you have seen all

00:09:17,769 --> 00:09:24,639
the CDs that have fixed in this in this

00:09:20,649 --> 00:09:27,339
new version so but as you can see the

00:09:24,639 --> 00:09:29,589
the dot here on the bottom one only

00:09:27,339 --> 00:09:31,839
bring it up a little bit indicates this

00:09:29,589 --> 00:09:34,720
is the version I'm still booted into the

00:09:31,839 --> 00:09:37,449
new version is staged at the top that's

00:09:34,720 --> 00:09:40,259
the next one oh we I'll reboot into so

00:09:37,449 --> 00:09:40,259
if I just do

00:09:44,269 --> 00:09:53,809
start the reboot process wait for it to

00:09:50,269 --> 00:09:58,309
come back up over here you can see this

00:09:53,809 --> 00:09:59,929
is what the VM is doing looks like a

00:09:58,309 --> 00:10:02,089
normal Fedora install there's nothing

00:09:59,929 --> 00:10:04,040
special about it like I said it still

00:10:02,089 --> 00:10:06,759
uses I mean we still installed via

00:10:04,040 --> 00:10:10,189
anaconda so we have ISO that install

00:10:06,759 --> 00:10:13,189
just fine this is the same no interface

00:10:10,189 --> 00:10:20,119
I'm just using the the CL eyes since

00:10:13,189 --> 00:10:21,559
it's easier to demonstrate right now and

00:10:20,119 --> 00:10:25,779
now you can see I booted into the new

00:10:21,559 --> 00:10:30,079
version and everything works fine so

00:10:25,779 --> 00:10:35,779
back to the slides so I showed you

00:10:30,079 --> 00:10:37,220
upgrade during the upgrade process you

00:10:35,779 --> 00:10:38,779
can actually commit you actually

00:10:37,220 --> 00:10:40,399
combined package layering operations the

00:10:38,779 --> 00:10:42,619
package layering is what we referred to

00:10:40,399 --> 00:10:45,319
as when you're installing a package on

00:10:42,619 --> 00:10:47,209
top of the base OS or moving packages

00:10:45,319 --> 00:10:49,869
from the base OS or overwriting packages

00:10:47,209 --> 00:10:52,549
I'll show you those commands as well I

00:10:49,869 --> 00:10:54,319
showed you how the system is left

00:10:52,549 --> 00:10:56,619
unchanged remain in the old boot old

00:10:54,319 --> 00:11:00,529
deployment until you reboot

00:10:56,619 --> 00:11:01,939
if the upgrades bad so if I want to go

00:11:00,529 --> 00:11:04,939
back to the previous version for some

00:11:01,939 --> 00:11:08,149
reason I can just use our PMO scroll

00:11:04,939 --> 00:11:09,889
back and a little reorder the boot boot

00:11:08,149 --> 00:11:12,679
entries and when I reboot I get into the

00:11:09,889 --> 00:11:14,990
previous version it will actually print

00:11:12,679 --> 00:11:18,170
out the differences as well if for some

00:11:14,990 --> 00:11:19,459
reason you can't get to our p.m. list

00:11:18,170 --> 00:11:21,259
your whole back rollback but you can

00:11:19,459 --> 00:11:23,600
access the grub man you can just pick

00:11:21,259 --> 00:11:28,790
the old version in the chrome menu and

00:11:23,600 --> 00:11:33,040
try to recover from that point so since

00:11:28,790 --> 00:11:36,620
I promised you a demo

00:11:33,040 --> 00:11:39,830
we're just gonna do a rollback shows

00:11:36,620 --> 00:11:45,980
that we're moving moving back to the

00:11:39,830 --> 00:11:49,070
previous commit on the system prints out

00:11:45,980 --> 00:11:52,210
the changes so you can see the packages

00:11:49,070 --> 00:11:52,210
that were added have been removed

00:11:53,170 --> 00:12:04,010
packages that were previously upgraded

00:11:55,460 --> 00:12:12,440
have been downgraded reboot to get back

00:12:04,010 --> 00:12:13,610
in one of the cool things about our

00:12:12,440 --> 00:12:16,670
PMO's tree is that you can actually

00:12:13,610 --> 00:12:18,740
switch major version so if you're in the

00:12:16,670 --> 00:12:22,160
workstations scenario when you are to go

00:12:18,740 --> 00:12:24,440
from Fedora 30 to 31 or 28 to 29 cetera

00:12:22,160 --> 00:12:25,910
it's like a DNF system upgrade or

00:12:24,440 --> 00:12:28,790
whatever the command is I haven't used

00:12:25,910 --> 00:12:32,300
in such a long time here it's we use a

00:12:28,790 --> 00:12:34,340
rebase operation has similar mechanics

00:12:32,300 --> 00:12:36,980
it's checking out the new deployment

00:12:34,340 --> 00:12:39,830
doesn't touch your running system is

00:12:36,980 --> 00:12:42,350
completely safe allows you to like test

00:12:39,830 --> 00:12:43,820
and reproduce on older versions so if

00:12:42,350 --> 00:12:47,330
I'm running for 2 or 30 but someone's

00:12:43,820 --> 00:12:49,130
just some reasoning is using foot or 29

00:12:47,330 --> 00:12:51,470
I could actually boot into Fedora 29

00:12:49,130 --> 00:12:53,990
maybe test test out that package test

00:12:51,470 --> 00:12:59,870
out that bug I could also change out the

00:12:53,990 --> 00:13:02,180
entire OS so if you want to really live

00:12:59,870 --> 00:13:05,350
dangerously and switch from Fedora

00:13:02,180 --> 00:13:08,810
atomic Fedora Labuan run say sent to us

00:13:05,350 --> 00:13:11,330
atomic host because they're both OS both

00:13:08,810 --> 00:13:14,750
OS tree based systems we can support

00:13:11,330 --> 00:13:17,230
this this one's going to take this one

00:13:14,750 --> 00:13:17,230
could take some time

00:13:20,700 --> 00:13:25,730
I don't have in my command history all

00:13:22,950 --> 00:13:25,730
right let's see

00:13:32,980 --> 00:13:37,430
so I have I know it's true remote can

00:13:35,510 --> 00:13:38,480
figure out my host I'm trying to I want

00:13:37,430 --> 00:13:40,579
to show you how I'm going to rebase to a

00:13:38,480 --> 00:13:44,390
sent to us this deployment

00:13:40,579 --> 00:13:47,630
so I've queried the OST remote you can

00:13:44,390 --> 00:13:51,050
see and I have the silver blue ref spec

00:13:47,630 --> 00:13:55,000
and an atomic host respect so I can do

00:13:51,050 --> 00:13:55,000
sudo RP loss tree

00:14:01,080 --> 00:14:09,870
right yeah not commit signed by the sent

00:14:06,660 --> 00:14:12,980
to us gbgt so I I missed that part of

00:14:09,870 --> 00:14:21,720
the demo as well no this is not really

00:14:12,980 --> 00:14:23,459
okay well do it packaged Larry so in my

00:14:21,720 --> 00:14:25,230
opinion package layering is sort of like

00:14:23,459 --> 00:14:27,180
the last resort you want to try to

00:14:25,230 --> 00:14:28,260
package your applications and containers

00:14:27,180 --> 00:14:30,750
or flat packs

00:14:28,260 --> 00:14:33,089
however there cases where you can't do

00:14:30,750 --> 00:14:35,339
that like for example libvirt you want

00:14:33,089 --> 00:14:37,890
to have on the host because it's in the

00:14:35,339 --> 00:14:43,410
post extension PSC but I think is a hard

00:14:37,890 --> 00:14:45,959
reading program for key cards but I have

00:14:43,410 --> 00:14:47,670
used it so when you do this the packet

00:14:45,959 --> 00:14:49,740
package layering operations it actually

00:14:47,670 --> 00:14:53,010
creates a new OS tree commit that has

00:14:49,740 --> 00:15:02,010
the changes based on the base OS commit

00:14:53,010 --> 00:15:03,959
that you have currently replaced and any

00:15:02,010 --> 00:15:06,570
changes you you make to that base OS

00:15:03,959 --> 00:15:10,440
through package layering operations are

00:15:06,570 --> 00:15:14,820
also tracked and can be upgraded during

00:15:10,440 --> 00:15:17,520
the entry process so yeah install and

00:15:14,820 --> 00:15:21,200
uninstall extending the OS replace and

00:15:17,520 --> 00:15:23,940
remove to mute to modify the base OS

00:15:21,200 --> 00:15:24,990
let's try another demo and see how it

00:15:23,940 --> 00:15:27,800
goes

00:15:24,990 --> 00:15:33,240
I'm gonna use something simple just

00:15:27,800 --> 00:15:36,209
install JQ so what's doing is it's

00:15:33,240 --> 00:15:39,930
actually creating a new tree it's going

00:15:36,209 --> 00:15:41,940
to get the same metadata we get from DNF

00:15:39,930 --> 00:15:45,240
repos on through our workstation and

00:15:41,940 --> 00:15:48,649
then download that RPM and install it as

00:15:45,240 --> 00:15:50,850
part of this package layering operation

00:15:48,649 --> 00:15:56,810
of course the slowest part is getting

00:15:50,850 --> 00:15:56,810
metadata cuz there's a ton of it

00:16:05,670 --> 00:16:09,120
that's gonna take forever so I'm just

00:16:07,320 --> 00:16:12,180
gonna try to move forward we can come

00:16:09,120 --> 00:16:15,089
back to that a little bit so containers

00:16:12,180 --> 00:16:17,910
container tools another big part of

00:16:15,089 --> 00:16:21,300
silver blue if you haven't heard

00:16:17,910 --> 00:16:24,000
containers or Linux this is a something

00:16:21,300 --> 00:16:26,100
that red has been drumming drumming

00:16:24,000 --> 00:16:30,510
they're making noise with their drum

00:16:26,100 --> 00:16:31,680
boat except for t-shirts exactly you

00:16:30,510 --> 00:16:36,360
might have seen some t-shirts around

00:16:31,680 --> 00:16:37,920
here so they you see groups and how many

00:16:36,360 --> 00:16:39,000
people if everything familiar with

00:16:37,920 --> 00:16:41,940
containers should I run through the

00:16:39,000 --> 00:16:43,560
basics of containers you don't know

00:16:41,940 --> 00:16:49,829
anything familiar to me I feel so bad

00:16:43,560 --> 00:16:51,930
for you if you were the newest the new

00:16:49,829 --> 00:16:53,459
tools that we have because we're going

00:16:51,930 --> 00:16:55,829
we're moving away from docker thanks to

00:16:53,459 --> 00:16:57,480
Dan's hard work and his team if you've

00:16:55,829 --> 00:17:00,209
been Dan Walsh's talks everything you're

00:16:57,480 --> 00:17:02,130
gonna see here is probably old news cuz

00:17:00,209 --> 00:17:07,230
he's covered it all we got

00:17:02,130 --> 00:17:09,329
build the pod man scope yo use build

00:17:07,230 --> 00:17:10,919
that to build our container images Padma

00:17:09,329 --> 00:17:14,549
to run and manage our containers as well

00:17:10,919 --> 00:17:16,380
as pods scope yo we can use to inspect a

00:17:14,549 --> 00:17:17,970
remote registries copy container ages

00:17:16,380 --> 00:17:21,240
between different storage formats and

00:17:17,970 --> 00:17:25,470
the new thing is toolbox which is a way

00:17:21,240 --> 00:17:27,089
which is a small shell program that is

00:17:25,470 --> 00:17:28,439
included with silver blue which allows

00:17:27,089 --> 00:17:30,030
you to create a pet container where you

00:17:28,439 --> 00:17:32,100
can install your tools that you use on

00:17:30,030 --> 00:17:33,090
day-to-day so think of it as you know a

00:17:32,100 --> 00:17:34,620
place where you can stall your

00:17:33,090 --> 00:17:37,260
development libraries your development

00:17:34,620 --> 00:17:39,150
tools GCC all that kind of stuff and it

00:17:37,260 --> 00:17:41,340
sticks around with the host unless you

00:17:39,150 --> 00:17:43,740
want to create a new one so this

00:17:41,340 --> 00:17:46,620
presents a new option for container

00:17:43,740 --> 00:17:51,440
developers where pod man's a little more

00:17:46,620 --> 00:17:51,440
attractive docker

00:17:56,519 --> 00:18:01,690
so if you've been in a a dance talks or

00:18:00,130 --> 00:18:04,149
any of the container teams talks

00:18:01,690 --> 00:18:06,250
recently you know that bill that you can

00:18:04,149 --> 00:18:10,750
build images using docker files you can

00:18:06,250 --> 00:18:12,480
use you can shell script it just install

00:18:10,750 --> 00:18:15,700
packages into a mounted container

00:18:12,480 --> 00:18:17,889
supports the different host GI formats

00:18:15,700 --> 00:18:19,029
I'm gonna go right back to this in DM to

00:18:17,889 --> 00:18:22,299
see if it actually worked

00:18:19,029 --> 00:18:24,429
yeah it did so going back to the package

00:18:22,299 --> 00:18:27,909
layering operation you can see the

00:18:24,429 --> 00:18:29,860
output the result it download the

00:18:27,909 --> 00:18:33,370
packages that installed it ran the the

00:18:29,860 --> 00:18:35,440
scripts safely in the background and we

00:18:33,370 --> 00:18:40,629
have the two packages added when we

00:18:35,440 --> 00:18:43,570
expect the output of our panelists or

00:18:40,629 --> 00:18:45,879
status you can see that running systems

00:18:43,570 --> 00:18:49,360
still unchanged if I tried ujq right now

00:18:45,879 --> 00:18:52,600
it's not there we have a layered package

00:18:49,360 --> 00:18:54,250
entry now showing that JQ is installed

00:18:52,600 --> 00:18:57,159
in the nude appointment so in order to

00:18:54,250 --> 00:18:58,179
get access to that I have to reboot it's

00:18:57,159 --> 00:19:03,330
the part of the trade off if you don't

00:18:58,179 --> 00:19:03,330
like it then workstation

00:19:05,580 --> 00:19:16,360
and while that reboots will go on with

00:19:07,960 --> 00:19:18,250
more container tools ya know so the

00:19:16,360 --> 00:19:22,030
question was if we did an upgrade after

00:19:18,250 --> 00:19:24,190
I did a the install of JQ would I have

00:19:22,030 --> 00:19:25,960
to read Jake you know that's track

00:19:24,190 --> 00:19:28,179
that's part of the the deployment so

00:19:25,960 --> 00:19:31,450
when you upgrade the jakey package would

00:19:28,179 --> 00:19:33,790
be would follow along the upgrade also

00:19:31,450 --> 00:19:42,929
be upgraded as well if there's upgrades

00:19:33,790 --> 00:19:42,929
avail wait I don't know sir I understand

00:19:48,780 --> 00:19:54,610
yes yeah so when you do it so the

00:19:51,549 --> 00:19:56,290
question was would Jake you would the

00:19:54,610 --> 00:19:58,210
layered package should be upgraded even

00:19:56,290 --> 00:20:00,059
if she didn't reboot yeah if you did in

00:19:58,210 --> 00:20:02,440
the heart PMO history upgrade that

00:20:00,059 --> 00:20:08,530
process brings in all the updates for

00:20:02,440 --> 00:20:13,929
the OS including any right right so it

00:20:08,530 --> 00:20:16,169
would apply to but let's go back into

00:20:13,929 --> 00:20:16,169
this

00:20:21,170 --> 00:20:28,270
so now that I'm in this noodle point was

00:20:23,180 --> 00:20:28,270
JQ if I to do another upgrade actually I

00:20:30,370 --> 00:20:34,490
wrote back that so much we can do it we

00:20:32,570 --> 00:20:35,990
can do it alright so we're gonna do an

00:20:34,490 --> 00:20:38,420
upgrade because I actually rolled back I

00:20:35,990 --> 00:20:42,380
forgot this will actually show would be

00:20:38,420 --> 00:20:44,060
able to show the Seavey's I think so

00:20:42,380 --> 00:20:45,560
there's probably not an upgrade to JQ

00:20:44,060 --> 00:20:51,340
because it doesn't get upgraded very

00:20:45,560 --> 00:20:51,340
often it's a pretty simple program right

00:20:52,030 --> 00:21:01,160
so in this case yeah in this case I

00:20:57,290 --> 00:21:03,530
still have the bits from the previous

00:21:01,160 --> 00:21:07,970
the upgrade deployment on the host so it

00:21:03,530 --> 00:21:10,600
didn't have to fetch fetch the data from

00:21:07,970 --> 00:21:10,600
the network

00:21:18,450 --> 00:21:24,779
so this is what I wanted to show earlier

00:21:20,960 --> 00:21:27,179
so you can see now the new deployment I

00:21:24,779 --> 00:21:29,340
have pending it lists out all the

00:21:27,179 --> 00:21:31,230
security of advisories that were fixed

00:21:29,340 --> 00:21:34,259
in this deployment and the packages that

00:21:31,230 --> 00:21:36,239
were assigned to the CVE numbers the

00:21:34,259 --> 00:21:38,570
package versions so it's very helpful if

00:21:36,239 --> 00:21:40,529
your security minded you want to delay

00:21:38,570 --> 00:21:42,330
rebooting for whatever reason maybe you

00:21:40,529 --> 00:21:45,470
don't want to you don't feel you need to

00:21:42,330 --> 00:21:48,149
take that upgrade update right away a

00:21:45,470 --> 00:21:50,720
very cool trick that our PMO Street has

00:21:48,149 --> 00:21:50,720
learned I think

00:21:56,600 --> 00:22:02,810
so Padma again it's basically a drop-in

00:22:00,980 --> 00:22:05,060
replacement from the doctors here at CLI

00:22:02,810 --> 00:22:12,380
if you were to do an alias dr. equals

00:22:05,060 --> 00:22:16,790
pod man 99% ban 98% easy pay attention

00:22:12,380 --> 00:22:18,860
okay a lot of the dr. CLI commands are

00:22:16,790 --> 00:22:21,140
replicated in in pod Mincey probably

00:22:18,860 --> 00:22:23,780
wouldn't know the difference doesn't

00:22:21,140 --> 00:22:27,020
have a demon so hashtag no big fat DMS

00:22:23,780 --> 00:22:29,810
for Dan and you actually you could also

00:22:27,020 --> 00:22:32,590
do Unferth lists or unprivileged

00:22:29,810 --> 00:22:39,080
containers as a regular user you can run

00:22:32,590 --> 00:22:40,940
containers using pondan scope EO Barry I

00:22:39,080 --> 00:22:43,850
use it mostly for inspecting registries

00:22:40,940 --> 00:22:48,320
like I have a I want to look at which

00:22:43,850 --> 00:22:50,420
tag is what like the sha-256 digest for

00:22:48,320 --> 00:22:52,820
a tag is I can go and inspect the

00:22:50,420 --> 00:22:54,350
registry and get that information or if

00:22:52,820 --> 00:22:56,510
I want to I could actually copy if you

00:22:54,350 --> 00:22:57,050
saw Sally in Devon she's demo earlier

00:22:56,510 --> 00:22:59,210
this morning

00:22:57,050 --> 00:23:01,160
they showed copying from the docker

00:22:59,210 --> 00:23:03,290
daemon on your host to the pod main

00:23:01,160 --> 00:23:06,980
container storage very helpful to come

00:23:03,290 --> 00:23:10,100
to copy just the images between the two

00:23:06,980 --> 00:23:12,350
container storages the toolbox I

00:23:10,100 --> 00:23:14,480
mentioned earlier creates a mutable

00:23:12,350 --> 00:23:16,940
container for installing death tools or

00:23:14,480 --> 00:23:20,110
any package on your host runs route

00:23:16,940 --> 00:23:21,980
lists you don't have to use sudo and

00:23:20,110 --> 00:23:24,500
automagically mounts in your home

00:23:21,980 --> 00:23:26,740
directory so let's try to do that so way

00:23:24,500 --> 00:23:29,740
I do that you toolbox

00:23:26,740 --> 00:23:29,740
create

00:23:35,370 --> 00:23:40,650
so it's gonna it defaults to Fedora

00:23:38,640 --> 00:23:43,170
toolbox container but you can specify

00:23:40,650 --> 00:23:44,850
any base image for your your container

00:23:43,170 --> 00:23:47,970
so you could have one for nodejs you

00:23:44,850 --> 00:23:51,060
could have one for NPM whatever the case

00:23:47,970 --> 00:23:52,340
may be or you can just have one big fat

00:23:51,060 --> 00:23:54,570
container that has all your tools

00:23:52,340 --> 00:23:57,090
included which is kind of the model I

00:23:54,570 --> 00:24:02,180
use rather than having multiple

00:23:57,090 --> 00:24:11,250
different containers to track Network

00:24:02,180 --> 00:24:13,530
we're gonna let that run in theory in

00:24:11,250 --> 00:24:16,350
theory I don't know if this the I don't

00:24:13,530 --> 00:24:18,420
believe the toolbox supports the

00:24:16,350 --> 00:24:23,220
different distros right now

00:24:18,420 --> 00:24:24,810
it's very Fedora specific but in theory

00:24:23,220 --> 00:24:31,380
it could be done pilota quests are

00:24:24,810 --> 00:24:34,230
lovable flat packs are the other side of

00:24:31,380 --> 00:24:36,180
the container story for silver-blue it

00:24:34,230 --> 00:24:38,760
provides a way to containerize your GUI

00:24:36,180 --> 00:24:40,500
applications because the traditional sei

00:24:38,760 --> 00:24:42,390
containers I just we just talked about

00:24:40,500 --> 00:24:46,140
with all those tools are good for

00:24:42,390 --> 00:24:48,630
command line tools like JQ for example s

00:24:46,140 --> 00:24:50,160
trees GCC that kind of stuff but if you

00:24:48,630 --> 00:24:52,290
want a container as a GUI it gets a

00:24:50,160 --> 00:24:53,760
little gnarly unless you're Jesse

00:24:52,290 --> 00:24:57,720
Frisell and have a bunch of daughter

00:24:53,760 --> 00:24:59,280
files it does all that for you so it a

00:24:57,720 --> 00:25:01,860
package actually uses Lib OS tree as

00:24:59,280 --> 00:25:04,170
well to to store the data for the

00:25:01,860 --> 00:25:06,900
runtimes required to run the gooeys and

00:25:04,170 --> 00:25:10,140
the apps themselves on the desk uses

00:25:06,900 --> 00:25:14,220
bubble wrap for unprivileged users can

00:25:10,140 --> 00:25:16,560
talk to d bus and system D apps are

00:25:14,220 --> 00:25:20,640
distributed via the OSHA image format or

00:25:16,560 --> 00:25:21,240
through o OS tree repos as well and this

00:25:20,640 --> 00:25:23,340
huh

00:25:21,240 --> 00:25:25,350
opens up the distribution model a little

00:25:23,340 --> 00:25:27,570
bit more where you can just distribute a

00:25:25,350 --> 00:25:30,300
single flat pack with all the different

00:25:27,570 --> 00:25:33,090
dependencies to a different to a flat

00:25:30,300 --> 00:25:36,690
pack repo and then the butoh guys can

00:25:33,090 --> 00:25:41,180
run it the arch guys - Martha door guys

00:25:36,690 --> 00:25:41,180
can run it for ladies or guys

00:25:42,010 --> 00:25:47,240
but if it's you know it takes the

00:25:44,780 --> 00:25:53,060
container story to the next level for it

00:25:47,240 --> 00:25:55,310
for GUI apps so going back to toolbox

00:25:53,060 --> 00:26:00,370
for a second I've got the fedora tool

00:25:55,310 --> 00:26:00,370
lost container created to go into it I

00:26:02,920 --> 00:26:06,160
simple as that

00:26:14,800 --> 00:26:17,580
this is just

00:26:17,780 --> 00:26:23,180
doing normally enough stuff inside a

00:26:20,390 --> 00:26:29,090
container is no big deal right let's

00:26:23,180 --> 00:26:33,140
look let's go to the actual GUI part of

00:26:29,090 --> 00:26:36,200
it and we're gonna see if I must try to

00:26:33,140 --> 00:26:39,040
install a flat-pack and hopefully the

00:26:36,200 --> 00:26:39,040
network cooperates

00:26:45,540 --> 00:26:52,320
so silver ghost ships Firefox as part of

00:26:48,930 --> 00:26:55,080
the host we could where we're waiting

00:26:52,320 --> 00:26:57,060
for the Firefox flat pack to mature

00:26:55,080 --> 00:27:00,450
before we take Firefox completely out of

00:26:57,060 --> 00:27:02,790
host because we've had instances where

00:27:00,450 --> 00:27:06,060
we've removed certain applications from

00:27:02,790 --> 00:27:07,740
the host that had flat packs and people

00:27:06,060 --> 00:27:10,980
complained because they expect them to

00:27:07,740 --> 00:27:15,060
be there by default the most popular

00:27:10,980 --> 00:27:21,350
flat black flat pack repo is called flat

00:27:15,060 --> 00:27:27,120
hub has anybody used flat packs or a

00:27:21,350 --> 00:27:30,330
couple of people who so similar to the

00:27:27,120 --> 00:27:32,940
way we have since the way our PMO's tree

00:27:30,330 --> 00:27:37,340
has an OS tree repo for getting its data

00:27:32,940 --> 00:27:43,290
we knew to install a flat pack os3 repo

00:27:37,340 --> 00:27:47,030
on our hosts probably could've done this

00:27:43,290 --> 00:27:47,030
ahead of time but now you get to

00:27:52,300 --> 00:27:58,840
feel the pain I feel

00:27:55,570 --> 00:27:59,950
so one thing I didn't mention is that if

00:27:58,840 --> 00:28:03,850
you use gnome

00:27:59,950 --> 00:28:06,729
we have the gnome software capability

00:28:03,850 --> 00:28:10,179
and no software understands flat packs

00:28:06,729 --> 00:28:12,489
it understands our POS tree the support

00:28:10,179 --> 00:28:14,229
for rpm poetry is isn't the greatest as

00:28:12,489 --> 00:28:16,869
well as flat pack there are some rough

00:28:14,229 --> 00:28:20,710
edges you may hit errors if you go

00:28:16,869 --> 00:28:24,190
through the the gnome software route but

00:28:20,710 --> 00:28:27,070
each release gets better and we hope it

00:28:24,190 --> 00:28:29,729
to be completely seamless before we turn

00:28:27,070 --> 00:28:36,970
it over it as like a potential default

00:28:29,729 --> 00:28:37,960
replacement for our workstation so in

00:28:36,970 --> 00:28:42,729
the background you saw it

00:28:37,960 --> 00:28:46,479
the DNF install of s tres completed in

00:28:42,729 --> 00:28:53,739
the toolbox if I exit the toolbox and

00:28:46,479 --> 00:28:57,279
then go back in s trace is there if I

00:28:53,739 --> 00:28:59,919
look at my home directory it's the same

00:28:57,279 --> 00:29:04,479
thing as into the home injector in the

00:28:59,919 --> 00:29:08,109
host I legs it out somewhere the same

00:29:04,479 --> 00:29:10,119
stuff so pretty handy way do you move

00:29:08,109 --> 00:29:12,309
away from installing your development

00:29:10,119 --> 00:29:17,710
tools and libraries on your hosts keep

00:29:12,309 --> 00:29:21,940
them containerized all right so we got a

00:29:17,710 --> 00:29:24,659
flap a flat hub installed I'm gonna go

00:29:21,940 --> 00:29:24,659
back to

00:29:27,940 --> 00:29:37,730
terminal on this VM see if I can make

00:29:33,049 --> 00:29:44,230
this beer feel so flat so we use flat

00:29:37,730 --> 00:29:44,230
pack search see Spotify for gun violence

00:29:45,070 --> 00:29:48,490
or I can just go

00:30:01,920 --> 00:30:05,630
that's great

00:30:07,330 --> 00:30:16,000
so flat-pack install I got this one

00:30:10,420 --> 00:30:19,330
flight client oops too many so it's

00:30:16,000 --> 00:30:22,330
gonna ask for Nestor Commission's to

00:30:19,330 --> 00:30:23,110
install it you want the runtimes yeah of

00:30:22,330 --> 00:30:25,060
course I do

00:30:23,110 --> 00:30:28,060
do I do all this of course yes I want to

00:30:25,060 --> 00:30:29,410
listen to music on Spotify so now it's

00:30:28,060 --> 00:30:32,230
going to pull down the different

00:30:29,410 --> 00:30:34,690
runtimes you've got a platform which is

00:30:32,230 --> 00:30:36,910
basically the the core of it basic the

00:30:34,690 --> 00:30:38,700
core the the library is required to run

00:30:36,910 --> 00:30:43,720
these GUI applications from free desktop

00:30:38,700 --> 00:30:45,130
some codecs localization files we're

00:30:43,720 --> 00:30:51,580
gonna let that run why keep going

00:30:45,130 --> 00:30:53,650
forward before a run at a time so that's

00:30:51,580 --> 00:30:56,500
a whirlwind tour through all the

00:30:53,650 --> 00:30:59,590
technology if you haven't been paying

00:30:56,500 --> 00:31:03,580
attention to solar blue lately one of

00:30:59,590 --> 00:31:06,520
the MIT had some some nice improvements

00:31:03,580 --> 00:31:07,780
to the experience before we had a

00:31:06,520 --> 00:31:09,700
limitation where you couldn't install

00:31:07,780 --> 00:31:11,920
software that was installed into /opt

00:31:09,700 --> 00:31:13,990
namely Google Chrome is one of the big

00:31:11,920 --> 00:31:15,370
requests that we had like why can't I

00:31:13,990 --> 00:31:17,650
install Google Chrome I don't want to

00:31:15,370 --> 00:31:20,110
use chromium thankfully Alex Larson

00:31:17,650 --> 00:31:21,880
stepped in made some changes to our pmos

00:31:20,110 --> 00:31:23,370
tree and now we can install Google

00:31:21,880 --> 00:31:26,050
Chrome to /opt

00:31:23,370 --> 00:31:27,790
not all stuff not all the software is

00:31:26,050 --> 00:31:29,920
gonna work that goes into that opt but

00:31:27,790 --> 00:31:32,050
Google Chrome is at least unblocked we

00:31:29,920 --> 00:31:34,000
also have support for Nvidia drivers so

00:31:32,050 --> 00:31:37,570
if you have those high performance GPUs

00:31:34,000 --> 00:31:38,980
for running games and whatnot or you

00:31:37,570 --> 00:31:41,020
know machine learning tasks whatever the

00:31:38,980 --> 00:31:43,450
case may be we have support for

00:31:41,020 --> 00:31:45,280
installing bose as well which kind of

00:31:43,450 --> 00:31:47,860
unlocks another use case of the

00:31:45,280 --> 00:31:51,480
workstation again Alex Larson from the

00:31:47,860 --> 00:31:53,350
gnome team at Red Hat was the

00:31:51,480 --> 00:31:56,800
responsible for both of those changes so

00:31:53,350 --> 00:32:01,570
thank God thank goodness for him going

00:31:56,800 --> 00:32:03,670
forward we want to enable automatic OS

00:32:01,570 --> 00:32:06,040
upgrades my default I forgot to show you

00:32:03,670 --> 00:32:08,950
that but it's an easy one line fix to a

00:32:06,040 --> 00:32:11,020
config file when is when automatic

00:32:08,950 --> 00:32:13,150
upgrades are enabled on in RPGs or

00:32:11,020 --> 00:32:14,770
history systems the upgrades are

00:32:13,150 --> 00:32:16,960
downloaded in the background and staged

00:32:14,770 --> 00:32:18,720
and then you can choose to reboot into

00:32:16,960 --> 00:32:20,280
them whatever you want it happens

00:32:18,720 --> 00:32:22,770
without even you knowing it's a little

00:32:20,280 --> 00:32:25,110
systemd service it's great we want to

00:32:22,770 --> 00:32:26,180
install more flat packs out of box we

00:32:25,110 --> 00:32:29,280
weren't able to do that

00:32:26,180 --> 00:32:31,650
up till now because Fedora didn't have a

00:32:29,280 --> 00:32:33,960
flat pack right history we're starting

00:32:31,650 --> 00:32:36,420
to see more flat packs be produced by

00:32:33,960 --> 00:32:38,460
fedora so we'll be able to enable the

00:32:36,420 --> 00:32:41,610
flat pack so door the Fedora flat pack

00:32:38,460 --> 00:32:44,030
registry on new installs users be able

00:32:41,610 --> 00:32:47,070
to install flat packs from that registry

00:32:44,030 --> 00:32:54,090
we can't distribute flat hug because of

00:32:47,070 --> 00:32:55,590
probably legal reasons and there's been

00:32:54,090 --> 00:32:56,910
talk of making silver blue default

00:32:55,590 --> 00:32:59,640
workstation choice

00:32:56,910 --> 00:33:01,890
it's very contentious it one fan back

00:32:59,640 --> 00:33:04,110
there thank you very contentious because

00:33:01,890 --> 00:33:06,060
some people are really want to hold on

00:33:04,110 --> 00:33:10,800
to the DNF workflow because they love it

00:33:06,060 --> 00:33:13,110
so much but the I mean if you've ever

00:33:10,800 --> 00:33:14,670
done a DNF upgrade and it's gone south

00:33:13,110 --> 00:33:17,820
in the middle of it your love for the

00:33:14,670 --> 00:33:22,140
system that's broken our pmos tree is

00:33:17,820 --> 00:33:24,480
the thing you are looking for so maybe I

00:33:22,140 --> 00:33:26,730
don't know 31 it's not going to be the

00:33:24,480 --> 00:33:28,650
default for for workstation but maybe in

00:33:26,730 --> 00:33:31,490
a couple of years we'll we'll be at a

00:33:28,650 --> 00:33:33,600
place where you can do that the other

00:33:31,490 --> 00:33:36,330
development so we're starting to talk

00:33:33,600 --> 00:33:38,840
about is building silver blue through a

00:33:36,330 --> 00:33:41,400
new tool that has been developed for

00:33:38,840 --> 00:33:43,350
building Fedora core OS and Red Hat core

00:33:41,400 --> 00:33:46,200
OS called core OS assembler it's

00:33:43,350 --> 00:33:52,350
essentially a wrapper around our PMO's

00:33:46,200 --> 00:33:57,930
tree and a number of tools basically to

00:33:52,350 --> 00:33:59,460
produce a OS using the OS reformat call

00:33:57,930 --> 00:34:01,530
and Walter is one of the key computers

00:33:59,460 --> 00:34:03,420
or the architect of Austrian harpeia

00:34:01,530 --> 00:34:05,310
muster he's been hacking on this trying

00:34:03,420 --> 00:34:09,450
to get us to a point where we can use

00:34:05,310 --> 00:34:12,360
chorus similar to build any IP MOS tree

00:34:09,450 --> 00:34:14,400
based OS so they'll be pretty cool if

00:34:12,360 --> 00:34:15,810
that happens then of course like

00:34:14,400 --> 00:34:18,450
improving the documentation and growing

00:34:15,810 --> 00:34:19,890
community we want our documentation is a

00:34:18,450 --> 00:34:22,770
little lacking right now we could use

00:34:19,890 --> 00:34:23,910
more help in that area for sure and then

00:34:22,770 --> 00:34:26,310
just growing the community any more

00:34:23,910 --> 00:34:30,690
users up on board trying it out

00:34:26,310 --> 00:34:32,480
reporting problems you can do this

00:34:30,690 --> 00:34:35,970
do that through here we have a great

00:34:32,480 --> 00:34:37,800
discourse forum that's up and running we

00:34:35,970 --> 00:34:40,050
have Doc's that are like I said need

00:34:37,800 --> 00:34:41,760
updating we have an issue tracker on

00:34:40,050 --> 00:34:44,839
github for reporting issues and we have

00:34:41,760 --> 00:34:47,790
a twitter handle for silver glue for

00:34:44,839 --> 00:34:51,389
tweeting it problems to us or solutions

00:34:47,790 --> 00:34:53,280
or suggestions whatever they should come

00:34:51,389 --> 00:34:56,099
to my desk on top you can get in touch

00:34:53,280 --> 00:35:01,290
with me Twitter or an email view those

00:34:56,099 --> 00:35:08,280
things there so questions you've served

00:35:01,290 --> 00:35:10,319
in the back running it on my laptop at

00:35:08,280 --> 00:35:14,819
home on my kids laptops fantastic

00:35:10,319 --> 00:35:17,910
brilliant everyone should use it couple

00:35:14,819 --> 00:35:19,770
of things I think there's still room to

00:35:17,910 --> 00:35:21,630
improve the availability of flatbacks

00:35:19,770 --> 00:35:23,670
things like there's no tor browser and

00:35:21,630 --> 00:35:26,490
that's an important thing for lots of

00:35:23,670 --> 00:35:28,079
people who own open source and things

00:35:26,490 --> 00:35:30,480
like gnome tweak tool doesn't run which

00:35:28,079 --> 00:35:32,369
means you can't restore sessions or you

00:35:30,480 --> 00:35:34,170
can't have startup it's it's things like

00:35:32,369 --> 00:35:35,910
that it's not feasible yet and I

00:35:34,170 --> 00:35:38,010
encourage people to use it but it's a

00:35:35,910 --> 00:35:42,630
fantastic piece of work in Judea thank

00:35:38,010 --> 00:35:45,119
you flat pack that there are those rough

00:35:42,630 --> 00:35:46,829
edges that we need to polish off and

00:35:45,119 --> 00:35:50,760
make it a little more usable we need to

00:35:46,829 --> 00:35:52,079
be able to give it to a not a developer

00:35:50,760 --> 00:35:54,270
basically not someone who's willing to

00:35:52,079 --> 00:35:56,010
dig into the the journal and figure out

00:35:54,270 --> 00:35:58,079
problems and say oh do you want to

00:35:56,010 --> 00:35:59,970
install Spotify well just go through him

00:35:58,079 --> 00:36:02,940
software starts Spotify install and

00:35:59,970 --> 00:36:08,849
you're good to go so yeah we have

00:36:02,940 --> 00:36:10,950
usability improvements for sure Neal so

00:36:08,849 --> 00:36:12,569
this looks quite interesting and it

00:36:10,950 --> 00:36:14,160
seems to have advanced a fair bit since

00:36:12,569 --> 00:36:16,170
the last time I attempted to use it and

00:36:14,160 --> 00:36:21,240
it kind of stalled out on installation

00:36:16,170 --> 00:36:23,910
so that that's good but I know miss not

00:36:21,240 --> 00:36:25,619
my bag what are you are you looking to

00:36:23,910 --> 00:36:28,440
like collaborate with some of the other

00:36:25,619 --> 00:36:29,790
desktop groups within within Fedora to

00:36:28,440 --> 00:36:34,920
see if we can get some interesting

00:36:29,790 --> 00:36:36,750
flavors made like for example Katy using

00:36:34,920 --> 00:36:38,790
Weiland with this because with this new

00:36:36,750 --> 00:36:40,940
model it's a lot easier to experiment

00:36:38,790 --> 00:36:44,040
with that kind of thing or trying out

00:36:40,940 --> 00:36:44,549
mate' with their new experimental Mirko

00:36:44,040 --> 00:36:46,650
which is

00:36:44,549 --> 00:36:48,420
so whaling and things like that giving

00:36:46,650 --> 00:36:50,609
people an opportunity to try the new

00:36:48,420 --> 00:36:55,609
tech with the kind of desktops they like

00:36:50,609 --> 00:36:58,650
in the brave new world of maybe secure

00:36:55,609 --> 00:37:01,799
so Neil's question was I'm not a gnome

00:36:58,650 --> 00:37:03,959
user how do I use additional or

00:37:01,799 --> 00:37:07,410
different desktop environments basically

00:37:03,959 --> 00:37:09,029
so there's two ways you can actually

00:37:07,410 --> 00:37:12,569
just pack you can actually actually just

00:37:09,029 --> 00:37:14,309
rpm host reinstall KDE or whatever on

00:37:12,569 --> 00:37:17,099
top of that thing on top of the existing

00:37:14,309 --> 00:37:20,279
silver-blue installation and then at

00:37:17,099 --> 00:37:22,979
boot choose which desktop environment

00:37:20,279 --> 00:37:26,609
you want to go into clearly that's not

00:37:22,979 --> 00:37:28,920
the optimised path there is a community

00:37:26,609 --> 00:37:34,709
member who maintains his own OS tree

00:37:28,920 --> 00:37:37,049
repose of a KDE version xfce deep in a

00:37:34,709 --> 00:37:40,650
number of different desktop in verse 3 I

00:37:37,049 --> 00:37:42,989
think so it's possible to rip out all

00:37:40,650 --> 00:37:47,609
the norm stuff and put in a new desktop

00:37:42,989 --> 00:37:51,900
environment and have it work I also

00:37:47,609 --> 00:37:53,910
would love to see a different spin of of

00:37:51,900 --> 00:37:56,819
silver-blue for the users who want a

00:37:53,910 --> 00:37:58,410
different desktop environment I don't

00:37:56,819 --> 00:38:01,529
know of any official talks that have

00:37:58,410 --> 00:38:03,839
happened in that regard but it's

00:38:01,529 --> 00:38:05,729
certainly possible we have the community

00:38:03,839 --> 00:38:07,529
to support behind it maybe we need just

00:38:05,729 --> 00:38:11,099
need to link up the right people to make

00:38:07,529 --> 00:38:13,969
it happen but yeah so the answer is

00:38:11,099 --> 00:38:13,969
kinda

00:38:14,600 --> 00:38:20,060
so what else I've not used silver-blue

00:38:17,690 --> 00:38:21,320
yet but I've been using flat packs on

00:38:20,060 --> 00:38:23,360
regular fedora

00:38:21,320 --> 00:38:26,960
and one thing I've noticed when like

00:38:23,360 --> 00:38:28,940
installing some of the audio recording

00:38:26,960 --> 00:38:32,270
and music notation software many of them

00:38:28,940 --> 00:38:34,880
depend on KDE dependencies and some of

00:38:32,270 --> 00:38:37,070
the things I noticed were it was using

00:38:34,880 --> 00:38:39,020
up a lot of disk space because different

00:38:37,070 --> 00:38:42,130
programs were downloading different

00:38:39,020 --> 00:38:45,980
versions of the different KDE

00:38:42,130 --> 00:38:48,500
dependencies so is that just like good

00:38:45,980 --> 00:38:51,500
distro version hygiene that just hasn't

00:38:48,500 --> 00:38:55,550
happened because it's not a concerted

00:38:51,500 --> 00:38:58,670
distro wide effort yet or would that be

00:38:55,550 --> 00:39:00,650
an ongoing problem where maybe

00:38:58,670 --> 00:39:03,350
developers are not updating to the

00:39:00,650 --> 00:39:06,980
latest version of libraries and so we

00:39:03,350 --> 00:39:09,080
end up with a lot of extra different

00:39:06,980 --> 00:39:10,370
versions of everything right so the

00:39:09,080 --> 00:39:12,440
question was basically like what do we

00:39:10,370 --> 00:39:14,600
do about flat plaque flat-pack bloat

00:39:12,440 --> 00:39:16,070
where different flat packs are

00:39:14,600 --> 00:39:23,090
installing different versions of the

00:39:16,070 --> 00:39:26,810
same supporting libraries I would say

00:39:23,090 --> 00:39:28,550
that it's probably best solved by right

00:39:26,810 --> 00:39:31,730
now it's probably best solved by the

00:39:28,550 --> 00:39:33,500
individual flat pack owners so whatever

00:39:31,730 --> 00:39:37,310
sound recording software you were

00:39:33,500 --> 00:39:39,500
talking about they need to stay as

00:39:37,310 --> 00:39:41,650
up-to-date as possible as long as as

00:39:39,500 --> 00:39:43,730
well as all the other flat packs like I

00:39:41,650 --> 00:39:46,160
really don't have a good answer for that

00:39:43,730 --> 00:39:48,490
it's it but it's a I understand the

00:39:46,160 --> 00:39:50,600
problem I understand the problem there

00:39:48,490 --> 00:39:52,820
there's somebody on the forums who was

00:39:50,600 --> 00:39:54,470
just complaining about how this is like

00:39:52,820 --> 00:39:57,530
noter flat packs are no different than

00:39:54,470 --> 00:40:00,020
if you ever stalled installed a game

00:39:57,530 --> 00:40:02,030
from the steam store then on Windows

00:40:00,020 --> 00:40:05,420
they install all these different dll's

00:40:02,030 --> 00:40:08,240
versions for the same libraries but

00:40:05,420 --> 00:40:09,800
because it's it they've been version

00:40:08,240 --> 00:40:13,310
differently you have to install them so

00:40:09,800 --> 00:40:17,210
it's a similar problem not sure we have

00:40:13,310 --> 00:40:21,800
a good solution for that right now dan

00:40:17,210 --> 00:40:23,540
has it been so toolbox it's really cool

00:40:21,800 --> 00:40:25,390
from a developer point of view but a lot

00:40:23,540 --> 00:40:29,530
of times I might be setting up

00:40:25,390 --> 00:40:32,950
mr. on the system D as system D become

00:40:29,530 --> 00:40:36,970
aware of what's going on with full box

00:40:32,950 --> 00:40:40,060
yet so that could I set up a container

00:40:36,970 --> 00:40:43,510
image that at boot time would start a

00:40:40,060 --> 00:40:45,790
service inside of my container dan asked

00:40:43,510 --> 00:40:48,490
and I set up a system D service to start

00:40:45,790 --> 00:40:51,400
a toolbox container is that a good

00:40:48,490 --> 00:40:53,950
summary yeah more complex than that

00:40:51,400 --> 00:40:55,690
though I want to install Apache inside

00:40:53,950 --> 00:40:58,150
of my tool boxes root like you were

00:40:55,690 --> 00:41:00,100
showing and I wanted boot time I'm gonna

00:40:58,150 --> 00:41:02,230
enable that system service and then have

00:41:00,100 --> 00:41:06,430
Apache command go into my container and

00:41:02,230 --> 00:41:09,700
start that service so Dan wants a system

00:41:06,430 --> 00:41:12,280
D service to start a toolbox which also

00:41:09,700 --> 00:41:14,370
has a patchy inside of it that services

00:41:12,280 --> 00:41:17,770
started as well with a quart container

00:41:14,370 --> 00:41:19,870
starts I mean wouldn't you just use a

00:41:17,770 --> 00:41:23,020
regular pot bit like a regular container

00:41:19,870 --> 00:41:25,420
for that well no because I wouldn't have

00:41:23,020 --> 00:41:27,430
Apache installed in my system so I have

00:41:25,420 --> 00:41:31,600
to install Apache inside of a container

00:41:27,430 --> 00:41:35,800
and then I need to just my normal

00:41:31,600 --> 00:41:38,770
workflow would be the bottom line is his

00:41:35,800 --> 00:41:41,290
system D starting to look how they can

00:41:38,770 --> 00:41:43,720
interact better with with some of this

00:41:41,290 --> 00:41:45,120
new silver-blue type environment where

00:41:43,720 --> 00:41:47,500
people are installing software

00:41:45,120 --> 00:41:50,530
containers so dan really wants to know

00:41:47,500 --> 00:41:53,380
is had this has system B he has system D

00:41:50,530 --> 00:41:55,420
become aware of how we're doing house or

00:41:53,380 --> 00:41:57,730
blue is handling user containers like

00:41:55,420 --> 00:42:00,660
toolbox or whatnot to the best of my

00:41:57,730 --> 00:42:00,660
knowledge I don't know of any

00:42:04,089 --> 00:42:07,259
any other questions

00:42:16,540 --> 00:42:20,290
so this is probably more of a flat-pack

00:42:18,430 --> 00:42:22,030
interoperability but I was running flat

00:42:20,290 --> 00:42:24,700
pack with some open-source graphical

00:42:22,030 --> 00:42:25,930
applications and one of the things they

00:42:24,700 --> 00:42:28,120
couldn't do they would try

00:42:25,930 --> 00:42:30,160
unsuccessfully like you are working on

00:42:28,120 --> 00:42:31,480
an object and you could open it you know

00:42:30,160 --> 00:42:33,880
there's like a right-click and open it

00:42:31,480 --> 00:42:36,040
in another open source image editor and

00:42:33,880 --> 00:42:39,040
on a normal DNF system that works great

00:42:36,040 --> 00:42:40,030
right but in a flat-pack system because

00:42:39,040 --> 00:42:42,760
they're launched differently however

00:42:40,030 --> 00:42:46,960
they were launching it fails yep so so

00:42:42,760 --> 00:42:49,090
the question is basically summarize this

00:42:46,960 --> 00:42:50,590
when you're using flat packs it's hard

00:42:49,090 --> 00:42:52,450
for the flat packs to communicate with

00:42:50,590 --> 00:42:55,330
each other essentially right so what

00:42:52,450 --> 00:42:57,160
trying to launch trying to trigger an

00:42:55,330 --> 00:43:00,520
event from one flat pack to another it

00:42:57,160 --> 00:43:02,800
just is not not easily done right now

00:43:00,520 --> 00:43:05,410
fire pack does have support for they

00:43:02,800 --> 00:43:10,090
call portals and that gives you access

00:43:05,410 --> 00:43:12,490
to basically opens up the flat pack with

00:43:10,090 --> 00:43:16,060
different permissions to talk to d-bus

00:43:12,490 --> 00:43:18,010
for example or even a different flat

00:43:16,060 --> 00:43:19,390
packs that believe so hard or access

00:43:18,010 --> 00:43:22,780
that you can even have a portal to

00:43:19,390 --> 00:43:26,470
access the file system itself so it

00:43:22,780 --> 00:43:29,440
seems technically feasible I think as

00:43:26,470 --> 00:43:31,510
flat packs are becoming more widely

00:43:29,440 --> 00:43:33,970
adopted and more understood in terms of

00:43:31,510 --> 00:43:36,090
how to package them we'll see more we'll

00:43:33,970 --> 00:43:38,830
see better integration in that regard

00:43:36,090 --> 00:43:40,920
right now it's more along the lines of

00:43:38,830 --> 00:43:43,630
taking whatever flat pack you have

00:43:40,920 --> 00:43:45,610
figuring out the right changes you need

00:43:43,630 --> 00:43:47,410
to make that flat back to open it up to

00:43:45,610 --> 00:43:50,770
for access to other flat packs or to the

00:43:47,410 --> 00:43:53,320
system and then running it that way for

00:43:50,770 --> 00:43:55,930
this is one of those you know in terms

00:43:53,320 --> 00:43:57,670
of improved usability improvements like

00:43:55,930 --> 00:44:00,210
one that we have to keep striving

00:43:57,670 --> 00:44:00,210
towards

00:44:01,450 --> 00:44:04,920
any other questions

00:44:10,700 --> 00:44:15,990
Dan's asking if Red Hat is going to

00:44:13,260 --> 00:44:19,410
replace their CSB corporate desktops but

00:44:15,990 --> 00:44:24,270
silver-blue it's a tall order dan I

00:44:19,410 --> 00:44:26,930
don't know I don't know that's I just

00:44:24,270 --> 00:44:26,930
above my paygrade

00:44:31,500 --> 00:44:36,240
right all right I agree so Dan's

00:44:34,320 --> 00:44:38,520
pointing out this is a perfect corporate

00:44:36,240 --> 00:44:40,320
desktop because you don't need root you

00:44:38,520 --> 00:44:42,420
could install packages in your your user

00:44:40,320 --> 00:44:45,300
space containers you have flat packs

00:44:42,420 --> 00:44:47,070
it's just like it you can deliver

00:44:45,300 --> 00:44:49,260
updates at the cadence you want through

00:44:47,070 --> 00:44:51,180
us through your own custom Oster repos

00:44:49,260 --> 00:44:54,750
it's there is a lot of benefit to using

00:44:51,180 --> 00:45:01,040
it using this method for question in the

00:44:54,750 --> 00:45:01,040
back you can yeah I can try to repeat it

00:45:05,300 --> 00:45:12,380
I have a question and this regards to

00:45:08,810 --> 00:45:14,690
the Red Hat and I understand Red Hat

00:45:12,380 --> 00:45:15,770
they have the idea on cloud system I

00:45:14,690 --> 00:45:19,160
don't know if I'm permitted to ask

00:45:15,770 --> 00:45:22,310
question but if you understand about

00:45:19,160 --> 00:45:25,190
Amazon AWS everything is on cloud based

00:45:22,310 --> 00:45:27,950
well ours during my research I'm just a

00:45:25,190 --> 00:45:29,960
novice I'm trying to find out how is red

00:45:27,950 --> 00:45:33,140
hard trying to work with other cloud

00:45:29,960 --> 00:45:37,130
system so you can assess our cloud

00:45:33,140 --> 00:45:39,020
system like Microsoft AWS true Red Hat

00:45:37,130 --> 00:45:40,220
because I think that's a big challenge

00:45:39,020 --> 00:45:42,110
right now mm-hmm

00:45:40,220 --> 00:45:44,240
so I'm just really thinking you know

00:45:42,110 --> 00:45:45,440
just kind of imagine what is red hot

00:45:44,240 --> 00:45:46,910
really doing about it

00:45:45,440 --> 00:45:52,010
this I'm really trying to take this

00:45:46,910 --> 00:45:55,730
certification well the question is how

00:45:52,010 --> 00:45:59,960
is red hat working with other cloud

00:45:55,730 --> 00:46:01,990
providers besides AWS man that's wave

00:45:59,960 --> 00:46:05,630
above my pretty great I don't know like

00:46:01,990 --> 00:46:07,760
I know I mean protocol for example on

00:46:05,630 --> 00:46:11,180
the openshift side we have support for

00:46:07,760 --> 00:46:14,780
AWS we're working to support other cloud

00:46:11,180 --> 00:46:16,130
providers such as as your GCP teri

00:46:14,780 --> 00:46:18,410
sounds like he's gonna answer this

00:46:16,130 --> 00:46:20,240
question for you yeah I might be able to

00:46:18,410 --> 00:46:23,000
help a little are you thinking in terms

00:46:20,240 --> 00:46:30,070
of like something like this like silver

00:46:23,000 --> 00:46:30,070
blue desktop experience or general okay

00:46:41,570 --> 00:46:52,140
we first

00:46:45,510 --> 00:46:53,910
yeah yeah so at the risk of stealing

00:46:52,140 --> 00:46:54,780
their thunder for this topic we could

00:46:53,910 --> 00:46:59,010
talk outside

00:46:54,780 --> 00:47:01,260
but we have tons of teams working with

00:46:59,010 --> 00:47:04,109
all of the cloud partners we have a

00:47:01,260 --> 00:47:06,680
certified cloud partnership and we have

00:47:04,109 --> 00:47:09,210
a ton of management tooling and

00:47:06,680 --> 00:47:11,790
certification efforts to support all of

00:47:09,210 --> 00:47:25,460
the clouds so we can talk more later

00:47:11,790 --> 00:47:30,090
them any other questions the server side

00:47:25,460 --> 00:47:32,160
so so the question is what where is the

00:47:30,090 --> 00:47:33,900
server side for this well this was

00:47:32,160 --> 00:47:36,780
actually birthed out of atomic Tomic

00:47:33,900 --> 00:47:39,180
host so Red Hat and fedora and sent to

00:47:36,780 --> 00:47:42,859
us had a server-side server version of

00:47:39,180 --> 00:47:45,600
it called atomic host use the same

00:47:42,859 --> 00:47:48,390
infrastructure or technology history and

00:47:45,600 --> 00:47:51,800
our chemistry it never really took off

00:47:48,390 --> 00:47:54,300
as well as as much as we wanted to now

00:47:51,800 --> 00:47:55,950
what we're doing is we're using that

00:47:54,300 --> 00:47:59,040
same technology to provide a mutable

00:47:55,950 --> 00:48:03,680
host in a server format for OpenShift so

00:47:59,040 --> 00:48:06,600
openshift for uses rel core OS as the

00:48:03,680 --> 00:48:08,369
default OS the only OS actually

00:48:06,600 --> 00:48:11,840
supported for all the masters a control

00:48:08,369 --> 00:48:15,170
plane or cloud in OpenShift

00:48:11,840 --> 00:48:19,140
other than that Red Hat does not have a

00:48:15,170 --> 00:48:22,109
rel 8 based offering using our PMO

00:48:19,140 --> 00:48:24,510
history there is a rel 7 version of

00:48:22,109 --> 00:48:27,869
atomic host which uses our PMO history

00:48:24,510 --> 00:48:32,119
but given that row 8 has been released

00:48:27,869 --> 00:48:32,119
rel 7 is not long for this world

00:48:34,190 --> 00:48:38,830
anything else there's another one right

00:48:36,800 --> 00:48:38,830
there

00:48:40,600 --> 00:48:47,620
up till now I have been using my desktop

00:48:44,140 --> 00:48:52,540
as partly server running labor and other

00:48:47,620 --> 00:48:54,550
things how do you see that happening

00:48:52,540 --> 00:48:56,530
once we go here do you suggest that we

00:48:54,550 --> 00:48:58,300
have a dedicated desktop which runs

00:48:56,530 --> 00:49:00,550
silver blue and up Federal Reserve were

00:48:58,300 --> 00:49:03,790
version somewhere else doing the desktop

00:49:00,550 --> 00:49:06,670
thing several things or the intention is

00:49:03,790 --> 00:49:08,650
to run Lebert and other things okay so

00:49:06,670 --> 00:49:11,740
how do you so this is how do you run

00:49:08,650 --> 00:49:14,460
libvirt on silver glue essentially all

00:49:11,740 --> 00:49:18,100
you have to do is package layer it

00:49:14,460 --> 00:49:20,620
install the deliver packages and you can

00:49:18,100 --> 00:49:23,590
still interact on the host level use

00:49:20,620 --> 00:49:25,570
Verte install to install images run

00:49:23,590 --> 00:49:27,460
Bruckner I mean I'm this laptop right

00:49:25,570 --> 00:49:33,400
now is running silver blue and I'm

00:49:27,460 --> 00:49:43,180
running so I've got brick manager right

00:49:33,400 --> 00:49:47,730
here whoops I got a couple of VMs and

00:49:43,180 --> 00:49:47,730
Mersh right now so it just works

00:49:49,710 --> 00:50:01,550
anymore going once

00:49:55,010 --> 00:50:01,550

YouTube URL: https://www.youtube.com/watch?v=kbV4LNqUaj8


