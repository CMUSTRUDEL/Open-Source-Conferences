Title: Lightning Talks Saturday
Publication date: 2016-02-11
Playlist: DevConf.cz 2016
Description: 
	Ian McLeod - Fedora 23 on the Raspberry Pi zero.
Holger Lersen - Bit by bit identical reproducible builds in the RPM world.
Jiri Eischmann - Write upstream metadata for your app / plugin.
Kevin KoflerQT Web Engine - The future of web browsing.
Captions: 
	00:03:08,549 --> 00:03:13,689
so ladies and gentlemen we're gonna get

00:03:10,719 --> 00:03:17,349
started with lightning talks now um the

00:03:13,689 --> 00:03:24,099
first one is Ian MacLeod thank you hello

00:03:17,349 --> 00:03:28,840
can everyone hear me okay I hope the

00:03:24,099 --> 00:03:30,879
demo works alright so I'm gonna talk

00:03:28,840 --> 00:03:33,400
about Fedora on the Raspberry Pi zero

00:03:30,879 --> 00:03:35,739
I'm calling this bootstrapping an old

00:03:33,400 --> 00:03:37,689
architecture I'm sure you've seen or

00:03:35,739 --> 00:03:39,250
heard some talks about bootstrapping new

00:03:37,689 --> 00:03:43,060
architectures that are fast and

00:03:39,250 --> 00:03:44,980
interesting like PowerPC 64 or 64-bit

00:03:43,060 --> 00:03:46,989
arms so we're going to go in the

00:03:44,980 --> 00:03:49,780
opposite direction here so who is heard

00:03:46,989 --> 00:03:52,299
of the Raspberry Pi as if I'm not okay

00:03:49,780 --> 00:03:55,510
who knew about this device the Raspberry

00:03:52,299 --> 00:03:58,629
Pi zero so most of you okay good that's

00:03:55,510 --> 00:04:01,389
probably why you're here it is a 1

00:03:58,629 --> 00:04:03,549
gigahertz half a gigabyte full linux

00:04:01,389 --> 00:04:06,280
computer that fits in the palm of at

00:04:03,549 --> 00:04:08,620
least this hand how many of you knew

00:04:06,280 --> 00:04:11,109
that the Raspberry Pi is actually a GPU

00:04:08,620 --> 00:04:13,359
chip with a CPU put onto it as an

00:04:11,109 --> 00:04:15,579
afterthought just some of it it is

00:04:13,359 --> 00:04:16,959
that's what it is I think something like

00:04:15,579 --> 00:04:19,840
only two or three percent of the dye

00:04:16,959 --> 00:04:21,970
space on these chips is the arm CPU and

00:04:19,840 --> 00:04:23,620
the rest of it is actually a GPU that is

00:04:21,970 --> 00:04:25,090
used in mobile phones that is one of the

00:04:23,620 --> 00:04:26,199
reasons why it's able to be manufactured

00:04:25,090 --> 00:04:28,870
so cheaply or at least that's my

00:04:26,199 --> 00:04:31,389
understanding this invocation or

00:04:28,870 --> 00:04:33,940
incarnation of it rather has an HDMI

00:04:31,389 --> 00:04:36,039
connector it has a single USB OTG

00:04:33,940 --> 00:04:38,440
connector a different connector for

00:04:36,039 --> 00:04:40,659
power and then it has the same 40 pins

00:04:38,440 --> 00:04:43,090
for gpio that the rest of the pie family

00:04:40,659 --> 00:04:45,760
have so the original Raspberry Pi and

00:04:43,090 --> 00:04:48,220
the Raspberry Pi to this duplicates all

00:04:45,760 --> 00:04:50,590
of that and it costs five US dollars if

00:04:48,220 --> 00:04:52,630
you can find one like a lot of the rest

00:04:50,590 --> 00:04:54,690
of the pies it's not very easy to find

00:04:52,630 --> 00:04:57,729
at the moment if you're willing to buy

00:04:54,690 --> 00:04:59,650
$55 of other stuff with it adafruit in

00:04:57,729 --> 00:05:01,139
the United States will ship on to that

00:04:59,650 --> 00:05:04,759
is how I managed to get my hands on

00:05:01,139 --> 00:05:08,069
right now so you've heard of the chip

00:05:04,759 --> 00:05:09,629
the nine dollar computer so that's too

00:05:08,069 --> 00:05:11,669
rich for your blood the Raspberry Pi

00:05:09,629 --> 00:05:14,099
zero is the machine for you it's only

00:05:11,669 --> 00:05:16,340
five and it's made in Wales who's heard

00:05:14,099 --> 00:05:22,349
of Wales I'm just kidding move on so

00:05:16,340 --> 00:05:24,689
what what shape will run fedora why

00:05:22,349 --> 00:05:26,580
would we be interested in this the

00:05:24,689 --> 00:05:28,919
Raspberry Pi has been a phenomenally

00:05:26,580 --> 00:05:31,319
successful platform they had issued five

00:05:28,919 --> 00:05:32,999
million units through februari of last

00:05:31,319 --> 00:05:34,590
year I can't find any more recent I

00:05:32,999 --> 00:05:37,680
think they are they just blow away any

00:05:34,590 --> 00:05:39,150
other platform this is a check-in app

00:05:37,680 --> 00:05:41,550
that not everybody uses but it gives you

00:05:39,150 --> 00:05:43,650
a stent sense of the geographical extent

00:05:41,550 --> 00:05:46,050
of their community there are five an

00:05:43,650 --> 00:05:47,879
hour to cup that have checked in there

00:05:46,050 --> 00:05:50,460
is there are two on the International

00:05:47,879 --> 00:05:52,229
Space Station's some other reasons why

00:05:50,460 --> 00:05:54,539
did I mention they have five million

00:05:52,229 --> 00:05:57,000
units in production out there being used

00:05:54,539 --> 00:05:58,500
right it's a very large community of

00:05:57,000 --> 00:06:00,749
developers and using as a very large

00:05:58,500 --> 00:06:04,129
focus on education which i think is

00:06:00,749 --> 00:06:07,500
always a good place to have a presence

00:06:04,129 --> 00:06:09,210
they are not open hardware they haven't

00:06:07,500 --> 00:06:11,520
done everything that we would ideally

00:06:09,210 --> 00:06:13,680
like to see the new is a community but

00:06:11,520 --> 00:06:15,449
in my personal opinion their motivations

00:06:13,680 --> 00:06:17,069
are good right there and not-for-profit

00:06:15,449 --> 00:06:19,349
foundation they've been associated with

00:06:17,069 --> 00:06:20,699
education for a long time a lot of them

00:06:19,349 --> 00:06:23,969
were involved in the original BBC

00:06:20,699 --> 00:06:26,159
microcomputer back in the 1980s so

00:06:23,969 --> 00:06:27,330
they've cut their teeth on it I think

00:06:26,159 --> 00:06:29,759
they're a pretty good player in this

00:06:27,330 --> 00:06:31,229
space and another reason for me to be

00:06:29,759 --> 00:06:32,669
interested in personally in doing this

00:06:31,229 --> 00:06:34,770
fedora recompile is because there's

00:06:32,669 --> 00:06:36,120
really no or very minimal fedora

00:06:34,770 --> 00:06:38,159
presence in the community there was a

00:06:36,120 --> 00:06:40,289
project called pedorra they did some

00:06:38,159 --> 00:06:42,779
releases based on fedora 18 19 and 20

00:06:40,289 --> 00:06:44,189
they were partial rebuilds and it for

00:06:42,779 --> 00:06:45,810
all intents and purposes appears to be

00:06:44,189 --> 00:06:47,550
pretty much dead they have not updated

00:06:45,810 --> 00:06:49,080
since then it's been difficult get in

00:06:47,550 --> 00:06:51,330
touch with them there's some interest in

00:06:49,080 --> 00:06:53,789
the raspberry pi 2 in fedora 20 for

00:06:51,330 --> 00:06:55,289
Peter Robinson talked about this that's

00:06:53,789 --> 00:06:57,990
not going to be quite the same thing and

00:06:55,289 --> 00:06:59,729
we'll see why in a minute why is it not

00:06:57,990 --> 00:07:01,649
yet supported advised fedora not yet

00:06:59,729 --> 00:07:04,500
supported on this the original pie and

00:07:01,649 --> 00:07:07,139
this device the PI 0 are armed v6 CPUs

00:07:04,500 --> 00:07:10,160
it is an older version of the arm CPU

00:07:07,139 --> 00:07:12,050
architecture is not binary compatible

00:07:10,160 --> 00:07:13,760
forward competitor you can't run v7

00:07:12,050 --> 00:07:15,650
basic you can't run for the current

00:07:13,760 --> 00:07:18,230
Fedora builds are too new to run on it

00:07:15,650 --> 00:07:20,300
they also require for Colonel at the

00:07:18,230 --> 00:07:22,910
moment although that is changing thank

00:07:20,300 --> 00:07:25,220
you and they require a binary bootloader

00:07:22,910 --> 00:07:27,710
blob so what have I done to make this

00:07:25,220 --> 00:07:29,690
work so far i have since early december

00:07:27,710 --> 00:07:31,610
done mock and then mocking rebuilds

00:07:29,690 --> 00:07:34,280
about 3,000 of the core packages in

00:07:31,610 --> 00:07:35,720
fedora and these are the binary packages

00:07:34,280 --> 00:07:38,240
most of the door is actually known are

00:07:35,720 --> 00:07:41,150
no architecture right i did use PI door

00:07:38,240 --> 00:07:43,520
to bootstrap it I am mostly unshackled

00:07:41,150 --> 00:07:45,170
from that now an interesting thing to

00:07:43,520 --> 00:07:47,150
know about this is the v6 architecture

00:07:45,170 --> 00:07:48,800
is actually an almost perfect strict

00:07:47,150 --> 00:07:51,920
subset of B 7 which means that I can use

00:07:48,800 --> 00:07:54,350
newer faster machines to compile the v6

00:07:51,920 --> 00:07:56,390
stuff using mock and mock truths right

00:07:54,350 --> 00:07:58,430
it's been a very time-consuming process

00:07:56,390 --> 00:07:59,690
I was warned about this by many people

00:07:58,430 --> 00:08:01,520
have done it before many people in

00:07:59,690 --> 00:08:03,260
fedora release engineering but it has

00:08:01,520 --> 00:08:04,640
been very rewarding and very interesting

00:08:03,260 --> 00:08:07,010
I've learned a tremendous amount about

00:08:04,640 --> 00:08:08,300
what goes into Fedora a few random

00:08:07,010 --> 00:08:09,770
thoughts don't have a whole lot of time

00:08:08,300 --> 00:08:12,170
but if you're going to do this yourself

00:08:09,770 --> 00:08:13,580
disable the check section you where the

00:08:12,170 --> 00:08:15,470
build requires don't always have to work

00:08:13,580 --> 00:08:17,720
you can fake them and in this particular

00:08:15,470 --> 00:08:19,880
case you can when it's win and you're

00:08:17,720 --> 00:08:21,980
really in a pinch you can be on the arm

00:08:19,880 --> 00:08:24,470
v7 architecture but say that you want to

00:08:21,980 --> 00:08:27,770
build the RPM for the other target and

00:08:24,470 --> 00:08:30,440
it mostly works be careful if you do

00:08:27,770 --> 00:08:32,000
something like that the other thing I've

00:08:30,440 --> 00:08:33,919
done with some help from Mike and clean

00:08:32,000 --> 00:08:35,660
is I have what I think is the smallest

00:08:33,919 --> 00:08:37,640
Koji cluster in the world the smallest

00:08:35,660 --> 00:08:41,870
build system it sits on top of a little

00:08:37,640 --> 00:08:43,280
shelf in my in my office I have seven

00:08:41,870 --> 00:08:45,170
builders and I'm going to be using those

00:08:43,280 --> 00:08:46,730
to do the work that's next hopefully

00:08:45,170 --> 00:08:48,920
with some help so I need to complete the

00:08:46,730 --> 00:08:52,160
first pass of these packaged builds I

00:08:48,920 --> 00:08:53,690
need to do a remix and rebranding finish

00:08:52,160 --> 00:08:55,010
up with the updates and rawhide and I

00:08:53,690 --> 00:08:57,950
want to leave myself enough time to try

00:08:55,010 --> 00:08:59,090
and turn it on so I won't even mention

00:08:57,950 --> 00:09:00,230
the rest of these so let's see if it

00:08:59,090 --> 00:09:04,790
works does anyone want to see if it

00:09:00,230 --> 00:09:06,690
works ok let's do a demo so if I switch

00:09:04,790 --> 00:09:11,160
this to hdmi

00:09:06,690 --> 00:09:14,120
and I plug this power in we should see

00:09:11,160 --> 00:09:14,120
with any luck

00:09:16,780 --> 00:09:26,020
I figured if there was any audience for

00:09:24,790 --> 00:09:28,900
which I could get a round of applause

00:09:26,020 --> 00:09:35,230
for a boot to text mode an assistant

00:09:28,900 --> 00:09:53,230
this would be it so it takes it's not

00:09:35,230 --> 00:09:55,480
the fastest machine in the world just to

00:09:53,230 --> 00:09:58,990
give a sense of how much is here and how

00:09:55,480 --> 00:10:03,090
much is left to do it should eventually

00:09:58,990 --> 00:10:03,090
say that there's almost 400 packages

00:10:11,360 --> 00:10:14,930
it takes a while it takes five minutes

00:10:13,220 --> 00:10:19,850
for the initial d NF command to run

00:10:14,930 --> 00:10:21,970
actually on this device so yeah and I

00:10:19,850 --> 00:10:23,870
here will do etsy fedora release

00:10:21,970 --> 00:10:25,190
although I have to remove that and

00:10:23,870 --> 00:10:27,769
rebrand it with something else be

00:10:25,190 --> 00:10:30,980
Robinson filming go to my fedora people

00:10:27,769 --> 00:10:33,709
page I mcleod put our people and in a

00:10:30,980 --> 00:10:35,870
subdirectory called arm SPC's the image

00:10:33,709 --> 00:10:37,070
that is running on this is there and i'm

00:10:35,870 --> 00:10:38,899
working on getting the rest of the

00:10:37,070 --> 00:10:40,970
recompile zup if you want to be involved

00:10:38,899 --> 00:10:42,709
in the recompile if you want to access

00:10:40,970 --> 00:10:55,399
to the codis system-- come talk to me as

00:10:42,709 --> 00:10:56,959
well is there any questions you I think

00:10:55,399 --> 00:10:58,579
the Panda board is another v7 machine

00:10:56,959 --> 00:11:00,500
you can and in fact the way that the

00:10:58,579 --> 00:11:02,390
Raspberry Pi people do things right now

00:11:00,500 --> 00:11:05,000
is they have an arm v6 users face that

00:11:02,390 --> 00:11:07,339
runs in everything even the raspberry pi

00:11:05,000 --> 00:11:08,390
2 and then they just sort it out with

00:11:07,339 --> 00:11:09,649
the bootloader I don't think you would

00:11:08,390 --> 00:11:12,740
want to run or anything else I think

00:11:09,649 --> 00:11:15,760
that it can run yeah upstream fedora

00:11:12,740 --> 00:11:15,760
this is a question

00:11:24,250 --> 00:11:28,760
it will in fact I tested it on a

00:11:26,900 --> 00:11:31,190
Raspberry Pi original before I got my

00:11:28,760 --> 00:11:32,840
hands on a zero so it will they're the

00:11:31,190 --> 00:11:41,510
same they are the same chip doesn't

00:11:32,840 --> 00:11:43,130
affect like you had a good it's not

00:11:41,510 --> 00:11:44,590
faster it's definitely not faster than

00:11:43,130 --> 00:11:46,970
any machines you can it used to be

00:11:44,590 --> 00:11:48,050
comparable when we had only single core

00:11:46,970 --> 00:11:49,280
arm boards but it's not pressed because

00:11:48,050 --> 00:11:52,190
I talked about that maybe you can make a

00:11:49,280 --> 00:11:53,810
build farm out of qmu instances but no

00:11:52,190 --> 00:11:56,660
it's not because you can I don't think

00:11:53,810 --> 00:11:59,300
there's a way to simulate strict rb6 on

00:11:56,660 --> 00:12:07,250
Q mu as best I can tell but back from

00:11:59,300 --> 00:12:09,350
Europe Jake I think I noticed that the

00:12:07,250 --> 00:12:11,360
Pearl package upstream actually does

00:12:09,350 --> 00:12:13,850
this every time it revs the version

00:12:11,360 --> 00:12:15,440
there's a swing version where it

00:12:13,850 --> 00:12:19,220
pretends that it can support either

00:12:15,440 --> 00:12:22,580
version of the API that was about it

00:12:19,220 --> 00:12:24,500
there's so many of them it's you know in

00:12:22,580 --> 00:12:27,910
theory this should be something that you

00:12:24,500 --> 00:12:27,910
know how to I'm out of time thank

00:12:32,320 --> 00:12:58,490
got to do a graceful shutdown of course

00:12:34,970 --> 00:13:01,520
otherwise they actually let me actually

00:12:58,490 --> 00:13:03,680
have the package is ready for that okay

00:13:01,520 --> 00:13:05,840
so let's move on right to the next

00:13:03,680 --> 00:13:08,210
speaker but let's kind of display for it

00:13:05,840 --> 00:13:19,390
looks just time off it's just the time

00:13:08,210 --> 00:13:19,390
okay time is ticking

00:13:47,160 --> 00:13:51,270
that's why I didn't bring my laptop

00:14:23,720 --> 00:14:36,450
hey thank you okay so what's on the next

00:14:27,720 --> 00:14:38,360
speaker hello just goes from here so I

00:14:36,450 --> 00:14:41,250
others a lot of things i'll talk about

00:14:38,360 --> 00:14:44,010
reproducible builds what they are and

00:14:41,250 --> 00:14:45,690
the stage is a great way quick one so

00:14:44,010 --> 00:14:48,390
I'm not doing Debbie and stuff that's

00:14:45,690 --> 00:14:51,450
boring this work is done by all these

00:14:48,390 --> 00:14:53,760
people I'm just one of them um who are

00:14:51,450 --> 00:14:56,030
you it's the question who have here to

00:14:53,760 --> 00:15:01,740
talk about we go to superb it's already

00:14:56,030 --> 00:15:03,960
so not so many it's good motivation why

00:15:01,740 --> 00:15:08,040
do we do this this was well described by

00:15:03,960 --> 00:15:11,310
mike perry and session at the last the

00:15:08,040 --> 00:15:13,950
last but one congress I just summarize

00:15:11,310 --> 00:15:16,680
it shortly really watch this talk it's

00:15:13,950 --> 00:15:18,810
really good that a remote root exploit

00:15:16,680 --> 00:15:21,540
in ssh where the difference in the

00:15:18,810 --> 00:15:24,510
binary was one single bit in a 500 kilo

00:15:21,540 --> 00:15:26,940
byte binary to flip a bit you get root

00:15:24,510 --> 00:15:29,310
exploit they also had a kernel module

00:15:26,940 --> 00:15:31,320
which modified the source in memory and

00:15:29,310 --> 00:15:33,120
not on disk so you look at the file on

00:15:31,320 --> 00:15:36,320
disk it's all fine the source is fine

00:15:33,120 --> 00:15:39,510
you compile it you got vector inside

00:15:36,320 --> 00:15:41,790
then think about the amount of money

00:15:39,510 --> 00:15:44,850
some entities have like the censorship

00:15:41,790 --> 00:15:46,770
the budget the censorship budget of iran

00:15:44,850 --> 00:15:48,510
100 million dollar it's your

00:15:46,770 --> 00:15:50,430
infrastructure good enough to sustain

00:15:48,510 --> 00:15:53,790
attackers which have such so many

00:15:50,430 --> 00:15:55,290
resources it's really i go through it

00:15:53,790 --> 00:15:58,530
very briefly because it's a long talk

00:15:55,290 --> 00:16:00,780
and I'll just summarize it here and you

00:15:58,530 --> 00:16:03,450
leave your computer's alone and USB 3 s

00:16:00,780 --> 00:16:05,940
direct memory access so there's ways to

00:16:03,450 --> 00:16:08,150
get into your machine and you really

00:16:05,940 --> 00:16:12,630
don't know what you're running so that

00:16:08,150 --> 00:16:15,270
we try to address this and another

00:16:12,630 --> 00:16:18,630
example from real life so the CIA made a

00:16:15,270 --> 00:16:20,600
paper describing how they put a trillion

00:16:18,630 --> 00:16:22,790
into an SDK which developers

00:16:20,600 --> 00:16:24,230
download and which will the sources are

00:16:22,790 --> 00:16:26,690
fine but there's a back door and the

00:16:24,230 --> 00:16:29,959
binder is created and this was found in

00:16:26,690 --> 00:16:33,860
the wild last year xcode ghost which was

00:16:29,959 --> 00:16:35,930
the thing for Apple iOS and the service

00:16:33,860 --> 00:16:37,459
was slow so somebody that said faster

00:16:35,930 --> 00:16:39,199
service and these servers were back to

00:16:37,459 --> 00:16:42,680
order to build applications you're

00:16:39,199 --> 00:16:45,980
doomed and we chat for xos was affected

00:16:42,680 --> 00:16:49,759
by it 20 million users got routed so

00:16:45,980 --> 00:16:51,470
this happens in the real world and our

00:16:49,759 --> 00:16:53,660
solution is that we promised that

00:16:51,470 --> 00:16:57,380
everybody can recreate the same binary

00:16:53,660 --> 00:17:00,529
from the same source anybody should be

00:16:57,380 --> 00:17:04,069
able to do this and we call this

00:17:00,529 --> 00:17:05,600
reproducible boots so if there's bit by

00:17:04,069 --> 00:17:08,780
bit identically we call that recruiter

00:17:05,600 --> 00:17:10,970
syllables and wait I had a day mold

00:17:08,780 --> 00:17:13,309
which I skipped so what I show him the

00:17:10,970 --> 00:17:15,350
demo I built a debian package five times

00:17:13,309 --> 00:17:23,270
and get five times the different checks

00:17:15,350 --> 00:17:27,230
are and who are what did I press or you

00:17:23,270 --> 00:17:29,150
don't know okay so i skipped the demo

00:17:27,230 --> 00:17:33,230
because it takes too long but now i will

00:17:29,150 --> 00:17:34,789
pick and so when you build it five times

00:17:33,230 --> 00:17:36,860
you get five times the depth with the

00:17:34,789 --> 00:17:39,980
same check sir it's really really simple

00:17:36,860 --> 00:17:42,650
it's all the same you don't have to look

00:17:39,980 --> 00:17:45,770
inside the Debian archive you just see

00:17:42,650 --> 00:17:48,530
it on the checksum outside and we think

00:17:45,770 --> 00:17:49,789
this should really be the norm all free

00:17:48,530 --> 00:17:51,980
software should be built that way

00:17:49,789 --> 00:17:53,870
actually we think it's all should only

00:17:51,980 --> 00:17:59,059
be called free software it's it's binary

00:17:53,870 --> 00:18:01,880
reproducible and there's more benefits

00:17:59,059 --> 00:18:03,740
than security smaller data's gives you

00:18:01,880 --> 00:18:06,650
faster updates if you do binary data

00:18:03,740 --> 00:18:10,190
updates in debian we've seen lots of QA

00:18:06,650 --> 00:18:12,620
efforts like we found strange bucks like

00:18:10,190 --> 00:18:14,539
we found packages which will fail to bid

00:18:12,620 --> 00:18:16,789
in the future because we test building

00:18:14,539 --> 00:18:18,500
in the future so we can there was

00:18:16,789 --> 00:18:20,510
different days so we found lots of

00:18:18,500 --> 00:18:22,909
things Google does reproducible builds

00:18:20,510 --> 00:18:24,830
for security of course but also they

00:18:22,909 --> 00:18:26,809
safe developer time and develop a time

00:18:24,830 --> 00:18:30,520
is money because developers wait for the

00:18:26,809 --> 00:18:30,520
bills to finish and they can cash more

00:18:31,300 --> 00:18:36,800
so what we've done we've set up now we

00:18:34,670 --> 00:18:38,210
started with the Debian wiki which

00:18:36,800 --> 00:18:40,960
Debian Vicki still has some good

00:18:38,210 --> 00:18:44,180
information but three months ago I think

00:18:40,960 --> 00:18:47,900
we started this reproducible minus P dog

00:18:44,180 --> 00:18:49,670
web page which describes why and as

00:18:47,900 --> 00:18:51,530
documentation how to address common

00:18:49,670 --> 00:18:54,050
issues and also lists projects working

00:18:51,530 --> 00:18:58,910
on it if you haven't gone there please

00:18:54,050 --> 00:19:01,280
go there um lots of issues are described

00:18:58,910 --> 00:19:05,090
in by luna in his talk at the CC she

00:19:01,280 --> 00:19:08,780
came this last year where he describes

00:19:05,090 --> 00:19:11,570
issues and how to fix them um so for

00:19:08,780 --> 00:19:14,120
example G sub minus n is one thing you

00:19:11,570 --> 00:19:16,370
want sorting is depending on the locale

00:19:14,120 --> 00:19:18,680
which smocks address in the fedora case

00:19:16,370 --> 00:19:20,720
but in other cases not so this talk

00:19:18,680 --> 00:19:23,000
really has lots of information if you

00:19:20,720 --> 00:19:27,740
want to see a video watch this video and

00:19:23,000 --> 00:19:30,980
that's nice things the most common

00:19:27,740 --> 00:19:32,750
problem is timestamps mostly it's not so

00:19:30,980 --> 00:19:34,760
much really in binaries though some

00:19:32,750 --> 00:19:38,210
binaries to have it but it's the

00:19:34,760 --> 00:19:40,580
documentation tools for pie doc and pan

00:19:38,210 --> 00:19:43,100
doc and whoever they all put timestamps

00:19:40,580 --> 00:19:45,190
in the documentation they can irate and

00:19:43,100 --> 00:19:48,880
mostly these time stems are also

00:19:45,190 --> 00:19:51,230
unchanged by time zones or locate arm

00:19:48,880 --> 00:19:52,790
which again in the mock a smoke

00:19:51,230 --> 00:19:55,610
normalizes the environment so that's

00:19:52,790 --> 00:19:57,410
fine but we look at also at the upstream

00:19:55,610 --> 00:20:00,140
thing and some people don't normalized

00:19:57,410 --> 00:20:03,230
environments and there's very few other

00:20:00,140 --> 00:20:06,140
issues I've come to that in a second

00:20:03,230 --> 00:20:08,840
Debian we have identified the issues so

00:20:06,140 --> 00:20:13,010
there's not these are really the issues

00:20:08,840 --> 00:20:14,870
time zones time stems and low case for

00:20:13,010 --> 00:20:18,260
the time stamp problem we've invented

00:20:14,870 --> 00:20:20,330
source stayed april arm which is defined

00:20:18,260 --> 00:20:24,110
as the last modification of the source

00:20:20,330 --> 00:20:27,590
code that can be used instead of the

00:20:24,110 --> 00:20:29,420
current day that can initialize random

00:20:27,590 --> 00:20:32,090
seats debian we said it from the last

00:20:29,420 --> 00:20:34,340
change log entry you can also use the

00:20:32,090 --> 00:20:37,120
date of the last git commit and that is

00:20:34,340 --> 00:20:41,000
deterministic because it doesn't change

00:20:37,120 --> 00:20:43,490
and many upstream software supported

00:20:41,000 --> 00:20:44,750
like we have a patch for GCC which will

00:20:43,490 --> 00:20:48,050
get in hopefully in

00:20:44,750 --> 00:20:50,840
development cycle of GCC we've patched I

00:20:48,050 --> 00:20:53,900
think 30 or something software's and the

00:20:50,840 --> 00:20:56,840
BS net bsd and freebsd use it now geeks

00:20:53,900 --> 00:21:00,490
use it arch linux we have a patch for

00:20:56,840 --> 00:21:04,970
RPM but which also use it i think um

00:21:00,490 --> 00:21:06,440
we've written a spec which is just two

00:21:04,970 --> 00:21:11,050
kilo bytes of text or something is

00:21:06,440 --> 00:21:13,670
really short spec defining it arm and

00:21:11,050 --> 00:21:15,560
we've set up a test set up where we

00:21:13,670 --> 00:21:19,550
continuously test debian testing

00:21:15,560 --> 00:21:22,880
unstable experimental arm but not by now

00:21:19,550 --> 00:21:25,370
also coreboot open wrt net PSD freebsd

00:21:22,880 --> 00:21:27,650
arch linux fedora and soon after aight

00:21:25,370 --> 00:21:32,300
and Geeks the moment we are only

00:21:27,650 --> 00:21:35,690
building 800 fedora packages I not all

00:21:32,300 --> 00:21:38,690
and this is running a nice big hardware

00:21:35,690 --> 00:21:41,240
and you see that the test was 29

00:21:38,690 --> 00:21:42,950
contributors there's what 10 all of

00:21:41,240 --> 00:21:47,210
these are not debian people but they're

00:21:42,950 --> 00:21:50,060
from other projects arm and what we do

00:21:47,210 --> 00:21:53,510
is we bill it twice and in between we

00:21:50,060 --> 00:21:55,490
vary the environment arm and then we

00:21:53,510 --> 00:22:01,370
compare the results that is to find

00:21:55,490 --> 00:22:03,200
issues so we um there's something again

00:22:01,370 --> 00:22:05,330
Mauch will normalize some environments

00:22:03,200 --> 00:22:07,370
but other things not what we're not

00:22:05,330 --> 00:22:10,790
testing at the moment is the fire system

00:22:07,370 --> 00:22:13,040
we've made a fuser fire system which

00:22:10,790 --> 00:22:14,810
will wear red deer returns a random

00:22:13,040 --> 00:22:17,150
order and the block sizes are also

00:22:14,810 --> 00:22:19,610
random so there you find we find

00:22:17,150 --> 00:22:22,730
artifacts of this we're not changing the

00:22:19,610 --> 00:22:29,960
CPU we yet on amd64 we do so oh I'm out

00:22:22,730 --> 00:22:35,490
of time yes chef no eight min ok all

00:22:29,960 --> 00:22:38,520
right I just one thing to dilute

00:22:35,490 --> 00:22:41,100
I tested it before what I planned it to

00:22:38,520 --> 00:22:43,980
me the status of Fedora so we r do test

00:22:41,100 --> 00:22:47,790
fedora we have hatches arm we have a

00:22:43,980 --> 00:22:50,190
repository but it doesn't work yet we

00:22:47,790 --> 00:22:52,110
need fedora people to look into it I'll

00:22:50,190 --> 00:22:54,860
be here tonight tomorrow please talk to

00:22:52,110 --> 00:22:54,860
me thank you

00:23:07,350 --> 00:23:18,340
that's ok so that's time for the next

00:23:13,690 --> 00:23:20,640
speaker so let's give a round or close

00:23:18,340 --> 00:23:20,640
to you

00:23:45,240 --> 00:23:51,280
can you hear me okay so we've got 10

00:23:48,850 --> 00:23:55,690
minutes hubli already less to explain

00:23:51,280 --> 00:23:58,840
you why you should write up steam

00:23:55,690 --> 00:24:01,840
metadata for your application and

00:23:58,840 --> 00:24:07,020
plugins and how you can easily make a

00:24:01,840 --> 00:24:10,410
defense so for the last 20 years

00:24:07,020 --> 00:24:14,520
software app discoverability and

00:24:10,410 --> 00:24:20,679
installation on Linux was mostly about

00:24:14,520 --> 00:24:22,419
software package managers so on the on

00:24:20,679 --> 00:24:27,700
the desktop the experience is something

00:24:22,419 --> 00:24:31,390
like this that's the TMX so we pretty

00:24:27,700 --> 00:24:33,280
much get a list of packages with the

00:24:31,390 --> 00:24:35,770
names of the packages and short

00:24:33,280 --> 00:24:43,659
descriptions if you search for something

00:24:35,770 --> 00:24:48,419
like instant messaging you get like

00:24:43,659 --> 00:24:51,789
nothing so I as an experienced user

00:24:48,419 --> 00:24:54,039
enjoy working with package managers if

00:24:51,789 --> 00:24:58,559
you know what you want to install that's

00:24:54,039 --> 00:25:01,419
like usually the most effective way to

00:24:58,559 --> 00:25:03,669
get it down on the other hand for new

00:25:01,419 --> 00:25:07,510
and LH users who are now where they used

00:25:03,669 --> 00:25:10,960
to like app stores and Google Play and

00:25:07,510 --> 00:25:13,840
such catalogs this is something that

00:25:10,960 --> 00:25:15,669
completely puzzles them so to stay in

00:25:13,840 --> 00:25:20,590
the game we had to come come up with

00:25:15,669 --> 00:25:26,710
something similar so one of the apps

00:25:20,590 --> 00:25:28,960
that this is from the genome project is

00:25:26,710 --> 00:25:32,200
signum software which is like as you can

00:25:28,960 --> 00:25:39,789
see like a classic catalog app so if you

00:25:32,200 --> 00:25:42,280
if you do the same search in stone yeah

00:25:39,789 --> 00:25:46,350
you actually get some reasonable

00:25:42,280 --> 00:25:49,360
phase-outs some use flies out so but

00:25:46,350 --> 00:25:53,110
where does the data come from how it's

00:25:49,360 --> 00:25:55,960
the catalog user actually created so

00:25:53,110 --> 00:25:56,860
this is ignore software and also not not

00:25:55,960 --> 00:26:00,549
only known but

00:25:56,860 --> 00:26:04,059
so KD 1 which is a catalog for for KDE

00:26:00,549 --> 00:26:07,120
and also open to Software Center

00:26:04,059 --> 00:26:10,540
switching to the standard all those

00:26:07,120 --> 00:26:14,410
projects they are using digital agnostic

00:26:10,540 --> 00:26:19,360
up steam XML format so we can freaking

00:26:14,410 --> 00:26:24,490
find a specification on farius dark and

00:26:19,360 --> 00:26:28,299
the project is about writing metadata

00:26:24,490 --> 00:26:31,990
not only for desktop apps but also for

00:26:28,299 --> 00:26:34,330
add-ons phones codecs and so on I'd like

00:26:31,990 --> 00:26:38,530
to focus on the desktop applications and

00:26:34,330 --> 00:26:44,049
I don't so I'll show you right away how

00:26:38,530 --> 00:26:48,640
such an XML file with metadata looks

00:26:44,049 --> 00:26:51,610
like this is XML file for now tools is

00:26:48,640 --> 00:26:54,400
that is not the final version now it was

00:26:51,610 --> 00:26:56,620
actually add some more stuff when it's

00:26:54,400 --> 00:26:59,080
built but I wanted to show this version

00:26:56,620 --> 00:27:01,570
because it's it's clear there are no

00:26:59,080 --> 00:27:04,929
translations and stuff like that so you

00:27:01,570 --> 00:27:07,210
see the idea that needs to be the same

00:27:04,929 --> 00:27:10,900
as the desktop file of that application

00:27:07,210 --> 00:27:13,720
that's identifier you need to have a

00:27:10,900 --> 00:27:20,080
life sense for that metadata i used to

00:27:13,720 --> 00:27:24,160
use gnu documentation gnu free

00:27:20,080 --> 00:27:27,640
documentation but apparently some

00:27:24,160 --> 00:27:29,650
distributions like debian have a problem

00:27:27,640 --> 00:27:33,730
with his license and actually some

00:27:29,650 --> 00:27:36,490
projects i sent the metadata to had to

00:27:33,730 --> 00:27:39,460
chew had to I like stands it so that's

00:27:36,490 --> 00:27:42,429
why I in the end ended up with creative

00:27:39,460 --> 00:27:45,429
comments 0 which is preferably like the

00:27:42,429 --> 00:27:48,280
best the best way to go for this

00:27:45,429 --> 00:27:52,179
metadata then you've got like a longer

00:27:48,280 --> 00:27:54,900
description you can add kudos which is

00:27:52,179 --> 00:27:59,860
actually not defined in the upstream

00:27:54,900 --> 00:28:02,440
specification but it's helps to sort the

00:27:59,860 --> 00:28:06,230
applications like to identify the

00:28:02,440 --> 00:28:10,190
quality of the application for the user

00:28:06,230 --> 00:28:13,520
and also like homepage of the project

00:28:10,190 --> 00:28:15,559
and so on and then the final version

00:28:13,520 --> 00:28:20,150
looks like this as you can see you can

00:28:15,559 --> 00:28:24,559
also at localization so you can hook it

00:28:20,150 --> 00:28:28,540
up to your get text system turns effects

00:28:24,559 --> 00:28:34,780
whatever and you can let the translators

00:28:28,540 --> 00:28:40,210
translate also the metadata it also adds

00:28:34,780 --> 00:28:43,040
is it somewhere here you can also add

00:28:40,210 --> 00:28:45,530
screenshots the only thing i don't like

00:28:43,040 --> 00:28:48,590
about the skin shows is that they staley

00:28:45,530 --> 00:28:51,860
no centralized repository for them so

00:28:48,590 --> 00:28:54,200
you actually have to find someplace we

00:28:51,860 --> 00:28:56,780
are to locate the dos game shots and the

00:28:54,200 --> 00:29:01,460
distributions download them when they

00:28:56,780 --> 00:29:04,040
built the database of applications so i

00:29:01,460 --> 00:29:06,740
think this could be actually improved

00:29:04,040 --> 00:29:09,770
hopefully in the future so once once you

00:29:06,740 --> 00:29:12,950
have this ideally you should you should

00:29:09,770 --> 00:29:15,290
send it to us the upstream project

00:29:12,950 --> 00:29:20,059
upstream projects should ship it either

00:29:15,290 --> 00:29:23,630
like install it already in the india

00:29:20,059 --> 00:29:26,480
built escapes or they can also only

00:29:23,630 --> 00:29:28,580
include it in the tag ball and then you

00:29:26,480 --> 00:29:33,350
can take care of it in the spectral in

00:29:28,580 --> 00:29:38,240
in federal case so i'll show you such a

00:29:33,350 --> 00:29:42,679
spec file so this is for example for a

00:29:38,240 --> 00:29:46,100
plug-in telegram plugin for 4p gene you

00:29:42,679 --> 00:29:52,450
just hear like if item i just copy the

00:29:46,100 --> 00:29:58,850
the xml file to you usershare f data

00:29:52,450 --> 00:30:02,320
path you should also add check here that

00:29:58,850 --> 00:30:09,919
validates that the xml file actually

00:30:02,320 --> 00:30:13,220
passes the standard and that's pretty

00:30:09,919 --> 00:30:17,010
much it and fedora and i suppose our

00:30:13,220 --> 00:30:21,690
distribution has the similar thing

00:30:17,010 --> 00:30:24,660
hands escaped that looks for those XML

00:30:21,690 --> 00:30:28,230
files in packages once it finally built

00:30:24,660 --> 00:30:33,990
the database connects the package with

00:30:28,230 --> 00:30:37,050
that metadata and k is the data for you

00:30:33,990 --> 00:30:39,930
know software and also I mentioned that

00:30:37,050 --> 00:30:43,650
you can write metadata for aidens as

00:30:39,930 --> 00:30:47,580
well which are actually much easier to I

00:30:43,650 --> 00:30:50,100
that's like fairly short xml file it

00:30:47,580 --> 00:30:52,400
needs very short description it doesn't

00:30:50,100 --> 00:30:55,740
like wire and it's going showed anything

00:30:52,400 --> 00:31:01,200
so this takes like five minutes to write

00:30:55,740 --> 00:31:03,780
and I started an initiative in Padua to

00:31:01,200 --> 00:31:06,270
actually cover the add-ons because we've

00:31:03,780 --> 00:31:08,160
covered the applications pretty well but

00:31:06,270 --> 00:31:11,220
still be for example have now to loose

00:31:08,160 --> 00:31:13,590
in the catalog but now tools has like

00:31:11,220 --> 00:31:15,600
ten add-ons and the users don't know

00:31:13,590 --> 00:31:18,420
about them because the atoms that are

00:31:15,600 --> 00:31:20,610
not listed in the profile of notice so

00:31:18,420 --> 00:31:24,240
here you can actually contribute you can

00:31:20,610 --> 00:31:26,520
write the xml file you can submit it up

00:31:24,240 --> 00:31:30,270
steam or you can submit it downstream as

00:31:26,520 --> 00:31:34,140
well if the app same doesn't is too is

00:31:30,270 --> 00:31:36,300
too slow to accept it or doesn't want to

00:31:34,140 --> 00:31:39,600
accept it and that's how we can actually

00:31:36,300 --> 00:31:47,180
build the metadata and the catalog even

00:31:39,600 --> 00:31:52,580
more I just show you how it looks so

00:31:47,180 --> 00:31:55,470
once the application has met like

00:31:52,580 --> 00:31:58,920
plugins of the replication have metadata

00:31:55,470 --> 00:32:01,910
then they are listed soy fertilization

00:31:58,920 --> 00:32:04,290
is in check but I suppose you understand

00:32:01,910 --> 00:32:06,600
it's listed in the profile of the

00:32:04,290 --> 00:32:10,800
applications of the user immediately no

00:32:06,600 --> 00:32:15,500
CS this this software actually has some

00:32:10,800 --> 00:32:18,870
extensions that can be useful for me

00:32:15,500 --> 00:32:21,470
yeah and that's pretty much it thank you

00:32:18,870 --> 00:32:21,470
for your attention

00:32:27,370 --> 00:32:35,350
he thinks yoga and welcome over neck our

00:32:30,800 --> 00:32:35,350
last speaker for today actually given

00:33:02,710 --> 00:33:07,659
I'm going to talk about cute web engine

00:33:05,169 --> 00:33:12,429
which i think is the future of web

00:33:07,659 --> 00:33:14,890
browsing so first let me shortly

00:33:12,429 --> 00:33:17,559
introduce myself I'm Kevin copra ave

00:33:14,890 --> 00:33:21,399
benefit or a packager since 2007 and

00:33:17,559 --> 00:33:23,409
maintain 46 packages currently and my

00:33:21,399 --> 00:33:25,720
employer is dug up to optimization

00:33:23,409 --> 00:33:30,100
technologies can be ha and I'm also

00:33:25,720 --> 00:33:33,399
doing a PhD in mathematics so what is

00:33:30,100 --> 00:33:35,890
cute web engine it's a new web engine

00:33:33,399 --> 00:33:38,980
that is available in cute five since

00:33:35,890 --> 00:33:42,520
version 5.4 it has been reasonably

00:33:38,980 --> 00:33:44,770
feature complete since 5.6 which is

00:33:42,520 --> 00:33:48,429
about to be released there's already

00:33:44,770 --> 00:33:51,070
better available and it's available in

00:33:48,429 --> 00:33:52,690
fedora at least Android they will come

00:33:51,070 --> 00:33:55,240
to that later it's a replacement for

00:33:52,690 --> 00:33:57,700
cute WebKit but not really it's not a

00:33:55,240 --> 00:34:00,070
drop-in replacement but the way it works

00:33:57,700 --> 00:34:02,710
is that cute WebKit has been deprecated

00:34:00,070 --> 00:34:04,659
since cube 5.5 it's still available but

00:34:02,710 --> 00:34:07,419
is no longer actively maintained and

00:34:04,659 --> 00:34:09,609
cute web engine is based on Google's

00:34:07,419 --> 00:34:11,710
chromium which is nice because it's

00:34:09,609 --> 00:34:15,550
modern up-to-date but the drawback is

00:34:11,710 --> 00:34:18,639
that it's hard to package so why cute

00:34:15,550 --> 00:34:20,980
web engine because the old cute WebKit

00:34:18,639 --> 00:34:22,389
was based on an old WebKit branch really

00:34:20,980 --> 00:34:24,760
really old one which is no longer

00:34:22,389 --> 00:34:26,260
supported by upstream WebKit it's no

00:34:24,760 --> 00:34:28,510
longer up to date with the current web

00:34:26,260 --> 00:34:31,089
standards and most importantly even the

00:34:28,510 --> 00:34:34,030
security updates are to our to backport

00:34:31,089 --> 00:34:37,540
so no there is missing a lot of security

00:34:34,030 --> 00:34:40,300
updates and a rebasing to a newer WebKit

00:34:37,540 --> 00:34:42,190
was not visible because the cute project

00:34:40,300 --> 00:34:46,599
just did not have the resources for it

00:34:42,190 --> 00:34:48,730
and they change from WebKit 12 web key

00:34:46,599 --> 00:34:52,030
to and WebKit one is no longer supported

00:34:48,730 --> 00:34:55,240
and to support web key too cute WebKit

00:34:52,030 --> 00:34:56,980
would have to change a lot and so they

00:34:55,240 --> 00:34:59,230
said if we're going to have to change

00:34:56,980 --> 00:35:02,320
the oil api anyway we're going to just

00:34:59,230 --> 00:35:07,000
pick chromium which is modern up-to-date

00:35:02,320 --> 00:35:09,790
with current web standards and and they

00:35:07,000 --> 00:35:12,580
also beg port security updates with

00:35:09,790 --> 00:35:16,150
stable branch because as you can see

00:35:12,580 --> 00:35:18,520
cute web engine 5.6 is based on chrome

00:35:16,150 --> 00:35:20,500
45 which is not their latest release but

00:35:18,520 --> 00:35:24,010
they have backported or the security

00:35:20,500 --> 00:35:25,960
fixes that irrelevant it covers a

00:35:24,010 --> 00:35:28,390
complete API to build a few browser

00:35:25,960 --> 00:35:31,359
there is already one browser which is

00:35:28,390 --> 00:35:34,150
called capsular which uses it it

00:35:31,359 --> 00:35:37,150
supports or the modern html5 stuff if

00:35:34,150 --> 00:35:39,069
you care about Flash you can drop in the

00:35:37,150 --> 00:35:41,890
plot but you have to do it yourself it

00:35:39,069 --> 00:35:45,430
won't do it for you and in the future

00:35:41,890 --> 00:35:48,809
the next release which will be in about

00:35:45,430 --> 00:35:52,299
six months or so will be cute web engine

00:35:48,809 --> 00:35:55,180
5.7 it will be based on a newer chromium

00:35:52,299 --> 00:35:57,130
at least 47 it will have all the

00:35:55,180 --> 00:35:59,020
features from above of course but in

00:35:57,130 --> 00:36:01,960
addition it will also support printing

00:35:59,020 --> 00:36:05,289
and there will also be an option support

00:36:01,960 --> 00:36:07,809
for the blob that provides the AEM etrm

00:36:05,289 --> 00:36:10,390
but there are two you have to install it

00:36:07,809 --> 00:36:12,970
yourself if you want to use it now as a

00:36:10,390 --> 00:36:15,700
developer how you would use it is there

00:36:12,970 --> 00:36:18,819
two possibilities either in c++ or in

00:36:15,700 --> 00:36:21,970
qml and think you imagine you can use it

00:36:18,819 --> 00:36:25,299
directly or through raipur in c++ there

00:36:21,970 --> 00:36:29,890
is this Q web engine view C++ class is

00:36:25,299 --> 00:36:32,170
the most powerful API and tells you

00:36:29,890 --> 00:36:37,059
what's what for example capsular two

00:36:32,170 --> 00:36:39,010
uses and in qml you can use cue cue to

00:36:37,059 --> 00:36:42,039
adventure indirectly for a native API

00:36:39,010 --> 00:36:45,160
that's the web engine view class where

00:36:42,039 --> 00:36:48,220
and the it's nice because it's easy to

00:36:45,160 --> 00:36:52,210
integrate into a QM a user interface but

00:36:48,220 --> 00:36:54,190
API is more limited than in C++ or then

00:36:52,210 --> 00:36:56,410
there is also a cross-platform wrapper

00:36:54,190 --> 00:36:58,569
which is useful for mobile platforms we

00:36:56,410 --> 00:37:02,589
were perfect where you don't have cute

00:36:58,569 --> 00:37:05,500
web engine and it offers a similar API

00:37:02,589 --> 00:37:07,329
to the web ancient view but even more

00:37:05,500 --> 00:37:09,520
restricted because it's restricted to

00:37:07,329 --> 00:37:12,309
the lowest common denominator that you

00:37:09,520 --> 00:37:14,319
have in also in the native browser

00:37:12,309 --> 00:37:16,000
that's used on a mobile platforms on the

00:37:14,319 --> 00:37:19,420
desktop platforms it uses cute web

00:37:16,000 --> 00:37:21,490
engine at least on linux and the

00:37:19,420 --> 00:37:25,690
wrappers not package it in fedora but

00:37:21,490 --> 00:37:28,210
it's very small so it's easy to package

00:37:25,690 --> 00:37:30,450
reg which is just no app that that needs

00:37:28,210 --> 00:37:30,450
it

00:37:30,760 --> 00:37:38,870
so I packaged the cute web engine the

00:37:36,140 --> 00:37:41,320
package is called cute 5q blab engine

00:37:38,870 --> 00:37:43,820
like all the other cute five modules and

00:37:41,320 --> 00:37:46,310
it was quite somewhere to work to

00:37:43,820 --> 00:37:48,680
package it I unmannered libraries

00:37:46,310 --> 00:37:51,290
whenever possible there is somewhere

00:37:48,680 --> 00:37:53,600
cute web engine 5.6 already does it

00:37:51,290 --> 00:37:56,420
there are some others were chromium

00:37:53,600 --> 00:38:00,830
supports unbundling but cute web entrant

00:37:56,420 --> 00:38:02,330
into it so I I made it to it and yeah

00:38:00,830 --> 00:38:05,720
there's some other small stuff and I'm

00:38:02,330 --> 00:38:08,600
bandit then what was really annoying is

00:38:05,720 --> 00:38:11,870
that chromium removed support for x86

00:38:08,600 --> 00:38:16,910
without sec to in fedora were supposed

00:38:11,870 --> 00:38:19,190
to support or the x86 machines with only

00:38:16,910 --> 00:38:23,840
conditioner move and no other additional

00:38:19,190 --> 00:38:26,660
instruction sets and so I restored the

00:38:23,840 --> 00:38:29,030
random detection that was there in all

00:38:26,660 --> 00:38:32,060
versions of chromium I added some where

00:38:29,030 --> 00:38:34,370
there was new stuff sec2 stuff added and

00:38:32,060 --> 00:38:36,410
the idea is that everything needs to be

00:38:34,370 --> 00:38:38,780
run 10 detective lazaro ways were slow

00:38:36,410 --> 00:38:42,380
down the SEC two machines which I don't

00:38:38,780 --> 00:38:44,860
want to do and this works already I'm

00:38:42,380 --> 00:38:47,780
not working on on three streamer support

00:38:44,860 --> 00:38:50,540
because there is juice restreamer

00:38:47,780 --> 00:38:52,250
backend for chromium by Samsung and I'm

00:38:50,540 --> 00:38:54,400
trying to back worry too cute web

00:38:52,250 --> 00:38:56,960
engines chromium but it's not done yet

00:38:54,400 --> 00:38:58,970
yeah and the package does not replace

00:38:56,960 --> 00:39:01,070
cute web key data set it's already

00:38:58,970 --> 00:39:04,760
available in right except gstreamer

00:39:01,070 --> 00:39:07,160
which which I'm still working on and for

00:39:04,760 --> 00:39:11,120
fedora 22 and 23 if there it will be

00:39:07,160 --> 00:39:13,010
acute 5.6 update it will be included but

00:39:11,120 --> 00:39:15,710
for now you can get it from from the

00:39:13,010 --> 00:39:20,570
copper there is one for Q 12.6 and i

00:39:15,710 --> 00:39:23,120
also have a dedicated one then there is

00:39:20,570 --> 00:39:27,740
cap Zilla which is a web browser that

00:39:23,120 --> 00:39:29,600
uses cute web engine at the current

00:39:27,740 --> 00:39:32,030
version which will become capsular to

00:39:29,600 --> 00:39:34,010
users cute web engine instead of cute

00:39:32,030 --> 00:39:37,730
WebKit right now there is a snapshot

00:39:34,010 --> 00:39:40,770
from get master which is already in

00:39:37,730 --> 00:39:43,230
right it's a modern browser for

00:39:40,770 --> 00:39:46,710
users it can be an eternity to Firefox

00:39:43,230 --> 00:39:51,060
and to proprietary browsers like Chrome

00:39:46,710 --> 00:39:54,480
and it has optimal test of integration

00:39:51,060 --> 00:39:56,220
unlike Firefox for example just like the

00:39:54,480 --> 00:39:59,730
earth capsular one which was cute

00:39:56,220 --> 00:40:04,830
webkit-based for example it has native

00:39:59,730 --> 00:40:08,310
Atkins native five dialogues it it uses

00:40:04,830 --> 00:40:11,730
cute so it adapts to the style or also

00:40:08,310 --> 00:40:13,710
refer to that white ass telling norm of

00:40:11,730 --> 00:40:17,130
course to the plasma one because it's

00:40:13,710 --> 00:40:20,760
cute it supports native notifications

00:40:17,130 --> 00:40:22,590
and so on you can also use K wallet

00:40:20,760 --> 00:40:25,440
ornament or keyring which is supported

00:40:22,590 --> 00:40:28,320
through plugins and they said it's

00:40:25,440 --> 00:40:30,510
already in right and I have a cute web

00:40:28,320 --> 00:40:33,990
engine copper repository where you can

00:40:30,510 --> 00:40:36,690
get it for fedora 22 and 23 it were not

00:40:33,990 --> 00:40:39,540
beneficial fodor 22 and 23 updates

00:40:36,690 --> 00:40:42,480
because it replaces capsular one so it's

00:40:39,540 --> 00:40:44,280
a new major version and so these are the

00:40:42,480 --> 00:40:48,840
links where you can find more

00:40:44,280 --> 00:40:50,760
information this to change page and then

00:40:48,840 --> 00:40:54,060
this is the copper where you can get it

00:40:50,760 --> 00:40:57,660
and there are also links to on the

00:40:54,060 --> 00:41:00,210
change page to upstream resources so I

00:40:57,660 --> 00:41:02,460
think there is one minute and a half or

00:41:00,210 --> 00:41:04,670
so for questions so are there any

00:41:02,460 --> 00:41:04,670
questions

00:41:09,780 --> 00:41:32,070
looks like not then thank you for your

00:41:19,470 --> 00:41:35,150
blouse and enjoy the evening have to

00:41:32,070 --> 00:41:35,150

YouTube URL: https://www.youtube.com/watch?v=CDRrFtYubdA


