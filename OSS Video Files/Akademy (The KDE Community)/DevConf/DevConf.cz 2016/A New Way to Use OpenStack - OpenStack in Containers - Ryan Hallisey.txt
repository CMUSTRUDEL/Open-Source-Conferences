Title: A New Way to Use OpenStack - OpenStack in Containers - Ryan Hallisey
Publication date: 2016-02-11
Playlist: DevConf.cz 2016
Description: 
	OpenStack is a fast growing and complicated project that can run into issues because of its immense complexion, but now, containers have arrived on the scene and they are levelling the playing field. About a month ago, the Kolla project, a newly adopted project in OpenStack, completed its stable release of a containerized OpenStack installer powered by Ansible.

In this session, I would like to discuss how containers improve OpenStack and introduce the Kolla project with the goal of reducing the confusion and malaise that can sometimes come when installing and using a complex tool like OpenStack. 

github.com/openstack/kolla

Presentation: http://bit.ly/1oaJ9eB
Captions: 
	00:00:00,000 --> 00:00:03,600
this deployment we actually cover of the

00:00:01,949 --> 00:00:06,270
two nodes to controller in the compute

00:00:03,600 --> 00:00:10,530
node we can gain ur eyes the compute

00:00:06,270 --> 00:00:12,389
node so okay going through this here's a

00:00:10,530 --> 00:00:15,420
little bit overview of triple o so the

00:00:12,389 --> 00:00:17,670
first piece of this of the two products

00:00:15,420 --> 00:00:20,039
going to cover so really you can think

00:00:17,670 --> 00:00:24,390
of triple o a lot of like this diagram i

00:00:20,039 --> 00:00:26,550
mean is OpenStack on OpenStack when you

00:00:24,390 --> 00:00:28,289
look at you know this piece you see the

00:00:26,550 --> 00:00:30,179
bottom piece you know this is what we

00:00:28,289 --> 00:00:32,070
call the under cloud or the install

00:00:30,179 --> 00:00:34,559
cloud this is really a general use case

00:00:32,070 --> 00:00:37,410
for installing going stack that we do

00:00:34,559 --> 00:00:39,840
this that we find that you have a very

00:00:37,410 --> 00:00:41,250
specific cloud that that you are geared

00:00:39,840 --> 00:00:42,329
to that you know what's going to end up

00:00:41,250 --> 00:00:45,510
as you know what you're going to install

00:00:42,329 --> 00:00:46,890
and you install that cloud so that you

00:00:45,510 --> 00:00:48,719
can really leverage the pieces of

00:00:46,890 --> 00:00:50,879
OpenStack the API is that so that you

00:00:48,719 --> 00:00:53,160
can actually install a more flexible

00:00:50,879 --> 00:00:55,920
cloud that you can configure it so you

00:00:53,160 --> 00:00:58,170
can hand off to a user and so that

00:00:55,920 --> 00:01:00,059
second cloud I'm talking about the one

00:00:58,170 --> 00:01:01,260
on top would be called the over cloud so

00:01:00,059 --> 00:01:02,730
you can really just think of that as the

00:01:01,260 --> 00:01:04,110
user cloud that's the flexible one that

00:01:02,730 --> 00:01:09,960
you are configuring that's your end goal

00:01:04,110 --> 00:01:13,229
that's your target so the cola project

00:01:09,960 --> 00:01:14,760
the cola project is actually fairly new

00:01:13,229 --> 00:01:16,350
prompting relatives you knows OpenStack

00:01:14,760 --> 00:01:20,580
is probably only adapted into OpenStack

00:01:16,350 --> 00:01:23,880
maybe five six months ago or so and the

00:01:20,580 --> 00:01:26,479
cool project is an Ansel based

00:01:23,880 --> 00:01:31,400
deployment tool that deploys

00:01:26,479 --> 00:01:34,350
containerized OpenStack services so Cola

00:01:31,400 --> 00:01:36,750
has had a lot of success within music

00:01:34,350 --> 00:01:40,380
community a lot of community growth

00:01:36,750 --> 00:01:43,560
recently and the way it kind of works is

00:01:40,380 --> 00:01:45,210
it goes to two pieces there's the

00:01:43,560 --> 00:01:46,710
configuration and deployment of these

00:01:45,210 --> 00:01:48,390
containers just like you know any

00:01:46,710 --> 00:01:50,520
illness ex-service you know you deal

00:01:48,390 --> 00:01:52,140
with config so ansible does both in this

00:01:50,520 --> 00:01:54,149
case the reason I'm pointing it out

00:01:52,140 --> 00:01:55,470
because we're going to pull out pieces

00:01:54,149 --> 00:01:57,570
kind of from colon we're going to

00:01:55,470 --> 00:01:59,729
combine them with your below and they're

00:01:57,570 --> 00:02:03,469
each going to have a part to play in

00:01:59,729 --> 00:02:05,730
this specifically the history of Cola

00:02:03,469 --> 00:02:08,550
they

00:02:05,730 --> 00:02:11,340
used to use uber Nettie's and past Cola

00:02:08,550 --> 00:02:13,620
was a well it started off using

00:02:11,340 --> 00:02:16,230
communities and we reach the point where

00:02:13,620 --> 00:02:18,300
it wasn't really feasible for us to

00:02:16,230 --> 00:02:20,460
continue for really the project to be

00:02:18,300 --> 00:02:23,130
success cooper natives didn't quite have

00:02:20,460 --> 00:02:24,390
enough support for us to even deploy all

00:02:23,130 --> 00:02:26,610
the containers like specifically Nova

00:02:24,390 --> 00:02:28,470
compute just wasn't going to happen did

00:02:26,610 --> 00:02:30,390
not have medical asst host p equals host

00:02:28,470 --> 00:02:31,680
things like that did not wasn't

00:02:30,390 --> 00:02:33,870
available for us at that point in time

00:02:31,680 --> 00:02:36,960
very early on so we actually moved to an

00:02:33,870 --> 00:02:39,860
ansible based deployment method and

00:02:36,960 --> 00:02:42,060
that's how we've proceeded then on

00:02:39,860 --> 00:02:43,440
that's something that will probably come

00:02:42,060 --> 00:02:45,360
back to mention Cabrini's later on

00:02:43,440 --> 00:02:48,780
because it's something that Cola could

00:02:45,360 --> 00:02:50,010
in fact come back to okay so now for oil

00:02:48,780 --> 00:02:51,180
the doctor folks in the room you're

00:02:50,010 --> 00:02:53,310
gonna really recognize this and froze

00:02:51,180 --> 00:02:55,620
who are not familiar this is the doctor

00:02:53,310 --> 00:02:57,630
file this is a just a sample doc file

00:02:55,620 --> 00:03:00,420
from cola that we're going to use in

00:02:57,630 --> 00:03:02,460
this demonstration specifically I want

00:03:00,420 --> 00:03:05,220
to draw your attention to the top line

00:03:02,460 --> 00:03:07,050
there what's kind of important about

00:03:05,220 --> 00:03:08,130
this is that there's three layers really

00:03:07,050 --> 00:03:10,860
that are going to go into just the

00:03:08,130 --> 00:03:14,040
single OpenStack service so this is the

00:03:10,860 --> 00:03:15,930
Nova compute docker file so what's going

00:03:14,040 --> 00:03:17,010
to happen is layer two levels above this

00:03:15,930 --> 00:03:18,660
we're going to have the openstack-based

00:03:17,010 --> 00:03:20,130
container which is going to have a

00:03:18,660 --> 00:03:22,620
series of packages that it's going to be

00:03:20,130 --> 00:03:24,390
common among all the OpenStack services

00:03:22,620 --> 00:03:25,920
so it's going to be you know when any

00:03:24,390 --> 00:03:27,360
generic package that are going to be

00:03:25,920 --> 00:03:29,520
that we can share that which is bit

00:03:27,360 --> 00:03:31,230
store in this layer may be so we can lay

00:03:29,520 --> 00:03:34,110
it all the way down so we gets a very

00:03:31,230 --> 00:03:36,720
simple docker file by the end so the

00:03:34,110 --> 00:03:38,400
second layer is the base layer so you

00:03:36,720 --> 00:03:40,650
can see that the top of the center west

00:03:38,400 --> 00:03:43,610
no a base layer that specifically is

00:03:40,650 --> 00:03:46,200
going to be a nova service-specific

00:03:43,610 --> 00:03:47,970
container that's going to have packages

00:03:46,200 --> 00:03:50,010
that's going to go across things like

00:03:47,970 --> 00:03:54,330
that is going to be common among no VPI

00:03:50,010 --> 00:03:55,920
no Nova levert don't compute all that

00:03:54,330 --> 00:03:58,170
stuff is all going to be stored in that

00:03:55,920 --> 00:03:59,730
Noah based container so now we get to

00:03:58,170 --> 00:04:02,220
this point so now with the third level

00:03:59,730 --> 00:04:03,600
here this third layer and now you can

00:04:02,220 --> 00:04:05,489
see how it's much more simplified we

00:04:03,600 --> 00:04:07,260
we're installing the OMA segment would

00:04:05,489 --> 00:04:09,150
compute service you can see this open

00:04:07,260 --> 00:04:12,660
few slips and stuff like that that's all

00:04:09,150 --> 00:04:14,760
here so as we move further down here we

00:04:12,660 --> 00:04:17,190
get to Nova computes adores this is

00:04:14,760 --> 00:04:18,910
really a this kind of is a way that Cola

00:04:17,190 --> 00:04:20,860
changed or recently we wish you

00:04:18,910 --> 00:04:22,320
to run the user space so specifically we

00:04:20,860 --> 00:04:24,160
actually run in the Nova user space

00:04:22,320 --> 00:04:26,080
originally we would run these containers

00:04:24,160 --> 00:04:28,690
with root inside so that's something

00:04:26,080 --> 00:04:31,450
we've recently changed and the next is

00:04:28,690 --> 00:04:33,430
the extent start script this is a very

00:04:31,450 --> 00:04:36,760
important script this is something that

00:04:33,430 --> 00:04:41,200
really makes Cola consumable by external

00:04:36,760 --> 00:04:43,300
projects really the this is kind of

00:04:41,200 --> 00:04:45,910
draws to attention the two models that

00:04:43,300 --> 00:04:48,280
that come with when you want to

00:04:45,910 --> 00:04:50,680
configure containers so the first one is

00:04:48,280 --> 00:04:52,390
config internal this was a an old model

00:04:50,680 --> 00:04:54,640
that Cole used to use it's a very

00:04:52,390 --> 00:04:56,680
interesting one actually that Cole used

00:04:54,640 --> 00:04:59,380
to have and what we do is we would we

00:04:56,680 --> 00:05:02,890
bake the config files we bake the config

00:04:59,380 --> 00:05:05,140
files into the containers and so when

00:05:02,890 --> 00:05:06,730
you pulled them down these services will

00:05:05,140 --> 00:05:08,500
come to configured so then when you

00:05:06,730 --> 00:05:10,960
start them they start up exactly the

00:05:08,500 --> 00:05:12,700
same every time very interesting model

00:05:10,960 --> 00:05:15,250
but it runs in some issues especially

00:05:12,700 --> 00:05:17,410
when you get two neutron like you can

00:05:15,250 --> 00:05:19,420
imagine neutron has a lot of different

00:05:17,410 --> 00:05:20,770
configurations so the networking piece

00:05:19,420 --> 00:05:23,410
of the OpenStack you can do it all

00:05:20,770 --> 00:05:25,480
different ways it's highly customizable

00:05:23,410 --> 00:05:26,950
so you can really run into problems

00:05:25,480 --> 00:05:29,530
there so how do you deal with that well

00:05:26,950 --> 00:05:32,440
you're going to have to have lots and

00:05:29,530 --> 00:05:33,480
lots of containers with baked in configs

00:05:32,440 --> 00:05:36,520
to handle all the possible

00:05:33,480 --> 00:05:38,440
configurations for this so really it

00:05:36,520 --> 00:05:41,380
became difficult or call it to kind of

00:05:38,440 --> 00:05:44,470
manage this so we figured we move to a

00:05:41,380 --> 00:05:46,750
different model so the config external

00:05:44,470 --> 00:05:50,320
model so right now this is what Cola

00:05:46,750 --> 00:05:53,470
currently does so what this requires is

00:05:50,320 --> 00:05:55,300
that you have a config generation

00:05:53,470 --> 00:05:58,120
mechanism externally so this could be

00:05:55,300 --> 00:05:59,440
puppet in case of cool it's ansible it

00:05:58,120 --> 00:06:01,000
really can be anything you know as long

00:05:59,440 --> 00:06:03,300
as you have a config file president on

00:06:01,000 --> 00:06:07,060
your host and you make coal aware of it

00:06:03,300 --> 00:06:09,400
you can mount in that that location of

00:06:07,060 --> 00:06:12,430
the config file into the container and

00:06:09,400 --> 00:06:13,960
coal will pick it up and use it so this

00:06:12,430 --> 00:06:15,669
really allows a lot more customization

00:06:13,960 --> 00:06:17,310
this really allows cola to kind of

00:06:15,669 --> 00:06:19,240
branch out quite a bit because now

00:06:17,310 --> 00:06:21,100
projects can come in and be like okay

00:06:19,240 --> 00:06:23,110
well you have your containers you know

00:06:21,100 --> 00:06:26,590
all I need is my config file you know

00:06:23,110 --> 00:06:28,320
let me try and run with this so this

00:06:26,590 --> 00:06:31,270
kind of leads to the next point like now

00:06:28,320 --> 00:06:32,320
we can combine you know both these

00:06:31,270 --> 00:06:35,140
products that I mentioned

00:06:32,320 --> 00:06:37,300
so kind of what you get when you get out

00:06:35,140 --> 00:06:38,710
of this is you now have a in under cloud

00:06:37,300 --> 00:06:40,240
with which you're below you you have

00:06:38,710 --> 00:06:41,590
those those opens like API so you have

00:06:40,240 --> 00:06:45,070
bear mail for visiting with ironic

00:06:41,590 --> 00:06:47,170
you've Neutron the networking there now

00:06:45,070 --> 00:06:49,870
you add that you pull out the containers

00:06:47,170 --> 00:06:52,120
from cola and you add those into the

00:06:49,870 --> 00:06:53,650
over cloud or your user cloud now you

00:06:52,120 --> 00:06:56,050
know when you get you now you can

00:06:53,650 --> 00:06:57,790
leverage those those bits of those the

00:06:56,050 --> 00:06:59,620
containers and get the benefits of them

00:06:57,790 --> 00:07:02,200
and put them in your user cloud and then

00:06:59,620 --> 00:07:04,450
on top of it you still have that those

00:07:02,200 --> 00:07:06,730
bits of the under Claude underneath to

00:07:04,450 --> 00:07:10,090
really leverage those api's and to

00:07:06,730 --> 00:07:12,040
really manage the whole stack ok so now

00:07:10,090 --> 00:07:13,990
we're going to look at the heat aspect

00:07:12,040 --> 00:07:16,540
of it so the docker folks you might not

00:07:13,990 --> 00:07:18,090
be familiar with this piece that's

00:07:16,540 --> 00:07:20,230
already know this is the duck this is a

00:07:18,090 --> 00:07:21,700
let me rephrase that so this is actually

00:07:20,230 --> 00:07:23,920
a docker file the next one will be a

00:07:21,700 --> 00:07:25,770
heat specific thing this is one more

00:07:23,920 --> 00:07:28,150
doctor file and this is actually the

00:07:25,770 --> 00:07:29,710
marriage of what you get when you get

00:07:28,150 --> 00:07:32,110
the two projects combining because now

00:07:29,710 --> 00:07:34,780
we have two projects and how exactly is

00:07:32,110 --> 00:07:35,800
open sac and sell you know doctor to do

00:07:34,780 --> 00:07:38,740
something you know what are we getting

00:07:35,800 --> 00:07:40,300
how is this going to work so we have is

00:07:38,740 --> 00:07:41,980
we actually going to get a container out

00:07:40,300 --> 00:07:45,280
of this and the reason is is because we

00:07:41,980 --> 00:07:46,840
specifically run our containers I'm

00:07:45,280 --> 00:07:48,910
atomic so you're not going to be going

00:07:46,840 --> 00:07:50,470
to run that command OS collecting fig at

00:07:48,910 --> 00:07:52,690
the bottom you want to Tom because it's

00:07:50,470 --> 00:07:53,860
not going to happen so how do we get

00:07:52,690 --> 00:07:56,710
around this so we're going to put in the

00:07:53,860 --> 00:08:01,510
container so well what this container

00:07:56,710 --> 00:08:04,810
does is it does the it orchestrates the

00:08:01,510 --> 00:08:06,310
communication between heat and indoco so

00:08:04,810 --> 00:08:08,470
that we can actually bring up the

00:08:06,310 --> 00:08:11,560
containers that we need on this computer

00:08:08,470 --> 00:08:13,510
node and the second thing that I want to

00:08:11,560 --> 00:08:15,550
mention here is that when I going back

00:08:13,510 --> 00:08:17,260
to the configuration part because that's

00:08:15,550 --> 00:08:19,060
one piece we're now missing so the

00:08:17,260 --> 00:08:21,520
configuration is also going to be

00:08:19,060 --> 00:08:23,320
handled through here so right now what

00:08:21,520 --> 00:08:25,540
we do is we actually run puppet in this

00:08:23,320 --> 00:08:27,760
container so puppet is going to just

00:08:25,540 --> 00:08:30,100
going to grab any sort of metadata and

00:08:27,760 --> 00:08:31,630
eat some heat it's going to run it's

00:08:30,100 --> 00:08:33,760
going to generate configs it's going to

00:08:31,630 --> 00:08:35,770
place those configs in a in a location

00:08:33,760 --> 00:08:37,960
on the host and then we mount in those

00:08:35,770 --> 00:08:40,240
directories from the host into the

00:08:37,960 --> 00:08:42,669
containers and now while we have those

00:08:40,240 --> 00:08:44,450
configs on those containers so that's

00:08:42,669 --> 00:08:45,920
kind of the whole

00:08:44,450 --> 00:08:47,510
the process of how this container really

00:08:45,920 --> 00:08:49,280
bridges the gap so that way you can

00:08:47,510 --> 00:08:53,210
understand the flow from one end to the

00:08:49,280 --> 00:08:57,470
other okay so here's the heat template

00:08:53,210 --> 00:08:58,850
that i was talking about so we even the

00:08:57,470 --> 00:09:00,050
doctor folks in here you can you should

00:08:58,850 --> 00:09:01,970
be able to recognize at least a little

00:09:00,050 --> 00:09:03,260
bit like when she's just doing dr. run

00:09:01,970 --> 00:09:05,660
commands you can at least recognize

00:09:03,260 --> 00:09:07,490
things like dr. name space docker

00:09:05,660 --> 00:09:09,020
compute image things like that like

00:09:07,490 --> 00:09:10,760
those are less your name space you know

00:09:09,020 --> 00:09:12,350
that's where you're getting your your

00:09:10,760 --> 00:09:13,580
container from you know and then you

00:09:12,350 --> 00:09:15,140
look at things like medical toast you

00:09:13,580 --> 00:09:18,140
know these just flags and dr. privilege

00:09:15,140 --> 00:09:20,360
is true restart always you know and then

00:09:18,140 --> 00:09:21,950
we get into volumes here you know things

00:09:20,360 --> 00:09:23,480
like that so this becomes very familiar

00:09:21,950 --> 00:09:25,610
well though it's in a templated format

00:09:23,480 --> 00:09:28,130
it's really just like almost like a

00:09:25,610 --> 00:09:29,870
doctor run command so looking at the

00:09:28,130 --> 00:09:31,640
volume specifically this is Nova compute

00:09:29,870 --> 00:09:35,270
so we have romantic / bra and we're

00:09:31,640 --> 00:09:38,060
watching slip modules and then we go

00:09:35,270 --> 00:09:40,640
down to the third one this directory VAR

00:09:38,060 --> 00:09:43,490
lib SE data json could Vic so this is a

00:09:40,640 --> 00:09:48,170
very interesting one because what this

00:09:43,490 --> 00:09:50,750
is is the way that the cola container

00:09:48,170 --> 00:09:52,280
will be able to figure out what configs

00:09:50,750 --> 00:09:55,340
that you're giving it and where they

00:09:52,280 --> 00:09:58,730
should go and so this specification on

00:09:55,340 --> 00:10:00,500
file I'm going to look into next so in

00:09:58,730 --> 00:10:02,140
order just as I mentioned so the JSON

00:10:00,500 --> 00:10:04,400
file is going to handle any sort of

00:10:02,140 --> 00:10:06,830
direction and to wear this all this

00:10:04,400 --> 00:10:09,290
stuff ends up and then that fourth one

00:10:06,830 --> 00:10:11,180
I'll go over following this okay so

00:10:09,290 --> 00:10:12,890
here's an example JSON file there's

00:10:11,180 --> 00:10:14,780
actually two the bottom ones small

00:10:12,890 --> 00:10:16,610
because I just wanted to show a more

00:10:14,780 --> 00:10:19,550
complicated one because the Nova compute

00:10:16,610 --> 00:10:22,840
one's a little less complicated but it's

00:10:19,550 --> 00:10:24,710
easier to say so you know take your pick

00:10:22,840 --> 00:10:26,150
so in the example we're talking about

00:10:24,710 --> 00:10:29,750
Nova compute so you can see the top

00:10:26,150 --> 00:10:32,090
there I reference command so command

00:10:29,750 --> 00:10:34,580
this this is just a general command to

00:10:32,090 --> 00:10:37,880
start no compute and referencing the

00:10:34,580 --> 00:10:41,600
config file that we want to actually use

00:10:37,880 --> 00:10:43,160
so it also what we have here is we have

00:10:41,600 --> 00:10:43,800
the destination of where this is going

00:10:43,160 --> 00:10:47,190
up so at

00:10:43,800 --> 00:10:49,140
see no no calm we also can set the owner

00:10:47,190 --> 00:10:51,420
so Nova and the user Nova is going to

00:10:49,140 --> 00:10:52,680
own this and the permissions of it and

00:10:51,420 --> 00:10:54,839
the source of where this is going to

00:10:52,680 --> 00:10:58,110
find it so we're mounting in that

00:10:54,839 --> 00:11:00,450
container from the host which is Varla

00:10:58,110 --> 00:11:03,149
Betsy data and we're mounting to VAR lib

00:11:00,450 --> 00:11:04,829
Cola config files no cough so you can

00:11:03,149 --> 00:11:06,630
see how the connection actually occurs

00:11:04,829 --> 00:11:09,060
now so the container is going to run the

00:11:06,630 --> 00:11:11,160
script will execute it will look it'll

00:11:09,060 --> 00:11:13,260
look at this source it'll grab that

00:11:11,160 --> 00:11:15,570
it'll move it to etsy Nova comp give it

00:11:13,260 --> 00:11:18,170
the permissions shown it give it the

00:11:15,570 --> 00:11:20,850
Nova user and then it will execute this

00:11:18,170 --> 00:11:24,660
command to actually run with this config

00:11:20,850 --> 00:11:25,769
file so if you can see the bottom part

00:11:24,660 --> 00:11:29,130
you can see how this gets more

00:11:25,769 --> 00:11:32,670
complicated with Neutron how we can have

00:11:29,130 --> 00:11:34,410
many different config files and so any

00:11:32,670 --> 00:11:36,329
kind of that you can imagine any kind of

00:11:34,410 --> 00:11:38,220
example but we can really scale this out

00:11:36,329 --> 00:11:39,480
to be any sort of amount of config files

00:11:38,220 --> 00:11:41,130
you need we can just mount in the

00:11:39,480 --> 00:11:45,779
container and we can move the configs

00:11:41,130 --> 00:11:48,000
around as necessary ok so what I want to

00:11:45,779 --> 00:11:51,120
point out next was that fourth volume

00:11:48,000 --> 00:11:53,010
there Varla Betsy a de novo no but I

00:11:51,120 --> 00:11:57,120
comp so that's what's the one that we're

00:11:53,010 --> 00:11:58,470
mounting and ok oh yeah sorry I

00:11:57,120 --> 00:12:00,480
mentioned that I what I actually want to

00:11:58,470 --> 00:12:03,450
go to next is the environment so the

00:12:00,480 --> 00:12:05,640
environment field there this is a

00:12:03,450 --> 00:12:07,410
interesting field because we could get

00:12:05,640 --> 00:12:09,120
here is you there are two parameters for

00:12:07,410 --> 00:12:11,250
this called the cola config strategy and

00:12:09,120 --> 00:12:12,209
right now it's set to copy once so

00:12:11,250 --> 00:12:14,640
there's two things we can set us to do

00:12:12,209 --> 00:12:16,260
so copy always and copy once what copy

00:12:14,640 --> 00:12:18,510
always is going to do is whenever

00:12:16,260 --> 00:12:21,120
there's a whenever a container restarts

00:12:18,510 --> 00:12:23,850
it's going to look to see if there any

00:12:21,120 --> 00:12:24,839
config files there if we're there it's

00:12:23,850 --> 00:12:27,149
going to take them and it's going to

00:12:24,839 --> 00:12:28,709
move them to to etsy so that's a no be

00:12:27,149 --> 00:12:31,680
calm for example so to move into the

00:12:28,709 --> 00:12:33,540
desired location so on copy once what's

00:12:31,680 --> 00:12:36,149
going to happen is we're only going to

00:12:33,540 --> 00:12:38,430
do that when it first starts so on the

00:12:36,149 --> 00:12:39,959
first attempt those config files are

00:12:38,430 --> 00:12:41,970
there we're going to move them to their

00:12:39,959 --> 00:12:43,410
desired location and that's it so every

00:12:41,970 --> 00:12:45,690
time you restart the container it's not

00:12:43,410 --> 00:12:47,010
going to pick up any new configs so this

00:12:45,690 --> 00:12:49,470
is kind of an interesting thing because

00:12:47,010 --> 00:12:51,420
this can deal you know how you went the

00:12:49,470 --> 00:12:53,529
way you can deal with updates they say

00:12:51,420 --> 00:12:54,519
you want to change the

00:12:53,529 --> 00:12:55,899
one of the you know a different

00:12:54,519 --> 00:12:57,639
container but you may have you know

00:12:55,899 --> 00:12:59,019
another config lying around you don't

00:12:57,639 --> 00:13:00,490
want to pick it up or you just don't

00:12:59,019 --> 00:13:03,160
want it to even deal with this process

00:13:00,490 --> 00:13:05,199
you can just do copy once or you know if

00:13:03,160 --> 00:13:06,939
you want to actually do this and you

00:13:05,199 --> 00:13:08,769
want to configure pick up each time you

00:13:06,939 --> 00:13:11,910
can go copy always you can move this

00:13:08,769 --> 00:13:15,879
configures around however you need to

00:13:11,910 --> 00:13:19,749
and last there be volumes from compute

00:13:15,879 --> 00:13:23,889
Atta so the what we're doing here with

00:13:19,749 --> 00:13:26,410
mobile compute is we are mounting in or

00:13:23,889 --> 00:13:28,420
we are we're running it with a the

00:13:26,410 --> 00:13:31,809
compute volume compute data volume

00:13:28,420 --> 00:13:33,850
container and what this is allows us to

00:13:31,809 --> 00:13:35,949
have another container that's going to

00:13:33,850 --> 00:13:37,540
remain around whenever we are changing

00:13:35,949 --> 00:13:39,970
our services so specifically Nova

00:13:37,540 --> 00:13:43,240
compute if we want to upgrade over

00:13:39,970 --> 00:13:45,309
compute we don't want to have things are

00:13:43,240 --> 00:13:47,319
data to disappear we want to hold on to

00:13:45,309 --> 00:13:48,699
them so we actually want you know doc or

00:13:47,319 --> 00:13:49,990
take and keep one of these containers

00:13:48,699 --> 00:13:52,029
running that's going to have a bunch of

00:13:49,990 --> 00:13:53,499
stuff mount it into it with a bunch of

00:13:52,029 --> 00:13:54,999
just holding bunch of data so that like

00:13:53,499 --> 00:13:57,040
so storing for instance we don't lose

00:13:54,999 --> 00:13:58,240
any VMS or anything like that so that's

00:13:57,040 --> 00:14:03,129
what that is and that's what's going to

00:13:58,240 --> 00:14:06,730
hold on to so specifically this is what

00:14:03,129 --> 00:14:11,949
that looks like here's the creation of

00:14:06,730 --> 00:14:13,029
that container in heat so also you know

00:14:11,949 --> 00:14:14,170
very similar you can see where it's

00:14:13,029 --> 00:14:16,180
coming from the you know the container

00:14:14,170 --> 00:14:17,589
name or singing it to and specifically

00:14:16,180 --> 00:14:20,410
draw your attention to the volumes there

00:14:17,589 --> 00:14:22,870
so viral of nova instances Varlamov

00:14:20,410 --> 00:14:25,059
instances where you know no was going to

00:14:22,870 --> 00:14:26,410
store those instances that when it when

00:14:25,059 --> 00:14:28,000
it boots them it oh that that

00:14:26,410 --> 00:14:30,220
information is there and the second one

00:14:28,000 --> 00:14:33,279
of our live liver now this is important

00:14:30,220 --> 00:14:35,110
for specifically libvirt because if you

00:14:33,279 --> 00:14:36,790
do want to you know do an upgrade of

00:14:35,110 --> 00:14:38,290
liver you really don't want to lose any

00:14:36,790 --> 00:14:40,120
of that data so that's where we're

00:14:38,290 --> 00:14:41,259
holding it in this container so this

00:14:40,120 --> 00:14:44,079
container is going to remain stagnant

00:14:41,259 --> 00:14:47,459
it's not going to move anywhere and so

00:14:44,079 --> 00:14:49,660
this will remain around and we do also

00:14:47,459 --> 00:14:53,829
do a volumes from for the liver

00:14:49,660 --> 00:14:54,970
container also for this so I want to

00:14:53,829 --> 00:14:56,019
talk a bit about thinking of the

00:14:54,970 --> 00:14:57,699
benefits like what we're gonna get out

00:14:56,019 --> 00:14:59,259
of this you know what's important you

00:14:57,699 --> 00:15:01,679
know what's cool about you know just

00:14:59,259 --> 00:15:04,209
containers moving into this you know

00:15:01,679 --> 00:15:07,329
deployments cloud here

00:15:04,209 --> 00:15:08,920
and what I want to first talk about is

00:15:07,329 --> 00:15:11,019
you know compartmentalizing each service

00:15:08,920 --> 00:15:12,759
so now we're taking you know a service

00:15:11,019 --> 00:15:14,139
you know no to compute and we're really

00:15:12,759 --> 00:15:16,029
kind of putting a box around it we are

00:15:14,139 --> 00:15:18,459
we're dealing with it as an individual

00:15:16,029 --> 00:15:20,410
unit you know so anything we do to know

00:15:18,459 --> 00:15:22,480
the compute in there it's not going to

00:15:20,410 --> 00:15:23,949
affect any of the services so that can

00:15:22,480 --> 00:15:26,110
be really anything that you can think of

00:15:23,949 --> 00:15:27,279
you know whether you want to you know

00:15:26,110 --> 00:15:29,259
change around some packages you want to

00:15:27,279 --> 00:15:30,639
upgrade you know update those packages

00:15:29,259 --> 00:15:32,050
in there whatever it is it's not going

00:15:30,639 --> 00:15:35,470
to affect any of those services it's not

00:15:32,050 --> 00:15:38,110
gonna have any change whatsoever so the

00:15:35,470 --> 00:15:39,519
second the easy service robek so for

00:15:38,110 --> 00:15:42,160
instance if you have any a failure a

00:15:39,519 --> 00:15:44,949
failure with you know Neutron whatever

00:15:42,160 --> 00:15:46,059
it is that you have containerized you

00:15:44,949 --> 00:15:47,800
know how you know how you're going to

00:15:46,059 --> 00:15:49,959
get back to what you had in the previous

00:15:47,800 --> 00:15:51,759
state so one way you can deal with this

00:15:49,959 --> 00:15:53,649
is that if you have you know if you have

00:15:51,759 --> 00:15:55,660
and you still have that container around

00:15:53,649 --> 00:15:57,970
the way than what you had before so you

00:15:55,660 --> 00:16:00,610
bring up the new one and say you did an

00:15:57,970 --> 00:16:02,050
update of you know a neutron you know oh

00:16:00,610 --> 00:16:04,959
yeah whatever you know whatever it is

00:16:02,050 --> 00:16:06,369
Nova compute you update that piece so

00:16:04,959 --> 00:16:07,389
you have a new container now so how you

00:16:06,369 --> 00:16:10,299
going to you know deal with that

00:16:07,389 --> 00:16:11,980
rollback well okay it failed so I still

00:16:10,299 --> 00:16:13,389
have the other one around I'll just kill

00:16:11,980 --> 00:16:15,009
the new one I'll go back to the old one

00:16:13,389 --> 00:16:17,980
that's not a problem you can easily deal

00:16:15,009 --> 00:16:20,110
with this and so finally third and

00:16:17,980 --> 00:16:23,740
finally here we talk about updates and

00:16:20,110 --> 00:16:25,990
upgrades so some of the benefits that

00:16:23,740 --> 00:16:27,779
you get from this are kind of want a

00:16:25,990 --> 00:16:30,369
little bit what I mentioned above and

00:16:27,779 --> 00:16:31,809
some of the benefits between the two are

00:16:30,369 --> 00:16:32,980
very similar because you know especially

00:16:31,809 --> 00:16:34,299
with upgrades you're still have to do

00:16:32,980 --> 00:16:36,699
gain mass migrations and things like

00:16:34,299 --> 00:16:38,889
that but really just handling the

00:16:36,699 --> 00:16:40,600
services as single single units does

00:16:38,889 --> 00:16:43,839
provide some benefits that I would talk

00:16:40,600 --> 00:16:45,129
about here so the general update

00:16:43,839 --> 00:16:47,619
workflow this is just very very

00:16:45,129 --> 00:16:50,470
simplified and and what I mean I update

00:16:47,619 --> 00:16:53,110
versus upgrade update would be within a

00:16:50,470 --> 00:16:56,709
version of OpenStack so you know you go

00:16:53,110 --> 00:16:59,769
from 71 73 or something and the update

00:16:56,709 --> 00:17:03,730
you can go from 7-8 so to a different

00:16:59,769 --> 00:17:04,659
jump it's a totally different process so

00:17:03,730 --> 00:17:06,699
we're just going to talk about the

00:17:04,659 --> 00:17:08,079
update here so the general workflow

00:17:06,699 --> 00:17:09,640
we're going to stop the services and

00:17:08,079 --> 00:17:12,819
we're going to be on we're going to run

00:17:09,640 --> 00:17:15,020
a young update so here's where things

00:17:12,819 --> 00:17:17,060
can become interesting because it was

00:17:15,020 --> 00:17:19,370
we run the M update and then finally we

00:17:17,060 --> 00:17:22,010
restart so what are we going to get out

00:17:19,370 --> 00:17:23,510
of this here you know first we're going

00:17:22,010 --> 00:17:25,670
to get the we're gonna have docker is

00:17:23,510 --> 00:17:28,040
going to handle the service start Andrey

00:17:25,670 --> 00:17:29,720
stop so this is good we can we can stick

00:17:28,040 --> 00:17:31,070
with this you know what we've been using

00:17:29,720 --> 00:17:34,190
the whole time just think we just have

00:17:31,070 --> 00:17:36,650
docker do it you know and it will handle

00:17:34,190 --> 00:17:39,260
swapping out anything that we want to

00:17:36,650 --> 00:17:41,030
replace and because we're now using

00:17:39,260 --> 00:17:43,010
docker we can use the service roll back

00:17:41,030 --> 00:17:45,500
here anything we have we can keep around

00:17:43,010 --> 00:17:47,390
we can stop before we start the new one

00:17:45,500 --> 00:17:51,200
or we can just have dr. replace and

00:17:47,390 --> 00:17:53,240
removal one now the a.m update

00:17:51,200 --> 00:17:56,210
specifically you know now we're dealing

00:17:53,240 --> 00:17:58,850
with you know services being installed

00:17:56,210 --> 00:18:00,920
at build time and built at build time so

00:17:58,850 --> 00:18:04,310
a lot of this you know you can see I'm

00:18:00,920 --> 00:18:07,400
update here is is that now when the yum

00:18:04,310 --> 00:18:09,230
update is really done all beforehand so

00:18:07,400 --> 00:18:12,080
we're not actually running it anywhere

00:18:09,230 --> 00:18:13,220
so when you want to update something

00:18:12,080 --> 00:18:15,140
you're just going to pull down that new

00:18:13,220 --> 00:18:16,610
container so one of the one of the

00:18:15,140 --> 00:18:18,590
things you can really avoid here is

00:18:16,610 --> 00:18:20,240
dependency issues so i talked about you

00:18:18,590 --> 00:18:21,620
know how the different layers of

00:18:20,240 --> 00:18:23,300
containers that we have to really kind

00:18:21,620 --> 00:18:24,710
of get this all started you know there

00:18:23,300 --> 00:18:26,540
are a lot of issues that you can avoid

00:18:24,710 --> 00:18:28,400
with dependencies between packages if

00:18:26,540 --> 00:18:29,570
you specifically you know you can think

00:18:28,400 --> 00:18:31,850
of a lot of different scenarios you can

00:18:29,570 --> 00:18:33,560
you just wanna update nova compute you

00:18:31,850 --> 00:18:34,760
still have some dependencies across you

00:18:33,560 --> 00:18:36,830
know the other piece is that you can

00:18:34,760 --> 00:18:40,940
still run some issues you know between

00:18:36,830 --> 00:18:42,290
packages that can cause this to break so

00:18:40,940 --> 00:18:44,000
you can completely avoid now with this

00:18:42,290 --> 00:18:45,500
isolated environment you know you can

00:18:44,000 --> 00:18:49,760
just pull down that new piece as you

00:18:45,500 --> 00:18:51,140
need to and run that update so the

00:18:49,760 --> 00:18:53,360
ability to mix the next earth so i

00:18:51,140 --> 00:18:54,800
briefly touched on it there this is

00:18:53,360 --> 00:18:57,860
something that operators I've talked to

00:18:54,800 --> 00:18:59,900
really really like so you know we just

00:18:57,860 --> 00:19:01,610
want one service want to services we

00:18:59,900 --> 00:19:04,190
want half of them you know we want all

00:19:01,610 --> 00:19:06,740
but one you know we can we can just do a

00:19:04,190 --> 00:19:08,300
an upgrade of those services without

00:19:06,740 --> 00:19:09,950
having to really worry about you know

00:19:08,300 --> 00:19:12,890
too much of the issues here that we that

00:19:09,950 --> 00:19:15,680
we would be waiting for just doing them

00:19:12,890 --> 00:19:17,060
updates so now what kind of gets

00:19:15,680 --> 00:19:18,650
interesting here is that I like you know

00:19:17,060 --> 00:19:20,780
what do you what do you want to upgrade

00:19:18,650 --> 00:19:22,940
you know how is it really you know all

00:19:20,780 --> 00:19:24,800
playing together and and this kind of

00:19:22,940 --> 00:19:25,790
enables you know rolling updates isn't

00:19:24,800 --> 00:19:27,340
over time you know whenever it's

00:19:25,790 --> 00:19:28,990
convenient for you

00:19:27,340 --> 00:19:30,580
can you run a you know a single service

00:19:28,990 --> 00:19:32,080
update as you need to so I need don't

00:19:30,580 --> 00:19:33,820
compute to get out update because I

00:19:32,080 --> 00:19:35,440
wanted to feature okay well let me do

00:19:33,820 --> 00:19:37,120
that i'll update to the newest version

00:19:35,440 --> 00:19:39,430
i'll go to 71 and while the rest of my

00:19:37,120 --> 00:19:41,230
ice compute nodes 70 well okay i don't

00:19:39,430 --> 00:19:43,030
like anymore well i'll just go back to 7

00:19:41,230 --> 00:19:44,650
i'll just go back to 70 and then if i

00:19:43,030 --> 00:19:46,720
need another one to be 71 okay well just

00:19:44,650 --> 00:19:48,730
go to 71 so i can jump back and forth as

00:19:46,720 --> 00:19:56,140
I need to contain is really provide this

00:19:48,730 --> 00:19:57,760
flexibility okay so demo so my demo kind

00:19:56,140 --> 00:19:59,590
of this just kind of an overview what I

00:19:57,760 --> 00:20:00,850
want to talk about I don't think imma

00:19:59,590 --> 00:20:06,810
it's time to do the live demo it does

00:20:00,850 --> 00:20:09,730
take quite a bit of time to do but I

00:20:06,810 --> 00:20:12,370
still the video around so we can just go

00:20:09,730 --> 00:20:14,950
through that it's i shortened the P the

00:20:12,370 --> 00:20:18,520
waiting pieces out so that we don't have

00:20:14,950 --> 00:20:20,650
to like sit and wait watch text reply so

00:20:18,520 --> 00:20:22,450
what I want to do is I kind of want to

00:20:20,650 --> 00:20:24,190
walk through what like a container

00:20:22,450 --> 00:20:25,960
update workflow would be like but this

00:20:24,190 --> 00:20:27,460
is a very simplified version like what

00:20:25,960 --> 00:20:29,050
I'm trying to do is just kind of

00:20:27,460 --> 00:20:31,690
demonstrate that we have containers

00:20:29,050 --> 00:20:33,460
running in the compute node I want to

00:20:31,690 --> 00:20:35,610
demonstrate how how heat goes to and

00:20:33,460 --> 00:20:37,900
actually swaps them out for a new one

00:20:35,610 --> 00:20:39,460
and i also want to demonstrate the

00:20:37,900 --> 00:20:41,230
second thing was just that you're able

00:20:39,460 --> 00:20:42,610
to actually mix and match services so

00:20:41,230 --> 00:20:44,170
specifically what I'm going to target us

00:20:42,610 --> 00:20:46,990
i'm going to target nova compute and i'm

00:20:44,170 --> 00:20:48,280
going to give it a newer version of the

00:20:46,990 --> 00:20:50,820
container and i'm going to swap it out

00:20:48,280 --> 00:20:50,820
for the old one

00:20:55,100 --> 00:21:02,820
ok I think that's good ok so on the side

00:21:01,679 --> 00:21:04,379
here I'm actually just gonna have a

00:21:02,820 --> 00:21:06,029
diagram because I just don't want to

00:21:04,379 --> 00:21:08,460
lose anybody as to where we are the

00:21:06,029 --> 00:21:13,019
stack so I'm just going to i'll just

00:21:08,460 --> 00:21:14,549
briefly bring it in now so that we can

00:21:13,019 --> 00:21:17,340
just so you can all follow along where

00:21:14,549 --> 00:21:20,309
exactly we are so here we're actually

00:21:17,340 --> 00:21:23,159
starting on the compute node so this is

00:21:20,309 --> 00:21:28,259
where the containers live so you can you

00:21:23,159 --> 00:21:30,710
should be able to see that so we'll do

00:21:28,259 --> 00:21:33,120
dr. PS here and you can see what we have

00:21:30,710 --> 00:21:35,759
so just specifically to highlight some

00:21:33,120 --> 00:21:37,769
of them you can see there's a neutron

00:21:35,759 --> 00:21:42,539
open reefs which agent there's a neutron

00:21:37,769 --> 00:21:46,200
agent we have the lib verte we have data

00:21:42,539 --> 00:21:49,220
container we have the open you switch DB

00:21:46,200 --> 00:21:50,909
server all sorts of stuff like that

00:21:49,220 --> 00:21:52,830
specifically you can see that there are

00:21:50,909 --> 00:21:54,840
two containers that are that are pulling

00:21:52,830 --> 00:21:56,250
from the actually pointing plays the

00:21:54,840 --> 00:21:57,029
wood but there are two different names

00:21:56,250 --> 00:21:59,460
because they're actually they are

00:21:57,029 --> 00:22:01,110
different it's just the config files

00:21:59,460 --> 00:22:03,659
going into them are different so that

00:22:01,110 --> 00:22:06,480
they have the same packages but they're

00:22:03,659 --> 00:22:09,450
actually running different things so

00:22:06,480 --> 00:22:12,059
lastly I just want to highlight their

00:22:09,450 --> 00:22:15,090
yeah the Liberty tag so that's just the

00:22:12,059 --> 00:22:18,210
tag that I've used for this to identify

00:22:15,090 --> 00:22:25,080
Nova compute here and i will show how it

00:22:18,210 --> 00:22:27,929
changes ok so next we are in the over

00:22:25,080 --> 00:22:29,879
cloud so we're now outside of that

00:22:27,929 --> 00:22:32,940
compute node and we're actually looking

00:22:29,879 --> 00:22:35,070
at the vm right now so we have a vm

00:22:32,940 --> 00:22:36,629
running that I just spawned up i just

00:22:35,070 --> 00:22:38,009
wanted to show you that it's there is i

00:22:36,629 --> 00:22:39,659
want to make sure you want to make sure

00:22:38,009 --> 00:22:42,330
that you see that we don't lose it it's

00:22:39,659 --> 00:22:45,600
still going to be there ok i won't buy a

00:22:42,330 --> 00:22:48,990
little fast but you saw it was there ok

00:22:45,600 --> 00:22:50,370
now we're gonna go down under cloud down

00:22:48,990 --> 00:22:52,710
the under cloud ok so that you can see

00:22:50,370 --> 00:22:56,309
our stack deployed so we have an active

00:22:52,710 --> 00:22:58,230
one running so now what we do with our

00:22:56,309 --> 00:23:00,870
deployment I feel see I think we're

00:22:58,230 --> 00:23:03,840
going to go into yes ok so we're going

00:23:00,870 --> 00:23:05,820
to look into the Ambo file that actually

00:23:03,840 --> 00:23:07,770
drives us all and this should pull a lot

00:23:05,820 --> 00:23:10,960
of this together

00:23:07,770 --> 00:23:14,410
okay so you can see here what we're

00:23:10,960 --> 00:23:15,850
dealing with is the yamo file so you can

00:23:14,410 --> 00:23:17,080
see that there's the atomic image right

00:23:15,850 --> 00:23:20,830
guy that we're referencing that lives in

00:23:17,080 --> 00:23:25,450
glance the doctor new space are running

00:23:20,830 --> 00:23:29,590
with is mine the docker compute image

00:23:25,450 --> 00:23:32,170
that we're using here and what we're

00:23:29,590 --> 00:23:33,610
going to do is we're going to get rid of

00:23:32,170 --> 00:23:37,660
the liberty tag and we're going to put

00:23:33,610 --> 00:23:39,700
in latest so different container so well

00:23:37,660 --> 00:23:40,780
so really this this is kind of where

00:23:39,700 --> 00:23:42,040
this all kind of makes sense so you can

00:23:40,780 --> 00:23:45,400
see what is where the carriers are

00:23:42,040 --> 00:23:47,970
coming from you can have this at the

00:23:45,400 --> 00:23:49,929
namespace this is and all the stuff that

00:23:47,970 --> 00:23:51,549
though should really make sense as to

00:23:49,929 --> 00:23:53,410
where this also where the pieces are

00:23:51,549 --> 00:23:54,669
actually coming from and one of the

00:23:53,410 --> 00:23:56,380
thing is you can we actually have

00:23:54,669 --> 00:23:57,940
support for even local doc registry so

00:23:56,380 --> 00:23:59,919
if you do want it you can run any under

00:23:57,940 --> 00:24:02,350
cloud you can have your containers there

00:23:59,919 --> 00:24:03,669
and you can point to it and you can't

00:24:02,350 --> 00:24:04,900
run with that if you like this is

00:24:03,669 --> 00:24:10,570
specifically not this is actually going

00:24:04,900 --> 00:24:13,390
up to dr. hub to get these okay so we're

00:24:10,570 --> 00:24:15,280
going to save that and we're going to

00:24:13,390 --> 00:24:17,049
win the deployment in so the command is

00:24:15,280 --> 00:24:19,120
exactly the same and it's going to go

00:24:17,049 --> 00:24:20,350
through and run the update and so he's

00:24:19,120 --> 00:24:22,570
going to go through and it's going to

00:24:20,350 --> 00:24:24,580
figure out okay what changed here and

00:24:22,570 --> 00:24:27,460
it's going to actually make that

00:24:24,580 --> 00:24:30,580
specific change so this this is really

00:24:27,460 --> 00:24:32,710
the part I don't specifically skip on

00:24:30,580 --> 00:24:34,210
the screen but this is kind of a part of

00:24:32,710 --> 00:24:38,380
skipping a little bit through because

00:24:34,210 --> 00:24:40,480
this will take some time okay so now we

00:24:38,380 --> 00:24:42,160
are back on the compute node so you saw

00:24:40,480 --> 00:24:44,530
here are containers that were there

00:24:42,160 --> 00:24:46,540
before so this is kind of where we do

00:24:44,530 --> 00:24:47,890
our little time skip because now he's

00:24:46,540 --> 00:24:49,390
going to run and what's going what's

00:24:47,890 --> 00:24:51,790
going to do it's going to go in it's

00:24:49,390 --> 00:24:55,570
going to look okay you just change the

00:24:51,790 --> 00:24:57,460
tag for for Nova compute used to be used

00:24:55,570 --> 00:24:59,440
to be liberté now now we have latest

00:24:57,460 --> 00:25:01,540
okay so what do i need to do i need to

00:24:59,440 --> 00:25:05,980
go tell dockers change this out so

00:25:01,540 --> 00:25:07,270
that's what it's going to do so there's

00:25:05,980 --> 00:25:09,010
a little time skip this we moved ahead

00:25:07,270 --> 00:25:10,780
okay so there it is right there so we

00:25:09,010 --> 00:25:13,660
moved ahead a little bit and this is

00:25:10,780 --> 00:25:18,160
where we get the node compute latest

00:25:13,660 --> 00:25:19,059
container down okay so that is up and

00:25:18,160 --> 00:25:21,580
running

00:25:19,059 --> 00:25:24,490
as you can see there and then we have a

00:25:21,580 --> 00:25:27,519
new instance employ our new container in

00:25:24,490 --> 00:25:29,529
place okay so this is the e key stat

00:25:27,519 --> 00:25:31,120
complete we actually did that completely

00:25:29,529 --> 00:25:34,720
updated we're back down the under cloud

00:25:31,120 --> 00:25:39,309
now just kind of showing where that this

00:25:34,720 --> 00:25:40,779
actually went all the way through and so

00:25:39,309 --> 00:25:42,159
we're just going to show that to create

00:25:40,779 --> 00:25:49,899
a crate complete now we have to take

00:25:42,159 --> 00:25:50,950
complete okay so what we did what we're

00:25:49,899 --> 00:25:54,009
doing here is we're actually going to go

00:25:50,950 --> 00:25:58,389
back to the thing I bring it up right

00:25:54,009 --> 00:26:01,389
here there you go okay so we're gonna go

00:25:58,389 --> 00:26:02,529
back to the overclock here the point of

00:26:01,389 --> 00:26:04,899
this is really to demonstrate that that

00:26:02,529 --> 00:26:07,179
vm is still around and what's really

00:26:04,899 --> 00:26:08,769
important about this is because the the

00:26:07,179 --> 00:26:10,960
very unique case that no we compute is

00:26:08,769 --> 00:26:14,350
if you don't mountain those kiddos

00:26:10,960 --> 00:26:15,820
proper directories this is going to be

00:26:14,350 --> 00:26:17,320
gone it won't even be able to

00:26:15,820 --> 00:26:18,850
communicate to where it will get a pick

00:26:17,320 --> 00:26:21,129
up where it left off and that's very

00:26:18,850 --> 00:26:23,200
important so really when going into the

00:26:21,129 --> 00:26:25,269
design this containers you know can you

00:26:23,200 --> 00:26:28,330
know we compute and liver really really

00:26:25,269 --> 00:26:29,980
the tricky ones because they they deal

00:26:28,330 --> 00:26:33,100
with the you know this situation a lot

00:26:29,980 --> 00:26:34,450
of data being left around that you need

00:26:33,100 --> 00:26:37,210
to be able to capture and pick up when

00:26:34,450 --> 00:26:40,470
you start again specifically libvirt

00:26:37,210 --> 00:26:42,700
runs with pin equals of pinnacles hosts

00:26:40,470 --> 00:26:45,549
so that it's a little bit different so

00:26:42,700 --> 00:26:47,499
those two are specifically very unique

00:26:45,549 --> 00:26:49,419
cases a new glance has a data container

00:26:47,499 --> 00:26:51,730
that you need to mount in like VAR lib

00:26:49,419 --> 00:26:53,080
clients images i think and i think

00:26:51,730 --> 00:26:55,450
there's a few other cases like steph

00:26:53,080 --> 00:26:57,220
also very unique one as well as cinder

00:26:55,450 --> 00:26:59,289
also very unique because you still need

00:26:57,220 --> 00:27:01,419
to access the devices and the host so in

00:26:59,289 --> 00:27:02,980
order to do that the container really

00:27:01,419 --> 00:27:05,019
the wall which in a container becomes a

00:27:02,980 --> 00:27:06,309
little bit thinner between the host so

00:27:05,019 --> 00:27:08,679
that you can actually access the right

00:27:06,309 --> 00:27:13,570
stuff so you can complete the the

00:27:08,679 --> 00:27:15,820
transactions that you want so i will

00:27:13,570 --> 00:27:17,529
just do they know the list ok so that

00:27:15,820 --> 00:27:22,240
was just to show that this uh that that

00:27:17,529 --> 00:27:25,210
actually does remain around so just to

00:27:22,240 --> 00:27:26,669
kind of conclude the the kula project

00:27:25,210 --> 00:27:29,279
itself

00:27:26,669 --> 00:27:31,379
really been growing you know within the

00:27:29,279 --> 00:27:32,669
community oversight community as well as

00:27:31,379 --> 00:27:34,379
you know the triple o project and so the

00:27:32,669 --> 00:27:36,659
integration itself that has been very

00:27:34,379 --> 00:27:38,970
successful once the projects between

00:27:36,659 --> 00:27:40,649
projects and there's really a lot it's

00:27:38,970 --> 00:27:42,570
really open you know to what you can do

00:27:40,649 --> 00:27:44,309
you other projects you know integrating

00:27:42,570 --> 00:27:46,320
with Cola and really what you can bring

00:27:44,309 --> 00:27:48,210
what the container is integrating you

00:27:46,320 --> 00:27:50,129
know into triple oh there's still a lot

00:27:48,210 --> 00:27:52,169
more technologies we can do we can look

00:27:50,129 --> 00:27:53,909
at Magnum Magnum exist within the

00:27:52,169 --> 00:27:55,080
OpenStack under cloud that all right I

00:27:53,909 --> 00:27:56,190
mean I exist right now but it's

00:27:55,080 --> 00:27:57,029
something that we can build into the

00:27:56,190 --> 00:27:58,409
under cloud that we can possibly

00:27:57,029 --> 00:28:00,059
leverage in the future in the future

00:27:58,409 --> 00:28:01,559
that's really one of the advantages of

00:28:00,059 --> 00:28:05,129
having that under cloud there is we can

00:28:01,559 --> 00:28:06,029
really get at all the OpenStack api's so

00:28:05,129 --> 00:28:09,029
that's something we can definitely look

00:28:06,029 --> 00:28:10,769
at and also Cooper Nettie's to you know

00:28:09,029 --> 00:28:13,470
crew benetti's originally did not

00:28:10,769 --> 00:28:15,929
support in 94 sospechoso sprang

00:28:13,470 --> 00:28:18,389
privileged and which was just a no-go

00:28:15,929 --> 00:28:22,019
for a lot of our containers so you know

00:28:18,389 --> 00:28:23,879
given that situation we in the future

00:28:22,019 --> 00:28:25,379
are going to look at KU bearnaise

00:28:23,879 --> 00:28:26,549
probably again and within the coals

00:28:25,379 --> 00:28:28,379
community it's something that we can

00:28:26,549 --> 00:28:29,789
actually bring thing back and then

00:28:28,379 --> 00:28:33,059
possibly in this case we can actually

00:28:29,789 --> 00:28:37,379
bring it to triple 0 with our

00:28:33,059 --> 00:28:39,869
integration so with that I think we got

00:28:37,379 --> 00:28:42,179
a little bit time left so I can open it

00:28:39,869 --> 00:28:45,059
up for questions for anybody I have some

00:28:42,179 --> 00:28:53,210
cool swag here if you have a really good

00:28:45,059 --> 00:28:53,210
question i'll throw it to you anybody f

00:28:56,160 --> 00:29:06,930
yeah so he's asking specifically you

00:29:05,220 --> 00:29:10,860
said a container for what was that again

00:29:06,930 --> 00:29:12,120
work yeah ok so you so he's asking about

00:29:10,860 --> 00:29:14,310
the compute dating container and what

00:29:12,120 --> 00:29:15,960
process really runs within it so we

00:29:14,310 --> 00:29:18,510
actually what we do is we we actually

00:29:15,960 --> 00:29:21,540
just have it do nothing really it just

00:29:18,510 --> 00:29:23,310
sits there the purpose of it is to mount

00:29:21,540 --> 00:29:24,600
in those volumes that's really where the

00:29:23,310 --> 00:29:26,490
value of it is we need to have that

00:29:24,600 --> 00:29:27,960
container persist well with the

00:29:26,490 --> 00:29:32,960
information so that Nova can reconnect

00:29:27,960 --> 00:29:32,960
to all the VMS are still lying around so

00:29:34,160 --> 00:29:38,900
anyone else yes

00:29:48,420 --> 00:29:53,590
so a cry so simply no the controller

00:29:52,750 --> 00:29:55,420
knows a little bit different

00:29:53,590 --> 00:29:56,890
specifically when triple 0 because it

00:29:55,420 --> 00:29:58,270
does have pacemaker and there's a bit of

00:29:56,890 --> 00:29:59,950
difference there's a bit of things that

00:29:58,270 --> 00:30:02,590
complicated a little bit on the

00:29:59,950 --> 00:30:06,760
controller note but you know something

00:30:02,590 --> 00:30:07,960
like that is may vary a little bit so I

00:30:06,760 --> 00:30:10,210
actually specifically when we repeat the

00:30:07,960 --> 00:30:11,770
question is talking about you know you

00:30:10,210 --> 00:30:13,750
know the dr. pol is that you know

00:30:11,770 --> 00:30:15,340
something that can do know an upgrade or

00:30:13,750 --> 00:30:19,720
replacement you know for control of our

00:30:15,340 --> 00:30:21,400
computes so with regards to controller

00:30:19,720 --> 00:30:23,290
that's kind of it would kind of I was

00:30:21,400 --> 00:30:24,190
answering there and compute it's a

00:30:23,290 --> 00:30:27,179
little bit different it's a little

00:30:24,190 --> 00:30:29,559
complicated but really you know the

00:30:27,179 --> 00:30:31,570
improvement I think of this integration

00:30:29,559 --> 00:30:33,040
I think if we adapt for the things maybe

00:30:31,570 --> 00:30:35,200
like Cooper Nettie's and may change may

00:30:33,040 --> 00:30:37,090
make the control a bit easier but you

00:30:35,200 --> 00:30:38,559
know ultimately if you want to do you

00:30:37,090 --> 00:30:40,270
know get a new container a dr. pols

00:30:38,559 --> 00:30:42,580
really well that's what it'll get you

00:30:40,270 --> 00:30:45,010
you can also build it if you want to but

00:30:42,580 --> 00:30:46,420
primarily you'd probably pull it from a

00:30:45,010 --> 00:30:48,190
place for people the developers who've

00:30:46,420 --> 00:30:50,350
been building themselves so you know

00:30:48,190 --> 00:30:54,420
that could be any range of versions that

00:30:50,350 --> 00:30:54,420
you want to get will be available to you

00:30:54,840 --> 00:31:01,230
yes I'm sorry

00:31:01,890 --> 00:31:06,820
yes so the question was are we looking

00:31:04,570 --> 00:31:11,320
into container izing the under cloud so

00:31:06,820 --> 00:31:15,520
that was kind of experiment I guess for

00:31:11,320 --> 00:31:17,500
a time we're basically trying to look at

00:31:15,520 --> 00:31:19,890
you know how small can we make this if

00:31:17,500 --> 00:31:22,450
we were to put this in a container I

00:31:19,890 --> 00:31:25,480
mean if you looked at you know having

00:31:22,450 --> 00:31:27,340
heat ironic really the bare minimum

00:31:25,480 --> 00:31:29,200
pieces we have in container and so you

00:31:27,340 --> 00:31:31,810
forget to work we had some successful

00:31:29,200 --> 00:31:33,760
that it was a little bit difficult and

00:31:31,810 --> 00:31:36,160
then we kind of looked at even container

00:31:33,760 --> 00:31:38,140
izing just you know each all the pieces

00:31:36,160 --> 00:31:40,450
and really just trying to get to work

00:31:38,140 --> 00:31:42,430
and so what I think kind of who

00:31:40,450 --> 00:31:43,960
concluded is that to look at the

00:31:42,430 --> 00:31:45,460
containerization of the inner quad I

00:31:43,960 --> 00:31:46,870
think the best place to look would

00:31:45,460 --> 00:31:50,440
actually be at the cola project in which

00:31:46,870 --> 00:31:52,900
they they they use ansible to configure

00:31:50,440 --> 00:31:54,970
a just a cloud by itself so what we

00:31:52,900 --> 00:31:56,620
could do is we could use ansible just

00:31:54,970 --> 00:31:58,570
the way that they use it to configure

00:31:56,620 --> 00:32:00,640
their cloud and we can use that as the

00:31:58,570 --> 00:32:02,350
under cloud or we can deploy an over

00:32:00,640 --> 00:32:03,520
claude on top of that so that's

00:32:02,350 --> 00:32:07,150
something that that's be kind of

00:32:03,520 --> 00:32:10,270
interest it's it's kind of an

00:32:07,150 --> 00:32:12,010
interesting concept because it would

00:32:10,270 --> 00:32:13,930
require an integration kind of into the

00:32:12,010 --> 00:32:15,100
colon community from triple oh so it'd

00:32:13,930 --> 00:32:16,270
be a little bit different direction in

00:32:15,100 --> 00:32:18,370
this but it's definitely something I've

00:32:16,270 --> 00:32:20,470
looked into and it's it's certainly it's

00:32:18,370 --> 00:32:21,970
certainly possible I don't know if I can

00:32:20,470 --> 00:32:27,880
reach you but I can so one wants to

00:32:21,970 --> 00:32:31,060
throw it up to oops I'm out of scars but

00:32:27,880 --> 00:32:34,680
I'd love to take good questions I oh ok

00:32:31,060 --> 00:32:34,680
well get more scarce on ya

00:32:42,870 --> 00:32:46,120
so it's something that we would probably

00:32:44,830 --> 00:32:49,540
have to add in by a parameter because

00:32:46,120 --> 00:32:51,040
currently right now the so it depends on

00:32:49,540 --> 00:32:53,890
actually the mechanism which you go

00:32:51,040 --> 00:32:55,090
about doing it specifically the way

00:32:53,890 --> 00:32:57,250
we're doing it through Dockers that

00:32:55,090 --> 00:32:58,930
we're just going to replace them you can

00:32:57,250 --> 00:33:00,760
do different things depending on the

00:32:58,930 --> 00:33:02,560
naming if you want have different names

00:33:00,760 --> 00:33:05,860
so you can almost version them you can

00:33:02,560 --> 00:33:07,780
have a doctor stop it and then start the

00:33:05,860 --> 00:33:08,920
new one and then we can you know that

00:33:07,780 --> 00:33:12,310
and we can handle that roll back that

00:33:08,920 --> 00:33:13,800
way you know I'm not sure quite how cou

00:33:12,310 --> 00:33:16,870
bearnaise would handle that specifically

00:33:13,800 --> 00:33:19,420
but we could also do you know just

00:33:16,870 --> 00:33:21,040
generally having evenness just a stop

00:33:19,420 --> 00:33:22,000
command however we do it cuz there are

00:33:21,040 --> 00:33:23,980
multiple tools that you own this

00:33:22,000 --> 00:33:25,060
composed is just regular doctor who

00:33:23,980 --> 00:33:26,650
brownies any sort of these things to

00:33:25,060 --> 00:33:28,210
actually handle you know container

00:33:26,650 --> 00:33:30,430
replacement and starting and stopping

00:33:28,210 --> 00:33:33,130
and so we can go any which way but

00:33:30,430 --> 00:33:36,160
generally right now within the templates

00:33:33,130 --> 00:33:42,940
it does to replace but we could have it

00:33:36,160 --> 00:33:48,720
sit around if we want to sure any more

00:33:42,940 --> 00:33:48,720
questions ken another one are you yep

00:33:57,149 --> 00:34:06,549
yeah um yeah so I mean if so there's a

00:34:04,269 --> 00:34:07,989
few ways I can kind of go about this you

00:34:06,549 --> 00:34:09,760
know first if you if you want to go

00:34:07,989 --> 00:34:11,379
through have docker just do it you know

00:34:09,760 --> 00:34:13,659
right in front of you I mean it just

00:34:11,379 --> 00:34:16,839
takes you know a few seconds if you have

00:34:13,659 --> 00:34:18,040
that image in place so now kind of

00:34:16,839 --> 00:34:19,119
branch out get a little bigger now okay

00:34:18,040 --> 00:34:20,950
so now you need to have the image

00:34:19,119 --> 00:34:23,559
download and you have it have it pulled

00:34:20,950 --> 00:34:24,970
in but which is most of the images

00:34:23,559 --> 00:34:26,379
actually are to catch the layers you

00:34:24,970 --> 00:34:28,270
know doctor you will have those layers

00:34:26,379 --> 00:34:31,480
actually go to cash so that's also not

00:34:28,270 --> 00:34:33,129
too fat that's not too slow so even

00:34:31,480 --> 00:34:34,929
pulling this in too long so kind of now

00:34:33,129 --> 00:34:37,000
as we get a little bigger now with heat

00:34:34,929 --> 00:34:40,089
you know heat still needs the signal all

00:34:37,000 --> 00:34:41,859
the way through the update piece this is

00:34:40,089 --> 00:34:44,319
running compute nodes post a point which

00:34:41,859 --> 00:34:46,119
is one of the last things done so it

00:34:44,319 --> 00:34:49,540
actually takes a while for heat even

00:34:46,119 --> 00:34:53,500
signal over to it so in general it still

00:34:49,540 --> 00:34:55,299
takes I don't know maybe like five five

00:34:53,500 --> 00:34:56,980
six minutes to get there but the actual

00:34:55,299 --> 00:34:59,890
container swap can't doesn't take long

00:34:56,980 --> 00:35:00,940
at all or even the polling itself so

00:34:59,890 --> 00:35:02,589
there's still wasting you can get around

00:35:00,940 --> 00:35:05,740
this I mean maybe improve it a little

00:35:02,589 --> 00:35:07,660
bit they can imagine but that's really

00:35:05,740 --> 00:35:10,359
what it is right now so maybe like five

00:35:07,660 --> 00:35:18,510
six seven minutes or so to really

00:35:10,359 --> 00:35:18,510
complete that cycle yes

00:35:24,910 --> 00:35:32,839
yeah so specifically Nova computes can

00:35:28,549 --> 00:35:37,430
run privileged let's see neutron needs

00:35:32,839 --> 00:35:39,289
to I think I think neutron I forget

00:35:37,430 --> 00:35:42,589
which one needs to run poet maybe it's

00:35:39,289 --> 00:35:43,970
over yes I don't actually know one of

00:35:42,589 --> 00:35:47,569
those need someone privileged liver

00:35:43,970 --> 00:35:51,289
needs to run privileged I think that's I

00:35:47,569 --> 00:35:52,700
think that's it we try to as you may one

00:35:51,289 --> 00:35:56,089
more I think well I know in coal well I

00:35:52,700 --> 00:36:07,819
think chef might I know cinder did for a

00:35:56,089 --> 00:36:10,130
bit yes I did one comment yeah yeah so

00:36:07,819 --> 00:36:11,630
specifically the questions about SEF

00:36:10,130 --> 00:36:13,490
block demise and stuff so I mentioned

00:36:11,630 --> 00:36:15,079
stuff and cinder because specifically we

00:36:13,490 --> 00:36:16,220
get to Stefan cinder these are very any

00:36:15,079 --> 00:36:17,690
cases I'm error and having to do is

00:36:16,220 --> 00:36:21,349
considered myself it was very

00:36:17,690 --> 00:36:23,119
challenging because you need to really

00:36:21,349 --> 00:36:24,920
go out to the host quite a bit to be

00:36:23,119 --> 00:36:26,359
able to weed track of these devices so

00:36:24,920 --> 00:36:28,400
you're mounting in / dive into the

00:36:26,359 --> 00:36:30,440
container now this was very tricky for

00:36:28,400 --> 00:36:34,190
docker for a while this wasn't possible

00:36:30,440 --> 00:36:35,930
i think until 18 / the mounting / death

00:36:34,190 --> 00:36:39,259
was actually possible so it took a while

00:36:35,930 --> 00:36:40,849
and so so specifically you know those

00:36:39,259 --> 00:36:44,210
containers compute with a new trial one

00:36:40,849 --> 00:36:47,089
SEF cinder and liver are pro running

00:36:44,210 --> 00:36:48,230
Quivers and there used to be more we

00:36:47,089 --> 00:36:50,329
actually kind of cut down on it

00:36:48,230 --> 00:36:53,930
especially as dr. improving able to

00:36:50,329 --> 00:36:57,499
actually cut down even more so hopefully

00:36:53,930 --> 00:36:59,809
there will be more in the future they

00:36:57,499 --> 00:37:03,130
give you a scarf we're gonna go now okay

00:36:59,809 --> 00:37:03,130
good i just don't see it

00:37:03,849 --> 00:37:09,250
okay all right well thank you everybody

00:37:06,260 --> 00:37:09,250
I think we're out of time

00:41:35,840 --> 00:41:37,900
you

00:41:39,279 --> 00:41:41,339

YouTube URL: https://www.youtube.com/watch?v=pWHTtUo6orI


