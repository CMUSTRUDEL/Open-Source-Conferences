Title: BazelCon 2019 Day 1: Lightning Talk â€“ A short overview of our company's journey to sandbox Python
Publication date: 2020-01-14
Playlist: BazelCon 2019
Description: 
	Philipp Schrader, Peloton Technology event: Bazelcon 2019; re_ty: Publish; product: Open Source - General; fullname: Philipp Schrader;
Captions: 
	00:00:01,760 --> 00:00:07,350
alright let's get started welcome to our

00:00:04,859 --> 00:00:08,940
first session of lighting talks and our

00:00:07,350 --> 00:00:10,380
first speaker in the rules of

00:00:08,940 --> 00:00:12,389
engagements five five minutes for the

00:00:10,380 --> 00:00:15,030
talk a question or two maybe

00:00:12,389 --> 00:00:18,990
and then the next speaker so I'm gonna

00:00:15,030 --> 00:00:22,109
have food from the time we are pretty

00:00:18,990 --> 00:00:23,960
packed so our first speaker is Philip

00:00:22,109 --> 00:00:30,320
from peloton and he will talk about

00:00:23,960 --> 00:00:34,829
Python with basil Jim just to clarify

00:00:30,320 --> 00:00:36,480
this is not the bike company but I get I

00:00:34,829 --> 00:00:38,910
get the very first thing that people ask

00:00:36,480 --> 00:00:42,030
me I was like Oh what do you do for the

00:00:38,910 --> 00:00:47,670
biking company my answer it's not the

00:00:42,030 --> 00:00:52,440
bacon company so we do platooning trucks

00:00:47,670 --> 00:00:55,050
so we use basil in a very automotive

00:00:52,440 --> 00:00:58,559
fashion so very similar to a lot of the

00:00:55,050 --> 00:01:00,690
talks you've already heard here we go

00:00:58,559 --> 00:01:06,720
forward and backwards buttons we're

00:01:00,690 --> 00:01:08,970
spoiled here so this talk is a little

00:01:06,720 --> 00:01:11,850
bit historical so not so much on what

00:01:08,970 --> 00:01:13,740
you can do with basil today perhaps

00:01:11,850 --> 00:01:16,020
there are probably better ways of doing

00:01:13,740 --> 00:01:19,409
things with basil especially with rules

00:01:16,020 --> 00:01:20,700
Python they've come a long way a lot of

00:01:19,409 --> 00:01:23,580
what I'll talk about today is largely

00:01:20,700 --> 00:01:27,630
because when I tried to use rules Python

00:01:23,580 --> 00:01:31,500
2 3 years ago I had a lot of trouble

00:01:27,630 --> 00:01:34,500
making stuff work with Python 3 making

00:01:31,500 --> 00:01:39,060
stuff work with wheels importing custom

00:01:34,500 --> 00:01:42,270
wheels etc etc so it's largely custom

00:01:39,060 --> 00:01:44,159
and in a lot of ways but part of my

00:01:42,270 --> 00:01:47,009
motivation here is to maybe generate

00:01:44,159 --> 00:01:50,130
some spark some discussions with you

00:01:47,009 --> 00:01:52,049
guys and see what other people have done

00:01:50,130 --> 00:01:57,030
that's that's actually what I'm really

00:01:52,049 --> 00:01:59,759
curious about so I'm sure everyone's

00:01:57,030 --> 00:02:01,950
seen various problems they've

00:01:59,759 --> 00:02:06,500
encountered when working with Python and

00:02:01,950 --> 00:02:11,730
Google trying to import some module Oh

00:02:06,500 --> 00:02:13,800
can't import it well you finally dig

00:02:11,730 --> 00:02:15,570
down and you realize that

00:02:13,800 --> 00:02:17,640
the user in question has installed

00:02:15,570 --> 00:02:23,070
something with pip on their host machine

00:02:17,640 --> 00:02:25,380
and has claimed the Google folder as

00:02:23,070 --> 00:02:30,540
like the Google folder to import stuff

00:02:25,380 --> 00:02:31,560
from something similar can import blah

00:02:30,540 --> 00:02:34,470
blah blah

00:02:31,560 --> 00:02:36,420
well the user is using a different

00:02:34,470 --> 00:02:40,050
version of Python than what you compiled

00:02:36,420 --> 00:02:42,660
your so4 stuff like that and so and just

00:02:40,050 --> 00:02:44,790
a couple other stories that just got

00:02:42,660 --> 00:02:47,880
annoying to the point that really

00:02:44,790 --> 00:02:51,840
triggered us to look into this whole

00:02:47,880 --> 00:02:54,060
scent boxing thing the last one was I

00:02:51,840 --> 00:02:55,790
think the final straw is when people had

00:02:54,060 --> 00:02:58,710
different version of pandas and getting

00:02:55,790 --> 00:03:00,480
didn't have all the api's on all the

00:02:58,710 --> 00:03:02,010
machines and so people couldn't run each

00:03:00,480 --> 00:03:06,090
other's Python scripts and stuff like

00:03:02,010 --> 00:03:08,640
that so it was just getting too much so

00:03:06,090 --> 00:03:13,100
I won't don't really have time to go

00:03:08,640 --> 00:03:15,780
into details of like how it's all set up

00:03:13,100 --> 00:03:18,110
at the core of it based on the first

00:03:15,780 --> 00:03:21,780
slide we just have a shell script that

00:03:18,110 --> 00:03:27,470
Python top points to and that then

00:03:21,780 --> 00:03:31,860
delegates to a data dependency that is

00:03:27,470 --> 00:03:34,800
the entirety of Python runtime and so

00:03:31,860 --> 00:03:36,300
what this lets us do to have a pointer

00:03:34,800 --> 00:03:36,780
here is that is that a pointer thingy

00:03:36,300 --> 00:03:40,260
okay

00:03:36,780 --> 00:03:42,660
I'm not very strong so what that lets us

00:03:40,260 --> 00:03:45,360
do is essentially have a Python test

00:03:42,660 --> 00:03:47,240
that without any dependencies so you

00:03:45,360 --> 00:03:50,750
know you don't see any depths here

00:03:47,240 --> 00:03:56,420
without any dependencies it will fail

00:03:50,750 --> 00:03:59,340
all the import statements and the

00:03:56,420 --> 00:04:01,890
important thing here is that this will

00:03:59,340 --> 00:04:06,709
work on any workstation on all our

00:04:01,890 --> 00:04:06,709
Jenkins slaves the RBE workers etc etc

00:04:07,730 --> 00:04:16,380
let's see here so just and so one nice

00:04:11,760 --> 00:04:18,450
benefit of this is that you have one

00:04:16,380 --> 00:04:21,200
version of Python the host or maybe no

00:04:18,450 --> 00:04:24,690
version of python on the host and

00:04:21,200 --> 00:04:27,690
whatever version of python you have

00:04:24,690 --> 00:04:30,750
inside the sandbox so you can basil run

00:04:27,690 --> 00:04:33,380
your Python environment and you have

00:04:30,750 --> 00:04:36,060
access to whatever is sent boxed I

00:04:33,380 --> 00:04:38,100
apologize for putting stuff so low on

00:04:36,060 --> 00:04:39,560
the screen the people in the back might

00:04:38,100 --> 00:04:43,790
not be able to just see everything

00:04:39,560 --> 00:04:50,400
didn't really think about that sorry and

00:04:43,790 --> 00:04:51,840
I guess I duplicated that slide so what

00:04:50,400 --> 00:04:55,080
what does it really get us well

00:04:51,840 --> 00:04:58,530
ultimately we have the same bugs for

00:04:55,080 --> 00:05:00,570
every one that's I guess really like if

00:04:58,530 --> 00:05:02,760
somebody has a problem all the other

00:05:00,570 --> 00:05:04,290
people will have the same problem or if

00:05:02,760 --> 00:05:10,310
they have something working it'll work

00:05:04,290 --> 00:05:13,110
for everyone else summer to sum it up

00:05:10,310 --> 00:05:18,210
python is really really good at

00:05:13,110 --> 00:05:20,580
dereferencing symlinks it it's I've had

00:05:18,210 --> 00:05:22,500
a lot of trouble with it one of the big

00:05:20,580 --> 00:05:27,720
things that I still struggle with is

00:05:22,500 --> 00:05:29,820
that the cysts a entry to the source

00:05:27,720 --> 00:05:32,160
tree like an absolute path to a source

00:05:29,820 --> 00:05:38,300
tree in there I'm not sure how to get

00:05:32,160 --> 00:05:42,030
rid of it but anyway an it py files are

00:05:38,300 --> 00:05:44,790
hard to work with best to get rid of

00:05:42,030 --> 00:05:46,590
them there's also I think the newer

00:05:44,790 --> 00:05:48,660
version of versions of basil actually

00:05:46,590 --> 00:05:50,580
flipped the default so you don't have to

00:05:48,660 --> 00:05:53,250
do this anymore

00:05:50,580 --> 00:05:56,750
love Python 3 fixed a lot of the in it

00:05:53,250 --> 00:06:02,640
py problems

00:05:56,750 --> 00:06:06,390
- ass prevents your own user site I

00:06:02,640 --> 00:06:07,710
forgot what they call it yeah site

00:06:06,390 --> 00:06:09,030
directory I thought there was a

00:06:07,710 --> 00:06:11,610
different name for it

00:06:09,030 --> 00:06:13,440
love wheels pre-compiled stuff is pretty

00:06:11,610 --> 00:06:15,690
nice unless you're then trying to run

00:06:13,440 --> 00:06:19,520
Python on arm or something like that but

00:06:15,690 --> 00:06:22,620
that's a separate story and my biggest

00:06:19,520 --> 00:06:26,750
takeaways always gotta stay up to date

00:06:22,620 --> 00:06:26,750
with basil thank you

00:06:26,790 --> 00:06:31,720
[Applause]

00:07:04,150 --> 00:07:10,879
it's a good question so the yeah so the

00:07:07,610 --> 00:07:14,120
question was essentially Basel has a lot

00:07:10,879 --> 00:07:16,009
of holes in the sandboxing schemes one

00:07:14,120 --> 00:07:17,960
of the more obvious ones that at least

00:07:16,009 --> 00:07:20,800
as a prince the starkest that but

00:07:17,960 --> 00:07:26,300
defaulted references or used to at least

00:07:20,800 --> 00:07:28,990
use the hosts Python runtime so the

00:07:26,300 --> 00:07:33,800
question was is there is there a way to

00:07:28,990 --> 00:07:37,400
perhaps inform users better to to not

00:07:33,800 --> 00:07:40,250
catch them off-guard like this did I get

00:07:37,400 --> 00:07:41,750
that right yeah do it I I think we can

00:07:40,250 --> 00:07:45,650
definitely do better and and one of the

00:07:41,750 --> 00:07:48,380
big ones that still catches me a lot is

00:07:45,650 --> 00:07:51,860
the fact that things like bash are not

00:07:48,380 --> 00:07:57,500
part of the sandbox either always escape

00:07:51,860 --> 00:07:58,819
back out to the host I don't know I it's

00:07:57,500 --> 00:08:02,300
probably a bit tough just because

00:07:58,819 --> 00:08:05,000
there's a lot to basil already to teach

00:08:02,300 --> 00:08:07,279
people without getting into the whole

00:08:05,000 --> 00:08:11,599
well oh here's this lovely hermetic

00:08:07,279 --> 00:08:12,800
thing but here the here well I guess you

00:08:11,599 --> 00:08:14,599
always have to elaborate on the

00:08:12,800 --> 00:08:16,699
nitty-gritty details at some point so I

00:08:14,599 --> 00:08:19,129
don't know if they're what documentation

00:08:16,699 --> 00:08:22,099
there is but probably be a really good

00:08:19,129 --> 00:08:24,469
idea to have a page for it for exactly

00:08:22,099 --> 00:08:27,650
that like here is how basil does not

00:08:24,469 --> 00:08:31,279
send box things there's a long the lines

00:08:27,650 --> 00:08:35,589
of what you were asking okay cool well

00:08:31,279 --> 00:08:35,589
two minutes thank you thanks Phillip

00:08:37,449 --> 00:08:40,449

YouTube URL: https://www.youtube.com/watch?v=JsDwhNTweiQ


