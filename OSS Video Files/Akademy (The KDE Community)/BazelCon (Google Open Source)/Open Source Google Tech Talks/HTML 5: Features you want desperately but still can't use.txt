Title: HTML 5: Features you want desperately but still can't use
Publication date: 2011-03-31
Playlist: Open Source Google Tech Talks
Description: 
	Speaker: Ian Hickson
As the HTML5 effort reaches its first big milestone -- feature completeness -- browsers are starting to implement it. It will be years before you can rely on HTML5 support when writing Web pages and applications, but you can start to experiment today to get a feel of what the new standard offers. This talk will explore some of the most recent implementations of HTML5 features.
Captions: 
	00:00:02,560 --> 00:00:07,810
so I'm going to be demoing summation of

00:00:05,170 --> 00:00:09,639
five features today my goal is to I

00:00:07,810 --> 00:00:11,770
don't have any slides my goal is to just

00:00:09,639 --> 00:00:14,709
create demos on the fly I have I have

00:00:11,770 --> 00:00:17,970
notes I didn't come unprepared and

00:00:14,709 --> 00:00:20,830
actually show them running in browsers

00:00:17,970 --> 00:00:23,439
part of my goal here is to not use the

00:00:20,830 --> 00:00:25,859
future tense because I want to show that

00:00:23,439 --> 00:00:27,880
things actually are happening today

00:00:25,859 --> 00:00:28,599
however I should warn either all of the

00:00:27,880 --> 00:00:31,269
browser's i'm going to show you

00:00:28,599 --> 00:00:33,700
basically betas and unreleased nightly

00:00:31,269 --> 00:00:36,670
bills and stuff like that all right so

00:00:33,700 --> 00:00:38,620
first time in a demo the video element

00:00:36,670 --> 00:00:41,890
in html5 we added this element so we

00:00:38,620 --> 00:00:44,680
could show videos much like you would

00:00:41,890 --> 00:00:47,820
see on youtube for example so imagine

00:00:44,680 --> 00:00:50,140
you have this page here just a normal

00:00:47,820 --> 00:00:57,070
blank HTML page whoops hang on let me

00:00:50,140 --> 00:01:00,820
reconnect to my server ok all right so

00:00:57,070 --> 00:01:03,850
I'm going to embed a video so we use the

00:01:00,820 --> 00:01:04,930
video element and we give the source

00:01:03,850 --> 00:01:07,539
attribute it's like with an image

00:01:04,930 --> 00:01:10,689
element and we say the name of the video

00:01:07,539 --> 00:01:14,679
so here i have an OGG Theora video like

00:01:10,689 --> 00:01:16,390
that and then by the way for people on

00:01:14,679 --> 00:01:17,799
who are watching it on YouTube and can't

00:01:16,390 --> 00:01:19,719
read when I'm typing on a screen all the

00:01:17,799 --> 00:01:20,890
demos are up at this URL or will be by

00:01:19,719 --> 00:01:24,039
the end of the talk that's where I'm

00:01:20,890 --> 00:01:26,710
putting it up anyway so we have we have

00:01:24,039 --> 00:01:28,619
this with this video here so let's go

00:01:26,710 --> 00:01:32,380
have a look to see what it looks like

00:01:28,619 --> 00:01:33,909
it's that URL so there's our video now

00:01:32,380 --> 00:01:36,819
is not playing because we haven't told

00:01:33,909 --> 00:01:39,210
it to play and we have two choices here

00:01:36,819 --> 00:01:41,979
we can either type in our own JavaScript

00:01:39,210 --> 00:01:43,270
controls and hook it all up using script

00:01:41,979 --> 00:01:48,280
or we can just put the controls

00:01:43,270 --> 00:01:49,869
attribute on the element and then but I

00:01:48,280 --> 00:01:51,719
we have a play control so now we can

00:01:49,869 --> 00:01:55,499
press play and he'll stop playing video

00:01:51,719 --> 00:01:55,499
customized his web browser

00:02:00,710 --> 00:02:04,439
now you'll notice that when I loaded the

00:02:02,850 --> 00:02:06,329
page you didn't start playing it had a

00:02:04,439 --> 00:02:09,330
play button but we can add the autoplay

00:02:06,329 --> 00:02:11,730
attribute and now if I reload the page

00:02:09,330 --> 00:02:13,799
it'll play automatically for years

00:02:11,730 --> 00:02:17,519
Billy's been trying to customize his web

00:02:13,799 --> 00:02:19,080
browser now like I said we can also do

00:02:17,519 --> 00:02:20,310
anything do this using javascript so

00:02:19,080 --> 00:02:22,379
let's see let's let's add some

00:02:20,310 --> 00:02:26,970
JavaScript first of all we'll add a

00:02:22,379 --> 00:02:28,110
script element note that in html5 you

00:02:26,970 --> 00:02:30,690
don't have to put the type attribute

00:02:28,110 --> 00:02:34,230
here just say script and it will assume

00:02:30,690 --> 00:02:40,260
it's JavaScript so we could say script

00:02:34,230 --> 00:02:43,680
and we can get the video element using

00:02:40,260 --> 00:02:48,299
the regular old way of picking the first

00:02:43,680 --> 00:02:50,130
video element in the file and then here

00:02:48,299 --> 00:02:53,970
we want some input controls so we can

00:02:50,130 --> 00:02:55,860
have an input element with this in a

00:02:53,970 --> 00:02:59,910
paragraph so it's not on the same line

00:02:55,860 --> 00:03:03,180
as a video input type equals button see

00:02:59,910 --> 00:03:05,579
we want a this is the stop button so

00:03:03,180 --> 00:03:07,230
let's add a little square that's that's

00:03:05,579 --> 00:03:13,350
this particular unicode character which

00:03:07,230 --> 00:03:17,670
I prepared earlier and then on click is

00:03:13,350 --> 00:03:19,410
very simple video dot pause so now we

00:03:17,670 --> 00:03:22,650
play this for you ever stop inaudible

00:03:19,410 --> 00:03:25,310
trying to customize his web browser but

00:03:22,650 --> 00:03:27,569
we still have the controls up here too

00:03:25,310 --> 00:03:28,680
we can get rid of the controls by just

00:03:27,569 --> 00:03:31,530
getting rid of the controls out of

00:03:28,680 --> 00:03:33,599
controls attribute here alright so

00:03:31,530 --> 00:03:37,590
that's the stop button now how about a

00:03:33,599 --> 00:03:40,560
play button that's just something SS

00:03:37,590 --> 00:03:43,709
play and then we can use unicode

00:03:40,560 --> 00:03:49,349
character 25 be six or a little play but

00:03:43,709 --> 00:03:51,510
it for years Billy's been trying to

00:03:49,349 --> 00:03:54,230
customize his web browser now we have a

00:03:51,510 --> 00:03:54,230
stop in a play

00:04:01,019 --> 00:04:04,450
now we can also replace both of these

00:04:03,430 --> 00:04:07,629
buttons with one button if we just

00:04:04,450 --> 00:04:12,130
wanted a pause instead of a stop in to

00:04:07,629 --> 00:04:17,200
place let's see that would be I needed

00:04:12,130 --> 00:04:23,500
one button now and we would just say if

00:04:17,200 --> 00:04:29,080
video paused then video play our video

00:04:23,500 --> 00:04:34,000
dot port pretty simple and then see we

00:04:29,080 --> 00:04:35,710
want little that should look like a

00:04:34,000 --> 00:04:37,870
pause button there we go for years

00:04:35,710 --> 00:04:41,260
Billy's been trying to customize web

00:04:37,870 --> 00:04:48,970
browser Oh Oh buddy work what did they

00:04:41,260 --> 00:04:51,400
do wrong after many fruitless trials

00:04:48,970 --> 00:04:53,970
Billy almost gave up on his dream out of

00:04:51,400 --> 00:04:53,970
that missing semicolon

00:04:54,230 --> 00:05:02,810
then he discovered Firefox secure

00:04:57,110 --> 00:05:05,210
alright so see let's try that again for

00:05:02,810 --> 00:05:08,870
years Billy's been customized his web

00:05:05,210 --> 00:05:12,230
browser is not play stuff unfortunately

00:05:08,870 --> 00:05:15,380
there's a bug in Firefox which means

00:05:12,230 --> 00:05:16,460
that if you reload the page this is

00:05:15,380 --> 00:05:17,810
unknown bug and they've already got the

00:05:16,460 --> 00:05:19,430
patch fixed or it but there's a bug that

00:05:17,810 --> 00:05:21,500
you just saw there that is if you reload

00:05:19,430 --> 00:05:22,790
the page while the video is playing it

00:05:21,500 --> 00:05:24,080
will keep playing for 15 seconds in the

00:05:22,790 --> 00:05:28,250
background but you weren't supposed to

00:05:24,080 --> 00:05:31,760
see that so that was video so the videos

00:05:28,250 --> 00:05:33,860
are a nice simple element as you can see

00:05:31,760 --> 00:05:38,720
the API is pretty obvious there's

00:05:33,860 --> 00:05:41,240
nothing really to catch you out there so

00:05:38,720 --> 00:05:44,360
that's that's video let's have a look at

00:05:41,240 --> 00:05:50,270
something else now let's look at a post

00:05:44,360 --> 00:05:52,910
message so imagine we have a gadget and

00:05:50,270 --> 00:05:54,860
a kind of a gadget host like Google but

00:05:52,910 --> 00:06:01,270
I google is a gadget host and then we

00:05:54,860 --> 00:06:04,910
have gadgets so if we imagine we have a

00:06:01,270 --> 00:06:11,870
file that contains a gadget for example

00:06:04,910 --> 00:06:13,250
we're using an iframe we can have let's

00:06:11,870 --> 00:06:16,550
see i have an iframe ready on another

00:06:13,250 --> 00:06:20,930
site to show you that it this is cross

00:06:16,550 --> 00:06:28,780
domain there we go okay so now let's

00:06:20,930 --> 00:06:39,830
have a look at how this works we want

00:06:28,780 --> 00:06:41,300
yaj it hosts HTML so here we have the

00:06:39,830 --> 00:06:42,800
gadget hose and it has my frame and

00:06:41,300 --> 00:06:44,150
apparently I missed type the URL because

00:06:42,800 --> 00:06:53,120
that's not what I was expecting to see

00:06:44,150 --> 00:06:54,410
in there let's see miss directory there

00:06:53,120 --> 00:06:58,130
we go so now I should take gadget there

00:06:54,410 --> 00:07:02,870
we go okay so so that's all very well

00:06:58,130 --> 00:07:07,370
what if the outside frame up here had a

00:07:02,870 --> 00:07:10,400
little form controls form control

00:07:07,370 --> 00:07:15,020
and it said let's say ask for your

00:07:10,400 --> 00:07:23,000
nickname using an input control site

00:07:15,020 --> 00:07:24,440
because tags name cause Nick so now we

00:07:23,000 --> 00:07:26,360
have a net control now nickname which

00:07:24,440 --> 00:07:28,010
one now the that's all very well so we

00:07:26,360 --> 00:07:30,050
can you know say our nickname is Jack or

00:07:28,010 --> 00:07:32,780
whatever but what if the gadget wants to

00:07:30,050 --> 00:07:34,340
know about it now right nine HTML like

00:07:32,780 --> 00:07:35,840
as its shipped today there's not really

00:07:34,340 --> 00:07:37,520
any way to talk to the gadget except

00:07:35,840 --> 00:07:38,960
using weird hacks using the fragment

00:07:37,520 --> 00:07:41,630
identifier and all kind of stuff like

00:07:38,960 --> 00:07:46,130
that so one of the things that html5 ads

00:07:41,630 --> 00:07:49,850
is post message and so what we can do

00:07:46,130 --> 00:07:54,470
here is we can say when you change this

00:07:49,850 --> 00:07:56,360
value the nick of the Nick wheezing the

00:07:54,470 --> 00:07:59,030
value the value is the value attribute

00:07:56,360 --> 00:08:02,510
of the input element and then if we add

00:07:59,030 --> 00:08:08,840
a script element we can put in a little

00:08:02,510 --> 00:08:11,300
function in here update Nick and then

00:08:08,840 --> 00:08:14,479
what it wants to do is post the message

00:08:11,300 --> 00:08:17,630
straight to the iframe and so we can

00:08:14,479 --> 00:08:18,860
take the iframe using frame 0 that's the

00:08:17,630 --> 00:08:21,050
iframe the first frame of the page and

00:08:18,860 --> 00:08:23,840
then we just call post message on the on

00:08:21,050 --> 00:08:26,450
the iframe and we can give it a message

00:08:23,840 --> 00:08:29,630
saying Nick equals and then the value of

00:08:26,450 --> 00:08:30,620
Nick and then for security we have to

00:08:29,630 --> 00:08:33,440
make sure we're posting to the right

00:08:30,620 --> 00:08:35,120
frame now there is a way you can just

00:08:33,440 --> 00:08:37,849
say post to any frame that's the wild

00:08:35,120 --> 00:08:39,650
card but that's generally insecure

00:08:37,849 --> 00:08:41,390
because what happens if some others page

00:08:39,650 --> 00:08:43,490
has embedded you and as tricked you into

00:08:41,390 --> 00:08:45,470
sending this message but like the

00:08:43,490 --> 00:08:46,520
message contains a password say well if

00:08:45,470 --> 00:08:47,720
the message contains a password and

00:08:46,520 --> 00:08:49,510
you're posting it to this frame you had

00:08:47,720 --> 00:08:52,610
better be sending it to the right frame

00:08:49,510 --> 00:08:54,680
if you send it to some other site like

00:08:52,610 --> 00:08:56,779
evil com that's you know being embedded

00:08:54,680 --> 00:08:58,880
in there to trick you to sending it

00:08:56,779 --> 00:09:00,170
there then some randoms I can get you

00:08:58,880 --> 00:09:04,010
passwords so what we can do instead is

00:09:00,170 --> 00:09:07,100
we can take the URL that we expect to

00:09:04,010 --> 00:09:10,400
have and then we can just paste it in

00:09:07,100 --> 00:09:12,860
there and then the message will be

00:09:10,400 --> 00:09:16,790
dropped on the floor if the URL doesn't

00:09:12,860 --> 00:09:18,380
match what we're expecting so that's all

00:09:16,790 --> 00:09:19,610
very well we have this now and we can

00:09:18,380 --> 00:09:22,790
type

00:09:19,610 --> 00:09:24,290
you know nicks and everything but

00:09:22,790 --> 00:09:27,620
nothing's being done in the gadget to

00:09:24,290 --> 00:09:30,110
expect this so it doesn't make a very

00:09:27,620 --> 00:09:37,610
compelling demo so we can add something

00:09:30,110 --> 00:09:40,399
to the gadget this is the gadget very

00:09:37,610 --> 00:09:45,519
simple HTML page if we add something in

00:09:40,399 --> 00:09:45,519
here we could say like have it say hello

00:09:46,390 --> 00:09:54,320
sir see you as a default and then have a

00:09:52,430 --> 00:09:56,149
script and then this script is where

00:09:54,320 --> 00:09:57,860
we're going to receive the message so we

00:09:56,149 --> 00:10:00,880
use add event listener which is part of

00:09:57,860 --> 00:10:05,750
Dom to HTML no I'm talk to event sorry

00:10:00,880 --> 00:10:08,240
and we expect a message event and that

00:10:05,750 --> 00:10:10,190
event will be fired every time a

00:10:08,240 --> 00:10:17,630
postmessage call is invoked on the

00:10:10,190 --> 00:10:18,980
window so his our event handler and what

00:10:17,630 --> 00:10:21,140
we're doing here is look first of all we

00:10:18,980 --> 00:10:22,310
have to check the the opposite problem

00:10:21,140 --> 00:10:23,990
that the security program i mentioned

00:10:22,310 --> 00:10:26,240
earlier the opposite problem what if

00:10:23,990 --> 00:10:27,579
you're getting a message and it's a

00:10:26,240 --> 00:10:29,990
message that will make you do something

00:10:27,579 --> 00:10:31,550
but you're receiving it from someone who

00:10:29,990 --> 00:10:33,769
isn't who you expect to receive it from

00:10:31,550 --> 00:10:37,220
so you can check the origin so here we

00:10:33,769 --> 00:10:39,339
make sure that the origin is the host

00:10:37,220 --> 00:10:44,110
that we're using that here we're using

00:10:39,339 --> 00:10:46,339
www-what WRX will type that in here org

00:10:44,110 --> 00:10:48,740
and we want to make sure that we have

00:10:46,339 --> 00:10:50,000
the right message so we can check data

00:10:48,740 --> 00:10:51,860
that's where the actual message will be

00:10:50,000 --> 00:10:56,209
we want to check that the first five

00:10:51,860 --> 00:10:59,140
characters are Nick equals so we can

00:10:56,209 --> 00:11:02,510
just take test that equals there we go

00:10:59,140 --> 00:11:04,130
and then if those two conditions are

00:11:02,510 --> 00:11:07,040
matched well we do the very simple you

00:11:04,130 --> 00:11:09,579
know document what element by ID we get

00:11:07,040 --> 00:11:12,620
the span element but we created up there

00:11:09,579 --> 00:11:16,190
and we take its first child a text node

00:11:12,620 --> 00:11:19,220
and which set its data to the Nick which

00:11:16,190 --> 00:11:21,649
if we do that we'll get Nick equals in

00:11:19,220 --> 00:11:23,390
the neck but if we want the actual Nick

00:11:21,649 --> 00:11:25,820
will just take a substring of from the

00:11:23,390 --> 00:11:28,459
5th character from the six character ID

00:11:25,820 --> 00:11:31,459
which is five because it's zero bit so

00:11:28,459 --> 00:11:33,290
now if we reload this we should see that

00:11:31,459 --> 00:11:37,579
if i type anymore

00:11:33,290 --> 00:11:42,920
put in that work we forget to do

00:11:37,579 --> 00:11:46,970
something here let's see the paragraph

00:11:42,920 --> 00:11:50,290
isn't appearing for some reason that

00:11:46,970 --> 00:11:50,290
would suggest that that's the wrong URL

00:11:52,960 --> 00:11:57,550
oh let's try that in another browser

00:11:55,380 --> 00:12:01,390
it's always the good way of solving this

00:11:57,550 --> 00:12:02,500
problem there we go this is conveniently

00:12:01,390 --> 00:12:04,510
going to demo the fact that this also

00:12:02,500 --> 00:12:05,980
works in another browser so if we type

00:12:04,510 --> 00:12:10,120
in stuff here you'll see that it works

00:12:05,980 --> 00:12:11,440
great some reason every time I try and

00:12:10,120 --> 00:12:12,760
type in the nickname into the field

00:12:11,440 --> 00:12:15,940
called Nick I come up with Nicola so

00:12:12,760 --> 00:12:17,200
much away but you know so we're typing

00:12:15,940 --> 00:12:19,440
messages here and what's what you're

00:12:17,200 --> 00:12:21,940
seeing here is actually going into a

00:12:19,440 --> 00:12:23,200
message is being sent into a page

00:12:21,940 --> 00:12:25,000
running on a completely different domain

00:12:23,200 --> 00:12:26,350
the gadget there is running on de mal

00:12:25,000 --> 00:12:27,520
com which is completely different from

00:12:26,350 --> 00:12:29,440
what the Blue Jays org they don't even

00:12:27,520 --> 00:12:30,610
share any part of their host name is

00:12:29,440 --> 00:12:35,760
different so you couldn't you couldn't

00:12:30,610 --> 00:12:38,770
even use domain to make them the same

00:12:35,760 --> 00:12:40,650
now this works in safari as I just

00:12:38,770 --> 00:12:42,580
demoed it should work in firefox

00:12:40,650 --> 00:12:45,820
although i might sorry show why it's an

00:12:42,580 --> 00:12:48,010
odd yeah maybe that's what's going on

00:12:45,820 --> 00:12:50,920
there see we don't afraid Wow let me go

00:12:48,010 --> 00:12:57,340
okay so now if we type in it's still not

00:12:50,920 --> 00:13:02,910
working not sure why arrow console not

00:12:57,340 --> 00:13:06,420
enough arguments on line 13 oh right hey

00:13:02,910 --> 00:13:09,100
how do venison takes three arguments

00:13:06,420 --> 00:13:12,670
let's try that again make sure we reload

00:13:09,100 --> 00:13:16,540
the iframe there we go okay so that

00:13:12,670 --> 00:13:17,890
works in two different browsers so there

00:13:16,540 --> 00:13:22,300
guys see html5 is working in two

00:13:17,890 --> 00:13:23,380
different routers it actually works in

00:13:22,300 --> 00:13:25,930
three different rousers but there's a

00:13:23,380 --> 00:13:26,950
small problem add event listener is part

00:13:25,930 --> 00:13:28,960
of dawn to events like I said

00:13:26,950 --> 00:13:33,690
unfortunately ie doesn't support on to

00:13:28,960 --> 00:13:37,840
events but we can hack ie support in by

00:13:33,690 --> 00:13:42,820
creating window dot add event listener

00:13:37,840 --> 00:13:46,300
on the fly see like I said it takes

00:13:42,820 --> 00:13:48,040
three arguments to first one is the name

00:13:46,300 --> 00:13:49,930
of the event segments function and the

00:13:48,040 --> 00:13:53,830
third one is whether to be capture to

00:13:49,930 --> 00:13:58,930
capture it all and then we translate

00:13:53,830 --> 00:14:02,790
that to ie on event attach event thing

00:13:58,930 --> 00:14:02,790
and we pass a function

00:14:04,210 --> 00:14:08,540
now view so that should in theory now

00:14:07,010 --> 00:14:15,040
work in IE as well let's see if that

00:14:08,540 --> 00:14:15,040
works in IE see we want to let your oh

00:14:21,450 --> 00:14:31,360
yay three browsers all right yes you can

00:14:29,140 --> 00:14:34,950
post the parent as well to post the

00:14:31,360 --> 00:14:37,540
parent you just do parents post message

00:14:34,950 --> 00:14:38,740
you can also do this using window open

00:14:37,540 --> 00:14:41,070
if you have two completely different in

00:14:38,740 --> 00:14:43,900
doze basically any window any window

00:14:41,070 --> 00:14:46,480
object has a post message and if you

00:14:43,900 --> 00:14:52,120
call it it'll fire a message event on

00:14:46,480 --> 00:14:55,180
that on that object you cannot currently

00:14:52,120 --> 00:14:57,130
pass objects it's been requested

00:14:55,180 --> 00:14:58,690
multiple times and we're looking at that

00:14:57,130 --> 00:15:00,250
part of the problem with passing objects

00:14:58,690 --> 00:15:02,710
is so we could pass something that you

00:15:00,250 --> 00:15:04,090
know is JSON serializable and that's

00:15:02,710 --> 00:15:05,650
probably what we'll do the problem with

00:15:04,090 --> 00:15:07,600
passing arbitrary objects is the whole

00:15:05,650 --> 00:15:09,880
problem here is its cross origin and if

00:15:07,600 --> 00:15:11,530
you pass objects you end up with kinds

00:15:09,880 --> 00:15:13,570
of crazy stuff like passing scripts and

00:15:11,530 --> 00:15:18,490
getters and setters that are evil and

00:15:13,570 --> 00:15:20,320
stuff on it alright so that's that was

00:15:18,490 --> 00:15:22,000
post message let's see there's something

00:15:20,320 --> 00:15:29,010
called local storage which is a little

00:15:22,000 --> 00:15:34,510
bit like cookies so let's see do I have

00:15:29,010 --> 00:15:36,520
alright so let's pretend we're creating

00:15:34,510 --> 00:15:40,870
a text editor for no one in this room is

00:15:36,520 --> 00:15:45,550
ever created a text editor national so

00:15:40,870 --> 00:15:49,380
let's start with a simple form and then

00:15:45,550 --> 00:15:49,380
in there we'll just stick a text area

00:15:55,420 --> 00:16:02,230
alright so it's a very simple page see

00:16:07,649 --> 00:16:11,360
so it's just a regular text editor

00:16:11,569 --> 00:16:18,420
nothing too surprising there that's

00:16:14,970 --> 00:16:20,369
worked for about a decade now however

00:16:18,420 --> 00:16:23,430
let's start adding new stuff so say well

00:16:20,369 --> 00:16:24,720
so you want to just save and open files

00:16:23,430 --> 00:16:26,899
but you didn't want to send it back to

00:16:24,720 --> 00:16:29,790
the server you want to save them locally

00:16:26,899 --> 00:16:31,649
you could do that today using cookies to

00:16:29,790 --> 00:16:32,939
some extent the cookies are really

00:16:31,649 --> 00:16:35,910
awkward to work with for this kind of

00:16:32,939 --> 00:16:38,309
stuff there's a risk of they'll be sent

00:16:35,910 --> 00:16:39,689
along with the HTTP message you don't

00:16:38,309 --> 00:16:45,660
want to send all your documents over

00:16:39,689 --> 00:16:51,389
HTTP and they're also limited in size

00:16:45,660 --> 00:16:54,959
and number in ways that would be kind of

00:16:51,389 --> 00:16:58,829
awkward to change so instead what we're

00:16:54,959 --> 00:17:04,350
going to do is use local storage which

00:16:58,829 --> 00:17:13,649
is a feature in NH netsmart in html5 so

00:17:04,350 --> 00:17:15,990
let's add a file name control so now we

00:17:13,649 --> 00:17:26,459
have a file name control and then let's

00:17:15,990 --> 00:17:28,110
add an input button to open that will

00:17:26,459 --> 00:17:31,950
call a method will define a second

00:17:28,110 --> 00:17:34,470
called open and it will use the file

00:17:31,950 --> 00:17:36,980
name and then we have do another one for

00:17:34,470 --> 00:17:36,980
saving

00:17:40,260 --> 00:17:43,770
and now we need to define the scripts no

00:17:41,910 --> 00:17:45,990
this this is a I mean so far it's simple

00:17:43,770 --> 00:17:50,490
it's just a two buttons but we need a

00:17:45,990 --> 00:17:58,110
script to do this so let's define saving

00:17:50,490 --> 00:18:00,510
first how would you save well first we

00:17:58,110 --> 00:18:02,280
need the file name and we can use

00:18:00,510 --> 00:18:05,280
because these are form controls we can

00:18:02,280 --> 00:18:07,140
use the normal way of accessing form

00:18:05,280 --> 00:18:10,530
control values from the forms object on

00:18:07,140 --> 00:18:13,080
the document object and we named the

00:18:10,530 --> 00:18:16,980
forum editor up here you'll notice so we

00:18:13,080 --> 00:18:18,270
can do forms editor and then we can get

00:18:16,980 --> 00:18:23,310
file names straight out because the

00:18:18,270 --> 00:18:25,770
input control has the name file name so

00:18:23,310 --> 00:18:27,060
we can just do edit a file name and then

00:18:25,770 --> 00:18:29,190
we can get its value by doing dog value

00:18:27,060 --> 00:18:30,360
so this is how you get the file name out

00:18:29,190 --> 00:18:31,620
of control again there's nothing too

00:18:30,360 --> 00:18:34,200
surprising that's being an HTML for a

00:18:31,620 --> 00:18:38,070
while and we can do the same with

00:18:34,200 --> 00:18:40,260
getting the data out document form is

00:18:38,070 --> 00:18:41,430
not edit or look data dot value because

00:18:40,260 --> 00:18:45,990
that's the name about text area I think

00:18:41,430 --> 00:18:48,780
yep and now the one-liner that actually

00:18:45,990 --> 00:18:51,300
saves the data is you get the local

00:18:48,780 --> 00:18:54,600
storage object and you call set item on

00:18:51,300 --> 00:19:00,360
it and set item takes to a trattoria

00:18:54,600 --> 00:19:02,820
meters two arguments it takes a key and

00:19:00,360 --> 00:19:04,740
it takes a value the key here I've

00:19:02,820 --> 00:19:06,090
decided to use file dash so that we can

00:19:04,740 --> 00:19:08,280
also use local storage for storing

00:19:06,090 --> 00:19:09,830
settings and all kinds of stuff you can

00:19:08,280 --> 00:19:13,170
basically call the key whatever you like

00:19:09,830 --> 00:19:16,860
so here we that saves the data and then

00:19:13,170 --> 00:19:19,560
to get the data back out is pretty much

00:19:16,860 --> 00:19:22,100
the exact opposite we'll get the file

00:19:19,560 --> 00:19:26,000
name and then we'll just say that

00:19:22,100 --> 00:19:29,760
document.forms editor data value equals

00:19:26,000 --> 00:19:35,180
local storage got get item and then file

00:19:29,760 --> 00:19:38,930
funny and that's all there is to it so

00:19:35,180 --> 00:19:45,000
yes I do good call

00:19:38,930 --> 00:19:47,190
okay all right let's see so so Amy wants

00:19:45,000 --> 00:19:52,920
to say the world and we wanted to save

00:19:47,190 --> 00:19:57,810
that in first txt save there we go now

00:19:52,920 --> 00:19:59,190
we could open say earlier txt and that

00:19:57,810 --> 00:20:00,450
has nothing in it because we didn't put

00:19:59,190 --> 00:20:04,830
anything there but we can type in

00:20:00,450 --> 00:20:08,250
something we can save that and then we

00:20:04,830 --> 00:20:13,800
can reopen first txt oh there you go

00:20:08,250 --> 00:20:16,560
earlier dot txt but uh now this is the

00:20:13,800 --> 00:20:22,190
more surprising part of this demo oops

00:20:16,560 --> 00:20:22,190
wrong key let's try that again

00:20:27,960 --> 00:20:31,970
door snow

00:20:44,210 --> 00:20:55,200
I eSports us that surprises me i don't

00:20:51,480 --> 00:20:58,080
know about you guys so local storage is

00:20:55,200 --> 00:21:00,750
interesting but local storage stores the

00:20:58,080 --> 00:21:06,080
data client side and it stores it in all

00:21:00,750 --> 00:21:11,880
windows at once let's say we have a

00:21:06,080 --> 00:21:14,190
wizard and on this with the wizard we

00:21:11,880 --> 00:21:15,630
have a form and what we're going to have

00:21:14,190 --> 00:21:17,670
here is we have a wizard and it has

00:21:15,630 --> 00:21:19,830
three pages and on each page you give

00:21:17,670 --> 00:21:21,420
data and on the final page you hit next

00:21:19,830 --> 00:21:22,920
and then it loads up a fourth page and

00:21:21,420 --> 00:21:24,210
the fourth page users the data you took

00:21:22,920 --> 00:21:26,730
from the first few pages to create a

00:21:24,210 --> 00:21:28,670
form that's easy to do with CGI script

00:21:26,730 --> 00:21:30,630
we want to do it completely client-side

00:21:28,670 --> 00:21:32,340
except the pages are so far the server

00:21:30,630 --> 00:21:34,290
obviously but no script on the server

00:21:32,340 --> 00:21:36,200
side and we can do this using local

00:21:34,290 --> 00:21:39,690
store if you can just store the data

00:21:36,200 --> 00:21:41,340
locally on each page and then we can on

00:21:39,690 --> 00:21:44,130
the final page use document dot write or

00:21:41,340 --> 00:21:45,810
something to output the data so let's

00:21:44,130 --> 00:21:50,670
create the first page of what I just

00:21:45,810 --> 00:22:01,290
described so we want a forum in the

00:21:50,670 --> 00:22:05,030
forum we want a fee or text field let's

00:22:01,290 --> 00:22:07,320
just make it a normal text field and

00:22:05,030 --> 00:22:12,180
then we want a button that goes on to

00:22:07,320 --> 00:22:17,610
the next page so it submits the submit

00:22:12,180 --> 00:22:21,630
button and then we want to make this

00:22:17,610 --> 00:22:23,760
forum submit it to page two step to

00:22:21,630 --> 00:22:26,670
delay HTML this is step one doll HTML

00:22:23,760 --> 00:22:33,000
and we can use post so we don't get all

00:22:26,670 --> 00:22:34,140
the stuff in the URL field so that's all

00:22:33,000 --> 00:22:36,810
very well we didn't actually save any

00:22:34,140 --> 00:22:39,330
data on the client side so we can use on

00:22:36,810 --> 00:22:41,610
submit on the form which has existed for

00:22:39,330 --> 00:22:44,940
some time to save the data we can save

00:22:41,610 --> 00:22:48,980
n1n1 is the first input control here and

00:22:44,940 --> 00:22:48,980
then in the script

00:22:51,840 --> 00:22:58,359
we can just have a save method that

00:22:55,629 --> 00:23:02,200
takes the elements and then it will just

00:22:58,359 --> 00:23:07,029
store the data in local storage like we

00:23:02,200 --> 00:23:11,379
just did a few minutes ago see I'm in

00:23:07,029 --> 00:23:22,960
the name Ellen told a very simple so now

00:23:11,379 --> 00:23:30,639
let's let's demo this oops step 1 okay

00:23:22,960 --> 00:23:36,070
so let's say have three things on the

00:23:30,639 --> 00:23:37,659
final page I was lucky ah yes i forgot

00:23:36,070 --> 00:23:39,690
one thing so I like i said i actually

00:23:37,659 --> 00:23:42,609
created step 2 and step three or earlier

00:23:39,690 --> 00:23:44,649
but one thing that i forgot to do is

00:23:42,609 --> 00:23:47,559
that step 2 and step three are expecting

00:23:44,649 --> 00:23:50,379
the script which i just wrote to exist

00:23:47,559 --> 00:23:53,559
in a external script file which i didn't

00:23:50,379 --> 00:23:54,820
create so let's do that there we go so

00:23:53,559 --> 00:23:58,090
the the external script file is just

00:23:54,820 --> 00:24:01,869
that and then instead of now we can just

00:23:58,090 --> 00:24:06,629
stick everything in a script follow that

00:24:01,869 --> 00:24:12,340
way so let's try that again shall we

00:24:06,629 --> 00:24:15,629
step one in the nation oh so now it

00:24:12,340 --> 00:24:18,580
should assuming that it's not cash Larry

00:24:15,629 --> 00:24:20,320
and this is this page is very simple

00:24:18,580 --> 00:24:22,960
this page is literally just doing

00:24:20,320 --> 00:24:30,029
document all right with local store join

00:24:22,960 --> 00:24:30,029
100 in 203 now the problem is this

00:24:30,779 --> 00:24:34,529
imagine I have two of these

00:24:36,030 --> 00:24:49,120
and I go to step one in each and I type

00:24:46,660 --> 00:24:57,040
in you know I type something on on this

00:24:49,120 --> 00:24:59,250
one and then I type something on in this

00:24:57,040 --> 00:24:59,250
one

00:25:04,740 --> 00:25:10,350
now what i typed in the first one where

00:25:08,790 --> 00:25:12,360
the three words date ugly an insult

00:25:10,350 --> 00:25:14,520
which should appear in the output and

00:25:12,360 --> 00:25:17,280
then what i typed on this one our volume

00:25:14,520 --> 00:25:20,910
down and geezer and as you hit next here

00:25:17,280 --> 00:25:25,800
and hit next here it works fine but if

00:25:20,910 --> 00:25:27,270
we hit next on that one second you will

00:25:25,800 --> 00:25:29,370
see that the message their end up being

00:25:27,270 --> 00:25:33,840
corrupted with message with text from

00:25:29,370 --> 00:25:36,090
this one that's not good in fact that's

00:25:33,840 --> 00:25:39,809
someone annoying and a few years ago i

00:25:36,090 --> 00:25:41,250
was trying to buy plane tickets and end

00:25:39,809 --> 00:25:42,690
up with exactly this problem much more

00:25:41,250 --> 00:25:43,950
serious way which is I was I had two

00:25:42,690 --> 00:25:45,270
completely separate windows open and I

00:25:43,950 --> 00:25:46,679
was busy buying tickets on one and

00:25:45,270 --> 00:25:47,880
looking for tickets and other and I was

00:25:46,679 --> 00:25:50,130
like okay which one's the best ticket

00:25:47,880 --> 00:25:51,809
okay i want to buy that one click Submit

00:25:50,130 --> 00:25:53,820
but of course i changed that page last

00:25:51,809 --> 00:25:56,820
and so that one is a ticket that

00:25:53,820 --> 00:25:58,380
nineteen eighty got bought which is

00:25:56,820 --> 00:26:02,820
somewhat more serious than you know some

00:25:58,380 --> 00:26:04,710
mad libs here but in html5 we have a

00:26:02,820 --> 00:26:07,670
very simple solution to this which is we

00:26:04,710 --> 00:26:11,280
can instead of using local storage use

00:26:07,670 --> 00:26:15,000
session storage and we can do the same

00:26:11,280 --> 00:26:16,710
in the last page allow the final page

00:26:15,000 --> 00:26:21,830
here use session storage instead of

00:26:16,710 --> 00:26:28,740
local storage and now if we try this

00:26:21,830 --> 00:26:33,020
make sure to reload the page let's see

00:26:28,740 --> 00:26:33,020
so well let's put into three things here

00:26:35,870 --> 00:26:40,180
and then put three things on this one

00:26:43,570 --> 00:26:49,940
now if I hit next on this page here

00:26:47,809 --> 00:26:52,400
everything should work because the

00:26:49,940 --> 00:26:55,730
values the most recently set where this

00:26:52,400 --> 00:26:58,100
one and on this one if we done this on

00:26:55,730 --> 00:27:00,080
the in the previous way it would now be

00:26:58,100 --> 00:27:02,240
you know mixing the words up however

00:27:00,080 --> 00:27:08,990
because we use session storage they're

00:27:02,240 --> 00:27:15,980
different success this also works in

00:27:08,990 --> 00:27:24,710
theory in Firefox you can type in three

00:27:15,980 --> 00:27:31,070
things here aha and then we might even

00:27:24,710 --> 00:27:33,370
work in IE let's try that first step

00:27:31,070 --> 00:27:33,370
first

00:27:42,650 --> 00:27:51,050
uh so that's three browsers that worked

00:27:46,460 --> 00:27:56,420
in all right now let's see the next time

00:27:51,050 --> 00:28:05,060
is going to be about drag and drop yes

00:27:56,420 --> 00:28:11,300
question yes local storage it's all by

00:28:05,060 --> 00:28:14,530
domain a session storage is by session

00:28:11,300 --> 00:28:17,450
which is actually basically by byte tab

00:28:14,530 --> 00:28:20,270
the specs says then if you like open a

00:28:17,450 --> 00:28:22,850
page from it open a new tab from a tab

00:28:20,270 --> 00:28:24,590
it should clone the session storage so

00:28:22,850 --> 00:28:26,000
you end up with you still have the old

00:28:24,590 --> 00:28:28,340
data but then from that point on it

00:28:26,000 --> 00:28:29,990
later separately the lifetime of session

00:28:28,340 --> 00:28:34,750
data of session storage rather is

00:28:29,990 --> 00:28:38,570
whatever the browser thinks is a session

00:28:34,750 --> 00:28:40,550
so typically lifetime of the browser or

00:28:38,570 --> 00:28:44,330
a lifetime of that window the lifetime

00:28:40,550 --> 00:28:45,890
of local storage is indefinite or until

00:28:44,330 --> 00:28:50,170
the user clears cookies whichever comes

00:28:45,890 --> 00:28:52,640
first they're basically lifetime cookies

00:28:50,170 --> 00:28:55,070
except they're much there's much simpler

00:28:52,640 --> 00:28:58,690
API and they don't get sent over the

00:28:55,070 --> 00:29:08,630
network and hopefully the limits will be

00:28:58,690 --> 00:29:12,580
more large initially all right so my

00:29:08,630 --> 00:29:12,580
next demo is going to be a drag and drop

00:29:12,820 --> 00:29:25,360
so I have three images that I have set

00:29:15,770 --> 00:29:25,360
up here I have an image of a can of spam

00:29:29,150 --> 00:29:41,460
always put your alt attributes I have an

00:29:37,830 --> 00:29:51,000
image of a bird sitting on an egg and

00:29:41,460 --> 00:29:52,950
then I have an image of a cat I remember

00:29:51,000 --> 00:29:58,160
the Kazakh gif or PNG let's hope it's a

00:29:52,950 --> 00:29:58,160
PNG let's see

00:30:03,420 --> 00:30:07,630
alright those cats those images are a

00:30:05,890 --> 00:30:10,840
bit big but they were you have a can of

00:30:07,630 --> 00:30:15,940
spam and egg and I can't let's make the

00:30:10,840 --> 00:30:17,590
images a bit smaller again style doesn't

00:30:15,940 --> 00:30:20,700
need a type attribute in html5 it will

00:30:17,590 --> 00:30:26,950
assume its CSS which should make

00:30:20,700 --> 00:30:32,500
authoring a bit easier all right much

00:30:26,950 --> 00:30:35,680
better so we have three images we can

00:30:32,500 --> 00:30:36,730
drag them but actually what let's close

00:30:35,680 --> 00:30:42,570
this window what's actually happening

00:30:36,730 --> 00:30:45,730
when we drag them is it's trying to drag

00:30:42,570 --> 00:30:47,650
the image for selection so I can type in

00:30:45,730 --> 00:30:50,980
there to actually type in the URL or if

00:30:47,650 --> 00:30:52,990
I in Firefox I can drag the image belief

00:30:50,980 --> 00:30:54,160
to the Novikov erected baby i can write

00:30:52,990 --> 00:30:55,630
it to like tabs and it will actually

00:30:54,160 --> 00:30:59,980
open a new tab with that image and stuff

00:30:55,630 --> 00:31:05,800
like that much time whether you can dry

00:30:59,980 --> 00:31:09,910
text now let's let's create somewhere to

00:31:05,800 --> 00:31:14,590
drag these two so let's say we have two

00:31:09,910 --> 00:31:16,450
divs and in each div we have one of them

00:31:14,590 --> 00:31:21,940
is the good div and what if will be the

00:31:16,450 --> 00:31:26,560
bad div let's do that and then let's

00:31:21,940 --> 00:31:28,690
style these divs so they look like drop

00:31:26,560 --> 00:31:36,210
targets of a kind let's ease or some

00:31:28,690 --> 00:31:36,210
margins black border

00:31:36,880 --> 00:31:40,900
let's enter the text in

00:31:48,590 --> 00:31:54,880
oh and give them a height and width as

00:31:52,669 --> 00:31:54,880
well

00:31:57,890 --> 00:32:03,230
alright then we'll float them to put up

00:31:59,750 --> 00:32:11,270
side by side so there we go we should

00:32:03,230 --> 00:32:16,130
put the images on labour in line there

00:32:11,270 --> 00:32:18,470
we go okay but we can't drag them to

00:32:16,130 --> 00:32:19,700
there yet but that's what we'd like to

00:32:18,470 --> 00:32:22,190
do we'd like to drag them into there and

00:32:19,700 --> 00:32:24,770
have them appear in there so what we do

00:32:22,190 --> 00:32:26,240
now is we use the drag-and-drop API this

00:32:24,770 --> 00:32:29,420
nation of 5 the dragon drop a PR agent

00:32:26,240 --> 00:32:33,400
in html5 is actually a reverse

00:32:29,420 --> 00:32:33,400
engineering of ie's drag-and-drop API

00:32:33,580 --> 00:32:41,750
it's not the simplest of AP is as you'll

00:32:38,870 --> 00:32:45,290
see but it has advantage of working in

00:32:41,750 --> 00:32:48,590
IE which probably wouldnt be the case if

00:32:45,290 --> 00:32:51,740
we made up our own so I see to make it

00:32:48,590 --> 00:32:54,590
possible to drag the images will have to

00:32:51,740 --> 00:32:57,920
create some script which does some of

00:32:54,590 --> 00:33:02,630
the common things here so it will have a

00:32:57,920 --> 00:33:11,840
function called drag which will invoke

00:33:02,630 --> 00:33:13,970
from the images and it needs an element

00:33:11,840 --> 00:33:15,680
is being dragged the target and it needs

00:33:13,970 --> 00:33:19,250
the event and what it does well the old

00:33:15,680 --> 00:33:22,090
simply do is take a data transfer object

00:33:19,250 --> 00:33:24,950
which is found on the event and set data

00:33:22,090 --> 00:33:26,600
just to actually say what am i dragging

00:33:24,950 --> 00:33:31,660
and we'll say that we are dragging some

00:33:26,600 --> 00:33:35,060
text and we'll drag the actual ID of the

00:33:31,660 --> 00:33:42,400
of the image and when we just call this

00:33:35,060 --> 00:33:42,400
from each image like willingly

00:33:43,260 --> 00:33:49,540
a method like that there we go okay so

00:33:48,220 --> 00:33:50,860
now that will make things draggable but

00:33:49,540 --> 00:33:52,090
it won't make things droppable to make

00:33:50,860 --> 00:33:54,580
them droppable we need to make these

00:33:52,090 --> 00:33:57,780
drop targets do something and so we need

00:33:54,580 --> 00:34:00,820
a similar function which is drop and

00:33:57,780 --> 00:34:02,110
then drop is similar it will take the

00:34:00,820 --> 00:34:09,820
element that you're dropping into and

00:34:02,110 --> 00:34:12,639
the event and the see what we want to do

00:34:09,820 --> 00:34:16,600
is actually drop the target into a drop

00:34:12,639 --> 00:34:18,940
the thing being dragged into the div so

00:34:16,600 --> 00:34:21,030
we want to append child or the image

00:34:18,940 --> 00:34:27,210
onto the day of the deficit target here

00:34:21,030 --> 00:34:31,240
and we have its ID we got its ID from

00:34:27,210 --> 00:34:33,129
from the event because we put it into

00:34:31,240 --> 00:34:38,530
the event when we drag using set data

00:34:33,129 --> 00:34:41,830
and so we can use get data to get the

00:34:38,530 --> 00:34:43,060
text back out and that should give us an

00:34:41,830 --> 00:34:46,889
ID and then we can just use document

00:34:43,060 --> 00:34:46,889
locator Mumbai ID to get the actual

00:34:47,040 --> 00:34:52,060
image so that should drop the image now

00:34:50,350 --> 00:34:53,950
the problem is that when you're dragging

00:34:52,060 --> 00:34:55,090
an image like I showed earlier browsers

00:34:53,950 --> 00:34:56,830
have default behavior and we want to

00:34:55,090 --> 00:35:00,040
cancel that default behavior and what we

00:34:56,830 --> 00:35:03,310
do is we call prevent default on the

00:35:00,040 --> 00:35:05,859
event itself to prevent the event from

00:35:03,310 --> 00:35:08,130
firing so oh and we also need to

00:35:05,859 --> 00:35:14,710
actually make hook this up to the divs

00:35:08,130 --> 00:35:17,770
which we do by saying on drop drop onto

00:35:14,710 --> 00:35:19,240
this with the event that makes it

00:35:17,770 --> 00:35:21,190
possible to drop and then there's also

00:35:19,240 --> 00:35:23,410
two other things we have to add mrs.

00:35:21,190 --> 00:35:25,720
where I said things slightly more

00:35:23,410 --> 00:35:27,460
concretely than need to be we have to

00:35:25,720 --> 00:35:30,070
make it so that when you dragged into a

00:35:27,460 --> 00:35:33,070
div the diff says yes I can take it and

00:35:30,070 --> 00:35:35,260
when you stay dragging over the div the

00:35:33,070 --> 00:35:37,810
diff says yes copying to hear or moving

00:35:35,260 --> 00:35:43,119
to hear is fine and there's two very

00:35:37,810 --> 00:35:44,830
simple ways of doing that on drag enter

00:35:43,119 --> 00:35:46,450
is the one that says you know are you a

00:35:44,830 --> 00:35:48,369
drag target or not if you just cancel

00:35:46,450 --> 00:35:50,619
the event by returning false then it

00:35:48,369 --> 00:35:53,470
will say it is and on drag over is the

00:35:50,619 --> 00:35:55,510
other one by default if you don't return

00:35:53,470 --> 00:35:56,290
false from on drag over it will assume

00:35:55,510 --> 00:35:58,120
you can't

00:35:56,290 --> 00:35:59,740
assume it's a drag target but assume

00:35:58,120 --> 00:36:01,690
there's nothing you can do with what

00:35:59,740 --> 00:36:04,150
you're dragging which is basically the

00:36:01,690 --> 00:36:08,910
same saying it's not drag target and but

00:36:04,150 --> 00:36:11,710
if you return false false to this event

00:36:08,910 --> 00:36:14,350
it'll it'll say yes whatever the default

00:36:11,710 --> 00:36:16,420
behavior is moving in this case accept

00:36:14,350 --> 00:36:22,000
it and so we can do the same thing to

00:36:16,420 --> 00:36:24,370
the Abdullah we should be able to drag

00:36:22,000 --> 00:36:25,780
images it also see oh yes i can start

00:36:24,370 --> 00:36:30,370
dragging but that happened before can i

00:36:25,780 --> 00:36:32,800
dragged into here but uh so we're saying

00:36:30,370 --> 00:36:38,080
oh it's Pam's bad and eggs are good they

00:36:32,800 --> 00:36:47,910
view so this works in firefox that was

00:36:38,080 --> 00:36:50,800
firefox it works in WebKit or safari and

00:36:47,910 --> 00:36:57,190
if i did the incantations just right or

00:36:50,800 --> 00:37:00,700
even work in IE yes so dragon drop works

00:36:57,190 --> 00:37:02,350
in three browsers dragon drop actually

00:37:00,700 --> 00:37:04,350
works in has worked in IE for a long

00:37:02,350 --> 00:37:07,180
time but like i said this is an IE api

00:37:04,350 --> 00:37:08,470
and i think it's even worked in safari

00:37:07,180 --> 00:37:09,700
for a long time because back when i was

00:37:08,470 --> 00:37:14,230
reverse engineering it a couple years

00:37:09,700 --> 00:37:15,280
ago for the spec so far i already had an

00:37:14,230 --> 00:37:17,920
implantation so it's probably already

00:37:15,280 --> 00:37:19,420
 like i said all the builds i'm

00:37:17,920 --> 00:37:20,800
showing here and nightly builds so i'm

00:37:19,420 --> 00:37:25,000
not saying any of this will actually

00:37:20,800 --> 00:37:26,380
work in today's release browsers alright

00:37:25,000 --> 00:37:29,710
so let's see this because all these

00:37:26,380 --> 00:37:33,100
files the next demo unless there any

00:37:29,710 --> 00:37:35,140
questions on it next demo is on hash

00:37:33,100 --> 00:37:37,030
change this is one of the few things i

00:37:35,140 --> 00:37:44,740
have to demo which is from html5 which

00:37:37,030 --> 00:37:46,510
only IE has implemented this is a very

00:37:44,740 --> 00:37:50,440
simple thing imagine you have a page

00:37:46,510 --> 00:37:52,530
that's got a bunch of fragment

00:37:50,440 --> 00:37:52,530
identifiers

00:37:54,160 --> 00:38:03,300
see these two for example historically

00:38:08,589 --> 00:38:12,319
historically there's been no way for the

00:38:10,670 --> 00:38:14,630
script to really know when you've

00:38:12,319 --> 00:38:20,420
clicked these I mean you could hook into

00:38:14,630 --> 00:38:23,150
every link but that's kind of a pain so

00:38:20,420 --> 00:38:30,490
what we've added in html5 is on hash

00:38:23,150 --> 00:38:34,819
change let's call update on with that

00:38:30,490 --> 00:38:37,220
and then what on hash change does is it

00:38:34,819 --> 00:38:39,710
says something changed with the fragment

00:38:37,220 --> 00:38:43,010
n 25 part the hash part the part after

00:38:39,710 --> 00:38:44,990
the hash in the in the current URL and

00:38:43,010 --> 00:38:47,500
so we can check you know if location

00:38:44,990 --> 00:39:00,920
won't we I mean we know that is a hash

00:38:47,500 --> 00:39:05,869
let's see we can get the the the hash

00:39:00,920 --> 00:39:08,780
sorry occasion the hash let's stop

00:39:05,869 --> 00:39:14,000
stirring one there yet oh we do have to

00:39:08,780 --> 00:39:18,260
check to see the location yes I did good

00:39:14,000 --> 00:39:19,970
call thank you so if location don't hash

00:39:18,260 --> 00:39:24,289
that means if there is a fragment

00:39:19,970 --> 00:39:27,500
identifier then we get the actual value

00:39:24,289 --> 00:39:33,950
of it and then we can set it so let's

00:39:27,500 --> 00:39:38,270
say we had an element here equals

00:39:33,950 --> 00:39:45,190
message we could say document dot get

00:39:38,270 --> 00:39:50,839
element by ID message but first child

00:39:45,190 --> 00:39:54,470
data equals message so now when we

00:39:50,839 --> 00:39:58,819
reload this in theory if i click on

00:39:54,470 --> 00:40:00,710
things there you as we clicking on the

00:39:58,819 --> 00:40:05,210
links hash change is firing and it's

00:40:00,710 --> 00:40:09,190
changing the the text you can also

00:40:05,210 --> 00:40:12,589
conveniently just call this on unload

00:40:09,190 --> 00:40:14,059
and that way if someone bookmarks this

00:40:12,589 --> 00:40:15,980
and then comes back to it later or

00:40:14,059 --> 00:40:21,660
changes your themselves that will also

00:40:15,980 --> 00:40:23,739
work you know so they can type

00:40:21,660 --> 00:40:26,019
say they bookmark something else and

00:40:23,739 --> 00:40:27,969
your script can know straight away and

00:40:26,019 --> 00:40:33,459
i'll still work with clicking on the

00:40:27,969 --> 00:40:37,420
links here so that's useful for making

00:40:33,459 --> 00:40:38,439
web apps that have links that don't you

00:40:37,420 --> 00:40:40,089
know you don't have to hook into the

00:40:38,439 --> 00:40:42,939
script all over the UI you can just hook

00:40:40,089 --> 00:40:44,380
in when you click the link i like i said

00:40:42,939 --> 00:40:45,880
that works in IE today doesn't work in

00:40:44,380 --> 00:40:49,749
other browsers although it's relatively

00:40:45,880 --> 00:40:53,289
simple to implement so who knows let's

00:40:49,749 --> 00:40:55,539
see one of my final demos here is going

00:40:53,289 --> 00:40:58,359
to be widgets one of the first things we

00:40:55,539 --> 00:41:03,699
did with html5 is introduced a whole

00:40:58,359 --> 00:41:05,979
stack of new form controls and then we

00:41:03,699 --> 00:41:07,900
scare the way back because adding too

00:41:05,979 --> 00:41:11,859
much stuff at once confuses the browser

00:41:07,900 --> 00:41:16,059
vendors but a lot of them survived

00:41:11,859 --> 00:41:24,059
anyway input type equals range for

00:41:16,059 --> 00:41:24,059
example let's see

00:41:25,870 --> 00:41:30,660
there you go arrange control in HTML

00:41:34,740 --> 00:41:48,490
works an opportune right now they're not

00:41:46,120 --> 00:41:52,510
so much the question was how stable up

00:41:48,490 --> 00:41:55,060
styla bilar they one thing that we

00:41:52,510 --> 00:41:57,010
haven't yet looked at in html5 which is

00:41:55,060 --> 00:42:00,040
one of the things I've been pushing off

00:41:57,010 --> 00:42:01,960
because it's really kind of awkward and

00:42:00,040 --> 00:42:05,680
complicated is how to style form

00:42:01,960 --> 00:42:07,570
controls in general and you know as

00:42:05,680 --> 00:42:09,250
everyone here knows the form controls in

00:42:07,570 --> 00:42:12,280
general as you know the state ability is

00:42:09,250 --> 00:42:14,080
an issue it's something that will be

00:42:12,280 --> 00:42:15,400
looked at and we we definitely wanted to

00:42:14,080 --> 00:42:17,640
find some things like you'll notice both

00:42:15,400 --> 00:42:20,320
of the form controls in Safari and opera

00:42:17,640 --> 00:42:23,800
have roughly the same size not quite but

00:42:20,320 --> 00:42:26,020
roughly the idea is that on the

00:42:23,800 --> 00:42:28,510
long-term will or in medium term even

00:42:26,020 --> 00:42:29,920
will stabilize on you know okay you can

00:42:28,510 --> 00:42:31,510
render it according to your whatever

00:42:29,920 --> 00:42:33,850
your platform is but at least have it

00:42:31,510 --> 00:42:35,620
like these dimensions if you respond to

00:42:33,850 --> 00:42:36,760
this particular CSS at least responding

00:42:35,620 --> 00:42:38,710
you know to this one and this one and

00:42:36,760 --> 00:42:40,480
this one so for that and we want to do

00:42:38,710 --> 00:42:43,320
that for all the phone controls right

00:42:40,480 --> 00:42:46,270
now I mean one of the big problems that

00:42:43,320 --> 00:42:49,600
browsers have is when you put an input

00:42:46,270 --> 00:42:51,460
type because text control there's a

00:42:49,600 --> 00:42:53,920
really weird algorithm you have to use

00:42:51,460 --> 00:42:55,750
to work out how to map from the size

00:42:53,920 --> 00:42:58,690
attribute which is number of characters

00:42:55,750 --> 00:43:00,190
to the actual width in pixels and it

00:42:58,690 --> 00:43:02,260
involves like working out the average

00:43:00,190 --> 00:43:03,940
width of the current font and then

00:43:02,260 --> 00:43:05,410
multiplying by a particular factor in

00:43:03,940 --> 00:43:07,030
all kinds of weird stuff and this is all

00:43:05,410 --> 00:43:09,580
because you know Netscape for or even

00:43:07,030 --> 00:43:10,780
earlier had some weird algorithm and

00:43:09,580 --> 00:43:11,950
then Internet Explorer reverse

00:43:10,780 --> 00:43:13,600
engineered it because they needed to be

00:43:11,950 --> 00:43:15,220
compatible and then it's like gone

00:43:13,600 --> 00:43:16,390
worsened with every generation the

00:43:15,220 --> 00:43:17,500
algorithm changes slightly because the

00:43:16,390 --> 00:43:18,520
reverse engineering was slightly wrong

00:43:17,500 --> 00:43:19,780
and so it gets slightly more complicated

00:43:18,520 --> 00:43:21,580
than there's more educators and then you

00:43:19,780 --> 00:43:22,960
find another page that depends on a

00:43:21,580 --> 00:43:24,580
previous version and so you end up with

00:43:22,960 --> 00:43:25,960
these really complicated things and we

00:43:24,580 --> 00:43:28,290
do want to specify all that and actually

00:43:25,960 --> 00:43:30,660
say exactly what the algorithm should be

00:43:28,290 --> 00:43:34,230
but yeah that's one of the things that

00:43:30,660 --> 00:43:36,850
has been delayed because it's hardened

00:43:34,230 --> 00:43:38,970
not not as critical as some of the

00:43:36,850 --> 00:43:38,970
residents

00:43:40,680 --> 00:43:49,269
right so what can you do with the range

00:43:43,690 --> 00:43:53,289
control say we had a development down

00:43:49,269 --> 00:43:58,299
here we could say on input on the range

00:43:53,289 --> 00:44:02,859
control and then we can get the elements

00:43:58,299 --> 00:44:07,089
by I can name get the div and then

00:44:02,859 --> 00:44:15,749
change its font size say we're getting

00:44:07,089 --> 00:44:19,049
near the end of the screen here so now

00:44:15,749 --> 00:44:19,049
leap you

00:44:23,020 --> 00:44:32,890
I see we can also do something like we

00:44:30,010 --> 00:44:34,420
could change the content since instead

00:44:32,890 --> 00:44:37,060
of changing the font size you could say

00:44:34,420 --> 00:44:42,520
age 45 will be ready in and then we

00:44:37,060 --> 00:44:45,520
could have like a span element and then

00:44:42,520 --> 00:44:49,390
here we change this to be span element

00:44:45,520 --> 00:44:54,240
and then use text content from Dom three

00:44:49,390 --> 00:44:54,240
and then value

00:44:58,030 --> 00:45:04,790
these dates are kind of low we can

00:45:03,320 --> 00:45:14,330
change that though we have several new

00:45:04,790 --> 00:45:18,110
attributes here so now it's much more

00:45:14,330 --> 00:45:27,650
sensible range there we go and then this

00:45:18,110 --> 00:45:30,250
will work in operas oh now the script

00:45:27,650 --> 00:45:32,420
here it's kind of a pain that the

00:45:30,250 --> 00:45:35,870
document don't get on my tag name and

00:45:32,420 --> 00:45:37,520
all that nonsense so you remember I

00:45:35,870 --> 00:45:39,080
mentioned earlier about forms and how

00:45:37,520 --> 00:45:44,360
you've got much more convenient access

00:45:39,080 --> 00:45:46,220
to things and forms you can use this by

00:45:44,360 --> 00:45:48,110
instead of using a span if we put

00:45:46,220 --> 00:45:51,080
everything in a form we can use the new

00:45:48,110 --> 00:45:52,490
output element which basically works a

00:45:51,080 --> 00:45:58,820
little like an input element except it's

00:45:52,490 --> 00:46:03,200
for output and then instead of all this

00:45:58,820 --> 00:46:04,550
nonsense we can just say year and we

00:46:03,200 --> 00:46:05,840
don't need to take something we just use

00:46:04,550 --> 00:46:07,730
value for consistency with the other

00:46:05,840 --> 00:46:12,050
controls all the text content will look

00:46:07,730 --> 00:46:14,590
as well and now yeah it's Tori much

00:46:12,050 --> 00:46:14,590
simpler script

00:46:18,860 --> 00:46:24,300
lazy people are the main target origins

00:46:21,300 --> 00:46:27,570
of the Apple to them actually I mean

00:46:24,300 --> 00:46:28,860
part of the reason is it helps like on

00:46:27,570 --> 00:46:32,400
the page you can might have span

00:46:28,860 --> 00:46:33,780
elements or numbers of reasons but if

00:46:32,400 --> 00:46:36,630
you come across an epidemic you know

00:46:33,780 --> 00:46:38,460
that is where you're putting data output

00:46:36,630 --> 00:46:41,100
also has a for attribute which lets you

00:46:38,460 --> 00:46:42,750
say that this output control is for this

00:46:41,100 --> 00:46:44,610
this and this like if you have a bunch

00:46:42,750 --> 00:46:46,800
of numbers and you'll adding them up and

00:46:44,610 --> 00:46:49,710
they end up here you can say this output

00:46:46,800 --> 00:46:51,750
is for these numbers and then in theory

00:46:49,710 --> 00:46:53,160
and I don't know that there's any plans

00:46:51,750 --> 00:46:55,680
necessarily implements anytime soon but

00:46:53,160 --> 00:46:57,570
in theory accessibility tools can say oh

00:46:55,680 --> 00:46:59,340
this output element is for those if

00:46:57,570 --> 00:47:00,720
you're looking at this number maybe you

00:46:59,340 --> 00:47:02,550
want to have a look at what the numbers

00:47:00,720 --> 00:47:06,390
are actually relating to and it can

00:47:02,550 --> 00:47:07,530
point you straight up to there yes yes a

00:47:06,390 --> 00:47:08,760
lot of these so the question was is

00:47:07,530 --> 00:47:10,230
taken from web forms all of the things

00:47:08,760 --> 00:47:11,550
I'm demoing right now with the widgets

00:47:10,230 --> 00:47:13,619
and all that are all part of web forms

00:47:11,550 --> 00:47:16,080
to originally web forms to is being

00:47:13,619 --> 00:47:17,280
merged into html5 as we speak well not

00:47:16,080 --> 00:47:19,320
as we speak right now because I'm the

00:47:17,280 --> 00:47:24,690
one doing it but before this talk and

00:47:19,320 --> 00:47:26,160
after this talk the immersion 2805 so

00:47:24,690 --> 00:47:35,310
let's see what we're doing here is we're

00:47:26,160 --> 00:47:36,690
showing a date right so the question is

00:47:35,310 --> 00:47:39,300
whether outputs are same is span from a

00:47:36,690 --> 00:47:40,380
styling CSS point of view yes from

00:47:39,300 --> 00:47:43,500
add-on point of view it has a whole

00:47:40,380 --> 00:47:45,480
bunch of API is like dot value so you

00:47:43,500 --> 00:47:48,330
can easily use it from forms and it fits

00:47:45,480 --> 00:47:50,010
into the forms list as I just devastated

00:47:48,330 --> 00:47:54,930
but fear from a starting point of view

00:47:50,010 --> 00:47:56,190
it's basically the same span alright so

00:47:54,930 --> 00:47:58,320
what we're doing here is we're setting a

00:47:56,190 --> 00:48:00,420
date so instead of input type equals

00:47:58,320 --> 00:48:07,770
range what we really should do is input

00:48:00,420 --> 00:48:13,140
type equals date that are really really

00:48:07,770 --> 00:48:15,840
ugly I apologize it's very ugly and only

00:48:13,140 --> 00:48:18,359
opera implement this right now but it's

00:48:15,840 --> 00:48:19,590
a step in the right direction so we can

00:48:18,359 --> 00:48:22,109
set a date and then you know he gets

00:48:19,590 --> 00:48:31,800
ready it's ready today no they're ready

00:48:22,109 --> 00:48:33,360
next week we can also we can also use

00:48:31,800 --> 00:48:35,910
if you want to get the actual date we

00:48:33,360 --> 00:48:37,770
can use a value as date value as date

00:48:35,910 --> 00:48:40,740
will return the value attribute parsed

00:48:37,770 --> 00:48:43,020
into an actual date object and so you

00:48:40,740 --> 00:48:44,610
can then do things like get year so that

00:48:43,020 --> 00:48:49,790
instead of giving the exact date we're

00:48:44,610 --> 00:48:49,790
back to giving a year there you go

00:48:51,140 --> 00:49:03,240
another control is I heard color several

00:49:01,650 --> 00:49:05,270
people have asked for a color control

00:49:03,240 --> 00:49:08,040
and it is something that I've considered

00:49:05,270 --> 00:49:10,170
however if you look at actual color

00:49:08,040 --> 00:49:11,790
widgets they are so incredibly

00:49:10,170 --> 00:49:15,330
complicated and varied that is not

00:49:11,790 --> 00:49:18,450
really clear what we should do I have

00:49:15,330 --> 00:49:19,920
considered doing a color control that is

00:49:18,450 --> 00:49:21,300
defined to be basically the mac OS 9

00:49:19,920 --> 00:49:23,370
Colonel control where all you have is a

00:49:21,300 --> 00:49:24,480
button with a color and then you click

00:49:23,370 --> 00:49:26,750
the button and everything that happens

00:49:24,480 --> 00:49:30,690
from that point on is up to the browser

00:49:26,750 --> 00:49:34,110
because you know this is like way the

00:49:30,690 --> 00:49:35,790
heck too much to put in spec and so that

00:49:34,110 --> 00:49:37,110
might happen we might add something like

00:49:35,790 --> 00:49:38,910
that right now that isn't in there

00:49:37,110 --> 00:49:39,990
there's a few other things that are in

00:49:38,910 --> 00:49:42,960
there one thing that's not in there for

00:49:39,990 --> 00:49:45,060
example is a location-aware input

00:49:42,960 --> 00:49:48,450
control that actually wasn't a very

00:49:45,060 --> 00:49:49,740
early draft and so you know for example

00:49:48,450 --> 00:49:50,880
if you had GPS device we could

00:49:49,740 --> 00:49:52,230
automatically hooking up with that

00:49:50,880 --> 00:49:55,590
previously concerns no kinds of concerns

00:49:52,230 --> 00:49:57,300
with that yeah like I said originally we

00:49:55,590 --> 00:50:00,720
had a lot of controls and its scale back

00:49:57,300 --> 00:50:01,800
a lot but color is certainly top of the

00:50:00,720 --> 00:50:03,420
list of things that people have asked

00:50:01,800 --> 00:50:09,170
for that isn't aren't currently in there

00:50:03,420 --> 00:50:09,170
I see one of the things that is in there

00:50:11,960 --> 00:50:18,500
is a URL and email fields

00:50:24,369 --> 00:50:28,980
these are quite common if you're ever

00:50:26,170 --> 00:50:35,170
commenting on blog posts you'll see that

00:50:28,980 --> 00:50:38,980
this is a very common thing so for

00:50:35,170 --> 00:50:44,109
example you can type you are else here

00:50:38,980 --> 00:50:47,230
and if here you go if i type in URL that

00:50:44,109 --> 00:50:48,970
is already there operable it will allow

00:50:47,230 --> 00:50:51,670
me to order complete straight from my

00:50:48,970 --> 00:50:53,079
browsing history and similarly if I had

00:50:51,670 --> 00:50:58,210
email accounts I believe it would auto

00:50:53,079 --> 00:51:04,180
complete on email here we can stall the

00:50:58,210 --> 00:51:06,880
controls using CSS the I'm not going to

00:51:04,180 --> 00:51:08,589
talk about exactly how you change their

00:51:06,880 --> 00:51:11,799
looks but I am going to talk about a

00:51:08,589 --> 00:51:13,240
sooner class invalid which you can use

00:51:11,799 --> 00:51:19,660
with beige you can be you can give it

00:51:13,240 --> 00:51:22,029
like color so now if I reload this and i

00:51:19,660 --> 00:51:23,799
start typing here it goes red because

00:51:22,029 --> 00:51:25,809
this isn't a valid email address if i

00:51:23,799 --> 00:51:29,440
type a valid email address as soon as i

00:51:25,809 --> 00:51:38,470
type about it it'll stop being so being

00:51:29,440 --> 00:51:40,480
read similarly the URL field would be

00:51:38,470 --> 00:51:44,519
the same if you type in an invite one

00:51:40,480 --> 00:51:44,519
it's person just a value RL switch to

00:51:47,830 --> 00:51:53,320
you don't need to do anything that's the

00:51:50,080 --> 00:51:58,060
market oh if you actually want to find

00:51:53,320 --> 00:52:01,360
if it so there is an API input validity

00:51:58,060 --> 00:52:02,530
i believe ya input door validity door

00:52:01,360 --> 00:52:03,850
valid or something of that and you can

00:52:02,530 --> 00:52:05,440
find out what's wrong with it find if

00:52:03,850 --> 00:52:06,730
it's too long or if it's the wrong type

00:52:05,440 --> 00:52:08,950
or if it's missing when it's required

00:52:06,730 --> 00:52:12,400
I'll show that in a second yeah there's

00:52:08,950 --> 00:52:14,020
a whole API for looking into that you

00:52:12,400 --> 00:52:16,930
can also say that it's involved there's

00:52:14,020 --> 00:52:18,850
a way you can set a string and if you've

00:52:16,930 --> 00:52:20,500
set the string to a nominal value that

00:52:18,850 --> 00:52:24,250
means that the controller is invalid in

00:52:20,500 --> 00:52:25,390
some custom defined way and then that

00:52:24,250 --> 00:52:27,820
string is what will be shown to the user

00:52:25,390 --> 00:52:40,110
if the user is told that the foreign

00:52:27,820 --> 00:52:40,110
some valid let's see we can also do yes

00:52:41,580 --> 00:52:51,160
it's just checking to make sure the

00:52:43,540 --> 00:52:54,880
syntax is right comments are explicitly

00:52:51,160 --> 00:52:58,930
the question is whether the email field

00:52:54,880 --> 00:53:01,470
will check the value of the RFC and the

00:52:58,930 --> 00:53:03,310
answer is yes except for comments

00:53:01,470 --> 00:53:05,560
because yeah comments are just

00:53:03,310 --> 00:53:07,210
ridiculous I mean I looked at the earthy

00:53:05,560 --> 00:53:10,330
I was like oh wait whoa what the heck is

00:53:07,210 --> 00:53:12,610
this so yeah comments or comments or

00:53:10,330 --> 00:53:13,810
excluded but i think it's i need to look

00:53:12,610 --> 00:53:15,100
at this back but yeah it is defined in

00:53:13,810 --> 00:53:16,990
terms of the RFC and it's like this

00:53:15,100 --> 00:53:21,130
production except with this change to

00:53:16,990 --> 00:53:23,410
get rid of comments all right let's do

00:53:21,130 --> 00:53:31,030
this a couple more things one is combo

00:53:23,410 --> 00:53:32,590
boxes so someone wanted a color picker

00:53:31,030 --> 00:53:34,890
I'm afraid I can't give you a cup if you

00:53:32,590 --> 00:53:41,170
go but I can give you a combo control

00:53:34,890 --> 00:53:43,180
for colors so this is just a normal text

00:53:41,170 --> 00:53:45,700
input control except we've given a list

00:53:43,180 --> 00:53:47,950
attribute which will then connect to a

00:53:45,700 --> 00:53:49,240
datalist element and a datalist element

00:53:47,950 --> 00:53:52,320
just takes a series of option elements

00:53:49,240 --> 00:53:52,320
just like a select element with

00:53:58,770 --> 00:54:02,340
so then if I reload this favorite color

00:54:01,080 --> 00:54:05,220
it's just a normal text intro but if I

00:54:02,340 --> 00:54:07,590
type it will bring up the list and I can

00:54:05,220 --> 00:54:08,820
say something that isn't in the list but

00:54:07,590 --> 00:54:15,810
if i want i can also pick something that

00:54:08,820 --> 00:54:20,160
isn't the list i see i can also mark

00:54:15,810 --> 00:54:22,560
things as required which is partially

00:54:20,160 --> 00:54:27,780
what was being discussed earlier so if i

00:54:22,560 --> 00:54:28,890
say input required now i have a text

00:54:27,780 --> 00:54:30,510
control and it's read straight away

00:54:28,890 --> 00:54:31,980
you'll notice because of the star sheet

00:54:30,510 --> 00:54:33,960
at the top saying if it's invalid make

00:54:31,980 --> 00:54:35,040
it red and it's invalid because it's a

00:54:33,960 --> 00:54:38,820
reply control and I haven't typed

00:54:35,040 --> 00:54:45,810
anything if I type something it turns it

00:54:38,820 --> 00:54:52,250
turns a back to white if I submit this

00:54:45,810 --> 00:54:52,250
so i say i had a like a search page

00:55:03,400 --> 00:55:14,030
good catch thanks all right so if I do

00:55:07,670 --> 00:55:18,650
this let's get rid of the red yeah it's

00:55:14,030 --> 00:55:20,030
a so if i type in something here now if

00:55:18,650 --> 00:55:21,980
i submit it without typing anything in

00:55:20,030 --> 00:55:23,420
it should warn me about it there you go

00:55:21,980 --> 00:55:24,920
you have to specify that you and there's

00:55:23,420 --> 00:55:27,440
no scripting to do that that's all the

00:55:24,920 --> 00:55:29,060
browser doing it itself and we have that

00:55:27,440 --> 00:55:31,280
for various other things like if you put

00:55:29,060 --> 00:55:32,600
in a date and you can set bounds on a

00:55:31,280 --> 00:55:34,520
date and if you set the date to the

00:55:32,600 --> 00:55:36,530
wrong does it something out of bounds it

00:55:34,520 --> 00:55:38,420
will complain about that and you can

00:55:36,530 --> 00:55:44,810
give a pattern and if you give the wrong

00:55:38,420 --> 00:55:48,110
pattern it'll complain about that let's

00:55:44,810 --> 00:55:52,940
see something else if instead of

00:55:48,110 --> 00:55:57,320
required I can put this say say I load

00:55:52,940 --> 00:55:58,850
this page notice how the field isn't

00:55:57,320 --> 00:56:00,260
focused now if you go to google.com

00:55:58,850 --> 00:56:01,820
you'll notice the feel this focus

00:56:00,260 --> 00:56:03,830
straight away and we can do that without

00:56:01,820 --> 00:56:05,390
scripting to now using the auto focus

00:56:03,830 --> 00:56:11,200
that review so we really at the page

00:56:05,390 --> 00:56:13,190
won't focus and that means that in a

00:56:11,200 --> 00:56:14,930
scripting environment if you just to

00:56:13,190 --> 00:56:16,490
focus the control straight away you

00:56:14,930 --> 00:56:18,980
would have come you know annoying things

00:56:16,490 --> 00:56:20,630
like if the user was starting to type in

00:56:18,980 --> 00:56:21,830
another control and ends the page loaded

00:56:20,630 --> 00:56:24,200
and it moves focus and then the user

00:56:21,830 --> 00:56:25,160
starts typing all over the place like

00:56:24,200 --> 00:56:26,480
they're typing the password in the

00:56:25,160 --> 00:56:28,160
password field then it focuses the user

00:56:26,480 --> 00:56:30,830
name they type the password in so forth

00:56:28,160 --> 00:56:31,940
so with this the browser is the one

00:56:30,830 --> 00:56:33,830
doing the focusing and so the browser

00:56:31,940 --> 00:56:34,880
can know okay the users already started

00:56:33,830 --> 00:56:38,990
typing somewhere as I ain't touching the

00:56:34,880 --> 00:56:40,610
focus or the user can just say never

00:56:38,990 --> 00:56:42,500
touch the focus and the browser gonna be

00:56:40,610 --> 00:56:46,330
okay I mode to focus sure but I'm not

00:56:42,500 --> 00:56:51,500
going to do it and so that's that's a

00:56:46,330 --> 00:56:54,470
one of the one of the other added things

00:56:51,500 --> 00:56:57,200
with widgets now let's move off on from

00:56:54,470 --> 00:57:02,090
widgets to a canvas which is the final

00:56:57,200 --> 00:57:05,650
thing that i want to show let's see what

00:57:02,090 --> 00:57:05,650
did I call my canvas thing

00:57:09,240 --> 00:57:17,470
so canvas is kind of a poster child

00:57:12,730 --> 00:57:20,620
because it was the most complicated of

00:57:17,470 --> 00:57:25,380
the early implemented api's was the most

00:57:20,620 --> 00:57:25,380
widely implemented given its complexity

00:57:28,350 --> 00:57:34,030
it has a lot of different features and

00:57:31,690 --> 00:57:35,230
only enough they're implemented so fast

00:57:34,030 --> 00:57:36,940
that people keep coming back to me and

00:57:35,230 --> 00:57:38,140
saying can we add this feature to canvas

00:57:36,940 --> 00:57:39,430
can we add this feature to canvas it's

00:57:38,140 --> 00:57:40,630
not just like random people ask me it's

00:57:39,430 --> 00:57:42,940
the actual browser implementers

00:57:40,630 --> 00:57:44,140
themselves which are kind of hard to say

00:57:42,940 --> 00:57:45,580
no to you because if you say no they'll

00:57:44,140 --> 00:57:49,390
just go and invent their own version of

00:57:45,580 --> 00:57:51,480
it but I've been trying to discourage

00:57:49,390 --> 00:57:55,960
too many additions to this because I am

00:57:51,480 --> 00:58:00,370
fear that it may be distracting from

00:57:55,960 --> 00:58:02,770
implementing other parts of html5 but

00:58:00,370 --> 00:58:05,110
anyway so this is how you get a graphics

00:58:02,770 --> 00:58:08,350
context you get the canvas element

00:58:05,110 --> 00:58:09,730
that's this part here I just grabbed the

00:58:08,350 --> 00:58:12,310
first cams element and then you call get

00:58:09,730 --> 00:58:13,780
context and you pass it the kind of

00:58:12,310 --> 00:58:19,030
context you want to D being the only one

00:58:13,780 --> 00:58:20,230
that's currently specified and the

00:58:19,030 --> 00:58:23,080
canvas element up here and we give it a

00:58:20,230 --> 00:58:24,130
Whitson the width and a height and the

00:58:23,080 --> 00:58:25,710
width on the height isn't necessarily

00:58:24,130 --> 00:58:29,670
the rendered width and height it's the

00:58:25,710 --> 00:58:32,560
coordinate systems width and height

00:58:29,670 --> 00:58:33,760
although by default they're the same so

00:58:32,560 --> 00:58:38,860
that you don't go insane trying to work

00:58:33,760 --> 00:58:41,440
out what's going on so let's create a

00:58:38,860 --> 00:58:48,310
path we call begin path and then we call

00:58:41,440 --> 00:58:51,450
move to see we can get the canvas back

00:58:48,310 --> 00:58:51,450
from also

00:58:53,120 --> 00:59:01,230
this is moving to a random point on the

00:58:57,740 --> 00:59:02,370
canvas and then we can do the same again

00:59:01,230 --> 00:59:06,690
except instead of moves to we can use

00:59:02,370 --> 00:59:19,130
line two and then we can just stroke the

00:59:06,690 --> 00:59:22,980
line and that will see okay random line

00:59:19,130 --> 00:59:24,840
very cool right we can make it slightly

00:59:22,980 --> 00:59:26,250
more cool by sticking this in the

00:59:24,840 --> 00:59:28,820
function and I'm just calling the

00:59:26,250 --> 00:59:28,820
function a lot

00:59:40,809 --> 00:59:48,079
speaking more awful than up there we go

00:59:42,980 --> 00:59:49,220
there we get lots of light well that's

00:59:48,079 --> 00:59:50,420
all very well but if we have too many of

00:59:49,220 --> 00:59:51,619
these lines eventually they'll just fill

00:59:50,420 --> 00:59:55,579
up with black so what we should do is

00:59:51,619 --> 01:00:03,980
create a similar function to blank out

00:59:55,579 --> 01:00:07,190
the whole thing sea-doo context dot fill

01:00:03,980 --> 01:00:09,680
style fill stars how you set the color

01:00:07,190 --> 01:00:12,799
of filled shapes like rectangles or

01:00:09,680 --> 01:00:15,829
circles and then we can use RGB a values

01:00:12,799 --> 01:00:17,569
to give a color and this these the

01:00:15,829 --> 01:00:21,319
syntax of the fill style attribute is

01:00:17,569 --> 01:00:24,980
actually the same as CSS colors so it'll

01:00:21,319 --> 01:00:25,999
be familiar to people who have used CSS

01:00:24,980 --> 01:00:27,619
lot so I mean for example you can use

01:00:25,999 --> 01:00:29,359
the hash thing if you want to know pay

01:00:27,619 --> 01:00:31,369
color if you want a transparent color

01:00:29,359 --> 01:00:33,230
like we do here you want use RGB a and

01:00:31,369 --> 01:00:37,099
then the fourth value here a 0.1 is the

01:00:33,230 --> 01:00:38,359
opacity and then we can use context not

01:00:37,099 --> 01:00:39,890
fill wrecked and this is just a

01:00:38,359 --> 01:00:42,710
convenience method that create a path

01:00:39,890 --> 01:00:51,170
that goes all around your rectangle and

01:00:42,710 --> 01:00:54,309
fills it with the fill style here we go

01:00:51,170 --> 01:00:54,309
and then

01:00:55,880 --> 01:01:01,700
well like this out a bit more often

01:00:58,960 --> 01:01:04,009
there we go oh no now our colors wrong

01:01:01,700 --> 01:01:07,490
for the lines so what we can do is

01:01:04,009 --> 01:01:13,119
change the color up here on text dot

01:01:07,490 --> 01:01:16,369
stroke style equals white there we go

01:01:13,119 --> 01:01:17,539
now the lines are kind of fading out we

01:01:16,369 --> 01:01:25,549
can also make things more interesting by

01:01:17,539 --> 01:01:30,609
changing the line width Oh see come up

01:01:25,549 --> 01:01:32,539
with kind of a 5 to 15 limit there we go

01:01:30,609 --> 01:01:36,220
this is going over way better than

01:01:32,539 --> 01:01:38,450
expected from the couch here let's see

01:01:36,220 --> 01:01:44,799
what we can do instead of straight lines

01:01:38,450 --> 01:01:52,220
is we can use we can use Bezier curves

01:01:44,799 --> 01:01:59,059
so let's see what move to something and

01:01:52,220 --> 01:02:02,059
then we want to is your curve to a

01:01:59,059 --> 01:02:04,269
random point with two random control

01:02:02,059 --> 01:02:04,269
points

01:02:07,869 --> 01:02:23,740
there we go we can also week so we could

01:02:22,210 --> 01:02:28,599
try and join the lines together if we

01:02:23,740 --> 01:02:32,950
remember the last ex so here we started

01:02:28,599 --> 01:02:39,849
with start with this is an ex and then

01:02:32,950 --> 01:02:45,640
the last why this is a lie and then just

01:02:39,849 --> 01:02:55,170
move to the last x and y last ex last y

01:02:45,640 --> 01:02:57,849
and then create two new x and y's and

01:02:55,170 --> 01:02:59,529
then see we won't change the last two

01:02:57,849 --> 01:03:02,079
points the to the to the first two

01:02:59,529 --> 01:03:03,609
points so this is six numbers the first

01:03:02,079 --> 01:03:04,990
two are the first to control points the

01:03:03,609 --> 01:03:06,430
second to other so the first two is the

01:03:04,990 --> 01:03:08,319
first control point second two of the

01:03:06,430 --> 01:03:09,999
second is a second total point and the

01:03:08,319 --> 01:03:14,710
third one is the final point of your

01:03:09,999 --> 01:03:16,119
bezier curve so we can do that and now

01:03:14,710 --> 01:03:18,670
if we reload the line she'll be

01:03:16,119 --> 01:03:25,420
connected there we go which is kind of

01:03:18,670 --> 01:03:26,440
nice all right are you reading the next

01:03:25,420 --> 01:03:30,099
thing on my script is the randomizer

01:03:26,440 --> 01:03:36,210
colors are you happy there so let's see

01:03:30,099 --> 01:03:39,700
we could start with so i'm going to use

01:03:36,210 --> 01:03:43,150
hsl colors hue/saturation landis covers

01:03:39,700 --> 01:03:44,289
which allows us to change the color

01:03:43,150 --> 01:03:47,739
without changing the brightness in the

01:03:44,289 --> 01:03:52,509
darkness so let's see so each time we're

01:03:47,739 --> 01:03:54,910
going to make the hue increase by see

01:03:52,509 --> 01:03:57,789
that the range of hue is from 0 to 360

01:03:54,910 --> 01:04:01,150
so here we're increasing it by 0 to 10

01:03:57,789 --> 01:04:03,069
each time yeah it wraps around so we

01:04:01,150 --> 01:04:05,499
don't have to worry about things like

01:04:03,069 --> 01:04:08,259
that and then let's see contact stroke

01:04:05,499 --> 01:04:12,460
style and we can remove the old stroke

01:04:08,259 --> 01:04:15,940
style of white up here and make it just

01:04:12,460 --> 01:04:18,400
so there's an hsl a as well if you want

01:04:15,940 --> 01:04:20,520
and then we just stick in the hue here

01:04:18,400 --> 01:04:25,920
and then

01:04:20,520 --> 01:04:33,030
fifty percent s fifty percent oh there

01:04:25,920 --> 01:04:34,530
we go see if that worked now it kind of

01:04:33,030 --> 01:04:35,790
goes near the edge and I kind of want it

01:04:34,530 --> 01:04:37,140
like more inside so it's kind of a

01:04:35,790 --> 01:04:38,130
border and we could just stick a CSS

01:04:37,140 --> 01:04:41,490
border on there but that wouldn't

01:04:38,130 --> 01:04:43,610
actually help me demonstrate the canvas

01:04:41,490 --> 01:04:50,270
features so instead I'm going to use

01:04:43,610 --> 01:04:53,460
transform so if we save and then restore

01:04:50,270 --> 01:04:54,900
save and restore save the current state

01:04:53,460 --> 01:04:56,130
of the canvas and the reason I want to

01:04:54,900 --> 01:05:02,970
do that is because I'm going to change

01:04:56,130 --> 01:05:05,520
the transformation matrix and if I don't

01:05:02,970 --> 01:05:07,460
restore it when I'm done then the next

01:05:05,520 --> 01:05:10,230
time I change the transformation matrix

01:05:07,460 --> 01:05:11,760
it'll just keep commutative and the

01:05:10,230 --> 01:05:13,530
reason you have to putting it back is

01:05:11,760 --> 01:05:15,720
because while we're doing the line we're

01:05:13,530 --> 01:05:17,730
still doing the blank and so if we

01:05:15,720 --> 01:05:20,250
change the transformation matrix for the

01:05:17,730 --> 01:05:23,400
line and then don't change it back well

01:05:20,250 --> 01:05:24,780
the black overlaying box is going to be

01:05:23,400 --> 01:05:25,800
indifferent as well the next time you'll

01:05:24,780 --> 01:05:31,140
be different as well na just keep being

01:05:25,800 --> 01:05:33,840
different so let's see context translate

01:05:31,140 --> 01:05:39,690
is how you do a translation and we want

01:05:33,840 --> 01:05:42,240
to translate it by see about ninety

01:05:39,690 --> 01:05:45,540
percent of the though we want to

01:05:42,240 --> 01:05:51,930
translate to the center first so that's

01:05:45,540 --> 01:05:54,900
that and then we want to scale it scale

01:05:51,930 --> 01:05:57,090
it by about ninety percent and so that

01:05:54,900 --> 01:05:58,590
puts it so that's now a box like slight

01:05:57,090 --> 01:06:00,090
in the middle but if we don't change the

01:05:58,590 --> 01:06:02,130
translation backs all the lines are

01:06:00,090 --> 01:06:04,650
going to be offset by half of the size

01:06:02,130 --> 01:06:07,650
of the canvas so we'll just move

01:06:04,650 --> 01:06:08,970
everything back after the scale and now

01:06:07,650 --> 01:06:14,820
the lines shouldn't be as far out from

01:06:08,970 --> 01:06:16,230
the edge there we go nicely inside and

01:06:14,820 --> 01:06:22,770
this works in multiple browsers this is

01:06:16,230 --> 01:06:25,400
Safari works in firefox and it works in

01:06:22,770 --> 01:06:25,400
Opera

01:06:27,310 --> 01:06:31,740
it probably even works in release

01:06:29,440 --> 01:06:34,300
browser these although I haven't shaved

01:06:31,740 --> 01:06:36,960
and that's one one final thing will do

01:06:34,300 --> 01:06:45,370
for coolness value before we stroke it

01:06:36,960 --> 01:06:47,020
let's add a shadow yes it does actually

01:06:45,370 --> 01:06:48,640
work on crow too I have chrome appear

01:06:47,020 --> 01:06:55,390
this is the only demo I have that works

01:06:48,640 --> 01:06:57,580
in chrome I haven't tested it in IE

01:06:55,390 --> 01:06:59,290
without cameras yeah it works in chrome

01:06:57,580 --> 01:07:01,540
so that's for browsers I think that's a

01:06:59,290 --> 01:07:02,650
record for this that I lists the DVI

01:07:01,540 --> 01:07:05,830
ports with them and I think it's the

01:07:02,650 --> 01:07:07,720
only one in this for anyway we add a

01:07:05,830 --> 01:07:16,690
shadow color and then we can add some

01:07:07,720 --> 01:07:23,140
blur and then it looks even cooler there

01:07:16,690 --> 01:07:24,670
we go alright so that's the last time I

01:07:23,140 --> 01:07:28,060
have I just wanted to mention one more

01:07:24,670 --> 01:07:30,880
thing which is that so I'm not trying to

01:07:28,060 --> 01:07:31,960
hold a lot of new features I'm gonna

01:07:30,880 --> 01:07:36,730
have to remove this from the screen or

01:07:31,960 --> 01:07:38,320
they showed a whole bunch of new

01:07:36,730 --> 01:07:41,260
features one of the things that html5

01:07:38,320 --> 01:07:44,050
removes is all the presentational stuff

01:07:41,260 --> 01:07:48,130
like the font element like bgcolor all

01:07:44,050 --> 01:07:52,090
that stuff and with the intent of using

01:07:48,130 --> 01:07:55,000
CSS instead and google has actually

01:07:52,090 --> 01:07:59,170
started using html5 for example if you

01:07:55,000 --> 01:08:03,310
look at our privacy page listen firefox

01:07:59,170 --> 01:08:09,100
if you look at our privacy page one of

01:08:03,310 --> 01:08:11,710
our big pages that's what html5 looks

01:08:09,100 --> 01:08:13,090
like the dog types really short to

01:08:11,710 --> 01:08:15,640
announce the character set you don't

01:08:13,090 --> 01:08:17,260
need to use the whole http-equiv

01:08:15,640 --> 01:08:19,060
nonsense you just have a very short

01:08:17,260 --> 01:08:20,380
thing and the rest of it's basically

01:08:19,060 --> 01:08:22,330
just like HTML for except you'll notice

01:08:20,380 --> 01:08:26,980
there's no font elements there's nothing

01:08:22,330 --> 01:08:28,210
like that a no BG color and so you know

01:08:26,980 --> 01:08:32,920
this isn't the only patient privacy

01:08:28,210 --> 01:08:36,569
policy itself is the same and to help

01:08:32,920 --> 01:08:39,040
you if you want to write html5 today

01:08:36,569 --> 01:08:40,930
which you wouldn't really be able to use

01:08:39,040 --> 01:08:42,310
the new features much unless your

01:08:40,930 --> 01:08:43,810
but you would be able to use that you

01:08:42,310 --> 01:08:48,610
know the lack of presentation and use

01:08:43,810 --> 01:08:50,260
CSS instead and and to benefit from the

01:08:48,610 --> 01:08:52,270
tightening up we've done in a defining

01:08:50,260 --> 01:08:56,800
validation we have a valid data that

01:08:52,270 --> 01:08:58,450
Henry one of our one of the members of

01:08:56,800 --> 01:09:01,690
the community whose belief working for

01:08:58,450 --> 01:09:06,490
Mozilla on this has created a validator

01:09:01,690 --> 01:09:11,380
html5 dot validated and you and there

01:09:06,490 --> 01:09:15,880
you go and that shows you that you can

01:09:11,380 --> 01:09:19,450
benefit today from the you know the this

01:09:15,880 --> 01:09:20,910
new syntax aspects of it even if you

01:09:19,450 --> 01:09:28,600
can't actually use any of the features

01:09:20,910 --> 01:09:32,140
there you go I have no idea what the

01:09:28,600 --> 01:09:35,200
plan is for our other pages but the more

01:09:32,140 --> 01:09:44,920
pages we have that use it the better all

01:09:35,200 --> 01:09:53,050
right any questions yes so we have a new

01:09:44,920 --> 01:09:56,500
feature let's see so if you create you

01:09:53,050 --> 01:10:01,240
know an HTML page you can say things

01:09:56,500 --> 01:10:06,520
like data I don't know like value equals

01:10:01,240 --> 01:10:07,720
whatever and that will validate so the

01:10:06,520 --> 01:10:09,610
intent of these attributes you can

01:10:07,720 --> 01:10:17,290
anything that starts with data basically

01:10:09,610 --> 01:10:20,290
you can do the intent is that these

01:10:17,290 --> 01:10:21,550
attributes are fused by script so you

01:10:20,290 --> 01:10:24,550
know google calendar for example could

01:10:21,550 --> 01:10:27,460
stick a data event ID attribute on every

01:10:24,550 --> 01:10:29,800
divil represents an event and then

01:10:27,460 --> 01:10:31,420
instead of having to hack around or use

01:10:29,800 --> 01:10:33,850
the title attribute all these you know

01:10:31,420 --> 01:10:36,970
lots of things on that you can just

01:10:33,850 --> 01:10:38,590
store the data on the element itself is

01:10:36,970 --> 01:10:40,810
not really any way to demo that because

01:10:38,590 --> 01:10:43,840
it doesn't do anything that's why i did

01:10:40,810 --> 01:10:45,430
include the browser's all support it and

01:10:43,840 --> 01:10:47,670
they don't do anything with it which is

01:10:45,430 --> 01:10:47,670
the whole point

01:10:56,989 --> 01:11:03,270
yeah so the question is what video

01:11:01,350 --> 01:11:06,080
format we should use in the video

01:11:03,270 --> 01:11:09,420
element the demo I showed you is OGG and

01:11:06,080 --> 01:11:11,520
Firefox and opera or Firefox supports

01:11:09,420 --> 01:11:14,340
augen that build opera has an

01:11:11,520 --> 01:11:19,460
experimental build kind of off their

01:11:14,340 --> 01:11:22,730
main branch that supports hog Safari

01:11:19,460 --> 01:11:25,500
supports augen theory if you add the

01:11:22,730 --> 01:11:27,690
codec for it I didn't actually demo

01:11:25,500 --> 01:11:29,940
video in Safari here because for some

01:11:27,690 --> 01:11:34,500
reason quicktime in general is broke on

01:11:29,940 --> 01:11:36,810
my machine so i cultured the problem

01:11:34,500 --> 01:11:40,199
right now is that there isn't any codec

01:11:36,810 --> 01:11:41,610
that satisfies everyone apple doesn't

01:11:40,199 --> 01:11:42,660
really want to implement my

01:11:41,610 --> 01:11:43,560
understanding is apple doesn't what I

01:11:42,660 --> 01:11:44,880
don't speak to them but my understanding

01:11:43,560 --> 01:11:47,280
is they don't really want to implement

01:11:44,880 --> 01:11:49,410
OGG because they don't know what the

01:11:47,280 --> 01:11:51,510
risk is with patents they've already

01:11:49,410 --> 01:11:53,340
taken the risk on things like h.264 and

01:11:51,510 --> 01:11:54,600
so that's not a new risk for them but if

01:11:53,340 --> 01:11:55,890
they implement oh that's a whole new

01:11:54,600 --> 01:11:58,920
risk and if you look at things like the

01:11:55,890 --> 01:12:02,640
LS pattern like mp3 patent lawsuits to

01:11:58,920 --> 01:12:03,570
microsoft recently it's kind of scary

01:12:02,640 --> 01:12:07,170
space out there you know it's like

01:12:03,570 --> 01:12:08,340
multi-billion dollar awards and stuff

01:12:07,170 --> 01:12:10,699
like that and it's like whoa we don't

01:12:08,340 --> 01:12:12,900
want to take risk that you don't need to

01:12:10,699 --> 01:12:14,340
it's also not really clear that ugh is

01:12:12,900 --> 01:12:18,570
actually that good of a format

01:12:14,340 --> 01:12:23,460
necessarily compared to say h.264 that

01:12:18,570 --> 01:12:25,560
you know that's debated the long-term

01:12:23,460 --> 01:12:26,790
solution right now from html5 point of

01:12:25,560 --> 01:12:29,040
view is wait and see we're not really

01:12:26,790 --> 01:12:30,719
sure what's going to happen h.264 of

01:12:29,040 --> 01:12:32,100
course is really great technical format

01:12:30,719 --> 01:12:33,510
and you know YouTube's using it and

01:12:32,100 --> 01:12:35,219
apples using it and lots people using

01:12:33,510 --> 01:12:37,320
its own all the handset the problem with

01:12:35,219 --> 01:12:39,920
that is it's not royalty-free and so

01:12:37,320 --> 01:12:42,210
like Mozilla and opera couldn't use it

01:12:39,920 --> 01:12:43,500
so yeah it's a difficult space we don't

01:12:42,210 --> 01:12:46,190
have a solution right now it's certainly

01:12:43,500 --> 01:12:46,190
something is to emulate it

01:12:55,010 --> 01:12:57,070
I

01:12:57,760 --> 01:13:02,380
so the question is about HD and whether

01:13:00,909 --> 01:13:04,389
we're allowed to choose a codec so in

01:13:02,380 --> 01:13:06,969
the video element you can specify

01:13:04,389 --> 01:13:09,219
multiple video files there's a source

01:13:06,969 --> 01:13:10,059
element that goes I just showed you the

01:13:09,219 --> 01:13:11,469
source attribute but you can put a

01:13:10,059 --> 01:13:13,329
source element as a child of the video

01:13:11,469 --> 01:13:16,840
element and you can list you know one

01:13:13,329 --> 01:13:18,639
source element / video and you can give

01:13:16,840 --> 01:13:21,219
a type attribute and immediate attribute

01:13:18,639 --> 01:13:25,380
on that the type says what kind of codec

01:13:21,219 --> 01:13:27,579
it is and that stuff and the media says

01:13:25,380 --> 01:13:28,869
you know this is intended for big

01:13:27,579 --> 01:13:29,980
screens or small screens or color

01:13:28,869 --> 01:13:37,590
screens or black and white screens or

01:13:29,980 --> 01:13:40,360
printers ok maybe not print but the the

01:13:37,590 --> 01:13:42,010
yeah the situation in theory is that the

01:13:40,360 --> 01:13:43,420
browser the browser's can then work out

01:13:42,010 --> 01:13:45,219
which one is best we don't really want

01:13:43,420 --> 01:13:47,079
to go there I mean we don't that might

01:13:45,219 --> 01:13:49,090
work for HD versus standard def because

01:13:47,079 --> 01:13:50,139
you can then just produce too easily we

01:13:49,090 --> 01:13:54,460
don't really want to go there for

01:13:50,139 --> 01:13:55,510
multiple video codecs because that just

01:13:54,460 --> 01:13:58,360
becomes a pain I mean you can imagine

01:13:55,510 --> 01:14:02,230
you know youtube has a whole library in

01:13:58,360 --> 01:14:05,260
you know h.264 I mean though we don't go

01:14:02,230 --> 01:14:06,969
the whole thing is a whole new format

01:14:05,260 --> 01:14:09,429
and that's a lot of displacement so what

01:14:06,969 --> 01:14:11,289
that means expensive so it's something

01:14:09,429 --> 01:14:12,369
that an astronaut just youtube I mean

01:14:11,289 --> 01:14:13,869
that's any video site we don't really

01:14:12,369 --> 01:14:15,130
want to have to require that from people

01:14:13,869 --> 01:14:17,920
but the problem is we don't have a

01:14:15,130 --> 01:14:20,159
solution right answer any other words

01:14:17,920 --> 01:14:20,159
yes

01:14:23,700 --> 01:14:27,340
so the way this the question is whether

01:14:26,020 --> 01:14:30,310
there's keyboard access for drag and

01:14:27,340 --> 01:14:33,100
drop the way the spec defines drag and

01:14:30,310 --> 01:14:34,570
drop is actually very generic it why

01:14:33,100 --> 01:14:35,740
it's it's very specific to like what

01:14:34,570 --> 01:14:37,270
event should fire and when but it

01:14:35,740 --> 01:14:38,470
doesn't say what the user interaction

01:14:37,270 --> 01:14:41,380
should be it doesn't say anywhere that

01:14:38,470 --> 01:14:42,850
the mouse is how you do drag and drop so

01:14:41,380 --> 01:14:45,640
that ends up being mostly an issue up

01:14:42,850 --> 01:14:49,240
for the browser vendors in particular

01:14:45,640 --> 01:14:52,720
the spec defines copy and paste in terms

01:14:49,240 --> 01:14:55,090
of drag and drop when you start a copy

01:14:52,720 --> 01:14:56,590
what you're conceptually doing in the

01:14:55,090 --> 01:14:58,510
spec is you're dragging through an

01:14:56,590 --> 01:14:59,830
off-screen location and then when you

01:14:58,510 --> 01:15:02,590
paste your dragon from an off-screen

01:14:59,830 --> 01:15:04,330
occasion and so the same events fire in

01:15:02,590 --> 01:15:05,830
theory if I drag and drop as copying

01:15:04,330 --> 01:15:08,800
place that isn't implemented anywhere

01:15:05,830 --> 01:15:11,590
yet and maybe it'll change if no one

01:15:08,800 --> 01:15:13,420
implements it but that goes some way

01:15:11,590 --> 01:15:17,820
towards making drag and drop somewhat

01:15:13,420 --> 01:15:17,820
more keyboard friendly

01:15:28,159 --> 01:15:33,719
the question is how much we inspired by

01:15:30,630 --> 01:15:35,099
flex and other things a lot of the work

01:15:33,719 --> 01:15:36,719
actually started because we were really

01:15:35,099 --> 01:15:40,920
scared of silverlight or what used to be

01:15:36,719 --> 01:15:42,119
called have a lot of the time and flex

01:15:40,920 --> 01:15:45,210
not so I mean I haven't really looked

01:15:42,119 --> 01:15:46,409
much at flex but you know we look at a

01:15:45,210 --> 01:15:50,520
lot of things we look at things like

01:15:46,409 --> 01:15:55,440
win32 we look at you know gtk and other

01:15:50,520 --> 01:15:58,290
desktop level ap is a lot of web forums

01:15:55,440 --> 01:16:01,159
to the widget stuff I showed you a lot

01:15:58,290 --> 01:16:04,679
of that was actually inspired by xforms

01:16:01,159 --> 01:16:06,179
xforms is a WC technology that is really

01:16:04,679 --> 01:16:07,530
good for forms like if you want to do

01:16:06,179 --> 01:16:09,750
tax form or whatever it's really great

01:16:07,530 --> 01:16:11,489
the promise it's not compatible with

01:16:09,750 --> 01:16:13,199
HTML so you can't really just add it to

01:16:11,489 --> 01:16:15,389
a nation on page you have to you know

01:16:13,199 --> 01:16:18,540
boil the ocean as people say and start a

01:16:15,389 --> 01:16:21,929
whole new page and so we took a lot of

01:16:18,540 --> 01:16:23,280
ideas from there it's not clear that

01:16:21,929 --> 01:16:24,619
necessarily all those ideas were good in

01:16:23,280 --> 01:16:27,239
fact we're cutting quite a lot of them

01:16:24,619 --> 01:16:30,469
but you know that's a separate problem

01:16:27,239 --> 01:16:33,409
and yeah we're taking features from

01:16:30,469 --> 01:16:35,219
ideas from anywhere we can you can see

01:16:33,409 --> 01:16:36,389
prioritization is the biggest issue I

01:16:35,219 --> 01:16:38,940
mean there's like an infinite number of

01:16:36,389 --> 01:16:40,199
things we can copy but we have to have

01:16:38,940 --> 01:16:42,590
to figure out what browsers are willing

01:16:40,199 --> 01:16:42,590
to implement

01:17:15,190 --> 01:17:21,740
so question is the given the html5 is a

01:17:19,190 --> 01:17:24,110
lot designed with laziness in mind and

01:17:21,740 --> 01:17:25,700
given how a lot of web authoring is

01:17:24,110 --> 01:17:29,690
moving towards automated tools how does

01:17:25,700 --> 01:17:31,040
that affect our concerns pretty much all

01:17:29,690 --> 01:17:34,310
of the automated tools are handwritten

01:17:31,040 --> 01:17:37,640
or something I mean like a wordpress

01:17:34,310 --> 01:17:39,320
template is written by hat Dreamweavers

01:17:37,640 --> 01:17:40,490
output there's some guy at some point

01:17:39,320 --> 01:17:43,220
had to work out what the app which

01:17:40,490 --> 01:17:47,060
should be in Road and so you know a lot

01:17:43,220 --> 01:17:48,740
of the concerns about whether it's

01:17:47,060 --> 01:17:50,390
handwritten or not end ave they will

01:17:48,740 --> 01:17:54,410
basically end up being handwritten at

01:17:50,390 --> 01:17:56,480
some point also there's I mean there is

01:17:54,410 --> 01:17:57,500
a lot of generated content that's

01:17:56,480 --> 01:17:59,510
certainly true i mean you know like

01:17:57,500 --> 01:18:03,220
wikipedia is almost all generated

01:17:59,510 --> 01:18:06,260
there's nobody writing the HTML for that

01:18:03,220 --> 01:18:07,490
except for the template but on the other

01:18:06,260 --> 01:18:10,730
hand there's still a lot of handwritten

01:18:07,490 --> 01:18:13,880
HTML and so you know we have to balance

01:18:10,730 --> 01:18:14,870
the two that I don't currently think of

01:18:13,880 --> 01:18:16,400
any features offhand that are

01:18:14,870 --> 01:18:18,350
specifically designed for generating

01:18:16,400 --> 01:18:25,120
content but I mean it's certainly not

01:18:18,350 --> 01:18:25,120
something that we would dismiss yes

01:18:28,590 --> 01:18:32,170
so the question is what's a feature of

01:18:30,489 --> 01:18:33,940
XHTML with regard to html5 there are

01:18:32,170 --> 01:18:36,789
several answers to that i will give you

01:18:33,940 --> 01:18:40,719
several of them the first answer is from

01:18:36,789 --> 01:18:42,820
html5 suspected html5 doesn't care by

01:18:40,719 --> 01:18:46,449
which I mean html5 the spec defines both

01:18:42,820 --> 01:18:49,269
X html5 and html5 and we just call it

01:18:46,449 --> 01:18:56,170
html5 because that's the name stuck the

01:18:49,269 --> 01:18:57,880
spec i mean the the x html5 variant is

01:18:56,170 --> 01:19:01,239
literally just the same language but

01:18:57,880 --> 01:19:02,530
serialized xml and the html5 Aaron is

01:19:01,239 --> 01:19:06,010
literally just a same language again but

01:19:02,530 --> 01:19:08,440
serious a text slash HTML and we in

01:19:06,010 --> 01:19:10,269
html5 that's a new syntax it's not sgml

01:19:08,440 --> 01:19:12,239
like it used to be because in practice

01:19:10,269 --> 01:19:14,260
it never really was except in validators

01:19:12,239 --> 01:19:15,400
and so we have our you know we define

01:19:14,260 --> 01:19:19,119
the parser and one thing I didn't

01:19:15,400 --> 01:19:20,829
demonstrate is there is a really

01:19:19,119 --> 01:19:22,749
detailed parcel spec now and there are a

01:19:20,829 --> 01:19:26,050
number of implementations of the parser

01:19:22,749 --> 01:19:28,059
except not in browsers I think there's

01:19:26,050 --> 01:19:30,159
one browser for risc OS that implements

01:19:28,059 --> 01:19:33,070
the html5 parser but let's face it

01:19:30,159 --> 01:19:34,150
that's not hi I mean I've got a lot of

01:19:33,070 --> 01:19:35,409
respect for the guys who work on that

01:19:34,150 --> 01:19:37,749
and there are you know the part of a

01:19:35,409 --> 01:19:41,889
community but it's not a big market

01:19:37,749 --> 01:19:47,999
share but the but there are a number of

01:19:41,889 --> 01:19:50,289
libraries that implement that parson so

01:19:47,999 --> 01:19:52,989
we basically we look at it as three

01:19:50,289 --> 01:19:55,449
languages look at it as Dom five HTML

01:19:52,989 --> 01:19:56,980
and XHTML five and html5 and they're all

01:19:55,449 --> 01:19:58,510
kind of like that you can go from one to

01:19:56,980 --> 01:19:59,949
the other in different ways and there

01:19:58,510 --> 01:20:01,420
are things you can't describe in one you

01:19:59,949 --> 01:20:02,199
can't describe nuns rule so information

01:20:01,420 --> 01:20:03,820
price point of view there's no

01:20:02,199 --> 01:20:05,469
difference from the dumbest received

01:20:03,820 --> 01:20:07,929
point of view or rather from the XHTML

01:20:05,469 --> 01:20:09,760
to working group to point of view I'm

01:20:07,929 --> 01:20:12,429
not completely clear on what their

01:20:09,760 --> 01:20:15,639
stances my understanding is that they're

01:20:12,429 --> 01:20:18,340
still working on XHTML 12 X and they're

01:20:15,639 --> 01:20:20,440
certainly still working on XHTML to an

01:20:18,340 --> 01:20:23,369
excitation of to as far as I understand

01:20:20,440 --> 01:20:26,849
it is not compatible with HTML 4 or 5

01:20:23,369 --> 01:20:29,739
it's not a tech / HTML markup language

01:20:26,849 --> 01:20:34,510
although they might allow you to send it

01:20:29,739 --> 01:20:36,219
as mine type i'm not entirely sure so

01:20:34,510 --> 01:20:38,080
yeah from that point of view that it's

01:20:36,219 --> 01:20:39,850
somewhat less clear what exactly what

01:20:38,080 --> 01:20:42,850
going on from the point of view of

01:20:39,850 --> 01:20:46,300
browser vendors who I've spoken to at

01:20:42,850 --> 01:20:49,300
least very few people are using XHTML

01:20:46,300 --> 01:20:51,490
and so it's not a high priority by which

01:20:49,300 --> 01:20:54,130
I mean the XML variant of any HTML

01:20:51,490 --> 01:20:56,890
language one of the problems with XHTML

01:20:54,130 --> 01:20:57,970
too is it's unclear whether it use the

01:20:56,890 --> 01:21:00,700
same namespace for a different

01:20:57,970 --> 01:21:01,930
namespaces html5 if it uses the same

01:21:00,700 --> 01:21:04,540
namespace brazzers simply won't

01:21:01,930 --> 01:21:06,010
implement it because it's different they

01:21:04,540 --> 01:21:07,420
have overlapping tag names but they have

01:21:06,010 --> 01:21:09,340
different behavior so you can't

01:21:07,420 --> 01:21:11,050
implement both if it's a different name

01:21:09,340 --> 01:21:12,250
space they might or might not implement

01:21:11,050 --> 01:21:13,660
it I haven't heard anyone say they in

01:21:12,250 --> 01:21:16,140
the major browsers at least that they're

01:21:13,660 --> 01:21:16,140
planning on it

01:21:25,530 --> 01:21:28,920
so the question is whether there's a

01:21:27,300 --> 01:21:30,900
table that lists the current the

01:21:28,920 --> 01:21:33,270
features and when browsers are expected

01:21:30,900 --> 01:21:35,070
to admit there isn't one that is exactly

01:21:33,270 --> 01:21:37,200
that there's no there's no table lists

01:21:35,070 --> 01:21:38,520
plan dates mostly because the browser

01:21:37,200 --> 01:21:42,000
vendors are very bad at planning when

01:21:38,520 --> 01:21:42,990
they're at least telling anyone I don't

01:21:42,000 --> 01:21:45,410
know it might have great timetables

01:21:42,990 --> 01:21:48,360
internally there just don't tell anyone

01:21:45,410 --> 01:21:49,980
and also because any planning that does

01:21:48,360 --> 01:21:50,970
occur is on a pretty short term basis I

01:21:49,980 --> 01:21:56,610
mean it's a matter of months it's not a

01:21:50,970 --> 01:21:58,260
matter of years the opposite question if

01:21:56,610 --> 01:22:00,540
there's a table anywhere that describes

01:21:58,260 --> 01:22:03,180
what is currently implemented is easier

01:22:00,540 --> 01:22:10,320
to easier to answer if you look in the

01:22:03,180 --> 01:22:16,560
html5 spec itself you will notice on the

01:22:10,320 --> 01:22:19,500
side here let's see okay there's these

01:22:16,560 --> 01:22:20,910
little boxes every now and then let's

01:22:19,500 --> 01:22:22,350
say things like last call for comments

01:22:20,910 --> 01:22:24,900
and they have little icons which right

01:22:22,350 --> 01:22:27,900
here are not at all lit up but in some

01:22:24,900 --> 01:22:30,920
cases some of them a little see if we

01:22:27,900 --> 01:22:35,610
look for canvas it should be a little

01:22:30,920 --> 01:22:36,870
there you go there's some lit up here so

01:22:35,610 --> 01:22:38,790
this tells you for that particular

01:22:36,870 --> 01:22:41,790
section what the status is so that means

01:22:38,790 --> 01:22:43,500
that Firefox has a pretty good

01:22:41,790 --> 01:22:44,820
implementation because it's not fully

01:22:43,500 --> 01:22:48,900
opaque but it's not completely

01:22:44,820 --> 01:22:50,520
disappeared IE is the first icon so that

01:22:48,900 --> 01:22:53,130
means I es implantation is non-existent

01:22:50,520 --> 01:22:56,010
and so this box appears in various

01:22:53,130 --> 01:22:59,100
places in the spec it's not a completely

01:22:56,010 --> 01:23:00,900
up to date it's it's publicly editable

01:22:59,100 --> 01:23:02,520
so if you want to edit it just let me

01:23:00,900 --> 01:23:04,380
know and you can have access to edit it

01:23:02,520 --> 01:23:06,870
if someone wants to volunteer to update

01:23:04,380 --> 01:23:09,150
it that'd be great there's also a wiki

01:23:06,870 --> 01:23:17,340
page on the what-what working group wiki

01:23:09,150 --> 01:23:19,140
ah the kido of your Barassi um i think

01:23:17,340 --> 01:23:20,490
exactly sure where this is but there's a

01:23:19,140 --> 01:23:23,580
wiki page anyway on the working group

01:23:20,490 --> 01:23:28,290
wiki that says other implementations

01:23:23,580 --> 01:23:29,580
that says where things vaguely stand and

01:23:28,290 --> 01:23:34,680
again that page isn't exactly the most

01:23:29,580 --> 01:23:37,080
up-to-date so you know they're your

01:23:34,680 --> 01:23:38,550
various things tells you cross document

01:23:37,080 --> 01:23:41,210
messaging is emitted in over nine so far

01:23:38,550 --> 01:23:41,210
in firefox 3

01:23:42,610 --> 01:23:49,610
the real answer is that it doesn't

01:23:47,689 --> 01:23:53,900
really mean unless you're willing to

01:23:49,610 --> 01:23:55,219
bright separate code for well so there's

01:23:53,900 --> 01:23:59,900
basically three ways of using html5

01:23:55,219 --> 01:24:02,179
features right now you can use you can

01:23:59,900 --> 01:24:04,219
not use them that's one option you can

01:24:02,179 --> 01:24:06,260
and that's the one that will work the

01:24:04,219 --> 01:24:08,989
best right now there's the option of

01:24:06,260 --> 01:24:11,179
using them and then doing browser

01:24:08,989 --> 01:24:12,769
detection or feature detection to detect

01:24:11,179 --> 01:24:14,689
whether the browser supports it and then

01:24:12,769 --> 01:24:15,889
falling back on something else and then

01:24:14,689 --> 01:24:17,360
for some of the features they're

01:24:15,889 --> 01:24:20,780
basically designed so that you can have

01:24:17,360 --> 01:24:24,800
automatic fall back so for example the

01:24:20,780 --> 01:24:29,929
the date control if you create an input

01:24:24,800 --> 01:24:33,590
type equals date control so if we go in

01:24:29,929 --> 01:24:37,099
put type equals date and we open this in

01:24:33,590 --> 01:24:43,789
Opera where input type equals date is

01:24:37,099 --> 01:24:45,800
supported so on it'll show up is a big

01:24:43,789 --> 01:24:47,989
control but if you open this in a

01:24:45,800 --> 01:24:51,679
different browser like WebKit it'll

01:24:47,989 --> 01:24:53,570
appear as a text control and so and

01:24:51,679 --> 01:24:55,010
you'll still submit the text control and

01:24:53,570 --> 01:24:56,269
then your server can do server side

01:24:55,010 --> 01:24:58,360
validation of the date and say whoa

01:24:56,269 --> 01:25:00,559
that's not a date and then send it back

01:24:58,360 --> 01:25:03,739
so I mean it's not great full back but

01:25:00,559 --> 01:25:04,849
it's kind of a fourth back and a lot of

01:25:03,739 --> 01:25:07,010
the features are that way I mean freak

01:25:04,849 --> 01:25:08,539
out we for example canvas if you don't

01:25:07,010 --> 01:25:10,280
support canvas then whatever you type

01:25:08,539 --> 01:25:14,840
inside the canvas will appear so if we

01:25:10,280 --> 01:25:23,209
do you know can canvass blah blah blah

01:25:14,840 --> 01:25:25,369
canvas if you load it in WebKit won't

01:25:23,209 --> 01:25:27,559
show anything because there is a very

01:25:25,369 --> 01:25:31,459
scant support but if you load it in IE

01:25:27,559 --> 01:25:35,570
where there's no canvas support it

01:25:31,459 --> 01:25:37,969
should say no support and so that

01:25:35,570 --> 01:25:41,499
there you can do things like preparing

01:25:37,969 --> 01:25:41,499
the full-back behavior in that sense I

01:25:41,860 --> 01:25:45,919
wouldn't recommend using nation of them

01:25:44,449 --> 01:25:47,889
in the title of this talk was html5

01:25:45,919 --> 01:25:51,050
features that you can't use or something

01:25:47,889 --> 01:25:53,300
and and it's because this is still very

01:25:51,050 --> 01:25:54,639
early days and if you want to use html5

01:25:53,300 --> 01:25:56,539
features you're probably better off

01:25:54,639 --> 01:25:58,099
either picking something that

01:25:56,539 --> 01:25:59,659
specifically works in a lot of browsers

01:25:58,099 --> 01:26:01,099
today and saying to your users do you

01:25:59,659 --> 01:26:02,960
have to use a modern browser like post

01:26:01,099 --> 01:26:06,019
message might be might be viable to do

01:26:02,960 --> 01:26:07,760
that in post message in a few months or

01:26:06,019 --> 01:26:14,630
just say you're not going to use it

01:26:07,760 --> 01:26:17,599
until it's much more widely deployed no

01:26:14,630 --> 01:26:19,719
more questions all right thank you very

01:26:17,599 --> 01:26:19,719

YouTube URL: https://www.youtube.com/watch?v=xIxDJof7xxQ


