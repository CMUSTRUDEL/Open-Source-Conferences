Title: Nadieh Bremer: SVGs beyond mere shapes
Publication date: 2017-05-19
Playlist: CSSConf AU 2016
Description: 
	Thank you to Mozilla for making video recording possible.

In data visualization for the web, SVG is really only used to create shapes; circles, rectangles, lines. But SVG can do much more that be "just" a shape. In this talk, I'd like to show you how to experiment with SVG gradients and filters to make data visualizations even more fun and engaging. Featuring interactive slides and a lot of data visualization eye candy I want to demonstrate how to implement the techniques with JS, CSS. From rainbow, moving and dynamic SVG gradients based on data, to SVG filters with which to create glow, gooey, and fuzzy effects that brighten up any visual.
Captions: 
	00:00:06,220 --> 00:00:10,000
[Applause]

00:00:08,110 --> 00:00:13,549
hello everybody

00:00:10,000 --> 00:00:14,960
well I thought I'd come one day early so

00:00:13,549 --> 00:00:17,419
that I would go over the jet lag

00:00:14,960 --> 00:00:18,800
yesterday and then be awake today but

00:00:17,419 --> 00:00:20,990
actually it hit me quite hard this

00:00:18,800 --> 00:00:23,480
morning so if I stare off at some point

00:00:20,990 --> 00:00:26,990
that you'll know why because I had a 24

00:00:23,480 --> 00:00:29,720
hour flight um so anyway

00:00:26,990 --> 00:00:31,070
imagine that you spend your days looking

00:00:29,720 --> 00:00:32,180
at the Stars and seeing these

00:00:31,070 --> 00:00:34,400
fascinating shapes

00:00:32,180 --> 00:00:36,320
well I start my career working with the

00:00:34,400 --> 00:00:37,850
infinity of space and handling the

00:00:36,320 --> 00:00:40,730
enormous amount of data that it can

00:00:37,850 --> 00:00:42,620
produce but although I graduated as an

00:00:40,730 --> 00:00:45,530
astronomer I switched to a career as a

00:00:42,620 --> 00:00:47,120
data scientist but I guess I couldn't

00:00:45,530 --> 00:00:49,039
say goodbye to the visually focused

00:00:47,120 --> 00:00:51,739
astronomer inside of me because I found

00:00:49,039 --> 00:00:53,980
myself loving the visualization of the

00:00:51,739 --> 00:00:56,629
data even more than the analysis itself

00:00:53,980 --> 00:00:58,640
so I switch gears again and I'm now a

00:00:56,629 --> 00:01:00,710
down-to-earth data visualization

00:00:58,640 --> 00:01:03,469
designer working for a gem in Amsterdam

00:01:00,710 --> 00:01:06,460
although I actually resigned last week

00:01:03,469 --> 00:01:09,860
because I'm going to go freelance

00:01:06,460 --> 00:01:12,200
whereas right now still at night I work

00:01:09,860 --> 00:01:14,179
on personal projects experiments and

00:01:12,200 --> 00:01:17,630
write tutorials for my website visual

00:01:14,179 --> 00:01:19,130
cinnamon and I found that in data

00:01:17,630 --> 00:01:21,770
visualization I tend to be a

00:01:19,130 --> 00:01:23,810
perfectionist I love spending hours and

00:01:21,770 --> 00:01:27,080
hours in some small detail to make it

00:01:23,810 --> 00:01:28,220
exactly as I have in mind and being born

00:01:27,080 --> 00:01:30,619
and raised in Holland

00:01:28,220 --> 00:01:33,110
I always willfully hope that maybe my

00:01:30,619 --> 00:01:35,149
craving for perfectionism stems from the

00:01:33,110 --> 00:01:37,280
same genes as those of the Dutch master

00:01:35,149 --> 00:01:39,440
painters of Ault who meant but such

00:01:37,280 --> 00:01:44,000
dedication to detail into their artworks

00:01:39,440 --> 00:01:45,800
you know it's a small country so even

00:01:44,000 --> 00:01:48,380
though painting and data visualization

00:01:45,800 --> 00:01:51,560
isn't exactly the same thing I do always

00:01:48,380 --> 00:01:53,569
start my visuals on plain paper and once

00:01:51,560 --> 00:01:55,340
I have a mental image of what something

00:01:53,569 --> 00:01:57,289
should look the computer had damn well

00:01:55,340 --> 00:01:59,450
be able to create some semblance of that

00:01:57,289 --> 00:02:01,700
on the screen for me however usually

00:01:59,450 --> 00:02:03,410
what I have in mind isn't quite the

00:02:01,700 --> 00:02:05,929
default setting or what all the examples

00:02:03,410 --> 00:02:07,429
are using and it forces me to try and

00:02:05,929 --> 00:02:10,610
think outside of the box from time to

00:02:07,429 --> 00:02:12,620
time to try and recreate my concepts but

00:02:10,610 --> 00:02:15,140
he'd be surprised by the results if you

00:02:12,620 --> 00:02:16,850
try to experiment with the norm use

00:02:15,140 --> 00:02:18,370
things in an unconventional manner or

00:02:16,850 --> 00:02:20,110
get

00:02:18,370 --> 00:02:22,480
or elements from different fields of

00:02:20,110 --> 00:02:26,860
design to create a more effective or fun

00:02:22,480 --> 00:02:28,660
visualization so almost ready to take

00:02:26,860 --> 00:02:31,690
off go beyond the shapes but first let

00:02:28,660 --> 00:02:35,230
me explain how SVG's fit into the world

00:02:31,690 --> 00:02:37,780
of t3 which is a JavaScript library that

00:02:35,230 --> 00:02:39,700
has become the standard for online data

00:02:37,780 --> 00:02:43,150
visualization and it's what I'm using

00:02:39,700 --> 00:02:44,950
for all the examples to come so once you

00:02:43,150 --> 00:02:47,349
start building with d3 you quickly

00:02:44,950 --> 00:02:50,590
figure out that it's basic building

00:02:47,349 --> 00:02:52,390
blocks its shapes our extra DS and by

00:02:50,590 --> 00:02:54,849
combining these circles and rectangles

00:02:52,390 --> 00:02:58,510
and lines and paths you can create some

00:02:54,849 --> 00:03:00,519
awesome visualizations and I'd like to

00:02:58,510 --> 00:03:02,739
take you along on my journey on how I

00:03:00,519 --> 00:03:04,079
started using SVG's beyond their

00:03:02,739 --> 00:03:06,250
marriage Apes

00:03:04,079 --> 00:03:08,500
well my first step beyond the shapes

00:03:06,250 --> 00:03:11,110
came when I was trying to create a color

00:03:08,500 --> 00:03:13,000
legend and I was looking for a way that

00:03:11,110 --> 00:03:14,799
goes smoothly through all of the colors

00:03:13,000 --> 00:03:18,099
that I was using and that's how I got

00:03:14,799 --> 00:03:20,079
into ingredients see the point was that

00:03:18,099 --> 00:03:22,329
it wasn't really necessary to read off

00:03:20,079 --> 00:03:24,250
the exact value that each color

00:03:22,329 --> 00:03:25,810
represented it was more about seeing

00:03:24,250 --> 00:03:27,880
trends and getting an overall sense of

00:03:25,810 --> 00:03:30,730
the numbers like in a heat map for

00:03:27,880 --> 00:03:32,079
example so this one shows the number of

00:03:30,730 --> 00:03:35,049
traffic accidents that occurred during

00:03:32,079 --> 00:03:37,209
one year and aggregated by day of the

00:03:35,049 --> 00:03:40,060
week on the vertical and hour of the day

00:03:37,209 --> 00:03:42,010
on the horizontal and the darker color

00:03:40,060 --> 00:03:45,220
the more actions that occurred in that

00:03:42,010 --> 00:03:46,900
combination so no surprise that the

00:03:45,220 --> 00:03:48,430
morning rush-hour and especially the

00:03:46,900 --> 00:03:50,560
evening rush hour have the most

00:03:48,430 --> 00:03:52,450
accidents but it's really about seeing

00:03:50,560 --> 00:03:54,190
these kinds of trends it doesn't really

00:03:52,450 --> 00:03:55,750
matter if it was fourteen hundred and

00:03:54,190 --> 00:03:58,720
seventy or fifteen hundred and twenty

00:03:55,750 --> 00:04:00,430
accidents and the legend below is what I

00:03:58,720 --> 00:04:02,139
mean with having something that goes

00:04:00,430 --> 00:04:04,870
smoothly through all of my colors and

00:04:02,139 --> 00:04:07,389
it's nothing more than a simple SVG

00:04:04,870 --> 00:04:09,190
rectangle filled with a gradient and

00:04:07,389 --> 00:04:11,859
because I'm going to show you a few more

00:04:09,190 --> 00:04:14,200
gradient examples I'll first explain how

00:04:11,859 --> 00:04:16,780
you can create one based in the code of

00:04:14,200 --> 00:04:19,329
t3 and and yes I know this is a CSS

00:04:16,780 --> 00:04:21,039
conference but you'll see some

00:04:19,329 --> 00:04:23,650
JavaScript here which is going to do

00:04:21,039 --> 00:04:26,110
strange things and apply CSS styles and

00:04:23,650 --> 00:04:27,400
do something to SVG's and some of the

00:04:26,110 --> 00:04:29,500
things I'll show you could be done

00:04:27,400 --> 00:04:30,870
easier with just plain CSS but I I

00:04:29,500 --> 00:04:32,850
wanted to show you

00:04:30,870 --> 00:04:36,480
how that would work in the threes code

00:04:32,850 --> 00:04:38,580
because data visualization is based on

00:04:36,480 --> 00:04:40,680
data so things are dynamic so Styles

00:04:38,580 --> 00:04:43,470
have to be dynamic and that's why I also

00:04:40,680 --> 00:04:46,590
need JavaScript from time to time but

00:04:43,470 --> 00:04:48,870
anyway there actually exists a linear

00:04:46,590 --> 00:04:50,940
gradient element and you'd nest that

00:04:48,870 --> 00:04:52,320
within a Deaf's element and deafs is

00:04:50,940 --> 00:04:54,630
short for definitions and it holds

00:04:52,320 --> 00:04:56,640
special things suggests gradients and

00:04:54,630 --> 00:04:58,830
filters it's very important that you

00:04:56,640 --> 00:05:00,390
give your gradient a unique ID so that

00:04:58,830 --> 00:05:01,920
you can reference it again later on once

00:05:00,390 --> 00:05:04,890
you set the fill style of your element

00:05:01,920 --> 00:05:07,050
and now we have to define the direction

00:05:04,890 --> 00:05:09,510
along which a gradient should run across

00:05:07,050 --> 00:05:11,130
your shape and you do that in a way

00:05:09,510 --> 00:05:14,880
that's very similar to creating an SVG

00:05:11,130 --> 00:05:17,520
line with x and y so x1 y1 defines the

00:05:14,880 --> 00:05:18,810
starting point and then x2 y2 defines an

00:05:17,520 --> 00:05:21,390
endpoint which is sort of like a

00:05:18,810 --> 00:05:24,240
directional arrow you can supply these

00:05:21,390 --> 00:05:26,370
values in both percentages and exact

00:05:24,240 --> 00:05:30,030
pixel locations but usually percentages

00:05:26,370 --> 00:05:32,400
is way easier and mark playing around

00:05:30,030 --> 00:05:33,960
with these values you can create a

00:05:32,400 --> 00:05:36,420
gradient along any angle that you might

00:05:33,960 --> 00:05:38,580
like but what I'm showing here isn't

00:05:36,420 --> 00:05:40,020
quite true because in reality it's

00:05:38,580 --> 00:05:42,630
really the bounding box that defines

00:05:40,020 --> 00:05:44,490
where the start and end point lies so a

00:05:42,630 --> 00:05:46,440
zero zero percent starting point really

00:05:44,490 --> 00:05:48,480
nice outside of the visible shape and

00:05:46,440 --> 00:05:50,220
that means that once you see the

00:05:48,480 --> 00:05:51,660
gradient coming into the shape it's

00:05:50,220 --> 00:05:53,940
actually already turned slightly more

00:05:51,660 --> 00:05:55,740
purple and maybe you don't want that and

00:05:53,940 --> 00:05:58,770
that's fine you don't have to start at

00:05:55,740 --> 00:06:00,840
zero or and at 100% you can start

00:05:58,770 --> 00:06:03,090
wherever you want and then the region

00:06:00,840 --> 00:06:04,800
outside of that arrow will be filled in

00:06:03,090 --> 00:06:07,950
with whatever color was present at the

00:06:04,800 --> 00:06:09,290
outside outskirts of your gradient but

00:06:07,950 --> 00:06:13,230
we're just going to use a plain

00:06:09,290 --> 00:06:14,670
horizontal gradient so after setting the

00:06:13,230 --> 00:06:16,080
direction all that's left to do is

00:06:14,670 --> 00:06:18,810
supply it with some color information

00:06:16,080 --> 00:06:21,240
and for this this top element exists and

00:06:18,810 --> 00:06:23,610
you use apply this top element with a

00:06:21,240 --> 00:06:25,800
stop color and an offset which is

00:06:23,610 --> 00:06:27,390
location along the directional arrow

00:06:25,800 --> 00:06:29,850
where that color should be pure

00:06:27,390 --> 00:06:31,500
so here I've appended a light blue color

00:06:29,850 --> 00:06:33,720
all the way at the start it's a

00:06:31,500 --> 00:06:36,240
represent and I need at least one more

00:06:33,720 --> 00:06:39,810
color for a gradient so I'm going to

00:06:36,240 --> 00:06:41,640
append a dark blue color at 100% and now

00:06:39,810 --> 00:06:43,940
the gradient is done it's ready to be

00:06:41,640 --> 00:06:46,430
used so I select my L

00:06:43,940 --> 00:06:51,050
my rectangle and I said its fill style

00:06:46,430 --> 00:06:53,030
by referencing that unique ID so that

00:06:51,050 --> 00:06:54,560
might become tedious offending these

00:06:53,030 --> 00:06:57,530
stops if you have many colors in your

00:06:54,560 --> 00:07:00,110
gradient but then we can use d3 status

00:06:57,530 --> 00:07:01,550
step so let's go back to that horizontal

00:07:00,110 --> 00:07:03,740
gradient right after setting in to

00:07:01,550 --> 00:07:05,810
direction and this time I'm going to

00:07:03,740 --> 00:07:07,760
supply the gradient with a data set that

00:07:05,810 --> 00:07:10,490
contains information about the offset

00:07:07,760 --> 00:07:13,250
and colors that I want to use and let d3

00:07:10,490 --> 00:07:15,230
append a stop for each of these after

00:07:13,250 --> 00:07:17,090
that it takes two more lines to set the

00:07:15,230 --> 00:07:18,530
right offset and stop color by

00:07:17,090 --> 00:07:21,770
referencing the data and that is now

00:07:18,530 --> 00:07:24,770
attached to the gradient and finally you

00:07:21,770 --> 00:07:27,290
get that result so here is another

00:07:24,770 --> 00:07:29,300
example that is in essence a heat map

00:07:27,290 --> 00:07:32,030
and can this be combined with a smooth

00:07:29,300 --> 00:07:33,410
legend it's the visual output of a

00:07:32,030 --> 00:07:35,570
machine learning technique used to

00:07:33,410 --> 00:07:37,460
cluster data called self-organizing maps

00:07:35,570 --> 00:07:40,400
and it's what started my love for

00:07:37,460 --> 00:07:41,660
hexagons and I wish I could say I was

00:07:40,400 --> 00:07:44,690
using the color palette that's visible

00:07:41,660 --> 00:07:46,730
right now but I started using this

00:07:44,690 --> 00:07:49,100
technique before I really got into data

00:07:46,730 --> 00:07:51,380
visualization and and I do come from a

00:07:49,100 --> 00:07:55,760
science background so my go-to color

00:07:51,380 --> 00:07:57,740
palette was a rainbow of course which I

00:07:55,760 --> 00:08:00,230
now know is not a good choice for

00:07:57,740 --> 00:08:05,210
continuous data it still looks nice

00:08:00,230 --> 00:08:06,080
though well staying in the rainbow mood

00:08:05,210 --> 00:08:08,120
just a bit longer

00:08:06,080 --> 00:08:11,660
here was one of my favorite temperature

00:08:08,120 --> 00:08:14,450
visualizations if you can see it so you

00:08:11,660 --> 00:08:17,360
see here is a weather radio I recreated

00:08:14,450 --> 00:08:20,450
for New York for a year of data in 2015

00:08:17,360 --> 00:08:21,740
and each of these bars is one day and it

00:08:20,450 --> 00:08:23,630
goes from the minimum to the maximum

00:08:21,740 --> 00:08:25,430
temperature measured on that day and

00:08:23,630 --> 00:08:27,740
it's color coded according to the

00:08:25,430 --> 00:08:29,480
average temperature and here it's really

00:08:27,740 --> 00:08:33,100
again about seeing trends so when was it

00:08:29,480 --> 00:08:33,100
really hot or when was it really cold

00:08:33,219 --> 00:08:37,669
well being an astronomer I of course

00:08:36,050 --> 00:08:39,710
wanted to make a visualization about

00:08:37,669 --> 00:08:42,680
exoplanets which are planets that lie

00:08:39,710 --> 00:08:44,930
outside of our solar system and my setup

00:08:42,680 --> 00:08:46,670
was to do a bit of data storytelling to

00:08:44,930 --> 00:08:49,160
explain how weird and amazing these

00:08:46,670 --> 00:08:51,410
planets really are but to make these

00:08:49,160 --> 00:08:54,650
circles all rotating around one generic

00:08:51,410 --> 00:08:56,710
star a bit more than while flat circles

00:08:54,650 --> 00:09:00,370
I turned them into tiny sphere

00:08:56,710 --> 00:09:01,960
by using a radial gradient and I also

00:09:00,370 --> 00:09:05,980
made each of the gradient slightly

00:09:01,960 --> 00:09:09,070
different because I made them depend on

00:09:05,980 --> 00:09:10,930
the data after class and creating

00:09:09,070 --> 00:09:13,240
database plant database gradients is

00:09:10,930 --> 00:09:15,040
also straightforward with d3 because we

00:09:13,240 --> 00:09:17,529
can use the data step like we did before

00:09:15,040 --> 00:09:20,200
in the legends case however now I

00:09:17,529 --> 00:09:22,510
immediately append my dataset of planets

00:09:20,200 --> 00:09:25,000
to the Deaf's elements so that d3 will

00:09:22,510 --> 00:09:28,000
create multiple radial gradients one for

00:09:25,000 --> 00:09:29,589
each plan still very important that you

00:09:28,000 --> 00:09:32,740
give each of your gradients some unique

00:09:29,589 --> 00:09:34,390
ID and then afterwards we can use the

00:09:32,740 --> 00:09:36,070
data and that is now connected to each

00:09:34,390 --> 00:09:39,459
of the gradients to set something like

00:09:36,070 --> 00:09:41,500
the base color of a planet and then I

00:09:39,459 --> 00:09:43,450
can make it light on the inside and

00:09:41,500 --> 00:09:45,490
darker on the outside move that center

00:09:43,450 --> 00:09:47,140
location a bit increase the directional

00:09:45,490 --> 00:09:50,470
arrow and now we have something that

00:09:47,140 --> 00:09:51,910
sort of mimics the 3d sphere and if you

00:09:50,470 --> 00:09:53,800
were to then look in the dev tools you'd

00:09:51,910 --> 00:09:56,709
find that you have many radial gradients

00:09:53,800 --> 00:09:58,180
one for each of your planets and all of

00:09:56,709 --> 00:10:01,870
the colors for each gradient would be

00:09:58,180 --> 00:10:04,000
slightly different finally again we

00:10:01,870 --> 00:10:07,060
select all of our planets and we connect

00:10:04,000 --> 00:10:08,770
them to the right gradient well instead

00:10:07,060 --> 00:10:11,050
of showing you a visualization about

00:10:08,770 --> 00:10:13,060
exoplanets about which many have been

00:10:11,050 --> 00:10:14,589
made actually already I thought I'd show

00:10:13,060 --> 00:10:17,230
you what I think is one of the most

00:10:14,589 --> 00:10:20,560
important plots in astronomy a Hertz

00:10:17,230 --> 00:10:22,180
from rustled diagram and here the

00:10:20,560 --> 00:10:24,220
circles are no longer planets there are

00:10:22,180 --> 00:10:26,740
actually stars I've chosen some of our

00:10:24,220 --> 00:10:29,350
nearest stars and on the vertical scale

00:10:26,740 --> 00:10:31,300
we have luminosity going up and on the

00:10:29,350 --> 00:10:33,700
horizontal scale we have temperature but

00:10:31,300 --> 00:10:35,709
note actually that the hotter blue stars

00:10:33,700 --> 00:10:37,240
on the left and the cooler red stars on

00:10:35,709 --> 00:10:40,120
the right and that's due to historical

00:10:37,240 --> 00:10:42,339
reasons so our Sun is somewhere over

00:10:40,120 --> 00:10:44,650
there and these planets in the upper

00:10:42,339 --> 00:10:47,230
portion like Betelgeuse and on terra's

00:10:44,650 --> 00:10:50,350
they aren't need bigger than our Sun but

00:10:47,230 --> 00:10:53,490
in reality the scaling isn't quite right

00:10:50,350 --> 00:10:59,680
because this is the true size difference

00:10:53,490 --> 00:11:01,180
yes space is big but you know that this

00:10:59,680 --> 00:11:03,700
doesn't really make for a very readable

00:11:01,180 --> 00:11:07,600
plot so that's why this this down

00:11:03,700 --> 00:11:09,700
scaling is amplified also stars are of

00:11:07,600 --> 00:11:10,010
course the things that shine they aren't

00:11:09,700 --> 00:11:12,560
act

00:11:10,010 --> 00:11:14,390
we shine the poem so by tweaking that

00:11:12,560 --> 00:11:15,950
radio grainy in a bit I could try to

00:11:14,390 --> 00:11:18,020
make them look a bit more like the

00:11:15,950 --> 00:11:20,120
glowing orbs that they really are so

00:11:18,020 --> 00:11:23,120
another reason why I really like this

00:11:20,120 --> 00:11:23,960
plot is that there's very little visual

00:11:23,120 --> 00:11:26,600
encoding done

00:11:23,960 --> 00:11:28,730
I mean stars they're actually round and

00:11:26,600 --> 00:11:30,650
they are visible to us in these colors

00:11:28,730 --> 00:11:33,170
so it's almost as if you're plotting the

00:11:30,650 --> 00:11:35,240
things themselves and then I personally

00:11:33,170 --> 00:11:37,370
don't know of a better subject to use

00:11:35,240 --> 00:11:41,410
for scatter plots then stars and maybe

00:11:37,370 --> 00:11:44,120
planets but I might be biased

00:11:41,410 --> 00:11:46,400
well besides using data to set the color

00:11:44,120 --> 00:11:48,590
of a gradient you can use it to set any

00:11:46,400 --> 00:11:51,530
attribute really such as the direction

00:11:48,590 --> 00:11:53,630
along which gradient you run so after

00:11:51,530 --> 00:11:55,580
watching the second Avengers movie I was

00:11:53,630 --> 00:11:57,770
interested to know how each of these

00:11:55,580 --> 00:11:59,540
Avengers were connected how often had

00:11:57,770 --> 00:12:02,660
two of them appeared in the same movie

00:11:59,540 --> 00:12:05,090
together and I thought that d3 scored

00:12:02,660 --> 00:12:08,390
layout which is his chart type will lend

00:12:05,090 --> 00:12:10,730
itself nicely for this dataset so here

00:12:08,390 --> 00:12:13,160
we have the result where the thicker a

00:12:10,730 --> 00:12:14,600
chord which are these inner lines the

00:12:13,160 --> 00:12:15,760
more movies the two Avengers have

00:12:14,600 --> 00:12:18,680
appeared in together

00:12:15,760 --> 00:12:21,170
however by default a chord is given one

00:12:18,680 --> 00:12:22,910
color but it doesn't really work so well

00:12:21,170 --> 00:12:25,490
with this data set because the

00:12:22,910 --> 00:12:26,990
connections are symmetrical since a if

00:12:25,490 --> 00:12:29,030
Thor appeared in the movie together with

00:12:26,990 --> 00:12:29,420
Hawkeye well then the reverse is true as

00:12:29,030 --> 00:12:32,240
well

00:12:29,420 --> 00:12:34,220
so I wanted to do something else I could

00:12:32,240 --> 00:12:37,310
make them oh great but that fell a bit

00:12:34,220 --> 00:12:39,470
boring so instead I wanted to fill them

00:12:37,310 --> 00:12:42,500
with a gradient running from the color

00:12:39,470 --> 00:12:46,670
of one avenger to the other well to pull

00:12:42,500 --> 00:12:49,310
that off let's focus on black widow so

00:12:46,670 --> 00:12:52,520
for these five courts that you can't see

00:12:49,310 --> 00:12:54,530
actually well that's fun let's see how

00:12:52,520 --> 00:12:56,570
it grows fun it's actually over there

00:12:54,530 --> 00:12:59,090
I'm like weirdo five courts you want to

00:12:56,570 --> 00:13:01,460
create five linear gradients good that

00:12:59,090 --> 00:13:03,110
run across these directional arrows and

00:13:01,460 --> 00:13:05,510
then have a start color and end color is

00:13:03,110 --> 00:13:08,150
given by the small circles so something

00:13:05,510 --> 00:13:10,910
that looks like this but then inside the

00:13:08,150 --> 00:13:12,620
courts that you can't really see well

00:13:10,910 --> 00:13:14,690
one of the many nice things about d3 is

00:13:12,620 --> 00:13:16,160
that it helps you prepare your data for

00:13:14,690 --> 00:13:18,890
whatever chart type that you want to use

00:13:16,160 --> 00:13:20,930
so you supply your data and these threes

00:13:18,890 --> 00:13:23,960
functions will transform that into

00:13:20,930 --> 00:13:26,960
and angles and and paths things that are

00:13:23,960 --> 00:13:29,210
needed to draw SVG shapes and for this

00:13:26,960 --> 00:13:31,310
particular layout d3 returns an array

00:13:29,210 --> 00:13:33,200
that contains all the information I need

00:13:31,310 --> 00:13:38,240
to draw these inner courts and it's

00:13:33,200 --> 00:13:40,670
usually named court dot courts so as in

00:13:38,240 --> 00:13:42,500
the plants case I immediately append my

00:13:40,670 --> 00:13:44,240
courts data set to the deaths so that

00:13:42,500 --> 00:13:46,550
these three will create one linear

00:13:44,240 --> 00:13:48,560
gradient for each of my courts and one

00:13:46,550 --> 00:13:50,810
thing I wanted to point out is that in

00:13:48,560 --> 00:13:53,779
this case it's actually easier to not

00:13:50,810 --> 00:13:56,480
use the bounding box of each court to

00:13:53,779 --> 00:13:58,220
define a direction but instead used a

00:13:56,480 --> 00:13:59,870
coordinate system that I've put in place

00:13:58,220 --> 00:14:01,940
with its origin right in the center of

00:13:59,870 --> 00:14:04,700
the circle you can do that by setting

00:14:01,940 --> 00:14:07,220
gradient units to users based on use but

00:14:04,700 --> 00:14:09,920
the reason is that in this rare case

00:14:07,220 --> 00:14:12,320
it's actually easier to find the exact

00:14:09,920 --> 00:14:14,690
pixel locations of these two colored

00:14:12,320 --> 00:14:16,550
circles by using the variables available

00:14:14,690 --> 00:14:21,589
in the courts datasets together with

00:14:16,550 --> 00:14:24,620
some sines and cosines so after setting

00:14:21,589 --> 00:14:27,709
these directions based on the variables

00:14:24,620 --> 00:14:29,060
we need to fill it with two color steps

00:14:27,709 --> 00:14:30,860
one at the start

00:14:29,060 --> 00:14:32,630
that's color coded according to the

00:14:30,860 --> 00:14:34,339
avenger at the start of the court and

00:14:32,630 --> 00:14:36,020
then one at a hundred percent that's

00:14:34,339 --> 00:14:38,150
color coded according to the avenger at

00:14:36,020 --> 00:14:39,589
the other one and then with those

00:14:38,150 --> 00:14:42,260
changes we get the following result

00:14:39,589 --> 00:14:44,540
where each of the courts is now

00:14:42,260 --> 00:14:53,990
representation of both the Avengers that

00:14:44,540 --> 00:14:57,290
it links but you don't actually have to

00:14:53,990 --> 00:14:59,420
use gradients as something runs smoothly

00:14:57,290 --> 00:15:01,339
from one color to another they can be

00:14:59,420 --> 00:15:05,390
very handy for a rough color changes as

00:15:01,339 --> 00:15:07,100
well so many very fascinating analyses

00:15:05,390 --> 00:15:10,130
of baby names have been done in the past

00:15:07,100 --> 00:15:12,529
such as the most trendy or poison or

00:15:10,130 --> 00:15:14,630
unisex name but I was interested in

00:15:12,529 --> 00:15:17,089
something much more simple I just wanted

00:15:14,630 --> 00:15:19,190
to know how hats the top baby names

00:15:17,089 --> 00:15:21,620
risen and fallen from Fame over the past

00:15:19,190 --> 00:15:24,020
years and I was surprised to find out

00:15:21,620 --> 00:15:26,990
that the data available actually goes

00:15:24,020 --> 00:15:29,200
back to 1880 however a typical screen

00:15:26,990 --> 00:15:32,320
isn't wide enough to do justice to

00:15:29,200 --> 00:15:34,870
and 35 years of volatile change so

00:15:32,320 --> 00:15:38,500
instead I applied the focus and contacts

00:15:34,870 --> 00:15:40,660
technique in which we have a small chart

00:15:38,500 --> 00:15:42,730
below that shows you all of your data

00:15:40,660 --> 00:15:44,590
and then from that you can select a

00:15:42,730 --> 00:15:48,030
window that is done visible in more

00:15:44,590 --> 00:15:52,750
detail above and you can move the window

00:15:48,030 --> 00:15:54,640
make a bigger and smaller but to make

00:15:52,750 --> 00:15:56,380
the connection between this bigger chart

00:15:54,640 --> 00:15:58,840
and the small window more intuitive

00:15:56,380 --> 00:16:01,030
I wanted to color both of them the same

00:15:58,840 --> 00:16:03,550
but only within the selected window and

00:16:01,030 --> 00:16:06,880
then gray outside for this smaller chart

00:16:03,550 --> 00:16:09,100
below however you can only stroke a line

00:16:06,880 --> 00:16:11,470
with one color and I didn't want to have

00:16:09,100 --> 00:16:13,960
to cut these lines off so before within

00:16:11,470 --> 00:16:16,540
and after the chosen window and then

00:16:13,960 --> 00:16:19,420
change that dynamically somebody moves

00:16:16,540 --> 00:16:24,640
the window so instead I went for a

00:16:19,420 --> 00:16:28,180
gradient approach so again there is gray

00:16:24,640 --> 00:16:30,880
on the left side I appended a gray stop

00:16:28,180 --> 00:16:33,550
at 40 say 40% and then right after that

00:16:30,880 --> 00:16:36,550
I amended appended the card stop at

00:16:33,550 --> 00:16:38,170
exactly the same percentage 40% and then

00:16:36,550 --> 00:16:40,510
you get a really abrupt color change

00:16:38,170 --> 00:16:43,360
well I do the same at some higher

00:16:40,510 --> 00:16:45,340
percentage but in reverse order so first

00:16:43,360 --> 00:16:49,690
a color and then great and then we get

00:16:45,340 --> 00:16:53,350
another very abrupt color change so if I

00:16:49,690 --> 00:16:55,240
now pick a rectangle that probably yes

00:16:53,350 --> 00:16:56,860
you can only see the center of which has

00:16:55,240 --> 00:16:58,780
gray on the side so with seamless if you

00:16:56,860 --> 00:17:02,290
have three rectangles really it's only

00:16:58,780 --> 00:17:04,000
one with a gradient and then by changing

00:17:02,290 --> 00:17:06,160
these two percentages when somebody

00:17:04,000 --> 00:17:08,740
moves the window and some form of update

00:17:06,160 --> 00:17:10,540
function is called the wind a gradient

00:17:08,740 --> 00:17:15,730
really seems to move right along with

00:17:10,540 --> 00:17:17,290
the choices that the user makes but it

00:17:15,730 --> 00:17:22,930
can also be very handy for showing

00:17:17,290 --> 00:17:24,600
categories so here we have the the meed

00:17:22,930 --> 00:17:27,070
the trend is the main body mass index

00:17:24,600 --> 00:17:29,410
over the past 40 years for a whole bunch

00:17:27,070 --> 00:17:30,970
of countries and although not so abrupt

00:17:29,410 --> 00:17:33,010
in real life according to health

00:17:30,970 --> 00:17:36,040
standards you've become overweight when

00:17:33,010 --> 00:17:38,440
your BMI is above 25 and obese when it's

00:17:36,040 --> 00:17:40,120
above 30 and usually what people do is

00:17:38,440 --> 00:17:42,080
that they sort of place rectangles

00:17:40,120 --> 00:17:44,090
behind these categories to make

00:17:42,080 --> 00:17:45,740
more obvious but I wanted to have

00:17:44,090 --> 00:17:47,809
something that was a little bit more

00:17:45,740 --> 00:17:49,760
subtle so instead I filled the lines

00:17:47,809 --> 00:17:54,590
with a gradient and you can still see

00:17:49,760 --> 00:17:57,769
very well where that changed occurs from

00:17:54,590 --> 00:18:00,610
from okay to overweight and even when

00:17:57,769 --> 00:18:04,039
you change your data from men to women

00:18:00,610 --> 00:18:05,510
well the lines they just smoothly go

00:18:04,039 --> 00:18:09,919
over the gradient so you have to make

00:18:05,510 --> 00:18:11,840
any color changes well I was also very

00:18:09,919 --> 00:18:13,610
pleasantly surprised when I found out

00:18:11,840 --> 00:18:16,250
that gradients can actually be animated

00:18:13,610 --> 00:18:18,529
and during a fun project at my previous

00:18:16,250 --> 00:18:19,789
employer Deloitte we had access to a

00:18:18,529 --> 00:18:22,370
data set that contained information

00:18:19,789 --> 00:18:24,049
about what education people had done and

00:18:22,370 --> 00:18:26,539
then one occupation they ended up doing

00:18:24,049 --> 00:18:30,500
and we wanted to visualize these results

00:18:26,539 --> 00:18:32,360
from education to occupation and I could

00:18:30,500 --> 00:18:35,059
have used the Sankey diagram which is

00:18:32,360 --> 00:18:36,919
very good at showing flows but the

00:18:35,059 --> 00:18:38,960
visual was going to be used in the media

00:18:36,919 --> 00:18:41,059
and I was looking to create something a

00:18:38,960 --> 00:18:43,760
bit more eye-catching and I have a lot

00:18:41,059 --> 00:18:45,830
for circular things so instead I went

00:18:43,760 --> 00:18:48,200
back to the court diagram and with some

00:18:45,830 --> 00:18:50,389
tweaking and hacking and changing turn

00:18:48,200 --> 00:18:54,169
it into something resembling more of a

00:18:50,389 --> 00:18:56,000
circular Sankey diagram but III then

00:18:54,169 --> 00:18:57,980
wrote a tutorial on how to recreate this

00:18:56,000 --> 00:19:00,830
and share that online and some people

00:18:57,980 --> 00:19:02,179
started calling it the bat block which I

00:19:00,830 --> 00:19:05,590
thought was way more catchy then

00:19:02,179 --> 00:19:08,779
circular Sankey diagram so the bad plot

00:19:05,590 --> 00:19:10,279
but anyway here is the end result where

00:19:08,779 --> 00:19:12,559
you cannot see the cords there are great

00:19:10,279 --> 00:19:16,130
courts in there going from one end to

00:19:12,559 --> 00:19:17,870
another and to visualize this education

00:19:16,130 --> 00:19:20,750
to occupation flow I actually filled

00:19:17,870 --> 00:19:22,519
that with a linear gradient which I can

00:19:20,750 --> 00:19:25,340
see in my screen right now here you can

00:19:22,519 --> 00:19:26,960
sort of see to make it flow a bit more

00:19:25,340 --> 00:19:28,960
intuitively clear that people are going

00:19:26,960 --> 00:19:31,730
from left to right

00:19:28,960 --> 00:19:33,320
well animating in gradient also gave me

00:19:31,730 --> 00:19:35,510
an excuse to put one of the most famous

00:19:33,320 --> 00:19:38,179
data visualization stories in my

00:19:35,510 --> 00:19:41,870
presentation and here we have Menards

00:19:38,179 --> 00:19:44,480
map from 1896 about the enormous losses

00:19:41,870 --> 00:19:47,419
suffered by Napoleon's army in his march

00:19:44,480 --> 00:19:49,880
to and from Moscow in 1812 and what you

00:19:47,419 --> 00:19:52,800
see here is the movement of troops

00:19:49,880 --> 00:19:54,960
across the land past villages and

00:19:52,800 --> 00:19:58,680
rivers towards Moscow and brown and

00:19:54,960 --> 00:20:00,060
black back again in black and the

00:19:58,680 --> 00:20:01,710
thickness of a line represents the

00:20:00,060 --> 00:20:04,140
number of troops that was still alive at

00:20:01,710 --> 00:20:06,330
that point and then we have a line chart

00:20:04,140 --> 00:20:07,740
below that highlights the devastatingly

00:20:06,330 --> 00:20:10,260
low temperatures that the troops at the

00:20:07,740 --> 00:20:12,000
face and they're marched back and what I

00:20:10,260 --> 00:20:13,710
did was I remembered that first when I

00:20:12,000 --> 00:20:16,410
saw this chart I wasn't quite sure how

00:20:13,710 --> 00:20:18,480
to read that so I added the slight

00:20:16,410 --> 00:20:21,150
animated gradient to make it a bit more

00:20:18,480 --> 00:20:24,090
clear that Brown is towards Moscow and

00:20:21,150 --> 00:20:26,010
black is back again and when I see this

00:20:24,090 --> 00:20:28,050
chart I'm always so sad to see that out

00:20:26,010 --> 00:20:29,850
of the four hundred and twenty three

00:20:28,050 --> 00:20:32,460
thousand men so almost half a million

00:20:29,850 --> 00:20:37,230
men that started on this campaign only

00:20:32,460 --> 00:20:39,030
ten thousand made it back life well

00:20:37,230 --> 00:20:41,190
leaving SVG gradients behind

00:20:39,030 --> 00:20:44,220
we're finally entering the domain of SVG

00:20:41,190 --> 00:20:45,960
filters but to be honest are also sort

00:20:44,220 --> 00:20:48,360
of leaving the realm of effectiveness

00:20:45,960 --> 00:20:50,460
individual behind a bit and going more

00:20:48,360 --> 00:20:53,580
into having or creating a bit of fun and

00:20:50,460 --> 00:20:55,050
magic in your visual so creating a

00:20:53,580 --> 00:20:57,150
filter starts out very similar to a

00:20:55,050 --> 00:20:58,740
gradient this time we append two filter

00:20:57,150 --> 00:21:01,130
elements to the diffs and it's still

00:20:58,740 --> 00:21:03,360
important to give it some unique ID and

00:21:01,130 --> 00:21:05,190
afterwards comes the magic part where a

00:21:03,360 --> 00:21:06,390
specific combination of filters can

00:21:05,190 --> 00:21:09,600
create an effect that you might have

00:21:06,390 --> 00:21:11,220
never expected however luckily usually

00:21:09,600 --> 00:21:13,350
you can just copy and paste the same

00:21:11,220 --> 00:21:14,790
piece of code from visual to visual you

00:21:13,350 --> 00:21:16,920
don't really have to make any changes

00:21:14,790 --> 00:21:19,950
maybe some numbers here and there and

00:21:16,920 --> 00:21:21,450
finally we select our element and set

00:21:19,950 --> 00:21:25,110
its filter style by referencing that

00:21:21,450 --> 00:21:26,730
unique ID so the first one is a rather

00:21:25,110 --> 00:21:29,490
subtle but I can have a nice interesting

00:21:26,730 --> 00:21:31,200
effect in the right circumstances well

00:21:29,490 --> 00:21:33,090
some people love radar charts and other

00:21:31,200 --> 00:21:35,250
people hate them I'm personally not part

00:21:33,090 --> 00:21:38,900
of the latter group so a few months ago

00:21:35,250 --> 00:21:41,100
I made a redesign of a radar chart in d3

00:21:38,900 --> 00:21:42,930
but although I was fine with it the way

00:21:41,100 --> 00:21:45,150
it looks now I remember coming across

00:21:42,930 --> 00:21:46,830
the code for some from drop shadow or a

00:21:45,150 --> 00:21:48,600
text shadow and I thought well maybe

00:21:46,830 --> 00:21:51,270
that might make this look a bit more

00:21:48,600 --> 00:21:55,410
engaging and I'll show you the glow it's

00:21:51,270 --> 00:21:57,090
very subtle that was it and it really

00:21:55,410 --> 00:21:59,220
depends on taste or do you think this is

00:21:57,090 --> 00:22:02,490
better or not but what happens is fairly

00:21:59,220 --> 00:22:04,060
simple say that you want to apply the

00:22:02,490 --> 00:22:05,920
filter to a circle

00:22:04,060 --> 00:22:08,440
creates a blurred version of that circle

00:22:05,920 --> 00:22:11,200
and merges the original one back on top

00:22:08,440 --> 00:22:13,750
of it give the appearance of a glow and

00:22:11,200 --> 00:22:16,150
you can apply this to ice with you

00:22:13,750 --> 00:22:18,880
rectangles and paths and circles doesn't

00:22:16,150 --> 00:22:20,080
matter and another occasion where I

00:22:18,880 --> 00:22:21,520
found that this had an interesting

00:22:20,080 --> 00:22:23,530
effect was when I was playing around

00:22:21,520 --> 00:22:26,230
with Spiro graphs which I used to love

00:22:23,530 --> 00:22:28,240
as a kid and with a bit of glow it just

00:22:26,230 --> 00:22:32,080
made it look a bit more neon and then

00:22:28,240 --> 00:22:33,670
lifted it off a page of it so another

00:22:32,080 --> 00:22:35,490
filter that has an interesting and

00:22:33,670 --> 00:22:38,260
subtle effect has to do with motion blur

00:22:35,490 --> 00:22:40,720
so the faster and closer to us things

00:22:38,260 --> 00:22:42,160
move the more blur they appear and with

00:22:40,720 --> 00:22:44,170
the right filter we can recreate this

00:22:42,160 --> 00:22:45,880
effect on the screen as well these

00:22:44,170 --> 00:22:48,130
circles for example the fact that they

00:22:45,880 --> 00:22:51,010
move no more blurred I make them to give

00:22:48,130 --> 00:22:52,630
the feeling of fast movement and I first

00:22:51,010 --> 00:22:54,460
saw this effect when I saw images being

00:22:52,630 --> 00:22:56,320
blurred in an image gallery and I

00:22:54,460 --> 00:22:57,970
thought well data visualization often

00:22:56,320 --> 00:22:59,070
shows movement so I wanted to see what I

00:22:57,970 --> 00:23:01,330
could do with that

00:22:59,070 --> 00:23:02,230
well this filter is even more simple

00:23:01,330 --> 00:23:04,630
than the previous one

00:23:02,230 --> 00:23:08,920
because you really only do a blur all an

00:23:04,630 --> 00:23:11,230
element in one direction X or Y so now

00:23:08,920 --> 00:23:12,940
these circles are moving without a blur

00:23:11,230 --> 00:23:16,000
and with a bit of an exaggerated blur

00:23:12,940 --> 00:23:19,270
you get this effect so if I take away

00:23:16,000 --> 00:23:21,340
the blur and put it back in and I don't

00:23:19,270 --> 00:23:23,080
know it's really subtle but I feel like

00:23:21,340 --> 00:23:26,980
the second one just makes it look a bit

00:23:23,080 --> 00:23:28,690
more real well I thought that a data

00:23:26,980 --> 00:23:30,490
visualization about the top running

00:23:28,690 --> 00:23:32,770
speeds of some animals and the fastest

00:23:30,490 --> 00:23:34,600
human would be interesting so these

00:23:32,770 --> 00:23:36,070
circles are going to move outward the

00:23:34,600 --> 00:23:38,800
faster they move outward the more

00:23:36,070 --> 00:23:40,720
blurred I make them but you couldn't

00:23:38,800 --> 00:23:42,850
really consciously see that it's more

00:23:40,720 --> 00:23:44,560
subconsciously so let me pull them back

00:23:42,850 --> 00:23:46,990
in and show you just a blur that was

00:23:44,560 --> 00:23:48,850
occurring so the cheetah is the fastest

00:23:46,990 --> 00:23:50,620
so it gets the most blur and then I

00:23:48,850 --> 00:23:52,360
calculate how much less the blur of the

00:23:50,620 --> 00:23:55,930
other animals and you saying should be

00:23:52,360 --> 00:23:58,900
in comparison to the cheetah and just as

00:23:55,930 --> 00:24:01,930
a note if you want you can apply filters

00:23:58,900 --> 00:24:04,900
also to images that you've appended to

00:24:01,930 --> 00:24:09,070
your SVG so if I move these outward they

00:24:04,900 --> 00:24:11,830
get blurred as well well time for my

00:24:09,070 --> 00:24:14,440
favorite filter the gooey effect and I

00:24:11,830 --> 00:24:16,440
first saw this one when I saw a really

00:24:14,440 --> 00:24:18,780
nice demo for a loading button

00:24:16,440 --> 00:24:21,030
and during the night ladies open which

00:24:18,780 --> 00:24:22,470
is a golf tournament visitors could do a

00:24:21,030 --> 00:24:24,780
small golf clinic and then we'd

00:24:22,470 --> 00:24:27,180
visualize the results and to show how

00:24:24,780 --> 00:24:28,560
far the ball had gotten I could just let

00:24:27,180 --> 00:24:30,720
the data points appear on the screen

00:24:28,560 --> 00:24:33,660
like this but yeah that felt a bit

00:24:30,720 --> 00:24:35,820
boring so instead I tried to mimic the

00:24:33,660 --> 00:24:38,310
golf swing by letting the circle fly out

00:24:35,820 --> 00:24:40,050
from zero I know that was that felt

00:24:38,310 --> 00:24:42,240
better but I wasn't feeling it yet and

00:24:40,050 --> 00:24:44,940
and then I remembered that gooey effect

00:24:42,240 --> 00:24:47,190
and with that small change the ball now

00:24:44,940 --> 00:24:49,320
seems to be ejected from the start and

00:24:47,190 --> 00:24:50,580
if it's as if it is trying to

00:24:49,320 --> 00:24:53,460
acknowledge the effort made by the

00:24:50,580 --> 00:24:55,950
participant and it didn't make the

00:24:53,460 --> 00:24:59,490
visual anymore true or false but it did

00:24:55,950 --> 00:25:01,740
I did find it a lot more fun to watch so

00:24:59,490 --> 00:25:03,240
I'm not gonna even try and explain how

00:25:01,740 --> 00:25:05,880
this filter works because I only stand

00:25:03,240 --> 00:25:08,310
understand about half of the steps but

00:25:05,880 --> 00:25:10,320
besides this very nice gooey effect it

00:25:08,310 --> 00:25:15,420
can also do really nice color blending

00:25:10,320 --> 00:25:18,210
as a bonus again thinking about data

00:25:15,420 --> 00:25:19,320
visualizations maybe you could have if

00:25:18,210 --> 00:25:21,330
you want to plot circles on the map

00:25:19,320 --> 00:25:23,660
you're gonna let them fly out from some

00:25:21,330 --> 00:25:26,880
central point in their final location or

00:25:23,660 --> 00:25:30,030
instead if you want if you want to group

00:25:26,880 --> 00:25:31,290
them back on a country level you can if

00:25:30,030 --> 00:25:33,810
they once they sort of merge on a

00:25:31,290 --> 00:25:35,880
country they sort of group into into

00:25:33,810 --> 00:25:38,520
representing one country instead of all

00:25:35,880 --> 00:25:40,380
of these separate circles and this

00:25:38,520 --> 00:25:42,330
reminded me of another fun example

00:25:40,380 --> 00:25:45,390
created by Mike Bostock who is the

00:25:42,330 --> 00:25:47,760
creator of d3 which is already fun it

00:25:45,390 --> 00:25:49,650
seems finally it works so yeah some sort

00:25:47,760 --> 00:25:51,900
of collision detection but I think with

00:25:49,650 --> 00:25:58,110
the touch of goo it becomes even more

00:25:51,900 --> 00:26:00,570
fun yeah most fun is if you can keep one

00:25:58,110 --> 00:26:05,370
away from

00:26:00,570 --> 00:26:08,100
anyway so time for the final example and

00:26:05,370 --> 00:26:09,840
this one has to do with those amazing

00:26:08,100 --> 00:26:11,279
color building techniques where I want

00:26:09,840 --> 00:26:14,630
to colors overlap and each other can

00:26:11,279 --> 00:26:17,009
create an entirely different color and

00:26:14,630 --> 00:26:19,649
it first tried to recreate this effect

00:26:17,009 --> 00:26:21,120
using SVG filters until I found out that

00:26:19,649 --> 00:26:23,940
it can be done with just two lines of

00:26:21,120 --> 00:26:25,679
CSS but even though this isn't that my

00:26:23,940 --> 00:26:27,690
filters anymore the effects are visible

00:26:25,679 --> 00:26:30,210
on SVG so that's why I keep it as my

00:26:27,690 --> 00:26:32,429
final example so these are my two

00:26:30,210 --> 00:26:34,950
favorite blend modes multiply and scream

00:26:32,429 --> 00:26:36,750
and for those not yet familiar you can

00:26:34,950 --> 00:26:38,460
create that effect by setting the mixed

00:26:36,750 --> 00:26:40,649
blend mode to either multiply and screen

00:26:38,460 --> 00:26:42,509
but it's also very important that you

00:26:40,649 --> 00:26:44,730
group your circles and isolate that

00:26:42,509 --> 00:26:46,710
group otherwise you might end up seeing

00:26:44,730 --> 00:26:48,960
absolutely nothing in your screen no

00:26:46,710 --> 00:26:50,159
error messages in the console I can't

00:26:48,960 --> 00:26:54,269
figure out what the heck you're doing

00:26:50,159 --> 00:26:57,029
wrong anyway I tend to use this when I

00:26:54,269 --> 00:26:58,950
have cases of minor overlap so here we

00:26:57,029 --> 00:27:02,070
have a very busy line chart showing the

00:26:58,950 --> 00:27:05,009
average daily temperature in 2015 for 8

00:27:02,070 --> 00:27:07,169
cities but why should the greenish line

00:27:05,009 --> 00:27:09,809
of Amsterdam always lie on top just

00:27:07,169 --> 00:27:11,879
because it was plotted later they're all

00:27:09,809 --> 00:27:14,490
equally important and I could use

00:27:11,879 --> 00:27:16,529
opacities but for one I don't want a

00:27:14,490 --> 00:27:19,529
line of Amsterdam to be any less visible

00:27:16,529 --> 00:27:21,659
when it's not overlapping and even with

00:27:19,529 --> 00:27:24,000
opacities the amsterdam line released

00:27:21,659 --> 00:27:26,639
live still lies on top so instead I

00:27:24,000 --> 00:27:28,259
apply a multiply blend instead and

00:27:26,639 --> 00:27:31,230
besides having sort of an interesting

00:27:28,259 --> 00:27:32,820
touch to it it also right now at the

00:27:31,230 --> 00:27:34,620
point where things cross you really

00:27:32,820 --> 00:27:37,919
can't see which line lies on top there

00:27:34,620 --> 00:27:40,529
is a blend going on so not not one

00:27:37,919 --> 00:27:42,539
city's more important than the other you

00:27:40,529 --> 00:27:44,700
can also do this for circles but only if

00:27:42,539 --> 00:27:46,470
they're not completely overlapping so we

00:27:44,700 --> 00:27:48,480
if we have a completely random slope

00:27:46,470 --> 00:27:50,879
graph of animals where we have the same

00:27:48,480 --> 00:27:52,830
issues for example in the top left we

00:27:50,879 --> 00:27:55,379
have a purple giraffe over plotting a

00:27:52,830 --> 00:27:58,169
red deer but all the animals are equally

00:27:55,379 --> 00:28:01,200
important so again I apply a multiply

00:27:58,169 --> 00:28:03,120
blend but maybe this effect really

00:28:01,200 --> 00:28:05,429
shines best when it's used in some sort

00:28:03,120 --> 00:28:08,190
of data art or generative art kind of

00:28:05,429 --> 00:28:10,049
approach so for my final final example

00:28:08,190 --> 00:28:12,510
I'll show you something that I can look

00:28:10,049 --> 00:28:14,370
at indefinitely and

00:28:12,510 --> 00:28:15,720
the color branding really makes for a

00:28:14,370 --> 00:28:16,620
more interesting result because if I

00:28:15,720 --> 00:28:19,020
turn it off

00:28:16,620 --> 00:28:23,520
you get this and I say that definitely

00:28:19,020 --> 00:28:25,500
has less magic well I hope that some of

00:28:23,520 --> 00:28:27,630
these examples might help you someday to

00:28:25,500 --> 00:28:28,500
create an even more effective or fun and

00:28:27,630 --> 00:28:30,630
visualization

00:28:28,500 --> 00:28:33,179
I hope even more that I have inspired

00:28:30,630 --> 00:28:34,830
you to always go beyond the norm so that

00:28:33,179 --> 00:28:36,720
you have to make as few concessions to

00:28:34,830 --> 00:28:38,220
the computer as possible to try and

00:28:36,720 --> 00:28:40,890
recreate the image that you have in your

00:28:38,220 --> 00:28:44,880
mind and finally I hope that you'll go

00:28:40,890 --> 00:28:46,500
beyond the shapes so you can find way

00:28:44,880 --> 00:28:48,360
more examples and all of the underlying

00:28:46,500 --> 00:28:50,520
code so everything that you just saw in

00:28:48,360 --> 00:28:53,340
the 10 tutorials that I wrote on them on

00:28:50,520 --> 00:28:54,850
my blog and finally thank you very much

00:28:53,340 --> 00:29:01,960
for your attention

00:28:54,850 --> 00:29:01,960

YouTube URL: https://www.youtube.com/watch?v=i7hPENtqNtE


