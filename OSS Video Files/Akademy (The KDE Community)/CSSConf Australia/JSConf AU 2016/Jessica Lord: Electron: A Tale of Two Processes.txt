Title: Jessica Lord: Electron: A Tale of Two Processes
Publication date: 2017-05-19
Playlist: JSConf AU 2016
Description: 
	Thank you to Mozilla for making video recording possible.

Electron is a framework for building desktop applications with web languages. It's a powerful tool allowing you to ship one codebase to three operating systems but it's also a new, and sometimes confusing, context in which to develop.

The Electron context is that of two processes: the main and renderer. Together they are a fundamental part of every Electron app and what make Electron, well, Electron. The two share some behavior but not all and their differences are important.

After this talk it will all make sense. We'll distill the roles of each, how they work together to make the magical HTML with Node.js wonderland of Electron and cover best practices for developing and debugging.
Captions: 
	00:00:05,700 --> 00:00:19,750
whoa okay so people heard of electro

00:00:13,589 --> 00:00:22,210
okay I don't know very far away I come

00:00:19,750 --> 00:00:27,039
from the Melbourne of America Portland

00:00:22,210 --> 00:00:28,330
oh I don't even need to do this light

00:00:27,039 --> 00:00:32,290
now which is great because my talk is

00:00:28,330 --> 00:00:34,870
too long so I have talked about electron

00:00:32,290 --> 00:00:36,730
and many ways before like I had to talk

00:00:34,870 --> 00:00:38,620
about it internally at github to be like

00:00:36,730 --> 00:00:42,040
this should be a team we should work on

00:00:38,620 --> 00:00:45,549
this and I have talked about you know

00:00:42,040 --> 00:00:47,070
why what it is why it matters that it

00:00:45,549 --> 00:00:49,720
does what it does and then there's

00:00:47,070 --> 00:00:52,089
talking about designing with electron

00:00:49,720 --> 00:00:57,309
which is a whole thing on its own and

00:00:52,089 --> 00:00:59,920
then developing on electron and a lot of

00:00:57,309 --> 00:01:02,589
this has been geared towards speaking to

00:00:59,920 --> 00:01:04,809
people coming from no development

00:01:02,589 --> 00:01:07,260
backgrounds and people coming from front

00:01:04,809 --> 00:01:10,119
end web development backgrounds and so

00:01:07,260 --> 00:01:13,119
that's sort of the space I'm into and so

00:01:10,119 --> 00:01:16,600
I know how to talk to them and and I

00:01:13,119 --> 00:01:18,850
would talk in that way and I what I

00:01:16,600 --> 00:01:20,380
hadn't thought for a while about people

00:01:18,850 --> 00:01:23,759
who aren't coming from node people who

00:01:20,380 --> 00:01:26,649
aren't coming from web backgrounds and

00:01:23,759 --> 00:01:28,179
so a few months ago there were some

00:01:26,649 --> 00:01:30,009
other get hovers that were starting to

00:01:28,179 --> 00:01:31,479
work on electron you know and I'd done

00:01:30,009 --> 00:01:33,009
all this electron is the best you should

00:01:31,479 --> 00:01:35,409
do electronic so fun it's so easy you

00:01:33,009 --> 00:01:37,210
should do it and they were running into

00:01:35,409 --> 00:01:40,539
problems and I was like well how is that

00:01:37,210 --> 00:01:42,880
possible what's gone why and then I was

00:01:40,539 --> 00:01:45,880
like have you built web pages before and

00:01:42,880 --> 00:01:48,549
they're like no and have you worked with

00:01:45,880 --> 00:01:52,329
note before no definitely not and like

00:01:48,549 --> 00:01:56,740
oh I don't think there's anything out

00:01:52,329 --> 00:01:58,889
there for who and that's all crappy and

00:01:56,740 --> 00:02:03,539
I felt like everybody deserves

00:01:58,889 --> 00:02:06,039
documentation and so that spurred me on

00:02:03,539 --> 00:02:09,149
sort of a personal challenge to do this

00:02:06,039 --> 00:02:12,850
site which is essential electron which

00:02:09,149 --> 00:02:15,670
was a challenge or easily made the

00:02:12,850 --> 00:02:17,490
challenge for myself to try and distill

00:02:15,670 --> 00:02:19,590
electron into

00:02:17,490 --> 00:02:23,700
the fewest amount of words as possible

00:02:19,590 --> 00:02:25,200
and then especially the fused uses of

00:02:23,700 --> 00:02:27,270
jargon and if there were words I

00:02:25,200 --> 00:02:29,430
couldn't avoid using like JavaScript I

00:02:27,270 --> 00:02:32,610
wanted to define those things and define

00:02:29,430 --> 00:02:37,350
those things in simple terms and provide

00:02:32,610 --> 00:02:39,120
links to learn more about that so I just

00:02:37,350 --> 00:02:41,280
wanted to say maybe this is something

00:02:39,120 --> 00:02:43,110
that we should think about for other

00:02:41,280 --> 00:02:46,740
kinds of projects it was really it

00:02:43,110 --> 00:02:48,960
really was a personal challenge to force

00:02:46,740 --> 00:02:50,640
myself to step out of my bubble and the

00:02:48,960 --> 00:02:53,130
things that I assume that people know

00:02:50,640 --> 00:02:54,780
because these other people there were

00:02:53,130 --> 00:02:57,180
also engineers you know they just hadn't

00:02:54,780 --> 00:03:00,300
come from a web and node background and

00:02:57,180 --> 00:03:02,010
so everyone in this room has a different

00:03:00,300 --> 00:03:06,090
background in different experiences too

00:03:02,010 --> 00:03:09,090
so if this talk is total crap to you you

00:03:06,090 --> 00:03:11,270
might want to go to a central electron

00:03:09,090 --> 00:03:14,700
and I hope that it can be helpful but

00:03:11,270 --> 00:03:16,770
all right so this talk it's not about

00:03:14,700 --> 00:03:19,620
designing electron and it's not

00:03:16,770 --> 00:03:22,560
necessarily about like one two three get

00:03:19,620 --> 00:03:25,470
your electron app started it's more

00:03:22,560 --> 00:03:26,790
about how electrons electrons because

00:03:25,470 --> 00:03:28,890
the more I've been involved with

00:03:26,790 --> 00:03:32,310
electron the more I've gotten excited

00:03:28,890 --> 00:03:34,380
about learning how actually electron

00:03:32,310 --> 00:03:36,420
makes the development experience it does

00:03:34,380 --> 00:03:39,690
possible because developing with

00:03:36,420 --> 00:03:41,850
electrons can be fun and it can be easy

00:03:39,690 --> 00:03:44,250
and there's all this stuff under the

00:03:41,850 --> 00:03:48,000
hood that's enabling that and so that's

00:03:44,250 --> 00:03:50,490
what this talk is about but first we can

00:03:48,000 --> 00:03:51,810
start at the beginning electron is an

00:03:50,490 --> 00:03:54,210
open source framework for building

00:03:51,810 --> 00:03:56,310
desktop apps with web technology and

00:03:54,210 --> 00:03:58,080
when I say desktop apps I mean

00:03:56,310 --> 00:04:01,470
applications that work on Mac Windows

00:03:58,080 --> 00:04:03,960
and Linux and also arm and with web

00:04:01,470 --> 00:04:08,160
technology i'm talking about HTML CSS

00:04:03,960 --> 00:04:10,860
and JavaScript and you might already be

00:04:08,160 --> 00:04:12,360
well we already know everyone a lot of

00:04:10,860 --> 00:04:15,270
people know about electrons so that's

00:04:12,360 --> 00:04:17,280
great you are probably using electron

00:04:15,270 --> 00:04:19,500
act maybe you're using atom which is the

00:04:17,280 --> 00:04:23,130
text editor from github the very first

00:04:19,500 --> 00:04:25,740
thing built on electron and slack is on

00:04:23,130 --> 00:04:28,500
electron the brave browser Visual Studio

00:04:25,740 --> 00:04:29,020
code from Microsoft is another text

00:04:28,500 --> 00:04:32,860
editor

00:04:29,020 --> 00:04:34,690
our WordPress whatsapp there's a ton of

00:04:32,860 --> 00:04:38,199
cool stuff happening on electron and

00:04:34,690 --> 00:04:40,569
then there are over 220 apps listed on

00:04:38,199 --> 00:04:43,930
the website right now from from small

00:04:40,569 --> 00:04:47,050
startups to individual developers some

00:04:43,930 --> 00:04:52,060
of the projects mentioned in a meals

00:04:47,050 --> 00:04:54,729
talk earlier have electron apps also so

00:04:52,060 --> 00:04:56,740
typically native apps like if you think

00:04:54,729 --> 00:04:58,150
about your mail app your calendar app

00:04:56,740 --> 00:05:00,819
that came with your computer when you

00:04:58,150 --> 00:05:03,069
got it we're written in the native

00:05:00,819 --> 00:05:05,889
languages for that operating system and

00:05:03,069 --> 00:05:07,569
if you were a project or a company and

00:05:05,889 --> 00:05:09,310
you wanted to build a desktop app and

00:05:07,569 --> 00:05:12,400
you wanted it to work on multiple

00:05:09,310 --> 00:05:14,830
operating systems that means building

00:05:12,400 --> 00:05:16,479
those teams that use those languages a

00:05:14,830 --> 00:05:18,729
lot of times it means separate code base

00:05:16,479 --> 00:05:20,110
and a lot of times it means maybe you

00:05:18,729 --> 00:05:23,159
actually just don't ship to all those

00:05:20,110 --> 00:05:25,659
platforms but over the last few years

00:05:23,159 --> 00:05:29,110
the browser have gotten really awesome

00:05:25,659 --> 00:05:31,690
and JavaScript and the web languages are

00:05:29,110 --> 00:05:33,699
really ubiquitous in many ways and so

00:05:31,690 --> 00:05:36,280
people have started trying to combine

00:05:33,699 --> 00:05:39,219
parts of browsers to enable building

00:05:36,280 --> 00:05:42,430
desktop apps and so chromium embedded

00:05:39,219 --> 00:05:43,509
framework is one here up there and

00:05:42,430 --> 00:05:45,849
they've all done this week kind of

00:05:43,509 --> 00:05:48,190
different ways and then there's n WG f

00:05:45,849 --> 00:05:50,139
is another there are a few more but this

00:05:48,190 --> 00:05:52,479
is the group of technologies that

00:05:50,139 --> 00:05:54,729
electron belongs in technologies that

00:05:52,479 --> 00:05:57,849
are using all our parts of web browsers

00:05:54,729 --> 00:06:02,110
to let you build desktop apps with web

00:05:57,849 --> 00:06:04,900
languages for electron-electron started

00:06:02,110 --> 00:06:07,960
because it was built for adam github

00:06:04,900 --> 00:06:10,240
text editor and the adam team way back

00:06:07,960 --> 00:06:11,889
when had tried a bunch of the existing

00:06:10,240 --> 00:06:15,029
things but none of them were really as

00:06:11,889 --> 00:06:16,900
fast as they needed or had node

00:06:15,029 --> 00:06:20,319
integrated in the way that they needed

00:06:16,900 --> 00:06:23,020
and so get how contracted a change now

00:06:20,319 --> 00:06:25,270
who's amazing he was actually working on

00:06:23,020 --> 00:06:27,219
n wjs at the time and get help

00:06:25,270 --> 00:06:30,039
contracted and then later hired him and

00:06:27,219 --> 00:06:32,380
he built out electrons for adam and it

00:06:30,039 --> 00:06:35,800
really was for a long time just a

00:06:32,380 --> 00:06:39,130
dependency of adam and when Adam became

00:06:35,800 --> 00:06:40,899
open sourced in 2014 everything got open

00:06:39,130 --> 00:06:42,460
source with it so that included electron

00:06:40,899 --> 00:06:45,550
but it was called Adams

00:06:42,460 --> 00:06:48,039
at the time and it just kind of was

00:06:45,550 --> 00:06:50,500
hidden there in the Oregon github and

00:06:48,039 --> 00:06:52,630
there you know I had no website no one

00:06:50,500 --> 00:06:54,580
was talking about it but slowly people

00:06:52,630 --> 00:06:56,949
were starting to figure out that

00:06:54,580 --> 00:06:59,590
actually it was a really powerful tool

00:06:56,949 --> 00:07:02,590
and it was really Microsoft building

00:06:59,590 --> 00:07:05,470
Visual Studio code and they were going

00:07:02,590 --> 00:07:07,690
to lunch that made us realize like those

00:07:05,470 --> 00:07:09,580
of us on the atom team that we needed it

00:07:07,690 --> 00:07:12,400
to have a name it just doesn't need to

00:07:09,580 --> 00:07:14,710
be named Adam shell and so the first

00:07:12,400 --> 00:07:16,930
step and electron was it got its own

00:07:14,710 --> 00:07:20,800
name thank you Microsoft for building a

00:07:16,930 --> 00:07:22,630
text editor and then that's when I

00:07:20,800 --> 00:07:26,460
started pushing to build electron into

00:07:22,630 --> 00:07:28,960
his own team moving it out of Adam and

00:07:26,460 --> 00:07:32,410
really putting a lot more resources into

00:07:28,960 --> 00:07:35,169
it and so in May of 2016 this year we

00:07:32,410 --> 00:07:38,370
launched the one point O of electron and

00:07:35,169 --> 00:07:40,539
so that was awesome and there's a lot of

00:07:38,370 --> 00:07:42,940
there's a lot of work in that and it was

00:07:40,539 --> 00:07:45,940
it was really good to get electron to a

00:07:42,940 --> 00:07:47,860
stable place and so electron is

00:07:45,940 --> 00:07:50,199
maintained by a small team at github and

00:07:47,860 --> 00:07:53,110
by small which I know is relative places

00:07:50,199 --> 00:07:55,659
I mean like for people and then many

00:07:53,110 --> 00:07:59,169
other contributors because electron is a

00:07:55,659 --> 00:08:01,810
unique project in that it's almost this

00:07:59,169 --> 00:08:05,710
accidental project that evolved and got

00:08:01,810 --> 00:08:07,479
really popular and it's it's driven more

00:08:05,710 --> 00:08:11,080
by the community than any other project

00:08:07,479 --> 00:08:13,300
really and so a lot of what's going on

00:08:11,080 --> 00:08:15,039
in electron is being influenced by the

00:08:13,300 --> 00:08:17,229
other companies and the other places

00:08:15,039 --> 00:08:18,969
that are building on electron and so you

00:08:17,229 --> 00:08:22,240
know flak is contributing a lot of stuff

00:08:18,969 --> 00:08:24,370
upstream and it's a really really cool

00:08:22,240 --> 00:08:28,270
project to be involved in for that

00:08:24,370 --> 00:08:30,729
reason all right so that's how electron

00:08:28,270 --> 00:08:32,770
came to be but what electron is actually

00:08:30,729 --> 00:08:36,279
made of on the inside can be distilled

00:08:32,770 --> 00:08:37,959
into these three parts oh yeah so even

00:08:36,279 --> 00:08:40,450
though electron allows you to write

00:08:37,959 --> 00:08:43,300
desktop apps with HTML and CSS and

00:08:40,450 --> 00:08:45,520
JavaScript electron itself is mostly C++

00:08:43,300 --> 00:08:48,240
and it's combining these three things

00:08:45,520 --> 00:08:51,220
it's combining chromium for web pages

00:08:48,240 --> 00:08:53,740
node for file systems and networks and

00:08:51,220 --> 00:08:56,530
then it has a set of native API for

00:08:53,740 --> 00:08:59,060
desktop integration

00:08:56,530 --> 00:09:02,300
chromium is the open-source core of

00:08:59,060 --> 00:09:04,760
google chrome and that's what electron

00:09:02,300 --> 00:09:06,860
is using to build upon but it's not

00:09:04,760 --> 00:09:09,080
using all of Google Chrome which is

00:09:06,860 --> 00:09:10,970
something that is special about electron

00:09:09,080 --> 00:09:13,790
it's just using the part of chromium

00:09:10,970 --> 00:09:15,530
that knows how to render web pages and

00:09:13,790 --> 00:09:18,910
that makes electron a little bit smaller

00:09:15,530 --> 00:09:21,920
a little bit easier to update and

00:09:18,910 --> 00:09:24,650
electron has this really useful library

00:09:21,920 --> 00:09:28,040
called bright trip oh right ray that

00:09:24,650 --> 00:09:30,560
lets you build applications with chrome

00:09:28,040 --> 00:09:35,030
because I don't know if anyone here is

00:09:30,560 --> 00:09:36,590
try to compile chrome but it's not

00:09:35,030 --> 00:09:38,390
something you want all of your users to

00:09:36,590 --> 00:09:39,800
have to do and you don't want people to

00:09:38,390 --> 00:09:42,800
have to do when they're developing and

00:09:39,800 --> 00:09:45,350
so electron has made that a whole lot

00:09:42,800 --> 00:09:49,370
easier by not having to have you who

00:09:45,350 --> 00:09:51,800
compile chrome and so because electron

00:09:49,370 --> 00:09:53,360
is built on top of chrome you're getting

00:09:51,800 --> 00:09:56,240
the latest things that are shipping in

00:09:53,360 --> 00:09:58,970
chrome and electron updates with stable

00:09:56,240 --> 00:10:00,380
releases of chrome and so when you're

00:09:58,970 --> 00:10:02,660
designing your electronics you're

00:10:00,380 --> 00:10:04,370
designing for one browser and you're

00:10:02,660 --> 00:10:07,190
using everything that is shipping in the

00:10:04,370 --> 00:10:10,190
latest chrome you can go to can I use

00:10:07,190 --> 00:10:11,840
calm and if you can use it you can use

00:10:10,190 --> 00:10:14,330
it in your electron app and it will work

00:10:11,840 --> 00:10:17,150
across all the platforms so CSS

00:10:14,330 --> 00:10:19,040
properties and shadow DOM and all the

00:10:17,150 --> 00:10:20,990
things that are coming out you can use

00:10:19,040 --> 00:10:23,750
of course you get the Dom that you know

00:10:20,990 --> 00:10:26,240
and love and then you also get devtools

00:10:23,750 --> 00:10:28,850
so if you come from a web development

00:10:26,240 --> 00:10:30,530
background and your use to debugging and

00:10:28,850 --> 00:10:31,700
designing your page with devtools you

00:10:30,530 --> 00:10:33,850
can do the same thing when you're

00:10:31,700 --> 00:10:36,890
building your electron app with devtools

00:10:33,850 --> 00:10:39,140
and then you get popular dev tools

00:10:36,890 --> 00:10:42,590
extensions we're popular there is

00:10:39,140 --> 00:10:47,210
because not all dev tools extensions are

00:10:42,590 --> 00:10:49,280
there but one for like react and things

00:10:47,210 --> 00:10:51,230
like that are supported and so if there

00:10:49,280 --> 00:10:54,790
is a framework that you like using it

00:10:51,230 --> 00:10:58,070
probably has electrons devtools support

00:10:54,790 --> 00:11:00,520
all right and then I electron has node

00:10:58,070 --> 00:11:03,020
all of node is built into electron

00:11:00,520 --> 00:11:06,230
electrons using it as a shared library

00:11:03,020 --> 00:11:07,010
and you can use it seamlessly throughout

00:11:06,230 --> 00:11:09,770
your app

00:11:07,010 --> 00:11:11,840
and having node means of course you get

00:11:09,770 --> 00:11:13,190
the full node API everything that you

00:11:11,840 --> 00:11:15,920
can do a node you can do in your

00:11:13,190 --> 00:11:17,530
electron app you can use all the code

00:11:15,920 --> 00:11:21,140
that everyone else is written in the

00:11:17,530 --> 00:11:22,100
300,000 plus and PM modules and if

00:11:21,140 --> 00:11:24,800
there's something you can't do in

00:11:22,100 --> 00:11:26,620
javascript or you want to do in a low

00:11:24,800 --> 00:11:29,560
level you can build or use existing

00:11:26,620 --> 00:11:34,010
native modules in your electron app too

00:11:29,560 --> 00:11:36,860
and then finally electron has a set of

00:11:34,010 --> 00:11:39,890
native API for integrating your app into

00:11:36,860 --> 00:11:41,810
the desktop because electrons not it's

00:11:39,890 --> 00:11:44,930
not a shim around a webview it's not

00:11:41,810 --> 00:11:48,230
just you know showing you a web page

00:11:44,930 --> 00:11:50,450
it's just a set of API is to really let

00:11:48,230 --> 00:11:52,580
you build a native app that works and

00:11:50,450 --> 00:11:55,810
integrates with the operating system

00:11:52,580 --> 00:11:58,930
like a native app so doing things like

00:11:55,810 --> 00:12:02,180
opening window changing the style

00:11:58,930 --> 00:12:04,610
creating protocols it's really up to you

00:12:02,180 --> 00:12:08,240
to integrate as much or as little as you

00:12:04,610 --> 00:12:14,930
want okay with anybody wondering about

00:12:08,240 --> 00:12:17,030
v8 ok so both chromium end node use v8

00:12:14,930 --> 00:12:20,420
as their javascript engine and electrons

00:12:17,030 --> 00:12:22,070
not using two v8 because in electron

00:12:20,420 --> 00:12:26,540
chromium and node are actually sharing

00:12:22,070 --> 00:12:28,280
one copy of v8 you can set node to use a

00:12:26,540 --> 00:12:30,590
different v8 than it normally comes with

00:12:28,280 --> 00:12:33,560
and that's what elects one does and then

00:12:30,590 --> 00:12:35,330
electron has chrome sorry has node use

00:12:33,560 --> 00:12:39,170
the v8 that shipping with that chrome

00:12:35,330 --> 00:12:42,140
and so a lot of the times that just

00:12:39,170 --> 00:12:45,290
works chrome is moving faster on v8 the

00:12:42,140 --> 00:12:47,870
node is and so it's not always a matchup

00:12:45,290 --> 00:12:51,020
and sometimes it means passing note but

00:12:47,870 --> 00:12:52,730
a lot of times not but this is how an

00:12:51,020 --> 00:12:55,430
electron they're just sharing one v8 and

00:12:52,730 --> 00:12:57,230
so because you're using the latest v8 in

00:12:55,430 --> 00:12:59,570
all of your electron apps you also get

00:12:57,230 --> 00:13:03,320
things like over ninety percent of es6

00:12:59,570 --> 00:13:05,570
so if you love fat arrows go and live

00:13:03,320 --> 00:13:08,390
your best life and right fat arrows and

00:13:05,570 --> 00:13:10,580
you don't need to pre compile and do all

00:13:08,390 --> 00:13:14,990
of that stuff you can probably just

00:13:10,580 --> 00:13:17,930
write it as it is so to recap you have

00:13:14,990 --> 00:13:19,490
chrome for drawing the web pages knows

00:13:17,930 --> 00:13:20,570
her file systems and then they're

00:13:19,490 --> 00:13:23,450
sharing a single

00:13:20,570 --> 00:13:27,290
which is chrome v8 and then you've got

00:13:23,450 --> 00:13:29,470
the native api's we can take it further

00:13:27,290 --> 00:13:32,840
[Music]

00:13:29,470 --> 00:13:34,040
but Rick this is the crazy part where

00:13:32,840 --> 00:13:36,020
I'm like this is what I'm going to talk

00:13:34,040 --> 00:13:39,380
about in this talk I hope people are

00:13:36,020 --> 00:13:43,190
excited about that so i just found this

00:13:39,380 --> 00:13:45,290
exciting chrome and note both have their

00:13:43,190 --> 00:13:47,030
own event loops and there are different

00:13:45,290 --> 00:13:49,490
projects that have tried to do this in

00:13:47,030 --> 00:13:52,340
various different ways to make two event

00:13:49,490 --> 00:13:54,610
loops happen sometimes they try to make

00:13:52,340 --> 00:13:57,650
one use the other ones event loop like

00:13:54,610 --> 00:14:01,880
forcing chromium to use lebih v which is

00:13:57,650 --> 00:14:04,040
nodes event loop sometimes there's a

00:14:01,880 --> 00:14:05,420
timer that's just constantly checking is

00:14:04,040 --> 00:14:08,570
their new of it is their new of it is

00:14:05,420 --> 00:14:10,400
their new of it and that brings up a lot

00:14:08,570 --> 00:14:12,410
of resources and can make an appt really

00:14:10,400 --> 00:14:15,020
slow and so this is a challenge right

00:14:12,410 --> 00:14:17,900
for building a framework that's going to

00:14:15,020 --> 00:14:20,450
combine node and chrome and so what

00:14:17,900 --> 00:14:23,330
electron does to figure this out is it

00:14:20,450 --> 00:14:26,960
creates a new thread and this new thread

00:14:23,330 --> 00:14:30,470
let's chromium's message loop know when

00:14:26,960 --> 00:14:32,630
there is a new event in lib EV and we're

00:14:30,470 --> 00:14:35,450
going to walk through it so when

00:14:32,630 --> 00:14:37,310
electron boots up its its chromium at

00:14:35,450 --> 00:14:39,350
the core and for chromium the starting

00:14:37,310 --> 00:14:41,690
with its message loop and then it's

00:14:39,350 --> 00:14:45,560
loading up node as a shared library and

00:14:41,690 --> 00:14:47,600
note is using a lib EV but a newish

00:14:45,560 --> 00:14:50,150
thing in libya v is that there's an

00:14:47,600 --> 00:14:52,280
exposed file descriptor and libya v is

00:14:50,150 --> 00:14:54,830
using this file descriptor to know when

00:14:52,280 --> 00:14:56,770
there are new events process but you can

00:14:54,830 --> 00:14:59,900
actually listen to that file descriptor

00:14:56,770 --> 00:15:02,390
yourself and so electron has a thread

00:14:59,900 --> 00:15:04,250
sitting in the middle that is also

00:15:02,390 --> 00:15:08,060
listening to the file descriptor in the

00:15:04,250 --> 00:15:10,760
same way that libya vitas and so when

00:15:08,060 --> 00:15:14,120
there's a new event electrons thread

00:15:10,760 --> 00:15:17,240
knows about it and then it tells the

00:15:14,120 --> 00:15:21,200
chromium message loop to stop empty out

00:15:17,240 --> 00:15:23,300
the Libya v cool and then everything

00:15:21,200 --> 00:15:26,090
starts back from the beginning and this

00:15:23,300 --> 00:15:28,940
is how chrome is able to or sorry

00:15:26,090 --> 00:15:31,340
electron is able to make using node

00:15:28,940 --> 00:15:33,710
really seamless make things really fast

00:15:31,340 --> 00:15:36,350
you don't have something else

00:15:33,710 --> 00:15:38,840
weighing down electrons and so electrons

00:15:36,350 --> 00:15:40,880
you know a lot of its speed really just

00:15:38,840 --> 00:15:42,890
comes down to how fast chrome is and

00:15:40,880 --> 00:15:45,890
luckily Google has a lot of people on

00:15:42,890 --> 00:15:47,660
that but the important part of all of

00:15:45,890 --> 00:15:51,170
this is that you get node you get node

00:15:47,660 --> 00:15:55,850
totally seamlessly and easily inside of

00:15:51,170 --> 00:15:57,680
electron okay so because electron is

00:15:55,850 --> 00:16:00,200
built on top of chromium and chromium

00:15:57,680 --> 00:16:02,210
has a multi-process architecture it has

00:16:00,200 --> 00:16:04,450
a multi-process architecture so that all

00:16:02,210 --> 00:16:06,830
your tabs don't crash the other tabs

00:16:04,450 --> 00:16:09,680
electron inherits this multi-process

00:16:06,830 --> 00:16:13,610
architecture and this is the title track

00:16:09,680 --> 00:16:15,410
there are two processes an electron it

00:16:13,610 --> 00:16:18,140
has the main process and the renderer

00:16:15,410 --> 00:16:21,110
process and the renderer process

00:16:18,140 --> 00:16:22,610
controls the apps lifecycle it is the

00:16:21,110 --> 00:16:24,860
place where you start your app where you

00:16:22,610 --> 00:16:27,320
quit your app and it does all of the

00:16:24,860 --> 00:16:29,480
operating system intensive things like

00:16:27,320 --> 00:16:31,730
opening dialogue windows and things like

00:16:29,480 --> 00:16:33,590
that things that might things that you

00:16:31,730 --> 00:16:34,670
don't want to happen in another process

00:16:33,590 --> 00:16:37,550
where people are actually looking at

00:16:34,670 --> 00:16:40,190
your UI because you don't want to slow

00:16:37,550 --> 00:16:42,860
it down and then the main process also

00:16:40,190 --> 00:16:45,770
creates all of the renderer processes

00:16:42,860 --> 00:16:47,750
and then the renderer process is all of

00:16:45,770 --> 00:16:49,670
your windows in your electron app there

00:16:47,750 --> 00:16:51,530
the browser windows it's the part of

00:16:49,670 --> 00:16:54,140
chrome that just knows how to draw a web

00:16:51,530 --> 00:16:56,810
page and you can have multiple renderer

00:16:54,140 --> 00:16:58,640
processes they can be invisible and I'll

00:16:56,810 --> 00:17:01,580
talk and a little bit about why you

00:16:58,640 --> 00:17:03,380
would want an invisible thing and each

00:17:01,580 --> 00:17:05,870
of them is a separate process so just

00:17:03,380 --> 00:17:08,390
like the chrome tabs when one tab

00:17:05,870 --> 00:17:10,790
crashes it won't crash the other you

00:17:08,390 --> 00:17:14,839
have that kind of functionality in

00:17:10,790 --> 00:17:16,760
electron to in your main process your

00:17:14,839 --> 00:17:18,740
main processes JavaScript files it's

00:17:16,760 --> 00:17:21,290
just like writing node and of course you

00:17:18,740 --> 00:17:24,620
have all of node and then you're making

00:17:21,290 --> 00:17:26,630
use of the electron api's that are for

00:17:24,620 --> 00:17:29,000
the main process and I will talk about

00:17:26,630 --> 00:17:30,740
that and then in the renderer process

00:17:29,000 --> 00:17:33,950
just like when you're building websites

00:17:30,740 --> 00:17:38,960
your files are HTML files and jf files

00:17:33,950 --> 00:17:42,920
Oh CSS files to and you bought all of

00:17:38,960 --> 00:17:44,900
node and you've got the Dom API is the

00:17:42,920 --> 00:17:45,990
dev tools and then you've got all the

00:17:44,900 --> 00:17:50,070
electron module

00:17:45,990 --> 00:17:52,679
for the renderer process you can kind of

00:17:50,070 --> 00:17:55,200
think of these two processes like chrome

00:17:52,679 --> 00:17:56,580
when you think old it's like you can

00:17:55,200 --> 00:18:02,429
imagine it this way because this is how

00:17:56,580 --> 00:18:04,950
it actually is thumbs up why so if you

00:18:02,429 --> 00:18:06,750
have chrome open and you have no tabs

00:18:04,950 --> 00:18:08,670
open no windows but you've still got

00:18:06,750 --> 00:18:10,350
your menu bar at the top that's like

00:18:08,670 --> 00:18:11,940
your main process it's the place where

00:18:10,350 --> 00:18:13,800
you are quitting the app and it's the

00:18:11,940 --> 00:18:17,280
place where you can click to open a new

00:18:13,800 --> 00:18:20,220
window and then each of your new windows

00:18:17,280 --> 00:18:21,990
is a new renderer process and then of

00:18:20,220 --> 00:18:24,750
course in chrome you can create multiple

00:18:21,990 --> 00:18:27,150
tabs and each of those is its own new

00:18:24,750 --> 00:18:31,020
renderer process and it's the main

00:18:27,150 --> 00:18:32,610
process creating these but of course you

00:18:31,020 --> 00:18:35,880
might not be making a browser and

00:18:32,610 --> 00:18:39,000
electrons some people are but you might

00:18:35,880 --> 00:18:41,429
have like a menu bar app and so you can

00:18:39,000 --> 00:18:42,929
think of the little icon at the top as

00:18:41,429 --> 00:18:44,880
your main process that's what's

00:18:42,929 --> 00:18:46,890
controlling the lifecycle of your app

00:18:44,880 --> 00:18:48,990
and then the window that people actually

00:18:46,890 --> 00:18:52,559
see when they click on your menu bar app

00:18:48,990 --> 00:18:55,679
that's your renderer process if you have

00:18:52,559 --> 00:18:59,309
a more traditional desktop app that has

00:18:55,679 --> 00:19:02,070
main windows big windows on the screen

00:18:59,309 --> 00:19:04,679
you again your mini bars like your main

00:19:02,070 --> 00:19:06,360
process and then the windows that the

00:19:04,679 --> 00:19:09,780
users see are each of your renderer

00:19:06,360 --> 00:19:11,220
processes so if you are making a mail

00:19:09,780 --> 00:19:13,800
app you know you might have one big

00:19:11,220 --> 00:19:15,600
window that is for the inbox but then

00:19:13,800 --> 00:19:19,170
open new smaller windows for people who

00:19:15,600 --> 00:19:22,410
to compose messages in and then you can

00:19:19,170 --> 00:19:24,059
create a hidden renderer process to just

00:19:22,410 --> 00:19:28,559
you just create a new browser window and

00:19:24,059 --> 00:19:30,179
set it to show hidden and you can

00:19:28,559 --> 00:19:31,679
actually just farm off JavaScript to

00:19:30,179 --> 00:19:33,990
this so places where you might normally

00:19:31,679 --> 00:19:37,290
use a web worker or something you can

00:19:33,990 --> 00:19:39,660
just create a new invisible renderer

00:19:37,290 --> 00:19:42,480
process so that the JavaScript running

00:19:39,660 --> 00:19:44,400
in that is not affecting anything

00:19:42,480 --> 00:19:46,160
loading in the actual visual windows

00:19:44,400 --> 00:19:49,740
that you have people looking at and

00:19:46,160 --> 00:19:52,230
interacting with and finally you can

00:19:49,740 --> 00:19:55,260
also have the main process create a

00:19:52,230 --> 00:19:57,150
renderer process window and then in that

00:19:55,260 --> 00:19:58,990
renderer process you can use a web view

00:19:57,150 --> 00:20:00,850
which allows you to have a

00:19:58,990 --> 00:20:03,309
journal content embedded in a renderer

00:20:00,850 --> 00:20:07,090
process that's in its own separate

00:20:03,309 --> 00:20:09,100
process did that make sense yes this is

00:20:07,090 --> 00:20:12,040
what slack does so that you can't type

00:20:09,100 --> 00:20:16,270
in crazy code and blow up computers it

00:20:12,040 --> 00:20:21,280
is isolated sandbox into its own process

00:20:16,270 --> 00:20:24,880
within a rendering process so the

00:20:21,280 --> 00:20:27,460
electron API and these processes the

00:20:24,880 --> 00:20:31,120
electron API is grouped into modules and

00:20:27,460 --> 00:20:34,809
each module is associated with a prop

00:20:31,120 --> 00:20:37,780
with a process and it makes sense both

00:20:34,809 --> 00:20:40,720
of the time so the API is for creating

00:20:37,780 --> 00:20:42,790
new windows are called modules called

00:20:40,720 --> 00:20:44,800
the browser window module and like we

00:20:42,790 --> 00:20:46,150
said the main process is creating new

00:20:44,800 --> 00:20:48,400
windows creating those renderer

00:20:46,150 --> 00:20:52,179
processes throughout the main process

00:20:48,400 --> 00:20:54,130
module but some of them work in both so

00:20:52,179 --> 00:20:56,590
for instance the module for using the

00:20:54,130 --> 00:20:58,690
system clipboard to copy and paste you

00:20:56,590 --> 00:21:01,840
can use that in both of the processes in

00:20:58,690 --> 00:21:04,179
the documentation on the API page

00:21:01,840 --> 00:21:06,610
there's a list piece aside each module

00:21:04,179 --> 00:21:08,620
telling you what process it belongs to

00:21:06,610 --> 00:21:11,320
you and once you're on the page for that

00:21:08,620 --> 00:21:15,640
module you can also see that it's a

00:21:11,320 --> 00:21:16,960
renderer or a main process module and so

00:21:15,640 --> 00:21:19,000
some of these modules are going to be

00:21:16,960 --> 00:21:21,010
core to like ninety nine percent of all

00:21:19,000 --> 00:21:23,590
electronics right most people are going

00:21:21,010 --> 00:21:25,450
to create some window for users to see

00:21:23,590 --> 00:21:28,030
so probably everyone's going to be using

00:21:25,450 --> 00:21:30,250
browser window but everyone might not

00:21:28,030 --> 00:21:31,840
use the system preferences module which

00:21:30,250 --> 00:21:34,059
will let you check to see what color

00:21:31,840 --> 00:21:37,500
theme on windows people are using or if

00:21:34,059 --> 00:21:40,360
on Mac their menu bar is darker light

00:21:37,500 --> 00:21:43,510
it's up to you and this is like I said

00:21:40,360 --> 00:21:46,390
that you can really kind of go as far to

00:21:43,510 --> 00:21:49,840
integrating as you want but another

00:21:46,390 --> 00:21:53,500
common module will be the IPC and IPC

00:21:49,840 --> 00:21:55,179
renderer modules because these are the

00:21:53,500 --> 00:21:57,460
ways that you communicate between the

00:21:55,179 --> 00:21:59,770
processes so we talked about how the

00:21:57,460 --> 00:22:02,220
main process creates the new renderer

00:21:59,770 --> 00:22:04,720
processes but we haven't talked about

00:22:02,220 --> 00:22:07,120
how you can do anything between them

00:22:04,720 --> 00:22:09,220
right because if the main process one is

00:22:07,120 --> 00:22:11,430
the one that can open up new dialogues

00:22:09,220 --> 00:22:13,350
and people are actually interacting with

00:22:11,430 --> 00:22:15,300
your window and the renderer process how

00:22:13,350 --> 00:22:19,110
does the rendering process tell the main

00:22:15,300 --> 00:22:21,780
process I need a dialog window stat and

00:22:19,110 --> 00:22:23,760
so that's what I PC modules are for and

00:22:21,780 --> 00:22:27,030
so there's an IPC module for the main

00:22:23,760 --> 00:22:29,520
process and one for the renderer process

00:22:27,030 --> 00:22:31,740
and so this is an example of how you

00:22:29,520 --> 00:22:36,390
would open a dialog window from the

00:22:31,740 --> 00:22:39,410
renderer process and so in your script

00:22:36,390 --> 00:22:42,570
tag in your HTML you can use node and

00:22:39,410 --> 00:22:45,630
you would require electron and the IPC

00:22:42,570 --> 00:22:47,670
renderer so the IPC model for the render

00:22:45,630 --> 00:22:49,470
process and then you would send a

00:22:47,670 --> 00:22:51,870
message which you can name anything you

00:22:49,470 --> 00:22:53,700
want that you give it a string a channel

00:22:51,870 --> 00:22:56,040
name and then you're listening for that

00:22:53,700 --> 00:22:58,320
in the main process so when you make

00:22:56,040 --> 00:23:00,180
this happen in your renderer process the

00:22:58,320 --> 00:23:02,250
main process is listening and it knows

00:23:00,180 --> 00:23:03,870
because it's using the dialogue module

00:23:02,250 --> 00:23:06,840
which it can use because it's the main

00:23:03,870 --> 00:23:09,180
process and then it runs the dialogue

00:23:06,840 --> 00:23:10,850
show open air box and so that's how you

00:23:09,180 --> 00:23:14,570
would trigger something happening that

00:23:10,850 --> 00:23:17,340
needed to happen in the main process

00:23:14,570 --> 00:23:20,460
there's another module called remote

00:23:17,340 --> 00:23:23,100
that lets you use the main process from

00:23:20,460 --> 00:23:27,420
the renderer process and in my head get

00:23:23,100 --> 00:23:29,280
ready it's like urine it's a box with

00:23:27,420 --> 00:23:30,660
rubber gloves and then you can touch the

00:23:29,280 --> 00:23:37,140
things that are inside the box but

00:23:30,660 --> 00:23:41,160
you're still not in the box I couldn't

00:23:37,140 --> 00:23:42,450
think of anything else and so unless you

00:23:41,160 --> 00:23:43,980
have the feeling of being in the main

00:23:42,450 --> 00:23:46,920
process without actually being in the

00:23:43,980 --> 00:23:49,980
main process so here's the same example

00:23:46,920 --> 00:23:52,800
as before but using the dialogue or

00:23:49,980 --> 00:23:55,950
sorry but using remote so you can see

00:23:52,800 --> 00:23:58,020
it's almost the same as we would write

00:23:55,950 --> 00:24:01,050
if we were in the main process but

00:23:58,020 --> 00:24:03,690
instead of requiring electron dot

00:24:01,050 --> 00:24:06,000
dialogue we do remote dialogue and that

00:24:03,690 --> 00:24:08,850
tells electron that we're using the

00:24:06,000 --> 00:24:11,100
dialogue module remotely from the

00:24:08,850 --> 00:24:13,680
renderer process but the thing to know

00:24:11,100 --> 00:24:16,140
about this that it's a nice convenience

00:24:13,680 --> 00:24:19,530
method but actually under the hood it's

00:24:16,140 --> 00:24:20,910
using synchronous IPC calls so if it's

00:24:19,530 --> 00:24:23,130
important to you to have things be

00:24:20,910 --> 00:24:24,530
asynchronous you should probably just do

00:24:23,130 --> 00:24:28,700
it the manual way

00:24:24,530 --> 00:24:31,640
with IPC and then of course if you're

00:24:28,700 --> 00:24:34,460
doing things with data between the

00:24:31,640 --> 00:24:36,980
renderer processes like anything that is

00:24:34,460 --> 00:24:39,770
in the latest chrome all the things that

00:24:36,980 --> 00:24:42,560
work in html5 you can use local storage

00:24:39,770 --> 00:24:46,100
storage API that kind of thing you can

00:24:42,560 --> 00:24:47,990
also use IPC to create global module or

00:24:46,100 --> 00:24:50,240
sorry global variables in the main

00:24:47,990 --> 00:24:52,640
process and because you've got note you

00:24:50,240 --> 00:24:54,860
can also just read and write files and

00:24:52,640 --> 00:24:57,590
save data that way right you can create

00:24:54,860 --> 00:25:03,020
an object write it to a JSON file and

00:24:57,590 --> 00:25:06,080
read it later this is an app called the

00:25:03,020 --> 00:25:10,420
electron API demos app and it is an

00:25:06,080 --> 00:25:10,420
electron app that demo the electron API

00:25:10,660 --> 00:25:18,020
so I've only touched on some of the like

00:25:13,550 --> 00:25:20,630
the core modules for there are a lot of

00:25:18,020 --> 00:25:22,790
modules and this one goes into all of

00:25:20,630 --> 00:25:25,730
the common ones the ones that are your

00:25:22,790 --> 00:25:27,470
most likely to use in your app and it

00:25:25,730 --> 00:25:29,750
demos them so you can see what they are

00:25:27,470 --> 00:25:32,720
and it also gives you sample code and

00:25:29,750 --> 00:25:36,380
what's cool about this is because it's

00:25:32,720 --> 00:25:39,200
an electron app the sample code is the

00:25:36,380 --> 00:25:43,130
real code we are just FS reading the

00:25:39,200 --> 00:25:44,540
file and then appending it to the Dom so

00:25:43,130 --> 00:25:46,730
it's also cool in terms of

00:25:44,540 --> 00:25:49,070
maintainability for this app so once you

00:25:46,730 --> 00:25:52,370
change the real code the sample code is

00:25:49,070 --> 00:25:54,440
automatically updated as well yeah so

00:25:52,370 --> 00:25:58,970
it's available on the Mac App Store's

00:25:54,440 --> 00:26:01,670
though all right so electron API and

00:25:58,970 --> 00:26:04,550
then the different operating systems so

00:26:01,670 --> 00:26:08,740
we talked about the electron API and the

00:26:04,550 --> 00:26:12,320
different processes but most of the time

00:26:08,740 --> 00:26:15,320
well all right back up so the electron

00:26:12,320 --> 00:26:17,540
API has a lot of modules that just work

00:26:15,320 --> 00:26:19,190
across all the operating system so like

00:26:17,540 --> 00:26:21,770
the dialogue example I was using for

00:26:19,190 --> 00:26:24,980
like opening up a error message or

00:26:21,770 --> 00:26:26,780
opening up an open file dialog you

00:26:24,980 --> 00:26:29,870
didn't you saw that I didn't have to say

00:26:26,780 --> 00:26:32,510
like it's Mac this if windows do this

00:26:29,870 --> 00:26:34,850
because all of those common ap is

00:26:32,510 --> 00:26:38,150
electron targets the operating system

00:26:34,850 --> 00:26:40,700
for you so you just write dialogue open

00:26:38,150 --> 00:26:42,710
so I'll dialogue and under the scenes

00:26:40,700 --> 00:26:44,270
electron says though this user is on

00:26:42,710 --> 00:26:47,420
windows so I'm going to use the windows

00:26:44,270 --> 00:26:50,450
API but there are some things that only

00:26:47,420 --> 00:26:53,420
exist on certain platforms right like I

00:26:50,450 --> 00:26:55,820
talked about the the light and dark menu

00:26:53,420 --> 00:26:58,490
bar on Mac right that only exists on Mac

00:26:55,820 --> 00:27:00,620
so of course the API for that is going

00:26:58,490 --> 00:27:03,020
to be mac only and so there are a few

00:27:00,620 --> 00:27:04,940
things like this that well actually

00:27:03,020 --> 00:27:06,260
there's more than a few because there

00:27:04,940 --> 00:27:08,780
are so many things you can do to

00:27:06,260 --> 00:27:11,180
integrate your app there's a lot but you

00:27:08,780 --> 00:27:13,310
can check to see what is available and

00:27:11,180 --> 00:27:15,140
how customized you can get with your app

00:27:13,310 --> 00:27:18,290
by looking at the documentation you can

00:27:15,140 --> 00:27:22,820
see which api's work with api's work on

00:27:18,290 --> 00:27:24,500
which platform but again the core

00:27:22,820 --> 00:27:27,560
essential api is work across all

00:27:24,500 --> 00:27:28,820
platforms and so if you're going to use

00:27:27,560 --> 00:27:30,500
something that only works on one

00:27:28,820 --> 00:27:33,350
platform that doesn't mean like now you

00:27:30,500 --> 00:27:34,880
have to start a new code base most the

00:27:33,350 --> 00:27:37,820
time you can just handle it with an if

00:27:34,880 --> 00:27:41,210
statement so for example on Mac you know

00:27:37,820 --> 00:27:42,650
you can make your window transparent you

00:27:41,210 --> 00:27:46,580
can see the background or whatever is

00:27:42,650 --> 00:27:49,850
behind it that's a vibrancy setting and

00:27:46,580 --> 00:27:52,790
so you could just set an if process

00:27:49,850 --> 00:27:54,860
platform is darwin set vibrancy and so

00:27:52,790 --> 00:27:57,620
that's the extent of what you have to do

00:27:54,860 --> 00:28:00,920
to do something custom for your mac

00:27:57,620 --> 00:28:02,960
users that wouldn't be something that

00:28:00,920 --> 00:28:06,260
you could do and another operating

00:28:02,960 --> 00:28:08,420
system so it's totally up to you like

00:28:06,260 --> 00:28:10,070
you can have electron just open up

00:28:08,420 --> 00:28:12,830
another website and that would be the

00:28:10,070 --> 00:28:15,200
bare-minimum thing that you could do you

00:28:12,830 --> 00:28:16,820
could start using node and save things

00:28:15,200 --> 00:28:19,480
to the file system but then you could

00:28:16,820 --> 00:28:21,590
also go down a rabbit hole of totally

00:28:19,480 --> 00:28:23,480
customizing and really integrating your

00:28:21,590 --> 00:28:26,620
app with the desktop with all of the

00:28:23,480 --> 00:28:28,640
api's that electron has available and

00:28:26,620 --> 00:28:31,130
honestly there are a lot of things you

00:28:28,640 --> 00:28:34,360
could do people were contributing the

00:28:31,130 --> 00:28:38,330
Sierra api's long before it came out and

00:28:34,360 --> 00:28:39,890
when electron first came out or was open

00:28:38,330 --> 00:28:42,100
source like I said like it was built for

00:28:39,890 --> 00:28:44,450
Adam so everything that existed and

00:28:42,100 --> 00:28:46,280
electron was there because it was

00:28:44,450 --> 00:28:48,410
something that Adam needed and nothing

00:28:46,280 --> 00:28:49,750
more and now that so many other people

00:28:48,410 --> 00:28:51,940
are building on electron

00:28:49,750 --> 00:28:55,750
getting a lot of great other AP is and a

00:28:51,940 --> 00:28:58,030
lot of ways to integrate your app all

00:28:55,750 --> 00:28:59,920
right and so I'll go briefly into what

00:28:58,030 --> 00:29:05,500
development is like for the basic

00:28:59,920 --> 00:29:08,200
electron setup and I've tried to or I

00:29:05,500 --> 00:29:10,210
guess I kind of try to explain electron

00:29:08,200 --> 00:29:12,900
development in these two ways if you're

00:29:10,210 --> 00:29:15,370
coming from a web development background

00:29:12,900 --> 00:29:17,980
electrons like building websites but you

00:29:15,370 --> 00:29:20,140
get to use node and you can think get to

00:29:17,980 --> 00:29:21,760
think of ways to use operating system

00:29:20,140 --> 00:29:24,250
features that you wouldn't get to do on

00:29:21,760 --> 00:29:27,820
a website and you also only have to care

00:29:24,250 --> 00:29:29,950
about one browser if you come from a

00:29:27,820 --> 00:29:32,050
node background it's a lot like building

00:29:29,950 --> 00:29:35,830
a note app but you can build a UI for it

00:29:32,050 --> 00:29:38,230
in HTML and CSS and you can use your

00:29:35,830 --> 00:29:41,740
favorite front and frameworks or not or

00:29:38,230 --> 00:29:43,930
CSS which ever makes you happy you can

00:29:41,740 --> 00:29:47,230
do that and again I want to emphasize

00:29:43,930 --> 00:29:50,530
that note is completely seamlessly

00:29:47,230 --> 00:29:52,660
available an electron so in your HTML in

00:29:50,530 --> 00:29:55,180
your script tags you can just start

00:29:52,660 --> 00:29:58,390
using node requires if you want you can

00:29:55,180 --> 00:30:01,450
do things like checking the platform

00:29:58,390 --> 00:30:03,220
that the users on and appending classes

00:30:01,450 --> 00:30:05,650
and then because you could create a

00:30:03,220 --> 00:30:07,420
whole new windows theme right in a

00:30:05,650 --> 00:30:10,090
maxime and a Linux theme and you can

00:30:07,420 --> 00:30:12,660
toggle those in your HTML by just

00:30:10,090 --> 00:30:16,900
checking the platform and knows but then

00:30:12,660 --> 00:30:19,510
appending the class and then you can

00:30:16,900 --> 00:30:22,030
read files and write them to the Dom

00:30:19,510 --> 00:30:25,180
that's the part that is a really fun I

00:30:22,030 --> 00:30:28,240
think and gives you the magical playland

00:30:25,180 --> 00:30:30,160
feeling with electron all right so

00:30:28,240 --> 00:30:33,340
because electron apps are a lot like

00:30:30,160 --> 00:30:35,970
writing no daph you have a package.json

00:30:33,340 --> 00:30:39,520
and in your package.json you'll have a

00:30:35,970 --> 00:30:40,990
field to define where your main process

00:30:39,520 --> 00:30:43,270
is going to be because that's the first

00:30:40,990 --> 00:30:45,100
thing electrons going to look for is how

00:30:43,270 --> 00:30:49,020
do I start up this app so you point

00:30:45,100 --> 00:30:51,190
electron to your main process file and

00:30:49,020 --> 00:30:54,010
then in your main process window you

00:30:51,190 --> 00:30:58,330
start up your app and you use browser

00:30:54,010 --> 00:31:00,190
window to launch open an HTML file and

00:30:58,330 --> 00:31:01,770
so then you have these are really

00:31:00,190 --> 00:31:05,640
different colors up there

00:31:01,770 --> 00:31:08,070
okay you have an index.html file and

00:31:05,640 --> 00:31:11,430
that's it these are the three components

00:31:08,070 --> 00:31:18,020
to a basic electron project and they

00:31:11,430 --> 00:31:21,030
represent the processes in electron a

00:31:18,020 --> 00:31:23,370
great way to get started is the electron

00:31:21,030 --> 00:31:27,330
quick start app which is dis bare bones

00:31:23,370 --> 00:31:31,170
a main jf file an index.html file that

00:31:27,330 --> 00:31:33,600
you can clone and run and not only is it

00:31:31,170 --> 00:31:37,410
a nice way to just kind of see quickly

00:31:33,600 --> 00:31:39,060
what an electron app is composed of it's

00:31:37,410 --> 00:31:40,890
also a great way to just start an

00:31:39,060 --> 00:31:43,230
electron app because you get an empty

00:31:40,890 --> 00:31:45,270
HTML page with the hello world and you

00:31:43,230 --> 00:31:50,910
can delete that and then just start

00:31:45,270 --> 00:31:53,850
writing your app and I definitely want

00:31:50,910 --> 00:31:55,710
to mention that because electrons also a

00:31:53,850 --> 00:31:57,510
lot like building websites you can also

00:31:55,710 --> 00:32:01,490
make your website your electron apps

00:31:57,510 --> 00:32:04,050
terribly and accessible please don't

00:32:01,490 --> 00:32:06,030
electron has a depth of extension called

00:32:04,050 --> 00:32:08,040
Deb Tron that sounds great in general

00:32:06,030 --> 00:32:10,380
because devcon will help you inspect

00:32:08,040 --> 00:32:13,530
your electron apps see see where you're

00:32:10,380 --> 00:32:15,930
making synchronous IPC calls and things

00:32:13,530 --> 00:32:17,910
like that but it also uses Google's

00:32:15,930 --> 00:32:20,960
accessibility library to audit your

00:32:17,910 --> 00:32:23,100
electron app and then there are

00:32:20,960 --> 00:32:25,320
accessibility tools that exist for

00:32:23,100 --> 00:32:29,310
websites i'll also pair well not all of

00:32:25,320 --> 00:32:31,710
them do but the Khan Academy is totally

00:32:29,310 --> 00:32:35,010
pairs really well with electron app so

00:32:31,710 --> 00:32:39,910
please use it and then I have some

00:32:35,010 --> 00:32:43,289
resources on here and that's what

00:32:39,910 --> 00:32:43,289

YouTube URL: https://www.youtube.com/watch?v=4G8w8InV7ig


