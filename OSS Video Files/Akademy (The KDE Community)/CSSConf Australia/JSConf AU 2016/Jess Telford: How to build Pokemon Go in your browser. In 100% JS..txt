Title: Jess Telford: How to build Pokemon Go in your browser. In 100% JS.
Publication date: 2017-05-19
Playlist: JSConf AU 2016
Description: 
	Thank you to Mozilla for making the video recordings possible.

This talk has it all! You'll be amazed at how powerful the browser has become: ✓ Augmented Reality. ✓ Location Aware. ✓ Serverless Peer-to-peer. ✓ Super Fast 3D.

We'll piece together powerful browser APIs using nothing more than the
phone you have in your pocket, and Google Chrome to build a location aware,
multi-user, augmented reality game. All in 100% JavaScript!

Thanks to the amazing Open Source work in the community, it's never been easier
to harness these browser super powers. In half an hour, we'll make use of WebVR, WebGL, WebRTC, GeoLocationAPI, and WebTorrent, bringing it all together in a few short lines of code.

Who knows, it could be you building the next multi-million $ per day game in JS!
Captions: 
	00:00:07,540 --> 00:00:13,849
all right thank you very much Craig I

00:00:10,340 --> 00:00:16,430
really appreciate the intro my name is

00:00:13,849 --> 00:00:17,480
Jess and I will get some slides up for

00:00:16,430 --> 00:00:35,420
you to look at instead of that lovely

00:00:17,480 --> 00:00:36,949
background all right excellent so you

00:00:35,420 --> 00:00:39,920
can find me on the internet at just

00:00:36,949 --> 00:00:42,170
Telford pretty much everywhere I tried

00:00:39,920 --> 00:00:44,989
to like shadow Craig said I try to keep

00:00:42,170 --> 00:00:46,670
my brand pretty simple it's my name if

00:00:44,989 --> 00:00:49,059
you want to follow along those that's

00:00:46,670 --> 00:00:51,170
the link to the slides they're available

00:00:49,059 --> 00:00:54,049
it's right they'll be available after

00:00:51,170 --> 00:00:55,430
the talks and available right now and so

00:00:54,049 --> 00:00:56,510
what I wanted to do was give you a

00:00:55,430 --> 00:00:59,570
little bit of an intro into myself

00:00:56,510 --> 00:01:00,589
before we talk a bit more about about

00:00:59,570 --> 00:01:04,780
the topic that I'm sure you've read the

00:01:00,589 --> 00:01:07,400
title or so I built my first website in

00:01:04,780 --> 00:01:10,549
2005 I believe it was it's going back a

00:01:07,400 --> 00:01:12,679
little while now I spent the last two

00:01:10,549 --> 00:01:15,500
years as the team lead at domain.com

00:01:12,679 --> 00:01:17,359
dot-eu we've grown an excellent large

00:01:15,500 --> 00:01:18,710
front-end team they're building things

00:01:17,359 --> 00:01:20,840
in react all sorts of really cool

00:01:18,710 --> 00:01:23,390
technology I like to keep my hand in

00:01:20,840 --> 00:01:26,600
where I can in some fun new stuff and so

00:01:23,390 --> 00:01:28,670
you'll see some of that today this today

00:01:26,600 --> 00:01:31,789
is the first talk that I've been able to

00:01:28,670 --> 00:01:35,149
give since my son was born a little over

00:01:31,789 --> 00:01:36,890
a year ago and so in his honor I wanted

00:01:35,149 --> 00:01:38,020
to start with a dad joke hope that's

00:01:36,890 --> 00:01:41,119
okay

00:01:38,020 --> 00:01:45,249
so two whales are sitting in in a bar

00:01:41,119 --> 00:01:45,249
one turns the other and he says

00:01:49,810 --> 00:02:01,940
[Music]

00:01:59,860 --> 00:02:07,490
second one turns to the first assistant

00:02:01,940 --> 00:02:08,660
go home Sam you're drunk alright cool so

00:02:07,490 --> 00:02:11,750
we're all role is enough a little bit

00:02:08,660 --> 00:02:14,570
now so are you talking about building

00:02:11,750 --> 00:02:16,130
Pokemon go in 100% air so I'll start out

00:02:14,570 --> 00:02:17,990
by saying I'm not affiliated with

00:02:16,130 --> 00:02:20,090
Niantic Pokemon go is their own

00:02:17,990 --> 00:02:22,550
registered trademark but I want to use

00:02:20,090 --> 00:02:24,140
them as an excellent example of what you

00:02:22,550 --> 00:02:26,480
can build today with with technology and

00:02:24,140 --> 00:02:28,220
I wanted to talk a little bit about how

00:02:26,480 --> 00:02:30,290
we can build that in JavaScript as well

00:02:28,220 --> 00:02:33,020
as my website experience I've got

00:02:30,290 --> 00:02:35,060
experience building games back in 2009 I

00:02:33,020 --> 00:02:37,790
built an augmented reality game for the

00:02:35,060 --> 00:02:42,560
Nintendo DS with the local Sydney based

00:02:37,790 --> 00:02:44,030
server and since about 1998 of in

00:02:42,560 --> 00:02:45,530
dabbling in making games so this is kind

00:02:44,030 --> 00:02:47,720
of like a good cross-section of my

00:02:45,530 --> 00:02:49,460
passions of building websites JavaScript

00:02:47,720 --> 00:02:51,740
with them building augmented reality and

00:02:49,460 --> 00:02:54,140
games as well so a more accurate title

00:02:51,740 --> 00:02:56,480
for my talk is how to build a 3d

00:02:54,140 --> 00:02:58,250
location-aware offline first monster

00:02:56,480 --> 00:03:00,260
catching massively multiplayer online

00:02:58,250 --> 00:03:07,910
game with shared world and augmented

00:03:00,260 --> 00:03:09,950
reality in your browser today catchy

00:03:07,910 --> 00:03:12,950
right so that's why I didn't go with

00:03:09,950 --> 00:03:14,540
that title on the on the program so

00:03:12,950 --> 00:03:17,209
let's start with talking about 3d in the

00:03:14,540 --> 00:03:18,890
browser so 3d in the browser as you may

00:03:17,209 --> 00:03:22,459
or may not be aware is possible with

00:03:18,890 --> 00:03:25,489
WebGL today WebGL is based on the OpenGL

00:03:22,459 --> 00:03:27,800
standard that is common with games and

00:03:25,489 --> 00:03:29,450
any game developer that's been building

00:03:27,800 --> 00:03:31,160
3d games recently will know it and be

00:03:29,450 --> 00:03:32,840
able to transfer those skills to to the

00:03:31,160 --> 00:03:34,610
web unfortunately a lot of web builders

00:03:32,840 --> 00:03:37,100
don't know those 3d skills so it's quite

00:03:34,610 --> 00:03:38,269
tricky to get broken in one of the

00:03:37,100 --> 00:03:41,120
interesting things that's come out of

00:03:38,269 --> 00:03:43,880
the JavaScript scene is three jeaious it

00:03:41,120 --> 00:03:47,570
allows you to do much simpler OpenGL or

00:03:43,880 --> 00:03:50,570
WebGL programming but it could be even

00:03:47,570 --> 00:03:53,810
easier so a frame has come along a frame

00:03:50,570 --> 00:03:56,090
is developed by Mozilla it's based on

00:03:53,810 --> 00:03:57,200
the web via a spec and you'll hear a

00:03:56,090 --> 00:03:58,760
little bit more about the web view our

00:03:57,200 --> 00:03:59,690
spec this afternoon I'm really looking

00:03:58,760 --> 00:04:02,000
forward to that talk it's going to be

00:03:59,690 --> 00:04:04,670
great I won't touch too much on those

00:04:02,000 --> 00:04:05,900
details today but basically a frame

00:04:04,670 --> 00:04:10,280
allows you to

00:04:05,900 --> 00:04:12,950
take the best parts of of 3GS and sorry

00:04:10,280 --> 00:04:17,980
three jeaious and implement that in the

00:04:12,950 --> 00:04:17,980
browser with some fairly simple markup

00:04:20,500 --> 00:04:28,539
so um what we'll do is we'll jump into a

00:04:23,660 --> 00:04:31,490
demo now hopefully this will it work

00:04:28,539 --> 00:04:35,360
okay cool so what you see here is a very

00:04:31,490 --> 00:04:39,229
basic 3d scene there's a background and

00:04:35,360 --> 00:04:40,669
there's a blue box and a red sphere this

00:04:39,229 --> 00:04:42,500
is all in a frame

00:04:40,669 --> 00:04:44,150
traditionally in OpenGL there would have

00:04:42,500 --> 00:04:46,490
been lots of fun stuff with loading

00:04:44,150 --> 00:04:47,930
textures and worrying about positioning

00:04:46,490 --> 00:04:52,490
of the the elements and all of that kind

00:04:47,930 --> 00:04:55,370
of stuff but thankfully with with a

00:04:52,490 --> 00:04:59,180
frame that all boils down to this so we

00:04:55,370 --> 00:05:02,000
set up a scene a scene a scene which has

00:04:59,180 --> 00:05:04,310
a box a box a frame the prefix

00:05:02,000 --> 00:05:07,639
everything that a you give it a position

00:05:04,310 --> 00:05:09,650
some dimensions a color same with the

00:05:07,639 --> 00:05:10,880
sphere for the ball and the sky for

00:05:09,650 --> 00:05:13,849
loading the texture so it's it's

00:05:10,880 --> 00:05:15,590
actually fairly compact that set of code

00:05:13,849 --> 00:05:17,330
I wouldn't say it's easy because it

00:05:15,590 --> 00:05:18,470
actually took me quite a while to get my

00:05:17,330 --> 00:05:20,990
head around how this actually works

00:05:18,470 --> 00:05:23,599
myself but the documentation if a

00:05:20,990 --> 00:05:26,720
framework quite good those are very

00:05:23,599 --> 00:05:29,090
basic example it doesn't take control of

00:05:26,720 --> 00:05:31,370
so this can also run in a browser by the

00:05:29,090 --> 00:05:34,630
way on the on a device so on a mobile

00:05:31,370 --> 00:05:38,120
device it doesn't take control of the

00:05:34,630 --> 00:05:39,320
tilt sensors or the the gyroscope and

00:05:38,120 --> 00:05:41,060
accelerometer and those kinds of things

00:05:39,320 --> 00:05:43,130
that you have in modern devices so what

00:05:41,060 --> 00:05:45,320
we can do is we can add one extra little

00:05:43,130 --> 00:05:46,909
line of code there which is the a camera

00:05:45,320 --> 00:05:49,880
and then we can then enable look

00:05:46,909 --> 00:05:53,419
controls on that so that allows us to

00:05:49,880 --> 00:05:55,699
take control of the on our device of the

00:05:53,419 --> 00:05:58,699
gyroscope and tilt sensor so I'm gonna

00:05:55,699 --> 00:06:02,440
try and load up a demo on my phone

00:05:58,699 --> 00:06:02,440
hopefully this this works

00:06:16,320 --> 00:06:22,090
excellent so you can see here looks like

00:06:20,590 --> 00:06:23,860
the streaming is going a little bit slow

00:06:22,090 --> 00:06:27,100
there but some you can you get the basic

00:06:23,860 --> 00:06:30,670
idea that as I tilt and rotate the

00:06:27,100 --> 00:06:32,410
device then the display updates and it

00:06:30,670 --> 00:06:34,450
correctly rotates the camera so we can

00:06:32,410 --> 00:06:37,870
see different different perspectives of

00:06:34,450 --> 00:06:40,600
the 3d scene so it's a very basic very

00:06:37,870 --> 00:06:42,580
basic demo of using the motion sensors

00:06:40,600 --> 00:06:49,810
that a frame gives us with that one line

00:06:42,580 --> 00:06:50,890
of code so let's move on to catching

00:06:49,810 --> 00:06:51,910
monsters so this is where we get into

00:06:50,890 --> 00:06:53,740
actually making a game rather than

00:06:51,910 --> 00:06:55,450
looking at just that there very simple

00:06:53,740 --> 00:06:58,150
scene so what we want to do is we want

00:06:55,450 --> 00:07:01,210
to make it the scene interactive and so

00:06:58,150 --> 00:07:02,590
what we can do is with this demo now

00:07:01,210 --> 00:07:09,070
hopefully just want to work a little bit

00:07:02,590 --> 00:07:12,000
better as I open this up once again bear

00:07:09,070 --> 00:07:12,000
with me for seconds

00:07:41,229 --> 00:07:48,680
okay so we've got a let's find weather

00:07:45,649 --> 00:07:51,710
yeah the box is gone oh no it's a

00:07:48,680 --> 00:07:54,469
loading okay so what we might be able to

00:07:51,710 --> 00:07:57,349
see here is it's quite delayed

00:07:54,469 --> 00:08:00,080
unfortunately but I'm moving the sphere

00:07:57,349 --> 00:08:02,419
around on the screen by dragging my my

00:08:00,080 --> 00:08:04,339
thumb so you're able to see that you're

00:08:02,419 --> 00:08:06,949
able to interact with the 3d scene by

00:08:04,339 --> 00:08:09,289
the 2d screen so I can I can throw the

00:08:06,949 --> 00:08:12,349
ball and to land on the ground and roll

00:08:09,289 --> 00:08:14,270
away so it's quite nice and so using

00:08:12,349 --> 00:08:16,779
that mechanism for those familiar with

00:08:14,270 --> 00:08:19,669
the game pokemon go we're able to then

00:08:16,779 --> 00:08:23,360
actually catch monsters by throwing a

00:08:19,669 --> 00:08:30,379
ball at them so how did we how did we do

00:08:23,360 --> 00:08:32,779
this we set up physics in the scene that

00:08:30,379 --> 00:08:34,579
very first line the a scene physics sets

00:08:32,779 --> 00:08:36,860
that up for us we set a static body

00:08:34,579 --> 00:08:39,199
that's the the ground would be the body

00:08:36,860 --> 00:08:40,370
there the static body for collision so

00:08:39,199 --> 00:08:42,349
that when we throw the ball it doesn't

00:08:40,370 --> 00:08:44,720
infinitely drop down is nothingness and

00:08:42,349 --> 00:08:47,600
then on the sphere there we added the

00:08:44,720 --> 00:08:49,010
click and drag option let's say it looks

00:08:47,600 --> 00:08:51,019
like HTML attribute but it's very

00:08:49,010 --> 00:08:52,519
similar to react components where it has

00:08:51,019 --> 00:08:55,010
its own life cycle hooks this is all

00:08:52,519 --> 00:08:56,389
part of a frame still and then we've

00:08:55,010 --> 00:08:57,829
also set a mass on that so that it

00:08:56,389 --> 00:08:59,240
reacts to gravity and those kinds of

00:08:57,829 --> 00:09:00,649
things which is which is really nice so

00:08:59,240 --> 00:09:03,949
you can kind of start to see here how

00:09:00,649 --> 00:09:05,870
powerful a frame can be and how a few

00:09:03,949 --> 00:09:07,459
lines of code it will take to build up a

00:09:05,870 --> 00:09:09,260
3d scene that's interactive and that we

00:09:07,459 --> 00:09:10,610
can we can start playing around with I

00:09:09,260 --> 00:09:12,829
should go behind the scenes there is a

00:09:10,610 --> 00:09:15,410
lot of JavaScript powering this but this

00:09:12,829 --> 00:09:17,750
is what you end up as the the end user

00:09:15,410 --> 00:09:20,420
developer creating so moving on to a

00:09:17,750 --> 00:09:22,459
location away so this is funny I've

00:09:20,420 --> 00:09:25,100
always had a passion for location-aware

00:09:22,459 --> 00:09:27,920
games I used to play a few geocaching

00:09:25,100 --> 00:09:29,089
and those kinds of games early user of

00:09:27,920 --> 00:09:31,639
Foursquare and that kind of stuff is

00:09:29,089 --> 00:09:32,870
always a bit of fun we need to display

00:09:31,639 --> 00:09:35,389
things on a map when we're doing

00:09:32,870 --> 00:09:37,939
location-aware stuff we're familiar with

00:09:35,389 --> 00:09:41,139
the popular Maps Google Apple Maps

00:09:37,939 --> 00:09:42,740
there's less a little less snow on one

00:09:41,139 --> 00:09:45,709
OpenStreetMap

00:09:42,740 --> 00:09:47,750
that is a free open-source data set that

00:09:45,709 --> 00:09:49,550
anybody can use to render their maps

00:09:47,750 --> 00:09:50,630
then we need to render them somehow so

00:09:49,550 --> 00:09:51,980
Google and Apple have their own

00:09:50,630 --> 00:09:54,110
rendering engine that's what you see

00:09:51,980 --> 00:09:55,760
they're often called slippy maps they

00:09:54,110 --> 00:09:57,800
slip around under the finger as you as

00:09:55,760 --> 00:10:00,589
you touching and dragging or you zooming

00:09:57,800 --> 00:10:02,839
they kind of slip and slide so there's a

00:10:00,589 --> 00:10:05,180
few slippy map rendering options leaflet

00:10:02,839 --> 00:10:07,310
jeaious is a quite a popular one it

00:10:05,180 --> 00:10:10,339
recently went 1.0 r for a few years of

00:10:07,310 --> 00:10:12,440
being in zero point x so it's really

00:10:10,339 --> 00:10:13,730
great for them map box is another

00:10:12,440 --> 00:10:17,450
excellent wine map box is the one that

00:10:13,730 --> 00:10:19,100
I've chosen to demo today they use WebGL

00:10:17,450 --> 00:10:20,690
under the hood for doing rendering which

00:10:19,100 --> 00:10:25,430
is really nice it's quite performant on

00:10:20,690 --> 00:10:27,440
modern devices and they they allow you

00:10:25,430 --> 00:10:29,510
to style the maps quite easily so you

00:10:27,440 --> 00:10:31,459
can serve up a JSON object and change

00:10:29,510 --> 00:10:34,130
the color and outlines of roads and

00:10:31,459 --> 00:10:38,080
parks and those kinds of things so it

00:10:34,130 --> 00:10:38,080
will light up another demo here

00:10:42,040 --> 00:10:47,839
hopefully this will load so using my

00:10:45,970 --> 00:10:49,790
tethered internet connection so there we

00:10:47,839 --> 00:10:51,500
go so we can see that it's it's loaded

00:10:49,790 --> 00:10:53,870
up this is just a very basic map demo

00:10:51,500 --> 00:10:56,290
you can click and drag around you can

00:10:53,870 --> 00:11:00,440
zoom and do all those kinds of things so

00:10:56,290 --> 00:11:03,380
it's matte box jail the way we do that

00:11:00,440 --> 00:11:06,140
is by instantiating a new instance of

00:11:03,380 --> 00:11:08,690
matte box jail dot map that allows us to

00:11:06,140 --> 00:11:10,160
then display the map and I've added a

00:11:08,690 --> 00:11:13,250
little bit extra code there which gets

00:11:10,160 --> 00:11:15,829
the zero location of the user so uses

00:11:13,250 --> 00:11:17,600
the navigator dot geo location dot watch

00:11:15,829 --> 00:11:20,899
position function this is available in

00:11:17,600 --> 00:11:23,870
all modern browsers this allows you to

00:11:20,899 --> 00:11:27,470
get the GPS location of the current

00:11:23,870 --> 00:11:29,930
device there is interesting points here

00:11:27,470 --> 00:11:31,010
so the enable high accuracy down the

00:11:29,930 --> 00:11:34,430
bottom that's one of the options you're

00:11:31,010 --> 00:11:36,200
able to pass in that hooks into the GPS

00:11:34,430 --> 00:11:38,240
device rather than trying to use the

00:11:36,200 --> 00:11:41,300
Wi-Fi to guesstimate the current

00:11:38,240 --> 00:11:42,980
location it's very useful for handheld

00:11:41,300 --> 00:11:45,470
devices but it can chew through the

00:11:42,980 --> 00:11:47,300
battery so be aware and then you can see

00:11:45,470 --> 00:11:49,100
that we are accessing the latitude and

00:11:47,300 --> 00:11:51,920
longitude from the results that it gives

00:11:49,100 --> 00:11:53,930
us back so that's great so it's a 2d map

00:11:51,920 --> 00:11:55,470
but now what we want to do is render

00:11:53,930 --> 00:11:58,650
that in 3d

00:11:55,470 --> 00:12:00,420
and so what we do is take that same map

00:11:58,650 --> 00:12:03,750
that was rendered and we drop it into a

00:12:00,420 --> 00:12:07,070
3d a-frame scene you can see here's the

00:12:03,750 --> 00:12:10,170
the map will load into that space it is

00:12:07,070 --> 00:12:11,460
in Melbourne that's great it's found us

00:12:10,170 --> 00:12:13,380
which is cool we've dropped a little

00:12:11,460 --> 00:12:16,050
sphere on that location and you can see

00:12:13,380 --> 00:12:18,480
we're in 3d here so I can move around

00:12:16,050 --> 00:12:20,040
and look at the map so that's pretty

00:12:18,480 --> 00:12:23,150
cool so now we're able to render a map

00:12:20,040 --> 00:12:26,040
in 3d for our location-aware game and

00:12:23,150 --> 00:12:29,060
this is how we've done it so we've

00:12:26,040 --> 00:12:32,790
replaced the instance of the map GL

00:12:29,060 --> 00:12:35,340
object at the top with an a map element

00:12:32,790 --> 00:12:36,600
there and then we've done the same watch

00:12:35,340 --> 00:12:39,270
position to your location don't watch

00:12:36,600 --> 00:12:41,520
position and grab the latitude and

00:12:39,270 --> 00:12:44,270
longitude and this time we've injected

00:12:41,520 --> 00:12:46,830
that into the a map as an attribute

00:12:44,270 --> 00:12:48,360
using map l dot set attribute there and

00:12:46,830 --> 00:12:50,370
we've enabled the same high accuracy

00:12:48,360 --> 00:12:52,440
things so that's where we set the the

00:12:50,370 --> 00:12:55,530
center of the map so this allows us

00:12:52,440 --> 00:12:57,210
again in quite a few lines of code in so

00:12:55,530 --> 00:13:00,150
in a small number of lines of code we

00:12:57,210 --> 00:13:01,680
are able to render a map in 3d and set

00:13:00,150 --> 00:13:05,610
its location based on where the user

00:13:01,680 --> 00:13:07,050
currently is so that's cool that's

00:13:05,610 --> 00:13:08,880
that's good fun we can we can do that

00:13:07,050 --> 00:13:10,380
rendering now now we want to make it a

00:13:08,880 --> 00:13:12,260
little bit interactive with the world so

00:13:10,380 --> 00:13:15,420
we want to have item drop locations

00:13:12,260 --> 00:13:17,340
pokemon go calls these poker stops it's

00:13:15,420 --> 00:13:19,580
where you might find items that you can

00:13:17,340 --> 00:13:23,310
use throughout the rest of the game so

00:13:19,580 --> 00:13:25,380
it's interesting when when we do this

00:13:23,310 --> 00:13:27,300
you can have a game that does this kind

00:13:25,380 --> 00:13:28,770
of stuff again it can generate items and

00:13:27,300 --> 00:13:30,330
you can find them and it can be random

00:13:28,770 --> 00:13:31,740
it doesn't matter but when you're

00:13:30,330 --> 00:13:33,780
talking about a massively multiplayer

00:13:31,740 --> 00:13:35,670
online game those items that get

00:13:33,780 --> 00:13:38,040
generated they should be persistence

00:13:35,670 --> 00:13:40,260
between users there should be in a

00:13:38,040 --> 00:13:41,640
persistent location if I'm playing the

00:13:40,260 --> 00:13:43,410
game and I'm standing next to my friend

00:13:41,640 --> 00:13:45,030
who is also playing the game if they see

00:13:43,410 --> 00:13:47,520
a location that's 10 meters away and I

00:13:45,030 --> 00:13:48,930
see 100 meters away it's confusing if it

00:13:47,520 --> 00:13:50,790
removes the social aspect of the game

00:13:48,930 --> 00:13:52,589
there's no way to say hey mate over

00:13:50,790 --> 00:13:55,350
there hundred meters is a spot where you

00:13:52,589 --> 00:13:57,240
can find items so we need a way to be

00:13:55,350 --> 00:13:59,550
able to get a consistent set of

00:13:57,240 --> 00:14:01,290
locations something that is maybe

00:13:59,550 --> 00:14:02,710
related to landmarks or it's something

00:14:01,290 --> 00:14:05,460
that might be

00:14:02,710 --> 00:14:07,990
so it's somebody that's popular nearby

00:14:05,460 --> 00:14:09,310
Foursquare has a lot of this data the

00:14:07,990 --> 00:14:11,320
Foursquare is excellent for this so they

00:14:09,310 --> 00:14:13,930
have crowd-sourced data over many many

00:14:11,320 --> 00:14:16,660
years they provide excellent api's as

00:14:13,930 --> 00:14:19,750
well with very generous rate limits so

00:14:16,660 --> 00:14:20,920
we're able to access that data and load

00:14:19,750 --> 00:14:24,430
that up and it'll be the same across

00:14:20,920 --> 00:14:26,200
users for subsequent API requests how do

00:14:24,430 --> 00:14:30,100
we do that so we make a fetch request

00:14:26,200 --> 00:14:33,820
out to to Foursquare here we can see

00:14:30,100 --> 00:14:36,580
that we are using the html5 the new

00:14:33,820 --> 00:14:43,410
fetch spec that's very similar to Ajax

00:14:36,580 --> 00:14:46,690
requests those the bit more familiar and

00:14:43,410 --> 00:14:48,100
we give it a sorry the result down the

00:14:46,690 --> 00:14:49,240
very bottom there is a set of venues and

00:14:48,100 --> 00:14:51,550
that's that's what we're interested in

00:14:49,240 --> 00:14:53,890
to do the search we give it a bounding

00:14:51,550 --> 00:14:57,910
box and we give it this this northeast

00:14:53,890 --> 00:15:00,160
and southwest bounding box given the the

00:14:57,910 --> 00:15:02,050
lots and Long's there are other ways to

00:15:00,160 --> 00:15:04,510
to search you could do a location plus

00:15:02,050 --> 00:15:06,520
radius but doing this way allows us to

00:15:04,510 --> 00:15:08,170
chunk up the location of the world we're

00:15:06,520 --> 00:15:10,150
able to say okay the world consists of

00:15:08,170 --> 00:15:12,700
small boxes and in those boxes of these

00:15:10,150 --> 00:15:15,730
locations that we're looking for if we

00:15:12,700 --> 00:15:17,560
did radius and position just the matter

00:15:15,730 --> 00:15:19,030
of stepping to the side by one meter

00:15:17,560 --> 00:15:21,610
would change my position so I'd have to

00:15:19,030 --> 00:15:23,200
do another search in that radius but by

00:15:21,610 --> 00:15:24,880
doing a bounding box as long as I'm

00:15:23,200 --> 00:15:26,410
still within that box I can continue to

00:15:24,880 --> 00:15:28,390
get the same results so I don't need to

00:15:26,410 --> 00:15:29,740
research again so it's a little bit of

00:15:28,390 --> 00:15:33,070
optimization technique that we can use

00:15:29,740 --> 00:15:34,960
there then what do we do with those

00:15:33,070 --> 00:15:38,020
locations for once we've got them well

00:15:34,960 --> 00:15:41,020
we want to drop them on the map so we do

00:15:38,020 --> 00:15:47,020
something like this demo this is another

00:15:41,020 --> 00:15:50,050
3d demo and it will show a 3d space 3d

00:15:47,020 --> 00:15:51,160
map is the out location and here are

00:15:50,050 --> 00:15:55,210
some of the locations that are returned

00:15:51,160 --> 00:15:58,360
from Foursquare so we can see that we've

00:15:55,210 --> 00:16:01,780
got maybe 15 or so there it's possible

00:15:58,360 --> 00:16:03,460
in right in the CBD to get a couple of

00:16:01,780 --> 00:16:05,230
hundreds from Foursquare there's a lot

00:16:03,460 --> 00:16:06,370
of venues nearby so you might have seen

00:16:05,230 --> 00:16:08,380
on the previous slide that we had a

00:16:06,370 --> 00:16:11,040
limit of 50 items just so that we don't

00:16:08,380 --> 00:16:11,040
overload the user

00:16:17,690 --> 00:16:22,920
and this is roughly what it will look

00:16:20,310 --> 00:16:25,950
like when we're dropping the pins on the

00:16:22,920 --> 00:16:28,410
map we create a cone it's inverted and

00:16:25,950 --> 00:16:30,690
we give it a position they would be

00:16:28,410 --> 00:16:32,040
dynamically inserted into the Dom but

00:16:30,690 --> 00:16:33,480
this is an example of what the done

00:16:32,040 --> 00:16:36,090
would look like after we've inserted a

00:16:33,480 --> 00:16:37,950
few locations and this isn't limited to

00:16:36,090 --> 00:16:39,630
just venues as well so we don't have to

00:16:37,950 --> 00:16:42,630
just use Foursquare for venues we could

00:16:39,630 --> 00:16:44,280
use any kind of location information for

00:16:42,630 --> 00:16:45,510
example if we're hunting monsters and we

00:16:44,280 --> 00:16:47,010
want to know where the current monsters

00:16:45,510 --> 00:16:49,070
are and we want that to be shared that

00:16:47,010 --> 00:16:51,420
could be behind an API as well

00:16:49,070 --> 00:16:53,790
so speaking of a shared this is where

00:16:51,420 --> 00:16:55,710
the massively multiplayer online part

00:16:53,790 --> 00:16:59,490
comes in where you want that shared

00:16:55,710 --> 00:17:01,650
world what we want is some way to be

00:16:59,490 --> 00:17:03,870
able to consistently retrieve that data

00:17:01,650 --> 00:17:05,579
for our users and so the best way to do

00:17:03,870 --> 00:17:07,319
that is to set up our own server and we

00:17:05,579 --> 00:17:09,600
can do that in JavaScript as well so we

00:17:07,319 --> 00:17:11,850
set that up with node and this is a very

00:17:09,600 --> 00:17:14,010
simple Express app this is the hello

00:17:11,850 --> 00:17:15,990
world from there their help pages I

00:17:14,010 --> 00:17:18,660
won't go into details in how Express

00:17:15,990 --> 00:17:20,310
works but essentially this accepts HTTP

00:17:18,660 --> 00:17:22,110
requests and returns a response in this

00:17:20,310 --> 00:17:25,560
case hello world but we could just as

00:17:22,110 --> 00:17:28,520
easily return location data for monsters

00:17:25,560 --> 00:17:31,590
or for venues and those kinds of things

00:17:28,520 --> 00:17:33,630
what we need to do though is store that

00:17:31,590 --> 00:17:35,700
data we need to store the location

00:17:33,630 --> 00:17:37,500
information the the venues or the

00:17:35,700 --> 00:17:40,200
monsters in some way that's easily

00:17:37,500 --> 00:17:42,360
searchable for us we need some way to be

00:17:40,200 --> 00:17:45,300
able to do geospatial searching and a

00:17:42,360 --> 00:17:47,280
great tool that's also power powerbal by

00:17:45,300 --> 00:17:50,160
a javascript is MongoDB and that

00:17:47,280 --> 00:17:52,050
supports geospatial searching so with

00:17:50,160 --> 00:17:55,380
the geospatial searching you're able to

00:17:52,050 --> 00:17:58,410
do these kinds of queries that in this

00:17:55,380 --> 00:18:00,150
case we say a point has a location to

00:17:58,410 --> 00:18:02,940
Latin long and then we want to search

00:18:00,150 --> 00:18:06,480
within a max distance of that's 5,000

00:18:02,940 --> 00:18:07,980
meters from that point so here we would

00:18:06,480 --> 00:18:09,450
get back all of the locations that we've

00:18:07,980 --> 00:18:10,920
we have previously stored so we would

00:18:09,450 --> 00:18:13,230
still have to do a request out to

00:18:10,920 --> 00:18:14,400
Foursquare to get the initial data seed

00:18:13,230 --> 00:18:16,920
that into the database and then make

00:18:14,400 --> 00:18:18,480
such a request on every user request we

00:18:16,920 --> 00:18:22,560
do this for the monsters and stuff as

00:18:18,480 --> 00:18:24,600
well this is all great this is actually

00:18:22,560 --> 00:18:26,510
before me on that there's this is a

00:18:24,600 --> 00:18:28,550
point at a distance

00:18:26,510 --> 00:18:30,230
MongoDB also supports the ability to

00:18:28,550 --> 00:18:31,640
search by bounding box so we've

00:18:30,230 --> 00:18:34,250
mentioned before the the northeast and

00:18:31,640 --> 00:18:36,560
the Southwest kana boxes we could also

00:18:34,250 --> 00:18:38,390
search by random polygons so as long as

00:18:36,560 --> 00:18:40,070
you have the outline of say a suburb or

00:18:38,390 --> 00:18:41,930
a country then you're able to search for

00:18:40,070 --> 00:18:42,620
every item that fits exactly within that

00:18:41,930 --> 00:18:44,660
outline

00:18:42,620 --> 00:18:48,040
whether it's a very complicated of

00:18:44,660 --> 00:18:50,870
whether it's a circle it's indifferent

00:18:48,040 --> 00:18:53,030
so this is all well and good when we're

00:18:50,870 --> 00:18:53,630
playing online when we are connected to

00:18:53,030 --> 00:18:56,720
the Internet

00:18:53,630 --> 00:18:58,520
when we have a good stable 4G connection

00:18:56,720 --> 00:19:00,560
we can pull down all of this data and

00:18:58,520 --> 00:19:02,750
render that into our game what about

00:19:00,560 --> 00:19:04,280
when we're offline that's when we need

00:19:02,750 --> 00:19:07,910
to start thinking about what's known as

00:19:04,280 --> 00:19:09,500
progressive web apps for instant web

00:19:07,910 --> 00:19:13,370
apps to also cover a bunch of other

00:19:09,500 --> 00:19:15,560
areas so talking about the speed of your

00:19:13,370 --> 00:19:18,110
page that loads not not just the offline

00:19:15,560 --> 00:19:20,090
things like push notifications being

00:19:18,110 --> 00:19:21,980
able to go fullscreen a couple other

00:19:20,090 --> 00:19:23,450
bits and pieces but one of the the

00:19:21,980 --> 00:19:26,270
largest parts is being able to load

00:19:23,450 --> 00:19:27,650
offline progressively you know to load

00:19:26,270 --> 00:19:31,160
the page no matter what your internet

00:19:27,650 --> 00:19:34,250
connection looks like instead is really

00:19:31,160 --> 00:19:37,700
unreliable where after an athletics like

00:19:34,250 --> 00:19:43,310
experience here I really enjoy this de

00:19:37,700 --> 00:19:45,800
site this is by where's my mouse so this

00:19:43,310 --> 00:19:49,130
is a page everyone has JavaScript right

00:19:45,800 --> 00:19:54,830
this is by Stewart Stewart language aka

00:19:49,130 --> 00:19:57,380
at silh when a user come request comes

00:19:54,830 --> 00:19:59,390
in as the page loaded well no because

00:19:57,380 --> 00:20:00,500
they sorry they do they have JavaScript

00:19:59,390 --> 00:20:03,230
no they don't because the page hasn't

00:20:00,500 --> 00:20:05,030
loaded yet did the request for the

00:20:03,230 --> 00:20:07,640
JavaScript succeed maybe not maybe you

00:20:05,030 --> 00:20:11,000
went through a tunnel or your connection

00:20:07,640 --> 00:20:12,860
randomly dropped out did the HTTP

00:20:11,000 --> 00:20:14,210
request actually complete do we get all

00:20:12,860 --> 00:20:15,410
the data back for the same reasons it

00:20:14,210 --> 00:20:18,350
could just drop out halfway through the

00:20:15,410 --> 00:20:20,090
request there's a corporate firewall

00:20:18,350 --> 00:20:22,070
block or does your country's firewall

00:20:20,090 --> 00:20:23,990
block JavaScript it's entirely possible

00:20:22,070 --> 00:20:24,950
and it does happen often so if all of

00:20:23,990 --> 00:20:27,050
these things happen

00:20:24,950 --> 00:20:30,620
there's a bunch of other situations

00:20:27,050 --> 00:20:33,710
where it could could go on is a CD

00:20:30,620 --> 00:20:35,480
enough no it's down can I use okay the

00:20:33,710 --> 00:20:36,590
JavaScript all the jobs sorry the

00:20:35,480 --> 00:20:38,990
browser doesn't support the JavaScript

00:20:36,590 --> 00:20:39,920
you try to load if all the above is true

00:20:38,990 --> 00:20:43,340
there

00:20:39,920 --> 00:20:44,570
yes javascript works probably maybe

00:20:43,340 --> 00:20:46,790
there was an error thrown needed in your

00:20:44,570 --> 00:20:48,230
deus and it killed the rest of the

00:20:46,790 --> 00:20:49,100
execution there's all sorts of weird

00:20:48,230 --> 00:20:51,320
things that can go on

00:20:49,100 --> 00:20:54,830
so if you can protect against as much of

00:20:51,320 --> 00:20:56,810
this as possible by loading it once

00:20:54,830 --> 00:20:58,580
early on in a good known state and then

00:20:56,810 --> 00:21:03,020
enabling that to load when they're

00:20:58,580 --> 00:21:03,350
offline then all the better how do we do

00:21:03,020 --> 00:21:05,990
that

00:21:03,350 --> 00:21:08,000
we do that with service workers so

00:21:05,990 --> 00:21:11,090
service workers are excellent they are

00:21:08,000 --> 00:21:12,260
the next evolution of app cache for

00:21:11,090 --> 00:21:15,530
those who are familiar with trying to do

00:21:12,260 --> 00:21:18,410
offline in the past so app cache allows

00:21:15,530 --> 00:21:21,350
sorry so service workers allow you to

00:21:18,410 --> 00:21:23,630
basically do a threaded JavaScript

00:21:21,350 --> 00:21:26,390
execution for those that are familiar

00:21:23,630 --> 00:21:29,330
with C sharp threads or Java and those

00:21:26,390 --> 00:21:31,130
kinds of things it is very similar it's

00:21:29,330 --> 00:21:32,570
a set of JavaScript that executes in

00:21:31,130 --> 00:21:34,430
parallel to your main page and it

00:21:32,570 --> 00:21:36,020
listens to events it also triggers its

00:21:34,430 --> 00:21:37,250
own events so there's two bits of

00:21:36,020 --> 00:21:41,390
JavaScript executing can talk to each

00:21:37,250 --> 00:21:43,490
other the the Java scripts that gets

00:21:41,390 --> 00:21:45,110
loaded in a serviceworker it installs

00:21:43,490 --> 00:21:46,730
itself on the first page load and then

00:21:45,110 --> 00:21:48,770
it's available to be executed on the

00:21:46,730 --> 00:21:50,450
next page load so if you think about

00:21:48,770 --> 00:21:53,210
that when you first access a web page

00:21:50,450 --> 00:21:54,560
it'll install a serviceworker and then

00:21:53,210 --> 00:21:56,900
the next time you reload that web page

00:21:54,560 --> 00:21:58,100
it'll execute the serviceworker because

00:21:56,900 --> 00:21:59,240
you've hit the page the first time you

00:21:58,100 --> 00:22:00,560
don't just need to execute it you've

00:21:59,240 --> 00:22:05,000
already downloaded the page so we're

00:22:00,560 --> 00:22:07,220
already running so this is approximately

00:22:05,000 --> 00:22:10,070
what a serviceworker usage would look

00:22:07,220 --> 00:22:12,080
like at the top we've gots how we would

00:22:10,070 --> 00:22:14,090
register the service worker using

00:22:12,080 --> 00:22:15,290
navigated or serviceworker we're able to

00:22:14,090 --> 00:22:16,850
do a really quick check to see if it's

00:22:15,290 --> 00:22:18,200
supported by the browser if it's not

00:22:16,850 --> 00:22:20,060
then we just don't use a serviceworker

00:22:18,200 --> 00:22:21,730
the page will still work just won't work

00:22:20,060 --> 00:22:23,660
offline

00:22:21,730 --> 00:22:25,820
once we've registered the serviceworker

00:22:23,660 --> 00:22:29,930
in this case I've called it s WJ s then

00:22:25,820 --> 00:22:32,720
s WJ s gets executed so this is where it

00:22:29,930 --> 00:22:35,690
installs so the install phase here

00:22:32,720 --> 00:22:39,410
happens on the very first time that the

00:22:35,690 --> 00:22:41,600
serviceworker is downloaded and then on

00:22:39,410 --> 00:22:43,850
subsequent times it can execute the

00:22:41,600 --> 00:22:46,040
fetch so fetch there it actually hooks

00:22:43,850 --> 00:22:48,920
into all of our Ajax requests that the

00:22:46,040 --> 00:22:50,630
main JavaScript thread runs and we're

00:22:48,920 --> 00:22:51,880
able to do things like caching or

00:22:50,630 --> 00:22:53,860
serving from cache and

00:22:51,880 --> 00:22:55,539
of things this enables that there's a

00:22:53,860 --> 00:22:57,549
bunch of other events that this does as

00:22:55,539 --> 00:22:59,950
well and it enables some really complex

00:22:57,549 --> 00:23:01,299
patterns these complex patterns can be

00:22:59,950 --> 00:23:04,350
helped a lot by these tools by the

00:23:01,299 --> 00:23:07,179
Google team so the first one

00:23:04,350 --> 00:23:10,120
serviceworker precache allows you to in

00:23:07,179 --> 00:23:11,530
your build time determine which static

00:23:10,120 --> 00:23:14,289
assets might be available for the user

00:23:11,530 --> 00:23:16,150
and then it will pre cache those for the

00:23:14,289 --> 00:23:17,740
serviceworker and the second one the

00:23:16,150 --> 00:23:20,799
serviceworker toolbox allows you to do

00:23:17,740 --> 00:23:23,350
dynamic assets caching so for example a

00:23:20,799 --> 00:23:24,700
api request you might want to do that

00:23:23,350 --> 00:23:26,350
dynamically you don't want to catch that

00:23:24,700 --> 00:23:29,020
at Build time so that's what they'll be

00:23:26,350 --> 00:23:31,600
use for there are two prerequisites for

00:23:29,020 --> 00:23:33,280
using serviceworker at HBS there's no

00:23:31,600 --> 00:23:35,700
technical reason not to use HTTPS

00:23:33,280 --> 00:23:38,620
anymore with things like let's encrypt

00:23:35,700 --> 00:23:41,440
SSL certs are quite easy to obtain and

00:23:38,620 --> 00:23:43,270
use and the other one is the manifest or

00:23:41,440 --> 00:23:45,429
JSON think of that like a package.json

00:23:43,270 --> 00:23:47,590
bid for your website it has a name and

00:23:45,429 --> 00:23:48,850
has a description has an entry point and

00:23:47,590 --> 00:23:51,190
a couple of other bits and pieces that

00:23:48,850 --> 00:23:54,280
are required for the browser to believe

00:23:51,190 --> 00:23:56,110
that yes this is an offline app so let's

00:23:54,280 --> 00:24:04,179
get into augmented reality this is is

00:23:56,110 --> 00:24:05,799
the fun part so virtual reality is

00:24:04,179 --> 00:24:07,750
really cool we saw a little demo of that

00:24:05,799 --> 00:24:09,700
before where we're in a 3d scene and I

00:24:07,750 --> 00:24:12,610
was moving the device around and it

00:24:09,700 --> 00:24:14,110
tracked my motion pop that into a

00:24:12,610 --> 00:24:16,690
head-mounted display and you fully

00:24:14,110 --> 00:24:18,400
immersed and in this virtual world that

00:24:16,690 --> 00:24:19,720
we've created what I really like though

00:24:18,400 --> 00:24:22,210
is augmented reality augmented reality

00:24:19,720 --> 00:24:23,740
says the environment around you is real

00:24:22,210 --> 00:24:25,150
enough we don't need to create a new one

00:24:23,740 --> 00:24:27,640
but maybe you want to add to it maybe we

00:24:25,150 --> 00:24:29,890
want to enhance it a little bit really

00:24:27,640 --> 00:24:31,240
good examples are heads-up displays so

00:24:29,890 --> 00:24:33,070
if you play the first-person shooter

00:24:31,240 --> 00:24:34,630
game the health bar and ammo and those

00:24:33,070 --> 00:24:37,090
kinds of things that's that's augmenting

00:24:34,630 --> 00:24:39,730
the reality around you other ones might

00:24:37,090 --> 00:24:41,140
be say using maps and it's navigating

00:24:39,730 --> 00:24:43,000
and you have a head-mounted display on

00:24:41,140 --> 00:24:45,159
you can walk around in the real world

00:24:43,000 --> 00:24:46,690
but it'll also drop say app in your

00:24:45,159 --> 00:24:49,000
destination so you know you need to head

00:24:46,690 --> 00:24:51,390
in that direction so they're really good

00:24:49,000 --> 00:24:54,450
things we can do all that in JavaScript

00:24:51,390 --> 00:24:57,850
and break it down into three parts so

00:24:54,450 --> 00:25:00,130
we'll go through them one by one so to

00:24:57,850 --> 00:25:01,900
access the camera we need to be able to

00:25:00,130 --> 00:25:05,380
do that to actually show the reality

00:25:01,900 --> 00:25:08,670
around us we use getusermedia so you

00:25:05,380 --> 00:25:12,070
user media can get both video and audio

00:25:08,670 --> 00:25:15,220
which is quite good it allows us to

00:25:12,070 --> 00:25:18,040
pause play stop like any kind of media

00:25:15,220 --> 00:25:21,370
that we might play in a browser it has a

00:25:18,040 --> 00:25:23,980
few quirks when we call this it will ask

00:25:21,370 --> 00:25:26,580
for permission from the user the user

00:25:23,980 --> 00:25:28,570
then has to say ok or decline if

00:25:26,580 --> 00:25:30,550
initially what you want to do is say

00:25:28,570 --> 00:25:32,290
display the rear facing camera from a

00:25:30,550 --> 00:25:34,060
device when there's multiple cameras to

00:25:32,290 --> 00:25:35,290
select from you might want to enumerate

00:25:34,060 --> 00:25:36,850
those devices first and there is a

00:25:35,290 --> 00:25:38,470
command to do that but if the user

00:25:36,850 --> 00:25:40,270
hasn't provided permission first

00:25:38,470 --> 00:25:42,070
then the enumeration will return just an

00:25:40,270 --> 00:25:43,210
empty array which is very confusing the

00:25:42,070 --> 00:25:44,320
first time you're coding this up in like

00:25:43,210 --> 00:25:46,090
why aren't I getting this list of

00:25:44,320 --> 00:25:48,340
devices you first need to ask for

00:25:46,090 --> 00:25:51,100
permission by executing getusermedia

00:25:48,340 --> 00:25:53,920
then enumerate the devices and then call

00:25:51,100 --> 00:25:55,630
getusermedia a second time with that the

00:25:53,920 --> 00:25:58,390
device ID that you were actually after

00:25:55,630 --> 00:25:59,680
there's a couple of gotchas there but

00:25:58,390 --> 00:26:03,190
when it works it works really nicely

00:25:59,680 --> 00:26:06,460
it's a quite a simple API so here's a

00:26:03,190 --> 00:26:10,450
demo of rendering video in 3d and

00:26:06,460 --> 00:26:13,560
hopefully this one will will work and

00:26:10,450 --> 00:26:15,850
it'll be a shot of my face if it loads

00:26:13,560 --> 00:26:17,380
using the camera on my laptop yeah there

00:26:15,850 --> 00:26:20,710
we go go so we can see that there are

00:26:17,380 --> 00:26:23,530
two 3d objects in the scene and myself

00:26:20,710 --> 00:26:27,460
being shown on the video and this is in

00:26:23,530 --> 00:26:30,130
fact a 3d a 3d space again very similar

00:26:27,460 --> 00:26:33,760
to the one we saw before so to do that

00:26:30,130 --> 00:26:38,620
we use a very similar scene as before

00:26:33,760 --> 00:26:40,900
this time we've added a a camera and the

00:26:38,620 --> 00:26:43,890
a video billboard so the video billboard

00:26:40,900 --> 00:26:46,600
basic calls getusermedia under the hood

00:26:43,890 --> 00:26:48,400
interestingly what we need to do is when

00:26:46,600 --> 00:26:50,590
you saw there the video stayed static

00:26:48,400 --> 00:26:52,900
off to the side but what we want to do

00:26:50,590 --> 00:26:54,700
is we want to say okay if that red area

00:26:52,900 --> 00:26:55,900
is the camera and we're looking at

00:26:54,700 --> 00:26:57,640
something in the scene which is the

00:26:55,900 --> 00:27:01,120
cylinder then we want to be able to lock

00:26:57,640 --> 00:27:02,950
the video display to be where the video

00:27:01,120 --> 00:27:06,100
where the camera can see is it called

00:27:02,950 --> 00:27:07,780
the frustum frost frustum and we want to

00:27:06,100 --> 00:27:10,380
be able to lock it to that frustum so

00:27:07,780 --> 00:27:12,790
what we can do is we can add this extra

00:27:10,380 --> 00:27:14,890
as extra setting this extra add should

00:27:12,790 --> 00:27:17,320
be there frustum lock and that will make

00:27:14,890 --> 00:27:18,269
sure that that video it sticks to where

00:27:17,320 --> 00:27:21,419
you're looking in

00:27:18,269 --> 00:27:25,580
3d so what I'll try to do here is let

00:27:21,419 --> 00:27:29,269
another demo up on to onto my phone

00:27:25,580 --> 00:27:29,269
bear with me for one moment

00:27:41,799 --> 00:27:46,539
all righty and so you can see here that

00:27:43,690 --> 00:27:51,940
it's asking me to allow the usage of the

00:27:46,539 --> 00:27:54,690
camera and so if I select allow then it

00:27:51,940 --> 00:27:56,710
will start to load the camera

00:27:54,690 --> 00:28:00,159
unfortunately the video streaming is a

00:27:56,710 --> 00:28:02,110
little bit slow it looks much smoother

00:28:00,159 --> 00:28:05,619
on my on my device but then we can also

00:28:02,110 --> 00:28:08,379
interact with with the scene by grabbing

00:28:05,619 --> 00:28:09,940
the ball and say for example throwing it

00:28:08,379 --> 00:28:11,799
around same as we did before

00:28:09,940 --> 00:28:14,700
looks like the streams stopped there so

00:28:11,799 --> 00:28:15,840
that's that's an example of loading the

00:28:14,700 --> 00:28:19,179
[Music]

00:28:15,840 --> 00:28:20,499
loading the video and using that as an

00:28:19,179 --> 00:28:22,840
augmented reality system so we can

00:28:20,499 --> 00:28:28,809
display the 3d over the top of the

00:28:22,840 --> 00:28:30,639
videos and that is how to build a 3d

00:28:28,809 --> 00:28:32,049
location-aware offline first once the

00:28:30,639 --> 00:28:34,480
catchy moths massively multiplayer

00:28:32,049 --> 00:28:37,149
online game with shared world and

00:28:34,480 --> 00:28:37,870
augmented reality in your browser thank

00:28:37,149 --> 00:28:42,930
you very much

00:28:37,870 --> 00:28:42,930

YouTube URL: https://www.youtube.com/watch?v=z-Vq-aiQTXg


