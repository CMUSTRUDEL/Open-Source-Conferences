Title: Madalyn Parker - Uncharted territory: using aXe to forge a path
Publication date: 2018-04-11
Playlist: JSConf AU 2018
Description: 
	I remember attending my first JSConf in 2014 and watching Marcy Sutton talk about accessibility and the Shadow DOM. I was hooked on creating an accessible web for everyone. However, it's really hard to get accessibility prioritized when you're running as a lean startup.

Years later, my company is ready to hop on the train and now we're working to implement the first ever ADA compliant chat box used in a support and sales context. I've seen lots of talks on accessibility basics and implementing aria on static sites, but few that demonstrate what it's actually like to approach a codebase architected without accessibility in mind (especially one that will run on sites you have no control over) and add that layer in.

I'm working on this project now (with a due date of Dec 2017) so I don't have immediate outcomes to list here but I'll cover the problems I ran into and will hopefully be able to help other developers in similar situations with their code bases.

I want to show that it's okay to roll out accessibility changes bit by bit, that it doesn't have to be all or nothing, and that there are good tools out there to help you out. I think the stumbling blocks I come across (and overcome) in this project would be useful for others who find themselves in my position. Part of what made this project difficult was my inability to accurately estimate how long or how much work it would take to update our application. Hopefully, with the lessons I learn, Iâ€™ll be able to help someone else blaze their own trail at their company.
Captions: 
	[Music]hi there so I am Madeline and I am hereto talk to you about forging a path in aweb application that was built withoutaccessibility in mind as a novice whoknew sort of the basics of accessibilitybut had only really seen it implementedin simple applications or from theground up and I basically didn't reallyknow what I was doing here but I thoughtthat my journey might help some of youbecause I feel like this is the storythat a lot of developers have wherethey're thrown into an application thatexists already that is pretty complexand was built without this layer in mindwithout inclusion for everyone in mind Iwork at ole arc we make a chat widgetthat sits on your site so that you cantalk to those who visit your site andthis is a really amazing thing thatallows your site to be more usable forsomeone who is having issues with yourtechnology or who can't find that helparticle and I think it was reallyimportant to make chat usable forabsolutely everyone especially those whomight be able to benefit from chat themost so ooh why accessibility why isthis something that we talk about why ami talking about it why should you carewhy is this important there are lots ofreasons that people talk about it I amnot really going to talk about any ofthem because I think that this is wayless important than the fact thateveryone should be able to use the webthe web is this magical place where youcan accomplish things that you wouldn'tbe able to otherwise where you canconnect with people that you wouldn'tknow otherwise where you have access toinformation that you didn't even knowwas out there and the fact that somelarge portion tens of millions of peoplein the US alone based on surveys andstatistics so I guess I'd mentioned oneof them are unable to use the webeffectively so I'm gonna revisit thisquestion again later but I'm going totalk about that that was the Y that Ijust talked about it's talked about thewhat of this problem what is webaccessibility about and when I startedmy project I thought this was aboutfollowing that map about looking at thatpath that was already forged before meand making it a little bit wider makingsure that you know the brush was out ofthe way and that someone could you knowreasonably follow after me so this meantmeeting a lot of standards and thenbeing compliant with these rules thatsomeone else had had made up and Ithought that this was a major blocker onme shipping I thought okay I had to meetabsolutely everything I had to make surethat this works with every technologyevery screen reader every operatingsystem every browser I have to make surethat every single element on my page isreachable by the keyboard and so thatboils down to rules I'm a rule followerit's just how I'm wired and so when Isee this list of things I'm like okaywell I do this and then I do this then Ido this and that's how I accomplish thisthing is by following these ruleseasy-peasy oh one quick thing I am goingto be talking about screen reader usagemostly there are plenty of other ways tomake your application accessible butthis is the main thing that I attackedin this application given my limitedresources so I had these epic XHaitians in the back of my mind I hadthese rules that I was going to followhere's a picture of me on an actualbackpacking trip and now I have todecide what goes with me on that tripwhat tools do I have with me alreadyjust with me what do I pack in my bag tohelp me forge that path and then maybebuild a bridge so that you know everyonecan see the wonderful views and everyonecan hit the amazing checkpointsthroughout this forest that isn't anaccessible app and I wasn't really surewhat should go in that pack from thebeginning because how do you approachthis real-world abstract problem in thisinaccessible application started in or code is like it's it's been through manydifferent versions and it's been builtupon and built upon and built upon andthere are many layers involved and thenthere's this additional layer with ourchat box where it sits on sites that wehave no control over and so to make surethat it works with other people's stacksand it makes make sure that it worksagain with different browsers anddifferent technologies but somethingthat I had in the back of my mind and Iwasn't really sure where to start I didhave this part figured out but I thinkit's important to talk about scoping Iknew that I was going to be working onour chat box but I think it's importantto ask these questions what is smallenough for me to cover with the time andresources I have what could benefit themost from updates and what has thefarthest reach and in my case that wasthe chat box it was fairly wellcontained the UI had been updatedrecently to use react and redux so andreact lends itself very well toaccessibility it could definitely standto benefit the most because it was theoldest application and it does have thefurthest reach if I had started with ourhelp center or our marketing pages or adifferent front-end part of our our sitelike our billing app or configurationthat would reach our customers andthat's a sizeable amount but it wouldn'treach their customers so that's anexponential reach there's our chat boxis on so many sites and it would help somany more people than just editing oursite so then I took stock of myresources I laid things on the table andI said okay what do I have to work withhereI had me I had one month I had thisamazing opportunity where I changedteams mid product cycle which meant thatI had a month before the next one to dosomething I was really passionate aboutand that was accessibility I had browseraudit tools most modern browsers havethese audits that you can do similar tothe one that Britney talked about justbefore this and one of them isaccessibility so you can run an auditand they'll tell you all of the moreobvious holes that are in your websitethings that you need to fix like thisimage doesn't have an alt tag or I'm notsure what this div does things like thatI could talk to consultants there aremany places that can do this this auditfor you and give you advice and are alot more have a lot more expertise thanI do but given the first two bulletshere me one month I skipped this part Idid consult the web I liked communityand they are wonderful and welcoming andlovely and they helped me with a coupleproblems that I wasn't quite sure how toapproach on my own and then I was foundout that I could automate some of thisthrough node modules and from the titleof my presentation I'm sure you knowthat I'm going to talk a lot about axecore and then react Alli is anotherwonderful one I include both on load foreach of our applications and then itwill pop all of those audit resultsright into the console as warnings soit's really obvious when you knowsomething is inaccessible on whatevercomponentpart of your app you are working on inwhatever state it's in at that point sothis is everything I decided to bringwith me so again I'm gonna talk aboutActs for a second I was pretty biased inchoosing this particular technologypartly because it is created by DQsystems which happens to be based in AnnArbor Michigan where I live and theythey in addition to having an awesomeopen-source tool that you can use toautomate some accessibility things doconsulting and also do education I abouthalfway through working on this projectI attended our free webinar that theyhad called how persons with disabilitiesuse the web and it featured a panel ofpeople with varying experiences whotalked about their reliance on screenreaders and when you think about screenreaders or at least when I did in thebeginningI I knew immediately that those withblindness would be using the screenreader but it didn't occur to me that umyou know those with lower vision orthose with short-term memory loss orthose who have traumatic brain injuriesthose who are having difficultyconcentrating like those with autism allrely on the screen reader also a lot ofpeople suffer from chronic pain and havemobility issues and you know using amouse with that fine motor control isreally difficult for them and sonavigating by keyboard is really reallyimportant and realizing all of thesedifferent use cases really opened myeyes to like all of these differentpeople that I could reach and how muchmore robust I could make our applicationso the other reason I'm biased here isbecause Marcy Sutton look this woman upshe is the queen of accessibility workson Act's core and she gave the firstsuccess of lady talk that I ever saw atjeaious comp us and she absolutely blew my mind and itwas something that I was sort of alreadyinterested in but dislike clinched itthat I needed to be working on this somy game plan here was to get exploreworking with my testing stack run thoseaudit tools and all of my componentsmake sure it was included in my frontend components address those results dosome manual testing and then addressthose so why did I start with testingit's because um there are many reasonsbut let's go through a few it provided astructured way for me to start chippingaway at the problem in front of me againI am a rule follower so if I have a setprotocol here I I know what I'm doingand so automating this step instead ofme going through the browser and lookingwhat was in the console and you knowrunning through absolutely every stateof my app it's gonna take a lot of timeand doing this is way faster so havingthis tool with which to like blaze mypath was amazing the other great thingis that it's really repeatable so Icould put this in one component and thencopying my tests into all the rest ofthe components and quickly see whichone's failed and fix those problemsreally quickly then it even goes anotherlevel because my team could look at thestuff that I had just done and ported totheir projects and now all of theirprojects were tested furthermore if Iupdated any one of those components andit broke my tests I would know thatthere was an accessibility issue even ifyou know I hadn't run it in a realbrowser and technically my code lookedgood so these were all reasons that Iwanted to start with text so let's talkabout what that actually involved themain function that ax core has forrunning an audit is called ax runit takes context which is a section ofthe Dom we are testing so you pass iteither the document that's on the Dom ora specific node and then you give itoptions like it's okay if we don't lookat color contrast right now or let'signore plain divs or let's look at thesespecific selectors let's you know pairdown which ones we care about right nowand then you pass in a callback to becalled after the audit actually runs andthat result returns these results whichare arrays of what passed and whatdidn'tso there's an array of violations anarray of what passed and I mostly lookedat that array of violations so this codeis based on a gist that I found of MarcySutton'sI will be tweeting out resources at theend of this where we automate thosetests and make a component that we canjust include in our test files and thenuse it to run those tests and I tried tomake this as like stack agnostic aspossible so that it's not relying on anyone framework but note that it is inCoffeeScript because I am one of the fewpeople that really likes CoffeeScript soin this first one note that I amcreating a brand new context of the DOMand this is used using a component thatI wrote that consists of very fewfunctions that I will also be tweetingout synergist that used uses jeaious Domand so I created a new Dom I get thedocument of that Dom I create a div andattach it and then I mount my componentto that div and then I return thewrapper the div and the DOM and I needthe div and the Dom so that later I canclean up after myself because whenyou're tweaking the DOM and yourmounting things and then you're changingStates it's important to make sure thatall of your tests don't get those sideeffectsso afterwards I removed that div fromthe Dom and I blow it away entirely andhere's the larger function which is morecomplicated than it looks I mean itlooks more complicated than it isand I actually run the audit I take mynode which in my case is usually just araw component I react for component andthen I return a promise and I run my axecores out run with that node and theconfig and if during that auditsomething goes wrong I reject thatpromise and otherwise I try and assertthings and I want to make sure thatthere are no violations so I assert thatthere are no violations has violationsas false and that the length of theviolation list is zero and if that's thecase I resolved my promise my testshould pass otherwise I reject it so mytesting flow is pretty simple I requiredthis module that I've created my allyhelper at the top of the document whichis not in my code here but that's what Idid and then I say it shouldn't haveaccessibility errors I've created apretty simple component here which isjust renders an image and it takes URLand alt text as parameters and then putsthose into the image tag and if I renderthe image component and I don't putanything in the alt text it will foundfail my ally test which is awesome whichis why I started with the imagecomponent because it's really easy tofail a test without that alt text butyeah that is the nitty-gritty of mytesting and this is awesome because itcaught a lot of my problems it workedreally wellthis alerted me to the fact that all ofthe SPG's in my project weren't properlydescribed and so a screen reader likehad no idea what they were it alerted meto the fact that a lot of my inputs wereimproperly abled and didn't have onchange eventswhat else this find of this family likelinks that we were using as buttons orthings that had the wrong rolls allsorts of things that you know I I couldhave cleared on my own but it would havetaken me way more time and the fact thatthis was repeatable and automated andquick was really powerfulso with that past cleared I can see thebigger issues in my application I couldfigure out what I needed to movephysically manually so I'm just gonna gothrough the UI of our chat box and pointout what a user should be able to do andthen what they were able to do using ascreen reader in the keyboard so here wehave a collapsed version of our chat boxabove it is our attention grabber whichjust bounces and draws your eye fromwherever it is on the page down to thebottom right where the chat box usuallylives it's just a visual element andthen there's the actual chat button thathas some call to action text and an SVGrepresenting whether someone isavailable a chat box or an envelope ifit's going to be asynchronous incommunication and it will be an emailinstead of a chat that the user canexpect and they could get to that thatthey could read that call to action textthey could see contact Madeleine thatgets the rainbow I can see a pretty viewbut they couldn't really see the imagefor the attention-grabber that SVG wasbroken and knowing that the chat box isthere at all was really hard for ascreen reader user because if you'reusing a screen reader in the keyboardyou're starting at the top left of thepage and you are experiencing the weblinearly which means that you are goingthrough a page from left to right fromtop to bottom and where's the last placeyou get bottom right so it's unlikelythat person even knows that chat isavailable and there and so I have treesto the left and I was asked why aretrees bad as because they're blocking myview from the beautifulrainbow so I get to find an effectiveemoji that went was my wilderness themeso here is a conversation in action usercan see that there is a button to endthe chat there is a button to collapsethe chat and then there is an text areawhere they can enter the chat and pressENTER to send it three rainbows but thatSVG at the top is a broken they againcan't see the attached file SVG or thesin chat SVG the actual chat they can'tsee it all unless they do a lot of heavylifting and as chats come in its justradio silence from the screen reader andthen I have another red box here becauseif the chat box opens which you can dowith JavaScript or you can do if thechat is initiated from the other end notthe visitors end it will pull yourcursor from wherever it is on the pageand put it right here and how terribleis that if you are like using a screenreader and reading some part of the pageand then all of a sudden you're notwhere you expect it to be that's ahorrible experienceso five trees and you know what becausethis is the main reason that theapplication exists chat I'm adding moretrees because it's making it harder sohere's an offline no this is after thechat has ended and you can still see theconversation there are a couple buttonsyou can press here and then there'smessage saying the chat is endedyou can press that button that says sendtranscript you can press the button thatsays write chat and you can press thebutton that says start conversation fromthe keyboard using screen reader threerainbows however again you can't seethose SPG'sand you can't really see the previousmessages and you don't see the chat hasended message and then even worse but Ididn't include this on the slide if youclick on send transcript or write chatit pops up a module which is just likeon the Dom this is still on the Dom andit lays it over whatever was therebefore so it's the ten it is possiblethat your cursor is trapped here and ifyou continue to tab it will continue togo in these elements and you won'tactually get to you know fill out thecentra and transcript form or do the rchat survey because you can get thereand that's terrible so more trees thanrainbows once again so here is ouroffline chat box not here every timesI'd still have to hear from you you cansee that like a way message there is aforum where you can enter your name andyour email and an actual note and thensend it that's all great however youcan't see which ones are required and ifany errors come up like if you type inan invalid email address for examplethat error message is not communicatedvia screen reader at all again justsilence you'll have no idea what's wrongand if you press send you you don'treally know that anything happens so alot of events aren't really making it soI noticed I distilled all of thisinformation down into a few categoriesthere was some extra elements a lot ofstuff was on the page that you couldn'tnecessarily see I had some navigationissues I had those hidden elements wherethings are overlapped and then therewere live areas the chat itself thatwere totally inaccessible to a screenreader so at this point I had assess tothe path before me and I had moved awayquite a bit and it was time to buildsomething newand pruning is not something you thinkof is building but I think everyone canagree that some of the best pullrequests are those that have a lot ofremovals so I looked at this and I saidwhat can go and this is something that Italked to the web Ally community about Iwas like okay I have this visual elementthat sits above our chat box that'scalled the attention grabber that'ssupposed to bring your i from whereverit is on the page down to the bottomright but if someone has worked hardenough to tab through all the waythrough linearly to the bottom right ofthe page and they get there that's onemore hurdle before they get to theactual chat it's just another barrierand they're like yeah hide that we don'tneed that so sometimes in order tocreate a good experience you do have toexclude some things so that is Ariahidden then I place some new trails likeI said it's it's unlikely when you geton a page that you're gonna knowsomething is sitting in the bottom rightthat might help you so one of the firstthings that I did was to create a linkto the chat box and that link allows usan ID on the chat box which allows us tolink from the top right to the top leftto the bottom right which is superhelpfulthen there was adjusting focus and justmaking sure that you know all of theseoverlaid UI is respected what was on topin both in tabindex and Aria hidden sothat you know someone's cursor moved towhere it needed to be depending on whatwas on top of the chat box and here'swhere it gets really powerfulturn-by-turn directions this is thematerial that I used for my bridge therewe go our announcer and on the Leftyou'll see are really simple div it's adiv with a paragraph in it that has sometext but the power is in the attributeson that div tag aria-live is basicallysaying how annoying should this div beand i have it set to assertive which isthe most annoyingyou can tell it to be polite or to beoff aria atomic means hey let the userknow when something in this div changesand then the role of alert means anytimesomething happens shout it out and oftenwith a chat box that role would be logbecause a chat is a log of things butthis is a list of events that happen inthe chat box it's not the chat myself sothis gets the role of alert and thenthis was hidden from the UI via CSS isawesome clip functionality and my excusefor making this extra annoying and analert was because I manually controlledwhen we actually make those changes instate so I said if the chat box is focusadd that event text to our list ofannouncements then join that list ofannouncements with periods and then dumpthat list into the announcer and thenthe announcer will read it out and ifotherwise just add it to the list ofannouncements and when it's focusedit'll get dumped in and so you can see achat box here the user says hello therethe announcer reads out you sent hellothere let's say they deviate away andthey come back and messages havehappened it'll say Madeline is typingMadeline sent hi how can I help youMadeline sent sorry I'm back and ifthere were errors it would say you knowor if the chat ended it would say likechat has ended it would it would readout all of these events and this isreally powerful this is wonderful liveregions are magic so again what does webaccessibility about how is what is thewhat before I thought it was rulesit's about usability it is about makingsure that your actions are repeatablethat the accessible thing is the easything that patterns are established thatsomeone doesn't lose energy goingthrough your site because it takes a lotof energy to remember what the screenreader has said and to get work your waythrough a webright it's about starting somewhere Idid not accomplish absolutely everythingour chat box is not quote-unquote ahundred percent compliant but you knowit's part of the way there I chippedaway and now whoever follows me is ableto make more strides those steps add upand that means that we can iterate onthis is if there's a small thing thatyou can do in your project go for itit's okay that you you know don't haveto do everything listening to meI can't get through a presentationwithout showing my rabbits they arefantastic and adorable my slides arehere I will be putting more resourcesinto them because I think my resourcelist is incomplete at this point thankyou so much I hope I've sparked somelike inspiration in you to work onaccessibility because it's so important[Applause]you
YouTube URL: https://www.youtube.com/watch?v=JWqHioGOELs


