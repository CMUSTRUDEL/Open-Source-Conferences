Title: Suz Hinton - I'm afraid your browser has been talking to the robots again   a gentle intro to WebUSB
Publication date: 2018-04-11
Playlist: JSConf AU 2018
Description: 
	The browser’s capibilities have snuck up on us over the years, and it’s turned into a full blown operating system! "But wait," I hear you protest, "it’s not like the browser can talk to stuff I have plugged in to my USB ports!". Ah! But it can!

The new WebUSB spec has arrived, and is already supported in at least one browser today. The previous hacks of connecting browsers to robots and other hardware will soon be a thing of the past. WebUSB as a first class API citizen opens up some great opportunities to create new and delightful experiences with robotics.

I’ll introduce you to the WebUSB API, its history, and compare it to previous ’hacks’ to demonstrate why this is such a big deal for you, as a web developer. There will be real hardware shown on stage ready to inspire you to think outside of the box of what browsers are really meant to be used for.
Captions: 
	hello thanks so much for having me hereyou might not be able to tell from myaccent but as I was introduced I wasactually born and raised here so veryvery honored to be here for the last dayas comfy you so how was lunch yeah Ithought it was pretty good too I waschoking it down because of Noah but it'sfine so so we're going to be talkingabout a pretty exciting new API that youmight have accidentally discovered inyour browserit's called webby or speed I'm going totry and give you a gentle introductionbut after I proposed this talk and itwas accepted I realized a moreappropriate title was how do you sendthe Sagan'sin a browser and so it's been aninteresting challenge of a sense so I'mSuze Hinton you can follow me on githuband twitch and twitter as like no op catif you'd prefer to call me Newt catthat's also fine I know some people werereally sad when they found out it wasn'tOOPso I work on open source IOT librariesin my spare time and then I'm I actuallyget a salary from Microsoft during theday and I do developer relations and Imostly I'm concerned with IOT butobviously that kind of goes hand-in-handwith things like machine learning andbig data as well so I sort of do amenagerie of things there to help smoothover the experience when you're usingour tools so today's aim is for you tosee the browser and the web in adifferent way I am bringing an agendathat I've been banging on about for thelast I think four years now so some ofthis might be familiar to some of you Iam back to talk about this and I alsowant you to not be scared of hardwareand microcontrollers because this isactually really exciting if you're afriend and developer you now have theopportunity to have an excuse to learnmore about this stuff and potentiallystart writing hardware drivers in thebrowser in JavaScript which is reallyreally fun so today we're gonna becovering just a brief history of the weband devices and how we've done things inthe past before this API what web USB isand how that differs from you know ourprevious attempts of this how to use webu.s. speed I'm going to pray to the demogods ahead of time so that they'll sortme out and be nice to me so if we arelucky there'll be some demos and alsojust to talk about the futures ofsomewhere I think that it is going sofirst a history of web USB which meanshow do we use you know the browser tocreate an interface to actual hardwareand we've had a varied amount ofapproaches in the past I've beensuccessful some not so muchso my journey with web in USB started inthing called flash communication serverand cert proxy so I'll explain brieflyhow that worked let's say you have amicrocontroller let's say with anArduino because a lot of a lot of youmight already know what nods we know isnode we know is a really really reallygreat abstraction of hardware where youhave a microcontroller that you can veryeasily plug things in and out of and youcan create really cool interactiveinteractive experiences with it so theArduino I think came out around immediately and then I was like how do ihook it up to the browser though becausei know HTML but I don't think thatArduino talks hey - um OHso you installed this program called sirproxy which basically takes the serialport connection and the data coming inand out of the Arduino and it proxies itto a TCP socket so you can treat thatstream as a TCP stream and then youactually write your flash file and thenyou essentially write some flash stuffin flash communications over to connectto that socket and to be able to writeto it and read from it from there youcan just whack the SWF file that youexport from flash onto a web page andyou don't that was quite a hack thoughto get that going so here is just likesome of the code it's not superimportant it's just for own history andarchaeological purposes you have yourActionScript file where you're opening asocket to a local host and with so proxywhen you start it up you give it aconfig file essentially saying what portyou want to listen to what what TCP portyou actually want to open up the baudrate of the device and the bits and theparity and timeouts and all that kind ofstuff so it was okay but obviously weknow kind of where this journey went inI got the iPhone it didn't run flash and so after a fewyears you know it flash definitely wentout of vogue because JavaScript startedbeing performant and there was somepretty major like accessibilityperformance and security issues withflash as well so that kind of died forme as a way of doing things because Iwas just kind of feeling like I wasstuck in the past when I was doing it soI believe it was in Matias can correct me I would love ifsomeone could give me the actual date onthis but I think it was technology called Chrome serial came toChrome browsers and so for a few years Iwas actually playing with this it wasvery very cool unfortunately I'llexplain what happened to it later okayso we have the same scenario we have anArduino we have a browser and this timewe have Chrome serial which is basicallyan API that you could access veryreadily in the Chrome browser and youuse that in order to have like a way ofreading and writing from the device oopsthen you actually have to have thiswithin a chrome app I'm not sure wherethere was security issues or or what butyou absolutely had to use it in a chromeapp but it was still cool because if youcould write an extension or an app youcould actually start talking to anArduino in a browser and this actuallyreally had a huge impact on theJavaScript community and especiallypeople who were trying to write Hardwarecross-platform like this is really wherethe idea of cross-platform hardwareinterfaces really started becoming athing that were very very compelling sosome of you might have heard of the chipcomputer it was the famous nine dollarcomputer that was on Kickstarter if youdon't know about it that's okay I workedat Kickstarter at the time so that'smaybe why I know about it but it wasreally really cool it was cheaper thanthe Raspberry Pi at the time it wasbefore the Raspberry Pi zero and it wasessentially just Linux on a chip but itwas very very affordable and they didsomething that I was super impressedwith they used a chrome app so that youcould update the firmware on the actualchip you could update the operatingsystem on it which was awesome so youdownloaded this really cool thing calledthe chip flasher and you plugged in yourchip and you just started updating it and I was like this this isliterally what I've wanted this wholetime for so many of my devices and forso many interfaces that I've wanted tomake so I thought that that was superprogressive and you can see how friendlythat looks and how that's going to workon any operating system that can runChrome shortly after that um I thinklast year or maybe the year before do weknow actually came out with a chrome appthis is kind of the web version becauseI don't have a nice high-res screenshotof the chrome app but it is basically aneditor in the browser you can write yoursleek plus plus and it will compile itand it will flash it on to your Arduinoall directly in the browser using Chromeserial which is super magical and theyactually ended up using my library a VLguard wiener to do that so I was likereally really excited to see that it waskind of part of this future and it alsomade me maintain it a little morediligently than I normally would havebut um that was I was just like at thepeak of yes okay so this is a thing andwe're actually proving it so we're gonnabe able to keep Chrome serial rightunfortunately that didn't happen soChrome's serial was never like anofficial web spam it was like very verymuch in the chrome kind of ecosystem itonly worked in Chrome apps so you kindof had to create this whole big thing soif you wanted to have a website that youcould like interact with hardware youkind of had to have this companion appor companion extension that people wouldhave to install and then use yourwebsite so it was a little bit awkwardand chrome apps with sunset for everyoperating system except for Chrome OS inthat was just kind of a shame but itreally kind of got me hooked on the ideathat you know browsers behave likeoperating systems these days so there'sno reason why we can't actually do thisso what do we do these days well westill sort of lean on our good friendthe WebSocket where our browser can bethe UI but we still need some kind ofback-end service that can actually dothe connection to the hardware becausethe browser is very much locked out ofthat so we've got out scenario as beforewe can have something like a node.jsprocess for those of you who have donenode bots that would be something likejohnny-five that node.js process wouldalso have some kind ofwebsocket that it also sets up from theback end and it might also be servingthat index.html at the same time as wellso it's actually doing a lot then youhave this WebSocket where your browsercan connect to it and you're just kindof sending messages back and forth so ifthe browser wants to do something withthe hardware you kind of come up withyour own WebSocket communicationprotocol in order to do that it is stillnot great having this kind of backendcoupling it's just not the experiencethat it should be and this is what makespeople just go back to writing nativeapps which brings its own challenges toit as well so here is like an electronapp I made which is sort of like theHoly Grail like electron allowed you tocombine those two processes together andso I actually have the programmer righthere on stage that I use to program thismonogamist public radio so this is sortof at the point where I sort of ended upquitting hardware interfaces in thebrowser because you know electron uses alot of CPU resources because it's awhole chrome instance and it's also megabytes so people had to download ahundred and ten megabytes just to beable to change the radio station on thisradio and it just felt really excessivebut it was cross-platform so it felt sogood but it's just it just wasn't rightso I sort of just got burnt out you knowit's been like what how many years hasit been almost started doing this and so I'm just likeand you you can actually still use theArduino editor if you don't have ChromeOS what it does is it just has thisbackground app that runs in your taskbarand it is using a WebSocket I wasdebugging it last night it just kind ofuses that very same architecture sothat's another example of something thatuses that so now that we've had a lookat all the failures that we've had itturned to get this stuff going what isweb USB itself because it's prettydifferent to all the other purchas thatI showed so the web USB spec is actuallyreally cool I've been following it overthe last few years and it's definitelygotten fleshed out the introduction partis written in human text not spec textso I promise I'm pulling a lot of thisfrom the spec because it is actuallyreally well written so the web usb APIprovides a way to safely expose USBdevice soservices to the web which is pretty coolit provides an API familiar todevelopers who have used existing nativeUSB libraries and exposes the deviceinterfaces defined by existingspecifications so this is really awesomethis particular point here because noone's reinventing anything it you youcan expect to if you've ever donelow-level USB drivers before and againit is possible to do it in JavaScriptthat's sort of what I've been doing overthe last few years you will bepleasantly surprised that a lot of yourstuff ports over really easily becausethey haven't tried to reinvent the wheeland come up with a new API you're you'restill doing things like controltransfers which I'll show you later andclaiming interfaces and it feels verymuch like a regular low-level USBexperience so I think that was a reallyimportant thing that they did it doesmake it harder to get started but Ithink that a lot of people are going tobe releasing abstractions to help outwith this pretty soon I'm hoping to findthe time to do so so it's important tokind of tell you that Web USB is not thesame as serial so a lot of devices suchas the Arduino and other things theyhave kind of a usb-to-serial like chipin between that kind of tells themachine that it's just a serial politthat you can access so it's actually notreally a one-for-one replacement ofsomething like chrome serial or likenode serial port if you've used thatwith no BOTS it's not quite the same youcan sort of get stuff working but you dohave to provide some shims and you sortof pretending at serial but I'll showyou an example of that later on as wellin the demo but okay so if it's notserial and things like that other thanthe regular USB interface you're used towhy is it better well I really like thatthey code out that it's kind of a saferway to connect your browser to devicesso the first thing you get is if theuser actually has to initiate theconnection event themselves so someonecan't just go to your website and thenyou immediately start polling all theirdevices and trying to hack them itactually just doesn't happen like thatso someone has to physically givepermission like clicking a box or havingsome kind of keyboard event or some sortof user initiated thing and even then itpops up this really nice little modalthat says like you know this websitewants to connect to this device and soyou then have to physically click onthat device and click connect so thereare multi steps there similar to thingslike your webcam and all sorts of otherpermissions you've probably had such asnews websites warning sign to younotifications and you always click theblock button it's very similar here youcan actually click cancel and you don'tactually have to take action which iscool the other thing is there's thisreally neat hook that they've put intolike you can put this in your devicedescriptor on your on your actualhardware itself when you plug it in youcan already suggest a website thatpeople can go to so as soon as I plug itin chrome can helpfully pop up a littlenotification saying hey I detected thisdevice like you probably want to go tothis website to start like interactingwith it and if you're curious fragilesystems is my new domain name I justregistered this week for all of myreally crappy duct-tape demos so if yousee any of my self with dark fragilesystems just be aware it's not perfectcode notes it's probably pretty terribleso so yeah but you're probably thinkinglike soos why why is why are you tryingto use the browser for everything likeyou've got this hammer and you're tryingto like knock all the nails in and halfof them aren't even nails like what areyou doing and I honestly it's becauseI've had to create how do I interfacesbefore outside of the browser andthey're not fast to make they're it'sharder to make them cross-platform it'shard to make them look good and a lot ofthe a lot of the kind of native UI shimsfor things like QT in that it's hard tomake it accessible out of the box or atleast I've struggled with that and so Ibelieve that hard way interfacesshouldn't be left out of the experiencethat we have as front-end developerswhere our stuff is fast to make itscross-platform out of the box it looksgood and it's accessible and so browsersare a commonly installed application ona lot of computers technically thiscould probably be used offline if youyou know do your service workers rightand things like that that could bereally cool and yeah browser-basedinterfaces like I said a rapidlyprototypes you can hot patch that easilyyou can just deploy a change and theuser just Caesarthe next time they go to the website CSSis incredibly powerful as we sawyesterday at CSS conf and you get aconsistent accessibility treat becauseyou're accessing the browser'saccessibility tree so that's always awinner as well and also I really likedthis little gem in the web spec thatconvinced me that maybe I wasn't theonly one that with this API hardwarewith this API hardware manufacturerswill have the ability to buildcross-platform JavaScript SDKs for theirdevices doesn't that sound funlike you buy a device and you're likeyeah don't load the SDK and just startfussing with it in the browser I thinkthat would be really cool if theystarted shipping that cool so how do youuse web --usb how much time we got we'regood all right so you've got your useryou've got your browser you've got yourdevice they plug the device in they areinvited to go to that website so let'ssay that they're already there theyclick something like connect or you knowstart or something like that and thatuser event clicks going to go to thebrowser and from there we can actuallyaccess the USB API so the browser willthen actually look for devices and youcan give it a filter so that you're onlyreally looking for one particular deviceonce it's found a list of device matchesbased on your filter it will return thatto the browser and then the browser willthen pop up that modal that we sawasking the user for that additionalpermission to actually get started oncethat user confirms that permission thenwe can actually start getting the ballrolling so that's why we can open thedevice connection formally we can selectthe right configuration that we want wecan claim the interface and then oncewe've claimed the interface we have thein endpoint and the out endpoint and wecan just start reading and writing whichis really really fun so this is all welland good this is a nice abstraction butwhat is this look like in code so thisis as short as it as it can get to getstarted you supply some options whenyou're actually requesting some devicesso here I'm just giving a filter and I'mgiving a vendor ID so most products thatyou buy off the shelf have a prodID and a vendor ID and so the vendor IDis obviously unique to the person you'rethe company you're buying the devicefrom and the product ID is like for thatspecific product itself so you canfilter on both vendor ID and Product IDand you can be really really specificabout what device you want so that theydon't accidentally pick the wrong one sothat's pretty coolso once you've actually supplied thatfilter you can just call navigator dotUSB dot request device you put in theoptions so that it knows which ones tolook for and if that comes back withoutany errors I know that I'm not catchingmy errors I'm sorry you can console.logbasically you can get the device productname and the device manufacturer nameimmediately so when you first plug in adevice you can read descriptors andstuff and you don't necessarily have tobe like have an open connection to ityet so you can actually glean a lot ofinformation about a device even beforeyou start opening it so this is kind ofthe hello world of Web USB as you cansee it's not a lot of lines to getstarted you do have to wrap this requestdevice in like a user event so you wouldprobably wrap that in a you know buttondot add event list and a click orsomething like that it gets a littlemore complicated and this is sort ofwhere sometimes you need to be familiarwith the device that you're interactingwith but you know we went back up to thetop so we requested the device that is apromise that resolves once the personhas actually like given the permissionfor the device after that we can open itup because we have permission we selecta configuration I don't really have alittle bit too much time to go intothese things because they tend to bemore the actual USB spec itself notnecessarily web USB but if a device hasseveral configurations you choose theone that's right for you and it's justoffering different end points and thingslike that and then you claim theinterface which means that you want totake priority control over the deviceitself so if any other process on yourcomputer tries to interact with it it'sgoing to get locked out so it's reallyjust saying like this USB device is mineand then you claim the interface thatyou actually want so sometimes there canbe several interfaces that a deviceoffice as well so definitely check yourdatasheet and I'll show you an exampleof what that looks like because don'tjust guess the numbers like I was a fewdays ago because as as my friend saw itwas notgood experience so I actually draggedout the datasheet then after that onceyou claimed the interface you canactually start transferring things outand you can wait for responses to comeback in so the first argument oftransfer out is the endpoint you'retransferring out to you and then the thesending and then if we want to receivedata we just say transfer in we give atthe endpoint that we want to read fromso that's number two in this particularcase and then we want five bytes so it'snot there's not a lot of stuff you justhave to know where those interfaces arereally and again your datasheet willtell you that and then you can justconsole.log out your response so that'spretty good if you already know thelanguage that this device speaks thenyou're off to the races so this is sortof what a datasheet this is a screengrab of Dasia I freaking loved attitudesso much they like one of my favoritethings so this actually the stage shecomes from this programmer I have uphere that I'm going to demo later butyou can see all these descriptors andstuff I just looked up those details inthe tables and I was then able to fromthere pick the right interface pick theright configuration it gave me theliterally the number of the end pointsand everything so it's all pretty humanreadable as well the bottom in the tablethe bottom property there says numconfigurations it literally says howmany configurations there are so youknow in this case if there's only onethen you're just claiming theconfiguration zero right because that'sthat's the only one and we're all indexilluminating just get comfortablereading data see it I promise they'renot as scary as they look at first yeahso I haven't really done a lot of HA bydemos for a little while but web USB gotme excited enough that yeah I'm back andwe're gonna do some really fun stuff sothat means some demos just to show youlike the power of web USB to get youexcited because this was oh very drylike very speck so we've driven slidesbut I have to give you a disclaimerfirst so Web USB this is kind of likesnug UGG yesterday he was having to saythis about Houdini web USB is not superstable right now so stuff keeps aroundlet me breaking it worked before thelunch breakcan't give you any guarantees it'll worknow everything I've made with you up webUSB is definitely duct tape City at themoment I have duct tape on stage hereit's not quite duct tape but there istape holding my webcam up the seconddemo I actually wrote on the planeoffline so just bear with me but I thinkit's going to be really fun so let'shave a look at some demos so I'm gonnabring up my camera so can everybody seethat screen right therecool all right so I'm gonna plug thefirst device in so the first device iswhat you're actually looking at it is aan Adafruit feather you can pretty much swap this out for aregular Arduino with a for chip and I've plugged in what'scalled an OLED screen of which I'vewritten drivers for so I cheated and Iused some drivers or originally writtenso I'm gonna plug this in and we'll seeif anything actually happens as itssupposed tothis is always the nervous part okaycoolyes okay so see that popped up thereit's kind of hard for me to zoom rightnow because I have a lot of stuff goingon my screen but it says feather four detected go to web USB dot fragilesystems to connect so I'm gonna clickthat alright it loaded thank you so nowgog he helped me ride a rainbow gradientas the background for my demo thismorning over breakfast I'm very thankfulto him so I think everyone can see thatso I'm not going to do it anymore butthis is a virtual copy of my screen onthe webpage and then we have the realscreen here so we can have a lot of funso we can actually like draw stuff rightwhich is pretty cool but I have somepitches that are readily mage like kindof like turkey pie this morning thanksthat was really awesome this morningthis talk okay so what can we pick let'sdo a cat cats are cool okay so that's apretty neat cat and let's see if we canactually send it to this screen you cantell I'm getting really nervous okay sowe connected you just saw this kind ofwipe thing happen that's just the screenbooting up as I connect to the device sothat seems to be pretty good so if weclick send image hopefully we'll seeokay so you may seereverse cat come up because oh no no nowait no we fix that okay that's fineyeah[Applause]all right what else have we got I tookTim's picture from the speaker pagesorry Tim so there's like a divotversion of damned Tim so I'm using likethe the Floyd Steinberg algorithm tokind of dither it but you can use likethe game boy algorithm to I call it agame boy algorithm what else have we gotwe got Jays Kampf yeah let's send thisone yeah okay all right and I got onemore food this is a very special one forall of you out there who have been onTwitter recently yeah we should have aradar smearawesome cool so as you can see it'spretty quick we are doing a little bitof fun dangling with like fake serialslash web USB and things like that I'mgonna cover the tools that I use to makethis later on but that's kind of an ideaof how much fun you can you can havewith this kind of thing and by the waythe actual this actual interface herewhere you can draw and stuff which I'lljust prove to you is actually workingyeah so that was actually made by myfriend Rachel while potty time excellenton Twitter she created this really coolthing called OLED Jas designer and I'vejust been like hacking it intoeverything I couldn't find right now soyeah so that's awesome thank you so muchalright so that was the first demothat's pretty cool but I sort of thoughtI could do something really dumb and Ithought I could do this thing where so Ihave an Arduino here right and it's justan Arduino you know I'm sorry for thoseof the back who can't see and I havethis AVR isp mark ii programmer pluggedinto it so this is kind of how you canuse web USB to to flash an Arduino eventhough it doesn't even though you wouldnormally need a serial interface for itso this is kind of me cheating and usinga web USB device to flash an Arduino soI didn't quite get it working but I kindof want to show you like how cool theinterfaces you can make for this kind ofstuff so this one doesn't pop up withlike a website or anything whoa I'mlosing my phone okay so this one doesn'tactually pop up with a cool notificationbut I'll take you to the local websitewhere I have it because I only have acouple of minutes left okayso hopefully this is still runningis I got inspired because I found thevery first website I made recently on afloppy disk and it made me so happy so Ijust sort of do something nostalgic forthis demo so and that website was likeeighteen years old it was it wasunbearably dorky okay so I'm gonnaconnect to this AVR USP mark - andluckily four years ago I wrote aJavaScript driver for it so I've sort ofbeen trying to webpack everything nowand this just doesn't work very wellwhen you're on a plane with no Wi-Fi allright so I'm gonna connect it oh it'sdoing it okay so what it did was Igrabbed the program is signatureAVR is pima to it then asked for whatmicrochip signature I have on theArduino and then it showed me my fusesand as you saw there was actuallyflashing a program straight to it soevery time a I'll do it one more timeevery time a page of memory so I thinkfor this tip it's like time it does a little thing on the progressso just show you that one more timebecause I'm really I think it looksreally hackerybut this is the kind of interfaces youcan make for hardware now it's so muchcooler than what you've probably seenout there alright cool so so it'swriting pages writing pages this is justlike using a regular a custom eventemitter which is pretty chill and thenit's done so that's pretty cool so thethe catch with this is my array buffersare showing really weird bytes right nowso the device doesn't actually bootbecause I think it's writing stuff toslightly wrong page addresses but I'mstill figuring it out but I thought Iwould show you the progress of that andhow much you could depart from normalheadway interfaces cool so that's prettysweetso the first demo was made withbasically a kitchen sink of items I usedWebb USB serial from my friend Lewis hesort of created a shim and then you canupload a nice script on the Arduino tokind of act like that sort of it is ashim on the Arduino and there's alsoischium with JavaScript so I hisproject and just kind of had to likerefactor it slightly to work from RyanI'm using johnny-five to talk to theoled junior screen and that's becausethe OLED j/s library that I wroteshe just uses a johnny-five instance inorder to connect to that screen I'musing PNG to LCD which has a library ofmind that does the Floyd Steinbergalgorithm thing to combine to do imagesI'm using OLED Jas designer as I talkedabout my friend excellent Rachel wellthat was for my first demo and lots andlots and lots and lots of web packingyeah but I'm sure we're all used todoing that by nowdemo number two was made with AVR girlSDK I apologize they just communicationprotocols I just went to the spec andimplemented them so this is the kind ofstuff you can do now in the browser andthen I use webpack and I just wrotereally really really really bad code toget that going but it seems to bepromising so far so hopefully I'll havethat working and I'll be able to blogabout that soon so future's currentsupport not great not great and I I willadmit of being guilty of swinging by theRedmond campus I actually live in NewYork that I'll go by the MicrosoftRedmond campus and I've literally gonepeddling USB web USB devices and I'vesaid hey can you give this to thisperson on the edge team and this personon the edge team so I'm trying I'm doingmy part at Microsoft but right now itactually amazingly works on Chrome forAndroid which is cool but it's reallyjust for Chrome right now so I'm hopingthat more browsers pick it up soon butthat is support this then well I really likeagain the way Bo speaks back said thiswill be good for the web because insteadof waiting for a new kind of device tobe popular enough for browsers toprovide a specific API for we can justbuild it from day one which is prettysweet so if you wanted to get startedwith an Arduino and web your suite whichis probably the easiest way even thoughit's definitely the most hacky way havea look at both the spec this Arduinoexample which is a pretty easy toremember URL and if you wanted to checkout my first demo I've pushed the codeto that addressso hopefully this got you excited aboutweb USB I'm very excited so I hope Ihope to see more open-source samples ofpeople playing with this kind of stuffthanksyouyou
YouTube URL: https://www.youtube.com/watch?v=ov2R3vEn14k


