Title: Francesco Orsenigo: Elm as an antidote to front-end fatigue
Publication date: 2017-05-19
Playlist: Decompress AU 2016
Description: 
	Thank you to Mozilla for making video recording possible.
Captions: 
	00:00:06,220 --> 00:00:12,889
I'm super excited oh so am as an

00:00:10,639 --> 00:00:17,289
attitude as an antidote to fronting

00:00:12,889 --> 00:00:22,759
fatigue first of all some context this

00:00:17,289 --> 00:00:24,769
so from them javascript is terrible and

00:00:22,759 --> 00:00:27,769
there are several different opinions

00:00:24,769 --> 00:00:31,189
about this something that most people

00:00:27,769 --> 00:00:33,950
more or less agree is java javascript

00:00:31,189 --> 00:00:36,739
fatigue is a problem what is javascript

00:00:33,950 --> 00:00:38,990
fatigue is the idea that things are

00:00:36,739 --> 00:00:44,410
moving so fast that we are overwhelmed

00:00:38,990 --> 00:00:48,620
by all these new technology and we can't

00:00:44,410 --> 00:00:51,260
we can't digest them fast enough I think

00:00:48,620 --> 00:00:56,180
this is a problem but I'm I think this

00:00:51,260 --> 00:00:58,700
is not exactly why it is a problem this

00:00:56,180 --> 00:01:01,760
is a page from github it's a nice

00:00:58,700 --> 00:01:05,150
tutorial that explains how to make our

00:01:01,760 --> 00:01:10,570
fully scalable web application using as

00:01:05,150 --> 00:01:10,570
few technologies as possible it is nine

00:01:10,690 --> 00:01:16,640
[Music]

00:01:12,039 --> 00:01:19,689
so this is nine different things as a

00:01:16,640 --> 00:01:22,219
baseline a full-fledged production

00:01:19,689 --> 00:01:26,479
application usually will have a lot more

00:01:22,219 --> 00:01:28,880
than those so I think that JavaScript

00:01:26,479 --> 00:01:31,579
fatigue is not that there are 1 million

00:01:28,880 --> 00:01:33,619
different libraries out there is that of

00:01:31,579 --> 00:01:37,939
those 1,000,000 we don't have to be big

00:01:33,619 --> 00:01:41,030
three will speak nine in fact we can see

00:01:37,939 --> 00:01:45,130
that the tutorial itself focuses on

00:01:41,030 --> 00:01:50,709
wiring the tools together it's not about

00:01:45,130 --> 00:01:53,329
learning those tools okay if we continue

00:01:50,709 --> 00:01:56,359
this is the table of contents of the

00:01:53,329 --> 00:01:58,670
tutorial it's 12 pages it's must 12

00:01:56,359 --> 00:02:02,509
pages that explain you what the tool

00:01:58,670 --> 00:02:06,549
does and the options that it has its 12

00:02:02,509 --> 00:02:09,410
tools or 12 pages of configuration it's

00:02:06,549 --> 00:02:12,170
12 pages before you can actually start

00:02:09,410 --> 00:02:15,799
solving your problem writing your

00:02:12,170 --> 00:02:17,040
specific stuff ok this is this is

00:02:15,799 --> 00:02:21,930
frustrating

00:02:17,040 --> 00:02:24,150
okay it's not a problem of having many

00:02:21,930 --> 00:02:26,250
technologies is the problem of having to

00:02:24,150 --> 00:02:29,510
use many of them to have something

00:02:26,250 --> 00:02:33,060
acceptable scalable maintainable and

00:02:29,510 --> 00:02:35,970
having to wire them together because the

00:02:33,060 --> 00:02:39,420
more moving parts you have the more is

00:02:35,970 --> 00:02:41,069
difficult to make them work national

00:02:39,420 --> 00:02:43,349
together and it's not something you can

00:02:41,069 --> 00:02:45,739
you do once and then you forget about it

00:02:43,349 --> 00:02:48,090
every time you have to change something

00:02:45,739 --> 00:02:51,750
westpac will be the new plug-in that

00:02:48,090 --> 00:02:54,060
must be of the proper version and then

00:02:51,750 --> 00:02:58,109
karma will come in complaining that you

00:02:54,060 --> 00:03:02,579
are the typescript okay the interaction

00:02:58,109 --> 00:03:07,500
are many and problematic now how do we

00:03:02,579 --> 00:03:08,730
did we get to this point okay because

00:03:07,500 --> 00:03:10,829
javascript is the only thing the

00:03:08,730 --> 00:03:14,879
transitional browsers the reason we are

00:03:10,829 --> 00:03:18,810
using javascript it's because it's what

00:03:14,879 --> 00:03:23,459
runs on all browsers but this is

00:03:18,810 --> 00:03:26,280
actually true well we can't really write

00:03:23,459 --> 00:03:30,500
the language that right that the trance

00:03:26,280 --> 00:03:33,629
or no browsers we write jsx we've right

00:03:30,500 --> 00:03:37,229
annotated the javascript with the

00:03:33,629 --> 00:03:40,739
typescript or flow we write es6 we write

00:03:37,229 --> 00:03:43,519
es7 we write CoffeeScript with right

00:03:40,739 --> 00:03:47,669
pure script none of those things

00:03:43,519 --> 00:03:52,470
natively runs in a browser why do we use

00:03:47,669 --> 00:03:55,079
this we use this to try to patch up the

00:03:52,470 --> 00:03:57,859
flow they the problems that we have when

00:03:55,079 --> 00:04:00,510
using javascript we are building

00:03:57,859 --> 00:04:06,209
workarounds on top of each other it's a

00:04:00,510 --> 00:04:09,079
huge bowl monsterbowl of workarounds so

00:04:06,209 --> 00:04:12,540
what if we took a step back and

00:04:09,079 --> 00:04:17,459
reconsidered modern web development okay

00:04:12,540 --> 00:04:20,430
how how would this look like we're

00:04:17,459 --> 00:04:25,580
compiling anyway so we don't really ever

00:04:20,430 --> 00:04:28,310
any reason to stick with JavaScript and

00:04:25,580 --> 00:04:31,520
here comes em

00:04:28,310 --> 00:04:36,419
does anyone here know what ailment is

00:04:31,520 --> 00:04:39,210
anyone heard ok so Elma is a purely

00:04:36,419 --> 00:04:41,730
functional programming language it is

00:04:39,210 --> 00:04:43,830
strictly type which in turn allows it to

00:04:41,730 --> 00:04:46,800
be to guarantee no runtime errors

00:04:43,830 --> 00:04:48,690
whatsoever it has a time-traveling the

00:04:46,800 --> 00:04:52,139
bugger which is just as fancy as it

00:04:48,690 --> 00:04:54,900
sounds it cures cancer it's Souls global

00:04:52,139 --> 00:04:57,090
warming and it's yet the latest /

00:04:54,900 --> 00:05:01,669
hashtag we spent two days listening to

00:04:57,090 --> 00:05:05,070
hype of general of different tags and

00:05:01,669 --> 00:05:08,940
when we are offered something new we

00:05:05,070 --> 00:05:11,030
think is it really worth it do I need to

00:05:08,940 --> 00:05:15,300
learn a different way of programming

00:05:11,030 --> 00:05:17,220
different libraries new stuff if you ask

00:05:15,300 --> 00:05:20,150
me no it isn't like this stuff alone

00:05:17,220 --> 00:05:22,590
it's well Q's councils global warming

00:05:20,150 --> 00:05:27,120
totally worth it but I lied to you and

00:05:22,590 --> 00:05:29,190
can't really do that stuff I'm sorry but

00:05:27,120 --> 00:05:31,680
those are not the reasons I ended up

00:05:29,190 --> 00:05:36,360
sticking with Alma I ended up going

00:05:31,680 --> 00:05:40,910
through the learning curve so why did I

00:05:36,360 --> 00:05:40,910
what what was the selling point for me

00:05:41,150 --> 00:05:47,340
early check of the problem from the

00:05:43,200 --> 00:05:50,340
ground up yttrium ajan what web

00:05:47,340 --> 00:05:56,340
development would look like if it was

00:05:50,340 --> 00:05:59,130
designed with a modern web in mind m

00:05:56,340 --> 00:06:01,440
unlike many new technologies does not

00:05:59,130 --> 00:06:05,000
try to play nice with JavaScript you can

00:06:01,440 --> 00:06:08,460
use JavaScript and I'm together but the

00:06:05,000 --> 00:06:10,919
design is C decision with Alma is that

00:06:08,460 --> 00:06:15,300
you want to write as much L as possible

00:06:10,919 --> 00:06:20,100
and do away as much as you can with

00:06:15,300 --> 00:06:22,020
JavaScript um this obviously comes to

00:06:20,100 --> 00:06:24,660
the cost we have learnt to learn your

00:06:22,020 --> 00:06:29,550
stuff we cannot use many of the

00:06:24,660 --> 00:06:33,510
library's that we learn to love with

00:06:29,550 --> 00:06:36,780
JavaScript so it's

00:06:33,510 --> 00:06:39,180
do we want to do it is I'd like to

00:06:36,780 --> 00:06:41,250
convince you that it might be worth it

00:06:39,180 --> 00:06:44,670
there are some very good things that

00:06:41,250 --> 00:06:49,530
happened once we decide to do away with

00:06:44,670 --> 00:06:53,960
as much JavaScript as we can so this is

00:06:49,530 --> 00:07:00,960
a very nice thing there is a simpler

00:06:53,960 --> 00:07:03,870
build and I can't use all right it works

00:07:00,960 --> 00:07:05,880
so the slider that I'm sure I was

00:07:03,870 --> 00:07:10,110
showing you they are written entirely in

00:07:05,880 --> 00:07:14,150
asthma so I have a very small repo with

00:07:10,110 --> 00:07:18,840
all my slides making stuff there and

00:07:14,150 --> 00:07:22,050
what you see here is very tall so there

00:07:18,840 --> 00:07:23,510
is an L package.json which is just make

00:07:22,050 --> 00:07:26,610
of stuff about the package and

00:07:23,510 --> 00:07:29,490
dependencies there is an ailment stuff

00:07:26,610 --> 00:07:31,110
which is just the downloaded libraries

00:07:29,490 --> 00:07:32,970
because I didn't want to risk the

00:07:31,110 --> 00:07:35,430
internet connection here and the

00:07:32,970 --> 00:07:41,400
downloads in front of you because the

00:07:35,430 --> 00:07:43,230
gods of demo are evil and ticklish an

00:07:41,400 --> 00:07:45,300
images that actually that contains just

00:07:43,230 --> 00:07:48,450
the two screenshots of the tutorial that

00:07:45,300 --> 00:07:52,440
I show you before and in index HTML

00:07:48,450 --> 00:07:58,760
which is actually what we generate and a

00:07:52,440 --> 00:08:01,710
main HTML as main Elma all the source of

00:07:58,760 --> 00:08:06,270
the presentation is actually this main

00:08:01,710 --> 00:08:10,200
dot m which i'm going to show you ok so

00:08:06,270 --> 00:08:14,280
we have some imports this piece of code

00:08:10,200 --> 00:08:16,020
is behavior so it's the definition of

00:08:14,280 --> 00:08:20,340
the animation for the fragments and the

00:08:16,020 --> 00:08:23,580
slides then we have some we should

00:08:20,340 --> 00:08:27,570
recognize this this is CSS I am

00:08:23,580 --> 00:08:29,610
expressing CSS in elma we undertook

00:08:27,570 --> 00:08:33,000
before that they were they wanted to

00:08:29,610 --> 00:08:34,229
have interpolates added to the CSS back

00:08:33,000 --> 00:08:36,720
we don't need it we don't need to start

00:08:34,229 --> 00:08:39,510
we don't need less we can we have the

00:08:36,720 --> 00:08:42,120
full power of a programming language to

00:08:39,510 --> 00:08:44,430
express CSS we can use variables we can

00:08:42,120 --> 00:08:49,260
use functions we can use modules

00:08:44,430 --> 00:08:51,600
this is nique below I actually have the

00:08:49,260 --> 00:08:55,260
content it is expressed as Mark down

00:08:51,600 --> 00:08:59,160
because it's faster to write an HTML but

00:08:55,260 --> 00:09:05,399
I could have HTML in the same file I

00:08:59,160 --> 00:09:08,970
have behavior style markup I don't have

00:09:05,399 --> 00:09:12,120
to do this I can split in modules i can

00:09:08,970 --> 00:09:16,670
use normal CSS with sauce or less or

00:09:12,120 --> 00:09:22,200
whatever but it's a nice to have and

00:09:16,670 --> 00:09:26,100
drum roll this is how i turn the code

00:09:22,200 --> 00:09:36,480
that just so into something that the

00:09:26,100 --> 00:09:39,870
browser can understand this is not a

00:09:36,480 --> 00:09:42,540
trivial thing the libraries is as a

00:09:39,870 --> 00:09:45,180
useful dom is fully reactive it is a lot

00:09:42,540 --> 00:09:51,839
of bells and whistles a lot of nested

00:09:45,180 --> 00:10:01,529
dependencies and it is the output is

00:09:51,839 --> 00:10:04,910
directly HTML normally this was this is

00:10:01,529 --> 00:10:08,010
what we would need to do to gain this

00:10:04,910 --> 00:10:13,580
five different steps five different

00:10:08,010 --> 00:10:18,300
tools all right and compared with this

00:10:13,580 --> 00:10:26,370
bum you know how I sells the first time

00:10:18,300 --> 00:10:31,140
I tried this it was this was the fatigue

00:10:26,370 --> 00:10:34,050
going away there are other nice things

00:10:31,140 --> 00:10:37,980
that we can do if we accept javascript

00:10:34,050 --> 00:10:40,620
is not our main language the type

00:10:37,980 --> 00:10:43,250
checking it becomes reliable now we're

00:10:40,620 --> 00:10:47,160
type checking already we have typescript

00:10:43,250 --> 00:10:50,130
where flow and it's not like else type

00:10:47,160 --> 00:10:52,860
checker can can find different kind of

00:10:50,130 --> 00:10:56,720
errors okay is not conceptually

00:10:52,860 --> 00:11:01,380
different but it has a huge advantage

00:10:56,720 --> 00:11:06,330
it is enforced all over em you cannot

00:11:01,380 --> 00:11:08,040
write encode it is not type checked this

00:11:06,330 --> 00:11:11,070
sometimes of the paint is because you

00:11:08,040 --> 00:11:17,090
don't want to think about it but it

00:11:11,070 --> 00:11:19,560
means that the code becomes reliable

00:11:17,090 --> 00:11:21,450
even the libraries that you are using

00:11:19,560 --> 00:11:26,460
they are fully tax check they are not

00:11:21,450 --> 00:11:30,200
going to have runtime errors I spent one

00:11:26,460 --> 00:11:33,000
day last week because our our

00:11:30,200 --> 00:11:36,090
application it is importing the same

00:11:33,000 --> 00:11:38,730
library nested by other libraries same

00:11:36,090 --> 00:11:40,980
library sixth time that were that was a

00:11:38,730 --> 00:11:44,490
never that happened only in internet

00:11:40,980 --> 00:11:47,700
explorer 11 and I suspect one day

00:11:44,490 --> 00:11:52,560
because they did do a runtime error in

00:11:47,700 --> 00:11:54,690
internet explorer 11 / 6 split libraries

00:11:52,560 --> 00:11:58,830
that I didn't even know which one of the

00:11:54,690 --> 00:12:03,660
version was it you know how I feel when

00:11:58,830 --> 00:12:09,840
I have to think wait i just have to

00:12:03,660 --> 00:12:13,620
debug internet explorer anymore this is

00:12:09,840 --> 00:12:15,660
again fatigue going away this is less

00:12:13,620 --> 00:12:20,820
technologies to configure and to patch

00:12:15,660 --> 00:12:25,830
together this is bringing that nine two

00:12:20,820 --> 00:12:27,570
three four i yes it's much faster

00:12:25,830 --> 00:12:32,040
because it doesn't time have to run on

00:12:27,570 --> 00:12:36,900
all called every time third saying fewer

00:12:32,040 --> 00:12:38,700
and simpler tasks now the best test is

00:12:36,900 --> 00:12:42,510
the one that you don't have to write and

00:12:38,700 --> 00:12:45,330
this is not only because of the

00:12:42,510 --> 00:12:48,380
guarantee of no runtime errors it's also

00:12:45,330 --> 00:12:51,140
because you can model very precisely

00:12:48,380 --> 00:12:54,300
your application in such a way that

00:12:51,140 --> 00:12:58,740
impossible states are impossible you

00:12:54,300 --> 00:13:03,410
cannot describe wrong stage with your

00:12:58,740 --> 00:13:06,330
code this is massive

00:13:03,410 --> 00:13:08,250
the label static checking prevents most

00:13:06,330 --> 00:13:11,430
runtime errors I don't have to write

00:13:08,250 --> 00:13:15,630
integration tests if two modules have an

00:13:11,430 --> 00:13:18,210
interface that the compiler fly they

00:13:15,630 --> 00:13:22,500
will work together if it compiles it

00:13:18,210 --> 00:13:24,750
works this is again super relaxing it's

00:13:22,500 --> 00:13:27,990
less stuff that I have to think about

00:13:24,750 --> 00:13:33,990
less tests the time to write let less I

00:13:27,990 --> 00:13:37,680
don't attach the boilerplate last every

00:13:33,990 --> 00:13:40,650
function is pure Adam if you have ever

00:13:37,680 --> 00:13:43,890
eaten unit tests for the front end

00:13:40,650 --> 00:13:45,750
oftentimes we have to do include that

00:13:43,890 --> 00:13:49,460
module include the other module mock dis

00:13:45,750 --> 00:13:52,770
Muk that before each after each fixtures

00:13:49,460 --> 00:13:57,330
the you have often had to simulate the

00:13:52,770 --> 00:14:00,180
DOM and what does what does it mean to

00:13:57,330 --> 00:14:02,580
have a function that is pure it means

00:14:00,180 --> 00:14:05,640
that the function cannot affect its

00:14:02,580 --> 00:14:10,350
context it cannot affect it embarked its

00:14:05,640 --> 00:14:13,980
environment it cannot even change its

00:14:10,350 --> 00:14:18,000
infant its input arguments it can only

00:14:13,980 --> 00:14:21,540
affect its result the value it returns

00:14:18,000 --> 00:14:23,040
this means that to test anything you

00:14:21,540 --> 00:14:25,620
just have to provide you have to just

00:14:23,040 --> 00:14:28,550
prepare the arguments run the function

00:14:25,620 --> 00:14:35,730
and test what the function outputs the

00:14:28,550 --> 00:14:37,500
test cannot interact among each other we

00:14:35,730 --> 00:14:41,910
don't have to configure karma we don't

00:14:37,500 --> 00:14:49,560
have to configure just we have just SAT

00:14:41,910 --> 00:14:51,900
test pure functions so um those three

00:14:49,560 --> 00:14:54,510
things I think the address really well

00:14:51,900 --> 00:14:57,540
what is javascript fatigue we don't have

00:14:54,510 --> 00:15:00,810
we have so many few things few we're

00:14:57,540 --> 00:15:03,660
sorry things to configure so many

00:15:00,810 --> 00:15:07,170
different things to set up so if you

00:15:03,660 --> 00:15:11,310
were saying so 2 y's together less

00:15:07,170 --> 00:15:13,920
moving parts that can go wrong now elma

00:15:11,310 --> 00:15:15,900
is very promising it has a long way to

00:15:13,920 --> 00:15:23,400
go still it's not the solution

00:15:15,900 --> 00:15:25,680
to all evils I I really like this this

00:15:23,400 --> 00:15:27,870
radical rethinking though I think this

00:15:25,680 --> 00:15:30,480
is the direction we should move and I

00:15:27,870 --> 00:15:36,830
hope to do there would be more of this

00:15:30,480 --> 00:15:40,980
in the future now I kept you along it

00:15:36,830 --> 00:15:42,990
enough away from lunch there is an album

00:15:40,980 --> 00:15:45,270
meetup me and Sebastian which is down

00:15:42,990 --> 00:15:46,560
there waves the bus yet okay so if you

00:15:45,270 --> 00:15:50,850
guys are interested you can come and

00:15:46,560 --> 00:15:53,490
chat with us this is my Twitter and is

00:15:50,850 --> 00:15:54,950
like handle thank you very much for your

00:15:53,490 --> 00:15:58,320
patience

00:15:54,950 --> 00:15:58,320

YouTube URL: https://www.youtube.com/watch?v=J2uEdiFdg80


