Title: Akademy 2020 - Student Showcase Part 1
Publication date: 2020-11-27
Playlist: Akademy 2020
Description: 
	Every year a number of students join us through our student programs Google Summer of Code and Season of KDE. In this session some of them will show you what they've been working on and talk about their experience working with the KDE community.

Speakers and Presentation Topics Include:
Deepak Kumar - Multiple Datasets for GCompris
Kartik Ramesh - Face Recognition Workflow Improvements in DigiKam
Sashmita Raghav - Season of KDE’ 20: Improve Timeline Clips Color Palette & Google Summer of Code’ 20: Basic Subtitling Support in Kdenlive
Sharaf Zaman - SVG Mesh Gradients in Krita
Captions: 
	00:00:01,140 --> 00:00:08,620
[Music]

00:00:10,960 --> 00:00:16,480
student showcase

00:00:12,480 --> 00:00:18,480
part one hello everyone

00:00:16,480 --> 00:00:19,920
my name is karatek and i'm a third year

00:00:18,480 --> 00:00:20,720
computer science undergraduate from

00:00:19,920 --> 00:00:22,560
india

00:00:20,720 --> 00:00:24,160
this summer i participated in google

00:00:22,560 --> 00:00:25,840
summer of code with kte

00:00:24,160 --> 00:00:27,519
and i worked on the project of facial

00:00:25,840 --> 00:00:28,800
recognition workflow improvements in

00:00:27,519 --> 00:00:30,880
digicon

00:00:28,800 --> 00:00:33,120
so my journey with kde actually started

00:00:30,880 --> 00:00:33,520
in december 2019 when i came to know

00:00:33,120 --> 00:00:36,079
about

00:00:33,520 --> 00:00:37,360
season of kde and even though i didn't

00:00:36,079 --> 00:00:40,320
get selected in it

00:00:37,360 --> 00:00:40,960
i'm still glad that i participated

00:00:40,320 --> 00:00:42,559
because

00:00:40,960 --> 00:00:44,719
it i think it helped me clear the

00:00:42,559 --> 00:00:47,920
initial hurdle of

00:00:44,719 --> 00:00:49,680
contributing to open source so uh even

00:00:47,920 --> 00:00:51,520
though i didn't get selected i spent the

00:00:49,680 --> 00:00:53,120
month of january and february

00:00:51,520 --> 00:00:55,680
contributing to kde

00:00:53,120 --> 00:00:58,399
i specifically contributed to rocks

00:00:55,680 --> 00:01:00,000
which is a graph theory editor and along

00:00:58,399 --> 00:01:02,800
the way i found a ton of

00:01:00,000 --> 00:01:03,920
helpful developers who really helped me

00:01:02,800 --> 00:01:05,439
whenever i was stuck

00:01:03,920 --> 00:01:07,360
on any problem they were always there to

00:01:05,439 --> 00:01:10,720
help me out in the irc chatroom

00:01:07,360 --> 00:01:12,799
so thank you for that and

00:01:10,720 --> 00:01:14,240
when the list of organizations was

00:01:12,799 --> 00:01:17,119
ultimately announced

00:01:14,240 --> 00:01:18,720
i immediately knew which one i wanted to

00:01:17,119 --> 00:01:21,200
contribute to

00:01:18,720 --> 00:01:23,280
so my project with digicomm did not

00:01:21,200 --> 00:01:24,240
focus on introducing a single major

00:01:23,280 --> 00:01:26,799
feature

00:01:24,240 --> 00:01:28,720
but instead it aimed to address the

00:01:26,799 --> 00:01:30,720
existing issues that already existed in

00:01:28,720 --> 00:01:32,400
the facial recognition workflow as well

00:01:30,720 --> 00:01:33,520
as introduce a couple new features which

00:01:32,400 --> 00:01:35,680
would help

00:01:33,520 --> 00:01:37,439
improve the user experience so some of

00:01:35,680 --> 00:01:39,840
the features that i introduced are

00:01:37,439 --> 00:01:41,840
i added a new category of faces called

00:01:39,840 --> 00:01:44,720
ignored faces which the user may use to

00:01:41,840 --> 00:01:46,079
mark certain faces as i don't want the

00:01:44,720 --> 00:01:48,640
algorithm to

00:01:46,079 --> 00:01:50,399
recognize this i also implemented a new

00:01:48,640 --> 00:01:52,079
image sorting algorithm

00:01:50,399 --> 00:01:54,720
which would help which would allow

00:01:52,079 --> 00:01:55,360
images which have been newly recognized

00:01:54,720 --> 00:01:57,119
by the

00:01:55,360 --> 00:01:58,560
facial recognition algorithm to appear

00:01:57,119 --> 00:02:00,399
before the other images

00:01:58,560 --> 00:02:02,320
so that the user can pay more attention

00:02:00,399 --> 00:02:03,840
to these faces

00:02:02,320 --> 00:02:05,520
i also implemented automatic

00:02:03,840 --> 00:02:08,399
categorization of faces

00:02:05,520 --> 00:02:10,160
based on similarity to one another so

00:02:08,399 --> 00:02:12,319
instead of just talking about this

00:02:10,160 --> 00:02:13,840
these features uh i think it would be

00:02:12,319 --> 00:02:17,599
much more effective if i

00:02:13,840 --> 00:02:20,160
showed a demo of of these so i have my

00:02:17,599 --> 00:02:20,959
local installation branch pulled up here

00:02:20,160 --> 00:02:23,680
and

00:02:20,959 --> 00:02:25,520
okay this is my album of people uh which

00:02:23,680 --> 00:02:27,200
i'll try to facial recognition on

00:02:25,520 --> 00:02:29,200
so the results of facial recognition may

00:02:27,200 --> 00:02:32,319
look something like this

00:02:29,200 --> 00:02:34,080
so uh this is my uh

00:02:32,319 --> 00:02:35,599
the set of photos that have been

00:02:34,080 --> 00:02:38,560
recognized by the algorithm

00:02:35,599 --> 00:02:39,840
so these tags represent the various

00:02:38,560 --> 00:02:41,599
people that i have that i have

00:02:39,840 --> 00:02:44,319
recognized myself

00:02:41,599 --> 00:02:45,840
so uh after the recognition is complete

00:02:44,319 --> 00:02:48,319
the user may head over the

00:02:45,840 --> 00:02:49,200
to the person to a particular person and

00:02:48,319 --> 00:02:51,200
it would show

00:02:49,200 --> 00:02:52,800
the faces of just that person so this is

00:02:51,200 --> 00:02:55,360
the current existing state of

00:02:52,800 --> 00:02:55,360
danger cam

00:02:57,040 --> 00:03:03,840
actually let me show a different example

00:03:00,640 --> 00:03:06,480
yes like in this photo so in this photo

00:03:03,840 --> 00:03:07,200
in this person now the green overlaid

00:03:06,480 --> 00:03:09,040
faces

00:03:07,200 --> 00:03:10,720
are faces that have been newly

00:03:09,040 --> 00:03:12,480
recognized by the algorithm

00:03:10,720 --> 00:03:15,440
so the algorithm is asking me to either

00:03:12,480 --> 00:03:17,440
confirm this face or reject this face

00:03:15,440 --> 00:03:18,720
whereas these other faces have already

00:03:17,440 --> 00:03:20,560
been confirmed by me

00:03:18,720 --> 00:03:22,080
the algorithm made these suggestions

00:03:20,560 --> 00:03:24,319
based on these images

00:03:22,080 --> 00:03:25,920
so it's uh so you'll notice that these

00:03:24,319 --> 00:03:27,599
faces all appear mixed between one

00:03:25,920 --> 00:03:30,640
another and there's no order

00:03:27,599 --> 00:03:32,480
so this can be very tough for the user

00:03:30,640 --> 00:03:34,000
especially if you have a very large set

00:03:32,480 --> 00:03:34,640
of images so the user will have to go

00:03:34,000 --> 00:03:37,760
from

00:03:34,640 --> 00:03:40,239
this image to this image to this image

00:03:37,760 --> 00:03:40,879
so instead i implemented a new sorting

00:03:40,239 --> 00:03:44,640
algorithm

00:03:40,879 --> 00:03:44,640
which the user can access

00:03:45,120 --> 00:03:49,680
to just sort all the faces which have

00:03:47,680 --> 00:03:51,760
been newly recognized before the already

00:03:49,680 --> 00:03:52,640
existing images so then so now the user

00:03:51,760 --> 00:03:54,640
can

00:03:52,640 --> 00:03:58,080
just select all of these and confirm

00:03:54,640 --> 00:04:00,560
that them at once if they are correct

00:03:58,080 --> 00:04:02,720
however there remains another issue in

00:04:00,560 --> 00:04:04,159
the unconfirmed view then confirm view

00:04:02,720 --> 00:04:07,280
is responsible for showing

00:04:04,159 --> 00:04:09,599
all the new results across every single

00:04:07,280 --> 00:04:12,720
person that i have recognized

00:04:09,599 --> 00:04:13,360
so this view has the problem that even

00:04:12,720 --> 00:04:16,639
though i've

00:04:13,360 --> 00:04:18,239
i have sorted this view in order

00:04:16,639 --> 00:04:20,239
all these people will appear mixed

00:04:18,239 --> 00:04:20,880
between one another so for example this

00:04:20,239 --> 00:04:22,560
person

00:04:20,880 --> 00:04:24,080
and this person have been recognized to

00:04:22,560 --> 00:04:26,240
be the same by the algorithm yet they

00:04:24,080 --> 00:04:27,840
appear very far apart

00:04:26,240 --> 00:04:29,919
so it would be very helpful for the user

00:04:27,840 --> 00:04:30,560
if we could categorize the is into sort

00:04:29,919 --> 00:04:34,000
of

00:04:30,560 --> 00:04:35,520
if we could pre-group these and and then

00:04:34,000 --> 00:04:37,360
and then the user could make all

00:04:35,520 --> 00:04:39,199
decisions between a single view

00:04:37,360 --> 00:04:40,880
itself instead of going to every single

00:04:39,199 --> 00:04:43,680
view one by one

00:04:40,880 --> 00:04:45,919
so how we can do this is i implemented a

00:04:43,680 --> 00:04:50,000
new categorization order

00:04:45,919 --> 00:04:52,160
uh item separation separate items

00:04:50,000 --> 00:04:54,000
uh so this is now the default in the

00:04:52,160 --> 00:04:55,199
upcoming digicomm this will be set to be

00:04:54,000 --> 00:04:57,440
the default

00:04:55,199 --> 00:04:58,400
so you can separate these by faces so

00:04:57,440 --> 00:05:00,880
this leads to is

00:04:58,400 --> 00:05:02,320
all faces which have been recognized to

00:05:00,880 --> 00:05:03,600
be

00:05:02,320 --> 00:05:06,000
which have been recognized to be the

00:05:03,600 --> 00:05:07,520
same person they have been recognized to

00:05:06,000 --> 00:05:09,120
be the same person because they show

00:05:07,520 --> 00:05:09,759
some degree of similarity between one

00:05:09,120 --> 00:05:11,759
another

00:05:09,759 --> 00:05:13,280
so all of them those will get grouped

00:05:11,759 --> 00:05:14,960
under that person name

00:05:13,280 --> 00:05:17,120
so i can select all and then i can do

00:05:14,960 --> 00:05:18,240
this i can move on to the next person i

00:05:17,120 --> 00:05:20,960
can select all

00:05:18,240 --> 00:05:21,759
and then i can select him so this is

00:05:20,960 --> 00:05:24,080
this would be much

00:05:21,759 --> 00:05:25,360
easier for the user to do apart from

00:05:24,080 --> 00:05:27,280
these features i've also

00:05:25,360 --> 00:05:28,960
introduced the ability to now reject

00:05:27,280 --> 00:05:30,720
suggestions so earlier

00:05:28,960 --> 00:05:32,400
we could either confirm a suggestion or

00:05:30,720 --> 00:05:34,080
delete the face entirely

00:05:32,400 --> 00:05:35,600
but now i've introduced a new feature so

00:05:34,080 --> 00:05:36,880
that we can reject it that is tell the

00:05:35,600 --> 00:05:38,800
algorithm that

00:05:36,880 --> 00:05:40,720
um this is a face but it's not the one

00:05:38,800 --> 00:05:41,680
that you're suggesting so i can remove

00:05:40,720 --> 00:05:43,759
it

00:05:41,680 --> 00:05:46,800
i can also as i mentioned earlier i can

00:05:43,759 --> 00:05:46,800
confirm all these faces

00:05:46,960 --> 00:05:51,600
so so i've also implemented a new

00:05:50,240 --> 00:05:53,520
sorting order in my

00:05:51,600 --> 00:05:56,160
in my people view so you'll notice that

00:05:53,520 --> 00:05:59,199
uh m is

00:05:56,160 --> 00:06:00,639
so m is alphabetically appears before o

00:05:59,199 --> 00:06:02,319
and earlier this complete view was

00:06:00,639 --> 00:06:03,039
sorted alphabetically but now what i've

00:06:02,319 --> 00:06:05,840
done is that

00:06:03,039 --> 00:06:07,440
these faces these put people have new

00:06:05,840 --> 00:06:11,120
faces in them

00:06:07,440 --> 00:06:13,280
so i've pinned them to the top

00:06:11,120 --> 00:06:16,240
so this is dynamic in nature for example

00:06:13,280 --> 00:06:18,479
if i'm to confirm two faces from this

00:06:16,240 --> 00:06:20,080
or three phases then this should go this

00:06:18,479 --> 00:06:21,680
will go below this

00:06:20,080 --> 00:06:24,000
so these are all dynamic in nature

00:06:21,680 --> 00:06:26,639
sorted in order of priority

00:06:24,000 --> 00:06:27,280
so that's also helpful for the user as

00:06:26,639 --> 00:06:30,400
it if

00:06:27,280 --> 00:06:33,120
this complete view is people

00:06:30,400 --> 00:06:33,680
is very large then the user can

00:06:33,120 --> 00:06:36,639
immediately

00:06:33,680 --> 00:06:37,680
immediately access which uh the people

00:06:36,639 --> 00:06:40,240
that uh

00:06:37,680 --> 00:06:41,600
are for higher priority and they require

00:06:40,240 --> 00:06:43,440
his or her attention

00:06:41,600 --> 00:06:46,319
so that's about it from my side i would

00:06:43,440 --> 00:06:48,479
like to thank everyone for

00:06:46,319 --> 00:06:50,479
for listening and i would also like to

00:06:48,479 --> 00:06:52,080
thank kde and the developers of digicam

00:06:50,479 --> 00:06:54,479
for selecting me for this opportunity

00:06:52,080 --> 00:06:54,479
thank you

00:06:55,360 --> 00:06:59,759
hi everyone i am people who are a google

00:06:57,520 --> 00:07:00,960
server for 2020 student for the g

00:06:59,759 --> 00:07:02,880
conference project

00:07:00,960 --> 00:07:05,360
today i am going to speak about my

00:07:02,880 --> 00:07:08,000
google server for 2020 project details

00:07:05,360 --> 00:07:11,680
and my contribution to g complex so far

00:07:08,000 --> 00:07:11,680
so let's begin with the presentation

00:07:12,400 --> 00:07:16,479
so i have been contributing to the g

00:07:14,080 --> 00:07:17,840
compass project from the past one year

00:07:16,479 --> 00:07:19,840
in the beginning one of my major

00:07:17,840 --> 00:07:21,520
contribution was to add tutorial skill

00:07:19,840 --> 00:07:23,680
to the odd event activity

00:07:21,520 --> 00:07:25,280
so in the order activity i added a

00:07:23,680 --> 00:07:27,280
tutorial is going to teach the

00:07:25,280 --> 00:07:28,880
child about what is mean by odd numbers

00:07:27,280 --> 00:07:30,960
and what is in my even number

00:07:28,880 --> 00:07:32,560
the need of this was that if a child

00:07:30,960 --> 00:07:34,400
doesn't know about what is mean by odd

00:07:32,560 --> 00:07:36,479
number and what it means

00:07:34,400 --> 00:07:37,840
and if he directly starts the activity

00:07:36,479 --> 00:07:40,160
to play then there might

00:07:37,840 --> 00:07:41,199
be then that can be difficult for him to

00:07:40,160 --> 00:07:42,960
play and

00:07:41,199 --> 00:07:45,680
learn about what is mean by odd number

00:07:42,960 --> 00:07:48,160
and what is being my given

00:07:45,680 --> 00:07:50,479
so i have been also been selected as a

00:07:48,160 --> 00:07:53,440
season of 3d 2020 student

00:07:50,479 --> 00:07:54,160
so my seasonal kd 2020 program includes

00:07:53,440 --> 00:07:56,240
to

00:07:54,160 --> 00:07:57,199
improve multiple data sets of login

00:07:56,240 --> 00:07:59,840
activity and

00:07:57,199 --> 00:08:02,000
add multiple data sets to the balance

00:07:59,840 --> 00:08:03,680
skills activity balance scale with kgs

00:08:02,000 --> 00:08:05,919
and balance skills with ounce

00:08:03,680 --> 00:08:07,360
so i have started my work during the

00:08:05,919 --> 00:08:08,879
season of the day to improve the

00:08:07,360 --> 00:08:11,120
multiple data sets to

00:08:08,879 --> 00:08:12,800
clock game activity so in the clock game

00:08:11,120 --> 00:08:14,960
activity there are already

00:08:12,800 --> 00:08:16,160
multiple data sets with two different

00:08:14,960 --> 00:08:18,639
level selection

00:08:16,160 --> 00:08:19,599
so in order to fit into the prince

00:08:18,639 --> 00:08:21,520
learning program

00:08:19,599 --> 00:08:24,160
i need to add the multiple data sets

00:08:21,520 --> 00:08:26,960
with five different level selects

00:08:24,160 --> 00:08:28,720
so after finalizing method mentors about

00:08:26,960 --> 00:08:30,000
the multiple data sets of the five

00:08:28,720 --> 00:08:32,560
different level selection

00:08:30,000 --> 00:08:34,640
i added that to the clogging activity

00:08:32,560 --> 00:08:36,560
i've also added a ok button to the clock

00:08:34,640 --> 00:08:37,440
game activity to check the answer once

00:08:36,560 --> 00:08:40,959
the clock

00:08:37,440 --> 00:08:42,800
is set by the afterwards i

00:08:40,959 --> 00:08:44,560
worked on addition of multiple datasets

00:08:42,800 --> 00:08:45,519
to balance skills balanced skills with

00:08:44,560 --> 00:08:48,240
kgs and

00:08:45,519 --> 00:08:50,399
balance skills with forms so the all the

00:08:48,240 --> 00:08:51,440
registry activities saved a common port

00:08:50,399 --> 00:08:53,600
base from

00:08:51,440 --> 00:08:55,600
the skateboard activity so the

00:08:53,600 --> 00:08:56,240
scaleboard activity have a common code

00:08:55,600 --> 00:08:58,399
base for

00:08:56,240 --> 00:09:00,160
all the three activities so for the

00:08:58,399 --> 00:09:02,160
addition of multiple datasets

00:09:00,160 --> 00:09:03,519
i only need to make the changes to the

00:09:02,160 --> 00:09:05,600
scaleboard activity

00:09:03,519 --> 00:09:06,720
in order to load the multiple datasets

00:09:05,600 --> 00:09:08,959
for all of the

00:09:06,720 --> 00:09:11,040
different balance skill activities so

00:09:08,959 --> 00:09:12,959
firstly i made the code changes and then

00:09:11,040 --> 00:09:13,920
i implemented the multiple datasets to

00:09:12,959 --> 00:09:16,080
balance scheme

00:09:13,920 --> 00:09:18,240
so after i tested that it was working

00:09:16,080 --> 00:09:19,279
fine so afterwards i added a multiple

00:09:18,240 --> 00:09:23,519
datasets to

00:09:19,279 --> 00:09:25,440
other two balanced scale activities also

00:09:23,519 --> 00:09:26,800
so this is the multiple data screens of

00:09:25,440 --> 00:09:28,640
balance scale with ounce

00:09:26,800 --> 00:09:30,640
on the left you can screen see that

00:09:28,640 --> 00:09:31,839
there are different weights available

00:09:30,640 --> 00:09:34,160
and there is the

00:09:31,839 --> 00:09:35,120
weight of the gift so the child need to

00:09:34,160 --> 00:09:37,200
balance

00:09:35,120 --> 00:09:39,360
the weight of the gift according to the

00:09:37,200 --> 00:09:41,680
different bits so here the main goal

00:09:39,360 --> 00:09:43,680
is to teach the child about different

00:09:41,680 --> 00:09:45,120
about automatic operation to

00:09:43,680 --> 00:09:47,680
how to make the arithmetic operating

00:09:45,120 --> 00:09:51,200
system and division in order to

00:09:47,680 --> 00:09:52,560
balance the state so on the right side

00:09:51,200 --> 00:09:54,320
you can see that this is a multiple

00:09:52,560 --> 00:09:54,880
leadership scheme of balance scale with

00:09:54,320 --> 00:09:58,000
ounce

00:09:54,880 --> 00:09:58,640
activity so here you might have seen you

00:09:58,000 --> 00:10:00,720
may see

00:09:58,640 --> 00:10:02,640
that there are different stars available

00:10:00,720 --> 00:10:05,040
for each of the multiple data sets

00:10:02,640 --> 00:10:06,640
so the each of these tasks indicates the

00:10:05,040 --> 00:10:08,880
difficulty level of that

00:10:06,640 --> 00:10:09,760
multiple derivatives so for the two star

00:10:08,880 --> 00:10:12,000
here means that

00:10:09,760 --> 00:10:12,800
this multiple data set you put for the

00:10:12,000 --> 00:10:16,640
children

00:10:12,800 --> 00:10:16,640
of age between five to eight years

00:10:17,360 --> 00:10:20,640
so coming to my google samara for 2020

00:10:20,000 --> 00:10:23,200
project

00:10:20,640 --> 00:10:25,120
so my the main goal of my google server

00:10:23,200 --> 00:10:27,440
for 2020 project was to

00:10:25,120 --> 00:10:28,720
implement multiple data sets to several

00:10:27,440 --> 00:10:31,040
memory activities

00:10:28,720 --> 00:10:32,160
near the given image activity and gaze

00:10:31,040 --> 00:10:34,160
found activity

00:10:32,160 --> 00:10:35,680
so i started my work during the google

00:10:34,160 --> 00:10:38,079
summer report coding platform i had

00:10:35,680 --> 00:10:40,560
multiple data sets to memory activities

00:10:38,079 --> 00:10:41,760
so there are total of 20 memory

00:10:40,560 --> 00:10:43,839
activities but

00:10:41,760 --> 00:10:46,000
i don't need to add the multiple data

00:10:43,839 --> 00:10:47,920
sets to all of the memory activities

00:10:46,000 --> 00:10:49,680
we i only need to add a multiple

00:10:47,920 --> 00:10:52,079
datasets to

00:10:49,680 --> 00:10:53,519
10 to 12 memory activities and other

00:10:52,079 --> 00:10:56,079
memory activities

00:10:53,519 --> 00:10:57,920
needs to use the default datasets so

00:10:56,079 --> 00:11:00,000
while adding the multiple datasheets to

00:10:57,920 --> 00:11:03,279
memory any of the memory activities i

00:11:00,000 --> 00:11:05,200
need to make sure that the

00:11:03,279 --> 00:11:06,640
change of the code base will not affect

00:11:05,200 --> 00:11:09,760
the memory activities

00:11:06,640 --> 00:11:11,360
with the default database state so i

00:11:09,760 --> 00:11:12,959
made the code changes in a

00:11:11,360 --> 00:11:14,800
way that it should load the multiple

00:11:12,959 --> 00:11:16,800
data set and the activities with no

00:11:14,800 --> 00:11:19,600
multiple data set in a proper way

00:11:16,800 --> 00:11:21,360
so there are few there were the there

00:11:19,600 --> 00:11:22,640
are memory activities as an embedded

00:11:21,360 --> 00:11:24,959
memory game to visit

00:11:22,640 --> 00:11:26,000
multiple datasets and the rest of their

00:11:24,959 --> 00:11:27,920
way based on the

00:11:26,000 --> 00:11:29,600
arithmetic options such as addition

00:11:27,920 --> 00:11:31,440
addition memory game multiplication

00:11:29,600 --> 00:11:34,959
memory in subtractive memory

00:11:31,440 --> 00:11:36,240
the arithmetic operation memory is such

00:11:34,959 --> 00:11:37,519
as for the additional memory game

00:11:36,240 --> 00:11:39,760
thereby in total

00:11:37,519 --> 00:11:40,800
two modes for each of the activity one

00:11:39,760 --> 00:11:42,959
with the ducks and

00:11:40,800 --> 00:11:42,959
one

00:11:46,160 --> 00:11:50,720
so the next activity i worked on

00:11:49,040 --> 00:11:52,160
addition of multiple data sets was

00:11:50,720 --> 00:11:53,920
mirror the given image

00:11:52,160 --> 00:11:55,519
in the mirror the given image i added

00:11:53,920 --> 00:11:57,040
multiple datasets with three different

00:11:55,519 --> 00:11:57,920
level selection the first one is the

00:11:57,040 --> 00:11:59,920
small grid

00:11:57,920 --> 00:12:01,440
of the grid size three by three the

00:11:59,920 --> 00:12:03,920
second was the medium grade we

00:12:01,440 --> 00:12:06,160
did say five by five and the third was

00:12:03,920 --> 00:12:08,480
the last grid with grid size seven by

00:12:06,160 --> 00:12:08,480
seven

00:12:09,279 --> 00:12:13,120
so here you can see the multiple data

00:12:10,880 --> 00:12:15,440
set screen of the animation memory game

00:12:13,120 --> 00:12:17,120
so here are the cards with two of the

00:12:15,440 --> 00:12:19,360
two butterfly images

00:12:17,120 --> 00:12:20,880
so the child needs to count the number

00:12:19,360 --> 00:12:23,360
of butterfly and match with the

00:12:20,880 --> 00:12:25,680
equivalent card

00:12:23,360 --> 00:12:29,040
so this was all about my presentation

00:12:25,680 --> 00:12:29,040
thanks and have a nice day

00:12:31,760 --> 00:12:36,320
hello everyone my name is shaurav zaman

00:12:33,839 --> 00:12:39,040
and i'm a g successful for creda

00:12:36,320 --> 00:12:40,079
and my project is svg mesh gradient in

00:12:39,040 --> 00:12:43,519
twitter

00:12:40,079 --> 00:12:46,639
and my mentors are dimitri and altera

00:12:43,519 --> 00:12:49,200
so let's get started so

00:12:46,639 --> 00:12:50,639
what are svgs well svg stands for

00:12:49,200 --> 00:12:52,399
scalable vector graphics

00:12:50,639 --> 00:12:54,000
it's a vector image format for 2d

00:12:52,399 --> 00:12:56,880
graphics

00:12:54,000 --> 00:12:59,120
what i mean by that is a vector image

00:12:56,880 --> 00:13:02,720
format is defined in terms of points

00:12:59,120 --> 00:13:04,399
on a cartesian plane which in turn

00:13:02,720 --> 00:13:06,000
those points with those points you can

00:13:04,399 --> 00:13:08,160
make lines you can make circles you can

00:13:06,000 --> 00:13:10,560
make triangles etc

00:13:08,160 --> 00:13:11,360
whereas but there are color parts raster

00:13:10,560 --> 00:13:14,320
images

00:13:11,360 --> 00:13:16,160
are just a grid of pixels and the

00:13:14,320 --> 00:13:19,600
information about each pixel

00:13:16,160 --> 00:13:20,160
how each pixel should look so one big

00:13:19,600 --> 00:13:21,839
difference

00:13:20,160 --> 00:13:23,600
between a vector graphic and a raster

00:13:21,839 --> 00:13:27,680
graph graphic which is

00:13:23,600 --> 00:13:30,480
often stated is if you zoom scale them

00:13:27,680 --> 00:13:32,160
you can see no pixelation or no loss of

00:13:30,480 --> 00:13:33,519
quality in vector graphics but you can

00:13:32,160 --> 00:13:36,959
see pixelation happen in

00:13:33,519 --> 00:13:37,440
raster images that's the one big feature

00:13:36,959 --> 00:13:40,480
for

00:13:37,440 --> 00:13:42,959
effect of vector graphics other features

00:13:40,480 --> 00:13:43,839
are is like or like it's they're very

00:13:42,959 --> 00:13:46,160
lightweight

00:13:43,839 --> 00:13:47,199
and they're customizable that is you can

00:13:46,160 --> 00:13:49,680
control them

00:13:47,199 --> 00:13:51,519
you can control the color fill color you

00:13:49,680 --> 00:13:55,120
can control the gradient

00:13:51,519 --> 00:13:58,240
you can change the font type etc so

00:13:55,120 --> 00:14:01,279
that is svg's so the next thing is what

00:13:58,240 --> 00:14:01,279
are mesh gradients

00:14:01,360 --> 00:14:07,680
so by definition mesh gradients in svg

00:14:05,279 --> 00:14:08,480
are based on an array of coon's patches

00:14:07,680 --> 00:14:12,000
so

00:14:08,480 --> 00:14:14,639
basically a grid of coons patches in it

00:14:12,000 --> 00:14:15,680
so what is a coon's patch so if you have

00:14:14,639 --> 00:14:18,639
let's say you have

00:14:15,680 --> 00:14:20,240
you have four basic curves and you place

00:14:18,639 --> 00:14:22,160
four colors on each corner

00:14:20,240 --> 00:14:23,440
and then you interpolate between them

00:14:22,160 --> 00:14:26,480
the surface you get

00:14:23,440 --> 00:14:27,279
is a coon's patch in the image on the

00:14:26,480 --> 00:14:30,560
right

00:14:27,279 --> 00:14:32,480
there there are four beziers one two

00:14:30,560 --> 00:14:34,480
three and four and there are four colors

00:14:32,480 --> 00:14:35,360
on each corner and when you interpolate

00:14:34,480 --> 00:14:38,399
between them

00:14:35,360 --> 00:14:39,120
the final render you get is a cleanest

00:14:38,399 --> 00:14:41,199
patch

00:14:39,120 --> 00:14:42,399
and then you have an or when you have an

00:14:41,199 --> 00:14:45,839
array of them

00:14:42,399 --> 00:14:49,199
it's mesh gradients

00:14:45,839 --> 00:14:52,320
so my project in

00:14:49,199 --> 00:14:53,120
basically was had fourth made there were

00:14:52,320 --> 00:14:56,000
four main

00:14:53,120 --> 00:14:57,360
objectives so one of them was the par

00:14:56,000 --> 00:15:00,800
smash gradients

00:14:57,360 --> 00:15:02,560
second was to render them third was to

00:15:00,800 --> 00:15:04,240
save them and fourth which i'm still

00:15:02,560 --> 00:15:07,440
working on

00:15:04,240 --> 00:15:10,839
is to create some tooling around it

00:15:07,440 --> 00:15:13,519
so artists can create mesh gradients in

00:15:10,839 --> 00:15:17,440
krita

00:15:13,519 --> 00:15:20,399
so finally what's my motivation

00:15:17,440 --> 00:15:21,600
what was the motivation for this well

00:15:20,399 --> 00:15:24,399
primarily

00:15:21,600 --> 00:15:26,480
they are very easy to use for an artist

00:15:24,399 --> 00:15:27,920
and they can use it to create lifelike

00:15:26,480 --> 00:15:31,600
drawing what i mean by that

00:15:27,920 --> 00:15:32,639
is they can clone real world objects

00:15:31,600 --> 00:15:35,120
with mesh gradients

00:15:32,639 --> 00:15:36,320
easily and within few minutes given the

00:15:35,120 --> 00:15:39,440
right tooling

00:15:36,320 --> 00:15:41,519
like so like this pepper in this case

00:15:39,440 --> 00:15:43,600
which is rendered in krita which i got

00:15:41,519 --> 00:15:44,959
from inkscape sports stories i didn't

00:15:43,600 --> 00:15:47,440
create it

00:15:44,959 --> 00:15:48,560
so as you can see this purple pepper

00:15:47,440 --> 00:15:51,120
looks fairly

00:15:48,560 --> 00:15:53,600
real and this was this is all due to

00:15:51,120 --> 00:15:56,560
mesh gradients

00:15:53,600 --> 00:15:58,160
so that's a big feature of mesh

00:15:56,560 --> 00:16:00,720
gradients

00:15:58,160 --> 00:16:02,480
other other thing is we can use mesh

00:16:00,720 --> 00:16:03,920
gradients to simulate other types of

00:16:02,480 --> 00:16:07,199
gradients

00:16:03,920 --> 00:16:10,480
so it's not just one thing

00:16:07,199 --> 00:16:13,680
another thing another motivation is it's

00:16:10,480 --> 00:16:17,040
fairly mature standard like it exists in

00:16:13,680 --> 00:16:19,120
pdf postscript popular cairo and

00:16:17,040 --> 00:16:20,160
inkscape supports it adobe illustrator

00:16:19,120 --> 00:16:24,639
supports it

00:16:20,160 --> 00:16:29,600
so it's a fairly mature thing and

00:16:24,639 --> 00:16:32,720
another object another motivation was

00:16:29,600 --> 00:16:34,880
to provide a second implementation

00:16:32,720 --> 00:16:35,759
so right now sv mesh gradients aren't

00:16:34,880 --> 00:16:38,720
part of the

00:16:35,759 --> 00:16:40,240
svg2 specification because they haven't

00:16:38,720 --> 00:16:43,440
it hasn't been released

00:16:40,240 --> 00:16:45,440
it's the part of the draft if with help

00:16:43,440 --> 00:16:47,040
of with the second implementation it can

00:16:45,440 --> 00:16:47,759
probably help it to get into the

00:16:47,040 --> 00:16:50,079
standard

00:16:47,759 --> 00:16:52,079
which will help artists which will make

00:16:50,079 --> 00:16:54,639
us all happy

00:16:52,079 --> 00:16:55,440
and the final reason is it's fun i like

00:16:54,639 --> 00:16:58,480
to math

00:16:55,440 --> 00:17:00,160
i like krita i like it as team so why

00:16:58,480 --> 00:17:03,600
not

00:17:00,160 --> 00:17:06,079
so that's all for me thank you for

00:17:03,600 --> 00:17:06,079
having me

00:17:09,280 --> 00:17:13,839
namaste and greetings to all my name is

00:17:12,240 --> 00:17:16,640
sashmita raghav

00:17:13,839 --> 00:17:18,240
i am a second year undergraduate student

00:17:16,640 --> 00:17:20,880
and i am doing my bachelor's

00:17:18,240 --> 00:17:21,919
in computer science with specialization

00:17:20,880 --> 00:17:24,720
in artificial

00:17:21,919 --> 00:17:26,000
intelligence in amrita university in

00:17:24,720 --> 00:17:28,720
india

00:17:26,000 --> 00:17:29,840
i began contributing to kde in december

00:17:28,720 --> 00:17:31,760
last year

00:17:29,840 --> 00:17:33,840
when i first came to know about the

00:17:31,760 --> 00:17:36,559
season of kde program

00:17:33,840 --> 00:17:37,360
the kd community has been nothing but

00:17:36,559 --> 00:17:40,000
welcoming

00:17:37,360 --> 00:17:41,520
and encouraging for business like me and

00:17:40,000 --> 00:17:43,760
i couldn't have asked for a better

00:17:41,520 --> 00:17:45,360
community to be a part of

00:17:43,760 --> 00:17:48,160
i have since then been an active

00:17:45,360 --> 00:17:50,720
contributor for 2kdn life

00:17:48,160 --> 00:17:51,520
for those who are unaware qt live is one

00:17:50,720 --> 00:17:54,240
of the most

00:17:51,520 --> 00:17:55,679
popular non-linear easy to use video

00:17:54,240 --> 00:17:57,440
editing software

00:17:55,679 --> 00:18:00,080
today i am going to talk about the work

00:17:57,440 --> 00:18:02,320
i have done as a season of qde and

00:18:00,080 --> 00:18:04,320
google summer of course student with kvn

00:18:02,320 --> 00:18:06,640
life

00:18:04,320 --> 00:18:08,160
my season of kde project dealt with

00:18:06,640 --> 00:18:09,760
improving the color palette for the

00:18:08,160 --> 00:18:11,840
timeline clips

00:18:09,760 --> 00:18:13,679
the timeline is that component of kdn

00:18:11,840 --> 00:18:16,000
life where the user manipulates the

00:18:13,679 --> 00:18:18,559
audio as well as video clips

00:18:16,000 --> 00:18:20,559
so what exactly are clips clips are

00:18:18,559 --> 00:18:23,120
containers of different file types

00:18:20,559 --> 00:18:23,679
in timeline the timeline consists of

00:18:23,120 --> 00:18:27,360
clips

00:18:23,679 --> 00:18:30,880
of different types namely audios video

00:18:27,360 --> 00:18:32,960
title images slideshow and color

00:18:30,880 --> 00:18:35,360
the application earlier had default

00:18:32,960 --> 00:18:38,000
colors only for audio and video clips

00:18:35,360 --> 00:18:39,280
with all clips except audio having the

00:18:38,000 --> 00:18:41,200
same color

00:18:39,280 --> 00:18:43,200
assigning different colors to each type

00:18:41,200 --> 00:18:44,400
of clip made it convenient for the user

00:18:43,200 --> 00:18:46,320
to differentiate

00:18:44,400 --> 00:18:48,240
between each clip type while working

00:18:46,320 --> 00:18:51,520
with a large number of audios

00:18:48,240 --> 00:18:53,520
videos titles and images i also worked

00:18:51,520 --> 00:18:54,000
on adding visual feedback for whether a

00:18:53,520 --> 00:18:56,559
clip

00:18:54,000 --> 00:18:57,039
had effects or not or if it was a proxy

00:18:56,559 --> 00:19:01,039
clip

00:18:57,039 --> 00:19:03,679
or not as can be seen in this slide

00:19:01,039 --> 00:19:04,640
the clips other than that of audio which

00:19:03,679 --> 00:19:07,760
is in green

00:19:04,640 --> 00:19:08,640
have the same blue color with my project

00:19:07,760 --> 00:19:11,360
the title

00:19:08,640 --> 00:19:12,320
image slideshow clips also got their own

00:19:11,360 --> 00:19:15,600
default colors

00:19:12,320 --> 00:19:17,520
along with video and audio clips also

00:19:15,600 --> 00:19:19,520
now the proxy videos

00:19:17,520 --> 00:19:21,120
and clips with effects could also be

00:19:19,520 --> 00:19:23,120
easily identified

00:19:21,120 --> 00:19:24,320
within the timeline with the proxy and

00:19:23,120 --> 00:19:27,120
the clip effect

00:19:24,320 --> 00:19:29,919
thumbnails now i would love to talk

00:19:27,120 --> 00:19:32,080
about my google summer of code project

00:19:29,919 --> 00:19:33,039
this summer i worked on my google summer

00:19:32,080 --> 00:19:35,280
of code project

00:19:33,039 --> 00:19:37,360
that is adding basic subtitling support

00:19:35,280 --> 00:19:39,360
to kdenlive

00:19:37,360 --> 00:19:40,559
so first of all what exactly are

00:19:39,360 --> 00:19:42,799
subtitles

00:19:40,559 --> 00:19:44,559
subtitles are text derived from either a

00:19:42,799 --> 00:19:45,280
transcript or screen play of the

00:19:44,559 --> 00:19:48,000
dialogue

00:19:45,280 --> 00:19:50,160
or commentary in a video videos

00:19:48,000 --> 00:19:51,600
including live are edited by applying

00:19:50,160 --> 00:19:54,320
filters or effects

00:19:51,600 --> 00:19:55,840
however the application is limited in

00:19:54,320 --> 00:19:59,440
its ability to customize

00:19:55,840 --> 00:20:02,559
and edit subtitles how are subtitles

00:19:59,440 --> 00:20:05,200
actually handled in kdn life presently

00:20:02,559 --> 00:20:06,080
at present the subtitles are handled as

00:20:05,200 --> 00:20:08,559
an effect

00:20:06,080 --> 00:20:09,600
namely using the subtitle effect the

00:20:08,559 --> 00:20:12,799
effect uses an

00:20:09,600 --> 00:20:15,360
ffmpeg filter to burn the subtitle file

00:20:12,799 --> 00:20:17,280
onto the respective video the user

00:20:15,360 --> 00:20:19,039
however is unable to customize the

00:20:17,280 --> 00:20:20,480
subtitles according to their own

00:20:19,039 --> 00:20:22,559
convenience

00:20:20,480 --> 00:20:24,880
this summer i worked on adding this

00:20:22,559 --> 00:20:27,120
support by extending the functionality

00:20:24,880 --> 00:20:29,360
of the existing subtitle effect

00:20:27,120 --> 00:20:32,400
thereby giving users more choices over

00:20:29,360 --> 00:20:34,799
subtitle customization

00:20:32,400 --> 00:20:35,600
the project is implemented in four basic

00:20:34,799 --> 00:20:38,320
steps

00:20:35,600 --> 00:20:40,559
the first step is to develop a parser to

00:20:38,320 --> 00:20:41,520
read the subtitle file uploaded by the

00:20:40,559 --> 00:20:43,600
user

00:20:41,520 --> 00:20:44,960
i worked on adding a parser for two

00:20:43,600 --> 00:20:48,320
widely used

00:20:44,960 --> 00:20:51,919
types of subtitle formats namely the srt

00:20:48,320 --> 00:20:54,880
and the ass formats next the past

00:20:51,919 --> 00:20:57,200
subtitles have to be managed so the next

00:20:54,880 --> 00:20:59,919
step is to add subtitle support

00:20:57,200 --> 00:21:00,640
to handle the past subtitles this

00:20:59,919 --> 00:21:03,039
include

00:21:00,640 --> 00:21:03,840
the hand handling of the addition

00:21:03,039 --> 00:21:06,640
deletion

00:21:03,840 --> 00:21:08,320
and modification of the subtitles once

00:21:06,640 --> 00:21:09,280
the subtitles are passed from the

00:21:08,320 --> 00:21:12,320
subtitle files

00:21:09,280 --> 00:21:13,440
and handled properly the basic front-end

00:21:12,320 --> 00:21:16,159
had to be developed

00:21:13,440 --> 00:21:18,480
to enable the user to edit the text and

00:21:16,159 --> 00:21:21,200
the duration of each subtitle

00:21:18,480 --> 00:21:23,120
this involved creating a separate track

00:21:21,200 --> 00:21:25,280
specific for the subtitle and

00:21:23,120 --> 00:21:26,880
introducing a new type of clip the

00:21:25,280 --> 00:21:28,880
subtitle clip

00:21:26,880 --> 00:21:30,559
with the basic subtitling support added

00:21:28,880 --> 00:21:32,799
to the kdn live with the above three

00:21:30,559 --> 00:21:33,520
steps the final step will be to add

00:21:32,799 --> 00:21:35,360
features

00:21:33,520 --> 00:21:38,880
to enable customization of the

00:21:35,360 --> 00:21:41,120
appearance of the subtitle text

00:21:38,880 --> 00:21:43,039
so with this i would like to conclude my

00:21:41,120 --> 00:21:44,000
talk i would love to thank the kde

00:21:43,039 --> 00:21:46,240
community for this

00:21:44,000 --> 00:21:57,440
opportunity to present my project today

00:21:46,240 --> 00:21:57,440

YouTube URL: https://www.youtube.com/watch?v=JPKwXXTc8iw


