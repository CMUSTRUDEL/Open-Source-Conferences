Title: Akademy 2020 - Shawn Rutledge - Input Handling Update
Publication date: 2020-11-24
Playlist: Akademy 2020
Description: 
	We have several goals for input events in Qt 6; the main one of course is to fix a lot of open Qt Quick bugs that have been intractable because of bad architecture in Qt 5.

Shawn will talk about the API changes in QInputEvent and its subclasses, what it means for Qt Quick, and do a demo of some new features that the new event delivery architecture enables.

More details about the goals in Qt 6:

- every QInputEvent should carry a pointer to an object representing the device it came from, with more details than we had before, to enable the recipients to handle it intelligently
- Qt Quick items (and especially Input Handlers) should mostly keep working as they already do
- Widgets will keep working as they already do
- QPointerEvent will be introduced, with common API for mouse, touch and tablet events; that will hopefully enable more unified delivery code rather than duplicated code for different event types, and also less reliance on mouse emulation
- Qt Quick can go back to delivering the original QPointerEvents rather than wrapping them
- we can perhaps finally make Flickable touch-aware: because the event doesn't look that different from a mouse event anymore, we shouldn't have to duplicate much code to get Flickable to do all its filtering, delaying and replaying with touch events just as with mouse events
- Wacom tablets and other pressure-sensitive stylus devices will be much better supported in Qt Quick
- we hope to be in a position that we can begin to support multi-seat (multi-user) UIs
YouTube URL: https://www.youtube.com/watch?v=uKx6x0qlvnY


