Title: Akademy 2020 - Benjamin Port - System Settings Behind the Scene
Publication date: 2020-11-24
Playlist: Akademy 2020
Description: 
	System settings are a core part of Plasma highly customizable eco system. During last year almost all module were ported to KConfigXT.
We will see which benefits all modules (based on QWidget or QtQuick) got for existing feature like fixing reset/apply/default button state.
But also new features allowed by this standardization from already landed feature to ideas for the future.
Finally this talk will end with a discussion about which limitation we can encounter with KConfigXt current implementation and what to take in consideration when writing new module, porting existing one.
Captions: 
	00:00:01,120 --> 00:00:08,599
[Music]

00:00:11,679 --> 00:00:15,360
okay so

00:00:12,480 --> 00:00:16,800
today we will speak about system setting

00:00:15,360 --> 00:00:21,039
so i'm being jumping forward

00:00:16,800 --> 00:00:24,560
i'm from enoch odd culture a french

00:00:21,039 --> 00:00:25,279
development company that sponsors my

00:00:24,560 --> 00:00:27,680
time to

00:00:25,279 --> 00:00:28,880
to write the slides that's why i use a

00:00:27,680 --> 00:00:31,840
system

00:00:28,880 --> 00:00:31,840
so let's start

00:00:33,280 --> 00:00:38,879
are you smoking so the

00:00:36,320 --> 00:00:39,600
why we need system settings as you know

00:00:38,879 --> 00:00:41,920
plasma

00:00:39,600 --> 00:00:44,559
is a powerful environment and there is

00:00:41,920 --> 00:00:48,239
lots of configuration and

00:00:44,559 --> 00:00:49,520
so we need to let the user have a way to

00:00:48,239 --> 00:00:52,079
configure them

00:00:49,520 --> 00:00:55,280
that's why we have the system setting

00:00:52,079 --> 00:00:58,800
stem settings is composed of

00:00:55,280 --> 00:01:01,440
many many modules

00:00:58,800 --> 00:01:02,239
for plasma for example stem is for

00:01:01,440 --> 00:01:05,360
plasma but

00:01:02,239 --> 00:01:08,640
also for other stuff like sound

00:01:05,360 --> 00:01:11,280
with pulse audio or display

00:01:08,640 --> 00:01:13,520
or phones and everything everything it's

00:01:11,280 --> 00:01:15,759
a module on the system settings

00:01:13,520 --> 00:01:18,479
so i guess everyone know what is system

00:01:15,759 --> 00:01:18,479
setting but

00:01:23,040 --> 00:01:27,680
so what are modules in a lower levels on

00:01:26,880 --> 00:01:30,400
a screenshot

00:01:27,680 --> 00:01:31,759
so modules are queue widget or cute

00:01:30,400 --> 00:01:33,840
quick buzz

00:01:31,759 --> 00:01:35,920
in the future there will be all cure

00:01:33,840 --> 00:01:40,000
quick release

00:01:35,920 --> 00:01:43,680
it's a goal for for kd framework 6 to

00:01:40,000 --> 00:01:47,119
2 don't have q widget modules anymore

00:01:43,680 --> 00:01:49,200
so mostly of them are based on on the

00:01:47,119 --> 00:01:50,960
config framework it's a configuration

00:01:49,200 --> 00:01:54,079
promo i will tell you more

00:01:50,960 --> 00:01:55,840
about that in the next slides and there

00:01:54,079 --> 00:01:56,399
is also some mozart configuration

00:01:55,840 --> 00:01:59,200
frameworks

00:01:56,399 --> 00:02:00,159
used there two settings check off and

00:01:59,200 --> 00:02:04,560
yeah some more

00:02:00,159 --> 00:02:08,319
some other some other for some modules

00:02:04,560 --> 00:02:11,840
but when we

00:02:08,319 --> 00:02:14,000
we were like one uh one year ago

00:02:11,840 --> 00:02:16,000
some stuff were broken for example we

00:02:14,000 --> 00:02:16,800
don't have the apply reset and default

00:02:16,000 --> 00:02:20,239
button

00:02:16,800 --> 00:02:23,120
work as expected on all of the modules

00:02:20,239 --> 00:02:25,360
lots of times the state was not the one

00:02:23,120 --> 00:02:27,840
expected

00:02:25,360 --> 00:02:28,480
and in many cases the visible feedback

00:02:27,840 --> 00:02:31,440
for the

00:02:28,480 --> 00:02:33,280
imitable entry was broken i will tell

00:02:31,440 --> 00:02:34,160
more about imitable entry in the next

00:02:33,280 --> 00:02:36,879
slide too

00:02:34,160 --> 00:02:37,519
but basically we need to disable a

00:02:36,879 --> 00:02:40,400
widget

00:02:37,519 --> 00:02:40,959
if it's in table and that didn't work at

00:02:40,400 --> 00:02:50,480
all for

00:02:40,959 --> 00:02:53,519
all modules

00:02:50,480 --> 00:02:57,200
i will tell you a bit about config

00:02:53,519 --> 00:02:59,760
and kiosk so like i said config is a

00:02:57,200 --> 00:03:03,040
framework for configuration

00:02:59,760 --> 00:03:05,200
it subtracts the way we store data

00:03:03,040 --> 00:03:06,080
for configuration on the disk it's a

00:03:05,200 --> 00:03:09,360
kind of

00:03:06,080 --> 00:03:12,560
any file with some specific stuff

00:03:09,360 --> 00:03:15,040
and that low cascading

00:03:12,560 --> 00:03:16,959
what that means is we can have a

00:03:15,040 --> 00:03:20,000
configuration at user model

00:03:16,959 --> 00:03:23,200
but we can also of configuration

00:03:20,000 --> 00:03:25,360
at system level and if there

00:03:23,200 --> 00:03:27,200
is configuration on our user level it

00:03:25,360 --> 00:03:30,239
will be

00:03:27,200 --> 00:03:32,400
took and if not we will use

00:03:30,239 --> 00:03:34,959
the one at system level and if there is

00:03:32,400 --> 00:03:38,560
no configuration for this item at all

00:03:34,959 --> 00:03:38,560
we will take the one from the code

00:03:38,959 --> 00:03:42,319
it's what do conflict basically really

00:03:41,440 --> 00:03:46,000
basically

00:03:42,319 --> 00:03:48,879
um kiosk is

00:03:46,000 --> 00:03:50,799
from also based on config that allow

00:03:48,879 --> 00:03:52,080
administrator to create controlled

00:03:50,799 --> 00:03:54,959
environment for the

00:03:52,080 --> 00:03:56,400
user by customizing unlocking almost any

00:03:54,959 --> 00:04:00,480
aspect

00:03:56,400 --> 00:04:04,319
of the configuration so basically

00:04:00,480 --> 00:04:07,360
you don't want the user to change the

00:04:04,319 --> 00:04:08,799
the font you you can say oh i want the

00:04:07,360 --> 00:04:11,680
phone to be imitable

00:04:08,799 --> 00:04:12,159
you do that on the configuration file

00:04:11,680 --> 00:04:16,560
and

00:04:12,159 --> 00:04:19,600
at the end the user of a configuration

00:04:16,560 --> 00:04:21,519
module with phone disabled so they

00:04:19,600 --> 00:04:24,240
consist on but can change that

00:04:21,519 --> 00:04:25,280
it's really important for enterprise

00:04:24,240 --> 00:04:28,960
called

00:04:25,280 --> 00:04:30,080
university and a lots of of area like

00:04:28,960 --> 00:04:32,479
that because

00:04:30,080 --> 00:04:33,440
in some cases we don't want to to let

00:04:32,479 --> 00:04:43,840
the user

00:04:33,440 --> 00:04:43,840
block the setup

00:04:46,639 --> 00:04:53,840
so what we see in the previous slide

00:04:50,080 --> 00:04:56,880
is we have problem with state of button

00:04:53,840 --> 00:04:57,600
not working and also imitability not

00:04:56,880 --> 00:05:00,880
working

00:04:57,600 --> 00:05:04,160
so we needed a solution to to fix that

00:05:00,880 --> 00:05:08,000
so a conflict xt was

00:05:04,160 --> 00:05:10,639
the the chosen solution it's allow

00:05:08,000 --> 00:05:11,759
to use an existing system because that

00:05:10,639 --> 00:05:15,120
configs they

00:05:11,759 --> 00:05:15,759
already exist and have lots of benefits

00:05:15,120 --> 00:05:19,120
for us

00:05:15,759 --> 00:05:20,800
so config xt is based on config and it

00:05:19,120 --> 00:05:23,759
allowed to automatically

00:05:20,800 --> 00:05:25,199
automatically sync a widget and settings

00:05:23,759 --> 00:05:27,520
value

00:05:25,199 --> 00:05:30,000
the configuration entries are declared

00:05:27,520 --> 00:05:30,479
on an xml file i will show a bit of the

00:05:30,000 --> 00:05:34,000
fork

00:05:30,479 --> 00:05:36,080
later and with the

00:05:34,000 --> 00:05:38,080
compiler you will generate simple

00:05:36,080 --> 00:05:41,120
surplus plus code

00:05:38,080 --> 00:05:43,120
automatically that you can use directly

00:05:41,120 --> 00:05:44,160
in fact generator configs call it on

00:05:43,120 --> 00:05:48,400
subclass

00:05:44,160 --> 00:05:51,600
that generate for each configuration key

00:05:48,400 --> 00:05:54,080
a conflict skeleton item there is

00:05:51,600 --> 00:05:57,520
different kind of item

00:05:54,080 --> 00:06:01,919
if you for training for color for

00:05:57,520 --> 00:06:04,960
boolean and whatever and that we

00:06:01,919 --> 00:06:08,000
manage all things automatically for you

00:06:04,960 --> 00:06:10,720
so if you are using a newer file so

00:06:08,000 --> 00:06:11,440
yeah a bit old-fashioned nowadays so we

00:06:10,720 --> 00:06:14,000
do

00:06:11,440 --> 00:06:16,000
everything in cute quick but at the time

00:06:14,000 --> 00:06:17,600
config xt was created it was not the

00:06:16,000 --> 00:06:22,560
case

00:06:17,600 --> 00:06:26,400
if you name a widget starting with kcfg

00:06:22,560 --> 00:06:29,600
as prefix and the key entry name

00:06:26,400 --> 00:06:32,400
as suffix it will automatically bind

00:06:29,600 --> 00:06:34,560
the settings data and the widget so it

00:06:32,400 --> 00:06:36,720
will be a bit of magic and

00:06:34,560 --> 00:06:37,759
everything will work by everything i

00:06:36,720 --> 00:06:41,280
mean

00:06:37,759 --> 00:06:43,759
the yellow button state will work so the

00:06:41,280 --> 00:06:44,400
we will enable or disable the default

00:06:43,759 --> 00:06:46,639
reset

00:06:44,400 --> 00:06:48,800
and apply button when it's needed so

00:06:46,639 --> 00:06:51,840
basically if you didn't change anything

00:06:48,800 --> 00:06:54,319
the apply button we will be disabled and

00:06:51,840 --> 00:06:56,479
reset button will be disabled if you

00:06:54,319 --> 00:07:00,000
change one setting the boss will be

00:06:56,479 --> 00:07:02,000
enabled and if configuration are

00:07:00,000 --> 00:07:03,520
not like the default one the default

00:07:02,000 --> 00:07:06,080
button will be enabled

00:07:03,520 --> 00:07:08,319
and you don't have to to do the logic

00:07:06,080 --> 00:07:10,000
for all your items

00:07:08,319 --> 00:07:11,440
it will be android for free by

00:07:10,000 --> 00:07:13,599
configuring

00:07:11,440 --> 00:07:15,280
it's also taking consideration

00:07:13,599 --> 00:07:19,840
imitability and

00:07:15,280 --> 00:07:19,840
they will disable the binder widget

00:07:20,400 --> 00:07:25,280
and also the a nice thing it can be used

00:07:23,199 --> 00:07:27,599
to generate documentation of

00:07:25,280 --> 00:07:29,440
configuration option because like i said

00:07:27,599 --> 00:07:32,560
with kiosks you can

00:07:29,440 --> 00:07:36,319
change the configuration file mark some

00:07:32,560 --> 00:07:39,520
some items in the table

00:07:36,319 --> 00:07:42,639
but you firstly need to know the

00:07:39,520 --> 00:07:46,160
name of of those items and if you have

00:07:42,639 --> 00:07:49,199
all of all that on a xml file

00:07:46,160 --> 00:07:51,440
cfg file is an xml file it will be easy

00:07:49,199 --> 00:07:54,080
to auto generate documentation to

00:07:51,440 --> 00:07:54,960
show that but in this case there was

00:07:54,080 --> 00:07:58,560
some

00:07:54,960 --> 00:07:59,120
drawbacks we needed to board all modules

00:07:58,560 --> 00:08:01,199
to it

00:07:59,120 --> 00:08:02,960
and yeah there is tons of modules

00:08:01,199 --> 00:08:06,160
because plasma

00:08:02,960 --> 00:08:07,680
is slightly customizable and there was

00:08:06,160 --> 00:08:10,720
no cute quick support

00:08:07,680 --> 00:08:12,879
and like i said earlier

00:08:10,720 --> 00:08:14,560
the plan for the future was to have all

00:08:12,879 --> 00:08:19,680
modules on

00:08:14,560 --> 00:08:19,680
earthquake so it was a problem for us

00:08:21,360 --> 00:08:24,639
so the idea was to bring confederacy to

00:08:24,000 --> 00:08:27,440
cute quick

00:08:24,639 --> 00:08:28,160
i want to thanks um kevin tense for that

00:08:27,440 --> 00:08:31,360
he

00:08:28,160 --> 00:08:34,560
did the first step the first workout

00:08:31,360 --> 00:08:36,959
on the ice time so basically

00:08:34,560 --> 00:08:38,800
two quick modules are based on config

00:08:36,959 --> 00:08:42,000
module

00:08:38,800 --> 00:08:43,200
so there was a creation of a managed

00:08:42,000 --> 00:08:45,920
config module

00:08:43,200 --> 00:08:46,399
that will extend config module with

00:08:45,920 --> 00:08:49,120
config

00:08:46,399 --> 00:08:50,080
extra support by registering the

00:08:49,120 --> 00:08:53,680
skeleton

00:08:50,080 --> 00:08:57,760
automatically this allowed to use the

00:08:53,680 --> 00:09:00,480
kcfg file again and manage config module

00:08:57,760 --> 00:09:01,519
take care of default state and stuff

00:09:00,480 --> 00:09:04,640
like that so

00:09:01,519 --> 00:09:08,320
this at the end the

00:09:04,640 --> 00:09:08,800
the dialog button will be on the good

00:09:08,320 --> 00:09:11,200
stage

00:09:08,800 --> 00:09:12,240
for free for us but for that we needed

00:09:11,200 --> 00:09:14,800
to port

00:09:12,240 --> 00:09:16,640
all modules from config module to manage

00:09:14,800 --> 00:09:20,720
config module

00:09:16,640 --> 00:09:22,560
and from config to to config xt by that

00:09:20,720 --> 00:09:25,839
i mean

00:09:22,560 --> 00:09:29,600
don't choose config directly but use

00:09:25,839 --> 00:09:32,240
the class generated by a config compiler

00:09:29,600 --> 00:09:34,480
and at the end in the qml side add

00:09:32,240 --> 00:09:37,360
setting state binding

00:09:34,480 --> 00:09:38,240
for for a graphical item it will bind it

00:09:37,360 --> 00:09:42,240
to a

00:09:38,240 --> 00:09:45,440
to a certain entry and that will allow

00:09:42,240 --> 00:09:46,640
it to handle the image ability so

00:09:45,440 --> 00:09:49,839
basically

00:09:46,640 --> 00:09:51,200
if the item say oh it's in table we will

00:09:49,839 --> 00:09:54,320
disable

00:09:51,200 --> 00:09:56,959
the parent item so

00:09:54,320 --> 00:09:59,040
with that at the end it was a huge work

00:09:56,959 --> 00:10:02,480
to port

00:09:59,040 --> 00:10:05,360
not all but a lot of them to

00:10:02,480 --> 00:10:08,240
to manage config module and that brings

00:10:05,360 --> 00:10:08,240
us new idea

00:10:14,079 --> 00:10:19,760
the first idea was oh newcomers can be a

00:10:17,519 --> 00:10:22,160
bit lost on system setting because

00:10:19,760 --> 00:10:23,760
you know there is tons of settings so

00:10:22,160 --> 00:10:25,839
allowing them

00:10:23,760 --> 00:10:27,440
to find what differ from the best plasma

00:10:25,839 --> 00:10:30,240
configuration you know all that

00:10:27,440 --> 00:10:30,720
the best one is the default one can help

00:10:30,240 --> 00:10:33,760
them

00:10:30,720 --> 00:10:36,720
so basically when you are a newcomer

00:10:33,760 --> 00:10:37,519
in lots of in general you play with

00:10:36,720 --> 00:10:40,560
settings because

00:10:37,519 --> 00:10:42,959
oh nice i can i can configure everything

00:10:40,560 --> 00:10:44,000
and at the end you say hmm i don't

00:10:42,959 --> 00:10:46,320
really like that

00:10:44,000 --> 00:10:48,640
it was better when i didn't change

00:10:46,320 --> 00:10:50,640
anything but you don't remember what you

00:10:48,640 --> 00:10:51,040
changed because you are crazy and you

00:10:50,640 --> 00:10:54,000
click

00:10:51,040 --> 00:10:55,120
everywhere so allowing user to know

00:10:54,000 --> 00:10:58,640
which module

00:10:55,120 --> 00:11:01,200
or exchange and when there are in this

00:10:58,640 --> 00:11:01,839
module which time or change can be

00:11:01,200 --> 00:11:05,839
really

00:11:01,839 --> 00:11:08,240
important and useful so yeah

00:11:05,839 --> 00:11:09,920
i guess a screenshot can can let you

00:11:08,240 --> 00:11:13,120
understand a bit better

00:11:09,920 --> 00:11:15,920
so basically here we can see i change

00:11:13,120 --> 00:11:16,560
fonts i change startup and shutdown

00:11:15,920 --> 00:11:19,440
search

00:11:16,560 --> 00:11:21,680
and regional settings and fonts because

00:11:19,440 --> 00:11:24,959
there is an

00:11:21,680 --> 00:11:25,279
orange dot so you have a button to click

00:11:24,959 --> 00:11:27,760
to

00:11:25,279 --> 00:11:28,959
see that it will be available with

00:11:27,760 --> 00:11:32,160
plasma

00:11:28,959 --> 00:11:36,240
5 19 yes

00:11:32,160 --> 00:11:38,320
and on the model side you will see

00:11:36,240 --> 00:11:40,000
there is a for example the general font

00:11:38,320 --> 00:11:43,839
change so it's in a

00:11:40,000 --> 00:11:46,880
rain and the anti-aliasing

00:11:43,839 --> 00:11:50,399
oh yeah plasma 5.20 sorry

00:11:46,880 --> 00:11:52,399
uh so this will

00:11:50,399 --> 00:11:54,160
be orange when there are not defaults

00:11:52,399 --> 00:11:56,399
one so if i

00:11:54,160 --> 00:11:57,680
hit the default button i know exactly

00:11:56,399 --> 00:12:00,880
which

00:11:57,680 --> 00:12:11,839
we which settings will be

00:12:00,880 --> 00:12:11,839
revert to default value

00:12:13,680 --> 00:12:19,200
so oh that works so we

00:12:16,880 --> 00:12:20,480
we have used settings take binding again

00:12:19,200 --> 00:12:23,839
that will

00:12:20,480 --> 00:12:26,720
allow it to highlight them when needed

00:12:23,839 --> 00:12:28,160
there is still some limitation because

00:12:26,720 --> 00:12:30,560
it's still not done for

00:12:28,160 --> 00:12:31,440
all modules module modules are done but

00:12:30,560 --> 00:12:34,720
still

00:12:31,440 --> 00:12:38,160
work on going it work

00:12:34,720 --> 00:12:41,519
only for config xd based module

00:12:38,160 --> 00:12:44,800
it's not exact but yeah mostly and

00:12:41,519 --> 00:12:48,399
work well with um

00:12:44,800 --> 00:12:51,279
with bluestem because we need the custom

00:12:48,399 --> 00:12:53,040
custom support on the time so other time

00:12:51,279 --> 00:12:56,000
we need to support it

00:12:53,040 --> 00:12:57,279
to highlight key and for the model this

00:12:56,000 --> 00:13:00,079
level

00:12:57,279 --> 00:13:00,639
we needed to load all modules when we

00:13:00,079 --> 00:13:02,399
start

00:13:00,639 --> 00:13:04,480
system setting not when we start but

00:13:02,399 --> 00:13:07,920
when we click the

00:13:04,480 --> 00:13:10,880
button to show to highlight defaults um

00:13:07,920 --> 00:13:11,200
defaults module and the problem at this

00:13:10,880 --> 00:13:13,040
time

00:13:11,200 --> 00:13:14,240
it was if you want to load the module

00:13:13,040 --> 00:13:18,320
you needed to load

00:13:14,240 --> 00:13:21,839
ui too and it it was not

00:13:18,320 --> 00:13:25,040
ideal so we introduced kcm module data

00:13:21,839 --> 00:13:26,800
that will um handle settings and and

00:13:25,040 --> 00:13:28,880
expose them to kc module

00:13:26,800 --> 00:13:30,480
in fact in the past case module user

00:13:28,880 --> 00:13:33,600
user directly

00:13:30,480 --> 00:13:34,000
pc module or config manager config

00:13:33,600 --> 00:13:37,360
module

00:13:34,000 --> 00:13:39,279
on cute quick site and that will allow

00:13:37,360 --> 00:13:41,279
to split easily data

00:13:39,279 --> 00:13:43,360
and ui because in the past everything

00:13:41,279 --> 00:13:46,000
was declared in the same

00:13:43,360 --> 00:13:46,839
same place more or less now it's

00:13:46,000 --> 00:13:50,000
splitted

00:13:46,839 --> 00:13:51,040
so by regrouping all settings on the

00:13:50,000 --> 00:13:54,079
same place we can

00:13:51,040 --> 00:13:57,040
just load the settings without the ui

00:13:54,079 --> 00:13:58,079
and without the change that will be made

00:13:57,040 --> 00:14:00,160
if i

00:13:58,079 --> 00:14:02,399
change ui because i don't want to save i

00:14:00,160 --> 00:14:05,440
just want to know what is on the disk

00:14:02,399 --> 00:14:09,040
and now we can ask easily a module about

00:14:05,440 --> 00:14:11,760
its default state and there is no

00:14:09,040 --> 00:14:12,480
performance issue in the future with

00:14:11,760 --> 00:14:15,760
with this

00:14:12,480 --> 00:14:19,519
we can imagine some user use case like

00:14:15,760 --> 00:14:19,519
improving module searchability

00:14:21,839 --> 00:14:25,760
so basically basically like i said we

00:14:24,320 --> 00:14:26,320
can improve system settings search

00:14:25,760 --> 00:14:29,680
ability

00:14:26,320 --> 00:14:32,320
we can query information from kcfg using

00:14:29,680 --> 00:14:33,680
kc module data to have up-to-date data

00:14:32,320 --> 00:14:36,480
because currently

00:14:33,680 --> 00:14:38,160
um search on system settings is done by

00:14:36,480 --> 00:14:42,000
looking at a desktop file

00:14:38,160 --> 00:14:45,120
and if you add another

00:14:42,000 --> 00:14:47,920
field to settings you will probably not

00:14:45,120 --> 00:14:49,120
update the desktop file so it can be

00:14:47,920 --> 00:14:52,079
interesting

00:14:49,120 --> 00:14:53,600
to use it in the future and that can be

00:14:52,079 --> 00:14:56,240
used by carbon or two

00:14:53,600 --> 00:14:57,839
to improve the governor discoverability

00:14:56,240 --> 00:15:00,000
too

00:14:57,839 --> 00:15:01,360
another idea can be to highlight

00:15:00,000 --> 00:15:04,160
corresponding field

00:15:01,360 --> 00:15:04,959
so basically you'll see what we did with

00:15:04,160 --> 00:15:07,120
default

00:15:04,959 --> 00:15:09,600
we can imagine the same thing uh

00:15:07,120 --> 00:15:12,240
basically i search a general font

00:15:09,600 --> 00:15:13,519
and it will align general funds so i

00:15:12,240 --> 00:15:16,480
know in which module

00:15:13,519 --> 00:15:18,480
is it and also which field is it because

00:15:16,480 --> 00:15:20,560
there is some module with tons of field

00:15:18,480 --> 00:15:22,800
and its art finds it

00:15:20,560 --> 00:15:24,959
but more generally we can imagine to

00:15:22,800 --> 00:15:27,120
interact with casey fg file data and

00:15:24,959 --> 00:15:30,480
have other id uh global

00:15:27,120 --> 00:15:33,199
work export or something else though

00:15:30,480 --> 00:15:34,240
is not idea i think we need to do but

00:15:33,199 --> 00:15:37,360
was

00:15:34,240 --> 00:15:41,040
what go to my ad when i wrote this line

00:15:37,360 --> 00:15:41,600
and yeah basically it's people idea we

00:15:41,040 --> 00:15:44,639
can

00:15:41,600 --> 00:15:46,560
think about it it's a pretty new so yeah

00:15:44,639 --> 00:15:48,720
let's see in the future what we can with

00:15:46,560 --> 00:15:48,720
it

00:15:49,040 --> 00:15:56,720
so if you want to be a wizard too

00:15:52,639 --> 00:15:56,720
you can use um

00:15:57,120 --> 00:16:02,079
use it so basically you will need a full

00:16:00,079 --> 00:16:04,720
module data that will extend cassette

00:16:02,079 --> 00:16:06,959
module data

00:16:04,720 --> 00:16:08,000
this will register your full settings

00:16:06,959 --> 00:16:10,639
that was a class

00:16:08,000 --> 00:16:12,880
generated by your cfg file that exports

00:16:10,639 --> 00:16:15,040
item properties and we will you

00:16:12,880 --> 00:16:16,639
have a few modules that generate manage

00:16:15,040 --> 00:16:19,199
config module and have a

00:16:16,639 --> 00:16:20,800
full module that attribute and you will

00:16:19,199 --> 00:16:23,759
expose the config skeleton

00:16:20,800 --> 00:16:25,279
so the full settings from custom module

00:16:23,759 --> 00:16:26,399
data throughout the queue property so

00:16:25,279 --> 00:16:29,839
you can access it from

00:16:26,399 --> 00:16:32,959
uml and the qml code will bind item

00:16:29,839 --> 00:16:33,279
using setting state binding and you will

00:16:32,959 --> 00:16:36,560
do

00:16:33,279 --> 00:16:38,320
a bit of cement but

00:16:36,560 --> 00:16:42,000
i guess with a bit of code it will be

00:16:38,320 --> 00:16:42,000
more more clear

00:16:42,399 --> 00:16:46,959
so i took as example the desktops and

00:16:44,880 --> 00:16:48,000
system because yeah it's amazing one

00:16:46,959 --> 00:16:51,600
there is

00:16:48,000 --> 00:16:56,279
only one entry so basically for the

00:16:51,600 --> 00:16:57,839
cfg side there is two files there is a

00:16:56,279 --> 00:17:01,120
kcfg file

00:16:57,839 --> 00:17:02,160
it is the files that declare to the

00:17:01,120 --> 00:17:04,160
compiler

00:17:02,160 --> 00:17:06,559
which file to compile the class name

00:17:04,160 --> 00:17:07,679
generated and some other extra data i

00:17:06,559 --> 00:17:10,799
will not

00:17:07,679 --> 00:17:14,400
go in the tiles here

00:17:10,799 --> 00:17:17,439
and then in the cfg5 you can see

00:17:14,400 --> 00:17:21,199
you you have a group name as a

00:17:17,439 --> 00:17:23,280
filename is a configuration

00:17:21,199 --> 00:17:25,120
in the configuration file on your desk

00:17:23,280 --> 00:17:25,919
the group name will be the group and the

00:17:25,120 --> 00:17:27,919
entry name

00:17:25,919 --> 00:17:29,120
and you can also have a label currently

00:17:27,919 --> 00:17:31,039
we don't choose them

00:17:29,120 --> 00:17:32,880
but i i think in the future can be a

00:17:31,039 --> 00:17:36,000
good idea to to use them

00:17:32,880 --> 00:17:36,880
that can be useful for stuff like like

00:17:36,000 --> 00:17:41,280
search

00:17:36,880 --> 00:17:41,280
and there is also the default value

00:17:44,640 --> 00:17:52,799
so basically the casi module data uh

00:17:48,080 --> 00:17:55,840
so yeah it's a non-interesting file

00:17:52,799 --> 00:17:59,120
it's just here to collect all settings

00:17:55,840 --> 00:18:02,880
or this is on the case uh you really use

00:17:59,120 --> 00:18:05,919
config xd for example for for sony

00:18:02,880 --> 00:18:08,080
sony based on q settings

00:18:05,919 --> 00:18:09,919
uh there is a bit more of code but for

00:18:08,080 --> 00:18:12,320
lots of case there is no code and

00:18:09,919 --> 00:18:13,360
yeah there is an ongoing effort to have

00:18:12,320 --> 00:18:16,559
a semi

00:18:13,360 --> 00:18:19,679
to generate it because yeah there

00:18:16,559 --> 00:18:21,919
is no interest to write this code or

00:18:19,679 --> 00:18:24,400
it was basically the same for all

00:18:21,919 --> 00:18:24,400
modules

00:18:25,360 --> 00:18:29,600
so basically we have settings and we

00:18:27,600 --> 00:18:33,120
call auto register skeletons

00:18:29,600 --> 00:18:36,400
to register also all skeletons were

00:18:33,120 --> 00:18:39,600
two of them when we query it

00:18:36,400 --> 00:18:41,919
there is also the manage config module

00:18:39,600 --> 00:18:43,280
nothing really interesting here just we

00:18:41,919 --> 00:18:46,000
use

00:18:43,280 --> 00:18:47,200
the desktop temp data created earlier

00:18:46,000 --> 00:18:49,679
and

00:18:47,200 --> 00:18:50,400
and we expose the other properties uh

00:18:49,679 --> 00:18:53,200
desktop

00:18:50,400 --> 00:18:53,679
setting and on the qml side we can see

00:18:53,200 --> 00:18:56,720
here

00:18:53,679 --> 00:18:57,440
the with the qml item is a great view

00:18:56,720 --> 00:19:00,559
cassiem

00:18:57,440 --> 00:19:03,679
is the the review for

00:19:00,559 --> 00:19:06,720
all tem modules and

00:19:03,679 --> 00:19:10,240
we bind it with a desktop temp settings

00:19:06,720 --> 00:19:13,039
and the thing name is a name so certain

00:19:10,240 --> 00:19:13,520
name is the name of the temp and yeah we

00:19:13,039 --> 00:19:15,600
have a

00:19:13,520 --> 00:19:17,840
here an extra enabled condition is

00:19:15,600 --> 00:19:18,320
because setting state binding will do

00:19:17,840 --> 00:19:21,200
the

00:19:18,320 --> 00:19:22,720
imitable stuff but basically we will

00:19:21,200 --> 00:19:26,799
also want to disable

00:19:22,720 --> 00:19:26,799
if we are currently downloading a file

00:19:28,080 --> 00:19:33,360
but everything is not perfect

00:19:31,280 --> 00:19:35,360
all settings don't use config like i

00:19:33,360 --> 00:19:38,720
said sony user

00:19:35,360 --> 00:19:42,000
q settings also you used g-cones

00:19:38,720 --> 00:19:43,919
so we can choose kcfg file for them so

00:19:42,000 --> 00:19:45,440
car property skeleton item was

00:19:43,919 --> 00:19:48,720
introduced it

00:19:45,440 --> 00:19:52,559
enabled us to declare

00:19:48,720 --> 00:19:55,360
to declare a skeleton manually and

00:19:52,559 --> 00:19:56,400
and synchronize them manually with gcom

00:19:55,360 --> 00:19:59,200
for q setting

00:19:56,400 --> 00:20:00,080
it's a lot more work but it will allow

00:19:59,200 --> 00:20:03,120
us

00:20:00,080 --> 00:20:05,760
to have something more homogeneous

00:20:03,120 --> 00:20:06,240
and on the binding part there is also

00:20:05,760 --> 00:20:08,880
some

00:20:06,240 --> 00:20:08,880
difficulty

00:20:09,520 --> 00:20:13,200
basically sometimes for i guess

00:20:11,679 --> 00:20:16,320
historical reason

00:20:13,200 --> 00:20:19,039
we have one configuration key

00:20:16,320 --> 00:20:20,400
bind to multiple widgets or the other

00:20:19,039 --> 00:20:23,520
way when we judge

00:20:20,400 --> 00:20:25,760
that that will have

00:20:23,520 --> 00:20:27,520
multiple configuration case so yeah i

00:20:25,760 --> 00:20:32,159
guess in the future we need to

00:20:27,520 --> 00:20:34,880
to we need to prevent that because

00:20:32,159 --> 00:20:35,440
it's hard to maintain and yeah we kind

00:20:34,880 --> 00:20:39,039
of

00:20:35,440 --> 00:20:42,400
auto binding so i think we need to

00:20:39,039 --> 00:20:43,360
to probably write um configuration

00:20:42,400 --> 00:20:45,840
migration to

00:20:43,360 --> 00:20:47,280
avoid that because i'm not sure service

00:20:45,840 --> 00:20:52,720
really

00:20:47,280 --> 00:20:52,720
use case where we can do the other way

00:20:52,799 --> 00:20:57,360
so thank you for your attention and if

00:20:55,039 --> 00:21:00,840
you have any questions i i guess there

00:20:57,360 --> 00:21:03,840
is because chair node is right

00:21:00,840 --> 00:21:03,840
perfect

00:21:13,370 --> 00:21:19,039
[Music]

00:21:14,880 --> 00:21:22,240
or maybe we can question questions

00:21:19,039 --> 00:21:25,520
um that question so will these

00:21:22,240 --> 00:21:28,240
features make it easier to make variants

00:21:25,520 --> 00:21:31,840
of the appearance of specific settings

00:21:28,240 --> 00:21:31,840
if desired

00:21:33,520 --> 00:21:38,080
i'm not sure i understand the question

00:21:40,640 --> 00:21:47,520
the question is still oh

00:21:44,000 --> 00:21:50,159
so yeah we as i know

00:21:47,520 --> 00:21:50,960
for now we can't disable um height

00:21:50,159 --> 00:21:54,159
settings

00:21:50,960 --> 00:21:56,960
but yeah we can we can disable them

00:21:54,159 --> 00:21:58,960
uh i'm not sure there is plan to hide

00:21:56,960 --> 00:22:02,159
them perhaps someone else knows that

00:21:58,960 --> 00:22:02,159
but yeah not sure

00:22:03,360 --> 00:22:08,240
all right well let's go to the next the

00:22:06,320 --> 00:22:10,240
first question i suppose

00:22:08,240 --> 00:22:11,679
what should i do when i can't base my

00:22:10,240 --> 00:22:15,039
module on

00:22:11,679 --> 00:22:17,200
k config xt

00:22:15,039 --> 00:22:18,159
for example for highlighting change

00:22:17,200 --> 00:22:23,120
settings

00:22:18,159 --> 00:22:26,559
can i still use kc module data

00:22:23,120 --> 00:22:29,120
i'm asking for global shortcuts so

00:22:26,559 --> 00:22:31,039
don't know how i would use k property

00:22:29,120 --> 00:22:33,760
skeleton item

00:22:31,039 --> 00:22:35,360
so basically it's the case of sony that

00:22:33,760 --> 00:22:38,799
don't choose really

00:22:35,360 --> 00:22:40,159
config extra directly so yeah you can

00:22:38,799 --> 00:22:43,840
still use um

00:22:40,159 --> 00:22:46,240
kc module data because

00:22:43,840 --> 00:22:47,679
it will be just more works because yeah

00:22:46,240 --> 00:22:50,080
you will need to under

00:22:47,679 --> 00:22:51,200
what is default and yeah when you

00:22:50,080 --> 00:22:54,080
inherit

00:22:51,200 --> 00:22:54,960
provider is default method uh to

00:22:54,080 --> 00:22:57,600
highlight

00:22:54,960 --> 00:22:58,559
default settings also it's doable but it

00:22:57,600 --> 00:23:00,559
will

00:22:58,559 --> 00:23:01,919
need more work because you will need to

00:23:00,559 --> 00:23:04,480
do everything

00:23:01,919 --> 00:23:05,200
more or less manually and we have done

00:23:04,480 --> 00:23:07,520
that for

00:23:05,200 --> 00:23:08,559
some modules i don't remember which one

00:23:07,520 --> 00:23:11,679
but yeah

00:23:08,559 --> 00:23:15,120
we we we did that so yeah

00:23:11,679 --> 00:23:18,799
i i answered to this question

00:23:15,120 --> 00:23:22,080
okay well next question then

00:23:18,799 --> 00:23:22,880
we can have when can we have a system

00:23:22,080 --> 00:23:25,120
that syncs

00:23:22,880 --> 00:23:26,720
all my plasma and kde app settings to

00:23:25,120 --> 00:23:30,799
the cloud so it gets

00:23:26,720 --> 00:23:30,799
recreated when i reinstall

00:23:31,039 --> 00:23:36,640
so when someone will do that

00:23:34,159 --> 00:23:37,440
i don't know if there is no plan for

00:23:36,640 --> 00:23:40,080
that

00:23:37,440 --> 00:23:42,080
uh yeah a good solution is not to

00:23:40,080 --> 00:23:42,880
reinstall but yeah i know sometimes we

00:23:42,080 --> 00:23:46,720
change

00:23:42,880 --> 00:23:48,960
setup so it's needed uh you can probably

00:23:46,720 --> 00:23:49,760
already export your configuration file

00:23:48,960 --> 00:23:52,640
but there will

00:23:49,760 --> 00:23:53,840
be perhaps some stuff you don't want

00:23:52,640 --> 00:23:56,880
anymore

00:23:53,840 --> 00:23:59,840
but yeah there is no planner

00:23:56,880 --> 00:24:00,559
plan at all as far as i know to save

00:23:59,840 --> 00:24:04,720
stuff for

00:24:00,559 --> 00:24:08,000
to the cloud now but can be a good idea

00:24:04,720 --> 00:24:09,840
awesome okay last question unless one

00:24:08,000 --> 00:24:13,760
more trickles in

00:24:09,840 --> 00:24:16,640
will k config config xt

00:24:13,760 --> 00:24:18,000
incorporate kiosk functionalities or

00:24:16,640 --> 00:24:21,840
kiosks will exist

00:24:18,000 --> 00:24:22,559
as an individual app so kiosk is not an

00:24:21,840 --> 00:24:25,840
application

00:24:22,559 --> 00:24:27,120
is a framework so basically is a what

00:24:25,840 --> 00:24:29,440
enable to

00:24:27,120 --> 00:24:30,559
to put in the configuration stuff like

00:24:29,440 --> 00:24:33,760
immutability

00:24:30,559 --> 00:24:36,320
it exists i guess from decade now

00:24:33,760 --> 00:24:37,600
it's not something new it's something

00:24:36,320 --> 00:24:40,960
used in the past

00:24:37,600 --> 00:24:43,440
in at some times it was not working

00:24:40,960 --> 00:24:44,240
anymore as expected because some stuff

00:24:43,440 --> 00:24:46,720
are broken

00:24:44,240 --> 00:24:49,200
but it exists and there is some no

00:24:46,720 --> 00:24:51,200
nothing new and there is no up for that

00:24:49,200 --> 00:24:54,240
uh i guess we expect a system

00:24:51,200 --> 00:25:01,840
administrator to write the configuration

00:24:54,240 --> 00:25:01,840
directly on on the favorite text editor

00:25:05,440 --> 00:25:07,520

YouTube URL: https://www.youtube.com/watch?v=QeOHV8myQ5E


