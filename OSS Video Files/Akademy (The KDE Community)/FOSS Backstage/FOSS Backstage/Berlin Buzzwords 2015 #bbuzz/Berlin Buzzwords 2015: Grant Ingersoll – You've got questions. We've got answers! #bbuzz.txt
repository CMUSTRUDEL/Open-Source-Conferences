Title: Berlin Buzzwords 2015: Grant Ingersoll â€“ You've got questions. We've got answers! #bbuzz
Publication date: 2015-06-03
Playlist: Berlin Buzzwords 2015 #bbuzz
Description: 
	Ever wonder how Watson beat all comers in Jeopardy or how Siri or Google Now work?  Thinking about deploying Question Answering (QA) technology in your application? QA and NLP technology have finally hit the mainstream and are making information access easier and more personalized every day. 

The best part? Open source technologies make it easier than ever to build and deploy question answering technology.  In this talk, we'll lay the foundation of building a next generation QA system using open source like Apache Solr and various open source NLP libraries as well as demonstrate a working system able to answer real natural language questions.

Read more:
https://2015.berlinbuzzwords.de/session/youve-got-questions-weve-got-answers

About Grant Ingersoll:
https://2015.berlinbuzzwords.de/users/grant-ingersoll

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	                              great thanks Thomas she said my name is                               granting us all I'm the CTO and                               co-founder of lucid works we're                               primarily a guy                               you build we've seen a solar and build                               stuff on top of that a little bit of a                               advertisement first and awesome                               everything crashed so I'll just stick to                               hear let me bring keynote back up and                                hopefully we'll be good they were just                                warning me that uh there was issues with                                keynotes so hopefully this will work                                otherwise I'll have to export to PDF                                real quick so a little bit of quick                                advertisement if you like we've seen and                                solar and you want to go to austin texas                                which is a great little town in Texas                                we're doing leucine solar revolution                                this year in October it's a great time                                to come visit the US and visit texas so                                with that let's get into you've got                                questions we've got answers how many                                people here are working on actual                                question answering systems one person                                all right you get to leave because this                                is all more beginner level all right                                we're going to introduce what is                                question answering we're going to take a                                look at some working examples and we're                                going to talk about some of the details                                that go into building a question                                answering system and I'm going to put                                some caveats along the way and so at the                                end of the day what I'm going to say is                                mostly true all right it's up to you                                then to figure out what works for you                                and your real system but I think what                                you'll find is that if you go and look                                at what I'm talking about you compare it                                to the state of the art there's going to                                be some gap there but the concepts and                                the ideas are about right and then you                                can take and decide how much effort you                                want to put in to other things so with                                that how many people saw Watson play                                jeopardy okay so you guys are at least                                familiar with a lot question answering                                is if you're familiar with search you                                know we're usually returning                                        links with question answering as the                                name implies I want to return the answer                                who is the current prime minister of                                Germany give me that exact answer and                                got to be contextual right because I                                can't just say who is the Prime Minister                                                                                                        it is I need to take into account all                                kinds of hints and information about who                                i am and where i am and all of these                                kinds of things okay and so that's kind                                of the end goal and if you think about                                search in general what most users are                                after our answers so would it be great                                if we could actually give them answers                                so in some sense like question answering                                is the future promise of search and you                                see more and more search engines or at                                least offering answers in select                                circumstances okay like things like                                specific facts that they know or or                                answers to questions that people ask                                every day day in day out hey instead of                                doing a search why don't we just put up                                the answer for that and so let's start                                off with a little demo and in this demo                                it's based off of some code that I've                                written based off of a book that I've                                written called taming text we'll talk                                about that a little bit more in the                                minute but the idea here is that I'm                                going to take some set of information                                and I'm going to add some NLP on top of                                it I'm going to mix it in with search                                I'm going to do some fancy scoring and                                I'm going to come back with an actual                                result and so I've got a query that I'm                                sure all of you are thinking about right                                now what is tri methyl benzene right                                this is at the forefront of your                                imagination I'm sure but I'm going to                                actually go and run that after I make                                this a little bit bigger can you see                                that back there I'm going to go and run                                that and what you'll see is if I make                                that a little bit bigger is I actually                                did this is going to hitting solar it's                                doing a bunch of question parsing and                                all that stuff and you can see that it's                                actually returning here an answer                                     tri methyl benzene is a colorless liquid                                 with chemical formulas eh it is                                 flammable flammable aromatic hydrocarbon                                 with a strong order so pretty good                                 answer right now of course hey you know                                 the power of demo I'm up                                 here on stage of course I picked one                                 that makes sense but we can also ask                                 other types of questions like who is                                    minute warning and you can see that i                                 can get back answers here as well                                 ten-minute warning was a hardcore punk                                 band from Seattle Washington they became                                 famous locally and if I scroll down here                                 a little bit you can see that here                                 indeed is the supporting content that I                                 derived that answer from so if you were                                 doing raw search you would get back this                                 if you're doing question answering you                                 can get back something like this which                                 one's better depends on what you're                                 looking for but I think you know for                                 most of us the quicker faster answer is                                 usually the better if I'm really into                                    minute warning maybe I want to know all                                 of their background but in this case you                                 know I don't know a lot about them i'm                                 actually i don't know any of their music                                 anybody know                                                          audience here one person get that guy a                                 gift card I think he he wins the prize I                                 think you're the only person where I've                                 given this talk that knows this band but                                 I could also ask other questions like                                 what is Berlin buzzwords doesn't work                                 what happened the system's broke right                                 well in reality will explain what's                                 going on here and that's the kind of the                                 power and the promise of question                                 answering and also some of the                                 shortcomings of it is that it doesn't                                 always work and so we have to be smart                                 about how we think about question                                 answering and and you know how we                                 integrate this into our system and and                                 feedback loops and all of that kind of                                 stuff so that's kind of a gentle                                 introduction basic idea of those I want                                 answers and as you saw by the types of                                 questions that I was asking in this                                 particular context and this in my book                                 and in in the code that I've written                                 it's primarily geared around fact-based                                 questions I'm not asking what were the                                 causes of                                 you know the u.s Civil War what you know                                 when did you know some complex thing                                 that you could go do a whole PhD on                                 right we're just asking for facts and of                                 course you can build things on top of a                                 fact-based engine to ask more                                 interesting questions find me all the                                 content that compares and contrasts the                                 u.s Civil War for instance or whatever                                 your fancy is like you can start to                                 layer on more complex things but in this                                 particular code set of examples it's all                                 about can I find that little snippet of                                 data that says this is the answer to                                 this question or at least this is the                                 likely answer to that question so all of                                 this stuff is kind of based off of work                                 that I get to do when I put my CTO hat                                 on it loose it works as well as in the                                 book taming text the book itself is a                                 little bit out of date but it's                                 primarily geared towards people have                                 never built their engineers like                                 yourself you probably know Java or some                                 other language but you've never                                 necessarily worked on search or worked                                 on NLP before and so the idea is I'm                                 going to walk you through in a gentle                                 way what are the concepts behind these                                 things and they show you working                                 examples using open source open source                                 code that either we the authors wrote or                                 based off of popular open source                                 projects like leucine solar about open                                 NLP all of those kinds of things so with                                 that I always like to start when we                                 think about NLP by taking a step back                                 and I just want to warn you like                                 everything that you've done in your                                 engineering career if you haven't worked                                 on these kinds of problems is going to                                 start to make you feel squirmy and a                                 little uncertain of yourself and the                                 interesting thing is like when you start                                 to think about text it's filled with all                                 kinds of different characters right                                 there's a lot of evil people or evil                                 kinds of texts out there there's noise                                 there's bad data there's a mixture of                                 good and bad data there's mixtures of                                 languages all in one document there's                                 people believe it or not on the web who                                 actually published lies so what are you                                 going to do about all that stuff this is                                 going to be your job if you want to be                                 an NLP engine                                 here you're gonna have to spend a lot of                                 time fighting these guys so I like to                                 think about is how can we go off and do                                 this there's people who are gestures                                 there's people who they say things that                                 look like they're actually serious but                                 they're not it's called sarcasm right                                 there's people who are really good at                                 language the Hemmingway's the Faulkner's                                 all these guys there's people who write                                 sentences that go on for multiple pages                                 and people actually think those                                 sentences are beautiful how do you train                                 a computer to detect a sentence that                                 spans                                                                    engineer and then I'll by the way                                 there's other things like there's                                 unicorns there's really rare stuff in                                 fact you're a unicorn the fact that your                                 name probably who you are if you show up                                 in text chances are that's a pretty rare                                 event for most of us you know we're not                                 world famous all of us are the odds of                                 any one of us showing up in texting a                                 machine be able to say oh that's Bob                                 Jones right there this Bob Jones that's                                 sitting right in the front row not very                                 high likelihood that we would be able to                                 determine that and yet you're often                                 asked when building these systems to be                                 able to do this kind of stuff right the                                 cool thing though is at the end of the                                 day we all get to be the heroes because                                 we get to work on this stuff but most                                 importantly just remember no system will                                 be perfect here's the other caveat when                                 it comes to dealing with this stuff I                                 want you to everybody know the English                                 idiom take it with a grain of salt again                                 that kind of goes back to well it's                                 mostly true but don't believe everything                                 you hear hear I think when a lot of us                                 think about NLP and machine learning we                                 think about all these fancy algorithms                                 you know support vector machines or deep                                 learning or all of these kind of really                                 cool things neural networks etc you're                                 going to spend a whole lot of time on a                                 whole bunch of crap work pardon my                                 french there right you're going to spend                                 time dealing with things like PDF                                 formats anybody tried to extract text                                 from PDF before raise your hands been a                                 good experience for you know why not                                 it's because it's a proprietary format                                 we're using open source tools to get it                                 Adobe doesn't publish this pack all of                                 that kind of stuff you have to pay for                                 it well there's all kinds of those kinds                                 of problems and you're going to spend a                                 lot of your time on those kinds of                                 problems things like pre-processing                                 feature selection sampling doing                                 validation and testing and all that                                 you're going to spend a little                                 itty-bitty time on the core algorithm                                 itself and guess what in most situations                                 the algorithm is only going to move the                                 needle by a tiny little bit and so I                                 always like to try to warn people ahead                                 of times that you need to start simple                                 use tried-and-true approaches also keep                                 in mind what is the bang for the buck                                 for you and your company right a lot of                                 people want to add for instance really                                 fancy NLP of their search algorithms                                 when in fact they would be a hundred                                 times better off just simply adding                                 something like autocomplete to their                                 search box right so you may as an                                 engineer want to go do NLP because                                 that's really cool but autocomplete                                 which is basically an engineering task                                 at this point of adding a couple more                                 servers and being a little bit smart                                 about certain things but you mostly get                                 it for free from modern search engines                                 way better bang for the buck so until                                 you've done those easy things first                                 don't bother here yet okay that being                                 said it won't be a talk if I just quit                                 right now so let's dig in and look at a                                 really simple q a workflow okay so over                                 on the left kind of one of the premises                                 of most modern QA systems and Watson is                                 no different here being you know kind of                                 the most famous QA system and probably                                 the most popular and well-known they're                                 all based off of taking in a bunch of                                 content from the web Wikipedia etc and                                 so if that content doesn't have the                                 answer or has conflicting answers or                                 whatever you have to deal with that                                 right so when I ask the question where                                 or what is Berlin buzzwords and it came                                 back with no answers now you guys know                                 why because what I was doing was                                 indexing a snapshot of wikipedia from I                                 don't know three or four years ago                                 whatever I have on my laptop in fact i                                 was actually indexing a subset of                                 wikipedia something like                                    thousand records so the facts that i can                                 answer are all based off of what i see                                 in that core content right so classic                                 case a garbage in garbage out or in this                                 case if there's no garbage in I'm                                 definitely not getting any garbage out                                 right and so one of the things I've got                                 to do is here on the left hand side                                 basically as my content is flowing in                                 whatever it is I want to do some really                                 simple things and so this is what's                                 baked into the code you could add other                                 layers here but the first thing I do is                                 detect sentences which is basically you                                 know I'm just splitting on periods and                                 things like that open NLP actually comes                                 with a pretty decent sentence detection                                 and the grand scheme of NLP kinds of                                 things sentence detection is actually a                                 pretty easy problem at least for Latin                                 based languages if you get into Chinese                                 Japanese Korean etc then it gets a bit                                 harder as just just dealing with the                                 character sets and all that and then                                 what we do is we go and do named entity                                 recognition I'll cover a little bit more                                 what that is and then we just add those                                 documents into solar so now at indexing                                 time I've got a solar index or leucine                                 index that contains essentially some                                 annotated content it's the raw original                                 content that whole big document on                                    minute warning but it has some extra                                 things added into it and those extra                                 things will then allow me a query time                                 to do interesting things and so a lot of                                 the work happens at query time obviously                                 the the natural language question comes                                 in notice I wasn't doing like if you're                                 familiar with leucine and solar I wasn't                                 doing you know ten and minute and                                 warning you know and putting in like                                 boolean operators or parenthesis or any                                 of that kind of stuff I was actually                                 just letting the person type in real                                 questions just like you would in this                                 particular case English ones but you                                 could go and train this for German or                                 French or whatever you want to go and do                                 so first off we've got to go and parse                                 that query we've got to split that up                                 into tokens and we've got to find out                                 interesting things about it I'll talk a                                 little bit more about what those are and                                 then this really is the crux of the the                                 process here on the query side is I                                 wanted                                 terming the answer type we'll get into                                 that here in a minute and then so on                                 down its kind of the rest of it is                                 pretty easy after this or these next two                                 steps basically how do I convert that                                 answer type and the query and a leucine                                 or solar query and then last but not                                 least I get a bunch of candidate                                 documents so if you're familiar with                                 Lucy in the solar they just return back                                 the raw documents I've actually got to                                 do something to score within those and                                 that's what this whole ranking passages                                 and you can get really complex about                                 this if you read for instance the Watson                                 paper they go and do some really                                 advanced ranking around tiebreakers and                                 different data sets and all that kind of                                 stuff so far so good so that's a very                                 high level very simple workflow there's                                 a lot of room for improvement here I                                 will talk a little bit about some of the                                 room for improvement at the end of this                                 talk but let's dig into what are the                                 building blocks here so in the book this                                 is all in chapter                                                      those grain of salt categories sentence                                 detection part-of-speech tagging parsing                                 these are all kind of the core building                                 blocks of NLP how many people remember                                 their high school grammar class verbs                                 and nouns and adjectives how many people                                 like their high school grammar class                                 nobody well okay so you're an NLP                                 engineer you can you know come talk to                                 me afterwards we'll get a job for you so                                 the idea oftentimes though is that                                 you're building out structures like this                                 anybody remember diagramming sentences                                 in high school really fun exercise nod                                 your heads yes your English teacher your                                 German teacher or whatever language                                 would be really proud of you so in this                                 particular case like I've got this                                 sentence the Minnesota Twins my hometown                                 baseball team the                                                   champions are currently in third place                                 we parse that out this is a noun phrase                                 the minnesota twins that whole thing the                                                                                                         a noun phrase together to noun phrases                                 make a noun phrase starting to come back                                 to you painful memories English you've                                 got your verb phrase over here we got                                 verb in an advert                                 adverb phrase are currently in third                                 place the cool thing is something like                                 open NLP actually will do this whole                                 structure for you and so now we can                                 start to think about how can we leverage                                 those in that information right you can                                 start I think if you're paying attention                                 you're thinking about okay I've got this                                 answer type on the query side and I've                                 got the structure content over on the                                 documents I think about how you can fit                                 together those puzzle pieces but before                                 we do that let's take a little aside                                 everybody familiar with named entity                                 recognition all right this is that whole                                 problem of how do I know Bob Jones is                                 really Bob Jones or or whether Bob Jones                                 is actually a person or a thing or                                 something of interest if your yahoo user                                 a lot of web news sites these days may                                 be a little hard to read in the back                                 there but on this particular image like                                 Sarah Palin everybody's favorite                                 presidential candidate and I'm sure is                                 underlined and this system is actually                                 underlining and highlighting named                                 entity named entities in the text                                 apologize for the outdated us slide but                                 it's still relevant and the ideas then                                 you can they're hyperlinked and you can                                 click on it and get more information                                 about that person so NER is this process                                 of extracting proper names and there's a                                 couple different approaches we can do                                 rule based approaches like look for see                                 certain key words together like you know                                 mr. Bob Jones so anytime you see the                                 word mr. then chances are the thing that                                 follows up after it is a person right so                                 you can build out these rules but even                                 better we can apply machine learning to                                 these kinds of things and that's really                                 how the modern approach is done to it                                 but even there right you see already one                                 of the hard problems how is mr. usually                                 spelled Mr period right what ends a                                 sentence in English anyways period right                                 so you sure that's not the end of a                                 sentence and then in Bob Jones is the                                 beginning of the next one maybe it is                                 maybe it isn't right so again you start                                 to think about how all of these play                                 together and really at the end of the                                 day this any our stuff is a pretty                                 critical aspect because it turns out in                                 question answering most people when                                 they're looking in these fact                                 systems they're interested in people                                 places things they're interested in                                 named entities so digging in after that                                 let's think a little bit about search in                                 this context because most of the work                                 like a said happens a query time the                                 documents indexing side that codes                                 pretty straightforward all of its built                                 out in the book code you can go and try                                 it really easy the search side is really                                 where it gets interesting and what we do                                 in the book is take a custom query                                 parser so solar makes it really easy for                                 you to plug in your own query parser so                                 that's all we did was take a plug-in one                                 that can handle natural language and                                 then the key thing that you've got to be                                 able to do is retrieve what's called a                                 candidate passage fact this is what                                 Watson does it does it across lots of                                 different data sets it's really fast at                                 it and it's really fast at combining                                 them together that whole combining them                                 together is that I've got these                                 candidate passages i need to go score                                 them the interesting thing that's                                 different here from search in most cases                                 when you're just showing                                               is in most searched systems you just                                 need to know that there was a match                                 right you don't need to know where it                                 occurred in a QA system I need to know                                 where it occurred so I can go look                                 around it at the context right and so                                 that's one of the trivial or one of the                                 key things that's underlying this turns                                 out lucena solar have support for this                                 it's called they're called span queries                                 or position based queries they're not                                 really greatly support I mean they're                                 supported but they're not necessarily                                 first-class citizens but as they just                                 gave me they are getting better has that                                 been committed okay so on the latest                                 Lucy never mind all that like positions                                 and all of this where did it occur or is                                 now a first class citizen which is great                                 because before it was kind of clunky and                                 so that's one of the key things that we                                 need to be able to do the other key                                 thing we need to be able to do like i                                 said is determine that answer type well                                 the answer type is essentially doing a                                 categorization of the users question                                 what is this person looking for what is                                 their intent right and in this case                                 we're doing certain kinds of answer type                                 so in the book we just use four                                 different answer types but there's                                 hundreds depending on                                 who you want to talk to and what your                                 system wants you can go after a lot more                                 of these so a few examples i'm                                 interested in a person or a location or                                 an organization or a time point so you                                 might ask the question when is Grant's                                 talk at Berlin buzzwords wouldn't that                                 be great if instead of looking on the                                 schedule you could just say into your                                 phone when is Grant's talk at Berlin                                 buzzwords I would be really nice feature                                 to have and so what we're then doing is                                 there's a two-part process to this we're                                 going to train an NLP classifier on a                                 bunch of questions and then at query                                 time all we have to do is feed that                                 question into that model that was                                 created so we do the training offline                                 and then we look up and ask the model at                                 runtime so for example here's actually                                 one of the training questions it's                                 labeled with a p                                                       French monarch we all know that we're                                 looking now for a person reinstated the                                 Divine Right of the monarchy blah blah                                 blah you can tell academics came up with                                 these examples so you know it's                                 obviously something you know you                                 wouldn't necessarily see on your core                                 website but you would do the same kind                                 of thing when is grant talking at Berlin                                 buzz words or who is grant or whoever                                 you could train based off of those kinds                                 of examples so now we've got a way of                                 searching we've got this answer type                                 there's a little bit of magic there and                                 asking the right kind of question but if                                 you remember at document indexing time                                 worry we're overlaying things like the                                 part of speech and all of that stuff so                                 we're we're overlaying onto the document                                 things like this is a noun phrase or                                 this is a named entity now a query time                                 I can say oh this is looking for a                                 person that means I want to look for                                 named entities within the scoring                                 passage and so then it becomes a                                 question of how do i do scoring on this                                 in the book we present a really simple                                 scoring approach but it works decent                                 enough for you to get started and                                 feeling like you're making progress I                                 won't claim that we invented this is                                 actually in the early days of question                                 answering back in the                                                    this in one of their question answering                                 papers pretty simple though is                                 again now all of a sudden you can see                                 why I need to know where the match was                                 because I'm going to look at the                                 matching terms and then I'm going to                                 look at various size windows around                                 those matching terms right so what is                                 trying methylbenzene finding the word                                 tri methyl benzene and then looking at                                 around it and then doing some scoring                                 based off of in this particular case                                 it's a really simple scoring so far so                                 good so it turns out then that we can                                 actually do some really interesting                                 things with this beyond I'm just going                                 to give another little quick demo                                 assuming that I started it properly in                                 this particular case looking at some of                                 the work that we're doing shoot I forgot                                 to start it let me fire that up some of                                 the work that we're doing in loser works                                 fusion fusion is just our product that                                 sits on top of leucine and one of the                                 things you start to think about is that                                 well if I'm doing this answer type stuff                                 I don't have to just use that for                                 question answering I can use that really                                 to try to categorize a user intent and                                 so what we've been done is build into                                 our mechanism into what we call our                                 pipeline stages this ability to say that                                 I want to do things like to tech what                                 the what the answer types are and then                                 feed that into downstream applications                                 so let me just see if that's done                                 starting up otherwise I'll come back to                                 it almost done so here we go just pop                                 over to this other window so in this                                 particular case what uh what I've done                                 is let me just skip right to my window                                 here                                 sorry search and I'm going to choose my                                 collection questions and I'm going to                                 get back a bunch of content here let me                                 just make this window bigger not sure                                 what's going on resolution size there                                 you can see what I've got in here is a                                 bunch of tax questions so this is                                 generated off of user forms for us taxes                                 hopefully European taxes aren't as                                 archaic is US taxes but people spend a                                 lot of time in the US on taxes and so                                 for instance in these this faq if you                                 will you can imagine applying this to                                 any faq system which people ask                                 questions like where do I take a                                 deduction for a home office right I                                 don't know if that's a thing over here                                 but it's a thing in the US and you can                                 get money back for it and so what we've                                 done is we've taken all of those                                 questions those are essentially are                                 training our training examples and you                                 can see for instance the second item                                 here that's my label that's my answer                                 type you remember the P in the                                 organization person organization will in                                 this particular case whoever built this                                 faq has also assigned labels to them and                                 so you can see here i'm actually just                                 searching all I put all this content and                                 solar itself and so then I can build my                                 model off of it and so we can come in                                 and then I can ask questions like if I                                 can remember their my exact syntax how                                 do i take the home office deduction and                                 good lord willing live demos it works                                 okay and so the interesting thing here                                 that i did is obviously i'm getting                                 matches on the questions themselves but                                 i've also done this categorization of                                 the question itself and that's allowed                                 me to do what's called the landing page                                 infusion or a best bet if you're                                 familiar with that in most search                                 systems here the idea being that in this                                 particular case and i'll show you what                                 the pipeline looks like i've done a                                 categorization or a classification of                                 the question and then I've marked that                                 in my processing steps before I even                                 query solar and then I've fed that into                                 this                                 any page thing that just says oh if                                 there's a if I see this type of category                                 for the answer type then just                                 automatically attached to my results                                 this landing page or this page that I                                 would redirect to so for instance like                                 if you're on the apple website and you                                 do a search for iphone does this show                                 you                                                                      shows you it takes you right to the                                 iphone landing page same kind of idea                                 here what is this user looking for what                                 is their intent well if we know then                                 let's just take them right to the answer                                 and then I can also add in obviously all                                 the question answering stuff that I do                                 too but you'd be surprised at how many I                                 bet if you went and looked in your logs                                 how many people come to your website and                                 ask the same question over and over                                 again chances are you're already                                 curating them anyways so what does this                                 look like real quickly in the pipelines                                 just pop over to this other tab here I'm                                 going to go look at my questions and                                 literally with the way of fusion works                                 you can just drag and drop different                                 pipeline stages in there in this                                 particular case on the I'm in the query                                 pipelines I'm doing my searches against                                 solar I setting up what searches or what                                 fields I want to search and then I've                                 got this little NLP classifier that                                 literally is just outputting to a                                 specific label this category field and                                 using a model that I have stored on my                                 local system this is all prototype code                                 right now something that we're working                                 on for the near future here and so out                                 of that then comes a category label if                                 it can label it and then the next stage                                 I have is one of our landing pages                                 stages and it literally just says if                                 I've got a match on the category label                                 in this case deduction home office then                                 I want to redirect to this exact URL and                                 you can apply different strategies to                                 matching and all that right so that's                                 not so much it's not so much about doing                                 this with landing pages as that's an                                 example of how you could go do this and                                 in fact all of these stages will get                                 that context passed in                                 and then you can see the very last one                                 here is go and do solar but so for                                 instance i might based off of the                                 category i might choose different                                 faceting options right and then have it                                 automatically display those facets                                 that's a big problem in e-commerce so                                 again like how can I take this user                                 intent and then turn that into something                                 interesting and then like I said of                                 course we can go and build proper QA                                 systems and all of that underneath the                                 hood just get back to my slides so I                                 think pretty quickly showed you some of                                 the basics that go into QA it's                                 obviously kind of a trivial situation if                                 you've ever written a book you realize                                 that the whole thing is about writing                                 the simple examples that demonstrate the                                 idea without you know giving you know we                                 get to wave our hands a lot as authors                                 so a real production system obviously                                 has to do a lot more I've put up here a                                 number of different ideas around next                                 steps as some things that are                                 interesting that you could do even in my                                 you know my little solar demo there                                 where I'm getting back and showing you                                 those actual answers if you really dug                                 in on that you would see that it's not                                 really yet the answer like I think in                                 some of them I had you know I have that                                 window but chances are you could                                 probably narrow it down even less than                                 that and and say it's this exact kind of                                 piece to it so extracting the actual                                 answers there's a fair bit of work that                                 goes into that doing things like dealing                                 with duplicates or conflicting answers                                 or all of those kinds of things that's                                 really a critical part especially if                                 you're taking in the world's knowledge                                 if you will or a really large volume of                                 content you're going to have people who                                 disagree how do you decide which one so                                 you know I think a lot of what IBM did                                 was take and figure out good ways of                                 learning the weights of which systems                                 which data sources to trust and why and                                 win and that in itself is a machine                                 learning problem as well you can do                                 other things like you know obviously                                 there's a whole bunch of more answer                                 types training data is needed on that I                                 think some of the deep learning stuff                                 that's going on could really help in                                 terms of the features                                 election and all these kinds of pieces                                 and then last but not least one of the                                 things like we do in fusion as we allow                                 you to very easily capture clicks and                                 feedback mechanisms from your user and                                 then feed that back into your search                                 results and so being able to do those                                 kinds of things where hey this user                                 actually clicked on that answer or you                                 know grabbed a snippet of it and copied                                 it somewhere else like giving you an                                 indication that that is the actual right                                 answer then you can feed that back into                                 your system right and you're learning                                 now from what your users are doing and                                 then obviously over time your answers                                 should get a lot better right we could                                 go on and on here there's all kinds of                                 low-level engineering questions to be                                 answered and all that stuff there's lots                                 of you know for instance I use open and                                 LP in the book but there's things like                                 Stanford NLP and various other natural                                 language processing libraries that are                                 good if not better and so depending on                                 you know your penchant for doing all                                 those things your mileage may vary so                                 that's it I think we've got what five                                 minutes for questions so I'm happy to                                 answer any questions i do have at the                                 end of the slides here quick on how to                                 get started and run the demo that i                                 showed you otherwise happy for a few                                 questions thank you guys thank you                                 you
YouTube URL: https://www.youtube.com/watch?v=nbhVbAR1MdM


