Title: Myrle Krantz – Observability with Prometheus and beyond
Publication date: 2021-06-25
Playlist: Berlin Buzzwords 2021 #bbuzz
Description: 
	If you're running a system at scale, you need tools to maintain it. This talk gives a high level overview of what observability and monitoring mean, and how to use Prometheus, Loki, Cortex, and Tempo to monitor your stack. 

Speaker:
Myrle Krantz – https://2021.berlinbuzzwords.de/member/myrle-krantz

More: https://2021.berlinbuzzwords.de/session/observability-prometheus-and-beyond
Captions: 
	                              good evening                               and good morning to those of you not in                               germany                               so this is going to be a beginner level                               talk about observability and                               uh prometheus and some of the other                               tools that we also have available for                               this                               so                                we're at berlin buzzwords so i figured                                i'd start off with a slightly unrelated                                topic which is                                what is a buzzword so a buzzword is a                                phrase that has become                                fashionable sometimes they lose their                                meaning because they became fashionable                                so i don't think i know what strategy                                means anymore nor do i have any clue                                what synergy means                                they've been put in so many places                                people don't really know what they mean                                anymore when you say them                                but the best buzzwords got to be                                fashionable because they they're about                                something that's important                                and that's kind of where the word                                observability has gotten to                                nowadays that's not useful for beginners                                so                                this topic is meant to build up some of                                that knowledge to help you understand                                why exactly this is a buzzword                                and to start applying it the way in ways                                that are actually useful to you                                so first you may be wondering who i am i                                am a senior software engineering manager                                at grafana labs my name is merle krantz                                i've worked for                                                     plus and java programmer as a software                                architect                                all of that time as an individual                                contributor                                i'm also very active at the apache                                software foundation i've made                                contributions to the incubator                                conferences to the community committee                                to                                diversity i'm also very active in around                                financial management of the apache                                soccer foundation and a little open                                source project called apache finrac                                where i contributed to the microservices                                architecture                                i got into software development because                                i think that software can make the world                                a better place                                these are incredibly powerful tools and                                software developers are using them                                to solve or help solve some of the                                hardest the most beautiful                                the most ugly problems that humanity has                                and i went to work for grafana                                because i wanted to enable software                                developers to do this more effectively                                now in today's systems in today's worlds                                there's                                there are a lot of different kinds of                                systems that people put together to try                                to understand                                uh what's going on in their software                                systems                                they look at databases they try to apply                                tribal knowledge people do look at                                prometheus                                they look at logs but when you're                                dealing with a                                problem that just just occurred and that                                needs to be solved quickly this can be                                especially frustrating because it's so                                fragmented this is going to be about                                uh tools that help us to solve this in a                                slightly less fragmented more holistic                                way                                first we actually need to understand                                what are we trying to solve what is                                observability                                we need to get some definitions of some                                of these buzzwords in place                                so monitoring versus observability well                                monitoring is something that people                                do um people go and they examine system                                behavior people go and they look for                                explanations for that system behavior                                they're looking at the system behavior                                because they're responding to an alert                                or they're looking at the system                                behavior because they made a fix and                                they want to make sure it works so                                they're examining                                 the the response of the system now with                                 these new conditions                                 in order to do that people need to be                                 enabled to do that                                 via efficient and relevant data                                 collection                                 they need to be able to store the data                                 in a way that enables fast querying they                                 need alerting                                 and but they need that not within simple                                 systems because                                 i mean monitoring a simple system is                                 simple you don't need a big system for                                 that                                 they need it within complex systems                                 but the work the meaning of some of                                 these words has been diluted over time                                 um there's a fair bit of cargo cultin                                 going on so                                 um the kernel of the idea about                                 observability it's about changing the                                 behavior it's actually changing the                                 companies in which                                 in which these systems are applied                                 monitoring is                                 taken on in some some places it's taken                                 on just the meaning of collecting the                                 data and not using it so you've got like                                 a data lake or full text indexing                                 and these are all cool technologies but                                 what are they for                                 observability should be about enabling                                 humans to understand                                 complex systems it's not just about                                 finding out that something's broken                                 although that's pretty useful too                                 it's about digging in and understanding                                 why it's broken and understanding that                                 as quickly as possible                                 now i mentioned earlier that this isn't                                 particularly useful for simple systems                                 because simple systems                                 can be understood without uh without                                 extra trial allah                                 this is about complex systems and i'm                                 not talking about                                 just any kind of complexity there are                                 kinds of complexity that can be                                 removed or reduced for example fixing a                                 bad design                                 or removing code that you don't need                                 anymore                                 but some some complexity is inherent                                 and you'll hear this a lot when you when                                 you hear teams talking about having                                 moved something from a monolith to                                 microservices and they're like all we                                 did is get different problems                                 um or the same problems but in a                                 different context well that's because                                 the system was complex and moving it                                 from one place to another isn't going to                                 change that                                 that can however make it easier to com                                 compartmentalize the complexity                                 to place boundaries around it so that it                                 can be understood                                 in a smaller context it should be                                 possible to distill                                 certain aspects of a complex system                                 meaningfully                                 in order to be able to observe it and                                 this brings us to the next question is                                 who is observing it well the sres are                                 observing it your site reliability                                 engineers                                 another buzzword right                                 so what uh what is a site reliability                                 reliability engineer well                                 we mentioned earlier that any setter                                 well we didn't but                                 uh this is this is sort of what software                                 is about                                 any set of tasks or any tasks that's                                 repeated often enough                                 is a potential software problem                                 so google does a lot of operations                                 because they do a lot of operations it's                                 a software problem                                 so how do they distill that software                                 problem out well one of the                                 one of the tools they use there and that                                 have spread to the rest of the software                                 world is something called slis slos and                                 soas well what is an sli                                 this sli is a service level indicator                                 and that's a carefully defined                                 quantitative not qualitative                                 measure of some aspect of the level of                                 service                                 that is provided so once you have a                                 measure once you have an indicator                                 then you can also set objectives a                                 target that you want that indicator to                                 reach                                 and once you have a target then you can                                 also start to                                 make agreements externally or internally                                 saying that if we don't achieve this                                 target                                 then we will pay a fine take an action                                 whatever for a lot of organizations the                                 service level objective is as far as you                                 need to go                                 sometimes you need a service level                                 agreement you don't always need a                                 service level agreement                                 in this context sres are trying to                                 align incentives across the organization                                 and they're trying to do this across                                 four services                                 um each of which may have different                                 owners different teams but have                                 contracts that define their interfaces                                 um and they're doing this across                                 organizations that include developers                                 that include                                 operational people that include product                                 managers and each of these people may be                                 focused on different                                 aspects um of the performance of their                                 system                                 so what uh putting out these common                                 indicators does is it helps to align                                 these                                 incentives if you get the right                                 indicators                                 and then once you have an indicator you                                 can get everybody looking                                 kind of through the same window they                                 need a shared view                                 so that they can all be seeing the same                                 thing and reacting to the same                                 information                                 so what actually should they be                                 measuring what actually should you be                                 measuring in your services                                 well you need to be careful to pick                                 something to measure that relates as                                 directly as possible to what your users                                 care about                                 so one good example is latency users                                 care about the speed with which your                                 website responds                                 uh it's also true though that measures                                 affect each other                                 so for example if you improve latency                                 by making your website respond faster                                 you might do that by                                 failing out more quickly if a service                                 doesn't                                 respond so you could actually increase                                 your error rate                                 that might be an acceptable trade-off                                 for you it depends on what your business                                 is                                 so what you need to be doing when you're                                 defining your service level objectives                                 is you need to avoid                                 absolutes so if you were to try to                                 examine for example to set                                 an error rate of zero percent error rate                                 well then you're probably going to end                                 up paying a heavy price in other areas                                 if instead you can can think more                                 carefully about what your error rate is                                 then you can exchange                                 a slight increase in the number of                                 errors for something else that might                                 also be important to you so this is kind                                 of what error budgets or                                 other slos are about is making it so                                 that you can                                 think about all of these pieces together                                 and the way they affect each other                                 and achieve more than one objective uh                                 customers do care about their services                                 being up they don't care about the                                 individual components                                 and they don't necessarily they're not                                 necessarily concerned if they're if                                 there's any                                 once in a week if there's an error                                 so once you have a measure then you also                                 have to ask yourself what to alert on in                                 your services                                 well this one's both complex and simple                                 at the same time the symbol of it is                                 you only alert on things that are                                 impacting your customer service                                 that are either now impacting your                                 customer service or will be very soon                                 don't alert on anything else because                                 you're going to wear people out and                                 people will start ignoring your alerts                                 and here's another aside um what is                                 black box monitoring versus white box                                 monitoring                                 well um rather than escalate one of the                                 elevate one or the other above the other                                 um                                 just consider that both have advantages                                 but we will be focusing more on white                                 box monitoring in this talk                                 the white box monitoring looks more at                                 the parts so it actually looks                                 into a component and                                 captures out metrics or logs black box                                 monitoring                                 looks at it from the outside based on                                 behavior or does it respond                                 now typically some aspects of black box                                 monitoring are covered by white box                                 monitoring if you can get the metrics                                 from a service then it's at least                                 responding to your request for metrics                                 so let's cover briefly what prometheus                                 does in this                                 prometheus was inspired by google's borg                                 mom                                 it's a time series database                                 um that saves basically a time stamp and                                 a float                                         um to a set of labels                                 that allow you to locate it so maybe you                                 have a service and you have a whole                                 bunch of instances of that service you                                 have it in a region                                 so you can query based on those labels                                 now it's very common                                 to do dashboarding of prometheus via                                 grafana                                 prometheus is not for event logging and                                 we'll be covering event logging in just                                 a little bit                                 so what is prometheus saving well                                 prometheus is persisting a time                                 series um that is a set of recorded                                 values that change over time for each of                                 the services or each of the components                                 of the services that                                 that you are observing individual events                                 can be merged into counters                                 within the service or they can be                                 they can be captured or and aggregated                                 um                                 outside of the service in prometheus                                 there's typically                                 uh there's typically the counter the                                 gauge and the histogram are are the ways                                 in which data is                                 typically saved so a counter is                                 something that continually rises                                 um you just add to a counter you can                                 derive rates from counters                                 for example by saying it increased by                                 this much in this amount of time                                 a gauge is something that can change                                 over time um the disadvantage to gauges                                 is you might have a time time that you                                 capture                                 um and there might be an event in                                 between there that you miss so let's say                                 you have a temperature and a data center                                 um and it looks fairly cool but if                                 you're                                 if the rate at which you're capturing it                                 is slow enough there might be a spike in                                 between that you just didn't see                                 nonetheless gauges can cancer important                                 purposes                                 another important case is histogram                                 so maybe you want to see the                                 the data bucketed service latency is a                                 really good example because                                 some of your customers are going to see                                 a very small percentage of your                                 customers are going to see                                 very slow response times and they're                                 going to remember it                                 more than the customers who see your                                 average response time so                                 just because it's a very small                                 percentage of customers does not mean                                 that it's not important                                 and you can visualize all of this using                                 grafana                                 which is fun uh and because                                 the querying via prom prom q a                                 prometheusql is so flexible                                 uh this makes it very that this using                                 this                                 ql within grafana makes it possible to                                 do all kinds of interesting things with                                 your data after it's been captured                                 so what are the main selling points of                                 prometheus well one it's highly dynamic                                 so you have built-in service discovery                                 which means that                                 you can add components into your into                                 your architecture into your landscape                                 without having to manually register them                                 with your prometheus server it                                 automatically gets added via the same                                 service discovery mechanism                                 that you use also for your for for                                 answering customer requests                                 there's no hierarchical model so it's                                 just in-dimensional label set                                 um again i mentioned from ql just a                                 second ago you can use prom ql for                                 processing you can use it for graphing                                 you can use it for                                 learning and you can use it for for                                 exporting so you're using the same query                                 language for                                 for everything um and it's very simple                                 to operate i                                 basically just start it up uh it's also                                 really fast it's a part of the reason                                 it's really fast is because it's a                                 pull-based system                                 um it's not event-based and it's                                 primarily white box monitoring however                                 there is a black box monitoring                                 aspect which is basically if it hits                                 your metrics endpoint requests you know                                 polls                                 uh your your metrics endpoint                                 uh and you don't get a response then                                 that's                                 a simple form of black box monitoring                                 in addition prometheus makes hard api                                 commitments within major versions so it                                 remains uh                                 compatible within major versions                                 so here's some examples some simple                                 simple examples of                                 of the um of the measures that you can                                 capture so                                 you can look for example at http http                                 requests                                 and then you can look at different                                 environments production or test                                 environment you can look at different                                 methods post or get                                 you can look at it by code and then you                                 can see the number                                 of requests within each of these                                 categories                                 so is it scalable well                                 kubernetes is the borg prometheus is                                 basically borgbon                                 within this context                                 and google couldn't have run the borg                                 that is                                 their kubernetes clusters without                                 borgmon kubernetes and prometheus are                                 designed and written with each other in                                 mind                                 uh they absolutely if google can run                                 them at scale then you                                 probably can too                                 one prometheus instance has been seen to                                 have as many as                                     million active time series at once                                 so it can take on a lot of data                                 now prometheus is less optimized for                                 long-term data storage                                 so there are a couple of projects                                 working to sort of pick up the back end                                 of that                                 you can connect prometheus with thanos                                 which is historically used easier to run                                 but slower                                 and it scales storage horizontally                                 cortex which is catching up on                                 how easy it is to run you can scale                                 storage you can scale the adjuster you                                 can scale the query or                                 horizontally as well so that's just                                 metrics but                                 observability typically has three                                 pillars                                 that is metrics logs                                 and traces so let's think about logs                                 let's move on to loki loki is an open                                 source project                                 under the agpl license at grafana labs                                 which follows the same label-based                                 system as prometheus                                 so you can query your logs on                                 any of the same metrics that you're that                                 you're querying them on in prometheus                                 especially if they're if you're putting                                 them into the same system if it comes                                 from the same                                 uh from the same service then it will                                 have the same labels                                 this makes the information                                 cross-referenceable which can be very                                 very useful                                 in the middle of an incident so let's                                 say you see a spike and now you want to                                 look for all of the logs within the time                                 frame around that spike                                 you can do that by using the same query                                 that you used to look at the spike                                 it's also very efficient because it is                                 not creating a full text index                                 it's only indexing on the timestamp and                                 on the label                                 this means that you can work with logs                                 at scale without having a huge cost of a                                 very large index                                 you can turn the logs into metrics too                                 to make it easier to work with them                                 i'll show you an example just a                                 screenshot of an example in a little bit                                 and because you're pulling the data out                                 of the system basically via prom tail                                 it's very simple to set up                                 so this is an example of pulling metrics                                 out of your logs                                 if you look closely at the query you'll                                 see that it's querying for the errors                                 you can actually look at the number of                                 log messages                                 that contain an error over time and then                                 you'll see                                 you'll see a progression you'll see the                                 the tendencies and                                 the changes over time                                 let's take a closer look what i was                                 mentioning before about what a log                                 log entry looks at looks like remember i                                 said you have index data and unindexed                                 data                                 and part of the key part of the trick                                 here is that you're not indexing all of                                 it                                 you're only indexing the time stamp and                                 the specific labels the prometheus file                                 labels                                 you're not indexing the rest of the log                                 line which does not mean you cannot                                 search on the rest of the log line you                                 can                                 uh what that means is in order to scale                                 out search what                                 loki does is first you search on the                                 labels                                 you return those parts of logs and then                                 it just does a full text search                                 massively parallelized across the rest                                 of that                                 so that gets us logs remember i said we                                 have three pillars of observability we                                 have                                 metrics we have logs and we have traces                                 and for traces there's another                                 this is the newest child of grafana labs                                 also an open source project also agpl                                 licensed                                 tempo is uh there for traces so                                 um this includes this is an object store                                 only um it's                                                with uh open telemetry tracing                                 it's not a sampling this is all of your                                 traces that are getting                                 stored however it is exemplar based for                                 those of you who don't know what                                 exemplar means                                 exemplar is basically like if you have a                                 progression of data                                 but you have too much data to save all                                 of it                                 you can save individual points over time                                 and then go to those samples if some if                                 you if                                 your data shows that there's a problem                                 you can pick out one of the examples                                 that was saved from that time so that's                                 what's an exemplar is                                 this is exemplar based but again it's                                 not sampling because                                                    are saved                                 it also because it it's based on the                                 same                                 label set you can move easily from                                 from prometheus to loki to tempo and                                 back again                                 so bringing that together you can move i                                 mentioned it just now you can move from                                 your logs to your faces you can move                                 from your metrics to your traces                                 you can move from your traces to your                                 logs any which way you want to go you                                 can go with this because it all                                 lives sort of within the same query                                 language and                                 because this is all open source you can                                 also run it yourself                                 so i mean i'm out here of course i work                                 for grafana labs i would love if you                                 pay us to run it and we would be happy                                 to run it for you                                 for small installations we'll even run                                 it for you for free                                 for free forever you get a                                        grafana                                 cloud pro trial and then after that you                                 have                                 limitations on the the number of active                                 series but again you can run it for free                                 with us                                 in our cloud um                                 [Music]                                 and if you're uh if you're interested in                                 setting up the stack                                 as i said it's open source if there's                                 something that you want to change you                                 can look at it you can                                 figure out little improvements that you                                 want to make or big improvements                                 is one of the the advantages of open                                 source                                 so with that let me say thank you and                                 are there any questions                                 thanks to the talk i think it's a great                                 uh                                 introduction to all things monitoring                                 i haven't seen any questions                                 i guess if there's not a question i'm                                 curious at grafana labs                                 um do you provide like the                                 solution for all three like metrics                                 logs and pieces or just for metrics uh                                 like traditionally i thought of grafana                                 as grafana labs but i guess i'm learning                                 something                                 as well yes we offer hosted prometheus                                 um we offer a hosted loki and we offer                                 hosted tempo which is traces                                 and of course we have a beautiful ui                                 that we can put on top of all of that so                                 you can access all of that via our ui                                 you got it sounds good all right i guess                                 um                                 maybe oh there's a question that just                                 came in um                                 let me read it out to you                                 um then                                 sam the like the fact that we don't have                                 sampling concerns                                 uh somebody like in terms of cost uh so                                 is there sampling i guess i guess the                                 question comes down to like do you all                                 provide                                 sampling if not like the costs could get                                 expensive                                 it is possible to do sampling but we                                 charge by the series um rather than                                 well i mean there are there are gigabyte                                 limits on some of the services but most                                 of the                                 services we provide by the number of                                 series that you're that you're                                 persisting                                 um so if you're using the free tier                                 you're not going to get charged anyways                                 you don't even have to put in your                                 credit card so you're not going to get                                 accidentally charged like amazon does                                 sometimes                                 um so if you're concerned about that                                 then try it out and see what happens                                 experiment with it uh under the free                                 tier                                 uh i guess the second question coming in                                 is                                 would you recommend this for small                                 setups or                                 is there a minimum size making it                                 worthwhile but even there are some small                                 studies you might even want to do it on                                 i've seen                                 uh some really interesting write-offs                                 where people                                 monitored an aquarium with prometheus                                 now you probably don't need log files                                 for that one you probably don't need                                 traces for that one either                                 but i think prometheus at very least                                 it's                                 it's easy to set up prometheus and it's                                 fun too                                 and grafana also is very easy so just                                 putting that on top of prometheus you                                 can look at the data                                 excuse me uh yeah i mean it's                                 it's not the problem i was talking about                                 in my talk here but                                 uh i certainly i really think that                                 prometheus is easy enough to use that                                 you can even use it for small problems                                 and then i guess there's one more                                 question that just came in                                 it says i'm new to prometheus are there                                 any clients                                 out there that play well with prometheus                                 other than graffana                                 so prometheus does come with a kind of a                                 very simple                                 default web interface um                                 there yeah but i think really griffana                                 is the best                                 thing out there for it up until very                                 recently uh                                 prometheus was actually delivering                                 graffana with their releases                                 um so the prometheus team also uh                                 clearly sees grafana as the best way to                                 examine their data                                 you
YouTube URL: https://www.youtube.com/watch?v=SmX9HWBJL2o


