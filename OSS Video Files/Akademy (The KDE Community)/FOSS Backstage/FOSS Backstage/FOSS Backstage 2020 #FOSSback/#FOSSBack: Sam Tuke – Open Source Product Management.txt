Title: #FOSSBack: Sam Tuke – Open Source Product Management
Publication date: 2020-03-25
Playlist: FOSS Backstage 2020 #FOSSback
Description: 
	Learn more: https://20.foss-backstage.de/session/open-source-product-management

"Open Source takes Product Management to a whole new level -- I had no idea!" said one workshop participant in Poland this Summer. "How on earth do you keep all those stakeholders happy?". He was Senior Product Manager at an $8bn software company.

Uniting design, engineering, and business to produce viable products that customers love is the famously difficult job of Product Managers. Managers of Open Source products however serve not only demanding customers of commercial services, but also a wide range of contributors, packagers, committees, and partners. Our decisions must be fair, transparent, and still ultimately drive revenue. Our Open Source apps are creatively used in scenarios we cannot dream of, yet making usable interfaces requires restricting ourselves to a narrow set of user-stories and personas.

How can Open Source PMs harness wildly diverse userbases, putting their feedback to work improving our software, without diluting product vision and strategy, or losing focus on the bottom line? In this presentation we will explore the unique challenges and opportunities of Open Source Product Management, drawing from the experiences of an Open Source project with 20 years of history.

###

Follow us on Social Media and join the Community!
Twitter: twitter.com/fossbckstg
Reddit: https://www.reddit.com/user/plainschwarz
Slack: https://20.foss-backstage.de/network-and-connect-our-slack-group
LinkedIn: https://www.linkedin.com/groups/8653059/

FOSS Backstage is an event by Plain Schwarz – https://plainschwarz.com
Captions: 
	                              hello maybe we should make a start thank                               you everybody for your attention so who                               wants to make open source software                               better yes yes say yes if we want to                               make open source software better yes we                               want to make it better                               yes yes we do right and that's what                               product management is about that's what                               product management is all about we're                                about managing products better to serve                                users needs better and that's what I'm                                going to be talking to you about now and                                I'd like to ask I've already asked a few                                of you individually but I'd like to ask                                you as a group do we have any                                professional product managers in the                                audience I have a director of product                                here one at the back thank you - don't                                be shy any more anybody who has been a                                product manager of any kind of product                                excellent                                three more so we have five and I know                                that we have some people who are                                completely unfamiliar with product                                management as well in the audience so                                I'm going to try and bridge this chasm                                and introduce you to some principles and                                get on to quite quickly the challenges                                and opportunities that a unique to                                product management in open source so                                first off for some of you I might need                                to justify the need for product                                management before we get into the                                details because we can expect a lot from                                hackers on their own in situations much                                like this they produce wonderful things                                without any managers right great ideas                                products even some one or two billion                                dollar open-source companies have come                                out of hackathons and hacker situations                                much like this without any management at                                all initially so maybe we need to                                justify the need for management before                                we go further first off I would say                                creating value is difficult very                                difficult in fact and that's partly                                because complexity grows and grows as we                                use more libraries and we deploy to more                                systems and we want to deploy more                                quickly and we want to be able to do                                more more reliably and we want to                                automate more complexity increases and                                that helps to have a manager overseeing                                things so that we meet                                expectations and also creating value is                                hard because when you build something it                                doesn't mean people will come like these                                ghost cities in China circa                                          made talk to be occupied by hundreds of                                thousands of people without a market                                because of the financial crash that                                happened before if you build it they                                will not necessarily come and it's                                expensive to build things when people                                don't come and use them and also quite                                disappointing for one's ego and one's                                team and one supporters so it's nice to                                build something that people actually                                want to use and management helps with                                that too but even when you meet people's                                demands and you create value up front                                initially you get it right once you get                                a nice launch and a splash and things                                are going swimmingly well things can                                change quite quickly because people's                                expectations shift depending on what                                other options they have and just because                                your spiderweb was the most attractive                                option for flies to commit suicide                                yesterday doesn't mean that some bastard                                won't invent flypaper tomorrow and                                you'll lose all your users so you need                                to stay focused on what people want in                                order to stay competitive because if you                                don't stay competitive that you're have                                any users additionally assumptions are                                inherent to our thinking as human beings                                and maybe some of you familiar with this                                cartoon it's very difficult to shift our                                perspectives on a habitual basis to                                perceive what others do from the same                                source                                input and actually that is something                                that requires skill and experience both                                training and and experience to avoid                                those assumptions because as many of you                                will know assumptions make an ass out of                                you and me and there's all kinds of                                assumptions built into products I'm                                 currently designing a new product myself                                 right now and the number of assumptions                                 I'm making is quite terrifying so we                                 need a lot of work to avoid these                                 assumptions and having managers who are                                 experienced at teasing out the                                 hypotheses hidden in the software that                                 we're designing and the way that we're                                 deploying and the messaging that we're                                 using that is a really critical skill                                 and it's a skill among many other skills                                 that having a technical background                                 necessarily prepare you for very well                                 many of us in this room I suspect will                                 have spent the bulk of your careers on                                 improving your technical skills becoming                                 technical leaders and in that time that                                 you were spending getting to be a                                 perfectly clean coder and improving your                                 standards and expectations automating                                 everything you may have neglected to be                                 developing some of your other skills                                 like user research or compliance that's                                 super exciting right                                 culture building important in both open                                 source community projects and command                                 company run projects fundraising either                                 from investors or from grants depending                                 on where you're seeking your backing                                 these are things which having a long and                                 successful history as a software                                 engineer it doesn't prepare you for                                 actually and as an engineer these other                                 skills they can feel like a series of                                 traps that you walk into one after                                 another like nobody told me I had to be                                 great Human Resources just in order to                                 keep my voluntary team together                                 well yeah you kind of do right                                 understanding people's needs and                                 predicting them and making sure people                                 feel comfortable and avoiding harassment                                 and all sorts of other issues they don't                                 come necessarily naturally to people                                 who've got technical skills doesn't                                 equal project success finally some of                                 you may be smugly thinking well actually                                 you know Sam I do have all those skills                                 I've learned my lessons I've been doing                                 it all this time and congratulations to                                 you because that's hell of an                                 achievement if that's your situation you                                 still might have trouble convincing                                 others to recognize those skills                                 particularly others who have a lot of                                 money which you might need to either                                 kick off your next project or make it                                 sustainable or buy into it as your first                                 users or customers or back you as a                                 government agency if you want funding                                 support from something like prototype                                 fund or others so having people who have                                 successfully proved they can build                                 products as product managers can be very                                 useful for convincing people with                                 resources to back you even if you know                                 you already have all of those skills                                 inside you if we want to build                                 world-class products which are                                 open-source then there is an argument                                 that we should adopt some methodology                                 from those global companies which are                                 teaching our children and our friends                                 what it means to be a world-class                                 application today and those companies                                 all use product managers I was talking                                 to one of our audience members from                                 elastic and they have lots of product                                 managers many big companies have many                                 many product managers and some of them                                 are rock stars                                 sometimes product managers are called                                 CEO of product sometimes they have an                                 ego to match sometimes they have                                 reputation to match but they have a huge                                 influence over what the product becomes                                 and how well it suits their needs so for                                 all these reasons product management I                                 think is important to open-source before                                 we go any further it's worth converging                                 on a definition of a product let's do                                 this quite quickly a good or a service                                 that most closely meets the requirements                                 of a particular market a particular                                 market and yields enough profit to                                 justify its continued existence I think                                 this is a good definition of a product                                 if we adapt it to a community-based                                 product then we could reword it as a                                 good or service that closely meets the                                 requirements of a particular user group                                 and yields enough resources to justify                                 its continued existence what's important                                 about this is that products are for                                 specific groups of people they're not                                 just for everybody and they need to be                                 sustained one way or another because                                 they consume resources and it's not                                 primarily for you as the person who                                 makes the product we're not just making                                 something for ourselves we're making                                 something for other people and probably                                 an awful lot of people because the                                 nature of software is that it's                                 expensive to make and it scales very                                 well so we want to ideally target a lot                                 of people with something specifically                                 for them and then we have a product but                                 that's product in general what about a                                 product in software more specifically                                 well we can lean on a sage of the past                                 mr. Fred Brooks who wrote an excellent                                 book in                                                          man-month who defined a software product                                 as going through four stages with a                                 three times multiple between transition                                 of each of these stages so often                                 open-source starts out as a program                                 which we have here top left that's                                 something that works for me it works on                                 my laptop you might think of it as being                                 a prototype or a                                 proof of concept for example and many                                 people look at this and they think this                                 is a product this is complete this is                                 ready I'm so happy with this thing it                                 scratches my itch I'm going to launch it                                 to the world but actually they're a                                 factor of                                                               would consider a product which is                                 something which is not only a proof of                                 concept that works on that environment                                 for that person for that person's need                                 but actually has interfaces to other                                 systems is integrated with other                                 necessary systems is tested is                                 generalized so it works in other                                 environments is documented and is                                 maintained because a hidden expectation                                 of just about every user of every piece                                 of software ever is that it will                                 continue to be improved and maintained                                 in future which is something that                                 crowdfunding campaigns often forget when                                 they raise enough money to do one thing                                 and then don't realize they've just                                 raised the expectations of                                               that there's going to be a lifetime of                                 free updates following and all of this                                 makes making a product hard pumped                                 anybody not think making a product is                                 hard good then you'll be interested in                                 why it's especially hard to make                                 open-source products making value is our                                 goal rather than making features and                                 this can be a culture clash when we are                                 looking at open-source communities                                 because when we check on github what the                                 health of our favorite open-source                                 application is we will be looking at                                 when the last release is and maybe we                                 might check the release notes and see                                 how many things were in that and that's                                 all about measuring output rather than                                 measuring outcome and yes it is one way                                 of measuring the health of a project or                                 a product but it's not an indicator that                                 it's going to meet your needs or be                                 delivering value for you or other people                                 so this is one of the first challenges                                 that we have the term value isn't widely                                 used around community-based open-source                                 products they have other terms which are                                 valuable in other ways but I'm going to                                 be talking a lot about value I think                                 this is a very helpful way in to what                                 we're going to be discussing and the                                 ways that product managers typically                                 pursue value with their activities are                                 these user research use a story mapping                                 prototyping of products sprint                                 management or the development cycle                                 management acceptance testing and                                 metrics monitoring and these are all to                                 do with what we call a virtuous feedback                                 loop of interviewing testing reporting                                 back data and improving which we'll come                                 back to in just a few minutes now before                                 I get into more details about the                                 different kinds of open-source product                                 management we need to recognize that                                 different organizations are on a                                 continuum                                 some people may object to me putting                                 Android and docker on the left but                                 everybody in the room is probably on                                 this scale I'd like to ask how many of                                 the projects represented here today are                                 purely company managed where the                                 community has no direct control over                                 releases or priorities show of hands                                 please                                 everybody has community input okay so                                 who's at the other end purely community                                 projects where companies they don't have                                 to worry about there have to worry about                                 commercial entities telling them what to                                 do - only - okay what projects are you                                 guys from and arc very nice patch is a                                 beautiful example of that and so does                                 that mean everybody else is a hybrid or                                 do we have some people not working an                                 open-source sorry okay very good exactly                                 gnomes a beautiful example and depending                                 on where you are on this spectrum                                 different levels of challenge and                                 opportunity arise when it comes to                                 product management because if you're                                 basically operating like a regular                                 company that dumps its source code then                                 you don't really have to worry too much                                 about the stakeholders because you're                                 probably going to be not paying that                                 close attention to what they need if                                 you're on the community end then you                                 work completely differently from that                                 you can't take the traditional                                 autocratic approach and do whatever you                                 you know make decisions that purely                                 serve your commercial ends right so our                                 first challenge in open source when it                                 comes to product management which our                                 proprietary alternatives do not face is                                 that we have more stakeholders right we                                 have a lot more stakeholders off                                 we have the same number of stakeholders                                 as typical proprietary software products                                 but in addition to that we obviously                                 have a community and the kind of                                 representatives that we have in that                                 community very depending on where we are                                 in that spectrum but there's a good                                 chance it will include all these people                                 it may even include governance I know                                 that we have Libre office here today for                                 example they have built in to the legal                                 structure of the organization a                                 membership committee and a technical                                 steering committee and those additional                                 stakeholders which most product managers                                 have never even literally dreamed of                                 right in thinking about having to                                 communicate with and keep onboard a                                 group of other organizations who are                                 third party on a technical steering                                 committee world that's another level                                 that will shock other community other                                 product managers but you might also have                                 a business community around your                                 open-source product to which bring all                                 their own needs and expectations you                                 might have independent service providers                                 people who are building products and                                 companies around the value that you're                                 creating and maybe you care about them                                 and maybe you don't but they have                                 expectations maybe you have downstream                                 integrators who are taking your product                                 and including it in another thing                                 packaging it differently or maybe you                                 have downstream Forks like si P who has                                 internal forks of all kinds of                                 open-source applications including                                 tensorflow                                 and everything that happens upstream                                 effects them and they're likely to tell                                 you about it if you do something which                                 causes them with problems these are                                 stakeholders which basically result in                                 you having fewer decision making options                                 fewer less latitudes you could say to                                 make top-down decisions which of course                                 is a good thing because they're feeding                                 you information at the same time but it                                 makes it a lot more difficult because in                                 addition to all those other skills that                                 product managers are expected to have                                 the emotional intelligence to keep                                 people happy at all these different                                 levels you also have these stakeholders                                 who will put additional pressure on you                                 quite possibly publicly if you make a                                 decision which affects them in a way                                 that you didn't anticipate in addition                                 to the stakeholders we also have                                 transparency we have an a whole nother                                 level of transparency to deal with in                                 open source primarily prioritization is                                 whether it's formal or informal we need                                 to communicate as product managers                                 what use case we're prioritizing what                                 features what timelines and sometimes we                                 need if we're working for a company to                                 prioritize things which are unpopular                                 with the open source community and we                                 might need to justify and explain                                 ourselves in a way that if we were                                 working in a closed source company again                                 we would never have to think about so                                 informal prioritization would be when we                                 just give more thought more time and                                 more energy to pull requests from                                 certain representatives or from in                                 relating to certain functionality                                 whereas formal would be when we're                                 saying for example we're not going to                                 really release Drupal                                              feature set is ready because that's a                                 really important set of features for                                 this release and for the people that                                 we're trying to impress as an                                 organization we have to be transparent                                 about that we also have to be very                                 transparent about Authority and                                 expectations because there is always a                                 thority and there are always                                 expectations when they're not clearly                                 defined they're still there they're just                                 ambiguous and causing more confusion                                 so governance is one great way of                                 clarifying these things in official                                 documents but it's amazing how users                                 expectations can run riot when you don't                                 keep them in check and we need to be                                 explicit to avoid upsetting users with                                 unrealistic expectations or expectations                                 that don't match with with what we have                                 we have multi-dimensional quality so                                 we're not just gauged our success the                                 success of the products we make is not                                 solely based on how efficiently that                                 product solves the problems it's                                 designed to solve but it also                                 incorporates some of these other things                                 we've just mentioned so if we have good                                 governance in an open-source project                                 that's considered by many to be one of                                 the aspects of the quality of the                                 product which again is not something                                 you'd have to think about if you're just                                 producing a proprietary application yeah                                 number of different aspects of quality                                 which others don't have to consider and                                 again we can expect a public debate when                                 we fall short on people's expectations                                 of the quality of the product                                 of course security is imperative for                                 everybody but in open source as many of                                 you will be familiar it produces a                                 particular set of pressures and                                 questions with a new application                                 obviously there's likely to be as many                                 people trying to break the code as use                                 it and we just have less breathing space                                 yes it's a good thing we can't lie it's                                 a good thing that we can't misrepresent                                 the hashing and the algorithms that                                 we're using but at the same time it puts                                 enormous pressure especially on small                                 projects who may not have the resources                                 to respond very quickly it's a unique                                 challenge for us and all these things                                 add up to us needing additional                                 leadership discipline in the management                                 product management field then our                                 counterparts often would in the                                 proprietary side because what we do is                                 being seen what we are the decisions                                 that we're making require us to walk the                                 walk not just talk the talk we don't                                 have coercive Authority or other forms                                 of management authority to lean back on                                 and to rely on we've got a bunch of                                 community members and contributors who                                 can take their effort elsewhere and                                 don't rely on us for their paycheck so                                 we really have to practice what we                                 preach which is a challenge finally we                                 have less data in order to make these                                 product management decisions that we                                 want to earlier we saw the feedback loop                                 here which I've lost but a critical                                 component is data for making the good                                 decisions that we need to as product                                 managers we can't come through this                                 virtuous iterative cycle successfully if                                 we're not measuring the impact of the                                 decisions that we're making and the                                 improvements that we're applying so                                 validated learning becomes more                                 challenging and that's partly because                                 our users have a double standard for                                 open source products versus the                                 proprietary products that they're using                                 when it comes to privacy again of course                                 we should expect privacy and many people                                 like and support open-source products                                 specifically because they have more                                 faith in it because the code is public                                 but that makes measuring the success of                                 what we're doing extremely difficult                                 extremely difficult if you go to any                                 startup conference and listen to a talk                                 about product management they'll be                                 talking about kinds of data data galore                                 or you can get it for free there's free                                 startup plans for all these analytics                                 platforms all these you know conversion                                 automation platforms that we don't have                                 access to and we should not our users                                 expect very different things from us                                 when it comes to the telemetry that we                                 collect and the amount of information                                 that we build up on them the profiles                                 that we have they also don't necessarily                                 expect us to grab them for an interview                                 in a a JIT sea call or whatsapp call to                                 talk about their needs but that's quite                                 normal with product management in the                                 private or complete praia teri sector if                                 we do include measurements then they may                                 be removed if we do include measurements                                 then we may damage our brand and                                 reminded of gitlab a few months ago                                 which slipped a Terms of Service update                                 into our mailboxes for these self hosted                                 users which seemed all very boring until                                 people realize that it meant they were                                 embedding a third-party analytics                                 platform within the self hosted version                                 of gitlab which prompted a crisis                                 backpedaling and a public apology from                                 the CEO and also months of work being                                 reversed and the roadmap for the product                                 being changed these things have                                 consequences we wouldn't think twice if                                 we were a proprietary company about                                 including that because first of all I                                 users may not know and second of all                                 they probably just wouldn't hold us to                                 the same standard all of that means that                                 we have less insight into the user                                 experience of people with our product we                                 don't know what they're enjoying we                                 don't know what they're hating they may                                 give us feedback via github issues but                                 that's different from actually knowing                                 how they use it because what people say                                 and what people do are very different                                 things people don't necessarily have                                 insight into what their pain point is or                                 into why they stopped using a product or                                 what they felt uneasy about or why it                                 wasn't as competitive as another product                                 that kind of information is especially                                 taken from monitoring what people do and                                 seeing what they do in real time and                                 again if we don't have that then we                                 can't make those decisions and that                                 makes it hard for us to identify the                                 value of the products that we're making                                 and if we can't identify the value of                                 the products that we're making                                 like for example using Miele washing                                 machines in rural China to watch                                 potatoes instead of clothes if we can't                                 know what people doing with our products                                 that is different from what we expected                                 then we can't improve the experience                                 further for those users and weak                                 capture the value of those users we                                 can't capture any of the value of that                                 experience which is important for making                                 our product sustainable and resourcing                                 ourselves to be competitive we also have                                 very few open-source tools in this field                                 like a bee testing tools analytics tools                                 telemetry tools that's one of the                                 weakest areas in my experience for open                                 source options versus using proprietary                                 ones that if it's not open source then                                 there's a good chance we won't be able                                 to self host and that means not only                                 would we be using proprietary analytics                                 tools but we'd also be sending our users                                 analytics data to the United States to                                 come back to us which is doubly                                 problematic we also may have culture                                 clash right so many open-source projects                                 are founded by a single charismatic                                 technical leader and technical                                 excellence may be the basis of a product                                 but it is not a recipe for success for                                 long term product development technical                                 leadership can maintain a focus on                                 output again rather than on value and it                                 may mean that we end up with other                                 companies or even potentially community                                 projects which take the code that we're                                 making as an open source community                                 oriented projects and do not have the                                 same restrictions or the same pressures                                 from their community because they don't                                 have one so they take what we make use                                 traditional closed decision-making                                 practices and capture the value that we                                 are not as the open source upstream                                 project which is particularly                                 challenging and it also means that focus                                 and coherence can be very difficult when                                 we have a culture that's focused on                                 releases because we need ultimately a                                 coherent set of features that work                                 together to achieve certain tasks that                                 solve particular user needs and when we                                 have people making suggestions and                                 requests and submitting code and patches                                 from also all over the ecosystem from                                 all sorts of different use cases it                                 makes it difficult to have a product                                 which is unified with an interface which                                 is well tailored to one specific group                                 and one specific set of challenges focus                                 and coherence becomes very difficult                                 when you're trying to meet the needs of                                 everybody because everybody has an                                 opinion as kind of contributing however                                 having gone through all those challenges                                 I can say all of which I've personally                                 felt in different organizations and                                 different kinds of products in the past                                 there are advantages that we need to                                 recognize and take advantage of so first                                 off many open-source projects start out                                 by dogfooding scratching the itch it's                                 the classic right Eric s Raymond etc                                 well if you're scratching your own itch                                 then you are scratching an itch it might                                 not be everybody's itch but at least one                                 itch is being scratched and that's what                                 we often call dog fooding which is when                                 you eat your own dog food at you test                                 your own product and that helps get you                                 off the ground and stay focused on                                 solving at least one problem our large                                 and diverse user base means we get large                                 and diverse input which is the flip side                                 of some of the challenges I was                                 mentioning earlier that means we get                                 reports from outer space effectively                                 running in operating systems and                                 environments and hardware and news cases                                 which we may never have dreamed of all                                 kinds of people seek out open source as                                 their first choice which otherwise you                                 wouldn't necessarily have heard of in                                 different languages and regions and                                 contexts which is wonderful in the past                                 I've had security reports from                                 universities who I had no idea that                                 we're using us they're open-source they                                 come out of the woodwork and it's great                                 we have more eager testers typically                                 people who may produce high-quality                                 reports they're more expert in their                                 field and if we're lucky we get even                                 patches although I wouldn't hold your                                 breath unless the product is aimed at                                 technical users as somebody who's made                                 marketing products in the past that are                                 open source we had very little patches I                                 must say                                 additionally we get a lot of feedback it                                 is self-selected feedback which can be a                                 challenge because it doesn't necessarily                                 represent your user base but it's thick                                 and fast and you can expect it to                                 continue which is great it's cheap to                                 sit there and wait for people to test                                 your product and use it and tell you how                                 it went rather than having to go out or                                 pay for research we can't avoid having                                 cutting-edge ideas because we have very                                 technical community of open-source                                 developers typically and like it or not                                 they will pull you into the                                              and make suggestions about how to                                 release it better and manage it better                                 and automate things better which is                                 wonderful                                 we also are forced into best practice we                                 have fear chefs working in a glass                                 kitchen and that's how it feels right if                                 our product management if our                                 prioritization if our decision-making if                                 our governance is all in a public sphere                                 then we have no choice but to basically                                 be at the cutting edge because otherwise                                 people will point out that we're not if                                 we don't take into account ethics in the                                 our licensing and workplace practices                                 people will see it more clearly because                                 people tend to be more vocal around our                                 projects we may even get very governance                                 if we are lucky and we put effort into                                 it but we can certainly expect to be                                 held to a very high standard when it                                 comes to data management and privacy and                                 that's great we held to a high standard                                 it makes us better as individual product                                 managers and it makes our products                                 better yeah                                 folk ability yeah that's just when I put                                 in so one of the upsides is if you don't                                 like how your senior management is                                 treating you then theoretically you can                                 take the source code and run it in a                                 different direction                                 coughing x-square cough so when we look                                 back at the typical activities of what                                 product managers are typically doing in                                 any kind of organization these aspects                                 of user research prototyping etc then we                                 do have open source tools to help us                                 with this and some of them are pretty                                 good so for the user research side I've                                 used OBS studio for doing recorded                                 interviews you can also use multiple                                 cameras there it's very nice see what                                 the users doing with your product I know                                 that we have usability experts in the                                 room who've used similar approaches with                                 improving Thunderbird usability and                                 others PHP list is nice for sending out                                 a lot of emails with invitations to give                                 feedback and surveys for example                                 customized to different languages etc                                 for user story mapping I got a recommend                                 post-its technically I don't know it may                                 be debatable if it's open-source but                                 paper is actually better for some things                                 but we also have a nice app called twine                                 eree there's a bunch of other apps here                                 I'm not sure how familiar you are with                                 them I draw attention to prototyping                                 yeah thanks to Elio for reminding me                                 about UX box yesterday yeah their work                                 in progress UX box in akhira but there's                                 some bright stars on the horizon these                                 are both recent applications very modern                                 and meeting needs I'd also recommend                                 presentator if any of you have used                                 envision it's quite similar in the                                 functionality that I need from it very                                 nice very modern                                 looks pretty nobody will know the                                 difference at least other people I've                                 worked with                                 and yeah a bunch of other apps we tend                                 to use matome a-- for our metrics                                 monitoring it's open source it's got a                                 lot of fine-grained control over privacy                                 which is super helpful                                 they've got proprietary plugins which                                 are good for a be testing and monitoring                                 specific aspects of the user behavior                                 and interaction if your product is                                 web-based if your product is app based                                 then there's a nice open source                                 competitor Touma tomo called countly                                 which you can deploy as your own server                                 they've got venture capital it's a                                 pretty professional product it's yup                                 fully open source and geared entirely to                                 metrics on on the app front also iOS                                 wasabi is pretty nice for a/b testing                                 but it's not so well maintained these                                 days it's heavy it comes from a big                                 American tax firm which I wanted to AP                                 test their features but unfortunately                                 aside from wasabi I don't know of any                                 good a be testing solution that is                                 similarly API driven and sprint                                 management maybe you're familiar with                                 these open project is my favorites got                                 burned down chance Kanban and a bunch of                                 other things for the backlog grooming                                 ultimately we want to make better                                 products with open source software we                                 want to fulfill our user needs better as                                 you all cheered at the beginning we're                                 united in that goal product management                                 is a critical component to making those                                 open source products better to making us                                 competitive to understanding our user                                 needs and to delivering the value that                                 we need in order to get millions and                                 billions of open source users for the                                 products that we make rather than                                 hundreds or thousands and finally I                                 would leave you with this to make out                                 comes in four outcomes rather than                                 making releases remember that it might                                 not be popular amongst your engineers                                 but it's something that's critical to                                 always keep in mind value over output                                 and that's it for me thank you for your                                 attention                                 [Applause]                                 anyone in a scrum framework would you                                 say that you want besides the PIO that                                 should always also be a product manager                                 or is it the same what do you think                                 about these two roads and in a scrum                                 environment I don't think there's any                                 universal rule for that like the                                 cultures varied from organization to                                 organization it depends on the skills                                 you've got and the origin of the team                                 but they can certainly work very well                                 together complementarity in my                                 experience I've had both a manager and a                                 product owner in the same team in the                                 past but obviously defining roles is                                 important and areas of authority I                                 actually worked side-by-side as                                 basically me as a product owner and                                 somebody else as a product owner                                 simultaneously in a previous                                 organization that worked pretty well for                                 a while I like that it's not something                                 people advocate also my scrum certified                                 trainer said that was a bad idea but for                                 me it's it was it was okay so yeah I                                 mean also an open source obviously                                 community management is very close to                                 what we've been talking about because                                 those stakeholders need to be involved                                 and managing their feedback is important                                 and difficult as I also heard earlier                                 from the audience so in sales agility                                 for example a company which makes sweet                                 CRM the community manager and the                                 product manager are the same which seems                                 like a huge amount of responsibility for                                 one person to me but also I think it                                 also makes some sense so it depends on                                 your strengths too I think is individual                                 and what what you like is it the                                 inherent role of the product manager to                                 impose some some pain to the actual tech                                 leads or the the the tech developer                                 crowd                                 - Wow steer in the right direction that                                 well as you said create value or is                                 there also painless way possible are                                 thinkable that's a great question                                 steering doesn't need to be painful if                                 you're really good but yeah there's a                                 conflict of interest and that's good and                                 that's inherent and I think that's                                 necessary as well because you expect as                                 a as a product manager you expect                                 certain things of your technical team                                 and they expect certain things of you                                 yeah with the the diagram I had earlier                                 with the intersection of traditional                                 roles I skip past it but it relates to                                 this quite directly so we can look at                                 the business role like so these are                                 different skills or backgrounds you                                 would you know typically recruit a                                 product manager from the business side                                 is like understanding the needs of the                                 user understanding you know what the                                 market once the tech is about the                                 constraints of what's possible what's                                 achievable and the UX would be how you                                 can package that up in a way that those                                 two things match so the constraints                                 necessarily conflict with what the                                 demand is I would say and so does UX but                                 that doesn't need mean that you you need                                 to be creating pain but it's also not a                                 bad thing if you do I would say they're                                 not two contradictory anyone anyone else                                 [Music]                                 thanks for the talk I'm not sure that                                 that's a good question but I was                                 wondering in in like the really open in                                 the the open source projects with her                                 which have open governance like patchy                                 projects norm or what you mentioned                                 there like how I have you have you                                 worked in such environments and how                                 would you position yourself as a product                                 manager there because obviously there                                 because of the open government small you                                 can just enforce your product manager                                 rule there so the question is how do you                                 how do you communicate to the project                                 that you should be a product manager how                                 do you grieve other product managers in                                 the project and yeah how do you convince                                 the community of your position there I                                 guess a great question and I think                                 there's probably people better qualified                                 to answer than me do we have somebody                                 from the Apache foundation or an Apache                                 project yeah can you please so I think                                 in in some ways there will be companies                                 behind successful Apache projects and                                 not just one you do get some very small                                 ones that are a group of people really                                 keen but often there'll be a bunch of                                 companies and they'll have direction and                                 then as a community the community kind                                 of waves up that and says I'll company a                                 is really keen on that feature no one                                 else is we're gonna let them get go                                 ahead with it but it's not going to slow                                 anything down we're not already can help                                 that one over there's three companies                                 involved we all think that's really keen                                 we've got led a good feedback let's come                                 together and then let them drive that a                                 bit and so you might say all next                                 release manager old Company B is really                                 keen their product owner is being really                                 helpful and they've been good we're kind                                 of going to make them the release                                 manager and let them define done for                                 this release and if they're great them                                 will recommend again and if they're                                 terrible then we might take it off them                                 or we might just let them do it once but                                 as a community you kind of come together                                 and say between all of us what do we                                 mostly want and who's actually gonna                                 step up and do the work that's key you                                 can you can write roadmaps till the cows                                 come home but if no one's actually going                                 to code against them then                                 it's it's a bit pointless so it's it's a                                 little bit hurting a little bit people                                 stepping up a little bit people being                                 permitted to step up but it also doesn't                                 happen as quick as a product manager you                                 can say by the end of the next scrum                                 even if you have to work late we're                                 going to get this feature out with an                                 open source community you'd be like                                 probably by the end of the next quarter                                 as long as no one has too many good                                 Network shows we might get this feature                                 out but you can't just like deep                                 prioritize fixing that critical security                                 bug that no one else knows about yet for                                 a cycle right things like that but then                                 if you're building your business on top                                 of it you might say you know what that                                 release isn't out yet but that feature                                 set is fine so we're gonna take that                                 branch and bake that into our commercial                                 products but that's you as a company                                 saying that's done for us not you as a                                 community which takes longer Thanks and                                 do we have somebody else from the                                 doctoral foundation I'm a member that                                 would like to speak to this talk about                                 foundation people okay well I won't                                 answer on their behalf yeah it was feel                                 bad when I make microphone people um so                                 I get quite a lot of well a reasonable                                 amount of PM's asking me after talking                                 about open source design asking about                                 where they can go to contribute product                                 management in an open source way so                                 where is that and I honestly I'm not                                 quite sure where best to direct them                                  there's a few projects around but do you                                  know where best to direct so you're                                  asking people who have product                                  management experience how they could                                  contribute yeah that's a brilliant                                  question                                  no I don't because it's not something                                  you can swoop in on and do without                                  really understanding the roots and the                                  culture in a project I think but I'm                                  sure if we think harder we can come up                                  with a good answer to that so let's talk                                  Thanks                                  [Music]                                  you
YouTube URL: https://www.youtube.com/watch?v=r_FYXvQxEvA


