Title: Akmal Chaudhri: Apache Ignite Service Grid: Backbone of Your Microservices-based Solution
Publication date: 2018-12-05
Playlist: Apache EU Roadshow 2018
Description: 
	Whether it is a Microservices-based solution that is used under high load and processes rapidly growing volumes of data, or an application that does not use Microservices, both usually face the same issues:Data are still stored in disk-backed databases that can no longer keep pace with the growing volumes of data that have to be stored and processed in parallel. As a result, conventional databases are becoming a performance bottleneck affecting the overall solution or application. In the past, a solution's high-availability guarantee was a nice-to-have feature. Today, high-availability of an application has become a de-facto requirement.
Captions: 
	                              all right guys thank you so as I said                               earlier I was in an earlier session not                               many people turned up thank you to the                               three guys if I had some prizes to get                               out I think you'd all get one it's kind                               of tough as I know you know when you're                               on the last day of a conference and it's                               the afternoon and the World Cup is on                               and you it's probably more important                                things that you have to do than                                attending conferences so all right so I                                think this session is not going to last                                the full time                                this gentleman Chris Koster was supposed                                to do this unfortunately he couldn't                                because of business commitments as you                                can see he's a lot more handsome than I                                am and much more smartly dressed and                                he's the director for solutions                                architecture at grid game in amia so he                                could have actually brought a lot to                                this presentation because he works with                                clients and customers exactly on the                                kind of problems that they deal with                                but sadly you've got me so hopefully                                I'll do a reasonable job and all right                                so just a couple of quick slides about                                me and my background and then we'll dive                                straight into the micro services okay so                                that's me Ahmed Chaudhry and so in terms                                of my background is if anyone attended                                the earlier session I think a couple of                                you guys might have done so you know old                                guy gray hair white hair                                no we're basically done lots of things                                in my IT career started life as a                                developer working for Reuters in London                                real-time systems relational databases I                                was an academic about other things that                                I worked on big data space two bullet                                points there that I would draw attention                                to the very first company I worked for                                Reuters so very interesting so they                                worked you know a lot of real-time                                applications and my first eight months                                there were the worst eight months of my                                life because they got me working on                                these horrible old systems using pdp-                                  you know                                                             and all sorts of you know archaic                                technology                                and I and I thought as a fresh graduate                                I'm gonna work with the latest and                                greatest technology and I'm gonna be                                working with the fabulous new skills                                that I require and then after eight                                months I realized why they made me work                                on these old systems because they have                                business value that's the key thing you                                know these systems still have to be                                maintained someone has to love them                                someone has to look after them                                someone has to enhance them and I think                                this is often forgotten in life and then                                one of the things of course that we can                                do today is that where it's not possible                                to we are key tech systems because it's                                too expensive perhaps the use of things                                like services micro services is a way to                                address some of the challenges of the                                modern world in terms of resources and                                you know it's money people time it may                                simply not be available the other                                company I would just draw your attention                                to is I work for Informix as well so I                                was very privileged because that                                informants I worked for Mike                                Stonebreaker                                so if you know anything about databases                                mike is the guy who helped developed                                ingress Postgres these days you know                                it's psy.d be Volk DB Thema very                                prolific academic as well based at MIT                                these days so he publishes a lot press                                you know all these prestigious                                conferences sigmod vldb                                I Triple E data engineering and so it's                                very interesting experience there as                                well because again you you get to see                                that the world is kind of moved on                                whereas historically especially in                                research in relational systems we used                                to talk about monolithic database                                systems you know one size fits all so                                whether you use Oracle or db                                           or something you know it's gonna address                                a wide range of problems and typically                                that's true in many cases but today if                                you look at how the database technology                                 is kind of evolving and emerging so                                 there is this case even with the                                 research that mike has done for example                                 where you've got systems like Vertica                                 for example designs for you know slicing                                 and dicing vertically being able to look                                 at data in a different way or you've got                                 men                                 we based systems such as volt DB's and                                 there's another one of this projects                                 very much the case that you you do away                                 with a lot of the baggage that comes                                 with relational systems you developing                                 for in-memory                                 different problem different technologies                                 so I mean that's the nature of things so                                 lots of experience and variety of                                 technologies some publications as well                                 and I when I started out a good gain                                 about a little bit over a year ago                                 my boss who is Dennis Magda Dennis is                                 the PMC for Apache ignite that's the                                 technology we're going to talk about                                 today he asked me to write some articles                                 because I knew nothing about in-memory                                 data grids I didn't know I never heard                                 of Apache ignite and so I took the                                 opportunity really to start writing                                 things over time and just share what I                                 learned with others initially many of                                 those articles are very basic they just                                 covered the different sort of components                                 of ignite subsequently they've become a                                 bit more technical especially this year                                 as well also we're talking about things                                 like failover in recovery transactions                                 more recently genetic algorithms machine                                 learning this kind of thing so have a                                 look at that in you don't own time if                                 you if you would like to do so okay                                 so let's switch to this presentation ok                                 so there we go so ignite ok so i'll                                 cover a little bit about what it does                                 and my apologies to those of you who've                                 already heard this message and we'll                                 talk a little bit white since you know                                 backbone of your micro services based                                 solution so ignite has a services grid                                 what's something that is had for some                                 time and the thinking is that it can                                 form the foundation of micro services if                                 that is something you want to do and                                 we'll look at some of its capabilities                                 and some of its features and again there                                 is a demo towards the end just to show                                 you what you can achieve with this and                                 so in terms of agenda then so cover a                                 little bit on the service grid and then                                 we'll look at the principle components                                 of ignite so there are things like data                                 nodes                                 nodes what's the inter communication                                 between them you can interface using a                                 variety of api's from external                                 applications okay who may know nothing                                 about the implementation I mean this is                                 typically what you want to do with                                 services okay you hide the                                 implementation you expose some                                 interfaces and then applications can                                 talk to those services and persistence                                 might be important as well so this is                                 something that they added to ignite last                                 year so it's got its native persistence                                 capability it can also read and write                                 from external third-party systems                                 whether it's a relational database or it                                 could be an O sequel database or                                 something else okay so have a look at                                 the service grid in just a moment just a                                 high-level overview just to give you                                 some kind of perspective on what ignite                                 is so started life as this memory                                 centric storage okay so go back in time                                                                                                    company was founded so they are one of                                 the sponsors today and they developed an                                 in-memory data grid and there are other                                 products out there some some of them                                 commercial some of them open-source so                                 you might be familiar with things like                                 Oracle coherence for example or hazel                                 cast these are commercial offerings and                                 over time especially this last year or                                 so they've added more features and                                 capabilities so it's not just a caching                                 platform originally it was designed to                                 address two main problems one was scale                                 and the second was performance so these                                 can be achieved by really adding                                 additional resources to your cluster                                 adding more nodes you get more                                 processing power the ability to store                                 more care you know data in the cache and                                 so originally for third party                                 persistence okay so ignite can work with                                 third party database systems as I said                                 relational very well if it's a                                 transactional system we'll cover that in                                 just a moment as well but equally HDFS                                 no sequel can be used on the landing                                 page at the Apache Software Foundation                                 which is                                 ignite Apache org in the top right hand                                 corner there is a link which says                                 screencasts ok so if you drill down and                                 at the bottom of the page you will find                                 three videos which essentially show you                                 how ignite can interface with a                                 relational system in the demo they use                                 my sequel but basically what it shows is                                 the series of simple steps that you can                                 do to create a project and then what                                 ignite can do then is once you've put in                                 your credentials and the IP address and                                 the port number where the relational                                 server is running it will connect to                                 that and it will manage that for you so                                 the consistency of the tables that                                 you've asked ignite to manage for you in                                 the in the database system and as well                                 as the cache that it has they will                                 remain consistent so changes in one are                                 reflected to the other and vice versa so                                 this is very useful feature so sometimes                                 in business as I said you know it's not                                 possible to get rid of existing                                 technology you've invested too much time                                 money there is business value there so                                 the thinking is that in this case it                                 makes sense to keep what you have but                                 perhaps enhance it somehow to be able to                                 address new types of problems or maybe                                 there are some queries that are not                                 performing well for which cluster                                 computing could be a good solution so                                 last year they added this native                                 persistence capability so now ignite can                                 behave like a distributed database                                 system it can save state it can save the                                 data it can be your system of record if                                 you want it to be and on top of that                                 then you've got a number of different                                 interfaces so SQL is one of them so                                 there is always been some level of SQL                                 support in ignite but LA last year                                 particularly the effort was to try to                                 add sequel                                                            there and so that can work on cache ok                                 you can run sequel queries on the cache                                 and you can run it across the native                                 persistence as well key value interface                                 a yes question                                 understand that there can be many                                 parallel ard p.m. masses yes hands so if                                 I update data these nodes have to                                 synchronize yes so they will yes so                                 typically the way that so if I if I can                                 repeat the question so the gentleman is                                 asking saying that you know we do have                                 parallel database systems around today                                 there are other products that can do                                 this in this case the issue then becomes                                 in the distributed environment you know                                 about updating data you want to ensure                                 that you get a consistent view of what                                 you're storing within the the large sort                                 of cluster space if you like and so we'd                                 ignite and I think this is fairly true                                 of most distributed systems that each                                 node manages a part of the overall data                                 Ignite knows what part that particular                                 node is able to store because being a                                 key value store we just apply a hash                                 algorithm to the key and there is an                                 address space that's available based on                                 all the nodes that are part of the                                 cluster and therefore it knows straight                                 away which node will store this                                 particular part of the data and                                 typically then in early in the                                 distributed environment we don't just                                 keep a one copy because if we lose the                                 part of the cluster that data disappears                                 it's no longer available to us to query                                 so normally it's it's fairly typical to                                 have at least one backup copy sometimes                                 you have additional backup copies                                 distributed across your cluster so in                                 the event that one node or two nodes or                                 more godown backup copies can be used in                                 order to perform sort of queries and                                 that's fairly typical Oracle have of                                 course parallel database system you know                                 there are other manufacturers out there                                 that have sort of a lot of expertise in                                 this area and if you look at the way                                 they do things is well is very similar                                 in terms of allowing you to keep                                 replicas backups across the the cluster                                 in the event that some part of your                                 system goes down which if you're using a                                 very large cluster is fairly typical I                                 understand if you look at Google for                                 example                                 and you know they use a lot of commodity                                 hardware typically some percentage I                                 don't know what it is five percent                                 perhaps it may be a little bit too high                                 of those machines go down periodically                                 okay they lose a part of their system                                 but because they've got enough                                 replicated data we don't notice it we                                 never see that problem because there is                                 some inherent copying of data around the                                 cluster in theory you could copy all of                                 the data from every no to every other                                 node if you want that's overkill and                                 that's gonna involve a lot of network                                 traffic as well so normally I think you                                 don't do that if it's small amounts of                                 data that might work but for mission                                 critical systems I think typically at                                 least one backup of the data possibly                                 another one depending on how important                                 the data are to you that would be fairly                                 normal I hope in a roundabout way that's                                 kind of answered your question sorry for                                 the long winded answer there okay great                                 ok transactions so ignite and doesn't do                                 just caching it does transactions as                                 well and these are both acid                                 transactions ok locking and lock free                                 optimistic transactions and so these can                                 be important because it will ensure that                                 the system moves from one consistent                                 state to another consistent state                                 alright so and just to give you and                                 again my apologies to those of you who                                 heard this story before but earlier this                                 year you know I'm a great fan of MOOCs                                 I like these massive open online courses                                 EDX Coursera and others and I happen to                                 be on the website of one of these                                 vendors and I decided there's a                                 particular course I'd like to pay money                                 for that because I want to get the                                 certificate so I fill in the details                                 put my credit card details in you know                                 hit the pay button and it comes back and                                 says there is an error and I didn't                                 think anything of it I thought okay                                 there's an error no problem you know my                                 card hasn't been charged some time later                                 I look on my bank statement and I                                 noticed that the bank has charged me so                                 that has appeared on my bank statement I                                 go to the vendor the merchant and tell                                 them and they say we haven't received                                 the money all right so where's the money                                 you know who's got it                                 it's my problem now to sort this out the                                 merchant hasn't received the money the                                 bank has charged me this situation                                 should not occur it's inconsistent right                                 so either the transaction should have                                 completed correctly                                 I should have been charged the amount of                                 money and I should you know it should                                 appear on the merchants website that yes                                 I've paid for this course or it should                                 not you know there's no sort of middle                                 situation so there is a poorly designed                                 system so ignite can with its acid                                 capability it can prevent this kind of                                 scenario because the system will always                                 move from one consistent state to                                 another okay so these transactions first                                 a wide if necessary but obviously you                                 know you need to think about how this is                                 going to impact performance if you're                                 going to be accessing lots of data                                 updating lots of data all of this could                                 tie down resources other things so                                 compute grid leave that aside from                                 services okay which is what we're going                                 to talk about it can do streaming as                                 well okay so it doesn't do streaming per                                 se it's not a streaming engine but it                                 can integrate with streaming                                 technologies such as spark streaming for                                 example or flink or you know even                                 technology such as Kafka for example if                                 you're working with those type of                                 products there are connectors and                                 adapters for these technologies so it                                 can take data in act as a sink for these                                 sources then you can process the data                                 locally and ignite and they've added a                                 machine-learning grid as well so it does                                 linear regression clustering k-means all                                 of these types of capabilities and of                                 course lots of vertical examples so if                                 you have time I would encourage you you                                 know have a look on the apache website                                 so specifically then for micro services                                 then we believe that ignite service grid                                 which is actually been around for a                                 little while can actually form a good                                 foundation and there's a couple of                                 different capabilities that it has and                                 we'll go over and discuss these in a bit                                 more detail so we could have for example                                 a cluster wide service maybe we're                                 generating some kind of counter and we                                 only need one instance of that we don't                                 need multiple counters being created we                                 need to                                 go to a single source that gives us a                                 new counter or perhaps some kind of ID                                 generator perhaps for particular                                 customers or products or something like                                 that which have to be unique and                                 therefore there's an example of a                                 singleton where we will create a single                                 service faster wired and it may be                                 running just on one node but we have the                                 flexibility to define that service in                                 such a way that in the event that say                                 the cluster the node where that service                                 is running goes down ignite will launch                                 that service on another node okay we can                                 configure it to do that another example                                 is where we might have a note singleton                                 so perhaps we have a service one service                                 that runs on each node in our cluster                                 that might be possible as well I can't                                 think of a good scenario where that                                 would apply but certainly that's                                 possible okay so we can do that so node                                 singleton now because it's cluster                                 computing ignite can do all of the                                 things such as low balancing fault                                 tolerance okay so it can ensure that                                 resources are being utilized to the best                                 based upon what is currently available                                 if parts of your cluster go down again                                 it will take care of the load balancing                                 for you and give you the ability to                                 continue working and as you're adding                                 new nodes as well again that will come                                 into play in terms of load balancing and                                 fault tolerance okay so inevitably in                                 distributed systems it's it's often the                                 case that you know resources go down for                                 some reason maybe it's a hardware                                 problem                                 perhaps it's latency perhaps it's just                                 communication you know the networks is                                 down but the machine might still be                                 working but we can't communicate with it                                 so there's a whole range of issues that                                 we have to deal with because building                                 distributed systems is hard I mean                                 that's why you know it's taken us a long                                 time to get where we are today but a lot                                 of these cluster computing concepts such                                 as two-phase commit and other things                                 that have been around for some time we                                 can utilize these to help us ensure that                                 we get some level of consistency in                                 terms of deployment then of these                                 services then how can we achieve this                                 well we have this capability this node                                 filter so we can specify                                 exactly what sort of service node we                                 have where that service is running and                                 there is some configuration options that                                 I will show you very shortly where we                                 can do this we can also define some                                 interfaces okay so if for example we are                                 using ignite to run some services but we                                 have external applications that want to                                 connect there are some well defined                                 interfaces that we can use okay so they                                 will know exactly what operations they                                 can run excuse me                                 and then sticky versus non sticky so                                 sticky is we're saying okay this service                                 is going to run on this node exactly and                                 then non sticky just leave it up to                                 ignite to decide where it's going to                                 deploy that service okay that gives us                                 much more sort of flexibility so that                                 that's really the issue there there's a                                 whole range of other capabilities as                                 well which we're gonna cover in the                                 subsequent slides as well so the main                                 thing is that as I don't know if some of                                 you are able to attend the last speakers                                 presentation it is a very good                                 discussion of services and micro                                 services in particular and some of the                                 sort of demands that you have in terms                                 of performance and you know what is a                                 micro service you know how large is it                                 for example you know how do we define it                                 it's not very clear so here we believe                                 that regardless of what it is you are                                 trying to define in terms of micro                                 services you know sort of small units of                                 work that you can call and we can chain                                 these together using ignite service grid                                 could be a good solution may not work in                                 all cases okay that's the nature of                                 technology but certainly it's worth                                 having a look at and that's the goal to                                 inform you and to give you a choice and                                 to help you decide if it's suitable for                                 your for your needs okay other things                                 then so common pitfalls then of course                                 we need to think about lifecycle                                 management you know how long are these                                 services going to run do we want                                 services to be running continuously and                                 all the time or can we specify some time                                 of lifetime for them to say okay run for                                 this amount of time and then you stop                                 you know and no we know no longer                                 required                                 and of course come in terms of                                 communication well if you're going to                                 run these on ignite then of course                                 ignite can manage that layer for you                                 fault tolerance load balancing again the                                 same principles apply regardless of                                 whether we're storing data we're running                                 services we need those same capabilities                                 that ignite needs to make perhaps fire                                 up some additional resources maybe if a                                 service has gone down somewhere ignite                                 needs to be aware of that it will try                                 and launch that service again for you in                                 another part of the cluster and then of                                 course scale part of the reason that you                                 probably want to use cluster computing                                 is really give you some degree of                                 scalability the ability to store more                                 data be able to process it in parallel                                 and give you sort of better performance                                 as well okay so data layer computational                                 layer so one of the nice things about                                 ignite is that this kind of basic                                 compute grid as its as its called when                                 you know it's one of the core components                                 and one of the most mature components of                                 the technology it offers this kind of                                 fork/join so if you're familiar with how                                 Java works or MapReduce it's the same                                 sort of approach that basically as work                                 comes in it looks to see what resources                                 are available it divides that sends them                                 to the appropriate nodes they each do a                                 part of the work send it back it's                                 combined sent back to the client okay so                                 here is a kind of rough sort of                                 architectural diagram rather simplistic                                 but let's look at the components for                                 this so we may have at the top there                                 external applications that use micro                                 services okay and then within the                                 cluster itself we've got two types of                                 nodes okay we've got data nodes or                                 server nodes as they're called okay they                                 just store data okay and that data could                                 be replicated so we may have a copy of                                 the data on here                                 it may be replicated on another node as                                 well and then those nodes contain other                                 parts of the data so the overall data                                 that we have stored in our cluster is                                 divided up it's spread across the                                 cluster and if we've decided we want to                                 keep backup copies then again that can                                 be done for us so                                 the event for example that we lose a                                 part of our cluster let's say this note                                 goes down because the data are                                 replicated elsewhere as well we can                                 still do work okay all of the data is                                 still available to us the other type of                                 note that we can run is called a service                                 node and here you can see a number of                                 these MMS micro services that could be                                 running okay so we have MS one ms                                   running on this service node and miss                                 one possibly running on that one and                                 then the last one ms                                                 doesn't mean that we've got multiple                                 instances of these services running it                                 just means that that node is a potential                                 somewhere we could run a service for                                 example if we define a cluster singleton                                 let's say MS                                                          only one copy of it may run across our                                 entire cluster we may run it on this                                 first node but if we look here we can                                 see that MS                                                           second node that means that in the event                                 that this goes down that node can take                                 over okay we have the ability to                                 configure Ignite in such a way to say ok                                 here are sort of if you like additional                                 nodes that you can use for running this                                 particular service in the event that say                                 where you're currently running it goes                                 down again the demo will show you how we                                 can do this ok other things right so                                 persistence now I talked about third                                 party persistence so relational                                 databases could be used but here we can                                 see some examples of no sequel databases                                 or we could use HDFS if you want its own                                 native persistence that's possible as                                 well ok so in the event that that data                                 needs to survive much longer beyond the                                 lifetime of the process that created it                                 we've got a range of options - to work                                 with ok so let's quickly look at the                                 Ignite nodes ok so data nodes ok                                 also known as server nodes access                                 containers for data and computations                                 generally started as standalone                                 processes and there is a in the demo                                 i'll show you how to do this so                                 basically it's a node that you start up                                 it stores that some portion of the data                                 the overall data than your cluster and                                 it can do some compute tasks as well                                 okay you can run some computer ops                                 client nodes are what we connect to the                                 server nodes they request some tasks                                 some work to be done by the cluster and                                 these are totally separate ok so this                                 gives us a way to be able to run jobs on                                 our cluster and of course in the micro                                 services environment as we saw in the                                 previous diagram these could be                                 applications that have absolutely no                                 knowledge of ignite don't know anything                                 about the cluster computing but they                                 have access to a well-defined interface                                 that we've got they can request their                                 services send them to this interface get                                 back results and they don't care where                                 those services are running that's ok I                                 mean that's perfectly possible and a                                 good way to do it actually all right                                 other things from here so public and                                 private clouds so ignite will run pretty                                 much in where it's a Java based system                                 but it also has interfaces for C++ net                                 these are high level languages that are                                 really well supported as well other                                 languages if you're working with them                                 then it's JDBC ODBC support generally                                 and there is this thin protocol which is                                 being used to develop interfaces for                                 additional languages ok so so here we go                                 service seven note stores data run                                 squeeze and computations we mentioned                                 that already plain distributed storage                                 one of the other nice features about                                 ignite is that typically when we say you                                 know in a testing environment where we                                 want to be able to test code test                                 services there is a great feature it's                                 called peer cross loading which is very                                 useful because what it does is that the                                 developer can modify the code change it                                 you can push the code out to the servers                                 you do not need to restart the cluster                                 the cluster becomes aware of the code                                 changes and can apply that code directly                                 and immediately so when you're testing                                 services you're testing your code for                                 example this is again very helpful to                                 you because if you've got a particularly                                 large test cluster than bringing this                                 down and start                                 get up again can take a little bit of                                 time and if you're doing that frequently                                 a lot of your time is simply spent                                 shutting the cluster down bringing it                                 back up again use this with care you                                 know with great power comes great                                 responsibility so as you can see you                                 know peer class loading is great in a                                 live environment probably you don't want                                 to be pushing code changes out very                                 frequently okay yeah it's a simple                                 common-sense thing we are human we make                                 errors                                 you know how code can do terrible things                                 sometimes so in a live environment we                                 you know we might write code that does a                                 certain function that we missed you know                                 didn't test it properly or something we                                 forgot to do our data may be affected                                 cluster wise it's very risky things as                                 powerful but use with care okay so again                                 something that's very useful but be                                 careful how you use it                                 okay so quickly then so code definition                                 so basically a lot of the                                 characteristics and the what we want to                                 specify is the behavior of a node we can                                 do so through these XML configuration                                 files okay so here for example we've                                 specified that this is going to be a                                 data node okay and we're going to filter                                 just on data nodes for example in our                                 code we can just refer to it as check                                 the node attribute is this a data node                                 then it just stores data it will not run                                 a service similar sort of setup that we                                 can do if I just move forward here with                                 services as well okay let me just show                                 you this okay so there we go                                 so here we've specified that this is a                                 service for this particular vehicle                                 service that we've defined and we've                                 specified this again within the XML                                 configuration so when this node starts                                 up it knows exactly what it's supposed                                 to do whether it can store data okay and                                 run a service all right very very useful                                 and then of course there's a lot of                                 other parameters that we can specify and                                 configuration details that we can set up                                 and then in terms of the interface                                 itself okay this is some example on the                                 right hand side I'll show you the code                                 in just a moment how we can do this okay                                 so this is a well defined API that's                                 available                                 both for the service nodes and                                 applications they know exactly what                                 services they can call what results they                                 can get back okay because it's all well                                 defined for you and then as I mentioned                                 typically if you were building external                                 applications you may not know what you                                 know how ignite is configured is not of                                 interest to you or you're simply                                 interested in is requesting some some                                 service some behavior and you can access                                 using sockets or rest or some other sort                                 of loosely coupled protocol if you want                                 okay we've seen this already all right                                 okay so I think we've done this already                                 all right we've covered that already                                 persistence right so we talked about                                 this already so you've got a range of                                 options that you can use and ignite can                                 do read through and write through from                                 external persistence for you okay and if                                 it's a transactional system such as                                 relational system it will ensure                                 consistency both in terms of the cache                                 and the and the relational system                                 because it's transactional for a lot of                                 these no sequel systems they work                                 slightly differently okay they are                                 eventually consistent so unfortunately                                 ignite cannot guarantee that that the                                 cache and the back end will be the same                                 okay so very very important here but it                                 read through right through again it's                                 available okay so let's just have a look                                 I think I'm almost out of time so very                                 quickly let me just show you the demo                                 and I will tell you where you can get                                 this demo okay so if you have a look on                                 github okay and then just go to the                                 Magda okay if you can see that there you                                 go then this Magda okay then this is my                                 boss and then just look at his github                                 space okay so that's the github calm Dee                                 Magda and you'll be able to see on here                                 micro-services example okay so it's a                                 full sort of project that you can                                 download and have a look at it's got a                                 pom dot XML just load it into your IDE                                 okay and so I've got the example here                                 and there we go so let me just blow this                                 up a little bit okay so what we can do                                 from here so I've just loaded it up just                                 read it in okay so I'll start a data                                 node here okay so run this and that                                 should come up straight away and then                                 I've got a couple of these services                                 defined one is for sort of maintenance                                 of vehicles okay a maintenance service                                 node and this node knows exactly that                                 it's only able to run services it will                                 not store data so I've run an instance                                 of that one and then I've got another                                 vehicle service node which does                                 something slightly differently I can run                                 an instance of that again it knows                                 through the XML sort of configuration                                 that it's service node it can do this                                 particular service that is defined okay                                 and then I can even run an external                                 application which knows nothing about                                 ignite or the cluster or anything but it                                 can use rest or a socket to connect and                                 do some work and the implementations for                                 these are just down here so here is the                                 maintenance service implementation okay                                 the API is defined what methods we can                                 call and what it will return and                                 similarly for the vehicle service                                 implementation there as well and again                                 what we have at the top are these XML                                 configuration files ok so they contain                                 the information so as the node is                                 starting up we are pointing it to a                                 particular config file the config file                                 contains all the details about the                                 service what role this particular node                                 has and the node as it's starting up                                 just pulls the information it knows                                 exactly what's going to happen ok and                                 let me just kind of wrap up then let's                                 run this external application and then                                 we can see try and get some results ok                                 so here it's just querying our system                                 and we're just running across this and                                 this is the maintenance schedule for a                                 number of vehicles for example ok thank                                 you                                 and what we can do is let me just go                                 back here and we can run this one okay                                 okay there we go                                 let me just run this one okay okay there                                 we go so I've got a couple of different                                 nodes running there okay couple of                                 service nodes a standard data node a                                 couple of applications happily running                                 within the IDE                                 right I mean my machine hasn't got an                                 enormous amount of memory but for this                                 particular demo it's okay so this                                 external application what it's done it's                                 changed some data so you saw that list                                 of vehicles just a moment ago what I've                                 done is that I've updated something here                                 now and so if I run this external app                                 here I should see some data has been                                 modified can you see look the this one                                 here maintenance of this particular                                 record has been updated by this                                 application that's fine now with this                                 maintenance service note I've got                                 running here I've got one instance at                                 the moment okay that was what was                                 specified and I can check that by just                                 going back here and you can see there is                                 a bit of information here that tells us                                 there's only one instance of this is                                 going to run that's fine now let me                                 launch another instance of this okay                                 all right just give that a moment there                                 we go                                 so this one is running but as you can                                 see there's no information here about                                 the service the service is not running                                 because we specified that that service                                 cluster wide is only going to be one of                                 them                                 so we've got two of these nodes running                                 that know that they are supposed to run                                 this service remember the diagram I                                 showed you earlier so the configuration                                 Ignite knows there's already an instance                                 running okay                                 I've powered up another node that can                                 potentially run that service but it's                                 not running that service because we only                                 need one instance all right if this node                                 that's running this service here                                 the crashes for some reason and I'm                                 going to stop this node right so now                                 it's crashed let's say some part of our                                 clusters gone down let's switch over and                                 have a look at this other one that we                                 launched just a moment ago can you see                                 that it's now picked up and now running                                 that service there so automatically this                                 failover                                 alright so one cluster wide                                 implementation of that service one                                 instance that we want our nodes gone                                 down with the configuration that we've                                 set up means that if we lose a node or                                 ignite will automatically switch start                                 that service on another node for us okay                                 so there's a great example of a                                 singleton okay and again know how to                                 look at this in your own time this is                                 pretty basic stuff you know Java it's                                 all implemented in Java and fairly                                 straightforward is it's a fairly small                                 self-contained project that you can play                                 around with have a look at the                                 configuration files okay so all the                                 configuration that you want to set up                                 very easy to do and then equally within                                 the examples you can have multiple data                                 nodes running as well if you want and                                 these tests applications which are                                 external okay so they know nothing about                                 ignite but they know the API that's                                 available and they can work to that API                                 so there you've got some flexibility                                 separation between what the cluster is                                 doing and what your external application                                 is doing okay great so I think I'm out                                 of time                                 and so let me just wrap up by saying                                 that you know feel free to reach out to                                 me on LinkedIn okay so this surname is                                 spelt many different ways so be careful                                 alright you can make sure you get to the                                 the right one of me someone asked me is                                 that really your job title Rockstar                                 Tecna it is I'm on Twitter as well okay                                 if you were if you are into social                                 activity okay and then the landing page                                 for ignite this is a great resource to                                 go to the dev and the user list are very                                 very active I think I believe ignite is                                 amongst the top                                                      projects today both                                 in terms of contributions and the                                 activity on the user in dev less so if                                 you've got questions sign up don't be                                 afraid to ask there's enormous amounts                                 of help available even basic questions                                 simple things that you want to ask that                                 this fantastic resource is available                                 that they'll dive straight in assist you                                 as as as best they can so it's a great                                 way to learn about the technology the                                 documentation everything is available as                                 well and as I said so if you want this                                 particular microservices example just go                                 to Dennis's github page and you can                                 download it ok great so any questions                                 any questions and issues any concerns                                 okay for you guys thank you one question                                 okay great so is it possible to mix                                 different back-end persistence                                 technologies right like our DBMS for for                                 certain things and then no SQL or okay                                 okay so the gentleman the question asked                                 was can you mix the backend technologies                                 for example could you use both a                                 relational system and say a no sequel                                 system or in a Hadoop or HDFS the answer                                 is yes so in theory you you know you can                                 combine a number of these technologies                                 together ignite behavior though may be                                 undefined it's hard to predict though                                 because if you're using just a                                 relational system for example that's                                 transactional then ignite for example it                                 will guarantee the consistency between                                 its cache and the back-end that's                                 guaranteed for you if you're working                                 with a no sequel system it cannot                                 guarantee that because these systems                                 work a different way and you're going to                                 combine that the two or more together                                 and again the situation is kind of                                 unpredictable because it depends on what                                 parts you want to update in one system                                 what parts you want to update in a I                                  think through code you could achieve it                                  it's possible natively whether Ignite                                  supports that I'm not sure I can check                                  that for you it's a great question                                  they're kind of a tough one for me to                                  answer but I can find out for you so                                  yeah background information so the my                                  day job                                  Oracle okay and the the architecture the                                  rené relational model has been a little                                  bit compromised okay in order to achieve                                  high such performance right and maybe it                                  would be possible to achieve good                                  performance with a good case like night                                  okay sometimes we think about using                                  different technology for the read-only                                  part okay like not using database views                                  anymore but using something like elastic                                  some understood okay so in that case                                  then it might be it                                  rather than using ignite and I'm only                                  doing this to trying to help you because                                  I feel that you know there are cases                                  where ignite will be really really                                  useful in other cases where it may not                                  be useful so I would definitely look at                                  alternatives because I think using                                  ignite is great as a caching technology                                  it's great working with transactional                                  systems it's great if you're working                                  with no sequel but not concerned about                                  the transactional part so if there are                                  some queries that you want to scale say                                  from your Oracle system but you're                                  looking to kind of effectively replace                                  the Oracle some parts of that or what                                  Oracle is doing with some other                                  technology it might be better to look at                                  alternatives ignite might help might not                                  help I think need a bit more information                                  about the specifics but certainly in                                  terms of two backends that's something I                                  can investigate for you and be happy to                                  to follow up with you feel free to drop                                  me an email and by the way my email                                  address we have to wrap this up at this                                  point yeah but thank you very much my                                  pleasure okay great thank you
YouTube URL: https://www.youtube.com/watch?v=9zI1vSXC7cs


