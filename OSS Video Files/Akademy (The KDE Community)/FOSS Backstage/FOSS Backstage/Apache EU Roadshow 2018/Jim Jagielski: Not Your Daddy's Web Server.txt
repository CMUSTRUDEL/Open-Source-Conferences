Title: Jim Jagielski: Not Your Daddy's Web Server
Publication date: 2018-12-05
Playlist: Apache EU Roadshow 2018
Description: 
	Although 20 years old, the Apache HTTP server is not your Daddy's web server. It includes functionality, performance and capability you may not know about. In this session you'll find out all about Apache httpd 2.4!
Captions: 
	                              good morning everyone I want to thank                               everyone for attending for two reasons                               first of all I know there's a lot of                               other talks going on around this time so                               the very reason that you stopped to                               attend this one I'm very very thankful                               for I'm also very very thankful that you                               didn't get halfway up the stairs to get                               up here and say ah screw it I'll find                                someplace easier so it means a lot thank                                you I really appreciate it this talk                                today is actually going to be about                                surprise huh first of all are you sure                                this is what the one you want to attend                                or is this where you figured you made                                the steps might as well stay okay great                                um it's not your daddy's web server I                                don't know how well that translates in                                the US there's this idea that something                                Oh with for example let's use a car like                                a Ford car think of it as old slow very                                inefficient dated it's very oddly styled                                and so usually you'll see manufacturers                                so oh this isn't your daddy's Ford it's                                not what you expect it's not what you                                remember it's not that old thing this is                                the new thing so that's what I was                                talking about the Apache web server okay                                the Apache web server has been around                                for an extremely long period of time so                                there are a lot of preconceptions                                preconceived ideas about about the                                Apache web server that I'd like to                                clarify to make sure of everybody's up                                to speed on what's really the reality of                                the Apache web server and to really give                                everyone the kind of information they                                need to really be able to pick a really                                good solution for their web server a                                little bit about me I helped co-found                                the the ASF and been known on the board                                of directors up until I decided not to                                run anymore for the last                                           still consider myself a developer at                                heart I was actually I still am one of                                the core developers of the Apache Apache                                web server so the reason why are we                                talking about what's new in Apache                                    and the reason why I have this line up                                here is that Apache                                                 been out for several years it's not a                                new version of Apache we've been adding                                newer and newer features to it so which                                is a one hand kind of good on the other                                hand kind of bad people still think of                                                                                                      not have done a lot of work to it                                ok that's certainly not the case we've                                been adding features with every point                                release and things like that                                so the                                                          nowadays it's very very different from                                the                                  r                                                                     stuff like that that was released years                                ago some of the some of the preconceived                                ideas about the Apache web server                                nowadays is that it's slow I can't tell                                you how many times I still see                                performance data and things like that                                where they say with Apache you have a                                single process for every request coming                                in that has not been in the case for                                decades now if you want that if you want                                Apache to serve requests in that way you                                can certainly have Apache do that you                                had that freedom you had that                                flexibility but it hasn't been the sole                                and the preferred way of doing web                                services for a long long period of time                                another preconceived notion is that                                Apache is too generalized again there's                                just saying it includes everything                                including the kitchen sink everything                                you're gonna possibly think of to do                                with the web server Apaches inside there                                so it's kind of complex it's too                                generalized um I will say that Apache is                                generalized okay but it isn't complex                                you can make it do what you wanted to do                                but it's also very very simple to have a                                very lean streamlined web server if                                that's what your environment needs and                                some of the other things that Apache is                                talking you know the the FUD the fear                                uncertainty and doubt associated with                                Apache when compared to newer web server                                and web services out there is that the                                config file is too complex and that                                 Apache itself is too old and it hasn't                                 kept up with the times and what we'll                                 see is that we really have changed that                                 those are no longer valid when we were                                 making the transition from Apache                                        to                                                                 drivers that were obvious that we needed                                 to include for example a synchronous i/o                                 you know non-blocking i/o the normal                                 standard ways you think of doing high                                 performance high availability we knew                                 that these needed to be not only                                 possible inside of Apache HTTP D but                                 implemented very very efficiently as                                 efficiently as other web servers that                                 you may be familiar                                 which are event-based asynchronous and                                 things of that nature another thing that                                 we wanted to do is have a larger                                 selection of M PMS and PMS are sort of                                 like the model about how Apache handles                                 requests one of the M PMS is called the                                 old pre fork model and this was the                                 scenario where for every request that                                 came in there was an actual heavyweight                                 process a UNIX process that handled that                                 request in that response then of course                                 here's the threaded there's the worker                                 MPM where instead of processes handling                                 those requests it's threads and now we                                 also have the event MPM which allows                                 that to be done via events handled                                 within threads as well so we looked at a                                 lot of things that we knew that Apache                                 needed to do increase and improve to be                                 able to meet up with the demands and the                                 desires of a very very large user                                 community and try to handle and address                                 every one of those as a result most of                                 the new features that were in Apache                                     and are in Apache                                                    that up here and I'll go through each                                 one of them separately the very very                                 first issue that people talked about was                                 the configuration because it was based                                 on an incredibly old version of a web                                 server from the                                                         this hybrid XML lish kind of                                 configuration file it's not very simple                                 the the grammar and the syntax is kind                                 of strange it's not clean like Jason or                                 something like that so we spent a lot of                                 time thinking about how can we improve                                 that without rewriting the configuration                                 file format from scratch which would                                 make things very very difficult for                                 people who are upgrading from older                                 versions to up how can we improve it how                                 can we make it easier well one of the                                 first ways we thought about is that                                 there are a lot of cases inside your                                 configuration file where the                                 configurations of things like virtual                                 hosts and things of that nature are very                                 very similar things had a really well                                 tune to sort of like a template based                                 configuration file format so instead of                                 having                                 cut-and-paste gobs and gobs of these                                 sort of like virtual host containers and                                 going by hand and hand                                 edit you know the server names or the                                 document routes and stuff like that                                 would it be great to have just a                                 template a macro was like a CPP macro                                 program that enabled you to create this                                 template and then create virtual hosts                                 that say hey use this V host template                                 and use example as the name and                                 example.com as the domain and Apache                                 will make that easier for you the very                                 interesting thing is that this was                                 something that I actually noticed and                                 promoted back in                                                        one of the first Apache cons out there                                 because I thought it was such a great                                 feature and it was actually really                                 really nice at the original author after                                 doing tons and tons of improvements                                 decided to donate this to the ASF so                                 this is now a module that comes along                                 for the ride when you download download                                 Apache another thing that we knew the                                 people needed wanted and desired well                                 sort of like the dynamic configuration                                 you want the configuration to change at                                 runtime he didn't want to have to for                                 example you know when things change                                 change the configuration file hand edit                                 and do a graceful restart you wanted the                                 configuration to be dynamic and to be                                 able to handle that and so we added the                                 ability to have per requests conditions                                 inside the configuration files so the                                 configuration file itself is smart                                 enough to say in exists example hey if                                 if for this incoming request is coming                                 in the the HTTP host is from example.com                                 then redirect it permanently to this                                 location if it's this host and do it to                                 something else this was all something                                 that you could do in mod rewrite for                                 example which was for like the Swiss                                 Army knife of modules the problem with                                 mod rewrite is that the syntax is kind                                 of ugly and it is very slow and it was                                 very very difficult to change the the                                 context switch in your head when you're                                 doing normal traditional configuration                                 file formats inside                                 Apache and moving into this hybrid                                 language that that mod rewrite use so                                 this is a very very nice clean easy way                                 of adding some dynamic runtime                                 configuration changes inside there and                                 you can actually again we have a                                 different way of having template systems                                 inside there in addition to mod macro we                                 have another you know defining area                                 inside here which allows you to change                                 the configuration depending on how                                 Apache is up and start and things of                                 that nature I do want to mention before                                 I get too far into this these slides                                 will be available in fact they already                                 are available up on SlideShare so you'll                                 be able to download them you know as                                 soon as we're over if you want to                                 download them now and follow along                                 that's great                                 and I also really like you know                                 presentations to be dialogues so even                                 though I'm gonna save some time at the                                 end for Q&A if you have questions now                                 just please please raise your hand as I                                 said the slides are always going to be                                 available                                 I like answering questions during the                                 conversation so if you have anything                                 that pops up don't wait until the end do                                 it do it right on out yes right yeah the                                 question was if you can avoid mod                                 rewrite do so and that's always been the                                 case and in fact what you'll see is a                                 lot of the changes in the in the runtime                                 configuration is to enable the same sort                                 of capability that mod rewrite has but                                 in a much more user friendly way                                 you know as you know and rich Bowman has                                 actually a book on mod rewrite because                                 it is very very complex and it is very                                 very slow but there are some things you                                 can only do inside of mod rewrite but                                 for normal typical use cases really                                 doesn't make sense to to have something                                 that heavyweight on something as simple                                 as the things that we were talking about                                 okay another thing that we got rid of                                 and it'll be one of the first things                                 that you bump into when you upgrade from                                                                                                      command which was a signal to Apache                                 that hey                                 all these virtual host containers are                                 actually named a virtual host they                                 actually have the exact same IP address                                 they just have different host names and                                 domain names associated with them that                                 doesn't make sense anymore there's                                 really no reason that you need to tell                                 or trigger Apache to do that Apache                                 smart enough to notice that so we got                                 rid of that parameter right there when                                 you start Apache it will come up with a                                 warning this is hey this has been                                 deprecated but it'll still run it's just                                 a notice for you to change your                                 configuration file that has to happen                                 some other things that we added in to                                 make things like easier for the system                                 administrator is first of all we have a                                 general expression parser which I'll                                 talk about a little bit later on we saw                                 a little bit about that in the in the                                 runtime configuration the this new if                                 you know command line structure uses                                 general expressions and regular                                 expressions and so this parser is what                                 allows us to be able to add these kind                                 of a these kinds of capabilities inside                                 there oh I must have missed another one                                 I did if that's the define you know yeah                                 for some reason I must have missed this                                 slide sorry about that another thing                                 that sometimes came up is that you                                 always had the ability to tell patchy                                 how long to wait for an incoming request                                 either an original quest or a keepalive                                 request how long to you know wait until                                 you flush the socket and stuff like that                                 that was very very not very granular you                                 know it was one command one timeout for                                 everything that certainly didn't make a                                 lot of sense so we actually have a new                                 you know module out there that allows                                 you to say wait this amount of time for                                 the first byte or the first packet of                                 information wait this amount of time for                                 the first you know HTTP request of wait                                 this different time for the next                                 keepalive request so you have much more                                 granular control finer control on over                                 these timeouts this is great for things                                 like the old Solaris you know leaking                                 denial of service attack                                 someone would sent out you know one byte                                 of data and then wait you know a minute                                 and then another beta by the data so as                                 far as Apache was concerned it still it                                 was just a really really slow request                                 you can now nip that in the bud and                                 protect yourself from that from these                                 kinds of things out there another cool                                 thing is that in logging we've always                                 had very very intense and deep logging                                 capability inside of a patch and we                                 realized because we were all the reason                                 why we're developing the web server is                                 that we were web server administrators                                 web server users and of course whenever                                 anything gets wrong the first thing you                                 would look at our log files define                                 what's going on so we had the capability                                 to have really really detailed logging                                 unfortunately the problem was that it                                 was all or nothing you would have one                                 single log level that said you know hey                                 I wouldn't be want you to be very very                                 verbose the problem was that it meant                                 that every module every capability                                 everything that wanted to log something                                 was logging at that level so if you were                                 having issues with SSL for example or                                 mod rewrite or an authentication okay                                 and you wouldn't see what was going on                                 in that particular request response time                                 frame you would bump up the log level to                                 something really really verbose so you                                 got a lot of information but then you                                 had to sift through this huge log file                                 just to find the points that refer to                                 the module that was acting up for you                                 well we've changed that and now you can                                 just say okay for SSL I want this log                                 level for authentication                                 I want this log level so again it                                 provides you more opportunity and more                                 control over the verbosity                                 of the log levels inside there and we                                 actually have even more detailed logging                                 as well down at the trace level okay I                                 must I didn't skip that one I talked                                 about all of things on the slide except                                 the very very bottom one of the things                                 that used to be again with Apache - -                                 was that we had support for different                                 NPM the pre fork model the worker thread                                 model but you had to build the full                                 binary to use that NPM so usually if you                                 were building a module you would have                                 you know one could be binary just for                                 you know HTTP slash pre fork that was                                 your pre fork version and you had a                                 whole separate binary for the worker                                 scenario that didn't make sense we                                 wanted you be available able to use and                                 load in these em PMS the way you load in                                 modules right nowadays just with a load                                 module configuration directive so that                                 way you just have one binary and you can                                 pick and choose which modules to pull in                                 so that's something new inside of two                                 four we also realized that a lot of the                                 authentication authorization techniques                                 a previous versions of Apache were kind                                 of complex it's really really hard to do                                 that simple                                 you know you because on one hand you                                 want to have enough granular and                                 fine-tuned control over who has access                                 to what so it's very difficult to do                                 that in a very very nice way and I think                                 with every minor release we've kind of                                 like add that added new ways of doing                                 that we think this is most probably the                                 most easiest way of understanding the                                 control mechanism whereas before you                                 would have to have you know access                                 require you know deny acquire you know                                 access and things like that that made                                 things difficult to understand instead                                 we just have a basic idea that require                                 okay to to have access to this you are                                 required to be in the group admin for                                 any requests that are coming in for you                                 know dub dub dub Doc's for example we                                 require all of these conditions to be                                 true require that the person be in the                                 alpha or beta group but they're not in                                 the group reject you know and things of                                 that nature so it makes things a little                                 bit simpler to come up with complex                                 authentication authorization mechanisms                                 but we also did realize that sometimes                                 it takes a lot of time and resources to                                 change those from the old format to the                                 new format so we actually have a module                                 that allows you to continue to use the                                 old you know denying allow syntax into                                 for but we do encourage you to bump up                                 as much as possible Apache is always                                 excelled at having you know internal                                 server-side language support so mod luau                                 is now Lua is now sure yes yes                                 the question what was what you know                                 require all grated media's that is it                                 yes yes it does yes it does another                                 thing that we've done kind of as a                                 corollary to that is we realized that                                 the documentation that we have for some                                 of these things like how to set up a                                 reverse proxy or I had an authentication                                 the actual documentation is pretty good                                 but we added some user guides as well                                 which are documented on the main page as                                 well so in addition to the command line                                 you know parameter format you have that                                 mod Lua is is a really really cool way                                 of actually doing some internal very                                 very fast                                 you know either module development or                                 you know actual content creation to                                 things of that nature so in addition to                                 having server-side PHP which you really                                 shouldn't do but if you want to you can                                 and mod Perl you have now have a mod Lua                                 as well yes yes we were talking                                 yesterday about a specific use case and                                 we're talking about ways of doing some                                 kind of you know incoming request                                 handling in some authentication and                                 passing information between Tomcat and                                 Apache mod Lua                                 because this is actually down at the                                 server API level you know it's it's a                                 it's you know you can do everything in                                 modeler that you could in creating a C                                 module so you have full access to all                                 the information all the detailed API                                 information that you have at the module                                 level so if you can do it in mod Perl if                                 you can do it in C in a C module you'd                                 be able to do it in mod Laura there's no                                 performance degradation because Lua is                                 incredibly fast it's a very very lean                                 language it's a very very fast language                                 it works very very well a lot of the                                 supplemental pages that if you go the                                 apache website new server status pages                                 and stuff like that are actually based                                 on mod Lua it's a really really cool                                 language I really really do enjoy it I                                 don't get to play with it as much as I                                 would like and not only as I said before                                 not only is it something you can create                                 a module with you can also use it to                                 adjust your runtime configuration as we                                 saw inside there                                 there are a whole bunch of other new                                 modules I won't specifically call that                                 each and every one I'll call out the                                 ones that I think are very very                                 important and it really really nice                                 for example mod remote IP sometimes when                                 apache set up as a reverse proxy the                                 reverse proxy the the the server on the                                 back end doesn't know what the real                                 clients IP address is because as far as                                 the backend server is concerned apache                                 is the client so we have a new module                                 called remote IP which actually allows                                 you to get push that information from                                 the backend and from the back end to the                                 front end it works out very very nicely                                 the other thing that it adds and I'm                                 really really happy about this this is                                 brand new in the in the final released                                 is it includes a CH a proxy proxy                                 support which is another really really                                 great way of reverse proxy and the                                 backend server communicating it's a                                 really nice support a cheap proxy has                                 been using it for years it's sort of                                 like a communication mechanism between                                 in reverse proxy servers this was                                 actually added from a code donation I                                 unfortunately cannot remember the name                                 of the author but it was really happy                                 that they they agreed great to do that                                 sometimes you need to again in the idea                                 that mod rewrite is something to be                                 avoided sometimes you do need to change                                 you know content as is either being sent                                 will return from a back-end server we                                 have had for a long time a module called                                 mod substitute which did very very                                 simple pattern and replacement strings                                 so every time you saw you know a dot jpg                                 I want to change that to a dot Jeff or                                 something like that mod said includes                                 the exact same functionality but is                                 purely said compliant so if you're much                                 more comfortable in doing really really                                 Plex pattern-matching the substitutions                                 Allah said that module is available for                                 you as well what it does it changes the                                 content on the wire so say for example                                 really really simple example you had a                                 server you know you were generating                                 content and it was you know up the best                                 scenario is that you're operating as a                                 reverse proxy server you your back-end                                 application server is sending data and                                 you now need to have that data point to                                 a different URL space ok it's very                                 difficult to change the application that                                 does that you don't want to change                                 anything at all on the application                                 server so what you would do is use                                 either mod set or mods substitute to as                                 that is good as that's being you know                                 sucked in from the backend server but                                 before it goes to the client I take                                 those bytes look for whatever string it                                 is I want to replace and change it out                                 so it's basically done on that it                                 doesn't change what some of the file per                                 say it changes what goes out or comes                                 into the wire                                 oh right yeah I don't know if if it if                                 it would change values of environment                                 variables it's basically just just                                 content that's going through the wire                                 and stuff like that you could do that                                 you know the question was if I you know                                 can I change it with a placeholder to                                 something else than s yes you could I                                 won't talk about these because these are                                 kind of very very specific sometimes you                                 need to have you know authentication                                 forms everybody creates their own so we                                 pervaded provided a nice simple way of                                 actually doing that at the at the server                                 level and things like that mod rate                                 limit is a nice way of determining who                                 has what speed access so if you want to                                 make sure that one website has a lot of                                 bandwidth but you want to cut back the                                 amount of bandwidth for another site or                                 another client you can do that inside                                 here as well                                 mod cache now supports Renison memcache                                 natively so instead of you know store in                                 addition to saving it in a shared memory                                 space and on the file you now have those                                 capabilities as well because Apache                                 geode has both rightists and Metis                                 memcache interfaces that means you can                                 also use Apache geode as your internal                                 cache out there we've done a lot of                                 caching improvements now we're going to                                 be talking a little bit about mod proxy                                 first let me talk about this another one                                 which has been added as mod bratli which                                 is a really really efficient compression                                 mechanism it's always good that if you                                 can compress the content before it goes                                 out to the client you save on bandwidth                                 you save on money things of that nature                                 we've added a ton of new modules new                                 capability to the reverse proxy inside                                 there I'll talk about all those in quite                                 a bit the two newest ones are s CGI and                                 you WSGI for things                                 like Python and Ruby these are sort of                                 like the canonical ways of talking on                                 the backend to servers which are you                                 know those kind of language based                                 application servers out there mod H                                 check is another one we'll talk about a                                 little bit more if you were in my talk                                 yesterday about the pat reverse proxy                                 some of this will be a review or a copy                                 of what was talking about so I I                                 apologize in advance for that one of the                                 things that we did notice obviously in                                 Apache is you know sweet space inside of                                 being in a reverse proxy is that the the                                 cloud has really caused a lot of changes                                 there's been a lot of things that we                                 realize that have now become important                                 whereas it used to be very very                                 important that be able to scale                                 vertically now it's scaling horizontally                                 we know that the cloud is now dynamic                                 okay how do we handle that you know the                                 old days of being a man a hand change                                 the configuration of file and doing a                                 graceful restart doesn't doesn't worry                                 you know isn't that important anymore                                 the big Bugaboo always used to be                                 requests per second how many can I push                                 in this I there well the cloud because                                 it's so much easier to scale out maybe                                 the number of requests per second for                                 each individual box doesn't make that                                 much sense maybe what you want to worry                                 about more is latency you know I want to                                 make sure that that request response                                 time frame is as quick as possible and                                 if I need you know double the amount of                                 servers well that's cheap I'll do that                                 I'll optimize for that you know you know                                 so different optimization levels                                 different scenarios have now available                                 to us so this has really really changed                                 some of the things that we decided you                                 know would be impactful and useful for                                 Apache to to think about so I said                                 before it the dynamics about that                                 changes and especially in a reverse                                 proxy kind of scenario being dynamic                                 helps out as well because the cloud is a                                 very dynamic place you want it to be                                 self-aware you want it the reverse proxy                                 to be able to to take care of it so we                                 spent a lot of time and I guess if there                                 are two areas where there's been most                                 the improvements and the enhancements                                 inside of Apache do four it's been in                                 the proc                                 and in the actual performance capability                                 itself we added a lot of features a lot                                 of capability to my proxy fast cgi yes                                 the GI WebSockets these are all features                                 that are really built to optimize the                                 communication between the arm for anyone                                 who's using PHP and PHP fpm our fast CGI                                 is now fully fully compliant we worked                                 very very hard to make sure that all the                                 information that's coming through it is                                 correct it's inside there so other                                 things we talked about and wanted to add                                 to it and I'm talking about all of these                                 things specifically I think one of the                                 coolest features that we added it's                                 relatively new I guess the last four                                 releases yourself is the ability to have                                 dynamic health checks on the backends                                 now you could always configure Apache                                 that right before it would send a                                 request to the back-end web server the                                 reverse proxy situation to do a very                                 very quick hey are you there are you up                                 before I send you a request which was                                 nice which was useful but sometimes you                                 would want that to be want that to be                                 done dynamically in the background so                                 patch you would always be testing those                                 back-end nodes to see if they're                                 awakened alive so we added this feature                                 inside there and it adds a lot of                                 capability a lot of different ways of                                 having these health checks for example                                 if if all you want is a real quick                                 server check you know make sure that the                                 server is up and active and responding                                 on the network you can just basically                                 say hey do a quick tcp/ip ping it's fast                                 quick easy of course doesn't necessarily                                 mean that the web server or the backend                                 server is up but at least you know the                                 server is up so sometimes it's all you                                 all you really need another way of doing                                 that is saying hey I'm gonna go and do a                                 quick you know ping pong all in the                                 actual web server and the options you                                 know command is is the default canonical                                 way of doing that it's actually part of                                 the HTTP spec is that it doesn't you                                 know it's a very very quick way of                                 saying hey I know your web server is or                                 are you up are you able to handle                                 requests and you send an options                                 command to it and it says yep I'm fine                                 it's great so that that's a really cool                                 way sometimes you even want something                                 even more important you want to be able                                 to say not only is the web server up and                                 running but what's going on you know you                                 can even for example do a full get                                 request going on a page and parse that                                 page to see if there's hey you know the                                 example I'm looking at right here is                                 this is an expression right here the                                 expression is called in maintenance and                                 the maintenance is say basically saying                                 look at the body of the response that                                 you're getting back from the backend                                 server and is there anything is there a                                 string that says under maintenance on                                 that page and we're using that method to                                 check this particular server right here                                 you know the best way to see if                                 dub-dub-dub example.com is up and                                 running is to send a get request to this                                 URL status dot PHP and the status that                                 PHP is a little application that says                                 hey this is PHP application what I'm                                 doing is checking to make sure among my                                 sequel connections are okay if I detect                                 something's bad I'm gonna create this                                 default page that has the string in                                 maintenance inside of it so what's going                                 on is that every three seconds four                                 seconds whatever your parameter is it'll                                 check that back in using a get request                                 check the page check to see if it's                                 under maintenance if it is under                                 maintenance it will automatically and                                 dynamically take it out of rotation this                                 one's doing it with doing a simple head                                 request and this is just doing a temple                                 simple tcp/ip check so as in-depth or as                                 detailed as you want that done I'm gonna                                 check to be you know you can you can                                 have that no I'm sorry                                 oh yeah on this one right here okay                                 that's a TCP it basically just uses the                                 the the socket ping it's at the very                                 very level it basically just goes and                                 tries to do an open on the socket if the                                 socket if that the system call comes                                 back as okay it says okay at least I                                 know a socket is open now at least                                 there's there's webserver and a tcp/ip                                 stack on the other end up and running                                 and able to handle packets it doesn't                                 mean that the back server Apache is up                                 and running or the backend server Tomcat                                 is up and running it just means that                                 there's you know a server ready to                                 handle packets and things like that it's                                 just one of the ways of doing a quick                                 check yes                                 yeah his point was there's a setting                                 inside of most tcp/ip stacks that do                                 like a TCP keepalive and basically just                                 you know you know keeps it up and going                                 just making sure it doesn't doesn't die                                 and that's down at the networking stack                                 level of the operating system this sort                                 of like complements that because why you                                 have the networking stack making sure                                 that that sockets open                                 you also have Apache at a higher level                                 making sure that sockets a sockets open                                 oh yeah this these are all done                                 externally these these are just this                                 basically just says I think I see your                                 point is that you're asking what happens                                 to the client if he happens to get to                                 this thing okay he the client who's                                 making the request hoosier his request                                 gets forwarded to ww                                                 handled as it normally would be this is                                 all done by a separate process running                                 alongside apache and it's only there to                                 say hey are you up and running are you                                 up and running are you up and running                                 you know independent but in parallel                                 with Apaches normal reverse proxying                                 handling                                 yeah yeah the question was if we didn't                                 have these back-end dynamic health                                 checks what would happen if for example                                 dub dub dub                                                              is that Apache would notice it was down                                 and would try to send the request to                                 that that server see that there was no                                 response see the you know the connection                                 was dead it would take it automatically                                 out of rotation and then retried that                                 for one of the other web servers one of                                 the other nodes in that pool mm-hmm no                                 oh the question was just say you didn't                                 have any kind of fell over and the back                                 end thing yeah right yeah in that                                 particular case no it wouldn't because                                 the timeout would be much much quicker                                 than that                                 Apache wouldn't be waiting for a long                                 period of time because the timeouts                                 really only take effect when Apache is                                 waiting for information that it thinks                                 should be coming if the connection is                                 down if the backend server isn't there                                 okay there are two scenarios one is that                                 the web server is really really slow and                                 so Apache is waiting for content to be                                 coming back from the web server from the                                 backend web server and then it would                                 wait for whatever the timeout is set to                                 because of asuras Pachi is a concern                                 that back-end node is up is alive and                                 I'm just waiting for it to send                                 information back to me it could either                                 be slow could be generating a lot of                                 content I will wait what however my                                 back-end you know rest time that is most                                 of the time what will happen is that if                                 that server is down Apache will send the                                 request to it and the request will                                 bounce immediately the it that that the                                 sending of that data will fail Apache                                 would notice it fails because you know                                 it sent it the you know the the                                 underlying stack says hey this isn't up                                 and running anymore let's keep on going                                 right right                                 yeah but but when you do that when you                                 do a telnet to something okay what                                 you're doing is you're trying to build                                 up a socket okay Apache already has that                                 socket built up Apache Rd because it's                                 got either connection pooling Zoar                                 that's the way things set up is once                                 Apache it comes up and running and it                                 sees what those back-end servers are it                                 says okay I'm gonna recreate these                                 sockets and keep them up and running so                                 it's it's not doing that timeout wait                                 for a socket to come up what is doing is                                 the timeout is how long it's going to be                                 taking before I get any kind of                                 information off of that socket that I                                 don't know that I don't know you know                                 sometimes you need a lot of back-end                                 servers you know you have a single                                 Apache which is forwarding information                                 to dozens hundreds maybe even thousands                                 of back end nodes sort of like a simple                                 micro-services router so to speak doing                                 it setting up that configuration inside                                 the standard configuration file doesn't                                 make sense instead the best way of doing                                 that is using this new module called mod                                 proxy Express where all this is held                                 inside of a database all this says is                                 that for anything that's coming in for                                 dub-dub-dub example.com send it to that                                 you know single you know processed send                                 anything for that request to that node                                 that request that server to that node                                 inside there the cool thing about this                                 is because it's it's a database dbm                                 database once you change it apache takes                                 up those changes so it's a fast easy                                 quick and dynamic way of changing that                                 information we also have an embedded                                 administration module that goodson it's                                 it's held in memory and as soon as the                                 databases change it gets changed inside                                 we have a way of changing all of these                                 proxy paths and parameters dynamically I                                 want to do a quick demo of it and I've                                 learned enough not to do real live demos                                 so basically this is a standard page                                 that says I'm looking at this balancer                                 set and these are all the nodes inside                                 this this                                 balance recite I'm changing one of the                                 parameters this node right here from                                 being enabled to disabled I'm changing                                 the load balancing parameters to by                                 requests and as soon as I hit submit                                 Apache immediately changes its                                 configuration its runtime configuration                                 for that to happen I could even add new                                 nodes that Apache wants to talk Adam on                                 the backend by this interface even                                 though this example is using a webform                                 you can actually drive it by curl or                                 double you get its it's all restful                                 interface all we're doing or getting                                 post calls to Apache web server so right                                 here I've created a new node once it's                                 created it's automatically disabled it                                 takes a specific you know point for you                                 to actually enable it and this stuff                                 actually persists across deaths of                                 Apache so as you see we did all that                                 stuff I stopped Apache Apache is dead                                 you would expect those dynamic changes                                 to go away they have to redo it but                                 actually once Apache comes up all the                                 changes that we dynamically made come                                 along for the ride so there's absolutely                                 no issues with even losing and                                 information once Apache comes up the                                 other biggest thing is the amount of                                 performance inside here the next couple                                 slides are all kinds of graphs and                                 charts and stuff like that about how                                 fast a patchy is with requests per                                 second                                 latency things of that nature everybody                                 asks about httpd and nginx so I did a                                 couple of benchmarks in a reverse proxy                                 scenario what was very very interesting                                 is that in general the performance                                 differences were really nil                                 there was really no differences at all                                 inside of there you know when you look                                 at the requests per second the time                                 frames the latency and stuff like that                                 remember earlier I said sometimes you                                 may actually want pre fork a single                                 request response handled by one                                 particular thread that's fantastic for                                 really really low latency the nice thing                                 about this is very very consistent so if                                 what's important to you is low latency                                 and very consistent request response                                 time frames then and if you can't afford                                 and bite the bullet and go with a free                                 perk scenario you get really nice fast                                 and consistent performance outside there                                 the basic idea                                 yeah is that nowadays the web servers                                 usually aren't the slow link in the                                 chain the benchmark is very very stale                                 because everybody's constantly improving                                 and stuff like that don't trust                                 benchmarks if you know basically try it                                 for your own self and finally we have                                 full support both at the front end as                                 well as the back end for HTTP two there                                 was something put out not that long ago                                 I wish I had the URL that compared all                                 the web servers HTTP to support as far                                 as compliance and Apache HTTP D was the                                 only one that was fully compliant with                                 the spec which is really really nice                                 really happy about that                                 yes                                 oh it supports it                                 um it doesn't do anything by default                                 because when you set up a reverse proxy                                 you mean real quick get back to that                                 point                                 you tell Apache what scheme you're                                 talking about so right here we're                                 talking HTTP with HDPE one if I wanted                                 to talk htat to be two it would be H to                                 dub dub dub four so this is this is the                                 scheme that tells you hey for a request                                 is coming in this is the server I'm                                 talking to this is the the protocol you                                 know schema that I'm using so that could                                 be H ap if you're talking to Tomcat HTTP                                 if you want to talk one one H - H - see                                 that's where you determine it yeah HTC                                 hd                                                               remember clear tax clear that's right                                 right right H - yeah yeah because HTTP -                                 is by default SSL as I said before                                 performance is cool check it out my very                                 very last slide is just my contact                                 information email address Twitter feed                                  if you can't follow me and again this is                                  the URL for all of my slides all of my                                  slides are also under a Creative Commons                                                                                                            and stuff like that                                  i reaiiy am really really out of time i                                  sorry about that I really appreciate all                                  the questions or so but I do apologize                                  to the next speaker who has to now rush                                  and get stuff done so I will be around                                  the rest of the day I hope everybody has                                  a great great rest of the day as well                                  thank you again                                  long live Apache                                  you                                  [Applause]
YouTube URL: https://www.youtube.com/watch?v=9IfPVgQFAEs


