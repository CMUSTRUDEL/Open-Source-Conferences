Title: Lars Eilebrecht: Securing Communications with Your Apache HTTP Server
Publication date: 2018-12-05
Playlist: Apache EU Roadshow 2018
Description: 
	This talk will introduce you to the fundamentals of securing communications of your Apache HTTP Server with HTTPS. We will start by explaining the basics of X.509 server and client certificates, certification authorities, and using the OpenSSL toolkit. The TLS/SSL protocol will be introduced and how it is used together with HTTP in order to provide for data encryption, integrity, and authentication.
Captions: 
	                              all right good afternoon everybody my                               name is Kevin McGrail today it is my                               distinct pleasure to introduce lars ila                               brushed he is going to be talking about                               securing communications with the httpd                               server and so without further ado let's                               bring Lars up thank you very much my                               pleasure and most importantly thank you                               very much for letting me pour you a                                laptop because apparently my didn't work                                with a projector so just a quick slide                                about myself my name is Lars I wished                                I'm I work as an independent IT                                consultant typically at E security                                consulting I'm based in London in terms                                of Apache I've basically been involved                                with the Apache web server since                                     co-found a member of the NSF and given                                my interest in IT security I'm also                                involved in the ASF security team um                                this presentation is about securing                                communications that means TLS HTTPS this                                talk is intended for or intended as an                                introduction it's intended for beginners                                I don't want to go into advanced                                configuration how to set up specific                                client certificate authentication or                                anything it's more about the basics                                because in my in my work I found that                                even seasoned system administrators                                sometimes get this wrong because I don't                                understand what exactly they are doing                                yes it may work for you maybe your                                server is correctly answering HTTP                                requests but it is very easy to get                                things wrong if you don't exactly know                                some of the basics so I'll try to go                                through this reasonably quickly if there                                are any questions feel free to ask I                                hope I have a few minutes at the end for                                Q&A um so we're talking about HTTPS                                we're basically living in the world                                where we are heading towards HTTPS                                becoming the default for everything                                browsers will or have already started to                                penalize plain HTTP setups where the                                browser tells you in a more prominent                                way this connection is insecure so HTTPS                                it's basically plain HTTP all                                a TLS over a TLS session                                you get three important things by using                                HTTP or TLS confidentiality and data                                privacy which means no one can read your                                data the communication between the                                client and the browser of sorry the                                client and the server is protected from                                eavesdropping and only the intended                                recipient I can read the data you get                                authentication the browser the client                                authenticates the server and optionally                                you can configure your server as well to                                to authenticate the the client as well                                last but not least data integrity which                                is another bit it's not just that the                                communication is encrypted you can also                                be sure that no-one has tempered where's                                the communication between client and                                server quickly through some                                abbreviations and and naming conventions                                or names when people talk about TLS                                certificates or when they talk about                                HTTPS actually is all x.                                                that's actually the name for the itu itu                                technology standard                                which was created in                                               public key infrastructures the common                                terminology you are confronted with is                                CA that's a certification authority so                                that's the place to which you would send                                the so-called certificate signing                                request and have a public or a                                commercial CA issue you a certificate                                eventually a certificate may have to be                                disabled or revoked and every CA is                                required as per the Pai guidelines and                                requirements to maintain a so-called                                certificate revocation list which is                                basically a a text file that contains                                signed information about which                                certificates have been have been revoked                                I get to that topic later on on a slide                                when you deal with not just the patchy                                configuration but any type of TLS or                                https related configuration there's                                typically two five                                formats or file types that you come                                across one a so-called pen PM files and                                the other one is p                                                 apache wants files in the pen format the                                 main difference is that p                                            basically a single file that contains                                 one or more certificates and or private                                 keys in a single file when it comes to                                 Pam files it's either a file that                                 contains one or more certificates or                                 it's a file that contains one or more                                 private keys                                 Pam files look like this you may have                                 seen that before dealing with                                 certificates and basically it's just the                                 base                                                                    binary format a so-called de our files                                 distinguished encoding rules as in one                                 values doesn't really matter basically                                 what you can remember is the our files                                 or the binary format and Pam files are                                 the base                                                               when you configure things PEM files                                 because you have different files common                                 commonly used file extensions are dot                                 key for the private key CRT or CR for                                 the actual certificate and then CSR                                 which would be the signing request                                 initially but again Apache itself                                 doesn't really care about the file                                 extension it only cares that you have a                                 PEM file so what's the certificate I've                                 been talking about private keys so this                                 whole topic is obviously private public                                 key encryption you have the private key                                 when it comes to your server                                 configuration that sits only on your                                 server and the public key is something                                 well that's been given to to the clients                                 and a certificate is essentially a                                 public key plus some metadata and then                                 you give that in a signing request to                                 the CA they add a few more bits and                                 pieces to it and then give that back to                                 you in the form of a certificate and the                                 most important ones are the most                                 important but the the metadata includes                                 important information such as who is                                 issued the certificate how long is it                                 valid form and most importantly the                                 subject the subject of a certificate so                                 a certificate isn't specifically tied to                                 true web infrastructure or servers it                                 can be issued to an individual for                                 example the the subject could be in                                 relation to a to a person to an                                 individual person when we deal with with                                 servers obviously it contains the host                                 name so that's the so-called common name                                 so the subject of a certificate is a                                 list of identifiers typically you find                                 at the very least the so-called CN the                                 common name as part of that subject but                                 it can contain additional information                                 depending what type of certificate has                                 been issued at the bottom you can see in                                 example how this may look like it might                                 contain the company name it may contain                                 the country etc but typically at the                                 very least you have a host name in there                                 in the case of a single host name it's a                                 fully qualified host name of your of                                 your website there's a special case                                 that's defined in the SSL and TLS                                 standard which is a wild-card domain                                 that you can add to a certificate                                 clients treat this in a slightly                                 different way basically they would                                 accept the very same certificate for                                 every host name under that domain and                                 for the domain itself so for example in                                 this case start at example.com works if                                 you type in something like example.com                                 into your into your browser so in                                 addition to single domain certificates                                 wildcard certificates the main                                 certificate type so to speak that you                                 get these days also called multi domain                                 or sand                                 Sen certificates the abbreviation comes                                 from the X /                                                           subject alternative name and that's                                 basically a list of one or more host                                 names for which the certificate is valid                                 wildcard certificates are useful but                                 also a bit of a security risk depending                                 how many servers and hosts you have                                 under a given domain and the signed                                 certificate allows you to limit this to                                 just the set of the say virtual house or                                 domains or host names that you want to                                 serve with that particular server or                                 cluster of servers                                 another special type of certificate our                                 so-called extended validation                                 certificates essentially they contain a                                 separate flag that tells the client                                 especially the browser that this                                 certificate has gone through while                                 extended validation which is basically                                 the CIA charging you more money for                                 doing a little bit of extra work in                                 terms of making sure that that you                                 definitely own this this domain that the                                 company has been validated properly and                                 it's the yeah also wise owner of this of                                 this domain you probably have seen this                                 on some websites where basically it                                 shows the company name in the browser                                 bar typically it's it's green depending                                 depending which browser you're actually                                 using if we have time at the end feel                                 free to ask about this again because I                                 have a bit of a say cynical view about                                 EB certificates I think they are not                                 that that useful and to some extent just                                 allowing CAS to make more money but                                 that's just my opinion so obviously one                                 way to get a certificate for your                                 surveys you can buy one from a                                 commercial CA you can pay for an AV                                 certificate sometimes actually up to                                 more than one thousand euros per year                                 you can get domain only validation                                 certificates for a few years obviously                                 you can also create your own                                 certificates you have things like the                                 open SSL tools or other tools you can                                 set up your own little peak high within                                 an organization maybe for like a test                                 PKI for your non production environments                                 where you issue certificates yourself                                 another very good option these days is                                 simply getting a free certificate from a                                 proper a proper CA that works in                                 basically all browsers and clients these                                 days which is called let's encrypt                                 basically it's a fully automated process                                 typically it takes like an a few seconds                                 or less than a minute or a couple of                                 minutes to get a certificate issued by                                 the by the CIA and it only validates the                                 that you own the domain know that you                                 have ownership of the of the domain                                 yourself                                 it's completely if we have charged                                 certificates are issued for                                             you can renew them as often as you like                                 this whole CA service is provided by the                                 internet security research group which                                 is a nonprofit organization that                                 launched about two years ago and it's                                 been really popular I use it for some of                                 my own servers as well if your browser                                 so why do we actually care about a CA a                                 browser has all browser or any client                                 comes with a set of predefined and                                 trusted root sea ice                                 so the browser needs to figure out                                 here's the list of depending which many                                 your browser comes with his list of all                                 the good CAS our trust there's a server                                 certificate if the browser is able to                                 figure out that this certificate has                                 been issued by one of the trustees he is                                 everything will work fine otherwise it                                 will show a warning that looks like this                                 this is an example how this looks like                                 in in Firefox you may also sometimes see                                 this if there's some base configuration                                 on your server in many cases I've seen                                 this is in relation to miss configuring                                 so-called intermediate certificates it's                                 not very common that a CA would use the                                 actual root certificate that's in a                                 browser to directly issue server or                                 client certificates they usually have                                 different levels of intermediate CAS                                 intermediate certificates and when you                                 configure your server you are required                                 to make sure that all necessary                                 intermediate certificates are included                                 in your configuration otherwise the                                 browser isn't able to determine that                                 certificate chain that chain of trust                                 and you will see an error message like                                 like this the server client certificates                                 in documentation is sometimes also                                 referred to as the the leave or end                                 entity certificate and let's talk about                                 SSL TLS quickly SSL was the original                                 name Secure Sockets Layer for the                                 protocol developed by Netscape back in                                 the                                                                     considered deprecated and is insecure                                 and should not be used anyway                                 anymore if you're still using it                                 anywhere make sure you you get that                                 sorted out teal has one point zero and                                 one point one they are still kind of                                 okay but really not recommended to be                                 used anymore so basically going forward                                 everything that you set up should at the                                 very least be TLS                                                       just I think last month's approved by                                 the ITF as a new standard so in general                                 when people talk about SSL certificates                                 or TLS certificates what they really                                 mean it's an extra nine certificate and                                 I'm going to use this with TLS and HTTPS                                 before I continue with the actual Apache                                 related configuration details any any                                 questions so far                                 does that make sense was it too boring                                 you already knew all of this okay yeah                                 yeah hold on a second let me bring your                                 microphone so about this chain yeah                                 could you mention something about                                 validity of this chain how it works in a                                 couple of simple sentences yeah so                                 basically the roots yeah that's the the                                 top level certificate that is                                 certification Authority owns and they                                 typically have that they don't issued                                 server certificates directly the issue                                 other CA certificates their intermediate                                 C is maybe use different companies                                 there's there's different setups for                                 each commercial CA so basically the root                                 certificate issued the intermediate                                 certificate number one and you may have                                 several layers of issue in these                                 certificates at some point that say you                                 have intermediate certificate number                                 three in that chain that's the actual                                 one that was used to issue your server                                 certificate so the browser I get to this                                 in the configuration later so basically                                 in your configuration you would submit                                 or configure your server certificate                                 plus one or more intermediate                                 certificates and this is sent in the                                 handshake in the initial setup of the                                 connection to the browser to the client                                 and together with that the browser is                                 able okay I can find a chain of trust                                 that leads to one of my trusted                                 certificates and then the browser is                                 like okay all good I trust this server                                 certificate does that make sense okay                                 cool oops where am i okay mod SSL Apache                                 it's basically been included since                                 Apache                                                                 it is based on open SSL there are                                 various SSL libraries or TLS libraries                                 open SSL is being used for the Apache                                 module it still supports SSL v                                          as I said do not use that it's                                 considered considered insecure and                                 shouldn't be used anymore                                 it supports TLS up to version                                        this table                                                               just recently been added to a                                 development version of Apache it                                 requires open as I sell                                 point one obviously TLS                                                  security benefits should be used as soon                                 as possible                                 browser companies Chrome Firefox cetera                                 have have or are about to start enabling                                                                                                          take a while before you have a sizable                                 let's say market share of people coming                                 to your site using or expecting                                         at this point one point two is still the                                 main protocol that that you want to use                                 and so one point three will definitely                                 be be in Apache two point six the next                                 stable major release I don't really have                                 a there isn't really a timeline for this                                 at this point I'm assuming again there's                                 no at least I'm not aware of any plans                                 to do this anytime soon but I'm                                 expecting that at some point some of the                                 back port this and make it available in                                 the future two point four version of App                                 Engine the first step in making sure                                 this all works is you need to make sure                                 you have the right modules enabled apart                                 from the SSL module you need to enable a                                 caching module there's the SH MCB shared                                 memory cyclic buffer module which needs                                 to be enabled because you need that for                                 configuring session cache for SSL if you                                 use the default or the source                                 distribution of Apache there's a example                                 file or default configuration for SSL                                 for the mod SSL configuration however if                                 you use Apache an Apache package from a                                 Linux distribution this probably looks a                                 little bit different and you probably                                 don't have to worry about the module                                 configuration that probably has already                                 been taken care of I get to that in a                                 moment I get to that in a moment um                                 first important configuration I talked                                 about the certificates before you need                                 these two PEM files server certificate                                 and the the key file but the key file                                 you should make sure that the key file                                 itself is only readable                                 root on your server it shouldn't be read                                 about by the Apache user that's that's                                 configured in your apache most important                                 step after that is you want to enable                                 HTTPS for one or more of the virtual                                 hosts and you do this by defining SSL                                 engine on inside your virtual hosts                                 section typically you want the default                                 port for HTTP which is                                                   to make sure you have a listen statement                                 to make it an HTTP virtual host and                                 going back to the intermediate                                 certificates are already mentioned that                                 briefly earlier so that SSL certificate                                 file directive that contains your server                                 certificate you have to put any                                 additional intermediate certificates                                 typically you go to the documentation                                 from your CA whoever ordered whoever                                 issued your certificate they will tell                                 you here's one two or three certificates                                 that you need to include and you need to                                 sort them if you have multiple                                 certificates from leaf to root so                                 basically the the first one in the text                                 file is your server certificate and then                                 all the various intermediate                                 certificates that are required they used                                 to be a separate certificate chain file                                 directive in previous versions of Apache                                 but only included the intermediate                                 certificates but I think it was always                                 optional you could always put this in                                 the main file anyway and it just caused                                 confusion so this was removed in a                                 recent version of Apache um which                                 hosting just quick comment about that                                 obviously these days everyone uses                                 name-based virtual hosts it used to be                                 that prior to the SN I to the so called                                 TLS server name indication feature being                                 available it was a requirement for every                                 SSL or TLS virtual host to have their                                 own dedicated IP address                                 TLS happens on a different layer and on                                 that layer there's no information to the                                 server at this point which hostname or                                 which virtual host the client wants to                                 talk to SN I basically adds that host                                 name to the TLS handshake and that                                 allows Apache to figure out to which                                 virtual house direct that request                                 and one important directive I would                                 always enable is coming to interesting                                 directive names SSL is strict as an IV                                 host check if enabled it will respond to                                 clients who do not support sni with the                                                                                                          it to off or turn this feature off a                                 client who doesn't support sni will be                                 served from the first virtual house that                                 appears in your configuration which                                 unless you've set it up specifically                                 that way may not be the one that you                                 want this request to go to and again can                                 cause cause problems so typically unless                                 you have specific requirements I would                                 always recommend to enable that that                                 setting I mentioned let's encrypt                                 earlier they use for their online                                 certificate request and management                                 protocol they use a so called Acme                                 protocol it's a general protocol but                                 basically at this point only one CI uses                                 that and that's let's encrypt and                                 there's now a module that handles the                                 whole certificate management details                                 automatically it is still experimental                                 it was just recently included in the                                 latest version of Apache and basically                                 if you've already configured your                                 virtual house you simply define the EM                                 domain directive give it the host name                                 or host names for the virtual house for                                 which you want to have a certificate you                                 simply start your Apache                                 and it will do the whole request which                                 is registering with let's encrypt                                 requesting your certificate and storing                                 it and installing it and using it                                 automatically if it cannot get one it                                 will basically serve for three responses                                 to request to that domain if something                                 went wrong because everything's                                 automated you have to sign up to their                                 terms and conditions and you basically                                 do this by putting a directive into your                                 configuration that links to their terms                                 and condition file                                 one directive that most people tend to                                 ignore is a general directive called                                 server admin and what empty uses that                                 email address to register was let's                                 encrypt so you should make sure that                                 that's configured to an email address on                                 which you actually can receive email                                 because for example if I tell you about                                 a new terms and conditions that you have                                 to accept or agree to you need to update                                 this in your configuration or maybe they                                 sent you additional information about                                 outages or changes or whatever let's                                 talk about ciphers and protocols so the                                 again on some Linux distributions the                                 default configuration may look a bit                                 different to what Apache ships with this                                 is the default from Apache                                            versions of Apache                                                 options that are important SSL cipher                                 suite which defines the algorithms and                                 ciphers that should be offered or                                 allowed to be used in the server there's                                 SSL honor cipher autumn which basically                                 I think I mentioned that is this                                 previous call which basically tells the                                 client you must obey the honor the order                                 and that the server wants you to use                                 like there's a list of this is a                                 preferred cipher if you don't have that                                 you can pick the next one but the client                                 has to choose one from from that order                                 an SSL protocol is basically a higher                                 level directive where you can enable                                 specific protocols SSL v                                                 the general level the funny looking                                 string that gets given to SSL cipher                                 suite is basically in open SSL format or                                 formatted string and that's probably one                                 of the most I was a most misconfigured                                 directives when it comes to mod SSL it's                                 very easy to get something wrong if you                                 don't know exactly what you are doing                                 like enabling less secure ciphers in                                 your server etc so if you change it make                                 sure you test your server after you've                                 made the change often you find                                 recommendations online with long list of                                 individual ciphers being defined                                 here's another recommendation which is                                 which is from for me basically                                 so this setup would ensure that in terms                                 of SSL protocol if to say but everything                                 except                                                              enabled or available in the Apache and                                 it ensures that only high-security                                 ciphers are enabled that provide that                                 they provide forward security so that                                 would be my recommendation but again                                 things change with TLS so it's always a                                 good idea to double-check these these                                 things                                 open SSL that the ciphers command from                                 open Mozilla you can just give it this                                 this string I will show you a list of                                 all the ciphers that will be enabled it                                 can sometimes be a bit misleading                                 because Apache on one hand on what SSL                                 on one hand but also open SSL force                                 disable certain ciphers because they                                 wouldn't be secure at all so the list                                 that you get with a command line tool                                 it's not necessarily what exactly you                                 get when you enable this in in what SSL                                 and ciphers are only really secure                                 ciphers are only really useful or secure                                 if you provide it enough random numbers                                 mother shell has a command called SSL                                 random seat again if you use a Linux                                 package this is typically already being                                 taken care of however it makes sure you                                 should make sure that this is configured                                 properly you can define different ones                                 for start-up and during connect time in                                 terms of random numbers and there's no                                 default for this well there is a default                                 but there's no default in terms of the                                 commands itself if you do not define it                                 Apache will use a very unsecure built-in                                 function to obtain random numbers                                 they're not recommended or you should                                 not use this in a production environment                                 session caching very important from a                                 performance point of view that's why you                                 need this module that we talked about                                 earlier SSL session cache is a directive                                 that defines the path to a file on your                                 disk and the size of it the number                                 behind this is the size and bytes and                                 you can define                                 a session cache timeout it doesn't mean                                 that it removes the session key from the                                 cache it only means it defines how long                                 and the session key will be accepted as                                 as valid and a common question is how do                                 i define how big my session cache needs                                 to be you don't want it to be too big                                 you don't want the timer to be too long                                 because it has some implications on                                 things like forward secrecy typically my                                 answer is you should calculate this                                 yourself you should figure out in terms                                 of what am I trying to support with this                                 server infrastructure anyway a rule of                                 thumb is that a single TLS session when                                 stored in the cache takes up about                                     bytes so you can figure out the general                                 numbers of your server how many sessions                                 in parallel how many sessions in total                                 you want to be able to support you may                                 be able to calculate an appropriate size                                 for your for your set up initially only                                 session caching existed but basically                                 means the client stores or keeps the                                 session key and the server keeps a                                 session key for a certain period of time                                 TLS session tickets is basically a new                                 feature whereby the client stores the                                 session state and the session key and                                 the sessions key on the session Status                                 encrypted with a master key that was                                 created by the by the server and the                                 same so called session ticket encryption                                 key that the server created this used                                 for all sessions but the individual                                 session key is basically stored                                 typically in memory for each browser                                 during a specific specific session                                 browsers may even persist this to disk                                 that depends on the D video browser                                 there's some so from a performance point                                 of view I would say yes it's great you                                 should enable this from a security point                                 of view there are cases where you may                                 not want to enable this so there's some                                 security I wouldn't call it                                 vulnerabilities some doom I would say at                                 least there's some security concerns                                 when it comes to using session take                                 whose TLS                                                               recommendation is if you care if you                                 care if you require forward secrecy                                 forward secrecy means someone who is                                 recorded all the traffic between a                                 client and your server and then at a                                 later point is able to compromise your                                 server steal your encryption key like                                 the session ticket encryption key would                                 then be able to decrypt all the previous                                 or all the prior communication if you                                 have forward secrecy so certain ciphers                                 provide this but this basically disables                                 this this forward secrecy secrecy again                                 because it would compromise the the                                 session key so in                                                        a security point of view of require                                 forward secrecy you should probably just                                 disable it at the very least I would                                 recommend which is what many sites do I                                 think Twitter does something similar not                                 on a daily basis but on a more frequent                                 basis they do rotate the the master                                 encryption key the session ticket                                 encryption key on the server side on a                                 more frequent basis and so at the very                                 least I would recommend restart Apache                                 once a day the restart ensures that                                 Apache rotates the key basically when                                 you start Apache and you haven't                                 configured a specific file that it                                 should use for the session key sorry for                                 the session ticket encryption key it                                 will just create one in memory and hold                                 it in memory and as soon as you restart                                 Apache it will create a new one and all                                 previous session tickets become invalid                                 likewise what we saw would be sufficient                                 yeah so you may already do this on daily                                 basis anyway during lock rotation things                                 like that but keep in mind that if you                                 do that all the session tickets that                                 unknown to the clients will be invalid                                 it just means there will be a slightly                                 higher session start up time or                                 handshake time because it's if it                                 happens automatically it will just                                 create a new session ticket because the                                 browser realizes all my old session                                 ticket isn't valid anymore let's do a                                 full hand check and I start from scratch                                 teal has one been three resolves                                 basically all of these issues and has                                 certain additional security benefits so                                                                                                      have session tickets enabled it provides                                 a big performance benefit and quick one                                 about also related to performance in                                 some way not specifically but OCSP is                                 the so-called online certificate status                                 protocol some browsers arm or at least                                 can be configured to require OCSP which                                 means if I as the browser connect to a                                 server the browser would then check with                                 the issuing CA who has issued the server                                 certificate to check is that certificate                                 really still valid                                 is it ok to talk to this to this server                                 and only if the CA who is required to                                 provide this OCS P service hazard has a                                 proper response or a valid response only                                 then the client the browser would                                 continue to talk to the server OCSP                                 stapling is a feature in Apache that you                                 can enable it basically is a little bit                                 of overhead in terms of your server                                 because your server talks to the CA and                                 gets so CA was then talks to the CI and                                 gets a signed piece of data back which                                 is basically the I mean mainly the                                 certificate serial number and additional                                 metadata and stores this information and                                 then provides it to every client that                                 connects to the server the client is                                 able to validate the the signature                                 because it was a piece of data signed by                                 the CA and after that basically it it                                 requires the voice that the client has a                                 talk to the CIA and to your server at                                 the same time there have been cases also                                 was let's encrypt I think it happened                                 last year they had an outage to the OCSP                                 service and four clients were configured                                 to require over CSP it means they cannot                                 talk to your site they cannot connect to                                 your site because the CIA has screwed up                                 they're not providing the service the                                 set up avoids that or make sure that                                 your your customers your clients will                                 continue to be able to talk to your site                                 even if the OCSP service from the CIA                                 is unavailable for whatever reason and                                 so again you enable this SSL used                                 stapling you typically want to ignore                                 errors from from the CA there's                                 different options available in terms of                                 configuring this but typically I would                                 recommend it and the SSL stapling return                                 with ponder errors off otherwise you're                                 just forwarding the the issue to the to                                 the client in terms of I can't connect                                 to the to the to the CI and again you                                 need the caching module to store the                                 OCSP data from the from the CI a and                                 quick one I don't want to go into too                                 much detail Apache and Model S I'll                                 obviously allow you to configure client                                 certificate authentication sometimes                                 that's also referred to as two-way SSL                                 one-way as I said would be the browser                                 is just authenticating the server and                                 two-way means the server is also                                 authenticating the the client itself                                 it's commonly or typically something you                                 would use or you may use for example in                                 a company you may issue certificates to                                 your employees and each employee would                                 install this on their on their browser                                 and be able to connect to various                                 enterprise services in your organization                                 and would automatically be signed in and                                 authenticated also you may have to api's                                 to services micro services whatever                                 you're using talking to each other and                                 you could also have a client certificate                                 there to make sure that the right                                 service is talking to your to your                                 service                                 the main directive to uses SSL verify                                 client require so you put this inside                                 your virtual host section for which you                                 want to require or where you are                                 expecting client certificates in terms                                 of the configuration the main thing that                                 you need to do is you need to tell                                 Apache for which CA certificates he is                                 supposed to accept client certificates                                 so especially when it's in macum Pinilla                                 environment where you have issued                                 certificates with your own                                 PKI you know this is the certificate I                                 use to issue all these client                                 certificates you put this into the ssl                                 CA certificate file and then tell apache                                 this is the one or more certificates of                                 one or more see is that he is supposed                                 to trust when it comes to clients coming                                 in and authenticating clients again                                 there's a CL file you can configure to                                 to make sure that Apache is actually                                 quite important you need to tell Apache                                 which certificates have been revoked                                 obviously it won't accept certificates                                 that are expired but if there's a cases                                 where you've specifically revoked a                                 certificate for whatever reason that                                 needs to be in this crl that you need to                                 provide to Apache so Apache would stop                                 accepting these certificates again not                                 going into too much detail obviously                                 Apache can act as a reverse proxy it's a                                 bit more difficult if you want to use                                 HTTPS on the back end because in that                                 case Apache needs to act as a client so                                 you have to first of all basically                                 similar set of directives like SSL                                 engine SSL proxy engine you can                                 configure the cipher suite the protocol                                 and there's a certificate details that                                 it needs to be able to act as a as a                                 client sorry one more quick one once you                                 set up HTTPS on your on your website if                                 it's an end user facing website I would                                 highly recommend to enable or to base                                 the issue or include an HTTP header                                 called strict Transport Security in all                                 responses on the HTTP port max H in this                                 case basically means one one year in                                 this case it's a common common setup                                 once you're sure that you do not want to                                 use this hostname this website with HTTP                                 anymore you include this directive and                                 this tells browsers or browser Daisy                                 cache this and won't use HTTP anymore                                 even if someone gives them a link that                                 points to the same hostname for HTTP it                                 will always use HTTPS what MD actually                                 provides a shortcut to this there's a                                 configuration option called                                 MD require HTTPS I think there's                                 temporary which is a shorter time range                                 and permanent which is a one-year max                                 age definition and in addition to that                                 it also configures a redirect from the                                 HTTP to the HTTPS website so that's an                                 easy way to ensure that going forward                                 everyone will use the HTTP endpoint or                                 HTTP port for your website how are we                                 doing on time five minutes time for                                 couple quick questions anyone                                 the certificate revocation file if you                                 change it is it reloaded automatically                                 we need to reload it httpd you mean this                                 CLL is a big of a vacation file I don't                                 think it is it is not read automatically                                 I think again it requires a graceful                                 restart for Apache to pick up the CRL so                                 you're talking about this one SSLC every                                 vacation file I could be wrong a Monday                                                                                                          a graceful we start for Apache to pick                                 up the file to pick up a change to the                                 file if you change it typically if you                                 at least in the case of where I set up                                 pica eyes inside an organization the CL                                 yeah maybe it's not something you would                                 update that frequently anyway there's                                 some overhead involved in doing all this                                 you would update it best case on an                                 hourly basis but I've seen cases where                                 it was just once a day or maybe twice a                                 day where you would update this depends                                 a bit on your security requirements if                                 you really need to make sure that a                                 certificate that's revoked is reflected                                 as soon as possible on your                                 infrastructure you need to increase that                                 if it's on a daily basis is usually                                 sufficient for many many use cases but I                                 think you have to restart Apache ok in                                 fact we have a bug in tomcat native                                 which says that it didn't reload it so I                                 was quickly asking what the TPD is doing                                 so I'm I will probably do the same I may                                 need to double check that but they are                                 fairly sure you need to restart it I can                                 do it two things ok any other questions                                 ok I guess everyone's ready to set up                                 HTTPS all right well thank you all for                                 coming to this talk if you could all                                 give Lars a big round of applause                                 [Applause]                                 you                                 [Applause]                                 [Music]
YouTube URL: https://www.youtube.com/watch?v=dpNgIl6o09o


