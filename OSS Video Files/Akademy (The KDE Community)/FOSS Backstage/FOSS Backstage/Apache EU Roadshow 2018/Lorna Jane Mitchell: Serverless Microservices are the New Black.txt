Title: Lorna Jane Mitchell: Serverless Microservices are the New Black
Publication date: 2018-12-05
Playlist: Apache EU Roadshow 2018
Description: 
	Microservices are a great way to build modern, event-driven applications. Come to this session and find out how serverless technology can serve as a solid basis of a microservice. With scalability baked in and a shallow learning curve for developers, these modern platforms are an excellent fit for all your API needs including microservices. Come and learn how to adapt your existing knowledge to build excellent microservices from Serverless platforms such as Apache OpenWhisk and allied technologies like API Gateway
Captions: 
	                              hi good afternoon thanks for making it                               all the way up all the stairs to see me                               and come inside on such a nice day I'm                               Lorna I'm a developer advocate with IBM                               so I work on whatever it is developers                               need to be more productive with our                               tools and I am definitely on the                               developer side rather than the ops side                               of of the arrangement so I'm coming at                                open with as an enthusiast as a user as                                an occasional contributor so I'll do a                                really quick recap on serverless itself                                I spot some faces who were in                                yesterday's service talking some who                                were not so we'll just go quite quickly                                and when I say service in this context I                                mean functions as a service service                                really encompasses more than just                                functions as a service but I mean                                functions as a service and that means                                you write a function lots of different                                languages supported you deploy it to the                                cloud you can choose your cloud platform                                or run your own using a wonderful open                                source offering such as Apache open wisk                                you've probably heard of Amazon lambda                                IBM have a cloud functions offering                                Google have a cloud functions offering                                as your functions Oracle have bought                                open fires                                there's a bunch serverless is                                revolutionary I don't think I'm                                overstating the case there it has such a                                low barrier to entry and that's in a few                                different dimensions you don't need a                                huge amount of technical skill beyond                                being able to do whatever it is you need                                to do in the language that you choose it                                has a low barrier to entry in the sense                                that you don't need skills outside of                                that like you don't need a full set of                                full stack server admin skills there's                                low risk and that's because of the cost                                model so when you use service on a                                hosted platform you only pay while your                                functions are running so if you ship                                something and you're not sure if it's                                going to be used or not you're                                investing a lot of money in provisioning                                a large platform that may or may not be                                used and the platform's scales on demand                                so you write a function you deploy it to                                the cloud so it gets packaged and then                                if we have it will run in response to an                                event happening and you say what that                                event should be it might be a database                                change and item on a queue and incoming                                web request today's all about web                                requests because I'm going to show you a                                micro service and if too many of those                                events happen then we just put another                                container in a little container so this                                thing's scales horizontally as you need                                it to and I think that's really                                important these functions are limited                                they're limited in resource they're                                limited in execution time so you're                                going to be looking at something that                                runs for a maximum of five minutes or a                                maximum                                                                 that's really interesting because                                suddenly we're back to the efficiency of                                your code doesn't matter if it's not                                that servers are cheaper than developers                                suddenly this doesn't matter                                especially at scale you're slightly                                inefficient function when it's run a                                million times a day suddenly starts to                                cost you real money you need to talk to                                the person on your team who writes if                                statements what seems like the wrong way                                round to today's developers and and                                think about how you can optimize your                                code server list has had quite a lot of                                hype and a talk with service and micro                                services in the title haha buzzword                                bingo I think service is about more than                                the hype it's happening now because it's                                built on kubernetes it's built on the                                all the work that's gone before in                                containers what's happened in the                                container landscape is the reason that                                the service platforms can exist today it                                couldn't happen before not because we                                just invented a new thing and something                                else will be the cool new thing next                                year it's happening today because it                                couldn't have happened before we're                                building on the strengths of the wider                                 industry server list is great when it's                                 solving a problem that it's great for                                 this is not going to change every                                 that you do as a developer but it's                                 gonna be a really useful skill in the                                 box so these are the cases where I have                                 seen teams have the most success in                                 adopting a service platform so it's                                 really good for really small things I                                 obviously think it's good for micro                                 services I'm gonna give you a whole talk                                 about it we're gonna look at one but it                                 is really ideal it's very easy to set up                                 a function that responds to a web                                 request so that's quite a nice fit small                                 because you're making lots of small                                 functions so if you try and build a very                                 large application now you've got                                 hundreds of functions and it's quite                                 hard to administer and maintain that I                                 think the tooling is still growing in                                 this area it's brilliant for really low                                 traffic stuff that you really can't be                                 bothered to spin up a whole server for                                 set up the monitoring set up the alerts                                 right all that overhead that goes with                                 will just host this on a server so                                 something like the contact form on a                                 static site the open wisk the apache                                 open which community have a service                                 endpoint for there slack channel sign-up                                 right because it's just a one-off thing                                 it goes through to a place we store it                                 we send you an invite that's all we need                                 to do it's ideal for just one-off                                 computing power so if you're processing                                 data patches of data or even streaming                                 data if it particularly is not real-time                                 then this is a really easy way to                                 provide compute power one of the reason                                 that you'll go through a lot of ID                                 checks and need to supply some sort of                                 like credit card for almost all of the                                 hosted platforms is because it's great                                 for Bitcoin right this is just compute                                 you just use as much compute as you need                                 and I see lots and lots of particularly                                 data focused use cases around this                                 platform and it's a really good way of                                 moving for sort of traditional web                                 applications to move some of the more                                 intensive stuff off that web tier and                                 put it somewhere else the classic                                 example you'll see really often in all                                 the documentation is image resizing a                                 report                                 generation and that kind of thing these                                 are really good examples they're really                                 quite tightly scoped they're small it's                                 the kind of thing that you can just fire                                 and forget maybe email the report when                                 it's finished so these these are like my                                 preferred success cases if you fit into                                 sort of this a problem that sort of                                 smells like this then that would be your                                 clue that it might be a nice fit any                                 time that capacity planning is hard                                 because of the scalable nature of the                                 platform then serverless can be a real                                 win and when you take service and you                                 combine it with HTTP what have you got                                 Micro Service is all right so what's the                                 micro Service micro services are                                 basically really small HTTP api's so                                 we're going to deploy a function and                                 we're going to attach it to some kind of                                 web route and we're gonna call it so you                                 can think of a really similar pattern                                 would be if you've used any of the micro                                 frameworks like flask or Express to do a                                 little bit of lightweight routing on the                                 front and then essentially call a                                 callback for each one it's a really                                 similar pattern when you build with a                                 server less back-end so a micro service                                 it's going to be a small collection of                                 endpoints they're all modular so it's                                 very modern software architecture style                                 they're loosely coupled and we're                                 hearing a lot of words here that are                                 things that we aim for in today's                                 software architecture micro services are                                 all independently developed and deployed                                 there are lots of reasons given for why                                 a micro services architecture is                                 marvelous and if you wanted to hear a                                 micro services rhetoric you're in the                                 wrong talk my theory is that micro                                 services are so popular because                                 otherwise teams would have to talk to                                 each other whereas if you just built a                                 load of small systems everyone can be                                 responsible for their own system and we                                 don't really need to interact too much                                 and it is a great way to build                                 components and you can spin up a few of                                 each micro service it gives you a lot of                                 redundancy and some decentralization the                                 interfaces are well defined the key word                                 here is independent when you work with                                 service your work                                 on very small building blocks and they                                 are all independent from each other so                                 change one place won't affect the                                 changes in the other places slightly                                 more personal points about micro-service                                 design I've been an API expert for a                                 number of years and I am a in the                                 restful ish camp I am NOT in the restful                                 zealots camp and I'm not in the                                 anything-goes camp I am somewhere in the                                 middle I think with everything that you                                 do over HTTP status codes are important                                 they're a key part of the work that we                                 do headers are where the metadata should                                 go I don't want to see that in the body                                 we're going to use a combination of a                                 URL and a verb to access each end point                                 all of the end points need to be                                 stateless remember that these things are                                 going to scale horizontally so things                                 can be kind of happening at the same                                 time it's a distributed system each                                 piece needs to be able to operate kind                                 of autonomously it needs to have that                                 own independent if you're not doing SSL                                 you're doing it wrong excellent so to                                 illustrate these points and to kind of                                 give us a small real idea to think about                                 I have put together an example project                                 for you so this is a learner's plans                                 service it's a micro service where I can                                 just keep track of all my travel plans                                 the places that I'm going just I do this                                 kind of thing relatively often these                                 examples use hosted service platforms so                                 IBM cloud functions like I work there                                 they pay me and my hosting bills just                                 quite nice but it's a hosted version of                                 Apache open wisk                                 so you could host your own version of                                 this and do the same thing and I've got                                 four endpoints I've got the ability to                                 list all the plans the ability to get                                 one of the plans the ability to create a                                 plan and the ability to delete a point                                 and what we're going to do is we're                                 going to write functions that do each of                                 those things and then we're going to use                                 an API gateway to do the wiring with all                                 the routes                                 and stuff so we're gonna have functions                                 that do each thing and the API gateway                                 is in front for each of these hexagonal                                 micro-services there are a few things                                 that go into creating each endpoint so                                 to create the endpoint we need to write                                 the function and deploy the function and                                 set up the API gateway so that when the                                 web request comes in we know where it                                 should go we write the code and we also                                 deploy the code so I'm gonna try and                                 walk through all of those pieces are you                                 see them but this is this is where we're                                 aiming for this is the ingredients to                                 the thing that we're gonna cook up so                                 when you write a service function it                                 needs to be small it needs to be single                                 purpose right it's just gonna do one                                 thing you might create a few of them                                 that chain together we use sequences I                                 talked more about this yesterday but                                 they're gonna be small like I say there                                 are limits on resources limits on                                 execution time they're very very focused                                 your server list functions we call them                                 actions you'll hear me say the two words                                 interchangeably they run on an event so                                 it's a very event-driven model something                                 happens your function runs more of those                                 things happen more functions run right                                 so we're looking at this very kind of                                 like thing response when your function                                 runs it will receive a bunch of incoming                                 parameters that get passed into your                                 function now these might be things that                                 you configured when you deployed that                                 action so you can set stuff like API                                 keys and that kind of thing at deploy                                 time I just teach these things to my                                 Travis in an environment variable and                                 then when it gets deployed it's got it                                 specifically on IBM cloud and I think                                 there's an example of it in this talk                                 specifically an IBM cloud we have a way                                 of saying like oh hey I also have                                 Postgres on IBM cloud use my Postgres                                 these creds right so it has it has a way                                 of connecting to other services and                                 you'll also get event information a web                                 request came in                                 here have a bunch of data about the path                                 that was requested any incoming post or                                 get parameters the headers that came in                                 there's a load of data comes in with the                                 request it is a different kind of event                                 so if it's a message on a queue then                                 you'll get the message string and any                                 other metadata that is associated with                                 that if it's a database change then                                 you'll get information about which                                 database it was which collection it                                 happened on which record it was so                                 depending on what sort of event happened                                 it takes what kind of parameters that                                 you get there's an initiative going on                                 at the moment with the cloud native                                 computing foundation to try and                                 standardize some of those event data                                 payloads for different event types so                                 that they would be the same between the                                 various service platforms one big                                 problem we have in the sort of wider                                 service sphere which you don't all care                                 about because you'll all use Apache over                                 whiskas it's lovely                                 but if for any reason you were using any                                 other platforms or you needed to move                                 between platforms then having a bit more                                 consistency between the event formats                                 will help us alright code that can be a                                 little bit more portable than it is just                                 now okay                                 hold on to your hats I have a whole                                 screen of code for you but it's the only                                 whole screen of code here it is                                 JavaScript what I've got here is almost                                 the whole function with a little bit of                                 whitespace crime and some missing                                 brackets right                                 I already shrank my font size this is                                 small enough and I hope you can read it                                 what we've got here is I'm first of all                                 hopefully you will read enough                                 JavaScript to at least have some idea                                 what's going on here I'm including a                                 library hold that thought cuz I'm gonna                                 talk about dependencies in a minute                                 you declare a function this is what I                                 mean about the barrier to entry if you                                 know any developers that know how to                                 write a function they're already ready                                 to use service right I'm not saying that                                 they're necessarily going to do great                                 architecture with it but it opens the                                 door to loads of loads of people our                                 function accepts some parameters in my                                 parameters I've got a few things that                                 are set                                 on lines three and four I'm just doing a                                 little bit of setup on line three                                 there's an IBM cloud specific thing                                 where it knows how to grab the details                                 for my Postgres database on line four                                 I'm pulling the base URL so the X                                 forwarded URL header from that set of                                 variables so I've got those I'm gonna                                 need this because this is the how to how                                 to make a plant code I'm gonna post to                                 this endpoint and it's gonna do this on                                 line five I'm returning a promise when                                 you work with serverless javascript in                                 open wisk                                 you are going to return either an object                                 or if you have any a synchronous                                 operations in your code hitting of                                 hitting some kind of object storage                                 another api another network called a                                 database then you need to return a                                 promise so that open wisk knows you're                                 not done yet and it will finish it will                                 wait until all those promises are either                                 resolved or rejected before it suspends                                 the container so because i'm about to                                 talk to the database this is a promise                                 using the PG promise library that you                                 can see at the top and on lines eight                                 and nine there's an insert statement but                                 I'm guessing most of you can read I'm                                 inserting my data and then lines                                                                                                                 new record getting the ID of that                                 building the new URL so it's got some                                 probably horrible autoincrement on the                                 ID column and we insert and get it back                                 and then use that as part of our as part                                 as part of the work that we do the point                                 I'm trying to make by blinding you with                                                                                                       lines of code and you can all read it                                 even if this isn't your main programming                                 language it is a super simple and super                                 accessible technology you can all pick                                 up and play this afternoon in the coffee                                 break right it's very easy to get                                 started it's also very easy to build                                 something bigger quite quickly I have a                                 link to the github project if you want                                 to grab it and play                                 right so get ready to deploy we've                                 written the code that's the easy part                                 next we're going to deploy it to the                                 cloud so first of all we're going to set                                 up the packages in open wisk we have                                 this concept of a package the package                                 allows multiple actions to be grouped                                 together it's a little bit more than a                                 namespace you can also attach parameters                                 to that package so if you have a few                                 actions that need access to the same                                 parameters you can set them on the                                 package level and just reuse them and                                 this can be useful for turning debug                                 levels up and down and that kind of                                 thing that would be common across                                 everything so here's the command that                                 I'm going to run right at the bottom IBM                                 cloud is our command line name thing                                 like Heroku command or the AWS command                                 wisk is the plugin that does this stuff                                 and I'm going to create a package I                                 realize this word says update that is                                 because Open whisk is very forgiving and                                 optimistic so if you say update and it's                                 not there it will silently do create and                                 by using the word update this will work                                 when I run this next time so I'm working                                 on a script and iterating it and running                                 a few times update is the right word to                                 use cuz it'll always work so here I'm                                 creating a package called plans API and                                 now I can deploy the other thing I need                                 to do before I deploy is set up my                                 dependencies so I need to be able to                                 create to connect to Postgres this is an                                 IBM cloud specific thing we this isn't                                 generalized into open whisky yet so it                                 just sets up that the X creds command                                 parameter that you saw earlier                                 I'm just binding to my Postgres database                                 before we deploy you saw that I used the                                 PG promise library so I can't just                                 upload index touch is that you saw the                                 source for I need to also include that                                 extra dependency assuming that it's not                                 already available on open wisk                                 I think the Postgres library is and PG                                 promise isn't the same for all of your                                 dependencies                                 you need to create a zip file that                                 includes index dr. yes and it must be                                 named in XJS and it must export a                                 function called main and it must be at                                 the top level of your zip file and also                                 in the zip file you're going to include                                 node modules and this translates very                                 neatly to all the other programming                                 languages so it's going to be called                                 underscore underscore main dot pi and                                 have your virtual end it's going to be                                 called index dot PHP and have your                                 vendor folder and so on and so forth                                 so I'm doing a Java Script specific                                 example but you get the idea so you                                 create the zip file and then you deploy                                 the zip file so first of all I'm                                 changing to the directory and then I'm                                 zipping with - are recursively because I                                 need everything that's in node modules                                 and cue because I don't want a line of                                 output for everything that's in node                                 modules index dr. yes and node modules                                 oh now I can deploy excellent we've got                                 IBM cloud whisk action update update is                                 still create if we haven't run it before                                 but you're probably instantly going to                                 edit your index J yes and zip it again                                 and deploy it again so this command will                                 work every time because I'm deploying a                                 zip file I need this - - kind which says                                 you can't guess what language this is                                 because it's a zip file right so I'd                                 like you to use Jo I'd like to use node                                                                        if you upload index J s it will take a                                 stab at which version of JavaScript it                                 should use if you upload index dot PHP                                 or main depart it will just figure it                                 out if you'll notice it file it won't                                 guess it won't unzip it and guess so you                                 need the - that kind when you do that                                 the other switch that's here is - - web                                 Raw now this is immediately enabling                                 HTTP access to this action so it's                                 published you can ask it what its URL is                                 you can set web true and that enables                                 some gonna use inverted comments quite                                 intentionally here help her features                                 where it tries to                                 the incoming JSON or the incoming post                                 request all the query parameters and it                                 takes those variables and it puts them                                 straight into the params and the                                 incoming parameters that come into your                                 function and you can't distinguish where                                 they came from I am old enough to have                                 seen PHP applications that have this as                                 a feature extracting variables into your                                 global namespace so I don't really like                                 it                                 maybe I'm showing my history I really                                 like to use - - web Raw which you'll see                                 which you kind of saw hints of in the                                 previous example where it sets it sets                                 variables for these were the headers                                 this was the body this was the path of                                 this was the query string and I will                                 pass them into namespaced variables and                                 I know where they came from                                 so maybe I'm being old-fashioned with                                 this but maybe I'm not ok so the help of                                 stuff just look out for that it can be                                 really helpful I love it the examples                                 the initial like simple examples use it                                 and you may if you find that you get                                 into the long grass like web raw is                                 probably where you need to go for a more                                 serious application we've done the                                 function bit awesome now let's do the                                 API gateway bit so in order to set up                                 the API gateway to respond to our                                 request we need to say create an API and                                 then set up the route and tell it what                                 to do so I'm going to create the API and                                 I'm gonna say right I want slash plans                                 when do we get to slash plans I want you                                 to call that action that I just deployed                                 plans API slash get plans and the                                 response this response type HTTP means                                 that instead of just returning something                                 that will become the body you can return                                 header body status code so you can be a                                 bit more intentional about what you                                 return which I think is really important                                 for microservices and indeed all HTTP                                 things one thing you'll notice when I                                 call this in a minute is that it's not                                 very pretty it's like an auto-generated                                 URL thing you can set up custom domains                                 with the API gateway no problem                                 I just wasn't vain enough to do it in                                 this example I don't really care if the                                 URL doesn't look good I use this a lot                                 for I use this kind of thing a lot for                                 end points for like yeah                                 contact forms on websites web hooks                                 coming in from github or slack or                                 whatever so it doesn't usually matter                                 because it's not human readable but I'm                                 often asked this so yeah if you want a                                 custom domain you can do that you can                                 configure it here so whoo we've done it                                 serverless function we wrote the code we                                 deployed the function to the cloud then                                 we set at the API gateway to say when I                                 make this web request and we call this                                 thing that I just deployed so let's look                                 at what happens when we actually call                                 the thing here's a curl command other                                 really good HTTP clients are available                                 I'm a really big fan of curl I'm not                                 preaching it as it's the best thing to                                 use you probably have some HTTP client                                 built into your IDE that seems to be                                 increasingly fashionable and postman is                                 also excellent I have a new favorite                                 which is the npm module HTTP console                                 it's like curl but a bit nicer because                                 it remembers the root of the URL and you                                 can just and it can remember some                                 headers so it can always send the                                 application JSON header this is a                                 massive tangent okay so make a curl                                 request and this is the post request                                 that you saw the code for may occur                                 request the dash L is to follow the                                 location header because we post and it                                 creates some redirects this and then we                                 hit the get the dash H is sending this                                 content type header then there's a URL                                 there's a big long UUID in the middle of                                 my url so the had to cut it out to fit                                 it on and then there's the JSON data                                 that I'm sending with a dash D and then                                 you can send some JSON like this to curl                                 here's the response that comes back it's                                 an array of plans I did indeed go to                                 Turin in April the weather was much less                                 nice than it is in Berlin in June so you                                 can you can you can you can see that                                 example we've set that up where we make                                 the get request it routes us through I                                 always feel like security is a bit of an                                 afterthought maybe this is too late                                 already in in the talk but I want to                                 talk a bit about how we handle the                                 security and what's available in API                                 gateway the API gateway is the Express                                 part of the analogy of using the micro                                 services so this is where you can put                                 some rate limiting some security there's                                 a bunch of other features that go in                                 here depending which API gateway you're                                 using on IBM cloud you can use some of                                 our more multi-faceted things so this is                                 this is from the IBM cloud web interface                                 and it's just to show you the kind of                                 thing that you can do so one option is                                 to use an API key                                 just between machines give them both a                                 key and tell them to get on with it                                 that's quite nice you can also do ours                                 out of the box and choose the provider                                 maybe you don't all have IBM cloud                                 accounts but we have some github and                                 other sensible things here so there's a                                 bunch of things that you can do where                                 you'd have to duplicate the security                                 into every action the API gateway gives                                 you that and it's extendable so you can                                 define what it should do for security on                                 every request I touched on this earlier                                 the project's can get out of hand quite                                 quickly because you have these many                                 small functions these many small actions                                 so I'm always asked how I organize                                 things I'm not preaching this is the                                 right way to do it                                 here is how I have mine organized and                                 again I'll share that github link with                                 you so that you can dig around and see                                 how all my scripts work and stuff                                 because it might be that I'm skating                                 over something that occurs to you later                                 so I've got deployed on Sh and that runs                                 all of those IBM cloud whisk commands                                 and then I have a directory per action                                 you'll notice they also a JavaScript                                 directory because I thought I might have                                 to talk about microservices amor like I                                 write more than one programming language                                 in fact Java scripts not my favorite and                                 a JavaScript conference accepted it                                 first you know how these things work so                                 it would be there's an extra level in my                                 example but don't be put off by that I                                 have a folder per action and that has at                                 the top level index is and if it has                                 dependencies the package files are here                                 and also node modules node modules not                                 under source control but it's just here                                 when you create the zip file it appears                                 here and again that shouldn't be in your                                 source control it's a build artifact so                                 I tend to organize like this and so then                                 my deploy script CDs into each directory                                 creates the zip file for this action                                 with index at the top level and node                                 modules and then pushes it to cloud and                                 I can iterate over that I've also seen                                 but I don't have cool scripts that just                                 that do quite a nice when did we last                                 deploy which of these files have changed                                 okay we're selectively building and                                 that's kind of your call I think on what                                 makes the most sense for your                                 application                                 I like to redeploy everything because I                                 feel like that should always be safe but                                 I'm a developer advocate so I'm not                                 running high throughput important                                 business critical applications so your                                 mileage may well vary you may want to be                                 quite careful about when you redeploy                                 things or with the API gateway you can                                 do things like redeploy deploy a new                                 action with a new name and then reroute                                 the route to the new action because the                                 actions can take a few seconds to deploy                                 so that's something that you might want                                 to look at and the API gateway gives you                                 that flexibility to switch between                                 action versions can be useful for                                 deployment I'm using Travis you                                 definitely can use IBM cloud offerings                                 that I should probably preach about                                 reusing Travis so literally I just link                                 Travis story to a script                                 it has environment variables that it                                 needs for API keys and that kind of                                 thing                                 it downloads the advantage of using the                                 IBM cloud stuff is has already set up                                 and your it's got the command-line                                 tooling and you're already logged in but                                 that's ok it downloads those                                 command-line tools and literally runs                                 the commands that you've seen in the                                 shell script and what I like about that                                 is it means that when I'm testing                                 deploying to usually a local running                                 open whiskey example I can just use the                                 same scripts super nice I feel like I've                                 said all of those things so deployment I                                 feel like pretty familiar and I wouldn't                                 say that we're using any particularly                                 different development processes either                                 I'm using serverless in some of my                                 internal tools I use with my team and we                                 didn't change a lot like I would say us                                 are predominantly service projects run                                 the same as are predominantly web                                 traditional projects with maybe a little                                 bit more confusion about how to test                                 things but that's ok like I think it's                                 those tools are improving and you might                                 experience so far as that users have                                 very little trouble adapting to this                                 kind of approach particularly when you                                 have that well-defined                                 endpoints model that they're building                                 for it's a really nice on ramp                                 I didn't choose service for all of our                                 internal tools that now use it                                 it was wished upon me at the beginning                                 and I was a little bit like I think                                 you've chosen this because of the hype                                 around the tool and I'm not sure I                                 approve                                 yeah well I'm happy with it now it's                                 been great to build it I've really                                 enjoyed it and it's ideal when you've                                 got a lot of small parts I think it                                 really helps us to focus on what we do                                 and it helps also that I think we picked                                 accidentally picked a really good                                 problem to start with we built part of                                 our stack overflow tooling have like an                                 extra set of tooling to help us keep                                 track of everybody who needs input it's                                 a problem that we understand really well                                 that the tool is for us we specified it                                 as well as                                 built it and it's very small like this                                 stackoverflow dashboard brings data and                                 brings new questions in from Stack                                 Overflow and sticks them on a list and                                 lets us add metadata that says we're not                                 going to answer this                                 Bob's working on it Sara's asked                                 engineering about it so you know at                                 Lucy's gonna fix it whatever we can add                                 all of that data to and just keep track                                 of everything because otherwise we're we                                 were duplicating work and also letting                                 things fall through you could all                                 whiteboard this on something the size                                 within a plate and that makes it a                                 really good fit for service because it's                                 well bounded my micro-service example                                 today was so small it was in danger of                                 being an entity service and perhaps we                                 could all be purist about that but I                                 think again it shows you that something                                 small and perhaps something you already                                 know how to build is a really good                                 starting point because you you know what                                 you're aiming for you know how this                                 thing should work it's the domain is                                 already well established we see quite a                                 lot of people also using server lists to                                 very quickly prototype something of                                 course it goes into production                                 like that's how that works but usually                                 they're happy with it it enables you to                                 try a feature without needing to get a                                 huge amount of all of the pre work done                                 to get the platform available and scaled                                 up for a thing it turns out nobody uses                                 yeah you can just try it if we use it                                 quite often I see the big companies then                                 rebuild it on to their usual tech stack                                 but it lets them just dip a finger in                                 and get some stats on what kind of thing                                 might happen here                                 paired with the API gateway for micro                                 services in particular I think                                 serverless is a great a great fit I've                                 enjoyed working with it like I say I was                                 a little bit skeptical at first cuz I                                 thought I was a lot of buzz around it                                 and now feel like it solves a real                                 problem that these tools will be things                                 that we see spreading through the                                 industry opening the door to server-side                                 development for groups                                 I like to call them geeks of other                                 disciplines allowing a little bit of                                 server-side functionality to the                                 front-end devs the mobile dance a little                                 bit of compute available for data                                 scientists needing to process in batches                                 right we're opening the door to a bunch                                 of people who don't know how to set up                                 and run a server kind of think maybe at                                 the Apache roadshow you are not the                                 target market because you probably all                                 know how to set up and run a server and                                 you're wondering why you need this but I                                 see this opening the door to all kinds                                 of people and having it available on the                                 hosted platforms is kind of Awesome also                                 API great gateway is great with all the                                 routing and the extra functionality I                                 love it micro services in general those                                 of you who have been in the industry a                                 while will be thinking you've seen this                                 before and service-oriented architecture                                 is indeed alive and well we're we're                                 exposing endpoints giving individual                                 micro services responsibility for                                 accessing particular data stores having                                 reusable components I talked quite a lot                                 yesterday about sequences which is a                                 construct in open wisk where the output                                 of one action becomes the input of the                                 next action and each action expects the                                 format of the previous actions output                                 and you chain them all together which                                 means that you can reuse things and                                 there's a bunch already built in that                                 you can reuse so if you need to work                                 with WebSockets or talk to CouchDB                                 another favorite Apache project or send                                 a slack or receive a web hook from                                 github we have some built in stuff                                 because we're all writing that code over                                 and over so is there also this open                                 source so if you would like an                                 integration with your platform then you                                 can contribute that into the project and                                 they are adorable                                 like approachable friendly pragmatic                                 helpful really technical just a really                                 nice community there's life on the                                 mailing list of course we're open and                                 we're in Apache project we also have a                                 lively slack channel and that's where                                 most of the initial questions come in                                 and I've had very courteous responses on                                 the github project even when I was                                 really new to the project                                 I think is a real testament to how                                 active this project is and what a nice                                 place it is to hang out so ya                                 microservices I think cool by itself but                                 serverless is a really fun way to build                                 it and that's why I wanted to bring                                 those two things together and kind of                                 present them together in this talk so                                 I'm gonna wrap up I have a few minutes                                 so if you're thinking of a question then                                 think of it now you can get the code for                                 all of this on github let me know if you                                 have comments or questions you should                                 totally check out the Apache open wisk                                 project you should all be converts now                                 and I hope to see you active in the                                 project or asking questions on the slack                                 channel if you want to just have a quick                                 play with the server side of things and                                 IBM cloud functions it's on our free                                 tier so just sign up and give it a play                                 you don't need to put your credit card                                 in or anything I write a lot about this                                 stuff so you can find me there and join                                 net there's contact details on there as                                 well so if you have questions you want                                 to get in touch after right this second                                 then you should always feel welcome to                                 do that and with that I'll say thanks                                 for your attention                                 [Applause]                                 so if anybody has a question let me hand                                 you the microphone so it makes it to the                                 recording for a second there I thought                                 this was gonna be really easy but no                                 sounds like an ask me a question go for                                 it hi hi so we talked a little yesterday                                 and you promised yeah to to show the                                 let's say the how action can be                                 connected to each other                                 mm-hmm in this talk and I think it's                                 still focused on one single action right                                 okay                                 and maybe this API Gator in front in                                 case you have many but if inside one                                 action I need to call another one how it                                 is it is it's portable this is where we                                 find out I didn't connect my entire                                 machine to the internet hmm say that                                 again                                 the password is all caps boss back here                                 we go oh come on yeah I can show you an                                 example let me take another question and                                 try and look this up at the same time                                 because I can put it on the projector if                                 I can find it                                 so if you didn't use IBM cloud stack and                                 all it was called like which which other                                 platforms are like what are your options                                 like to install open website where would                                 you install open risk okay to run such                                 code yes so your options are installed                                 open risk and you're going to use that                                 for your dev platform probably whatever                                 if you want to use open Wisc IBM cloud I                                 think are still the only you can get it                                 today posted option but Red Hat and                                 Adobe are both on their way so you're                                 gonna get more hosted options by hosted                                 by other people like managed options for                                 open wisk really soon                                 and that's being cool because there's                                 been a lot of like cross-pollination                                 about how that runs and I think it's                                 improved it for those clients who run it                                 themselves for other server list                                 platforms there's lots of options Amazon                                 have one as you have one Oracle have one                                 Google have one and the server list part                                 and and the API gateways pretty similar                                 looks very similar so you should be able                                 to follow this pattern whatever                                 bhishan do you want to speak to that                                 Adobe some I'm from Adobe I'm involved                                 in open risk as an incubation mentor as                                 well                                 Adobe we have an an offering in the                                 pipeline called Adobe are your run time                                 which is as might be in beta or coming                                 soon in beta I'm not sure if we will                                 offer hosting of you know any random                                 code for us the idea is more to use it                                 as glue between our different offerings                                 Creative Cloud and and the enterprise                                 stuff but it's I mean for us it's very                                 important project as well okay I'm going                                 to answer this question now oh hold on                                 I'm gonna answer this question now so                                 it's gonna be an async action                                 this is JavaScript specifically but they                                 all look pretty similar what you do is                                 you use that oh I haven't got line                                 numbers yeah you this Oh W that open                                 whisk library is available on open whisk                                 already as a dependency or you can                                 obviously like download it play with it                                 locally so what you do is you can do                                 actions don't invoke and give it a name                                 this is iterating over an array and                                 making a whole collection                                 and then promise if eyeing all of them                                 so this is fan-out                                 we create a list and then run all of                                 them and you do it like this and you can                                 tweet at me if you need more resources                                 because we do have quite a few Doc's on                                 this so basically you see open Wisc from                                 inside the function yeah and you can use                                  it as from outside and in that case that                                  would bypass the API gateway right it                                  calls directly the action yes and if the                                  action returns a promise then you see                                  the promise and then you wait for the                                  promise I only you see it I think the                                  action with the promise would just do                                  its thing then you would see it and the                                  response we either object or promise                                  then after waiting for the promise will                                  be a promise from you for you there and                                  then you wait for that okay yes cool                                  yeah                                  you want to set the mic and say that                                  there's also something called conductor                                  actions which is kind of state machine                                  action which can delegate to others and                                  it's it's used as a thing it's used now                                  as the basis for the IBM composer which                                  might be still experimental another way                                  so as is if you use case it's as simple                                  as this you just do it like this if it's                                  a bit more chat with us in channel there                                  are some tools but I would describe them                                  as evolving alright can we get a big                                  round of applause for Lorna Jane
YouTube URL: https://www.youtube.com/watch?v=5l5gjyKDJmg


