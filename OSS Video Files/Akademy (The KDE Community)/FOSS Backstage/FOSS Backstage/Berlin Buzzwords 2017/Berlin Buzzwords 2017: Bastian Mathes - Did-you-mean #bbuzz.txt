Title: Berlin Buzzwords 2017: Bastian Mathes - Did-you-mean #bbuzz
Publication date: 2017-06-15
Playlist: Berlin Buzzwords 2017
Description: 
	This talk gives an introduction to an often used but little thought about feature of fulltext search systems: did-you-mean (aka spellcheck). Whenever you misspell a query this useful feature kicks in and and will show you the query you really meant - or won't it?

We will highlight potential requirements to a did-you-mean feature and identify their difficulties. We will discuss the implementations available in Solr and Elasticsearch. But there are also alternative algorithms and data structures used in real world search projects which we will show. What is the difference between all these approaches and which one should you use when?

Read more:
https://2017.berlinbuzzwords.de/17/session/did-you-mean

About Bastian Mathes:
https://2017.berlinbuzzwords.de/users/bastian-mathes

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	                              and yeah welcome everybody so this talk                               is about did you mean or spells like a                               feature in or an often overlooked                               feature in such systems it's not about                               containerized anything so if you have a                               printed program that has changed so I                               hope not half of you are leaving now but                               I just wanted to save mention it before                               so um yeah what I what do I want to show                                in the next                                                            you an introduction and what did you                                mean or spell check is it such systems I                                wanted to show some implementation                                approaches yeah I wrote nothing fancy so                                there's not anything machine learning or                                anything in there it's a basic data                                structures you can use existing                                implementations you can implement them                                yourself I did implement most of these                                myself that I will show you and yeah                                I'll give a short summary of what we've                                learned hopefully then and it's not                                about me slide so I'm working for                                rationed in Bihar in Dusseldorf we are                                specialized in such projects we are                                almost                                                                the price surge projects add product                                exclusively me myself since                                         company since                                                          a lot of such engine technology I listed                                them here of course the open source one                                they really and get get to speed on the                                last two or three years at least for our                                duplicate clients and some commercial                                ones and there are still some technology                                inside the company that my colleagues                                have used but I never saw and I left out                                something that vanished so in the last                                what is it                                                          technology vanishing so yeah let's start                                and with what is did you mean or spell                                check in search you probably know it and                                I took unfortunately a German example                                has if you write some search term or                                maybe some name like here when I did the                                screenshot she was there just newly                                reelected                                after that lunch so she has a long name                                you can misspell it and Google gives you                                the correct spelling of it and yeah you                                probably know that and so user                                misspelled there are no a few results                                they are almost never know results at                                Google but there are no results in your                                internet search showing your shop search                                or something like this and did you mean                                will suggest the most likely correction                                which we will see more clearly in in the                                next slides well that's basically it but                                still if you if you set up a search                                system you have some let's say usability                                decisions to make on how to implement                                and did you mean for example so let's                                let's take it a given we will get back                                to that in there in the rest of the talk                                that there are some that you mean module                                that delivers the correction and also                                preferably an estimated number of                                results for this correction because you                                have to to assess if this is a good                                correction or how good is the collection                                but then you still have to decide when                                do I want to show this did you mean at                                all like if I have a thousand hits and                                there's a there's a correction that has                                like more hits do I show it maybe it I                                don't show it because it's already in a                                sense and when maybe to redirect                                directly to the M to the correction that                                Google is doing this very often if you                                have very few hits and you have a                                correction then Google is redirecting                                you to the to the search result for the                                correction and just gives you a link                                back to your original query and another                                possibility is maybe to search for both                                here so Google did that some months ago                                and then they suddenly stopped doing                                this so they are also experimenting in                                this area and showing different things                                to different users I haven't seen it                                anymore but you could also say if you                                are like and you have a search result                                and you have a correction that maybe has                                a similar amount of results maybe you                                just search for both this can be correct                                or incorrect and it's it's hard to                                decide what to do in your project and                                either you can                                 something like a be testing with the                                 users if it's internet and you don't                                 monetize it I don't know if you always                                 find a good way to measure what's better                                 sometimes it's just a matter of K a                                 taste of the personal charge and they                                 tell you I like that more than this one                                 and then you implement like this and                                 this just as a background this is                                 something you have to decide in your                                 project if you if you set up your search                                 for your website for your website or for                                 your internet this what we decide to do                                 in in the next slides I want to look                                 more at this module and how it delivers                                 corrections to you so what's what's the                                 requirement for for such additional                                 model and module history so the                                 requirement is to find a similar query                                 with more results preferably this is                                 already discussed below so first what                                 what does sumela mean and I have to cut                                 this a bit out of this table due to the                                 time so there are distance functions                                 between strings you you can have some                                 multiple of them leaves time is like the                                 most common used one you can look it up                                 at Wikipedia there's a good article                                 about it and so you you have two strings                                 and you can come up with a number on how                                 far away the strings are from each other                                 and that's basically what you sorry what                                 you need and to to say this is somehow                                 similar correction so now and if you can                                 come up with more than one possible                                 correction for you use a query and then                                 you somehow have to rank them or you                                 have to to weight them and there are                                 there may be even more factors that you                                 you can come up with but the most                                 important ones from from my perspective                                 are the similarity we talked here before                                 so there may be one correction is more                                 similar than other correction but also                                 the frequency or the occurrence or the                                 number of results that you expect from                                 your correction so a correction that                                 delivers a million results may be better                                 than a corrector to live a thousand                                 results and just to weight them you you                                 may have a more similar                                 correction with less results and just to                                 make the decisions - so what's the basis                                 for for all what I want to show next as                                 possible implementations and it's a                                 dictionary of valid clear returns so                                 somehow you you have a list of queries                                 that do make sense and you want to get                                 from this list a similar query to your                                 entered user query and they may be one                                 word or more but                                                         one word but you want to give the                                    that enter more than one word maybe it's                                 only                                                                  give the small amount that enter more                                 than one word also a good correction of                                 course so and this list maybe one or                                 more words and it should also include                                 some kind of frequency so how often does                                 this term cure and it possibly or                                 normally it has also the language                                 because this is totally separated by                                 language and and you may have more                                 separations like the search area you                                 have multiple search interfaces or areas                                 or tops or whatever and you only want to                                 show Corrections from your area and the                                 main goal is to never redirect the user                                 to is your result page because this is                                 just broken and error and you are in                                 your search you maybe have ACL so access                                 control list if you're doing secure                                 search with which is a common case in an                                 internet search                                 then you should our idea is you should                                 include this into your dick immune to                                 because your correction may be from                                 results that the user is allowed to see                                 so that's not helping so you you have to                                 UM reflect the permissions also in                                 something like digi movie so where to                                 get this dictionary from and single word                                 for quite easy you have them in the                                 index you normally already have the                                 tokenize that's the the main and                                 technique in a search index and and                                 getting multiple terms is much more                                 difficult you could take like                                 co-occurrence in the index but your data                                 and your amount of data explodes so and                                 to get meaningful it multiple terms is                                 much more difficult so often you come up                                 with not having a good amount of                                 multiple terms into your in your                                 dictionary and and then you have to                                 think about splitting up long long                                 series and check or get corrections for                                 only parts of these clothes and possibly                                 by word and this is a the difficulty                                 years and if you have a good correction                                 for parts of the clue you don't know if                                 the whole query still gives the result                                 at all and you either have to test this                                 or do a query but this gives you a mock                                 the reload and all you have to accept                                 that you may redirect the user to the                                 zero results again and of course if you                                 split up your user query you would like                                 to test if the whole query sauce so that                                 like half of five word query words one                                 two four one two three one two two only                                 one and two two five and so on you get a                                 lot of lookups to your determine or                                 spell check and it's a matter of the                                 implementation if it's a memory if it's                                 in the database if this is acceptable                                 yeah that's that's basically what's                                 what's around it and I want to have a                                 quick walk through for possible                                 implementations on how to look up                                 Corrections and the one I caught naive                                 is you have a list of terms knowledge                                 and so in my examples on German but it's                                 just a bag of words so you have a list                                 of terms small s and you have a user                                 query and then you run through the list                                 of terms and calculate the distance with                                 some metric you you define before and if                                 you find                                 a correction that's within some metric                                 some distance limit so this is                                 acceptable for you you return it if you                                 if you are able to sort this by by                                 frequency of our number of estimated                                 results then your first results your                                 best one if not you have to decide how                                 long you will run through this list so                                 maybe get the first result but then is                                 that the best or get the first five                                 possible or acceptable results that we                                 turn the best one sub directives and the                                 advantage of this method is that it can                                 sometimes be done in place so you                                 already have this data structure like if                                 you think about a search engine you have                                 a list of terms because that's exactly                                 what your index is about you have a term                                 vector or term iterator you can walk                                 through this list of terms and it's very                                 easy to implement without additional and                                 disk space and it's obvious that this                                 doesn't scale very well so if this list                                 get off of your existing terms gets very                                 long and it will take a lot of time to                                 walk through it and this this comparison                                 or this this distance calculation                                 normally is this quadratic effort so um                                 yeah it's a lot of effort if your index                                 is large and one thing that's also                                 implemented in in Latino and solar and                                 domestic search and is getting down so                                 it's it's more or less an improvement of                                 the first one and getting down this time                                 to compare your user query to the list                                 of possible queries that you have I am                                 producing an automation be up front so                                 for your clear you produce this is a NFS                                 or non-deterministic one you have to                                 have a deterministic one in the end                                 please also you have to look it up at                                 Wikipedia so if for that time it gets                                 very large so this this one is now quite                                 and quite small but if you am expanded                                 to a deterministic one it gets very                                 large and you have to do this before and                                 we take some memory per user query but                                 then you can run through this listent                                 and accept your words in linear time so                                 it gets faster it's it's really                                 implemented like in this direct spell                                 checker and so now this time suggested                                 main elasticsearch it works in place and                                 of course in the scene index the terms                                 are not sorted by by number of documents                                 so you have to decide and want to stop                                 and I think the default is whatever I                                 said before to look for at most five                                 acceptable Corrections and then take the                                 best one but you can if you implement it                                 yourself you can come up with other                                 heuristics on how to do this again this                                 can be done in place but you have a                                 quite large data structure for every                                 query that you have to build up front                                 this is one possibility another very                                 interesting data structure for doing                                 that you mean M is a decay to evoke odd                                 color tree and again if you look it up                                 there's some good blog posts about it                                 and the disadvantage is now you're                                 building an additional data structure so                                 you have an index m and with a list of                                 words and you start to build another                                 data structure for your de chimie and                                 then you have to see how large is this                                 data structure how many terms especially                                 if you think about and putting multiple                                 terms with occurrence like every three                                 in every two terms that occur in the                                 index next to each other in this                                 dictionary it gets very large and then                                 it maybe doesn't fit into memory anymore                                 and then it gets slow to to query it and                                 so on and so I've implemented that in                                 memory notes in a relational database                                 and in memory - are you fine of course                                 it's fast but in a relational database                                 there's a lot of yeah you have to have                                 some and cancer conditions where you say                                 okay now I search for                                                  and then I stop and and you also have a                                 periodic effort to recreate this data                                 structure from your index to keep it                                 up-to-date so and how does it work and                                 you you have again ideally the most                                 common word term in the in the root and                                 then and you have the distance                                 on the next term in the and yet and so                                 everything on this to edge from house                                 has a distance of two two house and so                                 on and then you can can use this                                 triangle inequality so and every stop it                                 between as longer than the direct the                                 direct distance would say and to cut out                                 a lot of a lot of notes that you don't                                 have to expect so you you can just                                 narrow down what you have to expect in                                 your in your search tree and it works                                 quite well in memory and is quite                                 elegant and what comes out of it is a                                 direct and hit with a given limit in in                                 distance so that's best a nice one and                                 another one that's very often used and                                 it's an Engram dictionary so M Engram                                 here means you split your words and also                                 your fairly later into parts with one                                 two so Unni graham Begum tricking one                                 two or three letters and then you index                                 them in a basically in a search engine                                 or in a hash map if you do it in memory                                 and I have an example on the next slide                                 sonnet and they're the advantages                                 compared to the substrate it's a it's                                 again a specialized data structure just                                 for it you mean but the advantage of the                                 search tree is that there is sufficient                                 infrastructure for search in excess here                                 we have a lot of search engines and also                                 for in memory and everything is there                                 and it's also easy if you do a query                                 against the scene index for example it's                                 also easy to add additional filter                                 criteria to M to your search in your                                 document structure like you can can have                                 access control lists in the structure                                 and filter your possibility means by                                 this and the disadvantage is that this                                 mm distance that that comes out so what                                 what comes out is I have a correction                                 that where the query and the possible                                 collectors share three and                                 three three grams or something like this                                 this is not very intuitive so you                                 normally post check whether with a                                 distance function like Levenstein                                 afterwards and then it may be that you                                 don't have enough result in your first                                                                                                       the next                                                              complicated to implement basically this                                 this index based by checkers on our                                 works like this but you can also                                 implement it                                 freshly on your own with the Lucene                                 index for example and that's what I what                                 I have shown here um so you're basically                                 having as an index your documents are                                 the words or the queries they could be                                 multi-value a multi-term multi-word                                 sorry I don't have it here and you you                                 save the length of the word here and the                                 frequency so half the Cure and then I I                                 took Unni grams so letters in one field                                 and also a search area here too to                                 filter by an additional criteria and                                 then you can formulate the same theory                                 that's a bit more complicated so for                                 example you want to have your correction                                 for Laos again at most later studies                                 tubes one and in your search area a and                                 so you can formulate a query that s of                                 course one criteria search every a and                                 your length you you know how much it can                                 differ yeah and then you see listen has                                 a lot of good query and implemented                                 queries you can say I want to have four                                 matches out of these five matches for                                 example this is this many more match                                 what you can set how do you you can do                                 this positionally queries where you say                                 and I want to have the term air in in                                 the field unit arms and but only from                                 position                                                             calculate and what's possible for for an                                 acceptable correction but you have to                                 post check them with whether lives it's                                 not directly                                 Liam suggested that's better                                 understandable for people and then load                                 results and if you do not uni grams but                                 B grams or                                                             bit faster because you have more terms                                 in this field and but your post checks                                 are more                                 and they are multiple checks because the                                 results get more fuzzy so but yeah it is                                 well being able to implement by your own                                 so just one slide for the summary and so                                 algorithms are there and they are                                 implemented especially in the normal                                 source so much but it's important to be                                 able to customize them you have to see                                 where where do I get my data from where                                 do we get multi-word terms from can I do                                 this decisions that I mentioned before                                 and yeah these these usability decisions                                 in the beginning they depend on the                                 project and taste and and so on and                                 again also here data is the key so where                                 do you get valid searches from                                 multi-term searches from good things                                 search locks so searches that users have                                 done and that deliver results if you are                                 Google you can maybe just rely on that                                 otherwise you have to come up with other                                 sources co-occurrence in the index may                                 be something there's a very suggestion                                 elastic search that's exactly that and                                 but it takes a lot of space and you                                 could imagine to do part of speech                                 tagging and then extract some patterns                                 like article adjective adjective now and                                 subject this way okay this is the term                                 that's that's useful but it's expensive                                 to in indexing it will slow down your                                 indexing of full text for example and or                                 you can look around in your project                                 there are some cheaper sources like if                                 you index people you have an address                                 book you can put first name last name                                 into your bit you mean dictionary                                 because you can easily get them from                                 your LDAP or something like this you can                                 collect your sources of senseful queries                                 yeah that's basically all for an                                 introduction                                 if there are any questions ok so thanks                                 mark                                 ok                                 so if you have some question you can now                                 he has commitment you have some                                 questions understand okay the question                                 if you do an index based solution have                                 you ever tried to to make that your only                                 index and basically always just do did                                 you mean and your normal search result                                 would be the zero-distance case and                                 justice in one indexing and I mean this                                 this in place thing like running through                                 the list or with an ultimatum that's                                 basically there you have just one index                                 I was always wondering if you killed for                                 the Engram case and then only search by                                 Ingram for your nominal I've never done                                 that so doing the regular search in this                                 end web dictionary I haven't done it no                                 other question mmm one of the last                                 slides you showed it your search free on                                 the Ingram index so which query part I                                 have you been using so which I don't                                 know the syntax or curious and I did it                                 programmatically with Allison in it so                                 not it's not solid it's not that is                                 syntax but it's programmatically built                                 and carry so they're just using the                                 little C in Java API okay you can do it                                 with that and then this is little                                 smallest it's not exactly but it's kind                                 of the format that you give if you print                                 this big up career like with system out                                 here so if if you print it together you                                 get a syntax that you can add any                                 anywhere I think and but you get a                                 impression but this is only pewter code                                 it's not exactly what you get if you                                 printed out but the capabilities are                                 there in the scene yeah okay thank you                                 okay thank you                                 [Applause]
YouTube URL: https://www.youtube.com/watch?v=aYg506sqHRs


