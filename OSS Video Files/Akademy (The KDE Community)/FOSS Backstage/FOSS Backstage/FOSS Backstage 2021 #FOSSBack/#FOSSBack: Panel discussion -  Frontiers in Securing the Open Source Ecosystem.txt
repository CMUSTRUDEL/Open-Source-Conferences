Title: #FOSSBack: Panel discussion -  Frontiers in Securing the Open Source Ecosystem
Publication date: 2021-03-01
Playlist: FOSS Backstage 2021 #FOSSBack
Description: 
	Panel discussion with: Jennifer Fernick, Rao Lakkakula, Christopher Robinson and Kay Williams 

Slides: http://bit.ly/openssf_fossback21

Open source software provides a tremendous public good - but proportional to its’ social and technical importance, the open source ecosystem also presents an enticing attack surface for adversaries. The combination of deobfuscated and public-facing source code, distributed community-driven development, a lack of consistently-deployed security reviews and tooling, and the prominence of many key FOSS projects as the core infrastructure of enterprises around the world and of the internet itself means that the unique model that has made open source software projects and development lifecycles so impactful is also that which has historically made them difficult to secure. In this presentation, we discuss the present challenges and opportunities for securing open source projects, and discuss a roadmap to a future where we can all help to secure open source software at massive scale.


We will explore challenges and opportunities in securing the open source software ecosystem against a range of threat actors through a variety of interventions at all phases of the software development lifecycle. Part 1 of this presentation will give a brief overview of the mission, priorities, and current work within the Open Source Security Foundation (openssf.org), including an end-to-end threat model of the open source ecosystem. Part 2, which will comprise the majority of the presentation, will be a panel discussion amongst open source maintainers, tool developers, and security researchers regarding some of the most pressing issues in the security of open source software.


###########

Follow us on Social Media and join the Community!

Twitter: https://twitter.com/Fossbckstg
LinkedIn: https://www.linkedin.com/groups/8653059/​

FOSS Backstage is an event by Plain Schwarz – https://plainschwarz.com
Captions: 
	                              okay                               yeah good morning so we'll start off uh                               this morning i'd love to                               share with you some information about                               the open source security foundation                               the open source security foundation got                               started in                               uh august of last year and the reasons                               for                                our creating this foundation is that we                                believe that                                open source software is a common good um                                it                                powers the world's most uh critical                                infrastructure today                                um there are security issues in open                                source software                                and um we believe that you know creating                                a secure                                ecosystem end to end including the                                supply chain all the way from                                open source components to you know                                services that                                get delivered on cloud operating systems                                requires all of us to participate and                                no one organization can do it alone                                so for that reason we got together with                                a bunch of                                other companies so we've got um i i'm                                from microsoft but                                so we've got microsoft ibm um google                                github uh and you know and a bunch more                                and                                red hat and some others that um                                you know from the folks that are on the                                call today we'll tell you more when we                                introduce ourselves                                so um so it's quite a group that's come                                together                                the uh the mission for the foundation is                                to                                inspire enable the community to come                                together to                                secure the open source that that we all                                depend on                                uh in our first few months we've been                                really growing a bunch we started off                                with                                six member organizations or maybe it was                                eight and                                um now we are you know up to                                   we have                                                          um and you know we're getting i'll tell                                you some more about some                                some cool things that we're doing that                                are getting some good traction                                in the open source security foundation                                we do have a number of working groups                                and they work on different aspects of                                security                                so one deals with identifying security                                threats we've got                                a group that's working on um creating                                uh uh you know the best security tools                                and making them available to everyone                                uh we've got a group work focusing on                                best practices and vulnerability                                vulnerabilities another we're looking at                                how we                                ensure how we allow                                identities in the open source ecosystem                                to attest themselves                                um and then we've got another group that                                is looking at                                uh how we go about securing providing                                hands-on help for securing critical                                projects                                so that's that's you know some of the                                background                                for the organization there are i wanted                                to share with you all                                some resources that are available to the                                community today                                that we provide through the open source                                security foundation                                and those include                                an edx course which is a                                a training course that is free for                                anyone to take                                and it includes three sessions                                related to that and there's more                                information                                on edx and you know there are links to                                it in this slide so we'll be sharing                                that later                                it focuses on practical steps that                                anyone can do                                even with limited resources                                another thing another resource that we                                 have available is our best practices                                 badge                                 so what this is is it allows                                 open source software maintainers to go                                 through                                 a set of best practices and indicate for                                 each one of those                                 if they're following those some of those                                 best practices might include things like                                 having two reviewers using multi-factor                                 authentication for code commits                                 setting up a ci cd system for ongoing                                 testing                                 things like that and at the end of going                                 through those series of questions then                                 there's a badge                                 that that the project is able to qualify                                 for anything from um uh i forget what                                 the starting level is                                 um up to up to gold and silver                                 so um and then that badge is something                                 that people can display on their website                                 and also it's a great place where um                                 developers can go when they're                                 trying to look at maybe projects that                                 they're                                 intending to use and incorporate in                                 their own project to understand the                                 security                                 profile of those projects                                 another resource that we have is the                                 security scorecard                                 scorecard and this is something that                                 developers can run against their own                                 projects or against                                 other projects and get a quick look at                                 this um this security profile for that                                 project and                                 the badge currently includes information                                 like                                 number of contributors um if there are                                 ci tests being run against it                                 if there are um uh                                 uh you know if there's a security policy                                 file                                 et cetera so um and that's something                                 that                                 you can learn more about um from the                                 open ssf                                 github location just a couple more                                 one is we do partner with openssf does                                 partner with a number of other security                                 related organizations                                 and one of those is owasp and                                 an interesting project there that we're                                 working on                                 jointly working on is the zap project                                 and this is something that developers                                 who are creating                                 web applications can use to                                 so they connect through this um they can                                 connect to the zap proxy and then                                 have their you know a server                                 um kind of uh work against their                                 application to identify security threats                                 so                                 um that's a great project and then the                                 last one to share with you is another                                 one that we're doing                                 in cooperation with owasp and um there                                 they have a security knowledge framework                                 and                                 so this is a place where developers can                                 go to to get code                                 examples for how to to                                 do certain tasks and implement them in a                                 secure way                                 and also checklists for developing                                 projects                                 in a secure way and knowledge base for                                 looking up                                 additional information so those are a                                 few of the resources that are currently                                 available                                 we are encouraging people to get                                 involved it's a great community it's an                                 open and friendly community                                 and um we do have again from the slide                                 if you or if you go to the openssf.org                                 website you can                                 you can find out more we've got a github                                 mailing list                                 slack channel um blogs and and all those                                 great things                                 all right so that's that's it about the                                 open ssf back to you jennifer                                 great thank you kay um and for those                                 that were unable to see the slides                                 because                                 we might have had some technical                                 difficulties there you can go to                                 openssf.org                                 and we will post the slides from today's                                 presentation for everyone and there's a                                 bunch of links to resources in there as                                 well um so for the remainder of the time                                 that we have with you we wanted to do a                                 panel where we were going to talk about                                 many interesting things as it relates to                                 open source and security                                 so we want to talk about threat modeling                                 we want to talk about historical                                 examples where things have gone terribly                                 wrong                                 or sometimes right but usually wrong we                                 want to talk about the different ways                                 of developers and maintainers um the                                 things they can do to make their                                 projects more secure                                 we're going to talk a little bit about                                 coordinated disclosure because it's kind                                 of mysterious                                 and some other tips and tricks along the                                 way um so before                                 before we get right into that um maybe                                 we'll give a quick introduction of each                                 of us for about a minute or so to give                                 you a bit of an idea of our backgrounds                                 um to start out my name is jennifer                                 fernick i am the global head of research                                 at ncc group                                 ncc group is the largest or one of the                                 largest security testing companies in                                 the world                                 so i lead a team of um a few hundred                                 people that are                                 both consultants and researchers and we                                 just try to hack everything we possibly                                 can                                 my background is i trained as a                                 cryptographer and as a mathematician                                 so i kind of grew up thinking mostly                                 about the math of secret codes and                                 um ultimately how quantum computers can                                 break those                                 but then i ran a big security team at a                                 bank and now i'm at ncc group and really                                 excited to be a part of openssf                                 i could go next thanks jennifer first of                                 all                                 thank you everyone for tuning in to our                                 panel discussion                                 also thanks a fast backstage for hosting                                 us                                 um super glad to be here my name is                                 rawla kakula                                 i'm an executive director in jp morgan                                 chase                                 i do run application security and mobile                                 security groups they're                                 part of my responsibilities for that                                 role is                                 securing the open source usage in the                                 form and also                                 securing the open source contributions                                 back to the community                                 so part of the job is also encouraging                                 the teams to be more                                 involved in open source security                                 community and helping them                                 do it properly right um i've been using                                 and developing open source security for                                 almost like                                                          versions of linux php                                 all kinds of good stuff uh i'm i was                                 lucky to                                 work on open source technology for my                                 career too most of the time                                 except i think couple of years i had to                                 work in a hardcore.net and                                 sql server shop but hey after one year i                                 was successfully able to convince them                                 move to my sequel and mono framework so                                 i did my job evangelizing the open                                 source software                                 after working for a                                                 development i                                 after a few security mishaps uh                                 some are my own um i i got interested in                                 security and last                                                                                                       running the security engineering teams                                 on the other side and how do we help the                                 developers secure the the software and                                 code there right so                                 i'm not as actively developing as much i                                 used to be                                 because i'm running these teams but i'm                                 super interested                                 still in in the overall securing the                                 ecosystem and                                 i also serve on the open source uh                                 security foundation as a governing board                                 member                                 and that's how i got the privilege to                                 work with these awesome guys on the                                 screen                                 glad to be here                                 okay i can go next so i'm k williams i                                 work at microsoft i'm in the azure                                 office                                 of the cto and my role at microsoft is                                 to work                                 on our industry                                 efforts related to supply chain security                                 so                                 i am the chair of the governing board at                                 the open ssf                                 i also am the co-chair of an                                 organization that's working on                                 a software bill of materials uh                                 specification                                 and um and then inside of microsoft i                                 work with a lot of                                 our teams um looking at their                                 practices for how they ingest um                                 open source but not just open source you                                 know in just external artifacts                                 scan them we try to clone                                 to clone everything so we've got a copy                                 we can use in case something                                 goes down from an external partner                                 and and we even try to rebuild this                                 image                                 excuse me as much as we can so um so you                                 know that whole process of                                 um supply chain and um uh consuming and                                 using software                                 are things that i look at for azure but                                 for for microsoft and then i'm excited                                 to be working                                 at the industry level to partner with                                 others                                 and i guess i'll round up the                                 introductions hi everybody i'm krobe                                 uh thanks again to the foss backstage                                 team for allowing us to have this                                 opportunity to talk to you all                                 and to my peers here from the open ssf                                 in the industry                                 i am the program architect for red hat                                 product security                                 red hat is a company that has been                                 involved in the open source                                 movement for well over                                             product security has been securing open                                 source                                 for this is our                                           i look so young i know                                 right we're responsible for the                                 vulnerability management                                 um the governance and sdlc activities                                 for all the products in the portfolio                                 as well as overseeing governance for our                                 supply chain                                 which absolutely is deeply embedded                                 within the oss community                                 before that i've worked in several                                 fortune                                               i've been in banking medical and                                 insurance i have a lot of experience                                 with regulation                                 and looking forward to our exciting and                                 engaging panel                                 i hope you all enjoy it awesome and on                                 that note we may as well get started                                 um so let's just start off like why do                                 we care                                 um why does securing the open source                                 ecosystem matter and why should we care                                 about security                                 i'll throw down some stats and then i'll                                 let my esteemed                                 friends here add on to that the linux                                 foundation                                 did a report last year um called                                 the uh census of vulnerabilities in                                 in the core and their                                 analysis showed that approximately                                 between                                                  commercial software has leveraged open                                 source components                                 so the exposure is very broad and then i                                 went over to my pals at github                                 and they are one of the largest uh                                 source code management tools on the web                                 not the only but one of the large ones                                 and just some stats there is                                 last year alone there were over                                                                                                   they have they track about                                            individual developers that contribute                                 both directly to upstream or through                                 private projects or corporate sponsored                                 projects and last year they said they                                 had about on the order of                                             contributions to code so from my                                 perspective the                                 volume and importance of open source is                                 huge now                                 um yeah and so i can uh speak to it for                                 um you know really why microsoft is                                 involved in this effort we                                 you know we just understand that it's                                 not that you know in order to provide                                 high quality products to our end                                 customers we have to                                 um you know we have to                                 help the help and be engaged in the                                 ecosystem                                 to you know to to raise the quality of                                 the products for                                 of the software that that's produced for                                 that everyone produces                                 yeah i could i could bring in the                                 consumer perspective to here                                 in my opinion um the two                                 most critical element for any company                                 however big or small to be succeed are                                 innovation and build and maintain the                                 customer trust                                 right and open source software fuels the                                 innovation there's no doubt about it                                 if you look at any modern application                                 stack                                 we have hundreds of open source                                 components it allows the teams to build                                 on huge ecosystem                                 already exists it allows to keep the                                 teams to focus on the business problem                                 rather than the scaffolding right so                                 there's no doubt about it on the other                                 hand building customer trust is actually                                 very hard                                 maintaining it is actually harder and                                 losing it is actually                                 a lot easier very simple data breach is                                 what it takes right                                 so in my for me securing the open source                                 ecosystem is                                 very crucial to sustain the innovation                                 for the companies to succeed while                                 maintaining                                 the customer trust that they need                                 and that's a mandatory so and as crop                                 mentioned like                                 open source software development is                                 growing tremendously i mean you see the                                 numbers like how big                                 that makes it lot more important to                                 secure it                                 to achieve these yeah i guess to build                                 on that point                                 i mean um we know that open source                                 software is what underlies you know our                                 core internet infrastructure                                 all of the enterprises around the world                                 they're dependent upon open source                                 i imagine like a day without open source                                 um i think every company would shut down                                 right so                                 um it's foundational to everything that                                 we do in a tech driven society                                 and technology increasingly takes over                                 our lives so if we think about those                                 ripple effects                                 the security of these things really                                 matters um and it                                 security is my life's work and will                                 continue to be hopefully for a very long                                 time                                 um but there's a lot of i think unique                                 problems that we can think about                                 in the space of open source um so ways                                 that make it                                 different from securing enterprise                                 software um there's many of these                                 examples but a couple things would be                                 like that it's de-obfuscated                                 public-facing source code                                 um so it's easier for attackers to take                                 a look they don't actually have to                                 reverse engineer any binaries                                 that reduces um you know the obstacles                                 for an attacker to take a look at the                                 source code and find vulnerabilities                                 on top of that um one of the other                                 strengths of open source that is                                 actually one of the things we have to                                 cope with differently in security                                 is that it's you've got this distributed                                 community driven development                                 you don't necessarily know all of the                                 other contributors you don't necessarily                                 know their motivations                                 um and we can't always assume that they                                 are our friends                                 often they are and they feel like our                                 friends and so many of our best friends                                 we've all met within open source but we                                 also have to keep in mind                                 that on a planet with billions of people                                 perhaps there will be malicious actors                                 that want to introduce                                 subtle dangerous things into our code                                 bases and we need to be able to cope                                 with that                                 um beyond that i think there's this                                 tragedy of the commons                                 um where we feel like just because                                 people can look at the source code that                                 they necessarily have looked at the                                 source code                                 and time and again we've seen examples                                 where there are code bases that support                                 billions or trillions of dollars of                                 industry activity                                 that underlie all kinds of important                                 like public service and non-profit                                 projects                                 that are just important across the board                                 that at the end of the day                                 were sustained by a thousand dollars and                                 a couple of volunteers                                 and we'll even talk about some of those                                 examples in this panel beyond that i                                 mean when i think about                                 why security matters security is a                                 prerequisite to so many things that we                                 value in our society                                 um security is a prerequisite to privacy                                 it's not a trade-off as is                                 commonly said um without security you                                 can't make assurances about what your                                 system does                                 and that includes how private it is and                                 how the data is protected                                 um and privacy is important to all kinds                                 of civil liberty                                 civil liberties and other things that we                                 care about within our society                                 and wish to advance further um security                                 is also prerequisite to safety you can't                                 guarantee that a system will behave                                 in a way that is safe for the users or                                 those impacted by the system                                 if you can't make assurances about what                                 it actually does and you can't guarantee                                 that the code isn't being                                 uh played with to do dangerous things                                 and                                 security is a prerequisite to ethical                                 technology so a popular topic in the                                 last few years has been ethical ai                                 and how um it's important to build                                 inclusive ai systems that um you know                                 lack bias and that are more                                 um equitable and representative and that                                 don't                                 propagate discriminatory behavior but we                                 can't actually                                 assure anything about an ai system or                                 any computational system                                 if we don't have control and assurance                                 around that system so security is really                                 a prerequisite to making any kind of                                 guarantees                                 that are so important in in society                                 um so maybe let's go into some of the                                 historical examples we had mentioned                                 i'm wondering if anyone wants to point                                 us to some historical examples where                                 vulnerabilities and open source                                 components have had a large scale impact                                 and maybe krog do you want to start                                 absolutely i can do that                                 i'll kick us off with granddaddy of them                                 all                                 uh one of my least favorite topics are                                 branded                                 laws uh vanity or celebrity flaws and                                 the                                 incident that caused this trend within                                 the industry                                 was a heartbleed which was a flaw within                                 openssl                                 and this technology helps secure                                 and make a transmission between                                 different elements on a network in                                 between                                 systems confidential and it                                 the technology was so good it got                                 embedded                                 virtually everywhere in the networking                                 world and on the internet                                 and unfortunately it was discovered back                                 in                                                                                                         allowed                                 uh the exposure of more data and as                                 the world dug into the problem and was                                 working to fix it                                 you they discovered there was                                 legitimately like two people                                 that were maintaining the project that                                 millions                                 on the globe depended on and they did                                 not have any                                 funding or any backing to really help                                 them and that's where                                 uh you know organizations like the linux                                 foundation and other groups started to                                 start to fix this problem yeah i heard                                 something about heartbleed that it was                                 like                                 they had a handful of volunteers and one                                 person that worked full-time                                 and like two thousand dollars in                                 donations the year that the                                 vulnerability was found                                 and like this was for openssl a crypto                                 library that                                 underlies all kinds of like banking and                                 secure communications and all kinds of                                 things like that                                 yeah and actually my former boss mark                                 cox was on the security team for openssl                                 and that's the whole reason i came back                                 to red hat                                 was because of this heartbleed was the                                 incident that                                 made us understand we need to focus on                                 these big things or                                 more closely that's awesome i didn't                                 know that                                 yeah another example is i believe it was                                 the eslint                                 project and so there                                 in this case there was a project that                                 had you know one                                 maintainer and you know a lot of usage                                 and i forget the exact numbers                                 but one maintainer and um and he was you                                 know                                 kind of he'd been doing it for a long                                 time was moving off to something else                                 someone who had been somewhat active in                                 the project                                 volunteered to take over and become the                                 maintainer and he said                                 great yes thank you and then it turned                                 out that that person                                 um uh then committed code that                                 you know that got distributed everywhere                                 that um                                 used the that you know set it up so that                                 there was bitcoin mining being done                                 through or made available through that                                 code so                                 there's another example yeah                                 the one interesting to me was the shell                                 shock                                 in                                                  impacting uh bash obviously bashes                                 everywhere and pretty much every mission                                 you can                                 get to right uh was actually attacked as                                 a                                 privileged escalation attack so the                                 attacker can send a well-crafted                                 request modifying uh the server to run                                 the commands what they want to                                 so which is it actually high impacted                                 attack                                 what's interesting about this attack was                                 the original bug                                 was introduced                                 accidentally or unintentionally back in                                 i think it's                                      and shell shock was found in                                             can see                                 it took                                                                time                                 millions and millions of the the host                                 got impacted so that made this really                                 what the                                 attack is so simple anyone with like few                                 lines of the command                                 can now bring down the host to                                 distributed denial of service because                                 you simply do sleep                                                                                                  parameters as the request and so within                                 hours you see like                                 thousands of servers being attacked and                                 i think the numbers were like within a                                 week you see                                                             um being carried out and this was like                                                                          sad thing is it's still relevant here                                 because there's so                                 so many hosts impacted there                                 quite a number of them are unpatched                                 still so                                 that makes this this open source                                 security is kind of tricky is because                                 it's so prevalent                                 and it the patching is involved fixing                                 the issue and                                 also improving the awareness office is                                 all the part of this kind of that makes                                 it challenging and interesting                                 yeah i think what's really wild about                                 all of this when we talk through these                                 examples is that                                 if you look at the cve databases so the                                 places where we track                                 known vulnerabilities in known systems                                 there's tens of thousands like i think                                 there was                                                                                               and a thousand of those were critical                                 like game over vulnerabilities                                 so these examples that we're talking                                 about now that is across proprietary and                                 open source software but still                                 these these examples that we're talking                                 about they're not rare um                                 we can assume safely i think that there                                 are                                 many several dozens hundreds maybe even                                 thousands of vulnerabilities being                                 committed into code bases                                 today alone like just today and that's                                 happening every day                                 so finding scalable ways to deal with                                 all this stuff and working closer with                                 maintainers with a respect for what                                 maintainers are trying to do for their                                 projects                                 is absolutely essential for us from a                                 security perspective                                 um i'd love to talk a little bit more                                 about threat modeling because like                                 security is often thought of as                                 vulnerabilities in source code like we                                 were just talking about                                 but it's actually a much broader                                 spectrum of things that we can think                                 about                                 um you know in the software development                                 life cycle                                 so i would ask like what other end to                                 end or like sdlc                                 life cycle things do open source                                 maintainers need to think about                                 to help secure their projects better                                 since i run that working group as part                                 of the open ssf i can kick us off again                                 and i know rao has a lot of experience                                 with this um                                 from my perspective when you're talking                                 about an open source maintainer                                 this is they are men and women and they                                 it's a broad spectrum of folks                                 you'll have a one or two person project                                 maybe it's two ladies in peoria illinois                                 that are working on a graduate project                                 and they                                 push it up to a source code repo and it                                 could be very large corporations like                                 microsoft or intel or red hat that                                 sponsor a project because it's                                 critical to their core portfolio but                                 it's just a broad spectrum                                 and not all of these maintainers a have                                 security training                                 they might not be formally schooled in                                 security defensive                                 coding techniques and they might not                                 have access to tools                                 or infrastructure to be able to uh                                 execute on their journey they have a lot                                 of different motivations go into why                                 someone                                 donates software to the world to make                                 the world a better place                                 and you know right off the bat some                                 simple things you can do and again the                                 linux foundation has a really good paper                                 that kind of spoke to securing the open                                 source supply chain                                 and you can implement things like you                                 know val verifying                                 your maintainers using things like                                 two-factor authentication                                 implementing automated testing into your                                 cicd pipeline you know just just doing                                 very basic like dependency checks or                                 known vulnerability checks will help                                 eliminate broad swaths of problems                                 before they get propagated downstream uh                                 yeah and i know rao has some thoughts on                                 this yeah i think you covered actually                                 really good points crap yeah the other                                 areas is not just about the code                                 it has the vulnerabilities right like                                 even the developer                                 local infrastructure itself is a attack                                 vector                                 your workstations your network your ides                                 attackers can compromise them and get                                 hold of                                 some of the source code which is not                                 released to public yet                                 they can get hold of the zero-day                                 vulnerabilities researchers reported to                                 you                                 so that they could exploit them they                                 could even commit code on behalf of you                                 without you realizing so there's a                                 there's a lot of danger within that and                                 also once the code is                                 completed you're pushing to github okay                                 mentioned about multi-factor                                 authentication for the source code                                 repository                                 attacker can actually target that and                                 get hold of your                                 credentials and then publishing to the                                 the package managers                                 they can publish a a different version                                 of the package                                 obviously get hold of that your                                 credentials                                 and then interestingly um                                 one other thing i forgot to mention is                                 that the developer                                 build and ci environment is another                                 threat attacker attacker can get hold of                                 your bill configuration they can modify                                 for example                                 mpmrc file and then point it to their                                 control registry and then could do                                 damage right so                                 i think monitoring all these systems not                                 just the looking for vulnerabilities the                                 code is very important                                 to keep your security one of the things                                 i would like to point is open ssf                                 in the initial stages when we started we                                 started with                                 collecting all the threats possible in                                 open source                                 ecosystem and ways to remediate                                 so we published a paper michael from                                 microsoft uh                                 published a paper with which is like a                                                                                                    is published on the open ssf.org website                                 uh please check it out i mean we only                                 touched a few of them                                 it goes over every step of the sdlc yeah                                 threats risks and vulnerabilities in the                                 ecosystem                                 and it's michael scaveta who wrote great                                 paper                                 really good paper and that term that                                 thing that we're talking about right now                                 for those that are not familiar is                                 called threat modeling                                 so when we're thinking about what are                                 all the threats that are impacting this                                 thing                                 not just what are the potential                                 vulnerabilities in the source code                                 itself                                 that we may have made mistakes that lead                                 to exploitable vulnerabilities or                                 that someone may have inserted malicious                                 code into a specific code base                                 when we think about that whole space of                                 like someone reading your emails where                                 you might be receiving                                 a vulnerability report or someone taking                                 over your account because you don't have                                                                     that's all when we think about our                                 threat model we're trying to think about                                 what are the things we actually need to                                 worry about here                                 and it's an important exercise because                                 um                                 often we assume that people are thinking                                 the exact same way we are or that                                 they're motivated in the same ways that                                 we are                                 so we might neglect other motivations of                                 these threat actors                                 but also we have to think about like if                                 you're using dodgy airport wi-fi                                 or if you haven't patched the laptop you                                 use to commit code in a long time                                 those things can be really dangerous so                                 we have to always think about those                                 things                                 um but let's get back to vols i love                                 talking about vulnerabilities so let's                                 do a little bit more of that                                 what are the different ways of going                                 about finding vulnerabilities in                                 software                                 okay i know you think a lot about supply                                 chain um can you talk to us like what                                 that means in a security context and how                                 we should think about that                                 um yeah so in the you know when you                                 think about supply chain there are any                                 piece of software that you                                 use or that you write has dependencies                                 on other components and the dependencies                                 you know spread out into a very large                                 tree pretty quickly                                 so um you know when you're thinking                                 about vulnerabilities it's not just                                 vulnerabilities in your code but                                 vulnerabilities and all the                                 code that you bring in so you know there                                 are some tools and                                 a lot of the um you know systems that                                 the developers use for creating software                                 now are starting to provide tools and                                 some automatic ways to                                 to let developers know about um about                                 issues in their dependencies                                 so with github for example there are                                 there's a dependency trackers um uh                                 dependency trap excuse me graph i think                                 is what it is um                                 which you know lets you see all of the                                 dependence dependencies that you're                                 consuming                                 there are a number of commercial                                 resources that will um                                 you know do scanning of your code and                                 show you what your dependencies are                                 and what cbes exists in your code                                 so you know so one aspect of                                 vulnerabilities is just                                 understanding that you know the things                                 that you bring in can bring                                 vulnerabilities with them                                 in the open ssf we're also looking at                                 doing um                                 some work where we're sharing uh                                 some analysis that different companies                                 have done microsoft and ncc group and                                 others                                 that talk about the quality of various                                 components                                 and so you know one thing that's really                                 good to do is just understanding                                 what what components you're making bets                                 on                                 and doing a little bit of research to to                                 make sure that the um                                 that there aren't serious issues with                                 those                                 yeah that's great thanks kay um and in                                 thinking about those vulnerabilities                                 that can come up in our own code bases                                 or in the dependencies that we're making                                 use of um sometimes it's interesting to                                 talk about like how do people find bugs                                 in the first place                                 and that's really what my team                                 specializes in so um maybe i'll spend a                                 few                                 a few moments talking a bit about how do                                 we actually find bugs                                 um and there's a bunch of different ways                                 of doing this so we've talked a little                                 bit about                                 tooling and what do we mean by tooling                                 some of the common categories of basic                                 tools that people can use                                 you can think of them as code scanners                                 because basically they are                                 static analysis is one where we look at                                 a piece of or a computer looks at a                                  piece of code for us                                  and it looks for dangerous patterns                                  within um                                  the this code that has been committed                                  and this varies from programming                                  language to programming language                                  because some programming languages are                                  safer and they don't let you do                                  dangerous things                                  whereas other ones see let you do very                                  dangerous things                                  so um for example if you were to talk to                                  case colleagues at microsoft                                  in the security response center and you                                  asked them                                  like what are these different categories                                  of vulnerabilities which ones have the                                  biggest impact on                                  your systems and everyone else's systems                                  they would probably say                                  memory corruption where something weird                                  goes wrong in the memory and you can                                  actually have malicious behavior that                                  was not intended                                  um that's a bit of a hand wavy                                  explanation but i suppose like                                  my overall point is that there's many                                  different types of vulnerabilities we                                  can categorize them                                  and then when you have these tools they                                  can look for how those vulnerabilities                                  show up                                  within different programming languages                                  so static analysis is really powerful                                  and there's a lot of like free static                                  analysis tools that people can use                                  um there's also fuzzing so this is a fun                                  one you're basically throwing randomness                                  at something until a program will crash                                  and you're trying to just see where                                  things don't exactly behave as you would                                  have expected and sometimes when you                                  find those crashes                                  you can actually find vulnerabilities                                  that are exploitable that an attacker                                  could use to                                  do dangerous things um so there's a lot                                  of ways that we can use tooling as                                  researchers                                  to find bugs and also as defenders or as                                  maintainers can use tooling                                  to get rid of bugs before people on my                                  team can exploit them basically                                  the the other more manual ways of                                  thinking about this                                  are doing things like code review so in                                  the same way that you would do a code                                  review for quality                                  within um a project we would do it for                                  security and we would look manually                                  through it                                  we might have tools that guide us as to                                  where we should look more                                  but it's often a manual kind of bespoke                                  expert process                                  um the thing that ncc group specializes                                  in is security testing or penetration                                  testing                                  which is basically you come to ncc group                                  and you go i want to get hacked but i                                  want the hackers that do it to be on my                                  side                                  so can you guys hack it and then please                                  tell us how you hacked it                                  and how we can fix the hacking um and                                  and that's what we we all do                                  so um in our client we do this because                                  companies hire us to do it                                  in our research we do it on both                                  proprietary and open source software and                                  then what we do is something called                                  vulnerability disclosure                                  so we find something dangerous in a                                  piece of software we need to tell the                                  person so that they can fix it before                                  someone that has maybe more evil                                  intentions than we do                                  finds that same vulnerability and maybe                                  that's that's something we can talk                                  about                                  next um so there's this idea of                                  coordinated disclosure or coordinated                                  vulnerability disclosure                                  and it's probably one of the least well                                  understood                                  most confusing and contentious issues                                  in security people working with like                                  developers                                  um so i wanted to talk a little bit more                                  about like what makes coordinated                                  disclosure difficult                                  how does it work um how is it different                                  or how does it work within                                  open source software specifically so                                  maybe i'll just start with a couple of                                  examples to get us on the same page and                                  then we'll share our different                                  perspectives on vulnerability disclosure                                  um so what do i mean when i say                                  vulnerability i mean that there's some                                  flaw in software                                  intended or unintended a lot of them are                                  committed by mistake because they're                                  really                                  hard to spot even if you're an expert                                  developer                                  a vulnerability is some flaw in a                                  software that could be exploited or it                                  could not                                  an exploit is when researchers for                                  example                                  hackers um malicious actors                                  will write something that interacts with                                  the vulnerability to take advantage of                                  it                                  to for example get more permissions in a                                  system                                  or to do some other kind of like not                                  intended                                  behavior on the behalf of the developers                                  so to do something                                  dangerous and when we talk about                                  coordinated disclosure that is when the                                  person who has found the vulnerability                                  doesn't want to exploit it and like mine                                  bitcoin or do something evil                                  instead want to come back to the                                  developer and say hey like                                  security is my thing i found this bug i                                  want to help you fix this bug                                  um so coordinated disclosure is a really                                  powerful kind of construct that we have                                  in the security community                                  where um you know a vast majority of the                                  people that do security and that find                                  these exploitable vulnerabilities                                  don't go and sell them on the dark web                                  don't solvent governments don't                                  personally exploit them for their own                                  gain                                  but instead they knock on the doors of                                  whoever has been developing that                                  software                                  and they try to coordinate a way of                                  communicating about this                                  um and and of fixing the bug and                                  ultimately reporting it to users so that                                  typical flow                                  is like we'll find a bug in something                                  we'll go to them and we'll say hey                                  we're researchers we have this bug we                                  want to tell you about it we need a                                  secure way of communicating with you                                  so that you know an actual adversary                                  can't see the report we're sending you                                  and then                                  exploit the vulnerability we're trying                                  to fix um often                                  the recipient will say great like here's                                  our secure communication maybe pgp                                  encryption                                  send us the report and then there's a                                  back and forth explaining like how it                                  works how to fix it                                  all of that and the ultimate goal is                                  that the developer and this can be                                  proprietary software open source will                                  patch the vulnerability                                  issue an update and then often both the                                  developer and the researcher will issue                                  something called a technical advisory                                  that explains what happened why like                                  what is the impact                                  how we fixed it and all of that but we                                  only make it public after it's fixed                                  so that people that have up-to-date                                  software are safe um                                  and i guess from a researcher                                  perspective this is challenging                                  with vendors and with open source                                  projects but perhaps for different                                  reasons                                  um one of the things that we have to                                  worry about is that                                  um especially with small open source                                  projects not all projects have people                                  that necessarily understand the bug                                  reports that we're reporting because it                                  is a super niche thing                                  and it's not something we should expect                                  all developers to know um and                                  they can't necessarily write the patches                                  either if this just isn't an area                                  they've thought about                                  memory corruption isn't their thing but                                  they can build amazing systems at scale                                  um they might struggle with like what do                                  i do now and                                  how should i why should i trust this                                  random hacker on the internet that's                                  telling me to push                                  changes to my code right like why should                                  anyone trust me or someone from my team                                  um so that's a huge challenge um                                  sometimes as well maintainers won't see                                  the danger in a particular vulnerability                                  and they'll say oh that's not a security                                  issue and we'll say believe us it is                                  so that's a challenge right because                                  we're speaking different languages                                  we have different areas of expertise and                                  um we can't necessarily expect                                  developers maintainers to                                  be able to understand all this nuanced                                  security stuff right out of the box                                  um sometimes patching isn't a priority                                  um open source is                                  often done for free by people out of the                                  goodness of their heart trying to build                                  really important interesting innovations                                  in software                                  maybe writing a patch to some obscure                                  bug that we report to them                                  is not a priority and i get that um and                                  also like projects can go unmaintained                                  and sometimes we just can't even find                                  anyone                                  to report the bug to and there isn't any                                  clear way of getting it fixed                                  there's no way of necessarily getting a                                  patch pushed out and those are all                                  concerns                                  um so i think a common misconception                                  that researchers get from open source                                  projects but also from                                  some less security mature enterprise                                  software companies as well                                  is that vulnerability disclosure is                                  adversarial like that we're coming to                                  like                                  prove that you did something bad or                                  whatever and in fact um                                  it's it's it's pretty much never that                                  that way if someone had a vulnerability                                  and they wanted to be evil they would be                                  exploiting it in the wild and not                                  telling you                                  the people that are knocking at your                                  door do have your best intentions at                                  heart in general                                  and we're just trying to communicate in                                  a way that works for everybody                                  um so we're really just saying here's                                  something dangerous and here's how we                                  think you can fix it                                  um but anyway i feel like i've been                                  talking for a long time rao krobe i'd                                  love to hear like a developer                                  perspective and open source maintainer                                  perspective on                                  vulnerability disclosure right i think                                  it is                                  a really good point uh jennifer and then                                  at in my opinion vulnerability                                  disclosures are actually                                  a good learning opportunities for                                  open source developers and maintainers                                  right um                                  so it's important i think when when the                                  research reached out to them like                                  to the developer our maintainer is to                                  provide more details on                                  what is the problem provide more details                                  on how to be exploited and also suggest                                  on how to fix it                                  and maybe even offer the help                                  to validate the fix right that because                                  you know how                                  this is exploited that's very important                                  that would help                                  the developers to actually get                                  interested in security also i mean                                  i'll tell you a quick story like not                                  going to take much time i was with one                                  of the                                  recent conferences and talking to this                                  awesome                                  security leader and she                                  she's running a product security                                  division for this security firm                                  and few years back she was one of the                                  open source maintainer for a package and                                  no idea about security                                  and one weekend she got an email from                                  this random guy on internet                                  in a very little bit of threatening                                  email saying oh you got a big problem in                                  your package you got to fix it                                  immediately                                  so she got up like a little bit like                                  frightened and was like going through                                  the code                                  multiple times and couldn't find the                                  problem                                  it looks good to me so after a couple of                                  hours                                  she ended up reaching out to the whoever                                  contacted her                                  and saying hey actually i couldn't find                                  the problem can you explain me where is                                  the problem                                  so and luckily this guy was actually                                  gone through the code explained where                                  the problem is and                                  helped fix the issue and they were able                                  to fix the issue                                  that saturday and she was telling me the                                  story                                  what they made was she got interested in                                  security and realized oh they actually                                  can my code do that which is a kind of                                  relation                                  right like this is interesting and that                                  led her                                  interested in security learn more about                                  it now she's running a                                  a big role in the security form so                                  as you can see i think that good nature                                  of it                                  wonderful disclosure kind of made her                                  career                                  you could have actually broke her kid                                  and probably like made her leave the                                  open source because oh                                  this is too much work for me right                                  because i'm not getting any recognition                                  or not                                  help so i think you realize it at a good                                  point i think that most of the                                  when researchers actually are there to                                  help they're not really finding problems                                  in your code for sake of                                  blaming you or telling you something                                  wrong instead they're helping you                                  i think uh it's it's a good good point                                  yeah absolutely and i mean like i think                                  we're just really deeply curious about                                  systems                                  in in in a way that i think we share                                  with developers and with maintainers                                  um but perhaps from a different angle                                  and and there's so many ways of                                  specializing in computing that it makes                                  sense that some people would                                  be able to find these like super niche                                  vulnerabilities in code but that that's                                  not a universal skill set                                  um i know that we are coming upon our                                  time we've got like four five minutes                                  left                                  so i have two questions that i want to                                  ask we're gonna try and fit them in                                  um so the next one um i just love maybe                                  krobe if you could just run through like                                  a whirlwind                                  like as an open source developer or                                  maintainer what can you do to improve                                  the security of your project                                  aside from listening to and                                  participating in the open source                                  security foundation                                  yeah openssf.org there's a couple really                                  practical things you could take away                                  and first off implementing things like                                  multi-factor two-factor authentication                                  in your project                                  for commits can greatly reduce the                                  attack surface an attacker could come in                                  and                                  impersonate you doing things like having                                  implementing change control and change                                  tracking in your project that as                                  commits are made that's recorded who                                  what when where                                  doing things making sure that you have a                                  unique identifier for each release that                                  helps                                  the downstream folks that come in and do                                  the vulnerability response or the                                  scanning of the pen testing later                                  to identify this vulnerability was                                  introduced at the                                  x version x release integrating security                                  testing                                  into your pipeline critical the more                                  automation the better                                  unfortunately tooling is great but it's                                  a lot of this is going to come down to                                  you're going to get the best review                                  by a manual peer review with a qualified                                  security person                                  but tooling you can automate the thing                                  to a point                                  where you can pass off quality                                  information to that person that might                                  help you out                                  um thinking about uh your dependencies                                  you know                                  you write some software it has some                                  functionality and you require                                  other software outside of your scope                                  understanding what dependencies you                                  interact with that you require                                  and listening to any vulnerabilities or                                  reports or problems                                  with those dependencies so you can                                  potentially make changes if you need to                                  um you know doing things like                                  cryptography where you're digitally                                  signing                                  and having being able to prove that a                                  certain commit was made by a certain                                  person                                  um a lot of different ways you can do                                  that and then                                  uh just paying attention just in general                                  tracking or mediating vulnerabilities                                  in your code and again your your                                  dependent projects that's important                                  as both you know a good steward but also                                  to protect your project                                  your software is you need to understand                                  kind of who else could                                  come in there and ruin your day because                                  of the dependency you're using that is                                  faulty thank you so much yeah and i                                  think i think these are some                                  great suggestions and it's things we're                                  trying to formalize in openness and                                  stuff                                  so if you are a maintainer developer                                  listening to this talk right now                                  and there's a gap between what we're                                  saying and resources you need                                  let us know because we're trying to                                  create the educational materials the                                  courses                                  all of that if you can identify gaps                                  between what we're offering here                                  and what we really need to build this                                  bridge between these communities please                                  do let us know                                  to finish off and we might run like a                                  couple of minutes over sorry                                  i would love to talk about what happens                                  if we don't intervene so if we ignore                                  security totally                                  um will security and open source get                                  better or worse what will be the                                  consequence and and maybe                                  i'll i'll kick off with my thoughts but                                  i'd love to hear from from the entire                                  panel                                  um from my view i guess from the                                  research review there's a growing number                                  of vulnerabilities in the wild right                                  every day we can expect that the number                                  of lines of code that's being committed                                  on average is probably more than the                                  previous day                                  and we have no reason to believe that                                  there's less vulnerabilities in that                                  code                                  actually we have good reasons to believe                                  there's more vulnerabilities in that                                  code                                  as code bases get more and more complex                                  it gets harder and harder to filter out                                  phones just through doing scanning so                                  like as crowbed mentioned                                  it's not just about tooling if the tools                                  can't find the bugs because they involve                                  these magical abstractions that require                                  some analysts                                  thinking about several different pieces                                  of the code base at one time                                  those are actually going to be even                                  harder to find with just the basic tools                                  so we're seeing an increased number of                                  like lines of code                                  um you know open source projects every                                  day and consequently a growing                                  number of exploitable vulnerabilities                                  that are likely in that code                                  security as its practice right now does                                  not necessarily scale                                  there are some scalable things but like                                  in general it doesn't super scale well                                  um and we think that it'll probably get                                  harder and harder for defenders                                  um especially as advancements in                                  automated bug fun                                  bug finding unfold so when we talk about                                  tooling not being very good                                  tooling is going to get better over time                                  and the real thing                                  is who's using that tooling is it the                                  defenders and the maintainers finding                                  the bugs before they commit stuff or                                  or very early on or is it that you know                                  people with malicious intent perhaps out                                  in the wild                                  on the internet are making use of these                                  tools and that's that's the big tension                                  i think                                  um so some of the things that we worry                                  about when we think about                                  attackers getting really good would be                                  like large-scale fuzzing                                  um innovations in something called                                  program analysis wiki that if you've                                  never seen it it's um                                  a ways of looking at code for                                  vulnerabilities but we've also seen                                  query languages like codeql where you                                  can find classes of vulnerabilities                                  across                                  many code bases we've also seen some                                  good work with machine learning over                                  source code to identify                                  certain patterns in which                                  vulnerabilities tend to show up                                  there's even a field in security known                                  as automated exploit generation                                  aeg which is all about if you find a bug                                  how to chain stuff                                  together in an efficient way so that you                                  can start exploiting it quickly so                                  there's a lot of things that will scale                                  up that are scary for                                  offenders and i think that it's all it's                                  all about                                  understanding and making use of those in                                  a defensive capacity over time                                  and by having interfaith interventions                                  like what we're working on at openssf                                  we're trying to create a um you know                                  body of knowledge and body of work where                                  we're able to scalably                                  make use of these innovations to help                                  make open source software                                  more secure but it's always that tension                                  between the dual use nature of using it                                  for defense or using it for attack                                  um but i think there's reasons for hope                                  and and i think open ssf is                                  trying to to build those reasons um                                  otherwise what are your thoughts what                                  what will happen will security get                                  better or worse                                  well i i think if you don't intervene i                                  mean it's not going to get better                                  unless you're talking about bitcoin                                  right then yeah it always got better                                  without doing anything                                  jobs aside i think you we all i think                                  you raised good point and                                  everyone writes good point not                                  technically two                                  i think as we all know the open source                                  is tremendously growing                                  vulnerabilities are growing and also                                  we're seeing highly complex                                  not well-known vulnerabilities                                  introduced every year so                                  i think we all need to work as a group                                  maintainers researchers                                  and corporations to address the problem                                  and if we don't do it we lose this                                  opportunity to fix in the beginning                                  before it's uncontrollable right and                                  alright i'll finish with one thought                                  it's not always technical though and                                  most of the maintainers and developers                                  actually are employed by other companies                                  and they have a day job                                  so you have to work on other stuff other                                  than these projects so                                  we can't put a button on these develop                                  developers and contributors and                                  maintainers                                  to keep up the software so for that i                                  would say                                  talk to your employer talk to your                                  employer and                                  convince them that why this software is                                  helping the other corporations and why                                  how we are actually taking help from                                  that corporation so that                                  you get a dedicated time to work on                                  these open source projects                                  i've been doing in the companies i've                                  been working on leading is all my                                  developers get a certain time of                                  time of the week to work on contribute                                  back to the open source projects                                  i think every corporation like that                                  because it's changing and i see the                                  trends in                                  they're realizing the value of the open                                  source so they are okay to contribute                                  back                                  so i would say use that and that's the                                  only way we can scale up i mean                                  researchers cannot help single-handedly                                  our developers cannot have that that                                  much burden working on multiple jobs so                                  that's my final thought                                  yeah so i i you know i'm an optimist in                                  that i                                  i think that there are you know changes                                  coming along and                                  um you know things being automated                                  um that that will help us i don't think                                  that this will happen                                  on its own i think that you know without                                  concerted effort um the security doesn't                                  get better                                  um but i think that you know we are                                  putting that concerted effort in                                  um i think that there's there's kind of                                  a carrot and a stick                                  aspect to this that will make it you                                  know really                                  better over time one is that developer                                  tooling will get better about                                  having security by default requiring                                  security as developers create new                                  new projects providing information to                                  developers about vulnerabilities and                                  steps that they can take and best                                  practices                                  another piece i think that we'll see                                  happening                                  is some automated infrastructure that                                  allows                                  capturing information about what was                                  done during the creation of software                                  and then applying policy about what will                                  you know what                                  can be accepted on the other end and                                  with that                                  cycle of somebody's setting policy that                                  says i i will only take software                                  that's been committed where the code                                  commits are done using two-factor                                  authentication                                  then all of a sudden you know the system                                  starts to build you know even more than                                  it is already starts to build that in                                  so with this you know automated system                                  of providing information about what was                                  done                                  um having policy this is what will be                                  accepted and some verification                                  of policy um that's some some fun stuff                                  that we're looking forward                                  well from a corporate point of view that                                  we're looking forward to in the future                                  from my perspective we have a boggle                                  where the ecosystem is getting                                  exponentially more complex                                  you look at vulnerabilities like spectre                                  and meltdown                                  where it re it was a incredibly                                  technically difficult                                  problem to find and then solve and it                                  involved a lot of different stakeholders                                  across                                  the industry ecosystem it was a both a                                  hardware                                  and a software problem it was a hardware                                  problem that had                                  um the software was had the ability to                                  help correct and so we're seeing more of                                  these blended attacks                                  things are more complex as that                                  dependency tree branches out                                  um but i am very optimistic about it you                                  know we've been involved in the                                  community for decades and i think this                                  is the most                                  exciting passionate talented group of                                  developers and practitioners that i've                                  ever had the opportunity to work with                                  and you know initiatives like um the                                  open ssf                                  um things like the forum of incident                                  response and security teams we're all                                  starting to talk to each other and                                  how we're gonna solve this problem of                                  this complexity and this                                  kind of snowballing of the potential for                                  vulnerabilities and threats                                  is communication having these good                                  practices like coordinated vulnerability                                  disclosure                                  um having policies or setting                                  expectations and be able to communicate                                  between the different types of people                                  involved in this process and a lot of                                  the breakdown                                  um when things go poorly it's it's a                                  mismatch                                  of perception that the researcher                                  doesn't understand                                  the developer and the developer doesn't                                  understand the researcher and the more                                  we talk the more we have these forums                                  and                                  have resources to help each other out                                  and kind of educate each other                                  the better off we're all going to be                                  all right on that note i think that                                  mostly summarizes what we wanted to talk                                  about today                                  thank you everyone so much for joining                                  us for this panel                                  um for staying a little bit late because                                  we had more thoughts we wanted to share                                  and especially to foss backstage for                                  hosting us today um we're happy to take                                  questions here or                                  in the question meeting room or                                  something that i think exists                                  so thanks everyone                                  you
YouTube URL: https://www.youtube.com/watch?v=i0D29XXXSBc


