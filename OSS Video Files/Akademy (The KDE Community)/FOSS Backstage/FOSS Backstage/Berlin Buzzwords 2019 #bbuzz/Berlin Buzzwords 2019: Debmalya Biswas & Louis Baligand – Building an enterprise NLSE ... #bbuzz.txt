Title: Berlin Buzzwords 2019: Debmalya Biswas & Louis Baligand – Building an enterprise NLSE ... #bbuzz
Publication date: 2019-06-20
Playlist: Berlin Buzzwords 2019 #bbuzz
Description: 
	Debmalya Biswas and Louis Baligand talking about "Building an enterprise Natural Language Search Engine with ElasticSearch and Facebook’s DrQA".

Modern search engines leverage Natural Language Processing (NLP) and Machine Learning (ML) to improve relevance of results. In this presentation, we focus on the specific field of ‘Enterprise Search’, whose primary goal is to make domain specific company data and documents readily accessible to employees to improve their productivity and promote collaboration. Indeed, any large organization produces vast amounts of documentation about their specific systems, technologies and processes. The question then is - “How can we speed up search-driven activities and enhance user experience for the enterprise?”

Facebook AI research team has developed and open sourced a tool to answer questions by reading Wikipedia articles, called DrQA (Chen, et al. 2017). DrQA is based on a 2-stage Q&A pipeline: (i) Retriever: retrieve the top-k relevant documents (pages), followed by (ii) Reader: determining the most relevant answer span among the retrieved documents (pages). We applied it on an enterprise use-case to search over machine manuals used by factory operators.

We present an architecture integrating ElasticSearch in the DrQA pipeline, which has been contributed upstream and is now available from the official DrQA github repository. The end result is a very scalable search engine that can be deployed on any document repository in your enterprise containing Microsoft Office docs, ppts, emails, pdf documents, etc. Simply point it to your ElasticSearch index and it will be able to provide ‘very precise’ answers based on your documents, thanks to the pre-trained Deep Learning Q&A model of DrQA. We discuss the learnings along the creation and the limitations of such an engine, e.g. scenarios where it excels by identifying precise answers and how it performs compared to a non-ML approach or a typical keyword based search.

Read more:
https://2019.berlinbuzzwords.de/19/session/building-enterprise-natural-language-search-engine-elasticsearch-and-facebooks-drqa

About Debmalya Biswas:
https://2019.berlinbuzzwords.de/users/debmalya-biswas

About Louis Baligand:
https://2019.berlinbuzzwords.de/users/louis-baligand

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	                              so welcome everyone and thanks for                               coming so please don't worry about                               tighter I think it will be                               as we go along the presentation so to                               start with just a few quick words of                               introductions the Amalia just called me                               Deb and I will be co-presenting with                               Louis we are both part of the let's say                               PMI AI data science group and the slight                                in let's say advertisement that we                                wanted to do here is our open source                                let's say contributions page I think                                it's fair to mention that you know this                                is kind of a journey for us as well                                because you know to come from let's say                                a big company organization where open                                source was banned or you know not                                allowed to be used at all five years                                back to where we are now kind of like                                Isabel was mentioning in our keynote                                today where we are trying to let's say                                apply open source embark on open source                                journey contribute to open source even                                use a lot of open source internally so I                                think it's a bit of journey for us and                                we are all learning here and so I would                                welcome you to check the site out all                                our contributions including the one we                                will talk about today are here so please                                join please provide feedback so getting                                back to topic so getting back to the                                topic that we want to talk about today                                so enterprise search and why are we                                talking about it now so I mean search is                                not new one and with Google and all we                                have been searching for quite some time                                and it works so what is new with                                Enterprise Search so I mean in terms of                                definition it's just that you know just                                with the AI let's say machine learning                                natural language processing hype it's                                basically an application of whatever                                advancement is happening in natural                                language search machine learning to                                search and then it's applying it in the                                whole pipeline from ingesting different                                types of documents to do you know like                                understanding what type of document it                                is to understanding what the user is                                trying to say                                and then even like using machine                                learning to let's say organize the                                information which is like auto tagging                                and things like that so it's basically                                the application of NLP and machine                                learning to the whole pipeline of search                                and why is Enterprise Search important                                so I mean if you work in a big company                                it's not very uncommon to find let's say                                people who are always complaining that                                you know I'm unable to find any internal                                information it's you know the our                                internal knowledge bases systems are                                like a black hole information goes in                                and you cannot find anything so                                Enterprise Search is I would say a bit                                more of a you know big company kind of                                problem where a lot of information is                                being generated but there's either no                                way to or let's say people are wasting                                too much time in trying to find the                                relevant information and it's very                                difficult to find it find it in one                                place find it in the format you need so                                it's a very relevant problem and that's                                why there's a whole let's say domain                                that is building up around it so so we                                might question that okay again going                                back to the back to the question that ok                                we have web search we have you know                                Google we have Bing which you know works                                to a certain extent so what is different                                with different with enterprise search so                                we go through a few parameters on the                                positive side there's lot less data in                                the enterprise ok you still have a lot                                of data it's kind of a black hole but                                it's nothing compared to the data at the                                amount of data that is being generated                                on the web so you would say that this is                                a positive side there's less data to                                search what is maybe on the negative                                side or maybe you can say it's a bit on                                the gray side is that your end let's say                                the end customers of your search are                                your employees and as you probably all                                know I mean employees are the most                                critical of their enterprise systems so                                they are not easy to please and they                                 expect a lot of things to be done for                                 them whereas if you go to Google you're                                 probably willing to put the extra effort                                 to you know find the right keywords and                                 search again but as an employee you                                 fact whatever search engine you are                                 using to give you the right data the                                 first time so the other thing which also                                 makes it a bit more difficult is the                                 different types of data that we need to                                 search so in case of Google let's say                                 simplified version okay you can argue                                 that there are different platforms and                                 things like that but end of the day it's                                 all web documents whereas in case of a                                 company you sometimes you need to you                                 know your search engine needs to                                 understand and work over everything from                                 let's say PDF documents to Word                                 documents to the engineering CatDog                                 diagrams to everything so the ingestion                                 of data and the different types of let's                                 say formats that it needs to accommodate                                 is really diverse and this makes the                                 whole thing quite complicated the other                                 thing is like I mentioned is that in                                 most big organizations there are very                                 few you know like tags how to organize                                 data so when people are generating                                 documents they are hardly tagging data                                 so the data is kind of out there is                                 unstructured data and there's so there's                                 no you know let's say not a lot of                                 investment into tagging this data which                                 kind of makes searching even more                                 difficult on the other side of course                                 there are huge investments in search                                 engine optimization where you know I                                 mean if you if you're it's a completely                                 different field in altogether but you                                 try to make your website data or let's                                 say whatever data you put on your                                 website much more accessible to two                                 search engines so it's kind of the other                                 way around where it enterprises you                                 basically do absolutely zero whereas on                                 the web search side you are really                                 trying to make your data more accessible                                 to search engines the other one is so                                 rule-based access control and security                                 so again in an enterprise you cannot                                 make like all data available to everyone                                 so you need to put like another layer of                                 access control or visibility on top of                                 the data the search results that you                                 show and as we all know like role based                                 access control or security on top of                                 index data is not a done deal so we are                                 still you know the technology of how to                                 let's say protect access to index data                                 is not know                                 fully there yet and finally this is                                 again a bit of like what we face and                                 maybe in other big organizations that                                 you see as well people expect search to                                 work but there's no like let's say                                 commitment to consider search as a key                                 let's say you know like a key stream one                                 its own and to put like dedicated effort                                 behind it so this is also what we see as                                 a bit of like you know the challenges on                                 why we enterprise search is still so                                 difficult and on top of this so on all                                 the challenges we want to enable                                 something called natural language search                                 so I mean if you think about how you                                 search geek Google today                                 I mean you probably don't think about it                                 or we are so used to it that you know                                 you just think of the keywords and enter                                 the right keywords but ideally what we                                 would like to do in future with advanced                                 let's say advancements in natural                                 language processing is to enable                                 something called natural language search                                 which is where you know just like we are                                 talking here you would like to be able                                 to enter the just a full sentence and it                                 should answer you the exact answer                                 so I mean Google supports it to some                                 extent it shows the relevant paragraphs                                 now but if you I don't know if you can                                 read the question but it's like the what                                 is the most dangerous part of a fire and                                 it's actually smoke which is there in                                 the answer but ideally dancer should be                                 just more so I think we are not there                                 yet where it works where it can give                                 very precise answers as let's say                                 general knowledge kind of questions like                                 you know who is related to whom who want                                 this more this kind of things but as you                                 know behind this is a is something                                 called knowledge graphs which are often                                 like manually curated by a lot of people                                 so it's not like a fully automated                                 process either so I mean fully natural                                 language search is still bit                                 experimental and we just wanted to also                                 highlight something that you know the                                 whole natural language search and chat                                 BOTS also have a nice intersection so                                 again I mean I'm quite sure you have all                                 heard about chat BOTS maybe used it to                                 some extent and be frustrated with it                                 which is kind of the general experience                                 but I think what what we just wanted to                                 show here is                                 there's a nice intersection of chatbots                                 and natural language search although it                                 seems that the people in the field                                 there's people working on chatbots in                                 let's say independently and people                                 working on natural language search                                 independently without let's say focusing                                 on the intersection which is quite                                 interesting so if you consider let's say                                 you know in an enterprise what is                                 usually a chatbot use case more often                                 than not it's basically the effect use                                 that you used to have which is basically                                 your simple light you know question                                 answer you're trying to automate that in                                 the form of a chat pod so think of the                                 effect users more like rule-based                                 engines you give a specific question you                                 get a hard-coded answer the current chat                                 BOTS the I'm not talking about the ones                                 you see in ICL are or you know you the                                 ones not in EPS but let's say the                                 current chat BOTS that are available in                                 the Watson there's your Google dialog                                 flow which you use in the enterprise                                 today are something called intent based                                 chat BOTS so in these chat pods you                                 usually start from the Q&A which is                                 basically you know you go through what                                 the users have been asking in the FAQ                                 type of questions you provide it you                                 configure your chat bot engine with that                                 you provide variations let's say five                                 variations of the the different                                 questions and then you kind of train                                 your chat bot engine based on that and                                 then the expectation is or the only work                                 it does is that it's able let's say you                                 give five variations it's able to                                 understand fifty variations out of it by                                 applying statistical let's say closeness                                 measures tf-idf things like that you                                 know so all it is able to do is to work                                 a bit on the natural language                                 understanding part to see if the query                                 you asked is close to the query it has                                 been teint trained on the questions it                                 has been trained on so it's very limited                                 but if you now think about what we try                                 to do with natural language search so                                 natural language search is basically if                                 you could just provide the documents                                 don't worry about extracting what                                 questions people might ask about them if                                 you could just ingest the documents and                                 the let's say search engine could                                 provide you the exact answer like we                                 discussed before you know so what is the                                 most harmful thing in a fire is the                                 smoke if the                                 the search engine could actually give                                 you the exact answer you wouldn't need a                                 chatbot engine in between the                                 intent-based chatbot engine in between                                 because you know you could just give it                                 the documents and when the user asks a                                 question it could give the exact answer                                 which is what the chat bot is doing so                                 in principle if your natural language                                 search worked then you wouldn't need                                 let's say chat BOTS would go to another                                 level and you wouldn't be so limited by                                 training it on existing questions and                                 things like that so given of course                                 natural language search like we                                 discussed is still in a bit experimental                                 stage so what we what we see now is a                                 bit somewhere in between so usually the                                 chat bots we build kind of follow or                                 let's say if you're building a chat bot                                 you need to take this into consideration                                 where you need to have a fallback option                                 so you can start with a chat part you                                 can start with you know let's say your                                 predefined set of questions and answers                                 but always have a fallback in terms of                                 if the user asks something which is not                                 in the scope of the questions you                                 trained it on then it can fall back on a                                 knowledge-based search which is                                 basically you know what we will show                                 today or which is natural language                                 search so you always need to architect                                 it like that and of course if even that                                 doesn't work because it's not guaranteed                                 it can always fall back on you know like                                 a human agent order so that still works                                 so and just to complete the story I mean                                 there's also something which we see we                                 will see in a lot of talks and well in                                 buzz words as well where you know the                                 focus is on let's say web sites such a                                 product based search again this is                                 something a bit different than web                                 search or Enterprise search because here                                 the focus is on finding products and not                                 answers so you're looking to find                                 products and and your criteria is                                 usually let's say rankings or reviews                                 that have been provided by other users                                 so things like you know learning to rank                                 and things like that those kind of                                 libraries work very well for product                                 based search because we are relying on                                 reviews rankings but they're a bit                                 different than you know because in the                                 enterprise search you hardly have people                                 who are ranking let's say the all                                 providing reviews of what answers they                                 receive so with that background so what                                 Louie we'll go through let's say a use                                 case we had at PMI and showed the                                 different let's say trade offs that you                                 usually encounter while building a                                 natural language search based on that                                 using fully open source components so                                 that okay so Before we jump into the                                 details of our apply pipeline and what                                 we've been working on I'm just gonna                                 give you a quick overview of the use                                 case that we have at Philip Morris so                                 basically we have manufacturers are                                 working on the ground floor and they                                 work on daily basis on many machines                                 we've very complicated specific keywords                                 and the idea of our project was to to go                                 just beyond a boolean keyword or data                                 management systems where people would                                 just type in the keywords that they                                 would search and it would be like give                                 me let's say I work on this line of                                 production and I want to make I'm                                 working on cigarette marketing machines                                 making machines and then we would need                                 to go through the whole document to to                                 search for information so here we're                                 talking about hundreds to thousands of                                 operators and and the idea is that if                                 you have someone that is not used to the                                 way people are searching in the company                                 this might be a challenge for someone                                 that is that is reaching a company so                                 it's an example of the answers that we                                 would expect is something that that is                                 closely related to this so if we had                                 something like typical document                                 retrieval we would just type the the                                 query then if we were looking for this                                 kind of information like how many knives                                 are there on the drums it means that we                                 would need to go through all the whole                                 text and the whole and see here's it's                                                                                                       control have index of pages but                                 the ideas that we really want to have                                 this disco tentative search where the                                 user just type in his question and we                                 get through right into into the answer                                 so this is a typical question answering                                 task and a reference of quest answering                                 is to squat the data set that's the                                 Stanford question answering data set and                                 it's it's one hundred thousand question                                 and answers that have been labeled and                                 it's it's all it's all related to                                 Wikipedia articles so it's very open                                 domain and the idea is to use this what                                 like what could we what could we use in                                 this in this task to to apply it to our                                 use case one of the planning the funny                                 thing is that it's been state of the art                                 and I mean the state of the art actually                                 build the human performances so we've                                 been looking at the rqa which has been                                 built by Facebook AI research team and                                 the idea behind the Archaea is that is                                 two stage pipeline where at first we                                 would retrieve the documents that we                                 want to look at so that we don't have                                 too much to read and then we go through                                 the documents using neural nets to to                                 read the document and fat the answer                                 related to our question this is on this                                 is open source this is on BSD license                                 and the good thing is that we have a pre                                 trained model which we just can                                 basically use as black box so few                                 details about your QA so the document                                 retrieval part uses by run tf-idf i                                 really suggest that you have a look at                                 UF idea fish if you don't know what this                                 is but basically it's it's it's very                                 intuitive and it looks at the frequency                                 of words inside the documents and after                                 this so after the document retrieval                                 part we would get a set of pages or                                 document and then we would ingest this                                 into a neural net here it's recurrent                                 neural network                                 and it uses bi-directional units so that                                 we have information from the future and                                 also from the past                                 [Music]                                 okay so few words and this is just to                                 show you how easily it could be                                 implemented on your own corpus basically                                 in two lines we would get be done with                                 with the document retrieval by just                                 calling these two lines building the                                 tf-idf having this beautiful matrix with                                 that we can have the similarity with                                 with the query then we put this tf-idf                                 in the pipeline and and we also use a                                 model that we can just get online and                                 and we would have we would be able to                                 answer question either related to our                                 corpus or we could basically answer                                 questions that are related to to                                 Wikipedia now if you remember about the                                 use case that we had so the question was                                 that whether we could assess all the                                 paper and pain points that we had by                                 just not taking wiki articles but                                 instead of this ingesting our own                                 manuals so for that we use because you                                 cannot just take PDF and just interested                                 into the pipeline you have to read we we                                 use Apache which is actually so                                 that their mini crawler out there where                                 you could just crawl all the data inside                                 its eye inside the data path but the                                 idea is that here we want it to read                                 pages and not                                                          because then for the model it would be                                 just too much of memory so so we use                                 this this Java toolkit and just to give                                 you some some numbers so on the                                 reference paper the document retrieval                                 part had                                                                 at five sorry so the idea behind the                                 procedure at five is that in top five                                 documents we would have at least one                                 document that is relevant when we                                 applied it on our corpus it happened                                 that we we ended up with the                                        precision and                                                         that when you come to the stakeholders                                 and you you tell them about these kind                                 of numbers do not happy with it because                                 they want to have something like                                     they want to always be able to find                                 information for them                                              wouldn't be enough another thing is that                                 ok we're not providing the exact answer                                 all the time but we're not here we're                                 not doing voice recognition with not                                 using Siri or whatever the idea is more                                 about to be more granular in the in the                                 answer that we give and and that's why                                 we wanted to first prioritize the                                 document retrieval part and not the                                 reader part so because we wanted to                                 focus on this we introduced                                 elasticsearch to the pipeline instead of                                 the background child tf-idf and for                                 those who are not familiar with elastic                                 church I'm just going to give you quick                                 quick overview of elasticsearch so it's                                 basically a distributed switch engine                                 and it has many benefit but why we used                                 it is because it's highly scalable so if                                 we have thousands of users it would be                                 beneficial but also it has a very clean                                 API it's it's it's very easily used for                                 full-text search we can change the many                                 settings so for research perspective                                 it's it's it's it's very useful and and                                 and also another thing is that there                                 many people using it so this was good                                 for us so what we did is we completely                                 got rid of the tf-idf and instead we go                                 through an index that is elasticsearch                                 and you can just have it anywhere on the                                 cloud or on pram so we                                 added we didn't pull request on the on                                 the RQ a repo accepted the way it works                                 is is it's very simple you just make it                                 point to the the model of the the index                                 h                                                                 content that you want to go to to read                                 it can be anything here I'm just showing                                 the content but this could be also the                                 odd author the the name of the file when                                 it has been less modified so any kind of                                 field you could think any kind of                                 metadata that you could think of about                                 the the documents you could search in                                 and and you can also tweak the weight so                                 readers there's a lot to to to                                 experience here so using this we had a                                 jump of performance to                                             reader part and then in the end we had                                 something like                                                      basically the distance between the                                 answer that we're looking at and the                                 actual the the dancer that the answer                                 that we get from the reader part so if                                 we compare this to the reader part of                                 the reference paper on the rqa there has                                 nearly                                                              between the two but if we look at                                 closely what what we're getting from the                                 answer it actually happens most of the                                 time that the the answer is it's just                                 around what we're getting so if we look                                 at more of a context of the answer that                                 we're getting with we have like                                        the first results of true answer so                                 before before I give you the takeaways                                 and the learnings of all of this I just                                 want to show you what was the end                                 product in the end                                 so the idea is that we still have a                                 search engine where we could go through                                 the document we have this preview on the                                 right                                 we have filters on the left anything you                                 can think of and everything is automated                                 so if the file has                                 has metadata on about for instance what                                 line of product they would use then you                                 could leverage this and and and also it                                 it brings also the drq a part on the                                 front end so this is just to show you                                 how we we can try to address those pain                                 points and and how we combine the                                 document retrieval part with the                                 question answering task and and try to                                 build a search engine which we called                                 natural natural language search on on                                 this so the few takeaways from this is                                 that okay some some of most of the time                                 you will not get the exact match of the                                 answer that you're looking at but most                                 of the time you will have the right                                 context and if you don't have the right                                 answer at least you have the right page                                 or the right paragraph which is a great                                 thing and I think that's what most of                                 the people want we buy with the front                                 end I think we should never forget about                                 the user experience here so I mostly                                 talked about the back end but if we look                                 at the the user experience in search is                                 very important here and it's it's                                 actually as important as the back end                                 and we should always elicit eight and                                 it's it's it's more like a top-down or                                 approach where the user actually doesn't                                 know exactly what he's looking for and                                 we need to bring the user to find his                                 answer by himself and then what turned                                 out to happen actually inside the                                 company when we're talking to the end                                 user is that you know what would you ask                                 if you were in front of a human that                                 knows everything what would you ask him                                 to know about the information that                                 you're looking for and they would never                                 know what was they I think it's more                                 like we were used to a way to search                                 that we when we search on Google we type                                 keywords it's changing its going towards                                 a more cognitive way but it's going                                 towards this this direction but there is                                 there is a long path through this                                 I'm just gonna give you some some                                 guidelines about the future works and                                 and I really encourage you to go through                                 it and try to bring some some value to                                 what we've been working on the idea is                                 that we would want to change the model                                 the reader model and change it with the                                 state of the art now the state of the                                 art is Burt and it's actually the one                                 that is beating the humanik the human                                 performance and birds to give you some                                 ideas some feeling about what this is is                                 a it's basically a free training model                                 that you could try and do that you could                                 fine tune for any NLP task he has been                                 it has been built by the Google AI                                 research team and it stayed over for the                                 photo squid squad data set for the                                 challenge but the thing is that for us                                 it was taking a lot of memory so but I                                 definitely encourage you to have a look                                 and see so it's it's pretty                                 straightforward                                 they applied it on squad so if you want                                 to apply it for for the natural language                                 search it's basically you compute the                                 probability of a token being the start                                 talkin being the end and you just try to                                 maximize this despair of the su tokens                                 so it's just adding one layer above the                                 general bird model so that's it for us I                                 hope you guys enjoyed this token and if                                 you have any question please feel free                                 to ask                                 [Applause]                                 thank you guys any question where could                                 we get the slides I think for me is                                 information overload that's easy I think                                 we will share it put it wherever I think                                 the conference has some websites where                                 we share the slides but we'll probably                                 make it available on our github anyways                                 no I mean the whole idea is open-source                                 you know it doesn't make sense to say we                                 are open sourcing and then we don't                                 share the presentation you know so                                 that's not the spirit hi                                 did you check what you just find about                                 this this product where I am were they                                 happy yes so if most of the feedback                                 they were happy if I can give you some                                 numbers usually they were taking                                    minutes to search for the answer and                                 here they were saying that they would                                 gain five minutes in the search tasks so                                 they were happy and yeah yeah yeah in                                 general we try to apply it to other use                                 cases as well so this was specific to                                 factory workers well you know there                                 let's say I mean not the most technical                                 but we also try to apply to other use                                 cases like finding that it was more like                                 financial documents or where it was                                 financial analysts and things like that                                 and I think in general I would say it's                                 mix you know and I think one of the                                 things to keep in mind is like Louie was                                 mentioning in his takeaways the UI we                                 should never underestimate the UI you                                 know all the f                                                           they don't matter to the end-user what                                 they see is so they really appreciated                                 that they can see the feedback they can                                 they can see the preview of the                                 documents they can if it doesn't work                                 they always have a fallback where they                                 can you know see let's say the full                                 document and they can do whatever their                                 search so I think it's very important                                 what we see with chat BOTS as well and                                 things like that                                 fall back is very important whatever you                                 design                                 it's always good to give the users like                                 full control okay if it doesn't work you                                 can still access the documents it's not                                 late doesn't stop you but does it handle                                 multiple languages the question                                 answering or it just handles English is                                 English only or I think vrq wave we can                                 yes your cure is English honey but if                                 you if you manage to bring birth to the                                 pipeline I think you can go                                 multi-language yeah does it handle                                 semantics like or does it is it just                                 factual question answering like some                                 semi if we if the query contains some                                 semantics in question                                 so the do you mean and understanding the                                 technical keywords or do you mean                                 answering the semantics of of the                                 questions is that yes I think the way it                                 has been trained is they look at natural                                 language question so it will understand                                 through the model the the semantics it's                                 not knowledge graph or anything so                                 that's that's the whole point of the of                                 the reader dimension from financial                                 model I think we have not I think                                 semantics is like you know very vague                                 but I think what dr TV does is it                                 recognizes the context so it's a bit                                 more than just EF IDF where you are                                 playing with the frequency of the words                                 so i think even if you have the same                                 frequency of the words in two places in                                 the document it will try to because                                 that's the bi-directional part of the                                 RNN it is using you know where it's able                                 to go back to what was said before and                                 also a bit in front well you know so I                                 think that's the only thing it does it                                 takes a bit of the context in terms of                                 what is said before and after the actual                                 answer spann but i'm not sure if you                                 would call it semantics as in fully                                 understanding the context of the but                                 it's a bit better than just                                 even based frequency research is ok just                                 adding on my my knowledge is extremely                                 limited but when you are using neural                                 network I do not think you consider                                 semantics at all again depends how you                                 define semantics you know so here                                 semantics is a bit like looking behind                                 and what has happened before and what is                                 happening a bit in the that's how                                 language translation works as well you                                 know what you see is like autocorrect                                 autocomplete in this kind of search                                 engines is basically a recurrent neural                                 network which is looking behind what you                                 have typed before and you know what                                 users would usually type in that context                                 but I don't think it really understands                                 what you're thinking in your mind or you                                 know that that semantics is not there so                                 hello and are you using user feedback to                                 upgrade your knowledge base if a user                                 types a query and they happy with the                                 answer are you taking any any actions of                                 it no no absolutely I think that's a bit                                 like the key feature part of the user                                 experience where we are logging                                 everything that is being asked and what                                 we try to do initially is that at least                                 in the use cases when we roll it out at                                 least initially we do almost like a                                 weekly review of the logs to see what                                 questions are being asked and how we can                                 tune it better you know it's easy to say                                 it in theory difficult to do it a bit in                                 practice because once you roll it out                                 there is less it's a bit like you know                                 putting the right processes in place but                                 it's very important I think I suppose                                 it's okay so thanks there Ben Lewis                                 thank you very much
YouTube URL: https://www.youtube.com/watch?v=UJYrDw6I19Y


