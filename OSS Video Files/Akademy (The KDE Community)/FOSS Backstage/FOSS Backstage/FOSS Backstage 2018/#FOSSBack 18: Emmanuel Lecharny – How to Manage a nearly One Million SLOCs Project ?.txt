Title: #FOSSBack 18: Emmanuel Lecharny – How to Manage a nearly One Million SLOCs Project ?
Publication date: 2018-06-26
Playlist: FOSS Backstage 2018
Description: 
	Working on an open source project is certainly not easy, especially when it starts to be big. Past the excitement of the beginning, how do we make it going on in the long run?

What about a project that grows bigger and bigger, up to a point we are facing hundred of thousands of single lines of code? What about testing it across multiple platforms? What about the toolings that are needed – debugging, data migration, etc.? What about the documentation?

This talk is about the few simple rules that make it easier, and successful. It also exposes a few traps that are not so easy to avoid, and how to keep people involved in the long run.

More critical, it will explain how to conduct the project so that it’s still relevant after 10 years, in a moving industry.

Read more:
https://18.foss-backstage.de/session/how-manage-nearly-one-million-slocs-project

About Emmanuel Lecharny:
https://18.foss-backstage.de/member/emmanuel-lecharny

Website: https://www.foss-backstage.de/
Twitter: https://twitter.com/Fossbckstg
LinkedIn: https://www.linkedin.com/groups/8653059/
Captions: 
	                              good afternoon so we try to tell you a                               bit about what I've learned as a hard                               time working on a big project sad earth                               some missing pieces in into this                               presentation                               you probably have other expenses so feel                               free to complete what is missing it's                               not a real big deal                               so your project is like a cathedral and                                you have to be to make it shining and                                this is a difficult part it can quickly                                crumble if you don't do it correctly so                                the first question is our bigger project                                right now it's not necessarily have to                                be                                                                  project                                                                 year I will miss your project by a                                number of single line of code that mean                                code without commands and blank lines                                this is not necessary the Alpha and                                Omega of measuring project complexity                                but it gives you an ID on our bigger                                project so here what I've done is                                gathering many Apache projects you have                                a site on a page on the Apache website                                when you can check the project size it                                sounds newt dot io and you can see that                                you have many different sizes smallest I                                have found is Shiro which is only                                       and biggest as of today is OpenOffice                                which is more than six millions so you                                really quickly see that project are                                quite big those days Tomcat is final                                rate is                                                              you imagine that                                                     code project is big it's not that big                                actually and the risk that your project                                is pretty much looking like that if you                                don't manage it properly and you don't                                want that                                ok quite old I'm in my                                                prefer to be my                                                        but that means I started to work in the                                                                                                       totally different you did not have any                                IDE you were coding using VI or Emacs                                you didn't add bug trackers or very bad                                ones VCS version control was very                                primitive we were using a CCS or LCS you                                don't want to use it we didn't have mail                                or at least on projects because we did                                not have network either internet was not                                existing at least the way we are using                                it and knowing it right now so that was                                very different the big difference is                                that now we have internet we can search                                things if we don't know about a piece of                                software or library we can go on                                internet searching for it we are have a                                very good network everybody has a DSL                                that mean you can search something big                                distribution of Linux in a matter of                                minutes when it was ours when I started                                using in my internet on my telephone and                                it changed everything the other big                                change since the                                                    software movement and again that changed                                a lot of things the fact that we were                                able to discuss with all the people all                                around the planet about software makes                                you develop in a totally different way                                so we will see the way to go when it                                comes to manage big project and I would                                just like one example which is a project                                I am working on but it just to give you                                an idea of what we have done before                                going further discussing about the code                                what has to be done for the code and                                more important what is about the                                community so let me present you the                                Apache lyric project it's a certain of                                                                                                        I have worked on it                                                existed two years before and was before                                getting into a commission it's an LDAP                                server basically but we have added many                                of those things like                                studio which is LDAP browser and the                                elder PPI which is a replacement for                                jndi and others in your database that                                has been developed and so on and so on                                I've talked about slugs single line of                                code the project is nearly                                          line of code and I'm just talking about                                the code not about the commands and                                blanks because all the white will be                                  million and                                                             it is not one big monolith there are                                many sub project so main one is Apache                                 IDs which is already a                                                  of code the API which is a second                                 business biggest part is                                                 been split in order to be manageable and                                 then you have studio which is a browser                                 and so on so all of these pieces are                                 using each other and we have to be                                 careful to manage these things by                                 dividing the different element in order                                 to be able to manage them separately                                 instead of having to manage a wall thing                                 so the key is of course to make your                                 project modular that means if you want                                 to develop one side without breaking it                                 with every other parts it's easier if                                 it's separated of course you have to                                 design an API properly but as soon as                                 you have done that it's much easier you                                 can test it uniquely without breaking                                 anything and once the tests are okay you                                 can include it in                                                      you have a quick vision on how its                                 organized at the center of it you have                                 elder PPI which is based on Mina which                                 is an author project it's a network i/o                                 subsystem and above it you have Apache                                 IDs depending on the API which is                                 depending on Mina and it's depending                                 maybe but which is a database and also                                 jellybean which don't know that and so                                 on and so on so you can see you have                                 modular elements and each model element                                 itself is also built in two different                                 things                                 and the key is love layers you don't                                 build elements without designing                                 different kind of flavor and here is                                 what we have for Apache das the top                                 layer is a network and then you have a                                 back-end subsystem which has an API                                 called intercept of savage chain and                                 then under the last layer is a database                                 it's not all in Mina which is a network                                 network part then we have also layers so                                 each component each module is their it                                 and it's very important because again                                 between each layer you have an API                                 certain things layer is one thing so one                                 thing is to be able to add some                                 components here we are talking about                                 plugins plugins is very helpful you can                                 think about maven for instance which is                                 big machine but methods have many                                 plugins and plugins help maven to become                                 more powerful you want to do something                                 specific you don't have to know the                                 inners of maven you just have to know                                 how to address those elements and sees                                 what a plugins is good for we are using                                 many plugins in Apache es in order to be                                 able to have modular and easier                                 evolution system ok that was just to                                 give you an idea of what we have done on                                 Apache ideas just to tell you ok I'm not                                 trying to sell you a patch Ilyas                                 whatever just for me an example I'm also                                 working on open LDAP which is a                                 different system still an LDAP server                                 which use a different material modular                                 structure but still it's all all the                                 same kind of code so we are going to                                 talk about the code now this is my                                 computer in front of my fan anyway the                                 first come out I will say that you have                                 to make your code readable if you can't                                 read the code it's much more difficult                                 for people to get into the code and when                                 I mean readable it means don't necessary                                 uses mother's language that has been out                                 in the last                                                           smart                                 a lot of things into it type control and                                 so on but at some point you want to be                                 able to get some new comers who are not                                 necessary knowledge knowledge about this                                 language and this is probably was a                                 common language like Java and C are                                 still using used to them because they                                 are easy to access second things it's                                 good to have a readable code but code is                                 not all you have to come on the code I                                 know there is a controversy about                                 commands commands I use less commands                                 don't get older I mean if you have a                                 commands that he was good enough two                                 years ago but the code has change and                                 the comment is still the same then the                                 comment is not in the same page it's not                                 commenting what the code is doing who                                 cares because anyway you are not                                 executing the commands you are executing                                 the code so it's easy to fix the                                 commands in the command is bad it's not                                 breaking the code your code anyway so be                                 sure that you come out your code and                                 even for you of pieces of the epithelia                                 server i wrote six or seven years ago if                                 i read the code I don't remember what                                 I've done back then I have to read the                                 comments I've added to remember yes I                                 remember C C's because I babble and                                 always the same story so don't remove                                 commands from the code and add them this                                 is a good example here is a page of a                                 note book written by mathematician and                                 engineer mathematicians Raveena                                 Ramanujan he never committed anything                                 into his page because it was just about                                 writing the results an English                                 mathematician spent                                                      decoding those documents not necessarily                                 the best idea so you could without                                 comment it's pretty much like a math                                 book without any explanation of course                                 you may not agree doesn't matter and                                 also a way to have you caught being                                 readable it's to use a formatter                                 that in some way removes the concern but                                 you are somebody pushing some patches                                 and the patches are not formatting                                 same way than those a part of the                                 project doesn't matter because you                                 integrate the patches and then you                                 execute the formatter and bam your card                                 is still on the same style so and also                                 if somebody told like you start it                                 doesn't matter again you can't format                                 itself but as soon as it's injected into                                 you your code base you have your                                 formatter and it's easier to provide a                                 format files that can be injected into                                 each IDE because then you don't have to                                 take care of those things which are                                 pretty painful one of the reason why the                                 formatter is important when you do add                                 if it's extremely painful to have to go                                 through many lines that are different                                 because one guy's using tabs other guy                                 is using space or you have new lines all                                 over another aspect which is quite                                 annoying and I must admit that an open                                 LDAP it's something that is annoying me                                 for some reasons variables are very                                 short in opening up like one or two                                 letters it's very difficult for me and                                 probably for every coders that does not                                 know the code very very well what PT                                 means or what CN means I mean it's not                                 talking so you're better using better                                 name like it's a pointer colic pointer                                 it's easier I mean we don't have like in                                                                                                      memory you have                                                    computer those days so I mean you are                                 not too compiler you are reader all the                                 things that helps check your code it's                                 it's easy to remove to have some code                                 that will generate a null pointer                                 exception just because you have not                                 checked something and any code checker                                 will tell you okay here I'm not sure                                 that it's good your verbal has not been                                 in initialized and you may I get a new                                 pointer exception its Savior bottom many                                 times I've been ran it on on the project                                 and I've found dogs that may have been                                 found by users later but it's still                                 better that you are finding people                                 releasing it and the last part of the                                 code code which is important is logging                                 as soon as your code is released it goes                                 in production of free and then this is                                 where it blows and when it blows you                                 want to know why so this is the logging                                 that we provide you with this                                 information you know that user don't                                 give a lot of information when they say                                 ok my code is not working and you don't                                 know anything if you can tell them ok                                 can you provide me the logs you get some                                 informations that are valuable to                                 analyze what's going on it's difficult                                 to write a good logging system I mean                                 you might generate too much logs and                                 then it's difficult to analyze so be                                 very careful it takes time but it helps                                 if we get out of the code then we're                                 going to talk about the toolings and                                 everything which is around the code and                                 your IDE is important again we are not                                 in the                                                                 now it's I mean it's not any more good                                 ID ID are offering a lot more than just                                 adding codes are just also helping you                                 remodelling refactoring your code they                                 are integrated with debugging tools                                 something that VI is not so whatever the                                 ID you prefer it can be intelligent be                                 eclipsed can be NetBeans whatever works                                 I mean as soon as you are comfortable be                                 sure that your system can be built on                                 any of those IDE and be sure that the ID                                 is also connected with your build system                                 version control is absolutely critical                                 right now you can't develop a system                                 without a source control system I'm                                 using it right now not that I love get                                 or whatever but it's today's control                                 system it's much better than subversion                                 that I was using before it's not a fight                                 I mean there is no mean fighting gate                                 versus subversion whatever                                 you are going into a project it's likely                                 to be get anyway so better use it than                                 ignoring it and stick going on with                                 subversion or whatever CBS CBS died by                                 the way build the built system is also                                 one of the cream part of a big project                                 you have to have something which is                                 available can be Navin can be great can                                 be whatever works but as soon as you                                 change some code you want to run the                                 build system to see if you get some                                 issue or not                                 quickly on your computer it can be on a                                 CI doesn't matter I don't really think                                 that - CI is a good place to test your                                 code before committing you first have to                                 check on your computer and as soon as                                 it's ok you can commit it the CI is                                 there to catch other issues like does it                                 work on Windows and Linux and Mac OS or                                 whatever then you have something that                                 works good                                 you have                                                                 deliver in API inserts are the best                                 thing for users they just have to to                                 download a PM or Debian installer or                                 whatever works for NSI on Windows and                                 install it on their computer this is the                                 way it works if you don't if you don't                                 provide a APM when your car is quite                                 difficult to use of coffee it's an API                                 that's a different story now you can go                                 up higher level IP and license when you                                 are delivering a project you are                                 generally integrating some third-party                                 libraries and then you have to check if                                 the saucer party libraries are good for                                 your project compared to your license                                 for instance apache license is not                                 compatible with LGPL or GPL so you have                                 to be very careful that any of your                                 dependencies are compatible with apache                                 license and what i mean certainly                                 Betances i also talked about transitive                                 dependencies you have tools that tell                                 you okay this library is itself using                                 this library which is itself a bla bla                                 bla bla and you have to check all of                                 those and you better do it before                                 releasing because when you when                                 release it's too late to be extremely                                 faithful to have to roll back a release                                 just because there's some incompatible                                 license besides the fact that it could                                 cause some issues legal issues with big                                 companies so check your IP check                                 licenses before I can have an                                 interesting story once you know                                 something like seven years ago some guy                                 pushed some cards okay correct for some                                 word crypto things and here is the code                                 I want to push to your rapist traitor                                 fine interesting we are missing it so                                 let's check it and what I did don't you                                 I just took a piece of the code and went                                 into Google and searched it and stron                                 Jennifer found the exact same code but                                 with son license on top of it so get                                 just rename the functions rename the                                 variable so that the structure was                                 exactly the same so you have to do your                                 due diligence and it's it's painful but                                 you really have to do it Wiki is the                                 place where you will put your internal                                 documentation the point is if you have                                 some complex structures complex code you                                 want to be able to explain it once                                 instead of explaining key explain it                                 every time someone is asking you about                                 it it's easier to say okay if you want                                 to know how it works then go to this                                 page on the wiki with it and you are                                 done the real difficulty with wiki is to                                 keep it updated if you don't it don't do                                 it for others do it for you sir                                 sometimes it's extremely helpful to                                 document and explain what you have done                                 to see if you have not missed or forgot                                 anything in your code bugs                                 [Music]                                 there's not much things to say about                                 bugs but you have to have a good tracker                                 and also you have to respect bugs bugs                                 are saying that there's something wrong                                 in your software even if the bugs is                                 invalid because it's it's not really a                                 bug it's some user not using your                                 software correctly does that mean you                                 maybe you API is not correct maybe your                                 documentation is not correct or whatever                                 so fixed bugs check check them regularly                                 and don't let them stay for years                                 meaning list is your main communication                                 point at least at Apache but should be                                 the same thing we are working with team                                 all over the planet now it's it's                                 command to work with guys in Pacific                                 Coast in USA Australia and you don't                                 want to walk up at                                                       conversation with someone who is in                                 Australia for instance it's not very                                 funny and if you have dreams in all over                                 the planet and mailing list because it's                                 an sakulos is a way to go plus you can                                 search making lists it's extremely                                 difficult to search a voice recorded on                                 a on a talk once it could be interesting                                 with that if you want to do some new                                 some changes in your code don't refrain                                 you to experiment you can branch easily                                 with source code and you can have big                                 experiment or smaller experiment was the                                 key here is to check something and shows                                 a community how it works and if it ok                                 then you integrate your experiment into                                 your code into your code if it's not                                 good enough you can ditch it it's not a                                 big deal but at least you give an                                 opportunity for anyone to try something                                 different and also this is something for                                 all projects the cuts done to stabilize                                 and at some point nobody want to touch                                 it                                 sometime it's a good idea to rewrite                                 part of your code even your wor code for                                 some part of Apache yes we will rewrote                                 it four times the language you are using                                 like Java for instance is also evolving                                 so what we did in Java for is not any                                 more efficient in Java                                          ten it might be a good time to just use                                 new features to rewrite the code which                                 is antiquated two things that I want to                                 tell about code you might have a very                                 simple code which is you know on running                                 on one thread it's on several sites not                                 always the case every time you have in                                 synchronicity into your code it's going                                 to be complex and difficult so try to                                 limit it as much as possible sometimes                                 not possible anyway and the second point                                 is security security when I'm talking                                 about security is some time you have                                 security issues in your code and that                                 deserves some very important treatment                                 you open a CVE which will be shown on a                                 public mailing list later you have to be                                 efficient you have to be fast to fix                                 your security issues if you don't fix it                                 than me at some point user will be hit                                 by it and that's not what we want it's                                 put a very bad light on your project                                 okay I will talk now about much more                                 important things our home to manage a                                 community around a big project if you                                 have an open source project what you                                 want is to be able to attract new                                 developers for a big project is more                                 difficult because of course so code is                                 impressive entering into a project which                                 is                                                                 million loyal code it's quite difficult                                 you don't know where to start with so                                 the first thing to do is ok attract                                 people yeah it's very interesting you                                 can improve this part of your code if                                 you are interesting and I can help you                                 this is a way to do it and it's not easy                                 because we prefer code instead of                                 talking to people and Pat them in the                                 back but you have to do it that's so                                 that's part of your duty as a project                                 manager or whatever you are one thing I                                 just hate about code and about people                                 who explained that everything in the                                 code here is people                                 telling you read the code if you just                                 ask you a question about how it's doing                                 this and that you just have to read the                                 code that come on guys I can read the                                 code but the cut can be complex and if                                 the code is not come out or or if there                                 is no specification it's very likely                                 that your code is bringing some                                 semantics that I don't know it's it's                                 not my code and I will spend ten times                                 the time to understand what you have                                 done when you could have explained it in                                 two or three minutes I'm not stupid                                 but I'm smarter if you explain me what                                 you have done so don't let people on                                 your project to tell others read the                                 code it's not a way to manage a project                                 a certain aspect of a project expecially                                 on open source project is that you have                                 people coming in create helping you for                                 one two years three years and at some                                 point they are doing something different                                 it's that's fine that's the way we are I                                 mean you are not committed to a piece of                                 code for forever the thing is that as                                 soon as a person has gone then you have                                 to catch up with what you have done                                 because this is now your code so you                                 have to find someone to catch up this is                                 through one of the reason why it has to                                 be documented at some point another                                 difficult a space is ego we are open                                 source people so we do have some ego at                                 some point and this has to be you know                                 moderator that's good to have any a good                                 ego big ego but you have to be careful                                 too much ego just clean your project so                                 keep it under you know a certain level                                 users of your project under gnomes or                                 trolls there are people that are                                 explaining you that they are not very                                 happy with the way your project is                                 working and also there are some                                 sometimes and more more frequently that                                 you think very happy with your project                                 and that's a turkey or a be happy to                                 have users that give you some some good                                 or bad                                 feedbacks good feedback the old way                                 equals way is good for you because it                                 makes you feel like you have done                                 something good but bad backs it's also a                                 sign that something is not very good in                                 your project and you probably have to                                 fix it so take your user Anna as an                                 asset to your project if you don't have                                 users that mean you you don't have a                                 project so what about roles in the                                 project usually you just decide that                                 someone will be the release manager                                 another one will be the project manager                                 and the one will be part of anyway you                                 have many people on the project you want                                 everyone to be responsible for one part                                 and the best of it is just to have                                 people taking responsibility for one                                 part ok I'm going to do the risk                                 management for the next two years that's                                 fine                                 if you force somebody to do it then at                                 some point you might leave so manager                                 works correctly                                                                                                        are in the project for                                               does not mean you are going to do                                 everything you are not going to                                 micromanage people know whether you are                                 confident with the capacity to manage                                 the parts are taking responsibility of                                 and that sign or you are not and you are                                 not at some point you are going to be                                 alone on your project because you are                                 doing everything don't do that and on a                                 big project anyway it's not possible                                 welcome contributions they are good for                                 your project Evans the smallest type who                                 fixes a good things and a welcoming                                 contribution is also a way to be                                 attractive that mean you are inclusive                                 very long discussion we had on many                                 other projects but should we accept                                 somebody as a committer or not what a                                 question I mean of course you should                                 even one commit should be enough to be a                                 committer the key here is if you want to                                 control the project so that bad                                 committers we say bad computers stupid                                 computers that are not as good as the                                 other ones might                                 I'm your project well so you just can                                 really ask them to revert and if you are                                 very very careful you can just switch                                 your RTC reviews and commit but in any                                 case with using committee contribution                                 or just putting a high barrier for                                 commuter ship is a mistake                                 so the easier you make your commit                                 accessed some the more successful your                                 project is going to be and that what you                                 have to untie those all those things                                 mean your project is going to grow so                                 you have to be really for all those                                 things that are going to to be added to                                 your project if somebody is dumping some                                 some code you have to be sure that you                                 are going to be able to maintain it and                                 you have to anticipate before accepting                                 is a big contribution if you have to to                                 to have a new install on a new platform                                 you have to be sure that somebody will                                 understand how the Builder packaging                                 tool is working it's all about                                 anticipation don't do things that you                                 are not getting ready to maintain in the                                 long term another aspect of a project                                 and we can see on many milling lists                                 people you were yelling at users yelling                                 at other commuters fighting and so on                                 people are making mistakes that's fine                                 and I think that empathy presentation                                 this morning is pretty much about this                                 you have to be very kind and respectful                                 to other people ok you are not going to                                 have a drink with them you are not going                                 to spend all it as with them that's fine                                 but at some point you don't have to you                                 just have to be kind on mailing lists                                 respect what they are done even if it's                                 not very interesting the project is                                 likely to be better at some point you                                 just have to be sure when to know when                                 you have to say no no we can't do that                                 and no means you probably can vote at                                 Apache we say we should build consensus                                 some time constants is not possible if a                                 consultation                                 then you can vote we can vote for or                                 against and sometimes it's against in                                 certain years we had three votes three                                 negative votes that's not enough not not                                 a lot I mean and it should not be not a                                 question about leadership everybody                                 knows it's big ESL sorry there is a                                 mistake                                 big ESL means being evil benevolent                                 direct dictator for life                                 should we have four projects somebody                                 with leader like linear solar phone only                                 for Linux it's not necessarily a good                                 idea again for Apache directory server                                 the guy who started the project left it                                 seven years ago and actually we had four                                 different PMC chairman it's not a big                                 deal because you aren't just managing                                 the project you are not managing the                                 people that mean you are you have to be                                 sure that everything is done following                                 the rules and not trying to tell people                                 what to do and how to do it so if you                                 just want to know if you should have one                                 person leading the project or not that's                                 a good question of course if you want to                                 have people that come to your project                                 you have to advertise it and                                 advertisements that means on doing a                                 talk like I'm doing it brings some light                                 on your project on some ways you can                                 talk to all the commuters you can talk                                 about other projects on your project but                                 at some point you can see connection                                 being made oh you are writing a new API                                 for for LDAP so I'm going to use it and                                 as soon as people are using it then                                 maybe they are going to find some bugs                                 they maybe just patch it and so on and                                 this is the best way to do it talking                                 about it tweeting about your project                                 mailing about the project or even                                 writing a blog about the project is how                                 you advertise your project                                 raise your project frequently it's best                                 way to show that it's live if you                                 release a project every three years that                                 mean you either you don't have bugs in                                 your project which is very unlikely or                                 you are taking bugs very seriously so                                 every project will tell Kay once every                                 three months is okay one every six                                 months is okay it's it's all about you                                 decide what I mean it's your call I am                                 NOT here to tell you you should release                                 every month sometimes not possible but                                 remember that reason often is more                                 likely to to provide some some bug fixes                                 to your users another way also to                                 [Music]                                 advertise your project is to bring the                                 light on it and here for us was true to                                 send the project to a can of it's the                                 best open source ICT application                                 whatever it's an eclipse                                 I don't know the name in English sorry                                 but anyway you you get a stamp this is                                 the best project that's fine this is                                 good for the guy walking to that project                                 it's good for the project itself it's                                 something that make people know that you                                 are doing something interesting for them                                 maybe that's it at the end your project                                 is pretty much like this fake figure you                                 are just turning plates and you really                                 want to avoid any of them to fold on on                                 the on the ground and bread and it's not                                 easy but it's you have tools and you                                 have ways to do it so that's one of my                                 talk about it thank you yeah thank you                                 very much are there any questions I have                                 one so what are the best practice to                                 introduce test-driven what are the best                                 practice to introduce test-driven                                 development and to enlarge the test                                 coverage in open source project you need                                 tests of course I mean you have to have                                 unit tests all over every every piece of                                 your code at least every piece of you                                 API should we have unit tests what we do                                 is generally as soon as a bug has been                                 filled in we are using JIRA we are                                 trying to cut it as unit test to be sure                                 that it will not reproduce again and the                                 second thing is that you need a CI                                 system where juhi using Jenkins it's                                 quite helpful to to check that it works                                 on many platforms so this is pretty much                                 what what we do there are also others                                 other way to do it                                 a guy presented something interesting                                 but testing doing some QA and so on but                                 everything that that the project would                                 be to be safer is good enough for me                                 so you talked about the issue of whether                                 it's a good idea to have a benevolent                                 dictator for lifetime in a project or                                 not my personal opinion is usually                                 that's not a deliberate choice it either                                 comes to being so if there is such a                                 person who founded the project and has                                 such a charisma to fill out that well                                 the personal decision may be but if                                 there isn't any person suitable for that                                 role it just won't happen that there is                                 a dictate of a lifetime so usually it's                                 not a deliberate choice it's just an                                 historic artifact or maybe you can do                                 something different the person who is                                 responsible from one part of the project                                 is also responsible to ask about a way                                 to manage this part I mean you don't                                 have to add one person taking all the                                 decisions decision can be collective at                                 Apache directories ever we we don't I                                 mean we don't have a leader we just have                                 you know some time questions some time                                 you know even if you have been on the                                 project for fifteen years or seven years                                 that like me I know that some other are                                 better than me on on some part of the                                 project and I prefer asking them before                                 doing any modification you know it's a                                 whole kind of respect you have to pay                                 them they came to help you so it's                                 important to ask them if the                                 modification you are doing is good                                 enough there are new peers there are not                                 I lower or higher I mean this is the way                                 I feel it I'm not a genius - so maybe                                 you know for lioness it works but it's                                 much much much smaller than I am so but                                 it can work I mean we are probably you                                 know living in a world where we really                                 want a price down to a king or dictator                                 and and dictator and prisons are talking                                 together satisfied but this is not what                                 we are as human being so there is no                                 reason we should have a dictator on the                                 project in my opinion again                                 so I am a lot of what you're saying                                 seems to me to apply to smaller projects                                 as well sorry a lot of what you're                                 saying seems to apply to smaller                                 projects so it's some of the points                                 you're making it just clearly generally                                 very good practice you know writing logs                                 and those kinds of things but my actual                                 question is what are there any large                                 projects where you would Maya the the                                 result or things that you would change                                 about the project here and if you had a                                 magic wand because you kind of discuss                                 the problems you're saying and the way                                 you perceive it but do you see anything                                 outside your initiative that you think I                                 wish we could do it that way                                 there's kind of FICO's so it's difficult                                 for me to understand but your question                                 is do you have do I have some yes yes I                                 understand                                 I would like to have more participant in                                 my project for obvious reasons it's                                 difficult when it's old project and                                 that's one of the key not talked about                                 it how you enter on a big project big                                 project are all project and and                                 intimidating I don't know how to get                                 more people involved it's especially for                                 all project talking about open LDAP for                                 instance which is                                                       in C that mean younger kids don't do see                                 right now they are using much modern                                 language as Kara whatever and it's                                 difficult to attract people that don't                                 know C they're scared of the project or                                 so so what I would like to have is a way                                 to make the project easier or I mean                                 more comfortable to get in so that one                                 thing another thing                                 when it's a big project I mean you have                                 cutting a release it's three days                                 process for smaller projects I mean you                                 can release in one hour when I'm                                 committing something I have to wait                                    minutes or                                                            pass and such something that I would                                 like to get fixed it's it's not simple                                 especially if as I said every time you                                 have an issue you add a new test that                                 mean you are adding some some some delay                                 on on the testing at the point where                                                                                                          commit this is something we would like                                 to to get rid of but it's not easy that                                 means probably slicing the project in                                 different parts so we just have to test                                 one single part without to take care of                                 all the parts on such another story I                                 don't know if I answer your question or                                 okay okay thank you very much similar a                                 misdeed yeah
YouTube URL: https://www.youtube.com/watch?v=gtzrLxZc9EA


