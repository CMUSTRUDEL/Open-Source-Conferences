Title: #FOSSBack 18: Mark Thomas â€“ Community anti-patterns
Publication date: 2018-06-22
Playlist: FOSS Backstage 2018
Description: 
	Drawing on 15 years experience in open source from contributor through committer and infrastructure volunteer to Director (with various other roles along the way) this session will explore patterns of organisation and behaviour that may be indicative of a community heading in an unhealthy direction. The session will also look at the potential corrective actions that can be taken, both at a community level and an individual level, to attempt to correct these patterns.

Read more:
https://18.foss-backstage.de/session/community-anti-patterns

About Mark Thomas:
https://18.foss-backstage.de/member/mark-thomas

Website: https://www.foss-backstage.de/
Twitter: https://twitter.com/Fossbckstg
LinkedIn: https://www.linkedin.com/groups/8653059/
Captions: 
	                              my name's mark Thomas I'm primarily a                               committer on the Apache Tomcat project                               but I've also taken on a few other roles                               at the SF over the years involved in                               Commons Dubbo helped out on                               infrastructure and probably most                               importantly for this I'm one of the                               foundation directors and in the role of                               director one of the things we do is                                Apache projects record every three                                months on the current state of their                                project and as a director there are a                                number of things that when I read in a                                report a particular phrase or a                                particular description it generally                                comes with a oh no here we go again                                and the purpose of this talk is to try                                and share some of those ideas some idea                                of the sorts of things that tend to act                                as warning signs for us for open source                                projects at the perhaps heading in the                                wrong direction or heading towards some                                sort of trouble so Apaches got a wide                                range of projects depending on how you                                count it it's                                                          are struggling some are doing very well                                so we're very healthy some not so much                                and there are some common themes so                                hopefully by sharing those common themes                                we'll be able to help some other                                projects I should stress these aren't                                the SF views there's certainly not my                                employers views these are my personal                                impressions as somebody who's reviewed                                well that's safe we've had three to a                                half years                                                             a thousand project reports easily by now                                so it's very much what I've taken from                                looking at those reports so let's look                                at some specifics first of all releases                                in my experience releases are always                                catalysts for activity whatever the                                activity state of a project is if you                                have a release then you automatically                                get more activity users download the                                products they install it they might ask                                a few questions if you're really lucky                                they might report a bug if you're                                extremely lucky you might get a patch to                                go with it but they're always a catalyst                                for activity and without releases                                well what's the point i I see projects                                that have been ticking along for you                                know getting on for over two years and                                they haven't had a release but how is                                that going to encourage users hey yes                                there are some users that will download                                the source code and build it from source                                but the majority of users don't do that                                majority of users want the binary and if                                you're not doing releases you're not                                providing the binaries you're instantly                                cutting down a huge proportion of your                                user base so releases are vitally                                important and they really should be easy                                in the tomcat project we do monthly                                releases and I would say one of the most                                important useful things we did as a                                project and we did it about four or five                                years ago now was taking a long hard                                look at the release process and do                                everything we could to automate it now                                it's not completely automated there are                                a few places where there's some manual                                steps but they're very very trivial and                                to give you an idea when I started on                                the Tomcat project I tried to build                                build it from source and I was really                                pleased that I'd done it it was three                                months later I realized I complete built                                completely the wrong thing I was using a                                totally different version of one of the                                modules and the first time I did a                                release it took me days to figure out                                what I was doing and releases were                                always a little bit painful so we did                                some work on that and about                                          ago we had a security vulnerability so                                we had to release everything which at                                the time was five versions and it was                                just after I'd sent the notice out                                saying yet the final version is                                available it's all good to go eyes about                                to send the vulnerability announcement                                out and somebody pipes up on the dev                                list um but there's this regression it's                                really really badly broken not at all                                drat need to redo the whole lot and it                                took me less than an hour to completely                                 cancel the old releases fix the problem                                 and re-roll five whole releases but that                                 was because of the time we put into the                                 automation and what I see as a director                                 with some struggling projects is will                                 say no if you could get a release out                                 that would really help yes but we                                 haven't got the time                                 nothing but it shouldn't be that hard                                 really it really should be dead simple                                 to get a release out so what I would                                 urge all projects to do is your work on                                 your release process make it as smooth                                 as you possibly can because whilst you                                 might have lots of people available now                                 at some point in the future as the                                 project matures as the user community                                 and the development community does begin                                 to shrink as they inevitably well then                                 you still won't be able to get releases                                 out and the easier you can make the                                 releases the better it'll be and the                                 longer your project will be able to                                 survive there are there are projects at                                 Apache at the minute they're in the                                 position where if they could get a                                 release out they could carry on if they                                 can't get it they can't get a release                                 out so they're probably going to end up                                 in the attic and that's what's causing                                 them effectively to be retired and it's                                 a really simple problem to solve if you                                 solve it now when you've got the time to                                 look at it next one on Sokka is adding                                 committers as a general rule I would say                                 the lower the bar is the healthier the                                 community taking another example from                                 Apache the Apache subversion project has                                 a very very low bar to commit a ship you                                 come along you provide a patch write a                                 couple of patches there's a pretty good                                 chance that somebody said oh right great                                 here you go but there's no point of                                 supplying your patch you've got the                                 commitment you apply it now granted they                                 they grant you permission to do that one                                 to a narrow area but they only enforce                                 that socially not technically which I'll                                 come on to in a minute                                 and it's really predicated on the basis                                 that it's all the source code in version                                 control                                 if you mess it up we can undo it in it                                 it's not that big a deal                                 back when I joined the tomcat project a                                 little bit later I joined the PMC which                                 meant I could go back and look at the                                 private archives and while I was doing                                 that I came across the thread where                                 there the then PMC was currently was                                 discussing me becoming a committer                                 and one of the comments was absolutely                                 spot-on it was yes most of his patches                                 are fine                                 occasionally they're completely off the                                 wall it's like he doesn't have a clue                                 what he's doing with Java and actually                                 yes that was correct I didn't I only                                 just started using Java and I was                                 literally teaching myself as I went                                 along and there's one in one patch I                                 submitted that had like a page of code                                 to replicate searching for a string                                 within another string only had looked at                                 the API Docs and yeah it's already there                                 but I just reproduced except didn't have                                 the experience but what the person who                                 made that comment settles but that's                                 okay                                 if he messes up I'll just veto it and                                 they made me a committer and as it                                 happens I didn't mess up at least not                                 that badly from that point onwards but                                 there was a recognition that it was okay                                 to take a risk because if I did do                                 something wrong you'd be able to reverse                                 it you'd be able to undo the change and                                 the sorts of thing that caused me to                                 raise my eyebrows and start getting                                 worried is when I see projects starting                                 things like oh we have a new camp we                                 have a checklist to decide whether or                                 not we're going to offer to make                                 somebody a committer and normally what's                                 happened is some news proposed somebody                                 for it to be a committer and somebody                                 else's oh no that they're not quite                                 ready they don't have enough experience                                 they don't we haven't done enough of                                 this they haven't done enough of that                                 and there's somebody else to say yeah                                 but so-and-so never did that and we made                                 them a committer                                 and they'll end up being quite a long                                 protracted argument and the solution                                 nine times out of ten I know let's                                 document some nice objective criteria as                                 to what what where to set the bar as to                                 whether somebody should be a committer                                 or not and it sounds like a great idea                                 for about                                                              at it a little bit more closely because                                 oh you have to have at least                                            well yes there's a difference between                                    commits and each introduce a big new                                 feature and ten commits that each fix a                                 tiny documentation patch Oh mmm okay and                                 what about the one line commit but it                                 fixes a really critical bug that's taken                                 you know months of effort to track down                                 solely well let's say that it's got to                                 be                                                                    back to subjective language again and                                 the                                 starts all over again because the next                                 time you try and propose a committer you                                 end up arguing over whether the commits                                 are substantive or not so it doesn't                                 help the other issue is that the lists                                 of what you need to do to become a                                 committer always get longer they never                                 get shorter and eventually they end up                                 reading like you must have contributed                                 to the users list for at least a year                                 must have implemented at least three                                 major features must have fixed                                         must leap tall buildings with a single                                 bound and it's just ridiculous                                 and it's nearly always a sign of a                                 project that is being fairly insular                                 fairly suffering and not reaching out to                                 the wide pool of people that could                                 potentially contribute so whenever I see                                 committed checklists my recommendation                                 always just throw it away in Tomcat and                                 all of us have yeah we have all have our                                 own particular bars I have a micrometer                                 checklist as it were is fairly simple if                                 I see a patch coming from a name that I                                 recognize that probably means it's time                                 to make them a committer                                 because they've done enough in the                                 project that I recognize their name and                                 I look at that and I know the patch is                                 going to be of a reasonable quality but                                 they've probably done more than enough                                 actually to become a committer and that                                 that's as low as the barrier get so                                 couple of patches and then we'll offer                                 to make you a committer                                 the other thing that I do look out for                                 is the directories when projects haven't                                 added committers for over a year that's                                 again a sign of well you know look life                                 gets in the way people's priorities                                 change committers generally do tail off                                 over time if you're not constantly                                 adding new committers then at some point                                 you're going to run out so again we look                                 for projects that haven't been that                                 haven't been adding to their community                                 aren't seeking to grow their community                                 as a sign of something that might might                                 be going wrong again it's not going to                                 go wrong tomorrow but long-term it does                                 pose a risk on the topic of committers                                 dominant committers is another potential                                 issue and this is something I worry                                 about in Tomcat because I really I'm the                                 only Tomcat committer who is paid to                                 work on Tomcat full-time and yet the                                 other committees are paid to work                                 Tomcat that they've got other parts of                                 their day job my day job is pretty much                                                                                                         I always have at the back of my mind is                                 it would be very easy for me to force                                 stuff through on Tomcat the way I think                                 it should be done and it really what it                                 really comes down to is the speed of                                 decision making so what I look for what                                 I trying to stop myself doing what I                                 look for in other projects is if a                                 project decision needs to be making for                                 example Tomcat is talking about shall we                                 move from SVN to get is that a decision                                 that somebody says oh I think we should                                 do this                                                           objections crack on I'm gonna do it or                                 do they allow enough time for the                                 discussion do they stay silent long                                 enough for everybody else to have an                                 equal say in the discussion and one                                 thing that it's very easy to do is if                                 you're on a project full time is                                 instantly respond to every message on a                                 topic that you care about and you end up                                 dominating the conversation and again                                 it's stopping you you look is that                                 happening if so that's potentially a                                 warning sign now it's not necessarily a                                 going to cause harm to the project                                 directly but what it can do is it can                                 put other people off and everybody can                                 start looking towards that one person                                 well what the science I think what do                                 they think and you end up with the                                 community is always looking to one                                 person for where should the project go                                 what should happen and that's not really                                 certainly at Apache how things event to                                 work it's meant to be collaborative it's                                 meant to be consensus based and you what                                 you really want is the people able to                                 say if they disagree with that one                                 person because they're not going to be                                 right all the time say no that's wrong                                 we don't want to do it like that we want                                 to do it like this so as I'm looking at                                 mailing lists for projects as I do there                                 their monthly reviews what I'm looking                                 for is who posts the list most often and                                 what sort of one of the proportions of                                 those posts and when I see somebody                                 posting far more than anybody else then                                 I sort of tend to dig into it and look                                 so you know are they allowing time for                                 other people to have those discussions                                 or are they dominating the project and                                 if they they are dominating it and                                 riding it then it's a well maybe back                                 off a bit give other people a chance                                 give other people a voice                                 and try and encourage other people to                                 step up right so moving on from                                 committers want to talk a little bit                                 about tooling next and really that this                                 is related to process and some of it                                 stems from the time I've spend                                 volunteering with infrastructure team                                 occasionally what we'll get as the                                 infrastructure team is a request that                                 says please could you configure JIRA                                 with this special custom workflow and                                 we'll get about a three-page document                                 that sets out each of the                                             issue has to go through who's allowed to                                 transition the issue from what step                                 stage to what stage at what point and a                                 whole bunch of rules and there's a                                 couple of things I don't like about that                                 first of all is it takes time for our                                 valuable infrastructure staff to                                 actually set all of this stuff up                                 secondly experience tells me in about a                                 week you're going to ask us to change it                                 because it wasn't it wasn't quite what                                 you really meant or having tried it in                                 practice doesn't quite work the way you                                 want and thirdly at some point in the                                 future on a semi-regular basis you're                                 going to need to do something to one of                                 those issues that your workflow won't                                 let you do and the only way you'll be                                 able to do it is so infrastructure could                                 you please change the state of this                                 because we need to do X and we can't                                 because the workflow rules don't let us                                 and it's ended up enforcing this rigid                                 process which I don't think particularly                                 helps at least not the technically                                 enforcement it's fine to have a process                                 fine to have a standard way of doing                                 things but it's also good to have the                                 flexibility now sometimes it's nice to                                 be able to break the rules also taking                                 another example from Tomcat for a while                                 we worked on a review then commit basis                                 which meant that if you wanted to make a                                 change to a release branch you were                                 required to propose that change get                                 three committees to vote on it and that                                 you had have a majority of people saying                                 yes that's an okay change to make before                                 you could then actually apply that                                 commit but that was the entirely social                                 enforcement there was nothing Technic                                 all ensuring that that happened so                                 occasionally                                 when we needed to bend the rules it was                                 easy we just did the commit so all                                 critical security issue is dead easy to                                 reproduce it's an obvious fix we need to                                 get the release out just do it                                 and yeah you do it with a I'm breaking                                 the rules this is why I'm breaking the                                 rules if any if anybody you know we can                                 go back and fix it later but this is why                                 I'm doing crack on a do it and it was                                 never an issue whereas if we've got                                 everything strictly enforced by                                 technical means then it makes all of                                 that a lot more difficult it slows you                                 down and it essentially gets in the way                                 you lose that flexibility and I'm seeing                                 similar things with Jakarta ee as its                                 moved to eclipse issues around every                                 commit at least in some of the projects                                 I'm involved in has to be reviewed by                                 somebody else before it can be applied                                 and that's great if people are paying                                 attention but when they get distracted                                 elsewhere you end up with a pile of                                 commits just building up because                                 somebody who's got the time can do and                                 it's simple truth typos changes it's                                 nothing particularly complicated but                                 it's all built up because there's nobody                                 to review it and that's not a                                 particularly motivating position to be                                 in so again the process is is causing                                 more harm than its that's into this                                 intended to fix generally social                                 controls work a lot better than people                                 think they will                                 so the subversion project as I said they                                 will if they make you what they call I                                 think is it partial committer or in                                 initial committee or something they say                                 you've got commit rights to this bit of                                 the source string actually technically                                 any Apache committer                                 has got commit rights to all of the                                 subversion source tree but what they                                 rely on is the social convention that                                 somebody isn't just going to walk in                                 make a commit and walk out they will                                 they will discuss it on the dev list                                 they will introduce it and that works                                 and HTTP DS bug tracker they use                                 Bugzilla and it's completely open                                 anybody can open a bug anybody can                                 comment on a bug anybody can close the                                 bug anybody can mark a bug as a                                 duplicate                                 what that allows is if you get somebody                                 who's particular inches well okay I'm                                 not much of a coder but you know I                                 really understand httpd and I know how                                 to configure it so what they can do is                                 they can go through the backlog and say                                 oh this looks like an interesting but                                 can i reproduce it yes he I can                                 reproduce it here's a better test case a                                 clear a test case or actually no I can't                                 reproduce this oh that's because it was                                 fixed five versions ago right we can                                 close that bug there's nothing stopping                                 a new contributor diving in and doing                                 that because the the only security                                 around auxiliaries you need to have an                                 account to do any of that and anybody                                 can get an account and his Bugzilla                                 filled with spam no guess we get the                                 occasional spammer but they're easy to                                 deal with yes we get the occasional                                 person abusing it but I think in what                                    years of administering bugzilla for                                 Apache I've had a ban one user for being                                 a pain in the neck and the benefit that                                 you're the cost of that it took was                                 about                                                                   reading the emails to just convince                                 herself that the project was right that                                 they did need to be banned but other                                 than that it would no hassle at all and                                 the benefits all those projects have got                                 is that it's much easier for people to                                 contribute much easier for them to be                                 able to get involved so rigid processes                                 are always things that I tend to raise                                 an eyebrow about if they're if they're                                 strictly enforce processes are fine you                                 know having stuff set out you know the                                 way you like to do things they'll be                                 good reasons for that but enforcing it                                 particular are technical means and                                 removing people's flexibility that I see                                 causing more problems than it solves                                 that this next one might be an ASF                                 specific one it depends how you organize                                 your open-source projects but at the SF                                 everything is it should be consensus                                 based so if a decision needs to be made                                 somebody says right on the dev list we                                 need to decide on what to do with this                                 this is what I think or these are the                                 options what other people think you have                                 a discussion and you move towards a                                 consensus occasionally I see projects                                 saying oh we've appointed XYZ as the                                 project manager wanting to do what                                 exactly and when you dig into it since I                                 Oh                                 they they prioritize the open issues in                                 JIRA or they decide when a release is                                 going to happen or what fixes are going                                 to go into what release and I'm you know                                 that's just alarm bells all over the                                 place for me that yeah that's not how an                                 Apache project is meant to work by all                                 means have a priority list for your bugs                                 inner issues and have the community vote                                 on issues to decide what order the                                 community would like them fixed but                                 developers certainly to Apache men to                                 individuals so if somebody wants to work                                 on something halfway down the list                                 that's what they work on having somebody                                 saying right you do this you do that you                                 do that that's just not at all how a                                 pattern the Apache community's been to                                 where it should all be about scratching                                 your own itch so no a/c project manager                                 appearing on an apache mailing list that                                 tends to send an alarm bell for me this                                 next one is really hard to spot it's a                                 private communication it's certainly                                 it's hard to spot if you're outside of                                 the community yet is there some core                                 group of the community that's discussing                                 things in private and then sort of                                 announcing what's going to happen to the                                 rest of the communities it were though                                 for me as a director reviewing project                                 it's easy because I have access to all                                 the private mail so the first thing I                                 tend to do is go and look at their                                 private mailing lists and what I hope I                                 see is basically next to nothing a few                                 personnel decision decisions so                                 discussions as to should we invite this                                 person as a committer they're held in                                 private because you don't want to say                                 well actually and we think they've got                                 issues in this area this area and this                                 area you don't want to have those sorts                                 of discussions in public so those sorts                                 of personal issues there on the private                                 mailing list other than that hopefully                                 it might be the email from the board                                 saying it's time for your project your                                 report please can you produce it and                                 that goes to the private list just                                 because it's the easiest way to get it                                 in front of the right set of eyes it's                                 not a particularly private thing but                                 otherwise it should be pretty quiet so                                 when I look at a project and I see that                                 their private list has got four times                                 the volume of mail than the dev list                                 then I begin to say                                 okay things are probably aren't heading                                 in the right direction here and again                                 there are examples where we have                                 projects that are having huge                                 discussions huge amounts of energy                                 pouring into what maybe isn't                                 necessarily the most important issue of                                 the day on the private list meanwhile                                 hardly anything is happening on the dev                                 list and the project isn't moving                                 forward I think my generally my                                 recommendation is that there shouldn't                                 be that much private now and if you're                                 pouring energy into those sorts of                                 discussions maybe just stop take a pause                                 and think is there something more                                 productive we could be doing with this                                 time is it better to spend three months                                 arguing why the project isn't successful                                 on the private list all it'd have been                                 better if we'd spend that energy on the                                 dev lists moving the project forward I                                 know where I think the project which one                                 of those choices would lead to the                                 project being in a better State but                                 obviously I can't direct projects on                                 what to do so of course we can just                                 nudge them in the right direction                                 the one that's hardly said you know                                 anybody to identify really is when                                 communication starts happening off list                                 so that's when rather than using the                                 project's private mailing list there's                                 some other communication whether it's                                 happening within a company or on some                                 private chat system or something and                                 it's not obvious to the community that                                 that is happening and it's not                                 accessible to the community and it is                                 really difficult to identify because you                                 can only infer that it's happening                                 because you'll it'll be you'll see                                 things like there's something will                                 suddenly appear on the dev list so                                 here's the roadmap for the next                                    months okay where did that come from                                 because where was it where was the                                 discussion about that's a fairly obvious                                 one or suddenly there's an announcement                                 that the project's help holding a                                 conference somewhere in three months                                 time and here's the call for papers and                                 you're thinking great but this is the                                 first we're hearing of the conference                                 where was it decided that we wanted a                                 conference what the topic should be                                 where it was going to be and all of that                                 sort of stuff where's this call of a                                 paper suddenly come from those are quite                                 easy                                 to spot that clearly there's something                                 going on off list and it needs to be                                 brought back on list to get the broader                                 community involved the harder ones are                                 when there's coordination going on                                 between different committees so you can                                 see that one when you look at it more                                 closely think well okay if they                                 committed that feature and then they                                 committed that and then that meant that                                 person committed that but when you look                                 at the timing and the size of the commit                                 it looks like well they couldn't have                                 written that without knowing that but                                 that wasn't committed until yesterday                                 and they committed that six hours later                                 but there's like three thousand lines of                                 code there and it's horri                                 it's obviously dependent on that so that                                 you then realize that there's some sort                                 of coordination and communication going                                 on off list which again isn't allowing                                 the entire community to be involved and                                 to agree the direction as a whole and                                 that's quite difficult to spot but but                                 again what it does is it makes it harder                                 for new people to get involved because                                 there's obviously some there's something                                 going on that you're not you can't quite                                 put your finger on that you're not you                                 can't quite see that you're not you                                 don't quite understand and then that's                                 not really quite off-putting or                                 somebody's new to the community                                 moving on to policy and another one that                                 might be a bit ASF specific I caught                                 call this policy bypass the SF doesn't                                 have that many policies but the ones                                 that we do are there for for good                                 reasons and lessons that have been                                 learned from the past and if thing if                                 the projects operating correctly the                                 policy shouldn't get in the way it's                                 when I see conversations along that                                 essentially how can we get around this                                 policy or how can we phrase this thing                                 that we want to do that isn't really                                 conformant with the policy in such a way                                 that the board thinks it is and that                                 just raises a red flag for me I mean if                                 the policy wording isn't clear then yes                                 please let's let's fix it if you                                 genuinely think the policy is wrong then                                 please let's discuss it but if you're                                 trying to work around the policy then                                 that's                                 pretty strong indication that you're                                 doing something that you probably                                 shouldn't be doing and that's the point                                 to stop and so ask the question if it's                                 if it's not already explained you know                                 why does the policy say this what what's                                 behind it what are we getting at and                                 then hopefully steer things in the right                                 sort of direction so how taking those                                 sort of individual examples of different                                 things that race from up flags what I'd                                 like to do so take a couple of                                 generalizations from that and I've                                 mentioned it a couple of times first of                                 all these technical controls versus                                 social controls as much as you can my                                 recommendation is keep the technical                                 controls to a minimum technically keep                                 it as wide open as you can and use                                 social norms social conventions to                                 manage that this is how the project                                 typically do things but retain that                                 flexibility we said also let's we evolve                                 things if you have a rigid technical                                 process people have to do it that way                                 and that they can't evolve the process                                 they can't tweak it to make it a little                                 better when this when they spot a road                                 bump if it's all socially based then                                 things can is much more easy for things                                 to gradually evolve over time you can                                 try something a bit different once and                                 see whether it works and you have those                                 opportunities so my strong                                 recommendation is you know social                                 controls not technical ones second one                                 is barriers generally the lower the                                 barriers the healthy of the project will                                 be we have a number of projects that                                 have very low barriers to entry they                                 attract large numbers of committers and                                 contributors and they are very healthy                                 the projects of having problems tend to                                 it's not a it's not a perfect                                 correlation but they tend to have higher                                 barriers to entry it's harder to become                                 a committer there's more technical                                 controls in place so the lower the                                 barrier you can make the barriers the                                 easier it is for people to get involved                                 the easier it is for their contribution                                 you to use their contribution them to                                 feel valued and hopefully contribute                                 back again so that brings me to the end                                 of what I'm looking to the emcee so I                                 have a couple of minutes for questions                                 I'm afraid I don't so i'm around and the                                 rest of the day you'll find me up around                                 the apache lounge                                 if you want to discuss anything that                                 I've talked about today tell me where                                 I'm wrong please do come and find me and                                 I look forward to speaking with you                                 thank you                                 [Applause]                                 [Music]                                 [Applause]
YouTube URL: https://www.youtube.com/watch?v=MO_AVjSPuBw


