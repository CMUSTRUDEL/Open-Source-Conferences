Title: FOSS Backstage 18: Nick Burch â€“ The Apache Way
Publication date: 2018-06-27
Playlist: FOSS Backstage 2018
Description: 
	Apache, that's just the webserver right? No? Oh, what about Apache Hadoop, Apache Lucene, Apache Flink, Apache Mesos. Oh yes! But what's the Apache thing all about, and why does it matter?

The "Apache Way" is the process by which Apache Software Foundation projects are managed. It has evolved over many years and has produced over 100 highly successful open source projects. But what is it and how does it work?

In this session we'll discover how an Apache project is (and isn't!) managed. We will see how the foundation provides a technical and legal infrastructure for each project, and how the Apache Way provides the governance scaffolding for individual projects. This provides the framework for Apache projects which are then free to apply the Apache Way to ensure their project succeeds.

Having attended this session you will have a better understanding of the inner workings of both the foundation and its projects. With this understanding you will be better equipped to engage with and benefit from Apache projects.

Read more:
https://18.foss-backstage.de/session/apache-way

About Nick Burch:
https://18.foss-backstage.de/member/nick-burch

Website: https://www.foss-backstage.de/
Twitter: https://twitter.com/Fossbckstg
LinkedIn: https://www.linkedin.com/groups/8653059/
Captions: 
	                              the Apache way is the name that we the                               Apache Software Foundation give to the                               least worst way we have discovered of                               developing open source software and it                               is not a single monolithic view it has                               divergent some disagreement and a lot of                               history as to why it's ended up as it                               has and I'm hoping that our lovely panel                               here from Greybeards two key new people                                will give us a bit of an insight into                                what it is how it works why it's great                                and sometimes how its failed so could I                                please ask the panel to give a very                                brief intro about who you all are and                                quickly if possible how you got involved                                in our fun little merry band so hi I'm                                Isabel currently on the board of                                directors was a towers of people it took                                two minutes after I was elected for a                                little meme to come up because I was                                insisting that I'm just one of nine                                people not the one person I came to                                Apache like when I was at university as                                part of notch you probably don't                                remember not unless you're involved back                                then I was working together with the                                Whizzer project together was my research                                group working on something called C not                                distributed file system today you may                                better know that as he had hoped                                distributed file system at some point I                                created the conference right here after                                said someone was crazy enough to elect                                me and to be a member of the foundation                                like I believe two years ago this                                gentleman who was there suggested that I                                become a board member and that's how I                                got deeper and deeper into it                                my name is Shane Carew and I currently                                serve as the vice chairman of the board                                of directors along with Isabel in and in                                another                                seven directors besides us I got                                involved in Apache in                                                day job essentially gave a bunch of code                                to Apache and that was our day job to do                                that when my day job of course changed                                direction as companies sometimes often                                do I stayed involved at a lower level it                                was a free time and that got noticed I                                went to Apache con I made the mistake at                                Apache con one year following this guy                                in knew and said hey where are you going                                work or no planning meeting can I come                                and he said sure now I was young and                                that was my mistake that I went to a                                planning meeting voluntarily and I left                                three hours later being completely                                overwhelmed and having tasks to do for                                the next Apache con so that was how I                                was recognized voted in as a member kept                                working on organizing how we work                                internally sort of the Apache way for                                how the corporate side works not just                                the project sides and gotten to the                                board and it's been a very very long                                train since then but enjoyable hello my                                name is Lara West and I've been involved                                with Apache not with the ASF but with                                the Apache web server basically since                                                                                                       of at that time the ax Patrick whoop                                like in                                                          happened with the SF since the very very                                beginning the reason how I got involved                                with the Pat she is at that time I was                                still a student I was asked by a German                                publisher to write a book about Apache                                because they realized hey this new open                                thought thing is really really important                                we need more books about that so they're                                looking for people to write about the                                various open source software what is                                Linux Apache and then they approached me                                I said yes and then I spent a lot of                                time while obviously writing the book                                and finding bugs in Apache submitting                                lots and lots of bug reports and at some                                point I guess they got annoyed but all                                the bug reports and said okay you have                                commit access now please go ahead and                                fix your own bugs and commit your own                                patches it looks ok so that's how I got                                involved with with Apache and the ASF in                                general yeah hi my name is Christopher                                dots                                yeah I'm not quite as involved as long                                as the the other is before me but I just                                had a look at when my first contact with                                 the ASF was and it was sort of                                           a patchy cocoon project yeah I'll never                                 forget that one day when there was a new                                 cocoon release and there was a Thank You                                 Christopher that's for reporting this                                 bug that was totally totally awesome and                                 then it took about I think it was eight                                 years or so that I was sort of a                                 drive-by committer sort of you you use                                 stuff and you sort of fire patches at                                 hundreds of projects but then when                                 Apache Conan's in time was I had a few                                 beers at the hotel bar with just about                                 that part yeah yeah yeah and yeah well                                 that's when I sort of lost control of my                                 free time yeah and well sort of                                 when you start committing to one project                                 that doesn't stay that way for quite for                                 very long sort of got dragged deeper and                                 deeper into it                                 my name is Braille I'm definitely                                 the youngest Apache member on the stage                                 probably the youngest one in the room I                                 just got voted in this this year                                 actually I'm also the chair of Apache                                 finner Act and that's how I got into                                 Apache Apache for interact started in                                 incue bation in December of                                          exactly at the same time I got hired by                                 a company that was contributing code to                                 that and in order to increase their                                 capacity to contribute code to that and                                 I very quickly became very interested                                 following the incubator list following                                 the processes the way it works and yeah                                 the rest is history and Here I am okay                                 thanks so one of the things that we say                                 at Apache that can be a bit confusing to                                 new people is if it didn't happen on the                                 list                                 it didn't happen does someone want to                                 say a little bit about why we came up                                 with that role and what we're trying to                                 protect with our communities by it                                 I'll go so if it if it didn't happen on                                 list means if if the dis the decision of                                 we're gonna do X or not do X or the vote                                 and and the process by which we reach                                 that decision didn't happen on one of                                 our mailing lists where you send them                                 you subscribe to send a mail opposed to                                 everyone we archive every single mailing                                 list permanently on our own servers so                                 we have complete control everything                                 that's ever been set on a mailing list                                 Apache we should have a copy of that's                                 valuable because in the future when we                                 want to argue about something we can go                                 back go back and say here's what the                                 decision was right not just the code                                 that ended up in there not just the                                 commit log that said oh I fixed X why do                                 we fix X why did we do it this way all                                 that process is still there so not only                                 is it valuable for us who were older                                 contributors to remember why we did that                                 it can train new people who could say oh                                 that's why this project goes that truck                                 that's why this project Y mahute uses                                 this logo because well in the earlier                                 talk session they had a very very very                                 very long discussion about the bad logo                                 and it was sort of nobody would make a                                 new logo and somebody just checked it in                                 but now you can see the process so you                                 can always understand the history of how                                 a project got to where it is because it                                 happened on the list it didn't happen on                                 a list and how do we know it actually                                 happened yeah just to add to that I                                 think one important part is the the                                 archiving of the lists so if we go to                                 Apache and look at look look look for                                 the Apache mail archives you find                                 literally everything and from the                                 various mail is from the various                                 projects obviously if you also have the                                 some internal mailing list foundation                                 mailing list where we do the very same                                 we have a mailing list and we have an                                 archive I think it's to some extent the                                 reason why we choose mail is it's                                 universal everyone has an email address                                 it works and every device it works                                 everywhere you don't have to discuss                                 like do we use slack - we use I don't                                 know whatsapp do we use something else                                 and there's no real discussion about                                 that because it just works everywhere                                 and it's a bit the history initially in                                 I don't know                                                            patchy was started it was basically                                 through a mailing list where people got                                 together and started exchanging pad                                 at that time you didn't have all these                                 like various instant messaging services                                 that exists today so meaningless was                                 kind of like the the best choice at that                                 time and in my opinion it still is the                                 the best choice because it works across                                 time zones it's not an instant messaging                                 thing in that sense so you don't have to                                 be there for when a discussion happens                                 you can go back you can so contribute                                 even if it's a day later or a few hours                                 later or even a week later depending on                                 what the discussion is about I do agree                                 that it's best choice but it also brings                                 problems with it that some of our new                                 contributors often struggle with so we                                 all know information overload today and                                 it's only getting worse and when you                                 subscribe to an apache mailing list                                 you're subscribing to a significant                                 amount of email that you think you then                                 have to work how work out how to filter                                 and how to how to categorize how to                                 decide what to respond to and what not                                 to respond to it's a skill that you have                                 to learn when you get into Apache to to                                 handle this volume of mail and at the                                 same time it's no longer as modern and                                 cool as it was when I was in college the                                 Millennials today don't like email and                                 they when you say here we're going to do                                 asynchronous communication sometimes it                                 requires some convincing and sometimes                                 we fail at convincing people to come and                                 join in this asynchronous method of                                 communication so while it is necessary                                 and important for a global working to                                 have a form of asynchronous                                 communication and email is old enough                                 and proven enough to be the superior                                 system for this it's not without some                                 problems so there's two points that I                                 would like to add last you've given just                                 describing how we use mailing lists and                                 how we archives us when I explain the                                 maybe focus on mailing lists I usually                                 explain that what you want is an archive                                 which you can search which is stable the                                 URLs so if you reference the discussion                                 later in time since URL stays stable                                 through time and which is linkable so                                 you can share                                 Lync was everyone else and what's also                                 important for Apache is that it's public                                 so everyone who's using your project can                                 follow along can see what's happening                                 referencing back to what the nice sets                                 this morning open sources about                                 transparency so you want to make                                 transparent what you're working on what                                 your plans are what you want to do next                                 and where you need help and there's also                                 for me ties into the Apache Way where we                                 try to recruit our commuters and our                                 developers from the user community so                                 when I explained Apache to people who                                 are not yet opens those people I tend to                                 tell them that Sirius is saying like                                 patches welcome and that's typically a                                 help request so working on a mailing                                 list means making transparent where you                                 need help                                 it makes transparent where as a project                                 is supposed to be going and from a                                 user's perspective it gives me the                                 transparency into the project and it                                 makes it easy for me to participate if                                 you have all this design just                                 discussions and decision making                                 processes behind closed doors I cannot                                 participate I cannot become active I                                 cannot become one of you're one of you                                 so you cannot recruit me in and you                                 cannot share the workload with me or                                 with you and another thing that sort of                                 felt really strange in the beginning was                                 sort of when we meet at an Apache con                                 usually several committers of the same                                 project are at the same place and you                                 well you tend to discuss things of your                                 project and in order to make it possible                                 to keep the others in the loop it felt                                 sort of strange in the beginning so if                                 you were discussing some technical                                 things at a conference to sort of write                                 a summary of what you were discussing to                                 keep the others on board if for example                                 I'll just take the the project I'm                                 currently working on we have one guy                                 living in Sydney one guy living in                                 Florida the one guy for example me                                 living in Frankfurt and it's really hard                                 if you have a synchronous communication                                 stream it's hard to get them all out of                                 bed at the same time                                 okay so touching on that we often say a                                 minimum of                                                               why is that one is to cross time zones                                 and weekends and public holidays one is                                 that many of these people are working on                                 these projects on an on and off pieces                                 you cannot expect someone to mirror a                                 mailing list on a                                                        weekends and time zones and the fact                                 that I contribute during the week                                 because I haven't have the time many                                 people contribute on the weekend because                                 they don't have the time from their day                                 job so you need to understand the                                 abilities of all the commuters across                                 the project we've also got in at Pinner                                 act we have a couple of committers in                                 cameroon in the english-speaking part of                                 cameroon I don't know if you guys have                                 been following the news but they don't                                 have power so they have to drive over to                                 the french-speaking part of camera and                                 to get internet access so we generally                                 give them a little more than                                             make it possible for them to also to                                 contribute I guess if you want to make                                 sure that you always stay up to date of                                 what's happening in your project never                                 go on holiday for more than                                          okay so one of the things in actually we                                 have is the plus one is the voting and                                 sometimes when we get new projects in                                 they try and vote on everything anyone                                 want to talk about voting voting in                                 moderation and consensus oh it's it's so                                 the some projects are adamantly against                                 voting and use it as a very specific                                 tool is when we can't come to consensus                                 and we can't sort of talk through okay                                 this is good enough and nobody will                                 object to this even if it's not perfect                                 then okay we're stuck we'll vote and                                 they hate it and they say it's bad but                                 they use it and then we have a vote and                                 then at least the decision is made so                                 the progress as a whole and the roadmap                                 can continue whatever way the decision                                 went we have other projects who like                                 voting for everything and if that fits                                 their model                                 I think it's fine as long as the                                 community is you know well documented                                 and they make it clear that that's how                                 they do things because at least then you                                 can you can it feels easier to show                                 direct consensus that way I don't think                                 it's necessary but some people like to                                 do it yeah I think like you were talking                                 about voting however the plus one minus                                 one thing is not just about voting yes                                 it's it's obviously used in boats it's                                 sometimes more about showing consensus                                 or showing agreement to something so in                                 many cases I've seen people obviously                                 using this I'm many familiar with the                                 Apache web server project some projects                                 may do this in a different way but on                                 the web server - at least if you say                                 something or propose something people                                 will say plus one or minus one simply                                 because it's the shortest way to just                                 say yes I agree with you but you but                                 what you've just said it's just showing                                 agreement not necessarily no official                                 boat so I think that there's a                                 difference than some things that wasn't                                 mentioned so far you said it's not only                                 that you can vote with a plasma plus one                                 you can also vote with silence                                 so you can call a lazy consensus vote                                 and that means you don't have to reply                                 by default directory was what was                                 communicated so you don't have to hit                                 reply enter a an answer let's just go                                 ahead and maybe while showing consensus                                 by just adding a plus one that might be                                 an official vote or just a sort of a                                 technical discussion however if you                                 disagree just writing minus one and                                 nothing else that's typically not                                 treated as a good form so we usually                                 expect if somebody disagrees well he can                                 write minus one but it's expected to                                 sort of give a little reasoning just                                 just I don't agree is sort of not good                                 style yeah that's that's very true and                                 very important especially when someone                                 proposes a patch and you say minus one I                                 don't like this at the very least you                                 should point out the parts that you                                 don't like or the parts where you see a                                 technical problem that's usually                                 straightforward when it comes to the                                 technical patch or maybe you even fix                                 the things that you think need fixing or                                 need to be different as I                                 - one on that but here's a modified                                 version of that how like that's that's a                                 better option maybe and then people may                                 vote on this so say a plus one minus one                                 so yeah we're not super formal with her                                 voting though and sometimes we do the                                 rules pretty ad-hoc like for example in                                 FINRA actually wanted to accept a new                                 code into it that I had been working on                                 so much of it had been done off list                                 which it shouldn't have been done I                                 asked for a two-thirds vote which                                 there's no rule anywhere that says it                                 has to be a two-thirds vote but I asked                                 for two-thirds vote because I've wanted                                 to make sure a lot of people were on                                 board I've wanted to get that extra                                 level of approval and so voting isn't                                 always just like                                                     lose sometimes it's also a map a way of                                 involving people in the decision-making                                 process a little more so one question we                                 often get from new companies getting                                 involved in Apache for the first time is                                 who do I pay for a seat on the board and                                 who do I pay to make this happen and yes                                 as you see we all giggle why why do we                                 say no to their money in that way what                                 are we trying to prevent what are we                                 trying to do instead because we're                                 independent of commercial influence I                                 mean that's because so a fundamental                                 part of the Apache brand both is what we                                 as members all feel internally as well                                 as part of the value to contributors for                                 coming to us is that our board is made                                 up of independent members of the                                 foundation who have been elected                                 internally so it's not like it's just a                                 self-selecting board who sort of slowly                                 moves it's it's people who have shown                                 merit across the six hundred members who                                 are all very senior people in the                                 technical world so there's it's I don't                                 say it's a competitive but it's people                                 who really really want to be here and                                 people who are really well respected by                                 this broad base appears who believe in                                 this mission and we want to make                                 software for the public good which is                                 different from what aboard one company                                 wants when they want to buy as he                                 and has happened several times that sort                                 of well let's say the interests of a                                 certain company sort of was                                 contradicting the well the needs of the                                 community and sort of try to influence                                 that and the Apache Software Foundation                                 has proven to show what do you say in                                 English as show your teeth and sort of                                 well get rid of that influencing problem                                 I would like to turn that around a                                 little bit you don't pay the foundation                                 you pay your employees and they sent pay                                 to the foundation it was time someone                                 also translated it to paying was time                                 and love you stay around you stick                                 around and that's how you gain influence                                 so it doesn't mean that people here do                                 that on their wall on to your time                                 unpaid say typically are paid by their                                 employers and trust me it's a good way                                 to keep employees happy within your                                 workforce one one thing I've actually                                 seen quite a bit in the in the history                                 of the ASF is that once I mean because                                 membership is for individuals only you                                 cannot become a member as a company                                 there's no pay to play a kind of thing                                 which is what Denise mentioned this this                                 morning but I've seen many cases where                                 someone was initially paid to contribute                                 to a project but even after leaving that                                 company for whatever reason continued to                                 contribute or continued to contribute to                                 the foundation in general or to other                                 projects so that's a fairly common thing                                 how many of these people do we have any                                 audience                                 [Music]                                 just a little history note I mean the                                 start of the ASF was all about                                 self-directed altruism the reason why we                                 did what we're doing is because we                                 needed a web server and the person who                                 was running the web server and creating                                 the web server went away it wasn't                                 because this wasn't a school project it                                 wasn't something we were doing because                                 we just wanted to we had jobs and                                 responsibilities based on that so from                                 the very very beginning there's always                                 been this quite very tight line between                                 doing things for passion but also doing                                 things because they need to get done and                                 because your job depends on it Denise                                 introduced the term this morning of a                                 duoc recei so you can pay your employees                                 to do and if they're doing then they can                                 influence and that's that's the only way                                 you have in really and I'll just add one                                 one quick note so the Apache Software                                 Foundation is a u.s.                                                charity it's a corporation we file an                                 annual tax return we don't we don't pay                                 taxes we store the file in u.s. we we                                 have officers and directors we have a                                 formal annual meeting of shareholders so                                 that's part of what we're talking about                                 as directors or as members running the                                 foundation paying our contractors the                                 other part of Apache which is probably                                 what most people are familiar with is                                 the projects right every single project                                 has this model of voting and merit and                                 so on so a lot of the there's there's a                                 very obvious way to show from your                                 company's duoc recei paying your                                 employees because then you get the                                 better web server that your company                                 wants to do something else with it's a                                 little bit different model when you're                                 you're paying an apache member to work                                 on the corporate things so that's sort                                 of an interesting topic of long term                                 sustainability of how we do that and how                                 we make sure we have enough members who                                 can act independently and have time to                                 do all the legal bits and the paperwork                                 that have nothing to do with code                                 okay looking at a lawyer in the front                                 row I think I should ask question about                                 our license and how it's different                                 so without inviting or igniting a giant                                 flame war can we get a potted history on                                 why we've chosen to go down the route we                                 have with our license and why we're not                                 so keen on letting incubating projects                                 combine incompatible ones and just that                                 maybe a little bit on the history of the                                 license itself initially when the web                                 server was created it was based on the                                 NCSA web server which came with the                                 bsd-style license it was open source so                                 the Apache guys at that time                                 Jim was involved at that time basically                                 it took that NCSA code and included                                 their own patches and it eventually                                 called it Apache and and they simply                                 kept the license                                 it became the apache license but it was                                 still a bsd-style license and only with                                 the as the news explained in her talk                                 this morning with with the creation of                                 the ASF with the foundation it became                                 the second version of the license which                                 included the intellectual property                                 related details and and all that and one                                 thing a lot of people I've been talking                                 to recently sort of we're a little                                 confused about because if you for                                 example take the GPL license which sort                                 of well you can use this piece of                                 software for free but you have to make                                 the product you built with this software                                 free to because they thought that well                                 if you just give it away for free and                                 don't have any of this copy left                                 restriction on it everything good that                                 happens with this piece of software will                                 be sort of some corporate property and                                 not given back but looking back the last                                 few years what's happening in the Big                                 Data sector and stuff like that it's all                                 Apache licensed and it's growing and                                 growing and growing so hmm so it doesn't                                 more common in terms of GPL I I believe                                 that obviously there are many use cases                                 where the GPL makes sense however I                                 strongly believe that if the patch                                 group at that time would have chosen the                                 GPL for the webserver I'm not sure we                                 would have the SF today that's what is                                 my opinion yeah I think so you're                                 talking a little bit about the                                 motivation behind the license and part                                 of it is rooted in the altruism in that                                 we want to be a universal donor for                                 anyone so anyone who wants to take our                                 software and use it great anyone will                                 take our software and modify it and use                                 it great                                 anyone who is taking our software modify                                 it and then give that away to anyone                                 else that's great we wanted to be able                                 to make sure that there's maximum                                 freedom for users of our software at any                                 level of distribution in the future                                 now of course somebody along the way you                                 can take the derivative project and then                                 make a proprietary version out of it                                 okay that's fine I mean it'd be nice if                                 you did it publicly but that's fine                                 we've still given stuff away to all the                                 other people along the way so we believe                                 in maximum freedom for users is most                                 important for our model I cannot answer                                 the question on behalf of CAS F I can                                 only answer it on behalf of myself when                                 I started a project at CAS F I remember                                 going through documentation from the                                 Free Software Foundation and from the                                 Free Software Foundation Europe and                                 they've got a matrix of which license                                 should you apply given what you want to                                 achieve in the market and a apache                                 license is quite great if you want to                                 break into existing markets if you want                                 to push towards a standard with your                                 technology and I think then Apache is a                                 great way and just one tidbit the apache                                 license is one of the very few                                 open-source licenses that explicitly                                 adds a disclaimer for trademarks which                                 is not technically necessary but i think                                 is a very friendly thing to do because                                 open-source licenses are of course                                 copyright licenses and none of them                                 grant you trade about trademark rights                                 if you're a company that's got some code                                 that they want to open-source and bring                                 to the foundation what do they need to                                 do come to I talk tomorrow                                 just tonight we'll be talking about                                 bringing the project in right over there                                 by the way we'll be talking about                                 bringing projects into the Apache                                 Software Foundation via incubation what                                 you do is first you find a champion                                 write a proposal and the new goes                                 through the process of practicing being                                 a community scrubbing your IP making                                 releases that are appropriately licensed                                 and then if you do that long enough                                 successfully enough then you can become                                 a top-level project that's the short                                 version of it there's there's a lot of                                 details and we're gonna go into some of                                 the details tomorrow so for some of the                                 details I would start that story a                                 little bit earlier you want to think                                 about why you want to come to your party                                 do you only want the trademark what do                                 you want to add up our way you're                                 freaking and do you have the same goals                                 that we have one things that I found                                 many projects straddles many of these                                 projects come from single developers or                                 single companies having been developed                                 at a single company means that these                                 people had ultimate control over these                                 projects a lot of these projects and a                                 lot of these people struggle was giving                                 up control as I mentioned earlier I                                 started Apache mahute was in see Apaches                                 of her foundation at some point someone                                 came up hey I'm gonna read your book                                 Apache project and I'm like wait a                                 minute this is something that I wanted                                 to do I'm really jealous now except five                                 minutes later I realized I don't have                                 time to do it but I do want this book to                                 exist so I was really happy that someone                                 took up the work and did that for me                                 however it's this kind of thought                                 process and this kind of letting letting                                 off control does take a little bit of                                 Education and I just take a little bit                                 of trust those in your community and in                                 yourself so what helps for that is to                                 understand why you went to Apache and                                 why you're going through all that and                                 maybe one of                                 just recently I sort of saw one of the                                 big benefits of the the Apache Incubator                                 process because I joined a project an                                 incubator project I heard about that in                                 Patrick on in Miami I was totally oh wow                                 this is a cool project I want to be part                                 of this started contributing was invited                                 as one of the first committers in that                                 project outside of that one company the                                 code was donated by and then a few                                 months later that company decided to                                 well let's say shift their priorities                                 and they sort of pulled their people off                                 the project so they no longer had the                                 time to work on it so now we have a                                 project and that sort of hanging in the                                 air a little and that's sort of one of                                 the reasons why we sort of ensure that a                                 project that is announced top level has                                 a very diverse a committer base that                                 stuff like that doesn't happen I think                                 one important thing with the SF is that                                 we want to make sure that if there is a                                 top level project that there is a                                 healthy community around it that if as a                                 as a user as a customer as a company                                 picking that framework software whatever                                 it is you can be sure that it will be                                 supported and there is some kind of                                 support for for for the software and the                                 incubator didn't exist in the very                                 beginning of the ASF I forgot how long                                 it took when it was created I know                                 looking at Jim but then if a couple                                 years after the SF was created yeah so                                 like two years later basically because                                 we saw the need we wanted more project                                 so there was a need for more project                                 people were looking at different things                                 wanted to do more stuff at the ASF and                                 we were like okay how do we set up these                                 projects how do we make sure that all                                 the new committers you cannot expect                                 them from day one to understand how the                                 Apache way works sometimes when it is a                                 contribution from a company you have to                                 make sure that things like trademark                                 details have been sorted out etc before                                 you actually                                 make it a proper airsoft project that                                 was the main reason why the incubator                                 was created what we have that period a                                 project has to go through before it can                                 become a proper top-level project at at                                 the NSF and and really really to go back                                 to Isabella's point if you're thinking                                 about coming to the incubator the most                                 important thing overall is what why                                 you're doing it but realize that if you                                 bring a project to the incubator and it                                 succeeds and it becomes a top-level                                 project it is no longer your project it                                 is a patchi's project in terms of                                 illegal and Trademark sense and it is                                 that communities project in terms of an                                 actual who does the work and that                                 community will be an independent                                 community which is a good thing but as I                                 see both said not everybody understands                                 why it's a good thing until they've                                 worked on it and there are cases where                                 maybe you don't want to do that and say                                 oh maybe projects that don't want to be                                 an incubator and that is fine you just                                 need to understand it before and you may                                 need to make an informed decision okay                                 we've got a few minutes left so does                                 anyone in the audience want to ask a                                 question and can we steal one of the                                 microphones                                 thank you thanks so much for talking                                 about about this it was very interesting                                 I'm the president of KDE v and KDE in                                 many ways is very similar to Apache but                                 in at least one an important way very                                 different you were talking about voting                                 and decision-making and forget EE the                                 mantra is who does the work decides and                                 could you talk a bit about how that's                                 different for sure well I guess one one                                 one thing I think in terms of thinking                                 about how Apache works is the                                 terminology so whoever does the work                                 decides is whoever so some person who                                 has written the code just gets to check                                 it in that's different from the Apache                                 model where the best way to do it is to                                 think of the community around this                                 project it's going to decide on                                 something so part of the incubation                                 process is making sure we have a                                 diversity right so if any company goes                                 away if you know if you are sick for a                                 month and you know you're on vacation                                 that there's somebody else to continue                                 the project so the first thing about                                 Apaches difference is that we explicitly                                 have a community mindset and thus the                                 community has to be involved in the                                 decisions that's the I think the first                                 difference yeah well and let's say in                                 order to get a vote at Apache you have                                 to do some work it doesn't have to be                                 coding it can be sort of supporting                                 speaking at conferences and whatever but                                 you have to do work in order to usually                                 get the right to vote so I'd say it's                                 not that different but just it's sort of                                 the the merit you earn doesn't sort of                                 expire so if you worked once really hard                                 then maybe you're not you don't lose                                 your vote I think it's also important                                 that everybody in the community who is                                 affected by decision get the opportunity                                 to participate in that decision so in                                 the case that I mentioned earlier we                                 were bringing in code from the outside                                 yeah if I as a duoc recei I could just                                 say here code plump but everybody else I                                 was going to ask everybody else to help                                 me maintain that and so that wouldn't                                 have been fair without it                                 listen Lee asking them will you help me                                 maintain this code I think I want to                                 make one thing clear it sounds a little                                 bit like we do a lot of voting at the                                 NSF mailing list filled with plus ones                                 and maybe some - once that's not really                                 the case                                 one terminology that that's been used at                                 the ASF is review then commit and commit                                 then revenue which is basically                                 depending which in which stage you're                                 your development is or if you have a                                 stable and a development branch or                                 something                                 typically the development branches                                 commit and revenue so basically whoever                                 implement something whoever gets the job                                 done I can just commit that however if                                 someone disagrees with that disagrees                                 typically means there's a technical                                 reason why there's something wrong with                                 it then yeah either either patch provide                                 a patch and fix the issue or in some                                 cases it may mean that a commit has to                                 be taken out again if it is                                 controversial and needs actually examine                                 the extreme case an official vote where                                 the community or the the PMC that the                                 project management committee actually                                 doesn't officially board and say do we                                 want this new feature or this new                                 different direction this this code is                                 going outside of the development                                 projects it's the same it's not like we                                 vote on every little little bit                                 otherwise you wouldn't get anything done                                 it is a to a large part of democracy                                 like if you have time to get something                                 done that's great and unless it's a                                 controversial thing everyone's usually                                 happy that something got done                                 did we have any other questions we've                                 time for one last question and one                                 little answer quick point out that these                                 faces and the faces of the hecklers will                                 be around all of today and tomorrow so                                 if we don't get your question just just                                 come find us we will if you're in Berlin                                 I'm living here so you can catch me                                 later after the conference as well Oh                                 ask you later it's okay                                 get some coffee you can you can always                                 visit us in the Apache lounge you know                                 we have free ice cream there so just in                                 case you haven't noticed that yet it was                                 another question yeah                                 yes oh well I've not worked with the                                 Apache foundation but in my experience                                 working not without a foundation I've                                 seen that a lot of problems come from                                 the way employers think so like with the                                 incubator concept some employers will                                 say well if you are an incubated project                                 official project of some foundation we                                 will not let you work there because it's                                 not strategic enough for us or it's not                                 there's not have enough visibility and                                 another thing I've seen is that there is                                 kind of the expectation or misconception                                 that contributing to a community just                                 means proposing and pushing some code                                 into a code base while obsoletes                                 something very different I mean you need                                 to review other people's code build                                 trust relationship with everyone and so                                 so my question is what does the Apache                                 foundation Apaches of the foundation do                                 to work with companies to kind of change                                 the mentality into for employers to help                                 people software engineers to actually                                 work in a healthy way we're trying very                                 hard to do this so what is the Patrick                                 Software Foundation dude for this we                                 have some very clear branding guidelines                                 around our projects we projects report                                 the board quarterly so we can see if a                                 specific project is unfairly treating                                 new contributors from different places                                 but the foundation doesn't we don't go                                 out to companies and say hey you want to                                 work with us if there's company who                                 wants to come great more portly it's                                 it's project communities if there's an                                 interesting piece of technology that has                                 a project community that you know wants                                 to find new commanders they'll go out                                 and you know be useful so it's we we                                 don't go looking for people people come                                 to us and it's basically so be quick                                 saying if a company doesn't want to pay                                 the salary of a person to a full-time                                 contribute to a project or even                                 part-time it's unfortunately their                                 choice if they haven't grasped the idea                                 of open source if it's not really there                                 within their strategy and                                 unfortunately their right to do as an as                                 an employee there maybe it's time to                                 pick a different company who allows you                                 to to contribute to open source I know                                 that answers the question but okay                                 unfortunately we're out of time so we                                 have a big thank you to all of our panel                                 thank you thank you to Nick for telling                                 me about that I was gonna be on the                                 panel at you know a whole day ahead of                                 time this time thanks Nick so if you                                 want to know more we've got our website                                 come find us come talk to us and yeah                                 have an ice-cream thank you
YouTube URL: https://www.youtube.com/watch?v=XYGDlwDEOho


