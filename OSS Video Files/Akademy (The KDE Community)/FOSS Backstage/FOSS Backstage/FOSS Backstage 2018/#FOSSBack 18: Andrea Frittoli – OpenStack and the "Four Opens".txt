Title: #FOSSBack 18: Andrea Frittoli â€“ OpenStack and the "Four Opens"
Publication date: 2018-06-22
Playlist: FOSS Backstage 2018
Description: 
	Further information: https://foss-backstage.de/session/openstack-and-four-opens

The OpenStack community prides itself on its "Four Opens": open source, open design, open development and open community. Each of the four opens has an impact on the choices made by the community and helps to shape the guiding principles and the shared culture of the community as well as its technical governance model.

In this short talk, I will present how the OpenStack community implemented its four opens; I will detail the implications in terms of governance, infrastructure, development processes and communication tools, and how similar approaches could be easily used by other communities.

Read more:
https://18.foss-backstage.de/session/openstack-and-four-opens

About Andrea Frittoli:
https://18.foss-backstage.de/member/andrea-frittoli

Website: https://www.foss-backstage.de/
Twitter: https://twitter.com/Fossbckstg
LinkedIn: https://www.linkedin.com/groups/8653059/
Captions: 
	                              hello everyone thanks for being so brave                               to be here in the last presentation of                               the day I think it was pretty intense                               day so you know thanks for being here so                               my name is Andrea Fratelli I in                               developer advocate at IBM and in the                               past few years I've worked a lot with                               the OpenStack community and so I'm here                               today to talk about the OpenStack way                                and the for opens so just one short step                                back a bit of history so OpenStack was                                born in                                                         Rackspace and NASA they created                                OpenStack and then the project got some                                momentum so I started growing and in                                                                                                  foundation was born for the number of                                reasons the per second foundation was                                meant to help manage the financial                                aspect and the mission officially                                anyways is to promote OpenStack projects                                and to give them like shared                                infrastructures and to links and to to                                be able to thrive the community kept                                gaining momentum and growing so in the                                graph I have below that's I don't know                                if it's visible but it's basically the                                total number of commits in the different                                OpenStack projects over the years so I                                didn't put exact numbers because these                                are taken from statics which is a place                                where gather statistics but they're not                                official numbers so but the top bar in                                                                                                        how it was growing and there's a lot of                                momentum and in                                                 governance change so we used to have an                                incubator model where project would not                                be called as official OpenStack project                                unless they met                                a number of criteria and there was a lot                                of pressure for produce to become                                OpenStack project official post our                                projects but there was a problem with                                that like a vicious circle because a lot                                of employees employers they did want                                their employees only to work on official                                OpenStack projects and so it was                                difficult to gain the needed diversity                                in the project and the needed momentum                                for them to actually become meet all the                                requirements to become official                                OpenStack project oops sorry about that                                so I'm not supposed to say the big tent                                because that's not the official name                                anymore but there it is                                so the community decided to change the                                governance and to make a project the                                requirement to be an openstack project                                to lower the bar to make it simpler so                                and then to use a tag system so that we                                can basically tag different project                                based on their capabilities of the                                maturity level so that then users can                                decide which project they want to                                contribute to or they wanted to use in                                their production environments based on                                their maturity level so one of the                                things still project have to comply with                                out to be OpenStack project is to follow                                the OpenStack way which is summer                                summary in this for opens open source                                design development and community so open                                source should be pretty straightforward                                so the code is available it's available                                on github in stag lot or get its mirror                                to github if you're starting a project                                it's easy to put it on github or github                                or any of these free services however if                                you're considering joining a foundation                                or if you have the resources to do so                                it's probably a good idea to host your                                code in some infrastructure that you                                maintain so you don't have any                                dependency to company that holds your                                code that you don't have any control on                                I mean                                you seen the recent news I mean I think                                with github we have been lucky enough to                                I think with Microsoft seriously I think                                it's going to be to go well but you                                never know what's going to happen so and                                the other thing is the Apache License                                we have Apache to the old license by                                default for OpenStack and yeah so and we                                also have a CLA so we both both have the                                individual CLA the corporate CLA this is                                something I would say it's it's very                                convenient to have for a project it's a                                 nice protection to have because it can                                 be a bit complicated to figure out where                                 having the license alone it's enough it                                 depends on the country where you get                                 your contribution from so in some                                 countries the fact that you submit a                                 contribution to a project where you have                                 a license it's enough in other countries                                 it might not be enough so in that sense                                 having a CLA is a protection for the                                 project owner and but it's also kind of                                 in a bit contribution in some cases so                                 we seen in OpenStack a lot of                                 contributors they want to start joining                                 or getting near to the to the community                                 and they want to submit the first patch                                 and then they they hit the the wall with                                 the signing of the the contributing                                 license agreement so the CLA so that can                                 scare people off so you might want to                                 investigate whether you need one or you                                 there are alternatives like the                                 contributor certificate of origin that                                 you can use instead of a CLA never most                                 demo contributor friendly another thing                                 which might be less less obvious about                                 open source is the no open core so it's                                 part of the mission of OpenStack to                                 provide software which is not crippled                                 in any way functional or                                 from a performance point of view also                                 because OpenStack is a club management                                 platform so it basically drives other                                 software so we get storage networking                                 compute and other things and we don't                                 accept a project part of OpenStack as                                 long as there is no open source                                 alternative to actually run it in                                 production so let's say you write a                                 project that drives a certain                                 functionality in your cloud if the only                                 implementation available are only                                 existing implementation available for                                 the drivers are closed source you you                                 basically cannot use you cannot have a                                 fully open source implementation of your                                 service so you need to have some closed                                 source component in there                                 so that's requirement that we we have                                 that them there must be at least one                                 open source fully functional                                 implementation of direct dependencies of                                 OpenStack so is that enough to be open                                 does it really means being open source                                 like sharing the code well one of the                                 things that I look at if I'm starting to                                 use a library or project Starling                                 investigating whether I might use it in                                 my code is what what's the roadmap what                                 may I expect for this project to happen                                 is it maintained or people contributing                                 to it what what's coming next and so                                 forth so what the way we addressed is in                                 OpenStack we do specifications as code                                 so every project defines what they're                                 going to be working on or they make                                 proposals about what they're going to be                                 working on and they propose those as                                 patches and then there is discussion                                 happening and then we have a clear                                 release cadence and at the beginning of                                 the release or before the release                                 started there is a selection of what are                                 the proposed features that are going to                                 be worked on during the release cycle so                                 that basically before                                 a few months in advance we have a good                                 view of what may be coming at Daniel at                                 the end of the release of course                                 specification are not guarantee that                                 things are going to be actually                                 implemented but they are a good                                 indication also one thing interesting                                 that we have is their release note                                 automation and this is this kind of                                 tooling is implemented under the                                 OpenStack a namespace but it's not                                 OpenStack specific really so you can                                 reuse it and in your project if you                                 think it's useful so the release notes                                 we realized that if we postponed                                 creating release notes at the end of the                                 release cycle the most cases that would                                 be incomplete or people who not left                                 cycles to work on them it was really                                 hard getting difficult to maintain them                                 and it was getting a stronger and                                 stronger requirement from users and                                 operators to have good release notes so                                 we introduced the mechanism by which                                 we'd ever commit if the commit is                                 changing anything like it's touching an                                 API or modifying your database schema or                                 is doing any changes which is relevant                                 from an upgrade point of view for                                 instance or operation point of view then                                 a piece of release must be included                                 within the commit so that and then there                                 is a mechanism for automatically                                 generating the release notes along with                                 the release we also do okay we have                                 project update sessions that we do at                                 our summits their videos they are                                 recorded and then they are available so                                 you can check it and look at them to                                 know what's coming                                 basically the second thing I look at if                                 I'm going to use a project is probably                                 well if I want to influence its                                 direction can I do it if I can I have                                 some influence can I propose some                                 changes if there are things that I need                                 extra can I add them so the way we                                 addressed is in in OpenStack is with                                 contributors for contributor focus                                 advance so we have what we call the ptg                                 the contributors technical contributors                                 gathering that we do every six months                                 where                                 mostly developers but also users and                                 operators they meet and they plan for                                 the development for the next six months                                 we have what we call the forum which so                                 we have OpenStack summits which are like                                 vendor centric event but along with the                                 summits we have what we call the forum                                 which is again technical sessions                                 between developers and users and                                 operators to collect the feedback on how                                 the the software is used and what are                                 their features which are needed mostly                                 most needed for the future and also we                                 do meetings or office hours in IRC and                                 everything all the communication in IRC                                 is recorded and we store the locks of                                 the communication and they are hosted by                                 us so you can go and look them up you                                 can reference to any conversation to                                 bring another conversation you can just                                 point a link and say ok this is what we                                 discussed here and there and it's                                 everything is transparent this way so                                 this is just a picture from a design                                 session and you can see we tried not to                                 use microphone where possible everyone                                 sits together there's not there is one                                 moderator but there is no real nor                                 really a presenter so everyone talks to                                 each other we use a tool called heater                                 pad to have like collaboration and                                 everyone can write on the same time and                                 we take notes collaboratively and those                                 so this is available for people that                                 cannot be physically in the room and one                                 of the downsides of open design scope                                 creep when you have a lot of people                                 proposing what they want to what is                                 their use case for your for the software                                 for the community to work on you might                                 end up doing a lot of things and maybe                                 each of them a bit slower or less                                 integrated or but over time it converges                                 I think when we see which a certain                                 maturity then the requirements coming                                 from people that is actually running                                 your software in production becomes                                 stronger so if you have a good                                 communication with your users you can                                 overcome this issue so the next open                                 development we use                                 Garet for review code review so what I                                 mean with God but we mean with code                                 development is that everything related                                 to the development workflow development                                 experience should be open so reviews are                                 open one thing that is important there                                 is like with everything open you have to                                 be careful and aware that is not Garrett                                 you're talking to but it's people you're                                 talking to on the other side so I think                                 there were a lot of nice talks about                                 these today so you have to be mindful                                 that the comments you're putting there                                 they're going to people and you have to                                 be to try to be positive like nitpicking                                 on things that are not worth to the                                 mascara of contribute contributions not                                 everyone is not even the lingual in the                                 language you're writing into so they may                                 be misunderstanding so we must be                                 careful in that open development means                                 that everything we do around development                                 so CI and QA is open including like the                                 configuration management part of it so                                 we run services for CI we run them                                 ourselves but even the configuration                                 management part of it is open and open                                 source and it's part of the community                                 which means that actually we have a lot                                 quite a few companies that took our CI                                 system and started running it downstream                                 for their own internal CIS and                                 contributing back and helping us                                 maintaining it so we keep development in                                 CI aligned we use the same tool and this                                 is important because you want to provide                                 developers three of your community a                                 system a development experience which is                                 actually always working so if someone                                 wants to contribute something to your                                 project and they start they try to use                                 the development tools and they're not                                 working they're not likely to actually                                 be very happy continuing working in the                                 community but because we use the same                                 tools in CI we make sure they're always                                 working and we are so careful about the                                 footprint so you don't you don't need to                                 have like a huge workstation to do                                 development on on this solution you can                                 do it on your laptop                                 and we take particular care in ensuring                                 the bug ability and usability of CI Iran                                 so that you can actually manage by                                 yourself if you are a developer you have                                 a good experience you can submit a patch                                 you can look at the logs you can check                                 if something went wrong and we even had                                 system to try and catch common issues                                 and report automatically that something                                 went wrong so you don't have to debug                                 known situations yeah because I can get                                 pretty complex and we run a lot of tests                                 just you know couple of words more about                                 QA since I was the the PTL for the QA                                 program there for a couple of cycles so                                 we have a slightly different approach to                                 QA than like normal QA within a                                 corporation so it's a community led QA                                 we provide testing interface or tools                                 and things that project normally                                 supposed to do in terms of testing but                                 we don't enforce like a central test                                 plan that everyone has to comply and                                 test this and that thing because                                 actually the people writing the code and                                 working in a specific area of the                                 project or a specific project they know                                 best I mean we have                                                     in in OpenStack well some of them are                                 like horizontal project but still it's a                                 lot of them so we provide plugins within                                 our CI and QA tools so that every                                 project can own their definition of                                 their CI jobs it has their right and so                                 and finally but last not least open                                 community so we have open governance                                 open governance we have a repository                                 where basically all the governance all                                 the rules of the policies for OpenStack                                 are written we have a concept of                                 official project as I was saying before                                 so if you comply with like the OpenStack                                 way you can be an official project and                                 be hosted there and then every committee                                 within that has every committed to one                                 of the official project in OpenStack can                                 be a candidate or can have a vote for                                 like the the Technical Committee which                                 is the committee who has over technical                                 oversight over OpenStack project and                                 every committer to a specific project                                 can be a candidate or can elect the                                 project technical lead which is the                                 person the leader of the project who has                                 technical oversight on the project but                                 it's more like providing guidance to to                                 the project in terms of communication we                                 put a lot of attention about                                 transparency so avoiding off-the-record                                 communication everything that we talked                                 about is usually recorded so if we do                                 conversation it's in either in IRC or in                                 the mailing list and the mailing list is                                 archived and searchable and                                 communication should be always                                 respectful inclusive and decisions are                                 based on lazy consensus so that it means                                 that things can take longer to be                                 decided but I think it's it's a                                 compromise we have to be aware of and                                 this is just from a few years back in                                 Vancouver summit all the different type                                 of contributors together and when I mean                                 contributors we have developers users                                 and operators I said this already so                                 it's important to consider all type of                                 contribution not just code because                                 they're a different way to contribute                                 the community that's important to                                 recognize different kind of                                 contributions and it's important to                                 build trust between developers and                                 between everyone in the community so                                 just to conclude everything I talked                                 about it's a lot of mistakes but it's                                 not only for OpenStack so everyone can                                 reuse the ideas and a lot of the                                 toolings actually all the automation                                 that we use to build these we care a lot                                 about transparency and I think I wanted                                 to make a short call to action here                                 because if you were working in a company                                 and contribute to an open-source project                                 within I've seen a lot of frustration                                 often that with expectation which are                                 not correct from the employer side the                                 point of view that they expect people                                 engineers to go in open source community                                 and just implement something but there                                 is much more than that so there is you                                 need to build trust relationship you                                 need to give back to the community to do                                 that so yeah just some reference the                                 presentation is on github and thank you                                 thank you very much Andrew                                 [Applause]
YouTube URL: https://www.youtube.com/watch?v=gJVBeeduKpc


