Title: #FOSSBack 18: Luciano Resende – A practical guide to bring your project open source
Publication date: 2018-06-22
Playlist: FOSS Backstage 2018
Description: 
	Open Source Software has become the “de facto” standard in many industries, and with the popularization of collaboration platforms such as GitHub we have seen a big rise of newcomers and even enterprises getting involved and contributing their projects to Open Source. However, properly open sourcing a project requires you to have a good understanding of multiple areas such as software license, community building, public Ci infrastructure, etc. 

In this talk, we will go over a practical guide to take your project open source: we will explore how a software license influences what can be done with your project, we will dive into dependencies and license compatibilities, as well as share some best practices to help your project attract contributors and how to accept 3rd party contributions in a way that your projects can continue to perform open source releases as well as be incorporated into enterprise products and/or services. We will also touch a little on existing open source foundations and their process to accept new projects (e.g. Apache Incubator, Jupyter Incubator, Eclipse, etc).

Read more:
https://18.foss-backstage.de/session/practical-guide-bring-your-project-open-source

About Luciano Resende:
https://18.foss-backstage.de/member/luciano-resende

Website: https://www.foss-backstage.de/
Twitter: https://twitter.com/Fossbckstg
LinkedIn: https://www.linkedin.com/groups/8653059/
Captions: 
	                              so today we're going to be talking a                               little bit about like open source                               community leadership a little bit of                               like where I work and then basically go                               through these steps of like how you make                               a project open source who here have been                               working with open source for for like                               more than a year have you guys actually                               put a project into open source or mostly                                like contributing into open source so                                who created a project okay so I think                                this is gonna be very useful then for                                for a lot of you guys we're gonna go                                into like practical insights just about                                me and how to reach me you have my email                                Twitter and everything here I work at                                IBM in a group that does open source                                I've been working on Apache for over                                   years and currently working on big data                                platforms and a Jupiter notebook kind of                                stack in terms of like I just want to                                point here like sometimes we hear about                                IBM and we don't associate that with                                open source I think we have been doing a                                lot of like contributions into open                                source we kind of a founder partner of                                the Apache we have been contributing for                                lots of projects we have commuters in                                lots of projects we also participate in                                in lots of like steering committees that                                does open search this technology that                                gets implemented in open source we have                                open source advisory board and we have                                code day which is the group that I work                                on which I'm gonna talk a little bit                                more in the next slide just here a                                little bit of like history of like how                                it became to be code a I think iBM has                                been working on open open sort of AI                                technologies for a long time if you see                                some of the facts here like I think from                                like if you guys saw the Space Odyssey                                movie I think IBM was a technical                                advisory there but then things like                                when we the deep blue computer won the                                chess game from actually Garry Kasparov                                so like that's another kind of like big                                event and more recently we saw like Joe                                Pardy where Watson was able to kind of                                win from the to kind of like most famous                                champions on that competition and we                                kind of like don't want to get all of                                these technologies or all these things                                into kind of like a proprietary or                                anything                                so IBM create code date code aid                                basically brings it stands for center of                                open-source data and AI technologies we                                mainly work on open source technologies                                so we work very close with the IBM                                research groups that has brought some of                                these for example in the past and we are                                contributing and making AI related                                software available in the open source                                and one of the main focus of the the                                team is to kind of like concentrate on                                on AI technologies to make it easier for                                consuming and bring it to the enterprise                                for those that may have heard about like                                spark Technology Center in the past code                                a it's kind of an evolution of that                                where we enhanced the scope and we start                                not only working with data but also                                applying kind of like dai aspects to                                that kind of enough of that so let's                                start about talking about open source                                and I think the first question that we                                talked about like it's kind of like why                                to make your project open source and I                                think if you talk to different people or                                if you talk to different organizations                                you're gonna have kind of like different                                answers I quote some some that I think                                it's interesting here but like companies                                might want to assert a meanness I want a                                particular area or technology so if                                you're if you're starting something to                                you as a company or just like for your                                like making a better resume                                you can then attach to like okay I've                                been doing these contributions                                people can see what actually how you                                have done those and and all your skills                                or your company if you're a company like                                all the things that you bring into the                                open-source community that serves to                                promote technologies as well but I think                                one thing that I'm also seeing that is                                very often happening particularly on the                                 area like of big data and AI is that                                 things are evolving very quickly and you                                 really don't have like the time to kind                                 of like create a group of companies to                                 make a standard and things like that                                 I think the open-source projects are                                 actually becoming the de facto standard                                 so like for example for big data                                 distributing processing you see a lot of                                 people using spark there isn't kind of                                 like any standard that describe how                                 sparks should work in in multiple                                 limitation is basically everybody's                                 using the open source one and in other                                 examples like for example tensorflow                                 into like more deep learning space and                                 other projects they all become the                                 de-facto and then like you see a lot of                                 like people using that so but then when                                 you start talking to people they                                 sometimes tell you okay I've put my code                                 into github that is open source and                                 everything you can go and use and you go                                 there there isn't like a license there                                 isn't anything that describe about the                                 project so making your code public                                 really is not like making your code kind                                 of like open source                                 so what really makes your project open                                 sirs I think the main characteristics of                                 like an open-source project when we talk                                 about a project is open source is like                                 based on the license study and imply                                 that is using and usually we have what                                 we call like the license that had been                                 approved by the open source initiative                                 also like OSI that describes like a                                 prove-it license and those are mostly                                 what we can see there open source and                                 you can see kind of like you have the                                 links here where you can go in and see                                 if I call the licenses we're going to                                 talk about a little bit more of those in                                 the next slides so when you go to a                                 project and really to tell it the open                                 source and you want to make sure you                                 understand two things about the project                                 the project license the project license                                 is what it's going to tell you what you                                 can actually do with that code can you                                 for example distribute can you add into                                 like for example if you're building a                                 product in a corporation can you add                                 that piece of code into that what are                                 requirements that you need to do have to                                 make notice or or anything like that the                                 license is basically kind of like a                                 legal framework that describes what what                                 you can and what you cannot do with that                                 project you also want to take kind of                                 like a look into the governance the                                 governor's kind of like provides lis you                                 a social framework it tells you like how                                 for example decisions are made how kind                                 of like that the community is built                                 there how communities interact and it                                 will enable you to understand better and                                 and contribute or just play with that                                 open-source project that you are working                                 on                                 let's talk a little bit about license                                 and kind of like how you choose a                                 license for your project so there are I                                 think mainly three categories of                                 licenses so like one that is a very                                 permissive and those kind of like as the                                 name kind of like nation it allows you                                 to do a lot of things with that you can                                 basically start incorporating even kind                                 of like a making a fork and dairy making                                 that completely new project based on                                 that so that is like like some examples                                 of that it's like the public domain MIT                                 BSD in apache license and in some of                                 those are mostly common and mostly kind                                 of like well accepted by corporations                                 when you try to identify a project that                                 you can consume into building products                                 there are also like the strongly                                 protective and those are more the                                 categories of like GPL GPL - GPL                                         GPL and you kind of like need to be more                                 aware of those and kind of like what are                                 the restrictions of that so like for                                 example the GPL and LGPL if the GPL ones                                 if you for example gonna make a product                                 and you're gonna ship a product you most                                 likely gonna have to start like that's                                 considered a derivative project and                                 you're gonna have to start making your                                 source code                                 kind of like available into the same                                 type of license for example those might                                 be acceptable for certain types of                                 projects might not necessarily be                                 accepted for like corporations and and                                 things like that others like a GPL is                                 not only like if you ship a product but                                 like only if you even if you just put a                                 service on the network that is already                                 considered like the the license being                                 kind of like applicable to those kind of                                 things so like where GPL you could                                 easily just put a service on the cloud                                 and that was not considered affected as                                 a derivative work a GPL then enforces                                 that and then you have kind of like                                 weakly protected and weakly weak cop                                 left which is kind of like in the middle                                 and we still allows you to do some of                                 the in corporations into projects that                                 that you might shape and things like                                 that so derivative work I'm gonna be                                 talking a little bit more about                                 practical steps from now for the scope                                 of the next steps I'll be considering                                 the apache license and i'm gonna                                 actually talk up a little bit of like                                 details of like what different licenses                                 might might have it differentiation but                                 you're gonna see that are basically very                                 similar steps is just kind of like                                 licensed different license might have a                                 different kind of text or different kind                                 of like restrictions that you need to do                                 so first think i think like if you're                                 trying to bring your project to github                                 or something choose the license                                 understand what the license kind of like                                 implicates into your project that is                                 really when you're going to start kind                                 of like making your project open source                                 for this context like let's talk about                                 the apache license oh like if you put in                                 a project and you want to make that an                                 apache license project first thing you                                 have to do copy the contents of the                                 apache license into you license or                                 license md file in the root of your                                 folder and then you're going to have to                                 start looking to each of the files that                                 you have and start applying kind of like                                 the apache license header into the top                                 of the file as a command most of the                                 files except that i think if you have                                 for example maybe a test file or not                                 they don't accept that that may be                                 acceptable but that gives you like a                                 kind of like assertion that like all the                                 files have the proper license of the                                 proper copyright and kind of like the                                 first step for you to start applying the                                 license so easy                                 right done who thinks I'm done here okay                                 okay well not not really yet so I think                                 the the thing that you're doing here you                                 defining the license for your project                                 once you define the license of your                                 project you have a list of dependencies                                 that your project kind of like uses - -                                 to actually build and you need to                                 understand kind of like a license                                 compatibility - and then evaluate every                                 single dependency and see if that kind                                 of like is okay with what you're using                                 so if we look here we can see that the                                 permissive are usually acceptable or                                 compatible with like weakly protective                                 and then are kind of like compatible                                 with strong protective but you start                                 seeing that the way backwards is not                                 really true so if you have a project                                 that is apache license and you're trying                                 to and you have a dependence that is a                                 pharaoh GLP those are not compatible and                                 you are not going to be able to ship a                                 product or ship a project that has that                                 type of license you have to then kind of                                 like start evaluating what are your                                 options you might be able to replace                                 that with some different implementation                                 or you then might have - then maybe                                 that's not an option figure out what you                                 have to do maybe switch it to a                                 different license and evaluate those                                 kind of things and you have to do that                                 for kind of like every single dependency                                 that you have when we are doing this in                                 Apache usually what we'll do is on the                                 license file then we're going to start                                 updating that in listing all the                                 dependencies with the proper license                                 that it has so like for example if I use                                 a a Dodge R & B dodge are that RMIT                                 license I will at the bottom of the                                 license I'll then say MIT license files                                 and I can start listing those if the                                 license has different copyrights or                                 specific copyright is copyrights I might                                 have like two entries and things like                                 that so just as an example what the                                 benefits of that is that you then have a                                 single place where you can look into all                                 the dependencies and you can verify that                                 everything is okay instead of like                                 having to go into all the dependencies a                                 check off for for for a bunch of like                                 projects that you might not be aware of                                 so it makes it much easier for for folks                                 to evaluate your project and to see if                                 those are okay to bring into a project                                 that they have by the way I think if you                                 have questions I mean we'll have time so                                 you guys can ask so we're kind of the                                 state here that we have done our due                                 diligence we kind of like think we have                                 all the license have evaluated all the                                 dependencies or the license                                 compatibilities and we are ready to go                                 open-source and we are ready to start                                 accepting kind of like contributions but                                 at that point you still have to take                                 other precautions as well when you start                                 receiving contributions from third party                                 you want to make sure that for all the                                 contributions that you receive you                                 understand what is the present                                 precedence of that contribution so like                                 is the person that is building making                                 the contribution is the person that can                                 make that homestead code but also you                                 want to make sure that you have                                 permission according to the licenses                                 that you are using that you can still                                 ship that code and you can still bring                                 that into a product later on or or build                                 derivative works of that what we do at                                 Apache we use kind of like a corporate                                 CLA if you kind of like bring                                 the scope of like a corporation doing                                 donations are a set of employees working                                 on or we have the ICL a which is kind of                                 like a individual contribution that is                                 kind of like an agreement that the                                 contributor will license that as an                                 apache license and cannot now apache to                                 redistribute for individual projects                                 what I have seen people do is kind of                                 like a smaller version what this call                                 like develop developer certificate of                                 origin github allows you to kind of like                                 when you do a pull request which is kind                                 of like someone trying to do a                                 contribution to your project you can                                 have like a pull request template and                                 projects have been basically making a                                 template where the certificate of origin                                 is there and then every contribution you                                 can have basically a a track record that                                 this person contributed and they                                 asserted that he has he is the owner and                                 he has the ability to and he is giving                                 you permission to redistribute based of                                 the license that you have yes                                 so I think four is so the question is do                                 we actually need a a license agreement                                 for the contribution or not so I think                                 for smaller contributions I'm gonna give                                 some examples of the Apache and and some                                 examples of like other places in Apache                                 for smaller contributions I think we                                 accept that you don't need to have an I                                 CLA file we tend to expect that for like                                 when you start becoming large or when                                 you're becoming very frequent and that                                 is a requirement when you actually                                 become a comida to a different extreme I                                 have been I have worked in projects or I                                 have helped at projects that had like                                 maybe                                                                   because they haven't figured out what                                 they need in terms of like licensure or                                 any kind of like greement with the                                 contributor before accepting the pull                                 request so I think it I've seen diff                                 aspects I definitely think that to be on                                 the safe side this is not something that                                 is gonna make any burden on the actual                                 contribution so it should be okay to                                 have particularly like if you're just                                 building your own project so it                                 safeguards you as you try to make                                 distributions later on                                 if you're an employee usually sign in                                 your contract that everything you sort                                 of create during your work is sort of                                 property of your company so I think it                                 could be a problem if you don't have a                                 ççla sign for example that if it comes                                 to a fight sort of the company could say                                 we are well but this is ours you didn't                                 have the permission to commit that so                                 please take it out and in the worst case                                 it could be an important part of the                                 project so it I think it's a good idea                                 to have something in place yes I think                                 you're more coming to like when you see                                 corporations you're seeing definitely                                 like more towards larger contributions                                 and that what we expect also different                                 places have different laws so like for                                 example at California we kind of like on                                 our stuff like if for example we do we                                 do in like our own time so yeah you can                                 get to all kind of like different                                 requirements on different place so it's                                 best if you have for like individuals                                 just the DCO for more like Apache things                                 I see lar ççla that enables you to                                 basically be on the safe side have you                                 been dealing with software projects                                 which go more towards the more                                 restrictive area like a GPL                                           how's the point of intellectual property                                 playing in there I don't have a lot of                                 experience on that area mostly what I've                                 been doing is very permissive in terms                                 of like the projects that I contribute                                 mostly because they will be then                                 consumed and either ship it or serve                                 serve it as a service on a cloud                                 provider so those kind of like my                                 experience I think in general I think                                 when it goes more to things                                 like Linux Java and things like that                                 from time to time we see those big like                                 patent rollers or like people just                                 starting suing each other and so that                                 that happens on that kind of like                                 license but I don't have a lot of like                                 experience on that area okay so uh next                                 step once we have our code there I think                                 really what's gonna make your project                                 successful is if you start making a                                 community some tips here of like how you                                 can actually do that so I tend to see                                 like contributions come as a life cycle                                 someone will start using your project                                 for some reason or other they will find                                 bugs or require kind of like                                 enhancements then they start                                 contributing either or and that then                                 becomes kind of like sustainable                                 contributions because they are using                                 they find more bugs and they get they                                 provide more enhancements but really to                                 get people to start using I think you                                 need to have like three basic things                                 getting started guides you want to make                                 it easy for someone to just come and use                                 your project some basic documentation                                 once they start using and they need to                                 do kind of like anything specific it                                 needs to go and be able to find there so                                 like documentation for api's and just                                 basic utilization of the projects for                                 integrating with your project for                                 example and then tests I think tests                                 here I mean a lot of people will think                                 that is just because you want to make                                 sure that your project works but I                                 really tend to see tests as a second                                 kind of like a type of documentation                                 when you need more advancements in areas                                 or when you need to kind of like really                                 see how things in                                 work internally or be able to integrate                                 usually the tasks will give you very                                 detailed information about how to do                                 that also to attract contributors I                                 think you want to be very welcoming and                                 start mentoring new members if you come                                 to a place and then you ask a question                                 or you send a very simple contribution                                 and people start ignoring or not like                                 even helping you it's very hard that                                 you're gonna start seeing that guy                                 contributing again and again and again                                 unless it's right really like it needs                                 from like a day job or something like                                 that but it's if it's really like                                 volunteer you're not gonna see those                                 guys coming back and also maybe have a                                 list of like Help Wanted or like                                 beginners kind of like tasks or issues                                 that help people that are trying to come                                 and contribute to see areas that you you                                 as a understanding of the internals know                                 that it's kind of like easy but also                                 it's kind of like welcome expected or                                 wanted so that that helps their                                 contribution initial contributors kind                                 of like get guided into edge areas you                                 might want them to work in terms of like                                 documentation so like some also                                 suggested topics I mentioned some but                                 like build and installation steps like                                 how you actually come in and do things                                 contribution guidelines API                                 documentation all those kind of stuff                                 help people to get and know how they can                                 start using and contributing to your                                 project in terms of like tools how do                                 you do that                                 Apache we have a whole bunch of like                                 infrastructure you can have the website                                 and everything if you are just on github                                 github has github pages where you can                                 have Jekyll kind of like in markdown to                                 build that documentation you can also                                 have weak isn't to link into the                                 repositories if you're building like a                                 Python libraries or things like that                                 there is a read the docs                                 you kind of like can use and that is                                 kind of all these tools are like a free                                 tube to public using an open-source                                 usage so feel free to use that any                                 questions so we talked a lot about like                                 just bringing your open-source project                                 into github I'm gonna switch gears                                 a little bit of like how you would bring                                 your project to Apache so why we want                                 Apache I think we we talked a little bit                                 about like the importance license                                 I think the apache license to that all                                 it's something that is very kind of like                                 well understood and accepted by                                 enterprises and corporations so it's a                                 it's easy to to get as a patch lysis                                 project and then get it consumer into                                 products and services but also the                                 governance that Apache has is something                                 that is understood by many people it's                                 kind of like merit meritocracy based and                                 it's acceptable like when you come and                                 say well I'm gonna do things that Apache                                 they know how people how decisions are                                 make how like people become commuters                                 and involved to like PMC members and all                                 of those guys because we have a lot of                                 projects and a history of like more than                                 a                                                                      something so it's it's it's something                                 that but also like the branding of                                 Apache helps you to start a tracking                                 community and in making your a community                                 around your your code how those projects                                 get into Apache we have Apache Incubator                                 Apache Incubator it's kind of like the                                 entrance for any projects that come into                                 Apache and it has kind of like a main to                                 goes to to kind of like when a project                                 gets accepted so it wanna ensure that                                 all the legal aspects of the software                                 are kind of like done that like all the                                 things that we're talking about                                 licensing it as an apache license and                                 then I call the dependencies are                                 compatible and all those kind of things                                 those are those criterias are met and                                 want to make sure that you start                                 building a community around your project                                 and mainly the idea is we want to have a                                 diversity community at least kind of                                 like three different independent or                                 different organizations so that like for                                 example if a company a that is                                 contributing to the project kind of like                                 strategically change direction and it                                 doesn't put a lot of efforts there we                                 still have different peoples that can                                 and continue with the life of the                                 project the incubator PMC also kind of                                 like provide mentors to those projects                                 the mentors are kind of like responsible                                 to make sure that you understand all the                                 legal aspects you understand how you do                                 things in a patchy way build your                                 releases and also like an apache in                                 itself gives you some of like background                                 in terms of like a help on legal                                 community and different types of things                                 so it's a good thing to kind of get a                                 foundation get an infrastructure and                                 like a patchy around your project if you                                 want to start building a proposal we                                 have a very detailed guide but kind of                                 like two things that you start to look                                 at the beginning is like look for a                                 champion that is going to kind of                                 present that project into the Apache                                 Incubator and look to at least three                                 mentors that will help you through the                                 kind of like stage that you are in the                                 incubator process in terms of like then                                 writing your actual proposal some of                                 like best practices here or some things                                 that I've learned in the past so have a                                 detailed description of your project I                                 think that is given and then you will be                                 very well familiar with that but start                                 then highlighting some of the premises                                 or potential integration with different                                 Apache projects you start showing that                                 there are synergies and that you might                                 have a better way of building a career                                 see around that if you know about                                 dependencies some risks bring that up                                 front so like I've been part of a                                 project that we knew that we had a                                 licensed dependency on a component that                                 which the license wasn't compatible with                                 Apache we brought that up to the                                 beginning we knew that there's going to                                 be a risk we ended up being lucky that                                 we working with the community and we                                 were able to change the license to kind                                 of like a compatible license with a                                 faction we were able to go up front with                                 that otherwise we knew we were going to                                 be in jeopardy of like not being able to                                 graduate or or something like that and                                 try not to come into Apache just like                                 one or two commuters that just work for                                 the same company and stuff like that                                 tries you before you bring something try                                 to have a diverse set of like initial                                 commuters try to do some collaborations                                 with maybe a different company or a                                 university or folks outside that maybe                                 have the same interest that helps                                 counting to towards kind of like a                                 diversity around your project right from                                 the beginning and this is mostly like                                 kind of like a life cycle during                                 incubation and serve more as a guide so                                 you get the proposed incubator projects                                 you can enter incubation creates relays                                 build diverse community and actually                                 after a certain point you met all the                                 criteria and you start graduating when                                 you graduate you become what we call                                 like a TLP which is an official Apache                                 project otherwise you might kind of like                                 not get to that as to that and it can                                 retire or go to and don't graduate so                                 getting around the end of my talk so                                 like just a quick summary here so public                                 code is not open source you really is                                 all about the license and the governor's                                 for your projects to to really like be                                 kind of like                                 a good open-source project we at Apache                                 and I think in general we value a                                 community over code so it's much                                 important to have a community and get                                 your project going then actually just                                 the code the code itself is just the                                 code and not really helpful and now I                                 mean if you interested you know how to                                 get at least a high-level guidance of                                 like how you start to bring your project                                 to Apache feel free to reach out to us                                 yes and we'll have more details on the                                 workshop tomorrow what time is your talk                                 ok so just look for Justin's talk                                 he's actually the current IP MC chair at                                 Apache so he knows all that you might                                 need to might want to know as well so                                 that's about it so I think if you have                                 any questions yes ok question sorry a                                 question I had was if you join the put a                                 proposal project for the budget of the                                 foundation incubation what kind of                                 support do you get in terms of hosting                                 of the code CI compute capacity and that                                 kind of stuff very good question so uh                                 the benefits that you get are Apache is                                 mostly a lot of the things that you                                 mentioned we will provide like for                                 example hosting of your mailing lists                                 the code is going to be provided at the                                 Apache kind of like github me for sure                                 sorry get infrastructure and get                                 mirrored to github we have internal sea                                 ice machines we also have I mean a lot                                 of people that doesn't have a very kind                                 of like requirement for a high capacity                                 can use things like for example trav CI                                 as well                                 we also like provide kind of like a                                 legal infrastructure in the sense of                                 like if you have questions about a                                 specific license or about a specific                                 contribution we will have you can ask                                 the experts or you can kind of like                                 excavate to like even like we have pro                                 bono lawyers that help sometimes if it's                                 not something that we have handled in                                 the past so you get a vast amount of                                 like helpful resources on those areas so                                 it that gives you kind of like in                                 contrast with like just being at github                                 it gives you a much more infrastructure                                 aspects or support to think we have one                                 in the back yeah hi just a quick                                 question I'm quick comments I've been                                 working I'm a lawyer working with open                                 source for                                                              the license declaration try and use SPC                                 SPD X please it's the standard now for                                 declaring licenses it meets machine                                 readable and helps scanning and                                 understanding what the license is it's a                                 it's a XML format for declaring any                                 information and it's SPD x.org and it                                 just says license identify F and two                                 dots Apache or whatever it is and                                 there's there's license codes there this                                 means if for example if someone's then                                 taking your code and building into a                                 much larger package they can scan it                                 with scanners like force ology or                                 Chinese scan and they can easily pick up                                 actually what that license is that                                 license declaration it's it's so easy in                                 in if you copy paste or use other                                 people's license in the header files to                                 make a complete mess of it and you know                                 you say like LGPL                                                 existed and things like this so SPD                                 expert I do recommend this and second                                 thing is if you are actually just saying                                 doing the legal review there all sorts                                 of tools out there so you don't have to                                 do I ball you can actually use a scope                                 scanners like force ology on the source                                 code and that should pick up most of the                                 license declarations and help you sort                                 all that information out and finally                                 just a bit of a plug for tomorrow's                                 workshop we have a legal compliance                                 workshop in the morning where we talk                                 about open chain and                                 quartermaster which is a tool for a                                 workflow tool for automating and                                 supporting all this compliance work in                                 larger packages obviously if you've got                                 three dependencies is not really useful                                 but if you've got                                                       be useful just a comment ok great thanks                                 just a brief question if we want to                                 publish an open-source project we                                 thought about well github is the place                                 to go                                 well how necessary is that to be                                 somewhere there or just forced our own                                 service and make enough advertisements                                 through some channels like whatever yeah                                 well I think where you go might not be                                 the biggest problem but it's more like I                                 want to make sure that if you're on                                 github or if you are an Apache or if you                                 are in a different place you you're                                 doing the right things I think that's                                 mainly my goal that you understand like                                 the license you understand that if you                                 make your code public and it's just you                                 working there you're not building a                                 community you're not making your your                                 project really like so sex very                                 successful and expanding that the usage                                 so it's mostly to to get the right                                 things get the license analyze the                                 dependencies and make sure you start                                 building a community you start going to                                 that direction independent if you're                                 just building at github or if you're                                 building a tube to to a foundation or                                 anyplace else I myself have lots of                                 projects that is just on github                                 we as IBM we have projects that are in                                 github we have projects that are at                                 apache we have projects that we                                 contribute that are at linux foundation                                 and you name it it's it's all over but                                 it matters the way you bring in the                                 software and contributing that in open                                 source unfortunately we don't have any                                 more time but thanks so much for the                                 questions and I'm sure you can ask                                 Luciano                                 at the lunchtime break in the sponsors                                 area thank you so much for coming ok                                 thank you very much
YouTube URL: https://www.youtube.com/watch?v=69FKhaQJX80


