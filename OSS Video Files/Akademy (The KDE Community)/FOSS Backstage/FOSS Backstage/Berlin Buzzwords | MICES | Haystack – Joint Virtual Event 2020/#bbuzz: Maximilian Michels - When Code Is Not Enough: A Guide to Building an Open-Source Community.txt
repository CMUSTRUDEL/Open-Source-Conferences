Title: #bbuzz: Maximilian Michels - When Code Is Not Enough: A Guide to Building an Open-Source Community
Publication date: 2020-06-29
Playlist: Berlin Buzzwords | MICES | Haystack â€“ Joint Virtual Event 2020
Description: 
	More: https://berlinbuzzwords.de/session/when-code-not-enough-guide-building-open-source-community

The community is the heart of every open-source project. Without a proper functioning community, the project is bound to have a heart attack, which could be the end: Think of unsatisfied users, project forks, maintainer burnouts, or very annoying arguments.

Building a community can be a daunting task but it doesn't have to be. All it takes is a critical mass of people who have a long-term interest in growing the community. Be it companies or individuals.

As it turns out, this group can systematically foster the community by building a framework for community interaction: writing down guidelines, helping users, onboarding new contributors, etc. The next step is to break out of the daily business through organizing conferences, meetups, or regular face-to-face meetings. Ultimately, the community is held together by relationships which are best strengthened via face time.

In the past years, I've seen two different communities grow: Apache Flink and Apache Beam. Both have found a way to grow their community. I'd like to present and analyze the paths they chose to build the strong communities they have today.
Captions: 
	                              so hello everyone and welcome my name is                               Max and thanks for tuning in to the                               session and yeah thank you for the nice                               introduction let me start off by saying                               this is a bit of a different talk most                               talks here at buzzwords focus on                               building or using open source                               technologies but I want to take a step                               back today and look beyond the code so                                what makes an open source project open                                source while strictly speaking it's the                                freely available code but there's more                                to open source than its code and in                                order for a project to be successful a                                successful open source project it needs                                to develop a community because the                                community is like the backbone of the                                project it establishes the framework for                                the collaboration for innovation for                                growth and ultimately also                                sustainability so for example in a                                healthy and diverse community the                                constant flow of ideas is likely to                                produce a better outcome than a project                                that is proprietary proprietary or one                                which has a disorganized community but                                not all communities are the same so                                let's take a look today what makes a                                good community let's take a look at some                                some of the structure of a community how                                to build it and also let's spend a                                little bit of time to see what are the                                common pitfalls and some examples of                                successfully build communities all right                                but first of all let's talk about open                                source what is open source anyway it is                                pretty much taken for granted these days                                to have you know a bunch of open source                                code available free to use but in early                                times the soft development starting in                                let's say the                                                       time when people started writing really                                code                                there used to be normal to distribute                                the source code alongside with the                                binary because often times there was no                                standard or there was no standard                                computer architecture at the time so                                people had to adjust the source code in                                order for the program to run the                                software to run on their computer or a                                mainframe or whatever it was called at a                                time and most people who develop                                software of course were like researchers                                at universities or it companies and                                software was actually bundled with                                hardware a lot of times so software                                would would also be supported by a                                one-time payment for the hardware again                                that changed later because as we see                                today because in the                                                    increasingly more complex we had like a                                lot of programming language operating                                systems and people really started using                                software and they started to charge                                money and in                                                   copyrightable in the United States but                                actually I didn't have a big impact                                because many companies already had                                stopped to distribute source code to                                increase their revenue in                                             Stallman created the GNU project because                                well he was frustrated with non portable                                proprietary computer system so you                                wanted something portable and yeah he                                created this free software foundation in                                                                                                       Software Foundation actually did doesn't                                like the term open source they wanted a                                different term they wanted they still                                use the term free software instead                                because they say open source is a                                development methodology free software is                                a social movement                                well I mean it's debatable and there's                                definitely some source of truth in it                                but the internet and increasing user                                softly led to a lot of commercial use                                and basically open source one as a                                concept but yeah as more and more                                companies adopted it they were also                                great communities founded and in nine                                                                                                    source initiative was founded and we had                                the first very popular source project                                besides Linux the Netscape Browser and                                in                                                            Foundation was founded so there's                                clearly evidence of success in open                                 source and a lot of successful                                 communities and other foundations being                                 founded like the Linux and and Python                                 Software Foundation before we dive into                                 communities in more detail let's let me                                 talk a few words about myself again I'm                                 max I'm a software engineer in                                 consultants foreign sauce technologies                                 and I started using open source software                                 around                                                                 own network router with Linux and early                                                                                                  Thunderbird user I'm quite early and                                 I've used Linux also from my desktop for                                 more than                                                               conference today you would see I'm using                                 MacBook but still I used Linux and open                                 source of course every day so it was                                 actually a little bit later in my                                 studies that I understood to look better                                 what open sauce was because I was really                                 interested in distributed systems at the                                 time and I was working at a Research                                 Institute and we had a really fun                                 database distribute database and it was                                 also a source and so at first time I was                                 really like working in more intensively                                 and on an open source project instead of                                 just using open source and reporting box                                 but I found that there were no really                                 there was no community I mean a sense I                                 was a community because there bunch of a                                 bunch of people at the Institute were                                 working on the software but we never                                 really received any patches from the                                 outside we had actually some people who                                 tried it out and we're not working at                                 university and they were using the issue                                 tracker but we                                 actually ignored the issues because they                                 were kind of getting in our way of                                 getting our work done and I think this                                 is definitely a problem that people have                                 you know also in big project but I also                                 started wondering how does open source                                 work like how can you how can you                                 actually build a community so after                                 graduating I had the opportunity to join                                 a company called data artisans which the                                 company here in building star called Bev                                 Erika but anyways this company built a                                 community for an open-source project                                 called Apache flank and it actually                                 started with like close to                                            least outside of the academic context                                 and yeah I just found out at the time                                 that I really loved distributed systems                                 coding problem-solving but I also cared                                 about open source and yeah and reason is                                 simple for that because the community is                                 really the heart of any open source                                 project and without the heart is no know                                 life in an open source project so I'm a                                 bit bit biased towards Apache which                                 which you probably will notice but I'll                                 also take a look at other forms of                                 ownership in an open source project so                                 now this was actually the slide that I                                 wanted to show but it's just an image so                                 that's not really any text on my slides                                 so I'm going to skip this a disclaimer                                 before we start there is no easy recipe                                 for open source communities this                                 probably shouldn't come as a big                                 surprise building a human community is                                 something that doesn't happen overnight                                 and it takes a continuous effort to                                 nourish a community now we will look at                                 some of the key aspects for that so bear                                 with me but you need to invest long term                                 in a community to see the benefits and                                 to see it grow so let's look at why do                                 you actually want to build a community                                 so before we look                                 how let's start with why so a very good                                 reason for studying community is to                                 attract attention to your to yourself to                                 your company and that's a rather selfish                                 reason right but believe it or not it's                                 one of the reasons people work in open                                 source and and that's completely fine                                 some people try to get as many stars as                                 possible and github and some companies                                 of course uses to attract attention to                                 the company or a product which are a                                 service that they build using the open                                 source product or they're looking for to                                 promote the ecosystem or it's just that                                 they want to sell subscriptions but of                                 course it's not a no-brainer but it's a                                 good reason to start a suburban source                                 project and build a community                                 another reason building a community is                                 useful for company is recruiting because                                 companies who are good at with open                                 source they usually are favored by                                 developers and they can acquire                                 engineers more easily now a really                                 important aspect of course is innovation                                 and ideas if you have a strong community                                 you basically have like a super machine                                 for exchanging ideas and driving                                 innovation and the feedback loop you get                                 in an open source project is it's                                 typically much faster than in closed                                 communities so you can make races more                                 often and just move faster also if you                                 if you work in the community you might                                 be able to save costs because you share                                 maintenance testing and innovation and                                 you just have to do your small part                                 ideally right but still if there's no                                 community you will have to build it and                                 it's gonna be work                                 another reason is you for building a new                                 community is forking because you realize                                 you're you're unsatisfied with an                                 existing community and you want to                                 forget fork it now that's usually not a                                 good idea but there are some exceptions                                 like if you look at                                 the Jenkins community which was forked                                 from from Hudson that worked all right                                 and there was a good reason for doing                                 that and the last reason I have for why                                 you should build a community is open                                 source is fun right exchanging ideas                                 making new connections just sharing                                 resources it's a it's a modern mindset                                 that that we share things and because                                 not sharing is kind of the past in my                                 opinion so instead of just you know                                 building a community from scratch                                 maybe there's already community that                                 would fit your needs and in this case                                 you could join an existing one and focus                                 on what is important there for you so                                 with that out of the way let's take a                                 look at what makes a community so                                 basically have like four topics let's                                 say number one is code number two is                                 people and number three is processes and                                 lastly what do I have last its ownership                                 which is probably almost important point                                 so let's start with code                                 why is code important for a community                                 well if you want to build a community                                 you have to build around a meaningful                                 piece of software it's an it's a                                 software community right so if you don't                                 provide value to people basically                                 nobody's gonna care about your project                                 if there's already existing solution you                                 know and you're trying you're doing the                                 same thing that already exists you know                                 there's usually little incentive for                                 people to join your community also code                                 itself attracts a certain kind of                                 community think about let's say about                                 the complexity about ease-of-use about                                 what programming language you use all                                 that has an influence on the type of                                 community                                 compare for example a lisp project and a                                 JavaScript project it's very different                                 kind of people who work on that and                                 databases and web frameworks again huge                                 difference so you should ask yourself                                 how do you know how could you know the                                 people or the type of people that could                                 contribute and of course is there a                                 demand for a community around your code                                 so we had code now let's look at people                                 and I put I put this molecule picture                                 there or is it our universe picture and                                 because a community consists of layers                                 which I of course moving all the time                                 but if most most people when they when                                 you think about people in the source                                 community they say well they are users                                 they are developers and their                                 contributors and that's a very simple                                 model again like users what users are                                 for developers developers and                                 contributors are kind of doing both and                                 but they're not really developers yeah I                                 mean it                                 in reality it's much more complex of                                 course because the software developers                                 if you think about it they're rarely                                 employed by the project I think there                                 are you know they are definitely project                                 where that's the case but it's also                                 question if that's good usually                                 developers work in companies and there                                 you have across the source funding                                 problem and people who work on your                                 poster house but on your open source                                 project in the community they have                                 different goals and and you should                                 acknowledge that so don't expect that                                 everyone can spend the same amount of                                 time in the community and but you know                                 still give them a chance to contribute                                 if you have a component that's really                                 important don't you know rely on a                                 single person single maintainer building                                 some redundancy otherwise                                 if there's maintainer burnout which does                                 happen frequently you yeah you have a                                 problem basically in your community and                                 recognize that your community can span                                 outside the codomain this is a very old                                 model that we are all coders in the                                 community nowadays you know there are so                                 many tasks which are important in open                                 source prominent community that don't                                 require coding and then also think about                                 the people behind you know developers or                                 people actors actively contributing who                                 are the decision-makers every project                                 has you know these people that you know                                 back back the project and if you can                                 find a way to reach out those to these                                 people then and acknowledge that they're                                 there it can be very helpful for your                                 community                                 also think about writers bloggers                                 evangelists and generally people into                                 the ethic enthusiastic about your code                                 or your community if you make it easy                                 for those people to reach out and you                                 you probably have the better stories and                                 you can share more about what your                                 project is doing so ideally you want to                                 have all kinds of roles present you want                                 to have coders you want to have                                 architects you want to have organizers                                 supporters people ask questions and                                 people answer questions so you need                                 those diverse roles so the question is                                 how you know how do I get those people                                 and how do I get such a rich community                                 well every community needs a group of                                 people who can take responsibility for                                 the project and I call that the critical                                 mass which is probably best described                                 you know as this inner thoughts you know                                 in the Indies in this image here on the                                 slide and it's the critical mass is like                                 diverse group of people with different                                 background different interests                                 and also varying experience and these                                 people basically they may make sure that                                 the project runs and in the beginning                                 that could mean just starting off the                                 project                                 so donating the code lines it licensing                                 it appropriately trading by Lars                                 creating a code of conduct and                                 contribution guidelines but also in the                                 day-to-day business they're really                                 important because they can like drive                                 discussions on the mailing list it can                                 answer questions on the main lists or on                                 on other platforms and basically they                                 ensure that the project stays relevant                                 with regards to technology which is                                 really important for a project then of                                 course getting rid of technical debt is                                 an important point and ensuring that the                                 project infrastructure works there are                                 also other tasks like media mediating                                 conflicts recognizing contributions to                                 the projects that are really important                                 in for example in some of the projects I                                 worked we have we we we always try to                                 encourage new contributors to contribute                                 more and we gave them feedback we also                                 like celebrated let's say                                              innovate and anniversary anniversaries                                 of the project but you also need a core                                 group of people who go beyond just the                                 day-to-day work you need also people to                                 organize meetups and conferences writing                                 articles and books and also you know                                 promote the project on social media and                                 being excited about it so how do you                                 find the critical mass well I have a                                 good quote here by young Lena who is the                                 CouchDB PMC or share chair sorry so                                 supreme swimmer but he's the chair and                                 he says on his blog I try to be involved                                 with every threat on the main list                                 showing exemplary behavior                                 being nice to people taking the issue                                 seriously trying to be helpful                                 overall after a while people stuck                                 around not only to ask questions but to                                 help with answering as well and to my                                 complete delight they mimic my style so                                 I think the critical mass is like the                                 role model of the community it all                                 starts with maybe just a few people but                                 it grows over time as you show these                                 exemplary behavior and you motivate                                 other people to be active in your                                 community so the third point is                                 processes processes are super important                                 in a project because em if you if it's                                 not clear to somebody who joins what the                                 processes are then you know it it takes                                 a lot of time to to learn about that and                                 it also creates it creates some huge                                 barrier between the people who are                                 already part of the community and the                                 people who are trying to join so                                 basically you need to document all of                                 this and and you and you could start                                 with workflows like how do you                                 contribute to the project what are the                                 parts of your project that need support                                 how are changes reviewed how do we                                 document if we make changes how do we                                 test them and how do we release software                                 that all needs to be written down and be                                 very clear then also communication needs                                 to be clear what tools do we use where                                 is what is the source of truth is it's                                 like or is the main ones or do we use                                 mailing lists do we have a code of                                 conduct for everyone to be on the same                                 page and then also how how do we earn                                 merit so in a lot of communities you get                                 basically more permissions to work on                                 code based on merit and the problem with                                 this is that the merit needs to be                                 recognized by                                 someone who's already in the inner                                 circle and yeah connected to that is the                                 decision-making how do we decide based                                 on constants majority and who has the                                 final say and of course their legal                                 legal processes that also need to be                                 watched out for and compliance yeah all                                 these should be formalized and written                                 down as much as possible                                 speaking about compliance let's let's                                 take a look at the last ingredient of a                                 community which is ownership now                                 ownership is often associated with the                                 license of the code so we have licenses                                 like public domain                                 we have missive licenses like the Apache                                 License BSD license ma MIT license but                                 we also have like copyleft license GPL                                 and others and we have proprietary                                 license licenses are kind of important                                 for the community as well because they                                 said like the legal framework and they                                 influenced the type of community which                                 can grow around a piece of software that                                 is licensed so for example if the apache                                 license doesn't require you to conjure                                 read back which may seem like a                                 disadvantage for your community but it's                                 also a great way to grow the adoption of                                 your project and that could that                                 eventually could help your community but                                 ownership also applies not only to code                                 but also to infrastructure repositories                                 manglers chat servers and the name of                                 the project actually which is often                                 trademarked and ultimately ownership is                                 is like the like the the most important                                 thing for a decision-making governance                                 because if somebody owns the project                                 then he or she can just take it away and                                 and that's that can be a problem in the                                 most in most project we have two kind of                                 two different models one is the model of                                 the panel event dictator which was                                 coined by guido van rossum and also                                 lived in the linux project by Leamas                                 towards and it has some advantages                                 because you can you have really tight                                 control over the project and you                                 basically can control it if you own it                                 but it's also a bottleneck and limits                                 limos limos solve this problem by for                                 example writing get which got the Condor                                 kernel development to scale again with                                 him as as the vanilla bean dictator but                                 that's not really feasible for a lot of                                 project since that we have foundations                                 we have the patchy software foundation                                 of the Python Foundation Linux                                 Foundation Eclipse and of course the                                 Free Software Foundation so in my eyes                                 the Apache and the free software                                 foundation probably the most independent                                 and open ones because they accept while                                 they do accept donations from the                                 outside the only way to influence the                                 project is by gaining merit in them so                                 merit Meighan means that you get through                                 your contributions through doing                                 something meaningful you get a committer                                 ship or some rights in the project in                                 the linux and pythons of rotation                                 actually also have the merit based model                                 but you can also donate money and you                                 automatically get a saying in the                                 project decision which is again a                                 different way to define the ownership                                 and that has an influence on the                                 community so in the end it doesn't                                 matter but you have to decide what is                                 best for your what governance model is                                 best for your community so yeah there                                 you have it I mean a good community is                                 one which solve all the problem or at                                 least address                                 system in in some way so let's look at                                 some of the points that could be tricky                                 in the process of building a community                                 so first of all you should take orcas or                                 seriously if you just dump your code                                 somewhere and you think you're the                                 community is built going to build itself                                 it's not going to work it's been proven                                 and so you need to think about that in                                 advance you know it and approach this in                                 a structured way then you should                                 communicate openly and be patient lack                                 of funding and monetization can be a                                 real problem because yeah you should                                 make sure that your project can be                                 financed somehow and people can make a                                 living with it this is often very tricky                                 and I don't have a definite answer for                                 that but at least think about that and                                 another thing that can happen is that                                 your users are unsatisfied and that                                 things break and you should have a plan                                 how to endure a dress this concern and I                                 already mentioned that earlier if you                                 have people too few people walking on                                 stuff maintain a burnout is is very real                                 so reach out in advance so or try to                                 find somebody else and introduce him or                                 her so you can have some redundancy                                 built in and in every project they're                                 going to be arguments and heated                                 discussions that's pretty normal but                                 make sure that you you know speak                                 civilized and you know moderate these                                 discussions in the end project can die                                 and reputation can suffer actually if                                 you put your name somewhere or                                 associated with the                                 and yeah                                 since open-source communities can do                                 harm perhaps you talk on building a                                 community first                                 so before we conclude I want to take a                                 look at two project one is Apache                                 filling and the other one Apache bean so                                 flink is it's a stream technology me                                 processing technology it was it was a                                 research project and then a company came                                 and wanted to build a community around                                 it to ultimately also drive the adoption                                 of link and I think Flint did a lot of                                 things right because they embraced                                 open-source from the beginning so it                                 meant while I was working at the company                                 that built fully that we we didn't                                 discuss anything internally anymore we                                 shared everything on the mailing list we                                 discussed lemmings we shared design                                 documents and we also store ghen eyes                                 meetups around the world from the very                                 beginning of when after we founded the                                 company we also started a conference or                                 out fling around Flint code fling                                 forward which is still running every day                                 at every year and here in Berlin and in                                 San Francisco and also the community                                 expanded to China in                                              company was actually born in bought in                                                                                                      what is amazing about this is that this                                 corporation went on for many years                                 before and still continues and that I                                 think is a huge success of an open                                 community that you know functions                                 despite you know of course money being                                 involved and then there's Apache beem                                 beem was originally a Google project and                                 it was put on github without any clear                                 of missouri's contribution guidelines                                 just you know asked piece of code                                 but in                                                                   was Apache beam joined the Apache                                 Software Foundation and I think beam did                                 a lot of things right because it had                                 very clear contribution guidelines so in                                 the beginning we regularly evaluate                                 contributors for committed ship and send                                 out encouragement emails we have very                                 early awarded committer ship for non                                 call contributions which at that time                                 few projects were doing and still not                                 norm I would say and we also organize                                 beam summit which is a conference which                                 takes place in August this year and we                                 also do meetups of course so I'm kind of                                 running out of time here so let me                                 conclude with just five secrets to                                 building a strong community of course                                 building a community is not an easy task                                 and I'm sorry if you if you wanted to                                 watch this talk to you know get the                                 definite answer and the the clear way to                                 success that I'm sorry I couldn't share                                 it with you but I hope I could describe                                 some of the important aspects of                                 building a community                                 so to summarize here are five secrets                                 and which I already covered so first one                                 is communicate openly you know it so                                 called open source for a reason if so                                 you should make sure that everything is                                 is openly and transparently in your                                 project that's the only way somebody                                 who's new to your project can join your                                 community then document well this                                 actually ties with the communication as                                 well so everything that you do should be                                 should be documented so people don't                                 have to you know dig into like old                                 mailing lists discussions to find out                                 you know what what was actually cited                                 there so                                 Yeah right design documents right good                                 commit transcriptions always make sure                                 to document and I cannot emphasize this                                 enough you need to innovate frequently                                 because open source projects you know                                 they are also a very competitive market                                 their new project starting all the time                                 so in order for your communities to                                 survive you need to innovate recruiting                                 is super important because eventually                                 enough to believe people are going to                                 leave your community they're going to go                                 to a different job they they forget                                 about you and if you don't recruit new                                 people all the time then your community                                 is in danger of dying yeah and and the                                 last point is the relationship if you                                 foster relationship for example Viera                                 meet meetups or conferences you are                                 building the foundation for your                                 community because ultimately we are all                                 humans and everything is about                                 relationships so I believe with the                                 critical mass that I mentioned or with a                                 critical mass you can build a foundation                                 for your community and it might be small                                 in the beginning but if you show                                 exemplary behavior and if you always                                 reach out and and be and you're open to                                 new members then your community will be                                 successful with that I want to conclude                                 and I think we have some time for                                 questions now thank you                                 Thank You max for this activating talk                                 about building a community I have one                                 question from evolution who is asking                                 what examples of open source projects                                 that succeeded without backup from                                 commercial entities can you give and of                                 course and this is the most pylos                                 offical part of the question first we                                 would we should have to define success                                 and without have to repeat the question                                 now is a                                 well yeah I get it I think there are a                                 lot of examples of successful                                 communities for exact project that don't                                 you know are not financially very                                 successful for example anything like                                 this is tool called YouTube download for                                 example which really which has an                                 amazing community I've been using this                                 for some years and you know everybody is                                 always you know so helpful there and                                 when whenever you know there's a new                                 side which is this basically download                                 script for few for downloading YouTube                                 videos but also like all kinds of                                 episodes videos you find on the Internet                                 which is really nice if you want to                                 archive them just in utility but um                                 that's a really good project that is not                                 a commercial project also I think                                 ultimately you know that a lot of                                 project who like say Firefox or                                 Thunderbird which where you have really                                 have a foundation behind it like also                                 with Apache project which it's for                                 exhibit the case of book fire Mozilla is                                 it's really just doing good for the                                 people and not primarily profit oriented                                 and the other part of the question was                                 what what do you how do you find success                                 I think you define it how do you define                                 it and and for example yeah low changes                                 added what was for example the critical                                 mass the size of community that makes                                 Ana pursue projects successful like when                                 you have five five thousand stars and                                 github just stopped being successful or                                 how is it counted yeah I don't think                                 there is like a magical metric that                                 shows you if a project is successful or                                 not                                 I think it's successful if people use it                                 but I mean even if they're just a                                 handful people using it                                 those people are having fun and you know                                 they share experiences that's that's a                                 success for me I mean what is not a                                 success to me is I think if you know and                                 they're a lot of project like that who                                 we're basically like one person build                                 something and a lot of people use it but                                 you know the community around it doesn't                                 grow and that person just you know works                                 his ass or her ass off and nothing                                 happened get ocularly it's tackling                                 issues where it doesn't work like I want                                 or something like that yeah yeah and                                 also of course if you know nobody you                                 get users if there's just that code on                                 github I think that's a failure no more                                 questions                                 on my side thank you max whoa thanks for                                 moderating                                 you
YouTube URL: https://www.youtube.com/watch?v=cjM24HZHTgo


