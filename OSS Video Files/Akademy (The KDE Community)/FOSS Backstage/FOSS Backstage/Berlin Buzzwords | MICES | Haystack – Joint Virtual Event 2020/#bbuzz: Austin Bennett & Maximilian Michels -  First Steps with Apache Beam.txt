Title: #bbuzz: Austin Bennett & Maximilian Michels -  First Steps with Apache Beam
Publication date: 2020-08-04
Playlist: Berlin Buzzwords | MICES | Haystack â€“ Joint Virtual Event 2020
Description: 
	More: https://berlinbuzzwords.de/session/first-steps-apache-beam-writing-portable-pipelines-using-java-python-go


Full title: First Steps with Apache Beam: Writing Portable Pipelines using Java, Python, Go 

Apache Beam is an open source unified model for defining data processing pipelines (Batch and strEAM), which allows you to write your pipeline in your language of choice and run it with minimal effort on the execution engine (ex: Apache Spark, Apache Flink, Google Cloud Dataflow) of choice.  In this practical session we will get hands-on writing Beam pipelines, and as well as discuss the fundamentals of Beam programming model, and SDKs (Python, Go, Java).

Prerequisites

You will need to install IntelliJ IDEA and/or PyCharm with the EduTools plugin, and with the kata(s) installed in the language of their choice to work through exercises in the online platform.

Instructions can be found on the blogpost here: https://beam.apache.org/blog/beam-kata-release/
Captions: 
	                              next up is a workshop about Apache beam                               specifically how to get started with                               Apache beam so this is going to be a                               very interesting session if you want to                               write data pipelines in Java in Python                               and go in sequel and the workshops not                               given given by me it's presented by                               Austin Bennett he is a cloud architect                               at dish and he is also a cognitive                                linguist and researcher with interest in                                multimodal communication now I don't                                know what that is but I                                he is pretty into the asked about beam                                and yeah looking forward to the workshop                                now thank you                                oh hello everyone all right let's                                alright cool so this is first steps with                                Apache beam we're going to walk through                                writing supportable pipelines with Java                                Python and a little bit ago more                                enthusiastic about go then where it's at                                at the moment but we will see that so                                what we will cover today I will walk you                                through on introduction here's what the                                beam is all about let's get an overview                                let's certainly get hands-on that's                                prime takeaway I hope at the end of this                                block you guys feel comfortable using                                beam we will take breaks throughout the                                lecture here for exercises or what we                                call Cotto's                                and then we'll dig into some of the                                windowing and time semantics some about                                triggering and streams and also side                                inputs I mention all of these things but                                ultimately we're gonna go through them                                very briefly these things get quite                                advanced and I'm hoping to expose you to                                the fundamental building blocks that you                                need to start being proficient naturally                                we can't do it all                                in this short block and then finally                                we'll wrap this up just sharing some                                opportunities ways to get involved with                                the beam community as well as you know                                some great things if you know beam and                                otherwise cool so shameless plug at                                least at the moment both max and I                                helped with organizing beam summit a                                couple day conference in August wanted                                to alert you if you guys like what                                you're hearing around beam and makes                                sense check it out it's free and and                                whatnot so cool anyways these exercises                                are going to be hands-on they hopefully                                you guys have received a pre email but                                ultimately please download IntelliJ or                                PyCharm                                so in the event well hopefully you can                                install either the community editions                                are free you can use PyCharm ad you                                edition edu or you can use any paid                                version that you have this is a link                                here and maybe we should put that in the                                QA room and pin that otherwise beam dot                                Apache org slash blog slash beam cotta                                releases these are a community resource                                in general for getting hands on wood                                beam so we'll walk through setup but                                encouraging while this is going on since                                downloads may take a few moments try to                                download some version of IntelliJ if you                                want to use a go or Java specifically or                                pipe you can also use Python in that or                                get PyCharm if you only want to use                                Python cool alright so before we can get                                hands-on you guys should probably know                                what beam is about so I'm going to walk                                you through the programming model and                                the vision                                for the project okay so the Apache beam                                vision it's to be an open-source unified                                model for defining data processing                                pipelines which allows you to write the                                pipeline in the language of your choice                                and run it with minimal effort on the                                execution engine of choice so there's a                                lot of things there so I'm gonna slowly                                walk through and unpack that for you                                guys so I mean specifically hopefully we                                have a sense of what data processing                                pipelines are but even starting there                                what's a pipeline I think we don't mean                                these sorts of pipelines but ultimately                                for data where we have some sort of say                                input we may do some sort of                                transformations and then we get to an                                output so a simple beam data processing                                pipeline starts with a source oh I can't                                 click there that gets read into what is                                 referred to a as ap collection so                                 parallel collection of elements we                                 perform key transforms parallel                                 transformations in to say another P                                 collection maybe do another transform                                 which gets stored as ap collection and                                 then written out to some sort of sync                                 somewhere so we can get into the more                                 specifics but again in beam what is a                                 pipeline it is a directed acyclic graph                                 of data transformations that are applied                                 to one or more collections of data so                                 again as we said in beam P                                 transformations parallel transformations                                 P collections the collections of data                                 these can be either unbounded so                                 streaming or bounded the super cool                                 thing about beam is the sort of                                 transformation logic often that you're                                 doing has no basis I mean you don't                                 need to worry about whether or not it's                                 that bounded or batch data or unbounded                                 streaming data pipelines themselves can                                 have you know multiple sources as we see                                 here and or multiple sinks and can do                                 any sort of dress there so the graph                                 gets optimized based on the code and                                 gets submitted to the route runner of                                 your choice so again I'm already I guess                                 talking ahead to the peak collection at                                 P transforms this is probably beaten in                                 already by now so ideas around here's                                 our again sources and maybe combined we                                 can't and you know various forms of                                 distillation ways we can partition data                                 here or combine so that's roughly what                                 data processing pipelines are so what do                                 we mean by this unified model so this is                                 the cool thing where again we can have                                 better processing or stream processing                                 through Apache beam model as well as                                 it's SDKs and we can run that on many of                                 the runners any of the supported                                 backends so that we probably already had                                 a few sessions around Apache flink here                                 Apache spark is another well-known one                                 there is a direct pipeline which really                                 just use it for testing don't try to                                 write production jobs with it it is not                                 meant to isn't certified for scalability                                 and then naturally beam is often                                 conflated with Google Cloud dataflow to                                 use that managed cloud service you would                                 write beam jobs and submit them to the                                 Google Cloud dataflow back-end                                 so beam is the you know SDK they are                                 their beam allows you to use the                                 language of choice so we can we're gonna                                 talk about especially Python and Java                                 there are some go examples to work                                 through recently Kotlin has a bunch of                                 cortes available so I'll also show you                                 those I'm not competent Kotlin developer                                 so I can't speak to writing that too                                 well although I look forward to playing                                 with it something that maybe you might                                 prefer over Java there's also beam                                 sequel and you may recognize this as                                 Scala                                 so there is a Scala lair I'm open                                 sourced by Spotify called Co written on                                 top of the Java SDK so a different way                                 of looking at this thing beam is a                                 single model that supports multiple                                 modes of processing that there are                                 multiple SDKs in various language that                                 you would write and submit to various                                 runners so again these are the more                                 well-known ones but there are several                                 others the pipeline runners we can see                                 here so again the direct runner flink                                 linkedin especially runs beam on samsa                                 spark as we said AWS had given a talk at                                 last year's beam summit showing how you                                 can submit beam jobs either to their own                                 AWS EMR clusters or to the Kinesis data                                 analytics                                 hazal cast has a runner called jet                                 Google Cloud dataflow was mentioned IBM                                 streams supports submitting beam jobs                                 too and there's a                                 I think it's just incubating still                                 Apache project called memo I think                                 that's the range of runners at the                                 moment at least you know that are well                                 known and still in active development so                                 another way that this is talked about                                 here the Apache beam ecosystem again a                                 unified programming model it is portable                                 given you can write the same beam code                                 and run it on flink or spark or data                                 flow for instance I know that was my                                 biggest reason for seeing the promise is                                 not being tied to the sort of cluster or                                 infrastructure that my ops team wanted                                 to maintain for me it's also portable                                 from the language perspective I using                                 the Apache beam model I can write with a                                 bunch of languages as well as cross                                 language of potentially multiple                                 languages in the same pipeline which is                                 work well underway                                 it's very extensible as I mentioned                                 supports DSL is like sequel or Scala and                                 has a ton of iOS with a ton of the major                                 open source data stores and api's as                                 well as integrates with major clouds                                 okay so that was a lot on you know                                 seeing the same thing like four times so                                 hopefully that makes a good enough sense                                 yeah so long to talk about now the                                 intricacies of pipelines themselves a                                 pipeline can be used or I mean is                                 written to describe four things we're                                 going to use this color code convention                                 throughout so what are we computing                                 that's gonna be the primary focus here                                 and then we're in event time when in                                 processing time and how do refinements                                 relate so what is the sort of                                 transformations then there is also when                                 doing which is about where that occurs                                 there is watermarks and triggers so when                                 does that occur and there is the                                 accumulation on how are we accumulating                                 results this is a very useful link to                                 pay attention to I can't pull up that                                 from these slides beamed out Apache org                                 documentation runners compatibility                                 matrix so that's also pretty findable                                 just from the beam dot Apache org                                 website are searching beam compatibility                                 matrix this just tells you the sort of                                 functions and what aspects of the beam                                 SDK are implemented and working well in                                 each of the various runners so as you                                 can see most runners do a rather good                                 job of implementing the full suite of                                 semantics from the beam SDK or beam                                 model I mean but naturally check here if                                 there's questions all right cool that                                 was a bunch of stuff so I'll give us one                                 second to let that sink in and I'm also                                 gonna check the QA room although I                                 believe that max is in there doing cool                                 answering questions and pointing us to                                 where we want to be so cool all right                                 let's start talking about writing a                                 pipeline where are we                                 and then pretty soon we will wind up                                 getting hands-on so again writing a                                 pipeline we want to focus on this                                 transformation logic and what are we                                 computing first so we can talk about                                 elementwise                                 transformations which are equivalent to                                 math and MapReduce style we can talk                                 about the aggregating functions which                                 then essentially re reduce and there are                                 composite transformations we can do                                 which is using combinations of various                                 bits so we'll walk through all of those                                 at a first pass we're going to talk                                 about element-wise transformations and                                 then get moving with hands on                                 element-wise transformations that you                                 can write yourself using do so the                                 primitive two of most things in beam is                                 a pardhu so parallel do function it                                 performs a o much better here I changed                                 my screen nice so it performs a I mean                                 that's how you do things parallely right                                 things with the B model and you can see                                 so for instance here is an example of an                                 element-wise transformation in Java so                                 we are taking the pipeline let's go here                                 we have a pipeline that we are creating                                 we have an input based on our elements                                 and we have a pardhu of a do function in                                 this case we are creating a key value                                 pair of the what will be the first                                 letter and the word based on the input                                 collection of the various supported that                                 we'll have some examples of things like                                 this hands on in a second so I want                                 unpack it too much we also have                                 limitless transformations so in Python                                 this is just the first letter take the                                 input collection and return the first                                 letter so it's as simple as creating a                                 class with a process method and                                 returning what you want in Python you                                 will see we use this pipe operator to                                 essentially pipe or chain our functions                                 together and the UNIX style and here is                                 an example of the go code again first                                 letter function write the function have                                 a beamed up pardhu with the context the                                 function and what you're working with so                                 again we'll dig into that in a moment a                                 little bit more on element wise                                 transformations not only is our news one                                 to one but pardhu's can output                                           said or many so for instance we could                                 explode prefixes and say for the word                                 Samsa as the runner we could go SS asam                                 sa MGA for instance where we have a ton                                 of outputs for each input element                                 alternately we can filter where we have                                 less elements so cool that is the bare                                 fundamentals that I think important to                                 know this moment too before I let you                                 guys get hands-on here so I'm hoping                                 maybe you guys have had the chance to                                 install IntelliJ right and we can even                                 Community Edition                                 right so for instance searching Google                                 or whatnot there is this Community                                 Edition that you can download I'm                                 clearly on a Mac here as shows and that                                 will run download and then install so                                 hoping you guys have done that the next                                 step to Luca I will pull up my version                                 of IntelliJ                                 okay so once you have intelligent                                 downloaded as the instructions show in                                 the now let's go view                                 Cotto's vlog being caught that's release                                 so in the chatroom I believe we have a                                 link to this this page should show you                                 how to get set up but additionally I                                 will walk you through that which is                                 there see okay so once you have say                                 IntelliJ installed here you can go to                                 configure plugins and look for the edge'                                 tools plug-in and in this case it's                                 already installed but you would click                                 the install button to get what you need                                 you can see I've already installed and                                 played with these last night for                                 instance once the edge of tools plugins                                 are installed it brings up this learn                                 and teach dialog so we can go to browse                                 courses and if you type beam you will                                 see we have beam Coty's for Python Java                                 these two are very thorough recently                                 some golang Coty's have been added I                                 even wrote one for flattened I believe                                 last week and I just saw these Kotlin                                 ones so feel free to give those a shot                                 I'm unsure how familiar maxes with                                 Kotlin this is not something I                                 anticipate us covering but know that                                 it's there and if that's a language you                                 prefer naturally something you can do in                                 being                                 so uh you know for instance I think this                                 is going to create a copy but that's                                 okay                                 so that is bringing these things up for                                 those wanting to get oh good it didn't                                 actually have it                                 maybe it'll figure it out okay                                 one thing I it is possible that for in                                 IntelliJ specifically and maybe in                                 PyCharm if you haven't been using beam                                 before to use these you naturally need                                 to install the Apache beam package so                                 that can be done by pip install Apache -                                 beam or you know as you can see here I'm                                 I'm noticing an error and I'm and I can                                 use let's let that come up                                 No oh it did eventually find it so I did                                 have it on my system but that is that's                                 a common problem otherwise when you're                                 trying to do this so I am hoping that in                                 these various exercises that we can walk                                 through that you guys essentially get                                 set up let me delete these are the                                 existing ones but I'm hoping that you                                 guys have the environment set up let us                                 know if you have troubles and we're here                                 and should be able to help debug and                                 otherwise please try the intro which is                                 just a beam dot create to get things up                                 and running and from there also please                                 do the initial parallel do so let's                                 clean up my environment but in the                                 Python bit please try to get through                                 intro here and hello beam                                 and also there's many sections in the                                 map section try to get through just the                                 first part do tasks so I'm gonna give                                 you guys a few minutes I'll set a timer                                 here let's check back in let's call it                                 ten minutes to ensure you can download                                 and get set up if there's some common                                 questions I may come back on over the                                 speaker but in general I think these are                                 the setup instructions and you see the                                 timer countdown please work on these                                 exercises and let us know if you have                                 any any questions                                 you                                 all right well it's microphone back on                                 so it seems like yo.hannes at least                                 wanted to verify the you know what we're                                 supposed to do here                                 since the solution is kind of already in                                 here                                 oh cool if it's already passing then                                 you're good to go let's I was just read                                 downloading these actually I'm gonna ask                                 what what language are you all using no                                 reason to dig into solutions too much                                 here Oh interesting well so real quick                                 what language is everybody using because                                 I don't want to necessarily walk you too                                 often through all of these languages if                                 you if nobody is using cool let's do bow                                 I figured at least both Java and Python                                 initially I see both of you here and                                 awesome it's also fantastic to see some                                 life in response this is kind of eerie                                 just broadcasting to people so I really                                 appreciate even just seeing some some                                 messages here cool yeah let's let's work                                 through both then let me pull this out                                 cool tell a Jay coming up I am                                 you continents Java I hopefully and                                 redownload                                 that and indexing it is over here it is                                 loading awesome so here is up it's                                 hiding up here on my other monitor so we                                 have this loading since in general                                 Python is a little more simple I want to                                 run that first although I need to let                                 this process continue running it's glue                                 on building and configuring the                                 environment as you guys probably                                 experienced so that will be right up                                 here                                 cool looks like we are good with Java                                 and we have Python gone Python loaded                                 man I wanted this to delete but it did                                 not so I will I guess show you the                                 solution here for Python and I will                                 delete it next after the next exercise                                 so we can work through it together but                                 it's already saved here so oh well so                                 for the introductory tasks and again how                                 to or I mean I guess to start how to use                                 this for any pipeline we absolutely have                                 to install Apache beam in this Oh the                                 descriptions have fantastic details so                                 you know follow them they'll give you                                 some bit on alright here's the overview                                 that one was less useful let's make this                                 a little smaller okay you know write a                                 simplified pipeline that takes hello                                 beam so we can get taken to here's                                 create the create function and how it                                 works and here is for example in memory                                 so we can see we have say beam dot                                 create and the important bit here is in                                 an array or list right so the create                                 function so this is already passed I                                 didn't get it work through it but we can                                 see that this is what's needed for the                                 hello beam I probably should have just                                 walked through that for the use of this                                 interface since this is probably new to                                 a ton of you and again will I'll delete                                 and clear out these I wanted to have                                 made sure that worked before so for                                 Python here the initial parallel do we                                 need to overwrite this came with nothing                                 here so we needed to create a process                                 method in our class which is a new                                 function we needed to it suggested to                                 use a par do with our du fun which we                                 then down here had a to-do item here                                 which was then called p-nut pardhu and                                 at our multiplier have the parallel do                                 do our multiply by                                                   bean programming guide is a fantastic                                 resource so i'll probably pull that up                                 often and just while you guys are                                 getting going with this on just you know                                 got you've been programming god this is                                 your friend when I got started working                                 with this I made a point of at least                                 skimming this programming guide every                                 few days just to sink it in because this                                 really was a weird way of thinking about                                 things for some reason for me although                                 ultimately you know it comes together so                                 the solution is that simple that it's                                 you know it doesn't require a lot of                                 weird programming in the sense of things                                 you wouldn't be familiar with take an                                 element and multiply it by                                            point of this exercise is knowing to                                 call a parallel do and with your do fund                                 which is a again a class of being God to                                 fund so again with the check it will                                 pass since this was already written                                 let's see you know harness though                                 okay and Paul has a nice comment here as                                 well so you're creating the collection                                 in apply yeah that's a fair point here                                 on the way so Paul I take your comment                                 here on maybe we could improve the                                 wording of the cantos I'm gonna even                                 just take a screenshot of that and                                 provide that I dare even digress a                                 little bit for those super curious                                 Apache being github                                 they have our theme repo we have the                                 kata are in learning slash Coty's and                                 for instance in java this was a                                 courtrand no this was a common trim                                 score transform this was map and a part                                 do and maybe the task info test MD so                                 Paul I think you were critiquing the                                 wording here I think it is oh no this                                 was the intro so                                 find that summer thought it would be                                 right in here interesting I'm curious                                 why it's not there but haha cool Paul                                 looks like you got it figured out I                                 guess the point I was trying to make is                                 beam is a completely open source project                                 and even these exercises are so if                                 there's something that looks like it                                 needs improved Henry is the original                                 author of these Coty's the one that made                                 that blog post but many other people                                 have contributed either exercises                                 wording etc so pull requests are even                                 welcomed if you find things that could                                 be improved naturally I can't say too                                 whether or not you know there's a                                 madness in the specific wording but                                 making suggestions would you know it's                                 totally reasonable there all right so                                 sorry for that digression people but                                 also I guess cool to know that this even                                 this learning platform is wholly open so                                 I think this walked us through the x                                    do fun and again the beam dot create                                 inside of the array again I will delete                                 my history so that I can walk through                                 this live in the next round                                 Java should be hopefully deleted here                                 let's see shoot okay anyways and maybe                                 that's because I am logged in to where                                 my history is still here all right so                                 the for Java oh and why don't we just                                 look at this if you guys are working                                 through and find yourself kind of stuck                                 maybe I shouldn't be                                 giving you this little answer so you can                                 see if I go through maybe I actually                                 tried writing some code but it didn't                                 work I could get the incorrect answer                                 but there is a little peak solution                                 which then pulls up on a bit here which                                 would walk through what the answer at                                 least a form of the answer right there                                 are potentially several ways of writing                                 things like a split function or getting                                 a first character from a string or                                 whatever and the Cotto's are just                                 checking the result of the pipeline                                 which realistically in practice would be                                 all that you care about or primarily                                 what you care about                                 so it's smart enough to be able to check                                 that so a goal also for sharing this is                                 being aware of this as a platform so                                 that you can work through exercises on                                 your own I will cool so let's talk                                 through the the hello beam here so we                                 there's plenty of text the overview as                                 usual we can use create which is the                                 Java Docs naturally get used to those                                 and the example again as before from                                 Java here's how to create from in-memory                                 data later on we will start working with                                 text IO a more realistic pipeline where                                 we would take file for instance which I                                 guess is good I don't think I have                                 slides so beamed Apache org I was built                                 in IO transformations so so that you                                 guys are aware beam doesn't just work                                 with                                 I mean does not only work with local                                 input you know in pipeline things                                 there's file iOS Avro textio TF records                                 for tensorflow XML tikka Park a thrift                                 HDFS GCS s                                                        and then for messaging things like                                 Kinesis Kafka JMS etc there's a whole                                 built-in ecosystem and then a ton of                                 databases as well                                 there's formalized io transformations in                                 progress if you're curious you want to                                 use something you can follow the JIRA                                 issues and also it's quite extensible so                                 if you need to write to something and it                                 doesn't exist if you're used to dealing                                 with the say api's of your given                                 database but there's not an IO already                                 written it's something that you can do                                 yourself so for instance there's not a                                 great fire store IO at the moment but                                 it's straightforward enough to work with                                 that API in in beam which is something I                                 wrote recently at work cool okay right                                 so another digression there back to the                                 Java pipeline if I recall we it was                                 returned to do was the example so based                                 on the docs we are saying pipeline dot                                 apply pipeline which we wind up having                                 from here we're applying a the create                                 function that we have which is creating                                 of the element in this case a single                                 string of Hello beam so the check there                                 will pass                                 hopefully Oh Congrats                                 me and then oh shoot                                 pardhu so we have our test Java so in                                 this same vein we want to use the                                 annotation process element so we I think                                 it was to do right around here and write                                 this whole thing so we have our input                                 which is what we call it the apply                                 transform so our input is based on these                                 numbers which are created from here but                                 we want to apply a parallel do function                                 of a do function which you know is                                 integers here where we're processing the                                 element and we're outputting number                                 times                                                                again there's you know get to know these                                 docs parallel do do fun what you need to                                 be doing here I guess just to highlight                                 look let's see what that is because this                                 should be nice ok so that should walk us                                 through at least the very basics of our                                 first parallel deal there are a ton of                                 other exercises we're gonna walk through                                 eventually spattered in with a whole                                 bunch more information about what beam                                 can do and then eventually getting into                                 streams so I guess oh yeah that's a good                                 question for everybody that's my that's                                 my thought is to move on but I would be                                 let's use this for a second                                 a QA is everyone good in general I will                                 assume without a message in the next                                 moment that will dive in this Tamar                                 lecture cool and Johannes I did just see                                 your thumbs up but did you did you get                                 your question answered earlier was it                                 you said it was passing already so does                                 that mean it was you didn't actually                                 have to type the code anyways alright so                                 we looks like we have some thumbs up a                                 call here responding so that will okay                                 all the tasks are already done for you                                 I guess Congrats on completing the                                 course good job I think in that case                                 there I've I've worked through these on                                 several occasions somewhere there is I                                 think it might even be no not there                                 there is a log in to a nice I I think                                 there's a log into septic which is the                                 online course platform where these are                                 stored so I would imagine somehow using                                 a different user or becoming yourself                                 maybe maybe the like generic user has                                 already already passed everything or the                                 anonymous one so if you maybe log in it                                 will kind of remove the history I'm                                 unsure I know I've loaded these on                                 various occasions and it's disappeared                                 although I'm no annoyed that it's not so                                 alright anyways time to move on                                 we're actually halfway through so yay us                                 oh cool                                 my ex is helping Paul there alright so                                 let's get back to these slides the hope                                 here is to keep peppering in some things                                 about beam and give you guys time one                                 thing I guess I again I really really                                 want to reinforce is although something                                 like parallel do and some of these                                 transformations may seem super basic but                                 they're actually so fundamental and a                                 whole lot of these things when added                                 together although each of these parts                                 again are very very simple they add up                                 to being very very powerful so okay so                                 we just walked oh also you know feel                                 free to play with exercises especially                                 if you have multiple screens                                 I really like the seeing the map                                 beam map exercises because they're                                 fundamentally the same output although                                 and accomplishes the same thing as the                                 parallel do I haven't tried to run                                 testing on whether or not it makes a                                 difference from a performance                                 perspective cool alright so I'm gonna                                 grab a splash water friends of parallel                                 do max will answer that Andrew and if                                 not I'll point you to some more                                 resources in a second yeah I think you                                 could even go as far as take Andrew                                 Augusta has earned an answer who asks                                 how to write this outside of the EB IDE                                 I think you could even take the Python                                 for instance code or the Java code for                                 instance and                                 you know compile it or run you know                                 Python script on the script itself so I                                 we can pull up some examples for that                                 cool yeah Mel Max is answering that all                                 right let's uh the Friends of parallel                                 do the SDK has a toggle fullscreen I                                 guess this is                                 good enough okay so the SDK has a ton of                                 other elementwise transformations which                                 actually can get us very far we did talk                                 about parallel dues we talked about                                 filters briefly we know that we can map                                 and flatmap elements oh yeah here here's                                 some code examples actually right all                                 right so we saw pardhu's we can filter                                 so for instance filtering by you know I                                 want to filter things that start with S                                 that was a Java example here's a Python                                 example there is and here's the go                                 example so we didn't get into going I                                 didn't hear anybody saying they were                                 worried about go another worthwhile                                 point is that go is not to ready yet so                                 don't think you're gonna write                                 production streaming go pipelines right                                 now it's I was just talking with one of                                 the primary go authors who wanted to                                 make sure to highlight that fact it is                                 pretty okay for batch pipelines but is                                 still considered experimental so I was                                 optimistic in and including go it is but                                 it is part of the ecosystem and where                                 we'll be gone all right back to friends                                 pardhu filter example we can map                                 elements so you'll see that in the same                                 sort of examples in the acontece here                                 map elements with Java and or with                                 Python so this is create that key value                                 pair from                                 the bet here is flat map example for                                 instance also a flat map in Python we                                 can get the keys for instance with keys                                 or we can also use get the keys or                                 values out of things so those are many                                 of the element wise transformations                                 available in next just doing element                                 wise transformation is great and there's                                 even a you know a good justification for                                 just moving and transforming things one                                 by one using beam I question at times                                 whether or not running a you know in                                 this age of cloud compute whether                                 running a full pipeline is a good idea                                 with persistent compute in the age of                                 server less technologies if I'm only                                 doing elemental s transformations if                                 using the built-in iOS there's a good                                 case for how it can handle checkpointing                                 for instance on streaming runners but if                                 not a ton of the power gets in with                                 things like aggregation and you know                                 forms of stateful streaming so one of                                 the most common grouping transformation                                 I believe that occurs is group by keys                                 so I'll have you guys work through an                                 example of group by key here pretty                                 shortly so grouping transformations                                 again here would be go through and take                                 of key value pairs where we have maybe                                 already split as we did in the past of a                                 single input say of Sam's are there                                 where we then have a key value pair of                                 the first letter s and the full word                                 samsa for instance and then if we wanted                                 to run the beam operation                                 Group by key we could then have grouped                                 with the key s and we'd have both Sam's                                 and spark so here is examples of the                                 Java for instance input B via a P                                 collection and applying to that P                                 collection in group by key and in Python                                 taking the input which is a P collection                                 and using being backward by key in                                 addition when we are running group by                                 Keys we also may want to do something                                 intelligent with that so for instance we                                 may want to write a pardhu function or a                                 do fund ourselves                                 for instance top in interval so in this                                 case we would take the key values we had                                 before we have our group by key where we                                 do that but then based on that we might                                 want to find the most frequently                                 occurring are you know top result so in                                 that case we you know could write again                                 a parallel do that looks through each of                                 the values and figures that out for us                                 but in the case that group by key is                                 followed by pardhu can often be                                 simplified and optimized by leveraging                                 something like combined so in this case                                 here's an example of doing the same                                 thing from the same sort of input but                                 instead running a combined perky I hit                                 that that's all right cool so we have                                 that again grouping transformations then                                 if we are running something like                                 counting compare could be a combined                                 function that counts words and then is                                 extracting you know the top however many                                 we're really able to write any of our                                 own                                 sort of operations that we want but to                                 an extent make sure to know the SDK no                                 reason to write your own if the                                 community's written something that's                                 going to work for you that has also                                 probably been thoroughly tested and                                 optimized so of a bunch of the combiners                                 there are things like top perky the                                 counter key some of lungs perky                                 quantiles you know approximation                                 algorithms mean max mins for instance so                                 look into the SDK documentation and                                 understand you know the pieces at your                                 disposal okay so also in addition to the                                 map and essentially reduce operations                                 just think about how you can combine                                 things together you know so for instance                                 we have multiple outputs that are                                 possible we talked about that at the                                 very first stage cool so I very common                                 reason for using multiple outputs in a                                 pipeline is a form of dead-letter queues                                 for instance is say the input is not                                 good or otherwise I can't parse it                                 properly kind of validate things and                                 continue through the pipeline if things                                 are fine and if not write it and log it                                 somewhere so some example code for that                                 for Java is found here I'm in this case                                 we're using things like I can't                                 highlight the code okay so the tuple                                 tags where we're trying to process it                                 and if the ability at element is good                                 apply the success tag and if not give it                                 the dead-letter tag which then we can                                 based on the output tuples                                 the various peak collections for success                                 or dead letters that we want to do                                 things with so that pattern is also                                 doable in Python in this way again where                                 we're trying and accepting here yielding                                 what we're looking for and the example                                 here for go is this very interesting I                                 find with go is you don't just write                                 pardhu's and for instance there's party                                 to when you have a parallel do function                                 with two outputs and the SDK supports up                                 to par do seven for the various forms                                 you can get into so I think that's a                                 good amount of bit on aggregating and                                 reusable patterns here so I wanted to                                 give you guys a little bit of time to                                 start working through group by key for                                 instance and if you also have already                                 worked through that you know there's a                                 ton of other stuff there and again Max                                 and I are going to be here for a while                                 so I'm going to set another timer for                                    minutes and give you guys some time to                                 digest what was just shared and of what                                 you need to and do some exercises well                                 so again we will let's hold that is my                                 you                                 all right I am I'm just not see this                                 Johannes we can dig into that                                 yeah let's either save that or max do                                 you have a good way to chat war Johannes                                 this question on Beaman knife I I                                 actually don't have much experience so I                                 don't feel like I am well-positioned to                                 talk about it                                 so what's hope max has something he can                                 chat or I also welcome him coming on                                 stage either now or at the end to                                 discuss your question there cool so we                                 just allocated some time for group by                                 keys I am in the I tried downloading now                                 IntelliJ well here literally gods that's                                 awesome well Nina let me Shh figure that                                 out in a bit okay so since we were                                 having some concerns with freshness of                                 our kostas or if they were already                                 installed                                 I tried downloading the community                                 edition of IntelliJ to see if a totally                                 different IntelliJ doesn't have my                                 safety history so I'm hoping that is the                                 case but we'll find out here                                 a second so for the next few moments I'm                                 gonna hope to walk through group by key                                 as another really fundamental bit and                                 then where I'll get into streaming                                 semantics overview like the real reason                                 I think a whole lot of you probably are                                 interested in and care about being                                 that's less although we all need to do                                 lots of batch data processing this year                                 fact that we can learn this single                                 programming model in a way to accomplish                                 both of these tests is to me super                                 powerful okay so let's see it is loading                                 fingers crossed                                 oh yes okay so for who was that again                                 Oh Johannes okay so I have downloaded                                 the intelligent Community Edition and                                 reinstalled following the instructions                                 and it looks like it has cleared out my                                 you know my history I guess                                 so let's mean dig in to group by key so                                 that was what I was hoping you guys had                                 worked through in addition to whatever                                 else again this is super self-contained                                 so hopefully something that you find                                 value with working through some of these                                 others later so the task here again I'm                                 gonna go through Python first and then                                 we'll go into Java group by key it's a                                 beam transformation we want to I mean I                                 think you guys actually have a good a                                 decent sense of what group I key is that                                 will pull up things like this group by                                 key documentation in the Python Doc's so                                 I'll pull up the same interesting                                 that's kind of funny implement and the                                 hint is pulls up the hint number one                                 pulls up the same link that was already                                 there so I guess a cue to say hey hint                                 read what we share                                 but again as I've shared the programming                                 guide super handy think about the                                 primitives that you want to use and this                                 should pull up a group I key here so                                 here is the bit here's what we're trying                                 to do is they're code examples here                                 though do fun lifecycle group by keys so                                 know this is I guess talking about ok                                 and then it gets into code group IQ so                                 that's a good know for maybe we could                                 use a code example in the programming                                 guide for group I key anyways okay so                                 what we want to do we did look at                                 pardhu's but since we didn't talk about                                 beam dot map so I found this confusing                                 because I tend to look for shortcuts                                 when I first did this so I see a single                                 line here so I'm under the impression                                 that I would only write a single                                 function well actually to do group by                                 key we need a key value pair so first I                                 need to write a beam dot map where let's                                 say I do a lambda word where I'm gonna                                  return a tuple of word at the first                                  character along with the word itself                                  right and then I will want to pipe that                                  to being the group by key so again then                                  the thought is this will create a key                                  a okay so ultimately we'll wind up with                                  a with then list of Apple and an to be                                  with a list of bear and ball and C with                                  a list of car and cheetah the way these                                  are done I also had you know rehearsed                                  engineered this if you will or whatnot                                  log elements is how the Coty's are set                                  up to do this we can get into how to                                  just write these out to text files which                                  makes it easier to explore exactly what                                  is gone on so let's test this here and                                  see how we did fantastic alright so                                  again that was you know I get I got hung                                  up by that and again if you guys that                                  are working with Python you can kind of                                  chain these all together with operations                                  but it's super I like the UNIX pipe de                                  limiters here so that addressed group by                                  key here for for Python and I will now                                  pull up the group by key for or job                                  let's go beam                                  now let's see how we doing with                                  questions                                  okay and it does look like as that is                                  coming up Johannes your question on beam                                  and knife I max answered in a thread a                                  little below it but it doesn't look like                                  I guess either of us are that                                  well-prepared to speak to that naturally                                  yeah I don't want to                                  I like beam and I don't want to talk                                  about comparisons to things that I'm not                                  well versed enough because I'm obviously                                  I guess already somewhat biased by my                                  position here cool all right so here is                                  the beam kato's for Java which are                                  loading so that will come up here can I                                  close this okay so this is the hello                                  which we don't want to do let's close                                  and reopen all right there we go core                                  transforms group by key fantastic all                                  the way deep in there and we don't have                                  any                                  this isn't already done so we can work                                  through this                                  let's try yeah okay so I need to write                                  my I apply transformation which is a                                  group I key pulls up that Docs there it                                  is a let's you know the important thing                                  is the key value class of possible                                  values in the beam SDK we have a link to                                  that the group by key which pulls up the                                  same sort of documentation and again it                                  takes us to the programming guide which                                  does not have actual code examples in                                  this case which is also good I mean                                  naturally we can you know search Stack                                  Overflow and the whatnot so we by                                  convention we use input and in this case                                  we want to take input and apply we're                                  gonna map elements oh I'm gonna restart                                  this IDE just so that it cleans itself                                  up a little                                  okay all right so let's map elements                                  into so we need Q values of strings and                                  strings okay and then we want to do that                                  by word Q value of word we can do carat                                  or subs ring substring                                               creating that tuple do I have all these                                  things right I think I have that looks                                  right and then I want to apply so this                                  is like we did in the Python so we are                                  mapping the elements into a key value of                                  string and string type where we're                                  taking the key value of the first                                  character with the word so we're                                  creating the key value pairs and then                                  we're applying the group by key and                                  creating it so if this gets out of my                                  way                                  I believe that does what we need so                                  let's grade all didn't do what I need                                  okay well let's see how the solution                                  looks input dot apply map elements key                                  value of string strings via word key                                  value of and group I create so I'm gonna                                  just count this as okay this is because                                  I haven't configured Gradle on this new                                  Community Edition bit for now since you                                  know I just installed it to try to get                                  the exercises clear cool Johannes just                                  type in something so as Paul may be                                  anybody some questions that we can                                  answer right at the moment and otherwise                                  I will try to run through some of the                                  basics on streaming semantics and how to                                  think of stateful streaming the reason                                  about it in beam but let's answer some                                  concrete questions around this specific                                  exercise if any                                  yeah okay Johannes let's let's save that                                  for some of the QA either right at the                                  end or in a I think Nina mentioned that                                  there's a public room for some of these                                  concrete additional questions that                                  either that we can dig into so let me                                  try to get through the some of the                                  high-level stuff to give you the broad                                  strokes of the model for now and then                                  let's take it from there looks like                                  nice yeah Paul sorry for being unfair                                  you're right                                  did not did not cover map elements at                                  least in you know more than me                                  mentioning it for a second                                  also I'm you know I am kind of jumping                                  ahead and around because I want to give                                  you guys enough of what I think are the                                  some fundamental pieces so awesome and                                  good call as Mac says do funds are                                  everything are you know most of what we                                  need although then you know for anything                                  custom and if not we can you know check                                  into some of the built-in functionality                                  cool let me get back to these slides                                  slides over here okay cool                                  so I'm gonna take you through a                                  whirlwind of windowing time triggers and                                  that sort of thing um you know here's                                  just ways to think about it we're not                                  going to get hands on in the next what                                  do we got like                                                          so and then we can dig into some of I                                  think I anticipate it sounds like an                                  audience especially interested in                                  getting these things up and running in a                                  real sense so we'll make sure to find                                  time to discover that so given also what                                  it sounds like the audience I'll try to                                  breeze through these things since this                                  may be familiar and they should do some                                  sort of polling in the future to engage                                  the audience all right so we have you                                  know we're in event time is what we're                                  going to concern ourselves when we're                                  talking about when doing time and you                                  know why does that matter                                  so we may have data we may have data                                  that's big it may be super big over you                                  know lots of days it might be infinitely                                  big it's just you know always coming so                                  the unbounded                                  but so especially when it is unbounded                                  or streaming there may be unknown delays                                  son of M from                                                             they come at                                                            may not arrive as far as event time to                                  our system until you know after                                         so we walk through the map and pardhu                                  functions in the sense of how we can do                                  element wise transformations that lets                                  us doesn't do things to the elements but                                  time is not particularly relevant when                                  doing elements transformation we then                                  and the most common way of dealing with                                  time is just dealing with processing                                  time chunks so you know historically                                  that was nightly you know or daily batch                                  jobs you know more often now it is                                  saying in hourly chunks and its really                                  only concerned with processing time                                  windows so when the events are in our                                  message queue in our system not you know                                  when it occurred so in the                                          o'clock block as well as in the                                         p.m. block we may have events from                                    a.m. so we a different way of thinking                                  about this and this you know hopefully                                  is quite intuitive to you although you                                  know sometimes takes a while to reverse                                  thinking from you know just taking                                  events as they come versus I want to                                  take the events as they I want to                                  recreate the event time or at least make                                  sense of like knowing what happened as                                  it occurred in event I'm rather than                                  just letting things like network delays                                  or a device shutting off and not sending                                  me                                  event until it was turned back on for to                                  arrive at my system to have a sense of                                  what was going on so we can also window                                  events so when doing is a way to divide                                  data into event time-based chunks so we                                  can do fixed windows we can do sliding                                  windows as different ways to capture                                  things around event time we you know in                                  the world that I deal with which is                                  television                                  so naturally streaming or real-time                                  applications but trying to recreate                                  things like user sessions for instance                                  to know bit so we can't know when                                  session is going to end but you know                                  have to deal with all sorts of various                                  bits and again like I said clients dying                                  and recreating how to then figure that's                                  out so be aware that we can have various                                  windowing strategies will show some code                                  on how beam handles those semantics                                  there is also triggers and as it relates                                  to stream so I can't help but give a                                  shout out to the streaming systems book                                  that's over here too although I don't                                  need to grab it                                  I really wish they had gone with this                                  amazing dinosaur cover which is in the                                  book but anyways you know the fish is                                  also quite you know a profile so a lot                                  of this stuff is covered in a lot more                                  depth if you want to dig into the way to                                  reason about this again just aiming for                                  high level here so if we have our                                  unbounded peak collections not only do                                  we want to talk about where things are                                  occurring so we're in event times but                                  then we want to talk about triggers                                  and for when that happens relative to                                  processing time so for instance we may                                  want to trigger out a watermark where we                                  don't specify then anything too specific                                  there's just the heuristic sort of                                  watermark that manages where we want to                                  know use a fixed fixed windowing as we                                  talked about with Windows and where we                                  want to just some integer so here's a                                  way to how that starts to happen                                  triggers can control when we start to                                  output the aggregation on the right                                  would be the heuristic watermark because                                  we which is the default so essentially                                  when the system estimates that the                                  window is complete it's hard to know                                  exactly when or what to do with the sort                                  of late arriving data so we do have ways                                  to control that also and again on the                                  left here is the notion of the perfect                                  watermark meaning if it captured all                                  data                                  I guess essentially soon as it became                                  available so in addition to the sort of                                  heuristic watermark and again you can                                  see the color coding right we're using                                  [Music]                                  glue for windowing and green for the                                  sort of trigger code as well as I think                                  that was supposed to be red but it's                                  yellow for the summation anyways oh no                                  that's right all right so we can define                                  our when things are happening if we want                                  to say use early and late firings which                                  then will help us have additional                                  complete results where we don't                                  necessarily discard for instance                                  allowing late firings at count if we                                  want to of                                  they are sums based on that as well as                                  for instance with early firings start to                                  accumulate those results as soon as we                                  have them without waiting these are all                                  sort of trade offs that you'll                                  potentially need to make depending on                                  materializing results say too soon that                                  are incorrect or what to do at one point                                  with haole of data so this is then the                                  perfect watermark again is on the left                                  with the heuristic watermark and with                                  that sort of early and late firing code                                  configured the are the boxes there once                                  they turn blue are when the trigger                                  winds up firing as well as then the                                  resultant score our summation occurring                                  in each window so cool that's not a                                  let's make sure we leave plenty of time                                  other kinds of triggers there's a ton of                                  we can trigger on element count in a                                  window we can configure on processing                                  time we can trigger on various                                  combinations I can get super nuanced                                  with triggers yeah                                  figure out the how quick and important                                  you're sort of aggregations our                                  combinations are and the you know is and                                  how you're dealing with wherever you're                                  viewing those results okay so also to be                                  aware of side inputs is supported so for                                  instance is a way to I mean I view that                                  as a form of join you can do take extra                                  inputs on the side too                                  yeah I mean essentially drawing so                                  either here in a second we'll look at                                  some example code for even looking                                  through all elements as part of a                                  collection are here we can just have the                                  code on screen where we're looking at                                  all of the max work grabbing the max                                  word length based on all elements in the                                  collection and then using that to pad                                  all of the words for output for instance                                  but also site inputs are common for I                                  need to do some sort of kind of                                  streaming look so yeah be aware of that                                  as a very common pattern in something                                  supported I guess worth mentioning the                                  scala api shio here's you know no                                  presentation would be complete without a                                  form of word count wanting to say thanks                                  to this is an open source community                                  thanks to the people building beam man                                  that I you know took slides from that we                                  share we're pretty short on time so I'm                                  gonna avoid just sitting here in the                                  last                                                              independently I'll walk through the next                                  little bits and save some time for                                  questions you guys all have IntelliJ                                  downloaded now so work through those                                  let's see other important bits no kata                                  Kota time I mentioned opportunities hey                                  I work for dish they're hiring check it                                  out Shopify is some guys I met at the                                  last beam summit they're hiring                                  specifically a group at this link here                                  for so seen your analytics developer                                  merchant data otherwise search                                  specifically for those that think about                                  flink end or beam and specifically that                                  are going to write beam pipelines so I                                  don't                                  I see more and more things happening in                                  that direction of companies recognizing                                  and actively seeking those with that can                                  right being pipelines so you know my                                  natural sales pitch on hey it makes                                  sense to learn guys want to suggest get                                  involved I should make a better slide                                  here but check out the beamed Apache dot                                  org website that has a ton of good stuff                                  being we went there a ton of time you                                  know here it is check out lots of oh                                  good we have quick starts for all cool                                  be aware I think community check out the                                  contact us so there is user and list                                  especially are relevant if you're trying                                  to use beam and run into trouble hit up                                  the user mailing list there's a bunch of                                  users there as well as developers that                                  may help you out be aware there's a                                  slack channel you can get into the ASF                                  slack and people may help but ultimately                                  one of your best bets is stack overflow                                  not only because it's great but there's                                  some of the people actually building it                                  use that as some metrics for keeping                                  track of you know open issues answered                                  questions and whatnot there so that's                                  probably one of your better places to                                  also get questions answered so yeah                                  check out slack during the community                                  check out the dev list also so if you                                  want to learn directions that things are                                  going or get involved with contributing                                  code check that out also would love to                                  hear what I can do better I've offered                                  this sort of workshop a couple times but                                  if there's some sort of buzz words                                  feedback what what sort of content would                                  be better to focus                                  probably work out some of the kinks with                                  install and whatnot but let me know how                                  I can do better and closing on beam                                  summit again come check it out that's                                  dot org although it doesn't oh yeah                                  check beam summit or gout and come join                                  I'm gonna check out the chatroom and                                  start thinking about what do I get back                                  to slack slack cool yeah that's a                                  reasonable that we have a couple minutes                                  max you're asking if we should start to                                  break out now yeah we should have some                                  conversations and answer some questions                                  this is that mean going into our own                                  [Music]                                  room somewhere and max if not come on                                  into the conversation here also hi Here                                  I am                                  great presentation okay yeah I think I'm                                  there were a lot of interesting                                  questions and the in the slack channel                                  and it's probably easier if we could                                  just go to the breakout room now but I'm                                  also happy to answer questions here if                                  there are more questions in written form                                  other way it's probably easier to just                                  like video conference and ask questions                                  directly                                  that seems sensible so yeah I guess                                  can we just say anybody anybody type out                                  a question if you really want one just                                  brought unanswered broadcast to you and                                  if not we'll share the breakout room                                  link or do we already have that we do                                  have the link yes                                  I'll post it again                                  okay yeah Nina also posted it in the                                  Select channel cool I guess we all ended                                  here then and join the breakout session                                  yeah and so for those of you with some                                  questions come join us there so we can                                  just talk through things also since I                                  don't know if whether this was getting                                  recorded or not I suspect the breakout                                  room isn't so I can be you know share                                  more naive thoughts and whatnot there so                                  cool                                  see you guys over there and ask max                                  stuff especially since he really knows                                  these things                                  I was building                                  you
YouTube URL: https://www.youtube.com/watch?v=VrVDXM2RlQ0


