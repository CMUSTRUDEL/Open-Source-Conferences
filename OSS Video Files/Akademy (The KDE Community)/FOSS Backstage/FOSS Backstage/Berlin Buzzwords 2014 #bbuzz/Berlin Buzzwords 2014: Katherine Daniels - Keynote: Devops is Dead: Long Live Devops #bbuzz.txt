Title: Berlin Buzzwords 2014: Katherine Daniels - Keynote: Devops is Dead: Long Live Devops #bbuzz
Publication date: 2020-02-13
Playlist: Berlin Buzzwords 2014 #bbuzz
Description: 
	***Unfortunately, because of technical difficulties we could only record 30 minutes of the keynote. But we would like to share a part of this great keynote with you anyway.***

The idea of devops has come a long way in the few years since its creation. While it started as a movement so small that only a few people had even heard of it, it has grown into something that can be found nearly everywhere in the tech industry, from any piece of software that involves configuration or automation to huge conferences and expos packed with more commercial vendor pitches than actual content. Some people have seen this and declared that devops has jumped the shark, that the term has been used for so many things that it no longer has any meaning. 

So where do we go from here? More than just teaching sysadmins how to write code or giving developers root access, devops was originally a movement that aimed to reduce friction between development and operations teams. By applying these principles and the lessons that have been learned to other organizational pain points, we can give new meaning to the term and use that to enable companies and teams to scale product development to the next level.

Read more:
https://2014.berlinbuzzwords.de/session/keynote-devops-dead-long-live-devops

About Katherine Daniels:
https://2014.berlinbuzzwords.de/user/367/event/1
Captions: 
	                              thank you good morning it's great to be                               here this morning in Berlin thank you                               very much for having me my name is                               katherine daniels and i'm going to talk                               to you today about how DevOps is dead to                               start out I'm going to give you a bit of                               background information about me so you                               kind of know who I am and where I'm                               coming from when I say this i started                                out playing with computers from a very                                young age i went to university to study                                computer science because somehow i was                                still into computers after an ill-fated                                attempt to teach me see when I was about                                five years old shockingly that didn't                                work too well but here I am I thought I                                wanted to be a developer at that point                                and outside of running a couple media                                servers at home I didn't even know that                                operations was even a thing that you                                could do after that I did R&D for                                workstation graphics for hewlett-packard                                for a few years I got to do fun things                                like play with really expensive graphics                                cards and see monitors do things that                                they shouldn't actually be able to do I                                didn't get to play any Halo                                            get to play several other video games in                                the name of testing and debugging which                                was fun it was you know a big                                corporation now DevOps wasn't even                                invented back then and even if it had                                been a company like that there's too                                many different teams too many silos to                                really even count so after a few years                                of that I moved to New York and                                accidentally became a system                                administrator you know how it goes                                you're working for a small start-up                                doing development QA kind of stuff and                                the one sysadmin quits and somebody had                                to keep the data center from burning to                                the ground and that somebody happened to                                be me so I did operations for a couple                                years at a couple different startups                                learned a lot had a lot of fun but at                                those places operations was very                                segregated it was kept separate from the                                rest of the company at one point my                                co-workers I think thought I quit                                because there were two months when I                                just went straight to the data center                                instead of ever coming into the office                                even at places that suppose                                we did DevOps the operations part of it                                was still kept separate from everything                                else and I really didn't like that too                                much I fed have spent a few months with                                the job title of devops engineer which                                the internet tells me has something to                                do with cats and computer hardware but                                for reasons that I'll get into later I                                didn't like that title very much so it                                didn't stick around for very long so                                currently I am an operations engineer at                                a company called game changer we do                                scoring statistics and community                                management for amateur sports primarily                                baseball and basketball we're about                                   people headquartered in New York City                                it's also a very small shop but I'm not                                segregated away from them anymore I work                                very closely with the developers with                                all of the engineers and because we're                                entirely in AWS there isn't even a data                                center to banish me too so that's who I                                am kind of an operations background so                                why am i up here saying that DevOps is                                dead that's a pretty bold statement to                                make if dev ops were dead nobody would                                be talking about it nobody would have                                asked me to come here and talk about it                                so to explain what I mean by this I'm                                going to talk about something called the                                hype cycle this was developed by the IT                                research firm gartner to describe how                                various technologies are adopted how                                they mature over time I'm going to be                                using a version of this that's a little                                more generalized but the same basic                                principles apply so the hype cycle for a                                technology or an idea starts with the                                trigger at this point an idea is usually                                just a potential breakthrough but it                                hasn't been proven yet for software or                                hardware this could mean that there's                                maybe only an alpha product but not                                something that you can really put into                                the hands of customers and have them use                                 for an idea like the idea of DevOps                                 somebody just thought of it and it's                                 just starting to come to life so for                                 DevOps this trigger was some time back                                 in                                                                      held in belgium in i believe october                                 that year and this was the year that                                 DevOps as a term was first coined at                                 this point nobody had heard of it nobody                                 had thought of it before and this really                                 was the first conference of it of its                                 kind that brought developers and                                 operations together Patrick Dubois the                                 organizer of DevOps days said in a blog                                 post that he wrote after this first                                 DevOps days event he said I'll be honest                                 for the past few years when I went to                                 some of the agile conferences it felt                                 kind of like preaching in the desert I                                 was kind of giving up maybe the idea was                                 to crazy developers and offs working                                 together but now oh boy the fire is                                 really spreading and back then it really                                 was kind of a crazy idea back then this                                 was not just an internet meme it was                                 kind of the way things were developers                                 saw sis admin's as stuck in their ways                                 you know grouchy curmudgeonly the                                 so-called bastard operators from Hell                                 that hated change would never let anyone                                 get anything done or touch their                                 precious servers sis admin's saw                                 developers as reckless and irresponsible                                 people who would write code and probably                                 not bother to test it before throwing it                                 over the wall putting it in production                                 and making the ops people figure out how                                 to run it and maintain it so what was                                 this newfangled DevOps idea and how                                 could it help patrick said to tackle the                                 problem DevOps encourages cross cycle                                 collaboration constantly not only when                                 things fail I'm sure most of us are                                 familiar with these stories of failure                                 when something goes catastrophic Lee                                 wrong and that's the only time that                                 developers and sisson mins are brought                                 into a room together but it's not                                 exactly the fun kind of working together                                 it's people pointing fingers and yelling                                 and throwing each other under the                                 metaphorical bus trying to figure out                                 what went wrong so why would these                                 groups of people even want to work                                 together Jess humble said a fundamental                                 assumption of DevOps is that achieving                                 both frequent reliable deployments and a                                 stable production environment is not                                 zero-sum game and this was I believe one                                 of the keys to understanding the                                 movement and how popular it was in the                                 old way of thinking about things it was                                 a zero-sum game if the developers one it                                 meant that the Sisson mins lost if the                                 developers got there are frequent                                 reliable deployments getting their code                                 out quickly into production it meant                                 that the servers were probably going to                                 catch on fire because they didn't the                                 developers didn't bother to test their                                 code and everything was going to go                                 wrong and it was going to be terrible                                 from the other side of things the                                 sysadmin thought that if if they got                                 stability that meant that things                                 couldn't change that things had to                                 remain just the way they were just right                                 don't look at the server's wrong so it's                                 easy to see why this idea was so popular                                 next in the hype cycle is the peak of                                 inflated expectations at this point                                 there have been quite a few success                                 stories about a technology may be a few                                 failures but not ones that have really                                 deterred people from from thinking about                                 this or trying to try it as these                                 stories make their way around some                                 companies will take action and decide                                 that they should do DevOps themselves                                 but others don't as one would expect big                                 corporations tend to be a little slower                                 more hesitant to implement a change like                                 this then smaller companies and                                 especially startups I'm not sure exactly                                 where it started but sometime on the                                 Internet the idea came around that we                                 had hit peak DevOps this was sometime in                                 late                                                                  point it had been a few years since                                 DevOps was invented everyone knows what                                 it's about we've all heard the word                                 before there have been over                                         DevOps days conferences all over the                                 world and bigger conferences are                                 starting to add DevOps tracks like the                                 web operations conference velocity or                                 the large installation system                                 administration conference Lisa everyone                                 is starting to talk about DevOps we've                                 all heard the successes of well-known                                 places                                 like Etsy that really got DevOps right                                 and stories of people who tried to do                                 DevOps and failed but it's still you                                 know we've hit peak DevOps everyone is                                 talking about it and people are still                                 really think that this is a great idea                                 and it's going to be the answer to                                 everything DevOps related jobs are                                 everywhere if you search for DevOps on                                 any major job board you'll find hundreds                                 of postings if you have DevOps on your                                 resume or LinkedIn you'll have                                 recruiters contacting you weekly if not                                 daily part of the reason that i took                                 devops off of my job title was to cut                                 down on recruiter spam is kind of an                                 experiment cut by about                                                of recruiters just contact me out of                                 blue saying let's talk about DevOps you                                 can be a devops engineer or a DevOps                                 lead you can even be a sparkly DevOps                                 princess I mean if people are getting                                 tiaras you know that this is kind of a                                 big deal or maybe that people have                                 stopped taking it so seriously and that                                 leads us down into the next part of the                                 hype cycle which is the trough of                                 disillusionment at this point enough of                                 people have tried to do the DevOps and                                 failed that it's it's lost its kind of                                 magic appeal where people think that it                                 is going to be the answer to everything                                 and these failures might come for                                 different reasons maybe it was an                                 environment that was you know just too                                 big to change quickly enough and people                                 you know gave up or maybe they just                                 didn't understand what it was that they                                 were trying to accomplish some people                                 are just tired of hearing the word                                 DevOps used or misused and decided                                 they've had enough the community at                                 large was kind of feeling this way as                                 well especially among people who had                                 seen it since                                                       beginning who had followed along with                                 its growth for all of these years and it                                 was something that grew very very                                 rapidly from that one little conference                                 in Belgium into a global movement you                                 know the hipsters who were doing DevOps                                 before it was cool they were kind of                                 over it already and so people started                                 writing blog posts I                                 giving talks about this stuff like you                                 are not a dev up there is no such thing                                 as a dev ops team or even dev ops in                                 your job title is doing you harm and the                                 numbers on these slides I have linked to                                 the various materials that I've                                 referenced here they're all very good                                 talks very good blog posts I'd they'll                                 be at the end of my slides which i'll                                 post later so i'd really recommend                                 reading them DevOps in your job title is                                 doing you harm part of the reason that i                                 took devops engineer off of my resume                                 and off of my linkedin was because i was                                 tired of the recruiter span also a title                                 like devops it makes it sounds like                                 you're the sole owner of something that                                 should be owned by everyone when my                                 twitter says sparkly devops princess                                 it's because it's more to make fun of                                 people who think that DevOps is just                                 this magical fairy dust that you can                                 sprinkle on things puppet labs put                                 together a great blog post highlighting                                 some of what they thought were the best                                 or perhaps worse uses of the term DevOps                                 like the VP of DevOps will be                                 responsible for everything DevOps                                 related like creating silos we're having                                 some good buck-passing skills we only                                 use this in DevOps we use a different                                 tool in production because apparently                                 DevOps is not an idea it's some                                 environment like staging or testing                                 that's totally separate from production                                 because you know that makes a lot of                                 sense so when I say that DevOps is dead                                 what I really mean is that DevOps is in                                 this trough of disillusionment right now                                 I'm sick of hearing about it so are a                                 lot of other people it's become a term                                 that has been misused or used in so many                                 different ways that it started to become                                 meaningless it could be configuration                                 management release management agile the                                 cloud its web scale it it could mean                                 anything you keep using that word I do                                 not think it means what you think it                                 means                                 so what's next the slope of                                 enlightenment is the part of the hype                                 cycle when it becomes more widely                                 understood how a technology or idea can                                 benefit the people are the companies                                 that are trying to adopt it so                                 developers and operations people working                                 together what else is there to really                                 understand it's not that complicated                                 right I would argue that when we're                                 talking about DevOps what we're really                                 talking about or what we should be                                 talking about is empathy empathy is the                                 capacity to recognize to understand and                                 to share another person's feelings and                                 experiences empathy allows a developer                                 to understand why stability is important                                 to assisted men why it matters to them                                 that the site doesn't go down all the                                 time an empathy allows that sysadmin to                                 realize why being able to deploy the                                 code that they've been working on is                                 important to the developer empathy is                                 what allows people to work together Jeff                                 Cessna actually wrote an excellent blog                                 post about this a few months ago that                                 speaks directly to this and if there's                                 one thing that I've linked in these                                 slides that you should read it would be                                 this one blog post on empathy he wrote                                 that empathy allows software makers and                                 operators to help each other deliver the                                 best possible functionality and                                 operability on behalf of their customers                                 and I think that phrase on behalf of                                 their customers is what's really                                 important here because after all aren't                                 our customers the people that were                                 ultimately thinking about he also said                                 you can't design anything truly useful                                 unless you understand the people for                                 whom you're designing this takes empathy                                 one step further outside of the company                                 to the people that the company is trying                                 to help with their products or their                                 service I mean how many products have                                 flopped how many startups have failed                                 because somebody had an idea that they                                 thought was good but they didn't                                 understand the problem they didn't                                 understand their                                 target audience well enough to make it                                 actually succeed at game-changer our                                 target audience is the people involved                                 in amateur sports it means the players                                 the coaches and score keepers and their                                 friends and family who are care about                                 the results of their games we have                                 everyone at the company talk to meet                                 interact with our customers on a regular                                 basis so that even those of us who don't                                 have a sports background understand what                                 it is that we're trying to do and the                                 people that we're trying to help I'm not                                 really a sports person myself I don't                                 really understand the ins and outs of                                 baseball statistics it turns out there's                                 a lot of them and some of them are very                                 complicated but I do understand why it's                                 helpful for a coach to have stats                                 generated automatically instead of                                 having to spend hours after every game                                 doing it by hand and I understand what                                 it means for a grandfather to be able to                                 follow along with his grandsons Little                                 League baseball games when he's stuck in                                 the hospital and can't make it to the                                 games himself on the front wall of our                                 office we have a poster with our company                                 values a lot of time and thought and                                 effort was put in to creating these                                 values to making sure that they reflect                                 what we want them to reflect and the                                 first one is customer first it says                                 listen be empathetic stop and ask                                 yourself will this help our customer or                                 CEO said to us after he put this poster                                 on the wall I've never believed that                                 words printed on a wall will create a                                 strong culture in Shore business success                                 or win a championship for that matter                                 and these words are no exception but I                                 do hope that they can be a subtle                                 reminder of the principles that we hope                                 will be the foundation of a company that                                 makes a positive difference in all of                                 our lives and the lives of our customers                                 and that's what empathy is about                                 it's really about culture we talk about                                 tools a lot when we talk about DevOps                                 but the best automation configuration                                 management release management you know                                 the fancy new text editor that you have                                 to have some beta invite for because vim                                 wasn't good enough these tools cannot                                 fix a broken culture it doesn't matter                                 how many shiny new features your latest                                 office chat program has if people don't                                 actually use it tools can't make people                                 talk to each other it can't they can't                                 make them listen to each other this can                                 work in a good way or a bad way we'd                                 probably all agree that project                                 management and bug tracking or good                                 things but if every single team at your                                 company is using different bug tracking                                 software how much collaboration is                                 really actually going to go on if every                                 tool is different tools can reinforce                                 trust and empathy between teams or they                                 can be used to kind of demonstrate their                                 absence I've been on teams where the                                 developer said well we don't want the QA                                 team to have write access to our JIRA                                 because then they'll just add bugs and                                 that'll be more work for us and we don't                                 want them to tell us about bugs because                                 you know our software is infallible you                                 know you're lucky to use it I've had                                 teams that didn't even want other teams                                 to have read access to their to their                                 JIRA to their Trello because I don't                                 even understand the logic for that they                                 were so paranoid about other people                                 knowing what they were doing for                                 whatever reasons that was a culture                                 without trust without empathy and even                                 though they called themselves DevOps                                 there was not a lot of DevOps ingo                                 adopts how do you know if you're                                 actually doing it right for software                                 development joel's polski invented the                                 joel test you know                                                 software developers can you know figure                                 out how good how productive the                                 environment is that they're working in                                 or going to be working and if they're                                 looking for a new job Tom Lehman Shelly                                 put together the operations report card                                 kind of a similar idea for a system                                 administrator                                 is to gauge how well they were doing in                                 terms of operational best practices so                                 maybe somebody needs to put something                                 together that's similar for DevOps like                                 a few key questions to gauge how                                 empathetic your company culture is I'm                                 not sure exactly what those questions                                 should be there probably a little more                                 complicated than how many pull requests                                 or how many deploys you have per day but                                 maybe ask questions like who is involved                                 with planning does planning consist of                                 just a few executives sitting in a room                                 closed off and they make decisions that                                 just come down from on high to everyone                                 else are where are the different product                                 teams the people to interact with the                                 customers are they the ones that are                                 helping to plan things as well how much                                 time is spent interacting with the                                 customers do you even talk to the people                                 who are using your product so I don't                                 know all of the questions that we should                                 be asking but maybe there's some benefit                                 to be gained from figuring out what                                 those questions are bringing it back to                                 empathy empathy allows you to view teams                                 other teams as enable errs rather than                                 blockers in the old view of things other                                 teams were very adversarial and if you                                 haven't read this book I would recommend                                 Jean Kim's book the Phoenix project it's                                 a very good story of a company that                                 started out in this kind of owe the                                 devastate the ops and the ops hate the                                 dev kind of view of things when things                                 are bad teams view each other as trying                                 to get in each other's way as if the Ops                                 teams goal is not to like operate the                                 site or anything but simply to keep the                                 developers from doing their job which                                 obviously isn't the case if you view the                                 other teams as enable errs you're asking                                 how can we work together to accomplish                                 what we're trying to operations isn't                                 trying to block forward progress they're                                 just trying to make sure that the                                 platform that the site is deployed on is                                 stable so that the customers can                                 actually enjoy it reliably                                 it doesn't matter how many shiny new                                 features you have if the site's down so                                 the last phase in the hype cycle is the                                 plateau of productivity this is when an                                 idea starts to really take off when its                                 applicability and relevance are really                                 clearly understood we started out with                                 the peak of inflated expectations where                                 this new idea was magical where it was                                 going to solve all of our problems and                                 then we realized that it wasn't magic                                 that we'd have to actually you know put                                 some work into this instead of just                                 sprinkling fairy dust on it now we need                                 to figure out what we can actually do to                                 make this work when we can take this                                 idea that we've seen that it started to                                 mature and use it to really make things                                 better so we know what we want is a                                 culture of empathy and understanding                                 what productive steps can we take to get                                 towards that kind of culture it's not                                 enough to just talk about it talk                                 without any meaningful action doesn't do                                 anything that's the kind of places who                                 decide to rename one of their teams                                 doesn't really matter which one they                                 rename that team the dev ops team they                                 call it good and then six months later                                 they're like why did nothing actually                                 change so what can we do what we can do                                 is stop creating dev ops teams DevOps is                                 about culture and for that reason it                                 doesn't make sense to have any one team                                 especially any one person be responsible                                 for it one person on their own even the                                 CEO even the vice principal of DevOps                                 whatever you're going to call them                                 cannot change an entire company's                                 culture they can help they can lead by                                 example but they cannot force people to                                 change cultural changes have to be a                                 collective effort they need to have                                 buy-in throughout an entire organization                                 if they're to succeed it can't be just                                 one team if we're talking about DevOps                                 is the idea of development and                                 operations                                 working together it doesn't make sense                                 to have just one team that's responsible                                 for working together I mean shouldn't                                 all of your teams be doing that DevOps                                 is about tearing down the functional                                 silos that we had in the past and                                 replacing them with trusting and                                 empathetic relationships between teams                                 and it's important to remember that                                 there's more silos that an organization                                 can have than just development and                                 operations any team can become a silo in                                 the wrong environment we talked about                                 tools tools can be used either enhance                                 silos or to prevent them it's about                                 adding or removing visibility between                                 teams if operations has visibility into                                 what development is doing they know what                                 features it is that they need to be                                 running that they need to be supporting                                 I've been in a position where as an                                 operations engineer something went down                                 and somebody came and yelled at me about                                 and they said why is that mobile site                                 down and I said what mobile site because                                 nobody had told the operations team that                                 there even was a mobile site that we                                 were supposed to be monitoring                                 visibility between teams can prevent                                 that sort of catastrophic lack of                                 communication this can be especially                                 true when you add teams like sales and                                 marketing into the mix it's important                                 that they understand what it is that the                                 developers are working on it's important                                 for the operations team to give them                                 visibility so that the ops team can say                                 oh hey heads up you know we're having a                                 problem with this one feature so that's                                 not a surprise when customers might ask                                 about it the DevOps movement started in                                 large part to try and solve the problems                                 in dysfunctions that came from having                                 isolated functional silos within an                                 organization functional silos make it                                 easier to pass responsibility out of                                 them onto another silo on to another                                 team than it is to encourage people to                                 take responsibility for themselves                                 taking responsibility instead of                                 culture of just passing the buck someone                                 else can take a lot of different forms                                 depending on your product your culture                                 the size of your organization but as a                                 first step consider something like                                 simply putting the developers on call                                 not necessarily for everything but for                                 the parts of the site or the app or                                 whatever that they are working on that                                 they are developing we did that a game                                 changer and after a couple weeks of                                 being on call the developers really                                 understand why unreliable software that                                 wakes you up at four in the morning is a                                 bad thing to have it increases their                                 visibility their understanding of what                                 it means to actually run software in                                 production it's easy to say sometimes oh                                 well you know i'll just write the code                                 done with it now it's not my problem                                 anymore but when when it is your problem                                 you want to make it better you care                                 about quality more when it's waking you                                 up at four in the morning instead of                                 somebody else have developers and QA                                 work in the same environment from when                                 they're developing that you have in                                 production seems like common sense but                                 I've seen too many places say oh they                                 can write the code on a macbook even                                 though we're you know running on Linux                                 in production you're not you don't have                                 your MacBooks in the data center you                                 need to make sure that responsibility is                                 taken so that these environments are the                                 same thing so that you know that it's                                 going to be the same environment and                                 when the developers inevitably do get                                 paged or the ops team you know whoever                                 is getting paged but preferably both                                 functional team we switch to cross                                 functional teams just a couple months                                 ago and the reason for doing that was                                 that it increased the idea of                                 responsibility for something so we have                                 a team that lasts you know between three                                 weeks and about three or four months for                                 a specific project for specific feature                                 and so at this point it's really easy to                                 say you're done being responsible when                                 the feature works in production whereas                                 with with silos with non                                 cross-functional teams                                 it was it was kind of harder to say okay                                 when's the line when it's done because                                 okay the developers finished writing the                                 code is that done well if it doesn't                                 work in production it's not done so with                                 cross-functional teams the idea of done                                 becomes a little easier to define I                                 thanks for a very nice time was very                                 inspiring so I'm an assistant professor                                 so I'm up from an academic background                                 and my question for you will be going                                 back to the education what what do you                                 think dear all for the application could                                 do with respect to this changing the                                 culture and what could be done with                                 respect to perhaps improving the skills                                 for system administration that perhaps                                 are not part of the curriculum in most                                 of the computer science universities                                 yeah um I'm not sure about education in                                 terms of you know what could we do with                                 a four-year degree or you know even a                                 two-year degree that would be a lot                                 harder to change there are a couple                                 things that one that comes to mind is                                 called ops school which is a wiki that a                                 bunch of people in the Operations                                 community has but together with the idea                                 of teaching operators system                                 administrators a variety of the skills                                 that they need the other thing that I                                 really like for kind of teaching new                                 system administrators is just grabbing                                 you know someone who's really junior                                 someone who's fresh out of college they                                 might have a CS degree they might not                                 but the key is to you know get them                                 interested in operations cuz I mean I                                 don't know apparently I'm one of the few                                 people who really likes you know Oh                                 figuring out why the server doesn't work                                 but you know it's it's kind of fun I                                 describe it like Legos for adults you                                 get to play with the server and put all                                 the different pieces together and if you                                 do it right you get you know something                                 functional at the end so finding                                 somebody with that kind of drive and                                 just pairing with them you know working                                 with them because i think you know                                 academics like in terms of a degree it's                                 you don't get so much of the required                                 working with people i mean none of the                                 projects that i did in school even group                                 projects really helped                                 me that much it was actually getting to                                 work on you know a product that went                                 into production that taught me more                                 really really really great talk thank                                 you one of the things you touched on                                 that hit home with me is alerting                                 fatigue and that's a major problem in my                                 company and it makes sense that                                 distributing the pager to more ppl makes                                 everyone more aware but are there any                                 other techniques that you or tricks for                                 reducing that fatigue and adjusting the                                 alerts is there any kind of group                                 process that you use yeah one process                                 that we have for reducing the alert                                 fatigue was to pretty much get rid of                                 all of the alerts because the alerts                                 that we had they'd built up over time                                 you know months and years of oh somebody                                 decided that this was a necessary alert                                 so what we actually did was just get rid                                 of all of them bring back the ones that                                 we knew that we needed like you know is                                 the site down that's pretty obviously                                 one and then just bring them back as                                 needed because that way you figure out                                 what you need to be alerting on now we                                 also do the same thing with post mortems                                 we say okay in addition to all the you                                 know technical stuff what what went                                 wrong how was our alerting on this did                                 it alert us enough did it alert us too                                 much and we'll adjust from there any                                 more questions all right if people have                                 questions later you can find me on the                                 internet and I have you know everything                                 here for further and even further                                 reading i will post these slides later                                 if people are interested thank                                 you                                 you
YouTube URL: https://www.youtube.com/watch?v=icsCjtxrrcA


