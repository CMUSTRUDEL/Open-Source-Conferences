Title: Berlin Buzzwords 2014: Gary Dusbabek - Blueflood 2.0 and beyond: Distributed open source ... #bbuzz
Publication date: 2014-05-28
Playlist: Berlin Buzzwords 2014 #bbuzz
Description: 
	Gary Dusbabek talking about "Blueflood 2.0 and beyond: Distributed open source metrics processing"

The Blueflood distributed metrics engine was released as open source software by Rackspace in August 2012.  Since then the Blueflood team as been hard at work adding features to make this an even more exciting and compelling metrics platform. 

New features include:
- Aggregate metric ingestion mode, including statsD ingestion
- Histograms
- Kafka queue ingestion
- Pluggable search integration
- Batch read & write operations
- Graphite integration

In this presentation you will learn how you can use Blueflood as part of your metrics/monitoring tool chain, and how it compares to some of the other leading open source metrics solutions.

Read more:
https://2014.berlinbuzzwords.de/session/blueflood-20-and-beyond-distributed-open-source-metrics-processing

About Gary Dusbabek:
https://2014.berlinbuzzwords.de/user/203/event/1

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	                              great everybody we're going to go ahead                               and get started if you notice that                               they've turned the blowers on in the                               room so it's not so hot anymore earlier                               I thought that they should change the                               name from machine house to bath house                               because it was like a sauna in here but                               thanks for coming today my name is Gary                               deuce Babic and I work for rackspace on                                the cloud metrics team and we're                                building an API so that we have a common                                system in house for dealing and managing                                time series metrics that come from our                                cloud monitoring system before that I                                worked on the cloud monitoring team and                                did different things for that team and                                our team spun out of that so as I said                                our primary job is to manage the metrics                                that come out of that system we're                                currently ingesting data that comes from                                thousands of nodes most of them inside                                Rackspace but we're starting to get more                                data coming from outside Rackspace and                                once it's an API will be getting data                                from all over the place and so that's                                pretty exciting blue fled is a                                distributed system that we created to                                manage that time series data blue flood                                will ingest it will roll it up so that                                the data is easier to manage and it will                                then make it available for query blue                                flood was optimized and designed to do                                two things really well one is ingest                                data quite quickly and the other thing                                is to make it available for reads very                                quickly with the idea that it's going to                                be used to generate graphs and so it                                works best when you're retrieving                                roughly between                                                       at a time performance is a little bit                                slower once you get beyond that but                                we've optimized the read path for a                                sweet spot of about                                                points blue flood was introduced last                                year at Berlin buzzwords and we've been                                busy making it better software since                                then you've probably come here to hear                                about some of the new features that                                we've added as part of blue flood                                version                                                             going to talk about those features but                                there's a really easy way for you to get                                at that information and that's just to                                take a look at our changes file and look                                for all the awesome stuff that we've                                added what I really want to spend time                                talking about today are some of the                                things that we've learned as we've added                                those features because I think we have                                some interest                                seeing things to share about building                                distributed systems about managing time                                series data and about the time series                                space or set of software that we see a                                open source and commercial providers in                                general we've learned a lot so I think                                this will plan to you what I think this                                information will apply to you whether                                you plan on using blue flood or not                                least I hope so so in short I'd like to                                focus on what comes next okay so I'm                                going to proceed along with this basic                                outline I'm first going to talk about                                the current state of blue flood                                including the new features that we've                                added since we've released the source                                we've made a lot of improvements making                                it better then I'm going to spend some                                time talking about the I guess the state                                of affairs with metrics software and                                some observations that we've made and                                then I'm going to make an invitation to                                all of you there are things that you can                                do to help blue flood to help some of                                the other projects and I want to make                                some specific invitations and then                                finish by set is setting some goals for                                us all because I think that we're just                                getting started and there's a wonderful                                place that we can hopefully end up at                                someday so we decided to release blue                                flood in a March of last year we thought                                it would be a quick process maybe take                                us a month to end up taking us almost                                five months we've been working really                                hard since then to to make it better                                that was a big learning process for us                                because we we thought that it would be                                just a simple act of moving code from                                 one repository to another but if you've                                 ever done that you know that that's not                                 the case there's problems with                                 dependencies there's coupling that you                                 didn't think about there's assumptions                                 that you've made in the code that make                                 it difficult and so that process ended                                 up taking us quite a bit longer we                                 realized it quite simply it would have                                 been better for us to start as an open                                 source software for two main reasons one                                 this would have given a chance for the                                 community around the software to start                                 up organically or naturally and it would                                 be more more active as the project                                 matured and we would have cut our                                 dependencies and coupling and and and                                 relations correct from the beginning so                                 in case you might be thinking about open                                 sourcing some software some projects                                 that you working on those are some                                 things to consider time it takes longer                                 and ways that you can                                 you can get the community growing the                                 process of producing open-source                                 software is quite a bit different than                                 producing close to our software                                 specifically every mistake or a good                                 thing that you do is quite visible and                                 transparent to others when we had                                 production issues well we had to                                 sometimes make quick code changes github                                 github reviews in pull requests and it                                 was happening you know in front of                                 everybody so they got to see some of the                                 drama that we might be having in our own                                 production cluster but that's a good                                 thing I think transparency and open                                 source projects is very important last                                 year we were ingesting about fifteen                                 thousand metric points per second and                                 this was as much data as our production                                 environment could put in we were we were                                 we didn't have time to write proper load                                 testing tools and so we would just send                                 as much data as we could gather into our                                 system and then that's how much we were                                 doing last year this year we've roughly                                 doubled that we're doing about                                        points and we see burst up to                                        points a second as far as huge                                 distributed systems go this is this is                                 not much but as we've monitored the the                                 servers and the processes we know that                                 there's room for a lot more growth and                                 we expect it to be able to handle more                                 but still we're limited by how fast                                 cloud monitoring can send data into our                                 system in this time we've also made the                                 switch from physical hardware to virtual                                 hardware and so really we're actually                                 doing more with less this gives us an                                 elastic capability that we did not have                                 before and we think it's important                                 because as an open source project we                                 want to be using our software the way we                                 expect other people to be using software                                 as well and we don't expect people to                                 provision massive clusters of you know                                                                                                     expect people to use amazon web services                                 or Rackspace cloud servers or any                                 virtual system and so that's important                                 we've tested higher loads but they                                 haven't been sustained test but we feel                                 confident that once we once we get the                                 the time and the resources to do                                 sustained tests that will be happy with                                 the ingestion performance we've also                                 spent quite a bit of time expanding the                                 capabilities within blue flood there are                                 two big features that lay the groundwork                                 for a lot of future improvement                                 far as what blue flood is capable of                                 doing and enabling blue fled to work                                 better with external systems those are                                 two things that we think are going to be                                 important moving on when blue flood was                                 first released we basically handled only                                 simple gauges now a gauge is just a                                 snapshot of date of data at a point in                                 time and then that data would then those                                 gauges would then get rolled up we would                                 do a little bit of analysis on them                                 compute the minimum the maximum the                                 average standard deviation and a few                                 other things we knew from the beginning                                 that we were going to want to integrate                                 blue flood with other tools and other                                 kinds of data so we kind of planned                                 ahead as far as how we serialize the                                 data in the database knowing that these                                 other data types are going to come along                                 also we had internal customers who are                                 asking for these things and so we knew                                 that it was going to be important we                                 expected to put the work in to do it to                                 do this and so we've added the                                 capabilities for counters timers and                                 sets and as I said this gives us some                                 influx some flexibility on the kind of                                 data that we can ingest and lays the                                 groundwork some for some important                                 integrations and features that we're                                 going to be able to do in the future                                 some other things that we've done is                                 we've added integration points in blue                                 flood that allow us to get data out of                                 our system in bulk specifically we've                                 added implementations that allow you to                                 export roll-ups as they happen in real                                 time to Kafka cues as well as export                                 roll-ups as they happen into long-term                                 storage like cloud files or s                                         like that the main purpose of doing this                                 was is to allow you to do bulk                                 operations on your data offline from                                 your cluster we realize that this is an                                 important use case we wanted to be able                                 to service it just for ourselves which                                 is why we implemented it but also for                                 people who might be thinking about using                                 blue flood in their own systems when                                 blue flood was first released there was                                 only a primitive kind of indexing before                                 basically the only question we could                                 answer was what are all of my metrics                                 you know for a given tenant or user and                                 it would return a list of metrics and so                                 that was the only kind of index that we                                 had at that point we knew that we wanted                                 to be able to answer more difficult                                 questions we want                                 to be able to tag metrics we wanted to                                 be able to associate key value metadata                                 with metrics and so we knew that we were                                 going to have to have either some kind                                 of index or some kind of indexing API to                                 do this so we specified an interface in                                 our code and created one concrete                                 implementation that uses elasticsearch                                 we've been pretty excited with the the                                 thought of using other index other                                 indexes as well and we've implemented                                 one but there are potentials to to                                 implement a few others from the                                 beginning we knew that we wanted to have                                 very granular access to metric data so                                 what that means is we knew that we                                 wanted to mainly look up metrics by                                 their key name one metric at a time not                                 groups of metrics and so there was there                                 was nothing built into group metrics                                 together indexing will allow you to do                                 this because you can associate a certain                                 tag with a set of metrics and then                                 eventually be able to query blue flood                                 using that tag to return a set of                                 metrics back over space and time also                                 the same thing goes for querying with                                 with key value metadata as well so                                 there's two parts to this interface one                                 is the part that's currently implemented                                 is just how we index the metrics when                                 they get ingested the other parts really                                 unimplemented its to how we search for                                 those so it's kind of a a moving target                                 the main reason we're moving slow on                                 this is we really want to avoid adding                                 extra dependencies to blue flood adding                                 extra dependencies will complicate the                                 process that we use to that you go                                 through to install and setup we want to                                 make it as simple as possible so as much                                 functionality that we can bring into                                 blue flood we will but for things like                                 this we realize we're going to have to                                 have interfaces into external systems                                 we've also increased the performance of                                 blue flood previously as I said before                                 we it was important for us to be able to                                 address metrics individually and so the                                 way you got a metric was one call and                                 you got one metric the way you inserted                                 metric was one call on you inserted one                                 metric at a time so if you had a                                 thousand metrics well you've got to do a                                 thousand different database operations                                 this doesn't scale well especially with                                 Cassandra which is what we are using for                                 our back-end database the the overhead                                 of crea                                 a network round trip talking to                                 Cassandra was just a little too much and                                 it was causing us a lot of performance                                 degradation and so we reduced this this                                 bottleneck by just taking it out and                                 introducing batch operations to both our                                 ingest and roll up pipelines and this                                 overnight increased our throughput and                                 decrease the mean time to create a roll                                 up so it give us additional keep well it                                 did not give us additional capability                                 but it made the system a lot more                                 efficient I think we are going to be                                 able to improve this more as we start                                 experiencing as we start experimenting                                 with the Cassandra native protocol which                                 we still we still haven't done cassandra                                 has changed a lot in the last two years                                 which is how long we've been building                                 this software specifically you've                                 probably observed that they've been                                 moving more towards using cql for data                                 access and distinct distancing                                 themselves or encouraging people to stop                                 using thrift at the same time they've                                 also also been rapidly deprecating old                                 versions of cql and so your your best                                 bet is to stay on the cutting edge of                                 cassandra and not get behind because                                 once you get behind it becomes very                                 difficult to move forward and get caught                                 up well at blue on the blue flood team                                 we happen to be very early adopters of                                 cql when we first we first released the                                 code we were using cassandra                                             c ql too and as you may or may not know                                 the difference between cql                                            three are huge not just semantically but                                 syntactically as well there was some big                                 differences there this made it hard for                                 us to start taking advantage of the                                 features in newer versions of cassandra                                 and so we found that we had to swap out                                 that database layer with a different one                                 we ended up using a ste annex which is a                                 client library provided by netflix that                                 still use this drift so we haven't been                                 able to take full advantage of cql                                 version                                                                 get to that point and it's allowed us to                                 benefit from a lot of the new features                                 that we see happening in Cassandra                                 specifically the favor one that that                                 I've been a most appreciative of is the                                 way that Cassandra I believe is                                     allows you to                                 put certain column families on different                                 mount points so for instance we have a                                 full resolution a metrics column family                                 that gets a lot of Rights that gets a                                 lot of reeds and so we move that to SSD                                 was able to benefit from the performance                                 improvements but meanwhile we're able to                                 keep all of our other column families                                 which don't receive as much traffic on                                 spinning disks so that was it saved us                                 some money we're happy about that when                                 we first released blue flood we did that                                 without any API we used thrift                                 internally to access the data and we                                 didn't want to share that interface with                                 the public because quite frankly it was                                 a little embarrassing it it contains                                 some internals into our cloud monitoring                                 infrastructure that would have looked                                 confusing to anybody you're looking at                                 it from the outside and so we                                 rationalize to ourself that if we just                                 made it easy for other people to                                 implement api's on top of blue flood                                 that they would do it but this turned                                 out to be a bad assumption for us and so                                 it was a lesson that we learned people                                 prefer to have self-contained systems if                                 if they're going to install it they want                                 an API to access it not to have to                                 create an API themselves and so we spent                                 some time we spent some time and created                                 HTTP endpoints we have to reference                                 endpoints right now you still have the                                 ability to put in your own API endpoint                                 but we have to http endpoints that you                                 can use one is a synchronous that uses a                                 traditional thread perk reaction model                                 and the other is asynchronous which you                                 can use for to exploit concurrency along                                 those same lines we've improved the                                 experience for multi tenant customers                                 specifically we knew that we would have                                 one huge customer which is Rackspace                                 cloud monitoring who would be sending                                 data in for lots of other tenants and we                                 still had to respect that each of those                                 tenants were different they may have                                 different retention constraints they may                                 have vastly different kinds of data that                                 they send in and we we made that                                 experience a lot better the controls                                 that we've exposed for that will happen                                 at the at the proxy layer which we                                 encourage people to use if they're going                                 to be sending data into blue flood                                 we've also simplified how we manage the                                 metadata that you can associate with a                                 metric as I as I talked about before we                                 are this is this happens via the search                                 interface that we're adding previously                                 we relied on this clunky internal API                                 this I'm sorry this clunky internally                                 interface that you would have to                                 implement that would fetch metric made                                 of data out of your external system we                                 didn't support bringing it in with the                                 metrics but we've decided we're going to                                 make it simple so you can just send in                                 all the metadata with your metrics will                                 handle it and things will be just fine                                 so we've simplified that problem it end                                 up removing a lot of code making things                                 easier to install we've added lots of                                 other features too but our team is kind                                 of small we have only three engineers                                 and one operations person who well we                                 developed blue flood for a lot of our                                 time we're also tasked with managing a                                 production cluster of blue flood and                                 cassandra and making sure that we have                                 good uptime there and so we haven't had                                 quite the resources or the time to                                 develop to develop the community of blue                                 flood it's it's an open source project                                 and open source projects thrive when                                 there's a community and we realize that                                 this is going to take time and this is                                 going to this is going to take effort                                 and this is something that as engineers                                 we are not really good at is is a this                                 is I think a perennial problem with with                                 open source software and with engineers                                 growing a community is the hard things                                 is a hard thing so the fact that the                                 fact that remains is blue LED is still a                                 young project there are lots of problems                                 that come with being such a young and                                 immature project this is really easy to                                 illustrate this is a picture of me it                                 was taken I don't know two years ago                                 obviously I'm an adult I'm dressed                                 pretty sharply normally I'll walk around                                 in a t-shirt and a pair of shorts but I                                 I look sharp in this picture it's                                 because I Know Who I am I know what I                                 want to do and I know how to do it                                 because I have experience now this is                                 also a picture of me it's taken its okay                                 to laugh it's okay go ahead get it out                                 it's taken when I was                                              I was not very experienced I was                                 definitely not confident and you're                                 probably questioning my taste I've                                 changed a lot over time I went through                                 an awkward phase and I imagine a lot of                                 you in here went through an awkward                                 awkward phase as well because trust me                                 you all weren't as cool as you are now                                 this is the way it works software is                                 that I was immature software's is the                                 same way software has to be given a                                 chance to grow up to think about some of                                 the tools some of the software that                                 you've been using for a long time was it                                 always as good as it is now probably not                                 hopefully it's changed and gotten better                                 over time some of the systems that I                                 have a lot of experience with one of                                 them is Cassandra I first became                                 involved with Cassandra between four and                                 five years ago and at the time Cassandra                                 didn't have indexes Cassandra didn't                                 have caches no in-memory caches                                 Cassandra did not have a query language                                 and if you wanted to change the schema                                 of your cassandra cluster you had to                                 edit an xml file and then do a rolling                                 restart of your whole cluster so if you                                 were to take a look at cassandra today                                 and it was missing those fourth for                                 things you would think to yourself my                                 goodness what a primitive tool i cannot                                 use this stuff the fact is that software                                 evolves and becomes better over time as                                 it matures so we end up demanding more                                 of it and relying on it more well how                                 mature is blue flood i created a handy                                 graph and at the left-hand side we have                                 the twelve-year-old me and at the other                                 side we have the very handsome adult me                                 boo flood I think is right about here                                 we're we're firmly on the immature side                                 of software development good thing bad                                 thing the biggest thing is that you                                 definitely have an opportunity to help                                 the code base for blue flood is                                 relatively small we've taken some time                                 to make it understandable we've divided                                 up into modules that should be easy to                                 understand independently and the core                                 code base probably is a little bit to                                 complicate                                 did but the core contributors are active                                 on IRC or active on our mailing list we                                 are willing in and and happy to help out                                 whenever we can there's a lot of                                 potential I think to turn the corner a                                 little bit in the metrics ecosystem in                                 general blue flood is only part of a                                 larger group of software we see from the                                 open source world kyros DB we see open                                 TS DB and on the commercial side we have                                 some API providers like librado like                                 tempo DB and there are others this is                                 the whole environment is young they're                                 just getting started if you look at                                 where the metrics scene was                                           ago versus what it is now you'll see a                                 lot of growth and I expect continuing on                                 for the next                                                            are going to be looking completely                                 different our software is advancing                                 we're getting better quickly because the                                 software is so immature I think it's                                 really hard to predict the future                                 there's a simple illustration for this I                                 don't know when this was drawn but                                 obviously the illustrator got a few                                 things right and a few things wrong he                                 knew that we'd be talking on devices but                                 he didn't know how good the future would                                 really be we're doing that right now on                                 things like this so from that                                 perspective the future is way better                                 than he envisioned it on the other hand                                 we're still not flying around our                                 awesome awesome private airplanes so                                 obviously the future is not as good as                                 he expected it I think that we can get                                 to a point with our metrics software and                                 not talking just about blue flood I'm                                 talking about the open source systems                                 the external API of providers where we                                 can be ingesting a million points per                                 second per node that's currently                                 probably an order of magnitude different                                 from from what any system is capable of                                 now the databases that we use can handle                                 that and so I don't think there's any                                 reason that the api api is or any of the                                 open source software can't get to that                                 point as well so i think that this is a                                 goal that we could shoot for we're                                 probably not very far from getting there                                 there are some technical challenges I                                 think there are some                                 social challenges as well I think that                                 we need to start thinking together more                                 it's we see a lot of different projects                                 coming along to solve very specific                                 problems or general problems but too                                 much work in this space goes on                                 independently we need to put our heads                                 together all it's going to take I think                                 are a few champions in each project or                                 champions at a few different communities                                 who are willing to communicate and to                                 collaborate and make this a better space                                 in general I think that we could all                                 benefit when our when our ideas start                                 mixing together there are some things                                 believe it or not that you can do right                                 now to help get us there first off help                                 us with our glaring lack of                                 documentation this has always been a                                 problem with open source software some                                 projects do it well others I'd say most                                 do it very poorly better documentation                                 will enable a whole bunch of other                                 improvements there's going to be better                                 adoption because people are going to                                 understand it when they have good                                 references to go to it's going to help                                 with the community because it's going to                                 require people to work on the work on                                 the documentation when people talk                                 people solve problems it's going to help                                 with the installation and configuration                                 of the software anyone here use graphite                                 yeah what thumbs up or thumbs down easy                                 or hard to set up and get going be                                 honest there we go okay there might have                                 been a thumbs up I don't know I hope                                 there are no graphite people like                                 workers in here but it's still good                                 software it's the best at what it does I                                 would also invite you to give bluefly to                                 try I have a personal barometer for                                 software and that is if I can install it                                 and get it running in                                                 continue to give it a try but if not I'm                                 going to walk away until I can do that                                 blue flood may or may not be that kind                                 of software for you we've taken some                                 time to try and create a                                                 that will get you there but if it                                 doesn't and you walk away from blue                                 flood that's fine but I would ask for                                 you to let us know let us know where the                                 pain points were for you so that we can                                 make it better for the next person that                                 would be that would help us even if you                                 don't end up using it our goal is to                                 make people happy and make good software                                 for them so keep blue flare to try                                 another thing you can do is contribute                                 code as I said before it's modular it                                 should be simple to understand and we                                 want to help you we will make this                                 happen if you                                 want to use blue flood you can also make                                 the tooling around blue flood better we                                 haven't had the resources to devote a                                 lot of time into this specifically one                                 thing that I'd like to see is a load                                 testing suite this will help us to know                                 where blue flood eventually falls falls                                 over and we expect that there is a place                                 where it will fall over if you're good                                 at making system packages for different                                 operating systems help us out with that                                 the installation and configuration is                                 something that we know that our team                                 won't get to for a long time we                                 currently use chef to deploy and bundle                                 blue flood and we're happy with that but                                 I think that would help with the                                                                                                         apt-get install blue flood and be on                                 your way we could also use help with                                 integrating blue fled with with other                                 tools and software's example if any of                                 you program use Java and you use code                                 'hail metrics well we could write an                                 output a reporter that would get your                                 data from Kota hell metrics into into                                 blue flood to demonstrate how easy or                                 maybe how hard it is to get blue flood                                 integrated with some other software I                                 just want to show you a few things we'll                                 see how easy this is this is a a                                 graphite web server that can everyone                                 see that that is talking directly to                                 blue flood there is no carbon demon                                 there is no whisper database all there                                 is is graphite web that's been slightly                                 modified talking directly to the blue                                 flood this makes it so that you can do                                 some really cool things so for example                                 in the green line here I'm charting the                                 temperature in san antonio texas where I                                 am from and in the blue line here I've                                 been charting the weather in Berlin                                 where I am at now this has just scraped                                 off the internet from a public API as                                 you can see the temperatures here are in                                 Fahrenheit which I'm told only Americans                                 use at least we drive on the right side                                 of the road right any anyone from                                 England in here yeah fix that ok so this                                 so the fact that we're using graphite                                 web lets us take advantage of a lot of                                 the features of graphite web                                 specifically I can call the ah I can                                 convert this these Fahrenheit sin to                                 Celsius is fairly easy there's an offset                                 function and i'm going to say take away                                                                                                          by about that much which is                                             sudden the berlin temperature disappears                                 i forgot a parenthesis as you can tell                                 i'm an excellent programmer ok and so                                 there you see it i'll do the same thing                                 to san antonio we call this copypasta                                 sometimes it works it sounds it you                                 don't know what you're copying or                                 pasting there we go so now we have the                                 same graph in Fahrenheit I have some                                 other graphs in here that just shows                                 some some different things this this                                 this graph here shows how much warmer it                                 is in San Antonio than Berlin so                                    degrees Fahrenheit during some points of                                 the day come from a hot place people so                                 that's the demo the code that I used to                                 have a graphite web talk to blue flood                                 is only about                                                            some improvement but it's just a                                 demonstration at this this point some                                 other some other integrations that we've                                 done our with stats d stats t is a                                 JavaScript application written in using                                 the node.js framework and it gives you a                                 common ingestion point that then lets                                 you fan your data out there's support                                 for different backends and we went ahead                                 and created a blue fled back end and                                 this is nice because it gives you the                                 ability to try blue flood without                                 changing your whole metrics pipeline all                                 you do is add the configuration for blue                                 flood and you should be off often going                                 assuming we don't change our API                                 endpoints or anything like that I've                                 already demonstrated how we how we do                                 that with with graphite so at some point                                 we're going to know that we have                                 succeeded and this is going to be when                                 there's a community and not just a                                 community around blue flood but a better                                 and healthier and vibrant community                                 around the metric space in general                                 specifically the software is going to be                                 easy to set up the technology is just                                 going to be better because                                 it will have matured it will have                                 improved it's going to become super                                 reliable it's going to be something that                                 we think about but something that we                                 don't worry about there will be less                                 dependencies because the software will                                 be capable of doing more things there                                 are some things I think that will get in                                 the way of us getting there what I see                                 happening is as open source systems are                                 starting to be bottlenecked by their                                 databases think about it each of the                                 time series open source times three                                 systems uses a database to actually                                 store the time series data there are                                 some overhead they're just getting the                                 data into a separate data system we've                                 reached the point with cloud metrics                                 that cassandra is our biggest bottleneck                                 and so there's several different ways                                 that this could be solved in the future                                 but this goes to speak of the immaturity                                 of the holes hold metrics seen in                                 general this is almost a benefit though                                 because the fact that this that the the                                 scene is so immature means that we're                                 going to be able to improve it quickly                                 that's great many of the problems that                                 we have in the metrics scene are not                                 technical there are problems that can be                                 solved with a better community with                                 people working together so where do we                                 go from here when you think about it                                 metric systems like blue flood or kyros                                 or open STS DB or just a means to an end                                 you use them either for getting pretty                                 graphs or use them for feeding Hadoop                                 clusters that you do different kinds of                                 intelligence and analysis with and if                                 you've ever used these systems you know                                 that we're just scratching the tip when                                 it comes to efficiency Hadoop is a                                 general solution and it's not                                 necessarily very efficient in English we                                 have a figure of speech that when your                                 only tool is a hammer everything that                                 needs to be fixed looks like a nail                                 likewise I've heard it said of Hadoop                                 that when all you have is a Hadoop                                 cluster everything looks like a                                 MapReduce job we've got to be smarter                                 with how we do analytics on our data                                 we've waited years for our data stores                                 to get here and now they're finally here                                 we can't squander this opportunity to                                 make some awesome systems there's lots                                 of work to do all you have to do is                                 start pitching in writing code working                                 on documentation it doesn't have to be                                 this project it can be any project we're                                 all going to benefit when we start                                 getting better                                 if we execute well enough we're going to                                 be riding around in those freaking                                 airplanes driving around talking on our                                 phones it's going to be an awesome                                 awesome place I think in the future                                 there's a native distributed time series                                 data store there's lots of optimizations                                 that you can do when you know that your                                 data is going to be a pent only when you                                 know that it's going to be arriving                                 mostly in order and when you know that                                 most of it's going to be expiring all at                                 once with my experience with Cassandra                                 happened to be a committer I know that a                                 lot of operations would be a lot simpler                                 if you knew that you were only going to                                 be dealing with range queries and you                                 could collect tombstones in bulk                                 multi-tenant systems will be a little                                 bit harder but we'll tackle that problem                                 what if kyros open s TS DB and all those                                 other databases and API providers                                 adopted a common API it would help the                                 community because there wouldn't be so                                 much problems with switching between                                 different vendors or implementations and                                 we would all benefit from speaking the                                 same language those are two things that                                 I would love to see that I think we                                 should we should definitely shoot for                                 the time series community the time                                 series database community needs to start                                 working together sharing our success                                 stories d duplicating our own effort we                                 solve the same problems multiple times                                 thank you for your time I wanted to                                 point out just a few other presentations                                 eric evans is going to give a time                                 series database presentation tomorrow                                 and if you're interested in data                                 modeling on Cassandra i'm sure they're                                 going to talk about time series data                                 that's going to happen tomorrow                                 afternoon as well but thanks for your                                 time everybody I think we might have a                                 minute or two for questions                                 in dealing with time series data                                 particularly with matrix you showed a                                 lot of numbers which show throughput and                                 your targeted numbers with throughput                                 what are the latency is your targeting                                 it with those through words on our our                                 right lane Cesar obviously lower we want                                 to keep things with underneath                                 underneath five seconds because anything                                 bigger than that it's going to be just                                 unacceptable reads we can tolerate a                                 little bit more because we know that                                 we're reading a finite number of data                                 points I don't I can't recall numbers                                 off the top of my head what performance                                 are Cassandra cluster is doing now but                                 it's within acceptable parameters for us                                 and the people who consume our graphs                                 because we would hear complaints from                                 them is it an expedition to have real                                 time graphs coming in like what's real                                 time for you five seconds you said is                                 right so real time must be more than                                 that so what's your words are acceptable                                 limit for your time I would say it                                 depends on how many how many grafts are                                 pulling data in front but if you can get                                 one graph in less than half a second or                                 even faster that's probably fine if                                 you've used graphite you realize once                                 you get a certain amount of data and you                                 have                                                                   is one of the things that blue floods                                 actually good at and why we think that                                 it's going to be fun to have it talking                                 directly or to have graphite talking                                 directly to it let's look like one more                                 thing how close are you guys with the                                 OpenStack teams and is there any                                 integration point looking for the future                                 so OpenStack has a salamat er API and                                 they're mostly focused on dealing with                                 events and not necessarily time series                                 data and so we're aware of what they're                                 doing and we're monitoring what they're                                 doing and if there's ever a way to                                 either put the projects together or to                                 make sure we support their API will end                                 up doing that                                 the first part is I have to say I don't                                 know much about your blue flat by we are                                 using kayo sleepy so how do you distinct                                 your self except for example                                 multi-tenancy in terms of storage                                 efficiency and speed so if i recall                                 kyros DB there is a single column family                                 for metrics data we split roll-ups up                                 into their own column families and so                                 that's one key difference is is the data                                 store are you referring to open st open                                 TS DB or kyros I'm sorry ok kyros at                                 first only supported HBase if I remember                                 correctly and and we we've always used                                 Cassandra and so it was important for us                                 to be able to use Cassandra so that's                                 one reason we kind of didn't didn't                                 start working with them earlier on but I                                 know that I know that they support                                 Cassandra now though that's about it i                                 mean that's as bad as familiar as i can                                 can go off the top of my head sorry                                 great thanks for your time everybody                                 you
YouTube URL: https://www.youtube.com/watch?v=NmZTdWzX5v8


