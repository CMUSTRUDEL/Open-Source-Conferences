Title: Berlin Buzzwords 2014: Florian Pfeiffer - Scalable Continuous Delivery with Scala on Mesos&Marathon
Publication date: 2014-05-28
Playlist: Berlin Buzzwords 2014 #bbuzz
Description: 
	At one point a big blob of PHP doesn't fit your needs anymore. In this session you will hear everything about the pain we had at gutefrage.net when we decided to move from a monolithic php application to a service orientated scala/finagle infrastructure. 

You'll hear about our great idea to scale with VMs on our private cloud and you'll hear why we realized that this idea was crap. But you will also see how we've moved from VMs to Mesos&Marathon and how we now manage to get our stuff on production in a fully automated continuous delivery environment.

Read more:
https://2014.berlinbuzzwords.de/session/scalable-continuous-delivery-scala-mesosmarathon

About Florian Pfeiffer:
https://2014.berlinbuzzwords.de/user/310/event/1

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	                              virtualization is dead that might be a                               little bit an acceleration but yeah                               let's see at the end how much truth                               there's in this sentence so let me back                               you let me take you back to the time for                               the internet was still black and white                               so actually not to                                                   our company was was still a little                               startup and yeah we did what most                                startups are doing we build an                                application and it was a small PHP                                application back then I mean we didn't                                have much traffic and yeah scaling                                wasn't important it was just yeah a                                small PHP application and luckily we had                                some success so we got some traffic and                                then you come to the point where you                                need to scale and what are you doing                                with PHP and scaling yeah you just put                                some more yeah more machines to them and                                in this set up with four machines it's                                still fine because you don't you don't I                                have to take care about yet a deployment                                process I mean we did back then with an                                svn app on each machine so it was yeah                                life was kind of easy and but then you                                get more traffic and you have to scale                                again so on and from someone you will                                reach this and then you're thinking                                about okay now deployment isn't that                                cool anymore bye bye doing SSH into the                                machines and and doing an svn up you are                                you're thinking about okay maybe you                                should now start to use something like                                chef or puppet for for taking care of                                the machines and we decided to use chef                                for whatever reason                                not sure and we decided to use                                Capistrano for deployments so life was                                better now somehow and then we came to                                the point where we had about                                            unique users a month so we are thinking                                out again about okay what now I mean PHP                                isn't that scalable unless you're                                Facebook and yeah what what can we do                                now and an idea that that came up yeah                                let's let's do it and a service                                orientated raid so we thought about yeah                                why why should we split up this big PHP                                application with which we deployed the                                where we deployed the whole application                                on each machine and we couldn't scale it                                enough more fine granulated way why                                don't we split it up and so so we did it                                and this is now a small example of how                                it might look forces quite simply cated                                simplified and we are a question-answer                                platform so of course we have a question                                service and an answer service and a user                                service so these are these are the                                domain model the entities we are using                                and we still have PHP and a frontal so                                because we didn't want to do a big bang                                migration so we just slowly carving out                                the stuff of our PHP application and                                when we are finished in about one year                                maybe we can even throw a later the old                                PHP front end and can do something like                                play on Scala as a front end for our                                services and with this kind of                                architecture we now can can take a                                simple a single service and                                set up an instance of the service so                                yeah now we have one service but one                                service isn't or one instance of the                                service isn't enough because yeah it's                                not H a so you might want to have to                                service or two instances and if you're                                doing something like like and can                                redeployment where you are having tests                                and senses with live traffic you might                                want to have even a third instance but                                yeah that's you can scale it as much as                                you like and the question else okay                                where where should we run the services I                                mean the obvious ideas ok let's go cloud                                and who of you is using ec                                              so who is using something like a private                                cloud on on vm there ok so yeah we                                choose or Charles VMware because the                                German data privacy loss it's it's                                always better to have our the sensible                                data on our premise so we built                                something like a private cloud and we we                                came up with this kind of solution so we                                somehow integrated chef into vml so that                                with a singer but the knife at the                                command line tune of chef we could start                                easily a new instance on our vmware                                 cluster and and assigned roles on on                                 this new machine so with this single                                 command everything was what happened in                                 the background was ok well now we set                                 them a pixie pre-boot environment and                                 then the command line tool creates the                                 vm and the vm boots gets data from the                                 pixie server installs the operating                                 system and then chef kicks in and starts                                 the application or install certification                                 and and everything is fine because then                                 our service which is just based on                                 finagle announces have fun zookeeper                                 and everything is done so but with this                                 kind of setup it was like if someone                                 from from the development team came and                                 like air we need a new service it was                                 like like a one command line or one                                 command that set up the whole                                 infrastructure so we we put some more                                 stuff into it like create a Champions                                 environment do do a confluence entry                                 with all the information about this kind                                 of service start three instances and do                                 do everything you need so a new service                                 was like it took five minutes to for us                                 to set everything up and okay this was                                 kind of okay now so we could lean back                                 and enjoy life but you have some you                                 have some some downsides with this is                                 kind of of VMs and here free of them and                                 the first thing is the hypervisor and it                                 doesn't add so much overhead to two-year                                 to your VMS but it's notable so like                                 depending on which which artist readers                                 like three to five percent of overhead                                 and yeah of course it's let him see you                                 didn't want or don't want and another                                 point administration so normally you                                 want to keep it simple and we are aiming                                 to have someone like like about                                     services if you multiply it by                                           that's the the lowest number of                                 instances we have per service we will                                 end up someone with about                                                have to manage it somehow it's it's                                 quite fine with the chef but still you                                 have                                                                  monitoring and yeah that's that's not so                                 great and another pointers is cost                                 because either you you're paying                                 easy two for the instances or you have                                 to pay vmware the license costs which                                 are ya both isn't that great so what                                 comes to the rescue missiles yes and                                 have a have a short time to read it now                                 you know what what they say what Maysles                                 is but yeah basically it's just an a                                 system where where slave says yeah here                                 i have                                                                and then you have frameworks which can                                 request those resources so a service as                                 request from from air some some                                 resources I need one cpu where can I run                                 and then means of mass at hazard yeah                                 here run on this machine so that's                                 that's the theory but but I will tell                                 you why why I love it what'swhat's why                                 it has really yeah enlightened our days                                 at work and before I can't that I will                                 tell you a little bit about the history                                 of of mazes so it's inspired by Google                                 Borg which Google is using for for their                                 classes and then this this idea was was                                 developed in at UC Berkeley and the red                                 labs we're also spark comes from and                                 some some companies then adopted and and                                 developed it further so you might know                                 this company and they are using it for                                 for some kind of request response type                                 of applications like yeah services like                                 we are using it and you might also know                                 this company                                 they're using it primarily for for batch                                 jobs like running Hadoop or or spark on                                 on a Meadows cluster and another                                 interesting interesting thing is that                                 twitter is using it on on bare metal                                 machines and our B&B is using it on on                                 ec                                                                     mutually exclusive you you can even run                                 mezzos on on VMS if you if you want to                                 have the advantage of of this cluster                                 management and there's quite a lot of                                 things that can run on meses currently                                 so this is just a short overview of the                                 current ecosystem and you might have                                 seen this but I won't talk about it                                 sorry to disappoint you I will talk                                 about Chronos and marathon and let's                                 start with coronas so Cronus if you if                                 you're taking the basic linux system                                 Kronos as a replacement for foreign                                 Omicron demon so you can run                                 periodically tasks and the the nice                                 thing with Cronus's you have tolerance                                 so you can run it in and then h a mode                                 and the the coronal's master can just                                 died and another one takes over so                                 Cronus also takes care of of the                                 distribution of your tasks so it asks                                 mrs. yeah where can I run this kind of                                 of job and mazal cells yet run on this                                 machine so you don't have to take care                                 about like if you're using the old style                                 cron this task only ones on this machine                                 and yeah whatever it's chrono stores                                 order the state data in zookeeper so                                 even yeah for example if the master dies                                 and another takes over the data gets                                 repack from                                 from zookeeper another thing now so                                 these are the interesting things that                                 the next things are nice to have I would                                 say and you have dependencies so in an                                 ETL job you can say yet this job should                                 run only if the other one is                                 successfully or has successfully                                 finished you have nice statistics and                                 they don't give just average run times                                 because yeah we all know averages sucks                                 and they give % eyes so you can see how                                 long you chop taking or some if there's                                 some something bad on your classif if a                                 chop takes long a little bit and                                 something you don't have in your normal                                 cron demon is also a resolution below                                 one minute so you can schedule jobs for                                 like running every second or                                            and we are using toronto's for our ETA                                 job so we run some cascading or scaling                                 chops on on Kronos and that was other                                 interesting thing in the mezzos                                 ecosystem is marathon and marathon is                                 basically your control panel to get your                                 chops running you can you can put their                                 your application you providin and uri                                 where yah where your application can be                                 downloaded and you say okay i want to                                 have ten instances of of this                                 application i want to cpu spins per                                 instance and                                                          another yeah new new kid on the block                                 which is quite cool stalker and measles                                 can or marathon can easily run docker                                 containers on on your marathon or your                                 mazes infrastructure for for running                                 applications on this kind of                                 cluster you will also have or you will                                 also love the constraints that marathon                                 provides or messes in general you can                                 say this kind of application should only                                 run on on separate machine so because of                                 on one machine there there might be                                 enough resources and I have a service                                 with five instances it might happen that                                 these five instances are on one machine                                 which is kind of that when this machine                                 fails because it will take a little                                 longer for fold over for disaster                                 recovery and now coming to how we do                                 continuous delivery on this ecosystem so                                 you might not be surprised of the first                                 step is commit your code and push it to                                 the master then Cheng and kicks in and                                 that's the usual locally tests and                                 builds a fetch a file and loads it up to                                 some some kind of storage and by the way                                 we are using Jenkins still on our on VMS                                 and enslaves and if you're interested in                                 running jenkins on mrs. talk to Reba                                 guys because they have Cheng goons                                 running on mazey so for every developer                                 has some kind of private Jenkins and                                 sense so just talk to them or do some                                 search on a net so the next step is                                 start a test instance on Maysles we are                                 talking two marathons yeah just start a                                 new instance the instance is done                                 started in a test mode so we can we can                                 do some integration tests so for example                                 if you are deploying the user service we                                 will regress the question service with a                                 kind of special header that fetches data                                 exactly from the new version of the user                                 service so that we can detect some some                                 incompatible and the new versions if                                 there is everything fine we will start                                 the service and a cannery mode so at                                 this stage this new version is already                                 running in the production cluster and                                 gets already production traffic so at                                 this stage state we have we have two                                 versions actually running at the same                                 time so it's quite important to have it                                 backward compatible and then it's                                 running for a couple of minutes or hours                                 depends on how much traffic we are                                 having and we observe the error read on                                 this cannery and if everything is fine                                 we will start the deployment on the                                 protection on the whole cluster so i                                 hope i have ignited you now to have a                                 deeper look into a new medicine marathon                                 so I recom recommend to you these two                                 pages so of course Apache page and then                                 the guys at mesosphere are currently                                 quite active and developing measles and                                 marathon and all the frameworks and if                                 you if you have questions because                                 there's not so much time just grab one                                 of the guys and blue t-shirts and let's                                 have a talk outside or you can contact                                 me on Twitter or write me an email so                                 coming back to the beginning I don't                                 think virtualization is dead but for our                                 service infrastructure measles is the                                 right thing to have and even if we are                                 having VMs for like Jenkins I'm I'm so                                 happy that marathon and meadows exist                                 you
YouTube URL: https://www.youtube.com/watch?v=rB-wrCGygy0


