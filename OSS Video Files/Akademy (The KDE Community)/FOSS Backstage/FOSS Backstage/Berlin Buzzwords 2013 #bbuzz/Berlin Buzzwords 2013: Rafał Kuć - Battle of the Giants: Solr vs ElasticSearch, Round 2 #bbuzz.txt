Title: Berlin Buzzwords 2013: Rafał Kuć - Battle of the Giants: Solr vs ElasticSearch, Round 2 #bbuzz
Publication date: 2013-06-19
Playlist: Berlin Buzzwords 2013 #bbuzz
Description: 
	Learn about how both of these great enterprise search servers are evolving and adding new features. We will be comparing the latest and greatest versions of Solr and ES, both of which are using Lucene 4.x and bringing different approaches to handling codecs, per field similarities, and more. Of course, we'll not only look at technical aspects of both Apache Solr and ElasticSearch, but will also dig into the makeup of their contributors, compare the code and of course the user community. 

By the end of the talk you'll learn the main differences when it comes to these two search servers, how they handle shard and replica distribution, automatic data replication, and different query types. In addition, you'll learn what the admin APIs for both Solr and ElasticSearch look like and how to use them to control and alter your cluster state. Last, but not least, you'll learn what to avoid when using ElasticSearch or Apache Solr.

Read more:
https://2013.berlinbuzzwords.de/sessions/battle-giants-solr-vs-elasticsearch-round-2

About Rafał Kuć:
https://2013.berlinbuzzwords.de/users/gr0

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	                              hello everyone can you hear me nice to                               have you here so we'll start with a                               brief introduction is benign simultext                               consultant an engineer I'm also happen                               to be a soul cookbook outer the series                               also call cow turd the elastic search                               server book we are preparing the next                               one called mastering elasticsearch I'm                               also a co-founder of soul PL where we                                try to share knowledge about solar and                                I'm a father of two great children and                                husband so what we all try to talk today                                is comparison a brief comparison of                                Apache Solr and elastic search we'll                                start with some basics as you may know a                                purchase or the current version is based                                on leucine                                                       elastic search when with at least with                                the newest release the                                               which is packed with listen                                             all the goodies that comes with it but                                what we expect from the currently from                                an open-source search engine that is                                based on the scene we expect scalability                                we expect fault tolerance high                                availability we expect features not only                                when it comes to full-text search but                                also some analysis maybe some                                administration features we expect                                manageability ease of installation we                                don't want to spend days on installation                                we want to get it right and easy we                                expect tools to be built around it and                                of course we expect support both from                                commercial companies and the community                                if we would look at the expectations                                versus the reality will see that sore is                                working the sole cloud at least is                                working with zookeeper to create a                                clusters it has a leader / shard and on                                the other side with the elastic search                                we have only elasticsearch nodes                                elasticsearch is able to handle itself                                and we have single leader called master                                of core both those search server are                                distributed fault tolerant and have                                automatic leader election with something                                that happened with the                                initial leader that was elected of                                course there wouldn't be those search                                engines if there wouldn't be a community                                around it let's so let's start with the                                committee's if you look at the top time                                committers for Apache Solr it would say                                onic on top this is a five-year strand                                actually being shown then we have Mark                                Miller and Robert which is I guess here                                yeah robot is here in case of elastic                                search as you may expect we have shy                                Bannon on top those two accounts from                                get up we have marked in front Gilligan                                and eager motive those are the top trees                                the active contributors vary from month                                to month and year to year and in case of                                solar the top top contributors per month                                we can see somewhere between                                          when I think the                                                       and then it varies for about more than                                some near than                                                        of elastic search we can see the peak                                also when the release of                                         approaching and we see about                                        meters at least being shown currently by                                the application I used for statistics                                the code of course the code is pretty                                important we can't see anything about                                the quality of code but we can see the                                lines in case in case of solar we have                                more than                                                              case of elastic search we have more than                                                                                                        also like statistics at SEMATECH so we                                do these kind of things and the lines                                sorry two commits per month are about                                more for solar there are more than                                    in case of a lot of varying to almost                                                                                                     something something above the                                        mailing lists you can see that on the                                mailing list they are pretty active the                                users are pretty active we get responses                                pretty on every question you ask                                if you like you can see that in case of                                Apache Solr it's about                                                  week because those are weakly weakly                                statistics so we get about four four                                thousand per month it's pretty pretty                                nice case of elastic search it to it                                varies a bit more we don't have the                                 statistics for previous year previous                                 years because there were almost none                                 until then and then we have the you can                                 see the statistics which are about above                                 the                                                                    the trends and you can see that solar is                                 more mature it was released earlier than                                 elastic search and you can see the top                                 line which is showing the transfer that                                 Google tends to show us and elastic                                 search is getting the going to higher                                 and higher as more people to search                                 about it more people try to get it and                                 more people are interested in it of                                 course there would be us here if we're                                 we're not interested in the technical                                 details so the basics about those are                                 the collection and index collection in                                 solar salt cloud is the main logical                                 index that can be spread among multiple                                 nodes in the cluster in case of elastic                                 search the main structure is called an                                 index in a purchase order the index                                 structure can be defined in the schema                                 XML file it allows us to automatically                                 copy values it allows us to have dynamic                                 fields is it allows us to use the newly                                 introduced in lucene for all the custom                                 similarities that were implemented and                                 of course the custom postings forward                                 which allowed us to which allows us to                                 store the index in a different format                                 than the default ones and we can have                                 multiple documents but they need to                                 share the same schema in the cell in the                                 single index and the schema can be read                                 Lucy using the API which were which was                                 a functionality introduced in                                        case of elastic search we have so called                                 schema-less elasticsearch can guess what                                 feel will if you send the data to                                 elastics                                 it can guess what are the field types                                 you probably want to want to use of                                 course we can define the fields and type                                 and types with an HTTP API we can have                                 we can have multi fields something more                                 or less similar to dynamic fields in                                 solar we can able to copy fields in                                 solar we can have fun asset and                                 parent-child documents of course it also                                 leverages the functionality of custom                                 similarity a custom postings format                                 multiple documents can have moved the                                 different structure with completely                                 different fields using the types and the                                 schema and the types and all the on the                                 document processing can be read and                                 written using the API elasticsearch                                 provides let's get back a bit                                            charts and replicas each index or                                 collection can have many sharks which                                 can be spread which the index can be                                 divided into each of the shark can have                                 one or zeros replica or more which are                                 automatically updated and they can                                 become a leader if something bad happens                                 to the primary shark or the leader shark                                 the configuration in solar is stored in                                 static config called sore config.xml can                                 be reloaded during collection core                                 reload not all the properties can be                                 reloaded the one in the index                                 configuration can't be in elastic search                                 we have a static elasticsearch yml file                                 which can store a cluster configuration                                 not note configuration it can be changed                                 it's changeable during right runtime and                                 but not all properties but usual all the                                 properties that are stored in elastic                                 search by email can be also posted to                                 elasticsearch using the API this                                 discovery the discovery is a process of                                 discovering notes and forming a cluster                                 so in terms of a purchase or we have                                 zookeeper that is responsible for                                 holding the cluster state and to go to                                 manage the communication between the                                 nodes in terms of us when it comes to                                 elasticsearch there is a same discovery                                 that is a bill is a module of                                 elasticsearch that manages the                                 communication of course when it comes to                                 soar it requires additional software to                                 be present the zookeeper zookeeper                                 ensamble to have to don't so we don't                                 have a single point of failure it                                 prevents split-brain situation and it                                 also holds collection configurations it                                 came when it comes to elasticsearch we                                 have automatic notes discovery when you                                 launch in you know node and it shares                                 the same cluster name elasticsearch will                                 using the multicast or unique as                                 discovery methods it will automatically                                 try to join the new node and                                             form the cluster if if only a single                                 node was present or add the note to the                                 cluster of course there is an automatic                                 you master detection and we have to a                                 failure detection when we're master                                 pinks all the nodes and all the nodes                                 are checking the Masters existence and                                 if it works correctly both servers                                 provide HTTP API when it comes to                                 elasticsearch we can use both the query                                 string or sophisticated jasons with with                                 queries with solar we have the query                                 string when we can add parameters to use                                 all the functionalities and they both                                 provide specialized java api to connect                                 to them and talk to them if you are                                 using java clients or and there are                                 multiple libraries available for both of                                 the of those search engines in terms of                                 when we are talking about queries the                                 one thing that sore has that allows the                                 sticks are doesn't is the results                                 grouping we can group our documents that                                 are returned for a query based on                                 multiple field values based on the query                                 or based on the function queries of                                 value of the function query it's nice if                                 you for example want to show only a few                                 documents for a company with a given                                 or for a client in case of elastic                                 search the functionality that solar                                 doesn't have is a for example a                                 prospective search prospective search is                                 somehow the opposite of a normal                                 indexing and searching instead of                                 storing documents you store queries and                                 you send a document and see what which                                 queries are matching the document you                                 can imagine this functionality and some                                 kind of alerting imagine you have a                                 company that won't do that observe                                 social media and your clients register                                 queries and then you send documents from                                 the social media that are for example                                 tweet balls Twitter tweets or Facebook                                 posts and their match given queries you                                 can reach return them and see which                                 which queries matched of course for both                                 of these search engines we expect                                 variety of queries the full text the                                 full text search so we expect not only                                 days but we also want to control the                                 relevancy of those so we need to control                                 the score calculation we won't use                                 different query parsers and of course we                                 want to use advanced lucene queries not                                 only standard boolean walls right in                                 terms of score calculation at least from                                 my point of view we look for controlling                                 the importance of documents queries                                 through terms phrases we look for the                                 possibility of leveraging not only the                                 standard tf-idf similarity but we also                                 you want to use the newest one that were                                 introduced in                                                          for example and of course we want also                                 to be able to use the tf-idf in case of                                 solar of course we have the index time                                 boosting we can use the quote and of                                 course the query time boost which we can                                 affect the terms fields phrases we can                                 use function queries and sub queries to                                 alter the relevance of our adductor of                                 our queries in terms of elastic search                                 we also has the index time boosting but                                 will incur at query time we also can                                 control the terms phrases but elastic                                 search provides us with different                                 queries for example                                 custom score the constant score one we                                 can calculate distribute turn                                 frequencies we have a negative and                                 positive boosting and we can use scripts                                 to alter the relevance we imagine we can                                 take a field we can write a script to                                 take a field multiplied by something or                                 to write a java plugin that will provide                                 a native script for elasticsearch to                                 alter the score of documents the one                                 thing introduced in                                                      is the risk or functionality which we                                 orders the top hit documents based on                                 another query it's done because you                                 don't want to usually reordered all hold                                 it the whole document base that was                                 returned by your query but instead you                                 want only the top ones that are shown                                 for example to the user to be reordered                                 based on some other criteria currently                                 we can use another query this                                 functionality is executed on schar's                                 before there before the results are                                 returned to the gathering node and they                                 are not executive doing scan and count                                 because it doesn't make sense actually                                 because you are only interested in                                 counts for example when when it comes to                                 count elasticsearch also maybe it's not                                 on a pure query thing but elastic search                                 allows us to use nested objects which                                 are stored nearby in the index nearby                                 the original documents the parent ones                                 let's call the parent ones they can and                                 provide us the possibility of storing                                 documents that are not flat if you would                                 like to for example store different                                 colors and types of shirts for your                                 e-commerce application you can do that                                 with nested objects and if you query                                 with a special query type you can only                                 return the ones that match not a single                                 attribute but for example a few fields                                 that are the building the nested                                 document and the nice feature is that                                 the top-level documents can be sorted on                                 the basis of what it's in the                                 nested documents in case of solar we                                 have the parent-child relationship it's                                 used at query time it allows multi core                                 joints and this simple query that allows                                 us to join multiple multiple documents                                 more or less not as sophisticated as sq                                 sequel joints but does its work                                 elasticsearch also provides a                                 parent-child function functionality                                 however it doesn't it needs to be those                                 documents needs to be properly indexed                                 you need to have parents set when you                                 index the document and you can retrieve                                 the documents using a special queries                                 and filters like the S child has parent                                 and top children of course both provide                                 filtering results they are used to not                                 only narrow down there is the results of                                 our queries but also there are very good                                 candidates for caching and performance                                 boosting if you do that right so in                                 solar they are addictive you can use the                                 fq parameter to add multiple function                                 queries and they will be together edit                                 with the end operator they can use                                 different query parser local params and                                 they narrow down the facility results in                                 case of elastic search the filters can                                 be defined using the query dsl and sent                                 along with queries they then don't know                                 down the faceting results and can be                                 used to alter score calculation with                                 custom score filters for example both                                 provide faceting when the similar things                                 are terms ranging query facets term                                 statistics maybe it's not so faceting                                 but we in solar but its statistical                                 component and of course special distance                                 the thing that differs in both the solar                                 has a pivot facets that can work on and                                 show you the true basically the tree or                                 faceting so for example if you would                                 like to have documents grouped in                                 faceting like for first                                 for category than                                                       can do that with pivot and elastic                                 search provides histograms faceting both                                 soul                                                                     provides real time real time handlers                                 this is real time it's as you know in                                 order to see the documents in the scene                                 you need to refresh the searcher reopen                                 it or refresh this is a real time                                 sometimes come in handy because you                                 don't need such a reopening here but you                                 can read the documents that were just                                 sent to indexing because they will be                                 read by both from the transaction log in                                 case of solar you have a separate                                 real-time get handler to do that you                                 have that by default is configured in                                 solar XML and in case of elastic search                                 we have the multi get api and the get                                 api that allows us to fetch documents                                 even if they were not yet indexed that                                 can come in handy when you need the                                 information if the document was sent and                                 it will be indexed somewhere in the new                                 feature of course the data handling is                                 also very important when it comes to                                 because without the data being indexed                                 to search engine we wouldn't have                                 something to search them so in case of                                 solar we are allowed to use different                                 formats for example those are xml json                                 comma-separated ones and of course the                                 binary responses for example we can get                                 the data in Java response in Java binary                                 and PHP binary if you want in                                 elasticsearch it's jason in json out and                                 yambol and both provide a single batch                                 indexing with the case where elastic                                 search allows us for example to use the                                 update api in hmmm but in batch                                 processing queue of the newly intro the                                 newly released                                                           that out both elastic certain solar                                 provides                                 partial document updates the                                 dysfunctionality is not based on leucine                                                                                                          a kind of server-side documentary                                 indexing when the search engine gets the                                 document used it's that and the fields                                 that are stored in case of solarin for                                 example the source field in case of                                 elastic search and ads the changes that                                 we're done and ray index is the cute                                 that document once again it can be used                                 for example to decrease the network                                 traffic or if it's a hard thing to do on                                 the application side when you don't know                                 the documents the whole document                                 structure drink update can use the                                 updated PR and it will do its work case                                 of solar it to coast requires the                                 version field for the optimistic locking                                 it's set to the standard request handler                                 and then the example call to this API                                 looks like this we would like to update                                 the document in case of elastic search                                 we have also the partial document update                                 endpoint exposed that we can use it                                 supports additional parameters that we                                 can use standard just in standard by in                                 elasticsearch recruiting parent                                 replication percolate and it is a script                                 to perform the humid updates and it's                                 the example call is shown in case of                                 solar when it comes to administrative                                 functions we're one of the nice things                                 is the collection API it allows us to                                 create reload delete collections but                                 also split shots this is something that                                 is new something that is very nice                                 because you don't need to at least you                                 don't need to currently over shard you                                 don't need to create too many shots                                 before you can just leave it and split                                 it later in elastic search the indices                                 REST API allows creation deletion                                 closing the Rapa Nui reopening of the                                 index so refreshing and checking the                                 existence if it's all provided by d by                                 the API let's get a bit back and see how                                 Kylie collection split works for example                                 let's assume that we have a single                                 collection called collection                                             single shot in that collection called                                 short one and it's located on the                                 machine with the given IP address if we                                 would send the following command solar                                 what we would get in results is                                 something like this the collection would                                 be split into two shards the shard                                    and shot                                                              the short one would be would be left we                                 can delete it but the shard                                           shoot and we'll have the documents from                                 the original shirt split it among those                                 it's a very nice feature if you a solar                                 you can try it out it works it was                                 anticipated highly especially in my case                                 when it comes to cluster monitoring                                 Apache Solr provides us with multiple em                                 beings that can be accessed using the                                 jmx and in case of elastic search we                                 don't have the jmx opened but instead we                                 have a multiple rest point when we can                                 fetch different statistics like the                                 felton state check notes information                                 case statistics segments information you                                 can see all the sorry all the things                                 that elasticsearch stores in terms of                                 statistics and you can read that using                                 the API you can also update the dolls                                 most of the function most of the                                 configuration options using the cluster                                 settings update like you can do                                 rebalancing you can auto recovery                                 configuration you can alter allocation                                 you can change configure cluster                                 configuration properties for example if                                 you would like to alter the allocation                                 of charts you could say i want the IP a                                 node with a given IP address to be                                 excluded from allocation or we if we                                 would like to only do that for a single                                 index we would say hey I want to include                                 that node to build their shots to be                                 only for that index a no text to be only                                 allocated on the notes with the given                                 tags node                                                            because Finn elasticsearch can move the                                 shards around during the cluster and you                                 can control it it does it work                                 automatically but sometimes                                 you need to control you can also as I                                 said move shards and replicas around the                                 cluster on demand for example if you                                 would like to move the index m attacks                                 the shards                                                             node                                                                     following command we can also force                                 index allocation if some by for example                                 we've cancelled the allocation we want                                 to allocate it in the future we can                                 force the allocation by using the                                 command you see the allocate command and                                 now I have a question for you because                                 you'll see what my point of view is                                 enough just in a few seconds I would                                 like to ask you what do you think is                                 Apache Solr the winner no nah-uh once                                 again so who thinks that Apache solar                                 winds here more hands more hands more                                 hands okay why hahahaha okay come come                                 to me after the talk please and now who                                 thinks that elasticsearch is the winner                                 so you don't and the other people in the                                 audience don't see a clear winner here                                 so if you want to see my point of view I                                 think that we are all the winners here                                 there is no single single winner around                                 with when it comes to a purchase or or                                 elasticsearch we know at least from my                                 point of view as a consultant and a                                 software engineer that works on on                                 different products we tend to use the                                 right product for the that will do its                                 job and we don't say okay we will use                                 elastic search for now or oh no we throw                                 away elasticsearch and we use solar                                 that's not the case we choose and we                                 suggest to our clients that they should                                 use the software that will do its job in                                 in terms of                                 what it's supposed to be be done if you                                 need grouping could go for solar if you                                 need manageability go for elastic search                                 thank you very much if you want to                                 contact me here's my information thank                                 you once again for being here                                 you
YouTube URL: https://www.youtube.com/watch?v=IutoHcJT61k


