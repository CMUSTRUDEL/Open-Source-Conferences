Title: Berlin Buzzwords 2013: Ted Dunning - Multi-modal Recommendation Algorithms #bbuzz
Publication date: 2013-06-19
Playlist: Berlin Buzzwords 2013 #bbuzz
Description: 
	Classic collaborative filtering uses a single kind of behavior recorded as a relation between users and a single class of objects. The classic examples include people buying books, people watching movies or people listening to music.

In the real world, however, real people interact in many ways with many kinds of things. People even interact (abstractly) with intangible, abstract entities such as musical styles or different food cuisines. They say things. They go places. These many kinds of behavior give strong clues about what other things these people might like to do and recommendation engines should use these multi-modal cues to make better recommendations.

I will describe how the basic mathematical structure of recommendation engines can be extended to take account of these many kinds of recommendations using a "pivot-set" representation. This leads to an extremely straightforward outline for how to design a multi-modal recommendation algorithm.

Mathematics and algorithms are not enough, however. Real-world implementation is required.

Happily, multi-model recommendation algorithms can be implemented in a remarkably simple fashion. I will provide a complete outline of how this can be done using standard tools like Pig, Mahout and SolR. I will also provide concrete examples of how this works in the real world.

Read more:
https://2013.berlinbuzzwords.de/sessions/multi-modal-recommendation-algorithms

About Ted Dunning:
https://2013.berlinbuzzwords.de/users/teddunning

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	                              okay and so I've had some feedback about                               this title that it's a little bit                               ambiguous it was his master's topic so                               that that's the that's the first hint                               that maybe I should do that so I think I                               need to redefine the topic here a little                               bit what I mean is multiple kinds of                               behavior being observed in order to                               recommend multiple kinds of things so                                that's what I mean by multimodal                                yeah I also call this polyvalent                                recommendations but that's even worse                                than multimodal nobody understands that                                so what we're going to talk about today                                is what is this multimodal stuff I'm                                going to define a very simple                                recommendation architecture which                                actually I recommend I'm sorry excuse me                                that I think is very good for simple                                recommenders with one kind of behavior                                and one kind of recommendation but it                                extends very simply and very effectively                                to multiple kinds of behavior as input                                and multiple kinds of recommendation as                                output it also allows boolean narrowing                                of the recommendation set it allows                                geographical constraints and things like                                that and it has a very robust deployment                                architecture so we'll talk a little bit                                about that architecture I got to give                                you some scary math probably not so                                scary here but some people are excited                                by greet like Greek letters and then I                                want to talk about how we put all this                                multimodal stuff into a production                                environment and then some final thoughts                                just some logistics I'll repeat this at                                the end you can get to me all kinds of                                ways tweet to various addresses send me                                email you can find my private email on                                the internet everywhere or you can even                                subscribe to the mahute mailing list                                where this is all happening we're about                                to produce a                                                           a lot of activity this week a lot of bug                                fixing squashing these bugs a very                                impressive JIRA graph of how many bugs                                fixed versus reported                                you'll be able to get my slides from the                                buzz words website or sometime late                                tonight                                late tonight might be mean tomorrow                                on SlideShare and there's some suggested                                hashtags of course we're including the                                the buzzwords hashtag so recommendations                                is often called collaborative filtering                                but I think that it's better to just                                call it a social algorithm because                                collaborative filtering has this                                presumption of particular kinds of input                                often it assumes that the input is                                ratings and assumes that the desired                                output is to estimate ratings and things                                like that and I find that a very                                limiting and practically speaking an                                inaccurate characterization of what we                                really want to do with recommendations                                so let's call it just recommendations                                the basic input for the simplest kind of                                recommendations is a case where some                                people or users or machines or something                                actors interact with items                                it's a dyadic structure it's it's a very                                simple sort of thing and we want to                                suggest interactions that have not yet                                been observed we want to say here's                                things that this actor would like to do                                but otherwise might not be able to find                                so this is a very simple framework and                                inherently because we have very very                                many items and very many actors there                                are too many items for every interactor                                to interact with and so the data that we                                observe the data we have to work with is                                very sparse and that's what causes most                                of the difficulties in this field                                there's many examples that people have                                seen people buying books was one of the                                first public ones that's was Amazon of                                course web visitors reading music that                                was some of the first research things                                coming out of MIT Media Lab I've been                                able to construct a couple large systems                                like the music match recommendation                                system which involved people listening                                to music but there was the beginning of                                implicit behavior implicit behavior one                                kind where people skip the music or dot                                which was not necessarily the same as                                 selection activity                                 but it was an implicit behavioral                                 observation and we also built a very                                 large video recommender @vo but what I                                 want to talk about today is not so much                                 just ordinary recommendations but is                                 this multimodal things and the idea is                                 that we have lots of different kinds of                                 behavior especially as we move into                                 using recommendations with large                                 companies they see people act in many                                 ways they see them tweet they see them                                 use a credit card perhaps they see them                                 act on the web they see them as request                                 coupons or eventually act on the                                 recommendation so they have many kinds                                 of behavior and this question comes up                                 over and over again how do I merge these                                 different kinds of behavior even if it's                                 very simple if I rate a movie and then                                 watch it                                 how do those what do those mean is a                                 rating of five the same value as                                 watching a movie                                 well what about reading at three is that                                 a negative thing or positive thing well                                 how do we combine these behaviors into                                 coherent recommendations and that's the                                 the key crux of today's problem and                                 having a complete picture that is                                 integrated across all of these different                                 kinds of behaviors is exactly the goal                                 of what we want to build and there's                                 many many kinds of behavior even on a                                 very simple website and so let's let's                                 look first at how we build a normal                                 recommendation system oh we actually                                 have a balcony this is so exciting it's                                 just like a rock club isn't it look at                                 the speakers and things I'm not going to                                 jump into the crowd though so the basic                                 the basic idea of recommendations is we                                 look at history and we try to say what                                 are the things people would have done if                                 they just had a chance                                 and so with ordinary recommendations we                                 have users and we have items and they                                 interact in some single way or we                                 compress everything into a single way so                                 we have that history and history usually                                 looks kind of like a table or a log file                                 and it has codes for users that's the                                 user ID on the left                                 and his codes for things this is the raw                                 data and if we look here we see that                                 user                                                                     with thing number                                                       bottom with thing number                                               an inconvenient way to look at this so                                 we very often do what's called session                                 ization we rearrange the data so that                                 every users history is next to that                                 user's history so now it's much easier                                 to see that user                                                       and T                                                                    the element of time here but the                                 ordering is not so important the the                                 whole idea of cause and effect and                                 recommenders is is often backwards                                 anyway so we don't much care about the                                 time aspect but we see that T                                           were watched or interacted with by user                                                                                                    co-occurrences of T                                                    data T                                                                and T                                                                    in user twos history this idea of                                 co-occurrence is what we're after in                                 many ways the the co-occurrence is the                                 indicator that there's something                                 connecting two items now we can draw                                 this either as a matrix like this source                                 this long log file but we can draw it                                 very economically as this is a matrix                                 and if we were to use it as a matrix                                 then multiplying on the right by a                                 vector of things would give us a vector                                 of users so this this matrix translates                                 things to users and if we transpose the                                 matrix it translates users to things                                 here's a mathematically a very concise                                 way to do that we can we can talk about                                 multiplying by a history vector there                                 times our history matrix this is history                                 vector is for one user the user who's of                                 interest right now and a is the history                                 matrix of all users and so a H gives us                                 use                                 who do things in common with the items                                 @h that's easy and then if we want to                                 translate back to items this equation                                 says users who do this also do these                                 other things interact with these other                                 items so that's in a very tiny little                                 notation a traditional way that people                                 describe recommendation engines and we                                 can move the parentheses because it's                                 simple mathematics and so offline we can                                 compute this a transpose a and in fact a                                 transpose a is the co-occurrence matrix                                 itself if we if we multiply that out we                                 get a thing by thing matrix                                 we've now averaged over all the users                                 who exist and this thing by thing matrix                                 implicitly without having to do it                                 explicitly goes from things to users and                                 back to things but it encapsulates it it                                 allows us to do most of the computation                                 offline so it directly can boat converts                                 from things to things now there's a                                 problem with raw co-occurrence as we see                                 it there the shape of the computation is                                 right but the details are wrong the                                 details are wrong because there are                                 things like the welcoming message at vo                                 the CEO would say hello thank you for                                 coming and everybody had to watch this                                 video which meant that it could with                                 everything and so raw co-occurrence                                 would cause that video to be recommended                                 to everybody again and again it was                                 horrible and so what we want to find                                 here is not just co-occurrence we want                                 to find the idea of anomalous                                 co-occurrence the co-occurrence that is                                 extraordinary we see the general                                 patterns everybody watches this                                 everybody steps into an elevator at some                                 time in their life and hears Beatles                                 music these are uninteresting                                 occurrences therefore the co-occurrence                                 is with those uninteresting events is                                 also uninteresting and so we need to                                 find just the anomalous things and the                                 way we do that let's look at t                                         they Co occurred twice                                 but we can look at that in more detail                                 we can take just that one t                                     co-occurrence and we can say how                                 interesting is that                                 so we look at how often t                                            occurred but also how often t                                           was something that is not d                                      conversely how often did t                                           with something that is not d                                           how often did not t                                                    and that gives us a little two-by-two                                 matrix and if we look at a bunch of                                 these matrices in the upper left is an                                 example where a occurs about                                           time over all regardless of A or B or B                                 or not be occurring you can see it's                                 about                                                                    is horizontal rows B also occurs about                                                                                                       the cases of a we see that B occurs                                 about                                                                  percent of the time this is just not                                 very different it's about the same as                                 the occurrence in general so we would                                 say that's not very interesting we have                                 lots of data and it's just a boring                                 co-occurrence if we move to the rubber                                 right then we have a and B occurred once                                 and only ever together a hundred percent                                 of the time well this is not very                                 interesting either because we only have                                 three data points so anything could have                                 happened I mean if you have one data                                 point anything that did co-occur had to                                 co-occur even at                                                         exciting it is a little bit more                                 exciting than something that we have we                                 have enough data to say it is truly                                 boring the one in the upper right we                                 just can't say is it exciting or boring                                 or not we don't know yet in the lower                                 left is a similar case where a and B                                 occurred together but they are                                 relatively rare so we have at least a                                 coincidence at least the beginning of                                 anomaly it's a little bit more                                 interesting but not very I mean among                                 the millions of things that Co occur                                 that probably isn't going to make the                                 list but it is                                 interesting then the upper right and                                 then down in the lower the lower right                                 we have a case where a and b co occur                                 ten times out of ten thousand a hundred                                 thousand roughly samples now that begins                                 to be very interesting because they                                 never occur separately they always occur                                 together and so we have something that                                 we can score and there's a way to put a                                 mathematical score on these that gives                                 us this very very nice intuitive                                 ordering it matches our intuitions very                                 nicely and happily it's it's a very very                                 simple formula for this sort of thing                                 and it's a surprising thing it it was                                 developed many years ago but it has a                                 nice robustness to these cases of                                 coincidence like the one out of three                                 coincidence sort of things it doesn't                                 over represent those hundred percent but                                 boring cases and it's been tested                                 thousands of times now and in general                                 it's one of the top few methods in in                                 and most of these tests in a variety of                                 different things in finding structure                                 and language and identifying language in                                 finding structure in genomes it's been                                 tested in all of these many many                                 different applications and it happens to                                 be very robust and and gives us nice                                 intuitive things and so it's called log                                 likelihood ratio it's a generalized log                                 likelihood ratio and the square root of                                 that is usually what we want and so the                                 idea is that it is mutual information                                 that's the entropy of the matrix minus                                 the entropy of the row sums and the                                 column sums and if we take the square                                 root of that we have a very nice scale                                 that is very similar to standard                                 deviations you could find the exact code                                 the it's there's more lines of code than                                 this because it has test cases but that                                 bitly link has exactly the the code in                                 our to do this mahute also has this so                                 this is the crux of how to do this                                 co-occurrence to recommendations and the                                 idea is that we take whatever is                                 significant in these co-occurrences and                                 we reduce it to a binary case we only                                 retain ones and zeros                                 once where we observe anomalous                                 co-occurrence zeros everywhere else and                                 we don't even store the zeros okay so                                 this is so far so good we can build                                 recommendation systems like this each                                 row of that reduced co-occurrence matrix                                 the ones are what we call the indicators                                 for that row and we can we can use those                                 indicators whenever they appear in the                                 single users history to build up a score                                 of which things we indicate which ones                                 we recommend it's very simple deploy you                                 can actually do this in a search engine                                 the the elements the non-zero elements                                 in that row can become tokens in a field                                 in solar or already search engine of                                 choice and you can build a                                 recommendation engine because the native                                 weighting of the search engine works                                 very well to weight these ones in Euros                                 and the search engine itself is                                 implementing the sparse matrix multiply                                 that we had earlier the a transpose a                                 times the history so that's a really                                 nice way to build a recommendation                                 engine and it's built into mahute it has                                 some very very nice characteristics it                                 has long history lots of people use it                                 dozens and dozens of companies use it                                 there's there's good case studies of it                                 overstock.com recently had a yet another                                 case there are commercial offerings that                                 use very similar things like me ryx of a                                 committer started that company you can                                 do a lot of this it's a proven                                 track-record it very often is very                                 difficult to beat even with very                                 elaborate mathematical models and it's                                 very well socialized meaning you can go                                 ask somebody about it and get good                                 answers so that's all wonderful it                                 sounds like that's the end of the talk                                 but it's only                                                          to talk about something else too let's                                 talk about what's wrong with it and the                                 big big problem here is people do more                                 than one kind of thing and that more                                 than one kind of thing has more than one                                 kind of meaning more than one kind of                                 implication                                 than one kind of strength of the                                 recommendations and so we have this                                 problem there how do we how do we                                 combine these different kinds of                                 behaviors and the basic idea is that we                                 don't do co-occurrence anymore we do                                 cross occurrence when one kind of                                 behavior co-occurred with another kind                                 of behavior so we cross from one set to                                 another and we get cross recommendation                                 the usual response that I get when I say                                 let's do cross currents let's do cross                                 recommendation is very succinct people                                 say hey because there is no                                 socialization around this kind of                                 solution yet so if we take the original                                 formula a transpose a times H this is                                 dyadic learning from users and things we                                 have a dyadic set but why not have                                 triadic why not have users and type one                                 things type two things                                 why not P Attic things and in particular                                 why not cross learning and the way we do                                 cross learning is we replace one of the                                 A's with a be a different kind of                                 history mechanism that a represents                                 interactions with things of type one and                                 B with type two now I have to admit that                                 the first time I was talking and I said                                 gee by symmetry we could do this and it                                 would of course be uninteresting and one                                 of the people in the audience said why I                                 go well it's obvious because that that's                                 the way I pronounce I don't know a lot                                 of people do that pronunciation and he                                 goes why is it obvious try it you'll see                                 he tried it and it works really well so                                 I've changed my stop talk a little bit                                 it's no longer obvious and in fact I                                 think it's a very clever idea I'm glad I                                 wrote that down I just can't take credit                                 for it because I said it was stupid and                                 so let's take an example here users                                 inter queries in the a matrix and then                                 the term the things will be the words                                 that they type into the queries and the                                 B matrix will be videos that they view                                 so we have users and we have videos to                                 different kinds of behavior                                 two different kinds of things and a                                 transpose a will give us query                                 recommendations did you mean to ask for                                 such and so you type in a query and it                                 gives you back alternative query words                                 that's nice B transpose a will give us                                 video recommendation you might like                                 these videos too or at the bottom of the                                 video page you can put those down but B                                 transpose a is a different beast                                 it takes in search terms and gives you                                 back videos but it does it without                                 metadata it never indexed any of the                                 text associated with the videos which                                 usually is garbage anyway so we don't                                 need to index it because it doesn't help                                 but this really does produce a very nice                                 thing that acts like a search engine and                                 it's a wonderful thing                                 first we're abusing the search engine to                                 create a recommendation engine and then                                 we're abusing the recommendation engine                                 to recreate a search engine that's a                                 wonderful tale swallowing exercise                                 here's an example this is I'm not going                                 to talk too much about this because I                                 want to go to the next generation beyond                                 this we built one of these at vo and we                                 put in a query into a million videos                                 that we knew had no videos by Paco de                                 Lucia at least the we could find Paco de                                 Lucia is a guitarist of Spanish or                                 Italian I'm not sure I think Spanish                                 guitarist and the conventional metadata                                 search brings back on verse de Paco                                 because it matches theme Paco or must be                                 the same that's what the metadata says                                 the recommendation search Praveen brings                                 back much better results here's the                                 traditional search it's all hombres de                                 Paco which was Spanish daytime                                 television that somebody had just                                 flooded the system with these things and                                 here's the recommendation search is                                 concierto Ciudad classical guitar Co d                                 which is a flamenco dance group and then                                 we sing to Inigo playing another Spanish                                 classical bit of music                                 van Halen doing a little tiny classical                                 guitar riff during a concert and then                                 somebody in the dorm room doing                                 freestyle flamenco me                                 I can't remember the actual piece but I                                 can do something that sounds like it so                                 these are all excellent hits and it went                                 down about                                                         stopped it didn't produce anything that                                 was garbage produced everything that was                                 interesting that we could find in the in                                 the test collection and and we even                                 prototyped and tested just a little bit                                 this alternative example where we put a                                 little icon on the website that had                                 nothing behind it it linked to another                                 page but that page was populated by                                 recommendations for the people who click                                 on that link so people who click on the                                 link are the ones who want to see the                                 videos behind the link which we don't                                 know what they are but after                                           had done this we knew that we would show                                 what those                                                              first person would see what the twenty                                 people before them would like to see and                                 it made people happy even though we had                                 no idea necessarily what should be                                 behind the video behind the link this                                 gave us a self-organizing website that                                 matched people's expectations it was                                 hilarious                                 just five minutes after you put up a                                 thing that says fast cars all of the                                 teenage boys who had clicked on that had                                 taught it that you want to see girls in                                 bikinis and fast cars behind it and it                                 made them quite happy and so this is a                                 great example of how you can do cross                                 recommendation get nice things but what                                 we want to do here is full-on multimodal                                 multiple kinds of input not just from                                 one behavior to the same behavior not                                 just from one behavior to another kind                                 of behavior we want to go beyond that so                                 we want to do better we want to start                                 with this single kind of history that we                                 had users and things and we want to                                 combine it into an adjoint matrix of                                 users and things of type one users and                                 things of type two now instead of doing                                 a and B we're going to put this all in                                 the same matrix later we'll be able to                                 pull it apart for computational                                 convenience and we might even have the                                 same type of things or not or just have                                 different types of                                 whatever sort of distinction we want to                                 draw there is fine now if we just                                 elaborate the same thing that we did                                 before with the a transpose a idea                                 except now with this generalized idea of                                 multiple kinds of behavior it follows                                 through with just a little bit of math                                 down to this lower form here that we                                 could have behavior history h                                            h                                                           recommendation matrices inside here in                                 order to get recommendations for type                                   now we could recommend for type                                       but the idea here is that things of type                                                                                                        things of type                                                          we observe so we're gonna just keep the                                 r                                                             conventional recommendation matrix a                                 transpose a where a is a                                               have a cross recommendation a                                   transpose a                                                        system so it's nice that the the                                 previous forms reappear and so the                                 somewhere here is that we just multiply                                 multiple kinds of behavior into the same                                 thing and the waiting let's these                                 integrate cleanly and so the input is                                 multiple kinds of behavior the output is                                 recommendations for one kind of behavior                                 with different kinds of history and                                 cross recommendation is a special case                                 there now we can do this again without                                 the scary math part without the big                                 matrices suppose we have user                                 transactions say credit card                                 transactions these are user ID in the                                 Merchant ID the industry code the amount                                 possible descriptions of the merchant                                 may be its cuisine if it's a restaurant                                 and so on we might have offers so if I                                 have one of these things                                 I might get special coupons that I would                                 get as offers and if I just move the                                 coupons into my little coupon wallet                                 then I've got a second kind of action                                 and there I have the user ID in the                                 offer ID                                 and various metadata about the offer                                 itself and from these I can derive extra                                 information about the user extra                                 information about the merchants but more                                 importantly I can do cross                                 recommendation between merchant                                 transactions and offers and back and                                 forth and so I just find different kind                                 of indicators the anomalous indicators                                 of each kind and so in the search engine                                 goes all of the information about a                                 particular merchant or a particular                                 offer plus indicators so if we're doing                                 recommendations for restaurants we might                                 have indicators of text that's the                                 next-to-last one there the text would be                                 keywords in the history of restaurant                                 describing words with transactions I've                                 done in the past so a Chinese restaurant                                 for instance might have as an indicator                                 word such one if I have done                                 transactions that have such one in the                                 word in the description of those                                 merchants then that might cause me to be                                 recommended Chinese restaurants                                 indicator offers if I previously                                 redeemed offers similar to the one here                                 those might become indicators industries                                 if I do a lot of business with Airlines                                 Airlines might have indicators there in                                 these and in particular if I want to do                                 geographical recommendations I might                                 just say people who are in this region                                 should be recommended this particular                                 offer and so the query then becomes                                 that's the H on the right side what's                                 the current location of the user and the                                 recent merchant descriptions and the                                 recent merchant IDs the recent SiC codes                                 the recent accepted offers and of course                                 a one say always give me local best                                 restaurants so you can see how to build                                 this this is not hard at this point is                                 it you have to co-occurrence one                                 co-occurrence one cross occurrence                                 analysis that builds your indicators you                                 throw those into a search engine                                 and you provide these composite                                 synthetic queries it's actually very                                 easy to build you can you can use                                 co-occurrence jobs from mahute they they                                 can run sequentially they can run on a                                 MapReduce setting of course with my Red                                 Hat I like to run them on map bar you                                 drive those directly into a MapReduce                                 that does solar indexing and then you                                 deploy it with a web tier that does                                 solar search the solar can can access                                 charge that you pull out or directly on                                 the cluster and the solar engine                                 directly does all of the waiting needed                                 to combine these data together and                                 should go out a slide and logo and                                 things like that but a customer of ours                                 has actually built this this cross                                 recommendation engine for restaurants                                 it's available on mobile phones it's                                 called my offers and an interesting                                 historical aspect is they started with a                                 pre scoring sort of approach that a lot                                 of people like it took                                                  for a very limited subset of users and                                 took eight hours to move all those                                 pre-scored recommendations to a database                                 that they already had attached to their                                 website when they moved to the                                 co-occurrence cross the current style                                 processing on ten times as much data                                 went down to under three hours and the                                 export time to solar dropped to under                                 three minutes the recommendation                                 generation actually took much less time                                 and was more accurate they also in                                 parallel were trying to build a much                                 more advanced decomposition based                                 recommendation engine they fielded that                                 in a test setting and it was unable to                                 compete because it could not integrate                                 different kinds of information nearly as                                 easily as this very simple system and so                                 it's it's not unusual to find that these                                 simple systems built this way are more                                 effective than more complex systems so                                 as promised places to ping me hash tags                                 by the way we're hiring and so I've                                 arranged to have extra time here we have                                 ten plus minutes it's your turn                                 do we have any question                                 so would anybody like to make comments                                 does anybody here want to build a                                 recommendation engine I imagine things                                 that will talk thank here                                 you
YouTube URL: https://www.youtube.com/watch?v=fWR1T2pY08Y


