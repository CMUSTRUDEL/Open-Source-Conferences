Title: Berlin Buzzwords 2016: Thomas Fricke - Shaping Applications for Docker, CoreOS, Kubernetes & Co.
Publication date: 2016-06-11
Playlist: Berlin Buzzwords 2016 #bbuzz
Description: 
	The buzz around containers has not yet reached it climax. Rolling out big scale heterogeneous applications has just started. This talk is about real customer projects, which use docker to deploy applications in a rapidly environment changing by Kubernetes and CoreOS. We followed a very strict approach, separating persistent and stateless applications and run everything in small units orchestrated by Kubernetes. 

With our own tools we could create descriptions of environments very rapidly, creating full complex environments with a single command. Examples in Java, Python and Ruby are shown. Security has been addressed to pass an extensive security audit. Using the latest feature of systemd on Linux on CoreOS, we could move the configuration management into the Kubernetes domain.

Read more:
https://2016.berlinbuzzwords.de/session/shaping-applications-docker-coreos-kubernetes-and-co

About Thomas Fricke:
https://2016.berlinbuzzwords.de/users/thomas-fricke

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	                              I was starving view it okay hello                               everybody and yeah I hope at this one of                               the confidence I bring you as a buzz of                               the next year so in the last session I                               noticed nothing which I talk about it                               all of in three years some tools are                               only two years and one year so this                               might be the next bus that's me we are                               from a no code berlin-based company I'm                                the CTO and I'm doing system automation                                DevOps we all do the cloud database and                                same stuff not really big data but we                                are working in the cloud and building                                clothes for customers these are our                                typical requests so normally we work for                                core as for people who really have                                problems with all these new technology                                we present and do consulting on that so                                typically we fix problems in co benitez                                and then find stuff somewhere in the                                linux system so yeah everything we                                republish is pushed up stream so we                                found a bug in the Google SSH                                implementation and this is a discussion                                how we pushed it upstream so it's a                                security bug and public now typical                                things some of the epically applications                                of breaking when we find it's not an                                application problem the systemd problem                                no it's not a system d problem it's a                                general problem know something in the                                kernel buffer is too small we fix it in                                the linux kernel and push the fixed to                                the upstream so this is our daily                                business and yep the agenda of this talk                                is what can we do with containers beyond                                talker and as I've heard a lot of wrong                                things about what-what containerization                                is                                I edit one sheet containers versus                                virtualization so this is not the same                                and should not be mixed at least if you                                want to do real stuff in production                                environments and I will talk a little                                bit about communities chorus is our                                partners they are based in the Bay Area                                make a new version of the Linux                                operating system which is explicitly                                dedicated to run containers only so they                                skipped everything from tech edge                                management to configuration management                                and have containers only then I will                                show you what you should start if you                                plan to put an application into a micro                                service so containerization is done a                                lot at the moment some people do it in                                development some people do it only in                                production for some reason and I don't                                know why people didn't get it into a                                full deployment pipeline because the                                diploma pipeline itself is a complete                                complexity I will show you what you have                                to do if you want to migrate from the                                typical virtual machine or operating                                system starpoint we have a case study                                where it exactly did this is this image                                this is a berlin-based subsidiary of dr.                                telecom they have been buzzed at Mobile                                World corn in Barcelona as a so-called                                what's up killer I don't know if it's                                true but they are doing serious business                                and they are using all the stake in                                production then I will summarize it what                                what is the success story what have been                                the real challenges and of course what's                                missing in the circle system so this is                                the table virtualization versus                                containerization so the containers are                                in the middle and you see it's                                completely different on the isolation                                level and typically you can run                                containers only on the Linux operating                                system some people say no we have a                                native                                native taco on mac OS or on Windows no                                they inject a small hypervisor which is                                too small to notice under normal                                conditions but it is not native only can                                one native in on a Linux system because                                it makes heavily use of Linux namespaces                                and therefore you cannot run form Carol                                colonel so you have to use the same                                kernel as a the hosting system you don't                                need to emulate devices you can simply                                use a native devices which makes it big                                different if you have for example fast                                Network software-defined Network works                                well and without any performance losses                                you don't need this video thing which                                 slows down your big big load                                 applications and you simply have                                 everything native and one thing is the                                 root isolation refers very poor and the                                 older versions of Dhaka is no                                 implemented as a user name space or the                                 root user inside your container is not                                 the root user outside the container                                 which is a security feature the only                                 thing which I have marked red is if you                                 have a hard crypto or your private keys                                 inside the CPU all you have a CPU cache                                 it will be easier than on virtualization                                 because you only have to avoid one mm OH                                 instead of                                                              one container to another one but there                                 has not been a proof of concept I did                                 not have the time to do it but all the                                 proof of concepts you see for                                 virtualization should also work with                                 containers so the next big thing if you                                 believe in google cloud computing and                                 google's and we have partnered with                                 google so this is small as a disclaimer                                 is cubanita xin KU vanitas is something                                 you know you want to address it it's a                                 container orchestration                                 framework it's made simple you simply                                 can say a start container you have                                 replication controllers where you can                                 start containers at large scale with one                                 single command line is a group control                                 command and you can run a lot of things                                 go Benitez is enzmann or governor now it                                 is the same route from linguistically as                                 in cabinets a cybernetic and the main                                 goal is that you manage applications you                                 don't want to manage nodes this is a                                 problem which you always have if you                                 have developers and testers you should                                 not be backed by by setting up notes                                 installing help disks installing                                    disks for for something and and then one                                 at you you don't have to care about it                                 you only have to care about your                                 application so this is a big picture                                 here is a simple API which can be a                                 command-line interfaces cube control and                                 on the other side you have the cubelets                                 on your note and all the things in the                                 middle is done that your applications                                 run seamlessly they have a key value                                 stores this is the most important things                                 as a second form above it ctc demon and                                 the EGC demon is a distributed key value                                 store and is guaranteeing that the the                                 state is unique in the entire cluster                                 but you can forget all the things you                                 have simply a client communicating to an                                 API and it's communicating to the                                 container cluster and it's run or nearly                                 every linux distribution it's running on                                 a bunt                                                                  and you can run it on every major the                                 newer distribution even the older ones                                 have it now but there are some                                 distributions which have been                                 lined to run containers only one of them                                 is Korres the mission statement is they                                 want to make the internet secure again                                 which means that they need a lot of                                 stuff to secure the applications the                                 hardware containers and everything in                                 between and this is a typical stack the                                 hardware is at the very bottom so you                                 can ensure that the hardware has a                                 trusted platform module you can start a                                 secure signed colonel then you have an                                 interim yours integrity chorus chorus is                                 a kind of immutable operating system so                                 you cannot change the system disks of                                 course this is a feature so you cannot                                 install software the ordinary a you have                                 to use a container one time and besides                                 doc Isaiah is rocket which is another                                 container one time which is not even a                                 year old I think and on top of that you                                 have the container management software                                 rocket could be replaced if you don't                                 trust everything on this picture by dr.                                 sources as I met rocket mall as                                 comfortable to Dhaka even the                                 repositories or registries hole they                                 call it are the same and this is the                                 entire ecosystem selves is a complete                                 sheet of new buzz words with symbols I                                 mentioned core as rocket they have clear                                 this is a registry a registry is where                                 you put your images so docker hub is the                                 most known registry but as a public                                 registry Claire which is has implemented                                 the feature that it scans every                                 container against the cve records so it                                 scans every container for security bugs                                 this is important for secure for for                                 container lifecycle management because                                 if you look into the docker hub                                 and put the things into clay of you find                                 that sixty percent of the images yet                                 have the ghost bug installed so this is                                 a quite a heavy back in the DNS system                                 of the G lipsy and can be can be                                 exploited from outside and sixty percent                                 of buggy images on a on the registry it                                 creates a lot of distrust on the entire                                 ecosystem so the recommendation is not                                 to use under no circumstances some                                 unknown images from any registry but we                                 built them from the document which is                                 also all the ways possible it's a little                                 bit time consuming but you can then                                 check that everything is up to date                                 don't use unknown images you would not                                 start an unknown exer on your system if                                 you would use this crappy operating                                 system and you should not use unknown                                 control containers on your on in your                                 infrastructure or on your laptop I                                 mentioned the etcd this is a distributed                                 key value store it's very similar I                                 think like the CAF car key value store                                 and has the same philosophy in mind so                                 I'm not don't ask me about Kafka's all                                 this is a very simple key value store                                 then you have canal canal is a joint                                 project less than four weeks old there                                 was a OpenStack project with this little                                 cap this is calico and there was a                                 network layer flannel directly building                                 to co by natives and they merged into                                 canal so this is open stack power for                                 networking joined with the simplicity of                                 Leonard I mention cubanita this is a                                 sign of tomatoes tomatoes is also from                                 Berlin so soundcloud started it and                                 chorus took over so they are doing it                                 now on their own stack and                                 yeah there is another thing a little                                 thing openstack can be run in                                 Combinator's if you use call s on your                                 bare metal hardware it takes                                            not                                                                   complete olmstead cluster from the                                 container so this project doesn't even                                 have a logo with the                                                     stack inside technology tectonic which                                 is a cuales project and last week they                                 announced toes which is a storage                                 product so they address the problem of                                 these two beauties storage and data                                 centers and toes so new it does not even                                 have a logo no so this was a bad thing                                 and now what real world applications can                                 you do this coordinators and what you                                 have to address in the real world and as                                 you know almost no projects starts in                                 greenfield even even if you are start up                                 or spin off of a big company you have                                 something to respect you always have                                 some kind of technical depth the                                 environments are not made for                                 microservices everywhere at the moment                                 and this means you have to do something                                 that your application is really a micro                                 service that through that your                                 application fits into containers I                                 assume you have several layers of an                                 application normally you think you have                                 a three-tier system but you actually                                 have at minimum five or even more tier                                 system and starting from the top                                 normally you see something for web                                 application which the load balancer and                                 then you have your web page the web                                 portal which looks to the outside which                                 is completely state leasing then you                                 have some cash like memcache or here it                                 is and then you have the business layer                                 where the web where main applications                                 are notifications user profile                                 everything which is processed which                                 makes your business logic                                 and then you have something which you                                 really care about this is your storage                                 layer so so you're persistent state                                 where keeps your state storage the SQL                                 is a no secretly bees but also are the                                 messaging systems or doesn't matter if                                 it is rabbitmq or Kafka you have some                                 stayed inside here and you should if you                                 start designing microservices separate                                 this very clear for carefully so only                                 the upper four layers are completely                                 stateless you should not have a database                                 in your web may nap this is something                                 the lamp stack tries to to force on you                                 that you have a database and apache and                                 PHP applications the same thing this is                                 on scale this is fatal you cannot really                                 use it the cash can be reconstructed so                                 I consider their the ready sketch or any                                 other case more or less I stateless the                                 web portal does only view to the outside                                 world and should be stateless the load                                 balancer should be stateless and this is                                 a little bit contradiction of some old                                 philosophies you need if we will have                                 egb servers where the session was so                                 expensive that you had to stick a user                                 to a specially gb server this is not a                                 good choice anymore so the result of the                                 thing is you should try to make                                 everything which changes rapidly so your                                 application if you want to do deployment                                 every every                                                      stateless and you should be should care                                 about things in your database if you are                                 running it in a cloud amazon google                                 cloud whatever you should use at least                                 where it is possible the storage                                 services of the cloud provider this                                 makes much less effort                                 then then put in setting up your own                                 let's say mon woody be server and use it                                 in in production but if for some reason                                 you have a very special database if you                                 need some tweaked performance or if you                                 have to run your own MongoDB because the                                 Mon would be in your cloud providers                                 learn is too expensive or you need                                 special features have your own thing you                                 can put it into dedicated machines run                                 it under coburn it is with without                                 replicating all the the application on                                 top of it and run it as a container in a                                 replication controller with a                                 replication number of one the                                 disadvantage of these databases is every                                 database has its own way of replicating                                 data therefore you have to care about                                 every database individually it's a                                 little bit of work so our recommendation                                 first recommendation will shrink the                                 number of databases to the minimum there                                 is no real need why you should have a                                 postgres ending mysql and a lot of other                                 sequel databases in parallel so is                                 always a good advice to minimize the                                 external dependencies yeah and what it                                 is what you see here is you have                                 normally a heterogeneous environment                                 every real application has different                                 things different messaging service so                                 you have normally a full stack of                                 different things and you can isolate                                 them in different containers what you                                 also should think about that docker is                                 if you really look into it it's a kind                                 of stacked archive and you can use this                                 archive as your standard deployment                                 format there is no need to do rpms and                                 configuration management in parallel to                                 two containers microservices the only                                 people who want configuration management                                 in containers are from company                                 we want to use make you use their tools                                 and this is not necessary so think about                                 your deployment chain automation if you                                 have not done many things in this area                                 where you say I want to automate my                                 deployment probably containers will not                                 solve your problem and will it there's                                 no need that you at containers if you                                 did not do this single right because it                                 then you have another toy to play and do                                 to fiddle with and this does not make                                 your life easier you should first at                                 least plan to run everything in an                                 automated system so I mentioned these                                 things already migration what is a                                 typical thing of a migration normally                                 dr. and all the other recommend we have                                 only a single process in a container but                                 what if your application consists of a                                 dozen process or more than one then both                                 darker and also coronitas have a concept                                 of aggregating containers that they can                                 share the network that they have common                                 file system and that they have the same                                 fate so they are created together they                                 are running on the same node which is a                                 guarantee they are terminated together                                 they have a singer network address end                                 as interestingly they can share volumes                                 so everything and in volumes also means                                 for example circles you can expose an                                 HDFS filesystem as a socket to a                                 different container this way and so you                                 change your via virtual machine cluster                                 into pots running into Combinator's and                                 then important I started again you                                 separate the kettle                                 your pets so the stateless containers                                 from your databases and your                                 configuration management is not                                 completely gone away but you should                                 separate built time and one time that                                 you simply build containers on a machine                                 test them automatically push them to a                                 repository where they are scanned for                                 security packs and then you can roll                                 them out automatically in production so                                 if you have stayed you have to care                                 about it but the general mindset should                                 be that everything should be an                                 ephemeral deployment unit even the                                 database could be ephemeral but the                                 storage below together with replication                                 guarantees that you do not lose your                                 data okay you can more or less if you if                                 everything is stateless internally you                                 talk talk with REST API and you can                                 connect all the front ends and to the                                 rest of the application and the                                 deployment pipeline takes care of that                                 you can give environment variables and                                 configurations like database password is                                 secrets into the into the container so                                 normally you have a big problem if you                                 want to run production with different                                 database passwords then testing and                                 development co benitez has a concept of                                 a secret where you simply can put a                                 secret into the coup benitez classes                                 completely encrypted it will be                                 encrypted in the running container and                                 it will expose will be exposed as a file                                 system but it is not written to hardest                                 it sits on a run disk so that you never                                 expose your your passwords to a file                                 system outside                                 you're your crew benitez clusterware                                 whether somebody could find it in a                                 casual something else yeah you could use                                 normal logging and for for large-scale                                 things we recommend primito s and this                                 is because normally you need / meters is                                 a very simple monitoring system you                                 cannot put very sophisticated things you                                 do only any values but with a huge                                 number of containers it's a sec exactly                                 what you want so I already mentioned                                 this and again this is a desired                                 architecture so try in the first step to                                 identify all your applications that they                                 fit into this picture and make them                                 available as stateless containers case                                 study here is emo illiteracy new                                 messaging service it's bound to your                                 telephone number you can take a normal                                 phone call in on your one completely                                 different device it can be a web web RTC                                 device so in your browser you can use it                                 on on your phone you can use it on an                                 iPad or wherever and it's coming it's                                 going productive this summer and will be                                 rolled out in different european                                 countries this is a telecom subsidiary                                 using google technology in the Amazon                                 Cloud and it's kind of you see                                 everything is spread best practice if                                 you have the main parts open source so                                 what did we do with the application so                                 we had found every programming language                                 we heard about it so Java is very                                 popular pison is very popular no chairs                                 will be they have different challenges                                 easy thing we found was Java with spring                                 boot and why is it so easy because                                 spring boot has a unique                                 a that you can overwrite the                                 properties in property files on the                                 command line of the Java Virtual Machine                                 so you can definitely pass parameters                                 quite easily from the KU Benitez                                 environment to to Java Python also works                                 well packaging box and yeah a little bit                                 hard was Ruby because the Ruby gems have                                 never problems at you they always try to                                 install a compiler on the system so we                                 are a bit fighting with it but there is                                 a solution on the horizon that you can                                 use traveling would be to create a                                 static binary that you can run without                                 even having an operating system in a                                 container so the ruby version hillis is                                 a vm stuff so it bloats your containers                                 it's never up to date installed a lot of                                 things and we try to fiddle around with                                 this so what did we learn so we are                                 preparing for security audit and in the                                 telecom environment we have to do this                                 anyway separation is very easy to do we                                 had a little bit learning with daca                                 files so effectively dhaka creates a new                                 image for every line in blocker file if                                 you don't do it right then you wait                                 forever until a docker file build is                                 done so it's kind of inheritance if you                                 do it right then you only change the                                 last line in your application and then                                 it's quite fast if you do it wrong you                                 have to install the entire operating                                 system and and this takes forever and k                                 io is a commercial version of clays or                                 clay is completely open so this is a                                 registry scanning for the ve against                                 easy database for security and this is                                 is good for a container lifecycle                                 monitoring if you don't have container                                 lives or any lifecycle monitoring for                                 your applications and you probably have                                 some security problems                                 okay outcome walls we have Noah scalable                                 and Cuba fide application and this was a                                 service architecture they always want                                 way I wanted to have and in now using it                                 in a new project it was quite quite easy                                 to enforce it and to implement it                                 everything in standardized yeah we have                                 used everything as if we had influenced                                 enough to use cloud providers databases                                 and everything seems to work for                                 business value we are deploying now                                 quite fast or update takes only minutes                                 and not ours and we don't have to call                                 anybody so at the moment we are passing                                 it to the very small operations team                                 it's simple and yeah I managed all this                                 hey I country us again about                                 conformational let's time war let's talk                                 about what's what's missing oh you                                 always want to have leaner containers                                 and lean makes in a container normally                                 you have parts of the operating system                                 so this is a kind of heritage of the                                 thinking that it was intended like a                                 veteran machine but you don't actually                                 need an operating system in a container                                 you can most people don't even notice                                 that they you can define a container                                 from scratch and if you can create a                                 static binary which does all your                                 requests and you can have a single                                 application without even at G lipsy                                 inside the container we have an example                                 of how to do with this goal it's quite                                 quite straightforward with Ruby                                 straightforward if you fight with all                                 the games and yeah this is where we                                 intend to go and if you don't have plans                                 of the operating system the containers                                 containers are more secure than was also                                 it's quite hard to imagine                                 something where you have a problem where                                 only one single static process as a                                 security problem in the container yeah                                 yeah oh one last thing about the data                                 bases best practice if you do everything                                 automatically you should notice that                                 some frameworks and false database                                 integrations so you have to handle it                                 you have to tell it to the team there is                                 no rollback in this philosophy so the                                 mindset always rolls forward this                                 implies that you have to test it                                 carefully with a right database scheme                                 if you are on our SQL side and you have                                 to look how how to get it there are                                 solutions behind it for example use                                 different databases so great I o is an                                 sequel database based on elastic search                                 which is very simple and could handle it                                 without having a scheme inside the                                 actual data so yeah container focus                                 languages I would recommend yes and does                                 it really scale actually we will see i                                 think we will scale it by country                                 starting in eastern europe of smaller                                 countries and roll it out if it is                                 successful in germany you have to be a                                 little bit careful about single tenant                                 and multi-talent use cases because if                                 you run some if you have private keys                                 involved then running an application                                 from different teams or different                                 countries on the same hardware could be                                 a leak but if you really need it and                                 want to use rocket rocket has in unique                                 feature if you want to improve the                                 isolation rocket can even like the                                 versions for other operating systems can                                 start a tiny virtual machine which gives                                 you another level of isolation yeah and                                 the good thing is if you don't trust all                                 these cloud providers you can't run it                                 on your own hardware this is our example                                 for first con so we had four raspberry                                 PI's and the only problem was to get it                                 into an airplane and explain to the                                 people that this is not a time bump and                                 communities is terribly slow but it                                 works on raspberry PI's you can look it                                 up if you want to run it in your data                                 center there is there are even data                                 center providers at the moment who                                 offering in Europe koo benitez on bare                                 metal we can connect value with them and                                 you have to implement providers for                                 storage which is quite quite easy                                 because you can use I scalzi and sings                                 Lexus network network very depends on                                 your local environment firewall provide                                 us examples for firewall providers where                                 you could use I think that zalando has                                 an example how to configure f                                          queuing system and then it works but you                                 have to do it it will not give you the                                 same comfort as in the clouds if you                                 don't implement these providers so if                                 you want to have more from us we have a                                 github account where we publish                                 everything we give trainings we do quite                                 regular blocks on everything which is                                 open source related in our company and                                 the world and yeah if you want to test                                 it without hassle and and quite easily                                 you can easily use it on the Google                                 cloud platform and with these links you                                 gave get some                                                           and computing time and you can get have                                 even                                                                     influence where you run it later so most                                 customers of us are using it in the                                 Amazon Cloud which is a little bit set                                 for google but they don't have a data                                 center in germany and most customers                                 require a data center in germany by law                                 or by the internal politics and maybe we                                 will                                 have silax that we see a data center we                                 will cloud data center in Germany so                                 thank you very much and if you have                                 questions please eat two things Thomas                                 do we have questions yeah thanks for the                                 talk could you explain hurts a little                                 bit how you in the best case handle                                 configuration for the containers so                                 let's say for example a passport or a                                 private key which you need inside the                                 containers you should not bake it into                                 the container I assume but where does it                                 come from it comes from the cubanita                                 secrets so this is a special concept and                                 you should not put it into the                                 configuration itself you shouldn't put                                 it into an environment variable you                                 should put it in a way in any city in                                 the thicket in its cubanita secret is                                 yummo file you can have a different                                 secret with the same name in testing and                                 production and then you pass a secret                                 and get access to the database and from                                 inside the container it looks like a                                 bunch of files in the file system or if                                 you on a big scale you can use solutions                                 like forward if you want to solve the                                 authentification problem but this is                                 complete bigger story more questions                                 alright let's think Thomas again okay                                 thank you
YouTube URL: https://www.youtube.com/watch?v=_XqkfL5IopM


