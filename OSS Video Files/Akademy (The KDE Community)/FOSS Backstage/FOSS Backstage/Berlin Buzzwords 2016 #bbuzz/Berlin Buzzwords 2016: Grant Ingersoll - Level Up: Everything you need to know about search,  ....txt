Title: Berlin Buzzwords 2016: Grant Ingersoll - Level Up: Everything you need to know about search,  ...
Publication date: 2016-06-11
Playlist: Berlin Buzzwords 2016 #bbuzz
Description: 
	Grant Ingersoll talking about "Level Up: Everything you need to know about search, you learned playing video games".

If you think that’s all there is to search, think again. Search is everywhere and it’s way more powerful than it used to be.  Stop building search for 10 years ago and get focused on delivering next generation insight to your users by leveraging next generation tools (NLP, machine learning, smarter data ingestion) and ideas to make your search better.

This light hearted talk, engine agnostic talk will examine common mistakes made in building search systems as well as tips and techniques for best practices in search, all in the context of the video games we all know and love.

Read more:
https://2016.berlinbuzzwords.de/session/level-everything-you-need-know-about-search-you-learned-playing-video-games

Grant Ingersoll:
https://2016.berlinbuzzwords.de/users/grant-ingersoll

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	                              thanks Thomas thanks everyone for coming                               as you said granting Psalm the CTO of                               lucid works have been a long time we've                               seen solar committer started them out                               machine learning project this talk is a                               very high level beginner talk I like to                               say what you know people often ask me                               what is a CTO do and I usually say we do                               three things I call them the three C's                                we write code we meet with customers and                                we go with two conferences this talk is                                derived out of that second one meeting                                with customers and so what I want to do                                today is shape the things I often see                                both bad and good in how people are                                implementing search based off of all of                                the years that I've been doing this all                                the scars that I have so on but I'm                                going to do it in by relating it to some                                classic video games so I would encourage                                you i'm going to try to have a little                                fun with this if you see a video game                                that you like feel free to shout it out                                afterwards if you see a video game that                                maybe i missed that you wanted to see                                for my next talk tweeted at me or                                something along those lines let me know                                why i should include your favorite video                                game in this if you don't recognize all                                of these games go look them up                                afterwards i want to start off first                                with pitfalls that i often see around                                search this was an early atari                                          i think a good year of my life was                                probably wasted playing this game or                                something along those lines but so i                                want to dig in a little bit and and put                                this into context and start off with the                                very first one which I see is a very                                common pitfall amongst a lot of search                                engineers and people implementing search                                and I can actually share my own personal                                journey here and that is as an engineer                                especially a server-side engineer I                                think that I know how to write                                JavaScript and I think I know how to                                write CSS and I think therefore I know                                how to write a UI and I've done lots of                                search you eyes over the years but my UI                                is usually look like this and in fact                                I'm sure if you were honest with                                yourself about the way you as a back-end                                search engineer right you eyes your you                                eyes probably look like this as well                                and one of the key things I've learned                                at my time at lucidworks is in the early                                days of our company we did not invest                                enough in UI and more importantly we did                                not invest enough in user experience so                                one of the things I would encourage you                                to all go and think about is how do we                                invest more in not just you i but user                                experience what is the right way for you                                to show data to your users and how do                                you learn from how they interact with                                that data such that you don't have this                                hacked up ugly looking console                                gaming device number two I see a lot of                                people who obsess over exact results in                                their search pages and that can be good                                to a certain extent until you start to                                find yourself going crazy and in                                particular I see a lot of people who                                treat anything that's not the very first                                result as being you know that second                                that that first loser right and so I                                would encourage you to think about                                relevance and we'll talk about relevance                                a bit more as we go and we get into some                                of the best practices side of the                                equation here but one of the things I                                like to tell people just upfront is                                anything that's above the fold you                                should consider as being pretty good and                                then you can tweak from there but don't                                lose all your hair over you know is                                number two why isn't that number one I                                can't tell you the number of customers                                i've been at where their bosses come                                into them and say could you make that                                one number one and then they go spend                                six weeks making it number one and then                                they broke all of their other queries                                and so we'll talk a little bit about how                                you solve for that problem as an                                engineer dealing with people who don't                                get how all of this fuzzy statistical                                probabilistic vector space matching                                works anyone familiar with this game                                 some people credit this game as being                                 the game that ruined the Atari                                           actually caused it to stop being sold                                 and in fact I think a few years ago this                                 is ET the extra-terrestrial game I think                                 a few years ago if you go google it on                                 wikipedia                                 they found like                                                          some landfill in Arizona in the United                                 States if you've ever played it it is an                                 awful user experience so I would                                 encourage you to go find an emulator and                                 try it yourself the point of this game                                 though is often that ET which is that                                 really nice                                                              thing up there he often or she whatever                                 et is often falls into a pit and then et                                 can't get out and the there were so many                                 bugs in this game that the game would                                 glitch out at this point or you get                                 killed by whatever that thing is there                                 it's a snake the point being in search                                 you often i often find customers get                                 stuck in a pit when it comes to thinking                                 about relevance they've got these                                 they've got their bosses and things like                                 that telling them this is how search                                 should be they think about search and                                 only one way and so then they end up in                                 this pit and then they wonder why                                 they're not able to monetize the results                                 properly or get feedback back to their                                 customers appropriately and so I would                                 encourage you to think about where are                                 you are you stuck in that pit how could                                 you leap frog out of that and the rest                                 of the talk here we'll we'll get to some                                 of these things as well one of the                                 common pits that I find people in our                                 what i like to call pet peeve queries                                 this is i don't know if people are                                 familiar with this english saying but a                                 pet peeve query this is like your                                 personal favorite query this is the                                 system I guarantee if you've ever                                 developed a Search application you have                                 like one or two queries that you run all                                 the time my very first search engine I                                 was building a cross language search                                 engine between English and Japanese how                                 many people speak Japanese here anyone                                 nope I don't speak Japanese either guess                                 what my query was it was literally the                                 word Japan the two characters that the                                 Japanese speaker that I was working with                                 on the system taught me those two                                 characters and that was the query I used                                 every time I tested whether that system                                 was working until we actually had live                                 real data right the other kinds of pet                                 peeve queries are often CR are actually                                 the boss's pet peeve queries sure I see                                 some people nodding their heads the boss                                 comes in hey Joe hey Jane search is                                 broken I did a search for fill in the                                 blank and the results are terrible fix                                 it and then now you go off and again                                 you're in that local minimum you're                                 stuck tuning those queries I see a lot                                 of people nodding here yes we'll talk                                 how to get out of pet peeve queries here                                 in a minute next up I see a lot of                                 people just getting lucky how many                                 people are familiar with super meat boy                                 we got a few fans we're getting a little                                 bit more modern here by my son's account                                 and I think many other people on the                                 internet super meat boy is probably the                                 single hardest video game ever made I                                 don't know if you agree or disagree with                                 that but when I play super meat boy with                                 my son I sometimes get through a level                                 and usually when I think about it it's                                 because I'm lucky right the thing that I                                 often see in the search world that                                 relates to super meat boy is also kind                                 of similar to what is sometimes called                                 as the Oprah effect if you're familiar                                 with Oprah Winfrey it's that this case                                 where as a developer or as a business we                                 have these great ideas these are awesome                                 these are going to make the company                                 another million dollars a day or                                 whatever it is and we go and deploy them                                 and voila they worked but what we didn't                                 realize and what we didn't test for is                                 are we just getting lucky right so the                                 story around the Oprah fact is that one                                 day this company redesigned their                                 website they went live they launched etc                                 and it just and traffic went through the                                 roof on their new site and they were                                 sitting there congratulating themselves                                 on how smart they were                                 and then somebody came in the next day                                 and said oh did you watch Oprah last                                 night or yesterday we were on it and                                 Oprah was the reason why everybody was                                 coming to their website and why it was                                 performing so high and so these are                                 things where you start to employ a be                                 testing and a a testing and other kinds                                 of analysis to make sure that the                                 changes you're making aren't just about                                 you getting lucky because let's face it                                 rare events happen right so make sure                                 you're doing the math to understand                                 whether you're just getting lucky or                                 this stuff is really working and there's                                 a lot of good tools out there and a lot                                 of good information on these kinds of                                 things next one any portal fans all                                 right now we're to see you know got                                 retro games now we got the newer ones                                 one of the things I like to think about                                 with search is in Portal if you don't                                 know you can basically jump between you                                 know across time and dimension all that                                 kind of stuff right you have this little                                 gun and it opens up these portals to                                 other dimensions one of the things that                                 I often see developers make is they make                                 assumptions that their system can't do                                 something right oh it's a search engine                                 well I would never use that as a key                                 value store or it's a search engine                                 what's that got to do with collaborative                                 filtering style recommendations why                                 would I do recommendations in a search                                 engine or hey I can't store my time                                 series data in something like we've seen                                 that's just crazy I need to go have a                                 time series database and so I would                                 challenge you to think about what                                 assumptions do you have in your                                 application and then think about what is                                 the best way to solve those we see time                                 and time again for instance so one of                                 the old ones in lucene was who scenes                                 not fast enough for doing that or why do                                 I have to send in and redo the whole                                 query every time I do a search can't I                                 just be smarter in cash and do something                                 about those kinds of things but the                                 people who would ask those questions                                 never actually tested whether it was                                 fast enough or not or not                                 they just assumed it was so I would                                 encourage you to leave you with that I                                 would also encourage you to think about                                 things like whether just because a user                                 and one of the other assumptions I see                                 is just because a user types in one set                                 of queries that that's the only query                                 that you should run against your system                                 or that you should even run a query at                                 all if you think about it the user is                                 really after an information need they                                 want an answer some queries they just                                 need that exact answer and so if you                                 know that answer ahead of time if                                 somebody comes on your site and the                                 first thing they do is search for Super                                 Meat Boy then just give them straight up                                 super meat boy you don't need to go do                                 anything else you probably don't even                                 need to hit your search engine the other                                 thing side of this is the invisible                                 queries is the notion that just because                                 a user does one query doesn't mean you                                 have to only do one query right I once                                 worked with a company this is in the                                 travel space where for any given user                                 query they would often have as many as                                                                                                       well you know kind of a back-off                                 strategy depending on how well things                                 worked as they went down the chain so                                 that's some of the common pitfalls I                                 played a lot of Mario Brothers Super                                 Mario Brothers I just have this one up                                 here as a segue to talk about best                                 practices I not me that I have any                                 specific rules or thoughts on Mario                                 other than it was my favorite game in                                 college not to date myself there so some                                 best practices anybody remember                                        nobody remembers this game other than                                 everybody remembers them saying all your                                 bases are belong to us it was a classic                                 case of bad translation the interesting                                 thing when I think about all your data                                 are belong to us is a lot of times when                                 i go into customers especially in                                 talking to the engineers there's this                                 obsession with making sure that you're                                 using every last latest and greatest                                 thing that does everything                                 and then building the super complex                                 architecture where you've got like five                                 different distributed systems all trying                                 to keep in sync and I see them up front                                 and they say oh we're going to do this                                 big fancy architecture and sometimes                                 that's needed by all means but a lot of                                 times after talking to them I'm just                                 like you know you can do a lot of this                                 straight out of your search engine if                                 you haven't looked at something like                                 some of these leucine based search                                 engines recently especially solar for                                 instance yesterday we talked about the                                 streaming aggregations the sequel                                 interfaces all of those kinds of things                                 you can often put all of your stuff in a                                 search engine like solar right you can                                 take you can do graph operations you can                                 do streaming opera or you can do some of                                 these streaming operations where your                                 join you're doing joins and all of that                                 kind of stuff because at the end of the                                 day you know if you think about your use                                 cases what I usually tell people is if                                 my first use case is search and then my                                 secondary use cases you know it's kind                                 of batch or analytical operations search                                 engine can win that one hands down you                                 don't need two different systems in sync                                 there if your primary use cases is more                                 large-scale analytics I used to say go                                 do that's where you do need two systems                                 now these days with you know a lot of                                 the analytical systems being built into                                 leucine is its derivatives you can                                 actually do all of this in the engine as                                 well so I would encourage you to think                                 about how can you simplify your                                 operations as engineers you often don't                                 think about the pain that you put on                                 your DevOps people but trust me when if                                 you think about it one distributed                                 system is hard to distributed systems in                                 sync is significantly harder right so                                 try to reduce that load try to simplify                                 you can't always do it but I would                                 encourage you to go back and think about                                 it and you might be surprised at one is                                 what some of these more modern data                                 stores that have searched as the first                                 application do so for instance we have                                 customers who use solar as a key value                                 store and they're doing upwards a                                                                                                    and reads per second we've got customers                                 who do are doing millions of writes per                                 second these are all possible in modern                                 search engine architectures probably my                                 second favorite game after Super Mario                                 although I'm primary a classic Legend of                                 Zelda Zelda a player and not so much the                                 modern ones here but another thing that                                 I think a lot of people in search                                 applications don't think about is how to                                 use time based data right they don't                                 think about the fact that newer                                 information is better than older                                 information or maybe some people do                                 that's kind of the easy one is to boost                                 by boost by recency that one's been                                 along around a long time but for                                 instance they don't take account of how                                 people are interacting with the data                                 what people are doing right now versus                                 last week versus last year they're not                                 thinking about how to leverage all of                                 this stuff things like session                                 information a lot of people treat                                 queries just as one single event and the                                 next event has nothing to do with it but                                 if you actually look at good academic                                 research around session ization and all                                 of those kinds of things and if you look                                 at how people rewrite their queries over                                 time you can take advantage of that kind                                 of time information as well to provide                                 better relevance for your users kind of                                 a we'll do a little Einstein mashing                                 here time ends space the other side of                                 this is how people are using space now a                                 lot of people who do local search space                                 obviously is a very key part of that if                                 you're not familiar this is maybe a too                                 much of American reference it's called                                 where in the world is Carmen Sandiego                                 this is one of those games that your                                 teacher made you play because it taught                                 you geography but there's a lot of                                 interesting spatial data out there as                                 well whether that's just something                                 you're getting from IP addresses and                                 doing reverse dns lookups or                                 or whether you're taking advantage of                                 time zone information or you're taking                                 it advantage of the fact that a user                                 happens to live in the north and it's                                 winter and so when they search for                                 shovels chances are they mean snow                                 shovels and not you know gardening                                 shovels so taking advantage of all of                                 those kinds of things thinking about how                                 spatial data can be leveraged in your                                 system the spatial stuff is all very                                 tightly integrated in with we've seen                                 and solar and related engines so you can                                 go and apply a lot of really interesting                                 spatial operations on top of your data                                 the other thing I'll say on this is that                                 notice that I'm using the word spatial                                 and not geospatial this isn't                                 necessarily just about latitude and                                 longitude the spatial capabilities that                                 come in lucene can actually do some                                 really interesting things when you think                                 about how do I map this out into an                                 n-dimensional space so there's a lot of                                 other good talks on that if you if you                                 just google things like using spatial                                 solar spatial for non spatial problems                                 you should find some good talks on that                                 kind of stuff for instance you can                                 leverage this to model when an office or                                 a restaurant is open or closed that was                                 really hard to do in other ways but it's                                 really simple using the spatial                                 capabilities any Sims fans out there a                                 good friend of mine who's based here in                                 Berlin actually worked on the very first                                 SimCity project so this one's a fun one                                 to talk about to I think you know this                                 is kind of goes along with this notion                                 that we as developers often only think                                 about queries as individual queries and                                 they're all kind of isolated and we very                                 often forget about users I think as                                 developers you know it's like users why                                 do I have to bother them or why do they                                 have to bother me right isn't that                                 something that the marketing team                                 be worrying about or the finance team                                 etc I see a lot of Engineers where they                                 just do not spend any amount of time                                 trying to understand the users at all                                 the interesting thing is if you look at                                 the evolution of search over the past                                                                                                            and the the big providers do it's all                                 about modeling the users you know the                                 the intent or the the user intent side                                 of things knowing that for instance when                                 a user asks when does the shuttle leave                                 for the airport in there at a hotel it                                 doesn't mean they want                                               with                                                                    know the answer to when does this                                 shuttle that I'm at for this hotel leave                                 to the airport and so they want an                                 answer back that says you know                                           whatever it is and so this is all about                                 if you were at the learning to rank                                 session earlier by Andrew Craig this is                                 all about trying to learn and understand                                 what users are doing by looking at all                                 of the features that you can capture                                 about your users and then feeding them                                 back in and I think actually one of the                                 interesting things that we've been doing                                 is we actually put all of this user                                 behavior data right back into solar and                                 that does two things for us one it                                 allows us to search against all of our                                 user data which has this incredible                                 democratization effect on an                                 organization because it's too often the                                 case that user data is all locked up in                                 Omniture and only marketing gets to see                                 it and the engineers only get to see                                 thee they only get to see it when it's                                 not performing very well or it's locked                                 up in IT and the only people who ever                                 get to see it are those who know sequel                                 and who can write queries against it                                 maybe you get a visualization or a                                 report on this data but chances are you                                 don't all right and so by capturing all                                 this stuff into your search engine you                                 can then give a search interface to it                                 and then now everybody in the                                 organization can know what matters to                                 users and I think that's a really                                 important first step for companies to                                 try to account                                 for it and then of course once you get                                 beyond that now you can start to process                                 it you can build recommendation engines                                 you can do statistical models around and                                 you know trying to predict how users are                                 going to behave per query per session                                 per rewrite all of those kinds of things                                 next up this is I think the really old                                 metal metal gear solid which is one of                                 the first kind of sniper or spy type                                 games where the whole point of the game                                 was to not get detected so in some sense                                 this slide is about the opposite of that                                 of how do you detect when something's                                 wrong I think you know the the the                                 search world has kind of forgotten a lot                                 of the early work around alerting it                                 used to be called document routing back                                 in like the                                                           etc one of the nice things going to come                                 out of some of the recent log based                                 search capabilities like splunk etc is                                 that you know alerting on a search                                 engine is now in vogue again I like to                                 think and take about it take it another                                 level it's not just about alerting on                                 logs or alerting on specific documents                                 it's this notion that as we get more and                                 more data you want to be more proactive                                 with your users about how they're                                 interacting with you and again so if you                                 start to weave together time and space                                 and and and data flowing in in a                                 streaming way you start to get a better                                 picture of wind should I send something                                 to a user and wind should I not and you                                 can craft much more interesting queries                                 that can then run constantly an alert                                 customers alert users anytime they want                                 one of the other interesting trends in                                 the search space I think is actually a                                 broader data platform trend in that if                                 you go in and we abstract ourself and                                 think about what all of these different                                 projects are trying to do and what all                                 the different vendors are trying to do                                 is everybody wants to own all of your                                 data ever                                 vendor wants all of your data guilty as                                 charged i want all your data in my                                 product anybody who doesn't agree to                                 that probably is lying right and so one                                 of the things that's been really                                 interesting is all of these other data                                 platforms databases etc they've been                                 adding search capabilities some do                                 better job than others well the search                                 people haven't been sitting on their                                 hands either they've been adding a lot                                 of database like qualities such that                                 nowadays you can do joins you can do                                 grouping you can do have an and all                                 kinds of traditional database operations                                 in fact if you were at Shaolin my                                 colleagues talked yesterday solar itself                                 has a full sequel front end to it so all                                 those people that know sequel you can go                                 use sequel and yes I get the irony of                                 saying no sequel when I mean KN                                         other thing that I think added at a more                                 interesting level is to take this notion                                 around puzzles up a level so it's one                                 thing to join at documents individual                                 documents it's another thing to start to                                 think about how can a search engine be                                 used to piece together a puzzle over                                 time I wish I had thought of this                                 there's a gentleman by the name of Jeff                                 Jonas who works at IBM and he has a                                 really great talk on thinking about the                                 data puzzle and how as data flows in you                                 get a much more complete picture of what                                 users are doing and what matters and                                 what the data actually means so for                                 instance you might have just a user name                                 first and then later on you might get a                                 user name and an address and then                                 another that same username and another                                 address and and so on and so forth and                                 as you think about all that data flowing                                 together you have all of these problems                                 around which data do I trust which data                                 actually matters what data can I reason                                 about and so this is where things like                                 graph stores and stuff like that can                                 help but at the end of the day you can                                 sometimes think about leveraging a                                 search engine to build out this linkage                                 and in fact this whole space is called                                 record linkage and a search engine it                                 can be really                                 helpful in solving that problem it's not                                 the solution for that problem but it is                                 often a pretty interesting part of that                                 problem especially when you start to                                 think about doing things like fuzzy                                 string matching and all of those kinds                                 of things how many people have voice                                 interfaces on their search application                                 now nobody well you know I don't know                                 last time you talked to your phone but                                 you better get one maybe in the next                                 year maybe in the next two years this is                                 something i think that's coming                                 obviously a lot more open source is                                 frankly way behind here so if you want                                 to go start up if you know anything                                 about speech recognition please go start                                 an open source project there are a                                 couple out there but they're pretty                                 cumbersome and hard to train and all of                                 that kind of stuff I won't spend too                                 much time on voice other than to fit you                                 one of the things you need to think                                 about with voice is that you are more                                 likely to get real natural language from                                 your user right and so that brings a                                 whole host of other problems for you as                                 an engineer right because now you've got                                 to figure out what actually matters in                                 the query beyond just the keywords                                 you've got a parse however many                                 different languages you have to deal                                 with the fact that voice to text is not                                 a perfect science and that you're going                                 to have a lot of garbage in your queries                                 and so how do you deal what strategies                                 do you have for doing with bad user                                 input similar things to like people                                 can't spell so on so forth so if you're                                 not thinking about voice if you are                                 especially a consumer-facing application                                 this is something that would encourage                                 you to look at we're actually starting                                 to see this with some of our clients                                 behind the firewall as well in the                                 enterprise especially in places like                                 call centres where they want to have                                 their account managers be able to just                                 talk to the engine and get back results                                 so lots of interesting things going on                                 in this space especially the deep                                 learning work has been really showing                                 some really interesting capabilities                                 around voice                                 there are some decent voice based api's                                 that you can just call out to but they                                 then they still need a lot of work last                                 but not least on the thinking about best                                 practices this is one that's really near                                 and dear to my heart and I see a lot of                                 people struggle with relevance and I see                                 a lot of engineers who kind of blow off                                 relevance because let's face it it's a                                 hard problem it's a squishy problem                                 right I mean we've got all this                                 fuzziness going on and especially for                                 most engineers who were trained in                                 databases and doing relational logic                                 this notion of squishiness or fuzziness                                 is not something that we're used to                                 write and so what do you mean this                                 result that was number one today is not                                 number one tomorrow like I like that's                                 just fundamentally a hard but I did the                                 exact same query right and so we often                                 then fall back to what we are good at                                 and I see a lot of engineers I walk in                                 the door and they're like we do                                        queries per second and they're really                                 proud of that and they should be because                                 you know that's that's a good scaling                                 system right but then I often ask them                                 the question well what if you only had                                 to do                                                               would that change could you cut your                                 hardware by ten percent how much would                                 your business love you if you save ten                                 percent on your hardware well what if                                 some of that savings actually came from                                 the fact that you had better relevance                                 what if you realized after you look at                                 all of your logs that users are typing                                 and trying to fix the fact that your                                 relevance sucks right what if that were                                 the case what if when they came in and                                 they found they typed in their query and                                 they found it right there and then they                                 went and bought it how much happier                                 would your business team be as opposed                                 to they had to do rewrites you had to do                                 all of these other things to try to get                                 them onto the right set of results and                                 so if you're not familiar this is the                                 original Legend of Zelda and this is                                 part called the Lost Woods and if you                                 didn't do a particular pattern you could                                 not get out of the Lost Woods and so one                                 of the things I try to encourage                                 to do is right from the get-go as an                                 engineer not as the business person etc                                 think about what your relevant                                 strategies are going to be think about                                 how you're going to capture a user or                                 feedback think about all of the things                                 that go into relevance or at least be                                 prepared for those kinds of things by                                 capturing the information up front you                                 may not know how to use all of your                                 clickstream data right when you get                                 going but if you don't capture it you                                 certainly aren't going to be able to do                                 anything with it I also encourage you                                 this goes back to that democratization                                 of the data make sure that you're                                 ingrained with your business people                                 about getting information about what                                 your customers care about because then                                 when your boss comes in with that pet                                 peeve query and says hey you know query                                 X doesn't work you can say okay boss                                 which would you like me to work on your                                 query which no one ever does but you or                                 these top                                                              of our business our money right all of a                                 sudden your boss says wow you're really                                 smart and lets you go do your job as                                 opposed to bothering you incessantly                                 about that so I would encourage you all                                 to stop and ask directions if you don't                                 know and Zelda there was a little cave                                 way off on the other side of the map                                 where the woman in the cave told you how                                 to get out of the Lost Woods at the end                                 of the day what you really need is a                                 plan to think about how to leverage all                                 of these kinds of things right I see a                                 lot of customers who come in and they're                                 just like oh well leucine and solar                                 that's my search checkbox and                                            ago when you know we started this                                 company in                                                              almost back then keywords                                               game over sign the check we're all happy                                 and then Google Cain you know Google                                 updates game Amazon updates game                                 facebook updates game and you now                                 realize that this core matching                                 that something like leucine does this                                 core you know like steak something like                                 BM                                                                     of these core ranking algorithms I've                                 seen some people say that only gets you                                 about fifty percent of the way when it                                 comes to relevance especially in                                 consumer facing applications I was one                                 sitting next to a the CTO of a very                                 large public search engine and he said                                 he made the claim out loud in front of a                                 bunch of academics that BM                                           situation only got him fifty two percent                                 of the way if you think about that if                                 you're ever on the academic side of                                 things you know BM                                                      gold standard for search relevance this                                 guy was a heretic saying it only gets                                 you just better than a little bit better                                 than guessing or a little bit better                                 than fifty two percent so all of these                                 other things by planning around them and                                 incorporating them into your application                                 thinking about them from day one that's                                 the rest of the way right user signals                                 what are people clicking on what are                                 they sharing what are they treating what                                 are they buying all of those kinds of                                 things time and space what was                                 interesting today is not necessarily                                 going to be interesting tomorrow have a                                 plan for how you're going to bring these                                 in accordingly choose an engine that                                 allows you to do these kinds of things                                 make sure that the data that defines                                 success in this isn't way off separate                                 because I guarantee you if that data                                 that is going to help you get all this                                 feedback is often some system that's                                 really hard to get to or locked up in a                                 third party like an armature or google                                 analytics you're not going to have it                                 when you need it and so bring it in to                                 your application and make better use of                                 it the next thing I would encourage you                                 again and go if you didn't see Andrew                                 Clegg's talk and learning to rank at the                                 end of the day you always have to be                                 learning on this stuff I would encourage                                 you to start to think about how do you                                 incorporate machine learning into your                                 core ranking functions this is a great                                 way to grab all of those features                                 including the content that clicks the                                 events and learn from it and                                 make for a better application so it's                                 like I said it's squishy at times it's                                 hard to wrap your head around the math                                 but there's a lot of good libraries out                                 there there's if you're a solar user                                 there's a patch that I think is pretty                                 close to being committed that actually                                 makes learning to rank and solar a                                 native operation you still have to train                                 your models offline but you can plug                                 those kinds of things in works and                                 distributed at scale and so make sure                                 your system and application is learning                                 it goes without saying that as an                                 engineer this is something you should                                 apply to your own life as well get out                                 of that trap of your assumptions and                                 make sure that you are learning the                                 latest and greatest as well and how to                                 incorporate that I don't have anything                                 about Phoenix Wright my son really likes                                 the song games so it's an attorney game                                 so I'd encourage you to check that one                                 out and then I just want to leave you                                 with I what I think is one of the really                                 interesting things to think about in                                 this space and if you if you don't play                                 a lot of games this is skyrim the elder                                 scrolls five and one of the interesting                                 things about this game is it's a total                                 free play game there's lots of these                                 free play games out there right the                                 interesting thing that I think about is                                 it's a great time to be a developer and                                 it's a great time to be in the search                                 development space you got a ton of data                                 you got a ton of computing and you've                                 got a ton of users and so I would                                 encourage you again to start exploring                                 some of these ideas think about ways                                 that you can incorporate more of this                                 into your application basically start                                 treating this as a free play space where                                 you can say how do I drive down the cost                                 of experimentation in my application                                 such that my business can then fail and                                 fail very fast and then learn from those                                 failures and get better and better and                                 better some people say if you look at                                 companies like Google and Facebook and                                 all that and you look at their search                                 results I don't know the exact numbers                                 but I've seen estimates that only about                                 ten percent of all users on internet                                 search ever see what that company                                 considers to be the best version of                                 their search engine think about that I                                 guarantee you almost everyone in the                                 room here you have one version of your                                 search engine maybe two every now and                                 then you tweak your search formula or                                 you lowercase your fields or whatever                                 and then maybe you do a/b testing on                                 that a lot of you people don't I've seen                                 a lot of e-commerce companies that don't                                 for instance and that's like Court of                                 their business but if you start to think                                 about if you can drive down that                                 experimentation cost now you have a lot                                 more room to play because you get to be                                 wrong and that's a really powerful thing                                 as an engineer's did the ability to be                                 wrong because everybody looks at you to                                 be right and instead you can say oh I                                 was wrong on that one but guess what                                 I've got the system in place that shows                                 me I'm wrong therefore I'm actually                                 right because the next time around the                                 next experiment is going to be right so                                 with that I think we got time for maybe                                 one or two questions miss pac-man that's                                 my all-time favorite right up there with                                 Super Mario Brothers so a lot of                                 quarters spent on that game as well                                 thanks meant thanks Quinn always thank                                 you                                 oh and by the way if you want a more                                 hands-on lower level coding i'm doing a                                 workshop at four-thirty and we'll                                 explore a lot of these ideas using solar                                 and spark so all the questions or                                 comments any questions all right right                                 it's hot in here Oh God was right there                                 okay I like gonna get him with something                                 grant kind of thank you for the coffee                                 I've been drinking it for us to day we                                 will appreciate that thank you yeah I                                 that's the marketing team but uh yeah                                 I've taken advantage of the coffee as                                 well so yeah like I said thank you guys                                 I think everyone solar and spark                                 hands-on will show you this stuff live                                 in an hour incident
YouTube URL: https://www.youtube.com/watch?v=9AwDELNPSYI


