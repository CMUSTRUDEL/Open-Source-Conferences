Title: Lightning Talk: Elias Nema - Walking Around Your Nearest Neighbors
Publication date: 2020-07-02
Playlist: Lightning Talks -  Berlin Buzzwords | MICES | Haystack – Joint Virtual Event 2020
Description: 
	Lightning talk from Berlin Buzzwords | MICES | Haystack – Joint Event 2020
Captions: 
	                              I'm gonna be talking about nearest                               neighbors and we a spoiler alerts with                               lambda architecture but first I want to                               start with hi Cosette I like to post                               yesterday and it starts like that dense                               vectors or embeddings are the new oil I                               mean you can see how many people are                               talking about them but sometimes                               refinement costs are too high because                                dense vectors are dense and stirring                                them and searching through them might                                put an excessive load on your search                                engine so why this matters again we are                                doing recommendations at Oleg's group                                and this comes like at the price was our                                platform because like our platform                                content is fully generated by users we                                don't have a standard catalogue and even                                if it's the same item we're gonna have                                to esky used for the same item because                                they created by two different users and                                then we have millions of items that are                                added and removed daily to our platform                                and in recommendations we want as soon                                as items post it want to have                                recommendations for it obviously but                                also we want to recommend this item to                                the other items that's already in the                                catalog so our constraints is it we have                                embeddings for our items but it's not                                feasible to store this item embeddings                                in our search engine for many reasons it                                mostly technical but it's also about                                implementation cost and so on so we                                still want to use this item embeddings                                for our conditions which options do we                                have                                and to to see what do we need to do                                actually how can we avoid putting them                                into solar let's see what do we need to                                do with them I will put them into two                                dimensions because ok embeddings are                                multi-dimensional but obviously we need                                to have a good story here so imagine we                                have some embedding space with                                        in it and then new item comes to this                                space ok and then obviously it it says                                first hey neighbor                                and everybody answers hey neighbor and                                it finds it closest neighbors so close                                the second third and fourth                                neighbors and this this would be like as                                the most similar items the closer is a                                more similar and the better the                                recommendation is but when this item                                entered this space it actually ruined                                this space because if we look at the                                previous items for the previous item                                without the new items the closest one                                was the left top left one then there was                                a second and a third one but actually                                the new one becomes now the second                                closest item to there to this item and                                then the second item because it becomes                                a third one and the third because the                                fourth one so actually this space                                constantly changes and we need to find                                some smart way to adopt to this changes                                in this space and I kept on high level                                what we do with this flow we we get the                                new item we calculate the neighbors for                                it we calculate the closest neighbors                                but then we take these closest neighbors                                and we update the neighborhood we call                                it neighborhood so it's it's the closest                                neighbors but then we recalculate the                                similar items for these items as well                                and then you can see in the bottom that                                the green item gets red items its                                recommendations for the new item but                                also this green item started being                                recommended to sum all the items in a                                platform and then we can actually                                proceed with it and store this all these                                items in a fast cache which we can                                quickly access and then speaking about                                the morph architectural flow we have a                                stream of item updates that we listen to                                so if the item was posted or updated or                                something else and then we have this                                application that constantly listens to                                the stream and it's a it's a simple                                application let's say and it does a job                                that you saw on a previous slide it                                calculates the nearest embeddings as a                                nearest neighbors and it uses Feist and                                it's sicko light in our case and then it                                actually stores these items in a fast                                cache and then we also have a daily bad                                 job tour were drifting both model                                 drifting and this embedding space                                 drifting because like obviously this is                                 not this or not                                 sighs calculations and actually if you                                 take a step back and look at all of                                 these steps it becomes clear that it's a                                 very classical lambda architecture that                                 we built here with a speed layer a                                 bachelor and seven layer that's                                 basically it so the learnings from it is                                 that embeddings is like it's really a                                 great way to present information as                                 that's probably where the field is going                                 and the more and more people are talking                                 about the Maddox's and more companies                                 are using them the more products I get                                 an embedding support and so on but still                                 it's not a commodity and you can still                                 find a way to use them and for that                                 action for example with like caching and                                 lambda architectures of course like a                                 dis approach you will have some limited                                 to ranking capabilities and everything                                 else but at least you can use them and                                 like or actually one of our companies                                 like one of the companies in our group I                                 Vito                                 it actually uses things and they are                                 storing their embeddings instincts and                                 they they're able to produce a brute                                 force of up to five million records                                 usually like                                                             the brute force of this and ranking                                 afterwards in under                                                 there is a link there but sorry it's in                                 Russian but I'll be happy to chat about                                 this offline and answering questions if                                 you have                                 you
YouTube URL: https://www.youtube.com/watch?v=fmi-nQRV-oA


