Title: Berlin Buzzwords 2018: Anshum Gupta â€“ Building a search platform 101 #bbuzz
Publication date: 2018-06-14
Playlist: Berlin Buzzwords 2018 #bbuzz
Description: 
	Search is a critical piece of infrastructure at just about any based company that deals with data. At large companies, it makes a lot of sense to centralize and build a platform for different teams and customers. Such a platform directly translates to saving development time, avoiding reinventing the wheel, and better maintainability, all of which lead to cost-savings.

While it is a complex problem, spanning a challenging landscape, building a search platform gets even more challenging when you try and cater to the diverse set of users that come with it. The varying requirements in terms of feature set, scale, security, etc. are a few complexities that require deep understanding and thought when designing a search platform that would support varying use-cases. Proactively thinking about the requirements, priorities, and overall design help ensure better availability and maintainability of a search platform.

Having built search platforms at both, large and small organizations in the past, I realized that there are more than a few key questions that should be addressed, if not answered when starting to build the platform. Addressing these questions helps starting off the project on the right foot and allow for a platform that is easier to manage and extend in the future. 

From security to scalability, and beyond, this talk would highlight the questions that I feel should be addressed when starting to build a search platform. At the end, the attendees of the talk would have a much better understanding of the important aspects about designing a search platform.

Read more:
https://2018.berlinbuzzwords.de/18/session/building-search-platform-101

About Anshum Gupta:
https://2018.berlinbuzzwords.de/users/anshum-gupta

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	                              hi everyone last talk of the conference                               I'm not sure about how what's the energy                               kind of levels like but let's do this Oh                               a bit about myself I've been doing                               search for a long time over a decade now                               pretty much been dabbling in the same                               solar all this while and I've built a                               few search platforms at organizations                               big and small startups yeah and more                                importantly I've been just involved with                                Lucien and solar for a while now and                                before we start because of being                                involved with solar the talk kind of                                pivots on solar and stays with solar but                                you could use most of the these these                                concepts or questions or suggestions for                                any form of social service platform that                                you might want to build like you might                                be using another technology maybe                                elasticsearch and you could just use the                                same things so search engine as we know                                right that's how a regular so it's set                                up looks like when you're just building                                a stand up standalone search platform                                and say the distributed search you have                                a bunch of nodes you have a coordination                                service in case of solar adzuki / you                                have a bunch of clients who try to talk                                to your node so there's a lot of                                communication going on it's already kind                                of complicated enough I would certainly                                call it non-trivial for sure well then                                what's the difference between that and a                                search platform right I mean you have a                                bunch of nodes you have coordination                                services it's a distributed set up you                                could have multiple collections whatever                                you want how would a search platform be                                different to begin with well a search                                platform essentially would be when you                                have a ton of tenants or ton of users                                related or unrelated trying to use the                                same platform while one person or one                                organization or one group kind of owns                                that platform takes care of most of                                their heavy lifting stuff so you might                                have those three users here or three                                groups that are using this right they're                                logged in and everything and you might                                have services running for you for the                                benefit of you know consolidating                                consolidating the the administration of                                the platform itself                                so you might have an admin an admin                                interface backup service monitoring                                service health check every bunch of                                other stuff so well that's the                                difference why do you really need a                                platform right you could do pretty much                                the same kind of stuff using separate                                standalone setups and every team could                                have their own thing or every user could                                set things up by themselves but as said                                earlier right I mean search is a                                non-trivial task when I got started with                                search not even distributed when I just                                got started with search it took me a                                reasonable amount of time to set things                                up now things have gotten much better in                                terms of usability and being able to                                spin up something and try it out but if                                you really wanted to take it to a                                production level set up like a set up                                that you could rely on could real-life                                users on there you would really I would                                say put in anywhere between a few weeks                                to a few months to get there right so                                you really want to make it easier to set                                up search for multiple users instead of                                everyone spending a few months you might                                want to be the person who actually does                                that for them so that they could just at                                the press of a button start up instances                                not really worry about hardware                                management managing the entire thing                                security privacy everything else and                                we're gonna talk more about all of that                                later on and while you make all of those                                which is make things pretty easy make                                them make repeatable tasks right there                                at the press of a button it basically                                means you're making things cost                                effective because the months are now                                gone and shrunk to a few hours but while                                everyone might be super excited about oh                                we could drill a search platform most                                companies most organizations generally                                have you know multiple teams trying to                                use search for different use cases and                                 so there are times when everyone has                                 their own setup and they learn the same                                 things in the work in isolation                                 but more often than not it kind of                                 converges into having an idea or that                                 moment of oh we should probably have                                 just one platform that would cater to                                 every each of these teams or in terms of                                 X                                 users just think about we could have a                                 service that the real world users could                                 use to set up search I mean you could                                 have something like AWS cloud search                                 where you could spin up an instance and                                 start off with search without having to                                 worry about setting up things for you                                 but while you do that there are certain                                 questions that you should ask yourself                                 or ask as a group in terms of what these                                 questions are what does the platform                                 mean to me what am I trying to build                                 here so the first question there would                                 be who is the user that's a very basic                                 question super important to understand                                 as well right so I really would                                 distribute or differentiate the users on                                 those two parameters I would say or in                                 those two categories it's internal or                                 external and it kind of has a fuzzy in                                 between but if you look at internal or                                 external internal users is when you have                                 when you're an organization you have a                                 bunch of teams you have a bunch of                                 groups that need to use a platform so                                 that they don't have to reinvest the                                 same effort into the same effort I would                                 call them as internal users and I'll                                 tell you why external users would be                                 something again like AWS cloud search or                                 some some service that you're selling to                                 the outside world for users to use and                                 put user data and use it for their own                                 apps or websites or whatever it is that                                 they're doing the difference here would                                 be internal users tend to work much                                 better with you an example being in                                 terms of logs you might be able to share                                 logs with more comfort or more                                 convenience where your internal users                                 only because you know their intentions                                 are hopefully okay when you share logs                                 with them which have IP addresses and                                 stuff like that as opposed to external                                 users let's say they have a crashing JVM                                 now if you have a multi-tenant set up                                 you wouldn't really want to share a                                 bunch of things bunch of information                                 about a multi-tenant set up with those                                 those people right so kind of totally is                                 is going to be a starting point in terms                                 of how do you start thinking about your                                 platform it totally changes the game you                                 need to figure out where you're                                 targeting when you're trying to build a                                 search engine                                 that brings us to where in the pyramid                                 is the user right I try to bring things                                 into or put also use cases into                                 something like that that kind of a                                 pyramid or search users into that kind                                 of a pyramid you've got the basic users                                 you've got a bunch of data all they want                                 to do is have a single box search and                                 that's it they're not really bothered                                 about much stuff then you've got the                                 intermediate users which is most of the                                 users because they're users who are                                 looking at you know things like                                 interesting query parsers they're                                 looking at analysis chains an indexing                                 pipeline so a bunch of interesting stuff                                 mostly configurable so it's easy but                                 they're trying to do more complicated                                 things and at the top of the pyramid                                 would be the advanced users which I                                 would say they need custom plugins they                                 have code that they write and they want                                 that to be a part of your search service                                 and when you're again designing search                                 platform                                 I would suggest that you kind of target                                 one or at the most two of these and when                                 I say to you shouldn't be targeting the                                 top and the bottom of the pyramid that's                                 bad bad idea you should be looking at                                 either the top two or the bottom to the                                 bottom of the middle tier as I said kind                                 of spreads vast so there's a lot that                                 can go on there and the reason why you                                 wouldn't want to do that is because the                                 expectations and things that are needed                                 for a basic user are completely                                 different as compared to an advanced                                 user that talking about the interaction                                 now you'd know about the user you know                                 what category does the user fall in you                                 know the user the kind of use cases that                                 you should be expecting an important                                 thing there is a what kind of an                                 interaction how would this interaction                                 happen between the user who is trying to                                 talk to your search platform and first                                 thing repeat to yourself customer api's                                 cannot change all of us tend to create                                 platforms software apps whatever                                 especially when you're building up                                 something like a platform which other                                 developers are going to use and going to                                 built on top off you do not want to                                 change API you should really don't want                                 to do that because one they wouldn't                                 change their API is when you want them                                 to do that means you would                                 have to support the older API and then                                 your API so you really don't you really                                 want to think about two things here the                                 endpoint and the API is in terms of the                                 client the rest endpoint everything                                 there so spend a ton of time think about                                 how this can work and make sure that                                 everything that you're building is                                 future-proof so you don't have to change                                 things six months later or any year                                 later and as I said because you'd have                                 to run multiple versions if you had to                                 support multiple API is being stuck with                                 old versions is painful like in my                                 experience it's probably the worst thing                                 that you can do to yourself                                 so what's generally needed here right I                                 mean when you think about API is when                                 you're thinking about or what to do you                                 want restriction of requests you want                                 safeguarding of your system one thing                                 that I always believe in is when you're                                 building a a platform                                 forget about a search platform users are                                 hostile it's funny to say that but most                                 users are all you should just assume                                 that all your users are hostile in terms                                 of they're not there to help you keep                                 this platform healthy and happy                                 they're there to literally pee the hell                                 out of that system and make sure that it                                 comes down one fine day and what you                                 really are trying to build here is to                                 safeguard your system so that nobody is                                 able to really do that the second thing                                 is abstraction of zookeeper which is                                 more of a solar thing but customers                                 don't really need to know about it I I                                 really think customers don't should ever                                 shouldn't ever know about it so you want                                 to abstract out zookeeper so that they                                 only know about how to use search not                                 really about the inner details about how                                 things work you want a throttle request                                 something that's not provided out of the                                 box with the least solar so you want to                                 do stuff like that                                 you want to fail fast for unsupported                                 features one other thing that you really                                 want to do is you don't want to ever put                                 out solar out there build a platform on                                 top of it and expose everything that                                 solar offers to the end users trust me                                 it's not going to end up - well it's                                 gonna be a disaster                                 pretty much and the last thing that you                                 really want is stable API as I said you                                 don't                                 one things that break back compact it                                 sort of kind of be a kind of infamous                                 that we do that reasonably often so one                                 good idea of providing an interactive                                 way to interact for users is to just you                                 sort of client and let them let them                                 just use the same client that is offered                                 by solar well the good part about that                                 is you don't have to write a bunch of                                 documentation people can just look up                                 snippets on the internet and write build                                 on top of that and it's easy to add                                 custom features there are things that                                 stop you from actually using that and                                 the reason for that is the reason why                                 you would build a search platform over                                 providing or letting people set up their                                 own search so it's like it would be easy                                 to just help people bring up their solar                                 cluster without having to build a                                 platform around it but that takes away                                 everything that you're trying to achieve                                 here and so you don't really want to                                 offer sort of client either for exactly                                 the same reasons you want to build a                                 custom client that builds on top off or                                 wraps around a solar client maybe so                                 treat in the API is but abstract out                                 everything or remove everything that                                 that are unsafe that's unsupported so                                 you restrict features you try and X not                                 expose soup zookeeper but the Clausura                                 client requires you to do that and there                                 are bunch of experimental API switch you                                 really don't want to expose so and with                                 the amount of flux cloud server client                                 exposing directly that as your client                                 interaction medium is a disaster I would                                 say so think about a wrap client think                                 about a client that wraps things and                                 makes that would make things much better                                 also if if you guys have tried or used                                 solar you don't want nameless to come                                 back any responses so yeah that's that's                                 the other thing you could change and a                                 good idea to do a good way to do that is                                 adding a proxy layer in the middle I'm                                 going to talk more about why do you need                                 that but I really think a proxy layer in                                 the middle kind of solves a lot of these                                 problems like making it easy of                                 controlling with the throttling part and                                 bunch of other things                                 so that brings us to now we know how to                                 set things up we know what the user                                 wants to do we know how the user is                                 gonna use or interact with the service                                 what about managing the clusters service                                 generally can be divided into two broad                                 categories delegated and self servicing                                 and you generally wanna have a bunch of                                 they have like a fair bit of overlap                                 that that's where the sweet spot is if                                 you really look at self so saying so                                 everything is something which is meant                                 for the advanced user the user gets                                 notifications gets metrics gets                                 information about what's going on in the                                 cluster and hat is responsible and has                                 endpoints and access and has ways to                                 access the cluster to go ahead and make                                 changes to the cluster so man is a                                 cluster themselves is itself of saying                                 delegated on the other hand is when                                 thing is Auto scale so you go ahead and                                 the user brings up the cluster and then                                 everything happens magically like yes                                 that's the thing or so a lot of people                                 think the sweet spot in the middle is                                 when you kind of have an overlap between                                 both there are things that you do                                 yourself and then there are things that                                 you allow the user to do one is                                 discussing this yesterday about how                                 people can shoot easily in their own                                 foot when you when you allow them to do                                 so is imagine a use case where a user is                                 allowed to auto scale say in add a                                 replica because they're anticipating a                                 bunch of traffic but your system is also                                 configured to automatically figure out                                 what the right or the correct                                 replication factor is and so here's a                                 user who manually sends a request say so                                 add a replica I know there's more                                 requests coming in so boom there's a                                 there's a replica cut that comes up but                                 the system says I don't think that's the                                 right replication factor brings it down                                 so you've got a confusion here because                                 the human beings trying to do something                                 totally different than what the system                                 thinks is right and so when you offer                                 like a combination of cell service and                                 delegated management service                                 make sure people don't overstep on each                                 other on the abilities and capabilities                                 and responsibilities of what they're                                 supposed to do but that was the part                                 about I forgot managing the cluster and                                 but you can only ask the cluster if you                                 can monitor it right I mean if you don't                                 know what's going on you can't really                                 manage a cluster you don't have any you                                 need insights right so you need to                                 expose things and because the sweet spot                                 was right in the middle of being managed                                 in delegate self-service and delegated                                 you don't really want to expose                                 everything one that confuses your                                 end-users so that's a bad thing too                                 they might end up doing or shooting                                 themselves in the foot way too often if                                 you tell them too much so don't tell                                 them everything tell them only the side                                 of things where they can actually do                                 something actionable so let's say they                                 changed their schema that does not                                 confirm to their documents that are                                 coming in anymore                                 so that's something that you can't fix                                 right so when you have something of that                                 come up your monitoring system says oh                                 I've seen a bunch of failed document                                 uploads send that to the end user                                 tell the end user to fix the schema                                 because they've been twenty thousand                                 update failures and lost                                               send those kind of infamous and share                                 that kind of information don't share the                                 kind of information that the system's                                 supposed to know and act on and in terms                                 of monitoring sort of provides gmx it's                                 done that for forever but the problem                                 with JMX is it only gives you a snapshot                                 of at any given instant so if you want                                 information about what's going on in my                                 system right now yes you'll get that                                 through GMX but if you want to have a                                 comparative analysis of oh is my QPS                                 going up is my updates per second going                                 up or is my errors going low or my you                                 know Oh am sore heap memory usage going                                 up or down                                 TMX cannot help you with that because it                                 it has no state unless the reason why                                 Sora recently added metrics so you can                                 have metrics and you can have them I'm                                 forgetting what it was but you can you                                 can create                                 plugins that would then use these                                 metrics and write them to external data                                 sources and you can write I think                                 there's support for a couple right now                                 and it's easy to extend that and add                                 support to more third-party monitoring                                 system so Sora can push out these                                 metrics that would have stateful                                 information and then you can visualize                                 this do whatever you want to do with                                 this so now that we're done with that                                 part which is kind of the basics but                                 important as as important what's the                                 plan to scale more often than not I've                                 seen people think about scale in terms                                 of two dimensions right I mean traffic                                 and data oh we support two terabytes of                                 index right now we're going to be                                 supporting                                                           okay and we support                                                   per instance we're gonna be able to                                 support                                                             there's an important component there                                 which is features and that's a                                 discussion that people were building                                 source platform generally are having in                                 parallel rather than having it you know                                 together with the entire traffic and                                 data scaling models I think that people                                 tend to forget is the new features that                                 they are gonna have serious impact on                                 how the system behaves so let's say you                                 planned that you're you know by the end                                 of the year you're going to be                                 supporting X terabytes of data some                                 certain amount of QPS and updates per                                 second and you're like okay our current                                 Hardware can handle that and you plan                                 only for that but then you add a feature                                 that kind of blows up your index                                    times so you do that and you make it                                 super easy for the end user so all they                                 need to do is click on something it                                 really X's data and loads everything                                     so you've totally forgot that kept that                                 out of the equation because the team                                 that was probably working on building                                 the feature did not work with the team                                 that was responsible for scaling                                 hardware so anything about scaling think                                 about how the features are going to work                                 with your data and traffic the                                 interesting thing and I've had a face                                 challenges with this at multiple                                 organizations I've worked with                                 it's a very common thing how do you                                 manage versions and upgrades                                 so the users don't want to change much                                 you want to change a bunch in the                                 backend or a few users actually want                                 features from the new version or release                                 of the the search platform the search                                 project that you use say solar and what                                 do you do in that case you ideally dream                                 that you know the entire platform runs a                                 single version it should be easy and                                 clean everyone runs on that same version                                 doesn't work that way trust me like as                                 much as you may try it that thing                                 doesn't that doesn't work you can appeal                                 as much you can escalate as much you can                                 tell them you're going to block their                                 requests at some point it's hard they                                 generally wouldn't listen to you so what                                 do you what do you do in that case right                                 so building a proxy in the middle that's                                 the best thing as I said it helps you                                 with managing throttling a bunch of                                 other things access restrictions proxy                                 is the answer to most problems when it                                 comes to search and that's something                                 that you need to think about when you're                                 starting off with your search platform                                 thing like you can't expose the actual                                 solar endpoint when you're thinking                                 about building a platform proxy is super                                 important when you look at this so and                                 what the proxy would let you do is keep                                 the backend totally transparent from the                                 end user so the end user uses a client                                 API that stays consistent is backward                                 compatible and is owned by you you can                                 keep on adding to it in a manner that is                                 backward compatible now while solar or                                 elasticsearch breaks compatibility does                                 a bunch of other stuff you can just map                                 things in your proxy layer and continue                                 for you know continuously make things                                 work for the end user without them                                 having to actually upgrade until they                                 really want to like if they really want                                 to use a new feature then yes give them                                 a new client let them use it but all                                 your clients would be backward                                 compatible as far as you know end users                                 go so it would let you upgrade and also                                 rollback if things don't work out don't                                 do that often though bad idea another                                 interesting thing that you would want to                                 do here is log the clips so when you                                 build your client add a version to the                                 client and make sure that you're logging                                 the version of the client requests that                                 come in                                 the interesting thing that happens when                                 you do that is when when you want to                                 upgrade say your middle tier your                                 proxies deprecated something not                                 deprecated but actually remove support                                 for something you can be guaranteed if                                 you're logging the version of the client                                 requests that are coming in and you see                                 that oh for the last three months nobody                                 has actually used the older version of                                 the client that's a safe point for you                                 to just roll up and say okay we're done                                 with supporting two versions or three                                 versions in a proxy layer and that makes                                 things super easy for you to you know                                 figure out in terms of this is a good                                 time to move on                                 well what about backups because things                                 don't go as planned always right and I                                 saw I recently saw an xkcd stripe that I                                 tried hard to find to put it here on my                                 slide but I couldn't and it was all                                 about how there's a engineer who says I                                 think we should have a backup system and                                 so he goes to his manager who goes to                                 his manager who goes to the seat the CEO                                 who says okay let's talk to the CFO                                 because we need money for the machines                                 that are gonna run the backup systems                                 like okay so it goes to the back to the                                 CFO and the CFO says okay how much money                                 do you need he puts up a number there                                 and the CF is like out really that's a                                 lot of money we could host                                               on that we party need a backup                                 have you ever needed a backup in the                                 last one year it's like no not really                                 it's like well then why do we need one                                 now they don't take the backup and that                                 was the last time that conversation                                 happened after that they didn't ever                                 speak because disaster struck                                 so backups are important so a good                                 question to ask there is the how often                                 do you want to backup you don't want to                                 really yes you might have a nice                                 friendly CFO or whoever it is that                                 approves the budget for getting your                                 backup systems back of hardware you                                 really don't want to just blowed it up                                 and fill it up with stuff that you don't                                 ever need most of us have a tendency of                                 let's just gather all the data that we                                 have and not throw things away but don't                                 do that                                 backups and Saura cloud are also                                 expensive they didn't they weren't                                 offered until recently in your versions                                 have backups oh that's a that's a good                                 thing                                 plan around cleaning up your backups one                                 of the organizations I've worked where                                 the                                 we realized that our backup systems were                                 filling up so somebody proactively                                 decided I'm gonna write a script that's                                 gonna go ahead and clean up my my backup                                 archive sadly the path went wrong it                                 ended up cleaning and he used a wild                                 card there it ended up cleaning the                                 indexes of the disk we didn't realize                                 that things were going south until a                                 host bounced the host came up with                                 nothing because well there is no index                                 we cleaned it up we have a ton of disk                                 space but we clean up the index we still                                 have the backups though and when that                                 happened we were in a state where we                                 like okay now we have backups                                 thank God which we can restore from what                                 we don't have the old data one that's a                                 customer message that we lost your data                                 at least from whenever we have lost                                 backups from and we had a whole fleet of                                 systems running with nothing on disk on                                 the index                                 all of it was running because things                                 were in memory so until the JVM was                                 alive things would work but as soon as                                 it would go away things would be dead so                                 yeah we got some time and the good part                                 is we had backups so we could kind of                                 roll back say send a message saying yes                                 we messed up and that's still a better                                 position to be in so all I'm trying to                                 put forward here is get your backups in                                 place test your archive archive cleaning                                 scripts test them out really well even                                 better back up into a directory that's                                 not your indexed directory make sure                                 that your cleanup script that cleans up                                 your archives is not even touching your                                 index directly your real data directory                                 is is holy like you shouldn't be using                                 third-party systems to play around with                                 actual data that's lying around in that                                 directory one more thing that you really                                 want to do in distributed systems is you                                 have collections you've multiple shards                                 you need two things there you need you                                 need a way to one make sure that you                                 have backups that are spread across                                 everywhere so you just need one copy you                                 don't really need                                                        that's your replication factor you also                                 want to be sure that your backups are                                 complete you didn't pick up wrong                                 segments from wrong hosts at wrong                                 points in time                                 if you're building your own backup                                 system so make sure both of these things                                 work which is one you have a backup and                                 do the backups are actually complete and                                 not incomplete half enough backups                                 they'll not work together thanks for                                 wearing this light got back in I removed                                 the slide you want to support Auto                                 reindex that's that's a pretty                                 interesting thing most search engines                                 who even come with it tend to suggest                                 that you disable it in production                                 because it kind of adds an overhead load                                 substa at the storage bunch of other                                 stuff with solar we generally say do not                                 use solar as your primary data source                                 like never do this you must have a                                 another primary data store and have                                 search but there might be times when you                                 really don't want to seek out your                                 primary data store and want to just pre                                 index for that use case if that's so                                 important to you you can support you                                 know Auto reindex seeing it provide an                                 endpoint and if you have all of your                                 data stored you can just reindex one                                 thing to remember there is it's nice if                                 you use aliases in such a situation                                 because then you can spin up a new                                 collection index all of your data again                                 into that and once you do that you can                                 point your alias to this newly created                                 collection that's now that house now has                                 Doc values or whatever it is that you                                 really wanted and proxies obviously is a                                 good place to manage those things in                                 terms of pointing to the right                                 collection in terms of like the alias                                 being being the right thing what are                                 your plans for clash of security having                                 done a bunch in solar the earth plugin                                 and the earth framework it's interesting                                 and it's kind of important you only                                 realize it once you start talking to                                 people who really care about security so                                 you'll get very different answers if you                                 speak with a developer who's a search                                 engineer and you check with them what do                                 you think what security is like finally                                 is secured it's behind a firewall it                                 works fine it's just ok you talk to                                 security experts like oh you've got                                 these vulnerabilities here here and here                                 and this is not robbed this is                                 completely wrong this can never work and                                 how do you even store data there that's                                 so unsafe so very different site                                 the story depends on who you ask and                                 Saura kinda offers a bunch of things                                 right the authentication framework the                                 authorization framework you can build                                 your own plugin it comes with the                                 Kerberos plug-in support the basic art                                 it kind of takes care very gracefully                                 and very well when it talks the internal                                 nodes oral communication is perfect like                                 it works totally fine with TLS enabled                                 and everything but when you're working                                 on like a search platform one thing that                                 you really need to think about and worry                                 about is those kind of interactions                                 right like the proxy to the clustered                                 interaction is going to be a little                                 different than a user to the proxy                                 interaction so you need to think about                                 security in terms of how am I gonna pass                                 through my credentials when it when it's                                 sent by the user through the proxy think                                 about encryption logs and backups                                 specially with GDP are like you're                                 pushing in data users are sending update                                 requests maybe you're even logging each                                 of those requests so even though your                                 solar index is completely safe and                                 behind a firewall whatever if you put                                 sending your logs to an unsecured host                                 that has each of your update requests or                                 each of your search requests that's                                 pretty much you could replay that thing                                 to build rebuild the index so and on                                 disk encryption so think about all of                                 these things think about all plugins and                                 before you start out just think about is                                 there a way to do this using existing                                 tools that sort of provides or is there                                 a way it's just extended and contributed                                 back instead of starting from scratch                                 gdpr keep all of you who were at the                                 keynote today is the index data                                 sensitive like that's an important                                 question that's that's non-trivial and                                 as much as you might want to think and                                 believe that it's like oh it's not such                                 an important thing it's okay like there                                 are other people should be taking care                                 of that we don't have to worry about it                                 not always so when you're building a                                 search platform think about who your                                 audience is think about who your actual                                 end users are and talk to talk about                                 that with your actual first level users                                 like talk to your users about who their                                 users are and tell them what you can and                                 cannot do                                 can you obfuscate data because if they                                 if there's social information if there's                                 information that's PII there's private                                 even personal information you probably                                 want to obfuscate a bunch of things                                 logging metrics whatever it is that you                                 store sending away so think about that                                 and think about if you should have                                 access to data that's an important thing                                 I mean I it's it's a fairly common                                 practice that the platform owners have                                 access to every host shouldn't generally                                 be the case specially if you have data                                 that's PII make sure that even that the                                 data shouldn't be accessible to you this                                 should be tools for you to debug what's                                 going on there should be tools to get                                 your first Gator information back but                                 make sure that you're not you know you                                 don't you don't have a way to get that                                 data back it's it's probably not going                                 to end well well now the advanced users                                 your customers have customer custom                                 plugins right that's that's what                                 everyone thinks is like their magic                                 trick like I've got a hat and things                                 come out of her dike it's it's it's                                 something that most of us believe we                                 have something like that and so everyone                                 feels that their plugin is essential                                 like they they can't ever accomplish                                 what they're trying to accomplish                                 without that custom plugin think about                                 what they're trying to do if you if                                 you're in a setup where you can talk to                                 the customers when they're getting on                                 board talk to them about do they really                                 need it can they do it outside because                                 one one thing that it really shouldn't                                 like remember is code that does not                                 belong to you can have anything and                                 while it might come with test cases and                                 one of other things there's no guarantee                                 how it's gonna work                                 especially on a multi-tenant system some                                 person who built of login wrote a                                 blogging in a manner that brings down                                 the JVM that affects                                                that's a disaster you really don't want                                 that so think about it it's hard to                                 maintain it's worse when you want to                                 upgrade but the old user wants to stay                                 on that version and then you're trying                                 to like fit the jigsaw pieces and say ok                                 I'm going to move this user there and                                 co-locate this user with this person so                                 don't do that                                 about a way where you cannot like you                                 can get around and not actually have                                 custom plugins it's a it's a disaster to                                 maintain but if you really need to do                                 that if it's an advanced platform then                                 think about blobstore it allows you to                                 actually upload a plug-in and solar                                 actually automatically distributes it so                                 it stores it in a collection a system                                 collection and then it goes ahead and                                 distributes the jar and you don't have                                 to really copy and manage and maintain a                                 bunch of stuff so but read about it read                                 about its security implications and                                 think about if you really want to                                 support that plug-in bless you how will                                 you train users write library send them                                 to libraries most of them will never end                                 up there right I mean how many times                                 have you read a manual like with                                 anything that you bought microwave for                                 example nobody reads a manual so that's                                 an often overlooked question I build a                                 platform I bring it out you try to use                                 it if you can't use it in the first                                    ways you let go the UI is crappy I can't                                 use this thing well okay I give you a UI                                 that makes it easy for you to start but                                                                                                    trying to do something constructive                                 you're like oh how do I do this and how                                 do I do that and so they start pinging                                 you and you're like I was supposed to                                 build these interesting things for                                 everyone for like                                                      I'm stuck with this one user trying to                                 figure out this one specific use case                                 that the last user asked for last month                                 but I can't share those emails or what                                 do I do                                 right think about demos think about                                 examples things well think about                                 everything that can be a generic thing                                 and share it with everyone                                 set up mailing lists make sure you share                                 more and more information because you                                 don't want to spend most of your time                                 fixing things that have already been                                 fixed telling people what's I mean                                 sharing information or typing an email                                 that already exists like if if it if it                                 has to happen and if you've shared that                                 information and it wasn't private                                 information it should be out there you                                 should just share it with in an archive                                 system that is easy to search so do that                                 and think about code examples that's                                 that's something that most people missed                                 like they try to start writing code                                 they try to write code they know other                                 end points they really don't know about                                 how do I write code against it they also                                 in case of solar there are five ways to                                 do the same thing right so it'd be nice                                 for someone to understand what are the                                 differences between those five ways if                                 your platform only exposes one way of                                 those five ways of doing things                                 tell them why write it down share it                                 with them it makes things much easier                                 for a user and if you users are kind of                                 happy and you know things work for them                                 it's gonna be super awesome for you oh                                 and one more thing you plan to fork                                 because a bunch of times you're like oh                                 I need I need this and I need that I've                                 seen people for it because they were                                 running a multi-tenant set up with a                                 bunch of course they realized they were                                 logging way too much information because                                 solar was logging but way too much                                 information and they decided to fork                                 only because they wanted to comment out                                 the log lines right so yes no that's a                                 disaster and then when you try to                                 upgrade to another version what are you                                 gonna do are you going to go back again                                 through those I don't know I removed                                 that slide but                                                         gone into just solar itself are you                                 going to go through every bit of line                                 and figure out all the log lines and                                 figure out if it's important to you the                                 next time you want to upgrade because                                 this cannot be backward or forward                                 ported like that it doesn't work that                                 way so if you're trying to fork                                 releasing it out think about do you                                 really want or do you really need it if                                 you don't need it                                 first thing just if you don't need it                                 don't do it if you really need it can                                 that be a plug-in if that can be a                                 plug-in can that be contributor that's a                                 very good thing like you don't want to                                 maintain your own plug-in for the rest                                 of your life there there's a community                                 around it there it would be super we                                 would be super happy to add more things                                 more tests test it out try it out and                                 that would make things much better as                                 opposed to forking out and doing things                                 your way like so please don't work                                 chopstix summary keep it simple think                                 about the users think about who you're                                 targeting and then stick around with                                 that                                 don't try to expand and like support                                 advanced users basic users people want                                 to do machine learning and people                                 wanting to do bunch of other stuffs like                                 know like concentrate on one aspect if                                 you have a advanced users and if you're                                 only building it for like at one of my                                 organizations that I've worked it worked                                 out we had six domains and six                                 organizations within that who had five                                 different use cases thirty use cases but                                 six organizations within that we kind of                                 build custom things for them but we knew                                 these were the only people who would                                 ever accuse it it and it was internal so                                 you can't do that kind of stuff just                                 just make sure you're targeting the                                 right audience and picking you know                                 don't bite off more than you can chew we                                 tend to like always get super excited                                 about I'm going to do this this and this                                 I've been facing that for a long time                                 now you want to do a lot but you cannot                                 accomplish most of it and kind of gets                                 frustrating every now and then so don't                                 do that also                                 in terms of the version and the upgrades                                 we have pretty active release cycle like                                 month every month we have releases and                                 I'm not even talking about but fixed                                 releases I'm talking about new features                                 coming out yay pick up a stable version                                 I would not recommend like their version                                 that would come out five days from now                                 don't don't just and I'm I'm not I'm not                                 categorically speaking about that                                 version I just mean don't pick up the                                 most recent version pick up a version                                  that's been out there for a few months                                  people have tried it out test that out                                  see that works for you and then stick                                  with it like don't try to back port most                                  of the stuff like if you don't really                                  need it and the next time you really                                  want to pick up a bunch of things just                                  go ahead and upgrade don't try to back                                  board that's a that's a rabbit hole like                                  you once you start start there there's                                  no coming back and that's it for the                                  conference and from me thank you                                  [Applause]
YouTube URL: https://www.youtube.com/watch?v=cJ-IA5x8TJo


