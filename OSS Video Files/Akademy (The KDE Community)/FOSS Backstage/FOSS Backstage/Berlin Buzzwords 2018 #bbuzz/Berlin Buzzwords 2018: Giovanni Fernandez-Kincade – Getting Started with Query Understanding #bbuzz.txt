Title: Berlin Buzzwords 2018: Giovanni Fernandez-Kincade – Getting Started with Query Understanding #bbuzz
Publication date: 2018-06-18
Playlist: Berlin Buzzwords 2018 #bbuzz
Description: 
	A user types "black clutch" into your search engine. Do they mean the handbag, the automobile part, or something else entirely?

Search is about matching the intent of the user with the information they need. For decades, "relevance" in information retrieval systems has meant things like BM25, TF-IDF, field boosting, document boosting, etc. These simple heuristics and strategies have served us well, but ultimately fall short because they fail to semantically model intent. Our systems don’t actually understand what users want, they just hope a few magic numbers will get us close enough.

Query Understanding is about using real intelligence to put users first. In this session, we’ll talk about what Query Understanding is, why it’s important, and some practical strategies for making your search experience smarter.

Read more:
https://2018.berlinbuzzwords.de/18/session/getting-started-query-understanding

About Giovanni Fernandez-Kincade:
https://2018.berlinbuzzwords.de/users/giovanni-fernandez-kincade-0

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	                              hi how are you you can call me Geo and                               I'm very excited to talk to you about                               coriander                               and to open up the search track at                               Berlin buzzwords before I get started                               let me tell you a little bit about                               myself I spent probably five or six                               years in the finance industry working                               for a subsidiary of Standard & Poor's                                and there I built a database real time                                processing system and a search engine                                for globally sourced financial documents                                my life there was just like endless data                                gymnastics and it was challenging and                                fun to work but eventually I made a                                break for it and moved on to Etsy which                                is a marketplace for handmade goods not                                unlike eBay for example and at Etsy I                                spent six and a half years focused                                mostly on search and on data-driven                                product development I led the search                                experience team which was sort of                                responsible for more or less anything                                the user would interact with when they                                were dealing with search so stuff like                                facets the result presentation                                autosuggest                                mobile our taxonomy you name it and then                                I went on to lead the search ranking                                team which was responsible for the                                fairness and effectiveness of Etsy's                                core search algorithm and then about a                                year ago I left to start my own company                                called related works and we're a small                                consultancy that tries to sort of bring                                a human touch to search and data                                problems so if you would like to work                                with us or are interested in speaking                                about that please see me afterwards and                                today what I really want to do is give                                you a great mental model for how to                                think about query understanding and how                                to apply that to the search engines that                                you probably all know and love we're                                gonna do that by first talking about why                                you might be interested in query                                understanding you know why this is a                                strategy that that should be appealing                                to you then we're going to set a                                foundation and a definition for the                                approach before applying that definition                                to a series of user problems that you                                may encounter and we'll use this to sort                                of really get familiar and get the nuts                                and bolts of query understanding and                                then before finishing up we'll talk                                about what's at stake when you do this                                sort of work so why query understanding                                well what are we trying to do you're                                probably at the search track because you                                have some search engine that you care                                about and that you want to make better                                and I would argue that as architects of                                information retrieval                                systems you know our goal has                                historically been this mystical notion                                of relevance and it's probably been                                defined dozens of times and you've                                probably heard this a lot but just so                                we're all on the same page let's sort of                                go back to information retrieval                                        kind of formally define the problem so                                we start with a user that has some                                information need right maybe it's a                                student that wants to understand why                                Pluto is no longer a planet and there's                                some information out in the universe                                maybe it's in a teacher's brain maybe                                it's on a website that can satisfy that                                need that can help them answer that                                question and so our task the task of                                relevance is to really bridge this                                divide between the information in the                                universe and the user but one thing I                                want you to really focus on throughout                                this talk is that unfortunately we're                                not dealing with users and information                                we're sort of dealing with a proxy                                battle right on the user side instead of                                the user what we have is typically some                                sort of keywords that they may have                                typed into a text box or that a question                                they may have asked their home assistant                                and on the information side the systems                                that we build typically represent                                information as documents so on Google                                Doc you mine might be a website on Etsy                                it might be a dress that someone's                                trying to sell so relevance in this case                                 becomes finding the document that                                 satisfies the underlying information                                 need but we have to infer that the                                 document has that information and we                                 have to infer what the user means so                                 query understanding is a tool that we                                 can use to achieve relevance and so a                                 natural question is what are other tools                                 that we might be able to use and and why                                 is query understanding any better so as                                 motivating context we're going to talk                                 about two alternatives and the first is                                 something I'm going to call statistical                                 relevance and the idea is pretty                                 straightforward so given a document and                                 a query we're going to do a little bit                                 of simple math and we're going to come                                 up with a number for how relevant this                                 document is to this query and the key                                 insight for a lot of statistical                                 relevance methods is that we can use our                                 corpus to infer the importance of a                                 specific document and the most sort of                                 canonical example of this is tf-idf and                                 and here's a gross simplification of                                 tf-idf that looks nothing like what                                 you'll find on Wikipedia and I've added                                 the terms that are in square brackets                                 and of course there's tons of other                                 examples of statistical relevance                                 there's info gain BM                                                     default and leucine but they all share                                 sort of common traits and I want you to                                 notice that if we look at this                                 definition of tf-idf it's it's hyper                                 focused on documents right but what if                                 your documents are actually misleading                                 you and what's more where's the user in                                 this equation now you could argue that                                 the user is providing a set of keywords                                 that we use for retrieval right to get a                                 set of candidates and then we use this                                 math to score those candidates but is                                 that enough let's look at an example so                                 this is Flipkart any commerce company                                 from india that recently just got                                 acquired by Walmart and I'm searching                                 for fanny packs and for the British                                 folks in the audience that this may be                                 really confusing to you but I want to                                 highlight that there are almost no                                 results and I can assure you those are                                 not fanny packs but if you search for                                 bum bags you will find what US Americans                                 like to refer to as fanny packs and                                 there's tons of them there and I think                                 this highlights a very very common                                 problem which is that users and                                 documents almost always are speaking                                 different languages the content in our                                 search engines are often is often you                                 know lovingly and and and arduously                                 crafted by people that are specialists                                 right people like the folks in this room                                 that live and breathe their subject                                 matter every single day and so they have                                 a tendency to use very very specific                                 nomenclature and so the layperson that                                 comes to a search engine almost always                                 is going to use much simpler words that                                 that don't really line up and what's                                 more demographically those two sets of                                 humans may be very different right an                                 American consumer may be approaching an                                 Indian e-commerce site and so naturally                                 we're gonna have very different language                                 and of course maybe your documents are                                 being produced by automated systems or                                 robots and and then we can almost                                 assuredly find differences in the                                 language that these two uses and so                                 these differences are sort of                                 fundamental problems for statistical                                 relevance methods so alternative is                                 machine learned                                 once are learning to rank and learning                                 to rank frames relevance as a supervised                                 learning problem so we'll take an give a                                 document and a query to a model and that                                 model will give us back a number this is                                 called a point wise model and it's sort                                 of the simplest incarnation of learning                                 to rank and the way that we train a                                 point wise model are the way that we                                 train a learning to rank model is by                                 showing it examples the examples might                                 take the form of a document a query and                                 then a yes/no right is this document                                 relevant for this query and if we show                                 the model enough examples                                 hopefully the model will learn how to                                 show us the relevant stuff now learning                                 to rank will suffer from a lot of the                                 same problems that other machine                                 learning techniques will suffer from                                 that you'll probably hear a lot of at                                 this conference right                                 acquiring training data is is difficult                                 understanding the biases and the quality                                 of your training data is tremendously                                 difficult training itself is a subtle                                 art form and then even if you get lucky                                 and you are successfully trained to                                 model putting that thing in production                                 right and having confidence at it and                                 feeling like you have an operable system                                 these are all tremendous challenges but                                 these are not even the challenges I want                                 to focus on today there's a far more                                 insidious problem and I call it the                                 poisoned result set so here I'm                                 searching for dress shirt and you can                                 see that one of these things is clearly                                 not a dress shirt if a user searches                                 your search engine and finds sort of                                 viscerally irrelevant items even one or                                 two at that point they often lose faith                                 in the ability of your search engine to                                 interpret their queries right and at                                 that point they're sort of going to do                                 one of two things they're either going                                 to hack around you either by faceting                                 using the user experience or crafting                                 really complex queries or they're just                                 gonna decide to go somewhere else and                                 let's be honest if you're Amazon if                                 you're not Amazon they're probably going                                 to go somewhere else                                 now the interesting thing about                                 viscerally irrelevant items as you can                                 sort of think of it as akin to filtering                                 spam and we've been filtering spam as an                                 industry for decades and one thing I                                 want you to notice is nobody uses                                 ranking models to filter spam they use                                 binary classifiers because class                                 vacation and filtering is fundamentally                                 very very different than ordering result                                 sets and if you put your faith in a                                 learning to rank model and hope that if                                 you showed enough examples it'll get rid                                 of the irrelevant stuff you're probably                                 not gonna see very great results and I                                 myself have personally wasted a lot of                                 time going down this path so having                                 talked about why these other strategies                                 for relevance are sort of not up to the                                 task or or have significant drawbacks we                                 arrived at the star of the show query                                 understanding and query understanding is                                 about focusing on queries rather than                                 focusing on documents but to be more                                 precise I would say that query                                 understanding is about focusing on                                 intent because as we learned in that                                 fanny-pack example language is not                                 sufficient right language can be                                 tremendously misleading so we sort of                                 have to unpack what the user is getting                                 at and try to figure out that underlying                                 information need the holy grail of query                                 understanding is something like this                                 given a query we can break it up into                                 its components and then we can                                 understand what each of those components                                 mean and you can get extra credit if you                                 can tie each of these pieces to some                                 entity in your database                                 if you zoom out a little bit query                                 understanding is sort of like mapping a                                 query on to a set of facts and often                                 those facts are can be arranged in                                 hierarchical or directed relationships                                 right so here we're mapping the query                                 dress shirt into the category dress                                 shirts which is a subcategory of shirts                                 than a subcategory of clothing and so                                 you can think of these facts as making                                 up a graph right a knowledge graph and                                 if you map your documents onto the same                                 set of knowledge you've built a bridge                                 from your documents to your users based                                 on semantics now before you go back to                                 your boss and tell them that geo told                                 you that the solution all your problems                                 is a knowledge graph let's take a break                                 knowledge graphs are a thing people                                 build them they use them they're                                 tremendously effective but also complex                                 tools and really what I'm talking about                                 right now is I'm using knowledge graphs                                 as a metaphor for how I think about                                 knowledge knowledge how I think about                                 query                                 standing and let's roll with that                                 metaphor for a second and the                                 interesting thing about knowledge is                                 that there's a lot of it in October of                                                                      Google's knowledge graph supposedly had                                 around                                                                  good that nobody in this room has the                                 resources that they can throw at the                                 problem that googled us so the rest of                                 us have to sort of pick and choose we                                 have to figure out what's the right                                 knowledge to focus on chances are good                                 that your distribution of queries looks                                 something like this there are some head                                 of queries that are issued quite                                 frequently and make up a sizable portion                                 of your traffic so on etsy this might be                                 something like Harry Potter and then                                 there's this long tail of queries that                                 are issued very infrequently like if it                                 goes gorgeous t-shirt red and a natural                                 place to start in your query                                 understanding journey is to focus on the                                 head right there's not that many queries                                 here and we can sort of have a huge                                 impact on our users and when you move                                 beyond the head it might make sense to                                 focus on cases like this fanny pack                                 example where users are clearly having                                 difficulty right where there's there's                                 gaps to be made up but regardless of how                                 you proceed what I really want you to                                 take away from this is there's too much                                 knowledge out in the universe so we have                                 to focus on figuring out what the most                                 important knowledge to imbue in our                                 systems is and the right way of doing                                 that is by taking a look at your query                                 logs and closely scrutinizing what users                                 are doing and of course if you want to                                 do that in a gbbr gdpr compliant way you                                 should be asking for permission so and                                 so and so and so but taking that for                                 granted the rest of this talk will be                                 focused on what sorts of problems you                                 may encounter as you closely scrutinize                                 your query logs and how you might fix                                 them using query understanding so we're                                 going to talk about two types of                                 problems precision and recall and you                                 may be familiar with those two concepts                                 but here's my two sort of intuitive                                 explanations of each precision is                                 garbage results right like that                                 viscerally viscerally irrelevant dress                                 and recall problems are cases where                                 we're just now seeing enough stuff so                                 more akin to the the fanny pack                                 exemple on the precision front you can                                 usually find these cases by looking for                                 situations where users aren't engaging                                 right they're not clicking they're not                                 exploring they're just sort of issuing                                 Aquarion leaving there are caveats to                                 that definition by the way but we'll                                 sort of you know glaze over that so it's                                 late                                                                     Beyonce concert and you're so hopped up                                 on lemonade that you decide to search                                 for formation as in formation world tour                                 and this is an e-commerce site called                                 spring and instead of Beyonce stuff you                                 find a bunch of medium format cameras                                 it's a little disappointing you search                                 for Beyonce and find a bunch of beyond                                 the beach apparel and you make one                                 last-ditch effort in search for Solange                                 and find a bunch of solana sandals                                 you've somehow discovered the Knowles                                 family Bermuda Triangle B because you're                                 all search folks you probably are                                 getting some glimmer of what's happening                                 here we have some very aggressive                                 stemming right so beyond and Beyonce are                                 both stemming to be on format and                                 formation are both stemming to format                                 but this is a very specific instance of                                 a more general problem which is that                                 we're not handling proper nouns                                 correctly right Beyonce Solange these                                 are examples of people places and things                                 and and those are very very different                                 than your average nouns or verbs we                                 shouldn't be treating them the same we                                 need our system to be more intelligent                                 than that so the easiest thing that you                                 could possibly do to solve this problem                                 is go through your query logs and find a                                 list of things that people care about                                 that are entities that shouldn't be                                 stamped and make a list of exceptions                                 now you might be saying to yourself is                                 she oh really suggesting that we go                                 through our query logs and manually put                                 together a list of entities and that's                                 absolutely what I'm suggesting because                                 your users really don't care how smart                                 you are and if we think back to that                                 query distribution right if you work on                                 the head there's not that many queries                                 there right you can sit down with a                                 spreadsheet and and sort of figure out                                 the important entities in an hour maybe                                 two and that will have sort of outsized                                 effects on your search engine but you                                 don't have to stop there right we can do                                 more so a sort of medium level salu                                 is to start using data to help you find                                 these entities so maybe you're lucky and                                 you have an artist field in your                                 database so you can sort of select                                 distinct from your artist field and get                                 a list of things that you should never                                 treat as allowing to be stamped or maybe                                 you can consult external data sources so                                 for instance if R&B artists were                                 particularly important Wikipedia has a                                 nice list of them and depending on your                                 domain I'm sure there are other                                 resources that will be tremendously                                 useful for you to find the proper nouns                                 in your space and then of course the                                 hardest possible solution is to use                                 something like a part of speech tagger                                 or named entity recognition system                                 thankfully there are tons of these that                                 you can sort of use off-the-shelf some                                 of them are software that you're install                                 some of them some of them are cloud                                 hosted api's but one thing I want to                                 caution you about is that remember that                                 a lot of these systems are trained on                                 natural language right they're trained                                 on prose they're trained on text that's                                 arranged in pages and sentences and                                 proper nouns are usually capitalized and                                 well it turns out that that's really not                                 what queries are like so for instance                                 here's Google's cloud NLP API just                                 failing miserably to understand what                                 Beyonce is so a better strategy is to                                 use one of these systems on your                                 documents and so we can use them to find                                 the list of entities and if you want to                                 be extra sure about what you're                                 exempting from stemming you can have a                                 human being review that and give you a                                 really high quality set of energies that                                 you're going to respect let's talk about                                 this dress problem we searched for a                                 dress shirt and we we ended up with a                                 dress that's made out of t-shirt                                 material now the problem here is we're                                 not respecting phrases right when I when                                 I say dress shirt I don't mean a thing                                 that is a dress and a shirt I mean                                 literally a dress shirt right that's a                                 phrase that we should be respecting and                                 again the easiest possible solution is                                 go through your query logs and figure                                 out the phrases can't say this enough                                 but a more sophisticated solution is                                 some simple heuristics so for instance                                 we could use something like point wise                                 mutual information                                 so you can go through your query logs or                                 your documents and you can calculate the                                 probability of seeing dress shirt                                 together as a phrase and compare that to                                 the denominator in this case which is                                 the probabilities of dress and shirt                                 appearing independently and you can                                 calculate this number for each set of                                 pair of words in your corpus and then                                 decide you know anything with a PMI                                 above                                                                  that we're gonna respect and this is                                 tremendously simple very effective sort                                 of no excuse to try to try it no excuse                                 to not try it another very popular                                 technique which might seem funny is you                                 can actually just check Wikipedia and                                 this is sort of state-of-the-art when it                                 comes to heuristic approaches to                                 detecting phrases if a phrase exists in                                 a database like Wikipedia it's probably                                 a real thing and you should probably                                 treat it as a phrase and then of course                                 the hardest possible path is supervised                                 learning so we can train a model given                                 two tokens to decide whether or not that                                 token is a phrase folks will often use                                 features like frequency in the query                                 logs both independent and together                                 they'll use PMI like we discussed                                 earlier and folks will also use stuff                                 like you know did this phrase appear in                                 Wikipedia or some other domain source I                                 want to let you know though that if                                 you're looking for more literature on                                 the subject you'll find that folks talk                                 about this as query segmentation so                                 instead of deciding whether or not to                                 tokens are a phrase you're really                                 talking about should we divide the query                                 at in the line between these two tokens                                 and that's confusing in this                                 conversation but it makes sense when you                                 think about that holy grail of query                                 understanding where we need to first                                 kind of break up the query into pieces                                 and then understand each of those pieces                                 so you can start as simple as something                                 like a logistic regression but things                                 get much more complicated folks also use                                 recurrent neural networks here's a                                 diagram of a linear chain conditional                                 random fields model needless to say I                                 think you can get started and sort of                                 have outside effects without getting                                 this complicated but but folks take it                                 all the way                                 all right and so for our last precision                                 example I'm going to search at sea for                                 dress and you can notice that one of                                 these things is not a dress it's                                 actually a pattern that you can use to                                 sew your own dress and one thing that                                 you may not realize about Etsy is that                                 we have or that Etsy has both alright my                                 slides are not moving sorry there we go                                 so Etsy has both finished goods and                                 craft supplies like fabric and scissors                                 and the sorts of things that you might                                 use to craft your own goods and so the                                 problem in this case is that we have                                 very ambiguous keywords right dress                                 appears in the finished goods but it                                 also appears in the craft supplies and                                 if we knew if the query was one of those                                 two things we might be able to do better                                 and so the solution here is something                                 called query classification which really                                 just means we're gonna take our query                                 and we're gonna map it to a set of                                 buckets right is this query a craft                                 supply query or is it a finished goods                                 query and it often makes sense to start                                 with very broad categories like this and                                 if these categories solve the problem                                 right if filtering out all the craft                                 supplies would really just fix those                                 results that's definitely the place to                                 start but folks also get a lot deeper                                 right so instead of just those two                                 buckets it's not uncommon to see people                                 classifying things into a deep hierarchy                                 right so in this case we would classify                                 dress as the category dresses which is                                 under women's which is under clothing                                 but I would only go here if the first                                 sort of broad set of categories doesn't                                 solve your problem because as you go                                 more granular it's gonna get harder and                                 harder and the easiest possible solution                                 is just have a human being provide some                                 mappings right and that may be you know                                 something as simple as always treat this                                 query as finished goods or it might be a                                 little bit more sophisticated like                                 here's some heuristics right if they                                 mention fabrics or patterns then let's                                 treat that as craft supplies then a                                 medium level solution is to start using                                 data so for instance we could                                 start took taking a look at our query                                 logs and look at what people are                                 engaging with and even though there are                                 craft supplies and the results I can                                 almost guarantee you that most people                                 are engaging with the actual dresses and                                 so if                                                            clicking on finished goods this is                                 probably a finished goods query though I                                 should caution you can only do this for                                 queries that actually get a reasonable                                 amount of traffic right if a query only                                 has like one or two searches or one or                                 two clicks like this is just totally                                 unreasonable another very simple                                 technique is just lexical similarity                                 right how close is the query in terms of                                 its text to the text of one of your                                 categories so in this case dress if you                                 Steinman is basically identical to                                 dresses and there may not be any other                                 category that it's close to in which                                 case it's it's fairly unambiguous and                                 it's fairly obvious and this by the way                                 is one of the things that I'm most                                 embarrassed about as an industry right                                 like how many search engines have you                                 gone to we're clicking on dress and                                 searching for the keyword dress give you                                 completely different things and then                                 it's like it's inexcusable right like we                                 have like autonomous vehicles but we                                 can't like facet and search by the same                                 token it's crazy                                 so anyways then of course the hardest                                 possible path is supervised learning                                 again here we're mapping we're training                                 a model to put things into one of these                                 buckets for us people often start with a                                 simple bag of words representation but                                 well you know it's also common these                                 days to use word embeddings from                                 something like word Tyvek a natural                                 extension of the probability ideas that                                 we talked about earlier is to use                                 something like a naive Bayes classifier                                 so instead of calculating the                                 probability of a class given a query we                                 can calculate the probability of each                                 token of a class given each token and                                 then we can combine those into a query                                 level probability so this will kind of                                 let you cover more queries than the                                 system we talked about earlier but you                                 know it gets real bananas from there so                                 here's an example of some research where                                 folks are taking word embeddings for                                 more Tyvek combining them using a                                 convolutional neural network and then                                 feeding those to a tree based classifier                                 so a full spectrum of approach                                 that you can take so that's it for                                 recall precision and we're gonna spend a                                 little bit of time talking about recall                                 you can usually find these cases by                                 looking for instances where users really                                 just aren't seeing enough results and                                 and I think that definition needs to be                                 a little bit more expansive than zero                                 results like zero is bad but like two is                                 also bad so so let's look at some of                                 these first the fanny pack example and                                 if we think back to our knowledge craft                                 metaphor the problem here is you know                                 we're missing this mapping on the left                                 hand side right we know what our                                 documents are but we don't know what our                                 queries are and how they map into that                                 so what we really need is we need to                                 understand that fanny packs are a thing                                 that exists in the universe and that                                 that this fact is synonymous with the                                 idea of bum bags in our database so I'm                                 really just talking about synonyms and                                 you all have probably used synonyms                                 before and in fact the synonyms in by                                 default and things like elastic search                                 and solar are human-powered so we have                                 great evidence of smart people coming                                 before us and using their their manual                                 labor and so continuing on that trend                                 going through your query logs and                                 figuring out the importance Internet's                                 is a totally reasonable thing to do a                                 medium level solution is to again                                 consult data sources like word net so                                 word Nets a lexical database you can use                                 it to look up relationships between                                 words you can look use Wikipedia or                                 whatever domain source may be                                 particularly useful for your search                                 engine here's an example of me using                                 word net and it you know it's accurate                                 but not tremendously useful but                                 Wikipedia comes to the rescue and again                                 it's sort of surprising how how easily                                 you can harvest a number of really good                                 synonyms and other facts to add to your                                 system if you just take half an hour and                                 look through some of these domain                                 sources and then the most sophisticated                                 possible approach is trying to                                 automatically detect synonyms so for                                 instance you might pass your query logs                                 through something like word Tyvek and                                 then look at the nearest neighbors for                                 each word here I'm looking it's a little                                 hard to see but I'm looking at the word                                 probable and the nearest name                                 is likely but I'll be honest I very much                                 hand-picked this example the results are                                 like stupendously terrible and jaren                                 general and after having read a number                                 of papers about automatic synonym                                 detection I can very confidently tell                                 you that the state of the art is pretty                                 bad so this might be one of those                                 examples where it might make sense to                                 kind of use these systems to identify a                                 set of candidates right there they're                                 not good at being accurate but they're                                 good at highlighting possible                                 relationships and it's very easy for                                 someone to review those relationships                                 and kind of pick and choose the good                                 ones so for last recall example I                                 searched red NASCAR at the digital                                 Public Library of America this is a site                                 that aggregates digital collections from                                 libraries all over the US it's a great                                 set if you're looking for like sort of                                 archival photographs and all sorts of                                 like interesting stuff that no one's                                 ever seen and you can see that there's                                 almost no results for NASCAR there's                                 almost no results and none of them are                                 read right                                 tremendous bummer but if we search for                                 NASCAR there's tons of results and the                                 top ones are red and really could this                                 guy get any redder or any more NASCAR so                                 the red NASCAR stuff is there somewhere                                 we're just we're missing it right even                                 if we got good even if we were really                                 good at understanding the query our                                 documents aren't being mapped until that                                 same space where we don't know the color                                 of our documents so the easiest possible                                 solution is to ask you mean beings and                                 maybe you have the sort of search engine                                 where people are submitting data to your                                 system on an iOS app or on a web form                                 that's a great place to ask for more and                                 you'll oftentimes be surprised by how                                 willing people are to give you this                                 information but there's tons of                                 heuristics and off-the-shelf software                                 you could use as well so for instance                                 here is a Python library called color                                 thief that you can use to get the                                 dominant color of an image or the color                                 palette of course this leaves as an                                 exercise to everyone in the audience                                 mapping these RGB values to human                                 readable names if you're trying to do                                 like high level colors like English                                 black blue it's that                                 that's very straightforward but if you                                 want to get to like periwinkle salmon                                 level that's a much harder problem and                                 maybe a little crazy another thing I                                 want to highlight is a lot of times when                                 we're missing data right when we're                                 missing that mapping the data may be                                 somewhere in your system so for instance                                 here I'm looking at the tags for an item                                 and there's clearly sizing information                                 there but maybe you haven't extracted or                                 index that sizing information and really                                 some healthy amount of regex and sort of                                 data munging can kind of get you                                        the way there and that's what this work                                 often looks like and then of course the                                 hardest possible path is to use machine                                 learning so for instance we might train                                 a convolutional neural network to sort                                 of place our images into specific color                                 bands you probably don't want to train                                 your own from scratch you may want to                                 transfer learn from an existing                                 architecture again needless to say I                                 don't think you have to go all the way                                 here in order to fill in these gaps or                                 do it or in order to make some some                                 headway so by now I hope you've noticed                                 some patterns the easiest possible                                 solution whether it's you know dealing                                 with entities synonyms color tags for                                 images is just to leverage human beings                                 right it turns out we're pretty damn                                 good at stuff so you know don't don't be                                 afraid to utilize humans and one thing I                                 want to make clear is I think you'll                                 find that human beings are going to be                                 exceptionally fantastic at helping you                                 with that head of the distribution but                                 they will also have effects on the long                                 tail right because often long tail                                 queries are variations on the head so if                                 I get good at understanding that Harry                                 Potter is a phrase the head query Harry                                 Potter will do better but also the tail                                 query Harry Potter t-shirt read that'll                                 do just as well                                 the medium-level solution is usually                                 something like using data probabilities                                 using simple heuristics or off-the-shelf                                 software and what's great about these                                 approaches is they're usually very                                 straightforward they are usually quite                                 performant and they're very easy to                                 understand                                 which are all fantastic elements for a                                 production system                                 so please don't underestimate this class                                 of solutions and then the hardest                                 possible thing that you could do is try                                 to train your own AI our machine                                 learning systems and what I think you'll                                 find is that while the human beings are                                 great at the head if you really want to                                 make some some headway on the tail right                                 if you want to make the tail better                                 you're really going to have to start                                 leveraging data-driven or machine                                 learning techniques so another pattern                                 that I want to highlight is it's very                                 very common for folks to use data-driven                                 methods or machine learning systems to                                 identify candidates of pieces of                                 knowledge that you want to add to your                                 system and then having human beings sort                                 of pick and choose what are really the                                 best pieces of knowledge before adding                                 them to the system and this is                                 tremendously important and very common                                 because it turns out that query                                 understanding is of super high stakes                                 game right if I search for clutch and                                 you show me automobile parts this is a                                 catastrophic failure right like if I if                                 I really wanted handbags so we need to                                 be sure about our interpretation of                                 queries but this also highlights sort of                                 the intersection between query                                 understanding and the user experience                                 right if I don't have a lot of                                 confidence in my query understanding                                 rather than filter the results I could                                 just suggest that to you and autosuggest                                 right and if you agree with that                                 classification you'll click on it and                                 have a good time but if you don't it's                                 it's really not the end of the world and                                 you can really think of this as creating                                 a spectrum from low confidence to high                                 confidence right on the low confidence                                 end are a lot of user experience                                 features like auto suggests you can mess                                 with faceting you can suggest                                 refinements within the body of the                                 results and even before we get to                                 filtering right you can give a slight                                 preference right if we think that this                                 is a handbag query let's give the                                 handbags a little bit of a boost but                                 let's not completely change everything                                 right so it's really a question of how                                 confident you are in your system and                                 this is a very precision oriented                                 spectrum by the way but you can imagine                                 a similar spectrum for recall so that's                                 it                                 I hope this was helpful this is really                                 just like the tip of the iceberg the few                                 things I want you to take home today are                                 that query understanding it allows us to                                 achieve a baseline of relevance and                                 earlier I contrasted query understanding                                 with machine learning relevant and                                 statistical relevance but really they                                 can all live in harmony right we can use                                 query understanding to kind of remove                                 all the irrelevant stuff and get us to                                 like a reasonable spot and then we can                                 use statistics and machine learning to                                 like fine-tune what's happening on top                                 of that query understanding achieves                                 that by focusing on intent right we have                                 to try to discern what the user is                                 getting at and fix those problems and we                                 do that by imbuing our search engine                                 with knowledge and unfortunately the                                 only reasonable approach is to sort of                                 figure out what knowledge is most                                 important and use data and analytics to                                 do so so one very quick plug this is my                                 company or a small consultancy and we'd                                 love to help you get started with query                                 understanding there's my Twitter medium                                 LinkedIn website and there's our blog I                                 actually recently just wrote a series                                 about autosuggest if you found this talk                                 interesting you may find that                                 interesting as well so thank you                                 any questions hi thanks for the talk was                                 really nice yeah and most of the tips                                 you gave I think we're like at index                                 time could you maybe comment a bit on                                 which of those you would execute it                                 index or query time something like that                                 that's a good question I didn't get into                                 the mechanics of this but actually a lot                                 of query understanding happens at both                                 of those stages so at index time let's                                 say that you're dealing with                                 classifications you need to know that                                 you know this is a document that belongs                                 to finished goods we're assuming there                                 that that's already something that you                                 know in your system or that's a piece of                                 data that you're missing in but then a                                 lot of query understanding happens                                 before you even talk to a retrieval                                 system so often it looks like you know                                 we'll have a set of systems that will                                 spit us back a classification or a                                 segmentation for a query and after query                                 understanding gives us those results                                 will then issue a query to solder                                 elasticsearch that you know you that                                 leverages those those pieces I was                                 curious about if you've used query                                 understanding features in a learning to                                 rank model yeah that's actually                                 something I didn't get to really talk                                 about but as I mentioned at the end all                                 of these things can sort of Libet                                 harmony but it's beyond that right                                 because you're learning to rank models                                 can leverage the query understanding                                 right so if your learn to rank model can                                 understand that this is a clothing query                                 right it may pick up on completely                                 different features then than if it just                                 didn't know anything about the query so                                 yeah it's tremendously common to to sort                                 of start by using query understanding to                                 kind of like get you the baseline but                                 then also incorporating those features                                 into learning to rank models um and the                                 way to think about it is it gives you                                 like a remove sparsity right so then                                 like rather than dealing with like an                                 individual query or the intersection of                                 an individual query or a document now                                 you can intersect a class of queries or                                 an attribute of course hi Kirsten about                                 LTR and data you you said for the                                 machine learning problems sometimes the                                 hard part is                                 is actually getting good data and I                                 certainly agree with that it's hard to                                 show people all of your is possible                                 results and then get them to rank it but                                 maybe you have an idea where a                                 particular user data you can use are                                 more helpful is there in your experience                                 a class of problems but it's easy to get                                 data for machine learning from user                                 interactions on your site in this whole                                 area I think in general it's always a                                 very very subtle thing you know everyone                                 basically starts with like looking at                                 cliques but cliques are a very very                                 ambiguous signal and then it really                                 depends on you know understanding what                                 behavior looks like on your on your                                 system and what success is right and                                 that's that's really why training data                                 when you're harvesting training data                                 from behavior becomes very hard because                                 often times it's very difficult for even                                 us to define in this room what success                                 is right success on an e-commerce site                                 is revenue right but that's a                                 comparatively very rare events                                 throughout the course of a website right                                 so conversions and are simply not enough                                 it must use most e-commerce settings but                                  if you're looking at other sort of                                  search engines like let's talk about                                  Pinterest or something like that then                                  success is even more sort of ambiguous                                  right and so that ambiguity makes it                                  very very hard to derive like meaningful                                  signal out of out of your training data                                  what I will say is I often find from an                                  analytics perspective that it's easier                                  to define failure right like I may not                                  know if you're having a good time but I                                  can almost certainly tell you you're                                  having a bad time right like if you                                  spent                                                                we're talking about like Google and you                                  got like a knowledge graph call out of                                  like you know I search for like Obama's                                  birthday and I got Obama's birthday as                                  the answer which is probably no one's                                  problem in this room unless we're                                  talking about that it's it's fairly                                  straightforward to understand                                  abandonment and that's question                                  hi my name is mano Saiga's from                                           we provide self learning search engine                                  for e-commerce so what what you've been                                  saying                                  I very much with it one of the things                                  that I'd like to ask perhaps from your                                  experience at related works but also                                  earlier from Etsy is about evaluation of                                  these many components that are involved                                  in search and also individual components                                  but also an end-to-end evaluation and                                  how would that relate to make a decision                                  to go from easy to medium to hard to                                  answer a particular question so you're                                  asking when do you move from from each                                  of these kind of grades that is one                                  question and the second question is do                                  you do evaluation per components overall                                  or both in general I would you know for                                  folks that have enough traffic and that                                  have the expertise I would recommend                                  running a BA experiments and when you're                                  running a BA experiments you should                                  always prefer to run the most                                  fine-grained experiment possible right                                  because that's gonna give you the clear                                  signal for what's for what's working but                                  a B experimentation is itself like a                                  very subtle art form and oftentimes what                                  you'll find is you know if we add five                                  synonyms to our system that's going to                                  affect like a handful of queries right                                  and so you really won't have enough                                  traffic to get a meaningful signal out                                  of it so sometimes out of necessity you                                  need to make bigger you know tests but                                  in general I would I would say get is                                  incremental as you possibly can unless                                  you're forced in the other direction                                  right because if you're testing a giant                                  system when it doesn't work which that's                                  what's going to happen the first like                                  dozen or so times you're gonna have no                                  idea why it didn't work okay thank you                                  very much                                  [Applause]                                  you
YouTube URL: https://www.youtube.com/watch?v=STvz1gGtSw8


