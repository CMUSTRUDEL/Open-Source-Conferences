Title: Berlin Buzzwords 2012: Interview with Sean Cribbs from Basho Technologies
Publication date: 2018-12-14
Playlist: Berlin Buzzwords 2012 Interviews
Description: 
	Recorded at Berlin Buzzwords 2012.

Description of Sean Cribbs:
https://2012.berlinbuzzwords.de/content/sean-cribbs

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	                              um so I'm Sean Cribs I work at basher                               technologies and we make react which is                               a distributed fault tolerant key-value                               database and as a bunch of nice extras                               on it and it's really fun to work out so                               I'm here to talk about the problems that                               creep up when you use a large data                               system issues around consistency and so                               my talk here is about eventually                                consistent data types so data structures                                that survived inconsistencies from from                                the point of you know having your your                                cluster partition down the middle or                                just things taking a long time to get                                around so that's that's what I'm I'm                                talking about some of the things I'm                                working on                                for non developers it means that you can                                build a big distributed system with data                                all around it and and you don't have to                                have those you know traditional                                guarantees that relational databases                                will require of your system you can grow                                in an organic way and scale linearly but                                also maintain some sanity for your                                developers                                for developer it means that you don't                                have to figure out how to do this hard                                stuff yourself there is a mathematical                                computer science approaches there's a                                rigorous approach behind developing                                these data types that means that all you                                have to do is implement the algorithm                                you don't have to figure it out                                so I think people think of big data and                                I kind of agreed these two definitions                                as either you have a lot of things that                                you want to analyze later or you have so                                much data you don't know what to do with                                it                                and for reacts use case in that in that                                space we'd like to think of it as                                mission-critical data so a great example                                of how react is being used is in the                                Danish Health System for prescription                                cards all of the every Danish citizen                                has a prescription card and when they go                                you know to the to the doctor that                                doctor can check what other                                prescriptions have other doctors                                prescribed you and all of that data is                                stored in react and replicated three                                ways around all around Denmark so we                                like to think of it as most critical                                data should be in reality                                so in addition to that really critical                                data we have you know some really large                                startups using react so great examples                                boxer it's this walkie talkie app you've                                got you know you can do text and audio                                and pictures and send them to your                                friends they store all of that                                multimedia in a huge react cluster                                there's also bump technologies which is                                you know you pull out your phone and use                                the accelerometer and bump it against                                your friend and you can like share                                contact information and they store all                                those individual communications and                                react so we have a decent uptick in the                                mobile space as well as the some more                                traditional enterprises where you know                                extreme availability of the data and                                meaning that you won't lose it                                especially is where we see we see up to                                I think that beyond the peace of mind                                every out gives you about your data                                being available it also gives your                                system administrators your operations                                people the peace of mind it's incredibly                                easy to deploy we actually had one user                                of the open-source version of react have                                a node get turned off like somebody                                turned off the machine and they didn't                                even notice because they still had two                                machines in their cluster available so                                in terms of the the peace of mind that                                if you have a serious problem you can                                probably wait until the morning to get                                up and fix it when you're feeling fresh                                not in the middle of the night and and                                just the the the focus that we have on                                making sure that                                the system as a whole is stable as well                                as the individual machines and focus we                                do focus on performance but our our our                                most strong focus is reliability so how                                it distinguishes from other systems in                                the space is really that some systems                                 trade-off reliability for performance                                 and we don't feel that that's a                                 reasonable trade-off                                 that has happened less most of the stuff                                 is consumer applications or inside                                 enterprises but we have a number of                                 channel partners as well who will you                                 know support and so ryokan on pre-made                                 if research on something that says                                 oh I can't even begin to know                                 interesting thing about our product                                 being open source is a lot of people who                                 use it and we never hear about it                                 because they don't have a problem                                 so knowing knowing what everybody is                                 working on is is a little bit harder                                 than just when people come and say oh                                 we're we're using react um we're really                                 happy with it but I would say mobile is                                 probably our our most exciting one right                                 now                                 my future plans are looking into other                                 products that can be built with the same                                 framework we built ryokan we have the                                 beginning of a product called react pipe                                 which powers our MapReduce system with a                                 query system on top of the key value                                 store and and it lets you could let you                                 do things like real-time queries                                 continuous queries where you just                                 received a stream of events and process                                 them around the cluster in a distributed                                 way which is really cool                                 we're also we have in addition to key                                 value store there's a search product                                 that we want to build out more I'm                                 really excited about the possibilities                                 of how we can improve that and have a                                 compelling alternative to something like                                 elastic search but there's also this                                 what I'm giving my talk on you can do in                                 your client-side in your application you                                 can create these eventually consistent                                 data types but it's actually more                                 efficient to provide them on the server                                 side so we're looking at within the next                                 year or two putting that in there too                                 we're happy to                                 accept resumes from developers we                                 actually are our entire technical                                 support team are also developers and so                                 we provide the highest quality technical                                 support and I often say that they know                                 more about our product than the                                 engineers do but we're always accepting                                 developers we have lots of opportunities                                 for people who want to sell react to do                                 that and also you know for customers                                 we're looking for anybody who wants a                                 reliable linear scalable data store and                                 come talk to us we'd love to hear from                                 you
YouTube URL: https://www.youtube.com/watch?v=ghZ-B70LJdQ


