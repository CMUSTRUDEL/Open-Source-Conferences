Title: #FOSSBack 18: Emmanuel Lecharny – How to Manage a nearly One Million SLOCs Project ?
Publication date: 2018-06-26
Playlist: FOSS Backstage 2018
Description: 
	Working on an open source project is certainly not easy, especially when it starts to be big. Past the excitement of the beginning, how do we make it going on in the long run?

What about a project that grows bigger and bigger, up to a point we are facing hundred of thousands of single lines of code? What about testing it across multiple platforms? What about the toolings that are needed – debugging, data migration, etc.? What about the documentation?

This talk is about the few simple rules that make it easier, and successful. It also exposes a few traps that are not so easy to avoid, and how to keep people involved in the long run.

More critical, it will explain how to conduct the project so that it’s still relevant after 10 years, in a moving industry.

Read more:
https://18.foss-backstage.de/session/how-manage-nearly-one-million-slocs-project

About Emmanuel Lecharny:
https://18.foss-backstage.de/member/emmanuel-lecharny

Website: https://www.foss-backstage.de/
Twitter: https://twitter.com/Fossbckstg
LinkedIn: https://www.linkedin.com/groups/8653059/
Captions: 
	00:00:03,580 --> 00:00:09,940
good afternoon so we try to tell you a

00:00:07,870 --> 00:00:15,610
bit about what I've learned as a hard

00:00:09,940 --> 00:00:18,250
time working on a big project sad earth

00:00:15,610 --> 00:00:18,880
some missing pieces in into this

00:00:18,250 --> 00:00:22,090
presentation

00:00:18,880 --> 00:00:25,000
you probably have other expenses so feel

00:00:22,090 --> 00:00:26,460
free to complete what is missing it's

00:00:25,000 --> 00:00:29,710
not a real big deal

00:00:26,460 --> 00:00:31,539
so your project is like a cathedral and

00:00:29,710 --> 00:00:35,410
you have to be to make it shining and

00:00:31,539 --> 00:00:37,650
this is a difficult part it can quickly

00:00:35,410 --> 00:00:41,110
crumble if you don't do it correctly so

00:00:37,650 --> 00:00:46,450
the first question is our bigger project

00:00:41,110 --> 00:00:48,250
right now it's not necessarily have to

00:00:46,450 --> 00:00:51,720
be 1 million project to be a complex

00:00:48,250 --> 00:00:54,910
project 1 min online of course of course

00:00:51,720 --> 00:00:58,420
year I will miss your project by a

00:00:54,910 --> 00:01:00,899
number of single line of code that mean

00:00:58,420 --> 00:01:03,399
code without commands and blank lines

00:01:00,899 --> 00:01:06,250
this is not necessary the Alpha and

00:01:03,399 --> 00:01:08,920
Omega of measuring project complexity

00:01:06,250 --> 00:01:12,429
but it gives you an ID on our bigger

00:01:08,920 --> 00:01:16,090
project so here what I've done is

00:01:12,429 --> 00:01:18,880
gathering many Apache projects you have

00:01:16,090 --> 00:01:22,990
a site on a page on the Apache website

00:01:18,880 --> 00:01:26,409
when you can check the project size it

00:01:22,990 --> 00:01:28,869
sounds newt dot io and you can see that

00:01:26,409 --> 00:01:32,920
you have many different sizes smallest I

00:01:28,869 --> 00:01:36,369
have found is Shiro which is only 86,000

00:01:32,920 --> 00:01:38,679
and biggest as of today is OpenOffice

00:01:36,369 --> 00:01:42,039
which is more than six millions so you

00:01:38,679 --> 00:01:45,729
really quickly see that project are

00:01:42,039 --> 00:01:51,249
quite big those days Tomcat is final

00:01:45,729 --> 00:01:53,289
rate is 3000 it's it's it's big so if

00:01:51,249 --> 00:01:56,709
you imagine that 1 million of line of

00:01:53,289 --> 00:02:01,060
code project is big it's not that big

00:01:56,709 --> 00:02:03,880
actually and the risk that your project

00:02:01,060 --> 00:02:06,789
is pretty much looking like that if you

00:02:03,880 --> 00:02:07,890
don't manage it properly and you don't

00:02:06,789 --> 00:02:12,630
want that

00:02:07,890 --> 00:02:16,150
ok quite old I'm in my 50s now sorry I

00:02:12,630 --> 00:02:18,519
prefer to be my 20 but that's not ideal

00:02:16,150 --> 00:02:22,360
but that means I started to work in the

00:02:18,519 --> 00:02:24,430
90 80 and his 98 he the environment was

00:02:22,360 --> 00:02:27,930
totally different you did not have any

00:02:24,430 --> 00:02:33,430
IDE you were coding using VI or Emacs

00:02:27,930 --> 00:02:36,670
you didn't add bug trackers or very bad

00:02:33,430 --> 00:02:40,120
ones VCS version control was very

00:02:36,670 --> 00:02:43,690
primitive we were using a CCS or LCS you

00:02:40,120 --> 00:02:46,629
don't want to use it we didn't have mail

00:02:43,690 --> 00:02:48,670
or at least on projects because we did

00:02:46,629 --> 00:02:51,519
not have network either internet was not

00:02:48,670 --> 00:02:54,010
existing at least the way we are using

00:02:51,519 --> 00:02:57,700
it and knowing it right now so that was

00:02:54,010 --> 00:02:59,829
very different the big difference is

00:02:57,700 --> 00:03:02,980
that now we have internet we can search

00:02:59,829 --> 00:03:05,470
things if we don't know about a piece of

00:03:02,980 --> 00:03:07,690
software or library we can go on

00:03:05,470 --> 00:03:10,480
internet searching for it we are have a

00:03:07,690 --> 00:03:15,420
very good network everybody has a DSL

00:03:10,480 --> 00:03:18,099
that mean you can search something big

00:03:15,420 --> 00:03:20,739
distribution of Linux in a matter of

00:03:18,099 --> 00:03:25,209
minutes when it was ours when I started

00:03:20,739 --> 00:03:29,049
using in my internet on my telephone and

00:03:25,209 --> 00:03:32,109
it changed everything the other big

00:03:29,049 --> 00:03:35,079
change since the 1980 is open-source

00:03:32,109 --> 00:03:36,790
software movement and again that changed

00:03:35,079 --> 00:03:39,370
a lot of things the fact that we were

00:03:36,790 --> 00:03:42,010
able to discuss with all the people all

00:03:39,370 --> 00:03:48,389
around the planet about software makes

00:03:42,010 --> 00:03:52,510
you develop in a totally different way

00:03:48,389 --> 00:03:54,489
so we will see the way to go when it

00:03:52,510 --> 00:03:56,139
comes to manage big project and I would

00:03:54,489 --> 00:03:58,359
just like one example which is a project

00:03:56,139 --> 00:04:00,280
I am working on but it just to give you

00:03:58,359 --> 00:04:03,280
an idea of what we have done before

00:04:00,280 --> 00:04:06,040
going further discussing about the code

00:04:03,280 --> 00:04:07,780
what has to be done for the code and

00:04:06,040 --> 00:04:12,099
more important what is about the

00:04:07,780 --> 00:04:16,599
community so let me present you the

00:04:12,099 --> 00:04:18,880
Apache lyric project it's a certain of

00:04:16,599 --> 00:04:20,769
15 years old project right now that mean

00:04:18,880 --> 00:04:23,320
I have worked on it 13 years but it

00:04:20,769 --> 00:04:26,260
existed two years before and was before

00:04:23,320 --> 00:04:28,780
getting into a commission it's an LDAP

00:04:26,260 --> 00:04:30,039
server basically but we have added many

00:04:28,780 --> 00:04:33,039
of those things like

00:04:30,039 --> 00:04:35,229
studio which is LDAP browser and the

00:04:33,039 --> 00:04:37,270
elder PPI which is a replacement for

00:04:35,229 --> 00:04:41,159
jndi and others in your database that

00:04:37,270 --> 00:04:41,159
has been developed and so on and so on

00:04:41,189 --> 00:04:47,889
I've talked about slugs single line of

00:04:44,529 --> 00:04:49,539
code the project is nearly 1 million

00:04:47,889 --> 00:04:51,039
line of code and I'm just talking about

00:04:49,539 --> 00:04:53,080
the code not about the commands and

00:04:51,039 --> 00:04:56,770
blanks because all the white will be 1

00:04:53,080 --> 00:04:59,289
million and 600,000 and you can see that

00:04:56,770 --> 00:05:01,960
it is not one big monolith there are

00:04:59,289 --> 00:05:05,409
many sub project so main one is Apache

00:05:01,960 --> 00:05:08,529
IDs which is already a 1/4 million line

00:05:05,409 --> 00:05:12,460
of code the API which is a second

00:05:08,529 --> 00:05:14,649
business biggest part is 2,000 they have

00:05:12,460 --> 00:05:16,120
been split in order to be manageable and

00:05:14,649 --> 00:05:20,080
then you have studio which is a browser

00:05:16,120 --> 00:05:24,809
and so on so all of these pieces are

00:05:20,080 --> 00:05:30,059
using each other and we have to be

00:05:24,809 --> 00:05:32,949
careful to manage these things by

00:05:30,059 --> 00:05:35,229
dividing the different element in order

00:05:32,949 --> 00:05:38,669
to be able to manage them separately

00:05:35,229 --> 00:05:43,349
instead of having to manage a wall thing

00:05:38,669 --> 00:05:46,959
so the key is of course to make your

00:05:43,349 --> 00:05:51,550
project modular that means if you want

00:05:46,959 --> 00:05:53,800
to develop one side without breaking it

00:05:51,550 --> 00:05:56,050
with every other parts it's easier if

00:05:53,800 --> 00:05:58,870
it's separated of course you have to

00:05:56,050 --> 00:06:00,909
design an API properly but as soon as

00:05:58,870 --> 00:06:03,490
you have done that it's much easier you

00:06:00,909 --> 00:06:06,009
can test it uniquely without breaking

00:06:03,490 --> 00:06:09,639
anything and once the tests are okay you

00:06:06,009 --> 00:06:11,339
can include it in 2000 project so here

00:06:09,639 --> 00:06:14,649
you have a quick vision on how its

00:06:11,339 --> 00:06:16,659
organized at the center of it you have

00:06:14,649 --> 00:06:20,729
elder PPI which is based on Mina which

00:06:16,659 --> 00:06:24,129
is an author project it's a network i/o

00:06:20,729 --> 00:06:25,599
subsystem and above it you have Apache

00:06:24,129 --> 00:06:27,099
IDs depending on the API which is

00:06:25,599 --> 00:06:29,319
depending on Mina and it's depending

00:06:27,099 --> 00:06:31,240
maybe but which is a database and also

00:06:29,319 --> 00:06:33,009
jellybean which don't know that and so

00:06:31,240 --> 00:06:37,809
on and so on so you can see you have

00:06:33,009 --> 00:06:41,139
modular elements and each model element

00:06:37,809 --> 00:06:42,270
itself is also built in two different

00:06:41,139 --> 00:06:46,380
things

00:06:42,270 --> 00:06:49,050
and the key is love layers you don't

00:06:46,380 --> 00:06:53,430
build elements without designing

00:06:49,050 --> 00:06:57,120
different kind of flavor and here is

00:06:53,430 --> 00:07:00,860
what we have for Apache das the top

00:06:57,120 --> 00:07:03,960
layer is a network and then you have a

00:07:00,860 --> 00:07:06,420
back-end subsystem which has an API

00:07:03,960 --> 00:07:08,720
called intercept of savage chain and

00:07:06,420 --> 00:07:11,760
then under the last layer is a database

00:07:08,720 --> 00:07:14,490
it's not all in Mina which is a network

00:07:11,760 --> 00:07:17,760
network part then we have also layers so

00:07:14,490 --> 00:07:20,010
each component each module is their it

00:07:17,760 --> 00:07:24,170
and it's very important because again

00:07:20,010 --> 00:07:24,170
between each layer you have an API

00:07:25,520 --> 00:07:30,000
certain things layer is one thing so one

00:07:28,350 --> 00:07:32,310
thing is to be able to add some

00:07:30,000 --> 00:07:34,740
components here we are talking about

00:07:32,310 --> 00:07:37,020
plugins plugins is very helpful you can

00:07:34,740 --> 00:07:39,690
think about maven for instance which is

00:07:37,020 --> 00:07:42,210
big machine but methods have many

00:07:39,690 --> 00:07:43,950
plugins and plugins help maven to become

00:07:42,210 --> 00:07:45,540
more powerful you want to do something

00:07:43,950 --> 00:07:48,060
specific you don't have to know the

00:07:45,540 --> 00:07:51,810
inners of maven you just have to know

00:07:48,060 --> 00:07:54,830
how to address those elements and sees

00:07:51,810 --> 00:07:58,920
what a plugins is good for we are using

00:07:54,830 --> 00:08:03,650
many plugins in Apache es in order to be

00:07:58,920 --> 00:08:08,400
able to have modular and easier

00:08:03,650 --> 00:08:09,930
evolution system ok that was just to

00:08:08,400 --> 00:08:12,410
give you an idea of what we have done on

00:08:09,930 --> 00:08:14,640
Apache ideas just to tell you ok I'm not

00:08:12,410 --> 00:08:17,490
trying to sell you a patch Ilyas

00:08:14,640 --> 00:08:19,020
whatever just for me an example I'm also

00:08:17,490 --> 00:08:21,270
working on open LDAP which is a

00:08:19,020 --> 00:08:24,060
different system still an LDAP server

00:08:21,270 --> 00:08:27,330
which use a different material modular

00:08:24,060 --> 00:08:31,020
structure but still it's all all the

00:08:27,330 --> 00:08:34,920
same kind of code so we are going to

00:08:31,020 --> 00:08:38,010
talk about the code now this is my

00:08:34,920 --> 00:08:39,840
computer in front of my fan anyway the

00:08:38,010 --> 00:08:42,060
first come out I will say that you have

00:08:39,840 --> 00:08:43,950
to make your code readable if you can't

00:08:42,060 --> 00:08:46,710
read the code it's much more difficult

00:08:43,950 --> 00:08:49,830
for people to get into the code and when

00:08:46,710 --> 00:08:52,650
I mean readable it means don't necessary

00:08:49,830 --> 00:08:54,930
uses mother's language that has been out

00:08:52,650 --> 00:08:55,270
in the last 2 years or 3 years it's a

00:08:54,930 --> 00:08:58,330
smart

00:08:55,270 --> 00:09:00,580
a lot of things into it type control and

00:08:58,330 --> 00:09:03,610
so on but at some point you want to be

00:09:00,580 --> 00:09:06,940
able to get some new comers who are not

00:09:03,610 --> 00:09:09,160
necessary knowledge knowledge about this

00:09:06,940 --> 00:09:12,040
language and this is probably was a

00:09:09,160 --> 00:09:14,440
common language like Java and C are

00:09:12,040 --> 00:09:20,830
still using used to them because they

00:09:14,440 --> 00:09:22,900
are easy to access second things it's

00:09:20,830 --> 00:09:25,000
good to have a readable code but code is

00:09:22,900 --> 00:09:26,470
not all you have to come on the code I

00:09:25,000 --> 00:09:28,870
know there is a controversy about

00:09:26,470 --> 00:09:32,830
commands commands I use less commands

00:09:28,870 --> 00:09:34,840
don't get older I mean if you have a

00:09:32,830 --> 00:09:36,910
commands that he was good enough two

00:09:34,840 --> 00:09:38,230
years ago but the code has change and

00:09:36,910 --> 00:09:42,040
the comment is still the same then the

00:09:38,230 --> 00:09:44,050
comment is not in the same page it's not

00:09:42,040 --> 00:09:45,730
commenting what the code is doing who

00:09:44,050 --> 00:09:47,110
cares because anyway you are not

00:09:45,730 --> 00:09:48,730
executing the commands you are executing

00:09:47,110 --> 00:09:50,440
the code so it's easy to fix the

00:09:48,730 --> 00:09:53,980
commands in the command is bad it's not

00:09:50,440 --> 00:09:55,900
breaking the code your code anyway so be

00:09:53,980 --> 00:09:58,870
sure that you come out your code and

00:09:55,900 --> 00:10:02,050
even for you of pieces of the epithelia

00:09:58,870 --> 00:10:03,580
server i wrote six or seven years ago if

00:10:02,050 --> 00:10:05,650
i read the code I don't remember what

00:10:03,580 --> 00:10:08,050
I've done back then I have to read the

00:10:05,650 --> 00:10:10,420
comments I've added to remember yes I

00:10:08,050 --> 00:10:13,630
remember C C's because I babble and

00:10:10,420 --> 00:10:17,410
always the same story so don't remove

00:10:13,630 --> 00:10:20,470
commands from the code and add them this

00:10:17,410 --> 00:10:23,260
is a good example here is a page of a

00:10:20,470 --> 00:10:24,990
note book written by mathematician and

00:10:23,260 --> 00:10:28,690
engineer mathematicians Raveena

00:10:24,990 --> 00:10:31,600
Ramanujan he never committed anything

00:10:28,690 --> 00:10:36,430
into his page because it was just about

00:10:31,600 --> 00:10:38,800
writing the results an English

00:10:36,430 --> 00:10:42,520
mathematician spent 10 years of his life

00:10:38,800 --> 00:10:44,860
decoding those documents not necessarily

00:10:42,520 --> 00:10:46,510
the best idea so you could without

00:10:44,860 --> 00:10:50,890
comment it's pretty much like a math

00:10:46,510 --> 00:10:55,270
book without any explanation of course

00:10:50,890 --> 00:10:57,280
you may not agree doesn't matter and

00:10:55,270 --> 00:10:59,500
also a way to have you caught being

00:10:57,280 --> 00:11:04,450
readable it's to use a formatter

00:10:59,500 --> 00:11:06,880
that in some way removes the concern but

00:11:04,450 --> 00:11:09,080
you are somebody pushing some patches

00:11:06,880 --> 00:11:10,700
and the patches are not formatting

00:11:09,080 --> 00:11:11,930
same way than those a part of the

00:11:10,700 --> 00:11:14,060
project doesn't matter because you

00:11:11,930 --> 00:11:16,700
integrate the patches and then you

00:11:14,060 --> 00:11:20,090
execute the formatter and bam your card

00:11:16,700 --> 00:11:22,370
is still on the same style so and also

00:11:20,090 --> 00:11:24,200
if somebody told like you start it

00:11:22,370 --> 00:11:26,750
doesn't matter again you can't format

00:11:24,200 --> 00:11:28,940
itself but as soon as it's injected into

00:11:26,750 --> 00:11:31,460
you your code base you have your

00:11:28,940 --> 00:11:34,910
formatter and it's easier to provide a

00:11:31,460 --> 00:11:37,400
format files that can be injected into

00:11:34,910 --> 00:11:39,440
each IDE because then you don't have to

00:11:37,400 --> 00:11:42,470
take care of those things which are

00:11:39,440 --> 00:11:44,090
pretty painful one of the reason why the

00:11:42,470 --> 00:11:48,230
formatter is important when you do add

00:11:44,090 --> 00:11:50,810
if it's extremely painful to have to go

00:11:48,230 --> 00:11:53,600
through many lines that are different

00:11:50,810 --> 00:11:56,510
because one guy's using tabs other guy

00:11:53,600 --> 00:12:00,980
is using space or you have new lines all

00:11:56,510 --> 00:12:04,010
over another aspect which is quite

00:12:00,980 --> 00:12:06,580
annoying and I must admit that an open

00:12:04,010 --> 00:12:09,230
LDAP it's something that is annoying me

00:12:06,580 --> 00:12:10,790
for some reasons variables are very

00:12:09,230 --> 00:12:13,190
short in opening up like one or two

00:12:10,790 --> 00:12:15,260
letters it's very difficult for me and

00:12:13,190 --> 00:12:18,380
probably for every coders that does not

00:12:15,260 --> 00:12:23,420
know the code very very well what PT

00:12:18,380 --> 00:12:25,730
means or what CN means I mean it's not

00:12:23,420 --> 00:12:29,600
talking so you're better using better

00:12:25,730 --> 00:12:32,300
name like it's a pointer colic pointer

00:12:29,600 --> 00:12:35,420
it's easier I mean we don't have like in

00:12:32,300 --> 00:12:37,970
1980 to be limited by 16 kilobyte of

00:12:35,420 --> 00:12:41,120
memory you have 16 gigabyte on any

00:12:37,970 --> 00:12:45,530
computer those days so I mean you are

00:12:41,120 --> 00:12:49,100
not too compiler you are reader all the

00:12:45,530 --> 00:12:53,480
things that helps check your code it's

00:12:49,100 --> 00:12:55,820
it's easy to remove to have some code

00:12:53,480 --> 00:12:57,350
that will generate a null pointer

00:12:55,820 --> 00:12:59,990
exception just because you have not

00:12:57,350 --> 00:13:01,970
checked something and any code checker

00:12:59,990 --> 00:13:05,120
will tell you okay here I'm not sure

00:13:01,970 --> 00:13:07,490
that it's good your verbal has not been

00:13:05,120 --> 00:13:10,820
in initialized and you may I get a new

00:13:07,490 --> 00:13:14,060
pointer exception its Savior bottom many

00:13:10,820 --> 00:13:17,600
times I've been ran it on on the project

00:13:14,060 --> 00:13:19,850
and I've found dogs that may have been

00:13:17,600 --> 00:13:22,259
found by users later but it's still

00:13:19,850 --> 00:13:25,619
better that you are finding people

00:13:22,259 --> 00:13:28,970
releasing it and the last part of the

00:13:25,619 --> 00:13:31,979
code code which is important is logging

00:13:28,970 --> 00:13:34,979
as soon as your code is released it goes

00:13:31,979 --> 00:13:37,290
in production of free and then this is

00:13:34,979 --> 00:13:40,139
where it blows and when it blows you

00:13:37,290 --> 00:13:41,910
want to know why so this is the logging

00:13:40,139 --> 00:13:44,459
that we provide you with this

00:13:41,910 --> 00:13:47,479
information you know that user don't

00:13:44,459 --> 00:13:50,309
give a lot of information when they say

00:13:47,479 --> 00:13:52,350
ok my code is not working and you don't

00:13:50,309 --> 00:13:54,959
know anything if you can tell them ok

00:13:52,350 --> 00:13:56,249
can you provide me the logs you get some

00:13:54,959 --> 00:14:00,539
informations that are valuable to

00:13:56,249 --> 00:14:03,199
analyze what's going on it's difficult

00:14:00,539 --> 00:14:06,869
to write a good logging system I mean

00:14:03,199 --> 00:14:09,329
you might generate too much logs and

00:14:06,869 --> 00:14:14,089
then it's difficult to analyze so be

00:14:09,329 --> 00:14:17,189
very careful it takes time but it helps

00:14:14,089 --> 00:14:18,899
if we get out of the code then we're

00:14:17,189 --> 00:14:20,999
going to talk about the toolings and

00:14:18,899 --> 00:14:25,259
everything which is around the code and

00:14:20,999 --> 00:14:28,889
your IDE is important again we are not

00:14:25,259 --> 00:14:33,989
in the 80s and using VI or Emacs right

00:14:28,889 --> 00:14:37,249
now it's I mean it's not any more good

00:14:33,989 --> 00:14:41,809
ID ID are offering a lot more than just

00:14:37,249 --> 00:14:45,149
adding codes are just also helping you

00:14:41,809 --> 00:14:46,949
remodelling refactoring your code they

00:14:45,149 --> 00:14:51,779
are integrated with debugging tools

00:14:46,949 --> 00:14:54,389
something that VI is not so whatever the

00:14:51,779 --> 00:14:56,279
ID you prefer it can be intelligent be

00:14:54,389 --> 00:14:58,679
eclipsed can be NetBeans whatever works

00:14:56,279 --> 00:15:01,529
I mean as soon as you are comfortable be

00:14:58,679 --> 00:15:05,459
sure that your system can be built on

00:15:01,529 --> 00:15:10,100
any of those IDE and be sure that the ID

00:15:05,459 --> 00:15:10,100
is also connected with your build system

00:15:10,399 --> 00:15:15,480
version control is absolutely critical

00:15:12,569 --> 00:15:19,679
right now you can't develop a system

00:15:15,480 --> 00:15:22,709
without a source control system I'm

00:15:19,679 --> 00:15:25,949
using it right now not that I love get

00:15:22,709 --> 00:15:28,169
or whatever but it's today's control

00:15:25,949 --> 00:15:31,049
system it's much better than subversion

00:15:28,169 --> 00:15:32,970
that I was using before it's not a fight

00:15:31,049 --> 00:15:35,760
I mean there is no mean fighting gate

00:15:32,970 --> 00:15:39,120
versus subversion whatever

00:15:35,760 --> 00:15:41,940
you are going into a project it's likely

00:15:39,120 --> 00:15:44,070
to be get anyway so better use it than

00:15:41,940 --> 00:15:48,360
ignoring it and stick going on with

00:15:44,070 --> 00:15:53,550
subversion or whatever CBS CBS died by

00:15:48,360 --> 00:15:55,470
the way build the built system is also

00:15:53,550 --> 00:15:57,120
one of the cream part of a big project

00:15:55,470 --> 00:15:59,880
you have to have something which is

00:15:57,120 --> 00:16:02,310
available can be Navin can be great can

00:15:59,880 --> 00:16:04,890
be whatever works but as soon as you

00:16:02,310 --> 00:16:07,140
change some code you want to run the

00:16:04,890 --> 00:16:08,040
build system to see if you get some

00:16:07,140 --> 00:16:11,460
issue or not

00:16:08,040 --> 00:16:14,340
quickly on your computer it can be on a

00:16:11,460 --> 00:16:16,560
CI doesn't matter I don't really think

00:16:14,340 --> 00:16:19,410
that - CI is a good place to test your

00:16:16,560 --> 00:16:21,810
code before committing you first have to

00:16:19,410 --> 00:16:23,730
check on your computer and as soon as

00:16:21,810 --> 00:16:26,610
it's ok you can commit it the CI is

00:16:23,730 --> 00:16:29,430
there to catch other issues like does it

00:16:26,610 --> 00:16:34,950
work on Windows and Linux and Mac OS or

00:16:29,430 --> 00:16:35,940
whatever then you have something that

00:16:34,950 --> 00:16:37,950
works good

00:16:35,940 --> 00:16:41,580
you have 12 anistar as soon as you don't

00:16:37,950 --> 00:16:44,430
deliver in API inserts are the best

00:16:41,580 --> 00:16:47,400
thing for users they just have to to

00:16:44,430 --> 00:16:50,420
download a PM or Debian installer or

00:16:47,400 --> 00:16:53,340
whatever works for NSI on Windows and

00:16:50,420 --> 00:16:55,410
install it on their computer this is the

00:16:53,340 --> 00:16:58,020
way it works if you don't if you don't

00:16:55,410 --> 00:17:01,500
provide a APM when your car is quite

00:16:58,020 --> 00:17:06,329
difficult to use of coffee it's an API

00:17:01,500 --> 00:17:11,250
that's a different story now you can go

00:17:06,329 --> 00:17:12,839
up higher level IP and license when you

00:17:11,250 --> 00:17:14,870
are delivering a project you are

00:17:12,839 --> 00:17:17,310
generally integrating some third-party

00:17:14,870 --> 00:17:20,100
libraries and then you have to check if

00:17:17,310 --> 00:17:22,050
the saucer party libraries are good for

00:17:20,100 --> 00:17:24,720
your project compared to your license

00:17:22,050 --> 00:17:27,839
for instance apache license is not

00:17:24,720 --> 00:17:29,490
compatible with LGPL or GPL so you have

00:17:27,839 --> 00:17:32,430
to be very careful that any of your

00:17:29,490 --> 00:17:35,100
dependencies are compatible with apache

00:17:32,430 --> 00:17:37,980
license and what i mean certainly

00:17:35,100 --> 00:17:39,660
Betances i also talked about transitive

00:17:37,980 --> 00:17:41,940
dependencies you have tools that tell

00:17:39,660 --> 00:17:43,920
you okay this library is itself using

00:17:41,940 --> 00:17:45,270
this library which is itself a bla bla

00:17:43,920 --> 00:17:47,280
bla bla and you have to check all of

00:17:45,270 --> 00:17:49,320
those and you better do it before

00:17:47,280 --> 00:17:52,110
releasing because when you when

00:17:49,320 --> 00:17:54,960
release it's too late to be extremely

00:17:52,110 --> 00:17:57,389
faithful to have to roll back a release

00:17:54,960 --> 00:17:59,759
just because there's some incompatible

00:17:57,389 --> 00:18:02,580
license besides the fact that it could

00:17:59,759 --> 00:18:06,029
cause some issues legal issues with big

00:18:02,580 --> 00:18:08,309
companies so check your IP check

00:18:06,029 --> 00:18:10,710
licenses before I can have an

00:18:08,309 --> 00:18:13,889
interesting story once you know

00:18:10,710 --> 00:18:18,169
something like seven years ago some guy

00:18:13,889 --> 00:18:22,409
pushed some cards okay correct for some

00:18:18,169 --> 00:18:24,659
word crypto things and here is the code

00:18:22,409 --> 00:18:26,940
I want to push to your rapist traitor

00:18:24,659 --> 00:18:30,120
fine interesting we are missing it so

00:18:26,940 --> 00:18:34,529
let's check it and what I did don't you

00:18:30,120 --> 00:18:37,289
I just took a piece of the code and went

00:18:34,529 --> 00:18:40,049
into Google and searched it and stron

00:18:37,289 --> 00:18:43,620
Jennifer found the exact same code but

00:18:40,049 --> 00:18:46,500
with son license on top of it so get

00:18:43,620 --> 00:18:47,820
just rename the functions rename the

00:18:46,500 --> 00:18:51,360
variable so that the structure was

00:18:47,820 --> 00:18:53,909
exactly the same so you have to do your

00:18:51,360 --> 00:18:58,679
due diligence and it's it's painful but

00:18:53,909 --> 00:19:00,929
you really have to do it Wiki is the

00:18:58,679 --> 00:19:06,690
place where you will put your internal

00:19:00,929 --> 00:19:10,289
documentation the point is if you have

00:19:06,690 --> 00:19:12,929
some complex structures complex code you

00:19:10,289 --> 00:19:15,000
want to be able to explain it once

00:19:12,929 --> 00:19:17,220
instead of explaining key explain it

00:19:15,000 --> 00:19:19,799
every time someone is asking you about

00:19:17,220 --> 00:19:21,690
it it's easier to say okay if you want

00:19:19,799 --> 00:19:24,059
to know how it works then go to this

00:19:21,690 --> 00:19:27,450
page on the wiki with it and you are

00:19:24,059 --> 00:19:30,960
done the real difficulty with wiki is to

00:19:27,450 --> 00:19:32,610
keep it updated if you don't it don't do

00:19:30,960 --> 00:19:34,789
it for others do it for you sir

00:19:32,610 --> 00:19:37,409
sometimes it's extremely helpful to

00:19:34,789 --> 00:19:40,139
document and explain what you have done

00:19:37,409 --> 00:19:45,300
to see if you have not missed or forgot

00:19:40,139 --> 00:19:46,520
anything in your code bugs

00:19:45,300 --> 00:19:48,470
[Music]

00:19:46,520 --> 00:19:50,600
there's not much things to say about

00:19:48,470 --> 00:19:53,420
bugs but you have to have a good tracker

00:19:50,600 --> 00:19:55,190
and also you have to respect bugs bugs

00:19:53,420 --> 00:19:57,590
are saying that there's something wrong

00:19:55,190 --> 00:20:01,670
in your software even if the bugs is

00:19:57,590 --> 00:20:04,100
invalid because it's it's not really a

00:20:01,670 --> 00:20:05,810
bug it's some user not using your

00:20:04,100 --> 00:20:07,880
software correctly does that mean you

00:20:05,810 --> 00:20:09,590
maybe you API is not correct maybe your

00:20:07,880 --> 00:20:13,970
documentation is not correct or whatever

00:20:09,590 --> 00:20:18,610
so fixed bugs check check them regularly

00:20:13,970 --> 00:20:23,500
and don't let them stay for years

00:20:18,610 --> 00:20:23,500
meaning list is your main communication

00:20:24,130 --> 00:20:29,990
point at least at Apache but should be

00:20:27,260 --> 00:20:31,850
the same thing we are working with team

00:20:29,990 --> 00:20:35,810
all over the planet now it's it's

00:20:31,850 --> 00:20:38,840
command to work with guys in Pacific

00:20:35,810 --> 00:20:40,850
Coast in USA Australia and you don't

00:20:38,840 --> 00:20:43,430
want to walk up at 3 a.m. just to have a

00:20:40,850 --> 00:20:44,930
conversation with someone who is in

00:20:43,430 --> 00:20:47,150
Australia for instance it's not very

00:20:44,930 --> 00:20:49,490
funny and if you have dreams in all over

00:20:47,150 --> 00:20:52,460
the planet and mailing list because it's

00:20:49,490 --> 00:20:53,840
an sakulos is a way to go plus you can

00:20:52,460 --> 00:20:56,480
search making lists it's extremely

00:20:53,840 --> 00:21:01,640
difficult to search a voice recorded on

00:20:56,480 --> 00:21:03,800
a on a talk once it could be interesting

00:21:01,640 --> 00:21:06,110
with that if you want to do some new

00:21:03,800 --> 00:21:08,540
some changes in your code don't refrain

00:21:06,110 --> 00:21:11,270
you to experiment you can branch easily

00:21:08,540 --> 00:21:13,850
with source code and you can have big

00:21:11,270 --> 00:21:16,670
experiment or smaller experiment was the

00:21:13,850 --> 00:21:19,010
key here is to check something and shows

00:21:16,670 --> 00:21:20,810
a community how it works and if it ok

00:21:19,010 --> 00:21:22,990
then you integrate your experiment into

00:21:20,810 --> 00:21:25,580
your code into your code if it's not

00:21:22,990 --> 00:21:28,280
good enough you can ditch it it's not a

00:21:25,580 --> 00:21:30,530
big deal but at least you give an

00:21:28,280 --> 00:21:36,680
opportunity for anyone to try something

00:21:30,530 --> 00:21:39,140
different and also this is something for

00:21:36,680 --> 00:21:42,260
all projects the cuts done to stabilize

00:21:39,140 --> 00:21:42,500
and at some point nobody want to touch

00:21:42,260 --> 00:21:44,180
it

00:21:42,500 --> 00:21:47,420
sometime it's a good idea to rewrite

00:21:44,180 --> 00:21:49,940
part of your code even your wor code for

00:21:47,420 --> 00:21:53,030
some part of Apache yes we will rewrote

00:21:49,940 --> 00:21:55,610
it four times the language you are using

00:21:53,030 --> 00:21:58,490
like Java for instance is also evolving

00:21:55,610 --> 00:22:00,390
so what we did in Java for is not any

00:21:58,490 --> 00:22:03,600
more efficient in Java 9 out of

00:22:00,390 --> 00:22:06,210
ten it might be a good time to just use

00:22:03,600 --> 00:22:12,720
new features to rewrite the code which

00:22:06,210 --> 00:22:16,230
is antiquated two things that I want to

00:22:12,720 --> 00:22:21,809
tell about code you might have a very

00:22:16,230 --> 00:22:24,150
simple code which is you know on running

00:22:21,809 --> 00:22:26,549
on one thread it's on several sites not

00:22:24,150 --> 00:22:28,350
always the case every time you have in

00:22:26,549 --> 00:22:30,420
synchronicity into your code it's going

00:22:28,350 --> 00:22:32,490
to be complex and difficult so try to

00:22:30,420 --> 00:22:35,520
limit it as much as possible sometimes

00:22:32,490 --> 00:22:37,230
not possible anyway and the second point

00:22:35,520 --> 00:22:41,870
is security security when I'm talking

00:22:37,230 --> 00:22:41,870
about security is some time you have

00:22:42,290 --> 00:22:47,820
security issues in your code and that

00:22:45,030 --> 00:22:52,770
deserves some very important treatment

00:22:47,820 --> 00:22:57,230
you open a CVE which will be shown on a

00:22:52,770 --> 00:22:59,820
public mailing list later you have to be

00:22:57,230 --> 00:23:02,220
efficient you have to be fast to fix

00:22:59,820 --> 00:23:04,500
your security issues if you don't fix it

00:23:02,220 --> 00:23:07,140
than me at some point user will be hit

00:23:04,500 --> 00:23:11,059
by it and that's not what we want it's

00:23:07,140 --> 00:23:15,570
put a very bad light on your project

00:23:11,059 --> 00:23:17,429
okay I will talk now about much more

00:23:15,570 --> 00:23:23,220
important things our home to manage a

00:23:17,429 --> 00:23:24,990
community around a big project if you

00:23:23,220 --> 00:23:27,830
have an open source project what you

00:23:24,990 --> 00:23:31,679
want is to be able to attract new

00:23:27,830 --> 00:23:33,690
developers for a big project is more

00:23:31,679 --> 00:23:36,990
difficult because of course so code is

00:23:33,690 --> 00:23:38,370
impressive entering into a project which

00:23:36,990 --> 00:23:40,470
is 1 million I've got two or three

00:23:38,370 --> 00:23:42,720
million loyal code it's quite difficult

00:23:40,470 --> 00:23:45,090
you don't know where to start with so

00:23:42,720 --> 00:23:46,860
the first thing to do is ok attract

00:23:45,090 --> 00:23:48,450
people yeah it's very interesting you

00:23:46,860 --> 00:23:50,280
can improve this part of your code if

00:23:48,450 --> 00:23:53,640
you are interesting and I can help you

00:23:50,280 --> 00:23:56,250
this is a way to do it and it's not easy

00:23:53,640 --> 00:23:58,080
because we prefer code instead of

00:23:56,250 --> 00:24:00,510
talking to people and Pat them in the

00:23:58,080 --> 00:24:03,270
back but you have to do it that's so

00:24:00,510 --> 00:24:06,900
that's part of your duty as a project

00:24:03,270 --> 00:24:09,600
manager or whatever you are one thing I

00:24:06,900 --> 00:24:11,429
just hate about code and about people

00:24:09,600 --> 00:24:13,490
who explained that everything in the

00:24:11,429 --> 00:24:16,279
code here is people

00:24:13,490 --> 00:24:18,409
telling you read the code if you just

00:24:16,279 --> 00:24:20,510
ask you a question about how it's doing

00:24:18,409 --> 00:24:23,390
this and that you just have to read the

00:24:20,510 --> 00:24:25,190
code that come on guys I can read the

00:24:23,390 --> 00:24:27,140
code but the cut can be complex and if

00:24:25,190 --> 00:24:29,330
the code is not come out or or if there

00:24:27,140 --> 00:24:31,510
is no specification it's very likely

00:24:29,330 --> 00:24:34,640
that your code is bringing some

00:24:31,510 --> 00:24:37,190
semantics that I don't know it's it's

00:24:34,640 --> 00:24:39,320
not my code and I will spend ten times

00:24:37,190 --> 00:24:42,350
the time to understand what you have

00:24:39,320 --> 00:24:44,809
done when you could have explained it in

00:24:42,350 --> 00:24:47,330
two or three minutes I'm not stupid

00:24:44,809 --> 00:24:50,390
but I'm smarter if you explain me what

00:24:47,330 --> 00:24:52,700
you have done so don't let people on

00:24:50,390 --> 00:24:55,820
your project to tell others read the

00:24:52,700 --> 00:25:01,760
code it's not a way to manage a project

00:24:55,820 --> 00:25:04,039
a certain aspect of a project expecially

00:25:01,760 --> 00:25:07,700
on open source project is that you have

00:25:04,039 --> 00:25:09,500
people coming in create helping you for

00:25:07,700 --> 00:25:11,029
one two years three years and at some

00:25:09,500 --> 00:25:14,029
point they are doing something different

00:25:11,029 --> 00:25:17,090
it's that's fine that's the way we are I

00:25:14,029 --> 00:25:19,850
mean you are not committed to a piece of

00:25:17,090 --> 00:25:22,460
code for forever the thing is that as

00:25:19,850 --> 00:25:24,620
soon as a person has gone then you have

00:25:22,460 --> 00:25:26,960
to catch up with what you have done

00:25:24,620 --> 00:25:30,320
because this is now your code so you

00:25:26,960 --> 00:25:32,149
have to find someone to catch up this is

00:25:30,320 --> 00:25:36,110
through one of the reason why it has to

00:25:32,149 --> 00:25:40,010
be documented at some point another

00:25:36,110 --> 00:25:42,200
difficult a space is ego we are open

00:25:40,010 --> 00:25:45,940
source people so we do have some ego at

00:25:42,200 --> 00:25:49,100
some point and this has to be you know

00:25:45,940 --> 00:25:52,630
moderator that's good to have any a good

00:25:49,100 --> 00:25:56,149
ego big ego but you have to be careful

00:25:52,630 --> 00:26:01,450
too much ego just clean your project so

00:25:56,149 --> 00:26:01,450
keep it under you know a certain level

00:26:01,840 --> 00:26:06,669
users of your project under gnomes or

00:26:04,640 --> 00:26:09,350
trolls there are people that are

00:26:06,669 --> 00:26:10,970
explaining you that they are not very

00:26:09,350 --> 00:26:12,919
happy with the way your project is

00:26:10,970 --> 00:26:15,470
working and also there are some

00:26:12,919 --> 00:26:17,779
sometimes and more more frequently that

00:26:15,470 --> 00:26:20,960
you think very happy with your project

00:26:17,779 --> 00:26:24,049
and that's a turkey or a be happy to

00:26:20,960 --> 00:26:25,419
have users that give you some some good

00:26:24,049 --> 00:26:27,729
or bad

00:26:25,419 --> 00:26:29,829
feedbacks good feedback the old way

00:26:27,729 --> 00:26:31,809
equals way is good for you because it

00:26:29,829 --> 00:26:34,570
makes you feel like you have done

00:26:31,809 --> 00:26:36,279
something good but bad backs it's also a

00:26:34,570 --> 00:26:37,509
sign that something is not very good in

00:26:36,279 --> 00:26:41,229
your project and you probably have to

00:26:37,509 --> 00:26:43,299
fix it so take your user Anna as an

00:26:41,229 --> 00:26:45,279
asset to your project if you don't have

00:26:43,299 --> 00:26:50,169
users that mean you you don't have a

00:26:45,279 --> 00:26:55,749
project so what about roles in the

00:26:50,169 --> 00:26:57,969
project usually you just decide that

00:26:55,749 --> 00:27:00,129
someone will be the release manager

00:26:57,969 --> 00:27:04,869
another one will be the project manager

00:27:00,129 --> 00:27:06,820
and the one will be part of anyway you

00:27:04,869 --> 00:27:08,799
have many people on the project you want

00:27:06,820 --> 00:27:11,169
everyone to be responsible for one part

00:27:08,799 --> 00:27:14,320
and the best of it is just to have

00:27:11,169 --> 00:27:16,029
people taking responsibility for one

00:27:14,320 --> 00:27:17,649
part ok I'm going to do the risk

00:27:16,029 --> 00:27:18,159
management for the next two years that's

00:27:17,649 --> 00:27:20,739
fine

00:27:18,159 --> 00:27:23,769
if you force somebody to do it then at

00:27:20,739 --> 00:27:24,549
some point you might leave so manager

00:27:23,769 --> 00:27:27,789
works correctly

00:27:24,549 --> 00:27:29,469
7 points don't overdo just because you

00:27:27,789 --> 00:27:30,789
are in the project for 10 years that

00:27:29,469 --> 00:27:32,440
does not mean you are going to do

00:27:30,789 --> 00:27:35,349
everything you are not going to

00:27:32,440 --> 00:27:37,929
micromanage people know whether you are

00:27:35,349 --> 00:27:40,329
confident with the capacity to manage

00:27:37,929 --> 00:27:43,209
the parts are taking responsibility of

00:27:40,329 --> 00:27:44,440
and that sign or you are not and you are

00:27:43,209 --> 00:27:46,119
not at some point you are going to be

00:27:44,440 --> 00:27:48,849
alone on your project because you are

00:27:46,119 --> 00:27:51,989
doing everything don't do that and on a

00:27:48,849 --> 00:27:54,729
big project anyway it's not possible

00:27:51,989 --> 00:27:57,339
welcome contributions they are good for

00:27:54,729 --> 00:28:00,669
your project Evans the smallest type who

00:27:57,339 --> 00:28:02,169
fixes a good things and a welcoming

00:28:00,669 --> 00:28:04,469
contribution is also a way to be

00:28:02,169 --> 00:28:07,389
attractive that mean you are inclusive

00:28:04,469 --> 00:28:09,999
very long discussion we had on many

00:28:07,389 --> 00:28:12,999
other projects but should we accept

00:28:09,999 --> 00:28:14,950
somebody as a committer or not what a

00:28:12,999 --> 00:28:16,899
question I mean of course you should

00:28:14,950 --> 00:28:19,359
even one commit should be enough to be a

00:28:16,899 --> 00:28:20,799
committer the key here is if you want to

00:28:19,359 --> 00:28:23,489
control the project so that bad

00:28:20,799 --> 00:28:26,139
committers we say bad computers stupid

00:28:23,489 --> 00:28:28,619
computers that are not as good as the

00:28:26,139 --> 00:28:32,679
other ones might

00:28:28,619 --> 00:28:35,409
I'm your project well so you just can

00:28:32,679 --> 00:28:37,779
really ask them to revert and if you are

00:28:35,409 --> 00:28:41,739
very very careful you can just switch

00:28:37,779 --> 00:28:44,859
your RTC reviews and commit but in any

00:28:41,739 --> 00:28:47,590
case with using committee contribution

00:28:44,859 --> 00:28:49,899
or just putting a high barrier for

00:28:47,590 --> 00:28:53,080
commuter ship is a mistake

00:28:49,899 --> 00:28:55,659
so the easier you make your commit

00:28:53,080 --> 00:28:59,799
accessed some the more successful your

00:28:55,659 --> 00:29:01,720
project is going to be and that what you

00:28:59,799 --> 00:29:05,320
have to untie those all those things

00:29:01,720 --> 00:29:08,980
mean your project is going to grow so

00:29:05,320 --> 00:29:12,429
you have to be really for all those

00:29:08,980 --> 00:29:15,700
things that are going to to be added to

00:29:12,429 --> 00:29:17,440
your project if somebody is dumping some

00:29:15,700 --> 00:29:19,299
some code you have to be sure that you

00:29:17,440 --> 00:29:21,100
are going to be able to maintain it and

00:29:19,299 --> 00:29:24,850
you have to anticipate before accepting

00:29:21,100 --> 00:29:27,309
is a big contribution if you have to to

00:29:24,850 --> 00:29:29,019
to have a new install on a new platform

00:29:27,309 --> 00:29:32,710
you have to be sure that somebody will

00:29:29,019 --> 00:29:34,929
understand how the Builder packaging

00:29:32,710 --> 00:29:37,960
tool is working it's all about

00:29:34,929 --> 00:29:40,659
anticipation don't do things that you

00:29:37,960 --> 00:29:46,210
are not getting ready to maintain in the

00:29:40,659 --> 00:29:48,789
long term another aspect of a project

00:29:46,210 --> 00:29:52,239
and we can see on many milling lists

00:29:48,789 --> 00:29:55,529
people you were yelling at users yelling

00:29:52,239 --> 00:29:57,820
at other commuters fighting and so on

00:29:55,529 --> 00:30:02,109
people are making mistakes that's fine

00:29:57,820 --> 00:30:03,759
and I think that empathy presentation

00:30:02,109 --> 00:30:05,859
this morning is pretty much about this

00:30:03,759 --> 00:30:08,559
you have to be very kind and respectful

00:30:05,859 --> 00:30:10,809
to other people ok you are not going to

00:30:08,559 --> 00:30:12,580
have a drink with them you are not going

00:30:10,809 --> 00:30:15,909
to spend all it as with them that's fine

00:30:12,580 --> 00:30:18,460
but at some point you don't have to you

00:30:15,909 --> 00:30:20,769
just have to be kind on mailing lists

00:30:18,460 --> 00:30:25,149
respect what they are done even if it's

00:30:20,769 --> 00:30:27,489
not very interesting the project is

00:30:25,149 --> 00:30:29,769
likely to be better at some point you

00:30:27,489 --> 00:30:32,320
just have to be sure when to know when

00:30:29,769 --> 00:30:36,820
you have to say no no we can't do that

00:30:32,320 --> 00:30:39,429
and no means you probably can vote at

00:30:36,820 --> 00:30:41,529
Apache we say we should build consensus

00:30:39,429 --> 00:30:42,460
some time constants is not possible if a

00:30:41,529 --> 00:30:45,010
consultation

00:30:42,460 --> 00:30:48,760
then you can vote we can vote for or

00:30:45,010 --> 00:30:51,340
against and sometimes it's against in

00:30:48,760 --> 00:30:53,980
certain years we had three votes three

00:30:51,340 --> 00:30:58,290
negative votes that's not enough not not

00:30:53,980 --> 00:30:58,290
a lot I mean and it should not be not a

00:30:59,820 --> 00:31:09,190
question about leadership everybody

00:31:04,390 --> 00:31:10,360
knows it's big ESL sorry there is a

00:31:09,190 --> 00:31:12,610
mistake

00:31:10,360 --> 00:31:15,490
big ESL means being evil benevolent

00:31:12,610 --> 00:31:18,730
direct dictator for life

00:31:15,490 --> 00:31:21,130
should we have four projects somebody

00:31:18,730 --> 00:31:23,950
with leader like linear solar phone only

00:31:21,130 --> 00:31:27,250
for Linux it's not necessarily a good

00:31:23,950 --> 00:31:30,070
idea again for Apache directory server

00:31:27,250 --> 00:31:35,410
the guy who started the project left it

00:31:30,070 --> 00:31:40,420
seven years ago and actually we had four

00:31:35,410 --> 00:31:42,460
different PMC chairman it's not a big

00:31:40,420 --> 00:31:43,930
deal because you aren't just managing

00:31:42,460 --> 00:31:45,910
the project you are not managing the

00:31:43,930 --> 00:31:48,160
people that mean you are you have to be

00:31:45,910 --> 00:31:51,640
sure that everything is done following

00:31:48,160 --> 00:31:55,930
the rules and not trying to tell people

00:31:51,640 --> 00:31:59,320
what to do and how to do it so if you

00:31:55,930 --> 00:32:03,010
just want to know if you should have one

00:31:59,320 --> 00:32:08,050
person leading the project or not that's

00:32:03,010 --> 00:32:11,170
a good question of course if you want to

00:32:08,050 --> 00:32:13,140
have people that come to your project

00:32:11,170 --> 00:32:15,220
you have to advertise it and

00:32:13,140 --> 00:32:18,460
advertisements that means on doing a

00:32:15,220 --> 00:32:21,130
talk like I'm doing it brings some light

00:32:18,460 --> 00:32:23,110
on your project on some ways you can

00:32:21,130 --> 00:32:25,150
talk to all the commuters you can talk

00:32:23,110 --> 00:32:27,040
about other projects on your project but

00:32:25,150 --> 00:32:30,570
at some point you can see connection

00:32:27,040 --> 00:32:34,150
being made oh you are writing a new API

00:32:30,570 --> 00:32:36,280
for for LDAP so I'm going to use it and

00:32:34,150 --> 00:32:38,080
as soon as people are using it then

00:32:36,280 --> 00:32:40,560
maybe they are going to find some bugs

00:32:38,080 --> 00:32:43,720
they maybe just patch it and so on and

00:32:40,560 --> 00:32:45,840
this is the best way to do it talking

00:32:43,720 --> 00:32:48,750
about it tweeting about your project

00:32:45,840 --> 00:32:51,550
mailing about the project or even

00:32:48,750 --> 00:32:54,670
writing a blog about the project is how

00:32:51,550 --> 00:32:58,270
you advertise your project

00:32:54,670 --> 00:33:01,570
raise your project frequently it's best

00:32:58,270 --> 00:33:03,340
way to show that it's live if you

00:33:01,570 --> 00:33:05,650
release a project every three years that

00:33:03,340 --> 00:33:07,570
mean you either you don't have bugs in

00:33:05,650 --> 00:33:11,460
your project which is very unlikely or

00:33:07,570 --> 00:33:15,100
you are taking bugs very seriously so

00:33:11,460 --> 00:33:17,140
every project will tell Kay once every

00:33:15,100 --> 00:33:20,320
three months is okay one every six

00:33:17,140 --> 00:33:22,990
months is okay it's it's all about you

00:33:20,320 --> 00:33:25,150
decide what I mean it's your call I am

00:33:22,990 --> 00:33:27,100
NOT here to tell you you should release

00:33:25,150 --> 00:33:29,860
every month sometimes not possible but

00:33:27,100 --> 00:33:32,140
remember that reason often is more

00:33:29,860 --> 00:33:36,210
likely to to provide some some bug fixes

00:33:32,140 --> 00:33:37,260
to your users another way also to

00:33:36,210 --> 00:33:40,390
[Music]

00:33:37,260 --> 00:33:44,140
advertise your project is to bring the

00:33:40,390 --> 00:33:48,880
light on it and here for us was true to

00:33:44,140 --> 00:33:50,320
send the project to a can of it's the

00:33:48,880 --> 00:33:56,340
best open source ICT application

00:33:50,320 --> 00:33:56,340
whatever it's an eclipse

00:33:56,540 --> 00:34:04,820
I don't know the name in English sorry

00:34:01,940 --> 00:34:06,620
but anyway you you get a stamp this is

00:34:04,820 --> 00:34:08,060
the best project that's fine this is

00:34:06,620 --> 00:34:11,030
good for the guy walking to that project

00:34:08,060 --> 00:34:14,210
it's good for the project itself it's

00:34:11,030 --> 00:34:17,090
something that make people know that you

00:34:14,210 --> 00:34:21,200
are doing something interesting for them

00:34:17,090 --> 00:34:23,330
maybe that's it at the end your project

00:34:21,200 --> 00:34:25,609
is pretty much like this fake figure you

00:34:23,330 --> 00:34:28,460
are just turning plates and you really

00:34:25,609 --> 00:34:31,310
want to avoid any of them to fold on on

00:34:28,460 --> 00:34:33,859
the on the ground and bread and it's not

00:34:31,310 --> 00:34:37,280
easy but it's you have tools and you

00:34:33,859 --> 00:34:47,990
have ways to do it so that's one of my

00:34:37,280 --> 00:34:52,550
talk about it thank you yeah thank you

00:34:47,990 --> 00:34:56,869
very much are there any questions I have

00:34:52,550 --> 00:34:59,510
one so what are the best practice to

00:34:56,869 --> 00:35:01,130
introduce test-driven what are the best

00:34:59,510 --> 00:35:05,420
practice to introduce test-driven

00:35:01,130 --> 00:35:10,760
development and to enlarge the test

00:35:05,420 --> 00:35:12,859
coverage in open source project you need

00:35:10,760 --> 00:35:16,280
tests of course I mean you have to have

00:35:12,859 --> 00:35:19,070
unit tests all over every every piece of

00:35:16,280 --> 00:35:22,130
your code at least every piece of you

00:35:19,070 --> 00:35:24,350
API should we have unit tests what we do

00:35:22,130 --> 00:35:27,170
is generally as soon as a bug has been

00:35:24,350 --> 00:35:30,140
filled in we are using JIRA we are

00:35:27,170 --> 00:35:33,230
trying to cut it as unit test to be sure

00:35:30,140 --> 00:35:35,750
that it will not reproduce again and the

00:35:33,230 --> 00:35:39,950
second thing is that you need a CI

00:35:35,750 --> 00:35:42,440
system where juhi using Jenkins it's

00:35:39,950 --> 00:35:44,630
quite helpful to to check that it works

00:35:42,440 --> 00:35:47,570
on many platforms so this is pretty much

00:35:44,630 --> 00:35:49,609
what what we do there are also others

00:35:47,570 --> 00:35:52,280
other way to do it

00:35:49,609 --> 00:35:56,869
a guy presented something interesting

00:35:52,280 --> 00:35:59,390
but testing doing some QA and so on but

00:35:56,869 --> 00:36:04,390
everything that that the project would

00:35:59,390 --> 00:36:04,390
be to be safer is good enough for me

00:36:15,970 --> 00:36:20,900
so you talked about the issue of whether

00:36:18,380 --> 00:36:23,210
it's a good idea to have a benevolent

00:36:20,900 --> 00:36:26,750
dictator for lifetime in a project or

00:36:23,210 --> 00:36:29,240
not my personal opinion is usually

00:36:26,750 --> 00:36:32,450
that's not a deliberate choice it either

00:36:29,240 --> 00:36:34,400
comes to being so if there is such a

00:36:32,450 --> 00:36:37,160
person who founded the project and has

00:36:34,400 --> 00:36:40,700
such a charisma to fill out that well

00:36:37,160 --> 00:36:44,930
the personal decision may be but if

00:36:40,700 --> 00:36:47,390
there isn't any person suitable for that

00:36:44,930 --> 00:36:50,330
role it just won't happen that there is

00:36:47,390 --> 00:36:52,070
a dictate of a lifetime so usually it's

00:36:50,330 --> 00:36:55,550
not a deliberate choice it's just an

00:36:52,070 --> 00:36:59,990
historic artifact or maybe you can do

00:36:55,550 --> 00:37:01,640
something different the person who is

00:36:59,990 --> 00:37:07,400
responsible from one part of the project

00:37:01,640 --> 00:37:11,000
is also responsible to ask about a way

00:37:07,400 --> 00:37:12,680
to manage this part I mean you don't

00:37:11,000 --> 00:37:18,770
have to add one person taking all the

00:37:12,680 --> 00:37:21,800
decisions decision can be collective at

00:37:18,770 --> 00:37:25,160
Apache directories ever we we don't I

00:37:21,800 --> 00:37:27,080
mean we don't have a leader we just have

00:37:25,160 --> 00:37:28,460
you know some time questions some time

00:37:27,080 --> 00:37:30,200
you know even if you have been on the

00:37:28,460 --> 00:37:34,400
project for fifteen years or seven years

00:37:30,200 --> 00:37:36,110
that like me I know that some other are

00:37:34,400 --> 00:37:37,820
better than me on on some part of the

00:37:36,110 --> 00:37:40,130
project and I prefer asking them before

00:37:37,820 --> 00:37:42,530
doing any modification you know it's a

00:37:40,130 --> 00:37:46,160
whole kind of respect you have to pay

00:37:42,530 --> 00:37:47,930
them they came to help you so it's

00:37:46,160 --> 00:37:49,820
important to ask them if the

00:37:47,930 --> 00:37:52,910
modification you are doing is good

00:37:49,820 --> 00:37:55,820
enough there are new peers there are not

00:37:52,910 --> 00:37:58,430
I lower or higher I mean this is the way

00:37:55,820 --> 00:38:00,260
I feel it I'm not a genius - so maybe

00:37:58,430 --> 00:38:03,500
you know for lioness it works but it's

00:38:00,260 --> 00:38:08,180
much much much smaller than I am so but

00:38:03,500 --> 00:38:10,010
it can work I mean we are probably you

00:38:08,180 --> 00:38:12,680
know living in a world where we really

00:38:10,010 --> 00:38:15,320
want a price down to a king or dictator

00:38:12,680 --> 00:38:17,570
and and dictator and prisons are talking

00:38:15,320 --> 00:38:20,000
together satisfied but this is not what

00:38:17,570 --> 00:38:23,270
we are as human being so there is no

00:38:20,000 --> 00:38:24,990
reason we should have a dictator on the

00:38:23,270 --> 00:38:35,040
project in my opinion again

00:38:24,990 --> 00:38:37,800
so I am a lot of what you're saying

00:38:35,040 --> 00:38:39,630
seems to me to apply to smaller projects

00:38:37,800 --> 00:38:40,980
as well sorry a lot of what you're

00:38:39,630 --> 00:38:43,680
saying seems to apply to smaller

00:38:40,980 --> 00:38:45,270
projects so it's some of the points

00:38:43,680 --> 00:38:47,099
you're making it just clearly generally

00:38:45,270 --> 00:38:49,500
very good practice you know writing logs

00:38:47,099 --> 00:38:53,010
and those kinds of things but my actual

00:38:49,500 --> 00:38:56,190
question is what are there any large

00:38:53,010 --> 00:38:57,780
projects where you would Maya the the

00:38:56,190 --> 00:38:59,250
result or things that you would change

00:38:57,780 --> 00:39:02,790
about the project here and if you had a

00:38:59,250 --> 00:39:04,859
magic wand because you kind of discuss

00:39:02,790 --> 00:39:07,109
the problems you're saying and the way

00:39:04,859 --> 00:39:09,869
you perceive it but do you see anything

00:39:07,109 --> 00:39:12,890
outside your initiative that you think I

00:39:09,869 --> 00:39:12,890
wish we could do it that way

00:39:13,520 --> 00:39:18,720
there's kind of FICO's so it's difficult

00:39:15,930 --> 00:39:29,130
for me to understand but your question

00:39:18,720 --> 00:39:30,390
is do you have do I have some yes yes I

00:39:29,130 --> 00:39:34,650
understand

00:39:30,390 --> 00:39:37,200
I would like to have more participant in

00:39:34,650 --> 00:39:39,150
my project for obvious reasons it's

00:39:37,200 --> 00:39:41,940
difficult when it's old project and

00:39:39,150 --> 00:39:45,450
that's one of the key not talked about

00:39:41,940 --> 00:39:47,510
it how you enter on a big project big

00:39:45,450 --> 00:39:52,589
project are all project and and

00:39:47,510 --> 00:39:55,950
intimidating I don't know how to get

00:39:52,589 --> 00:39:58,710
more people involved it's especially for

00:39:55,950 --> 00:40:00,990
all project talking about open LDAP for

00:39:58,710 --> 00:40:04,380
instance which is 20 years old and it's

00:40:00,990 --> 00:40:06,720
in C that mean younger kids don't do see

00:40:04,380 --> 00:40:09,390
right now they are using much modern

00:40:06,720 --> 00:40:12,930
language as Kara whatever and it's

00:40:09,390 --> 00:40:15,540
difficult to attract people that don't

00:40:12,930 --> 00:40:20,609
know C they're scared of the project or

00:40:15,540 --> 00:40:24,720
so so what I would like to have is a way

00:40:20,609 --> 00:40:27,810
to make the project easier or I mean

00:40:24,720 --> 00:40:32,630
more comfortable to get in so that one

00:40:27,810 --> 00:40:32,630
thing another thing

00:40:36,579 --> 00:40:42,170
when it's a big project I mean you have

00:40:40,030 --> 00:40:46,220
cutting a release it's three days

00:40:42,170 --> 00:40:48,559
process for smaller projects I mean you

00:40:46,220 --> 00:40:50,690
can release in one hour when I'm

00:40:48,559 --> 00:40:52,400
committing something I have to wait 20

00:40:50,690 --> 00:40:54,200
minutes or 30 minutes for the test to

00:40:52,400 --> 00:40:57,049
pass and such something that I would

00:40:54,200 --> 00:40:59,450
like to get fixed it's it's not simple

00:40:57,049 --> 00:41:00,829
especially if as I said every time you

00:40:59,450 --> 00:41:04,010
have an issue you add a new test that

00:41:00,829 --> 00:41:05,869
mean you are adding some some some delay

00:41:04,010 --> 00:41:08,690
on on the testing at the point where

00:41:05,869 --> 00:41:11,030
5,000 tests to run every time we want to

00:41:08,690 --> 00:41:13,520
commit this is something we would like

00:41:11,030 --> 00:41:15,710
to to get rid of but it's not easy that

00:41:13,520 --> 00:41:17,930
means probably slicing the project in

00:41:15,710 --> 00:41:20,089
different parts so we just have to test

00:41:17,930 --> 00:41:23,349
one single part without to take care of

00:41:20,089 --> 00:41:25,730
all the parts on such another story I

00:41:23,349 --> 00:41:29,329
don't know if I answer your question or

00:41:25,730 --> 00:41:31,990
okay okay thank you very much similar a

00:41:29,329 --> 00:41:31,990

YouTube URL: https://www.youtube.com/watch?v=gtzrLxZc9EA


