Title: #FOSSBack: Amanda Casari & Julia Ferraioli Preventing Random Acts of Metrics
Publication date: 2021-03-01
Playlist: FOSS Backstage 2021 #FOSSBack
Description: 
	We know that open source is greater than the source code, that people of all skills contribute to the larger ecosystem that is open source software and the communities we grow to invest in people. How do we see this world, quantitatively and qualitatively? Which metrics should we be using and which should we definitely not rely on? We'll review what we have learned in Google's Open Source Programs Office about open source data, metrics, and tracking change in open source ecosystems.


###########

Follow us on Social Media and join the Community!

Twitter: https://twitter.com/Fossbckstg
LinkedIn: https://www.linkedin.com/groups/8653059/​

FOSS Backstage is an event by Plain Schwarz – https://plainschwarz.com
Captions: 
	00:00:03,679 --> 00:00:06,879
good morning i

00:00:04,640 --> 00:00:08,559
um morning for us hello to everybody for

00:00:06,879 --> 00:00:10,800
your afternoon

00:00:08,559 --> 00:00:12,160
i'm amanda casari and i'm a white woman

00:00:10,800 --> 00:00:14,000
with curlish blonde hair

00:00:12,160 --> 00:00:16,160
i'm wearing a blue sweater with a red

00:00:14,000 --> 00:00:17,840
scarf and this is julie farioli who is a

00:00:16,160 --> 00:00:19,439
white woman with curly brown hair and is

00:00:17,840 --> 00:00:21,359
wearing a flannel shirt

00:00:19,439 --> 00:00:23,519
together we co-lead the google side of

00:00:21,359 --> 00:00:25,519
project ocean where we study open source

00:00:23,519 --> 00:00:26,640
as ecosystems and complex networks which

00:00:25,519 --> 00:00:27,920
is why we call ourselves

00:00:26,640 --> 00:00:30,160
open source scientists and

00:00:27,920 --> 00:00:31,119
archaeologists and we're here today to

00:00:30,160 --> 00:00:32,559
talk to you about what you should

00:00:31,119 --> 00:00:34,239
consider and what you should avoid when

00:00:32,559 --> 00:00:36,239
you think about metrics for systems like

00:00:34,239 --> 00:00:38,160
open source

00:00:36,239 --> 00:00:40,160
if you prefer you can find our slides

00:00:38,160 --> 00:00:43,280
and speaker notes at this url

00:00:40,160 --> 00:00:46,480
it's bitl dot ly

00:00:43,280 --> 00:00:49,840
slash f o s s dash backstage

00:00:46,480 --> 00:00:49,840
dash p r a m

00:00:50,239 --> 00:00:54,320
and so what exactly is open source and

00:00:52,719 --> 00:00:56,239
there is a standard definition which we

00:00:54,320 --> 00:00:58,079
use and talk about it's maintained by

00:00:56,239 --> 00:00:59,120
the open source initiative the

00:00:58,079 --> 00:01:00,719
definition focuses

00:00:59,120 --> 00:01:02,480
mostly on how software is hardware and

00:01:00,719 --> 00:01:04,080
distributed and licensed

00:01:02,480 --> 00:01:06,159
as well as what you can and cannot do

00:01:04,080 --> 00:01:07,760
with software and still call it open

00:01:06,159 --> 00:01:09,760
source

00:01:07,760 --> 00:01:11,280
and we bring this up because when we

00:01:09,760 --> 00:01:13,040
talk about open source

00:01:11,280 --> 00:01:14,479
we talk about more than licensing and

00:01:13,040 --> 00:01:16,240
distribution rules

00:01:14,479 --> 00:01:18,080
open source has evolved to represent a

00:01:16,240 --> 00:01:19,280
framework that shapes how software is

00:01:18,080 --> 00:01:21,600
created released

00:01:19,280 --> 00:01:22,880
shared distributed as well as the

00:01:21,600 --> 00:01:26,320
communities themselves

00:01:22,880 --> 00:01:28,320
and how they form around the projects

00:01:26,320 --> 00:01:30,079
and because we know that open source is

00:01:28,320 --> 00:01:30,880
not just technical projects but a

00:01:30,079 --> 00:01:32,960
combination

00:01:30,880 --> 00:01:34,079
of systems of technical and social

00:01:32,960 --> 00:01:38,079
components

00:01:34,079 --> 00:01:39,840
it's actually a socio-technical system

00:01:38,079 --> 00:01:42,320
and so let's break down what that means

00:01:39,840 --> 00:01:44,000
a bit when we examine a socio-technical

00:01:42,320 --> 00:01:45,520
system we have to consider

00:01:44,000 --> 00:01:47,280
the technical components and

00:01:45,520 --> 00:01:49,680
infrastructure like code bases

00:01:47,280 --> 00:01:51,200
packing packaging indices and metadata

00:01:49,680 --> 00:01:53,040
from the mailing lists

00:01:51,200 --> 00:01:55,119
we have to look at the social components

00:01:53,040 --> 00:01:56,880
which are the people the communities as

00:01:55,119 --> 00:01:58,399
well as the social contracts that they

00:01:56,880 --> 00:02:00,399
agree on together

00:01:58,399 --> 00:02:03,360
and the interactions between these

00:02:00,399 --> 00:02:03,360
different systems

00:02:04,320 --> 00:02:08,000
the socio-technical element is why

00:02:06,880 --> 00:02:10,239
measuring open source

00:02:08,000 --> 00:02:12,239
is so difficult we have this gut

00:02:10,239 --> 00:02:13,520
instinct that open source is critical to

00:02:12,239 --> 00:02:16,160
modern business

00:02:13,520 --> 00:02:17,520
but we don't have an agreed upon way of

00:02:16,160 --> 00:02:20,560
measuring it

00:02:17,520 --> 00:02:24,640
it's not that people haven't tried um

00:02:20,560 --> 00:02:28,160
but a major problem is around

00:02:24,640 --> 00:02:30,160
data and metrics nadia eggball outlined

00:02:28,160 --> 00:02:32,160
this problem in her rhodes and bridges

00:02:30,160 --> 00:02:34,720
report

00:02:32,160 --> 00:02:36,000
she says that usage metrics are either

00:02:34,720 --> 00:02:38,560
highly inaccurate

00:02:36,000 --> 00:02:42,239
or simply unavailable this is not an

00:02:38,560 --> 00:02:42,239
easy problem to solve for

00:02:43,120 --> 00:02:50,000
and the impact of digital infrastructure

00:02:46,640 --> 00:02:51,360
is still very difficult to measure but

00:02:50,000 --> 00:02:53,280
without data

00:02:51,360 --> 00:02:54,640
about which tools are used and how much

00:02:53,280 --> 00:02:56,560
we rely upon them

00:02:54,640 --> 00:03:05,440
it is hard to paint a clear picture of

00:02:56,560 --> 00:03:07,440
what is underfunded

00:03:05,440 --> 00:03:09,280
she continues to postulate that with

00:03:07,440 --> 00:03:11,280
better metrics we could describe

00:03:09,280 --> 00:03:12,560
the economic impact of digital

00:03:11,280 --> 00:03:14,400
infrastructure

00:03:12,560 --> 00:03:15,840
identify critical projects that are

00:03:14,400 --> 00:03:18,480
lacking support

00:03:15,840 --> 00:03:19,440
and understand dependencies between

00:03:18,480 --> 00:03:22,159
projects

00:03:19,440 --> 00:03:22,159
and people

00:03:22,640 --> 00:03:25,760
so let's talk about how to define better

00:03:25,440 --> 00:03:28,400
more

00:03:25,760 --> 00:03:31,200
meaningful metrics in the context of

00:03:28,400 --> 00:03:31,200
open source

00:03:31,440 --> 00:03:36,000
better metrics focus on useful metrics

00:03:34,239 --> 00:03:37,760
this fairly straightforward approach can

00:03:36,000 --> 00:03:39,040
help guide you through the creation of

00:03:37,760 --> 00:03:41,920
metrics

00:03:39,040 --> 00:03:45,040
first need to identify your objectives

00:03:41,920 --> 00:03:48,640
then we define their observable aspects

00:03:45,040 --> 00:03:50,239
establish baselines define the trends

00:03:48,640 --> 00:03:53,280
that we want to see

00:03:50,239 --> 00:03:56,640
and determine our signal phenomena let's

00:03:53,280 --> 00:03:56,640
walk through this step by step

00:03:59,120 --> 00:04:02,959
it's tempting to determine what you can

00:04:01,360 --> 00:04:04,319
measure first when thinking about

00:04:02,959 --> 00:04:05,840
metrics

00:04:04,319 --> 00:04:07,360
this that approach can lead to an

00:04:05,840 --> 00:04:09,519
abundance of data collected

00:04:07,360 --> 00:04:11,120
but it can also lead to misleading

00:04:09,519 --> 00:04:13,760
metrics

00:04:11,120 --> 00:04:14,879
instead first you need to identify your

00:04:13,760 --> 00:04:18,000
objectives

00:04:14,879 --> 00:04:20,560
you need to understand what you want you

00:04:18,000 --> 00:04:23,520
need to know what you care about

00:04:20,560 --> 00:04:25,199
if you can't answer both of those it's

00:04:23,520 --> 00:04:27,440
time to brainstorm again

00:04:25,199 --> 00:04:29,280
and remember these aren't set in stone

00:04:27,440 --> 00:04:30,800
as your product and its associated

00:04:29,280 --> 00:04:32,880
community change

00:04:30,800 --> 00:04:35,360
you can always change them or formulate

00:04:32,880 --> 00:04:35,360
new ones

00:04:36,400 --> 00:04:41,120
next it's time to define aspects of each

00:04:39,040 --> 00:04:43,840
objective that can be observed

00:04:41,120 --> 00:04:45,759
you need to understand how what you want

00:04:43,840 --> 00:04:48,240
actually works

00:04:45,759 --> 00:04:50,800
another way to think about an aspect is

00:04:48,240 --> 00:04:52,960
the trait

00:04:50,800 --> 00:04:54,400
choosing aspects of your metrics is the

00:04:52,960 --> 00:04:56,960
most important step

00:04:54,400 --> 00:04:58,160
to remember that you should that what

00:04:56,960 --> 00:05:00,720
you should measure

00:04:58,160 --> 00:05:01,759
is not the same as asking what you can

00:05:00,720 --> 00:05:04,080
measure

00:05:01,759 --> 00:05:05,280
it allows you to reach beyond the easily

00:05:04,080 --> 00:05:07,680
obtainable data

00:05:05,280 --> 00:05:10,400
into information that truly tells the

00:05:07,680 --> 00:05:11,840
picture of your objective

00:05:10,400 --> 00:05:13,680
sometimes what you're interested in

00:05:11,840 --> 00:05:15,199
doesn't match up to the data that you

00:05:13,680 --> 00:05:17,360
can actually collect

00:05:15,199 --> 00:05:18,479
in these cases we can use proxy

00:05:17,360 --> 00:05:20,400
variables

00:05:18,479 --> 00:05:25,039
which can circumscribe what you're

00:05:20,400 --> 00:05:27,440
actually trying to measure

00:05:25,039 --> 00:05:28,880
now we can establish a baseline for each

00:05:27,440 --> 00:05:31,759
aspect

00:05:28,880 --> 00:05:33,759
you can't measure progress or regression

00:05:31,759 --> 00:05:36,720
without understanding where you are

00:05:33,759 --> 00:05:37,680
currently if you don't know where you

00:05:36,720 --> 00:05:40,400
are now

00:05:37,680 --> 00:05:42,320
you can make an informed estimate in a

00:05:40,400 --> 00:05:44,639
few ways

00:05:42,320 --> 00:05:45,440
one is to one way is to examine other

00:05:44,639 --> 00:05:47,600
projects

00:05:45,440 --> 00:05:48,880
to see where they are as an analytical

00:05:47,600 --> 00:05:51,280
starting point

00:05:48,880 --> 00:05:52,800
then measure for a short period of time

00:05:51,280 --> 00:05:55,600
before you reestablish

00:05:52,800 --> 00:05:55,600
your baseline

00:05:57,520 --> 00:06:01,680
step four is defining your

00:06:03,199 --> 00:06:09,199
desired trend

00:06:06,720 --> 00:06:11,120
you need to know where you want to go do

00:06:09,199 --> 00:06:13,600
you want more of something

00:06:11,120 --> 00:06:14,720
okay that's increasing you want

00:06:13,600 --> 00:06:17,840
something to reduce

00:06:14,720 --> 00:06:20,560
that's a decreasing trend and uh

00:06:17,840 --> 00:06:21,440
the often ignored steady straight steady

00:06:20,560 --> 00:06:25,360
state trend

00:06:21,440 --> 00:06:25,360
is when we want things to stay the same

00:06:26,960 --> 00:06:31,600
lastly we have determining our signal

00:06:30,319 --> 00:06:34,000
phenomena

00:06:31,600 --> 00:06:35,919
signal phenomena determine when a change

00:06:34,000 --> 00:06:39,120
in a phenomenon will appear

00:06:35,919 --> 00:06:40,960
in an observation this is so important

00:06:39,120 --> 00:06:41,680
because you need to know what changes to

00:06:40,960 --> 00:06:45,120
expect

00:06:41,680 --> 00:06:48,000
over time and when they will impact you

00:06:45,120 --> 00:06:50,080
does your aspect capture events before

00:06:48,000 --> 00:06:53,280
the impact shows another metrics

00:06:50,080 --> 00:06:56,319
that's a leading signal does it

00:06:53,280 --> 00:06:59,759
show it after that's a lagging

00:06:56,319 --> 00:07:01,840
lagging signal this may seem

00:06:59,759 --> 00:07:03,280
pretty straightforward these these five

00:07:01,840 --> 00:07:06,880
steps

00:07:03,280 --> 00:07:08,720
but that's the point the point is to

00:07:06,880 --> 00:07:11,280
be able to move from what you should

00:07:08,720 --> 00:07:13,840
measure to talking about

00:07:11,280 --> 00:07:14,880
are these metrics useful in evaluating

00:07:13,840 --> 00:07:17,840
our progress

00:07:14,880 --> 00:07:17,840
towards our goal

00:07:18,720 --> 00:07:22,880
the system can fall short if it fails to

00:07:20,960 --> 00:07:23,680
consider the boundaries of the systemat

00:07:22,880 --> 00:07:26,479
models

00:07:23,680 --> 00:07:28,080
if we limit ourselves to the project we

00:07:26,479 --> 00:07:31,120
are ignoring the impact of

00:07:28,080 --> 00:07:32,960
and on the community we need to reset

00:07:31,120 --> 00:07:34,479
the boundaries around our metrics to

00:07:32,960 --> 00:07:37,599
include both the projects

00:07:34,479 --> 00:07:37,599
and their communities

00:07:41,759 --> 00:07:45,759
and so let's go back to the foundation

00:07:43,599 --> 00:07:46,639
that open source is a socio-technical

00:07:45,759 --> 00:07:48,080
system

00:07:46,639 --> 00:07:49,759
and this means we cannot focus on

00:07:48,080 --> 00:07:51,120
assumptions and goals directly tied to

00:07:49,759 --> 00:07:52,960
the systems alone

00:07:51,120 --> 00:07:54,479
we have to expand our abstraction level

00:07:52,960 --> 00:07:55,759
beyond what's called the algorithmic

00:07:54,479 --> 00:07:57,680
framing

00:07:55,759 --> 00:07:59,280
and so here when we're talking about

00:07:57,680 --> 00:08:01,280
algorithmic framing we'll be using the

00:07:59,280 --> 00:08:03,680
definition from selps

00:08:01,280 --> 00:08:06,479
at all's 2019 paper fairness and

00:08:03,680 --> 00:08:08,720
abstraction in sociotechnical systems

00:08:06,479 --> 00:08:10,560
so they define algorithmic framing as

00:08:08,720 --> 00:08:13,759
choosing representations

00:08:10,560 --> 00:08:15,199
which is data and labeling outcomes

00:08:13,759 --> 00:08:16,879
and in machine learning these choices

00:08:15,199 --> 00:08:17,680
are then used to compare the outputs to

00:08:16,879 --> 00:08:19,680
the inputs

00:08:17,680 --> 00:08:21,520
and since this is standard for most data

00:08:19,680 --> 00:08:23,599
analysis that we're looking at

00:08:21,520 --> 00:08:25,280
where evaluative methods are chosen

00:08:23,599 --> 00:08:26,720
based on some kind of inputs

00:08:25,280 --> 00:08:28,560
and compared to some kind of previous

00:08:26,720 --> 00:08:30,479
outputs we can apply a similar

00:08:28,560 --> 00:08:31,680
methodology to open source metrics in

00:08:30,479 --> 00:08:33,680
analysis

00:08:31,680 --> 00:08:35,599
and the problem with this framing when

00:08:33,680 --> 00:08:37,680
examining socio-technical systems is

00:08:35,599 --> 00:08:39,760
that it creates too narrow of a view

00:08:37,680 --> 00:08:40,880
and i quote where the abstraction is

00:08:39,760 --> 00:08:43,279
taken as a given

00:08:40,880 --> 00:08:44,000
and is rarely if ever interrogated for

00:08:43,279 --> 00:08:45,839
validity

00:08:44,000 --> 00:08:47,760
despite the fact that many of these

00:08:45,839 --> 00:08:48,560
choices are made due to accidents of

00:08:47,760 --> 00:08:51,360
opportunity

00:08:48,560 --> 00:08:52,560
and access to data end quote and so does

00:08:51,360 --> 00:08:54,560
this sound familiar

00:08:52,560 --> 00:08:56,800
that we would measure and create models

00:08:54,560 --> 00:08:58,640
based on the data available to us

00:08:56,800 --> 00:09:00,480
not necessarily based on the systems we

00:08:58,640 --> 00:09:02,160
want to be observing

00:09:00,480 --> 00:09:03,839
i think we see that quite a bit when we

00:09:02,160 --> 00:09:05,680
talk with open source projects

00:09:03,839 --> 00:09:07,600
and people who are trying to understand

00:09:05,680 --> 00:09:09,440
what is happening in open source

00:09:07,600 --> 00:09:10,880
based on the data that they can find not

00:09:09,440 --> 00:09:12,080
necessarily the data that tells them the

00:09:10,880 --> 00:09:14,240
full picture

00:09:12,080 --> 00:09:15,440
and as a selbs at all assert the

00:09:14,240 --> 00:09:17,600
contrast to the

00:09:15,440 --> 00:09:19,920
algorithmic frame is the sociotechnical

00:09:17,600 --> 00:09:21,920
frame and this explicitly recognizes

00:09:19,920 --> 00:09:23,519
that models and analyses are part of the

00:09:21,920 --> 00:09:25,279
sociotechnical system

00:09:23,519 --> 00:09:27,519
and that other components of these

00:09:25,279 --> 00:09:29,040
systems also need to be modeled

00:09:27,519 --> 00:09:30,880
and we can get there by first knowing

00:09:29,040 --> 00:09:32,399
what kinds of problems these limited

00:09:30,880 --> 00:09:34,080
abstractions create

00:09:32,399 --> 00:09:35,920
and that's what this work defines as

00:09:34,080 --> 00:09:36,560
abstraction traps and how to mitigate

00:09:35,920 --> 00:09:37,920
them

00:09:36,560 --> 00:09:39,839
and so we're going to introduce those

00:09:37,920 --> 00:09:41,360
now and we'll walk you through those

00:09:39,839 --> 00:09:42,640
where you might see them in the process

00:09:41,360 --> 00:09:46,480
of creating metrics for

00:09:42,640 --> 00:09:48,560
open source and so first

00:09:46,480 --> 00:09:50,399
we have what's called the framing drop

00:09:48,560 --> 00:09:52,959
and this is when we fail to model

00:09:50,399 --> 00:09:55,120
an entire system over which a social

00:09:52,959 --> 00:09:56,080
criterion such as fairness in the case

00:09:55,120 --> 00:09:59,519
of the paper

00:09:56,080 --> 00:10:01,120
will be enforced second we have what's

00:09:59,519 --> 00:10:02,800
called the portability trap

00:10:01,120 --> 00:10:05,120
and this is when we fail to understand

00:10:02,800 --> 00:10:07,200
how repurposing algorithmic solutions

00:10:05,120 --> 00:10:09,120
designed for one social context

00:10:07,200 --> 00:10:11,519
may be misleading inaccurate or

00:10:09,120 --> 00:10:14,640
otherwise do harm when applied to

00:10:11,519 --> 00:10:14,640
a different context

00:10:14,880 --> 00:10:18,079
third is the formalism trap this is the

00:10:17,120 --> 00:10:20,240
failure to account

00:10:18,079 --> 00:10:21,600
for the full meaning of social concepts

00:10:20,240 --> 00:10:24,240
which can be procedural

00:10:21,600 --> 00:10:28,000
contextual and contestable and cannot be

00:10:24,240 --> 00:10:29,760
resolved through mathematical formalisms

00:10:28,000 --> 00:10:31,519
next is the ripple effect trap and

00:10:29,760 --> 00:10:32,880
that's when you fail to understand how

00:10:31,519 --> 00:10:34,880
insertion of a technology

00:10:32,880 --> 00:10:36,079
into an existing social system changes

00:10:34,880 --> 00:10:38,240
the behaviors

00:10:36,079 --> 00:10:40,399
and embedded values of a pre-existing

00:10:38,240 --> 00:10:42,079
system

00:10:40,399 --> 00:10:43,519
and lastly present the solution

00:10:42,079 --> 00:10:45,440
solutionism trap

00:10:43,519 --> 00:10:47,040
and this is when we fail to recognize

00:10:45,440 --> 00:10:49,200
that the possibility

00:10:47,040 --> 00:10:50,720
that the best solution may not involve

00:10:49,200 --> 00:10:52,560
technology at all

00:10:50,720 --> 00:10:54,160
and so to tie the concepts of creating

00:10:52,560 --> 00:10:55,040
useful metrics and abstraction tracks

00:10:54,160 --> 00:10:56,320
together

00:10:55,040 --> 00:10:58,959
julie and i would like to walk you

00:10:56,320 --> 00:11:02,240
through an example

00:10:58,959 --> 00:11:04,640
so we have created a fictitious but

00:11:02,240 --> 00:11:06,800
beautifully illustrated uh comprehensive

00:11:04,640 --> 00:11:07,519
data science library written entirely in

00:11:06,800 --> 00:11:09,839
go

00:11:07,519 --> 00:11:11,600
um called go numb we do want to indicate

00:11:09,839 --> 00:11:12,880
this is not actually real

00:11:11,600 --> 00:11:15,519
but we'd like to talk to you if

00:11:12,880 --> 00:11:17,680
anybody's interested in creating this

00:11:15,519 --> 00:11:20,079
and we're eager to get feedback on our

00:11:17,680 --> 00:11:22,160
brand new data science library

00:11:20,079 --> 00:11:23,920
and grow the user base but because we're

00:11:22,160 --> 00:11:25,519
scientists we like to share our work and

00:11:23,920 --> 00:11:26,880
we want other people to use things we've

00:11:25,519 --> 00:11:28,720
created

00:11:26,880 --> 00:11:30,000
before our launch our lab before we

00:11:28,720 --> 00:11:31,920
launch our library

00:11:30,000 --> 00:11:33,839
uh we're going to process a go through a

00:11:31,920 --> 00:11:35,839
process to help us figure out where

00:11:33,839 --> 00:11:37,360
our work is where we're not we're moving

00:11:35,839 --> 00:11:40,079
in the right direction and here's how we

00:11:37,360 --> 00:11:40,079
might go about it

00:11:41,120 --> 00:11:46,399
okay going back to the the process we

00:11:44,959 --> 00:11:49,440
outlined earlier

00:11:46,399 --> 00:11:50,880
remember our first step is to identify

00:11:49,440 --> 00:11:54,800
the objectives

00:11:50,880 --> 00:11:57,920
so we've identified three possible ones

00:11:54,800 --> 00:11:59,680
the first is is our target user adopting

00:11:57,920 --> 00:12:02,720
it

00:11:59,680 --> 00:12:04,320
is it easy to set up by themselves

00:12:02,720 --> 00:12:05,920
i feel like with a lot of data science

00:12:04,320 --> 00:12:07,279
libraries

00:12:05,920 --> 00:12:10,399
people kind of get stuck on the

00:12:07,279 --> 00:12:14,240
installation process i blame fortran

00:12:10,399 --> 00:12:17,760
honestly um and and finally

00:12:14,240 --> 00:12:20,240
does the library meet our target users

00:12:17,760 --> 00:12:20,240
needs

00:12:21,760 --> 00:12:25,040
all of these objectives are worth

00:12:23,920 --> 00:12:27,519
pursuing

00:12:25,040 --> 00:12:28,480
but for the purpose of this example

00:12:27,519 --> 00:12:34,399
let's focus

00:12:28,480 --> 00:12:34,399
on one the library is easy to install

00:12:37,200 --> 00:12:44,160
so if you're not familiar with with go

00:12:40,720 --> 00:12:47,440
the setup process is actually

00:12:44,160 --> 00:12:47,760
you know pretty straightforward we can

00:12:47,440 --> 00:12:51,120
go

00:12:47,760 --> 00:12:53,279
to goes package registry

00:12:51,120 --> 00:12:56,399
from there there's a search we can

00:12:53,279 --> 00:12:59,760
search for data science libraries

00:12:56,399 --> 00:13:03,040
and hopefully we'll locate our very our

00:12:59,760 --> 00:13:05,120
new package go num

00:13:03,040 --> 00:13:06,079
from there we can read the documentation

00:13:05,120 --> 00:13:08,160
decide

00:13:06,079 --> 00:13:11,040
if we want to actually install this

00:13:08,160 --> 00:13:14,720
library if it's right for us

00:13:11,040 --> 00:13:17,279
and then we run a command of go get

00:13:14,720 --> 00:13:19,200
go num which is how we install the

00:13:17,279 --> 00:13:20,959
package

00:13:19,200 --> 00:13:22,880
and finally we build our first

00:13:20,959 --> 00:13:28,079
application against it

00:13:22,880 --> 00:13:28,079
um and hopefully nothing goes wrong

00:13:28,880 --> 00:13:32,399
and so we're going to pause here for a

00:13:30,320 --> 00:13:33,040
moment because this is actually a place

00:13:32,399 --> 00:13:34,880
where

00:13:33,040 --> 00:13:36,160
even julia and i almost fell into the

00:13:34,880 --> 00:13:37,839
formalism trap

00:13:36,160 --> 00:13:39,440
there's a great opportunity when you're

00:13:37,839 --> 00:13:42,800
defining objectives

00:13:39,440 --> 00:13:44,639
um to do this because the formalism trap

00:13:42,800 --> 00:13:45,920
in this case would be that we could fail

00:13:44,639 --> 00:13:48,079
to account for fully

00:13:45,920 --> 00:13:49,839
fail to fully account for the full

00:13:48,079 --> 00:13:52,480
meaning of social concepts which cannot

00:13:49,839 --> 00:13:53,920
be resolved into mathematical formalism

00:13:52,480 --> 00:13:55,519
um and in this one we were making the

00:13:53,920 --> 00:13:57,279
assumption that we can just record the

00:13:55,519 --> 00:13:58,720
steps we take to install the library to

00:13:57,279 --> 00:14:00,959
know what to measure

00:13:58,720 --> 00:14:02,480
um the where place where julian i ran

00:14:00,959 --> 00:14:04,959
into this even is uh is

00:14:02,480 --> 00:14:06,320
her familiarity with go is so much

00:14:04,959 --> 00:14:07,839
stronger than mine

00:14:06,320 --> 00:14:09,920
and my familiar with data science

00:14:07,839 --> 00:14:11,519
libraries and other languages has

00:14:09,920 --> 00:14:13,519
experience in some more context

00:14:11,519 --> 00:14:14,959
uh than she does but as we're talking

00:14:13,519 --> 00:14:17,040
going through the process of

00:14:14,959 --> 00:14:19,519
what does installation a setup look like

00:14:17,040 --> 00:14:22,639
um we both entered in at completely

00:14:19,519 --> 00:14:24,160
different places and so even though we

00:14:22,639 --> 00:14:26,079
are both doing with the knowledge that

00:14:24,160 --> 00:14:27,120
we have to outline the process from our

00:14:26,079 --> 00:14:29,199
point of view

00:14:27,120 --> 00:14:31,279
we even can't fully account for all the

00:14:29,199 --> 00:14:32,959
concepts that impact or aren't observed

00:14:31,279 --> 00:14:35,040
in an installation

00:14:32,959 --> 00:14:36,720
those social concepts like experience

00:14:35,040 --> 00:14:39,360
which you can't represent or explain

00:14:36,720 --> 00:14:40,959
through mathematical formalisms

00:14:39,360 --> 00:14:42,720
in addition to that there's another

00:14:40,959 --> 00:14:44,240
place that we identified in the make a

00:14:42,720 --> 00:14:46,320
decision step

00:14:44,240 --> 00:14:47,279
that's probably potentially procedural

00:14:46,320 --> 00:14:48,720
contextual

00:14:47,279 --> 00:14:50,720
that may prevent people from adopting a

00:14:48,720 --> 00:14:51,040
library like this and one of those might

00:14:50,720 --> 00:14:52,880
be

00:14:51,040 --> 00:14:55,040
an open source license that's attached

00:14:52,880 --> 00:14:57,199
to this library may not comply with the

00:14:55,040 --> 00:14:58,720
user's corporate open source policies

00:14:57,199 --> 00:15:00,720
and we have no way of capturing that

00:14:58,720 --> 00:15:02,959
kind of data in this metrics pipeline

00:15:00,720 --> 00:15:03,920
to tell us whether or not our library

00:15:02,959 --> 00:15:06,480
and our adoption

00:15:03,920 --> 00:15:08,240
is successful just based on the aspects

00:15:06,480 --> 00:15:13,199
that we've identified as well as the

00:15:08,240 --> 00:15:16,320
objectives that we're naming

00:15:13,199 --> 00:15:18,000
so maybe the the whole process of

00:15:16,320 --> 00:15:21,440
installation is a little bit too

00:15:18,000 --> 00:15:24,079
too broad so let's narrow down on

00:15:21,440 --> 00:15:26,079
one specific aspect that we can really

00:15:24,079 --> 00:15:28,240
sink our teeth into

00:15:26,079 --> 00:15:29,120
the actual process of pulling the

00:15:28,240 --> 00:15:31,759
library

00:15:29,120 --> 00:15:34,800
onto a user's computer and ensuring they

00:15:31,759 --> 00:15:34,800
can build against it

00:15:36,959 --> 00:15:41,040
so what can we measure about the

00:15:39,839 --> 00:15:44,399
installation

00:15:41,040 --> 00:15:47,839
itself um the two

00:15:44,399 --> 00:15:51,440
things that we thought about

00:15:47,839 --> 00:15:53,360
was the successful installation

00:15:51,440 --> 00:15:54,959
can you install it can you literally

00:15:53,360 --> 00:15:59,440
pull it onto your computer

00:15:54,959 --> 00:16:03,040
and can you build against it but

00:15:59,440 --> 00:16:06,639
these things can't necessarily be

00:16:03,040 --> 00:16:09,680
be properly captured so

00:16:06,639 --> 00:16:10,880
the the question is for a successful

00:16:09,680 --> 00:16:13,680
installation

00:16:10,880 --> 00:16:14,240
can we figure out some proxies to use

00:16:13,680 --> 00:16:17,920
such as

00:16:14,240 --> 00:16:20,959
issues filed questions um etc

00:16:17,920 --> 00:16:23,440
because privacy dictates that we can't

00:16:20,959 --> 00:16:24,639
actively measure successful

00:16:23,440 --> 00:16:26,959
installations

00:16:24,639 --> 00:16:28,160
we don't want the library to call home

00:16:26,959 --> 00:16:31,920
right that's not

00:16:28,160 --> 00:16:35,199
not cool um so what are some

00:16:31,920 --> 00:16:38,480
assumptions that we have around

00:16:35,199 --> 00:16:38,480
actual installation

00:16:40,560 --> 00:16:46,880
well if we untease it it's

00:16:43,920 --> 00:16:49,440
actually quite complex there are some

00:16:46,880 --> 00:16:51,120
things that we don't often think about

00:16:49,440 --> 00:16:53,199
does the person have access to source

00:16:51,120 --> 00:16:56,880
control

00:16:53,199 --> 00:17:00,320
that's a that's a good question does the

00:16:56,880 --> 00:17:02,880
user have go installed

00:17:00,320 --> 00:17:04,000
or is that actually an extra step that

00:17:02,880 --> 00:17:07,839
they'll need to

00:17:04,000 --> 00:17:11,520
complete before they can use our library

00:17:07,839 --> 00:17:11,520
do they have a compatible system

00:17:12,240 --> 00:17:15,520
especially with data science like you're

00:17:14,480 --> 00:17:17,600
going to need some

00:17:15,520 --> 00:17:18,959
you're going to need some memory right

00:17:17,600 --> 00:17:22,240
so

00:17:18,959 --> 00:17:23,600
um there's the open question of whether

00:17:22,240 --> 00:17:27,039
they've they've got the technical

00:17:23,600 --> 00:17:29,360
requirements to actually run the library

00:17:27,039 --> 00:17:30,320
and finally data science libraries tend

00:17:29,360 --> 00:17:33,679
to have

00:17:30,320 --> 00:17:37,360
quite a few dependencies

00:17:33,679 --> 00:17:39,360
so the final question that or the final

00:17:37,360 --> 00:17:41,039
assumption that we have is

00:17:39,360 --> 00:17:42,559
does the person have sufficient

00:17:41,039 --> 00:17:45,760
bandwidth to actually

00:17:42,559 --> 00:17:47,280
install the library plus its

00:17:45,760 --> 00:17:50,320
dependencies

00:17:47,280 --> 00:17:54,480
these are all potential proxies um

00:17:50,320 --> 00:17:58,480
around the all right

00:17:54,480 --> 00:18:00,799
apologies i got mixed up so

00:17:58,480 --> 00:18:02,480
these are all assumptions that we have

00:18:00,799 --> 00:18:04,880
to take into account

00:18:02,480 --> 00:18:07,679
when thinking about successful

00:18:04,880 --> 00:18:07,679
installations

00:18:09,760 --> 00:18:13,039
yeah and this is another place that we

00:18:11,440 --> 00:18:14,160
want to start examining where it's

00:18:13,039 --> 00:18:16,080
potentially possible

00:18:14,160 --> 00:18:18,160
to fall into one of these abstraction

00:18:16,080 --> 00:18:21,280
traps and so

00:18:18,160 --> 00:18:22,960
here if we're looking at download data

00:18:21,280 --> 00:18:26,000
or trying to understand what download

00:18:22,960 --> 00:18:28,080
data tells us about our user base

00:18:26,000 --> 00:18:29,520
you can very easily fall into the

00:18:28,080 --> 00:18:31,200
framing trap by

00:18:29,520 --> 00:18:33,520
by failing to fully account for all the

00:18:31,200 --> 00:18:34,880
users who could be working with our

00:18:33,520 --> 00:18:36,320
technical system

00:18:34,880 --> 00:18:38,240
as julia pointed out there's a lot of

00:18:36,320 --> 00:18:39,360
assumptions that we just made or that we

00:18:38,240 --> 00:18:41,440
would be making

00:18:39,360 --> 00:18:43,760
about somebody who is able to have

00:18:41,440 --> 00:18:46,320
access to these kinds of libraries

00:18:43,760 --> 00:18:47,520
to these kinds of pipelines to the

00:18:46,320 --> 00:18:50,640
source control

00:18:47,520 --> 00:18:53,120
um as to their connectivity issues

00:18:50,640 --> 00:18:55,360
and all of those things because we care

00:18:53,120 --> 00:18:56,160
about making our work as universal as

00:18:55,360 --> 00:18:57,600
possible

00:18:56,160 --> 00:18:59,360
then those are things that we can think

00:18:57,600 --> 00:19:01,039
about look at the assumptions for and

00:18:59,360 --> 00:19:02,799
mitigate and we can do this by

00:19:01,039 --> 00:19:04,080
adopting what's called a heterogeneous

00:19:02,799 --> 00:19:06,080
engineering approach

00:19:04,080 --> 00:19:07,679
and that simultaneously considers the

00:19:06,080 --> 00:19:10,000
technical components as well as the

00:19:07,679 --> 00:19:12,799
humans who work and live alongside them

00:19:10,000 --> 00:19:14,720
and so for here for example when we are

00:19:12,799 --> 00:19:16,000
looking at like metadata from successful

00:19:14,720 --> 00:19:17,280
downloads for something such as

00:19:16,000 --> 00:19:19,120
geographic region

00:19:17,280 --> 00:19:20,720
we have to still recognize as a part of

00:19:19,120 --> 00:19:21,600
our analysis on our metrics that this

00:19:20,720 --> 00:19:24,160
only shows

00:19:21,600 --> 00:19:25,280
part of the picture so we can't say from

00:19:24,160 --> 00:19:27,520
this kind of data

00:19:25,280 --> 00:19:28,480
well we're really doing well in this

00:19:27,520 --> 00:19:31,039
country

00:19:28,480 --> 00:19:33,120
from that metric but it does allow you

00:19:31,039 --> 00:19:35,919
to ask better questions like

00:19:33,120 --> 00:19:37,440
what drove downloads in this area why

00:19:35,919 --> 00:19:40,400
were these users

00:19:37,440 --> 00:19:41,360
able to successfully download here and

00:19:40,400 --> 00:19:43,520
something like

00:19:41,360 --> 00:19:45,280
what are other blockers to a successful

00:19:43,520 --> 00:19:45,840
download that might exist for other

00:19:45,280 --> 00:19:48,559
users

00:19:45,840 --> 00:19:50,480
in this area and so by moving from this

00:19:48,559 --> 00:19:51,919
algorithmic frame to the data frame that

00:19:50,480 --> 00:19:53,520
you're looking at outputs and inputs to

00:19:51,919 --> 00:19:54,960
the humans that move alongside of it in

00:19:53,520 --> 00:19:57,120
the sociotechnical frame

00:19:54,960 --> 00:19:58,080
you can ask better and different

00:19:57,120 --> 00:19:59,760
questions

00:19:58,080 --> 00:20:01,120
and we really want to emphasize this

00:19:59,760 --> 00:20:02,480
point especially as you're looking at

00:20:01,120 --> 00:20:04,799
metrics that these are always

00:20:02,480 --> 00:20:06,000
a starting off point for you to ask more

00:20:04,799 --> 00:20:07,760
and better questions

00:20:06,000 --> 00:20:09,520
like this especially about the people

00:20:07,760 --> 00:20:11,600
you care about which is

00:20:09,520 --> 00:20:13,039
not only who is using your information

00:20:11,600 --> 00:20:13,919
or who's using your project but who

00:20:13,039 --> 00:20:16,480
could be using

00:20:13,919 --> 00:20:16,480
your project

00:20:18,559 --> 00:20:25,280
okay um now that we

00:20:22,159 --> 00:20:28,080
uh we've identified our

00:20:25,280 --> 00:20:28,559
um our potential metrics we can move

00:20:28,080 --> 00:20:31,600
ahead

00:20:28,559 --> 00:20:32,320
with establishing baselines again you

00:20:31,600 --> 00:20:35,360
need to know

00:20:32,320 --> 00:20:38,559
where you are now

00:20:35,360 --> 00:20:41,919
but this is a new library so we

00:20:38,559 --> 00:20:43,760
really aren't anywhere currently

00:20:41,919 --> 00:20:47,600
remember that we can make an informed

00:20:43,760 --> 00:20:49,679
estimate to try and back into a baseline

00:20:47,600 --> 00:20:52,240
we could take an inventory of other

00:20:49,679 --> 00:20:53,600
libraries and look at their metrics

00:20:52,240 --> 00:20:57,120
and start measuring our library's

00:20:53,600 --> 00:20:57,120
performance with respect to them

00:21:00,480 --> 00:21:04,640
and so here's where it's very easy to

00:21:02,400 --> 00:21:06,080
fall into the portability trap

00:21:04,640 --> 00:21:07,840
when you're trying to estimate where you

00:21:06,080 --> 00:21:09,840
are and where you want to be

00:21:07,840 --> 00:21:12,480
especially because you're looking for

00:21:09,840 --> 00:21:13,679
other analogs or other comparisons that

00:21:12,480 --> 00:21:15,520
you could make against

00:21:13,679 --> 00:21:16,960
the thing that you're working on

00:21:15,520 --> 00:21:18,000
programming in computer science in

00:21:16,960 --> 00:21:20,080
general hoards

00:21:18,000 --> 00:21:22,960
portability to be a highly valuable

00:21:20,080 --> 00:21:24,799
trait and the problem with this can be

00:21:22,960 --> 00:21:26,640
when you're not able to accurately

00:21:24,799 --> 00:21:29,760
assess when solutions

00:21:26,640 --> 00:21:30,000
that to questions from one context would

00:21:29,760 --> 00:21:32,159
lead

00:21:30,000 --> 00:21:33,120
you in the wrong direction and so in

00:21:32,159 --> 00:21:36,000
this case

00:21:33,120 --> 00:21:37,760
if we are comparing our library to other

00:21:36,000 --> 00:21:40,960
types of go libraries

00:21:37,760 --> 00:21:43,600
we could get misleading or inaccurate

00:21:40,960 --> 00:21:46,480
inaccurate baselines or estimates for a

00:21:43,600 --> 00:21:48,240
data science specific go library

00:21:46,480 --> 00:21:50,159
data science like julia said has

00:21:48,240 --> 00:21:50,960
dependencies many dependencies in a

00:21:50,159 --> 00:21:54,159
project

00:21:50,960 --> 00:21:55,840
such as access to other data

00:21:54,159 --> 00:21:57,280
and scientific computing libraries as

00:21:55,840 --> 00:21:59,919
well as access to data

00:21:57,280 --> 00:22:01,200
to begin with which is not necessarily a

00:21:59,919 --> 00:22:03,039
prerequisite for

00:22:01,200 --> 00:22:04,559
other go libraries as people are looking

00:22:03,039 --> 00:22:05,919
to figure out what to do with computing

00:22:04,559 --> 00:22:08,559
with go

00:22:05,919 --> 00:22:10,480
go is also not currently currently high

00:22:08,559 --> 00:22:12,559
on the list of preferred languages for

00:22:10,480 --> 00:22:14,559
data scientists or data analysts

00:22:12,559 --> 00:22:16,000
so people who might want to be using

00:22:14,559 --> 00:22:17,440
this kind of package

00:22:16,000 --> 00:22:19,760
may not be present in ecosystem you're

00:22:17,440 --> 00:22:21,120
looking with and so here you would want

00:22:19,760 --> 00:22:23,039
to focus on assumptions for your

00:22:21,120 --> 00:22:23,840
specific application you want to look at

00:22:23,039 --> 00:22:25,039
your domain

00:22:23,840 --> 00:22:26,720
you want to look at the programming

00:22:25,039 --> 00:22:28,320
language you want to look at who is

00:22:26,720 --> 00:22:30,159
present to your community as well as

00:22:28,320 --> 00:22:32,799
their community needs where you might be

00:22:30,159 --> 00:22:35,200
meeting a gap that didn't exist before

00:22:32,799 --> 00:22:36,240
and so if you can't find a good analog

00:22:35,200 --> 00:22:37,919
with where you are

00:22:36,240 --> 00:22:39,760
you can start at the very beginning

00:22:37,919 --> 00:22:42,400
which is a very good place to start

00:22:39,760 --> 00:22:42,400
at zero

00:22:43,679 --> 00:22:48,000
okay we've uh we've avoided the

00:22:46,159 --> 00:22:49,280
portability trap and established our

00:22:48,000 --> 00:22:51,360
baselines

00:22:49,280 --> 00:22:52,880
next step is how we want to see our

00:22:51,360 --> 00:22:55,760
measurements progress

00:22:52,880 --> 00:22:58,159
how they trend again we can't measure

00:22:55,760 --> 00:23:01,280
the successful installations directly

00:22:58,159 --> 00:23:04,159
but some things we can measure are

00:23:01,280 --> 00:23:06,640
number of downloads maybe increasing

00:23:04,159 --> 00:23:09,520
with the number of issues decreasing

00:23:06,640 --> 00:23:10,559
if we can see the number of installation

00:23:09,520 --> 00:23:13,679
issues decreasing

00:23:10,559 --> 00:23:14,559
we can safely interpret or can we safely

00:23:13,679 --> 00:23:16,240
interpret

00:23:14,559 --> 00:23:18,240
that to mean that the number of users

00:23:16,240 --> 00:23:19,039
who experience difficulties have gone

00:23:18,240 --> 00:23:20,720
down

00:23:19,039 --> 00:23:22,159
and coupling that with the increased

00:23:20,720 --> 00:23:22,960
numbers of people downloading the

00:23:22,159 --> 00:23:25,600
library

00:23:22,960 --> 00:23:27,760
that seems to be a clear indication of

00:23:25,600 --> 00:23:31,440
an easy installation process

00:23:27,760 --> 00:23:32,720
right amanda well this is also where you

00:23:31,440 --> 00:23:33,679
want to make sure that you're taking

00:23:32,720 --> 00:23:37,840
caution

00:23:33,679 --> 00:23:40,960
and so you have the opportunity here

00:23:37,840 --> 00:23:42,720
to fall into the solutionism trap we've

00:23:40,960 --> 00:23:44,640
done a good job so far of reminding

00:23:42,720 --> 00:23:46,480
ourselves of the human component and the

00:23:44,640 --> 00:23:47,760
social context surrounding our new data

00:23:46,480 --> 00:23:50,240
science library

00:23:47,760 --> 00:23:52,320
by analyzing our trend data it's really

00:23:50,240 --> 00:23:54,799
easy to fall into this kind of trap

00:23:52,320 --> 00:23:56,400
if we assume that our metrics process

00:23:54,799 --> 00:23:57,200
and the approximations that we are

00:23:56,400 --> 00:23:59,520
making

00:23:57,200 --> 00:24:02,000
are telling us the story we need to hear

00:23:59,520 --> 00:24:03,919
and the full picture of what's happening

00:24:02,000 --> 00:24:05,919
but dashboards and metrics are only

00:24:03,919 --> 00:24:06,799
indicators of project health and they

00:24:05,919 --> 00:24:08,799
may not contain

00:24:06,799 --> 00:24:10,480
all of the nuance and the unmeasurable

00:24:08,799 --> 00:24:12,559
attributes you need to understand to

00:24:10,480 --> 00:24:14,720
make full project decisions

00:24:12,559 --> 00:24:17,120
uh human preferences are not rational

00:24:14,720 --> 00:24:18,159
and human psychology is not conclusively

00:24:17,120 --> 00:24:20,240
measurable

00:24:18,159 --> 00:24:21,600
so you cannot fully quantify your

00:24:20,240 --> 00:24:24,640
community or your

00:24:21,600 --> 00:24:26,240
users through these automated pipelines

00:24:24,640 --> 00:24:27,600
so you have to focus really here and

00:24:26,240 --> 00:24:29,200
understand that remember that when

00:24:27,600 --> 00:24:31,200
you're looking at your project health

00:24:29,200 --> 00:24:32,640
when you're looking at your community

00:24:31,200 --> 00:24:34,320
health because that's part of your

00:24:32,640 --> 00:24:36,080
project and what you're working on

00:24:34,320 --> 00:24:38,000
that you have to continue to build

00:24:36,080 --> 00:24:39,600
communities and not audiences

00:24:38,000 --> 00:24:41,440
and the difference here really is that

00:24:39,600 --> 00:24:43,120
connection piece so who gets to have

00:24:41,440 --> 00:24:44,480
voice who gets to have attention and who

00:24:43,120 --> 00:24:46,480
gets to make decisions

00:24:44,480 --> 00:24:48,400
and how those are listened to so turning

00:24:46,480 --> 00:24:50,080
those unidirectional arrows into

00:24:48,400 --> 00:24:52,080
bi-directional arrows

00:24:50,080 --> 00:24:53,919
and so ask people open-ended questions

00:24:52,080 --> 00:24:56,000
that don't fit cleanly in a one-to-five

00:24:53,919 --> 00:24:57,520
scale on a user survey

00:24:56,000 --> 00:24:59,120
and learn from their experiences and

00:24:57,520 --> 00:25:00,159
what shapes them to help really

00:24:59,120 --> 00:25:01,840
understand

00:25:00,159 --> 00:25:03,200
how you are doing how your project's

00:25:01,840 --> 00:25:05,840
doing and where you want the direction

00:25:03,200 --> 00:25:05,840
of things to go

00:25:06,960 --> 00:25:11,279
the final step in our metrics journey is

00:25:09,120 --> 00:25:14,720
to determine our signal phenomena

00:25:11,279 --> 00:25:16,960
for installing the library an increase

00:25:14,720 --> 00:25:18,240
in platform support requests could

00:25:16,960 --> 00:25:21,200
indicate an increase

00:25:18,240 --> 00:25:22,720
in the number of types of users that

00:25:21,200 --> 00:25:23,360
would be a good example of a leading

00:25:22,720 --> 00:25:26,720
signal

00:25:23,360 --> 00:25:28,960
or a leading indicator

00:25:26,720 --> 00:25:30,559
an increase in submitted patches to the

00:25:28,960 --> 00:25:33,279
installation documentation

00:25:30,559 --> 00:25:34,320
could indicate that users are already

00:25:33,279 --> 00:25:35,919
frustrated

00:25:34,320 --> 00:25:42,960
and need instructions that are more

00:25:35,919 --> 00:25:46,480
clear that would be a lagging signal

00:25:42,960 --> 00:25:48,799
so with all these uh steps and traps

00:25:46,480 --> 00:25:50,559
to avoid remember that the metrics you

00:25:48,799 --> 00:25:51,440
choose are a reflection of what matters

00:25:50,559 --> 00:25:54,080
to you

00:25:51,440 --> 00:25:55,200
your project and your community take the

00:25:54,080 --> 00:25:58,320
time to be thoughtful

00:25:55,200 --> 00:25:59,279
to dive deeper into what matters to be

00:25:58,320 --> 00:26:02,320
measured

00:25:59,279 --> 00:26:04,720
and to avoid the abstraction traps

00:26:02,320 --> 00:26:06,960
if your goal is not to just release work

00:26:04,720 --> 00:26:10,640
but to foster and nurture the ecosystem

00:26:06,960 --> 00:26:11,279
that we all rely upon i think we can

00:26:10,640 --> 00:26:13,760
agree

00:26:11,279 --> 00:26:15,600
that the extra work is necessary for the

00:26:13,760 --> 00:26:18,799
common good

00:26:15,600 --> 00:26:18,799
we're in this raft together

00:26:19,919 --> 00:26:23,120
so here are some resources and

00:26:22,400 --> 00:26:25,760
references

00:26:23,120 --> 00:26:26,559
that that we mentioned in in the talk

00:26:25,760 --> 00:26:29,840
today

00:26:26,559 --> 00:26:30,480
uh the first two are the roads and

00:26:29,840 --> 00:26:34,640
bridges

00:26:30,480 --> 00:26:37,760
and the paper with the abstraction traps

00:26:34,640 --> 00:26:38,559
and finally we have some a couple of

00:26:37,760 --> 00:26:41,600
links to

00:26:38,559 --> 00:26:44,080
the ocean project open source complex

00:26:41,600 --> 00:26:47,120
ecosystems and networks

00:26:44,080 --> 00:26:48,000
with both our github repository as well

00:26:47,120 --> 00:26:52,000
as

00:26:48,000 --> 00:26:55,840
opportunities for research awards

00:26:52,000 --> 00:26:55,840
thank you thank you

00:26:57,200 --> 00:27:00,480
hi great thank you um amanda and julia

00:26:59,760 --> 00:27:03,679
so much

00:27:00,480 --> 00:27:05,440
for that talk it was um really good um

00:27:03,679 --> 00:27:06,799
so i want to say to the audience um if

00:27:05,440 --> 00:27:09,200
you have any questions

00:27:06,799 --> 00:27:10,880
um drop them in the chat or the

00:27:09,200 --> 00:27:13,600
questions bar we have

00:27:10,880 --> 00:27:14,080
um a couple of minutes um for questions

00:27:13,600 --> 00:27:17,600
so

00:27:14,080 --> 00:27:19,600
don't be shy um put those in

00:27:17,600 --> 00:27:22,480
i wanted to while we wait for anyone's

00:27:19,600 --> 00:27:24,080
questions i i wanted to ask something um

00:27:22,480 --> 00:27:26,000
the there's a quote in there build

00:27:24,080 --> 00:27:28,559
communities not audiences

00:27:26,000 --> 00:27:29,200
um which i think is uh really stood out

00:27:28,559 --> 00:27:32,799
to me

00:27:29,200 --> 00:27:34,159
do you have any examples um

00:27:32,799 --> 00:27:36,159
that have impressed you where that has

00:27:34,159 --> 00:27:39,360
taken place so that we can get an idea

00:27:36,159 --> 00:27:39,360
of what that looks like

00:27:41,520 --> 00:27:45,679
i mean i think there are there are so

00:27:44,080 --> 00:27:50,640
many different examples

00:27:45,679 --> 00:27:50,640
um in i feel like

00:27:50,720 --> 00:27:57,679
you know some of the the more popular

00:27:54,000 --> 00:27:59,520
examples are um like kubernetes

00:27:57,679 --> 00:28:01,600
which i feel like has done a very good

00:27:59,520 --> 00:28:02,720
job at bringing the community along with

00:28:01,600 --> 00:28:06,559
them

00:28:02,720 --> 00:28:10,799
um and they've been very intentional

00:28:06,559 --> 00:28:13,679
about that um amanda do you have a

00:28:10,799 --> 00:28:14,640
shining example in mind um i actually

00:28:13,679 --> 00:28:17,919
think some of the

00:28:14,640 --> 00:28:20,320
like the looking at the history of how

00:28:17,919 --> 00:28:21,520
um core maintainers have changed in

00:28:20,320 --> 00:28:23,600
python over time

00:28:21,520 --> 00:28:25,120
i think is an excellent example of this

00:28:23,600 --> 00:28:28,159
so the way that the

00:28:25,120 --> 00:28:31,440
language community has changed from

00:28:28,159 --> 00:28:34,559
um invitation only style

00:28:31,440 --> 00:28:36,480
core maintainers groups into mentorship

00:28:34,559 --> 00:28:38,240
and to bringing people with them and to

00:28:36,480 --> 00:28:40,640
seeking and looking for

00:28:38,240 --> 00:28:42,880
new maintainers through a growth network

00:28:40,640 --> 00:28:45,200
that to me speaks more to looking

00:28:42,880 --> 00:28:47,760
looking for feedback onto how a group is

00:28:45,200 --> 00:28:50,480
moving and moving a project from

00:28:47,760 --> 00:28:52,159
a central um individual person and

00:28:50,480 --> 00:28:54,960
figurehead into more of a

00:28:52,159 --> 00:28:56,559
like a committee style project for

00:28:54,960 --> 00:28:58,159
something that is so large both of those

00:28:56,559 --> 00:29:00,320
i think are kind of good signals that

00:28:58,159 --> 00:29:02,480
people are looking to really create

00:29:00,320 --> 00:29:05,440
feedback loops as opposed to being one

00:29:02,480 --> 00:29:07,120
direction with projects

00:29:05,440 --> 00:29:09,120
okay great um i have a couple of

00:29:07,120 --> 00:29:12,799
questions from the audience

00:29:09,120 --> 00:29:13,760
and the first one is um what component

00:29:12,799 --> 00:29:16,399
to start with

00:29:13,760 --> 00:29:16,799
when developing community health metrics

00:29:16,399 --> 00:29:19,279
for

00:29:16,799 --> 00:29:22,320
long-term assessments so how often

00:29:19,279 --> 00:29:24,399
should they be revised

00:29:22,320 --> 00:29:26,559
so i would encourage for any kind of

00:29:24,399 --> 00:29:28,159
frequency question around metrics really

00:29:26,559 --> 00:29:30,159
needs to take into consideration

00:29:28,159 --> 00:29:32,880
in consideration how often things are

00:29:30,159 --> 00:29:36,399
changing so if things are changing very

00:29:32,880 --> 00:29:38,640
quickly in your community or if there is

00:29:36,399 --> 00:29:40,080
some kind of global crisis happening

00:29:38,640 --> 00:29:41,520
that is impacting

00:29:40,080 --> 00:29:43,440
many different groups of people at the

00:29:41,520 --> 00:29:45,760
same time or even local crisis that's

00:29:43,440 --> 00:29:47,840
happening in a group of your core users

00:29:45,760 --> 00:29:49,679
you should definitely increase frequency

00:29:47,840 --> 00:29:51,600
in terms of making sure that you are

00:29:49,679 --> 00:29:53,360
monitoring and understanding what is

00:29:51,600 --> 00:29:56,399
happening with a group of people

00:29:53,360 --> 00:29:58,240
because things are changing more rapidly

00:29:56,399 --> 00:30:00,640
to impact them

00:29:58,240 --> 00:30:02,399
and so you want to keep an eye on that

00:30:00,640 --> 00:30:03,200
the other thing i would say would be is

00:30:02,399 --> 00:30:06,880
if you see

00:30:03,200 --> 00:30:09,039
any um any increases in any of your

00:30:06,880 --> 00:30:10,640
signals so julia laid out well

00:30:09,039 --> 00:30:12,399
when you're looking for increasing

00:30:10,640 --> 00:30:13,279
decreasing steady state lagging and

00:30:12,399 --> 00:30:15,919
leading

00:30:13,279 --> 00:30:16,799
if you see any of those also changing

00:30:15,919 --> 00:30:19,679
very quickly

00:30:16,799 --> 00:30:20,880
or then i would say really decrease your

00:30:19,679 --> 00:30:23,039
sampling window

00:30:20,880 --> 00:30:24,000
so that way you understand better when

00:30:23,039 --> 00:30:25,600
things are changing

00:30:24,000 --> 00:30:27,679
that you need to meet those needs that

00:30:25,600 --> 00:30:28,799
you need to meet julia would you add

00:30:27,679 --> 00:30:32,399
something yeah sorry

00:30:28,799 --> 00:30:35,840
yeah i i would just add you know i i

00:30:32,399 --> 00:30:36,720
i know the the temptation to try to get

00:30:35,840 --> 00:30:39,840
like a

00:30:36,720 --> 00:30:42,559
one de facto answer um

00:30:39,840 --> 00:30:43,440
but the the unfortunate reality is that

00:30:42,559 --> 00:30:47,039
there is no

00:30:43,440 --> 00:30:48,399
uh one one answer to to that question it

00:30:47,039 --> 00:30:52,399
really depends

00:30:48,399 --> 00:30:56,000
on um on the contexts involved

00:30:52,399 --> 00:30:58,399
so yeah unfortunately

00:30:56,000 --> 00:30:59,360
okay um okay so i have another question

00:30:58,399 --> 00:31:01,679
um

00:30:59,360 --> 00:31:03,840
in your experience what is the

00:31:01,679 --> 00:31:05,279
maintainer reaction when you propose

00:31:03,840 --> 00:31:09,200
gathering or drawing

00:31:05,279 --> 00:31:09,200
on qualitative data

00:31:10,640 --> 00:31:14,720
yeah that's a good question i think

00:31:13,200 --> 00:31:16,399
qualitative data

00:31:14,720 --> 00:31:17,919
has to be handled very carefully

00:31:16,399 --> 00:31:19,840
quantitative data does as well but

00:31:17,919 --> 00:31:20,559
qualitative needs even more care in

00:31:19,840 --> 00:31:23,760
terms of

00:31:20,559 --> 00:31:27,200
privacy and sometimes anonymity

00:31:23,760 --> 00:31:29,360
our suggestions by the way are for

00:31:27,200 --> 00:31:30,640
any open source project who has a desire

00:31:29,360 --> 00:31:33,600
to move in this direction

00:31:30,640 --> 00:31:34,159
there's no obligation right so if your

00:31:33,600 --> 00:31:36,720
project

00:31:34,159 --> 00:31:38,159
is your if your full desire is a creator

00:31:36,720 --> 00:31:40,559
is to make something

00:31:38,159 --> 00:31:43,200
put it into the world and anybody who

00:31:40,559 --> 00:31:45,760
wants to or can use it can pick it up

00:31:43,200 --> 00:31:47,760
but uh but that's it like that's the

00:31:45,760 --> 00:31:50,399
extent of your creation

00:31:47,760 --> 00:31:51,760
that's absolutely fine right so um

00:31:50,399 --> 00:31:55,760
there's no obligation

00:31:51,760 --> 00:31:58,000
for um for maintainers or creators uh

00:31:55,760 --> 00:31:59,279
necessarily to follow up with pieces of

00:31:58,000 --> 00:32:00,640
their work

00:31:59,279 --> 00:32:02,559
it's just a matter of whether or not you

00:32:00,640 --> 00:32:03,760
want that to be part of the component of

00:32:02,559 --> 00:32:06,640
what you're working with

00:32:03,760 --> 00:32:07,200
um and so i think about it in terms of

00:32:06,640 --> 00:32:08,880
different

00:32:07,200 --> 00:32:11,039
there are definitely different kinds of

00:32:08,880 --> 00:32:14,640
projects

00:32:11,039 --> 00:32:18,320
yeah and unfortunately it seems

00:32:14,640 --> 00:32:22,640
as though the the ability

00:32:18,320 --> 00:32:26,159
um in terms of time money etc

00:32:22,640 --> 00:32:29,440
expertise to really gather

00:32:26,159 --> 00:32:32,080
qualitative data is is sort of limited

00:32:29,440 --> 00:32:35,679
to the larger product projects

00:32:32,080 --> 00:32:38,240
um so a number of them run surveys uh

00:32:35,679 --> 00:32:39,600
yearly surveys twice a year surveys et

00:32:38,240 --> 00:32:41,600
cetera

00:32:39,600 --> 00:32:42,799
to really gather some of that that

00:32:41,600 --> 00:32:46,799
information but it's

00:32:42,799 --> 00:32:47,840
it's um it's not a capability that's

00:32:46,799 --> 00:32:49,919
available to

00:32:47,840 --> 00:32:51,440
to every project and we we definitely

00:32:49,919 --> 00:32:53,440
recognize that

00:32:51,440 --> 00:32:55,279
i i'll add in there that i also think

00:32:53,440 --> 00:32:56,080
that is an excellent opportunity to

00:32:55,279 --> 00:32:58,480
include more

00:32:56,080 --> 00:33:00,240
people in open source projects so there

00:32:58,480 --> 00:33:02,799
are amazing designers

00:33:00,240 --> 00:33:04,240
and researchers and program managers and

00:33:02,799 --> 00:33:07,120
community managers

00:33:04,240 --> 00:33:08,240
who would like to be part of more pieces

00:33:07,120 --> 00:33:09,840
of open source

00:33:08,240 --> 00:33:12,159
but may not necessarily want to be

00:33:09,840 --> 00:33:13,200
working on code bases or triaging or

00:33:12,159 --> 00:33:15,679
issue tracking

00:33:13,200 --> 00:33:17,200
and so if this is a role or an area that

00:33:15,679 --> 00:33:18,960
you're interested in for your project

00:33:17,200 --> 00:33:21,039
there are people who want to be doing

00:33:18,960 --> 00:33:23,600
that with you and contributing as

00:33:21,039 --> 00:33:24,720
in that way and so if you are interested

00:33:23,600 --> 00:33:26,080
in doing this but you don't want to do

00:33:24,720 --> 00:33:28,000
it yourself you can find

00:33:26,080 --> 00:33:30,240
partners and friends and teammates to do

00:33:28,000 --> 00:33:32,399
this with you

00:33:30,240 --> 00:33:34,080
okay great um we've gone a bit over but

00:33:32,399 --> 00:33:35,120
we have two more questions so we'll try

00:33:34,080 --> 00:33:38,159
and squeeze

00:33:35,120 --> 00:33:40,080
those in um the first one is about um

00:33:38,159 --> 00:33:41,360
referencing an earlier talk it says um

00:33:40,080 --> 00:33:43,919
nadi revealed

00:33:41,360 --> 00:33:44,799
the problem of underfunded maintainers

00:33:43,919 --> 00:33:47,760
have you done any

00:33:44,799 --> 00:33:52,559
any research on sustainability and

00:33:47,760 --> 00:33:57,120
well-being of foss authors

00:33:52,559 --> 00:33:59,440
that's a great question um i

00:33:57,120 --> 00:34:00,159
we uh actually had a bit of a book club

00:33:59,440 --> 00:34:02,640
reading her

00:34:00,159 --> 00:34:03,919
her uh working in public book uh

00:34:02,640 --> 00:34:06,960
recently

00:34:03,919 --> 00:34:07,840
um so in terms of underfunded

00:34:06,960 --> 00:34:11,200
maintainers

00:34:07,840 --> 00:34:14,480
i feel as though we we've done

00:34:11,200 --> 00:34:18,839
a bit of research

00:34:14,480 --> 00:34:20,960
um but nothing super

00:34:18,839 --> 00:34:22,560
definitive i feel like

00:34:20,960 --> 00:34:25,119
amanda you might have done a bit more

00:34:22,560 --> 00:34:27,359
work in that in that area

00:34:25,119 --> 00:34:29,119
yeah i'll say that um we do have some

00:34:27,359 --> 00:34:29,919
open research questions that we're

00:34:29,119 --> 00:34:34,960
investigating

00:34:29,919 --> 00:34:37,119
around uh economies in open source

00:34:34,960 --> 00:34:38,800
yeah so if you're interested in that you

00:34:37,119 --> 00:34:39,919
should apply for one of those research

00:34:38,800 --> 00:34:42,000
awards

00:34:39,919 --> 00:34:43,520
yeah if you have an and we'll say to the

00:34:42,000 --> 00:34:44,000
the research awards which we'll bring

00:34:43,520 --> 00:34:45,839
back up

00:34:44,000 --> 00:34:47,760
because this is really important um

00:34:45,839 --> 00:34:48,879
those research awards are not limited to

00:34:47,760 --> 00:34:50,960
academic research

00:34:48,879 --> 00:34:53,040
so they are open for communities they're

00:34:50,960 --> 00:34:55,359
open for independent researchers

00:34:53,040 --> 00:34:56,960
we'd like to really encourage global

00:34:55,359 --> 00:34:58,960
research reach

00:34:56,960 --> 00:35:00,240
around researchers from all over the

00:34:58,960 --> 00:35:02,160
world as well as the communities that

00:35:00,240 --> 00:35:05,440
you're interested in taking a look at so

00:35:02,160 --> 00:35:08,800
please consider applying okay great

00:35:05,440 --> 00:35:10,240
um would you be able to um

00:35:08,800 --> 00:35:12,000
i don't know maybe drop those links in

00:35:10,240 --> 00:35:12,480
the chat afterwards so people can click

00:35:12,000 --> 00:35:15,680
on them

00:35:12,480 --> 00:35:16,160
or sure okay and um we have one last

00:35:15,680 --> 00:35:18,320
question

00:35:16,160 --> 00:35:20,079
um so do you have any thoughts or

00:35:18,320 --> 00:35:22,960
comments about the work being done

00:35:20,079 --> 00:35:23,920
under the um chaos community so the

00:35:22,960 --> 00:35:26,240
community health

00:35:23,920 --> 00:35:28,560
analytics community and the tools that

00:35:26,240 --> 00:35:30,480
are available there

00:35:28,560 --> 00:35:31,920
yeah one of our colleagues uh is

00:35:30,480 --> 00:35:33,760
actually one of the contributors in

00:35:31,920 --> 00:35:34,640
chaos as well and i think i've dropped a

00:35:33,760 --> 00:35:36,400
comment or two

00:35:34,640 --> 00:35:38,160
um when i've been able to going into the

00:35:36,400 --> 00:35:39,920
repo i think that's a great group of

00:35:38,160 --> 00:35:43,359
people who are working on some really

00:35:39,920 --> 00:35:44,720
interesting projects um i i like their

00:35:43,359 --> 00:35:45,839
approach i like their community

00:35:44,720 --> 00:35:48,480
collaborative approach

00:35:45,839 --> 00:35:49,599
um excited to work on more and help give

00:35:48,480 --> 00:35:53,280
feedback as well as

00:35:49,599 --> 00:35:54,079
any time as well uh it's a complex area

00:35:53,280 --> 00:35:59,839
so there's

00:35:54,079 --> 00:35:59,839
uh there's plenty of room yes

00:36:17,920 --> 00:36:20,000

YouTube URL: https://www.youtube.com/watch?v=yrBqXfGzx-U


