Title: CppCon 2017: Jan Plhak “Pybind11 - Python on Steroids”
Publication date: 2017-10-28
Playlist: CppCon 2017 Lightning Talks
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2017
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:00,060 --> 00:00:05,069
so let's talk about pythons because you

00:00:02,580 --> 00:00:06,990
know when you save Python you probably

00:00:05,069 --> 00:00:09,960
think you know for a first time probably

00:00:06,990 --> 00:00:12,540
think of some you know big green massive

00:00:09,960 --> 00:00:15,059
kick-ass snake that's going to bite off

00:00:12,540 --> 00:00:17,730
your head something you know like this

00:00:15,059 --> 00:00:19,560
the snake is you know fast and at the

00:00:17,730 --> 00:00:21,869
ends you know it's very much like

00:00:19,560 --> 00:00:23,789
suppose paws but as you start you know

00:00:21,869 --> 00:00:26,880
digging into the Python you find that

00:00:23,789 --> 00:00:37,800
it's not so it's it's more like like

00:00:26,880 --> 00:00:39,899
this you know tightness is adorable like

00:00:37,800 --> 00:00:42,180
really lovable and very much like this

00:00:39,899 --> 00:00:44,340
smooth it's like but it's very slow you

00:00:42,180 --> 00:00:48,329
find out that very you know very fast

00:00:44,340 --> 00:00:50,940
and by this time you got very used to do

00:00:48,329 --> 00:00:52,680
you know like this very high level

00:00:50,940 --> 00:00:54,629
programming and you're used to that you

00:00:52,680 --> 00:00:56,699
like it very much and you don't want to

00:00:54,629 --> 00:00:58,649
go back to the snake you know because

00:00:56,699 --> 00:01:01,920
it's trying to bite your head off and it

00:00:58,649 --> 00:01:06,320
has big teeth and what do you actually

00:01:01,920 --> 00:01:06,320
are looking for is something like this

00:01:06,799 --> 00:01:15,119
you know you know it would be nice to

00:01:09,810 --> 00:01:17,939
have like c++ snakey back-end and this

00:01:15,119 --> 00:01:21,840
adorable front-end that Python provides

00:01:17,939 --> 00:01:27,030
I think it's very good picture I made it

00:01:21,840 --> 00:01:30,570
myself so that's when the PI by 911

00:01:27,030 --> 00:01:34,320
comes in place by vine is a C++ library

00:01:30,570 --> 00:01:37,619
that provides fighting bindings of C++

00:01:34,320 --> 00:01:40,829
code it's very easy to use it exposes

00:01:37,619 --> 00:01:43,320
all the fancy types and you can define

00:01:40,829 --> 00:01:48,360
in C++ it's very lightweight

00:01:43,320 --> 00:01:50,610
I'd only use and know what's most

00:01:48,360 --> 00:01:53,759
important is that its Floyd's the modern

00:01:50,610 --> 00:01:57,360
features of C++ 11 and later standards

00:01:53,759 --> 00:01:59,939
like unlike the older version of boost

00:01:57,360 --> 00:02:05,670
which these bindings to Python and this

00:01:59,939 --> 00:02:07,860
kind of stuff so let's see it some see

00:02:05,670 --> 00:02:12,830
some examples because that's what we

00:02:07,860 --> 00:02:17,810
want right so here is an example of some

00:02:12,830 --> 00:02:21,690
it creates redefine point we defined

00:02:17,810 --> 00:02:25,560
function that's that uses mr. Graham's

00:02:21,690 --> 00:02:27,960
convex hull and convex hull algorithm

00:02:25,560 --> 00:02:31,170
and tries to compute it and then we

00:02:27,960 --> 00:02:33,390
define this you know magic syntax down

00:02:31,170 --> 00:02:36,540
there that says that we are about to

00:02:33,390 --> 00:02:39,260
define and Python module it's called the

00:02:36,540 --> 00:02:43,920
UNICOR one because we want unicorns and

00:02:39,260 --> 00:02:45,690
then we define a point we define its

00:02:43,920 --> 00:02:47,610
constructors you can see that it's very

00:02:45,690 --> 00:02:49,650
easy to define constructors you just

00:02:47,610 --> 00:02:52,350
name the signature of the point and it

00:02:49,650 --> 00:02:55,650
just does is magic and then you say it's

00:02:52,350 --> 00:02:58,440
some attributes like x and y and then

00:02:55,650 --> 00:03:00,510
you bind the conveys an algorithm and

00:02:58,440 --> 00:03:02,640
then you go to peyten you know compile

00:03:00,510 --> 00:03:05,730
this thing and import it to pi to me

00:03:02,640 --> 00:03:09,420
like this it's very simple and so here

00:03:05,730 --> 00:03:12,540
you can see I created HTTP little HTTP

00:03:09,420 --> 00:03:17,070
servers server that just has this convex

00:03:12,540 --> 00:03:21,810
our end point and it accepts points in

00:03:17,070 --> 00:03:23,760
in jason parses it sends it to c++ and

00:03:21,810 --> 00:03:28,230
computes it and sends it back it's very

00:03:23,760 --> 00:03:30,989
easy and so that's what you can do with

00:03:28,230 --> 00:03:34,170
bye-bye and another thing is that in

00:03:30,989 --> 00:03:35,580
python you usually get in terms with you

00:03:34,170 --> 00:03:38,220
know the guild the global interpreter

00:03:35,580 --> 00:03:43,049
lock because python and realize heavily

00:03:38,220 --> 00:03:45,299
on that and you can help this you can

00:03:43,049 --> 00:03:47,790
make actually fighting through the power

00:03:45,299 --> 00:03:48,989
by using executors because you don't

00:03:47,790 --> 00:03:53,400
want you know your a synchronous

00:03:48,989 --> 00:03:57,510
functions block and then in c++ when you

00:03:53,400 --> 00:04:00,180
define your function you can really is

00:03:57,510 --> 00:04:02,430
the Gil if you are sure that your

00:04:00,180 --> 00:04:04,620
resources are safe it really is the Gil

00:04:02,430 --> 00:04:07,410
and you you know obtained through

00:04:04,620 --> 00:04:12,019
parallelism like that's the Holy Grail

00:04:07,410 --> 00:04:14,940
probably in in peyten listen spider

00:04:12,019 --> 00:04:16,950
there are loads and loads more features

00:04:14,940 --> 00:04:19,260
that PI bond currently supports the

00:04:16,950 --> 00:04:23,330
maintenance are working very hard to add

00:04:19,260 --> 00:04:23,330
more and more stuff and it's great and

00:04:23,390 --> 00:04:26,280
that's about it

00:04:24,840 --> 00:04:29,520
you can find

00:04:26,280 --> 00:04:30,990
final github there is linked and thank

00:04:29,520 --> 00:04:33,300
you for watching a query questions just

00:04:30,990 --> 00:04:37,759
find me later

00:04:33,300 --> 00:04:37,759

YouTube URL: https://www.youtube.com/watch?v=uM1QQXekhpo


