Title: CppCon 2017: Victor Ciura “10 Things Junior C++ Devs Don't Get”
Publication date: 2017-10-28
Playlist: CppCon 2017 Lightning Talks
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2017
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:01,440 --> 00:00:05,420
I'll start by saying you're not exactly my target audience for this talk.

00:00:05,760 --> 00:00:07,860
But I'm counting on you to spread the word.

00:00:08,220 --> 00:00:13,640
It's based on my experience working with junior developers on my team

00:00:13,640 --> 00:00:18,240
and working with interns and students over the years.

00:00:18,680 --> 00:00:25,080
I'm hoping to get the message across, and maybe this recording will go viral.

00:00:25,800 --> 00:00:36,700
I'll start with things that junior or beginner C++ developers don't get.

00:00:37,080 --> 00:00:42,620
They don't get that math is important. I'll give you an example here.

00:00:43,060 --> 00:00:45,860
You should start by reading this book.

00:00:46,000 --> 00:00:50,580
It's still available at the book store outside, on the hallway.

00:00:50,880 --> 00:00:55,880
This book is about the story, and it follows the invention of the algorithm,

00:00:56,020 --> 00:01:01,500
from about 2000 BC to the current day.

00:01:02,080 --> 00:01:08,400
I think it's a very inspirational book, and every young C++ developer should read it.

00:01:10,160 --> 00:01:15,380
Another thing junior developers don't get is generic programming.

00:01:15,560 --> 00:01:17,340
They think it's all about templates.

00:01:17,600 --> 00:01:21,360
It's not just about templates, it's about algorithms

00:01:21,660 --> 00:01:24,900
and how they're associated with a set of common properties,

00:01:25,120 --> 00:01:30,140
and finding the most general representation of algorithms and abstractions.

00:01:30,420 --> 00:01:35,180
The fact that there is a generic algorithm behind every 'while' or 'for' loop,

00:01:35,600 --> 00:01:40,160
and the fact that finding the generic setting of an algorithm

00:01:40,320 --> 00:01:44,860
is the natural extension of 4000 years of mathematics.

00:01:45,960 --> 00:01:53,640
I encourage you to watch an older talk by Alexander Stepanov on STL and its design principles.

00:01:55,580 --> 00:02:00,340
Another thing junior developers don't get is that books are still a thing.

00:02:00,520 --> 00:02:06,880
They're not obsolete, not even older books like these two I have here for example.

00:02:07,380 --> 00:02:12,240
Because these books teach the core concepts and the fundamentals of programming,

00:02:12,440 --> 00:02:14,720
and those don't change over the years.

00:02:15,180 --> 00:02:18,220
Frameworks do. Languages do.

00:02:19,720 --> 00:02:23,580
Junior programmers don't get the difference between efficiency and performance,

00:02:23,740 --> 00:02:26,440
and why we care about this.

00:02:26,440 --> 00:02:31,200
Because "software is getting slower much more rapidly than hardware becomes faster."

00:02:31,900 --> 00:02:35,860
Another quote from Niklaus Wirth from the previous book.

00:02:36,480 --> 00:02:42,240
Efficiency is about the amount of work you need to do, and it's governed by your algorithms.

00:02:42,320 --> 00:02:47,940
Performance is how fast you can do that work, and it's governed by your chosen data structures.

00:02:50,380 --> 00:02:56,840
Another thing that junior developers don't get is that smart pointers are not the answer for everything.

00:02:57,680 --> 00:03:01,120
I would like to see much less shared_ptr.

00:03:03,020 --> 00:03:07,760
Another thing junior developers don't get is single responsibility principles.

00:03:08,120 --> 00:03:14,360
I think everyone of us has seen a class that looks like this with too much stuff in it.

00:03:17,800 --> 00:03:21,340
Another thing junior developers don't get is exception safety.

00:03:21,340 --> 00:03:25,260
They think its all about throwing and catching exceptions.

00:03:26,080 --> 00:03:28,280
I say no, it's about basic exception guarantees,

00:03:28,280 --> 00:03:32,400
about strong exception guarantees, about RAII and noexcept.

00:03:34,740 --> 00:03:38,480
Another thing junior developers don't get is that documentation matters.

00:03:38,580 --> 00:03:42,300
You have to write documentation with the same vigor that you write your code,

00:03:42,300 --> 00:03:46,520
and express your intent and design clearly, in plain, good English.

00:03:46,900 --> 00:03:48,760
This includes your comments.

00:03:48,880 --> 00:03:55,740
I think everybody should watch Walter Brown's talk that happened today over lunch.

00:03:55,960 --> 00:03:58,960
Catch that recording; it was very entertaining.

00:04:00,160 --> 00:04:05,640
Finally, another thing junior developers don't get is computer architecture

00:04:05,640 --> 00:04:09,080
and the fact that we actually program silicon.

00:04:09,080 --> 00:04:14,720
We have to be aware of memory, CPU architecture, and caches.

00:04:15,280 --> 00:04:19,700
Attending conferences is not just about the sessions.

00:04:19,740 --> 00:04:24,520
It's about meeting people and having ad hoc discussions,

00:04:24,520 --> 00:04:29,680

YouTube URL: https://www.youtube.com/watch?v=dSSIXKe6iXE


