Title: Modern C++ Safety and Security At 20 - Matthew Butler - CppCon 2020
Publication date: 2020-09-30
Playlist: CppCon 2020 Day 4
Description: 
	https://cppcon.org/
https://github.com/CppCon/CppCon2020
---
The C++20 standard is now complete and the features and changes to the language promise to be more extensive than even C++11, which started the modern age. Engineers who work in safety critical applications, security or even applications that get abused by customers every day have special needs from the language. But what does the new standard give us as far as writing clean, safe, secure code?

In this talk, we'll look at the new features and changes to the standard and see how they affect outcomes for code written for safety critical and secure environments or even code that just needs survive the day with whatever your users throw at it.

Among the features we'll look at are: ranges, concepts, std::format, std::span, std::atomic＜std::shared_ptr＞＞, co-routines, designates initializers, spaceship operator, attributes, using enum.

As we'll see, some new features are huge wins for safety and security while others look like wins but come with their own problems.

Then we'll look ahead at what the standards committee is working on for C++23. C++20 has a lot of changes and new features. When this talk is over you'll know which features help your write clean, safe, secure code.

And which don't.

---
Matthew Butler has spent the last three decades as a systems architect and software engineer developing systems for network security, law enforcement and the military. He primarily works in signals intelligence using C, C++ and Modern C++ to build systems running on hardware platforms ranging from embedded micro-controllers to FPGAs to large-scale airborne platforms. Much of his experience has come in either building systems that defend against attackers or building highly sensitive systems that are targets. He is actively involved in the C++ community and is on various planning committees for C++Now and CppCon as well as being a speaker at both. He is also a member of the ISO C++ Standards Committee.

Over the past thirty years, he has learned the harsh lessons on how we often write systems that fail, not because they don't scale, but because they aren't designed to be secure.

---
Streamed & Edited by Digital Medium Ltd - events.digital-medium.co.uk
events@digital-medium.co.uk
YouTube URL: https://www.youtube.com/watch?v=uccarZGpDhk


