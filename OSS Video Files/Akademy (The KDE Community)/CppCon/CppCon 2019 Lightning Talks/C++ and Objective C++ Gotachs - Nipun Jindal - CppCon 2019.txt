Title: C++ and Objective C++ Gotachs - Nipun Jindal - CppCon 2019
Publication date: 2019-10-23
Playlist: CppCon 2019 Lightning Talks
Description: 
	http://CppCon.org
—
Discussion & Comments: https://www.reddit.com/r/cpp/
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2019
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:08,389 --> 00:00:13,469
here we won I'm Nepal I'll be talking

00:00:11,219 --> 00:00:15,570
about C++ and Objective C clusters

00:00:13,469 --> 00:00:17,550
gorgeous I hope that a lot of you use

00:00:15,570 --> 00:00:20,550
objective C++ and would find this

00:00:17,550 --> 00:00:23,009
helpful so at the top you see this

00:00:20,550 --> 00:00:24,660
function which is a C++ function and it

00:00:23,009 --> 00:00:26,340
takes a void pointer and that's an

00:00:24,660 --> 00:00:27,929
objective-c object that I want to pass

00:00:26,340 --> 00:00:30,269
so how do I do that

00:00:27,929 --> 00:00:32,430
I create an objective-c object which is

00:00:30,269 --> 00:00:34,860
an S object and I typecast that void

00:00:32,430 --> 00:00:37,320
pointer and create a new standard thread

00:00:34,860 --> 00:00:40,739
and pass it on however as you see there

00:00:37,320 --> 00:00:43,800
is an error that clan gives me so I use

00:00:40,739 --> 00:00:46,949
the auto fix for it and what it does it

00:00:43,800 --> 00:00:49,289
it adds a bridge attribute in front of

00:00:46,949 --> 00:00:51,329
void and this works perfectly fine the

00:00:49,289 --> 00:00:54,719
only thing is that the problem starts

00:00:51,329 --> 00:00:56,969
now what are things now is that it can

00:00:54,719 --> 00:00:58,710
actually release this object if this is

00:00:56,969 --> 00:01:00,539
the last reference to it and then

00:00:58,710 --> 00:01:03,899
perform task doesn't know anything about

00:01:00,539 --> 00:01:07,530
this object so it would call it would

00:01:03,899 --> 00:01:09,600
make a use after free vulnerability so

00:01:07,530 --> 00:01:12,180
how do I solve this so instead of bridge

00:01:09,600 --> 00:01:14,490
I have to call bridge retained so that

00:01:12,180 --> 00:01:16,409
when this argument is pushed inside the

00:01:14,490 --> 00:01:18,450
sack it actually cause objective-c

00:01:16,409 --> 00:01:20,490
retained for a first which actually Plus

00:01:18,450 --> 00:01:22,229
Ones dereference and then when you go

00:01:20,490 --> 00:01:24,720
and perform task you actually call

00:01:22,229 --> 00:01:27,630
bridge a bridge transfer which actually

00:01:24,720 --> 00:01:30,150
brings it back to the arc lands so that

00:01:27,630 --> 00:01:33,030
once you go out of the scope you can

00:01:30,150 --> 00:01:34,850
actually release this object so this is

00:01:33,030 --> 00:01:38,460
how you actually move your seat

00:01:34,850 --> 00:01:41,880
objective C++ object to C++ in the AR C

00:01:38,460 --> 00:01:44,460
domain the other common example is using

00:01:41,880 --> 00:01:46,470
C++ objects in blocks so just a quick

00:01:44,460 --> 00:01:48,750
example of how do you use objective C++

00:01:46,470 --> 00:01:51,869
objects cells so there's a CPP con

00:01:48,750 --> 00:01:55,049
class that I've created and in the main

00:01:51,869 --> 00:01:57,960
I have called dispatch dispatch async on

00:01:55,049 --> 00:02:00,840
the CPP con object how do I do that I

00:01:57,960 --> 00:02:04,200
create a weak self of the object and I

00:02:00,840 --> 00:02:06,450
keep that as the like I pass on that to

00:02:04,200 --> 00:02:08,429
my block so that the only reference that

00:02:06,450 --> 00:02:10,979
it keeps is to the weak object once I

00:02:08,429 --> 00:02:12,690
enter inside this block which would be

00:02:10,979 --> 00:02:15,180
in a different thread I actually try to

00:02:12,690 --> 00:02:18,150
get the strong self and if the strong

00:02:15,180 --> 00:02:19,949
self is not like it's not there this

00:02:18,150 --> 00:02:22,440
function would not be called just for

00:02:19,949 --> 00:02:24,630
the C++ junkies calling of

00:02:22,440 --> 00:02:27,420
like an function or nil in objective-c

00:02:24,630 --> 00:02:30,840
clusters doesn't crash so how do I do

00:02:27,420 --> 00:02:33,150
that in C++ so if I just simply replace

00:02:30,840 --> 00:02:35,760
my class with a C++ class and in the

00:02:33,150 --> 00:02:38,910
main I create a C++ object instead of

00:02:35,760 --> 00:02:40,950
object in C++ or object the only thing I

00:02:38,910 --> 00:02:43,140
get is a warning and warnings are code

00:02:40,950 --> 00:02:45,660
smell so here week actually has no

00:02:43,140 --> 00:02:48,690
impact on the C++ object it is not

00:02:45,660 --> 00:02:51,420
actually retained so what it does it is

00:02:48,690 --> 00:02:53,370
this it is actually this code which is

00:02:51,420 --> 00:02:55,800
which all of you know is not trying so

00:02:53,370 --> 00:02:57,420
it could be possible that on obj is not

00:02:55,800 --> 00:03:00,390
actually present when you are calling it

00:02:57,420 --> 00:03:03,000
in the thread so how do I solve this so

00:03:00,390 --> 00:03:05,070
I mostly use unable shared from this

00:03:03,000 --> 00:03:08,340
which is a very nice paradigm to use in

00:03:05,070 --> 00:03:09,990
async calls so it helps me get a like

00:03:08,340 --> 00:03:12,660
share every source with existing shared

00:03:09,990 --> 00:03:14,400
pointer so I put a perform function in

00:03:12,660 --> 00:03:16,380
there which actually creates a week cell

00:03:14,400 --> 00:03:19,500
from shared from this and then I pass

00:03:16,380 --> 00:03:21,240
this reference to my block so that the

00:03:19,500 --> 00:03:24,180
only thing that it captures is the week

00:03:21,240 --> 00:03:26,010
self now in the block I try to get the

00:03:24,180 --> 00:03:28,380
strong self from the weak self and if

00:03:26,010 --> 00:03:30,480
that is present I call the function in a

00:03:28,380 --> 00:03:32,370
sense I don't fall into the use after

00:03:30,480 --> 00:03:36,920
free category and I don't fall into any

00:03:32,370 --> 00:03:40,840
of the caches that is all thank you

00:03:36,920 --> 00:03:40,840

YouTube URL: https://www.youtube.com/watch?v=a3riN3lb7xQ


