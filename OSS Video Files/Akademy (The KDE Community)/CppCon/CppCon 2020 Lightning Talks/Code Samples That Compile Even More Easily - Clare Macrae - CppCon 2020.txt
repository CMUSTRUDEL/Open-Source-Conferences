Title: Code Samples That Compile Even More Easily - Clare Macrae - CppCon 2020
Publication date: 2020-10-14
Playlist: CppCon 2020 Lightning Talks
Description: 
	https://cppcon.org/
https://github.com/CppCon/CppCon2020
---
Iâ€™ve previously shown how to embed snippets from Tests and other compiled code in to Markdown docs, so the docs are always right, and users can trust your docs - using a tool called mdsnippets.

This year, it's even easier to keep code in your Markdown docs automatically uptodate.

---
Clare has worked in software development for over 30 years, and in C++ for 20 years.

Since 2017, she has used her spare time to work remotely with Llewellyn Falco on [ApprovalTests.cpp](https://github.com/approvals/ApprovalTests.cpp), to radically simplify testing of legacy code. She has enjoyed this so much that she recently went independent, to focus even more on helper others work more easily with legacy code.

Clare was until recently a Principal Scientific Software Engineer at Cambridge Crystallographic Data Centre, which releases data and powerful software for scientific education, research, and streamlining the design and manufacture of new medicines.

From 2016 to 2018, she lead the team that replaced their 30 year old database format and Fortran code. She then returned to C++ and Qt, working on the popular 3D crystal structure visualisation program [Mercury](https://www.ccdc.cam.ac.uk/mercury/), which she was the original author of.

When not thinking about supporting teams to streamline development, testing and releases, she spends time with family and friends, and enjoys the Raspberry Pi, folk music and cinema.

---
Streamed & Edited by Digital Medium Ltd - events.digital-medium.co.uk
events@digital-medium.co.uk
Captions: 
	00:00:08,480 --> 00:00:17,119
thank you very much indeed so welcome to

00:00:12,000 --> 00:00:19,359
um welcome to code samples that

00:00:17,119 --> 00:00:21,039
compile even more easily than in my

00:00:19,359 --> 00:00:22,960
previous lightning talks

00:00:21,039 --> 00:00:24,920
so some of you may have seen me talk

00:00:22,960 --> 00:00:27,359
about

00:00:24,920 --> 00:00:30,640
writing.source.md files and

00:00:27,359 --> 00:00:33,040
embedding compiled code

00:00:30,640 --> 00:00:34,800
via snippet names where snippet comments

00:00:33,040 --> 00:00:38,000
in the source files

00:00:34,800 --> 00:00:39,840
into documentation running it through a

00:00:38,000 --> 00:00:42,719
tool called md snippets

00:00:39,840 --> 00:00:43,680
and then generating.md files well i'm

00:00:42,719 --> 00:00:45,920
happy to say

00:00:43,680 --> 00:00:47,920
that thanks to a recent improvement you

00:00:45,920 --> 00:00:49,200
no longer need to maintain this pair of

00:00:47,920 --> 00:00:52,879
matching files

00:00:49,200 --> 00:00:55,120
so no need now for dot source drd

00:00:52,879 --> 00:00:57,280
so i thought well in the comfort of my

00:00:55,120 --> 00:00:59,280
own home i'd risk doing a live demo

00:00:57,280 --> 00:01:00,399
and i needed to an example i needed to

00:00:59,280 --> 00:01:02,399
find an example

00:01:00,399 --> 00:01:03,920
this is the kind of thing we're wanting

00:01:02,399 --> 00:01:07,280
to avoid

00:01:03,920 --> 00:01:08,640
users um submitting pull requests for

00:01:07,280 --> 00:01:11,600
fixing typos

00:01:08,640 --> 00:01:13,200
in docs that didn't compile so let's

00:01:11,600 --> 00:01:16,159
look at that

00:01:13,200 --> 00:01:16,159
in action

00:01:16,479 --> 00:01:21,840
um so i've got that chunk of source code

00:01:19,759 --> 00:01:23,119
here with a placeholder comment to help

00:01:21,840 --> 00:01:26,080
you find it

00:01:23,119 --> 00:01:26,880
and this is what we want to generate

00:01:26,080 --> 00:01:29,840
from

00:01:26,880 --> 00:01:31,920
code rather than pasting it in the docs

00:01:29,840 --> 00:01:33,759
and i had a search through the project

00:01:31,920 --> 00:01:35,840
code already and there isn't a test that

00:01:33,759 --> 00:01:37,360
already exists with that code so let's

00:01:35,840 --> 00:01:39,040
create one

00:01:37,360 --> 00:01:42,240
and i'm going to use a lovely feature in

00:01:39,040 --> 00:01:45,680
sea lion a live template

00:01:42,240 --> 00:01:49,439
to put my begin and end comments in

00:01:45,680 --> 00:01:51,840
and then i'll paste that uh test code in

00:01:49,439 --> 00:01:54,560
and i'll call it generators with

00:01:51,840 --> 00:01:56,880
sections because that's roughly what the

00:01:54,560 --> 00:02:00,079
documentation is talking about

00:01:56,880 --> 00:02:03,119
so that's my snippet and now i can go

00:02:00,079 --> 00:02:05,040
back to the documentation and they've

00:02:03,119 --> 00:02:08,560
got no longer any hard

00:02:05,040 --> 00:02:10,640
coded pasted in text will

00:02:08,560 --> 00:02:12,480
that's now what we add to the

00:02:10,640 --> 00:02:15,760
documentation

00:02:12,480 --> 00:02:18,879
and then i shall go to the

00:02:15,760 --> 00:02:22,560
console in

00:02:18,879 --> 00:02:25,680
sea lion and run the md snippets command

00:02:22,560 --> 00:02:29,760
which is really easy to install

00:02:25,680 --> 00:02:33,519
and now let's look at the

00:02:29,760 --> 00:02:36,640
difference so here's sea lions

00:02:33,519 --> 00:02:39,760
diffing and what has changed

00:02:36,640 --> 00:02:40,959
let's dip that file so remember i had

00:02:39,760 --> 00:02:44,080
deleted

00:02:40,959 --> 00:02:47,440
the source code from the markdown file

00:02:44,080 --> 00:02:49,760
and i had just put in snippet generators

00:02:47,440 --> 00:02:52,640
with sections and running md snippets

00:02:49,760 --> 00:02:53,280
has added this extra text and let's have

00:02:52,640 --> 00:02:56,080
a look at

00:02:53,280 --> 00:02:57,200
what that looks like the other thing i

00:02:56,080 --> 00:03:01,680
wanted to show you

00:02:57,200 --> 00:03:04,480
is i've created this configuration file

00:03:01,680 --> 00:03:05,519
that says uh to markdown snippets that i

00:03:04,480 --> 00:03:07,920
want to

00:03:05,519 --> 00:03:09,680
overwrite the in-place generation so

00:03:07,920 --> 00:03:14,319
let's quickly

00:03:09,680 --> 00:03:17,680
um commit that um

00:03:14,319 --> 00:03:21,519
generate box connect that

00:03:17,680 --> 00:03:25,120
and let's push it to my

00:03:21,519 --> 00:03:27,680
fork of catch 2 on github

00:03:25,120 --> 00:03:28,480
so that's pushed so now let's have a

00:03:27,680 --> 00:03:31,760
look

00:03:28,480 --> 00:03:34,879
at that file that documentation file on

00:03:31,760 --> 00:03:36,400
github so i'm going to scroll down

00:03:34,879 --> 00:03:38,959
until we see the code that we've

00:03:36,400 --> 00:03:40,799
generated so here it is

00:03:38,959 --> 00:03:42,720
so if we looked at the previous version

00:03:40,799 --> 00:03:45,120
it didn't have syntax highlighting and

00:03:42,720 --> 00:03:46,400
now it does we got that for free

00:03:45,120 --> 00:03:48,560
but the really important thing is that

00:03:46,400 --> 00:03:51,680
you can link to the documentation

00:03:48,560 --> 00:03:54,319
section directly via the anchor

00:03:51,680 --> 00:03:55,599
but if your users of your project want

00:03:54,319 --> 00:03:57,760
to see that

00:03:55,599 --> 00:03:59,040
source code in context they just click

00:03:57,760 --> 00:04:03,040
on that link

00:03:59,040 --> 00:04:05,840
and there it is highlighted

00:04:03,040 --> 00:04:09,040
and where i to change where anyone to

00:04:05,840 --> 00:04:11,439
change the source code of that test

00:04:09,040 --> 00:04:12,480
then the next time nd snippets was run

00:04:11,439 --> 00:04:14,799
the

00:04:12,480 --> 00:04:16,479
sample of code in the markdown will get

00:04:14,799 --> 00:04:18,400
updated automatically you can use it to

00:04:16,479 --> 00:04:19,199
generate tables of contents as well and

00:04:18,400 --> 00:04:22,320
lots of

00:04:19,199 --> 00:04:24,080
other lovely things some of you might be

00:04:22,320 --> 00:04:26,800
thinking but what if i forget to run

00:04:24,080 --> 00:04:28,800
md snippets that's a good point you

00:04:26,800 --> 00:04:32,400
could add it as a pre-commit hook

00:04:28,800 --> 00:04:33,840
or simon crop the author of md snippets

00:04:32,400 --> 00:04:35,680
has documented

00:04:33,840 --> 00:04:37,199
how to create a github action so that

00:04:35,680 --> 00:04:39,840
every time you push

00:04:37,199 --> 00:04:41,360
your documentation is regenerated

00:04:39,840 --> 00:04:44,160
automatically

00:04:41,360 --> 00:04:44,960
so we use it for approval tests for c

00:04:44,160 --> 00:04:46,479
plus

00:04:44,960 --> 00:04:48,560
and rather than retrofitting

00:04:46,479 --> 00:04:50,000
documentation like that at this every

00:04:48,560 --> 00:04:52,400
time we add a feature

00:04:50,000 --> 00:04:53,680
as we're writing the documentation we

00:04:52,400 --> 00:04:55,199
plan

00:04:53,680 --> 00:04:56,639
that it's going to be used every time

00:04:55,199 --> 00:04:58,240
write a test we plan that it goes

00:04:56,639 --> 00:05:00,479
through the documentation

00:04:58,240 --> 00:05:02,400
that is how you get guaranteed working

00:05:00,479 --> 00:05:03,440
code samples and a way to see their

00:05:02,400 --> 00:05:11,840
context

00:05:03,440 --> 00:05:11,840
thanks very much

00:05:23,840 --> 00:05:25,919

YouTube URL: https://www.youtube.com/watch?v=aw2mQKXhgvU


