Title: CppCon 2018: Staffan Tjernström “Almost Always Avoiding auto”
Publication date: 2018-11-11
Playlist: CppCon 2018 Lightning Talks
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2018
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:00,000 --> 00:00:07,710
Grafton mehmed bon soir petha me good

00:00:04,980 --> 00:00:11,910
map in minor foreign didn't good evening

00:00:07,710 --> 00:00:16,970
friends I stand before you tonight to

00:00:11,910 --> 00:00:23,699
talk about a scourge that has infected

00:00:16,970 --> 00:00:29,130
codebases east and west I refer of

00:00:23,699 --> 00:00:36,300
course to the dramatic overuse of the

00:00:29,130 --> 00:00:40,559
auto key word in our code bases so

00:00:36,300 --> 00:00:45,360
that's the art for the camera the

00:00:40,559 --> 00:00:47,910
question then becomes why Auto and I

00:00:45,360 --> 00:00:54,110
think to answer this we have to look at

00:00:47,910 --> 00:00:54,110
the composition of our hardworking and

00:00:54,680 --> 00:01:03,300
underpaid volunteer committee members

00:00:59,090 --> 00:01:08,970
they were faced in the early days with a

00:01:03,300 --> 00:01:11,549
large dilemma many of them would spend

00:01:08,970 --> 00:01:14,400
inordinate amounts of time traveling

00:01:11,549 --> 00:01:17,900
around the globe making presentations

00:01:14,400 --> 00:01:23,250
trying to keep the spirit of C++ alive

00:01:17,900 --> 00:01:27,330
and this in my mind leads me to what are

00:01:23,250 --> 00:01:35,939
the probabilities and why Auto exists in

00:01:27,330 --> 00:01:38,759
the language it enables slide where one

00:01:35,939 --> 00:01:41,610
can look at the difficulties involved

00:01:38,759 --> 00:01:45,840
for the poor person having to write a

00:01:41,610 --> 00:01:48,689
pre C++ 11 slide and I recognize this is

00:01:45,840 --> 00:01:52,079
e plus plus 17 but trying to fit

00:01:48,689 --> 00:01:54,030
anything on a slide 311 was difficult

00:01:52,079 --> 00:01:59,549
and one can understand that there is a

00:01:54,030 --> 00:02:06,149
certain law when presented with the

00:01:59,549 --> 00:02:06,979
modern alternative now of course to be

00:02:06,149 --> 00:02:10,800
fair

00:02:06,979 --> 00:02:12,180
the there are very great uses for the

00:02:10,800 --> 00:02:14,340
author keywords and there are indeed

00:02:12,180 --> 00:02:17,819
some things that you just cannot do

00:02:14,340 --> 00:02:20,239
without it beautiful things like naming

00:02:17,819 --> 00:02:26,370
lambdas and then rename naming them

00:02:20,239 --> 00:02:33,269
impossible before the problem is the

00:02:26,370 --> 00:02:35,370
dramatic overuse now at this point we

00:02:33,269 --> 00:02:39,870
can look at a few ways that the overuse

00:02:35,370 --> 00:02:44,370
has shown up so at this point we have to

00:02:39,870 --> 00:02:48,690
look back at a humble underpaid software

00:02:44,370 --> 00:02:51,569
engineer sitting in the hotel room at

00:02:48,690 --> 00:02:54,540
2:00 or 2 o'clock in the morning the

00:02:51,569 --> 00:02:58,200
phone rings and it's the production

00:02:54,540 --> 00:03:00,330
group the system has crashed and they're

00:02:58,200 --> 00:03:02,760
refusing to start it unless we can

00:03:00,330 --> 00:03:07,799
guarantee that the crash won't happen

00:03:02,760 --> 00:03:10,620
again so what you have to do and

00:03:07,799 --> 00:03:13,290
basically bring up the auto dial modem

00:03:10,620 --> 00:03:16,350
and I lean in and set up an EVP session

00:03:13,290 --> 00:03:20,489
and we find that somebody has very

00:03:16,350 --> 00:03:24,000
nicely produced a totally excessive

00:03:20,489 --> 00:03:26,340
return value chain so we go in and we

00:03:24,000 --> 00:03:31,670
take a look at the first line of the

00:03:26,340 --> 00:03:34,260
call and go well ok this seems a normal

00:03:31,670 --> 00:03:36,780
line it's not too bad but let's see

00:03:34,260 --> 00:03:39,380
where it leads there's something wrong

00:03:36,780 --> 00:03:43,019
with red valleys but all we know so far

00:03:39,380 --> 00:03:45,090
but oh well yeah what a surprise that

00:03:43,019 --> 00:03:47,370
comes from somewhere else now we're

00:03:45,090 --> 00:03:51,540
digging 20 files further down the

00:03:47,370 --> 00:03:58,319
directory tree and oh that one doesn't

00:03:51,540 --> 00:04:00,870
do it either well ah oh ok

00:03:58,319 --> 00:04:04,620
that returns to you and 64 hang on what

00:04:00,870 --> 00:04:06,180
was the question again in which file had

00:04:04,620 --> 00:04:09,840
that been an int it wouldn't even be

00:04:06,180 --> 00:04:12,120
shorter than Auto as a keyword them

00:04:09,840 --> 00:04:15,750
again there's the whole qualifier

00:04:12,120 --> 00:04:19,820
confusion in Auto so we have a few

00:04:15,750 --> 00:04:26,250
pointers we could declare

00:04:19,820 --> 00:04:28,260
visibly as pointers it doesn't actually

00:04:26,250 --> 00:04:34,080
matter how we declare them because

00:04:28,260 --> 00:04:35,460
they're all the same that you spike then

00:04:34,080 --> 00:04:37,320
of course there's people that believe

00:04:35,460 --> 00:04:38,430
that Auto actually means what's on the

00:04:37,320 --> 00:04:42,780
right-hand side

00:04:38,430 --> 00:04:46,610
well maybe not because Otto is template

00:04:42,780 --> 00:04:49,080
deduction as I understand it of course

00:04:46,610 --> 00:04:51,230
template deduction will tear off the

00:04:49,080 --> 00:04:54,240
top-level cons for the tile qualifiers

00:04:51,230 --> 00:04:57,300
so you can assign to an auto from a

00:04:54,240 --> 00:05:00,270
Const and if you try to spin on a

00:04:57,300 --> 00:05:03,110
volatile you probably going to be

00:05:00,270 --> 00:05:03,110
spinning for quite some time

00:05:05,520 --> 00:05:11,589

YouTube URL: https://www.youtube.com/watch?v=bSgrKgfFFMQ


