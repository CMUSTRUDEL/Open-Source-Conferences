Title: CppCon 2018: Arvid Norberg “Test coverage”
Publication date: 2018-11-11
Playlist: CppCon 2018 Lightning Talks
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2018
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:00,030 --> 00:00:03,629
my name is Arvid and I work at block

00:00:02,429 --> 00:00:05,040
stream and we do keep the currents and

00:00:03,629 --> 00:00:08,370
stuff I want to talk about the test

00:00:05,040 --> 00:00:11,550
coverage real quick so test coverage is

00:00:08,370 --> 00:00:15,379
when you run your tests under the code

00:00:11,550 --> 00:00:17,850
coverage instrumentation you merge the

00:00:15,379 --> 00:00:21,480
coverage from all your tests and then

00:00:17,850 --> 00:00:23,400
you calculate the ratio of total total

00:00:21,480 --> 00:00:26,670
lines executed or the actual focal

00:00:23,400 --> 00:00:29,609
length and then you know the higher

00:00:26,670 --> 00:00:32,130
number the better so I want to talk

00:00:29,609 --> 00:00:34,829
about having this ratio be honest and

00:00:32,130 --> 00:00:38,520
not just the highest number so the

00:00:34,829 --> 00:00:40,530
things you want to remove right off the

00:00:38,520 --> 00:00:40,800
bat is all the test code that doesn't

00:00:40,530 --> 00:00:43,079
count

00:00:40,800 --> 00:00:48,809
remove test framework all the helper

00:00:43,079 --> 00:00:51,120
code you have marks and so on so two to

00:00:48,809 --> 00:00:52,590
run to build test coverage you say

00:00:51,120 --> 00:00:54,149
something like this that's just coverage

00:00:52,590 --> 00:00:55,559
I haven't actually tested this this work

00:00:54,149 --> 00:00:58,590
run the test

00:00:55,559 --> 00:01:00,180
I'll call gen HTML you get some kind of

00:00:58,590 --> 00:01:01,800
report

00:01:00,180 --> 00:01:04,710
there's also another really cool tool I

00:01:01,800 --> 00:01:09,150
mentioned called K cog it lets you

00:01:04,710 --> 00:01:10,380
gather code coverage without actually

00:01:09,150 --> 00:01:13,710
instrumenting the build so all you need

00:01:10,380 --> 00:01:16,979
is debug information and the guy who

00:01:13,710 --> 00:01:18,869
wrote this actually had a presentation

00:01:16,979 --> 00:01:20,610
recently just googled sweet and syrupy k

00:01:18,869 --> 00:01:22,890
call and you'll find it and also other

00:01:20,610 --> 00:01:26,939
great talks from Cedar City all right

00:01:22,890 --> 00:01:28,619
let's take a look at an example test so

00:01:26,939 --> 00:01:33,630
this will they look like right what's

00:01:28,619 --> 00:01:38,400
notable here so we create a bar and a

00:01:33,630 --> 00:01:40,380
bath object to just pass into foo and

00:01:38,400 --> 00:01:43,049
then we validate that food that's what

00:01:40,380 --> 00:01:51,060
we wanted to do other notable thing

00:01:43,049 --> 00:01:53,100
things are that we East Coast so then

00:01:51,060 --> 00:01:54,360
you get the test coverage that looks

00:01:53,100 --> 00:01:57,659
something like this the constructor for

00:01:54,360 --> 00:02:01,409
bar the constructor about bars and the

00:01:57,659 --> 00:02:02,850
function body of foo perhaps who does

00:02:01,409 --> 00:02:04,469
other things to bar on to us so you

00:02:02,850 --> 00:02:07,740
might have something like this some of

00:02:04,469 --> 00:02:12,510
the functions on bar and bass also gets

00:02:07,740 --> 00:02:13,830
executed since

00:02:12,510 --> 00:02:16,170
since food is the only function that

00:02:13,830 --> 00:02:18,090
actually is being tested all the output

00:02:16,170 --> 00:02:22,860
from true it's actually validated by the

00:02:18,090 --> 00:02:24,629
test I would refer to all of this other

00:02:22,860 --> 00:02:28,590
coverage as collateral coverage it's not

00:02:24,629 --> 00:02:31,459
being tested it shouldn't count that's

00:02:28,590 --> 00:02:34,260
the only function that's on the test so

00:02:31,459 --> 00:02:36,300
when you're merging all of your test

00:02:34,260 --> 00:02:38,540
coverage you should carve out just the

00:02:36,300 --> 00:02:41,459
function that you test and merge those

00:02:38,540 --> 00:02:43,709
then you get a much more honest

00:02:41,459 --> 00:02:46,680
representation of your coverage if you

00:02:43,709 --> 00:02:48,330
want to have test coverage of bar and

00:02:46,680 --> 00:02:50,670
bars and those functions you need to

00:02:48,330 --> 00:02:55,430
write specific in tests for those

00:02:50,670 --> 00:02:55,430
functions that's all I have say

00:02:55,850 --> 00:03:00,999

YouTube URL: https://www.youtube.com/watch?v=aLpdVSGX3K0


