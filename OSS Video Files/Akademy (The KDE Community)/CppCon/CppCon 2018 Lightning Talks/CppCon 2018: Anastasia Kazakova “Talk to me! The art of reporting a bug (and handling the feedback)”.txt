Title: CppCon 2018: Anastasia Kazakova “Talk to me! The art of reporting a bug (and handling the feedback)”
Publication date: 2018-11-10
Playlist: CppCon 2018 Lightning Talks
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2018
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:00,030 --> 00:00:03,840
my name is Anastasia I work for

00:00:01,709 --> 00:00:06,330
JetBrains and we are actually known not

00:00:03,840 --> 00:00:09,030
only for doing tools for developers but

00:00:06,330 --> 00:00:11,160
also for very professional technical

00:00:09,030 --> 00:00:13,230
support and in this talk I'm gonna

00:00:11,160 --> 00:00:15,330
actually share a couple of funny and

00:00:13,230 --> 00:00:16,710
sometimes really crazy stories which

00:00:15,330 --> 00:00:18,720
hopefully teach you how to provide

00:00:16,710 --> 00:00:21,689
valuable feedback and how to react on it

00:00:18,720 --> 00:00:25,019
so actually our users thinks that we are

00:00:21,689 --> 00:00:27,090
doing are thousands of unnecessary

00:00:25,019 --> 00:00:30,240
things instead of fixing their precious

00:00:27,090 --> 00:00:32,309
box like doing various webinars which is

00:00:30,240 --> 00:00:34,290
usually done by me and Phil updating

00:00:32,309 --> 00:00:36,840
icons which is usually done by our UX

00:00:34,290 --> 00:00:39,390
team but who cares and instead we

00:00:36,840 --> 00:00:42,629
actually have to fix compilation issues

00:00:39,390 --> 00:00:44,190
with actually is not a task for ninety

00:00:42,629 --> 00:00:48,030
because we just called the compiler

00:00:44,190 --> 00:00:49,800
weight code and of course solving real

00:00:48,030 --> 00:00:51,390
world issues this is the real support

00:00:49,800 --> 00:00:54,840
request and we actually use it to teach

00:00:51,390 --> 00:00:56,579
our support engineers and what is the

00:00:54,840 --> 00:00:58,770
ideal algorithm for providing the

00:00:56,579 --> 00:01:00,750
feedback at least how we see it so like

00:00:58,770 --> 00:01:02,730
check you can repeat and construct

00:01:00,750 --> 00:01:04,890
example because actually if your problem

00:01:02,730 --> 00:01:07,470
is only reproducible in a highly and a

00:01:04,890 --> 00:01:07,880
code base I doubt we can do something

00:01:07,470 --> 00:01:10,470
with that

00:01:07,880 --> 00:01:12,720
check all the integrated tools and stand

00:01:10,470 --> 00:01:15,240
alone because quite often your issues

00:01:12,720 --> 00:01:17,670
are associated or it cut by the compiler

00:01:15,240 --> 00:01:20,790
or debugger or any other tool which you

00:01:17,670 --> 00:01:23,759
can actually try to run like separately

00:01:20,790 --> 00:01:25,619
and check check the network and mounted

00:01:23,759 --> 00:01:27,979
devices because quite often performance

00:01:25,619 --> 00:01:30,869
issues are caused by the network lab

00:01:27,979 --> 00:01:32,610
report all the details like the versions

00:01:30,869 --> 00:01:34,799
of all the compilers and operations

00:01:32,610 --> 00:01:37,229
system and describe the issues and

00:01:34,799 --> 00:01:39,479
provide some imageries attach some locks

00:01:37,229 --> 00:01:41,490
which is obvious like Keep Calm

00:01:39,479 --> 00:01:43,439
which is very important follow our

00:01:41,490 --> 00:01:46,229
advices which is most important thing

00:01:43,439 --> 00:01:47,700
and please like come back to us saying

00:01:46,229 --> 00:01:49,680
that it actually helped because this

00:01:47,700 --> 00:01:51,829
could be a workaround for next user and

00:01:49,680 --> 00:01:54,240
talking about some samples like I

00:01:51,829 --> 00:01:56,850
actually treat support as a Learning

00:01:54,240 --> 00:01:58,619
Channel because quite often our student

00:01:56,850 --> 00:02:00,659
users are asking us how to build a

00:01:58,619 --> 00:02:02,250
program reasonably flat and their answer

00:02:00,659 --> 00:02:04,590
could be very simple like just links

00:02:02,250 --> 00:02:06,689
again did I reckon should be fine

00:02:04,590 --> 00:02:08,910
but they still have issues and actually

00:02:06,689 --> 00:02:10,739
if you dig deeper you will find out that

00:02:08,910 --> 00:02:12,780
there are many ways to link against P

00:02:10,739 --> 00:02:13,670
Fred and they actually depends on the

00:02:12,780 --> 00:02:16,700
Simic

00:02:13,670 --> 00:02:18,980
which is kind of interesting another

00:02:16,700 --> 00:02:21,320
example actually came to us when we've

00:02:18,980 --> 00:02:24,320
just started the sea lion release in

00:02:21,320 --> 00:02:26,060
2015 and find out that many users are

00:02:24,320 --> 00:02:27,980
reporting these crazy things to us that

00:02:26,060 --> 00:02:30,290
nothing works and the cursor looks

00:02:27,980 --> 00:02:32,450
strange the keyboard doesn't work and

00:02:30,290 --> 00:02:35,420
like where I'm typing on a keyboard it

00:02:32,450 --> 00:02:37,760
randomly selects words well think around

00:02:35,420 --> 00:02:40,130
that for a while and finally you know

00:02:37,760 --> 00:02:44,390
what we found out you know that joke

00:02:40,130 --> 00:02:46,100
about the beam like I used to be in for

00:02:44,390 --> 00:02:48,170
four years if you liked it that much no

00:02:46,100 --> 00:02:49,880
I just didn't know how to quit that was

00:02:48,170 --> 00:02:51,650
the situation they just installed all

00:02:49,880 --> 00:02:53,450
the plugins from the welcome screen one

00:02:51,650 --> 00:02:55,310
of that was the rim plugging and just

00:02:53,450 --> 00:02:58,430
they just didn't know what to do with

00:02:55,310 --> 00:03:02,560
that so we have finally to add this nice

00:02:58,430 --> 00:03:05,870
warning to like let them work properly

00:03:02,560 --> 00:03:09,140
another example here is actually the

00:03:05,870 --> 00:03:12,050
user who reported us back in 2016 this

00:03:09,140 --> 00:03:14,420
very nice feedback so telling to us that

00:03:12,050 --> 00:03:17,540
we have to resolve his issue within a 5

00:03:14,420 --> 00:03:20,570
days and he has some issues with like to

00:03:17,540 --> 00:03:22,130
chain worsens and some conflicts in 15

00:03:20,570 --> 00:03:23,959
minutes he started shouting at our

00:03:22,130 --> 00:03:25,940
support saying that we have to resolve

00:03:23,959 --> 00:03:29,150
it right now or he will move to visual

00:03:25,940 --> 00:03:32,390
studio and any couple of more hours he

00:03:29,150 --> 00:03:36,680
actually sent us his apologies Inagaki

00:03:32,390 --> 00:03:38,840
flora which we got acts from him I was

00:03:36,680 --> 00:03:42,680
really feeling sorry about that user he

00:03:38,840 --> 00:03:44,630
wasn't sleeping for the whole night our

00:03:42,680 --> 00:03:46,910
support engineer actually came the next

00:03:44,630 --> 00:03:48,620
day handled these for his cue which is

00:03:46,910 --> 00:03:50,959
kind of quite long so after the night

00:03:48,620 --> 00:03:53,090
and we just found out that the user was

00:03:50,959 --> 00:03:55,700
confused with the mingw version because

00:03:53,090 --> 00:03:58,070
quite often they see this mingw version

00:03:55,700 --> 00:04:00,230
but it's actually GCC version and the

00:03:58,070 --> 00:04:03,500
mingw version is hidden inside this

00:04:00,230 --> 00:04:05,690
creepy reader inside and Ceylon actually

00:04:03,500 --> 00:04:07,579
extracts it correctly but still many

00:04:05,690 --> 00:04:09,620
users don't understand what's going on

00:04:07,579 --> 00:04:11,180
there so actually explain all the things

00:04:09,620 --> 00:04:14,390
to the user he was quite happy in the

00:04:11,180 --> 00:04:16,669
answer with to him follow the

00:04:14,390 --> 00:04:18,049
instruction is a very useful advice when

00:04:16,669 --> 00:04:20,299
you're actually trying to provide a

00:04:18,049 --> 00:04:23,000
feedback we have an integration with

00:04:20,299 --> 00:04:25,340
various debuggers like gdb and LD be

00:04:23,000 --> 00:04:26,810
using the Imai interface and we have of

00:04:25,340 --> 00:04:28,550
course an instruction on

00:04:26,810 --> 00:04:31,160
how to provide airlocks about the

00:04:28,550 --> 00:04:34,430
debugger issues in the IDE and we've

00:04:31,160 --> 00:04:36,560
heard it was cursed clear but the users

00:04:34,430 --> 00:04:37,910
were sending us some locks and we

00:04:36,560 --> 00:04:40,580
couldn't find anything interesting there

00:04:37,910 --> 00:04:42,320
and we couldn't match like while the

00:04:40,580 --> 00:04:43,700
problem is actually happening and we

00:04:42,320 --> 00:04:45,680
don't see anything interesting in the

00:04:43,700 --> 00:04:48,590
lock and you know some users actually

00:04:45,680 --> 00:04:50,120
reply to us that I got the locks by then

00:04:48,590 --> 00:04:51,530
looking to them and didn't find anything

00:04:50,120 --> 00:04:55,090
interesting so I just decided not to

00:04:51,530 --> 00:04:57,950
send it to you okay

00:04:55,090 --> 00:05:00,200
but finally you know what we found out

00:04:57,950 --> 00:05:03,050
we have to update the instruction and

00:05:00,200 --> 00:05:05,000
have this wording to the instructions

00:05:03,050 --> 00:05:07,610
because we find out that many users are

00:05:05,000 --> 00:05:10,220
still we're producing the problem first

00:05:07,610 --> 00:05:12,380
and only after that add in a second term

00:05:10,220 --> 00:05:16,010
like there are EE

00:05:12,380 --> 00:05:20,590
so we updated the instruction and

00:05:16,010 --> 00:05:23,960
hopefully now it's indeed crystal clear

00:05:20,590 --> 00:05:25,580
the first case is about the whole binary

00:05:23,960 --> 00:05:28,940
which is actually quite important

00:05:25,580 --> 00:05:31,130
because once we gather feedback from our

00:05:28,940 --> 00:05:32,810
user who try to update from one version

00:05:31,130 --> 00:05:35,360
to another version using the patch

00:05:32,810 --> 00:05:37,850
update and in the end patch update

00:05:35,360 --> 00:05:39,740
wasn't downloaded properly due to some

00:05:37,850 --> 00:05:43,039
certificate issues or something the

00:05:39,740 --> 00:05:46,280
network but the users still tried to use

00:05:43,039 --> 00:05:48,530
the patch you need a comment how to call

00:05:46,280 --> 00:05:50,510
it err avene was broken he was like

00:05:48,530 --> 00:05:52,610
providing some negative feedback to us

00:05:50,510 --> 00:05:55,520
we of course free commanded to download

00:05:52,610 --> 00:05:58,580
the like binary from scratch and to try

00:05:55,520 --> 00:06:00,020
again everything worked and I really

00:05:58,580 --> 00:06:02,030
wanted to answer to the user of that

00:06:00,020 --> 00:06:04,490
like when you're building a house every

00:06:02,030 --> 00:06:06,320
break is actually important so like just

00:06:04,490 --> 00:06:10,760
don't try to patch when you don't have a

00:06:06,320 --> 00:06:13,280
full binary but some still do and if we

00:06:10,760 --> 00:06:15,410
crazy cases that we usually got is about

00:06:13,280 --> 00:06:17,960
the different configurations like we've

00:06:15,410 --> 00:06:19,580
got a user who had project which

00:06:17,960 --> 00:06:23,260
actually builds with some libraries

00:06:19,580 --> 00:06:26,139
which he could build on Debian and the

00:06:23,260 --> 00:06:29,960
successfully compiles on Debian 8 and 9

00:06:26,139 --> 00:06:32,780
but still this user has like his Linux

00:06:29,960 --> 00:06:37,280
and also his Windows machine and his

00:06:32,780 --> 00:06:38,289
Linux was like a project folder on Linux

00:06:37,280 --> 00:06:40,930
was mounted to

00:06:38,289 --> 00:06:43,180
Windows machine and due to some reasons

00:06:40,930 --> 00:06:45,759
he still tried to do some work for the

00:06:43,180 --> 00:06:48,490
cygwin and run the sequence stop worked

00:06:45,759 --> 00:06:50,520
working to him he moved to VSL which is

00:06:48,490 --> 00:06:53,710
windows subsystem for linux and

00:06:50,520 --> 00:06:55,719
something didn't work for him in the end

00:06:53,710 --> 00:06:57,099
we found out like a very simple reason

00:06:55,719 --> 00:06:59,229
that he just installed the boost

00:06:57,099 --> 00:07:02,319
libraries with the root privileges on

00:06:59,229 --> 00:07:04,360
the DSL and he was running the like

00:07:02,319 --> 00:07:08,110
application from the sea lion within

00:07:04,360 --> 00:07:11,349
another user privileges and that was the

00:07:08,110 --> 00:07:14,020
reason but really digging with all these

00:07:11,349 --> 00:07:15,939
creepy configurations is a very nice job

00:07:14,020 --> 00:07:18,069
for the support engineer because we have

00:07:15,939 --> 00:07:22,719
to like trying to understand why

00:07:18,069 --> 00:07:24,759
actually all of this is happening but

00:07:22,719 --> 00:07:26,680
like really some of our users are

00:07:24,759 --> 00:07:29,189
providing a very nice feedback to us and

00:07:26,680 --> 00:07:32,680
really love that users has a needy kid

00:07:29,189 --> 00:07:34,180
who are sending all the versions sending

00:07:32,680 --> 00:07:36,689
all the versions from the all the

00:07:34,180 --> 00:07:39,129
compilers they use whatever they use and

00:07:36,689 --> 00:07:42,550
describe the issue and ask us for help

00:07:39,129 --> 00:07:44,860
and some of our users are even more

00:07:42,550 --> 00:07:47,019
icers so some of them are writing as

00:07:44,860 --> 00:07:50,919
nice text which I would really love to

00:07:47,019 --> 00:07:52,809
read as a book some professors from

00:07:50,919 --> 00:07:54,789
universities are complaining to us that

00:07:52,809 --> 00:07:56,800
their students are saying that their

00:07:54,789 --> 00:07:58,719
Python code is correct the Python

00:07:56,800 --> 00:08:00,399
doesn't highlight any errors and they're

00:07:58,719 --> 00:08:03,479
pretty much sure that that should be

00:08:00,399 --> 00:08:03,479
true and

00:08:03,550 --> 00:08:10,509

YouTube URL: https://www.youtube.com/watch?v=V1nc9riqksY


