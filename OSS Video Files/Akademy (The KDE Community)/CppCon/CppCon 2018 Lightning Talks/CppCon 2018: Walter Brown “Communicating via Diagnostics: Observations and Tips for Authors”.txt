Title: CppCon 2018: Walter Brown “Communicating via Diagnostics: Observations and Tips for Authors”
Publication date: 2018-11-11
Playlist: CppCon 2018 Lightning Talks
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2018
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:00,149 --> 00:00:08,400
good evening want to talk to you about

00:00:04,110 --> 00:00:11,429
Diagnostics the topic that doesn't

00:00:08,400 --> 00:00:13,740
usually get much attention I was

00:00:11,429 --> 00:00:16,529
reminded of this when I saw this old

00:00:13,740 --> 00:00:21,180
email from Lawrence Crowell from a few

00:00:16,529 --> 00:00:22,650
years ago this is true people don't make

00:00:21,180 --> 00:00:25,070
the distinction between code that's

00:00:22,650 --> 00:00:29,130
correct and code that does not yet thing

00:00:25,070 --> 00:00:32,160
sooner or later things go wrong and I

00:00:29,130 --> 00:00:34,559
saw a blog from Raymond Chen he quotes

00:00:32,160 --> 00:00:42,540
the diagnostic and there's a piece of it

00:00:34,559 --> 00:00:44,300
error error why any comments I guess the

00:00:42,540 --> 00:00:45,500
tool doesn't know what went wrong either

00:00:44,300 --> 00:00:47,820
[Music]

00:00:45,500 --> 00:00:49,860
but I think we will all agree this is

00:00:47,820 --> 00:00:53,070
really not wonderful by way of feedback

00:00:49,860 --> 00:01:03,629
to a user right and then he proposed

00:00:53,070 --> 00:01:05,100
this and I certainly agree it's more

00:01:03,629 --> 00:01:07,320
entertaining just to sort of throw up

00:01:05,100 --> 00:01:09,979
your hands right but it's still not

00:01:07,320 --> 00:01:12,030
greatest communication to and for users

00:01:09,979 --> 00:01:15,500
the point is of course the good

00:01:12,030 --> 00:01:15,500
Diagnostics are no joke

00:01:16,070 --> 00:01:20,440
[Music]

00:01:27,600 --> 00:01:33,159
well we all know the agnostic suraíhs

00:01:30,159 --> 00:01:34,689
from errors what's an error any failure

00:01:33,159 --> 00:01:37,390
that prevents some function from

00:01:34,689 --> 00:01:39,909
fulfilling its contract this becomes

00:01:37,390 --> 00:01:42,280
increasingly important now that it looks

00:01:39,909 --> 00:01:44,770
like C++ 20 will have built-in support

00:01:42,280 --> 00:01:46,539
for contracts and of course there are

00:01:44,770 --> 00:01:49,060
three kinds of failures when you have

00:01:46,539 --> 00:01:51,759
contracts involved this is a reminder we

00:01:49,060 --> 00:01:55,119
have precondition failures we have post

00:01:51,759 --> 00:01:57,640
condition failures and we have invariant

00:01:55,119 --> 00:01:59,500
failures and that's sort of by way of

00:01:57,640 --> 00:02:02,590
reminder I think most of us understand

00:01:59,500 --> 00:02:08,860
what that is maybe that one's a good

00:02:02,590 --> 00:02:19,780
thing I looked at that and I just kind

00:02:08,860 --> 00:02:25,870
of shuddered I refused to comment on

00:02:19,780 --> 00:02:28,090
this one a lot of programmers still rely

00:02:25,870 --> 00:02:32,590
on the classical assert macro that we

00:02:28,090 --> 00:02:34,980
inherited from C but newbies really

00:02:32,590 --> 00:02:37,299
don't know how to use it well and

00:02:34,980 --> 00:02:39,370
usually there are two guidelines right

00:02:37,299 --> 00:02:42,819
use asserts when you're sure that

00:02:39,370 --> 00:02:44,590
something can't go wrong and then proper

00:02:42,819 --> 00:02:47,349
error handling whatever that means for

00:02:44,590 --> 00:02:49,389
you for some people it's exceptions when

00:02:47,349 --> 00:02:53,590
you can check for things that can go

00:02:49,389 --> 00:02:56,290
wrong so basic runtime assumptions are

00:02:53,590 --> 00:02:57,760
good candidates for asserts and I've

00:02:56,290 --> 00:03:01,859
discovered that a lot of programmers

00:02:57,760 --> 00:03:01,859
haven't seen asserts that look like that

00:03:02,370 --> 00:03:11,440
yes that's an and this compiles right

00:03:09,010 --> 00:03:14,859
and you can get a diagnostic of your

00:03:11,440 --> 00:03:16,150
choice when you get a failure report of

00:03:14,859 --> 00:03:18,579
course it's important to keep your

00:03:16,150 --> 00:03:22,660
asserts free of side effects namely keep

00:03:18,579 --> 00:03:25,299
them pure that's important don't use an

00:03:22,660 --> 00:03:28,209
assert when their runtime errors you can

00:03:25,299 --> 00:03:32,979
predict bad code is not an error it's a

00:03:28,209 --> 00:03:35,370
bug fix it and of course we were all

00:03:32,979 --> 00:03:37,520
told to check for errors early and often

00:03:35,370 --> 00:03:40,450
because the cost always

00:03:37,520 --> 00:03:43,010
comes almost entirely from fixing errors

00:03:40,450 --> 00:03:49,100
be sure to report them in a suitably

00:03:43,010 --> 00:03:54,620
dramatic way little louder please thank

00:03:49,100 --> 00:03:57,830
you one more time right okay suitably

00:03:54,620 --> 00:04:00,250
dramatic errors get more expensive to

00:03:57,830 --> 00:04:02,660
fix as the development process continues

00:04:00,250 --> 00:04:05,120
cheapest if the programmer catches it as

00:04:02,660 --> 00:04:06,920
we know it's cheaper that way then when

00:04:05,120 --> 00:04:09,170
Quality Assurance catches it and it's

00:04:06,920 --> 00:04:13,070
far far cheaper than the one the

00:04:09,170 --> 00:04:18,260
customer calls to complain about danger

00:04:13,070 --> 00:04:21,680
Will Robinson so we often find messages

00:04:18,260 --> 00:04:24,320
that are called a terse baffling remark

00:04:21,680 --> 00:04:29,630
used by programmers to put the blame on

00:04:24,320 --> 00:04:31,610
users of course we do that right did you

00:04:29,630 --> 00:04:35,720
ever think of an a message as being

00:04:31,610 --> 00:04:40,310
obsequious this humble and worthless

00:04:35,720 --> 00:04:42,110
program is devastated to report to you

00:04:40,310 --> 00:04:44,260
that I cannot accept your scale value of

00:04:42,110 --> 00:04:47,900
a thousand because the base and

00:04:44,260 --> 00:04:49,550
thoughtless programmer wrote me has

00:04:47,900 --> 00:04:55,520
restricted the value of this variable to

00:04:49,550 --> 00:04:57,560
between one and a hundred sure so here

00:04:55,520 --> 00:04:59,510
are a few guidelines the serious part of

00:04:57,560 --> 00:05:02,030
the talk if you're gonna write a

00:04:59,510 --> 00:05:04,160
diagnostic be explicit that something

00:05:02,030 --> 00:05:06,590
has gone wrong because users are lost

00:05:04,160 --> 00:05:09,530
when you don't give them proper feedback

00:05:06,590 --> 00:05:12,530
you have to be specific don't just say

00:05:09,530 --> 00:05:17,990
syntax error that's not terribly helpful

00:05:12,530 --> 00:05:21,370
don't make your users think use human

00:05:17,990 --> 00:05:25,250
readable and comprehensible language

00:05:21,370 --> 00:05:26,060
right know abbreviations no average

00:05:25,250 --> 00:05:33,890
right

00:05:26,060 --> 00:05:37,160
I hate 404 what does it need be polite

00:05:33,890 --> 00:05:39,050
be grammatically correct don't blame

00:05:37,160 --> 00:05:40,390
users don't imply that they're doing

00:05:39,050 --> 00:05:43,700
something stupid

00:05:40,390 --> 00:05:46,870
illegal command there was a lady who got

00:05:43,700 --> 00:05:49,669
her first home PC about 20 years ago

00:05:46,870 --> 00:05:50,330
this popped up she thought she was in

00:05:49,669 --> 00:05:53,990
you know

00:05:50,330 --> 00:05:55,550
we're gonna knock down her door she put

00:05:53,990 --> 00:05:58,340
her computer in the closet and never

00:05:55,550 --> 00:06:01,789
touched it again it's a true story

00:05:58,340 --> 00:06:08,469
and be affirmative input is not

00:06:01,789 --> 00:06:11,300
unconfused what avoid inconsistencies

00:06:08,469 --> 00:06:13,159
this is not the place for logic puzzles

00:06:11,300 --> 00:06:17,180
error success

00:06:13,159 --> 00:06:22,189
what keyboard not found this is a famous

00:06:17,180 --> 00:06:27,349
one from about 20 years ago all right

00:06:22,189 --> 00:06:31,009
what do I do now and above all in the

00:06:27,349 --> 00:06:34,310
message be helpful give them clear

00:06:31,009 --> 00:06:36,830
expectations tell them what to do your

00:06:34,310 --> 00:06:40,400
email could not be sent yeah okay what

00:06:36,830 --> 00:06:43,759
do I do now I don't know use error

00:06:40,400 --> 00:06:46,400
messages as an educational resource to

00:06:43,759 --> 00:06:49,250
teach your clients a little bit of

00:06:46,400 --> 00:06:51,349
something that's relevant and provide

00:06:49,250 --> 00:06:55,930
constructive advice here's the summary

00:06:51,349 --> 00:06:59,750
the explicit use comprehensible language

00:06:55,930 --> 00:07:02,229
avoid inconsistencies and above all be

00:06:59,750 --> 00:07:02,229
helpful

00:07:02,500 --> 00:07:04,220
[Applause]

00:07:02,870 --> 00:07:06,130
[Music]

00:07:04,220 --> 00:07:09,350
[Applause]

00:07:06,130 --> 00:07:15,960
[Music]

00:07:09,350 --> 00:07:19,010
thank you but I think you missed it good

00:07:15,960 --> 00:07:21,610
night we'll remember right York need

00:07:19,010 --> 00:07:27,640
thank you

00:07:21,610 --> 00:07:27,640

YouTube URL: https://www.youtube.com/watch?v=GNhwzTlcDp0


