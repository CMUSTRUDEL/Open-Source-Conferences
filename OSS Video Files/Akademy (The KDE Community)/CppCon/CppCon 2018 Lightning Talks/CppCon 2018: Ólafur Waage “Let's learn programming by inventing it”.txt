Title: CppCon 2018: Ólafur Waage “Let's learn programming by inventing it”
Publication date: 2018-11-12
Playlist: CppCon 2018 Lightning Talks
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2018
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:00,000 --> 00:00:04,230
hi so this is a big problem this is a

00:00:02,639 --> 00:00:06,810
kind of big issue and we have five

00:00:04,230 --> 00:00:08,130
minutes so it kind of sounds like if you

00:00:06,810 --> 00:00:11,130
want to make an apple pie you have to

00:00:08,130 --> 00:00:13,730
invent the universe and and by the way

00:00:11,130 --> 00:00:15,839
if you want the recipe it's over here

00:00:13,730 --> 00:00:17,850
which is silly because you have to

00:00:15,839 --> 00:00:22,320
preheat the oven before you make the

00:00:17,850 --> 00:00:25,710
universe but anyway another another side

00:00:22,320 --> 00:00:28,260
note why are we in such a hurry there's

00:00:25,710 --> 00:00:29,519
a old blog post or it probably wasn't

00:00:28,260 --> 00:00:31,109
even called the blog post back then by

00:00:29,519 --> 00:00:32,550
Peter nor week and teachers are

00:00:31,109 --> 00:00:34,649
programming in ten years because he was

00:00:32,550 --> 00:00:37,170
upset with all the teacher self Yahveh

00:00:34,649 --> 00:00:39,120
and two hours kind of blog post so again

00:00:37,170 --> 00:00:42,120
let's relax a bit

00:00:39,120 --> 00:00:47,370
so yes computers they love numbers oh

00:00:42,120 --> 00:00:49,050
they're so great here's one so even if

00:00:47,370 --> 00:00:50,579
this looks like the number five it's

00:00:49,050 --> 00:00:52,379
only a representation of the five

00:00:50,579 --> 00:00:56,039
minutes that exist in the universe but

00:00:52,379 --> 00:00:58,170
it will do for now we have natural over

00:00:56,039 --> 00:01:02,430
operator overloads so we can do five

00:00:58,170 --> 00:01:05,250
plus two representation of seven but

00:01:02,430 --> 00:01:07,320
then what I have seven now I would like

00:01:05,250 --> 00:01:09,570
to add another number to seven like

00:01:07,320 --> 00:01:13,409
three this is gonna be a mess to

00:01:09,570 --> 00:01:15,090
maintain so I have a problem I would

00:01:13,409 --> 00:01:18,659
like to add a number to any other number

00:01:15,090 --> 00:01:22,080
at my convenience so computers of memory

00:01:18,659 --> 00:01:23,909
great it's only four numbers again great

00:01:22,080 --> 00:01:24,570
so let's make the computer do the work

00:01:23,909 --> 00:01:27,680
for us

00:01:24,570 --> 00:01:30,060
so a variable is a feature where you can

00:01:27,680 --> 00:01:30,840
give a number a name and the computer

00:01:30,060 --> 00:01:34,259
would put it somewhere

00:01:30,840 --> 00:01:35,880
sounds like a perfect fit so I can have

00:01:34,259 --> 00:01:38,820
a number of students is the

00:01:35,880 --> 00:01:42,090
representation seven or it can even do

00:01:38,820 --> 00:01:44,479
the calculation for me how handy so

00:01:42,090 --> 00:01:48,750
let's explore what numbers can be stored

00:01:44,479 --> 00:01:52,259
chemists of zero can we store negative

00:01:48,750 --> 00:01:54,100
numbers what's the biggest number we can

00:01:52,259 --> 00:02:00,050
store

00:01:54,100 --> 00:02:03,880
it's not a number so the numbers you can

00:02:00,050 --> 00:02:06,800
store kind of depend on your computer so

00:02:03,880 --> 00:02:09,440
what if I want to be absolutely sure or

00:02:06,800 --> 00:02:11,990
more sure about the type I have so we

00:02:09,440 --> 00:02:13,100
can have types they kind of depend on

00:02:11,990 --> 00:02:15,800
the computer but it's a little bit

00:02:13,100 --> 00:02:17,000
better they come before the variable as

00:02:15,800 --> 00:02:20,540
before

00:02:17,000 --> 00:02:23,630
etc etc the thing is we can keep doing

00:02:20,540 --> 00:02:26,300
this hey I want to add I want to run

00:02:23,630 --> 00:02:27,680
code sometimes conditions I want to keep

00:02:26,300 --> 00:02:28,610
asking the same question again and again

00:02:27,680 --> 00:02:30,709
loops

00:02:28,610 --> 00:02:32,750
I want to prevent repetition of code or

00:02:30,709 --> 00:02:35,090
even just isolating a bit of code

00:02:32,750 --> 00:02:38,810
functions and this is what I call

00:02:35,090 --> 00:02:41,360
iterative learning you learn what

00:02:38,810 --> 00:02:43,700
problem is something is solving and if

00:02:41,360 --> 00:02:46,100
you learn the problem set you're more

00:02:43,700 --> 00:02:47,900
likely to use it and also another

00:02:46,100 --> 00:02:49,820
important point if a language feature

00:02:47,900 --> 00:02:51,890
using isn't solving the problem you have

00:02:49,820 --> 00:02:56,120
why are you using that language feature

00:02:51,890 --> 00:03:00,799
so let's have some fun we shall see this

00:02:56,120 --> 00:03:04,670
example let's say we are all here we are

00:03:00,799 --> 00:03:09,049
learning C we know nothing at all we

00:03:04,670 --> 00:03:11,170
pick up K and R hey it's page one how

00:03:09,049 --> 00:03:13,610
much of the language would you know

00:03:11,170 --> 00:03:14,930
before you learn about pointers some of

00:03:13,610 --> 00:03:17,870
you here know the answer because I've

00:03:14,930 --> 00:03:21,130
seen shown this before so let's go

00:03:17,870 --> 00:03:25,880
through the index is it in chapter one

00:03:21,130 --> 00:03:31,910
no well some of you might say hey erase

00:03:25,880 --> 00:03:34,730
but we even have arguments but

00:03:31,910 --> 00:03:38,390
specifically call-by-value great lot

00:03:34,730 --> 00:03:40,190
except the one it's in Chapter two no we

00:03:38,390 --> 00:03:42,440
have constants we have type conversions

00:03:40,190 --> 00:03:45,709
we have been twice operators where

00:03:42,440 --> 00:03:49,959
you're on page 52 now is it in Chapter

00:03:45,709 --> 00:03:49,959
three No

00:03:50,680 --> 00:03:57,340
even have to while loops look at the

00:03:53,300 --> 00:03:57,340
last one oh look at the last one

00:03:58,000 --> 00:04:10,210
wonderful it must be in Chapter four

00:04:01,670 --> 00:04:15,740
right no recursion Rickey sir variables

00:04:10,210 --> 00:04:20,900
repeats 88 okay okay it must be here

00:04:15,740 --> 00:04:23,930
there it is pointers so we're on page 93

00:04:20,900 --> 00:04:25,850
how long is this book this book is 185

00:04:23,930 --> 00:04:28,370
pages a little more with appendix and

00:04:25,850 --> 00:04:30,190
reference manual it's 50 point 27

00:04:28,370 --> 00:04:32,960
percent through the book

00:04:30,190 --> 00:04:35,000
so summary teaching something through

00:04:32,960 --> 00:04:37,400
feature iteration can't be helpful you

00:04:35,000 --> 00:04:38,720
should question using features if

00:04:37,400 --> 00:04:41,870
they're not solving your problems and

00:04:38,720 --> 00:04:44,260
you can learn half of C without even

00:04:41,870 --> 00:04:51,110
knowing where the pointers thank you

00:04:44,260 --> 00:04:51,110

YouTube URL: https://www.youtube.com/watch?v=l5Mp_DEn4bs


