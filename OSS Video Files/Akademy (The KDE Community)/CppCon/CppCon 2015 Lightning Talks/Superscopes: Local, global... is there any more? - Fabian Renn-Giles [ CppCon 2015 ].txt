Title: Superscopes: Local, global... is there any more? - Fabian Renn-Giles [ CppCon 2015 ]
Publication date: 2015-10-21
Playlist: CppCon 2015 Lightning Talks
Description: 
	http://www.Cppcon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/cppcon/cppcon2015
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
—
Optimized And Managed by Digital Medium Ltd - events.digital-medium.co.uk
events@digital-medium.co.uk
Captions: 
	00:00:00,000 --> 00:00:04,830
hello I'm Fabian from juice and i'll

00:00:02,909 --> 00:00:07,440
talk to you about this crazy idea i had

00:00:04,830 --> 00:00:10,440
it's called super scopes I can't see my

00:00:07,440 --> 00:00:14,340
pointer okay just work on that screen

00:00:10,440 --> 00:00:17,190
yeah crazy idea had about super scopes

00:00:14,340 --> 00:00:18,449
and it's uh yeah it's it's pretty out

00:00:17,190 --> 00:00:21,570
there i'm not sure if it really makes

00:00:18,449 --> 00:00:23,699
sense but hey i'll give it a go so we

00:00:21,570 --> 00:00:26,760
all know varietal scoping in c++ we all

00:00:23,699 --> 00:00:29,039
love it let me just talk you through it

00:00:26,760 --> 00:00:31,260
again so at the bottom level we have

00:00:29,039 --> 00:00:33,570
like local variables that the lifetime

00:00:31,260 --> 00:00:36,780
is connected to the lifetime of your

00:00:33,570 --> 00:00:38,850
code block the visibility is only inside

00:00:36,780 --> 00:00:40,700
the code block at the next level maybe

00:00:38,850 --> 00:00:43,200
you could say we have member variables

00:00:40,700 --> 00:00:45,930
the lifetime is somehow connected to the

00:00:43,200 --> 00:00:47,640
object so that means when the class gets

00:00:45,930 --> 00:00:49,230
instantiated your member of robots get

00:00:47,640 --> 00:00:50,670
instantiated and when the class gets

00:00:49,230 --> 00:00:53,010
destructed all you remember violets get

00:00:50,670 --> 00:00:55,649
destructed the visibility is all the

00:00:53,010 --> 00:00:57,239
methods and then the constructor in the

00:00:55,649 --> 00:01:00,510
destructor then you have something in

00:00:57,239 --> 00:01:01,829
C++ 14 threadlocal then you have global

00:01:00,510 --> 00:01:04,650
variables which is connected to the

00:01:01,829 --> 00:01:06,930
lifetime of the application but can we

00:01:04,650 --> 00:01:09,180
somehow even go higher yeah can we is

00:01:06,930 --> 00:01:10,979
there a scope level that even higher

00:01:09,180 --> 00:01:13,439
than global scope so that was sort of my

00:01:10,979 --> 00:01:16,220
idea but let's track back for a moment

00:01:13,439 --> 00:01:19,740
like how did I have this idea well I

00:01:16,220 --> 00:01:21,750
have this software bundle that I wrote a

00:01:19,740 --> 00:01:23,820
few years ago and that installed three

00:01:21,750 --> 00:01:25,350
applications and it was a demo so I

00:01:23,820 --> 00:01:27,210
always annoyed the user with this nice

00:01:25,350 --> 00:01:29,939
little demo dialogue and would tell the

00:01:27,210 --> 00:01:31,530
user how many hours and minutes and

00:01:29,939 --> 00:01:34,170
seconds of audio processing time they

00:01:31,530 --> 00:01:37,829
had left before they had to pay a really

00:01:34,170 --> 00:01:39,570
high license fee of course and that all

00:01:37,829 --> 00:01:41,460
I needed to do is sort of store ave

00:01:39,570 --> 00:01:44,070
arrival called number of audio samples

00:01:41,460 --> 00:01:46,350
process and with just an integer okay so

00:01:44,070 --> 00:01:48,290
I have a nice little database file

00:01:46,350 --> 00:01:50,399
somewhere that has an integer in there

00:01:48,290 --> 00:01:52,920
then the Installer of course has

00:01:50,399 --> 00:01:54,329
initialize it to zero yeah okay somehow

00:01:52,920 --> 00:01:55,439
all the applications have to talk to

00:01:54,329 --> 00:01:57,509
that because you know they all have to

00:01:55,439 --> 00:01:59,490
increment that little counter and if the

00:01:57,509 --> 00:02:00,600
check it's done okay okay well that

00:01:59,490 --> 00:02:01,680
doesn't really work because we need a

00:02:00,600 --> 00:02:03,479
demon of course because all these

00:02:01,680 --> 00:02:05,340
application and then we need I could see

00:02:03,479 --> 00:02:07,590
calls and oh my god it's just such a

00:02:05,340 --> 00:02:11,310
mess I mean we just we just want to

00:02:07,590 --> 00:02:14,250
increment one single variable like

00:02:11,310 --> 00:02:16,260
hard can it be so I wrote this class a

00:02:14,250 --> 00:02:18,330
long time ago called installation local

00:02:16,260 --> 00:02:20,880
it's a template class and you can put

00:02:18,330 --> 00:02:23,130
any variable inside there and it's

00:02:20,880 --> 00:02:25,590
really like you can think of it as like

00:02:23,130 --> 00:02:27,599
a new higher level sculpt so what this

00:02:25,590 --> 00:02:29,190
does is if you build an application with

00:02:27,599 --> 00:02:31,800
this installation local it will actually

00:02:29,190 --> 00:02:33,000
modify your installer so that means that

00:02:31,800 --> 00:02:35,400
when the install installed your

00:02:33,000 --> 00:02:36,840
application it instantiates that

00:02:35,400 --> 00:02:39,630
variable there's some crazy

00:02:36,840 --> 00:02:42,599
serialization stuff and all the

00:02:39,630 --> 00:02:44,880
applications it hides away all that I pc

00:02:42,599 --> 00:02:46,830
can talk to that variable and when you d

00:02:44,880 --> 00:02:48,420
install the variable goes out of scope

00:02:46,830 --> 00:02:53,160
it actually caused the destruction on

00:02:48,420 --> 00:02:57,360
that varietal so let's look at some code

00:02:53,160 --> 00:02:58,769
so before let's say insulation local you

00:02:57,360 --> 00:03:00,690
maybe your application will look like

00:02:58,769 --> 00:03:03,030
this this is like a typical QT

00:03:00,690 --> 00:03:06,030
application or a juice application where

00:03:03,030 --> 00:03:08,790
you would have an application class and

00:03:06,030 --> 00:03:10,380
you would typically then have the

00:03:08,790 --> 00:03:11,880
application instance as a global

00:03:10,380 --> 00:03:15,299
variable you see that last line there at

00:03:11,880 --> 00:03:17,519
the bottom now for my little software

00:03:15,299 --> 00:03:18,989
bundle there I have two applications you

00:03:17,519 --> 00:03:21,540
see on the left side there just 22

00:03:18,989 --> 00:03:24,720
application classes I actually had to be

00:03:21,540 --> 00:03:26,340
but yeah and then in the same file you

00:03:24,720 --> 00:03:28,290
maybe have this software bundle class

00:03:26,340 --> 00:03:30,690
all of a sudden and the software bundle

00:03:28,290 --> 00:03:32,489
class look at the very very last slide

00:03:30,690 --> 00:03:34,109
it's not a global variable it's an

00:03:32,489 --> 00:03:36,569
installation local variable that means

00:03:34,109 --> 00:03:38,010
when you install it the soft obama class

00:03:36,569 --> 00:03:40,620
gets instantiated when you uninstall

00:03:38,010 --> 00:03:41,730
that gets destructed and every time you

00:03:40,620 --> 00:03:43,410
use a double click some of those

00:03:41,730 --> 00:03:45,540
applications that little create

00:03:43,410 --> 00:03:46,829
application with name is called and the

00:03:45,540 --> 00:03:48,690
nice thing is if you look at the left

00:03:46,829 --> 00:03:49,859
side at the process sample i'm sorry i

00:03:48,690 --> 00:03:51,930
don't have a laser pointer but at the

00:03:49,859 --> 00:03:54,540
process sample how it increments the num

00:03:51,930 --> 00:03:56,459
samples process that just points into

00:03:54,540 --> 00:03:58,200
the software bundle class yeah so

00:03:56,459 --> 00:04:00,480
everybody can talk to that varietal and

00:03:58,200 --> 00:04:04,079
just increment it use it like a normal

00:04:00,480 --> 00:04:06,900
or variable okay so can we do other

00:04:04,079 --> 00:04:09,510
crazy stuff like that was just one idea

00:04:06,900 --> 00:04:10,859
of super scope I mean I haven't

00:04:09,510 --> 00:04:13,019
implemented this but this is just like

00:04:10,859 --> 00:04:16,079
let's let's get really crazy so how

00:04:13,019 --> 00:04:17,940
about a login local like how about when

00:04:16,079 --> 00:04:19,859
the user logs in some robots gets

00:04:17,940 --> 00:04:21,299
instantiated everybody all the

00:04:19,859 --> 00:04:22,540
applications can use it running under

00:04:21,299 --> 00:04:24,280
that user i'm going to use

00:04:22,540 --> 00:04:27,580
logs out it gets distracted might be

00:04:24,280 --> 00:04:30,160
useful maybe machine local with us gets

00:04:27,580 --> 00:04:32,500
installed some things get instantiated

00:04:30,160 --> 00:04:34,270
and destructed and then probably a

00:04:32,500 --> 00:04:35,620
really really useful one but also really

00:04:34,270 --> 00:04:37,870
really hard to implement but probably

00:04:35,620 --> 00:04:40,480
the most useful one might be a cloud

00:04:37,870 --> 00:04:43,000
local scope this would get rid of all of

00:04:40,480 --> 00:04:45,550
this web back-end talk you would have a

00:04:43,000 --> 00:04:47,740
scope that comes into scope when your

00:04:45,550 --> 00:04:49,390
company gets founded when you turn on

00:04:47,740 --> 00:04:51,010
that web app and you never want to call

00:04:49,390 --> 00:04:54,190
the destructor because that means your

00:04:51,010 --> 00:04:56,440
company's bust but all your applications

00:04:54,190 --> 00:04:58,900
of your company can talk to these

00:04:56,440 --> 00:05:00,190
variables so that's its I'm not

00:04:58,900 --> 00:05:01,780
presenting an implementation yeah I'm

00:05:00,190 --> 00:05:04,330
presenting an idea maybe a new way of

00:05:01,780 --> 00:05:05,730
thinking yeah you have any questions or

00:05:04,330 --> 00:05:08,680
want more details of that implementation

00:05:05,730 --> 00:05:11,640
ask now or send me an email or talk to

00:05:08,680 --> 00:05:11,640

YouTube URL: https://www.youtube.com/watch?v=B68_bgXYX94


