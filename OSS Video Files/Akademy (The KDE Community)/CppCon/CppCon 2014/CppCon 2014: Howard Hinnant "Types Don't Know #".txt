Title: CppCon 2014: Howard Hinnant "Types Don't Know #"
Publication date: 2014-10-23
Playlist: CppCon 2014
Description: 
	http://www.cppcon.org
â€”
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2014
--
This presentation will be based on the following paper which will be a proposal to the C++ standards committee:

http://htmlpreview.github.io/?https://github.com/HowardHinnant/papers/blob/master/hashing.html

This paper proposes a new hashing infrastructure that completely decouples hashing algorithms from individual types that need to be hashed. This decoupling divides the hashing computation among 3 different programmers who need not coordinate with each other:

1. Authors of hashable types (keys of type K) write their hashing support just once, using no specific hashing algorithm. This code resembles (and is approximately the same amount of work as) operator== and swap for a type.

2. Authors of hashing algorithms write a functor (e.g. H) that operates on a contiguous chunk of generic memory, represented by a void const* and a number of bytes. This code has no concept of a specific key type, only of bytes to be hashed.

3. Clients who want to hash keys of type K using hashing algorithm H will form a functor of type std::uhash to give to an unordered container.

unordered_set my_set;

Source code will be available at this link: https://github.com/HowardHinnant/hash_append
--
Howard Hinnant: Lead author of several C++11 features including: move semantics, unique_ptr, , and . Coming in C++14: .Homepage is http://home.roadrunner.com/~hinnant/ (never seem to have time to make it look pretty).Lead author on two open source projects: A std::lib implementation: http://libcxx.llvm.org An Itanium ABI implementation: http://libcxxabi.llvm.orgWebsite: http://home.roadrunner.com/~hinnant/
--
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
YouTube URL: https://www.youtube.com/watch?v=Njjp_MJsgt8


