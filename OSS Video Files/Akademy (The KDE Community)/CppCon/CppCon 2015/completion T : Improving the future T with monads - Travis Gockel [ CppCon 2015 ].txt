Title: completion T : Improving the future T with monads - Travis Gockel [ CppCon 2015 ]
Publication date: 2015-10-12
Playlist: CppCon 2015
Description: 
	http://www.Cppcon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/cppcon/cppcon2015
—
std::future provides us a mechanism for asynchronous communication between a provider and receiver. However, the C++14 standard does not allow for actual asynchronous programming, as the only ways to interact with an std::future are blocking calls. The proposed then helps, but the interface is awkward and can be extremely slow when handling exceptions. Here, I will talk about completion a high-performance, async-only and monadic alternative to std::future and how it is used at SolidFire.
— 
Travis work at SolidFire on a high-performance, fault-tolerant distributed system, where he is responsible for developing tools to make building systems easier and safer. He is a bit of a programming language nerd and is a big fan of where Rust is going (eventually). If you find Travis during the day without coffee or during the night without whiskey, there is a problem.
—
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
—
Optimized And Managed by Digital Medium Ltd - events.digital-medium.co.uk
events@digital-medium.co.uk
YouTube URL: https://www.youtube.com/watch?v=yOtb508xQuM


