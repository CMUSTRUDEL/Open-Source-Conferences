Title: CppCon 2017: Alan Bucior “Building Better Worlds: Developing a Procedural City Tool for Alien...”
Publication date: 2017-10-09
Playlist: CppCon 2017
Description: 
	Building Better Worlds: Developing a Procedural City Tool for Alien: Covenant

http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2017
—
When MPC was asked to create a massive CG city for the film Alien: Covenant, they looked to leverage procedural generation as a means for iterating on the overall shape and structure of the city, in place of a prohibitively large team of environment artists. After evaluating all the practical third party options, it was ultimately decided that the best option was to build a custom tool to procedurally assist artists' city-building skills. This allowed for rapid iteration on the overall look of the city by striking a balance between manual and procedural techniques. 

The core algorithms were written in C++ for speed. The user interface was written in Python to accommodate quick feature changes, and a dash of Fabric Engine's KL helped with model import and rendering. This multi-language approach allowed the consistent application of the "best tool for the job" rule, which is a common pattern at MPC, allowing flexible teams with experts in a variety of skillsets. 

This talk will detail the history and development of MPC's city building tool, "Machi". Alan Bucior, Lead Developer of Machi, reviews the algorithms for city layout and building placement, discusses how to implement algorithms in an artist-driven manner, and shares various insights gleaned through the development process and discussion with stakeholders.
— 
Alan Bucior: Lead Software Developer, MPC Film

Alan Bucior is a lead software developer at MPC, with over 20 years of experience developing software in the entertainment industry.
—
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:01,580 --> 00:00:07,049
so yeah hi everyone I'm Alan Busey er

00:00:05,160 --> 00:00:08,730
I'm a lead software developer in this AG

00:00:07,049 --> 00:00:12,030
software department at a moving-picture

00:00:08,730 --> 00:00:13,590
company our NPC in Vancouver Canada I've

00:00:12,030 --> 00:00:15,150
been in NBC's about a little over two

00:00:13,590 --> 00:00:18,119
years now and before that I spent about

00:00:15,150 --> 00:00:18,990
18 years in video game development so

00:00:18,119 --> 00:00:21,240
the stocks gonna be a little bit

00:00:18,990 --> 00:00:24,750
different for most the other talks here

00:00:21,240 --> 00:00:26,460
at CPC you be calm I'm not canoe not

00:00:24,750 --> 00:00:29,010
gonna be talking about C+ or 17 and I'll

00:00:26,460 --> 00:00:31,650
be talking about you know new plate meta

00:00:29,010 --> 00:00:33,540
programming techniques it's not even

00:00:31,650 --> 00:00:35,250
gonna show you any code unfortunately so

00:00:33,540 --> 00:00:39,809
what I really want to talk about is just

00:00:35,250 --> 00:00:41,550
how C++ is used in Visual Effects so you

00:00:39,809 --> 00:00:43,860
don't really hear much about C++ in film

00:00:41,550 --> 00:00:46,350
it's it's mostly discussed in other

00:00:43,860 --> 00:00:48,300
industries but C++ does really play a

00:00:46,350 --> 00:00:50,430
key and important role in the creation

00:00:48,300 --> 00:00:52,590
of most of the big features that are in

00:00:50,430 --> 00:00:55,530
films that are in theaters today so

00:00:52,590 --> 00:00:57,570
structure the talk who we are a little

00:00:55,530 --> 00:00:59,070
about how we use C++ and then we'll get

00:00:57,570 --> 00:01:02,870
into the bulk of the talk which is about

00:00:59,070 --> 00:01:05,670
our project called hamachi what it is

00:01:02,870 --> 00:01:06,659
what how it starts structured and I'll

00:01:05,670 --> 00:01:08,220
dig into a few of the interesting

00:01:06,659 --> 00:01:10,979
technical and artistic problems we met

00:01:08,220 --> 00:01:12,240
along the way and then we'll talk about

00:01:10,979 --> 00:01:16,470
what we're gonna be doing with it in the

00:01:12,240 --> 00:01:18,270
future so by the way I stole some slides

00:01:16,470 --> 00:01:20,100
from the marketing guy so if you want to

00:01:18,270 --> 00:01:23,369
play like which of the marketing guy

00:01:20,100 --> 00:01:25,380
slides uncle with that so this is a

00:01:23,369 --> 00:01:26,340
marketing guy slide so when you think

00:01:25,380 --> 00:01:27,710
about visual effects companies there's

00:01:26,340 --> 00:01:29,700
probably a few that come to mind

00:01:27,710 --> 00:01:31,979
unfortunately outside of the visual

00:01:29,700 --> 00:01:33,509
effects industry most people a lot of

00:01:31,979 --> 00:01:34,860
them haven't heard of MPC we're actually

00:01:33,509 --> 00:01:38,040
one of the largest VFX companies out

00:01:34,860 --> 00:01:40,020
there we work on many of the big biggest

00:01:38,040 --> 00:01:41,759
films each year we've got nine locations

00:01:40,020 --> 00:01:44,070
in the world five of which are focused

00:01:41,759 --> 00:01:45,659
on film I say one of the largest it's

00:01:44,070 --> 00:01:48,090
possible depending on when you ask at

00:01:45,659 --> 00:01:50,189
what metric you use we may be the

00:01:48,090 --> 00:01:51,390
largest but I'm not gonna I'm not gonna

00:01:50,189 --> 00:01:54,329
claim that today I'm just gonna say

00:01:51,390 --> 00:01:56,189
we're pretty big by VFX standards we

00:01:54,329 --> 00:01:58,770
work on a lot of films sometimes it's

00:01:56,189 --> 00:02:01,110
only a few shops the end of the at the

00:01:58,770 --> 00:02:04,799
other end of the spectrum will do almost

00:02:01,110 --> 00:02:06,659
the entire film we've done a couple of

00:02:04,799 --> 00:02:08,610
we've won a couple of Oscars for the

00:02:06,659 --> 00:02:11,280
best visual effects the first was in

00:02:08,610 --> 00:02:12,069
2013 for Life of Pi and just this year

00:02:11,280 --> 00:02:15,939
we won

00:02:12,069 --> 00:02:18,760
or jungle book we did about 90% of that

00:02:15,939 --> 00:02:20,290
film on top actually up there that's my

00:02:18,760 --> 00:02:21,400
favorite scene and before we talk about

00:02:20,290 --> 00:02:24,129
aliens I want to talk a little bit about

00:02:21,400 --> 00:02:28,989
this scene so having how much of this is

00:02:24,129 --> 00:02:31,840
CG almost all of it right I mean the

00:02:28,989 --> 00:02:36,340
only thing that's not CG here is the kid

00:02:31,840 --> 00:02:38,530
that's it so it's kind of crazy but I

00:02:36,340 --> 00:02:39,879
think of a woman into this into this

00:02:38,530 --> 00:02:41,919
scene like the background there with all

00:02:39,879 --> 00:02:43,299
that foliage in the jungle all of that

00:02:41,919 --> 00:02:45,129
was placed by an artist but it was

00:02:43,299 --> 00:02:47,019
placed using procedural techniques the

00:02:45,129 --> 00:02:50,829
water or there's fluid simulation going

00:02:47,019 --> 00:02:52,750
on every strand of hair in the fur that

00:02:50,829 --> 00:02:55,870
was generated procedurally using artists

00:02:52,750 --> 00:02:57,159
created guide curves and of course one

00:02:55,870 --> 00:02:58,930
of the things to note is that the water

00:02:57,159 --> 00:03:00,819
actually floats correctly under the

00:02:58,930 --> 00:03:03,280
water and it maps down correctly above

00:03:00,819 --> 00:03:05,620
the water and it's all sort of rendered

00:03:03,280 --> 00:03:08,349
using shaders and so forth that make it

00:03:05,620 --> 00:03:10,599
look really realistic there is a huge

00:03:08,349 --> 00:03:13,870
amount of code going on here and a lot

00:03:10,599 --> 00:03:18,840
of it is C++ and by the way not all of

00:03:13,870 --> 00:03:18,840
the kid is real look at the legs CG legs

00:03:21,569 --> 00:03:25,569
yeah so first one talk a little bit

00:03:23,530 --> 00:03:28,269
about what languages you use here or use

00:03:25,569 --> 00:03:31,209
at MPC and how C++ is really at the core

00:03:28,269 --> 00:03:33,879
of it all we use C++ Python those are

00:03:31,209 --> 00:03:35,139
sort of big two Lua and fabric enginer

00:03:33,879 --> 00:03:36,609
in there as well you probably haven't

00:03:35,139 --> 00:03:37,659
heard a bit much about fabric engine so

00:03:36,609 --> 00:03:39,909
I'll just give you a quick introduction

00:03:37,659 --> 00:03:44,049
it's a it's an application programming

00:03:39,909 --> 00:03:45,310
framework it includes a textual

00:03:44,049 --> 00:03:46,019
scripting language that's fairly

00:03:45,310 --> 00:03:50,799
high-level

00:03:46,019 --> 00:03:53,079
it's it's it's got some it has an LLVM

00:03:50,799 --> 00:03:54,519
back-end which allows it to run you're

00:03:53,079 --> 00:03:56,680
generating they're fast or native code

00:03:54,519 --> 00:03:58,449
and run fast and it also has a some

00:03:56,680 --> 00:03:59,949
really convenient semantics built into

00:03:58,449 --> 00:04:02,530
the language for parallelism and

00:03:59,949 --> 00:04:03,639
general-purpose GPU acceleration it's

00:04:02,530 --> 00:04:05,530
kind of meant to bridge the gap between

00:04:03,639 --> 00:04:07,930
a scripting language in terms of

00:04:05,530 --> 00:04:12,569
simplicity and a compiled language in

00:04:07,930 --> 00:04:15,310
terms of speed I should also mention

00:04:12,569 --> 00:04:17,409
well actually I will talk about it later

00:04:15,310 --> 00:04:19,989
so underpinning everything at MPC we

00:04:17,409 --> 00:04:23,080
have a library in C++ called muggins

00:04:19,989 --> 00:04:24,460
it's and we also have a bunch of Simplot

00:04:23,080 --> 00:04:25,310
simulation code so that really is where

00:04:24,460 --> 00:04:28,970
the bots are

00:04:25,310 --> 00:04:32,300
plus plus code ends up the simulation

00:04:28,970 --> 00:04:34,370
code is things like Alice are our crowd

00:04:32,300 --> 00:04:37,750
engine collie or destruction engine and

00:04:34,370 --> 00:04:40,250
fertility our hair system

00:04:37,750 --> 00:04:41,840
muggins on the other hand is just a

00:04:40,250 --> 00:04:44,120
generic library that we use throughout

00:04:41,840 --> 00:04:45,590
most of our code at MPC it's been a core

00:04:44,120 --> 00:04:46,880
component of our stack for about 10

00:04:45,590 --> 00:04:48,730
years now and it's been used on hundreds

00:04:46,880 --> 00:04:50,960
of films it provides a bunch of useful

00:04:48,730 --> 00:04:52,850
functionality and abstractions like

00:04:50,960 --> 00:04:55,220
various data types all the way from vex

00:04:52,850 --> 00:04:57,350
3 up to political geometry geometry

00:04:55,220 --> 00:04:59,950
manipulation routines math libraries

00:04:57,350 --> 00:05:02,330
custom data serialization formats and

00:04:59,950 --> 00:05:04,490
importantly it includes something a

00:05:02,330 --> 00:05:07,190
rendering abstraction layer so that

00:05:04,490 --> 00:05:08,780
allows us to render to a variety of

00:05:07,190 --> 00:05:10,790
different targets such as OpenGL or

00:05:08,780 --> 00:05:14,150
Pixar's render man using the same

00:05:10,790 --> 00:05:15,950
higher-level code I can't show you my

00:05:14,150 --> 00:05:20,150
keys if you're really interested in this

00:05:15,950 --> 00:05:21,770
sort of thing there is actually a open

00:05:20,150 --> 00:05:23,690
source library called cortex which is

00:05:21,770 --> 00:05:26,300
very similar one of the original muggins

00:05:23,690 --> 00:05:27,979
developers went to a company called

00:05:26,300 --> 00:05:30,440
image engine any made an open-source

00:05:27,979 --> 00:05:32,140
version of well an open source visual

00:05:30,440 --> 00:05:35,479
effects library called cortex and it's

00:05:32,140 --> 00:05:37,520
it's it shares a lot of the same design

00:05:35,479 --> 00:05:38,780
choices so if you're interested in this

00:05:37,520 --> 00:05:41,150
sort of thing check that out because

00:05:38,780 --> 00:05:43,039
it's open source so we have a lot of

00:05:41,150 --> 00:05:46,789
languages we also have a lot of bindings

00:05:43,039 --> 00:05:49,100
between those languages in that also

00:05:46,789 --> 00:05:50,390
means actually we have a lot of code to

00:05:49,100 --> 00:05:53,000
help automate that commit creation of

00:05:50,390 --> 00:05:56,090
those bindings in the middle we have Lua

00:05:53,000 --> 00:05:58,070
that is really the business logic around

00:05:56,090 --> 00:06:02,720
most of our complex data types and how

00:05:58,070 --> 00:06:04,910
we get that data onto the screen it

00:06:02,720 --> 00:06:06,169
binds mostly down into C++ through

00:06:04,910 --> 00:06:08,150
muggins and uses that rendering

00:06:06,169 --> 00:06:10,039
abstraction layer quite substantially

00:06:08,150 --> 00:06:11,750
its high-level enough that a technical

00:06:10,039 --> 00:06:12,710
artist can contribute to it and it gets

00:06:11,750 --> 00:06:14,570
from behind the scenes in a lot of

00:06:12,710 --> 00:06:16,669
different places it really only binds

00:06:14,570 --> 00:06:19,880
down to C++ though we also have Python

00:06:16,669 --> 00:06:21,950
now a common pattern at MPC is we write

00:06:19,880 --> 00:06:25,280
the stuff that needs to be fast in C++

00:06:21,950 --> 00:06:27,800
and then we wrap C Python bindings

00:06:25,280 --> 00:06:29,810
around it with use Python and then we

00:06:27,800 --> 00:06:32,210
control that the higher level code in

00:06:29,810 --> 00:06:35,210
Python we also use it for a lot of stuff

00:06:32,210 --> 00:06:37,310
like UI and pipeline code and of course

00:06:35,210 --> 00:06:38,689
we have fabric engine over here which I

00:06:37,310 --> 00:06:41,779
talked about earlier it

00:06:38,689 --> 00:06:43,849
we just binds down to C++ we also have

00:06:41,779 --> 00:06:46,339
some bindings back into Python too for

00:06:43,849 --> 00:06:48,499
our asset management system which

00:06:46,339 --> 00:06:51,489
actually also mention you know I'm using

00:06:48,499 --> 00:06:54,319
a Mac here we use almost strictly Linux

00:06:51,489 --> 00:06:56,209
in our development which that's

00:06:54,319 --> 00:06:58,009
interesting to you so we talked a lot

00:06:56,209 --> 00:07:00,860
about languages let's talk about aliens

00:06:58,009 --> 00:07:02,239
for a bit so with the end work on alien

00:07:00,860 --> 00:07:04,699
government we knew there was gonna be a

00:07:02,239 --> 00:07:05,119
big city in the film via the engineer

00:07:04,699 --> 00:07:07,009
city

00:07:05,119 --> 00:07:08,409
we even had a concept image roughly

00:07:07,009 --> 00:07:10,729
showing us what it was gonna look like

00:07:08,409 --> 00:07:12,529
we don't a fair bit of work in the past

00:07:10,729 --> 00:07:13,969
with cities on a number of different

00:07:12,529 --> 00:07:16,879
films but this was looking like it was

00:07:13,969 --> 00:07:19,189
going to be bigger and with a lot more

00:07:16,879 --> 00:07:20,209
detail in a lot more shops so it's kind

00:07:19,189 --> 00:07:21,889
of scaring us a little bit

00:07:20,209 --> 00:07:23,719
we knew the rough parameters we knew it

00:07:21,889 --> 00:07:25,699
was gonna be from a few thousand

00:07:23,719 --> 00:07:28,969
buildings to maybe tens of thousands and

00:07:25,699 --> 00:07:30,409
buildings circular in shape but maybe

00:07:28,969 --> 00:07:33,139
with some organic bits at the edges

00:07:30,409 --> 00:07:36,139
there's gonna be districts so that meant

00:07:33,139 --> 00:07:38,619
more residential here maybe more temple

00:07:36,139 --> 00:07:41,209
oriented here or something like that and

00:07:38,619 --> 00:07:43,039
we wanted to basically have a few key

00:07:41,209 --> 00:07:45,529
hero buildings that we wanted to place

00:07:43,039 --> 00:07:46,939
in the world so for example a giant

00:07:45,529 --> 00:07:48,259
Cathedral or something like that and we

00:07:46,939 --> 00:07:49,999
had to build our city around that

00:07:48,259 --> 00:07:52,579
regardless of what we chose for the

00:07:49,999 --> 00:07:53,659
shape of the city otherwise so the

00:07:52,579 --> 00:07:55,610
concept art was only give me a rough

00:07:53,659 --> 00:07:57,649
guide we wanted a way to experiment with

00:07:55,610 --> 00:08:00,589
various city looks and layouts without

00:07:57,649 --> 00:08:02,269
requiring an army of artists to manually

00:08:00,589 --> 00:08:04,519
place buildings every time we iterated

00:08:02,269 --> 00:08:07,429
on it we needed a a very quick iteration

00:08:04,519 --> 00:08:11,479
cycle you know build the city get some

00:08:07,429 --> 00:08:13,069
feedback do it again really fast so

00:08:11,479 --> 00:08:16,039
programmer slide by the way not

00:08:13,069 --> 00:08:17,389
marketing slide next we had to choose do

00:08:16,039 --> 00:08:19,300
we use an off-the-shelf tool for this or

00:08:17,389 --> 00:08:21,709
do we write our own there were plenty of

00:08:19,300 --> 00:08:23,360
like toy programming examples out there

00:08:21,709 --> 00:08:24,860
and some really interesting plugins and

00:08:23,360 --> 00:08:27,679
then there was sitting engine which

00:08:24,860 --> 00:08:29,059
really you know it's a tool designed

00:08:27,679 --> 00:08:31,189
specifically from the ground up for

00:08:29,059 --> 00:08:32,809
generating cities unfortunately our

00:08:31,189 --> 00:08:34,789
artists had evaluated it there was a

00:08:32,809 --> 00:08:36,919
couple reasons we didn't end up using it

00:08:34,789 --> 00:08:39,500
one was that it was really kind of

00:08:36,919 --> 00:08:41,269
centered a little more around urban

00:08:39,500 --> 00:08:45,290
planning and less around creating alien

00:08:41,269 --> 00:08:46,819
cities and the other one was one of my

00:08:45,290 --> 00:08:48,980
favorite aspects of city engine which is

00:08:46,819 --> 00:08:51,079
CG a shape grammar for those who don't

00:08:48,980 --> 00:08:51,980
know anything about it it's an amazing

00:08:51,079 --> 00:08:54,199
language that the

00:08:51,980 --> 00:08:56,660
engine team developed its a way to

00:08:54,199 --> 00:08:59,060
define parametric architecture through

00:08:56,660 --> 00:09:01,010
shape transformations but to an artist

00:08:59,060 --> 00:09:02,600
it's all textual and to an artist that's

00:09:01,010 --> 00:09:04,670
really daunting that's just not how they

00:09:02,600 --> 00:09:06,260
want to work so they asked us to deliver

00:09:04,670 --> 00:09:10,490
something that was really artist focused

00:09:06,260 --> 00:09:13,070
and had really creative inputs so you

00:09:10,490 --> 00:09:14,570
know billet buyer build is the sort of

00:09:13,070 --> 00:09:16,250
question that you face a lot

00:09:14,570 --> 00:09:19,310
we definitely have sort of a proudly not

00:09:16,250 --> 00:09:21,560
invented here attitude at MPC we try to

00:09:19,310 --> 00:09:23,000
use third-party software we can but

00:09:21,560 --> 00:09:25,310
there are times when it makes sense for

00:09:23,000 --> 00:09:28,550
us to write something new we wouldn't

00:09:25,310 --> 00:09:29,810
maya again for example so cally our

00:09:28,550 --> 00:09:31,100
destruction toolkit is a really good

00:09:29,810 --> 00:09:33,170
example of that and we want to SciTech

00:09:31,100 --> 00:09:35,540
Academy Award for that but in this case

00:09:33,170 --> 00:09:37,519
some of the advantages included the

00:09:35,540 --> 00:09:39,380
flexibility for us to be able to make

00:09:37,519 --> 00:09:41,600
the tool that exactly what the artist

00:09:39,380 --> 00:09:43,430
wanted the opportunity for it for us to

00:09:41,600 --> 00:09:47,360
integrate it with other aspects of our

00:09:43,430 --> 00:09:49,970
NBC pipeline and toolset and in general

00:09:47,360 --> 00:09:52,040
we consider ourselves to be one of our

00:09:49,970 --> 00:09:55,130
core strengths is to be procedural ISM

00:09:52,040 --> 00:09:56,959
and looking further ahead we said keep

00:09:55,130 --> 00:10:00,680
on getting more and more requests for cg

00:09:56,959 --> 00:10:01,730
cities we would like to perhaps spend

00:10:00,680 --> 00:10:03,079
the time you know these these cities

00:10:01,730 --> 00:10:05,060
keep getting more complex and on Plex

00:10:03,079 --> 00:10:07,190
maybe now's the time to spend investing

00:10:05,060 --> 00:10:09,740
a little bit in just starting the road

00:10:07,190 --> 00:10:12,680
towards developing our own toolkit for

00:10:09,740 --> 00:10:16,760
creating cities so I was brought under

00:10:12,680 --> 00:10:18,260
the project Seamus young has an

00:10:16,760 --> 00:10:20,569
excellent series of blog posts

00:10:18,260 --> 00:10:22,550
describing how to how to create a city

00:10:20,569 --> 00:10:24,529
completely procedurally without any

00:10:22,550 --> 00:10:26,000
artist input at all and I was just so

00:10:24,529 --> 00:10:27,920
taken by that that I decided to create

00:10:26,000 --> 00:10:30,410
my own version of it but then I decided

00:10:27,920 --> 00:10:33,769
I don't just go a little bit different

00:10:30,410 --> 00:10:35,779
and I started researching Road layout

00:10:33,769 --> 00:10:37,670
algorithms and I came across you of

00:10:35,779 --> 00:10:39,860
Parrish and Pascal Mueller's papers on

00:10:37,670 --> 00:10:41,209
City generation for where the past

00:10:39,860 --> 00:10:44,000
Camila was the guy who went on to create

00:10:41,209 --> 00:10:45,620
City Engine so I felt confident that I

00:10:44,000 --> 00:10:47,630
could at least you know come up with

00:10:45,620 --> 00:10:49,459
something that would work so what we

00:10:47,630 --> 00:10:51,829
came up with with it with was a tool

00:10:49,459 --> 00:10:55,310
called machi that's our logo up there

00:10:51,829 --> 00:10:58,610
and machi is a Japanese word it means

00:10:55,310 --> 00:11:01,130
town or street so it was seemed

00:10:58,610 --> 00:11:02,750
appropriate and suitably confusing and

00:11:01,130 --> 00:11:04,110
non-descriptive as is the fashion in

00:11:02,750 --> 00:11:07,500
application naming

00:11:04,110 --> 00:11:10,170
so this is a very early iteration of

00:11:07,500 --> 00:11:12,630
machi so this is what I want to show you

00:11:10,170 --> 00:11:15,120
here the bottom here this is running

00:11:12,630 --> 00:11:17,280
inside of fabric engines canvas node

00:11:15,120 --> 00:11:18,540
graph visual scripting tool each of

00:11:17,280 --> 00:11:22,050
those blocks on the bottom here

00:11:18,540 --> 00:11:24,300
essentially corresponds to a C++ chunk

00:11:22,050 --> 00:11:26,850
of code like a procedure and so by

00:11:24,300 --> 00:11:30,780
putting these bits together the artists

00:11:26,850 --> 00:11:32,460
can can build a city we ended up not

00:11:30,780 --> 00:11:34,110
exposing that to the artists in the end

00:11:32,460 --> 00:11:37,080
what they wanted was something a little

00:11:34,110 --> 00:11:41,520
bit more dynamic so we we got rid of the

00:11:37,080 --> 00:11:45,510
node graph and we created this I like to

00:11:41,520 --> 00:11:47,250
call it a task focused UI basically so

00:11:45,510 --> 00:11:49,740
you know is it it's a traditional UI

00:11:47,250 --> 00:11:50,790
really we're gonna get back to this

00:11:49,740 --> 00:11:51,900
question of whether that was a good

00:11:50,790 --> 00:11:53,280
decision or not but the main point to

00:11:51,900 --> 00:11:54,900
understand is at this point is that

00:11:53,280 --> 00:11:56,700
we're still using fabric engine actually

00:11:54,900 --> 00:12:00,660
here we've just hidden the node UI and

00:11:56,700 --> 00:12:02,280
we've added our own our own UI into it

00:12:00,660 --> 00:12:03,750
and we're using fabric for the actual

00:12:02,280 --> 00:12:06,840
rendering but all the core stuff

00:12:03,750 --> 00:12:15,450
underneath the C++ so there's quite a

00:12:06,840 --> 00:12:17,760
few layers here so I should we basically

00:12:15,450 --> 00:12:20,790
have a Python layer at the very top this

00:12:17,760 --> 00:12:22,140
is really a different way of doing by

00:12:20,790 --> 00:12:22,770
wrapping everything in fabric engine

00:12:22,140 --> 00:12:23,940
we're doing this a little bit

00:12:22,770 --> 00:12:26,640
differently than how we typically do

00:12:23,940 --> 00:12:28,920
things that NPC typically we we take C++

00:12:26,640 --> 00:12:32,580
and we wrap it in Python here we're

00:12:28,920 --> 00:12:34,200
wrapping things in KL wrapping our c++

00:12:32,580 --> 00:12:36,120
and kale and then we're wrapping that

00:12:34,200 --> 00:12:37,680
inside of canvas and then having python

00:12:36,120 --> 00:12:39,810
control it so this was a bit of an

00:12:37,680 --> 00:12:42,480
experiment at NBC we haven't done this

00:12:39,810 --> 00:12:43,770
before this is just sort of a you know

00:12:42,480 --> 00:12:46,860
we're trying to figure out if this is a

00:12:43,770 --> 00:12:48,270
good way to make applications anyway

00:12:46,860 --> 00:12:51,480
yeah we have Python layer which controls

00:12:48,270 --> 00:12:53,340
the UI we have that layer in red there's

00:12:51,480 --> 00:12:55,950
fabric engine camera script it's just as

00:12:53,340 --> 00:12:57,420
a very small node based layer which

00:12:55,950 --> 00:13:00,900
hides glue is a lot of the bits together

00:12:57,420 --> 00:13:02,400
we have two layers that were written in

00:13:00,900 --> 00:13:04,060
kale one is just really to communicate

00:13:02,400 --> 00:13:06,220
with the

00:13:04,060 --> 00:13:09,220
the viewport and do things like

00:13:06,220 --> 00:13:12,009
selection and manipulation and rendering

00:13:09,220 --> 00:13:14,800
and then we have MBC machi which was a

00:13:12,009 --> 00:13:18,790
thin wrapper in KL around the C++ code

00:13:14,800 --> 00:13:20,910
and all the really good stuff was in C++

00:13:18,790 --> 00:13:22,839
where we have things like road layout

00:13:20,910 --> 00:13:24,879
trying to figure out where blocks are

00:13:22,839 --> 00:13:26,589
for each of those roads and then

00:13:24,879 --> 00:13:28,120
breaking those blocks into lots and then

00:13:26,589 --> 00:13:30,069
putting the buildings on pedal lots of

00:13:28,120 --> 00:13:32,290
course all this required a lot of

00:13:30,069 --> 00:13:34,060
bindings between language languages and

00:13:32,290 --> 00:13:36,699
this was at times a point of frustration

00:13:34,060 --> 00:13:38,199
for us but the rationalization was that

00:13:36,699 --> 00:13:41,290
if we could figure out a way to get

00:13:38,199 --> 00:13:43,509
these machi libraries rapped in KL any

00:13:41,290 --> 00:13:46,480
play any application that supported

00:13:43,509 --> 00:13:48,730
fabric engine we could then drop it into

00:13:46,480 --> 00:13:50,980
it and have the functionality to create

00:13:48,730 --> 00:13:52,509
cities regardless of the application now

00:13:50,980 --> 00:13:54,790
to begin with we we just we just use the

00:13:52,509 --> 00:13:56,500
native canvas editor as our sort of

00:13:54,790 --> 00:13:57,430
hosting application but the intention

00:13:56,500 --> 00:13:59,560
was that we would use it in other

00:13:57,430 --> 00:14:02,680
applications like Maya and Houdini later

00:13:59,560 --> 00:14:04,120
on so back to the original problem how

00:14:02,680 --> 00:14:05,649
do you lay out a city procedurally but

00:14:04,120 --> 00:14:07,089
still keep it artist friendly

00:14:05,649 --> 00:14:09,220
I think the first thing to keep in mind

00:14:07,089 --> 00:14:11,620
is automation is not necessarily an

00:14:09,220 --> 00:14:13,870
either/or proposition it can be a

00:14:11,620 --> 00:14:15,459
continuum so you know artists would love

00:14:13,870 --> 00:14:17,889
to be able to press button and it's done

00:14:15,459 --> 00:14:19,389
there's my city but you know typically

00:14:17,889 --> 00:14:20,730
they're gonna want to edit things and

00:14:19,389 --> 00:14:22,779
the directors gonna want to make changes

00:14:20,730 --> 00:14:26,439
so we have to be in the mindset of

00:14:22,779 --> 00:14:28,870
allowing changes at any point really so

00:14:26,439 --> 00:14:30,639
to this end one of the keep our nation

00:14:28,870 --> 00:14:33,100
in small controllable chunks and

00:14:30,639 --> 00:14:36,250
allowing the artist to take control at

00:14:33,100 --> 00:14:39,279
any point and make it make edits to the

00:14:36,250 --> 00:14:40,360
data as they needed it so this problem

00:14:39,279 --> 00:14:41,459
is this becomes a little bit of a

00:14:40,360 --> 00:14:43,959
liability

00:14:41,459 --> 00:14:45,309
well we typically happen in a show is

00:14:43,959 --> 00:14:48,309
you would lay out your high-level

00:14:45,309 --> 00:14:49,839
streets and then you create your

00:14:48,309 --> 00:14:51,879
buildings and then artists would say

00:14:49,839 --> 00:14:53,199
okay that building wants to be maybe

00:14:51,879 --> 00:14:54,970
I'll change a number of floors on it for

00:14:53,199 --> 00:14:56,439
example then the director comes along

00:14:54,970 --> 00:14:58,149
and says okay the city's not gonna be

00:14:56,439 --> 00:14:59,290
circular it's gonna be square so go back

00:14:58,149 --> 00:15:01,029
to the beginning layout the streets

00:14:59,290 --> 00:15:02,769
again create the buildings again what

00:15:01,029 --> 00:15:04,779
happens to that one building that you

00:15:02,769 --> 00:15:06,129
just edited now in many cases it's fine

00:15:04,779 --> 00:15:08,620
you can just throw it away and start

00:15:06,129 --> 00:15:10,440
again but in certain cases it isn't you

00:15:08,620 --> 00:15:13,589
actually want to keep that building

00:15:10,440 --> 00:15:14,850
so in our case we tried a few different

00:15:13,589 --> 00:15:16,649
things I think the simplest and most

00:15:14,850 --> 00:15:19,319
helpful approach for us was just to

00:15:16,649 --> 00:15:20,850
allow artists to lock down data and he

00:15:19,319 --> 00:15:22,740
at any point you could say I don't want

00:15:20,850 --> 00:15:24,839
to change this building or this road and

00:15:22,740 --> 00:15:26,970
then what we would do is we would clear

00:15:24,839 --> 00:15:28,860
out everything else regenerate the city

00:15:26,970 --> 00:15:31,199
and use that data that was locked down

00:15:28,860 --> 00:15:33,029
as seen data to build off of so we'd

00:15:31,199 --> 00:15:35,040
actually you know these roads are locked

00:15:33,029 --> 00:15:36,920
down build roads off of them and we

00:15:35,040 --> 00:15:38,970
would go from there

00:15:36,920 --> 00:15:41,639
so I want to talk a little bit about the

00:15:38,970 --> 00:15:44,670
15-second demo that we came up with so

00:15:41,639 --> 00:15:47,160
at a big studio artists can be skeptical

00:15:44,670 --> 00:15:50,730
about embracing the new technology they

00:15:47,160 --> 00:15:52,259
love their tools so even if they asked

00:15:50,730 --> 00:15:54,209
for you to develop a new tool you still

00:15:52,259 --> 00:15:56,279
have to convince them to use it so our

00:15:54,209 --> 00:15:58,079
our goal was to try and make it as

00:15:56,279 --> 00:15:59,699
simple as possible something like five

00:15:58,079 --> 00:16:01,319
clicks to actually create a city and

00:15:59,699 --> 00:16:03,600
instead of a 15 minute tutorial

00:16:01,319 --> 00:16:04,949
something like a 15-second tutorial so

00:16:03,600 --> 00:16:07,709
we wanted to show them the power as

00:16:04,949 --> 00:16:10,079
quickly as possible and let them explore

00:16:07,709 --> 00:16:12,779
it later so we set up a bunch of

00:16:10,079 --> 00:16:14,880
defaults and just kept in mind as we

00:16:12,779 --> 00:16:16,529
were designing the UI keep it simple so

00:16:14,880 --> 00:16:19,949
this was a huge success to getting

00:16:16,529 --> 00:16:20,970
people excited about the project so I'm

00:16:19,949 --> 00:16:23,009
gonna talk about an interesting artistic

00:16:20,970 --> 00:16:24,180
problem we faced along the way one of

00:16:23,009 --> 00:16:26,220
the first problems you ran into it was a

00:16:24,180 --> 00:16:28,529
mismatch between lot and building sided

00:16:26,220 --> 00:16:30,720
sizes so when we originally wrote machi

00:16:28,529 --> 00:16:33,269
we used a very simple algorithm for

00:16:30,720 --> 00:16:36,240
creating lots from blocks so this is a

00:16:33,269 --> 00:16:37,889
these are for roads basically the

00:16:36,240 --> 00:16:41,399
standard algorithm is take the longest

00:16:37,889 --> 00:16:43,529
edge divide the thing in half and keep

00:16:41,399 --> 00:16:46,019
doing that with a little bit of random

00:16:43,529 --> 00:16:48,509
variation until the the lots are the

00:16:46,019 --> 00:16:51,300
size that you want the end result is

00:16:48,509 --> 00:16:53,160
very evenly sized Lots this actually is

00:16:51,300 --> 00:16:55,829
kind of how it works typically in in a

00:16:53,160 --> 00:16:58,019
western city North America you'd often

00:16:55,829 --> 00:17:00,480
divide against the shortest edge first

00:16:58,019 --> 00:17:03,149
so you can get like a back alley but a

00:17:00,480 --> 00:17:06,390
European city you'll see that play out

00:17:03,149 --> 00:17:07,740
all the time problem is that we find for

00:17:06,390 --> 00:17:11,880
many cities it really wasn't gonna work

00:17:07,740 --> 00:17:13,230
for alien are there buildings well this

00:17:11,880 --> 00:17:16,049
works great when your buildings are all

00:17:13,230 --> 00:17:17,760
the same size but they wanted to and

00:17:16,049 --> 00:17:19,289
they wanted to author their own

00:17:17,760 --> 00:17:22,199
buildings and they did not want them

00:17:19,289 --> 00:17:23,929
scaled so we had a wide variety of

00:17:22,199 --> 00:17:26,449
things that we had to place into the

00:17:23,929 --> 00:17:28,999
city and an early test with sort of even

00:17:26,449 --> 00:17:31,220
just you know a simple you know slight

00:17:28,999 --> 00:17:33,649
changes in size was showing us we needed

00:17:31,220 --> 00:17:35,450
to do something about making the city

00:17:33,649 --> 00:17:37,309
more dense they really wanted it to be a

00:17:35,450 --> 00:17:40,999
tight tight feeling City so our first

00:17:37,309 --> 00:17:42,649
iteration on that it was to basically

00:17:40,999 --> 00:17:44,389
try and get a little bit smarter and to

00:17:42,649 --> 00:17:47,450
try and think about using more of a

00:17:44,389 --> 00:17:49,610
texture acting algorithm we wanted to

00:17:47,450 --> 00:17:51,049
decide here the here are the buildings

00:17:49,610 --> 00:17:53,470
that were going to put on the lot fur on

00:17:51,049 --> 00:17:56,269
the block first and then figure out

00:17:53,470 --> 00:18:00,559
figure divided up so that those things

00:17:56,269 --> 00:18:01,759
fit and this worked kind of it wasn't

00:18:00,559 --> 00:18:03,499
perfect it was still a lot of feedback

00:18:01,759 --> 00:18:05,960
that it was still too open they wanted a

00:18:03,499 --> 00:18:07,159
cramped tight feeling City they didn't

00:18:05,960 --> 00:18:08,600
want the center in two areas in the

00:18:07,159 --> 00:18:10,970
middle of blocks that was fine but they

00:18:08,600 --> 00:18:12,110
wanted it really really dense so we went

00:18:10,970 --> 00:18:15,320
back to the drawing board and we came up

00:18:12,110 --> 00:18:16,970
with this idea for we just threw out all

00:18:15,320 --> 00:18:19,309
of the work we've done and said let's

00:18:16,970 --> 00:18:22,159
just do this dart throwing algorithm so

00:18:19,309 --> 00:18:24,440
let's just try and find a random place

00:18:22,159 --> 00:18:26,509
on the block put a building down if it

00:18:24,440 --> 00:18:27,889
fits great move it up closer to the road

00:18:26,509 --> 00:18:29,119
and just keep doing this over and over

00:18:27,889 --> 00:18:29,749
and over and - they can't fit any more

00:18:29,119 --> 00:18:34,490
buildings

00:18:29,749 --> 00:18:36,019
it was embarrassingly stupid but it was

00:18:34,490 --> 00:18:37,460
exactly what they wanted so that was

00:18:36,019 --> 00:18:38,809
great there are some downsides to it I

00:18:37,460 --> 00:18:41,659
won't go into what kind of too much time

00:18:38,809 --> 00:18:43,309
to go into it ends up favoring smaller

00:18:41,659 --> 00:18:45,169
buildings is really the problem but we

00:18:43,309 --> 00:18:48,679
had other code that could be could use

00:18:45,169 --> 00:18:51,799
to compensate for that here's an early

00:18:48,679 --> 00:18:53,210
untextured test render showing this sort

00:18:51,799 --> 00:18:56,600
of nice level of density that we

00:18:53,210 --> 00:19:00,080
achieved another feature we kind of

00:18:56,600 --> 00:19:02,179
added in towards the end was we have a

00:19:00,080 --> 00:19:04,850
scatter system that we use you've seen

00:19:02,179 --> 00:19:07,009
it for in Jungle Book basically it's

00:19:04,850 --> 00:19:08,389
just a system of putting tens of

00:19:07,009 --> 00:19:09,710
thousands or hundreds of thousands of

00:19:08,389 --> 00:19:11,179
things down in the world really quickly

00:19:09,710 --> 00:19:12,619
but when they tried to use it on the

00:19:11,179 --> 00:19:14,360
city they realized they were getting

00:19:12,619 --> 00:19:15,559
trees in the middle of buildings and so

00:19:14,360 --> 00:19:17,539
forth so we built this sort of city

00:19:15,559 --> 00:19:19,519
aware scatter system where you could

00:19:17,539 --> 00:19:20,570
drop down trees for example and it

00:19:19,519 --> 00:19:21,590
wouldn't be in the middle of a building

00:19:20,570 --> 00:19:24,110
it wouldn't be in the middle of a road

00:19:21,590 --> 00:19:25,429
or you know eventually the city had to

00:19:24,110 --> 00:19:27,049
be a little bit decayed so they wanted

00:19:25,429 --> 00:19:28,730
to be able to drop down chunks of

00:19:27,049 --> 00:19:31,580
concrete that were within two to three

00:19:28,730 --> 00:19:33,019
meters of a building or pieces of shrubs

00:19:31,580 --> 00:19:34,519
that were only on the tops of buildings

00:19:33,019 --> 00:19:34,970
and we could support all of that sort of

00:19:34,519 --> 00:19:36,769
stuff

00:19:34,970 --> 00:19:37,760
and you can see some of the interesting

00:19:36,769 --> 00:19:39,530
variation on road

00:19:37,760 --> 00:19:41,720
got here this is this is just some test

00:19:39,530 --> 00:19:43,160
day that wasn't really final data at all

00:19:41,720 --> 00:19:44,270
but I've got straight road circular

00:19:43,160 --> 00:19:48,860
roads up in the left there's some

00:19:44,270 --> 00:19:52,760
organic roads so a couple final shots in

00:19:48,860 --> 00:19:54,710
the film the city was used in I started

00:19:52,760 --> 00:19:56,600
close to I think about 400 shots in the

00:19:54,710 --> 00:19:58,460
film there was only 800 shots that we

00:19:56,600 --> 00:20:01,700
worked on so it was used in almost you

00:19:58,460 --> 00:20:04,220
know half of the shots that we did most

00:20:01,700 --> 00:20:05,990
of those are more background shots this

00:20:04,220 --> 00:20:08,780
was one of the few shots where it was

00:20:05,990 --> 00:20:11,210
actually sort of showing it in all its

00:20:08,780 --> 00:20:12,440
glory I think the only thing there is

00:20:11,210 --> 00:20:14,630
some real stuff here I believe those

00:20:12,440 --> 00:20:16,490
mountains at least some of them might be

00:20:14,630 --> 00:20:19,850
from New Zealand but otherwise it's all

00:20:16,490 --> 00:20:21,260
of course see there's a same shot you

00:20:19,850 --> 00:20:24,500
saw earlier but the final version of it

00:20:21,260 --> 00:20:26,510
a lot of clouds here you're scaring the

00:20:24,500 --> 00:20:27,950
city artists hate that a little some

00:20:26,510 --> 00:20:29,540
artists hate it the comp artists love

00:20:27,950 --> 00:20:30,980
putting clouds in but the guys who get

00:20:29,540 --> 00:20:34,400
their stuff covered up they hate that

00:20:30,980 --> 00:20:36,560
yeah we had a lot of back-and-forth

00:20:34,400 --> 00:20:38,810
discussions we defiantly met with the

00:20:36,560 --> 00:20:40,240
the artists and the CG supervisor twice

00:20:38,810 --> 00:20:42,560
a week at the early start of the project

00:20:40,240 --> 00:20:44,300
trying to prioritizing very quickly

00:20:42,560 --> 00:20:46,940
about what their needs were it was kind

00:20:44,300 --> 00:20:48,380
of like agile on steroids but uh who

00:20:46,940 --> 00:20:50,930
worked them only problem with that is

00:20:48,380 --> 00:20:53,090
that we ended up we get we brought on

00:20:50,930 --> 00:20:55,940
some design get really a lot of our

00:20:53,090 --> 00:20:57,470
focus was very much towards alien

00:20:55,940 --> 00:21:01,190
covenant and when we go back and revisit

00:20:57,470 --> 00:21:03,110
this for the next series of films we're

00:21:01,190 --> 00:21:06,080
gonna want to sort of take out some of

00:21:03,110 --> 00:21:08,840
the alien isms in the software or they

00:21:06,080 --> 00:21:10,400
get a bit more generic so I mentioned

00:21:08,840 --> 00:21:12,080
it's in a background of a lot of shots

00:21:10,400 --> 00:21:13,280
this is a great example of it being in

00:21:12,080 --> 00:21:14,660
the background there's a really

00:21:13,280 --> 00:21:16,640
beautiful city shot here look at that

00:21:14,660 --> 00:21:18,260
thing wait but then they went and just

00:21:16,640 --> 00:21:20,270
messed it up by putting like a big alien

00:21:18,260 --> 00:21:23,800
and a spaceship in front of it

00:21:20,270 --> 00:21:27,430
okay good money to see that city so

00:21:23,800 --> 00:21:27,430
anyway it's nice

00:21:28,450 --> 00:21:33,830
so yeah moving forward this was the

00:21:31,790 --> 00:21:34,940
first film used Macchi on but there's

00:21:33,830 --> 00:21:36,410
quite a few films coming down the

00:21:34,940 --> 00:21:38,300
pipeline and as I mentioned we have some

00:21:36,410 --> 00:21:40,190
design debt that we have to address so a

00:21:38,300 --> 00:21:41,900
few key key areas and want to focus on

00:21:40,190 --> 00:21:44,060
the first is getting back to I talked

00:21:41,900 --> 00:21:47,120
about earlier this question of no base

00:21:44,060 --> 00:21:49,790
versus task-focused you I I am a big fan

00:21:47,120 --> 00:21:50,900
of node based programming and we do that

00:21:49,790 --> 00:21:53,960
a lot at MPC we

00:21:50,900 --> 00:21:56,780
Kitana we have Houdini and nuke all of

00:21:53,960 --> 00:21:58,760
which are node-based packages that we

00:21:56,780 --> 00:22:00,559
use and it's great because you can put

00:21:58,760 --> 00:22:02,150
things together in ways that you may not

00:22:00,559 --> 00:22:03,350
have envisioned originally and you can

00:22:02,150 --> 00:22:07,010
come up with interesting and unique

00:22:03,350 --> 00:22:08,840
results but ultimately node-based you

00:22:07,010 --> 00:22:11,150
eyes are a way of asking your artists to

00:22:08,840 --> 00:22:12,710
become programmers and that works for

00:22:11,150 --> 00:22:14,420
many artists doesn't necessarily work

00:22:12,710 --> 00:22:16,220
for all artists so I'm still a little

00:22:14,420 --> 00:22:18,350
bit on the fence about how to approach

00:22:16,220 --> 00:22:20,390
this but I'm definitely leaning towards

00:22:18,350 --> 00:22:22,250
revisiting the known interface and maybe

00:22:20,390 --> 00:22:23,809
trying to blend the two approaches a bit

00:22:22,250 --> 00:22:27,010
and by authoring custom you eyes that

00:22:23,809 --> 00:22:29,390
control nodes and exposing those nodes

00:22:27,010 --> 00:22:32,870
procedural buildings is something that

00:22:29,390 --> 00:22:34,760
we really didn't do too much with most

00:22:32,870 --> 00:22:36,800
of the buildings that we had on a lien

00:22:34,760 --> 00:22:37,970
were actually just authored directly by

00:22:36,800 --> 00:22:39,800
the artist they didn't want to do

00:22:37,970 --> 00:22:41,300
anything procedural with them they just

00:22:39,800 --> 00:22:44,750
wanted to give give them to us but we

00:22:41,300 --> 00:22:46,850
did have this algorithm built in Tamachi

00:22:44,750 --> 00:22:48,679
where you could specify the base the

00:22:46,850 --> 00:22:50,270
roof and a bunch of floors in between

00:22:48,679 --> 00:22:51,920
and have random variations for them and

00:22:50,270 --> 00:22:56,360
then we would build up buildings out of

00:22:51,920 --> 00:22:58,309
that we'd like to go further with this I

00:22:56,360 --> 00:22:59,840
think it adds it's a great way to add

00:22:58,309 --> 00:23:01,820
random variation to a city

00:22:59,840 --> 00:23:03,470
CJ's shape grammar from a city engine is

00:23:01,820 --> 00:23:04,490
the perfect example of how this sort of

00:23:03,470 --> 00:23:08,000
thing works where you can parameterize

00:23:04,490 --> 00:23:09,260
an entire city really nicely but it's

00:23:08,000 --> 00:23:10,490
definitely still too complicated for the

00:23:09,260 --> 00:23:13,309
average artist so we're looking at ways

00:23:10,490 --> 00:23:15,620
that we can you know have the artist

00:23:13,309 --> 00:23:19,940
generate chunks of geometry and then

00:23:15,620 --> 00:23:22,700
define using C++ code wrapped with KL in

00:23:19,940 --> 00:23:25,340
in interesting ways to maybe make it

00:23:22,700 --> 00:23:26,840
simple enough for the artists to define

00:23:25,340 --> 00:23:29,000
rules for how to put those pieces

00:23:26,840 --> 00:23:30,170
together and expose parameters that then

00:23:29,000 --> 00:23:33,760
we can proceed to really modify

00:23:30,170 --> 00:23:36,710
throughout the city to add variation so

00:23:33,760 --> 00:23:38,900
finally integration with other apps as I

00:23:36,710 --> 00:23:41,059
mentioned we used fabric canvas as our

00:23:38,900 --> 00:23:43,460
hosting application for this but we

00:23:41,059 --> 00:23:44,809
really want to expand out to hosting it

00:23:43,460 --> 00:23:46,880
inside of other applications like Maya

00:23:44,809 --> 00:23:48,950
Houdini and maybe even some game engines

00:23:46,880 --> 00:23:51,800
like unreal so maybe we can do something

00:23:48,950 --> 00:23:54,679
like lay out the streets and buildings

00:23:51,800 --> 00:23:57,410
with machi and then inside of Houdini we

00:23:54,679 --> 00:23:58,910
could take the geometry or the roads

00:23:57,410 --> 00:24:01,340
that were generated and create actual

00:23:58,910 --> 00:24:03,260
geo Street geometry and then we can

00:24:01,340 --> 00:24:04,430
maybe take it into unreal and preview it

00:24:03,260 --> 00:24:06,440
in real time so that we can

00:24:04,430 --> 00:24:08,540
figure out the right shots that we

00:24:06,440 --> 00:24:11,930
wanted to use in the final film with

00:24:08,540 --> 00:24:14,540
high quality lighting and texturing so

00:24:11,930 --> 00:24:16,070
that's mostly it for me I hope I gave

00:24:14,540 --> 00:24:18,440
you some insight into software

00:24:16,070 --> 00:24:38,090
development for visual effects I think

00:24:18,440 --> 00:24:41,150
we have some time for some questions how

00:24:38,090 --> 00:24:44,030
did the concept artists feel about the

00:24:41,150 --> 00:24:46,160
tool and how was the the process that

00:24:44,030 --> 00:24:48,590
worked with that because when I worked

00:24:46,160 --> 00:24:50,030
in games and such like this the shots

00:24:48,590 --> 00:24:52,160
and the games look very similar to what

00:24:50,030 --> 00:24:55,340
the concept artists produce yeah you

00:24:52,160 --> 00:24:57,770
know in this case the concept art came

00:24:55,340 --> 00:24:59,540
at us really early and we didn't create

00:24:57,770 --> 00:25:03,130
an in-house it was actually created by

00:24:59,540 --> 00:25:05,240
the studio so I guess Ridley Scott had

00:25:03,130 --> 00:25:07,730
signed off but er there's an early stage

00:25:05,240 --> 00:25:09,410
but then he still knew that he wanted it

00:25:07,730 --> 00:25:12,440
wrong iterate on it quite a bit after

00:25:09,410 --> 00:25:13,820
that so we didn't yet to talk to the

00:25:12,440 --> 00:25:16,160
concept artists I don't really know what

00:25:13,820 --> 00:25:18,710
their response was to it but ultimately

00:25:16,160 --> 00:25:20,929
we still did fulfill the general vision

00:25:18,710 --> 00:25:22,100
there it's just that our final city

00:25:20,929 --> 00:25:26,390
ended up being quite a bit more dense

00:25:22,100 --> 00:25:28,280
than what the original concept Archer hi

00:25:26,390 --> 00:25:30,020
um how much time do you guys have from

00:25:28,280 --> 00:25:31,750
the moments you tossed with pacing the

00:25:30,020 --> 00:25:34,750
tool to handing it over to the authors

00:25:31,750 --> 00:25:38,480
well that's a good question

00:25:34,750 --> 00:25:40,970
we spent a lot of them the work that I'd

00:25:38,480 --> 00:25:44,090
done I I guess I should say it was about

00:25:40,970 --> 00:25:45,650
two or three months of messing about and

00:25:44,090 --> 00:25:47,660
trying to figure things around and then

00:25:45,650 --> 00:25:51,860
we started to work with the production

00:25:47,660 --> 00:25:53,929
team like in lockstep with them so that

00:25:51,860 --> 00:25:56,900
they would this is when this sort of -

00:25:53,929 --> 00:25:59,120
twice a week cycle of meeting with them

00:25:56,900 --> 00:26:01,010
and and and tuning so kind of like

00:25:59,120 --> 00:26:01,580
basically maybe three actually maybe

00:26:01,010 --> 00:26:03,740
four months

00:26:01,580 --> 00:26:05,570
first and then after that it was in

00:26:03,740 --> 00:26:07,340
maybe another six months of development

00:26:05,570 --> 00:26:10,090
in conjunction with the actual

00:26:07,340 --> 00:26:10,090
production team

00:26:16,670 --> 00:26:19,820
so if you're building an internal tool

00:26:18,500 --> 00:26:21,950
one of the things that like I've

00:26:19,820 --> 00:26:24,380
struggled with is we get a lot of

00:26:21,950 --> 00:26:25,820
feedback and it's a struggle to sort of

00:26:24,380 --> 00:26:27,560
incorporate the feedback versus

00:26:25,820 --> 00:26:29,090
prioritizing what we're working on I'm

00:26:27,560 --> 00:26:30,410
assuming that a lot of the times when

00:26:29,090 --> 00:26:32,450
you guys gave this the artist the artist

00:26:30,410 --> 00:26:33,980
come back and they want this and nitpick

00:26:32,450 --> 00:26:35,960
on this and this and this how did you

00:26:33,980 --> 00:26:37,640
guys like prioritize what was most

00:26:35,960 --> 00:26:40,400
important to focus on in your

00:26:37,640 --> 00:26:41,600
development and versus fixing the things

00:26:40,400 --> 00:26:43,040
that the artist wanted which would give

00:26:41,600 --> 00:26:44,930
him that immediate feedback yeah

00:26:43,040 --> 00:26:46,130
absolutely I mean that's what that's

00:26:44,930 --> 00:26:48,260
what I talked a little bit about with

00:26:46,130 --> 00:26:49,880
when I comment on Taj Mahal on steroids

00:26:48,260 --> 00:26:51,860
that was our you know twice a week

00:26:49,880 --> 00:26:53,300
meetings they would come at us twice a

00:26:51,860 --> 00:26:55,130
week tell us what they didn't like and

00:26:53,300 --> 00:26:56,930
then we would work with them in those

00:26:55,130 --> 00:26:58,640
meetings directly with our stakeholders

00:26:56,930 --> 00:27:01,430
to prioritize what was going to happen

00:26:58,640 --> 00:27:03,500
next and generally we found them to be

00:27:01,430 --> 00:27:05,630
quite receptive to the idea this is

00:27:03,500 --> 00:27:07,700
gonna take a month you know we're gonna

00:27:05,630 --> 00:27:09,650
work on this next month right now we're

00:27:07,700 --> 00:27:14,360
gonna focus on this as long as you have

00:27:09,650 --> 00:27:15,890
you know key ideas for well on this

00:27:14,360 --> 00:27:17,810
sprint we're gonna focus on this so next

00:27:15,890 --> 00:27:20,150
spring we're gonna focus on that and you

00:27:17,810 --> 00:27:21,920
can make steady progress generally your

00:27:20,150 --> 00:27:23,780
stakeholders are gonna be fairly okay

00:27:21,920 --> 00:27:25,070
with that I find unless something's

00:27:23,780 --> 00:27:27,800
really critical obviously if there's a

00:27:25,070 --> 00:27:29,600
just a bug and they need it tomorrow and

00:27:27,800 --> 00:27:31,900
it's stopping their work then you fix it

00:27:29,600 --> 00:27:31,900
right away

00:27:40,029 --> 00:27:44,090
so I was curiously you were talking

00:27:42,110 --> 00:27:45,559
about the artists wanting to lock a

00:27:44,090 --> 00:27:48,139
building down and then you were gonna

00:27:45,559 --> 00:27:49,759
regenerate using that as a seed yeah I

00:27:48,139 --> 00:27:52,460
wonder if you give some more details on

00:27:49,759 --> 00:27:54,679
that like would that be this C

00:27:52,460 --> 00:27:56,659
generation for your roads or were they

00:27:54,679 --> 00:27:58,460
I would imagine at some point they want

00:27:56,659 --> 00:27:59,929
to lock down a whole bunch of things and

00:27:58,460 --> 00:28:01,159
then you've got all these constraints

00:27:59,929 --> 00:28:03,409
and how do you deal with that yeah I

00:28:01,159 --> 00:28:05,509
mean mostly its Road generation that's

00:28:03,409 --> 00:28:07,899
the the interesting aspect of it I mean

00:28:05,509 --> 00:28:11,059
a building itself isn't relief well

00:28:07,899 --> 00:28:12,739
roads we'll talk about roads first the

00:28:11,059 --> 00:28:17,230
roads use some sort of it's kind of a

00:28:12,739 --> 00:28:19,909
modified L system to layout the roads

00:28:17,230 --> 00:28:21,440
and basically if somebody locked down a

00:28:19,909 --> 00:28:22,570
road we would just use that as a

00:28:21,440 --> 00:28:24,980
starting point and we would just

00:28:22,570 --> 00:28:26,539
generate new roads starting with the

00:28:24,980 --> 00:28:29,509
endpoints of those roads that they lock

00:28:26,539 --> 00:28:31,789
down if a building was locked down

00:28:29,509 --> 00:28:33,080
typically hopefully in the end it was

00:28:31,789 --> 00:28:34,580
still in the middle if you lock down the

00:28:33,080 --> 00:28:35,629
roads around it and it's still going to

00:28:34,580 --> 00:28:36,590
be in the middle of the block so that's

00:28:35,629 --> 00:28:38,929
gonna be okay

00:28:36,590 --> 00:28:40,039
if you hadn't locked down the roads then

00:28:38,929 --> 00:28:42,559
it could end up in the middle of a

00:28:40,039 --> 00:28:45,340
street later on which would be bad but

00:28:42,559 --> 00:28:48,799
for the most part it wasn't a problem

00:28:45,340 --> 00:28:50,179
and generally we basically said with our

00:28:48,799 --> 00:28:52,820
it was really easy to lock down a

00:28:50,179 --> 00:28:55,100
building in a block because you just say

00:28:52,820 --> 00:28:57,440
well this block is gonna have these

00:28:55,100 --> 00:28:59,509
buildings that are locked and then they

00:28:57,440 --> 00:29:01,190
that feeds into your dark throwing

00:28:59,509 --> 00:29:02,499
algorithm and just keep on pumping more

00:29:01,190 --> 00:29:05,029
buildings in there until it fits really

00:29:02,499 --> 00:29:06,799
but ultimately it was the cool part was

00:29:05,029 --> 00:29:08,649
that with the city lay out the the road

00:29:06,799 --> 00:29:11,299
layout bit of it where we actually just

00:29:08,649 --> 00:29:17,179
like used it as a scene point for for

00:29:11,299 --> 00:29:19,940
the new stuff oh just curious what

00:29:17,179 --> 00:29:24,259
Python GUI library you guys were using

00:29:19,940 --> 00:29:28,059
for that tool the the UI is all QT yeah

00:29:24,259 --> 00:29:28,059
it's actually mostly it's Python QT oh

00:29:29,769 --> 00:29:33,850
that's it thank you all for coming

00:29:34,090 --> 00:29:40,090

YouTube URL: https://www.youtube.com/watch?v=F9tGa-hbmTU


