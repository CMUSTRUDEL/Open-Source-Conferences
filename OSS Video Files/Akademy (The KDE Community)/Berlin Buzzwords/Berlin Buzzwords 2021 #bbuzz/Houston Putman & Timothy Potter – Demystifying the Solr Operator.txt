Title: Houston Putman & Timothy Potter – Demystifying the Solr Operator
Publication date: 2021-07-01
Playlist: Berlin Buzzwords 2021 #bbuzz
Description: 
	Are you or your company migrating services to Kubernetes? Do you want to run everything there, even Solr? If so you might have a lot of questions on how to proceed. Houston and Tim intend to help clear things up a bit. 

This is a conversation about managing Solr on Kubernetes. Houston and Tim will be discussing the newly donated Apache Solr Operator, and how it fits into your Solr Management workflow on Kube. Specifically what aspects it has control over, and which aspects it does not. Covering all possible migration scenarios would be impossible, so the focus will be on explaining the architecture principles of the Solr Operator and defining the roles of each piece of the system.  

Hopefully, everyone will leave the discussion confident that they can answer the following questions:

- Who is in charge of what?
- Kubernetes?
- Solr Operator?
- Solr?
- Me???
- What happens when one part of the system goes down?
- Why should I, or should I not, use the Solr Operator?

Speaker: 
Houston Putman – https://2021.berlinbuzzwords.de/member/houston-putman-0
Timothy Potter – https://2021.berlinbuzzwords.de/member/timothy-potter
Captions: 
	00:00:08,080 --> 00:00:12,240
yeah thank you

00:00:09,040 --> 00:00:15,440
for joining our discussion today we hope

00:00:12,240 --> 00:00:18,640
it'll be a good one and sort of to keep

00:00:15,440 --> 00:00:20,400
just the introductions brief houston and

00:00:18,640 --> 00:00:23,840
i work together at apple

00:00:20,400 --> 00:00:26,880
sort of where we advise various teams

00:00:23,840 --> 00:00:29,679
on deploying and scaling solar

00:00:26,880 --> 00:00:30,800
on kubernetes we're also both pmc

00:00:29,679 --> 00:00:33,200
members

00:00:30,800 --> 00:00:34,640
and try to actively contribute to the

00:00:33,200 --> 00:00:37,600
project

00:00:34,640 --> 00:00:39,600
and uh houston is actually the original

00:00:37,600 --> 00:00:42,000
creator of the solar operator

00:00:39,600 --> 00:00:43,440
so with that houston uh could you you

00:00:42,000 --> 00:00:44,960
know give us a brief introduction of

00:00:43,440 --> 00:00:45,440
what the operator is and the the

00:00:44,960 --> 00:00:48,800
problems

00:00:45,440 --> 00:00:52,480
is trying to solve yeah of course

00:00:48,800 --> 00:00:54,079
um so just to give a brief overview um

00:00:52,480 --> 00:00:56,000
you can look at the link at the bottom

00:00:54,079 --> 00:00:58,640
to see one of my previous

00:00:56,000 --> 00:00:59,920
uh conference presentations about kind

00:00:58,640 --> 00:01:00,719
of the introduction of the solar

00:00:59,920 --> 00:01:03,039
operator

00:01:00,719 --> 00:01:05,680
but just for lunch little introduction

00:01:03,039 --> 00:01:08,720
for those who might not be as familiar

00:01:05,680 --> 00:01:10,159
solar operator is basically a i mean if

00:01:08,720 --> 00:01:10,799
you've heard of kubrick's operators

00:01:10,159 --> 00:01:13,600
before

00:01:10,799 --> 00:01:14,799
it is a management tool for managing

00:01:13,600 --> 00:01:17,200
solar resources

00:01:14,799 --> 00:01:18,240
on kubernetes so this includes multiple

00:01:17,200 --> 00:01:20,479
types of researches

00:01:18,240 --> 00:01:22,240
like the solar cloud the solar

00:01:20,479 --> 00:01:25,040
prometheus exporter

00:01:22,240 --> 00:01:26,400
and for now solar backups uh and

00:01:25,040 --> 00:01:28,560
basically

00:01:26,400 --> 00:01:30,159
without any details what it does is

00:01:28,560 --> 00:01:32,640
abstracts the way

00:01:30,159 --> 00:01:34,880
uh extracts away the need for the user

00:01:32,640 --> 00:01:36,799
to have a lot of kubernetes knowledge

00:01:34,880 --> 00:01:38,479
and so a lot of the knowledge that is

00:01:36,799 --> 00:01:40,960
kind of necessary for running solar and

00:01:38,479 --> 00:01:44,159
kubernetes is built into the operator

00:01:40,960 --> 00:01:47,920
and we're able to provide a very easy

00:01:44,159 --> 00:01:49,439
solar kind of um dsl in front of it so

00:01:47,920 --> 00:01:50,960
that you can say i want a solar with

00:01:49,439 --> 00:01:52,399
these type of properties

00:01:50,960 --> 00:01:56,000
give it to kubernetes and the solar

00:01:52,399 --> 00:01:59,119
operator will go and manage that for you

00:01:56,000 --> 00:02:00,159
okay great um so let's dive into the

00:01:59,119 --> 00:02:03,200
discussion

00:02:00,159 --> 00:02:05,119
uh and you know

00:02:03,200 --> 00:02:07,040
before we get too far into the weeds on

00:02:05,119 --> 00:02:08,959
the on the solar operator

00:02:07,040 --> 00:02:10,399
you know i i think our our listeners

00:02:08,959 --> 00:02:12,319
here would like to just

00:02:10,399 --> 00:02:14,720
understand you know why might somebody

00:02:12,319 --> 00:02:17,040
want to run solar on kubernetes

00:02:14,720 --> 00:02:17,840
i mean that's a really good question so

00:02:17,040 --> 00:02:19,760
obviously

00:02:17,840 --> 00:02:20,879
i'm sure there's no one here that hasn't

00:02:19,760 --> 00:02:22,959
heard about

00:02:20,879 --> 00:02:24,319
their organization or an organization

00:02:22,959 --> 00:02:26,560
that they know about that is making a

00:02:24,319 --> 00:02:30,000
massive switch to kubernetes

00:02:26,560 --> 00:02:32,720
uh be it on like gke eks

00:02:30,000 --> 00:02:33,599
azure any of these type of platforms and

00:02:32,720 --> 00:02:36,000
so

00:02:33,599 --> 00:02:37,280
i guess i'm not going to answer why

00:02:36,000 --> 00:02:38,560
someone would move their entire

00:02:37,280 --> 00:02:42,480
organization there but

00:02:38,560 --> 00:02:44,800
for solar at least um it's a pretty

00:02:42,480 --> 00:02:45,840
good selling point it's like you want to

00:02:44,800 --> 00:02:47,760
be able to

00:02:45,840 --> 00:02:49,040
deploy solar like you deploy everything

00:02:47,760 --> 00:02:50,800
else your company

00:02:49,040 --> 00:02:52,400
so that your sres or the people who are

00:02:50,800 --> 00:02:53,680
actually managing these deployments

00:02:52,400 --> 00:02:56,800
don't need

00:02:53,680 --> 00:02:58,879
really special really kind of

00:02:56,800 --> 00:03:00,640
deep knowledge of how solar works the

00:02:58,879 --> 00:03:01,920
household deployments work

00:03:00,640 --> 00:03:04,159
and so if we're able to kind of

00:03:01,920 --> 00:03:06,560
standardize things and

00:03:04,159 --> 00:03:08,640
kubernetes is just a general way of

00:03:06,560 --> 00:03:09,360
standardizing deployments if we're able

00:03:08,640 --> 00:03:11,200
to kind of

00:03:09,360 --> 00:03:12,560
allow you to deploy solar in the

00:03:11,200 --> 00:03:15,680
standardized way

00:03:12,560 --> 00:03:19,680
it makes it a lot easier for you to

00:03:15,680 --> 00:03:21,440
kind of transfer transfer the um

00:03:19,680 --> 00:03:23,040
knowledge to these people on how to run

00:03:21,440 --> 00:03:25,440
these things and so

00:03:23,040 --> 00:03:27,519
um what you'll be able to have like one

00:03:25,440 --> 00:03:31,040
team running all of your things which is

00:03:27,519 --> 00:03:32,400
kind of nice and also uh it allows you

00:03:31,040 --> 00:03:34,560
to

00:03:32,400 --> 00:03:35,519
separate out your concerns and so one of

00:03:34,560 --> 00:03:37,440
the reasons

00:03:35,519 --> 00:03:39,040
why people and we'll get into this more

00:03:37,440 --> 00:03:40,319
later but

00:03:39,040 --> 00:03:42,560
one of the reasons why people run

00:03:40,319 --> 00:03:44,959
massive solar clouds is that

00:03:42,560 --> 00:03:46,000
it's kind of messy to run all these

00:03:44,959 --> 00:03:49,040
little tiny solar

00:03:46,000 --> 00:03:52,080
clouds independent of each other and so

00:03:49,040 --> 00:03:53,920
on kubernetes we're allow we're able to

00:03:52,080 --> 00:03:56,799
kind of scale up

00:03:53,920 --> 00:03:59,280
these small solar clouds not in terms of

00:03:56,799 --> 00:04:01,920
vertical scaling but horizontal scaling

00:03:59,280 --> 00:04:03,120
and so it's a lot easier to manage many

00:04:01,920 --> 00:04:04,959
solar clouds

00:04:03,120 --> 00:04:06,319
and so you're able to kind of separate

00:04:04,959 --> 00:04:09,280
your concerns

00:04:06,319 --> 00:04:10,480
and have smaller more independent solar

00:04:09,280 --> 00:04:12,400
clouds that are

00:04:10,480 --> 00:04:14,080
safer because they're not impacted by

00:04:12,400 --> 00:04:15,840
let's say independent

00:04:14,080 --> 00:04:17,280
queries to two different collections on

00:04:15,840 --> 00:04:18,880
the same cloud

00:04:17,280 --> 00:04:20,720
um but i know you have a lot of

00:04:18,880 --> 00:04:23,040
experience in this tim and so

00:04:20,720 --> 00:04:24,240
like why have you seen organizations

00:04:23,040 --> 00:04:26,000
moving in this direction

00:04:24,240 --> 00:04:28,080
yeah yeah for sure and you know you

00:04:26,000 --> 00:04:29,840
neglected to to mention um

00:04:28,080 --> 00:04:31,680
you know being buzzword compliant i

00:04:29,840 --> 00:04:33,280
think that i think that's a big one

00:04:31,680 --> 00:04:35,919
and then you know it's also good for the

00:04:33,280 --> 00:04:38,560
resume but uh no in all seriousness

00:04:35,919 --> 00:04:39,280
um the one that really resonates with me

00:04:38,560 --> 00:04:41,840
um

00:04:39,280 --> 00:04:42,639
first off is kind of this this concept

00:04:41,840 --> 00:04:45,280
of you know

00:04:42,639 --> 00:04:45,759
eliminating snowflakes in the data

00:04:45,280 --> 00:04:47,600
center

00:04:45,759 --> 00:04:49,759
i think we probably all throughout our

00:04:47,600 --> 00:04:51,280
careers have have had at least one

00:04:49,759 --> 00:04:54,000
experience with

00:04:51,280 --> 00:04:54,800
you know a jar patch not getting applied

00:04:54,000 --> 00:04:56,400
correctly

00:04:54,800 --> 00:04:58,080
or one of the machines not getting the

00:04:56,400 --> 00:05:01,039
same configuration

00:04:58,080 --> 00:05:02,800
um and i think just with solar being a

00:05:01,039 --> 00:05:04,800
complex distributed system

00:05:02,800 --> 00:05:07,039
uh kubernetes actually helps with that

00:05:04,800 --> 00:05:08,800
because you know every pod is running

00:05:07,039 --> 00:05:11,280
the same exact docker image

00:05:08,800 --> 00:05:11,840
with the same config you know and and

00:05:11,280 --> 00:05:14,560
that's

00:05:11,840 --> 00:05:14,560
that's kind of um

00:05:14,960 --> 00:05:20,160
an important thing for uh small clusters

00:05:18,400 --> 00:05:21,039
but as you scale these things up that

00:05:20,160 --> 00:05:22,880
becomes

00:05:21,039 --> 00:05:24,960
absolutely critical right and the other

00:05:22,880 --> 00:05:26,479
piece i like is that your developers and

00:05:24,960 --> 00:05:28,800
your testers and your

00:05:26,479 --> 00:05:30,160
uat environments they all run the same

00:05:28,800 --> 00:05:33,039
software which is great

00:05:30,160 --> 00:05:34,639
right um and then the other piece for me

00:05:33,039 --> 00:05:38,000
about running on kubernetes

00:05:34,639 --> 00:05:41,360
uh solar on kubernetes is um

00:05:38,000 --> 00:05:43,600
it gives sort of a platform

00:05:41,360 --> 00:05:44,479
for us as solar developers and i think

00:05:43,600 --> 00:05:47,759
we'll see this more

00:05:44,479 --> 00:05:51,039
in the talk um to actually build uh

00:05:47,759 --> 00:05:52,880
and implement distributed system kind of

00:05:51,039 --> 00:05:54,720
solutions on a platform

00:05:52,880 --> 00:05:56,960
built around best practices so that's

00:05:54,720 --> 00:05:59,039
kind of the other piece is that like

00:05:56,960 --> 00:06:00,960
we building solar and supporting and

00:05:59,039 --> 00:06:02,639
running solar we don't have to reinvent

00:06:00,960 --> 00:06:04,400
the wheel on every kind of thing right

00:06:02,639 --> 00:06:05,919
like kubernetes has

00:06:04,400 --> 00:06:07,600
has come up with a lot of these concepts

00:06:05,919 --> 00:06:10,560
and that's like you know uh

00:06:07,600 --> 00:06:12,080
ingresses and services and um service

00:06:10,560 --> 00:06:12,479
discovery and all those sorts of things

00:06:12,080 --> 00:06:14,720
so

00:06:12,479 --> 00:06:16,080
so that's kind of the the the things

00:06:14,720 --> 00:06:19,360
that attracted me

00:06:16,080 --> 00:06:21,600
uh to solar on kubernetes

00:06:19,360 --> 00:06:23,199
um okay so switching gears a little bit

00:06:21,600 --> 00:06:25,759
let's assume

00:06:23,199 --> 00:06:27,520
um people are at least interested in in

00:06:25,759 --> 00:06:30,880
trying solar on kubernetes

00:06:27,520 --> 00:06:31,520
um you know other than the the solar

00:06:30,880 --> 00:06:34,160
operator

00:06:31,520 --> 00:06:35,840
you can you can just you know use a helm

00:06:34,160 --> 00:06:37,919
chart i actually wrote a helm chart for

00:06:35,840 --> 00:06:40,240
solar a long time ago and

00:06:37,919 --> 00:06:41,680
wrote like a 20 page blog about it but

00:06:40,240 --> 00:06:43,840
you know tell us a little bit houston

00:06:41,680 --> 00:06:46,000
about you know why use a solar operator

00:06:43,840 --> 00:06:47,919
over something like a like a helm chart

00:06:46,000 --> 00:06:48,800
or some other type of config management

00:06:47,919 --> 00:06:49,840
thing

00:06:48,800 --> 00:06:52,319
yeah i mean that's a really good

00:06:49,840 --> 00:06:54,240
question so if you look on like um

00:06:52,319 --> 00:06:56,400
artifact hub or like any of those kind

00:06:54,240 --> 00:06:56,960
of public helm trap repos you'll see a

00:06:56,400 --> 00:06:59,840
couple

00:06:56,960 --> 00:07:01,199
that are like popular and used for solar

00:06:59,840 --> 00:07:05,120
and in general they're not

00:07:01,199 --> 00:07:07,759
bad solutions and so they're really good

00:07:05,120 --> 00:07:09,680
for if you want to be able to customize

00:07:07,759 --> 00:07:11,199
your deployments more so for the solar

00:07:09,680 --> 00:07:14,639
operator it's a

00:07:11,199 --> 00:07:14,960
kind of a set config like you have a crd

00:07:14,639 --> 00:07:17,199
that

00:07:14,960 --> 00:07:18,960
it has a certain certain fields are

00:07:17,199 --> 00:07:20,560
accepted and if you want to make changes

00:07:18,960 --> 00:07:21,919
to that it's pretty hard you have to go

00:07:20,560 --> 00:07:24,560
modify the go program

00:07:21,919 --> 00:07:25,919
make a new docker image modify your crds

00:07:24,560 --> 00:07:27,840
at that point you're

00:07:25,919 --> 00:07:29,280
not up to date with like the official

00:07:27,840 --> 00:07:31,280
apache release anymore

00:07:29,280 --> 00:07:33,360
which makes it kind of hard to go back

00:07:31,280 --> 00:07:35,120
um and so if you want to just be able to

00:07:33,360 --> 00:07:36,720
like add little fields that aren't

00:07:35,120 --> 00:07:38,560
supported by the solar operator

00:07:36,720 --> 00:07:40,080
it's a lot easier to do that in a custom

00:07:38,560 --> 00:07:41,759
helm chart and so you'll just

00:07:40,080 --> 00:07:43,680
take the helm chart that's available

00:07:41,759 --> 00:07:44,080
somewhere else add the fields that you

00:07:43,680 --> 00:07:46,319
want

00:07:44,080 --> 00:07:47,360
and then go and deploy it's much more

00:07:46,319 --> 00:07:49,680
straightforward

00:07:47,360 --> 00:07:50,639
however what the solar operator does buy

00:07:49,680 --> 00:07:53,599
you

00:07:50,639 --> 00:07:54,560
is safety and so with that we're talking

00:07:53,599 --> 00:07:56,720
about

00:07:54,560 --> 00:07:58,240
safe and efficient rolling restarts so

00:07:56,720 --> 00:08:00,720
when you're using the helm chart

00:07:58,240 --> 00:08:02,240
you're i would hope running uh solo

00:08:00,720 --> 00:08:04,800
through stateful sets

00:08:02,240 --> 00:08:06,560
and so the default staple set like

00:08:04,800 --> 00:08:08,479
rolling restart logic whenever you

00:08:06,560 --> 00:08:11,440
change a pod template

00:08:08,479 --> 00:08:14,000
it works well for a lot of applications

00:08:11,440 --> 00:08:16,240
it does not work that well for solar

00:08:14,000 --> 00:08:17,199
uh in particular there's a lot of things

00:08:16,240 --> 00:08:20,319
that you can get into

00:08:17,199 --> 00:08:22,960
like the healthcare the liveness check

00:08:20,319 --> 00:08:23,360
not taking into account that things are

00:08:22,960 --> 00:08:24,879
still

00:08:23,360 --> 00:08:26,879
were cut like rep because they're still

00:08:24,879 --> 00:08:29,039
recovering on a note so you restart

00:08:26,879 --> 00:08:31,120
another one which takes up the leader

00:08:29,039 --> 00:08:32,719
and also if you have like let's say a

00:08:31,120 --> 00:08:34,159
large solar cluster you want to be able

00:08:32,719 --> 00:08:36,080
to restart

00:08:34,159 --> 00:08:38,240
independent nodes like nodes that don't

00:08:36,080 --> 00:08:39,680
have replicas of the same charts on them

00:08:38,240 --> 00:08:42,320
in parallel and that's something that

00:08:39,680 --> 00:08:43,839
the staple sets definitely cannot do

00:08:42,320 --> 00:08:45,519
and so when you're running the solar

00:08:43,839 --> 00:08:48,320
operator this operator has the ability

00:08:45,519 --> 00:08:51,120
to take over that rolling restart logic

00:08:48,320 --> 00:08:52,880
and really use the business logic that

00:08:51,120 --> 00:08:54,880
we know about solar cloud

00:08:52,880 --> 00:08:56,800
in order to make the most safe and

00:08:54,880 --> 00:08:59,120
efficient rolling restarts

00:08:56,800 --> 00:09:00,480
um it's also able to do other cool

00:08:59,120 --> 00:09:02,399
things because it

00:09:00,480 --> 00:09:03,680
has much more information about the live

00:09:02,399 --> 00:09:05,600
kubernetes cluster

00:09:03,680 --> 00:09:07,279
because it i mean it's living inside the

00:09:05,600 --> 00:09:10,560
kubernetes cluster and it has

00:09:07,279 --> 00:09:12,560
watches with the uh api server and so

00:09:10,560 --> 00:09:13,760
we're able to do really cool things like

00:09:12,560 --> 00:09:16,560
if you're running

00:09:13,760 --> 00:09:18,399
um solar on kubernetes like solar with

00:09:16,560 --> 00:09:20,399
ingresses on kubernetes

00:09:18,399 --> 00:09:22,480
um you don't really want internode

00:09:20,399 --> 00:09:24,399
traffic to go all the way out to your

00:09:22,480 --> 00:09:26,320
external dns to your

00:09:24,399 --> 00:09:27,920
ingress controller and back to the solar

00:09:26,320 --> 00:09:29,600
node for every single request

00:09:27,920 --> 00:09:32,640
between solar nodes you want to be able

00:09:29,600 --> 00:09:33,200
to say i know what the ip address of the

00:09:32,640 --> 00:09:35,519
service

00:09:33,200 --> 00:09:36,560
that fronts the solar node is i'm going

00:09:35,519 --> 00:09:38,720
to go inject

00:09:36,560 --> 00:09:39,839
into each of my solar pods in the fcd

00:09:38,720 --> 00:09:43,040
files i mean

00:09:39,839 --> 00:09:46,320
etsy hosts files that this

00:09:43,040 --> 00:09:48,399
ip like this ingress host maps to this

00:09:46,320 --> 00:09:50,320
service ip address and so we can do

00:09:48,399 --> 00:09:52,399
complete node to node traffic even

00:09:50,320 --> 00:09:54,240
though the individual nodes

00:09:52,399 --> 00:09:56,160
have ingresses fronting them that's

00:09:54,240 --> 00:09:57,120
something that you very much cannot do

00:09:56,160 --> 00:10:01,040
in helm

00:09:57,120 --> 00:10:02,320
same with the solar cloud and so

00:10:01,040 --> 00:10:04,160
there's kind of a give and take there

00:10:02,320 --> 00:10:05,200
you get really cool features using solar

00:10:04,160 --> 00:10:09,040
cloud but it's less

00:10:05,200 --> 00:10:10,640
flexible for your unique use case um

00:10:09,040 --> 00:10:12,480
there's another thing there where you

00:10:10,640 --> 00:10:14,160
might be thinking well

00:10:12,480 --> 00:10:15,760
the solar operator is another thing to

00:10:14,160 --> 00:10:18,079
manage for myself

00:10:15,760 --> 00:10:18,959
a helm is just like a static thing i run

00:10:18,079 --> 00:10:20,720
it and then it's

00:10:18,959 --> 00:10:22,240
there so what happens if like the solar

00:10:20,720 --> 00:10:24,399
upper goes down

00:10:22,240 --> 00:10:26,560
while i'm running my solar clouds that

00:10:24,399 --> 00:10:27,760
is actually not as big of a deal as you

00:10:26,560 --> 00:10:30,880
might think it is

00:10:27,760 --> 00:10:32,320
so basically solar operator does do a

00:10:30,880 --> 00:10:33,040
lot of the same thing that's home does

00:10:32,320 --> 00:10:34,800
it templates

00:10:33,040 --> 00:10:36,480
out the resources that it tells

00:10:34,800 --> 00:10:38,880
kubernetes to run these are the stable

00:10:36,480 --> 00:10:39,839
sets the config maps ingresses services

00:10:38,880 --> 00:10:42,160
all those

00:10:39,839 --> 00:10:43,360
and so if the solar operator goes down

00:10:42,160 --> 00:10:45,279
and stops running

00:10:43,360 --> 00:10:46,880
those things still exist in the

00:10:45,279 --> 00:10:49,279
kubernetes cluster

00:10:46,880 --> 00:10:50,880
and so your solar cloud won't go down

00:10:49,279 --> 00:10:53,519
it's just because the solar operator is

00:10:50,880 --> 00:10:54,880
in charge of doing rolling restarts

00:10:53,519 --> 00:10:56,959
if you want to change something about

00:10:54,880 --> 00:10:58,800
your solar cloud it won't actually

00:10:56,959 --> 00:11:00,480
update and restart until the solar

00:10:58,800 --> 00:11:03,279
operator starts again

00:11:00,480 --> 00:11:04,320
and so it is an important thing to make

00:11:03,279 --> 00:11:07,519
sure it's running

00:11:04,320 --> 00:11:08,560
but it's not like it is um a part of

00:11:07,519 --> 00:11:11,760
your critical

00:11:08,560 --> 00:11:13,680
application path right and so

00:11:11,760 --> 00:11:15,279
yeah i mean you've written an elm chart

00:11:13,680 --> 00:11:16,320
before you've worked on the solar

00:11:15,279 --> 00:11:19,360
operator

00:11:16,320 --> 00:11:22,640
uh i clearly you have

00:11:19,360 --> 00:11:23,600
some insight as to uh what organizations

00:11:22,640 --> 00:11:26,480
would want

00:11:23,600 --> 00:11:27,760
yeah and you know just to kind of

00:11:26,480 --> 00:11:28,000
elaborate a little bit on your last

00:11:27,760 --> 00:11:31,040
point

00:11:28,000 --> 00:11:33,680
also like the operator gets deployed uh

00:11:31,040 --> 00:11:34,640
two kubernetes just as a deployment

00:11:33,680 --> 00:11:37,120
typically one

00:11:34,640 --> 00:11:39,040
pod is fine um what i like about it is

00:11:37,120 --> 00:11:40,560
it comes up in like less than a second

00:11:39,040 --> 00:11:44,480
you know it's a lightweight

00:11:40,560 --> 00:11:46,880
uh go go service um and so

00:11:44,480 --> 00:11:48,720
very efficient um i you know it's not

00:11:46,880 --> 00:11:50,399
like this cumbersome agent or something

00:11:48,720 --> 00:11:51,839
that that you have to worry about

00:11:50,399 --> 00:11:53,760
you know and the other thing for me with

00:11:51,839 --> 00:11:56,320
the operator is

00:11:53,760 --> 00:11:57,200
a lot of the configuration to get right

00:11:56,320 --> 00:11:59,519
with solar

00:11:57,200 --> 00:12:01,160
ends up being kind of tedious right and

00:11:59,519 --> 00:12:02,720
it lends itself to being

00:12:01,160 --> 00:12:05,600
programmatically

00:12:02,720 --> 00:12:07,519
built versus trying to kind of temple uh

00:12:05,600 --> 00:12:08,399
templatize that into a helm chart or

00:12:07,519 --> 00:12:09,920
whatever

00:12:08,399 --> 00:12:12,720
um you know if you haven't worked with

00:12:09,920 --> 00:12:14,399
go templating it it has its nuances

00:12:12,720 --> 00:12:16,560
um but you know a lot of just the the

00:12:14,399 --> 00:12:18,320
tedious config that solar needs to get

00:12:16,560 --> 00:12:21,360
right at scale like is

00:12:18,320 --> 00:12:22,240
is really much better done you know in

00:12:21,360 --> 00:12:23,760
code

00:12:22,240 --> 00:12:25,760
at least i found that kind of like when

00:12:23,760 --> 00:12:28,240
i implemented the

00:12:25,760 --> 00:12:29,440
like the support for wiring up tls certs

00:12:28,240 --> 00:12:30,800
and things like that and the other piece

00:12:29,440 --> 00:12:35,200
and you touched on this houston

00:12:30,800 --> 00:12:35,839
um is uh the operator does receive

00:12:35,200 --> 00:12:38,959
events

00:12:35,839 --> 00:12:40,399
from kubernetes but it also can like

00:12:38,959 --> 00:12:41,760
look at the state of things like it

00:12:40,399 --> 00:12:44,959
looks at the state

00:12:41,760 --> 00:12:48,560
of the um uh and i'm using the word

00:12:44,959 --> 00:12:51,600
looks at loosely here but say you know

00:12:48,560 --> 00:12:53,440
your tls cert updates

00:12:51,600 --> 00:12:54,959
right and that's stored in a coupe

00:12:53,440 --> 00:12:57,040
secret the

00:12:54,959 --> 00:12:58,959
uh the operator has a way to basically

00:12:57,040 --> 00:13:00,320
say oh our search expired are about to

00:12:58,959 --> 00:13:01,680
expire they renewed

00:13:00,320 --> 00:13:03,440
so we're going to go ahead and do do

00:13:01,680 --> 00:13:05,200
this rolling restore that

00:13:03,440 --> 00:13:06,800
that houston talked about so i think all

00:13:05,200 --> 00:13:09,120
of those things just really make it

00:13:06,800 --> 00:13:09,839
a lot more flexible and powerful

00:13:09,120 --> 00:13:14,560
solution

00:13:09,839 --> 00:13:17,920
um for for using the operator

00:13:14,560 --> 00:13:21,839
um so you know now i have my solar cloud

00:13:17,920 --> 00:13:24,399
config the operator's managing it

00:13:21,839 --> 00:13:25,760
um next question that comes in my mind

00:13:24,399 --> 00:13:27,760
really houston is kind of like

00:13:25,760 --> 00:13:29,440
well does this operator help solar kind

00:13:27,760 --> 00:13:32,399
of run faster

00:13:29,440 --> 00:13:33,760
or any of those kind of things uh i mean

00:13:32,399 --> 00:13:35,120
this is definitely one of the first

00:13:33,760 --> 00:13:37,279
questions everyone has

00:13:35,120 --> 00:13:39,760
when they look at the different options

00:13:37,279 --> 00:13:41,760
of earning solar and kubernetes and so

00:13:39,760 --> 00:13:43,360
i just want to get this out there like

00:13:41,760 --> 00:13:45,040
squash any misconceptions

00:13:43,360 --> 00:13:46,560
no matter how you run solar on

00:13:45,040 --> 00:13:48,720
kubernetes

00:13:46,560 --> 00:13:50,000
it's not really going to impact how

00:13:48,720 --> 00:13:52,000
solar runs

00:13:50,000 --> 00:13:53,600
nearly as much as how you're running

00:13:52,000 --> 00:13:56,880
kubernetes itself

00:13:53,600 --> 00:13:59,279
so this includes what like servers

00:13:56,880 --> 00:14:02,560
you're running your kubernetes nodes on

00:13:59,279 --> 00:14:04,320
how full your cluster is like is the

00:14:02,560 --> 00:14:05,920
scheduling really hard because there's

00:14:04,320 --> 00:14:08,399
nowhere to put pods

00:14:05,920 --> 00:14:10,480
um what kind of resources are you giving

00:14:08,399 --> 00:14:12,079
to each individual pod

00:14:10,480 --> 00:14:13,519
um and so these are the things that are

00:14:12,079 --> 00:14:14,399
actually going to kind of affect the

00:14:13,519 --> 00:14:17,600
runtime it's

00:14:14,399 --> 00:14:20,000
much like what resources to the server

00:14:17,600 --> 00:14:23,440
that you're running bare metal solar on

00:14:20,000 --> 00:14:25,440
um and so the solar operator does

00:14:23,440 --> 00:14:26,800
do some like kind of improvements that

00:14:25,440 --> 00:14:28,800
we talked about earlier

00:14:26,800 --> 00:14:29,920
which is like faster internode

00:14:28,800 --> 00:14:31,120
communication when you're using

00:14:29,920 --> 00:14:34,480
ingresses

00:14:31,120 --> 00:14:35,360
it allows you to uh do like the more

00:14:34,480 --> 00:14:38,560
efficient and

00:14:35,360 --> 00:14:41,120
faster uh rolling restarts which are

00:14:38,560 --> 00:14:41,920
probably gonna lead to less cluster and

00:14:41,120 --> 00:14:44,079
stability

00:14:41,920 --> 00:14:45,519
because the leaders already started last

00:14:44,079 --> 00:14:48,320
um but in general

00:14:45,519 --> 00:14:49,279
most of the like runtime effect is going

00:14:48,320 --> 00:14:51,199
to be

00:14:49,279 --> 00:14:53,279
how you're actually running on your

00:14:51,199 --> 00:14:55,279
kubernetes cluster not

00:14:53,279 --> 00:14:56,480
what you are using to manage your solar

00:14:55,279 --> 00:14:59,600
pods

00:14:56,480 --> 00:15:01,680
right and unfortunately uh you know this

00:14:59,600 --> 00:15:03,839
the solar operator hasn't been able to

00:15:01,680 --> 00:15:06,320
solve you know this age-old problem of

00:15:03,839 --> 00:15:09,440
you know cluster sizing and

00:15:06,320 --> 00:15:11,279
correctly assigning resource requests

00:15:09,440 --> 00:15:12,639
and limits so i mean i i just want to

00:15:11,279 --> 00:15:16,880
emphasize

00:15:12,639 --> 00:15:18,560
um with people on the call that you know

00:15:16,880 --> 00:15:20,240
kubernetes and the operator actually

00:15:18,560 --> 00:15:20,639
help you manage these clusters as well

00:15:20,240 --> 00:15:24,079
but

00:15:20,639 --> 00:15:26,160
the hard work of really you know

00:15:24,079 --> 00:15:27,600
sizing the cluster correctly and getting

00:15:26,160 --> 00:15:31,519
that you know that that still

00:15:27,600 --> 00:15:34,399
falls on uh you know a planning but also

00:15:31,519 --> 00:15:36,079
uh testing and and running load tests

00:15:34,399 --> 00:15:38,079
with a realistic load that kind of

00:15:36,079 --> 00:15:39,759
simulates your your production traffic

00:15:38,079 --> 00:15:41,440
i will say you know all this

00:15:39,759 --> 00:15:43,519
infrastructure actually helps set

00:15:41,440 --> 00:15:44,639
all that up faster and then if you do

00:15:43,519 --> 00:15:47,920
need to

00:15:44,639 --> 00:15:50,320
say you know increase memory

00:15:47,920 --> 00:15:52,240
available to each pod or or cpu or

00:15:50,320 --> 00:15:53,120
whatever of course this makes it a lot

00:15:52,240 --> 00:15:56,320
easier but the

00:15:53,120 --> 00:15:59,759
the actual work of sizing is still there

00:15:56,320 --> 00:16:02,800
that's good to know um okay so

00:15:59,759 --> 00:16:03,600
as we start to on our solar operator

00:16:02,800 --> 00:16:04,639
journey

00:16:03,600 --> 00:16:06,880
you know what are some of the best

00:16:04,639 --> 00:16:08,880
practices that you've seen houston uh

00:16:06,880 --> 00:16:12,160
for running the solar operator and just

00:16:08,880 --> 00:16:14,480
you know that i guess best practices

00:16:12,160 --> 00:16:15,600
um that the solar operator helps support

00:16:14,480 --> 00:16:17,600
as well

00:16:15,600 --> 00:16:18,800
yeah and i think this is a great

00:16:17,600 --> 00:16:20,160
question to start with about the slow

00:16:18,800 --> 00:16:21,759
operator so basically

00:16:20,160 --> 00:16:23,279
i mean kubernetes is all about best

00:16:21,759 --> 00:16:26,000
practices right we're trying to like

00:16:23,279 --> 00:16:27,279
establish best practices for running

00:16:26,000 --> 00:16:29,680
cloud applications

00:16:27,279 --> 00:16:31,279
in a platform so that makes sense with

00:16:29,680 --> 00:16:34,320
the solar operator as well

00:16:31,279 --> 00:16:36,000
and so two things that the software

00:16:34,320 --> 00:16:37,440
really i mean there's two things that

00:16:36,000 --> 00:16:38,320
we've talked about already which is

00:16:37,440 --> 00:16:40,959
basically

00:16:38,320 --> 00:16:42,800
it really helps you manage like smaller

00:16:40,959 --> 00:16:43,600
solar clouds with more isolated

00:16:42,800 --> 00:16:46,800
collections

00:16:43,600 --> 00:16:49,279
because i know it's a real big pain i've

00:16:46,800 --> 00:16:51,120
run solar on bare metal on thousands of

00:16:49,279 --> 00:16:54,720
machines and it is not fun

00:16:51,120 --> 00:16:57,920
managing that it is a lot easier

00:16:54,720 --> 00:16:59,120
to manage like a smaller number of solar

00:16:57,920 --> 00:17:02,480
clouds that are giant

00:16:59,120 --> 00:17:05,520
because there's less things to look at

00:17:02,480 --> 00:17:06,959
um but with the solar operator you have

00:17:05,520 --> 00:17:11,360
this like

00:17:06,959 --> 00:17:12,959
solar crd so cloud crd that lets you

00:17:11,360 --> 00:17:14,959
spin up a solar cloud and then you can

00:17:12,959 --> 00:17:16,000
monitor it via kubernetes just to make

00:17:14,959 --> 00:17:17,600
sure that it's up and running

00:17:16,000 --> 00:17:19,199
you always know it's up and running i

00:17:17,600 --> 00:17:20,400
mean it might not be healthy but you

00:17:19,199 --> 00:17:22,720
know it's up and running

00:17:20,400 --> 00:17:25,839
and you can like point your uh

00:17:22,720 --> 00:17:28,319
prometheus you can point your

00:17:25,839 --> 00:17:29,200
log monitoring there and it's pretty

00:17:28,319 --> 00:17:31,360
easy

00:17:29,200 --> 00:17:32,559
to manage a lot of independent solar

00:17:31,360 --> 00:17:35,440
clouds at that point

00:17:32,559 --> 00:17:37,520
and that allows you to have smaller like

00:17:35,440 --> 00:17:39,280
smaller clouds or one

00:17:37,520 --> 00:17:40,960
gonna perform better than one large

00:17:39,280 --> 00:17:41,600
solar cloud with tons of collections in

00:17:40,960 --> 00:17:43,679
them

00:17:41,600 --> 00:17:45,440
and it also lets you separate concerns

00:17:43,679 --> 00:17:47,440
between collections so

00:17:45,440 --> 00:17:48,960
like one collection's load if like

00:17:47,440 --> 00:17:49,919
they're getting really bad queries and

00:17:48,960 --> 00:17:53,440
going oh

00:17:49,919 --> 00:17:58,080
like getting lots of oms or like bad gc

00:17:53,440 --> 00:18:00,000
uh like collection you're able to

00:17:58,080 --> 00:18:01,360
like separate that concern so the

00:18:00,000 --> 00:18:04,720
collection that is not

00:18:01,360 --> 00:18:07,679
performing badly doesn't have their uh

00:18:04,720 --> 00:18:08,480
like isn't impacted by that uh it also

00:18:07,679 --> 00:18:11,039
allows your

00:18:08,480 --> 00:18:12,880
like ops team to run solar as

00:18:11,039 --> 00:18:13,200
infrastructure as code so you're able to

00:18:12,880 --> 00:18:15,440
like

00:18:13,200 --> 00:18:17,440
let's say you have 10 solar clouds let's

00:18:15,440 --> 00:18:19,760
take our 10 solar crds

00:18:17,440 --> 00:18:20,559
commit them to a github repo and we have

00:18:19,760 --> 00:18:23,919
a way to

00:18:20,559 --> 00:18:26,880
just re-deploy our cluster

00:18:23,919 --> 00:18:27,520
at any time without any differences at

00:18:26,880 --> 00:18:29,760
all

00:18:27,520 --> 00:18:30,640
and so just kind of like it allows you

00:18:29,760 --> 00:18:32,400
to really

00:18:30,640 --> 00:18:33,919
focus in on that infrastructure's code

00:18:32,400 --> 00:18:35,280
and run solar as a part of that as well

00:18:33,919 --> 00:18:36,160
which is a completely new thing for

00:18:35,280 --> 00:18:39,120
solar

00:18:36,160 --> 00:18:40,160
yeah and then als okay no sorry go ahead

00:18:39,120 --> 00:18:43,679
i was gonna say that

00:18:40,160 --> 00:18:46,799
like i mean i know it's a pain to use uh

00:18:43,679 --> 00:18:48,559
like solar security like tls uh

00:18:46,799 --> 00:18:50,000
solar authentication all that kind of

00:18:48,559 --> 00:18:53,520
stuff but

00:18:50,000 --> 00:18:56,720
recently uh tim has written into

00:18:53,520 --> 00:18:57,840
like the solar operator very easy setup

00:18:56,720 --> 00:19:01,600
of both tls

00:18:57,840 --> 00:19:03,760
and uh basic off so that it's basically

00:19:01,600 --> 00:19:05,600
i mean it's very much recommended but

00:19:03,760 --> 00:19:08,880
it's like almost just

00:19:05,600 --> 00:19:11,039
plug and play and you're able to very

00:19:08,880 --> 00:19:14,160
easily start your solar

00:19:11,039 --> 00:19:16,080
in the recommended and secure way

00:19:14,160 --> 00:19:17,760
yeah definitely i mean i i think it's

00:19:16,080 --> 00:19:19,840
safe to say at this point like

00:19:17,760 --> 00:19:21,200
there's really no reason for for

00:19:19,840 --> 00:19:23,200
bringing up

00:19:21,200 --> 00:19:24,960
solar cloud and kubernetes with the

00:19:23,200 --> 00:19:26,720
operator you know without security

00:19:24,960 --> 00:19:29,840
enabled it really is just as

00:19:26,720 --> 00:19:32,720
as houston indicated plug and play

00:19:29,840 --> 00:19:33,600
uh that enables basic authentication we

00:19:32,720 --> 00:19:37,039
wire up

00:19:33,600 --> 00:19:39,120
um a couple of different users

00:19:37,039 --> 00:19:40,799
we ensure that like the liveness and

00:19:39,120 --> 00:19:43,440
readiness check

00:19:40,799 --> 00:19:45,280
the probes you know still work with an

00:19:43,440 --> 00:19:48,160
authenticated solar

00:19:45,280 --> 00:19:48,880
and you know then we wire in kind of

00:19:48,160 --> 00:19:51,280
sensible

00:19:48,880 --> 00:19:52,160
getting started uh authorization

00:19:51,280 --> 00:19:54,559
controls

00:19:52,160 --> 00:19:55,440
right and all this is just really it's a

00:19:54,559 --> 00:19:58,640
flag

00:19:55,440 --> 00:20:00,880
in this crd that you kind of enable

00:19:58,640 --> 00:20:02,159
i've thought about just making that like

00:20:00,880 --> 00:20:04,960
the default on

00:20:02,159 --> 00:20:06,320
but um you know we're not there yet but

00:20:04,960 --> 00:20:09,120
it it is abv

00:20:06,320 --> 00:20:11,120
very easily yeah yeah uh and then you

00:20:09,120 --> 00:20:12,720
know the tls

00:20:11,120 --> 00:20:14,880
frankly who even wants to think about

00:20:12,720 --> 00:20:18,240
that stuff anymore right um

00:20:14,880 --> 00:20:20,000
so you know with that uh what we've done

00:20:18,240 --> 00:20:21,919
is integrated with cert manager which

00:20:20,000 --> 00:20:24,159
happens to be another operator that's

00:20:21,919 --> 00:20:26,640
very popular in the kubernetes ecosystem

00:20:24,159 --> 00:20:28,559
that for it has crds for managing

00:20:26,640 --> 00:20:30,000
certificates and certificate signing

00:20:28,559 --> 00:20:31,919
requests and you know

00:20:30,000 --> 00:20:33,520
uh certificate authorities and things

00:20:31,919 --> 00:20:35,280
like that and it will

00:20:33,520 --> 00:20:37,360
go off and renew your certs and all

00:20:35,280 --> 00:20:38,880
these things and then the solar operator

00:20:37,360 --> 00:20:41,679
can actually

00:20:38,880 --> 00:20:42,960
use and work with the cert manager to

00:20:41,679 --> 00:20:45,360
wire in

00:20:42,960 --> 00:20:47,600
um the tls config for solar and as i

00:20:45,360 --> 00:20:50,159
mentioned earlier it can even

00:20:47,600 --> 00:20:51,280
respond to the cert being updated by

00:20:50,159 --> 00:20:54,640
cert manager

00:20:51,280 --> 00:20:56,320
and trigger this restart um yeah sorry

00:20:54,640 --> 00:20:58,320
for interrupting uh earlier

00:20:56,320 --> 00:20:59,360
the thing i wanted to emphasize about

00:20:58,320 --> 00:21:02,880
the crds is

00:20:59,360 --> 00:21:06,880
it's what i like about it is

00:21:02,880 --> 00:21:08,799
first off it's it's very solar specific

00:21:06,880 --> 00:21:10,159
so anybody who kind of knows solar cloud

00:21:08,799 --> 00:21:12,520
can look at it and really

00:21:10,159 --> 00:21:14,640
kind of see almost you know

00:21:12,520 --> 00:21:15,200
self-documenting of how their cloud

00:21:14,640 --> 00:21:17,039
works

00:21:15,200 --> 00:21:18,320
in kubernetes and i think that's really

00:21:17,039 --> 00:21:20,640
nice because you don't get

00:21:18,320 --> 00:21:22,000
bogged down in all the cube resources as

00:21:20,640 --> 00:21:23,840
houston mentioned

00:21:22,000 --> 00:21:25,200
you know at the beginning of the talk is

00:21:23,840 --> 00:21:26,000
uh you don't have to worry about all the

00:21:25,200 --> 00:21:27,840
kind of

00:21:26,000 --> 00:21:30,000
nuts and bolts of kubernetes it's really

00:21:27,840 --> 00:21:31,679
focused on you know how i want my solar

00:21:30,000 --> 00:21:33,120
cloud to work and that's what's in the

00:21:31,679 --> 00:21:34,720
crd right

00:21:33,120 --> 00:21:36,559
and that translates on the back end to

00:21:34,720 --> 00:21:38,720
all these crazy uh

00:21:36,559 --> 00:21:41,039
config objects that get created by the

00:21:38,720 --> 00:21:42,000
operator that kubernetes understands but

00:21:41,039 --> 00:21:44,080
but for you and for

00:21:42,000 --> 00:21:47,600
for your ops people they just work with

00:21:44,080 --> 00:21:50,720
these solar cloud crds

00:21:47,600 --> 00:21:52,880
um so this one

00:21:50,720 --> 00:21:55,520
kind of seems like maybe the answer is

00:21:52,880 --> 00:21:58,559
yes but you know

00:21:55,520 --> 00:22:00,720
does the solar operator work with solar

00:21:58,559 --> 00:22:02,400
collections in kubernetes

00:22:00,720 --> 00:22:04,320
yeah uh we're running a lot of times

00:22:02,400 --> 00:22:05,840
i'll just briefly answer this one but

00:22:04,320 --> 00:22:06,559
i'm happy to answer it more after the

00:22:05,840 --> 00:22:09,440
presentation

00:22:06,559 --> 00:22:11,039
basically the answer used to be yes and

00:22:09,440 --> 00:22:11,600
like the bloomberg version the solar

00:22:11,039 --> 00:22:13,760
operator

00:22:11,600 --> 00:22:15,679
when we moved to apache we removed the

00:22:13,760 --> 00:22:17,120
ability to manage solar collections and

00:22:15,679 --> 00:22:19,440
solar collection aliases

00:22:17,120 --> 00:22:21,200
through kubernetes through the solar

00:22:19,440 --> 00:22:22,880
operator and it was because we had two

00:22:21,200 --> 00:22:25,840
different sources of truth we had the

00:22:22,880 --> 00:22:27,120
kubernetes api server and then zookeeper

00:22:25,840 --> 00:22:28,559
for solar cloud

00:22:27,120 --> 00:22:30,240
both managing the same thing and they

00:22:28,559 --> 00:22:31,840
didn't always agree with each other

00:22:30,240 --> 00:22:33,840
so the solution for that was just to get

00:22:31,840 --> 00:22:35,840
one rid of one of the sources of truth

00:22:33,840 --> 00:22:38,559
which was the kubernetes one

00:22:35,840 --> 00:22:38,960
and so basically now you have to manage

00:22:38,559 --> 00:22:41,760
it all

00:22:38,960 --> 00:22:42,640
through solar um but it's nice because

00:22:41,760 --> 00:22:44,720
we just have

00:22:42,640 --> 00:22:46,559
one api for everything at that point

00:22:44,720 --> 00:22:48,880
everything in solar is one api and

00:22:46,559 --> 00:22:52,159
everything about managing a solar

00:22:48,880 --> 00:22:53,840
uh runtime is through kubernetes api

00:22:52,159 --> 00:22:55,440
that's right and then you know we didn't

00:22:53,840 --> 00:22:57,520
want as as

00:22:55,440 --> 00:22:58,960
you know maintainers of the operator

00:22:57,520 --> 00:23:01,280
code to have to like

00:22:58,960 --> 00:23:03,520
you know duplicate all of the logic in

00:23:01,280 --> 00:23:04,880
solar's collections apis and things like

00:23:03,520 --> 00:23:06,960
that in this other area

00:23:04,880 --> 00:23:08,559
but you know the the whole two sources

00:23:06,960 --> 00:23:11,919
of truth

00:23:08,559 --> 00:23:13,280
aside just you don't want to have to

00:23:11,919 --> 00:23:16,240
duplicate all that logic so we think

00:23:13,280 --> 00:23:19,280
it's a very nice separation of concerns

00:23:16,240 --> 00:23:21,600
um this one comes up a lot because just

00:23:19,280 --> 00:23:23,760
you know there's things organizations

00:23:21,600 --> 00:23:26,880
need to put in various docker images

00:23:23,760 --> 00:23:28,400
maybe you know their different um os

00:23:26,880 --> 00:23:30,080
requirements what have you

00:23:28,400 --> 00:23:32,880
so you know can you use the solar

00:23:30,080 --> 00:23:35,840
operator with uh custom solar builds

00:23:32,880 --> 00:23:37,200
yeah um so i would say you can the

00:23:35,840 --> 00:23:40,240
prometheus exporter

00:23:37,200 --> 00:23:41,840
especially but for the solar itself you

00:23:40,240 --> 00:23:45,120
need to make sure it has

00:23:41,840 --> 00:23:48,400
been solar it basically looks a lot like

00:23:45,120 --> 00:23:50,799
the open the official docker image um

00:23:48,400 --> 00:23:52,880
which for solo 9 will be nice because we

00:23:50,799 --> 00:23:53,760
moved all that logic into the solo repo

00:23:52,880 --> 00:23:56,080
and so

00:23:53,760 --> 00:23:57,039
when you have all of your custom things

00:23:56,080 --> 00:24:00,240
done to the repo

00:23:57,039 --> 00:24:01,440
you can just use a cradle um command to

00:24:00,240 --> 00:24:04,159
build yourself a ver

00:24:01,440 --> 00:24:06,240
and completely compatible docker image

00:24:04,159 --> 00:24:09,039
and there's tests for that as well

00:24:06,240 --> 00:24:10,400
um but as for pre solar 9 because that's

00:24:09,039 --> 00:24:13,840
not even released yet

00:24:10,400 --> 00:24:16,640
um i would say yes with the star

00:24:13,840 --> 00:24:17,600
of make sure that you have like the

00:24:16,640 --> 00:24:19,679
entry point

00:24:17,600 --> 00:24:21,679
be a foreground bin solar and you

00:24:19,679 --> 00:24:23,760
support everything that bin solar does

00:24:21,679 --> 00:24:24,799
including all the invars all that stuff

00:24:23,760 --> 00:24:26,640
right right

00:24:24,799 --> 00:24:27,840
it's it's definitely doable i've i've

00:24:26,640 --> 00:24:29,679
managed to work through it so

00:24:27,840 --> 00:24:32,000
yeah if i can get through it i think i

00:24:29,679 --> 00:24:34,159
think most tops folks can

00:24:32,000 --> 00:24:35,919
um and so you know as we are running a

00:24:34,159 --> 00:24:38,240
little short on time

00:24:35,919 --> 00:24:39,919
um you know talk a little bit about

00:24:38,240 --> 00:24:41,840
briefly just you know how solar

00:24:39,919 --> 00:24:42,960
and the solar operator can kind of grow

00:24:41,840 --> 00:24:45,679
together

00:24:42,960 --> 00:24:46,240
yeah and that's kind of like the awesome

00:24:45,679 --> 00:24:49,279
like

00:24:46,240 --> 00:24:51,440
benefit of having this little opera be

00:24:49,279 --> 00:24:52,880
a sub project of apache solar now is

00:24:51,440 --> 00:24:56,640
that we're able to kind of

00:24:52,880 --> 00:24:58,000
move together in like the same direction

00:24:56,640 --> 00:24:59,840
and so that means growing the solar

00:24:58,000 --> 00:25:02,320
operator when solar has new features and

00:24:59,840 --> 00:25:03,200
growing solar to better fit these cloud

00:25:02,320 --> 00:25:04,960
needs

00:25:03,200 --> 00:25:06,640
and so i mean i'll just give a few

00:25:04,960 --> 00:25:09,200
examples but

00:25:06,640 --> 00:25:10,159
there's a ticket for giving individual

00:25:09,200 --> 00:25:12,080
solar node

00:25:10,159 --> 00:25:13,919
prometheus endpoints instead of just

00:25:12,080 --> 00:25:15,600
having the prometheus exporter one

00:25:13,919 --> 00:25:17,279
endpoint for all solar nodes

00:25:15,600 --> 00:25:19,200
and this thing that would really help

00:25:17,279 --> 00:25:21,200
enabling better

00:25:19,200 --> 00:25:23,200
like horizontal body auto scaling in

00:25:21,200 --> 00:25:25,039
kubernetes it's possible now

00:25:23,200 --> 00:25:27,200
but it'll be a lot easier when each

00:25:25,039 --> 00:25:29,600
solar node is able to

00:25:27,200 --> 00:25:31,279
have prometheus metrics like exported

00:25:29,600 --> 00:25:34,159
from it individually

00:25:31,279 --> 00:25:35,840
um there's also other kind of weird

00:25:34,159 --> 00:25:37,520
configurations that are necessary for

00:25:35,840 --> 00:25:40,799
running solar cloud in a

00:25:37,520 --> 00:25:43,919
like a real cloud environment

00:25:40,799 --> 00:25:45,919
and so we're piece by piece

00:25:43,919 --> 00:25:47,679
trying to like make all of these things

00:25:45,919 --> 00:25:50,640
more configurable by default

00:25:47,679 --> 00:25:51,279
not having to know weird esoteric solar

00:25:50,640 --> 00:25:53,600
config

00:25:51,279 --> 00:25:54,880
options and just kind of making solar

00:25:53,600 --> 00:25:58,080
really a first

00:25:54,880 --> 00:26:01,440
like a cloud runtime is a first class

00:25:58,080 --> 00:26:03,679
option for solar cloud um

00:26:01,440 --> 00:26:04,960
and this does include making like better

00:26:03,679 --> 00:26:07,120
liveness checks

00:26:04,960 --> 00:26:08,720
and other things for running in secure

00:26:07,120 --> 00:26:10,559
modes because if you try to run solar

00:26:08,720 --> 00:26:13,279
with tls on camry's now

00:26:10,559 --> 00:26:14,400
um tim had to do this really let's say

00:26:13,279 --> 00:26:16,159
uh

00:26:14,400 --> 00:26:17,520
it was it was a good way of doing it

00:26:16,159 --> 00:26:19,679
it's awkward

00:26:17,520 --> 00:26:22,320
because of the way that solar makes him

00:26:19,679 --> 00:26:24,240
do it but in the future we're trying to

00:26:22,320 --> 00:26:26,320
make solar kind of understand the way

00:26:24,240 --> 00:26:28,320
that clouds work

00:26:26,320 --> 00:26:29,520
like not solar cloud but like cloud

00:26:28,320 --> 00:26:31,679
providers work

00:26:29,520 --> 00:26:33,279
and understand what it needs to do to

00:26:31,679 --> 00:26:36,320
make it easier

00:26:33,279 --> 00:26:39,679
gotcha um and so you know just to wrap

00:26:36,320 --> 00:26:41,120
up um for those that are interested

00:26:39,679 --> 00:26:43,440
in this is you know how how would they

00:26:41,120 --> 00:26:45,679
get involved in this project

00:26:43,440 --> 00:26:46,720
yeah and that's great i think we have

00:26:45,679 --> 00:26:48,240
like very few to

00:26:46,720 --> 00:26:50,559
me little time yet the answer is

00:26:48,240 --> 00:26:51,440
communication basically we want you

00:26:50,559 --> 00:26:53,520
trying it out

00:26:51,440 --> 00:26:54,720
download it run it with like however

00:26:53,520 --> 00:26:57,360
your company or you

00:26:54,720 --> 00:26:59,520
run your like kubernetes clusters we

00:26:57,360 --> 00:27:00,320
want to see as many different use cases

00:26:59,520 --> 00:27:03,840
to make this

00:27:00,320 --> 00:27:06,960
work for everyone that wants to use it

00:27:03,840 --> 00:27:08,799
and so like obviously we love prs they

00:27:06,960 --> 00:27:09,840
love documentation pr's they love new

00:27:08,799 --> 00:27:12,960
features

00:27:09,840 --> 00:27:13,520
but what we really really want is just

00:27:12,960 --> 00:27:16,480
people

00:27:13,520 --> 00:27:18,320
trying it out and telling us how you how

00:27:16,480 --> 00:27:19,679
it works for you what you think about it

00:27:18,320 --> 00:27:22,559
what needs to change

00:27:19,679 --> 00:27:24,080
right that's a great point um and then

00:27:22,559 --> 00:27:25,679
the other piece i'll add is like it's

00:27:24,080 --> 00:27:27,200
actually a really fun code base and

00:27:25,679 --> 00:27:27,679
project to work on especially if you're

00:27:27,200 --> 00:27:30,080
like

00:27:27,679 --> 00:27:31,360
wanting to learn go laying and and get

00:27:30,080 --> 00:27:33,039
more in kubernetes i think it's a

00:27:31,360 --> 00:27:34,720
fantastic way to kind of like

00:27:33,039 --> 00:27:36,080
just get involved in that broader

00:27:34,720 --> 00:27:38,320
ecosystem as well

00:27:36,080 --> 00:27:40,159
compared to solar it is a tiny repo so

00:27:38,320 --> 00:27:43,039
don't be afraid to go and look at it

00:27:40,159 --> 00:27:43,440
that's that's it that's right um well

00:27:43,039 --> 00:27:46,720
cool

00:27:43,440 --> 00:27:47,600
i i think we're out of time with respect

00:27:46,720 --> 00:27:50,640
to q

00:27:47,600 --> 00:27:52,159
a um but the the good thing is is

00:27:50,640 --> 00:27:54,080
houston and i are going to now shuttle

00:27:52,159 --> 00:27:58,080
off over to the apple

00:27:54,080 --> 00:28:01,039
uh chat room uh that's available um

00:27:58,080 --> 00:28:02,960
uh in the buzzwords uh dashboard there

00:28:01,039 --> 00:28:04,399
and we will be in there to answer any

00:28:02,960 --> 00:28:06,720
questions that you have that

00:28:04,399 --> 00:28:08,960
that have come up so apologize we ran a

00:28:06,720 --> 00:28:10,399
little tight on time for questions here

00:28:08,960 --> 00:28:12,640
but we'll definitely answer them over

00:28:10,399 --> 00:28:14,480
there so uh with that thank you so much

00:28:12,640 --> 00:28:16,320
houston i think this was really useful

00:28:14,480 --> 00:28:17,679
and um you know thank you everyone for

00:28:16,320 --> 00:28:31,840
for attending

00:28:17,679 --> 00:28:31,840
yeah thank you

00:28:39,440 --> 00:28:41,520

YouTube URL: https://www.youtube.com/watch?v=zl22KyzWqtM


