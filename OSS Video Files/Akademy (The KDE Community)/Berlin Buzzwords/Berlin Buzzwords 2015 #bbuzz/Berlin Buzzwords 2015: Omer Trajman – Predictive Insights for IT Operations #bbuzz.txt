Title: Berlin Buzzwords 2015: Omer Trajman â€“ Predictive Insights for IT Operations #bbuzz
Publication date: 2015-06-02
Playlist: Berlin Buzzwords 2015 #bbuzz
Description: 
	Domains such as financial trading, advertising and marketing have been fertile breeding grounds for cutting edge data-driven applications. Yet the systems that power these services are still running on decades old technology. Traders can run algorithms that make millions of dollars in milliseconds but the underlying systems are still serviced by tools that provide mere searching and graphing. 

Even the most powerful IT tools only look at small fractions of data, leaving most IT professions to hunt around in the dark. In this talk we will explore the application of machine learning in the domain of IT operations. In the datacenter there are thousands of sources of event data. By modeling the datacenter as a source of multiple data streams, we can apply techniques from other domains, modified to address the environments that now power much of our economy. 

Our focus here is around correlated anomaly detection across multiple time series data sets. By filtering streams of events that deviate from previously established patterns we can surface likely correlations of these streams for further exploration and analysis. Anomalies may be surfaced by anything from simple heuristics such as a reduced count of events, reference points such as specific types of event counts crossing Bollinger bands, or by more complex techniques such as probabilistic graphical models. 

Attendees will learn how techniques used in other domains of machine learning can be applied to help IT operators keep quality of service high. Attendees should be familiar with either machine learning techniques or with IT operations and data center architecture.

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	00:00:06,420 --> 00:00:10,910
thank you very much

00:00:08,320 --> 00:00:14,360
so the

00:00:10,910 --> 00:00:16,520
the titles big data for IT operations my

00:00:14,360 --> 00:00:19,400
name is Omar chime and I'm the CEO of ro

00:00:16,520 --> 00:00:22,250
Khanna see give you sort of a brief

00:00:19,400 --> 00:00:24,230
background I got started in big data at

00:00:22,250 --> 00:00:29,180
a company called vertigo is now part of

00:00:24,230 --> 00:00:31,760
HP I ran the field team for Cloudera and

00:00:29,180 --> 00:00:34,190
spent a lot of this time over the past

00:00:31,760 --> 00:00:36,260
10 years or so working with customers

00:00:34,190 --> 00:00:37,910
who were adopting a lot of the

00:00:36,260 --> 00:00:39,800
technologies that you've heard about

00:00:37,910 --> 00:00:41,960
today really the precursors to those

00:00:39,800 --> 00:00:44,480
technologies early call in her storage

00:00:41,960 --> 00:00:47,870
early Hadoop and MapReduce in some of

00:00:44,480 --> 00:00:50,719
the later systems and discovered along

00:00:47,870 --> 00:00:54,530
the way that the challenges that people

00:00:50,719 --> 00:00:56,300
had were increasingly not how to adopt

00:00:54,530 --> 00:00:58,309
and build on the technologies the

00:00:56,300 --> 00:01:00,590
ecosystem has evolved the education has

00:00:58,309 --> 00:01:02,629
evolved conferences such as buzz words

00:01:00,590 --> 00:01:05,690
have provided people with the tools to

00:01:02,629 --> 00:01:08,210
actually build but actually taking these

00:01:05,690 --> 00:01:11,380
technologies and running them in data

00:01:08,210 --> 00:01:14,360
centers at scale for mission-critical

00:01:11,380 --> 00:01:16,250
deployments that's where a lot of the

00:01:14,360 --> 00:01:19,099
people that I've worked with struggled

00:01:16,250 --> 00:01:22,520
so it wasn't actually say installing

00:01:19,099 --> 00:01:24,590
solar or elastic or Hadoop or even you

00:01:22,520 --> 00:01:26,569
know if you look at TED talk just now

00:01:24,590 --> 00:01:28,819
about drill there's great tutorials

00:01:26,569 --> 00:01:31,399
about how to use it it was when you

00:01:28,819 --> 00:01:33,920
wanted to run it globally when you had

00:01:31,399 --> 00:01:35,539
five data centers and two of those are

00:01:33,920 --> 00:01:36,800
actually hosted cloud providers and

00:01:35,539 --> 00:01:38,690
you're actually trying to deploy these

00:01:36,800 --> 00:01:39,890
technologies this is where we saw a lot

00:01:38,690 --> 00:01:41,239
of people struggling because these

00:01:39,890 --> 00:01:43,130
technologies are fundamentally new

00:01:41,239 --> 00:01:45,709
they're distributed systems they're

00:01:43,130 --> 00:01:48,200
built to recover from failures they are

00:01:45,709 --> 00:01:49,789
shared services where multiple

00:01:48,200 --> 00:01:51,800
applications might be using the same

00:01:49,789 --> 00:01:55,000
technologies and so a lot of this is

00:01:51,800 --> 00:01:57,530
what led to investigation that ended up

00:01:55,000 --> 00:01:58,910
leading us to found ro Khanna I'm going

00:01:57,530 --> 00:02:00,140
to talk about the investigation I'm

00:01:58,910 --> 00:02:02,060
going to talk a little bit about the

00:02:00,140 --> 00:02:03,500
background and the different areas we

00:02:02,060 --> 00:02:08,629
use to kind of inspire how we think

00:02:03,500 --> 00:02:10,459
about solving these problems before I

00:02:08,629 --> 00:02:13,520
jump into that just to highlight a

00:02:10,459 --> 00:02:16,040
little bit about the evolution of IT if

00:02:13,520 --> 00:02:17,690
you haven't been living in a data center

00:02:16,040 --> 00:02:20,060
if you haven't been operating these

00:02:17,690 --> 00:02:22,100
systems it's worth taking a step back to

00:02:20,060 --> 00:02:24,620
understand the context in which people

00:02:22,100 --> 00:02:28,129
run these technologies today

00:02:24,620 --> 00:02:31,220
if you go way back 30 years when people

00:02:28,129 --> 00:02:34,549
were running minis you known on x86

00:02:31,220 --> 00:02:36,409
systems maybe they had to deal with tens

00:02:34,549 --> 00:02:38,810
of different systems right it was kind

00:02:36,409 --> 00:02:40,459
of a collection of different systems

00:02:38,810 --> 00:02:41,959
under management that you could write

00:02:40,459 --> 00:02:43,849
down on a piece of paper you could put

00:02:41,959 --> 00:02:46,220
it on a big whiteboard you could print

00:02:43,849 --> 00:02:49,909
it out and understand what things are

00:02:46,220 --> 00:02:52,730
going on in the era of web 1.0 we moved

00:02:49,909 --> 00:02:54,500
to x86 servers and all of a sudden there

00:02:52,730 --> 00:02:58,040
were maybe hundreds of different systems

00:02:54,500 --> 00:03:01,069
we named our servers after cities or

00:02:58,040 --> 00:03:03,379
planets and you could still mentally map

00:03:01,069 --> 00:03:05,660
that in your head there were specialized

00:03:03,379 --> 00:03:07,760
different servers the web server web one

00:03:05,660 --> 00:03:09,530
maybe web to maybe web three now it's

00:03:07,760 --> 00:03:12,799
kind of the extent of the system and

00:03:09,530 --> 00:03:15,230
over the past decade as virtualization

00:03:12,799 --> 00:03:17,150
has been introduced we've now moved to a

00:03:15,230 --> 00:03:20,269
world where you maybe have thousands and

00:03:17,150 --> 00:03:22,430
it's still an architecture map that you

00:03:20,269 --> 00:03:24,920
can reason about you can search through

00:03:22,430 --> 00:03:27,500
different systems the redundancies are

00:03:24,920 --> 00:03:29,180
still built in largely at the hardware

00:03:27,500 --> 00:03:32,209
layer or in the case of virtualization

00:03:29,180 --> 00:03:35,419
by being able to do say disaster

00:03:32,209 --> 00:03:38,090
recovery or emotion over the past few

00:03:35,419 --> 00:03:40,040
years certainly with the onset of Amazon

00:03:38,090 --> 00:03:43,220
Web Services and now Google cloud engine

00:03:40,040 --> 00:03:45,169
with talking about you know i'll come

00:03:43,220 --> 00:03:47,299
back to ted talk drill running at a

00:03:45,169 --> 00:03:48,980
thousand nodes by GA when you talk about

00:03:47,299 --> 00:03:52,099
Hadoop appointments in the thousand

00:03:48,980 --> 00:03:53,810
nodes and that's one component of a

00:03:52,099 --> 00:03:55,669
system that's running in multiple data

00:03:53,810 --> 00:03:57,560
centers we're now in the tens of

00:03:55,669 --> 00:04:00,049
hundreds of thousands right and so you

00:03:57,560 --> 00:04:02,150
see this introduction and complexity the

00:04:00,049 --> 00:04:04,730
number of nodes in the logical data

00:04:02,150 --> 00:04:07,129
center network is growing and this is a

00:04:04,730 --> 00:04:10,190
log based graph right just so you can

00:04:07,129 --> 00:04:12,829
see the size of the bars if we plot this

00:04:10,190 --> 00:04:14,569
linearly this is where we are we're at

00:04:12,829 --> 00:04:17,090
the hockey stick in terms of complexity

00:04:14,569 --> 00:04:20,630
of the data center what this means is

00:04:17,090 --> 00:04:22,520
that whereas once you could fit the way

00:04:20,630 --> 00:04:25,280
systems work in your head think of

00:04:22,520 --> 00:04:27,800
banking ATM network you have your

00:04:25,280 --> 00:04:29,449
mainframe you have your ATMs the bank

00:04:27,800 --> 00:04:32,419
controls the entire system and they can

00:04:29,449 --> 00:04:35,120
map it out today at least in the US we

00:04:32,419 --> 00:04:37,770
have mobile check deposit I could be

00:04:35,120 --> 00:04:40,410
flying on a plane over the Atlantic

00:04:37,770 --> 00:04:42,240
a picture of a check and expect the same

00:04:40,410 --> 00:04:44,849
results that check it's deposited in the

00:04:42,240 --> 00:04:46,650
bank and yet there's now dozens of

00:04:44,849 --> 00:04:47,970
different systems the bank isn't can

00:04:46,650 --> 00:04:50,009
control of half of them it doesn't

00:04:47,970 --> 00:04:51,629
control the phone it doesn't control the

00:04:50,009 --> 00:04:54,270
operating system it doesn't control the

00:04:51,629 --> 00:04:55,919
mobile networks and we're expecting the

00:04:54,270 --> 00:04:57,419
same kind of application the same kinds

00:04:55,919 --> 00:04:59,340
of results so the complexity has gone

00:04:57,419 --> 00:05:02,220
through the roof and so when we started

00:04:59,340 --> 00:05:04,169
realizing these problems myself and my

00:05:02,220 --> 00:05:07,710
co-founders we started looking at what

00:05:04,169 --> 00:05:10,110
other systems where else are people

00:05:07,710 --> 00:05:13,349
dealing with this level of complexity

00:05:10,110 --> 00:05:15,270
and so we took a step back and said do

00:05:13,349 --> 00:05:17,220
we see complexity in the world and what

00:05:15,270 --> 00:05:21,479
techniques were used by those systems

00:05:17,220 --> 00:05:23,940
and a few of them came to mind the first

00:05:21,479 --> 00:05:26,069
is high frequency trading or people here

00:05:23,940 --> 00:05:27,960
familiar with what goes on in the world

00:05:26,069 --> 00:05:29,460
of high frequency trading all right so

00:05:27,960 --> 00:05:31,289
it used to be you'd have a bunch of

00:05:29,460 --> 00:05:32,909
people sitting around handing paper to

00:05:31,289 --> 00:05:34,680
each other trying to negotiate trades

00:05:32,909 --> 00:05:36,750
today all the trading is done by

00:05:34,680 --> 00:05:38,460
computers and it can be queried by

00:05:36,750 --> 00:05:40,770
computers which means i can write a

00:05:38,460 --> 00:05:43,229
computer system that goes to the trading

00:05:40,770 --> 00:05:45,210
platform and says how many people are

00:05:43,229 --> 00:05:46,830
trying to trade a particular stock in

00:05:45,210 --> 00:05:48,659
fact i want to know how many people are

00:05:46,830 --> 00:05:51,449
trying to trade every stock in the world

00:05:48,659 --> 00:05:53,759
and so now you have this enormous

00:05:51,449 --> 00:05:56,190
complexity of multiple time series

00:05:53,759 --> 00:05:59,099
systems that are clocking in multiple

00:05:56,190 --> 00:06:01,469
times per millisecond and so we looked

00:05:59,099 --> 00:06:04,050
at what high frequency traders are doing

00:06:01,469 --> 00:06:06,659
and they're building systems that use

00:06:04,050 --> 00:06:08,370
not search based systems they're not

00:06:06,659 --> 00:06:10,889
looking through things manually in fact

00:06:08,370 --> 00:06:12,900
most traders today are not actually

00:06:10,889 --> 00:06:15,029
invoking particular trades they're

00:06:12,900 --> 00:06:17,039
invoking trade algorithms all right

00:06:15,029 --> 00:06:19,199
there up there algorithmically operating

00:06:17,039 --> 00:06:20,550
how their systems transact and what

00:06:19,199 --> 00:06:23,130
they're using is a lot of columnar

00:06:20,550 --> 00:06:25,949
technology they're actually applying Big

00:06:23,130 --> 00:06:28,800
Data technologies allow them to store

00:06:25,949 --> 00:06:31,139
every single quote every single trade

00:06:28,800 --> 00:06:33,120
everything that happens historically so

00:06:31,139 --> 00:06:34,889
they can develop an algorithm a

00:06:33,120 --> 00:06:36,750
hypothesis about how they might be able

00:06:34,889 --> 00:06:38,909
to trade and then go back in time and

00:06:36,750 --> 00:06:40,500
play it through history and say would

00:06:38,909 --> 00:06:42,750
this have been successful over time and

00:06:40,500 --> 00:06:45,029
so it's a much more analytical approach

00:06:42,750 --> 00:06:47,250
that then they get to decide on the fly

00:06:45,029 --> 00:06:49,710
do they use one algorithm or another in

00:06:47,250 --> 00:06:51,330
order to effectively operate the system

00:06:49,710 --> 00:06:51,600
in which the running which is in this

00:06:51,330 --> 00:06:55,470
case

00:06:51,600 --> 00:06:57,420
trading stocks the other one which I'm

00:06:55,470 --> 00:07:00,600
sure you're all now well familiar with

00:06:57,420 --> 00:07:02,850
is ad targeting there's been talks today

00:07:00,600 --> 00:07:05,100
and at many conferences about how ad

00:07:02,850 --> 00:07:06,900
targeting systems work I go to a web

00:07:05,100 --> 00:07:08,610
page whether it's Google or another

00:07:06,900 --> 00:07:10,800
there's a special space on the page

00:07:08,610 --> 00:07:12,720
that's reserved for hundreds of

00:07:10,800 --> 00:07:14,490
different companies to within a few

00:07:12,720 --> 00:07:16,260
milliseconds as the page is rendering

00:07:14,490 --> 00:07:19,170
collect a little bit of information

00:07:16,260 --> 00:07:21,480
about me and bid on whether they should

00:07:19,170 --> 00:07:23,310
actually be displaying an advertisement

00:07:21,480 --> 00:07:24,750
at that point in time and so the

00:07:23,310 --> 00:07:26,880
real-time bidding systems the

00:07:24,750 --> 00:07:28,800
advertising systems behind this work in

00:07:26,880 --> 00:07:31,860
some ways similarly to the high

00:07:28,800 --> 00:07:33,660
frequency trading systems but the cost

00:07:31,860 --> 00:07:35,750
models and the cost dynamics are very

00:07:33,660 --> 00:07:39,210
different they're not trading stocks

00:07:35,750 --> 00:07:41,550
which are relatively speaking static in

00:07:39,210 --> 00:07:42,750
terms of this stock is for IBM and I

00:07:41,550 --> 00:07:45,720
know that IBM is a known quantity

00:07:42,750 --> 00:07:47,160
they're trading impressions over people

00:07:45,720 --> 00:07:49,050
whose interests and what you're

00:07:47,160 --> 00:07:51,690
particularly searching for changes over

00:07:49,050 --> 00:07:53,670
time so now you have the same kinds of

00:07:51,690 --> 00:07:55,130
algorithms / muted to think about

00:07:53,670 --> 00:07:57,740
systems that are actually changing

00:07:55,130 --> 00:08:00,870
dynamically and when we look today at

00:07:57,740 --> 00:08:02,790
ephemeral systems I have a thousand web

00:08:00,870 --> 00:08:04,490
servers but they burst to five thousand

00:08:02,790 --> 00:08:06,900
web servers depending on traffic as

00:08:04,490 --> 00:08:09,810
maybe a front end for a gaming system

00:08:06,900 --> 00:08:11,460
how people are using that system how

00:08:09,810 --> 00:08:12,870
people are involved in that system how

00:08:11,460 --> 00:08:15,360
those web servers scale and then

00:08:12,870 --> 00:08:17,010
contract and the profiles of them those

00:08:15,360 --> 00:08:18,480
change so there's some some

00:08:17,010 --> 00:08:21,360
applicability that we can think of from

00:08:18,480 --> 00:08:23,700
hft there's some applicability that we

00:08:21,360 --> 00:08:26,460
can think of from ad targeting and the

00:08:23,700 --> 00:08:28,350
other one which is somewhat related and

00:08:26,460 --> 00:08:30,330
if anyone's familiar with these system

00:08:28,350 --> 00:08:32,219
personalized recommender systems you go

00:08:30,330 --> 00:08:34,320
to amazon you go to facebook and

00:08:32,219 --> 00:08:36,150
recommend certain things for you and

00:08:34,320 --> 00:08:38,700
here again the cost model is different

00:08:36,150 --> 00:08:40,440
they're not spending money anymore it's

00:08:38,700 --> 00:08:42,539
a question of if I can fit one thing in

00:08:40,440 --> 00:08:45,230
one place based on the last few actions

00:08:42,539 --> 00:08:47,190
what would that be and here there's

00:08:45,230 --> 00:08:49,500
algorithms that are designed much more

00:08:47,190 --> 00:08:50,880
around pattern matching I want to take a

00:08:49,500 --> 00:08:53,820
model that I've developed and designed

00:08:50,880 --> 00:08:56,610
and fit that model or run that model at

00:08:53,820 --> 00:08:58,770
runtime depending on the particular

00:08:56,610 --> 00:09:00,630
behaviors that are occurred so we

00:08:58,770 --> 00:09:02,250
basically looked at a bunch of the

00:09:00,630 --> 00:09:04,380
algorithms the technologies of the

00:09:02,250 --> 00:09:05,459
techniques that people were using to

00:09:04,380 --> 00:09:07,559
build these systems and

00:09:05,459 --> 00:09:08,790
these systems are built on a lot of the

00:09:07,559 --> 00:09:10,709
things you've heard about today they're

00:09:08,790 --> 00:09:13,829
built on solar and elastic they're built

00:09:10,709 --> 00:09:16,199
on Hadoop and HBase and similar

00:09:13,829 --> 00:09:19,439
technologies and we started thinking

00:09:16,199 --> 00:09:22,920
about how do you actually see these data

00:09:19,439 --> 00:09:24,569
points right if I'm not the user not the

00:09:22,920 --> 00:09:26,279
person who is executing the trade I'm

00:09:24,569 --> 00:09:28,559
not the person who's seeing the ad I'm

00:09:26,279 --> 00:09:31,769
the analysts behind it I actually need

00:09:28,559 --> 00:09:34,920
to run one of these systems and I have

00:09:31,769 --> 00:09:36,869
billions of data points a day so a

00:09:34,920 --> 00:09:38,610
classic charting system isn't going to

00:09:36,869 --> 00:09:40,860
work I'm never going to see every single

00:09:38,610 --> 00:09:42,389
data point I have thousands of

00:09:40,860 --> 00:09:43,800
attributes in each of these data points

00:09:42,389 --> 00:09:46,470
I'm never going to be able to visualize

00:09:43,800 --> 00:09:48,990
every single facet how do I permute my

00:09:46,470 --> 00:09:50,639
view of that data in a way to call up

00:09:48,990 --> 00:09:53,220
things that actually give me actionable

00:09:50,639 --> 00:09:55,170
biss it's not just a pie chart and a

00:09:53,220 --> 00:09:56,699
line graph they're very specific

00:09:55,170 --> 00:09:58,889
visualizations in very specific ways

00:09:56,699 --> 00:10:00,540
that people look at this data in order

00:09:58,889 --> 00:10:03,050
to understand it and we've started

00:10:00,540 --> 00:10:05,579
thinking about how to apply those 2i t

00:10:03,050 --> 00:10:08,309
the first one we started thinking about

00:10:05,579 --> 00:10:10,949
if you've ever seen google finance it

00:10:08,309 --> 00:10:12,059
looks like this at first blush you look

00:10:10,949 --> 00:10:13,470
at it you say hey that's a line graph

00:10:12,059 --> 00:10:16,589
that's not very interesting I've got

00:10:13,470 --> 00:10:18,420
three time series so what what becomes

00:10:16,589 --> 00:10:20,579
interesting is that they're not trying

00:10:18,420 --> 00:10:21,929
to mix different kinds of metrics right

00:10:20,579 --> 00:10:24,600
so they're basically trying to say well

00:10:21,929 --> 00:10:25,559
this is change not based on the absolute

00:10:24,600 --> 00:10:27,329
value of the stock it's a

00:10:25,559 --> 00:10:29,639
percentage-based chain so and i look at

00:10:27,329 --> 00:10:31,259
to stock in these indices they may not

00:10:29,639 --> 00:10:33,480
be aligned in terms of their absolute

00:10:31,259 --> 00:10:35,160
value but if i'm trading stocks the

00:10:33,480 --> 00:10:36,420
percentage changes what actually care

00:10:35,160 --> 00:10:38,579
about if i have a thousand dollars

00:10:36,420 --> 00:10:40,529
invested in one index of or another

00:10:38,579 --> 00:10:41,790
versus another the same percentage

00:10:40,529 --> 00:10:44,790
change should result in the same

00:10:41,790 --> 00:10:46,470
percentage gain or loss so normalizing

00:10:44,790 --> 00:10:48,299
these time series is one way that this

00:10:46,470 --> 00:10:51,269
visualization kind of in a very subtle

00:10:48,299 --> 00:10:54,389
fashion is able to communicate a lot of

00:10:51,269 --> 00:10:55,920
data a lot of data points concisely the

00:10:54,389 --> 00:10:58,860
other that's interesting is these

00:10:55,920 --> 00:11:00,720
annotations all right so when I look at

00:10:58,860 --> 00:11:02,249
a time series graph I kinda have to

00:11:00,720 --> 00:11:05,069
think about well what's actually going

00:11:02,249 --> 00:11:07,199
on if I have a concrete event and let's

00:11:05,069 --> 00:11:09,329
relate this back to data centers I have

00:11:07,199 --> 00:11:12,509
a security intrusion product or have an

00:11:09,329 --> 00:11:14,459
anomaly detection algorithm or I have an

00:11:12,509 --> 00:11:17,339
IT person running a ticket system who

00:11:14,459 --> 00:11:18,780
rebooted a server and i'm looking at cpu

00:11:17,339 --> 00:11:20,700
metrics over time of a

00:11:18,780 --> 00:11:23,100
systems and all of a sudden I see a drop

00:11:20,700 --> 00:11:24,870
in CPU and then a spike and CPU well if

00:11:23,100 --> 00:11:26,910
someone rebooted that system that's

00:11:24,870 --> 00:11:29,190
useful information to know if I can plot

00:11:26,910 --> 00:11:30,930
that against the same graph all of a

00:11:29,190 --> 00:11:33,030
sudden I don't go down a rat hole trying

00:11:30,930 --> 00:11:36,600
to investigate why a particular system

00:11:33,030 --> 00:11:38,280
rebooted it becomes apparent for me the

00:11:36,600 --> 00:11:40,440
other one that's really interesting and

00:11:38,280 --> 00:11:43,410
you can plot a thousand data points you

00:11:40,440 --> 00:11:45,660
can plot a billion data points is how

00:11:43,410 --> 00:11:47,520
you do directed graphs when there's

00:11:45,660 --> 00:11:49,170
circular aspects of the graph when you

00:11:47,520 --> 00:11:51,690
have an application server a web server

00:11:49,170 --> 00:11:53,910
a database server and a particular

00:11:51,690 --> 00:11:55,380
session involves a hundred application

00:11:53,910 --> 00:11:57,060
server calls and a thousand database

00:11:55,380 --> 00:12:00,210
server calls maybe not a well-designed

00:11:57,060 --> 00:12:02,880
one but right let's say ten app server

00:12:00,210 --> 00:12:05,070
at 100 database server calls right and

00:12:02,880 --> 00:12:06,810
that's happening a billion times over

00:12:05,070 --> 00:12:08,370
the course of the day it's very hard to

00:12:06,810 --> 00:12:11,010
understand the nature of that system

00:12:08,370 --> 00:12:13,170
when you have elastic number of web

00:12:11,010 --> 00:12:14,550
servers when you have round-robin on

00:12:13,170 --> 00:12:16,980
your application servers when your

00:12:14,550 --> 00:12:19,050
database server isn't an oracle system

00:12:16,980 --> 00:12:21,300
but it's cassandra right and it's

00:12:19,050 --> 00:12:22,830
actually replicated and sharded across

00:12:21,300 --> 00:12:25,620
free data centers but that's kind of a

00:12:22,830 --> 00:12:27,510
modern application visualizing it using

00:12:25,620 --> 00:12:30,180
this method and here we're just looking

00:12:27,510 --> 00:12:32,130
at this is this is you know trout

00:12:30,180 --> 00:12:33,840
traffic to the rock on a website but

00:12:32,130 --> 00:12:36,930
visualizing it using a method where you

00:12:33,840 --> 00:12:39,990
actually have sort of these sort of

00:12:36,930 --> 00:12:41,640
directed data flow graphs where I'm not

00:12:39,990 --> 00:12:44,070
particularly saying one note is in one

00:12:41,640 --> 00:12:45,870
location I have you know a career

00:12:44,070 --> 00:12:47,790
section here a career section here

00:12:45,870 --> 00:12:49,860
career section there people got to it

00:12:47,790 --> 00:12:52,230
from different ways allows me to

00:12:49,860 --> 00:12:53,970
understand where the hotspots where do

00:12:52,230 --> 00:12:55,530
things happen frequently where the

00:12:53,970 --> 00:12:57,150
anomalies where things that are

00:12:55,530 --> 00:12:59,550
happening a little more satirically and

00:12:57,150 --> 00:13:01,620
it's it's a visualization that scales it

00:12:59,550 --> 00:13:04,500
allows me to look at a billion data

00:13:01,620 --> 00:13:06,180
points a day over 90 days over 180 days

00:13:04,500 --> 00:13:09,690
and I can still understand the same

00:13:06,180 --> 00:13:11,100
concepts behind him the other one that

00:13:09,690 --> 00:13:12,810
we've been working on that's really we

00:13:11,100 --> 00:13:15,030
found very useful and interesting is

00:13:12,810 --> 00:13:17,370
this idea of taking standard bar charts

00:13:15,030 --> 00:13:19,020
or if you look at a normal histogram but

00:13:17,370 --> 00:13:21,240
then breaking them out and stacking them

00:13:19,020 --> 00:13:23,190
and you can stack them to look at

00:13:21,240 --> 00:13:25,260
different things you can look at sort of

00:13:23,190 --> 00:13:27,950
different directions within the data set

00:13:25,260 --> 00:13:27,950

YouTube URL: https://www.youtube.com/watch?v=W330pZ1fXoo


