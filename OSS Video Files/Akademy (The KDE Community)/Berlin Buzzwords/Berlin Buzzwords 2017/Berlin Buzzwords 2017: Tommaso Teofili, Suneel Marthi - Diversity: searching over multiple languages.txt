Title: Berlin Buzzwords 2017: Tommaso Teofili, Suneel Marthi - Diversity: searching over multiple languages
Publication date: 2017-06-15
Playlist: Berlin Buzzwords 2017
Description: 
	Although a lot of online content is written in English there’re tons of non English users out there that still need to retrieve information. When searching, especially for tech related topics, it’s common to compose queries in English; however for such users search results written in their own native language may be preferred.

We’ll see how statistical machine translation tools can help in the above scenario to perform text translation at query time, resulting in an improved recall and precision for the search engine queries.

We’ll be having a look at how cross language information retrieval can be implemented on top of Apache Lucene with the help of Apache Joshua machine translation toolkit.

The audience would gain a better understanding of how to be able to make search queries against a multilingual corpora indexed into Apache Lucene and being able to retrieve all of the relevant search results in different languages.

Read more:
https://2017.berlinbuzzwords.de/17/session/embracing-diversity-searching-over-multiple-languages

About Tommaso Teofili:
https://2017.berlinbuzzwords.de/users/tommaso-teofili

About Suneel Marthi:
https://2017.berlinbuzzwords.de/users/suneel-marthi

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	00:00:06,500 --> 00:00:11,150
thank you thanks everyone for coming in

00:00:09,930 --> 00:00:13,099
and I hope

00:00:11,150 --> 00:00:15,080
so far at Boylan buzzwords this is my

00:00:13,099 --> 00:00:19,460
second talk today in lesson product by

00:00:15,080 --> 00:00:29,810
now so I'm so why is this one whole

00:00:19,460 --> 00:00:31,339
thing so I am so Neil Marty and I both

00:00:29,810 --> 00:00:33,680
had red hat and I'm based out of

00:00:31,339 --> 00:00:35,449
Washington DC in Virginia and I'm a

00:00:33,680 --> 00:00:37,820
member of a Tai Chi foundation and I'm a

00:00:35,449 --> 00:00:40,370
committed on attaching the hood open NLP

00:00:37,820 --> 00:00:41,769
and Apache streams and I also mentor a

00:00:40,370 --> 00:00:45,320
few projects in the packing sapater

00:00:41,769 --> 00:00:47,979
my name is Tomas de awfully I work at

00:00:45,320 --> 00:00:50,059
Adobe Systems as a software engineer I'm

00:00:47,979 --> 00:00:52,790
also a member of the Apache Software

00:00:50,059 --> 00:00:58,339
Foundation and contributing to a bunch

00:00:52,790 --> 00:01:01,869
of projects there so like leucine Joshua

00:00:58,339 --> 00:01:07,520
open NLP check rabbit and a few others

00:01:01,869 --> 00:01:09,110
yes okay so when I say what is

00:01:07,520 --> 00:01:10,400
multilingual search so we are going to

00:01:09,110 --> 00:01:13,130
be talking about multilingual search

00:01:10,400 --> 00:01:15,500
what is multilingual search and why do

00:01:13,130 --> 00:01:17,030
we need multilingual search and what is

00:01:15,500 --> 00:01:18,920
statistical machine translation have

00:01:17,030 --> 00:01:22,040
folks word about that before statistical

00:01:18,920 --> 00:01:23,810
machine translation okay and overview of

00:01:22,040 --> 00:01:25,940
Apache Joshua and a dataflow pipeline

00:01:23,810 --> 00:01:28,490
for the demo we have coming up and we

00:01:25,940 --> 00:01:32,180
have a demo so the first question is

00:01:28,490 --> 00:01:35,180
what is multilingual search so how often

00:01:32,180 --> 00:01:37,430
how many of you are non non English

00:01:35,180 --> 00:01:39,979
speakers Here I am one of course yeah

00:01:37,430 --> 00:01:42,110
pretty much all of most of us here so

00:01:39,979 --> 00:01:43,790
has it ever annoyed you that most of the

00:01:42,110 --> 00:01:45,590
content we have on the web is always is

00:01:43,790 --> 00:01:47,500
all in English and you would rather

00:01:45,590 --> 00:01:49,640
prefer something in native languages

00:01:47,500 --> 00:01:53,300
rather you see the search results in

00:01:49,640 --> 00:01:54,200
your native languages so so most of the

00:01:53,300 --> 00:01:56,000
content we have is in different

00:01:54,200 --> 00:01:57,470
languages and all of the speak different

00:01:56,000 --> 00:02:01,460
languages of speak different languages

00:01:57,470 --> 00:02:03,290
so when you want to do a search you

00:02:01,460 --> 00:02:04,490
would rather search on takes that is in

00:02:03,290 --> 00:02:06,260
English as well as in the different

00:02:04,490 --> 00:02:07,880
languages and you also want to be able

00:02:06,260 --> 00:02:11,000
to do a query in your native language

00:02:07,880 --> 00:02:14,030
right and most of the time when you do

00:02:11,000 --> 00:02:15,440
this you have you have a parallel

00:02:14,030 --> 00:02:17,269
corpora that is you have the text in

00:02:15,440 --> 00:02:18,769
English and the text in German and you

00:02:17,269 --> 00:02:20,959
line them up to see the transfer what

00:02:18,769 --> 00:02:22,670
the translation looks like sometimes you

00:02:20,959 --> 00:02:24,200
got to translate the user queries itself

00:02:22,670 --> 00:02:24,890
and sometimes you got to translate the

00:02:24,200 --> 00:02:27,980
documents

00:02:24,890 --> 00:02:30,950
so that you can retrieve your results so

00:02:27,980 --> 00:02:32,959
given that that's one of the reasons why

00:02:30,950 --> 00:02:34,430
you would need multilingual search so if

00:02:32,959 --> 00:02:36,319
we look at the online content we have

00:02:34,430 --> 00:02:39,290
today the Wikipedia dumps the English

00:02:36,319 --> 00:02:41,030
content is 62 gigs there are German

00:02:39,290 --> 00:02:43,040
quantity 17 gigs and Italian content is

00:02:41,030 --> 00:02:44,780
10 gigs right you can see the big gap

00:02:43,040 --> 00:02:47,900
here it's mostly English the content is

00:02:44,780 --> 00:02:48,920
English and as most of the audience here

00:02:47,900 --> 00:02:51,709
is non-english speakers

00:02:48,920 --> 00:02:53,209
and most of the search queries we do are

00:02:51,709 --> 00:02:54,590
pretty much in English like a search for

00:02:53,209 --> 00:02:57,560
a scalar product that a vector product

00:02:54,590 --> 00:02:59,239
or whatever and I would rather prefer

00:02:57,560 --> 00:03:00,620
that the search results are retrieved

00:02:59,239 --> 00:03:02,330
when I get back the search results is

00:03:00,620 --> 00:03:04,730
translated back into the native language

00:03:02,330 --> 00:03:06,350
the language I would prefer even

00:03:04,730 --> 00:03:07,519
consolidate all of the different results

00:03:06,350 --> 00:03:09,830
from the different corporal corporal

00:03:07,519 --> 00:03:11,900
like in English and German or Italian

00:03:09,830 --> 00:03:15,530
all consolidate all the results into one

00:03:11,900 --> 00:03:16,790
common language so that's what we are

00:03:15,530 --> 00:03:18,080
talking about by embracing diversity

00:03:16,790 --> 00:03:20,900
when you are talking about embracing

00:03:18,080 --> 00:03:22,910
diversity here so for example here

00:03:20,900 --> 00:03:24,050
tomaso is Italian Italian obviously so

00:03:22,910 --> 00:03:26,180
when you stick a search for a scalar

00:03:24,050 --> 00:03:28,040
product the results is getting back from

00:03:26,180 --> 00:03:29,239
Google is it's all in Italian the first

00:03:28,040 --> 00:03:31,790
search result is an Italian search

00:03:29,239 --> 00:03:33,200
result so that's the kind of that's what

00:03:31,790 --> 00:03:39,230
you would prefer when I doing a search

00:03:33,200 --> 00:03:40,310
and last year the US Department of it's

00:03:39,230 --> 00:03:42,320
actually the national intelligence

00:03:40,310 --> 00:03:44,959
department they have a contest in still

00:03:42,320 --> 00:03:46,610
running called materials so you want to

00:03:44,959 --> 00:03:48,799
be able to make a query in English

00:03:46,610 --> 00:03:50,209
search over the content in all the

00:03:48,799 --> 00:03:54,079
different languages let's say if I want

00:03:50,209 --> 00:03:55,130
to do a query about terrorism and I want

00:03:54,079 --> 00:03:57,950
to search all the different languages

00:03:55,130 --> 00:03:59,900
and across the web consolidate all the

00:03:57,950 --> 00:04:01,640
translate all the content into English

00:03:59,900 --> 00:04:03,560
summarize the content in English and get

00:04:01,640 --> 00:04:04,910
the results back in English and this is

00:04:03,560 --> 00:04:06,049
something the national intelligence of

00:04:04,910 --> 00:04:07,459
the US government wants to do that

00:04:06,049 --> 00:04:09,590
second test they have now it's still

00:04:07,459 --> 00:04:14,570
active so this is one of the reasons why

00:04:09,590 --> 00:04:18,010
you need multilingual search so what is

00:04:14,570 --> 00:04:18,010
machine translation

00:04:19,010 --> 00:04:23,300
so machine translation have the folks

00:04:21,829 --> 00:04:25,700
have any idea what machine translation

00:04:23,300 --> 00:04:29,169
is or anyone who is actually into this

00:04:25,700 --> 00:04:30,990
search an information retrieval

00:04:29,169 --> 00:04:32,850
okay

00:04:30,990 --> 00:04:34,830
so basically you have statistical models

00:04:32,850 --> 00:04:36,870
that are trained so you have let's say

00:04:34,830 --> 00:04:38,039
if I am trying to do a create a model

00:04:36,870 --> 00:04:40,110
that is translating from English to

00:04:38,039 --> 00:04:42,090
German or German to English I create a

00:04:40,110 --> 00:04:44,370
language pack for that how do I do that

00:04:42,090 --> 00:04:45,990
I have all the content I line up all the

00:04:44,370 --> 00:04:47,250
sentences so sentence here from here and

00:04:45,990 --> 00:04:49,139
the sentence here from the same document

00:04:47,250 --> 00:04:51,240
translated document I line up all the

00:04:49,139 --> 00:04:52,830
sentences and I tried to create mapping

00:04:51,240 --> 00:04:54,750
say the phrase based mappings I can take

00:04:52,830 --> 00:04:56,160
a phrase and in a map this map this

00:04:54,750 --> 00:04:57,900
single word from here to might I would

00:04:56,160 --> 00:05:00,419
see multiple words here or a phrase from

00:04:57,900 --> 00:05:01,889
here to the place here and it's kind of

00:05:00,419 --> 00:05:03,030
it happens based on a probability

00:05:01,889 --> 00:05:06,660
distribution if you are familiar with

00:05:03,030 --> 00:05:08,729
base patient theorem so probability of e

00:05:06,660 --> 00:05:11,160
use a string in a target language which

00:05:08,729 --> 00:05:13,919
is English for example and the source

00:05:11,160 --> 00:05:16,320
language is your French Spanish and a of

00:05:13,919 --> 00:05:19,380
F and you are trying to calculate the

00:05:16,320 --> 00:05:20,759
probability of F and you can help

00:05:19,380 --> 00:05:22,229
several probabilities but the

00:05:20,759 --> 00:05:25,979
probability that you choose is the max

00:05:22,229 --> 00:05:27,659
probability okay EF f is AD max this is

00:05:25,979 --> 00:05:30,210
the Bayes rule a family of the Bayes

00:05:27,659 --> 00:05:31,380
theorem and this is the best translation

00:05:30,210 --> 00:05:32,550
the one with the highest probability is

00:05:31,380 --> 00:05:34,590
what you pick from the certain

00:05:32,550 --> 00:05:39,810
probabilities that you get and that we

00:05:34,590 --> 00:05:41,070
look at that how it works so there are

00:05:39,810 --> 00:05:42,720
different ways of doing the machine

00:05:41,070 --> 00:05:47,580
translation one of them is word based

00:05:42,720 --> 00:05:49,500
translation and here basically how do

00:05:47,580 --> 00:05:52,110
you translate a word I can look up in a

00:05:49,500 --> 00:05:56,070
dictionary for example like we try on a

00:05:52,110 --> 00:06:00,300
German here Jib all day they get it

00:05:56,070 --> 00:06:03,780
right okay Jabar day it could be either

00:06:00,300 --> 00:06:05,310
a building or a house or a tower and you

00:06:03,780 --> 00:06:07,949
can have multiple translations of that

00:06:05,310 --> 00:06:09,659
in English so some of them are more

00:06:07,949 --> 00:06:11,250
frequent so for example Tower is not

00:06:09,659 --> 00:06:13,620
that frequently used so building and

00:06:11,250 --> 00:06:15,360
house are more frequently used so you

00:06:13,620 --> 00:06:17,870
got to figure out which one do I pick as

00:06:15,360 --> 00:06:21,360
the correct translation for a word

00:06:17,870 --> 00:06:23,190
so another example is if I look at the

00:06:21,360 --> 00:06:25,710
translation of your body and if I'm

00:06:23,190 --> 00:06:27,300
looking at I do a Google search for the

00:06:25,710 --> 00:06:29,699
house I get five point two eight billion

00:06:27,300 --> 00:06:31,620
hits on Google and for building I get

00:06:29,699 --> 00:06:34,500
four point one six and for tower I get

00:06:31,620 --> 00:06:36,300
nine point two eight billion so that

00:06:34,500 --> 00:06:39,779
should be million yep sorry

00:06:36,300 --> 00:06:41,130
that's million and for each of them you

00:06:39,779 --> 00:06:42,659
calculate the probability so obviously

00:06:41,130 --> 00:06:44,919
the house has the highest probability of

00:06:42,659 --> 00:06:46,060
0.5 1 and

00:06:44,919 --> 00:06:48,400
the tower has the lowest lease

00:06:46,060 --> 00:06:52,719
probability of 0.09 so the correct

00:06:48,400 --> 00:06:59,439
translation for you body G body would be

00:06:52,719 --> 00:07:00,789
house so find me so how do you do this

00:06:59,439 --> 00:07:02,919
now so what you have to do is we got to

00:07:00,789 --> 00:07:04,090
align your text you can take a text from

00:07:02,919 --> 00:07:07,599
English and you can take a text from

00:07:04,090 --> 00:07:10,060
German and we align all the words in the

00:07:07,599 --> 00:07:15,159
language for example does Gabor day is

00:07:10,060 --> 00:07:16,560
talk okay was a good yeah so the

00:07:15,159 --> 00:07:19,169
building is high there's a translation

00:07:16,560 --> 00:07:23,439
so I translate and map the words does

00:07:19,169 --> 00:07:26,650
does B and this is the building is is

00:07:23,439 --> 00:07:33,610
oak high and I get the word position so

00:07:26,650 --> 00:07:35,199
the word positions are 1 2 3 4 so when

00:07:33,610 --> 00:07:36,819
you do that so when you do this

00:07:35,199 --> 00:07:38,789
alignment you've got to calculate and we

00:07:36,819 --> 00:07:41,259
come up with an alignment function and

00:07:38,789 --> 00:07:43,389
an alignment function example of an

00:07:41,259 --> 00:07:45,310
alignment function is you map each

00:07:43,389 --> 00:07:48,129
English word to the corresponding

00:07:45,310 --> 00:07:50,139
position to the German word so we mapped

00:07:48,129 --> 00:07:52,029
each eye English word I had position I

00:07:50,139 --> 00:07:53,740
think a German word position J for

00:07:52,029 --> 00:07:55,449
example in the previous one it was

00:07:53,740 --> 00:08:01,300
one-to-one mapping one 1 two 2 three 3

00:07:55,449 --> 00:08:03,149
four 4 so it could so happen that you

00:08:01,300 --> 00:08:08,860
could have one too many translations so

00:08:03,149 --> 00:08:10,599
does is ain't Hawk horse okay the

00:08:08,860 --> 00:08:13,060
translator this is a high-rise building

00:08:10,599 --> 00:08:14,919
so this one word maps to three different

00:08:13,060 --> 00:08:16,240
English words so that's when alignment

00:08:14,919 --> 00:08:21,370
that's what the state alignment function

00:08:16,240 --> 00:08:23,080
I rise building okay so these are some

00:08:21,370 --> 00:08:24,159
of the things that you need to factor in

00:08:23,080 --> 00:08:26,649
when you're building your machine in our

00:08:24,159 --> 00:08:30,219
translation language models and so this

00:08:26,649 --> 00:08:32,140
is word based translation and word based

00:08:30,219 --> 00:08:34,329
translation is not used all that much

00:08:32,140 --> 00:08:36,219
now and the words use novice praise

00:08:34,329 --> 00:08:40,719
based translation returns map your

00:08:36,219 --> 00:08:42,550
phrases so in word based models you have

00:08:40,719 --> 00:08:43,990
the words as your atomic unit whereas in

00:08:42,550 --> 00:08:45,610
phrase based models you translate

00:08:43,990 --> 00:08:48,339
phrases and you treat your phrases as

00:08:45,610 --> 00:08:51,730
atomic units so the advantages of going

00:08:48,339 --> 00:08:53,170
with a phrase based model is please you

00:08:51,730 --> 00:08:55,300
have many too many translations that can

00:08:53,170 --> 00:08:57,370
handle non compositional places phrases

00:08:55,300 --> 00:09:00,250
like in the previous one

00:08:57,370 --> 00:09:01,870
had a cause mapping to high-rise

00:09:00,250 --> 00:09:05,440
building it is a non compositional

00:09:01,870 --> 00:09:06,700
phrase right so you can with race-based

00:09:05,440 --> 00:09:10,390
translation you can actually map that

00:09:06,700 --> 00:09:12,310
better and the more data you have and

00:09:10,390 --> 00:09:13,660
the longer phrases you can learn longer

00:09:12,310 --> 00:09:15,490
phrases and better you can learn by the

00:09:13,660 --> 00:09:17,020
phrases and this is kind of the standard

00:09:15,490 --> 00:09:21,220
model that Google uses for Google

00:09:17,020 --> 00:09:23,050
Translate engine so for example in a

00:09:21,220 --> 00:09:26,800
phrase based model I have a sentence in

00:09:23,050 --> 00:09:29,560
German Berlin East End has her Oregon

00:09:26,800 --> 00:09:32,140
days constituent quilt or zentrum okay

00:09:29,560 --> 00:09:34,510
was it good yes

00:09:32,140 --> 00:09:36,520
so which translates to Berlin is an

00:09:34,510 --> 00:09:39,550
outstanding art and outstanding art and

00:09:36,520 --> 00:09:44,560
cultural center so this phrase my apps

00:09:39,550 --> 00:09:45,700
do have phrase here right and so

00:09:44,560 --> 00:09:47,920
basically you segment your input into

00:09:45,700 --> 00:09:50,140
phrases and you translate each other

00:09:47,920 --> 00:09:51,550
phrases into English and you need to

00:09:50,140 --> 00:09:53,080
reorder your phrases when you translate

00:09:51,550 --> 00:09:54,550
that back into German or English you

00:09:53,080 --> 00:09:59,890
need to reorder the phrases to get a

00:09:54,550 --> 00:10:01,420
correct syntax so when you do this when

00:09:59,890 --> 00:10:03,070
you build your language models the next

00:10:01,420 --> 00:10:04,300
step is when you are actually coming to

00:10:03,070 --> 00:10:06,040
do a static translation machine

00:10:04,300 --> 00:10:09,640
translation you've got to decode your

00:10:06,040 --> 00:10:12,040
inputs with them based on the models so

00:10:09,640 --> 00:10:13,990
for decoding that we have a mathematical

00:10:12,040 --> 00:10:17,170
model for translation so for example

00:10:13,990 --> 00:10:19,029
based on the probabilities find the

00:10:17,170 --> 00:10:20,950
translation the best translation with

00:10:19,029 --> 00:10:22,060
the highest probability so based on the

00:10:20,950 --> 00:10:23,380
probabilities that you have for each of

00:10:22,060 --> 00:10:24,970
the phrases you calculate the phrase

00:10:23,380 --> 00:10:26,470
probabilities for each of the phrases

00:10:24,970 --> 00:10:29,110
and pick the phrase with the highest

00:10:26,470 --> 00:10:30,400
probability and when you do this there

00:10:29,110 --> 00:10:32,260
are two types of errors that could occur

00:10:30,400 --> 00:10:36,100
the most probable translation is already

00:10:32,260 --> 00:10:37,630
bad so we go to fix our models or you

00:10:36,100 --> 00:10:38,980
don't find the most probable translation

00:10:37,630 --> 00:10:43,510
at all so you go to fix a search when

00:10:38,980 --> 00:10:44,980
you do the search so for example when

00:10:43,510 --> 00:10:46,390
your translation the way the translation

00:10:44,980 --> 00:10:49,270
process works is so let's say I have

00:10:46,390 --> 00:10:53,589
this German sentence trinket yarn or

00:10:49,270 --> 00:10:57,220
nique okay when I translate this it's a

00:10:53,589 --> 00:10:58,990
translates to he and then that's a

00:10:57,220 --> 00:11:01,180
phrase here this yarn oak Nick's is a

00:10:58,990 --> 00:11:03,910
phrase so that translates to does not

00:11:01,180 --> 00:11:09,540
yet or it's quite quite close to that

00:11:03,910 --> 00:11:12,850
and shrinkage is drink so

00:11:09,540 --> 00:11:14,920
so that's that's how you translate that

00:11:12,850 --> 00:11:17,800
based on the phrases l trinket yeah

00:11:14,920 --> 00:11:19,959
knock Nick's he does not yet drink right

00:11:17,800 --> 00:11:22,059
so here you are reordering the words so

00:11:19,959 --> 00:11:27,939
the drink instead of showing up here it

00:11:22,059 --> 00:11:29,920
shows up here we are in the words okay

00:11:27,939 --> 00:11:34,869
with that do you have any questions so

00:11:29,920 --> 00:11:36,730
far on this okay I'll turn it over to

00:11:34,869 --> 00:11:38,379
Tommaso who is going to be talking about

00:11:36,730 --> 00:11:40,240
Apache Joshua and doing a demo of how

00:11:38,379 --> 00:11:44,790
this works okay

00:11:40,240 --> 00:11:47,550
thanks Cindy so Apache Joshua is a

00:11:44,790 --> 00:11:52,389
statistical machine translation project

00:11:47,550 --> 00:11:57,490
that was originally developed by Johns

00:11:52,389 --> 00:12:00,129
Hopkins University and UPenn and got

00:11:57,490 --> 00:12:02,199
into the incubator something like 1 or

00:12:00,129 --> 00:12:05,949
if year and a half ago or something like

00:12:02,199 --> 00:12:11,230
that and actually today we're probably

00:12:05,949 --> 00:12:14,470
going our first incubating release so it

00:12:11,230 --> 00:12:17,529
took it took us quite a while to to get

00:12:14,470 --> 00:12:19,920
along with all the process the Apache

00:12:17,529 --> 00:12:25,319
Software Foundation and fix some

00:12:19,920 --> 00:12:29,740
licensing and and other stuff but we're

00:12:25,319 --> 00:12:33,670
we're being the project is being used by

00:12:29,740 --> 00:12:38,589
already at Amazon and just propulsion

00:12:33,670 --> 00:12:41,139
laboratory at NASA and also integrated I

00:12:38,589 --> 00:12:44,199
mean and there are open issues to

00:12:41,139 --> 00:12:45,730
integrate with other projects at the

00:12:44,199 --> 00:12:46,240
Apache Software Foundation like Apache

00:12:45,730 --> 00:12:51,370
Solr

00:12:46,240 --> 00:12:54,249
or tikka that has a translation API and

00:12:51,370 --> 00:13:02,740
even in the jackrabbit oak content

00:12:54,249 --> 00:13:05,740
repository so a very cool thing about

00:13:02,740 --> 00:13:07,269
Joshua is that it comes out basically as

00:13:05,740 --> 00:13:11,619
a tool that you can already use out of

00:13:07,269 --> 00:13:15,879
the box so the release we're going to

00:13:11,619 --> 00:13:18,490
have out in a few hours is basically a

00:13:15,879 --> 00:13:21,249
source release so that you can use it to

00:13:18,490 --> 00:13:22,570
build and train your own statistical

00:13:21,249 --> 00:13:26,890
machine translation

00:13:22,570 --> 00:13:29,760
model but also we provide a few binary

00:13:26,890 --> 00:13:33,730
distributions of language packs

00:13:29,760 --> 00:13:36,400
something like 64 language pack

00:13:33,730 --> 00:13:39,790
language packs for different language

00:13:36,400 --> 00:13:43,840
payers which you can basically unpack

00:13:39,790 --> 00:13:47,500
and use from the command line and that's

00:13:43,840 --> 00:13:51,790
actually one of the things we're working

00:13:47,500 --> 00:13:57,280
on also on the Java side that a lot of

00:13:51,790 --> 00:14:00,990
basically it was built as a tool that

00:13:57,280 --> 00:14:03,370
you can use for example within your bash

00:14:00,990 --> 00:14:06,820
scripts but also you can start up a

00:14:03,370 --> 00:14:08,950
server and you can do HTTP requests and

00:14:06,820 --> 00:14:12,820
you get HTTP responses so something like

00:14:08,950 --> 00:14:15,460
a separate component in your environment

00:14:12,820 --> 00:14:16,690
and the scenario depending on what you

00:14:15,460 --> 00:14:19,270
need

00:14:16,690 --> 00:14:22,930
but what we're also working on is to

00:14:19,270 --> 00:14:26,400
integrate it as a as a library that you

00:14:22,930 --> 00:14:30,340
can use from basically programmatically

00:14:26,400 --> 00:14:34,300
and that's requiring something some work

00:14:30,340 --> 00:14:38,050
that we're going to do there to remove

00:14:34,300 --> 00:14:39,640
some things that scripts or at least to

00:14:38,050 --> 00:14:42,040
make it possible to use different things

00:14:39,640 --> 00:14:48,430
so for example we have an open issue to

00:14:42,040 --> 00:14:50,800
use NLP library open NLP to do the

00:14:48,430 --> 00:14:53,170
pre-processing of the text while

00:14:50,800 --> 00:14:56,140
building the machine translation model

00:14:53,170 --> 00:15:01,020
instead of scripts that we have in the

00:14:56,140 --> 00:15:05,830
in the release the source release so

00:15:01,020 --> 00:15:09,700
here are I hope they read well enough a

00:15:05,830 --> 00:15:12,070
couple of possible flows so because here

00:15:09,700 --> 00:15:13,720
we are talking about Joshua in the

00:15:12,070 --> 00:15:18,120
context of or basically machine

00:15:13,720 --> 00:15:20,140
translation in the context of search and

00:15:18,120 --> 00:15:22,600
here are basically two slightly

00:15:20,140 --> 00:15:26,500
different scenarios so in the left left

00:15:22,600 --> 00:15:28,300
one you have that the user query string

00:15:26,500 --> 00:15:32,710
comes together with a user profile and

00:15:28,300 --> 00:15:35,470
if you think about the use case one that

00:15:32,710 --> 00:15:36,100
we we showed basically the picture from

00:15:35,470 --> 00:15:41,709
the

00:15:36,100 --> 00:15:44,769
Google search let me go back a bit here

00:15:41,709 --> 00:15:47,259
that's basically what happens I mean I'm

00:15:44,769 --> 00:15:51,100
not saying in any way that I am Italian

00:15:47,259 --> 00:15:57,790
I mean I just typed scalar product so I

00:15:51,100 --> 00:16:00,399
mean Google is not doing that via the

00:15:57,790 --> 00:16:04,680
website basically it's not because I'm

00:16:00,399 --> 00:16:08,220
using Google Doc IT or Google dot B so

00:16:04,680 --> 00:16:11,380
perhaps it's just because I'm logged in

00:16:08,220 --> 00:16:15,040
with my Google account so it uses my

00:16:11,380 --> 00:16:19,480
profile data to decide whether or not

00:16:15,040 --> 00:16:23,100
provided machine translated we use a

00:16:19,480 --> 00:16:34,509
machine translated query and which which

00:16:23,100 --> 00:16:37,870
language translate to so here what we

00:16:34,509 --> 00:16:40,300
have so imagine that we have liking that

00:16:37,870 --> 00:16:43,230
in the demo that we will see afterwards

00:16:40,300 --> 00:16:46,660
we have two decoders basically two

00:16:43,230 --> 00:16:48,399
models machine translation models that

00:16:46,660 --> 00:16:51,459
can do translation for example from

00:16:48,399 --> 00:16:54,399
English to Italian or English to German

00:16:51,459 --> 00:16:58,870
so the user profile is used to pick up

00:16:54,399 --> 00:17:01,240
the right decoder and in that case what

00:16:58,870 --> 00:17:04,990
we have is that the query the user

00:17:01,240 --> 00:17:08,939
entered query gets enhanced and you have

00:17:04,990 --> 00:17:12,280
that the translated query is added as

00:17:08,939 --> 00:17:14,620
using a loose in kind of slang as a

00:17:12,280 --> 00:17:17,350
boolean queries so you have the original

00:17:14,620 --> 00:17:19,750
query written in the end in English for

00:17:17,350 --> 00:17:22,270
example scalar product but you also have

00:17:19,750 --> 00:17:25,059
the translated query within the

00:17:22,270 --> 00:17:25,540
translated language which is proto

00:17:25,059 --> 00:17:28,780
Scolari

00:17:25,540 --> 00:17:32,100
and therefore you get that the searcher

00:17:28,780 --> 00:17:37,720
gets queried with with a query which

00:17:32,100 --> 00:17:39,750
basically in two versions and that's one

00:17:37,720 --> 00:17:41,919
thing on the other end we could have

00:17:39,750 --> 00:17:44,980
another use case which is slightly

00:17:41,919 --> 00:17:48,309
different so instead of using the user

00:17:44,980 --> 00:17:49,360
profile what we use is that we detect

00:17:48,309 --> 00:17:50,890
the language

00:17:49,360 --> 00:17:57,670
in which the user query string was

00:17:50,890 --> 00:18:01,780
written and then do a search using also

00:17:57,670 --> 00:18:04,059
other decoders that we have so if it's

00:18:01,780 --> 00:18:11,830
written in English we can provide also a

00:18:04,059 --> 00:18:13,840
query in Italian or in German so in the

00:18:11,830 --> 00:18:16,690
first case what we are looking for is to

00:18:13,840 --> 00:18:20,830
improve the precision of our search

00:18:16,690 --> 00:18:24,309
engine so basically for me as a user on

00:18:20,830 --> 00:18:26,980
the search engine it indicates for

00:18:24,309 --> 00:18:29,500
example of tech related content and

00:18:26,980 --> 00:18:31,809
topics is probably easier and preferable

00:18:29,500 --> 00:18:38,440
to read content that's written my native

00:18:31,809 --> 00:18:39,490
language so I get the native the the

00:18:38,440 --> 00:18:42,790
result written in the native language

00:18:39,490 --> 00:18:46,510
first right so I get the best results

00:18:42,790 --> 00:18:49,660
first so I get an improved precision on

00:18:46,510 --> 00:18:53,410
the other end on the in the second in

00:18:49,660 --> 00:18:56,260
the second use case what what what is

00:18:53,410 --> 00:18:59,620
doing is that I'm basically providing

00:18:56,260 --> 00:19:03,100
more results in the yoke that among

00:18:59,620 --> 00:19:04,750
those results those are relevant enough

00:19:03,100 --> 00:19:08,200
to the end users so what we have is that

00:19:04,750 --> 00:19:11,530
we avoid missing results that could be

00:19:08,200 --> 00:19:17,220
useful to the end user by doing machine

00:19:11,530 --> 00:19:20,230
translation and there is an interesting

00:19:17,220 --> 00:19:23,080
extension of these of these use case so

00:19:20,230 --> 00:19:27,660
for example machine translation can also

00:19:23,080 --> 00:19:30,160
do paraphrase translation so if you have

00:19:27,660 --> 00:19:33,309
corpora a parallel corpora having

00:19:30,160 --> 00:19:36,850
basically two different versions of the

00:19:33,309 --> 00:19:40,000
same sentence both in English what you

00:19:36,850 --> 00:19:42,160
can do here instead of translating the

00:19:40,000 --> 00:19:45,490
query from English to Italian or from

00:19:42,160 --> 00:19:49,620
English to German you do English to

00:19:45,490 --> 00:19:53,110
English translation and so you basically

00:19:49,620 --> 00:19:55,299
look to improving again the recall the

00:19:53,110 --> 00:19:58,690
the probability that the search the user

00:19:55,299 --> 00:20:01,630
entered query matches results on your

00:19:58,690 --> 00:20:04,350
own your search engine

00:20:01,630 --> 00:20:09,370
and this is basically just for

00:20:04,350 --> 00:20:14,920
translating the user query another thing

00:20:09,370 --> 00:20:21,370
that we we discussed in the used case

00:20:14,920 --> 00:20:24,970
too is native only so how is it useful

00:20:21,370 --> 00:20:28,540
or is it useful to have results

00:20:24,970 --> 00:20:31,630
translated into your native language so

00:20:28,540 --> 00:20:33,520
this thing here is a feature in Google

00:20:31,630 --> 00:20:35,350
search that was disabled is translated

00:20:33,520 --> 00:20:39,880
for in pages something like three or

00:20:35,350 --> 00:20:42,940
four years ago because it was based in

00:20:39,880 --> 00:20:48,430
not used very much by the end users and

00:20:42,940 --> 00:20:51,670
that's fine for the web search probably

00:20:48,430 --> 00:20:54,880
but on the other end we have other use

00:20:51,670 --> 00:20:58,870
cases like mentioned by sunil where

00:20:54,880 --> 00:21:05,140
these can be useful or and one thing

00:20:58,870 --> 00:21:06,370
that i would like you to think his to as

00:21:05,140 --> 00:21:11,250
the title of the talk to embrace

00:21:06,370 --> 00:21:13,810
diversity so when we do things when we

00:21:11,250 --> 00:21:16,480
decide how to set up our search engine

00:21:13,810 --> 00:21:19,740
and now to whether doing machine

00:21:16,480 --> 00:21:23,830
translation or not or on query or

00:21:19,740 --> 00:21:27,480
document side what are we what do we

00:21:23,830 --> 00:21:30,970
want to do for our for our end users so

00:21:27,480 --> 00:21:32,830
we do not want to skip that just because

00:21:30,970 --> 00:21:37,540
i don't know google or whatever other

00:21:32,830 --> 00:21:43,780
provided decided to discard it so think

00:21:37,540 --> 00:21:46,560
of for example use case of refugees and

00:21:43,780 --> 00:21:49,450
i mean are immigrants we have lots of

00:21:46,560 --> 00:21:54,340
such stories where basically news is

00:21:49,450 --> 00:21:59,140
full of such stories so if i as a

00:21:54,340 --> 00:22:02,110
refugee and since search is a tool that

00:21:59,140 --> 00:22:05,200
is the entry point of kind of every

00:22:02,110 --> 00:22:10,500
application web application system or i

00:22:05,200 --> 00:22:14,620
mean it's an important one if users

00:22:10,500 --> 00:22:15,370
would be allowed to search in their

00:22:14,620 --> 00:22:19,059
native land

00:22:15,370 --> 00:22:22,540
age the query being translated into

00:22:19,059 --> 00:22:24,520
English getting English results and then

00:22:22,540 --> 00:22:27,160
back translated into their native

00:22:24,520 --> 00:22:29,170
language so think if you come from as a

00:22:27,160 --> 00:22:33,280
refugee really is it's something that

00:22:29,170 --> 00:22:35,440
and we have such systems we have we have

00:22:33,280 --> 00:22:37,990
been talking on the Joshua mailing list

00:22:35,440 --> 00:22:40,720
with someone building such systems we're

00:22:37,990 --> 00:22:43,690
basically doing machine translation is

00:22:40,720 --> 00:22:46,480
not just a cool thing for precision and

00:22:43,690 --> 00:22:48,970
recall metrics for information from the

00:22:46,480 --> 00:22:53,410
information retrieval work but I've just

00:22:48,970 --> 00:22:59,380
think that help users and people at the

00:22:53,410 --> 00:23:01,870
end of their day so yeah that's I think

00:22:59,380 --> 00:23:11,580
an important point to to make when

00:23:01,870 --> 00:23:11,580
thinking about this is feature so and

00:23:11,820 --> 00:23:24,000
before going in a quick demo I think

00:23:17,070 --> 00:23:29,110
there are a few reference is here and

00:23:24,000 --> 00:23:31,120
credits to people that help setting up

00:23:29,110 --> 00:23:32,410
this list oh yeah these are the folks

00:23:31,120 --> 00:23:34,000
that helped us put together the stock

00:23:32,410 --> 00:23:36,460
join us here right here yeah

00:23:34,000 --> 00:23:39,429
hands up Matt post is the PNC chair of

00:23:36,460 --> 00:23:41,440
Apache you're sure and this is based on

00:23:39,429 --> 00:23:44,050
John Hopkins University Baltimore and a

00:23:41,440 --> 00:23:51,040
Bruno is in New Zealand he helped us

00:23:44,050 --> 00:23:53,880
with a slide deck yeah yeah so let's get

00:23:51,040 --> 00:23:53,880
us into

00:24:03,039 --> 00:24:12,620
okay so I have downloaded Wikipedia

00:24:08,510 --> 00:24:17,720
dance from for English English German

00:24:12,620 --> 00:24:22,070
and Italian and index them in Toulouse

00:24:17,720 --> 00:24:24,169
in and then downloaded joschwa decoders

00:24:22,070 --> 00:24:25,730
in the in this case we are using the

00:24:24,169 --> 00:24:28,390
decoder

00:24:25,730 --> 00:24:32,570
that's translate from English to German

00:24:28,390 --> 00:24:35,000
so setting up the decor we are setting

00:24:32,570 --> 00:24:39,590
up the decoder and then we are using the

00:24:35,000 --> 00:24:43,399
open up NLP unreleased language

00:24:39,590 --> 00:24:45,590
detection tool to do the language

00:24:43,399 --> 00:24:52,010
detection component that we we've seen

00:24:45,590 --> 00:25:00,679
in the in the diagram so and I mean this

00:24:52,010 --> 00:25:05,230
is I hope it reads you know no can you

00:25:00,679 --> 00:25:10,970
in the background read well enough okay

00:25:05,230 --> 00:25:12,830
okay so what are you basically that the

00:25:10,970 --> 00:25:15,130
important piece here is that we have

00:25:12,830 --> 00:25:18,230
that the listen query but we have

00:25:15,130 --> 00:25:22,190
sketched up and improved and improved

00:25:18,230 --> 00:25:25,130
query parser which does the flow that we

00:25:22,190 --> 00:25:26,929
have seen basically detecting the

00:25:25,130 --> 00:25:29,750
language in which the query was written

00:25:26,929 --> 00:25:32,539
and picking up the right machine

00:25:29,750 --> 00:25:35,779
translation model and doing the machine

00:25:32,539 --> 00:25:38,630
translation and adding the machine

00:25:35,779 --> 00:25:46,039
translated query as a boolean query for

00:25:38,630 --> 00:25:48,289
Racine so here we are writing in German

00:25:46,039 --> 00:25:53,750
so I don't know

00:25:48,289 --> 00:25:59,840
Berlin is wrong sorry in English and we

00:25:53,750 --> 00:26:04,789
want her yeah mixed up so here we didn't

00:25:59,840 --> 00:26:06,620
get anything different because basically

00:26:04,789 --> 00:26:10,190
restaurant is one of those words which

00:26:06,620 --> 00:26:11,320
doesn't have a lot of I mean it's kind

00:26:10,190 --> 00:26:14,720
of

00:26:11,320 --> 00:26:19,210
where that exists in in different

00:26:14,720 --> 00:26:22,070
languages still we'll see that we have

00:26:19,210 --> 00:26:34,940
results coming from both English and

00:26:22,070 --> 00:26:39,049
German content so while here what we

00:26:34,940 --> 00:26:47,000
have is that the that quick language was

00:26:39,049 --> 00:26:50,120
Type O for I am in Berlin is English and

00:26:47,000 --> 00:26:51,440
so I it gets translated into hitch pin

00:26:50,120 --> 00:26:54,140
in Berlin

00:26:51,440 --> 00:26:57,770
something like that and so the Racine

00:26:54,140 --> 00:27:03,049
query gets expanded so from text I am

00:26:57,770 --> 00:27:06,799
Berlin peckish pin Berlin and so here we

00:27:03,049 --> 00:27:10,010
get both the results from German and

00:27:06,799 --> 00:27:13,340
English but we put the German one

00:27:10,010 --> 00:27:16,280
upwards because it's basically the more

00:27:13,340 --> 00:27:21,950
relevant so exactly the same as in the

00:27:16,280 --> 00:27:26,809
case of color product yeah so that's and

00:27:21,950 --> 00:27:33,470
we can do a lot of such example queries

00:27:26,809 --> 00:27:35,600
and see how the search engine can angle

00:27:33,470 --> 00:27:46,720
and all this and the query gets

00:27:35,600 --> 00:27:46,720
translate translated yeah

00:27:48,550 --> 00:28:00,920
so here this bitter question can you

00:27:59,450 --> 00:28:02,240
repeat the question the question is how

00:28:00,920 --> 00:28:05,090
does the translation work if there's a

00:28:02,240 --> 00:28:07,250
typo in the user query right okay so the

00:28:05,090 --> 00:28:10,250
way you can do it you can do it either

00:28:07,250 --> 00:28:15,020
involve in two different ways at least

00:28:10,250 --> 00:28:18,860
so one way is to design dedicated spell

00:28:15,020 --> 00:28:21,130
checkers for for dedicated language but

00:28:18,860 --> 00:28:24,620
on the other and what you can also do is

00:28:21,130 --> 00:28:27,620
so when building the statistical machine

00:28:24,620 --> 00:28:31,610
translation model you can provide the

00:28:27,620 --> 00:28:33,050
language model with some parameters so

00:28:31,610 --> 00:28:36,080
something like you build an Engram

00:28:33,050 --> 00:28:39,800
language models when you can and in the

00:28:36,080 --> 00:28:43,880
hand-ground basically of like a three

00:28:39,800 --> 00:28:47,480
gram use placed a sentence in chunks of

00:28:43,880 --> 00:28:51,230
three characters each so in when when

00:28:47,480 --> 00:28:55,220
you use such language models when

00:28:51,230 --> 00:28:59,090
building the language pack the language

00:28:55,220 --> 00:29:01,340
model becomes sort of the statistical

00:28:59,090 --> 00:29:05,510
machine translation model becomes kind

00:29:01,340 --> 00:29:09,320
of less impacted by those typos because

00:29:05,510 --> 00:29:11,510
doesn't really rely on just words but on

00:29:09,320 --> 00:29:15,860
portions of words and probabilities of

00:29:11,510 --> 00:29:17,540
words of chunks of such chunks to to

00:29:15,860 --> 00:29:21,890
stick together in the same sentence

00:29:17,540 --> 00:29:26,450
in the same sequence so that's the way

00:29:21,890 --> 00:29:30,080
you can you can handle this yeah like so

00:29:26,450 --> 00:29:35,450
these do you have enough sign X 10

00:29:30,080 --> 00:29:39,440
minutes okay so in this this case is

00:29:35,450 --> 00:29:42,050
slightly different so we have that we

00:29:39,440 --> 00:29:44,630
write we do the other thing so we write

00:29:42,050 --> 00:29:48,350
in our native language and we will get

00:29:44,630 --> 00:29:52,270
the results in in English language and

00:29:48,350 --> 00:29:56,470
again this I think is you can pick of

00:29:52,270 --> 00:29:59,650
useful scenarios for this as well so

00:29:56,470 --> 00:30:03,650
again think about

00:29:59,650 --> 00:30:05,750
refugees or people that looks for asylum

00:30:03,650 --> 00:30:08,150
in a certain country and need some

00:30:05,750 --> 00:30:13,220
paperwork to be done and so we need to

00:30:08,150 --> 00:30:16,550
get the results some some forms to fill

00:30:13,220 --> 00:30:18,980
in and print and they need the one in in

00:30:16,550 --> 00:30:24,970
English for example if they want to go

00:30:18,980 --> 00:30:41,059
to England so as soon as it loads yeah

00:30:24,970 --> 00:30:43,400
and so I mean yeah yeah does this

00:30:41,059 --> 00:30:46,340
already support the phrase based model

00:30:43,400 --> 00:30:48,230
and yeah also if you can in specific

00:30:46,340 --> 00:30:50,150
language domains if you can insert some

00:30:48,230 --> 00:30:51,550
some language phrases which are not like

00:30:50,150 --> 00:30:55,790
fashion language for example or

00:30:51,550 --> 00:30:57,679
sometimes you can you repeat that neh

00:30:55,790 --> 00:31:00,160
can you teach the model to learn more

00:30:57,679 --> 00:31:02,900
words is it though if it's an online

00:31:00,160 --> 00:31:04,820
kind of not on learning let's say I have

00:31:02,900 --> 00:31:06,950
my own dictionary of a language there's

00:31:04,820 --> 00:31:08,750
not a general language so can I ingest

00:31:06,950 --> 00:31:10,670
yeah type of language inside and if you

00:31:08,750 --> 00:31:12,260
support the phrase based model outside

00:31:10,670 --> 00:31:13,940
of the box world languages so most of

00:31:12,260 --> 00:31:15,559
those language packs or phrases models I

00:31:13,940 --> 00:31:17,720
could say phrase based and I think

00:31:15,559 --> 00:31:18,920
syntax based it's kind of a mix so

00:31:17,720 --> 00:31:20,570
definitely can do that and the more

00:31:18,920 --> 00:31:22,970
content you have your the better much

00:31:20,570 --> 00:31:25,160
better your praise or serve and so and

00:31:22,970 --> 00:31:27,200
we also have discussed on the mailing

00:31:25,160 --> 00:31:30,920
list the possibility of introducing

00:31:27,200 --> 00:31:33,140
something like so you build your model

00:31:30,920 --> 00:31:35,600
from your data first and then at some

00:31:33,140 --> 00:31:38,660
point you realize you have to adjust it

00:31:35,600 --> 00:31:42,800
or feed in something else so we talked

00:31:38,660 --> 00:31:44,929
about also including some sort of rules

00:31:42,800 --> 00:31:47,090
or things that you can add afterwards to

00:31:44,929 --> 00:31:49,070
the model so that it's not like online

00:31:47,090 --> 00:31:51,020
learning but I mean you can still do

00:31:49,070 --> 00:31:55,940
something on an existing model without

00:31:51,020 --> 00:31:57,380
having to retrain the whole thing I just

00:31:55,940 --> 00:31:59,510
want to follow up in that so let's say I

00:31:57,380 --> 00:32:01,130
have one keyword in the German language

00:31:59,510 --> 00:32:02,570
do I supply all the possible

00:32:01,130 --> 00:32:04,160
translations for languages and that

00:32:02,570 --> 00:32:08,090
would be use directly in the phrase base

00:32:04,160 --> 00:32:10,370
model to sort of work so you get a list

00:32:08,090 --> 00:32:12,950
of candidates with scores and so

00:32:10,370 --> 00:32:15,350
basically there you can either decide

00:32:12,950 --> 00:32:18,350
you what to do with it from the from the

00:32:15,350 --> 00:32:20,269
model from the output basically of the

00:32:18,350 --> 00:32:23,330
Joshua decode that I want to teach I

00:32:20,269 --> 00:32:25,460
wanted to I mean from so I had my own

00:32:23,330 --> 00:32:27,440
language I mean and I want to teach

00:32:25,460 --> 00:32:28,850
various foreign graduate on models for

00:32:27,440 --> 00:32:30,409
the different languages and you can

00:32:28,850 --> 00:32:31,789
create the translation from your

00:32:30,409 --> 00:32:33,049
language to which our language the

00:32:31,789 --> 00:32:49,760
target language is perfect thank you

00:32:33,049 --> 00:32:54,669
yeah yeah sorry so I don't know it's

00:32:49,760 --> 00:32:54,669
something like an Italian pizza

00:32:59,320 --> 00:33:03,190
so this is something like I need

00:33:01,180 --> 00:33:04,930
documents to to get into Berlin

00:33:03,190 --> 00:33:14,560
something like that or bit paperwork or

00:33:04,930 --> 00:33:17,710
something like that so and here we have

00:33:14,560 --> 00:33:19,630
the English translation so I forgot to

00:33:17,710 --> 00:33:23,680
say that this one translated from

00:33:19,630 --> 00:33:25,600
Italian to English so here the document

00:33:23,680 --> 00:33:28,690
apparently no gets translated into

00:33:25,600 --> 00:33:31,990
documents to enter Berlin and again the

00:33:28,690 --> 00:33:37,150
machine query gets announced and here I

00:33:31,990 --> 00:33:40,930
get italian documents but yeah that's

00:33:37,150 --> 00:33:43,720
basically just because we asked us does

00:33:40,930 --> 00:33:46,210
settings of putting italian document

00:33:43,720 --> 00:33:48,730
first but we also have a busy medical

00:33:46,210 --> 00:33:58,140
documents first but we also have the

00:33:48,730 --> 00:34:01,840
english one coming so I'm sure someone

00:33:58,140 --> 00:34:06,970
may ask about neuro machine translation

00:34:01,840 --> 00:34:11,800
so I want to prefer to get this question

00:34:06,970 --> 00:34:14,800
in advance so we asked the discussed

00:34:11,800 --> 00:34:17,140
about about this in the george for

00:34:14,800 --> 00:34:22,390
mailing list so at the moment Joshua is

00:34:17,140 --> 00:34:24,910
is not neural neural network based it's

00:34:22,390 --> 00:34:27,850
just based on statistical models

00:34:24,910 --> 00:34:33,700
statistical models like suniye explained

00:34:27,850 --> 00:34:36,760
beforehand but I mean I've read a bit

00:34:33,700 --> 00:34:39,370
some papers about that we we've read

00:34:36,760 --> 00:34:41,500
some papers about that and while I think

00:34:39,370 --> 00:34:44,590
that there are very interesting things

00:34:41,500 --> 00:34:49,120
about about those models like for

00:34:44,590 --> 00:34:51,910
example a paper claim to be able to

00:34:49,120 --> 00:34:54,520
extract something like a meta language

00:34:51,910 --> 00:34:58,720
that can be used in all kinds of

00:34:54,520 --> 00:35:02,830
translations I don't remember if it was

00:34:58,720 --> 00:35:06,870
the mind related but basically the the

00:35:02,830 --> 00:35:11,560
key thing is I mean I would suggest that

00:35:06,870 --> 00:35:12,520
we think to this not not not just to the

00:35:11,560 --> 00:35:16,690
tools let's

00:35:12,520 --> 00:35:20,050
so here we've presented the demo built

00:35:16,690 --> 00:35:22,570
upon the scene open NLP and Joshua but

00:35:20,050 --> 00:35:25,180
it could be also something different I

00:35:22,570 --> 00:35:28,270
mean and I don't think it's so just a

00:35:25,180 --> 00:35:31,510
matter of what's better but what best

00:35:28,270 --> 00:35:33,580
suits your needs and and stuff like that

00:35:31,510 --> 00:35:44,170
so rather than so focus on the user

00:35:33,580 --> 00:35:45,520
rather than the tools yeah hello so I

00:35:44,170 --> 00:35:47,470
have question regarding overlapping

00:35:45,520 --> 00:35:50,349
vocabulary of the languages so during

00:35:47,470 --> 00:35:52,660
the language section in gin now if let's

00:35:50,349 --> 00:35:55,270
say German and English there are some

00:35:52,660 --> 00:35:57,490
words overlapping then how do you detect

00:35:55,270 --> 00:35:58,930
that it's a German or it's English or if

00:35:57,490 --> 00:36:01,750
the word so you mean in the languages

00:35:58,930 --> 00:36:03,580
detection or in the building the machine

00:36:01,750 --> 00:36:06,430
translation model in language detection

00:36:03,580 --> 00:36:07,660
maybe okay you say overlapping are we

00:36:06,430 --> 00:36:10,750
talking about the same word in two

00:36:07,660 --> 00:36:14,410
languages yeah so for example whoa it

00:36:10,750 --> 00:36:15,940
was like we have it sounds like who in

00:36:14,410 --> 00:36:18,490
English but you write like very injure

00:36:15,940 --> 00:36:21,130
so the the one way to disambiguate that

00:36:18,490 --> 00:36:22,990
is to go with larger and character grams

00:36:21,130 --> 00:36:25,150
and go with more data and more character

00:36:22,990 --> 00:36:26,440
diagrams right now so that we can design

00:36:25,150 --> 00:36:28,270
bigger in English and German when you

00:36:26,440 --> 00:36:30,520
have similar words showing up in both so

00:36:28,270 --> 00:36:32,109
you go with the phrases right I mean it

00:36:30,520 --> 00:36:34,119
don't go by the word go by the phrase

00:36:32,109 --> 00:36:37,300
it's part of yeah it's the context that

00:36:34,119 --> 00:36:39,730
is a context up so you cannot say if the

00:36:37,300 --> 00:36:43,300
Berlin is German or English word just by

00:36:39,730 --> 00:36:45,070
Berlin even you you as a human this is

00:36:43,300 --> 00:36:51,599
for language addiction right not ever so

00:36:45,070 --> 00:36:54,930
idea yeah Yan could say better so

00:36:51,599 --> 00:36:54,930
regards yeah

00:36:58,250 --> 00:37:08,220
so going back to machine translation in

00:37:02,580 --> 00:37:10,830
the so back to the context of machine

00:37:08,220 --> 00:37:14,040
translation in search are I think that

00:37:10,830 --> 00:37:16,050
the biggest obstacle to our being able

00:37:14,040 --> 00:37:19,950
to support the features that you

00:37:16,050 --> 00:37:25,110
described earlier is as always getting

00:37:19,950 --> 00:37:29,340
parallel corpora are there may be ways

00:37:25,110 --> 00:37:32,970
or techniques in which one might be able

00:37:29,340 --> 00:37:36,090
to construct more easily a parallel

00:37:32,970 --> 00:37:39,870
corpus for for the search queries in

00:37:36,090 --> 00:37:44,340
particular if if the task at hand is to

00:37:39,870 --> 00:37:49,350
first translate the query before to

00:37:44,340 --> 00:37:53,220
search in other languages maybe well as

00:37:49,350 --> 00:37:57,530
I forget as usual I mean you're right

00:37:53,220 --> 00:38:02,820
it's an issue and especially I mean

00:37:57,530 --> 00:38:05,100
short text is a challenge for a lot of

00:38:02,820 --> 00:38:07,830
NLP related techniques or statistical

00:38:05,100 --> 00:38:10,220
basic techniques I mean like doing

00:38:07,830 --> 00:38:13,740
sentiment analysis on Twitter is not

00:38:10,220 --> 00:38:17,130
difficult as difficult as it is for

00:38:13,740 --> 00:38:20,010
large stocks because you have less

00:38:17,130 --> 00:38:24,000
context there so I mean yeah at the

00:38:20,010 --> 00:38:26,280
moment I don't have a correct or I don't

00:38:24,000 --> 00:38:29,220
know proper answer to say yeah there is

00:38:26,280 --> 00:38:32,520
this very nice way which you can do with

00:38:29,220 --> 00:38:35,310
with with small text but I mean for what

00:38:32,520 --> 00:38:37,050
I can say is for example has been

00:38:35,310 --> 00:38:42,780
experimenting with neural networks for

00:38:37,050 --> 00:38:45,200
other kind of topics and because yeah

00:38:42,780 --> 00:38:49,950
you know nowadays it's all about that

00:38:45,200 --> 00:38:52,680
and it's basically this I mean it's

00:38:49,950 --> 00:38:54,450
basically the same yeah you need to have

00:38:52,680 --> 00:38:57,120
enough data to have something that

00:38:54,450 --> 00:39:02,790
really works in the end and it's still

00:38:57,120 --> 00:39:05,250
an issue with open data so we are

00:39:02,790 --> 00:39:08,150
poaching the end we can still take one

00:39:05,250 --> 00:39:08,150
maybe two more questions

00:39:09,270 --> 00:39:12,310
let's connect the government ears like

00:39:11,890 --> 00:39:14,770
that

00:39:12,310 --> 00:39:17,590
yeah thanks I'm just a very quick

00:39:14,770 --> 00:39:19,420
follow-up question on that um what's the

00:39:17,590 --> 00:39:20,890
culprit that you use for the for the

00:39:19,420 --> 00:39:24,880
ready-made language banks that you

00:39:20,890 --> 00:39:29,260
included ah it's a nice question there

00:39:24,880 --> 00:39:32,740
is a wiki page right back it's gonna

00:39:29,260 --> 00:39:40,830
slide that crier I just go back yeah I

00:39:32,740 --> 00:39:40,830
know yeah in language packs yeah

00:39:52,440 --> 00:40:05,280
I mean but you can't I succeeded okay so

00:40:03,510 --> 00:40:05,940
we have about 264 language packs

00:40:05,280 --> 00:40:07,830
pre-canned

00:40:05,940 --> 00:40:09,960
and crane for different conversions

00:40:07,830 --> 00:40:11,900
English English Arabic to English of

00:40:09,960 --> 00:40:19,820
whatever so 64 of those combinations

00:40:11,900 --> 00:40:19,820
yeah okay so one more one last question

00:40:25,160 --> 00:40:30,780
so you showed languages that have a very

00:40:28,830 --> 00:40:32,760
similar structure like Italian and

00:40:30,780 --> 00:40:34,500
German in English like right from the

00:40:32,760 --> 00:40:36,210
general principle they're pretty similar

00:40:34,500 --> 00:40:40,620
as a whole well does it work with say

00:40:36,210 --> 00:40:42,510
Chinese or African languages if you have

00:40:40,620 --> 00:40:47,910
the language model for those languages

00:40:42,510 --> 00:40:50,370
yes let's scroll down now there is a

00:40:47,910 --> 00:40:50,880
rabbit that there is Russian I've used

00:40:50,370 --> 00:40:56,880
them

00:40:50,880 --> 00:41:00,780
the Arabic one at work and the results

00:40:56,880 --> 00:41:05,390
were good enough so that's basically

00:41:00,780 --> 00:41:09,930
what I what I can do I mean there's okay

00:41:05,390 --> 00:41:13,950
yeah this was previous so this this page

00:41:09,930 --> 00:41:16,580
was done incrementally okay so at some

00:41:13,950 --> 00:41:18,930
point I am it because a lot of them here

00:41:16,580 --> 00:41:21,660
but yeah basically the reason why I

00:41:18,930 --> 00:41:24,000
chose those we chose those languages is

00:41:21,660 --> 00:41:25,800
because we can cope I mean yeah we both

00:41:24,000 --> 00:41:31,200
can cope with I can cope with India or

00:41:25,800 --> 00:41:32,760
something like so cool oh thank you

00:41:31,200 --> 00:41:37,670
thank you for the talk and let's give

00:41:32,760 --> 00:41:37,670

YouTube URL: https://www.youtube.com/watch?v=ZrWxySF-9KY


