Title: Berlin Buzzwords 2019: Debmalya Biswas & Louis Baligand – Building an enterprise NLSE ... #bbuzz
Publication date: 2019-06-20
Playlist: Berlin Buzzwords 2019 #bbuzz
Description: 
	Debmalya Biswas and Louis Baligand talking about "Building an enterprise Natural Language Search Engine with ElasticSearch and Facebook’s DrQA".

Modern search engines leverage Natural Language Processing (NLP) and Machine Learning (ML) to improve relevance of results. In this presentation, we focus on the specific field of ‘Enterprise Search’, whose primary goal is to make domain specific company data and documents readily accessible to employees to improve their productivity and promote collaboration. Indeed, any large organization produces vast amounts of documentation about their specific systems, technologies and processes. The question then is - “How can we speed up search-driven activities and enhance user experience for the enterprise?”

Facebook AI research team has developed and open sourced a tool to answer questions by reading Wikipedia articles, called DrQA (Chen, et al. 2017). DrQA is based on a 2-stage Q&A pipeline: (i) Retriever: retrieve the top-k relevant documents (pages), followed by (ii) Reader: determining the most relevant answer span among the retrieved documents (pages). We applied it on an enterprise use-case to search over machine manuals used by factory operators.

We present an architecture integrating ElasticSearch in the DrQA pipeline, which has been contributed upstream and is now available from the official DrQA github repository. The end result is a very scalable search engine that can be deployed on any document repository in your enterprise containing Microsoft Office docs, ppts, emails, pdf documents, etc. Simply point it to your ElasticSearch index and it will be able to provide ‘very precise’ answers based on your documents, thanks to the pre-trained Deep Learning Q&A model of DrQA. We discuss the learnings along the creation and the limitations of such an engine, e.g. scenarios where it excels by identifying precise answers and how it performs compared to a non-ML approach or a typical keyword based search.

Read more:
https://2019.berlinbuzzwords.de/19/session/building-enterprise-natural-language-search-engine-elasticsearch-and-facebooks-drqa

About Debmalya Biswas:
https://2019.berlinbuzzwords.de/users/debmalya-biswas

About Louis Baligand:
https://2019.berlinbuzzwords.de/users/louis-baligand

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	00:00:06,620 --> 00:00:13,190
so welcome everyone and thanks for

00:00:09,469 --> 00:00:14,969
coming so please don't worry about

00:00:13,190 --> 00:00:20,070
tighter I think it will be

00:00:14,969 --> 00:00:22,590
as we go along the presentation so to

00:00:20,070 --> 00:00:26,039
start with just a few quick words of

00:00:22,590 --> 00:00:28,169
introductions the Amalia just called me

00:00:26,039 --> 00:00:31,680
Deb and I will be co-presenting with

00:00:28,169 --> 00:00:35,489
Louis we are both part of the let's say

00:00:31,680 --> 00:00:37,410
PMI AI data science group and the slight

00:00:35,489 --> 00:00:39,840
in let's say advertisement that we

00:00:37,410 --> 00:00:44,340
wanted to do here is our open source

00:00:39,840 --> 00:00:47,219
let's say contributions page I think

00:00:44,340 --> 00:00:49,199
it's fair to mention that you know this

00:00:47,219 --> 00:00:51,839
is kind of a journey for us as well

00:00:49,199 --> 00:00:54,089
because you know to come from let's say

00:00:51,839 --> 00:00:55,949
a big company organization where open

00:00:54,089 --> 00:00:57,749
source was banned or you know not

00:00:55,949 --> 00:01:00,839
allowed to be used at all five years

00:00:57,749 --> 00:01:02,909
back to where we are now kind of like

00:01:00,839 --> 00:01:04,830
Isabel was mentioning in our keynote

00:01:02,909 --> 00:01:07,170
today where we are trying to let's say

00:01:04,830 --> 00:01:10,409
apply open source embark on open source

00:01:07,170 --> 00:01:13,590
journey contribute to open source even

00:01:10,409 --> 00:01:15,479
use a lot of open source internally so I

00:01:13,590 --> 00:01:19,680
think it's a bit of journey for us and

00:01:15,479 --> 00:01:21,660
we are all learning here and so I would

00:01:19,680 --> 00:01:23,640
welcome you to check the site out all

00:01:21,660 --> 00:01:26,280
our contributions including the one we

00:01:23,640 --> 00:01:31,140
will talk about today are here so please

00:01:26,280 --> 00:01:42,420
join please provide feedback so getting

00:01:31,140 --> 00:01:44,250
back to topic so getting back to the

00:01:42,420 --> 00:01:47,220
topic that we want to talk about today

00:01:44,250 --> 00:01:51,570
so enterprise search and why are we

00:01:47,220 --> 00:01:53,550
talking about it now so I mean search is

00:01:51,570 --> 00:01:55,200
not new one and with Google and all we

00:01:53,550 --> 00:01:57,330
have been searching for quite some time

00:01:55,200 --> 00:02:01,320
and it works so what is new with

00:01:57,330 --> 00:02:03,750
Enterprise Search so I mean in terms of

00:02:01,320 --> 00:02:05,640
definition it's just that you know just

00:02:03,750 --> 00:02:08,280
with the AI let's say machine learning

00:02:05,640 --> 00:02:10,590
natural language processing hype it's

00:02:08,280 --> 00:02:12,540
basically an application of whatever

00:02:10,590 --> 00:02:14,849
advancement is happening in natural

00:02:12,540 --> 00:02:17,459
language search machine learning to

00:02:14,849 --> 00:02:19,709
search and then it's applying it in the

00:02:17,459 --> 00:02:22,560
whole pipeline from ingesting different

00:02:19,709 --> 00:02:24,569
types of documents to do you know like

00:02:22,560 --> 00:02:26,760
understanding what type of document it

00:02:24,569 --> 00:02:27,950
is to understanding what the user is

00:02:26,760 --> 00:02:29,870
trying to say

00:02:27,950 --> 00:02:32,540
and then even like using machine

00:02:29,870 --> 00:02:34,340
learning to let's say organize the

00:02:32,540 --> 00:02:36,440
information which is like auto tagging

00:02:34,340 --> 00:02:38,300
and things like that so it's basically

00:02:36,440 --> 00:02:42,459
the application of NLP and machine

00:02:38,300 --> 00:02:46,760
learning to the whole pipeline of search

00:02:42,459 --> 00:02:50,080
and why is Enterprise Search important

00:02:46,760 --> 00:02:53,750
so I mean if you work in a big company

00:02:50,080 --> 00:02:55,610
it's not very uncommon to find let's say

00:02:53,750 --> 00:02:57,739
people who are always complaining that

00:02:55,610 --> 00:02:59,360
you know I'm unable to find any internal

00:02:57,739 --> 00:03:02,090
information it's you know the our

00:02:59,360 --> 00:03:03,950
internal knowledge bases systems are

00:03:02,090 --> 00:03:06,440
like a black hole information goes in

00:03:03,950 --> 00:03:08,870
and you cannot find anything so

00:03:06,440 --> 00:03:11,569
Enterprise Search is I would say a bit

00:03:08,870 --> 00:03:13,670
more of a you know big company kind of

00:03:11,569 --> 00:03:16,880
problem where a lot of information is

00:03:13,670 --> 00:03:18,890
being generated but there's either no

00:03:16,880 --> 00:03:20,510
way to or let's say people are wasting

00:03:18,890 --> 00:03:22,519
too much time in trying to find the

00:03:20,510 --> 00:03:24,500
relevant information and it's very

00:03:22,519 --> 00:03:26,989
difficult to find it find it in one

00:03:24,500 --> 00:03:28,640
place find it in the format you need so

00:03:26,989 --> 00:03:30,530
it's a very relevant problem and that's

00:03:28,640 --> 00:03:36,769
why there's a whole let's say domain

00:03:30,530 --> 00:03:38,299
that is building up around it so so we

00:03:36,769 --> 00:03:40,760
might question that okay again going

00:03:38,299 --> 00:03:42,829
back to the back to the question that ok

00:03:40,760 --> 00:03:45,530
we have web search we have you know

00:03:42,829 --> 00:03:47,120
Google we have Bing which you know works

00:03:45,530 --> 00:03:51,260
to a certain extent so what is different

00:03:47,120 --> 00:03:53,260
with different with enterprise search so

00:03:51,260 --> 00:03:56,959
we go through a few parameters on the

00:03:53,260 --> 00:03:58,970
positive side there's lot less data in

00:03:56,959 --> 00:04:01,160
the enterprise ok you still have a lot

00:03:58,970 --> 00:04:03,590
of data it's kind of a black hole but

00:04:01,160 --> 00:04:05,120
it's nothing compared to the data at the

00:04:03,590 --> 00:04:07,970
amount of data that is being generated

00:04:05,120 --> 00:04:09,950
on the web so you would say that this is

00:04:07,970 --> 00:04:15,019
a positive side there's less data to

00:04:09,950 --> 00:04:16,849
search what is maybe on the negative

00:04:15,019 --> 00:04:19,940
side or maybe you can say it's a bit on

00:04:16,849 --> 00:04:21,859
the gray side is that your end let's say

00:04:19,940 --> 00:04:24,530
the end customers of your search are

00:04:21,859 --> 00:04:26,270
your employees and as you probably all

00:04:24,530 --> 00:04:28,550
know I mean employees are the most

00:04:26,270 --> 00:04:30,560
critical of their enterprise systems so

00:04:28,550 --> 00:04:32,300
they are not easy to please and they

00:04:30,560 --> 00:04:34,310
expect a lot of things to be done for

00:04:32,300 --> 00:04:36,710
them whereas if you go to Google you're

00:04:34,310 --> 00:04:39,080
probably willing to put the extra effort

00:04:36,710 --> 00:04:41,480
to you know find the right keywords and

00:04:39,080 --> 00:04:43,610
search again but as an employee you

00:04:41,480 --> 00:04:45,470
fact whatever search engine you are

00:04:43,610 --> 00:04:50,660
using to give you the right data the

00:04:45,470 --> 00:04:53,510
first time so the other thing which also

00:04:50,660 --> 00:04:55,310
makes it a bit more difficult is the

00:04:53,510 --> 00:04:58,550
different types of data that we need to

00:04:55,310 --> 00:05:01,280
search so in case of Google let's say

00:04:58,550 --> 00:05:03,020
simplified version okay you can argue

00:05:01,280 --> 00:05:04,940
that there are different platforms and

00:05:03,020 --> 00:05:07,970
things like that but end of the day it's

00:05:04,940 --> 00:05:10,730
all web documents whereas in case of a

00:05:07,970 --> 00:05:12,140
company you sometimes you need to you

00:05:10,730 --> 00:05:14,360
know your search engine needs to

00:05:12,140 --> 00:05:16,040
understand and work over everything from

00:05:14,360 --> 00:05:18,050
let's say PDF documents to Word

00:05:16,040 --> 00:05:21,590
documents to the engineering CatDog

00:05:18,050 --> 00:05:24,020
diagrams to everything so the ingestion

00:05:21,590 --> 00:05:25,700
of data and the different types of let's

00:05:24,020 --> 00:05:28,070
say formats that it needs to accommodate

00:05:25,700 --> 00:05:32,690
is really diverse and this makes the

00:05:28,070 --> 00:05:34,430
whole thing quite complicated the other

00:05:32,690 --> 00:05:36,320
thing is like I mentioned is that in

00:05:34,430 --> 00:05:39,020
most big organizations there are very

00:05:36,320 --> 00:05:41,000
few you know like tags how to organize

00:05:39,020 --> 00:05:43,060
data so when people are generating

00:05:41,000 --> 00:05:45,710
documents they are hardly tagging data

00:05:43,060 --> 00:05:48,230
so the data is kind of out there is

00:05:45,710 --> 00:05:51,110
unstructured data and there's so there's

00:05:48,230 --> 00:05:53,090
no you know let's say not a lot of

00:05:51,110 --> 00:05:54,410
investment into tagging this data which

00:05:53,090 --> 00:05:56,540
kind of makes searching even more

00:05:54,410 --> 00:05:58,100
difficult on the other side of course

00:05:56,540 --> 00:06:00,320
there are huge investments in search

00:05:58,100 --> 00:06:01,820
engine optimization where you know I

00:06:00,320 --> 00:06:04,370
mean if you if you're it's a completely

00:06:01,820 --> 00:06:07,670
different field in altogether but you

00:06:04,370 --> 00:06:09,470
try to make your website data or let's

00:06:07,670 --> 00:06:11,540
say whatever data you put on your

00:06:09,470 --> 00:06:13,520
website much more accessible to two

00:06:11,540 --> 00:06:15,740
search engines so it's kind of the other

00:06:13,520 --> 00:06:17,990
way around where it enterprises you

00:06:15,740 --> 00:06:19,520
basically do absolutely zero whereas on

00:06:17,990 --> 00:06:21,410
the web search side you are really

00:06:19,520 --> 00:06:25,880
trying to make your data more accessible

00:06:21,410 --> 00:06:27,440
to search engines the other one is so

00:06:25,880 --> 00:06:30,140
rule-based access control and security

00:06:27,440 --> 00:06:32,300
so again in an enterprise you cannot

00:06:30,140 --> 00:06:34,310
make like all data available to everyone

00:06:32,300 --> 00:06:36,680
so you need to put like another layer of

00:06:34,310 --> 00:06:38,630
access control or visibility on top of

00:06:36,680 --> 00:06:42,230
the data the search results that you

00:06:38,630 --> 00:06:44,660
show and as we all know like role based

00:06:42,230 --> 00:06:47,990
access control or security on top of

00:06:44,660 --> 00:06:50,050
index data is not a done deal so we are

00:06:47,990 --> 00:06:52,790
still you know the technology of how to

00:06:50,050 --> 00:06:54,510
let's say protect access to index data

00:06:52,790 --> 00:06:59,130
is not know

00:06:54,510 --> 00:07:01,740
fully there yet and finally this is

00:06:59,130 --> 00:07:03,660
again a bit of like what we face and

00:07:01,740 --> 00:07:05,520
maybe in other big organizations that

00:07:03,660 --> 00:07:07,740
you see as well people expect search to

00:07:05,520 --> 00:07:09,690
work but there's no like let's say

00:07:07,740 --> 00:07:14,400
commitment to consider search as a key

00:07:09,690 --> 00:07:16,560
let's say you know like a key stream one

00:07:14,400 --> 00:07:18,600
its own and to put like dedicated effort

00:07:16,560 --> 00:07:21,240
behind it so this is also what we see as

00:07:18,600 --> 00:07:23,370
a bit of like you know the challenges on

00:07:21,240 --> 00:07:28,710
why we enterprise search is still so

00:07:23,370 --> 00:07:30,330
difficult and on top of this so on all

00:07:28,710 --> 00:07:32,120
the challenges we want to enable

00:07:30,330 --> 00:07:34,890
something called natural language search

00:07:32,120 --> 00:07:36,360
so I mean if you think about how you

00:07:34,890 --> 00:07:38,190
search geek Google today

00:07:36,360 --> 00:07:40,140
I mean you probably don't think about it

00:07:38,190 --> 00:07:41,850
or we are so used to it that you know

00:07:40,140 --> 00:07:44,700
you just think of the keywords and enter

00:07:41,850 --> 00:07:46,770
the right keywords but ideally what we

00:07:44,700 --> 00:07:48,870
would like to do in future with advanced

00:07:46,770 --> 00:07:50,130
let's say advancements in natural

00:07:48,870 --> 00:07:51,660
language processing is to enable

00:07:50,130 --> 00:07:54,300
something called natural language search

00:07:51,660 --> 00:07:55,890
which is where you know just like we are

00:07:54,300 --> 00:07:59,070
talking here you would like to be able

00:07:55,890 --> 00:08:01,370
to enter the just a full sentence and it

00:07:59,070 --> 00:08:04,740
should answer you the exact answer

00:08:01,370 --> 00:08:06,660
so I mean Google supports it to some

00:08:04,740 --> 00:08:08,490
extent it shows the relevant paragraphs

00:08:06,660 --> 00:08:10,260
now but if you I don't know if you can

00:08:08,490 --> 00:08:12,150
read the question but it's like the what

00:08:10,260 --> 00:08:14,310
is the most dangerous part of a fire and

00:08:12,150 --> 00:08:16,680
it's actually smoke which is there in

00:08:14,310 --> 00:08:19,230
the answer but ideally dancer should be

00:08:16,680 --> 00:08:21,660
just more so I think we are not there

00:08:19,230 --> 00:08:23,340
yet where it works where it can give

00:08:21,660 --> 00:08:24,930
very precise answers as let's say

00:08:23,340 --> 00:08:26,880
general knowledge kind of questions like

00:08:24,930 --> 00:08:29,730
you know who is related to whom who want

00:08:26,880 --> 00:08:31,950
this more this kind of things but as you

00:08:29,730 --> 00:08:34,110
know behind this is a is something

00:08:31,950 --> 00:08:36,180
called knowledge graphs which are often

00:08:34,110 --> 00:08:38,370
like manually curated by a lot of people

00:08:36,180 --> 00:08:41,160
so it's not like a fully automated

00:08:38,370 --> 00:08:42,870
process either so I mean fully natural

00:08:41,160 --> 00:08:48,030
language search is still bit

00:08:42,870 --> 00:08:50,070
experimental and we just wanted to also

00:08:48,030 --> 00:08:51,690
highlight something that you know the

00:08:50,070 --> 00:08:54,300
whole natural language search and chat

00:08:51,690 --> 00:08:56,460
BOTS also have a nice intersection so

00:08:54,300 --> 00:08:58,650
again I mean I'm quite sure you have all

00:08:56,460 --> 00:09:00,990
heard about chat BOTS maybe used it to

00:08:58,650 --> 00:09:03,620
some extent and be frustrated with it

00:09:00,990 --> 00:09:07,350
which is kind of the general experience

00:09:03,620 --> 00:09:08,850
but I think what what we just wanted to

00:09:07,350 --> 00:09:11,550
show here is

00:09:08,850 --> 00:09:13,710
there's a nice intersection of chatbots

00:09:11,550 --> 00:09:15,290
and natural language search although it

00:09:13,710 --> 00:09:17,970
seems that the people in the field

00:09:15,290 --> 00:09:19,710
there's people working on chatbots in

00:09:17,970 --> 00:09:20,970
let's say independently and people

00:09:19,710 --> 00:09:23,880
working on natural language search

00:09:20,970 --> 00:09:25,170
independently without let's say focusing

00:09:23,880 --> 00:09:28,050
on the intersection which is quite

00:09:25,170 --> 00:09:30,300
interesting so if you consider let's say

00:09:28,050 --> 00:09:33,029
you know in an enterprise what is

00:09:30,300 --> 00:09:35,100
usually a chatbot use case more often

00:09:33,029 --> 00:09:37,410
than not it's basically the effect use

00:09:35,100 --> 00:09:38,880
that you used to have which is basically

00:09:37,410 --> 00:09:40,620
your simple light you know question

00:09:38,880 --> 00:09:42,450
answer you're trying to automate that in

00:09:40,620 --> 00:09:43,950
the form of a chat pod so think of the

00:09:42,450 --> 00:09:45,900
effect users more like rule-based

00:09:43,950 --> 00:09:49,920
engines you give a specific question you

00:09:45,900 --> 00:09:52,290
get a hard-coded answer the current chat

00:09:49,920 --> 00:09:54,690
BOTS the I'm not talking about the ones

00:09:52,290 --> 00:09:56,400
you see in ICL are or you know you the

00:09:54,690 --> 00:09:58,290
ones not in EPS but let's say the

00:09:56,400 --> 00:10:00,210
current chat BOTS that are available in

00:09:58,290 --> 00:10:01,680
the Watson there's your Google dialog

00:10:00,210 --> 00:10:03,270
flow which you use in the enterprise

00:10:01,680 --> 00:10:06,029
today are something called intent based

00:10:03,270 --> 00:10:08,310
chat BOTS so in these chat pods you

00:10:06,029 --> 00:10:10,680
usually start from the Q&A which is

00:10:08,310 --> 00:10:12,480
basically you know you go through what

00:10:10,680 --> 00:10:15,779
the users have been asking in the FAQ

00:10:12,480 --> 00:10:17,670
type of questions you provide it you

00:10:15,779 --> 00:10:19,620
configure your chat bot engine with that

00:10:17,670 --> 00:10:22,410
you provide variations let's say five

00:10:19,620 --> 00:10:25,350
variations of the the different

00:10:22,410 --> 00:10:27,420
questions and then you kind of train

00:10:25,350 --> 00:10:30,779
your chat bot engine based on that and

00:10:27,420 --> 00:10:33,029
then the expectation is or the only work

00:10:30,779 --> 00:10:35,370
it does is that it's able let's say you

00:10:33,029 --> 00:10:37,350
give five variations it's able to

00:10:35,370 --> 00:10:39,300
understand fifty variations out of it by

00:10:37,350 --> 00:10:42,839
applying statistical let's say closeness

00:10:39,300 --> 00:10:46,589
measures tf-idf things like that you

00:10:42,839 --> 00:10:47,730
know so all it is able to do is to work

00:10:46,589 --> 00:10:50,459
a bit on the natural language

00:10:47,730 --> 00:10:52,470
understanding part to see if the query

00:10:50,459 --> 00:10:54,330
you asked is close to the query it has

00:10:52,470 --> 00:10:57,230
been teint trained on the questions it

00:10:54,330 --> 00:10:59,790
has been trained on so it's very limited

00:10:57,230 --> 00:11:02,100
but if you now think about what we try

00:10:59,790 --> 00:11:03,930
to do with natural language search so

00:11:02,100 --> 00:11:05,910
natural language search is basically if

00:11:03,930 --> 00:11:07,470
you could just provide the documents

00:11:05,910 --> 00:11:09,810
don't worry about extracting what

00:11:07,470 --> 00:11:11,790
questions people might ask about them if

00:11:09,810 --> 00:11:14,040
you could just ingest the documents and

00:11:11,790 --> 00:11:15,779
the let's say search engine could

00:11:14,040 --> 00:11:17,730
provide you the exact answer like we

00:11:15,779 --> 00:11:19,950
discussed before you know so what is the

00:11:17,730 --> 00:11:21,550
most harmful thing in a fire is the

00:11:19,950 --> 00:11:23,470
smoke if the

00:11:21,550 --> 00:11:26,199
the search engine could actually give

00:11:23,470 --> 00:11:27,790
you the exact answer you wouldn't need a

00:11:26,199 --> 00:11:29,470
chatbot engine in between the

00:11:27,790 --> 00:11:31,660
intent-based chatbot engine in between

00:11:29,470 --> 00:11:33,550
because you know you could just give it

00:11:31,660 --> 00:11:35,829
the documents and when the user asks a

00:11:33,550 --> 00:11:38,350
question it could give the exact answer

00:11:35,829 --> 00:11:40,629
which is what the chat bot is doing so

00:11:38,350 --> 00:11:43,209
in principle if your natural language

00:11:40,629 --> 00:11:45,189
search worked then you wouldn't need

00:11:43,209 --> 00:11:47,170
let's say chat BOTS would go to another

00:11:45,189 --> 00:11:49,269
level and you wouldn't be so limited by

00:11:47,170 --> 00:11:51,809
training it on existing questions and

00:11:49,269 --> 00:11:53,709
things like that so given of course

00:11:51,809 --> 00:11:55,990
natural language search like we

00:11:53,709 --> 00:11:59,470
discussed is still in a bit experimental

00:11:55,990 --> 00:12:03,519
stage so what we what we see now is a

00:11:59,470 --> 00:12:05,589
bit somewhere in between so usually the

00:12:03,519 --> 00:12:07,329
chat bots we build kind of follow or

00:12:05,589 --> 00:12:08,619
let's say if you're building a chat bot

00:12:07,329 --> 00:12:12,490
you need to take this into consideration

00:12:08,619 --> 00:12:14,439
where you need to have a fallback option

00:12:12,490 --> 00:12:16,540
so you can start with a chat part you

00:12:14,439 --> 00:12:18,429
can start with you know let's say your

00:12:16,540 --> 00:12:20,889
predefined set of questions and answers

00:12:18,429 --> 00:12:23,290
but always have a fallback in terms of

00:12:20,889 --> 00:12:25,089
if the user asks something which is not

00:12:23,290 --> 00:12:27,490
in the scope of the questions you

00:12:25,089 --> 00:12:29,499
trained it on then it can fall back on a

00:12:27,490 --> 00:12:31,929
knowledge-based search which is

00:12:29,499 --> 00:12:33,160
basically you know what we will show

00:12:31,929 --> 00:12:34,929
today or which is natural language

00:12:33,160 --> 00:12:37,209
search so you always need to architect

00:12:34,929 --> 00:12:39,040
it like that and of course if even that

00:12:37,209 --> 00:12:41,740
doesn't work because it's not guaranteed

00:12:39,040 --> 00:12:46,559
it can always fall back on you know like

00:12:41,740 --> 00:12:50,379
a human agent order so that still works

00:12:46,559 --> 00:12:52,809
so and just to complete the story I mean

00:12:50,379 --> 00:12:54,819
there's also something which we see we

00:12:52,809 --> 00:12:56,649
will see in a lot of talks and well in

00:12:54,819 --> 00:12:59,350
buzz words as well where you know the

00:12:56,649 --> 00:13:02,379
focus is on let's say web sites such a

00:12:59,350 --> 00:13:04,089
product based search again this is

00:13:02,379 --> 00:13:06,339
something a bit different than web

00:13:04,089 --> 00:13:08,499
search or Enterprise search because here

00:13:06,339 --> 00:13:10,509
the focus is on finding products and not

00:13:08,499 --> 00:13:12,339
answers so you're looking to find

00:13:10,509 --> 00:13:14,799
products and and your criteria is

00:13:12,339 --> 00:13:16,449
usually let's say rankings or reviews

00:13:14,799 --> 00:13:19,569
that have been provided by other users

00:13:16,449 --> 00:13:21,220
so things like you know learning to rank

00:13:19,569 --> 00:13:22,959
and things like that those kind of

00:13:21,220 --> 00:13:24,610
libraries work very well for product

00:13:22,959 --> 00:13:27,490
based search because we are relying on

00:13:24,610 --> 00:13:29,529
reviews rankings but they're a bit

00:13:27,490 --> 00:13:31,419
different than you know because in the

00:13:29,529 --> 00:13:33,519
enterprise search you hardly have people

00:13:31,419 --> 00:13:35,259
who are ranking let's say the all

00:13:33,519 --> 00:13:40,240
providing reviews of what answers they

00:13:35,259 --> 00:13:42,549
receive so with that background so what

00:13:40,240 --> 00:13:45,339
Louie we'll go through let's say a use

00:13:42,549 --> 00:13:47,589
case we had at PMI and showed the

00:13:45,339 --> 00:13:49,389
different let's say trade offs that you

00:13:47,589 --> 00:13:50,860
usually encounter while building a

00:13:49,389 --> 00:13:53,079
natural language search based on that

00:13:50,860 --> 00:13:57,490
using fully open source components so

00:13:53,079 --> 00:13:59,980
that okay so Before we jump into the

00:13:57,490 --> 00:14:01,720
details of our apply pipeline and what

00:13:59,980 --> 00:14:03,759
we've been working on I'm just gonna

00:14:01,720 --> 00:14:05,470
give you a quick overview of the use

00:14:03,759 --> 00:14:08,470
case that we have at Philip Morris so

00:14:05,470 --> 00:14:10,600
basically we have manufacturers are

00:14:08,470 --> 00:14:14,259
working on the ground floor and they

00:14:10,600 --> 00:14:18,370
work on daily basis on many machines

00:14:14,259 --> 00:14:25,179
we've very complicated specific keywords

00:14:18,370 --> 00:14:29,230
and the idea of our project was to to go

00:14:25,179 --> 00:14:32,410
just beyond a boolean keyword or data

00:14:29,230 --> 00:14:35,439
management systems where people would

00:14:32,410 --> 00:14:38,799
just type in the keywords that they

00:14:35,439 --> 00:14:41,259
would search and it would be like give

00:14:38,799 --> 00:14:44,169
me let's say I work on this line of

00:14:41,259 --> 00:14:45,850
production and I want to make I'm

00:14:44,169 --> 00:14:48,639
working on cigarette marketing machines

00:14:45,850 --> 00:14:50,860
making machines and then we would need

00:14:48,639 --> 00:14:53,980
to go through the whole document to to

00:14:50,860 --> 00:14:56,230
search for information so here we're

00:14:53,980 --> 00:14:59,769
talking about hundreds to thousands of

00:14:56,230 --> 00:15:02,799
operators and and the idea is that if

00:14:59,769 --> 00:15:04,980
you have someone that is not used to the

00:15:02,799 --> 00:15:07,059
way people are searching in the company

00:15:04,980 --> 00:15:10,629
this might be a challenge for someone

00:15:07,059 --> 00:15:14,529
that is that is reaching a company so

00:15:10,629 --> 00:15:16,929
it's an example of the answers that we

00:15:14,529 --> 00:15:20,259
would expect is something that that is

00:15:16,929 --> 00:15:23,199
closely related to this so if we had

00:15:20,259 --> 00:15:27,639
something like typical document

00:15:23,199 --> 00:15:30,579
retrieval we would just type the the

00:15:27,639 --> 00:15:32,169
query then if we were looking for this

00:15:30,579 --> 00:15:34,329
kind of information like how many knives

00:15:32,169 --> 00:15:35,970
are there on the drums it means that we

00:15:34,329 --> 00:15:38,529
would need to go through all the whole

00:15:35,970 --> 00:15:41,879
text and the whole and see here's it's

00:15:38,529 --> 00:15:45,450
357 pages so then you could of course

00:15:41,879 --> 00:15:47,820
control have index of pages but

00:15:45,450 --> 00:15:50,430
the ideas that we really want to have

00:15:47,820 --> 00:15:53,340
this disco tentative search where the

00:15:50,430 --> 00:15:56,720
user just type in his question and we

00:15:53,340 --> 00:15:59,100
get through right into into the answer

00:15:56,720 --> 00:16:02,190
so this is a typical question answering

00:15:59,100 --> 00:16:05,520
task and a reference of quest answering

00:16:02,190 --> 00:16:08,570
is to squat the data set that's the

00:16:05,520 --> 00:16:12,300
Stanford question answering data set and

00:16:08,570 --> 00:16:15,320
it's it's one hundred thousand question

00:16:12,300 --> 00:16:18,330
and answers that have been labeled and

00:16:15,320 --> 00:16:19,950
it's it's all it's all related to

00:16:18,330 --> 00:16:25,560
Wikipedia articles so it's very open

00:16:19,950 --> 00:16:28,530
domain and the idea is to use this what

00:16:25,560 --> 00:16:31,860
like what could we what could we use in

00:16:28,530 --> 00:16:36,780
this in this task to to apply it to our

00:16:31,860 --> 00:16:38,880
use case one of the planning the funny

00:16:36,780 --> 00:16:41,880
thing is that it's been state of the art

00:16:38,880 --> 00:16:47,940
and I mean the state of the art actually

00:16:41,880 --> 00:16:51,090
build the human performances so we've

00:16:47,940 --> 00:16:53,370
been looking at the rqa which has been

00:16:51,090 --> 00:16:57,290
built by Facebook AI research team and

00:16:53,370 --> 00:17:00,150
the idea behind the Archaea is that is

00:16:57,290 --> 00:17:01,440
two stage pipeline where at first we

00:17:00,150 --> 00:17:03,120
would retrieve the documents that we

00:17:01,440 --> 00:17:06,000
want to look at so that we don't have

00:17:03,120 --> 00:17:10,050
too much to read and then we go through

00:17:06,000 --> 00:17:11,100
the documents using neural nets to to

00:17:10,050 --> 00:17:14,730
read the document and fat the answer

00:17:11,100 --> 00:17:16,470
related to our question this is on this

00:17:14,730 --> 00:17:19,230
is open source this is on BSD license

00:17:16,470 --> 00:17:21,800
and the good thing is that we have a pre

00:17:19,230 --> 00:17:26,580
trained model which we just can

00:17:21,800 --> 00:17:29,760
basically use as black box so few

00:17:26,580 --> 00:17:34,580
details about your QA so the document

00:17:29,760 --> 00:17:36,810
retrieval part uses by run tf-idf i

00:17:34,580 --> 00:17:38,310
really suggest that you have a look at

00:17:36,810 --> 00:17:41,040
UF idea fish if you don't know what this

00:17:38,310 --> 00:17:42,750
is but basically it's it's it's very

00:17:41,040 --> 00:17:45,960
intuitive and it looks at the frequency

00:17:42,750 --> 00:17:48,120
of words inside the documents and after

00:17:45,960 --> 00:17:51,630
this so after the document retrieval

00:17:48,120 --> 00:17:54,390
part we would get a set of pages or

00:17:51,630 --> 00:17:56,820
document and then we would ingest this

00:17:54,390 --> 00:17:58,530
into a neural net here it's recurrent

00:17:56,820 --> 00:18:01,500
neural network

00:17:58,530 --> 00:18:04,890
and it uses bi-directional units so that

00:18:01,500 --> 00:18:07,460
we have information from the future and

00:18:04,890 --> 00:18:10,499
also from the past

00:18:07,460 --> 00:18:10,499
[Music]

00:18:10,730 --> 00:18:15,540
okay so few words and this is just to

00:18:14,130 --> 00:18:19,170
show you how easily it could be

00:18:15,540 --> 00:18:21,330
implemented on your own corpus basically

00:18:19,170 --> 00:18:23,610
in two lines we would get be done with

00:18:21,330 --> 00:18:26,370
with the document retrieval by just

00:18:23,610 --> 00:18:29,220
calling these two lines building the

00:18:26,370 --> 00:18:33,360
tf-idf having this beautiful matrix with

00:18:29,220 --> 00:18:38,160
that we can have the similarity with

00:18:33,360 --> 00:18:41,520
with the query then we put this tf-idf

00:18:38,160 --> 00:18:43,790
in the pipeline and and we also use a

00:18:41,520 --> 00:18:47,010
model that we can just get online and

00:18:43,790 --> 00:18:48,900
and we would have we would be able to

00:18:47,010 --> 00:18:50,850
answer question either related to our

00:18:48,900 --> 00:18:53,190
corpus or we could basically answer

00:18:50,850 --> 00:18:59,520
questions that are related to to

00:18:53,190 --> 00:19:01,110
Wikipedia now if you remember about the

00:18:59,520 --> 00:19:03,720
use case that we had so the question was

00:19:01,110 --> 00:19:06,000
that whether we could assess all the

00:19:03,720 --> 00:19:08,550
paper and pain points that we had by

00:19:06,000 --> 00:19:10,550
just not taking wiki articles but

00:19:08,550 --> 00:19:16,110
instead of this ingesting our own

00:19:10,550 --> 00:19:19,500
manuals so for that we use because you

00:19:16,110 --> 00:19:23,550
cannot just take PDF and just interested

00:19:19,500 --> 00:19:27,180
into the pipeline you have to read we we

00:19:23,550 --> 00:19:29,580
use Apache which is actually so

00:19:27,180 --> 00:19:32,880
that their mini crawler out there where

00:19:29,580 --> 00:19:38,130
you could just crawl all the data inside

00:19:32,880 --> 00:19:40,260
its eye inside the data path but the

00:19:38,130 --> 00:19:43,490
idea is that here we want it to read

00:19:40,260 --> 00:19:45,870
pages and not 400 pages long documents

00:19:43,490 --> 00:19:49,860
because then for the model it would be

00:19:45,870 --> 00:19:55,260
just too much of memory so so we use

00:19:49,860 --> 00:19:58,740
this this Java toolkit and just to give

00:19:55,260 --> 00:20:01,470
you some some numbers so on the

00:19:58,740 --> 00:20:06,960
reference paper the document retrieval

00:20:01,470 --> 00:20:10,260
part had 75 78 percent accuracy it's a P

00:20:06,960 --> 00:20:12,029
at five sorry so the idea behind the

00:20:10,260 --> 00:20:13,619
procedure at five is that in top five

00:20:12,029 --> 00:20:17,489
documents we would have at least one

00:20:13,619 --> 00:20:22,200
document that is relevant when we

00:20:17,489 --> 00:20:25,049
applied it on our corpus it happened

00:20:22,200 --> 00:20:27,450
that we we ended up with the 76% of

00:20:25,049 --> 00:20:29,580
precision and 5 which is not that bad

00:20:27,450 --> 00:20:31,739
that when you come to the stakeholders

00:20:29,580 --> 00:20:33,359
and you you tell them about these kind

00:20:31,739 --> 00:20:35,340
of numbers do not happy with it because

00:20:33,359 --> 00:20:38,309
they want to have something like 95%

00:20:35,340 --> 00:20:40,769
they want to always be able to find

00:20:38,309 --> 00:20:44,190
information for them 76% wouldn't

00:20:40,769 --> 00:20:47,249
wouldn't be enough another thing is that

00:20:44,190 --> 00:20:49,889
ok we're not providing the exact answer

00:20:47,249 --> 00:20:51,299
all the time but we're not here we're

00:20:49,889 --> 00:20:54,089
not doing voice recognition with not

00:20:51,299 --> 00:20:56,820
using Siri or whatever the idea is more

00:20:54,089 --> 00:21:00,359
about to be more granular in the in the

00:20:56,820 --> 00:21:03,059
answer that we give and and that's why

00:21:00,359 --> 00:21:04,589
we wanted to first prioritize the

00:21:03,059 --> 00:21:10,049
document retrieval part and not the

00:21:04,589 --> 00:21:13,080
reader part so because we wanted to

00:21:10,049 --> 00:21:15,539
focus on this we introduced

00:21:13,080 --> 00:21:20,219
elasticsearch to the pipeline instead of

00:21:15,539 --> 00:21:21,929
the background child tf-idf and for

00:21:20,219 --> 00:21:24,509
those who are not familiar with elastic

00:21:21,929 --> 00:21:27,330
church I'm just going to give you quick

00:21:24,509 --> 00:21:31,379
quick overview of elasticsearch so it's

00:21:27,330 --> 00:21:37,440
basically a distributed switch engine

00:21:31,379 --> 00:21:41,009
and it has many benefit but why we used

00:21:37,440 --> 00:21:42,719
it is because it's highly scalable so if

00:21:41,009 --> 00:21:45,719
we have thousands of users it would be

00:21:42,719 --> 00:21:50,519
beneficial but also it has a very clean

00:21:45,719 --> 00:21:53,039
API it's it's it's very easily used for

00:21:50,519 --> 00:21:55,289
full-text search we can change the many

00:21:53,039 --> 00:21:59,249
settings so for research perspective

00:21:55,289 --> 00:22:01,080
it's it's it's it's very useful and and

00:21:59,249 --> 00:22:05,190
and also another thing is that there

00:22:01,080 --> 00:22:08,609
many people using it so this was good

00:22:05,190 --> 00:22:11,909
for us so what we did is we completely

00:22:08,609 --> 00:22:15,989
got rid of the tf-idf and instead we go

00:22:11,909 --> 00:22:18,749
through an index that is elasticsearch

00:22:15,989 --> 00:22:24,620
and you can just have it anywhere on the

00:22:18,749 --> 00:22:26,960
cloud or on pram so we

00:22:24,620 --> 00:22:32,930
added we didn't pull request on the on

00:22:26,960 --> 00:22:35,720
the RQ a repo accepted the way it works

00:22:32,930 --> 00:22:38,540
is is it's very simple you just make it

00:22:35,720 --> 00:22:42,980
point to the the model of the the index

00:22:38,540 --> 00:22:46,450
h1 and and you also would add the

00:22:42,980 --> 00:22:49,430
content that you want to go to to read

00:22:46,450 --> 00:22:51,830
it can be anything here I'm just showing

00:22:49,430 --> 00:22:55,430
the content but this could be also the

00:22:51,830 --> 00:22:57,830
odd author the the name of the file when

00:22:55,430 --> 00:22:59,150
it has been less modified so any kind of

00:22:57,830 --> 00:23:01,580
field you could think any kind of

00:22:59,150 --> 00:23:04,340
metadata that you could think of about

00:23:01,580 --> 00:23:06,620
the the documents you could search in

00:23:04,340 --> 00:23:09,980
and and you can also tweak the weight so

00:23:06,620 --> 00:23:15,080
readers there's a lot to to to

00:23:09,980 --> 00:23:18,380
experience here so using this we had a

00:23:15,080 --> 00:23:22,280
jump of performance to 84% for the

00:23:18,380 --> 00:23:26,780
reader part and then in the end we had

00:23:22,280 --> 00:23:28,160
something like 42 f1 score which is

00:23:26,780 --> 00:23:30,350
basically the distance between the

00:23:28,160 --> 00:23:33,590
answer that we're looking at and the

00:23:30,350 --> 00:23:36,740
actual the the dancer that the answer

00:23:33,590 --> 00:23:38,750
that we get from the reader part so if

00:23:36,740 --> 00:23:40,940
we compare this to the reader part of

00:23:38,750 --> 00:23:44,960
the reference paper on the rqa there has

00:23:40,940 --> 00:23:46,790
nearly 80% so there's there's a gap

00:23:44,960 --> 00:23:49,250
between the two but if we look at

00:23:46,790 --> 00:23:51,710
closely what what we're getting from the

00:23:49,250 --> 00:23:56,140
answer it actually happens most of the

00:23:51,710 --> 00:24:00,170
time that the the answer is it's just

00:23:56,140 --> 00:24:03,110
around what we're getting so if we look

00:24:00,170 --> 00:24:06,559
at more of a context of the answer that

00:24:03,110 --> 00:24:11,559
we're getting with we have like 94% in

00:24:06,559 --> 00:24:14,990
the first results of true answer so

00:24:11,559 --> 00:24:18,110
before before I give you the takeaways

00:24:14,990 --> 00:24:20,120
and the learnings of all of this I just

00:24:18,110 --> 00:24:21,520
want to show you what was the end

00:24:20,120 --> 00:24:24,590
product in the end

00:24:21,520 --> 00:24:27,260
so the idea is that we still have a

00:24:24,590 --> 00:24:28,760
search engine where we could go through

00:24:27,260 --> 00:24:29,030
the document we have this preview on the

00:24:28,760 --> 00:24:32,450
right

00:24:29,030 --> 00:24:34,220
we have filters on the left anything you

00:24:32,450 --> 00:24:37,190
can think of and everything is automated

00:24:34,220 --> 00:24:41,119
so if the file has

00:24:37,190 --> 00:24:43,820
has metadata on about for instance what

00:24:41,119 --> 00:24:47,359
line of product they would use then you

00:24:43,820 --> 00:24:52,249
could leverage this and and and also it

00:24:47,359 --> 00:24:55,639
it brings also the drq a part on the

00:24:52,249 --> 00:25:00,409
front end so this is just to show you

00:24:55,639 --> 00:25:03,679
how we we can try to address those pain

00:25:00,409 --> 00:25:05,239
points and and how we combine the

00:25:03,679 --> 00:25:07,700
document retrieval part with the

00:25:05,239 --> 00:25:09,169
question answering task and and try to

00:25:07,700 --> 00:25:11,570
build a search engine which we called

00:25:09,169 --> 00:25:15,889
natural natural language search on on

00:25:11,570 --> 00:25:18,440
this so the few takeaways from this is

00:25:15,889 --> 00:25:20,809
that okay some some of most of the time

00:25:18,440 --> 00:25:24,169
you will not get the exact match of the

00:25:20,809 --> 00:25:25,940
answer that you're looking at but most

00:25:24,169 --> 00:25:28,970
of the time you will have the right

00:25:25,940 --> 00:25:30,169
context and if you don't have the right

00:25:28,970 --> 00:25:31,519
answer at least you have the right page

00:25:30,169 --> 00:25:33,440
or the right paragraph which is a great

00:25:31,519 --> 00:25:38,090
thing and I think that's what most of

00:25:33,440 --> 00:25:39,679
the people want we buy with the front

00:25:38,090 --> 00:25:41,809
end I think we should never forget about

00:25:39,679 --> 00:25:44,899
the user experience here so I mostly

00:25:41,809 --> 00:25:48,320
talked about the back end but if we look

00:25:44,899 --> 00:25:51,830
at the the user experience in search is

00:25:48,320 --> 00:25:53,720
very important here and it's it's

00:25:51,830 --> 00:25:57,049
actually as important as the back end

00:25:53,720 --> 00:25:58,909
and we should always elicit eight and

00:25:57,049 --> 00:26:00,769
it's it's it's more like a top-down or

00:25:58,909 --> 00:26:03,049
approach where the user actually doesn't

00:26:00,769 --> 00:26:07,159
know exactly what he's looking for and

00:26:03,049 --> 00:26:10,429
we need to bring the user to find his

00:26:07,159 --> 00:26:12,320
answer by himself and then what turned

00:26:10,429 --> 00:26:14,179
out to happen actually inside the

00:26:12,320 --> 00:26:16,909
company when we're talking to the end

00:26:14,179 --> 00:26:19,340
user is that you know what would you ask

00:26:16,909 --> 00:26:23,479
if you were in front of a human that

00:26:19,340 --> 00:26:25,519
knows everything what would you ask him

00:26:23,479 --> 00:26:26,899
to know about the information that

00:26:25,519 --> 00:26:29,869
you're looking for and they would never

00:26:26,899 --> 00:26:32,059
know what was they I think it's more

00:26:29,869 --> 00:26:34,639
like we were used to a way to search

00:26:32,059 --> 00:26:37,220
that we when we search on Google we type

00:26:34,639 --> 00:26:40,669
keywords it's changing its going towards

00:26:37,220 --> 00:26:43,070
a more cognitive way but it's going

00:26:40,669 --> 00:26:47,289
towards this this direction but there is

00:26:43,070 --> 00:26:47,289
there is a long path through this

00:26:47,360 --> 00:26:52,280
I'm just gonna give you some some

00:26:50,390 --> 00:26:55,640
guidelines about the future works and

00:26:52,280 --> 00:26:59,600
and I really encourage you to go through

00:26:55,640 --> 00:27:03,530
it and try to bring some some value to

00:26:59,600 --> 00:27:05,600
what we've been working on the idea is

00:27:03,530 --> 00:27:08,420
that we would want to change the model

00:27:05,600 --> 00:27:11,480
the reader model and change it with the

00:27:08,420 --> 00:27:13,340
state of the art now the state of the

00:27:11,480 --> 00:27:15,680
art is Burt and it's actually the one

00:27:13,340 --> 00:27:20,840
that is beating the humanik the human

00:27:15,680 --> 00:27:23,450
performance and birds to give you some

00:27:20,840 --> 00:27:26,840
ideas some feeling about what this is is

00:27:23,450 --> 00:27:28,550
a it's basically a free training model

00:27:26,840 --> 00:27:31,670
that you could try and do that you could

00:27:28,550 --> 00:27:34,040
fine tune for any NLP task he has been

00:27:31,670 --> 00:27:37,400
it has been built by the Google AI

00:27:34,040 --> 00:27:39,230
research team and it stayed over for the

00:27:37,400 --> 00:27:41,750
photo squid squad data set for the

00:27:39,230 --> 00:27:47,600
challenge but the thing is that for us

00:27:41,750 --> 00:27:50,000
it was taking a lot of memory so but I

00:27:47,600 --> 00:27:52,580
definitely encourage you to have a look

00:27:50,000 --> 00:27:53,660
and see so it's it's pretty

00:27:52,580 --> 00:27:57,140
straightforward

00:27:53,660 --> 00:27:59,630
they applied it on squad so if you want

00:27:57,140 --> 00:28:03,020
to apply it for for the natural language

00:27:59,630 --> 00:28:05,300
search it's basically you compute the

00:28:03,020 --> 00:28:07,520
probability of a token being the start

00:28:05,300 --> 00:28:10,850
talkin being the end and you just try to

00:28:07,520 --> 00:28:14,000
maximize this despair of the su tokens

00:28:10,850 --> 00:28:19,220
so it's just adding one layer above the

00:28:14,000 --> 00:28:21,770
general bird model so that's it for us I

00:28:19,220 --> 00:28:23,660
hope you guys enjoyed this token and if

00:28:21,770 --> 00:28:24,620
you have any question please feel free

00:28:23,660 --> 00:28:30,130
to ask

00:28:24,620 --> 00:28:39,950
[Applause]

00:28:30,130 --> 00:28:44,059
thank you guys any question where could

00:28:39,950 --> 00:28:47,240
we get the slides I think for me is

00:28:44,059 --> 00:28:50,390
information overload that's easy I think

00:28:47,240 --> 00:28:53,030
we will share it put it wherever I think

00:28:50,390 --> 00:28:57,050
the conference has some websites where

00:28:53,030 --> 00:28:59,390
we share the slides but we'll probably

00:28:57,050 --> 00:29:04,640
make it available on our github anyways

00:28:59,390 --> 00:29:06,800
no I mean the whole idea is open-source

00:29:04,640 --> 00:29:08,270
you know it doesn't make sense to say we

00:29:06,800 --> 00:29:10,490
are open sourcing and then we don't

00:29:08,270 --> 00:29:14,720
share the presentation you know so

00:29:10,490 --> 00:29:17,690
that's not the spirit hi

00:29:14,720 --> 00:29:20,030
did you check what you just find about

00:29:17,690 --> 00:29:24,860
this this product where I am were they

00:29:20,030 --> 00:29:27,170
happy yes so if most of the feedback

00:29:24,860 --> 00:29:29,240
they were happy if I can give you some

00:29:27,170 --> 00:29:30,740
numbers usually they were taking 15

00:29:29,240 --> 00:29:32,660
minutes to search for the answer and

00:29:30,740 --> 00:29:35,800
here they were saying that they would

00:29:32,660 --> 00:29:41,270
gain five minutes in the search tasks so

00:29:35,800 --> 00:29:43,190
they were happy and yeah yeah yeah in

00:29:41,270 --> 00:29:45,440
general we try to apply it to other use

00:29:43,190 --> 00:29:47,510
cases as well so this was specific to

00:29:45,440 --> 00:29:51,190
factory workers well you know there

00:29:47,510 --> 00:29:53,780
let's say I mean not the most technical

00:29:51,190 --> 00:29:55,760
but we also try to apply to other use

00:29:53,780 --> 00:29:57,410
cases like finding that it was more like

00:29:55,760 --> 00:29:59,120
financial documents or where it was

00:29:57,410 --> 00:30:04,309
financial analysts and things like that

00:29:59,120 --> 00:30:06,050
and I think in general I would say it's

00:30:04,309 --> 00:30:07,880
mix you know and I think one of the

00:30:06,050 --> 00:30:09,860
things to keep in mind is like Louie was

00:30:07,880 --> 00:30:11,950
mentioning in his takeaways the UI we

00:30:09,860 --> 00:30:15,320
should never underestimate the UI you

00:30:11,950 --> 00:30:17,179
know all the f5 scores all the f1 scores

00:30:15,320 --> 00:30:19,100
they don't matter to the end-user what

00:30:17,179 --> 00:30:21,020
they see is so they really appreciated

00:30:19,100 --> 00:30:22,550
that they can see the feedback they can

00:30:21,020 --> 00:30:25,670
they can see the preview of the

00:30:22,550 --> 00:30:27,230
documents they can if it doesn't work

00:30:25,670 --> 00:30:29,210
they always have a fallback where they

00:30:27,230 --> 00:30:30,830
can you know see let's say the full

00:30:29,210 --> 00:30:32,300
document and they can do whatever their

00:30:30,830 --> 00:30:34,010
search so I think it's very important

00:30:32,300 --> 00:30:34,880
what we see with chat BOTS as well and

00:30:34,010 --> 00:30:37,310
things like that

00:30:34,880 --> 00:30:38,800
fall back is very important whatever you

00:30:37,310 --> 00:30:40,630
design

00:30:38,800 --> 00:30:42,910
it's always good to give the users like

00:30:40,630 --> 00:30:44,710
full control okay if it doesn't work you

00:30:42,910 --> 00:30:53,380
can still access the documents it's not

00:30:44,710 --> 00:30:55,180
late doesn't stop you but does it handle

00:30:53,380 --> 00:30:59,950
multiple languages the question

00:30:55,180 --> 00:31:02,530
answering or it just handles English is

00:30:59,950 --> 00:31:05,860
English only or I think vrq wave we can

00:31:02,530 --> 00:31:08,320
yes your cure is English honey but if

00:31:05,860 --> 00:31:09,940
you if you manage to bring birth to the

00:31:08,320 --> 00:31:17,500
pipeline I think you can go

00:31:09,940 --> 00:31:21,340
multi-language yeah does it handle

00:31:17,500 --> 00:31:26,290
semantics like or does it is it just

00:31:21,340 --> 00:31:28,750
factual question answering like some

00:31:26,290 --> 00:31:30,010
semi if we if the query contains some

00:31:28,750 --> 00:31:33,310
semantics in question

00:31:30,010 --> 00:31:36,990
so the do you mean and understanding the

00:31:33,310 --> 00:31:39,250
technical keywords or do you mean

00:31:36,990 --> 00:31:44,290
answering the semantics of of the

00:31:39,250 --> 00:31:47,980
questions is that yes I think the way it

00:31:44,290 --> 00:31:50,890
has been trained is they look at natural

00:31:47,980 --> 00:31:55,870
language question so it will understand

00:31:50,890 --> 00:31:58,650
through the model the the semantics it's

00:31:55,870 --> 00:32:01,720
not knowledge graph or anything so

00:31:58,650 --> 00:32:03,550
that's that's the whole point of the of

00:32:01,720 --> 00:32:06,550
the reader dimension from financial

00:32:03,550 --> 00:32:09,760
model I think we have not I think

00:32:06,550 --> 00:32:13,120
semantics is like you know very vague

00:32:09,760 --> 00:32:15,400
but I think what dr TV does is it

00:32:13,120 --> 00:32:17,500
recognizes the context so it's a bit

00:32:15,400 --> 00:32:18,990
more than just EF IDF where you are

00:32:17,500 --> 00:32:21,850
playing with the frequency of the words

00:32:18,990 --> 00:32:23,620
so i think even if you have the same

00:32:21,850 --> 00:32:26,440
frequency of the words in two places in

00:32:23,620 --> 00:32:28,330
the document it will try to because

00:32:26,440 --> 00:32:30,700
that's the bi-directional part of the

00:32:28,330 --> 00:32:32,920
RNN it is using you know where it's able

00:32:30,700 --> 00:32:36,370
to go back to what was said before and

00:32:32,920 --> 00:32:38,290
also a bit in front well you know so I

00:32:36,370 --> 00:32:40,060
think that's the only thing it does it

00:32:38,290 --> 00:32:41,710
takes a bit of the context in terms of

00:32:40,060 --> 00:32:44,650
what is said before and after the actual

00:32:41,710 --> 00:32:47,530
answer spann but i'm not sure if you

00:32:44,650 --> 00:32:50,170
would call it semantics as in fully

00:32:47,530 --> 00:32:51,700
understanding the context of the but

00:32:50,170 --> 00:32:59,500
it's a bit better than just

00:32:51,700 --> 00:33:02,019
even based frequency research is ok just

00:32:59,500 --> 00:33:04,149
adding on my my knowledge is extremely

00:33:02,019 --> 00:33:05,830
limited but when you are using neural

00:33:04,149 --> 00:33:09,789
network I do not think you consider

00:33:05,830 --> 00:33:11,769
semantics at all again depends how you

00:33:09,789 --> 00:33:13,659
define semantics you know so here

00:33:11,769 --> 00:33:16,149
semantics is a bit like looking behind

00:33:13,659 --> 00:33:18,250
and what has happened before and what is

00:33:16,149 --> 00:33:20,019
happening a bit in the that's how

00:33:18,250 --> 00:33:21,929
language translation works as well you

00:33:20,019 --> 00:33:23,919
know what you see is like autocorrect

00:33:21,929 --> 00:33:25,659
autocomplete in this kind of search

00:33:23,919 --> 00:33:28,539
engines is basically a recurrent neural

00:33:25,659 --> 00:33:30,580
network which is looking behind what you

00:33:28,539 --> 00:33:33,179
have typed before and you know what

00:33:30,580 --> 00:33:35,830
users would usually type in that context

00:33:33,179 --> 00:33:37,570
but I don't think it really understands

00:33:35,830 --> 00:33:41,250
what you're thinking in your mind or you

00:33:37,570 --> 00:33:41,250
know that that semantics is not there so

00:33:42,029 --> 00:33:50,769
hello and are you using user feedback to

00:33:46,330 --> 00:33:52,809
upgrade your knowledge base if a user

00:33:50,769 --> 00:33:55,659
types a query and they happy with the

00:33:52,809 --> 00:33:57,760
answer are you taking any any actions of

00:33:55,659 --> 00:33:59,950
it no no absolutely I think that's a bit

00:33:57,760 --> 00:34:01,389
like the key feature part of the user

00:33:59,950 --> 00:34:04,630
experience where we are logging

00:34:01,389 --> 00:34:06,460
everything that is being asked and what

00:34:04,630 --> 00:34:08,829
we try to do initially is that at least

00:34:06,460 --> 00:34:10,389
in the use cases when we roll it out at

00:34:08,829 --> 00:34:12,460
least initially we do almost like a

00:34:10,389 --> 00:34:15,069
weekly review of the logs to see what

00:34:12,460 --> 00:34:19,030
questions are being asked and how we can

00:34:15,069 --> 00:34:20,919
tune it better you know it's easy to say

00:34:19,030 --> 00:34:22,629
it in theory difficult to do it a bit in

00:34:20,919 --> 00:34:27,429
practice because once you roll it out

00:34:22,629 --> 00:34:29,260
there is less it's a bit like you know

00:34:27,429 --> 00:34:33,399
putting the right processes in place but

00:34:29,260 --> 00:34:36,210
it's very important I think I suppose

00:34:33,399 --> 00:34:39,750
it's okay so thanks there Ben Lewis

00:34:36,210 --> 00:34:39,750

YouTube URL: https://www.youtube.com/watch?v=UJYrDw6I19Y


