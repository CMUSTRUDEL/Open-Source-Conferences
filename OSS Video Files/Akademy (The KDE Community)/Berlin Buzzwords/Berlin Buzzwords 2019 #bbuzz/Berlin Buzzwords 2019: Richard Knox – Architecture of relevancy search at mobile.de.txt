Title: Berlin Buzzwords 2019: Richard Knox â€“ Architecture of relevancy search at mobile.de
Publication date: 2019-06-20
Playlist: Berlin Buzzwords 2019 #bbuzz
Description: 
	Search is fundamental feature of mobile.de platform and we as Data Team work hard to improve user experience by bringing personalization and relevancy into search flow. Hardest challenge is to cater to user interests while still displaying sponsored ads and obeying dealer interests. To solve it our team created and combined a number of data-driven products such as user profiling based on browsing history, car price ratings based on historical data from mobile.de inventory and machine learning model predicting click probability based on user tracking data. 

I will describe each of the products, highlighting the architecture and show how each of them fits into a big picture and integrated with existing search flow. Also I will share main learnings and outcomes.

This talk is presented by ebay tech.

Read more:
https://2019.berlinbuzzwords.de/19/session/architecture-relevancy-search-mobilede

About Richard Knox:
https://2019.berlinbuzzwords.de/users/richard-knox

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	00:00:10,600 --> 00:00:14,870
one of the data teams mobility and today

00:00:14,230 --> 00:00:16,460
I came

00:00:14,870 --> 00:00:18,440
to give you a quick overview of how

00:00:16,460 --> 00:00:21,470
we've brought relevancy search to mobula

00:00:18,440 --> 00:00:23,060
and kind of the individual things we had

00:00:21,470 --> 00:00:26,029
to build and put within our

00:00:23,060 --> 00:00:28,430
infrastructure to allow this so what is

00:00:26,029 --> 00:00:32,750
mobility for a quick kind of overview

00:00:28,430 --> 00:00:35,390
for people who don't know it's a we are

00:00:32,750 --> 00:00:38,390
claim Germany's biggest online vehicle

00:00:35,390 --> 00:00:41,180
marketplace have around 1.6 million

00:00:38,390 --> 00:00:43,700
adverts online at any one time and we're

00:00:41,180 --> 00:00:46,160
basically a platform that allows sellers

00:00:43,700 --> 00:00:48,969
and sellers of vehicles usually dealers

00:00:46,160 --> 00:00:52,309
to connect with buyers

00:00:48,969 --> 00:00:54,230
we offer kind of dese's our core service

00:00:52,309 --> 00:00:56,960
and on top of this we have a number of

00:00:54,230 --> 00:00:59,149
different services like finance and we

00:00:56,960 --> 00:01:03,320
are involved in finance and transactions

00:00:59,149 --> 00:01:05,690
or private selling and we're part of the

00:01:03,320 --> 00:01:08,409
kind of global larger eBay Classifieds

00:01:05,690 --> 00:01:11,630
grip which is a as a larger organization

00:01:08,409 --> 00:01:13,880
focuses on all things classified

00:01:11,630 --> 00:01:16,130
throughout the world and this is brands

00:01:13,880 --> 00:01:18,350
such as a eBay climate cycle here in

00:01:16,130 --> 00:01:23,000
Germany Marc flats and the Netherlands

00:01:18,350 --> 00:01:24,500
and Kijiji autos in Canada so kind of

00:01:23,000 --> 00:01:27,230
one of our core functionality is that

00:01:24,500 --> 00:01:29,810
mobile is search it's the entrance point

00:01:27,230 --> 00:01:32,180
to our platform for users and it's where

00:01:29,810 --> 00:01:33,980
they come on narrow down what vehicle

00:01:32,180 --> 00:01:36,620
they're looking for and they can do this

00:01:33,980 --> 00:01:40,130
by using industry standard type filters

00:01:36,620 --> 00:01:42,590
you know we're filtering on make and

00:01:40,130 --> 00:01:45,860
model price mileage things like this and

00:01:42,590 --> 00:01:48,320
the users then shown a list of results

00:01:45,860 --> 00:01:51,080
and these car adverts kind of include

00:01:48,320 --> 00:01:53,660
various details about the car yeah a

00:01:51,080 --> 00:01:56,720
description mileage pictures things like

00:01:53,660 --> 00:02:00,440
this and they can be they can change the

00:01:56,720 --> 00:02:01,910
order by various methods price listing

00:02:00,440 --> 00:02:04,490
creation date mileage things like this

00:02:01,910 --> 00:02:06,950
so em we decided that as a company we

00:02:04,490 --> 00:02:08,300
want to offer our users a new sort

00:02:06,950 --> 00:02:10,519
option their relevance and

00:02:08,300 --> 00:02:14,330
recommendation to help them find the

00:02:10,519 --> 00:02:15,950
right car more easily so what does a

00:02:14,330 --> 00:02:19,400
good relevance and recommendation look

00:02:15,950 --> 00:02:22,370
like to us as a business we have many

00:02:19,400 --> 00:02:23,959
different aspects to consider of course

00:02:22,370 --> 00:02:27,739
there are the heart constraints the make

00:02:23,959 --> 00:02:28,550
and make model color anything the user

00:02:27,739 --> 00:02:29,720
sets we

00:02:28,550 --> 00:02:32,590
have to show them if they search for a

00:02:29,720 --> 00:02:34,910
black BMW we don't show them a blue Audi

00:02:32,590 --> 00:02:36,800
but on top of that we have a number of

00:02:34,910 --> 00:02:39,740
different features for example business

00:02:36,800 --> 00:02:41,420
value so our dealers have the option to

00:02:39,740 --> 00:02:44,000
have different types of accounts and

00:02:41,420 --> 00:02:45,500
bookable features and we have to make

00:02:44,000 --> 00:02:46,880
sure they get value for money if they've

00:02:45,500 --> 00:02:48,950
paid to be more prominent than the

00:02:46,880 --> 00:02:51,190
lessons with say kind of a featured

00:02:48,950 --> 00:02:54,020
advert that has to be taken into account

00:02:51,190 --> 00:02:56,420
we also have these what we call general

00:02:54,020 --> 00:02:58,190
attraction factors which are when we

00:02:56,420 --> 00:02:59,750
recommend an advert to users we kind of

00:02:58,190 --> 00:03:03,200
take into account things about the

00:02:59,750 --> 00:03:04,940
dealer so we really locate it how highly

00:03:03,200 --> 00:03:06,470
rated is this dealer on our platform do

00:03:04,940 --> 00:03:10,490
people generally have a good experience

00:03:06,470 --> 00:03:12,380
with them and does this dealer look

00:03:10,490 --> 00:03:14,240
after our users do they respond when

00:03:12,380 --> 00:03:16,280
they're asked the question or is it a

00:03:14,240 --> 00:03:19,360
case they kind of ignore it and maybe

00:03:16,280 --> 00:03:21,440
the car sold and our users don't know

00:03:19,360 --> 00:03:23,330
talking about users we also have our

00:03:21,440 --> 00:03:25,910
users preferences so like I said earlier

00:03:23,330 --> 00:03:27,710
we have make we have model things that

00:03:25,910 --> 00:03:29,870
everyone searches for when looking for a

00:03:27,710 --> 00:03:32,180
car but on top of that we want to really

00:03:29,870 --> 00:03:34,910
understand what our users view on our

00:03:32,180 --> 00:03:36,739
platform how do they behave what they're

00:03:34,910 --> 00:03:39,020
looking for and that way we can begin to

00:03:36,739 --> 00:03:41,930
kind of get this idea of relevance for

00:03:39,020 --> 00:03:44,239
their specific user and finally less

00:03:41,930 --> 00:03:47,180
than quality when we recommend less than

00:03:44,239 --> 00:03:49,970
star users we want to do so knowing that

00:03:47,180 --> 00:03:51,380
listings are high quality and for this

00:03:49,970 --> 00:03:54,050
we look at things like the number of

00:03:51,380 --> 00:03:55,940
images the dealers put up how complete

00:03:54,050 --> 00:03:59,770
as this less than compared to other

00:03:55,940 --> 00:04:02,150
lessons and is there a good description

00:03:59,770 --> 00:04:03,980
one more thing we knew we wanted to have

00:04:02,150 --> 00:04:07,250
that kind of fits into this jigsaw

00:04:03,980 --> 00:04:09,080
puzzle is that when we recommend cars we

00:04:07,250 --> 00:04:12,200
wanted some kind of concept of what a

00:04:09,080 --> 00:04:13,790
good offer was so when you're a car

00:04:12,200 --> 00:04:15,020
buyer it can be daunting to try and

00:04:13,790 --> 00:04:17,600
determine if the car you're viewing is a

00:04:15,020 --> 00:04:20,450
good deal and we knew that we could help

00:04:17,600 --> 00:04:22,040
with that and we eventually decided on

00:04:20,450 --> 00:04:24,860
using a thing called price rate in which

00:04:22,040 --> 00:04:28,400
I'll talk about a little bit later on so

00:04:24,860 --> 00:04:30,050
pain of this is quite simple button we

00:04:28,400 --> 00:04:33,620
had the idea of perfect relevant search

00:04:30,050 --> 00:04:33,800
and we had to decide we had a choice to

00:04:33,620 --> 00:04:36,050
make

00:04:33,800 --> 00:04:37,850
did we take the old-fashioned waterfall

00:04:36,050 --> 00:04:39,650
approach would we sit in a room and code

00:04:37,850 --> 00:04:42,199
the perfect platform and release it once

00:04:39,650 --> 00:04:44,029
it's done or instead do we reach

00:04:42,199 --> 00:04:46,189
release incremental components of our

00:04:44,029 --> 00:04:48,080
search with the end goal of combining

00:04:46,189 --> 00:04:50,240
all of these to create perfect relevancy

00:04:48,080 --> 00:04:52,909
and I'm sure kind of everyone can guess

00:04:50,240 --> 00:04:54,560
we went for the error of approach it

00:04:52,909 --> 00:04:56,270
makes more sense for us the

00:04:54,560 --> 00:04:58,099
implementation of such a large project

00:04:56,270 --> 00:05:00,680
was never going to happen overnight and

00:04:58,099 --> 00:05:03,050
we might as well capture the small games

00:05:00,680 --> 00:05:05,029
to user experience as we go it also

00:05:03,050 --> 00:05:07,340
allows us to test ideas really quickly

00:05:05,029 --> 00:05:09,590
and to gain insights into what features

00:05:07,340 --> 00:05:12,800
our users actually care about not what

00:05:09,590 --> 00:05:16,039
we think they care about so we kind of

00:05:12,800 --> 00:05:17,779
had this idea of the perfect search and

00:05:16,039 --> 00:05:20,120
we decided how we were going to go about

00:05:17,779 --> 00:05:22,219
building it didn't solve our problem so

00:05:20,120 --> 00:05:24,740
we first had to decide where did we want

00:05:22,219 --> 00:05:27,490
to start and we felt the natural place

00:05:24,740 --> 00:05:30,830
to start is what search is all about and

00:05:27,490 --> 00:05:32,839
helping users find cars so we started

00:05:30,830 --> 00:05:35,029
with our user preferences and this kind

00:05:32,839 --> 00:05:38,839
of topic was broken up into really three

00:05:35,029 --> 00:05:40,849
separate questions who are our users

00:05:38,839 --> 00:05:42,169
before we could even start to build

00:05:40,849 --> 00:05:44,089
smart data products we need an

00:05:42,169 --> 00:05:46,969
understanding of who our users are and

00:05:44,089 --> 00:05:48,409
how to keep track of them so for this we

00:05:46,969 --> 00:05:50,960
created what we call like our event

00:05:48,409 --> 00:05:52,430
service and basically every interaction

00:05:50,960 --> 00:05:54,919
with the front end of our platform is

00:05:52,430 --> 00:05:55,310
recorded visit our IDs attached to each

00:05:54,919 --> 00:05:57,229
one

00:05:55,310 --> 00:05:59,300
this is tracked stored in our Hadoop

00:05:57,229 --> 00:06:01,490
cluster after Hurricane of enrichment

00:05:59,300 --> 00:06:03,409
and their cleanup compliance these kind

00:06:01,490 --> 00:06:05,060
of things and then it's available for

00:06:03,409 --> 00:06:08,509
our data scientists to use to build

00:06:05,060 --> 00:06:10,460
product and with this we had this idea

00:06:08,509 --> 00:06:11,960
of like exactly what goes on in our

00:06:10,460 --> 00:06:14,479
platform and it turns out quite a lot

00:06:11,960 --> 00:06:16,930
goes on we generate roughly 300 million

00:06:14,479 --> 00:06:19,610
interactions with the site per day so

00:06:16,930 --> 00:06:21,349
with that what could we do we kind of

00:06:19,610 --> 00:06:24,860
needed to understand what they were

00:06:21,349 --> 00:06:27,409
looking for so to understand what users

00:06:24,860 --> 00:06:29,779
are looking for we had to create this we

00:06:27,409 --> 00:06:32,210
create a micro service and it basically

00:06:29,779 --> 00:06:35,330
stores aggregate user activities daily

00:06:32,210 --> 00:06:38,360
for the last 30 days in Cassandra and

00:06:35,330 --> 00:06:40,879
when this API is called for example by

00:06:38,360 --> 00:06:43,550
our search platform the profile returned

00:06:40,879 --> 00:06:44,899
includes preferences for this user about

00:06:43,550 --> 00:06:47,990
a number of different things you know

00:06:44,899 --> 00:06:50,060
what a continuous features like price

00:06:47,990 --> 00:06:52,069
like how where does what it does this

00:06:50,060 --> 00:06:54,349
users price distribution look like what

00:06:52,069 --> 00:06:56,100
does their mileage distribution look

00:06:54,349 --> 00:06:58,470
like and then also more

00:06:56,100 --> 00:07:00,650
categorical information what makes the

00:06:58,470 --> 00:07:03,330
they look at what models and fuel types

00:07:00,650 --> 00:07:07,920
and this kind of allowed us to actually

00:07:03,330 --> 00:07:09,450
know what our users look at the next

00:07:07,920 --> 00:07:11,640
step is obviously well then we need to

00:07:09,450 --> 00:07:13,980
use that data somehow so what should we

00:07:11,640 --> 00:07:16,380
show them with this profile information

00:07:13,980 --> 00:07:18,390
we can the could show users results that

00:07:16,380 --> 00:07:20,490
match their preferences so our first

00:07:18,390 --> 00:07:24,840
iteration of relevancy search relevancy

00:07:20,490 --> 00:07:28,350
search 1.0 uses the same user behavior

00:07:24,840 --> 00:07:31,050
to match cars to them so when a search

00:07:28,350 --> 00:07:32,760
request is executed on a platform its

00:07:31,050 --> 00:07:34,770
enriched with this profile and an

00:07:32,760 --> 00:07:36,570
elastic search queries generated that

00:07:34,770 --> 00:07:38,520
respects both the original search your

00:07:36,570 --> 00:07:40,770
hard fillers make and model with

00:07:38,520 --> 00:07:44,580
additional waiting for features based on

00:07:40,770 --> 00:07:46,740
how closely this advert matches this

00:07:44,580 --> 00:07:49,080
users profile and this was kind of our

00:07:46,740 --> 00:07:51,480
first smart product that mobile app and

00:07:49,080 --> 00:07:53,580
from a technical point of view this

00:07:51,480 --> 00:07:55,020
project had many key outcomes for us it

00:07:53,580 --> 00:07:57,210
allowed us to understand how to track

00:07:55,020 --> 00:07:59,070
user interactions how to generate

00:07:57,210 --> 00:08:00,710
actionable information and even more

00:07:59,070 --> 00:08:04,650
importantly how to use this information

00:08:00,710 --> 00:08:06,990
to generate relevance for users and from

00:08:04,650 --> 00:08:08,460
a business point of view we did see

00:08:06,990 --> 00:08:11,040
there was a growth of demand for dealers

00:08:08,460 --> 00:08:13,140
because users were shown more relevant

00:08:11,040 --> 00:08:15,780
adverts and so they were contacting

00:08:13,140 --> 00:08:18,030
dealers more often and this kind of

00:08:15,780 --> 00:08:20,040
reassured business that okay these guys

00:08:18,030 --> 00:08:22,470
in the data team did they do know what

00:08:20,040 --> 00:08:24,060
they're doing and we can leverage I

00:08:22,470 --> 00:08:26,940
wrote AR to generate real business

00:08:24,060 --> 00:08:30,060
results so with that done we kind of

00:08:26,940 --> 00:08:34,560
moved on to this concept of what a good

00:08:30,060 --> 00:08:36,360
offer is on our platform and and if you

00:08:34,560 --> 00:08:39,660
look at these two listings you can kinda

00:08:36,360 --> 00:08:41,849
see that they're pretty similar you know

00:08:39,660 --> 00:08:43,440
it's not immediately obvious which one

00:08:41,849 --> 00:08:45,330
of these is better unless you're someone

00:08:43,440 --> 00:08:48,000
who's really into cars they're the same

00:08:45,330 --> 00:08:49,820
price and the top cars slightly newer

00:08:48,000 --> 00:08:53,670
the bottom car has a lower mileage

00:08:49,820 --> 00:08:56,580
they're similar when it comes to their

00:08:53,670 --> 00:08:59,010
actual make and model so unless you're a

00:08:56,580 --> 00:09:00,570
truly informed buyer it can be really

00:08:59,010 --> 00:09:03,120
hard to work out whether or not you're

00:09:00,570 --> 00:09:05,400
getting value for money and we thought

00:09:03,120 --> 00:09:06,990
we could help with this luckily we're a

00:09:05,400 --> 00:09:09,510
car listing platform we had a lot of

00:09:06,990 --> 00:09:10,050
data about cars so we had kind of less

00:09:09,510 --> 00:09:12,899
than price

00:09:10,050 --> 00:09:14,640
mileages attributes everything that one

00:09:12,899 --> 00:09:16,950
needs to think about when determining

00:09:14,640 --> 00:09:19,649
the value of a car and so we introduced

00:09:16,950 --> 00:09:21,510
these price weighting labels and our

00:09:19,649 --> 00:09:23,070
price rating basically works by looking

00:09:21,510 --> 00:09:25,170
at how much cars that match the

00:09:23,070 --> 00:09:27,269
specification of the current Westin have

00:09:25,170 --> 00:09:29,279
been listed for previously and it uses

00:09:27,269 --> 00:09:31,560
this value to determine whether a less

00:09:29,279 --> 00:09:34,950
than price is very good it's a fair

00:09:31,560 --> 00:09:38,760
price it's overpriced you know or one of

00:09:34,950 --> 00:09:40,170
these buckets for this car and from a

00:09:38,760 --> 00:09:42,000
technical point of view it kind of was

00:09:40,170 --> 00:09:44,130
approached as a typical machine learning

00:09:42,000 --> 00:09:47,339
fashion we had lots of data about

00:09:44,130 --> 00:09:48,750
listings on our platform and exploration

00:09:47,339 --> 00:09:50,610
clean up things like this and the data

00:09:48,750 --> 00:09:52,260
scientists trained an offline machine

00:09:50,610 --> 00:09:55,440
learning model to do a price prediction

00:09:52,260 --> 00:09:56,700
and when we had this model we deployed

00:09:55,440 --> 00:10:00,089
it as a micro service in our

00:09:56,700 --> 00:10:01,709
infrastructure it's using h2o and the

00:10:00,089 --> 00:10:04,140
micro service basically uses this model

00:10:01,709 --> 00:10:06,810
to provide price ratings for our given

00:10:04,140 --> 00:10:09,120
advert through a REST API so whenever an

00:10:06,810 --> 00:10:11,910
ad is updated on our service they're on

00:10:09,120 --> 00:10:14,190
our platform so it calls this price

00:10:11,910 --> 00:10:15,839
rating service a label is returned for

00:10:14,190 --> 00:10:18,870
the advert and this is stored alongside

00:10:15,839 --> 00:10:21,089
the advert in our database and indexed

00:10:18,870 --> 00:10:23,730
into our elastic search cluster to be

00:10:21,089 --> 00:10:26,610
available query time and again this can

00:10:23,730 --> 00:10:28,589
have had more more key outcomes for us

00:10:26,610 --> 00:10:30,810
because it taught us a number of things

00:10:28,589 --> 00:10:34,230
it gave us the both the confidence and

00:10:30,810 --> 00:10:36,930
the skills and the knowledge that we had

00:10:34,230 --> 00:10:38,490
the infrastructure to create low latency

00:10:36,930 --> 00:10:40,500
machine learning projects and to put

00:10:38,490 --> 00:10:43,020
them online and deploy them in a way

00:10:40,500 --> 00:10:44,700
that fits with our platform and our

00:10:43,020 --> 00:10:46,860
users really appreciated these price

00:10:44,700 --> 00:10:49,350
labels it helped for them to demystify

00:10:46,860 --> 00:10:50,910
the car buying process and they felt

00:10:49,350 --> 00:10:53,970
like we were on their site so we gained

00:10:50,910 --> 00:10:55,949
quite a lot of em trust with our users

00:10:53,970 --> 00:10:59,100
then they think were there for them

00:10:55,949 --> 00:11:01,440
however dealers did not really like this

00:10:59,100 --> 00:11:03,870
feature quite often they felt that the

00:11:01,440 --> 00:11:06,060
pricing was unfair and based on their

00:11:03,870 --> 00:11:08,070
experience as a car dealer but whether

00:11:06,060 --> 00:11:10,110
or not this is true the data says one

00:11:08,070 --> 00:11:12,269
thing they say another and they also

00:11:10,110 --> 00:11:14,130
really felt like they lost control over

00:11:12,269 --> 00:11:16,320
the process because we were now telling

00:11:14,130 --> 00:11:18,270
dealers and we were telling users sorry

00:11:16,320 --> 00:11:20,310
this is a good price for a car they

00:11:18,270 --> 00:11:22,959
weren't telling them that

00:11:20,310 --> 00:11:24,670
so these are two like small kind of

00:11:22,959 --> 00:11:26,709
services that we deployed on our way to

00:11:24,670 --> 00:11:29,920
build in this proper relevancy search

00:11:26,709 --> 00:11:31,959
and so we can add this user information

00:11:29,920 --> 00:11:33,779
though and we proved their concept that

00:11:31,959 --> 00:11:36,610
showing more relevant adverts to user

00:11:33,779 --> 00:11:39,790
leads to more demand in what we call

00:11:36,610 --> 00:11:41,740
search 1.0 and we now also had this idea

00:11:39,790 --> 00:11:44,350
of what a good deal is on our platform

00:11:41,740 --> 00:11:46,120
and what isn't so we wanted to combine

00:11:44,350 --> 00:11:48,459
these products with our kind of other

00:11:46,120 --> 00:11:51,069
defined search features are parts of the

00:11:48,459 --> 00:11:53,769
puzzle from earlier on to create like

00:11:51,069 --> 00:11:55,209
our most user relevant search today and

00:11:53,769 --> 00:11:58,060
this is where learning to rank comes in

00:11:55,209 --> 00:12:00,519
to it so we decided on this approach for

00:11:58,060 --> 00:12:02,589
our version 2.0 due to a number of

00:12:00,519 --> 00:12:04,269
different factors kind of we had some

00:12:02,589 --> 00:12:06,639
data scientists within the team who knew

00:12:04,269 --> 00:12:08,740
a bit about learnings rank who were at

00:12:06,639 --> 00:12:10,269
least aware of it and we had other

00:12:08,740 --> 00:12:12,040
people who were interested in learning

00:12:10,269 --> 00:12:16,269
how to use it data scientists engineers

00:12:12,040 --> 00:12:17,800
and I kind of were interested in moving

00:12:16,269 --> 00:12:20,410
from the academic to applying it in the

00:12:17,800 --> 00:12:24,300
real world and finally it fit into our

00:12:20,410 --> 00:12:27,069
existing infrastructure quite easily so

00:12:24,300 --> 00:12:28,990
learning to rank is like a supervised

00:12:27,069 --> 00:12:30,880
machine learning approach and it tries

00:12:28,990 --> 00:12:33,430
to produce the most relevant order in of

00:12:30,880 --> 00:12:35,170
results for a given input list now

00:12:33,430 --> 00:12:38,170
training data in this takes the form of

00:12:35,170 --> 00:12:40,540
kind of list with some partial order

00:12:38,170 --> 00:12:42,610
specified by a judgment of relevancy and

00:12:40,540 --> 00:12:45,610
the purpose of the model is to rank

00:12:42,610 --> 00:12:48,310
items in new unseen lists in a way that

00:12:45,610 --> 00:12:50,439
produces a similar ranking to that seen

00:12:48,310 --> 00:12:53,079
in the training data and it maximizing

00:12:50,439 --> 00:12:55,389
the relevancy for the user so the

00:12:53,079 --> 00:12:57,699
example on the left is like a Google

00:12:55,389 --> 00:12:59,769
search and the way the air search works

00:12:57,699 --> 00:13:01,509
on a really simplified really basic

00:12:59,769 --> 00:13:03,459
level and I apologize if anyone from

00:13:01,509 --> 00:13:05,259
Google's here and they have a less

00:13:03,459 --> 00:13:07,480
decrees and documents that match the

00:13:05,259 --> 00:13:09,189
given create and from this a relevance

00:13:07,480 --> 00:13:11,230
degree is created but in the case of

00:13:09,189 --> 00:13:14,740
Google this is performed manually by by

00:13:11,230 --> 00:13:18,100
raters or human Assessors now I've

00:13:14,740 --> 00:13:21,220
searched for learning to rank here and

00:13:18,100 --> 00:13:23,470
the results are ordered three to zero in

00:13:21,220 --> 00:13:25,449
terms of relevancy now the top results

00:13:23,470 --> 00:13:27,009
an academic paper that introduces learn

00:13:25,449 --> 00:13:28,839
interact that sounds like quite a

00:13:27,009 --> 00:13:30,819
relevant thing for this but if you keep

00:13:28,839 --> 00:13:32,990
going down the list you come to TF

00:13:30,819 --> 00:13:35,720
ranking which is a tensorflow library

00:13:32,990 --> 00:13:36,080
now I've only searched for learning to

00:13:35,720 --> 00:13:37,730
rank

00:13:36,080 --> 00:13:39,620
I've not specified what I want to do

00:13:37,730 --> 00:13:44,450
with it so that's maybe less relevant to

00:13:39,620 --> 00:13:46,250
the average user than a paper and this

00:13:44,450 --> 00:13:47,960
is kind of a subjective approach to

00:13:46,250 --> 00:13:50,690
relevancy and it needs to be judged by

00:13:47,960 --> 00:13:53,600
someone now in our case relevance is not

00:13:50,690 --> 00:13:55,700
as easy to define subjectively and for

00:13:53,600 --> 00:13:58,910
example if a user on our platform

00:13:55,700 --> 00:14:00,320
searches for a blue Mercedes how can we

00:13:58,910 --> 00:14:02,780
look at a list of results that match

00:14:00,320 --> 00:14:04,700
this query and say this blue Mercedes is

00:14:02,780 --> 00:14:07,520
more relevant than that blue Mercedes we

00:14:04,700 --> 00:14:09,110
can't really so in our approach we don't

00:14:07,520 --> 00:14:12,530
use this human assessment we don't use

00:14:09,110 --> 00:14:14,690
this subject so much subjective we had

00:14:12,530 --> 00:14:16,850
to generate some form of a relevancy

00:14:14,690 --> 00:14:19,430
signal to allow our model strengths now

00:14:16,850 --> 00:14:22,640
we're currently experimenting with

00:14:19,430 --> 00:14:24,050
different signals and each of them have

00:14:22,640 --> 00:14:26,980
their own drawbacks and their own

00:14:24,050 --> 00:14:29,480
positives and but for our first test

00:14:26,980 --> 00:14:31,460
we're using whether given advert was

00:14:29,480 --> 00:14:33,260
clicked or not in a set of results as a

00:14:31,460 --> 00:14:35,510
signal for relevancy so on the right

00:14:33,260 --> 00:14:38,720
hand side we have results from Mercedes

00:14:35,510 --> 00:14:40,250
Benz and we have 0 1 0 the second advert

00:14:38,720 --> 00:14:42,580
was clicked for that user

00:14:40,250 --> 00:14:45,050
it was the most relevant ad very happy

00:14:42,580 --> 00:14:46,700
and then when we train the model we use

00:14:45,050 --> 00:14:49,460
kind of a large number of input features

00:14:46,700 --> 00:14:51,350
and these are tied together this with

00:14:49,460 --> 00:14:54,350
kind of the other products we built so

00:14:51,350 --> 00:14:57,800
many these features are derived from

00:14:54,350 --> 00:15:00,230
with respect to the users profile that's

00:14:57,800 --> 00:15:02,450
calculated earlier for example where

00:15:00,230 --> 00:15:04,490
does this less thing set within the

00:15:02,450 --> 00:15:07,070
distribution of this users price

00:15:04,490 --> 00:15:10,720
preference and how close to the mean is

00:15:07,070 --> 00:15:12,890
it and our data also shows that the

00:15:10,720 --> 00:15:14,540
price rating labels we introduced are

00:15:12,890 --> 00:15:17,720
actually one of the most important

00:15:14,540 --> 00:15:21,590
features for this signal of relevancy

00:15:17,720 --> 00:15:24,440
whether or not a user clicks so we use a

00:15:21,590 --> 00:15:26,630
Java library called rank Club to train

00:15:24,440 --> 00:15:28,430
our learning to rank models it provides

00:15:26,630 --> 00:15:29,930
kind of a good collection of different

00:15:28,430 --> 00:15:32,180
learning throughout algorithms

00:15:29,930 --> 00:15:34,040
out-of-the-box and the models it

00:15:32,180 --> 00:15:36,230
generally integrate easily within our

00:15:34,040 --> 00:15:38,240
elastic search based infrastructure and

00:15:36,230 --> 00:15:39,850
the reason it integrates easily is

00:15:38,240 --> 00:15:42,400
because there's a brilliant plugin

00:15:39,850 --> 00:15:45,350
called elastic search learning to rank

00:15:42,400 --> 00:15:46,490
it's an open source plug-in and created

00:15:45,350 --> 00:15:47,810
by open source

00:15:46,490 --> 00:15:49,640
connections and maintained by them and

00:15:47,810 --> 00:15:51,560
allows you to deploy your machine

00:15:49,640 --> 00:15:53,750
learning models and things like your

00:15:51,560 --> 00:15:55,790
feature transformations directly into

00:15:53,750 --> 00:15:57,980
your elasticsearch cluster and you can

00:15:55,790 --> 00:16:01,760
then use these query time for Arirang

00:15:57,980 --> 00:16:04,100
'king search results so how does it look

00:16:01,760 --> 00:16:06,410
on our platform and a search request

00:16:04,100 --> 00:16:08,810
comes in from our front end and it

00:16:06,410 --> 00:16:10,279
reaches our search service now here it's

00:16:08,810 --> 00:16:12,860
enriched with user preference

00:16:10,279 --> 00:16:14,680
information and this is combined to

00:16:12,860 --> 00:16:17,390
generate your elastic search queries

00:16:14,680 --> 00:16:20,270
with a little bit of this arirang keen

00:16:17,390 --> 00:16:23,240
magic that comes from the learners rank

00:16:20,270 --> 00:16:27,440
plugin so this is basically the same

00:16:23,240 --> 00:16:29,570
process now as relevant say 1.0 and our

00:16:27,440 --> 00:16:32,000
elastic search cluster contains all our

00:16:29,570 --> 00:16:34,459
adverts with all data that can be pre

00:16:32,000 --> 00:16:37,820
calculated so such as price rating

00:16:34,459 --> 00:16:41,470
dealer ratings images description things

00:16:37,820 --> 00:16:44,510
like this our query is then executed

00:16:41,470 --> 00:16:46,370
against this cluster and every document

00:16:44,510 --> 00:16:49,610
that matches hard fellers your make

00:16:46,370 --> 00:16:52,370
model any user-defined hard fillers are

00:16:49,610 --> 00:16:54,230
given a score based on where the adverts

00:16:52,370 --> 00:16:57,079
fall in the distribution of user

00:16:54,230 --> 00:17:00,320
preferences again the exact same as our

00:16:57,079 --> 00:17:03,380
first user relevancy search now next the

00:17:00,320 --> 00:17:05,240
top end results and in our case is

00:17:03,380 --> 00:17:09,010
around 100 this has been trial and error

00:17:05,240 --> 00:17:13,300
and it's a mix between performance and

00:17:09,010 --> 00:17:17,020
performance of the relevancy scorn and

00:17:13,300 --> 00:17:19,550
performance from a more technical aspect

00:17:17,020 --> 00:17:22,100
these are then rescored using this

00:17:19,550 --> 00:17:24,770
machine learning model a learning track

00:17:22,100 --> 00:17:26,720
and the scores from the first step are

00:17:24,770 --> 00:17:30,679
basically thrown away we discard them

00:17:26,720 --> 00:17:33,290
and these adverts are then scored by our

00:17:30,679 --> 00:17:35,360
model and this is based on all the

00:17:33,290 --> 00:17:37,340
different input features we have which

00:17:35,360 --> 00:17:39,050
are things like where the advert Falls

00:17:37,340 --> 00:17:42,320
and the distribution of user preferences

00:17:39,050 --> 00:17:43,880
that's a that's an input but also other

00:17:42,320 --> 00:17:46,160
features like the completeness of the

00:17:43,880 --> 00:17:48,020
description the number of images this

00:17:46,160 --> 00:17:51,470
dealers rating relative to other dealers

00:17:48,020 --> 00:17:54,980
all these kind of jig jigsaw puzzle

00:17:51,470 --> 00:17:57,230
pieces our input and the result is

00:17:54,980 --> 00:17:59,290
returned to search with the advert

00:17:57,230 --> 00:18:02,830
sorted by the highest relevancy score

00:17:59,290 --> 00:18:05,020
so again we're currently still test in

00:18:02,830 --> 00:18:06,820
our lone interact solution and but so

00:18:05,020 --> 00:18:09,670
far the results look really promising

00:18:06,820 --> 00:18:11,710
from our early insights we've boosted

00:18:09,670 --> 00:18:14,650
the position of the median first clicked

00:18:11,710 --> 00:18:16,930
advert and this is kind of one proxy we

00:18:14,650 --> 00:18:19,300
use for implicit user relevance the

00:18:16,930 --> 00:18:20,980
higher the user clicks the better the

00:18:19,300 --> 00:18:23,770
adverts we are showing them we think and

00:18:20,980 --> 00:18:25,990
in the longer run hopefully we'll also

00:18:23,770 --> 00:18:28,210
see changes in explicit user preferences

00:18:25,990 --> 00:18:30,430
or explicit user experience sorry

00:18:28,210 --> 00:18:32,770
for example Net Promoter Score if our

00:18:30,430 --> 00:18:35,320
plot our hypothesis if our platform

00:18:32,770 --> 00:18:37,060
delivers better results users are more

00:18:35,320 --> 00:18:39,100
likely to recommend it or be able to a

00:18:37,060 --> 00:18:41,320
friend and from a technical point of

00:18:39,100 --> 00:18:43,300
view we introduced learn interact with

00:18:41,320 --> 00:18:44,920
our platform it gave us a great deal of

00:18:43,300 --> 00:18:47,260
extra knowledge especially in all things

00:18:44,920 --> 00:18:48,730
that lastic search and we've managed to

00:18:47,260 --> 00:18:51,100
get the required infrastructure in place

00:18:48,730 --> 00:18:55,000
and so far all requirements regarding

00:18:51,100 --> 00:18:57,160
latency CPU utilization all these kind

00:18:55,000 --> 00:18:59,050
of things are well within bounds it's

00:18:57,160 --> 00:19:02,920
actually performs as good as a normal

00:18:59,050 --> 00:19:05,890
search in some cases so to wrap this

00:19:02,920 --> 00:19:08,410
kind of off this project for us as a

00:19:05,890 --> 00:19:10,510
whole has many variants but some of the

00:19:08,410 --> 00:19:13,090
key ones where that Big Data projects

00:19:10,510 --> 00:19:14,740
are safer to approach every flee it's

00:19:13,090 --> 00:19:16,360
Marty from business point of view we

00:19:14,740 --> 00:19:19,690
need to show that the time in capital

00:19:16,360 --> 00:19:21,640
invested will be will result in

00:19:19,690 --> 00:19:23,650
something for the business whether it's

00:19:21,640 --> 00:19:25,690
that demand for their increased demand

00:19:23,650 --> 00:19:28,510
for deals or increased satisfaction of

00:19:25,690 --> 00:19:29,560
consumers and technically it also allows

00:19:28,510 --> 00:19:31,330
us to learn on the job

00:19:29,560 --> 00:19:32,890
while giving ourselves the greatest

00:19:31,330 --> 00:19:34,480
chance of success it wouldn't have been

00:19:32,890 --> 00:19:38,310
great if we'd came back after a year and

00:19:34,480 --> 00:19:41,260
said sorry search doesn't work and it

00:19:38,310 --> 00:19:42,970
also confirms to stakeholders that what

00:19:41,260 --> 00:19:45,220
we were doing with there makes sense and

00:19:42,970 --> 00:19:48,250
has a benefit if we can build smarter

00:19:45,220 --> 00:19:49,840
products and finally it served as a

00:19:48,250 --> 00:19:52,570
proof of concept that we can fit machine

00:19:49,840 --> 00:19:54,670
learning into our platform and get great

00:19:52,570 --> 00:19:56,410
results we've built up great experience

00:19:54,670 --> 00:19:58,150
both in our team and candid the further

00:19:56,410 --> 00:20:00,370
product and tech organization in mobula

00:19:58,150 --> 00:20:02,290
and it provides us with a solid

00:20:00,370 --> 00:20:04,540
foundation to build upon as we strive to

00:20:02,290 --> 00:20:08,350
make our products work better for our

00:20:04,540 --> 00:20:11,110
users so hopefully that really quick

00:20:08,350 --> 00:20:12,970
overview has kind of shown what it looks

00:20:11,110 --> 00:20:14,409
like to some degree to

00:20:12,970 --> 00:20:17,470
introduced their products and an

00:20:14,409 --> 00:20:20,159
organization and thanks for listening

00:20:17,470 --> 00:20:20,159
any questions

00:20:22,210 --> 00:20:24,789

YouTube URL: https://www.youtube.com/watch?v=LVGFb47uOao


