Title: Berlin Buzzwords 2018: Joshua Bacher & Christine Bellstedt – Search suggestions as killer feature
Publication date: 2018-06-14
Playlist: Berlin Buzzwords 2018 #bbuzz
Description: 
	Joshua Bacher and Christine Bellstedt talking about "Search Suggestions – the underestimated killer feature of your online shop".

Nearly everybody once faced this situation: you visit an online shopping site, head over to the search box and start typing. Next, you'll get a dropdown list of search suggestions – but many times these suggestions are of poor quality. On the other hand, search suggestions are a helpful feature and add value to the search user experience. In addition, they can also increase your shop performance w.r.t. indicators such as 'add to basket' and 'order value'. But what most people don’t expect: bad suggestions can potentially harm your shop performance. 

We've observed during A/B tests on our top tier e-commerce site that poor search suggestions may have a negative impact on our business performance indicators. Based on this observation we decided to start a project to iteratively improve the quality of our search suggestion engine. 

In this talk, we will share our iterative methodology and our approach to solving the suggestion problem using Elasticsearch, Lucene and machine learning techniques.

Read more:
https://2018.berlinbuzzwords.de/18/session/search-suggestions-underestimated-killer-feature-your-online-shop

About Joshua Bacher:
https://2018.berlinbuzzwords.de/users/joshua-bacher

About Christine Bellstedt:
https://2018.berlinbuzzwords.de/users/christine-bellstedt

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	00:00:05,500 --> 00:00:12,110
so welcome guys to a short talk about

00:00:09,740 --> 00:00:14,469
such suggestions the underestimated

00:00:12,110 --> 00:00:18,609
killer feature of your online shop and

00:00:14,469 --> 00:00:21,650
we are Joshua and Christine and Joshua's

00:00:18,609 --> 00:00:23,420
where are you a technical designer with

00:00:21,650 --> 00:00:27,320
Auto and I'm the business designer in

00:00:23,420 --> 00:00:31,899
search and so my first question is who

00:00:27,320 --> 00:00:34,670
of you know auto no that's quite a lot I

00:00:31,899 --> 00:00:37,100
was not sure so I bought some short

00:00:34,670 --> 00:00:40,430
information so autos the second largest

00:00:37,100 --> 00:00:43,850
online retailer in Germany and we were

00:00:40,430 --> 00:00:48,950
in retail business for about 60 or maybe

00:00:43,850 --> 00:00:51,410
65 years now and we've got around 1.9

00:00:48,950 --> 00:00:55,070
million visits per day in our online

00:00:51,410 --> 00:00:57,800
shop and like about up to 10 orders per

00:00:55,070 --> 00:01:00,920
second now you might wonder why I'm

00:00:57,800 --> 00:01:04,129
telling you this so I'm from my business

00:01:00,920 --> 00:01:06,920
perspective this means that there's a

00:01:04,129 --> 00:01:10,639
lot of risk but also lots of potential

00:01:06,920 --> 00:01:13,609
when implementing new stuff so we really

00:01:10,639 --> 00:01:16,490
need approach good methodology when

00:01:13,609 --> 00:01:19,039
implementing new stuff and implement a

00:01:16,490 --> 00:01:22,279
new stuff that's what we did with the

00:01:19,039 --> 00:01:24,889
octo completion and system and I think

00:01:22,279 --> 00:01:30,219
just Josh can tell you why we did it and

00:01:24,889 --> 00:01:30,219
how I did it yeah Thank You Christine hi

00:01:35,410 --> 00:01:44,150
what I really find is mostly hardly

00:01:40,880 --> 00:01:47,000
distracting is if you're on a

00:01:44,150 --> 00:01:50,540
professional company website and you see

00:01:47,000 --> 00:01:54,920
bad implemented core features of this

00:01:50,540 --> 00:01:58,460
website I think most of you know what I

00:01:54,920 --> 00:02:00,530
mean I think if you just imagine you go

00:01:58,460 --> 00:02:02,990
on a website and you just head over to

00:02:00,530 --> 00:02:05,840
the search box and you type something in

00:02:02,990 --> 00:02:09,580
and you see the first suggestions of the

00:02:05,840 --> 00:02:15,170
autocomplete and you just seek oh crap

00:02:09,580 --> 00:02:17,660
whoever face this ends up I think most

00:02:15,170 --> 00:02:19,490
of us I would say everyone faced it I

00:02:17,660 --> 00:02:24,130
think the other one that's maybe

00:02:19,490 --> 00:02:28,460
snoozing nah no just joking okay

00:02:24,130 --> 00:02:32,320
yeah it's distracting it's like opening

00:02:28,460 --> 00:02:34,970
and parantesis and never ending it it's

00:02:32,320 --> 00:02:37,280
make me crying makes me crying in the

00:02:34,970 --> 00:02:41,770
night yeah

00:02:37,280 --> 00:02:46,940
so why I'm telling you all that all that

00:02:41,770 --> 00:02:49,820
we decided to use go to change our

00:02:46,940 --> 00:02:53,540
search the system that we used before

00:02:49,820 --> 00:02:58,160
was search party implemented solution

00:02:53,540 --> 00:03:01,130
that we used for years and this is a

00:02:58,160 --> 00:03:03,530
decision to change the search system

00:03:01,130 --> 00:03:07,100
unless also involved that we had to

00:03:03,530 --> 00:03:11,330
reimplemented suggestion and while doing

00:03:07,100 --> 00:03:13,100
that we just covered some wheel yeah

00:03:11,330 --> 00:03:17,150
interesting things that we want to share

00:03:13,100 --> 00:03:19,900
with you why did we change or that why

00:03:17,150 --> 00:03:22,670
did we choose to change this is why I

00:03:19,900 --> 00:03:26,330
just put those three words on the

00:03:22,670 --> 00:03:27,980
webpage on the slide we decided to

00:03:26,330 --> 00:03:31,370
change the search system because we said

00:03:27,980 --> 00:03:34,160
if the core feature if there is a

00:03:31,370 --> 00:03:35,680
feature on our webpage that is core then

00:03:34,160 --> 00:03:39,709
we will build it ourselves

00:03:35,680 --> 00:03:42,440
yeah and four problems Christine will

00:03:39,709 --> 00:03:44,600
now talk more about why and how maybe

00:03:42,440 --> 00:03:46,970
yeah okay so we started into

00:03:44,600 --> 00:03:47,930
implementing our new auto computing

00:03:46,970 --> 00:03:50,269
system

00:03:47,930 --> 00:03:54,349
and we did our first step we went online

00:03:50,269 --> 00:03:56,959
we launched it and we said oh wow some

00:03:54,349 --> 00:04:00,650
suggestions really performed quite well

00:03:56,959 --> 00:04:03,140
others really really didn't so um we

00:04:00,650 --> 00:04:04,879
said okay we have to find out what's the

00:04:03,140 --> 00:04:06,980
problem and and we did like an

00:04:04,879 --> 00:04:09,439
assessment of potential so this was our

00:04:06,980 --> 00:04:11,599
approach we tried to find out what was

00:04:09,439 --> 00:04:14,420
the difference between the high and low

00:04:11,599 --> 00:04:19,220
performing suggestions we try to

00:04:14,420 --> 00:04:21,530
categorize so to find out which which of

00:04:19,220 --> 00:04:23,960
the differences have the biggest effect

00:04:21,530 --> 00:04:27,590
on the performance the business

00:04:23,960 --> 00:04:30,830
performance of our suggestions and to

00:04:27,590 --> 00:04:34,210
find out how big is the potential if we

00:04:30,830 --> 00:04:37,039
change those differences differences

00:04:34,210 --> 00:04:42,889
yeah what can we do with the suggests so

00:04:37,039 --> 00:04:45,380
um what we did is we found out that some

00:04:42,889 --> 00:04:47,780
suggestions just seemed absolutely wrong

00:04:45,380 --> 00:04:50,139
to us so we didn't understand why we

00:04:47,780 --> 00:04:52,849
would suggest anything like that and

00:04:50,139 --> 00:04:55,099
some others were just similar to others

00:04:52,849 --> 00:04:57,830
I think probably every one of you has

00:04:55,099 --> 00:05:00,199
has seen that also before and we found

00:04:57,830 --> 00:05:02,840
out that the suggestion the position of

00:05:00,199 --> 00:05:04,699
the suggestion has an effect on how

00:05:02,840 --> 00:05:08,510
often it is used I think we are all

00:05:04,699 --> 00:05:12,889
familiar with that effect and also one

00:05:08,510 --> 00:05:16,930
thing we found out while analyzing the

00:05:12,889 --> 00:05:20,360
data was that the relevance of a

00:05:16,930 --> 00:05:24,380
suggestion changes quite frequently so

00:05:20,360 --> 00:05:26,509
if a suggestion is relevant today it

00:05:24,380 --> 00:05:31,490
doesn't mean it's relevant tomorrow for

00:05:26,509 --> 00:05:33,080
us so what we did basically is analyzing

00:05:31,490 --> 00:05:35,599
analyzing analyzing analyzing analyzing

00:05:33,080 --> 00:05:37,580
our data and going through trying to

00:05:35,599 --> 00:05:39,949
find out those differences and trying to

00:05:37,580 --> 00:05:43,909
find out how they're using interacting

00:05:39,949 --> 00:05:47,210
with that so the next step was we set a

00:05:43,909 --> 00:05:50,500
new goal for us so we said okay based on

00:05:47,210 --> 00:05:53,240
those differences or these these

00:05:50,500 --> 00:05:57,950
observations we made our new goal is to

00:05:53,240 --> 00:06:00,840
set up an automated mechanism for really

00:05:57,950 --> 00:06:03,810
good forming frequently and contain

00:06:00,840 --> 00:06:06,030
delivered suggestions but we also said

00:06:03,810 --> 00:06:08,970
as I told you before from business

00:06:06,030 --> 00:06:11,910
perspective there's kind of a lot of

00:06:08,970 --> 00:06:15,630
risk and also lots of potential with the

00:06:11,910 --> 00:06:16,919
the you traffic we've got on auto and we

00:06:15,630 --> 00:06:20,340
said okay we have to do it like

00:06:16,919 --> 00:06:23,389
iteratively we have to discover and

00:06:20,340 --> 00:06:26,639
implement fitting solutions for each

00:06:23,389 --> 00:06:30,479
thing or difference we found out we have

00:06:26,639 --> 00:06:32,820
to test the new version of the search

00:06:30,479 --> 00:06:35,250
suggests against the the old version so

00:06:32,820 --> 00:06:39,120
we can find out was there really the

00:06:35,250 --> 00:06:41,639
potential we assumed to be there so and

00:06:39,120 --> 00:06:44,610
so on and after that again observing new

00:06:41,639 --> 00:06:46,470
potentials and increase our potential

00:06:44,610 --> 00:06:49,710
and the relevance of our suggestions

00:06:46,470 --> 00:06:51,690
based on the experiment and now just

00:06:49,710 --> 00:06:57,030
we'll give you a short overview on the

00:06:51,690 --> 00:06:59,310
implementations we did yeah okay as we

00:06:57,030 --> 00:07:02,610
learned from Christine thank you from

00:06:59,310 --> 00:07:06,240
there for that Christine we saw that

00:07:02,610 --> 00:07:10,200
there are some really bad suggestions

00:07:06,240 --> 00:07:13,770
that were just wrong spelled and what

00:07:10,200 --> 00:07:16,860
you can do about wrong spell spelling in

00:07:13,770 --> 00:07:19,200
in such words is you can use the

00:07:16,860 --> 00:07:24,750
dictionary dictionary I think everybody

00:07:19,200 --> 00:07:28,380
is yeah it's not a big magic to do so

00:07:24,750 --> 00:07:30,240
but where can you go get get the

00:07:28,380 --> 00:07:33,599
dictionary from that was the first thing

00:07:30,240 --> 00:07:36,690
that we tried to solve and I think it's

00:07:33,599 --> 00:07:39,599
quite obvious but I just mentioned it we

00:07:36,690 --> 00:07:42,419
just took our product data the product

00:07:39,599 --> 00:07:44,660
data has all words in there that we need

00:07:42,419 --> 00:07:47,910
to use maybe there are some missing

00:07:44,660 --> 00:07:49,740
probably synonyms or something like that

00:07:47,910 --> 00:07:51,990
but I don't think that we want to

00:07:49,740 --> 00:07:55,620
suggest synonyms but normal search

00:07:51,990 --> 00:07:57,599
phrases well yes so this is our base

00:07:55,620 --> 00:07:59,370
this is our dictionary we are taking

00:07:57,599 --> 00:08:04,200
just everything that is a product data

00:07:59,370 --> 00:08:06,360
and use it in our suggestions in

00:08:04,200 --> 00:08:10,190
delivering or calculating the

00:08:06,360 --> 00:08:10,190
suggestions we need we want to

00:08:10,919 --> 00:08:16,919
delivered by the out completion tone yes

00:08:14,370 --> 00:08:21,060
and what is the other point of truce

00:08:16,919 --> 00:08:23,580
that we use we just saw okay we don't

00:08:21,060 --> 00:08:24,900
need only we don't just need the

00:08:23,580 --> 00:08:26,550
suggestions or the words in the

00:08:24,900 --> 00:08:30,150
dictionaries but we also need some

00:08:26,550 --> 00:08:33,599
information about how frequent users

00:08:30,150 --> 00:08:36,960
tried to search for that word so the

00:08:33,599 --> 00:08:39,919
next quite obvious source to look in was

00:08:36,960 --> 00:08:43,349
the click stream the click stream is

00:08:39,919 --> 00:08:46,620
it's a mechanism that we use and it just

00:08:43,349 --> 00:08:52,410
made some name dropping there Kafka and

00:08:46,620 --> 00:08:54,720
spark we just track every movement of

00:08:52,410 --> 00:08:57,660
the user and write it to a database

00:08:54,720 --> 00:09:00,390
database it's not a database it's Kafka

00:08:57,660 --> 00:09:05,460
in a stream we aggregate the data there

00:09:00,390 --> 00:09:08,400
and we are able after that to use it for

00:09:05,460 --> 00:09:11,310
calculations for example to calculate

00:09:08,400 --> 00:09:17,310
the search frequencies and we use this

00:09:11,310 --> 00:09:18,990
information together with was the

00:09:17,310 --> 00:09:22,339
product data that we have so you see

00:09:18,990 --> 00:09:25,440
something like we have search that was

00:09:22,339 --> 00:09:28,500
executed by a certified by a user he was

00:09:25,440 --> 00:09:32,550
searching for trousers and we also see

00:09:28,500 --> 00:09:35,240
that this search was an exit sect hit in

00:09:32,550 --> 00:09:38,880
our product data so we are carrying our

00:09:35,240 --> 00:09:42,060
zola do a search engine it's based on

00:09:38,880 --> 00:09:44,430
Zula and we see if it's an exact match

00:09:42,060 --> 00:09:46,589
of it somehow fuzzy or something like

00:09:44,430 --> 00:09:48,270
that and we write it out to the kick

00:09:46,589 --> 00:09:51,300
stream and that's the source where we

00:09:48,270 --> 00:09:53,820
can read from afterwards and decide okay

00:09:51,300 --> 00:09:57,209
is this something that is an exit or not

00:09:53,820 --> 00:09:59,940
and then we can use this information and

00:09:57,209 --> 00:10:06,320
deliver spell correct results with a

00:09:59,940 --> 00:10:08,230
frequency I think it's easy right got it

00:10:06,320 --> 00:10:11,750
cool

00:10:08,230 --> 00:10:15,670
okay the next little trick that we had

00:10:11,750 --> 00:10:20,690
to solve is removal of public eighths

00:10:15,670 --> 00:10:23,780
just imagine you have something like one

00:10:20,690 --> 00:10:26,840
user searches for trousers girls and the

00:10:23,780 --> 00:10:30,530
next one for girls trousers and the next

00:10:26,840 --> 00:10:33,950
one for girl trousers the seed point so

00:10:30,530 --> 00:10:37,010
you're just having some slight

00:10:33,950 --> 00:10:39,070
differences in what does what user is

00:10:37,010 --> 00:10:42,140
searching but you want to somehow ensure

00:10:39,070 --> 00:10:49,460
that your search suggest is not spammed

00:10:42,140 --> 00:10:52,040
by all those very close suggestions and

00:10:49,460 --> 00:10:54,110
this is why we just had to spend another

00:10:52,040 --> 00:10:57,190
thought on that problem how to solve

00:10:54,110 --> 00:11:00,170
that and this is why how we solved it

00:10:57,190 --> 00:11:02,270
you see on the right side is what I

00:11:00,170 --> 00:11:09,500
mentioned you have suggestions that are

00:11:02,270 --> 00:11:11,270
quite equal but they are not and we

00:11:09,500 --> 00:11:14,630
implemented some something that we call

00:11:11,270 --> 00:11:16,790
fingerprinting to be more technical it's

00:11:14,630 --> 00:11:21,350
something like equal equivalence

00:11:16,790 --> 00:11:24,980
relation so you are trying to find a

00:11:21,350 --> 00:11:28,070
signature to match your queries against

00:11:24,980 --> 00:11:30,440
and group them by that so what we did is

00:11:28,070 --> 00:11:33,080
if we have this example Charles of girls

00:11:30,440 --> 00:11:39,050
we just I don't don't know how how many

00:11:33,080 --> 00:11:41,390
people ever used to see okay so the

00:11:39,050 --> 00:11:44,150
scene has some standard mechanisms to

00:11:41,390 --> 00:11:46,510
work on we're concerned and so our words

00:11:44,150 --> 00:11:49,370
or something like that on text better

00:11:46,510 --> 00:11:55,000
and those standard mechanisms can be

00:11:49,370 --> 00:11:57,380
used to process text and that is what we

00:11:55,000 --> 00:12:00,020
what we have done here we used something

00:11:57,380 --> 00:12:05,420
that is called analyzers and then in an

00:12:00,020 --> 00:12:08,530
analyzer pipeline which is quite easy to

00:12:05,420 --> 00:12:10,910
do and which doesn't need much

00:12:08,530 --> 00:12:13,700
professional insight about it it was

00:12:10,910 --> 00:12:16,700
cool it was easy and yeah the result was

00:12:13,700 --> 00:12:18,410
quite intimidating for us so the first

00:12:16,700 --> 00:12:20,930
thing what this analyze the pipeline is

00:12:18,410 --> 00:12:23,899
doing it just tokenized us the sentence

00:12:20,930 --> 00:12:25,520
in in the words we are doing on the

00:12:23,899 --> 00:12:28,160
words on the tokens we just make it

00:12:25,520 --> 00:12:31,240
lower case we extract stop words from

00:12:28,160 --> 00:12:33,950
that after that we do some stemming

00:12:31,240 --> 00:12:37,399
stemming is a standard procedure on the

00:12:33,950 --> 00:12:42,380
scene where you try to match words

00:12:37,399 --> 00:12:45,410
against their I don't know how to

00:12:42,380 --> 00:12:49,820
describe this perfectly it's just

00:12:45,410 --> 00:12:52,360
procedure stemming maybe I can talk

00:12:49,820 --> 00:12:55,370
about it later a bit more or yeah

00:12:52,360 --> 00:12:57,890
whatever after that after the stabbing

00:12:55,370 --> 00:12:58,430
part where you have have you'd use it to

00:12:57,890 --> 00:13:01,339
the base

00:12:58,430 --> 00:13:03,500
you just sort it and you could get this

00:13:01,339 --> 00:13:05,330
fingerprint that is that is up there you

00:13:03,500 --> 00:13:08,089
take the first letter of the of the

00:13:05,330 --> 00:13:09,320
afterwards for the sorting and you get

00:13:08,089 --> 00:13:11,810
something like arouser

00:13:09,320 --> 00:13:16,310
and if you apply this on the list on the

00:13:11,810 --> 00:13:20,660
right side you are able to find all

00:13:16,310 --> 00:13:25,339
similar words suggestions and in the end

00:13:20,660 --> 00:13:28,430
are able to filter them out whoops this

00:13:25,339 --> 00:13:35,779
is the wrong slide right and this is

00:13:28,430 --> 00:13:38,000
somehow how this would be visualized in

00:13:35,779 --> 00:13:40,550
elasticsearch index so we've used

00:13:38,000 --> 00:13:42,890
elasticsearch in the backend to store

00:13:40,550 --> 00:13:44,720
all this information and to query also

00:13:42,890 --> 00:13:47,510
for the suggestions that we deliver in

00:13:44,720 --> 00:13:52,700
the front end and you see here you have

00:13:47,510 --> 00:13:56,660
all those different spellings in one

00:13:52,700 --> 00:14:00,470
group and only one of those will be

00:13:56,660 --> 00:14:03,200
delivered in the front end and it is the

00:14:00,470 --> 00:14:05,480
one was the most frequent or always the

00:14:03,200 --> 00:14:08,770
highest number over there so we can

00:14:05,480 --> 00:14:12,410
delete or we just get rid of all those

00:14:08,770 --> 00:14:16,730
unimportant wrong spellings and are able

00:14:12,410 --> 00:14:21,500
to just deliver better results in this

00:14:16,730 --> 00:14:23,959
list of suggestions yes the next thing

00:14:21,500 --> 00:14:25,910
is delivering frequent suggestions you

00:14:23,959 --> 00:14:29,390
want to deliver all the suggestions that

00:14:25,910 --> 00:14:32,150
you want to deliver relevant suggestions

00:14:29,390 --> 00:14:34,660
that it was that that was was Christine

00:14:32,150 --> 00:14:38,569
was talking about

00:14:34,660 --> 00:14:40,639
what we are doing there is or what what

00:14:38,569 --> 00:14:45,379
mentioned is by that is that you don't

00:14:40,639 --> 00:14:47,810
want to give suggestions that do not

00:14:45,379 --> 00:14:50,990
have any results so just think you don't

00:14:47,810 --> 00:14:54,589
have any products for treasure for

00:14:50,990 --> 00:14:56,329
travel those girls so why give the user

00:14:54,589 --> 00:14:59,990
a suggestion for that it would just lead

00:14:56,329 --> 00:15:03,019
to something where he sings oh what the

00:14:59,990 --> 00:15:05,990
 is going on yeah well and that's

00:15:03,019 --> 00:15:09,709
the reason why we just take another look

00:15:05,990 --> 00:15:10,939
in a click stream where we also track we

00:15:09,709 --> 00:15:14,420
are where we are also tracking the

00:15:10,939 --> 00:15:16,100
number of results that we get and by

00:15:14,420 --> 00:15:21,290
that just filtering out where we have

00:15:16,100 --> 00:15:26,180
zero results we are able to filter out

00:15:21,290 --> 00:15:29,779
out all the irrelevant spellings which

00:15:26,180 --> 00:15:32,980
leads to whoops to the fact that we get

00:15:29,779 --> 00:15:35,959
more relevant suggestions in this list

00:15:32,980 --> 00:15:39,170
yes so this was the first iteration

00:15:35,959 --> 00:15:41,420
where we were able to get some really

00:15:39,170 --> 00:15:43,519
good results but in the end we decided

00:15:41,420 --> 00:15:46,639
to not stop there because we said we can

00:15:43,519 --> 00:15:50,990
do better and why I will tell you

00:15:46,639 --> 00:15:52,879
Christine yeah so um maybe some of you

00:15:50,990 --> 00:15:55,490
heard the talk of the deal yesterday

00:15:52,879 --> 00:15:56,959
about query understanding so I mean

00:15:55,490 --> 00:15:58,790
there was one thing he said and I think

00:15:56,959 --> 00:16:01,519
that's quite important and that's what

00:15:58,790 --> 00:16:04,910
we did right here is you have to decide

00:16:01,519 --> 00:16:08,120
for yourself what is relevance in your

00:16:04,910 --> 00:16:11,120
perspective so we try to define what

00:16:08,120 --> 00:16:13,459
what is business relevance for us and so

00:16:11,120 --> 00:16:15,949
the next step the next iteration we did

00:16:13,459 --> 00:16:18,110
after implementing spell correction

00:16:15,949 --> 00:16:20,329
removing of duplicate and so on which

00:16:18,110 --> 00:16:23,300
was quite good but we thought there's

00:16:20,329 --> 00:16:27,620
still lots of potential and we took the

00:16:23,300 --> 00:16:29,929
next step and we started using key

00:16:27,620 --> 00:16:32,540
performance indicators like a Tabasco

00:16:29,929 --> 00:16:35,480
order value or click through a to detail

00:16:32,540 --> 00:16:37,910
view so not just using a search

00:16:35,480 --> 00:16:40,750
frequency and well yes just explained

00:16:37,910 --> 00:16:44,870
for sorting and suggestions but also

00:16:40,750 --> 00:16:46,560
combining those KPIs to make sure it's

00:16:44,870 --> 00:16:49,730
really business relevance we

00:16:46,560 --> 00:16:52,590
looking for so what we basically did is

00:16:49,730 --> 00:16:55,500
we built something like suggestion

00:16:52,590 --> 00:16:57,720
scorer which is just a scoring model and

00:16:55,500 --> 00:17:01,890
using those KPIs and with different

00:16:57,720 --> 00:17:05,630
weights and combining them and this was

00:17:01,890 --> 00:17:08,730
a really really big step for us because

00:17:05,630 --> 00:17:10,949
we had to move on

00:17:08,730 --> 00:17:12,510
using that clickstream Josh was telling

00:17:10,949 --> 00:17:18,000
about maybe you can give to some

00:17:12,510 --> 00:17:21,540
implementation details so basically what

00:17:18,000 --> 00:17:25,050
we did there was if you have to click

00:17:21,540 --> 00:17:26,970
stream we are also writing data entry in

00:17:25,050 --> 00:17:31,530
a tracking tracking stream that we have

00:17:26,970 --> 00:17:34,920
about all the values and about so you

00:17:31,530 --> 00:17:38,030
can track did the user order something

00:17:34,920 --> 00:17:40,320
while searching afterwards for that and

00:17:38,030 --> 00:17:43,020
was it somehow connected to the search

00:17:40,320 --> 00:17:45,810
so this the autovalue the other way is

00:17:43,020 --> 00:17:47,910
to click through rate did the user click

00:17:45,810 --> 00:17:50,700
through the products of the search this

00:17:47,910 --> 00:17:54,210
is important information for us and what

00:17:50,700 --> 00:17:58,350
you can do then is after you have those

00:17:54,210 --> 00:18:00,860
informations you can just take them put

00:17:58,350 --> 00:18:04,320
them together in a formula so

00:18:00,860 --> 00:18:08,340
click-through rate plus search frequency

00:18:04,320 --> 00:18:10,590
plus order value and then calculate

00:18:08,340 --> 00:18:14,780
somehow what is important what is not

00:18:10,590 --> 00:18:18,240
and since you want to somehow influence

00:18:14,780 --> 00:18:19,790
how important this information should be

00:18:18,240 --> 00:18:23,190
in the result

00:18:19,790 --> 00:18:24,810
you also take weights in there I think

00:18:23,190 --> 00:18:26,790
this is standard procedure everyone

00:18:24,810 --> 00:18:33,330
knows that so you have click-through

00:18:26,790 --> 00:18:38,190
rate times a plus or a value times B

00:18:33,330 --> 00:18:42,900
plus search frequency hopefully I get a

00:18:38,190 --> 00:18:49,920
right time see I I think this is quite

00:18:42,900 --> 00:18:52,950
clear it's this fine for you so um after

00:18:49,920 --> 00:18:55,410
the first iteration when we did a spell

00:18:52,950 --> 00:18:57,870
correction removing up duplicates we had

00:18:55,410 --> 00:19:00,450
quite good results but when we did that

00:18:57,870 --> 00:19:02,850
we had like really really really good

00:19:00,450 --> 00:19:07,260
from a business perspective so what I

00:19:02,850 --> 00:19:08,280
can tell you today is that really works

00:19:07,260 --> 00:19:10,080
just fine

00:19:08,280 --> 00:19:13,250
but we believe that there's even more

00:19:10,080 --> 00:19:15,780
potential so the test results were that

00:19:13,250 --> 00:19:18,060
the features we implemented with that

00:19:15,780 --> 00:19:20,730
scoring model for scoring those

00:19:18,060 --> 00:19:22,980
suggestions are absolutely worth it so

00:19:20,730 --> 00:19:26,730
we have really good uplift in revenues

00:19:22,980 --> 00:19:28,440
and also we believe that there's even

00:19:26,730 --> 00:19:32,070
more potential if we tune the parameters

00:19:28,440 --> 00:19:34,590
we use in the scoring model so right now

00:19:32,070 --> 00:19:36,330
we also did some some more iterations on

00:19:34,590 --> 00:19:39,420
tuning of those parameters and there's

00:19:36,330 --> 00:19:42,110
still some way to go so I still believe

00:19:39,420 --> 00:19:47,510
that there's lots of potential there and

00:19:42,110 --> 00:19:49,920
the third point I think that's also

00:19:47,510 --> 00:19:52,650
important for us or also from business

00:19:49,920 --> 00:19:56,130
perspective is the idea and the method

00:19:52,650 --> 00:19:58,320
we can use it for other use cases for

00:19:56,130 --> 00:20:00,420
example we used it for ranking of our

00:19:58,320 --> 00:20:03,930
facets right now and it's working as

00:20:00,420 --> 00:20:07,590
well really really really good yeah

00:20:03,930 --> 00:20:13,500
that's it maybe just some words to a

00:20:07,590 --> 00:20:16,350
future prospect well there are some

00:20:13,500 --> 00:20:19,650
things that we can do for now to improve

00:20:16,350 --> 00:20:22,230
this also again and again so yesterday

00:20:19,650 --> 00:20:25,500
we had to talk about personalization I

00:20:22,230 --> 00:20:28,160
personally liked it and I think we could

00:20:25,500 --> 00:20:32,250
also apply and some personalization

00:20:28,160 --> 00:20:33,930
features here so maybe just try to

00:20:32,250 --> 00:20:38,060
deliver only the suggestions that are

00:20:33,930 --> 00:20:42,270
relevant for users in this in this

00:20:38,060 --> 00:20:46,470
specific scope the other one would be to

00:20:42,270 --> 00:20:48,570
just genera phi the weighting of the the

00:20:46,470 --> 00:20:52,800
business kpi's did we have and try to

00:20:48,570 --> 00:20:56,460
use something that is more yeah self

00:20:52,800 --> 00:20:58,290
learning which is two options that we

00:20:56,460 --> 00:21:01,530
could do but I don't think that we have

00:20:58,290 --> 00:21:06,300
any plan yet because it looks like that

00:21:01,530 --> 00:21:10,260
we are really good and improvement would

00:21:06,300 --> 00:21:11,980
be not that order expectation is not

00:21:10,260 --> 00:21:23,080
that good for that

00:21:11,980 --> 00:21:24,789
so one final word for me I think there

00:21:23,080 --> 00:21:26,289
there is no any proof if this is the

00:21:24,789 --> 00:21:29,740
best solution of a now to completion

00:21:26,289 --> 00:21:31,870
route and I won't won't say that this is

00:21:29,740 --> 00:21:35,889
the best what you can do but what I can

00:21:31,870 --> 00:21:38,529
promise is if you just try to apply the

00:21:35,889 --> 00:21:42,070
simple first iteration steps on your

00:21:38,529 --> 00:21:46,960
suggestions you will indeed improve your

00:21:42,070 --> 00:21:50,799
search by Terps it will really be great

00:21:46,960 --> 00:21:54,179
and I think you will be much much

00:21:50,799 --> 00:22:00,240
satisfied by that and you use this also

00:21:54,179 --> 00:22:00,240
okay so thank you

00:22:06,160 --> 00:22:12,080
if any questions about that

00:22:10,030 --> 00:22:17,480
yeah will you want questions we are

00:22:12,080 --> 00:22:21,320
running out of time thank you very

00:22:17,480 --> 00:22:23,690
interesting talk if I use facets on the

00:22:21,320 --> 00:22:26,180
side and have used it already you have

00:22:23,690 --> 00:22:28,790
some filters set yeah will you filter

00:22:26,180 --> 00:22:31,610
your auto suggestions by the filters I

00:22:28,790 --> 00:22:34,310
have set like I'm looking for man's suit

00:22:31,610 --> 00:22:37,910
will I still get the girls drawers us no

00:22:34,310 --> 00:22:41,990
we don't right now because what we know

00:22:37,910 --> 00:22:45,200
about user users at ATO is they might

00:22:41,990 --> 00:22:48,140
change the thing they are looking for in

00:22:45,200 --> 00:22:48,680
one session so if you've been looking

00:22:48,140 --> 00:22:50,930
for

00:22:48,680 --> 00:22:52,760
trousers before it could be that they're

00:22:50,930 --> 00:22:56,630
like looking for washing machine after

00:22:52,760 --> 00:23:04,280
that so if we filter it we don't give

00:22:56,630 --> 00:23:05,830
them the option to find it so no thank

00:23:04,280 --> 00:23:11,240
you

00:23:05,830 --> 00:23:14,000
okay the last you said that as source

00:23:11,240 --> 00:23:17,120
for this autocomplete you'd used your

00:23:14,000 --> 00:23:21,770
product data it looks for me that you

00:23:17,120 --> 00:23:24,110
have phrases already clear like women's

00:23:21,770 --> 00:23:27,580
back or what it was so how did you

00:23:24,110 --> 00:23:32,990
identify phrases for this autocomplete

00:23:27,580 --> 00:23:35,990
well you don't you don't really detect

00:23:32,990 --> 00:23:38,360
phrases but your phrases also tokenized

00:23:35,990 --> 00:23:40,430
and it is sir only against the search

00:23:38,360 --> 00:23:42,710
engine so the search engine is

00:23:40,430 --> 00:23:46,430
tokenizing your phrases into tokens and

00:23:42,710 --> 00:23:49,250
the searching searching the index and at

00:23:46,430 --> 00:23:52,360
this point you are deciding whether this

00:23:49,250 --> 00:23:55,940
is an exit or in fuzzy search a result I

00:23:52,360 --> 00:23:58,850
think no you're proposing phrases in the

00:23:55,940 --> 00:24:00,920
autocomplete so where do they come from

00:23:58,850 --> 00:24:04,010
that that you propose faces and not only

00:24:00,920 --> 00:24:06,830
single words those come from the

00:24:04,010 --> 00:24:09,410
clickstream we're using so this is what

00:24:06,830 --> 00:24:12,110
user what users have been searching

00:24:09,410 --> 00:24:14,480
before and we use that data are out of

00:24:12,110 --> 00:24:17,600
the click stream so you remember that

00:24:14,480 --> 00:24:18,650
fingerprinting step so we've got all the

00:24:17,600 --> 00:24:21,500
search

00:24:18,650 --> 00:24:26,680
yeah queries our user typed in and we

00:24:21,500 --> 00:24:26,680
just take one of them to suggest yeah

00:24:26,740 --> 00:24:36,710
okay thank you

00:24:29,760 --> 00:24:36,710

YouTube URL: https://www.youtube.com/watch?v=JkJErvrzAu0


