Title: Berlin Buzzwords 2018: Anshum Gupta – Building a search platform 101 #bbuzz
Publication date: 2018-06-14
Playlist: Berlin Buzzwords 2018 #bbuzz
Description: 
	Search is a critical piece of infrastructure at just about any based company that deals with data. At large companies, it makes a lot of sense to centralize and build a platform for different teams and customers. Such a platform directly translates to saving development time, avoiding reinventing the wheel, and better maintainability, all of which lead to cost-savings.

While it is a complex problem, spanning a challenging landscape, building a search platform gets even more challenging when you try and cater to the diverse set of users that come with it. The varying requirements in terms of feature set, scale, security, etc. are a few complexities that require deep understanding and thought when designing a search platform that would support varying use-cases. Proactively thinking about the requirements, priorities, and overall design help ensure better availability and maintainability of a search platform.

Having built search platforms at both, large and small organizations in the past, I realized that there are more than a few key questions that should be addressed, if not answered when starting to build the platform. Addressing these questions helps starting off the project on the right foot and allow for a platform that is easier to manage and extend in the future. 

From security to scalability, and beyond, this talk would highlight the questions that I feel should be addressed when starting to build a search platform. At the end, the attendees of the talk would have a much better understanding of the important aspects about designing a search platform.

Read more:
https://2018.berlinbuzzwords.de/18/session/building-search-platform-101

About Anshum Gupta:
https://2018.berlinbuzzwords.de/users/anshum-gupta

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	00:00:04,569 --> 00:00:12,070
hi everyone last talk of the conference

00:00:07,850 --> 00:00:16,330
I'm not sure about how what's the energy

00:00:12,070 --> 00:00:18,890
kind of levels like but let's do this Oh

00:00:16,330 --> 00:00:21,970
a bit about myself I've been doing

00:00:18,890 --> 00:00:24,050
search for a long time over a decade now

00:00:21,970 --> 00:00:26,450
pretty much been dabbling in the same

00:00:24,050 --> 00:00:29,300
solar all this while and I've built a

00:00:26,450 --> 00:00:33,170
few search platforms at organizations

00:00:29,300 --> 00:00:34,460
big and small startups yeah and more

00:00:33,170 --> 00:00:38,230
importantly I've been just involved with

00:00:34,460 --> 00:00:38,230
Lucien and solar for a while now and

00:00:38,770 --> 00:00:44,480
before we start because of being

00:00:42,230 --> 00:00:47,210
involved with solar the talk kind of

00:00:44,480 --> 00:00:49,130
pivots on solar and stays with solar but

00:00:47,210 --> 00:00:52,040
you could use most of the these these

00:00:49,130 --> 00:00:54,680
concepts or questions or suggestions for

00:00:52,040 --> 00:00:56,059
any form of social service platform that

00:00:54,680 --> 00:00:57,590
you might want to build like you might

00:00:56,059 --> 00:00:59,360
be using another technology maybe

00:00:57,590 --> 00:01:02,390
elasticsearch and you could just use the

00:00:59,360 --> 00:01:06,200
same things so search engine as we know

00:01:02,390 --> 00:01:07,490
right that's how a regular so it's set

00:01:06,200 --> 00:01:10,579
up looks like when you're just building

00:01:07,490 --> 00:01:12,920
a stand up standalone search platform

00:01:10,579 --> 00:01:14,780
and say the distributed search you have

00:01:12,920 --> 00:01:18,020
a bunch of nodes you have a coordination

00:01:14,780 --> 00:01:19,520
service in case of solar adzuki / you

00:01:18,020 --> 00:01:20,869
have a bunch of clients who try to talk

00:01:19,520 --> 00:01:22,729
to your node so there's a lot of

00:01:20,869 --> 00:01:25,340
communication going on it's already kind

00:01:22,729 --> 00:01:28,850
of complicated enough I would certainly

00:01:25,340 --> 00:01:30,499
call it non-trivial for sure well then

00:01:28,850 --> 00:01:32,389
what's the difference between that and a

00:01:30,499 --> 00:01:34,189
search platform right I mean you have a

00:01:32,389 --> 00:01:35,899
bunch of nodes you have coordination

00:01:34,189 --> 00:01:37,249
services it's a distributed set up you

00:01:35,899 --> 00:01:40,340
could have multiple collections whatever

00:01:37,249 --> 00:01:43,609
you want how would a search platform be

00:01:40,340 --> 00:01:45,679
different to begin with well a search

00:01:43,609 --> 00:01:48,729
platform essentially would be when you

00:01:45,679 --> 00:01:51,439
have a ton of tenants or ton of users

00:01:48,729 --> 00:01:53,329
related or unrelated trying to use the

00:01:51,439 --> 00:01:55,789
same platform while one person or one

00:01:53,329 --> 00:01:57,889
organization or one group kind of owns

00:01:55,789 --> 00:02:00,289
that platform takes care of most of

00:01:57,889 --> 00:02:02,630
their heavy lifting stuff so you might

00:02:00,289 --> 00:02:05,569
have those three users here or three

00:02:02,630 --> 00:02:07,759
groups that are using this right they're

00:02:05,569 --> 00:02:10,160
logged in and everything and you might

00:02:07,759 --> 00:02:13,870
have services running for you for the

00:02:10,160 --> 00:02:17,330
benefit of you know consolidating

00:02:13,870 --> 00:02:18,350
consolidating the the administration of

00:02:17,330 --> 00:02:20,300
the platform itself

00:02:18,350 --> 00:02:22,340
so you might have an admin an admin

00:02:20,300 --> 00:02:24,440
interface backup service monitoring

00:02:22,340 --> 00:02:29,030
service health check every bunch of

00:02:24,440 --> 00:02:30,260
other stuff so well that's the

00:02:29,030 --> 00:02:33,260
difference why do you really need a

00:02:30,260 --> 00:02:35,720
platform right you could do pretty much

00:02:33,260 --> 00:02:39,530
the same kind of stuff using separate

00:02:35,720 --> 00:02:41,300
standalone setups and every team could

00:02:39,530 --> 00:02:44,540
have their own thing or every user could

00:02:41,300 --> 00:02:45,920
set things up by themselves but as said

00:02:44,540 --> 00:02:50,420
earlier right I mean search is a

00:02:45,920 --> 00:02:52,340
non-trivial task when I got started with

00:02:50,420 --> 00:02:53,840
search not even distributed when I just

00:02:52,340 --> 00:02:56,090
got started with search it took me a

00:02:53,840 --> 00:02:58,670
reasonable amount of time to set things

00:02:56,090 --> 00:03:01,550
up now things have gotten much better in

00:02:58,670 --> 00:03:05,780
terms of usability and being able to

00:03:01,550 --> 00:03:07,490
spin up something and try it out but if

00:03:05,780 --> 00:03:09,830
you really wanted to take it to a

00:03:07,490 --> 00:03:12,500
production level set up like a set up

00:03:09,830 --> 00:03:15,680
that you could rely on could real-life

00:03:12,500 --> 00:03:17,840
users on there you would really I would

00:03:15,680 --> 00:03:20,390
say put in anywhere between a few weeks

00:03:17,840 --> 00:03:23,120
to a few months to get there right so

00:03:20,390 --> 00:03:25,310
you really want to make it easier to set

00:03:23,120 --> 00:03:27,170
up search for multiple users instead of

00:03:25,310 --> 00:03:28,760
everyone spending a few months you might

00:03:27,170 --> 00:03:30,950
want to be the person who actually does

00:03:28,760 --> 00:03:33,290
that for them so that they could just at

00:03:30,950 --> 00:03:34,820
the press of a button start up instances

00:03:33,290 --> 00:03:36,970
not really worry about hardware

00:03:34,820 --> 00:03:39,320
management managing the entire thing

00:03:36,970 --> 00:03:41,120
security privacy everything else and

00:03:39,320 --> 00:03:43,850
we're gonna talk more about all of that

00:03:41,120 --> 00:03:45,860
later on and while you make all of those

00:03:43,850 --> 00:03:48,500
which is make things pretty easy make

00:03:45,860 --> 00:03:51,260
them make repeatable tasks right there

00:03:48,500 --> 00:03:53,120
at the press of a button it basically

00:03:51,260 --> 00:03:56,150
means you're making things cost

00:03:53,120 --> 00:04:01,070
effective because the months are now

00:03:56,150 --> 00:04:03,170
gone and shrunk to a few hours but while

00:04:01,070 --> 00:04:05,360
everyone might be super excited about oh

00:04:03,170 --> 00:04:06,920
we could drill a search platform most

00:04:05,360 --> 00:04:09,470
companies most organizations generally

00:04:06,920 --> 00:04:11,000
have you know multiple teams trying to

00:04:09,470 --> 00:04:13,730
use search for different use cases and

00:04:11,000 --> 00:04:16,040
so there are times when everyone has

00:04:13,730 --> 00:04:18,940
their own setup and they learn the same

00:04:16,040 --> 00:04:22,850
things in the work in isolation

00:04:18,940 --> 00:04:25,460
but more often than not it kind of

00:04:22,850 --> 00:04:26,990
converges into having an idea or that

00:04:25,460 --> 00:04:28,520
moment of oh we should probably have

00:04:26,990 --> 00:04:31,910
just one platform that would cater to

00:04:28,520 --> 00:04:32,150
every each of these teams or in terms of

00:04:31,910 --> 00:04:34,490
X

00:04:32,150 --> 00:04:36,560
users just think about we could have a

00:04:34,490 --> 00:04:38,510
service that the real world users could

00:04:36,560 --> 00:04:40,820
use to set up search I mean you could

00:04:38,510 --> 00:04:43,070
have something like AWS cloud search

00:04:40,820 --> 00:04:44,450
where you could spin up an instance and

00:04:43,070 --> 00:04:47,470
start off with search without having to

00:04:44,450 --> 00:04:50,060
worry about setting up things for you

00:04:47,470 --> 00:04:51,710
but while you do that there are certain

00:04:50,060 --> 00:04:56,870
questions that you should ask yourself

00:04:51,710 --> 00:04:58,370
or ask as a group in terms of what these

00:04:56,870 --> 00:04:59,660
questions are what does the platform

00:04:58,370 --> 00:05:01,520
mean to me what am I trying to build

00:04:59,660 --> 00:05:03,680
here so the first question there would

00:05:01,520 --> 00:05:05,930
be who is the user that's a very basic

00:05:03,680 --> 00:05:09,250
question super important to understand

00:05:05,930 --> 00:05:12,140
as well right so I really would

00:05:09,250 --> 00:05:17,060
distribute or differentiate the users on

00:05:12,140 --> 00:05:18,860
those two parameters I would say or in

00:05:17,060 --> 00:05:21,740
those two categories it's internal or

00:05:18,860 --> 00:05:24,140
external and it kind of has a fuzzy in

00:05:21,740 --> 00:05:26,660
between but if you look at internal or

00:05:24,140 --> 00:05:29,180
external internal users is when you have

00:05:26,660 --> 00:05:30,410
when you're an organization you have a

00:05:29,180 --> 00:05:32,870
bunch of teams you have a bunch of

00:05:30,410 --> 00:05:34,100
groups that need to use a platform so

00:05:32,870 --> 00:05:37,670
that they don't have to reinvest the

00:05:34,100 --> 00:05:39,620
same effort into the same effort I would

00:05:37,670 --> 00:05:41,720
call them as internal users and I'll

00:05:39,620 --> 00:05:44,420
tell you why external users would be

00:05:41,720 --> 00:05:46,610
something again like AWS cloud search or

00:05:44,420 --> 00:05:49,310
some some service that you're selling to

00:05:46,610 --> 00:05:51,800
the outside world for users to use and

00:05:49,310 --> 00:05:54,920
put user data and use it for their own

00:05:51,800 --> 00:05:56,630
apps or websites or whatever it is that

00:05:54,920 --> 00:05:59,480
they're doing the difference here would

00:05:56,630 --> 00:06:01,820
be internal users tend to work much

00:05:59,480 --> 00:06:04,220
better with you an example being in

00:06:01,820 --> 00:06:06,980
terms of logs you might be able to share

00:06:04,220 --> 00:06:09,260
logs with more comfort or more

00:06:06,980 --> 00:06:11,720
convenience where your internal users

00:06:09,260 --> 00:06:14,510
only because you know their intentions

00:06:11,720 --> 00:06:16,250
are hopefully okay when you share logs

00:06:14,510 --> 00:06:18,590
with them which have IP addresses and

00:06:16,250 --> 00:06:21,950
stuff like that as opposed to external

00:06:18,590 --> 00:06:24,350
users let's say they have a crashing JVM

00:06:21,950 --> 00:06:26,060
now if you have a multi-tenant set up

00:06:24,350 --> 00:06:27,830
you wouldn't really want to share a

00:06:26,060 --> 00:06:29,780
bunch of things bunch of information

00:06:27,830 --> 00:06:33,650
about a multi-tenant set up with those

00:06:29,780 --> 00:06:35,900
those people right so kind of totally is

00:06:33,650 --> 00:06:37,250
is going to be a starting point in terms

00:06:35,900 --> 00:06:40,100
of how do you start thinking about your

00:06:37,250 --> 00:06:41,000
platform it totally changes the game you

00:06:40,100 --> 00:06:43,250
need to figure out where you're

00:06:41,000 --> 00:06:45,250
targeting when you're trying to build a

00:06:43,250 --> 00:06:48,020
search engine

00:06:45,250 --> 00:06:50,750
that brings us to where in the pyramid

00:06:48,020 --> 00:06:53,090
is the user right I try to bring things

00:06:50,750 --> 00:06:55,130
into or put also use cases into

00:06:53,090 --> 00:06:57,770
something like that that kind of a

00:06:55,130 --> 00:06:59,930
pyramid or search users into that kind

00:06:57,770 --> 00:07:01,520
of a pyramid you've got the basic users

00:06:59,930 --> 00:07:03,440
you've got a bunch of data all they want

00:07:01,520 --> 00:07:04,820
to do is have a single box search and

00:07:03,440 --> 00:07:06,980
that's it they're not really bothered

00:07:04,820 --> 00:07:09,680
about much stuff then you've got the

00:07:06,980 --> 00:07:11,210
intermediate users which is most of the

00:07:09,680 --> 00:07:12,950
users because they're users who are

00:07:11,210 --> 00:07:14,510
looking at you know things like

00:07:12,950 --> 00:07:18,530
interesting query parsers they're

00:07:14,510 --> 00:07:21,200
looking at analysis chains an indexing

00:07:18,530 --> 00:07:23,840
pipeline so a bunch of interesting stuff

00:07:21,200 --> 00:07:25,100
mostly configurable so it's easy but

00:07:23,840 --> 00:07:26,870
they're trying to do more complicated

00:07:25,100 --> 00:07:29,240
things and at the top of the pyramid

00:07:26,870 --> 00:07:31,100
would be the advanced users which I

00:07:29,240 --> 00:07:32,600
would say they need custom plugins they

00:07:31,100 --> 00:07:34,780
have code that they write and they want

00:07:32,600 --> 00:07:37,610
that to be a part of your search service

00:07:34,780 --> 00:07:38,180
and when you're again designing search

00:07:37,610 --> 00:07:39,860
platform

00:07:38,180 --> 00:07:41,870
I would suggest that you kind of target

00:07:39,860 --> 00:07:43,790
one or at the most two of these and when

00:07:41,870 --> 00:07:45,140
I say to you shouldn't be targeting the

00:07:43,790 --> 00:07:47,900
top and the bottom of the pyramid that's

00:07:45,140 --> 00:07:51,200
bad bad idea you should be looking at

00:07:47,900 --> 00:07:53,600
either the top two or the bottom to the

00:07:51,200 --> 00:07:55,790
bottom of the middle tier as I said kind

00:07:53,600 --> 00:07:58,130
of spreads vast so there's a lot that

00:07:55,790 --> 00:07:59,330
can go on there and the reason why you

00:07:58,130 --> 00:08:02,180
wouldn't want to do that is because the

00:07:59,330 --> 00:08:04,520
expectations and things that are needed

00:08:02,180 --> 00:08:06,320
for a basic user are completely

00:08:04,520 --> 00:08:13,400
different as compared to an advanced

00:08:06,320 --> 00:08:14,930
user that talking about the interaction

00:08:13,400 --> 00:08:16,880
now you'd know about the user you know

00:08:14,930 --> 00:08:20,360
what category does the user fall in you

00:08:16,880 --> 00:08:23,000
know the user the kind of use cases that

00:08:20,360 --> 00:08:24,830
you should be expecting an important

00:08:23,000 --> 00:08:26,540
thing there is a what kind of an

00:08:24,830 --> 00:08:28,340
interaction how would this interaction

00:08:26,540 --> 00:08:31,970
happen between the user who is trying to

00:08:28,340 --> 00:08:34,940
talk to your search platform and first

00:08:31,970 --> 00:08:39,020
thing repeat to yourself customer api's

00:08:34,940 --> 00:08:41,979
cannot change all of us tend to create

00:08:39,020 --> 00:08:43,550
platforms software apps whatever

00:08:41,979 --> 00:08:45,020
especially when you're building up

00:08:43,550 --> 00:08:46,730
something like a platform which other

00:08:45,020 --> 00:08:49,100
developers are going to use and going to

00:08:46,730 --> 00:08:50,720
built on top off you do not want to

00:08:49,100 --> 00:08:53,660
change API you should really don't want

00:08:50,720 --> 00:08:55,850
to do that because one they wouldn't

00:08:53,660 --> 00:08:58,310
change their API is when you want them

00:08:55,850 --> 00:09:00,830
to do that means you would

00:08:58,310 --> 00:09:02,810
have to support the older API and then

00:09:00,830 --> 00:09:04,370
your API so you really don't you really

00:09:02,810 --> 00:09:05,990
want to think about two things here the

00:09:04,370 --> 00:09:07,670
endpoint and the API is in terms of the

00:09:05,990 --> 00:09:10,100
client the rest endpoint everything

00:09:07,670 --> 00:09:12,740
there so spend a ton of time think about

00:09:10,100 --> 00:09:14,320
how this can work and make sure that

00:09:12,740 --> 00:09:16,910
everything that you're building is

00:09:14,320 --> 00:09:20,089
future-proof so you don't have to change

00:09:16,910 --> 00:09:23,180
things six months later or any year

00:09:20,089 --> 00:09:25,820
later and as I said because you'd have

00:09:23,180 --> 00:09:29,000
to run multiple versions if you had to

00:09:25,820 --> 00:09:30,920
support multiple API is being stuck with

00:09:29,000 --> 00:09:32,540
old versions is painful like in my

00:09:30,920 --> 00:09:35,529
experience it's probably the worst thing

00:09:32,540 --> 00:09:35,529
that you can do to yourself

00:09:37,120 --> 00:09:41,779
so what's generally needed here right I

00:09:39,830 --> 00:09:43,910
mean when you think about API is when

00:09:41,779 --> 00:09:45,920
you're thinking about or what to do you

00:09:43,910 --> 00:09:48,830
want restriction of requests you want

00:09:45,920 --> 00:09:50,420
safeguarding of your system one thing

00:09:48,830 --> 00:09:51,680
that I always believe in is when you're

00:09:50,420 --> 00:09:54,260
building a a platform

00:09:51,680 --> 00:09:56,450
forget about a search platform users are

00:09:54,260 --> 00:09:58,610
hostile it's funny to say that but most

00:09:56,450 --> 00:10:00,680
users are all you should just assume

00:09:58,610 --> 00:10:04,400
that all your users are hostile in terms

00:10:00,680 --> 00:10:06,830
of they're not there to help you keep

00:10:04,400 --> 00:10:10,490
this platform healthy and happy

00:10:06,830 --> 00:10:12,650
they're there to literally pee the hell

00:10:10,490 --> 00:10:15,680
out of that system and make sure that it

00:10:12,650 --> 00:10:18,380
comes down one fine day and what you

00:10:15,680 --> 00:10:20,750
really are trying to build here is to

00:10:18,380 --> 00:10:23,630
safeguard your system so that nobody is

00:10:20,750 --> 00:10:25,280
able to really do that the second thing

00:10:23,630 --> 00:10:28,250
is abstraction of zookeeper which is

00:10:25,280 --> 00:10:29,720
more of a solar thing but customers

00:10:28,250 --> 00:10:31,460
don't really need to know about it I I

00:10:29,720 --> 00:10:35,270
really think customers don't should ever

00:10:31,460 --> 00:10:37,160
shouldn't ever know about it so you want

00:10:35,270 --> 00:10:39,230
to abstract out zookeeper so that they

00:10:37,160 --> 00:10:40,910
only know about how to use search not

00:10:39,230 --> 00:10:44,450
really about the inner details about how

00:10:40,910 --> 00:10:46,700
things work you want a throttle request

00:10:44,450 --> 00:10:49,400
something that's not provided out of the

00:10:46,700 --> 00:10:50,750
box with the least solar so you want to

00:10:49,400 --> 00:10:52,790
do stuff like that

00:10:50,750 --> 00:10:55,880
you want to fail fast for unsupported

00:10:52,790 --> 00:10:58,760
features one other thing that you really

00:10:55,880 --> 00:11:00,470
want to do is you don't want to ever put

00:10:58,760 --> 00:11:02,209
out solar out there build a platform on

00:11:00,470 --> 00:11:04,070
top of it and expose everything that

00:11:02,209 --> 00:11:06,230
solar offers to the end users trust me

00:11:04,070 --> 00:11:07,100
it's not going to end up - well it's

00:11:06,230 --> 00:11:09,830
gonna be a disaster

00:11:07,100 --> 00:11:11,780
pretty much and the last thing that you

00:11:09,830 --> 00:11:12,110
really want is stable API as I said you

00:11:11,780 --> 00:11:14,990
don't

00:11:12,110 --> 00:11:17,480
one things that break back compact it

00:11:14,990 --> 00:11:24,560
sort of kind of be a kind of infamous

00:11:17,480 --> 00:11:27,800
that we do that reasonably often so one

00:11:24,560 --> 00:11:30,589
good idea of providing an interactive

00:11:27,800 --> 00:11:32,540
way to interact for users is to just you

00:11:30,589 --> 00:11:34,370
sort of client and let them let them

00:11:32,540 --> 00:11:37,820
just use the same client that is offered

00:11:34,370 --> 00:11:39,260
by solar well the good part about that

00:11:37,820 --> 00:11:40,940
is you don't have to write a bunch of

00:11:39,260 --> 00:11:43,010
documentation people can just look up

00:11:40,940 --> 00:11:45,890
snippets on the internet and write build

00:11:43,010 --> 00:11:47,660
on top of that and it's easy to add

00:11:45,890 --> 00:11:49,459
custom features there are things that

00:11:47,660 --> 00:11:51,800
stop you from actually using that and

00:11:49,459 --> 00:11:53,920
the reason for that is the reason why

00:11:51,800 --> 00:11:56,149
you would build a search platform over

00:11:53,920 --> 00:11:57,950
providing or letting people set up their

00:11:56,149 --> 00:12:00,529
own search so it's like it would be easy

00:11:57,950 --> 00:12:01,790
to just help people bring up their solar

00:12:00,529 --> 00:12:05,300
cluster without having to build a

00:12:01,790 --> 00:12:06,589
platform around it but that takes away

00:12:05,300 --> 00:12:09,560
everything that you're trying to achieve

00:12:06,589 --> 00:12:11,149
here and so you don't really want to

00:12:09,560 --> 00:12:12,470
offer sort of client either for exactly

00:12:11,149 --> 00:12:14,750
the same reasons you want to build a

00:12:12,470 --> 00:12:16,970
custom client that builds on top off or

00:12:14,750 --> 00:12:19,160
wraps around a solar client maybe so

00:12:16,970 --> 00:12:21,649
treat in the API is but abstract out

00:12:19,160 --> 00:12:25,010
everything or remove everything that

00:12:21,649 --> 00:12:27,860
that are unsafe that's unsupported so

00:12:25,010 --> 00:12:32,540
you restrict features you try and X not

00:12:27,860 --> 00:12:36,380
expose soup zookeeper but the Clausura

00:12:32,540 --> 00:12:38,060
client requires you to do that and there

00:12:36,380 --> 00:12:40,339
are bunch of experimental API switch you

00:12:38,060 --> 00:12:42,500
really don't want to expose so and with

00:12:40,339 --> 00:12:45,320
the amount of flux cloud server client

00:12:42,500 --> 00:12:48,440
exposing directly that as your client

00:12:45,320 --> 00:12:51,170
interaction medium is a disaster I would

00:12:48,440 --> 00:12:52,490
say so think about a wrap client think

00:12:51,170 --> 00:12:54,730
about a client that wraps things and

00:12:52,490 --> 00:13:00,560
makes that would make things much better

00:12:54,730 --> 00:13:02,779
also if if you guys have tried or used

00:13:00,560 --> 00:13:05,000
solar you don't want nameless to come

00:13:02,779 --> 00:13:07,130
back any responses so yeah that's that's

00:13:05,000 --> 00:13:09,399
the other thing you could change and a

00:13:07,130 --> 00:13:12,260
good idea to do a good way to do that is

00:13:09,399 --> 00:13:13,670
adding a proxy layer in the middle I'm

00:13:12,260 --> 00:13:15,949
going to talk more about why do you need

00:13:13,670 --> 00:13:17,720
that but I really think a proxy layer in

00:13:15,949 --> 00:13:21,550
the middle kind of solves a lot of these

00:13:17,720 --> 00:13:24,380
problems like making it easy of

00:13:21,550 --> 00:13:26,800
controlling with the throttling part and

00:13:24,380 --> 00:13:26,800
bunch of other things

00:13:27,110 --> 00:13:31,890
so that brings us to now we know how to

00:13:30,540 --> 00:13:33,570
set things up we know what the user

00:13:31,890 --> 00:13:35,400
wants to do we know how the user is

00:13:33,570 --> 00:13:40,920
gonna use or interact with the service

00:13:35,400 --> 00:13:43,050
what about managing the clusters service

00:13:40,920 --> 00:13:45,750
generally can be divided into two broad

00:13:43,050 --> 00:13:49,080
categories delegated and self servicing

00:13:45,750 --> 00:13:51,330
and you generally wanna have a bunch of

00:13:49,080 --> 00:13:54,480
they have like a fair bit of overlap

00:13:51,330 --> 00:13:56,130
that that's where the sweet spot is if

00:13:54,480 --> 00:13:57,720
you really look at self so saying so

00:13:56,130 --> 00:14:01,920
everything is something which is meant

00:13:57,720 --> 00:14:04,170
for the advanced user the user gets

00:14:01,920 --> 00:14:05,520
notifications gets metrics gets

00:14:04,170 --> 00:14:08,250
information about what's going on in the

00:14:05,520 --> 00:14:11,460
cluster and hat is responsible and has

00:14:08,250 --> 00:14:13,980
endpoints and access and has ways to

00:14:11,460 --> 00:14:15,240
access the cluster to go ahead and make

00:14:13,980 --> 00:14:18,240
changes to the cluster so man is a

00:14:15,240 --> 00:14:19,950
cluster themselves is itself of saying

00:14:18,240 --> 00:14:22,320
delegated on the other hand is when

00:14:19,950 --> 00:14:25,410
thing is Auto scale so you go ahead and

00:14:22,320 --> 00:14:27,839
the user brings up the cluster and then

00:14:25,410 --> 00:14:30,540
everything happens magically like yes

00:14:27,839 --> 00:14:33,480
that's the thing or so a lot of people

00:14:30,540 --> 00:14:35,610
think the sweet spot in the middle is

00:14:33,480 --> 00:14:37,230
when you kind of have an overlap between

00:14:35,610 --> 00:14:38,580
both there are things that you do

00:14:37,230 --> 00:14:44,300
yourself and then there are things that

00:14:38,580 --> 00:14:48,270
you allow the user to do one is

00:14:44,300 --> 00:14:50,970
discussing this yesterday about how

00:14:48,270 --> 00:14:53,610
people can shoot easily in their own

00:14:50,970 --> 00:14:58,380
foot when you when you allow them to do

00:14:53,610 --> 00:15:00,480
so is imagine a use case where a user is

00:14:58,380 --> 00:15:03,000
allowed to auto scale say in add a

00:15:00,480 --> 00:15:05,160
replica because they're anticipating a

00:15:03,000 --> 00:15:08,339
bunch of traffic but your system is also

00:15:05,160 --> 00:15:09,810
configured to automatically figure out

00:15:08,339 --> 00:15:13,589
what the right or the correct

00:15:09,810 --> 00:15:15,540
replication factor is and so here's a

00:15:13,589 --> 00:15:17,100
user who manually sends a request say so

00:15:15,540 --> 00:15:20,400
add a replica I know there's more

00:15:17,100 --> 00:15:22,020
requests coming in so boom there's a

00:15:20,400 --> 00:15:24,089
there's a replica cut that comes up but

00:15:22,020 --> 00:15:25,800
the system says I don't think that's the

00:15:24,089 --> 00:15:28,350
right replication factor brings it down

00:15:25,800 --> 00:15:29,940
so you've got a confusion here because

00:15:28,350 --> 00:15:31,770
the human beings trying to do something

00:15:29,940 --> 00:15:33,990
totally different than what the system

00:15:31,770 --> 00:15:35,850
thinks is right and so when you offer

00:15:33,990 --> 00:15:38,640
like a combination of cell service and

00:15:35,850 --> 00:15:40,860
delegated management service

00:15:38,640 --> 00:15:42,540
make sure people don't overstep on each

00:15:40,860 --> 00:15:44,910
other on the abilities and capabilities

00:15:42,540 --> 00:15:51,330
and responsibilities of what they're

00:15:44,910 --> 00:15:56,810
supposed to do but that was the part

00:15:51,330 --> 00:15:59,010
about I forgot managing the cluster and

00:15:56,810 --> 00:16:00,630
but you can only ask the cluster if you

00:15:59,010 --> 00:16:01,890
can monitor it right I mean if you don't

00:16:00,630 --> 00:16:04,050
know what's going on you can't really

00:16:01,890 --> 00:16:07,230
manage a cluster you don't have any you

00:16:04,050 --> 00:16:08,940
need insights right so you need to

00:16:07,230 --> 00:16:10,680
expose things and because the sweet spot

00:16:08,940 --> 00:16:12,720
was right in the middle of being managed

00:16:10,680 --> 00:16:14,580
in delegate self-service and delegated

00:16:12,720 --> 00:16:16,110
you don't really want to expose

00:16:14,580 --> 00:16:20,160
everything one that confuses your

00:16:16,110 --> 00:16:22,140
end-users so that's a bad thing too

00:16:20,160 --> 00:16:24,000
they might end up doing or shooting

00:16:22,140 --> 00:16:26,070
themselves in the foot way too often if

00:16:24,000 --> 00:16:28,920
you tell them too much so don't tell

00:16:26,070 --> 00:16:30,900
them everything tell them only the side

00:16:28,920 --> 00:16:33,540
of things where they can actually do

00:16:30,900 --> 00:16:36,510
something actionable so let's say they

00:16:33,540 --> 00:16:38,760
changed their schema that does not

00:16:36,510 --> 00:16:39,450
confirm to their documents that are

00:16:38,760 --> 00:16:41,910
coming in anymore

00:16:39,450 --> 00:16:44,310
so that's something that you can't fix

00:16:41,910 --> 00:16:46,560
right so when you have something of that

00:16:44,310 --> 00:16:48,840
come up your monitoring system says oh

00:16:46,560 --> 00:16:51,060
I've seen a bunch of failed document

00:16:48,840 --> 00:16:53,190
uploads send that to the end user

00:16:51,060 --> 00:16:55,020
tell the end user to fix the schema

00:16:53,190 --> 00:16:56,970
because they've been twenty thousand

00:16:55,020 --> 00:17:00,330
update failures and lost 15 minutes so

00:16:56,970 --> 00:17:02,100
send those kind of infamous and share

00:17:00,330 --> 00:17:03,420
that kind of information don't share the

00:17:02,100 --> 00:17:08,339
kind of information that the system's

00:17:03,420 --> 00:17:10,440
supposed to know and act on and in terms

00:17:08,339 --> 00:17:13,260
of monitoring sort of provides gmx it's

00:17:10,440 --> 00:17:15,060
done that for forever but the problem

00:17:13,260 --> 00:17:18,600
with JMX is it only gives you a snapshot

00:17:15,060 --> 00:17:20,010
of at any given instant so if you want

00:17:18,600 --> 00:17:21,600
information about what's going on in my

00:17:20,010 --> 00:17:24,000
system right now yes you'll get that

00:17:21,600 --> 00:17:26,850
through GMX but if you want to have a

00:17:24,000 --> 00:17:28,500
comparative analysis of oh is my QPS

00:17:26,850 --> 00:17:32,010
going up is my updates per second going

00:17:28,500 --> 00:17:34,050
up or is my errors going low or my you

00:17:32,010 --> 00:17:35,490
know Oh am sore heap memory usage going

00:17:34,050 --> 00:17:38,100
up or down

00:17:35,490 --> 00:17:41,490
TMX cannot help you with that because it

00:17:38,100 --> 00:17:43,950
it has no state unless the reason why

00:17:41,490 --> 00:17:47,880
Sora recently added metrics so you can

00:17:43,950 --> 00:17:49,890
have metrics and you can have them I'm

00:17:47,880 --> 00:17:52,160
forgetting what it was but you can you

00:17:49,890 --> 00:17:52,160
can create

00:17:52,200 --> 00:17:56,970
plugins that would then use these

00:17:54,960 --> 00:17:58,289
metrics and write them to external data

00:17:56,970 --> 00:17:59,880
sources and you can write I think

00:17:58,289 --> 00:18:03,659
there's support for a couple right now

00:17:59,880 --> 00:18:06,210
and it's easy to extend that and add

00:18:03,659 --> 00:18:08,070
support to more third-party monitoring

00:18:06,210 --> 00:18:09,539
system so Sora can push out these

00:18:08,070 --> 00:18:12,000
metrics that would have stateful

00:18:09,539 --> 00:18:13,470
information and then you can visualize

00:18:12,000 --> 00:18:19,919
this do whatever you want to do with

00:18:13,470 --> 00:18:22,080
this so now that we're done with that

00:18:19,919 --> 00:18:25,169
part which is kind of the basics but

00:18:22,080 --> 00:18:27,899
important as as important what's the

00:18:25,169 --> 00:18:29,639
plan to scale more often than not I've

00:18:27,899 --> 00:18:32,100
seen people think about scale in terms

00:18:29,639 --> 00:18:35,820
of two dimensions right I mean traffic

00:18:32,100 --> 00:18:37,139
and data oh we support two terabytes of

00:18:35,820 --> 00:18:39,090
index right now we're going to be

00:18:37,139 --> 00:18:42,720
supporting 20 terabytes by next year

00:18:39,090 --> 00:18:44,279
okay and we support 500 QPS right now

00:18:42,720 --> 00:18:46,669
per instance we're gonna be able to

00:18:44,279 --> 00:18:48,840
support 5,000 next year that's good

00:18:46,669 --> 00:18:50,850
there's an important component there

00:18:48,840 --> 00:18:53,100
which is features and that's a

00:18:50,850 --> 00:18:54,840
discussion that people were building

00:18:53,100 --> 00:18:57,269
source platform generally are having in

00:18:54,840 --> 00:19:00,149
parallel rather than having it you know

00:18:57,269 --> 00:19:03,029
together with the entire traffic and

00:19:00,149 --> 00:19:04,860
data scaling models I think that people

00:19:03,029 --> 00:19:07,139
tend to forget is the new features that

00:19:04,860 --> 00:19:10,470
they are gonna have serious impact on

00:19:07,139 --> 00:19:14,159
how the system behaves so let's say you

00:19:10,470 --> 00:19:15,059
planned that you're you know by the end

00:19:14,159 --> 00:19:17,850
of the year you're going to be

00:19:15,059 --> 00:19:19,950
supporting X terabytes of data some

00:19:17,850 --> 00:19:23,850
certain amount of QPS and updates per

00:19:19,950 --> 00:19:26,370
second and you're like okay our current

00:19:23,850 --> 00:19:27,779
Hardware can handle that and you plan

00:19:26,370 --> 00:19:30,240
only for that but then you add a feature

00:19:27,779 --> 00:19:32,940
that kind of blows up your index 10

00:19:30,240 --> 00:19:34,590
times so you do that and you make it

00:19:32,940 --> 00:19:35,909
super easy for the end user so all they

00:19:34,590 --> 00:19:37,860
need to do is click on something it

00:19:35,909 --> 00:19:39,990
really X's data and loads everything 10x

00:19:37,860 --> 00:19:41,100
so you've totally forgot that kept that

00:19:39,990 --> 00:19:42,539
out of the equation because the team

00:19:41,100 --> 00:19:44,070
that was probably working on building

00:19:42,539 --> 00:19:45,779
the feature did not work with the team

00:19:44,070 --> 00:19:48,419
that was responsible for scaling

00:19:45,779 --> 00:19:49,950
hardware so anything about scaling think

00:19:48,419 --> 00:19:55,049
about how the features are going to work

00:19:49,950 --> 00:19:58,620
with your data and traffic the

00:19:55,049 --> 00:20:00,090
interesting thing and I've had a face

00:19:58,620 --> 00:20:01,440
challenges with this at multiple

00:20:00,090 --> 00:20:02,940
organizations I've worked with

00:20:01,440 --> 00:20:05,160
it's a very common thing how do you

00:20:02,940 --> 00:20:07,110
manage versions and upgrades

00:20:05,160 --> 00:20:08,970
so the users don't want to change much

00:20:07,110 --> 00:20:10,860
you want to change a bunch in the

00:20:08,970 --> 00:20:13,140
backend or a few users actually want

00:20:10,860 --> 00:20:16,100
features from the new version or release

00:20:13,140 --> 00:20:19,560
of the the search platform the search

00:20:16,100 --> 00:20:22,860
project that you use say solar and what

00:20:19,560 --> 00:20:24,960
do you do in that case you ideally dream

00:20:22,860 --> 00:20:26,940
that you know the entire platform runs a

00:20:24,960 --> 00:20:29,600
single version it should be easy and

00:20:26,940 --> 00:20:32,430
clean everyone runs on that same version

00:20:29,600 --> 00:20:33,930
doesn't work that way trust me like as

00:20:32,430 --> 00:20:36,600
much as you may try it that thing

00:20:33,930 --> 00:20:38,550
doesn't that doesn't work you can appeal

00:20:36,600 --> 00:20:40,170
as much you can escalate as much you can

00:20:38,550 --> 00:20:43,310
tell them you're going to block their

00:20:40,170 --> 00:20:46,080
requests at some point it's hard they

00:20:43,310 --> 00:20:47,550
generally wouldn't listen to you so what

00:20:46,080 --> 00:20:51,720
do you what do you do in that case right

00:20:47,550 --> 00:20:53,610
so building a proxy in the middle that's

00:20:51,720 --> 00:20:55,350
the best thing as I said it helps you

00:20:53,610 --> 00:21:00,030
with managing throttling a bunch of

00:20:55,350 --> 00:21:02,160
other things access restrictions proxy

00:21:00,030 --> 00:21:03,510
is the answer to most problems when it

00:21:02,160 --> 00:21:04,860
comes to search and that's something

00:21:03,510 --> 00:21:06,540
that you need to think about when you're

00:21:04,860 --> 00:21:09,480
starting off with your search platform

00:21:06,540 --> 00:21:11,280
thing like you can't expose the actual

00:21:09,480 --> 00:21:13,050
solar endpoint when you're thinking

00:21:11,280 --> 00:21:16,500
about building a platform proxy is super

00:21:13,050 --> 00:21:19,200
important when you look at this so and

00:21:16,500 --> 00:21:21,450
what the proxy would let you do is keep

00:21:19,200 --> 00:21:24,450
the backend totally transparent from the

00:21:21,450 --> 00:21:27,120
end user so the end user uses a client

00:21:24,450 --> 00:21:29,910
API that stays consistent is backward

00:21:27,120 --> 00:21:31,650
compatible and is owned by you you can

00:21:29,910 --> 00:21:34,500
keep on adding to it in a manner that is

00:21:31,650 --> 00:21:36,450
backward compatible now while solar or

00:21:34,500 --> 00:21:39,060
elasticsearch breaks compatibility does

00:21:36,450 --> 00:21:41,700
a bunch of other stuff you can just map

00:21:39,060 --> 00:21:44,970
things in your proxy layer and continue

00:21:41,700 --> 00:21:46,440
for you know continuously make things

00:21:44,970 --> 00:21:47,880
work for the end user without them

00:21:46,440 --> 00:21:49,890
having to actually upgrade until they

00:21:47,880 --> 00:21:51,510
really want to like if they really want

00:21:49,890 --> 00:21:53,520
to use a new feature then yes give them

00:21:51,510 --> 00:21:54,660
a new client let them use it but all

00:21:53,520 --> 00:21:56,790
your clients would be backward

00:21:54,660 --> 00:22:00,180
compatible as far as you know end users

00:21:56,790 --> 00:22:01,620
go so it would let you upgrade and also

00:22:00,180 --> 00:22:05,820
rollback if things don't work out don't

00:22:01,620 --> 00:22:07,020
do that often though bad idea another

00:22:05,820 --> 00:22:11,400
interesting thing that you would want to

00:22:07,020 --> 00:22:14,370
do here is log the clips so when you

00:22:11,400 --> 00:22:16,230
build your client add a version to the

00:22:14,370 --> 00:22:18,240
client and make sure that you're logging

00:22:16,230 --> 00:22:18,930
the version of the client requests that

00:22:18,240 --> 00:22:21,090
come in

00:22:18,930 --> 00:22:24,510
the interesting thing that happens when

00:22:21,090 --> 00:22:26,370
you do that is when when you want to

00:22:24,510 --> 00:22:28,200
upgrade say your middle tier your

00:22:26,370 --> 00:22:29,460
proxies deprecated something not

00:22:28,200 --> 00:22:31,680
deprecated but actually remove support

00:22:29,460 --> 00:22:33,150
for something you can be guaranteed if

00:22:31,680 --> 00:22:34,950
you're logging the version of the client

00:22:33,150 --> 00:22:36,570
requests that are coming in and you see

00:22:34,950 --> 00:22:38,309
that oh for the last three months nobody

00:22:36,570 --> 00:22:40,050
has actually used the older version of

00:22:38,309 --> 00:22:42,240
the client that's a safe point for you

00:22:40,050 --> 00:22:44,070
to just roll up and say okay we're done

00:22:42,240 --> 00:22:45,960
with supporting two versions or three

00:22:44,070 --> 00:22:48,290
versions in a proxy layer and that makes

00:22:45,960 --> 00:22:51,030
things super easy for you to you know

00:22:48,290 --> 00:22:53,690
figure out in terms of this is a good

00:22:51,030 --> 00:22:53,690
time to move on

00:22:54,410 --> 00:22:58,890
well what about backups because things

00:22:56,640 --> 00:23:02,400
don't go as planned always right and I

00:22:58,890 --> 00:23:05,130
saw I recently saw an xkcd stripe that I

00:23:02,400 --> 00:23:07,170
tried hard to find to put it here on my

00:23:05,130 --> 00:23:10,770
slide but I couldn't and it was all

00:23:07,170 --> 00:23:12,750
about how there's a engineer who says I

00:23:10,770 --> 00:23:14,550
think we should have a backup system and

00:23:12,750 --> 00:23:17,100
so he goes to his manager who goes to

00:23:14,550 --> 00:23:19,320
his manager who goes to the seat the CEO

00:23:17,100 --> 00:23:20,970
who says okay let's talk to the CFO

00:23:19,320 --> 00:23:22,470
because we need money for the machines

00:23:20,970 --> 00:23:24,870
that are gonna run the backup systems

00:23:22,470 --> 00:23:27,179
like okay so it goes to the back to the

00:23:24,870 --> 00:23:29,010
CFO and the CFO says okay how much money

00:23:27,179 --> 00:23:31,200
do you need he puts up a number there

00:23:29,010 --> 00:23:34,410
and the CF is like out really that's a

00:23:31,200 --> 00:23:35,940
lot of money we could host 500 new users

00:23:34,410 --> 00:23:37,830
on that we party need a backup

00:23:35,940 --> 00:23:39,900
have you ever needed a backup in the

00:23:37,830 --> 00:23:42,929
last one year it's like no not really

00:23:39,900 --> 00:23:45,480
it's like well then why do we need one

00:23:42,929 --> 00:23:47,460
now they don't take the backup and that

00:23:45,480 --> 00:23:48,660
was the last time that conversation

00:23:47,460 --> 00:23:51,059
happened after that they didn't ever

00:23:48,660 --> 00:23:55,890
speak because disaster struck

00:23:51,059 --> 00:23:57,900
so backups are important so a good

00:23:55,890 --> 00:23:59,070
question to ask there is the how often

00:23:57,900 --> 00:24:01,010
do you want to backup you don't want to

00:23:59,070 --> 00:24:03,630
really yes you might have a nice

00:24:01,010 --> 00:24:04,860
friendly CFO or whoever it is that

00:24:03,630 --> 00:24:07,140
approves the budget for getting your

00:24:04,860 --> 00:24:08,580
backup systems back of hardware you

00:24:07,140 --> 00:24:10,170
really don't want to just blowed it up

00:24:08,580 --> 00:24:12,360
and fill it up with stuff that you don't

00:24:10,170 --> 00:24:14,130
ever need most of us have a tendency of

00:24:12,360 --> 00:24:17,610
let's just gather all the data that we

00:24:14,130 --> 00:24:18,600
have and not throw things away but don't

00:24:17,610 --> 00:24:19,920
do that

00:24:18,600 --> 00:24:21,420
backups and Saura cloud are also

00:24:19,920 --> 00:24:23,460
expensive they didn't they weren't

00:24:21,420 --> 00:24:26,490
offered until recently in your versions

00:24:23,460 --> 00:24:27,900
have backups oh that's a that's a good

00:24:26,490 --> 00:24:30,360
thing

00:24:27,900 --> 00:24:31,500
plan around cleaning up your backups one

00:24:30,360 --> 00:24:32,400
of the organizations I've worked where

00:24:31,500 --> 00:24:33,960
the

00:24:32,400 --> 00:24:36,210
we realized that our backup systems were

00:24:33,960 --> 00:24:37,710
filling up so somebody proactively

00:24:36,210 --> 00:24:39,990
decided I'm gonna write a script that's

00:24:37,710 --> 00:24:43,920
gonna go ahead and clean up my my backup

00:24:39,990 --> 00:24:45,930
archive sadly the path went wrong it

00:24:43,920 --> 00:24:47,940
ended up cleaning and he used a wild

00:24:45,930 --> 00:24:50,250
card there it ended up cleaning the

00:24:47,940 --> 00:24:52,559
indexes of the disk we didn't realize

00:24:50,250 --> 00:24:55,050
that things were going south until a

00:24:52,559 --> 00:24:57,330
host bounced the host came up with

00:24:55,050 --> 00:24:59,130
nothing because well there is no index

00:24:57,330 --> 00:25:02,100
we cleaned it up we have a ton of disk

00:24:59,130 --> 00:25:05,070
space but we clean up the index we still

00:25:02,100 --> 00:25:06,420
have the backups though and when that

00:25:05,070 --> 00:25:08,670
happened we were in a state where we

00:25:06,420 --> 00:25:11,730
like okay now we have backups

00:25:08,670 --> 00:25:13,620
thank God which we can restore from what

00:25:11,730 --> 00:25:16,410
we don't have the old data one that's a

00:25:13,620 --> 00:25:19,050
customer message that we lost your data

00:25:16,410 --> 00:25:23,670
at least from whenever we have lost

00:25:19,050 --> 00:25:27,179
backups from and we had a whole fleet of

00:25:23,670 --> 00:25:28,050
systems running with nothing on disk on

00:25:27,179 --> 00:25:30,270
the index

00:25:28,050 --> 00:25:32,429
all of it was running because things

00:25:30,270 --> 00:25:34,620
were in memory so until the JVM was

00:25:32,429 --> 00:25:37,350
alive things would work but as soon as

00:25:34,620 --> 00:25:39,480
it would go away things would be dead so

00:25:37,350 --> 00:25:41,100
yeah we got some time and the good part

00:25:39,480 --> 00:25:43,290
is we had backups so we could kind of

00:25:41,100 --> 00:25:48,059
roll back say send a message saying yes

00:25:43,290 --> 00:25:49,530
we messed up and that's still a better

00:25:48,059 --> 00:25:51,840
position to be in so all I'm trying to

00:25:49,530 --> 00:25:55,800
put forward here is get your backups in

00:25:51,840 --> 00:25:59,220
place test your archive archive cleaning

00:25:55,800 --> 00:26:01,290
scripts test them out really well even

00:25:59,220 --> 00:26:03,059
better back up into a directory that's

00:26:01,290 --> 00:26:04,590
not your indexed directory make sure

00:26:03,059 --> 00:26:07,020
that your cleanup script that cleans up

00:26:04,590 --> 00:26:09,150
your archives is not even touching your

00:26:07,020 --> 00:26:12,120
index directly your real data directory

00:26:09,150 --> 00:26:13,980
is is holy like you shouldn't be using

00:26:12,120 --> 00:26:15,630
third-party systems to play around with

00:26:13,980 --> 00:26:19,110
actual data that's lying around in that

00:26:15,630 --> 00:26:21,110
directory one more thing that you really

00:26:19,110 --> 00:26:23,520
want to do in distributed systems is you

00:26:21,110 --> 00:26:25,830
have collections you've multiple shards

00:26:23,520 --> 00:26:28,050
you need two things there you need you

00:26:25,830 --> 00:26:30,330
need a way to one make sure that you

00:26:28,050 --> 00:26:32,429
have backups that are spread across

00:26:30,330 --> 00:26:34,800
everywhere so you just need one copy you

00:26:32,429 --> 00:26:38,070
don't really need 30 copy if you have if

00:26:34,800 --> 00:26:39,570
that's your replication factor you also

00:26:38,070 --> 00:26:41,700
want to be sure that your backups are

00:26:39,570 --> 00:26:43,880
complete you didn't pick up wrong

00:26:41,700 --> 00:26:46,169
segments from wrong hosts at wrong

00:26:43,880 --> 00:26:47,489
points in time

00:26:46,169 --> 00:26:50,129
if you're building your own backup

00:26:47,489 --> 00:26:51,869
system so make sure both of these things

00:26:50,129 --> 00:26:53,489
work which is one you have a backup and

00:26:51,869 --> 00:26:55,230
do the backups are actually complete and

00:26:53,489 --> 00:26:59,999
not incomplete half enough backups

00:26:55,230 --> 00:27:02,309
they'll not work together thanks for

00:26:59,999 --> 00:27:05,850
wearing this light got back in I removed

00:27:02,309 --> 00:27:09,239
the slide you want to support Auto

00:27:05,850 --> 00:27:11,269
reindex that's that's a pretty

00:27:09,239 --> 00:27:14,309
interesting thing most search engines

00:27:11,269 --> 00:27:16,379
who even come with it tend to suggest

00:27:14,309 --> 00:27:18,269
that you disable it in production

00:27:16,379 --> 00:27:20,519
because it kind of adds an overhead load

00:27:18,269 --> 00:27:25,409
substa at the storage bunch of other

00:27:20,519 --> 00:27:27,869
stuff with solar we generally say do not

00:27:25,409 --> 00:27:30,450
use solar as your primary data source

00:27:27,869 --> 00:27:32,850
like never do this you must have a

00:27:30,450 --> 00:27:34,619
another primary data store and have

00:27:32,850 --> 00:27:35,730
search but there might be times when you

00:27:34,619 --> 00:27:37,799
really don't want to seek out your

00:27:35,730 --> 00:27:39,989
primary data store and want to just pre

00:27:37,799 --> 00:27:43,289
index for that use case if that's so

00:27:39,989 --> 00:27:45,629
important to you you can support you

00:27:43,289 --> 00:27:47,489
know Auto reindex seeing it provide an

00:27:45,629 --> 00:27:49,440
endpoint and if you have all of your

00:27:47,489 --> 00:27:51,600
data stored you can just reindex one

00:27:49,440 --> 00:27:53,399
thing to remember there is it's nice if

00:27:51,600 --> 00:27:55,080
you use aliases in such a situation

00:27:53,399 --> 00:27:56,970
because then you can spin up a new

00:27:55,080 --> 00:27:58,649
collection index all of your data again

00:27:56,970 --> 00:28:00,330
into that and once you do that you can

00:27:58,649 --> 00:28:02,879
point your alias to this newly created

00:28:00,330 --> 00:28:05,129
collection that's now that house now has

00:28:02,879 --> 00:28:08,549
Doc values or whatever it is that you

00:28:05,129 --> 00:28:09,840
really wanted and proxies obviously is a

00:28:08,549 --> 00:28:11,220
good place to manage those things in

00:28:09,840 --> 00:28:12,989
terms of pointing to the right

00:28:11,220 --> 00:28:20,789
collection in terms of like the alias

00:28:12,989 --> 00:28:22,350
being being the right thing what are

00:28:20,789 --> 00:28:25,200
your plans for clash of security having

00:28:22,350 --> 00:28:28,830
done a bunch in solar the earth plugin

00:28:25,200 --> 00:28:30,960
and the earth framework it's interesting

00:28:28,830 --> 00:28:32,399
and it's kind of important you only

00:28:30,960 --> 00:28:35,249
realize it once you start talking to

00:28:32,399 --> 00:28:37,470
people who really care about security so

00:28:35,249 --> 00:28:39,749
you'll get very different answers if you

00:28:37,470 --> 00:28:41,970
speak with a developer who's a search

00:28:39,749 --> 00:28:43,350
engineer and you check with them what do

00:28:41,970 --> 00:28:44,789
you think what security is like finally

00:28:43,350 --> 00:28:47,159
is secured it's behind a firewall it

00:28:44,789 --> 00:28:48,899
works fine it's just ok you talk to

00:28:47,159 --> 00:28:51,119
security experts like oh you've got

00:28:48,899 --> 00:28:52,529
these vulnerabilities here here and here

00:28:51,119 --> 00:28:54,559
and this is not robbed this is

00:28:52,529 --> 00:28:56,730
completely wrong this can never work and

00:28:54,559 --> 00:28:59,850
how do you even store data there that's

00:28:56,730 --> 00:29:03,980
so unsafe so very different site

00:28:59,850 --> 00:29:06,450
the story depends on who you ask and

00:29:03,980 --> 00:29:09,200
Saura kinda offers a bunch of things

00:29:06,450 --> 00:29:11,250
right the authentication framework the

00:29:09,200 --> 00:29:12,660
authorization framework you can build

00:29:11,250 --> 00:29:15,480
your own plugin it comes with the

00:29:12,660 --> 00:29:17,400
Kerberos plug-in support the basic art

00:29:15,480 --> 00:29:20,340
it kind of takes care very gracefully

00:29:17,400 --> 00:29:21,900
and very well when it talks the internal

00:29:20,340 --> 00:29:24,030
nodes oral communication is perfect like

00:29:21,900 --> 00:29:26,130
it works totally fine with TLS enabled

00:29:24,030 --> 00:29:29,280
and everything but when you're working

00:29:26,130 --> 00:29:32,340
on like a search platform one thing that

00:29:29,280 --> 00:29:34,440
you really need to think about and worry

00:29:32,340 --> 00:29:36,120
about is those kind of interactions

00:29:34,440 --> 00:29:37,530
right like the proxy to the clustered

00:29:36,120 --> 00:29:39,600
interaction is going to be a little

00:29:37,530 --> 00:29:40,830
different than a user to the proxy

00:29:39,600 --> 00:29:42,900
interaction so you need to think about

00:29:40,830 --> 00:29:44,669
security in terms of how am I gonna pass

00:29:42,900 --> 00:29:47,340
through my credentials when it when it's

00:29:44,669 --> 00:29:49,440
sent by the user through the proxy think

00:29:47,340 --> 00:29:52,230
about encryption logs and backups

00:29:49,440 --> 00:29:56,490
specially with GDP are like you're

00:29:52,230 --> 00:29:58,590
pushing in data users are sending update

00:29:56,490 --> 00:30:00,750
requests maybe you're even logging each

00:29:58,590 --> 00:30:03,539
of those requests so even though your

00:30:00,750 --> 00:30:06,000
solar index is completely safe and

00:30:03,539 --> 00:30:08,070
behind a firewall whatever if you put

00:30:06,000 --> 00:30:11,010
sending your logs to an unsecured host

00:30:08,070 --> 00:30:12,900
that has each of your update requests or

00:30:11,010 --> 00:30:14,549
each of your search requests that's

00:30:12,900 --> 00:30:17,700
pretty much you could replay that thing

00:30:14,549 --> 00:30:19,679
to build rebuild the index so and on

00:30:17,700 --> 00:30:21,750
disk encryption so think about all of

00:30:19,679 --> 00:30:23,730
these things think about all plugins and

00:30:21,750 --> 00:30:26,490
before you start out just think about is

00:30:23,730 --> 00:30:28,230
there a way to do this using existing

00:30:26,490 --> 00:30:30,210
tools that sort of provides or is there

00:30:28,230 --> 00:30:33,919
a way it's just extended and contributed

00:30:30,210 --> 00:30:33,919
back instead of starting from scratch

00:30:34,610 --> 00:30:41,130
gdpr keep all of you who were at the

00:30:38,640 --> 00:30:42,659
keynote today is the index data

00:30:41,130 --> 00:30:44,789
sensitive like that's an important

00:30:42,659 --> 00:30:47,580
question that's that's non-trivial and

00:30:44,789 --> 00:30:49,260
as much as you might want to think and

00:30:47,580 --> 00:30:51,539
believe that it's like oh it's not such

00:30:49,260 --> 00:30:52,650
an important thing it's okay like there

00:30:51,539 --> 00:30:54,270
are other people should be taking care

00:30:52,650 --> 00:30:57,929
of that we don't have to worry about it

00:30:54,270 --> 00:30:59,880
not always so when you're building a

00:30:57,929 --> 00:31:02,159
search platform think about who your

00:30:59,880 --> 00:31:04,710
audience is think about who your actual

00:31:02,159 --> 00:31:07,110
end users are and talk to talk about

00:31:04,710 --> 00:31:09,780
that with your actual first level users

00:31:07,110 --> 00:31:12,450
like talk to your users about who their

00:31:09,780 --> 00:31:13,680
users are and tell them what you can and

00:31:12,450 --> 00:31:15,750
cannot do

00:31:13,680 --> 00:31:17,430
can you obfuscate data because if they

00:31:15,750 --> 00:31:19,890
if there's social information if there's

00:31:17,430 --> 00:31:23,220
information that's PII there's private

00:31:19,890 --> 00:31:24,750
even personal information you probably

00:31:23,220 --> 00:31:28,020
want to obfuscate a bunch of things

00:31:24,750 --> 00:31:31,260
logging metrics whatever it is that you

00:31:28,020 --> 00:31:33,660
store sending away so think about that

00:31:31,260 --> 00:31:35,550
and think about if you should have

00:31:33,660 --> 00:31:37,920
access to data that's an important thing

00:31:35,550 --> 00:31:39,990
I mean I it's it's a fairly common

00:31:37,920 --> 00:31:43,320
practice that the platform owners have

00:31:39,990 --> 00:31:44,820
access to every host shouldn't generally

00:31:43,320 --> 00:31:49,050
be the case specially if you have data

00:31:44,820 --> 00:31:51,570
that's PII make sure that even that the

00:31:49,050 --> 00:31:53,340
data shouldn't be accessible to you this

00:31:51,570 --> 00:31:54,720
should be tools for you to debug what's

00:31:53,340 --> 00:31:57,990
going on there should be tools to get

00:31:54,720 --> 00:32:00,810
your first Gator information back but

00:31:57,990 --> 00:32:03,090
make sure that you're not you know you

00:32:00,810 --> 00:32:05,460
don't you don't have a way to get that

00:32:03,090 --> 00:32:12,030
data back it's it's probably not going

00:32:05,460 --> 00:32:14,370
to end well well now the advanced users

00:32:12,030 --> 00:32:18,420
your customers have customer custom

00:32:14,370 --> 00:32:20,100
plugins right that's that's what

00:32:18,420 --> 00:32:21,840
everyone thinks is like their magic

00:32:20,100 --> 00:32:24,180
trick like I've got a hat and things

00:32:21,840 --> 00:32:26,010
come out of her dike it's it's it's

00:32:24,180 --> 00:32:28,500
something that most of us believe we

00:32:26,010 --> 00:32:30,420
have something like that and so everyone

00:32:28,500 --> 00:32:32,670
feels that their plugin is essential

00:32:30,420 --> 00:32:33,300
like they they can't ever accomplish

00:32:32,670 --> 00:32:36,840
what they're trying to accomplish

00:32:33,300 --> 00:32:39,570
without that custom plugin think about

00:32:36,840 --> 00:32:41,670
what they're trying to do if you if

00:32:39,570 --> 00:32:43,230
you're in a setup where you can talk to

00:32:41,670 --> 00:32:45,360
the customers when they're getting on

00:32:43,230 --> 00:32:47,610
board talk to them about do they really

00:32:45,360 --> 00:32:49,170
need it can they do it outside because

00:32:47,610 --> 00:32:52,860
one one thing that it really shouldn't

00:32:49,170 --> 00:32:55,860
like remember is code that does not

00:32:52,860 --> 00:32:57,570
belong to you can have anything and

00:32:55,860 --> 00:32:59,700
while it might come with test cases and

00:32:57,570 --> 00:33:00,360
one of other things there's no guarantee

00:32:59,700 --> 00:33:02,790
how it's gonna work

00:33:00,360 --> 00:33:05,130
especially on a multi-tenant system some

00:33:02,790 --> 00:33:06,630
person who built of login wrote a

00:33:05,130 --> 00:33:10,100
blogging in a manner that brings down

00:33:06,630 --> 00:33:12,330
the JVM that affects 20 other users

00:33:10,100 --> 00:33:14,370
that's a disaster you really don't want

00:33:12,330 --> 00:33:16,020
that so think about it it's hard to

00:33:14,370 --> 00:33:18,240
maintain it's worse when you want to

00:33:16,020 --> 00:33:19,530
upgrade but the old user wants to stay

00:33:18,240 --> 00:33:22,170
on that version and then you're trying

00:33:19,530 --> 00:33:23,550
to like fit the jigsaw pieces and say ok

00:33:22,170 --> 00:33:25,200
I'm going to move this user there and

00:33:23,550 --> 00:33:27,270
co-locate this user with this person so

00:33:25,200 --> 00:33:29,580
don't do that

00:33:27,270 --> 00:33:31,410
about a way where you cannot like you

00:33:29,580 --> 00:33:33,300
can get around and not actually have

00:33:31,410 --> 00:33:35,730
custom plugins it's a it's a disaster to

00:33:33,300 --> 00:33:37,740
maintain but if you really need to do

00:33:35,730 --> 00:33:40,190
that if it's an advanced platform then

00:33:37,740 --> 00:33:43,110
think about blobstore it allows you to

00:33:40,190 --> 00:33:45,540
actually upload a plug-in and solar

00:33:43,110 --> 00:33:48,090
actually automatically distributes it so

00:33:45,540 --> 00:33:49,860
it stores it in a collection a system

00:33:48,090 --> 00:33:52,020
collection and then it goes ahead and

00:33:49,860 --> 00:33:54,480
distributes the jar and you don't have

00:33:52,020 --> 00:33:56,850
to really copy and manage and maintain a

00:33:54,480 --> 00:33:58,380
bunch of stuff so but read about it read

00:33:56,850 --> 00:33:59,730
about its security implications and

00:33:58,380 --> 00:34:07,440
think about if you really want to

00:33:59,730 --> 00:34:10,320
support that plug-in bless you how will

00:34:07,440 --> 00:34:11,850
you train users write library send them

00:34:10,320 --> 00:34:13,530
to libraries most of them will never end

00:34:11,850 --> 00:34:15,960
up there right I mean how many times

00:34:13,530 --> 00:34:17,909
have you read a manual like with

00:34:15,960 --> 00:34:21,690
anything that you bought microwave for

00:34:17,909 --> 00:34:23,490
example nobody reads a manual so that's

00:34:21,690 --> 00:34:25,649
an often overlooked question I build a

00:34:23,490 --> 00:34:27,179
platform I bring it out you try to use

00:34:25,649 --> 00:34:29,700
it if you can't use it in the first 15

00:34:27,179 --> 00:34:31,980
ways you let go the UI is crappy I can't

00:34:29,700 --> 00:34:34,230
use this thing well okay I give you a UI

00:34:31,980 --> 00:34:36,210
that makes it easy for you to start but

00:34:34,230 --> 00:34:37,320
20 days later when you're actually

00:34:36,210 --> 00:34:39,240
trying to do something constructive

00:34:37,320 --> 00:34:40,590
you're like oh how do I do this and how

00:34:39,240 --> 00:34:42,720
do I do that and so they start pinging

00:34:40,590 --> 00:34:44,760
you and you're like I was supposed to

00:34:42,720 --> 00:34:47,490
build these interesting things for

00:34:44,760 --> 00:34:49,290
everyone for like 50,000 users and now

00:34:47,490 --> 00:34:51,210
I'm stuck with this one user trying to

00:34:49,290 --> 00:34:54,810
figure out this one specific use case

00:34:51,210 --> 00:34:56,940
that the last user asked for last month

00:34:54,810 --> 00:34:57,360
but I can't share those emails or what

00:34:56,940 --> 00:34:59,850
do I do

00:34:57,360 --> 00:35:01,080
right think about demos think about

00:34:59,850 --> 00:35:04,500
examples things well think about

00:35:01,080 --> 00:35:05,910
everything that can be a generic thing

00:35:04,500 --> 00:35:08,670
and share it with everyone

00:35:05,910 --> 00:35:11,010
set up mailing lists make sure you share

00:35:08,670 --> 00:35:12,290
more and more information because you

00:35:11,010 --> 00:35:14,520
don't want to spend most of your time

00:35:12,290 --> 00:35:17,040
fixing things that have already been

00:35:14,520 --> 00:35:19,080
fixed telling people what's I mean

00:35:17,040 --> 00:35:22,500
sharing information or typing an email

00:35:19,080 --> 00:35:23,970
that already exists like if if it if it

00:35:22,500 --> 00:35:25,890
has to happen and if you've shared that

00:35:23,970 --> 00:35:28,230
information and it wasn't private

00:35:25,890 --> 00:35:30,660
information it should be out there you

00:35:28,230 --> 00:35:34,470
should just share it with in an archive

00:35:30,660 --> 00:35:37,160
system that is easy to search so do that

00:35:34,470 --> 00:35:39,570
and think about code examples that's

00:35:37,160 --> 00:35:41,180
that's something that most people missed

00:35:39,570 --> 00:35:44,160
like they try to start writing code

00:35:41,180 --> 00:35:45,859
they try to write code they know other

00:35:44,160 --> 00:35:49,289
end points they really don't know about

00:35:45,859 --> 00:35:51,359
how do I write code against it they also

00:35:49,289 --> 00:35:53,880
in case of solar there are five ways to

00:35:51,359 --> 00:35:56,579
do the same thing right so it'd be nice

00:35:53,880 --> 00:35:59,520
for someone to understand what are the

00:35:56,579 --> 00:36:01,890
differences between those five ways if

00:35:59,520 --> 00:36:03,569
your platform only exposes one way of

00:36:01,890 --> 00:36:05,970
those five ways of doing things

00:36:03,569 --> 00:36:08,069
tell them why write it down share it

00:36:05,970 --> 00:36:10,829
with them it makes things much easier

00:36:08,069 --> 00:36:14,549
for a user and if you users are kind of

00:36:10,829 --> 00:36:18,349
happy and you know things work for them

00:36:14,549 --> 00:36:18,349
it's gonna be super awesome for you oh

00:36:18,920 --> 00:36:25,170
and one more thing you plan to fork

00:36:22,920 --> 00:36:28,140
because a bunch of times you're like oh

00:36:25,170 --> 00:36:32,369
I need I need this and I need that I've

00:36:28,140 --> 00:36:33,720
seen people for it because they were

00:36:32,369 --> 00:36:36,119
running a multi-tenant set up with a

00:36:33,720 --> 00:36:39,539
bunch of course they realized they were

00:36:36,119 --> 00:36:40,950
logging way too much information because

00:36:39,539 --> 00:36:44,220
solar was logging but way too much

00:36:40,950 --> 00:36:46,289
information and they decided to fork

00:36:44,220 --> 00:36:51,690
only because they wanted to comment out

00:36:46,289 --> 00:36:53,970
the log lines right so yes no that's a

00:36:51,690 --> 00:36:55,770
disaster and then when you try to

00:36:53,970 --> 00:36:57,569
upgrade to another version what are you

00:36:55,770 --> 00:36:59,700
gonna do are you going to go back again

00:36:57,569 --> 00:37:03,990
through those I don't know I removed

00:36:59,700 --> 00:37:07,200
that slide but 154 years of effort has

00:37:03,990 --> 00:37:09,119
gone into just solar itself are you

00:37:07,200 --> 00:37:10,829
going to go through every bit of line

00:37:09,119 --> 00:37:12,240
and figure out all the log lines and

00:37:10,829 --> 00:37:13,410
figure out if it's important to you the

00:37:12,240 --> 00:37:15,599
next time you want to upgrade because

00:37:13,410 --> 00:37:17,609
this cannot be backward or forward

00:37:15,599 --> 00:37:19,970
ported like that it doesn't work that

00:37:17,609 --> 00:37:22,109
way so if you're trying to fork

00:37:19,970 --> 00:37:23,670
releasing it out think about do you

00:37:22,109 --> 00:37:24,569
really want or do you really need it if

00:37:23,670 --> 00:37:26,970
you don't need it

00:37:24,569 --> 00:37:29,190
first thing just if you don't need it

00:37:26,970 --> 00:37:30,690
don't do it if you really need it can

00:37:29,190 --> 00:37:32,640
that be a plug-in if that can be a

00:37:30,690 --> 00:37:34,230
plug-in can that be contributor that's a

00:37:32,640 --> 00:37:35,579
very good thing like you don't want to

00:37:34,230 --> 00:37:37,289
maintain your own plug-in for the rest

00:37:35,579 --> 00:37:39,990
of your life there there's a community

00:37:37,289 --> 00:37:43,020
around it there it would be super we

00:37:39,990 --> 00:37:46,740
would be super happy to add more things

00:37:43,020 --> 00:37:48,089
more tests test it out try it out and

00:37:46,740 --> 00:37:50,220
that would make things much better as

00:37:48,089 --> 00:37:54,050
opposed to forking out and doing things

00:37:50,220 --> 00:38:00,590
your way like so please don't work

00:37:54,050 --> 00:38:02,630
chopstix summary keep it simple think

00:38:00,590 --> 00:38:04,400
about the users think about who you're

00:38:02,630 --> 00:38:04,730
targeting and then stick around with

00:38:04,400 --> 00:38:07,660
that

00:38:04,730 --> 00:38:11,600
don't try to expand and like support

00:38:07,660 --> 00:38:13,160
advanced users basic users people want

00:38:11,600 --> 00:38:14,660
to do machine learning and people

00:38:13,160 --> 00:38:17,120
wanting to do bunch of other stuffs like

00:38:14,660 --> 00:38:19,220
know like concentrate on one aspect if

00:38:17,120 --> 00:38:21,140
you have a advanced users and if you're

00:38:19,220 --> 00:38:22,460
only building it for like at one of my

00:38:21,140 --> 00:38:25,550
organizations that I've worked it worked

00:38:22,460 --> 00:38:27,740
out we had six domains and six

00:38:25,550 --> 00:38:29,510
organizations within that who had five

00:38:27,740 --> 00:38:32,570
different use cases thirty use cases but

00:38:29,510 --> 00:38:35,600
six organizations within that we kind of

00:38:32,570 --> 00:38:37,490
build custom things for them but we knew

00:38:35,600 --> 00:38:39,710
these were the only people who would

00:38:37,490 --> 00:38:42,520
ever accuse it it and it was internal so

00:38:39,710 --> 00:38:44,960
you can't do that kind of stuff just

00:38:42,520 --> 00:38:46,910
just make sure you're targeting the

00:38:44,960 --> 00:38:49,430
right audience and picking you know

00:38:46,910 --> 00:38:51,260
don't bite off more than you can chew we

00:38:49,430 --> 00:38:53,060
tend to like always get super excited

00:38:51,260 --> 00:38:56,120
about I'm going to do this this and this

00:38:53,060 --> 00:38:59,330
I've been facing that for a long time

00:38:56,120 --> 00:39:02,210
now you want to do a lot but you cannot

00:38:59,330 --> 00:39:04,130
accomplish most of it and kind of gets

00:39:02,210 --> 00:39:06,350
frustrating every now and then so don't

00:39:04,130 --> 00:39:08,800
do that also

00:39:06,350 --> 00:39:13,240
in terms of the version and the upgrades

00:39:08,800 --> 00:39:16,280
we have pretty active release cycle like

00:39:13,240 --> 00:39:17,840
month every month we have releases and

00:39:16,280 --> 00:39:19,490
I'm not even talking about but fixed

00:39:17,840 --> 00:39:23,270
releases I'm talking about new features

00:39:19,490 --> 00:39:25,460
coming out yay pick up a stable version

00:39:23,270 --> 00:39:27,110
I would not recommend like their version

00:39:25,460 --> 00:39:31,090
that would come out five days from now

00:39:27,110 --> 00:39:32,870
don't don't just and I'm I'm not I'm not

00:39:31,090 --> 00:39:34,370
categorically speaking about that

00:39:32,870 --> 00:39:35,810
version I just mean don't pick up the

00:39:34,370 --> 00:39:37,820
most recent version pick up a version

00:39:35,810 --> 00:39:39,890
that's been out there for a few months

00:39:37,820 --> 00:39:42,350
people have tried it out test that out

00:39:39,890 --> 00:39:44,540
see that works for you and then stick

00:39:42,350 --> 00:39:45,740
with it like don't try to back port most

00:39:44,540 --> 00:39:47,240
of the stuff like if you don't really

00:39:45,740 --> 00:39:50,330
need it and the next time you really

00:39:47,240 --> 00:39:53,780
want to pick up a bunch of things just

00:39:50,330 --> 00:39:55,340
go ahead and upgrade don't try to back

00:39:53,780 --> 00:39:57,260
board that's a that's a rabbit hole like

00:39:55,340 --> 00:40:02,420
you once you start start there there's

00:39:57,260 --> 00:40:05,270
no coming back and that's it for the

00:40:02,420 --> 00:40:14,460
conference and from me thank you

00:40:05,270 --> 00:40:14,460

YouTube URL: https://www.youtube.com/watch?v=cJ-IA5x8TJo


