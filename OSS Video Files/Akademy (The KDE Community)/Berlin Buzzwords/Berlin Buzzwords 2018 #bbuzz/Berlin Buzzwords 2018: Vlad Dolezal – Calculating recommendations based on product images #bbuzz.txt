Title: Berlin Buzzwords 2018: Vlad Dolezal – Calculating recommendations based on product images #bbuzz
Publication date: 2018-06-18
Playlist: Berlin Buzzwords 2018 #bbuzz
Description: 
	At Home24, Europe’s largest online furniture retailer, we face the challenge of calculating good recommendations for products where we lack enough user behavior data. Although we get fairly good results with recommendations based on product metadata, for some products the metadata is just not granular enough to produce good results. In particular, "material: wood, color: brown" matches a wide variety of products that don’t actually fit together from a human perspective.

To make up for this deficit, we found a way to augment our algorithms with product images - analysing the colors in each image to recommend products that match well visually.

Read more:
https://2018.berlinbuzzwords.de/18/session/calculating-recommendations-based-product-images

About Vlad Dolezal:
https://2018.berlinbuzzwords.de/users/vlad-dolezal

Website: https://berlinbuzzwords.de/
Twitter: https://twitter.com/berlinbuzzwords
LinkedIn: https://www.linkedin.com/showcase/berlin-buzzwords/ 
Reddit: https://www.reddit.com/r/berlinbuzzwords/
Captions: 
	00:00:04,790 --> 00:00:11,400
hi everyone oh it's quite a full room

00:00:08,550 --> 00:00:13,469
here right now that's actually also my

00:00:11,400 --> 00:00:15,180
experience that whenever I do something

00:00:13,469 --> 00:00:17,190
super cool with lots of algorithms and

00:00:15,180 --> 00:00:18,390
numbers it's it's like great and then

00:00:17,190 --> 00:00:20,039
you have like five people listening to

00:00:18,390 --> 00:00:22,980
you and as soon as you good worked with

00:00:20,039 --> 00:00:24,240
images and show some pictures like we

00:00:22,980 --> 00:00:27,240
have twice as many people here as chairs

00:00:24,240 --> 00:00:30,060
pretty much okay so my name is Vlad

00:00:27,240 --> 00:00:32,460
Dolezal I'm a team lead at engineering

00:00:30,060 --> 00:00:35,550
at home 24 and today I'll be presenting

00:00:32,460 --> 00:00:38,030
a little bit about how we calculate

00:00:35,550 --> 00:00:40,680
recommendations based on product images

00:00:38,030 --> 00:00:43,620
home 24 is Europe's largest e-commerce

00:00:40,680 --> 00:00:46,830
website for furniture active in seven

00:00:43,620 --> 00:00:49,110
European countries and Brazil and we

00:00:46,830 --> 00:00:50,640
have a large and diverse tech team where

00:00:49,110 --> 00:00:53,640
among other things on the data team we

00:00:50,640 --> 00:00:57,860
work with Scala SPARC and many of the

00:00:53,640 --> 00:01:00,530
latest greatest AWS technologies now

00:00:57,860 --> 00:01:02,400
before I get to how we actually analyze

00:01:00,530 --> 00:01:04,979
product images to generate

00:01:02,400 --> 00:01:07,259
recommendations I'd like to give a bit

00:01:04,979 --> 00:01:09,960
of background information about how we

00:01:07,259 --> 00:01:11,999
got the idea in the first place so what

00:01:09,960 --> 00:01:16,950
we have here is a product detail page

00:01:11,999 --> 00:01:19,710
and we're trying to populate this slide

00:01:16,950 --> 00:01:21,689
right here of similar products so the

00:01:19,710 --> 00:01:26,159
way we do it background information for

00:01:21,689 --> 00:01:29,280
most of you is the best thing you can do

00:01:26,159 --> 00:01:30,689
is using collaborative filtering so

00:01:29,280 --> 00:01:32,490
looking at what the actual users do

00:01:30,689 --> 00:01:33,569
people look at this table what do they

00:01:32,490 --> 00:01:34,799
end up clicking what do they end up

00:01:33,569 --> 00:01:37,319
buying what do they end up adding to

00:01:34,799 --> 00:01:39,060
cart which is the advantage that you

00:01:37,319 --> 00:01:40,649
don't have to guess you don't have to

00:01:39,060 --> 00:01:42,929
behave any of your own biases you just

00:01:40,649 --> 00:01:45,270
show just do a data-driven see what the

00:01:42,929 --> 00:01:47,159
real users do but it has the

00:01:45,270 --> 00:01:49,079
disadvantage that when you have new

00:01:47,159 --> 00:01:51,049
products then that come online they

00:01:49,079 --> 00:01:53,909
don't have enough user behavior yet and

00:01:51,049 --> 00:01:55,380
also since we're an e-commerce company

00:01:53,909 --> 00:01:57,630
we're not limited by amount of floor

00:01:55,380 --> 00:01:58,859
space in a showroom or something which

00:01:57,630 --> 00:02:01,439
means that we can have a very broad

00:01:58,859 --> 00:02:02,639
catalogue of products but that also

00:02:01,439 --> 00:02:04,859
means that if we have 5000 different

00:02:02,639 --> 00:02:06,209
sofas then the user behavior on the

00:02:04,859 --> 00:02:09,899
website gets spread across all those

00:02:06,209 --> 00:02:11,550
5,000 sofas and so for many of them we

00:02:09,899 --> 00:02:13,349
don't actually get enough user behavior

00:02:11,550 --> 00:02:16,500
to say hmm what would be a good

00:02:13,349 --> 00:02:19,519
recommendation so again background

00:02:16,500 --> 00:02:19,519
information for most of you

00:02:20,030 --> 00:02:24,780
yeah they got information for most of

00:02:22,860 --> 00:02:27,180
you is we use attribute based

00:02:24,780 --> 00:02:28,890
recommendations so we have attributes in

00:02:27,180 --> 00:02:30,540
the database that say this here is a

00:02:28,890 --> 00:02:33,330
chair it's made of food color brown

00:02:30,540 --> 00:02:35,390
style modern and so on which is the

00:02:33,330 --> 00:02:40,110
advantage that it covers all products

00:02:35,390 --> 00:02:43,710
but it also has challenges that we'll

00:02:40,110 --> 00:02:45,000
look at right now so what we did as we

00:02:43,710 --> 00:02:46,830
build a little internal tool to

00:02:45,000 --> 00:02:48,810
visualize our results and the results of

00:02:46,830 --> 00:02:49,920
our various algorithms and that's

00:02:48,810 --> 00:02:52,200
something I would encourage all of you

00:02:49,920 --> 00:02:53,730
to take the time to do to build these

00:02:52,200 --> 00:02:55,860
sorts of visualizations for your system

00:02:53,730 --> 00:02:57,690
so you don't spend all day staring at

00:02:55,860 --> 00:02:59,850
various Jason's and statistical analyses

00:02:57,690 --> 00:03:02,940
but actually see in front of you what it

00:02:59,850 --> 00:03:05,010
is that your algorithms are producing so

00:03:02,940 --> 00:03:06,540
what we have here is on the Left we have

00:03:05,010 --> 00:03:09,060
the product we want recommendations for

00:03:06,540 --> 00:03:13,590
and these are the top five picks of the

00:03:09,060 --> 00:03:14,940
attribute based recommender so we see

00:03:13,590 --> 00:03:17,690
here that they're all tables there are

00:03:14,940 --> 00:03:19,470
roughly the same same style size shape

00:03:17,690 --> 00:03:22,920
so there are already pretty good

00:03:19,470 --> 00:03:24,570
recommendations but maybe since the

00:03:22,920 --> 00:03:26,670
recommendation here that the core duck

00:03:24,570 --> 00:03:30,600
here we want recommendations for has a

00:03:26,670 --> 00:03:32,010
boot on top and metal legs maybe we can

00:03:30,600 --> 00:03:34,050
think that this recommendation here

00:03:32,010 --> 00:03:36,570
might be actually a better match than

00:03:34,050 --> 00:03:38,370
these four here so this is already

00:03:36,570 --> 00:03:40,500
suggesting maybe there are some space

00:03:38,370 --> 00:03:43,680
for improvement and in fact what we did

00:03:40,500 --> 00:03:45,270
is we visualize our click-through score

00:03:43,680 --> 00:03:47,280
on the recommendations so what we do

00:03:45,270 --> 00:03:49,290
here is we have the recommendation

00:03:47,280 --> 00:03:51,540
slider and we track for each

00:03:49,290 --> 00:03:53,730
recommendation we track which product we

00:03:51,540 --> 00:03:55,080
show in which position which gives

00:03:53,730 --> 00:03:56,580
there's an expected number of clicks on

00:03:55,080 --> 00:03:58,950
that product because it's a well-known

00:03:56,580 --> 00:04:00,030
effect that people usually click on the

00:03:58,950 --> 00:04:02,610
first product more and then on the

00:04:00,030 --> 00:04:04,080
second one on the third and so on so we

00:04:02,610 --> 00:04:05,490
adjust the number of expected clicks for

00:04:04,080 --> 00:04:08,100
each product based on which position it

00:04:05,490 --> 00:04:10,320
was shown in the slider and secondly we

00:04:08,100 --> 00:04:11,750
track the actual number of clicks and

00:04:10,320 --> 00:04:13,709
then comparing those two we get a

00:04:11,750 --> 00:04:16,109
click-through score for all of those

00:04:13,709 --> 00:04:17,669
recommendations so we see over here that

00:04:16,109 --> 00:04:20,640
the three ones here with the positive

00:04:17,669 --> 00:04:21,750
score are under rated which means they

00:04:20,640 --> 00:04:23,580
should be shown higher up in the

00:04:21,750 --> 00:04:26,070
recommendation slider than they are

00:04:23,580 --> 00:04:28,440
currently being shown and we see all of

00:04:26,070 --> 00:04:30,660
them actually have this effect of having

00:04:28,440 --> 00:04:31,430
being looking very similar having metal

00:04:30,660 --> 00:04:34,000
legs having a same

00:04:31,430 --> 00:04:36,770
color world and on the other hand here

00:04:34,000 --> 00:04:41,090
the two recommendations with a negative

00:04:36,770 --> 00:04:42,530
score they they are being on too high in

00:04:41,090 --> 00:04:44,360
the slider so they should be shallower

00:04:42,530 --> 00:04:46,160
and we see that visually they don't

00:04:44,360 --> 00:04:47,300
quite match the table here even though

00:04:46,160 --> 00:04:50,030
that based on the attributes they

00:04:47,300 --> 00:04:51,890
probably much quite well so we went and

00:04:50,030 --> 00:04:53,210
we looked at what kind of attributes and

00:04:51,890 --> 00:04:56,780
data we actually have in the database

00:04:53,210 --> 00:04:58,190
and we found an example like this both

00:04:56,780 --> 00:05:01,130
of these tables are marked as color

00:04:58,190 --> 00:05:02,420
brown and material solid wood but if you

00:05:01,130 --> 00:05:03,650
have a bunch of chairs in your home and

00:05:02,420 --> 00:05:05,690
you're trying to find a matching table

00:05:03,650 --> 00:05:08,810
if the first one matches then the second

00:05:05,690 --> 00:05:09,920
one probably doesn't and vice versa and

00:05:08,810 --> 00:05:12,500
this was the first thing that gave us

00:05:09,920 --> 00:05:14,840
this idea that maybe our content-based

00:05:12,500 --> 00:05:17,090
attributes I just don't have enough

00:05:14,840 --> 00:05:19,730
detail and you should see if we can

00:05:17,090 --> 00:05:22,100
somehow augment this information and

00:05:19,730 --> 00:05:23,660
that's how we got the idea of using the

00:05:22,100 --> 00:05:26,060
product images to generate

00:05:23,660 --> 00:05:28,130
recommendations so this was actually the

00:05:26,060 --> 00:05:29,960
first idea of our principle data

00:05:28,130 --> 00:05:31,790
architect Marcus rubella sitting right

00:05:29,960 --> 00:05:35,000
there in the audience trying to look

00:05:31,790 --> 00:05:37,280
humble and so he got this idea and he

00:05:35,000 --> 00:05:39,470
went to all of us and me and our product

00:05:37,280 --> 00:05:41,210
owner and so on we all said mmm using

00:05:39,470 --> 00:05:42,920
the images for recommendations don't you

00:05:41,210 --> 00:05:44,890
need like a team of three PhDs and a

00:05:42,920 --> 00:05:47,000
whole year to build something sensible

00:05:44,890 --> 00:05:48,530
and he was like no you don't he

00:05:47,000 --> 00:05:50,390
remembered some research papers he read

00:05:48,530 --> 00:05:52,760
somewhere and he went off he built a

00:05:50,390 --> 00:05:53,990
prototype in one day to just show that

00:05:52,760 --> 00:05:55,520
this idea is possible and was actually

00:05:53,990 --> 00:05:57,640
giving surprising good results and

00:05:55,520 --> 00:06:00,650
convinced all of us to give this a try

00:05:57,640 --> 00:06:05,360
so the way we use the product images the

00:06:00,650 --> 00:06:06,740
calculate recommendations is we extract

00:06:05,360 --> 00:06:08,750
the main colors that we see in each

00:06:06,740 --> 00:06:11,150
image because as we saw in those

00:06:08,750 --> 00:06:13,070
previous examples although the

00:06:11,150 --> 00:06:14,330
attributes say they are similar visually

00:06:13,070 --> 00:06:16,400
when just look at the image from the

00:06:14,330 --> 00:06:18,920
colors and so on it doesn't much quite

00:06:16,400 --> 00:06:20,630
well and so we had struck the main

00:06:18,920 --> 00:06:22,850
colors the way we do this is we ignore

00:06:20,630 --> 00:06:24,620
the background pixels and then we run a

00:06:22,850 --> 00:06:26,630
simple k-means clustering algorithm on

00:06:24,620 --> 00:06:28,660
the remaining pixels and then we take

00:06:26,630 --> 00:06:32,390
the ten centroids of those ten clusters

00:06:28,660 --> 00:06:34,700
the reason this works so well is that

00:06:32,390 --> 00:06:36,740
for this image over here for example it

00:06:34,700 --> 00:06:38,810
has lots of yellow pixels and quite a

00:06:36,740 --> 00:06:40,340
few of those black-ish green pixels and

00:06:38,810 --> 00:06:43,650
not so many of these reddish orangish

00:06:40,340 --> 00:06:47,100
and so on and so we see at the

00:06:43,650 --> 00:06:49,530
that end up being produced we have lots

00:06:47,100 --> 00:06:50,790
of values right here in the greenish

00:06:49,530 --> 00:06:52,020
blackish area and we have lots of

00:06:50,790 --> 00:06:53,910
centroids close to each other on the

00:06:52,020 --> 00:06:56,610
yellow area and not so many in the

00:06:53,910 --> 00:06:57,870
reddish orangish area and this means

00:06:56,610 --> 00:06:59,610
that when you end up later

00:06:57,870 --> 00:07:01,050
comparing two images and seeing how

00:06:59,610 --> 00:07:02,970
similar they are you're already

00:07:01,050 --> 00:07:04,350
automatically giving way more way to the

00:07:02,970 --> 00:07:08,940
pixels that appear more often in the

00:07:04,350 --> 00:07:10,199
image so just to visualize what this

00:07:08,940 --> 00:07:12,240
actually looks for the products we were

00:07:10,199 --> 00:07:14,400
looking at this is the product we want

00:07:12,240 --> 00:07:16,400
recommendations for and the ten the

00:07:14,400 --> 00:07:18,780
representative colors for this image

00:07:16,400 --> 00:07:20,310
then this is the topic of the attribute

00:07:18,780 --> 00:07:23,250
based recommender and again it's

00:07:20,310 --> 00:07:24,990
representative colors and finally the

00:07:23,250 --> 00:07:26,910
most underrated recommendation based on

00:07:24,990 --> 00:07:28,080
click-through rate so that one that we

00:07:26,910 --> 00:07:30,300
should be pushing higher up in the

00:07:28,080 --> 00:07:31,800
slider but we're currently not and this

00:07:30,300 --> 00:07:34,080
is already give us an indication that

00:07:31,800 --> 00:07:35,430
we're on the right track and that mixing

00:07:34,080 --> 00:07:39,630
in this color signal will probably

00:07:35,430 --> 00:07:41,039
improve our recommendation system so how

00:07:39,630 --> 00:07:42,710
do we actually calculate the similarity

00:07:41,039 --> 00:07:45,060
between two products based on the images

00:07:42,710 --> 00:07:47,039
we have extracted the main ten colors

00:07:45,060 --> 00:07:49,020
for each of them and then what we do

00:07:47,039 --> 00:07:51,539
first we just define the distance

00:07:49,020 --> 00:07:53,039
between two colors to be the Euclidean

00:07:51,539 --> 00:07:55,800
distance between them in the lab color

00:07:53,039 --> 00:07:57,479
space the reason we use lab and not RGB

00:07:55,800 --> 00:07:59,820
is that it's a color space that designed

00:07:57,479 --> 00:08:02,970
in such a way that a simple geometric

00:07:59,820 --> 00:08:04,560
distance between two colors is very it's

00:08:02,970 --> 00:08:07,800
very similar to what humans perceive as

00:08:04,560 --> 00:08:09,210
the two colors being similar then after

00:08:07,800 --> 00:08:12,000
that what we do is we look at the first

00:08:09,210 --> 00:08:14,699
color on product a we compare it to all

00:08:12,000 --> 00:08:16,860
ten colors on product B C which is the

00:08:14,699 --> 00:08:18,539
most similar one and we call that the

00:08:16,860 --> 00:08:20,699
minimum color distance for the first

00:08:18,539 --> 00:08:22,289
color on product a then we take the

00:08:20,699 --> 00:08:24,229
second one here again compared to all

00:08:22,289 --> 00:08:26,970
ten C which is the most similar one and

00:08:24,229 --> 00:08:28,889
that gives us the minimum distance for

00:08:26,970 --> 00:08:30,479
the second color and so on and so forth

00:08:28,889 --> 00:08:32,909
we sum up all ten values for the first

00:08:30,479 --> 00:08:36,830
product and this gives us this kind of

00:08:32,909 --> 00:08:38,909
measure from product a to product B and

00:08:36,830 --> 00:08:40,020
because this is not symmetrical and we

00:08:38,909 --> 00:08:41,849
want to end up with a notion of distance

00:08:40,020 --> 00:08:43,979
at the end we end up doing this

00:08:41,849 --> 00:08:46,260
comparison both ways and we put together

00:08:43,979 --> 00:08:48,120
this little formula for the score so

00:08:46,260 --> 00:08:49,589
that when the products are very similar

00:08:48,120 --> 00:08:51,930
that means this function here is close

00:08:49,589 --> 00:08:53,520
to zero or so we get a high number here

00:08:51,930 --> 00:08:55,770
and similarly if they are very

00:08:53,520 --> 00:08:56,570
dissimilar we have a big distance right

00:08:55,770 --> 00:08:57,650
here

00:08:56,570 --> 00:08:59,140
then we end up with the low score

00:08:57,650 --> 00:09:01,310
because we're dividing by a large number

00:08:59,140 --> 00:09:05,510
and you put a one on bottom to avoid

00:09:01,310 --> 00:09:08,540
dividing by zero so what does this

00:09:05,510 --> 00:09:10,520
actually give us as results again we

00:09:08,540 --> 00:09:13,760
have the topics of the attribute based

00:09:10,520 --> 00:09:15,350
recommender we combine this with the top

00:09:13,760 --> 00:09:17,480
five picks of the color recommender or

00:09:15,350 --> 00:09:20,750
indeed a lot more I'm just visualizing

00:09:17,480 --> 00:09:23,740
here the top five and eventually the

00:09:20,750 --> 00:09:26,630
combined results look like this and

00:09:23,740 --> 00:09:28,850
right now for this particular example

00:09:26,630 --> 00:09:30,440
you might actually say that the color

00:09:28,850 --> 00:09:32,690
recommender by itself looks better than

00:09:30,440 --> 00:09:34,220
the combined results but we tested this

00:09:32,690 --> 00:09:37,880
and combining the two gives us the best

00:09:34,220 --> 00:09:39,530
results overall so before I get to the

00:09:37,880 --> 00:09:40,880
actual results like how much change we

00:09:39,530 --> 00:09:42,920
saw and click-through rate and so on I

00:09:40,880 --> 00:09:45,490
want to share some fun challenges we

00:09:42,920 --> 00:09:48,020
faced along the way one of them was that

00:09:45,490 --> 00:09:50,210
if you pick a random product a random

00:09:48,020 --> 00:09:53,270
image for a product you sometimes get an

00:09:50,210 --> 00:09:57,590
image like this and sometimes an image

00:09:53,270 --> 00:09:58,850
like this oops and so if you end up

00:09:57,590 --> 00:10:00,500
analyzing the second image then you'll

00:09:58,850 --> 00:10:02,150
end up thinking that your table has a

00:10:00,500 --> 00:10:05,420
bunch of yellow and orange colors and so

00:10:02,150 --> 00:10:08,900
on and completely throws you off and the

00:10:05,420 --> 00:10:10,490
fun thing is fun is that the background

00:10:08,900 --> 00:10:11,720
pixels on the clean images they're not

00:10:10,490 --> 00:10:13,100
actually the same color that's usually

00:10:11,720 --> 00:10:14,620
slightly off-white and due to image

00:10:13,100 --> 00:10:16,670
compression it's not all the same color

00:10:14,620 --> 00:10:18,470
so what we ended up doing is analyzing

00:10:16,670 --> 00:10:20,450
the border of the image and saying okay

00:10:18,470 --> 00:10:22,010
if all of those pixels are within a

00:10:20,450 --> 00:10:24,350
certain small standard deviation of each

00:10:22,010 --> 00:10:25,640
other then that's the background color

00:10:24,350 --> 00:10:27,320
and we get to remove that and actually

00:10:25,640 --> 00:10:31,120
do the color analysis and we found a

00:10:27,320 --> 00:10:34,430
clean image another challenge we faced

00:10:31,120 --> 00:10:35,540
was that something I already mentioned

00:10:34,430 --> 00:10:36,980
is that we have a broad assortment of

00:10:35,540 --> 00:10:39,770
products so I'd say we have five dozen

00:10:36,980 --> 00:10:41,300
sofas and we would want to compare each

00:10:39,770 --> 00:10:43,100
of them to every other sofa and that

00:10:41,300 --> 00:10:46,430
gives us five thousand times five

00:10:43,100 --> 00:10:47,590
thousand comparisons 25 million starts

00:10:46,430 --> 00:10:50,240
getting a bit computationally expensive

00:10:47,590 --> 00:10:52,040
and so we thought about a few ways of

00:10:50,240 --> 00:10:54,020
solving this one would be to actually

00:10:52,040 --> 00:10:55,280
run this expensive computation once for

00:10:54,020 --> 00:10:57,460
all the products and somehow cache the

00:10:55,280 --> 00:10:59,750
results would definitely be doable

00:10:57,460 --> 00:11:02,810
another one we considered was instead of

00:10:59,750 --> 00:11:04,640
extracting the colors for each image

00:11:02,810 --> 00:11:06,950
separately we've kind of do a global

00:11:04,640 --> 00:11:08,960
extraction and get a palette for all of

00:11:06,950 --> 00:11:10,010
our products that would make it easier

00:11:08,960 --> 00:11:11,630
to later

00:11:10,010 --> 00:11:14,150
say what is the similarity between two

00:11:11,630 --> 00:11:15,650
products but in the end we just ended up

00:11:14,150 --> 00:11:17,600
reusing a solution that we already had

00:11:15,650 --> 00:11:19,880
place for the attribute based

00:11:17,600 --> 00:11:22,700
recommender which is using locality

00:11:19,880 --> 00:11:24,500
sensitive hashing based on the product

00:11:22,700 --> 00:11:26,950
attributes and locality sensitive

00:11:24,500 --> 00:11:29,360
hashing is a probabilistic algorithm

00:11:26,950 --> 00:11:31,430
where when you have a large dimensional

00:11:29,360 --> 00:11:32,960
space and you're trying to figure out

00:11:31,430 --> 00:11:34,070
which things in there are similar to

00:11:32,960 --> 00:11:36,410
each other and you don't want to compare

00:11:34,070 --> 00:11:38,420
all of them what you do is you basically

00:11:36,410 --> 00:11:39,620
do a few different projections lower

00:11:38,420 --> 00:11:41,720
dimensional projections on the high

00:11:39,620 --> 00:11:43,160
dimensional space and each of your

00:11:41,720 --> 00:11:45,980
products ends up sorted to three or four

00:11:43,160 --> 00:11:47,120
so-called buckets and then later when

00:11:45,980 --> 00:11:48,470
you're trying to find the most similar

00:11:47,120 --> 00:11:50,660
products you don't have to look at all

00:11:48,470 --> 00:11:51,740
5000 sofas you just look at the few

00:11:50,660 --> 00:11:53,230
hundred that ended up in the same

00:11:51,740 --> 00:11:56,510
buckets as the product you're looking at

00:11:53,230 --> 00:11:57,830
and that gives you a fairly reasonable

00:11:56,510 --> 00:12:02,570
chance of getting the most similar

00:11:57,830 --> 00:12:04,160
products so the results we saw after

00:12:02,570 --> 00:12:07,490
implementing this and mixing in this

00:12:04,160 --> 00:12:10,760
into our ensemble of algorithms was a

00:12:07,490 --> 00:12:11,930
10% uplift in click-through rate a 12%

00:12:10,760 --> 00:12:14,000
uplift and click-through rate for

00:12:11,930 --> 00:12:14,840
products with low user behavior which is

00:12:14,000 --> 00:12:17,630
the ones that we were especially

00:12:14,840 --> 00:12:18,920
targeting the ones that we have to rely

00:12:17,630 --> 00:12:19,940
on the content-based recommendations

00:12:18,920 --> 00:12:21,560
because we don't have enough user

00:12:19,940 --> 00:12:23,930
behavior to say what are good

00:12:21,560 --> 00:12:28,760
recommendations and finally an overall

00:12:23,930 --> 00:12:31,250
four percent conversion rate uplift the

00:12:28,760 --> 00:12:33,590
key takeaways from this I would say is

00:12:31,250 --> 00:12:36,020
that firstly take the time to build

00:12:33,590 --> 00:12:37,930
these visualization tools to see what

00:12:36,020 --> 00:12:39,920
your intermediate results look like and

00:12:37,930 --> 00:12:42,260
what your algorithms are actually

00:12:39,920 --> 00:12:43,730
producing secondly plan to iterate

00:12:42,260 --> 00:12:45,920
because you won't get things perfect and

00:12:43,730 --> 00:12:47,840
think about what non-obvious data you

00:12:45,920 --> 00:12:50,600
have that you could use to add to your

00:12:47,840 --> 00:12:52,690
existing model because using the product

00:12:50,600 --> 00:12:55,430
images it wasn't one of our first ideas

00:12:52,690 --> 00:12:56,510
but when we visualize the results and we

00:12:55,430 --> 00:12:58,010
saw the gaps that we had in our

00:12:56,510 --> 00:13:00,380
algorithms that we somehow seemed to be

00:12:58,010 --> 00:13:01,580
missing this color information that's

00:13:00,380 --> 00:13:05,210
when you actually got the idea to use

00:13:01,580 --> 00:13:07,540
this data so that's it

00:13:05,210 --> 00:13:07,540
thank you

00:13:12,540 --> 00:13:16,330
if this sounds like an interesting kind

00:13:14,680 --> 00:13:17,740
of problem to work on then get in touch

00:13:16,330 --> 00:13:20,830
we're always hiring always looking for a

00:13:17,740 --> 00:13:24,220
competent engineers and I think we have

00:13:20,830 --> 00:13:25,600
a few minutes for some questions just

00:13:24,220 --> 00:13:28,290
raise your hand and I'll bring the

00:13:25,600 --> 00:13:28,290
microphone to you

00:13:37,670 --> 00:13:42,080
I thank you for an interesting talk I

00:13:40,550 --> 00:13:45,040
was wondering whether you have looked

00:13:42,080 --> 00:13:47,780
into creating I have a diversity of

00:13:45,040 --> 00:13:50,090
recommendations and what they would have

00:13:47,780 --> 00:13:53,780
ideas to explore the image vector space

00:13:50,090 --> 00:13:56,270
for that as well so we have it on our

00:13:53,780 --> 00:13:57,920
roadmap to be testing the diversity of

00:13:56,270 --> 00:14:00,140
recommendations making them not all look

00:13:57,920 --> 00:14:01,430
quite the same but so far we just didn't

00:14:00,140 --> 00:14:03,200
get into that yet because we had so many

00:14:01,430 --> 00:14:05,240
other interesting projects to work on so

00:14:03,200 --> 00:14:09,200
we plan to look into that but we haven't

00:14:05,240 --> 00:14:12,650
done that just yet yeah thank you for

00:14:09,200 --> 00:14:15,860
that amazing Turk I was wondering how

00:14:12,650 --> 00:14:18,760
you deal with new products that you

00:14:15,860 --> 00:14:22,580
could not sort into packets beforehand

00:14:18,760 --> 00:14:24,290
how do you deal with them okay sorry I

00:14:22,580 --> 00:14:26,030
think that wasn't clear the way we do

00:14:24,290 --> 00:14:29,090
the sorting into buckets was based on

00:14:26,030 --> 00:14:30,560
the product attributes so as soon as our

00:14:29,090 --> 00:14:31,940
new product goes live we already have

00:14:30,560 --> 00:14:35,060
the attributes in the database that say

00:14:31,940 --> 00:14:37,730
this here is a chair color brown style

00:14:35,060 --> 00:14:39,620
modern and so on and then based on those

00:14:37,730 --> 00:14:42,970
attributes we can see which other

00:14:39,620 --> 00:14:42,970
product is probably similar to

00:14:52,250 --> 00:14:57,970
do you have any idea how you can

00:14:54,770 --> 00:15:01,220
incorporate that to deal with

00:14:57,970 --> 00:15:03,980
complimentary items shown in

00:15:01,220 --> 00:15:07,370
recommendations so not always show the

00:15:03,980 --> 00:15:10,700
similar things but also things that the

00:15:07,370 --> 00:15:14,750
person might need in the future so

00:15:10,700 --> 00:15:16,400
something before this table that's a

00:15:14,750 --> 00:15:19,160
good idea so what we've done so far is

00:15:16,400 --> 00:15:20,390
we implemented this for the similar

00:15:19,160 --> 00:15:22,450
product so if you're looking at the

00:15:20,390 --> 00:15:24,710
table to implement this for other tables

00:15:22,450 --> 00:15:27,770
we're looking into implementing this for

00:15:24,710 --> 00:15:29,720
matching products as well well that's a

00:15:27,770 --> 00:15:34,910
little bit more involved and again it's

00:15:29,720 --> 00:15:36,680
on our roadmap and yeah so so far we

00:15:34,910 --> 00:15:38,030
have explored is all idea of matching

00:15:36,680 --> 00:15:38,810
colors and which things fit well

00:15:38,030 --> 00:15:40,910
together or not

00:15:38,810 --> 00:15:41,930
so far we just look at things that look

00:15:40,910 --> 00:15:43,430
at the same are probably a good

00:15:41,930 --> 00:15:48,320
recommendation for the similar product

00:15:43,430 --> 00:15:49,820
slider and I have a question not about

00:15:48,320 --> 00:15:52,550
the clean images but about the mood

00:15:49,820 --> 00:15:54,650
image images do you also try to

00:15:52,550 --> 00:15:57,500
calculate which mood images would be

00:15:54,650 --> 00:15:59,360
more enticing for the users to to

00:15:57,500 --> 00:16:01,760
actually buy a product because you know

00:15:59,360 --> 00:16:04,190
when you show an item in a context it

00:16:01,760 --> 00:16:07,190
shows you as well how it could look in

00:16:04,190 --> 00:16:08,870
their homes for example okay yeah so we

00:16:07,190 --> 00:16:10,010
don't do this on our team but what we're

00:16:08,870 --> 00:16:12,290
doing here is really doing the

00:16:10,010 --> 00:16:13,430
populating the recommendation slider but

00:16:12,290 --> 00:16:14,870
you do have a marketing team that's

00:16:13,430 --> 00:16:16,280
always testing in which order do they

00:16:14,870 --> 00:16:18,650
show things what do they use for the ads

00:16:16,280 --> 00:16:20,120
and so on so I'm not quite familiar with

00:16:18,650 --> 00:16:22,010
the details of how exactly they're doing

00:16:20,120 --> 00:16:25,330
it but they're definitely testing which

00:16:22,010 --> 00:16:25,330
images to show and so on

00:16:33,059 --> 00:16:36,229
no more questions

00:16:37,020 --> 00:16:43,590
okay well thank you but I presentation

00:16:39,760 --> 00:16:43,590

YouTube URL: https://www.youtube.com/watch?v=v5BOQvllveQ


