Title: Akademy 2021 - Qt Quick 3D in Qt 6.2
Publication date: 2021-06-30
Playlist: Akademy 2021
Description: 
	By Christian StrÃ¸mme
Qt Quick 3D is a modern and approachable 3D engine for Qt Quick.
This talk will start by giving a short introduction to Qt Quick 3D before taking a closer look at some of the features available in Qt 6.2 and how they can be used.
Examples of topics are:
1. Smooth integration with 2D Qt Quick UIs
2. Animation support
3. Instanced rendering
4. Particle effects.
Captions: 
	00:00:01,110 --> 00:00:08,580
[Music]

00:00:10,400 --> 00:00:16,160
oh

00:00:11,040 --> 00:00:19,279
thanks you um just let me get my

00:00:16,160 --> 00:00:22,160
stuff going here yeah so as already

00:00:19,279 --> 00:00:25,439
mentioned my name is christian stonna

00:00:22,160 --> 00:00:27,199
i work from the oslo office

00:00:25,439 --> 00:00:31,199
for the kid company where i've been for

00:00:27,199 --> 00:00:34,399
the last 12 years

00:00:31,199 --> 00:00:39,040
last four years i've been

00:00:34,399 --> 00:00:42,079
working on the 3d offerings of cute

00:00:39,040 --> 00:00:45,200
but yeah that's enough about me

00:00:42,079 --> 00:00:48,399
let's just dive in

00:00:45,200 --> 00:00:51,120
so these are the topics i want to

00:00:48,399 --> 00:00:52,320
go through today uh i'll start by

00:00:51,120 --> 00:00:55,520
looking at the

00:00:52,320 --> 00:00:59,039
3d offerings in cute and try to

00:00:55,520 --> 00:01:02,399
answer some questions around that

00:00:59,039 --> 00:01:03,039
before we i take a look at what quick 3d

00:01:02,399 --> 00:01:06,400
is

00:01:03,039 --> 00:01:08,560
and what it provides

00:01:06,400 --> 00:01:09,439
this is not going to be a deep dive into

00:01:08,560 --> 00:01:12,479
3d

00:01:09,439 --> 00:01:16,000
and i'll try to keep it very simple

00:01:12,479 --> 00:01:18,720
uh using a very simple example

00:01:16,000 --> 00:01:19,360
and building on that just showing off

00:01:18,720 --> 00:01:22,479
how to get

00:01:19,360 --> 00:01:26,560
easily started with cute great 3d and

00:01:22,479 --> 00:01:30,159
basically showing how easy it is to use

00:01:26,560 --> 00:01:33,759
um yeah i'll also

00:01:30,159 --> 00:01:36,320
take a look at mixing 2d and 3d content

00:01:33,759 --> 00:01:37,040
with kit quick 3d and good quick and

00:01:36,320 --> 00:01:40,400
that's one of

00:01:37,040 --> 00:01:43,200
quick 3d's strong points

00:01:40,400 --> 00:01:43,840
so i'll take a look at two ways of doing

00:01:43,200 --> 00:01:47,360
that

00:01:43,840 --> 00:01:50,399
i think that will be be interesting

00:01:47,360 --> 00:01:54,240
um after that i'll take a look at

00:01:50,399 --> 00:01:55,119
the new features coming up in cute quick

00:01:54,240 --> 00:01:59,200
3d

00:01:55,119 --> 00:02:02,399
462 and say something about

00:01:59,200 --> 00:02:05,200
what we think will come

00:02:02,399 --> 00:02:05,200
post-62

00:02:06,240 --> 00:02:13,040
yeah so these

00:02:09,360 --> 00:02:16,239
are the offerings of 3d offerings in

00:02:13,040 --> 00:02:17,760
cube today and we have cute 3d we have

00:02:16,239 --> 00:02:21,200
3d studio

00:02:17,760 --> 00:02:23,040
and we have cute quick three

00:02:21,200 --> 00:02:24,720
of course all of these provide 3d

00:02:23,040 --> 00:02:29,599
support in

00:02:24,720 --> 00:02:29,599
in some way but in a different way

00:02:30,239 --> 00:02:37,280
first off we have cute quick three no

00:02:33,280 --> 00:02:39,680
sorry q 3d uh which

00:02:37,280 --> 00:02:41,920
is a high-level abstraction with

00:02:39,680 --> 00:02:44,959
low-level apis

00:02:41,920 --> 00:02:48,319
what i mean by that is it has

00:02:44,959 --> 00:02:50,080
a considerable barrier to entry it has

00:02:48,319 --> 00:02:52,920
new concepts like the entity

00:02:50,080 --> 00:02:56,160
component system and a fully

00:02:52,920 --> 00:02:59,680
configurable frame graph

00:02:56,160 --> 00:03:00,879
it's extremely flexible with what it can

00:02:59,680 --> 00:03:03,040
do

00:03:00,879 --> 00:03:04,080
but i also think it's something that

00:03:03,040 --> 00:03:07,599
targets more advanced

00:03:04,080 --> 00:03:10,319
users that has

00:03:07,599 --> 00:03:12,319
requirements that are outside the two

00:03:10,319 --> 00:03:16,640
other offerings we have

00:03:12,319 --> 00:03:16,640
3d studio and and qt quick 3d

00:03:16,720 --> 00:03:21,120
there's also a fair amount of

00:03:19,120 --> 00:03:24,400
abstraction on top of cute quick

00:03:21,120 --> 00:03:27,440
on q3d which i've also mentioned here

00:03:24,400 --> 00:03:29,599
that's morally mostly for

00:03:27,440 --> 00:03:29,599
the

00:03:30,720 --> 00:03:34,080
a bit historical for how we ended up

00:03:33,360 --> 00:03:37,360
with

00:03:34,080 --> 00:03:41,040
quick 3d we actually tried to put q 3d

00:03:37,360 --> 00:03:45,120
under 3d studio but

00:03:41,040 --> 00:03:47,920
at the time we had uh run into

00:03:45,120 --> 00:03:48,959
severe problems scaling down to the the

00:03:47,920 --> 00:03:52,080
entry level

00:03:48,959 --> 00:03:52,799
embedded hardware we saw our users

00:03:52,080 --> 00:03:56,560
having

00:03:52,799 --> 00:04:00,560
using so

00:03:56,560 --> 00:04:04,720
that got us into a bit of problems

00:04:00,560 --> 00:04:08,239
and we had to backtrack a little bit and

00:04:04,720 --> 00:04:13,120
we then came up with cute quick 3d

00:04:08,239 --> 00:04:15,040
uh as a replacement for

00:04:13,120 --> 00:04:16,479
together with the 3d studio as a

00:04:15,040 --> 00:04:20,400
replacement no

00:04:16,479 --> 00:04:23,680
sorry see there's many 3d solutions here

00:04:20,400 --> 00:04:23,680
uh 3d studio

00:04:24,080 --> 00:04:27,199
kit quick 3d will together with design

00:04:26,320 --> 00:04:29,840
studio

00:04:27,199 --> 00:04:32,800
will be a replacement for 3d studio in

00:04:29,840 --> 00:04:32,800
the in the future

00:04:32,960 --> 00:04:38,240
3d studio is a very designer-centric

00:04:36,560 --> 00:04:41,600
solution

00:04:38,240 --> 00:04:45,120
it has a very

00:04:41,600 --> 00:04:49,120
tight engine to open gl

00:04:45,120 --> 00:04:52,639
uh it also has uh concepts that feel

00:04:49,120 --> 00:04:55,040
fairly foreign too cute

00:04:52,639 --> 00:04:56,240
or that you already had better solutions

00:04:55,040 --> 00:05:00,000
for like states

00:04:56,240 --> 00:05:02,560
and components it also had

00:05:00,000 --> 00:05:04,080
the collective languages to describes

00:05:02,560 --> 00:05:07,520
its own scene format

00:05:04,080 --> 00:05:10,160
materials uh effects and

00:05:07,520 --> 00:05:11,759
we felt that didn't really fit with the

00:05:10,160 --> 00:05:15,520
unification story we tried

00:05:11,759 --> 00:05:18,880
to do for 2d and 3d and

00:05:15,520 --> 00:05:22,400
in the same way cute 3d works

00:05:18,880 --> 00:05:25,759
it's very self-driven

00:05:22,400 --> 00:05:29,039
so we have extra straps needed to

00:05:25,759 --> 00:05:31,759
integrate and sync it with kit quake

00:05:29,039 --> 00:05:32,880
i know there's been improvements to p3d

00:05:31,759 --> 00:05:36,160
uh

00:05:32,880 --> 00:05:41,120
lately to improve on this so but this is

00:05:36,160 --> 00:05:41,120
more historical context

00:05:41,199 --> 00:05:44,960
yeah and we also wanted something even

00:05:43,759 --> 00:05:49,039
more high level

00:05:44,960 --> 00:05:52,080
and easy to use and something that just

00:05:49,039 --> 00:05:56,319
fitted into the cute quick story

00:05:52,080 --> 00:05:59,199
already and integrated well there

00:05:56,319 --> 00:06:00,080
so the result of all that is is cute

00:05:59,199 --> 00:06:03,440
quick

00:06:00,080 --> 00:06:05,360
3d um

00:06:03,440 --> 00:06:06,880
it has very high level concepts like

00:06:05,360 --> 00:06:09,919
camera light model

00:06:06,880 --> 00:06:13,120
and and those can easily be inserted in

00:06:09,919 --> 00:06:14,479
in existing applications to add support

00:06:13,120 --> 00:06:17,840
for 3d

00:06:14,479 --> 00:06:20,400
uh hit quick 3d is a very

00:06:17,840 --> 00:06:22,720
passive module in the sense that it only

00:06:20,400 --> 00:06:25,759
does what it's instructed to do

00:06:22,720 --> 00:06:28,880
which is normally

00:06:25,759 --> 00:06:31,600
it gets its drive from

00:06:28,880 --> 00:06:31,600
acute quick

00:06:32,240 --> 00:06:36,000
so it's more of an extension of cute

00:06:35,440 --> 00:06:39,840
quick

00:06:36,000 --> 00:06:39,840
than a separate thing

00:06:41,039 --> 00:06:48,800
yeah i'll then

00:06:44,240 --> 00:06:51,919
go into which one i should choose um

00:06:48,800 --> 00:06:55,120
well as i already said good quick

00:06:51,919 --> 00:06:59,039
3d together with design studio

00:06:55,120 --> 00:07:02,560
will replace the 3d studio from old

00:06:59,039 --> 00:07:05,840
eventually so that leaves

00:07:02,560 --> 00:07:09,120
only uh good quake 3d

00:07:05,840 --> 00:07:09,759
and good 3d and i think in most most

00:07:09,120 --> 00:07:11,759
cases

00:07:09,759 --> 00:07:13,599
the right choice would be to pick cute

00:07:11,759 --> 00:07:17,199
quick 3d

00:07:13,599 --> 00:07:21,520
it covers most most 3d cases

00:07:17,199 --> 00:07:24,080
and and it integrates really well with

00:07:21,520 --> 00:07:24,080
earthquake

00:07:26,960 --> 00:07:33,199
and i think the the 3d

00:07:30,000 --> 00:07:35,120
needs of more advanced users uh will

00:07:33,199 --> 00:07:36,560
be identified by those those that

00:07:35,120 --> 00:07:39,280
actually have that requirement

00:07:36,560 --> 00:07:40,160
and they'll see if q3d is the right

00:07:39,280 --> 00:07:45,840
choice for them

00:07:40,160 --> 00:07:45,840
uh compared to good quick 3d

00:07:49,120 --> 00:07:52,160
we still see the start slide so you need

00:07:51,520 --> 00:07:54,639
to start

00:07:52,160 --> 00:07:55,440
advance the slides and i don't know you

00:07:54,639 --> 00:07:59,840
need to

00:07:55,440 --> 00:07:59,840
press the arrows

00:08:00,960 --> 00:08:09,360
okay so then i'm feeling oh

00:08:05,039 --> 00:08:11,360
it's not okay there it's changing

00:08:09,360 --> 00:08:12,879
okay it wasn't changing sorry about that

00:08:11,360 --> 00:08:17,360
i didn't actually

00:08:12,879 --> 00:08:21,599
notice that um

00:08:17,360 --> 00:08:24,879
yeah so i think this is

00:08:21,599 --> 00:08:29,520
where i'm at yeah so the

00:08:24,879 --> 00:08:32,880
primary goals for us when we um

00:08:29,520 --> 00:08:36,560
wanted to create quick 3d was that

00:08:32,880 --> 00:08:39,039
it should be simple and easy to use um

00:08:36,560 --> 00:08:40,320
it should have high level concepts like

00:08:39,039 --> 00:08:42,880
camera light model

00:08:40,320 --> 00:08:44,080
and you should just be able to put that

00:08:42,880 --> 00:08:47,440
into your

00:08:44,080 --> 00:08:51,120
quick scene and get 3d content

00:08:47,440 --> 00:08:53,360
we also wanted that there was no

00:08:51,120 --> 00:08:56,080
prior knowledge needed from the user

00:08:53,360 --> 00:08:56,080
about 3d

00:08:56,720 --> 00:09:00,080
of course we had to back that with the

00:08:58,720 --> 00:09:02,080
excellent documentation

00:09:00,080 --> 00:09:04,399
which i think we have been very good at

00:09:02,080 --> 00:09:04,399
adding

00:09:04,560 --> 00:09:07,760
you also wanted it to boot lightweight

00:09:07,200 --> 00:09:11,120
uh

00:09:07,760 --> 00:09:13,200
similar to uh how cute quake

00:09:11,120 --> 00:09:14,240
initially was made it's it's very

00:09:13,200 --> 00:09:17,440
embedded

00:09:14,240 --> 00:09:19,360
eccentric um

00:09:17,440 --> 00:09:21,040
so we always keep an eye on that that we

00:09:19,360 --> 00:09:22,560
we have really good performance on

00:09:21,040 --> 00:09:24,880
embedded and i think that's something

00:09:22,560 --> 00:09:28,480
that benefits

00:09:24,880 --> 00:09:28,480
the desktop in the end as well

00:09:30,320 --> 00:09:37,519
another thing that was very at least

00:09:34,000 --> 00:09:38,800
i feel well very strongly about is that

00:09:37,519 --> 00:09:42,160
we needed

00:09:38,800 --> 00:09:45,600
a code and a renderer that was

00:09:42,160 --> 00:09:49,279
easy to understand and reason about and

00:09:45,600 --> 00:09:54,560
be able to easily see the flow

00:09:49,279 --> 00:09:54,560
the flow data and code and

00:09:58,480 --> 00:10:01,519
and yes and that's also something i

00:10:00,080 --> 00:10:04,880
think we've been

00:10:01,519 --> 00:10:07,920
been able to maintain even while

00:10:04,880 --> 00:10:09,839
been been adding new stuff

00:10:07,920 --> 00:10:11,440
another key thing was that we needed it

00:10:09,839 --> 00:10:14,240
to integrate with pre

00:10:11,440 --> 00:10:15,440
quake like mixing 2d and 3d content

00:10:14,240 --> 00:10:18,480
should be easy and

00:10:15,440 --> 00:10:20,720
inexpensive so we needed

00:10:18,480 --> 00:10:22,240
we didn't want to always go through uh

00:10:20,720 --> 00:10:25,279
off-screen rendering

00:10:22,240 --> 00:10:28,399
uh we didn't want the renderer to be

00:10:25,279 --> 00:10:30,399
completely detached so

00:10:28,399 --> 00:10:32,560
we needed the renderer to be able to

00:10:30,399 --> 00:10:34,480
talk to each other as well

00:10:32,560 --> 00:10:36,560
that that's what i mean by the the

00:10:34,480 --> 00:10:39,920
unified rendering

00:10:36,560 --> 00:10:41,839
uh one benefit of

00:10:39,920 --> 00:10:44,320
doing that and getting that is also that

00:10:41,839 --> 00:10:47,200
we can get really good looking text

00:10:44,320 --> 00:10:49,200
but not just text like any kid quick

00:10:47,200 --> 00:10:52,320
item that's rendered directly

00:10:49,200 --> 00:10:53,519
into the scene with 3d transforms will

00:10:52,320 --> 00:10:57,279
look

00:10:53,519 --> 00:10:57,600
fairly good the last important point for

00:10:57,279 --> 00:11:02,160
us

00:10:57,600 --> 00:11:05,200
where was the the tooling we needed

00:11:02,160 --> 00:11:08,800
excellent tooling uh we needed to

00:11:05,200 --> 00:11:14,959
have at least something as good as the

00:11:08,800 --> 00:11:16,959
the 3d studio for designers um

00:11:14,959 --> 00:11:18,560
it needed to be good for both designers

00:11:16,959 --> 00:11:22,160
and and developers

00:11:18,560 --> 00:11:23,440
not just one of them so that that's been

00:11:22,160 --> 00:11:26,240
in the back of our mind

00:11:23,440 --> 00:11:28,160
and that's something that that's

00:11:26,240 --> 00:11:30,560
important for us uh

00:11:28,160 --> 00:11:32,079
and it's something that's much more

00:11:30,560 --> 00:11:35,200
important when you're doing 3d

00:11:32,079 --> 00:11:38,720
there's much more involved with lighting

00:11:35,200 --> 00:11:41,760
and positioning and stuff like that so

00:11:38,720 --> 00:11:42,000
artists are usually used to working in

00:11:41,760 --> 00:11:43,080
very

00:11:42,000 --> 00:11:45,839
visual tools

00:11:43,080 --> 00:11:47,839
[Music]

00:11:45,839 --> 00:11:49,279
so if you look at the architectural

00:11:47,839 --> 00:11:52,079
overview of

00:11:49,279 --> 00:11:52,480
cute quick 3d you can see it sits on top

00:11:52,079 --> 00:11:56,160
of

00:11:52,480 --> 00:11:59,839
the rhi together with earthquake

00:11:56,160 --> 00:12:03,279
and it has its own scene graph

00:11:59,839 --> 00:12:06,000
with special items and

00:12:03,279 --> 00:12:07,360
we have a tight coupling between the two

00:12:06,000 --> 00:12:11,600
renderers

00:12:07,360 --> 00:12:15,839
the we don't do 2d rendering in

00:12:11,600 --> 00:12:18,160
the 3d engine or 3d rendering in the

00:12:15,839 --> 00:12:20,000
good quick engine we didn't want to to

00:12:18,160 --> 00:12:22,560
just destroy that

00:12:20,000 --> 00:12:23,279
by adding more complexity to either of

00:12:22,560 --> 00:12:26,480
them but

00:12:23,279 --> 00:12:28,480
instead we made that it's so that they

00:12:26,480 --> 00:12:31,279
have really good communication

00:12:28,480 --> 00:12:31,760
and can do in-line rendering jump from

00:12:31,279 --> 00:12:34,650
one

00:12:31,760 --> 00:12:37,120
to one to the other

00:12:34,650 --> 00:12:40,240
[Music]

00:12:37,120 --> 00:12:40,639
uh another point i think is worth taking

00:12:40,240 --> 00:12:44,000
up

00:12:40,639 --> 00:12:48,000
is acid and acid conditioning

00:12:44,000 --> 00:12:51,360
this is also something uh again that's

00:12:48,000 --> 00:12:54,560
more important or more visible

00:12:51,360 --> 00:12:56,320
when you're doing 3d often the content

00:12:54,560 --> 00:12:59,519
you create comes from

00:12:56,320 --> 00:13:03,600
content tools like blender maya

00:12:59,519 --> 00:13:06,720
substance painter those kinds of tools

00:13:03,600 --> 00:13:10,079
and they will export

00:13:06,720 --> 00:13:13,600
into some format like

00:13:10,079 --> 00:13:17,360
gltf or fbx

00:13:13,600 --> 00:13:20,959
or their own formats and and we need to

00:13:17,360 --> 00:13:23,360
condition those assets into

00:13:20,959 --> 00:13:24,880
something that's efficient for our

00:13:23,360 --> 00:13:28,160
real-time renderer

00:13:24,880 --> 00:13:30,639
so because when those are exported

00:13:28,160 --> 00:13:32,839
they are exported with fidelity in mind

00:13:30,639 --> 00:13:34,959
and not necessarily

00:13:32,839 --> 00:13:36,880
efficiency so that's where the

00:13:34,959 --> 00:13:40,000
conditioning comes in

00:13:36,880 --> 00:13:42,480
we have this tool called balsam

00:13:40,000 --> 00:13:45,279
interestingly enough which is our main

00:13:42,480 --> 00:13:45,279
conditioning tool

00:13:45,440 --> 00:13:53,120
that converts

00:13:49,680 --> 00:13:57,040
formats to qml components

00:13:53,120 --> 00:13:58,959
and it also then generates

00:13:57,040 --> 00:14:00,480
the textures and materials and

00:13:58,959 --> 00:14:03,199
everything that's needed to

00:14:00,480 --> 00:14:04,160
to then put that into your application

00:14:03,199 --> 00:14:06,880
it also has

00:14:04,160 --> 00:14:08,079
other things like you can do texture

00:14:06,880 --> 00:14:12,079
compression

00:14:08,079 --> 00:14:12,079
and yeah

00:14:12,160 --> 00:14:18,240
that's what i can think of at the moment

00:14:15,600 --> 00:14:19,360
in addition we have uh the shader gen

00:14:18,240 --> 00:14:22,639
tool

00:14:19,360 --> 00:14:26,399
that's a experimental tool

00:14:22,639 --> 00:14:31,839
again it hasn't changed sorry about that

00:14:26,399 --> 00:14:31,839
it removes so

00:14:32,560 --> 00:14:38,639
we have the shader gen tool

00:14:35,760 --> 00:14:40,480
which is a as i said an experimental

00:14:38,639 --> 00:14:43,519
tool

00:14:40,480 --> 00:14:47,199
it generates materials at build time

00:14:43,519 --> 00:14:51,519
by inspecting the the scene

00:14:47,199 --> 00:14:54,079
and then trying to figure out

00:14:51,519 --> 00:14:55,920
what materials that will be needed in

00:14:54,079 --> 00:14:58,880
the application

00:14:55,920 --> 00:15:00,320
so that we don't need to do that at

00:14:58,880 --> 00:15:03,360
runtime and then

00:15:00,320 --> 00:15:07,040
therefore saving a lot of time

00:15:03,360 --> 00:15:09,519
that's a fairly complex operation

00:15:07,040 --> 00:15:11,440
so that's why it's still experimental we

00:15:09,519 --> 00:15:12,800
haven't seen that much use for it yet

00:15:11,440 --> 00:15:15,600
but

00:15:12,800 --> 00:15:17,279
that's something we'll gonna invest more

00:15:15,600 --> 00:15:18,000
i also want to mention that it doesn't

00:15:17,279 --> 00:15:20,880
actually

00:15:18,000 --> 00:15:21,839
generate driver specific shader binaries

00:15:20,880 --> 00:15:24,959
but it

00:15:21,839 --> 00:15:26,720
generates spare v byte code that can be

00:15:24,959 --> 00:15:30,959
consumed by the cute rhi

00:15:26,720 --> 00:15:33,519
later so it generates materials

00:15:30,959 --> 00:15:33,519
in essence

00:15:34,160 --> 00:15:41,079
uh the next item here is the runtime

00:15:37,920 --> 00:15:44,079
loader which is a new item for

00:15:41,079 --> 00:15:44,079
qt62

00:15:45,519 --> 00:15:50,000
that is what it says it can load the

00:15:48,639 --> 00:15:53,120
same assets

00:15:50,000 --> 00:15:56,160
at runtime it

00:15:53,120 --> 00:15:58,720
at the moment supports gltf2

00:15:56,160 --> 00:16:00,480
and what it does is a bit opposite of

00:15:58,720 --> 00:16:03,680
the balsam tool

00:16:00,480 --> 00:16:06,480
uh the scene is not

00:16:03,680 --> 00:16:06,800
generated at build time but it does it

00:16:06,480 --> 00:16:08,480
at

00:16:06,800 --> 00:16:10,959
run time so it creates all the objects

00:16:08,480 --> 00:16:14,160
at runtime and you can

00:16:10,959 --> 00:16:17,279
reload with different type

00:16:14,160 --> 00:16:19,680
formats in our different models

00:16:17,279 --> 00:16:20,880
and you can use the runtime loader which

00:16:19,680 --> 00:16:24,880
is a special node

00:16:20,880 --> 00:16:28,160
to to move and interact with the model

00:16:24,880 --> 00:16:30,560
or even scenes it's

00:16:28,160 --> 00:16:30,560
fairly

00:16:31,759 --> 00:16:37,839
new so the api is not that extensive

00:16:35,040 --> 00:16:37,839
yet

00:16:38,880 --> 00:16:44,160
so let's look at a minimal scene and how

00:16:41,600 --> 00:16:47,360
that looks in cute quick 3d

00:16:44,160 --> 00:16:48,480
this should be fairly familiar at least

00:16:47,360 --> 00:16:51,759
the beginning here

00:16:48,480 --> 00:16:54,880
we have a window and we have a view

00:16:51,759 --> 00:16:57,120
which view 3d which is a view into our

00:16:54,880 --> 00:17:00,240
3d scene

00:16:57,120 --> 00:17:00,959
and we have a camera and a light and a

00:17:00,240 --> 00:17:05,039
model

00:17:00,959 --> 00:17:08,880
and and that's it i've set the

00:17:05,039 --> 00:17:12,559
source here to be a cube

00:17:08,880 --> 00:17:15,760
that's a built-in primitive and

00:17:12,559 --> 00:17:16,559
of course i've given it a material with

00:17:15,760 --> 00:17:20,079
the

00:17:16,559 --> 00:17:21,120
color green and yeah that's how easy it

00:17:20,079 --> 00:17:22,640
is to get started

00:17:21,120 --> 00:17:24,240
it doesn't take much to get get

00:17:22,640 --> 00:17:26,959
something on the screen

00:17:24,240 --> 00:17:28,880
uh and it doesn't take that much to get

00:17:26,959 --> 00:17:32,480
something more impressive

00:17:28,880 --> 00:17:36,320
uh like this i've stole

00:17:32,480 --> 00:17:39,760
this model from the gl2 gldf2

00:17:36,320 --> 00:17:41,919
sample library i'm not i'm not that

00:17:39,760 --> 00:17:43,600
worst in the

00:17:41,919 --> 00:17:45,280
3d tools that i can create something

00:17:43,600 --> 00:17:47,679
like that myself yet

00:17:45,280 --> 00:17:48,320
but again it's it this is the same

00:17:47,679 --> 00:17:51,280
example

00:17:48,320 --> 00:17:52,640
i've only changed the the model to be

00:17:51,280 --> 00:17:56,320
the runtime loader here

00:17:52,640 --> 00:17:58,720
on line 30 and i've given it source

00:17:56,320 --> 00:18:02,320
which is the gltf2

00:17:58,720 --> 00:18:02,880
binary format file and for some extra

00:18:02,320 --> 00:18:06,559
effect

00:18:02,880 --> 00:18:10,080
i've added a a light probe

00:18:06,559 --> 00:18:14,960
which is the which is a hdr texture

00:18:10,080 --> 00:18:17,120
which it will use to to um

00:18:14,960 --> 00:18:19,039
light the model giving a more realistic

00:18:17,120 --> 00:18:21,600
lighting condition here

00:18:19,039 --> 00:18:22,480
and just to show that same texture you

00:18:21,600 --> 00:18:24,799
can see direct

00:18:22,480 --> 00:18:26,400
maybe see the reflection of the the

00:18:24,799 --> 00:18:29,440
texture

00:18:26,400 --> 00:18:31,679
in the helmet in the shiny parts uh i

00:18:29,440 --> 00:18:34,480
also also set that

00:18:31,679 --> 00:18:35,440
the background mode to use uh the skybox

00:18:34,480 --> 00:18:36,960
mode

00:18:35,440 --> 00:18:38,480
which means it's gonna use that light

00:18:36,960 --> 00:18:41,919
probe to to build

00:18:38,480 --> 00:18:42,559
the skybox as well yeah so the message

00:18:41,919 --> 00:18:44,880
here is

00:18:42,559 --> 00:18:45,760
that you can get something something

00:18:44,880 --> 00:18:50,000
fairly

00:18:45,760 --> 00:18:50,000
nice like this fairly easily

00:18:50,640 --> 00:18:57,840
yes let's move over to

00:18:53,679 --> 00:18:57,840
mixing 2d and 3d

00:18:58,640 --> 00:19:03,120
that means we do we have two modes for

00:19:02,640 --> 00:19:06,160
this

00:19:03,120 --> 00:19:08,240
there's a textured path and a direct

00:19:06,160 --> 00:19:12,080
path or inline path

00:19:08,240 --> 00:19:14,160
for both 2d and 3d scenes can still be

00:19:12,080 --> 00:19:16,960
rendered into textures

00:19:14,160 --> 00:19:18,240
that's still a flexible way to do it if

00:19:16,960 --> 00:19:22,160
you need to apply

00:19:18,240 --> 00:19:25,600
uh say that scene on on a

00:19:22,160 --> 00:19:28,640
model that's not flat

00:19:25,600 --> 00:19:31,360
say a cylinder or something like that

00:19:28,640 --> 00:19:32,640
but both 2d and 3d items are defined in

00:19:31,360 --> 00:19:35,360
the same

00:19:32,640 --> 00:19:35,360
same scene

00:19:36,960 --> 00:19:44,559
so if we look at the example here

00:19:41,360 --> 00:19:48,720
we have a button on line

00:19:44,559 --> 00:19:52,400
27 which is just defined in line

00:19:48,720 --> 00:19:55,200
in our 3d scene and

00:19:52,400 --> 00:19:56,080
that's pretty much all it is to it did

00:19:55,200 --> 00:19:59,360
this

00:19:56,080 --> 00:20:00,400
item which is a q2p control item a

00:19:59,360 --> 00:20:03,440
button

00:20:00,400 --> 00:20:06,799
will then be rendered inline

00:20:03,440 --> 00:20:10,880
by the 2d engine

00:20:06,799 --> 00:20:14,080
so quit quick what will happen is that

00:20:10,880 --> 00:20:16,559
when we get to this

00:20:14,080 --> 00:20:17,520
item it will branch off to the cute

00:20:16,559 --> 00:20:21,120
quick

00:20:17,520 --> 00:20:22,080
3d engine no quick engine with the 3d

00:20:21,120 --> 00:20:25,120
transform

00:20:22,080 --> 00:20:27,039
and that will position and draw the the

00:20:25,120 --> 00:20:28,880
item as expected

00:20:27,039 --> 00:20:30,640
the nice thing of this is of course that

00:20:28,880 --> 00:20:35,840
there's

00:20:30,640 --> 00:20:35,840
no need to go through uh

00:20:36,320 --> 00:20:42,960
offline rendering and so we don't pay

00:20:39,760 --> 00:20:46,320
any extra cost for that which

00:20:42,960 --> 00:20:49,840
we have discarded costs a lot of

00:20:46,320 --> 00:20:49,840
on some of some devices

00:20:51,919 --> 00:20:55,200
the drawback of this is of course it's

00:20:54,400 --> 00:20:57,520
flat

00:20:55,200 --> 00:20:58,960
uh as i said the textured mode you can

00:20:57,520 --> 00:21:01,200
apply to a model

00:20:58,960 --> 00:21:02,240
and you cannot do that here unless it's

00:21:01,200 --> 00:21:05,039
flat you can push

00:21:02,240 --> 00:21:07,840
position it so it it is on a flat

00:21:05,039 --> 00:21:12,080
surface but it's still going to be

00:21:07,840 --> 00:21:16,400
a flat item i also highlighted

00:21:12,080 --> 00:21:18,720
on line 31 that the coordinate systems

00:21:16,400 --> 00:21:19,760
in in the 2d world and the 3d world are

00:21:18,720 --> 00:21:24,000
slightly different

00:21:19,760 --> 00:21:27,039
with the y position uh flipped

00:21:24,000 --> 00:21:28,640
uh the consequence of that is that if

00:21:27,039 --> 00:21:33,600
you want to position

00:21:28,640 --> 00:21:35,760
the quick item in the 3d scene

00:21:33,600 --> 00:21:38,400
you should be aware that you either need

00:21:35,760 --> 00:21:41,600
to do this or or maybe better

00:21:38,400 --> 00:21:44,320
wrap the item in a

00:21:41,600 --> 00:21:45,360
node and then you can position it more

00:21:44,320 --> 00:21:48,240
logically

00:21:45,360 --> 00:21:48,240
in the 3dc

00:21:51,039 --> 00:21:54,559
uh another thing to to be aware of is

00:21:53,919 --> 00:21:57,760
anchoring

00:21:54,559 --> 00:22:01,600
anchoring actually works but

00:21:57,760 --> 00:22:03,919
it when anchoring to a 3d item

00:22:01,600 --> 00:22:04,880
it will use the the center of that

00:22:03,919 --> 00:22:08,159
object as

00:22:04,880 --> 00:22:10,080
its reference point so you might need to

00:22:08,159 --> 00:22:13,200
put some

00:22:10,080 --> 00:22:15,919
offset to to

00:22:13,200 --> 00:22:15,919
get what you want

00:22:18,640 --> 00:22:25,520
yeah and then we have the texture path

00:22:22,320 --> 00:22:28,799
which is a bit more involved

00:22:25,520 --> 00:22:32,559
as you know need to to

00:22:28,799 --> 00:22:35,919
set a material on some model

00:22:32,559 --> 00:22:38,240
that you want to render that

00:22:35,919 --> 00:22:38,240
source

00:22:39,039 --> 00:22:45,919
scene two so you can see here on line

00:22:42,400 --> 00:22:47,120
33 we have a texture it has a source

00:22:45,919 --> 00:22:50,640
item property

00:22:47,120 --> 00:22:53,039
which you can give your cute quick

00:22:50,640 --> 00:22:53,039
item

00:22:53,679 --> 00:22:58,640
and that will then be rendered into a

00:22:55,520 --> 00:23:02,880
texture and become the texture and you

00:22:58,640 --> 00:23:05,840
then can apply that to a model uh

00:23:02,880 --> 00:23:06,240
this is very flexible but again there's

00:23:05,840 --> 00:23:11,039
some

00:23:06,240 --> 00:23:11,039
caveats here especially when it comes to

00:23:11,440 --> 00:23:17,440
zooming and getting close to

00:23:14,799 --> 00:23:18,320
items that are going through a texture

00:23:17,440 --> 00:23:20,400
they will

00:23:18,320 --> 00:23:22,080
not appear that crisp they will get

00:23:20,400 --> 00:23:24,960
blurry the same way

00:23:22,080 --> 00:23:25,520
as you would if you scale an image

00:23:24,960 --> 00:23:28,960
you'll get

00:23:25,520 --> 00:23:32,320
some of that if if the size of the

00:23:28,960 --> 00:23:34,559
the item is not correct

00:23:32,320 --> 00:23:36,400
and that's usually not that easy when

00:23:34,559 --> 00:23:40,559
you're constantly moving

00:23:36,400 --> 00:23:40,559
the camera or scaling items

00:23:46,640 --> 00:23:53,360
so here i put both

00:23:50,000 --> 00:23:56,000
of the the modes side by side

00:23:53,360 --> 00:23:57,919
uh of course i've exaggerated the the

00:23:56,000 --> 00:24:01,520
left side which is the texture path

00:23:57,919 --> 00:24:02,640
a little bit uh but it shows the kind of

00:24:01,520 --> 00:24:04,799
effect you will get

00:24:02,640 --> 00:24:06,000
when you go through a texture and this

00:24:04,799 --> 00:24:10,080
texture as you

00:24:06,000 --> 00:24:13,600
saw in the in the example

00:24:10,080 --> 00:24:16,720
is is on a rectangle here

00:24:13,600 --> 00:24:18,720
and of course when you get closer the

00:24:16,720 --> 00:24:22,400
texture will get stretched to

00:24:18,720 --> 00:24:24,080
to fit as as the the rectangle gets

00:24:22,400 --> 00:24:27,200
bigger

00:24:24,080 --> 00:24:30,960
the opposite happens or not opposite but

00:24:27,200 --> 00:24:34,000
as you can see for the the inline

00:24:30,960 --> 00:24:35,440
rendered or direct rendered item it

00:24:34,000 --> 00:24:37,760
stays really crisp

00:24:35,440 --> 00:24:39,440
the same with the texture but also the

00:24:37,760 --> 00:24:42,880
the lines from the button

00:24:39,440 --> 00:24:44,480
uh it looks really nice and crisp and it

00:24:42,880 --> 00:24:46,799
will do that at whatever

00:24:44,480 --> 00:24:48,080
distance you are to it it will it will

00:24:46,799 --> 00:24:51,360
render with

00:24:48,080 --> 00:24:54,880
with from crit quickly with the correct

00:24:51,360 --> 00:24:54,880
information in 3d transform

00:24:56,799 --> 00:25:01,840
so new features in 6.2

00:25:04,799 --> 00:25:09,880
are instancing

00:25:06,510 --> 00:25:09,880
[Music]

00:25:11,600 --> 00:25:18,400
which i've shown here that's a tech

00:25:15,120 --> 00:25:21,200
was tech preview in six one

00:25:18,400 --> 00:25:22,240
uh we lifted the tech preview for six

00:25:21,200 --> 00:25:26,480
two

00:25:22,240 --> 00:25:30,080
so it should be fully usable

00:25:26,480 --> 00:25:31,039
and i don't think we did any big changes

00:25:30,080 --> 00:25:34,320
to it

00:25:31,039 --> 00:25:37,440
um yeah i came up with this horrific

00:25:34,320 --> 00:25:38,720
example again this is the exact same

00:25:37,440 --> 00:25:41,840
example i started with

00:25:38,720 --> 00:25:43,679
i've the only difference is i put the

00:25:41,840 --> 00:25:47,279
push button as a texture on the

00:25:43,679 --> 00:25:50,159
the cube and put instancing

00:25:47,279 --> 00:25:51,520
using random instancing having random

00:25:50,159 --> 00:25:56,480
position and colors

00:25:51,520 --> 00:25:59,120
for it i think there's about a thousand

00:25:56,480 --> 00:25:59,120
cubes here

00:26:00,240 --> 00:26:04,320
yeah so instancing is of course about

00:26:02,640 --> 00:26:07,279
drawing the same object

00:26:04,320 --> 00:26:08,159
multiple times and then doing it in one

00:26:07,279 --> 00:26:11,200
draw call

00:26:08,159 --> 00:26:12,799
which makes it uh very efficient uh the

00:26:11,200 --> 00:26:15,840
bad thing of course is that

00:26:12,799 --> 00:26:17,840
there's only one of these cubes that

00:26:15,840 --> 00:26:20,159
are is the real one and that you can

00:26:17,840 --> 00:26:20,159
push

00:26:21,039 --> 00:26:27,840
next is particles we added

00:26:24,640 --> 00:26:27,840
3d particles that is

00:26:28,000 --> 00:26:36,840
that's the 3d version of the

00:26:32,159 --> 00:26:39,840
the particles you might be familiar from

00:26:36,840 --> 00:26:40,240
earthquake this also was tech preview in

00:26:39,840 --> 00:26:42,559
six

00:26:40,240 --> 00:26:45,039
one but that also has been lifted now

00:26:42,559 --> 00:26:48,240
for six two

00:26:45,039 --> 00:26:50,799
it uses instancing for the model

00:26:48,240 --> 00:26:51,440
mode which you see here there's two

00:26:50,799 --> 00:26:53,679
modes

00:26:51,440 --> 00:26:55,039
uh for you for doing particles there's

00:26:53,679 --> 00:26:58,480
the

00:26:55,039 --> 00:27:02,640
the model uh version and there's

00:26:58,480 --> 00:27:04,240
a sprite version both instancing and

00:27:02,640 --> 00:27:06,880
particles have

00:27:04,240 --> 00:27:08,080
excellent blog posts i recommend looking

00:27:06,880 --> 00:27:11,120
at those

00:27:08,080 --> 00:27:11,600
uh i'm not going to dig deeper into this

00:27:11,120 --> 00:27:16,720
today

00:27:11,600 --> 00:27:20,559
so yeah please have a look at those

00:27:16,720 --> 00:27:23,840
runt runtime acid loading i already

00:27:20,559 --> 00:27:26,720
uh mentioned um

00:27:23,840 --> 00:27:28,080
so in the picture here i've also enabled

00:27:26,720 --> 00:27:31,120
instancing for that

00:27:28,080 --> 00:27:32,480
that's also supported so i don't

00:27:31,120 --> 00:27:35,760
remember how many module

00:27:32,480 --> 00:27:39,120
models were used here but

00:27:35,760 --> 00:27:42,080
same thing we're doing instancing

00:27:39,120 --> 00:27:45,120
with that whole model with random

00:27:42,080 --> 00:27:45,120
position and caller

00:27:46,159 --> 00:27:49,679
the api as i also touched on this the

00:27:48,480 --> 00:27:53,360
api for this is

00:27:49,679 --> 00:27:56,640
is not that extensive yet

00:27:53,360 --> 00:27:59,679
uh it's completely new now for 6.2

00:27:56,640 --> 00:28:00,159
and so we're investigating ways to give

00:27:59,679 --> 00:28:03,520
better

00:28:00,159 --> 00:28:06,720
access to the sub components

00:28:03,520 --> 00:28:06,720
or at runtime

00:28:06,799 --> 00:28:11,600
but that's something that will come in

00:28:08,799 --> 00:28:11,600
later versions

00:28:13,120 --> 00:28:21,120
last feature added for six

00:28:16,720 --> 00:28:24,159
two is uh parallax occlusion mapping

00:28:21,120 --> 00:28:26,960
that's a more advanced

00:28:24,159 --> 00:28:28,720
technique for doing bump mapping or

00:28:26,960 --> 00:28:29,840
normal mapping for those that's familiar

00:28:28,720 --> 00:28:32,830
with that

00:28:29,840 --> 00:28:34,720
basically that's trying to

00:28:32,830 --> 00:28:37,919
[Music]

00:28:34,720 --> 00:28:40,960
fake depth the

00:28:37,919 --> 00:28:44,320
the appearance of depth in the

00:28:40,960 --> 00:28:46,799
in a model using textures and

00:28:44,320 --> 00:28:48,000
without adding adding extra vertices to

00:28:46,799 --> 00:28:50,480
the model

00:28:48,000 --> 00:28:54,240
and yeah that's it's pretty nice it

00:28:50,480 --> 00:28:54,240
gives a really nice realistic look

00:28:55,670 --> 00:29:00,880
[Music]

00:28:57,520 --> 00:29:04,640
so what's next uh

00:29:00,880 --> 00:29:05,600
tooling that's gonna be a big point for

00:29:04,640 --> 00:29:08,320
us

00:29:05,600 --> 00:29:09,600
we're gonna spend some time getting uh

00:29:08,320 --> 00:29:12,640
design studio

00:29:09,600 --> 00:29:16,480
up to speed with the new stuff

00:29:12,640 --> 00:29:19,440
in earthquake for six two and

00:29:16,480 --> 00:29:20,559
hopefully close the gap with 3d studio

00:29:19,440 --> 00:29:22,960
soon

00:29:20,559 --> 00:29:24,320
so so those using 3d studio will get a

00:29:22,960 --> 00:29:28,240
nice transition

00:29:24,320 --> 00:29:30,559
over to quake 3d and design studio

00:29:28,240 --> 00:29:31,520
we're also going to look at the asset

00:29:30,559 --> 00:29:35,039
pipeline

00:29:31,520 --> 00:29:37,200
and add

00:29:35,039 --> 00:29:38,640
better and more support for formats

00:29:37,200 --> 00:29:40,880
there

00:29:38,640 --> 00:29:42,000
i'm not completely sure what we planned

00:29:40,880 --> 00:29:44,080
there except that

00:29:42,000 --> 00:29:46,159
that's that's the topic we're going to

00:29:44,080 --> 00:29:49,279
do in parallel with the

00:29:46,159 --> 00:29:50,640
improving design studio and of course

00:29:49,279 --> 00:29:53,919
getting feedback

00:29:50,640 --> 00:29:54,480
uh we want more feedback about what

00:29:53,919 --> 00:29:56,960
what's

00:29:54,480 --> 00:29:59,919
working well and what's missing and what

00:29:56,960 --> 00:29:59,919
what people would see

00:30:00,240 --> 00:30:04,240
yeah i think that's it thanks for

00:30:03,279 --> 00:30:08,000
listening in

00:30:04,240 --> 00:30:10,720
and maybe if there's some questions we

00:30:08,000 --> 00:30:10,720
can take them though

00:30:13,520 --> 00:30:19,760
yeah thanks krypton

00:30:16,640 --> 00:30:20,399
yeah sorry about the slides that i don't

00:30:19,760 --> 00:30:23,440
know what

00:30:20,399 --> 00:30:25,919
yeah no problem um so um

00:30:23,440 --> 00:30:27,039
there's one question from hannah she's

00:30:25,919 --> 00:30:29,600
asking

00:30:27,039 --> 00:30:30,240
are there any plans for cute quick 3d

00:30:29,600 --> 00:30:33,919
and

00:30:30,240 --> 00:30:38,240
ar vr applications or steamvr

00:30:33,919 --> 00:30:40,640
or openxr yes to all

00:30:38,240 --> 00:30:42,000
i would say we're experimenting with

00:30:40,640 --> 00:30:45,760
this uh

00:30:42,000 --> 00:30:49,200
there's i don't think we have like a

00:30:45,760 --> 00:30:52,480
version set for that yet but there's

00:30:49,200 --> 00:30:54,720
versions and prototypes

00:30:52,480 --> 00:30:58,320
floating around testing this so

00:30:54,720 --> 00:30:58,320
definitely something that will be coming

00:30:58,880 --> 00:31:04,799
okay um and nuno asks

00:31:01,919 --> 00:31:06,559
um can you show it i don't know if it's

00:31:04,799 --> 00:31:09,440
already uh done so

00:31:06,559 --> 00:31:10,080
maybe uh he asked can you show exac an

00:31:09,440 --> 00:31:13,039
example of

00:31:10,080 --> 00:31:14,799
loading the gltf at runtime interacting

00:31:13,039 --> 00:31:18,720
with it

00:31:14,799 --> 00:31:21,440
um and do you import the camera lights

00:31:18,720 --> 00:31:22,720
and animations at runtime and how do we

00:31:21,440 --> 00:31:27,200
expose them in

00:31:22,720 --> 00:31:31,279
qr yeah so i cannot

00:31:27,200 --> 00:31:31,279
show that here we the the code is

00:31:31,360 --> 00:31:36,960
available already and there's an example

00:31:35,039 --> 00:31:39,039
showing showing it off that's the one i

00:31:36,960 --> 00:31:41,679
showed um

00:31:39,039 --> 00:31:42,080
yeah so it does load the whole scene so

00:31:41,679 --> 00:31:44,880
it

00:31:42,080 --> 00:31:45,440
does load cameras animations and they

00:31:44,880 --> 00:31:48,080
the

00:31:45,440 --> 00:31:48,480
whole lot from the scene the problem is

00:31:48,080 --> 00:31:51,519
that

00:31:48,480 --> 00:31:55,919
as i said the api is fairly

00:31:51,519 --> 00:31:58,720
limited yet i'm investigating ways to

00:31:55,919 --> 00:31:59,200
expose those things of course you can

00:31:58,720 --> 00:32:01,120
have

00:31:59,200 --> 00:32:02,640
multiple cameras and animation tracks

00:32:01,120 --> 00:32:05,200
and we need some way to

00:32:02,640 --> 00:32:06,640
to expose that but at the moment we

00:32:05,200 --> 00:32:10,880
don't have that and

00:32:06,640 --> 00:32:10,880
i would require using private apis

00:32:11,279 --> 00:32:14,559
but fully possible if you're willing to

00:32:14,000 --> 00:32:18,799
to

00:32:14,559 --> 00:32:21,919
to dive into those private ipos

00:32:18,799 --> 00:32:26,799
okay yeah that's it for questions

00:32:21,919 --> 00:32:26,799
um so thanks again christian yeah

00:32:26,840 --> 00:32:29,840
thanks

00:32:33,760 --> 00:32:35,840

YouTube URL: https://www.youtube.com/watch?v=rJ4L59-BLIU


