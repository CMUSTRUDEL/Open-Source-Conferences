Title: Kevin Ottens - Advances in Qt 3D - Akademy 2017
Publication date: 2017-11-20
Playlist: Akademy 2017
Description: 
	Having 3D scenes in your application is becoming a clear trend and is likely to become even more important in the future with the growth of Virtual Reality and Augmented Reality. So far Qt was allowing you to integrate with Open GL fairly easily, but managing the rendering code itself was still a very challenging task.

That's why Qt 5.7 introduced Qt 3D. Of course, it keeps evolving and in this talk we will highlight the novelties coming with 5.8, 5.9 and 5.10.

Since writing 3D code from scratch can be very difficult and since getting the architecture of your rendering engine right is critical to your application, Qt 3D will offload those risks from you so that you can focus on your actual simulation and 3D scene content.

In this talk, we will first do a quick recap of Qt 3D's API principles. In
particular it is structured around an Entity Component System (ECS) architecture which will be presented.

Then we'll have a tour of the newest features available in 5.8 and 5.9. Of particular interest to the community we will talk about painting to texture and we will show how to integrate a QtQuick 2 scene inside of a 3D scene. We will also present the new PBR materials, the new animation aspect and more...

If time permits, we will also give a sneak peak to a feature in the work meant to help managing shader code. This is currently private API but will be leveraged and exposed both in QtQuick and Qt 3D.

This talk will be interesting to any developer having to implement a 3D scene inside an application using Qt or thinking about bringing VR or AR use cases in the KDE community. No prior knowledge of Open GL or GPU programming is required for this talk.

https://conf.kde.org/en/akademy2017/public/events/370
Captions: 
	00:00:07,840 --> 00:00:16,030
and that's it thank you so for those of

00:00:13,780 --> 00:00:20,650
you that indeed could

00:00:16,030 --> 00:00:23,910
I've been talking about q3d in cute 5.7

00:00:20,650 --> 00:00:27,880
which was the first stable release and

00:00:23,910 --> 00:00:29,860
the aim of this talk is basically to

00:00:27,880 --> 00:00:33,550
give a quick recap of what happened

00:00:29,860 --> 00:00:36,910
since then turns out we've been very

00:00:33,550 --> 00:00:39,070
busy and I expected to get more time so

00:00:36,910 --> 00:00:45,910
that basically means no lunch break for

00:00:39,070 --> 00:00:49,059
you all right so that's basically what

00:00:45,910 --> 00:00:50,890
we are going to cover I will totally run

00:00:49,059 --> 00:00:54,489
through the first few bits because

00:00:50,890 --> 00:00:57,579
that's mainly trying to get you to

00:00:54,489 --> 00:01:00,760
remember the basics of cute 3d so that I

00:00:57,579 --> 00:01:03,219
don't lose everyone in the room and then

00:01:00,760 --> 00:01:07,780
after that we will cover up really

00:01:03,219 --> 00:01:10,180
what's what's new okay so for the

00:01:07,780 --> 00:01:13,060
novelties that's mainly work pretty much

00:01:10,180 --> 00:01:17,440
everywhere we did a few changes for

00:01:13,060 --> 00:01:21,850
input we have a big new blog which is

00:01:17,440 --> 00:01:23,590
about animations in cue 3d and also for

00:01:21,850 --> 00:01:26,890
the quality of the rendering we have new

00:01:23,590 --> 00:01:29,140
materials we have new ways of making

00:01:26,890 --> 00:01:32,080
texture integrating with you painter

00:01:29,140 --> 00:01:36,220
which a quick quick and so on so we'll

00:01:32,080 --> 00:01:38,890
see that all right so what is cute 3d

00:01:36,220 --> 00:01:41,409
just so that you remember that so it's

00:01:38,890 --> 00:01:45,040
really not completely about 3d

00:01:41,409 --> 00:01:49,689
internally it's really multi-purpose and

00:01:45,040 --> 00:01:52,590
not just for making games and to coop it

00:01:49,689 --> 00:01:56,229
it's really just a simulation enjoying a

00:01:52,590 --> 00:01:58,659
soft real-time one just happens that

00:01:56,229 --> 00:02:02,680
when you want to do 3d seriously you

00:01:58,659 --> 00:02:04,649
need such a simulation engine and so

00:02:02,680 --> 00:02:08,649
it's been designed to be scalable and

00:02:04,649 --> 00:02:11,230
extensible and flexible all right so the

00:02:08,649 --> 00:02:12,790
core is really not well 3d and that's

00:02:11,230 --> 00:02:16,900
because we want to be able to deal with

00:02:12,790 --> 00:02:19,450
AI logic audio and so on with that

00:02:16,900 --> 00:02:23,620
and it just happens that there's on top

00:02:19,450 --> 00:02:25,540
of it 3d renderer and you get all you

00:02:23,620 --> 00:02:28,120
need for system simulation so that could

00:02:25,540 --> 00:02:31,299
be mechanical systems physics and so on

00:02:28,120 --> 00:02:33,640
and yeah turns out that games you

00:02:31,299 --> 00:02:38,200
simulate physics right and mechanical

00:02:33,640 --> 00:02:39,760
systems yeah then I will keep on that

00:02:38,200 --> 00:02:42,790
because that's not very relevant for

00:02:39,760 --> 00:02:44,590
today if there's one thing I want you to

00:02:42,790 --> 00:02:46,299
remember from last year that will be

00:02:44,590 --> 00:02:51,700
what's coming now so that's why I'm

00:02:46,299 --> 00:02:53,889
going through it again the wall API of

00:02:51,700 --> 00:02:56,019
cue 3d is designed around the concept

00:02:53,889 --> 00:02:59,409
which is what we call the entity

00:02:56,019 --> 00:03:02,079
component system and so we briefly see

00:02:59,409 --> 00:03:04,359
and remember what that is so that's an

00:03:02,079 --> 00:03:07,959
architectural pattern it's fairly

00:03:04,359 --> 00:03:09,790
popular in game engines actually and con

00:03:07,959 --> 00:03:13,349
try to you some of the bad habits we

00:03:09,790 --> 00:03:17,109
might have it favors quite a lot

00:03:13,349 --> 00:03:20,459
composition compared to inheritance so

00:03:17,109 --> 00:03:23,049
one way to see it is that an entity is

00:03:20,459 --> 00:03:26,560
your general-purpose object okay it

00:03:23,049 --> 00:03:28,540
doesn't do anything by itself and then

00:03:26,560 --> 00:03:31,389
this entity will get its behavior by

00:03:28,540 --> 00:03:34,150
combining data and that data comes from

00:03:31,389 --> 00:03:37,540
typed components each component being a

00:03:34,150 --> 00:03:40,239
thin slice of behavior that you attach

00:03:37,540 --> 00:03:41,739
to your to your entity and that the

00:03:40,239 --> 00:03:44,139
combination of those components which

00:03:41,739 --> 00:03:48,790
basically describes what your objects in

00:03:44,139 --> 00:03:50,829
simulation does and the fact that we

00:03:48,790 --> 00:03:53,590
split between the actual behavior and

00:03:50,829 --> 00:03:55,780
the data so from the fronton api that

00:03:53,590 --> 00:03:59,349
you get you just manipulate data and no

00:03:55,780 --> 00:04:01,569
behavior that allows us to manage the

00:03:59,349 --> 00:04:03,909
API better over time right because

00:04:01,569 --> 00:04:07,479
that's much easier for us to just add

00:04:03,909 --> 00:04:09,699
some key their new property on an object

00:04:07,479 --> 00:04:15,879
or duplicate one right and change

00:04:09,699 --> 00:04:18,190
behavior in everything private so the

00:04:15,879 --> 00:04:20,949
way it looks for this kind of things

00:04:18,190 --> 00:04:23,650
what we are very that an entity can have

00:04:20,949 --> 00:04:27,400
several components one component also

00:04:23,650 --> 00:04:28,689
for avoiding blowing your memory we

00:04:27,400 --> 00:04:30,969
allow you to

00:04:28,689 --> 00:04:33,129
wouldn't attach to several entities for

00:04:30,969 --> 00:04:34,539
reuse they all look the same for

00:04:33,129 --> 00:04:38,110
instance you want to use the same

00:04:34,539 --> 00:04:40,029
material everywhere and then each

00:04:38,110 --> 00:04:41,799
component provides a bit of data which

00:04:40,029 --> 00:04:43,659
might be relevant for physics which

00:04:41,799 --> 00:04:47,499
might be relevant for putting it

00:04:43,659 --> 00:04:51,279
somewhere in space for its aspect and

00:04:47,499 --> 00:04:52,779
shape of its animation and then on the

00:04:51,279 --> 00:04:56,529
backhand side so that the part that you

00:04:52,779 --> 00:04:58,929
don't see when you when you're a user we

00:04:56,529 --> 00:05:01,329
have what we called aspects which are

00:04:58,929 --> 00:05:05,019
the system part of entity component

00:05:01,329 --> 00:05:07,269
system and the aspect they are as the

00:05:05,019 --> 00:05:08,729
data you find out what you do with the

00:05:07,269 --> 00:05:12,939
object and that's where the actual

00:05:08,729 --> 00:05:18,279
behavior comes from that's a part which

00:05:12,939 --> 00:05:21,729
is a very multi threaded alright so just

00:05:18,279 --> 00:05:24,039
to wrap this up last year I showed that

00:05:21,729 --> 00:05:25,899
example that just you get an idea about

00:05:24,039 --> 00:05:27,579
how that maps when you try to put

00:05:25,899 --> 00:05:30,610
something on screen so if we want to

00:05:27,579 --> 00:05:33,819
display your donut we basically end up

00:05:30,610 --> 00:05:36,129
with generally one entity because those

00:05:33,819 --> 00:05:38,259
entities are objects right when we put

00:05:36,129 --> 00:05:41,409
them Q objects we put them in a tree

00:05:38,259 --> 00:05:42,759
like any Q object that should a good

00:05:41,409 --> 00:05:45,789
practice you have an entity which

00:05:42,759 --> 00:05:48,249
happens to be the root entity okay which

00:05:45,789 --> 00:05:51,189
encompass all you everything you have in

00:05:48,249 --> 00:05:54,129
your simulation and then one entity per

00:05:51,189 --> 00:05:56,139
object in your simulation okay and turns

00:05:54,129 --> 00:05:58,779
out that in that particular one we have

00:05:56,139 --> 00:06:01,479
just one donut so we'll have one entity

00:05:58,779 --> 00:06:03,759
which is all donut if we have just the

00:06:01,479 --> 00:06:07,119
entity we see nothing on the screen and

00:06:03,759 --> 00:06:09,279
that's why we will give some behavior to

00:06:07,119 --> 00:06:11,709
that entity by attaching some component

00:06:09,279 --> 00:06:15,550
subclasses and in the case of all Donuts

00:06:11,709 --> 00:06:18,219
we only need two we need a geometry so

00:06:15,550 --> 00:06:19,929
mesh to say okay I have an object in my

00:06:18,219 --> 00:06:22,599
simulation it happens that it would be a

00:06:19,929 --> 00:06:25,929
torus right I have mesh representing my

00:06:22,599 --> 00:06:28,829
torus and if I have that I don't know

00:06:25,929 --> 00:06:32,949
how it looks yet okay I just know it's

00:06:28,829 --> 00:06:35,259
geometrical shape so we give it also a

00:06:32,949 --> 00:06:38,680
second component which is material which

00:06:35,259 --> 00:06:40,389
will control all the surface of

00:06:38,680 --> 00:06:43,690
of the Taurus would be will be rendered

00:06:40,389 --> 00:06:45,910
and so in that case that's one with some

00:06:43,690 --> 00:06:50,320
funk shading and we've several textures

00:06:45,910 --> 00:06:52,300
and so on so one entity two components

00:06:50,320 --> 00:06:58,810
okay and you get your donut on screen

00:06:52,300 --> 00:07:02,080
pretty much it alright just last word on

00:06:58,810 --> 00:07:07,740
that on the API we did the effort for to

00:07:02,080 --> 00:07:12,550
3d to everything accessible on C++ or

00:07:07,740 --> 00:07:16,810
from qml okay so the API is really one

00:07:12,550 --> 00:07:19,840
on one between QML and C++

00:07:16,810 --> 00:07:22,620
I will tend to show in this talk mostly

00:07:19,840 --> 00:07:25,930
qml code just because it's more concise

00:07:22,620 --> 00:07:27,550
but I mean as long as you know that it

00:07:25,930 --> 00:07:30,220
Maps one on one and you know how to

00:07:27,550 --> 00:07:32,470
convert from class named you entity

00:07:30,220 --> 00:07:35,610
named to element names on the command

00:07:32,470 --> 00:07:39,930
side on vice-versa that's very trivial

00:07:35,610 --> 00:07:42,310
so that's perfect mineralogy c++ class

00:07:39,930 --> 00:07:44,590
classes are named just in same weight

00:07:42,310 --> 00:07:47,229
and for cute classes with the cue prefix

00:07:44,590 --> 00:07:49,599
and to get you the element name on the

00:07:47,229 --> 00:07:53,740
eq msi where you just drop the queue in

00:07:49,599 --> 00:07:56,050
front right that's so you have cue

00:07:53,740 --> 00:07:56,760
entity which becomes just entity and so

00:07:56,050 --> 00:08:03,449
on

00:07:56,760 --> 00:08:03,449
alright so what's new for input handling

00:08:03,510 --> 00:08:09,130
not many big changes everything we add

00:08:07,180 --> 00:08:12,400
before i still there we just figured

00:08:09,130 --> 00:08:16,419
that we missed something in the api so

00:08:12,400 --> 00:08:19,320
we added that if you remember I

00:08:16,419 --> 00:08:25,060
mentioned that we had a way to specify

00:08:19,320 --> 00:08:27,729
axis so I can create an axis on we've

00:08:25,060 --> 00:08:31,210
cute 3d you say okay I will have an axis

00:08:27,729 --> 00:08:35,950
let's say controlling the rotation of an

00:08:31,210 --> 00:08:37,899
object and what we did is that if I have

00:08:35,950 --> 00:08:39,909
a joystick that's actually easy right I

00:08:37,899 --> 00:08:42,070
have a physical axis and then I can just

00:08:39,909 --> 00:08:43,930
move it sometimes I don't have that and

00:08:42,070 --> 00:08:46,149
I want to control these virtual axis

00:08:43,930 --> 00:08:48,250
from the keyboard and I want that when I

00:08:46,149 --> 00:08:50,820
press on the button these virtual axis

00:08:48,250 --> 00:08:52,920
slowly goes left for instance

00:08:50,820 --> 00:08:56,010
and when I press on other kids rody goes

00:08:52,920 --> 00:08:58,170
right to simulate as if I would have a

00:08:56,010 --> 00:09:03,270
physical joystick and move it slowly in

00:08:58,170 --> 00:09:05,310
one direction or another okay and that

00:09:03,270 --> 00:09:09,060
was pretty much it right so we would

00:09:05,310 --> 00:09:11,940
have just a value of where my axis is

00:09:09,060 --> 00:09:15,390
but then you actually do the rotation of

00:09:11,940 --> 00:09:18,120
my object I just have a I just have the

00:09:15,390 --> 00:09:20,460
plane value of where my axis is so if I

00:09:18,120 --> 00:09:23,520
want you have my object rotate over time

00:09:20,460 --> 00:09:26,940
I would have to have a timer right at

00:09:23,520 --> 00:09:29,490
the right period and then each time read

00:09:26,940 --> 00:09:32,160
the position of my axis and then

00:09:29,490 --> 00:09:35,190
increment the rotation of my object so

00:09:32,160 --> 00:09:37,350
that feel that felt wrong right because

00:09:35,190 --> 00:09:39,060
you would suddenly write very imperative

00:09:37,350 --> 00:09:40,470
code after you have a timer make sure

00:09:39,060 --> 00:09:42,990
that the timer is at the right frequency

00:09:40,470 --> 00:09:47,160
and so on so clearly some piece was

00:09:42,990 --> 00:09:49,950
missing and that's what we that's what

00:09:47,160 --> 00:09:52,380
we fixed okay so we still have the

00:09:49,950 --> 00:09:54,900
previous stuff the keyboard device mouse

00:09:52,380 --> 00:09:59,250
device a cue ball and object picker and

00:09:54,900 --> 00:10:01,410
so on but then we had this problem of

00:09:59,250 --> 00:10:03,780
out back control of value in my

00:10:01,410 --> 00:10:06,570
simulation over time based on what's

00:10:03,780 --> 00:10:11,490
happening with my inputs and particular

00:10:06,570 --> 00:10:14,250
of my axis so obviously we use an axis

00:10:11,490 --> 00:10:16,800
for that and we only got the axis

00:10:14,250 --> 00:10:19,620
position which is fairly limiting and

00:10:16,800 --> 00:10:22,110
that forces us you have this imperative

00:10:19,620 --> 00:10:23,910
code everywhere and this imperative code

00:10:22,110 --> 00:10:26,790
is executed on the main thread instead

00:10:23,910 --> 00:10:30,150
of being in the simulator so that's kind

00:10:26,790 --> 00:10:32,670
of annoying and so we need to simple

00:10:30,150 --> 00:10:34,350
over time and we might even have to

00:10:32,670 --> 00:10:36,180
integrate because if our axis is

00:10:34,350 --> 00:10:37,440
supposed to be about acceleration and

00:10:36,180 --> 00:10:41,670
not velocity then you have to integrate

00:10:37,440 --> 00:10:45,630
that so just say take so in five eight

00:10:41,670 --> 00:10:49,020
we introduced a new class which is axis

00:10:45,630 --> 00:10:51,030
accumulator and axis accumulator

00:10:49,020 --> 00:10:54,000
basically does all that work for you

00:10:51,030 --> 00:10:56,160
it's executed on the simulator and right

00:10:54,000 --> 00:10:58,440
so it's at the right frequency based on

00:10:56,160 --> 00:11:01,170
the simulation and so on so it will

00:10:58,440 --> 00:11:03,690
manage this value over time for you

00:11:01,170 --> 00:11:07,680
it takes an axis as input and then we do

00:11:03,690 --> 00:11:10,140
all the work and you can you can

00:11:07,680 --> 00:11:12,269
actually declare that axis is supposed

00:11:10,140 --> 00:11:14,640
to be about velocity or acceleration and

00:11:12,269 --> 00:11:17,700
the integration will be done for you by

00:11:14,640 --> 00:11:23,399
the accumulator that's all done in the

00:11:17,700 --> 00:11:26,610
secondary threads so code was it looks

00:11:23,399 --> 00:11:29,700
like this so you would still have your

00:11:26,610 --> 00:11:33,470
logical device you would still have your

00:11:29,700 --> 00:11:36,870
axis inside of your logical device and

00:11:33,470 --> 00:11:39,839
that's the guy that previously were are

00:11:36,870 --> 00:11:41,820
asking for information from a timer so

00:11:39,839 --> 00:11:44,820
to avoid that then later on you have

00:11:41,820 --> 00:11:47,640
your axis accumulator while you specify

00:11:44,820 --> 00:11:50,700
the input axis which is in Mouse y-axis

00:11:47,640 --> 00:11:53,459
in that case and then you just say this

00:11:50,700 --> 00:11:57,240
one controls velocity right so when I'm

00:11:53,459 --> 00:11:59,940
completely on one end of my of my axis I

00:11:57,240 --> 00:12:02,790
have then the maximum velocity for the

00:11:59,940 --> 00:12:05,430
rotation for instance of my object and I

00:12:02,790 --> 00:12:09,000
can scape that because my axis goes from

00:12:05,430 --> 00:12:12,660
minus 1 to 1 right just at this position

00:12:09,000 --> 00:12:15,990
so I can say yeah it's minus 1 to 1 but

00:12:12,660 --> 00:12:18,660
really the maximum speed I want that's

00:12:15,990 --> 00:12:22,199
50 rpm for instance then I can say

00:12:18,660 --> 00:12:26,310
convert that - won't want you if I'm at

00:12:22,199 --> 00:12:28,920
1 I want 50 rpm and that's pretty much

00:12:26,310 --> 00:12:31,560
what you get and then the access

00:12:28,920 --> 00:12:34,410
accumulator as a value property and you

00:12:31,560 --> 00:12:37,920
just have to bind on that ok I want you

00:12:34,410 --> 00:12:40,250
bone on it you're done ok so let me show

00:12:37,920 --> 00:12:40,250
you briefly

00:12:43,490 --> 00:13:08,670
okay so the idea there is I try to run

00:13:06,630 --> 00:13:12,030
the old one but for some reason doesn't

00:13:08,670 --> 00:13:14,070
want you the idea there is that I have

00:13:12,030 --> 00:13:15,990
page up and page down which controls the

00:13:14,070 --> 00:13:19,140
rotation of the large box that we have

00:13:15,990 --> 00:13:21,570
that we have in the center and so

00:13:19,140 --> 00:13:23,820
previously what would happen which I

00:13:21,570 --> 00:13:26,580
wanted to show won't be able to for some

00:13:23,820 --> 00:13:29,160
reason that when you go page up you

00:13:26,580 --> 00:13:32,100
would see the you would see it spinning

00:13:29,160 --> 00:13:34,290
right because we would get signals

00:13:32,100 --> 00:13:36,030
telling us it's slowly going somewhere

00:13:34,290 --> 00:13:37,770
and we would add that to the rotation

00:13:36,030 --> 00:13:41,010
and then at one point the axis was

00:13:37,770 --> 00:13:43,140
stopping emitting signals right and so

00:13:41,010 --> 00:13:45,780
we wouldn't see the cube spinning

00:13:43,140 --> 00:13:48,570
anymore but in that case I mean with the

00:13:45,780 --> 00:13:50,190
accumulator then we don't have this kind

00:13:48,570 --> 00:13:53,370
of effect and we have the speed and if I

00:13:50,190 --> 00:13:56,340
live then it's slowly get back to stop

00:13:53,370 --> 00:13:59,460
again okay so that's all computed for

00:13:56,340 --> 00:14:07,800
you and nothing more to do than the code

00:13:59,460 --> 00:14:14,310
I just showed all right so the big part

00:14:07,800 --> 00:14:16,500
now that see animations so a before five

00:14:14,310 --> 00:14:18,510
nine if you want animations while you

00:14:16,500 --> 00:14:21,240
could reuse the cute quick animations

00:14:18,510 --> 00:14:26,280
right because that's based on property

00:14:21,240 --> 00:14:29,910
bindings and so on so that's what we did

00:14:26,280 --> 00:14:32,520
right previously but main problem is

00:14:29,910 --> 00:14:34,440
that they are on the main thread okay

00:14:32,520 --> 00:14:37,050
so they're on the main thread which

00:14:34,440 --> 00:14:39,810
means that you can't really do something

00:14:37,050 --> 00:14:42,300
else right happy that suck up some CPU

00:14:39,810 --> 00:14:44,310
time there and the big problem that

00:14:42,300 --> 00:14:47,370
they're then not synchronized with the

00:14:44,310 --> 00:14:48,720
frame rate of the engine so very often

00:14:47,370 --> 00:14:51,330
you would see with this kind of

00:14:48,720 --> 00:14:54,480
animations like you know some frame

00:14:51,330 --> 00:14:55,470
skipping because because there were that

00:14:54,480 --> 00:15:02,070
was really getting

00:14:55,470 --> 00:15:03,810
out of sync and so what we did is you

00:15:02,070 --> 00:15:06,600
have a new aspect which is the animation

00:15:03,810 --> 00:15:07,770
expect that you can register on your

00:15:06,600 --> 00:15:11,160
engine and then you can have extra

00:15:07,770 --> 00:15:13,260
animation that will run inside of inside

00:15:11,160 --> 00:15:15,720
of the engine so there's no such

00:15:13,260 --> 00:15:19,470
synchronization problem anymore

00:15:15,720 --> 00:15:20,940
and and also that reduces the

00:15:19,470 --> 00:15:23,280
communication between the main thread

00:15:20,940 --> 00:15:27,240
and secondary thread for the properties

00:15:23,280 --> 00:15:30,030
changing you to the animations so there

00:15:27,240 --> 00:15:31,950
will be API and that mainly that's

00:15:30,030 --> 00:15:34,940
mainly class isn't everything from the

00:15:31,950 --> 00:15:38,250
abstract animation clip which contains

00:15:34,940 --> 00:15:43,140
the data about a particular animation

00:15:38,250 --> 00:15:46,380
and then we classes in everything from

00:15:43,140 --> 00:15:48,030
abstract clip animator okay which is not

00:15:46,380 --> 00:15:50,600
the data of the animation in this case

00:15:48,030 --> 00:15:53,460
but the one which we is responsible of

00:15:50,600 --> 00:15:56,400
information on how we want to play a

00:15:53,460 --> 00:15:57,600
particular clip okay so there is a

00:15:56,400 --> 00:16:02,640
separation there and that's the actual

00:15:57,600 --> 00:16:04,380
component that you put on entities so

00:16:02,640 --> 00:16:05,820
inheriting from that we from the

00:16:04,380 --> 00:16:09,000
abstract animation clip we have

00:16:05,820 --> 00:16:14,550
animation clip simply and that one

00:16:09,000 --> 00:16:17,880
represents a key frame based clip which

00:16:14,550 --> 00:16:20,970
is generally a good thing for artists

00:16:17,880 --> 00:16:22,560
but not so much for developers because

00:16:20,970 --> 00:16:27,410
that's kind of involving to actually

00:16:22,560 --> 00:16:31,650
write the code for describing that and

00:16:27,410 --> 00:16:36,240
so animation clip odds animation clip

00:16:31,650 --> 00:16:38,370
data movie clip data property and those

00:16:36,240 --> 00:16:40,770
animation clip data can only be created

00:16:38,370 --> 00:16:43,740
from C++ for now because we didn't quite

00:16:40,770 --> 00:16:47,880
figure out nice API from the equipment

00:16:43,740 --> 00:16:50,390
side and the clip data as a set of

00:16:47,880 --> 00:16:54,360
channels which describes the properties

00:16:50,390 --> 00:16:57,540
which controlled controlled by the clip

00:16:54,360 --> 00:17:00,510
and each channel has one or more channel

00:16:57,540 --> 00:17:02,820
component for complex type so typically

00:17:00,510 --> 00:17:04,950
if I want to control position right I

00:17:02,820 --> 00:17:07,590
would have a position channel which are

00:17:04,950 --> 00:17:09,850
three components X Y Z okay that's

00:17:07,590 --> 00:17:12,280
typically how it's done

00:17:09,850 --> 00:17:15,100
and then each component will have a list

00:17:12,280 --> 00:17:16,750
of keyframe okay which will describe the

00:17:15,100 --> 00:17:19,600
value of a particular component at a

00:17:16,750 --> 00:17:21,370
given point in time and the easing curve

00:17:19,600 --> 00:17:22,829
which has to be used to get to that

00:17:21,370 --> 00:17:25,329
point okay

00:17:22,829 --> 00:17:29,169
not getting too much in the details of

00:17:25,329 --> 00:17:32,320
that in practice we don't expect people

00:17:29,169 --> 00:17:35,110
to use much a C++ API for that because

00:17:32,320 --> 00:17:37,360
it's just already burned right you have

00:17:35,110 --> 00:17:40,090
to figure out all the values right

00:17:37,360 --> 00:17:41,740
that's Jenai R to do by hand or the

00:17:40,090 --> 00:17:43,299
values of the values keyframes of the

00:17:41,740 --> 00:17:46,030
values components that's not necessarily

00:17:43,299 --> 00:17:48,750
something you want to do by hand so we

00:17:46,030 --> 00:17:51,190
also have animation clip loader

00:17:48,750 --> 00:17:54,100
animation clip loader loads the same

00:17:51,190 --> 00:17:57,880
pack of data but coming from a JSON JSON

00:17:54,100 --> 00:17:59,500
file and that JSON file that's something

00:17:57,880 --> 00:18:02,530
which is more accessible to artists if

00:17:59,500 --> 00:18:05,350
you have an export to it and so we also

00:18:02,530 --> 00:18:07,980
provide a plugin for blender which can

00:18:05,350 --> 00:18:10,150
assist you basically control the object

00:18:07,980 --> 00:18:14,230
using the blender tools so they can

00:18:10,150 --> 00:18:18,400
nicely draw their place a keyframe and

00:18:14,230 --> 00:18:21,040
draw their easing curve export that to

00:18:18,400 --> 00:18:26,290
JSON right and then the developer can

00:18:21,040 --> 00:18:28,360
pick that up and get it in the scene all

00:18:26,290 --> 00:18:30,160
right and so the use for that one that

00:18:28,360 --> 00:18:33,790
simply you get an animation clip loader

00:18:30,160 --> 00:18:36,340
and then you give it a sauce pointed to

00:18:33,790 --> 00:18:38,770
the JSON and then you will be able to

00:18:36,340 --> 00:18:41,500
play it so that's just a pure data so to

00:18:38,770 --> 00:18:45,070
play my clip I still need you have an

00:18:41,500 --> 00:18:47,580
animator so we'll have the simple clip

00:18:45,070 --> 00:18:51,190
animator will see a few more in a minute

00:18:47,580 --> 00:18:53,440
which will point to a clip that case

00:18:51,190 --> 00:18:55,480
clip coming from animation clip loader

00:18:53,440 --> 00:18:57,429
and then I mentioned that we had

00:18:55,480 --> 00:19:01,090
channels and channel components and I

00:18:57,429 --> 00:19:03,460
still need to declare which channel

00:19:01,090 --> 00:19:06,340
controls which object in my simulation

00:19:03,460 --> 00:19:08,140
okay and so for that there is a channel

00:19:06,340 --> 00:19:11,350
mapper in the animator which are just to

00:19:08,140 --> 00:19:13,720
say to give a channel mapping so for

00:19:11,350 --> 00:19:16,360
instance I can say the channel location

00:19:13,720 --> 00:19:17,299
coming from the animation will target

00:19:16,360 --> 00:19:20,090
the

00:19:17,299 --> 00:19:21,889
transform object and the property

00:19:20,090 --> 00:19:24,559
translation inside of that transform

00:19:21,889 --> 00:19:28,429
object okay so now I'm controlling the

00:19:24,559 --> 00:19:30,169
translation of my object based on that

00:19:28,429 --> 00:19:31,879
particular channel same thing for the

00:19:30,169 --> 00:19:35,539
rotation and then same thing for

00:19:31,879 --> 00:19:53,299
instance for the Korra and I will run

00:19:35,539 --> 00:19:56,090
that one alright so I just have a cube

00:19:53,299 --> 00:19:57,859
okay and that cube is basically the code

00:19:56,090 --> 00:20:00,350
we add on the slide is referring to that

00:19:57,859 --> 00:20:02,629
particular cube and when I click on it

00:20:00,350 --> 00:20:05,330
okay I just get my animation and I see

00:20:02,629 --> 00:20:07,519
different properties being applied on

00:20:05,330 --> 00:20:09,590
the cube why the animation is going with

00:20:07,519 --> 00:20:11,659
fine control of the easing curves and so

00:20:09,590 --> 00:20:15,100
on okay so if the animation is kind of

00:20:11,659 --> 00:20:15,100
me I did it myself

00:20:19,629 --> 00:20:24,350
all right but that's fairly simple

00:20:21,799 --> 00:20:26,659
animation there very often you would

00:20:24,350 --> 00:20:28,669
need to have more than one and to be

00:20:26,659 --> 00:20:30,440
able to move from one animation to

00:20:28,669 --> 00:20:33,739
another one potentially having several

00:20:30,440 --> 00:20:36,559
playing at the same time and you want to

00:20:33,739 --> 00:20:40,580
create a completely new animation based

00:20:36,559 --> 00:20:45,679
on moves on simpler animations so you

00:20:40,580 --> 00:20:47,899
need to combine them and again we want

00:20:45,679 --> 00:20:50,179
to do that on the engine side right we

00:20:47,899 --> 00:20:52,009
don't want you to do all the job of

00:20:50,179 --> 00:20:54,139
creating new animations from the JSON

00:20:52,009 --> 00:20:56,269
file on the front end for instance and

00:20:54,139 --> 00:20:59,600
so for that we also provide blending

00:20:56,269 --> 00:21:01,340
operators and that will make it possible

00:20:59,600 --> 00:21:04,369
to have new variations of a particular

00:21:01,340 --> 00:21:06,799
animation based on been based on other

00:21:04,369 --> 00:21:09,879
ones typical example you might have seen

00:21:06,799 --> 00:21:12,200
in games that I have a character with

00:21:09,879 --> 00:21:16,340
working right and at one point he starts

00:21:12,200 --> 00:21:18,019
to run people doing the animation you

00:21:16,340 --> 00:21:20,330
prepare the animation for working you

00:21:18,019 --> 00:21:23,239
propose animation for running and then

00:21:20,330 --> 00:21:26,090
on the program side you just say okay

00:21:23,239 --> 00:21:26,460
I'm 50% in between right and then you

00:21:26,090 --> 00:21:28,950
get

00:21:26,460 --> 00:21:32,190
thing else okay so you let the system

00:21:28,950 --> 00:21:34,440
derive that from how much are you are

00:21:32,190 --> 00:21:37,680
you there so if I have a character who

00:21:34,440 --> 00:21:39,930
is working and then gets you to run

00:21:37,680 --> 00:21:41,850
other developer I will have just a

00:21:39,930 --> 00:21:43,560
factor which goes from zero and I slowly

00:21:41,850 --> 00:21:45,090
get it to one and then he is fully run

00:21:43,560 --> 00:21:53,100
my characterize for your running that's

00:21:45,090 --> 00:21:55,230
gist of the idea and then you can go

00:21:53,100 --> 00:21:57,660
further like having an admission for a

00:21:55,230 --> 00:22:00,650
jump and then I jump when I'm standing

00:21:57,660 --> 00:22:03,690
or jump one I'm running I'm jump why I'm

00:22:00,650 --> 00:22:06,750
working or in-between right so you need

00:22:03,690 --> 00:22:08,400
to combine all this kind of stuff and so

00:22:06,750 --> 00:22:12,600
for that there's it blended clip

00:22:08,400 --> 00:22:15,240
animator where you specify a blend tree

00:22:12,600 --> 00:22:18,210
okay and we have two petals so far which

00:22:15,240 --> 00:22:21,780
are additive and lower and so the

00:22:18,210 --> 00:22:24,180
additive clip blend that we have the

00:22:21,780 --> 00:22:28,020
main clip and then we add something else

00:22:24,180 --> 00:22:30,060
on top okay and then we have the lab

00:22:28,020 --> 00:22:32,820
cream blend where we basically

00:22:30,060 --> 00:22:35,940
interpolate between two different two

00:22:32,820 --> 00:22:40,140
different animations and the leaves of

00:22:35,940 --> 00:22:43,110
that blend tree are animation clips okay

00:22:40,140 --> 00:22:45,180
so here we can for the example I was

00:22:43,110 --> 00:22:48,000
giving we can imagine having like three

00:22:45,180 --> 00:22:51,150
different three different Clips one for

00:22:48,000 --> 00:22:53,670
work one for run one for jump and then

00:22:51,150 --> 00:22:57,830
depending what my character does I'm in

00:22:53,670 --> 00:23:01,740
between working or running so I have a

00:22:57,830 --> 00:23:03,960
lab a lab blend in that case and the

00:23:01,740 --> 00:23:06,000
jump comes on top of that right so I

00:23:03,960 --> 00:23:08,730
would have an additive another give

00:23:06,000 --> 00:23:11,510
blend for it and so I have a small

00:23:08,730 --> 00:23:14,610
example for that one as well

00:23:11,510 --> 00:23:15,210
again not necessary tests animations in

00:23:14,610 --> 00:23:27,120
the world

00:23:15,210 --> 00:23:29,700
I suck at blender really yes so what we

00:23:27,120 --> 00:23:32,760
have there is small toy plane right and

00:23:29,700 --> 00:23:34,800
then okay my toy plane is flying okay so

00:23:32,760 --> 00:23:37,500
that's the main we have basically the

00:23:34,800 --> 00:23:39,520
same blend rich blend tree structure

00:23:37,500 --> 00:23:41,679
than what we had on the slide so

00:23:39,520 --> 00:23:45,309
it's just flying around right so it's

00:23:41,679 --> 00:23:49,840
slowly going that way but then if I have

00:23:45,309 --> 00:23:54,940
a hotshot piloting the plane right I

00:23:49,840 --> 00:23:56,800
could pop up a bit the the world's

00:23:54,940 --> 00:23:59,350
strength there and then we would have on

00:23:56,800 --> 00:24:02,170
top of the irregular animation we start

00:23:59,350 --> 00:24:03,760
to do a roll before before plane and if

00:24:02,170 --> 00:24:06,040
we want to have the Royal completely

00:24:03,760 --> 00:24:08,920
added to it right we get our plane which

00:24:06,040 --> 00:24:11,679
does okay this kind of things so that

00:24:08,920 --> 00:24:15,880
comes up on top of the irregular right

00:24:11,679 --> 00:24:19,809
and mission that that we had and then

00:24:15,880 --> 00:24:23,380
that's he easy one right it's just fine

00:24:19,809 --> 00:24:26,080
and flying and so I could learn as well

00:24:23,380 --> 00:24:28,240
to like something in flight where I have

00:24:26,080 --> 00:24:30,250
some turbulence is right and we see that

00:24:28,240 --> 00:24:34,150
the plane goes in one direction or the

00:24:30,250 --> 00:24:35,890
other and of course I can have those

00:24:34,150 --> 00:24:38,080
more turbulent seas and then I've the

00:24:35,890 --> 00:24:39,970
roll at the same time right depending on

00:24:38,080 --> 00:24:41,620
what the pilot is trying to do in that

00:24:39,970 --> 00:24:44,500
particular situation and I get a

00:24:41,620 --> 00:24:51,600
completely new completely new animations

00:24:44,500 --> 00:24:51,600
right all right

00:24:53,490 --> 00:25:01,540
and again that's all interpolated on the

00:24:57,070 --> 00:25:04,900
backhand side new things as well so that

00:25:01,540 --> 00:25:09,790
he materials we had only found based

00:25:04,900 --> 00:25:12,700
lightening lighting on five seven and

00:25:09,790 --> 00:25:15,220
five night we introduced PBR which is

00:25:12,700 --> 00:25:17,350
physics based rendering so we have new

00:25:15,220 --> 00:25:20,200
materials which basically gives much

00:25:17,350 --> 00:25:24,460
better rendering in that case and which

00:25:20,200 --> 00:25:26,880
are based on the metal Hoff model so for

00:25:24,460 --> 00:25:30,400
an object you can specify if that's

00:25:26,880 --> 00:25:32,110
metallic or not or if that's rough or

00:25:30,400 --> 00:25:35,440
not right and depending on that you get

00:25:32,110 --> 00:25:39,310
different rendering so that also allows

00:25:35,440 --> 00:25:41,470
you introduce ritual lights previously

00:25:39,310 --> 00:25:44,140
we had on easy direction light spotlight

00:25:41,470 --> 00:25:47,710
point light and now on top of that we

00:25:44,140 --> 00:25:50,560
have the environment lightning which is

00:25:47,710 --> 00:25:51,880
variable to those materials so that's a

00:25:50,560 --> 00:25:54,610
new component you can specify an

00:25:51,880 --> 00:25:57,400
environment light where you specify two

00:25:54,610 --> 00:25:59,650
textures which characterize the type of

00:25:57,400 --> 00:26:02,890
lighting you have in your in your world

00:25:59,650 --> 00:26:05,680
scene and that's what you see reflecting

00:26:02,890 --> 00:26:08,380
on the object so that's what we barely

00:26:05,680 --> 00:26:11,140
see on the sphere but I which show the

00:26:08,380 --> 00:26:13,840
example and later more examples later on

00:26:11,140 --> 00:26:15,910
and generally you want to see that

00:26:13,840 --> 00:26:20,770
environment because it provides light

00:26:15,910 --> 00:26:22,390
your objects but then as the observer of

00:26:20,770 --> 00:26:26,080
this image I want to see that

00:26:22,390 --> 00:26:29,740
environment around so we also introduced

00:26:26,080 --> 00:26:32,320
the skybox which allows you to to

00:26:29,740 --> 00:26:34,450
actually get a look on that and the

00:26:32,320 --> 00:26:37,510
particular things so I'm supposed to be

00:26:34,450 --> 00:26:40,330
over already so I would just mention

00:26:37,510 --> 00:26:42,730
that we got painted textures as well I

00:26:40,330 --> 00:26:44,230
can show for those who want to stay a

00:26:42,730 --> 00:26:47,400
bit longer I will show you the examples

00:26:44,230 --> 00:26:52,020
if you want painted textures mmm oh

00:26:47,400 --> 00:26:55,020
there was a group picture as well okay

00:26:52,020 --> 00:26:55,020
yes

00:27:00,620 --> 00:27:06,020
all right I heard through the grapevine

00:27:03,750 --> 00:27:06,020

YouTube URL: https://www.youtube.com/watch?v=FaLJe7WyP9Y


