Title: Sandro Andrade - Architecting Qt Mobile Applications: Frameworks, Code and Beyond - Akademy 2017
Publication date: 2017-11-20
Playlist: Akademy 2017
Description: 
	Although Qt has evolved, over the past years, into a quite effective toolkit for building cross-platform mobile applications, the lack of reusable architectural solutions and productivity tools still hampers a wider adoption of Qt by the mobile development industry. Novice Qt mobile developers usually spend a lot of time thinking about how to correctly partition functionality, deciding about local and remote communication patterns, choosing effective UI strategies, and coping with specific platform idiosyncrasies. Unless appropriate engineering and experience are put in place, this usually results in applications which are hard to develop/maintain, difficult to reuse, and highly prone to bugs.

This talk presents the initial thoughts and preliminary implementation of a modular and flexible framework for building Qt mobile applications. The solution relies on the use of code generators and a plugin-based architecture to automate the implementation of recurrent tasks, such as user authentication, CRUD implementation, local storage, and client-server communication via RESTful.

The framework provides two main technologies: i) a command-line tool which works as a code generator; and ii) a modular and flexible architecture for mobile information systems. The command-line tool has been developed in Ruby, using the Thor toolkit (http://whatisthor.com/) and already provides basic commands for generating new application's skeletons and adding new models and views for CRUD operations. It also provides generators for building RESTful services based on Ruby Sinatra framework. Generated code automatically implements a flexible architecture where functionality, navigation drawer construction, and CRUD operations are added by plugins. We believe such a tool may be useful to support the rapid construction of well-designed Qt mobile applications by automating the generation of core functionality and setting the stage for reusable and easy-to-maintain applications.

https://conf.kde.org/en/akademy2017/public/events/355
Captions: 
	00:00:07,440 --> 00:00:11,280
okay it's actually time for the next

00:00:09,490 --> 00:00:14,620
talk

00:00:11,280 --> 00:00:16,540
we've got Sandra Andrade all the way

00:00:14,620 --> 00:00:18,869
from Brazil he's also a KETV board

00:00:16,540 --> 00:00:23,730
member he's going to be talking about

00:00:18,869 --> 00:00:23,730
creating mobile applications with cute

00:00:24,720 --> 00:00:31,989
about architecture and basic design

00:00:28,210 --> 00:00:33,670
decisions on and frameworks to create

00:00:31,989 --> 00:00:43,390
mobile applications with cute

00:00:33,670 --> 00:00:46,870
so States yours let's begin all right

00:00:43,390 --> 00:00:49,149
good afternoon everyone so today I'm

00:00:46,870 --> 00:00:52,269
gonna talk about architecture and key to

00:00:49,149 --> 00:00:54,969
a cute mobile applications and this is

00:00:52,269 --> 00:00:57,160
the kind of subtitle we used to attract

00:00:54,969 --> 00:00:58,510
people to the talk so frameworks called

00:00:57,160 --> 00:01:02,289
the generators and beyond

00:00:58,510 --> 00:01:05,610
so don't get disappointed I promise you

00:01:02,289 --> 00:01:11,200
I won't show anything very surprising so

00:01:05,610 --> 00:01:14,020
yes and so a bit about myself I work as

00:01:11,200 --> 00:01:17,740
a professor in the Federal Institute of

00:01:14,020 --> 00:01:21,310
Technology by ear in Brazil in the sunny

00:01:17,740 --> 00:01:25,360
city of Salvador I've been developing

00:01:21,310 --> 00:01:28,750
with Korea and cute since 2001 I guess

00:01:25,360 --> 00:01:34,030
and I also do with doing things for

00:01:28,750 --> 00:01:37,600
kitty since 2008 and I'm also in the

00:01:34,030 --> 00:01:41,590
world in the world of that directors of

00:01:37,600 --> 00:01:45,729
KD IVs since two years ago I'm doing

00:01:41,590 --> 00:01:47,649
some stuff in KD at do in particular the

00:01:45,729 --> 00:01:52,390
software our software for music

00:01:47,649 --> 00:01:56,259
education which is Minuit and I'm also

00:01:52,390 --> 00:01:59,109
at one of the persons trying to push to

00:01:56,259 --> 00:02:01,990
move things forward for Kady and cute in

00:01:59,109 --> 00:02:04,899
Brazilian in Latin America in general in

00:02:01,990 --> 00:02:07,990
general so you should have heard already

00:02:04,899 --> 00:02:11,890
about our Latin American KDE desktop

00:02:07,990 --> 00:02:14,860
summit and lately about cucumbers ooh so

00:02:11,890 --> 00:02:17,560
brace yourselves maybe this is something

00:02:14,860 --> 00:02:20,980
you want to keep turn it about that

00:02:17,560 --> 00:02:23,290
maybe make maybe it's a conference

00:02:20,980 --> 00:02:26,950
when where do you want to attend the

00:02:23,290 --> 00:02:32,019
next year if it's it happens again

00:02:26,950 --> 00:02:34,930
hopefully it will okay and so over the

00:02:32,019 --> 00:02:38,680
last one and a half year we've been

00:02:34,930 --> 00:02:40,630
developing some some kid mobile projects

00:02:38,680 --> 00:02:43,330
in the university I work at in

00:02:40,630 --> 00:02:46,360
collaboration with some local companies

00:02:43,330 --> 00:02:51,040
and also developing some cute mobile

00:02:46,360 --> 00:02:53,230
applications for our own needs and we

00:02:51,040 --> 00:02:56,890
need to have those applications running

00:02:53,230 --> 00:02:59,799
on Android and iOS so we are of course

00:02:56,890 --> 00:03:02,260
using cute to make that so this is an

00:02:59,799 --> 00:03:06,040
application we are currently working on

00:03:02,260 --> 00:03:09,400
to manage to manage our administrative

00:03:06,040 --> 00:03:11,790
academic stuff like taking student

00:03:09,400 --> 00:03:14,549
attendance II and provide some and

00:03:11,790 --> 00:03:18,970
particular communication channels for

00:03:14,549 --> 00:03:22,180
for professors and students this is

00:03:18,970 --> 00:03:24,519
another example which is already done

00:03:22,180 --> 00:03:28,720
it's a mobile application for dealing

00:03:24,519 --> 00:03:32,350
with this kind of group buying like

00:03:28,720 --> 00:03:35,170
Groupon when you can get better deals if

00:03:32,350 --> 00:03:41,530
you buy things and in groups of people

00:03:35,170 --> 00:03:45,220
right and so yes so when going through

00:03:41,530 --> 00:03:47,410
this project may all of us already know

00:03:45,220 --> 00:03:51,730
that cute provides are very rich and

00:03:47,410 --> 00:03:55,870
somehow mature framework to create

00:03:51,730 --> 00:03:58,810
mobile applications for at least the

00:03:55,870 --> 00:04:03,639
most popular platforms like Android and

00:03:58,810 --> 00:04:08,620
iOS and so it can somehow keep things

00:04:03,639 --> 00:04:11,200
working pretty well across those those

00:04:08,620 --> 00:04:14,760
platforms with some minor exceptions and

00:04:11,200 --> 00:04:18,099
but it still when you find yourself

00:04:14,760 --> 00:04:22,720
developing mobile applications which are

00:04:18,099 --> 00:04:25,539
large and complex so and used to need

00:04:22,720 --> 00:04:29,349
need need to come up with a good

00:04:25,539 --> 00:04:32,979
architecture to to ensure that things

00:04:29,349 --> 00:04:34,230
can be easily maintained it as the

00:04:32,979 --> 00:04:38,130
application grows

00:04:34,230 --> 00:04:41,400
over the time right so we don't have any

00:04:38,130 --> 00:04:45,720
beauty support in cute to provide any

00:04:41,400 --> 00:04:48,380
sort of high-level framework to provide

00:04:45,720 --> 00:04:51,900
efficient architectures for mobile

00:04:48,380 --> 00:04:55,110
applications and at the same time we've

00:04:51,900 --> 00:04:57,480
seen that a lot of functionalities

00:04:55,110 --> 00:05:00,510
demanded by such applications are

00:04:57,480 --> 00:05:03,980
somehow recurrent so we've seen a lot of

00:05:00,510 --> 00:05:09,110
applications which are a sort of and

00:05:03,980 --> 00:05:11,730
clients a client-server restful

00:05:09,110 --> 00:05:15,180
communication for doing all kinds of

00:05:11,730 --> 00:05:18,570
stuff so this is the kind of thing that

00:05:15,180 --> 00:05:23,030
is quite amenable to have source code

00:05:18,570 --> 00:05:27,030
automatically generated to improve

00:05:23,030 --> 00:05:33,300
productivity and read reduce bugs and so

00:05:27,030 --> 00:05:35,990
on and so and when doing these projects

00:05:33,300 --> 00:05:39,840
we have identified some kilted

00:05:35,990 --> 00:05:42,900
disabilities for development Mapei

00:05:39,840 --> 00:05:46,220
mobile applications like as I mentioned

00:05:42,900 --> 00:05:49,560
before the like of a higher-level

00:05:46,220 --> 00:05:52,310
architectural framework to keep for

00:05:49,560 --> 00:05:55,850
example new functionalities implementing

00:05:52,310 --> 00:05:57,840
implemented as plugins we have a lot of

00:05:55,850 --> 00:06:01,380
functionalities for that in KD

00:05:57,840 --> 00:06:04,050
frameworks 5 they are pretty awesome for

00:06:01,380 --> 00:06:08,490
doing that for desktop applications but

00:06:04,050 --> 00:06:11,760
but maybe in the mobile world you people

00:06:08,490 --> 00:06:15,680
usually don't want you to have to deal

00:06:11,760 --> 00:06:22,140
with new dependencies or things they are

00:06:15,680 --> 00:06:25,830
hard to set up and we also lack our sort

00:06:22,140 --> 00:06:29,460
of Saturday of real reusable UI

00:06:25,830 --> 00:06:33,480
components kirigami is a is of course a

00:06:29,460 --> 00:06:37,190
good initiative with with respect to a

00:06:33,480 --> 00:06:41,150
chill that but it still a lot of common

00:06:37,190 --> 00:06:43,650
user interfaces a workflow can be and

00:06:41,150 --> 00:06:46,610
designer as reusable component

00:06:43,650 --> 00:06:49,099
components in have its development some

00:06:46,610 --> 00:06:54,289
automated by code to generate a code

00:06:49,099 --> 00:06:59,120
generation and also issue we have no

00:06:54,289 --> 00:07:02,930
building support for doing and JSON

00:06:59,120 --> 00:07:07,099
based restful communication in cute we

00:07:02,930 --> 00:07:10,879
have the XML list modal KML object but

00:07:07,099 --> 00:07:14,210
nowadays which you need a sort of JSON

00:07:10,879 --> 00:07:17,870
list model to make things easier when

00:07:14,210 --> 00:07:21,949
doing clients client-server restful

00:07:17,870 --> 00:07:24,379
communication also it has no built-in

00:07:21,949 --> 00:07:28,490
support for disconnected operations for

00:07:24,379 --> 00:07:32,240
those situations when you have no access

00:07:28,490 --> 00:07:34,819
to our network at that time but you want

00:07:32,240 --> 00:07:39,169
to use your mobile mobile applications

00:07:34,819 --> 00:07:43,779
and have things synchronize it once the

00:07:39,169 --> 00:07:46,509
connection is Israel table SHhhh and so

00:07:43,779 --> 00:07:50,240
implemented implementing person

00:07:46,509 --> 00:07:52,580
notifications is also currently hard to

00:07:50,240 --> 00:07:55,669
do because you need some sort of

00:07:52,580 --> 00:08:01,159
platform specific code if you are doing

00:07:55,669 --> 00:08:03,409
that I Android or iOS and also we've

00:08:01,159 --> 00:08:06,770
been faced some issues when deploying

00:08:03,409 --> 00:08:09,800
and read write files on Android you have

00:08:06,770 --> 00:08:13,099
to put things on that assets directory

00:08:09,800 --> 00:08:21,969
and on iOS that works in a different way

00:08:13,099 --> 00:08:26,139
so okay so in and then once we've

00:08:21,969 --> 00:08:30,740
identified these cute disabilities and

00:08:26,139 --> 00:08:34,190
we have been working over the last month

00:08:30,740 --> 00:08:37,099
in some solution which tries to mitigate

00:08:34,190 --> 00:08:40,940
the issues I'm bring I'm bringing here

00:08:37,099 --> 00:08:44,089
so we think that if you could somehow to

00:08:40,940 --> 00:08:47,089
come up with our knives reusable and

00:08:44,089 --> 00:08:50,209
model modular reference architecture for

00:08:47,089 --> 00:08:52,820
modern mobile applications and then to

00:08:50,209 --> 00:08:55,459
turn that implemented implementation in

00:08:52,820 --> 00:08:58,010
a set of templates and then use some

00:08:55,459 --> 00:09:01,370
code generation

00:08:58,010 --> 00:09:05,000
technique technique to provide to

00:09:01,370 --> 00:09:09,050
automatically generate some some

00:09:05,000 --> 00:09:11,420
boilerplate boilerplate code that would

00:09:09,050 --> 00:09:14,330
make cute mobile development a lot of

00:09:11,420 --> 00:09:17,030
more productive at least for those

00:09:14,330 --> 00:09:21,650
domains who are such functionalities

00:09:17,030 --> 00:09:25,370
appear record very currently and so

00:09:21,650 --> 00:09:27,230
that's how we decided to start working

00:09:25,370 --> 00:09:29,600
on mag we call it

00:09:27,230 --> 00:09:33,230
mag in the lack of a better name so

00:09:29,600 --> 00:09:37,820
what's mag it's actually made of two

00:09:33,230 --> 00:09:42,500
different parts so we design it a sort

00:09:37,820 --> 00:09:45,350
of link architecture based on some KML

00:09:42,500 --> 00:09:47,870
dynamically KML in order to load that

00:09:45,350 --> 00:09:50,090
you have each functionality of the

00:09:47,870 --> 00:09:53,960
application implemented as a separated

00:09:50,090 --> 00:09:58,280
plugging and then a at runtime those

00:09:53,960 --> 00:10:01,190
plugins are loaded and and and in order

00:09:58,280 --> 00:10:05,080
in order to have for example the the

00:10:01,190 --> 00:10:07,460
navigation menu and a lot of courage

00:10:05,080 --> 00:10:09,860
functionalities in implemented already

00:10:07,460 --> 00:10:13,520
direct tetra difference from such

00:10:09,860 --> 00:10:16,550
abilities and then we turned we come up

00:10:13,520 --> 00:10:19,880
with a set of templates which with

00:10:16,550 --> 00:10:22,970
implement those core architecture and

00:10:19,880 --> 00:10:26,900
then putting in the plugins and then

00:10:22,970 --> 00:10:30,380
we've been creating some code generator

00:10:26,900 --> 00:10:33,080
to allows for developers to easily

00:10:30,380 --> 00:10:36,080
create new kit mobile web applications

00:10:33,080 --> 00:10:40,280
by using this reference architecture and

00:10:36,080 --> 00:10:43,250
this code generation right and so we

00:10:40,280 --> 00:10:47,330
have a command-line interface which is

00:10:43,250 --> 00:10:50,840
implemented based on Ruby Thor which is

00:10:47,330 --> 00:10:53,630
a command-line interface framework which

00:10:50,840 --> 00:10:57,890
is used in rubbing on Rails framework

00:10:53,630 --> 00:11:01,610
and so the the templates are specified

00:10:57,890 --> 00:11:04,940
in which is also that the template

00:11:01,610 --> 00:11:09,260
engine II language used by rubbing Oreos

00:11:04,940 --> 00:11:12,050
and generators our modelers so we want

00:11:09,260 --> 00:11:14,540
since the beginning to make it easy for

00:11:12,050 --> 00:11:17,660
developers to create new templates to

00:11:14,540 --> 00:11:21,290
implementing new UI workflows or new

00:11:17,660 --> 00:11:24,490
client-server communication so we

00:11:21,290 --> 00:11:27,700
provides a JSON list model to handle

00:11:24,490 --> 00:11:31,250
JSON based ready for communication and

00:11:27,700 --> 00:11:34,040
we have also some some features to

00:11:31,250 --> 00:11:36,860
provide an automatic download of icons

00:11:34,040 --> 00:11:40,060
from Google material and icons to use

00:11:36,860 --> 00:11:43,460
then automatically in your kit mobile

00:11:40,060 --> 00:11:46,790
applications so currently you have some

00:11:43,460 --> 00:11:51,230
some templates which may be useful if

00:11:46,790 --> 00:11:54,110
you are developing cute restful mobile

00:11:51,230 --> 00:11:56,660
applications so we have them we have

00:11:54,110 --> 00:12:00,200
some templates not only for the cute

00:11:56,660 --> 00:12:03,380
client side but also for the receivers

00:12:00,200 --> 00:12:06,590
serve a service side so we have a

00:12:03,380 --> 00:12:09,950
template for creating a new restful

00:12:06,590 --> 00:12:13,160
server based on Sinatra Sinatra is a

00:12:09,950 --> 00:12:18,110
micro framework for creating new restful

00:12:13,160 --> 00:12:21,260
services servers in Ruby and also we

00:12:18,110 --> 00:12:24,370
have another template to support new new

00:12:21,260 --> 00:12:27,410
models and new services in in the

00:12:24,370 --> 00:12:30,890
restful server you have just created and

00:12:27,410 --> 00:12:33,410
we have a template for for creating a

00:12:30,890 --> 00:12:37,520
simple cute mobile applications based on

00:12:33,410 --> 00:12:40,160
dynamic EQ ml plugins and also you have

00:12:37,520 --> 00:12:42,380
a we have templates for creating cute

00:12:40,160 --> 00:12:46,040
mobile application caches with

00:12:42,380 --> 00:12:50,750
communicates with servers which provide

00:12:46,040 --> 00:12:54,530
restful services right so that's the

00:12:50,750 --> 00:12:58,790
time when I should have I do some demo

00:12:54,530 --> 00:13:01,310
and maybe so I will try to switch the

00:12:58,790 --> 00:13:03,520
microsomes microphones because I had to

00:13:01,310 --> 00:13:03,520
type

00:13:05,860 --> 00:13:15,890
hello yeah can hear and so this is how

00:13:12,290 --> 00:13:18,170
you can install Maggie currently I

00:13:15,890 --> 00:13:21,380
wouldn't I want to do that here because

00:13:18,170 --> 00:13:24,680
I have it already installed but you can

00:13:21,380 --> 00:13:27,710
clone the repository install Ruby run

00:13:24,680 --> 00:13:30,290
gem install bundler and run the bundle

00:13:27,710 --> 00:13:32,210
to install all the acquired dependencies

00:13:30,290 --> 00:13:36,800
and then you have the the command-line

00:13:32,210 --> 00:13:40,760
interface in the directory bin in the

00:13:36,800 --> 00:13:42,620
future we can have a Jen InStyle mag I'm

00:13:40,760 --> 00:13:46,160
not already specialist I'm actually

00:13:42,620 --> 00:13:51,740
learning its while doing this this kind

00:13:46,160 --> 00:13:57,310
of stuff so okay so I have it installed

00:13:51,740 --> 00:14:03,200
here okay so if you run being Meg and

00:13:57,310 --> 00:14:06,350
help so you have some description about

00:14:03,200 --> 00:14:09,440
the the commands available so if you

00:14:06,350 --> 00:14:13,460
want to create a new simple kilt

00:14:09,440 --> 00:14:17,180
application which already a uses some

00:14:13,460 --> 00:14:20,870
KML plugins you you can just run this

00:14:17,180 --> 00:14:27,820
command I have some script here I will

00:14:20,870 --> 00:14:35,810
just copy it and so here I'm say and

00:14:27,820 --> 00:14:38,980
Maggie create a new and sorry create a

00:14:35,810 --> 00:14:43,450
new project called simple way up a

00:14:38,980 --> 00:14:43,450
application and the type is

00:14:49,299 --> 00:14:59,839
simple up so so we have a set of

00:14:56,329 --> 00:15:02,959
templates so here you just pass the

00:14:59,839 --> 00:15:07,549
template you want to use when generating

00:15:02,959 --> 00:15:09,889
just this project right so with that we

00:15:07,549 --> 00:15:13,160
you have a lot of boilerplate

00:15:09,889 --> 00:15:17,299
boilerplate code already generated here

00:15:13,160 --> 00:15:21,290
and now we can we can create a simple

00:15:17,299 --> 00:15:27,379
plugin for this application by running

00:15:21,290 --> 00:15:32,179
mag generate you can just type help it

00:15:27,379 --> 00:15:37,910
plugging then I can ask create a new

00:15:32,179 --> 00:15:39,439
plug-in call it and thoughts if you we

00:15:37,910 --> 00:15:43,489
want to create some application for

00:15:39,439 --> 00:15:47,749
showing the Academy program and and then

00:15:43,489 --> 00:15:50,389
here you can pass the the the path to

00:15:47,749 --> 00:15:58,759
the application you created before so

00:15:50,389 --> 00:16:00,639
this is simple a simple app and I guess

00:15:58,759 --> 00:16:08,149
that that's it

00:16:00,639 --> 00:16:11,149
so with that we have here in the folder

00:16:08,149 --> 00:16:15,079
plugins and a new plugin created for

00:16:11,149 --> 00:16:18,529
this application right each plugins each

00:16:15,079 --> 00:16:21,949
plug-in has a met metadata JSON file

00:16:18,529 --> 00:16:25,309
which is right for example the name that

00:16:21,949 --> 00:16:29,360
will appear in the menu of the

00:16:25,309 --> 00:16:32,179
application and which keep ml file will

00:16:29,360 --> 00:16:35,959
be loaded when you click on that menu

00:16:32,179 --> 00:16:39,610
entry right so here we can already build

00:16:35,959 --> 00:16:39,610
and run this project

00:16:43,740 --> 00:16:52,660
okay and and here you have your simple

00:16:48,250 --> 00:16:54,970
application with a manual entry which

00:16:52,660 --> 00:16:58,570
was already collected from the stolid

00:16:54,970 --> 00:17:00,610
plugins when you click here you have a

00:16:58,570 --> 00:17:03,160
hello from the talks blogging right and

00:17:00,610 --> 00:17:06,480
then you can just keep creating plugins

00:17:03,160 --> 00:17:09,940
and they those are automatically load

00:17:06,480 --> 00:17:15,450
with no need to reboot your application

00:17:09,940 --> 00:17:15,450
right so this is our basic blogging and

00:17:15,600 --> 00:17:24,030
ok but we can also create some

00:17:20,910 --> 00:17:27,850
server-side and Christ in client-side

00:17:24,030 --> 00:17:31,930
plugins so now I'm gonna show you how we

00:17:27,850 --> 00:17:33,160
create a new restful server based on

00:17:31,930 --> 00:17:38,380
stone Robbie

00:17:33,160 --> 00:17:41,470
Sinatra and so for that we just need to

00:17:38,380 --> 00:17:44,680
run Maggie by passing a different

00:17:41,470 --> 00:17:49,180
project template so now I'm saying just

00:17:44,680 --> 00:17:54,340
use this natural server template ok so I

00:17:49,180 --> 00:17:57,190
have a new project created here and we

00:17:54,340 --> 00:18:01,960
can also create a new restful server

00:17:57,190 --> 00:18:04,960
plugging for that's that server ok so

00:18:01,960 --> 00:18:08,860
this is a longer comment here I'm

00:18:04,960 --> 00:18:12,160
basically basically saying create our

00:18:08,860 --> 00:18:15,460
conference server side pull a plug-in

00:18:12,160 --> 00:18:18,850
the type of that the template is Sinatra

00:18:15,460 --> 00:18:21,040
service e plugging and the application

00:18:18,850 --> 00:18:24,520
path where the plug-in should be

00:18:21,040 --> 00:18:29,020
installed is my server and here I can

00:18:24,520 --> 00:18:32,800
pass and a set of the fields that should

00:18:29,020 --> 00:18:36,250
be stored as that and server-side

00:18:32,800 --> 00:18:39,250
planning right so if I want to store

00:18:36,250 --> 00:18:42,100
data about conference so I'm storing the

00:18:39,250 --> 00:18:44,530
economy and the name then city where the

00:18:42,100 --> 00:18:47,710
conference is happened the venue we

00:18:44,530 --> 00:18:52,270
start date and end date right so with

00:18:47,710 --> 00:18:56,080
that we create a plugin here ok we can

00:18:52,270 --> 00:18:56,870
just run rake the DB migrate to create

00:18:56,080 --> 00:18:59,930
the

00:18:56,870 --> 00:19:04,880
that the database a base for this one

00:18:59,930 --> 00:19:09,700
and I will now just you to populate the

00:19:04,880 --> 00:19:17,960
database with some info information and

00:19:09,700 --> 00:19:20,800
so I will add three conferences here so

00:19:17,960 --> 00:19:25,390
we have kid come Brazil Academy and

00:19:20,800 --> 00:19:32,809
Kafka da índia right and I can finally

00:19:25,390 --> 00:19:37,809
start the server my server here ok

00:19:32,809 --> 00:19:42,140
so with that I have already restful set

00:19:37,809 --> 00:19:46,610
server were running with automatically

00:19:42,140 --> 00:19:56,480
profit provide meals recipe endpoint

00:19:46,610 --> 00:20:00,010
called conferences where I can just try

00:19:56,480 --> 00:20:06,080
it here so this is the answer the

00:20:00,010 --> 00:20:08,600
restful server is is providing and ok I

00:20:06,080 --> 00:20:11,780
will keep the server running at this tab

00:20:08,600 --> 00:20:16,730
and now I will create a new project for

00:20:11,780 --> 00:20:22,700
the cute mobile restful client for those

00:20:16,730 --> 00:20:26,800
for this server right for that we will

00:20:22,700 --> 00:20:29,390
run again our clients will align a

00:20:26,800 --> 00:20:33,950
interface to create the application

00:20:29,390 --> 00:20:36,500
called my application by using the

00:20:33,950 --> 00:20:42,410
template ready for a application right

00:20:36,500 --> 00:20:47,110
and finally I can ask it to create a new

00:20:42,410 --> 00:20:50,929
server side plugin for ratification and

00:20:47,110 --> 00:20:54,410
this will be call conferences I pass

00:20:50,929 --> 00:20:57,020
again the template I'm gonna use to

00:20:54,410 --> 00:21:01,700
create these the client side blogging

00:20:57,020 --> 00:21:04,790
and this is the name of the icon that

00:21:01,700 --> 00:21:07,570
should be use it in the menu so here you

00:21:04,790 --> 00:21:10,490
pass the Google material I can't cut a

00:21:07,570 --> 00:21:14,150
category and the icon name

00:21:10,490 --> 00:21:19,070
and again the set of fields that their

00:21:14,150 --> 00:21:24,320
server provides right okay

00:21:19,070 --> 00:21:31,820
so with that I can just build the mobile

00:21:24,320 --> 00:21:34,910
application so we can have it running we

00:21:31,820 --> 00:21:39,400
have already conferences entry in the

00:21:34,910 --> 00:21:43,550
menu and when you click here it alright

00:21:39,400 --> 00:21:47,570
makes a call to the restful server gets

00:21:43,550 --> 00:21:50,150
our JSON back and just provide dizziness

00:21:47,570 --> 00:21:53,750
and you at least right

00:21:50,150 --> 00:21:56,510
when you click here if you can see that

00:21:53,750 --> 00:22:01,550
the details from for the conference

00:21:56,510 --> 00:22:06,680
right so we can easily create another

00:22:01,550 --> 00:22:09,200
plugin also for the server-side and so

00:22:06,680 --> 00:22:12,110
let's see let's go let's create a new

00:22:09,200 --> 00:22:19,190
server side blogging to store speakers

00:22:12,110 --> 00:22:22,190
now okay and so this I will run rake the

00:22:19,190 --> 00:22:26,920
be migrated again to update the the

00:22:22,190 --> 00:22:30,340
database and I will I will add some data

00:22:26,920 --> 00:22:30,340
regarding speakers

00:22:44,909 --> 00:22:47,909
wait

00:22:53,170 --> 00:23:00,910
okay we have one speaker let's let's add

00:22:56,650 --> 00:23:04,960
another speaker cool so I would just

00:23:00,910 --> 00:23:08,550
start this server right I will now

00:23:04,960 --> 00:23:13,840
create a new client side plugin for that

00:23:08,550 --> 00:23:19,900
for showing also the speakers with that

00:23:13,840 --> 00:23:23,320
common line okay and now I can run again

00:23:19,900 --> 00:23:27,100
my app no need to build it again because

00:23:23,320 --> 00:23:31,540
they are kirimaya plugins and if I run

00:23:27,100 --> 00:23:33,370
it here we have a new entry by which

00:23:31,540 --> 00:23:40,960
shows also these speakers okay

00:23:33,370 --> 00:23:44,380
our beloved conky and right okay so

00:23:40,960 --> 00:23:46,960
going back to the presentation so this

00:23:44,380 --> 00:23:48,700
is basically what we have so far this is

00:23:46,960 --> 00:23:52,110
not intended to be a finished product

00:23:48,700 --> 00:23:56,260
yet just a set of thoughts and some

00:23:52,110 --> 00:23:58,440
preliminary prototype about how we can

00:23:56,260 --> 00:24:04,780
automate such development of mobile

00:23:58,440 --> 00:24:08,560
applications and so this is what I just

00:24:04,780 --> 00:24:11,170
showed you right so for the future we

00:24:08,560 --> 00:24:14,350
plan to add some new new templates for

00:24:11,170 --> 00:24:17,110
the full credit support to support to

00:24:14,350 --> 00:24:21,010
support the insertion and update and

00:24:17,110 --> 00:24:23,710
delete of that data directly from the

00:24:21,010 --> 00:24:25,660
mobile application and we want to

00:24:23,710 --> 00:24:30,280
support some some kids and kirigami

00:24:25,660 --> 00:24:32,860
based today templates and also we want

00:24:30,280 --> 00:24:35,620
to support relationships between modo to

00:24:32,860 --> 00:24:39,600
implement master details things and this

00:24:35,620 --> 00:24:43,690
kind of step which quite needed in that

00:24:39,600 --> 00:24:44,980
kind of application also we want to

00:24:43,690 --> 00:24:47,580
support person notification by

00:24:44,980 --> 00:24:51,910
generating code specific platform

00:24:47,580 --> 00:24:54,090
through this kind of tool okay so if you

00:24:51,910 --> 00:24:56,710
want to try it you are quite welcome to

00:24:54,090 --> 00:24:59,860
nature try to clone it build and just

00:24:56,710 --> 00:25:02,770
you can contribute with new new

00:24:59,860 --> 00:25:05,830
templates or trying to automate more

00:25:02,770 --> 00:25:08,230
things so just

00:25:05,830 --> 00:25:12,809
talk to me now or in the conference

00:25:08,230 --> 00:25:12,809
right so that it

00:25:16,600 --> 00:25:29,140
I don't know if we have that time for

00:25:18,940 --> 00:25:32,080
questions you have five minutes for

00:25:29,140 --> 00:25:46,930
questions any question

00:25:32,080 --> 00:25:48,910
could someone Buddha right thank you for

00:25:46,930 --> 00:25:52,380
the presentation I have one question or

00:25:48,910 --> 00:25:55,690
do you allow her our little beast

00:25:52,380 --> 00:25:59,050
templates for example speakers within

00:25:55,690 --> 00:26:01,210
conferences are like you presented one

00:25:59,050 --> 00:26:03,400
layer so the JSON content will have just

00:26:01,210 --> 00:26:06,160
one level or is it possible to have

00:26:03,400 --> 00:26:08,500
multi yeah are you are thinking all

00:26:06,160 --> 00:26:11,350
right yeah yeah of course this is

00:26:08,500 --> 00:26:13,530
possible it's only a matter of creating

00:26:11,350 --> 00:26:16,390
a new template or a new application

00:26:13,530 --> 00:26:19,840
template which allows for such kind of

00:26:16,390 --> 00:26:21,540
of stuff actually that requires our as

00:26:19,840 --> 00:26:24,370
implementing your kind of relate

00:26:21,540 --> 00:26:26,100
relationships because conferences has

00:26:24,370 --> 00:26:29,710
speakers these speakers has a lot of

00:26:26,100 --> 00:26:33,960
activities I guess once this dawn here

00:26:29,710 --> 00:26:33,960

YouTube URL: https://www.youtube.com/watch?v=mALA2Whluks


