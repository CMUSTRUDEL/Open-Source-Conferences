Title: PHP UK Conference 2012 - Teaching your machine to find fraudsters, by Ian Barber
Publication date: 2012-03-15
Playlist: PHP UK Conference 2012
Description: 
	http://www.phpconference.co.uk/talk/teaching-your-machine-find-fraudsters

When dealing with money online, fraud is an ongoing problem for both consumers and sellers. Researchers have been developing statistical and machine learning techniques to detect shady sellers on auction sites, spot fraudulent payments on e-commerce systems and catch click fraud on adverts. While there is no silver bullet, you will learn to flag suspicious activity and help protect your site from scammers using PHP and a little help from some other technologies.


Ian Barber is the development manager at Virgin Management in London, and has been working with PHP since 2002. He was formerly Delivery Manager for Ibuildings, where he worked with a variety of large enterprise clients across the UK and Europe. He is a regular conference speaker, and is interested in search, data processing, machine learning and natural language processing. Ian blogs about these topics and more on his site, PHP/ir.
Captions: 
	00:00:07,290 --> 00:00:11,570
I think it's

00:00:12,780 --> 00:00:16,340
uppers as we're going but what

00:00:16,820 --> 00:00:21,450
so thank you all for coming I'm

00:00:19,400 --> 00:00:23,160
impressed you've lured yourself away

00:00:21,450 --> 00:00:27,660
from stamp X there's a lot of you here

00:00:23,160 --> 00:00:30,330
so they're not doing a good job so this

00:00:27,660 --> 00:00:31,770
talk is going to be about fraud

00:00:30,330 --> 00:00:34,710
detection but for our detection is a

00:00:31,770 --> 00:00:36,270
joint almost gigantic field so it's more

00:00:34,710 --> 00:00:38,250
of a kind of taster of the kind of

00:00:36,270 --> 00:00:40,470
things that you can do to detect fraud

00:00:38,250 --> 00:00:43,290
and I hope it'll give you some ideas and

00:00:40,470 --> 00:00:45,150
it'll let you talk to people about fraud

00:00:43,290 --> 00:00:47,909
problems and talk about the kind of

00:00:45,150 --> 00:00:51,059
techniques that are used to detect these

00:00:47,909 --> 00:00:54,120
kind of situations now one thing though

00:00:51,059 --> 00:00:55,409
is joined in this is only the second

00:00:54,120 --> 00:00:57,540
time I've given this talk so I've really

00:00:55,409 --> 00:01:00,570
appreciate any feedback it'sit's kind of

00:00:57,540 --> 00:01:02,190
a technical talk so it's not always easy

00:01:00,570 --> 00:01:03,989
to know how well that's going to go

00:01:02,190 --> 00:01:05,159
across with people what makes sense what

00:01:03,989 --> 00:01:06,990
doesn't make sense what needs more

00:01:05,159 --> 00:01:08,159
explanation what needs less so please

00:01:06,990 --> 00:01:10,170
let me know I would be really

00:01:08,159 --> 00:01:12,570
appreciated and secondly there's a bunch

00:01:10,170 --> 00:01:14,909
of code in here which is all on a github

00:01:12,570 --> 00:01:16,140
so don't worry too much about trying to

00:01:14,909 --> 00:01:17,520
follow along with any particular bit of

00:01:16,140 --> 00:01:19,439
code if you do need to look at it later

00:01:17,520 --> 00:01:24,420
it's all on there including the data

00:01:19,439 --> 00:01:28,619
that goes with it so fraud is a big

00:01:24,420 --> 00:01:30,390
problem but when people introduce it

00:01:28,619 --> 00:01:31,859
they tend to introduce it with big

00:01:30,390 --> 00:01:34,429
numbers big scary numbers in the

00:01:31,859 --> 00:01:37,200
billions and I prefer some small numbers

00:01:34,429 --> 00:01:41,640
five percent is the average revenue

00:01:37,200 --> 00:01:44,789
businesses lose to fraud three percent

00:01:41,640 --> 00:01:49,469
is the police budget here in the UK that

00:01:44,789 --> 00:01:52,469
is dedicated to fighting fraud point one

00:01:49,469 --> 00:01:55,469
percent is the percentage of

00:01:52,469 --> 00:01:57,719
transactions a large retailer can expect

00:01:55,469 --> 00:02:00,890
to be fraudulent if they've implemented

00:01:57,719 --> 00:02:03,299
a decent level of checks if they've got

00:02:00,890 --> 00:02:05,850
verified by visa if they're doing AVS

00:02:03,299 --> 00:02:08,280
those kind of things but eight percent

00:02:05,850 --> 00:02:10,920
is the percentage of transactions that

00:02:08,280 --> 00:02:13,080
get flagged as fraud and I'm sure anyone

00:02:10,920 --> 00:02:15,420
that's had a call from the fraud

00:02:13,080 --> 00:02:17,069
detection robot on their credit card

00:02:15,420 --> 00:02:19,020
saying they need to confirm some

00:02:17,069 --> 00:02:21,120
transactions with you know what that's

00:02:19,020 --> 00:02:23,099
like it happens a lot lot more than your

00:02:21,120 --> 00:02:28,010
credit card actually gets used for

00:02:23,099 --> 00:02:30,830
fraudulent activity so how do we

00:02:28,010 --> 00:02:32,720
something about this how do we face

00:02:30,830 --> 00:02:36,170
these kind of numbers when fraud is so

00:02:32,720 --> 00:02:39,019
relatively rare but so easy to detect

00:02:36,170 --> 00:02:40,730
erroneously because there's a lot of

00:02:39,019 --> 00:02:42,079
cost to it not just the monetary cost

00:02:40,730 --> 00:02:43,879
not just that five percent there's the

00:02:42,079 --> 00:02:45,620
cost of reputations and there's cost to

00:02:43,879 --> 00:02:47,659
actually make things better to go out

00:02:45,620 --> 00:02:51,170
and fix the problems that the folders

00:02:47,659 --> 00:02:54,049
has caused well there's kind of four

00:02:51,170 --> 00:02:56,629
general areas of techniques that seemed

00:02:54,049 --> 00:02:59,120
to be the main ways that fraud is dealt

00:02:56,629 --> 00:03:01,280
with and we're going to look at really

00:02:59,120 --> 00:03:02,659
these two anomaly detection and

00:03:01,280 --> 00:03:05,599
supervised classifiers and we're going

00:03:02,659 --> 00:03:06,650
to touch on rule based detection the

00:03:05,599 --> 00:03:08,470
fourth quadrant here is a very

00:03:06,650 --> 00:03:11,450
interesting one complex event processing

00:03:08,470 --> 00:03:13,280
this is kind of the emerging way of

00:03:11,450 --> 00:03:15,980
doing things it's almost a combination

00:03:13,280 --> 00:03:17,569
of the three it's doing rule detection

00:03:15,980 --> 00:03:20,090
and processing data and looking for

00:03:17,569 --> 00:03:23,450
anomalies in a very fluid and dynamic

00:03:20,090 --> 00:03:24,920
way with very large amounts of data so

00:03:23,450 --> 00:03:26,420
if you're at visa this is the kind of

00:03:24,920 --> 00:03:28,579
work you'll be doing but some people

00:03:26,420 --> 00:03:31,099
will argue there hasn't been a true CEP

00:03:28,579 --> 00:03:33,349
system developed yet so I'm not going to

00:03:31,099 --> 00:03:35,629
talk about it in here I'm happy to talk

00:03:33,349 --> 00:03:38,419
about it a bit afterwards but it's it's

00:03:35,629 --> 00:03:40,459
not something that is in the everyday

00:03:38,419 --> 00:03:43,730
world of sort of smaller products that

00:03:40,459 --> 00:03:46,069
we're looking at the moment so we looked

00:03:43,730 --> 00:03:48,709
at the fact that fraud was rare earlier

00:03:46,069 --> 00:03:52,010
and I'm wanting to just point out quite

00:03:48,709 --> 00:03:54,829
how rare it is I say that we could make

00:03:52,010 --> 00:03:57,109
a classifier or a detector or a fraud

00:03:54,829 --> 00:03:58,639
tool that will give you a ninety-nine

00:03:57,109 --> 00:04:01,370
percent accuracy so if you gave her a

00:03:58,639 --> 00:04:03,470
thousand transactions it would give you

00:04:01,370 --> 00:04:05,269
ninety nine percent accuracy across that

00:04:03,470 --> 00:04:07,250
that sounds pretty good that sounds like

00:04:05,269 --> 00:04:11,810
something that would really help us in

00:04:07,250 --> 00:04:14,419
our business but if we did that we will

00:04:11,810 --> 00:04:16,909
find the almost nine hundred and ninety

00:04:14,419 --> 00:04:18,289
of them that were legitimate we marked

00:04:16,909 --> 00:04:20,120
as legitimate that's great stuff we've

00:04:18,289 --> 00:04:23,110
gone away and detected that that isn't

00:04:20,120 --> 00:04:28,039
fraud we've not done anything about it

00:04:23,110 --> 00:04:30,650
we wouldn't miss any fraud but we would

00:04:28,039 --> 00:04:33,229
detect ten transactions which were

00:04:30,650 --> 00:04:35,570
legitimate as fraud and we will pick up

00:04:33,229 --> 00:04:37,909
the one out of the thousand that was

00:04:35,570 --> 00:04:40,190
fraudulent which means when ninety

00:04:37,909 --> 00:04:41,870
percent wrong we've got a huge error

00:04:40,190 --> 00:04:43,820
here and this is why we have

00:04:41,870 --> 00:04:46,010
eight percent difference this is why we

00:04:43,820 --> 00:04:47,660
have the fraud robot phoning up this is

00:04:46,010 --> 00:04:49,670
why it's expensive every time you get a

00:04:47,660 --> 00:04:51,320
fraud incident you have to go and

00:04:49,670 --> 00:04:53,360
investigate it you have to go and do

00:04:51,320 --> 00:04:56,060
something someone somewhere is having to

00:04:53,360 --> 00:05:02,120
take action based on this so it's tricky

00:04:56,060 --> 00:05:04,940
to deal with such rare systems so how

00:05:02,120 --> 00:05:07,610
can we detect it what can we use to make

00:05:04,940 --> 00:05:10,400
detecting fraud easier we have to know

00:05:07,610 --> 00:05:12,050
something about the problem and the

00:05:10,400 --> 00:05:13,550
important problem you can always go back

00:05:12,050 --> 00:05:15,860
to with fraud is that fraud is about

00:05:13,550 --> 00:05:19,850
money people are trying to make money

00:05:15,860 --> 00:05:23,270
with these scams think of mobile phones

00:05:19,850 --> 00:05:24,680
there's maybe two kinds of easy fraud

00:05:23,270 --> 00:05:28,130
you can do with a mobile phone one

00:05:24,680 --> 00:05:31,010
direct one intermediate so a direct kind

00:05:28,130 --> 00:05:33,470
of fraud might be that you clone a fine

00:05:31,010 --> 00:05:37,100
this used to be a problem with when you

00:05:33,470 --> 00:05:39,620
had analog versions of phone networks

00:05:37,100 --> 00:05:40,760
and people would take over someone

00:05:39,620 --> 00:05:42,680
else's identity and they would make

00:05:40,760 --> 00:05:44,720
calls on it and they will go away and

00:05:42,680 --> 00:05:46,910
they will have those calls on the clone

00:05:44,720 --> 00:05:49,400
phone billed to the original subscriber

00:05:46,910 --> 00:05:51,380
which is great because the person who's

00:05:49,400 --> 00:05:53,120
climbing the phone can sell that phone

00:05:51,380 --> 00:05:54,920
to someone that wants it for a certain

00:05:53,120 --> 00:05:56,450
amount of money so they get paid and the

00:05:54,920 --> 00:05:57,950
person that buys the clone phone can

00:05:56,450 --> 00:06:00,170
then use it and Hammer as many calls

00:05:57,950 --> 00:06:02,780
through it as they can up until the

00:06:00,170 --> 00:06:04,340
point it gets shut off but there's other

00:06:02,780 --> 00:06:06,920
things you can do with a phone you can

00:06:04,340 --> 00:06:09,140
take a phone a pay-as-you-go phone a

00:06:06,920 --> 00:06:11,780
legitimate phone and top it up with a

00:06:09,140 --> 00:06:14,000
stolen credit card you put 50 quid on to

00:06:11,780 --> 00:06:16,880
that stolen credit on to that phone and

00:06:14,000 --> 00:06:19,460
then you immediately call a overseas

00:06:16,880 --> 00:06:21,650
premium-rate number and that premium

00:06:19,460 --> 00:06:22,910
rate number is owned by some counter

00:06:21,650 --> 00:06:25,760
party of yours someone that you're

00:06:22,910 --> 00:06:28,310
working with the money goes to them for

00:06:25,760 --> 00:06:30,020
your calling and they have it

00:06:28,310 --> 00:06:31,370
legitimately they can say look we just

00:06:30,020 --> 00:06:32,600
got called up of course we got paid for

00:06:31,370 --> 00:06:34,070
this and because they're over

00:06:32,600 --> 00:06:35,480
jurisdictional bounds it's hard to

00:06:34,070 --> 00:06:37,160
prosecute them it's hard to go off to

00:06:35,480 --> 00:06:40,820
them so that kind of that's a kind of

00:06:37,160 --> 00:06:43,040
way of going an intermediate level but

00:06:40,820 --> 00:06:45,400
in both those cases something is

00:06:43,040 --> 00:06:48,140
different about that kind of usage and

00:06:45,400 --> 00:06:51,320
that brings us to kind of the first idea

00:06:48,140 --> 00:06:53,610
which is anomaly detection if most

00:06:51,320 --> 00:06:57,240
people on your mobile phone network

00:06:53,610 --> 00:07:00,569
top up on a pay-as-you-go scheme they

00:06:57,240 --> 00:07:03,120
top up around 20 30 40 pounds each

00:07:00,569 --> 00:07:05,099
payday then you kind of have a pattern

00:07:03,120 --> 00:07:07,979
about it if someone starts topping up 50

00:07:05,099 --> 00:07:10,169
quid 10 times a day that is unusual that

00:07:07,979 --> 00:07:12,659
is suspicious and perhaps we can detect

00:07:10,169 --> 00:07:14,699
that for a cloned phone if you are of

00:07:12,659 --> 00:07:16,680
calling mostly your friends who live in

00:07:14,699 --> 00:07:19,289
the same city as you and you sometimes

00:07:16,680 --> 00:07:21,509
call your parents who live you know a

00:07:19,289 --> 00:07:24,810
couple hundred miles away and you maybe

00:07:21,509 --> 00:07:28,379
order a pizza but then suddenly you're

00:07:24,810 --> 00:07:30,000
making 20 calls a day to Pakistan then

00:07:28,379 --> 00:07:32,310
there's something suspicious that has

00:07:30,000 --> 00:07:34,460
happened some big changes happen in your

00:07:32,310 --> 00:07:36,900
behavior and perhaps we can detect that

00:07:34,460 --> 00:07:38,669
so what I thought we'd look at as an

00:07:36,900 --> 00:07:42,020
example is something maybe a little bit

00:07:38,669 --> 00:07:44,629
closer to home which is click fraud so

00:07:42,020 --> 00:07:46,979
when you have pay-per-click advertising

00:07:44,629 --> 00:07:49,379
that is a source of income there's a

00:07:46,979 --> 00:07:51,210
place someone can make money and click

00:07:49,379 --> 00:07:54,150
fraud is when people are clicking on

00:07:51,210 --> 00:07:56,159
advertising without you know genuinely

00:07:54,150 --> 00:07:57,419
being interested in there in the product

00:07:56,159 --> 00:08:00,750
without going there to find out more

00:07:57,419 --> 00:08:02,669
about it and that is something that can

00:08:00,750 --> 00:08:04,440
be very difficult to detect now some

00:08:02,669 --> 00:08:05,759
people have clicked on competitors

00:08:04,440 --> 00:08:07,229
products to try and use of their

00:08:05,759 --> 00:08:08,669
marketing budget and so on which doesn't

00:08:07,229 --> 00:08:11,699
the network's pretty good at detecting

00:08:08,669 --> 00:08:13,770
that kind of low level activity but the

00:08:11,699 --> 00:08:16,770
bigger problem is you set up a site that

00:08:13,770 --> 00:08:18,979
has a lot of adverts on it and then push

00:08:16,770 --> 00:08:22,800
clicks through it using a click bot

00:08:18,979 --> 00:08:24,900
using maybe hacks so perhaps you use

00:08:22,800 --> 00:08:27,180
clickjacking and I frame overlay or

00:08:24,900 --> 00:08:29,099
something that is diverting clicks from

00:08:27,180 --> 00:08:31,229
a legitimate but exploited website to go

00:08:29,099 --> 00:08:33,659
and click on your ads or it could be

00:08:31,229 --> 00:08:35,219
simply that you are paying someone

00:08:33,659 --> 00:08:37,289
because if you make ten cents a click

00:08:35,219 --> 00:08:39,089
you can afford to pay someone six cents

00:08:37,289 --> 00:08:40,919
a click and that can turn into a

00:08:39,089 --> 00:08:43,649
reasonable wage in some parts of the

00:08:40,919 --> 00:08:46,110
world so that's tricky it's tricky to

00:08:43,649 --> 00:08:48,570
detect you you can look at it and say oh

00:08:46,110 --> 00:08:50,070
it was a bot so it all came from one IP

00:08:48,570 --> 00:08:53,040
and it was all in a very short duration

00:08:50,070 --> 00:08:54,630
but intelligent bots will go over hacked

00:08:53,040 --> 00:08:56,670
machines they will be over a botnet

00:08:54,630 --> 00:08:59,820
where you have millions of different IPS

00:08:56,670 --> 00:09:01,589
and a whole range of different machines

00:08:59,820 --> 00:09:03,120
and configurations actually connect into

00:09:01,589 --> 00:09:05,040
this so it might be difficult there and

00:09:03,120 --> 00:09:07,110
with human clickers it could be even

00:09:05,040 --> 00:09:12,149
worse there was a case in

00:09:07,110 --> 00:09:14,010
pan I think around 2006-2007 the Kia

00:09:12,149 --> 00:09:16,860
shinku I'm sure someone can pronounce

00:09:14,010 --> 00:09:19,019
Japanese and I mean credit card we're a

00:09:16,860 --> 00:09:21,300
few blogs in Japan had decided to

00:09:19,019 --> 00:09:22,589
complain about the fact that Japanese

00:09:21,300 --> 00:09:24,120
credit cards companies were really

00:09:22,589 --> 00:09:25,950
screwing over consumers charging really

00:09:24,120 --> 00:09:27,600
high rates and what they've done is is

00:09:25,950 --> 00:09:29,640
caused a protest where people would go

00:09:27,600 --> 00:09:31,079
and click on ads to use up the marketing

00:09:29,640 --> 00:09:33,390
budget but it was such a widespread

00:09:31,079 --> 00:09:36,540
thing it turning to a massive

00:09:33,390 --> 00:09:40,380
coordinated attack on the budgets and on

00:09:36,540 --> 00:09:42,390
the click on the click adverts of credit

00:09:40,380 --> 00:09:44,970
card companies in Japan that's almost

00:09:42,390 --> 00:09:47,279
indistinguishable from normal traffic if

00:09:44,970 --> 00:09:49,140
you just look click by click there's

00:09:47,279 --> 00:09:52,500
almost no way of saying that's different

00:09:49,140 --> 00:09:55,290
so what we'll do is look at just one

00:09:52,500 --> 00:09:57,300
signal and that signal will be number of

00:09:55,290 --> 00:10:01,380
clicks per day or a number of clicks per

00:09:57,300 --> 00:10:03,480
unit of time now RealNetworks will

00:10:01,380 --> 00:10:05,610
employ hundreds of signals they will

00:10:03,480 --> 00:10:07,740
employ as many different parameters as

00:10:05,610 --> 00:10:10,110
they can but the idea is pretty much the

00:10:07,740 --> 00:10:12,089
same and the idea is that you want to

00:10:10,110 --> 00:10:13,740
find the point of which things change so

00:10:12,089 --> 00:10:15,570
what we have here is some noisy data

00:10:13,740 --> 00:10:18,089
there's some clicks that happen

00:10:15,570 --> 00:10:21,029
throughout a week people clicking around

00:10:18,089 --> 00:10:22,860
and at some point some fraudulent

00:10:21,029 --> 00:10:24,420
traffic was added and you can kind of

00:10:22,860 --> 00:10:25,980
see plotted out like this you can see

00:10:24,420 --> 00:10:27,240
this bit higher there's some extra

00:10:25,980 --> 00:10:29,579
traffic in there there's something that

00:10:27,240 --> 00:10:31,500
wasn't supposed to be there but can we

00:10:29,579 --> 00:10:33,810
detect it what we would like to do is

00:10:31,500 --> 00:10:35,610
find this point but we have to think

00:10:33,810 --> 00:10:38,550
about two types of errors what if we

00:10:35,610 --> 00:10:41,670
find a point beforehand we say hey fraud

00:10:38,550 --> 00:10:43,380
is here well that's a false alarm we

00:10:41,670 --> 00:10:45,089
have to investigate it we have to see is

00:10:43,380 --> 00:10:46,800
anyone doing anything bad are they

00:10:45,089 --> 00:10:48,510
clicks we should be rejecting so that

00:10:46,800 --> 00:10:50,880
has cost to it that has little time and

00:10:48,510 --> 00:10:53,250
money cost to it but if we don't detect

00:10:50,880 --> 00:10:56,100
it by here then we're going to find that

00:10:53,250 --> 00:10:58,680
we have people exploiting us and

00:10:56,100 --> 00:11:00,690
potentially making money so we're paying

00:10:58,680 --> 00:11:03,000
out here as well this cost if we don't

00:11:00,690 --> 00:11:05,000
get this point right and those costs

00:11:03,000 --> 00:11:07,769
trade off if it's very cheap to detect

00:11:05,000 --> 00:11:09,750
investigate a fraud maybe you prefer to

00:11:07,769 --> 00:11:11,339
get a few false alarms if it's very

00:11:09,750 --> 00:11:13,589
expensive to investigate maybe you offer

00:11:11,339 --> 00:11:17,220
prefer to not pick up on a fraud right

00:11:13,589 --> 00:11:19,649
away so what we need to do is to build

00:11:17,220 --> 00:11:20,490
some kind of detector a most anomaly

00:11:19,649 --> 00:11:22,440
detection

00:11:20,490 --> 00:11:23,730
work in the same way working with a

00:11:22,440 --> 00:11:26,670
buffer they're working with a window

00:11:23,730 --> 00:11:30,270
they build up a moving window through

00:11:26,670 --> 00:11:31,800
time of the past period and they give

00:11:30,270 --> 00:11:33,600
that buffer to a detector which makes a

00:11:31,800 --> 00:11:35,279
decision based on what it's seen in

00:11:33,600 --> 00:11:37,860
recent history and what the current

00:11:35,279 --> 00:11:40,620
signals are the text is pretty simple

00:11:37,860 --> 00:11:42,390
all we do is from our buffer come up

00:11:40,620 --> 00:11:44,010
with an expected number of clicks so

00:11:42,390 --> 00:11:46,950
based on what we've seen for lost in

00:11:44,010 --> 00:11:50,910
days we expect today to have about this

00:11:46,950 --> 00:11:52,740
many and then if that is combined with

00:11:50,910 --> 00:11:55,529
the sensitivity a fixed value that we

00:11:52,740 --> 00:11:57,089
can give it that says we are this

00:11:55,529 --> 00:11:59,070
concerned about it we are that concerned

00:11:57,089 --> 00:12:00,300
about it gives us a threshold if it's

00:11:59,070 --> 00:12:02,220
not greater than the threshold we

00:12:00,300 --> 00:12:03,300
trigger alarm we say there's something's

00:12:02,220 --> 00:12:05,880
happening here needs investigating

00:12:03,300 --> 00:12:06,990
whether or not that's correct and we can

00:12:05,880 --> 00:12:10,560
build something like this very very

00:12:06,990 --> 00:12:12,810
easily so this is just some simple PHP

00:12:10,560 --> 00:12:15,270
with this fraud this fraud clicks file

00:12:12,810 --> 00:12:17,070
is in the gap and all we're doing is

00:12:15,270 --> 00:12:20,279
going to loop over it and build up a

00:12:17,070 --> 00:12:21,720
window seven days and out of that we're

00:12:20,279 --> 00:12:24,000
going to calculate two things we're

00:12:21,720 --> 00:12:27,079
going to calculate the average which is

00:12:24,000 --> 00:12:31,140
that and we're going to calculate the

00:12:27,079 --> 00:12:33,270
standard deviation and for people that

00:12:31,140 --> 00:12:36,329
maybe have blocked out some maths

00:12:33,270 --> 00:12:37,890
classes from many years ago the standard

00:12:36,329 --> 00:12:39,149
deviation and the average a part of

00:12:37,890 --> 00:12:41,640
something called the normal distribution

00:12:39,149 --> 00:12:43,380
the bell curve and those are two

00:12:41,640 --> 00:12:46,140
important parameters the average tells

00:12:43,380 --> 00:12:48,959
us where the middle is but the deviation

00:12:46,140 --> 00:12:51,959
or the variance tells us how wide the

00:12:48,959 --> 00:12:55,380
curves are so we can see that if we have

00:12:51,959 --> 00:12:58,529
had over the last week a very tight

00:12:55,380 --> 00:13:01,260
curve like this then higher values

00:12:58,529 --> 00:13:03,810
they're rare we don't expect them but if

00:13:01,260 --> 00:13:05,310
we've had a curveball that is brown one

00:13:03,810 --> 00:13:08,490
the higher values are much more likely

00:13:05,310 --> 00:13:11,040
you can see here 17 is 23 times more

00:13:08,490 --> 00:13:14,880
likely on the brown curve than it is on

00:13:11,040 --> 00:13:17,899
the blue so it allows us to measure our

00:13:14,880 --> 00:13:23,370
expectation measure how confident we are

00:13:17,899 --> 00:13:25,020
so all we do is take our average add a

00:13:23,370 --> 00:13:26,670
configurable number of standard

00:13:25,020 --> 00:13:28,230
deviations that's our sensitivity

00:13:26,670 --> 00:13:30,839
parameter that's just an argument we're

00:13:28,230 --> 00:13:33,449
going to pass in and if the current days

00:13:30,839 --> 00:13:34,290
clicks are higher than that well signal

00:13:33,449 --> 00:13:36,990
alarm will say

00:13:34,290 --> 00:13:38,339
needs to be looked I here so we can put

00:13:36,990 --> 00:13:40,440
that in and we'll get a little graph

00:13:38,339 --> 00:13:42,630
like this we can see that our expected

00:13:40,440 --> 00:13:45,540
value tracks just above our data and

00:13:42,630 --> 00:13:47,399
then just one day after frauds added it

00:13:45,540 --> 00:13:50,699
detects it and it says something's

00:13:47,399 --> 00:13:52,800
happened here but in the time before

00:13:50,699 --> 00:13:55,430
hand there are actually 18 points where

00:13:52,800 --> 00:13:57,870
it detects it it detects that the

00:13:55,430 --> 00:14:00,480
threshold has been breached by pure

00:13:57,870 --> 00:14:01,889
chance just by the random noise of the

00:14:00,480 --> 00:14:03,720
data no for would have been added at

00:14:01,889 --> 00:14:05,579
this point yet we've detected it so

00:14:03,720 --> 00:14:06,959
that's costing us a lot of time so maybe

00:14:05,579 --> 00:14:10,800
we'll think will increase the

00:14:06,959 --> 00:14:12,449
sensitivity great 2.7 sensitivity well

00:14:10,800 --> 00:14:14,759
we're tracking way above we only get one

00:14:12,449 --> 00:14:17,579
false alarm but then it takes us 18 days

00:14:14,759 --> 00:14:19,470
before we can actually detect fraud so

00:14:17,579 --> 00:14:20,910
we had to decide which way our trade

00:14:19,470 --> 00:14:23,100
office and obviously this is on data

00:14:20,910 --> 00:14:25,259
where we know exactly which day it is we

00:14:23,100 --> 00:14:28,050
can see how well we're doing in real

00:14:25,259 --> 00:14:29,819
life you don't know this you can't you

00:14:28,050 --> 00:14:31,410
can't determine which side of this

00:14:29,819 --> 00:14:33,209
you're on until you actually start

00:14:31,410 --> 00:14:35,610
getting results and investigating them

00:14:33,209 --> 00:14:37,980
so how can we improve on this is there a

00:14:35,610 --> 00:14:41,310
way to automatically detect the

00:14:37,980 --> 00:14:44,610
sensitivity and it turns out that there

00:14:41,310 --> 00:14:46,410
is and this is where those other signals

00:14:44,610 --> 00:14:48,540
come into play you can use other

00:14:46,410 --> 00:14:51,510
information to make your detection

00:14:48,540 --> 00:14:53,639
better so what we're going to use is a

00:14:51,510 --> 00:14:56,579
little bit of information that is built

00:14:53,639 --> 00:14:58,649
in to the data we already have which is

00:14:56,579 --> 00:15:00,569
which day of week it is because we might

00:14:58,649 --> 00:15:03,269
reasonably think that you get different

00:15:00,569 --> 00:15:04,800
traffic online to the kind of sites you

00:15:03,269 --> 00:15:06,899
advertise on on different days of the

00:15:04,800 --> 00:15:09,389
week and you might reasonably think that

00:15:06,899 --> 00:15:11,160
that would have an effect so if you in

00:15:09,389 --> 00:15:13,019
friday as a day everyone's messing about

00:15:11,160 --> 00:15:15,089
work and not doing anything there maybe

00:15:13,019 --> 00:15:16,500
is just more traffic around people click

00:15:15,089 --> 00:15:17,699
on more ads so you shouldn't be

00:15:16,500 --> 00:15:19,649
surprised if you see a higher number

00:15:17,699 --> 00:15:21,389
that day but if you see a high number on

00:15:19,649 --> 00:15:23,699
sunday where no one's online that's a

00:15:21,389 --> 00:15:25,230
concern so what we'll use is an

00:15:23,699 --> 00:15:27,149
algorithm called sickness availability

00:15:25,230 --> 00:15:28,350
but the general idea behind this is the

00:15:27,149 --> 00:15:31,290
way that you would bring in as many

00:15:28,350 --> 00:15:32,910
signals as you want now this comes from

00:15:31,290 --> 00:15:35,389
the world of biosurveillance which

00:15:32,910 --> 00:15:38,730
sounds cool but it's really about

00:15:35,389 --> 00:15:40,620
detecting outbreaks detecting disease so

00:15:38,730 --> 00:15:42,870
let's say that you are tracking how many

00:15:40,620 --> 00:15:45,449
people have the flu and you want to see

00:15:42,870 --> 00:15:46,769
is there about to be a big ramp up in

00:15:45,449 --> 00:15:47,290
the number of people who have the flu is

00:15:46,769 --> 00:15:48,940
there

00:15:47,290 --> 00:15:51,519
demak because we need to get stocks of

00:15:48,940 --> 00:15:54,670
vaccine and various other things set up

00:15:51,519 --> 00:15:56,320
well if there is then we need to

00:15:54,670 --> 00:15:57,910
consider two factors we need to consider

00:15:56,320 --> 00:16:00,279
how sick of people at the moment because

00:15:57,910 --> 00:16:02,230
a high number of people with the flu in

00:16:00,279 --> 00:16:04,149
the winter is way less unusual than a

00:16:02,230 --> 00:16:05,800
high number in the summer so we need to

00:16:04,149 --> 00:16:07,930
consider the general level of sickness

00:16:05,800 --> 00:16:10,120
and we also need to consider how many

00:16:07,930 --> 00:16:12,250
doctors there are because you can only

00:16:10,120 --> 00:16:14,110
be diagnosed with the flu if there's

00:16:12,250 --> 00:16:16,180
someone there to diagnose it and at

00:16:14,110 --> 00:16:18,100
weekends less doctors are at work so

00:16:16,180 --> 00:16:20,949
there is simply going to be a lower

00:16:18,100 --> 00:16:24,160
number so what Cygnus availability does

00:16:20,949 --> 00:16:28,480
is calculate two values the availability

00:16:24,160 --> 00:16:30,790
over the the day of the week so how much

00:16:28,480 --> 00:16:32,709
are people around on a Tuesday how much

00:16:30,790 --> 00:16:34,870
people around on Wednesday and the

00:16:32,709 --> 00:16:37,060
sickness which is over say the last week

00:16:34,870 --> 00:16:39,040
how sick have people been over that last

00:16:37,060 --> 00:16:41,829
period and that allows us to calculate

00:16:39,040 --> 00:16:44,560
an expected score using that expected

00:16:41,829 --> 00:16:46,870
score we work out a probability of

00:16:44,560 --> 00:16:47,980
getting the actual score we seen using

00:16:46,870 --> 00:16:49,949
something called a Poisson distribution

00:16:47,980 --> 00:16:52,360
which we'll come back to in a little bit

00:16:49,949 --> 00:16:54,639
so this is the detectives very much the

00:16:52,360 --> 00:16:55,870
same thing as we just saw going through

00:16:54,639 --> 00:16:57,880
the fraud clicks but this time we're

00:16:55,870 --> 00:17:01,120
building up to Windows we're building up

00:16:57,880 --> 00:17:03,880
to averages we're calculating the

00:17:01,120 --> 00:17:05,829
average for the day of the week so we're

00:17:03,880 --> 00:17:07,959
going to go through and work out what

00:17:05,829 --> 00:17:09,669
the average is for all previous

00:17:07,959 --> 00:17:12,100
Tuesday's for all previous Wednesday's

00:17:09,669 --> 00:17:14,559
for all previous Thursdays for the past

00:17:12,100 --> 00:17:17,319
week and we're also going to calculate

00:17:14,559 --> 00:17:19,780
how much the previous week had varied

00:17:17,319 --> 00:17:23,110
from the average so if we know that on

00:17:19,780 --> 00:17:25,569
Tuesday the average is 10 but on last

00:17:23,110 --> 00:17:27,040
Tuesday the actual score we saw the

00:17:25,569 --> 00:17:30,730
number of cases or in our case the

00:17:27,040 --> 00:17:33,610
number of clicks was 12 then the

00:17:30,730 --> 00:17:35,679
sickness is point2 for that day and

00:17:33,610 --> 00:17:37,270
we're just going to average them all up

00:17:35,679 --> 00:17:40,600
and divide them so we're going to get

00:17:37,270 --> 00:17:43,630
the average difference for each day to

00:17:40,600 --> 00:17:45,640
the previous days of the week and we're

00:17:43,630 --> 00:17:48,790
going to take that and calculate our

00:17:45,640 --> 00:17:51,490
availability which is simply further the

00:17:48,790 --> 00:17:53,650
current day of the week how many clicks

00:17:51,490 --> 00:17:56,200
have we usually seen and times that by

00:17:53,650 --> 00:17:57,669
the sickness so over the last week how

00:17:56,200 --> 00:18:00,040
much has traffic been moving up and down

00:17:57,669 --> 00:18:01,030
and that gives us our estimate we then

00:18:00,040 --> 00:18:03,070
plug the estimate in

00:18:01,030 --> 00:18:04,930
to our price on calculation and that

00:18:03,070 --> 00:18:06,640
spits out a probability saying given

00:18:04,930 --> 00:18:08,860
this estimate what's the probability of

00:18:06,640 --> 00:18:12,220
having seen the number we actually did

00:18:08,860 --> 00:18:13,660
and if that number is less than a

00:18:12,220 --> 00:18:15,940
certain sensitivity less than are

00:18:13,660 --> 00:18:20,350
configurable parameter we sing along if

00:18:15,940 --> 00:18:21,910
it isn't we we carry on and there's just

00:18:20,350 --> 00:18:23,830
a little bit more code that fills up the

00:18:21,910 --> 00:18:25,420
window so all we're actually doing is

00:18:23,830 --> 00:18:28,750
sticking the day of week into an array

00:18:25,420 --> 00:18:30,250
and summing over it so the interesting

00:18:28,750 --> 00:18:32,440
thing there is the different thing

00:18:30,250 --> 00:18:34,600
there's the Poisson distribution now the

00:18:32,440 --> 00:18:36,640
normal distribution was a smooth line

00:18:34,600 --> 00:18:38,170
but this isn't it's a bar chart because

00:18:36,640 --> 00:18:39,940
the price on distribution only deals

00:18:38,170 --> 00:18:43,390
with integers it's about event is about

00:18:39,940 --> 00:18:45,730
counts of things happening so this is a

00:18:43,390 --> 00:18:50,200
Poisson distribution for four I think

00:18:45,730 --> 00:18:52,990
and if we see if we get four if we if

00:18:50,200 --> 00:18:55,780
our estimated value is for the chance of

00:18:52,990 --> 00:18:57,280
seeing five pretty high like we

00:18:55,780 --> 00:18:58,990
shouldn't be surprised about that at all

00:18:57,280 --> 00:19:01,120
if we see a five we should be just as

00:18:58,990 --> 00:19:03,670
confident of Cena for if our average is

00:19:01,120 --> 00:19:07,030
that and it falls off as we move away

00:19:03,670 --> 00:19:09,760
and this models the behavior of really

00:19:07,030 --> 00:19:12,340
really well so we find if we plot our

00:19:09,760 --> 00:19:14,410
estimate against it using this algorithm

00:19:12,340 --> 00:19:16,570
we track the data pretty well not

00:19:14,410 --> 00:19:19,180
perfectly we actually get a false alarm

00:19:16,570 --> 00:19:21,730
but we only get one data today we kind

00:19:19,180 --> 00:19:23,980
of get the best of both averages because

00:19:21,730 --> 00:19:26,560
we've included this extra aspect of data

00:19:23,980 --> 00:19:29,560
we've included this extra average which

00:19:26,560 --> 00:19:32,050
we are tracking and doing larger anomaly

00:19:29,560 --> 00:19:33,760
detection you will track more and more

00:19:32,050 --> 00:19:36,550
averages you will pull more and more

00:19:33,760 --> 00:19:38,050
numbers together and look for correlated

00:19:36,550 --> 00:19:40,020
differences in them you will look for

00:19:38,050 --> 00:19:42,430
when all the measures go up at once

00:19:40,020 --> 00:19:45,370
which is this is good for clicks and you

00:19:42,430 --> 00:19:46,780
can use the same thing for a lot of

00:19:45,370 --> 00:19:48,310
different kind of measures likely are

00:19:46,780 --> 00:19:50,550
saying with the phone measures the

00:19:48,310 --> 00:19:53,170
average top up the average call duration

00:19:50,550 --> 00:19:55,240
the average number of calls today per

00:19:53,170 --> 00:19:57,550
day anything like that can be tracked in

00:19:55,240 --> 00:20:00,460
a similar measure and can be detected

00:19:57,550 --> 00:20:01,960
based on previous activity but of course

00:20:00,460 --> 00:20:04,840
a lot of fraud doesn't happen around

00:20:01,960 --> 00:20:08,470
clicks and ongoing activity it happens

00:20:04,840 --> 00:20:10,120
around transactions and how would we

00:20:08,470 --> 00:20:11,530
detect those because a lot of the time a

00:20:10,120 --> 00:20:13,780
transaction is the only interaction

00:20:11,530 --> 00:20:14,840
you've had with a site you go onto the

00:20:13,780 --> 00:20:17,210
site you purchase

00:20:14,840 --> 00:20:18,920
product you go away that's entirely

00:20:17,210 --> 00:20:20,480
legitimate and there's no history to

00:20:18,920 --> 00:20:23,420
compare it to you need a kind of

00:20:20,480 --> 00:20:24,740
different way of approaching it what we

00:20:23,420 --> 00:20:27,650
can take advantage of the fact that

00:20:24,740 --> 00:20:30,020
fraud commonly causes patterns and we

00:20:27,650 --> 00:20:33,290
can encode looking for those patterns

00:20:30,020 --> 00:20:37,160
into our systems to attempt to detect

00:20:33,290 --> 00:20:39,020
them so this is where rules and

00:20:37,160 --> 00:20:41,750
signatures come in this is where you

00:20:39,020 --> 00:20:43,160
start describing how fraud looks and let

00:20:41,750 --> 00:20:46,930
your system tell you whether you're

00:20:43,160 --> 00:20:49,340
getting it every domain is different I

00:20:46,930 --> 00:20:51,590
for example for people in the kind of

00:20:49,340 --> 00:20:53,840
auction space it used to be at least

00:20:51,590 --> 00:20:56,210
that if you were going to create a

00:20:53,840 --> 00:20:58,430
fraudulent do an auction fraud then you

00:20:56,210 --> 00:20:59,630
needed to have a lot of reputation on

00:20:58,430 --> 00:21:02,180
the site you needed to have a lot of

00:20:59,630 --> 00:21:04,100
whatever karma measure was used on the

00:21:02,180 --> 00:21:06,140
auction site so there would be a pretty

00:21:04,100 --> 00:21:07,700
common pattern fraudsters didn't want to

00:21:06,140 --> 00:21:11,090
hang around for a long time so they

00:21:07,700 --> 00:21:13,310
would buy a lot of low value items from

00:21:11,090 --> 00:21:15,230
sellers with high ratings over a short

00:21:13,310 --> 00:21:17,210
time so they can build up their feedback

00:21:15,230 --> 00:21:19,400
and they would go out and they were

00:21:17,210 --> 00:21:21,080
maybe do some high-value transactions so

00:21:19,400 --> 00:21:23,720
they look trustworthy but with other

00:21:21,080 --> 00:21:25,130
fraudulent accounts so a fraudster

00:21:23,720 --> 00:21:26,420
wouldn't just do one account they would

00:21:25,130 --> 00:21:27,920
do a whole bunch of accounts and have

00:21:26,420 --> 00:21:30,290
those do some deals so they're paying

00:21:27,920 --> 00:21:32,180
the auction fees but that's their only

00:21:30,290 --> 00:21:34,460
cost and if they can make enough on the

00:21:32,180 --> 00:21:36,200
back end of making the fraudulent

00:21:34,460 --> 00:21:38,150
transaction then it's worth it for them

00:21:36,200 --> 00:21:39,920
and you can encode knowledge about that

00:21:38,150 --> 00:21:41,630
pattern into a set of rules and flag up

00:21:39,920 --> 00:21:44,450
accounts flag things for people to look

00:21:41,630 --> 00:21:45,950
at so though it is very industry

00:21:44,450 --> 00:21:48,410
specific I thought I'd just talk about

00:21:45,950 --> 00:21:50,540
some of the kind of indicators you might

00:21:48,410 --> 00:21:54,500
want to consider in a generic ecommerce

00:21:50,540 --> 00:21:56,690
esent so one of them like we said is is

00:21:54,500 --> 00:21:58,250
this the first time the customers made a

00:21:56,690 --> 00:22:00,110
purchase just that on its own should

00:21:58,250 --> 00:22:02,870
give you a question just that on its own

00:22:00,110 --> 00:22:05,240
should be considered if they have if

00:22:02,870 --> 00:22:07,220
they have made a purchase before how

00:22:05,240 --> 00:22:08,300
similar is this purchase to the previous

00:22:07,220 --> 00:22:10,010
one if you've got someone that buys a

00:22:08,300 --> 00:22:12,950
book every couple of months and suddenly

00:22:10,010 --> 00:22:16,430
has bought 11 flat screen TVs something

00:22:12,950 --> 00:22:19,760
suspicious has happened how is it being

00:22:16,430 --> 00:22:21,250
shipped just like we don't tend to deal

00:22:19,760 --> 00:22:24,530
with everything you know we have a big

00:22:21,250 --> 00:22:27,350
problem with some UX we get an aux

00:22:24,530 --> 00:22:28,669
consultant people committing fraud do

00:22:27,350 --> 00:22:30,379
the same thing they

00:22:28,669 --> 00:22:31,580
won't all do the end to end of the

00:22:30,379 --> 00:22:34,009
operation a different group of people

00:22:31,580 --> 00:22:35,809
will steal the credit card numbers a

00:22:34,009 --> 00:22:38,239
different group will make the orders a

00:22:35,809 --> 00:22:40,789
third group will receive it its separate

00:22:38,239 --> 00:22:42,590
people and so they want to get that bit

00:22:40,789 --> 00:22:44,749
done as fast as possible receiving stuff

00:22:42,590 --> 00:22:46,820
is one the riskiest parts so they will

00:22:44,749 --> 00:22:48,049
ignore free shipping people will just

00:22:46,820 --> 00:22:49,460
pay they don't care it's not their

00:22:48,049 --> 00:22:51,019
credit card they can just pay a bunch

00:22:49,460 --> 00:22:53,059
extras have the stuff shipped there

00:22:51,019 --> 00:22:54,919
immediately they might ship to locations

00:22:53,059 --> 00:22:56,659
that are not usual if you ship mostly to

00:22:54,919 --> 00:22:59,659
homes and suddenly your ship into an

00:22:56,659 --> 00:23:02,029
industrial location or your ship into a

00:22:59,659 --> 00:23:03,859
cafe that's suspicious something is

00:23:02,029 --> 00:23:05,779
going on there and are there lots of

00:23:03,859 --> 00:23:07,970
orders going to the same address for

00:23:05,779 --> 00:23:09,859
many cards or vice versa one card to

00:23:07,970 --> 00:23:11,659
many different addresses that can be

00:23:09,859 --> 00:23:13,850
indicative of something unusual not

00:23:11,659 --> 00:23:15,350
necessarily a red flag in itself but

00:23:13,850 --> 00:23:17,600
something that can be part of a

00:23:15,350 --> 00:23:19,850
combination you can go to all sorts of

00:23:17,600 --> 00:23:23,659
levels one interesting thing I saw was

00:23:19,850 --> 00:23:26,029
comparing the name on the card to the

00:23:23,659 --> 00:23:27,799
email address used lots of people don't

00:23:26,029 --> 00:23:30,350
have email addresses met the matchup but

00:23:27,799 --> 00:23:32,119
lots of people do and it's something

00:23:30,350 --> 00:23:33,830
most fraudsters aren't going to spend

00:23:32,119 --> 00:23:36,169
the time to go down they're going to

00:23:33,830 --> 00:23:37,879
just use whatever email they have maybe

00:23:36,169 --> 00:23:39,739
a free email or maybe even one of those

00:23:37,879 --> 00:23:41,269
disposable domains that just lets you

00:23:39,739 --> 00:23:43,940
access the email you don't even have to

00:23:41,269 --> 00:23:45,559
create an account so comparing the name

00:23:43,940 --> 00:23:47,539
which we're doing here with similar text

00:23:45,559 --> 00:23:49,429
and is going to just give us a score of

00:23:47,539 --> 00:23:50,840
how close the name is to the email

00:23:49,429 --> 00:23:53,029
address whether it's close to the first

00:23:50,840 --> 00:23:54,320
part close to the domain is an

00:23:53,029 --> 00:23:55,909
interesting way it can give you a

00:23:54,320 --> 00:23:57,350
positive sign or it can give you a

00:23:55,909 --> 00:24:03,710
negative sign me in combination with the

00:23:57,350 --> 00:24:06,289
other rules it could work well what

00:24:03,710 --> 00:24:08,149
about the velocity if someone again

00:24:06,289 --> 00:24:10,369
makes an order from you once a month but

00:24:08,149 --> 00:24:12,440
suddenly has made 50 orders or a certain

00:24:10,369 --> 00:24:14,629
card has made 100 orders in a very short

00:24:12,440 --> 00:24:16,639
time especially across a network of

00:24:14,629 --> 00:24:18,919
sites that's suspicious this is what

00:24:16,639 --> 00:24:20,779
people like Visa and MasterCard can use

00:24:18,919 --> 00:24:24,019
to really pick up on this because fraud

00:24:20,779 --> 00:24:26,299
is pretty easy to detect if you know all

00:24:24,019 --> 00:24:28,879
of the card transactions happening at a

00:24:26,299 --> 00:24:31,609
given time you can see real correlated

00:24:28,879 --> 00:24:33,769
activity between a bunch of sites and

00:24:31,609 --> 00:24:35,749
what about the speed of location if

00:24:33,769 --> 00:24:39,129
someone places an order with you in

00:24:35,749 --> 00:24:42,349
London and then 30 seconds later in LA

00:24:39,129 --> 00:24:42,770
something suspicious has happened look

00:24:42,349 --> 00:24:44,990
at G

00:24:42,770 --> 00:24:47,150
I p if someone places in order with you

00:24:44,990 --> 00:24:51,860
and the shipping addresses to Germany

00:24:47,150 --> 00:24:54,410
the card location is the UK and the

00:24:51,860 --> 00:24:57,800
geoip says they're in Russia that might

00:24:54,410 --> 00:25:00,050
be worth looking at now pros will use

00:24:57,800 --> 00:25:01,460
proxies you can buy proxied computers

00:25:00,050 --> 00:25:03,560
from the same place that you're going to

00:25:01,460 --> 00:25:06,020
buy credit cards so it's not a foolproof

00:25:03,560 --> 00:25:08,330
thing but geoip can be a really good way

00:25:06,020 --> 00:25:10,640
of detecting how coherent and order is

00:25:08,330 --> 00:25:12,590
internally and of course what kind of

00:25:10,640 --> 00:25:15,260
thing is being ordered if someone is

00:25:12,590 --> 00:25:16,670
ordering well ebooks they're unlikely to

00:25:15,260 --> 00:25:20,000
be committing a fraud you can't really

00:25:16,670 --> 00:25:22,790
resell those but if they're taking TVs

00:25:20,000 --> 00:25:24,560
or small electric cars or iPods iPads

00:25:22,790 --> 00:25:26,510
that kind of thing you can resell those

00:25:24,560 --> 00:25:28,070
you can get good value of them anything

00:25:26,510 --> 00:25:31,940
that would do well on an auction site

00:25:28,070 --> 00:25:34,430
you can yoga expensive handbags jewelry

00:25:31,940 --> 00:25:36,350
that kind of thing anything that could

00:25:34,430 --> 00:25:38,420
be resold for good money is much more

00:25:36,350 --> 00:25:40,430
likely to be targeted than this but

00:25:38,420 --> 00:25:41,990
people kept clever in the same way as

00:25:40,430 --> 00:25:43,820
using the premium rate phone lines they

00:25:41,990 --> 00:25:45,290
might use an affiliate network so if

00:25:43,820 --> 00:25:47,720
suddenly one of your affiliates is doing

00:25:45,290 --> 00:25:49,250
a crazy amount of traffic to unusual

00:25:47,720 --> 00:25:51,320
places that could be something

00:25:49,250 --> 00:25:53,870
suspicious that could be something to

00:25:51,320 --> 00:25:55,640
look into so this is cool and we can

00:25:53,870 --> 00:25:58,070
write things like this and we can

00:25:55,640 --> 00:26:00,050
compute a suspicion score we can compute

00:25:58,070 --> 00:26:01,550
a score that we say this is indicative

00:26:00,050 --> 00:26:03,500
of a fraud this is time to be

00:26:01,550 --> 00:26:06,500
investigated but we're not learning from

00:26:03,500 --> 00:26:08,180
that anyone that has data already we'll

00:26:06,500 --> 00:26:10,280
have some fraud in their system that

00:26:08,180 --> 00:26:12,500
they've detected and stopped it would be

00:26:10,280 --> 00:26:14,240
good to use that data or data that is

00:26:12,500 --> 00:26:16,430
picked up once you have a suspicion

00:26:14,240 --> 00:26:18,410
score and build something that looks for

00:26:16,430 --> 00:26:20,780
a more subtle relation that combines the

00:26:18,410 --> 00:26:23,180
data you have with the rules with the

00:26:20,780 --> 00:26:24,590
signatures you've detected and that's

00:26:23,180 --> 00:26:26,930
what you can do using machine learning

00:26:24,590 --> 00:26:29,540
algorithms now the one we're going to

00:26:26,930 --> 00:26:31,360
look at is the one Rasmus introduced

00:26:29,540 --> 00:26:33,440
this morning support vector machines and

00:26:31,360 --> 00:26:35,420
support banks means machines are a

00:26:33,440 --> 00:26:38,720
fantastic fantastic algorithm it's a

00:26:35,420 --> 00:26:41,300
very simple to understand algorithm it's

00:26:38,720 --> 00:26:45,350
very simple to use the maths is insanely

00:26:41,300 --> 00:26:47,870
complex and it works very well so what

00:26:45,350 --> 00:26:50,060
we'll do is take all of our rules and

00:26:47,870 --> 00:26:52,430
encode them into a record so rather than

00:26:50,060 --> 00:26:54,860
putting in a record like the price the

00:26:52,430 --> 00:26:56,530
address the order time stuff like that

00:26:54,860 --> 00:26:58,660
stuff that you would have in a normal

00:26:56,530 --> 00:27:01,000
transaction system we will encode of

00:26:58,660 --> 00:27:03,400
rules into them we will say okay what's

00:27:01,000 --> 00:27:04,900
the geoip country will put that in we'll

00:27:03,400 --> 00:27:07,330
put in whether the delivery address

00:27:04,900 --> 00:27:09,010
matches the card address we'll put in a

00:27:07,330 --> 00:27:11,140
load of stuff here you wouldn't want

00:27:09,010 --> 00:27:12,580
this in your transaction database as is

00:27:11,140 --> 00:27:14,770
you wouldn't want this to be the only

00:27:12,580 --> 00:27:16,780
record you stored but this is encoding

00:27:14,770 --> 00:27:20,350
the knowledge from our rules into a row

00:27:16,780 --> 00:27:23,680
and we take that and we would then use

00:27:20,350 --> 00:27:27,670
that information to classify against so

00:27:23,680 --> 00:27:29,920
as Rasmus said earlier what you do when

00:27:27,670 --> 00:27:32,800
you are using support vector machines is

00:27:29,920 --> 00:27:35,950
to try and find a separator between data

00:27:32,800 --> 00:27:38,110
in a certain dimensionality space this

00:27:35,950 --> 00:27:42,670
is a two-dimensional space it's just a

00:27:38,110 --> 00:27:45,610
graph each of the record entries each of

00:27:42,670 --> 00:27:47,140
the columns in our row would have been

00:27:45,610 --> 00:27:49,150
another dimension so we're really

00:27:47,140 --> 00:27:50,830
talking about say 20 dimensional space

00:27:49,150 --> 00:27:52,990
and in reality you're probably talking

00:27:50,830 --> 00:27:55,180
one hundred a thousand dimensional space

00:27:52,990 --> 00:27:57,340
maybe higher maybe less maybe not all of

00:27:55,180 --> 00:27:59,080
them filled in and svm is great for

00:27:57,340 --> 00:28:01,540
those kind of situations but the idea is

00:27:59,080 --> 00:28:03,460
the same we have this space and what

00:28:01,540 --> 00:28:06,040
we're assuming is that there is a way of

00:28:03,460 --> 00:28:09,010
drawing a line or plane or hyper plane

00:28:06,040 --> 00:28:10,840
through all of those points so that on

00:28:09,010 --> 00:28:12,610
one side we have the fraudulent stuff

00:28:10,840 --> 00:28:15,130
and on the other side we have the

00:28:12,610 --> 00:28:16,720
legitimate stuff but the question is

00:28:15,130 --> 00:28:19,000
what line do we draw when you can draw

00:28:16,720 --> 00:28:21,610
that line that works but we could draw

00:28:19,000 --> 00:28:23,380
this line as well why is the other one

00:28:21,610 --> 00:28:25,690
better they both separate the data they

00:28:23,380 --> 00:28:29,020
both work well one of the key intuitions

00:28:25,690 --> 00:28:32,740
at the heart of svm is that the one with

00:28:29,020 --> 00:28:35,110
the most margin is the best because that

00:28:32,740 --> 00:28:38,320
has the biggest possibility of error you

00:28:35,110 --> 00:28:40,690
can be wrong the most with this one and

00:28:38,320 --> 00:28:42,940
still get the right answer so what it

00:28:40,690 --> 00:28:45,760
looks for is to find the separating

00:28:42,940 --> 00:28:50,710
plane that has the largest margin to the

00:28:45,760 --> 00:28:52,900
points on either side and one of the

00:28:50,710 --> 00:28:55,720
things that makes SVM fast is there only

00:28:52,900 --> 00:28:57,700
needs to store the points that define

00:28:55,720 --> 00:28:59,830
the line it can throw away all the

00:28:57,700 --> 00:29:01,330
others so even if you have 10 million

00:28:59,830 --> 00:29:04,480
transactions which you're throwing into

00:29:01,330 --> 00:29:05,980
it it might store 200 because those are

00:29:04,480 --> 00:29:08,020
the ones that did find where the line

00:29:05,980 --> 00:29:10,029
goes through the data set and that makes

00:29:08,020 --> 00:29:11,769
it very quick to use

00:29:10,029 --> 00:29:13,869
training might take a little while but

00:29:11,769 --> 00:29:16,450
the actual use of it the classifying is

00:29:13,869 --> 00:29:18,159
done very quickly and it's these that

00:29:16,450 --> 00:29:20,229
give it its names instead of points that

00:29:18,159 --> 00:29:22,629
referred to as vectors and because they

00:29:20,229 --> 00:29:26,039
support the line these are the support

00:29:22,629 --> 00:29:28,690
vectors the support vector machine finds

00:29:26,039 --> 00:29:30,309
so we have to do something to actually

00:29:28,690 --> 00:29:32,619
see whether our classifier is helping

00:29:30,309 --> 00:29:34,330
though when we were looking at our

00:29:32,619 --> 00:29:38,049
nominee detection we knew we had days to

00:29:34,330 --> 00:29:40,389
detect and the false alarms and we have

00:29:38,049 --> 00:29:42,339
a similar measure with our classifier

00:29:40,389 --> 00:29:45,099
but we have to train it slightly

00:29:42,339 --> 00:29:46,960
differently we have to take our data

00:29:45,099 --> 00:29:49,419
some of which is fraud some which is

00:29:46,960 --> 00:29:50,830
legitimate and give it to a learner that

00:29:49,419 --> 00:29:53,379
will give us a model they will give us

00:29:50,830 --> 00:29:55,029
the support vectors but we don't want to

00:29:53,379 --> 00:29:56,889
give it all the data because we need to

00:29:55,029 --> 00:29:58,719
know how it does we need to know how it

00:29:56,889 --> 00:30:01,119
will work on data it has never seen

00:29:58,719 --> 00:30:03,279
before so we hold some back we take a

00:30:01,119 --> 00:30:05,320
few fraud examples we take a bunch of

00:30:03,279 --> 00:30:07,419
legitimate examples we don't give them

00:30:05,320 --> 00:30:09,219
to it on the training and once we have

00:30:07,419 --> 00:30:10,869
the model we take the test data in the

00:30:09,219 --> 00:30:13,839
model give it to the classifier and it

00:30:10,869 --> 00:30:16,149
tells us how accurate it is so the way

00:30:13,839 --> 00:30:17,710
we would integrate this into a payment

00:30:16,149 --> 00:30:19,119
system is pretty straightforward you

00:30:17,710 --> 00:30:21,249
just have your regular transaction

00:30:19,119 --> 00:30:22,899
processor and as well as doing whatever

00:30:21,249 --> 00:30:24,639
it normally does it would ping off to a

00:30:22,899 --> 00:30:26,409
classifier which would just say hey this

00:30:24,639 --> 00:30:27,820
is fraud or this is not fraud and you

00:30:26,409 --> 00:30:29,739
would take whatever action you need it

00:30:27,820 --> 00:30:32,739
to take we'll talk more about that in a

00:30:29,739 --> 00:30:34,690
little bit but then you would have your

00:30:32,739 --> 00:30:38,289
transaction database be the source for

00:30:34,690 --> 00:30:41,049
your learning so that as you got more

00:30:38,289 --> 00:30:43,269
examples of legitimate and illegitimate

00:30:41,049 --> 00:30:44,979
traffic you could pass them to the

00:30:43,269 --> 00:30:47,469
learner and your detector would get

00:30:44,979 --> 00:30:49,059
better so as you got more fraud or more

00:30:47,469 --> 00:30:52,149
legitimate traffic you could improve the

00:30:49,059 --> 00:30:54,339
quality of your detector but it's

00:30:52,149 --> 00:30:55,869
important to note that it's not this

00:30:54,339 --> 00:30:58,119
judgment here this is a dotted line

00:30:55,869 --> 00:30:59,889
because it's not automatically just

00:30:58,119 --> 00:31:01,719
chucking everything it said is fraud or

00:30:59,889 --> 00:31:02,919
not forward into the learner it's only

00:31:01,719 --> 00:31:04,659
doing ones they've been manually

00:31:02,919 --> 00:31:06,599
verified because otherwise it's kind of

00:31:04,659 --> 00:31:09,549
listening to itself it gets into a loop

00:31:06,599 --> 00:31:12,339
so the code we are using is a live SVM

00:31:09,549 --> 00:31:15,369
that's available in package management

00:31:12,339 --> 00:31:17,529
most places it works on windows as well

00:31:15,369 --> 00:31:19,149
it's pretty widely available and there's

00:31:17,529 --> 00:31:22,690
a petal extension which you can just

00:31:19,149 --> 00:31:23,690
install via packing there's also windows

00:31:22,690 --> 00:31:25,159
builds on this

00:31:23,690 --> 00:31:28,879
which i can give you the URL for if

00:31:25,159 --> 00:31:30,440
you're interested later and what we will

00:31:28,879 --> 00:31:33,019
do to use it is pretty straightforward

00:31:30,440 --> 00:31:34,879
we need to take the data we had earlier

00:31:33,019 --> 00:31:37,759
and transform it into the form at the

00:31:34,879 --> 00:31:40,730
lib SVM users lib SVM views everything

00:31:37,759 --> 00:31:43,580
is arranged a float from range minus 1

00:31:40,730 --> 00:31:45,799
to 1 so we have to transform everything

00:31:43,580 --> 00:31:48,049
into that if it's a boolean like hey is

00:31:45,799 --> 00:31:50,389
this order coming from China well we

00:31:48,049 --> 00:31:53,330
will just say 1 or minus 1 sure Falls

00:31:50,389 --> 00:31:56,000
for the price will take the average so

00:31:53,330 --> 00:31:58,129
we'll go if the price we have ranges

00:31:56,000 --> 00:32:00,710
from 50 quid for an item to 200 quid for

00:31:58,129 --> 00:32:02,480
an item will have 50 quid to be

00:32:00,710 --> 00:32:05,269
represented by minus one and two hundred

00:32:02,480 --> 00:32:07,580
quid be represented by one and work with

00:32:05,269 --> 00:32:10,309
that same basis so that we transform all

00:32:07,580 --> 00:32:12,529
the data in the same way we take all of

00:32:10,309 --> 00:32:15,980
our rows like that and then we pass them

00:32:12,529 --> 00:32:18,860
to our train function and because fraud

00:32:15,980 --> 00:32:21,320
is rarer than non fraud we can actually

00:32:18,860 --> 00:32:22,940
wait it and say yeah we actually think

00:32:21,320 --> 00:32:24,679
this category is more important because

00:32:22,940 --> 00:32:26,000
by default it's going to not quite get

00:32:24,679 --> 00:32:29,480
it right it's going to assume the two

00:32:26,000 --> 00:32:31,490
classes even for example if you're doing

00:32:29,480 --> 00:32:34,429
spam detecting actually the amount of

00:32:31,490 --> 00:32:35,870
spam and legitimate is pretty close for

00:32:34,429 --> 00:32:38,059
some people is way more spam than

00:32:35,870 --> 00:32:39,860
legitimate but for most there's a lot of

00:32:38,059 --> 00:32:43,159
spam and there's a lot of regular email

00:32:39,860 --> 00:32:45,200
so 5050 is ok but for fraud fraud is

00:32:43,159 --> 00:32:46,669
wave rarer so we want to be able to tune

00:32:45,200 --> 00:32:48,529
that and in fact there's a lot of other

00:32:46,669 --> 00:32:51,200
parameters we can tune which you can

00:32:48,529 --> 00:32:53,379
read about the documentation and what

00:32:51,200 --> 00:32:56,509
that does is gives us a model the model

00:32:53,379 --> 00:32:57,919
allows us to do make a prediction so we

00:32:56,509 --> 00:32:59,779
then have just looping back over the

00:32:57,919 --> 00:33:02,960
test data and making a prediction about

00:32:59,779 --> 00:33:05,029
that so this is just checking we gave

00:33:02,960 --> 00:33:06,769
you this data to learn on now is it

00:33:05,029 --> 00:33:08,090
correct and that allows us to make sure

00:33:06,769 --> 00:33:09,559
we haven't ballsed anything up we

00:33:08,090 --> 00:33:12,950
haven't SAT there and thrown some

00:33:09,559 --> 00:33:15,620
invalid data into an awful thing so what

00:33:12,950 --> 00:33:17,480
we can do next is actually take our test

00:33:15,620 --> 00:33:19,570
data so this is data we've never seen

00:33:17,480 --> 00:33:22,850
before it's coming from a new file and

00:33:19,570 --> 00:33:24,440
we pass that with our new model that we

00:33:22,850 --> 00:33:26,389
trained before and make the same

00:33:24,440 --> 00:33:27,559
predictions and for each one we're just

00:33:26,389 --> 00:33:29,870
going to calculate these four values

00:33:27,559 --> 00:33:32,539
true positives so that's where it said

00:33:29,870 --> 00:33:34,399
it wasn't fraud and it wasn't fraud true

00:33:32,539 --> 00:33:37,530
negatives when it said it was fraud and

00:33:34,399 --> 00:33:39,240
it was fraud false positive

00:33:37,530 --> 00:33:41,910
when it said it wasn't fraud but it was

00:33:39,240 --> 00:33:44,010
I'm false negative when it said it was

00:33:41,910 --> 00:33:45,570
fraud but it wasn't and overall we just

00:33:44,010 --> 00:33:47,730
calculate the accuracy which is the two

00:33:45,570 --> 00:33:49,140
true ones over the law so what

00:33:47,730 --> 00:33:51,060
percentage of the time we were correct

00:33:49,140 --> 00:33:52,860
and the values we get a pretty good

00:33:51,060 --> 00:33:55,550
without doing anything without doing any

00:33:52,860 --> 00:33:57,990
optimization we can get no point 998

00:33:55,550 --> 00:33:59,670
accuracy on the training data which

00:33:57,990 --> 00:34:01,050
means we couldn't quite separate the

00:33:59,670 --> 00:34:02,850
training data perfectly which is

00:34:01,050 --> 00:34:04,500
accurate in real life he rarely can

00:34:02,850 --> 00:34:06,060
separate things perfectly it's an

00:34:04,500 --> 00:34:07,650
indication you need to go back and

00:34:06,060 --> 00:34:10,350
change what kind of data you're giving

00:34:07,650 --> 00:34:12,540
to the algorithm and we find on the test

00:34:10,350 --> 00:34:15,659
data which we never seen before we get a

00:34:12,540 --> 00:34:17,220
good accuracy as well so we can do this

00:34:15,659 --> 00:34:19,710
we can build something that can do this

00:34:17,220 --> 00:34:21,120
and you're accuracies may vary from this

00:34:19,710 --> 00:34:23,760
depending on what your data is of course

00:34:21,120 --> 00:34:25,740
but how would we then integrate it

00:34:23,760 --> 00:34:27,659
because as much as this is important as

00:34:25,740 --> 00:34:30,390
much as this is great stuff to work on

00:34:27,659 --> 00:34:32,669
it's almost more important to do the

00:34:30,390 --> 00:34:35,040
other stuff because this bit is

00:34:32,669 --> 00:34:37,159
automated you detect some fraud and you

00:34:35,040 --> 00:34:40,050
know it's there but what happens next

00:34:37,159 --> 00:34:42,390
someone has to look at that and building

00:34:40,050 --> 00:34:43,950
the tools to do that can be almost more

00:34:42,390 --> 00:34:46,020
important if you look at the stuff

00:34:43,950 --> 00:34:48,720
PayPal has built for fraud detection a

00:34:46,020 --> 00:34:50,850
great deal of it it's for analysis it's

00:34:48,720 --> 00:34:52,740
not for just detection it's actually for

00:34:50,850 --> 00:34:54,929
looking at the data and finding out

00:34:52,740 --> 00:34:56,040
where the fraud is happening who is

00:34:54,929 --> 00:34:57,930
doing it and getting as much information

00:34:56,040 --> 00:34:59,430
as possible so they can stop it from

00:34:57,930 --> 00:35:02,520
happening so they can validate whether

00:34:59,430 --> 00:35:04,740
it has happened and then you have to

00:35:02,520 --> 00:35:06,270
update the system so like I said you

00:35:04,740 --> 00:35:07,740
don't want to have the classifier listen

00:35:06,270 --> 00:35:09,870
to itself you want to have the

00:35:07,740 --> 00:35:12,750
classifier get new data new information

00:35:09,870 --> 00:35:14,820
and that has to come from the

00:35:12,750 --> 00:35:16,710
information it suggested being validated

00:35:14,820 --> 00:35:19,800
so if it's like something is fraud and

00:35:16,710 --> 00:35:22,590
it's not that can go back if it flags

00:35:19,800 --> 00:35:24,630
something not as fraud it doesn't catch

00:35:22,590 --> 00:35:26,340
it and you later determined it is that's

00:35:24,630 --> 00:35:27,900
really important to go back into the

00:35:26,340 --> 00:35:29,400
training set to make your detector

00:35:27,900 --> 00:35:35,760
better but it doesn't just listen to

00:35:29,400 --> 00:35:38,250
itself so there's a tool there that is

00:35:35,760 --> 00:35:41,700
usable but we don't always want to work

00:35:38,250 --> 00:35:43,260
with PHP for these kind of things we

00:35:41,700 --> 00:35:45,060
might have other demands there are some

00:35:43,260 --> 00:35:46,800
great libraries out there the rabbit rap

00:35:45,060 --> 00:35:48,810
live svn and other tools you've got

00:35:46,800 --> 00:35:49,260
shogun in c-bus class sweater which is

00:35:48,810 --> 00:35:52,080
kind of

00:35:49,260 --> 00:35:54,810
pleasant but in Java and one of the most

00:35:52,080 --> 00:35:57,180
interesting is mahou I'm out is a java

00:35:54,810 --> 00:35:58,830
system that is built on top of Hadoop so

00:35:57,180 --> 00:36:00,720
it's really designed to do this learning

00:35:58,830 --> 00:36:02,910
a very large scale of a very large data

00:36:00,720 --> 00:36:05,510
sets which not everyone has but if you

00:36:02,910 --> 00:36:08,430
do it might be an interesting tool i

00:36:05,510 --> 00:36:10,530
mentioned that geoip is important and i

00:36:08,430 --> 00:36:12,240
also mentioned that visa have ways of

00:36:10,530 --> 00:36:14,610
detecting things because they see so

00:36:12,240 --> 00:36:17,040
much for tapping across their network

00:36:14,610 --> 00:36:19,320
well go over a max mind or two of the

00:36:17,040 --> 00:36:21,030
big geoip services and they actually do

00:36:19,320 --> 00:36:23,310
offer fraud products which give you some

00:36:21,030 --> 00:36:25,680
of that network effect that give you

00:36:23,310 --> 00:36:30,020
some of that benefit to to tap into so

00:36:25,680 --> 00:36:35,700
they're interesting and sorry about that

00:36:30,020 --> 00:36:40,080
the other the other thing that they can

00:36:35,700 --> 00:36:41,550
do is allow you some degree of access to

00:36:40,080 --> 00:36:43,890
what everyone else is doing so you can

00:36:41,550 --> 00:36:45,720
see on their network there have been

00:36:43,890 --> 00:36:46,950
issues around this there have been

00:36:45,720 --> 00:36:49,200
issues around that that can give you

00:36:46,950 --> 00:36:53,250
some good information to work with and

00:36:49,200 --> 00:36:54,840
of course do the basics verified by visa

00:36:53,250 --> 00:36:56,520
secure code they're not great systems

00:36:54,840 --> 00:36:58,530
there are ways around them and they are

00:36:56,520 --> 00:37:01,260
in many ways just the liability shift

00:36:58,530 --> 00:37:05,370
but they do reduce fraud slightly and

00:37:01,260 --> 00:37:07,140
doing things like cvv verification doing

00:37:05,370 --> 00:37:09,660
things like AVS verification all that

00:37:07,140 --> 00:37:11,040
kind of stuff reduces fraud from that

00:37:09,660 --> 00:37:12,720
point two percent to that point one

00:37:11,040 --> 00:37:14,460
percent it makes it rare us so it's

00:37:12,720 --> 00:37:17,070
important to do the basics and it's

00:37:14,460 --> 00:37:20,010
important to be able to make your system

00:37:17,070 --> 00:37:21,420
the the house with the alarm so that the

00:37:20,010 --> 00:37:24,570
fraudsters go down the block so they

00:37:21,420 --> 00:37:26,880
look somewhere else so I hope I've given

00:37:24,570 --> 00:37:28,500
you a little bit of a idea about some of

00:37:26,880 --> 00:37:31,500
the ways people use to detect fraud and

00:37:28,500 --> 00:37:33,390
maybe some ideas to go and look for and

00:37:31,500 --> 00:37:35,790
have discussions about in your own

00:37:33,390 --> 00:37:37,940
businesses and that's about it thank you

00:37:35,790 --> 00:37:37,940
very much

00:37:43,340 --> 00:37:49,370
how we um do we have time for questions

00:37:45,450 --> 00:37:54,210
oh we have five minutes for questions ok

00:37:49,370 --> 00:37:56,250
not so just a question about SVM so if

00:37:54,210 --> 00:37:58,670
you give it say there's a hundred

00:37:56,250 --> 00:38:01,710
properties you think might be important

00:37:58,670 --> 00:38:03,210
but actually most on the rubbish and svm

00:38:01,710 --> 00:38:05,100
tell you know a sea of those are

00:38:03,210 --> 00:38:10,020
completely useless don't bother me with

00:38:05,100 --> 00:38:11,580
those um not it's not like it's going to

00:38:10,020 --> 00:38:14,400
flag up to you and say these are bad

00:38:11,580 --> 00:38:16,380
values I mean it's it's important to

00:38:14,400 --> 00:38:19,290
actually test some of this stuff so

00:38:16,380 --> 00:38:21,540
where we had a test set and training set

00:38:19,290 --> 00:38:23,910
you would in reality usually have three

00:38:21,540 --> 00:38:25,620
sets usually have a test set a training

00:38:23,910 --> 00:38:27,450
certain of validation set and what you

00:38:25,620 --> 00:38:29,190
would do is bounce between two of them

00:38:27,450 --> 00:38:31,200
trying out different variations to

00:38:29,190 --> 00:38:32,550
maximize and then finally test that on

00:38:31,200 --> 00:38:35,220
the test sets you have something truly

00:38:32,550 --> 00:38:37,080
clean and what you do a higher

00:38:35,220 --> 00:38:39,180
complexity is actually provide your data

00:38:37,080 --> 00:38:41,790
into a whole bunch of things and then

00:38:39,180 --> 00:38:43,620
for each situation train on say a

00:38:41,790 --> 00:38:45,390
quarter of the data test on another

00:38:43,620 --> 00:38:47,520
quarter validate on another quarter and

00:38:45,390 --> 00:38:49,200
mix it up so that you're constantly

00:38:47,520 --> 00:38:52,410
looping through the whole training and

00:38:49,200 --> 00:38:55,920
testing process with different sets of

00:38:52,410 --> 00:38:57,960
data SVM really doesn't care about the

00:38:55,920 --> 00:39:00,570
level of data you have to call the

00:38:57,960 --> 00:39:03,090
sparseness of data it's good at dealing

00:39:00,570 --> 00:39:05,760
with very big matrices that are mostly

00:39:03,090 --> 00:39:07,590
nothing so you can usually be a bit

00:39:05,760 --> 00:39:09,720
excessive and Chuck a bit more data into

00:39:07,590 --> 00:39:11,280
it and the problem is more generally

00:39:09,720 --> 00:39:13,470
that you don't have the right data than

00:39:11,280 --> 00:39:14,700
you have than you do but yeah it's

00:39:13,470 --> 00:39:16,260
completely possible to get into that

00:39:14,700 --> 00:39:17,550
situation where you've chucked a lot of

00:39:16,260 --> 00:39:22,020
stuff of it most of which is doing

00:39:17,550 --> 00:39:24,000
nothing does it worry you that

00:39:22,020 --> 00:39:25,830
fraudsters might use this software to

00:39:24,000 --> 00:39:30,660
design better frauds yeah when they of

00:39:25,830 --> 00:39:32,760
course that's what I would do your you

00:39:30,660 --> 00:39:34,500
constantly need to be if if everyone

00:39:32,760 --> 00:39:37,050
here started using like really good

00:39:34,500 --> 00:39:38,550
geoip detection to pick up fraud one you

00:39:37,050 --> 00:39:40,610
probably pick up a lot of fraud right

00:39:38,550 --> 00:39:42,480
now but then in six months you won't

00:39:40,610 --> 00:39:43,830
people change how they're working

00:39:42,480 --> 00:39:47,160
constantly and this is one of the things

00:39:43,830 --> 00:39:48,840
that makes it difficult the software

00:39:47,160 --> 00:39:50,220
itself is unlikely to change but the

00:39:48,840 --> 00:39:53,190
kind of data you're putting into it is

00:39:50,220 --> 00:39:54,810
so as different techniques evolved

00:39:53,190 --> 00:39:56,820
different signatures appear and

00:39:54,810 --> 00:39:57,930
different opportunities arise

00:39:56,820 --> 00:40:01,380
you're going to see more that kind of

00:39:57,930 --> 00:40:03,420
fraud so for example chip-and-pin has

00:40:01,380 --> 00:40:06,660
had a big effect on how fraud is done

00:40:03,420 --> 00:40:09,180
with cards in the UK doesn't mean that

00:40:06,660 --> 00:40:11,250
there's less fraud per se it means that

00:40:09,180 --> 00:40:12,810
it's moved to different areas so it's a

00:40:11,250 --> 00:40:20,310
yeah it is a constantly evolving thing

00:40:12,810 --> 00:40:24,120
oh yeah you mentioned the accuracy score

00:40:20,310 --> 00:40:26,100
right well your last lights the school

00:40:24,120 --> 00:40:29,280
that you're using has the same problems

00:40:26,100 --> 00:40:31,500
as the original kind of little gritty

00:40:29,280 --> 00:40:32,880
showed before where you where your

00:40:31,500 --> 00:40:34,500
accuracy does it's not true measure of

00:40:32,880 --> 00:40:36,330
how exactly how are you recording the

00:40:34,500 --> 00:40:38,190
data would it not be better to you

00:40:36,330 --> 00:40:40,380
something like the f1 school yeah yeah

00:40:38,190 --> 00:40:41,630
that's I mean that's a good point son

00:40:40,380 --> 00:40:43,830
ellas most making the point that

00:40:41,630 --> 00:40:48,030
accuracy is kind of a bad measure

00:40:43,830 --> 00:40:49,770
because it like if I just took a fraud

00:40:48,030 --> 00:40:52,350
there's only one in a thousand cases and

00:40:49,770 --> 00:40:53,670
I say it's not fraud all the time line

00:40:52,350 --> 00:40:55,740
literally I don't make a detective and

00:40:53,670 --> 00:40:57,630
just say it's not fraud my accuracy

00:40:55,740 --> 00:41:00,240
would be really good because it's so

00:40:57,630 --> 00:41:03,960
rare so yeah there are scores like the F

00:41:00,240 --> 00:41:06,450
measure and other statistics you can

00:41:03,960 --> 00:41:08,820
compute the account for unbalanced class

00:41:06,450 --> 00:41:10,380
is a lot better absolutely right you

00:41:08,820 --> 00:41:12,090
would you would want to use those and

00:41:10,380 --> 00:41:14,040
they're in almost any introductory

00:41:12,090 --> 00:41:15,420
machine learning text you should be able

00:41:14,040 --> 00:41:16,950
to find some information about that or

00:41:15,420 --> 00:41:18,960
grab me afterwards if you're interested

00:41:16,950 --> 00:41:22,130
but yeah great point I think we've got

00:41:18,960 --> 00:41:28,410
time for just one more I've got 10

00:41:22,130 --> 00:41:29,550
markets that's one I feel bad I just

00:41:28,410 --> 00:41:31,410
wanted to ask how did you learn this

00:41:29,550 --> 00:41:33,300
stuff is there some literature that you

00:41:31,410 --> 00:41:37,050
recommend that target toward software

00:41:33,300 --> 00:41:38,940
engineers I some of it came out of

00:41:37,050 --> 00:41:40,800
there's a good book on it came actually

00:41:38,940 --> 00:41:44,190
of information retrieval I was quite

00:41:40,800 --> 00:41:46,740
interested in that and there's a a good

00:41:44,190 --> 00:41:48,240
book by Chris Manning which talks about

00:41:46,740 --> 00:41:49,740
machine learning actually as part of

00:41:48,240 --> 00:41:53,070
information retrieval so I kind of got

00:41:49,740 --> 00:41:56,040
interested in it then and Stanford yeah

00:41:53,070 --> 00:41:58,350
now this month so one of the free

00:41:56,040 --> 00:42:00,540
Stanford courses is the machine learning

00:41:58,350 --> 00:42:02,610
course which is excellent very very good

00:42:00,540 --> 00:42:04,770
it uses octaver just kind like MATLAB

00:42:02,610 --> 00:42:06,600
for most of the programming but you will

00:42:04,770 --> 00:42:08,250
get all of the concepts very well

00:42:06,600 --> 00:42:09,329
explained it's all done online so i

00:42:08,250 --> 00:42:12,059
definitely recommend that

00:42:09,329 --> 00:42:14,969
yeah excellent course and there are a

00:42:12,059 --> 00:42:16,739
lot of resources out there machine

00:42:14,969 --> 00:42:18,059
learning people like to talk so there's

00:42:16,739 --> 00:42:21,089
plenty of papers plenty of information

00:42:18,059 --> 00:42:23,670
online okay so an absolutely last

00:42:21,089 --> 00:42:25,259
question yes you couldn't get the the

00:42:23,670 --> 00:42:30,809
graph up where it's cutting the dividing

00:42:25,259 --> 00:42:32,969
line up a year from one of these yeah

00:42:30,809 --> 00:42:34,469
they'll do that that one's perfect if

00:42:32,969 --> 00:42:36,299
you've got noisy data if one of those

00:42:34,469 --> 00:42:37,709
little crosses is on the wrong side yeah

00:42:36,299 --> 00:42:39,839
that's going to screw this thing up

00:42:37,709 --> 00:42:41,700
royally isn't it well what's the best

00:42:39,839 --> 00:42:43,709
way what's best way you found of coping

00:42:41,700 --> 00:42:46,140
with it well there's two things for one

00:42:43,709 --> 00:42:48,690
you are almost always not going to be

00:42:46,140 --> 00:42:52,670
using an actual straight line so by

00:42:48,690 --> 00:42:55,650
default with SVM it uses a Gaussian

00:42:52,670 --> 00:42:57,390
kernel so it actually is mapping it to

00:42:55,650 --> 00:42:59,009
more spaces which means it can cope with

00:42:57,390 --> 00:43:02,519
it but if you actually just have bad

00:42:59,009 --> 00:43:04,559
data there is a parameter in SVM called

00:43:02,519 --> 00:43:07,769
see which is how much it will trade off

00:43:04,559 --> 00:43:10,079
having a nicer simpler solution for

00:43:07,769 --> 00:43:12,089
having are things on the wrong side of

00:43:10,079 --> 00:43:15,150
the line so it will prefer a simpler

00:43:12,089 --> 00:43:16,920
curve with some erroneous data if you

00:43:15,150 --> 00:43:18,539
give it a certain value of C and that's

00:43:16,920 --> 00:43:20,069
what I would generally do because you

00:43:18,539 --> 00:43:21,539
don't know this is happening so you're

00:43:20,069 --> 00:43:23,400
just seeing it when you're doing

00:43:21,539 --> 00:43:24,449
validation as you look at the test and

00:43:23,400 --> 00:43:26,190
training data you're seeing you're not

00:43:24,449 --> 00:43:27,900
getting the results you expecting and

00:43:26,190 --> 00:43:29,459
you can vary some of those parameters

00:43:27,900 --> 00:43:31,349
and see how it goes and actually there

00:43:29,459 --> 00:43:32,910
are some tools that will automatically

00:43:31,349 --> 00:43:34,890
test the whole range of parameters and

00:43:32,910 --> 00:43:37,619
give you information back if you found

00:43:34,890 --> 00:43:40,890
that to be enough because x on the data

00:43:37,619 --> 00:43:44,699
set it's it is very very varied whether

00:43:40,890 --> 00:43:46,739
it you can get good information out of

00:43:44,699 --> 00:43:48,599
it but I found if I have a problem with

00:43:46,739 --> 00:43:50,519
that I don't worry about the algorithm I

00:43:48,599 --> 00:43:53,479
go back to the original data okay very

00:43:50,519 --> 00:43:53,479
much that was a really

00:43:54,710 --> 00:43:56,770
you

00:44:05,290 --> 00:44:07,350

YouTube URL: https://www.youtube.com/watch?v=xvujYOErFqM


