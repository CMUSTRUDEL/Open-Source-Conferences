Title: PHP UK Conference 2012 - PHP 5.4: the new bits, by Davey Shafik
Publication date: 2012-03-27
Playlist: PHP UK Conference 2012
Description: 
	http://www.phpconference.co.uk/talk/php-54-new-bits

PHP 5.4 is about to be unleashed into the world; bringing some of the most exciting changes to the PHP language to date. Learn about traits, array dereferencing, indirect method calls using array callback syntax and improvements to closures and streams.

Additionally, we'll go back over the new bits in PHP 5.3, in case you missed them! Namespaces, closures and PHAR, oh my!

 
Davey Shafik has been working with PHP and the LAMP stack, as well as HTML, CSS, and JavaScript for over a decade. With several books, articles, and conference appearances under his belt, he enjoys teaching others any way he can. An avid photographer, he lives in sunny Florida with his wife and six cats.
Captions: 
	00:00:07,069 --> 00:00:12,719
okay okay and everybody hear me ok if I

00:00:10,770 --> 00:00:16,320
good morning it's still afternoon

00:00:12,719 --> 00:00:18,720
project weird haha okay so i'm actually

00:00:16,320 --> 00:00:20,700
not just going to cover a bit more i'm

00:00:18,720 --> 00:00:23,880
going to cover just about everything the

00:00:20,700 --> 00:00:26,520
change so this is a really really high

00:00:23,880 --> 00:00:31,050
level but quick talk and you'll see what

00:00:26,520 --> 00:00:32,850
we excel at so I am Amy Shepherd I'm an

00:00:31,050 --> 00:00:35,489
engineer and engine are for the

00:00:32,850 --> 00:00:37,440
orchestra platform-as-a-service it's

00:00:35,489 --> 00:00:39,420
really cool I've written three separate

00:00:37,440 --> 00:00:41,309
books if anyone since I was five you may

00:00:39,420 --> 00:00:42,840
have read the first one this is my

00:00:41,309 --> 00:00:44,989
newest one and have to copy something

00:00:42,840 --> 00:00:47,550
giving away today Lee between tomorrow

00:00:44,989 --> 00:00:50,820
so a bit more on that at the end so that

00:00:47,550 --> 00:00:53,100
kind of me jack thursday i am a

00:00:50,820 --> 00:00:54,480
long-term contributors of hair i was one

00:00:53,100 --> 00:00:59,519
of the initial contributors to said

00:00:54,480 --> 00:01:01,079
framework anyone needs in fremont if

00:00:59,519 --> 00:01:02,460
you've done any of the websites of stuff

00:01:01,079 --> 00:01:05,670
and same framework that's kind of minor

00:01:02,460 --> 00:01:07,440
matters work so that's cool i also work

00:01:05,670 --> 00:01:10,440
from fracking anyone who is crappy for

00:01:07,440 --> 00:01:13,640
web services check it out it's really

00:01:10,440 --> 00:01:18,390
cool so the best closer this is Kramer

00:01:13,640 --> 00:01:20,330
I'm Abdi traffic on Twitter Follow Me In

00:01:18,390 --> 00:01:25,250
care about my in 10 yards I do

00:01:20,330 --> 00:01:29,600
by the HP but mostly not please buy my

00:01:25,250 --> 00:01:31,910
books there is one more thing in this is

00:01:29,600 --> 00:01:33,800
quite important I am hard of hearing so

00:01:31,910 --> 00:01:35,750
if you have a question they've got a

00:01:33,800 --> 00:01:37,850
mind if I can't hear you I'll just walk

00:01:35,750 --> 00:01:40,400
over the police sticker and then we ever

00:01:37,850 --> 00:01:42,440
want to hear you as well so everybody

00:01:40,400 --> 00:01:45,950
does forget this every type of this some

00:01:42,440 --> 00:01:47,930
of this tiny wisp Reni's like no ok one

00:01:45,950 --> 00:01:49,610
more thing actually I'm British living

00:01:47,930 --> 00:01:53,450
in America my max has changed so just

00:01:49,610 --> 00:01:57,080
ignore it so one more thing i like about

00:01:53,450 --> 00:01:59,150
it's about mudslides i actually do this

00:01:57,080 --> 00:02:01,280
thing where nobody likes to read what

00:01:59,150 --> 00:02:03,110
I'm saying so I've got to I about this

00:02:01,280 --> 00:02:05,420
and then another one behind it their

00:02:03,110 --> 00:02:06,560
toes but this is what you'll take up so

00:02:05,420 --> 00:02:08,390
this is information if you take home

00:02:06,560 --> 00:02:09,700
I'll just get past these so just ignore

00:02:08,390 --> 00:02:12,970
those slides but they're in the debt

00:02:09,700 --> 00:02:16,410
hopefully people will like them so

00:02:12,970 --> 00:02:18,460
that's let's get into the content

00:02:16,410 --> 00:02:19,900
so the very small stuff and I'm actually

00:02:18,460 --> 00:02:22,130
supposed to be able to see both sides of

00:02:19,900 --> 00:02:24,060
this very moment

00:02:22,130 --> 00:02:27,050
but I was supposed to be able to read

00:02:24,060 --> 00:02:27,050
now just like you don't see

00:02:30,860 --> 00:02:36,950
okay okay so very school stuff there's

00:02:35,750 --> 00:02:38,570
been a change will not change with

00:02:36,950 --> 00:02:41,320
addition to sessions i'm sure most

00:02:38,570 --> 00:02:44,570
everybody diffuse exceptions we've had a

00:02:41,320 --> 00:02:46,550
session handler interface anyone's done

00:02:44,570 --> 00:02:48,920
custom sessions using sessions at state

00:02:46,550 --> 00:02:51,020
handler you stop attacks in a whole

00:02:48,920 --> 00:02:53,150
bunch of callbacks there's an hour class

00:02:51,020 --> 00:02:55,940
you just extend Oh an interface you can

00:02:53,150 --> 00:02:57,620
extend sexually handler interface and

00:02:55,940 --> 00:02:59,480
you just implement the method to pass in

00:02:57,620 --> 00:03:01,870
one object and it automatically

00:02:59,480 --> 00:03:05,120
registers all of the different callbacks

00:03:01,870 --> 00:03:07,790
there's now we each be very confident

00:03:05,120 --> 00:03:11,600
which tells you where each pin finally

00:03:07,790 --> 00:03:13,550
be convicted so very small stuff as

00:03:11,600 --> 00:03:15,230
Rasmus mentioned there's no notice on a

00:03:13,550 --> 00:03:17,690
range finger versions and import that's

00:03:15,230 --> 00:03:19,489
quite important you actually take note

00:03:17,690 --> 00:03:22,880
to suppose it is almost definitely above

00:03:19,489 --> 00:03:25,430
if you see that much better memories

00:03:22,880 --> 00:03:27,830
usage memory usage and performance if

00:03:25,430 --> 00:03:30,530
you saw the hordes increase in 53 it's

00:03:27,830 --> 00:03:32,810
even better to 54 and in my own testing

00:03:30,530 --> 00:03:35,480
the difference between 53 and 54 is

00:03:32,810 --> 00:03:40,700
greater than between 52 and 53 53 was

00:03:35,480 --> 00:03:42,470
quite a job so that's pretty cool so I

00:03:40,700 --> 00:03:43,870
do want to go a little bit more on the

00:03:42,470 --> 00:03:45,790
ass

00:03:43,870 --> 00:03:48,310
its technical it's really simple

00:03:45,790 --> 00:03:51,310
standard interface these are the five

00:03:48,310 --> 00:03:53,739
full batt said to call backs that you

00:03:51,310 --> 00:03:56,099
were passing before implement the

00:03:53,739 --> 00:04:00,299
interface and just pass in instead of

00:03:56,099 --> 00:04:02,470
individual functions implement Lee

00:04:00,299 --> 00:04:05,079
implement the interface and passive

00:04:02,470 --> 00:04:07,540
stretching one object there is a default

00:04:05,079 --> 00:04:09,150
class exception handler that

00:04:07,540 --> 00:04:14,200
automatically does the current behavior

00:04:09,150 --> 00:04:15,340
which you can extend so if you just want

00:04:14,200 --> 00:04:17,260
to change the serialization you can

00:04:15,340 --> 00:04:20,049
actually do that by extended session

00:04:17,260 --> 00:04:22,000
handler change to JSON say I've said

00:04:20,049 --> 00:04:25,270
katie serialization you lose a lot of

00:04:22,000 --> 00:04:28,020
features and I think it's doable so

00:04:25,270 --> 00:04:29,979
language changes has been quite a few

00:04:28,020 --> 00:04:32,470
every single one of those baptists we

00:04:29,979 --> 00:04:35,949
have all it's quite cool short their

00:04:32,470 --> 00:04:38,289
contact the first amar equals it's now

00:04:35,949 --> 00:04:40,690
always rather which is really useful for

00:04:38,289 --> 00:04:41,740
templates if you've done views in sort

00:04:40,690 --> 00:04:42,969
of zend framework kind of like that

00:04:41,740 --> 00:04:46,860
you've probably come across

00:04:42,969 --> 00:04:52,679
so that's pretty cool the binary numbers

00:04:46,860 --> 00:04:55,959
0ki set at zero X or zero October I

00:04:52,679 --> 00:05:00,879
can't think of a single use for this but

00:04:55,959 --> 00:05:05,110
it today okay in the array syntax it

00:05:00,879 --> 00:05:07,419
saves you five characters but it's still

00:05:05,110 --> 00:05:10,299
handling and I actually quite like it in

00:05:07,419 --> 00:05:12,789
slides so that's my prime use for it and

00:05:10,299 --> 00:05:15,809
actually bit more off so yeah just the

00:05:12,789 --> 00:05:17,979
square brackets instead of the array a

00:05:15,809 --> 00:05:20,589
reindeer referencing this is actually

00:05:17,979 --> 00:05:22,119
quite a cool one it's tricky this is

00:05:20,589 --> 00:05:24,009
when he bought a function is immediately

00:05:22,119 --> 00:05:25,959
access the other words in the Arabian

00:05:24,009 --> 00:05:30,759
return you clearly once you've lost the

00:05:25,959 --> 00:05:32,559
array at the end of it so you really

00:05:30,759 --> 00:05:33,819
have to know what you get it back quite

00:05:32,559 --> 00:05:34,719
honestly if you do know that you

00:05:33,819 --> 00:05:35,799
probably should have worked a different

00:05:34,719 --> 00:05:41,569
function that returns actually what you

00:05:35,799 --> 00:05:43,510
want so doable I would give it

00:05:41,569 --> 00:05:46,900
dynamic mythical

00:05:43,510 --> 00:05:48,220
so there's been a few changes here all

00:05:46,900 --> 00:05:51,130
along you've been able to do dollar bar

00:05:48,220 --> 00:05:53,260
equals function in and then do colorbar

00:05:51,130 --> 00:05:55,840
two parentheses right that's pretty easy

00:05:53,260 --> 00:05:57,850
stuff but you never could do static

00:05:55,840 --> 00:06:01,480
methods on classes and you could do with

00:05:57,850 --> 00:06:04,120
other object arrow curly braces method

00:06:01,480 --> 00:06:08,290
name so you can actually do static

00:06:04,120 --> 00:06:09,930
methods as well so that's people the

00:06:08,290 --> 00:06:11,890
second one year is this throw away class

00:06:09,930 --> 00:06:15,460
instantiate and immediately access a

00:06:11,890 --> 00:06:17,370
method again you lose your class what

00:06:15,460 --> 00:06:20,440
you do with the array dereferencing so

00:06:17,370 --> 00:06:23,440
it's kind of useless and if ever said

00:06:20,440 --> 00:06:25,240
static and almost always the answer not

00:06:23,440 --> 00:06:27,910
the static is necessarily a good thing

00:06:25,240 --> 00:06:30,610
but it's definitely better than it I

00:06:27,910 --> 00:06:32,740
think and you can actually combine some

00:06:30,610 --> 00:06:36,630
of this syntax when you've got a

00:06:32,740 --> 00:06:38,889
variable method to be calling on a

00:06:36,630 --> 00:06:41,050
extension

00:06:38,889 --> 00:06:44,169
you're gonna throw away please don't

00:06:41,050 --> 00:06:46,840
write code like this he's gonna want to

00:06:44,169 --> 00:06:48,249
read it in addition to these has

00:06:46,840 --> 00:06:50,409
actually been a lot of improvements to

00:06:48,249 --> 00:06:53,889
close this and callbacks and we have had

00:06:50,409 --> 00:06:56,020
callbacks and PHP forever and we've had

00:06:53,889 --> 00:06:58,689
three different syntaxes which is simply

00:06:56,020 --> 00:07:00,669
a function as a string and then two

00:06:58,689 --> 00:07:02,590
different arrays types one way you have

00:07:00,669 --> 00:07:04,569
the object is the first key and when we

00:07:02,590 --> 00:07:05,529
have the method and you actually passing

00:07:04,569 --> 00:07:06,999
the object you know the other ones we

00:07:05,529 --> 00:07:11,590
have the class name and a statute meant

00:07:06,999 --> 00:07:14,710
it and those you can always use in all

00:07:11,590 --> 00:07:16,930
user hunt or call user func array we've

00:07:14,710 --> 00:07:20,169
actually now turn those into proper I

00:07:16,930 --> 00:07:22,949
call that just like clothes so you can

00:07:20,169 --> 00:07:24,699
do an array and then do the packet but

00:07:22,949 --> 00:07:31,539
assignment or something first and then

00:07:24,699 --> 00:07:33,490
do very bad so that's pretty cool we've

00:07:31,539 --> 00:07:35,050
now got a call of all type in which is

00:07:33,490 --> 00:07:36,789
really useful you can actually pass in

00:07:35,050 --> 00:07:38,589
just about anything as long as it's a

00:07:36,789 --> 00:07:40,089
valid cool actually if it is about a

00:07:38,589 --> 00:07:41,710
call that you can pass in anything but

00:07:40,089 --> 00:07:44,500
that means you can passing strange

00:07:41,710 --> 00:07:45,370
mareas closures or a class with a min

00:07:44,500 --> 00:07:48,440
look

00:07:45,370 --> 00:07:55,190
methods anyone not seen the invoke

00:07:48,440 --> 00:07:57,050
method yet good this is great so the

00:07:55,190 --> 00:07:59,240
other be clean that's in there is X last

00:07:57,050 --> 00:08:01,760
one here per dollar this inside of

00:07:59,240 --> 00:08:04,760
closures you can actually in my opinion

00:08:01,760 --> 00:08:07,070
break the entire object model with this

00:08:04,760 --> 00:08:10,520
new feature but I have one use case for

00:08:07,070 --> 00:08:13,250
it which which I've mentioned so let's

00:08:10,520 --> 00:08:17,240
take a look at the portable type in it's

00:08:13,250 --> 00:08:19,430
really just the same as a rails or class

00:08:17,240 --> 00:08:21,230
named right there callable and every

00:08:19,430 --> 00:08:23,570
single wanna please whether its closure

00:08:21,230 --> 00:08:26,090
a single standard function name or the

00:08:23,570 --> 00:08:29,330
to arrive a rate hikes and now about to

00:08:26,090 --> 00:08:32,150
go into function with that signature as

00:08:29,330 --> 00:08:34,400
well as a class this is the one I think

00:08:32,150 --> 00:08:37,970
is going to catch people but it's not as

00:08:34,400 --> 00:08:40,700
obvious I think of these and lithium

00:08:37,970 --> 00:08:43,040
does a lot with in both classes lots of

00:08:40,700 --> 00:08:45,420
magic there so be careful with this one

00:08:43,040 --> 00:08:47,639
I think

00:08:45,420 --> 00:08:51,990
and as I say any single one of these

00:08:47,639 --> 00:08:54,529
should be called for work so this

00:08:51,990 --> 00:08:59,190
includes this is the complication of God

00:08:54,529 --> 00:09:02,100
quite a bit of slides on this later so

00:08:59,190 --> 00:09:04,649
these are actually we have latest after

00:09:02,100 --> 00:09:07,380
finding with PHP 5 free so self and

00:09:04,649 --> 00:09:12,720
Harold and double underscore flash

00:09:07,380 --> 00:09:15,570
stones or later static finding this is

00:09:12,720 --> 00:09:19,440
early find it it's based on the time

00:09:15,570 --> 00:09:21,449
when you define the function so it's

00:09:19,440 --> 00:09:24,199
based on the object in which you create

00:09:21,449 --> 00:09:30,990
the callback always unless you change it

00:09:24,199 --> 00:09:34,440
that's great so in a deity 53 we do this

00:09:30,990 --> 00:09:36,899
type of syntax we're gettin on that it

00:09:34,440 --> 00:09:39,690
if I form we actually get the class

00:09:36,899 --> 00:09:42,470
that's called where it's defined not the

00:09:39,690 --> 00:09:45,620
one where we call so we have a class bar

00:09:42,470 --> 00:09:48,690
we create a new food get the closure

00:09:45,620 --> 00:09:49,920
this is going to be food not far so it's

00:09:48,690 --> 00:09:53,120
not where it's called it's where it's

00:09:49,920 --> 00:09:53,120
defined it's early

00:09:56,760 --> 00:10:02,670
ok so the irate call backs as I

00:10:00,720 --> 00:10:04,890
mentioned before you could do string

00:10:02,670 --> 00:10:06,300
name into our variable throw the

00:10:04,890 --> 00:10:08,100
parentheses after can be able to call it

00:10:06,300 --> 00:10:11,580
you can now do the same thing with both

00:10:08,100 --> 00:10:15,750
static calls with an array and instance

00:10:11,580 --> 00:10:18,630
methods so time to cool again a lot of

00:10:15,750 --> 00:10:20,970
these are obfuscating the code so use

00:10:18,630 --> 00:10:22,620
them sparingly I think this is better

00:10:20,970 --> 00:10:23,910
though than call user func our baby

00:10:22,620 --> 00:10:25,770
there's an extra function call they're

00:10:23,910 --> 00:10:28,650
just a little bit of overhead that I

00:10:25,770 --> 00:10:35,310
don't know you know is it anymore

00:10:28,650 --> 00:10:38,670
already so rebinding next morn how to

00:10:35,310 --> 00:10:40,050
break the object model I'm not sure if I

00:10:38,670 --> 00:10:42,810
like this feature but I do have a really

00:10:40,050 --> 00:10:44,970
good use case for it so there's two ways

00:10:42,810 --> 00:10:46,530
that you can revise this you can

00:10:44,970 --> 00:10:49,130
actually change the object that this

00:10:46,530 --> 00:10:52,110
refers to and you can change the scope

00:10:49,130 --> 00:10:55,590
within which are accessing this and that

00:10:52,110 --> 00:10:57,180
second one is the tricky one so very

00:10:55,590 --> 00:11:00,830
importantly when you're reminded it

00:10:57,180 --> 00:11:00,830
doesn't change the original closure

00:11:00,850 --> 00:11:06,120
doesn't change I we're gonna close if it

00:11:02,470 --> 00:11:09,639
returns a copy with the rebound this

00:11:06,120 --> 00:11:12,399
this can be any object so if you have

00:11:09,639 --> 00:11:14,860
execute you can assign it and as I said

00:11:12,399 --> 00:11:17,980
this and the scope are separate so you

00:11:14,860 --> 00:11:20,350
can actually rebind this in a way that

00:11:17,980 --> 00:11:21,970
it's like your accent accessing one

00:11:20,350 --> 00:11:23,829
class from another and you have this

00:11:21,970 --> 00:11:26,649
thing I just would you know the same

00:11:23,829 --> 00:11:27,970
level of access as you would being

00:11:26,649 --> 00:11:30,009
outside of the objects you don't have

00:11:27,970 --> 00:11:32,350
access to private methods properties

00:11:30,009 --> 00:11:36,279
stuff like that so let's look at that a

00:11:32,350 --> 00:11:40,360
little bit and see what the hell this

00:11:36,279 --> 00:11:42,759
does forest so in this case were just

00:11:40,360 --> 00:11:45,870
clash good just getting a closure

00:11:42,759 --> 00:11:45,870
there's a really do much

00:11:50,790 --> 00:11:58,700
apologies so then we have bar

00:11:54,350 --> 00:12:04,880
which is implementing our world function

00:11:58,700 --> 00:12:08,400
up there so what we're doing here is

00:12:04,880 --> 00:12:11,640
we're going to instantiate foo get back

00:12:08,400 --> 00:12:14,310
our flew off debt grab our closure which

00:12:11,640 --> 00:12:16,670
curtain has dollar this is instance of

00:12:14,310 --> 00:12:19,290
food then we're going to go a grab bar

00:12:16,670 --> 00:12:21,900
and this is a bar and we're going to

00:12:19,290 --> 00:12:25,080
rebind and we're rebind at the bar what

00:12:21,900 --> 00:12:27,420
this means is is that up here where

00:12:25,080 --> 00:12:29,280
we're doing this world now that we've

00:12:27,420 --> 00:12:32,700
changed what this means we're now

00:12:29,280 --> 00:12:35,070
looking at this object this impact or

00:12:32,700 --> 00:12:36,150
this this code actually will run whereas

00:12:35,070 --> 00:12:39,110
before and every would happen because

00:12:36,150 --> 00:12:42,150
there's no world function inside of food

00:12:39,110 --> 00:12:43,920
again if you're doing this you confuse

00:12:42,150 --> 00:12:48,030
somebody I know I just review some of

00:12:43,920 --> 00:12:50,610
you right so this is the those two

00:12:48,030 --> 00:12:53,550
syntaxes here that's bind to which is on

00:12:50,610 --> 00:12:57,420
the closure instance and then there's

00:12:53,550 --> 00:12:59,820
closure static find this takes two

00:12:57,420 --> 00:13:03,980
arguments the first one is the object to

00:12:59,820 --> 00:13:06,750
bind to the second one is the scope

00:13:03,980 --> 00:13:08,810
default is if you only have one in it

00:13:06,750 --> 00:13:11,650
uses the scope of that

00:13:08,810 --> 00:13:11,650
as well

00:13:12,960 --> 00:13:18,710
so

00:13:15,490 --> 00:13:20,840
normally i took this disproved but

00:13:18,710 --> 00:13:23,620
instead normally you wouldn't be able to

00:13:20,840 --> 00:13:26,780
access bar world because it's private

00:13:23,620 --> 00:13:28,550
from food so we'd have this private

00:13:26,780 --> 00:13:29,810
function here you wouldn't normally be

00:13:28,550 --> 00:13:31,280
able to access it so even though you

00:13:29,810 --> 00:13:33,800
change this you haven't changed the

00:13:31,280 --> 00:13:36,260
scope away from food so you can't access

00:13:33,800 --> 00:13:38,600
the method you think you can that's

00:13:36,260 --> 00:13:40,040
where this lovely error comes from and

00:13:38,600 --> 00:13:41,840
this is exactly the same as if you

00:13:40,040 --> 00:13:43,520
instantiate an object inside of food and

00:13:41,840 --> 00:13:48,470
try to access for its exact same her

00:13:43,520 --> 00:13:50,840
same problem with context so instead of

00:13:48,470 --> 00:13:52,310
doing this line where binding to

00:13:50,840 --> 00:13:55,520
geography actually I can't acid it twice

00:13:52,310 --> 00:13:58,490
and now we're changing the context so

00:13:55,520 --> 00:14:00,800
when you are in that closure not only is

00:13:58,490 --> 00:14:03,590
this pointing to bar but you actually

00:14:00,800 --> 00:14:05,240
have the context of our and all of the

00:14:03,590 --> 00:14:10,120
access that you would have is if you

00:14:05,240 --> 00:14:10,120
were in our I hate using medicine

00:14:11,010 --> 00:14:16,530
so this is the only change here he's

00:14:12,960 --> 00:14:18,570
literally this edition here passing that

00:14:16,530 --> 00:14:21,750
extra variable and actually source code

00:14:18,570 --> 00:14:24,060
the one sort of mutation you like to see

00:14:21,750 --> 00:14:26,640
for this is actually unit testing where

00:14:24,060 --> 00:14:29,010
you have to kind of do mock objects and

00:14:26,640 --> 00:14:30,660
move things around and maybe access

00:14:29,010 --> 00:14:33,030
private stuff you shouldn't be able to

00:14:30,660 --> 00:14:35,220
just to test them I don't see the

00:14:33,030 --> 00:14:37,410
genuine implementation where this is

00:14:35,220 --> 00:14:38,790
useful as far as we've said a lot of

00:14:37,410 --> 00:14:44,010
framework guys are gonna have a field

00:14:38,790 --> 00:14:45,030
day and refuse a lot of people the forum

00:14:44,010 --> 00:14:48,260
bodies have any questions on that

00:14:45,030 --> 00:14:48,260
because it was really complicated

00:14:51,750 --> 00:14:55,190
Ethan father Paul

00:14:56,930 --> 00:15:00,800
this does he actually completely move

00:14:59,210 --> 00:15:02,400
the food doesn't actually come anything

00:15:00,800 --> 00:15:05,940
to do

00:15:02,400 --> 00:15:10,470
so your jig new closure absolutely

00:15:05,940 --> 00:15:13,380
nothing to do with good place so yeah

00:15:10,470 --> 00:15:17,070
the scope and so what's interesting is

00:15:13,380 --> 00:15:18,900
that you can change the toll of this to

00:15:17,070 --> 00:15:20,370
something else and be accessing it as if

00:15:18,900 --> 00:15:23,850
you were not inside of that class so

00:15:20,370 --> 00:15:25,620
that's kind of nice atomic actuation the

00:15:23,850 --> 00:15:30,780
all very awkward thing is you can keep

00:15:25,620 --> 00:15:33,330
this the same but change this let's go

00:15:30,780 --> 00:15:35,220
to be another class so that you're

00:15:33,330 --> 00:15:38,220
actually losing access to private

00:15:35,220 --> 00:15:39,600
properties and methods and again could

00:15:38,220 --> 00:15:44,540
be kind of nice interesting calculations

00:15:39,600 --> 00:15:47,580
were very confusing so let's move on to

00:15:44,540 --> 00:15:48,990
probably the biggest feature everyone to

00:15:47,580 --> 00:15:53,340
think about by the war that I wished

00:15:48,990 --> 00:15:55,980
opinion 53 it is trait which is

00:15:53,340 --> 00:15:58,890
horizontal wings and it's rather said

00:15:55,980 --> 00:16:02,040
compiler level copy and paste don't

00:15:58,890 --> 00:16:04,710
overthink this pitch beginners to say

00:16:02,040 --> 00:16:07,410
almost as you copying and pasting

00:16:04,710 --> 00:16:10,920
the benefit is that you have a dry

00:16:07,410 --> 00:16:13,080
you're reusing code all in your project

00:16:10,920 --> 00:16:15,120
and modified much it's the same sort of

00:16:13,080 --> 00:16:18,510
goal though object-oriented code where

00:16:15,120 --> 00:16:22,920
you're trying to not repeat this up I

00:16:18,510 --> 00:16:25,980
mean it's a good god so there's four new

00:16:22,920 --> 00:16:30,240
keywords that come with traits obviously

00:16:25,980 --> 00:16:33,420
the trade key word itself is used as an

00:16:30,240 --> 00:16:35,940
instead of we'll get to those in a

00:16:33,420 --> 00:16:38,850
little bit you can use multiple trips

00:16:35,940 --> 00:16:40,470
within a single class so that's really

00:16:38,850 --> 00:16:44,160
mean actually compose your classes out

00:16:40,470 --> 00:16:46,710
of multiple smaller chunks you can also

00:16:44,160 --> 00:16:48,750
not just define methods but abstract

00:16:46,710 --> 00:16:50,220
methods so you can actually say in the

00:16:48,750 --> 00:16:52,320
trades that you've got to implement this

00:16:50,220 --> 00:16:54,900
in the object that you're using the

00:16:52,320 --> 00:16:56,580
trade or in somewhere down the line it's

00:16:54,900 --> 00:16:58,650
just by extended abstract method so it's

00:16:56,580 --> 00:17:00,450
literally probably posted and you've

00:16:58,650 --> 00:17:02,880
gotta find properties which is quite

00:17:00,450 --> 00:17:04,319
handy especially if you're doing like a

00:17:02,880 --> 00:17:05,730
singleton

00:17:04,319 --> 00:17:08,439
you might want to pull in a property

00:17:05,730 --> 00:17:11,069
that holds the actress edit e

00:17:08,439 --> 00:17:11,069
it's partly class

00:17:11,350 --> 00:17:18,280
let's take a look at traders anyone

00:17:13,900 --> 00:17:21,789
looked at trade share okay so that's

00:17:18,280 --> 00:17:24,789
good so traits look a lot like classes

00:17:21,789 --> 00:17:27,339
just substitute trade for class or crash

00:17:24,789 --> 00:17:29,380
betrayed defining method and it's there

00:17:27,339 --> 00:17:30,760
the difference is just like interfaces

00:17:29,380 --> 00:17:32,320
or abstract classes you cannot

00:17:30,760 --> 00:17:35,350
instantiate month however they don't do

00:17:32,320 --> 00:17:38,950
anything they're just a part of your PHP

00:17:35,350 --> 00:17:41,590
file and then this year this new keyword

00:17:38,950 --> 00:17:43,270
use this is when you put in trading with

00:17:41,590 --> 00:17:45,400
the common you can have multiple trips

00:17:43,270 --> 00:17:49,650
really simple there's nothing

00:17:45,400 --> 00:17:52,059
complicated about dicks so that's it

00:17:49,650 --> 00:17:54,429
where it does get a little tricky is

00:17:52,059 --> 00:17:57,700
when you're looking at the parents and

00:17:54,429 --> 00:18:00,460
scope if you have a class to implement

00:17:57,700 --> 00:18:02,350
something or has a method and then you

00:18:00,460 --> 00:18:04,419
extend it and then in the extended class

00:18:02,350 --> 00:18:07,000
we're gonna train the people of a ride

00:18:04,419 --> 00:18:09,610
the pair of glasses method what happens

00:18:07,000 --> 00:18:13,600
I have a little ambiguous but it's

00:18:09,610 --> 00:18:15,490
really simple it over ax it's just the

00:18:13,600 --> 00:18:20,110
same as if it was really in the back I

00:18:15,490 --> 00:18:22,990
mean it really is copy of X so we've got

00:18:20,110 --> 00:18:26,049
our two traits again we're pulling into

00:18:22,990 --> 00:18:27,640
different methods now in this one we've

00:18:26,049 --> 00:18:30,490
got a hello and while that's in the

00:18:27,640 --> 00:18:31,610
classic opponent rate into you it's been

00:18:30,490 --> 00:18:35,120
considered that

00:18:31,610 --> 00:18:37,940
trade kind of the parent automatically

00:18:35,120 --> 00:18:39,830
so I think it behaves mostly how you

00:18:37,940 --> 00:18:41,030
would expect if there's something in the

00:18:39,830 --> 00:18:43,610
pair of you coming to trade me to the

00:18:41,030 --> 00:18:46,309
child you know the right pair if you're

00:18:43,610 --> 00:18:48,320
pulling the trait in and define method

00:18:46,309 --> 00:18:50,270
in that same class you know the right of

00:18:48,320 --> 00:18:54,580
the trail so I think it is quite obvious

00:18:50,270 --> 00:18:54,580
and does exactly what you would expect

00:18:57,070 --> 00:19:01,960
so a little bit more on precedent

00:19:00,580 --> 00:19:08,580
sisters it's kind of just what I went

00:19:01,960 --> 00:19:13,470
through when you're talking about parent

00:19:08,580 --> 00:19:17,320
parent the access to parents of methods

00:19:13,470 --> 00:19:19,960
in the trades itself Perry is unknown

00:19:17,320 --> 00:19:21,250
that it's not implemented anywhere and I

00:19:19,960 --> 00:19:22,419
would say that that was a bad trade

00:19:21,250 --> 00:19:25,419
because you don't know where it's going

00:19:22,419 --> 00:19:26,980
to be used what about definition of

00:19:25,419 --> 00:19:29,590
horizontally you should go to if there

00:19:26,980 --> 00:19:33,399
even is a pair but you certainly can use

00:19:29,590 --> 00:19:37,299
it so if you've got a trade that users

00:19:33,399 --> 00:19:40,269
say world at that extent if you would

00:19:37,299 --> 00:19:43,029
implemented this trade up inside it

00:19:40,269 --> 00:19:44,559
wouldn't make sense doesn't work but

00:19:43,029 --> 00:19:46,389
when you extend and pull it in it's

00:19:44,559 --> 00:19:49,210
exactly what you would expect area is

00:19:46,389 --> 00:19:50,950
the parent of the classes implemented or

00:19:49,210 --> 00:19:56,690
used

00:19:50,950 --> 00:19:59,030
when you extend again when you extend

00:19:56,690 --> 00:20:05,020
again it's exactly the same so within

00:19:59,030 --> 00:20:07,790
the extended class or within a trait

00:20:05,020 --> 00:20:10,220
hair is still exactly what it would

00:20:07,790 --> 00:20:13,070
normally be as if it was really there

00:20:10,220 --> 00:20:15,290
and again again it's as if it was really

00:20:13,070 --> 00:20:21,460
there if you're unsure copy and paste

00:20:15,290 --> 00:20:21,460
code and see what it does so

00:20:21,930 --> 00:20:26,920
method visibility this one's actually

00:20:24,430 --> 00:20:28,330
quite cool you can define within a trade

00:20:26,920 --> 00:20:30,850
something is proud of a poor protected

00:20:28,330 --> 00:20:35,370
or public and you can actually change

00:20:30,850 --> 00:20:35,370
that when you implement or use trade

00:20:36,500 --> 00:20:40,340
again if somebody's made something

00:20:38,660 --> 00:20:43,280
protected in your making public there's

00:20:40,340 --> 00:20:45,140
probably a good reason right but you can

00:20:43,280 --> 00:20:47,000
do it is really nice to actually make

00:20:45,140 --> 00:20:49,070
things private move it away from public

00:20:47,000 --> 00:20:50,740
use I'm not going to use this all you

00:20:49,070 --> 00:20:53,990
shouldn't be using it within my context

00:20:50,740 --> 00:20:56,810
and that's done by using this new syntax

00:20:53,990 --> 00:20:59,120
which is along the lines of the use so

00:20:56,810 --> 00:21:00,380
in the colonel races in in here is where

00:20:59,120 --> 00:21:04,880
you can do all of your conflict

00:21:00,380 --> 00:21:06,380
resolution and your visibility stuff so

00:21:04,880 --> 00:21:08,450
what we're doing here we have a private

00:21:06,380 --> 00:21:11,870
method you're not great and we're going

00:21:08,450 --> 00:21:15,350
to make a public anyone who use it might

00:21:11,870 --> 00:21:16,510
be good reason for that maybe this uses

00:21:15,350 --> 00:21:19,180
Perry

00:21:16,510 --> 00:21:21,640
and unless you explicitly many public

00:21:19,180 --> 00:21:26,670
nobody can call it because you don't

00:21:21,640 --> 00:21:26,670
have a pair that's one use for that

00:21:26,960 --> 00:21:32,270
when we do have conflicts you can also

00:21:29,960 --> 00:21:34,340
use aliasing and this is how we get

00:21:32,270 --> 00:21:37,520
around the conflict issue of two trades

00:21:34,340 --> 00:21:39,679
having two methods that are the same and

00:21:37,520 --> 00:21:43,250
that's really simple just use that as

00:21:39,679 --> 00:21:45,470
keyword so I finally keyword so you can

00:21:43,250 --> 00:21:47,539
pull in any trade and then these are

00:21:45,470 --> 00:21:49,940
methods so hello it's a method of that

00:21:47,539 --> 00:21:51,529
rate the world is a method of that trade

00:21:49,940 --> 00:21:55,370
and you can also change the visibility

00:21:51,529 --> 00:21:59,240
at the same time so you don't have to

00:21:55,370 --> 00:22:02,779
hope you can so that's how you get

00:21:59,240 --> 00:22:06,409
around conflict resolution there's a

00:22:02,779 --> 00:22:09,220
little magic in the compliment which you

00:22:06,409 --> 00:22:09,220
do it or it breaks

00:22:12,480 --> 00:22:15,110
so

00:22:16,210 --> 00:22:19,490
this is it this is edge what happens

00:22:18,220 --> 00:22:22,610
when

00:22:19,490 --> 00:22:23,990
if you do know resolve the conflicts you

00:22:22,610 --> 00:22:26,780
get a fatal error it's not a morning

00:22:23,990 --> 00:22:28,250
it's not a note to finish metal and I

00:22:26,780 --> 00:22:31,010
think quite rightly said if you put the

00:22:28,250 --> 00:22:33,980
same method and it passed quite you get

00:22:31,010 --> 00:22:36,309
yeah so again compiler assistant copied

00:22:33,980 --> 00:22:36,309
and pasted

00:22:37,720 --> 00:22:44,710
so it's actually possible to in the case

00:22:43,150 --> 00:22:47,260
of where you've got to how do you know

00:22:44,710 --> 00:22:48,640
which one you're talking about so we

00:22:47,260 --> 00:22:50,950
have aliasing we probably saw before

00:22:48,640 --> 00:22:53,020
where you just rename any method and if

00:22:50,950 --> 00:22:55,500
they need you don't need to qualify them

00:22:53,020 --> 00:22:58,270
and you came some conflicting mrs.

00:22:55,500 --> 00:23:03,600
disqualify them with the trailing say

00:22:58,270 --> 00:23:03,600
with classes double Cola and it works

00:23:03,840 --> 00:23:08,620
it's the exact dates and X you know

00:23:06,720 --> 00:23:11,020
intellectually you have a digital a

00:23:08,620 --> 00:23:13,240
tequila instead of that allows you to

00:23:11,020 --> 00:23:16,930
explicitly state I want this one instead

00:23:13,240 --> 00:23:20,800
of this in the name and what that does

00:23:16,930 --> 00:23:24,679
is this one never even comes in from the

00:23:20,800 --> 00:23:26,899
trade unless you explicitly pull it in

00:23:24,679 --> 00:23:29,779
so what we do what we do till it's paid

00:23:26,899 --> 00:23:31,909
a little more this is one trade with the

00:23:29,779 --> 00:23:36,230
mother function this is actually the

00:23:31,909 --> 00:23:39,289
trick not the method new so if you pull

00:23:36,230 --> 00:23:41,509
in everything but the mother method from

00:23:39,289 --> 00:23:45,580
a straight and that one is there unless

00:23:41,509 --> 00:23:45,580
you explicitly there okay

00:23:46,970 --> 00:23:54,890
one more thing about trait is trade

00:23:51,200 --> 00:23:56,900
protection is something using a trade if

00:23:54,890 --> 00:23:59,059
you have encourage people if you have a

00:23:56,900 --> 00:24:00,559
singleton class that you extend for your

00:23:59,059 --> 00:24:03,559
Singleton's you can do it instance are

00:24:00,559 --> 00:24:06,289
you can't do that in a trend with a

00:24:03,559 --> 00:24:09,010
trade so what we've got is class uses

00:24:06,289 --> 00:24:12,740
and choosers actually returns in a row

00:24:09,010 --> 00:24:15,110
both the keys and the values are the

00:24:12,740 --> 00:24:16,820
names of the traits that are used by

00:24:15,110 --> 00:24:19,700
that class so you actually look at the

00:24:16,820 --> 00:24:21,559
arrays or the keys which is nice and we

00:24:19,700 --> 00:24:24,500
can use a raven referencing to check

00:24:21,559 --> 00:24:29,260
very easily if it's there that's one use

00:24:24,500 --> 00:24:32,929
case for a be referencing so right here

00:24:29,260 --> 00:24:35,450
class uses throw the object in that's

00:24:32,929 --> 00:24:38,150
been a return an array with LOL hello

00:24:35,450 --> 00:24:40,760
well as the key value pair and here's

00:24:38,150 --> 00:24:43,940
the dereference right here it would be

00:24:40,760 --> 00:24:46,730
nice listen after I'll give me and just

00:24:43,940 --> 00:24:49,789
returned earlier so I need to submit a

00:24:46,730 --> 00:24:51,660
patch on that but this is actually the

00:24:49,789 --> 00:24:54,270
most compact syntax

00:24:51,660 --> 00:24:56,720
to check if a traitor who's being used

00:24:54,270 --> 00:24:56,720
right now

00:24:58,429 --> 00:25:04,009
so built in the CLI so it's actually

00:25:01,639 --> 00:25:06,499
pretty cool and actually just a little

00:25:04,009 --> 00:25:07,789
bit more than the unit tests don't use

00:25:06,499 --> 00:25:11,090
it for anything more video attached but

00:25:07,789 --> 00:25:13,509
it does a little bit more the CLI server

00:25:11,090 --> 00:25:17,360
gives instantiated by using the dash

00:25:13,509 --> 00:25:18,919
capital S 5 and actually have to do PHP

00:25:17,360 --> 00:25:21,350
in capital S and you've suddenly got a

00:25:18,919 --> 00:25:23,749
web server and extracting the group is

00:25:21,350 --> 00:25:26,869
the current working directory so we go

00:25:23,749 --> 00:25:29,299
to your browser and the quickest of that

00:25:26,869 --> 00:25:31,279
s host port here we bind it to localhost

00:25:29,299 --> 00:25:34,100
and whatever poor so you can go in your

00:25:31,279 --> 00:25:35,360
browser to that hosted or / and a file

00:25:34,100 --> 00:25:37,669
name in your current working directory

00:25:35,360 --> 00:25:40,850
it will run that straight from that

00:25:37,669 --> 00:25:43,850
directory it defaults to the index dot

00:25:40,850 --> 00:25:48,340
PHP so fairly common Patrick elimination

00:25:43,850 --> 00:25:48,340
or Internet so you don't need anything

00:25:50,049 --> 00:25:56,179
it will serve static assets so if you've

00:25:53,179 --> 00:25:59,649
got images CSS JavaScript it will load

00:25:56,179 --> 00:26:02,869
those out no problem and it allows Oh

00:25:59,649 --> 00:26:05,049
rewriting like mod rewrite with a little

00:26:02,869 --> 00:26:08,950
bit simpler

00:26:05,049 --> 00:26:12,460
why white how that works so I actually

00:26:08,950 --> 00:26:17,789
recorded the demo on this but I'm not

00:26:12,460 --> 00:26:17,789
going to do it

00:26:19,370 --> 00:26:22,240
so I

00:26:24,600 --> 00:26:30,810
I haven't very simple directly with an

00:26:27,630 --> 00:26:38,340
index an info PHP that contains PHP info

00:26:30,810 --> 00:26:41,910
oh and also this sappy be far more enter

00:26:38,340 --> 00:26:47,750
so if I want to serve this hoga all i

00:26:41,910 --> 00:26:47,750
have to do it eh being dash S

00:26:49,210 --> 00:26:56,020
dash S look with a TS okay so we get

00:26:53,320 --> 00:26:57,970
this very simple starts up sarah tells

00:26:56,020 --> 00:27:00,370
you you dr. Bruce in you know if you

00:26:57,970 --> 00:27:02,789
want to call the server control C really

00:27:00,370 --> 00:27:02,789
simple

00:27:16,179 --> 00:27:23,499
it's just dumping underscore server

00:27:19,210 --> 00:27:25,950
director very simple just works if you

00:27:23,499 --> 00:27:25,950
look at

00:27:35,030 --> 00:27:37,210
is

00:27:41,560 --> 00:27:48,700
SPS BFF and it will run any HP / there's

00:27:45,910 --> 00:27:51,880
no sort of special magic going on if you

00:27:48,700 --> 00:27:54,520
look a little bit down here big section

00:27:51,880 --> 00:27:58,320
is missing is the Apache session section

00:27:54,520 --> 00:28:00,820
sorry but all your extensions are loaded

00:27:58,320 --> 00:28:06,880
obviously the CLI exception so if you do

00:28:00,820 --> 00:28:08,740
have a CLI config so PHP CRI diurnal it

00:28:06,880 --> 00:28:11,680
will use that not your typical web

00:28:08,740 --> 00:28:13,090
server so one little gotcha there that

00:28:11,680 --> 00:28:16,530
doesn't mean to really easy to be a PHP

00:28:13,090 --> 00:28:21,020
capture him to see what mortal she's got

00:28:16,530 --> 00:28:23,800
so that that just works one final thing

00:28:21,020 --> 00:28:23,800
it is

00:28:26,540 --> 00:28:33,980
sakky PP underscore sakky is a constant

00:28:31,030 --> 00:28:39,140
CLI cell is well expect to not apache2

00:28:33,980 --> 00:28:43,010
or PDF p.m. this allows you to write

00:28:39,140 --> 00:28:45,110
code save your index dot PHP that will

00:28:43,010 --> 00:28:47,750
write for the steal I sell for testing

00:28:45,110 --> 00:28:51,140
purposes instead of invoking maybe a

00:28:47,750 --> 00:28:56,540
regular bootstrap immediately so this is

00:28:51,140 --> 00:28:58,250
a little bit handy to know so that's the

00:28:56,540 --> 00:29:01,690
very basic functionality search files

00:28:58,250 --> 00:29:01,690
from the local look what this

00:29:04,230 --> 00:29:11,320
so as I said you can do mod rewrite

00:29:08,200 --> 00:29:13,930
those really it's more like your MVC

00:29:11,320 --> 00:29:15,880
router what you can do is the last

00:29:13,930 --> 00:29:18,610
argument for dash S is actually a

00:29:15,880 --> 00:29:21,190
founding and every single request will

00:29:18,610 --> 00:29:25,180
go through the file to get send and it

00:29:21,190 --> 00:29:27,370
comes in as request URI this is the same

00:29:25,180 --> 00:29:29,740
variable of every single every seeds

00:29:27,370 --> 00:29:32,170
that have ever seen users i'm pretty

00:29:29,740 --> 00:29:35,020
sure that i haven't tried you can use

00:29:32,170 --> 00:29:36,790
the zend framework or lithium routes is

00:29:35,020 --> 00:29:39,370
straight out of the box regular

00:29:36,790 --> 00:29:41,020
bootstraps pointed index PHP actually

00:29:39,370 --> 00:29:43,300
round so like you normally would like

00:29:41,020 --> 00:29:45,640
you know we do rewrite rule everything

00:29:43,300 --> 00:29:47,320
goes in that Club evening so the user

00:29:45,640 --> 00:29:52,000
index dot PHP is that the last argument

00:29:47,320 --> 00:29:54,670
for dash S and it will pretty much work

00:29:52,000 --> 00:29:57,970
so as I said if you want to do special

00:29:54,670 --> 00:30:00,910
code just for this 75 but maybe you want

00:29:57,970 --> 00:30:03,220
to set up your tent frame work

00:30:00,910 --> 00:30:04,720
environments editor development great

00:30:03,220 --> 00:30:06,160
idea because you should be using in

00:30:04,720 --> 00:30:07,930
anything else and you don't necessarily

00:30:06,160 --> 00:30:11,950
have like the set end beam having

00:30:07,930 --> 00:30:16,270
actually it's a great place to do it so

00:30:11,950 --> 00:30:19,450
this is an example router something

00:30:16,270 --> 00:30:22,150
that's really quite in obvious is that

00:30:19,450 --> 00:30:24,010
if the five now this is not functional

00:30:22,150 --> 00:30:27,120
this is directly in the file the main

00:30:24,010 --> 00:30:29,680
proper file if it returns false then it

00:30:27,120 --> 00:30:31,210
kicked back to the file system and will

00:30:29,680 --> 00:30:33,430
actually below the file of the file

00:30:31,210 --> 00:30:35,260
system so if it's a static image

00:30:33,430 --> 00:30:37,480
something like that I don't want there

00:30:35,260 --> 00:30:39,430
to be to be passing that so just return

00:30:37,480 --> 00:30:43,390
false and it automatically pull it off

00:30:39,430 --> 00:30:46,900
the file system otherwise you can wrap

00:30:43,390 --> 00:30:48,760
it however you want so that is typically

00:30:46,900 --> 00:30:50,260
if you've ever sent home or anything

00:30:48,760 --> 00:30:52,810
like that you would do sort of if the

00:30:50,260 --> 00:30:54,970
file exists or if it ends and jf CS s

00:30:52,810 --> 00:30:56,560
something like that you were out it

00:30:54,970 --> 00:30:59,200
through an extra fee you don't have that

00:30:56,560 --> 00:31:00,820
luxury Mia you do have to handle it you

00:30:59,200 --> 00:31:03,389
start but it's really simple with the

00:31:00,820 --> 00:31:07,579
return false

00:31:03,389 --> 00:31:07,579
so another live demo

00:31:21,190 --> 00:31:26,890
so if you notice all I did was pass

00:31:24,340 --> 00:31:28,720
through one more argument which is my

00:31:26,890 --> 00:31:31,800
router file which is the same fire that

00:31:28,720 --> 00:31:31,800
I just had on the slide

00:31:31,970 --> 00:31:34,840
I'd like all that up

00:31:37,710 --> 00:31:40,770
you'll see right at the beginning it

00:31:39,299 --> 00:31:44,730
actually says this is the requested

00:31:40,770 --> 00:31:47,120
resource and if we look at for server we

00:31:44,730 --> 00:31:47,120
should see

00:31:47,220 --> 00:31:52,240
right and we'll see

00:31:50,630 --> 00:31:55,080
that

00:31:52,240 --> 00:31:59,950
okay so record question where I right

00:31:55,080 --> 00:32:03,220
there that's where it comes it so it's

00:31:59,950 --> 00:32:06,010
really simple and pretty much just works

00:32:03,220 --> 00:32:09,240
so it's a cool feature as well as I said

00:32:06,010 --> 00:32:09,240
do not use it in production

00:32:09,260 --> 00:32:12,710
but for development do you think it's

00:32:10,820 --> 00:32:15,980
really quite cool I don't know how many

00:32:12,710 --> 00:32:17,900
people are set up exhale yeah this is so

00:32:15,980 --> 00:32:21,410
much simpler and easier and it's

00:32:17,900 --> 00:32:25,780
cross-platform so that's just about it

00:32:21,410 --> 00:32:25,780
and in 15 minutes left for questions

00:32:29,130 --> 00:32:33,450
could you run multiple instances of this

00:32:31,020 --> 00:32:36,030
so just open up another terminal

00:32:33,450 --> 00:32:39,080
obviously buying into a separate port is

00:32:36,030 --> 00:32:39,080
the other thing so I guess

00:32:43,440 --> 00:32:49,379
I noticed your interest and obviously

00:32:47,610 --> 00:32:52,049
contributors in framework so I just

00:32:49,379 --> 00:32:58,769
wanted to know if you had any thoughts

00:32:52,049 --> 00:33:04,289
on how a PHP 5.4 as we descend 110 111

00:32:58,769 --> 00:33:08,429
10 into another compatible yes 7z f 1

00:33:04,289 --> 00:33:09,960
absolutely incompatible the only thing

00:33:08,429 --> 00:33:12,240
you might see as though he notices a

00:33:09,960 --> 00:33:15,539
rage conversion again so they're not

00:33:12,240 --> 00:33:17,789
problem zf2 I know Matthew has nothing

00:33:15,539 --> 00:33:19,350
where our opinions project lee has had

00:33:17,789 --> 00:33:21,419
discussions about actually using

00:33:19,350 --> 00:33:22,919
platform because the trade stuff is

00:33:21,419 --> 00:33:25,860
really quite cool and you can do some

00:33:22,919 --> 00:33:27,179
nice framework level start with that and

00:33:25,860 --> 00:33:29,370
the other features so there's been

00:33:27,179 --> 00:33:32,250
discussion but i don't know what the end

00:33:29,370 --> 00:33:35,870
result that is i would imagine not just

00:33:32,250 --> 00:33:39,020
because current one is five

00:33:35,870 --> 00:33:42,890
so I would be surprised if they went 54

00:33:39,020 --> 00:33:44,900
I do know that lithium has pretty much

00:33:42,890 --> 00:33:46,340
data they will be willing to make right

00:33:44,900 --> 00:33:48,830
back with compatibility for the dollar

00:33:46,340 --> 00:33:50,300
this synthetic is currently they do some

00:33:48,830 --> 00:33:51,910
sort of juggling to break your bottle

00:33:50,300 --> 00:33:57,410
themselves there will be a lot easier

00:33:51,910 --> 00:33:59,270
access to this I do think that 54 if you

00:33:57,410 --> 00:34:02,390
want writing a new application you

00:33:59,270 --> 00:34:04,309
should be talking to 54 despite all of

00:34:02,390 --> 00:34:09,649
the disclaimers of please don't do this

00:34:04,309 --> 00:34:12,440
you can write really good with new

00:34:09,649 --> 00:34:14,830
features and more importantly it's

00:34:12,440 --> 00:34:14,830
faster

00:34:15,900 --> 00:34:18,890
anything

00:34:20,140 --> 00:34:30,659
you use a safe-conduct ml so sorry

00:34:25,859 --> 00:34:32,509
do you see the new this enclosures been

00:34:30,659 --> 00:34:37,889
specially useful for things such as

00:34:32,509 --> 00:34:40,409
asynchronous I don't think not

00:34:37,889 --> 00:34:42,989
especially I mean yes it's useful but I

00:34:40,409 --> 00:34:45,299
don't sorry did everyone hear that the

00:34:42,989 --> 00:34:47,730
question was did you find this or is it

00:34:45,299 --> 00:34:49,829
good for live events I don't think

00:34:47,730 --> 00:34:51,659
there's any more useful explicitly for

00:34:49,829 --> 00:34:54,210
that think it's useful for everything I

00:34:51,659 --> 00:34:55,230
kind of wish it had been in 53 and I

00:34:54,210 --> 00:34:58,920
know that it wasn't because there were

00:34:55,230 --> 00:35:00,210
some ambiguities around it so no I don't

00:34:58,920 --> 00:35:04,160
I don't think especially for that but

00:35:00,210 --> 00:35:04,160
yes it's useful anybody else

00:35:13,570 --> 00:35:20,290
I ran into one set fault but I think

00:35:17,720 --> 00:35:20,290
that's my code

00:35:20,420 --> 00:35:29,930
quite frankly this is for me the

00:35:26,270 --> 00:35:31,400
most cash passing he release ever there

00:35:29,930 --> 00:35:35,270
are more test passes in this release

00:35:31,400 --> 00:35:36,770
than any other one of tested this rc8 so

00:35:35,270 --> 00:35:38,660
that's one that just came out is that

00:35:36,770 --> 00:35:41,960
the first time I've had 20 failed tests

00:35:38,660 --> 00:35:44,330
usually three or four at least so in

00:35:41,960 --> 00:35:46,160
terms of stability i do think 54 is

00:35:44,330 --> 00:35:48,650
absolutely rock solid and there really

00:35:46,160 --> 00:35:51,500
isn't any major ruptures obviously

00:35:48,650 --> 00:35:54,770
because there's no way to kind of work

00:35:51,500 --> 00:35:57,400
around the 54 * in 53 so if you're gonna

00:35:54,770 --> 00:36:00,650
go fight for you kinda have to go all in

00:35:57,400 --> 00:36:03,170
so I think it's worth it I really do so

00:36:00,650 --> 00:36:06,730
this is this is for me probably the most

00:36:03,170 --> 00:36:06,730
excitedly appearances five

00:36:16,750 --> 00:36:20,740
can you define a property that's right

00:36:18,700 --> 00:36:22,750
presumably noise you can define as a

00:36:20,740 --> 00:36:26,460
recap and you can use it just as if it

00:36:22,750 --> 00:36:31,300
were in the car and the same private

00:36:26,460 --> 00:36:34,870
public protected supplies so actually

00:36:31,300 --> 00:36:36,730
when you can limited use I think because

00:36:34,870 --> 00:36:39,130
if it's not like Tim Harrison the

00:36:36,730 --> 00:36:41,140
property where you've got functionality

00:36:39,130 --> 00:36:45,160
years of the stuff that it's useful I

00:36:41,140 --> 00:36:46,660
like it do it no problems with it so in

00:36:45,160 --> 00:36:48,730
principle that is the only difference

00:36:46,660 --> 00:36:52,450
between you're trying to mix in just the

00:36:48,730 --> 00:36:54,610
conflict resolution yes I don't have

00:36:52,450 --> 00:36:56,440
much experience with mixes but my

00:36:54,610 --> 00:36:58,510
understanding is a lot more magic with

00:36:56,440 --> 00:37:01,240
the complet resolution and it couldn't

00:36:58,510 --> 00:37:02,620
be kind of ambiguous how it works one of

00:37:01,240 --> 00:37:04,960
the major problems we try to solve is

00:37:02,620 --> 00:37:06,490
that the duty you want to know what the

00:37:04,960 --> 00:37:08,170
code is doing and you don't especially

00:37:06,490 --> 00:37:12,040
don't want it to change based on other

00:37:08,170 --> 00:37:16,650
factors so the explicit ambiguity

00:37:12,040 --> 00:37:16,650
resolution is a big feature over

00:37:18,280 --> 00:37:21,150
anything else

00:37:23,140 --> 00:37:27,960
in terms of performance how much faster

00:37:32,190 --> 00:37:38,620
twenty percent in the deficit Tecna

00:37:34,330 --> 00:37:40,660
benchmarks so even if it's one percent I

00:37:38,620 --> 00:37:43,080
think it's worthwhile in some

00:37:40,660 --> 00:37:47,220
applications it's really going to bury

00:37:43,080 --> 00:37:48,850
would ever say in terms of sort of

00:37:47,220 --> 00:37:52,270
comparing the two which is I think

00:37:48,850 --> 00:37:55,320
probably a better metric the 54 increase

00:37:52,270 --> 00:37:55,320
over 53 is great

00:38:01,650 --> 00:38:06,990
I was gonna work with the triple

00:38:03,710 --> 00:38:08,789
quadruple yeah in terms of like the

00:38:06,990 --> 00:38:11,560
array of strings done yeah they need to

00:38:08,789 --> 00:38:13,760
fix that stuff it's broke

00:38:11,560 --> 00:38:16,730
it's there to actually to be clear it's

00:38:13,760 --> 00:38:19,760
the best which is not not just that Nina

00:38:16,730 --> 00:38:26,300
is not they need to think in Texas

00:38:19,760 --> 00:38:28,160
that's really no other way oh yes um not

00:38:26,300 --> 00:38:30,320
necessarily because those that comb is

00:38:28,160 --> 00:38:31,460
broken in five free to play it's not

00:38:30,320 --> 00:38:34,070
something new we're just now further

00:38:31,460 --> 00:38:37,070
notice to tell the judge brother so I

00:38:34,070 --> 00:38:38,960
mean it was been broken all the way back

00:38:37,070 --> 00:38:43,730
to whenever you know whenever that

00:38:38,960 --> 00:38:45,650
already started so i Justi chair one

00:38:43,730 --> 00:38:48,260
thing to it I did a test with group

00:38:45,650 --> 00:38:50,690
around and a simple Drupal installation

00:38:48,260 --> 00:38:53,000
work on fight for after doing is very

00:38:50,690 --> 00:38:54,779
small change to one of these lines was

00:38:53,000 --> 00:38:57,179
deeds area conversion which was brought

00:38:54,779 --> 00:38:59,249
I had to do one change to get through a

00:38:57,179 --> 00:39:01,829
running on site or even on the embedded

00:38:59,249 --> 00:39:04,519
web server so that's really funny and

00:39:01,829 --> 00:39:08,279
now obviously is going to fix about

00:39:04,519 --> 00:39:10,429
absolutely should just fix it anything

00:39:08,279 --> 00:39:10,429
else

00:39:16,030 --> 00:39:22,090
and early on you mentioned the

00:39:18,840 --> 00:39:23,560
coralville type int yes it is that just

00:39:22,090 --> 00:39:25,060
a straightforward type checking or is

00:39:23,560 --> 00:39:28,660
this doing some magic that makes

00:39:25,060 --> 00:39:31,330
callbacks easier to know it is mr.

00:39:28,660 --> 00:39:34,330
straightforward just like array is is it

00:39:31,330 --> 00:39:36,160
callable it actually is identical to do

00:39:34,330 --> 00:39:41,290
it is underscore callable on something

00:39:36,160 --> 00:39:44,020
so it has the same semantics and so that

00:39:41,290 --> 00:39:47,020
that's really all it does mean because

00:39:44,020 --> 00:39:48,640
it was probably said if you we always

00:39:47,020 --> 00:39:50,740
want to make sure that you're not going

00:39:48,640 --> 00:39:56,770
to accidentally call it as affordable if

00:39:50,740 --> 00:39:59,110
it's not that's kind of what it's for

00:39:56,770 --> 00:40:01,360
you do want it to error on the person

00:39:59,110 --> 00:40:04,140
throwing in not in your code because

00:40:01,360 --> 00:40:04,140
recorded as a callable

00:40:04,620 --> 00:40:10,529
anything else

00:40:07,529 --> 00:40:10,529
all

00:40:12,670 --> 00:40:15,420
and there's no

00:40:19,020 --> 00:40:23,810
no it is still your way

00:40:31,460 --> 00:40:38,730
that's a good question i would hope so I

00:40:33,990 --> 00:40:42,119
would hope so I am NOT 53 certified this

00:40:38,730 --> 00:40:44,130
bike frame unify of surf book but yes I

00:40:42,119 --> 00:40:46,950
would imagine his own but I have no clue

00:40:44,130 --> 00:40:48,930
what's going on today so I would imagine

00:40:46,950 --> 00:40:52,040
said there was enough language level

00:40:48,930 --> 00:40:52,040
changes that it's beneficial

00:40:52,770 --> 00:40:55,670
anything else

00:40:56,040 --> 00:41:00,500

YouTube URL: https://www.youtube.com/watch?v=I6QtuLBwux4


