Title: PHP UK Conference 2011 - PHP in a mobile ecosystem, by Ivo Jansch
Publication date: 2012-03-06
Playlist: PHP UK Conference 2011
Description: 
	http://www.phpconference.co.uk/talk/php-mobile-ecosystem

The past few years the web has become more and more mobile. A significant portion of the mobile web has moved from the browser to the 'apps' domain. The iPhone, iPad and various Android phones have popularized the app concept. Apps are not written in PHP, so are we moving away from PHP? In this session, Ivo takes a look at PHP's role in mobile technology and why he thinks PHP is a great tool for both mobile web and mobile apps. If you plan to do mobile development in the near future, you should see this session.


Ivo is an evangelist of PHP technology in professional and enterprise environments. He is the author of the books 'php|architect's Guide To Enterprise PHP Development' and 'php|architect's Guide to Cloud Computing' and a member of the Zend PHP 5.3 Certification Advisory Board. When he's not writing, tweeting or coaching developers, he can be found coding on a variety of projects, or speaking at various conferences. After a 10 year career as the CTO of Ibuildings, one of the PHP companies in Europe, Ivo is now the founder of Egeniq, a new startup dealing with mobile technology.
Captions: 
	00:00:04,740 --> 00:00:12,370
good morning this is okay right so yeah

00:00:10,210 --> 00:00:13,719
I want to talk about mobile Marco and

00:00:12,370 --> 00:00:15,610
his opening keynote actually already

00:00:13,719 --> 00:00:17,830
talked about iPads and iPhones and that

00:00:15,610 --> 00:00:20,200
to me is kind of a symptom of you know

00:00:17,830 --> 00:00:21,730
how hot it is to be talking about mobile

00:00:20,200 --> 00:00:25,210
everybody's doing something with mobile

00:00:21,730 --> 00:00:27,580
these days and I recently started a

00:00:25,210 --> 00:00:30,400
company about four months ago skokie

00:00:27,580 --> 00:00:32,920
genic and when dealing with mobile

00:00:30,400 --> 00:00:34,899
technology and I come from PHP

00:00:32,920 --> 00:00:37,390
background I've been doing PHP for about

00:00:34,899 --> 00:00:39,489
12 years now and now that we're moving

00:00:37,390 --> 00:00:41,769
into mobile we're also doing things like

00:00:39,489 --> 00:00:43,480
iphone apps etc but PHP is still a very

00:00:41,769 --> 00:00:46,239
important role and today I'd like to

00:00:43,480 --> 00:00:52,899
talk about PHP PHP role in the mobile

00:00:46,239 --> 00:00:55,420
ecosystem so if you'd like to follow me

00:00:52,899 --> 00:00:56,829
on twitter if you have questions we'll

00:00:55,420 --> 00:00:58,690
do it you a at the end but you can also

00:00:56,829 --> 00:01:02,050
find me on Twitter or find me around

00:00:58,690 --> 00:01:05,710
here my involvement of speech p goes

00:01:02,050 --> 00:01:08,170
back 12 years as i said i've used it as

00:01:05,710 --> 00:01:09,820
a developer i managed to i was a CTO at

00:01:08,170 --> 00:01:12,280
a company that does love it with PHP

00:01:09,820 --> 00:01:14,950
development i'm in the PHP sent

00:01:12,280 --> 00:01:17,590
certification advisory board I really

00:01:14,950 --> 00:01:19,869
love PHP i mean when i started doing PHP

00:01:17,590 --> 00:01:22,570
about 12 years ago I came from a c++

00:01:19,869 --> 00:01:24,399
background and it was like I couldn't

00:01:22,570 --> 00:01:25,960
understand why everybody wasn't using

00:01:24,399 --> 00:01:28,360
PHP because it was so much easier than

00:01:25,960 --> 00:01:30,460
all this other languages and then has

00:01:28,360 --> 00:01:33,399
stuck around so I'm still doing out of

00:01:30,460 --> 00:01:35,649
HP there but before I start with peach

00:01:33,399 --> 00:01:38,109
piece role in the mobile ecosystem let's

00:01:35,649 --> 00:01:41,649
first think for a minute about what it

00:01:38,109 --> 00:01:43,509
means when we speak about mobile mobile

00:01:41,649 --> 00:01:45,909
is not just about phones you know when I

00:01:43,509 --> 00:01:47,500
talk to somebody and I say I have a

00:01:45,909 --> 00:01:49,359
mobile company and they say oh then you

00:01:47,500 --> 00:01:51,429
must develop apps but it's so much more

00:01:49,359 --> 00:01:53,409
than that it's the fact that the web is

00:01:51,429 --> 00:01:56,140
increasingly mobile it's the fact that

00:01:53,409 --> 00:01:58,630
we have access to information from

00:01:56,140 --> 00:02:00,490
anywhere anytime and that's really the

00:01:58,630 --> 00:02:03,549
whole power of the mobile movement and

00:02:00,490 --> 00:02:05,469
that's kind of revolutionary I mean in

00:02:03,549 --> 00:02:06,789
the past we used to have phones that

00:02:05,469 --> 00:02:08,350
were connected to a wall with a wall

00:02:06,789 --> 00:02:09,580
socket and there was like one place in

00:02:08,350 --> 00:02:11,319
the house where we could use the phone

00:02:09,580 --> 00:02:13,780
and the interesting thing is that

00:02:11,319 --> 00:02:14,600
Internet has been like that for quite a

00:02:13,780 --> 00:02:16,010
number of years

00:02:14,600 --> 00:02:18,680
no the only place you what we were able

00:02:16,010 --> 00:02:20,180
to do internet was at your desktop for

00:02:18,680 --> 00:02:22,730
example and then of course we got

00:02:20,180 --> 00:02:24,110
laptops etc but now we've got internet

00:02:22,730 --> 00:02:27,290
on the go we've got access to the

00:02:24,110 --> 00:02:29,210
internet from everywhere and the fact

00:02:27,290 --> 00:02:31,100
that it's not just about phones is

00:02:29,210 --> 00:02:33,770
illustrated by this picture which I came

00:02:31,100 --> 00:02:36,560
across this is a Wi-Fi certification

00:02:33,770 --> 00:02:37,970
from a refrigerator so actually there

00:02:36,560 --> 00:02:39,380
are refrigerators now that have an

00:02:37,970 --> 00:02:43,550
internet connection they can basically

00:02:39,380 --> 00:02:44,720
ping your fridge and I think that I try

00:02:43,550 --> 00:02:46,970
to understand you know why they would

00:02:44,720 --> 00:02:48,920
have internet connectivity on a

00:02:46,970 --> 00:02:50,300
refrigerator but there's this eternal

00:02:48,920 --> 00:02:51,680
dilemma that you know if you close your

00:02:50,300 --> 00:02:53,450
fridge you're never really sure if the

00:02:51,680 --> 00:02:55,520
light goes off now you can basically

00:02:53,450 --> 00:02:58,190
down it to your fridge or ssh into your

00:02:55,520 --> 00:03:01,550
creation and see if the lights on that's

00:02:58,190 --> 00:03:03,620
a that's an example of how more and more

00:03:01,550 --> 00:03:07,150
devices are basically becoming connected

00:03:03,620 --> 00:03:09,020
and are able to do stuff with Internet

00:03:07,150 --> 00:03:11,600
another way to look at that is that

00:03:09,020 --> 00:03:13,490
we're moving from the web know we've

00:03:11,600 --> 00:03:15,230
been always been called web developers

00:03:13,490 --> 00:03:16,850
because we're doing stuff with web the

00:03:15,230 --> 00:03:18,590
more the Internet in general it's no

00:03:16,850 --> 00:03:21,500
longer just about the web it's basically

00:03:18,590 --> 00:03:24,890
about information on the internet that's

00:03:21,500 --> 00:03:27,290
another way to look at it so if we do

00:03:24,890 --> 00:03:29,330
internet on the go then there's a number

00:03:27,290 --> 00:03:32,060
of uses characteristics that we can take

00:03:29,330 --> 00:03:33,830
into account one thing that we have to

00:03:32,060 --> 00:03:36,080
realize is that people that are on the

00:03:33,830 --> 00:03:38,240
go and are using a mobile website have a

00:03:36,080 --> 00:03:39,800
much shorter attention span for example

00:03:38,240 --> 00:03:41,180
if I'm waiting for the bus I don't have

00:03:39,800 --> 00:03:43,070
the time to read like really long

00:03:41,180 --> 00:03:46,190
articles I want short bits of news for

00:03:43,070 --> 00:03:48,320
example the other things like typing is

00:03:46,190 --> 00:03:49,820
really annoying even though phones have

00:03:48,320 --> 00:03:51,560
become smarter and smarter it's still

00:03:49,820 --> 00:03:53,360
annoying to type long stories on on a

00:03:51,560 --> 00:03:55,340
device so we have to take into account

00:03:53,360 --> 00:03:58,670
that typing is something that people

00:03:55,340 --> 00:04:01,250
will not want to do as much but I also

00:03:58,670 --> 00:04:02,810
liked about mobile is that it gives you

00:04:01,250 --> 00:04:05,030
context awareness you know the phone

00:04:02,810 --> 00:04:06,230
knows where you are it knows the time of

00:04:05,030 --> 00:04:08,300
date it even knows you know the

00:04:06,230 --> 00:04:09,680
direction you are you're holding it so

00:04:08,300 --> 00:04:13,550
we can get a lot more contextual

00:04:09,680 --> 00:04:15,350
information for example like I always

00:04:13,550 --> 00:04:17,330
wonder like in ikea they have these

00:04:15,350 --> 00:04:19,070
really nice brochures that that that

00:04:17,330 --> 00:04:20,810
tell you you know where as we

00:04:19,070 --> 00:04:22,190
or the products are located and what I

00:04:20,810 --> 00:04:23,840
would really like to see is for example

00:04:22,190 --> 00:04:25,820
an ikea app that would really help me

00:04:23,840 --> 00:04:27,470
when I'm in the store basically direct

00:04:25,820 --> 00:04:29,300
me around and say hey if you want to buy

00:04:27,470 --> 00:04:31,370
this particular cupboard it's located

00:04:29,300 --> 00:04:33,080
over there and you know context

00:04:31,370 --> 00:04:34,220
awareness being able to know where your

00:04:33,080 --> 00:04:35,570
users are gives you a lot of

00:04:34,220 --> 00:04:41,990
opportunities to do really interesting

00:04:35,570 --> 00:04:44,180
things it's also nice is that the phone

00:04:41,990 --> 00:04:46,220
has become one of the three pocket

00:04:44,180 --> 00:04:49,820
essentials how many of you carry a phone

00:04:46,220 --> 00:04:51,830
right now that it's almost everybody I

00:04:49,820 --> 00:04:54,470
guess and the interesting thing is that

00:04:51,830 --> 00:04:56,600
that especially amendment I leave the

00:04:54,470 --> 00:04:58,070
house there's this ritual that we always

00:04:56,600 --> 00:05:01,210
do you know when we go out of the door

00:04:58,070 --> 00:05:03,410
we do basically do this phone keys and

00:05:01,210 --> 00:05:05,720
our purse you know those are the three

00:05:03,410 --> 00:05:07,460
things that we have to have and the

00:05:05,720 --> 00:05:10,610
phone has become one of those devices

00:05:07,460 --> 00:05:11,720
that we feel you feel empty if we don't

00:05:10,610 --> 00:05:13,130
have it you know if you leave the house

00:05:11,720 --> 00:05:15,320
without your phone something feels weird

00:05:13,130 --> 00:05:17,360
and you're unconnected all day and that

00:05:15,320 --> 00:05:19,550
means that we have a user's

00:05:17,360 --> 00:05:21,110
characteristic of something that we know

00:05:19,550 --> 00:05:22,940
that the user always has with them so if

00:05:21,110 --> 00:05:24,770
we were able to reach to a user through

00:05:22,940 --> 00:05:26,300
a mobile website for example we're

00:05:24,770 --> 00:05:27,710
pretty much sure that we're much closer

00:05:26,300 --> 00:05:32,270
to the user because you will always have

00:05:27,710 --> 00:05:34,310
access to it on the other hand there's

00:05:32,270 --> 00:05:36,230
another form of mobile computing that's

00:05:34,310 --> 00:05:38,120
this kind of the opposite you know the

00:05:36,230 --> 00:05:40,520
phone is on the go short attention span

00:05:38,120 --> 00:05:41,690
but with iPads and tablets we're seeing

00:05:40,520 --> 00:05:43,760
a different form of computer users

00:05:41,690 --> 00:05:45,770
instead of sitting behind our desk we're

00:05:43,760 --> 00:05:49,400
now basically lying on the couch and

00:05:45,770 --> 00:05:51,050
reading today's news for example so this

00:05:49,400 --> 00:05:53,450
is another form of mobile but it's a

00:05:51,050 --> 00:05:54,950
it's a different form of mobile and what

00:05:53,450 --> 00:05:56,990
we see here is a lot of things like

00:05:54,950 --> 00:05:59,150
convergence for example having a TV show

00:05:56,990 --> 00:06:01,430
on TV like basically as the background

00:05:59,150 --> 00:06:04,040
and then interacting with the TV show

00:06:01,430 --> 00:06:05,450
from your iPad and we basically see

00:06:04,040 --> 00:06:06,950
there's a different users better but

00:06:05,450 --> 00:06:08,930
it's also mobile it's the fact that we

00:06:06,950 --> 00:06:13,280
have access to information right from

00:06:08,930 --> 00:06:16,220
our couch so if you look at the

00:06:13,280 --> 00:06:19,160
technologies that are the play a role in

00:06:16,220 --> 00:06:21,320
the mobile ecosystem then objective-c is

00:06:19,160 --> 00:06:23,150
a large one that's the language that cos

00:06:21,320 --> 00:06:24,500
used for applications that run along the

00:06:23,150 --> 00:06:27,740
iphone and all the other Apple devices

00:06:24,500 --> 00:06:30,110
Java is quite big androids a java-based

00:06:27,740 --> 00:06:31,470
blackberry uses java and you can even

00:06:30,110 --> 00:06:34,590
write Java for us

00:06:31,470 --> 00:06:36,480
nokia phones html5 is of course an

00:06:34,590 --> 00:06:40,610
important technology because the mobile

00:06:36,480 --> 00:06:42,720
web that's html5 in our browsers and

00:06:40,610 --> 00:06:44,460
what many people don't realize is that

00:06:42,720 --> 00:06:47,730
PHP can play a really important role

00:06:44,460 --> 00:06:50,280
there even for mobile apps we can use

00:06:47,730 --> 00:06:51,780
PHP like as a backend API or as a

00:06:50,280 --> 00:06:54,120
comfort management system to manage the

00:06:51,780 --> 00:06:56,310
content in half so what we see is that

00:06:54,120 --> 00:06:57,840
even though there's a lot of clients I

00:06:56,310 --> 00:07:02,280
technology speech peeps still plays a

00:06:57,840 --> 00:07:05,430
big role in that brings it to a kind of

00:07:02,280 --> 00:07:07,110
a discussion point on the one hand we

00:07:05,430 --> 00:07:08,880
have all these mobile apps right apps

00:07:07,110 --> 00:07:10,800
that run natively on our device on the

00:07:08,880 --> 00:07:12,630
other end of the spectrum we have the

00:07:10,800 --> 00:07:14,790
browser and there are people that say

00:07:12,630 --> 00:07:16,140
pay in the end we'll all be using the

00:07:14,790 --> 00:07:17,640
browser anyway because everything will

00:07:16,140 --> 00:07:20,130
move back to the browser because that's

00:07:17,640 --> 00:07:23,730
a technology that you know write once

00:07:20,130 --> 00:07:26,010
run anywhere you know but the thing is

00:07:23,730 --> 00:07:27,600
that browser applications they require a

00:07:26,010 --> 00:07:30,390
browser so that's kind of an extra

00:07:27,600 --> 00:07:31,890
hassle there you have to be online to be

00:07:30,390 --> 00:07:33,090
able to use it properly even though

00:07:31,890 --> 00:07:35,060
there are some technologies to to

00:07:33,090 --> 00:07:37,919
counter that and what I other I

00:07:35,060 --> 00:07:39,480
specifically see in browser applications

00:07:37,919 --> 00:07:40,770
is that they usually page space you know

00:07:39,480 --> 00:07:42,870
applications in the browser are

00:07:40,770 --> 00:07:45,390
typically pages and you go back and

00:07:42,870 --> 00:07:48,740
forth between pages so it's very much a

00:07:45,390 --> 00:07:51,780
page based model that that's used their

00:07:48,740 --> 00:07:53,850
native apps on the other hand are much

00:07:51,780 --> 00:07:55,410
easier to be able to use offline because

00:07:53,850 --> 00:07:58,200
they are installed on your phone they

00:07:55,410 --> 00:08:00,000
have data on the device what's also nice

00:07:58,200 --> 00:08:01,770
about apps is that they have kind of

00:08:00,000 --> 00:08:03,570
like the native device experience and

00:08:01,770 --> 00:08:05,580
what I mean with that is that it you can

00:08:03,570 --> 00:08:07,890
more easily use the features that a

00:08:05,580 --> 00:08:10,320
device offers like the touch screen like

00:08:07,890 --> 00:08:12,630
the camera like motion sensors it's all

00:08:10,320 --> 00:08:16,229
easier to use if you have a native app

00:08:12,630 --> 00:08:18,479
and one factor that currently plays a

00:08:16,229 --> 00:08:20,160
role is that it's easier to monetize

00:08:18,479 --> 00:08:22,320
apps to the App Store you know you can

00:08:20,160 --> 00:08:24,210
build a simple app and you can sell it

00:08:22,320 --> 00:08:25,740
for like seventy-nine cents in the app

00:08:24,210 --> 00:08:28,320
store it's a lot more difficult than

00:08:25,740 --> 00:08:29,940
websites people with websites they

00:08:28,320 --> 00:08:32,219
expect every information every website

00:08:29,940 --> 00:08:34,860
will be free basically so that's the

00:08:32,219 --> 00:08:37,650
current year factor but if you look at

00:08:34,860 --> 00:08:41,460
some statistics what we can see is that

00:08:37,650 --> 00:08:43,350
these are four numbers from q4 last year

00:08:41,460 --> 00:08:45,810
that the Android Market back then had

00:08:43,350 --> 00:08:48,480
about 100,000 apps the Apple App Store

00:08:45,810 --> 00:08:50,910
back then had 300,000 apps but there was

00:08:48,480 --> 00:08:52,770
an estimate that 3 million websites were

00:08:50,910 --> 00:08:54,360
optimized for the web so you might say

00:08:52,770 --> 00:08:56,730
that apps will lose in the end because

00:08:54,360 --> 00:08:58,230
the mobile web is so much bigger but I

00:08:56,730 --> 00:08:59,640
look at it differently because the web

00:08:58,230 --> 00:09:00,900
has been around for quite a while and

00:08:59,640 --> 00:09:03,960
apps have only been around for the last

00:09:00,900 --> 00:09:05,940
23 years and already ten percent of what

00:09:03,960 --> 00:09:07,860
users do on their phone seems to be

00:09:05,940 --> 00:09:10,050
happening through the apps so I think

00:09:07,860 --> 00:09:13,970
apps will continue to play an important

00:09:10,050 --> 00:09:17,190
role so I'd like to do basically see

00:09:13,970 --> 00:09:18,750
what the audience thinks of this how

00:09:17,190 --> 00:09:21,980
many of you think that eventually

00:09:18,750 --> 00:09:25,260
everything will move back to the browser

00:09:21,980 --> 00:09:26,610
okay that's a maybe thirty percent and

00:09:25,260 --> 00:09:29,700
how many of you think that apps are the

00:09:26,610 --> 00:09:32,220
way to go it's roughly the same number

00:09:29,700 --> 00:09:34,470
of hands basically and that's something

00:09:32,220 --> 00:09:36,450
that I also noticed when I did a kind of

00:09:34,470 --> 00:09:38,280
an unscientific poll on Twitter and has

00:09:36,450 --> 00:09:39,600
the same question and you see that you

00:09:38,280 --> 00:09:40,830
know a lot of people think that

00:09:39,600 --> 00:09:43,380
everything will be running in the

00:09:40,830 --> 00:09:45,950
browser eventually but almost just as

00:09:43,380 --> 00:09:48,360
large a portion will think that you know

00:09:45,950 --> 00:09:50,520
things will happen in apps and I think

00:09:48,360 --> 00:09:51,930
this is the important section here we

00:09:50,520 --> 00:09:53,010
will use the browser for content

00:09:51,930 --> 00:09:54,930
consumption you know the browser will

00:09:53,010 --> 00:09:57,360
never go away of course what apps are

00:09:54,930 --> 00:10:02,190
much more convenient to do interactive

00:09:57,360 --> 00:10:04,470
things and to produce stuff so I want to

00:10:02,190 --> 00:10:07,320
look at both browser based mobile apps

00:10:04,470 --> 00:10:10,110
and native apps today at beach bistro in

00:10:07,320 --> 00:10:12,750
there so if we start with the browser

00:10:10,110 --> 00:10:15,480
based apps then one of the most

00:10:12,750 --> 00:10:17,310
important things we need to know as the

00:10:15,480 --> 00:10:19,230
speedy fell apart is device detection

00:10:17,310 --> 00:10:21,210
and that's all in the user agent so

00:10:19,230 --> 00:10:23,160
basically we need to know is our user

00:10:21,210 --> 00:10:25,020
using you know a desktop computer with a

00:10:23,160 --> 00:10:26,940
large browser or is he using a small

00:10:25,020 --> 00:10:30,030
device and we can see that in the user

00:10:26,940 --> 00:10:31,560
agent so these are two examples of user

00:10:30,030 --> 00:10:33,660
agents ones from the iphone a bonus from

00:10:31,560 --> 00:10:35,760
an android phone and in the user agent

00:10:33,660 --> 00:10:37,470
that we get learn when we run a PHP

00:10:35,760 --> 00:10:39,300
application we can basically see that

00:10:37,470 --> 00:10:41,400
not only that it's an iphone but we can

00:10:39,300 --> 00:10:43,470
also see what browser it's using and get

00:10:41,400 --> 00:10:46,140
all kinds of interesting information if

00:10:43,470 --> 00:10:47,910
you want to process that in PHP it's

00:10:46,140 --> 00:10:49,710
very simple with it just a few lines of

00:10:47,910 --> 00:10:50,400
codes we can basically detects this user

00:10:49,710 --> 00:10:52,750
agents

00:10:50,400 --> 00:10:54,940
so in our PHP script you can basically

00:10:52,750 --> 00:10:57,610
say okay let's read the user agent from

00:10:54,940 --> 00:10:59,080
our server variables and if Android is

00:10:57,610 --> 00:11:00,910
somewhere in there then we say hello

00:10:59,080 --> 00:11:03,310
android and iphone somewhere in there we

00:11:00,910 --> 00:11:05,290
say hello iphone so within a few lines

00:11:03,310 --> 00:11:07,120
of code to basically detected that the

00:11:05,290 --> 00:11:08,530
user is using a mobile device and we can

00:11:07,120 --> 00:11:12,760
show them something specific to that

00:11:08,530 --> 00:11:13,900
device now of course this is very crude

00:11:12,760 --> 00:11:15,550
check you know we're just checking for

00:11:13,900 --> 00:11:18,160
Android and just checking for phone and

00:11:15,550 --> 00:11:21,610
luckily there's a number of libraries

00:11:18,160 --> 00:11:23,980
that we can use to make this easier this

00:11:21,610 --> 00:11:25,720
is one that I particularly like the tech

00:11:23,980 --> 00:11:28,750
mobile browsers that movie it's a

00:11:25,720 --> 00:11:30,640
website with a library that allows you

00:11:28,750 --> 00:11:32,500
to basically define on their website how

00:11:30,640 --> 00:11:35,530
you would want to treat mobile devices

00:11:32,500 --> 00:11:37,360
so for example you could say hey if

00:11:35,530 --> 00:11:39,130
somebody browsers with an iPad just show

00:11:37,360 --> 00:11:41,080
them the regular site because you know

00:11:39,130 --> 00:11:43,360
it fits the ipad screen but if they're

00:11:41,080 --> 00:11:46,120
on an oprah browser or if they're on an

00:11:43,360 --> 00:11:49,060
android device then please redirect them

00:11:46,120 --> 00:11:50,470
to specific URL and this wizard then

00:11:49,060 --> 00:11:52,360
generates a bit of code that you can

00:11:50,470 --> 00:11:54,160
integrate into your application and then

00:11:52,360 --> 00:11:57,010
you have a so free basically device

00:11:54,160 --> 00:11:58,900
detection code is bit ugly be coded it

00:11:57,010 --> 00:12:00,370
generates what is well documented so

00:11:58,900 --> 00:12:01,900
even if you're not using this code but

00:12:00,370 --> 00:12:03,460
you just want to see you know how are

00:12:01,900 --> 00:12:05,590
detecting mobile Oprah how are they

00:12:03,460 --> 00:12:10,330
detect I can blackberry it's very useful

00:12:05,590 --> 00:12:12,220
to look at this code a slightly more

00:12:10,330 --> 00:12:14,110
sophisticated way to do device detection

00:12:12,220 --> 00:12:16,270
is to use the device atlas the device

00:12:14,110 --> 00:12:18,490
Atlas is basically a website with a huge

00:12:16,270 --> 00:12:22,150
database of all things mobile of all

00:12:18,490 --> 00:12:24,400
mobile devices tablets phones etc and

00:12:22,150 --> 00:12:26,170
not just you know things like the doses

00:12:24,400 --> 00:12:28,240
have things like screen size and screen

00:12:26,170 --> 00:12:30,580
resolutions they also take into account

00:12:28,240 --> 00:12:34,390
you know the features that in a device

00:12:30,580 --> 00:12:35,590
has and this is a really useful library

00:12:34,390 --> 00:12:37,860
to be able to do right

00:12:35,590 --> 00:12:40,060
application-specific for a mobile device

00:12:37,860 --> 00:12:41,770
it's a commercial application I mean

00:12:40,060 --> 00:12:43,300
during development it's free but you

00:12:41,770 --> 00:12:45,220
have to pay a ninety nine dollars a year

00:12:43,300 --> 00:12:47,560
for production but it's quite nice low

00:12:45,220 --> 00:12:48,670
feat and a low fee and if you're if

00:12:47,560 --> 00:12:50,260
you're interested in a more free

00:12:48,670 --> 00:12:52,570
solution then look at where for ruffle

00:12:50,260 --> 00:12:54,310
is an open source project that basically

00:12:52,570 --> 00:12:58,720
does a similar thing it's an open source

00:12:54,310 --> 00:13:00,820
database of device information when you

00:12:58,720 --> 00:13:02,959
start doing a device detection

00:13:00,820 --> 00:13:06,920
there's a number of things I would like

00:13:02,959 --> 00:13:08,660
to to advise one of the things that you

00:13:06,920 --> 00:13:10,250
often see with mobile applications is

00:13:08,660 --> 00:13:11,750
that people are we directly to their

00:13:10,250 --> 00:13:13,490
home mobile home base so you're using

00:13:11,750 --> 00:13:15,890
mobile google to search some kind of

00:13:13,490 --> 00:13:17,630
product and you find a product on some

00:13:15,890 --> 00:13:19,339
kind of website you click the website

00:13:17,630 --> 00:13:21,230
the website says hey you're on a mobile

00:13:19,339 --> 00:13:23,600
device I'm going to redirect you to a

00:13:21,230 --> 00:13:25,279
fancy mobile home page but that takes me

00:13:23,600 --> 00:13:26,540
out of my user experience because I was

00:13:25,279 --> 00:13:29,300
looking for their home page I was

00:13:26,540 --> 00:13:30,860
looking for a specific product so if

00:13:29,300 --> 00:13:32,360
you're doing device detection try to

00:13:30,860 --> 00:13:33,890
redirect people to the page they were

00:13:32,360 --> 00:13:35,079
actually interested in so that you're

00:13:33,890 --> 00:13:37,430
not taking them out of the experience

00:13:35,079 --> 00:13:38,660
sure you would be your proud of you know

00:13:37,430 --> 00:13:40,910
the mobile website you want to redirect

00:13:38,660 --> 00:13:42,079
them to your fancy mobile home page but

00:13:40,910 --> 00:13:45,170
that might not be what the user was

00:13:42,079 --> 00:13:47,329
actually asking for it's also wise to

00:13:45,170 --> 00:13:49,040
always offer a classic option classic

00:13:47,329 --> 00:13:50,269
option like you know show me the regular

00:13:49,040 --> 00:13:52,579
home page because there might be a

00:13:50,269 --> 00:13:54,649
device that you that you fail to detect

00:13:52,579 --> 00:13:56,810
or new device that the databases don't

00:13:54,649 --> 00:13:58,279
know yet about and your website thinks

00:13:56,810 --> 00:14:00,140
it's a mobile device but the screen is

00:13:58,279 --> 00:14:02,360
huge because it's just you know some

00:14:00,140 --> 00:14:03,829
kind of tablet then it's nice that if

00:14:02,360 --> 00:14:05,270
you show them a small mobile version

00:14:03,829 --> 00:14:07,520
that you can also offer them the classic

00:14:05,270 --> 00:14:10,820
version of people can switch to the

00:14:07,520 --> 00:14:12,410
regular version also it's important to

00:14:10,820 --> 00:14:14,000
not make assumptions on the screen size

00:14:12,410 --> 00:14:16,010
for example one of the things we learned

00:14:14,000 --> 00:14:17,450
with the iphone was to know that the

00:14:16,010 --> 00:14:19,610
iphone when it went from three to four

00:14:17,450 --> 00:14:21,260
it got the retina display and basically

00:14:19,610 --> 00:14:23,120
the resolution doubled but the screen

00:14:21,260 --> 00:14:25,310
size didn't so basically the screen is

00:14:23,120 --> 00:14:27,140
still the same so if we are going

00:14:25,310 --> 00:14:29,180
against resolutions and for saying hey

00:14:27,140 --> 00:14:31,220
this device has a resolution of x that

00:14:29,180 --> 00:14:33,320
we would show the user something that

00:14:31,220 --> 00:14:36,290
will be too small to read or too big to

00:14:33,320 --> 00:14:38,000
click etc so don't just make assumptions

00:14:36,290 --> 00:14:39,800
on the on the resolutions of the screen

00:14:38,000 --> 00:14:44,959
try to take into account the actual size

00:14:39,800 --> 00:14:47,230
in in centimeters for example 20 to

00:14:44,959 --> 00:14:50,959
illustrate the device head detection I

00:14:47,230 --> 00:14:53,050
created a small sent framer example the

00:14:50,959 --> 00:14:55,610
interesting thing is that zend framework

00:14:53,050 --> 00:14:57,500
accuses few scripts no further go for

00:14:55,610 --> 00:14:59,300
the layout of actions and uses a layout

00:14:57,500 --> 00:15:01,310
script to define the overall look and

00:14:59,300 --> 00:15:03,050
feel of a website and it uses a

00:15:01,310 --> 00:15:04,430
bootstrapper to actually set everything

00:15:03,050 --> 00:15:05,839
up and that's something that we can

00:15:04,430 --> 00:15:07,970
easily hook into when we want to do

00:15:05,839 --> 00:15:09,709
mobile detection I'm using zend

00:15:07,970 --> 00:15:11,300
framework here is an example and many of

00:15:09,709 --> 00:15:12,880
you might use different frameworks and

00:15:11,300 --> 00:15:14,890
most frameworks it will work

00:15:12,880 --> 00:15:17,860
lethal I just use some framework because

00:15:14,890 --> 00:15:23,440
it's an easy example so if we have a

00:15:17,860 --> 00:15:26,470
look at browser this is the the default

00:15:23,440 --> 00:15:27,700
sent framework application if you

00:15:26,470 --> 00:15:29,710
install time frame rate from scratch

00:15:27,700 --> 00:15:33,790
then basically it comes with this test

00:15:29,710 --> 00:15:35,200
page to see if it's working so what I

00:15:33,790 --> 00:15:42,250
basically did was create a mobile

00:15:35,200 --> 00:15:43,780
version and should work to show you if I

00:15:42,250 --> 00:15:45,610
browse the same application with my

00:15:43,780 --> 00:15:46,990
mobile device I'm getting the mobile

00:15:45,610 --> 00:15:48,280
version and of course this is way too

00:15:46,990 --> 00:15:50,800
small to read for you so I could be

00:15:48,280 --> 00:15:53,980
showing you anything but luckily we have

00:15:50,800 --> 00:15:56,200
a thing called a simulator so it can

00:15:53,980 --> 00:15:58,600
basically show you that we not have a

00:15:56,200 --> 00:16:00,760
mobile version now there's a number of

00:15:58,600 --> 00:16:02,350
things that that I did hear one of the

00:16:00,760 --> 00:16:04,000
things was you know take into account of

00:16:02,350 --> 00:16:06,610
screen is slightly smaller so that you

00:16:04,000 --> 00:16:07,600
know the screen should be less wide but

00:16:06,610 --> 00:16:09,040
there's other things as well you know

00:16:07,600 --> 00:16:09,790
what change the text slightly so that we

00:16:09,040 --> 00:16:12,460
know that we're in the mobile

00:16:09,790 --> 00:16:14,080
application but also one thing to notice

00:16:12,460 --> 00:16:16,330
is that for example we have links here

00:16:14,080 --> 00:16:19,060
with a pipe in between them and over

00:16:16,330 --> 00:16:21,130
here we show them as a list and that's

00:16:19,060 --> 00:16:22,780
to stress the importance that it's not

00:16:21,130 --> 00:16:24,730
just about layouts you also have to

00:16:22,780 --> 00:16:27,490
carefully consider your content because

00:16:24,730 --> 00:16:30,040
on a mobile device just making things

00:16:27,490 --> 00:16:31,960
more might not be useful you know it

00:16:30,040 --> 00:16:34,840
might be more useful to present stuff in

00:16:31,960 --> 00:16:39,190
a slightly different way and you can do

00:16:34,840 --> 00:16:41,290
that easily here's my sin framework

00:16:39,190 --> 00:16:43,450
application you know if you're familiar

00:16:41,290 --> 00:16:45,460
with zend framework you'll recognize the

00:16:43,450 --> 00:16:48,430
default setup here with with layouts and

00:16:45,460 --> 00:16:50,290
stuff but I basically them did is create

00:16:48,430 --> 00:16:52,150
two separate layers i created the

00:16:50,290 --> 00:16:54,790
overall layout for a regular homepage

00:16:52,150 --> 00:16:56,950
and i created a mobile version which

00:16:54,790 --> 00:16:58,810
basically uses a separate style sheet

00:16:56,950 --> 00:17:00,610
here and it has some different text over

00:16:58,810 --> 00:17:03,520
here and this is basically you know

00:17:00,610 --> 00:17:05,020
mobile version of the layout I also did

00:17:03,520 --> 00:17:06,850
that for the views but with a view that

00:17:05,020 --> 00:17:08,709
took a different approach for the fuse I

00:17:06,850 --> 00:17:10,780
decided that I wanted the whole

00:17:08,709 --> 00:17:12,550
different experience for my user so I

00:17:10,780 --> 00:17:15,370
basically decided that I have two sets

00:17:12,550 --> 00:17:17,020
of these a long set of templates for the

00:17:15,370 --> 00:17:18,510
regular side and I have one set of

00:17:17,020 --> 00:17:21,130
templates specific to the mobile

00:17:18,510 --> 00:17:21,660
experience and in that mobile experience

00:17:21,130 --> 00:17:26,130
we can

00:17:21,660 --> 00:17:28,230
do things like put the links there's a

00:17:26,130 --> 00:17:30,810
PR it in between them instead of

00:17:28,230 --> 00:17:35,340
something else now once we set this up

00:17:30,810 --> 00:17:37,740
it's very easy to actually get to to

00:17:35,340 --> 00:17:39,330
make that switch so framework uses a

00:17:37,740 --> 00:17:41,430
bootstrapping concept and the bootstrap

00:17:39,330 --> 00:17:43,560
are basically executors codes that we

00:17:41,430 --> 00:17:45,330
put into the boots wrapper and as long

00:17:43,560 --> 00:17:46,920
as we call it underscore in it then

00:17:45,330 --> 00:17:48,990
sends framework will be able to find it

00:17:46,920 --> 00:17:50,760
so in this case we just created a

00:17:48,990 --> 00:17:52,620
function that we call in and mobile and

00:17:50,760 --> 00:17:55,020
that function will be gold every time a

00:17:52,620 --> 00:17:56,940
user browses this website and here we

00:17:55,020 --> 00:18:00,600
just basically call a very simple

00:17:56,940 --> 00:18:03,480
function and I've used the very crude

00:18:00,600 --> 00:18:05,130
detection again you know it's mobile in

00:18:03,480 --> 00:18:07,230
the user agent then yes you're on a

00:18:05,130 --> 00:18:08,820
mobile device and then basically if

00:18:07,230 --> 00:18:10,950
we're on a mobile device I'm telling the

00:18:08,820 --> 00:18:13,080
system to use a separate layout and to

00:18:10,950 --> 00:18:15,060
use a separate paths with thieves and

00:18:13,080 --> 00:18:17,490
this works similarly in many frameworks

00:18:15,060 --> 00:18:19,380
but this helps us to basically we use

00:18:17,490 --> 00:18:21,570
stuff like controller so the application

00:18:19,380 --> 00:18:23,250
logic the only right ones but you can

00:18:21,570 --> 00:18:24,770
create a different user experience by

00:18:23,250 --> 00:18:27,950
having different templates for the

00:18:24,770 --> 00:18:27,950
mobile website

00:18:36,290 --> 00:18:39,470
is to summarize it changes here you

00:18:38,090 --> 00:18:40,880
could see something like you know you

00:18:39,470 --> 00:18:45,490
could use different style sheets for

00:18:40,880 --> 00:18:50,440
mobile devices different templates and

00:18:45,490 --> 00:18:53,720
the mobile function with the detection

00:18:50,440 --> 00:18:55,670
and here's the to let me put them

00:18:53,720 --> 00:18:57,770
together you can basically see that on

00:18:55,670 --> 00:18:59,270
the mobile device again you know the

00:18:57,770 --> 00:19:02,030
difference does not clearly visible with

00:18:59,270 --> 00:19:03,080
just a few lines of code now the

00:19:02,030 --> 00:19:04,850
interesting thing is that in zend

00:19:03,080 --> 00:19:06,500
framework they recently added a new

00:19:04,850 --> 00:19:09,050
feature which is called the scent HTTP

00:19:06,500 --> 00:19:10,940
user agent and that makes it stuff even

00:19:09,050 --> 00:19:13,040
easier because it now has a user agent

00:19:10,940 --> 00:19:15,200
class that you can call and you can say

00:19:13,040 --> 00:19:16,910
really cool stuff like get the device

00:19:15,200 --> 00:19:19,730
and get a physical screen with so to

00:19:16,910 --> 00:19:21,400
find out you know how wide screen is but

00:19:19,730 --> 00:19:24,470
it also has really cool features like

00:19:21,400 --> 00:19:26,420
asking if the device has mp3play

00:19:24,470 --> 00:19:29,570
capabilities and which gave me good for

00:19:26,420 --> 00:19:31,130
example play sound etc and this under

00:19:29,570 --> 00:19:32,960
hood it can use the worth of the

00:19:31,130 --> 00:19:34,760
database that I mentioned the free open

00:19:32,960 --> 00:19:36,200
source database or if you have a

00:19:34,760 --> 00:19:38,270
commercial licence for the device unless

00:19:36,200 --> 00:19:40,010
it can use that as well you can even

00:19:38,270 --> 00:19:41,660
switch to that you can use mirthful in

00:19:40,010 --> 00:19:44,150
development and then the swype switch to

00:19:41,660 --> 00:19:45,890
device and less if you're if you have

00:19:44,150 --> 00:19:47,450
the budget to do to purchase a license

00:19:45,890 --> 00:19:48,920
there and you don't even have to change

00:19:47,450 --> 00:19:51,320
your code the code sister remains the

00:19:48,920 --> 00:19:55,360
same so that's repo powerful stuff and

00:19:51,320 --> 00:19:55,360
it's available instant framework 1.1

00:19:57,520 --> 00:20:02,510
when we discuss the UI for mobile

00:20:00,410 --> 00:20:03,860
devices then there's a number of very

00:20:02,510 --> 00:20:06,020
simple things that we need to take a

00:20:03,860 --> 00:20:07,490
take into account you know there was a

00:20:06,020 --> 00:20:09,110
there was a time when it was really

00:20:07,490 --> 00:20:10,670
popular to use the hover effect in

00:20:09,110 --> 00:20:12,830
browsers you know you would move your

00:20:10,670 --> 00:20:16,490
mouse across the menu and them the

00:20:12,830 --> 00:20:18,140
menu would just come out and well try to

00:20:16,490 --> 00:20:20,000
avoid such things in a mobile device

00:20:18,140 --> 00:20:22,220
because you know touch based devices

00:20:20,000 --> 00:20:23,750
don't really have like a hover thing

00:20:22,220 --> 00:20:25,790
because how would that work that would

00:20:23,750 --> 00:20:28,460
means I would have to like offer my

00:20:25,790 --> 00:20:30,650
finger above the the web page to open up

00:20:28,460 --> 00:20:32,870
a menu so try to avoid things like that

00:20:30,650 --> 00:20:34,940
and realize that it's no touch-based

00:20:32,870 --> 00:20:37,040
that basically means we need to be

00:20:34,940 --> 00:20:38,660
finger friendly we need to be able to

00:20:37,040 --> 00:20:40,670
take to account that the user will be

00:20:38,660 --> 00:20:44,030
using their finger to to use the device

00:20:40,670 --> 00:20:45,380
and that's a another thing there is for

00:20:44,030 --> 00:20:47,240
example we use when we use a mouse

00:20:45,380 --> 00:20:49,550
pointer your mouse pointer is

00:20:47,240 --> 00:20:52,429
is a few pixels wide and we have very

00:20:49,550 --> 00:20:55,160
precise movement with a mouse but our

00:20:52,429 --> 00:20:57,050
fingers are quite I mean for example if

00:20:55,160 --> 00:20:58,580
I take my screen and put my finger on it

00:20:57,050 --> 00:21:00,440
I'm blocking about twenty-five percent

00:20:58,580 --> 00:21:02,690
of my of my screen so we have to take

00:21:00,440 --> 00:21:04,970
into a gum things like make the buttons

00:21:02,690 --> 00:21:07,570
bigger make links bigger you know just

00:21:04,970 --> 00:21:09,830
make sure that people aren't you know

00:21:07,570 --> 00:21:12,080
screwing around with with their fingers

00:21:09,830 --> 00:21:15,559
in way too small devices every way too

00:21:12,080 --> 00:21:17,240
small interfaces an interesting thing to

00:21:15,559 --> 00:21:18,800
take into account is that devices aren't

00:21:17,240 --> 00:21:20,540
just getting smaller than getting bigger

00:21:18,800 --> 00:21:22,010
as well so on the one hand getting

00:21:20,540 --> 00:21:23,929
bigger like the iPhone having a bigger

00:21:22,010 --> 00:21:26,780
resolution or the ipad which is a bigger

00:21:23,929 --> 00:21:29,059
device than the iphone but also small

00:21:26,780 --> 00:21:30,710
this is a picture of the ipod nano and

00:21:29,059 --> 00:21:32,540
the ipod nano kearney doesn't feature a

00:21:30,710 --> 00:21:34,450
web browser but it's very likely that in

00:21:32,540 --> 00:21:37,280
the future it will feature web browsers

00:21:34,450 --> 00:21:38,630
those are even tinier interfaces that we

00:21:37,280 --> 00:21:43,429
have to take into account then that we

00:21:38,630 --> 00:21:45,470
can design for that's interesting that

00:21:43,429 --> 00:21:47,809
in the industry we now see a movement

00:21:45,470 --> 00:21:49,670
within websites that people start

00:21:47,809 --> 00:21:52,460
designing interfaces to be more scalable

00:21:49,670 --> 00:21:54,320
and to be more friendly to to touch this

00:21:52,460 --> 00:21:56,900
is the new opinion pages of the of the

00:21:54,320 --> 00:21:58,370
times and what they basically did here

00:21:56,900 --> 00:22:00,380
was this is the regular website that you

00:21:58,370 --> 00:22:01,309
get when you browse by the desktop but

00:22:00,380 --> 00:22:03,230
you can see that this is much more

00:22:01,309 --> 00:22:04,700
finger friendly as well if you would

00:22:03,230 --> 00:22:06,740
browser someone I bet it's much easier

00:22:04,700 --> 00:22:09,800
to just select one of the items because

00:22:06,740 --> 00:22:11,330
you know they're only showing four items

00:22:09,800 --> 00:22:12,770
and they're big enough to be able to use

00:22:11,330 --> 00:22:14,900
with the finger so what we're seeing

00:22:12,770 --> 00:22:16,580
around us is that bats eyes are getting

00:22:14,900 --> 00:22:19,070
designed in such a way that there are

00:22:16,580 --> 00:22:24,890
more friendly to smaller or bigger

00:22:19,070 --> 00:22:26,420
devices when we move to a mobile

00:22:24,890 --> 00:22:27,679
websites when we start optimizing our

00:22:26,420 --> 00:22:30,140
websites for mobile it's very

00:22:27,679 --> 00:22:32,030
interesting to have a look at html5 how

00:22:30,140 --> 00:22:35,440
many of you are using html5 at the

00:22:32,030 --> 00:22:38,300
moment that's quite a few already and

00:22:35,440 --> 00:22:40,820
interesting thing is that html5 I

00:22:38,300 --> 00:22:43,070
consider it compared to relational for a

00:22:40,820 --> 00:22:44,780
lot easier you know in HTML for we had

00:22:43,070 --> 00:22:47,990
these really long Duk types and an html5

00:22:44,780 --> 00:22:50,960
you just have doctype HTML period same

00:22:47,990 --> 00:22:52,790
for a script or style I always found it

00:22:50,960 --> 00:22:54,290
funny that you know if you wanted to

00:22:52,790 --> 00:22:57,800
implement the stylesheet you had to say

00:22:54,290 --> 00:22:59,090
style and then type this text CSS now in

00:22:57,800 --> 00:23:00,980
the 12 years I've been working with

00:22:59,090 --> 00:23:04,190
HP I've never used anything else then

00:23:00,980 --> 00:23:06,560
Titus text CSS there so luckily in html5

00:23:04,190 --> 00:23:08,390
they said okay let's agree that nobody

00:23:06,560 --> 00:23:10,100
ever uses anything at other than than

00:23:08,390 --> 00:23:11,600
that and let's make that a default so

00:23:10,100 --> 00:23:15,050
you can just put style there without

00:23:11,600 --> 00:23:17,240
anything else also nice nation of five

00:23:15,050 --> 00:23:19,820
is that is becoming more semantic so you

00:23:17,240 --> 00:23:21,410
know HTML for site are usually big piles

00:23:19,820 --> 00:23:24,890
of diffs you know day for this day for

00:23:21,410 --> 00:23:26,960
that and an html5 is much easier to add

00:23:24,890 --> 00:23:29,120
semantics like this is a header this is

00:23:26,960 --> 00:23:31,910
a footer this is a section this is an

00:23:29,120 --> 00:23:34,220
article and it makes it much easier to

00:23:31,910 --> 00:23:38,900
parse for example also with with v2

00:23:34,220 --> 00:23:40,580
eaters and stuff html5 salts are quite

00:23:38,900 --> 00:23:42,950
powerful you know we finally have local

00:23:40,580 --> 00:23:46,220
storage so we can store a limited amount

00:23:42,950 --> 00:23:47,690
of data on the client side and it's 2011

00:23:46,220 --> 00:23:49,070
and we can finally have video in our

00:23:47,690 --> 00:23:50,930
websites you know it's always been

00:23:49,070 --> 00:23:52,970
confined to to using flash or plugins

00:23:50,930 --> 00:23:54,710
and finally we now have powerful tag

00:23:52,970 --> 00:23:56,330
that we can just embed video within the

00:23:54,710 --> 00:23:58,430
web page there's a number of other

00:23:56,330 --> 00:24:00,800
things so if you can see is that html5

00:23:58,430 --> 00:24:04,970
in comparison with HTML 4 is quite

00:24:00,800 --> 00:24:06,350
powerful and it's quite I mean we go

00:24:04,970 --> 00:24:08,480
notice that quite a few people are using

00:24:06,350 --> 00:24:09,980
html5 already the thing is that most

00:24:08,480 --> 00:24:12,830
browsers most modern browsers actually

00:24:09,980 --> 00:24:15,170
support html5 even though the standard

00:24:12,830 --> 00:24:17,720
isn't completed yet it's still like in

00:24:15,170 --> 00:24:19,790
draft stages browsers already support

00:24:17,720 --> 00:24:22,790
most of the standard and all of the

00:24:19,790 --> 00:24:24,260
popular browsers even ie which is you

00:24:22,790 --> 00:24:26,330
know known in the past for not adhering

00:24:24,260 --> 00:24:28,940
to standards so much as quite a good

00:24:26,330 --> 00:24:30,650
implementation of the html5 standard but

00:24:28,940 --> 00:24:32,360
clean there are always some exceptions

00:24:30,650 --> 00:24:34,820
they didn't support the article attack

00:24:32,360 --> 00:24:36,080
until EA and nine but yeah it's good to

00:24:34,820 --> 00:24:39,820
see that most of the browsers are

00:24:36,080 --> 00:24:39,820
sticking to this this new standard

00:24:41,420 --> 00:24:47,210
a few more things to consider it's

00:24:45,140 --> 00:24:50,600
interesting to just like I mentioned in

00:24:47,210 --> 00:24:52,310
the in the demo earlier don't just pay

00:24:50,600 --> 00:24:53,930
attention to the layout pay attention to

00:24:52,310 --> 00:24:55,700
the content as well maybe you need to

00:24:53,930 --> 00:24:57,680
make shorter versions of your articles

00:24:55,700 --> 00:25:00,920
or shorter versions of your pages you'll

00:24:57,680 --> 00:25:03,020
be useful on a mobile device and I'd

00:25:00,920 --> 00:25:04,820
like to stress that it's important to

00:25:03,020 --> 00:25:06,560
think in terms like scenario-based

00:25:04,820 --> 00:25:08,600
filtered management so we're not just

00:25:06,560 --> 00:25:10,430
you know building a content management

00:25:08,600 --> 00:25:12,560
system for texts that should be consumed

00:25:10,430 --> 00:25:14,180
on the web try to think of the scenarios

00:25:12,560 --> 00:25:16,850
how is the user going to consume this

00:25:14,180 --> 00:25:18,620
content for example one use case might

00:25:16,850 --> 00:25:20,690
be my users don't to use this content

00:25:18,620 --> 00:25:22,100
but is in the store or this is typical

00:25:20,690 --> 00:25:23,870
content that somebody would use while

00:25:22,100 --> 00:25:25,490
they're waiting on the bus and thinking

00:25:23,870 --> 00:25:28,430
about how the user which use the content

00:25:25,490 --> 00:25:30,290
will help you basically make better

00:25:28,430 --> 00:25:32,300
content management systems so that are

00:25:30,290 --> 00:25:35,350
optimized for the various use cases that

00:25:32,300 --> 00:25:35,350
people use devices

00:25:45,740 --> 00:25:50,360
it's interesting that since the web has

00:25:48,800 --> 00:25:52,580
called mobile a number of frameworks

00:25:50,360 --> 00:25:54,800
have come out that make development of

00:25:52,580 --> 00:25:56,330
mobile websites easier and jqtouch is

00:25:54,800 --> 00:25:59,570
one of them there are more but I just

00:25:56,330 --> 00:26:03,380
shown this one as an example take your

00:25:59,570 --> 00:26:05,660
dust I think I can give sure

00:26:03,380 --> 00:26:08,750
demonstration of that jqtouch is

00:26:05,660 --> 00:26:12,200
basically a jquery plugin that builds an

00:26:08,750 --> 00:26:15,980
app actually builds an HTML site that

00:26:12,200 --> 00:26:19,100
looks like a like a device application

00:26:15,980 --> 00:26:25,220
and of course my connection doesn't work

00:26:19,100 --> 00:26:29,630
when I need it but again I and you can

00:26:25,220 --> 00:26:33,800
show later out of ourselves just so if

00:26:29,630 --> 00:26:35,690
you go to this URL if your mobile device

00:26:33,800 --> 00:26:37,580
you can actually give it a try the

00:26:35,690 --> 00:26:41,390
istick thing is that jqtouch is written

00:26:37,580 --> 00:26:43,820
in javascript is actually using a jquery

00:26:41,390 --> 00:26:45,650
and you can with very simple javascript

00:26:43,820 --> 00:26:47,300
lines you can basically create an

00:26:45,650 --> 00:26:50,840
experience that looks like a device

00:26:47,300 --> 00:26:53,320
experience and I can look at the code

00:26:50,840 --> 00:26:53,320
for a bit

00:27:08,340 --> 00:27:12,840
this is just an example of how with very

00:27:10,980 --> 00:27:15,210
simple JavaScript course you can do

00:27:12,840 --> 00:27:16,679
things like creating swipes you know

00:27:15,210 --> 00:27:18,510
swipes with a with a finger on the

00:27:16,679 --> 00:27:20,100
iPhone you can implement them very

00:27:18,510 --> 00:27:21,809
easily in JavaScript and the jqtouch

00:27:20,100 --> 00:27:23,940
framework basically takes care of

00:27:21,809 --> 00:27:26,429
converting that was something that has

00:27:23,940 --> 00:27:28,409
an actual touch experience if you're

00:27:26,429 --> 00:27:29,940
writing applications web applications

00:27:28,409 --> 00:27:32,010
but you want them to look like you know

00:27:29,940 --> 00:27:33,779
a device experience if you want to give

00:27:32,010 --> 00:27:36,150
people the idea that they are actually

00:27:33,779 --> 00:27:43,470
using the device and jqtouch is a very

00:27:36,150 --> 00:27:44,720
interesting framework to look at is

00:27:43,470 --> 00:27:47,190
there are some other alternatives

00:27:44,720 --> 00:27:49,529
jqtouch was built on top of jQuery

00:27:47,190 --> 00:27:51,779
jQuery itself has now take very mobile

00:27:49,529 --> 00:27:54,539
which is also quite an interesting

00:27:51,779 --> 00:27:58,380
framework sensual touch is another

00:27:54,539 --> 00:28:00,210
framework it's based on I think not why

00:27:58,380 --> 00:28:02,220
you I but one of the other ex yes and on

00:28:00,210 --> 00:28:04,020
the xes JavaScript framework there is

00:28:02,220 --> 00:28:06,570
quite a few JavaScript frameworks that

00:28:04,020 --> 00:28:08,760
you can use to build applications that

00:28:06,570 --> 00:28:11,669
look like mobile applications and the

00:28:08,760 --> 00:28:13,200
interesting thing is that basically

00:28:11,669 --> 00:28:14,789
based on the beach be skills that you

00:28:13,200 --> 00:28:17,580
already have to build you know all kinds

00:28:14,789 --> 00:28:19,590
of existing websites the bit of new HTML

00:28:17,580 --> 00:28:21,510
knowledge and a set of tools it's very

00:28:19,590 --> 00:28:23,039
easy to create mobile website there's

00:28:21,510 --> 00:28:25,440
basically no reason why you shouldn't

00:28:23,039 --> 00:28:27,779
start making your websites available on

00:28:25,440 --> 00:28:29,520
mobile right from the start you know in

00:28:27,779 --> 00:28:31,890
your next project try to consider that

00:28:29,520 --> 00:28:33,809
your users may not be just using a

00:28:31,890 --> 00:28:35,520
desktop device but they may be browsing

00:28:33,809 --> 00:28:37,409
your website on a mobile device so you

00:28:35,520 --> 00:28:38,970
might just as well take that into

00:28:37,409 --> 00:28:42,480
account because it's not that hard and

00:28:38,970 --> 00:28:43,529
it's actually very easy to do all right

00:28:42,480 --> 00:28:47,279
let's look at the other end of the

00:28:43,529 --> 00:28:49,169
spectrum the native applications native

00:28:47,279 --> 00:28:51,240
applications are not written in PHP they

00:28:49,169 --> 00:28:53,309
are written in the language that blocks

00:28:51,240 --> 00:28:55,470
of the device and I run natively on the

00:28:53,309 --> 00:28:57,929
device so what speech piece roll there

00:28:55,470 --> 00:28:59,940
what we mostly see is that HP is very

00:28:57,929 --> 00:29:02,250
powerful to use in the api's that are

00:28:59,940 --> 00:29:03,720
powering those applications but the

00:29:02,250 --> 00:29:04,980
applications need data right the

00:29:03,720 --> 00:29:07,230
implications connecting the internet

00:29:04,980 --> 00:29:08,309
with Crees data from somewhere and

00:29:07,230 --> 00:29:10,440
whether it's an iphone app or a

00:29:08,309 --> 00:29:11,940
blackberry up the only data and PHP is

00:29:10,440 --> 00:29:16,230
very powerful tool to be able to write

00:29:11,940 --> 00:29:18,539
api's that create a data of course we've

00:29:16,230 --> 00:29:19,710
been writing api's four years in PHP but

00:29:18,539 --> 00:29:20,460
there is a number of things that might

00:29:19,710 --> 00:29:22,800
be interesting to

00:29:20,460 --> 00:29:25,980
when you optimize an API for mobile

00:29:22,800 --> 00:29:27,570
consumption you need to optimize the

00:29:25,980 --> 00:29:30,630
content there are some scalability

00:29:27,570 --> 00:29:33,930
concerns security I'll dive into each of

00:29:30,630 --> 00:29:35,610
these with a with a separate slide one

00:29:33,930 --> 00:29:37,860
thing is to consider the content that we

00:29:35,610 --> 00:29:40,440
are serving through the api's for

00:29:37,860 --> 00:29:42,180
example devices like the iPhone are

00:29:40,440 --> 00:29:43,800
quite powerful if you compare them to

00:29:42,180 --> 00:29:45,870
you know although generations of phones

00:29:43,800 --> 00:29:47,820
but if we compare them to a desktop then

00:29:45,870 --> 00:29:49,680
they're actually quite limited that very

00:29:47,820 --> 00:29:52,470
few months of memory the CPU is very

00:29:49,680 --> 00:29:54,060
very weak essentially so there's a

00:29:52,470 --> 00:29:55,800
number of things we can do to take into

00:29:54,060 --> 00:29:57,990
account the fact that it's quite limited

00:29:55,800 --> 00:29:59,700
technology still one of those things

00:29:57,990 --> 00:30:01,350
might be to consider if you're currently

00:29:59,700 --> 00:30:03,840
using your api's and you're splitting

00:30:01,350 --> 00:30:05,520
our large volume of XML data to convert

00:30:03,840 --> 00:30:08,340
it to a more mobile friendly format such

00:30:05,520 --> 00:30:10,920
as a Jason Jason is lighter Jason's

00:30:08,340 --> 00:30:13,790
easier to pass it's easier to compress

00:30:10,920 --> 00:30:17,070
it's easier to pass on the fly so

00:30:13,790 --> 00:30:19,290
consider Jason if your API is going to

00:30:17,070 --> 00:30:20,700
be used on my mobile devices there's

00:30:19,290 --> 00:30:22,830
other things you can do for example if

00:30:20,700 --> 00:30:24,540
you have a really high volume API you

00:30:22,830 --> 00:30:26,370
need to process a lot of data there's

00:30:24,540 --> 00:30:28,110
even some things like a binary be list

00:30:26,370 --> 00:30:30,000
format specific to the iphone which is a

00:30:28,110 --> 00:30:33,870
highly optimized binary format for

00:30:30,000 --> 00:30:35,550
exchanging data that you could use it's

00:30:33,870 --> 00:30:37,680
also useful to compress the data in your

00:30:35,550 --> 00:30:39,960
api's sometimes it's just a matter of

00:30:37,680 --> 00:30:41,490
enabling HTTP compression in your Apache

00:30:39,960 --> 00:30:43,590
configuration and then you're already

00:30:41,490 --> 00:30:45,330
sending like sixty percent less data

00:30:43,590 --> 00:30:46,680
over the Bible and that's important

00:30:45,330 --> 00:30:48,690
because you know if your users using

00:30:46,680 --> 00:30:51,330
Wi-Fi it's generally not a problem but

00:30:48,690 --> 00:30:53,700
many users are using 3g or edge order

00:30:51,330 --> 00:30:56,130
connections and some users have limited

00:30:53,700 --> 00:30:59,100
plants like they can only have a certain

00:30:56,130 --> 00:31:00,720
amount of data transfer each month so if

00:30:59,100 --> 00:31:02,730
you can compress data if we can make

00:31:00,720 --> 00:31:06,060
sure that we're not sending useless data

00:31:02,730 --> 00:31:09,390
to the ER to the device that will will

00:31:06,060 --> 00:31:10,980
be helpful to those users what is

00:31:09,390 --> 00:31:13,560
important to keep the responses small

00:31:10,980 --> 00:31:15,150
like if you're retrieving like product

00:31:13,560 --> 00:31:16,860
information only retrieve relevant

00:31:15,150 --> 00:31:19,800
product information and not the entire

00:31:16,860 --> 00:31:21,330
product database may be saying it might

00:31:19,800 --> 00:31:22,800
say okay let's let's just synchronize

00:31:21,330 --> 00:31:25,650
the whole product database to our

00:31:22,800 --> 00:31:28,130
iphones we access to it I'd not be the

00:31:25,650 --> 00:31:32,120
best idea if if if connection speeds

00:31:28,130 --> 00:31:35,720
is an issue but on the other hand try to

00:31:32,120 --> 00:31:37,760
make them not too small either there's a

00:31:35,720 --> 00:31:40,190
significant amount of routing overhead

00:31:37,760 --> 00:31:41,720
when it comes to mobile connections if I

00:31:40,190 --> 00:31:45,470
use an application and the application

00:31:41,720 --> 00:31:47,960
calls an API like API dot H P conference

00:31:45,470 --> 00:31:49,250
not code at UK or something that were

00:31:47,960 --> 00:31:51,260
basically happens is that the network

00:31:49,250 --> 00:31:53,030
even if i'm on 3g or whether the other

00:31:51,260 --> 00:31:54,410
networks they need to route the data

00:31:53,030 --> 00:31:56,330
they need to know where your phone is

00:31:54,410 --> 00:31:57,680
you know there's cell towers involved

00:31:56,330 --> 00:31:59,960
and there's a lot of overhead in in

00:31:57,680 --> 00:32:02,240
routing so for mobile devices is

00:31:59,960 --> 00:32:03,770
sometimes better to keep their response

00:32:02,240 --> 00:32:05,960
is small but not too small you know

00:32:03,770 --> 00:32:07,850
combined data if it makes sense if you

00:32:05,960 --> 00:32:09,740
have product data and you have like a

00:32:07,850 --> 00:32:12,320
name and a description and an image etc

00:32:09,740 --> 00:32:14,930
try to combine those in one call instead

00:32:12,320 --> 00:32:20,420
of three separate API calls because that

00:32:14,930 --> 00:32:23,090
will optimize it scalability is another

00:32:20,420 --> 00:32:25,250
concern you know many people that write

00:32:23,090 --> 00:32:26,900
applications hope that they are featured

00:32:25,250 --> 00:32:29,600
in the app store in oil as one of the

00:32:26,900 --> 00:32:31,160
top 25 applications you know they're

00:32:29,600 --> 00:32:33,770
popular things like Angry Birds and

00:32:31,160 --> 00:32:35,390
those type of applications so one once

00:32:33,770 --> 00:32:37,580
that happens you must make sure that the

00:32:35,390 --> 00:32:39,530
API is powering your applications can

00:32:37,580 --> 00:32:40,940
actually you know handle that load but

00:32:39,530 --> 00:32:43,430
it's important to realize that it's like

00:32:40,940 --> 00:32:44,690
an 8020 rule so maybe only twenty

00:32:43,430 --> 00:32:47,930
percent of the applications actually

00:32:44,690 --> 00:32:50,300
gets great usage and gets a lot of users

00:32:47,930 --> 00:32:52,370
and has scalability problems eighty

00:32:50,300 --> 00:32:54,710
percent of the apps currently you know

00:32:52,370 --> 00:32:56,720
it just is on itself somewhere and maybe

00:32:54,710 --> 00:32:58,370
one people one person a day will

00:32:56,720 --> 00:33:01,040
download it you'll never have

00:32:58,370 --> 00:33:02,480
scalability issues so it's important big

00:33:01,040 --> 00:33:05,000
to accommodate you cannot predict this

00:33:02,480 --> 00:33:08,420
upfront so when you're designing api's

00:33:05,000 --> 00:33:10,570
try to make them scalable you know take

00:33:08,420 --> 00:33:12,560
into account things like cloud computing

00:33:10,570 --> 00:33:14,420
make things such a way that you can

00:33:12,560 --> 00:33:16,610
easily scale up if you notice that your

00:33:14,420 --> 00:33:18,560
application becomes popular that's easy

00:33:16,610 --> 00:33:20,990
to add machines or that is easy to add

00:33:18,560 --> 00:33:24,610
instances so that you can scale the API

00:33:20,990 --> 00:33:24,610
based on the actual usage pattern

00:33:26,020 --> 00:33:30,260
another important thing that we have to

00:33:28,130 --> 00:33:33,110
take into account with API design is is

00:33:30,260 --> 00:33:35,240
longevity typically when we have a PHP

00:33:33,110 --> 00:33:37,160
application that uses PHP API and

00:33:35,240 --> 00:33:38,840
something breaks we can easily fix it

00:33:37,160 --> 00:33:40,429
you know we fix the PHP application we

00:33:38,840 --> 00:33:42,710
fix the API and everything works

00:33:40,429 --> 00:33:45,379
but with apps there's a different

00:33:42,710 --> 00:33:47,029
deployment pattern because a web

00:33:45,379 --> 00:33:49,340
application I can easily update it and

00:33:47,029 --> 00:33:51,019
every user will see the new updates but

00:33:49,340 --> 00:33:52,730
with apps you know we just have to wait

00:33:51,019 --> 00:33:54,649
until the application is approved in the

00:33:52,730 --> 00:33:58,070
app store we have to wait until the user

00:33:54,649 --> 00:33:59,779
actually downloads the fix so we cannot

00:33:58,070 --> 00:34:01,129
easily quick fix ap eyes and that's

00:33:59,779 --> 00:34:03,679
something we have to take into account

00:34:01,129 --> 00:34:05,629
so backwards compatibility is an

00:34:03,679 --> 00:34:07,399
important issue there and what I always

00:34:05,629 --> 00:34:09,500
advise us to do things with like first

00:34:07,399 --> 00:34:11,599
URL so that if I create a new version of

00:34:09,500 --> 00:34:14,270
an API I could create a version number

00:34:11,599 --> 00:34:16,550
so that old applications can still use

00:34:14,270 --> 00:34:18,319
the old API and new applications will

00:34:16,550 --> 00:34:20,960
you use the new version with changed

00:34:18,319 --> 00:34:22,280
features etc so that all old versions

00:34:20,960 --> 00:34:26,030
people that haven't upgraded their app

00:34:22,280 --> 00:34:27,829
are not seeing weird results because

00:34:26,030 --> 00:34:29,329
you've upgraded the api's but that's

00:34:27,829 --> 00:34:31,069
even more important than with with

00:34:29,329 --> 00:34:34,579
regular applications if you're if you're

00:34:31,069 --> 00:34:36,970
dealing with apps try to version the

00:34:34,579 --> 00:34:36,970
URLs

00:34:43,060 --> 00:34:46,720
it's another issue with the longevity I

00:34:45,190 --> 00:34:48,730
mean how long are you going to support

00:34:46,720 --> 00:34:50,680
the api's you know we can't force people

00:34:48,730 --> 00:34:52,300
to leave their apps if we decide we no

00:34:50,680 --> 00:34:53,800
longer want to support a website we can

00:34:52,300 --> 00:34:55,600
take it down and we have no users

00:34:53,800 --> 00:34:58,090
anymore but you know the app stays

00:34:55,600 --> 00:34:59,530
around and you have to carefully

00:34:58,090 --> 00:35:01,240
consider do you want you have to stay

00:34:59,530 --> 00:35:03,280
around do you want to have be able to

00:35:01,240 --> 00:35:04,690
people to have people use the app even

00:35:03,280 --> 00:35:07,870
if you take down your website or your

00:35:04,690 --> 00:35:10,600
API that might be useful to provide some

00:35:07,870 --> 00:35:12,310
kind of fall back so sometimes it's

00:35:10,600 --> 00:35:13,900
useful to work with synchronized data

00:35:12,310 --> 00:35:16,270
instead of real-time data so you

00:35:13,900 --> 00:35:18,550
synchronize the data to the app and then

00:35:16,270 --> 00:35:20,440
even when the API is down or your API is

00:35:18,550 --> 00:35:22,180
no longer supported people can still use

00:35:20,440 --> 00:35:25,000
the app because the data is already on

00:35:22,180 --> 00:35:26,560
the device it's also useful to implement

00:35:25,000 --> 00:35:29,320
some kind of status check like you know

00:35:26,560 --> 00:35:31,150
if you're planning to take down the

00:35:29,320 --> 00:35:32,740
api's it's very useful if the app can

00:35:31,150 --> 00:35:34,150
actually check for availability you know

00:35:32,740 --> 00:35:36,430
instead of throwing up arrows because

00:35:34,150 --> 00:35:38,410
the API is unreachable just have a small

00:35:36,430 --> 00:35:42,100
call that basically says hey is the API

00:35:38,410 --> 00:35:43,870
online if so i use the AP article if not

00:35:42,100 --> 00:35:45,330
then I'm just going to reuse the data

00:35:43,870 --> 00:35:47,110
that I already have on the device

00:35:45,330 --> 00:35:53,830
there's another thing that's interesting

00:35:47,110 --> 00:35:56,920
in now api api security is also an

00:35:53,830 --> 00:35:58,900
interesting topic a very easy way to

00:35:56,920 --> 00:36:01,420
secure api scores is to use something

00:35:58,900 --> 00:36:04,420
like ssl so that lriv icicles are

00:36:01,420 --> 00:36:06,700
followed over https the interesting

00:36:04,420 --> 00:36:08,890
thing though is that if we do that in an

00:36:06,700 --> 00:36:10,570
iphone application then we suddenly have

00:36:08,890 --> 00:36:13,270
to get approval from the US government

00:36:10,570 --> 00:36:15,460
and the reason is that the app store is

00:36:13,270 --> 00:36:18,190
located in the US so even if you make an

00:36:15,460 --> 00:36:20,260
application that you surf do for example

00:36:18,190 --> 00:36:21,940
the users in Germany and the app is

00:36:20,260 --> 00:36:23,740
German and you're serving it only to

00:36:21,940 --> 00:36:25,570
determine population you still have to

00:36:23,740 --> 00:36:26,890
get the proof from the US government

00:36:25,570 --> 00:36:28,720
because you're using encryption

00:36:26,890 --> 00:36:31,600
technology in an application that gets

00:36:28,720 --> 00:36:34,690
exported from the US so and that

00:36:31,600 --> 00:36:36,490
basically asks 30 days of time it takes

00:36:34,690 --> 00:36:38,410
to get your application approved through

00:36:36,490 --> 00:36:39,490
the app flow process that's kind of a

00:36:38,410 --> 00:36:41,170
trade-off you know you can secure

00:36:39,490 --> 00:36:42,370
everything but then you need to take

00:36:41,170 --> 00:36:43,750
into account that there's some extra

00:36:42,370 --> 00:36:45,190
hassle involved because the US

00:36:43,750 --> 00:36:47,350
government doesn't want us to encrypt

00:36:45,190 --> 00:36:49,000
our data actually they usually approved

00:36:47,350 --> 00:36:49,800
their request so that's not a problem

00:36:49,000 --> 00:36:54,540
but it does take

00:36:49,800 --> 00:36:56,940
a bit of extra time oh if there's a

00:36:54,540 --> 00:36:59,100
popular mechanism to secure api's you

00:36:56,940 --> 00:37:02,100
know like Twitter use OAuth but office

00:36:59,100 --> 00:37:04,050
very much browser focused and this is

00:37:02,100 --> 00:37:06,210
quite difficult to use if you have an

00:37:04,050 --> 00:37:07,590
API you need to do a user authentication

00:37:06,210 --> 00:37:09,690
but you don't want to force it to the

00:37:07,590 --> 00:37:11,700
browser have a little bit x off if you

00:37:09,690 --> 00:37:13,860
google for x off your final relative to

00:37:11,700 --> 00:37:16,590
all of that's more app friendly than

00:37:13,860 --> 00:37:18,060
them or office or do actually also has

00:37:16,590 --> 00:37:21,960
some provisions to make that they're

00:37:18,060 --> 00:37:24,690
easier as interesting is that phone

00:37:21,960 --> 00:37:27,960
supports something that's called PKA pti

00:37:24,690 --> 00:37:30,000
public key infrastructure if we have an

00:37:27,960 --> 00:37:31,590
API for like a business application and

00:37:30,000 --> 00:37:33,780
we want to make sure that only our users

00:37:31,590 --> 00:37:36,270
are able to call this API then we can

00:37:33,780 --> 00:37:38,160
basically use certificates and mechanism

00:37:36,270 --> 00:37:40,440
that's called pls off make sure that

00:37:38,160 --> 00:37:42,480
only our app on the phones that we have

00:37:40,440 --> 00:37:43,740
approved can actually use the

00:37:42,480 --> 00:37:45,720
application and that's very useful for

00:37:43,740 --> 00:37:47,040
things like dashboard application with

00:37:45,720 --> 00:37:49,470
business information that we want to

00:37:47,040 --> 00:37:51,330
secure then that way then the API is not

00:37:49,470 --> 00:37:52,860
open to anybody else but just two phones

00:37:51,330 --> 00:37:56,160
that have a certain air client

00:37:52,860 --> 00:37:57,690
certificate on the phone and if you want

00:37:56,160 --> 00:37:59,070
to prevent tampering with fewer else

00:37:57,690 --> 00:38:00,810
like for example if we're afraid that

00:37:59,070 --> 00:38:02,310
somebody discovers the api's and is able

00:38:00,810 --> 00:38:04,860
to download stuff that we don't want

00:38:02,310 --> 00:38:07,470
them to it's a very easy way to secure

00:38:04,860 --> 00:38:09,240
that by basically signing the urls you

00:38:07,470 --> 00:38:11,640
can basically signing you are well by

00:38:09,240 --> 00:38:14,070
adding in hash which is a hash based on

00:38:11,640 --> 00:38:17,850
some secret that only your app and your

00:38:14,070 --> 00:38:20,010
API know and a time limit perhaps and a

00:38:17,850 --> 00:38:22,380
set of parameters so that if somebody

00:38:20,010 --> 00:38:23,910
changes you know that is they discover

00:38:22,380 --> 00:38:26,160
your API and they start fooling around

00:38:23,910 --> 00:38:27,870
with the parameters and I say X is 3 is

00:38:26,160 --> 00:38:29,250
texts instead of excess wrong the

00:38:27,870 --> 00:38:30,930
signature will be enveloped in your

00:38:29,250 --> 00:38:32,910
maybe I can say hey I'm not serving you

00:38:30,930 --> 00:38:34,350
this data but these are a number of

00:38:32,910 --> 00:38:37,500
things you can take into account if you

00:38:34,350 --> 00:38:40,220
want to secure the API and try to avoid

00:38:37,500 --> 00:38:40,220
abuse of it

00:38:42,440 --> 00:38:47,060
there's also a number of client-server

00:38:44,599 --> 00:38:48,829
considerations for example we're already

00:38:47,060 --> 00:38:50,810
quite used to processing things like

00:38:48,829 --> 00:38:52,790
images in PHP like for example for

00:38:50,810 --> 00:38:54,380
generating thumbnails what's even more

00:38:52,790 --> 00:38:57,050
important with devices like for example

00:38:54,380 --> 00:38:59,630
the ipad on the ipad which is fairly

00:38:57,050 --> 00:39:01,099
memory limited it's pretty difficult to

00:38:59,630 --> 00:39:02,869
work with large images in a high

00:39:01,099 --> 00:39:04,430
resolution it's easy to crash a nap

00:39:02,869 --> 00:39:07,190
because memory issues if you're working

00:39:04,430 --> 00:39:08,869
with high-resolution images you could

00:39:07,190 --> 00:39:10,790
consider you know scaling down the image

00:39:08,869 --> 00:39:12,410
on the ipad but since it's also CPU

00:39:10,790 --> 00:39:14,000
challenge that's also going to be

00:39:12,410 --> 00:39:16,400
troublesome and it will be quite

00:39:14,000 --> 00:39:19,040
time-consuming so what you might be able

00:39:16,400 --> 00:39:21,050
to do is basically add to your api all

00:39:19,040 --> 00:39:22,520
the versions of an image that you need

00:39:21,050 --> 00:39:23,990
like the thumbnail version the high

00:39:22,520 --> 00:39:26,720
resolution version a low resolution

00:39:23,990 --> 00:39:28,790
version and just add those images to

00:39:26,720 --> 00:39:30,589
your api so that the application can

00:39:28,790 --> 00:39:32,300
readily download them but then of course

00:39:30,589 --> 00:39:34,010
there's a trade-off you know if you put

00:39:32,300 --> 00:39:36,970
all these images on your server then

00:39:34,010 --> 00:39:40,250
there might be some more bandwidth and

00:39:36,970 --> 00:39:41,510
more downloads of data so you have to

00:39:40,250 --> 00:39:43,069
carefully trade-off there you have to

00:39:41,510 --> 00:39:45,380
actually look at the users pattern and

00:39:43,069 --> 00:39:47,420
look at hey my users going to use this

00:39:45,380 --> 00:39:49,849
over 3g so i cannot serve him all these

00:39:47,420 --> 00:39:51,500
images or my user is always on Wi-Fi so

00:39:49,849 --> 00:39:55,430
it's easy to just serve up the images

00:39:51,500 --> 00:39:57,829
from the api's another interesting thing

00:39:55,430 --> 00:39:59,569
is that apps native apps support the

00:39:57,829 --> 00:40:01,069
threading so they basically do

00:39:59,569 --> 00:40:03,140
multithreading which means that they can

00:40:01,069 --> 00:40:05,569
do multiple things at the same time and

00:40:03,140 --> 00:40:07,490
that makes it easy to use things in AP

00:40:05,569 --> 00:40:09,470
eyes like fire and forget API design

00:40:07,490 --> 00:40:11,750
which basically means we have made the I

00:40:09,470 --> 00:40:14,650
call that basically says please prepare

00:40:11,750 --> 00:40:16,849
me an image of a certain size and

00:40:14,650 --> 00:40:19,400
instead of having to wait for the extra

00:40:16,849 --> 00:40:21,950
result you can just wait for that result

00:40:19,400 --> 00:40:23,930
in the background fire it and forget and

00:40:21,950 --> 00:40:25,550
start doing other things have the user

00:40:23,930 --> 00:40:27,200
just interact with the application and

00:40:25,550 --> 00:40:28,730
in the background we just periodically

00:40:27,200 --> 00:40:30,710
check if the result is there and

00:40:28,730 --> 00:40:32,329
download the image because we have

00:40:30,710 --> 00:40:33,619
multithreading we can do those things in

00:40:32,329 --> 00:40:35,660
the background without you user even

00:40:33,619 --> 00:40:36,980
noticing them and you'll notice that if

00:40:35,660 --> 00:40:38,780
you're used to a lot of apps you'll see

00:40:36,980 --> 00:40:40,790
a little spinner and then suddenly you

00:40:38,780 --> 00:40:42,050
know images of beer etc and that's

00:40:40,790 --> 00:40:43,970
typically when you know background

00:40:42,050 --> 00:40:45,589
processing is used to load things on the

00:40:43,970 --> 00:40:51,290
fly while you're using the application

00:40:45,589 --> 00:40:52,579
of course if you want to reuse features

00:40:51,290 --> 00:40:53,420
that's another reason to consider

00:40:52,579 --> 00:40:56,030
pushing features

00:40:53,420 --> 00:40:59,740
down into the FBI's example blackberry

00:40:56,030 --> 00:41:01,700
uses Java and iOS uses objective-c and

00:40:59,740 --> 00:41:03,829
sometimes you have to implement the

00:41:01,700 --> 00:41:05,869
feature twice by putting some part of a

00:41:03,829 --> 00:41:11,839
feature into a back-end API you could

00:41:05,869 --> 00:41:13,430
reuse it across these devices now what

00:41:11,839 --> 00:41:17,869
makes speech be so interesting for all

00:41:13,430 --> 00:41:19,819
these mobile api's is that most of the

00:41:17,869 --> 00:41:22,940
things are discussed that are important

00:41:19,819 --> 00:41:25,040
to do optimization of abis are readily

00:41:22,940 --> 00:41:27,440
available in PHP PHP has great support

00:41:25,040 --> 00:41:30,140
for doing web services Jason is kind of

00:41:27,440 --> 00:41:32,089
native to beach the compression that's

00:41:30,140 --> 00:41:34,490
just usually one line of code or just a

00:41:32,089 --> 00:41:36,680
simple configuration option image

00:41:34,490 --> 00:41:39,440
manipulation with image Jake etc it's

00:41:36,680 --> 00:41:43,400
it's so easy in PHP that it's very very

00:41:39,440 --> 00:41:45,109
powerful to use PHP to do abim and in

00:41:43,400 --> 00:41:47,599
fact only the applications that we've

00:41:45,109 --> 00:41:49,609
developed so far the api's have been

00:41:47,599 --> 00:41:51,680
written in PHP and do instinct thing is

00:41:49,609 --> 00:41:53,540
based on our experience in the past

00:41:51,680 --> 00:41:54,859
couple of months is that when we write

00:41:53,540 --> 00:41:56,990
an app about twenty five or thirty

00:41:54,859 --> 00:41:58,730
percent of the time we actually spend on

00:41:56,990 --> 00:42:01,430
developing the API instead of the app

00:41:58,730 --> 00:42:04,569
and developing in PHP instead of in air

00:42:01,430 --> 00:42:04,569
and chava or all of things

00:42:13,640 --> 00:42:18,289
an interesting topic is dead it's

00:42:16,309 --> 00:42:19,819
possible to do the due to have the best

00:42:18,289 --> 00:42:23,660
of both worlds they have something

00:42:19,819 --> 00:42:25,640
that's both a nap and html5 and there's

00:42:23,660 --> 00:42:27,730
a number of frameworks out there that we

00:42:25,640 --> 00:42:31,519
can use to build native applications

00:42:27,730 --> 00:42:33,260
using that technology IP faces is one it

00:42:31,519 --> 00:42:36,200
runs on your server and it serves off

00:42:33,260 --> 00:42:38,150
you know PHP scripts etc but it has a

00:42:36,200 --> 00:42:39,619
framework that converts that basically

00:42:38,150 --> 00:42:41,569
to a native application so you have a

00:42:39,619 --> 00:42:43,819
native application on the device but

00:42:41,569 --> 00:42:45,650
actually the screens are not natively

00:42:43,819 --> 00:42:48,470
generated they're generated by PHP on

00:42:45,650 --> 00:42:50,750
the server it's also possible to create

00:42:48,470 --> 00:42:53,599
applications in html5 and have that code

00:42:50,750 --> 00:42:55,700
on the device itself products like

00:42:53,599 --> 00:42:58,369
titanium x appcelerator or phonegap

00:42:55,700 --> 00:43:00,410
phonegap is basically it bridges the gap

00:42:58,369 --> 00:43:02,210
between the phone and the browser so you

00:43:00,410 --> 00:43:04,279
have your browser based application and

00:43:02,210 --> 00:43:06,619
phonegap then makes available things

00:43:04,279 --> 00:43:09,230
like the camera the motion sensors etc

00:43:06,619 --> 00:43:12,710
in a JavaScript API to your web

00:43:09,230 --> 00:43:14,779
applications so using these tools he can

00:43:12,710 --> 00:43:17,269
basically write in familiar web

00:43:14,779 --> 00:43:21,769
technology and to end up with a natively

00:43:17,269 --> 00:43:24,109
compiled application on the device I'm

00:43:21,769 --> 00:43:26,089
not really a big fan of her of these

00:43:24,109 --> 00:43:27,589
things one of the problems that they

00:43:26,089 --> 00:43:29,000
have is that you know you write it once

00:43:27,589 --> 00:43:30,950
in the web technology and then it gets

00:43:29,000 --> 00:43:33,980
converted automatically to an iphone app

00:43:30,950 --> 00:43:35,750
into a blackberry app etc problem is it

00:43:33,980 --> 00:43:37,789
feels a lot like instant coffee now it's

00:43:35,750 --> 00:43:39,500
very easy if you need to serve coffee to

00:43:37,789 --> 00:43:41,630
a large number of people to get to serve

00:43:39,500 --> 00:43:44,299
them instant coffee and you usually get

00:43:41,630 --> 00:43:46,009
away with it but it's just not the best

00:43:44,299 --> 00:43:48,289
experience it's not you know freshly

00:43:46,009 --> 00:43:50,329
grinded coffee and that's the same with

00:43:48,289 --> 00:43:51,950
these generated applications they do the

00:43:50,329 --> 00:43:53,569
job and sometimes they are the best tool

00:43:51,950 --> 00:43:55,519
for the job and there are suitable for a

00:43:53,569 --> 00:43:57,470
floor project but if you want true

00:43:55,519 --> 00:43:59,299
native device experience if you want to

00:43:57,470 --> 00:44:02,269
build an application that works exactly

00:43:59,299 --> 00:44:04,190
the way people use in an application on

00:44:02,269 --> 00:44:07,069
a particular platform I would still go

00:44:04,190 --> 00:44:08,630
for the actual native experience one

00:44:07,069 --> 00:44:10,880
thing that you'll always hear this cross

00:44:08,630 --> 00:44:12,529
compiler say is that you'll have an

00:44:10,880 --> 00:44:14,150
iphone version that looks just like the

00:44:12,529 --> 00:44:16,309
android version and that's one of the

00:44:14,150 --> 00:44:17,720
mistakes because you know a user has

00:44:16,309 --> 00:44:20,089
either on either android phone or an

00:44:17,720 --> 00:44:22,000
iphone phone and if I'm an Android user

00:44:20,089 --> 00:44:23,980
I don't care what the iphone XP

00:44:22,000 --> 00:44:25,600
looks like I don't want an application

00:44:23,980 --> 00:44:27,340
that looks like an iphone application I

00:44:25,600 --> 00:44:28,570
want an application that behaves like

00:44:27,340 --> 00:44:30,520
all the other apps on the android

00:44:28,570 --> 00:44:32,380
platform that's more important and

00:44:30,520 --> 00:44:35,650
that's easier to accomplish when you do

00:44:32,380 --> 00:44:36,940
actual actual native device applications

00:44:35,650 --> 00:44:43,540
and you write it in the platform that

00:44:36,940 --> 00:44:46,360
you're actually used to before we go to

00:44:43,540 --> 00:44:49,570
Q&A I've got a number of slides with the

00:44:46,360 --> 00:44:51,990
number of topics that are kind of

00:44:49,570 --> 00:44:54,100
separate things that I wanted to show

00:44:51,990 --> 00:44:55,990
one of the things when I when I was

00:44:54,100 --> 00:44:57,070
discussing the topic for my talking on

00:44:55,990 --> 00:44:59,860
the pitch p in the mobile ecosystem

00:44:57,070 --> 00:45:02,260
somebody said ok so can we run PHP on

00:44:59,860 --> 00:45:03,460
mobile devices I kind of asked why would

00:45:02,260 --> 00:45:05,190
you want to do that why would I want to

00:45:03,460 --> 00:45:07,390
have peach be running on my phone but

00:45:05,190 --> 00:45:09,640
apparently there's people that that like

00:45:07,390 --> 00:45:11,620
that so there's a project called PHP for

00:45:09,640 --> 00:45:13,420
Android that is actually a peach be

00:45:11,620 --> 00:45:14,560
stack that can run on the Android device

00:45:13,420 --> 00:45:17,790
then you have an android phone and you

00:45:14,560 --> 00:45:21,250
can run PHP on top of the android phone

00:45:17,790 --> 00:45:22,810
nokia even invented paneth i think they

00:45:21,250 --> 00:45:25,060
kind of misunderstood the whole lab

00:45:22,810 --> 00:45:29,380
acronym in our lab is linux apache mysql

00:45:25,060 --> 00:45:32,320
and vantas windows apache mysql and the

00:45:29,380 --> 00:45:34,750
be in vamp is not nokia or symbian in

00:45:32,320 --> 00:45:37,420
Sarah personal so this is the personal

00:45:34,750 --> 00:45:40,840
application and my sickle and PHP stack

00:45:37,420 --> 00:45:42,580
for symbian phones I don't see a lot of

00:45:40,840 --> 00:45:44,380
use cases for technology like that but

00:45:42,580 --> 00:45:47,200
yes if you have a nokia phone you can

00:45:44,380 --> 00:45:49,480
run a lab sorry a band stack on top of

00:45:47,200 --> 00:45:51,930
it and you can run a PHP applications on

00:45:49,480 --> 00:45:51,930
the device

00:45:54,289 --> 00:45:58,189
I showed an example of using zend

00:45:56,119 --> 00:45:59,839
framework to do a device detection if

00:45:58,189 --> 00:46:01,699
you're using symphony for example then

00:45:59,839 --> 00:46:03,559
this might be an interesting article and

00:46:01,699 --> 00:46:05,660
also have the slides there on SlideShare

00:46:03,559 --> 00:46:07,449
don't have to write down the URL this is

00:46:05,660 --> 00:46:10,160
an interesting article on how to do

00:46:07,449 --> 00:46:11,569
similar things in the symphony framework

00:46:10,160 --> 00:46:15,949
the basic the mime type based

00:46:11,569 --> 00:46:18,319
optimization for mobile devices another

00:46:15,949 --> 00:46:20,660
question that i recently got was if it's

00:46:18,319 --> 00:46:23,419
also possible to go to PHP on mobile

00:46:20,660 --> 00:46:26,959
devices like are you able to develop PHP

00:46:23,419 --> 00:46:28,729
on an ipad at least possible and this is

00:46:26,959 --> 00:46:30,859
an interesting application it's called

00:46:28,729 --> 00:46:33,469
lemonade and it's in basically an

00:46:30,859 --> 00:46:35,719
abstract abstract syntax tree editor and

00:46:33,469 --> 00:46:37,939
this can be used to write PHP code

00:46:35,719 --> 00:46:39,979
without actually writing code so this is

00:46:37,939 --> 00:46:42,109
like an experiment to be able to write

00:46:39,979 --> 00:46:43,999
code on a touch-based device you know

00:46:42,109 --> 00:46:45,109
typing is difficult so we're not typing

00:46:43,999 --> 00:46:47,209
anything you're basically touching

00:46:45,109 --> 00:46:48,829
concepts so there's things like

00:46:47,209 --> 00:46:50,509
assignments here and there's things like

00:46:48,829 --> 00:46:52,489
loops and variables and stuff and

00:46:50,509 --> 00:46:54,169
basically by clicking around we can

00:46:52,489 --> 00:46:55,699
basically drag and drop an application

00:46:54,169 --> 00:46:57,769
and this application then generates

00:46:55,699 --> 00:47:01,999
speech because for us so we can visually

00:46:57,769 --> 00:47:03,559
duction up like an application I must

00:47:01,999 --> 00:47:05,179
say I try this for about 10 minutes and

00:47:03,559 --> 00:47:07,189
I couldn't get the hang of it this is

00:47:05,179 --> 00:47:09,559
it's a really abstract way of

00:47:07,189 --> 00:47:11,419
programming and it's really difficult to

00:47:09,559 --> 00:47:14,479
grasp the concept into program is such a

00:47:11,419 --> 00:47:16,130
way so I wouldn't think you could

00:47:14,479 --> 00:47:17,719
actually write a productive application

00:47:16,130 --> 00:47:18,829
in there in such a tool but it's

00:47:17,719 --> 00:47:21,079
interesting to see that there are

00:47:18,829 --> 00:47:22,549
experiments out there that try to look

00:47:21,079 --> 00:47:25,459
at programming in different ways like

00:47:22,549 --> 00:47:27,079
using touch to basically do programming

00:47:25,459 --> 00:47:29,349
the might be an interesting I want to

00:47:27,079 --> 00:47:29,349
look at

00:47:32,330 --> 00:47:37,260
finally a few resources I occasionally

00:47:35,250 --> 00:47:39,570
write the blog post on our company blog

00:47:37,260 --> 00:47:42,540
about PHP related topics and mobile

00:47:39,570 --> 00:47:44,310
related topics PHP magazine the german

00:47:42,540 --> 00:47:47,099
pc magazine they have a section

00:47:44,310 --> 00:47:48,900
dedicated to mobile and for example of

00:47:47,099 --> 00:47:51,510
PHP for android project was i was on

00:47:48,900 --> 00:47:53,369
there last year so that's a kind of a

00:47:51,510 --> 00:47:57,210
section of the PHP magazine dedicated to

00:47:53,369 --> 00:47:58,650
PHP using a mobile ecosystem and if

00:47:57,210 --> 00:48:01,109
you're wanting if you want to make the

00:47:58,650 --> 00:48:03,030
move to develop iphone applications for

00:48:01,109 --> 00:48:04,560
example but you're currently a PHP

00:48:03,030 --> 00:48:06,089
developer and this is a really

00:48:04,560 --> 00:48:08,010
interesting series this is just a link

00:48:06,089 --> 00:48:11,310
to the first one but this is an

00:48:08,010 --> 00:48:13,589
interesting series that looks at iphone

00:48:11,310 --> 00:48:16,200
objective-c development through the eyes

00:48:13,589 --> 00:48:18,300
of a PHP developer so it takes concepts

00:48:16,200 --> 00:48:20,790
that we are familiar with from PHP and

00:48:18,300 --> 00:48:24,420
that explains how these same concepts

00:48:20,790 --> 00:48:25,950
are done in objective-c this first part

00:48:24,420 --> 00:48:27,330
is kind of more generic overview and

00:48:25,950 --> 00:48:30,950
they also have really specific things

00:48:27,330 --> 00:48:34,320
like how memory management is done in

00:48:30,950 --> 00:48:35,880
PHP versus on the iPhone device look at

00:48:34,320 --> 00:48:37,650
me if you want a like a starting point

00:48:35,880 --> 00:48:39,630
to get into the actual native app

00:48:37,650 --> 00:48:45,690
development this is a really interesting

00:48:39,630 --> 00:48:47,640
series so I try to give like like a

00:48:45,690 --> 00:48:50,849
picture of you know how PHP plays a role

00:48:47,640 --> 00:48:52,680
in a mobile ecosystem we've got about

00:48:50,849 --> 00:48:55,109
ten minutes left for questions and

00:48:52,680 --> 00:48:56,310
answers if afterwards you want to ask a

00:48:55,109 --> 00:48:57,930
question just you know finally I'm

00:48:56,310 --> 00:49:02,339
around or just drop me an email or

00:48:57,930 --> 00:49:04,050
follow me on Twitter and please leave

00:49:02,339 --> 00:49:05,880
some feedback on joint in joint in it's

00:49:04,050 --> 00:49:09,240
a website where you can rate and comment

00:49:05,880 --> 00:49:10,890
on conference presentations and I always

00:49:09,240 --> 00:49:12,300
like to improve the dog based on the

00:49:10,890 --> 00:49:14,750
feedback I get there so if you want to

00:49:12,300 --> 00:49:18,830
leave some feedback please use that URL

00:49:14,750 --> 00:49:18,830
it does anybody have any questions

00:49:26,140 --> 00:49:32,960
hi my name is Andrew with regards to

00:49:30,140 --> 00:49:36,190
data syncing on a mobile device are

00:49:32,960 --> 00:49:40,369
there any PHP libraries would suggest

00:49:36,190 --> 00:49:42,950
we've looked into sync ml and think XML

00:49:40,369 --> 00:49:45,859
of core but is anything you suggest for

00:49:42,950 --> 00:49:47,930
the synchronization yeah so the question

00:49:45,859 --> 00:49:50,990
is about syncing tools I think sync

00:49:47,930 --> 00:49:52,609
analysis targeted towards synchronizing

00:49:50,990 --> 00:49:55,010
data that's already native to the device

00:49:52,609 --> 00:49:57,079
like contact information and such I

00:49:55,010 --> 00:49:59,599
don't know any generic framework to do

00:49:57,079 --> 00:50:01,280
the synchronization if currently so far

00:49:59,599 --> 00:50:05,300
has been using like a JSON API that

00:50:01,280 --> 00:50:07,460
fetches the data and read that but yeah

00:50:05,300 --> 00:50:09,470
if you want to sing don't like data then

00:50:07,460 --> 00:50:10,970
things like sync mlr are useful to look

00:50:09,470 --> 00:50:14,000
at I don't have any person experiences

00:50:10,970 --> 00:50:15,980
singam also I can't comment on that but

00:50:14,000 --> 00:50:17,869
yeah it since since data exporting in

00:50:15,980 --> 00:50:20,119
PHP is so easy it's usually a matter of

00:50:17,869 --> 00:50:22,609
you know fetching your data and putting

00:50:20,119 --> 00:50:25,790
it into some kind of JSON or XML format

00:50:22,609 --> 00:50:26,930
and putting it out to the device one

00:50:25,790 --> 00:50:29,059
interesting thing is that if you do

00:50:26,930 --> 00:50:30,740
synchronization of data and its large

00:50:29,059 --> 00:50:32,359
volumes make sure that the data is

00:50:30,740 --> 00:50:34,579
structured in such a way that you can do

00:50:32,359 --> 00:50:35,990
it like progressively now I often see

00:50:34,579 --> 00:50:37,760
xml documents where we have like a

00:50:35,990 --> 00:50:39,530
starting tag and then a bit of data and

00:50:37,760 --> 00:50:42,020
then need the bottom and ending that if

00:50:39,530 --> 00:50:43,670
you use particular XML partials then you

00:50:42,020 --> 00:50:45,200
might end up you know having to read the

00:50:43,670 --> 00:50:47,390
whole document into memory before you're

00:50:45,200 --> 00:50:49,760
able to parse it which is difficult on a

00:50:47,390 --> 00:50:52,430
device luckily there are libraries light

00:50:49,760 --> 00:50:54,710
like a touch XML and touch Jason which

00:50:52,430 --> 00:50:57,230
are optimized to do that more memory

00:50:54,710 --> 00:50:58,640
friendly and for example if you make

00:50:57,230 --> 00:50:59,990
data in such a way that you don't have

00:50:58,640 --> 00:51:02,119
to wait like for the end of the data

00:50:59,990 --> 00:51:04,099
before you can start parsing it then you

00:51:02,119 --> 00:51:05,390
can make a lot more optimal parsing

00:51:04,099 --> 00:51:07,849
because you while you're downloading the

00:51:05,390 --> 00:51:09,680
data you can already start processing it

00:51:07,849 --> 00:51:14,770
which is a lot lighter on memory and

00:51:09,680 --> 00:51:14,770
it's also a better user experience okay

00:51:19,610 --> 00:51:24,710
have you have you had any experience

00:51:21,950 --> 00:51:29,600
will be using a liquid solution on html5

00:51:24,710 --> 00:51:32,390
or level using sorry liquid storage well

00:51:29,600 --> 00:51:33,920
that we've used it for to store

00:51:32,390 --> 00:51:36,320
something like like like like user

00:51:33,920 --> 00:51:37,880
settings etc I don't have any experience

00:51:36,320 --> 00:51:39,830
with large volumes of data i think it's

00:51:37,880 --> 00:51:43,220
also limited to do like a few megabytes

00:51:39,830 --> 00:51:44,690
of data but now I don't have any

00:51:43,220 --> 00:51:46,820
experience as I say hey you should use

00:51:44,690 --> 00:51:49,280
it or you shouldn't use it one of my

00:51:46,820 --> 00:51:50,990
major concerns is that if I'm writing an

00:51:49,280 --> 00:51:52,970
application in HTML technology and using

00:51:50,990 --> 00:51:55,670
things like like the device storage in

00:51:52,970 --> 00:51:57,680
HTML I say I always feel like I'm trying

00:51:55,670 --> 00:52:00,290
to force an application into this page

00:51:57,680 --> 00:52:01,970
based HTML model and yes i can do

00:52:00,290 --> 00:52:03,500
storage and yes i can do certain tricks

00:52:01,970 --> 00:52:05,570
to do to do things that I'm used in an

00:52:03,500 --> 00:52:07,520
application but it still feels like I'm

00:52:05,570 --> 00:52:09,680
trying to force something down in HTML

00:52:07,520 --> 00:52:11,930
route even though you know it can be

00:52:09,680 --> 00:52:14,870
easily done native but that's not a kind

00:52:11,930 --> 00:52:16,730
of there the thing I feel when I use the

00:52:14,870 --> 00:52:18,890
technologies like that but I do think

00:52:16,730 --> 00:52:21,710
it's very useful to store things like

00:52:18,890 --> 00:52:25,100
profile data or maybe to get surf in

00:52:21,710 --> 00:52:27,080
there as well that's what weather how do

00:52:25,100 --> 00:52:32,590
you go about caching certain like these

00:52:27,080 --> 00:52:32,590
well it's a date okay

00:52:38,160 --> 00:52:43,829
and would it be possible to create and

00:52:41,190 --> 00:52:48,359
I've frame-based Nate about which poured

00:52:43,829 --> 00:52:50,069
in a hate ml5 Weber would that be

00:52:48,359 --> 00:52:52,559
actually something what's feasible from

00:52:50,069 --> 00:52:55,079
Apple's perspective can you actually do

00:52:52,559 --> 00:52:57,690
something leather or yeah it's actually

00:52:55,079 --> 00:52:58,859
the sum of these frameworks actually do

00:52:57,690 --> 00:53:01,589
something that that's that's very

00:52:58,859 --> 00:53:03,480
similar to that and the iphone even has

00:53:01,589 --> 00:53:05,099
things like it has a browser component

00:53:03,480 --> 00:53:06,930
so you could write an application that

00:53:05,099 --> 00:53:10,349
just opens a browser component and has

00:53:06,930 --> 00:53:12,180
an HTML experience in there there are

00:53:10,349 --> 00:53:13,619
some concerns like for example Apple

00:53:12,180 --> 00:53:15,180
reviews your application and if your

00:53:13,619 --> 00:53:17,190
application is just like an empty shell

00:53:15,180 --> 00:53:20,849
it might get rejected for being just an

00:53:17,190 --> 00:53:22,740
empty shell but yeah if there's if it

00:53:20,849 --> 00:53:25,289
makes sense if your application has some

00:53:22,740 --> 00:53:26,819
you know has a use case for using HTML

00:53:25,289 --> 00:53:28,289
on the client side and you can embed

00:53:26,819 --> 00:53:30,390
that in an application you can

00:53:28,289 --> 00:53:31,740
definitely do that but I try to avoid is

00:53:30,390 --> 00:53:33,539
creating like an empty shell because

00:53:31,740 --> 00:53:35,490
that then it's just as nothing else

00:53:33,539 --> 00:53:36,930
whether like a like an app store pointer

00:53:35,490 --> 00:53:40,470
to do something that you could easily do

00:53:36,930 --> 00:53:41,700
in the browsers but yeah if you want to

00:53:40,470 --> 00:53:44,000
go down that route look at one of these

00:53:41,700 --> 00:53:46,260
frameworks like like PhoneGap or a

00:53:44,000 --> 00:53:48,450
appcelerator because those are basically

00:53:46,260 --> 00:53:51,180
targeted around doing something similar

00:53:48,450 --> 00:53:57,150
writing it in HTML and then having a

00:53:51,180 --> 00:53:59,299
native device experience thank you over

00:53:57,150 --> 00:53:59,299
here

00:54:00,680 --> 00:54:07,500
like that I was just wondering if you're

00:54:03,300 --> 00:54:09,510
developing on a on a pc for for a mobile

00:54:07,500 --> 00:54:12,810
app what what tools do you use to

00:54:09,510 --> 00:54:15,300
emulate the mobile phones yeah I'm a Mac

00:54:12,810 --> 00:54:18,660
user i use xcode to do the native

00:54:15,300 --> 00:54:27,359
development stuff and with xcode you

00:54:18,660 --> 00:54:29,400
also get this simulator and the

00:54:27,359 --> 00:54:31,200
simulator also comes with a browser so i

00:54:29,400 --> 00:54:34,320
use this simulator when I want to test

00:54:31,200 --> 00:54:36,030
mobile version of the website Android

00:54:34,320 --> 00:54:37,710
also has an emulator that you can use

00:54:36,030 --> 00:54:39,510
all the versions of the android emulator

00:54:37,710 --> 00:54:41,280
didn't allow you to use the browser to

00:54:39,510 --> 00:54:43,740
connect to outside websites with the

00:54:41,280 --> 00:54:45,599
latest version of Android you can so if

00:54:43,740 --> 00:54:46,859
you install the Android development SDK

00:54:45,599 --> 00:54:48,900
even if you're not doing native

00:54:46,859 --> 00:54:52,080
applications you can use the emulator to

00:54:48,900 --> 00:54:55,710
just browse mobile websites other useful

00:54:52,080 --> 00:54:57,720
tools are for templayer Firefox plugins

00:54:55,710 --> 00:54:59,430
to change the user agent if you use

00:54:57,720 --> 00:55:01,980
something like ruffle to do to detect

00:54:59,430 --> 00:55:03,990
the user agent of a certain device just

00:55:01,980 --> 00:55:05,760
put that user agent into your firefox

00:55:03,990 --> 00:55:07,470
plugin and make your file for to behave

00:55:05,760 --> 00:55:09,390
as if it were a mobile device and that

00:55:07,470 --> 00:55:12,570
is helpful if you want to test without

00:55:09,390 --> 00:55:14,609
having i can actually have a device it's

00:55:12,570 --> 00:55:16,349
of course a lot more fun to be able to

00:55:14,609 --> 00:55:18,030
tell your boss that you need like 10

00:55:16,349 --> 00:55:19,710
different android devices because you

00:55:18,030 --> 00:55:21,960
need to test on all these devices so

00:55:19,710 --> 00:55:23,700
yeah if that's what you like that my

00:55:21,960 --> 00:55:25,530
advice would be yeah you need devices to

00:55:23,700 --> 00:55:27,150
actually do the testing but it's

00:55:25,530 --> 00:55:29,640
probably more economic to use the

00:55:27,150 --> 00:55:32,310
simulators or to do basically use tricks

00:55:29,640 --> 00:55:35,599
like the user agent to fool the server

00:55:32,310 --> 00:55:35,599
into thinking it's a mobile browser

00:55:38,759 --> 00:55:47,829
hi hello I the you did the object

00:55:45,400 --> 00:55:50,769
detection in PHP earlier what's your

00:55:47,829 --> 00:55:53,109
view on using something like PHP to

00:55:50,769 --> 00:55:54,460
detect the user agent to get device

00:55:53,109 --> 00:55:58,329
information compared to something like

00:55:54,460 --> 00:55:59,680
media queries and css3 or potentially

00:55:58,329 --> 00:56:02,259
something like a JavaScript library like

00:55:59,680 --> 00:56:04,599
modernizer yeah it kind of so the

00:56:02,259 --> 00:56:07,299
question is about you know using PHP the

00:56:04,599 --> 00:56:09,220
detecting device versus CSS which can do

00:56:07,299 --> 00:56:11,049
it in certain extent as well I think

00:56:09,220 --> 00:56:12,099
there you should always have a look at

00:56:11,049 --> 00:56:13,990
you know what what's this is that you're

00:56:12,099 --> 00:56:16,240
trying to achieve if it's just a simple

00:56:13,990 --> 00:56:17,619
layout thing then yeah definitely CSS

00:56:16,240 --> 00:56:20,289
will be a useful way to do it because

00:56:17,619 --> 00:56:22,029
you don't have to fix your server but if

00:56:20,289 --> 00:56:23,950
you for example have specific

00:56:22,029 --> 00:56:25,390
functionality for the mobile side or if

00:56:23,950 --> 00:56:26,710
you have specific content that you need

00:56:25,390 --> 00:56:28,450
to fetch from the database for this

00:56:26,710 --> 00:56:30,069
mobile device and it makes more sense to

00:56:28,450 --> 00:56:32,950
do it on the beach b-side but you just

00:56:30,069 --> 00:56:34,329
have to make it sit on a per case basis

00:56:32,950 --> 00:56:36,279
you have to just check whatever the best

00:56:34,329 --> 00:56:37,990
way to do this if it's purely as a style

00:56:36,279 --> 00:56:42,269
issue than yeah would go with the media

00:56:37,990 --> 00:56:42,269
base CSS and bringing a problem

00:56:45,960 --> 00:56:55,329
any more questions one last question

00:56:52,200 --> 00:56:59,890
with hi my name's stardom with browsers

00:56:55,329 --> 00:57:02,079
on a PC an html5 it seems like we're

00:56:59,890 --> 00:57:05,559
already there in terms of video game

00:57:02,079 --> 00:57:10,420
frame rates and even factor may be

00:57:05,559 --> 00:57:13,059
pulling a PHP back and using Ajax to do

00:57:10,420 --> 00:57:15,069
multiplayer how close are we to that

00:57:13,059 --> 00:57:17,109
with mobile phones I get the feeling

00:57:15,069 --> 00:57:18,849
that we're not that close yet and what

00:57:17,109 --> 00:57:22,030
would be the alternative solution maybe

00:57:18,849 --> 00:57:24,550
native app with XMPP or is there is it

00:57:22,030 --> 00:57:26,500
possible to do it in html5 yeah you

00:57:24,550 --> 00:57:28,480
could do the stuff with the canvas and

00:57:26,500 --> 00:57:30,280
stuff to do great things like visual

00:57:28,480 --> 00:57:32,380
games etc but yeah you're not dealing

00:57:30,280 --> 00:57:33,880
just with their with the limitations of

00:57:32,380 --> 00:57:36,010
the of the connection but also of the

00:57:33,880 --> 00:57:38,530
processing power I mean doing something

00:57:36,010 --> 00:57:41,890
like canvas drawing on on a device is

00:57:38,530 --> 00:57:43,750
still pretty yeah it's pretty cumbersome

00:57:41,890 --> 00:57:45,069
but on the other hand you again you have

00:57:43,750 --> 00:57:46,750
to ask yourself the question why would

00:57:45,069 --> 00:57:48,550
you want to do that I think something

00:57:46,750 --> 00:57:51,160
like a game would probably be easier to

00:57:48,550 --> 00:57:52,990
write as a native experience and it's

00:57:51,160 --> 00:57:54,819
probably a better integer experience

00:57:52,990 --> 00:57:56,109
anyway and yeah this offer there's

00:57:54,819 --> 00:57:58,420
always the drawback of you know you know

00:57:56,109 --> 00:58:00,160
development budget vs you know what

00:57:58,420 --> 00:58:02,349
you're trying to accomplish but again i

00:58:00,160 --> 00:58:03,700
would say on a per case basis you have

00:58:02,349 --> 00:58:06,130
to decide what tool would be the best

00:58:03,700 --> 00:58:07,480
now some people say ok it's easy to do

00:58:06,130 --> 00:58:09,220
it in web technology because that's what

00:58:07,480 --> 00:58:10,450
we're familiar with but some developers

00:58:09,220 --> 00:58:11,799
are not familiar with pregnant web

00:58:10,450 --> 00:58:13,390
technology at all they come from for

00:58:11,799 --> 00:58:15,339
example Java backgrounds and they move

00:58:13,390 --> 00:58:18,160
into Android and then have it to move to

00:58:15,339 --> 00:58:19,750
something like HTML first to be able to

00:58:18,160 --> 00:58:21,460
write cross-platform devices might be

00:58:19,750 --> 00:58:23,770
even more difficult if you have

00:58:21,460 --> 00:58:25,960
developers from from other fields than

00:58:23,770 --> 00:58:27,819
just web development and it might be

00:58:25,960 --> 00:58:30,869
another reason to just go native instead

00:58:27,819 --> 00:58:33,160
of fooling there are ways to tweeze

00:58:30,869 --> 00:58:35,380
functionality across devices like for

00:58:33,160 --> 00:58:36,970
example you can use low level c

00:58:35,380 --> 00:58:40,869
libraries that work across multiple

00:58:36,970 --> 00:58:42,819
devices it's possible to write a java

00:58:40,869 --> 00:58:45,160
library that works on both blackberry

00:58:42,819 --> 00:58:48,300
and android phones so there's still some

00:58:45,160 --> 00:58:49,890
way of raising data but yeah again

00:58:48,300 --> 00:58:50,940
look at it on a per case basis if you

00:58:49,890 --> 00:58:53,190
want to do something that's really

00:58:50,940 --> 00:58:56,760
device-specific like graphic rendering

00:58:53,190 --> 00:58:58,470
etc now it's google native I think we

00:58:56,760 --> 00:59:01,260
have a long way to go before we can play

00:58:58,470 --> 00:59:03,360
like a rap version of angry birds in a

00:59:01,260 --> 00:59:09,740
mobile browser would be awesome by the

00:59:03,360 --> 00:59:14,190
way when I think we are like to them

00:59:09,740 --> 00:59:18,380
even charged for this very emotive talk

00:59:14,190 --> 00:59:18,380

YouTube URL: https://www.youtube.com/watch?v=GYvEXud7ZTM


