Title: PHP UK Conference 2011 - Xdebug by Derick Rethans
Publication date: 2012-03-15
Playlist: PHP UK Conference 2011
Description: 
	
Captions: 
	00:00:02,540 --> 00:00:07,730
that so i'll be talking about XD bug

00:00:04,970 --> 00:00:10,040
exhibit costa to die I've been writing

00:00:07,730 --> 00:00:11,840
for ages and ages now and I've spoken

00:00:10,040 --> 00:00:13,880
about it before she might have seen or

00:00:11,840 --> 00:00:17,349
heard of so I'm kind of wondering how

00:00:13,880 --> 00:00:19,759
many people here actually using X ebook

00:00:17,349 --> 00:00:22,160
maybe should have also dealer around how

00:00:19,759 --> 00:00:26,660
many of you are not using it yet how

00:00:22,160 --> 00:00:29,119
many of you are asleep all right so um

00:00:26,660 --> 00:00:33,260
I'll we still talking about XE because

00:00:29,119 --> 00:00:34,820
what I try to do I'm trying to renew my

00:00:33,260 --> 00:00:36,770
talk and show a little bit the more

00:00:34,820 --> 00:00:40,040
advanced things only and not going to

00:00:36,770 --> 00:00:41,390
show you how to count the number of

00:00:40,040 --> 00:00:43,610
functions you have run and things like

00:00:41,390 --> 00:00:47,000
that if you have any questions feel free

00:00:43,610 --> 00:00:49,730
to HR and I i'm slightly blinded by the

00:00:47,000 --> 00:00:52,550
light in the back but wave and a enough

00:00:49,730 --> 00:00:53,989
she be able to find you if you won't

00:00:52,550 --> 00:00:56,150
leave feedback of the talk he can do

00:00:53,989 --> 00:00:57,950
that at the joint in euro i really would

00:00:56,150 --> 00:01:01,579
like feedback i know the wireless isn't

00:00:57,950 --> 00:01:04,939
so happy about it but go for it and try

00:01:01,579 --> 00:01:06,280
and started so i'm dutch or i've been

00:01:04,939 --> 00:01:08,810
living alone for about two years now

00:01:06,280 --> 00:01:11,270
it's quite a long time I'd not realize

00:01:08,810 --> 00:01:14,540
that been doing PHP development using it

00:01:11,270 --> 00:01:17,479
for about 10 years now contributing to

00:01:14,540 --> 00:01:19,250
PHP for about eight and I've written

00:01:17,479 --> 00:01:23,330
many many different extensions some

00:01:19,250 --> 00:01:26,270
useful some not so useful like the

00:01:23,330 --> 00:01:27,979
deepest extension but it's fun I've also

00:01:26,270 --> 00:01:30,470
written XD book so I probably should be

00:01:27,979 --> 00:01:33,290
the person that that should know most

00:01:30,470 --> 00:01:36,500
things about it there's one feature next

00:01:33,290 --> 00:01:38,600
book that I have never used it's

00:01:36,500 --> 00:01:39,950
actually quite cool so hopefully the

00:01:38,600 --> 00:01:44,180
next version of my talk will have that

00:01:39,950 --> 00:01:46,159
in it and I am at the moment freelancer

00:01:44,180 --> 00:01:47,930
doing PHP work development work and also

00:01:46,159 --> 00:01:49,850
pitch p internals were so if you find it

00:01:47,930 --> 00:01:53,390
interesting come up with me go out to me

00:01:49,850 --> 00:01:55,850
and talk to me about that okay so back

00:01:53,390 --> 00:01:58,790
to XD book XD because there for three

00:01:55,850 --> 00:02:03,770
main things it's a development 84 live

00:01:58,790 --> 00:02:06,770
debugging and for profiling so us you

00:02:03,770 --> 00:02:10,220
sexy week for profiling in ok just a few

00:02:06,770 --> 00:02:14,680
what about live debugging with IDs also

00:02:10,220 --> 00:02:14,680
few and let's use it in any other form

00:02:14,890 --> 00:02:22,510
I don't know those hands don't add up to

00:02:17,830 --> 00:02:23,890
get it anyway so first thing is XD book

00:02:22,510 --> 00:02:26,050
what it does if you just installed it

00:02:23,890 --> 00:02:28,270
pimps up you're right it doesn't create

00:02:26,050 --> 00:02:30,880
an ice-covered enormous large rims or

00:02:28,270 --> 00:02:34,209
something like that but it does

00:02:30,880 --> 00:02:36,580
basically the main thing that you see

00:02:34,209 --> 00:02:39,989
what happens if you install exhibit you

00:02:36,580 --> 00:02:44,470
get nice error messages right so this is

00:02:39,989 --> 00:02:46,000
beyond the past age an age ago upp

00:02:44,470 --> 00:02:48,910
aromatic to show up like this if you

00:02:46,000 --> 00:02:51,610
wouldn't be using exhibit now in recent

00:02:48,910 --> 00:02:54,310
version of PHP and 53 for some odd

00:02:51,610 --> 00:02:56,920
reason HTML errors is turned off by

00:02:54,310 --> 00:02:59,950
default which means that all the errors

00:02:56,920 --> 00:03:02,650
show up like this again which is really

00:02:59,950 --> 00:03:04,150
annoying why does this turn already hold

00:03:02,650 --> 00:03:06,640
I don't know I'll see it can fix that

00:03:04,150 --> 00:03:08,320
back but if you want to have X ebook to

00:03:06,640 --> 00:03:10,180
show nice error messages you have to

00:03:08,320 --> 00:03:12,820
turn on HTML arts which is a PHP ini

00:03:10,180 --> 00:03:15,190
setting and then they should look like

00:03:12,820 --> 00:03:18,820
this it's a nice orange box that has

00:03:15,190 --> 00:03:23,350
nothing to do with me being dutch let us

00:03:18,820 --> 00:03:25,840
show quite a bit of informational one of

00:03:23,350 --> 00:03:28,150
the things is give your time in the

00:03:25,840 --> 00:03:30,340
memory columns there are time since

00:03:28,150 --> 00:03:32,650
started the script and the amount of

00:03:30,340 --> 00:03:35,290
memory in use the names of function the

00:03:32,650 --> 00:03:38,260
parameters and the location and all of

00:03:35,290 --> 00:03:43,420
those things are can configure quite a

00:03:38,260 --> 00:03:44,739
bit and as error messages because you

00:03:43,420 --> 00:03:47,709
don't want to show too much information

00:03:44,739 --> 00:03:50,010
it goes if you have a error message that

00:03:47,709 --> 00:03:53,650
runs in like a tight loop with like a

00:03:50,010 --> 00:03:56,950
10,000 iterations you will gather you

00:03:53,650 --> 00:03:58,900
will get 10,000 HTML tables browsers

00:03:56,950 --> 00:04:00,880
don't handle this very well or actually

00:03:58,900 --> 00:04:02,590
not at all especially if they're very

00:04:00,880 --> 00:04:04,209
large so lots of the information in here

00:04:02,590 --> 00:04:06,549
is not there by default but you have to

00:04:04,209 --> 00:04:09,370
turn it on so there's a few settings

00:04:06,549 --> 00:04:12,340
let's collect collect includes which has

00:04:09,370 --> 00:04:14,500
a value of zero or one meaning very it

00:04:12,340 --> 00:04:16,630
would show include files this is on by

00:04:14,500 --> 00:04:19,060
default is really quite useful then

00:04:16,630 --> 00:04:22,960
there's a few other ones and those are

00:04:19,060 --> 00:04:24,729
not so much geez with stack traces only

00:04:22,960 --> 00:04:26,020
if you show local variables in there for

00:04:24,729 --> 00:04:29,199
example

00:04:26,020 --> 00:04:31,360
those values can be used in both stack

00:04:29,199 --> 00:04:34,120
traces function trace of the trail we'll

00:04:31,360 --> 00:04:35,949
get to in a bit as well as activex varda

00:04:34,120 --> 00:04:38,949
and they will limit the amount of

00:04:35,949 --> 00:04:41,229
information being shown both items again

00:04:38,949 --> 00:04:43,030
i have an example of that and then there

00:04:41,229 --> 00:04:45,909
is something called file link for not

00:04:43,030 --> 00:04:50,979
now if you have a slightly clever I de

00:04:45,909 --> 00:04:53,590
aur woh editor or something or if you

00:04:50,979 --> 00:04:58,870
use firefox you can send up in Firefox

00:04:53,590 --> 00:05:01,720
protocol handlers specifically for for

00:04:58,870 --> 00:05:03,340
so that you can set up a protocol

00:05:01,720 --> 00:05:05,050
handler in such a way that it can

00:05:03,340 --> 00:05:06,880
firefox in call script for you to do

00:05:05,050 --> 00:05:09,580
that so what I've done I've written a

00:05:06,880 --> 00:05:13,810
small script that parses the the thing

00:05:09,580 --> 00:05:16,690
passed into it as it reads Jeevan for

00:05:13,810 --> 00:05:18,460
Finn Ingram and then with the phone line

00:05:16,690 --> 00:05:19,840
numbers so it will happen is if I now

00:05:18,460 --> 00:05:22,180
get an error message in one of my

00:05:19,840 --> 00:05:24,460
scripts can click on link and it will

00:05:22,180 --> 00:05:27,490
open it in vim in GTA which is really

00:05:24,460 --> 00:05:29,650
quite useful and I know that only Mac

00:05:27,490 --> 00:05:34,000
textmate has this building so you can

00:05:29,650 --> 00:05:35,050
use TX TX NT go home / it open and it

00:05:34,000 --> 00:05:37,870
yet to be a little bit more difficult

00:05:35,050 --> 00:05:38,979
but it works quite well makes it very

00:05:37,870 --> 00:05:40,620
easy that you if you have an error

00:05:38,979 --> 00:05:42,789
message it can open it in your ID and

00:05:40,620 --> 00:05:44,500
most of the other oddities also the

00:05:42,789 --> 00:05:46,060
following formats that works with them

00:05:44,500 --> 00:05:48,279
that I haven't actually quite checked

00:05:46,060 --> 00:05:52,990
which they are but I I know at least

00:05:48,279 --> 00:05:54,849
Eclipse has it as well okay now some

00:05:52,990 --> 00:05:58,479
people don't quite like the orange and

00:05:54,849 --> 00:06:00,490
the error messages can be quite stopped

00:05:58,479 --> 00:06:02,349
it sees us because their CSS class

00:06:00,490 --> 00:06:07,210
attached dish so in this case I'd like

00:06:02,349 --> 00:06:09,789
to make a pink and the little ! is

00:06:07,210 --> 00:06:11,529
blinking which you can do it C is s now

00:06:09,789 --> 00:06:14,909
well every browser supports blinking out

00:06:11,529 --> 00:06:17,860
on latekka however this screenshot

00:06:14,909 --> 00:06:21,759
besides being pink it also shows a few

00:06:17,860 --> 00:06:25,060
other things it shows a dump of every

00:06:21,759 --> 00:06:26,500
server variable actually the only does

00:06:25,060 --> 00:06:28,389
it for requests you are in this case

00:06:26,500 --> 00:06:30,580
because those are also things you can

00:06:28,389 --> 00:06:33,460
configure you can still XE book if i get

00:06:30,580 --> 00:06:35,800
an error message show me the contents of

00:06:33,460 --> 00:06:37,440
super Global's and the setting for that

00:06:35,800 --> 00:06:39,900
is XD

00:06:37,440 --> 00:06:42,750
with the dots and then the name of your

00:06:39,900 --> 00:06:44,520
super global which can be quite useful

00:06:42,750 --> 00:06:47,370
however it will only do that the first

00:06:44,520 --> 00:06:51,420
time that an aromatic sposa pops up

00:06:47,370 --> 00:06:53,820
because the super global should never

00:06:51,420 --> 00:06:56,490
change I know some people do hex and

00:06:53,820 --> 00:06:58,230
tricks to change the super Global's to

00:06:56,490 --> 00:06:59,820
change them because to sanitize

00:06:58,230 --> 00:07:02,820
variables or things like that I think

00:06:59,820 --> 00:07:04,230
that's a bad thing to do in case you do

00:07:02,820 --> 00:07:05,820
want to see the super global that every

00:07:04,230 --> 00:07:08,100
every error message you can do that

00:07:05,820 --> 00:07:10,010
button is off by default and also

00:07:08,100 --> 00:07:12,960
something else really quite useful is in

00:07:10,010 --> 00:07:14,760
the bottom block is the variables in a

00:07:12,960 --> 00:07:16,470
local scope so what you can tell

00:07:14,760 --> 00:07:18,540
exhibits to say if I have an error

00:07:16,470 --> 00:07:22,620
message also show me the variables that

00:07:18,540 --> 00:07:24,630
show up in the last PHP functions mean

00:07:22,620 --> 00:07:27,630
cults it cannot do that for internal

00:07:24,630 --> 00:07:29,160
thank you like SETI plan or forget

00:07:27,630 --> 00:07:32,700
condoms or things like that but it will

00:07:29,160 --> 00:07:34,260
do that for PHP functions and you can

00:07:32,700 --> 00:07:38,550
see which variables I've defined in here

00:07:34,260 --> 00:07:40,700
that's a and s I this little scribbler

00:07:38,550 --> 00:07:44,700
was doing I was looping something and

00:07:40,700 --> 00:07:46,380
set a time out of a seconds now you

00:07:44,700 --> 00:07:48,600
mentioned that i can just click on those

00:07:46,380 --> 00:07:51,120
links and a chute open of course i had

00:07:48,600 --> 00:07:54,810
not tested at UH see I've gotten any

00:07:51,120 --> 00:07:56,940
laptop some haven't set it up yet but if

00:07:54,810 --> 00:07:58,560
you want Firefox in these settings it's

00:07:56,940 --> 00:08:00,510
our printing this down in the

00:07:58,560 --> 00:08:02,460
documentation of X ebook so that's

00:08:00,510 --> 00:08:07,440
probably the best way of looking at look

00:08:02,460 --> 00:08:09,960
at the fall link thing anyway a few

00:08:07,440 --> 00:08:12,240
other things that not quite known so

00:08:09,960 --> 00:08:16,790
mostly because I sort of forgot to

00:08:12,240 --> 00:08:19,740
document them I found out yesterday is

00:08:16,790 --> 00:08:21,210
sometimes when you have like a CMS or

00:08:19,740 --> 00:08:23,040
anything like that and if you are a

00:08:21,210 --> 00:08:24,390
message it show up in the middle they

00:08:23,040 --> 00:08:28,169
might get hidden there might be behind

00:08:24,390 --> 00:08:29,940
other things these PSS might be skewed

00:08:28,169 --> 00:08:32,280
it might basically mess up your letter

00:08:29,940 --> 00:08:36,270
layout so much to make it very annoying

00:08:32,280 --> 00:08:37,710
so but those functions if you call X

00:08:36,270 --> 00:08:39,570
ebook start our collection but from that

00:08:37,710 --> 00:08:40,979
point on it will still remember all the

00:08:39,570 --> 00:08:43,260
error message that show but it doesn't

00:08:40,979 --> 00:08:45,390
show them instantly it will just store

00:08:43,260 --> 00:08:47,580
them in a buffer somewhere then if you

00:08:45,390 --> 00:08:49,170
call gets collected errors it will

00:08:47,580 --> 00:08:50,910
return all the error message desert has

00:08:49,170 --> 00:08:53,340
found it up till them in

00:08:50,910 --> 00:08:55,800
nicely formatted orange the layout stuff

00:08:53,340 --> 00:08:58,380
and that's you can probably for example

00:08:55,800 --> 00:09:00,990
use to put them under under the normal

00:08:58,380 --> 00:09:02,100
content and yeah make sure you can form

00:09:00,990 --> 00:09:05,430
the nitrogen that doesn't break your

00:09:02,100 --> 00:09:07,560
layout which is no documented yet but

00:09:05,430 --> 00:09:11,340
will probably soon be because now I know

00:09:07,560 --> 00:09:14,070
it's there another thing variables if

00:09:11,340 --> 00:09:17,130
you do Varden I use var I'm quite a lot

00:09:14,070 --> 00:09:18,570
still in some simple case it's all just

00:09:17,130 --> 00:09:21,030
the best way of doing it or the simples

00:09:18,570 --> 00:09:22,650
way of doing it but reading this output

00:09:21,030 --> 00:09:24,000
is very difficult in order to read this

00:09:22,650 --> 00:09:28,440
properly but you actually have to do is

00:09:24,000 --> 00:09:31,290
you have to do view source and they get

00:09:28,440 --> 00:09:34,830
some HTML service right Jenny here you

00:09:31,290 --> 00:09:38,190
have the department right is quite not

00:09:34,830 --> 00:09:39,870
quite nice but still quite difficult to

00:09:38,190 --> 00:09:41,010
read no likes debug this if you

00:09:39,870 --> 00:09:44,040
installed you get something like this

00:09:41,010 --> 00:09:45,780
instead it's nicely for me that you

00:09:44,040 --> 00:09:49,230
don't have to do pre-tax you have colors

00:09:45,780 --> 00:09:50,460
and things like that and here's the

00:09:49,230 --> 00:09:53,070
settings back that I showed you before

00:09:50,460 --> 00:09:56,100
there's for display max data for addicts

00:09:53,070 --> 00:09:58,530
play next depth and Max children those

00:09:56,100 --> 00:10:00,150
names are really long and it might

00:09:58,530 --> 00:10:03,500
change that because I know how I think

00:10:00,150 --> 00:10:06,840
and but anyway what they do maxdata

00:10:03,500 --> 00:10:11,430
configures how how much of a string it

00:10:06,840 --> 00:10:13,680
will show you in farnham so it will

00:10:11,430 --> 00:10:16,560
surely only the first 25 characters and

00:10:13,680 --> 00:10:19,770
then three dots at the end and also show

00:10:16,560 --> 00:10:21,390
you the full length of it so in case you

00:10:19,770 --> 00:10:23,010
have loaded like a big file into memory

00:10:21,390 --> 00:10:25,740
it doesn't dump it all out and screen it

00:10:23,010 --> 00:10:29,040
like googly-goo characters and it's not

00:10:25,740 --> 00:10:30,690
useful to see all itself max depth is

00:10:29,040 --> 00:10:33,570
the number of nesting levels in a raisin

00:10:30,690 --> 00:10:35,430
objects so if i would have one more so

00:10:33,570 --> 00:10:37,830
this is the first one second one third

00:10:35,430 --> 00:10:39,900
and fourth one if this one would be an

00:10:37,830 --> 00:10:41,730
array and object then it would show

00:10:39,900 --> 00:10:43,470
there's just something more but it

00:10:41,730 --> 00:10:45,480
wouldn't actually show you we've been

00:10:43,470 --> 00:10:48,330
really cool if you really could click on

00:10:45,480 --> 00:10:50,040
it and it would open it up but I haven't

00:10:48,330 --> 00:10:53,520
figured out how to do that yet in a

00:10:50,040 --> 00:10:57,060
nicer maybe some other time and Max

00:10:53,520 --> 00:10:59,220
children tells you how much array

00:10:57,060 --> 00:11:01,010
elements it should show in case you have

00:10:59,220 --> 00:11:04,310
genome as a race

00:11:01,010 --> 00:11:07,160
some people don't like XZ bug overriding

00:11:04,310 --> 00:11:09,770
for them so you can turn it off now this

00:11:07,160 --> 00:11:11,810
feature has requested quite a bit so you

00:11:09,770 --> 00:11:13,850
can use overload and score Vera's core

00:11:11,810 --> 00:11:18,200
don't equal 0 that doesn't mean that

00:11:13,850 --> 00:11:20,090
that means that X debug does not

00:11:18,200 --> 00:11:21,680
override varnum but they're still XD big

00:11:20,090 --> 00:11:24,440
underscore VAR and its core dump so you

00:11:21,680 --> 00:11:26,480
can still use this format I know it's on

00:11:24,440 --> 00:11:29,570
the bottom of the slide and it goes far

00:11:26,480 --> 00:11:30,860
enough so I tried modifying my slides to

00:11:29,570 --> 00:11:33,560
have everything slightly further up

00:11:30,860 --> 00:11:35,090
button to the magnitude is on ok now

00:11:33,560 --> 00:11:37,370
something that will be new in the

00:11:35,090 --> 00:11:40,610
upcoming version of XD way version 2 2

00:11:37,370 --> 00:11:42,890
is that you also will have the same kind

00:11:40,610 --> 00:11:46,130
of formatting and var display max data

00:11:42,890 --> 00:11:47,990
settings for the command line as well at

00:11:46,130 --> 00:11:51,830
the moment you still have to turn on see

00:11:47,990 --> 00:11:54,290
like underscore color equals 1 I was

00:11:51,830 --> 00:11:57,470
really in between calling that scholar

00:11:54,290 --> 00:11:58,880
or call our way to you then aside that

00:11:57,470 --> 00:12:04,220
most of PHP's in American English show

00:11:58,880 --> 00:12:08,060
it is without d but yeah it works me the

00:12:04,220 --> 00:12:10,190
signs of turning into Britain ok anyway

00:12:08,060 --> 00:12:12,710
it shows you adieu to the same colors if

00:12:10,190 --> 00:12:15,200
it can ask the web interface so juice

00:12:12,710 --> 00:12:18,950
integers are green and strings are red

00:12:15,200 --> 00:12:22,400
and it formatted nicely and most useful

00:12:18,950 --> 00:12:26,570
is that before this the max tap x

00:12:22,400 --> 00:12:29,300
children MX data settings also work now

00:12:26,570 --> 00:12:31,250
on the command line you turn it on with

00:12:29,300 --> 00:12:32,540
cl arcola Sally that doesn't work on

00:12:31,250 --> 00:12:34,910
windows because we haven't figured out a

00:12:32,540 --> 00:12:36,500
portable way of doing it it works if you

00:12:34,910 --> 00:12:40,130
have something called uncie sis loaded

00:12:36,500 --> 00:12:42,260
some brings up memory this summe but I

00:12:40,130 --> 00:12:43,460
know this API for Barry haven't figured

00:12:42,260 --> 00:12:46,310
out out quite this has been a

00:12:43,460 --> 00:12:49,460
contribution by it bye bye my commitment

00:12:46,310 --> 00:12:53,180
and it also works on the error messages

00:12:49,460 --> 00:12:55,070
so it now shows up in rats which works

00:12:53,180 --> 00:12:59,950
better if you have black round and all

00:12:55,070 --> 00:13:03,100
the right background no it's

00:12:59,950 --> 00:13:04,930
and all of you things screen this

00:13:03,100 --> 00:13:07,090
actually used to be a separate extension

00:13:04,930 --> 00:13:12,790
called screen what it will do is if you

00:13:07,090 --> 00:13:15,400
turn this on X even can make sure that

00:13:12,790 --> 00:13:17,140
every error will actually be shown even

00:13:15,400 --> 00:13:20,650
the ones that have been prefixed by an

00:13:17,140 --> 00:13:21,760
outside now at sign is in PHP has an

00:13:20,650 --> 00:13:24,580
interesting name in turn it's got a

00:13:21,760 --> 00:13:28,870
strudel that has nothing to do with food

00:13:24,580 --> 00:13:31,120
it's the Hebrew name for an @ sign but

00:13:28,870 --> 00:13:32,440
what it does it actually turns off all

00:13:31,120 --> 00:13:36,520
error reporting by setting error

00:13:32,440 --> 00:13:39,850
reporting to zero which is ok if you

00:13:36,520 --> 00:13:41,380
know exactly why I want to do this but

00:13:39,850 --> 00:13:43,270
in many case if you see so far written

00:13:41,380 --> 00:13:46,390
by somebody else you don't know where

00:13:43,270 --> 00:13:48,010
those at signs are and sometimes your

00:13:46,390 --> 00:13:50,740
script two stops and you have no idea

00:13:48,010 --> 00:13:52,630
why I've had this happen months have no

00:13:50,740 --> 00:13:54,670
idea why it stopped and looked and

00:13:52,630 --> 00:13:57,040
looked and finally found out after about

00:13:54,670 --> 00:13:58,810
two neff hours of looking oils it was

00:13:57,040 --> 00:14:01,750
dominant in front of muskoka neckline

00:13:58,810 --> 00:14:03,060
and I knew my scores running I was

00:14:01,750 --> 00:14:05,530
wondering about why this isn't working

00:14:03,060 --> 00:14:07,150
then I removed the at sign in fact found

00:14:05,530 --> 00:14:11,230
out that demise co extension wasn't

00:14:07,150 --> 00:14:12,970
loaded which would be very simple to see

00:14:11,230 --> 00:14:16,350
ft @ sign wasn't there and I never that

00:14:12,970 --> 00:14:18,940
not cost me two and half hours so screen

00:14:16,350 --> 00:14:21,070
I'm considering turning it on by default

00:14:18,940 --> 00:14:24,940
but it probably noise too many people so

00:14:21,070 --> 00:14:26,380
I will see about that and this is by the

00:14:24,940 --> 00:14:29,740
way at the painting the scream by edvard

00:14:26,380 --> 00:14:32,350
mink or one of the for some other things

00:14:29,740 --> 00:14:34,930
and this is mainly useful for running

00:14:32,350 --> 00:14:36,490
unit tests and things like this in our

00:14:34,930 --> 00:14:39,850
unit says that we had done for zeta

00:14:36,490 --> 00:14:41,850
components is um we wanted to test where

00:14:39,850 --> 00:14:46,060
the headers are properly set as well and

00:14:41,850 --> 00:14:47,830
although PHP has a function headers get

00:14:46,060 --> 00:14:49,420
or something right I don't exactly we

00:14:47,830 --> 00:14:52,030
may remember the name of the function

00:14:49,420 --> 00:14:53,680
that doesn't there's only works for

00:14:52,030 --> 00:14:56,830
environments very connect lease at

00:14:53,680 --> 00:14:58,690
heathers like in the Apache module for

00:14:56,830 --> 00:15:00,760
CGI it doesn't actually work on the

00:14:58,690 --> 00:15:03,280
command line because those headers I

00:15:00,760 --> 00:15:04,570
just well because you can output them

00:15:03,280 --> 00:15:07,210
anyway they just ignore it and they

00:15:04,570 --> 00:15:11,590
disappear because unit tests of course

00:15:07,210 --> 00:15:13,270
often run on the comp line yeah this was

00:15:11,590 --> 00:15:13,750
useless so I ordered this sexy because

00:15:13,270 --> 00:15:15,640
it into

00:15:13,750 --> 00:15:17,740
all the head is being sent and it

00:15:15,640 --> 00:15:19,900
doesn't only intercept the head as you

00:15:17,740 --> 00:15:23,440
said with things like header but it will

00:15:19,900 --> 00:15:25,570
also intercept implicitly set at us like

00:15:23,440 --> 00:15:27,820
the ones that show with setcookie or by

00:15:25,570 --> 00:15:28,960
session start so where would run this

00:15:27,820 --> 00:15:32,410
little script you get something like

00:15:28,960 --> 00:15:34,000
this Bank session start will set an

00:15:32,410 --> 00:15:39,240
expires header a cache control headers

00:15:34,000 --> 00:15:42,130
and a pragma heaven setcookie will set

00:15:39,240 --> 00:15:44,800
set cookie will set a set cookie header

00:15:42,130 --> 00:15:46,090
which makes sense of course and yeah

00:15:44,800 --> 00:15:47,410
this is quite useful figuring out where

00:15:46,090 --> 00:15:48,910
your head is actually properly set to

00:15:47,410 --> 00:15:51,460
make unit testing quite a bit easier I

00:15:48,910 --> 00:15:53,350
know doesn't that there's a bug here

00:15:51,460 --> 00:15:56,800
somewhere but I haven't found it yet but

00:15:53,350 --> 00:15:59,380
there's a book report that that makes it

00:15:56,800 --> 00:16:01,570
stop working if you call get hairless

00:15:59,380 --> 00:16:03,430
ones so I don't know what I have to find

00:16:01,570 --> 00:16:06,850
it ok the next enabled on the show

00:16:03,430 --> 00:16:09,160
tracing this is traces from Boris bikes

00:16:06,850 --> 00:16:12,910
or the barclays cycle hire bikes as

00:16:09,160 --> 00:16:14,620
they're called officially at racing XD

00:16:12,910 --> 00:16:16,230
book allows you to do is trace every

00:16:14,620 --> 00:16:18,430
function code that you get every

00:16:16,230 --> 00:16:21,550
function call that you get is done to

00:16:18,430 --> 00:16:24,880
file and you can do this in different

00:16:21,550 --> 00:16:26,770
formats let me see so this first of all

00:16:24,880 --> 00:16:28,300
scald of function did I call the boat

00:16:26,770 --> 00:16:30,910
function trays and execution trace I

00:16:28,300 --> 00:16:32,920
don't know why it's the same thing well

00:16:30,910 --> 00:16:34,810
the function trays does it dumps every

00:16:32,920 --> 00:16:36,940
function call to file and that is better

00:16:34,810 --> 00:16:39,190
to see in real life than to have a

00:16:36,940 --> 00:16:42,730
screen shot off the screen shield is

00:16:39,190 --> 00:16:48,100
just there as a backup so let me open a

00:16:42,730 --> 00:16:52,690
trace that I made earlier this one and

00:16:48,100 --> 00:16:54,730
then we will wait until VI has used all

00:16:52,690 --> 00:16:59,950
the syntax highlighting all nuts it'll

00:16:54,730 --> 00:17:02,170
take some time so make it form a bit

00:16:59,950 --> 00:17:05,350
larger for us this is readable in the

00:17:02,170 --> 00:17:09,430
bacchus also to like I could do it

00:17:05,350 --> 00:17:12,040
little bit still works saw works there

00:17:09,430 --> 00:17:13,689
we go this is good enough it's always

00:17:12,040 --> 00:17:16,510
better to have a little bit more and ok

00:17:13,689 --> 00:17:18,699
so as you can see i made this tracer or

00:17:16,510 --> 00:17:21,880
mid loss here somewhere it doesn't

00:17:18,699 --> 00:17:25,900
matter too much so what does function

00:17:21,880 --> 00:17:27,370
trades is it has recorded for every

00:17:25,900 --> 00:17:29,650
function goal

00:17:27,370 --> 00:17:31,120
every function return and every variable

00:17:29,650 --> 00:17:35,080
assignment exactly what's happening

00:17:31,120 --> 00:17:38,040
where and when so you can see that the

00:17:35,080 --> 00:17:40,530
script race started somewhere and may

00:17:38,040 --> 00:17:43,360
the main function is called third eye

00:17:40,530 --> 00:17:45,010
which is that one will three

00:17:43,360 --> 00:17:46,600
milliseconds into the script because

00:17:45,010 --> 00:17:50,100
parsing the first script take some time

00:17:46,600 --> 00:17:55,030
to the nesting level here with the error

00:17:50,100 --> 00:17:58,420
arrow I mean shows you Vic function call

00:17:55,030 --> 00:18:01,059
trig function and the file name as you

00:17:58,420 --> 00:18:06,190
can see here scroll to the end and the

00:18:01,059 --> 00:18:08,470
line number it also shows arguments to

00:18:06,190 --> 00:18:13,420
functions like you see next plot like

00:18:08,470 --> 00:18:16,390
you you see the return value in green

00:18:13,420 --> 00:18:18,400
here below explode obviously returns an

00:18:16,390 --> 00:18:21,940
array where every element is a part of

00:18:18,400 --> 00:18:24,190
it everything in yellow or starting with

00:18:21,940 --> 00:18:27,000
yellow is the variable assignment so

00:18:24,190 --> 00:18:29,080
from this you can pretty much figure out

00:18:27,000 --> 00:18:31,929
many things that happen in your script

00:18:29,080 --> 00:18:33,640
without having to have to do live

00:18:31,929 --> 00:18:36,610
debugging on it which is something I'll

00:18:33,640 --> 00:18:39,520
be focusing also their name returns this

00:18:36,610 --> 00:18:42,429
and the assignment of their name is set

00:18:39,520 --> 00:18:44,470
to there and it is not only that for

00:18:42,429 --> 00:18:48,010
normal variables but also if you go

00:18:44,470 --> 00:18:52,030
further down somewhere well so should

00:18:48,010 --> 00:18:56,610
have set a bookmark so we hear it will

00:18:52,030 --> 00:18:59,920
also do that for as you can see it for

00:18:56,610 --> 00:19:03,970
properties of classes up wrong button

00:18:59,920 --> 00:19:06,130
and our link things to narrate shows

00:19:03,970 --> 00:19:11,020
that us all it provides a lot of

00:19:06,130 --> 00:19:13,929
information and this is I think this is

00:19:11,020 --> 00:19:19,179
a run of generating my static HTML for

00:19:13,929 --> 00:19:21,490
my website and you can see it is quite a

00:19:19,179 --> 00:19:24,070
lot of data this crawls for well i'm

00:19:21,490 --> 00:19:25,990
only at five percent now so you can

00:19:24,070 --> 00:19:30,059
imagine that those Falls are really

00:19:25,990 --> 00:19:30,059
really large it has this one has six

00:19:30,179 --> 00:19:36,370
123,000 lines so I have to say that if

00:19:34,600 --> 00:19:38,380
you turn this function tracing on by

00:19:36,370 --> 00:19:39,730
default you will not get all the

00:19:38,380 --> 00:19:41,490
information that you're seeing because

00:19:39,730 --> 00:19:44,710
you have to turn on the very

00:19:41,490 --> 00:19:46,420
assignment tracing yourself and also the

00:19:44,710 --> 00:19:48,520
parameters to function yet to set up

00:19:46,420 --> 00:19:53,140
yourselves or otherwise it's simply too

00:19:48,520 --> 00:19:55,900
much data to show end you need to make

00:19:53,140 --> 00:19:57,490
sure that if you turn on out of tracing

00:19:55,900 --> 00:19:59,170
exhibit that you turn it off otherwise

00:19:57,490 --> 00:20:02,850
your hard drive is full very very fast

00:19:59,170 --> 00:20:05,350
and I only say that out of experience

00:20:02,850 --> 00:20:10,179
I'll show you how as follows this

00:20:05,350 --> 00:20:14,140
was I think 40 mega merchants on 40 mega

00:20:10,179 --> 00:20:16,360
39 something be careful with us so the

00:20:14,140 --> 00:20:19,420
few settings here that you can use going

00:20:16,360 --> 00:20:21,760
back to the slides there's auto in the

00:20:19,420 --> 00:20:24,070
square trace equals 1 if you set this

00:20:21,760 --> 00:20:27,429
every script that PHP encounters will

00:20:24,070 --> 00:20:31,840
then be traced to file can be very

00:20:27,429 --> 00:20:33,940
useful sometimes that what I happen once

00:20:31,840 --> 00:20:35,559
is that I was looking at a script and I

00:20:33,940 --> 00:20:38,620
knew those only one request but it still

00:20:35,559 --> 00:20:40,660
created two requests to files I was

00:20:38,620 --> 00:20:45,210
running while found out that an empty

00:20:40,660 --> 00:20:47,559
image tag somewhere and because then

00:20:45,210 --> 00:20:49,120
what the browser does it request

00:20:47,559 --> 00:20:50,950
something empty in your domain which in

00:20:49,120 --> 00:20:53,790
my case with the enacted PHP script

00:20:50,950 --> 00:20:57,309
again so I got to trace it sounds like a

00:20:53,790 --> 00:21:00,570
that's quite useful to know because you

00:20:57,309 --> 00:21:04,510
don't want to run that request right and

00:21:00,570 --> 00:21:05,950
you can tell it into which directly to

00:21:04,510 --> 00:21:10,300
put it and you can also configure the

00:21:05,950 --> 00:21:14,190
file name of d trace files you can

00:21:10,300 --> 00:21:16,660
include the host the URL time index in

00:21:14,190 --> 00:21:18,790
microseconds you can just tell the

00:21:16,660 --> 00:21:20,140
current working directory the hostname

00:21:18,790 --> 00:21:23,800
there's a few things in there that you

00:21:20,140 --> 00:21:26,470
can set us on now however the stresses

00:21:23,800 --> 00:21:30,250
are quite nice but it is a bit difficult

00:21:26,470 --> 00:21:32,110
to part with it tool now in order to

00:21:30,250 --> 00:21:34,120
make that simpler i created the second

00:21:32,110 --> 00:21:35,710
format which is automatic readable

00:21:34,120 --> 00:21:37,840
format or the other ones automatically

00:21:35,710 --> 00:21:39,700
readable too but it's just fancy name

00:21:37,840 --> 00:21:41,590
for it and what does doesn't instead of

00:21:39,700 --> 00:21:45,400
using indentation it uses specific

00:21:41,590 --> 00:21:50,160
values info now showing that light as

00:21:45,400 --> 00:21:50,160
well so function

00:21:50,839 --> 00:21:58,199
that's one and then it loads and we have

00:21:55,589 --> 00:21:59,999
to wait for VI uses syntax highlighting

00:21:58,199 --> 00:22:02,219
again you can see this fall's a bit

00:21:59,999 --> 00:22:04,559
large a bit smaller there's only 25

00:22:02,219 --> 00:22:07,409
megawatts and I think it's the same

00:22:04,559 --> 00:22:09,779
trace a bit more information you the

00:22:07,409 --> 00:22:11,820
first number is the nesting level the

00:22:09,779 --> 00:22:14,909
second one is the function number it

00:22:11,820 --> 00:22:17,219
counts functions so you can match start

00:22:14,909 --> 00:22:20,039
of the function which you can 0 here and

00:22:17,219 --> 00:22:21,979
the exit 0 function one if you match it

00:22:20,039 --> 00:22:24,509
up with the numbers you know exactly the

00:22:21,979 --> 00:22:26,039
time you went into the function and many

00:22:24,509 --> 00:22:27,569
wet out in the function and an amount of

00:22:26,039 --> 00:22:29,699
memory being in use when you call

00:22:27,569 --> 00:22:30,839
function when you exit the function with

00:22:29,699 --> 00:22:32,519
that you can do quite a bit of

00:22:30,839 --> 00:22:36,659
interesting things you can actually find

00:22:32,519 --> 00:22:39,089
out X see which function takes a lot of

00:22:36,659 --> 00:22:40,649
time of course you need to write a

00:22:39,089 --> 00:22:46,440
script for that well luckily for you I

00:22:40,649 --> 00:22:51,359
have written such a script have you open

00:22:46,440 --> 00:22:59,339
this one I think I changed it to normal

00:22:51,359 --> 00:23:01,979
that's why I'm checking this again new

00:22:59,339 --> 00:23:08,940
laptop so if we're gonna analyze on this

00:23:01,979 --> 00:23:12,749
file then know that one that one then we

00:23:08,940 --> 00:23:18,929
wait because it has to parse and of

00:23:12,749 --> 00:23:24,809
course it's just doesn't fit fits

00:23:18,929 --> 00:23:29,729
give me seconds I scroll is far enough

00:23:24,809 --> 00:23:33,630
it I did test that one you run it

00:23:29,729 --> 00:23:37,230
on small there

00:23:33,630 --> 00:23:39,450
okay so for the script us it is sorted

00:23:37,230 --> 00:23:41,850
in this case but time own that's the

00:23:39,450 --> 00:23:44,010
default time 0 means the amount of

00:23:41,850 --> 00:23:47,060
memory is used in this function which in

00:23:44,010 --> 00:23:49,800
this case interestingly is array pop

00:23:47,060 --> 00:23:51,630
exactly why this function took a lot of

00:23:49,800 --> 00:23:55,160
time is difficult to see it but if you

00:23:51,630 --> 00:23:55,160
have a user-defined function such as

00:23:55,610 --> 00:24:03,300
tokenized string which shows up quite

00:23:58,020 --> 00:24:04,830
far up in a list which takes including

00:24:03,300 --> 00:24:08,790
function being calls from this function

00:24:04,830 --> 00:24:10,740
it takes zero to four seconds and this

00:24:08,790 --> 00:24:13,470
function is self legs 0 dat 1 seconds

00:24:10,740 --> 00:24:15,000
this information gives you a bit of an

00:24:13,470 --> 00:24:17,280
overview to see which parts of your

00:24:15,000 --> 00:24:19,830
application is low it's a very quick way

00:24:17,280 --> 00:24:23,970
of analyzing it it also shows you the

00:24:19,830 --> 00:24:29,600
memory being used so we have if you I

00:24:23,970 --> 00:24:29,600
think we can sort it like this if we use

00:24:30,500 --> 00:24:42,450
old memory ah short key then i'ma do a

00:24:38,550 --> 00:24:45,990
group of memory on there all those

00:24:42,450 --> 00:24:48,540
things I can remember it has two parts

00:24:45,990 --> 00:24:53,820
again and then it will sort it according

00:24:48,540 --> 00:24:55,530
to which function takes bull shows you

00:24:53,820 --> 00:24:57,750
which function has the largest different

00:24:55,530 --> 00:25:01,320
aggregated between function entry and

00:24:57,750 --> 00:25:05,150
function exits and should be quite a bit

00:25:01,320 --> 00:25:08,190
not so much of a surprise that load file

00:25:05,150 --> 00:25:10,530
shows up on the top because that is the

00:25:08,190 --> 00:25:12,840
wraparound peach peas include in this

00:25:10,530 --> 00:25:16,860
case and of course every include all

00:25:12,840 --> 00:25:19,950
memory because a script needs to be

00:25:16,860 --> 00:25:21,780
parsed right one thing that I absolutely

00:25:19,950 --> 00:25:25,610
don't understand is why the function

00:25:21,780 --> 00:25:30,420
stats which really only returns 1 array

00:25:25,610 --> 00:25:34,260
being called 43 433 x increases the

00:25:30,420 --> 00:25:35,520
memory usage by about 3 megabytes that

00:25:34,260 --> 00:25:37,410
is something you might want to look at

00:25:35,520 --> 00:25:41,910
why the type but I haven't but because

00:25:37,410 --> 00:25:44,280
it's fast enough altogether so anyway a

00:25:41,910 --> 00:25:47,320
little script the script is part of the

00:25:44,280 --> 00:25:49,450
exhibit distribution I don't think you

00:25:47,320 --> 00:25:51,220
are getting it if you back off or

00:25:49,450 --> 00:25:56,920
installing it but you can always just

00:25:51,220 --> 00:25:58,870
get us on svn right there is a few more

00:25:56,920 --> 00:26:01,090
things here there's HTML traces which

00:25:58,870 --> 00:26:03,730
are also awesome which is basically the

00:26:01,090 --> 00:26:07,470
same thing but then in HTML so if you

00:26:03,730 --> 00:26:11,380
run praise know which one was it

00:26:07,470 --> 00:26:13,660
function trays H shows up and it is the

00:26:11,380 --> 00:26:15,820
same thing but on an HTML the reason why

00:26:13,660 --> 00:26:17,740
all of this I didn't want to but XD

00:26:15,820 --> 00:26:19,330
bookworm had this people were

00:26:17,740 --> 00:26:21,940
complaining about that actually book to

00:26:19,330 --> 00:26:23,950
dinner it's a very simple way of just

00:26:21,940 --> 00:26:26,140
dumping everything at fault and it's

00:26:23,950 --> 00:26:29,610
very simple HTML she can see the browser

00:26:26,140 --> 00:26:33,820
struggling with this because this is a

00:26:29,610 --> 00:26:36,940
quite large table my browser really

00:26:33,820 --> 00:26:41,620
doesn't like me doing this as you can

00:26:36,940 --> 00:26:43,180
see this is a understand why don't have

00:26:41,620 --> 00:26:46,000
this but didn't others in the first

00:26:43,180 --> 00:26:48,250
place because it's quite useless anyway

00:26:46,000 --> 00:26:49,690
um nice non breck space I will be

00:26:48,250 --> 00:26:52,030
shutting this down because it takes up

00:26:49,690 --> 00:26:56,290
too much memory and I've eight gigs in

00:26:52,030 --> 00:26:57,760
here I'm right you can also use some

00:26:56,290 --> 00:26:59,890
functions to start and stop the tracing

00:26:57,760 --> 00:27:01,720
in every form a tourism so the next no

00:26:59,890 --> 00:27:05,050
demo I've done so the next part

00:27:01,720 --> 00:27:08,170
squatting bucks swatting bugs I don't

00:27:05,050 --> 00:27:09,640
know this is not a real book because

00:27:08,170 --> 00:27:14,770
usually hopefully in England they are

00:27:09,640 --> 00:27:18,100
not that big okay swatting bugs X ebook

00:27:14,770 --> 00:27:21,220
employs a client-server architecture for

00:27:18,100 --> 00:27:25,060
this and the protocol between them is

00:27:21,220 --> 00:27:28,390
called d bgp dbg is the common debugging

00:27:25,060 --> 00:27:30,130
protocol now it's not only there for PHP

00:27:28,390 --> 00:27:32,830
also being implemented for all the

00:27:30,130 --> 00:27:37,240
languages 4 foot by 10 foot pearl for

00:27:32,830 --> 00:27:39,790
tickle for xslt and there's one more

00:27:37,240 --> 00:27:43,690
that i forgot keep forgetting action is

00:27:39,790 --> 00:27:45,970
this the parts that XD back implements

00:27:43,690 --> 00:27:47,830
is covers most of the specification

00:27:45,970 --> 00:27:49,960
there's a few language that have a few

00:27:47,830 --> 00:27:54,250
other things in there too XD book is

00:27:49,960 --> 00:27:58,390
written mostly by me employ implementing

00:27:54,250 --> 00:28:00,260
the dbgb protocol on the server side

00:27:58,390 --> 00:28:03,230
because XD book

00:28:00,260 --> 00:28:06,470
runs on the server britt is actually

00:28:03,230 --> 00:28:08,480
client considering the protocol I'll get

00:28:06,470 --> 00:28:10,280
back to that in a second and the other

00:28:08,480 --> 00:28:12,530
language have been implemented by active

00:28:10,280 --> 00:28:14,090
state which have the Komodo editor the

00:28:12,530 --> 00:28:15,800
same protocols used for other languages

00:28:14,090 --> 00:28:18,800
which meant they only had to write one

00:28:15,800 --> 00:28:20,570
debug interface which is pretty good now

00:28:18,800 --> 00:28:22,550
so there's a few clients for this

00:28:20,570 --> 00:28:26,930
there's Eclipse PDT which is java based

00:28:22,550 --> 00:28:29,690
and free out a few few hands who's using

00:28:26,930 --> 00:28:33,170
eclipse here or the zend studio version

00:28:29,690 --> 00:28:36,200
of it now that cannot be less hands than

00:28:33,170 --> 00:28:38,380
the first question who's using an

00:28:36,200 --> 00:28:40,760
eclipse-based ID let me put it like that

00:28:38,380 --> 00:28:43,300
okay that's quite a lot of people how

00:28:40,760 --> 00:28:47,720
many of you are actually using Komodo oh

00:28:43,300 --> 00:28:50,420
it's more help than normally five and

00:28:47,720 --> 00:28:54,920
that means that's all oh that's quite a

00:28:50,420 --> 00:28:58,490
lot more and phpstorm also called here

00:28:54,920 --> 00:29:00,830
so when I was writing my slides and

00:28:58,490 --> 00:29:02,600
trying to make some demos I try to get

00:29:00,830 --> 00:29:05,320
eclipse to work with debugging I'm just

00:29:02,600 --> 00:29:07,430
not smart enough for that so I gave up

00:29:05,320 --> 00:29:09,230
come out who works out of the box he

00:29:07,430 --> 00:29:11,390
installed it works instantly yet don't

00:29:09,230 --> 00:29:14,420
have to do anything except for turning

00:29:11,390 --> 00:29:15,920
it on which is really quite good then it

00:29:14,420 --> 00:29:19,340
started struggling with netbeans in

00:29:15,920 --> 00:29:20,600
phpstorm and because i don't use this

00:29:19,340 --> 00:29:22,220
are these myself I don't know my way

00:29:20,600 --> 00:29:23,870
around it and find it really annoying

00:29:22,220 --> 00:29:26,360
that I actually has to make projects for

00:29:23,870 --> 00:29:27,950
everything I there's no hard work I

00:29:26,360 --> 00:29:30,770
don't want to spend like hours setting

00:29:27,950 --> 00:29:34,310
up a project and putting everything in a

00:29:30,770 --> 00:29:36,500
crack break I've complained to both

00:29:34,310 --> 00:29:39,230
phpstorm people and that means quite a

00:29:36,500 --> 00:29:41,420
bit about that getting trying to see if

00:29:39,230 --> 00:29:43,190
they could make it better it is getting

00:29:41,420 --> 00:29:47,840
better but still not quite as easy as

00:29:43,190 --> 00:29:52,310
Komodo I also started writing ages ago a

00:29:47,840 --> 00:29:54,290
my own clients called GT GT can

00:29:52,310 --> 00:29:57,050
pronounce on it probably should go over

00:29:54,290 --> 00:30:01,070
the different ng t KD v GP george's head

00:29:57,050 --> 00:30:02,990
it's like XKCD with an even worse which

00:30:01,070 --> 00:30:06,890
sort of works and it's really quite fast

00:30:02,990 --> 00:30:09,080
to start but it's mobile yet it was my

00:30:06,890 --> 00:30:10,700
little experimental I'm really quite

00:30:09,080 --> 00:30:11,800
better developing GUI applications

00:30:10,700 --> 00:30:17,720
because I know

00:30:11,800 --> 00:30:20,800
no I've no notion of aesthetics like you

00:30:17,720 --> 00:30:26,120
could see that my pink trace earlier

00:30:20,800 --> 00:30:29,270
however for people that juicier okay so

00:30:26,120 --> 00:30:31,970
i will i have installed a komodo and

00:30:29,270 --> 00:30:35,440
that means but people that are using

00:30:31,970 --> 00:30:37,820
that means who is never seen debugging

00:30:35,440 --> 00:30:42,890
okay too well i'll be demoing at sorry

00:30:37,820 --> 00:30:44,960
and lukna but first a few words on how

00:30:42,890 --> 00:30:47,390
to turn is that Klingon only XD backside

00:30:44,960 --> 00:30:48,920
it is actually really simple in the most

00:30:47,390 --> 00:30:53,600
basic case the only thing you have to do

00:30:48,920 --> 00:30:56,180
is set remote in the screen remote and

00:30:53,600 --> 00:31:02,540
the score enable set that to one that is

00:30:56,180 --> 00:31:04,160
all you need on the X epoxide now if you

00:31:02,540 --> 00:31:07,610
have a slightly more complicated setup

00:31:04,160 --> 00:31:10,730
like you already have something running

00:31:07,610 --> 00:31:13,040
on port 9000 which does happen sadly

00:31:10,730 --> 00:31:17,390
there's VPN software that also uses port

00:31:13,040 --> 00:31:21,260
9000 you have to change it but you can

00:31:17,390 --> 00:31:22,970
also do is have PHP and nxe by burning

00:31:21,260 --> 00:31:24,590
over it's still talking to your ID

00:31:22,970 --> 00:31:26,560
running on your exhalation and in order

00:31:24,590 --> 00:31:30,140
to do that you have to set remote host

00:31:26,560 --> 00:31:32,990
to the IP address of the machine where

00:31:30,140 --> 00:31:34,460
your IDE is running on a reason why PHP

00:31:32,990 --> 00:31:37,550
neat and why XD book needs to know that

00:31:34,460 --> 00:31:40,160
is because the IDE does not connect to

00:31:37,550 --> 00:31:43,010
XD bug in this text debug connecting to

00:31:40,160 --> 00:31:46,990
the ID so your IDE needs to listen on

00:31:43,010 --> 00:31:49,940
the sport only support 9000 by default

00:31:46,990 --> 00:31:54,890
now if you have a firewall between you

00:31:49,940 --> 00:31:56,510
need to do something but that's it the

00:31:54,890 --> 00:32:01,040
question is if there's any good reason

00:31:56,510 --> 00:32:03,260
why that can be bi-directional yes the

00:32:01,040 --> 00:32:06,110
reason is because the ID does not know

00:32:03,260 --> 00:32:11,450
when PHP starts it simply doesn't know

00:32:06,110 --> 00:32:15,170
when it's sent you can press run in your

00:32:11,450 --> 00:32:17,540
ID and then I can try to start but just

00:32:15,170 --> 00:32:21,190
a minute XD v needs to wait for that ID

00:32:17,540 --> 00:32:22,660
to connect to it first which is

00:32:21,190 --> 00:32:25,720
which pretty rubbish as a user

00:32:22,660 --> 00:32:29,850
experience so it's easier a lot easier

00:32:25,720 --> 00:32:33,640
if X ebook connects to the ending now if

00:32:29,850 --> 00:32:35,620
you would have your development service

00:32:33,640 --> 00:32:37,510
in a different network and there's five

00:32:35,620 --> 00:32:39,160
all rules in between it is still

00:32:37,510 --> 00:32:40,930
possible to use this by installing a

00:32:39,160 --> 00:32:45,250
little proxy on the firewall if you can

00:32:40,930 --> 00:32:47,410
do that it is a DB GP proxy the

00:32:45,250 --> 00:32:49,750
documentation XE bug explain to you how

00:32:47,410 --> 00:32:52,090
that works it is something also written

00:32:49,750 --> 00:32:54,660
by the guys from for Mac to stay but we

00:32:52,090 --> 00:32:56,620
can just download the industry I i

00:32:54,660 --> 00:32:58,690
probably have linked it straight from

00:32:56,620 --> 00:33:00,850
the website what that allows you to lose

00:32:58,690 --> 00:33:04,540
an ID then connects to the proxy and

00:33:00,850 --> 00:33:06,670
tells you i'm this client with this IDE

00:33:04,540 --> 00:33:09,400
key and ide key is something that is

00:33:06,670 --> 00:33:10,810
used specifically for this and RD key

00:33:09,400 --> 00:33:14,320
you can just pick as long as you pick a

00:33:10,810 --> 00:33:17,800
unique one the ID will then connect to

00:33:14,320 --> 00:33:21,520
the proxy so that the proxenos this ID

00:33:17,800 --> 00:33:24,220
key belongs to this ID within this IP

00:33:21,520 --> 00:33:26,050
address then when XD Burke you connect

00:33:24,220 --> 00:33:29,170
knots to the ID area directly which you

00:33:26,050 --> 00:33:31,060
connected to the proxy and in that same

00:33:29,170 --> 00:33:33,630
request eid keys is used again sir the

00:33:31,060 --> 00:33:36,810
proxenos I'll to proxy to the correct ID

00:33:33,630 --> 00:33:39,280
but it is quite a complicated setup and

00:33:36,810 --> 00:33:40,870
only really necessary if you have a

00:33:39,280 --> 00:33:45,880
firewall in between that is really quite

00:33:40,870 --> 00:33:48,760
difficult in XD book 21 there is a new

00:33:45,880 --> 00:33:52,480
setting called remote connect back what

00:33:48,760 --> 00:33:54,670
that does is is it bypasses the remote

00:33:52,480 --> 00:33:58,630
host option and what it will do is will

00:33:54,670 --> 00:34:01,060
try to figure out from the stock well if

00:33:58,630 --> 00:34:03,280
you make a connection to XZ bug exhibit

00:34:01,060 --> 00:34:08,860
can't see where its connection is coming

00:34:03,280 --> 00:34:11,260
from and it will use that connection no

00:34:08,860 --> 00:34:14,170
I'm saying this wrong sorry if you make

00:34:11,260 --> 00:34:16,300
a rapper request to PHP PHP will know

00:34:14,170 --> 00:34:19,180
the IP address where the request came

00:34:16,300 --> 00:34:21,550
from and the next debug can use that

00:34:19,180 --> 00:34:23,140
information to connect back to the same

00:34:21,550 --> 00:34:25,930
IP address so you don't have to settle

00:34:23,140 --> 00:34:30,030
the difficult proxy thing which is quite

00:34:25,930 --> 00:34:34,480
useful yes

00:34:30,030 --> 00:34:37,410
no it's on the command line it's also

00:34:34,480 --> 00:34:40,120
quite simple to use XD work instead of

00:34:37,410 --> 00:34:41,890
you don't have to do much many things

00:34:40,120 --> 00:34:43,780
the only thing you have to do is well

00:34:41,890 --> 00:34:47,080
you have to set active a config and I

00:34:43,780 --> 00:34:50,080
have to use ID equal equals something

00:34:47,080 --> 00:34:52,750
unique this is basically a hint for

00:34:50,080 --> 00:34:55,270
exhibit that I need to try to connect to

00:34:52,750 --> 00:34:57,400
an ID so if you make the setting XZ

00:34:55,270 --> 00:35:00,700
people see that and says oh I need to

00:34:57,400 --> 00:35:02,830
connect to this rd most of the older

00:35:00,700 --> 00:35:06,040
settings in XZ Burke you can also set

00:35:02,830 --> 00:35:11,860
with this environment variable you can

00:35:06,040 --> 00:35:13,540
set remote host for example or remote

00:35:11,860 --> 00:35:15,220
port and all those things can also be

00:35:13,540 --> 00:35:18,310
set with this environment fire which is

00:35:15,220 --> 00:35:21,100
quite useful for some IDs that have a ni

00:35:18,310 --> 00:35:22,690
de function set debug the script on the

00:35:21,100 --> 00:35:26,410
command line and then it can set the

00:35:22,690 --> 00:35:28,570
environment variables for you in a

00:35:26,410 --> 00:35:30,430
browser you also need to tell Xzibit

00:35:28,570 --> 00:35:34,090
actually that you won't debugging and

00:35:30,430 --> 00:35:40,960
you do that in One Bowl sort of one way

00:35:34,090 --> 00:35:43,150
you can set a specific HTTP GET variable

00:35:40,960 --> 00:35:47,500
it can also be post variable or cookie

00:35:43,150 --> 00:35:49,300
and as soon as X deep in session start

00:35:47,500 --> 00:35:52,900
as present xcb will then start debugging

00:35:49,300 --> 00:35:54,730
until at some requests doesn't have to

00:35:52,900 --> 00:35:57,190
be the request afterwards you have XC

00:35:54,730 --> 00:35:59,800
box session stop this is something that

00:35:57,190 --> 00:36:03,250
NetBeans uses this uses this way of

00:35:59,800 --> 00:36:05,080
doing it if you do debug in the ID it

00:36:03,250 --> 00:36:06,430
will use URLs like this I can show that

00:36:05,080 --> 00:36:08,410
in a bit i actually will show you that

00:36:06,430 --> 00:36:12,880
in a bit now another way of doing this

00:36:08,410 --> 00:36:15,100
is by using a browser extension there's

00:36:12,880 --> 00:36:17,800
an extension for firefox that's one for

00:36:15,100 --> 00:36:19,900
chrome and there's one for opera I don't

00:36:17,800 --> 00:36:21,700
reply and listened yet each of those

00:36:19,900 --> 00:36:23,890
extensions they do basically exactly the

00:36:21,700 --> 00:36:26,230
same what I will do is they go into your

00:36:23,890 --> 00:36:30,850
status bar of your browser as you can

00:36:26,230 --> 00:36:32,620
see here if I scrolled it up of course

00:36:30,850 --> 00:36:35,920
it makes it difficult to go all the way

00:36:32,620 --> 00:36:37,900
to the bottom line that this is little

00:36:35,920 --> 00:36:41,220
icon here that's really difficult to us

00:36:37,900 --> 00:36:41,220
here realism give me a second

00:36:41,380 --> 00:36:47,950
here's a little icon here that's Firebug

00:36:43,570 --> 00:36:49,870
and then there is start excellent

00:36:47,950 --> 00:36:51,190
session what does what all of those

00:36:49,870 --> 00:36:53,320
three extensions do what all those they

00:36:51,190 --> 00:36:54,610
set a cookie and XE backsies this cookie

00:36:53,320 --> 00:36:57,460
is set and then we'll use the debugging

00:36:54,610 --> 00:36:59,170
for that and that is a lot easier to

00:36:57,460 --> 00:37:02,230
start your debugging session however

00:36:59,170 --> 00:37:04,990
netbeans can deal with this I think he

00:37:02,230 --> 00:37:07,630
Clips can now I haven't gotten into a

00:37:04,990 --> 00:37:08,680
good job brain cedar because I didn't

00:37:07,630 --> 00:37:10,810
have enough time to set up all the

00:37:08,680 --> 00:37:12,160
products with comodo just have to do

00:37:10,810 --> 00:37:17,320
this Edelbrock's instantly out of the

00:37:12,160 --> 00:37:19,270
box all right so this is how netbeans

00:37:17,320 --> 00:37:20,890
looks like this is just a screenshot as

00:37:19,270 --> 00:37:23,380
a backup which will be much better if I

00:37:20,890 --> 00:37:26,560
can actually show you that so let's

00:37:23,380 --> 00:37:27,940
start that means now I'm not sure if I

00:37:26,560 --> 00:37:31,840
already done that so let me check

00:37:27,940 --> 00:37:35,530
quickly no that's something else there's

00:37:31,840 --> 00:37:36,820
nothing bad also I found out that if you

00:37:35,530 --> 00:37:38,470
want to deal with this kind of things

00:37:36,820 --> 00:37:39,760
make sure you only have one RT running

00:37:38,470 --> 00:37:42,040
all the way she got confused but it

00:37:39,760 --> 00:37:47,910
doesn't connect to the correct on so let

00:37:42,040 --> 00:37:47,910
me stop this and you start that means

00:37:48,510 --> 00:37:55,000
this is why don't use ide to take much

00:37:50,980 --> 00:37:58,120
time to stand them it's now Oracle's or

00:37:55,000 --> 00:37:59,440
used to be some is done right so what

00:37:58,120 --> 00:38:02,920
I've loaded in there i've created the

00:37:59,440 --> 00:38:07,330
project that is my website my personal

00:38:02,920 --> 00:38:16,840
website hmm come on why doesn't that

00:38:07,330 --> 00:38:19,870
work so that's basically it i've loaded

00:38:16,840 --> 00:38:21,310
it it's there and well that would be

00:38:19,870 --> 00:38:24,340
really cool if i could just go to the

00:38:21,310 --> 00:38:26,140
browser set the icon and it should pop

00:38:24,340 --> 00:38:28,570
up and that beans doesn't in it so i

00:38:26,140 --> 00:38:30,970
have to go to run run my projects

00:38:28,570 --> 00:38:36,450
everyone that it pops up in a browser

00:38:30,970 --> 00:38:39,430
which is my website and for some reason

00:38:36,450 --> 00:38:41,470
that did not start debugging session

00:38:39,430 --> 00:38:44,650
because that would be way too easy of

00:38:41,470 --> 00:38:46,830
course i did the try this why doesn't it

00:38:44,650 --> 00:38:46,830
work

00:38:50,530 --> 00:38:58,270
always those live demos they always go

00:38:53,560 --> 00:39:00,590
final testing but never why does it work

00:38:58,270 --> 00:39:04,640
the only thing I can think of is that

00:39:00,590 --> 00:39:06,920
the port is already in use which I want

00:39:04,640 --> 00:39:08,120
more yeah there we go why it works a

00:39:06,920 --> 00:39:10,490
second time we're not the first time I

00:39:08,120 --> 00:39:13,130
cannot explain anyway what you can see

00:39:10,490 --> 00:39:14,870
it did it other this this get parameter

00:39:13,130 --> 00:39:16,760
right exeunt session starters NetBeans

00:39:14,870 --> 00:39:19,340
dash XP but you can configure the name

00:39:16,760 --> 00:39:22,490
of it litter for some odd reason it only

00:39:19,340 --> 00:39:24,260
works if you use this IDE key it's no

00:39:22,490 --> 00:39:27,290
reason why they're just being weird

00:39:24,260 --> 00:39:30,590
about this just one would have done and

00:39:27,290 --> 00:39:33,290
then of course it pops up in the IDE on

00:39:30,590 --> 00:39:36,730
this screen so it's it stops at a

00:39:33,290 --> 00:39:39,380
fertile I know my script and then I can

00:39:36,730 --> 00:39:41,990
hop over it by using those buttons here

00:39:39,380 --> 00:39:44,180
just step over 70 step out some going to

00:39:41,990 --> 00:39:51,320
step over you can see here in this line

00:39:44,180 --> 00:39:55,480
i'm setting a URL parameter doppler some

00:39:51,320 --> 00:39:58,610
other stuff so i can then in these

00:39:55,480 --> 00:40:00,680
variables pain i can get to see all my

00:39:58,610 --> 00:40:05,330
variables so i have to superglobal

00:40:00,680 --> 00:40:07,160
zinian an array it's my api object that

00:40:05,330 --> 00:40:08,870
is where I store all my stuff my website

00:40:07,160 --> 00:40:11,990
is not the best piece of code every

00:40:08,870 --> 00:40:15,080
little drinks so you can expound you can

00:40:11,990 --> 00:40:16,910
see all the contents in there arrays

00:40:15,080 --> 00:40:19,250
objects you can expound that you can

00:40:16,910 --> 00:40:25,670
actually modify them as well if you want

00:40:19,250 --> 00:40:29,330
to do that I can't quite recommend

00:40:25,670 --> 00:40:31,250
changing a good it does work you can

00:40:29,330 --> 00:40:33,200
also see the call stack which is not

00:40:31,250 --> 00:40:35,180
very interesting now because there's

00:40:33,200 --> 00:40:37,570
only one level but let me go slightly

00:40:35,180 --> 00:40:37,570
further

00:40:41,710 --> 00:40:52,160
not sure why didn't jesus which

00:40:43,940 --> 00:40:56,450
statement okay this come on get to the

00:40:52,160 --> 00:40:59,450
end oh okay we're going somewhere

00:40:56,450 --> 00:41:00,950
slightly deeper so you can now see in a

00:40:59,450 --> 00:41:03,829
call stack the others two levels as well

00:41:00,950 --> 00:41:06,289
so you have here the one candle in a lot

00:41:03,829 --> 00:41:08,690
of latest point and here the one that

00:41:06,289 --> 00:41:10,309
functions called form and if there would

00:41:08,690 --> 00:41:13,940
have been nice you could have the call

00:41:10,309 --> 00:41:15,410
stack field in the same place as

00:41:13,940 --> 00:41:17,900
variable so you can see them boat at the

00:41:15,410 --> 00:41:21,049
same time but no you now have to double

00:41:17,900 --> 00:41:22,009
click and then it opens up here and if

00:41:21,049 --> 00:41:23,839
you want to see the other one have to go

00:41:22,009 --> 00:41:25,099
back double click and they always open

00:41:23,839 --> 00:41:26,749
here so you can see the variables of

00:41:25,099 --> 00:41:30,109
previous stack frames that's always

00:41:26,749 --> 00:41:32,450
really quite useful obviously you can

00:41:30,109 --> 00:41:34,279
set breakpoints in here too so that's

00:41:32,450 --> 00:41:36,769
set a breakpoint here I think we can do

00:41:34,279 --> 00:41:39,609
clicking if you don't press run it

00:41:36,769 --> 00:41:41,749
should stop there and it's stopped yay

00:41:39,609 --> 00:41:44,499
one thing that it cannot do at the

00:41:41,749 --> 00:41:47,269
moment is show you the contents of

00:41:44,499 --> 00:41:53,239
internal classes it doesn't handle that

00:41:47,269 --> 00:41:54,529
very well so s will be created here you

00:41:53,239 --> 00:41:59,599
can see it showing up oh it actually

00:41:54,529 --> 00:42:01,549
does two nuts it is it for some internal

00:41:59,599 --> 00:42:03,980
PHP classes I think it does it for PDL

00:42:01,549 --> 00:42:05,839
but not for any of the dumb stuff and

00:42:03,980 --> 00:42:07,880
PHP which Richard where it would be

00:42:05,839 --> 00:42:09,890
really useful the reason for that is

00:42:07,880 --> 00:42:12,170
Pete does p internal PHP class that they

00:42:09,890 --> 00:42:13,700
don't have real properties they're only

00:42:12,170 --> 00:42:15,680
a pseudo properties that are used when

00:42:13,700 --> 00:42:17,150
you access them but would be really good

00:42:15,680 --> 00:42:18,380
to FX zebra could actually do the same

00:42:17,150 --> 00:42:20,420
thing at the moment it doesn't do that

00:42:18,380 --> 00:42:22,249
but as something I definitely like to

00:42:20,420 --> 00:42:25,130
alter that for any use of the funk

00:42:22,249 --> 00:42:29,930
laughs its fine of course okay right

00:42:25,130 --> 00:42:31,970
debugging this one terminate it yes for

00:42:29,930 --> 00:42:36,049
Komodo what I can do is just start it

00:42:31,970 --> 00:42:40,099
wait yes whatever you don't have to open

00:42:36,049 --> 00:42:42,170
any projects but if you go here remove

00:42:40,099 --> 00:42:43,910
this bar to see you that it also doesn't

00:42:42,170 --> 00:42:48,349
work now oh actually that because I

00:42:43,910 --> 00:42:50,420
probably had enabled attorney yes so it

00:42:48,349 --> 00:42:53,089
pops up and then come Otis is do you

00:42:50,420 --> 00:42:54,320
want zebra press yes and we here at the

00:42:53,089 --> 00:42:57,040
same place

00:42:54,320 --> 00:42:59,420
and it works and basically the same way

00:42:57,040 --> 00:43:00,950
you can set a little bit more different

00:42:59,420 --> 00:43:02,510
break points because XD big support

00:43:00,950 --> 00:43:04,010
break points on function and

00:43:02,510 --> 00:43:06,350
preferential access but also on

00:43:04,010 --> 00:43:09,350
conditions of certain variables being

00:43:06,350 --> 00:43:12,530
larger than 5 or it will allow you to

00:43:09,350 --> 00:43:14,780
break every third time it hits that line

00:43:12,530 --> 00:43:17,620
and things like that the status all and

00:43:14,780 --> 00:43:21,910
not all the IDS have implemented that

00:43:17,620 --> 00:43:24,740
fully and not even Komodo excellent

00:43:21,910 --> 00:43:26,900
that's the debugging parts let me go

00:43:24,740 --> 00:43:31,190
back to the presentation i also have a

00:43:26,900 --> 00:43:33,260
slide of there's also something i always

00:43:31,190 --> 00:43:35,690
keep forgetting if i'm giving a

00:43:33,260 --> 00:43:38,270
presentation which is normal PHP it also

00:43:35,690 --> 00:43:41,540
pops up in the ides i have to turn it

00:43:38,270 --> 00:43:45,500
off and we don't want to debugging my

00:43:41,540 --> 00:43:47,690
presentation there we go there we go

00:43:45,500 --> 00:43:51,290
Komodo and the demo that I've just done

00:43:47,690 --> 00:43:53,090
this is looked like useful to you it

00:43:51,290 --> 00:43:55,820
does to me last thing that are we

00:43:53,090 --> 00:43:57,830
talking about is profiling profiling is

00:43:55,820 --> 00:44:00,440
the art of trying to figure out where

00:43:57,830 --> 00:44:03,050
things are slowing applications and for

00:44:00,440 --> 00:44:05,150
that XD brooke has functionality in

00:44:03,050 --> 00:44:06,890
there that writes out profiling files

00:44:05,150 --> 00:44:08,870
profiling faults are different from

00:44:06,890 --> 00:44:12,410
tracing files because they use the same

00:44:08,870 --> 00:44:16,070
format as cash grind uses cash grant is

00:44:12,410 --> 00:44:18,680
a sea level 2 for profiling similar to

00:44:16,070 --> 00:44:21,500
what exhibit implements but then for see

00:44:18,680 --> 00:44:24,200
applications a profiling allows you to

00:44:21,500 --> 00:44:26,570
do is with those straight at dump files

00:44:24,200 --> 00:44:28,100
those profile files you can run k cash

00:44:26,570 --> 00:44:30,170
Brundle k cash grind is a linux

00:44:28,100 --> 00:44:33,110
application and then you can analyze

00:44:30,170 --> 00:44:36,410
those false offline k cash grinder is is

00:44:33,110 --> 00:44:40,100
a KDE application there are pre compiled

00:44:36,410 --> 00:44:41,900
binaries for windows the URL so those

00:44:40,100 --> 00:44:44,930
are on the XE big website on the

00:44:41,900 --> 00:44:48,500
documentation and there's a few more

00:44:44,930 --> 00:44:50,240
tools as well so let's k cash crunch for

00:44:48,500 --> 00:44:52,130
linux instead of showing the slides I'll

00:44:50,240 --> 00:44:54,380
give the demo so don't worry about me

00:44:52,130 --> 00:44:57,650
skipping over them this K cash crunch

00:44:54,380 --> 00:45:00,050
for Mac there's a tool called neck grind

00:44:57,650 --> 00:45:04,060
with it isn't free it's like two hundred

00:45:00,050 --> 00:45:06,230
dollars for some odd reason there's also

00:45:04,060 --> 00:45:07,579
something i forgot to mention very

00:45:06,230 --> 00:45:11,289
simple d

00:45:07,579 --> 00:45:13,609
looking to for the macro called magma

00:45:11,289 --> 00:45:21,259
which of the three acronym so that I

00:45:13,609 --> 00:45:22,759
think of mag DB dbg I think it was but I

00:45:21,259 --> 00:45:25,099
might have to check I get lost with all

00:45:22,759 --> 00:45:26,269
those acronyms and which is a free tool

00:45:25,099 --> 00:45:27,859
and it's actually really quite simple

00:45:26,269 --> 00:45:30,729
good and it doesn't require you to

00:45:27,859 --> 00:45:33,019
install an ID so that's quite nice

00:45:30,729 --> 00:45:35,769
s'okay get cranked i will show you a

00:45:33,019 --> 00:45:38,029
little bit of how that looks like

00:45:35,769 --> 00:45:41,890
there's more tools as well as a tool

00:45:38,029 --> 00:45:44,630
called rep grind and web grind is a

00:45:41,890 --> 00:45:46,279
implementation of k cash grind but then

00:45:44,630 --> 00:45:49,640
as a web script which really quite

00:45:46,279 --> 00:45:51,940
useful to all right let's close all my

00:45:49,640 --> 00:45:57,619
previous shells which wasn't quite smart

00:45:51,940 --> 00:46:00,999
demos there is profile so if we run

00:45:57,619 --> 00:46:00,999
can't cash quite with a profile phone

00:46:01,660 --> 00:46:06,489
you get to see something like this

00:46:07,029 --> 00:46:11,839
there's lots and lots of information in

00:46:09,589 --> 00:46:14,390
here on the left side you have the time

00:46:11,839 --> 00:46:16,880
it took for this function everything it

00:46:14,390 --> 00:46:23,719
calls from this function the amount of

00:46:16,880 --> 00:46:27,880
time that function used sorry yeah this

00:46:23,719 --> 00:46:27,880
back sorry I'm

00:46:32,970 --> 00:46:42,830
so loud it's okay the working noggin

00:46:38,160 --> 00:46:42,830
yeah okay it's difficult to hear

00:46:55,820 --> 00:47:04,610
my damn you need to turn that one on to

00:47:02,960 --> 00:47:08,600
us I'll turn this one off otherwise we

00:47:04,610 --> 00:47:10,010
close maybe alright so now I have a

00:47:08,600 --> 00:47:11,690
microphone in my hand now it would be

00:47:10,010 --> 00:47:16,130
really useful career useful to have

00:47:11,690 --> 00:47:18,770
three arms anyway what we have here is

00:47:16,130 --> 00:47:22,100
all the function that were called you

00:47:18,770 --> 00:47:24,830
can see I use the same same script as I

00:47:22,100 --> 00:47:27,920
used earlier than showing the function

00:47:24,830 --> 00:47:29,780
trailer not a function traces d yes the

00:47:27,920 --> 00:47:32,120
computerized function trace that you can

00:47:29,780 --> 00:47:35,240
read that i read fit the script right it

00:47:32,120 --> 00:47:37,700
is of course a different run you can see

00:47:35,240 --> 00:47:39,500
things they call 433 times let's just

00:47:37,700 --> 00:47:42,290
click on that and see what happens you

00:47:39,500 --> 00:47:44,870
can see who call this function so main

00:47:42,290 --> 00:47:47,600
call that fetch commons gauntlets you

00:47:44,870 --> 00:47:51,560
have the call graph that shows you in an

00:47:47,600 --> 00:47:53,510
overview and let's go to Maine which

00:47:51,560 --> 00:47:55,850
functions took up a lot of time the

00:47:53,510 --> 00:47:58,430
amount of time function records so

00:47:55,850 --> 00:48:00,050
rendered rst to file took up thirty to

00:47:58,430 --> 00:48:01,730
thirty percent almost of the whole

00:48:00,050 --> 00:48:03,680
request which makes sense because that's

00:48:01,730 --> 00:48:09,560
basically made function of the script

00:48:03,680 --> 00:48:11,240
and you can find out which part of your

00:48:09,560 --> 00:48:13,730
application is slow but just looking at

00:48:11,240 --> 00:48:17,030
this and following the things to slow

00:48:13,730 --> 00:48:18,710
parts there's so much information here

00:48:17,030 --> 00:48:20,390
that is very difficult to show I can

00:48:18,710 --> 00:48:22,040
probably talk to you for an hour about

00:48:20,390 --> 00:48:25,760
it i don't have an hour i only have 10

00:48:22,040 --> 00:48:27,950
more minutes so contain dress this is

00:48:25,760 --> 00:48:30,980
basically all i had to show you of X

00:48:27,950 --> 00:48:33,980
debug but a few words XD because open

00:48:30,980 --> 00:48:38,180
source and free as in free beer except

00:48:33,980 --> 00:48:40,060
that it's not alcoholic and like see

00:48:38,180 --> 00:48:42,380
book takes up a lot of my spare time and

00:48:40,060 --> 00:48:46,280
now living along I don't have a lot of

00:48:42,380 --> 00:48:47,540
spare time anymore so some people came

00:48:46,280 --> 00:48:49,730
up with the ideas as well we need to

00:48:47,540 --> 00:48:53,180
help you with us and there's I they came

00:48:49,730 --> 00:48:55,580
up with something called donations which

00:48:53,180 --> 00:48:57,860
I'm always happy about to receive them

00:48:55,580 --> 00:49:02,120
it's not mandatory it just makes me like

00:48:57,860 --> 00:49:05,720
a warm fuzzy glow inside of me and for

00:49:02,120 --> 00:49:07,370
some new features the idea is that to

00:49:05,720 --> 00:49:08,780
get me to work on the sort of feature

00:49:07,370 --> 00:49:10,370
next book I really

00:49:08,780 --> 00:49:14,960
to go to do because it's a difficult

00:49:10,370 --> 00:49:17,300
piece of software um this is by the way

00:49:14,960 --> 00:49:19,370
kay-kay cash crunch changed how it works

00:49:17,300 --> 00:49:20,930
internally so the profile false i'm

00:49:19,370 --> 00:49:23,450
showing don't work with KCAL count

00:49:20,930 --> 00:49:26,270
anymore so i have to rewrite parts of

00:49:23,450 --> 00:49:30,740
this they can vote in this all say I

00:49:26,270 --> 00:49:33,050
just come up with an amount how much who

00:49:30,740 --> 00:49:35,390
did this normally cost if this was your

00:49:33,050 --> 00:49:36,620
normal rates or anything like that of

00:49:35,390 --> 00:49:38,390
course i'd put down a little bit less

00:49:36,620 --> 00:49:40,850
and see if people are infants in

00:49:38,390 --> 00:49:42,380
sponsoring specific features and this is

00:49:40,850 --> 00:49:44,510
something i'm experimenting with i don't

00:49:42,380 --> 00:49:46,660
know if i like it i would rather work on

00:49:44,510 --> 00:49:49,250
it for free but i don't have the time

00:49:46,660 --> 00:49:50,990
which sounds a bit weird but yeah you

00:49:49,250 --> 00:49:52,670
know what i mean so if you interested in

00:49:50,990 --> 00:49:53,990
something like this let me know and we

00:49:52,670 --> 00:49:56,120
can talk about this or if you want

00:49:53,990 --> 00:49:58,820
something specific last few words before

00:49:56,120 --> 00:50:00,620
we go for the questions XD break has an

00:49:58,820 --> 00:50:02,840
excellent website it has documentation

00:50:00,620 --> 00:50:03,890
has documented everything except that

00:50:02,840 --> 00:50:07,250
the thing that i just discovered

00:50:03,890 --> 00:50:08,810
yesterday the specification is online us

00:50:07,250 --> 00:50:11,600
all if you have your own ID of your own

00:50:08,810 --> 00:50:13,130
tools you can actually use protocol

00:50:11,600 --> 00:50:14,390
specification to write genitals it's an

00:50:13,130 --> 00:50:16,070
open specification you can do whatever

00:50:14,390 --> 00:50:19,030
you want with it as long as you

00:50:16,070 --> 00:50:21,500
implement it and not not implemented if

00:50:19,030 --> 00:50:25,630
you think this talk was useful please

00:50:21,500 --> 00:50:29,090
rate it at joined in at joint in 25 22

00:50:25,630 --> 00:50:31,490
and the slice of this presentation will

00:50:29,090 --> 00:50:34,550
be on later at Derek battle internal /

00:50:31,490 --> 00:50:40,400
talks at HTML now some questions if

00:50:34,550 --> 00:50:43,340
there are any no questions now there's

00:50:40,400 --> 00:50:48,610
go ahead I'll just this one more Mike

00:50:43,340 --> 00:50:54,380
never this easy I think it's in the

00:50:48,610 --> 00:50:56,900
example of the tracing and a ray pop was

00:50:54,380 --> 00:51:00,380
the function loose yes taking the most

00:50:56,900 --> 00:51:02,870
time and I noticed that the memory for

00:51:00,380 --> 00:51:05,150
that was a negative number so I just

00:51:02,870 --> 00:51:06,950
wonder what that meant okay what are a

00:51:05,150 --> 00:51:10,160
purpose does it remove elements from an

00:51:06,950 --> 00:51:12,350
array infant out return something that

00:51:10,160 --> 00:51:14,780
might actually cause a decrease in

00:51:12,350 --> 00:51:18,920
memory a peach piece memory manager is a

00:51:14,780 --> 00:51:22,700
bit all that time so doing profile

00:51:18,920 --> 00:51:27,349
management and no memory profiling

00:51:22,700 --> 00:51:30,200
really difficult to do because yeah PHP

00:51:27,349 --> 00:51:33,470
engine itself is just really well weird

00:51:30,200 --> 00:51:34,790
about at a time some it's very difficult

00:51:33,470 --> 00:51:37,070
to interpret those numbers correctly

00:51:34,790 --> 00:51:39,020
without understanding exactly how PHP

00:51:37,070 --> 00:51:41,930
does things and yeah I can show that in

00:51:39,020 --> 00:51:43,730
the tool that's easily so yeah there's a

00:51:41,930 --> 00:51:46,339
few weird things in a bit memory usage

00:51:43,730 --> 00:51:49,250
at miss okay there are more questions I

00:51:46,339 --> 00:52:00,530
saw all the way in the back you have to

00:51:49,250 --> 00:52:02,329
run for a job today yeah hello um I for

00:52:00,530 --> 00:52:05,690
those of us using the zend framework

00:52:02,329 --> 00:52:07,250
there's something called zend debug and

00:52:05,690 --> 00:52:09,829
she's basically just a wrapper for VAR

00:52:07,250 --> 00:52:12,980
dump so presumably once XD bug is

00:52:09,829 --> 00:52:15,460
installed it just simply works that be

00:52:12,980 --> 00:52:19,400
correct assumption XD bug will work yes

00:52:15,460 --> 00:52:21,200
if you install it works there is one

00:52:19,400 --> 00:52:24,950
thing if you have an user-defined error

00:52:21,200 --> 00:52:28,220
handler it will override the XD books

00:52:24,950 --> 00:52:29,599
are hand are at times and dad might be

00:52:28,220 --> 00:52:31,490
something you need to have need to have

00:52:29,599 --> 00:52:34,280
a look at but although that is just in

00:52:31,490 --> 00:52:37,010
silently extension and I've binaries for

00:52:34,280 --> 00:52:38,270
windows and on a unix operating system

00:52:37,010 --> 00:52:41,780
you can compare it yourself quite easily

00:52:38,270 --> 00:52:43,970
so i think i'm question is gonna ask

00:52:41,780 --> 00:52:45,829
result yes i have actually done this and

00:52:43,970 --> 00:52:48,200
it works fine with zend framework okay

00:52:45,829 --> 00:52:50,319
problem at all so presumably rather than

00:52:48,200 --> 00:52:53,030
integrate it into the IDE you can simply

00:52:50,319 --> 00:52:54,800
have a PHP any file keep changing the

00:52:53,030 --> 00:52:58,369
settings and just use the browser and it

00:52:54,800 --> 00:53:01,880
just works hmm don't understand the

00:52:58,369 --> 00:53:05,720
question are sorry well the moment it

00:53:01,880 --> 00:53:09,829
just simply whenever an error occurs the

00:53:05,720 --> 00:53:13,069
X does end we've got Zen debug on hmm it

00:53:09,829 --> 00:53:15,890
is in a wrapper for VAR dump which then

00:53:13,069 --> 00:53:18,319
actually displays things using H X debug

00:53:15,890 --> 00:53:20,510
yeah that just works okay yeah I didn't

00:53:18,319 --> 00:53:22,760
know that implemented son yeah yeah okay

00:53:20,510 --> 00:53:24,980
and so if you have the PHP any file you

00:53:22,760 --> 00:53:25,910
keep changing the X debug settings and

00:53:24,980 --> 00:53:27,170
everything will just appear in the

00:53:25,910 --> 00:53:30,619
browser it should just work perfectly

00:53:27,170 --> 00:53:32,359
but yes in it in some case you might

00:53:30,619 --> 00:53:34,250
have to restart a browser or not a

00:53:32,359 --> 00:53:36,539
browser the certain web server because

00:53:34,250 --> 00:53:38,969
the web server only will pick up new

00:53:36,539 --> 00:53:40,709
things oh yeah every mate but yeah other

00:53:38,969 --> 00:53:42,329
than that you have to you can put them

00:53:40,709 --> 00:53:44,099
in htaccess for most of the settings you

00:53:42,329 --> 00:53:45,869
can put in HD access file and then you

00:53:44,099 --> 00:53:47,099
don't even have to restart of absorbent

00:53:45,869 --> 00:53:51,779
oh that's a good tip thanks for that

00:53:47,099 --> 00:53:59,819
okay there's one more question here okay

00:53:51,779 --> 00:54:01,259
I've five more minutes at a time so I've

00:53:59,819 --> 00:54:03,059
also got the misfortune of using zend

00:54:01,259 --> 00:54:04,679
framework and doing trying to do some

00:54:03,059 --> 00:54:06,479
profiling on it but the problem is as my

00:54:04,679 --> 00:54:08,039
code is compared to the zenfone work

00:54:06,479 --> 00:54:10,049
just doesn't appear on in profiling

00:54:08,039 --> 00:54:12,150
scripts because it's so much lighter so

00:54:10,049 --> 00:54:13,259
it's a way of profiling just my section

00:54:12,150 --> 00:54:16,890
we're having to profile a hold of the

00:54:13,259 --> 00:54:21,719
zend framework what I do so there would

00:54:16,890 --> 00:54:23,369
be nice okay yes and no you can do it

00:54:21,719 --> 00:54:25,079
with the profiling functionality because

00:54:23,369 --> 00:54:27,449
it really has to start when the script

00:54:25,079 --> 00:54:29,009
start and this is something that I would

00:54:27,449 --> 00:54:34,140
like to fix but I haven't had the time

00:54:29,009 --> 00:54:35,819
for yet the execution traces you can do

00:54:34,140 --> 00:54:38,939
for just sections we're just starting it

00:54:35,819 --> 00:54:41,069
and stopping it when you want to so the

00:54:38,939 --> 00:54:42,630
thing are is because your encode is

00:54:41,069 --> 00:54:44,219
integrating the zend framework so merge

00:54:42,630 --> 00:54:46,319
that is really difficult to figure out

00:54:44,219 --> 00:54:50,339
where your code starts and they're cut

00:54:46,319 --> 00:54:52,079
stops what we awesome is what if you

00:54:50,339 --> 00:54:54,239
would be able to filter out everything

00:54:52,079 --> 00:54:57,179
that starts with Zen turn the score for

00:54:54,239 --> 00:55:01,219
example but I haven't done that yet but

00:54:57,179 --> 00:55:03,419
that'd be something cool to have I agree

00:55:01,219 --> 00:55:05,130
find a feature request I don't think

00:55:03,419 --> 00:55:07,289
it's in there yet if you go to Bucks dot

00:55:05,130 --> 00:55:13,049
X debug org you can fill feature

00:55:07,289 --> 00:55:16,469
requests all right anything else nope oh

00:55:13,049 --> 00:55:18,119
oh yeah go ahead I just wondering I've

00:55:16,469 --> 00:55:20,609
oneís actually but a little bit i was

00:55:18,119 --> 00:55:22,919
wondering what's the largest profile

00:55:20,609 --> 00:55:25,259
value you've really used and been able

00:55:22,919 --> 00:55:28,739
to work with because i come up with some

00:55:25,259 --> 00:55:30,539
rather large ones i couldn't hmm i found

00:55:28,739 --> 00:55:32,669
it k cash grant handles it really quite

00:55:30,539 --> 00:55:35,189
well the largest falls I've seen as in

00:55:32,669 --> 00:55:37,559
the order of 700 megabytes or something

00:55:35,189 --> 00:55:39,209
like that which is a lot of data but

00:55:37,559 --> 00:55:42,780
yeah that worked fine I say yeah I

00:55:39,209 --> 00:55:45,550
managed to cut the cake with 11 file

00:55:42,780 --> 00:55:48,550
maybe you should go to a little bit the

00:55:45,550 --> 00:55:50,650
song that was that was the aim okay yeah

00:55:48,550 --> 00:55:53,619
I haven't tried anything that large but

00:55:50,650 --> 00:55:57,760
so I don't know how well it works Yankee

00:55:53,619 --> 00:56:06,030
you're welcome anything else it's one

00:55:57,760 --> 00:56:06,030
more in front and one in the back oops

00:56:07,500 --> 00:56:12,580
good I was just going to ask for like

00:56:10,480 --> 00:56:14,170
really large projects like drupal which

00:56:12,580 --> 00:56:15,820
have a really large bootstrap is there

00:56:14,170 --> 00:56:17,619
any way to easily jump into the modules

00:56:15,820 --> 00:56:20,500
that you've written to debug them in an

00:56:17,619 --> 00:56:22,540
IDE you can set a breakpoint when your

00:56:20,500 --> 00:56:23,619
code starts is there any other wires

00:56:22,540 --> 00:56:26,320
that literally you have to define it

00:56:23,619 --> 00:56:33,940
when you want it very specific module or

00:56:26,320 --> 00:56:36,070
foil yes yes basically yes you need to

00:56:33,940 --> 00:56:37,840
figure out where code starts well one

00:56:36,070 --> 00:56:39,670
else one thing I forgot to mention is

00:56:37,840 --> 00:56:41,080
that there's a function called XD but

00:56:39,670 --> 00:56:43,690
gonna score break if you put it in your

00:56:41,080 --> 00:56:45,250
coat it will break us all so it can be

00:56:43,690 --> 00:56:50,550
really useful in those cases when you

00:56:45,250 --> 00:56:50,550
know about things right anything else

00:56:51,210 --> 00:56:58,510
are you able to I you're able to do

00:56:56,800 --> 00:57:03,460
profiling in sections and then combine

00:56:58,510 --> 00:57:05,380
it like XH prof there's functionality in

00:57:03,460 --> 00:57:08,380
XZ bug that actually allows you to

00:57:05,380 --> 00:57:10,090
proform multiple requests but that is

00:57:08,380 --> 00:57:11,500
exactly the function that I've never

00:57:10,090 --> 00:57:14,470
used myself so I don't know how it works

00:57:11,500 --> 00:57:16,330
yet and it is not documented so that

00:57:14,470 --> 00:57:18,460
will require some effort for me to

00:57:16,330 --> 00:57:19,720
figure out how it actually works and but

00:57:18,460 --> 00:57:22,990
yeah there is functionality is there

00:57:19,720 --> 00:57:24,700
however XH prof is much better as

00:57:22,990 --> 00:57:29,440
profiling in a production environment

00:57:24,700 --> 00:57:30,970
because it's quite lightweight and you

00:57:29,440 --> 00:57:33,250
can do just little small things here

00:57:30,970 --> 00:57:37,240
whereas XD book does not do that that

00:57:33,250 --> 00:57:39,700
moment all right I think we have to end

00:57:37,240 --> 00:57:42,130
this because time's up I hope you

00:57:39,700 --> 00:57:45,240
enjoyed it please rate my talk and enjoy

00:57:42,130 --> 00:57:45,240

YouTube URL: https://www.youtube.com/watch?v=ELtok-IrZSY


