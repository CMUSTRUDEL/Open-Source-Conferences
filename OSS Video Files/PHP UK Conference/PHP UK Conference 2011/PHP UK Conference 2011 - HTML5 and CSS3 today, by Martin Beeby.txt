Title: PHP UK Conference 2011 - HTML5 and CSS3 today, by Martin Beeby
Publication date: 2012-03-15
Playlist: PHP UK Conference 2011
Description: 
	http://www.phpconference.co.uk/talk/html5-and-css3-today

For years web developers have used hacks, sweat and black magic to bend HTML and CSS into submission and achieve visual effects across browsers that really shouldn't be so difficult.

With HTML5 and CSS3 comes the promise that one day we will be able to play video, create animations and round corners without the need for plugins and with the guarantee that the same code will work in all browsers.

Back in the real world, developers have to navigate the complex issues around HTML5 and CSS3 caused by browser differences, backwards compatibility and an ever evolving standard. This talk introduces HTML5 and CSS3 using demos that will illustrate how to use these new technologies today, but ensure they don't break tomorrow.

 
Martin Beeby is a Developer Evangelist at Microsoft where he talks to developers about the Web, HTML5, MVC, JavaScript, Phone Development, the Cloud, developer productivity and open source in big business. Martin has been developing websites since he was 16 and over the past 12 years has worked on projects with many major brands including The Sun, The Daily Mail, Ministry Of Sound, National Rail Enquiries, Easy Jet and Tesco.
Captions: 
	00:00:02,560 --> 00:00:09,370
I think I preferred my booboo or

00:00:07,210 --> 00:00:11,139
whatever that was that was good I don't

00:00:09,370 --> 00:00:12,969
have a massage today I'm sorry for my

00:00:11,139 --> 00:00:14,679
picture does include a mustache I feel

00:00:12,969 --> 00:00:16,030
like I've you know shortchange you a

00:00:14,679 --> 00:00:18,280
little bit but I'm not having one today

00:00:16,030 --> 00:00:21,190
but what I'm going to talk to you today

00:00:18,280 --> 00:00:23,790
about is css3 and html5 can everyone

00:00:21,190 --> 00:00:26,380
hear me by the way that's a good stuff

00:00:23,790 --> 00:00:27,520
so my twitter handles the Biebs if

00:00:26,380 --> 00:00:30,040
you've got any questions throughout the

00:00:27,520 --> 00:00:32,439
session you can hit up the Biebs on

00:00:30,040 --> 00:00:34,329
Twitter or the new belly tag is up being

00:00:32,439 --> 00:00:36,489
monitored or there's a new belly tag as

00:00:34,329 --> 00:00:38,350
well ask any questions you like I'll try

00:00:36,489 --> 00:00:40,539
and respond to anything I get be careful

00:00:38,350 --> 00:00:41,649
to spell it the Biebs though because

00:00:40,539 --> 00:00:46,050
I've been having a lot of trouble

00:00:41,649 --> 00:00:49,690
recently with Justin Bieber

00:00:46,050 --> 00:00:52,319
he's a stole my name basically I don't

00:00:49,690 --> 00:00:55,120
use it at the beams but every Dyslexic

00:00:52,319 --> 00:00:58,749
Justin Bieber fan in the world has been

00:00:55,120 --> 00:01:00,249
messaging me we're not the same guy and

00:00:58,749 --> 00:01:01,809
also I don't want you guys to be asking

00:01:00,249 --> 00:01:07,899
him css3 questions I don't think he

00:01:01,809 --> 00:01:12,040
knows so it's EE for me ie for Justin

00:01:07,899 --> 00:01:13,479
Beiber bubblegum pop legend so you might

00:01:12,040 --> 00:01:15,939
be wondering why someone from Microsoft

00:01:13,479 --> 00:01:19,750
because that's where I'm from is talking

00:01:15,939 --> 00:01:23,079
to you about the modern web or modern

00:01:19,750 --> 00:01:25,060
browsers css3 or html5 and the fact is

00:01:23,079 --> 00:01:26,950
in the last 24 months we've kind of come

00:01:25,060 --> 00:01:30,670
a long way in what we've been doing

00:01:26,950 --> 00:01:33,850
around ie9 around html5 there are css3

00:01:30,670 --> 00:01:36,100
and we have a legacy which precedes us

00:01:33,850 --> 00:01:41,680
and we get a lot of digs at Legacy

00:01:36,100 --> 00:01:42,789
understandably in many cases and we one

00:01:41,680 --> 00:01:45,130
of the things that we've done well with

00:01:42,789 --> 00:01:46,420
IE 9 and I'm not going to talk about i9

00:01:45,130 --> 00:01:49,780
all the time by the way this is just an

00:01:46,420 --> 00:01:51,490
introduction is we listen to the

00:01:49,780 --> 00:01:52,960
community we've got their feedback and

00:01:51,490 --> 00:01:54,369
we went back and improved our product

00:01:52,960 --> 00:01:57,729
and it's something which we're trying to

00:01:54,369 --> 00:01:59,409
do with Windows without PHP on Windows

00:01:57,729 --> 00:02:01,539
we're trying to constantly get feedback

00:01:59,409 --> 00:02:01,960
about PHP on Windows how we could make

00:02:01,539 --> 00:02:04,090
it better

00:02:01,960 --> 00:02:07,299
how we can make a viable hosting

00:02:04,090 --> 00:02:08,259
platform for PHP so I 9 is an example of

00:02:07,299 --> 00:02:09,700
where we've done that we went to the

00:02:08,259 --> 00:02:11,230
community we've really asked them and

00:02:09,700 --> 00:02:12,310
really got their opinions and it's

00:02:11,230 --> 00:02:14,050
quickly I just want to show you a quick

00:02:12,310 --> 00:02:15,640
little video about IE 9 I know it's I'm

00:02:14,050 --> 00:02:16,120
sorry about this but it just gives you

00:02:15,640 --> 00:02:17,680
the pin

00:02:16,120 --> 00:02:22,030
and kind of some of the market research

00:02:17,680 --> 00:02:23,739
that we did around around ie9 so that we

00:02:22,030 --> 00:02:24,879
could really know you'll see for

00:02:23,739 --> 00:02:33,879
yourself so I'm just gonna start the

00:02:24,879 --> 00:02:37,030
video now for the last ten years in my

00:02:33,879 --> 00:02:37,720
opinion Microsoft have consistently got

00:02:37,030 --> 00:02:40,120
it right

00:02:37,720 --> 00:02:42,640
internet slaughter has been unbelievable

00:02:40,120 --> 00:02:44,500
because it's so good my gosh can I say

00:02:42,640 --> 00:02:47,290
do they really think that we're gonna

00:02:44,500 --> 00:02:49,090
prefer other browsers no why

00:02:47,290 --> 00:02:51,489
Internet Explorer set the standards for

00:02:49,090 --> 00:02:55,780
other browsers it's the legacy will not

00:02:51,489 --> 00:02:58,060
dies visually ie6 set new expectations

00:02:55,780 --> 00:03:01,989
about the way the web should look then

00:02:58,060 --> 00:03:05,140
ie 7 board along transparent pngs

00:03:01,989 --> 00:03:08,319
and I just said wow there's been a

00:03:05,140 --> 00:03:10,959
complete lack or problems and

00:03:08,319 --> 00:03:13,720
frustrations have Microsoft giving us to

00:03:10,959 --> 00:03:17,640
support all the bloody time I've always

00:03:13,720 --> 00:03:19,720
found it plays nicely it really is

00:03:17,640 --> 00:03:22,750
inexplicable how its performance set

00:03:19,720 --> 00:03:25,030
such a high expectation ridiculously

00:03:22,750 --> 00:03:27,910
great is how I described their efforts

00:03:25,030 --> 00:03:30,340
to date I haven't forgot a bad thing to

00:03:27,910 --> 00:03:33,120
say about the old internet explorer big

00:03:30,340 --> 00:03:33,120
round of applause

00:03:40,819 --> 00:03:47,730
thank you that's good yeah we'll be

00:03:45,540 --> 00:03:49,920
making some changes in our organization

00:03:47,730 --> 00:03:54,959
the way that we build ini the way that

00:03:49,920 --> 00:03:56,430
we take community feedback and the

00:03:54,959 --> 00:04:00,599
Internet's change an awful lot since we

00:03:56,430 --> 00:04:01,650
released ie6 in 2001 when it was

00:04:00,599 --> 00:04:04,170
released it was kind of a good browser

00:04:01,650 --> 00:04:06,840
it done lots of cool things but over

00:04:04,170 --> 00:04:07,349
time it's got a little bit stale to say

00:04:06,840 --> 00:04:09,000
the least

00:04:07,349 --> 00:04:11,849
cause the hell of a lot of headaches for

00:04:09,000 --> 00:04:13,739
you I was previously a developer for

00:04:11,849 --> 00:04:16,079
since I was 16 for 12 years I've joined

00:04:13,739 --> 00:04:17,669
Microsoft a year ago and I stayed up

00:04:16,079 --> 00:04:20,100
late nights trying to fix browser

00:04:17,669 --> 00:04:21,419
incompatibilities and whilst I'm at

00:04:20,100 --> 00:04:22,530
Microsoft and one of the things are what

00:04:21,419 --> 00:04:24,330
to do when I was at Microsoft was

00:04:22,530 --> 00:04:25,740
encourage Microsoft and to do everything

00:04:24,330 --> 00:04:26,789
I could possibly do to make sure that we

00:04:25,740 --> 00:04:30,539
don't make those same mistakes again

00:04:26,789 --> 00:04:31,460
with our browsers moving forward as I

00:04:30,539 --> 00:04:32,639
said the internet was a much different

00:04:31,460 --> 00:04:35,759
beast

00:04:32,639 --> 00:04:37,620
in 2001 Wikipedia only been around for a

00:04:35,759 --> 00:04:42,300
few months when we released a six

00:04:37,620 --> 00:04:48,060
YouTube wasn't there an AJAX was just a

00:04:42,300 --> 00:04:51,000
bleach so I don't know how many amongst

00:04:48,060 --> 00:04:52,889
you are html5 or front-end developers or

00:04:51,000 --> 00:04:56,250
services how many people are server-side

00:04:52,889 --> 00:04:58,050
developers and how many people would

00:04:56,250 --> 00:05:01,949
consider themselves front-end developers

00:04:58,050 --> 00:05:07,530
and how many people are one month's sort

00:05:01,949 --> 00:05:08,669
of full service agencies so as I kind of

00:05:07,530 --> 00:05:10,349
expect that it was kind of more of a

00:05:08,669 --> 00:05:14,970
server-side generally I think that was

00:05:10,349 --> 00:05:16,979
the feed so why would someone working on

00:05:14,970 --> 00:05:18,740
on the server-side care about what we're

00:05:16,979 --> 00:05:21,180
doing in the browser with html5 and css3

00:05:18,740 --> 00:05:22,500
well I think any good

00:05:21,180 --> 00:05:24,960
server-side developer really has to

00:05:22,500 --> 00:05:26,639
understand the front-end of their

00:05:24,960 --> 00:05:28,560
websites the way that users consume

00:05:26,639 --> 00:05:30,479
their sites so it can understand how

00:05:28,560 --> 00:05:33,470
they can architecture better servers

00:05:30,479 --> 00:05:36,330
there are better services better api's I

00:05:33,470 --> 00:05:38,280
know for a fact that maybe seven years

00:05:36,330 --> 00:05:40,349
ago I wasn't thinking about Jason API so

00:05:38,280 --> 00:05:41,610
how I did interact with mobile clients

00:05:40,349 --> 00:05:43,289
things changed because of the way that

00:05:41,610 --> 00:05:44,610
they are actually consumed although I'm

00:05:43,289 --> 00:05:47,070
doing very much similar things in terms

00:05:44,610 --> 00:05:47,740
of server-side technology the way that

00:05:47,070 --> 00:05:51,039
consumed is varied

00:05:47,740 --> 00:05:52,300
from so html5 probably won't a little

00:05:51,039 --> 00:05:56,860
bit down there on that t-shirt how I

00:05:52,300 --> 00:06:00,340
know html5 what the hell something's

00:05:56,860 --> 00:06:01,870
going off how to meet ladies it won't

00:06:00,340 --> 00:06:03,819
make you help you meet ladies but it'll

00:06:01,870 --> 00:06:06,330
probably help you foster better

00:06:03,819 --> 00:06:08,819
relationships with front-end developers

00:06:06,330 --> 00:06:11,919
so this talks just going to talk around

00:06:08,819 --> 00:06:13,840
html5 css3 some of the cool things which

00:06:11,919 --> 00:06:15,490
you can do with it and we're going to

00:06:13,840 --> 00:06:16,990
talk a little bit about some of the

00:06:15,490 --> 00:06:24,789
things you have to do to make it work in

00:06:16,990 --> 00:06:26,349
older browsers so what is html5 well I

00:06:24,789 --> 00:06:29,380
talk about html5 I'm talking really

00:06:26,349 --> 00:06:31,060
about the w3c standard of html5 that's

00:06:29,380 --> 00:06:33,669
the version that we that's the standard

00:06:31,060 --> 00:06:35,680
that we work to as Microsoft with with

00:06:33,669 --> 00:06:39,940
IE 9 so we're working to implement that

00:06:35,680 --> 00:06:42,130
particular standard it's often people

00:06:39,940 --> 00:06:43,720
like me from Microsoft will get up on

00:06:42,130 --> 00:06:46,659
stage and talk about html5 and talk

00:06:43,720 --> 00:06:50,949
about an umbrella of products like SVG

00:06:46,659 --> 00:06:52,780
or WebGL or WebSockets when I say html5

00:06:50,949 --> 00:06:53,860
I hope to mean just this standard which

00:06:52,780 --> 00:06:56,860
where we three so you're talking about

00:06:53,860 --> 00:06:59,199
but forgive me if I do fall into that

00:06:56,860 --> 00:07:02,860
seductive trap of calling everything new

00:06:59,199 --> 00:07:05,380
and fashionable html5 it's obviously

00:07:02,860 --> 00:07:08,680
still under development and no browser

00:07:05,380 --> 00:07:12,490
currently has 100% compatibility with

00:07:08,680 --> 00:07:13,449
html5 and we're all working and pushing

00:07:12,490 --> 00:07:15,190
forward to make it more interoperable

00:07:13,449 --> 00:07:18,310
and making sure that it's a better

00:07:15,190 --> 00:07:20,020
experience with developers and an

00:07:18,310 --> 00:07:21,310
important thing about html5 is it really

00:07:20,020 --> 00:07:23,469
needs to be done the right way and we

00:07:21,310 --> 00:07:26,949
need to as web developers now start

00:07:23,469 --> 00:07:28,620
working with it providing feedback to to

00:07:26,949 --> 00:07:30,669
the browser vendors to make sure that

00:07:28,620 --> 00:07:35,250
that the versions that they do release

00:07:30,669 --> 00:07:37,509
are interoperable the standards are good

00:07:35,250 --> 00:07:42,550
we probably might not set that a few

00:07:37,509 --> 00:07:45,659
years at Microsoft and there's a few

00:07:42,550 --> 00:07:47,349
things in IE 9 in html5 which have been

00:07:45,659 --> 00:07:50,169
standardized for the better

00:07:47,349 --> 00:07:52,780
for example xml httprequest which is the

00:07:50,169 --> 00:07:55,360
basis of every ajax request wasn't

00:07:52,780 --> 00:07:58,000
standardized and so html5 so we went

00:07:55,360 --> 00:07:59,589
back in the html5 working group all the

00:07:58,000 --> 00:08:00,910
big brett browser vendors and not here

00:07:59,589 --> 00:08:03,370
and people like that as well all went

00:08:00,910 --> 00:08:05,230
together and standardize the old stuff

00:08:03,370 --> 00:08:06,820
they obviously standardized the new

00:08:05,230 --> 00:08:09,550
stuff which is coming the new tags the

00:08:06,820 --> 00:08:12,640
new what all that sort of well

00:08:09,550 --> 00:08:14,410
everything around html5 and one of the

00:08:12,640 --> 00:08:16,150
important things they standardize the

00:08:14,410 --> 00:08:19,840
way that error measures happen in a

00:08:16,150 --> 00:08:21,160
browser so previously different browser

00:08:19,840 --> 00:08:23,170
vendors would have different ways of

00:08:21,160 --> 00:08:25,630
dealing with incorrect syntax so if you

00:08:23,170 --> 00:08:29,410
take that example where I've got a span

00:08:25,630 --> 00:08:32,110
which spans a P tag that's invalid

00:08:29,410 --> 00:08:33,940
markup and each browser vendor would

00:08:32,110 --> 00:08:36,370
actually implement the error handling

00:08:33,940 --> 00:08:39,160
for that differently which would mean

00:08:36,370 --> 00:08:41,080
the the CSS would be corrupt and

00:08:39,160 --> 00:08:42,370
different for each browser and the

00:08:41,080 --> 00:08:44,130
JavaScript would work different because

00:08:42,370 --> 00:08:46,330
the Dom would be the different state

00:08:44,130 --> 00:08:48,340
well we standardized how we should

00:08:46,330 --> 00:08:50,440
handle errors so those sorts of

00:08:48,340 --> 00:08:52,590
inconsistencies don't happen because as

00:08:50,440 --> 00:08:54,790
much as we'd like it not to be the case

00:08:52,590 --> 00:08:57,280
this kind of code happens all the time

00:08:54,790 --> 00:08:59,890
on the web and as browser vendors we

00:08:57,280 --> 00:09:02,110
have to support it or failover or error

00:08:59,890 --> 00:09:03,340
in the same way so that we can make sure

00:09:02,110 --> 00:09:04,990
that developers don't have to worry

00:09:03,340 --> 00:09:09,100
about what what happens if you know I'll

00:09:04,990 --> 00:09:10,390
make a mistake and one of the things we

00:09:09,100 --> 00:09:11,800
think is really important at Microsoft

00:09:10,390 --> 00:09:13,810
in terms of all these standards to make

00:09:11,800 --> 00:09:16,570
sure that they're testable now you will

00:09:13,810 --> 00:09:17,980
see our own test suite you'll see

00:09:16,570 --> 00:09:23,140
Google's test suite you'll see Mozilla's

00:09:17,980 --> 00:09:25,210
test Suites but really they're not

00:09:23,140 --> 00:09:26,830
independent we're all showing off the

00:09:25,210 --> 00:09:31,060
performances of our browsers in some

00:09:26,830 --> 00:09:33,160
ways but there is a test harness run

00:09:31,060 --> 00:09:35,860
below double 3c which anyone can commit

00:09:33,160 --> 00:09:37,750
to anyone can write tests for and I'd

00:09:35,860 --> 00:09:40,060
encourage anyone which is interested in

00:09:37,750 --> 00:09:41,830
trying to improve interoperability at

00:09:40,060 --> 00:09:44,290
business party miss out word between

00:09:41,830 --> 00:09:47,230
browsers wants them to work the same

00:09:44,290 --> 00:09:49,240
across all browsers to find bugs in our

00:09:47,230 --> 00:09:51,640
browser to find bugs in our competitors

00:09:49,240 --> 00:09:53,440
browser write test cases submit in subby

00:09:51,640 --> 00:09:57,370
3c so that we can all benefit as a

00:09:53,440 --> 00:09:59,610
community because there's only 820 tests

00:09:57,370 --> 00:10:02,710
currently and that's nowhere near enough

00:09:59,610 --> 00:10:05,320
so this is like the this was done or

00:10:02,710 --> 00:10:09,970
updated refreshed by the v3 C 10th of

00:10:05,320 --> 00:10:13,240
February and it shows the top level

00:10:09,970 --> 00:10:14,410
features of html5 so attributes audio

00:10:13,240 --> 00:10:16,750
video canvas for

00:10:14,410 --> 00:10:18,069
content these are the class names for

00:10:16,750 --> 00:10:20,350
the test so that the buckets of those

00:10:18,069 --> 00:10:24,339
tests which make up a hundred twist

00:10:20,350 --> 00:10:26,740
tests 820 tests and it shows all of the

00:10:24,339 --> 00:10:29,230
recent browser vendors so we've got our

00:10:26,740 --> 00:10:31,930
release candidates chronium 9 firefox 4

00:10:29,230 --> 00:10:33,939
b 11 and the WebKit nightly and it shows

00:10:31,930 --> 00:10:35,470
you their percentages which they pass

00:10:33,939 --> 00:10:36,639
those tests now doesn't mean that

00:10:35,470 --> 00:10:39,009
they're when we've got hundreds out

00:10:36,639 --> 00:10:39,759
there that we're 100% compliant on audio

00:10:39,009 --> 00:10:41,560
in html5

00:10:39,759 --> 00:10:42,910
it means we're 100% compliant with the

00:10:41,560 --> 00:10:47,170
current tests which have been submitted

00:10:42,910 --> 00:10:50,920
w3c so you can see from just that just

00:10:47,170 --> 00:10:53,290
that no one's implementations perfect

00:10:50,920 --> 00:10:56,949
and that only tests a really small

00:10:53,290 --> 00:10:59,410
portion of html5 as a community we need

00:10:56,949 --> 00:11:01,180
to get around the whole market and

00:10:59,410 --> 00:11:03,129
encourage everyone not just to implement

00:11:01,180 --> 00:11:07,540
new features but to get the solid ones

00:11:03,129 --> 00:11:09,279
right because this will be the stuff

00:11:07,540 --> 00:11:11,649
which like really hurts in 10 years time

00:11:09,279 --> 00:11:12,790
this will be the ie6 is in 10 years time

00:11:11,649 --> 00:11:13,990
these kinds of features are not

00:11:12,790 --> 00:11:15,910
implemented correctly across all

00:11:13,990 --> 00:11:17,920
browsers then you won't be able to use

00:11:15,910 --> 00:11:19,509
the audio tag 100% the same in every

00:11:17,920 --> 00:11:19,990
browser and you should be able to why

00:11:19,509 --> 00:11:21,699
not

00:11:19,990 --> 00:11:24,610
you know we've lived this pain for far

00:11:21,699 --> 00:11:27,310
too long so I've got a little URL it's

00:11:24,610 --> 00:11:28,870
bitly slash submit html5 tests it goes

00:11:27,310 --> 00:11:33,430
through the process of submitting a test

00:11:28,870 --> 00:11:36,519
to h2 w3c and you can also submit your

00:11:33,430 --> 00:11:39,579
tests to the other group which which run

00:11:36,519 --> 00:11:41,709
HTML and called what what WG the what

00:11:39,579 --> 00:11:43,720
working group and they'll accept your

00:11:41,709 --> 00:11:45,639
test as well great place to submit them

00:11:43,720 --> 00:11:46,930
to it's really up to you where you go or

00:11:45,639 --> 00:11:49,329
where you put them because Google will

00:11:46,930 --> 00:11:53,290
could commit any good tests back to w3c

00:11:49,329 --> 00:11:55,810
as well so you know submit anywhere but

00:11:53,290 --> 00:11:59,620
submit so I'm just gonna show you

00:11:55,810 --> 00:12:01,630
quickly an example of a html5 site just

00:11:59,620 --> 00:12:05,920
so that if anyone's under any illusion

00:12:01,630 --> 00:12:08,439
as to what they are and I'm going to

00:12:05,920 --> 00:12:13,980
show you a site from BMW produced by MC

00:12:08,439 --> 00:12:13,980
consulting if I have internet connection

00:12:23,519 --> 00:12:35,220
which I don't second

00:12:41,309 --> 00:12:44,739
it makes it difficult doing a web

00:12:43,389 --> 00:12:45,869
demonstration when you don't have the

00:12:44,739 --> 00:12:48,699
Internet

00:12:45,869 --> 00:12:53,230
so I'm going to have to do this through

00:12:48,699 --> 00:12:54,489
mine but imagine a car right you can

00:12:53,230 --> 00:12:56,079
basically go and see this example with

00:12:54,489 --> 00:12:59,549
yourself it Joey defines the future and

00:12:56,079 --> 00:13:03,069
it's an example of a 3d rotating car

00:12:59,549 --> 00:13:15,699
built completely in in html5 using the

00:13:03,069 --> 00:13:16,899
canvas tag very one sec I'm just gonna

00:13:15,699 --> 00:13:19,029
try to connect this connection because

00:13:16,899 --> 00:13:22,089
it's pretty important I have in that

00:13:19,029 --> 00:13:30,069
connectivity it's funny this worked

00:13:22,089 --> 00:13:31,869
before the session talking make

00:13:30,069 --> 00:13:38,319
yourselves you know they don't got any

00:13:31,869 --> 00:13:52,709
good jokes hey hold on we've got we've

00:13:38,319 --> 00:13:56,369
got connections yes what's crying yeah

00:13:52,709 --> 00:13:56,369
I'm not denying that

00:14:02,600 --> 00:14:06,160
yeah if you've got it that'd be great

00:14:14,240 --> 00:14:18,500
let's see how much I can get through

00:14:18,530 --> 00:14:22,220
without internet connectivity

00:14:33,960 --> 00:14:40,130
you have to go quick fast forward

00:14:36,210 --> 00:14:40,130
because of a little problem

00:14:44,230 --> 00:14:48,700
so that's roughly what html5 you have to

00:14:47,200 --> 00:14:50,820
imagine what it looks like I'm sure

00:14:48,700 --> 00:14:56,130
you've all seen highfive stuff right

00:14:50,820 --> 00:14:59,080
css3 is obviously an evolution of CSS

00:14:56,130 --> 00:15:00,520
all the previous versions of CSS and it

00:14:59,080 --> 00:15:02,590
kind of makes things possible which is

00:15:00,520 --> 00:15:04,120
weren't possible before it brings the

00:15:02,590 --> 00:15:06,970
sort of things we'd be able to do in

00:15:04,120 --> 00:15:08,470
print design for years I just can't

00:15:06,970 --> 00:15:09,580
really do on the web or you can do on

00:15:08,470 --> 00:15:11,860
the web but you kind of have to make it

00:15:09,580 --> 00:15:15,070
really happy with javascript so things

00:15:11,860 --> 00:15:17,950
like an I don't know border radius for

00:15:15,070 --> 00:15:20,890
example or drop shadows or well we'll

00:15:17,950 --> 00:15:23,050
come on to a few more later I talked

00:15:20,890 --> 00:15:25,660
about some of the technologies html5 and

00:15:23,050 --> 00:15:29,260
css3 but then there's other stuff like

00:15:25,660 --> 00:15:32,410
WebSockets web storage we have them

00:15:29,260 --> 00:15:33,430
where unlike other competing browsers we

00:15:32,410 --> 00:15:35,680
don't have an implementation of

00:15:33,430 --> 00:15:37,840
WebSockets built into our browser but if

00:15:35,680 --> 00:15:39,700
you go to we have an interoperability

00:15:37,840 --> 00:15:41,500
website or you can download a plug-in

00:15:39,700 --> 00:15:43,720
which enables WebSockets for developers

00:15:41,500 --> 00:15:45,040
so you can test out our implementation

00:15:43,720 --> 00:15:48,370
of that WebSockets but we haven't put it

00:15:45,040 --> 00:15:51,220
in live in our browser the

00:15:48,370 --> 00:15:52,930
implementation of SVG which will bring

00:15:51,220 --> 00:15:56,860
sort of the idea of vector-based

00:15:52,930 --> 00:16:00,580
graphics and to your location which is

00:15:56,860 --> 00:16:02,110
now in all major browsers equus script

00:16:00,580 --> 00:16:03,520
which is the evolution of javascript

00:16:02,110 --> 00:16:06,190
it's the actual standard name for

00:16:03,520 --> 00:16:08,500
javascript and one of the cool things

00:16:06,190 --> 00:16:09,880
about the whole standardization of

00:16:08,500 --> 00:16:12,790
javascript is become a lot a lot more

00:16:09,880 --> 00:16:14,560
similar so you find a lot less bugs

00:16:12,790 --> 00:16:16,240
although I think you know with libraries

00:16:14,560 --> 00:16:18,670
like jQuery it kind of mitigating a lot

00:16:16,240 --> 00:16:20,110
those bugs anyway but the new versions

00:16:18,670 --> 00:16:22,240
are new JavaScript engines are a lot

00:16:20,110 --> 00:16:23,470
more interoperable so the stuff that you

00:16:22,240 --> 00:16:24,910
develop in one browser is much more

00:16:23,470 --> 00:16:28,990
likely to work in another because we're

00:16:24,910 --> 00:16:31,720
following this standard so here I would

00:16:28,990 --> 00:16:33,310
then go and show you the killers html5

00:16:31,720 --> 00:16:33,910
website which you can go and have a look

00:16:33,310 --> 00:16:36,700
for yourself

00:16:33,910 --> 00:16:38,080
The Killers musicom for sites html5 and

00:16:36,700 --> 00:16:39,610
it's example of all of those

00:16:38,080 --> 00:16:43,360
technologies I mentioned barring

00:16:39,610 --> 00:16:45,550
WebSockets you can scroll this scroll

00:16:43,360 --> 00:16:48,430
this page it's a has a really nice

00:16:45,550 --> 00:16:52,060
canvas animation as you move around you

00:16:48,430 --> 00:16:53,830
can go into the sky and see SVG vector

00:16:52,060 --> 00:16:56,020
based stuff happening then you can see

00:16:53,830 --> 00:16:57,910
video coming in there's audio content

00:16:56,020 --> 00:16:59,889
it's a complete mismatch of all the

00:16:57,910 --> 00:17:03,190
technologies and a great example of how

00:16:59,889 --> 00:17:04,959
it could really work real sites and it

00:17:03,190 --> 00:17:06,549
pushes the boundaries of kind of what

00:17:04,959 --> 00:17:08,799
you can do on the web and if you look at

00:17:06,549 --> 00:17:11,079
the code it's not as hacky to achieve

00:17:08,799 --> 00:17:12,490
these things like that's that's mean the

00:17:11,079 --> 00:17:14,020
main goal for me or the main thing

00:17:12,490 --> 00:17:15,400
that's so important for me about these

00:17:14,020 --> 00:17:17,169
new technologies you don't have to hack

00:17:15,400 --> 00:17:22,150
to make things that really should just

00:17:17,169 --> 00:17:23,620
work work so luckily I've got a lot of

00:17:22,150 --> 00:17:26,890
this bits on slides but it is a lot of

00:17:23,620 --> 00:17:28,750
tags so what is takes you ml5 if you

00:17:26,890 --> 00:17:32,740
want to go set up or html5 document

00:17:28,750 --> 00:17:33,580
today what does that look like well it's

00:17:32,740 --> 00:17:35,830
a lot cleaner

00:17:33,580 --> 00:17:37,960
for starters so if we look at the

00:17:35,830 --> 00:17:40,020
doctype declaration for the top bat

00:17:37,960 --> 00:17:42,309
that's a lot cleaner than the kind of

00:17:40,020 --> 00:17:43,840
crazy stuff that's on the other I don't

00:17:42,309 --> 00:17:45,419
really understand what that stuff means

00:17:43,840 --> 00:17:47,890
I always just cut and paste it from I

00:17:45,419 --> 00:17:50,910
was gonna say my favorite search engine

00:17:47,890 --> 00:17:53,320
I just cut and paste it from that and

00:17:50,910 --> 00:17:55,660
but you know html5 you just have to that

00:17:53,320 --> 00:17:58,480
doctype HTML just to switch into html5

00:17:55,660 --> 00:17:59,799
mode and then we bring around and

00:17:58,480 --> 00:18:01,330
there's some plenty of new elements this

00:17:59,799 --> 00:18:02,410
is just a handful of those elements but

00:18:01,330 --> 00:18:04,870
header h group

00:18:02,410 --> 00:18:06,429
now a side footer and I'm going to go

00:18:04,870 --> 00:18:10,690
through all of these individual

00:18:06,429 --> 00:18:13,240
individually so if we compare the HTML

00:18:10,690 --> 00:18:15,669
for document to html5 document you can

00:18:13,240 --> 00:18:18,280
see we've got all this gum which no one

00:18:15,669 --> 00:18:23,320
this depends up who actually knows what

00:18:18,280 --> 00:18:29,460
that means and he hands out if you could

00:18:23,320 --> 00:18:33,190
verbatim write it yeah see useless is it

00:18:29,460 --> 00:18:34,840
so we have that the idea that you know

00:18:33,190 --> 00:18:36,280
it's kind of simplified at a lot that's

00:18:34,840 --> 00:18:37,570
that the minimum thing you can have is

00:18:36,280 --> 00:18:39,970
just that doctype an HTML that's the

00:18:37,570 --> 00:18:42,010
most the most my new way they could

00:18:39,970 --> 00:18:44,650
describe that so it's pretty obviously

00:18:42,010 --> 00:18:46,780
the HTML we the tag as well we've just

00:18:44,650 --> 00:18:48,100
got the languages English was you know

00:18:46,780 --> 00:18:49,630
here we have another thing which I don't

00:18:48,100 --> 00:18:51,400
fully understand I know what it is I

00:18:49,630 --> 00:18:52,630
kind of get what it does but I don't

00:18:51,400 --> 00:18:54,669
really know what it what it really does

00:18:52,630 --> 00:18:58,660
tells the browser something right and

00:18:54,669 --> 00:18:59,799
and we have the the charset utf-8 well

00:18:58,660 --> 00:19:01,000
there's no you can use any truss if you

00:18:59,799 --> 00:19:04,059
want but that's obviously the one which

00:19:01,000 --> 00:19:07,510
most people choose and you'll notice

00:19:04,059 --> 00:19:09,100
that I've put in a head and body in the

00:19:07,510 --> 00:19:11,650
html5 document they're not required

00:19:09,100 --> 00:19:12,820
actually can you not see that down sorry

00:19:11,650 --> 00:19:15,070
projects this little bit in the way that

00:19:12,820 --> 00:19:17,380
can see some people ducking down but

00:19:15,070 --> 00:19:19,240
head and body tags and stuff they're not

00:19:17,380 --> 00:19:20,950
actually there's a purpose in html5 you

00:19:19,240 --> 00:19:22,270
don't need to put them in rouses are

00:19:20,950 --> 00:19:23,680
smart enough to figure out that they

00:19:22,270 --> 00:19:27,370
should be there and we'll put them in

00:19:23,680 --> 00:19:28,900
for you so browsers already do this if

00:19:27,370 --> 00:19:30,520
you just go and put a browser and hate

00:19:28,900 --> 00:19:32,920
even in HTML foreign and miss off the

00:19:30,520 --> 00:19:33,340
body won't validate of course but it'll

00:19:32,920 --> 00:19:35,440
work

00:19:33,340 --> 00:19:39,520
browsers get it so when you go to

00:19:35,440 --> 00:19:42,820
validate and there's a validator at w3

00:19:39,520 --> 00:19:46,510
double-check it's a lot kinda like

00:19:42,820 --> 00:19:49,809
there's not you can remove as many of

00:19:46,510 --> 00:19:51,010
these tags as you like apart from the

00:19:49,809 --> 00:19:53,740
important ones like the doctype and the

00:19:51,010 --> 00:19:54,670
HTML to tell it's html5 but you don't

00:19:53,740 --> 00:19:57,630
have to have the head you don't have to

00:19:54,670 --> 00:20:01,750
have the body tags if you don't want

00:19:57,630 --> 00:20:05,080
also html5 is not the html5 standard

00:20:01,750 --> 00:20:06,670
isn't XHTML so those stuff where the

00:20:05,080 --> 00:20:09,190
idea where you have to have a document

00:20:06,670 --> 00:20:11,440
which is perfectly structured as XML as

00:20:09,190 --> 00:20:15,300
we would have an XHTML that's not

00:20:11,440 --> 00:20:20,080
required anymore so for example here

00:20:15,300 --> 00:20:22,330
here you'll see we have an image tag

00:20:20,080 --> 00:20:25,000
which isn't doesn't have a clothes on it

00:20:22,330 --> 00:20:27,160
still gonna validate it's fine a browser

00:20:25,000 --> 00:20:28,660
can figure that out and because browser

00:20:27,160 --> 00:20:30,070
vendors have as I mentioned earlier

00:20:28,660 --> 00:20:32,820
figured out how they should handle

00:20:30,070 --> 00:20:34,540
errors like that in a consistent way

00:20:32,820 --> 00:20:37,270
developers don't need to worry about

00:20:34,540 --> 00:20:39,490
that specifically but I just wouldn't

00:20:37,270 --> 00:20:41,110
caveat that just because you don't have

00:20:39,490 --> 00:20:42,640
to do it just because it doesn't have to

00:20:41,110 --> 00:20:44,710
be valid like that way it's probably

00:20:42,640 --> 00:20:47,350
still good practice if you're doing

00:20:44,710 --> 00:20:48,880
XHTML to still do that you just look

00:20:47,350 --> 00:20:51,460
better it looks cleaner and if you like

00:20:48,880 --> 00:20:53,410
me with a DD like attention deficit

00:20:51,460 --> 00:20:55,030
disorder and has to have all their coke

00:20:53,410 --> 00:20:56,200
cans facing the right way then that sort

00:20:55,030 --> 00:20:57,670
of stuff really bugs me as a developer

00:20:56,200 --> 00:21:00,220
so it's quite important to make sure

00:20:57,670 --> 00:21:01,570
that if you are doing XHTML you know

00:21:00,220 --> 00:21:03,720
still do that it's still good stuff

00:21:01,570 --> 00:21:06,070
there's all there's a spec called X

00:21:03,720 --> 00:21:08,020
html5 as well which does require you to

00:21:06,070 --> 00:21:10,600
format your documents in an XML

00:21:08,020 --> 00:21:12,840
structure but by default html5 doesn't

00:21:10,600 --> 00:21:16,110
require that it's a much more loose

00:21:12,840 --> 00:21:19,330
specification in that way in that sense

00:21:16,110 --> 00:21:22,780
an exam another example of that is the

00:21:19,330 --> 00:21:24,980
script tag we often in script would type

00:21:22,780 --> 00:21:27,260
script type text/javascript

00:21:24,980 --> 00:21:32,330
it's been a long time since I've wrote

00:21:27,260 --> 00:21:34,730
script type equals text vbscript no one

00:21:32,330 --> 00:21:37,370
uses really very much else so why not

00:21:34,730 --> 00:21:39,350
make the default JavaScript so that's

00:21:37,370 --> 00:21:40,520
what they did so now you couldn't put

00:21:39,350 --> 00:21:42,890
the script tag in there without that

00:21:40,520 --> 00:21:44,510
type and you could always do that prior

00:21:42,890 --> 00:21:45,680
prior to this anyway everyone could do

00:21:44,510 --> 00:21:47,150
that it was just never a good practice

00:21:45,680 --> 00:21:51,500
because it wouldn't validate it will

00:21:47,150 --> 00:21:53,600
validate now so I talked a little bit

00:21:51,500 --> 00:21:55,040
about how that's the sort of languages

00:21:53,600 --> 00:21:57,860
limits for the markup stories a little

00:21:55,040 --> 00:21:59,210
bit less some rigid in specifications

00:21:57,860 --> 00:22:00,650
much more rigid on the actual vendors

00:21:59,210 --> 00:22:03,740
though what we have to do the

00:22:00,650 --> 00:22:05,060
specification is huge a thousand two

00:22:03,740 --> 00:22:07,520
hundred thousand four hundred massive

00:22:05,060 --> 00:22:09,800
amount of pages but actually is quite

00:22:07,520 --> 00:22:10,970
readable if you have got a spell weak to

00:22:09,800 --> 00:22:14,360
read through the whole specification

00:22:10,970 --> 00:22:16,160
it's but it's it's really explained in

00:22:14,360 --> 00:22:21,110
detail what browser vendors need to do

00:22:16,160 --> 00:22:24,230
to make sure that they meet the spec so

00:22:21,110 --> 00:22:28,550
first talk about the one of the new tags

00:22:24,230 --> 00:22:30,410
which is the header tag and from the

00:22:28,550 --> 00:22:32,240
specification it represents a group of

00:22:30,410 --> 00:22:34,040
introductory or navigational aids so

00:22:32,240 --> 00:22:37,580
basically anything in your document

00:22:34,040 --> 00:22:39,560
which is navigational word you'd use the

00:22:37,580 --> 00:22:41,240
nav tag form and you'd use it in this

00:22:39,560 --> 00:22:44,060
sort of way you use the header tag sorry

00:22:41,240 --> 00:22:45,950
Oh completely lost right you'd use the

00:22:44,060 --> 00:22:47,570
header tag and the header tag can

00:22:45,950 --> 00:22:52,490
contain lots of different things and in

00:22:47,570 --> 00:22:56,950
here we have the you have a H group H 1

00:22:52,490 --> 00:22:56,950
and H 2 are closing H group and a header

00:22:58,300 --> 00:23:02,300
when people think about headers they

00:23:00,350 --> 00:23:04,550
think well I've got one header on my web

00:23:02,300 --> 00:23:06,140
page but that's not really you don't

00:23:04,550 --> 00:23:07,820
have to have just one on your page a

00:23:06,140 --> 00:23:09,890
header could represent not just the

00:23:07,820 --> 00:23:13,820
header of page but also the header of an

00:23:09,890 --> 00:23:15,290
article or a subsection header you can

00:23:13,820 --> 00:23:18,380
have as many headers as you want don't

00:23:15,290 --> 00:23:21,830
think that it's just one per page then

00:23:18,380 --> 00:23:23,690
we have the nav L element now you can

00:23:21,830 --> 00:23:25,040
wrap a nav element inside a header but

00:23:23,690 --> 00:23:29,630
it doesn't have to be it can be outside

00:23:25,040 --> 00:23:33,020
of a header and you use it to wrap

00:23:29,630 --> 00:23:37,670
navigational links you shouldn't ever

00:23:33,020 --> 00:23:38,750
use it to wrap things like ads or links

00:23:37,670 --> 00:23:41,000
off to other sites

00:23:38,750 --> 00:23:44,180
but you should make it the navigation of

00:23:41,000 --> 00:23:45,500
your entire website the whole point of

00:23:44,180 --> 00:23:47,810
the Semantic Web is to try and make

00:23:45,500 --> 00:23:49,850
easier for computers or machines or

00:23:47,810 --> 00:23:51,920
browsers to understand the website that

00:23:49,850 --> 00:23:54,530
they're delivering so they can add value

00:23:51,920 --> 00:23:56,000
to that website so for example if you

00:23:54,530 --> 00:23:58,340
have this nav element you marked up

00:23:56,000 --> 00:24:00,080
correctly then a browsers then capable

00:23:58,340 --> 00:24:02,960
of making a proper document outline and

00:24:00,080 --> 00:24:04,400
then structuring it so maybe it's easier

00:24:02,960 --> 00:24:05,720
for screen readers or maybe it's just

00:24:04,400 --> 00:24:08,870
easier what there's an easier way to

00:24:05,720 --> 00:24:10,280
navigate it but if you do markup your

00:24:08,870 --> 00:24:11,780
code in a semantic way it means that

00:24:10,280 --> 00:24:15,400
machines are much more likely to be able

00:24:11,780 --> 00:24:15,400
to understand what your you're writing

00:24:16,660 --> 00:24:21,170
so you also shouldn't put like copyright

00:24:19,310 --> 00:24:22,670
links or anything like that in there you

00:24:21,170 --> 00:24:26,780
know they should go firmly in your

00:24:22,670 --> 00:24:29,150
footer tag and the mark-up would be

00:24:26,780 --> 00:24:31,910
saying like this so now with the UL and

00:24:29,150 --> 00:24:33,560
Li and then your menu name probably

00:24:31,910 --> 00:24:39,950
wanted an a tag in there as well so

00:24:33,560 --> 00:24:41,810
probably won't do anything on the side

00:24:39,950 --> 00:24:44,540
it's a new tag and use this to wrap

00:24:41,810 --> 00:24:47,290
content which is not the main focus of

00:24:44,540 --> 00:24:50,930
the of the content it's really good for

00:24:47,290 --> 00:24:53,660
sidebar or for pull code quotes in in

00:24:50,930 --> 00:24:55,610
flow text but it's it's stuff which you

00:24:53,660 --> 00:24:57,110
can't I'd of say I've kind of people

00:24:55,610 --> 00:24:58,250
have told me oh that it's like tag would

00:24:57,110 --> 00:24:59,930
be really useful for search engines

00:24:58,250 --> 00:25:01,490
because you could say oh this is the

00:24:59,930 --> 00:25:04,010
main content and this is the aside

00:25:01,490 --> 00:25:05,540
content that's naive because search

00:25:04,010 --> 00:25:06,920
engines don't even use meta tags anymore

00:25:05,540 --> 00:25:08,090
they're not going to be letting the

00:25:06,920 --> 00:25:09,920
author tell them what's important on

00:25:08,090 --> 00:25:12,500
that page or not but it there are I

00:25:09,920 --> 00:25:14,120
think there are other use cases where

00:25:12,500 --> 00:25:16,100
this sort of information telling your

00:25:14,120 --> 00:25:17,630
computer what's important to the author

00:25:16,100 --> 00:25:20,510
of the webpage and what's not as

00:25:17,630 --> 00:25:30,080
important is important but probably not

00:25:20,510 --> 00:25:31,340
on page rank then we have an article the

00:25:30,080 --> 00:25:34,940
next two tabs are probably the most

00:25:31,340 --> 00:25:35,540
interesting ways if the ones I have the

00:25:34,940 --> 00:25:39,170
most trouble with

00:25:35,540 --> 00:25:41,690
so article is what you would expect it

00:25:39,170 --> 00:25:43,460
represents a part of the page so if you

00:25:41,690 --> 00:25:45,710
imagine a standard web page with you

00:25:43,460 --> 00:25:47,300
know a piece of content then the main

00:25:45,710 --> 00:25:49,340
piece of content would be the article

00:25:47,300 --> 00:25:51,470
but if you imagine a page which had lots

00:25:49,340 --> 00:25:52,340
of blog posts on it then each of those

00:25:51,470 --> 00:25:56,750
would be an article

00:25:52,340 --> 00:25:58,100
so an article don't think kind of think

00:25:56,750 --> 00:26:00,470
about a piece of content which you would

00:25:58,100 --> 00:26:01,760
distribute externally so a piece of

00:26:00,470 --> 00:26:04,580
content which you could put in our RSS

00:26:01,760 --> 00:26:06,620
feed so anything which is a distinct

00:26:04,580 --> 00:26:08,090
object on your page which you may

00:26:06,620 --> 00:26:09,830
distribute even if you don't distribute

00:26:08,090 --> 00:26:11,720
it should be wrapped in an article tag

00:26:09,830 --> 00:26:14,120
but don't think of it as a magazine

00:26:11,720 --> 00:26:16,520
article because it could be anything it

00:26:14,120 --> 00:26:20,440
could be a video it could be think of it

00:26:16,520 --> 00:26:20,440
as a distinct article a distinct object

00:26:20,500 --> 00:26:25,610
so the way that we use that would be to

00:26:23,090 --> 00:26:26,750
have an article tag with a h1 which

00:26:25,610 --> 00:26:28,040
would be the header for that and then we

00:26:26,750 --> 00:26:29,660
could we could include the foot to that

00:26:28,040 --> 00:26:31,430
so when I said earlier that footers

00:26:29,660 --> 00:26:32,990
aren't just navigation and footers

00:26:31,430 --> 00:26:34,100
aren't just for the footer and

00:26:32,990 --> 00:26:36,920
navigation your page they can actually

00:26:34,100 --> 00:26:38,930
become the footer and header of an

00:26:36,920 --> 00:26:40,700
article so it's a way of marking up this

00:26:38,930 --> 00:26:47,390
whole page and I'll come to this it with

00:26:40,700 --> 00:26:49,280
an example it later so section now this

00:26:47,390 --> 00:26:52,070
one's tricky because it's pretty similar

00:26:49,280 --> 00:26:54,110
to an article you might think this would

00:26:52,070 --> 00:26:57,620
be a replacement for divs but it's not

00:26:54,110 --> 00:27:01,580
so lots of people misuse this and wrap

00:26:57,620 --> 00:27:04,640
their articles in sections but actually

00:27:01,580 --> 00:27:06,950
what it should be used for is similar to

00:27:04,640 --> 00:27:08,360
an article so any piece of content but a

00:27:06,950 --> 00:27:10,670
piece of content that isn't distributed

00:27:08,360 --> 00:27:14,660
that's the way that I I understand it

00:27:10,670 --> 00:27:17,000
anyway so it's not a generic content

00:27:14,660 --> 00:27:18,860
container element if you have if you

00:27:17,000 --> 00:27:20,840
want to do like a main content div you'd

00:27:18,860 --> 00:27:23,240
still use a main content div don't use a

00:27:20,840 --> 00:27:25,880
section to describe that area don't use

00:27:23,240 --> 00:27:27,950
a section when you're really just doing

00:27:25,880 --> 00:27:29,630
it for presentational purposes or you're

00:27:27,950 --> 00:27:34,970
trying to apply it to hooking a style or

00:27:29,630 --> 00:27:36,320
CSS tag you should use it as am yeah but

00:27:34,970 --> 00:27:38,630
four pieces of information which you

00:27:36,320 --> 00:27:40,960
wouldn't distribute but are sections of

00:27:38,630 --> 00:27:40,960
your page

00:27:44,179 --> 00:27:55,980
so you almost always use the article tag

00:27:49,470 --> 00:27:57,140
rather than the section tag I always

00:27:55,980 --> 00:27:59,460
think about when I'm looking at a page

00:27:57,140 --> 00:28:01,440
what it should be if it doesn't fit into

00:27:59,460 --> 00:28:03,870
the NEET categorization an article it

00:28:01,440 --> 00:28:05,400
doesn't fit to an aside and it doesn't

00:28:03,870 --> 00:28:09,960
fit as a nav then it's probably a

00:28:05,400 --> 00:28:12,030
section we have a footer again this is

00:28:09,960 --> 00:28:13,950
can be footers of all sorts of content

00:28:12,030 --> 00:28:15,780
the footer of your page but it could be

00:28:13,950 --> 00:28:19,350
a footer of an article for to ravenna

00:28:15,780 --> 00:28:21,890
side in here you would place your

00:28:19,350 --> 00:28:24,090
copyright data and Terms of Service

00:28:21,890 --> 00:28:25,080
those sorts of links they wouldn't do in

00:28:24,090 --> 00:28:26,700
your navigation because they're not

00:28:25,080 --> 00:28:27,929
really site navigation they're more

00:28:26,700 --> 00:28:31,289
information so they would just go

00:28:27,929 --> 00:28:33,179
directly in your footer but your footer

00:28:31,289 --> 00:28:34,740
could contain a nav element as well if

00:28:33,179 --> 00:28:37,409
you wanted what the nav element in top

00:28:34,740 --> 00:28:39,960
and bottom you want to put stuff like

00:28:37,409 --> 00:28:41,220
who wrote the file so in a blog post at

00:28:39,960 --> 00:28:42,720
that example where we have lots of blog

00:28:41,220 --> 00:28:45,000
posts a footer might have the

00:28:42,720 --> 00:28:46,590
information about how many comments were

00:28:45,000 --> 00:28:50,850
on that on that blog who wrote that blog

00:28:46,590 --> 00:28:56,390
who wrote that information I'm ready to

00:28:50,850 --> 00:29:01,679
dominate so if we take a standard log

00:28:56,390 --> 00:29:08,130
here this is kind of how I would take it

00:29:01,679 --> 00:29:11,970
and make it html5 or we had a header nav

00:29:08,130 --> 00:29:13,350
section ID a div ID called content and a

00:29:11,970 --> 00:29:15,299
footer and that would look something

00:29:13,350 --> 00:29:17,400
like this missing a little bit of the

00:29:15,299 --> 00:29:19,260
color there in this projector but you

00:29:17,400 --> 00:29:22,559
see we have a header tag which wraps our

00:29:19,260 --> 00:29:24,510
header chosen here to have the nav

00:29:22,559 --> 00:29:26,039
outside of the header but it could as

00:29:24,510 --> 00:29:28,470
easily have been in the header and if

00:29:26,039 --> 00:29:30,030
they were it's really up to you whether

00:29:28,470 --> 00:29:31,110
whether you want to put navigations in

00:29:30,030 --> 00:29:33,240
headers it doesn't matter

00:29:31,110 --> 00:29:35,820
but I fell for this particular one it

00:29:33,240 --> 00:29:37,169
looks better sitting outside and then

00:29:35,820 --> 00:29:38,309
this is really the only example I can

00:29:37,169 --> 00:29:41,190
think of what where I'd use a section

00:29:38,309 --> 00:29:43,289
which is it's a piece of content which

00:29:41,190 --> 00:29:44,789
is relevant it's a section it's a bit

00:29:43,289 --> 00:29:46,470
like an article but I've never

00:29:44,789 --> 00:29:47,789
distribute this on an RSS feed I've

00:29:46,470 --> 00:29:49,919
never passed this over to someone else

00:29:47,789 --> 00:29:54,409
it's not it's not an article so it's a

00:29:49,919 --> 00:29:56,390
section then I have an article down here

00:29:54,409 --> 00:29:59,270
with a head up

00:29:56,390 --> 00:30:05,809
and then an aside which contains a

00:29:59,270 --> 00:30:07,460
number of sections so now this is going

00:30:05,809 --> 00:30:09,080
to be tricky because I was going to

00:30:07,460 --> 00:30:11,360
hopefully break into code without web

00:30:09,080 --> 00:30:15,370
connection I have a little bit of an

00:30:11,360 --> 00:30:18,500
issue with this but we'll see we do I

00:30:15,370 --> 00:30:20,000
will show you this example it's won many

00:30:18,500 --> 00:30:22,790
awards called never mind the bullets

00:30:20,000 --> 00:30:24,980
calm if you see any of the demos that I

00:30:22,790 --> 00:30:26,480
show today this is the best one to go

00:30:24,980 --> 00:30:29,120
and have a look at is a comic strip

00:30:26,480 --> 00:30:31,940
which uses a canvas tag to use a

00:30:29,120 --> 00:30:36,590
parallax scrolling effect it looks

00:30:31,940 --> 00:30:38,299
really beautiful and with all this stuff

00:30:36,590 --> 00:30:39,740
I've really encourage you to go and just

00:30:38,299 --> 00:30:41,630
look view the source I mean that's the

00:30:39,740 --> 00:30:58,309
best thing about html5 none of this

00:30:41,630 --> 00:31:00,380
stuff is I don't want them to log off I

00:30:58,309 --> 00:31:06,400
want them to how can they install me on

00:31:00,380 --> 00:31:06,400
Twitter I'm getting good

00:31:24,940 --> 00:31:27,940
No

00:31:29,580 --> 00:31:35,460
hmm okay I'll tell you what I'll do I'll

00:31:32,129 --> 00:31:37,970
see if I've got some files locally which

00:31:35,460 --> 00:31:37,970
I can show

00:31:52,470 --> 00:31:55,470
okay

00:32:11,720 --> 00:32:20,929
so we look at the video tag does anyone

00:32:15,230 --> 00:32:21,879
use html5 video today in their sites not

00:32:20,929 --> 00:32:30,019
me

00:32:21,879 --> 00:32:34,129
many people use flash Silverlight will

00:32:30,019 --> 00:32:35,840
in a back represent it so this is how

00:32:34,129 --> 00:32:38,059
we'd use a video tag and this is a basic

00:32:35,840 --> 00:32:40,129
implementation this is the how you would

00:32:38,059 --> 00:32:42,769
drop an image like a video just like an

00:32:40,129 --> 00:32:44,659
image into your file into your page so

00:32:42,769 --> 00:32:46,370
we all we really need to do is have a

00:32:44,659 --> 00:32:52,159
video tag with a source which points to

00:32:46,370 --> 00:32:53,960
an mp4 video with an idea video put on

00:32:52,159 --> 00:32:56,529
our page it's going to look at that

00:32:53,960 --> 00:33:00,980
source it's gonna play that video done

00:32:56,529 --> 00:33:02,330
but not quite there's also a number of

00:33:00,980 --> 00:33:05,659
different things you can add to the

00:33:02,330 --> 00:33:08,090
video tag so we have this poster which

00:33:05,659 --> 00:33:09,980
is when the video is buffering we're

00:33:08,090 --> 00:33:12,200
going to show up a little image to sort

00:33:09,980 --> 00:33:13,340
of you know a screen grab of that video

00:33:12,200 --> 00:33:14,600
or something like that so that we don't

00:33:13,340 --> 00:33:16,879
just have them looking a blank black

00:33:14,600 --> 00:33:18,710
screen wash with buffering we're gonna

00:33:16,879 --> 00:33:20,629
have a control we've put their autoplay

00:33:18,710 --> 00:33:22,039
so when we come to the site that videos

00:33:20,629 --> 00:33:23,750
just gonna start water playing so you

00:33:22,039 --> 00:33:26,360
can annoy your visitors by Auto playing

00:33:23,750 --> 00:33:29,210
videos if you really want to you can add

00:33:26,360 --> 00:33:32,240
control so you can pause fast-forward

00:33:29,210 --> 00:33:33,830
rewind you can implement your own

00:33:32,240 --> 00:33:37,190
controls on video tags and I'll show you

00:33:33,830 --> 00:33:41,179
how to do that in a moment we also have

00:33:37,190 --> 00:33:43,009
this option to preload the video so does

00:33:41,179 --> 00:33:44,840
what it says it pre loads before playing

00:33:43,009 --> 00:33:46,429
so as soon as the pet webpage starts

00:33:44,840 --> 00:33:47,629
it's gonna start loading and then when

00:33:46,429 --> 00:33:49,490
the user says to press display it's

00:33:47,629 --> 00:33:50,750
probably going to be buffered enough you

00:33:49,490 --> 00:33:52,909
want to use that with caution especially

00:33:50,750 --> 00:33:54,440
you've got lots of videos on a page you

00:33:52,909 --> 00:33:55,759
wouldn't want to preload them all

00:33:54,440 --> 00:33:57,549
because they'll all just type start

00:33:55,759 --> 00:34:00,980
kicking off when you're loading the page

00:33:57,549 --> 00:34:03,529
and we have playback rate one means like

00:34:00,980 --> 00:34:05,720
regular speed but you can increment that

00:34:03,529 --> 00:34:07,159
increase it to make it go faster

00:34:05,720 --> 00:34:10,159
or make it go slower by decreasing that

00:34:07,159 --> 00:34:11,899
value and you have like width and height

00:34:10,159 --> 00:34:14,089
like you would any other objects and

00:34:11,899 --> 00:34:16,490
because it's native is a video tag you

00:34:14,089 --> 00:34:20,149
can apply any css3 tag start to it as

00:34:16,490 --> 00:34:23,379
well so he transforms shadows and

00:34:20,149 --> 00:34:23,379
gradients whatever you want it to do

00:34:24,480 --> 00:34:29,500
now one of the problems with the video

00:34:27,190 --> 00:34:31,899
tag is that there's a bit of

00:34:29,500 --> 00:34:37,089
inconsistency where the browser support

00:34:31,899 --> 00:34:40,240
for Kodak's so mp4 which is it's based

00:34:37,089 --> 00:34:42,520
format h.264 which is this sort of it's

00:34:40,240 --> 00:34:47,379
what all videos encoded in flash today

00:34:42,520 --> 00:34:50,379
it is encoded in you can hook that in

00:34:47,379 --> 00:34:55,089
and that's going to work in Safari in

00:34:50,379 --> 00:34:57,190
ie9 it used to work in Google you'll

00:34:55,089 --> 00:35:01,180
need a plug-in to make it work in Google

00:34:57,190 --> 00:35:03,160
now and I think that's it so it worked

00:35:01,180 --> 00:35:05,770
in ours and Safari and obviously that

00:35:03,160 --> 00:35:07,660
includes the iPad and the iPhone as well

00:35:05,770 --> 00:35:10,660
so h.264 if you want to target the

00:35:07,660 --> 00:35:14,109
iPhone iPad Safari browser and ie9

00:35:10,660 --> 00:35:16,210
you're going to need it in h.264 there's

00:35:14,109 --> 00:35:17,200
a video codec called OGG thora I think I

00:35:16,210 --> 00:35:18,820
pronounced it right on my Oh pronounced

00:35:17,200 --> 00:35:21,390
that wrong I only ever see our forum

00:35:18,820 --> 00:35:23,560
post I never actually hear it said aloud

00:35:21,390 --> 00:35:25,900
that's the output that's an open source

00:35:23,560 --> 00:35:27,760
video format it's not quite as good as

00:35:25,900 --> 00:35:30,310
the alternative open source format which

00:35:27,760 --> 00:35:33,550
is WebM which is has been released by

00:35:30,310 --> 00:35:35,859
Google now WebM is the WebM and and

00:35:33,550 --> 00:35:37,690
Thora the own Google are only supporting

00:35:35,859 --> 00:35:41,500
those two they're not supporting h.264

00:35:37,690 --> 00:35:44,980
so you kind of have to choose which ones

00:35:41,500 --> 00:35:47,619
you want to want to want to support so

00:35:44,980 --> 00:35:49,180
for example if we just supported WebM it

00:35:47,619 --> 00:35:51,400
would only work in Internet Explorer 9

00:35:49,180 --> 00:35:53,319
because we support WebM it work in

00:35:51,400 --> 00:35:55,690
Google Chrome but it wouldn't work in

00:35:53,319 --> 00:35:58,900
Safari it won't work on the iPhone it

00:35:55,690 --> 00:36:01,180
wouldn't work on the iPad the benefit of

00:35:58,900 --> 00:36:02,950
these tags is that we can apply more

00:36:01,180 --> 00:36:04,450
than one source to a video tag so for

00:36:02,950 --> 00:36:07,420
example there I've got an mp4 file

00:36:04,450 --> 00:36:09,250
attached to that video and if some if a

00:36:07,420 --> 00:36:11,980
if a browser which doesn't support mp4

00:36:09,250 --> 00:36:13,359
comes to this page it's going to say I

00:36:11,980 --> 00:36:14,859
don't support them before I'll fall over

00:36:13,359 --> 00:36:18,609
to the next one which is in this case is

00:36:14,859 --> 00:36:21,160
OGG if we had another source in there

00:36:18,609 --> 00:36:22,930
for WebM it would fall over to that one

00:36:21,160 --> 00:36:25,390
so you can add as many sources in there

00:36:22,930 --> 00:36:27,190
as you like which is fine it's kind of a

00:36:25,390 --> 00:36:29,560
way around this problem that none of us

00:36:27,190 --> 00:36:32,050
have of one single code app to work from

00:36:29,560 --> 00:36:33,670
but it means that you have to on your

00:36:32,050 --> 00:36:35,890
server encode your videos more than once

00:36:33,670 --> 00:36:36,460
you're gonna have to do in h.264 you

00:36:35,890 --> 00:36:38,589
gonna have to do

00:36:36,460 --> 00:36:40,930
webm you might want to do it in Fuhrer

00:36:38,589 --> 00:36:42,940
you might want to do it in different

00:36:40,930 --> 00:36:46,000
baselines for all of those profiles as

00:36:42,940 --> 00:36:48,040
well it's kind of really complicated and

00:36:46,000 --> 00:36:50,050
kind of annoying that we can't as a

00:36:48,040 --> 00:36:53,410
browser community to get together and go

00:36:50,050 --> 00:36:57,250
around 1:1 format but there's lots of

00:36:53,410 --> 00:37:00,310
legal and political openness reasons for

00:36:57,250 --> 00:37:04,690
not doing that and we're weave in ie9

00:37:00,310 --> 00:37:07,060
we're supporting WebM and web banner and

00:37:04,690 --> 00:37:10,450
h.264 but Safari do you have a problem

00:37:07,060 --> 00:37:12,640
that h.264 is encoded on an iPad on the

00:37:10,450 --> 00:37:15,130
device so we've got as a hardware

00:37:12,640 --> 00:37:16,300
decoder on the iPad itself so if they

00:37:15,130 --> 00:37:18,130
want to use anything else they'd have to

00:37:16,300 --> 00:37:20,619
use software decoding which means that

00:37:18,130 --> 00:37:24,760
if you use html5 video on an iPad with

00:37:20,619 --> 00:37:26,380
software encoding WebM oh it would be

00:37:24,760 --> 00:37:29,140
really it would drain the battery

00:37:26,380 --> 00:37:31,270
terribly so they either call all the

00:37:29,140 --> 00:37:32,680
iPads or they just support it's tricky

00:37:31,270 --> 00:37:36,270
for them I can see why that they they

00:37:32,680 --> 00:37:36,270
have a problem with supporting WebM and

00:37:36,450 --> 00:37:39,550
so you can get around it but you're

00:37:38,440 --> 00:37:44,890
going to have to encode more than once

00:37:39,550 --> 00:37:47,410
which is a problem the video the video

00:37:44,890 --> 00:37:48,640
has the video tag has a great API which

00:37:47,410 --> 00:37:50,349
is very similar I don't think I've

00:37:48,640 --> 00:37:51,940
noticed any differences really that

00:37:50,349 --> 00:37:54,040
probably subtle anisha's differences

00:37:51,940 --> 00:37:56,589
between different browsers but the API

00:37:54,040 --> 00:37:57,760
is really really similar and actually

00:37:56,589 --> 00:38:00,910
you can call it and say stuff like

00:37:57,760 --> 00:38:02,230
player can it play type and you can ask

00:38:00,910 --> 00:38:04,240
the different codecs that the browser

00:38:02,230 --> 00:38:05,530
can tuptim can check so you can check

00:38:04,240 --> 00:38:07,510
all this stuff in JavaScript you don't

00:38:05,530 --> 00:38:08,800
have to rely on that manual html5

00:38:07,510 --> 00:38:10,780
fallback you can do some really fancy

00:38:08,800 --> 00:38:12,910
things and put I just want to point out

00:38:10,780 --> 00:38:14,980
as well after that source you could also

00:38:12,910 --> 00:38:16,300
just add a flash video in there as well

00:38:14,980 --> 00:38:18,520
you could just literally put an object

00:38:16,300 --> 00:38:20,320
embed or you could put some freeform

00:38:18,520 --> 00:38:23,530
text and if it can't play any of these

00:38:20,320 --> 00:38:25,869
or it can't play html5 video at all it

00:38:23,530 --> 00:38:27,820
will play whatever you've put between

00:38:25,869 --> 00:38:29,589
the closing source tag here and the

00:38:27,820 --> 00:38:31,180
ending video tag so you could put like

00:38:29,589 --> 00:38:36,540
text in there you could put a flash

00:38:31,180 --> 00:38:38,470
video you can put Silverlight video yeah

00:38:36,540 --> 00:38:40,810
but you can also check it through the

00:38:38,470 --> 00:38:42,130
JavaScript API as well so you can call

00:38:40,810 --> 00:38:46,930
the player and you can say can you play

00:38:42,130 --> 00:38:49,570
the type mp4 is h.264 baseline supported

00:38:46,930 --> 00:38:50,420
and you can be really you know specific

00:38:49,570 --> 00:38:52,670
about the baseline

00:38:50,420 --> 00:38:54,290
the different types it will play and

00:38:52,670 --> 00:39:00,200
this is kind of the way that most people

00:38:54,290 --> 00:39:02,329
are today using video we in html5 one

00:39:00,200 --> 00:39:04,730
great tool for this if you don't want to

00:39:02,329 --> 00:39:07,760
have to total that stuff yourself is to

00:39:04,730 --> 00:39:11,510
use modernizr modernizes a JavaScript

00:39:07,760 --> 00:39:13,160
library which basically gives you away

00:39:11,510 --> 00:39:15,079
or an api which just makes it very easy

00:39:13,160 --> 00:39:18,589
to detect what a browser can and can't

00:39:15,079 --> 00:39:21,980
do in html5 css3 and with video so for

00:39:18,589 --> 00:39:25,160
example you can say does this particular

00:39:21,980 --> 00:39:27,140
browser support canvas in modernizing

00:39:25,160 --> 00:39:33,319
you just say moderniser dot canvas and

00:39:27,140 --> 00:39:35,079
it returns yes or no or 404 whatever you

00:39:33,319 --> 00:39:38,230
can detective it supports audio or video

00:39:35,079 --> 00:39:40,849
it doesn't tell you the level or

00:39:38,230 --> 00:39:42,890
implementation or how great their

00:39:40,849 --> 00:39:44,150
implementation is of that particular

00:39:42,890 --> 00:39:46,430
standard but it tells you that they

00:39:44,150 --> 00:39:49,280
generally support it so in terms of

00:39:46,430 --> 00:39:52,069
things certain most of the common html5

00:39:49,280 --> 00:39:54,619
stuff and this is great but some of the

00:39:52,069 --> 00:39:56,720
more newer html5 stuff browsers

00:39:54,619 --> 00:39:58,970
sometimes support it but don't support

00:39:56,720 --> 00:40:02,559
it great or not directly to the standard

00:39:58,970 --> 00:40:02,559
so you have to watch out for newer stuff

00:40:03,160 --> 00:40:08,240
as well as detecting just HTML 5 video

00:40:06,040 --> 00:40:10,339
moderniser also allows you to sue to

00:40:08,240 --> 00:40:12,799
check the profile as well so you can say

00:40:10,339 --> 00:40:17,329
can it play h.264 can it play WebM can

00:40:12,799 --> 00:40:19,549
it play this that or the other so as

00:40:17,329 --> 00:40:21,020
well as doing checks on the object which

00:40:19,549 --> 00:40:23,420
represents the video player you can also

00:40:21,020 --> 00:40:26,599
do things like you know I've created my

00:40:23,420 --> 00:40:29,750
own little div section and I've put four

00:40:26,599 --> 00:40:33,250
little links in there with four on click

00:40:29,750 --> 00:40:35,119
events slower play pause and faster and

00:40:33,250 --> 00:40:37,609
they're going to just fire some little

00:40:35,119 --> 00:40:39,200
bits of JavaScript so to make the video

00:40:37,609 --> 00:40:41,540
go slower we just go and get the video

00:40:39,200 --> 00:40:44,440
object we've changed take the current

00:40:41,540 --> 00:40:47,270
playback rate and then we just basically

00:40:44,440 --> 00:40:48,829
if it's less than one we take the we

00:40:47,270 --> 00:40:52,970
divide it by two so it slows it down

00:40:48,829 --> 00:40:57,140
else it blah blah blah you can read

00:40:52,970 --> 00:40:58,819
JavaScript right but that's how you

00:40:57,140 --> 00:41:00,829
would make a video go slow in JavaScript

00:40:58,819 --> 00:41:02,420
if you want to make it go faster you

00:41:00,829 --> 00:41:04,210
just increment playback right thank you

00:41:02,420 --> 00:41:06,369
Kay increase an increase in increase

00:41:04,210 --> 00:41:08,020
someone asked me how far can you go can

00:41:06,369 --> 00:41:10,060
you just keep doing that so I tried and

00:41:08,020 --> 00:41:13,240
there's actually a difference in lots of

00:41:10,060 --> 00:41:14,800
different browsers so if you go fast I

00:41:13,240 --> 00:41:16,150
think we must have like a hard limit and

00:41:14,800 --> 00:41:19,480
I've got to find out with our engineers

00:41:16,150 --> 00:41:21,490
but it looks like about about 10 we

00:41:19,480 --> 00:41:23,890
stopped getting any faster but other

00:41:21,490 --> 00:41:25,839
other vendors do just keep going faster

00:41:23,890 --> 00:41:26,230
and faster and faster and faster and to

00:41:25,839 --> 00:41:27,580
the point

00:41:26,230 --> 00:41:31,000
works ridiculous where you press play

00:41:27,580 --> 00:41:32,619
these at the end but we do just go to a

00:41:31,000 --> 00:41:34,930
specific level and play so that's an

00:41:32,619 --> 00:41:36,910
example of where we're all doing the

00:41:34,930 --> 00:41:38,349
basic things the same but then there's

00:41:36,910 --> 00:41:40,119
these niche things which will hurt us in

00:41:38,349 --> 00:41:41,859
a few years if we don't test for them

00:41:40,119 --> 00:41:44,650
and we don't report them back to the

00:41:41,859 --> 00:41:46,359
browser vendors if you want to pause the

00:41:44,650 --> 00:41:48,280
video we just take the video element and

00:41:46,359 --> 00:41:49,690
of course the dot pause method and if

00:41:48,280 --> 00:41:55,930
you want to play we just call the dot

00:41:49,690 --> 00:42:00,670
play method probably requires internet

00:41:55,930 --> 00:42:12,670
so I'm not gonna show it hook for good

00:42:00,670 --> 00:42:15,339
reasons how would you recommend people

00:42:12,670 --> 00:42:17,830
cope with sort of detecting what bitrate

00:42:15,339 --> 00:42:19,839
video to serve so you're you're looking

00:42:17,830 --> 00:42:22,300
at using a MiFi device so your computer

00:42:19,839 --> 00:42:24,609
thinks it's connected via Wi-Fi but then

00:42:22,300 --> 00:42:28,210
it's falling onto 3G or gee-ya RS or

00:42:24,609 --> 00:42:30,040
whatever well do you know in actual

00:42:28,210 --> 00:42:32,200
production websites what I'm doing at

00:42:30,040 --> 00:42:36,730
the moment is using there's a great

00:42:32,200 --> 00:42:37,930
service I forget the name of it there's

00:42:36,730 --> 00:42:40,210
one which comes to mind which is not the

00:42:37,930 --> 00:42:42,580
one I use called vid ly which can serve

00:42:40,210 --> 00:42:44,080
up a videos in different rates and it

00:42:42,580 --> 00:42:46,390
gives you it gives you scripts to be

00:42:44,080 --> 00:42:47,890
able to to determine the kind of

00:42:46,390 --> 00:42:50,589
connection speeds there isn't I don't

00:42:47,890 --> 00:42:51,849
think in our browser at the moment

00:42:50,589 --> 00:42:53,650
there's a way of determining the current

00:42:51,849 --> 00:42:55,540
network speed and kind of determine if

00:42:53,650 --> 00:42:58,930
it's on or off but you can't determine

00:42:55,540 --> 00:43:00,970
but there is like for example if you're

00:42:58,930 --> 00:43:02,230
taking a mobile device you know that the

00:43:00,970 --> 00:43:04,839
bit rates or the connectivity is going

00:43:02,230 --> 00:43:06,460
to be choppy so you would be able to

00:43:04,839 --> 00:43:10,270
serve up a different type of baseline

00:43:06,460 --> 00:43:11,650
based upon that based upon that but yeah

00:43:10,270 --> 00:43:12,970
I don't think I don't know about other

00:43:11,650 --> 00:43:14,500
browsers but I know I don't think I you

00:43:12,970 --> 00:43:15,940
know it's got a way of saying you know

00:43:14,500 --> 00:43:16,369
how fast is the current connection you

00:43:15,940 --> 00:43:17,779
can

00:43:16,369 --> 00:43:21,559
tell me whether it's on or off but not

00:43:17,779 --> 00:43:23,450
how fast is which is a real pain yeah I

00:43:21,559 --> 00:43:24,950
think there are experiments does anyone

00:43:23,450 --> 00:43:30,859
know there are browsers which do that

00:43:24,950 --> 00:43:32,930
I'm sure yeah but you've got a determine

00:43:30,859 --> 00:43:34,549
you've got to figure out that there's a

00:43:32,930 --> 00:43:35,809
problem so you can determine that

00:43:34,549 --> 00:43:38,119
there's no network connectivity you

00:43:35,809 --> 00:43:39,799
intermón there is connectivity but how

00:43:38,119 --> 00:43:41,809
do you unless you did something like

00:43:39,799 --> 00:43:43,789
downloaded an image and figured out how

00:43:41,809 --> 00:43:46,460
long it took it's not I don't think it's

00:43:43,789 --> 00:43:47,809
a way I can't think of a way of there's

00:43:46,460 --> 00:43:51,140
no API in our browser I don't believe

00:43:47,809 --> 00:43:52,490
unless anyone can correct me no looks

00:43:51,140 --> 00:43:55,279
like it's not an API which can determine

00:43:52,490 --> 00:43:58,640
bitrate speed but we I do use those

00:43:55,279 --> 00:44:00,529
services to determine the the rate which

00:43:58,640 --> 00:44:02,930
you would expect on certain devices so

00:44:00,529 --> 00:44:06,950
if a BlackBerry device wanted to serve

00:44:02,930 --> 00:44:08,240
video or a iPad or you can determine the

00:44:06,950 --> 00:44:09,890
kind of connection rates that they would

00:44:08,240 --> 00:44:11,890
they would be hitting so that's that's

00:44:09,890 --> 00:44:14,029
kind of what I do

00:44:11,890 --> 00:44:15,289
bid leaves one of the services which

00:44:14,029 --> 00:44:16,970
which I use which you can upload one

00:44:15,289 --> 00:44:19,099
video and it creates lots of different

00:44:16,970 --> 00:44:20,839
rates lots of different types of video

00:44:19,099 --> 00:44:24,950
and then you can serve that and there's

00:44:20,839 --> 00:44:29,119
a really yeah yeah

00:44:24,950 --> 00:44:31,029
what's it again write code I'm really

00:44:29,119 --> 00:44:33,019
sorry

00:44:31,029 --> 00:44:34,190
yeah there's a lot of these little

00:44:33,019 --> 00:44:40,779
services there's a lot of services

00:44:34,190 --> 00:44:40,779
coming out yeah but yeah okay big right

00:44:41,200 --> 00:44:50,259
sorry I don't use I don't use it

00:44:53,110 --> 00:44:57,470
not that I know of

00:44:55,180 --> 00:44:59,480
I'd love to be loved to be proven wrong

00:44:57,470 --> 00:45:01,670
that that's the case of yeah I don't

00:44:59,480 --> 00:45:03,230
really know about it right how does

00:45:01,670 --> 00:45:05,720
having bit right the current downloading

00:45:03,230 --> 00:45:07,940
you can you can actually figure out how

00:45:05,720 --> 00:45:09,140
much has been downloaded over video you

00:45:07,940 --> 00:45:11,780
could probably do some mass on it that

00:45:09,140 --> 00:45:13,810
way if anyone knows of a way come speak

00:45:11,780 --> 00:45:16,130
to me after I'd love to know about it

00:45:13,810 --> 00:45:19,910
I'll maybe take a look at it it's my job

00:45:16,130 --> 00:45:22,670
see is there any more questions about

00:45:19,910 --> 00:45:32,030
video by the way before I move on got

00:45:22,670 --> 00:45:34,970
one here you mentioned the video formats

00:45:32,030 --> 00:45:37,130
that all the browsers support which

00:45:34,970 --> 00:45:40,970
which for masters Firefox

00:45:37,130 --> 00:45:42,380
I think Firefox supports web M there

00:45:40,970 --> 00:45:44,990
definitely am I

00:45:42,380 --> 00:45:46,030
they definite supports all three as far

00:45:44,990 --> 00:45:51,440
as I'm aware

00:45:46,030 --> 00:45:53,720
so Firefox don't support h.264 if yeah

00:45:51,440 --> 00:45:56,390
I'm pretty sure Firefox or web I'll be

00:45:53,720 --> 00:45:57,860
really surprised if they didn't but

00:45:56,390 --> 00:46:00,500
they're they kind of bad proponents of

00:45:57,860 --> 00:46:02,210
OGG Theora that that open source a video

00:46:00,500 --> 00:46:04,190
format which is a great it's a great

00:46:02,210 --> 00:46:05,510
format and the only sad thing about the

00:46:04,190 --> 00:46:08,120
format it's just not quite as good

00:46:05,510 --> 00:46:10,580
quality as h.264 and when it comes to

00:46:08,120 --> 00:46:12,440
quality of video I think that's really

00:46:10,580 --> 00:46:14,600
important for moving forward where them

00:46:12,440 --> 00:46:17,050
is is a comparable video format and

00:46:14,600 --> 00:46:19,760
quality and playback and it's just this

00:46:17,050 --> 00:46:21,140
you know it's a difficult situation you

00:46:19,760 --> 00:46:22,820
can seach both sides of that story and

00:46:21,140 --> 00:46:24,350
why one company would want to do one

00:46:22,820 --> 00:46:26,210
thing and one company want to the other

00:46:24,350 --> 00:46:28,310
there's legal reasons there's political

00:46:26,210 --> 00:46:30,740
reasons and it doesn't make it any

00:46:28,310 --> 00:46:31,790
better for developers and I would just

00:46:30,740 --> 00:46:32,960
wish that all those problems would go

00:46:31,790 --> 00:46:35,000
away and we could just pick one

00:46:32,960 --> 00:46:36,440
uber codec which we'd all use and we

00:46:35,000 --> 00:46:37,550
will be happy with but it looks like

00:46:36,440 --> 00:46:39,530
we're going to have to have that pain

00:46:37,550 --> 00:46:43,850
for a long time to come unless someone

00:46:39,530 --> 00:46:46,160
make some big decisions market I think

00:46:43,850 --> 00:46:49,910
we have related question I was just

00:46:46,160 --> 00:46:52,270
gonna add to question like I know four

00:46:49,910 --> 00:46:57,970
facts have done a lot of big fights on

00:46:52,270 --> 00:47:04,900
the Firefox 33.5 clusters or fordoes

00:46:57,970 --> 00:47:09,100
WebM that's here dog yeah no h.264 no

00:47:04,900 --> 00:47:11,260
h.264 unless there is a yeah see so

00:47:09,100 --> 00:47:12,970
we've tell you they're kind of there is

00:47:11,260 --> 00:47:15,880
a obviously a big thing there's there's

00:47:12,970 --> 00:47:18,100
a lot of people don't like h.264 one

00:47:15,880 --> 00:47:22,120
opera evangelist called it h 666 to me

00:47:18,100 --> 00:47:23,650
so it's yeah there's a lot of discontent

00:47:22,120 --> 00:47:25,660
in that thing I don't really kind of get

00:47:23,650 --> 00:47:29,650
it as a developer I just wish it work

00:47:25,660 --> 00:47:31,090
but it doesn't so we have to use these

00:47:29,650 --> 00:47:32,290
video services which can encode more

00:47:31,090 --> 00:47:33,280
than once it's going to cost this money

00:47:32,290 --> 00:47:36,490
we're gonna have to store more than one

00:47:33,280 --> 00:47:38,530
video I'll move on quickly to the canvas

00:47:36,490 --> 00:47:39,430
and this was something which no one

00:47:38,530 --> 00:47:42,280
thought that we were going to implement

00:47:39,430 --> 00:47:44,830
in ie9 and we did and I'm glad that we

00:47:42,280 --> 00:47:46,750
did our implementation and up until the

00:47:44,830 --> 00:47:51,760
RC wasn't quite as good as it could have

00:47:46,750 --> 00:47:52,720
been we didn't there's lots of things

00:47:51,760 --> 00:47:54,340
that people are trying to do when

00:47:52,720 --> 00:47:55,360
they're trying to clear clear screens

00:47:54,340 --> 00:47:58,170
and stuff which I'm not going to go into

00:47:55,360 --> 00:48:00,850
today but some of the more complicated

00:47:58,170 --> 00:48:03,970
scenarios the stuff which deviant-art

00:48:00,850 --> 00:48:06,850
we're trying to do didn't work in our

00:48:03,970 --> 00:48:08,260
previous on Rai 9 meters the IE 9 team

00:48:06,850 --> 00:48:09,700
are really really good at hearing

00:48:08,260 --> 00:48:11,560
feedback and really putting it into

00:48:09,700 --> 00:48:13,890
their browser quickly the team is much

00:48:11,560 --> 00:48:16,360
much at more agile and much quicker

00:48:13,890 --> 00:48:18,430
implementing than they used to be and

00:48:16,360 --> 00:48:19,930
that's why we have canvas that's why we

00:48:18,430 --> 00:48:22,360
now have a very good implementation of

00:48:19,930 --> 00:48:24,550
canvas if you look at our scores to the

00:48:22,360 --> 00:48:25,360
test that you're currently in w3c we're

00:48:24,550 --> 00:48:27,730
doing pretty well

00:48:25,360 --> 00:48:29,470
they're still they're still there's

00:48:27,730 --> 00:48:31,270
still some way to go probably but it's a

00:48:29,470 --> 00:48:34,090
it's a good position it's a decent

00:48:31,270 --> 00:48:35,680
implementation of canvas as well and you

00:48:34,090 --> 00:48:39,370
can do the basic stuff in canvas you can

00:48:35,680 --> 00:48:40,630
always achieve you can achieve to 2d I

00:48:39,370 --> 00:48:44,320
would love to show you a thing by the

00:48:40,630 --> 00:48:47,590
Museum of China which is a unlike 3d

00:48:44,320 --> 00:48:50,020
interface purely coded in JavaScript 200

00:48:47,590 --> 00:48:51,580
lines of code which is just incredible

00:48:50,020 --> 00:48:53,950
if you look at the equivalent to do it

00:48:51,580 --> 00:48:57,070
in WebGL it's you know a new language

00:48:53,950 --> 00:49:02,170
and a hell of a lot more code but um so

00:48:57,070 --> 00:49:04,960
for general sort of 3d stuff or 2d 2.5 D

00:49:02,170 --> 00:49:05,800
sorry stuff canvas is really good you

00:49:04,960 --> 00:49:09,310
can achieve a cred

00:49:05,800 --> 00:49:10,840
or stuff you can build games and that's

00:49:09,310 --> 00:49:12,490
one of its most common implementations I

00:49:10,840 --> 00:49:14,890
think the reason why canvas has been

00:49:12,490 --> 00:49:17,020
really successful in sort of gaming is

00:49:14,890 --> 00:49:19,810
because of the way the program API works

00:49:17,020 --> 00:49:24,130
so as web developers we kind of have

00:49:19,810 --> 00:49:25,540
this idea that that you have objects on

00:49:24,130 --> 00:49:26,920
a screen and they're always on the

00:49:25,540 --> 00:49:28,510
screen or they're always in the Dom and

00:49:26,920 --> 00:49:32,410
if you want to animate them across the

00:49:28,510 --> 00:49:34,630
screen you just increment its left value

00:49:32,410 --> 00:49:38,350
yeah so it moves across the screen over

00:49:34,630 --> 00:49:40,270
time with canvas you actually every time

00:49:38,350 --> 00:49:42,430
you draw the screen you clear the screen

00:49:40,270 --> 00:49:44,700
you draw the screen you clear the screen

00:49:42,430 --> 00:49:47,710
you draw the screen you don't have any

00:49:44,700 --> 00:49:49,630
by default any structure of objects or I

00:49:47,710 --> 00:49:51,430
think it's just a big bitmap canvas on

00:49:49,630 --> 00:49:54,160
which you draw dots there's lots of

00:49:51,430 --> 00:49:56,410
libraries out there which help abstract

00:49:54,160 --> 00:49:57,970
that there's one called easeljs which is

00:49:56,410 --> 00:50:00,460
an excellent little library which makes

00:49:57,970 --> 00:50:01,960
it more like flash development but

00:50:00,460 --> 00:50:03,310
because of that gamer loop because what

00:50:01,960 --> 00:50:05,590
you have to do effectively is you loop

00:50:03,310 --> 00:50:08,200
25 times per second and you redraw the

00:50:05,590 --> 00:50:10,030
screen every on every frame of that tick

00:50:08,200 --> 00:50:11,380
on every loop you redraw the screen and

00:50:10,030 --> 00:50:13,720
that's how you achieve this game with it

00:50:11,380 --> 00:50:15,670
and that's how people develop in XNA for

00:50:13,720 --> 00:50:17,350
the Xbox that's how they use they

00:50:15,670 --> 00:50:18,460
develop for all sorts of gaming

00:50:17,350 --> 00:50:19,960
platforms so I think that's why it's

00:50:18,460 --> 00:50:21,340
really popular with gamers but it's very

00:50:19,960 --> 00:50:23,040
difficult as a web developer sometimes

00:50:21,340 --> 00:50:26,290
to get your head around that that idea

00:50:23,040 --> 00:50:28,870
we have a thing on visit mix comm slash

00:50:26,290 --> 00:50:30,070
lab and it's very difficult to draw

00:50:28,870 --> 00:50:31,750
canvas

00:50:30,070 --> 00:50:33,070
I didn't return you that code just to

00:50:31,750 --> 00:50:34,690
draw that little snap little thing you

00:50:33,070 --> 00:50:37,690
know need to know a little bit about

00:50:34,690 --> 00:50:38,710
JavaScript if you've got an illustrator

00:50:37,690 --> 00:50:41,050
file and you just want to put it on a

00:50:38,710 --> 00:50:43,600
canvas for example we have a little a

00:50:41,050 --> 00:50:46,390
little thing in visit misma visit mix

00:50:43,600 --> 00:50:48,280
slash home slash lab which can take an

00:50:46,390 --> 00:50:49,600
illustrator file and convert it into the

00:50:48,280 --> 00:50:51,490
Java Script which you can use in canvas

00:50:49,600 --> 00:50:53,980
I think we'll be seeing way more of

00:50:51,490 --> 00:50:55,330
these sorts of tools where it will make

00:50:53,980 --> 00:50:58,240
it more accessible to people who don't

00:50:55,330 --> 00:51:00,580
know JavaScript as well but to do html5

00:50:58,240 --> 00:51:04,150
today canvas html5 you're going to

00:51:00,580 --> 00:51:05,620
really need to be good at JavaScript and

00:51:04,150 --> 00:51:10,360
I'm sure that demo I'm not gonna have

00:51:05,620 --> 00:51:12,670
time sorry to your location we put that

00:51:10,360 --> 00:51:14,260
in the RC our release candidate so now

00:51:12,670 --> 00:51:16,810
all the major browsers support it you

00:51:14,260 --> 00:51:18,520
can go away and use it basically what it

00:51:16,810 --> 00:51:19,090
does it has a JavaScript API where you

00:51:18,520 --> 00:51:23,260
can go

00:51:19,090 --> 00:51:26,710
geolocation it gives you a you pass two

00:51:23,260 --> 00:51:28,210
values over two delegates with one on if

00:51:26,710 --> 00:51:29,410
it's successful and it finds a location

00:51:28,210 --> 00:51:31,240
one if it errors and it can't find a

00:51:29,410 --> 00:51:32,320
location and then it gives you a lap

00:51:31,240 --> 00:51:33,940
long which then you can use in your

00:51:32,320 --> 00:51:35,560
programming model I have an example of

00:51:33,940 --> 00:51:38,830
it but because of the Internet I won't

00:51:35,560 --> 00:51:40,450
be able to show but geolocation is

00:51:38,830 --> 00:51:42,130
really good I've not seen any decent

00:51:40,450 --> 00:51:43,750
implementations real-world examples of

00:51:42,130 --> 00:51:45,400
where it's used and if anyone's got any

00:51:43,750 --> 00:51:47,950
I'd love to see them but it's a very

00:51:45,400 --> 00:51:49,690
interesting technology which I think

00:51:47,950 --> 00:51:51,070
it's got a lot of legs the only problem

00:51:49,690 --> 00:51:53,560
is with it you have to actually ask

00:51:51,070 --> 00:51:54,910
obviously the user for permission to ask

00:51:53,560 --> 00:51:58,210
where they are so there is some user

00:51:54,910 --> 00:51:59,800
experience issues where you say find

00:51:58,210 --> 00:52:01,240
where I am and then it asks you do you

00:51:59,800 --> 00:52:03,460
want to allow and I suppose that's kind

00:52:01,240 --> 00:52:04,540
of cool but on some situations that this

00:52:03,460 --> 00:52:07,470
kind of gets in the way of what you're

00:52:04,540 --> 00:52:09,400
trying to do so generally safe to use

00:52:07,470 --> 00:52:12,370
all the things I've talked to today

00:52:09,400 --> 00:52:13,870
there are ways around making them work

00:52:12,370 --> 00:52:15,160
in older browsers I'm not going to have

00:52:13,870 --> 00:52:19,150
time to go through any of those because

00:52:15,160 --> 00:52:21,300
none of my demos worked but things like

00:52:19,150 --> 00:52:24,490
the canvas tag things like Dom storage

00:52:21,300 --> 00:52:26,920
Ajax navigation cross document messaging

00:52:24,490 --> 00:52:31,200
geolocation semantic elements audio and

00:52:26,920 --> 00:52:34,600
video there are all those ways get rap

00:52:31,200 --> 00:52:35,830
how you can support things like ie6 but

00:52:34,600 --> 00:52:41,100
still support these in your websites

00:52:35,830 --> 00:52:41,100
today by using graceful degradation

00:52:45,839 --> 00:52:51,299
kourin events and css3 2ds transforms

00:52:49,259 --> 00:52:53,279
backgrounds and borders fonts media

00:52:51,299 --> 00:53:00,630
query selectors colors and opacity are

00:52:53,279 --> 00:53:02,299
all usable today start here if you don't

00:53:00,630 --> 00:53:04,829
know what you're doing with html5

00:53:02,299 --> 00:53:06,660
modernize it just by looking through the

00:53:04,829 --> 00:53:08,459
code and looking how they test for the

00:53:06,660 --> 00:53:11,219
support it shows you a lot of the ways

00:53:08,459 --> 00:53:13,049
that you can you can build sites which

00:53:11,219 --> 00:53:14,549
will fall over gracefully javascript

00:53:13,049 --> 00:53:17,549
really the way that you do it so you

00:53:14,549 --> 00:53:21,089
would either apply an effect or apply a

00:53:17,549 --> 00:53:23,219
css3 style using javascript or you'd

00:53:21,089 --> 00:53:25,170
fall back or you can moderniser actually

00:53:23,219 --> 00:53:28,049
allows you to abstract the CSS so that

00:53:25,170 --> 00:53:30,569
you can apply css3 things only to

00:53:28,049 --> 00:53:32,130
browsers which support them so I'd

00:53:30,569 --> 00:53:34,259
recommend so strongly if you're going to

00:53:32,130 --> 00:53:36,079
do any html5 or css3 development take a

00:53:34,259 --> 00:53:38,430
look at Mill Nizer

00:53:36,079 --> 00:53:40,380
there's tons of shims and polyfills if

00:53:38,430 --> 00:53:41,759
our browser doesn't support WebSockets

00:53:40,380 --> 00:53:44,160
for example there is a JavaScript

00:53:41,759 --> 00:53:46,109
implementation of that there's a great

00:53:44,160 --> 00:53:50,309
list of polyfills it bitly slash html5

00:53:46,109 --> 00:53:51,449
polyfills it's on github yeah and

00:53:50,309 --> 00:53:53,819
there's just tons of ways that you can

00:53:51,449 --> 00:53:55,769
support these html5 features in older

00:53:53,819 --> 00:53:59,069
browsers successfully and fall over

00:53:55,769 --> 00:54:02,880
gracefully I'm going to really work

00:53:59,069 --> 00:54:06,449
through css3 basically this kind of

00:54:02,880 --> 00:54:08,910
stuff css3 enables you to achieve things

00:54:06,449 --> 00:54:10,709
that just weren't possible previously so

00:54:08,910 --> 00:54:12,479
this is an example of a sign that I walk

00:54:10,709 --> 00:54:14,369
past the Marks and Spencers where you

00:54:12,479 --> 00:54:17,099
have an image which has got a border

00:54:14,369 --> 00:54:19,259
around it how do you do that in regular

00:54:17,099 --> 00:54:21,449
CSS you just you don't write you just do

00:54:19,259 --> 00:54:22,829
a you just get an image you just make an

00:54:21,449 --> 00:54:25,349
image and then you put a board around it

00:54:22,829 --> 00:54:27,479
well you can do it pretty easily by

00:54:25,349 --> 00:54:29,640
taking that image of a roast dinner and

00:54:27,479 --> 00:54:32,309
applying the border radius of 105 pixels

00:54:29,640 --> 00:54:34,499
and a 10 pixel border and you will get

00:54:32,309 --> 00:54:36,329
that effect and if you want to see the

00:54:34,499 --> 00:54:38,369
demo that I did of how you implement

00:54:36,329 --> 00:54:40,319
that if you go submit Lee / border -

00:54:38,369 --> 00:54:41,309
radius you'll see the demo where I walk

00:54:40,319 --> 00:54:44,880
through how you actually would achieve

00:54:41,309 --> 00:54:47,699
something like that you can also

00:54:44,880 --> 00:54:50,039
transform any element so cuz videos part

00:54:47,699 --> 00:54:52,319
of the page now you can move it you can

00:54:50,039 --> 00:54:53,759
scale it you can secure it and it's

00:54:52,319 --> 00:54:55,140
really cool like with videos to be able

00:54:53,759 --> 00:54:56,880
to move them like that you couldn't do

00:54:55,140 --> 00:54:58,940
that how it was almost impossible to do

00:54:56,880 --> 00:55:00,470
that with

00:54:58,940 --> 00:55:02,150
with just regular flash without you

00:55:00,470 --> 00:55:03,559
still have to have that section around

00:55:02,150 --> 00:55:04,910
it which would actually be a rectangle

00:55:03,559 --> 00:55:06,530
and then you'd move it inside that

00:55:04,910 --> 00:55:14,000
rectangle but this is a fully

00:55:06,530 --> 00:55:15,500
transformed object we also have when we

00:55:14,000 --> 00:55:17,630
don't transfer them that video that we

00:55:15,500 --> 00:55:20,329
have this thing called vendor prefixes

00:55:17,630 --> 00:55:22,490
sadly on some of our css3 properties

00:55:20,329 --> 00:55:25,280
you're going to see these so WebKit have

00:55:22,490 --> 00:55:27,530
one Mozilla have one MS have one and it

00:55:25,280 --> 00:55:29,119
means that we're not completely

00:55:27,530 --> 00:55:31,760
confident with our implementation of

00:55:29,119 --> 00:55:34,280
those those those effects are css3

00:55:31,760 --> 00:55:35,839
effects so we vendor prefix them to make

00:55:34,280 --> 00:55:37,190
sure that the developers are where that

00:55:35,839 --> 00:55:38,720
and they're not completely finished and

00:55:37,190 --> 00:55:41,059
baked when they are finished

00:55:38,720 --> 00:55:43,010
like our border-radius implementations

00:55:41,059 --> 00:55:44,480
completely finished I don't know if web

00:55:43,010 --> 00:55:46,730
cotton Mozilla now are but when we

00:55:44,480 --> 00:55:47,990
implemented it they weren't ready so

00:55:46,730 --> 00:55:49,280
they still had their implement their

00:55:47,990 --> 00:55:51,380
vendor prefixes on there

00:55:49,280 --> 00:55:52,520
when you do when we do support it fully

00:55:51,380 --> 00:55:54,530
the prefix and it just becomes

00:55:52,520 --> 00:55:56,030
border-radius and whenever you're

00:55:54,530 --> 00:55:57,770
writing these where you support Mozilla

00:55:56,030 --> 00:55:59,630
WebKit and then the actual standard base

00:55:57,770 --> 00:56:01,819
one you should always apply the standard

00:55:59,630 --> 00:56:03,950
last because it means that when WebKit

00:56:01,819 --> 00:56:06,020
do they will maintain this WebKit slash

00:56:03,950 --> 00:56:07,730
border-radius property but when they do

00:56:06,020 --> 00:56:10,549
support the border-radius it will

00:56:07,730 --> 00:56:11,750
override that property so they won't

00:56:10,549 --> 00:56:15,770
they won't just remove that

00:56:11,750 --> 00:56:17,839
WebKit border-radius and obviously web

00:56:15,770 --> 00:56:19,490
fonts this is one of the coolest things

00:56:17,839 --> 00:56:24,500
if as a designer being on cheese real

00:56:19,490 --> 00:56:26,990
typography it's really simple to use the

00:56:24,500 --> 00:56:28,940
problem is that again we don't all agree

00:56:26,990 --> 00:56:30,890
on which format we should use but this

00:56:28,940 --> 00:56:32,299
one's much easier to solve because if

00:56:30,890 --> 00:56:34,490
you go to somewhere like fonts girl a

00:56:32,299 --> 00:56:35,900
type kit and front school is completely

00:56:34,490 --> 00:56:37,430
free for most of their funds they write

00:56:35,900 --> 00:56:39,079
you free type kit you pay a little bit

00:56:37,430 --> 00:56:41,029
of money for the hosted but they will

00:56:39,079 --> 00:56:42,230
download a piece of JavaScript which you

00:56:41,029 --> 00:56:44,170
just put in your page and then you can

00:56:42,230 --> 00:56:46,279
use that font throughout your website

00:56:44,170 --> 00:56:48,529
knowing that it's going to work well

00:56:46,279 --> 00:56:51,020
across most browsers certainly all html5

00:56:48,529 --> 00:56:53,299
and css3 capable browsers and but some

00:56:51,020 --> 00:56:55,130
other browsers as well because we've

00:56:53,299 --> 00:56:58,460
browsers support with this kind of font

00:56:55,130 --> 00:57:02,029
format for a long time so there's my mo

00:56:58,460 --> 00:57:04,549
resources I'd recommend the if you want

00:57:02,029 --> 00:57:06,230
to learn more about html5 and css3 to

00:57:04,549 --> 00:57:08,690
know html5 with javascript to some

00:57:06,230 --> 00:57:11,660
extent html5 by Bruce Lawson remi shops

00:57:08,690 --> 00:57:12,740
a great book to read all this stuff's

00:57:11,660 --> 00:57:16,100
going to be on you

00:57:12,740 --> 00:57:17,930
belly calm later on today if you've not

00:57:16,100 --> 00:57:19,400
don't know what you belly comm is we're

00:57:17,930 --> 00:57:20,900
a little stand just outside there its

00:57:19,400 --> 00:57:23,030
web developers which work for Microsoft

00:57:20,900 --> 00:57:24,440
talking about Microsoft talking about

00:57:23,030 --> 00:57:28,130
product hunger our browsers our phone

00:57:24,440 --> 00:57:30,410
our platforms we're have a deal at the

00:57:28,130 --> 00:57:32,510
moment for Windows hosting will give

00:57:30,410 --> 00:57:34,369
anyone two months three windows hosting

00:57:32,510 --> 00:57:35,510
if they provide feedback and if you've

00:57:34,369 --> 00:57:36,980
got projects where you need to use

00:57:35,510 --> 00:57:38,690
Windows hosting or you want to put PHP

00:57:36,980 --> 00:57:39,710
on Windows come speak to us and we'll

00:57:38,690 --> 00:57:41,930
see what we can do with hosting and

00:57:39,710 --> 00:57:44,150
helping you out with those projects so

00:57:41,930 --> 00:57:46,160
that's all thank you very much I'm very

00:57:44,150 --> 00:57:48,790
sorry about the technical problems that

00:57:46,160 --> 00:57:48,790

YouTube URL: https://www.youtube.com/watch?v=L3Rc2EKEtoQ


