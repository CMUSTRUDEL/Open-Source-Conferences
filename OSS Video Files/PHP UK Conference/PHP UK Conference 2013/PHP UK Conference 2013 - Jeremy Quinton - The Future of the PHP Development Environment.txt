Title: PHP UK Conference 2013 - Jeremy Quinton - The Future of the PHP Development Environment
Publication date: 2013-05-01
Playlist: PHP UK Conference 2013
Description: 
	Vagrant combined with Virtual box and a provisioning tool like chef or puppet fundamentally changes the way developers setup their development environments and develop their web applications. Once configured, vagrant allows developers to spin up a new environment in a couple of commands and allows each developer to have the exact same development environment. As PHP developers, our development environments differ significantly. Vagrant solves this by allowing developers to create reproducibly development environments on the fly when and where they are needed. Yes, it is true there are now at least half a dozen LAMP installers out there, each one has slight variations on what and how it installs and how it works on different operating systems. Some developers don't use an installer they might decide to compile from source, use what comes with the latest mac osx or develop directly on a server in the cloud. However, the eco-system around PHP is forever changing and setting up reproducible complex development environments in an automated way is extremely useful. My talk will cover vagrant in detail and enough around virtual box and chef to get developers going so that they can use these tools in their everyday development environments. These tools and skills are a great asset for all PHP developers.

Slides: http://www.slideshare.net/jeremyq/the-future-of-the-php-development-environment
Captions: 
	00:00:13,710 --> 00:00:19,900
okay is this on can you guys hear me I

00:00:17,350 --> 00:00:21,849
can't pull it around a bit okay so just

00:00:19,900 --> 00:00:25,300
a bit about me like he said my name's

00:00:21,849 --> 00:00:28,689
Jeremy Quinton I'm a PHP developer of

00:00:25,300 --> 00:00:30,520
Indian PHP for about 10 years originally

00:00:28,689 --> 00:00:32,050
from Cape Town South Africa but I've

00:00:30,520 --> 00:00:34,660
been living in London work in London for

00:00:32,050 --> 00:00:37,899
the past six years I currently work at

00:00:34,660 --> 00:00:40,390
comic relief on the scalable fundraising

00:00:37,899 --> 00:00:41,950
platform so just a bit of a shameless

00:00:40,390 --> 00:00:43,780
plug I thought I'd mention this because

00:00:41,950 --> 00:00:46,630
it's quite an interesting use case for

00:00:43,780 --> 00:00:48,730
PHP comic relief I've got a massive

00:00:46,630 --> 00:00:50,490
implementation of PHP a lot of it

00:00:48,730 --> 00:00:55,390
bespoke but they use a lot of Drupal too

00:00:50,490 --> 00:01:00,220
and in 2011 they raised 108 million

00:00:55,390 --> 00:01:02,020
pounds for charity so PHP and you know

00:01:00,220 --> 00:01:03,850
indirectly is actually saving lives

00:01:02,020 --> 00:01:06,970
because most that money goes to some of

00:01:03,850 --> 00:01:08,650
the poorest communities in Africa so

00:01:06,970 --> 00:01:10,439
it's quite a different use case red nose

00:01:08,650 --> 00:01:13,540
day is back on the fifteenth of March

00:01:10,439 --> 00:01:15,250
2013 and so take a look out for it the

00:01:13,540 --> 00:01:17,590
night of TV's on BBC one that's really

00:01:15,250 --> 00:01:19,210
good ok so the feature of the PHP

00:01:17,590 --> 00:01:22,090
development environment I've broken this

00:01:19,210 --> 00:01:25,260
talk up into three distinct posts parts

00:01:22,090 --> 00:01:27,250
so I basically talk about the past a bit

00:01:25,260 --> 00:01:29,560
so sort of the problems we've had with

00:01:27,250 --> 00:01:31,510
the PHP development environment I talked

00:01:29,560 --> 00:01:33,729
about the present so a present solution

00:01:31,510 --> 00:01:36,159
to solve some of these problems and then

00:01:33,729 --> 00:01:39,820
I talked about the future and where

00:01:36,159 --> 00:01:43,420
that's going just a warning though the

00:01:39,820 --> 00:01:45,820
store contains Ruby I did a precursor to

00:01:43,420 --> 00:01:47,890
this talk at PHP London in December and

00:01:45,820 --> 00:01:50,320
I got a bit of stick because i was

00:01:47,890 --> 00:01:52,630
talking at a ph we meet up and you know

00:01:50,320 --> 00:01:54,970
two of the tools i talked today about a

00:01:52,630 --> 00:01:56,260
ruby and to be honest I've never done

00:01:54,970 --> 00:02:00,340
Ruby commercially or anything like that

00:01:56,260 --> 00:02:02,380
i concurred in Ruby the only thing I can

00:02:00,340 --> 00:02:05,799
do is variable assignments and cut and

00:02:02,380 --> 00:02:07,090
paste which is what I've done but I

00:02:05,799 --> 00:02:10,060
think we've got to keep an open mind you

00:02:07,090 --> 00:02:11,230
know we need to adopt and you know tools

00:02:10,060 --> 00:02:12,549
and techniques of other languages

00:02:11,230 --> 00:02:15,519
especially they're going to make our

00:02:12,549 --> 00:02:17,980
lives easier so let's talk a bit about

00:02:15,519 --> 00:02:21,189
the past so that literally there is my

00:02:17,980 --> 00:02:23,070
first development environment really

00:02:21,189 --> 00:02:27,190
cool monitor

00:02:23,070 --> 00:02:30,580
but that's where I started out with PHP

00:02:27,190 --> 00:02:33,220
and in those days you know the paradigm

00:02:30,580 --> 00:02:35,080
was install everything locally and the

00:02:33,220 --> 00:02:38,080
stories for a lot of developers but

00:02:35,080 --> 00:02:39,520
generally you know the intern you're

00:02:38,080 --> 00:02:41,830
given a couple of toss and one of my

00:02:39,520 --> 00:02:43,900
first toss as an intern was you know to

00:02:41,830 --> 00:02:45,070
set up my development environment and I

00:02:43,900 --> 00:02:46,870
remember it took me literally a couple

00:02:45,070 --> 00:02:48,940
of days you know you know learning how

00:02:46,870 --> 00:02:51,070
to use a package manager setting up a

00:02:48,940 --> 00:02:53,770
virtual host all those kind of things

00:02:51,070 --> 00:02:55,540
and you know that's that's where you

00:02:53,770 --> 00:02:59,170
start you know you know the joke there's

00:02:55,540 --> 00:03:01,870
no place like localhost but but how does

00:02:59,170 --> 00:03:03,250
a newbie install PHP I mean those are

00:03:01,870 --> 00:03:04,989
the instructions of php.net are

00:03:03,250 --> 00:03:06,430
literally just cut and paste this but

00:03:04,989 --> 00:03:08,890
you can see this sort of female you've

00:03:06,430 --> 00:03:11,620
got you know unix based system windows

00:03:08,890 --> 00:03:12,670
and a bit there on Mac but you know

00:03:11,620 --> 00:03:15,430
there's quite a bit of stuff that

00:03:12,670 --> 00:03:16,959
especially if you're new to PHP and I

00:03:15,430 --> 00:03:18,730
think developers kind of got like sick

00:03:16,959 --> 00:03:20,220
of this we kind of got sick of this idea

00:03:18,730 --> 00:03:23,590
of having to install everything locally

00:03:20,220 --> 00:03:25,090
so we came up with some solutions I've

00:03:23,590 --> 00:03:27,400
just got a couple year you guys might

00:03:25,090 --> 00:03:29,080
use something else but you know easy PHP

00:03:27,400 --> 00:03:30,880
zamp Sam's quite cool you get an extra

00:03:29,080 --> 00:03:33,340
feature you get Paul checked in for some

00:03:30,880 --> 00:03:35,200
reason you know then you might use a

00:03:33,340 --> 00:03:38,530
package manager Mac like homebrewer

00:03:35,200 --> 00:03:41,230
macports you know something on Linux

00:03:38,530 --> 00:03:43,090
like app to Yammer and that's ma'am the

00:03:41,230 --> 00:03:45,430
gray ones man pro you actually can pay

00:03:43,090 --> 00:03:46,480
for a tool to set up your development

00:03:45,430 --> 00:03:49,120
environment which is quite interesting

00:03:46,480 --> 00:03:51,970
but we really try to you know sort of

00:03:49,120 --> 00:03:53,019
make our lives a bit easier but the

00:03:51,970 --> 00:03:54,970
paradigm is still install everything

00:03:53,019 --> 00:03:56,920
like you know but the reality is the

00:03:54,970 --> 00:03:59,320
egos the ecosystem around the lamp stack

00:03:56,920 --> 00:04:02,200
has changed quite a bit so it's no

00:03:59,320 --> 00:04:03,519
longer just you know lamp we're using so

00:04:02,200 --> 00:04:04,780
many other technologies I mean that's

00:04:03,519 --> 00:04:07,630
not an exhaustive list but you know

00:04:04,780 --> 00:04:10,239
using messaging we're using you know no

00:04:07,630 --> 00:04:12,760
sequel solution we're using something

00:04:10,239 --> 00:04:13,900
else in our PHP applications so all of a

00:04:12,760 --> 00:04:15,640
sudden you know installing everything

00:04:13,900 --> 00:04:18,280
locally and then installing a message

00:04:15,640 --> 00:04:19,870
queue locally on your computer how does

00:04:18,280 --> 00:04:22,330
that work and you know you've got a dev

00:04:19,870 --> 00:04:24,010
on Mac and Anna Devon on windows how

00:04:22,330 --> 00:04:25,750
does the the windows developer you know

00:04:24,010 --> 00:04:30,490
does that messaging q even work on

00:04:25,750 --> 00:04:32,740
windows so the ecosystems changed so the

00:04:30,490 --> 00:04:35,940
modern developer environment has become

00:04:32,740 --> 00:04:35,940
more complex for a lot of us

00:04:36,150 --> 00:04:40,449
but then there's also the concept of the

00:04:38,650 --> 00:04:42,159
snowflake and it's a really good blog

00:04:40,449 --> 00:04:44,319
post by Martin Fowler a lot of you'll

00:04:42,159 --> 00:04:46,900
know modern Farley's from its books but

00:04:44,319 --> 00:04:48,550
I definitely recommend you go and you

00:04:46,900 --> 00:04:50,259
know read it but the concept of the

00:04:48,550 --> 00:04:51,669
production snowflakes in many ways can

00:04:50,259 --> 00:04:53,620
be applied to our development

00:04:51,669 --> 00:04:57,970
environments the general concept is of

00:04:53,620 --> 00:04:59,289
uniqueness the fact that you know a lot

00:04:57,970 --> 00:05:00,550
of our development environments are

00:04:59,289 --> 00:05:02,379
unique so for example if you took

00:05:00,550 --> 00:05:04,330
everyone in this room if you took each

00:05:02,379 --> 00:05:05,650
of our development environments you'll

00:05:04,330 --> 00:05:07,180
probably find they're pretty unique in

00:05:05,650 --> 00:05:10,719
structure just like snowflakes are

00:05:07,180 --> 00:05:12,009
unique but one developer you know wants

00:05:10,719 --> 00:05:13,300
to get a change from his development

00:05:12,009 --> 00:05:15,069
environment to another developers

00:05:13,300 --> 00:05:17,590
machine that's not straightforward and

00:05:15,069 --> 00:05:19,389
easy to do and also the idea that our

00:05:17,590 --> 00:05:21,819
development environments on reproducible

00:05:19,389 --> 00:05:23,319
so you know you've been developing and

00:05:21,819 --> 00:05:25,389
hacking away on PHP for two years

00:05:23,319 --> 00:05:27,280
locally you've made so many hacks and

00:05:25,389 --> 00:05:29,289
configurations and so on your hard drive

00:05:27,280 --> 00:05:30,909
crashes you know it takes you two days

00:05:29,289 --> 00:05:32,319
to get back up and running to where you

00:05:30,909 --> 00:05:34,090
were and you can t remember how you did

00:05:32,319 --> 00:05:39,400
things you start googling and you know

00:05:34,090 --> 00:05:41,169
and so on and so forth then let's play a

00:05:39,400 --> 00:05:43,120
little game okay so spot the difference

00:05:41,169 --> 00:05:52,659
can anyone spot the difference in these

00:05:43,120 --> 00:05:53,800
pictures is about seven anyone yeah so

00:05:52,659 --> 00:05:55,659
there we go so there's a there's a

00:05:53,800 --> 00:06:00,449
there's a couple of you know differences

00:05:55,659 --> 00:06:00,449
and spot the difference is is really

00:06:00,870 --> 00:06:07,779
it's really simple as a similar to the

00:06:04,900 --> 00:06:10,270
dev parity concept right and the dev pod

00:06:07,779 --> 00:06:11,800
parity concept is keep development

00:06:10,270 --> 00:06:14,229
staging and production as similar as

00:06:11,800 --> 00:06:16,360
possible right a lot of the times that's

00:06:14,229 --> 00:06:18,190
not true out of development environments

00:06:16,360 --> 00:06:21,310
or completely different to staging and

00:06:18,190 --> 00:06:23,590
production 12 factor donate i really

00:06:21,310 --> 00:06:25,060
recommend that site and there's 12

00:06:23,590 --> 00:06:26,440
points in their bath you know deploying

00:06:25,060 --> 00:06:28,120
and doing stuff with your applications

00:06:26,440 --> 00:06:30,659
it was put up i think some of the guys

00:06:28,120 --> 00:06:33,069
who did the europa platform but their

00:06:30,659 --> 00:06:35,770
parity is one of the concepts there and

00:06:33,069 --> 00:06:39,009
their pod parody is broken up into three

00:06:35,770 --> 00:06:40,150
things you know it's time so you know

00:06:39,009 --> 00:06:42,820
you're right code today but it only

00:06:40,150 --> 00:06:44,620
maybe goes live in a week and it's got a

00:06:42,820 --> 00:06:46,129
people element to it so basically the

00:06:44,620 --> 00:06:47,959
guys that are writing the code

00:06:46,129 --> 00:06:49,759
the guys deploying the code and then is

00:06:47,959 --> 00:06:53,089
the tools gap you know so basically our

00:06:49,759 --> 00:06:58,099
development environment is comment you

00:06:53,089 --> 00:07:00,199
know to staging and production so it's a

00:06:58,099 --> 00:07:01,519
really important concept and the tools

00:07:00,199 --> 00:07:03,259
i'm going to talk about later you know

00:07:01,519 --> 00:07:04,849
solve this problem so let's go to a

00:07:03,259 --> 00:07:06,559
quick summary of these past and present

00:07:04,849 --> 00:07:08,149
problems right so setting up the modern

00:07:06,559 --> 00:07:11,110
development environment we've got all

00:07:08,149 --> 00:07:13,189
these moving parts isn't straightforward

00:07:11,110 --> 00:07:15,709
see there's a bit of a mistake therefore

00:07:13,189 --> 00:07:17,509
the comments over this idea of

00:07:15,709 --> 00:07:18,860
uniqueness so like a snowflake our

00:07:17,509 --> 00:07:21,499
development environment so unique in

00:07:18,860 --> 00:07:23,089
structure and switching being between

00:07:21,499 --> 00:07:24,409
projects with different dependencies is

00:07:23,089 --> 00:07:26,419
difficult so let's say you're working on

00:07:24,409 --> 00:07:27,979
two different api's you know one API is

00:07:26,419 --> 00:07:30,830
dependent on some back in service maybe

00:07:27,979 --> 00:07:32,300
MongoDB even another AP API that's maybe

00:07:30,830 --> 00:07:33,649
that a message in queue behind it you

00:07:32,300 --> 00:07:35,479
know you said all that stuff up locally

00:07:33,649 --> 00:07:37,399
switching between those two projects and

00:07:35,479 --> 00:07:38,869
developing on both them you know the

00:07:37,399 --> 00:07:42,499
dependencies and stuff start to maybe

00:07:38,869 --> 00:07:44,719
you know conflict and and then you know

00:07:42,499 --> 00:07:46,159
dev parity that our local development

00:07:44,719 --> 00:07:49,039
environments differ significantly from

00:07:46,159 --> 00:07:51,259
production and staging and so on so how

00:07:49,039 --> 00:07:52,369
do we solve these problems and you know

00:07:51,259 --> 00:07:54,139
these are some of the problems I've

00:07:52,369 --> 00:07:55,369
encountered maybe even kind of some of

00:07:54,139 --> 00:07:57,199
them and I'm sure these there's other

00:07:55,369 --> 00:07:59,719
problems you guys have encountered but

00:07:57,199 --> 00:08:01,339
how do we solve them fragrance right I

00:07:59,719 --> 00:08:03,589
don't know how many people in this room

00:08:01,339 --> 00:08:07,039
are using vagrant at the moment okay

00:08:03,589 --> 00:08:10,809
that's really cool for those that aren't

00:08:07,039 --> 00:08:13,550
using it a dog you'd is the future and

00:08:10,809 --> 00:08:16,219
because it's drastically changed the way

00:08:13,550 --> 00:08:20,209
we configure and set up our development

00:08:16,219 --> 00:08:22,129
environments and the idea is pretty

00:08:20,209 --> 00:08:23,990
simple this is a high-level concept on

00:08:22,129 --> 00:08:28,729
the slide but once you've configured

00:08:23,990 --> 00:08:30,379
vagrant its fragrant up there's you know

00:08:28,729 --> 00:08:32,180
that's on the command line so you drop

00:08:30,379 --> 00:08:33,289
into a terminal whatever but vagrant up

00:08:32,180 --> 00:08:35,149
and it brings up your development

00:08:33,289 --> 00:08:37,370
environment so that's really cool so we

00:08:35,149 --> 00:08:38,750
take everyone in this room we distribute

00:08:37,370 --> 00:08:39,949
that we give everyone a copy of the

00:08:38,750 --> 00:08:41,120
development environment everyone's very

00:08:39,949 --> 00:08:44,180
grown up and everyone's got the same

00:08:41,120 --> 00:08:45,889
development environment it's really

00:08:44,180 --> 00:08:48,050
really useful so just to put more about

00:08:45,889 --> 00:08:50,569
the variant idea and the concept so I

00:08:48,050 --> 00:08:52,519
took a definition of you know very gonna

00:08:50,569 --> 00:08:54,800
calm but it's a tool to transparently

00:08:52,519 --> 00:08:57,410
manage all the complex parts of modern

00:08:54,800 --> 00:08:58,850
development within a virtual environment

00:08:57,410 --> 00:08:59,329
without affecting the everyday work love

00:08:58,850 --> 00:09:01,879
develop

00:08:59,329 --> 00:09:03,679
too much so I kind of like to think of

00:09:01,879 --> 00:09:05,149
vagrant as the magic but the idea is you

00:09:03,679 --> 00:09:07,309
that you've got a provider which is a

00:09:05,149 --> 00:09:08,689
virtualization so over yeah I've got

00:09:07,309 --> 00:09:10,459
VirtualBox I don't know if any of you

00:09:08,689 --> 00:09:12,949
have used virtualbox it's a really

00:09:10,459 --> 00:09:15,049
really cool tool you know it's

00:09:12,949 --> 00:09:18,259
completely free it's a virtualization

00:09:15,049 --> 00:09:19,790
tool it's open source and it's back by

00:09:18,259 --> 00:09:20,959
Oracle this these days you know frequent

00:09:19,790 --> 00:09:23,749
updates of it all the time which is

00:09:20,959 --> 00:09:25,220
really good but you've you've got very

00:09:23,749 --> 00:09:26,660
then you've got a provider for your

00:09:25,220 --> 00:09:28,489
virtualization so your development

00:09:26,660 --> 00:09:30,589
environment is virtualized and then

00:09:28,489 --> 00:09:33,049
you've got a provisioner so chef is the

00:09:30,589 --> 00:09:35,269
example of user you can also use puppet

00:09:33,049 --> 00:09:36,949
and my examples later have shifts solo

00:09:35,269 --> 00:09:38,360
in them and I'll talk a bit more about

00:09:36,949 --> 00:09:39,769
Chef later but you can also use bash

00:09:38,360 --> 00:09:41,559
scripts so you've got a virtual

00:09:39,769 --> 00:09:43,699
environment it's managed with a

00:09:41,559 --> 00:09:45,589
configuration file which is vagrant and

00:09:43,699 --> 00:09:47,779
you bring up a virtual environment and

00:09:45,589 --> 00:09:51,199
you install the version of PHP that you

00:09:47,779 --> 00:09:54,049
want installed version of my sequel you

00:09:51,199 --> 00:09:55,730
want you know the the modules you want

00:09:54,049 --> 00:09:57,429
for PHP I didn't mention it earlier but

00:09:55,730 --> 00:10:00,199
I think there's something like 150

00:09:57,429 --> 00:10:02,540
extensions for PHP whether they bundled

00:10:00,199 --> 00:10:04,069
external pekel so you can imagine when

00:10:02,540 --> 00:10:06,319
you've got that you need structure in

00:10:04,069 --> 00:10:08,119
your development environments you know

00:10:06,319 --> 00:10:10,189
how what like everyone's got you know

00:10:08,119 --> 00:10:12,980
different versions of extensions and

00:10:10,189 --> 00:10:14,419
modules installed you know so the idea

00:10:12,980 --> 00:10:17,779
with the provisioner is that you've

00:10:14,419 --> 00:10:19,160
actually another way to kind of describe

00:10:17,779 --> 00:10:21,769
it is you know everyone's using a

00:10:19,160 --> 00:10:22,910
composer now to manage the dependencies

00:10:21,769 --> 00:10:24,649
in their project so it's kind of

00:10:22,910 --> 00:10:26,509
managing the dependencies for your

00:10:24,649 --> 00:10:29,089
infrastructure that's another way to

00:10:26,509 --> 00:10:30,559
think about it so basic were vibrant

00:10:29,089 --> 00:10:32,209
workflow so the idea like I've already

00:10:30,559 --> 00:10:33,709
mentioned and you start work in the

00:10:32,209 --> 00:10:35,540
morning you run vagrant up brings up

00:10:33,709 --> 00:10:38,929
your development environment you start

00:10:35,540 --> 00:10:40,249
writing some code hack away and so on if

00:10:38,929 --> 00:10:43,519
you want access to the virtual machine

00:10:40,249 --> 00:10:45,739
and you can use vagrant SSH which is

00:10:43,519 --> 00:10:48,160
obviously really useful so very good SSH

00:10:45,739 --> 00:10:50,089
and then you're into the virtual machine

00:10:48,160 --> 00:10:51,559
when you're done for the day you run

00:10:50,089 --> 00:10:55,279
vagrant holt and that'll shut down the

00:10:51,559 --> 00:10:56,449
machine there's quite a few commands in

00:10:55,279 --> 00:10:57,949
the next slide which I'll come to but

00:10:56,449 --> 00:10:59,119
you've got vagrant destroy so let's say

00:10:57,949 --> 00:11:01,249
you bring up the virtual machine you

00:10:59,119 --> 00:11:03,529
hack around with it you completely mess

00:11:01,249 --> 00:11:05,119
up the configurations or something you

00:11:03,529 --> 00:11:08,410
can basically destroy that virtual

00:11:05,119 --> 00:11:11,959
machine by running vagrant destroy and

00:11:08,410 --> 00:11:13,350
then the last but is vagrant provision

00:11:11,959 --> 00:11:15,870
so basically

00:11:13,350 --> 00:11:17,490
if a developer makes a change to the

00:11:15,870 --> 00:11:20,820
development environment and they commit

00:11:17,490 --> 00:11:22,200
that to you you know get to whatever you

00:11:20,820 --> 00:11:24,060
bring that change back down if you run

00:11:22,200 --> 00:11:27,390
vagrant provision it will install that

00:11:24,060 --> 00:11:28,980
new extension for PHP or you know that

00:11:27,390 --> 00:11:31,320
new version of my sequel and so on and

00:11:28,980 --> 00:11:34,680
I'll talk a bit more about that later so

00:11:31,320 --> 00:11:36,530
vagrant is a command line tool as I

00:11:34,680 --> 00:11:38,700
mentioned earlier it's written in Ruby

00:11:36,530 --> 00:11:40,380
and it's supported on most major

00:11:38,700 --> 00:11:43,230
operating system so it works on windows

00:11:40,380 --> 00:11:44,880
linux and mac and I've only really used

00:11:43,230 --> 00:11:46,260
it on Mac I've heard so complaints you

00:11:44,880 --> 00:11:49,050
know some issues yum then I'll talk a

00:11:46,260 --> 00:11:50,640
bit more about that later but generally

00:11:49,050 --> 00:11:52,770
it's cross platform which is really good

00:11:50,640 --> 00:11:54,420
that's a list of the command so if you

00:11:52,770 --> 00:11:56,220
run vagrant hope you'll sort of get that

00:11:54,420 --> 00:11:57,540
output really useful if you're starting

00:11:56,220 --> 00:11:59,430
out with vagrant because you can run the

00:11:57,540 --> 00:12:02,280
Hulk come on against them and you know

00:11:59,430 --> 00:12:06,000
get some more info on them so let's go

00:12:02,280 --> 00:12:07,770
but into how vagrant works and so a

00:12:06,000 --> 00:12:11,760
vagrant instance is managed with a

00:12:07,770 --> 00:12:14,580
vagrant file which is Ruby syntax like I

00:12:11,760 --> 00:12:16,080
mentioned earlier you know some people

00:12:14,580 --> 00:12:17,790
might get you know scared of the idea of

00:12:16,080 --> 00:12:19,710
the Ruby syntax but it's basically just

00:12:17,790 --> 00:12:22,500
you know general variable assignments

00:12:19,710 --> 00:12:24,450
that you're doing you've got 28

00:12:22,500 --> 00:12:26,490
configuration options I'm going to demo

00:12:24,450 --> 00:12:28,440
roughly about I think seven today you

00:12:26,490 --> 00:12:30,870
don't need to know all of them and the

00:12:28,440 --> 00:12:33,050
demo I'm doing is quite basic because

00:12:30,870 --> 00:12:36,300
it's all I've sort of got time for but

00:12:33,050 --> 00:12:38,250
you know i will i'll talk more about

00:12:36,300 --> 00:12:41,940
inner advanced vagrant setups a bit

00:12:38,250 --> 00:12:43,380
later so ideally to use virtualbox and

00:12:41,940 --> 00:12:46,820
use the virtualization layer with

00:12:43,380 --> 00:12:49,620
vagrant you need a box file so you can

00:12:46,820 --> 00:12:51,030
basically add the box file on a command

00:12:49,620 --> 00:12:53,460
line which I'll show that come on scene

00:12:51,030 --> 00:12:55,560
but it's like vagrant box add the box

00:12:53,460 --> 00:12:58,230
file name which is that top line over

00:12:55,560 --> 00:13:00,060
there so vagrant center is 6.3 and then

00:12:58,230 --> 00:13:01,410
where the box file is so if you've got

00:13:00,060 --> 00:13:02,910
the box file you can give it to another

00:13:01,410 --> 00:13:07,770
developer but if you don't have the box

00:13:02,910 --> 00:13:09,720
file you can use a URL and so basically

00:13:07,770 --> 00:13:11,340
if you run vagrant up vagran will go and

00:13:09,720 --> 00:13:13,980
fetch the box file and pull it down and

00:13:11,340 --> 00:13:16,320
then unpackage it so you've got and you

00:13:13,980 --> 00:13:18,060
know you've got the Box fault so I mean

00:13:16,320 --> 00:13:19,650
the idea is that every variant virtual

00:13:18,060 --> 00:13:22,280
environment requires a box file to both

00:13:19,650 --> 00:13:24,840
off okay so you need to get a box file

00:13:22,280 --> 00:13:27,059
so these three methods to get a box for

00:13:24,840 --> 00:13:30,889
okay the first one is two down

00:13:27,059 --> 00:13:32,639
download a box file from a vagrant 30s I

00:13:30,889 --> 00:13:34,799
had a look there when I was preparing

00:13:32,639 --> 00:13:38,759
this talk there was about 60 different

00:13:34,799 --> 00:13:41,759
box files and FreeBSD and different

00:13:38,759 --> 00:13:42,989
versions of Linux and so on anything

00:13:41,759 --> 00:13:45,089
that scares me a bit about downloading

00:13:42,989 --> 00:13:46,799
these box files is it is a virtual

00:13:45,089 --> 00:13:48,119
environment so you know I haven't

00:13:46,799 --> 00:13:49,409
actually used one of them but someone

00:13:48,119 --> 00:13:50,849
could you know potentially install

00:13:49,409 --> 00:13:54,119
something that's you know malicious on

00:13:50,849 --> 00:13:55,679
there and you know you know if you

00:13:54,119 --> 00:13:56,699
security conscious as something to think

00:13:55,679 --> 00:13:57,719
about but if you're just going to play

00:13:56,699 --> 00:13:59,219
around with it locally and you're not

00:13:57,719 --> 00:14:01,919
going to put code on there that's got

00:13:59,219 --> 00:14:03,569
like you know stuff that's to secure you

00:14:01,919 --> 00:14:05,339
should be okay it's a good way to get

00:14:03,569 --> 00:14:09,029
started and the other way to create a

00:14:05,339 --> 00:14:12,029
box fall is to using the instructions of

00:14:09,029 --> 00:14:13,709
vergara com I've done this before I

00:14:12,029 --> 00:14:16,139
think the documentation is on it's got a

00:14:13,709 --> 00:14:20,129
bit better but ideally the way to do it

00:14:16,139 --> 00:14:21,869
is you have virtual box and you'll put

00:14:20,129 --> 00:14:24,659
your your ISO in you'll install the

00:14:21,869 --> 00:14:26,879
operating system you'll then you know

00:14:24,659 --> 00:14:29,069
run a couple what you'll do to set up

00:14:26,879 --> 00:14:30,299
some users on the box you do a couple of

00:14:29,069 --> 00:14:32,369
configuration things and then you

00:14:30,299 --> 00:14:34,019
package it as a box fall and it's a bit

00:14:32,369 --> 00:14:36,329
tedious and a bit time consuming to do

00:14:34,019 --> 00:14:38,369
so if you really want understand our box

00:14:36,329 --> 00:14:40,679
file works you know the instructions on

00:14:38,369 --> 00:14:43,259
vagrant up you can go and read them but

00:14:40,679 --> 00:14:49,109
the third one is the step I definitely

00:14:43,259 --> 00:14:51,419
recommend so ve it's a really really

00:14:49,109 --> 00:14:53,639
cool open source project I don't know if

00:14:51,419 --> 00:14:54,389
Andy and is one of developers I work

00:14:53,639 --> 00:14:55,679
with I don't know if he's in this room

00:14:54,389 --> 00:14:56,789
that might be next door but he actually

00:14:55,679 --> 00:14:58,739
showed me the project so I've got to

00:14:56,789 --> 00:15:00,809
give him some credit for that but it's a

00:14:58,739 --> 00:15:02,369
really cool way to build box falls and

00:15:00,809 --> 00:15:03,629
it's all on the command line but the

00:15:02,369 --> 00:15:06,089
idea is pretty simple you've got a

00:15:03,629 --> 00:15:09,029
template / sort of operating system so

00:15:06,089 --> 00:15:10,709
if it's you know and this is just my

00:15:09,029 --> 00:15:12,479
basic understanding of it but you know

00:15:10,709 --> 00:15:15,419
if you got a template file so if you

00:15:12,479 --> 00:15:17,999
want to build center is or reddit or bun

00:15:15,419 --> 00:15:19,649
2 and so on you basically just use one

00:15:17,999 --> 00:15:22,379
of the predefined templates that come in

00:15:19,649 --> 00:15:24,269
the project and then you run a couple of

00:15:22,379 --> 00:15:26,009
VV commands they all documented you know

00:15:24,269 --> 00:15:27,569
on the project but basically you can

00:15:26,009 --> 00:15:28,949
build a box file really quickly and it's

00:15:27,569 --> 00:15:30,779
only a process you kind of have to do

00:15:28,949 --> 00:15:32,759
one so once you've got a a box file like

00:15:30,779 --> 00:15:34,439
I use Center is 6.3 for development

00:15:32,759 --> 00:15:36,449
because I find it boots really quickly

00:15:34,439 --> 00:15:38,429
which is really nice but once you've

00:15:36,449 --> 00:15:39,569
built a box while you've got that that

00:15:38,429 --> 00:15:40,070
box while you don't have to do it over

00:15:39,569 --> 00:15:41,420
and over

00:15:40,070 --> 00:15:43,400
if you want to you know buldhana bundi

00:15:41,420 --> 00:15:45,950
box file or something else or in a new

00:15:43,400 --> 00:15:47,270
version of you know linux comes out and

00:15:45,950 --> 00:15:49,280
so on you want to build that and you can

00:15:47,270 --> 00:15:50,540
use view it's a really cool tool I could

00:15:49,280 --> 00:15:54,320
probably do a whole talk on it so I

00:15:50,540 --> 00:15:56,390
can't go into too much detail on it okay

00:15:54,320 --> 00:15:59,660
so setting up your first instance so

00:15:56,390 --> 00:16:02,050
we've got a we've got a box file so

00:15:59,660 --> 00:16:06,680
basically we've got to add that box file

00:16:02,050 --> 00:16:09,740
so you can add a box while also from a

00:16:06,680 --> 00:16:11,720
URL but you add the box file to vagrants

00:16:09,740 --> 00:16:13,280
and then you run vagrant in it so what

00:16:11,720 --> 00:16:15,770
vagrant in it does is it creates you a

00:16:13,280 --> 00:16:19,010
vagrant file and then at the top of that

00:16:15,770 --> 00:16:22,520
vagrant file so if I go back oh sorry i

00:16:19,010 --> 00:16:24,230
meant to go if so you then have to edit

00:16:22,520 --> 00:16:26,930
that vagrant file that it generates and

00:16:24,230 --> 00:16:28,850
put the the name so in this case base

00:16:26,930 --> 00:16:31,600
would be at the top of the file sorry um

00:16:28,850 --> 00:16:33,740
base would be at the top of the file and

00:16:31,600 --> 00:16:35,990
then vagrant up and that would literally

00:16:33,740 --> 00:16:38,720
boot the virtual machine locally on your

00:16:35,990 --> 00:16:39,890
computer so so that's basically your

00:16:38,720 --> 00:16:41,120
first instance but that's not really

00:16:39,890 --> 00:16:42,380
useful because what you're going to have

00:16:41,120 --> 00:16:45,160
is you'll have a version of Linux it's

00:16:42,380 --> 00:16:47,750
not going to have PHP or my sequel on it

00:16:45,160 --> 00:16:49,280
you know anything like that okay so

00:16:47,750 --> 00:16:52,280
let's talk a bit more about the vagrant

00:16:49,280 --> 00:16:55,940
configuration file so I've been through

00:16:52,280 --> 00:16:57,920
the sort of the two top options so the

00:16:55,940 --> 00:16:59,660
option over there configure booting GUI

00:16:57,920 --> 00:17:01,400
mode so booting in GUI mode is quite

00:16:59,660 --> 00:17:02,990
useful because if you bring up a virtual

00:17:01,400 --> 00:17:04,550
machine the default with vagrant is

00:17:02,990 --> 00:17:06,110
headless so you won't even see the

00:17:04,550 --> 00:17:07,670
machine booting but you'll have this

00:17:06,110 --> 00:17:10,160
virtual machine running on your machine

00:17:07,670 --> 00:17:11,570
but it's quite useful for if you you

00:17:10,160 --> 00:17:12,949
know your provision a machine and maybe

00:17:11,570 --> 00:17:14,329
you know there's something wrong and say

00:17:12,949 --> 00:17:15,920
like Apache doesn't start up when the

00:17:14,329 --> 00:17:17,150
machine boots you'll be able to see that

00:17:15,920 --> 00:17:20,630
but generally you can switch that off

00:17:17,150 --> 00:17:22,370
but it is good for debugging then the

00:17:20,630 --> 00:17:25,310
other concept vagueness to kind of

00:17:22,370 --> 00:17:26,630
concepts of networking I won't talk too

00:17:25,310 --> 00:17:28,520
much about port forwarding that's the

00:17:26,630 --> 00:17:30,860
default that comes out the box the other

00:17:28,520 --> 00:17:33,020
thing you can use is host only

00:17:30,860 --> 00:17:34,820
networking it's also more secure by

00:17:33,020 --> 00:17:36,050
default but the idea is is that this

00:17:34,820 --> 00:17:38,360
virtual machine is not going to have an

00:17:36,050 --> 00:17:40,550
IP address so as developers you know we

00:17:38,360 --> 00:17:42,650
used to host names to IP addresses so

00:17:40,550 --> 00:17:44,120
you know in your local hosts file you

00:17:42,650 --> 00:17:46,370
know on your on your machine you can

00:17:44,120 --> 00:17:49,730
start mapping host names you know to IP

00:17:46,370 --> 00:17:50,690
addresses so going to bed back to the

00:17:49,730 --> 00:17:52,310
paradigm of installing everything

00:17:50,690 --> 00:17:53,450
locally the really cool thing with

00:17:52,310 --> 00:17:55,460
installing everything likely

00:17:53,450 --> 00:17:57,080
is you just drop a PHP file into your

00:17:55,460 --> 00:17:59,480
document root you refresh the browser

00:17:57,080 --> 00:18:02,059
and you can see your code and vagrant

00:17:59,480 --> 00:18:03,919
kind of keeps that idea by using a share

00:18:02,059 --> 00:18:06,350
folder right so what you do is you share

00:18:03,919 --> 00:18:08,480
a folder on your machine and that

00:18:06,350 --> 00:18:12,260
folders available on the virtual machine

00:18:08,480 --> 00:18:14,360
so you've got an identifier which is the

00:18:12,260 --> 00:18:16,549
first sort of argument to this share

00:18:14,360 --> 00:18:18,919
folder configuration option so vagrant

00:18:16,549 --> 00:18:20,240
demo will actually be there be a folder

00:18:18,919 --> 00:18:22,820
called vagrant demo that would have

00:18:20,240 --> 00:18:24,649
you'll say your projects folder so over

00:18:22,820 --> 00:18:26,299
I've just shared the current folder min

00:18:24,649 --> 00:18:28,870
so if the have a gun works is with a

00:18:26,299 --> 00:18:31,399
very good file when you run vagrant up

00:18:28,870 --> 00:18:33,590
you in the directory that the vagrant

00:18:31,399 --> 00:18:35,120
file is so I'm just sharing the

00:18:33,590 --> 00:18:37,730
directory I mean but you could you know

00:18:35,120 --> 00:18:40,880
they share you your projects folder

00:18:37,730 --> 00:18:43,159
whatever I switched NFS on so that won't

00:18:40,880 --> 00:18:45,799
work for Windows users and but it's

00:18:43,159 --> 00:18:47,269
pretty useful to do because vagrant

00:18:45,799 --> 00:18:49,070
comes with a default file sharing

00:18:47,269 --> 00:18:51,470
mechanism that's actually really really

00:18:49,070 --> 00:18:54,260
slow and we found this out the hardware

00:18:51,470 --> 00:18:56,299
we had a test of a suite of unit tests

00:18:54,260 --> 00:18:58,309
that was running and as the test Scott

00:18:56,299 --> 00:19:00,110
like more and more they became slower

00:18:58,309 --> 00:19:01,580
and slower so a bit of research it was

00:19:00,110 --> 00:19:04,730
pretty simple on the very good website

00:19:01,580 --> 00:19:06,649
it recommends that you use NFS and we've

00:19:04,730 --> 00:19:08,179
got around us on windows so if you've

00:19:06,649 --> 00:19:09,470
got a Windows developing your team what

00:19:08,179 --> 00:19:11,779
you can do is you can create a samba

00:19:09,470 --> 00:19:17,269
share and then automatically mount that

00:19:11,779 --> 00:19:18,919
share from the virtual machine but if

00:19:17,269 --> 00:19:20,360
you can use NFS use it because it's a

00:19:18,919 --> 00:19:23,889
lot quicker and you don't have any sort

00:19:20,360 --> 00:19:27,169
of like you know delays or slowness um

00:19:23,889 --> 00:19:28,880
okay and then the cool stuff so chef

00:19:27,169 --> 00:19:30,679
solo are give me some examples of chefs

00:19:28,880 --> 00:19:33,260
Tyler and so chefs another thing I could

00:19:30,679 --> 00:19:35,059
probably do a 45-minute talk on but I

00:19:33,260 --> 00:19:36,620
just take you some through some basics

00:19:35,059 --> 00:19:40,279
of it just to give you the concepts and

00:19:36,620 --> 00:19:42,830
the ideas but ideally I'm convicting my

00:19:40,279 --> 00:19:47,960
provisioner so basically I've given the

00:19:42,830 --> 00:19:49,549
path to my cookbooks my rolls the path

00:19:47,960 --> 00:19:53,659
to my rolls and then I'm adding roll

00:19:49,549 --> 00:19:55,669
which is local so just a bit more on

00:19:53,659 --> 00:19:57,559
chef right so chef is our provisioning

00:19:55,669 --> 00:19:59,570
to it was originally built for the cloud

00:19:57,559 --> 00:20:01,700
and this stuff would have been really

00:19:59,570 --> 00:20:04,519
useful to me ten years ago I worked at a

00:20:01,700 --> 00:20:06,139
hosting company where we set up a shade

00:20:04,519 --> 00:20:06,659
servers you know like a shade server and

00:20:06,139 --> 00:20:08,399
you'd have liked

00:20:06,659 --> 00:20:10,080
a few different websites on it and every

00:20:08,399 --> 00:20:12,059
time we commissioned a new sort of

00:20:10,080 --> 00:20:14,099
production server we had like you know

00:20:12,059 --> 00:20:16,859
bash scripts you know pull mixed with

00:20:14,099 --> 00:20:20,700
PHP to kind of you know build this you

00:20:16,859 --> 00:20:22,619
know machine to host websites and it was

00:20:20,700 --> 00:20:24,629
really painful but chef is a

00:20:22,619 --> 00:20:26,249
provisioning tool so yes it was

00:20:24,629 --> 00:20:28,220
originally built for the cloud but if

00:20:26,249 --> 00:20:30,419
you running say did a dedicated server

00:20:28,220 --> 00:20:31,950
you know in a data center you can still

00:20:30,419 --> 00:20:34,289
provision your machine with Chef solo

00:20:31,950 --> 00:20:36,299
chef solo is the free open-source

00:20:34,289 --> 00:20:38,340
version the other configuration of chef

00:20:36,299 --> 00:20:40,679
is chef server which I've never used and

00:20:38,340 --> 00:20:42,229
but that's more painful but it's really

00:20:40,679 --> 00:20:44,190
cool if you've got the money to you know

00:20:42,229 --> 00:20:45,779
pay for that really cool and something

00:20:44,190 --> 00:20:48,359
worth looking at but I'm generally

00:20:45,779 --> 00:20:49,889
talking about Chef solo and it's also

00:20:48,359 --> 00:20:53,039
written in Ruby it's a ruby

00:20:49,889 --> 00:20:56,070
domain-specific language so my explain

00:20:53,039 --> 00:20:57,599
to chef I've written a couple of recipes

00:20:56,070 --> 00:21:00,239
so let me just explain that so the idea

00:20:57,599 --> 00:21:01,409
is it uses cooking terms first of all so

00:21:00,239 --> 00:21:04,349
when you try to google stuff you get

00:21:01,409 --> 00:21:09,299
like cooking books on Amazon which is

00:21:04,349 --> 00:21:11,070
not really useful but you've got this

00:21:09,299 --> 00:21:14,970
idea of a cookbook so you'd have a

00:21:11,070 --> 00:21:16,470
cookbook for Apache for example and then

00:21:14,970 --> 00:21:19,259
you'd have a recipe that would install a

00:21:16,470 --> 00:21:21,210
default install of Apache and then give

00:21:19,259 --> 00:21:22,649
you know Apache we set a default

00:21:21,210 --> 00:21:25,590
configuration and you could obviously

00:21:22,649 --> 00:21:27,299
change that evil configuration and you'd

00:21:25,590 --> 00:21:28,979
have another recipe you know so you'd

00:21:27,299 --> 00:21:31,229
have a recipe that would install the

00:21:28,979 --> 00:21:33,119
Pacific you know module of Apache then

00:21:31,229 --> 00:21:34,950
you have a cookbook for PHP so your

00:21:33,119 --> 00:21:37,409
cookbook for PHP which is install you

00:21:34,950 --> 00:21:40,979
know maybe the base version of PHP say

00:21:37,409 --> 00:21:43,499
you know five point you know 3.22 with

00:21:40,979 --> 00:21:47,729
you know a specific set of you know

00:21:43,499 --> 00:21:49,440
modules and you know there's the really

00:21:47,729 --> 00:21:53,070
really cool thing I like about Chef is

00:21:49,440 --> 00:21:54,989
its backbone Opscode but all the you

00:21:53,070 --> 00:21:57,090
know cookbooks and recipes there's loads

00:21:54,989 --> 00:21:58,919
of free ones out there that are like

00:21:57,090 --> 00:22:01,200
have been deployed to the cloud that

00:21:58,919 --> 00:22:03,479
have been used with vagrant installs and

00:22:01,200 --> 00:22:04,979
and they they all free right it's all

00:22:03,479 --> 00:22:07,019
open source so you can grab them you can

00:22:04,979 --> 00:22:08,340
hack them and mess around with them and

00:22:07,019 --> 00:22:10,349
there's obviously other loads of guys

00:22:08,340 --> 00:22:12,539
you know with github get up accounts

00:22:10,349 --> 00:22:14,070
developers that have written recipes I

00:22:12,539 --> 00:22:15,599
mean there's a recipe to install a

00:22:14,070 --> 00:22:18,419
version of PHP but if you wanted to

00:22:15,599 --> 00:22:19,859
compile PHP from source and compile it

00:22:18,419 --> 00:22:20,370
in the search and a certain way you can

00:22:19,859 --> 00:22:22,559
do that

00:22:20,370 --> 00:22:26,640
right so I've got a basic chef solo

00:22:22,559 --> 00:22:29,190
configuration yeah so so there's my run

00:22:26,640 --> 00:22:31,140
list I mean this is a JSON file so as

00:22:29,190 --> 00:22:33,480
developers we pretty much know JJ's on

00:22:31,140 --> 00:22:35,430
so you've got some recipes I'll just you

00:22:33,480 --> 00:22:39,420
know basically explain a couple so that

00:22:35,430 --> 00:22:40,980
recipe then installing apache too so

00:22:39,420 --> 00:22:42,660
basically what would happen yeah because

00:22:40,980 --> 00:22:47,280
i'm just i'm using that I us

00:22:42,660 --> 00:22:49,740
repositories to get PHP and i'm using

00:22:47,280 --> 00:22:51,090
yum EPL release so if I just use recipe

00:22:49,740 --> 00:22:53,970
apache2 that's probably just going to

00:22:51,090 --> 00:22:55,410
get and the like a lot of time we'll

00:22:53,970 --> 00:22:59,360
just get the latest version but you can

00:22:55,410 --> 00:23:02,130
override that using override attributes

00:22:59,360 --> 00:23:04,170
so I'm also overriding is our overriding

00:23:02,130 --> 00:23:06,300
attributes so you download a recipe off

00:23:04,170 --> 00:23:09,240
the internet but you want to override as

00:23:06,300 --> 00:23:11,760
a particular you know recipe so via I've

00:23:09,240 --> 00:23:14,070
got you know for my sequel I'm

00:23:11,760 --> 00:23:15,390
overriding the root password the package

00:23:14,070 --> 00:23:17,850
name to install so this particular

00:23:15,390 --> 00:23:19,770
recipe that installs PHP that's the

00:23:17,850 --> 00:23:21,540
package name it's five form because i'm

00:23:19,770 --> 00:23:22,679
using the IUS repositories it's just

00:23:21,540 --> 00:23:23,940
going to get the latest version so

00:23:22,679 --> 00:23:25,530
that's not always ideal but it's okay

00:23:23,940 --> 00:23:26,940
for development what you would probably

00:23:25,530 --> 00:23:29,940
want to do is be more specific on your

00:23:26,940 --> 00:23:31,230
version just another thing to keep in

00:23:29,940 --> 00:23:32,880
mind if you start using something like

00:23:31,230 --> 00:23:35,610
share for puffit and provisioning tool

00:23:32,880 --> 00:23:36,840
if you're installing stuff and it's you

00:23:35,610 --> 00:23:38,580
know you're going to pull packages out

00:23:36,840 --> 00:23:40,230
from an external resource if that

00:23:38,580 --> 00:23:41,490
resource is done you know you're not

00:23:40,230 --> 00:23:44,550
going to able to provision your machine

00:23:41,490 --> 00:23:45,690
so sometimes a murder can be useful it's

00:23:44,550 --> 00:23:46,980
not always necessary but it's just

00:23:45,690 --> 00:23:48,929
something to keep in mind because it's

00:23:46,980 --> 00:23:52,380
you know one of those things I can cause

00:23:48,929 --> 00:23:54,510
you a bit of pain so that's a basic in a

00:23:52,380 --> 00:23:56,429
ship solo configuration like I did

00:23:54,510 --> 00:23:58,500
mention I could you know do probably a

00:23:56,429 --> 00:24:00,570
whole talk on it but the idea you know a

00:23:58,500 --> 00:24:02,550
quick recap is we have the vagrant file

00:24:00,570 --> 00:24:04,920
the vagrant file has you know

00:24:02,550 --> 00:24:06,600
configuration options it uses a provider

00:24:04,920 --> 00:24:08,480
which is a you know like a

00:24:06,600 --> 00:24:12,660
virtualization mechanism which is

00:24:08,480 --> 00:24:14,280
virtual box and then a provisional so

00:24:12,660 --> 00:24:18,780
the provision in this case is chef so

00:24:14,280 --> 00:24:20,520
you know like we use and composer for

00:24:18,780 --> 00:24:22,710
our projects we using chef to kind of

00:24:20,520 --> 00:24:25,890
you know manage our dependencies of our

00:24:22,710 --> 00:24:28,080
actual infrastructure ok so I'm a

00:24:25,890 --> 00:24:29,670
developer so my diagram skills you know

00:24:28,080 --> 00:24:31,530
on that crater do apologize this is a

00:24:29,670 --> 00:24:33,330
really basic diagram you know like in

00:24:31,530 --> 00:24:35,640
staging you might have like load balance

00:24:33,330 --> 00:24:37,050
and you know maybe well production you

00:24:35,640 --> 00:24:38,910
might have like 10 machines so I've just

00:24:37,050 --> 00:24:40,560
got a box there but this is a

00:24:38,910 --> 00:24:42,360
visualization of a vagrant workflow that

00:24:40,560 --> 00:24:44,970
I kind of made up but I made this up

00:24:42,360 --> 00:24:47,850
from kind of my work sort of environment

00:24:44,970 --> 00:24:49,800
in the way I kind of would have worked

00:24:47,850 --> 00:24:51,630
in the past and the way we currently you

00:24:49,800 --> 00:24:53,400
know presently working but let's say you

00:24:51,630 --> 00:24:57,000
know we've got you know three developers

00:24:53,400 --> 00:24:58,770
in a team so the idea yeah is that you

00:24:57,000 --> 00:25:00,570
know each development environment is

00:24:58,770 --> 00:25:01,770
generally unique and so when you know

00:25:00,570 --> 00:25:04,100
them with a modern tell available

00:25:01,770 --> 00:25:06,780
environment when it's complex you know

00:25:04,100 --> 00:25:08,790
each one's basically unique so the

00:25:06,780 --> 00:25:10,590
windows developer or let's say the Mac

00:25:08,790 --> 00:25:12,420
developer wants to start using rabbitmq

00:25:10,590 --> 00:25:13,620
you gets a configuration machine you get

00:25:12,420 --> 00:25:14,970
some messages going to know this is

00:25:13,620 --> 00:25:16,980
really cool he's now going to give that

00:25:14,970 --> 00:25:19,050
to the Linux developer the way rabbit in

00:25:16,980 --> 00:25:21,210
queue I'm leaving sure if you can

00:25:19,050 --> 00:25:22,770
install rabbit and Q on Mac OS I mean I

00:25:21,210 --> 00:25:23,910
kind of made that up but you know I

00:25:22,770 --> 00:25:25,890
think you kind of get the general idea

00:25:23,910 --> 00:25:27,600
is that the Linux developer then has to

00:25:25,890 --> 00:25:29,160
instil RabbitMQ hard works on linux is

00:25:27,600 --> 00:25:31,440
maybe a bit different how you compile it

00:25:29,160 --> 00:25:33,720
and so on and so you know that's quite

00:25:31,440 --> 00:25:35,700
tricky and but generally the the

00:25:33,720 --> 00:25:37,170
developers are checking code into like a

00:25:35,700 --> 00:25:38,430
version control system so you've

00:25:37,170 --> 00:25:39,660
generally got that in your vironment or

00:25:38,430 --> 00:25:42,330
at least I hope you're using version

00:25:39,660 --> 00:25:44,310
control and then you've got a deployment

00:25:42,330 --> 00:25:45,960
tool and you push that code RT high

00:25:44,310 --> 00:25:48,600
staging and production that's a really

00:25:45,960 --> 00:25:52,160
basic idea so how would you bring

00:25:48,600 --> 00:25:55,710
vagrant into this environment right and

00:25:52,160 --> 00:25:57,990
that's not working ok so it install

00:25:55,710 --> 00:26:00,180
VirtualBox on each developers machine so

00:25:57,990 --> 00:26:04,020
a version of virtualbox it is still very

00:26:00,180 --> 00:26:06,450
good on each developers machine and the

00:26:04,020 --> 00:26:08,640
idea is that your development

00:26:06,450 --> 00:26:10,110
environment is version so you have a

00:26:08,640 --> 00:26:11,940
vagrant file which is stored in your

00:26:10,110 --> 00:26:15,540
version control system so there has your

00:26:11,940 --> 00:26:17,130
configuration options what you know box

00:26:15,540 --> 00:26:18,630
file using how your provisioning that

00:26:17,130 --> 00:26:20,460
virtual machine so that's all in the

00:26:18,630 --> 00:26:23,610
vagrant file and then in my particular

00:26:20,460 --> 00:26:25,710
case we've got chef silo scripts so you

00:26:23,610 --> 00:26:27,510
know a lot of the time that chef salad

00:26:25,710 --> 00:26:30,240
scripts can replace with a lot of things

00:26:27,510 --> 00:26:32,070
but the idea is is that the Linux

00:26:30,240 --> 00:26:33,720
developer what he would do is he would

00:26:32,070 --> 00:26:36,720
go into ops code on github you'd get a

00:26:33,720 --> 00:26:38,610
recipe that installs you know RabbitMQ

00:26:36,720 --> 00:26:42,810
for example he had added to the run list

00:26:38,610 --> 00:26:45,280
right and then he would check that in to

00:26:42,810 --> 00:26:47,980
the chef solo scripts and

00:26:45,280 --> 00:26:49,510
the other developer he says hey Luke you

00:26:47,980 --> 00:26:50,740
guys have made a change the development

00:26:49,510 --> 00:26:52,870
environment the other developer runs

00:26:50,740 --> 00:26:54,400
vagin provision and that tool then gets

00:26:52,870 --> 00:26:56,980
installed in his development environment

00:26:54,400 --> 00:26:58,660
so getting changes and the idea of

00:26:56,980 --> 00:27:00,340
uniqueness is taken away so we can get

00:26:58,660 --> 00:27:03,130
changes from one development environment

00:27:00,340 --> 00:27:04,660
you know to another so it's really

00:27:03,130 --> 00:27:06,310
really useful but there's a lot of other

00:27:04,660 --> 00:27:08,230
things a lot of other benefits you know

00:27:06,310 --> 00:27:11,500
you get a new developer that joins your

00:27:08,230 --> 00:27:12,850
team right and you've got a really you

00:27:11,500 --> 00:27:15,010
know cool application it's well

00:27:12,850 --> 00:27:16,270
documented and you know he's a good PHP

00:27:15,010 --> 00:27:17,560
developer all he really wants to do is

00:27:16,270 --> 00:27:18,760
write code you doesn't want to spend the

00:27:17,560 --> 00:27:20,020
day or two setting up his development

00:27:18,760 --> 00:27:21,460
environment so you're given the

00:27:20,020 --> 00:27:23,140
development environment you runs Meghan

00:27:21,460 --> 00:27:26,560
up is part of the team and you can start

00:27:23,140 --> 00:27:28,030
writing coach right away you know

00:27:26,560 --> 00:27:29,680
there's also other benefits you know so

00:27:28,030 --> 00:27:32,290
let's say like a new version of PHP

00:27:29,680 --> 00:27:34,740
comes out and there's a really important

00:27:32,290 --> 00:27:37,330
security flaw or something you know you

00:27:34,740 --> 00:27:39,340
devops guy or your sis admins really on

00:27:37,330 --> 00:27:41,260
top of it and he installs it in staging

00:27:39,340 --> 00:27:43,210
you know how you get that back to the

00:27:41,260 --> 00:27:45,550
developers environments so they can have

00:27:43,210 --> 00:27:48,550
the same version or you know it's an or

00:27:45,550 --> 00:27:49,900
developer wants to go from PHP 5.3 25.4

00:27:48,550 --> 00:27:51,790
because I want a new feature so you

00:27:49,900 --> 00:27:53,110
upgrade staging you know then you also

00:27:51,790 --> 00:27:55,780
have to go and upgrade every other

00:27:53,110 --> 00:27:57,190
developers machine but the idea what you

00:27:55,780 --> 00:27:58,540
do there is you change the chef Tyler

00:27:57,190 --> 00:28:01,780
script say well we want to start using

00:27:58,540 --> 00:28:03,880
PHP 5.4 and so you might have provision

00:28:01,780 --> 00:28:04,660
your box with 5.3 so that the cool thing

00:28:03,880 --> 00:28:05,560
is what you could do is you could

00:28:04,660 --> 00:28:07,720
destroy the whole development

00:28:05,560 --> 00:28:09,070
environment you could then run fragran

00:28:07,720 --> 00:28:13,720
up you know have a new development

00:28:09,070 --> 00:28:16,240
environment but you're not on 5.4 okay

00:28:13,720 --> 00:28:19,000
so so that's it i mean i've basically

00:28:16,240 --> 00:28:21,640
spoken about the examples I've given are

00:28:19,000 --> 00:28:24,490
you know a development environment where

00:28:21,640 --> 00:28:26,080
we have you know one virtual machine

00:28:24,490 --> 00:28:27,760
running locally and that's pretty useful

00:28:26,080 --> 00:28:29,830
and that'll serve a lot of use cases for

00:28:27,760 --> 00:28:31,300
a lot of people but when you want to

00:28:29,830 --> 00:28:34,210
start doing really cool stuff you can

00:28:31,300 --> 00:28:35,410
have multiple vm environments and so

00:28:34,210 --> 00:28:38,200
I've just got a snapshot of what a

00:28:35,410 --> 00:28:39,520
multiple vm environment vagrant

00:28:38,200 --> 00:28:41,470
configuration file would look like a

00:28:39,520 --> 00:28:43,240
confident all into one slide but the

00:28:41,470 --> 00:28:46,140
idea is that we have more than one

00:28:43,240 --> 00:28:49,090
virtual machine running locally right so

00:28:46,140 --> 00:28:51,580
multiple vm environments so it's really

00:28:49,090 --> 00:28:54,220
cool the ideas of accurately modding a

00:28:51,580 --> 00:28:57,310
separate web and database server within

00:28:54,220 --> 00:28:58,330
the same development environment and you

00:28:57,310 --> 00:28:59,020
know so you don't to install everything

00:28:58,330 --> 00:29:00,670
like

00:28:59,020 --> 00:29:03,370
bring up to virtual machines one is the

00:29:00,670 --> 00:29:06,550
actual you know web server one is you

00:29:03,370 --> 00:29:09,010
know the development server I mean so

00:29:06,550 --> 00:29:11,860
that the database server or you know you

00:29:09,010 --> 00:29:14,260
want to you know test some varnish VTR

00:29:11,860 --> 00:29:16,870
you know so you can have varnish there

00:29:14,260 --> 00:29:20,160
and you can have apache you know you can

00:29:16,870 --> 00:29:22,690
test it all locally that's really cool

00:29:20,160 --> 00:29:24,300
it's really really useful so modeling a

00:29:22,690 --> 00:29:26,710
cluster of machines is really cool

00:29:24,300 --> 00:29:28,090
locally so you can do that with a multi

00:29:26,710 --> 00:29:30,340
vm vagrant environment if you really

00:29:28,090 --> 00:29:31,690
want to we know testing a load balancer

00:29:30,340 --> 00:29:33,190
and the effects of unplugging the

00:29:31,690 --> 00:29:36,460
machine you can test that or locally you

00:29:33,190 --> 00:29:38,230
know so multi-beam environments with

00:29:36,460 --> 00:29:39,460
fragrant are really really cool if i

00:29:38,230 --> 00:29:41,830
were pletely honest i haven't used them

00:29:39,460 --> 00:29:44,710
a lot i have played around recently

00:29:41,830 --> 00:29:46,180
locally with some of the stuff but I

00:29:44,710 --> 00:29:49,660
talked about a bit more bad where that's

00:29:46,180 --> 00:29:52,110
going in my next couple of slides okay

00:29:49,660 --> 00:29:54,250
so so that's very good in a nutshell

00:29:52,110 --> 00:29:56,560
let's talk a bit about the future though

00:29:54,250 --> 00:29:58,090
so I think it's fair to say we had this

00:29:56,560 --> 00:30:00,940
paradigm we kind of installed everything

00:29:58,090 --> 00:30:02,770
locally and this kind of worked you know

00:30:00,940 --> 00:30:04,930
for a while you know the ecosystem

00:30:02,770 --> 00:30:07,210
changed and then we kind of moved you

00:30:04,930 --> 00:30:08,320
know things forward and so we install

00:30:07,210 --> 00:30:10,330
everything in a virtual machine and

00:30:08,320 --> 00:30:12,220
provision it with a provisional you know

00:30:10,330 --> 00:30:14,260
I like to think about it of it as you

00:30:12,220 --> 00:30:15,730
know we bring in ideas you know we've

00:30:14,260 --> 00:30:17,620
got all these ideas of the cloud and

00:30:15,730 --> 00:30:19,990
running everything in the cloud but it's

00:30:17,620 --> 00:30:23,140
bringing these cool ideas back down to

00:30:19,990 --> 00:30:24,760
our development environments and I think

00:30:23,140 --> 00:30:26,410
the challenges developers we should try

00:30:24,760 --> 00:30:28,060
and keep up you know I think for a long

00:30:26,410 --> 00:30:30,970
time I development environment sucked

00:30:28,060 --> 00:30:33,970
and we did nothing about it now for me

00:30:30,970 --> 00:30:35,620
it's a tool sort of combo partner you

00:30:33,970 --> 00:30:37,510
know and i'll never go you know back to

00:30:35,620 --> 00:30:38,740
you know installing stuff locally and i

00:30:37,510 --> 00:30:40,840
was chatting to a developer yesterday

00:30:38,740 --> 00:30:41,980
and he said to me like you know he

00:30:40,840 --> 00:30:43,570
really enjoys the fact that he doesn't

00:30:41,980 --> 00:30:45,120
have to install stuff locally on his mac

00:30:43,570 --> 00:30:47,920
it's just all in it in a virtual machine

00:30:45,120 --> 00:30:50,410
so first of all I think we owe a lot of

00:30:47,920 --> 00:30:52,360
thanks to this guy I don't know if any

00:30:50,410 --> 00:30:55,240
of you know is it's a Mitchell has a

00:30:52,360 --> 00:30:58,720
moto he's the guy that started vagrant

00:30:55,240 --> 00:31:00,100
and and so it was kind of like you know

00:30:58,720 --> 00:31:01,600
related to what Errol spoke about

00:31:00,100 --> 00:31:03,370
yesterday a few in the keynote you know

00:31:01,600 --> 00:31:04,780
he was like in the speech he really

00:31:03,370 --> 00:31:06,700
talks about it but like you know

00:31:04,780 --> 00:31:08,370
installing stuff locally sucks you know

00:31:06,700 --> 00:31:11,020
like he had to he worked it like a

00:31:08,370 --> 00:31:12,429
company where he was working on you know

00:31:11,020 --> 00:31:13,869
different Ruby projects

00:31:12,429 --> 00:31:15,820
change from project to project every

00:31:13,869 --> 00:31:17,590
time and you found that like you know he

00:31:15,820 --> 00:31:18,909
would like in a builder website for

00:31:17,590 --> 00:31:22,450
someone I never come back like you know

00:31:18,909 --> 00:31:24,399
two months later and say you know we

00:31:22,450 --> 00:31:25,809
need some changes and he found that you

00:31:24,399 --> 00:31:28,330
know like really difficult to like you

00:31:25,809 --> 00:31:29,679
know if that application was specific to

00:31:28,330 --> 00:31:32,230
then you know configures development

00:31:29,679 --> 00:31:34,389
environment again but there's been some

00:31:32,230 --> 00:31:36,789
recent developments that are really i

00:31:34,389 --> 00:31:39,129
found really interesting it recently

00:31:36,789 --> 00:31:40,869
started a company called her she cope so

00:31:39,129 --> 00:31:43,389
first of all he's keeping vagrant

00:31:40,869 --> 00:31:45,129
completely open source and but he's

00:31:43,389 --> 00:31:47,669
basically quit his job full time and

00:31:45,129 --> 00:31:50,679
he's gone into into into vagin full-time

00:31:47,669 --> 00:31:51,970
and that's really cool because already

00:31:50,679 --> 00:31:54,759
in the couple of months that he's been

00:31:51,970 --> 00:31:55,990
doing it full time I've seen some really

00:31:54,759 --> 00:31:59,769
cool developments which I'm going to

00:31:55,990 --> 00:32:02,980
talk about now he's a really good guy

00:31:59,769 --> 00:32:05,470
and I've had one or two emails to him

00:32:02,980 --> 00:32:06,820
awesome a couple of questions and kind

00:32:05,470 --> 00:32:08,139
of a bad way vague and was going so I

00:32:06,820 --> 00:32:09,519
could you know I do this talk and he he

00:32:08,139 --> 00:32:11,230
kind of got back to me but he obviously

00:32:09,519 --> 00:32:12,940
couldn't tell me everything but one

00:32:11,230 --> 00:32:14,470
thing he did say was that you know his

00:32:12,940 --> 00:32:18,070
vision for vagrant was to have it at a

00:32:14,470 --> 00:32:19,059
version 2 in 18 months time and but

00:32:18,070 --> 00:32:21,100
there are going to be a lot of cool

00:32:19,059 --> 00:32:24,249
version features and stuff in versions

00:32:21,100 --> 00:32:27,789
1.1 1.2 and 1.3 but let's talk about the

00:32:24,249 --> 00:32:29,529
new vagrant providers right so the thing

00:32:27,789 --> 00:32:31,809
with vagrant is that it was always tied

00:32:29,529 --> 00:32:33,279
to virtual box right so your

00:32:31,809 --> 00:32:35,860
virtualization was virtual box and that

00:32:33,279 --> 00:32:37,929
was that so Mitchell went into a

00:32:35,860 --> 00:32:39,700
full-time he said okay well you know

00:32:37,929 --> 00:32:42,429
lets you know d couple these two things

00:32:39,700 --> 00:32:44,679
you know let's take the idea of the

00:32:42,429 --> 00:32:48,970
provider one step forward right so you

00:32:44,679 --> 00:32:50,590
can use VMware with fragrant when one

00:32:48,970 --> 00:32:53,080
point one is art I actually don't know

00:32:50,590 --> 00:32:57,159
what the exact release day of a vagrant

00:32:53,080 --> 00:32:58,960
1.1 is and but the really cool thing is

00:32:57,159 --> 00:33:01,659
at the open source right so you can use

00:32:58,960 --> 00:33:05,139
if you want to use VMware you can use

00:33:01,659 --> 00:33:07,539
VMware if you want to use Amazon ec2 you

00:33:05,139 --> 00:33:09,009
can vmware is going to be a paid plug on

00:33:07,539 --> 00:33:10,749
but from what he said to me in the email

00:33:09,009 --> 00:33:13,299
he said that it will be affordable for

00:33:10,749 --> 00:33:15,490
developers and companies so and to be

00:33:13,299 --> 00:33:17,139
completely honest you know the idea of a

00:33:15,490 --> 00:33:19,330
green is really cool i think one of the

00:33:17,139 --> 00:33:20,919
things that does suck about is virtual

00:33:19,330 --> 00:33:23,080
box I mean I've had some weird things

00:33:20,919 --> 00:33:24,390
where my you know file system just you

00:33:23,080 --> 00:33:25,650
know becomes corrupted and then I

00:33:24,390 --> 00:33:27,870
to destroy my virtual machine and then

00:33:25,650 --> 00:33:30,120
just recreate it and that's definitely

00:33:27,870 --> 00:33:31,500
gotten better and it's definitely

00:33:30,120 --> 00:33:33,450
improving all the time with virtualbox

00:33:31,500 --> 00:33:37,290
and you know is it definitely a lot more

00:33:33,450 --> 00:33:39,990
stable but you do have the option to you

00:33:37,290 --> 00:33:41,760
know you these other providers so when

00:33:39,990 --> 00:33:43,740
you run very good up right without any

00:33:41,760 --> 00:33:45,810
changes to your vagrant configuration

00:33:43,740 --> 00:33:48,180
file you can run vagrant I provider

00:33:45,810 --> 00:33:49,680
equals AWS right I bring up your

00:33:48,180 --> 00:33:51,540
development environment in the card and

00:33:49,680 --> 00:33:53,820
that's quite cool especially when you

00:33:51,540 --> 00:33:55,920
start doing multiple vm stuff right so

00:33:53,820 --> 00:33:58,020
you can use a vagrant file locally and

00:33:55,920 --> 00:33:59,790
then bring up you know services you know

00:33:58,020 --> 00:34:01,260
in the card and you can actually test

00:33:59,790 --> 00:34:02,910
your provisioning scripts on the actual

00:34:01,260 --> 00:34:04,290
surface like they're going to run but it

00:34:02,910 --> 00:34:05,580
just brings up you know so many use

00:34:04,290 --> 00:34:07,770
cases i'm sure people are going to come

00:34:05,580 --> 00:34:09,510
with really you know cool ideas but

00:34:07,770 --> 00:34:11,429
essentially you can start managing your

00:34:09,510 --> 00:34:13,919
development environment QA staging

00:34:11,429 --> 00:34:16,159
production or from vagrant which is a

00:34:13,919 --> 00:34:18,720
command line tool which is really cool

00:34:16,159 --> 00:34:20,640
ok so collaboration is everything right

00:34:18,720 --> 00:34:25,740
we all open source will like open source

00:34:20,640 --> 00:34:27,659
and PHP is open source and I saw a

00:34:25,740 --> 00:34:30,659
vagrant file in the joined in project

00:34:27,659 --> 00:34:32,310
and so the idea that I think we're going

00:34:30,659 --> 00:34:33,690
to see more and more going forward and I

00:34:32,310 --> 00:34:35,220
think you're probably starting to see it

00:34:33,690 --> 00:34:37,140
like I was in the advanced JavaScript

00:34:35,220 --> 00:34:38,850
talk yesterday and one at the end the

00:34:37,140 --> 00:34:40,860
guy said well you know he's created a

00:34:38,850 --> 00:34:42,120
development environment for the samples

00:34:40,860 --> 00:34:48,450
for his coat and that's really really

00:34:42,120 --> 00:34:49,770
cool so the idea is it's quite cool so

00:34:48,450 --> 00:34:51,899
it's part of the source code in your

00:34:49,770 --> 00:34:53,399
project you have a vagrant file so if

00:34:51,899 --> 00:34:54,720
you want to develop it to contribute to

00:34:53,399 --> 00:34:56,820
your project you provide him with a

00:34:54,720 --> 00:34:57,960
vagrant file it runs very grown-up it

00:34:56,820 --> 00:34:59,730
gets the developer environment you can

00:34:57,960 --> 00:35:01,650
start hacking on code away you know

00:34:59,730 --> 00:35:03,030
straight away I saw something to with I

00:35:01,650 --> 00:35:04,740
think it's the zend framework one has a

00:35:03,030 --> 00:35:07,740
really cool thing that it uses vagrant

00:35:04,740 --> 00:35:09,090
where you can kind of you can boot of a

00:35:07,740 --> 00:35:10,650
vagrant virtual machine and then there's

00:35:09,090 --> 00:35:12,080
some like bash scripts in their machine

00:35:10,650 --> 00:35:14,130
and you can change the version of PHP

00:35:12,080 --> 00:35:15,320
you know I think that's for the empty

00:35:14,130 --> 00:35:18,270
like you know sort of test different

00:35:15,320 --> 00:35:19,500
versions and stuff but it really takes

00:35:18,270 --> 00:35:21,480
the art you know I mean it takes the

00:35:19,500 --> 00:35:23,010
idea of collaboration fought a lot like

00:35:21,480 --> 00:35:26,910
you know we all know how key tubs

00:35:23,010 --> 00:35:28,890
changed everything you know and so vagin

00:35:26,910 --> 00:35:30,840
for collaboration as it evolves i think

00:35:28,890 --> 00:35:31,920
you know i think personally I think the

00:35:30,840 --> 00:35:34,020
de facto standard you just have a

00:35:31,920 --> 00:35:35,610
vagrant file in the project and so the

00:35:34,020 --> 00:35:36,990
developer just has to bring very good up

00:35:35,610 --> 00:35:37,420
and write PHP code that's what we want

00:35:36,990 --> 00:35:38,380
to do

00:35:37,420 --> 00:35:39,880
we want to write code and solve problems

00:35:38,380 --> 00:35:42,210
we don't want to sit for two days

00:35:39,880 --> 00:35:45,670
configuring our development environment

00:35:42,210 --> 00:35:48,670
so very good 1.1 and the plug-in system

00:35:45,670 --> 00:35:51,730
is completely rewritten and so I showed

00:35:48,670 --> 00:35:54,130
you a vmware and amazon ec2 if you don't

00:35:51,730 --> 00:35:55,960
want to use one of those providers you

00:35:54,130 --> 00:35:57,220
don't have to you can write your own so

00:35:55,960 --> 00:36:00,099
if you want to do plug veiling into

00:35:57,220 --> 00:36:01,240
OpenStack into terremark or tarot pack i

00:36:00,099 --> 00:36:02,740
think it's called or whatever

00:36:01,240 --> 00:36:05,319
virtualization institution you have you

00:36:02,740 --> 00:36:07,660
can obviously that's going to evolve

00:36:05,319 --> 00:36:09,309
more and more and more but the first

00:36:07,660 --> 00:36:10,690
concept and ideal this is in very good

00:36:09,309 --> 00:36:14,980
one point and I'm pretty excited about

00:36:10,690 --> 00:36:17,109
that it is Ruby those so you know maybe

00:36:14,980 --> 00:36:18,760
we can write a PHP rapper or something I

00:36:17,109 --> 00:36:19,930
don't know but you know the idea is you

00:36:18,760 --> 00:36:21,309
know we all like challenges say if you

00:36:19,930 --> 00:36:24,819
wanted to learn some Reba code and write

00:36:21,309 --> 00:36:26,650
your own plugin you know you can then on

00:36:24,819 --> 00:36:28,119
the the provisioners like chefs I said

00:36:26,650 --> 00:36:30,549
you can use puffer and you know bash

00:36:28,119 --> 00:36:32,230
scripts if you really wanted to you can

00:36:30,549 --> 00:36:33,849
write your own provisioner right so you

00:36:32,230 --> 00:36:36,130
want to build something in house and

00:36:33,849 --> 00:36:38,440
that's really cool and I think the idea

00:36:36,130 --> 00:36:40,119
you know Mitchell certain one of his

00:36:38,440 --> 00:36:41,530
talks that he said he wants to start

00:36:40,119 --> 00:36:43,030
seeing a marketplace so I think there's

00:36:41,530 --> 00:36:44,530
an opportunity here for the developers

00:36:43,030 --> 00:36:46,480
you know like the marketplace for the

00:36:44,530 --> 00:36:47,950
absolute camera but you know maybe you

00:36:46,480 --> 00:36:49,420
write a really cool plugin right that

00:36:47,950 --> 00:36:51,040
other but other developers want to use

00:36:49,420 --> 00:36:52,960
you could maybe soul that right and make

00:36:51,040 --> 00:36:54,490
some money out of it or you know you

00:36:52,960 --> 00:36:56,079
maybe want to in a district you know

00:36:54,490 --> 00:36:57,549
other developers that are lazy you know

00:36:56,079 --> 00:36:59,559
you can you know maybe a marketplace for

00:36:57,549 --> 00:37:01,780
box files and so on but this really is

00:36:59,559 --> 00:37:03,640
an opportunity there and so what's

00:37:01,780 --> 00:37:05,500
coming up I think you know he couldn't

00:37:03,640 --> 00:37:07,569
give me details but he's got i'm looking

00:37:05,500 --> 00:37:09,460
forward same with vagin 1.2 and 1.3

00:37:07,569 --> 00:37:10,930
because he's working on full time and

00:37:09,460 --> 00:37:13,150
because people are contributing it and

00:37:10,930 --> 00:37:14,619
he can manage those contributions of egg

00:37:13,150 --> 00:37:17,950
and a lot better it's really going to

00:37:14,619 --> 00:37:21,040
evolve quickly um yeah so just in

00:37:17,950 --> 00:37:22,960
summary i think you know we had you know

00:37:21,040 --> 00:37:24,099
this paradigm install local that kind of

00:37:22,960 --> 00:37:25,390
sucked because I development

00:37:24,099 --> 00:37:27,520
environments have become more complex

00:37:25,390 --> 00:37:29,290
you know we've not virtualized them and

00:37:27,520 --> 00:37:32,109
so we install everything in a virtual

00:37:29,290 --> 00:37:34,210
machine and provision it and and then

00:37:32,109 --> 00:37:36,099
you know sort of the future sort of way

00:37:34,210 --> 00:37:36,970
vagrant moving I think it's going to be

00:37:36,099 --> 00:37:40,299
the future of our development

00:37:36,970 --> 00:37:42,640
environments for a lot of us and it's

00:37:40,299 --> 00:37:44,319
definitely something to watch out for so

00:37:42,640 --> 00:37:46,329
just the demo this is the demo I put

00:37:44,319 --> 00:37:48,760
together for PHP London I haven't run it

00:37:46,329 --> 00:37:50,980
recently um if it does break or

00:37:48,760 --> 00:37:54,550
something just tweet me and I'll fix it

00:37:50,980 --> 00:37:55,990
a little bit lazy but the idea is if you

00:37:54,550 --> 00:37:59,260
get you download a version of virtual

00:37:55,990 --> 00:38:01,330
box and you download a vagrant package I

00:37:59,260 --> 00:38:05,880
think vagrant one point zero point six

00:38:01,330 --> 00:38:09,609
is art I haven't tested it with 1.6 but

00:38:05,880 --> 00:38:12,310
you just add add that sort of to your

00:38:09,609 --> 00:38:14,140
hosts file you get the project you run a

00:38:12,310 --> 00:38:15,640
vagrant up not no provision so that'll

00:38:14,140 --> 00:38:17,590
just boot the virtual machine and you

00:38:15,640 --> 00:38:19,540
can run vagin provision to see how the

00:38:17,590 --> 00:38:24,300
provisioning works and if you browse to

00:38:19,540 --> 00:38:27,460
vacant demo in your browser you'll have

00:38:24,300 --> 00:38:28,660
you know project on your machine so if

00:38:27,460 --> 00:38:32,350
you go into the virtual house you can

00:38:28,660 --> 00:38:34,810
sort of started it in the code and so so

00:38:32,350 --> 00:38:37,660
yeah so that's a quick demo I put put

00:38:34,810 --> 00:38:41,619
together and if you can this is my first

00:38:37,660 --> 00:38:44,980
talk i feeI covered what i wanted to

00:38:41,619 --> 00:38:47,140
cover i'm going to be around you know

00:38:44,980 --> 00:38:49,119
most of the day in this evening and or

00:38:47,140 --> 00:38:50,770
if you want to email me i can you just

00:38:49,119 --> 00:38:52,119
tweet me or the direct measure me on

00:38:50,770 --> 00:38:55,240
twitter i can send me more i see if you

00:38:52,119 --> 00:38:56,680
got some questions but yeah i really

00:38:55,240 --> 00:38:59,260
would appreciate some feedback you know

00:38:56,680 --> 00:39:01,300
even if it's negative you know i can try

00:38:59,260 --> 00:39:03,940
and improve this talk improve in other

00:39:01,300 --> 00:39:05,140
way I talk so yeah I really would

00:39:03,940 --> 00:39:06,250
appreciate some feedback and also for

00:39:05,140 --> 00:39:08,200
the other developers you know it takes

00:39:06,250 --> 00:39:09,640
time to put together you know talks and

00:39:08,200 --> 00:39:11,650
stuff and you know everyone's given up

00:39:09,640 --> 00:39:14,050
their free time to give a talk so you

00:39:11,650 --> 00:39:17,619
know speakers really appreciate some

00:39:14,050 --> 00:39:22,690
feedback okay so gotta think about five

00:39:17,619 --> 00:39:26,380
minutes for questions if yeah sorry was

00:39:22,690 --> 00:39:28,690
so oh the slide the slides will be

00:39:26,380 --> 00:39:30,280
there'll be a link on the so so you said

00:39:28,690 --> 00:39:34,810
we can you get the slides the slides

00:39:30,280 --> 00:39:36,580
will be and on the joined in talk and so

00:39:34,810 --> 00:39:41,680
yeah I'll put them up there shortly

00:39:36,580 --> 00:39:45,330
after this another question over here

00:39:41,680 --> 00:39:45,330
source code do you keep that locally

00:39:51,600 --> 00:39:57,220
yeah okay so the source codes are

00:39:54,580 --> 00:40:01,450
locally on your machine right okay and

00:39:57,220 --> 00:40:02,980
and so you basically using that

00:40:01,450 --> 00:40:04,540
configuration option I showed I probably

00:40:02,980 --> 00:40:06,850
go over quite quickly you share that

00:40:04,540 --> 00:40:09,310
folder and you're on your host machine

00:40:06,850 --> 00:40:10,990
with the virtual machine right so you

00:40:09,310 --> 00:40:12,400
still editing code locally so that's

00:40:10,990 --> 00:40:13,900
still that paradigm of editing code

00:40:12,400 --> 00:40:15,250
locally when you bring the virtual

00:40:13,900 --> 00:40:18,670
machine down the code still on your

00:40:15,250 --> 00:40:21,550
machine and I mean if you wanted to you

00:40:18,670 --> 00:40:23,080
could you know when the machine boots

00:40:21,550 --> 00:40:24,910
pull your source code down and then it

00:40:23,080 --> 00:40:26,290
disappears you know if you want to do

00:40:24,910 --> 00:40:30,000
something like that you can but

00:40:26,290 --> 00:40:32,140
generally you keep the code locally okay

00:40:30,000 --> 00:40:36,550
I've got a questionable blonde from the

00:40:32,140 --> 00:40:38,950
one yeah VMware yeah so it's coming as I

00:40:36,550 --> 00:40:42,820
understand it yeah it is like it's an

00:40:38,950 --> 00:40:44,440
imminent release 1.1 somali i mean i can

00:40:42,820 --> 00:40:46,780
go google officers coming out soon so

00:40:44,440 --> 00:40:52,060
now that the problem my question is more

00:40:46,780 --> 00:40:54,040
about do you know about any problems or

00:40:52,060 --> 00:40:56,410
differences between the implementation

00:40:54,040 --> 00:40:58,390
for virtual box and for vmware or is it

00:40:56,410 --> 00:41:02,440
going to be as seamless if not a better

00:40:58,390 --> 00:41:04,510
experience that with virtualbox i think

00:41:02,440 --> 00:41:05,680
it's going to be better so one thing

00:41:04,510 --> 00:41:08,230
mitchell has said is that a lot of

00:41:05,680 --> 00:41:10,060
people are requesting support obviously

00:41:08,230 --> 00:41:12,780
you know bigger companies and so on I

00:41:10,060 --> 00:41:14,800
mean I'll be completely honest the idea

00:41:12,780 --> 00:41:16,450
validation with vagrant is really good

00:41:14,800 --> 00:41:18,460
right the idea is really good but

00:41:16,450 --> 00:41:20,110
VirtualBox has sucked I mean I have had

00:41:18,460 --> 00:41:22,570
some issues with it i'll be honest i

00:41:20,110 --> 00:41:24,220
haven't rebuild my machine for a long

00:41:22,570 --> 00:41:26,110
time because i think newer versions have

00:41:24,220 --> 00:41:27,340
got a lot more stable but i think you

00:41:26,110 --> 00:41:28,990
know that's kind of you know what you

00:41:27,340 --> 00:41:30,640
tryna and I mean there's something to be

00:41:28,990 --> 00:41:32,890
aware of but I mean you know no

00:41:30,640 --> 00:41:35,620
technology is perfect and I'm hoping

00:41:32,890 --> 00:41:37,650
because it's a paid plugin you know that

00:41:35,620 --> 00:41:41,260
obviously there'll be more focused on it

00:41:37,650 --> 00:41:42,790
you know but you know people you know if

00:41:41,260 --> 00:41:44,200
something does go wrong you know we

00:41:42,790 --> 00:41:45,970
ought developers we all like a challenge

00:41:44,200 --> 00:41:48,700
so you know contribute back to the

00:41:45,970 --> 00:41:51,700
project and you know if you know but you

00:41:48,700 --> 00:41:52,090
know it yeah it's a bit of a tough one I

00:41:51,700 --> 00:41:55,420
mean

00:41:52,090 --> 00:41:57,700
so yeah I do i do actually agree because

00:41:55,420 --> 00:42:00,280
i use virtualbox now i'm using vmware

00:41:57,700 --> 00:42:02,290
and i find it so much better so using

00:42:00,280 --> 00:42:06,370
vmware ready with ya no no i'm just

00:42:02,290 --> 00:42:07,600
using vmware ok but did you say that the

00:42:06,370 --> 00:42:09,460
plugin is going to be commercial you

00:42:07,600 --> 00:42:11,050
have to pay for it yes that's correct

00:42:09,460 --> 00:42:13,120
you have to pay for it but he did say is

00:42:11,050 --> 00:42:15,760
going to make it affordable right so i

00:42:13,120 --> 00:42:17,650
think that's pretty I mean you said it's

00:42:15,760 --> 00:42:19,300
going to make it affordable I mean I

00:42:17,650 --> 00:42:20,530
don't think it's just going to drop

00:42:19,300 --> 00:42:23,500
support for Virtual Box I don't think

00:42:20,530 --> 00:42:25,960
it's going to happen you know the

00:42:23,500 --> 00:42:27,880
initial support with a vmware is vmware

00:42:25,960 --> 00:42:30,460
fusion but vmware is also going to add

00:42:27,880 --> 00:42:33,220
support at some point for and I think

00:42:30,460 --> 00:42:34,750
it's vsphere and there's another sort of

00:42:33,220 --> 00:42:37,480
version of vmware I mean a lot of

00:42:34,750 --> 00:42:39,100
companies are using VMware you know so

00:42:37,480 --> 00:42:41,290
they might have licenses already and so

00:42:39,100 --> 00:42:44,080
on the key cities going to make it

00:42:41,290 --> 00:42:45,340
affordable you know I don't know what

00:42:44,080 --> 00:42:46,840
affordable easy couldn't give me exact

00:42:45,340 --> 00:42:47,830
pricing but you know 20 pounds or

00:42:46,840 --> 00:42:49,330
something you know if it's going to make

00:42:47,830 --> 00:42:53,710
your life easier i'd probably be willing

00:42:49,330 --> 00:42:56,050
to pay that ok thanks a lot yeah yeah

00:42:53,710 --> 00:42:58,830
sure i'll just shout it and you should

00:42:56,050 --> 00:43:01,780
hear it yeah okay it's kind of weird

00:42:58,830 --> 00:43:03,880
hello yeah I just wondering if there was

00:43:01,780 --> 00:43:06,100
anything built in that would allow for

00:43:03,880 --> 00:43:10,330
customization on a user by user basis

00:43:06,100 --> 00:43:12,430
for ssh keys or config files that people

00:43:10,330 --> 00:43:13,930
want to customize for their their

00:43:12,430 --> 00:43:17,890
servers when they're when they're

00:43:13,930 --> 00:43:20,200
accessing them yeah okay so something

00:43:17,890 --> 00:43:24,550
bolting for like you so customization

00:43:20,200 --> 00:43:26,740
sort of / developer not that I know sort

00:43:24,550 --> 00:43:28,650
of you know at the box but I mean if you

00:43:26,740 --> 00:43:33,520
if you wanted to do something like that

00:43:28,650 --> 00:43:34,930
you certainly could maybe it's sort of a

00:43:33,520 --> 00:43:36,190
better question to sort of answer

00:43:34,930 --> 00:43:39,790
afterwards but I mean if you wanted to

00:43:36,190 --> 00:43:42,220
customize you know / developer so in

00:43:39,790 --> 00:43:45,270
terms of ssh keys and stuff you

00:43:42,220 --> 00:43:48,310
definitely could how you would do that

00:43:45,270 --> 00:43:49,510
yeah i mean i can probably think of an

00:43:48,310 --> 00:43:51,010
example but i'm sure you could do

00:43:49,510 --> 00:43:52,600
something like that for sure so i could

00:43:51,010 --> 00:43:54,100
see why you'd want to do that you know

00:43:52,600 --> 00:43:55,840
like you know each developer has a

00:43:54,100 --> 00:43:57,280
different key to maybe so they've only

00:43:55,840 --> 00:43:58,510
got you know there may be locked down to

00:43:57,280 --> 00:44:01,540
different device environment so it's

00:43:58,510 --> 00:44:03,490
actually probably a pretty useful use

00:44:01,540 --> 00:44:05,670
kites and concept but maybe catch you

00:44:03,490 --> 00:44:10,990
often we can talk about that a bit more

00:44:05,670 --> 00:44:15,460
so another question and I've got wise

00:44:10,990 --> 00:44:17,920
can ask now and now you mentioned using

00:44:15,460 --> 00:44:23,200
virtualbox and Samba and having

00:44:17,920 --> 00:44:24,940
performance issues yeah so see what I

00:44:23,200 --> 00:44:29,080
was going to ask is cuz I'm running

00:44:24,940 --> 00:44:34,060
virtual box and sambar and it runs like

00:44:29,080 --> 00:44:37,840
a dog a sick dog and I'm wondering

00:44:34,060 --> 00:44:40,710
whether switching to NFS would improve

00:44:37,840 --> 00:44:43,690
that or whether that's just virtual box

00:44:40,710 --> 00:44:45,250
yeah it's quite interesting because I'll

00:44:43,690 --> 00:44:46,720
tell it to some guys at the pier to be

00:44:45,250 --> 00:44:50,110
London meet up and they also said that

00:44:46,720 --> 00:44:51,790
they were using linux and you know it

00:44:50,110 --> 00:44:55,180
was really really slow I haven't had

00:44:51,790 --> 00:44:57,070
problems you know so much I had problems

00:44:55,180 --> 00:44:58,930
then I switched on NFS and had solved it

00:44:57,070 --> 00:45:03,520
I mean are you using Windows locally on

00:44:58,930 --> 00:45:06,250
your machine yes a Windows host ok so

00:45:03,520 --> 00:45:09,250
the next guest and you've got a son

00:45:06,250 --> 00:45:10,869
Bashir I mean you might find it could be

00:45:09,250 --> 00:45:11,980
maybe summer configuration I don't know

00:45:10,869 --> 00:45:13,630
if you've played around that a bit it

00:45:11,980 --> 00:45:14,590
might be like specific versions of

00:45:13,630 --> 00:45:16,300
something that are given you an issue

00:45:14,590 --> 00:45:17,920
and I think that's what it does come

00:45:16,300 --> 00:45:20,980
down to because we've got a Windows

00:45:17,920 --> 00:45:22,600
developer he's got a son Bashir and he

00:45:20,980 --> 00:45:27,100
generally complains when the unit tests

00:45:22,600 --> 00:45:28,570
slow down so when they do slow down it's

00:45:27,100 --> 00:45:30,940
generally the unit tests and not you

00:45:28,570 --> 00:45:32,920
know the actual file share so I mean

00:45:30,940 --> 00:45:34,720
look here I'm not going to stand here

00:45:32,920 --> 00:45:36,250
and say you know vagrants perfect there

00:45:34,720 --> 00:45:37,690
are some issues with it but I think the

00:45:36,250 --> 00:45:40,600
idea is right you know and it's how we

00:45:37,690 --> 00:45:42,070
move that idea Ford you know I mean it

00:45:40,600 --> 00:45:43,420
might be worth you know troubleshooting

00:45:42,070 --> 00:45:44,680
and maybe planar look at like some were

00:45:43,420 --> 00:45:45,940
configurations office because maybe you

00:45:44,680 --> 00:45:47,590
come up with a really cool solution you

00:45:45,940 --> 00:45:49,359
can blog about it you know send it to

00:45:47,590 --> 00:45:52,060
Mitchell and you know to make people

00:45:49,359 --> 00:45:53,440
aware of it you know if it's um put it

00:45:52,060 --> 00:45:57,700
here that you know some of those things

00:45:53,440 --> 00:46:00,490
cool thanks ok so i think that's that's

00:45:57,700 --> 00:46:01,870
time so thanks very much guys thanks for

00:46:00,490 --> 00:46:03,930
your time

00:46:01,870 --> 00:46:03,930
you

00:46:14,830 --> 00:46:16,890

YouTube URL: https://www.youtube.com/watch?v=L6qA_djDHDc


