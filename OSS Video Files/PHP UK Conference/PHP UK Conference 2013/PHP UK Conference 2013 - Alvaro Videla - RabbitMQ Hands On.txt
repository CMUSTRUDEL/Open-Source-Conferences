Title: PHP UK Conference 2013 - Alvaro Videla - RabbitMQ Hands On
Publication date: 2013-04-29
Playlist: PHP UK Conference 2013
Description: 
	In this talk we are going to see a short theoretical introduction to RabbitMQ and messaging in general to later dive into a live coding session to see how implement messaging into our applications. The live demo will go from starting the server and issuing basic administration commands up to creating several consumers and publishers. We will implement use cases ranging from a basic queue server to a publish subscribe system. The goal of the talk is two fold: to see how easy is to implement a solution around messaging and to understand that we don't need to be a "big player" in order to take advantage of RabbitMQ.
Captions: 
	00:00:13,910 --> 00:00:19,890
okay welcome everyone and this top will

00:00:17,340 --> 00:00:22,470
be rabbitmq handsome as you can see it

00:00:19,890 --> 00:00:25,020
will be only my hands on but that's a

00:00:22,470 --> 00:00:27,930
part of the plan my name is Alvaro I

00:00:25,020 --> 00:00:29,969
work for for vmware i'm actually a

00:00:27,930 --> 00:00:33,090
developer advocate for cloud foundry and

00:00:29,969 --> 00:00:34,590
RabbitMQ us as well so this morning some

00:00:33,090 --> 00:00:36,329
guy asked me like so you work for three

00:00:34,590 --> 00:00:39,660
companies at the same time non-sexually

00:00:36,329 --> 00:00:44,550
being we're on classf andreea rabbitmq

00:00:39,660 --> 00:00:47,400
and i'm also if you know like from like

00:00:44,550 --> 00:00:48,900
the last century I created that I told

00:00:47,400 --> 00:00:52,380
me this is like six months ago it's too

00:00:48,900 --> 00:00:56,010
too old I'm still like Jade riding the

00:00:52,380 --> 00:00:58,050
wave of Fame anyway and i'm the author

00:00:56,010 --> 00:01:01,200
of the google rabbitmq in action which i

00:00:58,050 --> 00:01:03,060
plan to give away today if you ever saw

00:01:01,200 --> 00:01:05,939
one of my talks you know how to get this

00:01:03,060 --> 00:01:10,380
book if you didn't then I will I will

00:01:05,939 --> 00:01:11,909
find a way to give it away but in some

00:01:10,380 --> 00:01:15,149
conference in the airline conference

00:01:11,909 --> 00:01:17,189
mostly they know the secret anyway so my

00:01:15,149 --> 00:01:18,870
first question I need to ask is why do

00:01:17,189 --> 00:01:20,940
you need messaging and actually it

00:01:18,870 --> 00:01:25,380
should be why do we need messaging

00:01:20,940 --> 00:01:28,140
because yeah yeah I think this is a bit

00:01:25,380 --> 00:01:32,460
pretentious to phrase that this way but

00:01:28,140 --> 00:01:34,799
anyway and to explain that I want to go

00:01:32,460 --> 00:01:37,440
through how we build like classic web

00:01:34,799 --> 00:01:42,180
apps and from there try to understand

00:01:37,440 --> 00:01:44,159
why we need messaging so let's say I

00:01:42,180 --> 00:01:46,290
always give this example i think is

00:01:44,159 --> 00:01:48,600
pretty straightforward to follow and

00:01:46,290 --> 00:01:51,630
understand if we need to implement a

00:01:48,600 --> 00:01:53,610
photo gallery on image gallery and then

00:01:51,630 --> 00:01:56,130
we get some mock up with chase we need

00:01:53,610 --> 00:01:58,770
to upload a picture and then display the

00:01:56,130 --> 00:02:00,869
gallery pretty easy and and we say okay

00:01:58,770 --> 00:02:04,369
i can i can implement that it will take

00:02:00,869 --> 00:02:07,110
me one week what not it's pretty simple

00:02:04,369 --> 00:02:10,049
until we start getting new requirement

00:02:07,110 --> 00:02:12,120
as usual I mean whoever sit down and

00:02:10,049 --> 00:02:16,019
implement something right away as it was

00:02:12,120 --> 00:02:17,760
defined I don't have that experience so

00:02:16,019 --> 00:02:21,150
we have a product owner let's say we are

00:02:17,760 --> 00:02:22,950
working in a scrum kind of setup and

00:02:21,150 --> 00:02:25,230
this guy come to us and say can we also

00:02:22,950 --> 00:02:26,790
notify the user friends when she uploads

00:02:25,230 --> 00:02:29,409
a new image

00:02:26,790 --> 00:02:32,590
and I forgot to mention we need this for

00:02:29,409 --> 00:02:34,989
tomorrow so we start like okay this guy

00:02:32,590 --> 00:02:36,879
comes to us and say yeah can you cannot

00:02:34,989 --> 00:02:39,159
do it or what then we have the social

00:02:36,879 --> 00:02:41,530
media group and it came to us and say we

00:02:39,159 --> 00:02:44,590
need bashes for users they return the

00:02:41,530 --> 00:02:46,720
upload a new picture and also we need to

00:02:44,590 --> 00:02:48,579
pause applause to Twitter there was a

00:02:46,720 --> 00:02:50,769
time when apps were really spamming

00:02:48,579 --> 00:02:55,299
Twitter about everything you you you you

00:02:50,769 --> 00:02:58,209
were doing and yet then we have the

00:02:55,299 --> 00:03:00,849
sysadmin and what I was working we

00:02:58,209 --> 00:03:03,819
actually have Swiss admins but it's a

00:03:00,849 --> 00:03:05,859
slight distinction and this guy come to

00:03:03,819 --> 00:03:08,560
us and say damn you are delivering full

00:03:05,859 --> 00:03:10,840
size images the bandwidth has tripled I

00:03:08,560 --> 00:03:12,790
mean but I was just asked to implement a

00:03:10,840 --> 00:03:15,909
photo gallery nobody said I had to

00:03:12,790 --> 00:03:16,900
resize images and of course this has to

00:03:15,909 --> 00:03:19,000
be fixed I mean if you are throwing

00:03:16,900 --> 00:03:23,560
money out of the window you have to fix

00:03:19,000 --> 00:03:25,599
it and I mean this sounds a bit funny

00:03:23,560 --> 00:03:27,609
but it actually happened in one of my

00:03:25,599 --> 00:03:31,780
previous companies we had like a video

00:03:27,609 --> 00:03:35,410
delivery website so they were not happy

00:03:31,780 --> 00:03:36,760
with us so yeah then there is a

00:03:35,410 --> 00:03:38,500
developer and the other team sometimes

00:03:36,760 --> 00:03:41,680
we do continuous integration as the

00:03:38,500 --> 00:03:45,310
previous guy mentioned and he said that

00:03:41,680 --> 00:03:50,949
we need to call or pitch fits stuff from

00:03:45,310 --> 00:03:53,949
Python and even maybe chala so why why

00:03:50,949 --> 00:03:55,720
do you want to do this kind of stuff and

00:03:53,949 --> 00:03:58,540
then there is a user which are all I

00:03:55,720 --> 00:04:01,359
mentioned him again very well explained

00:03:58,540 --> 00:04:04,750
yesterday we usually forget that there

00:04:01,359 --> 00:04:09,549
is a user behind the screen on the other

00:04:04,750 --> 00:04:12,069
side of the of the network and as a user

00:04:09,549 --> 00:04:14,769
if I'm using your website I don't really

00:04:12,069 --> 00:04:16,900
give a dime if your application takes

00:04:14,769 --> 00:04:19,299
time researching an image if you need to

00:04:16,900 --> 00:04:21,729
tweet about it if you need to tell your

00:04:19,299 --> 00:04:23,620
your user if your admin needs to get an

00:04:21,729 --> 00:04:25,330
email that gear is a new image it needs

00:04:23,620 --> 00:04:27,849
to be moderated or I'll I don't know

00:04:25,330 --> 00:04:30,370
what I just want to go to the forum

00:04:27,849 --> 00:04:33,699
click upload and see the image there

00:04:30,370 --> 00:04:35,830
that's all I care as a user and we as

00:04:33,699 --> 00:04:38,169
developers tend to forget that and we

00:04:35,830 --> 00:04:39,940
are always like new requirement we

00:04:38,169 --> 00:04:41,740
implemented we ship it new

00:04:39,940 --> 00:04:44,700
government implementing a shipping and

00:04:41,740 --> 00:04:47,650
we really don't see that we are actually

00:04:44,700 --> 00:04:51,820
destroying the product we are working on

00:04:47,650 --> 00:04:53,320
so one of the goals of scrum is that you

00:04:51,820 --> 00:04:55,210
can come back with feedback to the

00:04:53,320 --> 00:04:56,830
product owners and tell me look do you

00:04:55,210 --> 00:05:00,670
really want to do that you really want

00:04:56,830 --> 00:05:03,820
to run this query over a pattern of 20

00:05:00,670 --> 00:05:05,470
gigabyte database or 200 gigabytes at a

00:05:03,820 --> 00:05:08,590
base we had this kind of requirements on

00:05:05,470 --> 00:05:10,300
a previous website I worked and yeah it

00:05:08,590 --> 00:05:12,700
was like the website was going to

00:05:10,300 --> 00:05:16,450
completely crawl if you do that but if

00:05:12,700 --> 00:05:19,360
you just go and implement that then the

00:05:16,450 --> 00:05:24,100
user one like you and then there is us

00:05:19,360 --> 00:05:26,350
at the end of all this storm we just lay

00:05:24,100 --> 00:05:30,160
flip tables let's search for for

00:05:26,350 --> 00:05:32,410
something else to do so let's see the

00:05:30,160 --> 00:05:35,350
co-evolution i'm going to use cellular

00:05:32,410 --> 00:05:37,450
code here because i think is a risk

00:05:35,350 --> 00:05:42,630
actually kind of a line code for those

00:05:37,450 --> 00:05:46,180
that know is not that bad black comments

00:05:42,630 --> 00:05:49,750
there are functions there are arguments

00:05:46,180 --> 00:05:54,210
and this is a function body that's

00:05:49,750 --> 00:05:57,970
pretty much it and there is no return

00:05:54,210 --> 00:06:01,390
it's just the last value that gets cold

00:05:57,970 --> 00:06:03,790
is what the function returns so our

00:06:01,390 --> 00:06:06,010
first implementation was like okay we

00:06:03,790 --> 00:06:08,680
have a new image we get the request data

00:06:06,010 --> 00:06:15,220
whatever that is we have an image

00:06:08,680 --> 00:06:17,050
handler does the upload finito then the

00:06:15,220 --> 00:06:19,230
guys say okay but we have to resize the

00:06:17,050 --> 00:06:25,330
image so we went there resize image

00:06:19,230 --> 00:06:28,870
finito we need to notify friends so we

00:06:25,330 --> 00:06:31,360
keep adding code there we need to add

00:06:28,870 --> 00:06:34,240
points to the user of course each of

00:06:31,360 --> 00:06:37,720
these changes require that we ready blow

00:06:34,240 --> 00:06:41,590
the code again we need that to treat the

00:06:37,720 --> 00:06:43,210
new image and so on so can this code

00:06:41,590 --> 00:06:45,460
scale to new requirements because

00:06:43,210 --> 00:06:48,100
usually when we talk about scaling we

00:06:45,460 --> 00:06:49,030
say okay I like I will be in the cloud

00:06:48,100 --> 00:06:51,400
will learn

00:06:49,030 --> 00:06:53,980
shayana how many servers and then boom

00:06:51,400 --> 00:06:56,530
scale yeah but you need to think about

00:06:53,980 --> 00:06:58,660
also new requirements or if you need to

00:06:56,530 --> 00:07:00,280
scale down have less servers what

00:06:58,660 --> 00:07:02,650
happened when you don't have that many

00:07:00,280 --> 00:07:05,830
users online do you really want to spend

00:07:02,650 --> 00:07:11,740
money on those many amazon web services

00:07:05,830 --> 00:07:13,510
or what what not so what if we need to

00:07:11,740 --> 00:07:14,980
speed up image conversion you have

00:07:13,510 --> 00:07:18,220
everything there in your controller how

00:07:14,980 --> 00:07:20,260
you do that or even yeah maybe we are

00:07:18,220 --> 00:07:22,570
refactoring and we don't have really the

00:07:20,260 --> 00:07:24,550
actual image resizing code in the

00:07:22,570 --> 00:07:25,930
controller I mean if we do that we

00:07:24,550 --> 00:07:28,030
deserve to be working in some other

00:07:25,930 --> 00:07:31,570
industry but not really as developers

00:07:28,030 --> 00:07:34,900
anyway how do you speed up image

00:07:31,570 --> 00:07:37,300
conversion if you have your big wave up

00:07:34,900 --> 00:07:39,640
and your controller there is calling a

00:07:37,300 --> 00:07:42,700
PHP function that does the resize you

00:07:39,640 --> 00:07:45,430
need to just have more PHP servers and

00:07:42,700 --> 00:07:47,830
if you have like a whole project where

00:07:45,430 --> 00:07:50,890
as it usually is with all the controls

00:07:47,830 --> 00:07:52,920
and whatnot you will be firing more PHP

00:07:50,890 --> 00:07:55,540
web servers but you just need to have

00:07:52,920 --> 00:07:58,540
speed up in image combustion not really

00:07:55,540 --> 00:08:01,570
in some other controller that we don't

00:07:58,540 --> 00:08:03,460
really care what happens if the

00:08:01,570 --> 00:08:05,650
notification they need to send by be

00:08:03,460 --> 00:08:09,190
sent by email instead of Twitter or

00:08:05,650 --> 00:08:11,470
whatever what if we need to stop

00:08:09,190 --> 00:08:13,270
tweeting about new images what if google

00:08:11,470 --> 00:08:15,370
decide that it needs a new social

00:08:13,270 --> 00:08:19,090
network and then you need to use that

00:08:15,370 --> 00:08:20,470
social network instead of Twitter what

00:08:19,090 --> 00:08:23,770
if you need to resize in different

00:08:20,470 --> 00:08:25,540
formats what happened if you need to

00:08:23,770 --> 00:08:28,510
swap the language or the technology

00:08:25,540 --> 00:08:31,090
without downtime yeah for example though

00:08:28,510 --> 00:08:32,860
doing image resize okay in the in the

00:08:31,090 --> 00:08:33,970
case of that in PHP if not that bad

00:08:32,860 --> 00:08:35,980
because you're using imagemagick

00:08:33,970 --> 00:08:38,320
probably which is in C so would be fast

00:08:35,980 --> 00:08:41,350
enough but if you're doing like XML

00:08:38,320 --> 00:08:43,540
parsing or JSON or I don't know what you

00:08:41,350 --> 00:08:46,210
may need to switch to a language that

00:08:43,540 --> 00:08:50,500
will give you a better performance in in

00:08:46,210 --> 00:08:53,440
that regard so can we do better from all

00:08:50,500 --> 00:08:55,300
this thing of course my solution they

00:08:53,440 --> 00:08:57,310
want to come here to sell you and will

00:08:55,300 --> 00:09:01,060
be signing contracts outside it's about

00:08:57,310 --> 00:09:01,990
using message so there is a very simple

00:09:01,060 --> 00:09:05,140
design we all

00:09:01,990 --> 00:09:07,149
I mean if you use twitter you know that

00:09:05,140 --> 00:09:09,430
already is it published subscribe button

00:09:07,149 --> 00:09:15,190
you should send an event this is taking

00:09:09,430 --> 00:09:16,480
from the the law is I always forget the

00:09:15,190 --> 00:09:21,190
name of the enterprise integration

00:09:16,480 --> 00:09:23,230
patterns book this is its kind of open

00:09:21,190 --> 00:09:25,750
source images they have their creative

00:09:23,230 --> 00:09:27,310
commons and in this case implement the

00:09:25,750 --> 00:09:29,410
policies tribe and they say okay I have

00:09:27,310 --> 00:09:31,060
a publisher sense a new event in this

00:09:29,410 --> 00:09:32,800
case address change it could be new

00:09:31,060 --> 00:09:34,990
image whatnot and we have many

00:09:32,800 --> 00:09:37,060
subscribers this will do one thing this

00:09:34,990 --> 00:09:40,440
another this another if I need a new

00:09:37,060 --> 00:09:43,209
subscribers just put one more there and

00:09:40,440 --> 00:09:44,740
it's the same as for example whenever I

00:09:43,209 --> 00:09:47,860
do it this tweet will go to all my

00:09:44,740 --> 00:09:52,240
followers they can retweet it delete it

00:09:47,860 --> 00:09:55,410
ignore it and whatever so what will be

00:09:52,240 --> 00:09:58,660
your first implementation we have the

00:09:55,410 --> 00:10:01,480
controller we get the data from the

00:09:58,660 --> 00:10:04,870
request we will do the image upload this

00:10:01,480 --> 00:10:06,579
is moving the file to some storage some

00:10:04,870 --> 00:10:09,399
I'm eating some hard drive somewhere I

00:10:06,579 --> 00:10:12,339
don't know we get the data back like

00:10:09,399 --> 00:10:16,380
image hunter do upload return the image

00:10:12,339 --> 00:10:20,470
data plus okay and then we create like a

00:10:16,380 --> 00:10:23,170
record data saying okay or message has

00:10:20,470 --> 00:10:26,110
some user data and the image we put on

00:10:23,170 --> 00:10:32,339
the database and we publish a message or

00:10:26,110 --> 00:10:34,899
a new event same new image the message

00:10:32,339 --> 00:10:37,810
then we create a script which is the

00:10:34,899 --> 00:10:44,350
friend Franz notifier it will say on new

00:10:37,810 --> 00:10:47,770
image do that on a new image the points

00:10:44,350 --> 00:10:52,149
manager will add points to the user and

00:10:47,770 --> 00:10:53,740
the result the resizer will resize so

00:10:52,149 --> 00:10:56,110
what's the second implementation there

00:10:53,740 --> 00:11:00,399
is no actual second implementation and

00:10:56,110 --> 00:11:04,480
actually if you if you go back to to to

00:11:00,399 --> 00:11:07,620
this code sorry what do you have you

00:11:04,480 --> 00:11:10,089
have that you deploy that and that's it

00:11:07,620 --> 00:11:12,880
you don't need to really blow this code

00:11:10,089 --> 00:11:14,709
ever when you need to have the French

00:11:12,880 --> 00:11:15,459
notifier you deploy that part of the

00:11:14,709 --> 00:11:18,699
code then

00:11:15,459 --> 00:11:20,459
then that one if we don't need this one

00:11:18,699 --> 00:11:22,600
anymore for example just take it out

00:11:20,459 --> 00:11:26,559
everything else keep working and you

00:11:22,600 --> 00:11:28,209
don't need to touch that other one you

00:11:26,559 --> 00:11:30,639
need to swap the language you need to

00:11:28,209 --> 00:11:35,290
scale you need to do what not it all

00:11:30,639 --> 00:11:37,089
will work from the first deployment and

00:11:35,290 --> 00:11:40,480
I mean this is not rocket science and I

00:11:37,089 --> 00:11:46,300
it's just very basic event based

00:11:40,480 --> 00:11:49,209
programming so then we have RabbitMQ

00:11:46,300 --> 00:11:54,220
which is the technology I choose for for

00:11:49,209 --> 00:11:56,439
messaging so RabbitMQ for those that

00:11:54,220 --> 00:12:00,670
don't know is a multi-protocol messaging

00:11:56,439 --> 00:12:02,589
server is open source and it's part of a

00:12:00,670 --> 00:12:04,720
spring source since like two years is

00:12:02,589 --> 00:12:07,869
just an anecdote it doesn't really

00:12:04,720 --> 00:12:09,699
change anything there's only more money

00:12:07,869 --> 00:12:13,749
for people to develop the problem

00:12:09,699 --> 00:12:18,839
basically and rabbitmq is polyglot and

00:12:13,749 --> 00:12:20,920
is written in Erlang ltp is

00:12:18,839 --> 00:12:22,749
multi-protocol this means there are many

00:12:20,920 --> 00:12:27,910
protocols you can use to actually talk

00:12:22,749 --> 00:12:31,899
to rabbit in this case you have n QP

00:12:27,910 --> 00:12:34,209
MQTT and stomp and there is a blog post

00:12:31,899 --> 00:12:36,819
that was written like a week ago or so

00:12:34,209 --> 00:12:41,529
where they explain which one you should

00:12:36,819 --> 00:12:46,209
choose and why but basically RabbitMQ

00:12:41,529 --> 00:12:51,220
started as an n QP broker then be a

00:12:46,209 --> 00:12:53,350
plugins the hat MQTT and stomp and also

00:12:51,220 --> 00:12:56,679
there was some integration with XMPP and

00:12:53,350 --> 00:12:59,079
whatnot basically some protocols are

00:12:56,679 --> 00:13:01,329
more complex than others they give you

00:12:59,079 --> 00:13:05,879
more freedom or less freedom than others

00:13:01,329 --> 00:13:09,189
and they'll have bigger or smaller

00:13:05,879 --> 00:13:11,920
requirements at the CPU little for

00:13:09,189 --> 00:13:15,569
example as far as I know MQTT is used by

00:13:11,920 --> 00:13:18,730
Facebook on their iPhone iOS chat

00:13:15,569 --> 00:13:20,889
because it's very slow in a very small

00:13:18,730 --> 00:13:23,559
sorry in in the requirement it needs

00:13:20,889 --> 00:13:27,240
from the cpu so will be very buttery

00:13:23,559 --> 00:13:27,240
friendly and also

00:13:27,270 --> 00:13:32,760
it works on unreliable networks and so

00:13:29,790 --> 00:13:35,250
on so really depending what you do with

00:13:32,760 --> 00:13:38,310
what you use a stomp is a text based

00:13:35,250 --> 00:13:43,140
protocol similar to radius or main cash

00:13:38,310 --> 00:13:46,020
so in discern for example uses for the

00:13:43,140 --> 00:13:47,790
Large Hadron Collider stop and in some

00:13:46,020 --> 00:13:50,520
part of their infrastructure they also

00:13:47,790 --> 00:13:53,610
use JMA use activemq to use rabbit they

00:13:50,520 --> 00:13:56,790
use zeromq there is a lot of queueing

00:13:53,610 --> 00:14:01,760
things there but yeah there is a

00:13:56,790 --> 00:14:04,260
solution for each problem basically and

00:14:01,760 --> 00:14:05,970
by poor when we say that rabbit is

00:14:04,260 --> 00:14:08,160
polyglot yeah you can actually use it

00:14:05,970 --> 00:14:09,960
from many languages as long as it is a

00:14:08,160 --> 00:14:15,030
library for that what you want to use

00:14:09,960 --> 00:14:17,660
you have you can use rally in your case

00:14:15,030 --> 00:14:20,700
or I maintain one of the PHP libraries

00:14:17,660 --> 00:14:22,350
as usual in PHP there are like five

00:14:20,700 --> 00:14:26,460
libraries because we have we like to

00:14:22,350 --> 00:14:28,980
implement things many times then there

00:14:26,460 --> 00:14:31,470
is a no chase one a long Java Ruby

00:14:28,980 --> 00:14:34,200
dotnet Haskell and whatnot the only

00:14:31,470 --> 00:14:36,660
difference with the Ellen dotnet and

00:14:34,200 --> 00:14:38,640
Java is they are maintained by the

00:14:36,660 --> 00:14:41,310
RabbitMQ developers or whenever there's

00:14:38,640 --> 00:14:44,340
a new feature in rabbit this probably

00:14:41,310 --> 00:14:46,230
already in those libraries that the only

00:14:44,340 --> 00:14:48,390
advantage from using those languages I

00:14:46,230 --> 00:14:51,870
mean of course those languages has other

00:14:48,390 --> 00:14:54,780
advantage of it and then in the Indies n

00:14:51,870 --> 00:14:58,040
QP sense so you probably want to know

00:14:54,780 --> 00:15:02,550
more about how private mq actually works

00:14:58,040 --> 00:15:08,910
so let me get out of here and come to

00:15:02,550 --> 00:15:11,730
the browser and then localhost hope you

00:15:08,910 --> 00:15:15,690
can see that this is my user interface

00:15:11,730 --> 00:15:20,870
failing to me so i started creating this

00:15:15,690 --> 00:15:24,450
project because i wanted to demo how to

00:15:20,870 --> 00:15:28,310
how rabbitmq actually works this is a

00:15:24,450 --> 00:15:30,900
very much working in progress its

00:15:28,310 --> 00:15:33,150
interfaces as you can see very very

00:15:30,900 --> 00:15:36,990
basic that i don't even change the

00:15:33,150 --> 00:15:38,730
colors of bootstrap it's just the guy in

00:15:36,990 --> 00:15:39,480
the back can i change the resolution to

00:15:38,730 --> 00:15:46,500
have it

00:15:39,480 --> 00:15:47,820
the screen hello can I change the

00:15:46,500 --> 00:15:50,310
resolution to have the wide screen

00:15:47,820 --> 00:15:55,230
because it's not feeling my full screen

00:15:50,310 --> 00:16:11,310
here let me which one shall be sorry for

00:15:55,230 --> 00:16:18,990
this please go I love this part of the

00:16:11,310 --> 00:16:20,790
new safari there ok so with the RabbitMQ

00:16:18,990 --> 00:16:22,560
simulator this this simulates what

00:16:20,790 --> 00:16:24,449
rabbit them how RabbitMQ work is not

00:16:22,560 --> 00:16:27,240
really the broker running but it's

00:16:24,449 --> 00:16:29,220
enough to explain how rabbit works so

00:16:27,240 --> 00:16:31,649
whenever you use messaging you want to

00:16:29,220 --> 00:16:33,240
have a producer creating data and send

00:16:31,649 --> 00:16:35,449
in this data to a consumer the consumer

00:16:33,240 --> 00:16:38,040
will be your worker or whatnot

00:16:35,449 --> 00:16:42,180
processing those lands so you want to

00:16:38,040 --> 00:16:44,430
get the data from this point to here to

00:16:42,180 --> 00:16:47,240
do that you need an address this address

00:16:44,430 --> 00:16:52,260
in rabbit emek is called the exchange

00:16:47,240 --> 00:16:53,850
which will get your messages so whenever

00:16:52,260 --> 00:16:56,370
you want to send a message we will tell

00:16:53,850 --> 00:16:59,839
you your publisher send them to an

00:16:56,370 --> 00:17:06,510
exchange that's it then you click here

00:16:59,839 --> 00:17:08,610
say hello or PHP UK sin and that's it

00:17:06,510 --> 00:17:13,130
but the message didn't go actually

00:17:08,610 --> 00:17:16,110
anywhere why because we need queues this

00:17:13,130 --> 00:17:17,850
abstraction which seems a bit done at

00:17:16,110 --> 00:17:19,980
the beginning like why they do that I

00:17:17,850 --> 00:17:24,390
want to have the message arrived into

00:17:19,980 --> 00:17:26,850
the yellow thing you have the exchange

00:17:24,390 --> 00:17:29,130
first then the queues i will show in a

00:17:26,850 --> 00:17:33,210
bit why you need that you actually need

00:17:29,130 --> 00:17:37,290
this then you have the queue there so if

00:17:33,210 --> 00:17:39,240
i go here again and then click send you

00:17:37,290 --> 00:17:43,260
can see that the message are actually

00:17:39,240 --> 00:17:45,919
being accused there in the queue and now

00:17:43,260 --> 00:17:49,260
yes we can tell the consumer or worker

00:17:45,919 --> 00:17:50,510
subscribe to this queue and it will

00:17:49,260 --> 00:17:53,210
start getting the message

00:17:50,510 --> 00:17:56,600
so that's the most basic setup you can

00:17:53,210 --> 00:17:58,580
have in n raleigh so what's the

00:17:56,600 --> 00:18:00,740
advantage of having the exchange the

00:17:58,580 --> 00:18:03,290
exchange is similar to when you in your

00:18:00,740 --> 00:18:04,790
mail inbox you have rules so you get all

00:18:03,290 --> 00:18:07,490
the Mail's there but then you send them

00:18:04,790 --> 00:18:09,140
to different places to process or read

00:18:07,490 --> 00:18:11,810
them different time differently and

00:18:09,140 --> 00:18:16,610
whatnot so an exchange can actually have

00:18:11,810 --> 00:18:24,020
more than one queue and then again when

00:18:16,610 --> 00:18:27,620
you when you send the data the messages

00:18:24,020 --> 00:18:32,090
will be fan out to as many q's as you as

00:18:27,620 --> 00:18:34,340
you have there but it's not just that

00:18:32,090 --> 00:18:36,530
when you have an exchange you have

00:18:34,340 --> 00:18:38,720
different exchange types what does it

00:18:36,530 --> 00:18:41,360
mean if it means there are different

00:18:38,720 --> 00:18:43,730
routing algorithm that the exchange will

00:18:41,360 --> 00:18:46,610
take to take your message to the queue

00:18:43,730 --> 00:18:50,990
where it will go so actually let's say

00:18:46,610 --> 00:18:54,080
you're you are sending a message from

00:18:50,990 --> 00:18:58,250
the from this producer and you want to

00:18:54,080 --> 00:19:02,480
have a routing key like logs I don't

00:18:58,250 --> 00:19:05,810
know then you click send nothing happens

00:19:02,480 --> 00:19:08,810
why because this is actually a direct

00:19:05,810 --> 00:19:11,120
exchange this means it will actually

00:19:08,810 --> 00:19:13,250
check the routing key that you publish

00:19:11,120 --> 00:19:16,520
the message and see if it matches with

00:19:13,250 --> 00:19:19,310
the binding key of the queue it says

00:19:16,520 --> 00:19:21,440
finding key here this was my usability

00:19:19,310 --> 00:19:23,390
solution to not display an empty rotting

00:19:21,440 --> 00:19:25,430
key videos then you cannot actually see

00:19:23,390 --> 00:19:31,180
anything but in fact is an empty rotting

00:19:25,430 --> 00:19:35,570
key so if i write logs change come back

00:19:31,180 --> 00:19:38,300
send then only that Q gets to message

00:19:35,570 --> 00:19:40,760
the other q doesn't get anything so we

00:19:38,300 --> 00:19:44,080
direct exchange if the rotting key

00:19:40,760 --> 00:19:48,260
matches the message goes there basically

00:19:44,080 --> 00:19:54,680
but then you have one exchange which is

00:19:48,260 --> 00:19:57,470
the sun out where you completely ignore

00:19:54,680 --> 00:19:59,660
the routing key so if you really want to

00:19:57,470 --> 00:20:01,670
send a message to every cube bound to a

00:19:59,660 --> 00:20:03,980
particular change that's how you do it

00:20:01,670 --> 00:20:06,710
of course you can have

00:20:03,980 --> 00:20:08,900
more than one exchange more than one cue

00:20:06,710 --> 00:20:12,650
they're kind of be even bong to anything

00:20:08,900 --> 00:20:16,790
so that's not the it's not a problem

00:20:12,650 --> 00:20:19,700
that's it and then the last exchange

00:20:16,790 --> 00:20:23,720
type is the topic exchange which is the

00:20:19,700 --> 00:20:26,650
most advanced one so by default the

00:20:23,720 --> 00:20:29,299
topic exchange works kind of like the

00:20:26,650 --> 00:20:32,540
direct exchange checking routing keys

00:20:29,299 --> 00:20:34,309
but you can use patterns so let's say

00:20:32,540 --> 00:20:36,080
you deploy your app and you want to see

00:20:34,309 --> 00:20:38,059
if somebody is actually using your

00:20:36,080 --> 00:20:40,760
application so you have a cluster of

00:20:38,059 --> 00:20:44,230
servers let's say server one that's the

00:20:40,760 --> 00:20:47,660
hostname and then you have like

00:20:44,230 --> 00:20:49,460
application one more good one and error

00:20:47,660 --> 00:20:52,160
so you are never what happened there

00:20:49,460 --> 00:20:54,710
right I hope you can you can see this

00:20:52,160 --> 00:20:57,320
here that will be the routing key i will

00:20:54,710 --> 00:20:58,970
be sending the message this is at the

00:20:57,320 --> 00:21:00,530
application level so if you are in a nap

00:20:58,970 --> 00:21:02,620
and you produce a message you know in

00:21:00,530 --> 00:21:05,450
which module you are you know in which

00:21:02,620 --> 00:21:08,510
server you are and what not right so if

00:21:05,450 --> 00:21:10,520
i send a message it goes nowhere because

00:21:08,510 --> 00:21:15,640
the routing keys they are not matching

00:21:10,520 --> 00:21:15,640
so i can actually go and write this here

00:21:16,809 --> 00:21:27,110
change and send and it goes yeah okay

00:21:23,120 --> 00:21:29,809
what's the point basically I can come

00:21:27,110 --> 00:21:32,480
here and say yeah I want to have I don't

00:21:29,809 --> 00:21:34,429
care for example if it's an error in 41

00:21:32,480 --> 00:21:37,429
you know what not so I can use a star I

00:21:34,429 --> 00:21:45,830
hope you can see that i can use a start

00:21:37,429 --> 00:21:50,770
there and match one word change so if i

00:21:45,830 --> 00:21:53,929
send a message now it goes to both q's

00:21:50,770 --> 00:21:57,980
you can even go further and as saying i

00:21:53,929 --> 00:22:02,690
want to have one listener for logs from

00:21:57,980 --> 00:22:05,570
every every server in the in the system

00:22:02,690 --> 00:22:13,010
so instead of saying server one i can

00:22:05,570 --> 00:22:15,630
say star and here star change then on

00:22:13,010 --> 00:22:20,070
the producer side i can say

00:22:15,630 --> 00:22:26,190
server to for example and instead of the

00:22:20,070 --> 00:22:28,170
error i will send warning and it only

00:22:26,190 --> 00:22:33,300
goes to that one because it's listening

00:22:28,170 --> 00:22:38,340
to no matter what the server and no

00:22:33,300 --> 00:22:45,810
matter what their a low level is and the

00:22:38,340 --> 00:22:47,580
the final beat is the hash and I the

00:22:45,810 --> 00:22:50,010
other day I hear a very weird name for

00:22:47,580 --> 00:22:52,710
that in English which actually a

00:22:50,010 --> 00:22:56,930
chairman speaker told me I have I cannot

00:22:52,710 --> 00:23:00,480
reproduce that but I used to call it a

00:22:56,930 --> 00:23:02,040
sharp like in music I wife I used to

00:23:00,480 --> 00:23:03,360
play music so I'm for me that was a

00:23:02,040 --> 00:23:04,920
sharp then I learned that it's not

00:23:03,360 --> 00:23:09,420
actually a sharp it's a hash whatever

00:23:04,920 --> 00:23:12,420
anyway change so the what's the hatch is

00:23:09,420 --> 00:23:17,250
doing it much zero or more words so if i

00:23:12,420 --> 00:23:19,110
send i get everything so this Q will

00:23:17,250 --> 00:23:21,900
actually get every single log out there

00:23:19,110 --> 00:23:24,540
but I could restrict that to say only

00:23:21,900 --> 00:23:26,100
info so this would mean I don't care

00:23:24,540 --> 00:23:27,720
about the server I don't care about the

00:23:26,100 --> 00:23:30,570
app I don't care about the module but I

00:23:27,720 --> 00:23:34,580
do care that is a nympho don't I would

00:23:30,570 --> 00:23:39,600
change come back here here please and

00:23:34,580 --> 00:23:43,320
then info send and it still goes there

00:23:39,600 --> 00:23:45,330
so you have words separated by dots

00:23:43,320 --> 00:23:48,180
that's how you build up those patterns

00:23:45,330 --> 00:23:50,940
then you have starts with much one word

00:23:48,180 --> 00:23:52,500
and the hash which matches a zero or

00:23:50,940 --> 00:23:56,370
more words that's basically how the

00:23:52,500 --> 00:23:58,530
topic change a works and in this case if

00:23:56,370 --> 00:24:01,140
you want to build a distributed log

00:23:58,530 --> 00:24:03,360
system you can really do advanced stuff

00:24:01,140 --> 00:24:05,070
like you know the website is going it's

00:24:03,360 --> 00:24:06,990
been slow at the moment you fire that

00:24:05,070 --> 00:24:09,720
and you start seeing which one is

00:24:06,990 --> 00:24:11,400
producing which locks then you can kill

00:24:09,720 --> 00:24:12,600
your consumer start a new one and say

00:24:11,400 --> 00:24:15,330
you know what now I'd really want to

00:24:12,600 --> 00:24:16,830
have a queue for a server one because

00:24:15,330 --> 00:24:22,310
you see that server one is the only one

00:24:16,830 --> 00:24:24,000
producing logs and you can start like a

00:24:22,310 --> 00:24:26,220
concealing the problem or not

00:24:24,000 --> 00:24:27,500
continually running around the problem

00:24:26,220 --> 00:24:33,030
sir

00:24:27,500 --> 00:24:35,370
so any questions up to here if ash is

00:24:33,030 --> 00:24:37,260
that G because if you said no messenger

00:24:35,370 --> 00:24:41,730
so to you come or do you just sell it

00:24:37,260 --> 00:24:44,220
one now rabbitmq will do like a smart

00:24:41,730 --> 00:24:47,190
way of storing messages so rabbit has an

00:24:44,220 --> 00:24:49,230
index of messages plus the the way the

00:24:47,190 --> 00:24:51,330
place where they are stored the index

00:24:49,230 --> 00:24:54,690
keeps track on which ques they belong

00:24:51,330 --> 00:24:59,010
that the message store only once even if

00:24:54,690 --> 00:25:02,100
he ends it will be in in 2 q's a

00:24:59,010 --> 00:25:06,179
conceptually so you can actually I could

00:25:02,100 --> 00:25:08,520
come here and bring a consumer and do

00:25:06,179 --> 00:25:11,370
this and I start getting this is there

00:25:08,520 --> 00:25:14,070
and something I didn't mention is like

00:25:11,370 --> 00:25:18,480
you see these cues has a six messages

00:25:14,070 --> 00:25:23,220
right I can actually have to consumers

00:25:18,480 --> 00:25:26,040
and then they will be run rolling around

00:25:23,220 --> 00:25:30,210
the consumer automatically then there

00:25:26,040 --> 00:25:32,070
are more details like a consumer if it

00:25:30,210 --> 00:25:34,050
fails the message will be back in the

00:25:32,070 --> 00:25:35,940
queue and whatnot and the secret to win

00:25:34,050 --> 00:25:39,809
the book is to ask the first question so

00:25:35,940 --> 00:25:42,030
this for you so don't ask random

00:25:39,809 --> 00:25:46,260
question please in the next time so

00:25:42,030 --> 00:25:50,929
anyway you can tell me later yeah what

00:25:46,260 --> 00:25:55,980
let me know what's next so that was a

00:25:50,929 --> 00:25:58,470
big overview of what RabbitMQ is just as

00:25:55,980 --> 00:25:59,910
a note people ask me what i did i used

00:25:58,470 --> 00:26:03,210
to build that i'm using processing

00:25:59,910 --> 00:26:06,210
dulces which is created or a port of

00:26:03,210 --> 00:26:10,160
processing a java project ported by the

00:26:06,210 --> 00:26:12,390
jquery creator shown basic i think and

00:26:10,160 --> 00:26:15,540
it's pretty cool because you work with

00:26:12,390 --> 00:26:17,040
objects so you really have a I mean for

00:26:15,540 --> 00:26:19,380
this kind of interfaces object are

00:26:17,040 --> 00:26:21,600
pretty well designed so you have

00:26:19,380 --> 00:26:23,809
exchanges I can extend to different

00:26:21,600 --> 00:26:26,340
types and so on so it's very actually

00:26:23,809 --> 00:26:29,490
easy to build this kind of things with

00:26:26,340 --> 00:26:32,580
processing beside that is not just a toy

00:26:29,490 --> 00:26:35,760
as people tell me some tension I can

00:26:32,580 --> 00:26:38,040
actually import configuration here so

00:26:35,760 --> 00:26:40,509
now I'm not running rabbit but if I will

00:26:38,040 --> 00:26:42,339
be running rabbit i can click import

00:26:40,509 --> 00:26:45,669
and my whole message into policy will be

00:26:42,339 --> 00:26:47,199
draw there on the simulator so I can

00:26:45,669 --> 00:26:49,809
actually click around and see why my

00:26:47,199 --> 00:26:54,639
message didn't get where I wanted to be

00:26:49,809 --> 00:26:56,469
sent so that's a huge big tool for the

00:26:54,639 --> 00:26:58,919
buying production system in medicine

00:26:56,469 --> 00:27:01,719
because messaging as they say is a

00:26:58,919 --> 00:27:03,309
architect dream but the developer

00:27:01,719 --> 00:27:05,619
nightmare because you have all yeah this

00:27:03,309 --> 00:27:07,479
is very fancy things going around but

00:27:05,619 --> 00:27:11,019
you cannot actually see anything because

00:27:07,479 --> 00:27:16,599
everything is going through the network

00:27:11,019 --> 00:27:19,949
there somewhere magic so yeah and decide

00:27:16,599 --> 00:27:23,679
that you can also export the

00:27:19,949 --> 00:27:25,929
architecture here this the same design I

00:27:23,679 --> 00:27:27,999
can actually send a post to rub it and

00:27:25,929 --> 00:27:30,669
will create the queues and whatnot and

00:27:27,999 --> 00:27:32,829
then these two player I'm not really

00:27:30,669 --> 00:27:34,839
finding a good name for this but

00:27:32,829 --> 00:27:39,669
basically this piece of chase on you can

00:27:34,839 --> 00:27:42,459
see here is the representation of this

00:27:39,669 --> 00:27:47,319
whole bunch which if i want to write a

00:27:42,459 --> 00:27:49,629
tutorial lorem ipsum tutorial i can

00:27:47,319 --> 00:27:52,869
actually export and have it there or

00:27:49,629 --> 00:27:56,019
like this this way you actually draw it

00:27:52,869 --> 00:27:58,719
with the simulator and had that so you

00:27:56,019 --> 00:28:00,940
could hand out as a document we could

00:27:58,719 --> 00:28:03,339
write better RabbitMQ tutorials using

00:28:00,940 --> 00:28:09,339
that and so on so that's one of the

00:28:03,339 --> 00:28:13,929
goals of this toy anyway back to the

00:28:09,339 --> 00:28:15,729
slides so yeah this is the hands on part

00:28:13,929 --> 00:28:18,339
you probably want to see cold or it

00:28:15,729 --> 00:28:21,489
didn't happen so is i'm using this

00:28:18,339 --> 00:28:26,409
library PHP and cupid lady is not

00:28:21,489 --> 00:28:28,419
created originally by me but we took it

00:28:26,409 --> 00:28:33,459
over a previous company when I was in

00:28:28,419 --> 00:28:36,339
China and we fix many boxes had for

00:28:33,459 --> 00:28:39,039
working with PHP 53 basically with a

00:28:36,339 --> 00:28:41,019
strict mode and because we were in

00:28:39,039 --> 00:28:44,049
really good open-source citizens back

00:28:41,019 --> 00:28:45,999
then we can adjust fork it out and never

00:28:44,049 --> 00:28:49,779
actually send the patches back and then

00:28:45,999 --> 00:28:53,980
it just diverse way too much and yeah we

00:28:49,779 --> 00:28:56,710
just release it on github of course

00:28:53,980 --> 00:28:58,960
credit to the original authors and from

00:28:56,710 --> 00:29:01,480
the eric has come a long way now has a

00:28:58,960 --> 00:29:05,710
PHP namespaces is you can sell it over

00:29:01,480 --> 00:29:13,720
composer and whatnot so cold or it

00:29:05,710 --> 00:29:16,780
didn't happen right so here I'm in the

00:29:13,720 --> 00:29:22,230
common line is it too small for the

00:29:16,780 --> 00:29:26,110
people in the back probably sorry so

00:29:22,230 --> 00:29:29,700
here at me I'm inside my computer of you

00:29:26,110 --> 00:29:36,340
can guess and I just have a untoward

00:29:29,700 --> 00:29:38,230
rabbitmq server so basically rabbit will

00:29:36,340 --> 00:29:41,410
be distributed there are many ways that

00:29:38,230 --> 00:29:44,860
are boon to distros online in many ways

00:29:41,410 --> 00:29:46,750
but and prefer the tarball so you just

00:29:44,860 --> 00:29:52,660
enter that and then you have a folder

00:29:46,750 --> 00:29:56,140
like this one and there oops you will

00:29:52,660 --> 00:30:02,429
have like oh this is not the best color

00:29:56,140 --> 00:30:05,429
sorry basic I think that will be better

00:30:02,429 --> 00:30:05,429
pw

00:30:12,790 --> 00:30:18,950
so sorry they're so you have the e-beam

00:30:16,760 --> 00:30:20,510
folder that's a binary from a longie to

00:30:18,950 --> 00:30:22,580
see where you will put the configuration

00:30:20,510 --> 00:30:24,980
include are the RabbitMQ includes you

00:30:22,580 --> 00:30:27,920
don't care about that you have plugins

00:30:24,980 --> 00:30:31,180
come with a rocker so stay there

00:30:27,920 --> 00:30:34,420
computer I'm very scared of that with

00:30:31,180 --> 00:30:39,530
this thing Newton invented the gravity

00:30:34,420 --> 00:30:41,900
but I cannot see here here rabbitmq

00:30:39,530 --> 00:30:44,630
stone that's the stump protocol plugin

00:30:41,900 --> 00:30:47,150
so the broker can be really standard as

00:30:44,630 --> 00:30:50,270
in plugins for almost whatever you can

00:30:47,150 --> 00:30:52,760
think of yeah there are like shoval

00:30:50,270 --> 00:30:55,430
plugin which lets you replicate data

00:30:52,760 --> 00:30:58,480
across many brokers in a wide area

00:30:55,430 --> 00:31:00,560
network that I json-rpc Federation

00:30:58,480 --> 00:31:02,090
consistent hash exchange I didn't

00:31:00,560 --> 00:31:04,190
mention that exchange but is applying it

00:31:02,090 --> 00:31:06,230
you can add like you can have consistent

00:31:04,190 --> 00:31:10,700
hashing distribution of messages across

00:31:06,230 --> 00:31:17,900
your cues and many things so we have

00:31:10,700 --> 00:31:21,110
plugins and we have the commands that

00:31:17,900 --> 00:31:23,270
you will use to control rabbit mostly

00:31:21,110 --> 00:31:27,860
you will care about RabbitMQ CTL +

00:31:23,270 --> 00:31:30,350
RabbitMQ server and inside bar here is

00:31:27,860 --> 00:31:34,010
where your actual database will go on

00:31:30,350 --> 00:31:37,240
your logs we go here the database means

00:31:34,010 --> 00:31:40,910
the messages were rabbit will store them

00:31:37,240 --> 00:31:42,890
anyway so how do you start the broker

00:31:40,910 --> 00:31:47,510
and I think I've let me see if actually

00:31:42,890 --> 00:31:50,410
running no so to start the broker you

00:31:47,510 --> 00:31:53,210
will type Ravi thank you sir that and

00:31:50,410 --> 00:31:55,100
detached if I don't give this flag you

00:31:53,210 --> 00:31:58,910
will stay in my console basically so I

00:31:55,100 --> 00:32:00,029
want to send it to the background that's

00:31:58,910 --> 00:32:08,399
it

00:32:00,029 --> 00:32:11,700
right yeah my sorry right there yeah

00:32:08,399 --> 00:32:13,139
sorry for that yeah yeah so I started a

00:32:11,700 --> 00:32:15,960
broker this was a command if you

00:32:13,139 --> 00:32:18,330
couldn't see it before rabbitmq server

00:32:15,960 --> 00:32:20,549
detach and then for example I can check

00:32:18,330 --> 00:32:23,159
with the rabbit Thank You CTL status I

00:32:20,549 --> 00:32:25,759
will tell me memory use by the server

00:32:23,159 --> 00:32:29,219
what not you don't care about that now

00:32:25,759 --> 00:32:33,769
then how I do I actually use that let me

00:32:29,219 --> 00:32:37,379
see something as love it thank you

00:32:33,769 --> 00:32:39,869
plugins list so these are the plugins i

00:32:37,379 --> 00:32:43,080
have and i have the management fly-in

00:32:39,869 --> 00:32:52,320
enable so i can actually come here and

00:32:43,080 --> 00:32:55,169
do 1567 too so i have an even a web UI

00:32:52,320 --> 00:32:57,869
to manage the broker guest and guest is

00:32:55,169 --> 00:33:02,489
the default user and password i can log

00:32:57,869 --> 00:33:04,739
in and i can see what what's happening

00:33:02,489 --> 00:33:07,289
on the broker like file descriptor

00:33:04,739 --> 00:33:09,960
sockets and LMK processors memory disk

00:33:07,289 --> 00:33:13,679
space use and so on you can list

00:33:09,960 --> 00:33:19,529
connections channels changes cues and so

00:33:13,679 --> 00:33:23,369
on so that's for the basic overview on

00:33:19,529 --> 00:33:33,419
how you started what comes with it so

00:33:23,369 --> 00:33:35,909
let's go to PHP so yes so i'm using this

00:33:33,419 --> 00:33:38,429
library and in the library you have a

00:33:35,909 --> 00:33:40,499
bunch of demos on this demo folder so if

00:33:38,429 --> 00:33:44,669
you want to see your get started this a

00:33:40,499 --> 00:33:48,739
lot there so let me get back to text

00:33:44,669 --> 00:33:48,739
made now downloading text made no thanks

00:33:54,080 --> 00:33:57,080
please

00:33:57,970 --> 00:34:04,660
so how does it work you will have a

00:34:01,330 --> 00:34:06,550
configuration file somewhere like this

00:34:04,660 --> 00:34:10,270
one for example when you will say I want

00:34:06,550 --> 00:34:13,840
to connect to that host on the 5 6 7 2

00:34:10,270 --> 00:34:16,240
which is the default port a user and a

00:34:13,840 --> 00:34:18,340
password and then have you told host the

00:34:16,240 --> 00:34:20,200
virtual host work similar to Apache you

00:34:18,340 --> 00:34:23,050
can have many virtual hosts and then the

00:34:20,200 --> 00:34:25,660
queues and exchanges will be separated

00:34:23,050 --> 00:34:28,650
on those beautiful host and you can see

00:34:25,660 --> 00:34:34,180
that the bug configuration or on or off

00:34:28,650 --> 00:34:36,760
anyway what you want to do then is to

00:34:34,180 --> 00:34:38,560
have a user to create a connection and

00:34:36,760 --> 00:34:43,810
from the connection you will get a

00:34:38,560 --> 00:34:46,600
channel so sorry in this in the context

00:34:43,810 --> 00:34:48,640
of PHP channels don't really make sense

00:34:46,600 --> 00:34:52,000
because you have only one thread but in

00:34:48,640 --> 00:34:54,910
Java has kll and closure but not you

00:34:52,000 --> 00:34:58,210
could use channels to threads for

00:34:54,910 --> 00:34:59,980
example but you still do need the

00:34:58,210 --> 00:35:02,290
channel because that's how the protocol

00:34:59,980 --> 00:35:03,990
works so you have one tcp connection and

00:35:02,290 --> 00:35:07,770
many channels they are getting added and

00:35:03,990 --> 00:35:12,250
sending and receiving messages that's it

00:35:07,770 --> 00:35:14,380
so this is the part where you start

00:35:12,250 --> 00:35:17,860
hitting a QP because you can see fast

00:35:14,380 --> 00:35:20,740
true true false false true true I don't

00:35:17,860 --> 00:35:24,460
never ever know what they mean that's

00:35:20,740 --> 00:35:26,410
why I have this toxin there so you will

00:35:24,460 --> 00:35:28,060
do a cutie clear on the channel but what

00:35:26,410 --> 00:35:30,250
are you trying to do here you are trying

00:35:28,060 --> 00:35:32,290
to create a queue on the broker but why

00:35:30,250 --> 00:35:34,810
is it called the clear because it's not

00:35:32,290 --> 00:35:38,080
actually creating the cue the clear

00:35:34,810 --> 00:35:40,630
means create if not present the

00:35:38,080 --> 00:35:43,150
advantage of that is that you don't need

00:35:40,630 --> 00:35:46,420
to do let's say you build your own cue

00:35:43,150 --> 00:35:48,120
system using MySQL or some database you

00:35:46,420 --> 00:35:51,850
want to see if the table if they are

00:35:48,120 --> 00:35:55,210
created if not do something else declare

00:35:51,850 --> 00:35:57,460
will will save you that step so you just

00:35:55,210 --> 00:36:03,550
give the cue name and some parameters

00:35:57,460 --> 00:36:05,200
like passive means that don't declare it

00:36:03,550 --> 00:36:08,320
I just wanted to see if Ikki was there

00:36:05,200 --> 00:36:10,810
okay then durable will be if the queue

00:36:08,320 --> 00:36:13,130
will survive a server start

00:36:10,810 --> 00:36:15,320
exclusive will mean if the queue only

00:36:13,130 --> 00:36:18,020
belongs to this connection and out of

00:36:15,320 --> 00:36:20,000
the lid means if this connection goes

00:36:18,020 --> 00:36:21,800
away they'll eat the queue in the case

00:36:20,000 --> 00:36:23,840
of the login example you can just fire a

00:36:21,800 --> 00:36:25,610
consumer with an exclusive out to the

00:36:23,840 --> 00:36:27,530
lead queue when you kill the consumer

00:36:25,610 --> 00:36:29,180
the queue is gone from the broker so you

00:36:27,530 --> 00:36:31,970
don't you don't need to do cleanup for

00:36:29,180 --> 00:36:35,120
example so again n QP is very complex

00:36:31,970 --> 00:36:38,150
but it has a lot of option freedom and

00:36:35,120 --> 00:36:39,980
whatnot in the other protocols you maybe

00:36:38,150 --> 00:36:42,350
need to invent the protocol yourself at

00:36:39,980 --> 00:36:45,680
the end or if you use a non protocol

00:36:42,350 --> 00:36:47,750
broker okay you have the queue but you

00:36:45,680 --> 00:36:49,580
actually needed a address where you want

00:36:47,750 --> 00:36:51,320
to send a message so that's the exchange

00:36:49,580 --> 00:36:54,050
declare same concept you give the

00:36:51,320 --> 00:36:55,850
exchange name and the type and then

00:36:54,050 --> 00:36:58,960
again if you want to be passive durable

00:36:55,850 --> 00:37:02,360
and whatnot then you will do q binds if

00:36:58,960 --> 00:37:04,880
you don't provide a routing key this

00:37:02,360 --> 00:37:06,950
will be sent by default so you say

00:37:04,880 --> 00:37:11,000
please find this queue to this exchange

00:37:06,950 --> 00:37:12,890
that's it then somewhere you will write

00:37:11,000 --> 00:37:14,840
a function that will process the message

00:37:12,890 --> 00:37:16,580
will get a message as an argument and

00:37:14,840 --> 00:37:18,350
then you will use that you will do

00:37:16,580 --> 00:37:20,780
whatever you have to do with the message

00:37:18,350 --> 00:37:24,140
body and even with the headers of the

00:37:20,780 --> 00:37:26,570
message where do you use that you have

00:37:24,140 --> 00:37:28,970
basic consume you will tell rabbit okay

00:37:26,570 --> 00:37:31,670
I want to consume the message I want to

00:37:28,970 --> 00:37:33,110
assign a consumer tag why do you need

00:37:31,670 --> 00:37:34,670
the consumer type because then when you

00:37:33,110 --> 00:37:36,290
want to stop consuming you can tell

00:37:34,670 --> 00:37:38,810
rabbit don't send me any more messages

00:37:36,290 --> 00:37:41,390
this was my name or dishes was how you

00:37:38,810 --> 00:37:43,250
used to know me basically and there are

00:37:41,390 --> 00:37:45,440
many parameters yes but you care about

00:37:43,250 --> 00:37:49,040
saying whenever I get a new message from

00:37:45,440 --> 00:37:51,020
that Q send it to that function this

00:37:49,040 --> 00:37:53,480
function is just a PHP color ball so you

00:37:51,020 --> 00:37:56,120
can be a static function in a class and

00:37:53,480 --> 00:38:01,310
object plastic last name so the function

00:37:56,120 --> 00:38:06,580
name or method name anyway and then you

00:38:01,310 --> 00:38:10,190
just while the channel has callbacks you

00:38:06,580 --> 00:38:14,060
wait on the channel so they will block

00:38:10,190 --> 00:38:18,530
and wait for incoming messages as you

00:38:14,060 --> 00:38:20,460
might guess a n QP is mostly useful in

00:38:18,530 --> 00:38:22,349
the if you have like

00:38:20,460 --> 00:38:27,450
long-running process like gunshots or

00:38:22,349 --> 00:38:33,000
something like that anyway so let's

00:38:27,450 --> 00:38:36,570
start sorry yeah let's start this

00:38:33,000 --> 00:38:40,200
consumer and I will do PHP demo and be

00:38:36,570 --> 00:38:42,660
consumer and there the consumer is

00:38:40,200 --> 00:38:44,849
running and ready if we go to the web UI

00:38:42,660 --> 00:38:49,470
with no have a connection we have a

00:38:44,849 --> 00:38:52,140
channel there is exchange I call router

00:38:49,470 --> 00:38:54,839
and there will be the queue for that

00:38:52,140 --> 00:38:59,070
particular consumer I now want to send

00:38:54,839 --> 00:39:03,859
messages actually to this to this

00:38:59,070 --> 00:39:03,859
consumer so let me criticize this a bit

00:39:05,000 --> 00:39:11,700
so I have a producer the call of the

00:39:08,790 --> 00:39:16,710
producer is very similar let me find it

00:39:11,700 --> 00:39:18,089
pink p publisher so at the top is the

00:39:16,710 --> 00:39:20,099
same you get the connection get the

00:39:18,089 --> 00:39:21,690
channel you declare the QUT clear this

00:39:20,099 --> 00:39:24,330
change you do the binding this is

00:39:21,690 --> 00:39:25,859
boilerplate basically then from the

00:39:24,330 --> 00:39:28,050
arguments I pass on the command line i

00:39:25,859 --> 00:39:31,859
get a message body i create an n QP

00:39:28,050 --> 00:39:38,220
message and this is what we care channel

00:39:31,859 --> 00:39:41,270
publish it will be a for the people in

00:39:38,220 --> 00:39:44,880
the back so i would send this message to

00:39:41,270 --> 00:39:48,750
this exchange the exchange of here isn't

00:39:44,880 --> 00:39:53,839
router the one I use before so how do we

00:39:48,750 --> 00:39:58,830
do that PHP demo and Q publisher PHP

00:39:53,839 --> 00:40:02,640
hello and the message oops against

00:39:58,830 --> 00:40:06,750
anything is there if I do it again you

00:40:02,640 --> 00:40:08,940
we go again so that's pretty simple then

00:40:06,750 --> 00:40:16,320
of course i can send more than one

00:40:08,940 --> 00:40:20,240
message per connection 0e less than 100

00:40:16,320 --> 00:40:20,240
e + +

00:40:21,720 --> 00:40:32,200
oops so yes looks like this right and I

00:40:28,720 --> 00:40:35,470
can do that and there where the hundred

00:40:32,200 --> 00:40:37,570
messages and of course if I were to

00:40:35,470 --> 00:40:39,130
start a new consumer then they will

00:40:37,570 --> 00:40:43,230
start seeing one will see them and set

00:40:39,130 --> 00:40:46,270
the order and so on doing a round robin

00:40:43,230 --> 00:40:51,520
so that's the basic publish-subscribe

00:40:46,270 --> 00:40:53,920
thing you can do you if you if you use

00:40:51,520 --> 00:40:55,870
it a different exchange type then you

00:40:53,920 --> 00:40:59,620
will have the benefits of using fan out

00:40:55,870 --> 00:41:01,720
for pubs all having the topic exchange

00:40:59,620 --> 00:41:04,990
if you wanted to do login or more

00:41:01,720 --> 00:41:08,590
advanced use case and as a consumer you

00:41:04,990 --> 00:41:13,330
are not limited to just processing the

00:41:08,590 --> 00:41:15,460
message and not in the you have the in

00:41:13,330 --> 00:41:17,260
the message you have access to the

00:41:15,460 --> 00:41:19,840
channel the message we have a delivery

00:41:17,260 --> 00:41:21,670
for property where you can have the

00:41:19,840 --> 00:41:23,050
channel and for example you can

00:41:21,670 --> 00:41:24,880
acknowledge the message so you are

00:41:23,050 --> 00:41:27,910
telling rabbit they lead to from the QI

00:41:24,880 --> 00:41:30,040
actually cool process it if this crashes

00:41:27,910 --> 00:41:32,530
before this except the message goes back

00:41:30,040 --> 00:41:34,480
to the queue then if I send a message

00:41:32,530 --> 00:41:37,240
with the body quit then okay I want to

00:41:34,480 --> 00:41:39,310
cancel consuming so the consumer tag

00:41:37,240 --> 00:41:41,890
here and telling rabbit a I'm gone

00:41:39,310 --> 00:41:43,600
please don't send me anything else from

00:41:41,890 --> 00:41:45,370
here I cool actually because I have

00:41:43,600 --> 00:41:47,650
access to the channel i can do channel

00:41:45,370 --> 00:41:50,620
publish and send it to the next step so

00:41:47,650 --> 00:41:52,750
if you build a workflow system when you

00:41:50,620 --> 00:41:55,030
have one step another another you can

00:41:52,750 --> 00:41:57,640
have this publish on the process

00:41:55,030 --> 00:42:02,200
messages and so on you can do RPC

00:41:57,640 --> 00:42:05,590
servers whatever so I'm running out of

00:42:02,200 --> 00:42:08,310
time any questions up to here there are

00:42:05,590 --> 00:42:08,310
no more books yes

00:42:14,079 --> 00:42:20,930
to all thank you I don't know if you

00:42:18,440 --> 00:42:22,940
heard me yeah so the question is if the

00:42:20,930 --> 00:42:27,560
same message is sent to multiple

00:42:22,940 --> 00:42:29,660
consumers so the answer is is no it's a

00:42:27,560 --> 00:42:31,490
queue so every time you get a message

00:42:29,660 --> 00:42:34,490
out to the queue is not there anymore so

00:42:31,490 --> 00:42:36,859
the next consumer will get the next

00:42:34,490 --> 00:42:38,780
message unless of course the consumer

00:42:36,859 --> 00:42:40,760
crashes and then it will go back to the

00:42:38,780 --> 00:42:43,220
queue and then some other consumer will

00:42:40,760 --> 00:42:49,910
get it so it's behaving like a Stockton

00:42:43,220 --> 00:42:52,520
yeah thank you yeah but the stock is the

00:42:49,910 --> 00:42:57,319
last in first out and this one will be

00:42:52,520 --> 00:42:59,240
the other way around so what kind of a

00:42:57,319 --> 00:43:02,380
conclusion what happened with machine we

00:42:59,240 --> 00:43:06,560
have we can scale we can scale across

00:43:02,380 --> 00:43:09,740
consumers we can scale again in the

00:43:06,560 --> 00:43:11,839
process of developing our application

00:43:09,740 --> 00:43:13,849
because we can just say okay now I want

00:43:11,839 --> 00:43:15,770
to polish an image and resize it but

00:43:13,849 --> 00:43:19,160
later I want to do something else with

00:43:15,770 --> 00:43:22,760
an image we can hook up this with we

00:43:19,160 --> 00:43:24,710
drive it and easy to scale even if let's

00:43:22,760 --> 00:43:27,740
say that that consumer a show just

00:43:24,710 --> 00:43:30,530
publish a message saying I don't I'm

00:43:27,740 --> 00:43:32,990
done you have it that there may be there

00:43:30,530 --> 00:43:35,060
is no no q getting those messages

00:43:32,990 --> 00:43:36,800
nothing happened but in the future if

00:43:35,060 --> 00:43:38,690
you want to do something else after the

00:43:36,800 --> 00:43:41,720
image will resize you already have this

00:43:38,690 --> 00:43:44,119
event there that is telling you that is

00:43:41,720 --> 00:43:46,940
happening and rabbit can do easily like

00:43:44,119 --> 00:43:49,490
in PHP four thousand or more messages

00:43:46,940 --> 00:43:51,619
per second in PHP in Java goes up to

00:43:49,490 --> 00:43:52,849
12,000 or even more and depending on

00:43:51,619 --> 00:43:57,500
which server I'm just talking about a

00:43:52,849 --> 00:44:00,440
mac so it's pretty fast you have the

00:43:57,500 --> 00:44:03,619
copy again you can just plug and play

00:44:00,440 --> 00:44:05,540
stuff around and you can have polyglot

00:44:03,619 --> 00:44:07,940
apps which are very interesting today

00:44:05,540 --> 00:44:09,650
and in current the web shops you may

00:44:07,940 --> 00:44:12,319
have our guy that one to do know chase

00:44:09,650 --> 00:44:14,359
and another guy doing closure and the

00:44:12,319 --> 00:44:16,069
other two in PHP and whatnot you cannot

00:44:14,359 --> 00:44:18,380
have thousand languages in your project

00:44:16,069 --> 00:44:21,109
but with message in it will be easier if

00:44:18,380 --> 00:44:21,630
for some particular task you need that

00:44:21,109 --> 00:44:26,250
party

00:44:21,630 --> 00:44:27,960
language so questions the last one here

00:44:26,250 --> 00:44:29,970
because I think we don't have more time

00:44:27,960 --> 00:44:38,759
please how does it compare with

00:44:29,970 --> 00:44:41,579
something right like active okay so

00:44:38,759 --> 00:44:42,990
activemq mostly works on I mean is I

00:44:41,579 --> 00:44:45,059
don't want to talk about what I don't

00:44:42,990 --> 00:44:47,700
know but as far as I know it was mostly

00:44:45,059 --> 00:44:49,980
enjoy a mess and stomp it may support a

00:44:47,700 --> 00:44:52,079
different protocol I don't know but as

00:44:49,980 --> 00:44:54,420
far as I understand is easier to be used

00:44:52,079 --> 00:44:56,849
from the Java platform I'm not saying it

00:44:54,420 --> 00:45:00,000
cannot be used from PHP or any of the

00:44:56,849 --> 00:45:02,640
others but that is what I I will say

00:45:00,000 --> 00:45:04,470
it's kind of a disadvantage but I'm not

00:45:02,640 --> 00:45:07,769
saying it's not stable and not saying it

00:45:04,470 --> 00:45:11,460
won't solve your problem so I I don't

00:45:07,769 --> 00:45:16,140
like to enter in that area there was a

00:45:11,460 --> 00:45:19,109
guy in the back first yes so I wasn't

00:45:16,140 --> 00:45:23,579
here at the beginning but what kind of

00:45:19,109 --> 00:45:25,980
security stuff two rabbits pool so you

00:45:23,579 --> 00:45:28,319
have authentication producer yep then

00:45:25,980 --> 00:45:30,420
the messages you can if you set up the

00:45:28,319 --> 00:45:32,160
user ID that send when you when you

00:45:30,420 --> 00:45:34,829
publish a message you actually

00:45:32,160 --> 00:45:38,339
instantiate an n QP message which has a

00:45:34,829 --> 00:45:40,500
content like a payload plus headers in

00:45:38,339 --> 00:45:42,839
the shares you can set up the user ID

00:45:40,500 --> 00:45:45,180
and there for example rabbit will check

00:45:42,839 --> 00:45:48,750
if the actual user consuming the

00:45:45,180 --> 00:45:52,680
messages is a cool get that message then

00:45:48,750 --> 00:45:55,380
there is a policy where user can read or

00:45:52,680 --> 00:45:58,349
write or configure the broker depending

00:45:55,380 --> 00:46:00,509
on on what resource they are trying to

00:45:58,349 --> 00:46:02,640
access so there are many levels then you

00:46:00,509 --> 00:46:07,109
have SSL you have ldap authentication

00:46:02,640 --> 00:46:10,470
the basic n QP and authentication a guy

00:46:07,109 --> 00:46:12,930
now is writing a Active Directory plugin

00:46:10,470 --> 00:46:14,849
for hooking a new authentication

00:46:12,930 --> 00:46:18,470
mechanism in rabbit so there are many

00:46:14,849 --> 00:46:18,470
options thank you

00:46:23,140 --> 00:46:33,380
as a hello all right great as an

00:46:30,830 --> 00:46:35,720
independent developer who wants to limit

00:46:33,380 --> 00:46:37,580
the amount of ops that he does as much

00:46:35,720 --> 00:46:39,560
as possible is there a hosted solution

00:46:37,580 --> 00:46:44,360
or hosted solutions that you would

00:46:39,560 --> 00:46:46,010
recommend and there are many actually in

00:46:44,360 --> 00:46:49,340
our case if I had to recommend one is

00:46:46,010 --> 00:46:51,200
class boundary of course but the German

00:46:49,340 --> 00:46:54,610
it is like cloud line to be there

00:46:51,200 --> 00:46:58,160
specialize in rabbit I know Heroku

00:46:54,610 --> 00:47:00,740
probably has a rabbitmq ad on a glass

00:46:58,160 --> 00:47:06,230
foundry conflict rabbitmq support by

00:47:00,740 --> 00:47:12,520
default there are many but I yeah that's

00:47:06,230 --> 00:47:12,520
what I know so thank you very much

00:47:22,770 --> 00:47:24,830

YouTube URL: https://www.youtube.com/watch?v=dAzsbZO7nnU


