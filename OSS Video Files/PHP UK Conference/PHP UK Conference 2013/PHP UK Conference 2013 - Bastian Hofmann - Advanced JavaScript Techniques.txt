Title: PHP UK Conference 2013 - Bastian Hofmann - Advanced JavaScript Techniques
Publication date: 2013-04-16
Playlist: PHP UK Conference 2013
Description: 
	Modern web applications are using lots of JavaScript to create a fluent and responsive user experience. But if you want to create mashups, load data from many different places or include external widgets into your site, you are quickly running into boundaries because of browser and security restrictions. In this talk you will learn how to create such a JavaScript application from scratch and step by step enhance it with techniques and features, like accessing an external API with OAuth2, embedding external widgets securely or receiving real-time updates through WebSockets and PubsubHubbub. On top of this you will get a glimpse into what developing web applications may look like in the future.

Slides: https://speakerdeck.com/bastianhofmann/advanced-javascript
Captions: 
	00:00:13,580 --> 00:00:20,010
so fancy title isn't it what's this talk

00:00:17,280 --> 00:00:21,810
about are we talking about lots of

00:00:20,010 --> 00:00:25,740
JavaScript I'll show you lots of code

00:00:21,810 --> 00:00:27,390
and since we are ok we're fine on time

00:00:25,740 --> 00:00:29,790
because we are I don't know if you heard

00:00:27,390 --> 00:00:33,360
running 10 minutes behind schedule so we

00:00:29,790 --> 00:00:34,740
will finish at eleven-forty-five and you

00:00:33,360 --> 00:00:37,980
will still have plenty of time to go the

00:00:34,740 --> 00:00:41,070
next old talks after lunch Oh until

00:00:37,980 --> 00:00:43,020
lunch so this talk is about JavaScript

00:00:41,070 --> 00:00:45,120
and how you can actually enhance your

00:00:43,020 --> 00:00:46,740
applications with JavaScript your

00:00:45,120 --> 00:00:49,890
existing applications and create a rich

00:00:46,740 --> 00:00:53,010
fancy featured application that you use

00:00:49,890 --> 00:00:55,290
in the web nowadays if you go a bit back

00:00:53,010 --> 00:01:00,660
in time about 15 years ago the web and

00:00:55,290 --> 00:01:01,890
web pages look like this and it's I

00:01:00,660 --> 00:01:03,600
think it's good thing that I spared you

00:01:01,890 --> 00:01:05,970
the background music and the animations

00:01:03,600 --> 00:01:08,250
on this more seriously you had pages

00:01:05,970 --> 00:01:10,320
like yahoo that were bit static

00:01:08,250 --> 00:01:12,630
collections of links and everything

00:01:10,320 --> 00:01:14,850
there were some forms so there was some

00:01:12,630 --> 00:01:16,860
kind of interaction ebay was already

00:01:14,850 --> 00:01:19,890
around so also something like

00:01:16,860 --> 00:01:22,890
interactive social like features if you

00:01:19,890 --> 00:01:26,840
remember back then the PHP version was

00:01:22,890 --> 00:01:31,950
version 3 it was year 2000 compliant yay

00:01:26,840 --> 00:01:35,549
who use PHP back then well I didn't see

00:01:31,950 --> 00:01:38,490
her in 90 something I wasn't probably

00:01:35,549 --> 00:01:41,850
old enough to use PHP fast forward to

00:01:38,490 --> 00:01:44,039
today the web looks and web pages or web

00:01:41,850 --> 00:01:46,200
applications look totally different you

00:01:44,039 --> 00:01:50,219
have stuff like Google Docs so really

00:01:46,200 --> 00:01:51,600
desktop like feeling you have for those

00:01:50,219 --> 00:01:53,729
applications you have even offline

00:01:51,600 --> 00:01:55,469
capabilities in there so you can it even

00:01:53,729 --> 00:01:57,600
works when you don't have any connection

00:01:55,469 --> 00:02:03,359
you have stuff like Street View and maps

00:01:57,600 --> 00:02:05,159
your fall Ides in the internet as web

00:02:03,359 --> 00:02:09,630
applications that you can just run into

00:02:05,159 --> 00:02:12,150
your browser so from 1998 to now the web

00:02:09,630 --> 00:02:14,040
totally has changed and their websites

00:02:12,150 --> 00:02:18,060
20 web applications became much more

00:02:14,040 --> 00:02:23,370
desktop like and much more pleasant to

00:02:18,060 --> 00:02:25,260
use so what we'll do today we will talk

00:02:23,370 --> 00:02:26,430
about a lot of techniques that actually

00:02:25,260 --> 00:02:28,200
enable

00:02:26,430 --> 00:02:29,879
creating these applications and these

00:02:28,200 --> 00:02:31,439
are one of them I will talk about web

00:02:29,879 --> 00:02:33,569
application development in general what

00:02:31,439 --> 00:02:34,799
this means in JavaScript for JavaScript

00:02:33,569 --> 00:02:37,939
applications i'll be talking about

00:02:34,799 --> 00:02:40,079
communication with circles about

00:02:37,939 --> 00:02:42,090
including external content in the

00:02:40,079 --> 00:02:44,040
applications about AP is about

00:02:42,090 --> 00:02:46,950
authentication about this api's how to

00:02:44,040 --> 00:02:48,569
do real-time communication and also talk

00:02:46,950 --> 00:02:50,730
a bit about web RTC and if you don't

00:02:48,569 --> 00:02:52,950
know what that is you at the end of the

00:02:50,730 --> 00:02:55,439
stalks before that a few words about me

00:02:52,950 --> 00:02:57,389
as it will i work at researchgate the

00:02:55,439 --> 00:02:59,669
aim it's a social network of scientists

00:02:57,389 --> 00:03:01,560
and the aim is to actually give science

00:02:59,669 --> 00:03:02,819
back to the researchers and help

00:03:01,560 --> 00:03:04,889
researchers build up the reputation

00:03:02,819 --> 00:03:08,970
actually do their research and by that

00:03:04,889 --> 00:03:11,849
accelerate the scientific progress we

00:03:08,970 --> 00:03:13,349
have about 2.5 million six million users

00:03:11,849 --> 00:03:16,139
at the moment that's what the page looks

00:03:13,349 --> 00:03:19,169
like so very scientific and research

00:03:16,139 --> 00:03:22,439
related we are also if you're closely

00:03:19,169 --> 00:03:25,650
hiring if you want to know more about

00:03:22,439 --> 00:03:27,060
that ask me after the talk especially if

00:03:25,650 --> 00:03:30,090
what what good company where you have

00:03:27,060 --> 00:03:32,849
table tennis and soccer and football and

00:03:30,090 --> 00:03:34,139
everything air hockey just talk to me

00:03:32,849 --> 00:03:35,879
Nick when I'm not working at

00:03:34,139 --> 00:03:37,829
researchgate I am frequently giving tops

00:03:35,879 --> 00:03:40,560
and conferences and I work and live in

00:03:37,829 --> 00:03:46,470
Berlin the slides will be available on

00:03:40,560 --> 00:03:50,819
speaker dick after the talk and let's

00:03:46,470 --> 00:03:53,340
start so because i want to show you lots

00:03:50,819 --> 00:03:56,189
of code and lots of demos in this talk i

00:03:53,340 --> 00:03:57,449
decided to build up my demonstration

00:03:56,189 --> 00:04:01,739
application that i'm going to build in

00:03:57,449 --> 00:04:04,439
front of you with meteor j/s meteor jess

00:04:01,739 --> 00:04:07,379
is this very new framework that actually

00:04:04,439 --> 00:04:11,780
is quite pleasant to use who is thought

00:04:07,379 --> 00:04:13,829
of it of meteor like four five six ok

00:04:11,780 --> 00:04:16,049
for those of you who haven't heard of it

00:04:13,829 --> 00:04:18,090
it actually is a JavaScript framework

00:04:16,049 --> 00:04:19,889
that lets you write JavaScript suicide

00:04:18,090 --> 00:04:21,209
and client-side and it don't have to

00:04:19,889 --> 00:04:23,490
care about the communication between

00:04:21,209 --> 00:04:25,830
server and client so client being the

00:04:23,490 --> 00:04:28,860
browser because it just abstracts that

00:04:25,830 --> 00:04:30,449
so it's still very early in development

00:04:28,860 --> 00:04:31,770
I wouldn't advise to use it for

00:04:30,449 --> 00:04:33,060
production purposes but for this

00:04:31,770 --> 00:04:36,210
demonstration is quite nice because you

00:04:33,060 --> 00:04:39,509
won't see any boilerplate code at all

00:04:36,210 --> 00:04:48,780
and i really recommend checking this out

00:04:39,509 --> 00:04:50,340
let's start with a demonstration so you

00:04:48,780 --> 00:04:57,389
see that you see nothing that will

00:04:50,340 --> 00:04:59,610
change so as i said i'm going to write a

00:04:57,389 --> 00:05:01,949
meteor application and my first

00:04:59,610 --> 00:05:04,110
iteration of this application is just

00:05:01,949 --> 00:05:06,300
the basic hello world because always you

00:05:04,110 --> 00:05:13,320
start with Oliver what does the code

00:05:06,300 --> 00:05:16,580
look like in medium here it is so I've

00:05:13,320 --> 00:05:21,710
just a few files you see this over here

00:05:16,580 --> 00:05:26,160
most important one is I have a template

00:05:21,710 --> 00:05:28,680
and just make this a tad bigger this is

00:05:26,160 --> 00:05:32,940
good to see in the back sides ok some

00:05:28,680 --> 00:05:35,460
top great so this is my template for my

00:05:32,940 --> 00:05:40,620
application it just have had with the

00:05:35,460 --> 00:05:42,570
titles of small body with some nodes Dom

00:05:40,620 --> 00:05:45,570
nodes here i have my hello world and an

00:05:42,570 --> 00:05:48,889
h1 tag i also added some lock in buttons

00:05:45,570 --> 00:05:52,199
that are aligned right and that's it i

00:05:48,889 --> 00:05:56,159
also have a tiny bit of javascript in

00:05:52,199 --> 00:06:00,930
here which is just said okay i want to

00:05:56,159 --> 00:06:02,849
sign up that meteor gives me to be user

00:06:00,930 --> 00:06:04,949
name only it's just a bit of

00:06:02,849 --> 00:06:06,539
configuration and that's all I've wrote

00:06:04,949 --> 00:06:09,449
for this application I added some

00:06:06,539 --> 00:06:11,849
libraries that I use later on there are

00:06:09,449 --> 00:06:15,599
some keys are used for AP is and this

00:06:11,849 --> 00:06:18,389
arrest is meet your related this gives

00:06:15,599 --> 00:06:21,770
me an application that not only prints

00:06:18,389 --> 00:06:25,560
out hello world but also have a complete

00:06:21,770 --> 00:06:29,789
log in and sign up which is really nice

00:06:25,560 --> 00:06:33,630
so I can create an account you choose a

00:06:29,789 --> 00:06:35,099
password there are also ways to do email

00:06:33,630 --> 00:06:36,870
verification and that's it I have an

00:06:35,099 --> 00:06:39,060
account I'm locked in I also could sign

00:06:36,870 --> 00:06:41,789
our change my password and everything so

00:06:39,060 --> 00:06:44,370
all these boilerplate code all the sign

00:06:41,789 --> 00:06:45,810
happening is taken it's done by meteor

00:06:44,370 --> 00:06:47,790
automatically

00:06:45,810 --> 00:06:51,720
this account is stored now in the back

00:06:47,790 --> 00:06:54,570
end in MongoDB because MongoDB is at the

00:06:51,720 --> 00:06:57,900
moment the underlying data storage for

00:06:54,570 --> 00:07:00,150
meteor I don't have to do any Ajax calls

00:06:57,900 --> 00:07:03,060
I don't have to do any setup for the

00:07:00,150 --> 00:07:05,040
database meteor takes care of that this

00:07:03,060 --> 00:07:07,470
makes it very easy to bootstrap such an

00:07:05,040 --> 00:07:10,230
application of course if you want to

00:07:07,470 --> 00:07:11,840
scale you may think okay it's not a good

00:07:10,230 --> 00:07:16,110
thing to have all this hidden from you

00:07:11,840 --> 00:07:27,240
more on that later so if you go one step

00:07:16,110 --> 00:07:32,010
further in our demonstration I now edit

00:07:27,240 --> 00:07:35,729
a small stream feature to my application

00:07:32,010 --> 00:07:40,680
so what i can do is i can write a text

00:07:35,729 --> 00:07:47,310
entry hello.php okay send it and it

00:07:40,680 --> 00:07:53,930
appears in my stream here I had to

00:07:47,310 --> 00:07:53,930
change very little for this to work so

00:07:54,350 --> 00:07:59,280
the way meteor structures your

00:07:56,550 --> 00:08:01,680
application is you have a client folder

00:07:59,280 --> 00:08:03,810
everything that's on their goat was just

00:08:01,680 --> 00:08:06,060
executed at the client in the browser

00:08:03,810 --> 00:08:07,800
you have a swab a folder everything

00:08:06,060 --> 00:08:10,789
that's on there is just executed on the

00:08:07,800 --> 00:08:14,039
server which is in the end node j us and

00:08:10,789 --> 00:08:15,780
you have what's another folder is shared

00:08:14,039 --> 00:08:19,320
between both client and server and

00:08:15,780 --> 00:08:24,180
executed on both so what I had to do to

00:08:19,320 --> 00:08:27,539
add the stream feature is i added a

00:08:24,180 --> 00:08:30,270
model that is executed on those client

00:08:27,539 --> 00:08:33,180
and server where i define my short box

00:08:30,270 --> 00:08:35,459
entry collection which he finds in the

00:08:33,180 --> 00:08:38,280
end of MongoDB collection and create

00:08:35,459 --> 00:08:40,979
this if I'm on the server here i will

00:08:38,280 --> 00:08:43,740
also publish this connect this

00:08:40,979 --> 00:08:45,600
collection i edit and say okay i want to

00:08:43,740 --> 00:08:48,660
publish everything all entries should be

00:08:45,600 --> 00:08:50,610
visible i could write DB queries

00:08:48,660 --> 00:08:53,190
here to actually limit what i want to

00:08:50,610 --> 00:08:55,709
show limit the fields or if it's

00:08:53,190 --> 00:08:58,320
something else I also said our choir

00:08:55,709 --> 00:08:59,459
want to publish the user data the user

00:08:58,320 --> 00:09:02,100
data automatically is power

00:08:59,459 --> 00:09:05,009
lished and I also only want to show the

00:09:02,100 --> 00:09:07,170
user name and the user ID to the client

00:09:05,009 --> 00:09:11,040
side of the application and then I say

00:09:07,170 --> 00:09:14,429
okay I also want to allow inversion of

00:09:11,040 --> 00:09:17,160
sharples entries but only if there is

00:09:14,429 --> 00:09:20,279
some user locked in and if the user of

00:09:17,160 --> 00:09:22,829
the document that is created is like the

00:09:20,279 --> 00:09:27,350
current user ID so I have some

00:09:22,829 --> 00:09:32,429
restrictions set in place here then I

00:09:27,350 --> 00:09:34,619
added some templates Here I am

00:09:32,429 --> 00:09:42,660
referencing a template called stream in

00:09:34,619 --> 00:09:45,480
my layout my stream iterates over all

00:09:42,660 --> 00:09:47,999
the entries in the stream and then cause

00:09:45,480 --> 00:09:50,879
the empty template and if there is a

00:09:47,999 --> 00:09:56,999
current user I show the input template

00:09:50,879 --> 00:10:03,360
and my entry template just displays the

00:09:56,999 --> 00:10:07,949
username text and date and the input

00:10:03,360 --> 00:10:11,549
template is basically a form or the form

00:10:07,949 --> 00:10:16,220
that you saw to add a new entry last

00:10:11,549 --> 00:10:20,249
thing I have to write a bit of code in

00:10:16,220 --> 00:10:21,629
my view j/s to actually tell what is

00:10:20,249 --> 00:10:26,279
supposed to be displayed in the

00:10:21,629 --> 00:10:28,549
templates so I'm subscribing here to the

00:10:26,279 --> 00:10:30,899
shoutbox the entries and user data

00:10:28,549 --> 00:10:33,720
collections that are published on the

00:10:30,899 --> 00:10:37,949
car as well as site and then I say okay

00:10:33,720 --> 00:10:40,309
in my stream template the entries should

00:10:37,949 --> 00:10:43,799
come from the shoppers and recollection

00:10:40,309 --> 00:10:45,839
so i say short box entries find this my

00:10:43,799 --> 00:10:48,869
query I want to offer all entries and

00:10:45,839 --> 00:10:54,029
for each entry that I get back I query

00:10:48,869 --> 00:10:56,639
the user of this entry and then I for

00:10:54,029 --> 00:10:59,309
small array here I push an object into

00:10:56,639 --> 00:11:01,769
this array which was the username a text

00:10:59,309 --> 00:11:05,579
and the date I'm also with some small

00:11:01,769 --> 00:11:07,679
library lincoff eyeing this text is just

00:11:05,579 --> 00:11:10,079
so that links in this are clickable it's

00:11:07,679 --> 00:11:12,050
an open library you can just download I

00:11:10,079 --> 00:11:14,600
place this in here

00:11:12,050 --> 00:11:17,149
and then I just returned this array and

00:11:14,600 --> 00:11:20,420
the template will have this array also

00:11:17,149 --> 00:11:21,649
each time something changes in there the

00:11:20,420 --> 00:11:23,709
template will get would be updated

00:11:21,649 --> 00:11:29,540
automatically your seizes in a moment

00:11:23,709 --> 00:11:32,540
and for from submitting at my input

00:11:29,540 --> 00:11:38,300
template I by myself on the submit event

00:11:32,540 --> 00:11:41,410
of the form and I'm checking if there is

00:11:38,300 --> 00:11:45,140
a logged-in user and if there is I'm

00:11:41,410 --> 00:11:47,240
just inserting a new document into my

00:11:45,140 --> 00:11:48,769
short box entries collection with the

00:11:47,240 --> 00:11:51,440
current user ID the text the user

00:11:48,769 --> 00:11:54,920
entered and the new date and then of

00:11:51,440 --> 00:11:57,110
course I'm resetting the form 20 all the

00:11:54,920 --> 00:11:59,870
communication that goes on there all the

00:11:57,110 --> 00:12:01,399
Ajax calls are all all the inserts and

00:11:59,870 --> 00:12:02,779
the stuff in the back end is all done

00:12:01,399 --> 00:12:05,450
automatically I don't have to care about

00:12:02,779 --> 00:12:08,180
this so this makes it really really a

00:12:05,450 --> 00:12:11,180
small and really easy and fast to write

00:12:08,180 --> 00:12:16,250
I said that all the stuff updates

00:12:11,180 --> 00:12:24,100
automatically so now I have an a second

00:12:16,250 --> 00:12:24,100
browser which is quite hard to resize so

00:12:28,700 --> 00:12:41,750
so here I'm creating a second account

00:12:31,960 --> 00:12:45,020
Bob I have to create an account ok so if

00:12:41,750 --> 00:12:49,510
Bob's Bob writes something hello world

00:12:45,020 --> 00:12:54,290
and sends it without any reload it gets

00:12:49,510 --> 00:12:55,430
shown here automatically I don't also I

00:12:54,290 --> 00:12:57,290
don't have to care about all the

00:12:55,430 --> 00:13:03,050
communication happening there I'll tell

00:12:57,290 --> 00:13:10,070
you in a moment how this works so let's

00:13:03,050 --> 00:13:11,510
get back to the slides fancy so a lot of

00:13:10,070 --> 00:13:13,340
stuff meet your handles for you but

00:13:11,510 --> 00:13:15,860
what's in it for you because you have

00:13:13,340 --> 00:13:18,050
your legacy applications the big

00:13:15,860 --> 00:13:20,000
projects and you can't probably not pay

00:13:18,050 --> 00:13:22,310
something up on meteor there was

00:13:20,000 --> 00:13:26,350
actually a lot of stuff that you can use

00:13:22,310 --> 00:13:28,610
in your projects in your daily work

00:13:26,350 --> 00:13:33,320
first of all that's my relationship with

00:13:28,610 --> 00:13:38,870
CSS I can't do it and I if anybody is a

00:13:33,320 --> 00:13:40,460
CSS master for me it's just ok if it

00:13:38,870 --> 00:13:44,330
doesn't work in the Explorer at zoom one

00:13:40,460 --> 00:13:46,670
and I can do this so it's always worth

00:13:44,330 --> 00:13:48,110
it to look at how other people are doing

00:13:46,670 --> 00:13:50,270
these days especially if you want to

00:13:48,110 --> 00:13:52,190
refactor and clean your CS up as up and

00:13:50,270 --> 00:13:55,430
I use bootstrap for the small demo and

00:13:52,190 --> 00:13:57,530
it's I trust the people doing this as in

00:13:55,430 --> 00:13:59,060
our company and say ok oftentimes look

00:13:57,530 --> 00:14:00,860
at bootstrap see how they are doing it

00:13:59,060 --> 00:14:02,840
and maybe apply some of their patterns

00:14:00,860 --> 00:14:04,700
to us so it's really worth checking out

00:14:02,840 --> 00:14:08,510
these cssm right works because they are

00:14:04,700 --> 00:14:12,230
very smart people there then templates

00:14:08,510 --> 00:14:14,030
are used templates in my application who

00:14:12,230 --> 00:14:17,690
of you is using templates in your

00:14:14,030 --> 00:14:20,570
JavaScript application like half maybe

00:14:17,690 --> 00:14:22,970
oh yeah I we do also add researchgate

00:14:20,570 --> 00:14:25,340
just saying oftentimes in JavaScript

00:14:22,970 --> 00:14:28,190
application you see stuff like this you

00:14:25,340 --> 00:14:31,610
have a string with some HTML in it

00:14:28,190 --> 00:14:33,500
you're iterating over some data you can

00:14:31,610 --> 00:14:37,550
concatenate in the string and then put

00:14:33,500 --> 00:14:40,639
the string somewhere in a download this

00:14:37,550 --> 00:14:45,470
is who has seen code like this

00:14:40,639 --> 00:14:50,480
great so let's written code like this

00:14:45,470 --> 00:14:55,610
okay this is wrong on so many levels

00:14:50,480 --> 00:15:01,110
does anybody see the arrow in this code

00:14:55,610 --> 00:15:06,870
yes oh no this perverted I could have an

00:15:01,110 --> 00:15:09,300
ID with an ash right correct it's not

00:15:06,870 --> 00:15:10,920
closing and it's really really hard to

00:15:09,300 --> 00:15:12,570
miss because I don't have any syntax

00:15:10,920 --> 00:15:14,579
highlighting in here because justice

00:15:12,570 --> 00:15:18,149
string I don't have any structure any

00:15:14,579 --> 00:15:23,010
intention so it's very easy to miss also

00:15:18,149 --> 00:15:24,810
I just noticed yesterday it's actually a

00:15:23,010 --> 00:15:26,310
cross-site scripting vulnerability

00:15:24,810 --> 00:15:29,370
because I'm not escaping the display

00:15:26,310 --> 00:15:32,310
name okay maybe it's escaped in the back

00:15:29,370 --> 00:15:35,610
end so it could be but it's very easy to

00:15:32,310 --> 00:15:39,029
use this to also have like XSS holes in

00:15:35,610 --> 00:15:40,769
your application then we are forgetting

00:15:39,029 --> 00:15:43,050
everything we learned with server-side

00:15:40,769 --> 00:15:46,079
programming because there we have stuff

00:15:43,050 --> 00:15:48,390
like MVC we're using templates all the

00:15:46,079 --> 00:15:50,040
time to separate our concerns and here

00:15:48,390 --> 00:15:57,120
we're just putting everything together

00:15:50,040 --> 00:15:58,560
so don't do this keynote great use

00:15:57,120 --> 00:15:59,850
templates and a lot of templating

00:15:58,560 --> 00:16:03,600
languages available and they're very

00:15:59,850 --> 00:16:05,940
easy to use there's master J ass Hogan

00:16:03,600 --> 00:16:07,800
JSU's beta key message but only faster

00:16:05,940 --> 00:16:09,930
because tempers are precompiled

00:16:07,800 --> 00:16:13,100
handlebars which is also a master style

00:16:09,930 --> 00:16:17,449
like there's jquery templates and a

00:16:13,100 --> 00:16:20,010
whole lot of other things just look for

00:16:17,449 --> 00:16:22,490
JavaScript templating if and tons of

00:16:20,010 --> 00:16:24,930
stuff that you can use and actually

00:16:22,490 --> 00:16:27,089
tizzies templating languages handle all

00:16:24,930 --> 00:16:28,529
the sentation stuff you have nice HTML

00:16:27,089 --> 00:16:31,589
templates that also your designers can

00:16:28,529 --> 00:16:34,319
use you also find the templates in your

00:16:31,589 --> 00:16:36,600
HTML after what if your application gets

00:16:34,319 --> 00:16:38,519
bigger and don't have to search two tons

00:16:36,600 --> 00:16:41,449
of JavaScript code in order to find

00:16:38,519 --> 00:16:44,910
where to change at a class to a dom node

00:16:41,449 --> 00:16:46,980
next what you saw was two-way

00:16:44,910 --> 00:16:50,760
communications of this instant updating

00:16:46,980 --> 00:16:52,800
thing with meteor it's done with

00:16:50,760 --> 00:16:56,310
WebSockets depending on the browser and

00:16:52,800 --> 00:16:59,310
it falls back to long polling on short

00:16:56,310 --> 00:17:01,949
pulling all that stuff and they're

00:16:59,310 --> 00:17:04,500
already so it's very easy to use if

00:17:01,949 --> 00:17:08,159
you're using libraries like socket i/o

00:17:04,500 --> 00:17:10,770
or sock j/s or stuff like a WebSocket if

00:17:08,159 --> 00:17:12,220
you're a job a guy and all these

00:17:10,770 --> 00:17:15,339
solutions also fall back to

00:17:12,220 --> 00:17:16,929
techniques that work in ie6 even and my

00:17:15,339 --> 00:17:18,789
clever solution would be just to use

00:17:16,929 --> 00:17:20,919
some thin line flesh and even that is

00:17:18,789 --> 00:17:23,650
supported by these frameworks and these

00:17:20,919 --> 00:17:24,909
libraries so there's something to think

00:17:23,650 --> 00:17:28,089
about to actually make your application

00:17:24,909 --> 00:17:29,590
more responsive in some ways besting

00:17:28,089 --> 00:17:31,480
indication counters on your application

00:17:29,590 --> 00:17:33,640
on your website if a new message comes

00:17:31,480 --> 00:17:37,360
if the user just ceases when the message

00:17:33,640 --> 00:17:38,830
comes and not if you realize you

00:17:37,360 --> 00:17:40,030
actually create more engagement so that

00:17:38,830 --> 00:17:43,390
actually get something you can think

00:17:40,030 --> 00:17:45,780
about if you want to more no more about

00:17:43,390 --> 00:17:48,610
web sockets read the specification or

00:17:45,780 --> 00:17:52,240
just read this blog article because this

00:17:48,610 --> 00:17:54,970
explains is very very well now that we

00:17:52,240 --> 00:17:57,580
all the groundwork of application like

00:17:54,970 --> 00:17:58,990
basic stuff storing some data let's have

00:17:57,580 --> 00:18:01,900
some fun with it and match it up with

00:17:58,990 --> 00:18:05,590
external data often times you see you

00:18:01,900 --> 00:18:08,169
see with these streams and user content

00:18:05,590 --> 00:18:10,270
that people put links into them like

00:18:08,169 --> 00:18:12,640
this YouTube video wouldn't it be nice

00:18:10,270 --> 00:18:15,280
to actually not only have this link

00:18:12,640 --> 00:18:19,510
there but a preview like for facebook

00:18:15,280 --> 00:18:23,350
does fortunately youTube allows us to

00:18:19,510 --> 00:18:25,000
include their videos on external sites

00:18:23,350 --> 00:18:26,650
they have this embed feature you can go

00:18:25,000 --> 00:18:28,630
on the side onto their side if you have

00:18:26,650 --> 00:18:30,880
a video it click on embed this on

00:18:28,630 --> 00:18:32,559
another page you get back a bit of HTML

00:18:30,880 --> 00:18:34,900
which is basically in high frame and you

00:18:32,559 --> 00:18:37,360
can put it into your side if you analyze

00:18:34,900 --> 00:18:38,590
this you see all this I from is

00:18:37,360 --> 00:18:40,320
basically every time the same the only

00:18:38,590 --> 00:18:42,429
thing that changed is the video ID

00:18:40,320 --> 00:18:45,909
that's all right what I could do is I

00:18:42,429 --> 00:18:48,010
could for each entry that I have look if

00:18:45,909 --> 00:18:49,929
there are links in there if the link is

00:18:48,010 --> 00:18:52,390
a youtube link I could pass all the

00:18:49,929 --> 00:18:56,740
video ID because it's always like the V

00:18:52,390 --> 00:19:01,990
parameter hopefully and then put it into

00:18:56,740 --> 00:19:06,130
the YouTube iframe tag and put into my

00:19:01,990 --> 00:19:07,780
side but what if YouTube changes their

00:19:06,130 --> 00:19:10,330
URL structure and I think they also have

00:19:07,780 --> 00:19:12,940
you video URL that don't have a V

00:19:10,330 --> 00:19:16,480
parameter what if the Ember tech change

00:19:12,940 --> 00:19:19,240
ok I have to change my coat that's not

00:19:16,480 --> 00:19:22,179
too bad and hopefully happens not lot of

00:19:19,240 --> 00:19:24,169
times what if I don't not only want to

00:19:22,179 --> 00:19:26,029
support YouTube but also all the

00:19:24,169 --> 00:19:27,529
other sources around there and maybe not

00:19:26,029 --> 00:19:29,720
only videos but also all the image

00:19:27,529 --> 00:19:31,429
services then I have like maybe by

00:19:29,720 --> 00:19:33,200
product manager camps up was twenty

00:19:31,429 --> 00:19:34,820
forty services who wants to support and

00:19:33,200 --> 00:19:36,609
have to look through all the

00:19:34,820 --> 00:19:40,070
documentation or they called all their

00:19:36,609 --> 00:19:42,049
embed texts they have and have to change

00:19:40,070 --> 00:19:44,210
frequently because with 40 services is

00:19:42,049 --> 00:19:46,399
very very likely that each one month's

00:19:44,210 --> 00:19:49,129
one of them changes something so it's a

00:19:46,399 --> 00:19:52,429
hell to maintain fortunately there is a

00:19:49,129 --> 00:19:54,200
solution for that one of the solutions

00:19:52,429 --> 00:19:56,720
are many of them one of the solution is

00:19:54,200 --> 00:20:00,379
called om met it works like this you

00:19:56,720 --> 00:20:02,840
have a URL to a view to be diem if you

00:20:00,379 --> 00:20:04,759
query this URL you get back in the HTML

00:20:02,840 --> 00:20:08,200
page and in the header there are some

00:20:04,759 --> 00:20:10,549
links pointing to an oem bed endpoint

00:20:08,200 --> 00:20:12,830
this is the same endpoint a bit bigger

00:20:10,549 --> 00:20:14,809
so it's youtube.com slash om bed and

00:20:12,830 --> 00:20:16,730
then the URL of the YouTube video and

00:20:14,809 --> 00:20:20,389
then the format's Jason and some other

00:20:16,730 --> 00:20:22,970
parameters if you call this URL you get

00:20:20,389 --> 00:20:24,619
back a JSON object with some meta

00:20:22,970 --> 00:20:27,379
information about the video like the

00:20:24,619 --> 00:20:30,799
title which is somewhere in here the

00:20:27,379 --> 00:20:34,100
author some nail image and most

00:20:30,799 --> 00:20:36,649
importantly a block of HTML which is a

00:20:34,100 --> 00:20:38,809
century the YouTube a medtech which

00:20:36,649 --> 00:20:41,029
renders the iframe through render the

00:20:38,809 --> 00:20:43,299
YouTube video in or in this case it's

00:20:41,029 --> 00:20:46,609
not an iframe but it's an object check

00:20:43,299 --> 00:20:50,679
and the result may then look like this

00:20:46,609 --> 00:20:54,259
if you don't want to make all these

00:20:50,679 --> 00:20:56,419
process of actually discovering the Oyam

00:20:54,259 --> 00:20:58,399
bad endpoint because it's like various

00:20:56,419 --> 00:21:01,609
you have to do and all the stuff except

00:20:58,399 --> 00:21:03,679
H value have to parse you also can use a

00:21:01,609 --> 00:21:05,720
service for example someone like and

00:21:03,679 --> 00:21:09,470
badly you who managed to do all that off

00:21:05,720 --> 00:21:12,350
for you so you just make a request to

00:21:09,470 --> 00:21:13,609
end badly say I want to have the omf

00:21:12,350 --> 00:21:15,139
meta information about this YouTube

00:21:13,609 --> 00:21:17,529
video and then badly gives it back to

00:21:15,139 --> 00:21:19,909
you and it's very very fairly priced

00:21:17,529 --> 00:21:22,659
other ways to discover meta information

00:21:19,909 --> 00:21:26,389
is through open graph which is basically

00:21:22,659 --> 00:21:29,440
some additional meta tags in the HTML of

00:21:26,389 --> 00:21:32,090
the page like a title and an image

00:21:29,440 --> 00:21:34,340
Twitter uses a different technique

00:21:32,090 --> 00:21:37,110
because they just have different names

00:21:34,340 --> 00:21:39,030
of the meta tag because like

00:21:37,110 --> 00:21:42,000
the same names of that are already there

00:21:39,030 --> 00:21:44,400
and open graph is not worth it there's

00:21:42,000 --> 00:21:48,270
also microdata and micro formats which

00:21:44,400 --> 00:21:50,910
just work that you annotate some dumb

00:21:48,270 --> 00:21:52,799
notes where the content important

00:21:50,910 --> 00:21:54,630
content like the title or description or

00:21:52,799 --> 00:21:58,110
some images in you annotate this with

00:21:54,630 --> 00:22:00,030
special classes pick whatever you want

00:21:58,110 --> 00:22:02,070
to get made to information and also you

00:22:00,030 --> 00:22:04,650
can just fall back to the comma mate it

00:22:02,070 --> 00:22:06,690
acts like a title description if you

00:22:04,650 --> 00:22:18,990
want to have meta information about the

00:22:06,690 --> 00:22:25,740
URL let's demo this so first of all I'm

00:22:18,990 --> 00:22:30,799
gonna post a youtube video it has been

00:22:25,740 --> 00:22:30,799
playing so

00:22:40,790 --> 00:22:55,500
okay i have to copy over my keys and now

00:22:48,450 --> 00:22:59,190
ah marka it worked so what happened now

00:22:55,500 --> 00:23:03,180
is that i sent this URL to own that cut

00:22:59,190 --> 00:23:05,790
back the preview and inserted the

00:23:03,180 --> 00:23:11,130
thumbnail URL and if I click on it I can

00:23:05,790 --> 00:23:20,100
actually play the video and be happy

00:23:11,130 --> 00:23:22,470
about it code boys I edit the N Headley

00:23:20,100 --> 00:23:24,030
library they offer a jquery based java

00:23:22,470 --> 00:23:30,300
script by which makes it very easy to

00:23:24,030 --> 00:23:32,150
use i'm here registering for my entry

00:23:30,300 --> 00:23:35,580
template on the rendered event and for

00:23:32,150 --> 00:23:38,550
all links that have the class or on that

00:23:35,580 --> 00:23:41,850
because i give every link the class one

00:23:38,550 --> 00:23:44,970
bed when liquefying my templates or my

00:23:41,850 --> 00:23:48,630
entries I call the embedded function

00:23:44,970 --> 00:23:51,000
with my API key and then if I get back

00:23:48,630 --> 00:23:52,620
the display call call back with the meta

00:23:51,000 --> 00:24:01,500
information in this own bed object I

00:23:52,620 --> 00:24:03,810
just put this after my entry for this I

00:24:01,500 --> 00:24:06,960
created also a template called embed

00:24:03,810 --> 00:24:09,150
preview which is basically the sumner

00:24:06,960 --> 00:24:12,690
URL and the small link with a provider

00:24:09,150 --> 00:24:14,490
name in the title if you want to get in

00:24:12,690 --> 00:24:19,890
more details about this check out the

00:24:14,490 --> 00:24:25,470
code afterwards important when you're

00:24:19,890 --> 00:24:27,300
including external content is security

00:24:25,470 --> 00:24:30,230
this is actually safe because we get

00:24:27,300 --> 00:24:33,090
back some HTML from an external source

00:24:30,230 --> 00:24:34,920
now it's not safe because I could be

00:24:33,090 --> 00:24:36,660
script tags in it and then you have

00:24:34,920 --> 00:24:38,160
cross-site scripting or even if you

00:24:36,660 --> 00:24:40,650
don't have any script X I could be

00:24:38,160 --> 00:24:42,360
linked tags which just execute

00:24:40,650 --> 00:24:45,180
JavaScript on click and all that stuff

00:24:42,360 --> 00:24:48,870
so what you should do is to prevent

00:24:45,180 --> 00:24:51,870
something like this you should sanitized

00:24:48,870 --> 00:24:54,090
you're the input that comes in of course

00:24:51,870 --> 00:24:57,450
and badly also has some sanitation in it

00:24:54,090 --> 00:24:59,790
so they also take care that there is no

00:24:57,450 --> 00:25:01,650
script tags and no inverse stuff coming

00:24:59,790 --> 00:25:05,190
in but you should really trust nobody

00:25:01,650 --> 00:25:08,550
and not even yourself probably so

00:25:05,190 --> 00:25:11,520
sanitize external input and one library

00:25:08,550 --> 00:25:13,260
to do this is called kaha it's for by

00:25:11,520 --> 00:25:15,120
Google so they know that stuff and

00:25:13,260 --> 00:25:17,730
they're using it themselves and it's

00:25:15,120 --> 00:25:18,990
sanitized HTML and strips out all things

00:25:17,730 --> 00:25:21,840
that you don't want to have in there

00:25:18,990 --> 00:25:26,730
like script tags invalid us and all that

00:25:21,840 --> 00:25:30,000
so if I want to demo that first of all

00:25:26,730 --> 00:25:34,110
I'm going to add some cross-site

00:25:30,000 --> 00:25:36,929
scripting to my page so if I click in

00:25:34,110 --> 00:25:43,800
here and actually em bat the HTML I get

00:25:36,929 --> 00:25:52,140
a nice javascript alert because what i

00:25:43,800 --> 00:25:55,890
did is i just replaced the actual HTML

00:25:52,140 --> 00:26:00,620
with some fake HTML with script tag in

00:25:55,890 --> 00:26:00,620
it if i want to sanitize the smell

00:26:03,890 --> 00:26:08,640
the only thing I added is the call to

00:26:06,420 --> 00:26:13,650
the caja library to sanitize this eight

00:26:08,640 --> 00:26:16,860
HTML one thing you see is behind the

00:26:13,650 --> 00:26:21,420
script tag there's also a bolt foo and

00:26:16,860 --> 00:26:24,840
if I reload my page already reloaded

00:26:21,420 --> 00:26:27,150
nice and click on it again you see the

00:26:24,840 --> 00:26:29,370
only thing happens is no JavaScript

00:26:27,150 --> 00:26:31,020
execution and only this foo is in the

00:26:29,370 --> 00:26:36,960
air so the whole script deck is stripped

00:26:31,020 --> 00:26:42,900
out so let's go back to removing this

00:26:36,960 --> 00:26:44,730
and back to the slides so if you have

00:26:42,900 --> 00:26:47,790
external content always sanitize it

00:26:44,730 --> 00:26:52,140
don't trust some externally someone

00:26:47,790 --> 00:26:54,720
externally to do it for you next api

00:26:52,140 --> 00:26:59,280
access we may want to get data from

00:26:54,720 --> 00:27:01,170
somewhere else and we maybe want to do

00:26:59,280 --> 00:27:03,660
this in our client application not hit

00:27:01,170 --> 00:27:05,910
our servers for that because why just

00:27:03,660 --> 00:27:08,570
routing this over our service it's like

00:27:05,910 --> 00:27:11,130
what load that we don't actually need

00:27:08,570 --> 00:27:13,140
for this demonstration i'm using as an

00:27:11,130 --> 00:27:14,760
api provider statusnet it's a micro

00:27:13,140 --> 00:27:17,550
owing a platform and just use telnet

00:27:14,760 --> 00:27:19,350
because maybe on conferences internet

00:27:17,550 --> 00:27:20,640
connection is not there and this can be

00:27:19,350 --> 00:27:22,710
installed locally because it's open

00:27:20,640 --> 00:27:26,340
source but it would work the same for

00:27:22,710 --> 00:27:29,460
Twitter Facebook or anybody else one

00:27:26,340 --> 00:27:31,080
problem we have when doing API requests

00:27:29,460 --> 00:27:32,750
from our client application from

00:27:31,080 --> 00:27:36,059
javascript is the same origin policy

00:27:32,750 --> 00:27:38,550
because of the same origin policy policy

00:27:36,059 --> 00:27:41,100
boots which says that i only can access

00:27:38,550 --> 00:27:43,100
stuff that is on the same domain as my

00:27:41,100 --> 00:27:45,809
application or on the same hostname

00:27:43,100 --> 00:27:48,660
which is really important I can't just

00:27:45,809 --> 00:27:51,120
make Ajax calls to twitter com or

00:27:48,660 --> 00:27:52,470
stellar subnet because of roller will

00:27:51,120 --> 00:27:54,090
then say no you're not allowed to do

00:27:52,470 --> 00:27:55,590
this this is really important for the

00:27:54,090 --> 00:27:57,210
web because otherwise I could just make

00:27:55,590 --> 00:27:59,190
an edge of the quest to Facebook as the

00:27:57,210 --> 00:28:02,070
user let's login I get back in session

00:27:59,190 --> 00:28:03,840
cookie not good thing so it's really

00:28:02,070 --> 00:28:06,690
really good that there is the same

00:28:03,840 --> 00:28:08,309
origin policy for API so I trust the avi

00:28:06,690 --> 00:28:10,620
provider not to leak any session

00:28:08,309 --> 00:28:13,410
information the user has maybe because

00:28:10,620 --> 00:28:15,600
it's locked in in another tab on

00:28:13,410 --> 00:28:17,160
that because it's mostly separated and

00:28:15,600 --> 00:28:22,380
authorization is done through something

00:28:17,160 --> 00:28:24,900
else in session or cookies so before API

00:28:22,380 --> 00:28:27,660
calls is totally valid there are several

00:28:24,900 --> 00:28:31,050
ways around that one is Jason P I don't

00:28:27,660 --> 00:28:32,880
want to explain as a bit hacky much much

00:28:31,050 --> 00:28:36,090
nicer is cross-origin resource sharing

00:28:32,880 --> 00:28:39,840
which works like this is also supported

00:28:36,090 --> 00:28:42,780
in all browsers now not in ie6 I think

00:28:39,840 --> 00:28:47,370
it's a ie8 upwards but I 6 is dying

00:28:42,780 --> 00:28:49,820
hopefully and I 7 also hopefully and so

00:28:47,370 --> 00:28:52,440
you actually can use this in production

00:28:49,820 --> 00:28:54,630
it works like this if my client

00:28:52,440 --> 00:28:56,370
application on this domain makes the

00:28:54,630 --> 00:28:59,400
request in a dream sequence to a foreign

00:28:56,370 --> 00:29:02,640
domain first the browser makes an

00:28:59,400 --> 00:29:04,950
options request and this options

00:29:02,640 --> 00:29:07,920
requests should return such a header

00:29:04,950 --> 00:29:11,280
access control other origin whose value

00:29:07,920 --> 00:29:13,530
matches the domain of the one doing the

00:29:11,280 --> 00:29:16,410
request of course the asterisk matches

00:29:13,530 --> 00:29:18,660
all but I could restrict this I also can

00:29:16,410 --> 00:29:23,010
put in more other restrictions like what

00:29:18,660 --> 00:29:24,540
headers are allowed and so I could like

00:29:23,010 --> 00:29:26,550
say okay you're not allowed to send any

00:29:24,540 --> 00:29:29,780
cooking headers for example what options

00:29:26,550 --> 00:29:33,990
in methods are allowed on this resource

00:29:29,780 --> 00:29:35,460
but this is sufficient and if the value

00:29:33,990 --> 00:29:37,110
matches the age of the quest is actually

00:29:35,460 --> 00:29:40,490
performed if not the age the quest is

00:29:37,110 --> 00:29:43,500
not done and you don't get back any data

00:29:40,490 --> 00:29:48,060
so we can access our API what about

00:29:43,500 --> 00:29:51,600
authorization because usually you api's

00:29:48,060 --> 00:29:55,560
use oils for authorization of api's who

00:29:51,600 --> 00:29:57,990
has used before in some project so it's

00:29:55,560 --> 00:30:01,380
a bit painful to use but works quite

00:29:57,990 --> 00:30:03,930
well one problem is is that you actually

00:30:01,380 --> 00:30:06,720
have shared secrets or it relies on

00:30:03,930 --> 00:30:08,430
shared secrets this is not really good

00:30:06,720 --> 00:30:10,680
on our inner JavaScript application

00:30:08,430 --> 00:30:12,240
where all the code is public so the

00:30:10,680 --> 00:30:14,190
secret is not secret anymore and anybody

00:30:12,240 --> 00:30:16,440
could do ages requests on your behalf

00:30:14,190 --> 00:30:18,060
with all stew that changes and it

00:30:16,440 --> 00:30:21,120
because that introduces a way to

00:30:18,060 --> 00:30:23,640
actually do is is securely it works so

00:30:21,120 --> 00:30:25,950
here is the specification if you want to

00:30:23,640 --> 00:30:27,149
read it up it works like this in

00:30:25,950 --> 00:30:29,279
JavaScript context

00:30:27,149 --> 00:30:31,259
one of an application like here this

00:30:29,279 --> 00:30:33,330
Leonard come application and I click on

00:30:31,259 --> 00:30:36,089
the sign in with twitter button it opens

00:30:33,330 --> 00:30:38,099
a browser pop up pointing to the

00:30:36,089 --> 00:30:42,539
authorization endpoint of the API at

00:30:38,099 --> 00:30:44,669
twitter.com there's also parameter on it

00:30:42,539 --> 00:30:46,739
called client ID which is my client ID

00:30:44,669 --> 00:30:49,639
here the client eve of Leonard so I need

00:30:46,739 --> 00:30:54,179
to be pre-registered at the API provider

00:30:49,639 --> 00:30:56,489
in this browser pop-up I can login if

00:30:54,179 --> 00:30:59,460
I'm not logged in already and then say

00:30:56,489 --> 00:31:03,299
yes I really want lineart to access my

00:30:59,460 --> 00:31:05,460
data if I do this the browser still in

00:31:03,299 --> 00:31:08,039
the pop-up here redirects me to a pre

00:31:05,460 --> 00:31:10,109
registered callback URL and the access

00:31:08,039 --> 00:31:12,779
token that I need Nate later for the API

00:31:10,109 --> 00:31:16,409
requests is a part of the fragment of

00:31:12,779 --> 00:31:19,440
the URL because it's part of the

00:31:16,409 --> 00:31:21,570
fragment that means it's not sent to the

00:31:19,440 --> 00:31:23,249
backend server because a fragment always

00:31:21,570 --> 00:31:25,589
stays in the browser has not sent over

00:31:23,249 --> 00:31:27,239
the internet so also nope the access

00:31:25,589 --> 00:31:29,309
token will not be visible to any proxies

00:31:27,239 --> 00:31:32,669
in between and so on so the only thing

00:31:29,309 --> 00:31:36,469
this callback endpoint can do is render

00:31:32,669 --> 00:31:39,539
out some static HTML and JavaScript and

00:31:36,469 --> 00:31:41,759
this JavaScript then can parse out the

00:31:39,539 --> 00:31:43,619
excess toten from the fragment of the

00:31:41,759 --> 00:31:46,889
URL because in JavaScript you can access

00:31:43,619 --> 00:31:49,349
is and if the callback endpoint is on

00:31:46,889 --> 00:31:50,879
the same domain as our client

00:31:49,349 --> 00:31:54,570
application in the underlying parent

00:31:50,879 --> 00:31:56,759
window this JavaScript here can call a

00:31:54,570 --> 00:31:59,099
function on the parent window to

00:31:56,759 --> 00:32:03,210
transport the excess toten from here to

00:31:59,099 --> 00:32:05,669
here and then close this popup window so

00:32:03,210 --> 00:32:07,950
in my application I can have then the

00:32:05,669 --> 00:32:10,830
access token and can make ajax request

00:32:07,950 --> 00:32:15,330
to the API if it supports cross-origin

00:32:10,830 --> 00:32:16,859
resource sharing of course I have to

00:32:15,330 --> 00:32:19,080
store the excess totem also somehow

00:32:16,859 --> 00:32:20,759
because otherwise if I hit refresh on my

00:32:19,080 --> 00:32:23,729
browser it would be gone again I would

00:32:20,759 --> 00:32:27,359
need to do this all oil stands again for

00:32:23,729 --> 00:32:29,789
storing the excess toten you could use a

00:32:27,359 --> 00:32:31,619
cookie but that gets transported over

00:32:29,789 --> 00:32:34,200
the internet again so much nicer if

00:32:31,619 --> 00:32:35,549
available is local storage and i'm also

00:32:34,200 --> 00:32:40,799
using that in my

00:32:35,549 --> 00:32:43,350
verification also if I have known a TI

00:32:40,799 --> 00:32:46,919
connection I may want to get new entries

00:32:43,350 --> 00:32:48,929
of for example Twitter push to my

00:32:46,919 --> 00:32:51,690
application automatically they actually

00:32:48,929 --> 00:32:53,399
really nice instead of me worrying all

00:32:51,690 --> 00:32:55,080
the time hey does the user have new

00:32:53,399 --> 00:32:57,659
tweets would be nice if true that would

00:32:55,080 --> 00:33:00,899
just send me the tweets if there are

00:32:57,659 --> 00:33:03,840
coming in and sent so i can save a whole

00:33:00,899 --> 00:33:06,450
lot of api calls and load there are

00:33:03,840 --> 00:33:08,460
several ways to do this and each API

00:33:06,450 --> 00:33:10,980
provider has their own custom homeroom

00:33:08,460 --> 00:33:16,230
solution for sellers net it's called

00:33:10,980 --> 00:33:18,480
pubsubhubbub pubsubhubbub really really

00:33:16,230 --> 00:33:21,859
tried very often at home to pronounce

00:33:18,480 --> 00:33:27,269
this without stirring it works like this

00:33:21,859 --> 00:33:29,669
when I could have the API credentials of

00:33:27,269 --> 00:33:32,309
the user and I'm connected through also

00:33:29,669 --> 00:33:36,119
it i also have a username and the user

00:33:32,309 --> 00:33:37,980
ID and actually like the stream where l

00:33:36,119 --> 00:33:43,619
of the stream that the user has all the

00:33:37,980 --> 00:33:46,379
users homes feet if this home feed API

00:33:43,619 --> 00:33:49,109
provider supports pops up hop up I can

00:33:46,379 --> 00:33:52,590
register for this feat of the user at

00:33:49,109 --> 00:33:54,600
some central hub that provides its feet

00:33:52,590 --> 00:33:57,330
there's a bit of subscription mechanism

00:33:54,600 --> 00:34:00,239
going on there and then each time the

00:33:57,330 --> 00:34:04,019
user on the right posts a new tweet on

00:34:00,239 --> 00:34:06,779
Twitter or on status net statusnet sense

00:34:04,019 --> 00:34:09,599
this post to the hub and the hub then

00:34:06,779 --> 00:34:13,200
thinks every subscriber like we

00:34:09,599 --> 00:34:17,720
subscribe for it and send them the tweet

00:34:13,200 --> 00:34:21,480
and now I can do whatever I want is it

00:34:17,720 --> 00:34:23,579
of course this doesn't work this only

00:34:21,480 --> 00:34:25,649
works back end to back end so server to

00:34:23,579 --> 00:34:28,079
server because like a swivel somewhere

00:34:25,649 --> 00:34:31,139
in the internet can't send a new request

00:34:28,079 --> 00:34:32,549
to a browser so we have to certain or

00:34:31,139 --> 00:34:37,460
meteor application we actually have to

00:34:32,549 --> 00:34:44,490
send it to the back end let's demo this

00:34:37,460 --> 00:34:46,919
first of all let's connect through our

00:34:44,490 --> 00:34:48,599
more connected sorry let's connect to

00:34:46,919 --> 00:34:55,369
set aside so I click this connect button

00:34:48,599 --> 00:34:55,369
down here a browser pop-up often opens I

00:34:56,390 --> 00:35:05,940
say okay I have to log in here that's

00:34:58,920 --> 00:35:09,569
fine and I say allow so I'm connected

00:35:05,940 --> 00:35:12,000
now here the username down here comes

00:35:09,569 --> 00:35:15,329
from statusnet trust me just on that or

00:35:12,000 --> 00:35:22,650
look it up into the code and if I go a

00:35:15,329 --> 00:35:27,420
bit further I'm adding now pops up hop

00:35:22,650 --> 00:35:36,509
up functionality so let's display this

00:35:27,420 --> 00:35:40,230
here in my application I saw now also

00:35:36,509 --> 00:35:42,180
subscribe to the hub height could the

00:35:40,230 --> 00:35:43,609
other this as an extra button just so

00:35:42,180 --> 00:35:50,880
that you can subscribe and unsubscribe

00:35:43,609 --> 00:35:54,920
and if i add a new entry now here on

00:35:50,880 --> 00:35:54,920
status net ones are locked in

00:36:00,480 --> 00:36:12,570
hello through pops up up up and send it

00:36:07,940 --> 00:36:14,250
you see it right here without any

00:36:12,570 --> 00:36:16,740
refreshing so what I'm doing in my

00:36:14,250 --> 00:36:19,170
meteor application i'm getting in the

00:36:16,740 --> 00:36:21,690
back end the call from the hub with the

00:36:19,170 --> 00:36:25,619
new entry i'm inserting it into my

00:36:21,690 --> 00:36:26,970
collection and it automatically through

00:36:25,619 --> 00:36:31,130
the web sockets connection gets

00:36:26,970 --> 00:36:31,130
transported to my client application

00:36:31,310 --> 00:36:37,200
since we're a bit short in time just

00:36:34,820 --> 00:36:40,770
look it up into the in the code

00:36:37,200 --> 00:36:46,920
afterwards it's like 20 lines of

00:36:40,770 --> 00:36:51,570
JavaScript or so and to finish all that

00:36:46,920 --> 00:36:54,660
up I also added some other nice features

00:36:51,570 --> 00:36:57,210
that you also just for fun for playing

00:36:54,660 --> 00:37:01,609
around with it one of them is called

00:36:57,210 --> 00:37:07,020
Sarah because Apple has Theory if's ara

00:37:01,609 --> 00:37:13,010
so what i can do is i can say at a

00:37:07,020 --> 00:37:22,830
message at Sarah what is the biggest

00:37:13,010 --> 00:37:26,310
building in London and white bit there

00:37:22,830 --> 00:37:30,270
it is Sarah answered me the biggest

00:37:26,310 --> 00:37:32,690
bullying London is by hey the chart this

00:37:30,270 --> 00:37:34,890
is correct anybody from non linear

00:37:32,690 --> 00:37:38,010
nobody from I think it's correct because

00:37:34,890 --> 00:37:39,840
it's very new and it was in the news so

00:37:38,010 --> 00:37:42,000
how does this work this magic thing

00:37:39,840 --> 00:37:44,760
actually it's very easy because i'm just

00:37:42,000 --> 00:37:49,619
using a public api code from wolfram

00:37:44,760 --> 00:37:53,070
alpha where i post my question to and

00:37:49,619 --> 00:37:56,820
get this answer back so if we look at

00:37:53,070 --> 00:37:58,920
some of this code it's happening in this

00:37:56,820 --> 00:38:00,690
Bay in the back end at the sera je s

00:37:58,920 --> 00:38:04,260
it's basically another man would he be

00:38:00,690 --> 00:38:07,380
another meteor or feature i have a small

00:38:04,260 --> 00:38:10,109
query here i say okay find me all

00:38:07,380 --> 00:38:13,320
entries that start with at Sarah space

00:38:10,109 --> 00:38:13,930
and then I observe this query and meteor

00:38:13,320 --> 00:38:16,119
that means it

00:38:13,930 --> 00:38:20,829
run all the time and each time a new

00:38:16,119 --> 00:38:25,180
entry was added I basically just called

00:38:20,829 --> 00:38:27,790
the ball from alpha API and then if I

00:38:25,180 --> 00:38:30,040
got an answer I'm inserting this answer

00:38:27,790 --> 00:38:33,000
as a new entry in the shop in my short

00:38:30,040 --> 00:38:36,460
box entries collections from earlier and

00:38:33,000 --> 00:38:39,780
the last feature which are added like

00:38:36,460 --> 00:38:47,890
eight days ago also on nine days ago is

00:38:39,780 --> 00:38:51,910
a chat feature so if I've two browsers

00:38:47,890 --> 00:38:57,190
here I now can click on a name and send

00:38:51,910 --> 00:39:01,380
a chat message message to the other

00:38:57,190 --> 00:39:01,380
users and of course I also can reply

00:39:03,000 --> 00:39:10,140
here it is so doesn't look very fancy it

00:39:07,930 --> 00:39:13,140
actually is because the communication

00:39:10,140 --> 00:39:15,670
from here to here it's done peer-to-peer

00:39:13,140 --> 00:39:19,109
there's no server communication between

00:39:15,670 --> 00:39:21,880
this so I directly send this message

00:39:19,109 --> 00:39:24,520
from this browser to this problem the

00:39:21,880 --> 00:39:30,369
way this is done is through a protocol

00:39:24,520 --> 00:39:32,829
called web RTC which means real-time

00:39:30,369 --> 00:39:35,470
communication in the web between two

00:39:32,829 --> 00:39:37,089
clients the only thing you need a server

00:39:35,470 --> 00:39:38,200
for is actually for marshalling the

00:39:37,089 --> 00:39:39,700
connection and setting up the connection

00:39:38,200 --> 00:39:42,069
once you have the connection the

00:39:39,700 --> 00:39:43,990
communication happens between the client

00:39:42,069 --> 00:39:46,119
and you cannot only send text but also

00:39:43,990 --> 00:39:48,940
binary data that means you can stream

00:39:46,119 --> 00:39:51,099
audio you can stream video this is

00:39:48,940 --> 00:39:55,750
really cool and just recently a week

00:39:51,099 --> 00:39:57,549
also a first library web pack called pjs

00:39:55,750 --> 00:39:59,020
came out that actually wrapped it in a

00:39:57,549 --> 00:40:02,319
very nice interface and makes makes it

00:39:59,020 --> 00:40:05,940
easy to use if you want to know more

00:40:02,319 --> 00:40:13,990
about web RTC this blog article here

00:40:05,940 --> 00:40:15,760
describes it very well so just to give

00:40:13,990 --> 00:40:18,390
you like a hint of what the code is

00:40:15,760 --> 00:40:18,390
looking like

00:40:18,740 --> 00:40:24,050
basically this is one part of it

00:40:21,190 --> 00:40:30,470
basically I'm just setting up a

00:40:24,050 --> 00:40:33,880
connection to appear and then if there

00:40:30,470 --> 00:40:36,830
is incoming data I just display it so

00:40:33,880 --> 00:40:39,050
here is the other part where I just open

00:40:36,830 --> 00:40:42,860
a connection to someone and sending the

00:40:39,050 --> 00:40:48,710
data again if you want to go and morty

00:40:42,860 --> 00:40:51,470
to check out the code afterwards and to

00:40:48,710 --> 00:40:53,990
make it as easy as possible to try it

00:40:51,470 --> 00:40:56,240
out yourself I actually admit more work

00:40:53,990 --> 00:40:58,460
than just building the application I

00:40:56,240 --> 00:41:00,680
also build up a vagrant virtual machine

00:40:58,460 --> 00:41:03,230
so all you have to do is clone this

00:41:00,680 --> 00:41:09,170
vagrant virtual machine say vagrant up

00:41:03,230 --> 00:41:10,580
then vagrant cases H go into the app

00:41:09,170 --> 00:41:13,340
directory which is in the home directory

00:41:10,580 --> 00:41:15,580
of the vagrant vm and then call mr t

00:41:13,340 --> 00:41:17,510
which starts up meteor application

00:41:15,580 --> 00:41:18,890
unfortunately for some of the stuff you

00:41:17,510 --> 00:41:21,410
have to do a bit more because you have

00:41:18,890 --> 00:41:25,400
to modify some host names please follow

00:41:21,410 --> 00:41:29,119
the readme which is not push to github

00:41:25,400 --> 00:41:30,859
yes yet it will be available though the

00:41:29,119 --> 00:41:32,240
VMS or is there i just have to read the

00:41:30,859 --> 00:41:34,820
readme i will do this off of the talk

00:41:32,240 --> 00:41:37,490
and you can just go on there clone this

00:41:34,820 --> 00:41:41,090
set everything up and try it out

00:41:37,490 --> 00:41:44,270
yourself and play with a code so that's

00:41:41,090 --> 00:41:45,890
my talk first of all if you have any

00:41:44,270 --> 00:41:48,380
questions that we can't answer in the

00:41:45,890 --> 00:41:50,300
last five minutes you can contact me

00:41:48,380 --> 00:41:51,790
through various ways and I'm here the

00:41:50,300 --> 00:41:54,200
whole two days of a conference any

00:41:51,790 --> 00:41:57,980
questions about what I just showed you

00:41:54,200 --> 00:42:02,440
went round of applause I think the

00:41:57,980 --> 00:42:02,440
fashion there's also a lifesaver

00:42:06,360 --> 00:42:10,680
thank you very much if anyone's got any

00:42:08,560 --> 00:42:16,600
questions as people would like folks

00:42:10,680 --> 00:42:19,840
coming around okay if not I also it's

00:42:16,600 --> 00:42:22,210
someone is interested I also can offer

00:42:19,840 --> 00:42:23,980
that we do something and the

00:42:22,210 --> 00:42:25,360
unconference check and dive down a bit

00:42:23,980 --> 00:42:26,590
more deeper into the code of the

00:42:25,360 --> 00:42:29,590
demonstration and show a bit more

00:42:26,590 --> 00:42:32,290
because some of the stuff was very like

00:42:29,590 --> 00:42:34,090
fast and I know that and not much

00:42:32,290 --> 00:42:35,890
details on how the implementation actual

00:42:34,090 --> 00:42:37,990
was done so if anybody's interested just

00:42:35,890 --> 00:42:41,440
come to me and we can do like a small

00:42:37,990 --> 00:42:45,160
unconference style session and I can

00:42:41,440 --> 00:42:47,470
show bit more of the code then one last

00:42:45,160 --> 00:42:49,660
thing if you like this talk of if you

00:42:47,470 --> 00:42:51,730
didn't like the stock please go to join

00:42:49,660 --> 00:42:52,690
in and write this talk because it's

00:42:51,730 --> 00:42:55,720
actually very important for the

00:42:52,690 --> 00:42:57,670
organizers for us as speakers to

00:42:55,720 --> 00:43:05,800
actually evaluate how all this was done

00:42:57,670 --> 00:43:07,770
and I hope I change the url so it's I'm

00:43:05,800 --> 00:43:13,930
not quite sure if this was the right URL

00:43:07,770 --> 00:43:16,420
joint in there is PHP UK conference on

00:43:13,930 --> 00:43:19,690
joint in there you find all talks of all

00:43:16,420 --> 00:43:22,000
speakers it the idea is 80 for one or

00:43:19,690 --> 00:43:24,130
just go to PHP unconference and please

00:43:22,000 --> 00:43:25,690
rate the talks this is very important

00:43:24,130 --> 00:43:27,790
for everyone and also important for you

00:43:25,690 --> 00:43:32,130
because it ensures that you get the best

00:43:27,790 --> 00:43:32,130
content on the conference thanks

00:43:42,570 --> 00:43:44,630

YouTube URL: https://www.youtube.com/watch?v=1IiipTQ2WGI


