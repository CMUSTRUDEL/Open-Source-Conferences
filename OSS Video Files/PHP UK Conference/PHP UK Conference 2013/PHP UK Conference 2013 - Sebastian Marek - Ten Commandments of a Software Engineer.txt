Title: PHP UK Conference 2013 - Sebastian Marek - Ten Commandments of a Software Engineer
Publication date: 2013-04-29
Playlist: PHP UK Conference 2013
Description: 
	Software engineering is not an easy profession. You have to constantly learn new things to improve your coding skills and make sure you produce better and cleaner code over time. It's not difficult, but you have to be aware of a few basic principles. With them in mind you will feel a better engineer and will gain respect from your fellow engineers. And the Lord said: "Thou shall always remember to write unit tests - no matter the deadline. Remember to keep the build green. Thou shall commit often and with meaningful messages (...)"

Slides: http://www.slideshare.net/proofek/ten-commandments-of-a-software-engineer-16716894
Captions: 
	00:00:14,960 --> 00:00:21,950
hello everybody I I hope you still awake

00:00:18,200 --> 00:00:26,310
it's been a tough night last night i

00:00:21,950 --> 00:00:28,050
will be talking today about some best

00:00:26,310 --> 00:00:29,730
practices let's say like that i call

00:00:28,050 --> 00:00:31,470
them 10 commandments of software

00:00:29,730 --> 00:00:33,960
engineer if i will be walking like this

00:00:31,470 --> 00:00:36,269
and you know covering slides just shout

00:00:33,960 --> 00:00:40,440
out i'll have it the habit of walking

00:00:36,269 --> 00:00:44,089
around and i'm a bit concerned because

00:00:40,440 --> 00:00:48,210
I've seen I think already to talks which

00:00:44,089 --> 00:00:49,829
have touched on on on similar things so

00:00:48,210 --> 00:00:51,840
there will be a little bit of overlap

00:00:49,829 --> 00:00:53,520
but maybe this will be another

00:00:51,840 --> 00:01:00,149
opportunity for you to kinda you know

00:00:53,520 --> 00:01:02,430
take some stuff of the talk like this

00:01:00,149 --> 00:01:05,580
right so let me introduce myself first

00:01:02,430 --> 00:01:09,500
I'm Sebastian Marek I'm polish but I've

00:01:05,580 --> 00:01:09,500
lived in the UK for the past seven years

00:01:09,950 --> 00:01:15,539
I'm very passionate if it comes to

00:01:12,479 --> 00:01:19,069
software quality and and best practicing

00:01:15,539 --> 00:01:23,340
a best practices in software engineering

00:01:19,069 --> 00:01:25,050
I dare to think that I'm actually a

00:01:23,340 --> 00:01:28,259
little bit better than what was actually

00:01:25,050 --> 00:01:31,289
told during the keynote today so that I

00:01:28,259 --> 00:01:33,349
can steal I developed and actually

00:01:31,289 --> 00:01:36,479
produce some code despite the fact that

00:01:33,349 --> 00:01:38,490
I've been a technical architect at a

00:01:36,479 --> 00:01:40,770
company called image which is based in

00:01:38,490 --> 00:01:42,360
Leeds and I actually have some

00:01:40,770 --> 00:01:44,039
publishing history and I wrote the two

00:01:42,360 --> 00:01:46,880
books and I've been publishing in PHP

00:01:44,039 --> 00:01:49,709
architect and I'm actually here speaking

00:01:46,880 --> 00:01:51,840
probably some of my work weights could

00:01:49,709 --> 00:01:53,610
disagree and stuff like that I've been

00:01:51,840 --> 00:01:55,679
in development for over 12 years that's

00:01:53,610 --> 00:01:56,849
probably more i stopped counting the yes

00:01:55,679 --> 00:01:58,140
and i've been doing all sort of

00:01:56,849 --> 00:02:00,899
different stuff in all sorts of

00:01:58,140 --> 00:02:04,160
different languages as starting in an

00:02:00,899 --> 00:02:06,390
early early as with c++ and pascal and

00:02:04,160 --> 00:02:07,830
then do a little bit of java and then

00:02:06,390 --> 00:02:11,489
finally ending up with scripting

00:02:07,830 --> 00:02:14,520
languages like PHP and pie a little bit

00:02:11,489 --> 00:02:17,550
of bite on and I occasionally

00:02:14,520 --> 00:02:21,050
contributed to open source software if I

00:02:17,550 --> 00:02:23,820
can even really find time I find it as

00:02:21,050 --> 00:02:27,250
one of the ways that you can improve i

00:02:23,820 --> 00:02:29,050
actually had two conversations

00:02:27,250 --> 00:02:30,610
conference with two different kind of a

00:02:29,050 --> 00:02:33,220
teams from two different companies about

00:02:30,610 --> 00:02:34,660
you know how can you improve and how can

00:02:33,220 --> 00:02:36,100
you take it in forward and this is

00:02:34,660 --> 00:02:39,250
definitely one of the things that you

00:02:36,100 --> 00:02:42,060
can do just try to submit a small patch

00:02:39,250 --> 00:02:45,820
or do something with the open source

00:02:42,060 --> 00:02:48,400
this will usually be a very good way of

00:02:45,820 --> 00:02:50,140
finding out what are the standards in

00:02:48,400 --> 00:02:52,150
software engineering and action getting

00:02:50,140 --> 00:02:55,810
some pretty good feedback it might sound

00:02:52,150 --> 00:02:57,700
scary at the very beginning because yeah

00:02:55,810 --> 00:02:59,950
we can't we can't really hide it that

00:02:57,700 --> 00:03:01,989
some of the people are not really

00:02:59,950 --> 00:03:03,550
friendly if it comes to the feedback but

00:03:01,989 --> 00:03:05,470
that's just interview other people but

00:03:03,550 --> 00:03:09,310
please give it a try and you will see

00:03:05,470 --> 00:03:11,050
some differences to explain that the

00:03:09,310 --> 00:03:13,090
full plate armor that's me actually in

00:03:11,050 --> 00:03:17,080
there with my daughter in my free time

00:03:13,090 --> 00:03:18,550
I'm really I'm really into castles and

00:03:17,080 --> 00:03:23,200
medieval times and things like that but

00:03:18,550 --> 00:03:25,480
let's move on what I want to do today is

00:03:23,200 --> 00:03:28,780
to achieve two things first of all is to

00:03:25,480 --> 00:03:31,510
try to change a perception of being a

00:03:28,780 --> 00:03:34,390
software developer and change what you

00:03:31,510 --> 00:03:39,040
think of your job and what you're doing

00:03:34,390 --> 00:03:40,959
so this probably is what most of the

00:03:39,040 --> 00:03:44,560
people think we do we're just hacking

00:03:40,959 --> 00:03:46,900
some stuff and we just typing some weird

00:03:44,560 --> 00:03:49,660
things into their consoles and producing

00:03:46,900 --> 00:03:51,640
some something amazing we probably think

00:03:49,660 --> 00:03:53,500
we're bad as hackers in here like no

00:03:51,640 --> 00:03:56,500
multiple desktops doing all sort of

00:03:53,500 --> 00:03:59,170
stuff while we actually like you know

00:03:56,500 --> 00:04:04,060
tackling the daily problems during

00:03:59,170 --> 00:04:06,100
development and we probably think we we

00:04:04,060 --> 00:04:07,630
more like artists or at least some of us

00:04:06,100 --> 00:04:09,430
are and we actually create those

00:04:07,630 --> 00:04:13,239
beautiful things why we really

00:04:09,430 --> 00:04:14,620
firefighting and and and I'm trying I

00:04:13,239 --> 00:04:17,109
will try to go through all sort of

00:04:14,620 --> 00:04:18,880
things why it might what might be the

00:04:17,109 --> 00:04:23,110
reason why we firefighting and things

00:04:18,880 --> 00:04:25,750
like this yeah and probably our moms

00:04:23,110 --> 00:04:28,240
things that we just playing nothing else

00:04:25,750 --> 00:04:32,110
that's what we do at our job but what I

00:04:28,240 --> 00:04:35,470
want to do also well what I think is

00:04:32,110 --> 00:04:37,300
that we more like craftsman and that

00:04:35,470 --> 00:04:39,150
would be mentioned in the in the keynote

00:04:37,300 --> 00:04:42,840
as well today about software crafts

00:04:39,150 --> 00:04:44,760
manship this is kind of a a movement

00:04:42,840 --> 00:04:48,300
that it's been around for for a few

00:04:44,760 --> 00:04:52,770
years already trying to more promote and

00:04:48,300 --> 00:04:55,620
educate people about what is needed to

00:04:52,770 --> 00:04:57,450
develop proper software and to treat it

00:04:55,620 --> 00:04:59,640
more like a craft it's been a

00:04:57,450 --> 00:05:01,680
controversial topic because it depends

00:04:59,640 --> 00:05:03,060
how you look at this guy because he

00:05:01,680 --> 00:05:05,250
could be like doing all those small

00:05:03,060 --> 00:05:09,000
things manually all the time that's not

00:05:05,250 --> 00:05:12,180
about that it's more about experience

00:05:09,000 --> 00:05:15,630
and the skills so if you look at the

00:05:12,180 --> 00:05:18,090
blacksmith for example and and how long

00:05:15,630 --> 00:05:20,670
a blacksmith as a profession been on the

00:05:18,090 --> 00:05:23,490
market is being backed up by hundreds of

00:05:20,670 --> 00:05:26,910
years of experience and people learning

00:05:23,490 --> 00:05:28,740
and father's passing the knowledge over

00:05:26,910 --> 00:05:31,820
to sounds all over and all over again

00:05:28,740 --> 00:05:34,350
and they basically mastered a profession

00:05:31,820 --> 00:05:39,000
it's a bit different with software

00:05:34,350 --> 00:05:40,890
engineering it's been actively as a

00:05:39,000 --> 00:05:44,460
profession trouble before the past what

00:05:40,890 --> 00:05:49,380
60 maybe 70 years we didn't really have

00:05:44,460 --> 00:05:51,510
a lot of time to master our profession

00:05:49,380 --> 00:05:53,550
and to learn all the things that should

00:05:51,510 --> 00:05:55,590
be done properly and this is kind of

00:05:53,550 --> 00:05:58,260
only emerging as probably the way you

00:05:55,590 --> 00:06:00,000
should we should be doing so back in the

00:05:58,260 --> 00:06:02,430
days there were guilds and people were

00:06:00,000 --> 00:06:04,560
like you know gathering together making

00:06:02,430 --> 00:06:06,660
sure they all follow the same things the

00:06:04,560 --> 00:06:09,210
same standards but it's more about

00:06:06,660 --> 00:06:10,830
passing the knowledge over making sure

00:06:09,210 --> 00:06:13,040
that everybody follows the same thing

00:06:10,830 --> 00:06:15,960
and then we can achieve beautiful things

00:06:13,040 --> 00:06:17,220
okay also the result you know another

00:06:15,960 --> 00:06:21,150
part of that because there was some

00:06:17,220 --> 00:06:23,790
crappy craftsmen and and we have a value

00:06:21,150 --> 00:06:26,070
products as well so obviously creating

00:06:23,790 --> 00:06:29,120
something which is great and works very

00:06:26,070 --> 00:06:31,800
well it costs money you can't deny that

00:06:29,120 --> 00:06:33,840
it's something that you need to put an

00:06:31,800 --> 00:06:35,460
effort and effort this time and time is

00:06:33,840 --> 00:06:37,980
money is always the longer you spend

00:06:35,460 --> 00:06:41,460
developing something the more it costs

00:06:37,980 --> 00:06:43,260
but the end product hopefully should be

00:06:41,460 --> 00:06:45,360
better so it kind of there is a relation

00:06:43,260 --> 00:06:50,610
between money and the skills and the

00:06:45,360 --> 00:06:52,110
experience so sometimes you have a you

00:06:50,610 --> 00:06:52,529
have a situation when you have to

00:06:52,110 --> 00:06:54,899
develop

00:06:52,529 --> 00:06:56,909
something really really fast and if

00:06:54,899 --> 00:06:58,709
there are valid reasons why you have to

00:06:56,909 --> 00:07:01,259
do it you could kind of relate to it as

00:06:58,709 --> 00:07:03,659
it's being gay like you know Tesco value

00:07:01,259 --> 00:07:05,399
product which it does what it says on

00:07:03,659 --> 00:07:09,989
the team is probably not the very best

00:07:05,399 --> 00:07:12,899
and it's got some holes media net so

00:07:09,989 --> 00:07:16,139
what I want you to do today I will be

00:07:12,899 --> 00:07:18,059
talking about 10 different things some

00:07:16,139 --> 00:07:19,799
of them have been already mentioned but

00:07:18,059 --> 00:07:21,449
if you'd like to take two of them at

00:07:19,799 --> 00:07:24,029
least two of them when you come back to

00:07:21,449 --> 00:07:26,519
your workplaces and start trying apply

00:07:24,029 --> 00:07:29,009
it to your daily job that will be a

00:07:26,519 --> 00:07:31,169
success even at least think about it

00:07:29,009 --> 00:07:35,939
whether this is something that could

00:07:31,169 --> 00:07:39,719
improve what you do I will do it in a

00:07:35,939 --> 00:07:41,339
relation to a development cycle there's

00:07:39,719 --> 00:07:42,809
a very high view of the development

00:07:41,339 --> 00:07:45,509
cycle values you know you initiate a

00:07:42,809 --> 00:07:48,539
project you design it and you implement

00:07:45,509 --> 00:07:50,339
that and you test that and then you know

00:07:48,539 --> 00:07:53,009
hand over the project and you see what

00:07:50,339 --> 00:07:55,109
you've done but it should be enough for

00:07:53,009 --> 00:07:57,989
what I will be talking today so the

00:07:55,109 --> 00:08:02,209
first phase will be project initiation

00:07:57,989 --> 00:08:02,209
and that's where everything starts

00:08:03,139 --> 00:08:08,129
though shalt not disrupt the legacy

00:08:05,849 --> 00:08:11,489
system there's been a brilliant talk

00:08:08,129 --> 00:08:14,519
today about legacy systems I think

00:08:11,489 --> 00:08:16,949
Michael peacock it was about refactoring

00:08:14,519 --> 00:08:19,439
to Symphony components and he actually

00:08:16,949 --> 00:08:21,869
told the story how they went from

00:08:19,439 --> 00:08:24,629
starting a project which was basically

00:08:21,869 --> 00:08:29,609
dealing with a very legacy system which

00:08:24,629 --> 00:08:31,799
was pretty old and really really really

00:08:29,609 --> 00:08:33,629
hard to maintain and they've dealt with

00:08:31,799 --> 00:08:35,069
all sort of different problems like you

00:08:33,629 --> 00:08:37,349
know the programs using obsolete

00:08:35,069 --> 00:08:40,469
technology they couldn't really cope

00:08:37,349 --> 00:08:43,949
with that very well it costs a lot of

00:08:40,469 --> 00:08:45,420
money to maintain that and and just

00:08:43,949 --> 00:08:47,819
because nobody understands there

00:08:45,420 --> 00:08:50,490
obviously is no documentation whenever

00:08:47,819 --> 00:08:52,670
they've changed over time I nobody

00:08:50,490 --> 00:08:55,259
bothered to put any sort of notes or

00:08:52,670 --> 00:08:56,819
create some told you know document

00:08:55,259 --> 00:08:58,230
something how it is supposed to Oregon

00:08:56,819 --> 00:09:01,529
things like that so it was quite a

00:08:58,230 --> 00:09:04,230
challenge the problem with legacy system

00:09:01,529 --> 00:09:05,550
is is usually that they very very

00:09:04,230 --> 00:09:08,290
important for the business

00:09:05,550 --> 00:09:10,449
developers hates them business loves

00:09:08,290 --> 00:09:15,790
them they deliver the business value so

00:09:10,449 --> 00:09:17,529
it's not an easy decision to to go and

00:09:15,790 --> 00:09:19,420
say let's just rewrite that right

00:09:17,529 --> 00:09:22,990
because we want to use all those cool

00:09:19,420 --> 00:09:25,449
new features and everything because the

00:09:22,990 --> 00:09:27,879
risks that are there that you might not

00:09:25,449 --> 00:09:29,230
know the full scope of the requirements

00:09:27,879 --> 00:09:31,629
that were initially put that they've

00:09:29,230 --> 00:09:33,759
changed over time and so and so and so

00:09:31,629 --> 00:09:37,720
and then the end product will be

00:09:33,759 --> 00:09:40,209
probably or most probably very far from

00:09:37,720 --> 00:09:41,889
perfect but there is a way to do it and

00:09:40,209 --> 00:09:43,509
actually Michael have already talked

00:09:41,889 --> 00:09:45,730
about it and woody what you can do to

00:09:43,509 --> 00:09:49,839
actually tackle that so he was talking

00:09:45,730 --> 00:09:52,360
about the project that was roughly about

00:09:49,839 --> 00:09:54,009
size of WordPress and he said they've

00:09:52,360 --> 00:09:56,829
had a team of I don't know three or four

00:09:54,009 --> 00:09:59,980
developers working or not on it probably

00:09:56,829 --> 00:10:02,649
for four months just to get it rewritten

00:09:59,980 --> 00:10:04,509
or rewritten extract the business logic

00:10:02,649 --> 00:10:07,959
and replace the application here

00:10:04,509 --> 00:10:10,059
basically that was the idea but he

00:10:07,959 --> 00:10:11,740
mentioned a lot of those techniques that

00:10:10,059 --> 00:10:13,449
you can use if you know you start your

00:10:11,740 --> 00:10:14,860
project you know your requirements you

00:10:13,449 --> 00:10:16,899
probably wants to improve and things

00:10:14,860 --> 00:10:19,360
like that so some of the things you can

00:10:16,899 --> 00:10:21,759
do is to you know to start extract the

00:10:19,360 --> 00:10:24,459
things we doubt changing this is a very

00:10:21,759 --> 00:10:25,930
crucial thing don't try to amend the

00:10:24,459 --> 00:10:28,329
system that you're refactoring

00:10:25,930 --> 00:10:30,939
refactoring is not rewriting it's

00:10:28,329 --> 00:10:34,750
changing the way it is implemented it's

00:10:30,939 --> 00:10:37,149
not the way it's not changing the way it

00:10:34,750 --> 00:10:39,519
works and the way you can do it you can

00:10:37,149 --> 00:10:41,050
you can basically hopefully take some

00:10:39,519 --> 00:10:44,230
part of the logic of the business logic

00:10:41,050 --> 00:10:45,819
at least to take it away hide it be

00:10:44,230 --> 00:10:48,519
behind you know a nicely defined

00:10:45,819 --> 00:10:50,649
interface which self documents the

00:10:48,519 --> 00:10:53,350
behaviors and just black boxes you know

00:10:50,649 --> 00:10:55,779
close it there you know we kind of know

00:10:53,350 --> 00:10:59,410
what it does it's it's been working like

00:10:55,779 --> 00:11:02,290
that for four years and so hopefully

00:10:59,410 --> 00:11:05,019
that whole black box will do what it was

00:11:02,290 --> 00:11:07,600
supposed to do before what you're

00:11:05,019 --> 00:11:09,639
achieving is that you can start pulling

00:11:07,600 --> 00:11:12,970
stuff out from that black box and and

00:11:09,639 --> 00:11:15,720
you know slowly refactoring still

00:11:12,970 --> 00:11:18,550
maintaining the same functionality

00:11:15,720 --> 00:11:19,400
though shalt document early and wild I

00:11:18,550 --> 00:11:21,920
mind is fried

00:11:19,400 --> 00:11:25,460
this is what developers are really crap

00:11:21,920 --> 00:11:28,880
at and just because we can't really well

00:11:25,460 --> 00:11:33,710
express what we think and to be honest

00:11:28,880 --> 00:11:35,510
we usually we usually prefer to code and

00:11:33,710 --> 00:11:39,410
do the cool stuff instead of doing this

00:11:35,510 --> 00:11:42,980
boring boring documentation thing but

00:11:39,410 --> 00:11:46,130
there is a way to you know to still do

00:11:42,980 --> 00:11:48,740
it without affecting your job with all

00:11:46,130 --> 00:11:53,140
the benefits that come from it and the

00:11:48,740 --> 00:11:57,320
first thing of it well we've had several

00:11:53,140 --> 00:11:59,240
concepts about development techniques so

00:11:57,320 --> 00:12:02,330
let's call it documentation driven

00:11:59,240 --> 00:12:06,890
development and this is something that

00:12:02,330 --> 00:12:09,110
you start and try to document what you

00:12:06,890 --> 00:12:11,450
will be at least roughly in very high

00:12:09,110 --> 00:12:13,070
concepts what you will be developing and

00:12:11,450 --> 00:12:17,060
it could start with the requirements

00:12:13,070 --> 00:12:19,010
obviously and at least specifying what

00:12:17,060 --> 00:12:21,290
you're trying to achieve and what is the

00:12:19,010 --> 00:12:23,240
main business goal this is something

00:12:21,290 --> 00:12:26,870
people usually forget they more focus on

00:12:23,240 --> 00:12:31,670
the scope and and specific features it

00:12:26,870 --> 00:12:33,580
less instead of actually saying what the

00:12:31,670 --> 00:12:36,290
business is going to get out of that and

00:12:33,580 --> 00:12:38,210
there is also that they are the the

00:12:36,290 --> 00:12:40,550
other layer of the documentation which

00:12:38,210 --> 00:12:42,290
is the developers documentation and I'm

00:12:40,550 --> 00:12:44,990
talking about specifically documenting

00:12:42,290 --> 00:12:47,360
api's or all the libraries that you

00:12:44,990 --> 00:12:52,310
might be using during during development

00:12:47,360 --> 00:12:54,170
and and yes it's as easy as using PHP

00:12:52,310 --> 00:12:57,110
documental providing that you you know

00:12:54,170 --> 00:12:59,000
you use all those annotation in your

00:12:57,110 --> 00:13:00,560
code and then you can use it to pass it

00:12:59,000 --> 00:13:02,510
and just you know spit it out on the

00:13:00,560 --> 00:13:07,190
other side so there is not a lot of

00:13:02,510 --> 00:13:10,460
effort going into that but that's not

00:13:07,190 --> 00:13:13,340
enough simply because it only gives you

00:13:10,460 --> 00:13:15,650
a high level overview of the API and

00:13:13,340 --> 00:13:17,090
then imagine it's quite a big API and

00:13:15,650 --> 00:13:19,730
you've got a lot of different features

00:13:17,090 --> 00:13:21,470
now how you use that that's something

00:13:19,730 --> 00:13:24,290
that you can document on top of that and

00:13:21,470 --> 00:13:27,110
what I found very useful is trying to

00:13:24,290 --> 00:13:30,020
back app this automated created

00:13:27,110 --> 00:13:32,240
documentation with some examples at the

00:13:30,020 --> 00:13:32,990
very early design stage hopefully you

00:13:32,240 --> 00:13:34,279
have a design

00:13:32,990 --> 00:13:37,820
stage when you're developing something

00:13:34,279 --> 00:13:40,430
and and this is more about right now we

00:13:37,820 --> 00:13:41,930
developed its library or all the system

00:13:40,430 --> 00:13:43,910
which is supposed to work like that or

00:13:41,930 --> 00:13:46,430
they ate an API which is going to be

00:13:43,910 --> 00:13:49,279
exposed it's going to do that then and

00:13:46,430 --> 00:13:52,880
that and give some examples how you're

00:13:49,279 --> 00:13:55,040
going to use this API yes I know code

00:13:52,880 --> 00:13:57,560
should be self-explanatory and you

00:13:55,040 --> 00:13:59,959
should have a look at you know that a PR

00:13:57,560 --> 00:14:01,610
a name and the parameters should roughly

00:13:59,959 --> 00:14:03,290
tell you what this needs to be used for

00:14:01,610 --> 00:14:08,149
but the problem with some of the

00:14:03,290 --> 00:14:10,130
implementations are that there is a lot

00:14:08,149 --> 00:14:12,440
of ways to achieve the same thing and

00:14:10,130 --> 00:14:16,820
unfortunately not all of them are the

00:14:12,440 --> 00:14:20,060
right ones or not at least that you can

00:14:16,820 --> 00:14:23,600
achieve the same thing as quisque as

00:14:20,060 --> 00:14:26,600
quickly and and with the same efficiency

00:14:23,600 --> 00:14:29,959
as it was designed so those nodes really

00:14:26,600 --> 00:14:32,870
will help a lot and on top of that

00:14:29,959 --> 00:14:35,450
things like you know the product is

00:14:32,870 --> 00:14:38,320
rarely finished there is all there is

00:14:35,450 --> 00:14:41,390
always a bit of field there too to

00:14:38,320 --> 00:14:43,070
improve it and if you know it can be

00:14:41,390 --> 00:14:45,800
improved and how it can be improved

00:14:43,070 --> 00:14:47,930
putting some hints and tips around like

00:14:45,800 --> 00:14:50,209
you know I've done this but you could

00:14:47,930 --> 00:14:51,920
take it a little bit further and do

00:14:50,209 --> 00:14:54,770
something like this for it so feel free

00:14:51,920 --> 00:14:56,990
to reuse my concept because otherwise

00:14:54,770 --> 00:14:59,209
you're going to find out after half a

00:14:56,990 --> 00:15:01,250
year or a year with those two new

00:14:59,209 --> 00:15:03,800
developers joining the company they

00:15:01,250 --> 00:15:05,839
completely weren't aware of a concept

00:15:03,800 --> 00:15:07,640
and completely misunderstood the way it

00:15:05,839 --> 00:15:11,660
was supposed to work then Jesus

00:15:07,640 --> 00:15:14,630
documentation is is is something obvious

00:15:11,660 --> 00:15:17,600
but why it's important mainly because

00:15:14,630 --> 00:15:19,579
you can avoid situations where you get a

00:15:17,600 --> 00:15:22,130
call from a customer saying that doesn't

00:15:19,579 --> 00:15:24,470
work but he didn't know that it wasn't

00:15:22,130 --> 00:15:27,290
scoped or that feature wasn't supposed

00:15:24,470 --> 00:15:30,140
to exist that or maybe something else

00:15:27,290 --> 00:15:31,640
fails there and they weren't trained

00:15:30,140 --> 00:15:33,649
properly and they trying to do something

00:15:31,640 --> 00:15:35,390
that they are not supposed to do so and

00:15:33,649 --> 00:15:36,770
it doesn't matter what it is an internal

00:15:35,390 --> 00:15:38,899
project and you're using disease

00:15:36,770 --> 00:15:40,910
internal system what is external that

00:15:38,899 --> 00:15:44,620
the challenges and the problems are

00:15:40,910 --> 00:15:46,430
exactly the same and this is something

00:15:44,620 --> 00:15:49,370
more soft

00:15:46,430 --> 00:15:52,880
and this is still at the stage where we

00:15:49,370 --> 00:15:55,190
trying to you know to create the

00:15:52,880 --> 00:15:56,660
specification or to formalize all the

00:15:55,190 --> 00:15:59,810
requirements that this is though shalt

00:15:56,660 --> 00:16:03,770
speak up early and often and be very

00:15:59,810 --> 00:16:06,470
clear about it open and honest and this

00:16:03,770 --> 00:16:08,870
is another thing that we suck at just as

00:16:06,470 --> 00:16:10,880
was already told that we tend to you

00:16:08,870 --> 00:16:15,230
know to isolate ourselves and not stuck

00:16:10,880 --> 00:16:18,110
to the other humans and but this is

00:16:15,230 --> 00:16:20,300
important mainly because you can solve

00:16:18,110 --> 00:16:22,399
many problems at the very early stage

00:16:20,300 --> 00:16:25,399
one problem coming with the

00:16:22,399 --> 00:16:27,950
communication thing is that we some of

00:16:25,399 --> 00:16:30,740
us at least tends to do too many jobs at

00:16:27,950 --> 00:16:33,260
the same time forgetting what is our

00:16:30,740 --> 00:16:35,959
role so we are the developer so we

00:16:33,260 --> 00:16:37,850
coding that we are also trying to be a

00:16:35,959 --> 00:16:42,740
project manager and start to making

00:16:37,850 --> 00:16:45,890
decisions this is not what you what you

00:16:42,740 --> 00:16:47,990
were to do at the project and this is

00:16:45,890 --> 00:16:50,959
one of the common mistakes you you're

00:16:47,990 --> 00:16:53,120
assuming things that might not be

00:16:50,959 --> 00:16:55,490
correct that's what the project managers

00:16:53,120 --> 00:16:58,279
are there as much as we hate them and

00:16:55,490 --> 00:17:00,260
that's what the project owners out there

00:16:58,279 --> 00:17:03,200
to actually confirm and put the things

00:17:00,260 --> 00:17:06,319
in place so try to stick to your domain

00:17:03,200 --> 00:17:07,910
of of kind of a decision making place

00:17:06,319 --> 00:17:10,160
and make a decision about how you're

00:17:07,910 --> 00:17:12,620
going to some implement something not

00:17:10,160 --> 00:17:15,679
whether you should you know implement

00:17:12,620 --> 00:17:18,290
the feature or not and and there is a

00:17:15,679 --> 00:17:20,720
way to to make it work because if you

00:17:18,290 --> 00:17:23,630
start communicated very early and once

00:17:20,720 --> 00:17:28,250
you spot the problem it's going to solve

00:17:23,630 --> 00:17:30,140
a lot of problems simply because you set

00:17:28,250 --> 00:17:33,230
up the expectation at the very early

00:17:30,140 --> 00:17:35,540
stage so the decision can be made very

00:17:33,230 --> 00:17:38,210
very quickly and hopefully it will not

00:17:35,540 --> 00:17:42,830
affect the deadlines and how you develop

00:17:38,210 --> 00:17:45,470
stuff the last thing which is kind of

00:17:42,830 --> 00:17:49,220
important for me and I kind of faced it

00:17:45,470 --> 00:17:52,850
several times it's it's no decision

00:17:49,220 --> 00:17:55,910
versus bad decision thing and I strongly

00:17:52,850 --> 00:17:58,669
believe if you made it easier able to

00:17:55,910 --> 00:18:01,249
make a decision just made it make it

00:17:58,669 --> 00:18:03,019
and because you know living it on the

00:18:01,249 --> 00:18:04,609
side shuffling under the carpet is not

00:18:03,019 --> 00:18:06,559
going to help it's just going to make it

00:18:04,609 --> 00:18:08,299
all things works I know that some of

00:18:06,559 --> 00:18:10,429
this stuff is not is completely beyond

00:18:08,299 --> 00:18:11,869
us and it's more on the management level

00:18:10,429 --> 00:18:13,429
and things like that but this is

00:18:11,869 --> 00:18:15,889
something we need to aim for to make

00:18:13,429 --> 00:18:17,840
sure that we don't you know hang out in

00:18:15,889 --> 00:18:20,059
the middle of something not knowing

00:18:17,840 --> 00:18:22,730
what's going to happen to next so I'd

00:18:20,059 --> 00:18:26,749
rather have a decision than just waiting

00:18:22,730 --> 00:18:31,309
for something that might never happen so

00:18:26,749 --> 00:18:33,919
we know what we're doing well we know

00:18:31,309 --> 00:18:35,480
what business wants us to do so

00:18:33,919 --> 00:18:36,619
hopefully you can get to the point where

00:18:35,480 --> 00:18:38,779
you can create some technical

00:18:36,619 --> 00:18:42,139
documentation or at least some

00:18:38,779 --> 00:18:43,759
guidelines for the developers how to

00:18:42,139 --> 00:18:48,169
implement it from the technical point of

00:18:43,759 --> 00:18:50,210
view designed not for complexity but for

00:18:48,169 --> 00:18:52,700
simplicity and wherever the beast named

00:18:50,210 --> 00:18:55,100
complex show rear its ugly head smita

00:18:52,700 --> 00:18:57,889
did with dice old named modular and

00:18:55,100 --> 00:19:03,489
let's no module be known by the name of

00:18:57,889 --> 00:19:06,350
the beast mmm I think that says it all

00:19:03,489 --> 00:19:10,429
you can do this and you can do that both

00:19:06,350 --> 00:19:13,999
works right now imagine you just joined

00:19:10,429 --> 00:19:15,590
the company and you seeing this although

00:19:13,999 --> 00:19:17,330
engineering is one thing well that's

00:19:15,590 --> 00:19:21,259
nothing about over-engineering that's

00:19:17,330 --> 00:19:22,909
just a mess but yeah I'm going to talk

00:19:21,259 --> 00:19:26,899
more about over engineering and this is

00:19:22,909 --> 00:19:30,619
something which which I think most of us

00:19:26,899 --> 00:19:34,489
have experienced and myself as well and

00:19:30,619 --> 00:19:38,210
this is something that we tend to often

00:19:34,489 --> 00:19:40,190
forget and we try to plan for the future

00:19:38,210 --> 00:19:42,109
and this is kind of coming back again to

00:19:40,190 --> 00:19:45,169
the requirements and making sure you're

00:19:42,109 --> 00:19:47,299
performing your role don't try to be

00:19:45,169 --> 00:19:50,809
clever than the project owner or the

00:19:47,299 --> 00:19:52,730
customer don't try to assume things it's

00:19:50,809 --> 00:19:54,529
rather go to them and speak to them and

00:19:52,730 --> 00:19:56,659
get it out of them before you make a

00:19:54,529 --> 00:19:58,580
decision a good example would be I don't

00:19:56,659 --> 00:20:01,369
know can you get this report pass it and

00:19:58,580 --> 00:20:03,230
save it to the database and then you

00:20:01,369 --> 00:20:05,059
know what comes out of the other side is

00:20:03,230 --> 00:20:07,009
suddenly you get it posted on Twitter

00:20:05,059 --> 00:20:08,419
because it's cool because I've just seen

00:20:07,009 --> 00:20:10,490
these api's things like that there's

00:20:08,419 --> 00:20:14,480
very extreme example that

00:20:10,490 --> 00:20:16,880
I'd rather follow the path of develop a

00:20:14,480 --> 00:20:20,420
very simple solution for the problem you

00:20:16,880 --> 00:20:22,400
have but be flexible in a way that you

00:20:20,420 --> 00:20:23,720
can extend it in the future it could be

00:20:22,400 --> 00:20:26,000
achieved by either introducing

00:20:23,720 --> 00:20:29,780
interfaces make it like a plug-in able

00:20:26,000 --> 00:20:31,790
but police don't deliver all those are

00:20:29,780 --> 00:20:33,140
the parts that are not needed that's

00:20:31,790 --> 00:20:34,220
where you waste the time and that's

00:20:33,140 --> 00:20:36,590
where you make the other people

00:20:34,220 --> 00:20:38,660
confusing because then you come back to

00:20:36,590 --> 00:20:40,520
that and think were they ever a

00:20:38,660 --> 00:20:42,650
requirement to do this and deaths

00:20:40,520 --> 00:20:44,929
because the code is there is probably

00:20:42,650 --> 00:20:48,110
never executed so why it was developed

00:20:44,929 --> 00:20:50,030
in the first place at all convention

00:20:48,110 --> 00:20:51,950
over configuration design paradigm which

00:20:50,030 --> 00:20:55,070
is something that people talk a lot as

00:20:51,950 --> 00:20:57,140
well and if you have not heard about it

00:20:55,070 --> 00:21:00,020
it's more about you know don't try to

00:20:57,140 --> 00:21:02,870
make everything configurable rather

00:21:00,020 --> 00:21:04,700
stick some guidelines and conventions

00:21:02,870 --> 00:21:07,070
around how things should be done and not

00:21:04,700 --> 00:21:11,720
in this one project that you're working

00:21:07,070 --> 00:21:14,179
with I cross the whole thing the

00:21:11,720 --> 00:21:15,320
benefits are going to be very very it's

00:21:14,179 --> 00:21:19,340
going to be they're going to be visible

00:21:15,320 --> 00:21:22,820
very very quickly because you will find

00:21:19,340 --> 00:21:25,580
yourself intuitively doing things

00:21:22,820 --> 00:21:27,950
because you will know how it is going to

00:21:25,580 --> 00:21:30,350
work and this is all around not the

00:21:27,950 --> 00:21:32,990
processes that the naming conventions

00:21:30,350 --> 00:21:35,510
and everything I can't recall the

00:21:32,990 --> 00:21:37,309
project that i was using but it could

00:21:35,510 --> 00:21:40,490
have been guzzle PHP or something like

00:21:37,309 --> 00:21:42,890
this I don't remember but I only read

00:21:40,490 --> 00:21:45,620
like a very quick start guide to use a

00:21:42,890 --> 00:21:47,150
library I just knocked it up and then I

00:21:45,620 --> 00:21:49,910
wanted to you know to do some more

00:21:47,150 --> 00:21:52,429
things about it and most of the time I

00:21:49,910 --> 00:21:54,380
could have guessed the name of the

00:21:52,429 --> 00:21:56,510
function that was you know supposed to

00:21:54,380 --> 00:21:58,040
deliver the thing and probably about

00:21:56,510 --> 00:22:00,500
ninety percent of the times I was right

00:21:58,040 --> 00:22:03,429
without even needing to actually they

00:22:00,500 --> 00:22:07,070
needs to look at the documentation I

00:22:03,429 --> 00:22:09,500
think Albert Ashton said it said it once

00:22:07,070 --> 00:22:11,450
that make everything as simple as

00:22:09,500 --> 00:22:14,860
possible but not simpler this is

00:22:11,450 --> 00:22:18,050
actually summering it very very well

00:22:14,860 --> 00:22:21,410
which leads me to the wheel thingy thou

00:22:18,050 --> 00:22:25,450
shalt not reinvent the wheel it's been

00:22:21,410 --> 00:22:29,320
sad during this conference so many times

00:22:25,450 --> 00:22:32,660
but this is not all about frameworks

00:22:29,320 --> 00:22:36,670
sometimes there might be a valid reason

00:22:32,660 --> 00:22:39,980
to to write something from the scratch

00:22:36,670 --> 00:22:42,800
but what I more want to talk about is

00:22:39,980 --> 00:22:45,650
the implications because this is this is

00:22:42,800 --> 00:22:48,350
being you know overlooked a lot of times

00:22:45,650 --> 00:22:50,750
and this is about the support this is

00:22:48,350 --> 00:22:54,110
about the time you're investing into

00:22:50,750 --> 00:22:57,140
writing that and and the benefits that

00:22:54,110 --> 00:23:00,440
come out of it so now in-house

00:22:57,140 --> 00:23:02,480
frameworks probably every company I

00:23:00,440 --> 00:23:06,410
worked for there was one or two attempts

00:23:02,480 --> 00:23:10,490
to write another framework full good

00:23:06,410 --> 00:23:13,160
nose reason why and I know like if you

00:23:10,490 --> 00:23:16,340
look back I don't know five ten years

00:23:13,160 --> 00:23:18,080
ago there wasn't a lot of frameworks but

00:23:16,340 --> 00:23:23,420
there was like I don't know how many of

00:23:18,080 --> 00:23:28,160
you remember something called PHP lib 12

00:23:23,420 --> 00:23:30,560
you remember but it was an example of

00:23:28,160 --> 00:23:32,750
trying to solve the problem how crappy

00:23:30,560 --> 00:23:35,030
the implementation was it still was

00:23:32,750 --> 00:23:37,910
something that you could use at the time

00:23:35,030 --> 00:23:43,390
it was well supported and it delivered

00:23:37,910 --> 00:23:45,950
the functionality and so think twice

00:23:43,390 --> 00:23:49,010
before you start right the framework

00:23:45,950 --> 00:23:51,200
another one and think instead whether

00:23:49,010 --> 00:23:55,400
you can change the way the existing

00:23:51,200 --> 00:23:57,530
framework works try to you know try to

00:23:55,400 --> 00:23:59,030
talk to the community to the community

00:23:57,530 --> 00:24:00,710
that supports the framework and see

00:23:59,030 --> 00:24:03,800
whether you can change something if you

00:24:00,710 --> 00:24:05,780
if you find a problem go and fix it if

00:24:03,800 --> 00:24:08,210
you don't like it I don't know submit a

00:24:05,780 --> 00:24:09,980
request for for a change or describe

00:24:08,210 --> 00:24:13,060
what you want to achieve and try to

00:24:09,980 --> 00:24:15,800
achieve it as a community as a group

00:24:13,060 --> 00:24:18,290
otherwise you first of all spend a lot

00:24:15,800 --> 00:24:20,830
of time developing than you think which

00:24:18,290 --> 00:24:23,390
is most probably going to be months and

00:24:20,830 --> 00:24:26,270
hopefully it will be more than one

00:24:23,390 --> 00:24:27,680
person if you ever do it otherwise

00:24:26,270 --> 00:24:29,810
you're going to end up with framework

00:24:27,680 --> 00:24:31,670
being written by one person with no

00:24:29,810 --> 00:24:34,520
documentation and nobody knows how it

00:24:31,670 --> 00:24:36,680
works and it's probably very crappy

00:24:34,520 --> 00:24:39,890
mendation anyway then you've got another

00:24:36,680 --> 00:24:41,510
things around supported so obviously now

00:24:39,890 --> 00:24:43,460
we've got your shiny new framework which

00:24:41,510 --> 00:24:45,740
so much better that was already on the

00:24:43,460 --> 00:24:47,900
market and then you start actually

00:24:45,740 --> 00:24:49,670
that's buggy and we actually didn't

00:24:47,900 --> 00:24:51,170
bother to write a unit test so whenever

00:24:49,670 --> 00:24:53,570
we change it it actually breaks here

00:24:51,170 --> 00:24:56,690
than that and then you need to actually

00:24:53,570 --> 00:24:58,940
spend your valuable resources to

00:24:56,690 --> 00:25:01,670
actually supporting something that

00:24:58,940 --> 00:25:04,190
doesn't bring that the direct benefit

00:25:01,670 --> 00:25:07,790
for the company and then you've got the

00:25:04,190 --> 00:25:09,920
training factor because now well this

00:25:07,790 --> 00:25:12,140
could happen as well the guy who wrote

00:25:09,920 --> 00:25:14,120
your framework now left there is no

00:25:12,140 --> 00:25:15,650
documentation and now you've got two

00:25:14,120 --> 00:25:22,430
rookies coming in and they have to use

00:25:15,650 --> 00:25:24,790
it good luck so we designed it we didn't

00:25:22,430 --> 00:25:27,920
reinvent the wheel we used one of the

00:25:24,790 --> 00:25:29,540
frameworks were supported we got the

00:25:27,920 --> 00:25:31,760
documentation we know what we're doing

00:25:29,540 --> 00:25:35,450
we know the tools now we go into the

00:25:31,760 --> 00:25:37,430
implementation though shalt commit often

00:25:35,450 --> 00:25:41,030
and your messages shall be informative

00:25:37,430 --> 00:25:42,470
I'm really impressed by hearing at the

00:25:41,030 --> 00:25:45,470
keynote that the guy said that he's

00:25:42,470 --> 00:25:48,999
committing like 200 times a day that's

00:25:45,470 --> 00:25:52,149
impressive you think

00:25:48,999 --> 00:25:55,719
it was very very hard to say which bids

00:25:52,149 --> 00:25:57,129
were sarcastic and which now so let's

00:25:55,719 --> 00:26:00,549
say I mean I'm impressed I'm impressed

00:25:57,129 --> 00:26:04,419
if it was 200 i I'm not that good but

00:26:00,549 --> 00:26:07,749
what I I would encourage you to two more

00:26:04,419 --> 00:26:09,729
look into developing what you're doing

00:26:07,749 --> 00:26:14,769
in small pieces that could be deployable

00:26:09,729 --> 00:26:18,239
and they would work and and that you

00:26:14,769 --> 00:26:21,369
could commit very frequently I probably

00:26:18,239 --> 00:26:23,859
once an hour a little bit more that we

00:26:21,369 --> 00:26:27,489
good please avoid the situation when you

00:26:23,859 --> 00:26:29,859
commit once a day or once or two days or

00:26:27,489 --> 00:26:32,049
once a week because you've got it yeah

00:26:29,859 --> 00:26:34,479
on this USB stick and then you can can

00:26:32,049 --> 00:26:36,549
do it the right tool for the job is very

00:26:34,479 --> 00:26:38,499
important not sure whether how many of

00:26:36,549 --> 00:26:40,719
you actually spotted this this blog post

00:26:38,499 --> 00:26:43,989
about please don't use get it sucks and

00:26:40,719 --> 00:26:47,649
about being as sarcastic as the keynote

00:26:43,989 --> 00:26:49,269
was today and but it's not about forcing

00:26:47,649 --> 00:26:53,199
everybody to use gate there's been a lot

00:26:49,269 --> 00:26:56,769
of you know noise around that although i

00:26:53,199 --> 00:26:58,389
would say use get and but this is simply

00:26:56,769 --> 00:27:00,399
something that i've done before and we

00:26:58,389 --> 00:27:02,979
actually have used i still remember the

00:27:00,399 --> 00:27:05,949
times when we were using CVS version

00:27:02,979 --> 00:27:12,839
control and when we realized it was a

00:27:05,949 --> 00:27:15,429
really really not great tool to use and

00:27:12,839 --> 00:27:17,109
we actually identify that this actually

00:27:15,429 --> 00:27:20,319
slowing us down this is one of the

00:27:17,109 --> 00:27:22,689
reasons we've got delays that we've got

00:27:20,319 --> 00:27:25,509
problems when we are merging and and

00:27:22,689 --> 00:27:28,599
this kind of scale as your development

00:27:25,509 --> 00:27:30,699
team scales so please have a look back

00:27:28,599 --> 00:27:32,739
and also do we had to look back and see

00:27:30,699 --> 00:27:37,839
what we can do about it it was a big

00:27:32,739 --> 00:27:40,569
change we had like a geek sized code

00:27:37,839 --> 00:27:42,159
base which was all over the place and it

00:27:40,569 --> 00:27:45,129
wasn't easy to actually migrated over to

00:27:42,159 --> 00:27:47,019
get although we did not make a decision

00:27:45,129 --> 00:27:49,779
about where we want to go we more

00:27:47,019 --> 00:27:51,669
investigate what are the options so

00:27:49,779 --> 00:27:54,579
obviously it was like probably about six

00:27:51,669 --> 00:27:56,459
years ago the obvious choice subversion

00:27:54,579 --> 00:27:59,349
but then we looked at subversion asst

00:27:56,459 --> 00:28:01,329
yeah it's serious and drugs it doesn't

00:27:59,349 --> 00:28:01,670
do really much more it solves some of

00:28:01,329 --> 00:28:03,710
the May

00:28:01,670 --> 00:28:05,870
problems that severes God but it still

00:28:03,710 --> 00:28:09,500
develops the same concepts and then we

00:28:05,870 --> 00:28:11,510
look at the other version control

00:28:09,500 --> 00:28:13,310
systems we look at gate there was quite

00:28:11,510 --> 00:28:16,340
a risk because at the time it wasn't

00:28:13,310 --> 00:28:18,020
actually used that much but we thought

00:28:16,340 --> 00:28:21,380
that is going to solve our problem and

00:28:18,020 --> 00:28:23,480
it did and it works parent Lee so we

00:28:21,380 --> 00:28:25,190
talked about commit frequency now i'm

00:28:23,480 --> 00:28:28,100
going to talk about commit verbosity I

00:28:25,190 --> 00:28:30,650
was going to use some of the examples

00:28:28,100 --> 00:28:32,960
from from some of the code bases I've

00:28:30,650 --> 00:28:34,700
had but in the meantime I have found

00:28:32,960 --> 00:28:39,370
actually something else and I think it's

00:28:34,700 --> 00:28:43,550
going to be so much better which is cold

00:28:39,370 --> 00:28:48,460
commit logs from last night I'm not sure

00:28:43,550 --> 00:28:56,270
whether you have seen it before right

00:28:48,460 --> 00:29:00,830
let's start with that I could go on and

00:28:56,270 --> 00:29:04,520
on and on and on with that right I think

00:29:00,830 --> 00:29:07,130
this is something around swear words in

00:29:04,520 --> 00:29:08,980
that because I have not found I want

00:29:07,130 --> 00:29:11,330
this is actually coming from github so

00:29:08,980 --> 00:29:14,330
this is really good example but what I'm

00:29:11,330 --> 00:29:16,880
talking to talk about is more about yeah

00:29:14,330 --> 00:29:19,220
this is funny this is funny when you

00:29:16,880 --> 00:29:21,950
read it now is this you if this is your

00:29:19,220 --> 00:29:25,970
code and you have to fix a problem that

00:29:21,950 --> 00:29:28,490
yeah shitty worker up yeah so there is a

00:29:25,970 --> 00:29:30,440
lot of things that you can do to to make

00:29:28,490 --> 00:29:32,900
your life easier not harder by doing

00:29:30,440 --> 00:29:35,090
this stuff I know you could have good

00:29:32,900 --> 00:29:36,590
like a very bad day and you have seen

00:29:35,090 --> 00:29:38,660
this shitty killed so many times and you

00:29:36,590 --> 00:29:43,370
want to fix it but this is not helping

00:29:38,660 --> 00:29:46,870
out at all so I'm actually gonna going

00:29:43,370 --> 00:29:46,870
to skip the examples that they've got

00:29:47,770 --> 00:29:52,130
this is a little bit more variables but

00:29:50,150 --> 00:29:54,530
still you know I know expand uncommon

00:29:52,130 --> 00:29:55,940
this one that I basically love all this

00:29:54,530 --> 00:29:58,580
is to think that I'm getting all the

00:29:55,940 --> 00:30:04,610
time fixed way

00:29:58,580 --> 00:30:07,309
thank you what I want to see is more

00:30:04,610 --> 00:30:09,080
something like this yes I fixed

00:30:07,309 --> 00:30:11,210
something this is what i fixed I can

00:30:09,080 --> 00:30:13,340
refer to something and see what it is

00:30:11,210 --> 00:30:15,200
whether it's a bug or whether it's a

00:30:13,340 --> 00:30:17,059
requirement or some bit of documentation

00:30:15,200 --> 00:30:19,340
where I can go and look what it is and

00:30:17,059 --> 00:30:20,779
then actually you know this is what get

00:30:19,340 --> 00:30:22,640
actually allows you to do as well so

00:30:20,779 --> 00:30:24,919
we've got like you know a very short

00:30:22,640 --> 00:30:27,049
comment then you can expand it and so on

00:30:24,919 --> 00:30:29,659
and you can see I'm not telling you to

00:30:27,049 --> 00:30:31,820
write stories and novels and everything

00:30:29,659 --> 00:30:33,380
like this but at least summarize

00:30:31,820 --> 00:30:35,539
something would you have what you've

00:30:33,380 --> 00:30:38,269
been trying to achieve and what you have

00:30:35,539 --> 00:30:41,539
actually done and try to commit things

00:30:38,269 --> 00:30:43,549
in batches but in small batches so I've

00:30:41,539 --> 00:30:46,669
been working with a with a company

00:30:43,549 --> 00:30:49,190
recently which we told them to deliver a

00:30:46,669 --> 00:30:52,940
piece of functionality there was like 17

00:30:49,190 --> 00:30:55,130
requirements around the system so they

00:30:52,940 --> 00:30:58,070
weren't some of them were related some

00:30:55,130 --> 00:31:02,389
they weren't what we got back one

00:30:58,070 --> 00:31:04,279
commits brilliant guys thanks and it was

00:31:02,389 --> 00:31:05,990
saying yeah delivered this delivered

00:31:04,279 --> 00:31:09,830
this delivered this delivered this and

00:31:05,990 --> 00:31:12,710
it now works thank you so please try to

00:31:09,830 --> 00:31:14,990
you know to separate the functional that

00:31:12,710 --> 00:31:16,789
are you writing simply because I don't

00:31:14,990 --> 00:31:18,200
know you might want to remove something

00:31:16,789 --> 00:31:19,940
because it's not been delivered to

00:31:18,200 --> 00:31:24,230
standards on it just doesn't work and

00:31:19,940 --> 00:31:26,360
you don't want to delay your release we

00:31:24,230 --> 00:31:28,070
got 15 minutes and we are at the seven

00:31:26,360 --> 00:31:33,130
so we're not doing that thou shalt not

00:31:28,070 --> 00:31:36,260
kill maintainability coding standards

00:31:33,130 --> 00:31:38,539
the curl them to control and and and

00:31:36,260 --> 00:31:40,880
general maintenance and making sure that

00:31:38,539 --> 00:31:42,860
what you're working with is not stopping

00:31:40,880 --> 00:31:47,899
you doing your job so the coding

00:31:42,860 --> 00:31:49,519
standard thing is very is another very

00:31:47,899 --> 00:31:53,269
controversial thing some people love it

00:31:49,519 --> 00:31:57,070
some people hate it and I tend to think

00:31:53,269 --> 00:31:59,630
when your team grows is very important

00:31:57,070 --> 00:32:02,120
specifically if you have multiple teams

00:31:59,630 --> 00:32:05,000
working from different locations it

00:32:02,120 --> 00:32:06,620
quickly becomes a mess so I don't know

00:32:05,000 --> 00:32:08,899
this is another example from my past

00:32:06,620 --> 00:32:11,850
experience when we saying guys we need

00:32:08,899 --> 00:32:15,260
this this is our coding standards

00:32:11,850 --> 00:32:18,299
please stick to it no why would you and

00:32:15,260 --> 00:32:19,919
and we were saying that it was like yeah

00:32:18,299 --> 00:32:22,260
but we have to do this and it's going to

00:32:19,919 --> 00:32:25,140
take more time blood blood blood blood

00:32:22,260 --> 00:32:26,730
developer you've got things like PHP

00:32:25,140 --> 00:32:28,350
code fix I'm not sure that you've heard

00:32:26,730 --> 00:32:30,630
about it where you can actually stick to

00:32:28,350 --> 00:32:33,030
one standard and and you know fix the

00:32:30,630 --> 00:32:36,750
code immediately so it saves a lot of

00:32:33,030 --> 00:32:39,330
time but it's all about following one

00:32:36,750 --> 00:32:41,130
standard these are the guard lines this

00:32:39,330 --> 00:32:43,590
is this thing around it craftsmanship

00:32:41,130 --> 00:32:46,650
which everybody does in a in a

00:32:43,590 --> 00:32:50,309
consistent way so everybody else when it

00:32:46,650 --> 00:32:52,350
when they join know how to follow size

00:32:50,309 --> 00:32:53,429
and complexity this is all around all

00:32:52,350 --> 00:32:55,580
different tools that you can actually

00:32:53,429 --> 00:33:00,380
look and your code just make sure that

00:32:55,580 --> 00:33:04,230
you don't you know right classes and

00:33:00,380 --> 00:33:06,450
methods that have got like six thousand

00:33:04,230 --> 00:33:08,669
lines of code that's that's a brilliant

00:33:06,450 --> 00:33:11,159
experience so please keep them under

00:33:08,669 --> 00:33:16,110
control make sure that you structure

00:33:11,159 --> 00:33:22,760
them well again the single what was the

00:33:16,110 --> 00:33:25,049
paradigm cold single yeah that's the one

00:33:22,760 --> 00:33:26,580
and make sure he does the one thing that

00:33:25,049 --> 00:33:28,860
it is supposed to do so don't write a

00:33:26,580 --> 00:33:32,070
class that sends an email tweets and

00:33:28,860 --> 00:33:36,690
passes a file and and all sort of i've

00:33:32,070 --> 00:33:39,210
seen these things as well complexity is

00:33:36,690 --> 00:33:41,429
the same thing that you've got tools

00:33:39,210 --> 00:33:44,100
like PHP dependent PHP master thorough

00:33:41,429 --> 00:33:46,890
in PHP that can actually analyze all

00:33:44,100 --> 00:33:49,289
sort of decision paths in your code and

00:33:46,890 --> 00:33:51,270
telling you how much complex it is and

00:33:49,289 --> 00:33:55,620
it's not a rocket science that having a

00:33:51,270 --> 00:33:57,299
a function with I don't know 12 or 50 if

00:33:55,620 --> 00:34:00,090
statement is not going to make it easier

00:33:57,299 --> 00:34:02,429
to understand what it does and finally

00:34:00,090 --> 00:34:04,530
you remove that code so whenever you see

00:34:02,429 --> 00:34:10,649
something that you know it's not being

00:34:04,530 --> 00:34:12,300
used remove it it's a source control you

00:34:10,649 --> 00:34:14,580
can come back to it you don't have to

00:34:12,300 --> 00:34:17,580
comment it out and tell me that we don't

00:34:14,580 --> 00:34:19,290
use it anymore no just remove it and get

00:34:17,580 --> 00:34:22,830
rid of it and whether it's a part of the

00:34:19,290 --> 00:34:24,980
code if it's important tell me that in

00:34:22,830 --> 00:34:27,169
the commit message so I can refer back

00:34:24,980 --> 00:34:30,109
how am I supposed to find it anyway when

00:34:27,169 --> 00:34:33,139
it's gone you could grab and you can I

00:34:30,109 --> 00:34:35,990
don't know try to you know to find by

00:34:33,139 --> 00:34:37,550
some key words but it only makes it

00:34:35,990 --> 00:34:39,679
messy to read it and stuff like that and

00:34:37,550 --> 00:34:41,450
the same applies to you know to all the

00:34:39,679 --> 00:34:43,550
files that you're not using anymore were

00:34:41,450 --> 00:34:46,639
they some you know things that you

00:34:43,550 --> 00:34:48,590
import and or you just remove the whole

00:34:46,639 --> 00:34:52,520
module from your codebase just remove it

00:34:48,590 --> 00:34:55,850
don't comment it out though shalt not

00:34:52,520 --> 00:35:00,410
repeat yourself that's about copy

00:34:55,850 --> 00:35:05,780
pasting and cloning and the temptation

00:35:00,410 --> 00:35:10,220
to do it right and and it's not that it

00:35:05,780 --> 00:35:14,150
not that hard and all you have to be

00:35:10,220 --> 00:35:16,580
aware of the risks and well at you know

00:35:14,150 --> 00:35:18,560
at the first sight it might seem to be a

00:35:16,580 --> 00:35:21,470
very good solution just here we've done

00:35:18,560 --> 00:35:22,910
it here just copy pasted there and then

00:35:21,470 --> 00:35:25,730
another one comes we copy paste it there

00:35:22,910 --> 00:35:29,270
and then we're going to pick up wit chu

00:35:25,730 --> 00:35:31,700
Asian and then you start having problems

00:35:29,270 --> 00:35:33,470
with it and then they change it there

00:35:31,700 --> 00:35:36,350
that they forgot here and there and

00:35:33,470 --> 00:35:38,210
probably die in there and then how are

00:35:36,350 --> 00:35:40,160
you supposed to you know Dibble get and

00:35:38,210 --> 00:35:41,510
see what the problem is and how we're

00:35:40,160 --> 00:35:45,109
going to find all the patches and things

00:35:41,510 --> 00:35:47,240
like that so it's easy to say now it's

00:35:45,109 --> 00:35:48,980
it's much harder when you already work

00:35:47,240 --> 00:35:52,640
the system which has been affected by

00:35:48,980 --> 00:35:54,470
this clone mutation thing but not

00:35:52,640 --> 00:35:56,570
everything is lost there are some tools

00:35:54,470 --> 00:35:59,300
that can help you out to detect some of

00:35:56,570 --> 00:36:02,119
the some of the duplication and to get

00:35:59,300 --> 00:36:04,100
it under control first and very easy

00:36:02,119 --> 00:36:07,820
solution is to use PHP copy paste

00:36:04,100 --> 00:36:10,340
detector which is basically tokenizing

00:36:07,820 --> 00:36:14,690
you're cold and try to find some similar

00:36:10,340 --> 00:36:17,510
patterns and and basically tell you

00:36:14,690 --> 00:36:19,490
which files or which functions or which

00:36:17,510 --> 00:36:20,869
piece of code are basically copied and

00:36:19,490 --> 00:36:23,750
then you can have a look at this and and

00:36:20,869 --> 00:36:25,609
sort it out if you want to go a little

00:36:23,750 --> 00:36:28,100
bit further and get some better results

00:36:25,609 --> 00:36:30,440
there is a tool called Sona which got a

00:36:28,100 --> 00:36:32,930
brilliant duplication detection engine

00:36:30,440 --> 00:36:34,790
and it's not only within one project is

00:36:32,930 --> 00:36:36,470
a continuous inspection tool which

00:36:34,790 --> 00:36:38,170
basically does a static analysis of your

00:36:36,470 --> 00:36:39,760
code but it can all

00:36:38,170 --> 00:36:42,070
so do it cross project which is

00:36:39,760 --> 00:36:46,120
brilliant and then you can extract it

00:36:42,070 --> 00:36:48,570
nicely into a module file whatever you

00:36:46,120 --> 00:36:53,410
want to do it just have it in one place

00:36:48,570 --> 00:36:55,180
so quickly going into testing we've got

00:36:53,410 --> 00:36:58,360
the stuff that we needed to do we need

00:36:55,180 --> 00:37:00,460
to confirm that it works fear not the

00:36:58,360 --> 00:37:02,500
priest of quality assurance nor the

00:37:00,460 --> 00:37:04,840
altar of the stability though they be

00:37:02,500 --> 00:37:07,270
stained with the blood of thy brethren

00:37:04,840 --> 00:37:09,670
for they are the salvation of the

00:37:07,270 --> 00:37:15,970
writers and servants of our Lord the

00:37:09,670 --> 00:37:19,120
customer QA is important but hue is

00:37:15,970 --> 00:37:21,100
imported from the start so this is I

00:37:19,120 --> 00:37:24,520
think one of the most mistakes on

00:37:21,100 --> 00:37:27,700
misunderstanding of the QA face kawai

00:37:24,520 --> 00:37:29,610
face is more like an acceptance phase so

00:37:27,700 --> 00:37:31,750
we already know you delivered your

00:37:29,610 --> 00:37:34,180
requirements you already know it works

00:37:31,750 --> 00:37:36,520
it's the verification and should be more

00:37:34,180 --> 00:37:40,060
the verification before the customer

00:37:36,520 --> 00:37:42,550
receives the product so first of all

00:37:40,060 --> 00:37:44,860
automate that quickly selenium be hard

00:37:42,550 --> 00:37:47,110
whatever you using just don't do those

00:37:44,860 --> 00:37:50,320
manual repeatable operations all over

00:37:47,110 --> 00:37:51,880
again or over again you're gonna you're

00:37:50,320 --> 00:37:53,350
wasting so much time and you're going to

00:37:51,880 --> 00:37:56,590
save so much time you just keep it

00:37:53,350 --> 00:38:00,400
automated unit tests and this is not the

00:37:56,590 --> 00:38:02,860
next development it's not the next phase

00:38:00,400 --> 00:38:05,140
of a development cycle it's part of

00:38:02,860 --> 00:38:07,210
development it's not I write code and

00:38:05,140 --> 00:38:10,810
then later on I might write the unit

00:38:07,210 --> 00:38:12,850
test you do it as one exercise funk

00:38:10,810 --> 00:38:14,680
shoulders I mentioned already see I

00:38:12,850 --> 00:38:17,440
obviously that's going to help you out a

00:38:14,680 --> 00:38:19,360
lot make sure that it all comes together

00:38:17,440 --> 00:38:22,570
if you think about it you commit

00:38:19,360 --> 00:38:24,670
frequently you integrate it into one you

00:38:22,570 --> 00:38:26,860
shove it into see I you run your test

00:38:24,670 --> 00:38:28,570
you've got the whole engine running all

00:38:26,860 --> 00:38:30,550
over giving you all the feedback and

00:38:28,570 --> 00:38:34,180
information about how you're doing it's

00:38:30,550 --> 00:38:35,490
really really simple and a little bit

00:38:34,180 --> 00:38:38,080
about ownership and responsibility

00:38:35,490 --> 00:38:41,440
around this stage a lot of those

00:38:38,080 --> 00:38:45,880
problems can be fixed if you take care

00:38:41,440 --> 00:38:47,980
of what you do and if you and if you

00:38:45,880 --> 00:38:49,930
start owning that piece of functionality

00:38:47,980 --> 00:38:52,089
that you've been developing

00:38:49,930 --> 00:38:54,400
and you're not shoving it out the carpet

00:38:52,089 --> 00:38:56,380
yeah the simple bikes we're not doing it

00:38:54,400 --> 00:38:58,780
now now raise it you don't have to fix

00:38:56,380 --> 00:39:00,400
it that's not your decision to make just

00:38:58,780 --> 00:39:02,500
make sure that everybody is aware

00:39:00,400 --> 00:39:04,660
especially your project manager and the

00:39:02,500 --> 00:39:06,520
project NOLA they make decision whether

00:39:04,660 --> 00:39:08,770
you they want to fix the bug or not and

00:39:06,520 --> 00:39:12,790
not just deny it and just you know

00:39:08,770 --> 00:39:14,349
pretend it's never been there as a

00:39:12,790 --> 00:39:15,790
reminder i'm not sure how many of you

00:39:14,349 --> 00:39:17,890
have seen this graph and this is about

00:39:15,790 --> 00:39:20,260
the costs of fixing a bug at the

00:39:17,890 --> 00:39:22,359
requirement stage design coding and then

00:39:20,260 --> 00:39:25,450
acceptance and things it just

00:39:22,359 --> 00:39:27,400
dramatically goes up just because if

00:39:25,450 --> 00:39:29,230
you're at the acceptance stage or

00:39:27,400 --> 00:39:32,349
actually it's you know is already on

00:39:29,230 --> 00:39:34,300
production if you made a simple design

00:39:32,349 --> 00:39:36,760
mistake which basically negates what

00:39:34,300 --> 00:39:38,140
you're doing you know it's going to cost

00:39:36,760 --> 00:39:41,079
you a lot of money if you wants to fix

00:39:38,140 --> 00:39:43,809
it properly and not hacking so now we

00:39:41,079 --> 00:39:46,119
get into the closure a project hand over

00:39:43,809 --> 00:39:49,599
and actually looking back what you've

00:39:46,119 --> 00:39:52,240
done though shall recognize and retain

00:39:49,599 --> 00:39:54,700
your top talent that's quickly because

00:39:52,240 --> 00:39:59,250
we got five minutes and this is more

00:39:54,700 --> 00:39:59,250
about taking care of your people and

00:39:59,970 --> 00:40:06,940
appreciating the effort that has been

00:40:05,710 --> 00:40:09,910
put into and delivering something

00:40:06,940 --> 00:40:12,010
there's probably not kind of taken in

00:40:09,910 --> 00:40:14,140
the not aimed at you at all there's

00:40:12,010 --> 00:40:16,119
probably more into those project

00:40:14,140 --> 00:40:18,790
managers and maybe company owners that

00:40:16,119 --> 00:40:20,799
are hiding here somewhere but it's what

00:40:18,790 --> 00:40:23,859
I want to really mention is something I

00:40:20,799 --> 00:40:26,220
call people gardening and which I call

00:40:23,859 --> 00:40:29,890
about those good people which grow and

00:40:26,220 --> 00:40:31,569
and delivered and they deliver their the

00:40:29,890 --> 00:40:34,150
things that that we want them to deliver

00:40:31,569 --> 00:40:37,299
and people that stop you down and slow

00:40:34,150 --> 00:40:39,490
you down and I refer them to us weeds

00:40:37,299 --> 00:40:40,960
and you have to get rid of the weeds as

00:40:39,490 --> 00:40:42,970
soon as possible because they're going

00:40:40,960 --> 00:40:45,520
to spread around and they're going to

00:40:42,970 --> 00:40:48,430
just make everybody lives harder I know

00:40:45,520 --> 00:40:52,720
it sounds very very cruel but from my

00:40:48,430 --> 00:40:56,260
experience I'd rather say you know make

00:40:52,720 --> 00:40:58,059
an attempt to get them back into the

00:40:56,260 --> 00:41:00,040
right tracks and two working together

00:40:58,059 --> 00:41:02,830
and we are the people that if it doesn't

00:41:00,040 --> 00:41:04,810
work you really making a mistake

00:41:02,830 --> 00:41:06,760
by living that you know that not

00:41:04,810 --> 00:41:08,800
efficient people or not the people that

00:41:06,760 --> 00:41:11,250
don't follow the standards on board

00:41:08,800 --> 00:41:13,420
they're going to lower the morale

00:41:11,250 --> 00:41:15,490
everybody is going to be looking back at

00:41:13,420 --> 00:41:18,700
them and saying whether why do I have to

00:41:15,490 --> 00:41:21,430
do something if they don't why and there

00:41:18,700 --> 00:41:25,420
is nothing actually you know making them

00:41:21,430 --> 00:41:27,580
to do that so and the good people the

00:41:25,420 --> 00:41:28,840
fertilizers they're going to just you

00:41:27,580 --> 00:41:30,220
know spread they're going to spread the

00:41:28,840 --> 00:41:31,660
knowledge we're going to spread that the

00:41:30,220 --> 00:41:33,130
good mood and everything and they go

00:41:31,660 --> 00:41:36,970
Genesis improve what you're doing a

00:41:33,130 --> 00:41:38,460
daily basis and so quickly i'm going to

00:41:36,970 --> 00:41:42,130
come back actually to the keynote again

00:41:38,460 --> 00:41:47,860
because i'm still trying to get my head

00:41:42,130 --> 00:41:51,550
around what was what was the conclusion

00:41:47,860 --> 00:41:53,650
and i hope i know it was a brilliant

00:41:51,550 --> 00:41:58,780
conclusion in terms that yes we have to

00:41:53,650 --> 00:42:00,790
be focused on the on the end goal and

00:41:58,780 --> 00:42:02,410
not actually on the tools the tools

00:42:00,790 --> 00:42:04,630
should be the background they should be

00:42:02,410 --> 00:42:06,490
completely invisible their practices

00:42:04,630 --> 00:42:09,070
should be like you know something that

00:42:06,490 --> 00:42:12,730
we do and not what we are forced to do

00:42:09,070 --> 00:42:14,950
and and it's great to have this you know

00:42:12,730 --> 00:42:18,010
great piece of engineering there and

00:42:14,950 --> 00:42:21,670
that the whole team worked for a very

00:42:18,010 --> 00:42:23,170
long time but i'm not so sure whether

00:42:21,670 --> 00:42:27,640
it's been done because they have another

00:42:23,170 --> 00:42:31,470
tools and I dared to say they didn't

00:42:27,640 --> 00:42:35,110
have the tools because that happened and

00:42:31,470 --> 00:42:36,480
that happened I was actually trying to

00:42:35,110 --> 00:42:39,850
have a look at some of the statistics

00:42:36,480 --> 00:42:42,340
and see actually how the whole you know

00:42:39,850 --> 00:42:43,840
space program looked like and looked how

00:42:42,340 --> 00:42:46,090
many launches their way and how many

00:42:43,840 --> 00:42:50,890
failures and stuff like this so what

00:42:46,090 --> 00:42:54,730
I've been able to find was 135 launches

00:42:50,890 --> 00:42:58,120
I think successful launches so we've had

00:42:54,730 --> 00:43:00,490
two fatalities well in terms of the

00:42:58,120 --> 00:43:04,360
Space Shuttle was lost there's been a

00:43:00,490 --> 00:43:06,460
number of constellations and mainly

00:43:04,360 --> 00:43:09,760
driven by all those accidents and

00:43:06,460 --> 00:43:12,040
everything so really now they work in

00:43:09,760 --> 00:43:14,280
exactly the same environment just the

00:43:12,040 --> 00:43:18,240
implications are much more see

00:43:14,280 --> 00:43:20,040
here so I think they'd probably get into

00:43:18,240 --> 00:43:21,780
election I'm not sure how to get this

00:43:20,040 --> 00:43:24,090
information but it would be good to see

00:43:21,780 --> 00:43:26,130
actually what they are doing in terms of

00:43:24,090 --> 00:43:28,860
getting back on track because obviously

00:43:26,130 --> 00:43:30,660
there's been some problems and some you

00:43:28,860 --> 00:43:34,380
know they overlook things that actually

00:43:30,660 --> 00:43:35,880
led to a complete disaster if you wants

00:43:34,380 --> 00:43:37,710
to read a little bit more about you know

00:43:35,880 --> 00:43:40,200
principles and things like that some of

00:43:37,710 --> 00:43:42,600
the stuff I actually like kinda borrowed

00:43:40,200 --> 00:43:44,580
so we've got like I principles about

00:43:42,600 --> 00:43:46,380
software engineering software quality

00:43:44,580 --> 00:43:48,510
egoless programming this is about the

00:43:46,380 --> 00:43:51,270
soft side and if you want to read a

00:43:48,510 --> 00:43:53,100
little bit more about see at the logs

00:43:51,270 --> 00:43:55,410
from last night and go have a look at

00:43:53,100 --> 00:43:59,100
that coming back a little bit quickly

00:43:55,410 --> 00:44:01,590
into software craftsmanship and if you

00:43:59,100 --> 00:44:04,700
don't know the guy robert c martin uncle

00:44:01,590 --> 00:44:07,050
bob called by the people he's like a

00:44:04,700 --> 00:44:08,400
he's promoting the whole idea of

00:44:07,050 --> 00:44:12,180
craftsmanship in software engineering

00:44:08,400 --> 00:44:14,040
and and I can hold how to recommend you

00:44:12,180 --> 00:44:17,820
those two books really really brilliant

00:44:14,040 --> 00:44:19,680
books talking about you know the best

00:44:17,820 --> 00:44:21,420
practices what you can do to improve how

00:44:19,680 --> 00:44:22,890
you can make it all work he is all

00:44:21,420 --> 00:44:24,240
around the agile and everything like

00:44:22,890 --> 00:44:26,820
this and then you've got a few links

00:44:24,240 --> 00:44:28,800
around what he thinks about stuff he's

00:44:26,820 --> 00:44:30,570
gonna clean code is that calm side what

00:44:28,800 --> 00:44:33,870
he's posting your videos talking about

00:44:30,570 --> 00:44:36,990
that the clean and and proper

00:44:33,870 --> 00:44:38,370
engineering principles and things like

00:44:36,990 --> 00:44:39,660
that really really cool to watch with a

00:44:38,370 --> 00:44:41,610
little bit of a humor and everything

00:44:39,660 --> 00:44:43,860
like this there is a manifest about

00:44:41,610 --> 00:44:45,270
software craftsmanship and something

00:44:43,860 --> 00:44:47,900
that's been already mentioned about cat

00:44:45,270 --> 00:44:51,480
house so you know practicing and

00:44:47,900 --> 00:44:53,370
practicing frequently the same

00:44:51,480 --> 00:44:56,160
operations all over again I don't think

00:44:53,370 --> 00:44:58,380
we have a time for questions you can

00:44:56,160 --> 00:45:01,020
find me on Twitter this is my twitter

00:44:58,380 --> 00:45:04,340
handle so ask me questions or engage me

00:45:01,020 --> 00:45:04,340
after the talk thank you very much

00:45:04,410 --> 00:45:06,470
you

00:45:16,080 --> 00:45:18,140

YouTube URL: https://www.youtube.com/watch?v=013jdm0cpCs


