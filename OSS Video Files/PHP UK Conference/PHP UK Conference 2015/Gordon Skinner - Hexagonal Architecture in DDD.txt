Title: Gordon Skinner - Hexagonal Architecture in DDD
Publication date: 2015-04-02
Playlist: PHP UK Conference 2015
Description: 
	In this talk I will explore Domain Driven Development, and particularly how using the practice of Hexagonal Architecture can keep your codebase clean and scalable. I will define Ports, Adapters, Domains, and how to keep all your concerns separate.
Captions: 
	00:00:05,870 --> 00:00:10,590
so first things first Who am I my name

00:00:08,670 --> 00:00:12,420
is Gordon the moment I work for a

00:00:10,590 --> 00:00:15,240
start-up called reach channel and did

00:00:12,420 --> 00:00:18,090
not for a few months previously I was a

00:00:15,240 --> 00:00:20,039
team wheat and Vika before that I was a

00:00:18,090 --> 00:00:24,120
senior developer mu and before that I

00:00:20,039 --> 00:00:27,930
did some dot Nets you can contact me on

00:00:24,120 --> 00:00:30,300
these two places I'm generally not good

00:00:27,930 --> 00:00:31,050
at responding but give me a Prado I'll

00:00:30,300 --> 00:00:33,540
get back to you

00:00:31,050 --> 00:00:35,100
but generally honestly if you don't get

00:00:33,540 --> 00:00:36,420
a chance to catch up with me at any

00:00:35,100 --> 00:00:37,710
point and you do have questions about

00:00:36,420 --> 00:00:40,199
anything that comes up in these please

00:00:37,710 --> 00:00:41,399
feel free to contact me and I'll I'll

00:00:40,199 --> 00:00:45,780
get back to you I won't see you as well

00:00:41,399 --> 00:00:48,089
as I can so um there's a generally held

00:00:45,780 --> 00:00:50,670
belief in conference speaking that the

00:00:48,089 --> 00:00:56,699
the bravest or the stupidest thing you

00:00:50,670 --> 00:00:57,839
can do is a live demo I believe that I

00:00:56,699 --> 00:01:01,530
might have found something brave or

00:00:57,839 --> 00:01:03,809
stupid or to do in a room full of PHP

00:01:01,530 --> 00:01:06,240
developers who are all hungover from a

00:01:03,809 --> 00:01:08,520
social last night who are just coming up

00:01:06,240 --> 00:01:13,579
to their lunch and I'm going to want to

00:01:08,520 --> 00:01:15,869
have that I'm going to talk about golf

00:01:13,579 --> 00:01:18,600
now I can see some people nervously

00:01:15,869 --> 00:01:20,340
looking to the door now I can assure you

00:01:18,600 --> 00:01:22,560
you don't need to know a single thing

00:01:20,340 --> 00:01:26,340
about golf to enjoy this presentation

00:01:22,560 --> 00:01:28,200
hopefully I personally I am a golfer I

00:01:26,340 --> 00:01:31,229
like playing golf and I started writing

00:01:28,200 --> 00:01:33,750
a golf application a couple of years ago

00:01:31,229 --> 00:01:35,670
not using any of the techniques that I'm

00:01:33,750 --> 00:01:37,710
going to talk about today and I recently

00:01:35,670 --> 00:01:41,130
started rewriting it using a lot of the

00:01:37,710 --> 00:01:41,939
techniques so this talk is going to have

00:01:41,130 --> 00:01:43,500
a little bit of a before-and-after

00:01:41,939 --> 00:01:45,270
element to it I'm going to show you

00:01:43,500 --> 00:01:46,590
someone to call that dead rate I'm going

00:01:45,270 --> 00:01:49,890
to show you some of the code I have now

00:01:46,590 --> 00:01:51,479
got and so I can see there's a golf

00:01:49,890 --> 00:01:54,240
theme to it but you really don't need to

00:01:51,479 --> 00:01:55,679
know anything about golf for that the

00:01:54,240 --> 00:01:58,259
other thing that I want to make

00:01:55,679 --> 00:02:01,950
perfectly clear is that I wrote the

00:01:58,259 --> 00:02:04,770
first version in Kohana and I'm now

00:02:01,950 --> 00:02:06,479
working with symphony but I once state

00:02:04,770 --> 00:02:08,220
for the record I like Kohana I think Han

00:02:06,479 --> 00:02:09,899
is a great little framework so I don't

00:02:08,220 --> 00:02:12,420
want the takeaway point from this to be

00:02:09,899 --> 00:02:14,519
some form of free more flame or like me

00:02:12,420 --> 00:02:15,959
saying it's wrong in Kahana and it's

00:02:14,519 --> 00:02:18,010
right in symphony that's that's not the

00:02:15,959 --> 00:02:22,270
intent at all

00:02:18,010 --> 00:02:24,940
and thirdly some recording examples I'm

00:02:22,270 --> 00:02:28,450
putting up are a combination of real

00:02:24,940 --> 00:02:31,180
court pseudo chords exaggerations for

00:02:28,450 --> 00:02:35,100
effects and I will let you decide which

00:02:31,180 --> 00:02:37,420
you think is which so we'll start with

00:02:35,100 --> 00:02:40,150
two or three just examples of the chord

00:02:37,420 --> 00:02:42,010
as I had it in Kahana so the first thing

00:02:40,150 --> 00:02:46,120
we've got here is we've got a club a

00:02:42,010 --> 00:02:49,180
golf club extends a condo RM it has a

00:02:46,120 --> 00:02:50,650
name it has a golf field where you go

00:02:49,180 --> 00:02:53,230
and you play your golf and it has a

00:02:50,650 --> 00:02:54,310
course where you would go and learn how

00:02:53,230 --> 00:02:57,160
to play golf

00:02:54,310 --> 00:02:58,450
I can see one or two golfers shuffling

00:02:57,160 --> 00:03:00,250
uncomfortably in the seats that some of

00:02:58,450 --> 00:03:02,800
the terminology there and I will address

00:03:00,250 --> 00:03:04,330
that in time and there's also a function

00:03:02,800 --> 00:03:09,280
here to be able to book a tee off time

00:03:04,330 --> 00:03:11,170
at this club we also have a simple

00:03:09,280 --> 00:03:14,320
controller to add a new club it takes

00:03:11,170 --> 00:03:18,940
values in from the request and it saves

00:03:14,320 --> 00:03:20,350
the club we have a details controller

00:03:18,940 --> 00:03:25,900
does the opposite of that it takes a

00:03:20,350 --> 00:03:27,820
club displays it out and another

00:03:25,900 --> 00:03:30,340
controller where we take in the user we

00:03:27,820 --> 00:03:32,100
take in our club we take in a date and

00:03:30,340 --> 00:03:36,460
we book a tee off time for this user

00:03:32,100 --> 00:03:38,800
like I say the actual things that are

00:03:36,460 --> 00:03:41,020
happening there is not that important

00:03:38,800 --> 00:03:42,550
it's just for illustration and we'll

00:03:41,020 --> 00:03:47,080
compare them side by side as we go along

00:03:42,550 --> 00:03:49,210
so the first part of this talk is the

00:03:47,080 --> 00:03:51,550
mean driven design you can have a quick

00:03:49,210 --> 00:03:55,540
show of hands about how many people know

00:03:51,550 --> 00:03:57,190
and understand that term great as there

00:03:55,540 --> 00:03:58,600
are many people in here who don't really

00:03:57,190 --> 00:04:00,520
know anything about domain driven design

00:03:58,600 --> 00:04:03,010
this is a completely new term to them

00:04:00,520 --> 00:04:05,770
okay those people that raise their hands

00:04:03,010 --> 00:04:09,670
the second time around are you strong

00:04:05,770 --> 00:04:10,960
with object orientation okay so I don't

00:04:09,670 --> 00:04:11,860
think you've been allowing too much new

00:04:10,960 --> 00:04:13,600
here there's not going to be anything

00:04:11,860 --> 00:04:15,250
here that blows your mind in terms of

00:04:13,600 --> 00:04:17,410
domain driven design there's a lot of

00:04:15,250 --> 00:04:20,020
parallels between DDD and object

00:04:17,410 --> 00:04:23,020
orientations so the first thing we're

00:04:20,020 --> 00:04:25,720
going to look at is the domain the

00:04:23,020 --> 00:04:27,580
domain is essentially the sphere of

00:04:25,720 --> 00:04:29,790
knowledge is the thing your rating your

00:04:27,580 --> 00:04:32,610
chords about

00:04:29,790 --> 00:04:35,220
so there's a court here from Eric Evans

00:04:32,610 --> 00:04:38,220
who quite literally wrote the book on

00:04:35,220 --> 00:04:39,900
this the book is called tackling

00:04:38,220 --> 00:04:42,990
complexity in the heart of software came

00:04:39,900 --> 00:04:45,420
out in 2003 and most subsequent rating

00:04:42,990 --> 00:04:47,730
on the subjects comes from the speaks

00:04:45,420 --> 00:04:51,420
bands on this book it takes the ideas

00:04:47,730 --> 00:04:53,910
put forth in this book and it elaborates

00:04:51,420 --> 00:04:57,390
on them but nothing really has changed

00:04:53,910 --> 00:04:58,590
much since this book and he says that in

00:04:57,390 --> 00:04:59,880
order to create good software you have

00:04:58,590 --> 00:05:03,570
to know well that software is about

00:04:59,880 --> 00:05:05,010
which makes sense right you you cannot

00:05:03,570 --> 00:05:08,910
create banking system unless you

00:05:05,010 --> 00:05:10,440
understand what banking is about so you

00:05:08,910 --> 00:05:13,860
must understand the demeanor of banking

00:05:10,440 --> 00:05:15,540
to be able to rate that so your domain

00:05:13,860 --> 00:05:18,630
is a speed of knowledge or influence or

00:05:15,540 --> 00:05:20,160
activity it's what you're doing it's the

00:05:18,630 --> 00:05:23,310
subject area to which your user applies

00:05:20,160 --> 00:05:25,650
a program and the demeanor valves

00:05:23,310 --> 00:05:27,540
collaboratively but this is a topic I

00:05:25,650 --> 00:05:33,150
will come back to again and again over

00:05:27,540 --> 00:05:34,500
the next 20 minutes or so so I'm going

00:05:33,150 --> 00:05:36,210
to spend the first half of this talk as

00:05:34,500 --> 00:05:38,400
I see talking about DDD some of the

00:05:36,210 --> 00:05:39,420
principles involved in DDD and then I'm

00:05:38,400 --> 00:05:44,700
going to move on to hexagonal

00:05:39,420 --> 00:05:48,270
architecture so we have entities and

00:05:44,700 --> 00:05:51,000
value objects in DDD now what I'm gonna

00:05:48,270 --> 00:05:51,830
do here is I'm gonna try a little

00:05:51,000 --> 00:05:55,260
experiment

00:05:51,830 --> 00:05:57,620
does anybody have a ten pound note on

00:05:55,260 --> 00:05:57,620
them

00:05:58,070 --> 00:06:03,500
got a hand up here I have a temper not

00:06:02,009 --> 00:06:06,120
on me

00:06:03,500 --> 00:06:13,020
would you mind swapping your temper not

00:06:06,120 --> 00:06:15,050
for my temper not okay you can see here

00:06:13,020 --> 00:06:18,570
to tempo notes two different tempo notes

00:06:15,050 --> 00:06:20,520
this one here from a gentleman this one

00:06:18,570 --> 00:06:26,550
here was mine I'm gonna take that and

00:06:20,520 --> 00:06:29,100
I'm gonna swap that yep you're happy

00:06:26,550 --> 00:06:31,610
with that transaction yeah I can feel a

00:06:29,100 --> 00:06:33,630
sense of anticipation building I can I

00:06:31,610 --> 00:06:36,360
can see people looking or what's

00:06:33,630 --> 00:06:38,699
happening here it's a magic trick it's

00:06:36,360 --> 00:06:43,680
not that was exactly as mundane as it

00:06:38,699 --> 00:06:44,970
looked but the point is that I have a

00:06:43,680 --> 00:06:47,099
new tempo naught and you have a new

00:06:44,970 --> 00:06:47,820
tempo not but this hasn't changed

00:06:47,099 --> 00:06:50,160
anything

00:06:47,820 --> 00:06:53,039
these tempo notes are equal they are

00:06:50,160 --> 00:06:55,620
different but they're equal and the

00:06:53,039 --> 00:06:58,530
Equality comes from the values held

00:06:55,620 --> 00:07:00,860
within it is ten and it is pound

00:06:58,530 --> 00:07:05,310
sterling and that's how we compare them

00:07:00,860 --> 00:07:08,159
these are value objects no I notice

00:07:05,310 --> 00:07:13,349
there you've got a laptop you know we've

00:07:08,159 --> 00:07:15,389
just established here that you know I

00:07:13,349 --> 00:07:17,120
like to do a treat I've just done a

00:07:15,389 --> 00:07:18,960
successful trade you've seen that

00:07:17,120 --> 00:07:21,090
partner here is happy with the trade

00:07:18,960 --> 00:07:28,289
would you be willing to swap your laptop

00:07:21,090 --> 00:07:28,860
for my laptop of course not of course

00:07:28,289 --> 00:07:31,020
not

00:07:28,860 --> 00:07:34,110
and the reason for that is your laptop

00:07:31,020 --> 00:07:35,340
her state your laptop hers the things

00:07:34,110 --> 00:07:38,909
that you have downloaded today your

00:07:35,340 --> 00:07:40,650
programs your files your emails main

00:07:38,909 --> 00:07:46,919
have state as well it's got a picture of

00:07:40,650 --> 00:07:49,139
a train I drew last night but the

00:07:46,919 --> 00:07:53,430
concept there is that that is a unique

00:07:49,139 --> 00:07:56,159
laptop it is very much your laptop it is

00:07:53,430 --> 00:07:59,610
individual it's not interchangeable it

00:07:56,159 --> 00:08:03,090
has as a value or so as an entity it has

00:07:59,610 --> 00:08:05,280
an ID it's specific to you this one has

00:08:03,090 --> 00:08:07,560
an ID so the difference is they are

00:08:05,280 --> 00:08:09,990
value objects are immutable you don't

00:08:07,560 --> 00:08:11,330
change them no we didn't upgrade this

00:08:09,990 --> 00:08:13,460
gentleman's temper

00:08:11,330 --> 00:08:15,020
by changing and changing the picture of

00:08:13,460 --> 00:08:16,210
the Queen although you could do that I

00:08:15,020 --> 00:08:18,440
wouldn't recommend it

00:08:16,210 --> 00:08:20,330
they don't have an identity in this

00:08:18,440 --> 00:08:22,610
system just the equality is based on the

00:08:20,330 --> 00:08:24,710
values of them whereas the entities do

00:08:22,610 --> 00:08:26,539
they contain States the state changes

00:08:24,710 --> 00:08:30,080
over time you describe the current

00:08:26,539 --> 00:08:32,529
status of the application and the

00:08:30,080 --> 00:08:34,969
Equality is based on this identifier

00:08:32,529 --> 00:08:37,070
I'll have you know last night when

00:08:34,969 --> 00:08:39,680
you're all at social I went and bought

00:08:37,070 --> 00:08:45,709
that that's my commitment to a visual

00:08:39,680 --> 00:08:50,740
gag so I stalk a little bit about model

00:08:45,709 --> 00:08:56,360
driven design so within the concept of

00:08:50,740 --> 00:08:59,990
of DDD we have models models are the

00:08:56,360 --> 00:09:03,440
knowns in your domain models represent

00:08:59,990 --> 00:09:05,450
the things you talk about when you talk

00:09:03,440 --> 00:09:06,950
outside the software when you're talking

00:09:05,450 --> 00:09:08,420
with your product owners when you're

00:09:06,950 --> 00:09:09,680
talking with your project managers when

00:09:08,420 --> 00:09:11,750
you're talking with your clients whoever

00:09:09,680 --> 00:09:18,110
it is you interact with you talk about

00:09:11,750 --> 00:09:19,880
things and we want to make sure that

00:09:18,110 --> 00:09:23,360
we're naming these things as we talk

00:09:19,880 --> 00:09:26,209
about them outside the software within

00:09:23,360 --> 00:09:28,700
the software and about - excuse me I'm

00:09:26,209 --> 00:09:31,540
about to come to that in a bit more

00:09:28,700 --> 00:09:35,720
detail later on this should be simple

00:09:31,540 --> 00:09:38,589
your models represent knowns they

00:09:35,720 --> 00:09:41,000
represent entities represent behavior

00:09:38,589 --> 00:09:42,500
but they also should adhere to the

00:09:41,000 --> 00:09:44,029
single responsibility principle they do

00:09:42,500 --> 00:09:45,140
one thing they know about the

00:09:44,029 --> 00:09:47,000
relationships if anybody was up

00:09:45,140 --> 00:09:51,260
Marcelo's talk yesterday he was talking

00:09:47,000 --> 00:09:55,490
in a similar vein about models complex

00:09:51,260 --> 00:09:57,920
logic doesn't belong in there and if you

00:09:55,490 --> 00:10:00,500
get your model correct it becomes

00:09:57,920 --> 00:10:02,660
trivial to enhance the application you

00:10:00,500 --> 00:10:05,570
don't need to complete your model at the

00:10:02,660 --> 00:10:07,190
first pass you just need to know what it

00:10:05,570 --> 00:10:10,459
is how it interacts with certain things

00:10:07,190 --> 00:10:11,779
and as your domain grows you can add new

00:10:10,459 --> 00:10:13,010
models you can add new relationships

00:10:11,779 --> 00:10:15,880
with these models but it should be quite

00:10:13,010 --> 00:10:19,579
trivial because these things are small

00:10:15,880 --> 00:10:22,699
and simple so let's look back at the

00:10:19,579 --> 00:10:24,649
chord here we've got our club here we've

00:10:22,699 --> 00:10:26,030
got a golf field and we've got our

00:10:24,649 --> 00:10:27,470
course

00:10:26,030 --> 00:10:29,870
which our strings were just having names

00:10:27,470 --> 00:10:35,000
in these right now but these are things

00:10:29,870 --> 00:10:37,070
that we would talk about outside the inn

00:10:35,000 --> 00:10:39,740
in the real world we would talk about as

00:10:37,070 --> 00:10:43,190
actual things field is a thing it's not

00:10:39,740 --> 00:10:44,690
just a string it's not just a name so we

00:10:43,190 --> 00:10:47,000
should split that out and represent that

00:10:44,690 --> 00:10:48,920
we have a model know to represent our

00:10:47,000 --> 00:10:52,640
golf field and we have a model know to

00:10:48,920 --> 00:10:54,710
represent our course and then this

00:10:52,640 --> 00:10:56,360
becomes represented in our club as well

00:10:54,710 --> 00:11:01,190
you'll notice that the string there has

00:10:56,360 --> 00:11:05,060
changed to the objects let's talk about

00:11:01,190 --> 00:11:08,900
your dick uses language what this

00:11:05,060 --> 00:11:11,510
essentially means and again there's

00:11:08,900 --> 00:11:14,780
another quote from Eric Evans but what

00:11:11,510 --> 00:11:19,010
this basically means is talking the same

00:11:14,780 --> 00:11:20,480
language be very very clear with how

00:11:19,010 --> 00:11:24,590
you're naming things and make sure that

00:11:20,480 --> 00:11:28,670
those names represent how people outside

00:11:24,590 --> 00:11:30,860
of the software talk as well so we want

00:11:28,670 --> 00:11:33,170
to remove any ambiguity any names that

00:11:30,860 --> 00:11:35,540
have meaning that could mean many things

00:11:33,170 --> 00:11:38,060
that could mean depending on who's

00:11:35,540 --> 00:11:41,630
talking about it the language should be

00:11:38,060 --> 00:11:42,830
defined by the domain experts and one

00:11:41,630 --> 00:11:45,200
thing to remember you're not the target

00:11:42,830 --> 00:11:47,930
audience of your site in most cases and

00:11:45,200 --> 00:11:50,330
on some cases that will be the case but

00:11:47,930 --> 00:11:52,310
crucially use the same language in the

00:11:50,330 --> 00:11:54,440
chords that you use when you're planning

00:11:52,310 --> 00:11:57,080
when you use in discussions when you use

00:11:54,440 --> 00:11:58,970
when you're writing that language should

00:11:57,080 --> 00:12:00,830
filter across throughout your company

00:11:58,970 --> 00:12:04,610
the same thing should represent it

00:12:00,830 --> 00:12:05,840
everywhere so one example in my company

00:12:04,610 --> 00:12:10,460
that we saw

00:12:05,840 --> 00:12:12,820
I work in wholesale retail b2b and in

00:12:10,460 --> 00:12:15,440
retail b2b we have the concept of

00:12:12,820 --> 00:12:19,730
forward orders and we have the concept

00:12:15,440 --> 00:12:21,230
of reorders now a forward order is

00:12:19,730 --> 00:12:23,510
essentially what I would think of as a

00:12:21,230 --> 00:12:26,690
pre-order it's something that happens

00:12:23,510 --> 00:12:28,880
before stuff is created so the the

00:12:26,690 --> 00:12:30,589
retail are solid about the brand makes

00:12:28,880 --> 00:12:32,210
available this talk says this is the

00:12:30,589 --> 00:12:34,580
things that are coming we've not made

00:12:32,210 --> 00:12:36,140
any yet we want you to place all your

00:12:34,580 --> 00:12:37,860
order so that we know what the demand is

00:12:36,140 --> 00:12:41,010
so we can go and make them

00:12:37,860 --> 00:12:43,560
and a reorder is for your any of you

00:12:41,010 --> 00:12:45,660
would think of as an actual order they

00:12:43,560 --> 00:12:48,029
come back after that initial period and

00:12:45,660 --> 00:12:50,519
the the order more so to degree they are

00:12:48,029 --> 00:12:53,310
reordering but if you're thinking at it

00:12:50,519 --> 00:12:55,140
from B to C point of view it's an order

00:12:53,310 --> 00:12:56,820
you come to the website you have it

00:12:55,140 --> 00:12:58,860
there you press the stock you go to the

00:12:56,820 --> 00:13:02,279
order and you place it and we had

00:12:58,860 --> 00:13:05,550
countless discussions internally with a

00:13:02,279 --> 00:13:10,230
couple of developers who are adamant

00:13:05,550 --> 00:13:13,050
that this was an order to them the word

00:13:10,230 --> 00:13:17,250
reorder made no sense and in a way I can

00:13:13,050 --> 00:13:19,200
understand that it is an order and they

00:13:17,250 --> 00:13:22,200
were thinking purely and not b2c term

00:13:19,200 --> 00:13:24,660
and the discussions and the arguments we

00:13:22,200 --> 00:13:26,550
had we have to call an order this is an

00:13:24,660 --> 00:13:28,740
order because it makes sense to me I

00:13:26,550 --> 00:13:30,990
want to call it an order we go back and

00:13:28,740 --> 00:13:33,600
say no we can't call it an order because

00:13:30,990 --> 00:13:37,380
in or the mean or the mean experts are

00:13:33,600 --> 00:13:42,029
talking about reorder we have to reflect

00:13:37,380 --> 00:13:44,399
that so you've heard me define the term

00:13:42,029 --> 00:13:45,720
domain experts a couple of times here I

00:13:44,399 --> 00:13:51,110
want to do another little experiment

00:13:45,720 --> 00:13:53,579
here can you put up your hand if you are

00:13:51,110 --> 00:13:56,730
if you own a company if you run a

00:13:53,579 --> 00:13:59,880
company if you manage your company can

00:13:56,730 --> 00:14:01,490
you put up your hand as well if you work

00:13:59,880 --> 00:14:06,329
in product you're a product manager

00:14:01,490 --> 00:14:10,279
product owner can you put up your hands

00:14:06,329 --> 00:14:15,660
as well if you are a business analyst

00:14:10,279 --> 00:14:18,120
okay so if you don't have your hand up

00:14:15,660 --> 00:14:23,910
right now I hate to break it to you

00:14:18,120 --> 00:14:25,800
you're not a demain expert know a tree

00:14:23,910 --> 00:14:27,240
channel I was lucky enough to be

00:14:25,800 --> 00:14:29,579
involved at the very starts I

00:14:27,240 --> 00:14:31,620
architected the system with with help

00:14:29,579 --> 00:14:33,810
from my team obviously I have been

00:14:31,620 --> 00:14:36,089
involved in rating or reviewing pretty

00:14:33,810 --> 00:14:37,829
much every line of court I understand

00:14:36,089 --> 00:14:40,019
implicitly the relationships between all

00:14:37,829 --> 00:14:46,220
the entities within our system I know

00:14:40,019 --> 00:14:50,090
the domain but a lot of our clients are

00:14:46,220 --> 00:14:53,120
our brands in womenswear

00:14:50,090 --> 00:14:55,700
I don't understand why retail buyers

00:14:53,120 --> 00:14:59,500
come to our system and the order lots of

00:14:55,700 --> 00:15:02,150
this and none of this I don't understand

00:14:59,500 --> 00:15:05,120
when our brands are putting together the

00:15:02,150 --> 00:15:08,300
collections that this season everything

00:15:05,120 --> 00:15:13,300
has to be blue and polka-dots I don't

00:15:08,300 --> 00:15:17,420
understand why handbags cost 500 pounds

00:15:13,300 --> 00:15:20,900
when I paid 30 pounds for that one and

00:15:17,420 --> 00:15:24,110
it carries more I'm not the domain

00:15:20,900 --> 00:15:26,210
expert I understand it I mean in terms

00:15:24,110 --> 00:15:28,390
of software but I'm not the domain

00:15:26,210 --> 00:15:32,750
expert

00:15:28,390 --> 00:15:36,710
so let's look back at our cord here when

00:15:32,750 --> 00:15:39,110
I wrote this court I was thinking about

00:15:36,710 --> 00:15:41,300
it from my point of view a course to me

00:15:39,110 --> 00:15:42,740
is something you go on to learn so it

00:15:41,300 --> 00:15:47,030
makes sense to call that thing a course

00:15:42,740 --> 00:15:48,620
and a golf field it makes sense us were

00:15:47,030 --> 00:15:51,080
you going to go play play golf on the

00:15:48,620 --> 00:15:52,700
field so I'm gonna name these this way

00:15:51,080 --> 00:15:55,010
because that's what makes sense to me as

00:15:52,700 --> 00:15:56,450
a developer obviously this is an awkward

00:15:55,010 --> 00:15:58,670
example because I'm the developer and

00:15:56,450 --> 00:16:02,840
the product owner and everything but run

00:15:58,670 --> 00:16:05,540
with me here so I chosen as a developer

00:16:02,840 --> 00:16:08,090
to name things this way because it makes

00:16:05,540 --> 00:16:09,470
sense to me as a developer now imagine

00:16:08,090 --> 00:16:11,900
what happens when the product owner

00:16:09,470 --> 00:16:15,290
comes to me and says okay we need to

00:16:11,900 --> 00:16:18,110
change the cost of the course and I look

00:16:15,290 --> 00:16:19,490
I don't go okay when you say course do

00:16:18,110 --> 00:16:23,990
you mean the course you mean or do you

00:16:19,490 --> 00:16:27,920
mean the course I mean this should

00:16:23,990 --> 00:16:29,690
reflect across the entire resinous the

00:16:27,920 --> 00:16:36,020
words and the software need to represent

00:16:29,690 --> 00:16:37,610
the words outside of the software so I'm

00:16:36,020 --> 00:16:40,550
going to talk about bounded context a

00:16:37,610 --> 00:16:43,220
little bit here what about the context

00:16:40,550 --> 00:16:46,310
essentially is it's a subdivision of

00:16:43,220 --> 00:16:48,350
your domain so we spoke about your

00:16:46,310 --> 00:16:51,200
domain being your suite of influences is

00:16:48,350 --> 00:16:54,920
everything about your business but you

00:16:51,200 --> 00:16:57,110
can sometimes segregate that more so to

00:16:54,920 --> 00:17:00,740
keep the the golf analogy going imagine

00:16:57,110 --> 00:17:02,640
we have a green keeper who is

00:17:00,740 --> 00:17:06,089
responsible for maintaining the

00:17:02,640 --> 00:17:08,549
the golf course itself we have the the

00:17:06,089 --> 00:17:13,199
club pro who is responsible for giving

00:17:08,549 --> 00:17:15,209
the lessons in the greenkeeper they are

00:17:13,199 --> 00:17:16,290
they have a lot of tools for example

00:17:15,209 --> 00:17:19,530
they would use they're gonna have a lot

00:17:16,290 --> 00:17:21,959
more they're gonna have all the all the

00:17:19,530 --> 00:17:23,670
tools you need to to cut the grass to to

00:17:21,959 --> 00:17:26,490
do everything they need to do these

00:17:23,670 --> 00:17:29,190
things are very very specific to that

00:17:26,490 --> 00:17:30,660
small area of the domain you know the

00:17:29,190 --> 00:17:33,179
the club pro is not going to come along

00:17:30,660 --> 00:17:35,910
and and start using a lot more could if

00:17:33,179 --> 00:17:37,919
they wanted to but that is we've got

00:17:35,910 --> 00:17:40,290
this little bounded context here that is

00:17:37,919 --> 00:17:42,120
for them likewise the pro they're gonna

00:17:40,290 --> 00:17:46,830
have their or their teaching calendar

00:17:42,120 --> 00:17:48,150
they're going to have a set of people

00:17:46,830 --> 00:17:49,799
they've had lessons with before and

00:17:48,150 --> 00:17:51,630
after they're gonna have the inventory

00:17:49,799 --> 00:17:55,620
of the club shop usually the club Pro

00:17:51,630 --> 00:17:57,510
runs the club shop so bender contexts

00:17:55,620 --> 00:17:58,890
can have unrelated concepts you get a

00:17:57,510 --> 00:18:00,720
teaching calendar you've got the lawn

00:17:58,890 --> 00:18:03,090
mower on one side but it can also share

00:18:00,720 --> 00:18:04,410
concepts so think of the course for

00:18:03,090 --> 00:18:07,740
example the club Pro is going to go and

00:18:04,410 --> 00:18:10,640
play on the course and the the green

00:18:07,740 --> 00:18:13,860
keeper is going to maintain the course

00:18:10,640 --> 00:18:15,480
but what we've got to be wary of is that

00:18:13,860 --> 00:18:20,130
words and phrases mean different things

00:18:15,480 --> 00:18:22,410
in different contexts so just without

00:18:20,130 --> 00:18:27,480
any context whatsoever if I say the word

00:18:22,410 --> 00:18:28,950
ticket what does that mean to you I can

00:18:27,480 --> 00:18:30,720
guarantee there's a before or five

00:18:28,950 --> 00:18:32,400
different things going around the room

00:18:30,720 --> 00:18:33,840
at the moment everybody's got a

00:18:32,400 --> 00:18:36,140
different thing because I've not put any

00:18:33,840 --> 00:18:39,299
context on it whatsoever

00:18:36,140 --> 00:18:42,929
so think of and again to go back to our

00:18:39,299 --> 00:18:45,540
golf example think of a bunker - those

00:18:42,929 --> 00:18:46,830
aren't proficient golfer - another much

00:18:45,540 --> 00:18:48,360
becau fact bunker is basically an

00:18:46,830 --> 00:18:52,860
obstacle on the golf course is filled

00:18:48,360 --> 00:18:55,380
with sand if you are the the club pro

00:18:52,860 --> 00:18:57,660
the bunker it's it's annoying is it's a

00:18:55,380 --> 00:18:59,700
thing that's there that when you're

00:18:57,660 --> 00:19:04,200
playing golf you sometimes land in and

00:18:59,700 --> 00:19:05,880
you have to get out of it it's a value

00:19:04,200 --> 00:19:08,970
object because it doesn't matter which

00:19:05,880 --> 00:19:09,970
bunker urine is a pro just you're in a

00:19:08,970 --> 00:19:12,070
bunker

00:19:09,970 --> 00:19:14,500
but if we think of it from the point of

00:19:12,070 --> 00:19:17,350
view of the greenkeeper it's that

00:19:14,500 --> 00:19:19,270
specific bunker it suffers with drainage

00:19:17,350 --> 00:19:21,370
in the winter for example and it tends

00:19:19,270 --> 00:19:24,490
to floods or the grass around the lip of

00:19:21,370 --> 00:19:27,190
it is too long to the greenkeeper these

00:19:24,490 --> 00:19:30,750
things are very specific so things mean

00:19:27,190 --> 00:19:30,750
different things in different contexts

00:19:32,760 --> 00:19:43,930
so services services are the actions in

00:19:40,420 --> 00:19:45,990
your application we spoke about the the

00:19:43,930 --> 00:19:48,640
nouns before we've built our models

00:19:45,990 --> 00:19:52,240
services the actions when something has

00:19:48,640 --> 00:19:55,420
to do something services caused state

00:19:52,240 --> 00:19:59,290
changes to entities but they do not have

00:19:55,420 --> 00:20:00,670
state themselves and we're still being

00:19:59,290 --> 00:20:01,960
driven by the same principles that we

00:20:00,670 --> 00:20:05,110
just spoken about ubiquitous language

00:20:01,960 --> 00:20:06,390
and domain expertise we still need to

00:20:05,110 --> 00:20:09,160
make sure we're having that discussion

00:20:06,390 --> 00:20:10,840
when something happens in our system we

00:20:09,160 --> 00:20:14,680
have a service it represents a real

00:20:10,840 --> 00:20:17,820
world need that's spoken about so let's

00:20:14,680 --> 00:20:19,930
look back at our model here our club

00:20:17,820 --> 00:20:21,550
we've got an action we want to perform

00:20:19,930 --> 00:20:25,240
here which is picking a tee off time for

00:20:21,550 --> 00:20:27,340
a user you notice the name of that

00:20:25,240 --> 00:20:30,100
function doesn't actually involve the

00:20:27,340 --> 00:20:31,990
word Club and it's interacting with a

00:20:30,100 --> 00:20:33,850
number of different things it's not

00:20:31,990 --> 00:20:35,950
really affecting the state of the club

00:20:33,850 --> 00:20:37,780
it does depend on how you've modeled it

00:20:35,950 --> 00:20:41,470
if the model if the club has a series of

00:20:37,780 --> 00:20:43,270
tee off teams within it then perhaps but

00:20:41,470 --> 00:20:46,540
how I would prefer to look at this is

00:20:43,270 --> 00:20:48,760
when Iced create a booking service and

00:20:46,540 --> 00:20:51,150
we have a manager for picking tee times

00:20:48,760 --> 00:20:53,710
where we pass a user in a club into it

00:20:51,150 --> 00:20:56,260
now within this booking service which is

00:20:53,710 --> 00:20:59,140
names based off we could also have a

00:20:56,260 --> 00:21:01,000
restaurant booking manager many golf

00:20:59,140 --> 00:21:03,510
clubs have have restaurants as part of

00:21:01,000 --> 00:21:03,510
the complex

00:21:05,900 --> 00:21:16,490
it's a continuous integration with until

00:21:09,860 --> 00:21:19,240
next CI is was spoken about by Harvey

00:21:16,490 --> 00:21:21,260
today we go to Harvey's talk yesterday

00:21:19,240 --> 00:21:24,559
while he was talking about continuous

00:21:21,260 --> 00:21:28,460
deployment where as I'm stopping at a

00:21:24,559 --> 00:21:30,820
form of continuous integration here your

00:21:28,460 --> 00:21:33,080
domain is constantly going to evolve

00:21:30,820 --> 00:21:35,480
it's going to change it's going to shift

00:21:33,080 --> 00:21:37,610
as you move into slightly different

00:21:35,480 --> 00:21:38,900
spheres of influence what was right

00:21:37,610 --> 00:21:41,960
isn't going to be right anymore

00:21:38,900 --> 00:21:44,120
we need to maintain discussion we need

00:21:41,960 --> 00:21:46,370
to maintain take that step back and

00:21:44,120 --> 00:21:49,220
don't just furiously call it let's take

00:21:46,370 --> 00:21:50,630
a step back and see is this changing

00:21:49,220 --> 00:21:53,929
anything that we used to take for

00:21:50,630 --> 00:21:56,679
granted testing strategies will help

00:21:53,929 --> 00:21:59,870
flag changes to this if you are using

00:21:56,679 --> 00:22:03,080
for example PHP spec to build your

00:21:59,870 --> 00:22:05,990
domain and you have it making a certain

00:22:03,080 --> 00:22:07,309
set of expectations and some day changes

00:22:05,990 --> 00:22:08,720
that domain your tests are going to

00:22:07,309 --> 00:22:11,240
break and that's a good point where you

00:22:08,720 --> 00:22:13,130
can look at it and go oh do we want to

00:22:11,240 --> 00:22:14,540
change these break these tests at this

00:22:13,130 --> 00:22:17,929
point is this a change we want to make

00:22:14,540 --> 00:22:20,600
or is this an accidental change but

00:22:17,929 --> 00:22:22,970
mainly merits code quickly and often if

00:22:20,600 --> 00:22:26,390
you have two teams running off in

00:22:22,970 --> 00:22:28,160
different directions rating cords the

00:22:26,390 --> 00:22:30,559
domain is going to chef they're going to

00:22:28,160 --> 00:22:32,929
make certain changes it may be subtle it

00:22:30,559 --> 00:22:34,850
may be big but if you come six months

00:22:32,929 --> 00:22:36,950
later and try to merge that code back in

00:22:34,850 --> 00:22:38,840
when two teams have started going in

00:22:36,950 --> 00:22:41,960
that direction it's going to be hard

00:22:38,840 --> 00:22:49,100
she'd always like to keep changes small

00:22:41,960 --> 00:22:51,050
iterative merits quickly merge often so

00:22:49,100 --> 00:22:53,120
these are just a few tips that I've had

00:22:51,050 --> 00:22:55,900
from the successful application of DDD

00:22:53,120 --> 00:22:57,650
with the projects I've worked on so

00:22:55,900 --> 00:23:01,790
crucially build models as a

00:22:57,650 --> 00:23:03,530
collaboration this isn't just product or

00:23:01,790 --> 00:23:05,630
a product manager business analyst comes

00:23:03,530 --> 00:23:07,130
to you and says I want this go and do it

00:23:05,630 --> 00:23:10,280
this is a collaborative process between

00:23:07,130 --> 00:23:12,950
both teams to work out how to approach

00:23:10,280 --> 00:23:15,200
this the domain experts know how it

00:23:12,950 --> 00:23:17,510
works in the real world you know how it

00:23:15,200 --> 00:23:18,630
works in the software world come

00:23:17,510 --> 00:23:21,150
together what

00:23:18,630 --> 00:23:22,470
the best way to meet that work so that

00:23:21,150 --> 00:23:25,710
we can apply the principles we've just

00:23:22,470 --> 00:23:27,690
spoken about build your application

00:23:25,710 --> 00:23:29,520
iterative Li small chunks we don't need

00:23:27,690 --> 00:23:30,960
to solve this problem again Marcello

00:23:29,520 --> 00:23:33,930
spoke over this last night big design up

00:23:30,960 --> 00:23:35,520
front except you'd have been more

00:23:33,930 --> 00:23:38,150
evolved and changed you don't have to

00:23:35,520 --> 00:23:41,160
get this absolutely spot-on first time

00:23:38,150 --> 00:23:43,470
have complete access to domain expert

00:23:41,160 --> 00:23:47,760
this is one of the most key things that

00:23:43,470 --> 00:23:49,500
I found in successful projects is when

00:23:47,760 --> 00:23:53,670
somebody who's invested in a delivery of

00:23:49,500 --> 00:23:56,340
the project is available 90 95 percent

00:23:53,670 --> 00:23:58,140
of the time it's easy because you can

00:23:56,340 --> 00:24:00,000
ask them questions did you mean this is

00:23:58,140 --> 00:24:02,070
that's what you want I'm not sure what

00:24:00,000 --> 00:24:04,890
this means can you clarify it for me if

00:24:02,070 --> 00:24:06,510
you don't have that you're guessing if

00:24:04,890 --> 00:24:08,820
you're guessing like I said before

00:24:06,510 --> 00:24:13,110
you're not the domain expert and you're

00:24:08,820 --> 00:24:14,730
going to probably guess wrong and I

00:24:13,110 --> 00:24:15,650
think Marcel is gonna kick my ass for

00:24:14,730 --> 00:24:20,790
this one

00:24:15,650 --> 00:24:22,260
test test test if you can so what Marcel

00:24:20,790 --> 00:24:24,900
spoke about yesterday is what you're not

00:24:22,260 --> 00:24:27,720
you're not testing your specking and I

00:24:24,900 --> 00:24:29,130
do agree with that but the output of

00:24:27,720 --> 00:24:31,890
speaking is that you have a test suite

00:24:29,130 --> 00:24:32,430
if you can rate these tests upfront as

00:24:31,890 --> 00:24:34,740
you go along

00:24:32,430 --> 00:24:38,100
they'll be brilliant because like we

00:24:34,740 --> 00:24:40,650
just said if you have a breaking change

00:24:38,100 --> 00:24:43,350
and it is reflected in a test that

00:24:40,650 --> 00:24:46,260
breaks then that will be flagged up very

00:24:43,350 --> 00:24:47,670
quickly and you can see that we mean to

00:24:46,260 --> 00:24:50,040
do this do we want to change the

00:24:47,670 --> 00:24:54,810
behavior of this domain or is that

00:24:50,040 --> 00:24:56,520
accidental so if you take nothing else

00:24:54,810 --> 00:24:59,940
from this talk if there's only one tip

00:24:56,520 --> 00:25:06,360
you take please let it be that talk with

00:24:59,940 --> 00:25:09,210
each other so why are we not all doing

00:25:06,360 --> 00:25:13,110
this why do we don't all just well it's

00:25:09,210 --> 00:25:15,480
the future I use the word downside here

00:25:13,110 --> 00:25:18,930
I don't necessarily believe that is true

00:25:15,480 --> 00:25:20,430
that's why I use ish but there is no

00:25:18,930 --> 00:25:23,400
doubt it's time consuming especially

00:25:20,430 --> 00:25:25,230
initially to set this up to start

00:25:23,400 --> 00:25:27,000
changing your mentality to start

00:25:25,230 --> 00:25:29,010
changing your thinking to put the

00:25:27,000 --> 00:25:31,560
infrastructure in place to start putting

00:25:29,010 --> 00:25:32,010
testing mechanisms in place up front to

00:25:31,560 --> 00:25:35,010
stop

00:25:32,010 --> 00:25:37,230
ting enhance discussions there it's

00:25:35,010 --> 00:25:39,120
time-consuming but you notice a star

00:25:37,230 --> 00:25:41,750
they are it's time-consuming initially

00:25:39,120 --> 00:25:45,050
but that's pays itself back manifold

00:25:41,750 --> 00:25:47,370
towards the middle and end of a project

00:25:45,050 --> 00:25:49,260
it can be confusing if you don't

00:25:47,370 --> 00:25:51,240
understand it I mean we just spoke about

00:25:49,260 --> 00:25:53,700
orders versus reorder this is forward

00:25:51,240 --> 00:25:55,320
orders if a new developer comes into the

00:25:53,700 --> 00:25:57,060
system you know you've got your language

00:25:55,320 --> 00:25:58,470
you've got your way of speaking they're

00:25:57,060 --> 00:26:00,000
not going to understand that necessarily

00:25:58,470 --> 00:26:01,980
at first you have to take the time to

00:26:00,000 --> 00:26:04,110
educate them to bring them up to speed

00:26:01,980 --> 00:26:04,590
so they understand what you're talking

00:26:04,110 --> 00:26:08,400
about

00:26:04,590 --> 00:26:12,060
and there is an overhead and maintaining

00:26:08,400 --> 00:26:13,620
constant dialogue a lot of your managers

00:26:12,060 --> 00:26:16,290
your bosses will think okay you're

00:26:13,620 --> 00:26:18,210
developer you sit there for eight hours

00:26:16,290 --> 00:26:20,070
a day hit down called away if you're

00:26:18,210 --> 00:26:22,890
having if you're having discussions

00:26:20,070 --> 00:26:25,380
you're not delivering anything again to

00:26:22,890 --> 00:26:28,860
me that's not a down sight I can see why

00:26:25,380 --> 00:26:30,210
it could be perceived as but having that

00:26:28,860 --> 00:26:38,600
discussion means you're more likely to

00:26:30,210 --> 00:26:41,610
get a right first time so we have no

00:26:38,600 --> 00:26:43,830
evolved our code from the first

00:26:41,610 --> 00:26:46,530
iteration we've got it now nicely cut

00:26:43,830 --> 00:26:51,090
off into a demean so I'm going to talk a

00:26:46,530 --> 00:26:52,410
little bit about geometry so what are we

00:26:51,090 --> 00:26:55,350
trying to achieve with hexagonal

00:26:52,410 --> 00:26:57,870
architecture was a quote there from also

00:26:55,350 --> 00:26:59,910
Cockburn who is kind of the authority on

00:26:57,870 --> 00:27:02,070
this if you've not read his blog then

00:26:59,910 --> 00:27:03,990
it's it's the first one that comes up

00:27:02,070 --> 00:27:07,350
when you take a hexagonal architecture

00:27:03,990 --> 00:27:08,850
and it's well worth the read he says

00:27:07,350 --> 00:27:10,890
although an application to be equally

00:27:08,850 --> 00:27:13,080
driven by users programs automated tests

00:27:10,890 --> 00:27:14,850
or batch scripts and to be developed and

00:27:13,080 --> 00:27:18,710
tested in isolation from its eventual

00:27:14,850 --> 00:27:21,930
runtime devices and databases obviously

00:27:18,710 --> 00:27:24,780
what does that actually mean it means

00:27:21,930 --> 00:27:27,000
that if you split your domain well

00:27:24,780 --> 00:27:28,560
enough then there's going to be many

00:27:27,000 --> 00:27:31,440
things in the outside world that want to

00:27:28,560 --> 00:27:32,970
interact with it you're going to want to

00:27:31,440 --> 00:27:35,490
retrieve data from multiple sources

00:27:32,970 --> 00:27:37,620
perhaps you have an XML reader you have

00:27:35,490 --> 00:27:41,850
an HTML front-end you have an API and

00:27:37,620 --> 00:27:44,280
you may be to open data to multiple

00:27:41,850 --> 00:27:45,230
sources you could be using you

00:27:44,280 --> 00:27:48,380
could be using read

00:27:45,230 --> 00:27:50,000
you could be using MySQL doesn't matter

00:27:48,380 --> 00:27:52,610
and sage you to mean you to mean does

00:27:50,000 --> 00:27:54,950
not care your domain cares about it I

00:27:52,610 --> 00:28:02,270
have the subject and I want to persist

00:27:54,950 --> 00:28:04,160
it that's all I care about and this is

00:28:02,270 --> 00:28:06,799
the question that I anticipate it would

00:28:04,160 --> 00:28:08,690
come up most often than not the hexagon

00:28:06,799 --> 00:28:10,730
is not a hexagon because the number six

00:28:08,690 --> 00:28:13,030
is important it could be pentagonal

00:28:10,730 --> 00:28:16,370
architecture octagonal architecture

00:28:13,030 --> 00:28:17,809
dodecahedron agonal architecture but

00:28:16,370 --> 00:28:19,429
rather 200 people doing a drawing to

00:28:17,809 --> 00:28:21,770
have room to insert ports and adapters

00:28:19,429 --> 00:28:23,299
as they need not being constrained by

00:28:21,770 --> 00:28:25,580
one dimensional layout diagram so

00:28:23,299 --> 00:28:30,410
traditionally this would be viewed left

00:28:25,580 --> 00:28:32,330
to right top to bottom and the hexagon

00:28:30,410 --> 00:28:35,450
just gives a visual effect so this is

00:28:32,330 --> 00:28:40,160
another image that came from our circle

00:28:35,450 --> 00:28:42,380
burns blog you can see we speak

00:28:40,160 --> 00:28:45,309
traditionally and again to reference

00:28:42,380 --> 00:28:47,660
Marcello's talk yesterday he spoke about

00:28:45,309 --> 00:28:51,679
abstractions deal with abstractions and

00:28:47,660 --> 00:28:53,809
push the concretions down in a way and

00:28:51,679 --> 00:28:56,270
if you were out that you remember that

00:28:53,809 --> 00:28:58,700
slate top left push the concretions

00:28:56,270 --> 00:29:01,309
donor away what I'm saying is basically

00:28:58,700 --> 00:29:02,770
the same thing but I'm saying push them

00:29:01,309 --> 00:29:05,240
out in a week

00:29:02,770 --> 00:29:06,919
your application he uses what

00:29:05,240 --> 00:29:09,440
application here this is what we've just

00:29:06,919 --> 00:29:12,440
described as a domain sets in the middle

00:29:09,440 --> 00:29:20,600
here and push the concretions outside of

00:29:12,440 --> 00:29:23,690
it so let's look back at our club we're

00:29:20,600 --> 00:29:27,440
extending the war em in the club here

00:29:23,690 --> 00:29:31,210
this is a the way that Kohana uses ORM

00:29:27,440 --> 00:29:31,210
took a few essentially active records

00:29:32,049 --> 00:29:40,640
what this means and I apologize for this

00:29:36,740 --> 00:29:42,020
diagram I had a friend that helped me

00:29:40,640 --> 00:29:43,429
write most of the sites so they look

00:29:42,020 --> 00:29:44,720
generally quite nice because he's good

00:29:43,429 --> 00:29:47,919
at that kind of thing I had to do this

00:29:44,720 --> 00:29:47,919
myself at kind of shores

00:29:48,940 --> 00:29:55,220
but the principle of the thing is we

00:29:53,000 --> 00:30:00,080
want all the dependency arrows to flow

00:29:55,220 --> 00:30:02,630
inwards and just actually one thing that

00:30:00,080 --> 00:30:05,480
may be slow confusing you'll notice here

00:30:02,630 --> 00:30:08,770
there's two hexagons and your sis here

00:30:05,480 --> 00:30:12,680
those two hexagons my outer hexagon here

00:30:08,770 --> 00:30:16,310
represents his in our hexagon just to

00:30:12,680 --> 00:30:18,440
confuse you even more obviously this

00:30:16,310 --> 00:30:20,810
isn't necessarily something that you

00:30:18,440 --> 00:30:22,910
would need to do or want to do I just

00:30:20,810 --> 00:30:26,330
prefer to do it that way I like to split

00:30:22,910 --> 00:30:28,730
the domain models inside and put the

00:30:26,330 --> 00:30:31,340
services wrapped around that and then

00:30:28,730 --> 00:30:33,650
put the application layer around about

00:30:31,340 --> 00:30:36,710
that and that's the outer hexagon that

00:30:33,650 --> 00:30:38,570
alistair cockburn talks about so you see

00:30:36,710 --> 00:30:40,160
we've got our controllers coming in

00:30:38,570 --> 00:30:42,080
through the managers through our

00:30:40,160 --> 00:30:47,000
services the services bring come in

00:30:42,080 --> 00:30:49,370
towards our models everything's great so

00:30:47,000 --> 00:30:51,440
far that's what we want to see but the

00:30:49,370 --> 00:30:53,840
red arrows they're they're coming back

00:30:51,440 --> 00:30:55,520
here no those Kahana no lives within our

00:30:53,840 --> 00:30:57,950
domain and is important within our

00:30:55,520 --> 00:31:03,200
domain and we don't want that to be the

00:30:57,950 --> 00:31:06,200
case so I talked about ports if you are

00:31:03,200 --> 00:31:08,240
noticed on the first slide and when I

00:31:06,200 --> 00:31:10,610
mentioned hexagonal architecture also

00:31:08,240 --> 00:31:13,180
said ports and adapters portion adapters

00:31:10,610 --> 00:31:15,470
is just a different term for that

00:31:13,180 --> 00:31:17,900
supports are the gateways into your

00:31:15,470 --> 00:31:23,050
domain they define the purpose of the

00:31:17,900 --> 00:31:25,010
conversation so like I mentioned before

00:31:23,050 --> 00:31:28,010
you know you want to store data

00:31:25,010 --> 00:31:30,320
somewhere but your domain doesn't care

00:31:28,010 --> 00:31:34,100
where so if we have another quick look

00:31:30,320 --> 00:31:36,260
at this diagram here the lines the the

00:31:34,100 --> 00:31:38,840
bold lines where it says database

00:31:36,260 --> 00:31:40,790
notifications where it says user data

00:31:38,840 --> 00:31:45,230
where it says administration these are

00:31:40,790 --> 00:31:46,850
the ports in our application here or

00:31:45,230 --> 00:31:50,740
sorry that's confusing because he use

00:31:46,850 --> 00:31:55,520
the application and our system here and

00:31:50,740 --> 00:31:56,660
what the ports are for is to say ok you

00:31:55,520 --> 00:31:58,790
can save data

00:31:56,660 --> 00:32:00,280
I'm the database pork and I will give

00:31:58,790 --> 00:32:03,340
you the contract of how

00:32:00,280 --> 00:32:06,820
to save data but how you then use that

00:32:03,340 --> 00:32:09,880
as up to you so let's illustrate that

00:32:06,820 --> 00:32:12,430
with a little bit of cord so I've got my

00:32:09,880 --> 00:32:16,800
club now and what I'm building is a club

00:32:12,430 --> 00:32:20,290
repository the club repository is this

00:32:16,800 --> 00:32:25,240
contract now it says if you want to

00:32:20,290 --> 00:32:28,000
persist a club then you have to adhere

00:32:25,240 --> 00:32:30,730
to the rules applied by this port you

00:32:28,000 --> 00:32:33,610
can save a club and you can find a

00:32:30,730 --> 00:32:37,420
single club by his ID that's all you can

00:32:33,610 --> 00:32:39,580
do I don't care how you do it I don't

00:32:37,420 --> 00:32:44,800
care where you put it but that's the two

00:32:39,580 --> 00:32:49,270
things you can do I know we look at our

00:32:44,800 --> 00:32:50,980
club so we are no longer using kahan ORM

00:32:49,270 --> 00:32:55,110
so we need to build in a constructor no

00:32:50,980 --> 00:32:57,430
which came for free previously but

00:32:55,110 --> 00:33:00,190
nothing much more has changed we still

00:32:57,430 --> 00:33:02,350
got our simple club I've started

00:33:00,190 --> 00:33:03,700
namespacing a little bit here and just

00:33:02,350 --> 00:33:07,150
to help the illustration but it's not

00:33:03,700 --> 00:33:08,740
overly important for this example but

00:33:07,150 --> 00:33:11,770
the important point as we know get a

00:33:08,740 --> 00:33:13,240
constructor we build our club but a club

00:33:11,770 --> 00:33:15,730
doesn't know how to save itself

00:33:13,240 --> 00:33:17,200
I missed a chord I wanted to be another

00:33:15,730 --> 00:33:21,420
slate in here that I forgot to put in I

00:33:17,200 --> 00:33:26,230
apologize our constructor sorry

00:33:21,420 --> 00:33:30,190
originally our I'm not going to go back

00:33:26,230 --> 00:33:31,810
to it and we were calling Club save the

00:33:30,190 --> 00:33:35,380
club new hope to save itself and a

00:33:31,810 --> 00:33:37,000
scheme from the ORM and that was short

00:33:35,380 --> 00:33:39,610
the arrow flowing back outwards the club

00:33:37,000 --> 00:33:41,350
knew about application logic no we don't

00:33:39,610 --> 00:33:45,000
have that no he passed the club into the

00:33:41,350 --> 00:33:45,000
repository then knows how to save itself

00:33:46,590 --> 00:33:54,490
so we've got reports so the second part

00:33:49,660 --> 00:33:56,890
of this contract is adapters adapters

00:33:54,490 --> 00:34:01,240
are built on top of the ports and they

00:33:56,890 --> 00:34:04,090
provide functionality concretely and you

00:34:01,240 --> 00:34:09,480
can have multiple adapters probably will

00:34:04,090 --> 00:34:12,530
have multiple adapters so for example

00:34:09,480 --> 00:34:14,389
here's a very specific adapter

00:34:12,530 --> 00:34:16,129
we implement the club repository we're

00:34:14,389 --> 00:34:20,179
using the ports we're using that set of

00:34:16,129 --> 00:34:21,740
rules we've defined and through space

00:34:20,179 --> 00:34:24,379
obviously I've commented out but that

00:34:21,740 --> 00:34:26,780
would be some SQL that would save a club

00:34:24,379 --> 00:34:36,350
some SQL to find the club and return it

00:34:26,780 --> 00:34:38,870
I want to save it mangal same poor seem

00:34:36,350 --> 00:34:42,200
simplistic I can see that I can find it

00:34:38,870 --> 00:34:47,149
and that's your your manga language to

00:34:42,200 --> 00:34:49,639
deceive those to find one by ID I'm so a

00:34:47,149 --> 00:34:53,090
major advantage of this says you wanted

00:34:49,639 --> 00:34:55,250
to swap your storage mechanism for from

00:34:53,090 --> 00:34:58,430
MySQL to for some reason that's

00:34:55,250 --> 00:35:01,100
how easy it is that slightly trivializes

00:34:58,430 --> 00:35:04,390
it obviously but your domain doesn't

00:35:01,100 --> 00:35:06,770
care your domain doesn't change no

00:35:04,390 --> 00:35:08,840
behavior has changed at all

00:35:06,770 --> 00:35:11,780
in your domain you just build another

00:35:08,840 --> 00:35:17,540
adapter configure it to use that adapter

00:35:11,780 --> 00:35:19,400
now and you know using so we've

00:35:17,540 --> 00:35:24,740
got a filesystem club repository this is

00:35:19,400 --> 00:35:26,750
how we test we build we use B hat and we

00:35:24,740 --> 00:35:29,000
use filesystem so when we configure when

00:35:26,750 --> 00:35:30,770
B hat spins up instead of configuring

00:35:29,000 --> 00:35:34,520
the MySQL adapter it configures the

00:35:30,770 --> 00:35:35,660
filesystem adapter it's quicker we don't

00:35:34,520 --> 00:35:37,550
need to clear the database when we're

00:35:35,660 --> 00:35:39,740
running our tests we we've just got an

00:35:37,550 --> 00:35:42,020
adapter same contract we're still using

00:35:39,740 --> 00:35:48,410
the club repository we're still get just

00:35:42,020 --> 00:35:50,870
our two simple methods and now we go

00:35:48,410 --> 00:35:52,880
back to the controller here so where I

00:35:50,870 --> 00:35:55,370
did have as I just mentioned that save

00:35:52,880 --> 00:35:58,340
function no we're passing the club into

00:35:55,370 --> 00:36:04,760
the club repository I'm receiving it

00:35:58,340 --> 00:36:06,470
that way we've defined our contract so

00:36:04,760 --> 00:36:09,260
now we look a little bit like this in

00:36:06,470 --> 00:36:11,510
the hexagon so these two repositories

00:36:09,260 --> 00:36:14,150
the club repository and a tee-time

00:36:11,510 --> 00:36:15,800
repository or no the ports into our

00:36:14,150 --> 00:36:17,990
system anything that wants to save

00:36:15,800 --> 00:36:20,300
anything into a data storage has to come

00:36:17,990 --> 00:36:22,820
through these repositories and you'll

00:36:20,300 --> 00:36:24,520
notice that we've got a Redis one and a

00:36:22,820 --> 00:36:25,780
MySQL one coming through the

00:36:24,520 --> 00:36:27,940
depending on how we configure it

00:36:25,780 --> 00:36:33,670
depending on what we're running at any

00:36:27,940 --> 00:36:36,520
given time but you see the red line here

00:36:33,670 --> 00:36:39,369
the create Club controller is still

00:36:36,520 --> 00:36:41,650
going directly into our domain it still

00:36:39,369 --> 00:36:43,810
knows how to manipulate if you go back a

00:36:41,650 --> 00:36:51,160
slide here we're still creating a new

00:36:43,810 --> 00:36:56,500
club directly we need a portobello sate

00:36:51,160 --> 00:36:58,510
here so we've got a club Porter

00:36:56,500 --> 00:37:01,300
I used the word Porter because it's to

00:36:58,510 --> 00:37:03,220
do with the import and export of data in

00:37:01,300 --> 00:37:06,930
a notice system this is the UI so it's

00:37:03,220 --> 00:37:09,850
portation and supporter we've defined to

00:37:06,930 --> 00:37:11,890
two rules you can either import a club

00:37:09,850 --> 00:37:13,450
with mixed data depending on where it's

00:37:11,890 --> 00:37:15,760
coming from or you can export a club

00:37:13,450 --> 00:37:19,380
which sends a club which takes a club

00:37:15,760 --> 00:37:22,420
and exports mixed data so let's see

00:37:19,380 --> 00:37:25,290
concrete realization of that we've got a

00:37:22,420 --> 00:37:28,740
request club Porter takes in a request

00:37:25,290 --> 00:37:31,480
Belle's our club from the information

00:37:28,740 --> 00:37:34,060
and we can export a club by taking the

00:37:31,480 --> 00:37:36,250
club putting the data into the response

00:37:34,060 --> 00:37:38,680
and returning that as I said before the

00:37:36,250 --> 00:37:40,810
some of the code examples are pseudocode

00:37:38,680 --> 00:37:45,550
just for illustration rather than real

00:37:40,810 --> 00:37:49,000
genuine code but the advantage we have

00:37:45,550 --> 00:37:50,560
here is that same thing we don't want to

00:37:49,000 --> 00:37:53,080
take any requests anymore we want to

00:37:50,560 --> 00:37:58,540
take in Jason we want to take in HTML we

00:37:53,080 --> 00:38:01,750
want to take in XML so let's go back to

00:37:58,540 --> 00:38:06,609
our controller now all of a sudden I've

00:38:01,750 --> 00:38:09,100
got a one-lane controller data comes in

00:38:06,609 --> 00:38:13,660
through the porter data gets saved

00:38:09,100 --> 00:38:15,580
through the repository the mean doesn't

00:38:13,660 --> 00:38:18,720
care where it's coming from the mean

00:38:15,580 --> 00:38:18,720
doesn't care where it's going to

00:38:19,840 --> 00:38:26,200
so this gives us expands the diagram a

00:38:23,560 --> 00:38:31,210
little bit here and now we can see the

00:38:26,200 --> 00:38:33,100
flow of our O's is all coming in the the

00:38:31,210 --> 00:38:34,630
users the club's the models they don't

00:38:33,100 --> 00:38:35,980
care where the data is coming from they

00:38:34,630 --> 00:38:38,620
don't care how they're made they don't

00:38:35,980 --> 00:38:39,970
care anything the services don't care

00:38:38,620 --> 00:38:43,600
where the data comes from they know what

00:38:39,970 --> 00:38:45,840
they have to do and the concrete

00:38:43,600 --> 00:38:52,030
implementations are based on

00:38:45,840 --> 00:38:55,210
configuration so what sort of ports

00:38:52,030 --> 00:38:56,440
should there be traditionally in a web

00:38:55,210 --> 00:38:59,380
application you're not going to need

00:38:56,440 --> 00:39:02,260
that many alistair cockburn when he

00:38:59,380 --> 00:39:05,350
originally wrote his slates he was

00:39:02,260 --> 00:39:07,360
dealing in enterprise software beg beg

00:39:05,350 --> 00:39:10,660
beg him auth systems and he said he'd

00:39:07,360 --> 00:39:12,400
never seen more than four traditionally

00:39:10,660 --> 00:39:15,220
as a C in a web app you're not going to

00:39:12,400 --> 00:39:18,070
see much more than a couple data comes

00:39:15,220 --> 00:39:21,280
in your notes to screen to UI data gets

00:39:18,070 --> 00:39:23,620
persisted into a database you could

00:39:21,280 --> 00:39:25,650
maybe have logging ports notification

00:39:23,620 --> 00:39:30,670
ports if you needed that

00:39:25,650 --> 00:39:32,140
but the hexagon as I see is not you

00:39:30,670 --> 00:39:33,910
don't need to have six ports that aren't

00:39:32,140 --> 00:39:41,800
six defined ports it's just an

00:39:33,910 --> 00:39:44,280
illustration of a number of ports thank

00:39:41,800 --> 00:39:44,280
you for your time

00:39:53,770 --> 00:39:57,950
legacy if if you do have any further

00:39:56,360 --> 00:39:59,600
questions on this and you don't want to

00:39:57,950 --> 00:40:01,520
try and contact me and you don't get a

00:39:59,600 --> 00:40:05,120
chance to see me today then please feel

00:40:01,520 --> 00:40:09,080
free to contact me through those places

00:40:05,120 --> 00:40:12,520
and that's a reference to the book that

00:40:09,080 --> 00:40:16,400
Eric Evans wrote the second link is our

00:40:12,520 --> 00:40:18,350
it's a PDF that summarizes the book I

00:40:16,400 --> 00:40:21,560
built a lot of the first part of the

00:40:18,350 --> 00:40:23,630
talk on that and that's also called

00:40:21,560 --> 00:40:28,610
Barnes blog on hexagonal architecture is

00:40:23,630 --> 00:40:46,250
worth reading as well yes there's any

00:40:28,610 --> 00:40:50,720
questions ok so am I going first garden

00:40:46,250 --> 00:40:53,900
why would you suggest for a team so if

00:40:50,720 --> 00:40:55,640
you're team leading a team and some of

00:40:53,900 --> 00:40:58,580
the people in the team still not up to

00:40:55,640 --> 00:41:00,800
speed with DDT how do you recommend team

00:40:58,580 --> 00:41:03,650
Lee to kind of bring them up to speed

00:41:00,800 --> 00:41:06,080
what what kind of things did you well

00:41:03,650 --> 00:41:07,520
the main thing I would suggest did every

00:41:06,080 --> 00:41:10,490
here the question ok it's how to

00:41:07,520 --> 00:41:14,000
introduce new team members to TDD or to

00:41:10,490 --> 00:41:15,560
DDD the main thing is as I say like the

00:41:14,000 --> 00:41:20,150
main point I put across its

00:41:15,560 --> 00:41:21,410
communication take the time the domain

00:41:20,150 --> 00:41:22,700
language you use is going to become

00:41:21,410 --> 00:41:24,140
second nature to you you're going to

00:41:22,700 --> 00:41:28,130
refer to things without thinking about

00:41:24,140 --> 00:41:31,460
it so it just is a slow process you have

00:41:28,130 --> 00:41:33,080
to go through with them you have to make

00:41:31,460 --> 00:41:35,660
sure they're involved in a lot of

00:41:33,080 --> 00:41:37,850
meetings with you so don't split out the

00:41:35,660 --> 00:41:39,130
meetings and - well these two guys know

00:41:37,850 --> 00:41:41,300
about this so they're going to set and

00:41:39,130 --> 00:41:42,560
have this discussion and nobody else is

00:41:41,300 --> 00:41:44,570
going to know trying to involve as many

00:41:42,560 --> 00:41:46,010
people as you can in those discussions

00:41:44,570 --> 00:41:47,390
when you're talking about the mean

00:41:46,010 --> 00:41:49,550
objects when you're talking about models

00:41:47,390 --> 00:41:51,680
when you're talking about behaviors or

00:41:49,550 --> 00:41:54,080
the domain so that it becomes second

00:41:51,680 --> 00:41:56,540
nature to people over time that they'll

00:41:54,080 --> 00:41:58,340
start picking it up in terms of the

00:41:56,540 --> 00:42:00,070
techniques you can use certain things

00:41:58,340 --> 00:42:03,350
you can use pairing with more senior

00:42:00,070 --> 00:42:04,540
developers who do understand it code

00:42:03,350 --> 00:42:07,600
reviews

00:42:04,540 --> 00:42:09,340
helping pick outs maybe places they've

00:42:07,600 --> 00:42:11,620
gone wrong set with them help them

00:42:09,340 --> 00:42:13,780
understand okay I see what you were

00:42:11,620 --> 00:42:15,280
trying to do there but maybe you know we

00:42:13,780 --> 00:42:18,430
try to approach a problem less we help

00:42:15,280 --> 00:42:21,870
them understand why to do that but it's

00:42:18,430 --> 00:42:25,540
just continuously working with them and

00:42:21,870 --> 00:42:27,520
investing that time like I said there is

00:42:25,540 --> 00:42:29,920
some overheads and this is an overhead

00:42:27,520 --> 00:42:32,470
that's worth the investor time team lead

00:42:29,920 --> 00:42:33,760
may have to take a cut in how much they

00:42:32,470 --> 00:42:34,990
can actually deliver during that they're

00:42:33,760 --> 00:42:37,600
maybe not doing so much programming

00:42:34,990 --> 00:42:39,940
during that time but if they invest the

00:42:37,600 --> 00:42:46,690
time then the team as a whole grows

00:42:39,940 --> 00:42:54,460
through that is that hi could you come

00:42:46,690 --> 00:42:58,630
back to your exile this one here yeah my

00:42:54,460 --> 00:43:02,980
question is if you talk about your

00:42:58,630 --> 00:43:05,920
codomain so why the service is out of

00:43:02,980 --> 00:43:08,200
this domain of this course sorry they

00:43:05,920 --> 00:43:09,370
are not so that's what I spoke about

00:43:08,200 --> 00:43:12,730
when I said it's maybe slightly

00:43:09,370 --> 00:43:14,830
confusing between the two diagrams my

00:43:12,730 --> 00:43:17,920
core domain here is the outer hexagon

00:43:14,830 --> 00:43:21,040
and I split the inner hex are going to

00:43:17,920 --> 00:43:22,630
be the domain models but the Avatar

00:43:21,040 --> 00:43:26,830
hexagon is domain so the domain still

00:43:22,630 --> 00:43:29,620
contains the services but if you you

00:43:26,830 --> 00:43:34,750
could go to the controller please one

00:43:29,620 --> 00:43:39,220
second sorry yeah yeah you're calling

00:43:34,750 --> 00:43:41,710
here direct to the repository and I

00:43:39,220 --> 00:43:44,260
don't know why you're doing this instead

00:43:41,710 --> 00:43:47,140
of calling from your service that it's

00:43:44,260 --> 00:43:49,140
from your domain I mean if you have the

00:43:47,140 --> 00:43:52,470
interface you only need the

00:43:49,140 --> 00:43:54,520
implementation in the controller yes

00:43:52,470 --> 00:43:56,020
absolutely right and this is a

00:43:54,520 --> 00:43:57,670
conversation I had about half an hour

00:43:56,020 --> 00:44:01,270
ago my cell phone yeah before I started

00:43:57,670 --> 00:44:04,740
myself you would perhaps want to so what

00:44:01,270 --> 00:44:09,100
I'm trying to illustrate mainly here is

00:44:04,740 --> 00:44:11,500
the the data comes in in our format it

00:44:09,100 --> 00:44:13,810
comes through our Porter which is

00:44:11,500 --> 00:44:15,670
defined by the port and it's know in

00:44:13,810 --> 00:44:17,900
your domain and it goes out through a

00:44:15,670 --> 00:44:20,640
repository

00:44:17,900 --> 00:44:23,759
we have specific one so that's the lair

00:44:20,640 --> 00:44:27,779
I'm trying to enhance to show here I'm

00:44:23,759 --> 00:44:30,269
using a controller as because where you

00:44:27,779 --> 00:44:32,009
will generally web developers here so we

00:44:30,269 --> 00:44:34,469
do use controllers but what you might

00:44:32,009 --> 00:44:36,839
want to do is abstract that knowledge

00:44:34,469 --> 00:44:41,549
into the domain as well have a service

00:44:36,839 --> 00:44:44,460
that deals with converting the data from

00:44:41,549 --> 00:44:46,890
the controller into the format that your

00:44:44,460 --> 00:44:49,769
concrete adapter would then using the

00:44:46,890 --> 00:44:51,749
domain in that model so yes perhaps

00:44:49,769 --> 00:44:53,849
that's maybe not clear and the other

00:44:51,749 --> 00:44:55,650
thing that to follow up on the point you

00:44:53,849 --> 00:44:59,460
just mentioned there that I was thinking

00:44:55,650 --> 00:45:00,809
is that the controller here points at

00:44:59,460 --> 00:45:02,549
the Porter but if you has a look at the

00:45:00,809 --> 00:45:05,609
code also comes around the other side

00:45:02,549 --> 00:45:07,619
and points at the repository as well so

00:45:05,609 --> 00:45:10,200
the controller itself doesn't quite fit

00:45:07,619 --> 00:45:12,930
this model I tried to draw in here just

00:45:10,200 --> 00:45:15,509
for illustration that it's there what

00:45:12,930 --> 00:45:18,299
you would maybe want to do is have

00:45:15,509 --> 00:45:20,819
another service like you see inside it I

00:45:18,299 --> 00:45:22,200
mean that that takes that converts the

00:45:20,819 --> 00:45:25,640
data through the controller we would use

00:45:22,200 --> 00:45:31,529
a parameter for example to do that and

00:45:25,640 --> 00:45:35,460
use that that process does that make

00:45:31,529 --> 00:45:37,410
sense yeah you can forward with the

00:45:35,460 --> 00:45:39,119
controller doesn't quite fit the model I

00:45:37,410 --> 00:45:40,170
agree with what you're saying we are the

00:45:39,119 --> 00:45:42,509
important part I was trying to

00:45:40,170 --> 00:45:46,079
illustrate was data is coming in in one

00:45:42,509 --> 00:45:49,369
format you use a concrete implementation

00:45:46,079 --> 00:45:52,460
of a ports to get it into your dummy

00:45:49,369 --> 00:45:52,460
thank you

00:46:02,660 --> 00:46:13,819
I am thanks of a talk I was wondering I

00:46:12,230 --> 00:46:16,309
work in a large organization with

00:46:13,819 --> 00:46:18,319
different teams in you know in different

00:46:16,309 --> 00:46:20,450
countries for example so the bounded

00:46:18,319 --> 00:46:22,759
context stuff is quite interesting have

00:46:20,450 --> 00:46:24,019
you got any advice on on how that scales

00:46:22,759 --> 00:46:28,430
and what are the artifacts and

00:46:24,019 --> 00:46:30,829
agreements that you you end up with not

00:46:28,430 --> 00:46:33,670
great advice because I work in a

00:46:30,829 --> 00:46:35,839
start-up I work in a very small codebase

00:46:33,670 --> 00:46:38,750
how I would have approached or how I

00:46:35,839 --> 00:46:45,019
approached that within our system is

00:46:38,750 --> 00:46:47,390
through namespacing and so you split it

00:46:45,019 --> 00:46:50,809
out that way but it's not a problem to

00:46:47,390 --> 00:46:54,049
be honest that I've sold myself because

00:46:50,809 --> 00:46:55,430
generally speaking a lot of their core

00:46:54,049 --> 00:46:57,019
pieces I've worked with are quite small

00:46:55,430 --> 00:46:59,869
the earthquake contains and not as

00:46:57,019 --> 00:47:01,279
sprawling unfortunately so I don't have

00:46:59,869 --> 00:47:04,759
that much advice that I could give you

00:47:01,279 --> 00:47:06,559
there okay I have one other question and

00:47:04,759 --> 00:47:09,349
we've used a lot of terms like value

00:47:06,559 --> 00:47:11,960
objects models services and then

00:47:09,349 --> 00:47:14,660
overlapping that with standard MVC and

00:47:11,960 --> 00:47:17,569
web frameworks so could you give like a

00:47:14,660 --> 00:47:22,339
summary of how these things map or where

00:47:17,569 --> 00:47:24,369
they don't map well we are talking

00:47:22,339 --> 00:47:28,759
itself I think and to do it properly but

00:47:24,369 --> 00:47:32,930
like I said I'd start in terms of all

00:47:28,759 --> 00:47:34,819
and design most of us are relatively or

00:47:32,930 --> 00:47:39,440
fear with that you know your models map

00:47:34,819 --> 00:47:42,109
to your objects so the concepts do

00:47:39,440 --> 00:47:45,529
crossover in terms of MVC you're seeing

00:47:42,109 --> 00:47:48,109
we're so using a controller the model

00:47:45,529 --> 00:47:49,819
becomes the domain really you're working

00:47:48,109 --> 00:47:53,509
with the field I mean even if you don't

00:47:49,819 --> 00:47:55,670
using parts of it the view is is coming

00:47:53,509 --> 00:47:58,430
through the port so you are you're using

00:47:55,670 --> 00:48:01,329
your portal to export data you might

00:47:58,430 --> 00:48:04,670
have an HTML port or the ports to that

00:48:01,329 --> 00:48:07,039
you may use an API to export the

00:48:04,670 --> 00:48:09,140
information that our front-end can then

00:48:07,039 --> 00:48:12,590
consume

00:48:09,140 --> 00:48:14,720
so the V is almost irrelevant an NBC and

00:48:12,590 --> 00:48:18,350
with this hexagonal architecture you

00:48:14,720 --> 00:48:21,290
just you output your models in are we

00:48:18,350 --> 00:48:25,520
and how they're the front end would then

00:48:21,290 --> 00:48:27,620
consume that is up to it in terms of all

00:48:25,520 --> 00:48:29,750
I could see much of the much of the

00:48:27,620 --> 00:48:31,400
structure is the same you have objects

00:48:29,750 --> 00:48:33,230
that interact with each other the

00:48:31,400 --> 00:48:35,660
principles of keep your objects small

00:48:33,230 --> 00:48:37,580
still apply the principles of dealing

00:48:35,660 --> 00:48:40,330
with abstractions and calculation they

00:48:37,580 --> 00:48:42,830
all still apply so there's nothing

00:48:40,330 --> 00:48:45,170
there's not a huge shift in mentality

00:48:42,830 --> 00:48:48,980
required to start thinking in terms of

00:48:45,170 --> 00:48:50,540
ddd the biggest shift is the

00:48:48,980 --> 00:48:54,710
conversational aspect of it and

00:48:50,540 --> 00:48:56,840
understanding that there are people were

00:48:54,710 --> 00:48:59,240
employed in your organization who do

00:48:56,840 --> 00:49:00,340
know the domain better than you so let

00:48:59,240 --> 00:49:03,110
them help you

00:49:00,340 --> 00:49:05,600
for example them you know in your

00:49:03,110 --> 00:49:07,460
diagram which ones are the services

00:49:05,600 --> 00:49:10,340
which ones are the entities wherever

00:49:07,460 --> 00:49:12,320
models in what I've tried to do with

00:49:10,340 --> 00:49:18,020
this diagram if you can bring it back up

00:49:12,320 --> 00:49:20,660
onto the screen please is the color code

00:49:18,020 --> 00:49:23,360
here so the inner hexagons are my models

00:49:20,660 --> 00:49:25,310
those are the simple objects as Club

00:49:23,360 --> 00:49:26,660
there's course they can interact with

00:49:25,310 --> 00:49:31,010
each other the club knows about the

00:49:26,660 --> 00:49:33,140
course the second layer color-coded in

00:49:31,010 --> 00:49:35,300
green these are our services that

00:49:33,140 --> 00:49:36,800
interact directly with our models but

00:49:35,300 --> 00:49:39,110
you notice our models don't interact

00:49:36,800 --> 00:49:41,000
backwards with the services and then

00:49:39,110 --> 00:49:44,210
external to the hexagons so let's go

00:49:41,000 --> 00:49:49,750
into our application layer start dealing

00:49:44,210 --> 00:49:53,780
with the services themselves thank you

00:49:49,750 --> 00:49:57,880
hi there great tool I'm interested when

00:49:53,780 --> 00:50:00,350
you're talking about the naming and say

00:49:57,880 --> 00:50:02,810
later down the line the domain experts

00:50:00,350 --> 00:50:04,970
realize they've made a mistake and a

00:50:02,810 --> 00:50:08,810
user should be called a player would you

00:50:04,970 --> 00:50:13,430
go to the extent of renaming other users

00:50:08,810 --> 00:50:15,950
in the code to players ideally yes I

00:50:13,430 --> 00:50:18,560
would but there has to be a time and

00:50:15,950 --> 00:50:21,800
place for it

00:50:18,560 --> 00:50:24,770
I'm not generally a fan of refactoring

00:50:21,800 --> 00:50:26,810
for refactoring state stopping and you

00:50:24,770 --> 00:50:29,750
know just having what it was gonna do

00:50:26,810 --> 00:50:32,660
court no I do believe in always moving

00:50:29,750 --> 00:50:34,970
the business objective forward so at a

00:50:32,660 --> 00:50:38,090
point where it made sense to do that I

00:50:34,970 --> 00:50:43,160
would but the short answer is yes I

00:50:38,090 --> 00:50:46,660
would advocate doing that one more about

00:50:43,160 --> 00:50:49,370
naming which seems to be very important

00:50:46,660 --> 00:50:51,740
if you're coming from a design pattern

00:50:49,370 --> 00:50:53,380
backgrounds you will most likely use a

00:50:51,740 --> 00:50:57,290
lot of names like this is something

00:50:53,380 --> 00:51:01,190
factory or observer or anything what is

00:50:57,290 --> 00:51:03,560
conflict we using domain based naming or

00:51:01,190 --> 00:51:05,680
do they work together because they don't

00:51:03,560 --> 00:51:10,010
apply to actually the same entities I

00:51:05,680 --> 00:51:12,310
believe that you can and you'll notice I

00:51:10,010 --> 00:51:15,170
use the word collaboratively quite often

00:51:12,310 --> 00:51:17,300
it's not necessarily the fact that you

00:51:15,170 --> 00:51:21,290
have to adhere to what your domain

00:51:17,300 --> 00:51:23,200
expert says because you know you guys

00:51:21,290 --> 00:51:26,690
are the technical experts and there is a

00:51:23,200 --> 00:51:28,910
middle ground you should always try as

00:51:26,690 --> 00:51:30,020
much as you can to to name things as

00:51:28,910 --> 00:51:31,700
people other things are gonna be named

00:51:30,020 --> 00:51:33,980
but it may not always be possible there

00:51:31,700 --> 00:51:35,690
might be ways of naming things you may

00:51:33,980 --> 00:51:37,640
call something for example a factory or

00:51:35,690 --> 00:51:39,830
an observer that's perfectly okay as

00:51:37,640 --> 00:51:47,810
long as the stellar description that

00:51:39,830 --> 00:51:50,500
map's to the outside world and there do

00:51:47,810 --> 00:51:52,970
you have any advice for structuring the

00:51:50,500 --> 00:51:55,700
application do you have like a domain

00:51:52,970 --> 00:52:01,880
name space for your models new services

00:51:55,700 --> 00:52:05,390
or how I tend to do is like the the root

00:52:01,880 --> 00:52:09,100
source folder I would have name spaces

00:52:05,390 --> 00:52:12,530
for each of my domain models so a user I

00:52:09,100 --> 00:52:17,240
would have club course with maybe love

00:52:12,530 --> 00:52:19,700
within Club the the services love at

00:52:17,240 --> 00:52:26,090
that level as well but you notice if I

00:52:19,700 --> 00:52:27,500
go back I use the word service they are

00:52:26,090 --> 00:52:30,260
the services lever then there but they

00:52:27,500 --> 00:52:31,910
live at the same level like I say this

00:52:30,260 --> 00:52:32,150
is personal preference I'm not seeing

00:52:31,910 --> 00:52:36,080
that

00:52:32,150 --> 00:52:38,930
is necessarily right or wrong and then

00:52:36,080 --> 00:52:42,730
we have a folder as well at that level

00:52:38,930 --> 00:52:45,200
called infrastructure and our doctrine

00:52:42,730 --> 00:52:46,850
lives in there or Symphony lives in

00:52:45,200 --> 00:52:50,120
there all our controllers live in there

00:52:46,850 --> 00:52:53,240
that are essentially outside our domain

00:52:50,120 --> 00:52:56,630
so the three layers live at the same

00:52:53,240 --> 00:52:59,420
layer within the code you could of what

00:52:56,630 --> 00:53:02,240
I have done in the past is split out the

00:52:59,420 --> 00:53:04,750
model layer into its own subdomain as

00:53:02,240 --> 00:53:09,670
well so you have model slash user slash

00:53:04,750 --> 00:53:11,810
user model slash Club slash course it's

00:53:09,670 --> 00:53:14,360
partially down to personal preference I

00:53:11,810 --> 00:53:16,430
think but as long as there is a clear

00:53:14,360 --> 00:53:19,970
distinction to you and it meets

00:53:16,430 --> 00:53:22,220
obviously you and your team then I think

00:53:19,970 --> 00:53:23,810
there are there are ways to do this it

00:53:22,220 --> 00:53:27,100
to suit you that's just how we choose to

00:53:23,810 --> 00:53:45,340
do it thank you

00:53:27,100 --> 00:53:45,340

YouTube URL: https://www.youtube.com/watch?v=u6oTg5oRH24


