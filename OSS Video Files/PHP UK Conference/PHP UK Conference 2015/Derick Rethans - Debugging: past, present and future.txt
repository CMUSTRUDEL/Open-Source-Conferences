Title: Derick Rethans - Debugging: past, present and future
Publication date: 2015-04-02
Playlist: PHP UK Conference 2015
Description: 
	In this talk I will go over all the past, present and future debugging techniques. The talk start by giving an overview on PHP's (ancient) standard features for debugging, additional (userland) libraries and functionality in frameworks. After the introductions we move on to the meatier stuff and I will talk about live-action debuggers, such as Xdebug and Zend's debugger. They both provide information while a script is being executed, in combination with IDEs. In the future, there is PHP 5.6's phpdbg which allows for some debugging and other analysis. I am also unveiling a project that allows you to ""step back"" while debugging as well; introspect what your script's or application's exact execution paths was; and trace variable modifications.
Captions: 
	00:00:00,000 --> 00:00:02,060
you

00:00:05,310 --> 00:00:12,160
everybody seems that settled in so I'll

00:00:07,899 --> 00:00:13,599
get started for the second time now hope

00:00:12,160 --> 00:00:15,599
you had a good conference so far I know

00:00:13,599 --> 00:00:17,920
it's nearly over kind of sad isn't it

00:00:15,599 --> 00:00:21,130
will be talking about debugging past

00:00:17,920 --> 00:00:22,960
present and future I'm Derek i work for

00:00:21,130 --> 00:00:25,270
mongodb I will not be talking anything

00:00:22,960 --> 00:00:26,770
about that right here if you have any

00:00:25,270 --> 00:00:28,390
feedback after the talk you can go to

00:00:26,770 --> 00:00:30,009
join in and leave some feedback I will

00:00:28,390 --> 00:00:33,489
repeat that zero at the end of the

00:00:30,009 --> 00:00:37,120
presentation so I'm Derek I'm addiction

00:00:33,489 --> 00:00:39,730
living in London I work on the phb

00:00:37,120 --> 00:00:41,590
MongoDB driver I also wrote XD bug this

00:00:39,730 --> 00:00:44,110
presentation will feature some XD bug

00:00:41,590 --> 00:00:45,340
but not all of it I did a whole bunch of

00:00:44,110 --> 00:00:46,720
all the PHP server so if you have

00:00:45,340 --> 00:00:49,480
questions about that find me later after

00:00:46,720 --> 00:00:50,800
presentation and unlike maps which has

00:00:49,480 --> 00:00:54,220
again no relevant students talk

00:00:50,800 --> 00:00:56,170
whatsoever all right so today's agenda

00:00:54,220 --> 00:00:57,790
is we talking about the past the present

00:00:56,170 --> 00:00:59,290
and the future and you see in the

00:00:57,790 --> 00:01:03,190
different types of headers that I put on

00:00:59,290 --> 00:01:05,649
my slide I know high-tech old homes in

00:01:03,190 --> 00:01:07,210
the past sort of current phones and

00:01:05,649 --> 00:01:11,290
present and I have a futuristic phones

00:01:07,210 --> 00:01:14,710
for for the future right so let's get

00:01:11,290 --> 00:01:16,570
started at a past vardhan's how many of

00:01:14,710 --> 00:01:20,920
you still use Varden debugging all the

00:01:16,570 --> 00:01:23,140
time yeah yeah I know the hint was in

00:01:20,920 --> 00:01:26,979
all the time that you hadn't heard yet

00:01:23,140 --> 00:01:29,680
um yeah I do this too I mean it's not

00:01:26,979 --> 00:01:33,490
really something to be too much to shame

00:01:29,680 --> 00:01:35,020
do out but at least when you're doing

00:01:33,490 --> 00:01:37,630
VAR dumping have something install that

00:01:35,020 --> 00:01:39,250
makes it's prettier for your right and

00:01:37,630 --> 00:01:41,130
if its various options for that so few

00:01:39,250 --> 00:01:43,240
things I'd like to have a look at this

00:01:41,130 --> 00:01:44,920
exhibit when you install that it will

00:01:43,240 --> 00:01:48,369
also produce something that looks it a

00:01:44,920 --> 00:01:51,220
little bit nicer but in many cases I

00:01:48,369 --> 00:01:53,110
find people not really using XD book for

00:01:51,220 --> 00:01:54,159
even this kind of stuff it's finally

00:01:53,110 --> 00:01:55,720
kind of interesting and I did some

00:01:54,159 --> 00:01:59,229
research and see what else is out there

00:01:55,720 --> 00:02:02,380
so get there in a moment so basically

00:01:59,229 --> 00:02:05,409
what it does it's a it enhances the way

00:02:02,380 --> 00:02:07,780
how bargains are displayed in by default

00:02:05,409 --> 00:02:10,840
so we'll tell you something about the

00:02:07,780 --> 00:02:11,890
data types hopefully you can see this

00:02:10,840 --> 00:02:13,930
all the way in the back because it's

00:02:11,890 --> 00:02:15,849
kind of small tells you something about

00:02:13,930 --> 00:02:17,230
the data types here different colors

00:02:15,849 --> 00:02:19,890
different data types if it's a floater

00:02:17,230 --> 00:02:21,819
tells you flow this is of course pie

00:02:19,890 --> 00:02:23,739
maybe we should figure out is actually

00:02:21,819 --> 00:02:27,760
saying pider and it should sure would

00:02:23,739 --> 00:02:29,980
like to buy sign up be cool yeah class

00:02:27,760 --> 00:02:32,200
names and then it has a reference number

00:02:29,980 --> 00:02:34,360
and if you have a self-referencing

00:02:32,200 --> 00:02:37,030
objective refer back to it isn't this

00:02:34,360 --> 00:02:39,040
kind of stuff right it is a simple

00:02:37,030 --> 00:02:42,159
visual hint to make dumping the

00:02:39,040 --> 00:02:43,659
information better or nicer and there's

00:02:42,159 --> 00:02:45,129
lots of different settings that you can

00:02:43,659 --> 00:02:48,310
configure as well you can configure how

00:02:45,129 --> 00:02:49,689
many array elements went to cut off

00:02:48,310 --> 00:02:51,489
strengths like if you have like a

00:02:49,689 --> 00:02:53,290
followed in and variable which is four

00:02:51,489 --> 00:02:54,519
megabytes really not very much

00:02:53,290 --> 00:02:55,900
interesting dumping it on the screen

00:02:54,519 --> 00:02:57,609
every time you dump a variable in an

00:02:55,900 --> 00:02:59,379
asset structure for example so it's a

00:02:57,609 --> 00:03:01,569
few settings for that if you really

00:02:59,379 --> 00:03:06,159
don't like it you can turn it off by

00:03:01,569 --> 00:03:09,700
turning it off so XD but does this do

00:03:06,159 --> 00:03:11,859
this all in an HTML environment if you

00:03:09,700 --> 00:03:15,069
have HTML errors turned on but it also

00:03:11,859 --> 00:03:17,500
goes on the command line so it in

00:03:15,069 --> 00:03:20,769
slightly later versions will show you a

00:03:17,500 --> 00:03:22,989
few colors and go it's more important

00:03:20,769 --> 00:03:27,250
that will respect the settings that you

00:03:22,989 --> 00:03:30,970
make but there's a few other variants as

00:03:27,250 --> 00:03:32,620
well all PHP solutions and I there's a

00:03:30,970 --> 00:03:34,060
few of them I there some good IDs in

00:03:32,620 --> 00:03:37,780
them so i think i should show them I

00:03:34,060 --> 00:03:39,870
might steal those later for XD book but

00:03:37,780 --> 00:03:42,430
there's a big difference right because

00:03:39,870 --> 00:03:44,109
XD book where you would do a VAR dump

00:03:42,430 --> 00:03:46,419
you don't necessarily know which context

00:03:44,109 --> 00:03:48,430
you are right you can be in just a

00:03:46,419 --> 00:03:50,280
normal HTML elements at some point or

00:03:48,430 --> 00:03:52,209
you can be in an HTML attribute and

00:03:50,280 --> 00:03:54,489
various things like that so it's really

00:03:52,209 --> 00:03:57,370
difficult for me to to generate really

00:03:54,489 --> 00:03:59,109
nice HTML that you with JavaScript you

00:03:57,370 --> 00:04:00,699
can expound and clothes and things like

00:03:59,109 --> 00:04:04,540
that because you might have in a context

00:04:00,699 --> 00:04:06,280
where yeah you can't do that right you

00:04:04,540 --> 00:04:07,840
cannot inject JavaScript and HTML

00:04:06,280 --> 00:04:10,150
attribute so we can but it's not really

00:04:07,840 --> 00:04:11,819
going to do what you want to zoom so

00:04:10,150 --> 00:04:14,409
this is fuels as other solutions that

00:04:11,819 --> 00:04:16,180
because they're pure PHP people tend to

00:04:14,409 --> 00:04:18,370
use this in like template kind of things

00:04:16,180 --> 00:04:20,709
where it is less of an issue to show

00:04:18,370 --> 00:04:22,210
that but that just let me show you this

00:04:20,709 --> 00:04:24,280
first one that I found is a something

00:04:22,210 --> 00:04:26,320
called lady book you can see I'm using

00:04:24,280 --> 00:04:28,210
the old style font here because I don't

00:04:26,320 --> 00:04:29,800
think it's great because the only thing

00:04:28,210 --> 00:04:33,280
it really does when jumping this very

00:04:29,800 --> 00:04:35,110
information remembering this big

00:04:33,280 --> 00:04:37,180
thing here it actually only shows you

00:04:35,110 --> 00:04:38,530
the top level fields in which isn't

00:04:37,180 --> 00:04:40,000
great you can't click on anything it

00:04:38,530 --> 00:04:42,100
doesn't show you any other information

00:04:40,000 --> 00:04:44,590
except for maybe floats and and that

00:04:42,100 --> 00:04:47,440
that's basically it so why would use

00:04:44,590 --> 00:04:51,010
this I don't know but it's better

00:04:47,440 --> 00:04:53,800
variance there's better variance and I

00:04:51,010 --> 00:04:55,419
know this is really small but it runs in

00:04:53,800 --> 00:04:56,830
an iframe and I really can make it

00:04:55,419 --> 00:04:59,200
bigger and I try it and I'm going to do

00:04:56,830 --> 00:05:01,180
so the whole layout goes goes away so I

00:04:59,200 --> 00:05:04,150
notice really smooth or just describe

00:05:01,180 --> 00:05:07,180
what it says so this is called cremeux

00:05:04,150 --> 00:05:08,980
and creamer announces it by like opening

00:05:07,180 --> 00:05:10,780
and closing things so this is an arrow

00:05:08,980 --> 00:05:16,090
here and it has a few Dalton says array

00:05:10,780 --> 00:05:23,190
3 meaning that it's straight yeah I

00:05:16,090 --> 00:05:26,410
noodle noodle is going to happen see

00:05:23,190 --> 00:05:28,720
squeeze my ear bits yeah so let me open

00:05:26,410 --> 00:05:31,389
this and well you'll get the top three

00:05:28,720 --> 00:05:33,070
elements no surprise I guess and a

00:05:31,389 --> 00:05:35,889
similar thing we can do for the Arabia

00:05:33,070 --> 00:05:40,240
10 then once more and once more but it

00:05:35,889 --> 00:05:42,220
is a few interesting things like here it

00:05:40,240 --> 00:05:44,080
has a its s protected time stamp and an

00:05:42,220 --> 00:05:46,950
inter-gender and has a big number which

00:05:44,080 --> 00:05:49,600
is a unix timestamp but it also renders

00:05:46,950 --> 00:05:51,190
what the types and actually means is

00:05:49,600 --> 00:05:53,860
actually really kind of useful to have

00:05:51,190 --> 00:05:55,600
because i cannot read timestamps I mean

00:05:53,860 --> 00:05:58,539
my watch does into unix time stamps

00:05:55,600 --> 00:06:01,810
actually it probably does but still

00:05:58,539 --> 00:06:03,160
don't want to use it and things like

00:06:01,810 --> 00:06:05,289
that and it's kind of handy it also

00:06:03,160 --> 00:06:07,150
shows you like when you get recurs and

00:06:05,289 --> 00:06:11,860
because of the self-referencing objects

00:06:07,150 --> 00:06:14,080
so it alts a few nice things then the

00:06:11,860 --> 00:06:15,910
third 1 i'm looking at is something

00:06:14,080 --> 00:06:18,910
called kins and again this is a

00:06:15,910 --> 00:06:21,100
replacement you call a function after

00:06:18,910 --> 00:06:22,570
are doing this and I think it's a bit

00:06:21,100 --> 00:06:24,280
nicer because first of all you don't

00:06:22,570 --> 00:06:27,190
have to click for every single level you

00:06:24,280 --> 00:06:29,470
just have to do top-level next films and

00:06:27,190 --> 00:06:31,690
it also is do interesting things like if

00:06:29,470 --> 00:06:34,630
it sounds like a color variable in there

00:06:31,690 --> 00:06:39,700
I will actually show you that specific

00:06:34,630 --> 00:06:42,460
color so in this case you get the see if

00:06:39,700 --> 00:06:44,650
you can make this tag so there's like a

00:06:42,460 --> 00:06:47,080
protected property called color and it

00:06:44,650 --> 00:06:48,970
says 0 0 for 4 99 again

00:06:47,080 --> 00:06:51,189
I cannot read that information because I

00:06:48,970 --> 00:06:52,810
don't know really well it says but it

00:06:51,189 --> 00:06:54,520
shows you the color and accidental

00:06:52,810 --> 00:06:58,300
things and again at the similar things

00:06:54,520 --> 00:06:59,889
for timestamp it's kind of cool then

00:06:58,300 --> 00:07:01,120
their symphonies VAR Danne / I don't

00:06:59,889 --> 00:07:03,039
know who picked this color scheme

00:07:01,120 --> 00:07:05,110
because I can't read it on my screen so

00:07:03,039 --> 00:07:06,610
I know with the contrast of the

00:07:05,110 --> 00:07:08,259
projector is not going to be great for

00:07:06,610 --> 00:07:10,300
the heater but again a very similar

00:07:08,259 --> 00:07:11,590
thing but it just do one thing that's

00:07:10,300 --> 00:07:14,860
really kind of cool which I would like

00:07:11,590 --> 00:07:17,530
to show which is that if it has like a

00:07:14,860 --> 00:07:19,690
reference to an object this basically

00:07:17,530 --> 00:07:21,669
says self ex loca which is the name of

00:07:19,690 --> 00:07:24,190
the class and then it has like the ads

00:07:21,669 --> 00:07:26,319
one in here which is if you remember

00:07:24,190 --> 00:07:27,550
perhaps from the one of the legs ebook

00:07:26,319 --> 00:07:28,629
showed is actually the reference of the

00:07:27,550 --> 00:07:31,180
objects and when you click on it to

00:07:28,629 --> 00:07:33,430
actually jump to that location so if

00:07:31,180 --> 00:07:37,090
you'd have jumped lots of variables in a

00:07:33,430 --> 00:07:39,039
page and there is a link to an object in

00:07:37,090 --> 00:07:41,250
there you can click on a little jump to

00:07:39,039 --> 00:07:44,259
that specific site which is kind of cool

00:07:41,250 --> 00:07:47,620
so all those three or four tools they

00:07:44,259 --> 00:07:48,969
have something kind of cool I wish there

00:07:47,620 --> 00:07:51,069
was just one that did all the cool

00:07:48,969 --> 00:07:54,340
things together and slightly better

00:07:51,069 --> 00:07:55,599
color scheme than this one be awesome so

00:07:54,340 --> 00:07:57,909
I might steal some of those things for

00:07:55,599 --> 00:08:00,759
exhibit at some point all right so i

00:07:57,909 --> 00:08:02,110
mentioned HTML debugging but there's

00:08:00,759 --> 00:08:04,300
also similar things on the command line

00:08:02,110 --> 00:08:05,740
at the moment it's not turned on by

00:08:04,300 --> 00:08:08,379
default they'll probably fix it at some

00:08:05,740 --> 00:08:10,509
point again you get different colors for

00:08:08,379 --> 00:08:16,300
different data types not rocket science

00:08:10,509 --> 00:08:18,639
and errors are so this is probably one

00:08:16,300 --> 00:08:20,500
of my one of the features that cause the

00:08:18,639 --> 00:08:22,629
least amount of time to implement but

00:08:20,500 --> 00:08:24,039
saving the most amount of time the

00:08:22,629 --> 00:08:26,919
implementation of this is about 10 lines

00:08:24,039 --> 00:08:28,960
in cincy code and as safely days and

00:08:26,919 --> 00:08:32,709
days of figuring out by Scripps stopped

00:08:28,960 --> 00:08:36,010
working run dling I spent like an hour

00:08:32,709 --> 00:08:37,000
so in afternoon implementing this after

00:08:36,010 --> 00:08:38,800
I've spent like a day and a half

00:08:37,000 --> 00:08:40,390
figuring out why our scripts only

00:08:38,800 --> 00:08:42,370
stopped working so what we had this

00:08:40,390 --> 00:08:44,560
where you had a company I was working

00:08:42,370 --> 00:08:46,990
for in Norway complete management system

00:08:44,560 --> 00:08:49,029
talking to my squirrel and the website

00:08:46,990 --> 00:08:50,470
was just working just fine but when you

00:08:49,029 --> 00:08:51,730
would run a script from the same

00:08:50,470 --> 00:08:53,350
directories on the command line it would

00:08:51,730 --> 00:08:56,020
just die wouldn't say anything won't do

00:08:53,350 --> 00:08:57,600
anything so you start debugging that

00:08:56,020 --> 00:08:59,980
right and and this is a time where

00:08:57,600 --> 00:09:00,910
actually we didn't have a single step

00:08:59,980 --> 00:09:02,620
debug yet or

00:09:00,910 --> 00:09:05,740
not one that was useful enough to

00:09:02,620 --> 00:09:08,290
actually do that and I figured out that

00:09:05,740 --> 00:09:10,420
after about two hours that the light of

00:09:08,290 --> 00:09:12,400
the script would die on my skull connect

00:09:10,420 --> 00:09:16,260
call it was kind of weird because nice

00:09:12,400 --> 00:09:16,260
girl can't this is full of again here's

00:09:16,470 --> 00:09:21,100
my school connect you want too often

00:09:19,420 --> 00:09:22,960
silence with the at sign because it rose

00:09:21,100 --> 00:09:26,440
like connection warnings if it can't

00:09:22,960 --> 00:09:28,510
connect to confine to host bit it will

00:09:26,440 --> 00:09:31,930
then geo sign in Sierra and just give

00:09:28,510 --> 00:09:33,760
you resource anyway now if you don't

00:09:31,930 --> 00:09:35,320
have the my skull extension loaded it

00:09:33,760 --> 00:09:36,460
will just die with the fatal area

00:09:35,320 --> 00:09:38,980
immediately you have no idea what

00:09:36,460 --> 00:09:41,830
happens and if they to Eric will silence

00:09:38,980 --> 00:09:43,420
body at operator so they're going to two

00:09:41,830 --> 00:09:46,360
and a half days of my life or however

00:09:43,420 --> 00:09:48,820
goes suspend are implementing this and

00:09:46,360 --> 00:09:52,600
now everybody's happy I'm considering

00:09:48,820 --> 00:09:55,150
turning on screen by default but I'm not

00:09:52,600 --> 00:09:57,820
sure how much noise that is going to

00:09:55,150 --> 00:10:00,790
generate go to notice lots of PHP script

00:09:57,820 --> 00:10:02,590
that sort of rely on on silencing at

00:10:00,790 --> 00:10:03,970
least network related issues in their

00:10:02,590 --> 00:10:08,290
applications but as a developmental

00:10:03,970 --> 00:10:10,090
maybe so from I have a fool audience now

00:10:08,290 --> 00:10:11,410
they can ask you about this who thinks

00:10:10,090 --> 00:10:14,320
this is good idea to turn his own body

00:10:11,410 --> 00:10:17,740
filled and who doesn't think it's a good

00:10:14,320 --> 00:10:22,830
idea to turn already felt sorry the

00:10:17,740 --> 00:10:22,830
first group one here okay settled

00:10:22,890 --> 00:10:27,670
alright so I looked a little bit at how

00:10:25,420 --> 00:10:29,530
you do Varden debugging which is to help

00:10:27,670 --> 00:10:31,570
you with doing Varden debug much great

00:10:29,530 --> 00:10:33,040
and both of you all the things that

00:10:31,570 --> 00:10:34,480
always struggle that is looking at

00:10:33,040 --> 00:10:37,210
somebody else's code which I end up

00:10:34,480 --> 00:10:41,380
doing quite a lot is I I had absolutely

00:10:37,210 --> 00:10:43,270
no idea what was actually doing and so I

00:10:41,380 --> 00:10:45,370
set down an implementing feature called

00:10:43,270 --> 00:10:48,600
tracing and tracing basically allows you

00:10:45,370 --> 00:10:53,560
to dump everything that you script this

00:10:48,600 --> 00:10:54,910
to a fault alright so there's it three

00:10:53,560 --> 00:10:57,250
different types of files that it

00:10:54,910 --> 00:11:01,120
generates at the moment so it as well as

00:10:57,250 --> 00:11:02,740
call the textual description which it's

00:11:01,120 --> 00:11:04,240
Actium just going to show thats much

00:11:02,740 --> 00:11:06,580
more fun live demos what do you think

00:11:04,240 --> 00:11:08,730
live demos that I haven't prepared even

00:11:06,580 --> 00:11:08,730
better

00:11:09,130 --> 00:11:13,540
I know that's crazy all right so what

00:11:12,130 --> 00:11:15,370
I've done in my brows are actually high

00:11:13,540 --> 00:11:18,430
if installed like a little extensions

00:11:15,370 --> 00:11:21,310
called the the easiest XD bug helper or

00:11:18,430 --> 00:11:23,710
something it's a third it's the third

00:11:21,310 --> 00:11:25,870
version of this helper because it was

00:11:23,710 --> 00:11:27,630
easy axial helper then was easier XD big

00:11:25,870 --> 00:11:29,560
help and how that's easy as XD bacopa

00:11:27,630 --> 00:11:32,620
not sure what are going to do for the

00:11:29,560 --> 00:11:35,020
next one any case what it does is insult

00:11:32,620 --> 00:11:37,480
like three little icons here so it has

00:11:35,020 --> 00:11:39,520
one that is for debugging virtual gets

00:11:37,480 --> 00:11:41,200
back to in a moment there's one for

00:11:39,520 --> 00:11:43,750
enable tracing so what happens if i

00:11:41,200 --> 00:11:46,000
click that nothing the only thing that

00:11:43,750 --> 00:11:48,730
really does exactly sets a cookie but

00:11:46,000 --> 00:11:52,020
when I now reload my slides because this

00:11:48,730 --> 00:11:57,190
is all runs in a browser shaken seen

00:11:52,020 --> 00:12:02,290
give me a second oh actually open the

00:11:57,190 --> 00:12:03,850
shell make it a bit bigger I will have

00:12:02,290 --> 00:12:05,410
so many of those files so that I will

00:12:03,850 --> 00:12:07,030
just delete all the ones that I've here

00:12:05,410 --> 00:12:10,780
and then try again because then I know I

00:12:07,030 --> 00:12:13,990
have to write on all right so i will now

00:12:10,780 --> 00:12:18,030
have a foul in this location has just

00:12:13,990 --> 00:12:21,580
generated that's shows who is really big

00:12:18,030 --> 00:12:24,130
it shows me everything that has happened

00:12:21,580 --> 00:12:25,810
in the full execution of the script so

00:12:24,130 --> 00:12:27,340
the first column that you see here is

00:12:25,810 --> 00:12:29,680
the time index and this is the start of

00:12:27,340 --> 00:12:34,750
the script anybody wants to guess why

00:12:29,680 --> 00:12:36,310
this doesn't start at zero the PHP needs

00:12:34,750 --> 00:12:38,560
to parse the first script that is going

00:12:36,310 --> 00:12:40,660
through which takes a one-load three

00:12:38,560 --> 00:12:43,240
milliseconds here it's not a lot

00:12:40,660 --> 00:12:45,760
excellent at the third sorry the second

00:12:43,240 --> 00:12:48,270
column tells you hear how much memories

00:12:45,760 --> 00:12:51,730
and use of this moment and then you see

00:12:48,270 --> 00:12:53,650
arrows basically showing which function

00:12:51,730 --> 00:12:54,880
calls which function so the first

00:12:53,650 --> 00:12:58,030
function that we have is the main

00:12:54,880 --> 00:13:01,660
function here which gets started on in

00:12:58,030 --> 00:13:03,160
false show to on line 0 the first thing

00:13:01,660 --> 00:13:05,560
it does is cause require and it sells

00:13:03,160 --> 00:13:10,300
you the pulse and that's this calls dear

00:13:05,560 --> 00:13:11,740
name and then there's two more more

00:13:10,300 --> 00:13:14,440
lines that be long actually to the

00:13:11,740 --> 00:13:16,990
function call so the first one is the

00:13:14,440 --> 00:13:18,460
return value of this function so basing

00:13:16,990 --> 00:13:20,830
does it basically strips out the last

00:13:18,460 --> 00:13:22,210
file name right you might notice so what

00:13:20,830 --> 00:13:23,020
does actually those two lines tell you

00:13:22,210 --> 00:13:26,500
is that the return

00:13:23,020 --> 00:13:28,660
value of dysfunctional the path and then

00:13:26,500 --> 00:13:31,360
the third line actually tells me that

00:13:28,660 --> 00:13:34,360
I've assigned us to a variable called

00:13:31,360 --> 00:13:37,990
dear so by going through this i can very

00:13:34,360 --> 00:13:39,580
clearly see return values both of values

00:13:37,990 --> 00:13:44,020
of our assigned two variables and things

00:13:39,580 --> 00:13:46,600
like that and is actually if i remember

00:13:44,020 --> 00:13:49,810
how to do that so it even does things

00:13:46,600 --> 00:13:54,520
like attaching it or like adding an

00:13:49,810 --> 00:13:57,880
element to an array or various setting

00:13:54,520 --> 00:14:00,760
specific array elements so i should put

00:13:57,880 --> 00:14:02,320
it on the top of the screen there this

00:14:00,760 --> 00:14:04,840
shows you like setting properties and

00:14:02,320 --> 00:14:07,270
elements in there and as yeah there's a

00:14:04,840 --> 00:14:10,330
lot of information there also if you see

00:14:07,270 --> 00:14:12,370
three ? the basically set as well we

00:14:10,330 --> 00:14:16,150
have a function that accepts arguments

00:14:12,370 --> 00:14:17,710
but we didn't pass any so yeah it then

00:14:16,150 --> 00:14:19,360
picks a default I haven't quite figured

00:14:17,710 --> 00:14:21,400
out yet how to actually show the default

00:14:19,360 --> 00:14:24,430
is 0 but maybe that's another feature

00:14:21,400 --> 00:14:26,650
for the future and so on and so on so

00:14:24,430 --> 00:14:31,120
just foul as you can see form are just

00:14:26,650 --> 00:14:34,210
showing a slide on the screen have 3500

00:14:31,120 --> 00:14:37,120
lines which isn't the whole Lots but if

00:14:34,210 --> 00:14:40,030
you run isn't anything like framework

00:14:37,120 --> 00:14:43,540
kind of thing you will usually get up to

00:14:40,030 --> 00:14:46,210
like 100,000 lines is quite quite common

00:14:43,540 --> 00:14:47,590
to see and if you create lots of those

00:14:46,210 --> 00:14:50,680
trace files then you will run out of

00:14:47,590 --> 00:14:52,450
disk space frequently you run out of

00:14:50,680 --> 00:14:54,790
this space this one cent of always see

00:14:52,450 --> 00:14:56,770
this common on to air to say home my

00:14:54,790 --> 00:14:59,260
disco Stu and I just removed 17

00:14:56,770 --> 00:15:01,840
gigabytes of trace files you need to be

00:14:59,260 --> 00:15:03,820
a bit careful that so immediately what

00:15:01,840 --> 00:15:07,840
I'm going to do right now is turn off

00:15:03,820 --> 00:15:09,220
the cookie actually i'll leave it in

00:15:07,840 --> 00:15:12,130
because i want to show a few more things

00:15:09,220 --> 00:15:13,480
here alright so this format it's quite

00:15:12,130 --> 00:15:15,390
easy for you to read but it's really

00:15:13,480 --> 00:15:18,460
difficult to parse because it's just

00:15:15,390 --> 00:15:25,590
indentations right ok so let me remove

00:15:18,460 --> 00:15:28,240
the file yes I can't do that so in

00:15:25,590 --> 00:15:30,700
php.ini there's a few settings related

00:15:28,240 --> 00:15:33,100
exactly that's like 60 settings but what

00:15:30,700 --> 00:15:35,290
I'm going to look at is the following so

00:15:33,100 --> 00:15:36,880
there's the one that is trace formats 0

00:15:35,290 --> 00:15:41,860
means the former that I've just shown

00:15:36,880 --> 00:15:44,710
you know minus one is not working one is

00:15:41,860 --> 00:15:52,420
a different format so we start the web

00:15:44,710 --> 00:15:54,340
server reload the slides and then look

00:15:52,420 --> 00:15:56,770
at a different funnel team so this

00:15:54,340 --> 00:15:58,270
format actually shows you actually the

00:15:56,770 --> 00:16:02,820
first column falls off the screen which

00:15:58,270 --> 00:16:02,820
is kind of annoying let me fix that

00:16:03,390 --> 00:16:08,320
alright so the first column is at the

00:16:05,920 --> 00:16:11,110
indentation level so instead of doing

00:16:08,320 --> 00:16:12,670
that bit spaces is now just a number the

00:16:11,110 --> 00:16:15,190
second column is the function number

00:16:12,670 --> 00:16:17,230
function is just an incremental counter

00:16:15,190 --> 00:16:19,000
for each function being called and you

00:16:17,230 --> 00:16:21,460
see that some functions are actually all

00:16:19,000 --> 00:16:23,890
functions have two entries in their

00:16:21,460 --> 00:16:25,720
rights the first one is the entry point

00:16:23,890 --> 00:16:29,980
to the function the second one is the

00:16:25,720 --> 00:16:32,800
exit point of the function and for each

00:16:29,980 --> 00:16:35,920
of those i will have memory and time

00:16:32,800 --> 00:16:37,270
index meaning that you can write quite a

00:16:35,920 --> 00:16:38,680
simple script that goes through this and

00:16:37,270 --> 00:16:40,620
figures out how much time each function

00:16:38,680 --> 00:16:44,230
takes and can aggregate its information

00:16:40,620 --> 00:16:45,730
which is actually simple to do it of

00:16:44,230 --> 00:16:47,590
course also shows you the function name

00:16:45,730 --> 00:16:48,850
that it has arguments if it's an

00:16:47,590 --> 00:16:52,750
internal function or user-defined

00:16:48,850 --> 00:16:54,520
function it is also not possible to

00:16:52,750 --> 00:16:57,970
actually have additional lines in there

00:16:54,520 --> 00:17:01,000
that shows you the return types and

00:16:57,970 --> 00:17:03,190
things like that so it was really quite

00:17:01,000 --> 00:17:04,870
handy and the interesting thing about is

00:17:03,190 --> 00:17:07,170
is that everything is tab separated so

00:17:04,870 --> 00:17:10,870
it's really easy to parse for I scripts

00:17:07,170 --> 00:17:12,069
so I wrote from and that shows a few

00:17:10,870 --> 00:17:13,720
things now the last time I gave this

00:17:12,069 --> 00:17:15,900
presentation the script actually didn't

00:17:13,720 --> 00:17:18,310
work so I had to use a debugger first

00:17:15,900 --> 00:17:25,089
before I could do that but let's see

00:17:18,310 --> 00:17:26,740
what at work system that's it d keyword

00:17:25,089 --> 00:17:31,290
this is like in a slanted most kind of

00:17:26,740 --> 00:17:31,290
difficult to type no

00:17:36,490 --> 00:17:41,710
so if you won't get as if you install

00:17:39,429 --> 00:17:44,440
echoecho but you've all gathered if you

00:17:41,710 --> 00:17:47,320
actually download the source code

00:17:44,440 --> 00:17:49,570
yourself I'm just plugging the file name

00:17:47,320 --> 00:17:51,100
at the end and then it parses and you

00:17:49,570 --> 00:17:53,170
get some output actually as you see they

00:17:51,100 --> 00:17:55,059
went actually pretty fast right and

00:17:53,170 --> 00:17:59,100
again this is only 3500 lines and

00:17:55,059 --> 00:17:59,100
basically what does now shows you is

00:17:59,550 --> 00:18:04,330
scroll up a little bit that shows you

00:18:01,510 --> 00:18:07,059
the 25 most costly call sorted by own

00:18:04,330 --> 00:18:08,890
time so basically what it says that

00:18:07,059 --> 00:18:10,780
array key exists is the function that

00:18:08,890 --> 00:18:14,710
took up the most amount of time running

00:18:10,780 --> 00:18:16,720
the script it go called 39 times and it

00:18:14,710 --> 00:18:24,059
in the total time for running this

00:18:16,720 --> 00:18:26,650
function to what was 50 milliseconds and

00:18:24,059 --> 00:18:28,330
that is inclusive time inclusive time is

00:18:26,650 --> 00:18:30,100
basically the amount of time spent in

00:18:28,330 --> 00:18:31,960
this function and all functions calls

00:18:30,100 --> 00:18:34,510
from this function array key access

00:18:31,960 --> 00:18:36,160
being a internal function it doesn't

00:18:34,510 --> 00:18:39,000
call all functions although things like

00:18:36,160 --> 00:18:41,770
array map actually do so it's according

00:18:39,000 --> 00:18:43,240
sorted according to the own time it also

00:18:41,770 --> 00:18:48,070
tells you how much memory dysfunction

00:18:43,240 --> 00:18:52,320
uses but this is an interesting measure

00:18:48,070 --> 00:18:55,030
because it's not reliable whatsoever

00:18:52,320 --> 00:18:57,370
it's not reliable because the way he'll

00:18:55,030 --> 00:18:59,170
PHP's memory manager works it now

00:18:57,370 --> 00:19:00,970
implements like a cyclic garbage

00:18:59,170 --> 00:19:05,230
collector which can kick in at any

00:19:00,970 --> 00:19:07,540
moment and certainly remove like half of

00:19:05,230 --> 00:19:09,309
your use memory right and because I

00:19:07,540 --> 00:19:13,929
don't know in which function is going to

00:19:09,309 --> 00:19:16,090
happen I cannot account for it so the

00:19:13,929 --> 00:19:19,450
memory number here can also sometimes

00:19:16,090 --> 00:19:21,820
include two megabytes of freed memories

00:19:19,450 --> 00:19:25,440
only and hence you get like big negative

00:19:21,820 --> 00:19:28,840
numbers that make absolutely no sense so

00:19:25,440 --> 00:19:31,360
this is only very rough guides to where

00:19:28,840 --> 00:19:32,890
most amount of memory is being used so

00:19:31,360 --> 00:19:36,130
what you often see is like things like

00:19:32,890 --> 00:19:38,320
require and includes will use a lot of

00:19:36,130 --> 00:19:43,540
memory because that also know the par

00:19:38,320 --> 00:19:46,870
script to to memory things like array

00:19:43,540 --> 00:19:48,970
merge they will return an extra array of

00:19:46,870 --> 00:19:49,880
a lot of elements so that that does it a

00:19:48,970 --> 00:19:51,170
lot so

00:19:49,880 --> 00:19:54,320
you go through this it actually makes

00:19:51,170 --> 00:19:57,320
sense most of the time but not all the

00:19:54,320 --> 00:19:59,720
time you cannot of course also sort this

00:19:57,320 --> 00:20:03,350
by all the things I remember the name of

00:19:59,720 --> 00:20:04,910
the arguments you can do consorted by

00:20:03,350 --> 00:20:06,650
the number of times the function calls

00:20:04,910 --> 00:20:08,900
and things like that it's a very very

00:20:06,650 --> 00:20:13,850
simple script it's like 70 lines of PHP

00:20:08,900 --> 00:20:15,470
code but it is very basic profiling I I

00:20:13,850 --> 00:20:19,250
think it's something worth looking at

00:20:15,470 --> 00:20:21,680
looking at okay and then the last former

00:20:19,250 --> 00:20:26,540
that I'd like to show here increase this

00:20:21,680 --> 00:20:31,400
one reload the web server reload slide

00:20:26,540 --> 00:20:34,100
again oh let's see too many screens open

00:20:31,400 --> 00:20:36,620
if I now run the script of course

00:20:34,100 --> 00:20:40,550
doesn't work because it cannot read it

00:20:36,620 --> 00:20:43,190
anymore but where is viewing now you get

00:20:40,550 --> 00:20:45,860
a very nice HTML output of this do news

00:20:43,190 --> 00:20:47,420
ever try to load it in a browser I'm

00:20:45,860 --> 00:20:49,310
saying that because if you have a two

00:20:47,420 --> 00:20:50,870
hundred thousand lines in there a table

00:20:49,310 --> 00:20:54,620
with two hundred thousand rows is not

00:20:50,870 --> 00:20:57,320
going to work well yeah just don't

00:20:54,620 --> 00:21:03,560
bother I would so why did I do this

00:20:57,320 --> 00:21:05,060
because people asked me to add this but

00:21:03,560 --> 00:21:07,760
as a big dick this claim is that if you

00:21:05,060 --> 00:21:10,790
really want to that fine do it it used

00:21:07,760 --> 00:21:13,130
to be a feature in XD big one that would

00:21:10,790 --> 00:21:16,130
output this kind of self thanks to the

00:21:13,130 --> 00:21:18,170
end of of your output strips but that's

00:21:16,130 --> 00:21:20,000
crash my browser so many times that I

00:21:18,170 --> 00:21:21,410
remove that from exhibit too but then

00:21:20,000 --> 00:21:23,770
people started camping or why did you

00:21:21,410 --> 00:21:26,650
remove and so all the back again and a

00:21:23,770 --> 00:21:31,690
few browser crashes not my problem

00:21:26,650 --> 00:21:31,690
alright I will now turn off the tracing

00:21:32,320 --> 00:21:36,290
yeah I have a slide but I don't really

00:21:34,400 --> 00:21:38,480
have to show this light anymore so the

00:21:36,290 --> 00:21:40,250
other thing that I now didn't have to

00:21:38,480 --> 00:21:43,280
live demo because mushrooms actually

00:21:40,250 --> 00:21:44,690
worked is the life debugging and far

00:21:43,280 --> 00:21:46,520
dump is really nice and handy but it

00:21:44,690 --> 00:21:48,740
gets really complicated you don't really

00:21:46,520 --> 00:21:50,990
want to spend an hour Artem Varda flow

00:21:48,740 --> 00:21:52,940
of your codes and then another hour to

00:21:50,990 --> 00:21:54,980
remove them and another hour to find a

00:21:52,940 --> 00:21:57,470
missing one or find the additional that

00:21:54,980 --> 00:22:00,290
she didn't get so the live debugging

00:21:57,470 --> 00:22:03,309
that sexy book does its part of it uses

00:22:00,290 --> 00:22:07,360
a dbt d bgp

00:22:03,309 --> 00:22:09,639
protocol it's it's not only for for PHP

00:22:07,360 --> 00:22:11,590
it's actually got developed together

00:22:09,639 --> 00:22:15,789
with a deal breaker for Python for Pearl

00:22:11,590 --> 00:22:17,379
for tickle for xslt and ATM has now also

00:22:15,789 --> 00:22:20,639
implemented this as protocol for

00:22:17,379 --> 00:22:24,549
debugging PHP script running late hgm

00:22:20,639 --> 00:22:27,669
support is good but it's not great yet

00:22:24,549 --> 00:22:31,330
yeah well until they get there at some

00:22:27,669 --> 00:22:33,279
point and it's implement almost any IDE

00:22:31,330 --> 00:22:36,669
of any sort of decent quality that you

00:22:33,279 --> 00:22:38,919
write PHP in I only have a few examples

00:22:36,669 --> 00:22:44,049
here Komodo and that be in speech p

00:22:38,919 --> 00:22:45,490
storm vm Emacs sublime whatever you can

00:22:44,049 --> 00:22:47,769
think of that's basically plugin for

00:22:45,490 --> 00:22:50,980
debugging i cannot cover all of those

00:22:47,769 --> 00:22:53,740
because i don't really use an ID i use

00:22:50,980 --> 00:22:56,259
vim and i don't really write PHP code so

00:22:53,740 --> 00:22:57,970
doesn't really help me much anymore but

00:22:56,259 --> 00:22:59,619
in any case i probably still should show

00:22:57,970 --> 00:23:01,419
you how this works so again i'm going

00:22:59,619 --> 00:23:04,179
back to the like the little icons here

00:23:01,419 --> 00:23:05,559
so i will now turn making sure the

00:23:04,179 --> 00:23:07,149
tracing yourself I'll turn on the

00:23:05,559 --> 00:23:09,549
debugging it's like click on the little

00:23:07,149 --> 00:23:12,159
book icon and when you then reload this

00:23:09,549 --> 00:23:13,600
absolutely nothing happens which is

00:23:12,159 --> 00:23:17,110
normal because I haven't started my

00:23:13,600 --> 00:23:22,119
debugger yet so now we r do I phpstorm

00:23:17,110 --> 00:23:26,879
installs will probably wind and I'm

00:23:22,119 --> 00:23:26,879
using open SDK or something just that oh

00:23:27,240 --> 00:23:34,799
maybe doesn't see this is why I don't

00:23:31,720 --> 00:23:37,809
use IDs it takes too long to stardom

00:23:34,799 --> 00:23:39,129
yeah I know it's also an old version is

00:23:37,809 --> 00:23:47,139
probably going to bind about a license

00:23:39,129 --> 00:23:50,909
that gold expired but sorry why do I

00:23:47,139 --> 00:23:50,909
ever close it because it uses memory

00:23:51,510 --> 00:23:57,640
na so it only says there's an something

00:23:54,490 --> 00:23:59,460
ready to to install to update in any

00:23:57,640 --> 00:24:04,930
case let me now reload the slide and

00:23:59,460 --> 00:24:06,420
fingers crossed fingers crossed okay I

00:24:04,930 --> 00:24:09,100
probably need to turn it on down there

00:24:06,420 --> 00:24:15,610
so start listening for different

00:24:09,100 --> 00:24:17,560
connections then we load it yes alright

00:24:15,610 --> 00:24:19,390
so what it does is it basically stops at

00:24:17,560 --> 00:24:22,530
the first break point I have had and

00:24:19,390 --> 00:24:24,910
this falls out of my havoc for my area

00:24:22,530 --> 00:24:26,410
all right I notice a bit small account

00:24:24,910 --> 00:24:29,530
really make it big I've tried ads many

00:24:26,410 --> 00:24:30,970
times but it basically tells you in

00:24:29,530 --> 00:24:34,180
which line is stops oh stop that the

00:24:30,970 --> 00:24:35,560
line configurational PHP line 35 for

00:24:34,180 --> 00:24:37,330
which is this line here where you have

00:24:35,560 --> 00:24:41,430
the blue line and then what that allows

00:24:37,330 --> 00:24:43,900
you to do is step over to the next line

00:24:41,430 --> 00:24:46,720
so you can follow what happened with the

00:24:43,900 --> 00:24:48,700
blue line here and you can inspect all

00:24:46,720 --> 00:24:51,670
the variables that happen in here which

00:24:48,700 --> 00:24:54,160
i think is also handy so it says added

00:24:51,670 --> 00:24:56,800
this false if you won't you can change

00:24:54,160 --> 00:24:58,270
them which you need to be a bit careful

00:24:56,800 --> 00:25:01,570
with that because if you change like an

00:24:58,270 --> 00:25:03,100
array to a say a boolean then your

00:25:01,570 --> 00:25:04,900
scripts is unlikely going to work but

00:25:03,100 --> 00:25:07,690
it's handy if you if you have like an

00:25:04,900 --> 00:25:10,810
algorithm and you notice that the number

00:25:07,690 --> 00:25:12,370
of close the output is twenty-one but it

00:25:10,810 --> 00:25:15,640
out put it 20 then you can just change

00:25:12,370 --> 00:25:18,790
it and continue debugging five perhaps

00:25:15,640 --> 00:25:20,290
finding more books so the breakpoints

00:25:18,790 --> 00:25:23,590
actually can set they actually really

00:25:20,290 --> 00:25:27,520
quite powerful so you can click them in

00:25:23,590 --> 00:25:30,300
front so go two more so yeah you can set

00:25:27,520 --> 00:25:32,860
like you can just spend break points I'm

00:25:30,300 --> 00:25:35,320
just having been enabled they're not

00:25:32,860 --> 00:25:37,060
doing anything anymore you can set

00:25:35,320 --> 00:25:42,340
conditions on break point so you can for

00:25:37,060 --> 00:25:44,260
example ooh like like compare things two

00:25:42,340 --> 00:25:47,050
variables and if that condition matches

00:25:44,260 --> 00:25:48,580
only then the breakpoint kicks in you

00:25:47,050 --> 00:25:51,100
can lock the message the console there's

00:25:48,580 --> 00:25:52,980
evaluated expressions you can move a

00:25:51,100 --> 00:25:56,440
break points ones they've just been hit

00:25:52,980 --> 00:25:58,660
there's also ways how you can only

00:25:56,440 --> 00:26:01,620
trigger a break point every five times

00:25:58,660 --> 00:26:04,540
for example I'm not actually sure better

00:26:01,620 --> 00:26:07,750
I don't think phpstorm

00:26:04,540 --> 00:26:09,880
we implement that one or is it here no I

00:26:07,750 --> 00:26:12,730
don't think it's indirect saline so not

00:26:09,880 --> 00:26:15,160
all the features are exposed by IDs

00:26:12,730 --> 00:26:17,410
which is kind of annoying but then again

00:26:15,160 --> 00:26:19,300
they're probably feature that people use

00:26:17,410 --> 00:26:23,020
so little that nobody ever send in the

00:26:19,300 --> 00:26:24,430
future requests for it yet the single

00:26:23,020 --> 00:26:26,140
step debugging if you have never done

00:26:24,430 --> 00:26:29,680
this before please try this if you get

00:26:26,140 --> 00:26:32,020
into any sort of complicated debugging

00:26:29,680 --> 00:26:35,710
situation anyway I'll stop with this and

00:26:32,020 --> 00:26:37,840
move on to something else I will skip

00:26:35,710 --> 00:26:41,380
the slides because we've just seen how

00:26:37,840 --> 00:26:43,180
it worked oh yeah of course you need to

00:26:41,380 --> 00:26:46,030
turn it on turning it almost kind of

00:26:43,180 --> 00:26:47,770
important otherwise it doesn't work so

00:26:46,030 --> 00:26:50,050
you turn it on by setting remote enable

00:26:47,770 --> 00:26:51,880
them to one and then you can configure

00:26:50,050 --> 00:26:55,180
the remote host and port and this is

00:26:51,880 --> 00:26:57,430
sort of important because it is XD book

00:26:55,180 --> 00:26:59,170
that connects to eid so your ID is

00:26:57,430 --> 00:27:01,500
actually the server and XD work is the

00:26:59,170 --> 00:27:05,020
client and it's something that people

00:27:01,500 --> 00:27:07,510
tend to miss once in a while and this is

00:27:05,020 --> 00:27:08,650
important if you have like a development

00:27:07,510 --> 00:27:10,780
server that doesn't run on your own

00:27:08,650 --> 00:27:13,330
network and your own development network

00:27:10,780 --> 00:27:14,830
is behind like a network firewall then

00:27:13,330 --> 00:27:16,900
you need to have a way to punch through

00:27:14,830 --> 00:27:18,790
it right and there's a few tricks

00:27:16,900 --> 00:27:19,930
actually that you can do there but not

00:27:18,790 --> 00:27:23,830
going to have to time to talk about that

00:27:19,930 --> 00:27:25,780
so much so because you I cannot just

00:27:23,830 --> 00:27:27,640
leave this blank or use a wild card

00:27:25,780 --> 00:27:29,770
because this d IP address XD because

00:27:27,640 --> 00:27:31,330
going to connecting and i cannot connect

00:27:29,770 --> 00:27:35,080
to the whole the internet hope somebody

00:27:31,330 --> 00:27:37,570
is listening right it doesn't work but

00:27:35,080 --> 00:27:39,790
it is of course handy to get to connect

00:27:37,570 --> 00:27:41,860
back to the developer axion it wants to

00:27:39,790 --> 00:27:43,630
do the debugging so it is a setting

00:27:41,860 --> 00:27:46,090
called remote connect back which means

00:27:43,630 --> 00:27:48,340
that if I use a browser to access my web

00:27:46,090 --> 00:27:51,130
server XD bukas trying to figure out

00:27:48,340 --> 00:27:55,870
what the IP address was of the machine

00:27:51,130 --> 00:27:59,460
that created the map request by using it

00:27:55,870 --> 00:28:01,780
looks at a remote at our HTTP header and

00:27:59,460 --> 00:28:04,720
then we'll create a connection back to

00:28:01,780 --> 00:28:07,540
that IP address this also works if you

00:28:04,720 --> 00:28:10,150
go through proxy because most well it

00:28:07,540 --> 00:28:13,240
works if you use a decent proxy that

00:28:10,150 --> 00:28:15,220
sets the x forwarded out x what is

00:28:13,240 --> 00:28:17,050
forwarded for headers or something on

00:28:15,220 --> 00:28:18,010
the name of this and then we'll also try

00:28:17,050 --> 00:28:19,450
to figure out the car

00:28:18,010 --> 00:28:23,860
IP address and connect and make sure

00:28:19,450 --> 00:28:25,090
actually talks to your ID of course if

00:28:23,860 --> 00:28:26,260
you have a firewall in the way then you

00:28:25,090 --> 00:28:29,020
need to do other things but there are

00:28:26,260 --> 00:28:30,370
solutions for that alright so you can

00:28:29,020 --> 00:28:32,740
also do this on the shelf for command

00:28:30,370 --> 00:28:34,450
line scripts which is really handy if

00:28:32,740 --> 00:28:36,670
you want to debug your unit tests for

00:28:34,450 --> 00:28:38,830
example hopefully you don't need to know

00:28:36,670 --> 00:28:39,880
too much but you never know and the only

00:28:38,830 --> 00:28:42,220
thing you really have to do there is

00:28:39,880 --> 00:28:44,560
export an environment variable which is

00:28:42,220 --> 00:28:47,260
XD roku msconfig and then you need need

00:28:44,560 --> 00:28:49,840
to set a value of ID leaky whatever that

00:28:47,260 --> 00:28:53,140
is doesn't really matter but try to pick

00:28:49,840 --> 00:28:56,620
one that's unique in your network pick

00:28:53,140 --> 00:28:58,900
your name would be my suggestion because

00:28:56,620 --> 00:29:00,190
this is a value that is used by proxies

00:28:58,900 --> 00:29:01,660
to make sure it gets routed correctly

00:29:00,190 --> 00:29:06,430
again I don't have to time to talk about

00:29:01,660 --> 00:29:08,440
that today alright so there's helper

00:29:06,430 --> 00:29:10,990
extensions for browsers for most major

00:29:08,440 --> 00:29:14,620
browsers so as I said XZ because now on

00:29:10,990 --> 00:29:16,780
the easiest XD extension but it's also

00:29:14,620 --> 00:29:18,910
XD big helper for Chrome exceed the

00:29:16,780 --> 00:29:22,330
Takla for safari and XD brook launcher

00:29:18,910 --> 00:29:25,990
for opera just show fans who is using

00:29:22,330 --> 00:29:31,720
opera here as a browser one okay

00:29:25,990 --> 00:29:34,060
congratulations I used to give a

00:29:31,720 --> 00:29:35,740
debugging token Norway opera coming out

00:29:34,060 --> 00:29:39,760
of Norwich just used to be like half of

00:29:35,740 --> 00:29:44,830
the audience which browser is missing

00:29:39,760 --> 00:29:46,990
here so I don't know is it actually

00:29:44,830 --> 00:29:49,270
possible to write like simple extensions

00:29:46,990 --> 00:29:51,160
for IE to do this kind of things I don't

00:29:49,270 --> 00:29:52,660
know whether it's even possible so if

00:29:51,160 --> 00:29:54,250
you know what it is possible then please

00:29:52,660 --> 00:29:59,770
up mccreight an old extension all other

00:29:54,250 --> 00:30:02,580
to the slides alright so in case things

00:29:59,770 --> 00:30:06,720
go wrong with debugging which happens

00:30:02,580 --> 00:30:08,860
once in a while XD book actually will

00:30:06,720 --> 00:30:12,060
allows you to actually log all

00:30:08,860 --> 00:30:17,230
communications PDT burger and the ID and

00:30:12,060 --> 00:30:19,060
it also tells tells you about connection

00:30:17,230 --> 00:30:20,350
errors then it came of connection IP

00:30:19,060 --> 00:30:22,870
address or report and things like that

00:30:20,350 --> 00:30:26,800
this is kind of handy very recently

00:30:22,870 --> 00:30:27,600
added another bone that checks for sa

00:30:26,800 --> 00:30:29,520
Linux

00:30:27,600 --> 00:30:33,120
so as I Linux is like the level security

00:30:29,520 --> 00:30:36,330
tool that prevents things for example

00:30:33,120 --> 00:30:38,580
your web server connecting two ports for

00:30:36,330 --> 00:30:41,580
example your are you listening on port

00:30:38,580 --> 00:30:44,429
9000 50 connections and will not give

00:30:41,580 --> 00:30:46,620
you any money so I've no other an older

00:30:44,429 --> 00:30:48,570
extra checker that if it detects that

00:30:46,620 --> 00:30:52,049
the comic collection due to permission

00:30:48,570 --> 00:30:53,280
errors it will tell you why which means

00:30:52,049 --> 00:30:55,530
I don't get any more buttons anywhere

00:30:53,280 --> 00:30:57,600
well these the steering hit we'll see

00:30:55,530 --> 00:30:59,429
how it goes but it's actually really

00:30:57,600 --> 00:31:01,380
kinda had need to figure out when the

00:30:59,429 --> 00:31:04,530
debugging protocol works I'm also though

00:31:01,380 --> 00:31:06,090
I got people asking me well it seems the

00:31:04,530 --> 00:31:09,390
flexible connects to my debugger that

00:31:06,090 --> 00:31:12,360
more thing happens and that is never

00:31:09,390 --> 00:31:14,669
arrived ebooks faults it's always the IE

00:31:12,360 --> 00:31:17,100
just ignoring your request or doing

00:31:14,669 --> 00:31:19,320
random stuff that thing when you

00:31:17,100 --> 00:31:20,640
shouldn't be doing but I can prove that

00:31:19,320 --> 00:31:22,350
now with this diva blocks are also

00:31:20,640 --> 00:31:24,840
awesome please give me the salk I will

00:31:22,350 --> 00:31:26,400
cancel the X even start site is just

00:31:24,840 --> 00:31:29,940
working fighting each itself to support

00:31:26,400 --> 00:31:32,850
for your ID which is very often with

00:31:29,940 --> 00:31:36,090
these issues no that's their job that's

00:31:32,850 --> 00:31:37,830
the debug the debugger in fact so I also

00:31:36,090 --> 00:31:39,120
told don't want to talk about XD we're

00:31:37,830 --> 00:31:40,799
getting more for a moment of like to

00:31:39,120 --> 00:31:43,679
talk about something else first called

00:31:40,799 --> 00:31:46,440
violi and feel the easy it's an even

00:31:43,679 --> 00:31:48,659
Lowell ever even more low-level to that

00:31:46,440 --> 00:31:50,730
I've written to show information about

00:31:48,659 --> 00:31:53,909
PHP scripts and ends up to the level

00:31:50,730 --> 00:31:55,950
where it shows you every different

00:31:53,909 --> 00:31:58,409
execution unit and execution is PHP

00:31:55,950 --> 00:32:01,320
assembler sort of running in this

00:31:58,409 --> 00:32:02,789
runtime it's a type of extension it will

00:32:01,320 --> 00:32:04,559
show you information about functions

00:32:02,789 --> 00:32:09,870
methods things like that is probably

00:32:04,559 --> 00:32:11,400
better to just show it with us so if you

00:32:09,870 --> 00:32:13,200
have a function like this right I know

00:32:11,400 --> 00:32:16,950
it's very complicated its results of

00:32:13,200 --> 00:32:20,549
exceptions and it does this is by the

00:32:16,950 --> 00:32:23,549
way a function to show you well as can

00:32:20,549 --> 00:32:25,470
do having such a function that destroys

00:32:23,549 --> 00:32:28,440
random exceptions and capture them again

00:32:25,470 --> 00:32:31,809
all very practical

00:32:28,440 --> 00:32:33,730
with everyone so yeah this is function

00:32:31,809 --> 00:32:36,460
it defines free inscription three

00:32:33,730 --> 00:32:37,960
exceptions as a function that you give a

00:32:36,460 --> 00:32:41,110
number and depending on the number tros

00:32:37,960 --> 00:32:43,780
a separate exception added to sort of

00:32:41,110 --> 00:32:48,220
stuff like calculating 5 times 3 2 to

00:32:43,780 --> 00:32:50,650
power some all right so when you were

00:32:48,220 --> 00:32:53,110
filled D on this you get output like

00:32:50,650 --> 00:32:55,690
this I am there's lots of lots of things

00:32:53,110 --> 00:32:57,610
I will skip about this bit first but

00:32:55,690 --> 00:32:59,919
what it starts doing it will tell the

00:32:57,610 --> 00:33:03,549
information about this specific function

00:32:59,919 --> 00:33:05,740
I don't know if you have ever seen us

00:33:03,549 --> 00:33:07,780
assembly this looks a little familiar if

00:33:05,740 --> 00:33:10,120
you've never seen that this probably

00:33:07,780 --> 00:33:11,740
doesn't look familiar but it actually

00:33:10,120 --> 00:33:13,630
shows you quite a lot of information

00:33:11,740 --> 00:33:16,690
about PHP see internal execution

00:33:13,630 --> 00:33:19,270
whatever kind of things at us so it has

00:33:16,690 --> 00:33:20,950
like the operation like X naught not

00:33:19,270 --> 00:33:23,530
meaning no operation basically just do

00:33:20,950 --> 00:33:27,039
anything receive is like receiving a

00:33:23,530 --> 00:33:29,710
argument into a function echo you can

00:33:27,039 --> 00:33:33,220
guess that echo something send for

00:33:29,710 --> 00:33:35,140
sending arguments to function no 4

00:33:33,220 --> 00:33:37,090
multiplied sign for assignments and

00:33:35,140 --> 00:33:39,370
things and so on and so on those are

00:33:37,090 --> 00:33:41,679
jump instructions like conditionals like

00:33:39,370 --> 00:33:44,650
if statement and things like that so if

00:33:41,679 --> 00:33:47,919
UD does a lot of analysis it also tries

00:33:44,650 --> 00:33:51,250
to figure out which parts of your code

00:33:47,919 --> 00:33:54,669
cannot be executed goes sometimes you

00:33:51,250 --> 00:33:56,530
get like a TRO accepted that will throw

00:33:54,669 --> 00:33:58,870
me inception and then immediately

00:33:56,530 --> 00:34:00,730
afterward PHP parts on scanner has

00:33:58,870 --> 00:34:02,770
created the jump instruction which you

00:34:00,730 --> 00:34:04,030
can never ever reach that's because the

00:34:02,770 --> 00:34:06,340
throws and except you throw an exception

00:34:04,030 --> 00:34:08,919
to code after the throat when that will

00:34:06,340 --> 00:34:12,460
be executed and VOD can find that

00:34:08,919 --> 00:34:15,669
information and shows that bit of code

00:34:12,460 --> 00:34:17,710
put a sign that is likely also going to

00:34:15,669 --> 00:34:20,290
be one at the end of the function nope

00:34:17,710 --> 00:34:24,190
not on this often but as a few cases

00:34:20,290 --> 00:34:28,300
right as happens here if you ever used

00:34:24,190 --> 00:34:30,220
an phpunit this code coverage help such

00:34:28,300 --> 00:34:33,700
a show of hands how many additional

00:34:30,220 --> 00:34:35,669
coverage I phpunit will tell you which

00:34:33,700 --> 00:34:37,829
lines of code

00:34:35,669 --> 00:34:40,649
get all three weeks Eden and that is

00:34:37,829 --> 00:34:42,629
information provided by X ebook now the

00:34:40,649 --> 00:34:45,270
reason one getting at this is because

00:34:42,629 --> 00:34:48,210
coding / just involves your magic bullet

00:34:45,270 --> 00:34:49,679
number seen a hundred percent doesn't

00:34:48,210 --> 00:34:51,299
actually necessarily mean that you've

00:34:49,679 --> 00:34:55,020
covered all of you code in all of your

00:34:51,299 --> 00:34:56,730
methods alright so feel the conscript

00:34:55,020 --> 00:34:58,559
like this big graph and follows whatever

00:34:56,730 --> 00:35:00,089
you can do there anything concerns I'll

00:34:58,559 --> 00:35:02,430
skip over that for now but I'm like a

00:35:00,089 --> 00:35:04,549
backwards right so let me illustrate

00:35:02,430 --> 00:35:08,640
what I just said about coke over it is

00:35:04,549 --> 00:35:10,440
slightly simple example so if I have to

00:35:08,640 --> 00:35:11,790
function CI function called loopy and

00:35:10,440 --> 00:35:13,819
I'm function called Ethan else I'm

00:35:11,790 --> 00:35:16,500
forget forgetting the blue peacoat and

00:35:13,819 --> 00:35:17,880
if it can't even else first for true and

00:35:16,500 --> 00:35:20,069
damaged halls and then secondly which

00:35:17,880 --> 00:35:21,329
falls and then were true what will this

00:35:20,069 --> 00:35:23,910
show for the code coverage of the

00:35:21,329 --> 00:35:25,500
if-then-else method you'll you expect it

00:35:23,910 --> 00:35:28,109
to show every single line right because

00:35:25,500 --> 00:35:31,770
in the first instance but true true is

00:35:28,109 --> 00:35:35,130
true and B is false it will see if a

00:35:31,770 --> 00:35:37,890
full stream which means it will then hit

00:35:35,130 --> 00:35:41,549
be recorded as it has a headline it's

00:35:37,890 --> 00:35:43,020
true so echo ax was also covered yeah it

00:35:41,549 --> 00:35:45,450
and wrap the bracelet didn't think like

00:35:43,020 --> 00:35:46,920
that it B is false then this line will

00:35:45,450 --> 00:35:49,740
still be hit because the check is still

00:35:46,920 --> 00:35:52,290
dome with echo be it isn't being

00:35:49,740 --> 00:35:54,869
executed because b is false and then

00:35:52,290 --> 00:35:57,150
embrace will not be covered here and

00:35:54,869 --> 00:36:00,030
then in the second case it's fits around

00:35:57,150 --> 00:36:01,430
right but I haven't tested every

00:36:00,030 --> 00:36:04,859
possible path through your coat I

00:36:01,430 --> 00:36:07,230
haven't tested the case where a is true

00:36:04,859 --> 00:36:09,630
and B is true and the case where a is

00:36:07,230 --> 00:36:11,670
false and beer sauce so I haven't

00:36:09,630 --> 00:36:12,720
actually gone one hundred percent coach

00:36:11,670 --> 00:36:14,720
coach I've done one hundred percent

00:36:12,720 --> 00:36:17,010
light heart which is a different number

00:36:14,720 --> 00:36:19,559
so supposed to him back on the altar of

00:36:17,010 --> 00:36:21,119
phpunit he has been bugging me for about

00:36:19,559 --> 00:36:23,460
a year and a half to do something about

00:36:21,119 --> 00:36:27,000
this and I think it might have been more

00:36:23,460 --> 00:36:28,109
than a year in a half action to

00:36:27,000 --> 00:36:31,530
implement something called path

00:36:28,109 --> 00:36:33,150
cooperation now VOD and XD Bookshare

00:36:31,530 --> 00:36:34,890
quite a bit of code where does all the

00:36:33,150 --> 00:36:37,589
analysis of which parts of possible

00:36:34,890 --> 00:36:40,470
through functions and I'm like

00:36:37,589 --> 00:36:42,180
experimenting those kinds of things in

00:36:40,470 --> 00:36:43,520
Philly because it's a lot smaller code

00:36:42,180 --> 00:36:46,460
base is the only thing it really

00:36:43,520 --> 00:36:49,160
so what I thought oh I have some branch

00:36:46,460 --> 00:36:51,590
and path analysis to fielding so that's

00:36:49,160 --> 00:36:54,560
what I did I mean you still get this is

00:36:51,590 --> 00:36:57,200
jesse ethan else function it's a yeah it

00:36:54,560 --> 00:37:01,370
has like it reads it two arguments it is

00:36:57,200 --> 00:37:05,090
then do a jump on when the compels

00:37:01,370 --> 00:37:08,120
variables so that refers to a here when

00:37:05,090 --> 00:37:09,980
it is true basically so our granite is

00:37:08,120 --> 00:37:12,860
false it jumps to instruction eight

00:37:09,980 --> 00:37:16,240
which is then going to be the next safe

00:37:12,860 --> 00:37:20,270
statement is true that it will continue

00:37:16,240 --> 00:37:22,810
with the next up front here the psycho

00:37:20,270 --> 00:37:26,390
and then does it jump to offer and eight

00:37:22,810 --> 00:37:29,300
as you can see the jump with number

00:37:26,390 --> 00:37:31,910
seven here jumps to operation eight

00:37:29,300 --> 00:37:33,620
which is the next one that's sort of

00:37:31,910 --> 00:37:36,560
kind of pointless of course right but

00:37:33,620 --> 00:37:38,420
PHP scanner parts of dozens optimize

00:37:36,560 --> 00:37:40,460
this code it goes it takes time to

00:37:38,420 --> 00:37:41,860
optimize the code and if you have videos

00:37:40,460 --> 00:37:43,730
on every request it's kind of pointless

00:37:41,860 --> 00:37:48,710
especially if it's something simple like

00:37:43,730 --> 00:37:51,160
this and the zend up cash or cash as a

00:37:48,710 --> 00:37:54,740
disco right now I think rule also myself

00:37:51,160 --> 00:37:56,660
things like this but all I was trying to

00:37:54,740 --> 00:37:58,520
gather is that at the end you can see

00:37:56,660 --> 00:38:01,160
five different branches through that are

00:37:58,520 --> 00:38:04,070
in a coconut the first bits is basically

00:38:01,160 --> 00:38:06,710
receiving the variables the second

00:38:04,070 --> 00:38:09,680
branches if a equals true the third one

00:38:06,710 --> 00:38:11,810
is if a equals false or a a is false and

00:38:09,680 --> 00:38:14,600
that's another brand for be true and be

00:38:11,810 --> 00:38:17,510
false and then what it also tells you is

00:38:14,600 --> 00:38:20,720
which possible paths are there through

00:38:17,510 --> 00:38:22,190
dysfunction which is for right you have

00:38:20,720 --> 00:38:24,470
the first pitch which is sheva all of

00:38:22,190 --> 00:38:26,960
them then you can he eat a go left or

00:38:24,470 --> 00:38:29,240
right weather is through very difficult

00:38:26,960 --> 00:38:30,740
to explain so let me show you in a graph

00:38:29,240 --> 00:38:33,740
that's right rate it up in the first

00:38:30,740 --> 00:38:37,160
place so those are the art of the

00:38:33,740 --> 00:38:38,900
options right so the first of all is you

00:38:37,160 --> 00:38:42,290
go this one then follow all the way

00:38:38,900 --> 00:38:44,180
there the second one is you follow this

00:38:42,290 --> 00:38:46,910
one in and this is when you skip and

00:38:44,180 --> 00:38:49,640
then you can skip this one full of this

00:38:46,910 --> 00:38:51,819
one as well skip this one and skip this

00:38:49,640 --> 00:38:54,200
so those are the four options and

00:38:51,819 --> 00:38:55,369
fielding now I tell you all the

00:38:54,200 --> 00:38:58,430
different parts through this and it

00:38:55,369 --> 00:39:01,039
looks daunting yeah so this is the

00:38:58,430 --> 00:39:02,960
analysis I'll get back to this again in

00:39:01,039 --> 00:39:06,140
a moment check the time you'll have a

00:39:02,960 --> 00:39:10,190
minute alright so something that is

00:39:06,140 --> 00:39:12,170
currently new in PHP 5 6 is PGP dvg and

00:39:10,190 --> 00:39:13,970
it's a it's a little bit of a cross

00:39:12,170 --> 00:39:18,339
between nights debug does for single

00:39:13,970 --> 00:39:18,339
step debugging and most VOD does for

00:39:18,730 --> 00:39:25,339
really low-level instructions so PHP DVD

00:39:23,059 --> 00:39:29,779
is a tool that is useful for PHP

00:39:25,339 --> 00:39:32,690
language developers more so as probably

00:39:29,779 --> 00:39:34,460
did you hear in the room and yeah it is

00:39:32,690 --> 00:39:36,140
much more focus and does it show so much

00:39:34,460 --> 00:39:38,240
more low level stuff it allows you to do

00:39:36,140 --> 00:39:40,160
single step in all those op codes which

00:39:38,240 --> 00:39:44,119
activate doesn't do and things like that

00:39:40,160 --> 00:39:45,559
I have a video of this how does words so

00:39:44,119 --> 00:39:46,940
will show I will not show you the whole

00:39:45,559 --> 00:39:48,980
thing we just show you a little bit so

00:39:46,940 --> 00:39:51,140
the way how this works is that instead

00:39:48,980 --> 00:39:53,450
of calling PHP has to call ph bheegi

00:39:51,140 --> 00:39:56,000
bheegi over combine and then which is

00:39:53,450 --> 00:39:58,339
script name and then let's show you some

00:39:56,000 --> 00:40:00,200
come on my stuff so after that you got a

00:39:58,339 --> 00:40:04,099
prompt and then you can execute some

00:40:00,200 --> 00:40:05,930
things okay i misspelled break there so

00:40:04,099 --> 00:40:08,359
I set a breakpoint online 69 and it

00:40:05,930 --> 00:40:13,119
sells you don't sell each I've run it

00:40:08,359 --> 00:40:15,740
done once you wait you rape someone and

00:40:13,119 --> 00:40:18,079
then of course a breakpoint hits right

00:40:15,740 --> 00:40:20,809
so it stops on this line tells you the

00:40:18,079 --> 00:40:23,079
line and some things around it of course

00:40:20,809 --> 00:40:26,359
I want to show all the variables so I

00:40:23,079 --> 00:40:28,819
personal to show the back-trace and then

00:40:26,359 --> 00:40:32,180
the info v I show all the variable

00:40:28,819 --> 00:40:33,799
information now it shows like internal

00:40:32,180 --> 00:40:36,920
memory addresses that you probably don't

00:40:33,799 --> 00:40:39,650
find very interesting it shows a number

00:40:36,920 --> 00:40:42,140
which i keep don't know what it means to

00:40:39,650 --> 00:40:44,299
be honest it shows you to type in a

00:40:42,140 --> 00:40:45,650
variable name and if it's an object

00:40:44,299 --> 00:40:48,529
shows you the club but it doesn't show

00:40:45,650 --> 00:40:50,299
you any of the values I mean it is

00:40:48,529 --> 00:40:52,640
possible to actually get into that but

00:40:50,299 --> 00:40:55,789
we use it to that like a real dinner in

00:40:52,640 --> 00:40:59,859
that case so just things like that it is

00:40:55,789 --> 00:41:02,539
actually quite powerful but yeah I

00:40:59,859 --> 00:41:03,230
played so much better that I know all

00:41:02,539 --> 00:41:05,180
the ins

00:41:03,230 --> 00:41:08,420
but sort is something if you're using

00:41:05,180 --> 00:41:10,910
PHP 56 to have platelets I don't think

00:41:08,420 --> 00:41:11,960
it's that to replace X Libra cannon

00:41:10,910 --> 00:41:13,880
single stop debugging weather's

00:41:11,960 --> 00:41:16,220
definitely pinterest and how PHP works

00:41:13,880 --> 00:41:18,290
definitely cool too and look at all

00:41:16,220 --> 00:41:19,910
right so I mentioned the coke over

00:41:18,290 --> 00:41:21,640
traditional so I don't have to show you

00:41:19,910 --> 00:41:27,050
this one this is just a slide showing

00:41:21,640 --> 00:41:29,930
that how Beach the unit internally

00:41:27,050 --> 00:41:31,520
actually works so it uses a package

00:41:29,930 --> 00:41:33,590
called PHP code coverage that you can

00:41:31,520 --> 00:41:35,780
install its composure so how this works

00:41:33,590 --> 00:41:37,609
is that you started the contacts you

00:41:35,780 --> 00:41:39,619
have done to test so the first that is

00:41:37,609 --> 00:41:42,080
covert start and I call it test coverage

00:41:39,619 --> 00:41:45,950
one I call my function with true and

00:41:42,080 --> 00:41:47,840
false and then stop this script

00:41:45,950 --> 00:41:51,710
execution and do this once more for your

00:41:47,840 --> 00:41:54,140
overall the case when i run this process

00:41:51,710 --> 00:41:58,460
will get me a nice HTML report that

00:41:54,140 --> 00:42:00,410
shows something like this everything

00:41:58,460 --> 00:42:02,720
that's grain-based cleans this line has

00:42:00,410 --> 00:42:04,369
been hit vil executing it so this says

00:42:02,720 --> 00:42:05,480
hey hundred percent go comfort but i'm

00:42:04,369 --> 00:42:11,180
just showing you of course that is not

00:42:05,480 --> 00:42:13,070
quite case so there are some new magic

00:42:11,180 --> 00:42:15,800
sauce in the upcoming XD lauren seats

00:42:13,070 --> 00:42:17,390
has some magic sauce that next we will

00:42:15,800 --> 00:42:19,250
do a little bit more analysis it will

00:42:17,390 --> 00:42:20,390
also try to figure out which branches

00:42:19,250 --> 00:42:22,220
and with the thoughts I think fall out

00:42:20,390 --> 00:42:24,500
it is not something that's done by

00:42:22,220 --> 00:42:26,210
default because it changes the internet

00:42:24,500 --> 00:42:29,060
granular that also making quite a bit

00:42:26,210 --> 00:42:30,859
slower I realized code coverage already

00:42:29,060 --> 00:42:32,420
makes things quadrille slower but it

00:42:30,859 --> 00:42:36,109
does do a lot of stuff so complete

00:42:32,420 --> 00:42:37,820
avoidance and annoyingly and all those

00:42:36,109 --> 00:42:40,250
boxing has been bugging me for years to

00:42:37,820 --> 00:42:42,140
amanda's he hasn't activated PHP code

00:42:40,250 --> 00:42:44,390
coverage to me useless is new

00:42:42,140 --> 00:42:46,910
information yet but hopefully he gets

00:42:44,390 --> 00:42:48,350
there in a moment so i can show you sort

00:42:46,910 --> 00:42:51,830
of all of this and show you mock up

00:42:48,350 --> 00:42:53,869
without good luck anyway the outputs

00:42:51,830 --> 00:42:55,730
that XD vehicles refer to that is oh

00:42:53,869 --> 00:42:58,010
this looks very familiar it looks like a

00:42:55,730 --> 00:42:59,600
pulse and a branches on VOD but the

00:42:58,010 --> 00:43:02,000
interesting thing about this is Alexis

00:42:59,600 --> 00:43:05,900
tells you whether the branch and the

00:43:02,000 --> 00:43:07,610
pulse have been hit this x1 with an axe

00:43:05,900 --> 00:43:10,910
in there is about

00:43:07,610 --> 00:43:13,940
so number goes and it shows you that he

00:43:10,910 --> 00:43:16,790
asked me not being hit and the two hits

00:43:13,940 --> 00:43:18,610
are the pulse and being head so let's

00:43:16,790 --> 00:43:22,250
look at this how does looks in a graph

00:43:18,610 --> 00:43:25,640
again this is something that's active XE

00:43:22,250 --> 00:43:28,730
build up correctly out good for him so

00:43:25,640 --> 00:43:30,560
you see the four different colors of

00:43:28,730 --> 00:43:32,990
lines are four possible problems where

00:43:30,560 --> 00:43:34,580
you go if its adult supplying it's the

00:43:32,990 --> 00:43:36,020
paw that hasn't been followed if it's a

00:43:34,580 --> 00:43:37,760
solid lines and Paul that has been

00:43:36,020 --> 00:43:39,920
followed and from here you can see that

00:43:37,760 --> 00:43:44,240
two of the four have been covered right

00:43:39,920 --> 00:43:45,830
and putting this information back into

00:43:44,240 --> 00:43:47,420
peach the unit will then tell you that

00:43:45,830 --> 00:43:51,160
you need to write even more test cases

00:43:47,420 --> 00:43:53,420
then you've already done so this is new

00:43:51,160 --> 00:43:55,370
hopefully we'll get some support and

00:43:53,420 --> 00:43:56,480
peach peacock over to enhance phpunit in

00:43:55,370 --> 00:43:58,880
the near future and I'm quite looking

00:43:56,480 --> 00:44:03,290
forward students and then good luck

00:43:58,880 --> 00:44:04,490
writing more test cases all right last

00:44:03,290 --> 00:44:07,550
thing I want to talk about which is

00:44:04,490 --> 00:44:10,730
basically the future and the future and

00:44:07,550 --> 00:44:13,490
is quite interesting because it's what I

00:44:10,730 --> 00:44:15,290
want to do is to have a debugger that

00:44:13,490 --> 00:44:19,580
allows you to go back in time as well as

00:44:15,290 --> 00:44:21,950
well go before some time just like

00:44:19,580 --> 00:44:25,250
showing the picture of the darkness all

00:44:21,950 --> 00:44:26,960
right so it is another one of those

00:44:25,250 --> 00:44:29,750
tracing formats that I've been working

00:44:26,960 --> 00:44:32,030
on so it is a a form of that's instead

00:44:29,750 --> 00:44:33,830
of dumping it in human readable text or

00:44:32,030 --> 00:44:35,810
computer readable text that you can

00:44:33,830 --> 00:44:38,750
easily pass or crazy asian all outputs

00:44:35,810 --> 00:44:40,880
it is another format that basically done

00:44:38,750 --> 00:44:44,720
jack all the stage of the execution of

00:44:40,880 --> 00:44:47,540
your script to a fault and then trace

00:44:44,720 --> 00:44:49,520
format number three so what a dumpster

00:44:47,540 --> 00:44:53,000
follow is something like this I know

00:44:49,520 --> 00:44:54,860
very low level binary stuff but it's

00:44:53,000 --> 00:44:57,140
sort of handy to do because you want to

00:44:54,860 --> 00:44:59,240
have compressed avila because you don't

00:44:57,140 --> 00:45:01,400
want under the 17 gigabytes of data

00:44:59,240 --> 00:45:03,680
every time you're in the script right so

00:45:01,400 --> 00:45:05,540
there's a few had our things it will

00:45:03,680 --> 00:45:07,190
store the fall contents in those files

00:45:05,540 --> 00:45:08,660
as own so for every fall is being

00:45:07,190 --> 00:45:12,940
executed will store it in the fall in a

00:45:08,660 --> 00:45:16,420
blog you can just about see the PHP tags

00:45:12,940 --> 00:45:18,190
and include he consider residence at the

00:45:16,420 --> 00:45:20,770
moment not yet compress that I'm going

00:45:18,190 --> 00:45:24,130
to do that is all I d axis basically

00:45:20,770 --> 00:45:26,020
mean need to fold the book that's all

00:45:24,130 --> 00:45:27,910
the things in there so that if you go

00:45:26,020 --> 00:45:29,859
into a function it will be created a

00:45:27,910 --> 00:45:32,349
record for that as well and for each of

00:45:29,859 --> 00:45:34,000
those it will also noted times them so

00:45:32,349 --> 00:45:40,180
does a few function accesses another

00:45:34,000 --> 00:45:42,460
foul like a foul being used so it's a

00:45:40,180 --> 00:45:44,470
function entry then the first thing in

00:45:42,460 --> 00:45:47,829
that function does is do require that of

00:45:44,470 --> 00:45:50,319
course loads another foul that gets them

00:45:47,829 --> 00:45:53,200
to fall so source think we sequentially

00:45:50,319 --> 00:45:54,670
as they happen and so on and so on some

00:45:53,200 --> 00:45:56,890
more functions being calls and more

00:45:54,670 --> 00:45:58,690
functions and then at the end it will

00:45:56,890 --> 00:46:01,510
have like a foul table so those numbers

00:45:58,690 --> 00:46:04,020
at false facing to make sure that I can

00:46:01,510 --> 00:46:06,430
store things as compresses like that

00:46:04,020 --> 00:46:08,290
looks really complicated it's definitely

00:46:06,430 --> 00:46:12,190
not finished yet so that's one going on

00:46:08,290 --> 00:46:14,040
just quickly but in the end the ID what

00:46:12,190 --> 00:46:16,359
it does is that it creates this

00:46:14,040 --> 00:46:18,359
following this just like a trace all

00:46:16,359 --> 00:46:22,300
with more information even in there and

00:46:18,359 --> 00:46:23,890
in order to make use of that i'm going

00:46:22,300 --> 00:46:26,770
to write like a little wrapper think

00:46:23,890 --> 00:46:28,990
that basically acts like egg debug but

00:46:26,770 --> 00:46:31,079
it isn't I might put it in the extension

00:46:28,990 --> 00:46:33,790
haven't quite forgot yet how I do that

00:46:31,079 --> 00:46:35,470
that's reach this file that contains

00:46:33,790 --> 00:46:36,970
every single state that happens during

00:46:35,470 --> 00:46:39,400
the execution of the script including

00:46:36,970 --> 00:46:40,810
all the source make it actually really

00:46:39,400 --> 00:46:42,970
quite handy that if you need to support

00:46:40,810 --> 00:46:45,190
a software system that has been

00:46:42,970 --> 00:46:46,839
installed by your clients this don't

00:46:45,190 --> 00:46:49,780
know some bits of PHP and things like

00:46:46,839 --> 00:46:51,730
that they can create search FL ship it

00:46:49,780 --> 00:46:54,040
to you and you can see exactly what

00:46:51,730 --> 00:46:56,530
happened every single time you can go

00:46:54,040 --> 00:46:58,980
forward backward sometime see which

00:46:56,530 --> 00:47:01,930
variables have changed better change

00:46:58,980 --> 00:47:04,450
things like that I think that's really

00:47:01,930 --> 00:47:08,260
quite useful to have it is a whole lot

00:47:04,450 --> 00:47:11,380
of work to do though and yeah of course

00:47:08,260 --> 00:47:13,630
I need to get the IDS implements those

00:47:11,380 --> 00:47:15,819
new commands for the protocol at some

00:47:13,630 --> 00:47:17,380
point so I'm quite excited by this I

00:47:15,819 --> 00:47:18,380
really want to continue working with

00:47:17,380 --> 00:47:21,440
that but then

00:47:18,380 --> 00:47:23,180
HP seven is happening and HP sevens

00:47:21,440 --> 00:47:25,820
internal structures are so much

00:47:23,180 --> 00:47:28,880
different from five days I have to

00:47:25,820 --> 00:47:30,560
rewrite exhibit hall first I'm just

00:47:28,880 --> 00:47:32,260
going to take me some time and by

00:47:30,560 --> 00:47:35,120
sometime I'd probably mean months today

00:47:32,260 --> 00:47:37,430
all right i have about two and a half

00:47:35,120 --> 00:47:40,040
minutes left oh and I need to finish the

00:47:37,430 --> 00:47:42,260
temperature all right so I'm going to

00:47:40,040 --> 00:47:45,170
publish a slice here if you scan this QR

00:47:42,260 --> 00:47:46,460
code you will also go to the thing if

00:47:45,170 --> 00:47:48,410
you don't want to remember to think you

00:47:46,460 --> 00:47:50,330
can go to go to this one where you will

00:47:48,410 --> 00:47:54,800
then also find this link like lots of

00:47:50,330 --> 00:47:56,840
links slightly internets if you have any

00:47:54,800 --> 00:47:59,150
questions you can email me that of

00:47:56,840 --> 00:48:02,750
course we have a few minutes to ask me

00:47:59,150 --> 00:48:05,990
right now so and happy transfer are

00:48:02,750 --> 00:48:10,100
there floating microphones that's one

00:48:05,990 --> 00:48:14,450
day there's a question right there the

00:48:10,100 --> 00:48:16,840
forums yes identify or instead can we

00:48:14,450 --> 00:48:16,840
passed out

00:48:20,120 --> 00:48:26,900
did you find a way did you have a

00:48:23,630 --> 00:48:31,040
question yes oh yes a question that's

00:48:26,900 --> 00:48:34,670
sorry oh the mine wasn't working that's

00:48:31,040 --> 00:48:43,850
the ticket I don't hear that because the

00:48:34,670 --> 00:48:45,290
microphone isn't working so the question

00:48:43,850 --> 00:48:48,320
here was here I'll just repeat the

00:48:45,290 --> 00:48:52,910
question does pc-7 not provide any

00:48:48,320 --> 00:48:55,640
native debugging and to do this no there

00:48:52,910 --> 00:48:58,760
was some discussions are getting PHP dbg

00:48:55,640 --> 00:49:02,420
up to state where it was like a fully

00:48:58,760 --> 00:49:06,910
fledged debugger replacing if t-bone but

00:49:02,420 --> 00:49:09,440
then how do I say say this in a

00:49:06,910 --> 00:49:12,040
politically correct way there was some

00:49:09,440 --> 00:49:15,590
discussion about doing that Bolivians I

00:49:12,040 --> 00:49:17,240
thought me and our altars thought that

00:49:15,590 --> 00:49:22,430
maybe that's not such a good a day so

00:49:17,240 --> 00:49:25,700
they ended up not doing it thus I have

00:49:22,430 --> 00:49:29,480
to say about it yes rewriting Abby

00:49:25,700 --> 00:49:31,730
burgers in bowl of work over the answer

00:49:29,480 --> 00:49:33,620
that right you kind of microphone yes

00:49:31,730 --> 00:49:35,840
hey first of all thank you very much for

00:49:33,620 --> 00:49:40,520
this all hand XD buggy assaults it's

00:49:35,840 --> 00:49:43,010
amazing thanks in terms of the after

00:49:40,520 --> 00:49:44,840
buggy with that with that cover all

00:49:43,010 --> 00:49:47,420
control structures because it seems to

00:49:44,840 --> 00:49:49,460
me it would very quickly become infinite

00:49:47,420 --> 00:49:53,050
in terms of the past that you can go

00:49:49,460 --> 00:49:54,860
through yes so I know so does it include

00:49:53,050 --> 00:49:58,160
polymorphism in terms of different

00:49:54,860 --> 00:50:00,290
objects you parsley to a function ok so

00:49:58,160 --> 00:50:03,170
did you've heard a question so that's

00:50:00,290 --> 00:50:04,520
the repeater that's great so first you

00:50:03,170 --> 00:50:07,250
talk about falling more present no

00:50:04,520 --> 00:50:09,260
doesn't really do that because it works

00:50:07,250 --> 00:50:11,810
on a massive level only if you call

00:50:09,260 --> 00:50:14,660
function e jump out of the context of

00:50:11,810 --> 00:50:16,580
this function so it will only consider

00:50:14,660 --> 00:50:18,830
the pulse in that function we will

00:50:16,580 --> 00:50:20,420
consider that the pulse in each function

00:50:18,830 --> 00:50:20,710
separately so you don't have to deal

00:50:20,420 --> 00:50:24,790
with

00:50:20,710 --> 00:50:28,960
morphism reading and the first part of

00:50:24,790 --> 00:50:31,570
the question was about whether it covers

00:50:28,960 --> 00:50:34,210
all control structures so yes it will do

00:50:31,570 --> 00:50:36,070
everything where there's a logical jump

00:50:34,210 --> 00:50:39,040
info which is throwing catching

00:50:36,070 --> 00:50:42,310
exceptions for loops for each loops if

00:50:39,040 --> 00:50:44,800
then else while all the structures and

00:50:42,310 --> 00:50:46,780
yes of course if you have lots of those

00:50:44,800 --> 00:50:49,240
control structures in there he end up

00:50:46,780 --> 00:50:51,300
it's like an exponential waved amounts

00:50:49,240 --> 00:50:54,849
of thousand can get really cooked and

00:50:51,300 --> 00:50:56,530
yes that can get problematic but it only

00:50:54,849 --> 00:50:59,380
really gets problematic menu functions

00:50:56,530 --> 00:51:01,000
on too large in the first place which

00:50:59,380 --> 00:51:04,000
basically I would probably just

00:51:01,000 --> 00:51:06,369
refactoring first and yeah if that is

00:51:04,000 --> 00:51:08,710
the outcome of even testing them I don't

00:51:06,369 --> 00:51:10,330
think that's a bad outcome i have tested

00:51:08,710 --> 00:51:13,119
as or some really hairy coats that

00:51:10,330 --> 00:51:14,680
actually end up crashing it because it

00:51:13,119 --> 00:51:18,520
was so many different parts that look

00:51:14,680 --> 00:51:21,010
like four and a half billion and are

00:51:18,520 --> 00:51:23,020
before I ran out of memory it just

00:51:21,010 --> 00:51:26,200
crashed because of stack up so now

00:51:23,020 --> 00:51:27,910
there's a limit soon yeah imagine that

00:51:26,200 --> 00:51:33,810
is a problem the exponential issue

00:51:27,910 --> 00:51:37,150
because anything else no more questions

00:51:33,810 --> 00:51:38,890
well thanks very much I'm around still

00:51:37,150 --> 00:51:40,750
for a sort of conferences all probably

00:51:38,890 --> 00:51:43,150
at the social so so if you have any

00:51:40,750 --> 00:51:44,710
questions or on top thing if notes I

00:51:43,150 --> 00:51:46,060
think there's a refreshment break and

00:51:44,710 --> 00:51:49,260
then there's one last lot of this

00:51:46,060 --> 00:51:49,260
conference so

00:51:52,059 --> 00:51:54,119
you

00:52:05,160 --> 00:52:07,220

YouTube URL: https://www.youtube.com/watch?v=6kA4ORD9ruA


