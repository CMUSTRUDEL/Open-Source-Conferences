Title: Anne-Julia Scheuermann - Naming Things
Publication date: 2015-04-02
Playlist: PHP UK Conference 2015
Description: 
	For us developers it is a constant struggle to find the right words to describe things. Naming classes, functions and variables correctly and giving them context helps to create a meaning, and to convey that meaning to other developers. In this talk we will discuss guidelines to find good names for the building blocks we use, to aid in our daily challenge to transport our knowledge by leveraging well worded sourcecode.

https://speakerdeck.com/dazz/naming-things
Captions: 
	00:00:00,000 --> 00:00:02,060
you

00:00:05,330 --> 00:00:13,070
hi my name is Anna and today I'm going

00:00:09,980 --> 00:00:16,390
to talk about naming things and I call

00:00:13,070 --> 00:00:19,550
it the art of writing meaningful code

00:00:16,390 --> 00:00:22,130
I'm so I said if my name is Anna you

00:00:19,550 --> 00:00:23,990
know Sherman you can find me on get up

00:00:22,130 --> 00:00:27,619
and you can find me on Twitter I'm

00:00:23,990 --> 00:00:30,560
naming things in PHP for mostly ten

00:00:27,619 --> 00:00:33,320
years now I've seen most of what I will

00:00:30,560 --> 00:00:37,130
show you in a few minutes and I'm a tech

00:00:33,320 --> 00:00:40,010
lead at imagining easy solutions and we

00:00:37,130 --> 00:00:43,399
create solutions I'm not reading at all

00:00:40,010 --> 00:00:46,429
but we have applications for students

00:00:43,399 --> 00:00:52,010
and teachers in America so we help them

00:00:46,429 --> 00:00:55,789
writing their papers and yeah so I want

00:00:52,010 --> 00:00:59,059
to start with a question why are we

00:00:55,789 --> 00:01:04,989
naming things and please you go any

00:00:59,059 --> 00:01:04,989
ideas what's what's why are you here

00:01:05,650 --> 00:01:19,970
very good very good

00:01:13,990 --> 00:01:24,500
yes most definitely you will thank

00:01:19,970 --> 00:01:27,890
yourself later okay good so I want to go

00:01:24,500 --> 00:01:32,570
back in programming history when we had

00:01:27,890 --> 00:01:35,150
assembly and we had it consisted of two

00:01:32,570 --> 00:01:37,670
and three letters statements and they

00:01:35,150 --> 00:01:40,520
were saying like JMP for junk to a

00:01:37,670 --> 00:01:43,670
different line or MV for a move

00:01:40,520 --> 00:01:46,250
somewhere else and then when you when

00:01:43,670 --> 00:01:48,230
you would think yourself in that time

00:01:46,250 --> 00:01:50,900
and you would write a huge application

00:01:48,230 --> 00:01:53,570
and it only consisted of those three

00:01:50,900 --> 00:01:55,310
letters statements and then you start

00:01:53,570 --> 00:01:58,640
your day you want to add a feature and

00:01:55,310 --> 00:02:01,220
and then the then you want to go for

00:01:58,640 --> 00:02:03,170
lunch and you would leave your desk and

00:02:01,220 --> 00:02:06,110
you come back to it and then you would

00:02:03,170 --> 00:02:07,670
remember all the workflow that you went

00:02:06,110 --> 00:02:09,590
through to that point where you've

00:02:07,670 --> 00:02:12,319
wanted to add the feature and if you

00:02:09,590 --> 00:02:14,600
were lucky someone added comments to

00:02:12,319 --> 00:02:17,690
that line that you were working at and

00:02:14,600 --> 00:02:18,810
if not you would need to go through all

00:02:17,690 --> 00:02:22,920
those things

00:02:18,810 --> 00:02:25,830
again and this was very tedious after

00:02:22,920 --> 00:02:28,770
that I think they invented C languages

00:02:25,830 --> 00:02:32,610
where they had variables and functions

00:02:28,770 --> 00:02:35,489
and classes and I want to ask another

00:02:32,610 --> 00:02:38,250
question was that the beginning of our

00:02:35,489 --> 00:02:39,269
struggle of naming things finding good

00:02:38,250 --> 00:02:45,650
names for them

00:02:39,269 --> 00:02:45,650
I want to go even back further in time

00:02:45,890 --> 00:02:52,530
when our ancestors were sitting in the

00:02:49,860 --> 00:02:57,209
cave and they needed to hunt for food

00:02:52,530 --> 00:02:59,670
and they went out to the fields and so a

00:02:57,209 --> 00:03:02,340
small group of hunters went out to the

00:02:59,670 --> 00:03:06,000
field and they wanted to like hum did

00:03:02,340 --> 00:03:09,480
you and there were other predators say

00:03:06,000 --> 00:03:11,370
like a tiger and they were hunting and

00:03:09,480 --> 00:03:13,790
there was also the tiger and one of the

00:03:11,370 --> 00:03:17,790
hunters saw the tiger and he wanted to

00:03:13,790 --> 00:03:19,530
to to alarm the other hunters that

00:03:17,790 --> 00:03:23,760
there's a dangerous animal and that

00:03:19,530 --> 00:03:26,459
wants to eat them so he they didn't have

00:03:23,760 --> 00:03:30,019
a real language yet so he couldn't

00:03:26,459 --> 00:03:32,250
really inform the others and very sadly

00:03:30,019 --> 00:03:32,790
one of the hunters got eaten by the

00:03:32,250 --> 00:03:38,310
tiger

00:03:32,790 --> 00:03:41,670
and they went back to the cave and then

00:03:38,310 --> 00:03:43,920
they they were thinking about maybe so

00:03:41,670 --> 00:03:47,069
that's what I thinking that that's what

00:03:43,920 --> 00:03:49,410
I'm thinking what they were doing they

00:03:47,069 --> 00:03:54,540
they agreed that they need to find

00:03:49,410 --> 00:03:57,870
something how to name it and we call it

00:03:54,540 --> 00:04:00,329
rock art today right so they painted

00:03:57,870 --> 00:04:03,480
animals and things that they wanted to

00:04:00,329 --> 00:04:06,389
name at the cave walls and then they

00:04:03,480 --> 00:04:09,720
pointed at it and said this is a tiger

00:04:06,389 --> 00:04:12,299
and when I'm yelling tiger I mean this

00:04:09,720 --> 00:04:17,100
animal and then it's dangerous and then

00:04:12,299 --> 00:04:18,930
you maybe want to run so again they went

00:04:17,100 --> 00:04:22,070
out hunting they had the name for the

00:04:18,930 --> 00:04:25,380
tiger and they really had no luck then

00:04:22,070 --> 00:04:29,610
there was a tiger again and they were

00:04:25,380 --> 00:04:32,319
screaming tiger tiger and everyone was

00:04:29,610 --> 00:04:35,249
running in different directions

00:04:32,319 --> 00:04:38,740
because they were missing still

00:04:35,249 --> 00:04:42,639
something and that was very important

00:04:38,740 --> 00:04:44,770
and so one of the hunters got eaten

00:04:42,639 --> 00:04:47,529
again and they came back and then they

00:04:44,770 --> 00:04:52,569
were singing again and I can tell you

00:04:47,529 --> 00:04:56,949
now what I think was missing it it's a

00:04:52,569 --> 00:05:00,279
context because what and that is also

00:04:56,949 --> 00:05:04,210
what we as developers want to create we

00:05:00,279 --> 00:05:06,219
want to create meaning so what we want

00:05:04,210 --> 00:05:09,339
what we want to achieve is that we want

00:05:06,219 --> 00:05:12,129
to put a thing into a context to leave

00:05:09,339 --> 00:05:15,159
some meaning for other developers

00:05:12,129 --> 00:05:17,379
because we cannot like sit next to them

00:05:15,159 --> 00:05:19,779
all the time point at stuff and they can

00:05:17,379 --> 00:05:26,409
see us so we can explain what that thing

00:05:19,779 --> 00:05:33,129
and that context means so over the years

00:05:26,409 --> 00:05:36,999
I when I was in my code I created a

00:05:33,129 --> 00:05:40,990
small list of things that that I

00:05:36,999 --> 00:05:45,159
discovered and this is what I'm going to

00:05:40,990 --> 00:05:52,680
show you now and I'm starting with a few

00:05:45,159 --> 00:05:52,680
more general things and yeah so let's go

00:05:53,430 --> 00:06:05,889
avoid abbreviations I'm never saying

00:06:01,889 --> 00:06:08,379
cuddle or interval I'm always saying

00:06:05,889 --> 00:06:10,809
manager or a controller when I'm

00:06:08,379 --> 00:06:14,379
speaking to my colleagues I'm not using

00:06:10,809 --> 00:06:16,869
the abbreviation my head is never using

00:06:14,379 --> 00:06:21,459
the abbreviation I'm always speaking it

00:06:16,869 --> 00:06:24,129
out and leaving out a few letters is not

00:06:21,459 --> 00:06:26,769
improving performance it's only costing

00:06:24,129 --> 00:06:29,529
the brain power of the developer because

00:06:26,769 --> 00:06:37,270
he needs to translate it into the real

00:06:29,529 --> 00:06:40,480
world then

00:06:37,270 --> 00:06:44,850
I'm always trying to differentiate

00:06:40,480 --> 00:06:50,770
between those abbreviations and acronyms

00:06:44,850 --> 00:06:53,140
was writing acronyms and uppercase so

00:06:50,770 --> 00:07:00,580
because each letter gets speaking on its

00:06:53,140 --> 00:07:03,820
own like UFO or UUID so it's making it

00:07:00,580 --> 00:07:12,640
very easy to read it the way I will

00:07:03,820 --> 00:07:18,730
speak it then they're at the PHP Benelux

00:07:12,640 --> 00:07:21,280
conference someone someone was asking if

00:07:18,730 --> 00:07:27,460
he could also code in his native

00:07:21,280 --> 00:07:29,470
language and and I would answer it with

00:07:27,460 --> 00:07:32,530
no don't do it

00:07:29,470 --> 00:07:35,350
please don't do it it's like there are

00:07:32,530 --> 00:07:40,170
several reasons why we all should agree

00:07:35,350 --> 00:07:43,120
that we all code in English and that is

00:07:40,170 --> 00:07:49,120
imagine like like we have an example

00:07:43,120 --> 00:07:52,270
here right so PHP is not in any other

00:07:49,120 --> 00:07:54,310
language than English so in in any case

00:07:52,270 --> 00:07:57,280
if we start using a different language

00:07:54,310 --> 00:07:59,580
than English it will get mixed was

00:07:57,280 --> 00:08:02,950
English and then it would read as

00:07:59,580 --> 00:08:06,510
English mixed was a different language

00:08:02,950 --> 00:08:09,820
and that makes it very hard to read then

00:08:06,510 --> 00:08:12,880
today in our times we hire people from

00:08:09,820 --> 00:08:16,030
different countries and they most most

00:08:12,880 --> 00:08:18,400
likely will not speak Dutch or German

00:08:16,030 --> 00:08:20,020
they will start was English because we

00:08:18,400 --> 00:08:22,000
can all communicate in English all the

00:08:20,020 --> 00:08:25,180
papers that we read or block articles

00:08:22,000 --> 00:08:29,710
are written in English so I'm saying

00:08:25,180 --> 00:08:33,270
sometimes it's hard to to translate say

00:08:29,710 --> 00:08:36,180
German bureaucracy into into English

00:08:33,270 --> 00:08:41,130
words because there is no word for

00:08:36,180 --> 00:08:46,840
German bureaucracy Virts that I know and

00:08:41,130 --> 00:08:48,880
so but still trying to find translations

00:08:46,840 --> 00:08:50,830
for those makes it easy for people that

00:08:48,880 --> 00:08:55,680
that come into the company

00:08:50,830 --> 00:08:55,680
and don't speak German for an example

00:08:56,280 --> 00:09:03,490
another example for why English would be

00:08:59,470 --> 00:09:05,950
good is say you you wrote a huge

00:09:03,490 --> 00:09:09,400
application and you want to open source

00:09:05,950 --> 00:09:12,220
parts of the code then it's very easy to

00:09:09,400 --> 00:09:22,900
get that part open sourced because it's

00:09:12,220 --> 00:09:29,290
only English then I know that PHP is

00:09:22,900 --> 00:09:33,490
working on it so to have unique code so

00:09:29,290 --> 00:09:35,820
I know this is source code but that's

00:09:33,490 --> 00:09:40,330
about it

00:09:35,820 --> 00:09:42,250
I'm not able to read Russian or I sorry

00:09:40,330 --> 00:09:46,030
I mean I don't know which language

00:09:42,250 --> 00:09:48,520
the other one is yes so I know there's a

00:09:46,030 --> 00:09:50,790
source code but if it's business logic I

00:09:48,520 --> 00:09:54,190
and I'm putting it into Google Translate

00:09:50,790 --> 00:09:59,470
it might pop up in any other search was

00:09:54,190 --> 00:10:02,500
Google to later write about that so this

00:09:59,470 --> 00:10:04,320
is also like maybe later a security

00:10:02,500 --> 00:10:09,220
issue

00:10:04,320 --> 00:10:14,110
yes so parts of parts of the world will

00:10:09,220 --> 00:10:18,060
be able to read this but I don't and

00:10:14,110 --> 00:10:18,060
then I found something like

00:10:20,760 --> 00:10:28,860
this is not even this is not even trying

00:10:24,850 --> 00:10:32,350
to make it readable but you know then

00:10:28,860 --> 00:10:42,250
you have a class and it's not it's name

00:10:32,350 --> 00:10:49,329
is four times pile of poo so a there is

00:10:42,250 --> 00:10:54,730
um for the language there is also leet

00:10:49,329 --> 00:10:57,820
speak which tries to be cool I say it's

00:10:54,730 --> 00:11:04,690
not cool it's making it intentionally

00:10:57,820 --> 00:11:11,980
harder to read and it's not English then

00:11:04,690 --> 00:11:15,730
I know that sometimes code of other

00:11:11,980 --> 00:11:24,510
people is hard to understand and hard to

00:11:15,730 --> 00:11:28,170
wrap the head around and and there are

00:11:24,510 --> 00:11:33,490
situations where you're so getting

00:11:28,170 --> 00:11:36,130
frustrated that you feel like you need

00:11:33,490 --> 00:11:39,550
to leave a message in this piece of code

00:11:36,130 --> 00:11:42,910
that you're working on and it's like I

00:11:39,550 --> 00:11:45,520
know this feeling you get angry and then

00:11:42,910 --> 00:11:48,190
you want to like you cannot okay

00:11:45,520 --> 00:11:51,370
Internet is very nice because like you

00:11:48,190 --> 00:11:53,649
cannot punch through cables but there

00:11:51,370 --> 00:11:57,060
are solutions that I think are better

00:11:53,649 --> 00:12:00,040
than than leaving aggressive notes or

00:11:57,060 --> 00:12:03,910
messages for other coders afterwards it

00:12:00,040 --> 00:12:06,850
is if the if the inventor of that piece

00:12:03,910 --> 00:12:09,279
of code that you want to move into your

00:12:06,850 --> 00:12:12,820
code base is sitting right across the

00:12:09,279 --> 00:12:15,640
room then just walk over there talk to

00:12:12,820 --> 00:12:18,399
him communicate say what you think about

00:12:15,640 --> 00:12:21,910
it and discuss it how you can improve it

00:12:18,399 --> 00:12:25,140
or if he's not sitting in that same room

00:12:21,910 --> 00:12:28,510
then you can write an email to him or

00:12:25,140 --> 00:12:31,840
open a pull request on github if it's

00:12:28,510 --> 00:12:34,260
open source and try to em

00:12:31,840 --> 00:12:38,110
prove the code base was them together

00:12:34,260 --> 00:12:41,440
but leaving aggressive notes and the

00:12:38,110 --> 00:12:43,540
code means the motivation for other

00:12:41,440 --> 00:12:46,680
developers that will work on that same

00:12:43,540 --> 00:12:49,480
piece of code afterwards decreases

00:12:46,680 --> 00:12:53,380
dramatically because like there is

00:12:49,480 --> 00:13:05,260
already some thing wrong with that code

00:12:53,380 --> 00:13:10,420
so I'm not touching it then there is

00:13:05,260 --> 00:13:15,850
also code that is like getting worked on

00:13:10,420 --> 00:13:18,640
and it's getting improved and there are

00:13:15,850 --> 00:13:22,960
situations where you're not sure if you

00:13:18,640 --> 00:13:28,210
will need that other code again so I say

00:13:22,960 --> 00:13:31,210
and set off adding the version that the

00:13:28,210 --> 00:13:33,340
the that what you're working on is the

00:13:31,210 --> 00:13:39,250
next version and leaving that in the

00:13:33,340 --> 00:13:43,210
names of off the code as it's like so

00:13:39,250 --> 00:13:45,040
imagine like you do a text search in

00:13:43,210 --> 00:13:46,900
your code and you want to find that

00:13:45,040 --> 00:13:48,430
variable where it's getting used and you

00:13:46,900 --> 00:13:51,880
find it in this old code that is not

00:13:48,430 --> 00:13:55,030
used anymore then it's making it very

00:13:51,880 --> 00:13:57,700
hard for you to to fix something or to

00:13:55,030 --> 00:14:01,060
find something again so deleting all

00:13:57,700 --> 00:14:05,020
code is a good thing because we have

00:14:01,060 --> 00:14:09,190
version control system now just delete

00:14:05,020 --> 00:14:11,890
it I for example I had the situation

00:14:09,190 --> 00:14:15,310
where I had a two thousand line method

00:14:11,890 --> 00:14:17,560
and it did a return in the first line

00:14:15,310 --> 00:14:20,680
and it said it was the same thing but

00:14:17,560 --> 00:14:22,930
faster and I was like scrolling up and

00:14:20,680 --> 00:14:25,750
down and that two thousand line function

00:14:22,930 --> 00:14:28,480
and didn't know that it was like not

00:14:25,750 --> 00:14:37,030
used I didn't see the return in the

00:14:28,480 --> 00:14:39,430
first line and so forth

00:14:37,030 --> 00:14:44,440
so my last thing about the more general

00:14:39,430 --> 00:14:46,920
advices are the user stories I hope you

00:14:44,440 --> 00:14:46,920
have those

00:14:47,100 --> 00:14:56,650
when the so imagine this there are two

00:14:51,940 --> 00:14:58,300
tribes of people like and one are the

00:14:56,650 --> 00:15:02,530
business people and the other ones are

00:14:58,300 --> 00:15:05,680
the developers and they like they both

00:15:02,530 --> 00:15:09,550
go out hunting and they come back with

00:15:05,680 --> 00:15:10,810
those results but if they if they speak

00:15:09,550 --> 00:15:14,200
a different language

00:15:10,810 --> 00:15:17,080
then it like at clashes it like there

00:15:14,200 --> 00:15:19,570
will be confusion and it will make it

00:15:17,080 --> 00:15:23,590
very hard to communicate between the

00:15:19,570 --> 00:15:26,940
between those two different ways of

00:15:23,590 --> 00:15:30,640
thinking so when they when you have the

00:15:26,940 --> 00:15:32,800
luxury of user stories and the product

00:15:30,640 --> 00:15:35,080
people talk about their the product that

00:15:32,800 --> 00:15:38,350
they imagine that you will right then

00:15:35,080 --> 00:15:45,810
taking that same languages improves the

00:15:38,350 --> 00:15:49,230
speed of communication immensely so

00:15:45,810 --> 00:15:54,820
those are more the more general things

00:15:49,230 --> 00:15:59,980
I'm moving over to variables the

00:15:54,820 --> 00:16:03,840
variables when you so say you have a

00:15:59,980 --> 00:16:07,690
variable and you assign something to it

00:16:03,840 --> 00:16:11,020
then you need to have a name for that

00:16:07,690 --> 00:16:14,500
variable right and the name of the

00:16:11,020 --> 00:16:17,740
variable should always transport why it

00:16:14,500 --> 00:16:19,270
exists why why is it needed what do you

00:16:17,740 --> 00:16:23,020
need it for what will it

00:16:19,270 --> 00:16:29,920
what will it where will it be used in

00:16:23,020 --> 00:16:32,560
which context so singer characters are

00:16:29,920 --> 00:16:37,180
exactly the opposite of that it's

00:16:32,560 --> 00:16:41,170
leaving no information about what why do

00:16:37,180 --> 00:16:46,840
I need this t variable or an F variable

00:16:41,170 --> 00:16:52,660
I don't know I have no hint in that name

00:16:46,840 --> 00:16:58,140
and we developers agreed that the AI is

00:16:52,660 --> 00:17:02,640
an exception from that because we

00:16:58,140 --> 00:17:08,640
we use it a lot in loops so I think the

00:17:02,640 --> 00:17:11,850
I and loops us is fine there but when it

00:17:08,640 --> 00:17:16,770
goes further and you will need a J and

00:17:11,850 --> 00:17:20,130
decay and in LMNOP then I'd say take

00:17:16,770 --> 00:17:24,270
that piece of code and extract it to a

00:17:20,130 --> 00:17:27,060
new function and then use the I again it

00:17:24,270 --> 00:17:32,370
makes it very it makes it easier to read

00:17:27,060 --> 00:17:34,140
and then the the when you think about it

00:17:32,370 --> 00:17:36,810
you don't need to switch a lot between

00:17:34,140 --> 00:17:47,810
why what what is the difference between

00:17:36,810 --> 00:17:52,460
the J and the I okay going on the

00:17:47,810 --> 00:17:57,090
variable names shouldn't be incremented

00:17:52,460 --> 00:17:58,560
so I've seen this a lot like the table

00:17:57,090 --> 00:18:00,900
one and the table too

00:17:58,560 --> 00:18:03,510
but it is the same as I said in the

00:18:00,900 --> 00:18:07,610
beginning the name of the variable

00:18:03,510 --> 00:18:12,570
should describe the reason why it was

00:18:07,610 --> 00:18:15,840
created so say you have a variable and

00:18:12,570 --> 00:18:18,990
its name is table and then you want to

00:18:15,840 --> 00:18:22,650
compare it to a different table then the

00:18:18,990 --> 00:18:25,380
name of the second one can be table to

00:18:22,650 --> 00:18:28,590
compare to and then you can write a

00:18:25,380 --> 00:18:32,190
compare method and you give it that you

00:18:28,590 --> 00:18:35,100
you call it as compare the table with

00:18:32,190 --> 00:18:45,180
table to compare two it makes it very

00:18:35,100 --> 00:18:51,630
nice to read I think there are verts in

00:18:45,180 --> 00:18:55,530
our language that have the same meaning

00:18:51,630 --> 00:19:00,060
and there are not a lot of those but

00:18:55,530 --> 00:19:03,870
there are a few and watch out for them

00:19:00,060 --> 00:19:07,200
because they make it hard to understand

00:19:03,870 --> 00:19:10,450
later why the state changed or why the

00:19:07,200 --> 00:19:13,270
user is now living in a state

00:19:10,450 --> 00:19:15,070
it's not active because we have like an

00:19:13,270 --> 00:19:20,020
active state somewhere else

00:19:15,070 --> 00:19:25,870
and so taking this for an example the

00:19:20,020 --> 00:19:29,530
state then I'd say I'm changing the name

00:19:25,870 --> 00:19:33,810
of of one of those two to make one more

00:19:29,530 --> 00:19:36,580
to be more specific about what it is and

00:19:33,810 --> 00:19:38,260
state the first one would come from a

00:19:36,580 --> 00:19:40,930
state machine and the other one is

00:19:38,260 --> 00:19:49,540
simply the country where the user will

00:19:40,930 --> 00:19:54,040
live in there's the other way around

00:19:49,540 --> 00:19:56,680
where some words all have the same

00:19:54,040 --> 00:20:01,600
meaning or will be used in the same

00:19:56,680 --> 00:20:04,210
context then it's imagine this you have

00:20:01,600 --> 00:20:08,500
ten lines of code and you use all of

00:20:04,210 --> 00:20:10,600
those words those ten lines and then

00:20:08,500 --> 00:20:13,360
it's very hard to understand what the

00:20:10,600 --> 00:20:18,910
difference is between adding something

00:20:13,360 --> 00:20:26,800
and inserting it creating it new and

00:20:18,910 --> 00:20:33,580
then you make on it or removing reset

00:20:26,800 --> 00:20:36,400
unset delete on link and discard it so

00:20:33,580 --> 00:20:41,740
picking a set of those only and then

00:20:36,400 --> 00:20:52,060
sticking to their language will be very

00:20:41,740 --> 00:20:57,160
helpful later if you read it so moving

00:20:52,060 --> 00:21:07,240
to functions function names they shall

00:20:57,160 --> 00:21:11,140
be verbs so noop the functions are the

00:21:07,240 --> 00:21:14,740
things that an object can do it's the

00:21:11,140 --> 00:21:18,510
public API of an object so it should

00:21:14,740 --> 00:21:22,010
always be something that the object can

00:21:18,510 --> 00:21:25,639
do and the

00:21:22,010 --> 00:21:28,669
and the first example here it would it

00:21:25,639 --> 00:21:31,789
would be okay if it would the if it

00:21:28,669 --> 00:21:33,649
would be reversed so count references

00:21:31,789 --> 00:21:36,440
would be something that the object can

00:21:33,649 --> 00:21:39,200
do but reference count sounds more like

00:21:36,440 --> 00:21:41,029
it's an attribute then if you want to

00:21:39,200 --> 00:21:51,490
have the attribute then it should be

00:21:41,029 --> 00:21:54,620
called maybe get reference count then

00:21:51,490 --> 00:21:58,610
function names because we don't want to

00:21:54,620 --> 00:22:02,419
read a whole book about the code we only

00:21:58,610 --> 00:22:04,279
want to know what it does so if you have

00:22:02,419 --> 00:22:07,970
a function name and it's very long and

00:22:04,279 --> 00:22:10,850
if you find in a better description and

00:22:07,970 --> 00:22:19,220
it's shorter then I recommend using the

00:22:10,850 --> 00:22:24,529
shorter version and the shorter version

00:22:19,220 --> 00:22:27,830
should always express the same thing as

00:22:24,529 --> 00:22:31,760
the longer version what I've done in the

00:22:27,830 --> 00:22:34,850
same manner the function name shouldn't

00:22:31,760 --> 00:22:39,799
be too short so you don't lose the

00:22:34,850 --> 00:22:42,529
meaning of what it does so check I don't

00:22:39,799 --> 00:22:47,990
know what check will check I don't know

00:22:42,529 --> 00:22:50,809
what it what verify will really do so it

00:22:47,990 --> 00:22:53,330
I don't have an idea I need to step into

00:22:50,809 --> 00:22:56,330
that function to see what it really

00:22:53,330 --> 00:23:04,549
checks or verifies so putting that into

00:22:56,330 --> 00:23:07,010
the name and then maybe also explaining

00:23:04,549 --> 00:23:10,600
what it will return or what it what it

00:23:07,010 --> 00:23:19,039
will really do that makes it very easily

00:23:10,600 --> 00:23:23,029
to read and asking questions for

00:23:19,039 --> 00:23:30,049
billions is really nice in in statements

00:23:23,029 --> 00:23:34,100
so say you have it's empty then you know

00:23:30,049 --> 00:23:35,309
you will be will have a boolean as a

00:23:34,100 --> 00:23:38,639
return

00:23:35,309 --> 00:23:50,490
and then you can put it into if is mg

00:23:38,639 --> 00:23:52,889
and then do your thing the the function

00:23:50,490 --> 00:23:57,360
name shouldn't be redundant with the

00:23:52,889 --> 00:24:00,929
argument I know this one is a bit harder

00:23:57,360 --> 00:24:05,159
I experienced this more often than the

00:24:00,929 --> 00:24:09,210
others so then the other things I just

00:24:05,159 --> 00:24:13,830
saw it is say you have a you have an

00:24:09,210 --> 00:24:16,889
object and it takes it takes an item

00:24:13,830 --> 00:24:19,769
that it that it adds to the list but it

00:24:16,889 --> 00:24:22,340
also can add another item that is a

00:24:19,769 --> 00:24:27,539
different item to the to the same list

00:24:22,340 --> 00:24:30,119
then then telling that and the function

00:24:27,539 --> 00:24:33,389
name that it will take an item as an

00:24:30,119 --> 00:24:36,809
argument is important because because

00:24:33,389 --> 00:24:38,970
the behavior will be different so to

00:24:36,809 --> 00:24:42,539
solve this problem

00:24:38,970 --> 00:24:45,149
it it helps a bit with working with

00:24:42,539 --> 00:24:51,179
architecture at that point so what I do

00:24:45,149 --> 00:24:54,749
then sometimes is I I write a public

00:24:51,179 --> 00:24:59,759
function and it's just called add and it

00:24:54,749 --> 00:25:03,269
takes both post types of instances I

00:24:59,759 --> 00:25:06,149
take the item and the and another item

00:25:03,269 --> 00:25:09,720
and then I decide that in in the add

00:25:06,149 --> 00:25:13,080
function which private method I would

00:25:09,720 --> 00:25:16,110
call so the public API of the class is

00:25:13,080 --> 00:25:24,570
just offering the add method and it

00:25:16,110 --> 00:25:25,490
takes both then I think this one is a

00:25:24,570 --> 00:25:30,480
bit simpler

00:25:25,490 --> 00:25:34,289
redundancy was the receiver so just

00:25:30,480 --> 00:25:39,049
leaving it out and it will read nicely

00:25:34,289 --> 00:25:39,049
that you want to add an item to the list

00:25:42,980 --> 00:25:53,790
there are cases where you see this

00:25:49,860 --> 00:25:57,180
sometimes there's an end or an or and

00:25:53,790 --> 00:25:59,730
the function name and I say if that

00:25:57,180 --> 00:26:05,070
happens the function probably does too

00:25:59,730 --> 00:26:09,900
much so splitting it up into their own

00:26:05,070 --> 00:26:13,620
functions and then calling numbers with

00:26:09,900 --> 00:26:15,920
was it was a third function and then

00:26:13,620 --> 00:26:23,190
explaining why you want to call those

00:26:15,920 --> 00:26:25,170
functions is very good to read so you

00:26:23,190 --> 00:26:27,720
have the reason and the and the color

00:26:25,170 --> 00:26:41,340
function why why you want to call those

00:26:27,720 --> 00:26:43,890
two so the next chapter classes last

00:26:41,340 --> 00:26:50,630
names I know

00:26:43,890 --> 00:26:56,600
services and all those names they should

00:26:50,630 --> 00:26:59,640
be known phrases what are known phrases

00:26:56,600 --> 00:27:04,110
when you have a sentence and you can

00:26:59,640 --> 00:27:10,170
replace something with it or that that

00:27:04,110 --> 00:27:13,740
is a noun phrase and so when you have a

00:27:10,170 --> 00:27:17,010
when you try to instantiate a verb it

00:27:13,740 --> 00:27:20,220
sounds wrong so when you try to

00:27:17,010 --> 00:27:24,990
instantiate a new collect what will new

00:27:20,220 --> 00:27:27,120
collect do it will collect but like the

00:27:24,990 --> 00:27:30,890
name of the classes already collect so

00:27:27,120 --> 00:27:37,140
it it's better to use the noun phrase

00:27:30,890 --> 00:27:40,080
collection that makes it easy to add

00:27:37,140 --> 00:27:43,320
more functionality to it like the

00:27:40,080 --> 00:27:46,650
collection can be dumped or something

00:27:43,320 --> 00:27:50,210
can be added or I don't know you can

00:27:46,650 --> 00:27:50,210
export a collection or something

00:27:51,149 --> 00:27:58,350
class names sometimes get very long

00:27:54,899 --> 00:28:01,409
we have namespaces now they are very

00:27:58,350 --> 00:28:04,440
good for for that reason and they also

00:28:01,409 --> 00:28:08,730
have so when I have a very long class

00:28:04,440 --> 00:28:12,929
name and I put I put it into I split it

00:28:08,730 --> 00:28:15,210
up into a namespace then what I

00:28:12,929 --> 00:28:18,570
sometimes see is that now I have a

00:28:15,210 --> 00:28:21,059
message class and then I maybe have a

00:28:18,570 --> 00:28:23,850
different context in my application

00:28:21,059 --> 00:28:26,820
where I have a system offline message

00:28:23,850 --> 00:28:29,309
maybe then I see that I have now two

00:28:26,820 --> 00:28:33,259
message classes and maybe they are

00:28:29,309 --> 00:28:36,419
similar and I see that now because I

00:28:33,259 --> 00:28:39,649
pull out parts of the name of the class

00:28:36,419 --> 00:28:44,399
and put that into the namespace and

00:28:39,649 --> 00:28:46,950
psr-4 since PSL for it was composer we

00:28:44,399 --> 00:28:57,350
no longer need to create all those sub

00:28:46,950 --> 00:29:03,440
directories which is very nice there are

00:28:57,350 --> 00:29:07,289
birds that were used so often and

00:29:03,440 --> 00:29:10,740
sometimes in all the wrong contexts and

00:29:07,289 --> 00:29:19,259
they over the years lost their meaning

00:29:10,740 --> 00:29:26,669
and try to avoid those and so like

00:29:19,259 --> 00:29:28,980
helper or util or handler those not

00:29:26,669 --> 00:29:31,889
those null words they don't have any

00:29:28,980 --> 00:29:35,070
meaning they they don't they are not

00:29:31,889 --> 00:29:38,429
telling what the class will be about so

00:29:35,070 --> 00:29:42,029
just leaving it out or the name removing

00:29:38,429 --> 00:29:44,399
it you can just remove it and nothing

00:29:42,029 --> 00:29:47,190
will be lost at that point so a

00:29:44,399 --> 00:29:50,999
connection helper can also the name can

00:29:47,190 --> 00:29:53,070
also be just connection and if you want

00:29:50,999 --> 00:29:57,320
to handle multiple connections then you

00:29:53,070 --> 00:29:57,320
can also create a connection pool class

00:30:03,170 --> 00:30:11,060
so I think like last year or so I

00:30:07,470 --> 00:30:15,030
discovered a small pattern in creating

00:30:11,060 --> 00:30:16,860
service class names so I was writing a

00:30:15,030 --> 00:30:19,170
new application and I needed to create a

00:30:16,860 --> 00:30:21,690
lot of new service classes and that's

00:30:19,170 --> 00:30:24,600
where I was looking for because

00:30:21,690 --> 00:30:27,180
sometimes I didn't know how to what what

00:30:24,600 --> 00:30:30,330
I should call this name and I looked

00:30:27,180 --> 00:30:33,660
around and I found this pattern and it

00:30:30,330 --> 00:30:36,450
is what you can do no it is you take it

00:30:33,660 --> 00:30:43,050
down and then you take a verb and you

00:30:36,450 --> 00:30:47,790
add an ER or an O R in the end so as an

00:30:43,050 --> 00:30:54,000
example we could have a query dumper or

00:30:47,790 --> 00:30:57,180
a configuration builder and since then I

00:30:54,000 --> 00:31:03,840
started a small collection of nouns that

00:30:57,180 --> 00:31:06,360
are often used in programming and then I

00:31:03,840 --> 00:31:11,610
started a small collection also of

00:31:06,360 --> 00:31:13,320
nominal I strips so those names are all

00:31:11,610 --> 00:31:18,000
in my slides if you want to use them

00:31:13,320 --> 00:31:24,440
feel free so what I can do now is I take

00:31:18,000 --> 00:31:26,760
any verb like field and then I take any

00:31:24,440 --> 00:31:31,040
normalized verb and I have a field

00:31:26,760 --> 00:31:31,040
marker service now done

00:31:36,090 --> 00:31:44,200
yes service name as a service yes I

00:31:40,030 --> 00:31:46,300
thought about that but like but I think

00:31:44,200 --> 00:31:47,920
like you take two slides and you pick

00:31:46,300 --> 00:31:57,940
one and then you take another one and

00:31:47,920 --> 00:32:04,720
it's done so okay so I'm coming to my

00:31:57,940 --> 00:32:08,710
conclusion what I always try to do when

00:32:04,720 --> 00:32:15,970
when I'm programming is I try to think

00:32:08,710 --> 00:32:18,880
ahead of what will the class be or what

00:32:15,970 --> 00:32:23,500
what will I do in which context will I

00:32:18,880 --> 00:32:29,230
use it when I'm coding variable names

00:32:23,500 --> 00:32:31,780
I'm just taking from from what it from

00:32:29,230 --> 00:32:35,800
what I want to use it for I'm taking the

00:32:31,780 --> 00:32:40,360
names from that so was thinking ahead

00:32:35,800 --> 00:32:43,080
and then later in when when you continue

00:32:40,360 --> 00:32:45,550
working on the application then

00:32:43,080 --> 00:32:48,640
refactoring it whenever you see a name

00:32:45,550 --> 00:32:51,220
that you think like could be different

00:32:48,640 --> 00:32:54,940
or there could be a better name to

00:32:51,220 --> 00:32:58,240
describe what it is for then phpstorm

00:32:54,940 --> 00:33:03,250
makes it very easy to just do a shortcut

00:32:58,240 --> 00:33:05,890
rename it and to commit and you will be

00:33:03,250 --> 00:33:08,490
happy afterwards because you find it

00:33:05,890 --> 00:33:15,040
very appealing to read this code again

00:33:08,490 --> 00:33:15,940
and there are some practical things that

00:33:15,040 --> 00:33:20,560
I want to leave you

00:33:15,940 --> 00:33:23,410
it's when when I sit there and I'm

00:33:20,560 --> 00:33:26,490
thinking about and I don't have an idea

00:33:23,410 --> 00:33:30,070
what I will name it then I ask myself

00:33:26,490 --> 00:33:32,620
what it is supposed to do and if I'm not

00:33:30,070 --> 00:33:35,500
coming up with an idea then I'm going to

00:33:32,620 --> 00:33:37,960
talk to the product people because they

00:33:35,500 --> 00:33:41,200
know the contexts and they know the

00:33:37,960 --> 00:33:43,060
stories so I will I will ask them what

00:33:41,200 --> 00:33:45,520
do you think will happen at that place

00:33:43,060 --> 00:33:47,620
and they maybe use their business

00:33:45,520 --> 00:33:49,230
language but I can translate that to my

00:33:47,620 --> 00:33:53,020
culture

00:33:49,230 --> 00:33:58,000
then I asked a colleague and if he is

00:33:53,020 --> 00:34:00,490
busy then I will maybe go to get up and

00:33:58,000 --> 00:34:05,620
look for what other smart people have

00:34:00,490 --> 00:34:07,950
done in that same context or I just

00:34:05,620 --> 00:34:11,020
decide in the end that the simplest

00:34:07,950 --> 00:34:17,580
thing is best right now and I can

00:34:11,020 --> 00:34:21,159
refactor it later and I'm one aside bop

00:34:17,580 --> 00:34:28,389
he said once I'm happy with the names

00:34:21,159 --> 00:34:30,570
I'm usually happy with the design thank

00:34:28,389 --> 00:34:30,570
you

00:34:36,130 --> 00:34:46,990
so do you have questions please thank

00:34:42,830 --> 00:34:52,730
you so previously a couple of developers

00:34:46,990 --> 00:34:56,450
were using or used underscore before the

00:34:52,730 --> 00:35:00,130
variable names because of the private

00:34:56,450 --> 00:35:06,140
variables what's the current situation

00:35:00,130 --> 00:35:08,240
currently mm-hmm so the question is

00:35:06,140 --> 00:35:13,130
should you use an underscore for private

00:35:08,240 --> 00:35:16,930
variables okay yeah so I it's look I

00:35:13,130 --> 00:35:19,910
think it looks similar to the Hungarian

00:35:16,930 --> 00:35:23,930
okay price and use it at - okay

00:35:19,910 --> 00:35:28,960
so I think we have private variables and

00:35:23,930 --> 00:35:32,570
PHP - and it's like I think it's

00:35:28,960 --> 00:35:35,570
distracting from what what the variable

00:35:32,570 --> 00:35:37,700
is about other more than then it's

00:35:35,570 --> 00:35:41,360
giving me the information that this

00:35:37,700 --> 00:35:47,150
variable is private so I would leave I

00:35:41,360 --> 00:35:48,320
would leave the underscore out of it one

00:35:47,150 --> 00:35:51,740
more question

00:35:48,320 --> 00:35:55,550
you were talking about the function

00:35:51,740 --> 00:35:59,600
names and as I understood properly you

00:35:55,550 --> 00:36:02,210
prefer just using a simple name for

00:35:59,600 --> 00:36:08,060
example for the author or something like

00:36:02,210 --> 00:36:10,760
that but what if you are using API which

00:36:08,060 --> 00:36:16,520
also have for example an author class

00:36:10,760 --> 00:36:21,110
names or author or function sorry it's

00:36:16,520 --> 00:36:24,200
it's more like an class name so yes what

00:36:21,110 --> 00:36:26,330
if they're using author class names what

00:36:24,200 --> 00:36:29,390
if you would like to use an author

00:36:26,330 --> 00:36:32,140
helper which is also named as an author

00:36:29,390 --> 00:36:35,810
or what if you would like to use a

00:36:32,140 --> 00:36:39,220
filtering stuff like that so what's your

00:36:35,810 --> 00:36:43,180
recommendation on ok so you mean like H

00:36:39,220 --> 00:36:48,380
HTTP api's like or something like that

00:36:43,180 --> 00:36:51,740
ok so yeah so what I discovered is so

00:36:48,380 --> 00:36:56,180
I was using couch and it also has an

00:36:51,740 --> 00:36:59,509
HTTP API and I wanted to send queries to

00:36:56,180 --> 00:37:01,940
to it and what I did is I built a curry

00:36:59,509 --> 00:37:06,109
builder similar to what doctrine does

00:37:01,940 --> 00:37:10,700
was a query builder - so I'm using that

00:37:06,109 --> 00:37:14,410
one - - to build the order and and

00:37:10,700 --> 00:37:19,990
attributes together in the end

00:37:14,410 --> 00:37:23,680
does that answer okay oh yeah

00:37:19,990 --> 00:37:26,660
yes I have a question regarding

00:37:23,680 --> 00:37:28,849
basically when you use it used to be

00:37:26,660 --> 00:37:32,329
common I think the previous question

00:37:28,849 --> 00:37:34,490
refers to Zend framework one point X and

00:37:32,329 --> 00:37:37,250
I sort of tying on from that it was the

00:37:34,490 --> 00:37:40,460
idea that you would append abstract or

00:37:37,250 --> 00:37:44,809
interface to the name of a particular

00:37:40,460 --> 00:37:46,250
files which I'm interested in DevOps so

00:37:44,809 --> 00:37:48,049
for me if I want to find an interface

00:37:46,250 --> 00:37:49,730
it's very nice if the file is called

00:37:48,049 --> 00:37:52,940
interface because I can find it very

00:37:49,730 --> 00:37:54,470
easily and if it's on a production

00:37:52,940 --> 00:37:58,849
server I'm not necessarily going to be

00:37:54,470 --> 00:38:00,049
able to find out via an IDE but there is

00:37:58,849 --> 00:38:02,630
a sort of thinking that you shouldn't

00:38:00,049 --> 00:38:04,460
call interfaces have the name interface

00:38:02,630 --> 00:38:07,640
in them and it's just wondering what was

00:38:04,460 --> 00:38:13,490
your thoughts on on that in terms of

00:38:07,640 --> 00:38:15,829
file system mm-hmm okay so so from my

00:38:13,490 --> 00:38:18,140
experience I think leaving the name

00:38:15,829 --> 00:38:21,680
interface and that class name or in that

00:38:18,140 --> 00:38:25,220
interface file name things that's what

00:38:21,680 --> 00:38:29,329
you were referring to so I think it's

00:38:25,220 --> 00:38:31,730
helpful to have that on the other side

00:38:29,329 --> 00:38:34,579
it's not adding more information from

00:38:31,730 --> 00:38:36,829
what you originally would have because

00:38:34,579 --> 00:38:40,670
like it's already saying interface in

00:38:36,829 --> 00:38:44,000
the file but like having it on the file

00:38:40,670 --> 00:38:46,609
name - I think what what you were saying

00:38:44,000 --> 00:38:49,490
- is like it it's making it easier to

00:38:46,609 --> 00:38:53,299
find and if it's helping then I say this

00:38:49,490 --> 00:38:56,559
is very good I want to very fast find

00:38:53,299 --> 00:38:56,559
stuff and work on it

00:38:58,550 --> 00:39:05,210
thank you question if you can actually

00:39:03,140 --> 00:39:07,430
come back to the last light of arrivals

00:39:05,210 --> 00:39:18,350
okay if you can come back on the last

00:39:07,430 --> 00:39:21,950
life over eyeballs and okay slide for

00:39:18,350 --> 00:39:30,050
arrivals which one were create update

00:39:21,950 --> 00:39:32,710
insert stay consistent it's the last one

00:39:30,050 --> 00:39:32,710
huh

00:39:33,040 --> 00:39:38,660
so we have first kind of questionable it

00:39:37,310 --> 00:39:40,700
probably should be more for the

00:39:38,660 --> 00:39:43,100
functions not variables because like

00:39:40,700 --> 00:39:47,810
create and so on like it's worse can you

00:39:43,100 --> 00:39:50,000
say that again so yeah I just think it

00:39:47,810 --> 00:39:51,800
should be like more for functions not

00:39:50,000 --> 00:39:55,160
for variables because it's works like

00:39:51,800 --> 00:39:58,280
create insert update and so on I wasn't

00:39:55,160 --> 00:40:03,050
that in the more general thanks no just

00:39:58,280 --> 00:40:05,480
for eyeballs are you right you're right

00:40:03,050 --> 00:40:08,000
I will move it next time yeah just

00:40:05,480 --> 00:40:11,960
another thing you're like what do what

00:40:08,000 --> 00:40:13,520
do you think should be create like for

00:40:11,960 --> 00:40:17,480
example you have different situations

00:40:13,520 --> 00:40:19,670
you create a user and it still can be

00:40:17,480 --> 00:40:21,560
the two words because one insert is like

00:40:19,670 --> 00:40:26,830
inserting the database and creators just

00:40:21,560 --> 00:40:32,930
create object plus insert mmhmm okay

00:40:26,830 --> 00:40:37,550
yeah so I say so what I try to do at

00:40:32,930 --> 00:40:41,060
that point is I'm trying to use the the

00:40:37,550 --> 00:40:45,710
user story names for what I'm doing so I

00:40:41,060 --> 00:40:47,780
I say the user is registering so I'm

00:40:45,710 --> 00:40:50,600
checking that word register as a

00:40:47,780 --> 00:40:53,240
function name to explain what I'm doing

00:40:50,600 --> 00:40:55,700
here so I'm creating a new user

00:40:53,240 --> 00:40:58,340
but like creating it as like my

00:40:55,700 --> 00:41:00,740
technical term for it but the actual

00:40:58,340 --> 00:41:04,100
user story says I want to register a new

00:41:00,740 --> 00:41:07,300
user so I'm I'm preferring to take the

00:41:04,100 --> 00:41:07,300
user story names for it

00:41:09,640 --> 00:41:14,150
but you will name this you will use this

00:41:12,170 --> 00:41:17,660
for all the crosses of the center like

00:41:14,150 --> 00:41:20,990
all the girls are cold same like yes sir

00:41:17,660 --> 00:41:22,490
it's great user object okay yeah so a

00:41:20,990 --> 00:41:25,250
level deeper than maybe in the

00:41:22,490 --> 00:41:28,099
repository I'm I'm using one of those

00:41:25,250 --> 00:41:31,670
words and then I'm sticking to it

00:41:28,099 --> 00:41:34,970
so say I'm I'm calling it persist or I'm

00:41:31,670 --> 00:41:39,020
calling it safe then I'm always calling

00:41:34,970 --> 00:41:43,460
a safe method if I want to save new

00:41:39,020 --> 00:41:46,010
entities or I want to create new new

00:41:43,460 --> 00:41:48,710
records on the database but I'm then

00:41:46,010 --> 00:41:52,310
sticking I'm really hard trying to stick

00:41:48,710 --> 00:42:08,119
to one terminology our set of names for

00:41:52,310 --> 00:42:10,579
for what I'm doing and keep those hi and

00:42:08,119 --> 00:42:13,520
how do you feel about sort of classes

00:42:10,579 --> 00:42:15,530
that like repeat the name say like if

00:42:13,520 --> 00:42:19,130
you've got a collection that stores

00:42:15,530 --> 00:42:20,660
other collections like it feels stupid

00:42:19,130 --> 00:42:23,030
to call it collection collection but a

00:42:20,660 --> 00:42:24,050
lot of time in that instance I wouldn't

00:42:23,030 --> 00:42:29,230
really know what else to call it

00:42:24,050 --> 00:42:31,579
I mean say what do you recommend that

00:42:29,230 --> 00:42:34,160
situation what did the business people

00:42:31,579 --> 00:42:38,750
call it what are the what people good

00:42:34,160 --> 00:42:40,609
business people are you telling them

00:42:38,750 --> 00:42:42,410
like I would like ask the business

00:42:40,609 --> 00:42:45,380
people about that like what what are

00:42:42,410 --> 00:42:47,240
they calling it I know it like it's it's

00:42:45,380 --> 00:42:49,790
sometimes alright because like you have

00:42:47,240 --> 00:42:52,099
a list or you have a collection or you

00:42:49,790 --> 00:42:55,130
have a set of things and they interact

00:42:52,099 --> 00:42:57,980
which which each other but that's very

00:42:55,130 --> 00:43:00,560
technical so using the terminology that

00:42:57,980 --> 00:43:03,770
the business people use like they bring

00:43:00,560 --> 00:43:09,770
more language that really describes what

00:43:03,770 --> 00:43:11,359
I'm trying to achieve okay so you were

00:43:09,770 --> 00:43:12,890
saying you have a collection and then

00:43:11,359 --> 00:43:15,050
you want to add a collection to the

00:43:12,890 --> 00:43:16,819
collection yeah okay like a

00:43:15,050 --> 00:43:18,890
multi-dimensional one I don't know I

00:43:16,819 --> 00:43:21,080
really would ask the business people

00:43:18,890 --> 00:43:23,440
about it like

00:43:21,080 --> 00:43:26,480
what kind of collection do you have so

00:43:23,440 --> 00:43:28,250
in the user stories that I have right

00:43:26,480 --> 00:43:31,100
now in the product that I'm working on I

00:43:28,250 --> 00:43:34,520
have the they call it assignment

00:43:31,100 --> 00:43:38,030
overview so I'm not using the list word

00:43:34,520 --> 00:43:40,460
anymore I'm using overview because

00:43:38,030 --> 00:44:04,750
that's what they said they will they

00:43:40,460 --> 00:44:04,750

YouTube URL: https://www.youtube.com/watch?v=--L0bS8n5ow


