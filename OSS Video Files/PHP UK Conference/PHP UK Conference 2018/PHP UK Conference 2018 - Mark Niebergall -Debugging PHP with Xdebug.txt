Title: PHP UK Conference 2018 - Mark Niebergall -Debugging PHP with Xdebug
Publication date: 2018-03-27
Playlist: PHP UK Conference 2018
Description: 
	Debugging in PHP can be tedious and prone to error when using var_dump and echo statements. Learn how to debug more effectively and get better insight into an application by using Xdebug. See how to setup PhpStorm, Xdebug, and the browser to enable debugging that will let you step into code and see variable values live. Extend those debugging capabilities into cli, APIs, and SOAP clients to increase the code that can be debugged with ease.
Captions: 
	00:00:02,800 --> 00:00:07,000
the slides are posted online linked on

00:00:05,230 --> 00:00:08,440
joined in if you want to follow along if

00:00:07,000 --> 00:00:10,570
you want to see the coding examples of

00:00:08,440 --> 00:00:11,910
slides please feel free to go grab that

00:00:10,570 --> 00:00:16,180
and follow along

00:00:11,910 --> 00:00:20,650
has anyone ever here had a problem with

00:00:16,180 --> 00:00:22,300
coding and debugging my hands all the

00:00:20,650 --> 00:00:24,970
way up there completely you ever had a

00:00:22,300 --> 00:00:26,170
problem like this okay or maybe your

00:00:24,970 --> 00:00:28,720
problems not the car falling in the

00:00:26,170 --> 00:00:29,890
water but maybe you had the problem is

00:00:28,720 --> 00:00:32,560
that you can't figure it out so you uh

00:00:29,890 --> 00:00:35,260
you bring out the big guns over here in

00:00:32,560 --> 00:00:39,610
the upper left you bring out the air log

00:00:35,260 --> 00:00:41,050
right okay it kind of helps helps you

00:00:39,610 --> 00:00:44,500
solve the problem but then it kind of

00:00:41,050 --> 00:00:46,660
doesn't work okay so then you move on to

00:00:44,500 --> 00:00:49,630
maybe you print R's of var dumps maybe

00:00:46,660 --> 00:00:54,490
some echos they kind of get the job done

00:00:49,630 --> 00:00:57,640
maybe they drop the crane drop the car

00:00:54,490 --> 00:00:58,960
think they can be helpful we're gonna be

00:00:57,640 --> 00:01:00,670
talking about X debug which would be

00:00:58,960 --> 00:01:03,220
like bringing out to the big crane at

00:01:00,670 --> 00:01:08,560
the very beginning it's a great way to

00:01:03,220 --> 00:01:11,219
debug our PHP code little bit about me

00:01:08,560 --> 00:01:14,439
I'm developing for over a dozen years

00:01:11,219 --> 00:01:17,100
master's degree information systems a

00:01:14,439 --> 00:01:20,649
senior software engineer I co it all day

00:01:17,100 --> 00:01:22,719
working from home my basement

00:01:20,649 --> 00:01:25,509
I worked primarily drug testing platform

00:01:22,719 --> 00:01:29,259
I get people fired for work not directly

00:01:25,509 --> 00:01:31,090
okay we do a lot of drug testing with

00:01:29,259 --> 00:01:32,979
random pre-employment drug testing that

00:01:31,090 --> 00:01:34,479
kind of stuff it's mentioned I organized

00:01:32,979 --> 00:01:35,829
you tile user group traitor out there on

00:01:34,479 --> 00:01:38,140
the third Thursday's come join us for

00:01:35,829 --> 00:01:40,810
food and discussion I have a couple

00:01:38,140 --> 00:01:43,509
cybersecurity certifications and I write

00:01:40,810 --> 00:01:46,240
questions and do exam development for IC

00:01:43,509 --> 00:01:49,149
squared volunteer for their

00:01:46,240 --> 00:01:50,530
certifications left flying drones

00:01:49,149 --> 00:01:52,990
fishing if you want to talk about the

00:01:50,530 --> 00:01:54,999
outdoors with me feel free to me up have

00:01:52,990 --> 00:01:56,249
five little boys at home we'd like to go

00:01:54,999 --> 00:01:58,959
outside spent a lot of time outside

00:01:56,249 --> 00:02:02,770
playing around my poor wife is home with

00:01:58,959 --> 00:02:03,999
five boys right now by herself I have

00:02:02,770 --> 00:02:05,649
lived in England I lived in Manchester

00:02:03,999 --> 00:02:06,819
area for a couple years Nelson

00:02:05,649 --> 00:02:09,490
Workington if you want to talk about

00:02:06,819 --> 00:02:13,300
those places come talk to me I love

00:02:09,490 --> 00:02:14,520
those places there's where I live big

00:02:13,300 --> 00:02:19,350
mountains

00:02:14,520 --> 00:02:21,540
snow that kind of stuff and if you're so

00:02:19,350 --> 00:02:23,700
open west is a conference out in Salt

00:02:21,540 --> 00:02:24,690
Lake area that's kind of a polyglot

00:02:23,700 --> 00:02:26,460
conference is fun

00:02:24,690 --> 00:02:28,290
they've lockpicking other things that's

00:02:26,460 --> 00:02:32,190
local conference to me I don't organize

00:02:28,290 --> 00:02:33,480
about volunteer there and speak so we're

00:02:32,190 --> 00:02:35,040
gonna go over this is kind of the

00:02:33,480 --> 00:02:38,280
overview high-level overview where we're

00:02:35,040 --> 00:02:41,610
going with the agenda the schedule we

00:02:38,280 --> 00:02:43,710
have what XD buggy is we'll talk about

00:02:41,610 --> 00:02:46,230
what it is we'll talk about why you use

00:02:43,710 --> 00:02:48,090
it when you'd use it I want to make sure

00:02:46,230 --> 00:02:49,410
we focus on some time setting up so

00:02:48,090 --> 00:02:51,660
we'll go over how to set it up how to

00:02:49,410 --> 00:02:53,100
install get it up and running that's

00:02:51,660 --> 00:02:54,480
important thing that many it's a major

00:02:53,100 --> 00:02:56,850
hurdle that many people run into is

00:02:54,480 --> 00:02:59,880
setting it up and talk about using X

00:02:56,850 --> 00:03:03,720
debug the emphasis will be here would be

00:02:59,880 --> 00:03:08,000
on with phpstorm as the ide being used

00:03:03,720 --> 00:03:09,990
but any IDE can be used it has a plug-in

00:03:08,000 --> 00:03:13,740
so we'll start off with some live

00:03:09,990 --> 00:03:19,230
examples hopefully the live examples go

00:03:13,740 --> 00:03:20,610
smoothly here X debug you can see

00:03:19,230 --> 00:03:21,750
picture Derek reference he's here in the

00:03:20,610 --> 00:03:22,770
audience talk to him too if you any

00:03:21,750 --> 00:03:25,080
questions about xdebug

00:03:22,770 --> 00:03:27,180
it's posted it's open source it's on

00:03:25,080 --> 00:03:29,280
github or come talk to me we'll take

00:03:27,180 --> 00:03:31,020
some time off vernon off of him there's

00:03:29,280 --> 00:03:32,520
a big THANK YOU to Derek he's a big

00:03:31,020 --> 00:03:37,620
contributor to that not the original

00:03:32,520 --> 00:03:40,560
author so have you seen a file like this

00:03:37,620 --> 00:03:43,320
perhaps when we're coding along we had

00:03:40,560 --> 00:03:45,840
some you know some methods to follow we

00:03:43,320 --> 00:03:47,400
had some code to debug and let's see

00:03:45,840 --> 00:03:51,210
we're running it more into problems okay

00:03:47,400 --> 00:03:53,700
so we're we go to run that PHP file and

00:03:51,210 --> 00:03:56,190
we get a getting an error we don't know

00:03:53,700 --> 00:03:58,680
what's going on so maybe we go in there

00:03:56,190 --> 00:04:02,760
and we start you know adding some echos

00:03:58,680 --> 00:04:04,710
okay echo line you value you know you've

00:04:02,760 --> 00:04:05,670
seen this before right we're trying to

00:04:04,710 --> 00:04:07,380
figure out what's going on so we're

00:04:05,670 --> 00:04:09,320
gonna add some Heco's in there and other

00:04:07,380 --> 00:04:13,740
things okay

00:04:09,320 --> 00:04:17,940
next debug if I turn on the listening

00:04:13,740 --> 00:04:20,850
here and have a breakpoint setup will

00:04:17,940 --> 00:04:23,880
allow me to step into the code and see

00:04:20,850 --> 00:04:26,310
exactly what's going on so I can see

00:04:23,880 --> 00:04:27,860
here okay the value is 2 okay that's

00:04:26,310 --> 00:04:31,440
good that's just getting us somewhere

00:04:27,860 --> 00:04:32,700
um okay it's still working right we're

00:04:31,440 --> 00:04:35,250
not even hit that air yet it's still

00:04:32,700 --> 00:04:37,050
behaving like we expect you can see the

00:04:35,250 --> 00:04:39,990
value we can see what's going on you see

00:04:37,050 --> 00:04:42,870
okay here's the server values we can see

00:04:39,990 --> 00:04:45,830
the class we can maybe interact with the

00:04:42,870 --> 00:04:51,570
console so we can do dollar sign value

00:04:45,830 --> 00:04:53,130
let's play by two it can tell six okay

00:04:51,570 --> 00:04:55,560
so we know you know values three at this

00:04:53,130 --> 00:05:00,480
point we can interact with the code and

00:04:55,560 --> 00:05:03,660
see what's going on and we can continue

00:05:00,480 --> 00:05:06,510
on and and see that okay next up is

00:05:03,660 --> 00:05:08,850
gonna hit that and now what's gonna hit

00:05:06,510 --> 00:05:10,890
the problems okay so we can start to

00:05:08,850 --> 00:05:12,480
step into the code we can see what's how

00:05:10,890 --> 00:05:14,150
the code is behaving we can see local

00:05:12,480 --> 00:05:18,090
variables we can interact with the class

00:05:14,150 --> 00:05:19,320
we can interact with our PHP a lot of

00:05:18,090 --> 00:05:21,540
different programming languages have

00:05:19,320 --> 00:05:23,340
this maybe you used the debuggers on the

00:05:21,540 --> 00:05:26,970
consoles for JavaScript and interacted

00:05:23,340 --> 00:05:31,490
with the code there XD bugs give us the

00:05:26,970 --> 00:05:31,490
ability to interact and debug our code

00:05:33,680 --> 00:05:40,200
continuing on with the slides what is X

00:05:38,970 --> 00:05:44,039
debug we kind of already went over this

00:05:40,200 --> 00:05:46,470
part just a quick introduction so it's a

00:05:44,039 --> 00:05:49,200
step into debugger my first debugger

00:05:46,470 --> 00:05:51,030
stepping into is a C++ when the

00:05:49,200 --> 00:05:53,100
mysteries of that language I was very

00:05:51,030 --> 00:05:56,070
helpful many years ago

00:05:53,100 --> 00:05:58,080
it also has profiling available we won't

00:05:56,070 --> 00:06:00,750
go into that but know it's available and

00:05:58,080 --> 00:06:02,010
it uses the debugger protocol for the

00:06:00,750 --> 00:06:05,660
communication which is used by some

00:06:02,010 --> 00:06:08,340
other programming languages to debug

00:06:05,660 --> 00:06:13,320
languages it's been available for about

00:06:08,340 --> 00:06:15,690
15 16 years as mentioned Derek brethens

00:06:13,320 --> 00:06:18,990
originally developed it as author that's

00:06:15,690 --> 00:06:21,270
a PHP extension publicly available it's

00:06:18,990 --> 00:06:23,130
written in C code you can go poke around

00:06:21,270 --> 00:06:25,650
on the github repo and see what it looks

00:06:23,130 --> 00:06:30,030
like an open source it's free you don't

00:06:25,650 --> 00:06:34,169
to pay for it to use it why would you

00:06:30,030 --> 00:06:37,380
use X debug so another xavier try to cut

00:06:34,169 --> 00:06:39,479
down a tree with the herring okay Monty

00:06:37,380 --> 00:06:41,310
Python reference there all right we want

00:06:39,479 --> 00:06:43,470
to use a you may be in a hatch

00:06:41,310 --> 00:06:45,420
so that was work for a tree or some of

00:06:43,470 --> 00:06:48,510
the trees are pretty big though but kind

00:06:45,420 --> 00:06:49,800
of work again this is kind of where we

00:06:48,510 --> 00:06:51,690
come back to the you know are we doing

00:06:49,800 --> 00:06:53,910
echoes and var dumps and print tars and

00:06:51,690 --> 00:06:55,860
air logs no these aren't helpful but

00:06:53,910 --> 00:06:58,010
there's perhaps a better way depending

00:06:55,860 --> 00:07:00,030
on you know our scenario our situation

00:06:58,010 --> 00:07:04,050
there could be a better way to be

00:07:00,030 --> 00:07:05,880
debugging the code so the typical

00:07:04,050 --> 00:07:09,950
process that we use when we're not using

00:07:05,880 --> 00:07:13,350
DX debug we add some outputs right we

00:07:09,950 --> 00:07:15,300
we've lo the page we look for that

00:07:13,350 --> 00:07:17,910
output right maybe look for the line

00:07:15,300 --> 00:07:20,730
number which makes some changes to the

00:07:17,910 --> 00:07:23,820
code again we add some more outputs and

00:07:20,730 --> 00:07:24,960
we repeat that over and over and then we

00:07:23,820 --> 00:07:26,910
try to make sure we clean it all up

00:07:24,960 --> 00:07:28,770
because we maybe forgot a few a echoes

00:07:26,910 --> 00:07:30,870
or vera dumps or here logs and whatever

00:07:28,770 --> 00:07:33,510
using and though the page again to make

00:07:30,870 --> 00:07:35,550
sure it's all cleaned up okay that's

00:07:33,510 --> 00:07:38,250
that's a common debugging without ex

00:07:35,550 --> 00:07:43,470
debug XD bugs like bring the chainsaw

00:07:38,250 --> 00:07:45,180
out chainsaws are very handy family has

00:07:43,470 --> 00:07:46,830
a cabin that'll you tell we use

00:07:45,180 --> 00:07:48,390
chainsaws you don't wanna use a hatchet

00:07:46,830 --> 00:07:52,229
or herring try cotons trees you gotta

00:07:48,390 --> 00:07:56,370
use a chainsaw so with XD bug you turn

00:07:52,229 --> 00:07:58,680
on the debugging and your ide you add

00:07:56,370 --> 00:08:01,110
some breakpoints and you run the script

00:07:58,680 --> 00:08:03,229
or lo the page and start stepping into

00:08:01,110 --> 00:08:05,580
the code you get far more information

00:08:03,229 --> 00:08:07,950
you're not adding lines that are useless

00:08:05,580 --> 00:08:13,620
that you had to go remove later you can

00:08:07,950 --> 00:08:16,020
actually see what's going on it gives

00:08:13,620 --> 00:08:20,039
you live values you can see the actual

00:08:16,020 --> 00:08:21,750
values of different variables it tells

00:08:20,039 --> 00:08:23,550
you the code path you can get a full

00:08:21,750 --> 00:08:26,640
stack trace and see where the code how

00:08:23,550 --> 00:08:30,050
how it arrived there and and what's

00:08:26,640 --> 00:08:34,469
what's gone on it's up to that point

00:08:30,050 --> 00:08:36,210
supported by most major IDE s lives in

00:08:34,469 --> 00:08:39,360
the examples were here is a PHP storm

00:08:36,210 --> 00:08:43,320
but most major IDs have a plug-in

00:08:39,360 --> 00:08:45,690
available for X debug at least a faster

00:08:43,320 --> 00:08:47,490
development time instead of debugging

00:08:45,690 --> 00:08:49,200
and spending hours debugging hopefully

00:08:47,490 --> 00:08:51,200
this it cuts down it my experience has

00:08:49,200 --> 00:08:54,300
been it cuts down quite a bit

00:08:51,200 --> 00:08:55,560
it may have taken a couple hours turns

00:08:54,300 --> 00:08:58,019
into a five or ten minute

00:08:55,560 --> 00:09:00,689
because I'm able to debug and see what's

00:08:58,019 --> 00:09:03,149
actually going on I like to also put

00:09:00,689 --> 00:09:05,459
breakpoints on exception handling some

00:09:03,149 --> 00:09:09,269
many times exception is hit again the

00:09:05,459 --> 00:09:10,439
code stops and I can see that also gives

00:09:09,269 --> 00:09:12,360
a better understanding of what's

00:09:10,439 --> 00:09:15,029
actually going on in the code you can

00:09:12,360 --> 00:09:16,459
actually see what's happening what's

00:09:15,029 --> 00:09:18,990
what's occurring

00:09:16,459 --> 00:09:20,730
it doesn't require any code changes as I

00:09:18,990 --> 00:09:21,990
mentioned so you don't have to add those

00:09:20,730 --> 00:09:24,629
extra lines and try to worry about

00:09:21,990 --> 00:09:25,559
cleaning them up correctly you know it's

00:09:24,629 --> 00:09:27,540
not gonna be in there because you didn't

00:09:25,559 --> 00:09:31,350
have in the first place so it's a good

00:09:27,540 --> 00:09:34,110
clean solution for debugging setting it

00:09:31,350 --> 00:09:36,029
up as I mentioned if you want to fall

00:09:34,110 --> 00:09:37,379
along turn on your environment turn on

00:09:36,029 --> 00:09:40,319
your laptops and fall along feel free

00:09:37,379 --> 00:09:41,550
and the slides again are posted think

00:09:40,319 --> 00:09:43,800
ton joined in so if you want to follow

00:09:41,550 --> 00:09:45,629
along and look at the instructions if

00:09:43,800 --> 00:09:47,550
you don't have it set it up if you don't

00:09:45,629 --> 00:09:49,649
have it set up yet and that's your

00:09:47,550 --> 00:09:52,459
struggle your hurdle get it turned on

00:09:49,649 --> 00:09:54,569
now let's just try to work through it

00:09:52,459 --> 00:10:00,149
I'll be available afterwards to to help

00:09:54,569 --> 00:10:02,009
set up to the documentation JetBrains

00:10:00,149 --> 00:10:04,920
has a really good documentation for

00:10:02,009 --> 00:10:07,259
setting it up the first ideas you need

00:10:04,920 --> 00:10:09,720
install X debugger we'll go through each

00:10:07,259 --> 00:10:11,339
of these seven steps and depth but the

00:10:09,720 --> 00:10:13,399
initiative kind of overviews you install

00:10:11,339 --> 00:10:15,839
it you prepare your IDE

00:10:13,399 --> 00:10:18,689
set up some breakpoints activate your

00:10:15,839 --> 00:10:20,939
debugger on your server on your IDE

00:10:18,689 --> 00:10:22,319
start the debugging session with us and

00:10:20,939 --> 00:10:25,699
the browser will go on how to use it

00:10:22,319 --> 00:10:29,189
with with rest of the clients and

00:10:25,699 --> 00:10:31,949
terminal reload the current page run the

00:10:29,189 --> 00:10:34,410
script and it to set some server bad

00:10:31,949 --> 00:10:36,379
things but going to all this make it

00:10:34,410 --> 00:10:39,110
easy

00:10:36,379 --> 00:10:42,029
next debug has really good documentation

00:10:39,110 --> 00:10:45,420
they have an installation instruction

00:10:42,029 --> 00:10:48,720
page we follow along download if

00:10:45,420 --> 00:10:50,269
applicable install it or compile

00:10:48,720 --> 00:10:53,370
depending on what you're doing you

00:10:50,269 --> 00:10:55,110
configure your PHP to use to know how to

00:10:53,370 --> 00:10:59,399
use XD bug the different settings with

00:10:55,110 --> 00:11:02,040
it and restart your web server the

00:10:59,399 --> 00:11:03,110
easiest way to install it if you don't

00:11:02,040 --> 00:11:07,470
already have it

00:11:03,110 --> 00:11:08,970
get clone you clone it down CD into

00:11:07,470 --> 00:11:10,710
there and rebuild

00:11:08,970 --> 00:11:12,300
we're not script and it's gonna go do

00:11:10,710 --> 00:11:20,690
all your makes and you're cleaning up

00:11:12,300 --> 00:11:22,860
into the home okay so three main

00:11:20,690 --> 00:11:26,040
operating systems that were using for

00:11:22,860 --> 00:11:29,220
development will go into each of these

00:11:26,040 --> 00:11:30,780
as well just briefly with Windows

00:11:29,220 --> 00:11:32,670
there's basically next debug install

00:11:30,780 --> 00:11:35,580
screen you copying piece there's stuff

00:11:32,670 --> 00:11:40,730
in it gives you the file and if your Mac

00:11:35,580 --> 00:11:44,130
pseudo pickle install X debug or brew

00:11:40,730 --> 00:11:48,750
Linux you can W get it and similar doing

00:11:44,130 --> 00:11:50,430
install it with Windows as mentioned

00:11:48,750 --> 00:11:53,550
there's an IDE basically you do a PHP I

00:11:50,430 --> 00:11:56,040
or your PHP info you copy and paste it

00:11:53,550 --> 00:11:58,380
into a text file or whatever and you

00:11:56,040 --> 00:12:00,360
paste it in there and it'll give you dll

00:11:58,380 --> 00:12:02,520
to install really easy made it made it

00:12:00,360 --> 00:12:06,120
really simple then you restart your

00:12:02,520 --> 00:12:13,230
webserver and you'll be able to start

00:12:06,120 --> 00:12:17,820
using that debug again if you're on UNIX

00:12:13,230 --> 00:12:21,870
based systems we have W get you tar ball

00:12:17,820 --> 00:12:24,930
Nexus EDX debug 2.6 the current PCI is

00:12:21,870 --> 00:12:27,150
config configure enable debug make and

00:12:24,930 --> 00:12:29,040
make install but if you're doing that

00:12:27,150 --> 00:12:34,200
first set up instructions that'll tell

00:12:29,040 --> 00:12:36,660
you that the that SH file will install

00:12:34,200 --> 00:12:38,670
for you do all these things for you but

00:12:36,660 --> 00:12:43,590
if you're if you're not if you can do

00:12:38,670 --> 00:12:46,410
there are these steps to install just

00:12:43,590 --> 00:12:51,360
another another version of it dipping on

00:12:46,410 --> 00:12:52,620
your obviously your operating system so

00:12:51,360 --> 00:12:53,880
we breeze kind of through that again

00:12:52,620 --> 00:12:56,310
these plays are all posts if you want to

00:12:53,880 --> 00:12:59,400
fall along the the easiest is that first

00:12:56,310 --> 00:13:00,839
the first is rejection I gave so update

00:12:59,400 --> 00:13:04,110
your PHP I and I you got to add a few

00:13:00,839 --> 00:13:07,860
instructions gonna make sure you have

00:13:04,110 --> 00:13:11,310
them extension for the pointing to this

00:13:07,860 --> 00:13:14,940
is on Windows or if you're on a Mac or

00:13:11,310 --> 00:13:18,450
Linux to wherever the debug is and then

00:13:14,940 --> 00:13:20,280
you have a few settings so for example

00:13:18,450 --> 00:13:21,270
remote and able these are the things I

00:13:20,280 --> 00:13:26,750
like to use

00:13:21,270 --> 00:13:31,170
a remote auto start set on port 9000

00:13:26,750 --> 00:13:34,860
your host and IDE key is very important

00:13:31,170 --> 00:13:37,640
I use phpstorm just a suggested one for

00:13:34,860 --> 00:13:37,640
phpstorm

00:13:41,510 --> 00:13:47,370
then restart our browser

00:13:44,120 --> 00:13:49,770
our web server so windows you go to the

00:13:47,370 --> 00:13:54,330
services find the apache monitor and

00:13:49,770 --> 00:13:57,510
restart it on UNIX systems sudo Apache

00:13:54,330 --> 00:14:01,530
control TTL restart or if you're using

00:13:57,510 --> 00:14:05,730
nginx nginx restart and that'll pick up

00:14:01,530 --> 00:14:07,560
on the changes and let you use it I like

00:14:05,730 --> 00:14:10,020
to verify that's actually working it's

00:14:07,560 --> 00:14:14,640
very important you can do a simple PHP

00:14:10,020 --> 00:14:15,840
info page and search for X debug if

00:14:14,640 --> 00:14:19,500
you're on the command line you can do

00:14:15,840 --> 00:14:22,980
PHP - I pipe it - grep X debug and make

00:14:19,500 --> 00:14:25,730
sure stuff shows up so if you have your

00:14:22,980 --> 00:14:29,130
PHP info might look something like this

00:14:25,730 --> 00:14:33,750
okay that shows you that it's there and

00:14:29,130 --> 00:14:37,830
it's available and ready to use if you

00:14:33,750 --> 00:14:40,440
hit command line grep X debug and a

00:14:37,830 --> 00:14:43,070
bunch of stuff will spew out okay okay

00:14:40,440 --> 00:14:45,350
you see that's there and it's enabled

00:14:43,070 --> 00:14:47,250
you can also get the pic that were

00:14:45,350 --> 00:14:49,350
instructions to where your I and I file

00:14:47,250 --> 00:14:53,790
this 4x debug if you want changing any

00:14:49,350 --> 00:14:54,390
settings that are it's a prepared PHP

00:14:53,790 --> 00:14:57,150
storm

00:14:54,390 --> 00:15:00,960
so PHP storm needs to know about X

00:14:57,150 --> 00:15:02,160
debugger yeah I tell it to start

00:15:00,960 --> 00:15:04,230
listening for database couldn't afford

00:15:02,160 --> 00:15:07,110
the connections so there's a handy

00:15:04,230 --> 00:15:10,650
little button looks like a telephone and

00:15:07,110 --> 00:15:12,600
it's hung up you click it and it becomes

00:15:10,650 --> 00:15:15,720
the second one where it's green so it's

00:15:12,600 --> 00:15:18,330
listening now so now your PHP storm is

00:15:15,720 --> 00:15:22,140
set up to is it is listening for these

00:15:18,330 --> 00:15:26,400
incoming connection connections to debug

00:15:22,140 --> 00:15:28,770
using the next debug there's a menu you

00:15:26,400 --> 00:15:31,320
can run you can also start it from down

00:15:28,770 --> 00:15:34,380
here start listen to for PPE debug

00:15:31,320 --> 00:15:36,860
connections is the alternative place to

00:15:34,380 --> 00:15:36,860
start that up

00:15:37,640 --> 00:15:46,110
and you have a bunch of settings so

00:15:43,380 --> 00:15:50,730
we'll flip over to phpstorm to show that

00:15:46,110 --> 00:16:03,110
one a little cleaner so if you go to

00:15:50,730 --> 00:16:08,160
your settings and go to PHP for debug

00:16:03,110 --> 00:16:11,130
you'll see it okay okay so you have some

00:16:08,160 --> 00:16:13,530
simple things here so you have ignore

00:16:11,130 --> 00:16:14,640
external connections break it first line

00:16:13,530 --> 00:16:17,100
of PHP scripts this one is especially

00:16:14,640 --> 00:16:20,040
helpful when you're first trying to get

00:16:17,100 --> 00:16:22,080
X debug started so it'll stop on the on

00:16:20,040 --> 00:16:25,050
the first the first line of any PHP

00:16:22,080 --> 00:16:26,730
scripts that come in rather than having

00:16:25,050 --> 00:16:27,870
to go set a breakpoint and figure out if

00:16:26,730 --> 00:16:30,420
maybe you don't know where it's coming

00:16:27,870 --> 00:16:33,840
in from that's another good time I've

00:16:30,420 --> 00:16:36,330
found to set that turn that on maxum

00:16:33,840 --> 00:16:40,320
with next to the connections at the same

00:16:36,330 --> 00:16:45,000
time simultaneously you can tell it to

00:16:40,320 --> 00:16:46,980
listen to a different port force break

00:16:45,000 --> 00:16:48,240
from there's no path masking mapping

00:16:46,980 --> 00:16:50,000
will get in the path mapping here in a

00:16:48,240 --> 00:16:52,440
second

00:16:50,000 --> 00:16:56,880
forced break the first line outside the

00:16:52,440 --> 00:16:59,070
project Zen debugger and evaluation I

00:16:56,880 --> 00:17:01,590
won't go into those ones but this is the

00:16:59,070 --> 00:17:08,130
main place to go set up to change those

00:17:01,590 --> 00:17:10,530
settings then you can see it there too

00:17:08,130 --> 00:17:17,190
it's in the language and frameworks PHP

00:17:10,530 --> 00:17:19,610
debug project mapping mapping so on PHP

00:17:17,190 --> 00:17:25,500
there's servers the server section

00:17:19,610 --> 00:17:28,740
support for that one too so I usually

00:17:25,500 --> 00:17:32,250
just search for server and PHP servers

00:17:28,740 --> 00:17:34,650
shows up so in this case we have X debug

00:17:32,250 --> 00:17:37,560
demo okay give something and just in

00:17:34,650 --> 00:17:41,190
your Etsy house file or whatever is why

00:17:37,560 --> 00:17:42,900
you're using a URL and you set up the

00:17:41,190 --> 00:17:44,940
pathing so it mapping so this is the

00:17:42,900 --> 00:17:48,320
this case this is running on a vagrant

00:17:44,940 --> 00:17:50,179
VM so it's var dub dub dub

00:17:48,320 --> 00:17:52,519
jemelle xdebug is where this one's

00:17:50,179 --> 00:17:54,110
sitting you can also map it up further

00:17:52,519 --> 00:17:57,830
if you wanted to so technically I could

00:17:54,110 --> 00:18:01,700
do it up here or even up here so you

00:17:57,830 --> 00:18:02,870
could bar dub dub dub what set it up to

00:18:01,700 --> 00:18:12,639
run for anything underneath that

00:18:02,870 --> 00:18:14,809
directory so make sure you set that up

00:18:12,639 --> 00:18:16,669
if you don't have it set up it won't

00:18:14,809 --> 00:18:23,389
pick it up or don't start prompting you

00:18:16,669 --> 00:18:26,049
have to go set it up anyways you jump

00:18:23,389 --> 00:18:26,049
back to the presentation

00:18:28,470 --> 00:18:34,260
okay so after you get that set up we

00:18:32,550 --> 00:18:35,940
want to send a breakpoint in our source

00:18:34,260 --> 00:18:40,040
code so you want to be able to stop

00:18:35,940 --> 00:18:42,180
debugger and and and step into that code

00:18:40,040 --> 00:18:45,000
trying to hit a line you know it's gonna

00:18:42,180 --> 00:18:46,290
be hitting it has to be executable lines

00:18:45,000 --> 00:18:49,320
you put on a blank line it's not gonna

00:18:46,290 --> 00:18:50,520
hit Sona make sure it's on the line or

00:18:49,320 --> 00:18:51,840
break on that first line like I

00:18:50,520 --> 00:18:54,390
mentioned trim that setting on you can

00:18:51,840 --> 00:18:59,340
make sure that it hits the code make

00:18:54,390 --> 00:19:01,350
sure it's gonna stop so in this case we

00:18:59,340 --> 00:19:04,590
see a step in to set up a breakpoint

00:19:01,350 --> 00:19:07,350
over on the the column there the red

00:19:04,590 --> 00:19:14,370
circle and when the code reaches there

00:19:07,350 --> 00:19:16,890
it'll stop acting activating debugger so

00:19:14,370 --> 00:19:18,660
unless a server should say client so

00:19:16,890 --> 00:19:21,780
usually like a browser plug-in if you're

00:19:18,660 --> 00:19:23,280
using a browser every browser has a

00:19:21,780 --> 00:19:26,330
bunch of these there's not just one

00:19:23,280 --> 00:19:30,120
these are ones I found that I'd be easy

00:19:26,330 --> 00:19:33,720
I've quickly added on so for Firefox

00:19:30,120 --> 00:19:37,170
there's easiest X debug chrome has X

00:19:33,720 --> 00:19:41,160
debug helper Safari has X debug toggler

00:19:37,170 --> 00:19:42,870
an X debug launcher for opera so

00:19:41,160 --> 00:19:44,430
depending what up which is browser you

00:19:42,870 --> 00:19:48,780
prefer need to test with there's

00:19:44,430 --> 00:19:50,790
different ways to turn that on and it

00:19:48,780 --> 00:19:55,800
looks like that so in this case it's

00:19:50,790 --> 00:19:57,000
just a little button I'll walk over here

00:19:55,800 --> 00:19:58,680
and point out that might be hard to see

00:19:57,000 --> 00:20:01,590
so right there this is gonna add the

00:19:58,680 --> 00:20:03,300
button onto the browser and when you

00:20:01,590 --> 00:20:07,800
click on it it's gonna essentially add a

00:20:03,300 --> 00:20:12,360
cookie that tells X debug to go ahead

00:20:07,800 --> 00:20:16,320
and turn on so in this case step into

00:20:12,360 --> 00:20:17,730
it's gonna tell it to stop and the the

00:20:16,320 --> 00:20:20,310
ID he's gonna pick up on that connection

00:20:17,730 --> 00:20:23,310
I'm gonna start debugging on that

00:20:20,310 --> 00:20:24,930
specific spot chrome again kind of

00:20:23,310 --> 00:20:28,110
similar thing we have a button that's

00:20:24,930 --> 00:20:33,630
added and when you do that it's gonna

00:20:28,110 --> 00:20:34,890
start debugging into that spot there's a

00:20:33,630 --> 00:20:38,010
few different ways you can do it you can

00:20:34,890 --> 00:20:41,309
also add a URL there

00:20:38,010 --> 00:20:45,360
of X underscore X debug underscore

00:20:41,309 --> 00:20:48,290
session underscore start equals the IDE

00:20:45,360 --> 00:20:50,220
key which in our case is phpstorm

00:20:48,290 --> 00:20:52,980
sanding with the post you can add

00:20:50,220 --> 00:20:55,130
another post parameter that will also

00:20:52,980 --> 00:20:57,600
initiate those you can also

00:20:55,130 --> 00:21:00,270
alternatively we should say have a

00:20:57,600 --> 00:21:03,809
header a header with the name of cookie

00:21:00,270 --> 00:21:05,610
with the value of x debug session it

00:21:03,809 --> 00:21:08,610
would equals ide key which is phpstorm

00:21:05,610 --> 00:21:10,290
for this scenario i also make a

00:21:08,610 --> 00:21:13,290
bookmarklet if you have something you

00:21:10,290 --> 00:21:16,820
want to do all these different ways will

00:21:13,290 --> 00:21:16,820
initiate that connection

00:21:17,660 --> 00:21:22,650
so over here we see you've got the URL

00:21:19,770 --> 00:21:24,809
added on to have question mark X debug

00:21:22,650 --> 00:21:26,880
session start equals phpstorm

00:21:24,809 --> 00:21:28,890
and now the browser will pick it up

00:21:26,880 --> 00:21:34,650
without having to add that little

00:21:28,890 --> 00:21:38,150
plug-in if using something like insomnia

00:21:34,650 --> 00:21:41,400
or some motor sort of rest client and

00:21:38,150 --> 00:21:43,470
this one has a header where it's gonna

00:21:41,400 --> 00:21:46,440
be added in sorry this is the URL so it

00:21:43,470 --> 00:21:48,720
has the URL at it in X debug so when you

00:21:46,440 --> 00:21:50,940
go to submit this your ID - evil pick it

00:21:48,720 --> 00:21:54,900
up okay so you can use rest clients to

00:21:50,940 --> 00:21:58,500
do that as well in this case it's using

00:21:54,900 --> 00:22:00,950
the header so I headed a cookie on that

00:21:58,500 --> 00:22:03,360
tab on the post you go the headers tab

00:22:00,950 --> 00:22:05,309
cookie and then add it all of them have

00:22:03,360 --> 00:22:07,280
different way to add the most of them

00:22:05,309 --> 00:22:10,020
have the way to add the header there

00:22:07,280 --> 00:22:13,440
this wall is getting will initiate next

00:22:10,020 --> 00:22:17,370
debug connection using rest client

00:22:13,440 --> 00:22:24,150
another common one we see you can add it

00:22:17,370 --> 00:22:25,650
to the URL in the with a get method or

00:22:24,150 --> 00:22:28,620
if you're using a post you can add it to

00:22:25,650 --> 00:22:31,230
the post headers you can add a cookie X

00:22:28,620 --> 00:22:33,559
debug session again just start off that

00:22:31,230 --> 00:22:33,559
connection

00:22:36,919 --> 00:22:43,830
anyone using soap soap anyone I'm one of

00:22:42,299 --> 00:22:45,629
the few of lucky ones huh yeah there's a

00:22:43,830 --> 00:22:48,179
few okay a few lucky Wraith and hands

00:22:45,629 --> 00:22:49,440
raised soap you I so in the drug testing

00:22:48,179 --> 00:22:52,799
world for whatever reason they'd really

00:22:49,440 --> 00:22:54,269
like soap I don't know what it is a lot

00:22:52,799 --> 00:22:56,450
of the systems for legacy systems we

00:22:54,269 --> 00:22:59,009
have to interact with we usually have a

00:22:56,450 --> 00:23:00,960
RESTful API available that we provide

00:22:59,009 --> 00:23:04,830
along with the soap version because

00:23:00,960 --> 00:23:08,460
everybody likes open in industry so if

00:23:04,830 --> 00:23:10,159
you're using new soap like this example

00:23:08,460 --> 00:23:12,389
they're not new soap it's an old library

00:23:10,159 --> 00:23:15,059
fusing soap you I would be another

00:23:12,389 --> 00:23:17,549
example here where you can add it to the

00:23:15,059 --> 00:23:19,289
ad to the URL you can add it to the

00:23:17,549 --> 00:23:21,179
header so in this case we have a cookie

00:23:19,289 --> 00:23:23,039
you go and add it down in this section

00:23:21,179 --> 00:23:25,429
down here and you can fire off for

00:23:23,039 --> 00:23:30,049
connections so when you're using a soap

00:23:25,429 --> 00:23:31,889
API you can also initiate the debugging

00:23:30,049 --> 00:23:33,059
it was really important that's one of

00:23:31,889 --> 00:23:35,669
the biggest hurdles is getting it to

00:23:33,059 --> 00:23:36,809
actually start up once you get it

00:23:35,669 --> 00:23:38,460
started up and it starts working the

00:23:36,809 --> 00:23:41,700
first time is like okay now I got this

00:23:38,460 --> 00:23:42,690
and so understanding that you can do it

00:23:41,700 --> 00:23:43,889
with all these different tools this

00:23:42,690 --> 00:23:45,690
doesn't just have to be through a

00:23:43,889 --> 00:23:47,039
browser it can be through a restful

00:23:45,690 --> 00:23:48,690
client it can be through an API client

00:23:47,039 --> 00:23:50,549
it can be through the command line

00:23:48,690 --> 00:23:52,100
determine all it can be a lots of

00:23:50,549 --> 00:23:55,320
different ways you can start this up

00:23:52,100 --> 00:23:57,119
depending on how you're developing how

00:23:55,320 --> 00:23:59,820
your process looks so it's important to

00:23:57,119 --> 00:24:01,259
remember that and to know that your

00:23:59,820 --> 00:24:02,129
different browsers or different tools

00:24:01,259 --> 00:24:08,129
are going to have different ways to

00:24:02,129 --> 00:24:09,480
initiate these connections so you click

00:24:08,129 --> 00:24:11,970
on the little debug button in the

00:24:09,480 --> 00:24:14,009
toolbar or add to forget or add the post

00:24:11,970 --> 00:24:15,720
or add the cookie that's going to help

00:24:14,009 --> 00:24:17,879
you get started on your and your your

00:24:15,720 --> 00:24:21,149
connections can help you to be able to

00:24:17,879 --> 00:24:25,350
start debugging we though the current

00:24:21,149 --> 00:24:28,830
page and it's gonna ask you to set some

00:24:25,350 --> 00:24:30,690
initial path mapping and mappings if you

00:24:28,830 --> 00:24:32,669
haven't set this up already so again

00:24:30,690 --> 00:24:34,830
this is just the servers we're just

00:24:32,669 --> 00:24:36,989
basically telling you telling the the

00:24:34,830 --> 00:24:40,139
client this is where the code sets on

00:24:36,989 --> 00:24:41,669
the server that's running now this your

00:24:40,139 --> 00:24:44,009
localhost you might you know your local

00:24:41,669 --> 00:24:46,139
machine is the past can be different

00:24:44,009 --> 00:24:48,919
there's the absolute path on the service

00:24:46,139 --> 00:24:48,919
what it's asking for

00:24:49,039 --> 00:24:58,049
so my case for dub dub dub HTML using XD

00:24:55,619 --> 00:25:00,269
bug so there's a whole bunch of

00:24:58,049 --> 00:25:03,929
different settings that you can use with

00:25:00,269 --> 00:25:07,109
XD bug has lots of nice things we'll get

00:25:03,929 --> 00:25:08,459
into those there's breakpoints we have

00:25:07,109 --> 00:25:09,479
stepping through code watches and

00:25:08,459 --> 00:25:11,219
constant we'll go through each of these

00:25:09,479 --> 00:25:12,419
and go through some of the buttons maybe

00:25:11,219 --> 00:25:17,479
you hit you haven't user some of the

00:25:12,419 --> 00:25:19,799
features you haven't seen so breakpoints

00:25:17,479 --> 00:25:21,209
you can go on this view where the actual

00:25:19,799 --> 00:25:23,309
breakpoints are there's actually

00:25:21,209 --> 00:25:25,469
different screen for that in phpstorm

00:25:23,309 --> 00:25:27,029
we can go and view all the current

00:25:25,469 --> 00:25:29,669
breakpoints which is really handy when

00:25:27,029 --> 00:25:30,929
the codes start stopping and you want to

00:25:29,669 --> 00:25:32,399
go remove some of those it's a good way

00:25:30,929 --> 00:25:35,039
to manage them all in one spot for your

00:25:32,399 --> 00:25:42,570
project so it shows a collection of

00:25:35,039 --> 00:25:44,099
where all your breakpoints are you can

00:25:42,570 --> 00:25:45,329
have as many breakpoints as you want and

00:25:44,099 --> 00:25:46,649
you can have conditional breakpoints

00:25:45,329 --> 00:25:48,539
conditional breakpoints are very helpful

00:25:46,649 --> 00:25:50,729
especially if the breakpoints may be in

00:25:48,539 --> 00:25:53,629
a loop and Oracle is being ran multiple

00:25:50,729 --> 00:25:57,059
times it acts just like an if statement

00:25:53,629 --> 00:26:00,539
so you write you know dollar sign value

00:25:57,059 --> 00:26:03,059
equals equals equals true and if that

00:26:00,539 --> 00:26:04,440
connect condition is returns a true or

00:26:03,059 --> 00:26:06,509
it's true that condition is true then

00:26:04,440 --> 00:26:09,089
the code is gonna stop that conditional

00:26:06,509 --> 00:26:10,950
breakpoint will be hit I often find it

00:26:09,089 --> 00:26:13,109
for all you know maybe you have little

00:26:10,950 --> 00:26:14,579
customer name equals something and you

00:26:13,109 --> 00:26:16,979
want certain customers having a problem

00:26:14,579 --> 00:26:18,539
this I'll add that to my conditional

00:26:16,979 --> 00:26:20,549
breakpoints and see what's happening for

00:26:18,539 --> 00:26:22,889
that specific customer or their ID

00:26:20,549 --> 00:26:25,950
rather than having to run you know run

00:26:22,889 --> 00:26:27,859
through every single time so very

00:26:25,950 --> 00:26:30,749
helpful to do conditional breakpoints

00:26:27,859 --> 00:26:33,959
there's a placement strategy it's not

00:26:30,749 --> 00:26:35,219
just drop it everywhere somewhere you

00:26:33,959 --> 00:26:37,589
know you want to have it you don't have

00:26:35,219 --> 00:26:39,719
a too early otherwise you'd be stepping

00:26:37,589 --> 00:26:41,700
too a lot of code and maybe you forget a

00:26:39,719 --> 00:26:43,829
certain step into versus step over which

00:26:41,700 --> 00:26:45,059
we'll get to in a minute you don't want

00:26:43,829 --> 00:26:47,190
to have it too late you're gonna miss

00:26:45,059 --> 00:26:50,279
what happened or the exception might be

00:26:47,190 --> 00:26:53,039
hit or make your code my ear out and you

00:26:50,279 --> 00:26:54,929
can't see what's going on if you have

00:26:53,039 --> 00:26:56,879
too many it becomes tedious it becomes

00:26:54,929 --> 00:27:00,899
hard to manage and if you have too many

00:26:56,879 --> 00:27:01,980
it's just too this cumbersome also you

00:27:00,899 --> 00:27:04,770
have to consider things like

00:27:01,980 --> 00:27:06,750
the time limit if your code is some

00:27:04,770 --> 00:27:09,809
amount of time you need to run it in or

00:27:06,750 --> 00:27:11,190
if your maybe your your UI has you know

00:27:09,809 --> 00:27:12,870
a 30-second timeout right and you're

00:27:11,190 --> 00:27:15,720
stepping in the code while the request

00:27:12,870 --> 00:27:18,990
is going out you know you I might stop

00:27:15,720 --> 00:27:20,040
her listening for it for example so

00:27:18,990 --> 00:27:21,179
that's something else to consider if you

00:27:20,040 --> 00:27:23,370
have too many you're having to step too

00:27:21,179 --> 00:27:24,299
far you I might you know my stop

00:27:23,370 --> 00:27:25,950
listening to you and that's that's

00:27:24,299 --> 00:27:33,090
depending on how you have your device it

00:27:25,950 --> 00:27:35,520
up it might be fine so this example we

00:27:33,090 --> 00:27:39,330
see a couple breakpoints again so it's

00:27:35,520 --> 00:27:40,650
on the instantiation and we want to see

00:27:39,330 --> 00:27:42,419
the hidden value that means the values

00:27:40,650 --> 00:27:46,950
too coming out okay so it's gonna stop

00:27:42,419 --> 00:27:49,110
at both those points here we see is all

00:27:46,950 --> 00:27:51,390
the breakpoints available you can also

00:27:49,110 --> 00:27:53,030
manage the conditions here so you could

00:27:51,390 --> 00:27:56,280
say this condition is you know whatever

00:27:53,030 --> 00:27:58,440
condition you want to have you can tell

00:27:56,280 --> 00:28:03,840
it to log message to the console you can

00:27:58,440 --> 00:28:04,890
evaluate specific and expressions can

00:28:03,840 --> 00:28:05,880
you tell it to remove the breakpoint

00:28:04,890 --> 00:28:08,160
which once it's say oh but that one's

00:28:05,880 --> 00:28:09,870
very handy if you want to remove that

00:28:08,160 --> 00:28:11,640
breakpoint you only want to see it once

00:28:09,870 --> 00:28:17,880
then you want to remove it that's a good

00:28:11,640 --> 00:28:20,240
spot to do that ad stepping through the

00:28:17,880 --> 00:28:23,540
code there's a few different key

00:28:20,240 --> 00:28:26,610
commands to run so you have the play

00:28:23,540 --> 00:28:29,990
which will basically tell it to continue

00:28:26,610 --> 00:28:29,990
on executing as it was before

00:28:33,930 --> 00:28:37,680
so your code will come through you'll be

00:28:36,360 --> 00:28:40,200
stepping into things yet play in the

00:28:37,680 --> 00:28:43,050
code will continue on its function f8 if

00:28:40,200 --> 00:28:45,720
you're on a Mac you can also tell it to

00:28:43,050 --> 00:28:46,980
stop so you want to kill execution

00:28:45,720 --> 00:28:47,700
basically you want to tell it to stop

00:28:46,980 --> 00:28:50,820
what it's doing

00:28:47,700 --> 00:28:52,580
you're gonna terminate the script you

00:28:50,820 --> 00:28:55,680
have view all breakpoints over there and

00:28:52,580 --> 00:28:56,820
disable all breakpoints it's really

00:28:55,680 --> 00:28:59,400
helpful if you want to turn that off and

00:28:56,820 --> 00:29:00,450
just let the code run again they'll be

00:28:59,400 --> 00:29:02,460
able to turn them back on again later

00:29:00,450 --> 00:29:07,470
with autumn to go find them in the lines

00:29:02,460 --> 00:29:09,780
of code and click on the column so we

00:29:07,470 --> 00:29:15,000
also have the concept of stepping over

00:29:09,780 --> 00:29:17,610
stepping into so this is the scenario

00:29:15,000 --> 00:29:19,220
where you have a piece of code where you

00:29:17,610 --> 00:29:21,720
want to step over the line

00:29:19,220 --> 00:29:23,010
we're step into would be if it's calling

00:29:21,720 --> 00:29:25,590
a method it's going to step into that

00:29:23,010 --> 00:29:27,360
method that's being called so if your

00:29:25,590 --> 00:29:29,820
stance ating a new class that has a

00:29:27,360 --> 00:29:31,020
constructor for example and you step

00:29:29,820 --> 00:29:32,100
into that it's gonna go into the

00:29:31,020 --> 00:29:35,070
constructor and it's gonna step through

00:29:32,100 --> 00:29:36,090
that or if it's calling to a specific

00:29:35,070 --> 00:29:37,770
method it's gonna step into that

00:29:36,090 --> 00:29:39,890
specific method and you can see what's

00:29:37,770 --> 00:29:42,210
going on so you know following through

00:29:39,890 --> 00:29:43,560
into the method step over it's gonna

00:29:42,210 --> 00:29:46,890
ignore that it's gonna go on to the next

00:29:43,560 --> 00:29:50,970
line in that file unless it's another

00:29:46,890 --> 00:29:54,990
breakpoint somewhere else for step into

00:29:50,970 --> 00:29:56,460
the end is for step into step out so

00:29:54,990 --> 00:30:00,360
step I was gonna jump out to the next

00:29:56,460 --> 00:30:01,560
layer out of the abstraction level it's

00:30:00,360 --> 00:30:02,850
a for example if you're in a class and

00:30:01,560 --> 00:30:05,400
you said passed me step out of the class

00:30:02,850 --> 00:30:06,510
go to where it was outside of there you

00:30:05,400 --> 00:30:08,970
know they're very helpful one is run to

00:30:06,510 --> 00:30:13,260
cursor so if you have your cursor set

00:30:08,970 --> 00:30:16,410
somewhere on the file it's gonna keep

00:30:13,260 --> 00:30:17,970
executing the peach PPP until it gets to

00:30:16,410 --> 00:30:21,990
that specific line and then it'll stop

00:30:17,970 --> 00:30:25,080
for you at that line no one's very very

00:30:21,990 --> 00:30:27,830
helpful when you're trying to you know

00:30:25,080 --> 00:30:30,180
the problems between point a and point B

00:30:27,830 --> 00:30:32,310
but you don't wanna have to go set up a

00:30:30,180 --> 00:30:34,410
permanent break point for example I use

00:30:32,310 --> 00:30:36,270
movie theater you know you're moving

00:30:34,410 --> 00:30:37,530
your cursor through the code and say ok

00:30:36,270 --> 00:30:39,680
run D here and then I'll just run to

00:30:37,530 --> 00:30:39,680
there

00:30:42,770 --> 00:30:48,720
evaluate expression this is one of my

00:30:45,000 --> 00:30:52,470
favorite just build evaluate and run

00:30:48,720 --> 00:30:55,140
some PHP code and see what's going on it

00:30:52,470 --> 00:30:57,960
shows the value of the address is

00:30:55,140 --> 00:31:01,200
another do you see are they value

00:30:57,960 --> 00:31:02,880
addresses memory you can hide empty

00:31:01,200 --> 00:31:06,090
super global variables it's on by

00:31:02,880 --> 00:31:07,679
default you can add methods to a skip

00:31:06,090 --> 00:31:10,500
list so if you want to skip all

00:31:07,679 --> 00:31:11,520
constructors for example or you want to

00:31:10,500 --> 00:31:13,620
you know there's certain method you

00:31:11,520 --> 00:31:15,870
always wanted to just skip you can add

00:31:13,620 --> 00:31:19,559
that to a skip list and it'll always be

00:31:15,870 --> 00:31:22,289
skipped you won't have to see it and

00:31:19,559 --> 00:31:25,919
there's watches I'm wearing a watch it's

00:31:22,289 --> 00:31:29,039
not that kind of watch it's the ability

00:31:25,919 --> 00:31:31,500
to see live updates on specific code you

00:31:29,039 --> 00:31:33,840
can add you know maybe a value or a

00:31:31,500 --> 00:31:36,090
method call or whatever and every time

00:31:33,840 --> 00:31:40,049
every line is gonna update that that

00:31:36,090 --> 00:31:41,700
value so you can see what is being well

00:31:40,049 --> 00:31:42,960
what the watch the value essentially

00:31:41,700 --> 00:31:45,210
right so you can see what's going on

00:31:42,960 --> 00:31:48,030
with that value see what's going on and

00:31:45,210 --> 00:31:49,169
and know how to interact with that it's

00:31:48,030 --> 00:31:50,669
another very helpful one if you're

00:31:49,169 --> 00:31:53,400
having a problem with a specific area of

00:31:50,669 --> 00:31:56,730
the code and it's you know I'm sure

00:31:53,400 --> 00:31:58,080
what's going on you can see that again

00:31:56,730 --> 00:32:01,620
you're gonna have expressions in there

00:31:58,080 --> 00:32:04,049
and see what's going on the console the

00:32:01,620 --> 00:32:06,510
consoles another aerial of a thing I

00:32:04,049 --> 00:32:09,090
love to use and in this case over here

00:32:06,510 --> 00:32:11,520
we have code that you can run and see

00:32:09,090 --> 00:32:14,850
what's the output is so if you have your

00:32:11,520 --> 00:32:17,909
code break at a specific spot your your

00:32:14,850 --> 00:32:19,080
debugging pause for a moment you go in

00:32:17,909 --> 00:32:21,990
there and start running some commands

00:32:19,080 --> 00:32:24,240
and interacting with the class so we're

00:32:21,990 --> 00:32:27,480
seeing a lot specific value is or seeing

00:32:24,240 --> 00:32:28,799
if the conditionals working or not you

00:32:27,480 --> 00:32:30,720
can do the same thing with watches but

00:32:28,799 --> 00:32:32,159
the console is kind of handy if you want

00:32:30,720 --> 00:32:33,059
to just kind of went off start running

00:32:32,159 --> 00:32:35,250
through a bunch of commands and see

00:32:33,059 --> 00:32:38,460
what's going on so that's a kind of an

00:32:35,250 --> 00:32:42,510
underused feature I find that I really

00:32:38,460 --> 00:32:44,880
enjoy I really like to use my typical

00:32:42,510 --> 00:32:47,220
day of development I have X debug up and

00:32:44,880 --> 00:32:51,750
open I use it pretty much every single

00:32:47,220 --> 00:32:53,280
day many times and just because the help

00:32:51,750 --> 00:32:55,080
it bird provides me the insight it gives

00:32:53,280 --> 00:32:56,010
me through like the console through the

00:32:55,080 --> 00:32:59,100
watching

00:32:56,010 --> 00:33:01,470
and with development just really helps

00:32:59,100 --> 00:33:03,570
ease the development process makes it

00:33:01,470 --> 00:33:09,840
easier to understand what's going on and

00:33:03,570 --> 00:33:11,040
when and why and how so we're gonna do a

00:33:09,840 --> 00:33:13,590
lick summary and we're gonna go into

00:33:11,040 --> 00:33:16,140
some more life coding examples we're

00:33:13,590 --> 00:33:19,049
gonna go into actually using the console

00:33:16,140 --> 00:33:20,490
actually using bright conditional

00:33:19,049 --> 00:33:23,640
breakpoints we'll see how that how that

00:33:20,490 --> 00:33:27,660
works behaves now before we get to the

00:33:23,640 --> 00:33:38,600
summary actually jumping back over to

00:33:27,660 --> 00:33:41,340
the IDE we'll close out the settings and

00:33:38,600 --> 00:33:45,510
so let's say we have this is another

00:33:41,340 --> 00:33:47,760
classic problem right so in PHP if you

00:33:45,510 --> 00:33:50,040
truck if you try to divide number what's

00:33:47,760 --> 00:33:52,530
gonna happen can you want to predict the

00:33:50,040 --> 00:33:54,870
behavior here we have a really large

00:33:52,530 --> 00:33:58,919
number divided by really the same number

00:33:54,870 --> 00:34:00,830
plus one even know it's gonna happen any

00:33:58,919 --> 00:34:06,240
guesses

00:34:00,830 --> 00:34:07,679
so um be brave what's gonna happen it's

00:34:06,240 --> 00:34:13,770
gonna be someone I hear I can hear some

00:34:07,679 --> 00:34:21,570
whispering it's gonna be one yeah so if

00:34:13,770 --> 00:34:25,770
we if you run that over here it's gonna

00:34:21,570 --> 00:34:29,730
give us a double of one good guess or

00:34:25,770 --> 00:34:33,300
experience that's not truly the answer

00:34:29,730 --> 00:34:37,109
though is it it is for PHP that is

00:34:33,300 --> 00:34:39,629
expected behavior but that's PHP is

00:34:37,109 --> 00:34:42,240
gonna output one yeah if you're using

00:34:39,629 --> 00:34:43,820
try and do some maths within PHP you

00:34:42,240 --> 00:34:48,780
don't want to use the libraries like BC

00:34:43,820 --> 00:34:50,940
BC divided BC ad BC multiply and the

00:34:48,780 --> 00:34:52,770
other math libraries are very good but

00:34:50,940 --> 00:34:54,750
if you're a developer and you have a

00:34:52,770 --> 00:34:56,750
maybe you're working on a financial

00:34:54,750 --> 00:34:59,940
institution you had some transactions

00:34:56,750 --> 00:35:01,650
maybe you had some sure your values your

00:34:59,940 --> 00:35:03,930
they're very specific on what you're

00:35:01,650 --> 00:35:06,570
getting and so you have a problem

00:35:03,930 --> 00:35:08,490
reported to you and you know you've

00:35:06,570 --> 00:35:09,540
you've narrowed it down to the specific

00:35:08,490 --> 00:35:11,100
little area

00:35:09,540 --> 00:35:13,410
and you want to see exactly what's going

00:35:11,100 --> 00:35:16,500
on you know if you're running it you see

00:35:13,410 --> 00:35:18,660
if you're just running into UI you might

00:35:16,500 --> 00:35:21,120
not notice it and you might just keep

00:35:18,660 --> 00:35:26,010
debugging and adding your error logs and

00:35:21,120 --> 00:35:29,880
echos and so on wellthanks debug we come

00:35:26,010 --> 00:35:36,870
in here add the breakpoint in this case

00:35:29,880 --> 00:35:41,730
let's go to the browser it divided dot

00:35:36,870 --> 00:35:45,420
PHP if you note over here I have the set

00:35:41,730 --> 00:35:50,220
to debug over here to enable the

00:35:45,420 --> 00:35:52,530
debugging on the IDE I turned on the

00:35:50,220 --> 00:35:56,220
debugging here that's the little

00:35:52,530 --> 00:36:00,470
telephone and now we have the value so I

00:35:56,220 --> 00:36:05,820
can see if I come into here I can go and

00:36:00,470 --> 00:36:10,400
here's the step over I can now see the

00:36:05,820 --> 00:36:13,800
value is equal to one so what I could do

00:36:10,400 --> 00:36:18,420
is I could say let's see if you want to

00:36:13,800 --> 00:36:18,930
hit this break point here so there's a

00:36:18,420 --> 00:36:22,820
condition

00:36:18,930 --> 00:36:27,330
let's do you dollar sign value it's not

00:36:22,820 --> 00:36:30,030
literally equal to one point zero zero

00:36:27,330 --> 00:36:31,530
one or something right because that's

00:36:30,030 --> 00:36:35,700
what we're expecting we know it's what

00:36:31,530 --> 00:36:38,340
we want that's not what's happening so

00:36:35,700 --> 00:36:39,930
if we go to the command line again it's

00:36:38,340 --> 00:36:41,310
gonna it's gonna stop there because that

00:36:39,930 --> 00:36:42,930
value is not equal at so now we have

00:36:41,310 --> 00:36:45,270
conditional it's a conditional

00:36:42,930 --> 00:36:47,730
breakpoint we see that's working and

00:36:45,270 --> 00:36:47,940
help us to determine where the problem

00:36:47,730 --> 00:36:49,980
was

00:36:47,940 --> 00:36:53,070
now we can actually see what's going on

00:36:49,980 --> 00:36:58,370
I have a watch over here so you could

00:36:53,070 --> 00:37:00,720
add another watch of arcing value

00:36:58,370 --> 00:37:02,490
divided by you know one or whatever you

00:37:00,720 --> 00:37:04,050
wanted to do and it would tell you

00:37:02,490 --> 00:37:06,210
that's equal to one so you can have

00:37:04,050 --> 00:37:07,650
different watches add it in there and as

00:37:06,210 --> 00:37:09,410
you step over the code you can see what

00:37:07,650 --> 00:37:12,120
that that was was happening with it

00:37:09,410 --> 00:37:14,040
that's a really good way to find

00:37:12,120 --> 00:37:16,320
problems you know apply it and this kind

00:37:14,040 --> 00:37:17,460
of this way where you know you have a

00:37:16,320 --> 00:37:20,010
specific problem you know it's a

00:37:17,460 --> 00:37:21,339
specific area you can apply those

00:37:20,010 --> 00:37:24,579
different conditionals

00:37:21,339 --> 00:37:29,200
um it's a right-click in this case by

00:37:24,579 --> 00:37:35,410
the way to add conditionals to just stop

00:37:29,200 --> 00:37:37,809
the break stop the code so let's see we

00:37:35,410 --> 00:37:42,219
have another scenario do you want to

00:37:37,809 --> 00:37:46,089
fall into the methods I'm gonna remove

00:37:42,219 --> 00:37:47,319
the so now we're gonna clean this up

00:37:46,089 --> 00:37:50,200
because we just say we don't want to

00:37:47,319 --> 00:37:52,900
have it in their course this just going

00:37:50,200 --> 00:37:54,069
to production this is serious we don't

00:37:52,900 --> 00:37:56,920
want to have var dumps going on in

00:37:54,069 --> 00:37:58,029
production so let's say you want to

00:37:56,920 --> 00:37:59,979
follow some methods maybe you don't

00:37:58,029 --> 00:38:04,450
understand the logic flow that's going

00:37:59,979 --> 00:38:05,890
on with specific class so you know you

00:38:04,450 --> 00:38:08,710
want to start you want to have a

00:38:05,890 --> 00:38:10,210
breakpoint in the start method and

00:38:08,710 --> 00:38:13,239
there's a few different methods there

00:38:10,210 --> 00:38:14,410
different layers going down to so maybe

00:38:13,239 --> 00:38:24,069
you want to stop it at the instantiation

00:38:14,410 --> 00:38:26,229
as well okay so down here we'll go there

00:38:24,069 --> 00:38:29,499
so we see this danshi ation and step

00:38:26,229 --> 00:38:32,469
over that we can see the dollar sign

00:38:29,499 --> 00:38:36,219
follow value or follow is a follow

00:38:32,469 --> 00:38:38,380
methods we want to step into that so we

00:38:36,219 --> 00:38:40,150
move to the step into button it's going

00:38:38,380 --> 00:38:42,999
to step into that first method is being

00:38:40,150 --> 00:38:47,140
called no we can see the value is equal

00:38:42,999 --> 00:38:48,940
to we know was passed in there and we

00:38:47,140 --> 00:38:50,229
can step over that again we're step into

00:38:48,940 --> 00:38:53,680
it we could say okay what's the second

00:38:50,229 --> 00:38:57,339
being called okay so now the value is

00:38:53,680 --> 00:38:58,539
four okay and then we could step over so

00:38:57,339 --> 00:39:02,140
don't want going to the third one we're

00:38:58,539 --> 00:39:04,869
fine with that see and you can use this

00:39:02,140 --> 00:39:08,289
to step into all the different methods

00:39:04,869 --> 00:39:11,109
and see what's going on with your what's

00:39:08,289 --> 00:39:14,769
your application in this case it failed

00:39:11,109 --> 00:39:17,349
on the third one we can see that because

00:39:14,769 --> 00:39:19,930
it hits the three which is a string and

00:39:17,349 --> 00:39:22,420
we're using peach b7 we're expecting a

00:39:19,930 --> 00:39:23,589
hint and want to return an int which you

00:39:22,420 --> 00:39:27,930
passed a string and obviously it's going

00:39:23,589 --> 00:39:27,930
to fail because it's not that same type

00:39:29,699 --> 00:39:34,959
another example maybe we're having to

00:39:31,689 --> 00:39:36,759
deal with some array keys and you want

00:39:34,959 --> 00:39:38,049
to see how race sorting is working maybe

00:39:36,759 --> 00:39:39,819
we have a problem with our sorting on

00:39:38,049 --> 00:39:44,709
arrays so we know that there's gonna be

00:39:39,819 --> 00:39:50,529
some casting going on here so we can set

00:39:44,709 --> 00:39:53,769
a breakpoint on that and go PPE array

00:39:50,529 --> 00:39:56,199
keys and see what's going on so we can

00:39:53,769 --> 00:39:58,449
see the raid beforehand and we see this

00:39:56,199 --> 00:40:01,209
is what its gonna look like we can see

00:39:58,449 --> 00:40:03,729
how was built beforehand and if we step

00:40:01,209 --> 00:40:05,619
over that we're gonna see was is after

00:40:03,729 --> 00:40:07,809
the case or we could see you know that

00:40:05,619 --> 00:40:09,249
how it shuffled and how its sorted so

00:40:07,809 --> 00:40:12,400
it's very helpful to get an idea of how

00:40:09,249 --> 00:40:19,119
PHP is behaving behind the scenes to

00:40:12,400 --> 00:40:26,529
give insight into how it's behaving we

00:40:19,119 --> 00:40:29,589
can go into another one here so this

00:40:26,529 --> 00:40:30,640
scenario we have another array where we

00:40:29,589 --> 00:40:33,759
have a bunch of different break points

00:40:30,640 --> 00:40:36,699
and we want to know if if it's true so

00:40:33,759 --> 00:40:41,079
PHP if ya if you uh if you do an

00:40:36,699 --> 00:40:45,099
evaluation on a value it's kind of funny

00:40:41,079 --> 00:40:47,409
and and I have ran into a problem where

00:40:45,099 --> 00:40:50,199
we had code was behaving not as expected

00:40:47,409 --> 00:40:52,019
and it turns out that we had a string

00:40:50,199 --> 00:40:55,689
false

00:40:52,019 --> 00:40:59,439
okay string false evaluates to what does

00:40:55,689 --> 00:41:01,329
it value a to true yeah what just

00:40:59,439 --> 00:41:03,249
expected we if you get in too deep the

00:41:01,329 --> 00:41:04,809
PHP code we know it's expected because

00:41:03,249 --> 00:41:07,140
it's not an empty string and it's not

00:41:04,809 --> 00:41:12,189
equal to zero

00:41:07,140 --> 00:41:14,699
so if you render that problem oh this is

00:41:12,189 --> 00:41:21,369
a good way to debug into that so we can

00:41:14,699 --> 00:41:23,349
clear that and go PHP bull okay so now

00:41:21,369 --> 00:41:25,509
we see the value we have a true okay

00:41:23,349 --> 00:41:27,999
that's great that's what we want it's

00:41:25,509 --> 00:41:30,519
gonna hit true that's what we expect and

00:41:27,999 --> 00:41:32,319
we have value one that's true evaluates

00:41:30,519 --> 00:41:34,359
to true and an if statement we have a

00:41:32,319 --> 00:41:38,019
string one get evaluates to true that's

00:41:34,359 --> 00:41:40,900
great we have a string false value ways

00:41:38,019 --> 00:41:42,580
to true again we have a string anything

00:41:40,900 --> 00:41:45,160
and evaluates to true

00:41:42,580 --> 00:41:51,130
we have a null that's gonna hit the

00:41:45,160 --> 00:41:53,470
faults we have an array of weight array

00:41:51,130 --> 00:41:56,500
an empty array we see assisted the

00:41:53,470 --> 00:41:59,950
brazen braces or brackets and it's gonna

00:41:56,500 --> 00:42:03,880
be false because an empty array 12.30

00:41:59,950 --> 00:42:09,730
for true okay so it evaluates that float

00:42:03,880 --> 00:42:11,740
as a true we have 0 another which is

00:42:09,730 --> 00:42:15,550
true there's a little trick 1 because we

00:42:11,740 --> 00:42:19,300
had zeros in it and a value false there

00:42:15,550 --> 00:42:21,160
0 is gonna evaluate to a false and a

00:42:19,300 --> 00:42:24,460
string fault zero is gonna evaluate to

00:42:21,160 --> 00:42:28,240
false as well so we can use X debug and

00:42:24,460 --> 00:42:31,180
IDE tool layover for it to start getting

00:42:28,240 --> 00:42:34,890
an idea of why our code is failing get a

00:42:31,180 --> 00:42:36,940
better understanding of what's happening

00:42:34,890 --> 00:42:39,130
by setting is a different breakpoint

00:42:36,940 --> 00:42:40,690
strategically stepping into where we

00:42:39,130 --> 00:42:49,300
need to see what we need for more

00:42:40,690 --> 00:42:54,970
information so we're gonna jump back

00:42:49,300 --> 00:42:58,090
over to the presentation here so kind of

00:42:54,970 --> 00:43:01,690
a summary we see the XD bugs a more

00:42:58,090 --> 00:43:03,190
efficient way to debug we know that we

00:43:01,690 --> 00:43:06,270
have problems with our code it's not

00:43:03,190 --> 00:43:08,770
always flawless it's gonna have problems

00:43:06,270 --> 00:43:12,130
it provides a much better way to debug

00:43:08,770 --> 00:43:14,950
than adding in developer lines

00:43:12,130 --> 00:43:16,630
we'll call them gives visibility into

00:43:14,950 --> 00:43:19,930
our code we can understand better what's

00:43:16,630 --> 00:43:21,730
going on we can know if our code we know

00:43:19,930 --> 00:43:24,070
what our code is how it's truly behaving

00:43:21,730 --> 00:43:25,570
we can see where it came from we can see

00:43:24,070 --> 00:43:27,550
the methods that were called we can see

00:43:25,570 --> 00:43:30,130
the memory being used by that we didn't

00:43:27,550 --> 00:43:34,030
go into the profiling but we get a

00:43:30,130 --> 00:43:35,560
better idea of what is going on we have

00:43:34,030 --> 00:43:37,570
the ability to change code on the fly we

00:43:35,560 --> 00:43:40,900
can change values we can use the console

00:43:37,570 --> 00:43:42,940
we can interact with our PHP code we can

00:43:40,900 --> 00:43:46,000
watch for specific values we can see

00:43:42,940 --> 00:43:47,710
what exactly a value is equal to we can

00:43:46,000 --> 00:43:49,090
get the datatype out of it right and

00:43:47,710 --> 00:43:52,000
echo is not going to tell you the

00:43:49,090 --> 00:43:53,470
datatype or if you're in PHP you can see

00:43:52,000 --> 00:43:55,350
that it's a strain you can see if it's

00:43:53,470 --> 00:43:58,380
at the end

00:43:55,350 --> 00:44:01,950
or bool or null or resource and object

00:43:58,380 --> 00:44:03,870
array we can watch this line by line

00:44:01,950 --> 00:44:05,400
without having to add all these

00:44:03,870 --> 00:44:08,400
different lines of debugging code and

00:44:05,400 --> 00:44:12,120
get a much better understanding of how

00:44:08,400 --> 00:44:13,620
the code arrived where it was so I

00:44:12,120 --> 00:44:16,560
wanted to have some kind of discussion

00:44:13,620 --> 00:44:18,570
time where we kind of asked different

00:44:16,560 --> 00:44:20,400
questions again get feedback as a group

00:44:18,570 --> 00:44:24,900
this is something that a lot of people

00:44:20,400 --> 00:44:26,700
use or hopefully can use so we want to

00:44:24,900 --> 00:44:28,170
talk about some these are different

00:44:26,700 --> 00:44:30,030
topics I kinda want to focus on so what

00:44:28,170 --> 00:44:32,520
are some setup issues that people had

00:44:30,030 --> 00:44:33,930
and I know that's a major hurdle a lot

00:44:32,520 --> 00:44:35,910
of people run into is just setting it up

00:44:33,930 --> 00:44:38,700
so what are some issues that people have

00:44:35,910 --> 00:44:39,960
run into is set up and how can we how

00:44:38,700 --> 00:44:42,080
can that be helped how can we help with

00:44:39,960 --> 00:44:42,080
that

00:44:50,370 --> 00:45:00,870
I so I was using XD perk with Drupal and

00:44:58,500 --> 00:45:04,890
postman and that was working fine and

00:45:00,870 --> 00:45:06,540
then I moved to doc Sal and for some

00:45:04,890 --> 00:45:07,640
reason I can't Gary to break from

00:45:06,540 --> 00:45:10,080
postman anymore

00:45:07,640 --> 00:45:12,450
so actually bugs up and running that's

00:45:10,080 --> 00:45:17,150
all great but when I fire in a request

00:45:12,450 --> 00:45:19,890
from postman no break I'm doing wrong

00:45:17,150 --> 00:45:21,150
that's a great great scenario we run

00:45:19,890 --> 00:45:23,490
into a lot right so maybe we're starting

00:45:21,150 --> 00:45:25,290
to do something different where it's not

00:45:23,490 --> 00:45:29,040
this starts breaking right so you ad are

00:45:25,290 --> 00:45:31,890
you adding breakpoints I'm guessing I

00:45:29,040 --> 00:45:33,030
can get those breakpoints to trigger if

00:45:31,890 --> 00:45:35,130
I'm kind of chord in a function

00:45:33,030 --> 00:45:36,930
internally cuz it's coming from an

00:45:35,130 --> 00:45:37,500
external request I've tried the cookie

00:45:36,930 --> 00:45:40,530
method

00:45:37,500 --> 00:45:44,250
I've tried putting stuff in the URL

00:45:40,530 --> 00:45:45,030
I just can't Gary to go thank you so

00:45:44,250 --> 00:45:47,130
that's a really good question because

00:45:45,030 --> 00:45:48,480
that happens quite often so we getting

00:45:47,130 --> 00:45:51,060
different requests maybe we're using a

00:45:48,480 --> 00:45:53,250
different tool there's a few different

00:45:51,060 --> 00:45:55,700
things to check on those so as mentioned

00:45:53,250 --> 00:45:57,870
in the the phpstorm settings for example

00:45:55,700 --> 00:46:00,960
there's the remote connections

00:45:57,870 --> 00:46:03,000
specifically we can or external I should

00:46:00,960 --> 00:46:04,350
say to allow external connections that

00:46:03,000 --> 00:46:06,000
could be one thing that check so that's

00:46:04,350 --> 00:46:07,530
another major thing so when you're

00:46:06,000 --> 00:46:09,330
setting up we got to make sure that if

00:46:07,530 --> 00:46:11,010
you're using external connections from

00:46:09,330 --> 00:46:14,640
different different machine to check the

00:46:11,010 --> 00:46:17,490
external settings another one is the

00:46:14,640 --> 00:46:19,410
remote auto start setting we mentioned I

00:46:17,490 --> 00:46:23,180
mentioned that in the ini that really

00:46:19,410 --> 00:46:25,260
helps with automatically starting it up

00:46:23,180 --> 00:46:27,300
so there's a few different things to

00:46:25,260 --> 00:46:28,590
check with that those are usually I

00:46:27,300 --> 00:46:30,230
think well I've found at least has been

00:46:28,590 --> 00:46:32,790
to the big things another thing is the

00:46:30,230 --> 00:46:34,290
mapping on the server so we mentioned

00:46:32,790 --> 00:46:36,000
the absolute path on the server so

00:46:34,290 --> 00:46:37,500
that's another major thing to get set up

00:46:36,000 --> 00:46:38,940
make sure that's that's correct so if it

00:46:37,500 --> 00:46:40,830
changes for example and what make sure

00:46:38,940 --> 00:46:42,930
you update that so a very good question

00:46:40,830 --> 00:46:44,610
I mean any other questions about setup

00:46:42,930 --> 00:46:46,650
so I know that's things I mentioned that

00:46:44,610 --> 00:46:49,130
said that's half the battle right there

00:46:46,650 --> 00:46:49,130
yeah

00:46:50,589 --> 00:46:58,150
I was looking for just-in-time debugging

00:46:54,249 --> 00:47:02,650
so automatically at the breakpoint when

00:46:58,150 --> 00:47:03,940
there is an exception okay yes so the

00:47:02,650 --> 00:47:06,819
questions about how to automatically add

00:47:03,940 --> 00:47:09,339
it like why would I found I just go and

00:47:06,819 --> 00:47:11,229
add the day when I'm working on new code

00:47:09,339 --> 00:47:13,839
I'll just put breakpoints in my tri

00:47:11,229 --> 00:47:16,989
caches and then as I go along its gonna

00:47:13,839 --> 00:47:19,150
get hit let that's what I have found I

00:47:16,989 --> 00:47:20,289
put at the highest level to I can you

00:47:19,150 --> 00:47:21,900
know so if you extended yeah I was gonna

00:47:20,289 --> 00:47:29,259
put it up higher so he gets caught but

00:47:21,900 --> 00:47:32,229
yeah so Derek says that there's an

00:47:29,259 --> 00:47:34,059
option to stop at exception points yeah

00:47:32,229 --> 00:47:36,999
so that would be the best answer right

00:47:34,059 --> 00:47:39,249
there phpstorm you said any other

00:47:36,999 --> 00:47:40,390
general setup questions this is

00:47:39,249 --> 00:47:44,589
something a lot of people houses they've

00:47:40,390 --> 00:47:47,289
seen problems so this is not so much a

00:47:44,589 --> 00:47:48,999
setup question but often find I mean I

00:47:47,289 --> 00:47:51,369
know XD bugs there and I know it's great

00:47:48,999 --> 00:47:53,559
I find myself it's quite simple problems

00:47:51,369 --> 00:47:55,390
I'll just do a VAR time for a die or an

00:47:53,559 --> 00:47:56,799
echo or something and then you get sort

00:47:55,390 --> 00:47:59,380
of drawn into that track and you sort of

00:47:56,799 --> 00:48:03,549
forget that XD bug is there so how can I

00:47:59,380 --> 00:48:05,499
be sort of more rigorous about using the

00:48:03,549 --> 00:48:07,869
tool in the first place so how do we

00:48:05,499 --> 00:48:10,299
really leverage this tool and are in our

00:48:07,869 --> 00:48:11,739
daily development that's good that's a

00:48:10,299 --> 00:48:13,359
good point I in the past I've forgotten

00:48:11,739 --> 00:48:15,339
about it from time to time as well and

00:48:13,359 --> 00:48:18,309
someone says hey want to use XT bugs

00:48:15,339 --> 00:48:19,719
like oh yeah I've got that right now you

00:48:18,309 --> 00:48:19,960
I don't do that very often anymore or

00:48:19,719 --> 00:48:21,969
easy

00:48:19,960 --> 00:48:24,430
so um using it on a daily basis and

00:48:21,969 --> 00:48:26,289
early I found that I make sure I have my

00:48:24,430 --> 00:48:28,359
and one of the first things when I start

00:48:26,289 --> 00:48:30,190
on my IDE let go and make sure that I

00:48:28,359 --> 00:48:31,900
have my X debug listening you know I

00:48:30,190 --> 00:48:33,279
have multiple projects going so I'll

00:48:31,900 --> 00:48:35,349
make sure the other projects are all

00:48:33,279 --> 00:48:36,519
turned off and the only one is listening

00:48:35,349 --> 00:48:38,799
and I'll make sure it's on for the one

00:48:36,519 --> 00:48:40,539
I'm currently working on for me that's

00:48:38,799 --> 00:48:42,549
been just kind of I get it into my day

00:48:40,539 --> 00:48:44,739
the process of getting started up for

00:48:42,549 --> 00:48:46,989
the day is to add that you know saying

00:48:44,739 --> 00:48:48,999
up the X debug into that list you know

00:48:46,989 --> 00:48:50,979
so I'm going to fire my VMs you know

00:48:48,999 --> 00:48:52,660
maybe from using docker or you know

00:48:50,979 --> 00:48:55,150
connecting to server whatever you're

00:48:52,660 --> 00:48:56,710
doing you know that be part of your

00:48:55,150 --> 00:48:58,029
initial set up is this you know getting

00:48:56,710 --> 00:48:59,589
up running for the day is just having

00:48:58,029 --> 00:49:03,340
turning on your debug connections oh

00:48:59,589 --> 00:49:09,460
yeah excellent any others

00:49:03,340 --> 00:49:12,910
questions profiling we didn't really

00:49:09,460 --> 00:49:15,610
talk about profiling the X debug has

00:49:12,910 --> 00:49:18,220
very robust profiling you can I go and

00:49:15,610 --> 00:49:20,770
see exactly what's going on and and then

00:49:18,220 --> 00:49:22,270
see that X debug versus alternative

00:49:20,770 --> 00:49:24,640
methods right so we have different

00:49:22,270 --> 00:49:28,480
methods of debugging code we talked

00:49:24,640 --> 00:49:30,690
about air logging and var Dom's and

00:49:28,480 --> 00:49:30,690

YouTube URL: https://www.youtube.com/watch?v=4wkHBwkhu7g


