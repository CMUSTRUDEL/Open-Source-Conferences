Title: PHP UK Conference 2018 - Beau Simensen - Get Rolling Fast with Symfony Flex
Publication date: 2018-03-27
Playlist: PHP UK Conference 2018
Description: 
	Unsure where to start with your next application? Are you sure you want full stack Symfony eventually but not sure you can commit to the extra work upfront? Afraid if you start with a micro-framework like Silex you'll end up needing to migrate to full stack Symfony anyway? Enter Symfony Flex. Symfony flex brings all of the power of full stack Symfony with the upfront requirements of a micro-framework. Choosing Symfony upfront not longer commits you to the overhead you might expect from a traditional Symfony project. See how quickly a new project can be started and how it can evolve over time.
Captions: 
	00:00:02,950 --> 00:00:06,910
I'm gonna try and get these slides

00:00:04,720 --> 00:00:07,750
posted later the biggest problem is

00:00:06,910 --> 00:00:09,700
probably going to be some of the

00:00:07,750 --> 00:00:12,099
screenshots and some of the screencast

00:00:09,700 --> 00:00:15,219
style recordings hopefully those all

00:00:12,099 --> 00:00:16,110
come out ok online as well how many

00:00:15,219 --> 00:00:19,540
people have actually heard about

00:00:16,110 --> 00:00:23,910
Symphony flex ok many people have used

00:00:19,540 --> 00:00:26,080
it ok that's not a whole lot of people

00:00:23,910 --> 00:00:28,330
so one of the things that I've noticed

00:00:26,080 --> 00:00:30,760
about sinfully Symphony flex over the

00:00:28,330 --> 00:00:32,829
last year is that it seems to be

00:00:30,760 --> 00:00:35,860
difficult to really know what sip reflux

00:00:32,829 --> 00:00:37,180
is a lot of people might look at it and

00:00:35,860 --> 00:00:39,820
think it might be a new symphony version

00:00:37,180 --> 00:00:42,490
that's not really true what Symphony

00:00:39,820 --> 00:00:45,430
flex is is a new way to manage and

00:00:42,490 --> 00:00:47,710
install Symphony applications how many

00:00:45,430 --> 00:00:49,329
people are Symphony developers our work

00:00:47,710 --> 00:00:52,450
in Symphony projects ok so you're pretty

00:00:49,329 --> 00:00:55,180
familiar with how to manage Symphony

00:00:52,450 --> 00:00:59,649
applications bundles and stalls and

00:00:55,180 --> 00:01:01,570
things like that one of the things that

00:00:59,649 --> 00:01:04,329
Fabian looked at when he was working on

00:01:01,570 --> 00:01:06,460
creating symphony 4 is how to build

00:01:04,329 --> 00:01:08,319
modern day applications modern day

00:01:06,460 --> 00:01:10,450
applications don't necessarily start

00:01:08,319 --> 00:01:14,200
with something like what Symphony fools

00:01:10,450 --> 00:01:15,219
Symphony standard ition starts with the

00:01:14,200 --> 00:01:16,780
idea is that you want to start with

00:01:15,219 --> 00:01:20,530
small dependencies just what you want

00:01:16,780 --> 00:01:22,209
and then add as you go and up until

00:01:20,530 --> 00:01:23,799
recently the way that you would make

00:01:22,209 --> 00:01:25,389
that decision in the symphony ecosystem

00:01:23,799 --> 00:01:27,569
would be to choose between Silex or

00:01:25,389 --> 00:01:31,590
symphony how many people are Silex users

00:01:27,569 --> 00:01:31,590
ok handful of people

00:01:31,619 --> 00:01:37,869
the problem with Silex is that its

00:01:34,630 --> 00:01:39,219
Symphony ish but it's not quite symphony

00:01:37,869 --> 00:01:41,170
so you can't just take your Silex

00:01:39,219 --> 00:01:43,389
application and easily upgrade it to a

00:01:41,170 --> 00:01:46,779
symphony application it is however

00:01:43,389 --> 00:01:48,069
really easy to get running Symphony on

00:01:46,779 --> 00:01:49,299
the other hand takes a little bit of

00:01:48,069 --> 00:01:50,770
work to get up and running on an

00:01:49,299 --> 00:01:52,479
application especially if you start with

00:01:50,770 --> 00:01:54,039
the standard addition you might have to

00:01:52,479 --> 00:01:55,270
remove some bundles you have to look at

00:01:54,039 --> 00:01:57,459
a bunch of configuration that you might

00:01:55,270 --> 00:02:00,579
not need yet there's all this stuff

00:01:57,459 --> 00:02:02,319
there so trying to decide upfront which

00:02:00,579 --> 00:02:06,939
I which framework you want to start with

00:02:02,319 --> 00:02:07,899
is kind of a this kind of a pain and

00:02:06,939 --> 00:02:09,640
really the framework shouldn't be

00:02:07,899 --> 00:02:11,799
getting in the way within the symphony

00:02:09,640 --> 00:02:14,709
ecosystem it should just be easy to

00:02:11,799 --> 00:02:16,810
decide how to start an application so

00:02:14,709 --> 00:02:19,239
about a year ago when I saw somebody say

00:02:16,810 --> 00:02:21,130
should I try slim or Silex I don't have

00:02:19,239 --> 00:02:23,170
anything against slim but I thought you

00:02:21,130 --> 00:02:24,910
know what why don't you try simply flex

00:02:23,170 --> 00:02:27,670
you symfony flex to build your

00:02:24,910 --> 00:02:30,610
application and with most things on

00:02:27,670 --> 00:02:32,020
Twitter context is important and being

00:02:30,610 --> 00:02:33,370
able to say the right thing and the

00:02:32,020 --> 00:02:36,130
right amount of characters is difficult

00:02:33,370 --> 00:02:38,140
and I was quickly corrected and told

00:02:36,130 --> 00:02:40,000
hello but you know how can you compare

00:02:38,140 --> 00:02:44,349
flex to you Silex it's really just a

00:02:40,000 --> 00:02:46,510
composer plug-in that is actually what

00:02:44,349 --> 00:02:50,049
Symphony flex is it's a composer plug-in

00:02:46,510 --> 00:02:53,290
so you know the the the pushback on this

00:02:50,049 --> 00:02:55,989
is correct and valid but to say it's

00:02:53,290 --> 00:02:59,110
just a composer plug-in sort of under

00:02:55,989 --> 00:03:00,640
sells how powerful flex really is if you

00:02:59,110 --> 00:03:02,470
read the documentation the documentation

00:03:00,640 --> 00:03:04,209
is going to tell you that symphony flex

00:03:02,470 --> 00:03:05,920
automates the most common tasks of

00:03:04,209 --> 00:03:08,290
Symphony applications like installing

00:03:05,920 --> 00:03:11,049
bundles and other composer dependencies

00:03:08,290 --> 00:03:12,880
and if you're just reading that at a

00:03:11,049 --> 00:03:15,580
high level you might be thinking big

00:03:12,880 --> 00:03:17,410
deal so what you like we have composer

00:03:15,580 --> 00:03:19,810
for that right we can install bundles

00:03:17,410 --> 00:03:22,299
with composer but if you think about the

00:03:19,810 --> 00:03:24,730
whole bundle install dance that you have

00:03:22,299 --> 00:03:26,620
to go through it actually is a lot more

00:03:24,730 --> 00:03:29,590
complicated than just installing a

00:03:26,620 --> 00:03:31,799
bundle package typically you're going to

00:03:29,590 --> 00:03:34,090
you run composer require with the bundle

00:03:31,799 --> 00:03:36,700
you're going to have to make sure and go

00:03:34,090 --> 00:03:40,239
in and register this bundle inside

00:03:36,700 --> 00:03:41,769
kernel that PHP app kernel deaf PHP you

00:03:40,239 --> 00:03:42,640
might have to add some routing so you

00:03:41,769 --> 00:03:44,859
have to go into your routing

00:03:42,640 --> 00:03:46,840
configuration file and add the resources

00:03:44,859 --> 00:03:49,750
for the routes you're going to have to

00:03:46,840 --> 00:03:53,319
go into the actual app configuration to

00:03:49,750 --> 00:03:55,079
potentially add some of the I can't

00:03:53,319 --> 00:03:57,310
remember the word but basically the

00:03:55,079 --> 00:03:58,510
semantics configuration language for

00:03:57,310 --> 00:04:01,000
that bundle so you might have a

00:03:58,510 --> 00:04:02,739
top-level key now with this bundle and

00:04:01,000 --> 00:04:05,200
different things that you need a set for

00:04:02,739 --> 00:04:09,400
it oh and also if you have certain

00:04:05,200 --> 00:04:10,720
things that are install specific I like

00:04:09,400 --> 00:04:13,600
tokens and things like that you have to

00:04:10,720 --> 00:04:16,870
go into parameters that llamo to try and

00:04:13,600 --> 00:04:18,310
update those so you get this bundle all

00:04:16,870 --> 00:04:19,750
installed and maybe you actually had

00:04:18,310 --> 00:04:21,280
several bundles that that bundle

00:04:19,750 --> 00:04:22,360
depended on and now you've got all of

00:04:21,280 --> 00:04:24,280
those installed

00:04:22,360 --> 00:04:27,460
oops you don't want it any more do you

00:04:24,280 --> 00:04:30,069
want to remove it how many people have

00:04:27,460 --> 00:04:33,220
tried to remove Symphony bundles before

00:04:30,069 --> 00:04:38,090
how many people enjoyed that experience

00:04:33,220 --> 00:04:40,940
yeah no hands awesome so the way you

00:04:38,090 --> 00:04:42,440
remove bundles is you do the same thing

00:04:40,940 --> 00:04:44,240
but in Reverse you have to remember all

00:04:42,440 --> 00:04:45,530
of the configuration keys that need to

00:04:44,240 --> 00:04:47,990
be removed because if you remove that

00:04:45,530 --> 00:04:49,160
bundle symfony is now alone no longer

00:04:47,990 --> 00:04:52,190
going to be able to parse your

00:04:49,160 --> 00:04:55,880
configuration files if you leave the

00:04:52,190 --> 00:04:57,680
bundle in app kernel that PHP that class

00:04:55,880 --> 00:04:58,580
no longer exists so it's not going to be

00:04:57,680 --> 00:05:00,800
able to do anything with that

00:04:58,580 --> 00:05:02,270
so your app may not work for a while

00:05:00,800 --> 00:05:03,740
while you try to remember all of the

00:05:02,270 --> 00:05:07,070
places that you have to go to remove

00:05:03,740 --> 00:05:08,840
that bundle and this isn't really as

00:05:07,070 --> 00:05:12,259
rare as it might sound if you look at

00:05:08,840 --> 00:05:14,060
all of the major bundles out there they

00:05:12,259 --> 00:05:15,889
all have the same thing at the top the

00:05:14,060 --> 00:05:17,930
same five or six steps of the things you

00:05:15,889 --> 00:05:21,500
need to do in order to install their

00:05:17,930 --> 00:05:24,669
bundle so really what flex was all about

00:05:21,500 --> 00:05:26,720
is trying to find a way to automate this

00:05:24,669 --> 00:05:28,310
it really wouldn't make sense to

00:05:26,720 --> 00:05:29,419
automate composer require because that's

00:05:28,310 --> 00:05:32,000
something that we're already doing

00:05:29,419 --> 00:05:34,960
already as developers that should be

00:05:32,000 --> 00:05:37,580
maybe the only step that you have to do

00:05:34,960 --> 00:05:40,490
should we be able to automate bundle

00:05:37,580 --> 00:05:41,960
registration yes we probably can but

00:05:40,490 --> 00:05:44,240
it's going to require changing some of

00:05:41,960 --> 00:05:46,490
the ways that Symphony handles bundle

00:05:44,240 --> 00:05:47,870
registrations so these are changes that

00:05:46,490 --> 00:05:53,139
were put into symphony three three three

00:05:47,870 --> 00:05:53,139
four and is now the default for 74

00:05:56,259 --> 00:06:00,139
similarly route configurations are the

00:05:59,509 --> 00:06:02,659
same thing

00:06:00,139 --> 00:06:05,659
these are things that can be automated

00:06:02,659 --> 00:06:08,870
if things change a little bit in the way

00:06:05,659 --> 00:06:11,360
that Symphony looks at how routes are

00:06:08,870 --> 00:06:13,070
configured the actual service

00:06:11,360 --> 00:06:15,740
configurations same story

00:06:13,070 --> 00:06:17,270
and local configuration local

00:06:15,740 --> 00:06:22,310
configuration in the case of symphony

00:06:17,270 --> 00:06:24,349
flex and Symphony 4 go into EMV so it's

00:06:22,310 --> 00:06:27,680
following the 12 factor environment

00:06:24,349 --> 00:06:31,009
controls rather than doing things in the

00:06:27,680 --> 00:06:32,810
parameters at llamó file so if we really

00:06:31,009 --> 00:06:35,210
wanted to distill what Symphony flex is

00:06:32,810 --> 00:06:37,669
going to have the most impact on for you

00:06:35,210 --> 00:06:39,770
I said to automates the installation or

00:06:37,669 --> 00:06:42,130
removal of bundles and it makes the

00:06:39,770 --> 00:06:44,800
whole process a lot easier to understand

00:06:42,130 --> 00:06:46,960
and it's able to do this by levering

00:06:44,800 --> 00:06:49,060
leveraging the conventions and features

00:06:46,960 --> 00:06:51,850
from symphony for if you have a symphony

00:06:49,060 --> 00:06:54,370
3/3 or a symphony 3/4 application you

00:06:51,850 --> 00:06:56,050
can start using flex already the only

00:06:54,370 --> 00:06:57,910
things you have to do is migrate the

00:06:56,050 --> 00:07:01,240
directory structure from symphony to in

00:06:57,910 --> 00:07:03,370
symphony 3 3 3 to the symphony for

00:07:01,240 --> 00:07:05,860
layout if you do that then you can start

00:07:03,370 --> 00:07:09,130
using Symphony 4 for your Symphony 3 3 &

00:07:05,860 --> 00:07:11,620
3 for applications as well a lot of the

00:07:09,130 --> 00:07:13,780
nice things that happen it's a part of

00:07:11,620 --> 00:07:15,790
the whole developer experience behind

00:07:13,780 --> 00:07:17,380
Symphony flex come from a lot of the

00:07:15,790 --> 00:07:19,960
features and conventions that came into

00:07:17,380 --> 00:07:21,490
Symphony 4 so we're looking at things

00:07:19,960 --> 00:07:23,260
like Auto configuring how many people

00:07:21,490 --> 00:07:27,010
have used symphony for auto configuring

00:07:23,260 --> 00:07:29,860
a couple people there's also some

00:07:27,010 --> 00:07:31,240
feature detection there's auto wiring

00:07:29,860 --> 00:07:35,740
things like that so there's a lot of

00:07:31,240 --> 00:07:37,750
stuff put into symphony for that just go

00:07:35,740 --> 00:07:41,710
really well with the way that Symphony

00:07:37,750 --> 00:07:44,230
flex is set up so if we go back to this

00:07:41,710 --> 00:07:45,340
question of you know does Silex actually

00:07:44,230 --> 00:07:49,990
something that you could compare with

00:07:45,340 --> 00:07:52,000
Symphony flex Fabian actually spent a

00:07:49,990 --> 00:07:53,560
bunch of time working on a bunch of old

00:07:52,000 --> 00:07:57,210
Silex applications that he'd built

00:07:53,560 --> 00:07:59,560
things like the twig website things like

00:07:57,210 --> 00:08:01,420
some what some of the other specifics in

00:07:59,560 --> 00:08:04,240
co.labs little project sites were

00:08:01,420 --> 00:08:07,150
originally Silex applications and in

00:08:04,240 --> 00:08:09,040
order to dogfood flex and Symphony four

00:08:07,150 --> 00:08:12,640
he decided to move these applications to

00:08:09,040 --> 00:08:14,500
use Symphony 4 in flex and what he found

00:08:12,640 --> 00:08:17,440
was that he'd loved it felt just like

00:08:14,500 --> 00:08:19,630
Silex except it wasn't Silex it was

00:08:17,440 --> 00:08:22,180
still using the full stack symfony

00:08:19,630 --> 00:08:24,520
framework so really the question no

00:08:22,180 --> 00:08:26,920
longer is valid you don't really choose

00:08:24,520 --> 00:08:28,630
between Silex and Symphony depending on

00:08:26,920 --> 00:08:30,130
if you want a micro framework and you

00:08:28,630 --> 00:08:32,380
need to start smaller if you have a huge

00:08:30,130 --> 00:08:35,890
monolith of an application you can use

00:08:32,380 --> 00:08:38,050
symphony flex and symphony for both so

00:08:35,890 --> 00:08:40,960
really we can say there's no Silex

00:08:38,050 --> 00:08:45,580
there really isn't and if you want proof

00:08:40,960 --> 00:08:48,370
of that about just under a month ago the

00:08:45,580 --> 00:08:50,380
Symphony team announced that Silex is

00:08:48,370 --> 00:08:52,480
going to be end-of-life I think in June

00:08:50,380 --> 00:08:54,580
of this year so there's not even going

00:08:52,480 --> 00:08:56,260
to be a question anymore about whether

00:08:54,580 --> 00:08:59,730
we're going to do Silex

00:08:56,260 --> 00:09:01,870
or Symphony it's all gonna be Symphony

00:08:59,730 --> 00:09:03,610
another thing that people might think is

00:09:01,870 --> 00:09:06,040
that Symphony flex is a new Symphony

00:09:03,610 --> 00:09:08,200
addition if you have heard about the

00:09:06,040 --> 00:09:09,760
standard addition there was this idea

00:09:08,200 --> 00:09:11,890
early on that there would be different

00:09:09,760 --> 00:09:14,140
editions of symphony or just different

00:09:11,890 --> 00:09:15,810
distributions of symphony this the

00:09:14,140 --> 00:09:19,140
symphony standard edition was the

00:09:15,810 --> 00:09:22,240
primary one that people would start with

00:09:19,140 --> 00:09:23,950
and if you look at the repository for

00:09:22,240 --> 00:09:26,530
the standard edition you'll see that it

00:09:23,950 --> 00:09:27,700
looks like an application layout it

00:09:26,530 --> 00:09:29,890
looks like what you expect from a

00:09:27,700 --> 00:09:32,320
symphony application if you look at

00:09:29,890 --> 00:09:33,970
something like the rest edition you'll

00:09:32,320 --> 00:09:35,530
see that it looks very similar there's a

00:09:33,970 --> 00:09:38,440
couple of things added maybe some things

00:09:35,530 --> 00:09:39,880
removed the big differences are the set

00:09:38,440 --> 00:09:42,820
of dependencies and the configuration

00:09:39,880 --> 00:09:44,380
that it's done up front for the things

00:09:42,820 --> 00:09:49,840
that are specific to the rest edition as

00:09:44,380 --> 00:09:51,940
opposed to you the standard edition so

00:09:49,840 --> 00:09:54,280
symphony flex is all about starting

00:09:51,940 --> 00:09:57,460
small at least that's what it can seem

00:09:54,280 --> 00:10:00,640
like and if you look at the ecosystem

00:09:57,460 --> 00:10:02,830
that existed previously it would be easy

00:10:00,640 --> 00:10:05,170
to say oh but we already had the empty

00:10:02,830 --> 00:10:07,420
Edition the empty Edition of course

00:10:05,170 --> 00:10:11,830
being something that doesn't have a lot

00:10:07,420 --> 00:10:13,390
in it however if you look at the way

00:10:11,830 --> 00:10:16,390
that the empty Edition is set up it

00:10:13,390 --> 00:10:18,700
looks identical to the others almost

00:10:16,390 --> 00:10:20,260
with a few differences the big things

00:10:18,700 --> 00:10:22,750
are probably in the composer JSON file

00:10:20,260 --> 00:10:25,150
it uses less things but if you wanted to

00:10:22,750 --> 00:10:27,850
then upgrade your symphony empty Edition

00:10:25,150 --> 00:10:29,890
application to the rest edition and then

00:10:27,850 --> 00:10:32,530
maybe the API Edition there's really no

00:10:29,890 --> 00:10:34,420
way to do that and the problem is that

00:10:32,530 --> 00:10:37,000
these distributions this notion of

00:10:34,420 --> 00:10:39,520
building a base application and then

00:10:37,000 --> 00:10:42,100
extending it as you go it's sort of the

00:10:39,520 --> 00:10:44,320
wrong the wrong abstraction for what we

00:10:42,100 --> 00:10:47,830
really want to do as we're building up

00:10:44,320 --> 00:10:50,290
building up project what symphony flex

00:10:47,830 --> 00:10:53,560
does is promotes composition over

00:10:50,290 --> 00:10:55,630
inheritance this lets you actually build

00:10:53,560 --> 00:10:57,760
your application using pieces without

00:10:55,630 --> 00:11:00,820
having to just start in one place and

00:10:57,760 --> 00:11:03,040
then move on from there and a really

00:11:00,820 --> 00:11:05,560
good example of this is to show the

00:11:03,040 --> 00:11:07,420
symphony 4 skeleton and the skeleton

00:11:05,560 --> 00:11:09,340
it's probably the closest analogy there

00:11:07,420 --> 00:11:13,720
is to what we originally had

00:11:09,340 --> 00:11:17,020
as the standard edition this is the

00:11:13,720 --> 00:11:19,450
whole project for a symphony flex-based

00:11:17,020 --> 00:11:22,720
symphony for application it's a single

00:11:19,450 --> 00:11:25,390
composer jason file and if we look at

00:11:22,720 --> 00:11:29,200
that file it doesn't have a lot in it it

00:11:25,390 --> 00:11:31,780
has the Flex extension it has a console

00:11:29,200 --> 00:11:33,270
it has framework bundle and it has yam

00:11:31,780 --> 00:11:34,960
oh those are the only really big

00:11:33,270 --> 00:11:37,120
applications that are going to be in

00:11:34,960 --> 00:11:40,090
there of course those have additional

00:11:37,120 --> 00:11:41,920
dependencies but at its core this is

00:11:40,090 --> 00:11:43,780
what we're looking at for starting a

00:11:41,920 --> 00:11:48,550
brand-new symphony for application using

00:11:43,780 --> 00:11:51,160
Symphony Forks in order to create a new

00:11:48,550 --> 00:11:52,840
project with symphony flex you use

00:11:51,160 --> 00:11:55,270
composer just like you normally would

00:11:52,840 --> 00:11:57,430
for many other projects out there you

00:11:55,270 --> 00:11:59,260
create project you specify a symphony

00:11:57,430 --> 00:12:01,000
skeleton as the project that you're

00:11:59,260 --> 00:12:06,670
basing it off of and then you give it a

00:12:01,000 --> 00:12:09,910
new name so even though this project

00:12:06,670 --> 00:12:12,160
starts out with just a composer JSON

00:12:09,910 --> 00:12:14,170
file if you look at what you actually

00:12:12,160 --> 00:12:15,640
end up with in your project directory

00:12:14,170 --> 00:12:19,720
you're going to see something similar to

00:12:15,640 --> 00:12:21,400
what you would have seen from the the

00:12:19,720 --> 00:12:22,360
standard edition the directories are

00:12:21,400 --> 00:12:25,020
going to be a little different because

00:12:22,360 --> 00:12:27,400
they're now based on symphony for

00:12:25,020 --> 00:12:28,630
conventions but it's pretty much the

00:12:27,400 --> 00:12:31,000
same thing that you would expect to see

00:12:28,630 --> 00:12:34,510
if you're already familiar with symphony

00:12:31,000 --> 00:12:35,770
the important thing and I'm going to

00:12:34,510 --> 00:12:39,120
mention this a few times is that the

00:12:35,770 --> 00:12:41,950
files that you do see here are all

00:12:39,120 --> 00:12:44,650
created based on the packages that we're

00:12:41,950 --> 00:12:46,300
installed using symphony flex so the

00:12:44,650 --> 00:12:48,700
framework bundle for example you'll see

00:12:46,300 --> 00:12:51,850
there's the framework yamo file under

00:12:48,700 --> 00:12:53,410
comet after under config that is there

00:12:51,850 --> 00:12:55,270
because the framework one durable bundle

00:12:53,410 --> 00:12:56,850
was installed if you didn't have

00:12:55,270 --> 00:12:59,800
framework bundled that wouldn't be there

00:12:56,850 --> 00:13:01,690
framework one bundle wouldn't not be

00:12:59,800 --> 00:13:03,820
there but if it was another dependency

00:13:01,690 --> 00:13:06,550
it wouldn't be there unless the bundle

00:13:03,820 --> 00:13:08,140
was actually in place so the the files

00:13:06,550 --> 00:13:09,880
that are created all of the boilerplate

00:13:08,140 --> 00:13:12,220
all of the overhead of installing

00:13:09,880 --> 00:13:14,620
bundles is now handled by symphony flex

00:13:12,220 --> 00:13:18,460
and it's handled on an install by

00:13:14,620 --> 00:13:20,470
installed a sis you've installed bundles

00:13:18,460 --> 00:13:22,480
if you want to build another kitchen

00:13:20,470 --> 00:13:26,010
sink style skeleton you can totally do

00:13:22,480 --> 00:13:28,810
that this is these website skeleton

00:13:26,010 --> 00:13:30,970
again it's just a composer JSON file and

00:13:28,810 --> 00:13:32,589
the only big differences here are that

00:13:30,970 --> 00:13:36,670
it has a bunch of new dependencies we

00:13:32,589 --> 00:13:39,279
see things like the security bundle we

00:13:36,670 --> 00:13:42,370
see the serializer we see swift mailer

00:13:39,279 --> 00:13:43,890
added there we see web pack encore so

00:13:42,370 --> 00:13:48,070
we're adding additional things to this

00:13:43,890 --> 00:13:50,350
and the reason the creation is the same

00:13:48,070 --> 00:13:53,890
way you would specify website skeleton

00:13:50,350 --> 00:13:56,410
and the project that you end up with has

00:13:53,890 --> 00:13:58,029
a lot more files in it and these are all

00:13:56,410 --> 00:14:00,670
files that are created by symphony flex

00:13:58,029 --> 00:14:03,040
because these additional bundles have

00:14:00,670 --> 00:14:06,370
been installed so for example we see

00:14:03,040 --> 00:14:09,310
this swift mailer yamo we see web

00:14:06,370 --> 00:14:11,410
profiler we see monologue we see some

00:14:09,310 --> 00:14:13,480
doctrine things so all of these things

00:14:11,410 --> 00:14:15,580
are depending on which things you add

00:14:13,480 --> 00:14:17,410
and it's not just set creation time if

00:14:15,580 --> 00:14:19,270
you add these bundles after the fact or

00:14:17,410 --> 00:14:20,649
if you remove bundles these

00:14:19,270 --> 00:14:27,730
configuration files will just start

00:14:20,649 --> 00:14:29,980
showing up and going away so really what

00:14:27,730 --> 00:14:32,020
symphony flex does is it it removes and

00:14:29,980 --> 00:14:33,940
replaces a symphony installer there is

00:14:32,020 --> 00:14:35,680
no such thing anymore flex is the

00:14:33,940 --> 00:14:38,980
installer but it's just a composer

00:14:35,680 --> 00:14:41,709
plugin it also replaces and removes the

00:14:38,980 --> 00:14:43,450
symphony additions so these are all

00:14:41,709 --> 00:14:45,820
really awesome things but how does this

00:14:43,450 --> 00:14:49,600
actually work like what is flex actually

00:14:45,820 --> 00:14:51,160
doing flex works with something called

00:14:49,600 --> 00:14:52,480
recipes impacts these are the main

00:14:51,160 --> 00:14:54,790
things that we're going to be looking at

00:14:52,480 --> 00:14:56,490
and recipes will be the first thing

00:14:54,790 --> 00:15:00,490
because they're the most important

00:14:56,490 --> 00:15:03,640
anytime you run composer require and

00:15:00,490 --> 00:15:05,470
then some package name if Symphony flex

00:15:03,640 --> 00:15:07,870
is installed in that product or in that

00:15:05,470 --> 00:15:10,600
package it's going to look at Symphony

00:15:07,870 --> 00:15:12,100
SH and it's going to look to see if that

00:15:10,600 --> 00:15:14,709
particular package has a recipe

00:15:12,100 --> 00:15:16,540
available so if we go to symphony ah

00:15:14,709 --> 00:15:18,339
that's aged right now we can type in

00:15:16,540 --> 00:15:20,339
framework bundle and we'll see that

00:15:18,339 --> 00:15:24,310
symfony framework bundle is indeed there

00:15:20,339 --> 00:15:26,560
you can then go to the recipe which

00:15:24,310 --> 00:15:28,660
takes you to the symphony slash recipes

00:15:26,560 --> 00:15:30,700
repository in the symfony framework

00:15:28,660 --> 00:15:33,550
bundle directory

00:15:30,700 --> 00:15:35,590
top-level three-point-three means that

00:15:33,550 --> 00:15:39,760
there's a recipe available for a minimum

00:15:35,590 --> 00:15:42,400
version of 3.3 so 3.3 3.4 4.0 are all

00:15:39,760 --> 00:15:43,600
going to use this same recipe and within

00:15:42,400 --> 00:15:46,150
that directory we're gonna find a

00:15:43,600 --> 00:15:49,540
manifest Jason this is actually the

00:15:46,150 --> 00:15:50,950
recipe itself so from this recipe it

00:15:49,540 --> 00:15:53,110
defines all the things that need to be

00:15:50,950 --> 00:15:56,770
done within the symphony application to

00:15:53,110 --> 00:15:58,900
get this bundle working the first thing

00:15:56,770 --> 00:16:01,570
at the top you'll see bundles you'll see

00:15:58,900 --> 00:16:03,880
that it says that it's going to install

00:16:01,570 --> 00:16:06,100
the framework bundle and it has all all

00:16:03,880 --> 00:16:08,350
means it's going to be available for all

00:16:06,100 --> 00:16:10,600
environments whether it's prod dev or

00:16:08,350 --> 00:16:13,150
test this one's going to be available

00:16:10,600 --> 00:16:16,420
for all of them if we look at the

00:16:13,150 --> 00:16:18,190
website bundle if we look at the the web

00:16:16,420 --> 00:16:21,130
skeleton based project we've created

00:16:18,190 --> 00:16:22,690
will see framework bundle at the top and

00:16:21,130 --> 00:16:25,270
all of these bundles were added

00:16:22,690 --> 00:16:27,340
automatically by flex so as bundles are

00:16:25,270 --> 00:16:29,890
added or created if the recipe has a

00:16:27,340 --> 00:16:31,390
bundles line in it it will add the

00:16:29,890 --> 00:16:33,190
bundles appropriately and we'll see some

00:16:31,390 --> 00:16:36,580
of these here have different things than

00:16:33,190 --> 00:16:38,890
also for example debug bundle is only

00:16:36,580 --> 00:16:40,690
available for Devon tasks so if you

00:16:38,890 --> 00:16:42,670
install this in production the debug

00:16:40,690 --> 00:16:44,410
bundle isn't going to be there so this

00:16:42,670 --> 00:16:45,850
is one of the major changes to the way

00:16:44,410 --> 00:16:48,790
that the bundled stuff is handled for

00:16:45,850 --> 00:16:50,740
Symphony 4 so that we're able to

00:16:48,790 --> 00:16:53,980
programmatically add and remove these

00:16:50,740 --> 00:16:57,310
things a little more easily the next

00:16:53,980 --> 00:16:59,410
line we see copy from recipe and what

00:16:57,310 --> 00:17:01,600
copy from recipe does is allows you to

00:16:59,410 --> 00:17:05,680
copy files from the recipe per posit or

00:17:01,600 --> 00:17:07,630
e itself into the application once it's

00:17:05,680 --> 00:17:09,340
created so here we see that we're

00:17:07,630 --> 00:17:11,920
copying files from config public and

00:17:09,340 --> 00:17:13,630
source stir so if we want to look at the

00:17:11,920 --> 00:17:16,240
symphony for front controller where that

00:17:13,630 --> 00:17:19,570
comes from that ends up in public slash

00:17:16,240 --> 00:17:22,840
index dot PHP so if we look at the

00:17:19,570 --> 00:17:26,830
repository for the recipe we see there's

00:17:22,840 --> 00:17:29,110
public slash index dot PHP so this file

00:17:26,830 --> 00:17:31,810
is copied into the Applications index

00:17:29,110 --> 00:17:36,460
dot PHP folder file in the public folder

00:17:31,810 --> 00:17:38,020
and if we go into the project that was

00:17:36,460 --> 00:17:40,420
installed we'll see that that that is

00:17:38,020 --> 00:17:43,590
where index dot PHP lives ilysm public

00:17:40,420 --> 00:17:43,590
slash index dot PHP

00:17:44,550 --> 00:17:50,500
recipes can also include composure

00:17:47,110 --> 00:17:52,570
commands can run after install or after

00:17:50,500 --> 00:17:54,130
update so in the case of framework

00:17:52,570 --> 00:17:55,840
bundle it's every time you do a composer

00:17:54,130 --> 00:17:57,130
thing framework bundle is gonna make

00:17:55,840 --> 00:18:00,070
sure that the cache is cleared and the

00:17:57,130 --> 00:18:02,140
simulator are updated there's also the

00:18:00,070 --> 00:18:04,150
env section so this defines the things

00:18:02,140 --> 00:18:07,000
that will end up in your DMV and your

00:18:04,150 --> 00:18:10,780
env dot disk if we see here we see app

00:18:07,000 --> 00:18:12,610
dev is our Appian via set to dev so by

00:18:10,780 --> 00:18:14,980
default the application is always going

00:18:12,610 --> 00:18:17,860
to be in dev mode app secret has a

00:18:14,980 --> 00:18:20,740
special value there if you don't know

00:18:17,860 --> 00:18:23,140
how easy that is to read but it's a

00:18:20,740 --> 00:18:25,060
special string this is generate secret

00:18:23,140 --> 00:18:27,700
and what that does is it will replace

00:18:25,060 --> 00:18:32,200
that that environment variable with a

00:18:27,700 --> 00:18:34,240
unique ID and if we look at the project

00:18:32,200 --> 00:18:36,040
and look at our env we'll see here that

00:18:34,240 --> 00:18:40,480
at the top we see symfony framework

00:18:36,040 --> 00:18:42,820
bundle a pen equals the dev app secret

00:18:40,480 --> 00:18:45,940
and then there's a randomly generated

00:18:42,820 --> 00:18:47,530
value so the application is able to flex

00:18:45,940 --> 00:18:49,950
is able to create the stuff for you so

00:18:47,530 --> 00:18:52,930
that you have a working mostly working

00:18:49,950 --> 00:18:54,160
dev configuration environment without

00:18:52,930 --> 00:18:56,110
having to go in and update everything

00:18:54,160 --> 00:18:58,030
for you and if you notice the little

00:18:56,110 --> 00:19:00,190
bits above and below each of these

00:18:58,030 --> 00:19:01,990
sections this is how flex is able to

00:19:00,190 --> 00:19:04,930
programmatically add and remove things

00:19:01,990 --> 00:19:07,030
as bundles come away so for example if

00:19:04,930 --> 00:19:08,950
we wanted to take the website bundle or

00:19:07,030 --> 00:19:10,180
the website skeleton but we don't want

00:19:08,950 --> 00:19:12,160
to do anything with swift mailer

00:19:10,180 --> 00:19:13,990
we can compose or remove Swiss Swift

00:19:12,160 --> 00:19:17,520
mailer and it's actually going to remove

00:19:13,990 --> 00:19:17,520
the environment variables for us as well

00:19:18,090 --> 00:19:23,410
likewise there's a get ignore section

00:19:21,760 --> 00:19:25,960
that does the same sort of thing for get

00:19:23,410 --> 00:19:28,360
ignoring so here we can see we're

00:19:25,960 --> 00:19:31,210
automatically ignoring the env public

00:19:28,360 --> 00:19:32,650
bundles var and vendor if we look the

00:19:31,210 --> 00:19:35,950
next one below is symphony web pack

00:19:32,650 --> 00:19:37,660
encore as ignoring Bill public builds

00:19:35,950 --> 00:19:39,430
and node modules if we decide we don't

00:19:37,660 --> 00:19:42,190
want to do web pack encore anymore and

00:19:39,430 --> 00:19:44,350
we remove the web pack encore bundle it

00:19:42,190 --> 00:19:50,790
will remove that from the get ignore for

00:19:44,350 --> 00:19:53,980
us programmatically based on the recipes

00:19:50,790 --> 00:19:55,380
symphony flex also adds a notion of

00:19:53,980 --> 00:19:58,470
aliases to compose

00:19:55,380 --> 00:20:01,140
require with symphony flex you're able

00:19:58,470 --> 00:20:03,150
to do the buzzer required twig and it

00:20:01,140 --> 00:20:06,840
works and the way that that works is

00:20:03,150 --> 00:20:08,850
that the recipes if you look up the

00:20:06,840 --> 00:20:12,990
recipe for twig you'll see that there's

00:20:08,850 --> 00:20:15,810
a alias listed for twig bundle so if you

00:20:12,990 --> 00:20:17,850
require twig bundle or if you require

00:20:15,810 --> 00:20:19,530
twig it's actually going to go get twig

00:20:17,850 --> 00:20:21,540
bundle for you and if we look at the

00:20:19,530 --> 00:20:24,330
manifest Jason for it we'll see that at

00:20:21,540 --> 00:20:30,270
the bottom it says aliases twig template

00:20:24,330 --> 00:20:33,150
and templates what this Symphony sh

00:20:30,270 --> 00:20:35,640
thing does it also offers the symphony

00:20:33,150 --> 00:20:38,400
core team some level of curation of

00:20:35,640 --> 00:20:39,810
projects and the way that the prod the

00:20:38,400 --> 00:20:43,470
packages are broken down are into

00:20:39,810 --> 00:20:45,120
official verses contribute is are

00:20:43,470 --> 00:20:48,120
packages that are endorsed by the

00:20:45,120 --> 00:20:49,560
symphony core team and the contributors

00:20:48,120 --> 00:20:51,210
are just those that aren't so these are

00:20:49,560 --> 00:20:54,600
community packages that people want to

00:20:51,210 --> 00:20:56,970
register because they want to have flex

00:20:54,600 --> 00:20:58,650
recipes to install their their

00:20:56,970 --> 00:21:00,180
third-party bundles but they aren't

00:20:58,650 --> 00:21:02,100
necessarily things that the symphony

00:21:00,180 --> 00:21:05,760
core team has spent a lot of time

00:21:02,100 --> 00:21:07,590
working on or approved so this lets the

00:21:05,760 --> 00:21:10,530
symphony core team be a little more

00:21:07,590 --> 00:21:11,820
opinionated and especially since the the

00:21:10,530 --> 00:21:14,040
official bundles I think are the only

00:21:11,820 --> 00:21:15,930
ones that can define aliases it means

00:21:14,040 --> 00:21:18,090
that we can do our the symphony core

00:21:15,930 --> 00:21:20,160
team can do things like composer require

00:21:18,090 --> 00:21:21,930
admin so rather than having to go to

00:21:20,160 --> 00:21:23,610
packages and look for Symphony space

00:21:21,930 --> 00:21:25,680
admin and find which one you want to

00:21:23,610 --> 00:21:27,240
install if you want to install the one

00:21:25,680 --> 00:21:30,270
that the symphony core team recommends

00:21:27,240 --> 00:21:32,130
all you have to do is require admin same

00:21:30,270 --> 00:21:34,770
for things like orme if you want to get

00:21:32,130 --> 00:21:37,050
doctrine Orem you can just do it by

00:21:34,770 --> 00:21:41,750
doing composer to require or because

00:21:37,050 --> 00:21:45,380
that's the the official project big

00:21:41,750 --> 00:21:47,400
official project that symphonies backing

00:21:45,380 --> 00:21:52,470
earlier I mentioned there were recipes

00:21:47,400 --> 00:21:55,410
and packs packs are really just metadata

00:21:52,470 --> 00:21:58,350
packages on packages so if we want to

00:21:55,410 --> 00:22:00,090
look at the symphony arm pack you'll see

00:21:58,350 --> 00:22:02,790
it just has a conclusion and it's whole

00:22:00,090 --> 00:22:06,360
job is to define the dependencies that

00:22:02,790 --> 00:22:08,310
are related to the arm pack so there

00:22:06,360 --> 00:22:09,179
isn't a whole lot else there that does

00:22:08,310 --> 00:22:12,450
that if we look

00:22:09,179 --> 00:22:15,119
or unpack on Symphony Sh

00:22:12,450 --> 00:22:19,139
we can go check out its recipe and all

00:22:15,119 --> 00:22:20,549
it really has is aliases so and it's

00:22:19,139 --> 00:22:24,450
aliases they're a little interesting

00:22:20,549 --> 00:22:27,419
it's alias is arm what this means is

00:22:24,450 --> 00:22:28,710
that if you propose to require ORM what

00:22:27,419 --> 00:22:30,599
it's really going to do behind the

00:22:28,710 --> 00:22:33,839
scenes it's composed to require or

00:22:30,599 --> 00:22:36,239
unpack which behind the scenes is

00:22:33,839 --> 00:22:38,369
essentially going to require doctrine

00:22:36,239 --> 00:22:40,859
ORM doctrine doctrine bundle and

00:22:38,369 --> 00:22:43,529
doctrine migrations bundle so by

00:22:40,859 --> 00:22:46,019
requiring just ORM the pack allows you

00:22:43,529 --> 00:22:48,029
to do some interesting things but it

00:22:46,019 --> 00:22:50,999
doesn't necessarily work the same way as

00:22:48,029 --> 00:22:53,669
other composer packages so we're going

00:22:50,999 --> 00:22:56,549
to take an example here of the closer

00:22:53,669 --> 00:22:58,109
jason of a freshly installed symphony

00:22:56,549 --> 00:23:01,589
for application with with no other

00:22:58,109 --> 00:23:04,320
dependencies we're gonna require ORM and

00:23:01,589 --> 00:23:07,049
we can see right here at the top it says

00:23:04,320 --> 00:23:10,289
requiring symphony ORM pack so we can

00:23:07,049 --> 00:23:11,460
already see that it's resolved that and

00:23:10,289 --> 00:23:14,190
now we're gonna look at the composer

00:23:11,460 --> 00:23:16,349
jason after install and even though it

00:23:14,190 --> 00:23:19,440
installed like 30 packages or 20

00:23:16,349 --> 00:23:23,429
packages it only says symphony ORM pack

00:23:19,440 --> 00:23:25,080
in composer jason if we remove we're

00:23:23,429 --> 00:23:27,929
gonna see it's going to remove a bunch

00:23:25,080 --> 00:23:29,580
of these packages all of the doctrine

00:23:27,929 --> 00:23:33,119
packages and some send framework

00:23:29,580 --> 00:23:34,889
packages it removed them all and if we

00:23:33,119 --> 00:23:37,710
look at the composer jason it's back to

00:23:34,889 --> 00:23:40,679
where it started so if you start working

00:23:37,710 --> 00:23:42,269
with symphony flex packages and you end

00:23:40,679 --> 00:23:44,580
up seeing things that don't really make

00:23:42,269 --> 00:23:46,469
sense sometimes it might be symphony

00:23:44,580 --> 00:23:49,349
flex doing this magic of creating these

00:23:46,469 --> 00:23:51,119
packs where the pack gets installed it

00:23:49,349 --> 00:23:53,309
installs a bunch of stuff because of it

00:23:51,119 --> 00:23:55,190
but it doesn't show you that it's just

00:23:53,309 --> 00:23:57,210
showing you that you installed the pack

00:23:55,190 --> 00:24:01,559
can be a little confusing if you don't

00:23:57,210 --> 00:24:04,190
know what you're looking for another

00:24:01,559 --> 00:24:06,989
downside to the country.the contribs

00:24:04,190 --> 00:24:08,609
is that they are not installable by

00:24:06,989 --> 00:24:10,950
default so even though you can search

00:24:08,609 --> 00:24:14,159
for them on symphony sh your application

00:24:10,950 --> 00:24:18,359
can't actually install them in order to

00:24:14,159 --> 00:24:20,099
be able to install them you need to be

00:24:18,359 --> 00:24:22,440
able to you need to set a configuration

00:24:20,099 --> 00:24:24,570
value to allow contribute

00:24:22,440 --> 00:24:28,610
so once you do this when you start

00:24:24,570 --> 00:24:31,830
trying to do recipes for these these

00:24:28,610 --> 00:24:36,210
contributes it'll let you install them

00:24:31,830 --> 00:24:38,760
an example of a contribute be for UUID

00:24:36,210 --> 00:24:42,650
doctrine you can see by the little

00:24:38,760 --> 00:24:42,650
orange label there that that is

00:24:50,270 --> 00:24:54,750
contributes doing so what I'd like to do

00:24:52,920 --> 00:24:58,440
is walk through coming up with a really

00:24:54,750 --> 00:25:01,680
simple hello world app using Symphony

00:24:58,440 --> 00:25:03,180
flex to bootstrap a project so we're

00:25:01,680 --> 00:25:05,400
gonna go ahead and get started by

00:25:03,180 --> 00:25:07,770
trading a project called my new project

00:25:05,400 --> 00:25:09,180
we're gonna create it based on Symphony

00:25:07,770 --> 00:25:13,020
skeleton so it's gonna be the minimal

00:25:09,180 --> 00:25:15,840
framework one of the things that it's

00:25:13,020 --> 00:25:17,610
going to do here is install flex first

00:25:15,840 --> 00:25:21,150
it's the first dependency that's going

00:25:17,610 --> 00:25:24,170
to get installed and what we'll see is

00:25:21,150 --> 00:25:26,310
shortly after that we're gonna have this

00:25:24,170 --> 00:25:27,090
prefetching thing that you might not

00:25:26,310 --> 00:25:31,680
have seen before

00:25:27,090 --> 00:25:33,630
this is Symphony flexes way to say it

00:25:31,680 --> 00:25:37,830
overrides the downloader for composers

00:25:33,630 --> 00:25:39,510
so that it can do can do asynchronous

00:25:37,830 --> 00:25:41,370
requests so it's gonna do it like a curl

00:25:39,510 --> 00:25:44,190
multi type thing so it can download all

00:25:41,370 --> 00:25:46,560
of the packages before it actually tries

00:25:44,190 --> 00:25:50,820
to install them so it can speed up that

00:25:46,560 --> 00:25:52,290
part quite a bit toward the top there

00:25:50,820 --> 00:25:54,150
after it generated the auto load files

00:25:52,290 --> 00:25:56,250
you're going to see that it's found four

00:25:54,150 --> 00:25:58,290
recipes so there were recipes for

00:25:56,250 --> 00:25:59,970
Symphony Flex framework bundle console

00:25:58,290 --> 00:26:02,490
and routing so it's actually going to do

00:25:59,970 --> 00:26:04,350
some configuration for those and then it

00:26:02,490 --> 00:26:05,610
gives you a little bit of help and this

00:26:04,350 --> 00:26:09,360
little bit of help comes from a file

00:26:05,610 --> 00:26:11,640
called post install text that lives

00:26:09,360 --> 00:26:14,970
inside the recipe so this was inside the

00:26:11,640 --> 00:26:17,040
recipe for framework bundle and this was

00:26:14,970 --> 00:26:19,620
actually where I get to do my first bit

00:26:17,040 --> 00:26:22,110
of deciding on how I want to work with

00:26:19,620 --> 00:26:23,580
things it's going to tell me that I can

00:26:22,110 --> 00:26:25,470
go ahead and go to the directory that I

00:26:23,580 --> 00:26:28,020
just created the project in and I can

00:26:25,470 --> 00:26:31,290
use PHP is built in web server so I can

00:26:28,020 --> 00:26:33,750
do that pretty easily or if I want to I

00:26:31,290 --> 00:26:35,970
can require the server so I can do

00:26:33,750 --> 00:26:38,460
composer require server and

00:26:35,970 --> 00:26:40,710
mode so that I have console commands for

00:26:38,460 --> 00:26:43,860
server start server run servers stop

00:26:40,710 --> 00:26:45,270
I don't think server status but I don't

00:26:43,860 --> 00:26:47,250
need any of these things because I'm

00:26:45,270 --> 00:26:50,040
using laravel valet how many people are

00:26:47,250 --> 00:26:52,410
using laravel valet ok cool

00:26:50,040 --> 00:26:54,480
so I have laravel valet set up between

00:26:52,410 --> 00:26:57,090
you know all of my scope and projects

00:26:54,480 --> 00:26:59,000
all of my layer bla projects on my

00:26:57,090 --> 00:27:02,610
symphony projects it's all going through

00:26:59,000 --> 00:27:04,890
the same place so I don't need this so

00:27:02,610 --> 00:27:07,020
I'm not going to actually do that so I'm

00:27:04,890 --> 00:27:09,090
gonna load up the directory structure

00:27:07,020 --> 00:27:10,950
next and see exactly what was installed

00:27:09,090 --> 00:27:12,480
visually so I'm going to run the tree

00:27:10,950 --> 00:27:15,420
command and I'm gonna see that all

00:27:12,480 --> 00:27:17,550
together with excluding the var and the

00:27:15,420 --> 00:27:19,920
vendor directory we've created 8

00:27:17,550 --> 00:27:20,970
directories and 13 files so this is the

00:27:19,920 --> 00:27:23,760
the bare-bones

00:27:20,970 --> 00:27:25,950
symphony application if I load this up

00:27:23,760 --> 00:27:28,320
through my web server I'm going to see a

00:27:25,950 --> 00:27:30,930
DB error message that essentially

00:27:28,320 --> 00:27:33,030
happens if you hit a symphony

00:27:30,930 --> 00:27:35,700
application in debug mode without any

00:27:33,030 --> 00:27:39,690
routes displayed so I'm getting at that

00:27:35,700 --> 00:27:40,980
sort of error message here which makes

00:27:39,690 --> 00:27:44,640
sense I don't actually have any routes

00:27:40,980 --> 00:27:46,920
anywhere this application is empty so

00:27:44,640 --> 00:27:49,530
I'm going to want to do something a

00:27:46,920 --> 00:27:52,140
little nicer than just working with with

00:27:49,530 --> 00:27:53,880
string so I'm gonna use twig so I'm

00:27:52,140 --> 00:27:56,880
gonna jump back to my project now and

00:27:53,880 --> 00:28:00,150
I'm going to require twig and what we're

00:27:56,880 --> 00:28:01,890
gonna see is that it's downloading its

00:28:00,150 --> 00:28:04,530
prefetching their applications have the

00:28:01,890 --> 00:28:05,100
dependencies again that it installs twig

00:28:04,530 --> 00:28:07,110
for me

00:28:05,100 --> 00:28:10,110
twig bridge and tweak bundle and then it

00:28:07,110 --> 00:28:11,970
configures twig bundle it's also going

00:28:10,110 --> 00:28:14,160
to warn me that files may have been

00:28:11,970 --> 00:28:16,320
added or edited every time we do these

00:28:14,160 --> 00:28:19,020
commands if you look it says some files

00:28:16,320 --> 00:28:22,110
may have been created or updated to

00:28:19,020 --> 00:28:23,160
configure your new packages we know

00:28:22,110 --> 00:28:24,600
those are there we're not going to take

00:28:23,160 --> 00:28:26,730
a look a look at them but that is there

00:28:24,600 --> 00:28:28,380
to remind you that any time you do one

00:28:26,730 --> 00:28:30,750
of these things there might be things

00:28:28,380 --> 00:28:33,480
that you need to add to to get so I have

00:28:30,750 --> 00:28:36,510
twig now my next step is going to be to

00:28:33,480 --> 00:28:38,250
create a controller I don't really want

00:28:36,510 --> 00:28:39,990
to go in and remember how to create a

00:28:38,250 --> 00:28:42,240
symphony controller right now so I'm

00:28:39,990 --> 00:28:45,980
going to use the new maker bundle it's

00:28:42,240 --> 00:28:48,090
just a simple package that lets you

00:28:45,980 --> 00:28:49,160
automatically create things like

00:28:48,090 --> 00:28:51,080
entities

00:28:49,160 --> 00:28:53,600
controllers tweak extensions that sort

00:28:51,080 --> 00:28:57,470
of thing so I'm going to composite

00:28:53,600 --> 00:28:57,790
require maker and everything's good to

00:28:57,470 --> 00:29:01,310
go

00:28:57,790 --> 00:29:05,860
so what I'm gonna do now is do console

00:29:01,310 --> 00:29:08,660
bin make controller home controller and

00:29:05,860 --> 00:29:11,300
everything should be happy right but

00:29:08,660 --> 00:29:13,850
it's not and this is getting to another

00:29:11,300 --> 00:29:15,770
sort of feature that is available now

00:29:13,850 --> 00:29:17,930
because of the way that flex works is

00:29:15,770 --> 00:29:19,850
that the symphony package is no longer

00:29:17,930 --> 00:29:22,820
have to be super strict about what

00:29:19,850 --> 00:29:26,270
things they actually depend on so the

00:29:22,820 --> 00:29:28,190
maker bundle itself relies on the

00:29:26,270 --> 00:29:31,790
annotations bundle are relies on

00:29:28,190 --> 00:29:33,860
annotations in the case that you need

00:29:31,790 --> 00:29:35,600
annotations for what you're making so if

00:29:33,860 --> 00:29:38,090
I were to create a twig extension I

00:29:35,600 --> 00:29:39,740
might not need annotations so I would

00:29:38,090 --> 00:29:41,300
totally be able to use this without any

00:29:39,740 --> 00:29:43,550
other dependencies for some of the

00:29:41,300 --> 00:29:45,140
things that I can make but for

00:29:43,550 --> 00:29:47,390
controllers I actually need annotation

00:29:45,140 --> 00:29:50,120
so I'm going to accept this so I'm going

00:29:47,390 --> 00:29:52,490
to go ahead and run the command to

00:29:50,120 --> 00:29:54,890
require annotations and here we can see

00:29:52,490 --> 00:29:57,290
annotations as an alias for Senseo

00:29:54,890 --> 00:29:59,360
framework extra bundle so that's at the

00:29:57,290 --> 00:30:02,090
very top so we can see where that's

00:29:59,360 --> 00:30:04,460
actually resolving to and it installed

00:30:02,090 --> 00:30:06,230
seven packages installed a bunch of

00:30:04,460 --> 00:30:08,720
document things and then since Senseo

00:30:06,230 --> 00:30:10,220
framework extra bundle so now I should

00:30:08,720 --> 00:30:12,740
be able to hopefully create my

00:30:10,220 --> 00:30:14,780
controller so once again I'm gonna do

00:30:12,740 --> 00:30:18,860
bin console make controller home

00:30:14,780 --> 00:30:20,390
controller and what we get is a nice

00:30:18,860 --> 00:30:23,690
little success message which is awesome

00:30:20,390 --> 00:30:25,670
so we're gonna go now to our project and

00:30:23,690 --> 00:30:27,380
open up the source directory the

00:30:25,670 --> 00:30:30,170
controller directory now has home

00:30:27,380 --> 00:30:33,140
controller and what I'm gonna do right

00:30:30,170 --> 00:30:35,270
off is change the path on the route to

00:30:33,140 --> 00:30:37,640
just slash so I actually want this to be

00:30:35,270 --> 00:30:40,450
the the slash route I'm going to leave

00:30:37,640 --> 00:30:44,920
the boilerplate body that they gave me

00:30:40,450 --> 00:30:47,660
that uses the maker demo page

00:30:44,920 --> 00:30:48,320
twig template and I just want to see

00:30:47,660 --> 00:30:52,400
what it looks like

00:30:48,320 --> 00:30:54,560
so I visit the site now and it works it

00:30:52,400 --> 00:30:56,630
gave me the the slash route actually

00:30:54,560 --> 00:30:59,840
renders something that's rendering the

00:30:56,630 --> 00:31:01,460
the demo HTML code but it actually works

00:30:59,840 --> 00:31:03,160
so the next thing I want to do is

00:31:01,460 --> 00:31:04,630
actually customize this output

00:31:03,160 --> 00:31:07,210
and this is really going to be

00:31:04,630 --> 00:31:09,850
bare-bones hello world type stuff but it

00:31:07,210 --> 00:31:13,600
should work so we're gonna hop back into

00:31:09,850 --> 00:31:16,330
the IDE we are going to change from the

00:31:13,600 --> 00:31:19,690
maker bundle to use template called home

00:31:16,330 --> 00:31:22,000
HTML our home HTML Twigg remove the

00:31:19,690 --> 00:31:24,910
other junk around there and create a

00:31:22,000 --> 00:31:26,890
file called home HTML twig inside the

00:31:24,910 --> 00:31:29,590
templates directory if you're new to

00:31:26,890 --> 00:31:31,930
symphony for the templates directory is

00:31:29,590 --> 00:31:34,510
where all of the tweak stuff goes from

00:31:31,930 --> 00:31:36,190
now on previously it was in other

00:31:34,510 --> 00:31:38,650
locations but this is just a top-level

00:31:36,190 --> 00:31:40,510
templates directory you'll see that also

00:31:38,650 --> 00:31:43,300
as soon as you install the twig bundle

00:31:40,510 --> 00:31:46,150
it gives you a baseline base HTML dot

00:31:43,300 --> 00:31:48,790
twig so that that's there so this little

00:31:46,150 --> 00:31:51,730
hello world thing is going to extend the

00:31:48,790 --> 00:31:53,170
base the applications base HTML twig

00:31:51,730 --> 00:31:54,580
which I'm not going to do anything to

00:31:53,170 --> 00:31:58,030
right now but that's where you would go

00:31:54,580 --> 00:31:59,740
build a shell of your application so

00:31:58,030 --> 00:32:02,200
running this through the web browser

00:31:59,740 --> 00:32:05,200
gives you an incredibly awesome hello

00:32:02,200 --> 00:32:07,450
world which might not seem super

00:32:05,200 --> 00:32:11,400
impressive but we've done zero

00:32:07,450 --> 00:32:16,300
configuration we've gone from nothing to

00:32:11,400 --> 00:32:18,580
templating to creating controller and

00:32:16,300 --> 00:32:20,970
having everything work without having to

00:32:18,580 --> 00:32:23,500
actually do any Symphony configuration

00:32:20,970 --> 00:32:26,200
flex did everything for us to make this

00:32:23,500 --> 00:32:28,390
actually possible and this can get you

00:32:26,200 --> 00:32:29,740
far maybe you're gonna take this hello

00:32:28,390 --> 00:32:31,390
world application now you gonna build

00:32:29,740 --> 00:32:33,100
out a couple of you know splash pages

00:32:31,390 --> 00:32:34,240
landing page or something like that up

00:32:33,100 --> 00:32:37,810
until you want to actually start

00:32:34,240 --> 00:32:38,950
building your database layer maybe you

00:32:37,810 --> 00:32:41,020
want to build some sort of front-end

00:32:38,950 --> 00:32:42,460
that does some interesting stuff what

00:32:41,020 --> 00:32:45,340
you would be able to do then is go into

00:32:42,460 --> 00:32:46,840
your application and require the arm and

00:32:45,340 --> 00:32:49,030
it's going to download everything that

00:32:46,840 --> 00:32:53,350
you need to figure everything with the

00:32:49,030 --> 00:32:55,690
exception of the in the envy of being

00:32:53,350 --> 00:32:58,000
able to choose the driver type that you

00:32:55,690 --> 00:33:00,640
want to use and making sure that the

00:32:58,000 --> 00:33:03,610
doctrine version is correct for the my

00:33:00,640 --> 00:33:05,320
sequel version you can now start

00:33:03,610 --> 00:33:07,930
building your front-end application and

00:33:05,320 --> 00:33:09,370
start building you know entities that

00:33:07,930 --> 00:33:13,030
would actually make sense to use the

00:33:09,370 --> 00:33:14,620
Maker bundle to make an entity you can

00:33:13,030 --> 00:33:16,929
go along like that until all of a sudden

00:33:14,620 --> 00:33:18,249
you realize you need some back-end stuff

00:33:16,929 --> 00:33:20,889
so you don't want to build your own

00:33:18,249 --> 00:33:24,429
custom back-end just yet so you want to

00:33:20,889 --> 00:33:26,229
use the canned admin functionality so

00:33:24,429 --> 00:33:29,469
what you can do is composer to require

00:33:26,229 --> 00:33:32,349
admin and now it's going to create an

00:33:29,469 --> 00:33:34,599
application that lives in slash admin on

00:33:32,349 --> 00:33:37,330
your application and it's installed it's

00:33:34,599 --> 00:33:38,979
configured everything is right you have

00:33:37,330 --> 00:33:42,399
to go in and modify one configuration

00:33:38,979 --> 00:33:45,369
file to list the entities but otherwise

00:33:42,399 --> 00:33:46,330
it should work out of the box and once

00:33:45,369 --> 00:33:50,259
you get to the point where you've

00:33:46,330 --> 00:33:53,200
created your own custom back-end all you

00:33:50,259 --> 00:33:55,539
have to do is remove it suppose we

00:33:53,200 --> 00:33:57,789
remove admin and now you no longer have

00:33:55,539 --> 00:34:01,450
to deal with the admin package at all

00:33:57,789 --> 00:34:07,059
and you can move on with your own

00:34:01,450 --> 00:34:09,849
application so symphony flex it's really

00:34:07,059 --> 00:34:12,849
about making the developer experience a

00:34:09,849 --> 00:34:15,000
lot better for managing your application

00:34:12,849 --> 00:34:18,429
over time it doesn't really do anything

00:34:15,000 --> 00:34:19,929
new or exciting except does some stuff

00:34:18,429 --> 00:34:22,029
that was probably really boring and

00:34:19,929 --> 00:34:24,129
error-prone automatically for you so you

00:34:22,029 --> 00:34:25,690
don't have to do it anymore and a lot of

00:34:24,129 --> 00:34:27,909
this is possible thanks to the the

00:34:25,690 --> 00:34:30,429
direction that Symphony for went in in

00:34:27,909 --> 00:34:32,799
terms of changing how some of the

00:34:30,429 --> 00:34:36,270
default structures were handled how

00:34:32,799 --> 00:34:36,270
bundles were handled that sort of thing

00:34:37,619 --> 00:34:44,289
but again Symphony 3 3 and 3/4 will

00:34:41,829 --> 00:34:46,839
support this as well if you how many

00:34:44,289 --> 00:34:48,909
people have 33 or 3-4 applications that

00:34:46,839 --> 00:34:50,649
they're working on how many might

00:34:48,909 --> 00:34:53,409
consider changing your date or a

00:34:50,649 --> 00:34:56,799
directory structure to try flex a couple

00:34:53,409 --> 00:34:59,200
people cool so yeah it's definitely that

00:34:56,799 --> 00:35:02,220
this is this is all the default for

00:34:59,200 --> 00:35:04,829
symphony for right now it is optional

00:35:02,220 --> 00:35:06,789
but it is the default way to handle

00:35:04,829 --> 00:35:09,460
installing and managing Symphony for

00:35:06,789 --> 00:35:12,339
applications and it is all possible to

00:35:09,460 --> 00:35:14,109
use in symphony 3 3 and 3/4 but it does

00:35:12,339 --> 00:35:19,240
require more work that parts are not

00:35:14,109 --> 00:35:21,299
super easy right now and that's all for

00:35:19,240 --> 00:35:21,299

YouTube URL: https://www.youtube.com/watch?v=pm0wDHe_Fs0


