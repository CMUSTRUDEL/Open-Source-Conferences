Title: PHP UK Conference 2018 - Michael Heap - Zero to Jenkins: Automatic builds + deploys
Publication date: 2018-03-27
Playlist: PHP UK Conference 2018
Description: 
	In late 2016, Jenkins finally made it to version 2.0 which brought a huge number of improvements. In this talk, we'll go from an empty machine to a Jenkins install that automatically detects repos, branches and pull requests and builds them according to the Jenkinsfile in each branch. We'll be running tests, linting and packaging applications in parallel where possible, and even auto-deploying our application once our pipeline passes!
Captions: 
	00:00:03,350 --> 00:00:10,200
this talk is going to be 150 minute live

00:00:05,880 --> 00:00:10,830
demo I am optimistic before we get

00:00:10,200 --> 00:00:11,969
started

00:00:10,830 --> 00:00:14,820
hopefully you are in the right room

00:00:11,969 --> 00:00:17,220
you're here to learn about Jenkins but

00:00:14,820 --> 00:00:19,259
just a little bit about me to start I've

00:00:17,220 --> 00:00:24,059
been a PHP dev for about 12 years

00:00:19,259 --> 00:00:27,509
I started out writing PO I will go of

00:00:24,059 --> 00:00:29,880
Ruby Python all kinds of things in the

00:00:27,509 --> 00:00:31,739
last day in the last decade but one

00:00:29,880 --> 00:00:36,140
thing that didn't change is the I'm a

00:00:31,739 --> 00:00:39,420
lazy developer laziness is a virtue

00:00:36,140 --> 00:00:41,940
why do something over and over when the

00:00:39,420 --> 00:00:46,589
computer can do it for you and that's

00:00:41,940 --> 00:00:48,390
where Jenkins comes in Jenkins has been

00:00:46,589 --> 00:00:51,629
around a while I'm sure most of you have

00:00:48,390 --> 00:00:54,420
seen Jenkins 1.0 had to work without

00:00:51,629 --> 00:00:56,899
hovel eggs and L configuration click

00:00:54,420 --> 00:00:59,789
through the UI configure jobs that way

00:00:56,899 --> 00:01:02,219
the good news is at the end of 2016

00:00:59,789 --> 00:01:03,449
Jenkins 2 came out and they got mother

00:01:02,219 --> 00:01:05,519
didn't get rid of all that you can still

00:01:03,449 --> 00:01:08,130
do it if you really really want but you

00:01:05,519 --> 00:01:11,340
don't have to anymore and this talk is a

00:01:08,130 --> 00:01:14,220
50 minute whirlwind tour of going from

00:01:11,340 --> 00:01:16,560
nothing to having a PHP app running

00:01:14,220 --> 00:01:19,560
tests being packaged and automatically

00:01:16,560 --> 00:01:20,250
deployed to an instance 50 minutes it's

00:01:19,560 --> 00:01:25,160
that easy

00:01:20,250 --> 00:01:28,380
you ready to go this may or may not work

00:01:25,160 --> 00:01:33,150
right it has worked in the past I

00:01:28,380 --> 00:01:35,220
promise but let's see how it goes we're

00:01:33,150 --> 00:01:36,750
gonna install Jenkins right before that

00:01:35,220 --> 00:01:38,460
we're going to create the machines on

00:01:36,750 --> 00:01:40,890
dish 2 lotion that we're going to use

00:01:38,460 --> 00:01:43,590
when they stole Jenkins create a new

00:01:40,890 --> 00:01:46,440
laravel app than the tests get core

00:01:43,590 --> 00:01:48,900
coverage make you build automatically

00:01:46,440 --> 00:01:51,150
with every push to get hub create a

00:01:48,900 --> 00:01:52,820
reusable library so that we don't have

00:01:51,150 --> 00:01:55,260
to copy and paste between our apps

00:01:52,820 --> 00:01:56,610
building the bunty package and then

00:01:55,260 --> 00:02:00,330
automatically deploy our about with

00:01:56,610 --> 00:02:02,870
ansible 50 minutes can we do it come on

00:02:00,330 --> 00:02:02,870
let's go

00:02:03,440 --> 00:02:09,530
so we start we need to create some

00:02:06,420 --> 00:02:12,420
machines I'm using digitalocean for this

00:02:09,530 --> 00:02:15,950
so I'm creating two machines one for

00:02:12,420 --> 00:02:18,030
Jenkins one for our application

00:02:15,950 --> 00:02:23,910
that's just hitting the API with a

00:02:18,030 --> 00:02:26,220
command-line tool and when we list of

00:02:23,910 --> 00:02:30,989
apps or instances we get the IP

00:02:26,220 --> 00:02:32,940
addresses back Jenkins runs on port 8080

00:02:30,989 --> 00:02:37,880
which is good but there's not actually

00:02:32,940 --> 00:02:42,019
anything there yet so let's install it

00:02:37,880 --> 00:02:46,190
let's login to the Jenkins instance

00:02:42,019 --> 00:02:49,470
hopefully Shi started by now it has not

00:02:46,190 --> 00:02:51,180
takes about 10 to 30 seconds depending

00:02:49,470 --> 00:02:53,239
on how lucky you are I was on lucky this

00:02:51,180 --> 00:02:53,239
time

00:02:55,310 --> 00:03:01,470
man this is not off to a good start is

00:02:57,600 --> 00:03:05,130
it come on dish sloshed and don't let me

00:03:01,470 --> 00:03:09,780
down very eye so now we've got this

00:03:05,130 --> 00:03:11,489
empty box for running Jenkins Jenkins

00:03:09,780 --> 00:03:14,690
give you really really straightforward

00:03:11,489 --> 00:03:17,970
installation instructions literally copy

00:03:14,690 --> 00:03:19,620
and paste I mean you should always

00:03:17,970 --> 00:03:22,500
understand what you're doing here we're

00:03:19,620 --> 00:03:26,880
trusting very GPG key said the package

00:03:22,500 --> 00:03:31,040
is the sank lately we're adding the

00:03:26,880 --> 00:03:31,040
package repo to our list of sources and

00:03:32,570 --> 00:03:40,860
then we're going to install Jenkins AB

00:03:36,360 --> 00:03:44,160
get installed Jenkins now this is gonna

00:03:40,860 --> 00:03:46,079
take a little while because Jenkins and

00:03:44,160 --> 00:03:48,090
I know this is a dirty word of PHP

00:03:46,079 --> 00:03:53,519
conferences but Jenkins is written in

00:03:48,090 --> 00:03:57,150
Java I know it ones on the JVM

00:03:53,519 --> 00:03:58,940
it requires Java 8 but it always has

00:03:57,150 --> 00:04:01,320
done and it probably always will do

00:03:58,940 --> 00:04:04,890
there's nothing we can do to change that

00:04:01,320 --> 00:04:06,239
I did have an issue with Jenkins I came

00:04:04,890 --> 00:04:08,970
into work one day and Jenkins wouldn't

00:04:06,239 --> 00:04:11,489
start they're not the best at semantic

00:04:08,970 --> 00:04:13,170
versioning in a patch release they

00:04:11,489 --> 00:04:15,750
bumped the requirement from Java 7 to

00:04:13,170 --> 00:04:16,940
Java 8 so you do have to be a little bit

00:04:15,750 --> 00:04:20,459
careful sometime

00:04:16,940 --> 00:04:23,370
but for all is false it is one of the

00:04:20,459 --> 00:04:28,640
best things we've got Jenkins is

00:04:23,370 --> 00:04:35,010
installed they go back to the install

00:04:28,640 --> 00:04:38,280
those Jenkins five minutes past for like

00:04:35,010 --> 00:04:39,930
five minutes and we have our instance we

00:04:38,280 --> 00:04:44,820
created virtual machines we install

00:04:39,930 --> 00:04:46,710
Jenkins now when you install Jenkins it

00:04:44,820 --> 00:04:47,850
says password so that no one else can

00:04:46,710 --> 00:04:50,220
get to it before you come

00:04:47,850 --> 00:04:57,350
so they some lock it by logging in to

00:04:50,220 --> 00:05:00,150
the server and taking out that password

00:04:57,350 --> 00:05:02,940
and this is where it allows me to create

00:05:00,150 --> 00:05:04,470
a user and to install plugins in the

00:05:02,940 --> 00:05:06,690
interest of time I'm not gonna install

00:05:04,470 --> 00:05:08,880
all of the suggested ones I'm just gonna

00:05:06,690 --> 00:05:12,480
install the ones that we need which are

00:05:08,880 --> 00:05:17,190
the Smith our bigger credentials binding

00:05:12,480 --> 00:05:20,040
plugin for secret management the github

00:05:17,190 --> 00:05:23,520
looking for automatically scanning an

00:05:20,040 --> 00:05:26,310
organization on github and the pipeline

00:05:23,520 --> 00:05:29,729
plugin which is used for defining your

00:05:26,310 --> 00:05:32,970
Jenkins builds in Cod those are the only

00:05:29,729 --> 00:05:35,430
three that I need and if I take you out

00:05:32,970 --> 00:05:38,030
one step this is downloading them the

00:05:35,430 --> 00:05:40,470
wall package there's joys they just get

00:05:38,030 --> 00:05:42,590
downloaded into the ride directory and

00:05:40,470 --> 00:05:45,750
then Jenkins will be starts itself

00:05:42,590 --> 00:05:48,360
credentials binding fairly quick github

00:05:45,750 --> 00:05:50,790
the ranch sauce fairly quick pipeline

00:05:48,360 --> 00:05:52,440
takes forever and that's because

00:05:50,790 --> 00:05:56,010
pipeline isn't actually a plugin

00:05:52,440 --> 00:05:57,510
it's a collection of plugins that's the

00:05:56,010 --> 00:05:59,880
wonderful thing about Jenkins everything

00:05:57,510 --> 00:06:01,380
is a plug-in they recently launched a

00:05:59,880 --> 00:06:02,760
new UI for it but instead of just

00:06:01,380 --> 00:06:04,710
changing the default they've got to

00:06:02,760 --> 00:06:06,900
plug-in it means that you don't get

00:06:04,710 --> 00:06:09,510
stuck maintaining and patching things

00:06:06,900 --> 00:06:11,220
that you don't really need you just

00:06:09,510 --> 00:06:13,250
install what you need to get your job

00:06:11,220 --> 00:06:13,250
done

00:06:15,210 --> 00:06:19,590
this should be done in about five to ten

00:06:17,460 --> 00:06:22,889
seconds and then we should be able to

00:06:19,590 --> 00:06:24,360
login to Jenkins that's another two

00:06:22,889 --> 00:06:27,150
minutes and we've installed all of the

00:06:24,360 --> 00:06:34,970
plugins that we need I'm gonna create

00:06:27,150 --> 00:06:34,970
user facts about my own name mate7

00:06:36,050 --> 00:06:46,050
finish start using Jenkins seven minutes

00:06:43,020 --> 00:06:47,880
Jenkins installed configured plugins

00:06:46,050 --> 00:06:51,270
installed doing well but it doesn't

00:06:47,880 --> 00:06:52,650
actually do anything right so I don't

00:06:51,270 --> 00:06:55,550
got the we can go to Jenkins but it's

00:06:52,650 --> 00:07:00,870
not actually doing any work for us so

00:06:55,550 --> 00:07:03,599
let's create a new job I have medical

00:07:00,870 --> 00:07:06,300
test org registered as an organization

00:07:03,599 --> 00:07:10,860
them on github this is a github

00:07:06,300 --> 00:07:11,970
organization and what this will do is

00:07:10,860 --> 00:07:16,409
they'll configure everything in the

00:07:11,970 --> 00:07:17,970
background start scanning that org now

00:07:16,409 --> 00:07:19,830
you can do this without credentials but

00:07:17,970 --> 00:07:22,590
you will hit the github there limit very

00:07:19,830 --> 00:07:24,800
quickly so I'm just going to write a set

00:07:22,590 --> 00:07:24,800
here

00:07:31,370 --> 00:07:37,550
and that's just a username password to

00:07:34,190 --> 00:07:40,010
authenticate with the github API skip

00:07:37,550 --> 00:07:41,990
off the behaviors for now you can do

00:07:40,010 --> 00:07:43,070
cool things like don't build branches

00:07:41,990 --> 00:07:45,470
that were already raced as a pull

00:07:43,070 --> 00:07:48,680
request so you don't get duplicate

00:07:45,470 --> 00:07:52,760
builds and then we've got this project

00:07:48,680 --> 00:07:54,380
recognizes section and what says Jenkins

00:07:52,760 --> 00:07:56,449
file that's the file in your project the

00:07:54,380 --> 00:08:01,130
Jenkins will look for to recognize that

00:07:56,449 --> 00:08:02,479
it can build it if I save it Jenkins

00:08:01,130 --> 00:08:05,000
will go off it will scan the

00:08:02,479 --> 00:08:07,850
organization it's found this repo called

00:08:05,000 --> 00:08:09,110
demo electron which we can completely

00:08:07,850 --> 00:08:11,080
ignore because that was something

00:08:09,110 --> 00:08:13,630
different but how's the Jenkins foul

00:08:11,080 --> 00:08:16,970
that's for a set for it's called I've up

00:08:13,630 --> 00:08:19,340
and what Jenkins will do is it will

00:08:16,970 --> 00:08:28,340
actually it will try and build that

00:08:19,340 --> 00:08:30,050
project github the API usage let's go

00:08:28,340 --> 00:08:32,870
back to that job definition I must have

00:08:30,050 --> 00:08:34,039
forgotten to choose the I forgot to

00:08:32,870 --> 00:08:41,479
choose the credentials and you see how

00:08:34,039 --> 00:08:45,770
we got very limited straightaway so I'm

00:08:41,479 --> 00:08:49,820
just going to kick off a new scam cancel

00:08:45,770 --> 00:08:53,959
that one so it's proposing tomorrow

00:08:49,820 --> 00:08:56,560
later on I found the Jenkins foul and

00:08:53,959 --> 00:08:59,300
it's here and they tried to build it and

00:08:56,560 --> 00:09:01,940
it failed they don't have gnawed or

00:08:59,300 --> 00:09:03,650
anything like that on this machine let's

00:09:01,940 --> 00:09:06,770
ignore it for now we we don't need

00:09:03,650 --> 00:09:11,240
anything in this repo instead we're

00:09:06,770 --> 00:09:14,620
going to create a new level up so if we

00:09:11,240 --> 00:09:14,620
we jump back to the terminal

00:09:17,150 --> 00:09:25,140
there's there's nothing in here honest

00:09:21,500 --> 00:09:27,570
we're gonna create a new level up and we

00:09:25,140 --> 00:09:29,940
can call it a basic and I'll just

00:09:27,570 --> 00:09:34,770
download all of the dependencies it has

00:09:29,940 --> 00:09:37,410
one two unit tests things like that the

00:09:34,770 --> 00:09:38,670
application is now ready let's push it

00:09:37,410 --> 00:09:43,230
up to github books we don't have a V

00:09:38,670 --> 00:09:44,700
porphyry either so new repo when I said

00:09:43,230 --> 00:09:47,940
we can do everything I meant we're going

00:09:44,700 --> 00:09:52,580
to do everything so it's just called

00:09:47,940 --> 00:09:55,580
basic and we're just going to commit

00:09:52,580 --> 00:09:55,580
everything

00:10:01,149 --> 00:10:05,259
let's get commit

00:10:06,580 --> 00:10:13,300
and then we're gonna push that up what's

00:10:11,080 --> 00:10:16,510
gonna happen now is the Jenkins isn't

00:10:13,300 --> 00:10:18,790
going to do a thing because it's going

00:10:16,510 --> 00:10:21,430
to detect it but it doesn't have that

00:10:18,790 --> 00:10:26,940
special Jenkins foul and if we go back

00:10:21,430 --> 00:10:26,940
to Jenkins and we scand the organization

00:10:27,090 --> 00:10:34,000
we can see that it proposed basic but

00:10:31,720 --> 00:10:39,520
the Jenkins file was not found so that's

00:10:34,000 --> 00:10:46,840
why he didn't do anything so they saw

00:10:39,520 --> 00:10:48,700
the Jenkins foul Jenkins file is the

00:10:46,840 --> 00:10:51,990
file the contains all the instructions

00:10:48,700 --> 00:10:54,340
for how Jenkins shall build your project

00:10:51,990 --> 00:10:57,610
everything starts by specifying the

00:10:54,340 --> 00:11:01,060
notes of the month in previous laws we

00:10:57,610 --> 00:11:03,310
had to build on Windows Mac OS and Linux

00:11:01,060 --> 00:11:05,950
or the machines were tanked with what

00:11:03,310 --> 00:11:09,040
operating system they are here master is

00:11:05,950 --> 00:11:10,750
a special tag that is your master

00:11:09,040 --> 00:11:17,590
Jenkins server so we're just gonna run

00:11:10,750 --> 00:11:19,240
on the single node that we created you

00:11:17,590 --> 00:11:21,730
don't have to use stages but it really

00:11:19,240 --> 00:11:23,980
helps I'm so stage is just a collection

00:11:21,730 --> 00:11:26,740
of actions to them I'm just gonna do a

00:11:23,980 --> 00:11:29,650
little demo here and all we're gonna do

00:11:26,740 --> 00:11:31,900
is make Jenkins say hello world doesn't

00:11:29,650 --> 00:11:38,830
do anything with our project it just

00:11:31,900 --> 00:11:40,890
builds the basics we're gonna push that

00:11:38,830 --> 00:11:40,890
up

00:11:42,110 --> 00:11:57,260
and this time if we scan our

00:11:45,630 --> 00:11:59,630
organization if enter Jenkins foul and

00:11:57,260 --> 00:12:05,910
disappeared and if we go into the build

00:11:59,630 --> 00:12:09,660
it was successful and it just says hello

00:12:05,910 --> 00:12:11,190
world now if we make any changes to that

00:12:09,660 --> 00:12:13,200
Jenkins file and push it up Jenkins

00:12:11,190 --> 00:12:18,980
should automatically detect those

00:12:13,200 --> 00:12:21,930
changes and move on the build 30 minutes

00:12:18,980 --> 00:12:24,830
we have a project it's building it's not

00:12:21,930 --> 00:12:27,870
doing anything useful this is being

00:12:24,830 --> 00:12:31,590
automatically detected and it's winning

00:12:27,870 --> 00:12:34,800
the instructions that we gave it so back

00:12:31,590 --> 00:12:35,820
to the Jenkins foul what's the first

00:12:34,800 --> 00:12:39,660
thing that we need to do when we're

00:12:35,820 --> 00:12:42,350
trying to build a project we need to

00:12:39,660 --> 00:12:42,350
Kalandar source code

00:12:43,829 --> 00:12:49,189
now check out SEM is a clever thing the

00:12:46,619 --> 00:12:51,449
Jenkins house so you can set specific

00:12:49,189 --> 00:12:54,239
repositories and ranches and things like

00:12:51,449 --> 00:12:56,100
that but SEM is a magic variable that

00:12:54,239 --> 00:12:58,829
automatically contains all of the

00:12:56,100 --> 00:13:01,709
correct information for multi branch

00:12:58,829 --> 00:13:05,239
pipelines so github is told it what we

00:13:01,709 --> 00:13:08,579
bought what branch and SEM contains that

00:13:05,239 --> 00:13:16,410
and once we've got that we probably want

00:13:08,579 --> 00:13:20,100
to run composer and then the my unit

00:13:16,410 --> 00:13:22,079
tests now if you've ever configured

00:13:20,100 --> 00:13:24,689
Jenkins before it you know said this is

00:13:22,079 --> 00:13:26,220
way way easier than clicking through all

00:13:24,689 --> 00:13:29,249
of those screens and finding the right

00:13:26,220 --> 00:13:33,629
check boxes like where PHP developers we

00:13:29,249 --> 00:13:35,299
know how to run composer install we can

00:13:33,629 --> 00:13:38,399
tell Jenkins run a shell command

00:13:35,299 --> 00:13:39,959
composer install we know how to run PHP

00:13:38,399 --> 00:13:43,379
unit we tell Jenkins when the shell

00:13:39,959 --> 00:13:44,970
commands vendor been PHP unit this is

00:13:43,379 --> 00:13:51,230
all familiar to us it's what we do in

00:13:44,970 --> 00:13:51,230
our day-to-day jobs so if I save that

00:13:53,059 --> 00:14:01,499
push it up make them in messages for

00:13:57,540 --> 00:14:05,220
this repo we're going to be horrific if

00:14:01,499 --> 00:14:09,089
we go back to basic and give it 10 to 20

00:14:05,220 --> 00:14:11,249
seconds there it is the jobs been picked

00:14:09,089 --> 00:14:14,629
up that's a web hook from github to our

00:14:11,249 --> 00:14:16,949
Jenkins instance and it failed

00:14:14,629 --> 00:14:21,149
that's because PHP isn't installed on

00:14:16,949 --> 00:14:23,069
the server composer not found but it did

00:14:21,149 --> 00:14:28,499
it blonde our repo and attractive on

00:14:23,069 --> 00:14:29,699
composer so what we're going to do is

00:14:28,499 --> 00:14:33,230
just jump onto the Jenkins server

00:14:29,699 --> 00:14:35,160
install all the void dependencies and

00:14:33,230 --> 00:14:38,519
earlier I mentioned a new you either

00:14:35,160 --> 00:14:40,319
they're built as a plugin that takes a

00:14:38,519 --> 00:14:41,249
little while to install so I'm just

00:14:40,319 --> 00:14:43,019
going to kick that off now in the

00:14:41,249 --> 00:14:47,910
background so that I can show it to you

00:14:43,019 --> 00:14:51,269
later on it's called blue ocean and it's

00:14:47,910 --> 00:14:56,730
quite nice this is another one of those

00:14:51,269 --> 00:14:57,550
meta packages where there's about 20 30

00:14:56,730 --> 00:15:00,279
of the packages

00:14:57,550 --> 00:15:02,529
underneath it that they were all of

00:15:00,279 --> 00:15:05,080
those pending once appointed blue ocean

00:15:02,529 --> 00:15:06,370
and we just want Jenkins to restart when

00:15:05,080 --> 00:15:08,380
the installation is complete under

00:15:06,370 --> 00:15:09,970
another learning jobs it's quite nice it

00:15:08,380 --> 00:15:13,779
will detect if there's any jobs and not

00:15:09,970 --> 00:15:21,130
kill them halfway through and just like

00:15:13,779 --> 00:15:25,269
that PHP is finished installing so if we

00:15:21,130 --> 00:15:28,060
go back to I build and try and build it

00:15:25,269 --> 00:15:33,130
now hopefully should get a little bit

00:15:28,060 --> 00:15:37,260
further compositor install package

00:15:33,130 --> 00:15:39,700
operations and Jenkins is restarting

00:15:37,260 --> 00:15:44,350
Thank You Jenkins I just tell people how

00:15:39,700 --> 00:15:46,779
great your wife what Jenkins is

00:15:44,350 --> 00:15:48,310
restarting um I also created an app

00:15:46,779 --> 00:15:52,300
server earlier that we're going to

00:15:48,310 --> 00:15:54,310
deploy our application to that will also

00:15:52,300 --> 00:16:00,880
on the PHP on it so I'm just going to

00:15:54,310 --> 00:16:03,070
drop in it's without get up there and

00:16:00,880 --> 00:16:04,810
they still love of the dependencies on

00:16:03,070 --> 00:16:07,740
dev as well sort of those dev and ready

00:16:04,810 --> 00:16:07,740
when we need to run our application

00:16:10,950 --> 00:16:14,250
Jenkins is back

00:16:16,050 --> 00:16:23,810
almost couldn't remember my password

00:16:17,580 --> 00:16:26,970
then I would've been embarrassing and

00:16:23,810 --> 00:16:29,149
the job is running so this is all the

00:16:26,970 --> 00:16:32,100
composer install its downloading

00:16:29,149 --> 00:16:33,870
Symphony thanks Dragon Mountain cron

00:16:32,100 --> 00:16:36,690
expression all of the dependencies for

00:16:33,870 --> 00:16:38,820
our application this takes a little

00:16:36,690 --> 00:16:41,520
while the first time he's having to

00:16:38,820 --> 00:16:45,839
fetch everything from the the archives

00:16:41,520 --> 00:16:47,670
on github but in future ones that will

00:16:45,839 --> 00:16:50,399
all be cached so that would be basically

00:16:47,670 --> 00:16:54,470
instant and things felt they actually

00:16:50,399 --> 00:16:56,220
run the tests but there was an error no

00:16:54,470 --> 00:16:58,850
application encryption keys mean

00:16:56,220 --> 00:17:01,050
specified not that's a love of however

00:16:58,850 --> 00:17:04,470
that just means that I forgot to copy

00:17:01,050 --> 00:17:08,790
the diam file across so if we go back to

00:17:04,470 --> 00:17:12,839
our Jenkins file there are a few ways

00:17:08,790 --> 00:17:14,970
you can handle this you could fetch the

00:17:12,839 --> 00:17:16,740
diam file for your Jenkins distance from

00:17:14,970 --> 00:17:18,959
s 3 you could commit it to the veep or

00:17:16,740 --> 00:17:21,510
you could do all kinds of things in the

00:17:18,959 --> 00:17:23,520
interest of speed I'm just going to add

00:17:21,510 --> 00:17:25,470
a stage the copies it and generates a

00:17:23,520 --> 00:17:27,209
new key as part of the build because we

00:17:25,470 --> 00:17:30,600
don't rely on the the encryption key in

00:17:27,209 --> 00:17:36,900
any of our tests and then used to go

00:17:30,600 --> 00:17:40,800
before the tests when I commit this and

00:17:36,900 --> 00:17:42,870
push it up once again Jenkins will to

00:17:40,800 --> 00:17:44,460
see if that web hook from github and

00:17:42,870 --> 00:17:45,720
slide the build and hopefully this time

00:17:44,460 --> 00:17:53,070
you should see how much faster it

00:17:45,720 --> 00:17:55,800
actually is build done before composer

00:17:53,070 --> 00:17:58,580
done test pass I think we just had a

00:17:55,800 --> 00:18:01,940
green build we just had a green build

00:17:58,580 --> 00:18:05,049
yeah live in the enthusiasm

00:18:01,940 --> 00:18:08,960
[Applause]

00:18:05,049 --> 00:18:11,179
18 minutes 18 minutes from absolutely

00:18:08,960 --> 00:18:15,440
nothing to having a brand-new project

00:18:11,179 --> 00:18:17,150
building on Jenkins nobody I mean we can

00:18:15,440 --> 00:18:21,200
keep going because this is all things

00:18:17,150 --> 00:18:22,630
that we could do on a local machine what

00:18:21,200 --> 00:18:30,260
if we want to start doing things like

00:18:22,630 --> 00:18:32,840
code coverage so we've got our X unity

00:18:30,260 --> 00:18:36,049
points we could put those in we could

00:18:32,840 --> 00:18:42,890
use clover now this one looks a little

00:18:36,049 --> 00:18:46,520
bit scary for a PHP unit to run coverage

00:18:42,890 --> 00:18:49,789
I just need to change the line to

00:18:46,520 --> 00:18:50,900
actually output the coverage reports and

00:18:49,789 --> 00:18:58,640
I'm going to commit this up and then

00:18:50,900 --> 00:19:01,669
talk you through it so I added a couple

00:18:58,640 --> 00:19:04,669
of things there very quickly and one is

00:19:01,669 --> 00:19:07,789
the we output I J unit log for log files

00:19:04,669 --> 00:19:11,480
and our clover coverage report into a

00:19:07,789 --> 00:19:13,010
folder called reports J unit is a

00:19:11,480 --> 00:19:17,179
Jenkins plugging that was pulled in

00:19:13,010 --> 00:19:19,520
earlier as a dependency and we're saying

00:19:17,179 --> 00:19:22,370
I want J unit report looking reports

00:19:19,520 --> 00:19:25,700
slash X unit and then we've got this

00:19:22,370 --> 00:19:27,260
masked roster and this is what happens

00:19:25,700 --> 00:19:29,150
when looking authors don't update their

00:19:27,260 --> 00:19:31,159
plugins to take advantage of the Jenkins

00:19:29,150 --> 00:19:33,140
foul it doesn't mean that you can use

00:19:31,159 --> 00:19:35,210
their plugins it just means that you've

00:19:33,140 --> 00:19:38,360
got to call the Java classes directly

00:19:35,210 --> 00:19:40,820
and passing all of the kilometers it's

00:19:38,360 --> 00:19:42,409
not nice but it's better than not being

00:19:40,820 --> 00:19:43,549
able to use the plug-in just because

00:19:42,409 --> 00:19:46,250
they haven't updated to the lead

00:19:43,549 --> 00:19:49,460
standards you were saying called the

00:19:46,250 --> 00:19:52,900
clover publisher class looking reports

00:19:49,460 --> 00:19:56,240
it's called coverage we're aiming for

00:19:52,900 --> 00:19:57,470
10% coverage for healthy 5% from healthy

00:19:56,240 --> 00:20:03,470
zero for failing

00:19:57,470 --> 00:20:06,740
I have lost standards and this time is

00:20:03,470 --> 00:20:08,600
filled again let's take a look the nice

00:20:06,740 --> 00:20:11,770
thing about Jenkins is it shows you all

00:20:08,600 --> 00:20:11,770
of the commands that is for the link

00:20:13,190 --> 00:20:17,180
no implementation of interface clover

00:20:15,320 --> 00:20:19,340
publisher after having installed the

00:20:17,180 --> 00:20:24,470
clover plugin so back to the drawing

00:20:19,340 --> 00:20:28,360
board we go manage Jenkins plugins

00:20:24,470 --> 00:20:34,790
remember I said everything was a plugin

00:20:28,360 --> 00:20:36,560
so clover not clover PHP clover PHP was

00:20:34,790 --> 00:20:38,720
written a long time ago and then

00:20:36,560 --> 00:20:39,890
abandoned clover is a standard it

00:20:38,720 --> 00:20:44,450
doesn't matter whether you're working in

00:20:39,890 --> 00:20:46,370
Java PHP Python if your application will

00:20:44,450 --> 00:20:49,430
I put clover files this plug-in will

00:20:46,370 --> 00:20:53,420
work I'm just going to restore it

00:20:49,430 --> 00:20:54,980
Jenkins so that I gets picked up don't

00:20:53,420 --> 00:20:58,490
take a few seconds and then will then be

00:20:54,980 --> 00:21:00,230
built again you start to see all of

00:20:58,490 --> 00:21:03,110
these additional things that Jenkins can

00:21:00,230 --> 00:21:05,120
do like how many of you run code

00:21:03,110 --> 00:21:09,100
coverage and then look a clover

00:21:05,120 --> 00:21:12,380
poisoning your local machine yeah couple

00:21:09,100 --> 00:21:15,650
take my hats off to you that's pretty

00:21:12,380 --> 00:21:18,040
good but people don't in general people

00:21:15,650 --> 00:21:22,550
just run the test yep it looks green

00:21:18,040 --> 00:21:24,650
ship it Jenkins can do things like coke

00:21:22,550 --> 00:21:35,390
of which percentages health of the cord

00:21:24,650 --> 00:21:38,090
so basic build a master build no and

00:21:35,390 --> 00:21:40,010
this time it should fly through because

00:21:38,090 --> 00:21:43,160
we've got all the void composite

00:21:40,010 --> 00:21:45,530
dependencies cached things like that you

00:21:43,160 --> 00:21:47,240
see these things at the top you know I

00:21:45,530 --> 00:21:50,780
said you don't have to use stages but

00:21:47,240 --> 00:21:52,220
they're really useful this is why it

00:21:50,780 --> 00:21:54,200
tells you how long you spend in each

00:21:52,220 --> 00:21:55,550
stage so you can find out why your

00:21:54,200 --> 00:22:04,730
pipelines are taking longer than

00:21:55,550 --> 00:22:08,050
intended 50.7 method percentage 50.7%

00:22:04,730 --> 00:22:11,770
method coverage was according to clover

00:22:08,050 --> 00:22:11,770
see the test results

00:22:13,559 --> 00:22:20,229
look at the union test example test test

00:22:16,869 --> 00:22:21,489
basic this is all the X unit input so

00:22:20,229 --> 00:22:23,830
now we Jenkins is actually starting to

00:22:21,489 --> 00:22:30,249
add more than just running unit tests on

00:22:23,830 --> 00:22:32,019
your local machine this is good but this

00:22:30,249 --> 00:22:34,840
is all contained in one Jenkins file and

00:22:32,019 --> 00:22:36,159
this is one level well project what

00:22:34,840 --> 00:22:38,169
happens when I've got a second level

00:22:36,159 --> 00:22:42,190
project or a third or a fourth or a

00:22:38,169 --> 00:22:43,330
hundredth right if you want to change a

00:22:42,190 --> 00:22:45,249
single thing you'd have to go through

00:22:43,330 --> 00:22:47,489
all of those projects and update your

00:22:45,249 --> 00:22:49,450
Jenkins file right

00:22:47,489 --> 00:22:53,619
thankfully Jenkins has you covered there

00:22:49,450 --> 00:22:55,840
as well so it has a concept of a global

00:22:53,619 --> 00:22:57,519
library and that's just a set of

00:22:55,840 --> 00:23:00,519
reusable steps that you can call from

00:22:57,519 --> 00:23:02,889
your Jenkins file and if you up there

00:23:00,519 --> 00:23:04,599
the step in your global library it gets

00:23:02,889 --> 00:23:06,609
updated in every parent and pipeline

00:23:04,599 --> 00:23:08,379
that depends on it so we're going to

00:23:06,609 --> 00:23:15,639
take this and we're going to turn it in

00:23:08,379 --> 00:23:18,580
to a global library now jenkees ones on

00:23:15,639 --> 00:23:20,320
the JVM and all the Jenkins file that

00:23:18,580 --> 00:23:21,279
you saw and the global live view

00:23:20,320 --> 00:23:25,149
actually written in a language called

00:23:21,279 --> 00:23:26,849
groovy which is interesting but it's

00:23:25,149 --> 00:23:33,879
functional

00:23:26,849 --> 00:23:35,169
because if runs on the JVM sorry I'm

00:23:33,879 --> 00:23:38,950
going to create a folder called Jenkins

00:23:35,169 --> 00:23:42,869
Jenkins pipeline to hold this because he

00:23:38,950 --> 00:23:42,869
was on the JVM you've got to respect the

00:23:43,320 --> 00:23:51,519
JVM naming standards and that is not

00:23:47,229 --> 00:23:55,679
like so it's source comm Michael heap

00:23:51,519 --> 00:23:55,679
it's made to manage matter he'd calm

00:23:56,399 --> 00:23:59,999
what we need to do next

00:24:01,340 --> 00:24:08,940
it's defined love our project because I

00:24:06,840 --> 00:24:10,530
don't want to build up the individual

00:24:08,940 --> 00:24:12,420
steps for every one of our projects I

00:24:10,530 --> 00:24:15,800
just want said this is written in

00:24:12,420 --> 00:24:15,800
Louisville to read them all the same way

00:24:19,220 --> 00:24:25,350
and there's a lot of stuff in here we've

00:24:22,410 --> 00:24:27,210
got this run method which tries to

00:24:25,350 --> 00:24:30,960
execute a step passing in any options

00:24:27,210 --> 00:24:36,300
and if there are any exceptions it fails

00:24:30,960 --> 00:24:39,360
the build we've got a couple of things

00:24:36,300 --> 00:24:41,490
defined so for every love of our project

00:24:39,360 --> 00:24:43,560
we want to check out the source code

00:24:41,490 --> 00:24:45,390
then we want a non compos our install we

00:24:43,560 --> 00:24:52,110
did more than that but I just show you

00:24:45,390 --> 00:24:55,020
implementing those two first so if I

00:24:52,110 --> 00:25:01,950
check out if I try and write check out

00:24:55,020 --> 00:25:06,740
groovy every step looks something like

00:25:01,950 --> 00:25:06,740
this it's just a a single execute method

00:25:06,800 --> 00:25:15,720
and it's just what we had before so that

00:25:12,240 --> 00:25:16,890
stays check out check out SCM in some of

00:25:15,720 --> 00:25:20,790
the same what we would have put in the

00:25:16,890 --> 00:25:22,350
Jenkins foul except now it's in

00:25:20,790 --> 00:25:25,290
somewhere it's in a global library that

00:25:22,350 --> 00:25:34,040
we come effluence and let's do the same

00:25:25,290 --> 00:25:36,330
for composer install dr. Weaver the

00:25:34,040 --> 00:25:39,480
documentation on this isn't particularly

00:25:36,330 --> 00:25:41,070
great I banged my head against the desk

00:25:39,480 --> 00:25:43,200
till about a week trying to get this

00:25:41,070 --> 00:25:46,550
working but this lobby I'm getting home

00:25:43,200 --> 00:25:46,550
for you to take a look out later on

00:25:48,920 --> 00:25:54,680
so check out and compose our install

00:25:55,260 --> 00:26:04,970
let's push that up to github not

00:26:02,520 --> 00:26:04,970
everything

00:26:05,510 --> 00:26:15,480
there's no beep off of it so off we got

00:26:08,460 --> 00:26:16,320
to github again create a new repo I'm

00:26:15,480 --> 00:26:20,929
gonna call this one

00:26:16,320 --> 00:26:20,929
Jenkins pipeline jenkees pipeline

00:26:26,780 --> 00:26:33,650
I'm gonna push this up and now this is

00:26:31,130 --> 00:26:36,260
available on github to be pulled in but

00:26:33,650 --> 00:26:39,380
we haven't actually told Jenkins what to

00:26:36,260 --> 00:26:43,910
do now I'm told it were this pipe this

00:26:39,380 --> 00:26:49,300
global pipeline lives so if we go back

00:26:43,910 --> 00:26:58,220
to Jenkins I'm going to manage Jenkins

00:26:49,300 --> 00:27:02,260
configure system thinking and then

00:26:58,220 --> 00:27:08,000
scroll down to global pipeline libraries

00:27:02,260 --> 00:27:11,540
we can nothin new one it's named in a

00:27:08,000 --> 00:27:12,680
really small box is Jenkins pipeline the

00:27:11,540 --> 00:27:16,310
default version we're just gonna grab

00:27:12,680 --> 00:27:21,050
the master once a lot of it from modern

00:27:16,310 --> 00:27:22,280
source control using github we're gonna

00:27:21,050 --> 00:27:28,310
use the credentials that I provided

00:27:22,280 --> 00:27:29,540
earlier the owner is Michael test org so

00:27:28,310 --> 00:27:30,920
you don't actually have to depend on the

00:27:29,540 --> 00:27:32,810
pipeline live there that your

00:27:30,920 --> 00:27:36,710
organization owns you can get from

00:27:32,810 --> 00:27:42,320
anywhere and ran the repository is

00:27:36,710 --> 00:27:47,720
Jenkins pipeline now any job that builds

00:27:42,320 --> 00:27:50,030
will have that pipeline available if we

00:27:47,720 --> 00:27:52,250
go back to Jenkins foul we've got all of

00:27:50,030 --> 00:27:54,410
the steps in there I'm just going to

00:27:52,250 --> 00:27:57,700
leave those like we don't need them

00:27:54,410 --> 00:27:57,700
anymore we've got a global library

00:27:58,540 --> 00:28:03,250
they've forgotten what it is

00:28:07,669 --> 00:28:13,950
so now we still have to run it on the

00:28:10,889 --> 00:28:17,669
master node but we just said that this

00:28:13,950 --> 00:28:20,220
pipeline is a new macro heat level

00:28:17,669 --> 00:28:21,720
project when we execute it we tell you

00:28:20,220 --> 00:28:22,919
what the applications in them is and

00:28:21,720 --> 00:28:32,129
it's just caught Michael test in this

00:28:22,919 --> 00:28:34,190
case push that up and I really hope this

00:28:32,129 --> 00:28:34,190
works

00:28:40,170 --> 00:28:44,920
basic

00:28:42,400 --> 00:28:48,220
so seven minutes since our last success

00:28:44,920 --> 00:28:50,080
were 29 minutes into the talk we've

00:28:48,220 --> 00:28:51,730
installed Jenkins with Christa project

00:28:50,080 --> 00:28:54,100
we've built it we've extracted those

00:28:51,730 --> 00:28:57,460
steps into a global library and now

00:28:54,100 --> 00:29:01,170
we're trying to build it again and this

00:28:57,460 --> 00:29:01,170
time we failed what they do wrong

00:29:08,410 --> 00:29:15,250
I think I missed an option when I was

00:29:10,840 --> 00:29:17,410
configuring it and so by default I don't

00:29:15,250 --> 00:29:18,550
think Jenkins will pull in global

00:29:17,410 --> 00:29:23,170
libraries you've got to say this is

00:29:18,550 --> 00:29:27,100
loaded implicitly yep there it is and

00:29:23,170 --> 00:29:29,740
mr. checkbox so in your Jenkins file you

00:29:27,100 --> 00:29:32,940
can say grab this global Adler library I

00:29:29,740 --> 00:29:35,860
grab that local live global library I

00:29:32,940 --> 00:29:42,210
just want it to be pulled in all of the

00:29:35,860 --> 00:29:42,210
time so check that box try again

00:29:46,290 --> 00:29:53,400
they were and this time we can see that

00:29:49,140 --> 00:29:57,080
it was pulled in just here fetching

00:29:53,400 --> 00:29:57,080
extreme changes from Jenkins pipeline

00:29:57,230 --> 00:30:02,910
any run it Klondike odds and the van

00:30:00,480 --> 00:30:05,450
Campos or install that's exactly what we

00:30:02,910 --> 00:30:05,450
told it to do

00:30:11,580 --> 00:30:19,529
now just love our project it's something

00:30:15,539 --> 00:30:24,899
got to things when really we want lots

00:30:19,529 --> 00:30:26,519
of things so we've put in everything

00:30:24,899 --> 00:30:29,190
that we did before we check out we

00:30:26,519 --> 00:30:31,139
compose our install I didn't actually

00:30:29,190 --> 00:30:33,330
create a reusable stage to create the

00:30:31,139 --> 00:30:35,549
environment keys and that's because it's

00:30:33,330 --> 00:30:36,899
very specific to a love our project so

00:30:35,549 --> 00:30:41,340
why not just keep it in that pipeline

00:30:36,899 --> 00:30:44,519
definition then we run PHP unit with an

00:30:41,340 --> 00:30:46,200
X unit we've run coverage and this time

00:30:44,519 --> 00:30:47,970
I'm passing in parameters for what I

00:30:46,200 --> 00:30:50,100
consider a healthy unhealthy and fair

00:30:47,970 --> 00:30:52,109
link nice but my standards have gone up

00:30:50,100 --> 00:30:56,999
I expect 80% for it to be healthy now

00:30:52,109 --> 00:31:00,539
and then we do something different we

00:30:56,999 --> 00:31:04,499
say if we want master and only for our

00:31:00,539 --> 00:31:08,100
master first of all check the echinacea

00:31:04,499 --> 00:31:14,059
we proceed if I can build a dead fowl

00:31:08,100 --> 00:31:18,059
and deploy it now we've got most of

00:31:14,059 --> 00:31:24,590
these steps up until this point I put

00:31:18,059 --> 00:31:28,919
the knot in our global live yet so if we

00:31:24,590 --> 00:31:34,559
go into source we've just got those

00:31:28,919 --> 00:31:38,159
three fortunately here's one that I made

00:31:34,559 --> 00:31:41,789
earlier and now we've got all of those

00:31:38,159 --> 00:31:45,869
steps all implemented and the role what

00:31:41,789 --> 00:31:48,659
we expect if I show you X unit it's just

00:31:45,869 --> 00:31:50,210
what we saw in our Jenkins file the ones

00:31:48,659 --> 00:31:56,159
that you may be interested in or I

00:31:50,210 --> 00:32:00,869
confirm build and deploy because we've

00:31:56,159 --> 00:32:03,330
not seen these steps before Jenkins will

00:32:00,869 --> 00:32:05,519
let you flaunt the user to say do you

00:32:03,330 --> 00:32:07,470
want to deploy this build fable let you

00:32:05,519 --> 00:32:09,809
put on say anything you just say yes I

00:32:07,470 --> 00:32:14,190
know depend on the interface it will say

00:32:09,809 --> 00:32:17,159
yes I know the sea diver boy if we get

00:32:14,190 --> 00:32:20,970
past this we try and build a dev file

00:32:17,159 --> 00:32:23,070
with a tool called fpm we don't actually

00:32:20,970 --> 00:32:24,169
have fpm installed on our Jenkins server

00:32:23,070 --> 00:32:26,519
yet

00:32:24,169 --> 00:32:32,639
so I'm just gonna go ahead and install

00:32:26,519 --> 00:32:35,129
that in the background that will create

00:32:32,639 --> 00:32:37,199
a debian package that we can deploy and

00:32:35,129 --> 00:32:41,849
then finally we're going to run an

00:32:37,199 --> 00:32:43,759
ansible playbook it reads this cure

00:32:41,849 --> 00:32:47,969
financials to get the SSH key to use

00:32:43,759 --> 00:32:49,259
that means that even if you web the

00:32:47,969 --> 00:32:50,999
machines as long as you've got a Jenkins

00:32:49,259 --> 00:32:52,499
backup it can still work it's not

00:32:50,999 --> 00:32:54,749
looking for files on disk it's not

00:32:52,499 --> 00:32:57,749
looking for special privileged SSH keys

00:32:54,749 --> 00:33:00,899
all of the config for your job now lives

00:32:57,749 --> 00:33:08,009
in your code repos and in Jenkins all of

00:33:00,899 --> 00:33:09,059
the credentials everything to do this

00:33:08,009 --> 00:33:11,429
deployment we're also going to need

00:33:09,059 --> 00:33:15,029
ansible which some of you may have seen

00:33:11,429 --> 00:33:17,639
in tazers talk just before it's a

00:33:15,029 --> 00:33:21,569
relatively simple playbook but let's

00:33:17,639 --> 00:33:27,019
just install that in the background as

00:33:21,569 --> 00:33:30,229
we're waiting so these three new steps

00:33:27,019 --> 00:33:30,229
push that up

00:33:34,840 --> 00:33:44,800
get push I'm exerting that to the love

00:33:39,010 --> 00:33:46,510
of our projects definition of actual

00:33:44,800 --> 00:33:48,100
application doesn't change because

00:33:46,510 --> 00:33:50,080
application is still a love of our

00:33:48,100 --> 00:33:51,880
project it just so happened that the

00:33:50,080 --> 00:33:59,320
definition of that projects has changed

00:33:51,880 --> 00:34:04,830
under the hood so if we build it should

00:33:59,320 --> 00:34:04,830
get all the way to proceed or abort

00:34:05,010 --> 00:34:15,180
why not find among this time unable to

00:34:12,070 --> 00:34:15,180
resolve plus phpunit

00:34:22,440 --> 00:34:36,179
so it is case-sensitive and the way it

00:34:31,379 --> 00:34:39,539
works is it uses the the class name the

00:34:36,179 --> 00:34:48,139
file name as the class name so PHP you

00:34:39,539 --> 00:34:51,059
need a groovy new PHP unit of course

00:34:48,139 --> 00:34:57,020
excited git commit Manus am it didn't

00:34:51,059 --> 00:34:59,579
actually add the new fouls on plus side

00:34:57,020 --> 00:35:00,839
you can see that this isn't a video of

00:34:59,579 --> 00:35:03,930
anything like that this is actually

00:35:00,839 --> 00:35:05,099
happening I always feel like the

00:35:03,930 --> 00:35:06,380
mistakes would make it feel a little bit

00:35:05,099 --> 00:35:11,819
more authentic

00:35:06,380 --> 00:35:15,990
so does pushed up to github a most try

00:35:11,819 --> 00:35:18,210
via building hopeful object again and

00:35:15,990 --> 00:35:26,819
this time it should go through check out

00:35:18,210 --> 00:35:28,619
build test X unit coverage and then we

00:35:26,819 --> 00:35:32,520
should get a new plant do you want to

00:35:28,619 --> 00:35:34,020
deploy this build proceed over boys yeah

00:35:32,520 --> 00:35:36,450
apologies at the back it is right at the

00:35:34,020 --> 00:35:39,180
bottom of the screen I'm going to avoid

00:35:36,450 --> 00:35:41,579
this build for one reason and one reason

00:35:39,180 --> 00:35:45,710
only and that's that we don't actually

00:35:41,579 --> 00:35:45,710
have an answer playbook to deploy it yet

00:35:47,809 --> 00:35:52,559
I'm going to show you the app server

00:35:50,640 --> 00:35:57,270
before we get started it's just your

00:35:52,559 --> 00:35:58,440
standard patch to install page I'm not

00:35:57,270 --> 00:36:01,279
going to build the ansible playbook live

00:35:58,440 --> 00:36:06,079
on stage again

00:36:01,279 --> 00:36:12,059
I'm going to take one they did earlier

00:36:06,079 --> 00:36:16,460
and just copy it in and just change the

00:36:12,059 --> 00:36:21,799
IP address with the word deploying to I

00:36:16,460 --> 00:36:21,799
just need to grab that here

00:36:23,660 --> 00:36:33,980
then once again add that folder commit

00:36:31,260 --> 00:36:33,980
and push

00:36:37,970 --> 00:36:43,339
we go back to Jenkins when you're

00:36:42,020 --> 00:36:46,520
building up your Jenkins file and

00:36:43,339 --> 00:36:47,720
testing you will see a lot of red that's

00:36:46,520 --> 00:36:49,339
just the way things are with Jenkins the

00:36:47,720 --> 00:36:51,579
tooling for testing locally isn't quite

00:36:49,339 --> 00:36:51,579
there yet

00:36:52,510 --> 00:36:57,079
but really if you can get going green

00:36:54,920 --> 00:37:01,130
every couple of commits that works

00:36:57,079 --> 00:37:04,490
within the world and do once proceed

00:37:01,130 --> 00:37:08,599
this time I do want to proceed it failed

00:37:04,490 --> 00:37:15,200
so I forgot to install fpm install all

00:37:08,599 --> 00:37:20,569
of its dependencies but not the actual

00:37:15,200 --> 00:37:22,010
gem itself now fpm is a ruby package if

00:37:20,569 --> 00:37:27,160
you've never seen it before it's

00:37:22,010 --> 00:37:27,160
fantastic you can build rpms dead files

00:37:27,640 --> 00:37:33,160
the rest of scare me zip files there's

00:37:31,190 --> 00:37:36,500
got any package that you want to deploy

00:37:33,160 --> 00:37:38,390
fpm can build it if f VMI's are making

00:37:36,500 --> 00:37:41,630
packaging easier for you that's a book

00:37:38,390 --> 00:37:43,369
in fpm that is its mission statement if

00:37:41,630 --> 00:37:48,380
any of you have ever had the pleasure of

00:37:43,369 --> 00:37:51,680
lighting or PM spec files by hand f PM

00:37:48,380 --> 00:37:53,690
is a godsend it's wonderful for those of

00:37:51,680 --> 00:37:59,930
you that haven't had the good fortune to

00:37:53,690 --> 00:38:03,079
write OPM spec files don't you can get

00:37:59,930 --> 00:38:06,170
the PHP ones by Remy : I think that all

00:38:03,079 --> 00:38:09,319
ki spec files about 1700 lines long

00:38:06,170 --> 00:38:13,970
like it's just a mission to get through

00:38:09,319 --> 00:38:15,829
it but fpm takes all of our pain away if

00:38:13,970 --> 00:38:17,390
you've got Michael he'd calm deserve

00:38:15,829 --> 00:38:19,960
there's an intro to f PM though that's

00:38:17,390 --> 00:38:19,960
how much I love it

00:38:23,730 --> 00:38:31,390
was thus installing I'm just gonna show

00:38:27,790 --> 00:38:34,750
you a blue ocean blue ocean was actually

00:38:31,390 --> 00:38:38,410
designed unlike the rest of Jenkins but

00:38:34,750 --> 00:38:39,700
I mean it has UI people people in no way

00:38:38,410 --> 00:38:43,870
looks like the ocean looks quite nice

00:38:39,700 --> 00:38:45,370
you can click in to a project you can

00:38:43,870 --> 00:38:49,000
see everything you see the latest commit

00:38:45,370 --> 00:38:52,000
message you can click in you can see

00:38:49,000 --> 00:38:53,140
each stage so it's the worst day just

00:38:52,000 --> 00:38:54,610
come in so instead of just that wall

00:38:53,140 --> 00:38:57,420
with text that you see in the normal log

00:38:54,610 --> 00:39:01,410
you can see what happened for check out

00:38:57,420 --> 00:39:06,310
what happened for build creating of keys

00:39:01,410 --> 00:39:09,550
we confirmed employees but it failed

00:39:06,310 --> 00:39:14,290
when building dead file because fpm was

00:39:09,550 --> 00:39:16,410
installed fpm is now installed so I'm

00:39:14,290 --> 00:39:22,240
just gonna leave this button here to

00:39:16,410 --> 00:39:26,050
kick off the build again waiting for the

00:39:22,240 --> 00:39:31,060
van to start gets picked up and it

00:39:26,050 --> 00:39:32,980
actually looks quite nice blue ocean we

00:39:31,060 --> 00:39:34,210
get this nice big deploy this build but

00:39:32,980 --> 00:39:42,070
instead of just that a little bit on the

00:39:34,210 --> 00:39:48,550
text this time its packaging build

00:39:42,070 --> 00:39:51,970
failed or failed that time this time the

00:39:48,550 --> 00:39:53,800
deploy failed see this is what the

00:39:51,970 --> 00:39:58,180
washing falls down it's very pretty but

00:39:53,800 --> 00:40:00,430
it's not entirely functional I don't

00:39:58,180 --> 00:40:03,870
know what it is about the original UI I

00:40:00,430 --> 00:40:03,870
always find myself using this

00:40:07,080 --> 00:40:13,790
ah yes so it's tried to deploy using the

00:40:10,230 --> 00:40:13,790
SSH key that I haven't put in there yet

00:40:14,630 --> 00:40:19,100
that is the last thing so we installed

00:40:17,430 --> 00:40:24,200
the credentials management login earlier

00:40:19,100 --> 00:40:32,190
so we can go in we can add a credential

00:40:24,200 --> 00:40:36,420
this is a secret file I'm just going to

00:40:32,190 --> 00:40:43,080
upload my SSH key this is my actual SSH

00:40:36,420 --> 00:40:45,930
key demo1 and the ID is important here

00:40:43,080 --> 00:40:48,210
so I've called the SSH - key and the

00:40:45,930 --> 00:40:49,680
reason I've called it that is because

00:40:48,210 --> 00:40:52,500
that's what I've used in my pipeline

00:40:49,680 --> 00:41:01,170
definition that off a bill that can show

00:40:52,500 --> 00:41:04,650
you that so just here credentials ID SSH

00:41:01,170 --> 00:41:07,940
key that has to match exactly otherwise

00:41:04,650 --> 00:41:07,940
Jenkins won't be able to find it

00:41:11,130 --> 00:41:22,680
yep I want to deploy this man Jenkins it

00:41:21,150 --> 00:41:24,930
builds everyone's ansible

00:41:22,680 --> 00:41:26,670
and this time it's actually running it's

00:41:24,930 --> 00:41:29,279
found a dead fowl that I built

00:41:26,670 --> 00:41:34,109
it's deploying it so there's no one the

00:41:29,279 --> 00:41:37,380
remote server it's installing it it's

00:41:34,109 --> 00:41:39,690
taking a little while to install and

00:41:37,380 --> 00:41:44,280
it's done and if we go back to this and

00:41:39,690 --> 00:41:48,819
we refresh we get Louisville up

00:41:44,280 --> 00:41:48,819

YouTube URL: https://www.youtube.com/watch?v=kuBD3p20oyE


