Title: Learning The Hows and Whys of Machine Learning - Liam Wiltshire - PHP UK Conference 2019
Publication date: 2019-03-22
Playlist: PHP UK Conference 2019
Description: 
	Since it's founding, Tebex has processed over 18 million payments for games servers around the world. This is a rich data source, and one that we've significantly under-used. We know there should be ways of using this data to improve our product and to make our merchant's lives easier - how and where to start, now that's a totally different question! Join Liam as he shares Tebex's initial experiences in experimenting with machine learning to use past data to prevent fraud in the future - different algorithms we've tried, (many) failed experiments, the situation today and plans for the future.
Captions: 
	00:00:03,529 --> 00:00:08,460
data is a funny little thing isn't it I

00:00:06,240 --> 00:00:10,950
mean we have data everywhere you know on

00:00:08,460 --> 00:00:12,420
a minute-by-minute and basis we arrive

00:00:10,950 --> 00:00:14,730
there gathering data with the

00:00:12,420 --> 00:00:16,350
applications that we build or you know

00:00:14,730 --> 00:00:19,619
even the people we talk to data doesn't

00:00:16,350 --> 00:00:21,539
have to be on a hard disk and you know

00:00:19,619 --> 00:00:23,340
we're generating data even by being sat

00:00:21,539 --> 00:00:25,230
here you probably have a smartphone

00:00:23,340 --> 00:00:27,900
Google probably knows exactly where you

00:00:25,230 --> 00:00:31,140
are a little bit scary

00:00:27,900 --> 00:00:37,920
and we do see a lot of examples of data

00:00:31,140 --> 00:00:40,399
being used badly hi Facebook but I think

00:00:37,920 --> 00:00:42,570
you know machine learning is a very

00:00:40,399 --> 00:00:44,460
important topic at the moment so topic

00:00:42,570 --> 00:00:46,170
that you know I've seen lots more

00:00:44,460 --> 00:00:48,450
torques kind of coming up in the past

00:00:46,170 --> 00:00:50,460
few years and lots of people attending

00:00:48,450 --> 00:00:52,230
such talks and I think that's because

00:00:50,460 --> 00:00:54,840
there is this interest in you know we

00:00:52,230 --> 00:00:58,949
have this data we know it can be used

00:00:54,840 --> 00:01:01,879
for evil font of a better term can it

00:00:58,949 --> 00:01:05,250
also be used yet responsibly and forget

00:01:01,879 --> 00:01:08,189
in Tibet's is example that's about being

00:01:05,250 --> 00:01:10,860
able to protect players and protect

00:01:08,189 --> 00:01:12,450
server owners before I go on any further

00:01:10,860 --> 00:01:14,670
I just want to say very quickly thanks

00:01:12,450 --> 00:01:17,939
to the organizers I think this is my

00:01:14,670 --> 00:01:19,680
fifth year at PHP UK and Joe and Sam and

00:01:17,939 --> 00:01:21,299
the rest of the team every year do a

00:01:19,680 --> 00:01:24,090
really good job

00:01:21,299 --> 00:01:25,380
the staff here you know a great in you

00:01:24,090 --> 00:01:26,850
know they've done this now a number of

00:01:25,380 --> 00:01:28,740
times and it works really well every

00:01:26,850 --> 00:01:31,950
year so you know personally I'd like to

00:01:28,740 --> 00:01:33,810
say thanks to them and you know I I ask

00:01:31,950 --> 00:01:35,340
you if you get two minutes and you speak

00:01:33,810 --> 00:01:37,710
to sound we speak to Joe on the other

00:01:35,340 --> 00:01:39,210
organizers or volunteers just just say

00:01:37,710 --> 00:01:42,990
thanks because it makes a huge

00:01:39,210 --> 00:01:46,229
difference so Who am I my name's Liam

00:01:42,990 --> 00:01:50,280
Alger and I'm the CTO for a small

00:01:46,229 --> 00:01:52,049
company called TEDx now you if you run

00:01:50,280 --> 00:01:54,000
servers for like minecraft or stuff you

00:01:52,049 --> 00:01:56,009
might have heard of us if not you

00:01:54,000 --> 00:01:59,070
probably haven't but we provide a

00:01:56,009 --> 00:02:03,990
monetization platform for community

00:01:59,070 --> 00:02:07,829
hosted servers on games such as those so

00:02:03,990 --> 00:02:09,179
being a monetization platform which is

00:02:07,829 --> 00:02:12,810
basically a fancy way of saying in

00:02:09,179 --> 00:02:15,540
payment processor we have

00:02:12,810 --> 00:02:17,490
an issue with chargebacks you know

00:02:15,540 --> 00:02:18,870
anyone in the e-commerce industry anyone

00:02:17,490 --> 00:02:21,540
that deals with money that deals with

00:02:18,870 --> 00:02:25,319
processing payments this is always this

00:02:21,540 --> 00:02:27,890
there's always this issue so Braintree

00:02:25,319 --> 00:02:31,730
they're not a big fan of our merchants

00:02:27,890 --> 00:02:34,620
stripe don't exactly like us either I

00:02:31,730 --> 00:02:36,360
will say at this point throughout this

00:02:34,620 --> 00:02:38,880
talk I will use the word charge back I'm

00:02:36,360 --> 00:02:42,209
not necessarily talking about credit

00:02:38,880 --> 00:02:44,269
card section five charge backs I could

00:02:42,209 --> 00:02:47,580
also be talking about PayPal disputes or

00:02:44,269 --> 00:02:49,950
mechanisms on on other gateways other

00:02:47,580 --> 00:02:52,080
payment platforms it's that process of

00:02:49,950 --> 00:02:53,880
saying I didn't approve this charge I

00:02:52,080 --> 00:02:57,870
want it back you know I'm using

00:02:53,880 --> 00:02:59,700
chargebacks as a collective term you

00:02:57,870 --> 00:03:01,650
know I'm saying that charge backs are

00:02:59,700 --> 00:03:03,720
bad I'm saying that stripe and Braintree

00:03:01,650 --> 00:03:05,160
aren't on our best friends but yeah

00:03:03,720 --> 00:03:07,550
we're not talking about loads of charge

00:03:05,160 --> 00:03:11,750
that's right I mean it's no big deal

00:03:07,550 --> 00:03:14,760
nor point half-a-percent it's not bad

00:03:11,750 --> 00:03:17,910
yeah that's not us that's clothing and

00:03:14,760 --> 00:03:18,959
apparel so things like misguided things

00:03:17,910 --> 00:03:20,910
like you know the online fashion

00:03:18,959 --> 00:03:23,130
retailers they experience about a half

00:03:20,910 --> 00:03:25,709
percent charge back rate on on purchases

00:03:23,130 --> 00:03:27,329
so it's okay yeah okay it'd be half

00:03:25,709 --> 00:03:31,530
percent would be nice it's not too much

00:03:27,329 --> 00:03:33,720
but not 0.56% yeah no that's Meador any

00:03:31,530 --> 00:03:36,000
Content this one scares me a little

00:03:33,720 --> 00:03:37,739
because major Andy content includes you

00:03:36,000 --> 00:03:40,230
know this thing so it's like get rich in

00:03:37,739 --> 00:03:42,150
seven days by buying this ebook whoo and

00:03:40,230 --> 00:03:43,530
you think the charge backs will high on

00:03:42,150 --> 00:03:45,750
that but actually they fall into this

00:03:43,530 --> 00:03:48,930
category in this ya know point five six

00:03:45,750 --> 00:03:50,700
per sentence not too bad so now we're

00:03:48,930 --> 00:03:51,690
leaving the null point fives behind not

00:03:50,700 --> 00:03:55,640
0.65%

00:03:51,690 --> 00:03:58,200
so again it's not too bad it still knows

00:03:55,640 --> 00:04:00,540
this is fine now this one I find amusing

00:03:58,200 --> 00:04:02,040
financial services so people who are

00:04:00,540 --> 00:04:04,049
like buying financial advice or

00:04:02,040 --> 00:04:07,410
investment advice or whatever else and

00:04:04,049 --> 00:04:08,970
then charging back it's like you know

00:04:07,410 --> 00:04:11,910
that they work in the finance industry

00:04:08,970 --> 00:04:13,859
right they're gonna win but that's fine

00:04:11,910 --> 00:04:15,930
so now so it's not half a percent it's

00:04:13,859 --> 00:04:18,269
not nor point six five percent actually

00:04:15,930 --> 00:04:19,859
across our network our treasure

00:04:18,269 --> 00:04:22,470
rate is about nought point eight five

00:04:19,859 --> 00:04:24,840
percent it's not the end of the world

00:04:22,470 --> 00:04:25,830
because like as long as you're below

00:04:24,840 --> 00:04:28,409
about a 1%

00:04:25,830 --> 00:04:30,930
hold you're kind of okay you get above

00:04:28,409 --> 00:04:32,789
1% people start asking questions but you

00:04:30,930 --> 00:04:35,539
know we're okay but we are still for

00:04:32,789 --> 00:04:39,840
2018 for example talking about nearly

00:04:35,539 --> 00:04:41,129
24,000 payments so you know what if

00:04:39,840 --> 00:04:44,909
there's something that we can do about

00:04:41,129 --> 00:04:46,560
this that would be good now the the kind

00:04:44,909 --> 00:04:47,819
of thing that people often think is well

00:04:46,560 --> 00:04:50,099
if people are charging back surely

00:04:47,819 --> 00:04:51,449
you're you know our merchants that the

00:04:50,099 --> 00:04:53,879
people that use our platform to sell

00:04:51,449 --> 00:04:57,210
must be doing something wrong and that's

00:04:53,879 --> 00:05:00,659
kind of logical but it's not always the

00:04:57,210 --> 00:05:02,879
case so this is a definition of a charge

00:05:00,659 --> 00:05:04,979
back from which friend who doesn't know

00:05:02,879 --> 00:05:07,379
which is a consumer association based

00:05:04,979 --> 00:05:09,569
here in the UK and they say that a

00:05:07,379 --> 00:05:12,690
charge back should be used in cases of

00:05:09,569 --> 00:05:15,000
goods not arriving at all goods that are

00:05:12,690 --> 00:05:16,949
damaged goods that are different from

00:05:15,000 --> 00:05:19,860
the description or where the merchant

00:05:16,949 --> 00:05:21,539
has ceased trading so that's that's a

00:05:19,860 --> 00:05:23,490
pretty clear definition right yeah we

00:05:21,539 --> 00:05:25,529
can say from there quite clearly we know

00:05:23,490 --> 00:05:29,779
that there are kind of four particular

00:05:25,529 --> 00:05:33,419
cases where a charge backs it would be a

00:05:29,779 --> 00:05:35,039
relevant course of action so in our

00:05:33,419 --> 00:05:40,379
experience is this how charge backs are

00:05:35,039 --> 00:05:42,120
used no we see plenty of examples of

00:05:40,379 --> 00:05:45,240
players who will charge back just

00:05:42,120 --> 00:05:47,250
because they want to admit it to us one

00:05:45,240 --> 00:05:50,069
of the things that we currently do is if

00:05:47,250 --> 00:05:51,569
a player charges back we don't share

00:05:50,069 --> 00:05:53,039
that data we don't say the specific

00:05:51,569 --> 00:05:54,960
number charge backs but other web stores

00:05:53,039 --> 00:05:56,879
across the network can say well I don't

00:05:54,960 --> 00:06:00,089
want to deal with players who have a

00:05:56,879 --> 00:06:02,219
charge rate rating of above 10% for

00:06:00,089 --> 00:06:03,569
example we will never tell them oh this

00:06:02,219 --> 00:06:05,490
player has this judgment rating we just

00:06:03,569 --> 00:06:07,259
won't like that person purchase silently

00:06:05,490 --> 00:06:08,460
so the stores don't know we're not

00:06:07,259 --> 00:06:10,500
showing the data or anything like that

00:06:08,460 --> 00:06:11,610
but we are kind of an in that protection

00:06:10,500 --> 00:06:12,870
but then we'll have players that will

00:06:11,610 --> 00:06:14,819
come to us and go oh well I know I

00:06:12,870 --> 00:06:17,430
charged back but I got bored of playing

00:06:14,819 --> 00:06:19,830
on that server that's not a reason to

00:06:17,430 --> 00:06:21,810
charge back that's ridiculous or they'll

00:06:19,830 --> 00:06:23,729
go well you know I bought this thing and

00:06:21,810 --> 00:06:26,250
then they banned me and so why did why

00:06:23,729 --> 00:06:28,080
did they ban you well I was cheating but

00:06:26,250 --> 00:06:29,759
so they banned you and then you've

00:06:28,080 --> 00:06:32,790
charged back because they banned you

00:06:29,759 --> 00:06:34,800
because you were cheating this doesn't

00:06:32,790 --> 00:06:36,630
and sometimes they don't actually just

00:06:34,800 --> 00:06:38,520
to attack another player because you

00:06:36,630 --> 00:06:41,100
know a lot of our stores will allow you

00:06:38,520 --> 00:06:42,540
to buy foot of the players so I can go

00:06:41,100 --> 00:06:44,670
well actually I've got a good friend

00:06:42,540 --> 00:06:46,200
online I want to buy him this rank I

00:06:44,670 --> 00:06:48,120
want to buy him this this sword or

00:06:46,200 --> 00:06:49,980
whatever else and I can buy it for him

00:06:48,120 --> 00:06:52,500
and he receives a sword and I pay for it

00:06:49,980 --> 00:06:54,600
in his great but then those some players

00:06:52,500 --> 00:06:56,520
will buy something for someone else then

00:06:54,600 --> 00:06:59,220
charge it back just to get them in

00:06:56,520 --> 00:07:01,080
trouble it's a bit ridiculous and

00:06:59,220 --> 00:07:02,880
clearly these these things aren't the

00:07:01,080 --> 00:07:04,740
server owners fault and a lot and

00:07:02,880 --> 00:07:06,300
sometimes these things aren't even the

00:07:04,740 --> 00:07:07,940
player who's getting punished its fault

00:07:06,300 --> 00:07:10,470
it's someone else that's causing it so

00:07:07,940 --> 00:07:12,420
you know we want to see what we can do

00:07:10,470 --> 00:07:15,270
to protect the server owners and to

00:07:12,420 --> 00:07:19,100
protect those honest players so we set

00:07:15,270 --> 00:07:22,980
ourselves a bit of a challenge we have a

00:07:19,100 --> 00:07:25,530
lot of data something like 18 million

00:07:22,980 --> 00:07:27,150
payment records last time I checked so

00:07:25,530 --> 00:07:30,330
we want to try and help our server

00:07:27,150 --> 00:07:33,930
owners as much as possible you know if

00:07:30,330 --> 00:07:35,850
we can use our existing data to try and

00:07:33,930 --> 00:07:38,310
predict if a given payment is likely

00:07:35,850 --> 00:07:41,790
likely to be charged back in the future

00:07:38,310 --> 00:07:43,440
if we can avoid false positives as much

00:07:41,790 --> 00:07:44,880
as possible because ultimately if you

00:07:43,440 --> 00:07:46,640
got lots of false positives no not trust

00:07:44,880 --> 00:07:49,140
the system and it's a waste of time and

00:07:46,640 --> 00:07:51,210
it would be nice if we can also provide

00:07:49,140 --> 00:07:53,850
feedback as to why we flagged a

00:07:51,210 --> 00:07:56,460
particular payment for review then

00:07:53,850 --> 00:07:58,530
that's going to make our platform a

00:07:56,460 --> 00:08:00,660
better platform it's going to make our

00:07:58,530 --> 00:08:02,300
merchants happier and it'll actually

00:08:00,660 --> 00:08:08,040
protect the players as well

00:08:02,300 --> 00:08:10,590
how can it be as I mentioned I have been

00:08:08,040 --> 00:08:12,900
to some machine learning talks before so

00:08:10,590 --> 00:08:16,470
when we started bounding this idea

00:08:12,900 --> 00:08:19,020
around at work I went I must be able to

00:08:16,470 --> 00:08:21,660
remember something and anything leads me

00:08:19,020 --> 00:08:22,980
like my brains not that useless well it

00:08:21,660 --> 00:08:26,280
is but that's a story for another day

00:08:22,980 --> 00:08:29,670
and from somewhere from the depth of my

00:08:26,280 --> 00:08:33,210
memory two words cropped up supervised

00:08:29,670 --> 00:08:35,280
learning now it sounds great that those

00:08:33,210 --> 00:08:37,919
words cropped up I could not remember

00:08:35,280 --> 00:08:41,820
what they meant at all so what did I do

00:08:37,919 --> 00:08:43,200
I googled it of course it turns out that

00:08:41,820 --> 00:08:43,890
actually supervised learning was exactly

00:08:43,200 --> 00:08:46,080
what we wanted

00:08:43,890 --> 00:08:48,990
sounds like look at me I looks

00:08:46,080 --> 00:08:51,420
I was awesome because supervised

00:08:48,990 --> 00:08:54,029
learning basically involves you know

00:08:51,420 --> 00:08:56,339
giving a learning function a set of

00:08:54,029 --> 00:08:58,560
training data with known answers so in

00:08:56,339 --> 00:09:01,170
our instance we have payment data and we

00:08:58,560 --> 00:09:03,899
know for historical payment data whether

00:09:01,170 --> 00:09:05,370
it was charged back or whether it wasn't

00:09:03,899 --> 00:09:07,500
whether it's a good payment or whether

00:09:05,370 --> 00:09:10,829
it's a bad payment we have that we for

00:09:07,500 --> 00:09:12,810
that set of data we know the answer and

00:09:10,829 --> 00:09:14,579
then you give your learning function

00:09:12,810 --> 00:09:16,680
that data with those answers and then

00:09:14,579 --> 00:09:19,589
it'll analyze that data and then it will

00:09:16,680 --> 00:09:21,779
use that data to provide answers for

00:09:19,589 --> 00:09:23,579
previously unseen data next time

00:09:21,779 --> 00:09:24,810
so you've trained it with these known

00:09:23,579 --> 00:09:27,180
things and you say right we have this

00:09:24,810 --> 00:09:28,829
new piece of data we don't know what the

00:09:27,180 --> 00:09:31,470
answer is can you give us an answer

00:09:28,829 --> 00:09:34,829
please the opposite supervised learning

00:09:31,470 --> 00:09:36,810
is well unsupervised learning kind of

00:09:34,829 --> 00:09:38,279
makes sense and that's a little bit

00:09:36,810 --> 00:09:40,800
different in that you don't have answers

00:09:38,279 --> 00:09:42,750
you give it data and then you say dear

00:09:40,800 --> 00:09:44,430
mr. learning function can you kind of

00:09:42,750 --> 00:09:45,839
sort this mess out for us and tell us

00:09:44,430 --> 00:09:47,760
how this stuff should be groups because

00:09:45,839 --> 00:09:50,010
we don't know but because we know the

00:09:47,760 --> 00:09:51,540
answers we don't need to do that which I

00:09:50,010 --> 00:09:55,950
then read and made our lives a lot

00:09:51,540 --> 00:09:58,050
easier when we're talking about

00:09:55,950 --> 00:10:00,380
supervised learning we're normally

00:09:58,050 --> 00:10:03,899
trying to solve one of two problems

00:10:00,380 --> 00:10:06,779
it's either classification so that means

00:10:03,899 --> 00:10:09,810
you're trying to give something a label

00:10:06,779 --> 00:10:12,660
so for example is this thing an apple or

00:10:09,810 --> 00:10:13,700
an orange is this tumor malignant or

00:10:12,660 --> 00:10:18,180
benign

00:10:13,700 --> 00:10:20,250
hopefully it's benign the other question

00:10:18,180 --> 00:10:22,680
you could be trying to answer is what we

00:10:20,250 --> 00:10:25,950
call regression so that's when you say

00:10:22,680 --> 00:10:28,110
right given this this this data this

00:10:25,950 --> 00:10:30,209
this data set where along a line would

00:10:28,110 --> 00:10:33,720
it fit so a good example of that is if

00:10:30,209 --> 00:10:35,610
I've got data for 50 houses I have the

00:10:33,720 --> 00:10:37,050
number of bedrooms the floor space the

00:10:35,610 --> 00:10:38,820
number of bathrooms the number of that

00:10:37,050 --> 00:10:41,370
the amount of outside space and the

00:10:38,820 --> 00:10:43,230
price I can plot those and then when I

00:10:41,370 --> 00:10:45,149
get a new property that I don't have a

00:10:43,230 --> 00:10:47,519
price for I can say right given that

00:10:45,149 --> 00:10:49,680
this property has four bedrooms this

00:10:47,519 --> 00:10:51,660
amount of floor space two bathrooms this

00:10:49,680 --> 00:10:53,970
amount of outside space what price

00:10:51,660 --> 00:10:55,470
should it be and it will use the data it

00:10:53,970 --> 00:10:56,850
already has to kind of work down the

00:10:55,470 --> 00:10:59,939
line and be like oh well it will go

00:10:56,850 --> 00:11:05,579
there so it should be 150 thousand pound

00:10:59,939 --> 00:11:07,709
if you don't live in London so you know

00:11:05,579 --> 00:11:09,029
because we just wanted to say is it this

00:11:07,709 --> 00:11:10,399
thing or is it that thing we quite have

00:11:09,029 --> 00:11:13,169
you know clearly wants to look at

00:11:10,399 --> 00:11:15,509
classification so that's not good so we

00:11:13,169 --> 00:11:17,429
know we're doing classification we know

00:11:15,509 --> 00:11:20,009
that we're doing supervised learning so

00:11:17,429 --> 00:11:24,629
now it's just the simple job of finding

00:11:20,009 --> 00:11:27,269
an algorithm simple honest there are

00:11:24,629 --> 00:11:30,529
lots of potential algorithms for machine

00:11:27,269 --> 00:11:32,369
learning and there are lots of

00:11:30,529 --> 00:11:35,429
algorithms for classification in

00:11:32,369 --> 00:11:37,019
particular as a complete aside if you

00:11:35,429 --> 00:11:39,989
don't recognize that these styles of

00:11:37,019 --> 00:11:41,239
comics this is from xkcd they're

00:11:39,989 --> 00:11:43,319
hilarious that well worth checking out

00:11:41,239 --> 00:11:46,529
you'll finally I use them a lot in my

00:11:43,319 --> 00:11:48,239
talks one of the things that we did say

00:11:46,529 --> 00:11:52,289
for ourselves a kind of rule that we set

00:11:48,239 --> 00:11:56,099
is we are not data scientists I failed

00:11:52,289 --> 00:11:59,159
math at school I I don't have a clue so

00:11:56,099 --> 00:12:00,929
I'm a software engineer I want to use

00:11:59,159 --> 00:12:05,549
something that's simple enough that even

00:12:00,929 --> 00:12:08,220
a like me can understand it so we

00:12:05,549 --> 00:12:10,139
wait we literally googled simple machine

00:12:08,220 --> 00:12:12,899
learning classification algorithm and

00:12:10,139 --> 00:12:15,749
came up with the name Bayes classifier

00:12:12,899 --> 00:12:17,689
if you do kind only research this is the

00:12:15,749 --> 00:12:20,909
one that will normally come up first

00:12:17,689 --> 00:12:24,119
it's the one that's fairly

00:12:20,909 --> 00:12:26,459
straightforward it's based around

00:12:24,119 --> 00:12:30,149
categorizing text so it's used a lot in

00:12:26,459 --> 00:12:33,629
things like spam filters or language

00:12:30,149 --> 00:12:36,149
detection things like that and so that's

00:12:33,629 --> 00:12:38,309
what we started effectively what it does

00:12:36,149 --> 00:12:42,539
is it says write given this block of

00:12:38,309 --> 00:12:45,179
text the probability is it belongs in X

00:12:42,539 --> 00:12:48,959
category or the probability is it

00:12:45,179 --> 00:12:52,019
belongs in Y category it's a fairly

00:12:48,959 --> 00:12:53,519
simple algorithm you take in your block

00:12:52,019 --> 00:12:57,209
of text you split it into individual

00:12:53,519 --> 00:12:59,519
words you standardize the words where

00:12:57,209 --> 00:13:02,309
possible so that might be removing

00:12:59,519 --> 00:13:04,379
plurals that might be in if it's in a

00:13:02,309 --> 00:13:06,720
language say French where adjectives the

00:13:04,379 --> 00:13:08,999
ending changes based on the gender of

00:13:06,720 --> 00:13:12,209
the subject you might standardize those

00:13:08,999 --> 00:13:13,970
that sort of thing and then you

00:13:12,209 --> 00:13:16,040
literally look through every

00:13:13,970 --> 00:13:18,380
you loop through every single category

00:13:16,040 --> 00:13:20,480
of test data and you work out the

00:13:18,380 --> 00:13:22,820
percentage of times that word appears in

00:13:20,480 --> 00:13:26,630
each category so the word balloon for

00:13:22,820 --> 00:13:29,510
example might appear 60 percent at the

00:13:26,630 --> 00:13:31,850
time in English in in the English

00:13:29,510 --> 00:13:33,290
category in our test data and 40 percent

00:13:31,850 --> 00:13:34,220
at the time in the French one because it

00:13:33,290 --> 00:13:39,710
means ball

00:13:34,220 --> 00:13:41,300
thanks for confusing things and then you

00:13:39,710 --> 00:13:43,520
go through every single word you then

00:13:41,300 --> 00:13:45,260
give each one a percentage you then say

00:13:43,520 --> 00:13:47,540
right for each category what is the

00:13:45,260 --> 00:13:49,310
average probability based on all the

00:13:47,540 --> 00:13:51,530
words we've been through and then you go

00:13:49,310 --> 00:13:53,360
right okay so on balance of probability

00:13:51,530 --> 00:13:55,070
this block of text is likely to be

00:13:53,360 --> 00:13:59,200
French or it's likely to be English or

00:13:55,070 --> 00:14:01,550
whatever the result might be 100 percent

00:13:59,200 --> 00:14:02,660
that's not how effective it is I wish it

00:14:01,550 --> 00:14:05,930
was because this would be a really short

00:14:02,660 --> 00:14:07,580
talk no 100% is the percentage of

00:14:05,930 --> 00:14:10,910
previous talks where I haven't done a

00:14:07,580 --> 00:14:12,560
demo now I do not do live demos in fact

00:14:10,910 --> 00:14:13,910
whenever someone does a live demo and

00:14:12,560 --> 00:14:16,070
then maybe speakers in the room couldn't

00:14:13,910 --> 00:14:18,440
the contest of it I dropped you I goat

00:14:16,070 --> 00:14:22,670
something go why would you do a live

00:14:18,440 --> 00:14:25,780
demo I don't get it yes what live demo

00:14:22,670 --> 00:14:28,430
time this could be horrendous

00:14:25,780 --> 00:14:32,450
so that's raining that's good good stuff

00:14:28,430 --> 00:14:33,620
so this is a fairly simple language

00:14:32,450 --> 00:14:36,770
predictor let's try make that a little

00:14:33,620 --> 00:14:39,500
bit bigger shall we there we go

00:14:36,770 --> 00:14:41,780
so at the moment this is just a simple

00:14:39,500 --> 00:14:43,340
naive Bayes classifier there is no

00:14:41,780 --> 00:14:44,720
training data at the moment

00:14:43,340 --> 00:14:47,150
hence the facts I've given this this

00:14:44,720 --> 00:14:48,800
piece of text in French I'm not even

00:14:47,150 --> 00:14:50,960
gonna try and mangle it but it doesn't

00:14:48,800 --> 00:14:54,650
know what languages each time I tell it

00:14:50,960 --> 00:14:56,780
what the language is it will then add

00:14:54,650 --> 00:14:58,460
that to its training data so for this

00:14:56,780 --> 00:15:02,120
first one I'm going to say is French so

00:14:58,460 --> 00:15:05,660
type F for French that one is German so

00:15:02,120 --> 00:15:05,990
I'll type D for Dutch this one is

00:15:05,660 --> 00:15:08,570
English

00:15:05,990 --> 00:15:11,330
this is E and English again and

00:15:08,570 --> 00:15:13,550
hopefully in a minute there we are it's

00:15:11,330 --> 00:15:15,410
come up and this one granted we've

00:15:13,550 --> 00:15:17,420
already trained this one exactly it's

00:15:15,410 --> 00:15:18,950
fine because it's literally those words

00:15:17,420 --> 00:15:20,660
and they've now been in training data

00:15:18,950 --> 00:15:22,820
and it's gone okay I recognize those

00:15:20,660 --> 00:15:24,380
words the probability is that these

00:15:22,820 --> 00:15:26,120
words going to be in a piece of text

00:15:24,380 --> 00:15:26,990
that is English and we'll say yes that's

00:15:26,120 --> 00:15:28,370
correct

00:15:26,990 --> 00:15:29,750
so this is one we haven't done don't

00:15:28,370 --> 00:15:31,520
throw good money after bad again some of

00:15:29,750 --> 00:15:33,200
those words have been in the other data

00:15:31,520 --> 00:15:36,470
that we've used to train it so it's now

00:15:33,200 --> 00:15:40,250
gone oh this is English teeth that's

00:15:36,470 --> 00:15:42,589
English and this one is French it

00:15:40,250 --> 00:15:43,790
doesn't know that one and so what I Q

00:15:42,589 --> 00:15:45,500
key command and it's recognized that

00:15:43,790 --> 00:15:47,120
when this French again so as you give it

00:15:45,500 --> 00:15:47,750
more training data it will become more

00:15:47,120 --> 00:15:50,330
accurate

00:15:47,750 --> 00:15:51,950
that's the naive Bayes classifier in a

00:15:50,330 --> 00:15:57,920
nutshell thank you and good night

00:15:51,950 --> 00:15:59,750
no not so much good night that's all

00:15:57,920 --> 00:16:01,220
well and good that worked that was a

00:15:59,750 --> 00:16:03,560
very quick demo that we hacked together

00:16:01,220 --> 00:16:06,170
the went oh this makes sense

00:16:03,560 --> 00:16:09,770
awesome it's all very well and good

00:16:06,170 --> 00:16:13,010
being able to classify text but what if

00:16:09,770 --> 00:16:15,290
we're not dealing with text what if

00:16:13,010 --> 00:16:16,760
we're dealing with with numbers

00:16:15,290 --> 00:16:19,190
well actually it's quite straightforward

00:16:16,760 --> 00:16:21,640
if you in that pseudocode that I said

00:16:19,190 --> 00:16:25,339
earlier if you replace the word words

00:16:21,640 --> 00:16:27,290
with tokens you're doing the same thing

00:16:25,339 --> 00:16:29,089
but now a token can represent anything

00:16:27,290 --> 00:16:31,430
right I mean we use tokens in PHP so

00:16:29,089 --> 00:16:33,200
everything everything we write PHP is

00:16:31,430 --> 00:16:34,520
turned into tokens and they represent

00:16:33,200 --> 00:16:37,430
certain things and they do operations on

00:16:34,520 --> 00:16:41,720
the stack and everything's great

00:16:37,430 --> 00:16:44,120
so this is it's the same thing so here's

00:16:41,720 --> 00:16:45,920
an example for describing fruit okay

00:16:44,120 --> 00:16:48,620
fine let's assume that you know red and

00:16:45,920 --> 00:16:50,420
round and see a and green and Crescent

00:16:48,620 --> 00:16:52,400
are words anyway so you could just leave

00:16:50,420 --> 00:16:54,380
those as words but let's assume in our

00:16:52,400 --> 00:16:57,980
database of our test data we just have a

00:16:54,380 --> 00:16:59,839
binary column for seed on stone we

00:16:57,980 --> 00:17:01,130
couldn't just say 1 or 0 because it

00:16:59,839 --> 00:17:04,910
wouldn't actually know what it related

00:17:01,130 --> 00:17:06,500
to it wouldn't know that in Apple the

00:17:04,910 --> 00:17:08,150
one related to it having a seed and

00:17:06,500 --> 00:17:09,829
there's a related it not having a stone

00:17:08,150 --> 00:17:12,679
it would just say oh well there's a 1

00:17:09,829 --> 00:17:14,569
and there's a 0 it there was no context

00:17:12,679 --> 00:17:17,630
but by prefixing them with a little bit

00:17:14,569 --> 00:17:20,569
of you know color red shape round seed

00:17:17,630 --> 00:17:22,130
one stone 0 we're saying that it's red

00:17:20,569 --> 00:17:25,309
it's round it has a seed and it doesn't

00:17:22,130 --> 00:17:27,770
have a stone now we can use that we can

00:17:25,309 --> 00:17:31,940
stick that into an algorithm and it will

00:17:27,770 --> 00:17:37,360
understand the context effectively so

00:17:31,940 --> 00:17:40,500
that's what we did we took all our data

00:17:37,360 --> 00:17:42,540
that we wanted to use and we base

00:17:40,500 --> 00:17:44,880
be prefixed it with each thing with

00:17:42,540 --> 00:17:47,610
something so each token was unique so

00:17:44,880 --> 00:17:49,770
even if the same number came up twice in

00:17:47,610 --> 00:17:51,930
two different contexts or the same word

00:17:49,770 --> 00:17:54,390
let's say we happen to have a gateway

00:17:51,930 --> 00:17:57,180
that was called USD and the currency

00:17:54,390 --> 00:17:58,560
called USD if it's just said USD you

00:17:57,180 --> 00:18:00,180
wouldn't know what it'll NT but by

00:17:58,560 --> 00:18:03,710
turning into a token with some form of

00:18:00,180 --> 00:18:06,780
prefix now they have separate context

00:18:03,710 --> 00:18:08,220
there is actually within a pit a library

00:18:06,780 --> 00:18:09,270
called PHP ml which we'll come on to in

00:18:08,220 --> 00:18:11,760
a little bit there is actually a

00:18:09,270 --> 00:18:14,250
tokenizer function there's a really good

00:18:11,760 --> 00:18:18,690
reason we didn't use it we didn't know

00:18:14,250 --> 00:18:20,280
it existed something that's interesting

00:18:18,690 --> 00:18:21,900
on this particular line you'll notice

00:18:20,280 --> 00:18:25,140
there's a token called sig fig

00:18:21,900 --> 00:18:27,540
significant figure there's a reason for

00:18:25,140 --> 00:18:28,920
this we googled something and we read it

00:18:27,540 --> 00:18:31,800
and they said it was a good idea so we

00:18:28,920 --> 00:18:34,170
did it there's a thing slightly more Dee

00:18:31,800 --> 00:18:36,260
says a thing called Benford's law which

00:18:34,170 --> 00:18:39,000
suggests that in financial transactions

00:18:36,260 --> 00:18:41,940
certain significant figures should

00:18:39,000 --> 00:18:43,440
happen more frequently than others I

00:18:41,940 --> 00:18:45,270
couldn't tell you which ones because I

00:18:43,440 --> 00:18:47,130
can't remember but it was something that

00:18:45,270 --> 00:18:49,440
they said you know there was this this

00:18:47,130 --> 00:18:50,880
big paper that we wrote we read and we

00:18:49,440 --> 00:18:52,110
understood like half fail like that

00:18:50,880 --> 00:18:53,130
sounds good let's put it in see what

00:18:52,110 --> 00:18:57,540
happens

00:18:53,130 --> 00:18:59,490
experiment notice here how also we have

00:18:57,540 --> 00:19:01,620
on the first line we have country and

00:18:59,490 --> 00:19:03,030
Gateway as to individual tokens and then

00:19:01,620 --> 00:19:06,240
on this third line we have a token

00:19:03,030 --> 00:19:09,360
called country gateway now that's

00:19:06,240 --> 00:19:12,420
because that in the naive Bayes

00:19:09,360 --> 00:19:14,520
classifier the naive part relates to how

00:19:12,420 --> 00:19:18,030
there is no assumed relation between the

00:19:14,520 --> 00:19:20,730
individual tokens so there's not there's

00:19:18,030 --> 00:19:22,470
no sense of because this is a 1 if this

00:19:20,730 --> 00:19:26,130
is something else it should be seen as

00:19:22,470 --> 00:19:27,660
odd or or not everything every word or

00:19:26,130 --> 00:19:30,150
every token is taken in complete

00:19:27,660 --> 00:19:33,060
isolation obviously in our dataset that

00:19:30,150 --> 00:19:35,550
might not be the case a gateway for

00:19:33,060 --> 00:19:39,240
example such as ideal is used a lot in

00:19:35,550 --> 00:19:42,120
mainland Europe isn't used at all in

00:19:39,240 --> 00:19:44,250
China for example so if someone who was

00:19:42,120 --> 00:19:45,720
from China was using ideal we'd be like

00:19:44,250 --> 00:19:47,940
ok perhaps we need to put a question

00:19:45,720 --> 00:19:49,530
mark on that whereas you know having

00:19:47,940 --> 00:19:52,170
them as to individual tokens there would

00:19:49,530 --> 00:19:54,270
be nothing to say that it's odd or not

00:19:52,170 --> 00:19:56,670
you know whatever

00:19:54,270 --> 00:20:00,840
so we added that as a as a combined

00:19:56,670 --> 00:20:03,960
token and then we run a test so for most

00:20:00,840 --> 00:20:06,390
of the test that we did we used our 2018

00:20:03,960 --> 00:20:09,840
data as our training data and then we

00:20:06,390 --> 00:20:11,970
picked records at random from 2017 to

00:20:09,840 --> 00:20:15,059
test against so in this instance we took

00:20:11,970 --> 00:20:17,280
a hundred records of known good payments

00:20:15,059 --> 00:20:19,110
from 2017 and one hundred rows that we

00:20:17,280 --> 00:20:21,990
know were charged back from 2017

00:20:19,110 --> 00:20:23,610
two hundred raised so far so good there

00:20:21,990 --> 00:20:24,929
are no false positives it's not looks at

00:20:23,610 --> 00:20:26,730
any of those payment records that were

00:20:24,929 --> 00:20:27,210
good and actually gone I think this is a

00:20:26,730 --> 00:20:29,130
chargeback

00:20:27,210 --> 00:20:30,780
and bear in mind our one of our main aim

00:20:29,130 --> 00:20:31,410
was to avoid false positives that's

00:20:30,780 --> 00:20:35,360
really good

00:20:31,410 --> 00:20:38,250
it didn't identify any fraud either I

00:20:35,360 --> 00:20:40,020
yeah this this went well so what it's

00:20:38,250 --> 00:20:41,190
saying there is every single record even

00:20:40,020 --> 00:20:41,760
those hundred ones that we know are

00:20:41,190 --> 00:20:46,650
chargebacks

00:20:41,760 --> 00:20:48,990
it thinks were all fine yeah I wasn't a

00:20:46,650 --> 00:20:53,190
good turnout one I went home slightly

00:20:48,990 --> 00:20:54,960
sad moral of the story don't base

00:20:53,190 --> 00:21:00,690
everything you try and do on one Google

00:20:54,960 --> 00:21:02,100
search do at least two so we didn't

00:21:00,690 --> 00:21:05,250
really know what the problem was to

00:21:02,100 --> 00:21:08,460
start with because we've done one Google

00:21:05,250 --> 00:21:10,550
search we had to do some further

00:21:08,460 --> 00:21:14,940
research and we learnt our first

00:21:10,550 --> 00:21:18,179
important lesson imbalance data is the

00:21:14,940 --> 00:21:21,179
enemy many machine learning algorithms

00:21:18,179 --> 00:21:23,700
not all I will caveat but many are

00:21:21,179 --> 00:21:27,000
sensitive sensitive to an imbalance of

00:21:23,700 --> 00:21:29,370
data if one category has just more data

00:21:27,000 --> 00:21:32,340
in general than others there will be a

00:21:29,370 --> 00:21:34,830
natural bias towards that category in

00:21:32,340 --> 00:21:38,940
our instance we have 2.8 million good

00:21:34,830 --> 00:21:44,730
payments and about 24,000 chargebacks no

00:21:38,940 --> 00:21:46,440
little bit imbalanced tiny tiny bit and

00:21:44,730 --> 00:21:48,120
and it kind of doesn't make sense when

00:21:46,440 --> 00:21:49,890
you think about it again if you think of

00:21:48,120 --> 00:21:52,350
the word less bliss think about fruit

00:21:49,890 --> 00:21:55,679
for a second some apples are red and

00:21:52,350 --> 00:21:59,370
some apples are green most cherries are

00:21:55,679 --> 00:22:02,070
red yeah so far we agreed that statement

00:21:59,370 --> 00:22:06,150
if however you have a training set of

00:22:02,070 --> 00:22:07,429
training data with 50,000 apples and 500

00:22:06,150 --> 00:22:09,349
cherries

00:22:07,429 --> 00:22:14,719
according to your training day so the

00:22:09,349 --> 00:22:16,700
word red is many many times more likely

00:22:14,719 --> 00:22:19,009
I can't I told you I suck at math many

00:22:16,700 --> 00:22:20,539
many times more likely to appear as an

00:22:19,009 --> 00:22:22,549
apple than a cherry even though actually

00:22:20,539 --> 00:22:24,679
if something's red it's probably only a

00:22:22,549 --> 00:22:26,419
50% chance it's an apple and probably

00:22:24,679 --> 00:22:28,159
more likely it's a cherry but because

00:22:26,419 --> 00:22:33,049
our data is imbalanced it will never

00:22:28,159 --> 00:22:35,629
come to that conclusion right so you

00:22:33,049 --> 00:22:37,580
know in all odds way our first algorithm

00:22:35,629 --> 00:22:39,469
was actually really accurate I mean I

00:22:37,580 --> 00:22:41,629
mean technically it was over 99%

00:22:39,469 --> 00:22:43,309
accurate or it would have over an entire

00:22:41,629 --> 00:22:45,409
set training if we gave it all our

00:22:43,309 --> 00:22:47,749
payment data it would correctly identify

00:22:45,409 --> 00:22:50,509
over 99% of them because over 99% our

00:22:47,749 --> 00:22:54,259
good payments completely useless but

00:22:50,509 --> 00:22:57,580
accurate so you have to kind of come and

00:22:54,259 --> 00:23:01,429
what come up with ways of fixing this

00:22:57,580 --> 00:23:04,429
there are some solutions the I guess the

00:23:01,429 --> 00:23:06,019
the obvious one is collect more data now

00:23:04,429 --> 00:23:07,399
that's not really going to work for us

00:23:06,019 --> 00:23:09,379
because we can't exactly email people

00:23:07,399 --> 00:23:12,649
and be like hey players start charging

00:23:09,379 --> 00:23:15,320
back now no I I would be out of a job if

00:23:12,649 --> 00:23:17,330
I did that so we can't really do that

00:23:15,320 --> 00:23:21,169
that's not gonna work you could look at

00:23:17,330 --> 00:23:22,940
changing your metrics so as I mentioned

00:23:21,169 --> 00:23:24,679
the the classifier that we're using is

00:23:22,940 --> 00:23:26,869
based on probability okay it says

00:23:24,679 --> 00:23:29,119
there's a probability of it being one

00:23:26,869 --> 00:23:30,919
category or the other so what we could

00:23:29,119 --> 00:23:32,929
actually do is is lower our threshold

00:23:30,919 --> 00:23:34,759
and say well okay even if the highest

00:23:32,929 --> 00:23:38,419
probability is it's a good payment if

00:23:34,759 --> 00:23:40,869
it's over 35% likely to be in the fraud

00:23:38,419 --> 00:23:44,269
category perhaps we flag all of those

00:23:40,869 --> 00:23:45,710
that might be a way of doing it all the

00:23:44,269 --> 00:23:48,469
other option is to resample your data

00:23:45,710 --> 00:23:51,099
now that that has kind of two subsets so

00:23:48,469 --> 00:23:54,019
you can either under sample the

00:23:51,099 --> 00:23:55,849
over-represented data so in our instance

00:23:54,019 --> 00:23:57,200
we could just pick one percent of all

00:23:55,849 --> 00:24:00,889
our payments and put that into our

00:23:57,200 --> 00:24:02,599
training data or you can over sample the

00:24:00,889 --> 00:24:04,460
underrepresented categories in other

00:24:02,599 --> 00:24:06,979
words you change the weighting so you

00:24:04,460 --> 00:24:10,009
make you make one vote in the fraud

00:24:06,979 --> 00:24:11,889
category worth 99 times as much as a

00:24:10,009 --> 00:24:16,429
vote in the num for test grade or

00:24:11,889 --> 00:24:18,379
whatever and so you kind of balance out

00:24:16,429 --> 00:24:19,579
that way so you end up with a the same

00:24:18,379 --> 00:24:21,270
amount of data even though some of the

00:24:19,579 --> 00:24:23,040
day records will be replicated in

00:24:21,270 --> 00:24:26,220
one you end up with the same number of

00:24:23,040 --> 00:24:27,570
Records so there's an even waiting as I

00:24:26,220 --> 00:24:29,280
said we can't realistically collect more

00:24:27,570 --> 00:24:31,530
data we can't ask people to start

00:24:29,280 --> 00:24:36,150
creating more chargebacks be pretty

00:24:31,530 --> 00:24:38,070
stupid so we mixed resampling and we can

00:24:36,150 --> 00:24:40,530
change our metric we up sampled the

00:24:38,070 --> 00:24:42,630
fraud records to generate more data and

00:24:40,530 --> 00:24:45,840
then we've done down sampled the okay

00:24:42,630 --> 00:24:47,340
records we then also just returned the

00:24:45,840 --> 00:24:49,440
probability the throat of the fraud

00:24:47,340 --> 00:24:51,660
label regardless of what it was just to

00:24:49,440 --> 00:24:54,270
see if there was any kind of any patent

00:24:51,660 --> 00:24:58,800
and then we ran another test so again we

00:24:54,270 --> 00:25:01,230
pour 200 records 100 of each now we've

00:24:58,800 --> 00:25:05,280
started moving the needle okay it's not

00:25:01,230 --> 00:25:08,700
all 0 0 100 it's you know we've got you

00:25:05,280 --> 00:25:11,040
know obviously absolute bollocks excuse

00:25:08,700 --> 00:25:13,080
my language but you know we've got it

00:25:11,040 --> 00:25:15,120
done something it's you know that's

00:25:13,080 --> 00:25:17,070
that's the that's the definition of

00:25:15,120 --> 00:25:18,560
progress right it's broken differently

00:25:17,070 --> 00:25:21,450
to last time

00:25:18,560 --> 00:25:22,530
yeah the accuracy is like 50% it's

00:25:21,450 --> 00:25:25,500
terrible

00:25:22,530 --> 00:25:27,320
we looked at the fraud probability thing

00:25:25,500 --> 00:25:29,970
but given that we're already flagging

00:25:27,320 --> 00:25:32,130
71% false positives we were like this is

00:25:29,970 --> 00:25:34,560
a waste of time we kind of gave up on

00:25:32,130 --> 00:25:37,770
that quite quickly so how many it was

00:25:34,560 --> 00:25:38,850
quite frustrating ok we we was sure

00:25:37,770 --> 00:25:40,820
there must have been something that we

00:25:38,850 --> 00:25:44,820
were missing we have no idea what it was

00:25:40,820 --> 00:25:46,890
but it's got me something right so we

00:25:44,820 --> 00:25:50,180
did play with the algorithm a little bit

00:25:46,890 --> 00:25:52,740
more and we weren't getting anywhere so

00:25:50,180 --> 00:25:54,420
after we did a bit more googling because

00:25:52,740 --> 00:25:56,910
yeah everyone googles everything right

00:25:54,420 --> 00:25:59,850
we started to question the approach that

00:25:56,910 --> 00:26:04,050
we were taking and we realized that we

00:25:59,850 --> 00:26:05,370
needed to understand our data better you

00:26:04,050 --> 00:26:07,620
know there were a number of flaws in

00:26:05,370 --> 00:26:08,760
this initial approach we had kind of

00:26:07,620 --> 00:26:10,860
recognized that there were different

00:26:08,760 --> 00:26:13,470
tokens we knew that there might be some

00:26:10,860 --> 00:26:16,170
relations but perhaps that relation was

00:26:13,470 --> 00:26:20,730
more important than we had expected so

00:26:16,170 --> 00:26:22,830
for example if someone pays $30 for a

00:26:20,730 --> 00:26:24,750
purchase and they're based in Germany

00:26:22,830 --> 00:26:27,210
where the average purchase price is

00:26:24,750 --> 00:26:29,700
about $25 anyway that's not that

00:26:27,210 --> 00:26:32,010
suspicious yes that's kind of within the

00:26:29,700 --> 00:26:34,080
realms of possibility in Argentina

00:26:32,010 --> 00:26:34,890
however the average purchase price is

00:26:34,080 --> 00:26:36,840
about $8

00:26:34,890 --> 00:26:38,490
so I'm making a $30.00 purchase there

00:26:36,840 --> 00:26:41,400
which is over three times more than the

00:26:38,490 --> 00:26:42,780
average you start to go should we be

00:26:41,400 --> 00:26:44,790
looking at that does that need to be

00:26:42,780 --> 00:26:46,740
looked more closely likewise because

00:26:44,790 --> 00:26:49,049
high value purchases are more or more

00:26:46,740 --> 00:26:50,610
common in certain places if a low value

00:26:49,049 --> 00:26:52,380
purchase came from one of those perhaps

00:26:50,610 --> 00:26:53,520
we need to look at that as well you know

00:26:52,380 --> 00:26:54,809
we don't know whether these are the

00:26:53,520 --> 00:26:57,929
right answers but these are the sorts of

00:26:54,809 --> 00:27:01,080
things that you have to start asking and

00:26:57,929 --> 00:27:03,480
do we need to consider context so what I

00:27:01,080 --> 00:27:05,400
mean by that is if there's a store where

00:27:03,480 --> 00:27:08,250
the average item across the store is

00:27:05,400 --> 00:27:09,900
three dollars a thirty five dollar

00:27:08,250 --> 00:27:11,210
purchase would look a little bit odd

00:27:09,900 --> 00:27:14,220
because you'd have had to have bought

00:27:11,210 --> 00:27:17,190
probably 11 or 12 different items to get

00:27:14,220 --> 00:27:19,590
to $35 but if there's a a store that

00:27:17,190 --> 00:27:23,070
actually sounds a ranked that is $35

00:27:19,590 --> 00:27:25,980
then a $35 purchase would be much more

00:27:23,070 --> 00:27:27,600
expected okay and the other thing that

00:27:25,980 --> 00:27:31,260
we started thinking was what about price

00:27:27,600 --> 00:27:34,230
so in the the algorithm we're using

00:27:31,260 --> 00:27:36,840
before because it's treated as a word

00:27:34,230 --> 00:27:39,179
there's no ideas no sense of scale or a

00:27:36,840 --> 00:27:42,390
continuous measure you know a price that

00:27:39,179 --> 00:27:43,890
is 5 euros is different from a price

00:27:42,390 --> 00:27:45,330
that is 5 euros and 10 cents

00:27:43,890 --> 00:27:46,500
even though that we know that actually

00:27:45,330 --> 00:27:49,470
the difference between the two is

00:27:46,500 --> 00:27:53,130
negligible but in that algorithm there's

00:27:49,470 --> 00:27:54,210
two wholly separate entities so perhaps

00:27:53,130 --> 00:27:56,700
we need to look at something that

00:27:54,210 --> 00:27:59,970
supports continuous data as well as

00:27:56,700 --> 00:28:03,299
discrete data so we started looking for

00:27:59,970 --> 00:28:04,559
a new algorithm it wasn't working for us

00:28:03,299 --> 00:28:06,480
we still didn't want to think too

00:28:04,559 --> 00:28:07,890
complex our rule still was that we

00:28:06,480 --> 00:28:09,929
wanted to be able to understand it we

00:28:07,890 --> 00:28:12,000
didn't want just to find some fancy

00:28:09,929 --> 00:28:13,919
algorithm punch some data in and it work

00:28:12,000 --> 00:28:16,350
and those have no idea why because

00:28:13,919 --> 00:28:17,730
that's the worst thing you can do if you

00:28:16,350 --> 00:28:19,919
don't understand why something works at

00:28:17,730 --> 00:28:21,390
least to a degree then if you get

00:28:19,919 --> 00:28:23,520
problems you're really going to struggle

00:28:21,390 --> 00:28:24,630
to understand why it hasn't worked if

00:28:23,520 --> 00:28:27,450
you didn't understand why it works in

00:28:24,630 --> 00:28:30,720
the first place we're still looking at

00:28:27,450 --> 00:28:32,490
supervised learning obviously so after

00:28:30,720 --> 00:28:34,410
we did a bit more research we came

00:28:32,490 --> 00:28:34,799
across an algorithm called K nearest

00:28:34,410 --> 00:28:37,860
neighbors

00:28:34,799 --> 00:28:40,799
now K and n is is fairly straightforward

00:28:37,860 --> 00:28:44,190
to understand basically it means which K

00:28:40,799 --> 00:28:47,100
and K is a number other results are most

00:28:44,190 --> 00:28:48,900
similar to this one so I have this this

00:28:47,100 --> 00:28:50,730
this lump of data

00:28:48,900 --> 00:28:53,670
which ones that are in our training data

00:28:50,730 --> 00:28:56,130
does this most closely aligned with it

00:28:53,670 --> 00:28:57,630
met a lot of our criteria because it's

00:28:56,130 --> 00:29:01,200
based on distance is it can handle

00:28:57,630 --> 00:29:03,870
continuous data and because it's based

00:29:01,200 --> 00:29:05,309
on distances there is a level of

00:29:03,870 --> 00:29:08,760
association between the different data

00:29:05,309 --> 00:29:10,890
points if a data point is further out it

00:29:08,760 --> 00:29:12,090
makes the whole distance longer so there

00:29:10,890 --> 00:29:13,770
is that relation but if they're all

00:29:12,090 --> 00:29:16,800
closely packed that the overall average

00:29:13,770 --> 00:29:18,690
distance is shorter it's not a causal

00:29:16,800 --> 00:29:21,360
relationship it's not saying if this

00:29:18,690 --> 00:29:22,650
value is X then this must be why but

00:29:21,360 --> 00:29:24,809
it's saying if this value is X and this

00:29:22,650 --> 00:29:27,300
value is why it's it's going to stretch

00:29:24,809 --> 00:29:28,260
that just the average distance much more

00:29:27,300 --> 00:29:31,230
than it would do with it with an

00:29:28,260 --> 00:29:33,420
expected value as a side benefit it is

00:29:31,230 --> 00:29:35,100
less sensitive to a day to imbalance

00:29:33,420 --> 00:29:37,770
because it's looking at the note local

00:29:35,100 --> 00:29:40,110
neighborhood but if there's a large

00:29:37,770 --> 00:29:45,510
later imbalance there is still an issue

00:29:40,110 --> 00:29:48,140
there now the easiest way to explain K&N

00:29:45,510 --> 00:29:50,100
is with the graph will like graphs

00:29:48,140 --> 00:29:52,020
hopefully it can be seen on the monitors

00:29:50,100 --> 00:29:54,510
I will explain it so we basically got -

00:29:52,020 --> 00:29:57,840
this represents our training data we

00:29:54,510 --> 00:30:00,720
have a cluster of blue squares which is

00:29:57,840 --> 00:30:04,320
set a and then we have a cluster of

00:30:00,720 --> 00:30:07,320
white circles which are our set V so if

00:30:04,320 --> 00:30:10,790
we were to add another point which is

00:30:07,320 --> 00:30:14,370
represented with a magenta

00:30:10,790 --> 00:30:16,980
triangle we now are asking the question

00:30:14,370 --> 00:30:18,809
which category does this most low

00:30:16,980 --> 00:30:20,250
closely aligned with does it most

00:30:18,809 --> 00:30:22,320
closely aligned with the white circles

00:30:20,250 --> 00:30:23,700
or the blue squares if we were saying

00:30:22,320 --> 00:30:26,130
right we're looking we're setting our

00:30:23,700 --> 00:30:27,870
value of K to 1 so we're looking for the

00:30:26,130 --> 00:30:29,910
nearest neighbor and that's it then the

00:30:27,870 --> 00:30:35,130
nearest neighbor will be that white

00:30:29,910 --> 00:30:37,320
circle right there if we said 2 and n so

00:30:35,130 --> 00:30:41,370
K is now 2 which are the two closest

00:30:37,320 --> 00:30:42,720
neighbors there's now - incidentally

00:30:41,370 --> 00:30:44,880
this is a good example why we tend to

00:30:42,720 --> 00:30:45,809
avoid using even numbers for K because

00:30:44,880 --> 00:30:47,490
then you have to have something with

00:30:45,809 --> 00:30:49,620
tiebreaker rule because at the moment is

00:30:47,490 --> 00:30:50,820
to draw it one person says I've at I say

00:30:49,620 --> 00:30:53,309
it's white the other one says I say it's

00:30:50,820 --> 00:30:55,950
blue and you don't know you know flip a

00:30:53,309 --> 00:30:57,420
coin toss or not I know so you either

00:30:55,950 --> 00:30:59,820
have to have a tiebreaker or just much

00:30:57,420 --> 00:31:01,530
more easily just use odd numbers much

00:30:59,820 --> 00:31:02,700
straight more straightforward so we're

00:31:01,530 --> 00:31:05,879
gonna use an odd number gonna say 3

00:31:02,700 --> 00:31:08,549
okay so we now we have three is 3n n k

00:31:05,879 --> 00:31:10,019
s3 and the the first closest was that

00:31:08,549 --> 00:31:12,419
white circle then a blue square then

00:31:10,019 --> 00:31:14,879
another white circle so based on that

00:31:12,419 --> 00:31:17,239
which category is it most low close

00:31:14,879 --> 00:31:21,029
aligned to the white circles

00:31:17,239 --> 00:31:22,950
okay nn in a nutshell this example

00:31:21,029 --> 00:31:25,169
obviously works on two axes or two

00:31:22,950 --> 00:31:28,259
dimensions mainly because it works on a

00:31:25,169 --> 00:31:30,840
graph but actually the caelian algorithm

00:31:28,259 --> 00:31:33,239
can work on more or less any number of

00:31:30,840 --> 00:31:35,309
dimensions it doesn't matter

00:31:33,239 --> 00:31:36,840
there isn't any pseudocode to explain

00:31:35,309 --> 00:31:40,470
this one for good reason I don't

00:31:36,840 --> 00:31:42,539
understand it that well so we're going

00:31:40,470 --> 00:31:43,859
to look at an example here thankfully as

00:31:42,539 --> 00:31:49,039
I mentioned before there is a machine

00:31:43,859 --> 00:31:50,369
learning library for PHP it's called PHP

00:31:49,039 --> 00:31:52,919
MySQL

00:31:50,369 --> 00:31:55,379
they do loads of cool stuff around a io

00:31:52,919 --> 00:31:57,499
machine learning and and implementations

00:31:55,379 --> 00:32:00,029
of algorithms so that you don't have to

00:31:57,499 --> 00:32:02,100
this is a fairly straightforward example

00:32:00,029 --> 00:32:05,039
so we've set up some training data we've

00:32:02,100 --> 00:32:06,570
got four that are labeled a and for the

00:32:05,039 --> 00:32:06,989
till eight would be and we're saying

00:32:06,570 --> 00:32:09,269
right

00:32:06,989 --> 00:32:10,649
the the four A's have these four they're

00:32:09,269 --> 00:32:12,749
basically like grid coordinates but on

00:32:10,649 --> 00:32:14,309
four dimensions four sets of values

00:32:12,749 --> 00:32:15,869
there's eight values and sample set in

00:32:14,309 --> 00:32:18,119
array we're going to train it with those

00:32:15,869 --> 00:32:20,070
samples and labels and then if we give

00:32:18,119 --> 00:32:22,259
it some test data so this is a new set

00:32:20,070 --> 00:32:25,859
of coordinates and say right which

00:32:22,259 --> 00:32:28,230
category does that belong in and that

00:32:25,859 --> 00:32:29,190
that's that's you know because the the

00:32:28,230 --> 00:32:30,659
library does all the heavy lifting

00:32:29,190 --> 00:32:32,629
underneath that's all you have to do

00:32:30,659 --> 00:32:36,179
it's awesome

00:32:32,629 --> 00:32:38,460
what more statistic yeah I still don't

00:32:36,179 --> 00:32:40,799
like live demos not not a fan of live

00:32:38,460 --> 00:32:46,039
demos no definitely not doing another

00:32:40,799 --> 00:32:46,039
one here we go

00:32:48,260 --> 00:32:52,250
so here we go so this is literally the

00:32:50,510 --> 00:32:54,110
the implantation you just saw it's

00:32:52,250 --> 00:32:56,840
exactly the same set of training data I

00:32:54,110 --> 00:32:59,950
can now just give it four coordinates so

00:32:56,840 --> 00:33:06,020
let's go with I know two three five one

00:32:59,950 --> 00:33:09,520
and it says it's a if I do five two one

00:33:06,020 --> 00:33:13,340
one hopefully it'll say it's B and so on

00:33:09,520 --> 00:33:14,840
that's it simple if I was giving some

00:33:13,340 --> 00:33:16,760
completely random I mean who knows let's

00:33:14,840 --> 00:33:18,919
just try it shall we three four five two

00:33:16,760 --> 00:33:22,040
one it's an a I don't know why but it

00:33:18,919 --> 00:33:26,750
apparently is and this in itself is an

00:33:22,040 --> 00:33:29,380
important point that you should try

00:33:26,750 --> 00:33:31,490
things out with predictable data first

00:33:29,380 --> 00:33:32,660
you know if you're using data that you

00:33:31,490 --> 00:33:34,400
don't fully know and we don't know I

00:33:32,660 --> 00:33:35,720
mean we had like I said we have eighteen

00:33:34,400 --> 00:33:38,809
nineteen million payment records I don't

00:33:35,720 --> 00:33:40,880
know what the data try out on something

00:33:38,809 --> 00:33:42,320
where you can predict the output to make

00:33:40,880 --> 00:33:43,669
sure that your implantation works even

00:33:42,320 --> 00:33:45,950
if you're using a third-party library

00:33:43,669 --> 00:33:47,360
give it a goes nice and simple so you

00:33:45,950 --> 00:33:49,669
can go okay yeah I kind of get that this

00:33:47,360 --> 00:33:52,280
works so if I'm now more confident to

00:33:49,669 --> 00:33:56,000
plug in my narrator in you might have

00:33:52,280 --> 00:34:00,110
spotted something in that demo about the

00:33:56,000 --> 00:34:03,049
data samples they're all numeric which

00:34:00,110 --> 00:34:05,299
is another important lesson but can an

00:34:03,049 --> 00:34:08,629
algorithm because it's based on distance

00:34:05,299 --> 00:34:11,270
likes numbers kind of make sense I mean

00:34:08,629 --> 00:34:13,310
you can't really measure the distance

00:34:11,270 --> 00:34:15,590
between the word ham and the word

00:34:13,310 --> 00:34:16,820
cheeseburger I mean yes you you

00:34:15,590 --> 00:34:18,919
obviously you can work out the number of

00:34:16,820 --> 00:34:21,530
counter changes and that is a distance

00:34:18,919 --> 00:34:22,820
of sorts but that wouldn't be wouldn't

00:34:21,530 --> 00:34:28,010
make any sense what we're doing we're

00:34:22,820 --> 00:34:29,659
not looking for typos so you you have to

00:34:28,010 --> 00:34:32,629
kind of go right well actually our data

00:34:29,659 --> 00:34:36,619
recently Marik so we now need to find a

00:34:32,629 --> 00:34:38,030
way of making it so first of all we

00:34:36,619 --> 00:34:41,359
thought oh that well this is fine you

00:34:38,030 --> 00:34:44,840
know we're a our database is fairly well

00:34:41,359 --> 00:34:46,820
designed most of the time and so things

00:34:44,840 --> 00:34:48,980
are normalized we have IDs for this sort

00:34:46,820 --> 00:34:51,619
of thing right so we have a country ID

00:34:48,980 --> 00:34:53,600
and we have a currency ID but that

00:34:51,619 --> 00:34:56,270
doesn't necessarily work because you're

00:34:53,600 --> 00:34:58,130
measuring distance you're therefore

00:34:56,270 --> 00:35:00,140
implying that the distance between

00:34:58,130 --> 00:35:01,280
country ID one for example and country

00:35:00,140 --> 00:35:02,930
ID two

00:35:01,280 --> 00:35:06,110
is less than the distance between

00:35:02,930 --> 00:35:08,690
country ID for the country I D 50 so for

00:35:06,110 --> 00:35:10,760
example in our database the distance

00:35:08,690 --> 00:35:12,590
between Australia and Austria would be

00:35:10,760 --> 00:35:14,750
one because it's stored alphabetically

00:35:12,590 --> 00:35:16,610
so the idea is only one different but

00:35:14,750 --> 00:35:18,500
the distance between Australia and New

00:35:16,610 --> 00:35:22,460
Zealand which geographically are much

00:35:18,500 --> 00:35:26,150
closer than those two is 160 so that

00:35:22,460 --> 00:35:28,750
that's that's not gonna work this is

00:35:26,150 --> 00:35:33,350
gonna skew the results a little bit okay

00:35:28,750 --> 00:35:35,540
now sometimes this isn't a problem if

00:35:33,350 --> 00:35:37,630
you've got data that is kind of

00:35:35,540 --> 00:35:40,160
sequential it might have names or words

00:35:37,630 --> 00:35:42,320
but it's it's nominal data that is

00:35:40,160 --> 00:35:45,080
sequential like grades at school you

00:35:42,320 --> 00:35:48,620
know that ABCDE whatever you can

00:35:45,080 --> 00:35:51,290
substitute a value or in this example of

00:35:48,620 --> 00:35:53,360
really old-fashioned company with like

00:35:51,290 --> 00:35:56,720
really really structured career

00:35:53,360 --> 00:35:58,070
progression people anyway but you know

00:35:56,720 --> 00:35:59,330
let's say you've got interns and then

00:35:58,070 --> 00:36:00,410
you've got no management employees and

00:35:59,330 --> 00:36:01,640
you got line managers and you've got to

00:36:00,410 --> 00:36:03,860
park managers and you got any executives

00:36:01,640 --> 00:36:05,330
you can you have to estimate you don't

00:36:03,860 --> 00:36:07,400
there isn't a fixed number but you can

00:36:05,330 --> 00:36:08,810
say well within our organization we

00:36:07,400 --> 00:36:11,240
think the gap between each one of those

00:36:08,810 --> 00:36:12,680
is however much an executive would

00:36:11,240 --> 00:36:14,270
probably say they should be scored a

00:36:12,680 --> 00:36:18,170
hundred or something but yeah whatever

00:36:14,270 --> 00:36:19,640
do listens to those guys so that that's

00:36:18,170 --> 00:36:23,210
not too bad and if you got school grades

00:36:19,640 --> 00:36:26,870
like I said you an ABCD efg whatever you

00:36:23,210 --> 00:36:29,720
you can assign numeric values to them if

00:36:26,870 --> 00:36:30,920
you've got non sequential data it's not

00:36:29,720 --> 00:36:33,770
quite so straightforward

00:36:30,920 --> 00:36:35,120
so for countries for example we thought

00:36:33,770 --> 00:36:36,440
about what could we use latitude and

00:36:35,120 --> 00:36:38,690
longitude because they're coordinates

00:36:36,440 --> 00:36:40,040
anyway but then where'd you get it from

00:36:38,690 --> 00:36:42,950
do you take it from the centre of the

00:36:40,040 --> 00:36:44,180
country because actually if you took at

00:36:42,950 --> 00:36:46,490
the centre of the country for example

00:36:44,180 --> 00:36:48,800
the gap between the centre of the USA in

00:36:46,490 --> 00:36:51,860
the centre of Canada would be quite

00:36:48,800 --> 00:36:54,560
large much bigger than say the UK to

00:36:51,860 --> 00:36:56,300
Germany but actually someone could be

00:36:54,560 --> 00:36:58,370
either side of the border at Niagara

00:36:56,300 --> 00:37:00,170
Falls and the distance they've traveled

00:36:58,370 --> 00:37:01,670
is negligible and they could just pick

00:37:00,170 --> 00:37:04,100
up a different Wi-Fi network or

00:37:01,670 --> 00:37:06,650
something so that doesn't really work

00:37:04,100 --> 00:37:08,510
and that wouldn't really work things

00:37:06,650 --> 00:37:10,100
like currencies when you know how'd you

00:37:08,510 --> 00:37:12,170
score currencies did you do it by order

00:37:10,100 --> 00:37:13,430
of popularity but what if the popularity

00:37:12,170 --> 00:37:14,550
changes you then can't change those

00:37:13,430 --> 00:37:16,860
numbers

00:37:14,550 --> 00:37:18,660
or what about payment gateways again at

00:37:16,860 --> 00:37:21,390
the moment PayPal is the most popular

00:37:18,660 --> 00:37:22,860
but what if PayPal wasn't myself anymore

00:37:21,390 --> 00:37:24,870
you can't swap those values around and

00:37:22,860 --> 00:37:28,860
that change you're still implying an

00:37:24,870 --> 00:37:31,350
implicit bias so the simplest solution

00:37:28,860 --> 00:37:35,670
that we found ie someone taught us on

00:37:31,350 --> 00:37:37,950
Google is to make everything binary now

00:37:35,670 --> 00:37:40,860
this makes things you know everything is

00:37:37,950 --> 00:37:44,220
a yes or no and on or off or non zero

00:37:40,860 --> 00:37:46,770
question so rather than saying what is

00:37:44,220 --> 00:37:48,960
the country you're now asking a series

00:37:46,770 --> 00:37:51,780
of questions is the country the US is

00:37:48,960 --> 00:37:53,790
the country Great Britain is the country

00:37:51,780 --> 00:37:56,970
France is the country Germany and so on

00:37:53,790 --> 00:37:59,490
and so on and so on it does result in a

00:37:56,970 --> 00:38:02,010
large number of dimensions obviously

00:37:59,490 --> 00:38:04,080
which can have its own issues there are

00:38:02,010 --> 00:38:05,730
potentially issues if you've got large

00:38:04,080 --> 00:38:08,700
numbers of dimensions that are

00:38:05,730 --> 00:38:10,080
equidistantly spaced it can make some

00:38:08,700 --> 00:38:11,520
weird things happen the dimensions that

00:38:10,080 --> 00:38:15,600
the distances that I totally don't

00:38:11,520 --> 00:38:19,140
understand but yeah we'll cross that

00:38:15,600 --> 00:38:20,160
bridge if we get to it obviously if

00:38:19,140 --> 00:38:21,780
there's also dimensions you wouldn't

00:38:20,160 --> 00:38:24,270
want to generate this data by hand that

00:38:21,780 --> 00:38:25,560
would be a really bad idea and the other

00:38:24,270 --> 00:38:29,940
thing you need to be careful of is

00:38:25,560 --> 00:38:31,950
normalizing the data because if you

00:38:29,940 --> 00:38:33,450
don't normalize the data then your

00:38:31,950 --> 00:38:35,220
scales can be all sorts of out if you

00:38:33,450 --> 00:38:37,800
imagine just again a two-dimensional

00:38:35,220 --> 00:38:41,220
graph if you've got length and is red

00:38:37,800 --> 00:38:43,440
okay so something that is red and is ten

00:38:41,220 --> 00:38:45,420
centimeters long and something that is

00:38:43,440 --> 00:38:48,090
red and is 20 centimeters long has a

00:38:45,420 --> 00:38:50,130
distance of ten even though they could

00:38:48,090 --> 00:38:51,390
both be chilies for example but there's

00:38:50,130 --> 00:38:54,210
gonna be a distance of 10 whatever that

00:38:51,390 --> 00:38:57,600
means but you could have an orange

00:38:54,210 --> 00:38:59,430
that's 5 centimeters long and a small

00:38:57,600 --> 00:39:01,440
chilli that's 5 centimeters long one of

00:38:59,430 --> 00:39:03,450
those is red and one of those isn't red

00:39:01,440 --> 00:39:05,250
but the different the distance is only

00:39:03,450 --> 00:39:07,110
gonna be one so it's going to say that

00:39:05,250 --> 00:39:09,270
orange and chilli are more closely

00:39:07,110 --> 00:39:10,830
associated than the two chillies that

00:39:09,270 --> 00:39:13,370
happens to be different sizes because

00:39:10,830 --> 00:39:17,820
the scale is much bigger on that length

00:39:13,370 --> 00:39:23,160
dimension that kind of makes sense so

00:39:17,820 --> 00:39:24,390
good I'm glad you understand it so yes

00:39:23,160 --> 00:39:26,010
so you probably want to normalize things

00:39:24,390 --> 00:39:27,450
you can use it to your own advantage to

00:39:26,010 --> 00:39:28,590
a point if there are particular

00:39:27,450 --> 00:39:30,960
dimensions

00:39:28,590 --> 00:39:33,450
that have a stronger weight in

00:39:30,960 --> 00:39:35,280
predicting if something's a chargeback

00:39:33,450 --> 00:39:36,360
or not in our example we can say right

00:39:35,280 --> 00:39:38,430
well actually we're going to normalize

00:39:36,360 --> 00:39:41,280
everything to a scale between 1 and 0

00:39:38,430 --> 00:39:42,390
and 1 or 0 and 10 but for a particular

00:39:41,280 --> 00:39:45,120
dimension we're going to normalize it

00:39:42,390 --> 00:39:47,610
between 0 and 15 so it has slightly more

00:39:45,120 --> 00:39:48,930
weight than the other dimensions so you

00:39:47,610 --> 00:39:52,800
can you can kind of play with those

00:39:48,930 --> 00:39:53,940
scales to your advantage to a degree so

00:39:52,800 --> 00:39:55,830
let's say we've got some example like

00:39:53,940 --> 00:39:57,840
this I like fruit you might have noticed

00:39:55,830 --> 00:39:59,580
these fruit a lot so what the moment got

00:39:57,840 --> 00:40:02,280
dating this woman we've got a length in

00:39:59,580 --> 00:40:04,530
centimeters and like height if it's an

00:40:02,280 --> 00:40:07,170
apple I guess and then a color and a

00:40:04,530 --> 00:40:08,730
shape so first of all where you have to

00:40:07,170 --> 00:40:10,440
go and collect up all the potential

00:40:08,730 --> 00:40:11,640
values so what are all the possible

00:40:10,440 --> 00:40:13,860
shapes and what are all the possible

00:40:11,640 --> 00:40:16,470
colors and also work out the maximum

00:40:13,860 --> 00:40:17,970
length of the fruit that so what is the

00:40:16,470 --> 00:40:20,280
longest fruit so that we can normalize

00:40:17,970 --> 00:40:21,210
all of them to the same scale where

00:40:20,280 --> 00:40:23,670
they're gonna go through all our data

00:40:21,210 --> 00:40:27,750
and we're gonna literally ask a series

00:40:23,670 --> 00:40:31,020
of questions is it round is it Crescent

00:40:27,750 --> 00:40:33,420
is it green is it red and assign a 1 or

00:40:31,020 --> 00:40:34,620
a 0 value to each one of those we're

00:40:33,420 --> 00:40:36,300
also going to divide all the lengths by

00:40:34,620 --> 00:40:38,220
that max length so that the longest

00:40:36,300 --> 00:40:40,230
fruit is 1 the shortest fruit is

00:40:38,220 --> 00:40:42,480
probably nearly zero and everything else

00:40:40,230 --> 00:40:44,760
is in between so we've standardized all

00:40:42,480 --> 00:40:46,470
our scales and we now have a choose a

00:40:44,760 --> 00:40:49,800
data that looks like some really really

00:40:46,470 --> 00:40:51,810
messed up coordinates but it but it

00:40:49,800 --> 00:40:53,190
works literally we have a length is it

00:40:51,810 --> 00:40:56,420
round is it present is it red

00:40:53,190 --> 00:40:59,130
is it green as a yellow is it orange so

00:40:56,420 --> 00:41:01,890
yeah now we had everything all that

00:40:59,130 --> 00:41:05,100
stuff that was previously words is now

00:41:01,890 --> 00:41:07,520
numbers you know if-- I'm going to do

00:41:05,100 --> 00:41:12,510
one demo I may as well do three right

00:41:07,520 --> 00:41:15,420
yeah I thought this was a good idea so

00:41:12,510 --> 00:41:16,860
here we go another demo so again this is

00:41:15,420 --> 00:41:18,360
all the same day job despite spat it out

00:41:16,860 --> 00:41:19,800
so I can remember what it is when I'm

00:41:18,360 --> 00:41:22,500
looking at this but for example if we

00:41:19,800 --> 00:41:26,820
got sent this five centimeters and it's

00:41:22,500 --> 00:41:28,740
round and it's green or we know it's

00:41:26,820 --> 00:41:29,460
probably going to be an apple but let's

00:41:28,740 --> 00:41:32,340
just make sure

00:41:29,460 --> 00:41:35,220
yes it's an apple and again this is at

00:41:32,340 --> 00:41:36,450
that point of use predictable data first

00:41:35,220 --> 00:41:37,770
to make sure you've not screwed

00:41:36,450 --> 00:41:40,760
something up horribly somewhere as we

00:41:37,770 --> 00:41:43,220
did the first second and third times

00:41:40,760 --> 00:41:45,470
let's go so let's go six centimeters and

00:41:43,220 --> 00:41:47,480
round and orange it's going to be an

00:41:45,470 --> 00:41:48,890
orange incidentally to try and throw the

00:41:47,480 --> 00:41:50,660
date off I've included some blood

00:41:48,890 --> 00:41:52,309
oranges but told it they're red I know

00:41:50,660 --> 00:41:53,150
technically they're not red but just

00:41:52,309 --> 00:41:55,250
bear with me

00:41:53,150 --> 00:41:56,630
hopefully it's clever enough to know so

00:41:55,250 --> 00:41:57,200
if I say st. that's you know bigger than

00:41:56,630 --> 00:42:01,369
an apple

00:41:57,200 --> 00:42:03,680
it's good nine and is round and is red

00:42:01,369 --> 00:42:09,260
hopefully I should have tested this

00:42:03,680 --> 00:42:11,539
first that's good so there we go and so

00:42:09,260 --> 00:42:12,890
we're still providing words but you can

00:42:11,539 --> 00:42:14,900
see for each one of these it's taking

00:42:12,890 --> 00:42:16,880
the words we provided round and red that

00:42:14,900 --> 00:42:18,710
is converting them into it is round and

00:42:16,880 --> 00:42:20,000
it's not present it is red it's not

00:42:18,710 --> 00:42:21,740
green it's not yellow it's not orange

00:42:20,000 --> 00:42:23,930
it's just converting them all to those

00:42:21,740 --> 00:42:26,750
same set of coordinates as we converted

00:42:23,930 --> 00:42:30,589
our training data so that's that's

00:42:26,750 --> 00:42:32,450
pretty cool so this is what we did we

00:42:30,589 --> 00:42:34,519
took that data to the same set of

00:42:32,450 --> 00:42:38,150
dimensions but we converted the more

00:42:34,519 --> 00:42:41,960
into binary and and normalized the the

00:42:38,150 --> 00:42:44,059
prices and things that the the test data

00:42:41,960 --> 00:42:47,569
was all about 200 dimensions I think is

00:42:44,059 --> 00:42:49,819
is quite big and again we did the test

00:42:47,569 --> 00:42:52,339
with 2018 providing the training day to

00:42:49,819 --> 00:42:54,230
2017 Friday and the test date sir and it

00:42:52,339 --> 00:42:55,970
is better we're getting there

00:42:54,230 --> 00:42:58,279
the accuracies excuse me is still not

00:42:55,970 --> 00:43:00,650
brilliant it's about sixty two and a

00:42:58,279 --> 00:43:02,269
half percent but the false positives

00:43:00,650 --> 00:43:04,940
have come right down been wound on that

00:43:02,269 --> 00:43:06,710
first test the false positives were 72 I

00:43:04,940 --> 00:43:08,710
think it was you know they've dropped to

00:43:06,710 --> 00:43:10,940
42 so that that's really really positive

00:43:08,710 --> 00:43:13,339
so you know we're definitely moving in

00:43:10,940 --> 00:43:16,309
the right direction but we're obviously

00:43:13,339 --> 00:43:18,049
not there yeah oh if I was to say to my

00:43:16,309 --> 00:43:23,930
CEO hey let's put this into production I

00:43:18,049 --> 00:43:26,029
wouldn't have a job so yeah we still

00:43:23,930 --> 00:43:27,740
kind of going right well what can I do

00:43:26,029 --> 00:43:28,759
to make this more accurate we know this

00:43:27,740 --> 00:43:30,289
seems to be moving in the right

00:43:28,759 --> 00:43:33,680
direction so we're going to stick with

00:43:30,289 --> 00:43:37,519
this but we need to understand why it's

00:43:33,680 --> 00:43:40,809
so hit and miss and we struck across I e

00:43:37,519 --> 00:43:44,059
someone told us another important lesson

00:43:40,809 --> 00:43:45,589
data without context isn't very useful

00:43:44,059 --> 00:43:47,319
now we had already kind of touched on

00:43:45,589 --> 00:43:49,400
this because in that very first example

00:43:47,319 --> 00:43:51,650
we'd put the country in the Gateway

00:43:49,400 --> 00:43:53,300
together as one token because we knew

00:43:51,650 --> 00:43:56,600
that there had to be some inter

00:43:53,300 --> 00:43:58,640
raishin but give when we got all excited

00:43:56,600 --> 00:44:00,110
about oh yeah Kenny Owens gonna solve

00:43:58,640 --> 00:44:02,570
all the problems we kind of totally

00:44:00,110 --> 00:44:05,510
forgot about it it's a bit stupid of us

00:44:02,570 --> 00:44:07,130
really want it anyway so we started

00:44:05,510 --> 00:44:11,000
thinking that perhaps we needed to look

00:44:07,130 --> 00:44:13,760
at that in in a bit more detail so

00:44:11,000 --> 00:44:16,490
consider two stores again we've got a

00:44:13,760 --> 00:44:18,290
store where the average price is three

00:44:16,490 --> 00:44:19,520
dollars and the highest priced item is

00:44:18,290 --> 00:44:21,740
five dollars we've got another store

00:44:19,520 --> 00:44:24,020
where the average price is $30 and the

00:44:21,740 --> 00:44:27,230
highest priced item is 50 yes it makes

00:44:24,020 --> 00:44:29,330
it much easier if you multiply by ten so

00:44:27,230 --> 00:44:30,740
if you've got a player who normally

00:44:29,330 --> 00:44:33,260
makes all their purchases from France

00:44:30,740 --> 00:44:35,570
and they make a purchase worth twenty

00:44:33,260 --> 00:44:37,940
dollars or so these are two things

00:44:35,570 --> 00:44:39,260
consider that didn't make sense as the

00:44:37,940 --> 00:44:40,520
other consideration is consider a player

00:44:39,260 --> 00:44:42,500
who makes all their purchases from

00:44:40,520 --> 00:44:44,060
France with an average price of twenty

00:44:42,500 --> 00:44:45,860
dollars and all of a sudden they make a

00:44:44,060 --> 00:44:48,530
purchase worth forty dollars and they're

00:44:45,860 --> 00:44:49,790
based in the US same player suddenly has

00:44:48,530 --> 00:44:51,710
moved and is making more expensive

00:44:49,790 --> 00:44:55,100
purchases I can say if you move you

00:44:51,710 --> 00:44:56,690
can't before anything so in each of

00:44:55,100 --> 00:44:58,730
those situations if someone was on the

00:44:56,690 --> 00:45:01,730
first store and they tried to make it

00:44:58,730 --> 00:45:04,340
check out a basket worth $50 you're

00:45:01,730 --> 00:45:05,900
probably gonna go that seems odd it

00:45:04,340 --> 00:45:08,780
could be that there's a bug it's

00:45:05,900 --> 00:45:10,460
probably a bug but you know that there's

00:45:08,780 --> 00:45:11,810
something going on and you would hope

00:45:10,460 --> 00:45:14,810
that your machine learning would flag

00:45:11,810 --> 00:45:17,240
this and likewise if the average prices

00:45:14,810 --> 00:45:18,920
things is thirty and someone buys

00:45:17,240 --> 00:45:20,690
something really cheap they've obviously

00:45:18,920 --> 00:45:21,950
dug out the cheapest item in the store

00:45:20,690 --> 00:45:23,870
and they're buying one of them when no

00:45:21,950 --> 00:45:25,700
one else does this again that would be

00:45:23,870 --> 00:45:27,320
odd and in the second question you'd be

00:45:25,700 --> 00:45:28,940
asking well is that has that person

00:45:27,320 --> 00:45:30,770
moved from France to the US and is

00:45:28,940 --> 00:45:33,380
buying more expensive stuff or is

00:45:30,770 --> 00:45:36,350
someone playing silly buggers probably

00:45:33,380 --> 00:45:38,210
the second so you have to kind of be

00:45:36,350 --> 00:45:39,920
able to apply this context which you

00:45:38,210 --> 00:45:43,430
can't do when you're dealing with data

00:45:39,920 --> 00:45:45,800
on a on a global basis so we realized

00:45:43,430 --> 00:45:47,810
that you know we need to start thinking

00:45:45,800 --> 00:45:51,050
out what's normal for one store might

00:45:47,810 --> 00:45:52,460
not be normal for a different store so

00:45:51,050 --> 00:45:55,460
we kind of need to start asking two

00:45:52,460 --> 00:45:57,350
questions you know we're gonna say for

00:45:55,460 --> 00:45:59,960
each payment is this normal for this

00:45:57,350 --> 00:46:02,240
store and is this normal for this player

00:45:59,960 --> 00:46:05,840
it means building a lot more difference

00:46:02,240 --> 00:46:07,040
as a training data boo but hopefully if

00:46:05,840 --> 00:46:10,340
it's more accurate then

00:46:07,040 --> 00:46:11,630
I'm gonna look really clever so there

00:46:10,340 --> 00:46:15,050
are issues with this that will come on

00:46:11,630 --> 00:46:16,280
to but we wanted to kind of start going

00:46:15,050 --> 00:46:17,750
down this road and this this is the

00:46:16,280 --> 00:46:20,240
thing that we're working on at the

00:46:17,750 --> 00:46:22,130
moment and so we created a custom test

00:46:20,240 --> 00:46:23,780
dataset for one store we weren't going

00:46:22,130 --> 00:46:25,100
to build to build a sets for every store

00:46:23,780 --> 00:46:29,120
to start we'd want to check out our

00:46:25,100 --> 00:46:31,280
validate re expectations first again use

00:46:29,120 --> 00:46:32,600
some that you can understand and try and

00:46:31,280 --> 00:46:36,110
test things out before you spend hours

00:46:32,600 --> 00:46:37,580
building it so we took their their

00:46:36,110 --> 00:46:39,680
charge racks in 2018 we quadrupled

00:46:37,580 --> 00:46:42,140
thurman and took 5,000 good payments at

00:46:39,680 --> 00:46:43,550
random and then we run the exact same

00:46:42,140 --> 00:46:45,290
test we still using the Ken and

00:46:43,550 --> 00:46:47,690
algorithm we did before everything's

00:46:45,290 --> 00:46:51,530
been done the same way just to see if

00:46:47,690 --> 00:46:53,420
it's any more accurate and again I mean

00:46:51,530 --> 00:46:54,950
it's not perfect but we're still the

00:46:53,420 --> 00:46:57,740
point is every time we're moving a bit

00:46:54,950 --> 00:46:59,300
closer okay so you know those false

00:46:57,740 --> 00:47:01,340
positives are high still but they're

00:46:59,300 --> 00:47:03,080
coming down we've actually done a really

00:47:01,340 --> 00:47:06,380
good job over there to find the the

00:47:03,080 --> 00:47:09,200
fraud transactions so an accuracy

00:47:06,380 --> 00:47:11,840
overall is about 70% so we're

00:47:09,200 --> 00:47:13,160
progressing we've not finished on this

00:47:11,840 --> 00:47:15,020
yet this that's about as far as we got

00:47:13,160 --> 00:47:16,780
with with with the personal stuff we've

00:47:15,020 --> 00:47:18,560
got a number of things we want to try

00:47:16,780 --> 00:47:19,880
weighting different dimensions I've

00:47:18,560 --> 00:47:22,730
already mentioned this if you've got

00:47:19,880 --> 00:47:24,620
certain dimensions that you think or you

00:47:22,730 --> 00:47:27,530
can prove are a better indicator than

00:47:24,620 --> 00:47:30,530
others wait those more strongly than

00:47:27,530 --> 00:47:32,630
than other dimensions setting different

00:47:30,530 --> 00:47:34,340
values for K you know we're using we've

00:47:32,630 --> 00:47:36,380
used three and n in all our tests

00:47:34,340 --> 00:47:38,090
actually perhaps by taking a bigger

00:47:36,380 --> 00:47:42,260
sample maybe saying it's a seven and N

00:47:38,090 --> 00:47:43,540
or nine nn-no you might find you might

00:47:42,260 --> 00:47:45,350
get a better result

00:47:43,540 --> 00:47:47,750
removing outliers that's saying that

00:47:45,350 --> 00:47:50,570
we're actively working on if you've got

00:47:47,750 --> 00:47:52,730
particular outliers they can be skewing

00:47:50,570 --> 00:47:55,340
your data now you can actually use care

00:47:52,730 --> 00:47:56,870
known so identify the outliers in your

00:47:55,340 --> 00:47:58,910
training data to then remove them to

00:47:56,870 --> 00:48:01,910
then make your training data better

00:47:58,910 --> 00:48:03,590
representative so I'm working on the

00:48:01,910 --> 00:48:06,460
moment at the moment it doesn't work but

00:48:03,590 --> 00:48:08,840
I've been told you can definitely do it

00:48:06,460 --> 00:48:10,880
and waited distance it something that

00:48:08,840 --> 00:48:12,080
particular we're interested in if you

00:48:10,880 --> 00:48:15,080
imagine if you if you say you've got

00:48:12,080 --> 00:48:17,540
three three and n okay you've got your

00:48:15,080 --> 00:48:19,490
your point is here I'm just pointing to

00:48:17,540 --> 00:48:20,780
space now it's really unhelpful and

00:48:19,490 --> 00:48:23,360
you've got a a

00:48:20,780 --> 00:48:24,470
a point a neighbor right next to it you

00:48:23,360 --> 00:48:26,780
look at you got well they're probably

00:48:24,470 --> 00:48:28,370
related but then actually the next two

00:48:26,780 --> 00:48:30,650
closest are in the other category and

00:48:28,370 --> 00:48:33,380
they're way over here because in a

00:48:30,650 --> 00:48:35,720
standard Canon implementation every node

00:48:33,380 --> 00:48:36,830
has the same vote it's going to be

00:48:35,720 --> 00:48:38,210
associated with those two that are

00:48:36,830 --> 00:48:40,640
further away rather than this one that's

00:48:38,210 --> 00:48:44,180
next door to it which might be right

00:48:40,640 --> 00:48:46,160
but it's probably not so there are kind

00:48:44,180 --> 00:48:48,590
of modifications you can do to the K&N

00:48:46,160 --> 00:48:51,260
to actually say right well if a if a

00:48:48,590 --> 00:48:53,180
node is closer its vote is worth more

00:48:51,260 --> 00:48:55,190
than one that's further away so you can

00:48:53,180 --> 00:48:57,500
wait in that distance so that that that

00:48:55,190 --> 00:48:58,820
also plays an effect and that's not the

00:48:57,500 --> 00:49:01,100
word particular interesting so we think

00:48:58,820 --> 00:49:04,460
that is going to make it significantly

00:49:01,100 --> 00:49:07,340
more accurate but we also wanted to try

00:49:04,460 --> 00:49:09,560
per customer detection now this is a

00:49:07,340 --> 00:49:13,010
very narrow context some customers might

00:49:09,560 --> 00:49:14,570
only have 10 purchases and they may

00:49:13,010 --> 00:49:16,610
never have charged back so obviously

00:49:14,570 --> 00:49:18,350
being able to categorize it isn't going

00:49:16,610 --> 00:49:23,440
to work you can't up sample data that

00:49:18,350 --> 00:49:25,550
doesn't exist again xkcd quite amusing

00:49:23,440 --> 00:49:29,120
statistically significant boyfriends I

00:49:25,550 --> 00:49:32,090
don't know so we have to kind of change

00:49:29,120 --> 00:49:33,710
our thinking what we're now doing

00:49:32,090 --> 00:49:35,600
instead of classifying is we're trying

00:49:33,710 --> 00:49:38,110
to look for something this dissimilar to

00:49:35,600 --> 00:49:41,900
the normal so that is an outlier or

00:49:38,110 --> 00:49:43,910
anomaly now there are other algorithms

00:49:41,900 --> 00:49:45,860
or do this but we've kind of got used to

00:49:43,910 --> 00:49:48,020
K&N we kind of understand how it works

00:49:45,860 --> 00:49:49,190
and very much it's based on distance art

00:49:48,020 --> 00:49:52,970
we're thinking well could we use

00:49:49,190 --> 00:49:55,100
distance to identify an anomaly if all

00:49:52,970 --> 00:49:57,260
the data belongs to one category yes the

00:49:55,100 --> 00:50:00,230
result will be that category but if the

00:49:57,260 --> 00:50:01,970
distance is 69 billion we're gonna go

00:50:00,230 --> 00:50:04,790
that's probably not actually that

00:50:01,970 --> 00:50:08,480
related so we started playing with this

00:50:04,790 --> 00:50:11,390
idea so we kind of we definitely didn't

00:50:08,480 --> 00:50:13,280
and edit the vendor directory honest no

00:50:11,390 --> 00:50:14,870
okay we did a little bit so we had to

00:50:13,280 --> 00:50:16,370
sit the vendor directory and we added

00:50:14,870 --> 00:50:18,560
this extra thing to work out the average

00:50:16,370 --> 00:50:21,260
distance so it works out which nodes

00:50:18,560 --> 00:50:22,490
it's related to and then as those

00:50:21,260 --> 00:50:24,260
together and divide by the number of

00:50:22,490 --> 00:50:25,880
nodes it found answers right so the

00:50:24,260 --> 00:50:29,510
average distance for this point the

00:50:25,880 --> 00:50:31,970
you've asked us to predict is X so the

00:50:29,510 --> 00:50:34,370
theory goes that if it's a bigger

00:50:31,970 --> 00:50:36,560
distance it's less related

00:50:34,370 --> 00:50:39,200
or if it's a smaller distance it's more

00:50:36,560 --> 00:50:41,570
related again we wanted to test this out

00:50:39,200 --> 00:50:44,060
on known data before we just went ahead

00:50:41,570 --> 00:50:45,020
and started plugging our data in because

00:50:44,060 --> 00:50:48,260
then would have no idea

00:50:45,020 --> 00:50:50,950
so put your fruit again this is exactly

00:50:48,260 --> 00:50:54,230
the same data set as that previous demo

00:50:50,950 --> 00:50:56,660
but this time you see we're spitting out

00:50:54,230 --> 00:50:59,210
the actual the the total distance on the

00:50:56,660 --> 00:51:01,580
average distance apologies so in this

00:50:59,210 --> 00:51:02,960
one you know it's likely is we know it's

00:51:01,580 --> 00:51:04,940
kind of say it's a banana because it's

00:51:02,960 --> 00:51:06,530
longer than an apple or an orange and

00:51:04,940 --> 00:51:08,630
it's a crescent but we've told it it's

00:51:06,530 --> 00:51:10,160
red so we we know it's going to say it's

00:51:08,630 --> 00:51:12,680
a banana but it's not going to be that

00:51:10,160 --> 00:51:15,380
sure it's a banana and it's returned a

00:51:12,680 --> 00:51:17,300
total distance of seven now we have no

00:51:15,380 --> 00:51:19,130
idea what that means it is that good is

00:51:17,300 --> 00:51:21,340
that bad I don't know so we'll carry on

00:51:19,130 --> 00:51:23,900
so he plugged another one in this time

00:51:21,340 --> 00:51:26,930
we said it was long is the longest

00:51:23,900 --> 00:51:28,220
banana we've ever seen and it's still a

00:51:26,930 --> 00:51:30,410
it's still banana shaped it's still a

00:51:28,220 --> 00:51:32,420
crescent so it will still end up in that

00:51:30,410 --> 00:51:34,100
burner on a category but it's also green

00:51:32,420 --> 00:51:36,500
so we're not gonna eat this banana

00:51:34,100 --> 00:51:37,970
because there's some are wrong and again

00:51:36,500 --> 00:51:39,590
it's now the total distance has gone up

00:51:37,970 --> 00:51:41,480
a little bit more so it was some point

00:51:39,590 --> 00:51:43,820
zero now at seven point seven you know

00:51:41,480 --> 00:51:45,470
so we're seeing that the the less normal

00:51:43,820 --> 00:51:47,450
we make it the bigger the distance gets

00:51:45,470 --> 00:51:50,480
but we still don't know what normal

00:51:47,450 --> 00:51:51,710
means really so now we've done one that

00:51:50,480 --> 00:51:53,300
slap-bang in the middle twelve

00:51:51,710 --> 00:51:55,700
centimeters it's a crescent it's yellow

00:51:53,300 --> 00:51:59,180
the total distance is not 0.12

00:51:55,700 --> 00:52:01,370
so we've now validated our assumption

00:51:59,180 --> 00:52:05,510
that's the bigger the distance that the

00:52:01,370 --> 00:52:06,500
the week of the relationship so now we

00:52:05,510 --> 00:52:08,570
just need to have to apply it to our

00:52:06,500 --> 00:52:14,270
data I mean that can't be difficult

00:52:08,570 --> 00:52:15,710
right so we obviously we've had to

00:52:14,270 --> 00:52:16,850
identify some players that had good

00:52:15,710 --> 00:52:18,920
payments and chargebacks

00:52:16,850 --> 00:52:20,780
we kept all the charge mats to one side

00:52:18,920 --> 00:52:22,730
so we could use those to test distances

00:52:20,780 --> 00:52:24,370
the other thing that we need to do is

00:52:22,730 --> 00:52:27,500
obviously we have to validate our

00:52:24,370 --> 00:52:29,900
assumptions so with that pool of good

00:52:27,500 --> 00:52:31,400
payments we had to withdraw a couple to

00:52:29,900 --> 00:52:32,720
hold those back to test against the

00:52:31,400 --> 00:52:35,810
training data to make sure those

00:52:32,720 --> 00:52:37,010
distances are indeed smaller I don't

00:52:35,810 --> 00:52:38,570
actually we've not just come up with

00:52:37,010 --> 00:52:40,820
something that happened to work on fruit

00:52:38,570 --> 00:52:44,590
and you know not being fruit pickers

00:52:40,820 --> 00:52:47,000
doesn't help so this is what we did we

00:52:44,590 --> 00:52:47,990
trained it on a for that particular

00:52:47,000 --> 00:52:50,030
player we've grabbed all that

00:52:47,990 --> 00:52:52,700
payment data took a couple of good ones

00:52:50,030 --> 00:52:53,630
out stuck the rest of it in then tested

00:52:52,700 --> 00:52:55,670
it against chargebacks

00:52:53,630 --> 00:52:58,730
and the remaining good payments just to

00:52:55,670 --> 00:53:00,980
see what the values would be so here's

00:52:58,730 --> 00:53:03,200
one and we can see this is a pretty good

00:53:00,980 --> 00:53:04,730
start the good payments that we tested

00:53:03,200 --> 00:53:06,200
all had you know an average distance of

00:53:04,730 --> 00:53:08,060
around one point four one point six and

00:53:06,200 --> 00:53:11,000
we can see that the charge back payments

00:53:08,060 --> 00:53:14,210
are quite clearly much higher so that's

00:53:11,000 --> 00:53:16,610
that's a good start this one's a little

00:53:14,210 --> 00:53:18,110
closer I mean we have got a charge but

00:53:16,610 --> 00:53:20,119
that's not point a and a good that's not

00:53:18,110 --> 00:53:22,430
point eight there it is still larger but

00:53:20,119 --> 00:53:24,830
obviously it's a much the gap between is

00:53:22,430 --> 00:53:27,350
much more it's much smaller but there is

00:53:24,830 --> 00:53:30,470
still a clear line between the goods and

00:53:27,350 --> 00:53:31,970
most of the charge backs this one our

00:53:30,470 --> 00:53:33,970
case not so clear-cut so we know it's

00:53:31,970 --> 00:53:36,590
not going to work in every situation

00:53:33,970 --> 00:53:37,940
this one you know they've got this this

00:53:36,590 --> 00:53:39,830
this one with an average distance that's

00:53:37,940 --> 00:53:41,300
absolutely miniscule but then we have

00:53:39,830 --> 00:53:43,910
got the this other good payment that

00:53:41,300 --> 00:53:45,440
overlaps the chargebacks but you know we

00:53:43,910 --> 00:53:49,010
so we know it's not gonna fix everything

00:53:45,440 --> 00:53:51,380
but that's okay again there's a much

00:53:49,010 --> 00:53:53,000
clear delineation the values in general

00:53:51,380 --> 00:53:54,830
are much smaller so there's a lot of

00:53:53,000 --> 00:53:56,450
nought point whatever's here but then

00:53:54,830 --> 00:53:57,650
the good payments have got like really

00:53:56,450 --> 00:53:59,600
really small distances so it basically

00:53:57,650 --> 00:54:03,440
they've made almost identical payments

00:53:59,600 --> 00:54:06,230
multiple times and again there's a

00:54:03,440 --> 00:54:08,840
fairly clear delineation here so we can

00:54:06,230 --> 00:54:11,240
see that in in many situations the

00:54:08,840 --> 00:54:14,090
distance does correlate to a chargeback

00:54:11,240 --> 00:54:16,970
tends to be more unlike the other

00:54:14,090 --> 00:54:20,480
payments than good payments if that make

00:54:16,970 --> 00:54:22,340
sense but what is also claims we can't

00:54:20,480 --> 00:54:24,740
just pick a an arbitrary number and say

00:54:22,340 --> 00:54:26,510
this is the line because you know let's

00:54:24,740 --> 00:54:27,859
say we picked one that would be great

00:54:26,510 --> 00:54:30,200
for most of these all of these are above

00:54:27,859 --> 00:54:31,940
1 but I'm here would miss most of them

00:54:30,200 --> 00:54:33,260
even though actually if they were still

00:54:31,940 --> 00:54:35,210
clearly different from the other so we

00:54:33,260 --> 00:54:37,280
can't just pick a single value and say

00:54:35,210 --> 00:54:41,480
this is it we're going to have to

00:54:37,280 --> 00:54:45,290
basically define for each user what an

00:54:41,480 --> 00:54:47,330
outlier is in their situation so the way

00:54:45,290 --> 00:54:49,040
we did that is we've now we calculate

00:54:47,330 --> 00:54:50,900
the average 3 and end distance against

00:54:49,040 --> 00:54:52,160
the known values so with that training

00:54:50,900 --> 00:54:53,840
data that we give it

00:54:52,160 --> 00:54:56,000
we then loop through every single piece

00:54:53,840 --> 00:54:58,270
of training data and work out its

00:54:56,000 --> 00:55:00,230
average 3 n n from its neighbors and

00:54:58,270 --> 00:55:01,770
then we work out the average of that so

00:55:00,230 --> 00:55:03,630
we can say the average distance between

00:55:01,770 --> 00:55:05,880
the nodes in our training data is this

00:55:03,630 --> 00:55:09,410
we don't work out the standard deviation

00:55:05,880 --> 00:55:11,220
because something about statistics and

00:55:09,410 --> 00:55:13,410
then we add them together then we go

00:55:11,220 --> 00:55:15,570
right if it's greater than the average

00:55:13,410 --> 00:55:18,210
distance plus standard deviation we're

00:55:15,570 --> 00:55:20,910
then going to flag the payment so that

00:55:18,210 --> 00:55:22,950
you know what what the target point is

00:55:20,910 --> 00:55:25,890
or what the the delineating mark is will

00:55:22,950 --> 00:55:27,690
be different for every single player we

00:55:25,890 --> 00:55:29,250
know even just looking at the the tape

00:55:27,690 --> 00:55:32,160
tool ran before that that's going to

00:55:29,250 --> 00:55:34,320
miss you know some chargebacks but

00:55:32,160 --> 00:55:36,330
that's okay our target isn't to reach

00:55:34,320 --> 00:55:37,830
chargeback zero for a start

00:55:36,330 --> 00:55:39,450
not all chargebacks are fraudulent

00:55:37,830 --> 00:55:41,550
charge that's some of the millage enuine

00:55:39,450 --> 00:55:43,200
so we're never going to catch those but

00:55:41,550 --> 00:55:46,260
if we can reduce charge of acts by 20%

00:55:43,200 --> 00:55:48,750
for example that would relate to nearly

00:55:46,260 --> 00:55:50,869
5,000 payments over 2018 so that's that

00:55:48,750 --> 00:55:53,520
will still be a pretty big win in itself

00:55:50,869 --> 00:55:54,869
and that's an important point is know

00:55:53,520 --> 00:55:56,940
what you're trying to achieve if you

00:55:54,869 --> 00:55:58,860
want to achieve charge back to zero in

00:55:56,940 --> 00:55:59,880
our instance this is never going to work

00:55:58,860 --> 00:56:01,440
and we'd have to do something way more

00:55:59,880 --> 00:56:02,670
complicated and probably way more

00:56:01,440 --> 00:56:05,490
expensive and it probably wouldn't be

00:56:02,670 --> 00:56:07,800
worthwhile if we just want to be able to

00:56:05,490 --> 00:56:10,020
you know reduce them by a proportion

00:56:07,800 --> 00:56:15,060
then we can kind of accept those

00:56:10,020 --> 00:56:17,820
trade-offs so we did a test and we

00:56:15,060 --> 00:56:21,840
tested with about a thousand payments in

00:56:17,820 --> 00:56:23,460
total so there was 366 good payments 186

00:56:21,840 --> 00:56:25,260
so again we just identified like a

00:56:23,460 --> 00:56:27,210
hundred players that we knew or don't

00:56:25,260 --> 00:56:29,250
charge backs and good payments we pulled

00:56:27,210 --> 00:56:31,859
all their data out we hived off three of

00:56:29,250 --> 00:56:35,250
each I think it was those that are kind

00:56:31,859 --> 00:56:36,900
of you know our control group if you

00:56:35,250 --> 00:56:38,369
like and then the charge backs then we

00:56:36,900 --> 00:56:42,030
plugged in the training data worked out

00:56:38,369 --> 00:56:43,830
the average and it identified 85% of

00:56:42,030 --> 00:56:45,930
good payments successfully so that's

00:56:43,830 --> 00:56:48,630
really positively you a 15% false

00:56:45,930 --> 00:56:50,040
positive rate is is definitely much more

00:56:48,630 --> 00:56:52,080
where we want to be if it's 50 percent

00:56:50,040 --> 00:56:54,480
and false positives people will ignore

00:56:52,080 --> 00:56:55,619
the data don't go well I'd have no idea

00:56:54,480 --> 00:56:57,600
because you're saying so many legitimate

00:56:55,619 --> 00:56:57,930
payments are fraud this doesn't make

00:56:57,600 --> 00:56:59,790
sense

00:56:57,930 --> 00:57:01,890
I give up and they won't use it you have

00:56:59,790 --> 00:57:03,330
to also convince people actually if it

00:57:01,890 --> 00:57:07,560
Flags something you need to pay

00:57:03,330 --> 00:57:09,450
attention you know the the it only only

00:57:07,560 --> 00:57:11,490
identified 31 percent of charge backs

00:57:09,450 --> 00:57:13,859
but that's still 31 percent that we're

00:57:11,490 --> 00:57:15,210
currently not doing and that would still

00:57:13,859 --> 00:57:18,060
be a reduction of about

00:57:15,210 --> 00:57:19,890
thousand payments in total over 2018 so

00:57:18,060 --> 00:57:21,630
that's that's still a big reduction I

00:57:19,890 --> 00:57:25,109
would be more than happy with that as a

00:57:21,630 --> 00:57:27,630
starting point well in short we've made

00:57:25,109 --> 00:57:30,089
progress this is another really good

00:57:27,630 --> 00:57:32,849
comet comet cool commits trip about life

00:57:30,089 --> 00:57:34,470
in a digital agency I don't if you may

00:57:32,849 --> 00:57:36,780
not get to see it but it's quite it does

00:57:34,470 --> 00:57:38,220
amuse me so they're celebrating because

00:57:36,780 --> 00:57:39,900
I say yeah yeah we've done it we've done

00:57:38,220 --> 00:57:42,599
it oh and the CTO comes in he says

00:57:39,900 --> 00:57:43,770
what's going on and the guy says well

00:57:42,599 --> 00:57:45,510
we've been stuck on this bug for two

00:57:43,770 --> 00:57:47,609
hours any son and he's fixed it that's

00:57:45,510 --> 00:57:50,240
awesome and they've got no bugs there

00:57:47,609 --> 00:57:54,810
but the error message is different

00:57:50,240 --> 00:57:57,900
that's progress so we are totally not

00:57:54,810 --> 00:57:59,730
the end yet however if I was to say to

00:57:57,900 --> 00:58:02,220
my CEO I want to put something like this

00:57:59,730 --> 00:58:03,540
into production we were only going to we

00:58:02,220 --> 00:58:05,730
know we're only going to identifying a

00:58:03,540 --> 00:58:08,130
small percentage of charge backs but we

00:58:05,730 --> 00:58:09,930
can say with relative confidence they

00:58:08,130 --> 00:58:11,640
are probably going to be charge banks

00:58:09,930 --> 00:58:14,160
you know what you know down the line

00:58:11,640 --> 00:58:15,720
I think we've set up with with with

00:58:14,160 --> 00:58:18,060
reasonable confidence you know you might

00:58:15,720 --> 00:58:19,800
get a few payments hit flagged a

00:58:18,060 --> 00:58:21,450
legitimate what that happens I mean

00:58:19,800 --> 00:58:22,440
whose bankers texts some guard there's

00:58:21,450 --> 00:58:23,670
been a card transaction we don't

00:58:22,440 --> 00:58:26,160
recognize it it's like yeah well it was

00:58:23,670 --> 00:58:29,099
me I just did something unusual happens

00:58:26,160 --> 00:58:31,010
with humans but it you know that's much

00:58:29,099 --> 00:58:32,970
closer to thing that we can actually use

00:58:31,010 --> 00:58:35,670
there are still things that we're going

00:58:32,970 --> 00:58:38,730
to try you know again the weights hid

00:58:35,670 --> 00:58:40,710
the weighted dementia distances thing we

00:58:38,730 --> 00:58:43,140
think is probably a really good thing

00:58:40,710 --> 00:58:44,460
that we're going to experiment with and

00:58:43,140 --> 00:58:45,540
again removing outliers that something

00:58:44,460 --> 00:58:47,070
that we're actively working at the

00:58:45,540 --> 00:58:50,369
moment but it takes quite a long time to

00:58:47,070 --> 00:58:52,080
churn through the data but you know we

00:58:50,369 --> 00:58:53,369
saw we think we can make it you know

00:58:52,080 --> 00:58:55,020
more accurate but actually we're quite

00:58:53,369 --> 00:58:58,200
pleased with the progress we've made so

00:58:55,020 --> 00:59:00,300
far so for TEDx this is still very much

00:58:58,200 --> 00:59:02,580
the beginning you know we've continually

00:59:00,300 --> 00:59:04,470
you know we set out our aims early we

00:59:02,580 --> 00:59:06,480
knew that we you know we knew we weren't

00:59:04,470 --> 00:59:08,640
going to get to charge by zero but we

00:59:06,480 --> 00:59:10,140
knew that more important was to not flag

00:59:08,640 --> 00:59:13,320
false positives that was really our big

00:59:10,140 --> 00:59:16,800
guys identified some chargebacks without

00:59:13,320 --> 00:59:19,410
causing you know bad flags at the same

00:59:16,800 --> 00:59:20,640
time we've redefined those slightly as

00:59:19,410 --> 00:59:22,140
we've gone along we've gone from saying

00:59:20,640 --> 00:59:23,910
we only use all the data to say we're

00:59:22,140 --> 00:59:25,710
gonna look at it by store but having

00:59:23,910 --> 00:59:26,790
that aim in mind means you can focus

00:59:25,710 --> 00:59:28,950
what you're trying to do rather than

00:59:26,790 --> 00:59:30,990
just throwing algorithms at star

00:59:28,950 --> 00:59:34,980
and seeing what happens you can start

00:59:30,990 --> 00:59:38,240
focusing it a lot more you know you have

00:59:34,980 --> 00:59:40,470
it is complex machine learning is hard

00:59:38,240 --> 00:59:42,510
we've tried to use techniques that we

00:59:40,470 --> 00:59:44,790
understand because it means when stuff

00:59:42,510 --> 00:59:47,040
doesn't work we have half a chance of

00:59:44,790 --> 00:59:48,599
knowing why it doesn't work yeah so

00:59:47,040 --> 00:59:51,230
sometimes it's taken a bit of googling

00:59:48,599 --> 00:59:54,180
most the time it took a bit of doing but

00:59:51,230 --> 00:59:55,740
yeah because we have some grasp of

00:59:54,180 --> 00:59:57,180
what's going on we can go okay you know

00:59:55,740 --> 00:59:59,130
I understand why that doesn't work or I

00:59:57,180 --> 01:00:01,320
understand why this does work and it

00:59:59,130 --> 01:00:02,970
means that we can change how we're doing

01:00:01,320 --> 01:00:05,160
things we can change our data choices we

01:00:02,970 --> 01:00:06,690
can change our metric choices our

01:00:05,160 --> 01:00:09,630
dimension choices whatever it might be

01:00:06,690 --> 01:00:11,099
to improve those results we might

01:00:09,630 --> 01:00:13,050
consider more complex algorithms in

01:00:11,099 --> 01:00:15,089
future but ultimately if you can

01:00:13,050 --> 01:00:16,770
understand what's going on if you can

01:00:15,089 --> 01:00:18,660
understand why something works or why

01:00:16,770 --> 01:00:22,349
something doesn't work that's half the

01:00:18,660 --> 01:00:24,480
battle as I've said a couple of times

01:00:22,349 --> 01:00:25,650
try it with simple data first if you've

01:00:24,480 --> 01:00:28,770
got a lot of data that you don't

01:00:25,650 --> 01:00:30,270
necessarily fully understand test your

01:00:28,770 --> 01:00:32,430
implementation on something that you do

01:00:30,270 --> 01:00:34,680
you something is silliest fruit it seems

01:00:32,430 --> 01:00:36,300
ridiculous and you know I had spent you

01:00:34,680 --> 01:00:39,450
know an hour right saying that would

01:00:36,300 --> 01:00:41,040
classify fruit that's of no use but it

01:00:39,450 --> 01:00:43,380
meant that I knew that how we were

01:00:41,040 --> 01:00:45,720
implementing it did work and therefore

01:00:43,380 --> 01:00:48,270
if we didn't get results we wanted it's

01:00:45,720 --> 01:00:49,710
not the fault of the implementation it's

01:00:48,270 --> 01:00:54,599
either that we put the wrong algorithm

01:00:49,710 --> 01:00:56,970
or all the data is not any good so you

01:00:54,599 --> 01:00:58,829
know make sure that you know that you

01:00:56,970 --> 01:01:01,200
know remove those technical question

01:00:58,829 --> 01:01:02,550
marks first we've learned a lot doing

01:01:01,200 --> 01:01:04,770
this we've done it all by

01:01:02,550 --> 01:01:06,180
experimentation you know as I said I'm

01:01:04,770 --> 01:01:09,720
not a mathematician I am NOT a data

01:01:06,180 --> 01:01:12,240
scientist I wouldn't claim to be in a

01:01:09,720 --> 01:01:16,050
million years the fact I would be alive

01:01:12,240 --> 01:01:17,790
for a million years helps so just try

01:01:16,050 --> 01:01:19,980
things out stuff will work stuff won't

01:01:17,790 --> 01:01:21,750
work if you learn a lesson each time and

01:01:19,980 --> 01:01:23,069
like we went from that one where

01:01:21,750 --> 01:01:25,410
everything was classified as not

01:01:23,069 --> 01:01:26,700
fraudulent and we've now you know we've

01:01:25,410 --> 01:01:27,660
taken a step and we've learned something

01:01:26,700 --> 01:01:28,920
we'll check another step we've learned

01:01:27,660 --> 01:01:30,930
something so something that actually we

01:01:28,920 --> 01:01:32,310
can now try and integrate into our

01:01:30,930 --> 01:01:35,430
production application at least on a

01:01:32,310 --> 01:01:40,079
limited scale and then we'll carry on

01:01:35,430 --> 01:01:41,480
iterating and improving more so I thank

01:01:40,079 --> 01:01:46,920
you

01:01:41,480 --> 01:01:46,920
[Applause]

01:01:47,860 --> 01:01:53,670
I think we're literally about an hour

01:01:50,320 --> 01:01:53,670
but if there are a couple of questions

01:01:57,330 --> 01:02:02,250
hello oh god they're Fritton stuff down

01:02:02,460 --> 01:02:09,310
yes okay basically you talked about K

01:02:06,760 --> 01:02:13,180
and an algorithm which is basically

01:02:09,310 --> 01:02:16,900
making the decision on 1 or 0 or yes or

01:02:13,180 --> 01:02:21,280
no so it sounds a bit similar to the

01:02:16,900 --> 01:02:22,600
decision tree algorithm is it so I guess

01:02:21,280 --> 01:02:25,240
it is in that sense they accept with

01:02:22,600 --> 01:02:27,580
with the decision tree as long as I

01:02:25,240 --> 01:02:28,780
understand it this is what I'm gonna

01:02:27,580 --> 01:02:31,270
show that I know nothing other than

01:02:28,780 --> 01:02:32,800
what's on the slides you you're going

01:02:31,270 --> 01:02:34,960
down that path so that's when I said

01:02:32,800 --> 01:02:36,160
like with K and n there is a relation

01:02:34,960 --> 01:02:38,800
between different dimensions but it's

01:02:36,160 --> 01:02:40,840
not a if you go down this path you have

01:02:38,800 --> 01:02:42,700
to carry on down this path each data can

01:02:40,840 --> 01:02:43,930
just move the distance back and forwards

01:02:42,700 --> 01:02:45,970
whereas in the decision tree you'll go

01:02:43,930 --> 01:02:48,490
you've made this decision now you're

01:02:45,970 --> 01:02:49,600
branching that way you can't suddenly be

01:02:48,490 --> 01:02:51,580
moving across because you've already

01:02:49,600 --> 01:02:54,010
made a predetermined decision further up

01:02:51,580 --> 01:02:57,090
but it's kind of yeah I guess it works

01:02:54,010 --> 01:02:57,090
in an inner similar way

01:03:02,029 --> 01:03:07,160
how did it work performance wise like

01:03:04,579 --> 01:03:09,709
how much data did you have to use for

01:03:07,160 --> 01:03:12,709
training and then when you had to make a

01:03:09,709 --> 01:03:14,359
decision how much because we were down

01:03:12,709 --> 01:03:20,630
sampling a good day turn up something

01:03:14,359 --> 01:03:25,640
are on the global tests the the training

01:03:20,630 --> 01:03:26,900
took about two hours a lot of that to

01:03:25,640 --> 01:03:27,859
fail was fetching the data source we had

01:03:26,900 --> 01:03:30,140
to pull that out for the database and

01:03:27,859 --> 01:03:31,549
then reformat the data and you couldn't

01:03:30,140 --> 01:03:32,959
do that in real time what you'd have to

01:03:31,549 --> 01:03:34,880
do is you basically have to have a a

01:03:32,959 --> 01:03:36,709
running demon that had the training data

01:03:34,880 --> 01:03:38,569
plugged in it was just listening for a

01:03:36,709 --> 01:03:40,249
hey can you give me a decision on this

01:03:38,569 --> 01:03:42,140
payment so you do the training once and

01:03:40,249 --> 01:03:44,239
leave that as a long-running process you

01:03:42,140 --> 01:03:46,609
know either in PHP or in go or whatever

01:03:44,239 --> 01:03:48,319
and then you just literally have an API

01:03:46,609 --> 01:03:49,789
on point that says this is a payment

01:03:48,319 --> 01:03:50,959
tell me what you think only it was so

01:03:49,789 --> 01:03:52,489
you wouldn't have to retrain every time

01:03:50,959 --> 01:04:03,949
it would just then give you an answer

01:03:52,489 --> 01:04:06,640
back thank you right so you were

01:04:03,949 --> 01:04:08,420
mentioning when you were training your

01:04:06,640 --> 01:04:09,949
machine learning that you were

01:04:08,420 --> 01:04:13,279
originally you started using all that I

01:04:09,949 --> 01:04:15,259
mentioned from the payments and then you

01:04:13,279 --> 01:04:17,119
said you removed some of them I guess a

01:04:15,259 --> 01:04:19,489
was there criteria you used to determine

01:04:17,119 --> 01:04:20,719
which dimensions to remove and be in the

01:04:19,489 --> 01:04:27,229
ones you kept did you notice any

01:04:20,719 --> 01:04:29,209
correlation in the forum payments a not

01:04:27,229 --> 01:04:31,130
really other than instinct I mean we did

01:04:29,209 --> 01:04:33,019
so we took a one point for example we

01:04:31,130 --> 01:04:34,279
took out country because we were like

01:04:33,019 --> 01:04:36,829
well actually perhaps the country isn't

01:04:34,279 --> 01:04:38,449
that relevant and the accuracy dropped

01:04:36,829 --> 01:04:40,670
by about 20% so like no we'll put that

01:04:38,449 --> 01:04:42,769
back in I'm so if I'm honest there

01:04:40,670 --> 01:04:44,660
aren't there are statistical ways of

01:04:42,769 --> 01:04:47,299
doing it that are way beyond what I

01:04:44,660 --> 01:04:48,739
understand so in in our experience we

01:04:47,299 --> 01:04:50,180
did try an error we took stuff out and

01:04:48,739 --> 01:04:51,170
we're know that didn't work or we took

01:04:50,180 --> 01:04:52,670
the fat one actually that's either

01:04:51,170 --> 01:04:55,459
improved it or not made any difference

01:04:52,670 --> 01:04:56,930
at all so we'll leave out and obviously

01:04:55,459 --> 01:04:57,829
the ones where for the original

01:04:56,930 --> 01:05:00,529
naivebayes

01:04:57,829 --> 01:05:01,699
with stuff together to make two things

01:05:00,529 --> 01:05:04,789
into one of them we could get rid of

01:05:01,699 --> 01:05:07,160
that because that light relevant light

01:05:04,789 --> 01:05:10,160
relation if you like between the points

01:05:07,160 --> 01:05:13,089
existed in the KNN anyway so you've been

01:05:10,160 --> 01:05:13,089

YouTube URL: https://www.youtube.com/watch?v=hr6l9g2Fbis


