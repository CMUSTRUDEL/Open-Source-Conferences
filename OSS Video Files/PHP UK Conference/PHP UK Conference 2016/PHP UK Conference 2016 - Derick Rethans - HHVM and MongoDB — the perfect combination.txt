Title: PHP UK Conference 2016 - Derick Rethans - HHVM and MongoDB â€” the perfect combination
Publication date: 2016-03-16
Playlist: PHP UK Conference 2016
Description: 
	In this talk we will discuss using HHVM and MongoDB together. In the last months I have written an HHVM extension for MongoDB, that mimics the API of a similar PHP extension. On top of each extension we have a layer in PHP that provides the more user friendly aspects of the driver. The PHP part of the driver gets accelerated to nearly the same speed as the extension written in C++, while being vastly easier to update and maintain. We will dive in to the architecture of the whole setup, HHVM's JIT and extension APIs as well as some comparisons between running your app on PHP+MongoDB and HHVM+MongoDB.

Slides at https://derickrethans.nl/talks/hhvmmongo-phpuk16
Captions: 
	00:00:04,750 --> 00:00:09,190
okay well cause afternoon with my talk

00:00:07,660 --> 00:00:12,100
8ag i meant moment to be the perfect

00:00:09,190 --> 00:00:14,320
combination bit of a strong title if you

00:00:12,100 --> 00:00:16,299
ask me and we'll get back to that

00:00:14,320 --> 00:00:18,939
statement later during a presentation

00:00:16,299 --> 00:00:22,840
not sure what I'm perfectly a hundred

00:00:18,939 --> 00:00:25,720
percent agree with a taxi only one part

00:00:22,840 --> 00:00:28,300
of it it's so a bit of myself on Derek

00:00:25,720 --> 00:00:30,369
I'm Dutch I'm also British now since mon

00:00:28,300 --> 00:00:31,930
CM hemisphere in London I'm one of the

00:00:30,369 --> 00:00:34,360
PHP natives you among to be driving

00:00:31,930 --> 00:00:35,800
maintain errs I wrote all the things as

00:00:34,360 --> 00:00:39,460
well XD book you might have heard of it

00:00:35,800 --> 00:00:41,380
if not go google for it I like Maps I

00:00:39,460 --> 00:00:43,420
like being i also like whiskey but

00:00:41,380 --> 00:00:46,719
there's no unicode character for that

00:00:43,420 --> 00:00:49,930
tales so maybe maybe in the future I'm

00:00:46,719 --> 00:00:52,750
so yeah let's see both your word where

00:00:49,930 --> 00:00:53,890
i'm going with its right so 83 m is kind

00:00:52,750 --> 00:00:58,239
of knew how many of you playing

00:00:53,890 --> 00:00:59,649
detective just a show of hands all of

00:00:58,239 --> 00:01:01,870
you could raise the hand so no i

00:00:59,649 --> 00:01:06,970
wouldn't know the difference ok very

00:01:01,870 --> 00:01:10,090
good trigano boy I a few hands how many

00:01:06,970 --> 00:01:11,500
of you have plated mogudu me that's a

00:01:10,090 --> 00:01:14,890
lot more people that's good needs me

00:01:11,500 --> 00:01:16,360
good nice thing alright so what people

00:01:14,890 --> 00:01:19,450
are not familiar my going to be just a

00:01:16,360 --> 00:01:21,640
very quick slide it's a document storage

00:01:19,450 --> 00:01:23,619
and retrieval engine it's no documents

00:01:21,640 --> 00:01:26,560
like you were documented like Jason like

00:01:23,619 --> 00:01:29,229
documents it's idea is that it operates

00:01:26,560 --> 00:01:32,680
well as one of its use case in very

00:01:29,229 --> 00:01:35,020
large installations lots of data and its

00:01:32,680 --> 00:01:36,549
kima free meaning that how do we need to

00:01:35,020 --> 00:01:38,710
think about how you design your schema

00:01:36,549 --> 00:01:40,329
it offers quite a lot of flexibility in

00:01:38,710 --> 00:01:44,020
how your story data what kind of data

00:01:40,329 --> 00:01:46,600
you store in the database it's great it

00:01:44,020 --> 00:01:48,759
works for many things it's not the

00:01:46,600 --> 00:01:51,880
solution to all your problems hopefully

00:01:48,759 --> 00:01:55,299
too many but not all of them but there's

00:01:51,880 --> 00:01:59,470
a few IDs in there that because it's

00:01:55,299 --> 00:02:01,750
designs free easy to scale and you lose

00:01:59,470 --> 00:02:04,659
a few all the things right so if you

00:02:01,750 --> 00:02:07,060
have a quick look at very very high

00:02:04,659 --> 00:02:08,799
level overview of different types of

00:02:07,060 --> 00:02:10,540
databases and the amount of

00:02:08,799 --> 00:02:13,870
functionality they have things like

00:02:10,540 --> 00:02:15,370
memcache or radar's they set up out to

00:02:13,870 --> 00:02:16,750
the upper left side right are really

00:02:15,370 --> 00:02:18,550
fast

00:02:16,750 --> 00:02:19,720
I'm really easy to scale but I don't

00:02:18,550 --> 00:02:21,550
really provide a lot of functionality

00:02:19,720 --> 00:02:24,010
like memcache you can put in things and

00:02:21,550 --> 00:02:26,260
can retrieve my key right that's fast

00:02:24,010 --> 00:02:27,970
because it's simple whereas animal in a

00:02:26,260 --> 00:02:30,730
relational database you have all your

00:02:27,970 --> 00:02:33,130
triggers your few joins foreign keys all

00:02:30,730 --> 00:02:36,040
that kind of stuff which makes it

00:02:33,130 --> 00:02:38,110
sometimes very difficult to easily scale

00:02:36,040 --> 00:02:42,190
up a single installation over multiple

00:02:38,110 --> 00:02:43,540
database nuts what we try to do good

00:02:42,190 --> 00:02:45,190
more going to be still be very

00:02:43,540 --> 00:02:46,840
feature-rich where the same time also

00:02:45,190 --> 00:02:48,280
make it easy to scare that means that we

00:02:46,840 --> 00:02:50,860
do some things like there's no phone

00:02:48,280 --> 00:02:52,720
keys in them so yeah there's a bit of

00:02:50,860 --> 00:02:54,640
weighing between one side and the other

00:02:52,720 --> 00:02:56,470
sites so that's the one going to be part

00:02:54,640 --> 00:02:58,989
of the presentation and of course to

00:02:56,470 --> 00:03:01,840
talk to a database you need a driver and

00:02:58,989 --> 00:03:04,900
me being only PHP driver team from I'm

00:03:01,840 --> 00:03:07,120
going to be and I inherited the project

00:03:04,900 --> 00:03:09,880
the driver when I started about

00:03:07,120 --> 00:03:12,250
four years ago and wasn't in a great

00:03:09,880 --> 00:03:13,840
shape hole in a great shape for many

00:03:12,250 --> 00:03:16,570
different reasons it's grown organically

00:03:13,840 --> 00:03:18,970
it wasn't anywhere near the same as

00:03:16,570 --> 00:03:22,450
other languages drivers which drives our

00:03:18,970 --> 00:03:23,830
support team kind of crazy and yeah we

00:03:22,450 --> 00:03:25,630
still have to support more things right

00:03:23,830 --> 00:03:28,120
so try we'll try me how to add new

00:03:25,630 --> 00:03:30,370
features to it for to support your

00:03:28,120 --> 00:03:33,250
versions of the servers they features to

00:03:30,370 --> 00:03:34,810
it then people who are requesting things

00:03:33,250 --> 00:03:36,280
like the needles have timeouts and a

00:03:34,810 --> 00:03:38,260
very nose always implement in the most

00:03:36,280 --> 00:03:41,350
optimal way like in static methods

00:03:38,260 --> 00:03:45,130
instead of having damage normal methods

00:03:41,350 --> 00:03:46,630
on an object and it also a mess it was a

00:03:45,130 --> 00:03:48,579
bit of a massive to the point where we

00:03:46,630 --> 00:03:50,620
decide of all we need to do something

00:03:48,579 --> 00:03:52,989
about that and rewrite this whole driver

00:03:50,620 --> 00:03:54,940
so that's what we did if you wrote the

00:03:52,989 --> 00:03:58,360
whole driver so but before that we set

00:03:54,940 --> 00:04:00,160
some goals and this is where HSN will

00:03:58,360 --> 00:04:02,079
come into play in a moment so we want to

00:04:00,160 --> 00:04:03,280
support multi engine like back at a time

00:04:02,079 --> 00:04:05,560
when we're designing this about a year

00:04:03,280 --> 00:04:07,540
and a half ago eighty-eight gems getting

00:04:05,560 --> 00:04:09,489
lots abstraction also people playing

00:04:07,540 --> 00:04:12,310
with it and for us it's interesting

00:04:09,489 --> 00:04:15,070
thing because from our point of view

00:04:12,310 --> 00:04:17,650
people that use hgm are in such a

00:04:15,070 --> 00:04:21,220
situation that they have scalability you

00:04:17,650 --> 00:04:22,479
should beat me because running ith vm is

00:04:21,220 --> 00:04:23,650
a little whole lot more difficult i'm

00:04:22,479 --> 00:04:26,080
running peach beach schools are a lot

00:04:23,650 --> 00:04:28,390
better now to be fair but it makes no

00:04:26,080 --> 00:04:30,490
sense to use it unless you're at such a

00:04:28,390 --> 00:04:33,039
scale that the speed increases

00:04:30,490 --> 00:04:34,330
GN is actually really important and of

00:04:33,039 --> 00:04:35,979
course first that's interesting because

00:04:34,330 --> 00:04:37,840
those are the customers that we like to

00:04:35,979 --> 00:04:39,310
have I can be broke the source you can

00:04:37,840 --> 00:04:42,069
use one review for free as much as you

00:04:39,310 --> 00:04:44,650
want but we also need to make money like

00:04:42,069 --> 00:04:46,360
everybody and having the bigger players

00:04:44,650 --> 00:04:48,220
there makes a lot of sense for us to

00:04:46,360 --> 00:04:49,599
then also I the driver for so this is

00:04:48,220 --> 00:04:51,940
where the multiple engines comes into

00:04:49,599 --> 00:04:54,099
play and we thought about php5 of course

00:04:51,940 --> 00:04:56,380
netted him and we wanted to have a very

00:04:54,099 --> 00:04:58,360
small extension the smoke sanctioned

00:04:56,380 --> 00:05:01,270
have basically meant influence the bare

00:04:58,360 --> 00:05:02,410
minimum the reasons that because we're

00:05:01,270 --> 00:05:04,270
going to have to influence multiple

00:05:02,410 --> 00:05:06,550
times we don't want to do is very

00:05:04,270 --> 00:05:08,889
difficult ebay c++ base extension

00:05:06,550 --> 00:05:10,630
development many times and make a really

00:05:08,889 --> 00:05:13,690
complicated api around that that would

00:05:10,630 --> 00:05:16,900
have thought we'd have to maintain but

00:05:13,690 --> 00:05:18,310
we also wanted to have it fast and what

00:05:16,900 --> 00:05:20,110
we want to do is make sure that people

00:05:18,310 --> 00:05:21,940
still use a nice functionality that the

00:05:20,110 --> 00:05:24,009
current or the old driver has a

00:05:21,940 --> 00:05:25,630
song everyone to vote on top of existing

00:05:24,009 --> 00:05:27,639
code like we didn't want to reimplement

00:05:25,630 --> 00:05:30,069
the whole protocol that you used to talk

00:05:27,639 --> 00:05:31,659
to the server so lots of things that we

00:05:30,069 --> 00:05:33,550
wanted to do there but the thing the

00:05:31,659 --> 00:05:37,180
point i'm going to focus on is here is

00:05:33,550 --> 00:05:38,530
support for most four engines I have to

00:05:37,180 --> 00:05:41,199
admit we did into Congress all those

00:05:38,530 --> 00:05:45,159
calls either but yeah that's how it goes

00:05:41,199 --> 00:05:46,870
so which entrance and php5 nhac and

00:05:45,159 --> 00:05:50,710
those those were starting points and

00:05:46,870 --> 00:05:53,949
then Ian half ago two are more but talk

00:05:50,710 --> 00:05:55,509
about having a new thing p 2 p 7 which

00:05:53,949 --> 00:05:57,219
is going to be amazingly fast and stuff

00:05:55,509 --> 00:05:59,830
like that so we have 55 years old

00:05:57,219 --> 00:06:02,860
favorite ATMs kind of new it's a little

00:05:59,830 --> 00:06:04,599
bit better now and every HP seven which

00:06:02,860 --> 00:06:07,180
is at that state when we were doing this

00:06:04,599 --> 00:06:10,000
in its infancy right lots of things are

00:06:07,180 --> 00:06:12,039
happening it was very unstable we don't

00:06:10,000 --> 00:06:14,620
support please p53 and higher we did

00:06:12,039 --> 00:06:17,770
well we change that to 54 and high

00:06:14,620 --> 00:06:19,690
because if you fried an extension the

00:06:17,770 --> 00:06:23,880
difference between 53 and 54 is kind of

00:06:19,690 --> 00:06:26,289
high usually let a fabulous all but

00:06:23,880 --> 00:06:27,699
sporting five to cause so much extra

00:06:26,289 --> 00:06:29,229
time and it was already not supported

00:06:27,699 --> 00:06:32,440
anymore anyway so we decided not to lose

00:06:29,229 --> 00:06:35,319
a twitch again I mean bonus started

00:06:32,440 --> 00:06:37,389
doing this ha0 at 36 but they change

00:06:35,319 --> 00:06:40,719
quite a few API so we set a minimum of

00:06:37,389 --> 00:06:42,760
39 and now we do also do 3 10 11 itself

00:06:40,719 --> 00:06:43,960
which came out last week and have a

00:06:42,760 --> 00:06:45,789
speech v7 where

00:06:43,960 --> 00:06:49,240
writing this and didn't exist yet so it

00:06:45,789 --> 00:06:51,340
really brand new all right so I can't

00:06:49,240 --> 00:06:56,110
really say much about php5 just some

00:06:51,340 --> 00:06:59,069
elephants always fun to have yeah how

00:06:56,110 --> 00:07:01,240
many of you are running PP 54 to 56 I

00:06:59,069 --> 00:07:07,930
probably should also be first question

00:07:01,240 --> 00:07:10,930
who doesn't okay a few that run 5 30 or

00:07:07,930 --> 00:07:15,310
seven san yeah there we go that's the

00:07:10,930 --> 00:07:17,470
correct answer and then the HP seven

00:07:15,310 --> 00:07:19,930
user Lance is very very similar to a PHP

00:07:17,470 --> 00:07:23,650
five sixes your applications on work

00:07:19,930 --> 00:07:26,380
easily but that is a totally different

00:07:23,650 --> 00:07:28,000
story a story for internals the

00:07:26,380 --> 00:07:32,020
extensions that you write for php5 and

00:07:28,000 --> 00:07:33,520
p37 are absolutely totally different so

00:07:32,020 --> 00:07:36,330
much that we thought that we'd have to

00:07:33,520 --> 00:07:38,470
write a new different extension for it

00:07:36,330 --> 00:07:40,690
some more elephants eating cake and

00:07:38,470 --> 00:07:44,949
drinking coffee and then at the other

00:07:40,690 --> 00:07:46,990
side ef8 ATM but a KTM is the third to

00:07:44,949 --> 00:07:49,030
fourth in the incarnation of whatever

00:07:46,990 --> 00:07:51,880
we're doing a TV the first thing

00:07:49,030 --> 00:07:54,729
facebook tried to make peach be fast set

00:07:51,880 --> 00:07:57,250
by from remember correctly supporting a

00:07:54,729 --> 00:07:58,449
pc and if you familiar it up but we have

00:07:57,250 --> 00:08:01,690
run it in the past to make things go

00:07:58,449 --> 00:08:02,949
faster yep so that was the first project

00:08:01,690 --> 00:08:04,990
then they had a fill project that they

00:08:02,949 --> 00:08:07,479
don't talk about so i won't hitter and

00:08:04,990 --> 00:08:08,949
then they realized that a pc thats a

00:08:07,479 --> 00:08:10,630
good thing it makes peach be fast with

00:08:08,949 --> 00:08:12,009
it's only up to a certain point out of

00:08:10,630 --> 00:08:14,500
can do I so they started a few other

00:08:12,009 --> 00:08:17,979
projects and one of those was hip hop

00:08:14,500 --> 00:08:20,860
for PHP HIPAA for PHP what it would do

00:08:17,979 --> 00:08:22,780
is we'll take your PHP code base and you

00:08:20,860 --> 00:08:24,610
run its compato but it would convert its

00:08:22,780 --> 00:08:27,759
internet to C++ and then compile it into

00:08:24,610 --> 00:08:31,270
the binary that works if you have a lot

00:08:27,759 --> 00:08:35,620
of code and you need to make this fast

00:08:31,270 --> 00:08:38,409
right converting PHP to see C or C++ is

00:08:35,620 --> 00:08:40,329
a really difficult thing to do because C

00:08:38,409 --> 00:08:41,560
and C++ tower type languages all right

00:08:40,329 --> 00:08:44,200
they have integers they have strengths

00:08:41,560 --> 00:08:46,779
HP has cells as well but coverts very

00:08:44,200 --> 00:08:49,329
easily in between them PHP and Charlie

00:08:46,779 --> 00:08:51,700
does that by supporting called a

00:08:49,329 --> 00:08:54,790
deceitful which is basically a value

00:08:51,700 --> 00:08:56,410
object that contains the tide and then

00:08:54,790 --> 00:08:58,959
pointers to

00:08:56,410 --> 00:09:01,959
to the data that's a bit different in

00:08:58,959 --> 00:09:04,540
five and PG seven but for the concept is

00:09:01,959 --> 00:09:06,910
the same whereas if you need to compile

00:09:04,540 --> 00:09:09,300
that down to C++ you really sort of need

00:09:06,910 --> 00:09:12,100
to know the type series efficiently and

00:09:09,300 --> 00:09:15,459
dealing that is integer type and C or

00:09:12,100 --> 00:09:17,649
C++ is really fast but how would you

00:09:15,459 --> 00:09:19,870
handle converting those two strings on

00:09:17,649 --> 00:09:21,490
the fly and it's a very difficult thing

00:09:19,870 --> 00:09:23,110
to do they manage to do it the

00:09:21,490 --> 00:09:27,480
implementer something very same similar

00:09:23,110 --> 00:09:29,860
to that song that it has it had issues

00:09:27,480 --> 00:09:32,259
writing a hello world application the

00:09:29,860 --> 00:09:35,470
basically does echo hello world in a PHP

00:09:32,259 --> 00:09:37,810
file compiling that took a long time and

00:09:35,470 --> 00:09:39,699
by long time is like several minutes to

00:09:37,810 --> 00:09:42,519
compel them to bite you get a binary out

00:09:39,699 --> 00:09:44,230
of this that embedded web server has all

00:09:42,519 --> 00:09:46,600
the pp standards of an error and he

00:09:44,230 --> 00:09:48,959
guesses how large that thing killed so

00:09:46,600 --> 00:09:53,199
just holla world's about 25 megabytes

00:09:48,959 --> 00:09:56,139
it's a bit an over-the-top there's some

00:09:53,199 --> 00:09:59,709
rumors that when Facebook itself

00:09:56,139 --> 00:10:03,610
compiled facebook.com PHP code with this

00:09:59,709 --> 00:10:05,649
tool it took um what was it they had

00:10:03,610 --> 00:10:08,160
build machines where had 16 cores in

00:10:05,649 --> 00:10:13,329
them back then was looked quite a lot in

00:10:08,160 --> 00:10:15,310
2008 and they needed 45 minutes with 120

00:10:13,329 --> 00:10:17,019
notes to build a thing and you get is

00:10:15,310 --> 00:10:19,060
like two and half gigabyte binary of

00:10:17,019 --> 00:10:21,720
stuff that's not practical for people to

00:10:19,060 --> 00:10:25,029
use unless you at the skill Facebook and

00:10:21,720 --> 00:10:26,769
I'd also didn't implement virtual to

00:10:25,029 --> 00:10:28,060
functionality in Peaceville it did do

00:10:26,769 --> 00:10:30,310
the basic things like the basic

00:10:28,060 --> 00:10:32,709
functionality the basic standard library

00:10:30,310 --> 00:10:34,449
functions and all the object oriented

00:10:32,709 --> 00:10:37,240
model because they needed to have that

00:10:34,449 --> 00:10:39,730
to render their own coat but it didn't

00:10:37,240 --> 00:10:41,709
implement many of the extensions because

00:10:39,730 --> 00:10:44,139
they had to be rewritten to work with

00:10:41,709 --> 00:10:46,959
their converted type model and of course

00:10:44,139 --> 00:10:48,759
that basically means rewriting PHP which

00:10:46,959 --> 00:10:52,149
isn't great they defecated this thing in

00:10:48,759 --> 00:10:53,920
2013 a bit before that they started

00:10:52,149 --> 00:10:57,430
working on something new called a kg m

00:10:53,920 --> 00:10:59,709
which is hip hop virtual machine they

00:10:57,430 --> 00:11:01,779
started in 2010 abandoning the whole

00:10:59,709 --> 00:11:05,110
thing of combining all over to C++ and

00:11:01,779 --> 00:11:06,790
one go but instead implementing

00:11:05,110 --> 00:11:09,009
something that people already internally

00:11:06,790 --> 00:11:10,209
did convert things from your source to

00:11:09,009 --> 00:11:13,350
internet

00:11:10,209 --> 00:11:15,100
comprenez word abstract syntax tree

00:11:13,350 --> 00:11:18,759
converting that to another intermediate

00:11:15,100 --> 00:11:20,709
format go compiling that into byte code

00:11:18,759 --> 00:11:22,300
which then the interpreter would run and

00:11:20,709 --> 00:11:26,110
that is the same thing that PHP sort of

00:11:22,300 --> 00:11:27,309
this but like minor differences but

00:11:26,110 --> 00:11:29,499
there are less something on top of that

00:11:27,309 --> 00:11:31,629
what the others on top of that is a

00:11:29,499 --> 00:11:33,779
engine a jet engine that would look at

00:11:31,629 --> 00:11:36,399
rich bits of the code I used a lot and

00:11:33,779 --> 00:11:38,860
compile those two native code that runs

00:11:36,399 --> 00:11:41,259
directly cpu and I could do that because

00:11:38,860 --> 00:11:43,389
things running in the engine they kept

00:11:41,259 --> 00:11:45,610
those of information about types so they

00:11:43,389 --> 00:11:48,790
knew where a specific function would

00:11:45,610 --> 00:11:53,439
only ever have a integer or only ever

00:11:48,790 --> 00:11:55,689
deal with a string they added

00:11:53,439 --> 00:11:58,779
functionality later so that you can

00:11:55,689 --> 00:12:00,249
actually type in those things in PHP by

00:11:58,779 --> 00:12:01,389
the time they come called PHP anymore

00:12:00,249 --> 00:12:03,579
and have to call something else because

00:12:01,389 --> 00:12:05,920
it is verges on the language I'll get

00:12:03,579 --> 00:12:09,420
back to the old language called hack and

00:12:05,920 --> 00:12:11,319
hack is an extension of PHP that's a

00:12:09,420 --> 00:12:14,079
traditional function i have that on a

00:12:11,319 --> 00:12:15,939
lot of slide they're also orders a lot

00:12:14,079 --> 00:12:17,769
more standard library staff and is

00:12:15,939 --> 00:12:20,290
because they wrote a an abstraction

00:12:17,769 --> 00:12:23,290
layer that allows existing PHP

00:12:20,290 --> 00:12:24,999
extensions to work with a th film I've

00:12:23,290 --> 00:12:27,309
submit that didn't work on a percent but

00:12:24,999 --> 00:12:30,220
it it was a very good base for them to

00:12:27,309 --> 00:12:32,290
start out doing this and it's much more

00:12:30,220 --> 00:12:33,730
sophisticated engine is much more

00:12:32,290 --> 00:12:35,410
complicated as well if you ever looked

00:12:33,730 --> 00:12:37,629
at the internals is written in many

00:12:35,410 --> 00:12:41,470
languages his C++ Hector languages with

00:12:37,629 --> 00:12:44,199
anoka Mel I've never seen that goat but

00:12:41,470 --> 00:12:47,220
hard work succumb read it it's it's very

00:12:44,199 --> 00:12:49,990
very different from from anything else

00:12:47,220 --> 00:12:52,449
so you run a kitchen production very

00:12:49,990 --> 00:12:55,360
much as you use php-fpm in production

00:12:52,449 --> 00:12:57,670
which is going away from this enormously

00:12:55,360 --> 00:13:01,600
big binary that's a several gigabytes

00:12:57,670 --> 00:13:04,629
large that you run then again I have to

00:13:01,600 --> 00:13:07,089
say if you compile yourself 8h p.m. in

00:13:04,629 --> 00:13:09,220
debug mode you still get a gigabytes and

00:13:07,089 --> 00:13:10,959
a half binary out of this course has so

00:13:09,220 --> 00:13:14,379
many debugging symbols it can move

00:13:10,959 --> 00:13:16,299
recommend you do that at home I I had to

00:13:14,379 --> 00:13:19,829
ask for a new faster machine to build a

00:13:16,299 --> 00:13:22,540
trailer but two half hours on my laptop

00:13:19,829 --> 00:13:23,799
that it supports now almost all of your

00:13:22,540 --> 00:13:24,130
standard frameworks that you can think

00:13:23,799 --> 00:13:27,700
of

00:13:24,130 --> 00:13:29,350
of Drupal WordPress mediawiki the

00:13:27,700 --> 00:13:32,200
optimized heavenly for mediawiki because

00:13:29,350 --> 00:13:33,760
Wikipedia moved from running on PHP to

00:13:32,200 --> 00:13:35,110
running on later to em somewhere last

00:13:33,760 --> 00:13:37,900
year believe for maybe two years ago

00:13:35,110 --> 00:13:39,910
it's very easy to get their freak on

00:13:37,900 --> 00:13:43,360
bail bond eastern on 64-bit linux and

00:13:39,910 --> 00:13:46,540
they have created packages for debian

00:13:43,360 --> 00:13:49,990
ubuntu not all the versions it's sort of

00:13:46,540 --> 00:13:51,670
works on mac OS x it sort of works on

00:13:49,990 --> 00:13:55,210
windows ish although that's not official

00:13:51,670 --> 00:13:56,560
if you do not run debian based linux

00:13:55,210 --> 00:13:58,810
you're going to have to compound it

00:13:56,560 --> 00:14:00,820
yourself and good luck for that it's

00:13:58,810 --> 00:14:04,480
difficult it's difficult because its

00:14:00,820 --> 00:14:05,680
uses latest c standard stuff but not

00:14:04,480 --> 00:14:07,360
always so you can't wear the latest

00:14:05,680 --> 00:14:09,610
version which you need to run one just

00:14:07,360 --> 00:14:10,810
before that and i had a lot of trouble

00:14:09,610 --> 00:14:14,950
compiling that and it takes a long long

00:14:10,810 --> 00:14:17,410
time so this as a solution it is it is

00:14:14,950 --> 00:14:20,560
good it works really well but it is not

00:14:17,410 --> 00:14:23,590
easy to deploy how fast is it acts you

00:14:20,560 --> 00:14:24,970
know if so some benchmarks that i have

00:14:23,590 --> 00:14:28,170
submitted injuring myself rasmus

00:14:24,970 --> 00:14:31,150
narrative run at some time ago comparing

00:14:28,170 --> 00:14:34,060
PHP 56 with engines m310 which is a

00:14:31,150 --> 00:14:36,370
previous previous release now just to

00:14:34,060 --> 00:14:39,220
compare how much faster this and I index

00:14:36,370 --> 00:14:40,810
all this on HP 56 being warm cuz the

00:14:39,220 --> 00:14:42,880
just too much disparity between a

00:14:40,810 --> 00:14:44,260
different frameworks here and you can

00:14:42,880 --> 00:14:46,660
see in RuPaul's about fifty percent

00:14:44,260 --> 00:14:49,840
faster WordPress about one hundred fifty

00:14:46,660 --> 00:14:51,610
percent faster magento and PHP will be

00:14:49,840 --> 00:14:53,230
about fifty percent faster so yeah it's

00:14:51,610 --> 00:14:55,450
significantly faster alright and if

00:14:53,230 --> 00:14:57,880
you're in such a situation where

00:14:55,450 --> 00:14:59,440
performance matters running itunes fear

00:14:57,880 --> 00:15:02,260
makes a lot of sense song in like a

00:14:59,440 --> 00:15:04,000
media wiki reportedly could get rid of

00:15:02,260 --> 00:15:06,340
eighty percent of the servers but by

00:15:04,000 --> 00:15:07,900
switching to it and if you have five

00:15:06,340 --> 00:15:10,990
thousands of them that makes a lot of

00:15:07,900 --> 00:15:12,580
sensitive but then on the other side as

00:15:10,990 --> 00:15:14,620
I said it's not easy to deploy that you

00:15:12,580 --> 00:15:16,840
need to know a lot more different things

00:15:14,620 --> 00:15:20,980
than you need to know it beautiful so

00:15:16,840 --> 00:15:25,330
hack the language that a added on top of

00:15:20,980 --> 00:15:27,850
PHP is as extension a lot and it's it

00:15:25,330 --> 00:15:32,350
statically typed it's technically typed

00:15:27,850 --> 00:15:35,589
ish the rd is that while you have your

00:15:32,350 --> 00:15:37,150
normal code base not type hint at all

00:15:35,589 --> 00:15:41,140
there's tools that

00:15:37,150 --> 00:15:42,670
allow the HSN engine to collect

00:15:41,140 --> 00:15:44,620
information about types and use that

00:15:42,670 --> 00:15:48,160
information later on to improve the jet

00:15:44,620 --> 00:15:49,900
engine and at the same time they started

00:15:48,160 --> 00:15:51,820
arming features to it so that you could

00:15:49,900 --> 00:15:54,130
start typing ting new functions itself

00:15:51,820 --> 00:15:58,450
but but allowing you to do vary greatly

00:15:54,130 --> 00:16:00,220
because Facebook's code being large you

00:15:58,450 --> 00:16:01,600
can't just certainly go from one version

00:16:00,220 --> 00:16:03,970
turn all versions and we have all the

00:16:01,600 --> 00:16:05,920
types of clap right it's just too much

00:16:03,970 --> 00:16:08,380
of adults so they've been sadly adding

00:16:05,920 --> 00:16:10,750
of static types in there to increase the

00:16:08,380 --> 00:16:12,160
performance again a bit and from what I

00:16:10,750 --> 00:16:14,830
understand there were now ninety percent

00:16:12,160 --> 00:16:18,070
of the co-pays runs hack and all of its

00:16:14,830 --> 00:16:20,470
have still PHP the peach fee that you

00:16:18,070 --> 00:16:24,610
run on ATM is a piece same PHP code that

00:16:20,470 --> 00:16:26,400
you run on PHP 54 ish so they haven't

00:16:24,610 --> 00:16:28,930
quite up to date with all the latest

00:16:26,400 --> 00:16:31,840
functionality other order pretty good

00:16:28,930 --> 00:16:33,490
with us that's some additional cool

00:16:31,840 --> 00:16:36,460
tools but is that like a static analyzer

00:16:33,490 --> 00:16:38,320
it's a two bynars that you're in

00:16:36,460 --> 00:16:42,370
urinated server which monitors changes

00:16:38,320 --> 00:16:44,560
in your coat and then it figures out the

00:16:42,370 --> 00:16:45,910
types in there and it just some static

00:16:44,560 --> 00:16:47,770
analysis where they actually declare

00:16:45,910 --> 00:16:49,960
chives right when you're passing you

00:16:47,770 --> 00:16:51,670
things correctly in there and it's

00:16:49,960 --> 00:16:53,500
connecting like a reporting state so you

00:16:51,670 --> 00:16:55,630
know that the code that should just

00:16:53,500 --> 00:16:58,270
deployed actually adheres to the times

00:16:55,630 --> 00:17:00,430
that you that you gave it um heck as

00:16:58,270 --> 00:17:02,110
anything to look for Google's impossible

00:17:00,430 --> 00:17:05,940
and if you have a dr heck and then a

00:17:02,110 --> 00:17:08,230
functioning yeah no it's it's like

00:17:05,940 --> 00:17:11,110
typing c and then a functionary right

00:17:08,230 --> 00:17:14,260
its index the word hack has so many

00:17:11,110 --> 00:17:16,810
other names or well things associated

00:17:14,260 --> 00:17:19,720
with is that is very difficult to Google

00:17:16,810 --> 00:17:21,490
with it but heck as a language is

00:17:19,720 --> 00:17:23,980
actually kind of cool because for my

00:17:21,490 --> 00:17:25,990
point writing extensions for PHP n8 hm

00:17:23,980 --> 00:17:27,400
it integrates actually quite well with

00:17:25,990 --> 00:17:29,760
doing extension writing and making

00:17:27,400 --> 00:17:31,990
things quite a lot easier for for me

00:17:29,760 --> 00:17:33,790
alright so the new architecture of a

00:17:31,990 --> 00:17:35,950
driver and we have this underlaying

00:17:33,790 --> 00:17:37,360
libraries written in C already well

00:17:35,950 --> 00:17:39,490
dealing with connection manager and the

00:17:37,360 --> 00:17:41,290
old one with converting movies data

00:17:39,490 --> 00:17:43,300
types to language specific data type

00:17:41,290 --> 00:17:44,890
like PHP variables or a java variables

00:17:43,300 --> 00:17:46,180
or things like that so if the C Drive

00:17:44,890 --> 00:17:48,870
and it is all the connection management

00:17:46,180 --> 00:17:50,500
and the basement library that does the

00:17:48,870 --> 00:17:53,320
variable cereal

00:17:50,500 --> 00:17:55,200
deserialization to earn things on top of

00:17:53,320 --> 00:17:59,290
that we have the extension 50 php5

00:17:55,200 --> 00:18:01,870
ex-driver the PG 7 driver and a TCM

00:17:59,290 --> 00:18:03,280
driver they all have the same name the

00:18:01,870 --> 00:18:06,310
functionality of them is exactly the

00:18:03,280 --> 00:18:08,080
same or hopefully exactly the same they

00:18:06,310 --> 00:18:10,240
still trying to be still finding like II

00:18:08,080 --> 00:18:12,160
need many tiny things that are not quite

00:18:10,240 --> 00:18:14,200
the same but you don't end up running

00:18:12,160 --> 00:18:15,490
into most of the time and I will top of

00:18:14,200 --> 00:18:18,040
that we have the speech free library

00:18:15,490 --> 00:18:20,830
that is written in PHP code and that is

00:18:18,040 --> 00:18:22,480
quite interesting compared because that

00:18:20,830 --> 00:18:24,760
is the same code that runs on both

00:18:22,480 --> 00:18:27,520
between a chairman because 82 m SS jet

00:18:24,760 --> 00:18:30,910
engine as a potential of speeding death

00:18:27,520 --> 00:18:33,340
PHP code up to the same speed as writing

00:18:30,910 --> 00:18:35,080
the same code in cebu do and this is of

00:18:33,340 --> 00:18:37,690
course great because any of you have

00:18:35,080 --> 00:18:39,100
ever written anything at sea and PHP you

00:18:37,690 --> 00:18:40,510
know that there's a lot used to do it in

00:18:39,100 --> 00:18:42,960
PHP cause you're a keen you have to take

00:18:40,510 --> 00:18:45,460
care of memory management corruption

00:18:42,960 --> 00:18:46,960
sorts of good editors out there for it

00:18:45,460 --> 00:18:49,030
and yeah it's just a much more natural

00:18:46,960 --> 00:18:51,280
whale is much faster to iterate over

00:18:49,030 --> 00:18:52,750
play with things that would be it

00:18:51,280 --> 00:18:55,570
anything you'd write and see you soon

00:18:52,750 --> 00:18:58,720
plus plus so it's a general overview and

00:18:55,570 --> 00:19:01,000
we called our PHP extension phone goes

00:18:58,720 --> 00:19:02,590
that's what Pete's be among go which is

00:19:01,000 --> 00:19:05,800
in your backwards breaking mom going to

00:19:02,590 --> 00:19:07,840
be essential for PHP 54 and higher the

00:19:05,800 --> 00:19:09,580
extension is backwards breaking there is

00:19:07,840 --> 00:19:13,180
now a lay on top of that that implements

00:19:09,580 --> 00:19:15,490
our old drivers API in a PHP library to

00:19:13,180 --> 00:19:17,800
run on top of this new driver so this

00:19:15,490 --> 00:19:22,630
new driver that we writing fungo or

00:19:17,800 --> 00:19:26,530
written it's been released now has has

00:19:22,630 --> 00:19:29,650
been released and on top of that we have

00:19:26,530 --> 00:19:33,490
like this layer now that makes it again

00:19:29,650 --> 00:19:35,380
good to use however we've decided that

00:19:33,490 --> 00:19:36,730
if you want HP seven support we're not

00:19:35,380 --> 00:19:39,310
going to support a video driver anymore

00:19:36,730 --> 00:19:40,480
so if you want sand dune use that in eq

00:19:39,310 --> 00:19:41,950
senior driver which is a good thing for

00:19:40,480 --> 00:19:44,200
us because we get people to move on to

00:19:41,950 --> 00:19:45,820
the new driver as gradually if people

00:19:44,200 --> 00:19:50,050
starting to adopt HP seven should think

00:19:45,820 --> 00:19:53,380
is a nice thing and this is very minimal

00:19:50,050 --> 00:19:54,820
api very basic it's namespace it's a

00:19:53,380 --> 00:19:57,030
nice little extension it's really fast

00:19:54,820 --> 00:20:00,820
i'll get back to that in a moment and

00:19:57,030 --> 00:20:02,410
hippo again it's a cute funny name that

00:20:00,820 --> 00:20:02,950
we came up internally we don't use that

00:20:02,410 --> 00:20:06,040
name

00:20:02,950 --> 00:20:09,010
outside but you get our little little

00:20:06,040 --> 00:20:11,920
pictures of cute pygmy hippos there and

00:20:09,010 --> 00:20:14,500
and the same implantation as fungo it

00:20:11,920 --> 00:20:16,360
should be a drop-in replacement from a

00:20:14,500 --> 00:20:18,130
composers point of view I repeat free

00:20:16,360 --> 00:20:20,500
library in the South composer it would

00:20:18,130 --> 00:20:22,510
have bent on the same versions for both

00:20:20,500 --> 00:20:25,990
of PHP or the ATM driving you would not

00:20:22,510 --> 00:20:27,910
have to see any difference there that

00:20:25,990 --> 00:20:31,630
doesn't mean that for us that our

00:20:27,910 --> 00:20:34,030
development flows for from ground hipper

00:20:31,630 --> 00:20:36,100
and quite a fake I mean the same release

00:20:34,030 --> 00:20:39,790
process but it doesn't move in the same

00:20:36,100 --> 00:20:44,290
time we have just really well just not

00:20:39,790 --> 00:20:47,650
release a warm load 10 version of hippo

00:20:44,290 --> 00:20:50,620
but we have had a 10 version of foam

00:20:47,650 --> 00:20:52,150
grow since December so there's a bit of

00:20:50,620 --> 00:20:54,820
a difference right and we have because

00:20:52,150 --> 00:20:56,410
we haven't the api's need to match they

00:20:54,820 --> 00:20:59,290
need to match from a composer's point of

00:20:56,410 --> 00:21:02,770
view to know break functionality that

00:20:59,290 --> 00:21:04,420
actually means that although hippo

00:21:02,770 --> 00:21:06,400
hasn't been released yet we already at

00:21:04,420 --> 00:21:09,000
version 11 because if you wouldn't have

00:21:06,400 --> 00:21:12,310
that same API number it would conflict

00:21:09,000 --> 00:21:14,530
when you do comparisons on the API so

00:21:12,310 --> 00:21:16,960
it's it it's strange but it makes sense

00:21:14,530 --> 00:21:19,890
if you think of it and part of this

00:21:16,960 --> 00:21:21,970
extension actually written in heck so

00:21:19,890 --> 00:21:24,190
let's have a quick look at how that

00:21:21,970 --> 00:21:25,780
would look like so this is so this is

00:21:24,190 --> 00:21:28,950
something that looks like PHP code

00:21:25,780 --> 00:21:31,780
business isn't it isn't Rico God has a

00:21:28,950 --> 00:21:35,230
question back eh eh at the top that's a

00:21:31,780 --> 00:21:36,940
sign that is this a heck phone and we

00:21:35,230 --> 00:21:38,500
define a namespace in there and then we

00:21:36,940 --> 00:21:39,520
have a class which is our manager

00:21:38,500 --> 00:21:42,850
classes the way how you create a

00:21:39,520 --> 00:21:46,870
connection to the database and you see

00:21:42,850 --> 00:21:50,050
that we only really have the does not

00:21:46,870 --> 00:21:51,400
work on that screen this way that we

00:21:50,050 --> 00:21:53,290
only really have a signature in there

00:21:51,400 --> 00:21:54,400
it's a signature without a body

00:21:53,290 --> 00:21:56,320
implementation like you'd have an

00:21:54,400 --> 00:21:58,840
interface in PHP because that's readable

00:21:56,320 --> 00:22:01,570
is this it's an interface to be

00:21:58,840 --> 00:22:03,670
implemented by the extension and away

00:22:01,570 --> 00:22:07,210
how he signaled that in a hex file is by

00:22:03,670 --> 00:22:08,620
using native as a annotation that's

00:22:07,210 --> 00:22:11,440
something that PHP doesn't have the heck

00:22:08,620 --> 00:22:13,150
does it also has like scalar type and

00:22:11,440 --> 00:22:16,509
send the head had that for quite a while

00:22:13,150 --> 00:22:18,279
longer than PHP edits in speech v7

00:22:16,509 --> 00:22:19,539
ss return times and it's very important

00:22:18,279 --> 00:22:22,539
that you define those types in here

00:22:19,539 --> 00:22:25,299
because this is a way for 18 streams and

00:22:22,539 --> 00:22:27,219
an extension layer to be able to map the

00:22:25,299 --> 00:22:29,499
variables that you have in PHP directly

00:22:27,219 --> 00:22:31,299
to see types without having to do

00:22:29,499 --> 00:22:36,489
parsing of parameters which you have to

00:22:31,299 --> 00:22:38,679
do in PHP a native function here just

00:22:36,489 --> 00:22:41,229
having a quick example of some C++ stuff

00:22:38,679 --> 00:22:43,690
if you remember the gods sorry the

00:22:41,229 --> 00:22:45,909
constructor here where we said that

00:22:43,690 --> 00:22:47,440
needs to be string and the variables d

00:22:45,909 --> 00:22:49,029
is an and then it has a default value

00:22:47,440 --> 00:22:54,269
and the same thing for the options and

00:22:49,029 --> 00:22:56,409
so on and so on going back to an

00:22:54,269 --> 00:22:58,179
implementation here you can see that

00:22:56,409 --> 00:23:00,369
same stuff coming back so you have a

00:22:58,179 --> 00:23:01,809
string you have an array and those are

00:23:00,369 --> 00:23:03,759
the types and that's what you have to

00:23:01,809 --> 00:23:06,309
deal with then yeah that makes it quite

00:23:03,759 --> 00:23:08,589
a lot of easier to do so this is the

00:23:06,309 --> 00:23:10,379
only thing that we do in our constructor

00:23:08,589 --> 00:23:13,359
to actually set up the whole connection

00:23:10,379 --> 00:23:18,279
including doing SSL and reap rattles and

00:23:13,359 --> 00:23:20,139
wife concerned is very concise but you

00:23:18,279 --> 00:23:22,269
don't have to input everything as Navy

00:23:20,139 --> 00:23:26,259
function you can implement things party

00:23:22,269 --> 00:23:27,909
in PHP and partly in C or C++ that's

00:23:26,259 --> 00:23:32,349
what I've done here it is this extension

00:23:27,909 --> 00:23:35,529
here and so yeah because the class needs

00:23:32,349 --> 00:23:38,409
to keep some internal very information

00:23:35,529 --> 00:23:41,079
it is scary preferences wait for

00:23:38,409 --> 00:23:43,089
developers to tell the database but are

00:23:41,079 --> 00:23:45,609
they okay reading from secondary notes

00:23:43,089 --> 00:23:48,039
and that's important to have control

00:23:45,609 --> 00:23:49,599
over because secondary note nodes can

00:23:48,039 --> 00:23:53,049
land behind the primary notice

00:23:49,599 --> 00:23:55,690
asynchronous replication I'm see that

00:23:53,049 --> 00:23:57,729
the class contains this bit of

00:23:55,690 --> 00:23:59,679
information and because there's no

00:23:57,729 --> 00:24:03,039
situation represented in PHP you need to

00:23:59,679 --> 00:24:05,019
define it as a native data class again

00:24:03,039 --> 00:24:08,109
we have some major functions in here and

00:24:05,019 --> 00:24:10,299
our private functions and our approach

00:24:08,109 --> 00:24:14,440
is to prefix this with a single in the

00:24:10,299 --> 00:24:17,679
score this is where the API differs

00:24:14,440 --> 00:24:19,989
between phone go and efl because the PHP

00:24:17,679 --> 00:24:21,879
driver would not have this function

00:24:19,989 --> 00:24:25,329
because it doesn't need it because it's

00:24:21,879 --> 00:24:26,679
all done and see without the parts of

00:24:25,329 --> 00:24:29,499
written in PHP code so we don't have

00:24:26,679 --> 00:24:30,250
this but it's okay sir private functions

00:24:29,499 --> 00:24:32,500
are small part of

00:24:30,250 --> 00:24:35,170
public API so that's still having the

00:24:32,500 --> 00:24:38,560
same API really right so yeah and then

00:24:35,170 --> 00:24:41,230
you mix mix it up sometimes we do things

00:24:38,560 --> 00:24:43,990
in PHP because it's just a lot faster to

00:24:41,230 --> 00:24:46,990
do like checking whether variable is

00:24:43,990 --> 00:24:49,000
eaten terrain or an object it's a lot

00:24:46,990 --> 00:24:50,770
more difficult to do whereas in PHP is

00:24:49,000 --> 00:24:52,870
easy enough to implement and it's the

00:24:50,770 --> 00:24:54,370
same thing for doing a switch in case

00:24:52,870 --> 00:24:56,710
statement and doing a case statement

00:24:54,370 --> 00:24:58,600
with strength and see that is a

00:24:56,710 --> 00:25:02,500
difficult thing to do where it's easy in

00:24:58,600 --> 00:25:05,140
PHP and then in there recall to native

00:25:02,500 --> 00:25:08,950
functions to do the hard core lack work

00:25:05,140 --> 00:25:12,730
reading yeah and some of those things as

00:25:08,950 --> 00:25:16,000
you can see just setting this on this

00:25:12,730 --> 00:25:18,220
read preference property and this is

00:25:16,000 --> 00:25:19,690
then the native data thing and that's

00:25:18,220 --> 00:25:22,180
the only thing we don't have to do there

00:25:19,690 --> 00:25:24,490
so the the amount of things you have to

00:25:22,180 --> 00:25:26,590
implement and see we try to keep as

00:25:24,490 --> 00:25:29,620
small as possible it's a lot more

00:25:26,590 --> 00:25:31,840
maintenance work but it is not always

00:25:29,620 --> 00:25:33,220
easy to get us in things and think so

00:25:31,840 --> 00:25:36,250
you're just comparing the parameter

00:25:33,220 --> 00:25:37,990
parsing between the C++ drive for HCM

00:25:36,250 --> 00:25:39,880
which is this one line header and

00:25:37,990 --> 00:25:42,370
comparing that to what you have to do in

00:25:39,880 --> 00:25:45,100
the PHP extension and not getting that

00:25:42,370 --> 00:25:46,600
is actually the same thing right there's

00:25:45,100 --> 00:25:48,760
lots of variables that you have to

00:25:46,600 --> 00:25:50,830
define we you have like difference

00:25:48,760 --> 00:25:53,530
between a string and string length yes

00:25:50,830 --> 00:25:56,380
that false which are representative of a

00:25:53,530 --> 00:25:57,970
race and stuff like that and the film

00:25:56,380 --> 00:26:00,010
thing isn't hp7 this looks again

00:25:57,970 --> 00:26:02,500
different it has has to implementation

00:26:00,010 --> 00:26:04,360
of that which isn't great and yeah

00:26:02,500 --> 00:26:06,460
there's like descent Parts parameter

00:26:04,360 --> 00:26:09,010
scholars converts like any random thing

00:26:06,460 --> 00:26:10,330
did you get on the stack tumors like to

00:26:09,010 --> 00:26:12,070
speed feed types it's a lot more

00:26:10,330 --> 00:26:13,590
cumbersome to ride and just just one

00:26:12,070 --> 00:26:16,000
line at a does it automatically for you

00:26:13,590 --> 00:26:17,320
when I started doing this occasion

00:26:16,000 --> 00:26:19,690
didn't have support that it would

00:26:17,320 --> 00:26:21,760
actually check but what you'd written in

00:26:19,690 --> 00:26:24,730
the heck fall when it met what you don't

00:26:21,760 --> 00:26:26,950
see and if you got it wrong it would

00:26:24,730 --> 00:26:29,740
crash without any sort of warning look

00:26:26,950 --> 00:26:30,640
Lee dance now other heuristics for that

00:26:29,740 --> 00:26:33,310
to make sure you don't make those

00:26:30,640 --> 00:26:38,250
mistakes save me quite a bit of work to

00:26:33,310 --> 00:26:40,870
be family so on the driver side it's

00:26:38,250 --> 00:26:42,700
it's false it works really well but it's

00:26:40,870 --> 00:26:43,539
not easy to use and doesn't have nice

00:26:42,700 --> 00:26:46,179
syntax

00:26:43,539 --> 00:26:49,869
so yeah you have to do manager classed

00:26:46,179 --> 00:26:51,340
to run a command to drop it to drop a

00:26:49,869 --> 00:26:54,669
table you need to do this kind of stuff

00:26:51,340 --> 00:26:56,950
that it's not nice right I mean you you

00:26:54,669 --> 00:26:58,299
really want to do drop table on just a

00:26:56,950 --> 00:27:01,179
table name or something like that

00:26:58,299 --> 00:27:03,729
inserting a document isn't simply define

00:27:01,179 --> 00:27:05,919
is document here you need like to create

00:27:03,729 --> 00:27:07,389
this book right thing you can earn the

00:27:05,919 --> 00:27:09,479
documents to it and then you need to

00:27:07,389 --> 00:27:14,200
execute a book write again very

00:27:09,479 --> 00:27:15,909
cumbersome to do but it's fast running a

00:27:14,200 --> 00:27:18,009
crazy same thing he constructed objects

00:27:15,909 --> 00:27:22,629
and then execute it and then do a 4h

00:27:18,009 --> 00:27:24,729
over us but this is easy to implement it

00:27:22,629 --> 00:27:26,499
seasons when implants in both C and C++

00:27:24,729 --> 00:27:29,739
follow different engines that we want to

00:27:26,499 --> 00:27:32,379
remember but it's not what we want you

00:27:29,739 --> 00:27:34,090
to use but we want you to use is the PHP

00:27:32,379 --> 00:27:37,090
live where that lies on top of that it's

00:27:34,090 --> 00:27:41,590
so more than libraries its composer

00:27:37,090 --> 00:27:43,989
ready it does fully namespace and it now

00:27:41,590 --> 00:27:45,820
has a side library to that interacts

00:27:43,989 --> 00:27:49,059
with our all drivers well so the aprs

00:27:45,820 --> 00:27:52,359
are nearly the same and people that work

00:27:49,059 --> 00:27:54,369
on a doctrine odm port project half an

00:27:52,359 --> 00:27:56,859
hour wit and adapters for Bodhi all

00:27:54,369 --> 00:27:59,590
driving and you drive race also using

00:27:56,859 --> 00:28:01,389
this library and this is what we want

00:27:59,590 --> 00:28:05,739
our users to use the internet with

00:28:01,389 --> 00:28:08,139
MongoDB and if you look at the api's for

00:28:05,739 --> 00:28:11,109
that it's much clearer what what you'd

00:28:08,139 --> 00:28:12,669
run like you create database connection

00:28:11,109 --> 00:28:15,190
you selected a tenacious like the

00:28:12,669 --> 00:28:17,679
connection and then all can call drop on

00:28:15,190 --> 00:28:20,440
the collection which is our turn for

00:28:17,679 --> 00:28:23,379
table and you can just drop it inserting

00:28:20,440 --> 00:28:26,200
it you have this document and you call

00:28:23,379 --> 00:28:27,849
insert one only connection I have to

00:28:26,200 --> 00:28:30,729
make a few points about this insert one

00:28:27,849 --> 00:28:35,529
and our all driver had insert update

00:28:30,729 --> 00:28:37,720
delete and final modify and depending on

00:28:35,529 --> 00:28:39,369
what you passed in as argument it might

00:28:37,720 --> 00:28:42,940
do something different like delete I

00:28:39,369 --> 00:28:45,099
would only delete one document insert or

00:28:42,940 --> 00:28:48,269
depending on where I pause in an array

00:28:45,099 --> 00:28:51,099
or multiple arguments or variola

00:28:48,269 --> 00:28:52,480
criteria to decide whether going to

00:28:51,099 --> 00:28:54,820
insert one document and multiple

00:28:52,480 --> 00:28:57,639
documents fine and modified it really do

00:28:54,820 --> 00:28:59,829
five different things from deleting to

00:28:57,639 --> 00:29:03,129
returning on all documents many things

00:28:59,829 --> 00:29:05,259
so as a standardization process between

00:29:03,129 --> 00:29:08,379
all the drivers for all the different

00:29:05,259 --> 00:29:11,950
language Java protocol no no pickle

00:29:08,379 --> 00:29:13,690
fightin all those things revolve instead

00:29:11,950 --> 00:29:15,339
Eliza's so that every method just the

00:29:13,690 --> 00:29:17,859
same thing which is our corrupt API to

00:29:15,339 --> 00:29:20,859
specification and then running this I

00:29:17,859 --> 00:29:23,440
mean it's much clearer from a user point

00:29:20,859 --> 00:29:25,029
of view to to see what it does but it is

00:29:23,440 --> 00:29:26,469
different from our old API it's not very

00:29:25,029 --> 00:29:30,219
different but it's different enough for

00:29:26,469 --> 00:29:32,559
you to have to go have a look at it so

00:29:30,219 --> 00:29:36,159
the beach P&I wearing yeah compare that

00:29:32,559 --> 00:29:38,109
to what you do for the drive API it's a

00:29:36,159 --> 00:29:39,669
lot less bloated it's a lot easier to do

00:29:38,109 --> 00:29:41,859
in a lot easier to read which is of

00:29:39,669 --> 00:29:45,399
course great all right going back to

00:29:41,859 --> 00:29:47,320
writing ATM extensions there's not many

00:29:45,399 --> 00:29:49,239
examples out there if you look at PHP

00:29:47,320 --> 00:29:52,089
extensions there is literally hundreds

00:29:49,239 --> 00:29:53,979
of them right so much good material for

00:29:52,089 --> 00:29:55,989
you to look at if you've never done this

00:29:53,979 --> 00:29:57,849
before and there's actually some

00:29:55,989 --> 00:29:59,409
documentation for writing PHP extensions

00:29:57,849 --> 00:30:01,859
there is a book that's actually

00:29:59,409 --> 00:30:05,499
interestingly written by one of the

00:30:01,859 --> 00:30:08,619
developers on HH gemena and seen a great

00:30:05,499 --> 00:30:12,190
job many many years ago extension

00:30:08,619 --> 00:30:13,570
writing in PHP and yeah there's quite a

00:30:12,190 --> 00:30:15,279
few tutorials out there's lots of

00:30:13,570 --> 00:30:19,690
thoughts about that afraid of them

00:30:15,279 --> 00:30:20,979
there's absolutely nothing it's like you

00:30:19,690 --> 00:30:23,709
sit down yeah I need to write an

00:30:20,979 --> 00:30:25,359
extension for this I need to learn this

00:30:23,709 --> 00:30:27,099
thing and I need to figure out by

00:30:25,359 --> 00:30:29,589
looking at all stuff that is really

00:30:27,099 --> 00:30:31,809
difficult to read I also figured out

00:30:29,589 --> 00:30:33,459
that C++ actually had changed quite a

00:30:31,809 --> 00:30:36,909
lot in the ten years since I went to

00:30:33,459 --> 00:30:39,070
university like oh so many keywords and

00:30:36,909 --> 00:30:40,479
all the things I've added to it yeah if

00:30:39,070 --> 00:30:42,549
you don't not familiar with a DM you

00:30:40,479 --> 00:30:44,489
need to learn it right and then doing

00:30:42,549 --> 00:30:47,349
that by looking at the shorthand

00:30:44,489 --> 00:30:48,940
template rich stuff that Facebook have

00:30:47,349 --> 00:30:52,229
done for their extension it's not a

00:30:48,940 --> 00:30:54,579
simple task and it's very difficult to

00:30:52,229 --> 00:30:55,959
to get help as well that is low because

00:30:54,579 --> 00:30:58,539
they don't want to help you but there

00:30:55,959 --> 00:31:01,059
are nine hours away from you so that

00:30:58,539 --> 00:31:03,459
means that my workday ends ad age's wake

00:31:01,059 --> 00:31:06,429
up and go to work so that was kind of

00:31:03,459 --> 00:31:07,989
frustrating for me to look at there are

00:31:06,429 --> 00:31:09,620
some issues in the API that are

00:31:07,989 --> 00:31:11,720
currently not solved

00:31:09,620 --> 00:31:14,120
in PHP what you can do if you pass

00:31:11,720 --> 00:31:16,280
arguments you can set your error

00:31:14,120 --> 00:31:18,680
handling two exceptions meaning that if

00:31:16,280 --> 00:31:20,950
your argument parsing fields it

00:31:18,680 --> 00:31:24,559
automatic gets converts in the exception

00:31:20,950 --> 00:31:26,030
which you have to do for constructors

00:31:24,559 --> 00:31:27,980
because you cannot return a value from

00:31:26,030 --> 00:31:29,300
the constructor right so you throw an

00:31:27,980 --> 00:31:32,120
exception if something else on the late

00:31:29,300 --> 00:31:34,430
HTM you do not have control over the

00:31:32,120 --> 00:31:36,650
error handling for parsing the arguments

00:31:34,430 --> 00:31:38,180
because as I showed you that happens in

00:31:36,650 --> 00:31:39,850
a single line definition of your

00:31:38,180 --> 00:31:41,990
function there's nothing you can inject

00:31:39,850 --> 00:31:43,929
of course what you can do in your

00:31:41,990 --> 00:31:49,670
construction you can throw an exception

00:31:43,929 --> 00:31:52,070
but when you do so um and you catch an

00:31:49,670 --> 00:31:54,760
exception which you can do in Petri of

00:31:52,070 --> 00:31:57,710
course the object is still being created

00:31:54,760 --> 00:31:58,550
so if you catch an exception on a object

00:31:57,710 --> 00:32:00,080
that's been created with your

00:31:58,550 --> 00:32:01,580
constructor filled you still have this

00:32:00,080 --> 00:32:03,860
object handle which isn't correctly

00:32:01,580 --> 00:32:05,960
initialized meaning it if you start

00:32:03,860 --> 00:32:08,210
using we're calling metal sonnet anyone

00:32:05,960 --> 00:32:10,610
else against what happens you can crash

00:32:08,210 --> 00:32:12,650
and ate it changes heart crashes which

00:32:10,610 --> 00:32:15,890
isn't great and there's currently no way

00:32:12,650 --> 00:32:18,260
around ants and I've also not find a way

00:32:15,890 --> 00:32:21,020
on how to share connections that status

00:32:18,260 --> 00:32:22,550
information between multiple requests

00:32:21,020 --> 00:32:23,900
which is something you really want to do

00:32:22,550 --> 00:32:25,700
what you don't want to never request

00:32:23,900 --> 00:32:28,309
want to make connections to database

00:32:25,700 --> 00:32:29,870
because that slow especially menu says

00:32:28,309 --> 00:32:32,780
there's all kind of things it's quite a

00:32:29,870 --> 00:32:34,490
bit of over than doing that that problem

00:32:32,780 --> 00:32:37,400
is now going away because our connection

00:32:34,490 --> 00:32:38,929
handling driver this low levels protocol

00:32:37,400 --> 00:32:40,429
having see driver now implement

00:32:38,929 --> 00:32:43,160
something like that for me so I don't

00:32:40,429 --> 00:32:45,020
have to deal with that anyone but HSN

00:32:43,160 --> 00:32:46,460
knows no way of doing that so all my

00:32:45,020 --> 00:32:48,320
little things that I run into which is

00:32:46,460 --> 00:32:50,750
loads of things how would I compile this

00:32:48,320 --> 00:32:52,580
thing in debug mode right the first time

00:32:50,750 --> 00:32:53,900
without having to try four times and

00:32:52,580 --> 00:32:56,000
wait two and half hours between have a

00:32:53,900 --> 00:32:57,410
compound I wrote it all down in this

00:32:56,000 --> 00:32:59,540
cookbook and some people have been

00:32:57,410 --> 00:33:00,770
contributing to it i hope that facebook

00:32:59,540 --> 00:33:02,270
people themselves are going to have a

00:33:00,770 --> 00:33:05,360
look at this and see ya you actually

00:33:02,270 --> 00:33:08,059
doing that wrong it's also very

00:33:05,360 --> 00:33:09,860
difficult to debug this thing and PHP

00:33:08,059 --> 00:33:11,630
has a couple of facts itself that makes

00:33:09,860 --> 00:33:14,380
the debugging analyzing of memory a lot

00:33:11,630 --> 00:33:16,700
easier 82 is nothing like that and

00:33:14,380 --> 00:33:18,920
running it under Falcone's which is in

00:33:16,700 --> 00:33:20,630
memory debugging tool well good luck

00:33:18,920 --> 00:33:23,299
with it just starting it up takes ages

00:33:20,630 --> 00:33:25,369
right starting 18 cm in

00:33:23,299 --> 00:33:28,519
in the G DVD burger which will I use on

00:33:25,369 --> 00:33:30,769
the Linux transport takes a minute and a

00:33:28,519 --> 00:33:32,330
half every time you need to do some

00:33:30,769 --> 00:33:34,820
demon you need to just wait a minute and

00:33:32,330 --> 00:33:36,980
a half before it has read the binary and

00:33:34,820 --> 00:33:38,749
found all the symbols resilient peach

00:33:36,980 --> 00:33:40,850
feels like it's instantaneous like this

00:33:38,749 --> 00:33:43,190
what was cleaning out instantaneous but

00:33:40,850 --> 00:33:46,669
it looks instantaneous so this is not

00:33:43,190 --> 00:33:48,320
simple to do and then we went into the

00:33:46,669 --> 00:33:51,739
ghost book the ghost work was something

00:33:48,320 --> 00:33:54,289
that like I said give release the HP

00:33:51,739 --> 00:33:56,389
driver in December by the time I was

00:33:54,289 --> 00:33:58,970
ready with all the functionality in the

00:33:56,389 --> 00:34:00,320
HS young drivers orbit was this book and

00:33:58,970 --> 00:34:02,090
we called as a good ghost book because

00:34:00,320 --> 00:34:05,840
if he would observe it it would

00:34:02,090 --> 00:34:08,089
disappear if you run your debug unit it

00:34:05,840 --> 00:34:09,980
might as a TM if you are too far them

00:34:08,089 --> 00:34:11,599
somewhere it might disappear or my

00:34:09,980 --> 00:34:14,659
plotter things and there was could not

00:34:11,599 --> 00:34:15,950
find one of us and when exam point on it

00:34:14,659 --> 00:34:17,809
wouldn't help because they wouldn't tell

00:34:15,950 --> 00:34:19,159
me anything about memory corruption but

00:34:17,809 --> 00:34:22,159
it clearly was something going on

00:34:19,159 --> 00:34:24,049
stepping through it what is what your

00:34:22,159 --> 00:34:26,720
backup is it's nearly impossible because

00:34:24,049 --> 00:34:29,089
there's so many steps between you're

00:34:26,720 --> 00:34:31,579
doing something in code in C++ code and

00:34:29,089 --> 00:34:33,770
a 17,000 templates as they have come up

00:34:31,579 --> 00:34:35,179
to height actually what happens and i

00:34:33,770 --> 00:34:38,149
could post because i don't know it is

00:34:35,179 --> 00:34:41,179
him well enough to just step through all

00:34:38,149 --> 00:34:42,889
that stuff right and i go frustrated

00:34:41,179 --> 00:34:44,569
with it and gave up for it almost four

00:34:42,889 --> 00:34:46,010
well i started helping out in the PHP

00:34:44,569 --> 00:34:47,869
library for it i started writing

00:34:46,010 --> 00:34:50,839
tutorials and documentation because it

00:34:47,869 --> 00:34:52,369
couldn't find out and i had some issues

00:34:50,839 --> 00:34:53,780
getting to talk to the ATM people

00:34:52,369 --> 00:34:55,339
because I said well those Christmas

00:34:53,780 --> 00:34:59,089
spirit in a way and then some holidays

00:34:55,339 --> 00:35:01,730
and difficult so ghost book is be

00:34:59,089 --> 00:35:04,099
haunting me for my two moms and then we

00:35:01,730 --> 00:35:05,690
finally figured out after packing down

00:35:04,099 --> 00:35:08,329
one was the developers an RSC and the

00:35:05,690 --> 00:35:10,369
late at night for me and it turned out

00:35:08,329 --> 00:35:13,369
that i had forgotten to of those native

00:35:10,369 --> 00:35:15,349
data things and I don't those on the

00:35:13,369 --> 00:35:17,990
object ids which is our unique IDs that

00:35:15,349 --> 00:35:19,520
every document has as well as all the

00:35:17,990 --> 00:35:21,140
right results which are the key things

00:35:19,520 --> 00:35:24,829
for you to make sure that your tests

00:35:21,140 --> 00:35:28,099
weren't ever run and work yeah so those

00:35:24,829 --> 00:35:30,410
two learn fix for two months painful

00:35:28,099 --> 00:35:32,990
process and they just need to glance in

00:35:30,410 --> 00:35:35,930
the tribes odeon the knowledge is there

00:35:32,990 --> 00:35:37,040
it is difficult to get it out of them so

00:35:35,930 --> 00:35:39,110
it was very happy and I

00:35:37,040 --> 00:35:41,090
you're sort of ready to release the 11

00:35:39,110 --> 00:35:44,270
relief but I haven't done so because of

00:35:41,090 --> 00:35:46,400
another reason so let's have a look at

00:35:44,270 --> 00:35:53,180
the current status the PHP extension is

00:35:46,400 --> 00:35:56,060
now version 1 13 it's yeah I'm actually

00:35:53,180 --> 00:35:59,600
lying I all supposed to release the ATM

00:35:56,060 --> 00:36:01,190
extension yesterday morning but there's

00:35:59,600 --> 00:36:02,270
so many peach people people in town

00:36:01,190 --> 00:36:05,990
someone's have learned for the many

00:36:02,270 --> 00:36:08,420
problems lat yes the slide is about a

00:36:05,990 --> 00:36:12,050
week ahead of its time at the moment the

00:36:08,420 --> 00:36:14,000
PHP library is being released as 100 it

00:36:12,050 --> 00:36:16,760
has a peach people on his support for

00:36:14,000 --> 00:36:18,320
PHP 5 4 and 7 now so it works all really

00:36:16,760 --> 00:36:20,900
well so the elephant was happy I was

00:36:18,320 --> 00:36:25,160
drinking some belgian beer which the

00:36:20,900 --> 00:36:28,640
bikes see a peach p7 supports 57 has am

00:36:25,160 --> 00:36:32,840
has gone quite far and our initial patch

00:36:28,640 --> 00:36:34,400
to a 2d driver to the PHP driver was our

00:36:32,840 --> 00:36:36,140
three thousand lines and remove the

00:36:34,400 --> 00:36:38,990
thousands oh it's that kind of patch

00:36:36,140 --> 00:36:41,000
kind of stuff it's it's very tricky to

00:36:38,990 --> 00:36:42,380
do a little work so many internal

00:36:41,000 --> 00:36:43,970
changes but we managed to everything

00:36:42,380 --> 00:36:47,530
suggests before Christmas so we were

00:36:43,970 --> 00:36:47,530
happy and had another drink somewhere

00:36:47,980 --> 00:36:52,310
yeah so the main reason why people want

00:36:50,300 --> 00:36:54,830
to use hmm as I mentioned before is it's

00:36:52,310 --> 00:36:56,240
really fast it's like fifty to two to

00:36:54,830 --> 00:36:58,880
one hundred fifty percent faster down

00:36:56,240 --> 00:37:02,350
than 80 channels and then PHP 7 comes

00:36:58,880 --> 00:37:07,460
along and when you compare it to HH vm

00:37:02,350 --> 00:37:09,440
it's fairly similar right so your own

00:37:07,460 --> 00:37:11,810
Drupal 8 it you call hardly see the

00:37:09,440 --> 00:37:14,690
difference in WordPress an ATM is a

00:37:11,810 --> 00:37:17,450
little bit faster than PG 70 magento

00:37:14,690 --> 00:37:20,000
peach p7 is a lot faster media we can

00:37:17,450 --> 00:37:21,710
haz em it was a fair bit faster but

00:37:20,000 --> 00:37:23,330
they're very very similar I would say

00:37:21,710 --> 00:37:25,520
that if you don't make too many buyers

00:37:23,330 --> 00:37:28,820
benchmarks I didn't make those myself

00:37:25,520 --> 00:37:30,830
again I've stolen from Rasmus hmm team

00:37:28,820 --> 00:37:33,830
clean claims that ATM is about

00:37:30,830 --> 00:37:36,020
twenty-five percent faster then p37 PHP

00:37:33,830 --> 00:37:37,700
teams have it's about five percent

00:37:36,020 --> 00:37:39,050
faster than 80 to him in the answer

00:37:37,700 --> 00:37:41,600
doesn't really matter it it's about the

00:37:39,050 --> 00:37:45,200
same both of them are vast improvement

00:37:41,600 --> 00:37:47,420
over the HP 5 there's good news so if

00:37:45,200 --> 00:37:50,030
you haven't played a PhD 7th go test the

00:37:47,420 --> 00:37:50,840
application is much much faster so I was

00:37:50,030 --> 00:37:52,340
doing some benchmark

00:37:50,840 --> 00:37:55,070
so early in a week to see what happens

00:37:52,340 --> 00:37:59,060
with the mongodb extension I promise on

00:37:55,070 --> 00:38:01,760
benchmarks in the in the in the

00:37:59,060 --> 00:38:04,430
abstracts and we look at it running the

00:38:01,760 --> 00:38:08,990
library test which is Dolan phpunit it

00:38:04,430 --> 00:38:10,400
runs about 900 tests php5 and HH vm

00:38:08,990 --> 00:38:12,980
peach trees that are about the same

00:38:10,400 --> 00:38:15,020
thing I mean hsl is a bit slower but you

00:38:12,980 --> 00:38:17,390
can actually that to maybe get started

00:38:15,020 --> 00:38:19,040
overhead like this this is one time

00:38:17,390 --> 00:38:20,570
thing you run on the command line which

00:38:19,040 --> 00:38:23,390
means that our jet engine hasn't kicked

00:38:20,570 --> 00:38:25,160
in to improve things whereas on php5 in

00:38:23,390 --> 00:38:29,420
peach p7 I was running with up cash and

00:38:25,160 --> 00:38:31,670
it's phone base support so that has the

00:38:29,420 --> 00:38:33,290
benefit already of having a little bit

00:38:31,670 --> 00:38:36,020
been optimized before I start burning

00:38:33,290 --> 00:38:40,340
and so did it's it's not very different

00:38:36,020 --> 00:38:42,860
running just to pure language level test

00:38:40,340 --> 00:38:44,780
that doesn't in as this bigger PHP

00:38:42,860 --> 00:38:46,760
library on top of that I don't know

00:38:44,780 --> 00:38:48,740
what's happening that 82 vm is slower

00:38:46,760 --> 00:38:50,630
and had slower by so much more than i'm

00:38:48,740 --> 00:38:52,520
actually doubting why and I must be

00:38:50,630 --> 00:38:54,050
doing something wrong and I don't bring

00:38:52,520 --> 00:38:57,310
something wrong because when I was

00:38:54,050 --> 00:39:00,710
running the benchmark for all of them

00:38:57,310 --> 00:39:01,790
PHP actually might have no I don't have

00:39:00,710 --> 00:39:04,880
a slide because they couldn't actually

00:39:01,790 --> 00:39:07,030
come complete the benchmark the phone

00:39:04,880 --> 00:39:10,280
was that i was using so much memory and

00:39:07,030 --> 00:39:11,930
by so much memory im mean like 40

00:39:10,280 --> 00:39:14,180
gigabytes of memory in my machine and

00:39:11,930 --> 00:39:15,950
where speech be used like 12 megabytes

00:39:14,180 --> 00:39:18,740
so there must be a memory leak somewhere

00:39:15,950 --> 00:39:20,300
right obvious conclusion there I haven't

00:39:18,740 --> 00:39:23,300
found it yet so that's one of the

00:39:20,300 --> 00:39:26,090
reasons 110 hasn't been released yet so

00:39:23,300 --> 00:39:27,890
the benchmarks I mean it for Rennick

00:39:26,090 --> 00:39:29,860
test it doesn't say it outside we run

00:39:27,890 --> 00:39:33,200
some internal things as well so we run

00:39:29,860 --> 00:39:35,390
like we started writing benchmarks to

00:39:33,200 --> 00:39:38,740
compare different drivers for all of the

00:39:35,390 --> 00:39:43,640
different languages that we support and

00:39:38,740 --> 00:39:45,560
PG 56 and 57 5 p-7 but but I can see

00:39:43,640 --> 00:39:47,630
here is about twenty twenty-five percent

00:39:45,560 --> 00:39:52,580
fast and and the only thing this stuff

00:39:47,630 --> 00:39:55,190
does is convert a blob of variables into

00:39:52,580 --> 00:39:57,380
our internal representation so it's it's

00:39:55,190 --> 00:39:59,450
all implemented see so you should see

00:39:57,380 --> 00:40:01,850
very little difference between and does

00:39:59,450 --> 00:40:03,770
exactly what you get wanted yeah it's

00:40:01,850 --> 00:40:04,840
very fairly similar not nothing to write

00:40:03,770 --> 00:40:07,130
home about

00:40:04,840 --> 00:40:08,990
interestingly know when I was putting my

00:40:07,130 --> 00:40:11,780
values in the spreadsheet with all the

00:40:08,990 --> 00:40:14,300
other languages I noticed that HP is

00:40:11,780 --> 00:40:17,120
actually really really fast a lot faster

00:40:14,300 --> 00:40:18,470
than many of the other drivers got some

00:40:17,120 --> 00:40:20,360
jealousy for my co-workers for that's a

00:40:18,470 --> 00:40:22,850
how can't be that fast convey that sauce

00:40:20,360 --> 00:40:25,120
polishing machine and to be fair I do

00:40:22,850 --> 00:40:28,700
have the fastest machine but that cannot

00:40:25,120 --> 00:40:30,020
explain the differences see I will have

00:40:28,700 --> 00:40:32,300
some internal competition will make

00:40:30,020 --> 00:40:35,630
enough stuff faster again but yeah what

00:40:32,300 --> 00:40:37,820
i really was worried about is that the

00:40:35,630 --> 00:40:40,430
PHP library deal we have on top actly

00:40:37,820 --> 00:40:42,590
all as a lot of impact to make things

00:40:40,430 --> 00:40:44,540
slower but it's not so bad it's ten

00:40:42,590 --> 00:40:46,700
twenty percent we thought you'd expect

00:40:44,540 --> 00:40:49,190
running an additional layer in between

00:40:46,700 --> 00:40:54,020
application and you see extension so

00:40:49,190 --> 00:40:58,460
that sort of expected yeah there's this

00:40:54,020 --> 00:41:00,260
won't slide running the test or you had

00:40:58,460 --> 00:41:01,640
running some of the same tests in our

00:41:00,260 --> 00:41:05,870
suite to compare between different

00:41:01,640 --> 00:41:09,140
languages yeah you can see a PHP seven

00:41:05,870 --> 00:41:12,080
completing it in 0 to 3 seconds and then

00:41:09,140 --> 00:41:13,700
ATM taking 16 seconds which is not

00:41:12,080 --> 00:41:16,730
normal so there's mostly something wrong

00:41:13,700 --> 00:41:18,140
and i'm hoping to give you full of

00:41:16,730 --> 00:41:20,840
presentations some point where those

00:41:18,140 --> 00:41:23,300
things are fairly much the same my point

00:41:20,840 --> 00:41:26,180
here is really that I think 18 cm is

00:41:23,300 --> 00:41:28,130
really quite powerful but it is

00:41:26,180 --> 00:41:31,160
different if you need to write

00:41:28,130 --> 00:41:32,660
extensions for it peach piece ecosystem

00:41:31,160 --> 00:41:34,970
for marketing extensions is so much

00:41:32,660 --> 00:41:37,310
better is so much more helpful available

00:41:34,970 --> 00:41:40,040
so much more experience that you can

00:41:37,310 --> 00:41:41,830
draw on where i'm sure that related

00:41:40,040 --> 00:41:44,060
Jimmy can do it exactly the same things

00:41:41,830 --> 00:41:47,530
but known how to do it is a look were

00:41:44,060 --> 00:41:49,520
tricky so although my presentations at

00:41:47,530 --> 00:41:51,290
mondrian acres in the perfect

00:41:49,520 --> 00:41:53,870
combination I look quite sure whether

00:41:51,290 --> 00:41:56,660
that's the case yet but I hope that to

00:41:53,870 --> 00:41:58,970
be the case in the future and you

00:41:56,660 --> 00:42:00,380
probably shouldn't show defense mark

00:41:58,970 --> 00:42:02,390
somewhere because it's a bit unfair

00:42:00,380 --> 00:42:03,920
there's a book somewhere and I need to

00:42:02,390 --> 00:42:06,260
fix the book and after that we can

00:42:03,920 --> 00:42:07,930
discuss benchmarks again I benchmark

00:42:06,260 --> 00:42:10,790
inherently unfair anyway of course

00:42:07,930 --> 00:42:13,400
alright that's about the story at all

00:42:10,790 --> 00:42:14,750
are there any questions agency I'm going

00:42:13,400 --> 00:42:16,670
to be related interactions relate and

00:42:14,750 --> 00:42:18,200
happy to answer them I'm giving the

00:42:16,670 --> 00:42:19,970
people holding the mics

00:42:18,200 --> 00:42:24,260
a little bit of time to walk around then

00:42:19,970 --> 00:42:30,070
it's on right now let's get to the

00:42:24,260 --> 00:42:33,320
slightly better benchmarking flight hi

00:42:30,070 --> 00:42:35,060
can you please tell when driver

00:42:33,320 --> 00:42:36,980
will be available for beach be seven

00:42:35,060 --> 00:42:39,500
because couple days ago I've tried to

00:42:36,980 --> 00:42:42,740
install it and I was unable to find it

00:42:39,500 --> 00:42:46,220
however I I've seen some some stuff

00:42:42,740 --> 00:42:48,890
which is from a kind of seven ready yeah

00:42:46,220 --> 00:42:52,520
so our our driver got released in

00:42:48,890 --> 00:42:54,470
december early december just before HP

00:42:52,520 --> 00:42:57,380
seven came out and we made the driver

00:42:54,470 --> 00:42:59,030
the MongoDB extension ready for PT 7

00:42:57,380 --> 00:43:02,390
just before Christmas else available and

00:42:59,030 --> 00:43:03,470
you should be able to use it and but you

00:43:02,390 --> 00:43:04,910
need to be careful because our now to

00:43:03,470 --> 00:43:07,310
look Sanchez right we have the altar why

00:43:04,910 --> 00:43:09,980
would that be sort of ignored for now

00:43:07,310 --> 00:43:12,560
which room both gasp HP seven support

00:43:09,980 --> 00:43:15,589
where's the new driver go left be 37

00:43:12,560 --> 00:43:19,339
support so you don't have to look at

00:43:15,589 --> 00:43:22,280
your application to see whether you need

00:43:19,339 --> 00:43:24,109
to either upgrades your usage of moment

00:43:22,280 --> 00:43:26,780
to be to the new driver or use this

00:43:24,109 --> 00:43:29,869
intermediate library that is soon coming

00:43:26,780 --> 00:43:31,460
available so the thing is there's two

00:43:29,869 --> 00:43:32,839
extensions and you need to make sure you

00:43:31,460 --> 00:43:36,170
that you use a new one and all the old

00:43:32,839 --> 00:43:38,560
one for that to work alright sorry I

00:43:36,170 --> 00:43:41,359
can't hear that you need a microwave

00:43:38,560 --> 00:43:47,270
yeah same time instead okay perfect

00:43:41,359 --> 00:43:48,800
anything of this one writer can the next

00:43:47,270 --> 00:43:52,880
one should be here in front and then

00:43:48,800 --> 00:43:58,040
next one in the back again being on

00:43:52,880 --> 00:44:00,260
those Charles as the PHP 5.6 running

00:43:58,040 --> 00:44:05,660
with up cash yeah they're both running

00:44:00,260 --> 00:44:12,230
with up cash PG 56 57 mm yeah there's no

00:44:05,660 --> 00:44:14,569
reason not to run a little cash question

00:44:12,230 --> 00:44:17,660
so when H achieve an extensional is

00:44:14,569 --> 00:44:20,869
finished when i install hhmmm a zapper

00:44:17,660 --> 00:44:23,089
compile package how you know to make it

00:44:20,869 --> 00:44:25,280
working there is nothing like pickles

00:44:23,089 --> 00:44:28,329
and i know there's nothing like tackle

00:44:25,280 --> 00:44:30,260
and that's a good question so attn

00:44:28,329 --> 00:44:31,010
ecosystem doesn't have something like

00:44:30,260 --> 00:44:32,960
that

00:44:31,010 --> 00:44:35,030
and what you end up doing is you

00:44:32,960 --> 00:44:37,520
download the extension like you can also

00:44:35,030 --> 00:44:41,150
with PHP instead of learning PHP is you

00:44:37,520 --> 00:44:45,430
an HP HP ice and me and I make it so so

00:44:41,150 --> 00:44:47,960
it's very similar there's not much dance

00:44:45,430 --> 00:44:51,200
not much that stops us from adding that

00:44:47,960 --> 00:44:54,790
support for HSV em to pack o Exley and I

00:44:51,200 --> 00:44:57,650
think it might happen that the the

00:44:54,790 --> 00:45:00,950
successor of the backhoe packaging

00:44:57,650 --> 00:45:03,530
management's interesting called pickle

00:45:00,950 --> 00:45:05,750
to make things more confusing is it

00:45:03,530 --> 00:45:07,400
going to have support for 82 msl and

00:45:05,750 --> 00:45:08,690
that would on the internet much better

00:45:07,400 --> 00:45:10,430
with composer but that's that is

00:45:08,690 --> 00:45:12,740
invariant but you can download the

00:45:10,430 --> 00:45:13,730
extension compile it and then install it

00:45:12,740 --> 00:45:16,040
like you would do with a shared

00:45:13,730 --> 00:45:17,840
extension for PHP of course what I'm

00:45:16,040 --> 00:45:20,840
going to want to have at some point is

00:45:17,840 --> 00:45:22,130
the people that package hagn for

00:45:20,840 --> 00:45:23,540
distributions like debian and you've

00:45:22,130 --> 00:45:26,420
been not sure whether you been serviced

00:45:23,540 --> 00:45:29,870
with debian certainly does to also have

00:45:26,420 --> 00:45:31,550
the MongoDB extension as a pre-compiled

00:45:29,870 --> 00:45:33,350
package for them too but that's

00:45:31,550 --> 00:45:36,790
something that you know we need to talk

00:45:33,350 --> 00:45:36,790
to them about and see what we can do

00:45:37,510 --> 00:45:44,090
hopefully not answer the question

00:45:39,580 --> 00:45:47,330
anything else I don't see anything in

00:45:44,090 --> 00:45:50,720
the shout was difficult words then okay

00:45:47,330 --> 00:45:53,720
perfect I have one more slide here which

00:45:50,720 --> 00:45:56,690
is no notice on this one it's the one

00:45:53,720 --> 00:45:57,950
with the QR code and this is first timer

00:45:56,690 --> 00:46:00,230
has given this presentation I'm very

00:45:57,950 --> 00:46:03,590
interested in hearing what you think

00:46:00,230 --> 00:46:05,420
about this please please leave me some

00:46:03,590 --> 00:46:07,160
feedback at the joint in euro i will

00:46:05,420 --> 00:46:09,230
also other link to my slides there Ivan

00:46:07,160 --> 00:46:11,030
don't so yet but I will do that's it

00:46:09,230 --> 00:46:13,250
later our disaster in all of us tomorrow

00:46:11,030 --> 00:46:14,890
and yeah I'm happy to hear if you have

00:46:13,250 --> 00:46:17,690
any questions more going to be related

00:46:14,890 --> 00:46:20,030
HSV on PHP active alkaloids come and

00:46:17,690 --> 00:46:21,680
find me on here today a german social

00:46:20,030 --> 00:46:24,400
all day tomorrow and I'm happy to talk

00:46:21,680 --> 00:46:26,210
to you about basically anything

00:46:24,400 --> 00:46:28,490
regarding those subjects and all the

00:46:26,210 --> 00:46:30,080
things thank you very much for attending

00:46:28,490 --> 00:46:32,540
I hope this was useful I think we have

00:46:30,080 --> 00:46:34,460
our social starting pretty soon ax or

00:46:32,540 --> 00:46:38,030
not notice the keynote is still keynote

00:46:34,460 --> 00:46:40,960
that's in this room so stay stay stay

00:46:38,030 --> 00:46:43,020
here understand thanks very much

00:46:40,960 --> 00:46:43,020

YouTube URL: https://www.youtube.com/watch?v=J412nlAHsIs


