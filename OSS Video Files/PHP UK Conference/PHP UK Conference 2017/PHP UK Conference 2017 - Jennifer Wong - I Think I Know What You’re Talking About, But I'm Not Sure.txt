Title: PHP UK Conference 2017 - Jennifer Wong - I Think I Know What You’re Talking About, But I'm Not Sure
Publication date: 2017-04-03
Playlist: PHP UK Conference 2017
Description: 
	Recursion, instantiate, lexical scope - where do these words come from?! If you’ve ever been in conversation with other developers and thought, “I think I know what they’re talking about, but I’m not sure...”, you’re not alone. Let’s delve into the weird and wonderful parlance that computer scientists and developers have created for themselves. Whether the words are borrowed or just plain made up, I’ll uncover how they made their way into the vocabulary of the modern programmer. In this session, you’ll learn everything from etymology to history to broader definitions, all of which can help you understand what the heck that person’s rambling about. So, the next time you’re in conversation, you’ll be the one discussing dependency injection versus inversion of control with ease.
Captions: 
	00:00:04,180 --> 00:00:11,300
morning everybody so as John Sam said

00:00:09,140 --> 00:00:16,129
I'm here to present I think I know what

00:00:11,300 --> 00:00:19,220
you're talking about but I'm not sure so

00:00:16,129 --> 00:00:22,730
I'm Jen I am a self-taught web developer

00:00:19,220 --> 00:00:24,310
and I just watched Moana so I made this

00:00:22,730 --> 00:00:28,330
gif

00:00:24,310 --> 00:00:30,830
really empathize with the feeling I

00:00:28,330 --> 00:00:34,670
currently work as a software engineer at

00:00:30,830 --> 00:00:36,620
Eventbrite and you might know me

00:00:34,670 --> 00:00:38,899
particularly if you're from the US as

00:00:36,620 --> 00:00:41,000
the creator of human wasteland also

00:00:38,899 --> 00:00:43,039
known as the poop map of San Francisco

00:00:41,000 --> 00:00:46,610
if you don't know what that is you can

00:00:43,039 --> 00:00:47,870
feel free to ask me after you might also

00:00:46,610 --> 00:00:49,879
know me from this project called

00:00:47,870 --> 00:00:53,600
developers developers which is a

00:00:49,879 --> 00:00:54,890
dedication to mr. Steve Ballmer so all

00:00:53,600 --> 00:00:58,820
of this is just a long-winded way of

00:00:54,890 --> 00:01:01,460
saying that I write code for a living a

00:00:58,820 --> 00:01:04,820
quick note the very first conference I

00:01:01,460 --> 00:01:08,270
ever spoke at was a PHP conference do I

00:01:04,820 --> 00:01:10,370
have a lot of love for PHP so before I

00:01:08,270 --> 00:01:12,290
get started some disclaimers they're

00:01:10,370 --> 00:01:16,450
going to be a lot of animated gifts in

00:01:12,290 --> 00:01:19,550
this talk and there might be some errors

00:01:16,450 --> 00:01:22,790
so you might be a little bit like wait a

00:01:19,550 --> 00:01:27,140
minute hold up but before you get a

00:01:22,790 --> 00:01:29,390
little bit more like this let's talk

00:01:27,140 --> 00:01:34,100
about it but we can talk about it after

00:01:29,390 --> 00:01:36,530
this talk so let's go as I said I'm a

00:01:34,100 --> 00:01:39,440
developer software engineer programmer

00:01:36,530 --> 00:01:41,240
or whatever else you want to call me so

00:01:39,440 --> 00:01:44,390
some days when I look at my computer I

00:01:41,240 --> 00:01:47,540
feel a lot like this I don't even know

00:01:44,390 --> 00:01:49,010
what the hell this means and sometimes

00:01:47,540 --> 00:01:52,190
when I'm in conversations with other

00:01:49,010 --> 00:01:55,910
developers I feel a lot like this like

00:01:52,190 --> 00:01:57,020
wait what what did you just say I think

00:01:55,910 --> 00:02:00,680
I know what they're talking about but

00:01:57,020 --> 00:02:02,660
I'm not quite sure so Phil Carlson once

00:02:00,680 --> 00:02:04,760
said that there are two hard things in

00:02:02,660 --> 00:02:07,790
computer science cache and validation

00:02:04,760 --> 00:02:11,000
and naming things and we can see that

00:02:07,790 --> 00:02:12,740
and various vocabulary that we use to

00:02:11,000 --> 00:02:14,420
describe things in computer science and

00:02:12,740 --> 00:02:16,980
web development so here's just a

00:02:14,420 --> 00:02:20,190
smattering of words that really confuse

00:02:16,980 --> 00:02:21,840
and still confuse me so sometimes when

00:02:20,190 --> 00:02:24,180
I'm into conversations with other people

00:02:21,840 --> 00:02:26,099
they'll use these words and I ask oh can

00:02:24,180 --> 00:02:27,660
you tell me what that means like again I

00:02:26,099 --> 00:02:29,819
think I know what you're talking about

00:02:27,660 --> 00:02:31,980
but I'm not quite sure and a lot of

00:02:29,819 --> 00:02:35,310
times when I ask that question I get a

00:02:31,980 --> 00:02:41,970
look like this and that makes me feel

00:02:35,310 --> 00:02:43,530
like this so as I said there are some

00:02:41,970 --> 00:02:45,720
super crazy words that are really

00:02:43,530 --> 00:02:47,879
confusing in computer science and we use

00:02:45,720 --> 00:02:50,640
them all the time in web development so

00:02:47,879 --> 00:02:52,709
I'm here today to explain some of the

00:02:50,640 --> 00:02:55,290
interesting history behind these terms

00:02:52,709 --> 00:02:57,470
and why they're so confusing so you can

00:02:55,290 --> 00:03:01,620
feel a little bit less like Arkell

00:02:57,470 --> 00:03:07,860
and just a little bit more like Brent

00:03:01,620 --> 00:03:10,650
Rambo all right so let's get started

00:03:07,860 --> 00:03:14,549
parameter versus argument what is the

00:03:10,650 --> 00:03:17,160
difference and is there one you'll see

00:03:14,549 --> 00:03:19,380
by searching on Google is quite a

00:03:17,160 --> 00:03:25,650
popular question it's the third result

00:03:19,380 --> 00:03:27,569
down argument parameters difference so I

00:03:25,650 --> 00:03:29,970
have a function here written in

00:03:27,569 --> 00:03:33,750
JavaScript and you'll see at the top

00:03:29,970 --> 00:03:35,430
it's called shark inside shark there's

00:03:33,750 --> 00:03:37,709
something new fed in called side and

00:03:35,430 --> 00:03:39,569
then at the very last line of this

00:03:37,709 --> 00:03:42,150
function or I call this function with a

00:03:39,569 --> 00:03:45,420
string left so how many people think

00:03:42,150 --> 00:03:51,209
that side is the parameter raise your

00:03:45,420 --> 00:03:52,859
hand if some people and how many people

00:03:51,209 --> 00:03:54,920
think it's the string left in the

00:03:52,859 --> 00:03:57,810
function call raise your hand

00:03:54,920 --> 00:04:00,840
all right some people well I'm not going

00:03:57,810 --> 00:04:03,329
to tell you yet but let's keep going all

00:04:00,840 --> 00:04:06,569
right so parameter in the online

00:04:03,329 --> 00:04:08,790
etymology dictionary online etymologies

00:04:06,569 --> 00:04:11,069
me etymology is basically the history of

00:04:08,790 --> 00:04:13,500
words so the online etymology dictionary

00:04:11,069 --> 00:04:15,450
says that a parameter is a measurable

00:04:13,500 --> 00:04:17,910
factor which helps to define a

00:04:15,450 --> 00:04:20,280
particular system and it's like okay

00:04:17,910 --> 00:04:22,669
that kind of makes sense so parameter

00:04:20,280 --> 00:04:25,050
probably helps maybe define the function

00:04:22,669 --> 00:04:27,180
however when I look up argument all I

00:04:25,050 --> 00:04:30,000
can find is information about arguing

00:04:27,180 --> 00:04:30,720
with people so it's like okay maybe I'll

00:04:30,000 --> 00:04:32,760
check out what

00:04:30,720 --> 00:04:35,040
tt and see what they have to say and

00:04:32,760 --> 00:04:37,380
what they say is that the term parameter

00:04:35,040 --> 00:04:40,110
sometimes called the formal parameter is

00:04:37,380 --> 00:04:42,390
often used to refer to a variable as

00:04:40,110 --> 00:04:44,550
found in the function definition while

00:04:42,390 --> 00:04:47,100
argument sometimes called the actual

00:04:44,550 --> 00:04:49,680
parameter refers to the actual input

00:04:47,100 --> 00:04:52,590
path and I think because we're all

00:04:49,680 --> 00:04:54,480
developers we probably kind of get a

00:04:52,590 --> 00:04:57,120
sense of which one is the parameter and

00:04:54,480 --> 00:05:00,120
which one is the argument but then I was

00:04:57,120 --> 00:05:02,040
like why don't we use formal and actual

00:05:00,120 --> 00:05:04,200
parameter anymore and in order to

00:05:02,040 --> 00:05:07,140
explain that we kind of have to go down

00:05:04,200 --> 00:05:09,990
the rabbit hole so it all starts with

00:05:07,140 --> 00:05:12,210
math so what does Wikipedia have to say

00:05:09,990 --> 00:05:14,370
about math they say that a function

00:05:12,210 --> 00:05:16,530
definition can also contain parameters

00:05:14,370 --> 00:05:18,420
but unlike variables parameters are not

00:05:16,530 --> 00:05:21,080
listed among the arguments that the

00:05:18,420 --> 00:05:23,190
function takes and it's like rate

00:05:21,080 --> 00:05:26,010
parameters are not listed among the

00:05:23,190 --> 00:05:27,690
arguments of the function shape so it's

00:05:26,010 --> 00:05:30,180
like can you explain that a little bit

00:05:27,690 --> 00:05:32,669
more Wikipedia and what they say is that

00:05:30,180 --> 00:05:38,190
the variable X designates the functions

00:05:32,669 --> 00:05:39,840
argument but a B and C are parameters so

00:05:38,190 --> 00:05:45,390
if we look at this mathematical function

00:05:39,840 --> 00:05:47,520
here we see that X is the argument and a

00:05:45,390 --> 00:05:52,190
B and C are the parameters I was like

00:05:47,520 --> 00:05:54,090
wait this is that means that X is

00:05:52,190 --> 00:05:55,710
helping to find a function but its

00:05:54,090 --> 00:05:57,660
argument so I was really confused so

00:05:55,710 --> 00:05:59,669
here you see that a is a parameter and

00:05:57,660 --> 00:06:02,220
then in the function the JavaScript

00:05:59,669 --> 00:06:04,500
function below bar is a parameter it's

00:06:02,220 --> 00:06:07,710
like what looks really wriggling my

00:06:04,500 --> 00:06:11,669
brain so the way I like to explain it is

00:06:07,710 --> 00:06:15,150
with dogs and footballs so the dog is a

00:06:11,669 --> 00:06:19,140
parameter the football is computer

00:06:15,150 --> 00:06:21,120
science and so when parameter hits

00:06:19,140 --> 00:06:25,320
computer science it gets totally flipped

00:06:21,120 --> 00:06:27,540
on its end so the takeaway here is that

00:06:25,320 --> 00:06:30,990
parameters help define a function and

00:06:27,540 --> 00:06:32,040
arguments are passed into a function so

00:06:30,990 --> 00:06:34,410
here's the answer

00:06:32,040 --> 00:06:36,330
parameters up at the top it's being just

00:06:34,410 --> 00:06:38,370
helping to find the function shark and

00:06:36,330 --> 00:06:42,750
then the string left is actually the

00:06:38,370 --> 00:06:44,340
argument so all that being said we

00:06:42,750 --> 00:06:47,610
almost always use parameters

00:06:44,340 --> 00:06:49,970
argument interchangeably right so that

00:06:47,610 --> 00:06:49,970
was easy

00:06:52,070 --> 00:06:57,780
all right so scope when people try to

00:06:55,380 --> 00:06:59,820
get me to talk about scope and explain

00:06:57,780 --> 00:07:01,650
scope I'm just like oh god please don't

00:06:59,820 --> 00:07:05,060
make me talk about scope and scoping

00:07:01,650 --> 00:07:08,160
issues I hate it so this is how I feel

00:07:05,060 --> 00:07:10,860
but let's talk about lexical scope so

00:07:08,160 --> 00:07:14,040
Google says that lexical scoping

00:07:10,860 --> 00:07:16,229
sometimes known as static scoping is a

00:07:14,040 --> 00:07:18,300
convention used with many programming

00:07:16,229 --> 00:07:20,760
languages that sets the scope or range a

00:07:18,300 --> 00:07:23,400
functionality of a variable so that it

00:07:20,760 --> 00:07:25,050
may only be called or reference from

00:07:23,400 --> 00:07:29,940
within the block of code in which it is

00:07:25,050 --> 00:07:31,650
defined you're going to be like huh so

00:07:29,940 --> 00:07:33,570
you notice in that definition that they

00:07:31,650 --> 00:07:36,090
say lexical scoping is also called

00:07:33,570 --> 00:07:37,860
static scoping scope is also called

00:07:36,090 --> 00:07:40,800
range of functionality and then called

00:07:37,860 --> 00:07:42,780
is also called reference and they

00:07:40,800 --> 00:07:45,090
actually use the term scope to define

00:07:42,780 --> 00:07:46,770
lexical scope so before you can even

00:07:45,090 --> 00:07:49,680
learn what lexical scope is you need to

00:07:46,770 --> 00:07:53,130
know what scope is first so let's break

00:07:49,680 --> 00:07:55,979
it down a little bit all right online

00:07:53,130 --> 00:07:59,370
etymology dictionary says that scope is

00:07:55,979 --> 00:08:01,470
aim purpose object being aimed at mark

00:07:59,370 --> 00:08:05,700
or target which doesn't really help us

00:08:01,470 --> 00:08:09,000
explain in computer science so wikipedia

00:08:05,700 --> 00:08:11,820
says that a scope is a part of a program

00:08:09,000 --> 00:08:13,560
that is or can be the scope for a set of

00:08:11,820 --> 00:08:18,830
bindings and then they say that a

00:08:13,560 --> 00:08:18,830
precise definition is tricky see below

00:08:19,910 --> 00:08:26,460
alright so let's see what they say below

00:08:22,760 --> 00:08:28,710
in computer programming the scope of a

00:08:26,460 --> 00:08:31,950
name binding and Association of a name

00:08:28,710 --> 00:08:33,300
to an entity such as a variable is part

00:08:31,950 --> 00:08:35,969
of a computer program where the binding

00:08:33,300 --> 00:08:38,130
is valid where the name can be used to

00:08:35,969 --> 00:08:40,650
refer to the entity and I think again

00:08:38,130 --> 00:08:43,050
because we're all programmers here this

00:08:40,650 --> 00:08:44,490
definition it makes sense but think

00:08:43,050 --> 00:08:47,250
about being a new person coming into

00:08:44,490 --> 00:08:52,040
programming it's kind of confusing still

00:08:47,250 --> 00:08:54,540
so I say that this is an OK definition

00:08:52,040 --> 00:08:57,070
so I keep reading in the same definition

00:08:54,540 --> 00:08:58,960
on Wikipedia and here that they say

00:08:57,070 --> 00:09:01,000
that the strict definition of lexical

00:08:58,960 --> 00:09:03,520
scope of a name or identifier is

00:09:01,000 --> 00:09:06,490
unambiguous like okay thanks for being

00:09:03,520 --> 00:09:08,500
really condescending Wikipedia but then

00:09:06,490 --> 00:09:10,660
they also say that the port that it is

00:09:08,500 --> 00:09:12,730
the portion of source code in which a

00:09:10,660 --> 00:09:15,820
binding of a name with an entity applies

00:09:12,730 --> 00:09:17,650
like okay finally we've got like a one

00:09:15,820 --> 00:09:19,750
phrase definition that's really helpful

00:09:17,650 --> 00:09:22,900
but then I keep reading and I'm like

00:09:19,750 --> 00:09:24,910
it's virtually unchanged from its 1960

00:09:22,900 --> 00:09:27,970
definition in the specification for

00:09:24,910 --> 00:09:32,230
Algol 60 so I don't know about you all

00:09:27,970 --> 00:09:33,700
but I didn't know what Algol 60 was well

00:09:32,230 --> 00:09:36,090
it turns out that it's short for the

00:09:33,700 --> 00:09:38,500
algorithmic language of 1960

00:09:36,090 --> 00:09:40,690
so Algol 60 was the first language

00:09:38,500 --> 00:09:43,150
implementing nested function definitions

00:09:40,690 --> 00:09:46,150
with lexical scope so we've had the

00:09:43,150 --> 00:09:52,420
definition of lexical scope since 1960

00:09:46,150 --> 00:09:54,160
and we still can't explain it alright so

00:09:52,420 --> 00:09:55,720
now that we talked about lexical scope

00:09:54,160 --> 00:09:58,660
let's talk a little bit about lexical

00:09:55,720 --> 00:10:01,150
versus dynamic scope wikipedia says that

00:09:58,660 --> 00:10:03,340
lexical scope is the main focus of this

00:10:01,150 --> 00:10:06,490
article with dynamic scope understood by

00:10:03,340 --> 00:10:08,110
contrast with lexical scope so again you

00:10:06,490 --> 00:10:10,420
need to know what lexical scope is

00:10:08,110 --> 00:10:17,530
before you can understand what dynamic

00:10:10,420 --> 00:10:19,810
scope is are you guys so with me okay so

00:10:17,530 --> 00:10:22,990
online etymology dictionary says that

00:10:19,810 --> 00:10:24,220
lexical means pertaining to words it's

00:10:22,990 --> 00:10:26,530
like okay that's not really helpful

00:10:24,220 --> 00:10:29,740
let's keep going and then you'll see

00:10:26,530 --> 00:10:32,830
that dynamic talking about motion and

00:10:29,740 --> 00:10:34,180
physics so you'll see also that it's the

00:10:32,830 --> 00:10:36,640
opposite of static and if you remember

00:10:34,180 --> 00:10:38,830
earlier in the definition from Google

00:10:36,640 --> 00:10:42,100
lexical scoping is also called static

00:10:38,830 --> 00:10:45,120
scoping so dynamic scope static scope

00:10:42,100 --> 00:10:47,560
lexical scope they're kind of opposite

00:10:45,120 --> 00:10:49,660
so I look up in Wikipedia let's talk

00:10:47,560 --> 00:10:51,940
about you know lexical versus dynamic

00:10:49,660 --> 00:10:54,250
scope and they say that for most

00:10:51,940 --> 00:10:58,210
programming languages part of a program

00:10:54,250 --> 00:11:01,630
refers to portion or source code or area

00:10:58,210 --> 00:11:03,640
of text again lexical refers it said

00:11:01,630 --> 00:11:05,560
pertaining to words so and they say to

00:11:03,640 --> 00:11:08,350
your area of text so that's interesting

00:11:05,560 --> 00:11:10,780
and that's known as lexical scope in

00:11:08,350 --> 00:11:12,640
other languages however part of a per

00:11:10,780 --> 00:11:14,950
Grahame refers to a portion of run time

00:11:12,640 --> 00:11:17,950
or time period during execution and

00:11:14,950 --> 00:11:20,170
that's known as dynamic scope and then I

00:11:17,950 --> 00:11:22,840
keep reading it says both of these terms

00:11:20,170 --> 00:11:25,000
are somewhat misleading they misused

00:11:22,840 --> 00:11:27,910
technical terms as discussed in the

00:11:25,000 --> 00:11:30,130
definition like wait so that definition

00:11:27,910 --> 00:11:32,410
is wrong and then I keep reading and I'm

00:11:30,130 --> 00:11:34,960
like but the distinction itself is

00:11:32,410 --> 00:11:37,630
accurate and precise and these are the

00:11:34,960 --> 00:11:40,630
standard respective terms it's like wait

00:11:37,630 --> 00:11:42,820
the definition was write some really

00:11:40,630 --> 00:11:45,420
confused and then I keep reading and we

00:11:42,820 --> 00:11:47,860
say that in practice with lexical scope

00:11:45,420 --> 00:11:49,330
variables definition is resolved by

00:11:47,860 --> 00:11:52,120
searching it's containing blocker

00:11:49,330 --> 00:11:54,150
functions then if that fails searching

00:11:52,120 --> 00:11:56,410
the outer containing block and so on

00:11:54,150 --> 00:11:58,540
whereas with dynamic scope the calling

00:11:56,410 --> 00:12:00,250
function is searched then the function

00:11:58,540 --> 00:12:04,000
which called that calling function and

00:12:00,250 --> 00:12:07,870
so on so that makes more sense I think

00:12:04,000 --> 00:12:10,240
and so again all that being said most

00:12:07,870 --> 00:12:12,370
modern programming languages use lexical

00:12:10,240 --> 00:12:16,050
scope instead of dynamic scope so who

00:12:12,370 --> 00:12:18,610
really cares about dynamic scope right

00:12:16,050 --> 00:12:23,830
so the way I like to explain lexical

00:12:18,610 --> 00:12:26,200
scope is with cats in boxes so let's

00:12:23,830 --> 00:12:29,140
pretend the cats are each variables and

00:12:26,200 --> 00:12:33,810
 or excuse me sir yes they're

00:12:29,140 --> 00:12:37,390
variables and the box is a function and

00:12:33,810 --> 00:12:39,720
the orange cat can see the white cat but

00:12:37,390 --> 00:12:45,880
the white cat can't see the orange cat

00:12:39,720 --> 00:12:52,510
so that is lexical scope to me okay next

00:12:45,880 --> 00:12:55,420
up is recursion so online etymology

00:12:52,510 --> 00:13:00,480
dictionary says that recursion refers to

00:12:55,420 --> 00:13:03,340
a running back word or to return and

00:13:00,480 --> 00:13:04,810
wikipedia says that the most common

00:13:03,340 --> 00:13:06,820
application of recursion is in

00:13:04,810 --> 00:13:09,910
mathematics and computer science in

00:13:06,820 --> 00:13:12,460
which it refers to a method of defining

00:13:09,910 --> 00:13:16,180
functions in which the function being

00:13:12,460 --> 00:13:18,280
defined is applied with it its own

00:13:16,180 --> 00:13:22,030
definition I was like that's a lot of

00:13:18,280 --> 00:13:24,220
defining for just one definition let's

00:13:22,030 --> 00:13:26,140
keep reading we also see that

00:13:24,220 --> 00:13:29,920
specifically this defines an infinite

00:13:26,140 --> 00:13:33,040
number of instances using a finite

00:13:29,920 --> 00:13:35,620
expression that for some instances may

00:13:33,040 --> 00:13:37,510
refer to other instances but in such a

00:13:35,620 --> 00:13:44,320
way that no loop or infinite chain of

00:13:37,510 --> 00:13:46,510
references can occur so I keep reading

00:13:44,320 --> 00:13:48,760
and then again we see that recursion in

00:13:46,510 --> 00:13:51,160
mathematics and computer science is a

00:13:48,760 --> 00:13:54,040
class of objects or methods that exhibit

00:13:51,160 --> 00:13:56,110
or a class of objects or methods

00:13:54,040 --> 00:13:58,540
exhibit recursive behavior when they can

00:13:56,110 --> 00:14:00,610
be defined by two properties number one

00:13:58,540 --> 00:14:03,100
a simple base case or cases a

00:14:00,610 --> 00:14:05,470
terminating scenario that does not use

00:14:03,100 --> 00:14:06,880
recursion to produce an answer and a set

00:14:05,470 --> 00:14:10,900
of rules that reduce all other cases

00:14:06,880 --> 00:14:12,940
towards that base case and as I said

00:14:10,900 --> 00:14:14,920
we're all developers so this definition

00:14:12,940 --> 00:14:16,630
of recursion makes sense to us but again

00:14:14,920 --> 00:14:18,310
as a beginner you read this and you're

00:14:16,630 --> 00:14:18,970
like I don't really understand what that

00:14:18,310 --> 00:14:22,840
means

00:14:18,970 --> 00:14:27,280
so I feel a little bit like this when I

00:14:22,840 --> 00:14:29,170
read that definition but the way I like

00:14:27,280 --> 00:14:30,430
to define recursion is by saying that

00:14:29,170 --> 00:14:32,890
it's just a function that calls itself

00:14:30,430 --> 00:14:35,290
and I've heard before from other people

00:14:32,890 --> 00:14:37,840
that if I say that then that includes

00:14:35,290 --> 00:14:40,300
infinite recursion and like well that's

00:14:37,840 --> 00:14:42,630
still recursion it's just probably doing

00:14:40,300 --> 00:14:42,630
it wrong

00:14:42,930 --> 00:14:46,870
so a lot of people when they're

00:14:44,770 --> 00:14:48,880
explaining recursion to me they bring up

00:14:46,870 --> 00:14:53,050
the Fibonacci sequence and I feel a lot

00:14:48,880 --> 00:14:55,210
like whatever I mean it's been at least

00:14:53,050 --> 00:14:58,390
a decade since I took any math class and

00:14:55,210 --> 00:15:00,910
I don't really even really remember what

00:14:58,390 --> 00:15:02,400
the Fibonacci sequence is so another

00:15:00,910 --> 00:15:04,570
friend of mine actually explained

00:15:02,400 --> 00:15:06,250
recursion by talking about factorials

00:15:04,570 --> 00:15:07,480
and I think we all like factorials

00:15:06,250 --> 00:15:09,850
because they have a cute little

00:15:07,480 --> 00:15:11,230
exclamation point and it's just kind of

00:15:09,850 --> 00:15:12,850
a straightforward way of explaining

00:15:11,230 --> 00:15:14,500
recursion to people because it's

00:15:12,850 --> 00:15:16,570
something that we learn in probably

00:15:14,500 --> 00:15:19,660
middle school math so when I see that

00:15:16,570 --> 00:15:21,940
definition a recursion using factorials

00:15:19,660 --> 00:15:23,880
will feel a lot like this yeah that

00:15:21,940 --> 00:15:26,650
sounds about right

00:15:23,880 --> 00:15:28,990
okay next is concatenation so

00:15:26,650 --> 00:15:31,480
concatenation means basically a linking

00:15:28,990 --> 00:15:33,490
together and as like oh that's exactly

00:15:31,480 --> 00:15:34,780
what we use concatenation for in

00:15:33,490 --> 00:15:37,570
computer science

00:15:34,780 --> 00:15:39,100
yes finally we got one right but

00:15:37,570 --> 00:15:41,140
actually I just want to talk about this

00:15:39,100 --> 00:15:46,660
because it's got the word cat in it and

00:15:41,140 --> 00:15:53,080
this is my cat and here's the recursive

00:15:46,660 --> 00:15:56,350
cat all right let's talk about

00:15:53,080 --> 00:15:59,460
instantiation so the online etymology

00:15:56,350 --> 00:16:02,080
dictionary says that instantiate is

00:15:59,460 --> 00:16:04,300
related to instantiated or instantiation

00:16:02,080 --> 00:16:08,440
and it comes from words from the

00:16:04,300 --> 00:16:11,470
instance google says that instantiate

00:16:08,440 --> 00:16:14,710
means to represent as or by an instance

00:16:11,470 --> 00:16:16,780
and they say as an example a study of

00:16:14,710 --> 00:16:20,110
two groups who seem to instantiate

00:16:16,780 --> 00:16:25,360
productive aspects of this I was like

00:16:20,110 --> 00:16:26,920
this what as if this isn't that or as if

00:16:25,360 --> 00:16:32,260
this isn't confusing enough in

00:16:26,920 --> 00:16:33,760
JavaScript so to find out what

00:16:32,260 --> 00:16:35,860
instantiation is we actually have to go

00:16:33,760 --> 00:16:38,140
back to philosophy and you'll see that

00:16:35,860 --> 00:16:41,830
in predicate logic Universal

00:16:38,140 --> 00:16:44,320
instantiation also known as UI and I was

00:16:41,830 --> 00:16:47,590
like oh UI I recognize that that's user

00:16:44,320 --> 00:16:50,260
interface right so it's also called

00:16:47,590 --> 00:16:52,060
Universal specification or Universal

00:16:50,260 --> 00:16:55,120
elimination and it's also sometimes

00:16:52,060 --> 00:16:56,920
confused with dictum v Omni but it's a

00:16:55,120 --> 00:16:58,960
valid role of inference from a truth

00:16:56,920 --> 00:17:01,570
about a member of a class of individuals

00:16:58,960 --> 00:17:04,330
to the truth about a particular

00:17:01,570 --> 00:17:05,740
individual of that class and so

00:17:04,330 --> 00:17:09,340
basically what they're trying to say is

00:17:05,740 --> 00:17:12,430
that all caps are mammals Frey is a cat

00:17:09,340 --> 00:17:15,850
therefore Frey as a mammal so that's

00:17:12,430 --> 00:17:18,490
essentially Universal instantiation so

00:17:15,850 --> 00:17:21,610
we can explain that also in code so here

00:17:18,490 --> 00:17:24,100
you'll see that I have a mammal I set

00:17:21,610 --> 00:17:27,520
its neocortex to true and then I also

00:17:24,100 --> 00:17:30,310
define cat and then I give cat the

00:17:27,520 --> 00:17:33,490
prototype mammal so the cat all caps are

00:17:30,310 --> 00:17:36,610
mammals and then I instantiate a new cat

00:17:33,490 --> 00:17:43,210
via fry so fry is therefore also a

00:17:36,610 --> 00:17:46,090
mammal cool weirdly the online etymology

00:17:43,210 --> 00:17:47,710
dictionary actually instantiation

00:17:46,090 --> 00:17:49,480
redirects to instantiate

00:17:47,710 --> 00:17:51,610
it and on wikipedia instantiate

00:17:49,480 --> 00:17:53,380
redirects to instantiation so I'm not

00:17:51,610 --> 00:17:55,980
really sure which form of the word is

00:17:53,380 --> 00:18:01,090
correct hmm

00:17:55,980 --> 00:18:04,240
all right on acronyms so CRM DMS and CDN

00:18:01,090 --> 00:18:05,890
these three always confuse me so just as

00:18:04,240 --> 00:18:08,470
a reminder or for people who don't know

00:18:05,890 --> 00:18:12,610
CRM is a customer relationship manager

00:18:08,470 --> 00:18:14,890
kind of like Salesforce CMS is a content

00:18:12,610 --> 00:18:18,210
management system kind of like WordPress

00:18:14,890 --> 00:18:23,169
and a CDN is a content delivery network

00:18:18,210 --> 00:18:25,750
kind of like Amazon crowd cloud fun okay

00:18:23,169 --> 00:18:27,700
staff versus staff so please clarify to

00:18:25,750 --> 00:18:30,130
me when you're talking about fast which

00:18:27,700 --> 00:18:31,870
one you're talking about are you talking

00:18:30,130 --> 00:18:33,669
about software as a service like

00:18:31,870 --> 00:18:36,039
Salesforce are you talking about some

00:18:33,669 --> 00:18:40,750
tactically awesome style sheets which is

00:18:36,039 --> 00:18:43,390
the CSS extension language okay now dom

00:18:40,750 --> 00:18:47,649
so this is grazie dom which is a

00:18:43,390 --> 00:18:52,960
cathedral in austria this is dom the

00:18:47,649 --> 00:18:55,210
American indie band this is V Dom which

00:18:52,960 --> 00:18:58,149
is a mountain in the p9 Alps and it's

00:18:55,210 --> 00:19:02,250
located between or between Ronda and

00:18:58,149 --> 00:19:04,840
Safie and again we see that word staff

00:19:02,250 --> 00:19:08,950
so there is lots of different types of

00:19:04,840 --> 00:19:10,980
Dom but of course the one I'm talking

00:19:08,950 --> 00:19:13,210
about is the document object model

00:19:10,980 --> 00:19:14,919
wikipedia says that the DOM is a

00:19:13,210 --> 00:19:16,690
cross-platform and language independent

00:19:14,919 --> 00:19:19,539
convention for representing and

00:19:16,690 --> 00:19:23,169
interacting with objects in HTML XHTML

00:19:19,539 --> 00:19:24,820
and XML documents okay that's kind of

00:19:23,169 --> 00:19:27,460
helpful but not really so let's check

00:19:24,820 --> 00:19:29,230
out and see what the Mozilla developers

00:19:27,460 --> 00:19:30,940
network has to say and what they say is

00:19:29,230 --> 00:19:34,750
that the DOM is a programming interface

00:19:30,940 --> 00:19:36,789
for HTML XML and SVG documents and it

00:19:34,750 --> 00:19:39,340
provides a structured representation of

00:19:36,789 --> 00:19:40,990
the document as a tree and it defines a

00:19:39,340 --> 00:19:42,909
way that the structure can be accessed

00:19:40,990 --> 00:19:45,159
from programs so that they can change

00:19:42,909 --> 00:19:46,960
the document structure style and content

00:19:45,159 --> 00:19:50,409
and like okay that makes a bit more

00:19:46,960 --> 00:19:52,539
sense thanks mdn they also provide this

00:19:50,409 --> 00:19:54,220
kind of funny diagram and like oh yeah

00:19:52,539 --> 00:19:58,809
that looks kind of like an upside-down

00:19:54,220 --> 00:19:59,770
tree so that's helpful okay next up is

00:19:58,809 --> 00:20:03,130
GUI

00:19:59,770 --> 00:20:05,380
and qui and I like to call it CLE even

00:20:03,130 --> 00:20:07,410
though other people say CLI because if

00:20:05,380 --> 00:20:10,240
we call it GUI why can't we call it CLE

00:20:07,410 --> 00:20:12,480
so when I hear Dewey I think of Legally

00:20:10,240 --> 00:20:15,850
butter cake and I get really hungry I

00:20:12,480 --> 00:20:19,600
also think of gooey ducks which are by

00:20:15,850 --> 00:20:21,550
valves that live in the ocean and then

00:20:19,600 --> 00:20:26,590
when I hear CLE I think of the painter

00:20:21,550 --> 00:20:28,000
Paul Klee but again as we know I'm

00:20:26,590 --> 00:20:30,700
talking about the graphical user

00:20:28,000 --> 00:20:34,180
interface and the command line interface

00:20:30,700 --> 00:20:36,040
and as you see graphical user interfaces

00:20:34,180 --> 00:20:37,600
were introduced in reaction to the

00:20:36,040 --> 00:20:39,460
perceived steep learning curve of

00:20:37,600 --> 00:20:43,510
command-line interfaces which require

00:20:39,460 --> 00:20:45,130
commands to be typed into a keyboard all

00:20:43,510 --> 00:20:47,250
right next is Ajax

00:20:45,130 --> 00:20:51,280
so Ajax stands for asynchronous

00:20:47,250 --> 00:20:55,300
JavaScript and XML but who even uses XML

00:20:51,280 --> 00:20:57,490
these days right and the other thing I

00:20:55,300 --> 00:21:00,820
realized with Ajax is that the jQuery

00:20:57,490 --> 00:21:04,210
method for Ajax actually has an option

00:21:00,820 --> 00:21:06,790
to run async as fall so you could

00:21:04,210 --> 00:21:11,500
actually be running s judge synchronous

00:21:06,790 --> 00:21:16,210
JavaScript and Jason right so that's

00:21:11,500 --> 00:21:18,850
confusing anyways in conclusion so with

00:21:16,210 --> 00:21:20,710
programming concepts at least for me a

00:21:18,850 --> 00:21:22,720
lot of times what happens is you just

00:21:20,710 --> 00:21:24,790
like have no idea what's going on and

00:21:22,720 --> 00:21:26,470
then at some point in time you just get

00:21:24,790 --> 00:21:29,080
it and it's really hard to pinpoint when

00:21:26,470 --> 00:21:30,760
that happened and how it happened so

00:21:29,080 --> 00:21:32,380
that makes it really hard to explain

00:21:30,760 --> 00:21:34,440
these concepts to other people if you

00:21:32,380 --> 00:21:37,810
can't like track back to where you were

00:21:34,440 --> 00:21:39,550
so it's hard I get it but I implore

00:21:37,810 --> 00:21:42,960
everyone if somebody asks you a question

00:21:39,550 --> 00:21:46,420
don't be mean II don't feel like this

00:21:42,960 --> 00:21:48,220
don't you understand anything and also

00:21:46,420 --> 00:21:50,410
don't be like this like oh are you

00:21:48,220 --> 00:21:51,430
asking me that guy or that guy because I

00:21:50,410 --> 00:21:53,950
don't really want to talk to you right

00:21:51,430 --> 00:21:56,590
now about that try to be a little bit

00:21:53,950 --> 00:21:58,300
more like this you got a dude I'm

00:21:56,590 --> 00:22:00,160
totally going to explain that to you I

00:21:58,300 --> 00:22:02,770
would totally spend the time to answer

00:22:00,160 --> 00:22:04,000
all of your questions because it's

00:22:02,770 --> 00:22:09,070
really difficult trying to learn

00:22:04,000 --> 00:22:10,750
programming so here's a quick video kind

00:22:09,070 --> 00:22:13,130
of explaining what I'm thinking about

00:22:10,750 --> 00:22:15,049
you'll see number 12 has fallen

00:22:13,130 --> 00:22:18,080
ice she's kind of back here in the

00:22:15,049 --> 00:22:20,450
corner she's like I don't understand

00:22:18,080 --> 00:22:23,090
what GUI means everyone around me is

00:22:20,450 --> 00:22:24,950
talking about GUI and they all know what

00:22:23,090 --> 00:22:27,169
they're talking about and I don't know

00:22:24,950 --> 00:22:28,669
what it means and then you see other

00:22:27,169 --> 00:22:31,309
number 12 who's on the opposing team

00:22:28,669 --> 00:22:37,730
come over and she's like let me help you

00:22:31,309 --> 00:22:41,679
I will explain what GUI means GUI

00:22:37,730 --> 00:22:44,120
is the graphical user interface and

00:22:41,679 --> 00:22:46,250
she's like oh my god thank you

00:22:44,120 --> 00:22:48,830
I finally understand what GUI means and

00:22:46,250 --> 00:22:50,179
I can play along with everybody else so

00:22:48,830 --> 00:22:53,000
when we're all a little bit more like

00:22:50,179 --> 00:22:56,299
number 12 then we can party together in

00:22:53,000 --> 00:22:57,930
the computer science jargon land thank

00:22:56,299 --> 00:23:05,469
you

00:22:57,930 --> 00:23:05,469

YouTube URL: https://www.youtube.com/watch?v=iNrmKyA1vig


