Title: PHP UK Conference 2017 - Hannes Van De Vreken - Code Review Beyond Code Style
Publication date: 2017-04-03
Playlist: PHP UK Conference 2017
Description: 
	Reviewing code can feel like a secondary task. Discussing code can be easy though, if you leave out syntax details. Following a couple of guide lines for pull requests can make code reviewing much easier. Some code style rules can drastically reduce the mental overhead needed to understand code changes. Furthermore this talk will give some general guidelines on how to give feedback on PRs as a peer developer or coworker. These rules are not to keep for yourself, share them with your peers and your life will get easier.
Captions: 
	00:00:03,350 --> 00:00:08,990
nice let's talk about code reviews today

00:00:05,960 --> 00:00:10,219
um welcome all for joining me also in

00:00:08,990 --> 00:00:12,139
the second group I can see you but

00:00:10,219 --> 00:00:14,839
welcome for joining me I heard that the

00:00:12,139 --> 00:00:16,250
second room is also packed so officially

00:00:14,839 --> 00:00:20,660
next year I'm going to speak under the

00:00:16,250 --> 00:00:22,730
mainstage you can read about this with a

00:00:20,660 --> 00:00:26,349
peach PUK conference my twitter handle

00:00:22,730 --> 00:00:28,970
and peach PUK 17 so my name is Hannes

00:00:26,349 --> 00:00:32,570
and I can describe myself in a couple of

00:00:28,970 --> 00:00:34,940
emojis or emoji that's the official Perl

00:00:32,570 --> 00:00:38,420
I can describe myself with the Belgian

00:00:34,940 --> 00:00:40,940
flag I like to swim I like the cycle I

00:00:38,420 --> 00:00:43,670
like to run and also love working with

00:00:40,940 --> 00:00:45,949
computers I love making digital products

00:00:43,670 --> 00:00:47,809
the last one isn't really an emoji but

00:00:45,949 --> 00:00:49,760
it's the company logo I work for a

00:00:47,809 --> 00:00:51,739
company called made with love it's a

00:00:49,760 --> 00:00:53,870
Belgian company but for a remote company

00:00:51,739 --> 00:00:56,570
so we also have people in France Brazil

00:00:53,870 --> 00:01:00,199
Canada basically all over the world

00:00:56,570 --> 00:01:02,960
well not in the eastern side of or not

00:01:00,199 --> 00:01:05,150
not to the east of Europe but mainly to

00:01:02,960 --> 00:01:07,100
the west we do PHP and JavaScript

00:01:05,150 --> 00:01:08,420
development for clients it could be a

00:01:07,100 --> 00:01:12,080
government could be a start-up could be

00:01:08,420 --> 00:01:15,830
anything but we're here to talk about

00:01:12,080 --> 00:01:18,439
code reviews of course so what is code

00:01:15,830 --> 00:01:22,040
review let's first outline the subject a

00:01:18,439 --> 00:01:26,689
bit a code of you is someone who wants

00:01:22,040 --> 00:01:28,520
to make go change but he doesn't he

00:01:26,689 --> 00:01:31,460
isn't allowed to make it straight to

00:01:28,520 --> 00:01:33,560
production so what he or she does is

00:01:31,460 --> 00:01:36,890
make a couple of changes and show it off

00:01:33,560 --> 00:01:38,390
to a peer another programmer or someone

00:01:36,890 --> 00:01:39,649
else is inside the company or outside

00:01:38,390 --> 00:01:42,110
the company doesn't matter

00:01:39,649 --> 00:01:45,920
showing your code before it gets merged

00:01:42,110 --> 00:01:49,969
to other environments like staging or

00:01:45,920 --> 00:01:52,430
production that is a go to view who can

00:01:49,969 --> 00:01:53,659
do the code review someone else inside

00:01:52,430 --> 00:01:55,969
the company could be a consultant

00:01:53,659 --> 00:01:58,610
outside of the company could be this

00:01:55,969 --> 00:01:59,149
video could be another junior def could

00:01:58,610 --> 00:02:01,430
be anyone

00:01:59,149 --> 00:02:03,939
basically not all code reviews have to

00:02:01,430 --> 00:02:06,770
be done by the CTO or the lead developer

00:02:03,939 --> 00:02:09,259
so what is look like you push some

00:02:06,770 --> 00:02:11,450
changes to github or to bitbucket

00:02:09,259 --> 00:02:14,420
whatever you want and someone else is

00:02:11,450 --> 00:02:16,040
going to review that he or she is going

00:02:14,420 --> 00:02:17,270
to look at the commits look at the

00:02:16,040 --> 00:02:19,760
individual lines

00:02:17,270 --> 00:02:22,040
changed and provide some feedback all

00:02:19,760 --> 00:02:25,250
right it's a feedback loop based on that

00:02:22,040 --> 00:02:28,220
feedback the programmer will reply to

00:02:25,250 --> 00:02:30,410
some answers make a reply to some

00:02:28,220 --> 00:02:32,540
questions with some answers why did I do

00:02:30,410 --> 00:02:33,560
this why they do it we died why did I do

00:02:32,540 --> 00:02:36,380
that

00:02:33,560 --> 00:02:40,190
and maybe in also push some more commits

00:02:36,380 --> 00:02:43,910
to fix stuff and that's a circle so it's

00:02:40,190 --> 00:02:45,500
a basic feedback loop if you make the

00:02:43,910 --> 00:02:49,700
feedback loop fast enough it feels like

00:02:45,500 --> 00:02:52,910
they're programming actually so in the

00:02:49,700 --> 00:02:55,520
end the reviewer will say oh well this

00:02:52,910 --> 00:02:58,010
is finally in a state state that I want

00:02:55,520 --> 00:03:01,700
to merge this into develop branch or

00:02:58,010 --> 00:03:06,020
master branch and push it out to staging

00:03:01,700 --> 00:03:08,060
or production so that is approving not

00:03:06,020 --> 00:03:10,640
everyone has the luxury to work in a

00:03:08,060 --> 00:03:12,910
team with multiple people so you can

00:03:10,640 --> 00:03:15,830
also do code review or your own code

00:03:12,910 --> 00:03:19,850
before committing code you can do git

00:03:15,830 --> 00:03:22,010
add - B - review individual chunks of

00:03:19,850 --> 00:03:24,410
changes before you actually commit them

00:03:22,010 --> 00:03:28,490
so that's also pretty useful it's a

00:03:24,410 --> 00:03:32,000
one-man show or one-woman show you can

00:03:28,490 --> 00:03:35,810
also work with git branches and github

00:03:32,000 --> 00:03:38,180
and make your own that polygraphs before

00:03:35,810 --> 00:03:41,380
merging them if you're if it's a

00:03:38,180 --> 00:03:44,060
one-woman show or a one-man show

00:03:41,380 --> 00:03:45,770
basically you review your own your own

00:03:44,060 --> 00:03:48,800
code in a different environment on a

00:03:45,770 --> 00:03:51,080
different screen than your IDE that's

00:03:48,800 --> 00:03:53,209
also useful that helps with pointing out

00:03:51,080 --> 00:03:57,590
some failures or some flaws in your own

00:03:53,209 --> 00:03:59,900
code but why would we spend some time on

00:03:57,590 --> 00:04:02,450
that why wouldn't we just push to

00:03:59,900 --> 00:04:06,170
production and if it works on my machine

00:04:02,450 --> 00:04:10,430
works in production right well basically

00:04:06,170 --> 00:04:13,280
this before I started doing this talk I

00:04:10,430 --> 00:04:15,650
was at a meet-up and I was talking to

00:04:13,280 --> 00:04:19,130
some person and the person wasn't happy

00:04:15,650 --> 00:04:21,560
with his current workplace and basically

00:04:19,130 --> 00:04:24,050
everything he said why he hated working

00:04:21,560 --> 00:04:28,220
there was because they didn't do code

00:04:24,050 --> 00:04:30,030
reviews the goats I'll sucked people

00:04:28,220 --> 00:04:32,370
were pushing things to production

00:04:30,030 --> 00:04:34,770
action would break more senior

00:04:32,370 --> 00:04:37,230
developers would refer changes every

00:04:34,770 --> 00:04:40,140
time when someone else had pushed

00:04:37,230 --> 00:04:42,390
something to laughter there was no

00:04:40,140 --> 00:04:44,190
communication between the developers so

00:04:42,390 --> 00:04:46,890
basically everything he said that he

00:04:44,190 --> 00:04:51,090
hated about the company was because they

00:04:46,890 --> 00:04:53,550
didn't do code reviews so it is pretty

00:04:51,090 --> 00:04:57,240
useful to spend some time on that it's

00:04:53,550 --> 00:04:59,550
not a waste of time for the person that

00:04:57,240 --> 00:05:02,370
is submitting the code it is useful

00:04:59,550 --> 00:05:04,590
because they can learn from their peers

00:05:02,370 --> 00:05:07,700
they get feedback on their on their code

00:05:04,590 --> 00:05:10,890
maybe there's a better way to do this

00:05:07,700 --> 00:05:15,230
maybe there's a different design button

00:05:10,890 --> 00:05:15,230
that better suits this situation as a

00:05:16,280 --> 00:05:20,520
submitter of a code review you also

00:05:18,660 --> 00:05:22,710
start to feel more responsible for the

00:05:20,520 --> 00:05:25,730
product you first have to show your code

00:05:22,710 --> 00:05:29,550
what you did your changes to your peers

00:05:25,730 --> 00:05:32,130
it's everyone coding is a craft so

00:05:29,550 --> 00:05:34,290
everyone likes to put out their best

00:05:32,130 --> 00:05:37,110
effort and show it off to their peers

00:05:34,290 --> 00:05:38,910
look what I did you start to feel more

00:05:37,110 --> 00:05:41,160
responsible for the product and for the

00:05:38,910 --> 00:05:45,140
code that you're putting out you're

00:05:41,160 --> 00:05:45,140
taking pride in your code that you craft

00:05:46,370 --> 00:05:54,090
it's also useful for the the peers that

00:05:49,350 --> 00:05:56,730
are reviewing the code I do maybe 15

00:05:54,090 --> 00:06:00,000
hours a week on code reviews and I still

00:05:56,730 --> 00:06:02,340
learn every week PHP has so many

00:06:00,000 --> 00:06:05,340
functions I still learn new functions

00:06:02,340 --> 00:06:08,850
every week I still learn new things or

00:06:05,340 --> 00:06:11,970
creative ways of doing or crossing a

00:06:08,850 --> 00:06:14,370
solution I can still learn from the most

00:06:11,970 --> 00:06:19,410
junior deaths in in my company and and

00:06:14,370 --> 00:06:22,350
in other companies that we work for it

00:06:19,410 --> 00:06:24,450
also it's also useful because I may not

00:06:22,350 --> 00:06:27,750
be working on some features that my

00:06:24,450 --> 00:06:30,420
peers are working on and I still want to

00:06:27,750 --> 00:06:32,610
know how that how that is built I can

00:06:30,420 --> 00:06:35,340
still learn from that because maybe in

00:06:32,610 --> 00:06:36,960
two weeks time or six months time I will

00:06:35,340 --> 00:06:39,890
be working on the same features and I

00:06:36,960 --> 00:06:42,120
want to know upfront how it's built I

00:06:39,890 --> 00:06:43,660
don't have to know but I like to know

00:06:42,120 --> 00:06:47,800
because

00:06:43,660 --> 00:06:51,670
is craft so it's useful as a reviewer

00:06:47,800 --> 00:06:53,260
too it's also useful for management so

00:06:51,670 --> 00:06:55,510
if you go back to your company and you

00:06:53,260 --> 00:06:59,020
go to your manager and say I want to do

00:06:55,510 --> 00:07:01,900
code reviews well this is why it raises

00:06:59,020 --> 00:07:05,110
the level of both your juniors and your

00:07:01,900 --> 00:07:08,920
seniors they both learn from each other

00:07:05,110 --> 00:07:12,430
it's making your team more coherent they

00:07:08,920 --> 00:07:14,770
start to work better together it also

00:07:12,430 --> 00:07:17,110
raises product awareness but about all

00:07:14,770 --> 00:07:20,500
the features how the features work how

00:07:17,110 --> 00:07:22,930
are they built if someone leaves the

00:07:20,500 --> 00:07:24,910
company in two weeks time that and the

00:07:22,930 --> 00:07:26,770
person has built a new feature three

00:07:24,910 --> 00:07:28,990
weeks ago and someone else has to take

00:07:26,770 --> 00:07:31,540
over but it didn't do code reviews it's

00:07:28,990 --> 00:07:34,200
going to be a hell of a task to look

00:07:31,540 --> 00:07:37,120
into the code that no one has ever seen

00:07:34,200 --> 00:07:40,300
if you dot if you had would have done

00:07:37,120 --> 00:07:46,450
code reviews it's easy just jump in and

00:07:40,300 --> 00:07:49,720
you've already seen this code so it it

00:07:46,450 --> 00:07:52,180
generates better code and you get some

00:07:49,720 --> 00:07:54,100
feedback loop and you improve the code

00:07:52,180 --> 00:07:57,010
before actually merging it so better

00:07:54,100 --> 00:08:01,590
code means more maintainable code which

00:07:57,010 --> 00:08:07,150
means easier addition of new features

00:08:01,590 --> 00:08:18,100
that's what bosses like write some PHP

00:08:07,150 --> 00:08:22,600
CEO like sweet capital stuff this is not

00:08:18,100 --> 00:08:27,910
really good it's better to do less

00:08:22,600 --> 00:08:34,840
deploys and have a feedback cycle before

00:08:27,910 --> 00:08:36,840
pushing to production so what should you

00:08:34,840 --> 00:08:40,630
do when you're making a pull request

00:08:36,840 --> 00:08:43,599
right it's not as easy as get commit

00:08:40,630 --> 00:08:47,500
kiss bush click create new full request

00:08:43,599 --> 00:08:48,070
it's a bit more first you get a task

00:08:47,500 --> 00:08:49,720
assign

00:08:48,070 --> 00:08:53,290
right build a new feature remove a

00:08:49,720 --> 00:08:57,370
feature adjust the feature read the task

00:08:53,290 --> 00:09:00,580
what is expected plan a meeting with

00:08:57,370 --> 00:09:04,270
with the product owner or whoever made

00:09:00,580 --> 00:09:09,100
it made that task ask ask some questions

00:09:04,270 --> 00:09:13,420
what is expected how should this work is

00:09:09,100 --> 00:09:15,460
this a filter with a slider it is just a

00:09:13,420 --> 00:09:18,100
plain text field how will this look like

00:09:15,460 --> 00:09:20,710
what is it expected what do I need to

00:09:18,100 --> 00:09:28,480
make do I need to make a Gaussian curve

00:09:20,710 --> 00:09:31,720
filter or just plain text search that's

00:09:28,480 --> 00:09:34,300
you know make do some analysis do some

00:09:31,720 --> 00:09:38,920
research before you actually start

00:09:34,300 --> 00:09:42,610
making the code then when you start the

00:09:38,920 --> 00:09:45,670
code test first right make it test what

00:09:42,610 --> 00:09:46,620
is expected and integration test that's

00:09:45,670 --> 00:09:49,870
easy

00:09:46,620 --> 00:09:53,860
make sure that the test fails and then

00:09:49,870 --> 00:09:56,080
start coding your way oh that's the best

00:09:53,860 --> 00:09:58,410
practice but I admit I don't always do

00:09:56,080 --> 00:09:58,410
TDD

00:10:02,610 --> 00:10:10,170
right so you made your test commit the

00:10:04,860 --> 00:10:12,509
desk make it go to see I see fail cool

00:10:10,170 --> 00:10:20,069
it feels and then add some more tests

00:10:12,509 --> 00:10:23,309
certain some more commits like at a new

00:10:20,069 --> 00:10:29,639
end point rename a variable make a new

00:10:23,309 --> 00:10:31,980
CLI command desk to back up remove some

00:10:29,639 --> 00:10:34,319
conditionals make some if-else

00:10:31,980 --> 00:10:37,279
statements disappear by using a better

00:10:34,319 --> 00:10:41,759
way of coding to some solid design

00:10:37,279 --> 00:10:44,369
remove something do some good self

00:10:41,759 --> 00:10:46,379
fixing make that a separate commit each

00:10:44,369 --> 00:10:52,920
time everything you do is a separate

00:10:46,379 --> 00:10:55,850
commit about commit messages I can go on

00:10:52,920 --> 00:10:58,589
and on about that for another hour but

00:10:55,850 --> 00:10:59,749
after this it's lunch right so I won't

00:10:58,589 --> 00:11:03,569
do that

00:10:59,749 --> 00:11:06,449
basically what I do is I think this

00:11:03,569 --> 00:11:09,269
commit and then I continue writing what

00:11:06,449 --> 00:11:11,819
my comment messages this commit six is

00:11:09,269 --> 00:11:14,399
the code style this commit renamed this

00:11:11,819 --> 00:11:17,999
variable I don't write this commit but I

00:11:14,399 --> 00:11:20,459
do write the rest so that's my that's my

00:11:17,999 --> 00:11:23,699
format of doing commit messages yours

00:11:20,459 --> 00:11:25,919
might be different but that's okay um so

00:11:23,699 --> 00:11:28,679
you made all the commits and then you

00:11:25,919 --> 00:11:30,899
push it to github or bitbucket and then

00:11:28,679 --> 00:11:35,329
you want to compare the changes to the

00:11:30,899 --> 00:11:39,379
base branch develop maybe or development

00:11:35,329 --> 00:11:43,049
then you hit create new polygraphs

00:11:39,379 --> 00:11:47,009
there's a big form here use that it's

00:11:43,049 --> 00:11:52,290
useful create a beautiful title what

00:11:47,009 --> 00:11:55,499
does this do write it this adds this new

00:11:52,290 --> 00:11:57,139
feature some brief title and then use

00:11:55,499 --> 00:11:59,910
the big box below this is the

00:11:57,139 --> 00:12:02,639
description polygraph description to

00:11:59,910 --> 00:12:05,790
fill out all the details you want to

00:12:02,639 --> 00:12:09,360
properly document this PR write a change

00:12:05,790 --> 00:12:11,809
log right I remove this variable I

00:12:09,360 --> 00:12:15,130
remove that feature I added an endpoint

00:12:11,809 --> 00:12:21,580
I really back

00:12:15,130 --> 00:12:24,100
if you're good laughs a link to the

00:12:21,580 --> 00:12:26,800
assigned issue or the tasks the person

00:12:24,100 --> 00:12:30,130
that is going to review your PR will

00:12:26,800 --> 00:12:34,810
want to know why you did this why why

00:12:30,130 --> 00:12:36,490
did you add this endpoint so the person

00:12:34,810 --> 00:12:38,260
that is reviewing your code can actually

00:12:36,490 --> 00:12:42,250
click that and go see what the

00:12:38,260 --> 00:12:44,980
assignment was and then use that in the

00:12:42,250 --> 00:12:47,740
in the back of this is or her head to

00:12:44,980 --> 00:12:52,600
review your code it is okay is this in

00:12:47,740 --> 00:12:56,680
line with the expectations then below

00:12:52,600 --> 00:12:59,530
the changelog also add some description

00:12:56,680 --> 00:13:01,840
about the decisions you made why did you

00:12:59,530 --> 00:13:05,920
use this design pattern or why did you

00:13:01,840 --> 00:13:07,660
use this composite package right so that

00:13:05,920 --> 00:13:09,970
it doesn't have to be rediscover the

00:13:07,660 --> 00:13:12,580
words so that the reviewer doesn't have

00:13:09,970 --> 00:13:14,830
to add a lot of questions why did you

00:13:12,580 --> 00:13:20,080
use this or why did you rename this

00:13:14,830 --> 00:13:23,740
variable to I instead of index something

00:13:20,080 --> 00:13:27,310
like that then last step to write assign

00:13:23,740 --> 00:13:30,310
some reviewers one or more right it

00:13:27,310 --> 00:13:35,860
could be yourself could be someone else

00:13:30,310 --> 00:13:39,220
it could be multiple people right so

00:13:35,860 --> 00:13:41,980
that's your pull request great um but I

00:13:39,220 --> 00:13:46,470
also put less said something about good

00:13:41,980 --> 00:13:50,350
style and now I want to give you a brief

00:13:46,470 --> 00:13:53,100
Intermezzo about good style we all know

00:13:50,350 --> 00:13:55,570
peers are - right you all know that

00:13:53,100 --> 00:13:57,670
well you may not know but soon there's

00:13:55,570 --> 00:14:01,030
also peers r12 with some beach beach

00:13:57,670 --> 00:14:03,010
beach 7 syntax tough and there's also a

00:14:01,030 --> 00:14:06,040
symphony code cell which is what we use

00:14:03,010 --> 00:14:08,790
in our company this code style actually

00:14:06,040 --> 00:14:12,220
extends PS or two with some extra rules

00:14:08,790 --> 00:14:14,530
and on top of that we even add some more

00:14:12,220 --> 00:14:16,870
rules it's open source so you can look

00:14:14,530 --> 00:14:19,300
it up we add some more rules to make it

00:14:16,870 --> 00:14:20,920
easier to review some code I'm going to

00:14:19,300 --> 00:14:23,440
give you some examples and then you say

00:14:20,920 --> 00:14:25,450
left or right which one which is the

00:14:23,440 --> 00:14:28,600
diffs go diffs

00:14:25,450 --> 00:14:33,730
is easiest to review okay first one

00:14:28,600 --> 00:14:37,030
which is easiest left correct why maybe

00:14:33,730 --> 00:14:40,240
the green isn't so clear yeah

00:14:37,030 --> 00:14:43,150
smaller this so it just says I added one

00:14:40,240 --> 00:14:46,240
line the right the differ on the right

00:14:43,150 --> 00:14:50,740
is exactly the same but there wasn't the

00:14:46,240 --> 00:14:53,110
trailing comma here so we added the

00:14:50,740 --> 00:14:56,710
multi-line error a trailing comma rule

00:14:53,110 --> 00:14:59,800
to our rule set of goat cells because it

00:14:56,710 --> 00:15:02,350
makes it easier to review code if you

00:14:59,800 --> 00:15:04,630
look at the left one you see oh one line

00:15:02,350 --> 00:15:07,120
has been added if you take a look at the

00:15:04,630 --> 00:15:09,550
right one it says one headline has been

00:15:07,120 --> 00:15:11,430
removed and then you add a two but what

00:15:09,550 --> 00:15:14,800
does this functionally change it's

00:15:11,430 --> 00:15:16,270
easier to see the left one that the

00:15:14,800 --> 00:15:18,640
functional changes in the last one

00:15:16,270 --> 00:15:20,920
compared to the right one and that is

00:15:18,640 --> 00:15:22,720
what you want as a reviewer you want to

00:15:20,920 --> 00:15:24,250
see the functional changes you don't

00:15:22,720 --> 00:15:25,960
care about goats style you care about

00:15:24,250 --> 00:15:27,850
the functional changes that is what your

00:15:25,960 --> 00:15:30,630
task is to see what the functional

00:15:27,850 --> 00:15:35,550
changes are and to give feedback on that

00:15:30,630 --> 00:15:35,550
next example which one is the easiest

00:15:35,640 --> 00:15:42,910
the right one right um a lot of people

00:15:39,850 --> 00:15:47,380
like to align stuff in their IDE so it's

00:15:42,910 --> 00:15:51,250
easier to read in columns but if you

00:15:47,380 --> 00:15:55,930
change one key of this JSON for example

00:15:51,250 --> 00:15:58,750
then you might need to reorder in the

00:15:55,930 --> 00:16:01,390
entire column and that makes it harder

00:15:58,750 --> 00:16:04,570
to review sometimes you have files with

00:16:01,390 --> 00:16:06,760
300 entries in a JSON file and it's

00:16:04,570 --> 00:16:08,830
super hard to see what the actual

00:16:06,760 --> 00:16:11,230
difference is if you change one key and

00:16:08,830 --> 00:16:13,300
you make a super long key and then you

00:16:11,230 --> 00:16:16,060
have to reformat the entire file it's

00:16:13,300 --> 00:16:21,370
super hard to spot what the single line

00:16:16,060 --> 00:16:26,200
that caused the change is so forget

00:16:21,370 --> 00:16:31,030
about the alignment just do this do PHP

00:16:26,200 --> 00:16:32,830
doc parens disable it that would align

00:16:31,030 --> 00:16:35,950
the PHP Docs

00:16:32,830 --> 00:16:38,770
Doug block also disabled the align

00:16:35,950 --> 00:16:40,990
double arrow disabled align equals

00:16:38,770 --> 00:16:42,400
because that will if you assign stuff

00:16:40,990 --> 00:16:45,730
with an equal sign

00:16:42,400 --> 00:16:48,220
I would align all the equal signs I hate

00:16:45,730 --> 00:16:50,290
that I hate as a reviewer I can't stand

00:16:48,220 --> 00:16:54,850
that it's hard to see what has actually

00:16:50,290 --> 00:17:00,760
changed next one is braces which one is

00:16:54,850 --> 00:17:03,610
easiest to read the right on right the

00:17:00,760 --> 00:17:07,420
last one didn't have changes that have a

00:17:03,610 --> 00:17:10,000
code block after the if statement so if

00:17:07,420 --> 00:17:12,699
it's a one line if blocks you can

00:17:10,000 --> 00:17:14,829
actually drop the the curly braces but

00:17:12,699 --> 00:17:15,309
it's hard to spot what what has actually

00:17:14,829 --> 00:17:18,280
changed

00:17:15,309 --> 00:17:21,189
okay this dark green bit helps a bit but

00:17:18,280 --> 00:17:23,500
it's not it's not enough it's super easy

00:17:21,189 --> 00:17:24,579
to see that oh you added one subscriber

00:17:23,500 --> 00:17:29,280
here that's it

00:17:24,579 --> 00:17:32,320
super easy same for constructors you can

00:17:29,280 --> 00:17:37,059
new up a new item without using the

00:17:32,320 --> 00:17:39,340
braces just use new with braces good

00:17:37,059 --> 00:17:42,760
cell rule if you use that you actually

00:17:39,340 --> 00:17:47,260
enforce the use of the braces and this

00:17:42,760 --> 00:17:48,970
one everyone likes this one right it's

00:17:47,260 --> 00:17:51,100
at the end of a file when you don't have

00:17:48,970 --> 00:17:54,250
a new line after the last empty line it

00:17:51,100 --> 00:17:57,850
says no github says no new line at the

00:17:54,250 --> 00:18:01,660
end of the file and this week I saw this

00:17:57,850 --> 00:18:03,850
at a client they do a slash slash slash

00:18:01,660 --> 00:18:08,710
four slashes I don't know why and the

00:18:03,850 --> 00:18:12,160
file no new line yes it's crazy just use

00:18:08,710 --> 00:18:16,860
BSR to add some more rules if you like

00:18:12,160 --> 00:18:20,260
and add that to your CI CI check so that

00:18:16,860 --> 00:18:23,230
everyone has their code cell enforced

00:18:20,260 --> 00:18:27,670
and it makes a good reviewing code

00:18:23,230 --> 00:18:29,800
easier so what should this is the end of

00:18:27,670 --> 00:18:32,320
the intermezzo what should they review

00:18:29,800 --> 00:18:33,970
or do i firstly talked about what should

00:18:32,320 --> 00:18:37,809
the submitter do what should the

00:18:33,970 --> 00:18:41,470
reviewer do well first the don't just

00:18:37,809 --> 00:18:43,809
don't bash about Goodsell make it an

00:18:41,470 --> 00:18:49,660
automated tool make it the check-in see

00:18:43,809 --> 00:18:51,730
I use a lending tool and force it it's

00:18:49,660 --> 00:18:54,940
not easy if you're working with a legacy

00:18:51,730 --> 00:18:57,120
code base but try to work towards a

00:18:54,940 --> 00:19:01,720
uniform code

00:18:57,120 --> 00:19:05,010
um another thing you don't have to check

00:19:01,720 --> 00:19:07,000
as a reviewer is it is code notable

00:19:05,010 --> 00:19:08,710
github will tell you if it's not

00:19:07,000 --> 00:19:10,660
virginal it will tell you if the if

00:19:08,710 --> 00:19:13,710
there are conflicts so that's something

00:19:10,660 --> 00:19:18,760
you don't have to worry about

00:19:13,710 --> 00:19:20,950
don't complain about duplicated code two

00:19:18,760 --> 00:19:23,440
lines of duplicated code isn't bad if

00:19:20,950 --> 00:19:27,370
it's readable if it's cleared it's more

00:19:23,440 --> 00:19:29,620
clear than just leave it use some

00:19:27,370 --> 00:19:32,440
automated tools to report duplicated

00:19:29,620 --> 00:19:35,080
code it's okay if there's two lines of

00:19:32,440 --> 00:19:38,200
duplicate code just use scrutinize er CI

00:19:35,080 --> 00:19:42,580
or something to notice you to notify you

00:19:38,200 --> 00:19:44,830
about it but don't start commenting on

00:19:42,580 --> 00:19:48,730
code like make an abstract function for

00:19:44,830 --> 00:19:50,679
this so necessary if it's readable it's

00:19:48,730 --> 00:19:53,020
okay just keep track of your technical

00:19:50,679 --> 00:19:58,299
depth yes good as you'll see I use

00:19:53,020 --> 00:20:00,700
travesty is you said cs6 or linting

00:19:58,299 --> 00:20:03,940
tools whatever es lint whatever you want

00:20:00,700 --> 00:20:07,720
just use all those tools to make your

00:20:03,940 --> 00:20:09,970
job as a reviewer easier if CI says that

00:20:07,720 --> 00:20:12,580
something is not in on par with company

00:20:09,970 --> 00:20:15,159
standards or project standards then the

00:20:12,580 --> 00:20:16,809
CI tools will tell you so basically

00:20:15,159 --> 00:20:21,190
everything that's automated you

00:20:16,809 --> 00:20:25,200
shouldn't do that as a that's don't one

00:20:21,190 --> 00:20:28,419
last thing that's not automated if

00:20:25,200 --> 00:20:30,340
discussing the issue the person that has

00:20:28,419 --> 00:20:33,100
submitted to PR should already have

00:20:30,340 --> 00:20:36,010
discussed that F that person should

00:20:33,100 --> 00:20:39,909
already had the discussion and the

00:20:36,010 --> 00:20:41,409
questions and why is this what what what

00:20:39,909 --> 00:20:45,520
should this look like you don't have to

00:20:41,409 --> 00:20:48,100
rediscover basically in an ideal world

00:20:45,520 --> 00:20:51,429
the the submitter of the code will

00:20:48,100 --> 00:20:54,309
already have done that if you see that

00:20:51,429 --> 00:20:57,520
the submitter of the code didn't ask

00:20:54,309 --> 00:21:01,210
enough questions close the PR and say

00:20:57,520 --> 00:21:05,250
please Reedus cusses because i am pretty

00:21:01,210 --> 00:21:05,250
sure that this is not what is expected

00:21:08,320 --> 00:21:16,490
so what you should do as a reviewer is

00:21:13,509 --> 00:21:22,580
look at VR look at the description the

00:21:16,490 --> 00:21:25,159
changelog the design decisions go to the

00:21:22,580 --> 00:21:27,950
links issue as well to see what was

00:21:25,159 --> 00:21:30,230
expected and what is discussed if you

00:21:27,950 --> 00:21:32,690
read that first and then you look at the

00:21:30,230 --> 00:21:35,360
code you will easily spot that when

00:21:32,690 --> 00:21:39,259
something is not implemented the way it

00:21:35,360 --> 00:21:42,049
should and then you can say maybe go

00:21:39,259 --> 00:21:45,139
back to the project manager or the

00:21:42,049 --> 00:21:48,590
product owner to reduce that the design

00:21:45,139 --> 00:21:50,990
of the feature after that you go look at

00:21:48,590 --> 00:21:53,600
the code and you look for things like

00:21:50,990 --> 00:21:56,720
the naming of variables the naming of

00:21:53,600 --> 00:22:01,370
methods yeah you look at design patterns

00:21:56,720 --> 00:22:03,289
or they implement as well do the correct

00:22:01,370 --> 00:22:05,269
classes implement the correct interfaces

00:22:03,289 --> 00:22:07,299
stuff like that that's something that

00:22:05,269 --> 00:22:11,779
cannot be automated

00:22:07,299 --> 00:22:16,009
there's no AI system yet that can detect

00:22:11,779 --> 00:22:20,870
design patterns if someone ever invents

00:22:16,009 --> 00:22:23,080
that there were all out of jobs look at

00:22:20,870 --> 00:22:27,559
the clarity of the code is it readable

00:22:23,080 --> 00:22:29,090
when you have to continue developing

00:22:27,559 --> 00:22:32,899
that feature in two or three months time

00:22:29,090 --> 00:22:36,580
will you be able to step in and start

00:22:32,899 --> 00:22:41,169
progressing is it clear

00:22:36,580 --> 00:22:48,049
sometimes code is just too creative

00:22:41,169 --> 00:22:51,169
sometimes one example we had to use

00:22:48,049 --> 00:22:53,480
slugs in the URL but the slug had to be

00:22:51,169 --> 00:22:58,480
unique so when it's not unique we just

00:22:53,480 --> 00:23:03,200
add - 2 - 3 - 4 until it's unique and

00:22:58,480 --> 00:23:06,110
there was a while loop which DQM inserts

00:23:03,200 --> 00:23:11,299
an index and said don't you want to

00:23:06,110 --> 00:23:13,179
increment like from 1 - 2 - 3 - 4 and

00:23:11,299 --> 00:23:17,570
then I noticed that there was no

00:23:13,179 --> 00:23:19,490
concatenation of the - and then after 15

00:23:17,570 --> 00:23:20,519
minutes of tinkering what does this go

00:23:19,490 --> 00:23:24,419
do I file

00:23:20,519 --> 00:23:27,929
doubt that actually the the index

00:23:24,419 --> 00:23:29,849
decremented to minus 2 minus 3 and that

00:23:27,929 --> 00:23:30,989
was converted to a string and a

00:23:29,849 --> 00:23:37,589
penetrated slug

00:23:30,989 --> 00:23:39,629
that's just do creative a stinker about

00:23:37,589 --> 00:23:44,070
that for 15 minutes to figure out how it

00:23:39,629 --> 00:23:46,709
was implemented it's crazy so I stepped

00:23:44,070 --> 00:23:49,679
in and I said it's not really clear

00:23:46,709 --> 00:23:52,709
maybe just make it super clear add a

00:23:49,679 --> 00:23:58,139
dash and then add the string version of

00:23:52,709 --> 00:24:01,979
the int anyway so it needs to be clear

00:23:58,139 --> 00:24:06,839
clear ask some questions if something is

00:24:01,979 --> 00:24:10,589
not clear like why did you name it like

00:24:06,839 --> 00:24:14,429
this and not use this static factory

00:24:10,589 --> 00:24:20,249
methods or something always be asking

00:24:14,429 --> 00:24:22,529
questions even if you know just asking

00:24:20,249 --> 00:24:26,489
questions that the the answer to the

00:24:22,529 --> 00:24:30,719
question can be a valid reason for doing

00:24:26,489 --> 00:24:32,489
stuff like this could be the answer to

00:24:30,719 --> 00:24:34,549
the question could be oh I don't know I

00:24:32,489 --> 00:24:39,389
just implemented it like this but maybe

00:24:34,549 --> 00:24:42,539
another way is better so questions can

00:24:39,389 --> 00:24:46,859
still go both ways it's better than

00:24:42,539 --> 00:24:49,169
saying you should do it this way or you

00:24:46,859 --> 00:24:52,409
should do it that way because if you ask

00:24:49,169 --> 00:24:57,809
a question there might be a valid reason

00:24:52,409 --> 00:25:00,719
behind it behind the decision also look

00:24:57,809 --> 00:25:03,570
at so we looked at naming and stuff we

00:25:00,719 --> 00:25:05,299
should also look at missing migrations

00:25:03,570 --> 00:25:08,339
will this deploy to production

00:25:05,299 --> 00:25:11,399
automatically will this cause any

00:25:08,339 --> 00:25:13,619
failures in Redis or something

00:25:11,399 --> 00:25:15,899
maybe we should clear cache when we

00:25:13,619 --> 00:25:19,489
deploy this stuff like that that's

00:25:15,899 --> 00:25:23,309
something that AI cannot do yet

00:25:19,489 --> 00:25:26,879
then when the cycle is complete and you

00:25:23,309 --> 00:25:28,720
approve this pull request you should

00:25:26,879 --> 00:25:35,529
give some credit

00:25:28,720 --> 00:25:41,159
if it thumbs up well done add the ship

00:25:35,529 --> 00:25:43,720
emoji or a ship that's being shipped off

00:25:41,159 --> 00:25:46,419
some some gifts or something and make it

00:25:43,720 --> 00:25:49,539
funny you make it cheerful give some

00:25:46,419 --> 00:25:54,970
credits like I'm glad we finally can

00:25:49,539 --> 00:25:58,269
merge this good job also about the

00:25:54,970 --> 00:26:01,720
questions if you have some questions and

00:25:58,269 --> 00:26:04,119
you're discussing some some decision

00:26:01,720 --> 00:26:06,700
maybe link some articles or blog posts

00:26:04,119 --> 00:26:08,379
could be useful could be that this

00:26:06,700 --> 00:26:11,440
person or that person doesn't know this

00:26:08,379 --> 00:26:13,629
design pattern or or doesn't know what

00:26:11,440 --> 00:26:18,249
command bus just link an article about

00:26:13,629 --> 00:26:20,139
commanders it's it's a way of educating

00:26:18,249 --> 00:26:26,320
the person without having to type an

00:26:20,139 --> 00:26:30,220
entire blog post in a poly quest so the

00:26:26,320 --> 00:26:31,989
reviewer Adam submitter has also been

00:26:30,220 --> 00:26:34,029
putting the effort in to make some

00:26:31,989 --> 00:26:37,629
atomic commits so you can actually use

00:26:34,029 --> 00:26:40,960
this go this previous commit in the next

00:26:37,629 --> 00:26:48,519
commit I hate that this previous just

00:26:40,960 --> 00:26:49,929
John stood right OCD you know if the

00:26:48,519 --> 00:26:51,879
reviewer has been putting in the effort

00:26:49,929 --> 00:26:54,279
to make atomic commits you can use this

00:26:51,879 --> 00:26:56,320
to look at how this person has been

00:26:54,279 --> 00:27:00,840
implementing this take it step by step

00:26:56,320 --> 00:27:00,840
it's like their programming got delayed

00:27:02,099 --> 00:27:09,970
if you're reviewing code and you've been

00:27:06,419 --> 00:27:11,909
giving feedback on the person's Polybius

00:27:09,970 --> 00:27:16,299
it should also mind your language

00:27:11,909 --> 00:27:18,190
language is important I already said

00:27:16,299 --> 00:27:22,359
that you should be using some gifts or

00:27:18,190 --> 00:27:28,090
some emojis thumbs up shaped it makes it

00:27:22,359 --> 00:27:30,039
more cheerful also give some credit when

00:27:28,090 --> 00:27:32,320
when you when you learn something you if

00:27:30,039 --> 00:27:34,059
you see a function and you never heard

00:27:32,320 --> 00:27:35,909
about that function and super smart to

00:27:34,059 --> 00:27:38,639
use that function in this situation just

00:27:35,909 --> 00:27:41,970
say so I learned something new thanks

00:27:38,639 --> 00:27:41,970
give compliments

00:27:42,110 --> 00:27:55,499
use a gift like yep looks good to me or

00:27:51,799 --> 00:27:58,730
if it's a super huge PR with 500 commits

00:27:55,499 --> 00:28:02,399
and you finally managed to ship it I

00:27:58,730 --> 00:28:09,350
feel sorry for the camera man or a woman

00:28:02,399 --> 00:28:14,070
ouch so language language is important

00:28:09,350 --> 00:28:18,600
when you're reviewing some code make it

00:28:14,070 --> 00:28:20,220
less personal and step away from the

00:28:18,600 --> 00:28:21,929
person that has been putting out the

00:28:20,220 --> 00:28:23,960
code you don't have to say I'm gonna oh

00:28:21,929 --> 00:28:28,110
my god I'm a big fan of your code

00:28:23,960 --> 00:28:39,570
fanboying is not really at that it's not

00:28:28,110 --> 00:28:43,139
for this situation so another thing I

00:28:39,570 --> 00:28:46,110
like to do when a polygraph is ready to

00:28:43,139 --> 00:28:50,460
be shipped but you have some small

00:28:46,110 --> 00:28:53,639
amount of time left then I ask maybe add

00:28:50,460 --> 00:28:56,190
this one more thing just go one step

00:28:53,639 --> 00:28:59,159
further give it the extra 1% just to see

00:28:56,190 --> 00:29:02,220
how far you can stretch the person how

00:28:59,159 --> 00:29:05,669
far you can make this person go you go

00:29:02,220 --> 00:29:08,639
to making the perfect code on the other

00:29:05,669 --> 00:29:12,840
hand if time is pressing and the code

00:29:08,639 --> 00:29:16,710
works there's some issues with it some

00:29:12,840 --> 00:29:19,950
naming things but basically it works let

00:29:16,710 --> 00:29:23,659
it go just make it ship that's also fine

00:29:19,950 --> 00:29:28,320
just depending on the time on the order

00:29:23,659 --> 00:29:32,129
the time till the deadline make your

00:29:28,320 --> 00:29:34,830
code you use change a bit if you have

00:29:32,129 --> 00:29:37,919
some extra time wish for better code if

00:29:34,830 --> 00:29:42,350
you don't have enough time let go some

00:29:37,919 --> 00:29:42,350
principles and ship the code

00:29:42,470 --> 00:29:50,169
has anyone heard about the lizard brain

00:29:45,230 --> 00:29:53,179
I see a few nodding heads okay

00:29:50,169 --> 00:29:56,240
the lizard brain is basically one of the

00:29:53,179 --> 00:29:58,940
oldest parts of our brain we inherited

00:29:56,240 --> 00:30:01,039
that from the lizards like alligators

00:29:58,940 --> 00:30:05,840
and stuff I don't know much about

00:30:01,039 --> 00:30:09,320
lizards but basically the lizard brain

00:30:05,840 --> 00:30:12,950
is the thing that actually activates our

00:30:09,320 --> 00:30:15,350
offensive mode when we get attacked so

00:30:12,950 --> 00:30:17,870
when we get attacked we fight back

00:30:15,350 --> 00:30:22,340
it's an old part of our brain that does

00:30:17,870 --> 00:30:27,260
that and basically you can trigger that

00:30:22,340 --> 00:30:31,400
by using the word the wrong word if you

00:30:27,260 --> 00:30:35,600
say something like do you even know this

00:30:31,400 --> 00:30:40,130
design pattern do you even know how to

00:30:35,600 --> 00:30:46,030
write JavaScript that's offensive and

00:30:40,130 --> 00:30:48,320
people fight back so mind your language

00:30:46,030 --> 00:30:49,610
you're working with people you don't

00:30:48,320 --> 00:30:51,620
want to offend them and they're they're

00:30:49,610 --> 00:30:54,890
your peers you will have to work with

00:30:51,620 --> 00:30:57,799
them maybe for a long time so better be

00:30:54,890 --> 00:31:00,110
friends with your peers and you some

00:30:57,799 --> 00:31:07,250
suggest this language instead of saying

00:31:00,110 --> 00:31:11,360
you make it about yourself right for

00:31:07,250 --> 00:31:13,400
example you can you see you pull

00:31:11,360 --> 00:31:17,059
requests and you know that some things

00:31:13,400 --> 00:31:20,919
can be better you some suggest this

00:31:17,059 --> 00:31:25,580
language like I would maybe think about

00:31:20,919 --> 00:31:30,380
something you know make it about you and

00:31:25,580 --> 00:31:33,620
say I would or I feel like if we if we

00:31:30,380 --> 00:31:40,190
figure out a way to do something like

00:31:33,620 --> 00:31:42,650
that use maybe a lot or or wood or what

00:31:40,190 --> 00:31:44,840
do you think about this make some

00:31:42,650 --> 00:31:48,110
suggestions and then ask for their

00:31:44,840 --> 00:31:51,010
opinion instead of saying instead of

00:31:48,110 --> 00:31:51,010
enforcing stuff

00:31:51,130 --> 00:32:01,070
so yeah that's suggestive language don't

00:31:58,160 --> 00:32:03,830
trigger their lizard brain the next

00:32:01,070 --> 00:32:08,140
thing this is a compound emoji it's not

00:32:03,830 --> 00:32:10,580
a real one it's called the sandwich

00:32:08,140 --> 00:32:13,700
you know when you have to give feedback

00:32:10,580 --> 00:32:20,390
to a person better wrap it up with

00:32:13,700 --> 00:32:23,660
something nice you might be giving some

00:32:20,390 --> 00:32:28,160
hard words or maybe touch their feelings

00:32:23,660 --> 00:32:31,640
but better start off soft right soft bun

00:32:28,160 --> 00:32:33,679
on the bottom say like it looks like it

00:32:31,640 --> 00:32:36,549
works good job you've been putting in a

00:32:33,679 --> 00:32:42,190
lot of time and effort in this but

00:32:36,549 --> 00:32:42,190
here's the next layer the layer

00:32:42,340 --> 00:32:48,230
it's so funny I'll tell you this later

00:32:46,070 --> 00:32:51,320
so go to the next layer and then give

00:32:48,230 --> 00:32:55,730
the feedback why do you think about Amp

00:32:51,320 --> 00:33:00,410
that class maybe change it to a factory

00:32:55,730 --> 00:33:02,480
or I don't know maybe we or there's

00:33:00,410 --> 00:33:04,910
already something in this project that

00:33:02,480 --> 00:33:07,790
can do that instead of rewriting stuff

00:33:04,910 --> 00:33:10,720
so maybe what do you think about using

00:33:07,790 --> 00:33:13,610
dis class instead of writing your own

00:33:10,720 --> 00:33:17,090
what do you think again use some

00:33:13,610 --> 00:33:20,240
suggestive language there and then after

00:33:17,090 --> 00:33:22,490
the feedback return to the first soft

00:33:20,240 --> 00:33:26,140
layer you want soft bun to top it off

00:33:22,490 --> 00:33:30,309
which wasn't certainly TCS or something

00:33:26,140 --> 00:33:32,809
say something other suggestive like

00:33:30,309 --> 00:33:35,179
maybe if you work with this or that

00:33:32,809 --> 00:33:37,160
person I'm pretty sure that we can

00:33:35,179 --> 00:33:38,929
collectively finish this off and ship

00:33:37,160 --> 00:33:39,350
this code and then move on to other

00:33:38,929 --> 00:33:42,200
things

00:33:39,350 --> 00:33:45,559
that's topping it off with a soft bun so

00:33:42,200 --> 00:33:47,390
start off soft give the feedback you

00:33:45,559 --> 00:33:49,669
suggest this language there you don't

00:33:47,390 --> 00:33:50,929
want to trigger their lizard brain and

00:33:49,669 --> 00:33:55,400
then top it off with something nice

00:33:50,929 --> 00:33:57,850
again all right so that is how I like to

00:33:55,400 --> 00:34:00,799
give feedback and the funny thing is

00:33:57,850 --> 00:34:03,340
once you know this technique you start

00:34:00,799 --> 00:34:05,170
to notice when someone else uses it

00:34:03,340 --> 00:34:08,720
[Laughter]

00:34:05,170 --> 00:34:17,300
laughs sometimes it's like wait did you

00:34:08,720 --> 00:34:19,700
jump but it's okay it's okay they know

00:34:17,300 --> 00:34:21,340
how to give good feedback notes it tells

00:34:19,700 --> 00:34:24,760
you something about them instead of

00:34:21,340 --> 00:34:30,080
telling something about you did wrong

00:34:24,760 --> 00:34:31,879
and then last but not least running

00:34:30,080 --> 00:34:36,520
ahead of schedule here but you'll be

00:34:31,879 --> 00:34:40,010
first in the lunch queue this box

00:34:36,520 --> 00:34:43,040
it's about merging it's the last step of

00:34:40,010 --> 00:34:48,260
ability quest who do you think should

00:34:43,040 --> 00:34:50,330
merge a bully list the one that has been

00:34:48,260 --> 00:34:52,159
reviewing the code or the one that has

00:34:50,330 --> 00:34:55,629
been putting out the effort

00:34:52,159 --> 00:35:00,260
I see some nodding heads at both sides

00:34:55,629 --> 00:35:03,700
basically what we feel is it's it's

00:35:00,260 --> 00:35:07,400
personal we work with a remote team and

00:35:03,700 --> 00:35:09,970
some people might be working in the p.m.

00:35:07,400 --> 00:35:14,060
while we are already asleep in Europe

00:35:09,970 --> 00:35:18,970
basically whoever presses the button and

00:35:14,060 --> 00:35:21,950
triggers the deploy to staging has to be

00:35:18,970 --> 00:35:24,410
has to be comfortable switch fixing the

00:35:21,950 --> 00:35:27,560
deploy or fixing the the incoming bucks

00:35:24,410 --> 00:35:29,450
neck errors because you don't want the

00:35:27,560 --> 00:35:31,790
staging to be down or a dust environment

00:35:29,450 --> 00:35:33,800
for the client it has to be down when

00:35:31,790 --> 00:35:35,359
someone who actually can fix it is

00:35:33,800 --> 00:35:40,670
sleeping you don't want to call other

00:35:35,359 --> 00:35:42,260
people in their sleep there's also this

00:35:40,670 --> 00:35:44,240
little link here command line

00:35:42,260 --> 00:35:46,790
instructions that's also pretty useful

00:35:44,240 --> 00:35:50,420
before merging it you might consider

00:35:46,790 --> 00:35:54,109
pulling in the code locally and dust it

00:35:50,420 --> 00:35:57,170
out right it's not only for QA engineers

00:35:54,109 --> 00:35:59,600
to test out stuff you it's useful to

00:35:57,170 --> 00:36:03,369
merge this code locally and check it out

00:35:59,600 --> 00:36:08,619
before merging it into development so

00:36:03,369 --> 00:36:11,359
wrapping up here code reviews are nice

00:36:08,619 --> 00:36:13,880
they're useful for your entire team your

00:36:11,359 --> 00:36:16,220
entire company it's not a waste of time

00:36:13,880 --> 00:36:18,110
as a submitter I would like to urge you

00:36:16,220 --> 00:36:20,030
to review your own code before

00:36:18,110 --> 00:36:22,280
committing it or before sending in the

00:36:20,030 --> 00:36:25,520
polygraph you might catch some stuff

00:36:22,280 --> 00:36:29,390
before someone else catches it maybe a

00:36:25,520 --> 00:36:30,380
lost for dump or something automate as

00:36:29,390 --> 00:36:34,340
much as possible

00:36:30,380 --> 00:36:36,200
put some more linting tools in CI some

00:36:34,340 --> 00:36:42,050
more testing environment s ting tools

00:36:36,200 --> 00:36:47,450
smoke tests whatever may be a I just

00:36:42,050 --> 00:36:50,510
thought about this maybe some fake fake

00:36:47,450 --> 00:36:53,540
some deploy so see you so you can do

00:36:50,510 --> 00:36:57,410
capistrano deploy without actually doing

00:36:53,540 --> 00:37:01,850
it so researching right right before you

00:36:57,410 --> 00:37:04,820
move the symlink give some valuable

00:37:01,850 --> 00:37:07,220
feedback but stay positive don't touch

00:37:04,820 --> 00:37:09,110
their little brain let's try to use

00:37:07,220 --> 00:37:10,790
suggestive language and of course the

00:37:09,110 --> 00:37:12,860
shits language if you see the switch

00:37:10,790 --> 00:37:15,950
 sandwich being used against you

00:37:12,860 --> 00:37:21,410
don't be offended it's just well played

00:37:15,950 --> 00:37:23,750
and now I would like to all of you to go

00:37:21,410 --> 00:37:27,110
to your teams go to your bosses spread

00:37:23,750 --> 00:37:28,850
the world spread the word give some good

00:37:27,110 --> 00:37:31,230
feedback and learn from your peers

00:37:28,850 --> 00:37:31,260
that's it thank you

00:37:31,230 --> 00:37:38,339
[Music]

00:37:31,260 --> 00:37:41,349
[Applause]

00:37:38,339 --> 00:37:43,510
there's a joint in link here please give

00:37:41,349 --> 00:37:45,220
me feedback it's been a bit short but

00:37:43,510 --> 00:37:47,410
okay you'll be the first in the lunch

00:37:45,220 --> 00:37:50,079
queue give some feedback to other speed

00:37:47,410 --> 00:37:52,210
speakers as well something a lot of

00:37:50,079 --> 00:37:53,799
people don't know is you can also give

00:37:52,210 --> 00:37:57,369
feedback to the conference organizers

00:37:53,799 --> 00:37:59,349
that's also useful for them you can give

00:37:57,369 --> 00:38:01,780
feedback to them and come back next year

00:37:59,349 --> 00:38:04,980
to a better conference I would like to

00:38:01,780 --> 00:38:04,980
answer some questions now

00:38:06,900 --> 00:38:14,920
yeah there's mic in this room and a mic

00:38:12,039 --> 00:38:17,500
in the other room I want to answer one

00:38:14,920 --> 00:38:21,099
question at least from each room so uhm

00:38:17,500 --> 00:38:24,789
as a code reviewer you can give quite

00:38:21,099 --> 00:38:26,680
factual um comments like this is how I

00:38:24,789 --> 00:38:29,710
would have done it or things like that

00:38:26,680 --> 00:38:31,690
which sometimes being code reviews

00:38:29,710 --> 00:38:33,549
people can get really offended they can

00:38:31,690 --> 00:38:35,500
take it personally when of course it's

00:38:33,549 --> 00:38:37,089
just about it's about the code but they

00:38:35,500 --> 00:38:39,609
kind of feel oh you're saying that I'm a

00:38:37,089 --> 00:38:41,470
terrible developer how do you explain to

00:38:39,609 --> 00:38:44,289
them that it is just about the code that

00:38:41,470 --> 00:38:45,789
you do it to someone who with 20 times

00:38:44,289 --> 00:38:48,549
more experience and that you get this

00:38:45,789 --> 00:38:49,839
feedback and it's just factual and that

00:38:48,549 --> 00:38:52,720
you still think that they're a great

00:38:49,839 --> 00:38:54,339
person without them still feeling yeah

00:38:52,720 --> 00:38:56,609
but you said that I was wrong you can

00:38:54,339 --> 00:38:59,020
still make them feel valuable if you

00:38:56,609 --> 00:39:03,789
append a little question what do you

00:38:59,020 --> 00:39:07,390
think make make it make it a discussion

00:39:03,789 --> 00:39:11,500
about to equal developers every

00:39:07,390 --> 00:39:13,960
developer is equal in my in my eyes yeah

00:39:11,500 --> 00:39:15,789
you suggest if language add the question

00:39:13,960 --> 00:39:18,430
and that removes ninety ninety percent

00:39:15,789 --> 00:39:20,859
of the offensiveness of feedback

00:39:18,430 --> 00:39:27,309
sentence does that answer your question

00:39:20,859 --> 00:39:29,079
or mostly but in a case where I think in

00:39:27,309 --> 00:39:31,960
a case where they do do something that's

00:39:29,079 --> 00:39:34,270
wrong which is fine you can say like you

00:39:31,960 --> 00:39:36,010
can say that if you've done some other

00:39:34,270 --> 00:39:39,329
great stuff but they still pick up that

00:39:36,010 --> 00:39:41,650
point that is objectively wrong um and

00:39:39,329 --> 00:39:43,779
you can't necessarily make that a

00:39:41,650 --> 00:39:46,260
discussion is their way of just like a

00:39:43,779 --> 00:39:49,190
really simple way of explaining to them

00:39:46,260 --> 00:39:50,660
like don't take it personally

00:39:49,190 --> 00:39:54,940
is there just any advice that you have

00:39:50,660 --> 00:39:59,980
for just Ron it's maybe back up your

00:39:54,940 --> 00:40:05,270
arguments with sex instead of fake news

00:39:59,980 --> 00:40:08,660
oh thank you back yeah I don't know give

00:40:05,270 --> 00:40:13,339
some documentation and make it a joint

00:40:08,660 --> 00:40:16,599
effort and yeah just try to argument

00:40:13,339 --> 00:40:20,270
your case of low as possible and then

00:40:16,599 --> 00:40:22,640
maybe you can figure out if not you

00:40:20,270 --> 00:40:27,380
another thing you can do is bring in the

00:40:22,640 --> 00:40:31,520
second opinion by someone else who is

00:40:27,380 --> 00:40:32,540
not opinionated or biased that's

00:40:31,520 --> 00:40:35,349
something else you can do

00:40:32,540 --> 00:40:41,869
does that answer your question yeah okay

00:40:35,349 --> 00:40:45,950
more questions in the other room oh hi

00:40:41,869 --> 00:40:50,210
hi sorry you want some water

00:40:45,950 --> 00:40:52,579
yeah is there it in terms of reviewers

00:40:50,210 --> 00:40:54,740
are there there an optimal amount of

00:40:52,579 --> 00:40:59,000
reviewers in order to many of you can

00:40:54,740 --> 00:41:00,319
you have to me too many yeah so I'm

00:40:59,000 --> 00:41:04,069
going to learn about the feedback loop

00:41:00,319 --> 00:41:06,800
right so you have five reviewers on on a

00:41:04,069 --> 00:41:09,980
pull request yeah one says yes yeah

00:41:06,800 --> 00:41:12,380
second one says yes third one says no

00:41:09,980 --> 00:41:15,079
late lot do some exactly let's do some

00:41:12,380 --> 00:41:18,710
refactoring on this goes back into that

00:41:15,079 --> 00:41:21,859
cycle again yeah there's some projects

00:41:18,710 --> 00:41:23,450
where we do one reviewer there's some

00:41:21,859 --> 00:41:25,490
projects where we do three reviewers

00:41:23,450 --> 00:41:29,960
depends on the client and some projects

00:41:25,490 --> 00:41:34,579
and I noticed that if you have three

00:41:29,960 --> 00:41:36,109
reviewers or more the list of open pull

00:41:34,579 --> 00:41:37,700
requests only get longer and longer

00:41:36,109 --> 00:41:39,970
because simple requests are being

00:41:37,700 --> 00:41:45,349
blocked by one person

00:41:39,970 --> 00:41:47,740
mostly me but who has always has more

00:41:45,349 --> 00:41:50,780
arguments or things that need to change

00:41:47,740 --> 00:41:53,180
so I don't know if there's an optimum I

00:41:50,780 --> 00:41:58,060
think that's something you have to

00:41:53,180 --> 00:42:00,370
figure out yourself for me I think - if

00:41:58,060 --> 00:42:02,470
it's pretty optimum

00:42:00,370 --> 00:42:04,450
does that answer your question yeah you

00:42:02,470 --> 00:42:05,980
know I mean yeah there's no right on

00:42:04,450 --> 00:42:10,120
testing all right like some are later

00:42:05,980 --> 00:42:12,010
and just wondering you have too many but

00:42:10,120 --> 00:42:20,860
that's good that's great thanks more

00:42:12,010 --> 00:42:22,960
questions yes Oh in the back hey can you

00:42:20,860 --> 00:42:26,260
not see me that was it that was a really

00:42:22,960 --> 00:42:33,640
great talk I run a small team of

00:42:26,260 --> 00:42:36,250
developers and it's a make a point on

00:42:33,640 --> 00:42:37,960
the lizard brain issue has a lady

00:42:36,250 --> 00:42:41,230
brought up over there so one way we've

00:42:37,960 --> 00:42:44,170
got around that lizard brain issue is we

00:42:41,230 --> 00:42:46,420
have like a what we call a code standard

00:42:44,170 --> 00:42:49,210
but it's like basically Gillett a code

00:42:46,420 --> 00:42:53,230
standard so it's just a basic list of

00:42:49,210 --> 00:42:55,690
rules that the team all agrees to so

00:42:53,230 --> 00:42:58,090
it's abstracted responsibility away from

00:42:55,690 --> 00:42:59,770
the individual code reviewer so for

00:42:58,090 --> 00:43:02,110
instance like those things like every

00:42:59,770 --> 00:43:04,330
method must have a comment oh yeah

00:43:02,110 --> 00:43:06,760
so if my junior developer goes and

00:43:04,330 --> 00:43:09,130
submit something without a comment I

00:43:06,760 --> 00:43:11,980
just go hector change that and there's

00:43:09,130 --> 00:43:15,250
no argument the team has agreed to that

00:43:11,980 --> 00:43:17,230
yeah that's something we do as well we

00:43:15,250 --> 00:43:18,900
have some regular discussions like right

00:43:17,230 --> 00:43:20,830
after this talk I have a call about

00:43:18,900 --> 00:43:22,840
deployments and stuff and now we have

00:43:20,830 --> 00:43:24,970
team discussion and then we make up some

00:43:22,840 --> 00:43:27,310
rules write them down and then when

00:43:24,970 --> 00:43:29,740
someone new comes if someone new comes

00:43:27,310 --> 00:43:32,410
in they have to read all the rules which

00:43:29,740 --> 00:43:34,030
is bit coming from that yeah I mean I

00:43:32,410 --> 00:43:36,400
always refer to that when we have

00:43:34,030 --> 00:43:39,130
discussion again about something so my

00:43:36,400 --> 00:43:42,460
actual question is would you agree that

00:43:39,130 --> 00:43:46,150
like a code review isn't about the here

00:43:42,460 --> 00:43:47,980
and now that you can't it's not about

00:43:46,150 --> 00:43:49,810
improving code right now because

00:43:47,980 --> 00:43:52,810
essentially if you subscribe to the idea

00:43:49,810 --> 00:43:55,360
that all code is terrible which it

00:43:52,810 --> 00:43:58,450
generally is you can't you can't really

00:43:55,360 --> 00:44:00,940
fix it at that precise moment what it's

00:43:58,450 --> 00:44:02,950
about that the code review process is

00:44:00,940 --> 00:44:05,140
about what you touched on to begin with

00:44:02,950 --> 00:44:08,200
which is getting the team to stop

00:44:05,140 --> 00:44:11,800
talking to each other and start learning

00:44:08,200 --> 00:44:12,750
from each other and indirectly that

00:44:11,800 --> 00:44:15,090
should in

00:44:12,750 --> 00:44:17,760
the quality of code over time but like

00:44:15,090 --> 00:44:19,770
an individual review won't fix much more

00:44:17,760 --> 00:44:20,820
than the missing comment or something

00:44:19,770 --> 00:44:24,150
like that yeah

00:44:20,820 --> 00:44:26,010
correct I agree sorry was there a

00:44:24,150 --> 00:44:30,390
question that was kind of wondering if

00:44:26,010 --> 00:44:35,480
that's what you agree with I agree I

00:44:30,390 --> 00:44:39,810
agree I agree there's too many fake news

00:44:35,480 --> 00:44:50,040
all right more questions yes actually

00:44:39,810 --> 00:44:52,560
two more hands earlier you talked about

00:44:50,040 --> 00:44:54,660
two how you browse through atomic commit

00:44:52,560 --> 00:44:57,300
sometimes what are your thoughts on that

00:44:54,660 --> 00:44:59,700
versus squashing a whole merge request

00:44:57,300 --> 00:45:02,190
all the commits together because

00:44:59,700 --> 00:45:03,870
sometimes with like a large code base if

00:45:02,190 --> 00:45:06,480
you're going back in time the yoy

00:45:03,870 --> 00:45:08,070
changes made easier when it's a I squash

00:45:06,480 --> 00:45:09,560
commits when I have something to hide

00:45:08,070 --> 00:45:13,230
mm-hm

00:45:09,560 --> 00:45:15,900
like a missing are left over for dump or

00:45:13,230 --> 00:45:18,530
control the log the nice question commit

00:45:15,900 --> 00:45:21,270
but otherwise I don't rewrite history

00:45:18,530 --> 00:45:23,280
it's always useful to see why something

00:45:21,270 --> 00:45:26,190
changed and then you can look at the

00:45:23,280 --> 00:45:28,260
commit message and then see the

00:45:26,190 --> 00:45:30,360
surrounding commits before and after so

00:45:28,260 --> 00:45:33,420
I'm not a big fan of squashing commits

00:45:30,360 --> 00:45:36,030
but it's a personal thing you can have a

00:45:33,420 --> 00:45:39,270
different opinion of course does that

00:45:36,030 --> 00:45:42,900
answer your question yeah okay I did mmm

00:45:39,270 --> 00:45:44,760
I had one more all right hi sorry we

00:45:42,900 --> 00:45:46,860
have a small team so we never do code

00:45:44,760 --> 00:45:49,490
review actually like three of us but

00:45:46,860 --> 00:45:52,230
what we want to start what's the best

00:45:49,490 --> 00:45:54,570
point to start it like was the best

00:45:52,230 --> 00:45:56,520
place to start code review do you use

00:45:54,570 --> 00:46:01,200
github or bitbucket yeah we use github

00:45:56,520 --> 00:46:04,680
easy start using branches yeah one what

00:46:01,200 --> 00:46:07,200
we do and then start with small pull

00:46:04,680 --> 00:46:08,970
requests like changing a config file or

00:46:07,200 --> 00:46:11,010
something and I'll let someone else take

00:46:08,970 --> 00:46:13,320
a look at it instead of pushing it

00:46:11,010 --> 00:46:16,170
straight to develop do you already use

00:46:13,320 --> 00:46:23,279
good branches yeah yeah we have like

00:46:16,170 --> 00:46:26,680
staging life you can also you know

00:46:23,279 --> 00:46:29,559
PR is basically a diff between two

00:46:26,680 --> 00:46:32,319
branches so you already have that you

00:46:29,559 --> 00:46:36,549
can already start right now start small

00:46:32,319 --> 00:46:39,930
with some small pulley breasts then try

00:46:36,549 --> 00:46:42,760
to do you have the phenomenon of

00:46:39,930 --> 00:46:47,230
everlasting branches that are never

00:46:42,760 --> 00:46:50,019
being merged like big branches that are

00:46:47,230 --> 00:46:52,990
a few months old and you can get them

00:46:50,019 --> 00:46:56,049
merged we only we only have like three

00:46:52,990 --> 00:46:57,760
branches and just develop a runs merge

00:46:56,049 --> 00:47:00,760
the staging in a stage and goes to

00:46:57,760 --> 00:47:03,430
production oh okay so each of us has

00:47:00,760 --> 00:47:07,260
team own developer runs oh and then it

00:47:03,430 --> 00:47:09,609
goes to one staging and then it goes and

00:47:07,260 --> 00:47:12,970
but we all have access to each other

00:47:09,609 --> 00:47:17,279
Brock you ever get into a situation

00:47:12,970 --> 00:47:19,809
where someone wants to continue working

00:47:17,279 --> 00:47:22,539
but also once their code being merged

00:47:19,809 --> 00:47:26,579
and then they make the second develop

00:47:22,539 --> 00:47:30,400
personal developer inch right yeah

00:47:26,579 --> 00:47:32,710
because I want to you know how good work

00:47:30,400 --> 00:47:34,059
yeah you happen more commits and then

00:47:32,710 --> 00:47:36,190
this is the commit that you want to

00:47:34,059 --> 00:47:38,200
merge into develop but you want to

00:47:36,190 --> 00:47:40,569
continue working on the same progress

00:47:38,200 --> 00:47:42,849
right then you can branch off from that

00:47:40,569 --> 00:47:44,710
again and then make that a pull request

00:47:42,849 --> 00:47:49,990
and continue working on something else

00:47:44,710 --> 00:47:52,779
right we can have a discussion later I

00:47:49,990 --> 00:47:54,039
have a call for work but after that we

00:47:52,779 --> 00:47:57,339
can always have a discussion

00:47:54,039 --> 00:47:58,869
oh baby sides with some beers one more

00:47:57,339 --> 00:48:02,859
question and we have all more question

00:47:58,869 --> 00:48:06,849
two more do you do any part of the code

00:48:02,859 --> 00:48:10,420
review offline just face-to-face or on

00:48:06,849 --> 00:48:14,680
the phone or something like that because

00:48:10,420 --> 00:48:17,609
they're a remote team no but I can

00:48:14,680 --> 00:48:19,950
definitely see the value in that so

00:48:17,609 --> 00:48:24,329
going back to the issue with the

00:48:19,950 --> 00:48:24,329
difficult bits we tend to be the

00:48:24,809 --> 00:48:31,930
criticizing bit offline and there when

00:48:28,480 --> 00:48:34,359
it all off so is it when something is

00:48:31,930 --> 00:48:35,720
crucial or important that you want to do

00:48:34,359 --> 00:48:39,600
a

00:48:35,720 --> 00:48:45,840
add more developers to review go to

00:48:39,600 --> 00:48:48,470
review just trying to follow the sort of

00:48:45,840 --> 00:48:51,090
criticize in private praise in public

00:48:48,470 --> 00:48:52,620
routines if there's something where yeah

00:48:51,090 --> 00:48:54,600
this code is pretty bad

00:48:52,620 --> 00:48:56,690
oh I don't want to say that in front of

00:48:54,600 --> 00:48:59,790
everyone on gifts because if you

00:48:56,690 --> 00:49:02,460
decouple the critiquing from the person

00:48:59,790 --> 00:49:05,090
that you're giving critique to then you

00:49:02,460 --> 00:49:07,470
can do public feedback instead of

00:49:05,090 --> 00:49:11,840
criticizing privately

00:49:07,470 --> 00:49:14,430
we never criticize privately actually

00:49:11,840 --> 00:49:15,360
that's kind of answer your question or

00:49:14,430 --> 00:49:18,240
am I still on

00:49:15,360 --> 00:49:21,300
yeah just interesting it's just we have

00:49:18,240 --> 00:49:23,280
a rule that if you say something and

00:49:21,300 --> 00:49:25,650
then the other person says no I disagree

00:49:23,280 --> 00:49:27,270
it should be how I've done it we just

00:49:25,650 --> 00:49:29,010
instantly have a rule say okay let's

00:49:27,270 --> 00:49:31,020
take it offline I was just wondering if

00:49:29,010 --> 00:49:33,530
you had any kind of processes around the

00:49:31,020 --> 00:49:41,310
where someone disagrees with the

00:49:33,530 --> 00:49:46,290
critique I can't really comment on that

00:49:41,310 --> 00:49:47,580
because a bit bragging but we have a

00:49:46,290 --> 00:49:53,520
great team so we don't have that

00:49:47,580 --> 00:49:57,300
situation sorry but every more job

00:49:53,520 --> 00:49:59,280
everyone's a way of doing Pollak west is

00:49:57,300 --> 00:50:02,280
different and everyone's wave giving

00:49:59,280 --> 00:50:04,170
feedback to different so you can have

00:50:02,280 --> 00:50:09,210
different ways of doing it definitely

00:50:04,170 --> 00:50:12,030
thank you I have any standards about how

00:50:09,210 --> 00:50:14,640
much changes or updates drill out into a

00:50:12,030 --> 00:50:20,310
polar quest no hard rules or standards

00:50:14,640 --> 00:50:22,980
but we do a gif comments on pull quests

00:50:20,310 --> 00:50:25,620
that are too large or or dragging on too

00:50:22,980 --> 00:50:30,240
long so there's no hard to rule for us

00:50:25,620 --> 00:50:32,190
but we do notice them do you have some

00:50:30,240 --> 00:50:33,780
tool or something to do that now we're

00:50:32,190 --> 00:50:35,730
just just from experience when you

00:50:33,780 --> 00:50:38,820
understand all it keeps things taking

00:50:35,730 --> 00:50:40,770
over then every now and again huge one

00:50:38,820 --> 00:50:42,600
comes in and with those days you got to

00:50:40,770 --> 00:50:44,430
go back in your wasting more time go me

00:50:42,600 --> 00:50:46,410
and as a nice

00:50:44,430 --> 00:50:48,960
so generally avoid when we just curious

00:50:46,410 --> 00:50:51,180
from your own experience sometimes I

00:50:48,960 --> 00:50:53,100
when you see the list of photographs I

00:50:51,180 --> 00:50:53,610
reverse the list and see the oldest one

00:50:53,100 --> 00:50:55,590
first

00:50:53,610 --> 00:50:58,250
and then I go in and say it is still

00:50:55,590 --> 00:51:00,690
necessary if not close it if yes

00:50:58,250 --> 00:51:04,110
requires an action within one week or

00:51:00,690 --> 00:51:09,260
something that's something you can do as

00:51:04,110 --> 00:51:12,390
well so to reduce the list of old

00:51:09,260 --> 00:51:12,780
inactive philippa does that answer your

00:51:12,390 --> 00:51:17,010
question

00:51:12,780 --> 00:51:28,320
one more one more I think other people

00:51:17,010 --> 00:51:30,780
want lunch but my question is um how

00:51:28,320 --> 00:51:33,330
would you solve the problem when there

00:51:30,780 --> 00:51:36,210
is a difference in opinion about the

00:51:33,330 --> 00:51:40,290
implementation but not necessarily code

00:51:36,210 --> 00:51:43,310
is bad all I would bring in a third

00:51:40,290 --> 00:51:47,430
person to and have a team discussion

00:51:43,310 --> 00:51:49,530
about like she said bring the team on

00:51:47,430 --> 00:51:51,800
par so that we all agree on some

00:51:49,530 --> 00:51:56,130
standards from some ways of doing things

00:51:51,800 --> 00:51:58,020
of course you don't have to endlessly

00:51:56,130 --> 00:52:02,100
dude and literally do that and do it

00:51:58,020 --> 00:52:06,420
with every single little nitpicking

00:52:02,100 --> 00:52:11,370
thing but no it's personal you can

00:52:06,420 --> 00:52:15,920
choose either I don't have a proper way

00:52:11,370 --> 00:52:19,350
of answering that question is that we

00:52:15,920 --> 00:52:24,060
can still discuss after us more

00:52:19,350 --> 00:52:26,100
questions one more I do you have any

00:52:24,060 --> 00:52:28,200
advice on how to deal with people who

00:52:26,100 --> 00:52:34,170
can't help but be offensive with their

00:52:28,200 --> 00:52:37,470
comments then I would go privately and

00:52:34,170 --> 00:52:38,760
say maybe this comment is bit snarky and

00:52:37,470 --> 00:52:41,490
maybe you should watch your language

00:52:38,760 --> 00:52:45,120
because you don't want other people to

00:52:41,490 --> 00:52:48,050
that to do that to you maybe go higher

00:52:45,120 --> 00:52:48,050
up to the CEO or

00:52:49,650 --> 00:52:55,170
all right I think we can have lunch now

00:52:52,359 --> 00:52:55,170
cool thanks

00:52:56,050 --> 00:53:00,269

YouTube URL: https://www.youtube.com/watch?v=C087UCUkVLc


