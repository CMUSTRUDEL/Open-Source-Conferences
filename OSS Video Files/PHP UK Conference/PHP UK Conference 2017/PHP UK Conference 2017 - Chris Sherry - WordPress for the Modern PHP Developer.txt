Title: PHP UK Conference 2017 - Chris Sherry - WordPress for the Modern PHP Developer
Publication date: 2017-04-03
Playlist: PHP UK Conference 2017
Description: 
	Chris has a love-hate relationship with WordPress, but whether you like it or not, it powers 26% of the Internet. Many of these projects have outgrown their humble beginnings as blogs or websites and are now highly customised web applications. However the modern tools we use as PHP developers can be tricky to utilise with the popular blogging platform. This technical talk will guide you through how to make the use of Git, Composer, and other tools familiar to PHP developers within your WordPress install - and help you take back control of your themes, plug-ins, database and environments in a growing application.
Captions: 
	00:00:03,470 --> 00:00:10,500
hi good morning I'm Chris I'm 28 I'm

00:00:07,500 --> 00:00:12,599
from Bournemouth Google would make you

00:00:10,500 --> 00:00:15,440
think that Bob looks like this most of

00:00:12,599 --> 00:00:18,869
the time it actually looks like this I

00:00:15,440 --> 00:00:20,310
helped organize bhp Dorset and I'm also

00:00:18,869 --> 00:00:22,800
a member of my local WordPress user

00:00:20,310 --> 00:00:26,099
group and I work for a company called

00:00:22,800 --> 00:00:28,699
three side cube so we make apps most

00:00:26,099 --> 00:00:31,320
famously for the American Red Cross and

00:00:28,699 --> 00:00:34,200
occasionally we also need to make CMS

00:00:31,320 --> 00:00:36,719
websites and for this we use WordPress

00:00:34,200 --> 00:00:38,879
so WordPress has a big focus on its

00:00:36,719 --> 00:00:40,610
users it's practical features that make

00:00:38,879 --> 00:00:43,050
it easy to make a blog or website

00:00:40,610 --> 00:00:45,360
sometimes even something bigger than a

00:00:43,050 --> 00:00:47,730
website and it strength is that it's

00:00:45,360 --> 00:00:50,719
very portable and you can run it on

00:00:47,730 --> 00:00:53,129
almost any setup it really bakes

00:00:50,719 --> 00:00:56,250
backwards-compatibility so it covers a

00:00:53,129 --> 00:00:58,020
lot of different users needs but in

00:00:56,250 --> 00:01:00,449
doing so it ends up getting a lot of

00:00:58,020 --> 00:01:03,000
stick so not being easiest to maintain

00:01:00,449 --> 00:01:05,729
or maybe collaborates with with multiple

00:01:03,000 --> 00:01:07,560
developers however it's easy to forget

00:01:05,729 --> 00:01:10,080
that it's not there to be my perfect

00:01:07,560 --> 00:01:12,150
developer framework it's there for the

00:01:10,080 --> 00:01:14,880
user it's all about them and that's why

00:01:12,150 --> 00:01:18,090
it's so victus after all if we look at

00:01:14,880 --> 00:01:21,540
the Internet 27 percent of it is run on

00:01:18,090 --> 00:01:23,250
WordPress now and as PHP developers we

00:01:21,540 --> 00:01:25,380
have some great tools that helped us

00:01:23,250 --> 00:01:28,470
develop our applications so there's no

00:01:25,380 --> 00:01:30,479
reason why we can't use WordPress these

00:01:28,470 --> 00:01:32,220
tools with WordPress to make building

00:01:30,479 --> 00:01:35,850
and maintaining our apps easier

00:01:32,220 --> 00:01:37,350
especially within a team so this talk is

00:01:35,850 --> 00:01:39,360
about how we bought our WordPress

00:01:37,350 --> 00:01:41,729
development in line with how we work

00:01:39,360 --> 00:01:43,829
with our other favorite frameworks so in

00:01:41,729 --> 00:01:45,530
these are all suggestions so they're not

00:01:43,829 --> 00:01:48,119
the only way you can do these things but

00:01:45,530 --> 00:01:49,799
these are tried and tested and they work

00:01:48,119 --> 00:01:51,990
really well for me so I would like to

00:01:49,799 --> 00:01:54,240
share them with you so the most

00:01:51,990 --> 00:01:57,390
important tool I think that I use is

00:01:54,240 --> 00:02:00,390
version control the most popular of

00:01:57,390 --> 00:02:02,219
which is git so it gets a SCYTL because

00:02:00,390 --> 00:02:04,200
it helps to see who changed what and

00:02:02,219 --> 00:02:07,680
when but we can have multiple people

00:02:04,200 --> 00:02:09,869
working on false simultaneously we can

00:02:07,680 --> 00:02:11,970
work in features in parallel and we can

00:02:09,869 --> 00:02:13,300
roll back to previous versions and all

00:02:11,970 --> 00:02:15,280
that's really important

00:02:13,300 --> 00:02:18,790
because ultimately it means we can go

00:02:15,280 --> 00:02:20,740
home on time so if you've not used git

00:02:18,790 --> 00:02:23,320
with WordPress before you could do a lot

00:02:20,740 --> 00:02:27,220
worse than just stick the whole thing in

00:02:23,320 --> 00:02:30,280
to get so let's take a look at our

00:02:27,220 --> 00:02:33,030
project here so this is a fresh

00:02:30,280 --> 00:02:39,100
WordPress install straight out the box

00:02:33,030 --> 00:02:40,540
and here's git and but of course it's

00:02:39,100 --> 00:02:43,150
the CMS so it's not quite that simple

00:02:40,540 --> 00:02:44,890
and it's because of this this is

00:02:43,150 --> 00:02:47,200
WordPress its file editor it lets you

00:02:44,890 --> 00:02:49,870
edit things like CSS files and plug-in

00:02:47,200 --> 00:02:51,640
files so it means what's on the server

00:02:49,870 --> 00:02:53,350
isn't necessarily what's in our repo

00:02:51,640 --> 00:02:56,200
because our users can change our code

00:02:53,350 --> 00:02:58,540
base and that reduces how useful it is

00:02:56,200 --> 00:03:00,760
to have a repository and there's a

00:02:58,540 --> 00:03:03,070
really easy way to prevent this and it's

00:03:00,760 --> 00:03:05,350
by adding this line so this goes into WP

00:03:03,070 --> 00:03:08,230
config which is WordPress s config file

00:03:05,350 --> 00:03:10,720
and it's prime example of how WordPress

00:03:08,230 --> 00:03:12,730
lets you customize your experience with

00:03:10,720 --> 00:03:15,180
it and there's a ton of these settings

00:03:12,730 --> 00:03:17,410
in your seymour's I go through this talk

00:03:15,180 --> 00:03:19,500
this is another one for example which

00:03:17,410 --> 00:03:22,330
prevents automatic updates from running

00:03:19,500 --> 00:03:24,520
incidentally if WordPress detects that

00:03:22,330 --> 00:03:26,440
you're using something like get it turns

00:03:24,520 --> 00:03:27,940
off automatically updates anyway but I

00:03:26,440 --> 00:03:30,940
just like to be explicit in that dis

00:03:27,940 --> 00:03:33,370
option so this is the file I've just

00:03:30,940 --> 00:03:35,530
edited this WP config and it's where

00:03:33,370 --> 00:03:37,870
WordPress keeps most of its settings

00:03:35,530 --> 00:03:39,760
there's also some in the database so I

00:03:37,870 --> 00:03:42,430
can commit that change now and that's

00:03:39,760 --> 00:03:45,340
great so I've got all these files in

00:03:42,430 --> 00:03:47,770
here and the only files that you want to

00:03:45,340 --> 00:03:50,200
edit are in this folder the wp-content

00:03:47,770 --> 00:03:53,050
folder and that's what I call my

00:03:50,200 --> 00:03:54,489
application so that's where the code

00:03:53,050 --> 00:03:56,410
that is going to be different for dis

00:03:54,489 --> 00:03:59,920
WordPress site to other WordPress sites

00:03:56,410 --> 00:04:01,840
live now I don't want to touch any of

00:03:59,920 --> 00:04:04,180
these other files it's really hard to

00:04:01,840 --> 00:04:05,860
see where my application code is in here

00:04:04,180 --> 00:04:07,510
for the other files that a part of

00:04:05,860 --> 00:04:11,110
WordPress call so I've gone and tidy

00:04:07,510 --> 00:04:14,440
this up a little bit so we're press lets

00:04:11,110 --> 00:04:16,030
us move files and folders around so what

00:04:14,440 --> 00:04:18,160
I've done is I created a folder called

00:04:16,030 --> 00:04:21,400
WordPress and I've moved all of the core

00:04:18,160 --> 00:04:24,400
files for WordPress into that folder now

00:04:21,400 --> 00:04:26,770
WP config isn't a core file it's created

00:04:24,400 --> 00:04:27,010
by the wizard and WordPress will looks

00:04:26,770 --> 00:04:29,860
at

00:04:27,010 --> 00:04:31,300
in the same folder as all the WordPress

00:04:29,860 --> 00:04:34,650
core files or actually in the folder

00:04:31,300 --> 00:04:34,650
above so it's okay to say that

00:04:34,780 --> 00:04:38,350
but what press doesn't know where the

00:04:36,280 --> 00:04:41,590
core files have moved to when index.php

00:04:38,350 --> 00:04:43,390
gets hit it will unload in the WP head

00:04:41,590 --> 00:04:45,070
and it won't be able to find that file I

00:04:43,390 --> 00:04:47,200
need to tell it where I've moved it to

00:04:45,070 --> 00:04:50,830
so I need to make another change to the

00:04:47,200 --> 00:04:52,780
WP config this this code or would exist

00:04:50,830 --> 00:04:54,370
in that file what I need to do is add

00:04:52,780 --> 00:04:57,760
WordPress to the end of it to tell it

00:04:54,370 --> 00:05:00,280
that I've moved these files I also need

00:04:57,760 --> 00:05:02,620
to make a change to the database so some

00:05:00,280 --> 00:05:05,260
configs options are stored here and

00:05:02,620 --> 00:05:07,630
we've got site URL and home URL here and

00:05:05,260 --> 00:05:09,250
the problem with that is that these

00:05:07,630 --> 00:05:11,290
aren't very well named I think they're

00:05:09,250 --> 00:05:13,570
quite confusing especially where they

00:05:11,290 --> 00:05:15,790
have the same value by default but

00:05:13,570 --> 00:05:18,250
essentially site URL is where those core

00:05:15,790 --> 00:05:21,700
files live and I need to update that as

00:05:18,250 --> 00:05:24,580
well in the database so where is our

00:05:21,700 --> 00:05:27,910
application code now well if I go into

00:05:24,580 --> 00:05:29,980
WP content here this is where we've got

00:05:27,910 --> 00:05:32,290
plugins and our themes that's what our

00:05:29,980 --> 00:05:35,410
application is and WordPress comes out

00:05:32,290 --> 00:05:38,140
the box with a ton of things like Hello

00:05:35,410 --> 00:05:40,480
Dolly as a sample plug-in and got a load

00:05:38,140 --> 00:05:44,290
of themes with 20 appended to the start

00:05:40,480 --> 00:05:46,030
of it so I could put my plug into my

00:05:44,290 --> 00:05:48,820
themes in there but I don't really want

00:05:46,030 --> 00:05:51,040
to mix my application code in with all

00:05:48,820 --> 00:05:53,500
of WordPress's stuff that it comes out

00:05:51,040 --> 00:05:56,380
the box lid so what I've done here is

00:05:53,500 --> 00:06:00,100
I've created a new folder called that WP

00:05:56,380 --> 00:06:02,200
content so I'm maintaining the naming

00:06:00,100 --> 00:06:04,120
structure that WordPress is used to that

00:06:02,200 --> 00:06:07,000
I've got a wp-content folder in the root

00:06:04,120 --> 00:06:10,480
of my project still and I'm going to put

00:06:07,000 --> 00:06:13,330
my plugins my themes into here so I need

00:06:10,480 --> 00:06:15,430
to tell wp-config about this change too

00:06:13,330 --> 00:06:17,650
so you see I've got advanced custom

00:06:15,430 --> 00:06:20,670
fields as an example we plug in a debug

00:06:17,650 --> 00:06:23,260
bar and my own very awesome plugin there

00:06:20,670 --> 00:06:25,150
and yes so I just need to make a quick

00:06:23,260 --> 00:06:26,620
change to WP content I just add these

00:06:25,150 --> 00:06:29,410
two lines and then it knows where to

00:06:26,620 --> 00:06:31,450
find this stuff so now I have a clear

00:06:29,410 --> 00:06:34,890
separation between what's WordPress is

00:06:31,450 --> 00:06:37,570
code and what is my application code and

00:06:34,890 --> 00:06:39,460
this is a massive improvement and yes I

00:06:37,570 --> 00:06:40,600
know what you're thinking all I've done

00:06:39,460 --> 00:06:45,160
is gone and move the folder

00:06:40,600 --> 00:06:47,470
round butt and also why do 2016 take all

00:06:45,160 --> 00:06:48,810
the good memes from us and what does

00:06:47,470 --> 00:06:51,310
this have to do with version control

00:06:48,810 --> 00:06:53,170
well now we have WordPress's code

00:06:51,310 --> 00:06:55,510
contained we have the ability to do

00:06:53,170 --> 00:06:57,670
something that I feel the PHP community

00:06:55,510 --> 00:07:00,790
could maybe do a little less of and it

00:06:57,670 --> 00:07:02,800
nor WordPress so here's a gif ignore

00:07:00,790 --> 00:07:04,750
file and in there I've added the entire

00:07:02,800 --> 00:07:06,970
WordPress folder to that gif ignore

00:07:04,750 --> 00:07:08,800
because ultimately I'm not going to be

00:07:06,970 --> 00:07:10,690
making any changes to any of those files

00:07:08,800 --> 00:07:12,940
so I don't need to keep track of it in

00:07:10,690 --> 00:07:16,750
my version control WordPress has its own

00:07:12,940 --> 00:07:18,250
version control system for that so let's

00:07:16,750 --> 00:07:21,610
see what that looks like if I check it

00:07:18,250 --> 00:07:23,770
out from git so I do a git clone and I

00:07:21,610 --> 00:07:26,350
get these files but there's one missing

00:07:23,770 --> 00:07:29,050
so WordPress has gone they look too

00:07:26,350 --> 00:07:31,360
happy about that we could work out that

00:07:29,050 --> 00:07:34,090
we need WordPress in here because we've

00:07:31,360 --> 00:07:35,410
got a WP content file so we could just

00:07:34,090 --> 00:07:37,300
download WordPress and stick that in

00:07:35,410 --> 00:07:39,100
there but what version of WordPress do

00:07:37,300 --> 00:07:42,100
we need is this a really old project is

00:07:39,100 --> 00:07:43,930
it going to work anything we do know is

00:07:42,100 --> 00:07:45,250
that this project is dependent on

00:07:43,930 --> 00:07:47,770
WordPress it's not going to work without

00:07:45,250 --> 00:07:52,150
it now if only we had a way to manage

00:07:47,770 --> 00:08:01,420
that as a dependency what we do and it's

00:07:52,150 --> 00:08:04,180
called composer so we have composer in

00:08:01,420 --> 00:08:07,360
in PHP and there's a misconception that

00:08:04,180 --> 00:08:11,050
it isn't compatible with WordPress's

00:08:07,360 --> 00:08:12,610
workflow it is it's just not as easy out

00:08:11,050 --> 00:08:14,800
the box as it would be with something

00:08:12,610 --> 00:08:17,010
like larvae or Symphony because it

00:08:14,800 --> 00:08:20,050
doesn't have a composer description file

00:08:17,010 --> 00:08:22,150
now there is an RSC out for it to add

00:08:20,050 --> 00:08:25,330
one I'm not here to debate whether or

00:08:22,150 --> 00:08:27,040
not we're I should have a composer

00:08:25,330 --> 00:08:28,720
description file the only thing I do

00:08:27,040 --> 00:08:30,160
know is that it hasn't happened for a

00:08:28,720 --> 00:08:32,830
while and it's probably not going to

00:08:30,160 --> 00:08:34,960
happen for a long time but for us to be

00:08:32,830 --> 00:08:38,169
able to manage WordPress as a as a

00:08:34,960 --> 00:08:40,120
dependency we need composer we need a

00:08:38,169 --> 00:08:42,880
composer description file in WordPress

00:08:40,120 --> 00:08:44,980
we need it have one now we could make a

00:08:42,880 --> 00:08:48,400
so we could make our own Forks for each

00:08:44,980 --> 00:08:50,200
minor version of WordPress and store

00:08:48,400 --> 00:08:51,460
that in our own repository but we need

00:08:50,200 --> 00:08:53,770
to update that every time there's a

00:08:51,460 --> 00:08:55,000
minor version so thankfully someone's

00:08:53,770 --> 00:08:57,580
already done this for

00:08:55,000 --> 00:08:59,890
so this is a composer package which is

00:08:57,580 --> 00:09:02,200
an automated fork of the WordPress core

00:08:59,890 --> 00:09:03,700
L plates every 15 minutes and it's

00:09:02,200 --> 00:09:05,830
mirrored on packages and it has all the

00:09:03,700 --> 00:09:07,810
tags and all that sort of stuff and it's

00:09:05,830 --> 00:09:09,430
got 1 million installs so it's not just

00:09:07,810 --> 00:09:10,020
me that uses this this is really popular

00:09:09,430 --> 00:09:13,030
now

00:09:10,020 --> 00:09:15,190
best of all composer will install those

00:09:13,030 --> 00:09:18,760
missing styles to that WordPress folder

00:09:15,190 --> 00:09:20,560
that I missing how to do that to explain

00:09:18,760 --> 00:09:22,930
I need to explain a little bit about how

00:09:20,560 --> 00:09:25,210
composer works so this is monologue

00:09:22,930 --> 00:09:26,710
which is just a simple PHP library for

00:09:25,210 --> 00:09:29,830
logging it's a nice simple example I

00:09:26,710 --> 00:09:33,100
could think of and that has a type of

00:09:29,830 --> 00:09:35,500
library so most composer packages have

00:09:33,100 --> 00:09:38,470
this type library and that's going to

00:09:35,500 --> 00:09:41,170
install to the vendor folder this one

00:09:38,470 --> 00:09:42,880
has its own type of WordPress core and

00:09:41,170 --> 00:09:44,800
that will install to the WordPress

00:09:42,880 --> 00:09:47,110
folder and it does that using something

00:09:44,800 --> 00:09:49,420
that's called a custom composer plug-in

00:09:47,110 --> 00:09:50,830
and it's written as part of this package

00:09:49,420 --> 00:09:53,050
and you can write your own it so it's

00:09:50,830 --> 00:09:54,190
actually really cool so if you're

00:09:53,050 --> 00:09:57,460
interested in that sort of stuff come

00:09:54,190 --> 00:09:59,350
find me in the social afterwards but

00:09:57,460 --> 00:10:01,180
back to composer so I'm going to

00:09:59,350 --> 00:10:03,040
initialize composer here and I'm going

00:10:01,180 --> 00:10:05,530
to require this package and then I'm

00:10:03,040 --> 00:10:07,690
going to run composer install and I get

00:10:05,530 --> 00:10:09,580
something like this in my composer Jason

00:10:07,690 --> 00:10:11,590
valve and this is great because if I

00:10:09,580 --> 00:10:13,900
want to update WordPress now all I need

00:10:11,590 --> 00:10:17,710
to do is run composer update and my

00:10:13,900 --> 00:10:21,210
WordPress updates so that's I did a

00:10:17,710 --> 00:10:25,000
composer JSON file and WordPress is back

00:10:21,210 --> 00:10:27,880
so now we have a dependency manager what

00:10:25,000 --> 00:10:30,280
else in here is a dependency if we look

00:10:27,880 --> 00:10:31,930
in our content folder we've got our

00:10:30,280 --> 00:10:33,730
plugins on mice and our theme so I

00:10:31,930 --> 00:10:37,900
didn't write advanced custom fields for

00:10:33,730 --> 00:10:40,000
example that's a third party plug-in but

00:10:37,900 --> 00:10:42,610
these don't have a composer descriptions

00:10:40,000 --> 00:10:44,860
either so that's where W packages comes

00:10:42,610 --> 00:10:47,860
in so this is a custom repository like

00:10:44,860 --> 00:10:52,240
packages but it's a mirror of WordPress

00:10:47,860 --> 00:10:54,160
is plug-in directory and it will in add

00:10:52,240 --> 00:10:55,570
so these have their own types of

00:10:54,160 --> 00:10:58,150
WordPress plug-in and WordPress theme

00:10:55,570 --> 00:11:00,280
and they're going to install to a folder

00:10:58,150 --> 00:11:02,110
called WP content which is in the root

00:11:00,280 --> 00:11:05,590
of the project which you'll notice is

00:11:02,110 --> 00:11:07,990
what I called my new folder that so

00:11:05,590 --> 00:11:10,930
that's that's just going to install plug

00:11:07,990 --> 00:11:12,490
seems exactly what I want them to and it

00:11:10,930 --> 00:11:15,339
does that using something called compose

00:11:12,490 --> 00:11:17,050
installers which is just it basically

00:11:15,339 --> 00:11:18,399
helps composer and stall things into the

00:11:17,050 --> 00:11:20,500
right places for all of your favorite

00:11:18,399 --> 00:11:23,260
frameworks so it's not just WordPress

00:11:20,500 --> 00:11:27,520
this works with Drupal Joomla lots of

00:11:23,260 --> 00:11:30,670
things so because this isn't on regular

00:11:27,520 --> 00:11:33,220
package packages I can't use a composer

00:11:30,670 --> 00:11:36,070
require yet so I just typed this in to

00:11:33,220 --> 00:11:38,709
composer Jason myself tips on getting

00:11:36,070 --> 00:11:40,600
this right if you go to the WordPress

00:11:38,709 --> 00:11:41,680
plug-in directory and you want to know

00:11:40,600 --> 00:11:45,399
the name of the package

00:11:41,680 --> 00:11:47,440
it's the slug essentially to get the

00:11:45,399 --> 00:11:48,970
version number go to the changelog and

00:11:47,440 --> 00:11:50,440
you've got version numbers there and

00:11:48,970 --> 00:11:53,020
this is a good indication if you look

00:11:50,440 --> 00:11:54,880
through the changelog of whether the

00:11:53,020 --> 00:11:56,709
plugin is using semantic versioning or

00:11:54,880 --> 00:12:00,339
not you should be able to tell what kind

00:11:56,709 --> 00:12:01,720
of plugging it is for themes for example

00:12:00,339 --> 00:12:04,540
they usually don't have any versioning

00:12:01,720 --> 00:12:10,029
so you just have to use the desktop arg

00:12:04,540 --> 00:12:11,980
Asterix so I've locked this 24.4 vance

00:12:10,029 --> 00:12:13,750
custom fields so I've not put a tilde or

00:12:11,980 --> 00:12:15,579
a hat on the front of that because I

00:12:13,750 --> 00:12:17,410
don't necessarily trust this to use

00:12:15,579 --> 00:12:19,149
semantic versioning but I know exactly

00:12:17,410 --> 00:12:20,950
what version I want this to be running

00:12:19,149 --> 00:12:23,079
on if I did want to update advanced

00:12:20,950 --> 00:12:27,579
custom fields I just changed this number

00:12:23,079 --> 00:12:29,200
and then run composer update so I need

00:12:27,579 --> 00:12:31,270
to tell compose a way to find this

00:12:29,200 --> 00:12:34,029
package so I need to add into my

00:12:31,270 --> 00:12:36,190
composer file the repository of W

00:12:34,029 --> 00:12:37,839
packages so then when I run combines

00:12:36,190 --> 00:12:41,020
install it knows where to find this

00:12:37,839 --> 00:12:42,550
package you can also do def packages so

00:12:41,020 --> 00:12:44,560
now I've got that repository and now I

00:12:42,550 --> 00:12:46,660
can run composer acquire again on the

00:12:44,560 --> 00:12:49,360
command line and I've added the dev flag

00:12:46,660 --> 00:12:50,920
here because I want the debug bar but I

00:12:49,360 --> 00:12:53,649
want to optionally choose whether I'm

00:12:50,920 --> 00:12:56,170
going to install that plug-in so I run

00:12:53,649 --> 00:12:57,940
composer require with the dev flag for

00:12:56,170 --> 00:13:00,100
my local development so I've got that

00:12:57,940 --> 00:13:01,870
handy debug bar but I don't want it on

00:13:00,100 --> 00:13:04,740
my production server so I just run a

00:13:01,870 --> 00:13:07,510
normal composer install and then I get I

00:13:04,740 --> 00:13:09,940
get just the the ones which are in that

00:13:07,510 --> 00:13:11,470
required block and this is where

00:13:09,940 --> 00:13:16,300
composer starts become really powerful

00:13:11,470 --> 00:13:19,600
for managing our plugins for us so now I

00:13:16,300 --> 00:13:21,449
have these advanced custom fields and

00:13:19,600 --> 00:13:24,129
the debug bar they

00:13:21,449 --> 00:13:25,720
they're managed by composer so I can

00:13:24,129 --> 00:13:26,920
ignore them from my version control I

00:13:25,720 --> 00:13:30,670
don't need to keep these in my

00:13:26,920 --> 00:13:32,589
repository either so I've just blank it

00:13:30,670 --> 00:13:35,319
ignored all of the plugins folder here

00:13:32,589 --> 00:13:39,399
the gate keeps there just keeps the

00:13:35,319 --> 00:13:40,959
folder itself so that handles those but

00:13:39,399 --> 00:13:44,350
what about my awesome plugin that I

00:13:40,959 --> 00:13:46,749
wrote myself so there's a couple of

00:13:44,350 --> 00:13:49,420
options here you can leave it in your

00:13:46,749 --> 00:13:51,579
repository so it's part of my

00:13:49,420 --> 00:13:52,990
application it's single use I'm not

00:13:51,579 --> 00:13:56,110
going to use this for any other website

00:13:52,990 --> 00:14:00,069
very two spoke plugin here

00:13:56,110 --> 00:14:02,829
so I've just not ignored it in the gate

00:14:00,069 --> 00:14:04,899
little bit of a double negative there so

00:14:02,829 --> 00:14:06,730
that's option one option two is I can

00:14:04,899 --> 00:14:10,449
make it public so I could submit it to

00:14:06,730 --> 00:14:12,160
WordPress is plug-in directory but on

00:14:10,449 --> 00:14:13,959
the downside of that it can take a while

00:14:12,160 --> 00:14:15,999
especially if there's lots of plugins in

00:14:13,959 --> 00:14:18,129
the queue you really kind of at their

00:14:15,999 --> 00:14:19,689
whim as to when that can get you know

00:14:18,129 --> 00:14:22,059
when you're trying to ship things that

00:14:19,689 --> 00:14:23,529
can take a while it's also likely that

00:14:22,059 --> 00:14:27,040
you don't want this to be public code

00:14:23,529 --> 00:14:28,750
and so option 3 is if this is a plug-in

00:14:27,040 --> 00:14:30,850
that I want to use across multiple

00:14:28,750 --> 00:14:34,089
installs and I want to be able to use

00:14:30,850 --> 00:14:36,670
composer to pull into my repository what

00:14:34,089 --> 00:14:39,100
I can do is I can host the plug-in in a

00:14:36,670 --> 00:14:40,629
repository on github and that's the same

00:14:39,100 --> 00:14:42,279
for if you've got any private plugins

00:14:40,629 --> 00:14:44,439
that you've maybe paid for as well they

00:14:42,279 --> 00:14:47,199
won't be on W packages so you can use

00:14:44,439 --> 00:14:49,870
the same techniques for this so here's

00:14:47,199 --> 00:14:53,709
my plug-in in all its glory on github

00:14:49,870 --> 00:14:55,930
know how very awesome it is and this is

00:14:53,709 --> 00:14:58,240
good because I can tag versions of my

00:14:55,930 --> 00:15:01,089
plugins and I can lock my different apps

00:14:58,240 --> 00:15:03,759
down to different versions so to explain

00:15:01,089 --> 00:15:06,819
if I've got version 1 which was kind of

00:15:03,759 --> 00:15:08,649
Awesome and I put it on to site 1 and I

00:15:06,819 --> 00:15:11,259
practiced version 1 that's the first

00:15:08,649 --> 00:15:13,029
version that's cool I then make it a bit

00:15:11,259 --> 00:15:14,679
more awesome and I tagged it's version 2

00:15:13,029 --> 00:15:16,870
and I start using out on the second site

00:15:14,679 --> 00:15:18,579
but I may be uploading some backwards

00:15:16,870 --> 00:15:21,040
compatibility there and I don't want to

00:15:18,579 --> 00:15:22,839
upgrade my first site well because I've

00:15:21,040 --> 00:15:25,480
got that lock down to version 1 in

00:15:22,839 --> 00:15:27,490
composer it can just carry on using

00:15:25,480 --> 00:15:29,559
version 1 and that way I don't have to

00:15:27,490 --> 00:15:31,959
maintain two different versions of the

00:15:29,559 --> 00:15:33,879
same code for the plug-in it's all

00:15:31,959 --> 00:15:34,550
contained in the same repository get

00:15:33,879 --> 00:15:36,830
just take

00:15:34,550 --> 00:15:39,560
of that tag things and then I can

00:15:36,830 --> 00:15:42,890
upgrade when I want and by doing this we

00:15:39,560 --> 00:15:45,140
also completely avoid so we also

00:15:42,890 --> 00:15:49,070
completely avoid the review queue which

00:15:45,140 --> 00:15:50,690
is web presses and plug-in directory so

00:15:49,070 --> 00:15:53,770
let's have a look at my plug-in a little

00:15:50,690 --> 00:15:57,260
bit closer here's my composer Jason file

00:15:53,770 --> 00:15:59,750
and in here I have the just the standard

00:15:57,260 --> 00:16:01,520
stuff you need for word to describe to

00:15:59,750 --> 00:16:06,980
composer what this file at what this

00:16:01,520 --> 00:16:09,290
package is so I've got a name and I've

00:16:06,980 --> 00:16:11,510
got a description there and the

00:16:09,290 --> 00:16:14,090
important bit here is that I've said

00:16:11,510 --> 00:16:16,100
that is a wordpress plugin and i've

00:16:14,090 --> 00:16:17,930
required composer installers as part of

00:16:16,100 --> 00:16:20,660
this description to tell it that it's

00:16:17,930 --> 00:16:23,930
dependent on that so that then composer

00:16:20,660 --> 00:16:26,770
knows to just install this into my the

00:16:23,930 --> 00:16:29,660
correct folder that i'm expecting it to

00:16:26,770 --> 00:16:31,640
so now I'm back in my WordPress composer

00:16:29,660 --> 00:16:34,220
file I apologize applies a bit of a jump

00:16:31,640 --> 00:16:38,210
I've gone from the plugins composers

00:16:34,220 --> 00:16:40,190
it's Jason and now I'm in my back into

00:16:38,210 --> 00:16:45,770
my wordpress site and this is this is

00:16:40,190 --> 00:16:47,630
there so if my plugin is public on that

00:16:45,770 --> 00:16:49,760
repository and it's mirrored on packages

00:16:47,630 --> 00:16:51,740
then I can I can just use this

00:16:49,760 --> 00:16:53,030
straightaway and that will just work but

00:16:51,740 --> 00:16:54,620
it's likely that I'm going to have this

00:16:53,030 --> 00:16:56,900
as a private plugin it's not going to be

00:16:54,620 --> 00:16:59,000
mirrored on packages so I need to add

00:16:56,900 --> 00:17:01,250
the repository to tell compose a way to

00:16:59,000 --> 00:17:04,880
find this plug-in and I can literally

00:17:01,250 --> 00:17:06,680
just give it the github URL and give it

00:17:04,880 --> 00:17:08,750
to type VCS which is version control

00:17:06,680 --> 00:17:12,080
system and then I'll be able to use

00:17:08,750 --> 00:17:15,200
composer to install this the downside of

00:17:12,080 --> 00:17:17,060
doing this is being a private plugin you

00:17:15,200 --> 00:17:20,270
might have to play around with SSH keys

00:17:17,060 --> 00:17:22,940
so that your server that you're trying

00:17:20,270 --> 00:17:26,330
to run composer install has permission

00:17:22,940 --> 00:17:30,350
to check out from that repository so

00:17:26,330 --> 00:17:32,660
it's not for everyone but here we go so

00:17:30,350 --> 00:17:36,230
all my plugins here and now manage

00:17:32,660 --> 00:17:38,900
dependencies so what about my theme well

00:17:36,230 --> 00:17:40,730
I only have one theme it's very much

00:17:38,900 --> 00:17:42,140
part of this app because it's custom

00:17:40,730 --> 00:17:44,510
designed for this app I'm not going to

00:17:42,140 --> 00:17:46,100
be using it for a different website so

00:17:44,510 --> 00:17:46,860
we just I want that in the repo that's

00:17:46,100 --> 00:17:49,290
part of my report

00:17:46,860 --> 00:17:53,640
and that's fine if I did use any

00:17:49,290 --> 00:17:56,250
third-party themes then I could use

00:17:53,640 --> 00:17:57,840
composer to install those and then I can

00:17:56,250 --> 00:17:59,850
ignore them from my version control as

00:17:57,840 --> 00:18:01,410
well and then if there's one in

00:17:59,850 --> 00:18:03,780
particular that I've written myself I

00:18:01,410 --> 00:18:06,510
could not ignore that again but to be

00:18:03,780 --> 00:18:08,910
honest I've only got one one theme most

00:18:06,510 --> 00:18:12,540
of time so I just I leave in the

00:18:08,910 --> 00:18:15,330
repository so a caveat of using composer

00:18:12,540 --> 00:18:18,570
with WordPress in this way is that you

00:18:15,330 --> 00:18:20,250
can't just update things at what you can

00:18:18,570 --> 00:18:23,490
you'll use this can they can go and

00:18:20,250 --> 00:18:25,309
click install or update that plug-in but

00:18:23,490 --> 00:18:28,590
your repo will be out of date if they do

00:18:25,309 --> 00:18:30,929
so you probably don't want them to what

00:18:28,590 --> 00:18:33,330
I do is I make a new role for my client

00:18:30,929 --> 00:18:35,250
so I'm the administrator and I give them

00:18:33,330 --> 00:18:36,770
something just underneath that so they

00:18:35,250 --> 00:18:39,809
don't have permissions to install

00:18:36,770 --> 00:18:41,669
plugins and things like that and there's

00:18:39,809 --> 00:18:42,030
great plugins out there that help you do

00:18:41,669 --> 00:18:44,520
that

00:18:42,030 --> 00:18:49,110
so members is an example and you can use

00:18:44,520 --> 00:18:51,360
composer to install it so with composer

00:18:49,110 --> 00:18:53,669
we've defined versions for all of our

00:18:51,360 --> 00:18:56,549
dependencies we've got less third-party

00:18:53,669 --> 00:18:58,440
code in our repository on the downside

00:18:56,549 --> 00:19:01,020
we now have greater reliance on

00:18:58,440 --> 00:19:02,730
third-party availability so if a package

00:19:01,020 --> 00:19:04,770
disappears off WordPress is plug-in

00:19:02,730 --> 00:19:07,200
directory for example we've got a

00:19:04,770 --> 00:19:09,540
problem we can't install our our app

00:19:07,200 --> 00:19:11,010
again but to be honest we probably got

00:19:09,540 --> 00:19:13,080
that problem anyway even if we're not

00:19:11,010 --> 00:19:17,100
using composer so I don't see it as a

00:19:13,080 --> 00:19:20,240
big downside uploads is one dependency

00:19:17,100 --> 00:19:24,720
that we can't manage with with composer

00:19:20,240 --> 00:19:26,690
so I don't commit these again I use git

00:19:24,720 --> 00:19:29,280
ignore to just ignore that whole folder

00:19:26,690 --> 00:19:31,590
and that's because I want to keep my

00:19:29,280 --> 00:19:33,540
repositories small but also as soon as

00:19:31,590 --> 00:19:36,900
I've uploaded anything to my repository

00:19:33,540 --> 00:19:38,429
my repository is out of date sorry

00:19:36,900 --> 00:19:40,470
as soon as anyone uploads anything to

00:19:38,429 --> 00:19:42,929
WordPress my repository is out of date

00:19:40,470 --> 00:19:45,419
and uploaded files they don't really

00:19:42,929 --> 00:19:46,890
need versioning you just sort upload a

00:19:45,419 --> 00:19:49,860
new one every time you want to change

00:19:46,890 --> 00:19:52,620
the image so I don't need get to manage

00:19:49,860 --> 00:19:55,679
that for me so I don't keep a copy of my

00:19:52,620 --> 00:19:57,750
repository so that means that if my

00:19:55,679 --> 00:20:00,630
repository doesn't have any of my

00:19:57,750 --> 00:20:04,410
uploads in it how am i keeping a backup

00:20:00,630 --> 00:20:07,020
of these I personally use the s3 command

00:20:04,410 --> 00:20:09,630
line tool to back my plugins up to

00:20:07,020 --> 00:20:12,690
Amazon s3 and I run out on a cron task

00:20:09,630 --> 00:20:14,010
it just runs nightly and there's if you

00:20:12,690 --> 00:20:15,870
don't want to mess around with a command

00:20:14,010 --> 00:20:18,420
line there's plugins you can use to do

00:20:15,870 --> 00:20:20,820
that this for you human made have one

00:20:18,420 --> 00:20:23,070
I've never used it myself personally but

00:20:20,820 --> 00:20:25,440
I've heard it's very good there are

00:20:23,070 --> 00:20:27,480
others available and this one for

00:20:25,440 --> 00:20:29,460
example is available on packages so I

00:20:27,480 --> 00:20:31,650
can just compose a require that as well

00:20:29,460 --> 00:20:33,360
and you can start to see how using

00:20:31,650 --> 00:20:36,120
composer can really start to speed up

00:20:33,360 --> 00:20:39,330
the installation of everything you need

00:20:36,120 --> 00:20:42,150
all your dependencies so if I've got

00:20:39,330 --> 00:20:44,010
uploads on my server and I've got them

00:20:42,150 --> 00:20:46,440
backed up to s3 what about when I'm

00:20:44,010 --> 00:20:47,820
working locally if I check out my

00:20:46,440 --> 00:20:50,850
project from get I'm not going to have

00:20:47,820 --> 00:20:53,100
any of those uploads well the simplest

00:20:50,850 --> 00:20:55,890
way for me is that I just run a and

00:20:53,100 --> 00:20:57,840
arcing command and command line to pull

00:20:55,890 --> 00:20:59,760
down any files that I don't have from

00:20:57,840 --> 00:21:02,100
the production server and I use the

00:20:59,760 --> 00:21:05,490
production server as king that is my

00:21:02,100 --> 00:21:07,230
source of truth and anything that gets

00:21:05,490 --> 00:21:09,270
changed in the database or upload wise

00:21:07,230 --> 00:21:11,790
always happens on the production server

00:21:09,270 --> 00:21:13,770
and I just pull from it and you can use

00:21:11,790 --> 00:21:15,900
FTP if you don't want to use the command

00:21:13,770 --> 00:21:20,130
line to use the synchronize command and

00:21:15,900 --> 00:21:22,020
map and that works as well with s3 there

00:21:20,130 --> 00:21:24,870
are other cloud storage is available by

00:21:22,020 --> 00:21:27,030
the way this is just the one I use we've

00:21:24,870 --> 00:21:29,480
got a smaller repository and we're not

00:21:27,030 --> 00:21:32,370
keeping version control over our uploads

00:21:29,480 --> 00:21:34,590
so we got faster clone and deploy tones

00:21:32,370 --> 00:21:38,520
as well which is a nice win especially

00:21:34,590 --> 00:21:41,070
for your images are rather large in your

00:21:38,520 --> 00:21:44,870
in your project and we've got remote

00:21:41,070 --> 00:21:48,210
backups of our uploads with databases

00:21:44,870 --> 00:21:50,940
version control is tricky so we could do

00:21:48,210 --> 00:21:53,430
something like add a MySQL dump to the

00:21:50,940 --> 00:21:55,950
each commit there's actually a plug-in

00:21:53,430 --> 00:21:58,230
called reviser that tries to do this but

00:21:55,950 --> 00:22:00,210
I don't think it's needed so WordPress

00:21:58,230 --> 00:22:02,100
has an excellent post revision feature

00:22:00,210 --> 00:22:04,230
you can go back and look at different

00:22:02,100 --> 00:22:06,900
versions of the post you've made that's

00:22:04,230 --> 00:22:08,760
all stored in the database anyway so all

00:22:06,900 --> 00:22:11,220
we really need to do here is back the

00:22:08,760 --> 00:22:12,480
database up and again I use the es3

00:22:11,220 --> 00:22:14,509
command line tool for that

00:22:12,480 --> 00:22:16,459
and then when I'm working

00:22:14,509 --> 00:22:19,099
need to get a copy of the database I

00:22:16,459 --> 00:22:21,229
just do a nice Guelph dump on the server

00:22:19,099 --> 00:22:25,159
copy that down and then install that on

00:22:21,229 --> 00:22:26,809
to my machine if you're using WP CLI for

00:22:25,159 --> 00:22:28,399
example there's some nice command-line

00:22:26,809 --> 00:22:30,739
tools that will make that even easier

00:22:28,399 --> 00:22:32,809
for you or if you don't want to use the

00:22:30,739 --> 00:22:37,549
command line you can use PHP myadmin

00:22:32,809 --> 00:22:40,249
or any FTP client - so I am MySQL client

00:22:37,549 --> 00:22:41,989
to do that there's a potential issue

00:22:40,249 --> 00:22:45,019
with this though by moving these

00:22:41,989 --> 00:22:46,849
databases around I've got different

00:22:45,019 --> 00:22:50,239
settings that I need for different

00:22:46,849 --> 00:22:52,429
environments so by environment I mean

00:22:50,239 --> 00:22:53,929
I've got a production server and I've

00:22:52,429 --> 00:22:55,789
got a staging server and then I've got

00:22:53,929 --> 00:22:57,559
my local machine which I'm developing as

00:22:55,789 --> 00:22:59,569
well and they're all going to have

00:22:57,559 --> 00:23:02,449
different settings some of these are

00:22:59,569 --> 00:23:04,609
stored in WP config as we saw earlier a

00:23:02,449 --> 00:23:07,009
lot of them are stored in WP options

00:23:04,609 --> 00:23:08,479
which is in the database and for every

00:23:07,009 --> 00:23:12,349
environment these need to be different

00:23:08,479 --> 00:23:14,509
so between my staging and my production

00:23:12,349 --> 00:23:16,849
sites site and home for example are

00:23:14,509 --> 00:23:19,279
going to be different now if I'm

00:23:16,849 --> 00:23:20,929
thinking my production database over to

00:23:19,279 --> 00:23:23,929
my staging database to keep that up to

00:23:20,929 --> 00:23:25,849
date with the latest changes I need to

00:23:23,929 --> 00:23:27,469
repeat this task every time I need to go

00:23:25,849 --> 00:23:29,149
and edit these and there is an admin

00:23:27,469 --> 00:23:32,179
screen for that you can go to options

00:23:29,149 --> 00:23:33,859
dot PHP and WP admin change some of

00:23:32,179 --> 00:23:36,829
these settings but you'd have to do that

00:23:33,859 --> 00:23:39,649
every time you think your database so

00:23:36,829 --> 00:23:42,289
here's the best of solution so you can

00:23:39,649 --> 00:23:44,089
define some of these settings in WP

00:23:42,289 --> 00:23:46,759
config instead so we can have it in our

00:23:44,089 --> 00:23:49,249
code and if these are defined then

00:23:46,759 --> 00:23:51,199
WordPress doesn't go to the database to

00:23:49,249 --> 00:23:53,509
look up these values it just takes it

00:23:51,199 --> 00:23:55,459
straight out of this file that has the

00:23:53,509 --> 00:23:57,739
added advantages as well if you use this

00:23:55,459 --> 00:24:00,889
for any reason when it edited say the

00:23:57,739 --> 00:24:02,569
site URL in the database it does it

00:24:00,889 --> 00:24:05,259
doesn't matter because it reads from the

00:24:02,569 --> 00:24:08,599
file instead and they can't change that

00:24:05,259 --> 00:24:10,190
so I've just moved the problem really

00:24:08,599 --> 00:24:12,229
from the database over to my code

00:24:10,190 --> 00:24:14,179
because now I have to handle different

00:24:12,229 --> 00:24:16,459
versions of my code base for different

00:24:14,179 --> 00:24:17,749
environment and this will mess up my

00:24:16,459 --> 00:24:19,279
versions gold if I'm having to

00:24:17,749 --> 00:24:21,889
constantly change this round or put

00:24:19,279 --> 00:24:24,049
comments in things like that now I could

00:24:21,889 --> 00:24:26,690
do something like this so I could define

00:24:24,049 --> 00:24:29,450
an environment variable on my server

00:24:26,690 --> 00:24:31,460
so that's the V host in nginx and then

00:24:29,450 --> 00:24:34,220
that exposes an environment variable to

00:24:31,460 --> 00:24:36,410
PHP that I could then switch on and you

00:24:34,220 --> 00:24:38,300
can do things like check the IP address

00:24:36,410 --> 00:24:40,690
as well but I don't find those a

00:24:38,300 --> 00:24:42,980
particularly reliable ways of doing this

00:24:40,690 --> 00:24:44,480
the environment variable is definitely

00:24:42,980 --> 00:24:46,790
the best way to go if you're going to do

00:24:44,480 --> 00:24:48,830
this but there's lots of these settings

00:24:46,790 --> 00:24:50,120
the whole heap of them actually they're

00:24:48,830 --> 00:24:53,210
all going to be different for the

00:24:50,120 --> 00:24:55,580
different environments I need on top of

00:24:53,210 --> 00:24:58,340
that we also have the added problem that

00:24:55,580 --> 00:25:01,940
we've got this so I've got my database

00:24:58,340 --> 00:25:03,500
credentials in a WP config file which

00:25:01,940 --> 00:25:05,510
I'm then going to commit to my

00:25:03,500 --> 00:25:07,850
repository and if you take anything away

00:25:05,510 --> 00:25:09,800
from this talk I want it to be this you

00:25:07,850 --> 00:25:12,410
should never put your passwords in code

00:25:09,800 --> 00:25:14,480
that you commit to a repo what you've

00:25:12,410 --> 00:25:16,520
got to think about is could your

00:25:14,480 --> 00:25:17,990
codebase be made open-source at any

00:25:16,520 --> 00:25:20,060
moment or could you bring on a

00:25:17,990 --> 00:25:21,320
freelancer to help work on your project

00:25:20,060 --> 00:25:24,440
without having to give away all your

00:25:21,320 --> 00:25:26,750
secrets let's put it another way if I go

00:25:24,440 --> 00:25:28,880
to github comm and I typed this into the

00:25:26,750 --> 00:25:31,520
search am I going to find your password

00:25:28,880 --> 00:25:34,280
and this is just an example I mocked up

00:25:31,520 --> 00:25:36,140
but I guarantee if you go to github and

00:25:34,280 --> 00:25:40,190
you look for this you will find people's

00:25:36,140 --> 00:25:42,170
passwords so there's a PHP library for

00:25:40,190 --> 00:25:44,090
defining environment variables

00:25:42,170 --> 00:25:45,770
it's called dot ends and if you've used

00:25:44,090 --> 00:25:48,170
anything like larva or be familiar to

00:25:45,770 --> 00:25:50,510
you already it has the added advantage

00:25:48,170 --> 00:25:51,620
that you can define environment

00:25:50,510 --> 00:25:53,600
variables without having to edit

00:25:51,620 --> 00:25:56,450
anything on your server you can just do

00:25:53,600 --> 00:25:58,390
it in your code that you upload and we

00:25:56,450 --> 00:26:02,570
can require this package with composer

00:25:58,390 --> 00:26:04,340
so composer require PHP dot ends and

00:26:02,570 --> 00:26:06,740
then that will install to the vendor

00:26:04,340 --> 00:26:09,350
folder so this isn't a wordpress plugin

00:26:06,740 --> 00:26:10,850
this is just a standard PHP library so

00:26:09,350 --> 00:26:13,820
it's going to go into the vendor folder

00:26:10,850 --> 00:26:17,120
and to use dot ends you need to create a

00:26:13,820 --> 00:26:20,030
dot n file it's a well-known plugin it's

00:26:17,120 --> 00:26:21,620
like well I'm in package here and inside

00:26:20,030 --> 00:26:25,640
that it's literally just a key value

00:26:21,620 --> 00:26:26,900
pair of all the secrets that I need or

00:26:25,640 --> 00:26:30,020
anything that's going to be different

00:26:26,900 --> 00:26:34,010
for different environments like my

00:26:30,020 --> 00:26:37,100
password for example so to get this to

00:26:34,010 --> 00:26:38,880
work I need to auto load this class in

00:26:37,100 --> 00:26:41,130
to be able to use the class

00:26:38,880 --> 00:26:44,010
at the top of wp-config I just slap in

00:26:41,130 --> 00:26:45,810
the composer's autoloader and that means

00:26:44,010 --> 00:26:47,670
that I can start calling the dot n fly

00:26:45,810 --> 00:26:50,280
brie and I call the static load function

00:26:47,670 --> 00:26:51,510
there and I load the dot n file you can

00:26:50,280 --> 00:26:53,400
actually call these light if you like

00:26:51,510 --> 00:26:55,290
you can pass that in as a variable if

00:26:53,400 --> 00:26:58,500
you don't pass in a variable we use dot

00:26:55,290 --> 00:27:00,210
n by default and then I've got all my

00:26:58,500 --> 00:27:02,130
settings in here and instead of defining

00:27:00,210 --> 00:27:04,260
the values in here all I'm doing is

00:27:02,130 --> 00:27:06,390
referencing that environment variable

00:27:04,260 --> 00:27:10,620
and you can do this a few ways you've

00:27:06,390 --> 00:27:12,510
got dollar server dollar N or get n pick

00:27:10,620 --> 00:27:20,160
whichever it doesn't matter though

00:27:12,510 --> 00:27:22,860
they'll work ok and the another

00:27:20,160 --> 00:27:24,480
advantage of good dot n is that it gives

00:27:22,860 --> 00:27:26,940
you the ability to do this so the

00:27:24,480 --> 00:27:28,800
required function is really nice in that

00:27:26,940 --> 00:27:30,780
you can tell it what you expect to be in

00:27:28,800 --> 00:27:32,490
your dot n file so if there's anything

00:27:30,780 --> 00:27:35,130
missing from that dot n file it will

00:27:32,490 --> 00:27:36,900
show a dot n V exception which just

00:27:35,130 --> 00:27:38,520
makes it really easy to debug while your

00:27:36,900 --> 00:27:40,680
site's not working because you can see

00:27:38,520 --> 00:27:44,580
exactly as you tells you the thing that

00:27:40,680 --> 00:27:46,680
you're missing and I ignore it because I

00:27:44,580 --> 00:27:48,360
don't want to the whole point of this

00:27:46,680 --> 00:27:51,420
was I'm keeping these passwords out of

00:27:48,360 --> 00:27:53,550
my repository so I created a dot n file

00:27:51,420 --> 00:27:55,530
locally and then I also went and made

00:27:53,550 --> 00:27:56,940
one on my production server and again on

00:27:55,530 --> 00:27:59,270
my staging server and I did this

00:27:56,940 --> 00:28:01,530
manually but only needed to do it once

00:27:59,270 --> 00:28:03,570
if I want to edit any of these files

00:28:01,530 --> 00:28:04,710
it's really at these value so it's

00:28:03,570 --> 00:28:07,860
really easy to just go in and change

00:28:04,710 --> 00:28:10,080
them and if you're using provisioning

00:28:07,860 --> 00:28:12,470
scripts like ansible or puppet or chef

00:28:10,080 --> 00:28:15,990
you can generate this file using

00:28:12,470 --> 00:28:18,570
variables from your vault and I'll go

00:28:15,990 --> 00:28:22,080
into provisioning in a little bit but

00:28:18,570 --> 00:28:25,580
Sadaat ends if easy to locate and it's

00:28:22,080 --> 00:28:28,580
easy to update we've got only a

00:28:25,580 --> 00:28:31,680
configuration for each environment and

00:28:28,580 --> 00:28:33,450
it's not in source control which means

00:28:31,680 --> 00:28:36,510
we're ready for open source at any point

00:28:33,450 --> 00:28:39,270
and it's really easy to store outside of

00:28:36,510 --> 00:28:41,580
your web route so by default WordPress

00:28:39,270 --> 00:28:43,860
it just installs to wherever you install

00:28:41,580 --> 00:28:46,590
it to and all those files are web

00:28:43,860 --> 00:28:49,590
accessible if you've got access to

00:28:46,590 --> 00:28:51,060
change the document on your server you

00:28:49,590 --> 00:28:52,440
can do something like this so I've

00:28:51,060 --> 00:28:55,020
created a folder called web

00:28:52,440 --> 00:28:57,210
I've made that my documentroot and then

00:28:55,020 --> 00:28:59,160
I've moved all the web accessible files

00:28:57,210 --> 00:29:01,410
into that folder so everything that's

00:28:59,160 --> 00:29:03,240
now at this level is not web accessible

00:29:01,410 --> 00:29:05,760
including my dot n file which is really

00:29:03,240 --> 00:29:07,620
important but also my composer file and

00:29:05,760 --> 00:29:09,630
things like that it's harder for someone

00:29:07,620 --> 00:29:12,990
to sniff exactly what configuration I'm

00:29:09,630 --> 00:29:14,930
using inside there I then have what I

00:29:12,990 --> 00:29:18,840
need to be web accessible

00:29:14,930 --> 00:29:20,460
so to summarize we're only keeping what

00:29:18,840 --> 00:29:23,280
we need in our version control

00:29:20,460 --> 00:29:25,050
we've got dependencies managed we've got

00:29:23,280 --> 00:29:27,360
backups of our uploads in our databases

00:29:25,050 --> 00:29:30,420
we've got isolated configurations for

00:29:27,360 --> 00:29:32,760
all of our environment and most of this

00:29:30,420 --> 00:29:34,830
applies even if you're just making a PHP

00:29:32,760 --> 00:29:37,530
project it's not even WordPress specific

00:29:34,830 --> 00:29:38,880
this is just good stuff to do and you're

00:29:37,530 --> 00:29:40,770
probably asking yourself how am I going

00:29:38,880 --> 00:29:42,000
to remember all of this stuff I can see

00:29:40,770 --> 00:29:45,210
some people the front looking a bit like

00:29:42,000 --> 00:29:47,490
this well that's where bedrock comes in

00:29:45,210 --> 00:29:49,920
so bedrock is a wordpress boilerplate

00:29:47,490 --> 00:29:52,020
that I use and it does everything I've

00:29:49,920 --> 00:29:53,880
just mentioned out-of-the-box except the

00:29:52,020 --> 00:29:56,250
s3 backup stuff but as I say there are

00:29:53,880 --> 00:29:58,110
plugins that can do that for you now it

00:29:56,250 --> 00:29:59,480
does require some server configuration

00:29:58,110 --> 00:30:02,760
to get it to work

00:29:59,480 --> 00:30:04,350
mostly changing the document route and

00:30:02,760 --> 00:30:07,350
that's something I don't always have the

00:30:04,350 --> 00:30:10,170
liberty of doing so as a result I don't

00:30:07,350 --> 00:30:11,940
always use bedrock it depends on the

00:30:10,170 --> 00:30:14,790
server it depends on the project and how

00:30:11,940 --> 00:30:17,760
much access I've got to to make these

00:30:14,790 --> 00:30:19,680
changes so and that's the reason this

00:30:17,760 --> 00:30:22,380
talk isn't just here's what bedrock does

00:30:19,680 --> 00:30:25,020
because I like to apply some of this

00:30:22,380 --> 00:30:26,460
stuff where I can and when I have worked

00:30:25,020 --> 00:30:29,310
on projects that are quite locked down

00:30:26,460 --> 00:30:31,380
I've been able to use composer and have

00:30:29,310 --> 00:30:33,450
been able to get that split between my

00:30:31,380 --> 00:30:35,340
application code and what's WordPress

00:30:33,450 --> 00:30:38,910
but I haven't been able to do some of

00:30:35,340 --> 00:30:40,440
the dot end stuff and but that's why

00:30:38,910 --> 00:30:43,950
I've kind of gone through the different

00:30:40,440 --> 00:30:45,330
different steps of doing this with

00:30:43,950 --> 00:30:46,830
bedrock you've got a lot of clever

00:30:45,330 --> 00:30:48,360
people working on this stuff and they're

00:30:46,830 --> 00:30:50,220
keeping up to date all the time and

00:30:48,360 --> 00:30:52,800
that's a really good reason to use it as

00:30:50,220 --> 00:30:54,810
well if you do use bedrock there's a

00:30:52,800 --> 00:30:57,480
couple of naming differences so

00:30:54,810 --> 00:30:59,460
WordPress here and wp-content

00:30:57,480 --> 00:31:02,190
they rename these so they're actually

00:30:59,460 --> 00:31:04,770
called WP and app in bedrock and I like

00:31:02,190 --> 00:31:06,300
the name app it's my application code

00:31:04,770 --> 00:31:09,360
it's quite a nice name for it

00:31:06,300 --> 00:31:10,680
it does have a bit of conflict you need

00:31:09,360 --> 00:31:12,270
to if you're going to change the names

00:31:10,680 --> 00:31:15,030
of these and this just goes into the

00:31:12,270 --> 00:31:16,320
bottom of the composer JSON file don't

00:31:15,030 --> 00:31:19,560
worry about trying to remember this

00:31:16,320 --> 00:31:21,480
bedrock ships of this out the box

00:31:19,560 --> 00:31:23,430
the downside we're having name that

00:31:21,480 --> 00:31:25,620
folder app is that it can cause some

00:31:23,430 --> 00:31:29,130
problems if you're using a plugin has

00:31:25,620 --> 00:31:30,510
some hard-coded links to WP content I

00:31:29,130 --> 00:31:33,150
mean it's probably not a good plug-in if

00:31:30,510 --> 00:31:35,670
it is doing that but if you need that to

00:31:33,150 --> 00:31:36,990
work the easiest way to maintain

00:31:35,670 --> 00:31:38,760
everything working

00:31:36,990 --> 00:31:41,190
when using bedrock when upgrading to

00:31:38,760 --> 00:31:43,080
bedrock it's just to make a symlink from

00:31:41,190 --> 00:31:45,060
WP content and then everything will

00:31:43,080 --> 00:31:46,590
carry on working and the nice thing

00:31:45,060 --> 00:31:48,510
about the sim links is that they get

00:31:46,590 --> 00:31:51,030
stored in the repository so they'll work

00:31:48,510 --> 00:31:54,870
everywhere including in a virtual

00:31:51,030 --> 00:31:56,610
machine for example so when developing

00:31:54,870 --> 00:31:59,370
locally you'll likely want to use a

00:31:56,610 --> 00:32:01,800
virtual machine I use vagrant to manage

00:31:59,370 --> 00:32:04,290
my virtual machines to explain what a

00:32:01,800 --> 00:32:06,390
virtual machine is quickly it simply put

00:32:04,290 --> 00:32:08,700
it's a machine it's a virtual machine

00:32:06,390 --> 00:32:10,800
that isn't it's an emulated computer

00:32:08,700 --> 00:32:14,280
that runs from inside your actual

00:32:10,800 --> 00:32:16,440
computer so you can still software onto

00:32:14,280 --> 00:32:19,290
the virtual machine instead of onto your

00:32:16,440 --> 00:32:21,960
physical machine why do you need one

00:32:19,290 --> 00:32:24,120
well the problem comes is when I'm

00:32:21,960 --> 00:32:25,380
developing a site that has different

00:32:24,120 --> 00:32:27,870
software versions so I'm going to use

00:32:25,380 --> 00:32:30,240
PHP as an example of software does lots

00:32:27,870 --> 00:32:32,580
of the see your web server Apache nginx

00:32:30,240 --> 00:32:36,120
things like that but as an example PHP

00:32:32,580 --> 00:32:38,010
7.1 is on my computer and WordPress

00:32:36,120 --> 00:32:40,620
works there so then I deploy to my

00:32:38,010 --> 00:32:43,170
server and that's running on PHP 7.1 and

00:32:40,620 --> 00:32:45,060
everything just works fine I then go and

00:32:43,170 --> 00:32:46,920
work on a legacy project and that's

00:32:45,060 --> 00:32:49,710
running on a server that's running PHP

00:32:46,920 --> 00:32:51,360
5.2 maybe I've used something like a a

00:32:49,710 --> 00:32:53,850
return type or something because I'm

00:32:51,360 --> 00:32:57,390
used to writing PHP 7 now and then I get

00:32:53,850 --> 00:32:59,700
a fatal error exception if I really want

00:32:57,390 --> 00:33:01,830
to make sure that what I'm working on is

00:32:59,700 --> 00:33:04,350
going to work on the server then I'd

00:33:01,830 --> 00:33:07,560
have to uninstall PHP 7.1 and install

00:33:04,350 --> 00:33:09,080
PHP 5.2 on my computer too to do that I

00:33:07,560 --> 00:33:12,540
don't want to uninstall and reinstall

00:33:09,080 --> 00:33:14,310
PHP all the time so this is a much

00:33:12,540 --> 00:33:15,720
better way of doing it so by using a

00:33:14,310 --> 00:33:18,600
virtual machine I've got a virtual

00:33:15,720 --> 00:33:19,680
machine that has PHP 7.1 and a virtual

00:33:18,600 --> 00:33:21,330
machine that has PHP

00:33:19,680 --> 00:33:22,620
five point two and all the other

00:33:21,330 --> 00:33:25,470
differences between the software

00:33:22,620 --> 00:33:27,060
configurations so they match what I've

00:33:25,470 --> 00:33:28,950
got on my remote server so when I'm

00:33:27,060 --> 00:33:31,830
developing locally I know that my site

00:33:28,950 --> 00:33:33,660
is going to work when I deploy it it

00:33:31,830 --> 00:33:35,100
also uncluttered your machine so you

00:33:33,660 --> 00:33:36,810
don't have to have all that software

00:33:35,100 --> 00:33:39,330
directly on your machine and when you

00:33:36,810 --> 00:33:40,950
delete the virtual machine all that goes

00:33:39,330 --> 00:33:43,380
with it that just disappears so that's

00:33:40,950 --> 00:33:45,600
great we've got our software versions

00:33:43,380 --> 00:33:47,520
contained so that's nice and it's as

00:33:45,600 --> 00:33:50,160
similar as possible to production that's

00:33:47,520 --> 00:33:52,080
really the key here is making sure that

00:33:50,160 --> 00:33:54,990
you know everything's going to work

00:33:52,080 --> 00:33:57,000
between your different environment on

00:33:54,990 --> 00:33:59,040
the downside the shared file system runs

00:33:57,000 --> 00:34:00,840
slow so I've actually found when I'm

00:33:59,040 --> 00:34:03,000
editing PHP files and then I go and

00:34:00,840 --> 00:34:05,130
refresh in my browser I actually been

00:34:03,000 --> 00:34:07,140
too quick to go to the browser and I get

00:34:05,130 --> 00:34:10,020
an error where it's loaded half of the

00:34:07,140 --> 00:34:13,650
PHP filing it just stops and it shows an

00:34:10,020 --> 00:34:16,560
error and says half completed words so

00:34:13,650 --> 00:34:19,080
it can be a little slow and it's not

00:34:16,560 --> 00:34:20,490
quite as cool always hip as docker but I

00:34:19,080 --> 00:34:23,610
don't know much about docker at this

00:34:20,490 --> 00:34:24,870
point it's also very memory hungry so

00:34:23,610 --> 00:34:27,990
you'll probably be wondering if you've

00:34:24,870 --> 00:34:29,940
got say ten or more virtual machines for

00:34:27,990 --> 00:34:35,130
ten or more sites why you haven't got

00:34:29,940 --> 00:34:37,590
any RAM left but as I say I've having a

00:34:35,130 --> 00:34:39,840
virtual machine identical production is

00:34:37,590 --> 00:34:41,390
really why it's worth using and how do

00:34:39,840 --> 00:34:44,640
you ensure that they're similar

00:34:41,390 --> 00:34:47,220
so this web provisioning comes in so I

00:34:44,640 --> 00:34:49,590
use ansible the chef and puppet are also

00:34:47,220 --> 00:34:51,630
alternatives and to explain what an

00:34:49,590 --> 00:34:55,320
support does is the script that I run

00:34:51,630 --> 00:34:58,140
that tells the server what to install on

00:34:55,320 --> 00:35:01,560
it so here I'm telling my virtual

00:34:58,140 --> 00:35:03,330
machine hey go install PHP 7.1 and then

00:35:01,560 --> 00:35:05,700
I can do the same when the same script

00:35:03,330 --> 00:35:07,830
for my production server as well and I

00:35:05,700 --> 00:35:10,500
go hey you have seven point one and

00:35:07,830 --> 00:35:12,360
another one and another one it will do

00:35:10,500 --> 00:35:16,320
exactly the same thing every time I run

00:35:12,360 --> 00:35:17,880
it so this means I can provision service

00:35:16,320 --> 00:35:20,960
with a single command which is just a

00:35:17,880 --> 00:35:22,860
joy to watch if you've ever seen it

00:35:20,960 --> 00:35:24,630
you've got very descriptive

00:35:22,860 --> 00:35:26,340
configurations in ansible that's why I

00:35:24,630 --> 00:35:28,140
like it the best out of three I think

00:35:26,340 --> 00:35:31,500
it's just really clear and easy to see

00:35:28,140 --> 00:35:32,910
what it does and idempotency so every

00:35:31,500 --> 00:35:33,420
time I run this I'm going to get the

00:35:32,910 --> 00:35:35,010
same

00:35:33,420 --> 00:35:37,109
which means I've got reproducible

00:35:35,010 --> 00:35:39,299
service so if my server disappeared off

00:35:37,109 --> 00:35:41,579
the face of the earth one day I can get

00:35:39,299 --> 00:35:44,160
my server back in less than an hour

00:35:41,579 --> 00:35:46,289
because I can just run the script

00:35:44,160 --> 00:35:48,539
against it build a whole new server and

00:35:46,289 --> 00:35:52,230
then I can get my backups and my uploads

00:35:48,539 --> 00:35:55,319
out of s3 and deploy my code from my git

00:35:52,230 --> 00:35:57,450
repository and I'm ready to go again now

00:35:55,319 --> 00:36:00,089
originally I wrote my own ansible

00:35:57,450 --> 00:36:02,250
scripts to manage my WordPress installs

00:36:00,089 --> 00:36:04,740
but it was a lot of work to keep that up

00:36:02,250 --> 00:36:07,410
to date and that's where trellis came in

00:36:04,740 --> 00:36:10,589
so trellis is another project by the

00:36:07,410 --> 00:36:12,420
same people who run bedrock and it comes

00:36:10,589 --> 00:36:13,859
with a vagrant file as well as ansible

00:36:12,420 --> 00:36:17,569
scripts so you've got your whole

00:36:13,859 --> 00:36:17,569
developer environment there for you and

00:36:18,109 --> 00:36:23,430
it has multi-site which is cool and it's

00:36:21,059 --> 00:36:27,240
got WP CLI out the box it's got a lot of

00:36:23,430 --> 00:36:28,890
nice sugar in there and it's got deploy

00:36:27,240 --> 00:36:31,200
scripts that have built hooks which are

00:36:28,890 --> 00:36:32,730
really nice for your gulps and your

00:36:31,200 --> 00:36:34,769
grunts and things like that I'm not

00:36:32,730 --> 00:36:37,529
really that front-end II but front-end

00:36:34,769 --> 00:36:40,200
developers love that and it's got an

00:36:37,529 --> 00:36:42,299
active open-source community again on

00:36:40,200 --> 00:36:44,730
the downside usually does more than you

00:36:42,299 --> 00:36:46,980
need so it's like WordPress itself it's

00:36:44,730 --> 00:36:49,890
join a cater for a whole range of use

00:36:46,980 --> 00:36:51,299
cases so you will find that that those

00:36:49,890 --> 00:36:53,490
providing scripts are putting a lot of

00:36:51,299 --> 00:36:56,940
tools on to your server maybe you don't

00:36:53,490 --> 00:37:01,109
need and it's really fiddly to update so

00:36:56,940 --> 00:37:04,799
is bedrock and this is where I don't

00:37:01,109 --> 00:37:06,420
like them as much because I found the

00:37:04,799 --> 00:37:08,700
best way to update them is to do this

00:37:06,420 --> 00:37:10,349
which if you get through strong you

00:37:08,700 --> 00:37:12,779
might be able to do it took me a while

00:37:10,349 --> 00:37:15,690
to get my head around it I had an

00:37:12,779 --> 00:37:18,869
upstream of trellis the git repository

00:37:15,690 --> 00:37:23,819
for trellis so that gives me an upstream

00:37:18,869 --> 00:37:25,950
and then I can fetch form from the

00:37:23,819 --> 00:37:27,269
master I can push the latest go from

00:37:25,950 --> 00:37:31,049
there and then I do this weird sort of

00:37:27,269 --> 00:37:33,319
gets merge thing it seems to work but

00:37:31,049 --> 00:37:36,569
the problem with doing this is if you're

00:37:33,319 --> 00:37:38,940
your trellis install you've customized

00:37:36,569 --> 00:37:40,710
it because you wanted to do provision

00:37:38,940 --> 00:37:43,619
some more extra things or change the way

00:37:40,710 --> 00:37:45,900
it works for quite a customized install

00:37:43,619 --> 00:37:47,160
it means when you then get the latest

00:37:45,900 --> 00:37:49,039
code from trellis

00:37:47,160 --> 00:37:51,569
you're going to get most conflicts

00:37:49,039 --> 00:37:54,059
things aren't going to work out the box

00:37:51,569 --> 00:37:57,210
and you have to go and sort those out so

00:37:54,059 --> 00:37:58,970
chalice is great for generic apps if

00:37:57,210 --> 00:38:01,559
you're just running a simple WordPress

00:37:58,970 --> 00:38:04,259
blog or something it's great to just use

00:38:01,559 --> 00:38:07,200
- to get yourself set up with your own

00:38:04,259 --> 00:38:08,940
server provisioning but as I say for

00:38:07,200 --> 00:38:10,650
highly customized build you might want

00:38:08,940 --> 00:38:12,239
to start from scratch and write your own

00:38:10,650 --> 00:38:13,890
ansible and there's lots of there's

00:38:12,239 --> 00:38:17,400
ansible galaxy which is a bit like

00:38:13,890 --> 00:38:20,009
composer in there's lots of pre-written

00:38:17,400 --> 00:38:21,859
scripts for things like nginx or PHP

00:38:20,009 --> 00:38:23,910
that you can pull in and put together

00:38:21,859 --> 00:38:29,039
whether you should use trellis or not

00:38:23,910 --> 00:38:32,039
I'm on the fence pun intended my last

00:38:29,039 --> 00:38:35,190
section here is Auto loading so we've

00:38:32,039 --> 00:38:36,869
got an auto loader that's that's already

00:38:35,190 --> 00:38:38,430
in there and that gives us a lot for

00:38:36,869 --> 00:38:40,890
thrift for free because it means we can

00:38:38,430 --> 00:38:43,739
use anything on practice now or anything

00:38:40,890 --> 00:38:46,739
that isn't for example we can use twig

00:38:43,739 --> 00:38:49,079
twig is my absolute favorite thing to

00:38:46,739 --> 00:38:51,539
use with WordPress it makes templating

00:38:49,079 --> 00:38:53,819
just a joy and there's a plug-in called

00:38:51,539 --> 00:38:55,859
Timbo that abstracts some of the loop

00:38:53,819 --> 00:38:58,049
and stuff away from WordPress that I

00:38:55,859 --> 00:38:59,519
don't quite understand which is nice

00:38:58,049 --> 00:39:02,249
because I don't need to understand it

00:38:59,519 --> 00:39:03,930
it's abstracted for me it's all use this

00:39:02,249 --> 00:39:06,630
all the time and I pull it in with

00:39:03,930 --> 00:39:08,910
composer and I just use it guzzle for

00:39:06,630 --> 00:39:10,410
HTTP requests again another library I

00:39:08,910 --> 00:39:13,380
use a lot when I'm interfacing with

00:39:10,410 --> 00:39:16,049
api's and things like that monologue you

00:39:13,380 --> 00:39:19,289
finally got a you missing PS r3 logger

00:39:16,049 --> 00:39:20,789
in WordPress centuries great for logging

00:39:19,289 --> 00:39:22,710
I mean this is just all packages that

00:39:20,789 --> 00:39:24,719
I've used before whoops if you want nice

00:39:22,710 --> 00:39:27,509
that error handling PHP units are

00:39:24,719 --> 00:39:28,979
testing any of the symphony components

00:39:27,509 --> 00:39:30,569
you can start using I've used Symphony

00:39:28,979 --> 00:39:33,839
console with WordPress it works really

00:39:30,569 --> 00:39:36,029
nicely so now we can start using our CMS

00:39:33,839 --> 00:39:37,950
like we use all of our other frameworks

00:39:36,029 --> 00:39:40,049
so whilst we're working with WordPress

00:39:37,950 --> 00:39:43,319
we start to feel like modern PHP

00:39:40,049 --> 00:39:45,630
developers once again so I've been Chris

00:39:43,319 --> 00:39:48,150
Larry you can tweet me at tweeting

00:39:45,630 --> 00:39:50,789
sherry or you can find me on the PHP

00:39:48,150 --> 00:39:52,109
dorset slack channel thank you so much

00:39:50,789 --> 00:39:54,239
for listening I hope this talk is really

00:39:52,109 --> 00:39:55,970
helpful and please let me know if you

00:39:54,239 --> 00:40:03,859
have any questions

00:39:55,970 --> 00:40:07,609
[Applause]

00:40:03,859 --> 00:40:07,609
do we have any questions

00:40:10,579 --> 00:40:17,549
hi I'm I'm Rob I'm 32 PHP developer and

00:40:15,420 --> 00:40:21,809
somehow I found myself running a

00:40:17,549 --> 00:40:23,640
wordpress team this is Val campaign this

00:40:21,809 --> 00:40:25,020
was about nine months ago but I saw one

00:40:23,640 --> 00:40:27,690
of your earlier talks and I owe you a

00:40:25,020 --> 00:40:30,119
big thank-you because we've basically

00:40:27,690 --> 00:40:32,160
implemented everything that you've done

00:40:30,119 --> 00:40:34,470
and I cannot thank you enough I think

00:40:32,160 --> 00:40:36,299
I'd have I just throw myself out of a

00:40:34,470 --> 00:40:38,670
window if it wasn't so what you've done

00:40:36,299 --> 00:40:40,200
there and it's nice to see the update

00:40:38,670 --> 00:40:41,490
you've done some more work since I saw

00:40:40,200 --> 00:40:45,299
the original tool there were a few

00:40:41,490 --> 00:40:46,950
mistakes so and I would anyone who's not

00:40:45,299 --> 00:40:49,730
doing this with WordPress should be

00:40:46,950 --> 00:40:52,619
doing exactly this this is brilliant and

00:40:49,730 --> 00:40:54,329
also currently looking for more

00:40:52,619 --> 00:40:56,579
developers to my team so if any of you

00:40:54,329 --> 00:40:58,410
want a job and want to work like this we

00:40:56,579 --> 00:40:59,819
WordPress rather than old WordPress come

00:40:58,410 --> 00:41:03,210
and talk to me

00:40:59,819 --> 00:41:05,010
I do have hate to say this but I do have

00:41:03,210 --> 00:41:06,720
a question which I think you touched on

00:41:05,010 --> 00:41:09,059
the end because the point we've got to

00:41:06,720 --> 00:41:10,680
is we've got to that point roughly I

00:41:09,059 --> 00:41:12,630
think we're just slightly behind where

00:41:10,680 --> 00:41:15,030
you are but we're using vagrant we use

00:41:12,630 --> 00:41:17,069
Scotch box we're close it's really nice

00:41:15,030 --> 00:41:18,960
we're pulling in things like eloquent

00:41:17,069 --> 00:41:23,640
now so we can play with databases a bit

00:41:18,960 --> 00:41:25,109
better but the thing about tweak we've

00:41:23,640 --> 00:41:27,839
hit a bit of a brick wall with the

00:41:25,109 --> 00:41:30,420
themes because the themes in WordPress

00:41:27,839 --> 00:41:31,980
they don't you know follow separation

00:41:30,420 --> 00:41:35,040
and concerns they've got mixed business

00:41:31,980 --> 00:41:36,359
logic and view could you tell me a bit

00:41:35,040 --> 00:41:38,069
more and everyone else a bit more about

00:41:36,359 --> 00:41:40,079
how you've used twig and how you've

00:41:38,069 --> 00:41:42,000
implemented to it to achieve maybe more

00:41:40,079 --> 00:41:44,640
of a separation concerned well have you

00:41:42,000 --> 00:41:46,410
used the timber starter theme at all no

00:41:44,640 --> 00:41:50,690
so if you go and get help there is a

00:41:46,410 --> 00:41:53,339
timber starter theme which gives you

00:41:50,690 --> 00:41:55,470
twig templates to get you started

00:41:53,339 --> 00:41:59,490
basically they're just really bare they

00:41:55,470 --> 00:42:01,410
just do things like loop over posts and

00:41:59,490 --> 00:42:03,990
things like that but it's a really good

00:42:01,410 --> 00:42:06,410
starting place to start off with and

00:42:03,990 --> 00:42:10,560
it's got the controller so like page.php

00:42:06,410 --> 00:42:12,570
and single dot PHP archive dot PHP and

00:42:10,560 --> 00:42:14,610
interfaces with tweak really nicely

00:42:12,570 --> 00:42:16,290
there so that's a good place to start

00:42:14,610 --> 00:42:19,290
and there's also a project called

00:42:16,290 --> 00:42:21,990
lumberjack which Adams going to smile at

00:42:19,290 --> 00:42:25,500
me for Cruces and they said a project by

00:42:21,990 --> 00:42:27,420
by his company which takes it a step

00:42:25,500 --> 00:42:28,950
further and they've taken what the

00:42:27,420 --> 00:42:32,730
timber starter theme does and what

00:42:28,950 --> 00:42:35,040
timber does and they've kind of boosted

00:42:32,730 --> 00:42:37,770
it with some more stuff that just works

00:42:35,040 --> 00:42:45,390
really nicely out the box so I recommend

00:42:37,770 --> 00:42:53,460
checking that one out as well any more

00:42:45,390 --> 00:42:55,290
questions I should just have one to

00:42:53,460 --> 00:42:57,360
thank you for them for your kind words

00:42:55,290 --> 00:42:59,280
as far that's that's what makes putting

00:42:57,360 --> 00:43:01,470
all the hard work and prepping and

00:42:59,280 --> 00:43:05,580
making these talks worthwhile is yes

00:43:01,470 --> 00:43:07,860
it's amazing here thank you hi I'm just

00:43:05,580 --> 00:43:10,410
a small question do you disable auto

00:43:07,860 --> 00:43:13,380
update for your WordPress site do you

00:43:10,410 --> 00:43:17,850
allow your users or sub admins to Abid

00:43:13,380 --> 00:43:19,320
WordPress itself so I before my

00:43:17,850 --> 00:43:21,450
professional projects or what I do at

00:43:19,320 --> 00:43:23,910
work we update them ourselves we don't

00:43:21,450 --> 00:43:27,480
give the users any access to do that

00:43:23,910 --> 00:43:29,370
sort of updating and that's because when

00:43:27,480 --> 00:43:31,830
there's a new version of WordPress out

00:43:29,370 --> 00:43:33,930
instead of just trusting it to work

00:43:31,830 --> 00:43:35,370
which most of the time it does but

00:43:33,930 --> 00:43:40,200
there's always a case that it might not

00:43:35,370 --> 00:43:42,690
is we can update locally we can test it

00:43:40,200 --> 00:43:45,360
locally then we can deploy it to that

00:43:42,690 --> 00:43:47,190
update to our staging server and we can

00:43:45,360 --> 00:43:48,810
test it there and then when we're

00:43:47,190 --> 00:43:50,910
finally happy that it hasn't broken

00:43:48,810 --> 00:43:52,950
anything and all our tests pass as well

00:43:50,910 --> 00:43:54,450
we've got any tests we then merge it

00:43:52,950 --> 00:43:56,790
into master and then we deploy it and

00:43:54,450 --> 00:43:58,560
it's very controlled in that way that

00:43:56,790 --> 00:44:01,950
said I have a couple of personal

00:43:58,560 --> 00:44:04,890
projects which I maybe don't keep quite

00:44:01,950 --> 00:44:07,710
as much of an eye on or it's they're not

00:44:04,890 --> 00:44:10,980
as business critical as what I do for

00:44:07,710 --> 00:44:13,290
work so they're they get you know tiny

00:44:10,980 --> 00:44:16,590
amount of hits compared to the work the

00:44:13,290 --> 00:44:20,220
sites are do for work and their I do

00:44:16,590 --> 00:44:21,900
find that my clients or I say clients my

00:44:20,220 --> 00:44:23,640
friends and family who I've made these

00:44:21,900 --> 00:44:24,180
websites for they get annoyed by seeing

00:44:23,640 --> 00:44:25,770
that

00:44:24,180 --> 00:44:27,420
WordPress is slightly out of date and

00:44:25,770 --> 00:44:29,730
they'll they want to click that button

00:44:27,420 --> 00:44:31,650
to update it and I I do let them do that

00:44:29,730 --> 00:44:34,440
but then every now and then I just go in

00:44:31,650 --> 00:44:38,220
and I pull the files down from the

00:44:34,440 --> 00:44:40,380
production site and I see the disk of

00:44:38,220 --> 00:44:42,270
what's changed which is usually just

00:44:40,380 --> 00:44:44,190
that WordPress is updated I update

00:44:42,270 --> 00:44:45,390
WordPress on composer make sure that

00:44:44,190 --> 00:44:47,069
it's no files different then then I

00:44:45,390 --> 00:44:50,700
commit that so I've got the latest

00:44:47,069 --> 00:44:52,170
version of that there was something else

00:44:50,700 --> 00:45:02,190
I was going to say on that point but

00:44:52,170 --> 00:45:06,780
I've forgotten it thank you so sometimes

00:45:02,190 --> 00:45:08,309
with projects you have like legal

00:45:06,780 --> 00:45:10,920
dependencies or plugins and stuff that

00:45:08,309 --> 00:45:14,059
you bring in how do you how do you

00:45:10,920 --> 00:45:16,079
manage those like those ones are core

00:45:14,059 --> 00:45:18,780
can't be turned off like you got some

00:45:16,079 --> 00:45:20,250
plugins like Google Analytics where she

00:45:18,780 --> 00:45:21,780
or anyone on production but those on my

00:45:20,250 --> 00:45:24,030
gate I've I've got them failed how do

00:45:21,780 --> 00:45:25,260
you handle how do you handle that to

00:45:24,030 --> 00:45:26,880
make sure that I get under like a

00:45:25,260 --> 00:45:28,079
question I'm just going to go back to

00:45:26,880 --> 00:45:29,490
the point I've remembered that I was

00:45:28,079 --> 00:45:31,710
going to make which is if you use

00:45:29,490 --> 00:45:34,380
bedrock I'm not sure exactly where it

00:45:31,710 --> 00:45:36,750
does it but it will basically hide the

00:45:34,380 --> 00:45:38,460
WordPress needs to update button from

00:45:36,750 --> 00:45:40,589
the users so they don't see that

00:45:38,460 --> 00:45:41,520
WordPress is out date which is quite

00:45:40,589 --> 00:45:43,710
nice because then you don't get those

00:45:41,520 --> 00:45:46,020
callers of people saying oh my WordPress

00:45:43,710 --> 00:45:48,660
is out date and then obviously if you

00:45:46,020 --> 00:45:50,400
follow WordPress enough you you'll be

00:45:48,660 --> 00:45:51,720
subscribed to some sort of email chain

00:45:50,400 --> 00:45:54,299
often try that where you know when

00:45:51,720 --> 00:45:59,190
WordPress has been updated and for your

00:45:54,299 --> 00:46:02,190
question Adam with must use plugins so a

00:45:59,190 --> 00:46:05,640
bedrock has a must use plug-in of its

00:46:02,190 --> 00:46:08,640
own which is an Auto loading plug-in

00:46:05,640 --> 00:46:10,319
which will the thing with must use

00:46:08,640 --> 00:46:12,869
plugins is if you want to use them the

00:46:10,319 --> 00:46:15,119
basis of single PHP files you can't have

00:46:12,869 --> 00:46:17,369
a like a whole folder in there and what

00:46:15,119 --> 00:46:20,220
bedrock has is this this own must use

00:46:17,369 --> 00:46:22,650
plug-in which will effectively allow you

00:46:20,220 --> 00:46:25,500
to treat normal plugins which are in

00:46:22,650 --> 00:46:27,930
folders like must use plugins and they

00:46:25,500 --> 00:46:31,319
actually will then appear as must use

00:46:27,930 --> 00:46:34,049
plugins if I just jump out of here and I

00:46:31,319 --> 00:46:34,400
go in find the slide for a second there

00:46:34,049 --> 00:46:41,910
with

00:46:34,400 --> 00:46:44,100
this one so in here if you want a must

00:46:41,910 --> 00:46:47,780
use plug-in what you can do is you can

00:46:44,100 --> 00:46:51,150
add an installer path that is is web app

00:46:47,780 --> 00:46:53,760
mu plugins and then the name of the

00:46:51,150 --> 00:46:56,460
folder and then in the intersection at

00:46:53,760 --> 00:46:58,800
the end there there's an array that that

00:46:56,460 --> 00:47:01,020
will take its as type of wordpress

00:46:58,800 --> 00:47:02,460
plugin you can also do type mu plug-in

00:47:01,020 --> 00:47:06,300
because there are some MOU plugins that

00:47:02,460 --> 00:47:09,180
you can get off the web presses plug-in

00:47:06,300 --> 00:47:11,370
directory but you can also just define

00:47:09,180 --> 00:47:13,680
the name of packages you want in there

00:47:11,370 --> 00:47:16,380
so I could do WordPress type WordPress

00:47:13,680 --> 00:47:18,210
plug-in comma and then advanced custom

00:47:16,380 --> 00:47:20,940
fields for example and I can put that in

00:47:18,210 --> 00:47:23,280
the MU plug-in bit of this which means

00:47:20,940 --> 00:47:26,220
that it will then install it like in mu

00:47:23,280 --> 00:47:27,780
plug-in but it's actually a plug-in it's

00:47:26,220 --> 00:47:29,310
kind of a little hack around WordPress

00:47:27,780 --> 00:47:32,190
but it means that they can't be turned

00:47:29,310 --> 00:47:33,360
off ultimately though I don't think you

00:47:32,190 --> 00:47:36,050
should be giving your users the ability

00:47:33,360 --> 00:47:38,190
to turn off plugins and things like that

00:47:36,050 --> 00:47:40,080
another solution I've done which is a

00:47:38,190 --> 00:47:42,540
little bit simpler as I I wrote a little

00:47:40,080 --> 00:47:44,790
plug in as an mu plug-in so just a

00:47:42,540 --> 00:47:47,160
single file PHP plug-in which literally

00:47:44,790 --> 00:47:49,710
just goes on and a means and it

00:47:47,160 --> 00:47:52,110
activates all the plugins so as soon as

00:47:49,710 --> 00:47:54,030
WordPress runs it just activates all the

00:47:52,110 --> 00:47:55,950
plugins I can't actually turn them off

00:47:54,030 --> 00:47:58,550
that was nice for a project that I

00:47:55,950 --> 00:48:02,210
always wanted all of the plugins on

00:47:58,550 --> 00:48:02,210

YouTube URL: https://www.youtube.com/watch?v=v57UWTXla3M


